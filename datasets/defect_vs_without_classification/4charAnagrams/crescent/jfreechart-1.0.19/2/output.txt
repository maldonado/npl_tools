// TBLRC // 01011 - bottom, right and center	WITHOUT_CLASSIFICATION	0.999997767057481	WITHOUT_CLASSIFICATION	2.232942519059059E-6	DEFECT
// TBLRC // 01100	WITHOUT_CLASSIFICATION	0.9999356275602111	WITHOUT_CLASSIFICATION	6.437243978891893E-5	DEFECT
// TBLRC // 01101 - bottom, left and center	WITHOUT_CLASSIFICATION	0.999998077267801	WITHOUT_CLASSIFICATION	1.9227321990510526E-6	DEFECT
// TBLRC // 01110 - bottom. left and right	WITHOUT_CLASSIFICATION	0.9999983047214521	WITHOUT_CLASSIFICATION	1.6952785478746406E-6	DEFECT
// TBLRC // 01111	WITHOUT_CLASSIFICATION	0.9999261998597215	WITHOUT_CLASSIFICATION	7.380014027850876E-5	DEFECT
// TBLRC // 10000 - top item only	WITHOUT_CLASSIFICATION	0.9999956603878373	WITHOUT_CLASSIFICATION	4.339612162752121E-6	DEFECT
// TBLRC // 10001 - top and center only	WITHOUT_CLASSIFICATION	0.9999993257793114	WITHOUT_CLASSIFICATION	6.742206886242185E-7	DEFECT
// TBLRC // 10010 - right and top only	WITHOUT_CLASSIFICATION	0.9999990274538156	WITHOUT_CLASSIFICATION	9.725461843608672E-7	DEFECT
// TBLRC // 10011 - top, right and center	WITHOUT_CLASSIFICATION	0.9999990483828604	WITHOUT_CLASSIFICATION	9.516171396334902E-7	DEFECT
// TBLRC // 10100 - top and left only	WITHOUT_CLASSIFICATION	0.999998726447281	WITHOUT_CLASSIFICATION	1.2735527190369131E-6	DEFECT
// range	WITHOUT_CLASSIFICATION	0.9999708393737138	WITHOUT_CLASSIFICATION	2.9160626286238994E-5	DEFECT
// units	WITHOUT_CLASSIFICATION	0.9999696234699709	WITHOUT_CLASSIFICATION	3.0376530029035132E-5	DEFECT
// interval	WITHOUT_CLASSIFICATION	0.9999744373971164	WITHOUT_CLASSIFICATION	2.5562602883512525E-5	DEFECT
// dial outline paint	WITHOUT_CLASSIFICATION	0.9999967381763185	WITHOUT_CLASSIFICATION	3.2618236815180785E-6	DEFECT
// dial shape	WITHOUT_CLASSIFICATION	0.9999945153602874	WITHOUT_CLASSIFICATION	5.484639712632588E-6	DEFECT
// dial background paint	WITHOUT_CLASSIFICATION	0.9999987234355607	WITHOUT_CLASSIFICATION	1.2765644392742833E-6	DEFECT
// seriesPaint	WITHOUT_CLASSIFICATION	0.9999949513016908	WITHOUT_CLASSIFICATION	5.048698309249635E-6	DEFECT
// seriesPaintList	WITHOUT_CLASSIFICATION	0.9999957774239339	WITHOUT_CLASSIFICATION	4.222576066128808E-6	DEFECT
// baseSeriesPaint	WITHOUT_CLASSIFICATION	0.99999074873484	WITHOUT_CLASSIFICATION	9.251265159961698E-6	DEFECT
// seriesOutlinePaint	WITHOUT_CLASSIFICATION	0.9999920932764765	WITHOUT_CLASSIFICATION	7.906723523488255E-6	DEFECT
// seriesOutlinePaintList	WITHOUT_CLASSIFICATION	0.9999933870564093	WITHOUT_CLASSIFICATION	6.612943590700916E-6	DEFECT
// baseSeriesOutlinePaint	WITHOUT_CLASSIFICATION	0.9999855117067091	WITHOUT_CLASSIFICATION	1.4488293290947288E-5	DEFECT
// seriesOutlineStroke	WITHOUT_CLASSIFICATION	0.999987844386958	WITHOUT_CLASSIFICATION	1.2155613042007798E-5	DEFECT
// seriesOutlineStrokeList	WITHOUT_CLASSIFICATION	0.9999905308967492	WITHOUT_CLASSIFICATION	9.469103250896318E-6	DEFECT
// add an empty series	WITHOUT_CLASSIFICATION	0.9999616317174145	WITHOUT_CLASSIFICATION	3.836828258547587E-5	DEFECT
// correct outcome	WITHOUT_CLASSIFICATION	0.999988218353385	WITHOUT_CLASSIFICATION	1.178164661498779E-5	DEFECT
// high	WITHOUT_CLASSIFICATION	0.999938096320603	WITHOUT_CLASSIFICATION	6.190367939690453E-5	DEFECT
// low	WITHOUT_CLASSIFICATION	0.9999596086730042	WITHOUT_CLASSIFICATION	4.03913269957877E-5	DEFECT
// close	WITHOUT_CLASSIFICATION	0.99998966168071	WITHOUT_CLASSIFICATION	1.0338319290012833E-5	DEFECT
/* XYSeries s = */	WITHOUT_CLASSIFICATION	0.9999131366846533	WITHOUT_CLASSIFICATION	8.686331534671316E-5	DEFECT
// there should be no change event when clearing an empty series	WITHOUT_CLASSIFICATION	0.999980211381383	WITHOUT_CLASSIFICATION	1.97886186169591E-5	DEFECT
// clean up	WITHOUT_CLASSIFICATION	0.9999920617762297	WITHOUT_CLASSIFICATION	7.938223770306752E-6	DEFECT
// shape	WITHOUT_CLASSIFICATION	0.9999780027402255	WITHOUT_CLASSIFICATION	2.1997259774422357E-5	DEFECT
// stroke	WITHOUT_CLASSIFICATION	0.9999858947570747	WITHOUT_CLASSIFICATION	1.4105242925338302E-5	DEFECT
// labelFont	WITHOUT_CLASSIFICATION	0.9999921620244121	WITHOUT_CLASSIFICATION	7.837975587927327E-6	DEFECT
// labelPaint	WITHOUT_CLASSIFICATION	0.99999384146794	WITHOUT_CLASSIFICATION	6.158532060022914E-6	DEFECT
// upperBound	WITHOUT_CLASSIFICATION	0.9999874170753238	WITHOUT_CLASSIFICATION	1.258292467612465E-5	DEFECT
// paint	WITHOUT_CLASSIFICATION	0.9999810741291943	WITHOUT_CLASSIFICATION	1.8925870805732284E-5	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999972131066635	WITHOUT_CLASSIFICATION	2.78689333669082E-6	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999972131066635	WITHOUT_CLASSIFICATION	2.78689333669082E-6	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999972131066635	WITHOUT_CLASSIFICATION	2.78689333669082E-6	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999972131066635	WITHOUT_CLASSIFICATION	2.78689333669082E-6	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999972131066635	WITHOUT_CLASSIFICATION	2.78689333669082E-6	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999972131066635	WITHOUT_CLASSIFICATION	2.78689333669082E-6	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999972131066635	WITHOUT_CLASSIFICATION	2.78689333669082E-6	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999972131066635	WITHOUT_CLASSIFICATION	2.78689333669082E-6	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999972131066635	WITHOUT_CLASSIFICATION	2.78689333669082E-6	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999972131066635	WITHOUT_CLASSIFICATION	2.78689333669082E-6	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999972131066635	WITHOUT_CLASSIFICATION	2.78689333669082E-6	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999972131066635	WITHOUT_CLASSIFICATION	2.78689333669082E-6	DEFECT
// super.drawSecondaryPass(g2, plot, dataset, pass, series, item, // domainAxis, dataArea, rangeAxis, crosshairState, entities);	WITHOUT_CLASSIFICATION	0.9999980851346706	WITHOUT_CLASSIFICATION	1.9148653293475948E-6	DEFECT
// properties // save // print // zoom // tooltips	WITHOUT_CLASSIFICATION	0.9999978511397457	WITHOUT_CLASSIFICATION	2.148860254314765E-6	DEFECT
// properties // save // print // zoom // tooltips	WITHOUT_CLASSIFICATION	0.9999978511397457	WITHOUT_CLASSIFICATION	2.148860254314765E-6	DEFECT
// properties // save // print // zoom // tooltips	WITHOUT_CLASSIFICATION	0.9999978511397457	WITHOUT_CLASSIFICATION	2.148860254314765E-6	DEFECT
// do we need to redraw the buffer?	WITHOUT_CLASSIFICATION	0.9998515853045628	WITHOUT_CLASSIFICATION	1.4841469543728966E-4	DEFECT
// get the origin of the zoom selection in the Java2D space used for // drawing the chart (that is, before any scaling to fit the panel)	WITHOUT_CLASSIFICATION	0.9999997413445368	WITHOUT_CLASSIFICATION	2.586554630995742E-7	DEFECT
// suppresses compiler warning	WITHOUT_CLASSIFICATION	0.9999949752876542	WITHOUT_CLASSIFICATION	5.024712345778293E-6	DEFECT
// create the chart...	WITHOUT_CLASSIFICATION	0.9999863945471843	WITHOUT_CLASSIFICATION	1.3605452815583836E-5	DEFECT
/* shape visible = */	WITHOUT_CLASSIFICATION	0.9999710893712042	WITHOUT_CLASSIFICATION	2.8910628795934997E-5	DEFECT
/* shape visible = */	WITHOUT_CLASSIFICATION	0.9999710893712042	WITHOUT_CLASSIFICATION	2.8910628795934997E-5	DEFECT
/* shape visible = */	WITHOUT_CLASSIFICATION	0.9999710893712042	WITHOUT_CLASSIFICATION	2.8910628795934997E-5	DEFECT
// we clone the chart because presumably there can be some delay // between putting this instance on the system clipboard and // actually having the getTransferData() method called...	WITHOUT_CLASSIFICATION	0.9999982485500426	WITHOUT_CLASSIFICATION	1.7514499574689047E-6	DEFECT
// for efficiency, we just use the first, last and middle items to // compute a hashCode...	WITHOUT_CLASSIFICATION	0.9999994181236809	WITHOUT_CLASSIFICATION	5.818763191605975E-7	DEFECT
// create a legend, if requested...	WITHOUT_CLASSIFICATION	0.9999995208978716	WITHOUT_CLASSIFICATION	4.791021283364391E-7	DEFECT
// pass the click on to the plot... // rely on the plot to post a plot change event and redraw the chart...	WITHOUT_CLASSIFICATION	0.9999970818570098	WITHOUT_CLASSIFICATION	2.9181429902426753E-6	DEFECT
// don't zoom unless the mouse pointer is in the plot's data area	WITHOUT_CLASSIFICATION	0.9999814037540692	WITHOUT_CLASSIFICATION	1.8596245930815497E-5	DEFECT
// draw the label	WITHOUT_CLASSIFICATION	0.9999949171446241	WITHOUT_CLASSIFICATION	5.0828553758598685E-6	DEFECT
// now try to reject equality...	WITHOUT_CLASSIFICATION	0.9999923027760798	WITHOUT_CLASSIFICATION	7.69722392024474E-6	DEFECT
// no plot, no data	WITHOUT_CLASSIFICATION	0.9999962740829508	WITHOUT_CLASSIFICATION	3.7259170491960006E-6	DEFECT
// no plot, no data	WITHOUT_CLASSIFICATION	0.9999962740829508	WITHOUT_CLASSIFICATION	3.7259170491960006E-6	DEFECT
// if fixed auto range, then derive lower bound...	WITHOUT_CLASSIFICATION	0.9999898199359429	WITHOUT_CLASSIFICATION	1.0180064057098932E-5	DEFECT
// if the axis is not visible, don't draw it...	WITHOUT_CLASSIFICATION	0.9999172540397172	WITHOUT_CLASSIFICATION	8.274596028281546E-5	DEFECT
// if the axis is not visible, don't draw it...	WITHOUT_CLASSIFICATION	0.9999172540397172	WITHOUT_CLASSIFICATION	8.274596028281546E-5	DEFECT
// if the axis is not visible, don't draw it...	WITHOUT_CLASSIFICATION	0.9999172540397172	WITHOUT_CLASSIFICATION	8.274596028281546E-5	DEFECT
// if the axis is not visible, don't draw it...	WITHOUT_CLASSIFICATION	0.9999172540397172	WITHOUT_CLASSIFICATION	8.274596028281546E-5	DEFECT
// add minor ticks (for gridlines)	WITHOUT_CLASSIFICATION	0.9999971240026376	WITHOUT_CLASSIFICATION	2.8759973623293963E-6	DEFECT
// select a tick unit that is the next one bigger than the current // (log) range divided by 50	WITHOUT_CLASSIFICATION	0.9999942830454666	WITHOUT_CLASSIFICATION	5.716954533381473E-6	DEFECT
// look at lower and upper bounds...	WITHOUT_CLASSIFICATION	0.9999980997731337	WITHOUT_CLASSIFICATION	1.900226866344139E-6	DEFECT
// it is unlikely that 'state' will be null, but check anyway...	WITHOUT_CLASSIFICATION	0.999403068550255	WITHOUT_CLASSIFICATION	5.969314497450138E-4	DEFECT
// create a new space object if one wasn't supplied...	WITHOUT_CLASSIFICATION	0.9999979905437885	WITHOUT_CLASSIFICATION	2.009456211515456E-6	DEFECT
// work out the number of periods to skip for labelling	WITHOUT_CLASSIFICATION	0.9999996318988972	WITHOUT_CLASSIFICATION	3.681011028292351E-7	DEFECT
// draw the arrow...	WITHOUT_CLASSIFICATION	0.9999760384513531	WITHOUT_CLASSIFICATION	2.3961548646971062E-5	DEFECT
// set flag true if negative values not allowed and the // lower bound is between 0 and 10:	WITHOUT_CLASSIFICATION	0.9999942520914556	WITHOUT_CLASSIFICATION	5.74790854435913E-6	DEFECT
//parameter value is < -10 //calculate log using positive value:	WITHOUT_CLASSIFICATION	0.9999869782601457	WITHOUT_CLASSIFICATION	1.3021739854349839E-5	DEFECT
//calculate power using positive value; then negate	WITHOUT_CLASSIFICATION	0.9999878808167202	WITHOUT_CLASSIFICATION	1.2119183279764287E-5	DEFECT
//parameter value is <= 0 //use as-is	WITHOUT_CLASSIFICATION	0.9999603992108715	WITHOUT_CLASSIFICATION	3.960078912840764E-5	DEFECT
//if less than 1.0 then make it 1.0 //subtract out margin and get exponential value:	WITHOUT_CLASSIFICATION	0.9999992459657746	WITHOUT_CLASSIFICATION	7.540342255225399E-7	DEFECT
//negatives not allowed and lower range bound is zero //use data range bound instead	WITHOUT_CLASSIFICATION	0.9999510540535153	WITHOUT_CLASSIFICATION	4.894594648470804E-5	DEFECT
//get positive exponent //create multiplier value //multiply, round up, and divide for bound value:	WITHOUT_CLASSIFICATION	0.9999969867719404	WITHOUT_CLASSIFICATION	3.0132280595981468E-6	DEFECT
//negatives allowed or upper bound not between 0 & 1 //if flag then change to log version of highest value to // make range begin at a 10^n value; else use nearest int	WITHOUT_CLASSIFICATION	0.9999981320617707	WITHOUT_CLASSIFICATION	1.8679382293934703E-6	DEFECT
//get log10 version of lower bound and round to integer:	WITHOUT_CLASSIFICATION	0.9999979701881008	WITHOUT_CLASSIFICATION	2.029811899200606E-6	DEFECT
//first tick of series, or not too small a value and // one of first 3 ticks, or last tick to be displayed // set exact number of fractional digits to be shown // (no effect if showing "1e#"-style ticks):	WITHOUT_CLASSIFICATION	0.9999991768589815	WITHOUT_CLASSIFICATION	8.231410183901589E-7	DEFECT
//did zero tick last iteration //clear flag //create tick label string: //show tick label if "1e#"-style and it's one // of the first two, if it's the first or last // in the set, or if it's 1-5; beyond that // show fewer as the values get larger:	WITHOUT_CLASSIFICATION	0.9999992225547519	WITHOUT_CLASSIFICATION	7.774452479278178E-7	DEFECT
// as far as I know, the Locale for the calendar only affects week // number calculations, and since DateTickUnit doesn't do week // arithmetic, the default locale (whatever it is) should be fine // here...	WITHOUT_CLASSIFICATION	0.999957227892364	WITHOUT_CLASSIFICATION	4.2772107636131E-5	DEFECT
// as far as I know, the Locale for the calendar only affects week // number calculations, and since DateTickUnit doesn't do week // arithmetic, the default locale (whatever it is) should be fine // here...	WITHOUT_CLASSIFICATION	0.999957227892364	WITHOUT_CLASSIFICATION	4.2772107636131E-5	DEFECT
// start with the current tick unit...	WITHOUT_CLASSIFICATION	0.9999974545773457	WITHOUT_CLASSIFICATION	2.5454226543052876E-6	DEFECT
// all tick labels have the same width (equal to the height of // the font)...	WITHOUT_CLASSIFICATION	0.9999993530826033	WITHOUT_CLASSIFICATION	6.469173966109479E-7	DEFECT
// draw the tick marks and labels...	WITHOUT_CLASSIFICATION	0.9999974396560807	WITHOUT_CLASSIFICATION	2.5603439193367575E-6	DEFECT
// we call refresh ticks just to get the maximum width or height	WITHOUT_CLASSIFICATION	0.9999983434902506	WITHOUT_CLASSIFICATION	1.6565097494740666E-6	DEFECT
// calculate midnight of first monday after 1/1/1900 relative to // current locale	WITHOUT_CLASSIFICATION	0.9999993303722765	WITHOUT_CLASSIFICATION	6.696277235711031E-7	DEFECT
// cycle through all the segments contained in the BaseTimeline // exception segment	WITHOUT_CLASSIFICATION	0.9999971346949873	WITHOUT_CLASSIFICATION	2.865305012695459E-6	DEFECT
// this is not one of our included segment, skip it	WITHOUT_CLASSIFICATION	0.999984141705754	WITHOUT_CLASSIFICATION	1.5858294246031376E-5	DEFECT
// first test for equality (contains or contained)	WITHOUT_CLASSIFICATION	0.9999967676678186	WITHOUT_CLASSIFICATION	3.232332181344564E-6	DEFECT
// key not found	WITHOUT_CLASSIFICATION	0.9999820574166997	WITHOUT_CLASSIFICATION	1.7942583300330758E-5	DEFECT
// Compute number of labels	WITHOUT_CLASSIFICATION	0.9999986848647544	WITHOUT_CLASSIFICATION	1.3151352455491609E-6	DEFECT
// TOP	WITHOUT_CLASSIFICATION	0.9997949965875783	WITHOUT_CLASSIFICATION	2.050034124216094E-4	DEFECT
// RIGHT	WITHOUT_CLASSIFICATION	0.9999300651288828	WITHOUT_CLASSIFICATION	6.993487111716721E-5	DEFECT
// argument checking delegated...	WITHOUT_CLASSIFICATION	0.9999990939505744	WITHOUT_CLASSIFICATION	9.060494255698959E-7	DEFECT
//gets the outline stroke width of the plot	WITHOUT_CLASSIFICATION	0.9999955200944823	WITHOUT_CLASSIFICATION	4.4799055176396866E-6	DEFECT
// first arrange without constraints, and see if this fits within // the required ranges...	WITHOUT_CLASSIFICATION	0.9999930991504059	WITHOUT_CLASSIFICATION	6.900849594004435E-6	DEFECT
// first arrange without constraints, and see if this fits within // the required ranges...	WITHOUT_CLASSIFICATION	0.9999930991504059	WITHOUT_CLASSIFICATION	6.900849594004435E-6	DEFECT
// set a theme using the new shadow generator feature available in // 1.0.14 - for backwards compatibility it is not enabled by default	WITHOUT_CLASSIFICATION	0.9999988141993749	WITHOUT_CLASSIFICATION	1.1858006250609065E-6	DEFECT
// ****************************************************************** //  More than 150 demo applications are included with the JFreeChart //  Developer Guide...for more information, see: // //  >   http://www.object-refinery.com/jfreechart/guide.html // // ******************************************************************	WITHOUT_CLASSIFICATION	0.9999961540123543	WITHOUT_CLASSIFICATION	3.845987645633938E-6	DEFECT
//dmo: added this panel for colorbar control. (start dmo additions)	WITHOUT_CLASSIFICATION	0.9999210947500194	WITHOUT_CLASSIFICATION	7.890524998062054E-5	DEFECT
//dmo: (end dmo additions)	WITHOUT_CLASSIFICATION	0.9998682583219359	WITHOUT_CLASSIFICATION	1.3174167806411497E-4	DEFECT
//  No op	WITHOUT_CLASSIFICATION	0.9999603305702759	WITHOUT_CLASSIFICATION	3.966942972417117E-5	DEFECT
// defer argument checks...	WITHOUT_CLASSIFICATION	0.9999967818096451	WITHOUT_CLASSIFICATION	3.218190354864347E-6	DEFECT
// defer argument checks...	WITHOUT_CLASSIFICATION	0.9999967818096451	WITHOUT_CLASSIFICATION	3.218190354864347E-6	DEFECT
// defer argument checks...	WITHOUT_CLASSIFICATION	0.9999967818096451	WITHOUT_CLASSIFICATION	3.218190354864347E-6	DEFECT
// defer argument checks...	WITHOUT_CLASSIFICATION	0.9999967818096451	WITHOUT_CLASSIFICATION	3.218190354864347E-6	DEFECT
// defer argument checks...	WITHOUT_CLASSIFICATION	0.9999967818096451	WITHOUT_CLASSIFICATION	3.218190354864347E-6	DEFECT
// defer argument checks...	WITHOUT_CLASSIFICATION	0.9999967818096451	WITHOUT_CLASSIFICATION	3.218190354864347E-6	DEFECT
// defer argument checks...	WITHOUT_CLASSIFICATION	0.9999967818096451	WITHOUT_CLASSIFICATION	3.218190354864347E-6	DEFECT
// defer argument checks...	WITHOUT_CLASSIFICATION	0.9999967818096451	WITHOUT_CLASSIFICATION	3.218190354864347E-6	DEFECT
// defer argument checks...	WITHOUT_CLASSIFICATION	0.9999967818096451	WITHOUT_CLASSIFICATION	3.218190354864347E-6	DEFECT
// pass on the event to the auxiliary handlers	WITHOUT_CLASSIFICATION	0.9999985718684881	WITHOUT_CLASSIFICATION	1.4281315119736796E-6	DEFECT
// pass on the event to the auxiliary handlers	WITHOUT_CLASSIFICATION	0.9999985718684881	WITHOUT_CLASSIFICATION	1.4281315119736796E-6	DEFECT
// does nothing unless overridden	WITHOUT_CLASSIFICATION	0.9999955052377401	WITHOUT_CLASSIFICATION	4.494762259903497E-6	DEFECT
// does nothing unless overridden	WITHOUT_CLASSIFICATION	0.9999955052377401	WITHOUT_CLASSIFICATION	4.494762259903497E-6	DEFECT
//no initial zoom rectangle exists but the handler is set //as life handler unregister	WITHOUT_CLASSIFICATION	0.9999948564262324	WITHOUT_CLASSIFICATION	5.143573767480907E-6	DEFECT
//float midX = (float) (minX + (plotArea.getWidth() * getRotateX())); //float midY = (float) (minY + (plotArea.getHeight() * getRotateY()));	WITHOUT_CLASSIFICATION	0.9999922210107349	WITHOUT_CLASSIFICATION	7.778989265107183E-6	DEFECT
/// we have rotation	WITHOUT_CLASSIFICATION	0.9999887312011987	WITHOUT_CLASSIFICATION	1.126879880122481E-5	DEFECT
// store the plot and its weight	WITHOUT_CLASSIFICATION	0.9999978531695463	WITHOUT_CLASSIFICATION	2.146830453766601E-6	DEFECT
// store the plot and its weight	WITHOUT_CLASSIFICATION	0.9999978531695463	WITHOUT_CLASSIFICATION	2.146830453766601E-6	DEFECT
// work out the space required by the domain axis...	WITHOUT_CLASSIFICATION	0.9999988715573684	WITHOUT_CLASSIFICATION	1.1284426314680946E-6	DEFECT
// work out the maximum height or width of the non-shared axes...	WITHOUT_CLASSIFICATION	0.9999979742762337	WITHOUT_CLASSIFICATION	2.025723766240262E-6	DEFECT
// calculate plotAreas of all sub-plots, maximum vertical/horizontal // axis width/height	WITHOUT_CLASSIFICATION	0.999998819518231	WITHOUT_CLASSIFICATION	1.180481769014689E-6	DEFECT
// set up info collection...	WITHOUT_CLASSIFICATION	0.9999978589259849	WITHOUT_CLASSIFICATION	2.1410740151214234E-6	DEFECT
// set up info collection...	WITHOUT_CLASSIFICATION	0.9999978589259849	WITHOUT_CLASSIFICATION	2.1410740151214234E-6	DEFECT
// adjust the drawing area for plot insets (if any)...	WITHOUT_CLASSIFICATION	0.9999967097683914	WITHOUT_CLASSIFICATION	3.2902316085089602E-6	DEFECT
// adjust the drawing area for plot insets (if any)...	WITHOUT_CLASSIFICATION	0.9999967097683914	WITHOUT_CLASSIFICATION	3.2902316085089602E-6	DEFECT
// after setting up all the subplots, the shared range axis may need // reconfiguring	WITHOUT_CLASSIFICATION	0.9999979288485278	WITHOUT_CLASSIFICATION	2.0711514721133486E-6	DEFECT
// adjust the plot area by the interior spacing value	WITHOUT_CLASSIFICATION	0.999994226332924	WITHOUT_CLASSIFICATION	5.7736670759723536E-6	DEFECT
// if we are drawing a perfect circle, we need to readjust the top left // coordinates of the drawing area for the arcs to arrive at this // effect.	WITHOUT_CLASSIFICATION	0.999963569759068	WITHOUT_CLASSIFICATION	3.643024093199238E-5	DEFECT
// establish the coordinates of the top left corner of the drawing area	WITHOUT_CLASSIFICATION	0.9999992654978369	WITHOUT_CLASSIFICATION	7.345021630262938E-7	DEFECT
// draw the sections at the top of the pie (and set up tooltips)...	WITHOUT_CLASSIFICATION	0.9999997277280321	WITHOUT_CLASSIFICATION	2.7227196787563305E-7	DEFECT
// the pie sections are arranged ANTICLOCKWISE	WITHOUT_CLASSIFICATION	0.9999779935514509	WITHOUT_CLASSIFICATION	2.2006448549069733E-5	DEFECT
// starts at the back and finishes at the front // (wrapping the left side)	WITHOUT_CLASSIFICATION	0.9999993995766489	WITHOUT_CLASSIFICATION	6.00423351085051E-7	DEFECT
// if the plot area is too small, just return...	WITHOUT_CLASSIFICATION	0.9999763953528218	WITHOUT_CLASSIFICATION	2.3604647178241664E-5	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9999994784224214	WITHOUT_CLASSIFICATION	5.21577578463559E-7	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9999994784224214	WITHOUT_CLASSIFICATION	5.21577578463559E-7	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9999994784224214	WITHOUT_CLASSIFICATION	5.21577578463559E-7	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9999994784224214	WITHOUT_CLASSIFICATION	5.21577578463559E-7	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9999994784224214	WITHOUT_CLASSIFICATION	5.21577578463559E-7	DEFECT
//turn off anti-aliasing when filling rectangles	WITHOUT_CLASSIFICATION	0.9999958016935071	WITHOUT_CLASSIFICATION	4.198306492914039E-6	DEFECT
// add an entity for the item...	WITHOUT_CLASSIFICATION	0.9999731029637465	WITHOUT_CLASSIFICATION	2.6897036253520914E-5	DEFECT
// add an entity for the item...	WITHOUT_CLASSIFICATION	0.9999731029637465	WITHOUT_CLASSIFICATION	2.6897036253520914E-5	DEFECT
// delegate 'info' and 'source' argument checks...	WITHOUT_CLASSIFICATION	0.9999998179262789	WITHOUT_CLASSIFICATION	1.8207372116052774E-7	DEFECT
// if the source point doesn't fall within a subplot, we do the // zoom on all subplots...	WITHOUT_CLASSIFICATION	0.9999910945093711	WITHOUT_CLASSIFICATION	8.905490628943164E-6	DEFECT
// if the source point doesn't fall within a subplot, we do the // zoom on all subplots...	WITHOUT_CLASSIFICATION	0.9999910945093711	WITHOUT_CLASSIFICATION	8.905490628943164E-6	DEFECT
// is there an override?	WITHOUT_CLASSIFICATION	0.9958327227072178	WITHOUT_CLASSIFICATION	0.004167277292782207	DEFECT
// is there an override?	WITHOUT_CLASSIFICATION	0.9958327227072178	WITHOUT_CLASSIFICATION	0.004167277292782207	DEFECT
// nothing defined - do we autoPopulate?	WITHOUT_CLASSIFICATION	0.9999938355489127	WITHOUT_CLASSIFICATION	6.1644510873121335E-6	DEFECT
// null argument check delegated...	WITHOUT_CLASSIFICATION	0.9999989091995051	WITHOUT_CLASSIFICATION	1.0908004948890596E-6	DEFECT
// null argument check delegated...	WITHOUT_CLASSIFICATION	0.9999989091995051	WITHOUT_CLASSIFICATION	1.0908004948890596E-6	DEFECT
// null argument check delegated...	WITHOUT_CLASSIFICATION	0.9999989091995051	WITHOUT_CLASSIFICATION	1.0908004948890596E-6	DEFECT
// the explode area defines the max circle/ellipse for the exploded // pie sections.  it is defined by shrinking the linkArea by the // linkMargin factor.	WITHOUT_CLASSIFICATION	0.9999814151466354	WITHOUT_CLASSIFICATION	1.8584853364570608E-5	DEFECT
// work out the mid angle (0 - 90 and 270 - 360) = right, // otherwise left	WITHOUT_CLASSIFICATION	0.9999994822465575	WITHOUT_CLASSIFICATION	5.177534425021285E-7	DEFECT
// delegate...	WITHOUT_CLASSIFICATION	0.9999916342438239	WITHOUT_CLASSIFICATION	8.36575617616987E-6	DEFECT
// delegate...	WITHOUT_CLASSIFICATION	0.9999916342438239	WITHOUT_CLASSIFICATION	8.36575617616987E-6	DEFECT
// delegate...	WITHOUT_CLASSIFICATION	0.9999916342438239	WITHOUT_CLASSIFICATION	8.36575617616987E-6	DEFECT
// delegate...	WITHOUT_CLASSIFICATION	0.9999916342438239	WITHOUT_CLASSIFICATION	8.36575617616987E-6	DEFECT
// delegate...	WITHOUT_CLASSIFICATION	0.9999916342438239	WITHOUT_CLASSIFICATION	8.36575617616987E-6	DEFECT
// no axis, no gridlines...	WITHOUT_CLASSIFICATION	0.9999911854705694	WITHOUT_CLASSIFICATION	8.814529430688328E-6	DEFECT
// can't zoom domain axis	WITHOUT_CLASSIFICATION	0.9999584621563434	WITHOUT_CLASSIFICATION	4.1537843656630896E-5	DEFECT
// can't zoom domain axis	WITHOUT_CLASSIFICATION	0.9999584621563434	WITHOUT_CLASSIFICATION	4.1537843656630896E-5	DEFECT
// the above should cover all the options...	WITHOUT_CLASSIFICATION	0.9999974694219581	WITHOUT_CLASSIFICATION	2.530578041902902E-6	DEFECT
// get the source coordinate - this plot has always a VERTICAL // orientation	WITHOUT_CLASSIFICATION	0.9999985520423025	WITHOUT_CLASSIFICATION	1.4479576974905158E-6	DEFECT
// get the source coordinate - this plot has always a VERTICAL // orientation	WITHOUT_CLASSIFICATION	0.9999985520423025	WITHOUT_CLASSIFICATION	1.4479576974905158E-6	DEFECT
// return the override, if there is one...	WITHOUT_CLASSIFICATION	0.9999955158432421	WITHOUT_CLASSIFICATION	4.4841567579607394E-6	DEFECT
// PlotOrientation.VERTICAL	WITHOUT_CLASSIFICATION	0.9999864371053161	WITHOUT_CLASSIFICATION	1.3562894683943137E-5	DEFECT
// PlotOrientation.VERTICAL	WITHOUT_CLASSIFICATION	0.9999864371053161	WITHOUT_CLASSIFICATION	1.3562894683943137E-5	DEFECT
// PlotOrientation.VERTICAL	WITHOUT_CLASSIFICATION	0.9999864371053161	WITHOUT_CLASSIFICATION	1.3562894683943137E-5	DEFECT
// no domain axis to zoom	WITHOUT_CLASSIFICATION	0.9999085202419875	WITHOUT_CLASSIFICATION	9.147975801245965E-5	DEFECT
// no domain axis to zoom	WITHOUT_CLASSIFICATION	0.9999085202419875	WITHOUT_CLASSIFICATION	9.147975801245965E-5	DEFECT
// the indicator bounds is calculated from the templateValue (which // determines the minimum size), the maxTemplateValue (which, if // specified, provides a maximum size) and the actual value	WITHOUT_CLASSIFICATION	0.9999998716260206	WITHOUT_CLASSIFICATION	1.2837397951975825E-7	DEFECT
// startAngle	WITHOUT_CLASSIFICATION	0.9999955325245571	WITHOUT_CLASSIFICATION	4.467475442829226E-6	DEFECT
// startAngle	WITHOUT_CLASSIFICATION	0.9999955325245571	WITHOUT_CLASSIFICATION	4.467475442829226E-6	DEFECT
// extent	WITHOUT_CLASSIFICATION	0.9999815827404386	WITHOUT_CLASSIFICATION	1.841725956142879E-5	DEFECT
// majorTickIncrement // majorTickLength // majorTickPaint // majorTickStroke // minorTickCount // minorTickLength // minorTickPaint // minorTickStroke // tickLabelOffset // tickLabelFont // tickLabelsVisible // tickLabelFormatter // firstTickLabelsVisible	WITHOUT_CLASSIFICATION	0.9999903716575728	WITHOUT_CLASSIFICATION	9.628342427188702E-6	DEFECT
// SERIES VISIBLE IN LEGEND (not yet respected by all renderers)	WITHOUT_CLASSIFICATION	0.9999946219657271	WITHOUT_CLASSIFICATION	5.378034272991467E-6	DEFECT
// PAINT	WITHOUT_CLASSIFICATION	0.9999091720264317	WITHOUT_CLASSIFICATION	9.082797356829268E-5	DEFECT
// STROKE	WITHOUT_CLASSIFICATION	0.9997696277765278	WITHOUT_CLASSIFICATION	2.3037222347224633E-4	DEFECT
// itemLabelFontList // baseItemLabelFont // itemLabelPaintList // baseItemLabelPaint // positiveItemLabelPositionList // basePositiveItemLabelPosition // negativeItemLabelPositionList // baseNegativeItemLabelPosition // itemLabelAnchorOffset // createEntityList // baseCreateEntities	WITHOUT_CLASSIFICATION	0.9999938177204468	WITHOUT_CLASSIFICATION	6.182279553155775E-6	DEFECT
// for value in bounds, do the lookup...	WITHOUT_CLASSIFICATION	0.9999995481971016	WITHOUT_CLASSIFICATION	4.518028983897473E-7	DEFECT
// for data in ascending order by x-value, we are (broadly) looking // for the index of the highest x-value that is less than xLow	WITHOUT_CLASSIFICATION	0.9999909206325106	WITHOUT_CLASSIFICATION	9.079367489409126E-6	DEFECT
// we don't know anything about the ordering of the x-values, // but we can still skip any trailing values that fall outside the // range...	WITHOUT_CLASSIFICATION	0.9998543907256621	WITHOUT_CLASSIFICATION	1.4560927433805251E-4	DEFECT
// leave the y values (y1, y0) untranslated as it is going to be be // stacked up later by previous series values, after this it will be // translated.	WITHOUT_CLASSIFICATION	0.999999130220708	WITHOUT_CLASSIFICATION	8.697792920914094E-7	DEFECT
// get the previous point and the next point so we can calculate a // "hot spot" for the area (used by the chart entity)...	WITHOUT_CLASSIFICATION	0.9999997874120852	WITHOUT_CLASSIFICATION	2.125879147197713E-7	DEFECT
// FIXME: calculate xx0	WITHOUT_CLASSIFICATION	0.9849708665648083	WITHOUT_CLASSIFICATION	0.015029133435191602	DEFECT
// LEFT POLYGON	WITHOUT_CLASSIFICATION	0.9999230185137947	WITHOUT_CLASSIFICATION	7.698148620526194E-5	DEFECT
// calculate the bar width	WITHOUT_CLASSIFICATION	0.9999943950856912	WITHOUT_CLASSIFICATION	5.604914308742993E-6	DEFECT
// wait till we are at the last item for the row then draw the // whole stack at once	WITHOUT_CLASSIFICATION	0.9999663290129306	WITHOUT_CLASSIFICATION	3.3670987069393555E-5	DEFECT
// a list to store the series index and bar region, so we can draw // all the labels at the end...	WITHOUT_CLASSIFICATION	0.9999924998563061	WITHOUT_CLASSIFICATION	7.500143693875061E-6	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9999300954961883	WITHOUT_CLASSIFICATION	6.990450381177896E-5	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9999300954961883	WITHOUT_CLASSIFICATION	6.990450381177896E-5	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9999300954961883	WITHOUT_CLASSIFICATION	6.990450381177896E-5	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9999300954961883	WITHOUT_CLASSIFICATION	6.990450381177896E-5	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9999300954961883	WITHOUT_CLASSIFICATION	6.990450381177896E-5	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9999300954961883	WITHOUT_CLASSIFICATION	6.990450381177896E-5	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9999300954961883	WITHOUT_CLASSIFICATION	6.990450381177896E-5	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9999300954961883	WITHOUT_CLASSIFICATION	6.990450381177896E-5	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9999300954961883	WITHOUT_CLASSIFICATION	6.990450381177896E-5	DEFECT
// do nothing if item is not visible	WITHOUT_CLASSIFICATION	0.999976101759915	WITHOUT_CLASSIFICATION	2.3898240084926393E-5	DEFECT
// current data point...	WITHOUT_CLASSIFICATION	0.9999984007353117	WITHOUT_CLASSIFICATION	1.5992646884276162E-6	DEFECT
// clip left and right bounds to data area	WITHOUT_CLASSIFICATION	0.9999984683113037	WITHOUT_CLASSIFICATION	1.5316886963955296E-6	DEFECT
// clip left and right bounds to data area	WITHOUT_CLASSIFICATION	0.9999984683113037	WITHOUT_CLASSIFICATION	1.5316886963955296E-6	DEFECT
// PlotOrientation.HORIZONTAL	WITHOUT_CLASSIFICATION	0.9999923215320629	WITHOUT_CLASSIFICATION	7.678467937052277E-6	DEFECT
// bar is not visible	WITHOUT_CLASSIFICATION	0.999922344648615	WITHOUT_CLASSIFICATION	7.765535138504103E-5	DEFECT
// bar is not visible	WITHOUT_CLASSIFICATION	0.999922344648615	WITHOUT_CLASSIFICATION	7.765535138504103E-5	DEFECT
// bar is not visible	WITHOUT_CLASSIFICATION	0.999922344648615	WITHOUT_CLASSIFICATION	7.765535138504103E-5	DEFECT
// draw the outline...	WITHOUT_CLASSIFICATION	0.9999953462164938	WITHOUT_CLASSIFICATION	4.6537835061474705E-6	DEFECT
// collect entity and tool tip information...	WITHOUT_CLASSIFICATION	0.9999933873508787	WITHOUT_CLASSIFICATION	6.6126491212999435E-6	DEFECT
// collect entity and tool tip information...	WITHOUT_CLASSIFICATION	0.9999933873508787	WITHOUT_CLASSIFICATION	6.6126491212999435E-6	DEFECT
// collect entity and tool tip information...	WITHOUT_CLASSIFICATION	0.9999933873508787	WITHOUT_CLASSIFICATION	6.6126491212999435E-6	DEFECT
// collect entity and tool tip information...	WITHOUT_CLASSIFICATION	0.9999933873508787	WITHOUT_CLASSIFICATION	6.6126491212999435E-6	DEFECT
// collect entity and tool tip information...	WITHOUT_CLASSIFICATION	0.9999933873508787	WITHOUT_CLASSIFICATION	6.6126491212999435E-6	DEFECT
// collect entity and tool tip information...	WITHOUT_CLASSIFICATION	0.9999933873508787	WITHOUT_CLASSIFICATION	6.6126491212999435E-6	DEFECT
// calculate bar width...	WITHOUT_CLASSIFICATION	0.9999919777380865	WITHOUT_CLASSIFICATION	8.022261913510777E-6	DEFECT
// FIXME: add setBaseItemLabelGenerator(CategoryItemLabelGenerator, //            boolean) ?	WITHOUT_CLASSIFICATION	0.99418364638478	WITHOUT_CLASSIFICATION	0.005816353615219998	DEFECT
//// ITEM LABEL PAINT  /////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9998547570369762	WITHOUT_CLASSIFICATION	1.4524296302376508E-4	DEFECT
// last series, so we are ready to draw the min and max	WITHOUT_CLASSIFICATION	0.9999937610754495	WITHOUT_CLASSIFICATION	6.238924550618236E-6	DEFECT
// draw mean - SPECIAL AIMS REQUIREMENT...	WITHOUT_CLASSIFICATION	0.9999681346826325	WITHOUT_CLASSIFICATION	3.186531736754463E-5	DEFECT
// From outlier array sort out which are outliers and put these into a // list If there are any farouts, set the flag on the // OutlierListCollection	WITHOUT_CLASSIFICATION	0.9999977386672532	WITHOUT_CLASSIFICATION	2.261332746845858E-6	DEFECT
// avoid possible sun.dc.pr.PRException: endPath: bad path	WITHOUT_CLASSIFICATION	0.9999974793926283	WITHOUT_CLASSIFICATION	2.5206073716242106E-6	DEFECT
// avoid possible sun.dc.pr.PRException: endPath: bad path	WITHOUT_CLASSIFICATION	0.9999974793926283	WITHOUT_CLASSIFICATION	2.5206073716242106E-6	DEFECT
// Add the last point (x,0)	WITHOUT_CLASSIFICATION	0.9999990801440636	WITHOUT_CLASSIFICATION	9.198559364544919E-7	DEFECT
// Add the last point (x,0)	WITHOUT_CLASSIFICATION	0.9999990801440636	WITHOUT_CLASSIFICATION	9.198559364544919E-7	DEFECT
// check if initial polygon needs to be clipped	WITHOUT_CLASSIFICATION	0.9999987990592264	WITHOUT_CLASSIFICATION	1.2009407736816546E-6	DEFECT
// never updated the subtrahend if it is implied to be zero	WITHOUT_CLASSIFICATION	0.9999977391644492	WITHOUT_CLASSIFICATION	2.2608355507894068E-6	DEFECT
// check if line segments are colinear	WITHOUT_CLASSIFICATION	0.9999941810787301	WITHOUT_CLASSIFICATION	5.818921269944764E-6	DEFECT
// clear the point vectors	WITHOUT_CLASSIFICATION	0.9999983556136119	WITHOUT_CLASSIFICATION	1.6443863881387138E-6	DEFECT
//// ITEM LABELS VISIBLE //////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9996916400702099	WITHOUT_CLASSIFICATION	3.083599297900405E-4	DEFECT
// we don't need the sign	WITHOUT_CLASSIFICATION	0.9999743193259859	WITHOUT_CLASSIFICATION	2.5680674014096995E-5	DEFECT
// fillType == TO_UPPER_BOUND	WITHOUT_CLASSIFICATION	0.9999506311401624	WITHOUT_CLASSIFICATION	4.9368859837705334E-5	DEFECT
/*      solve linear system with tridiagonal n by n matrix a        using Gaussian elimination *without* pivoting        where   a(i,i-1) = sub[i]  for 2<=i<=n        a(i,i)   = diag[i] for 1<=i<=n        a(i,i+1) = sup[i]  for 1<=i<=n-1        (the values sub[1], sup[n] are ignored)        right hand side vector b[1:n] is overwritten with solution        NOTE: 1...n is used in all arrays, 0 is unused */	WITHOUT_CLASSIFICATION	0.9999956104890493	WITHOUT_CLASSIFICATION	4.3895109507989056E-6	DEFECT
// this represents the situation // for drawing a horizontal bar.	WITHOUT_CLASSIFICATION	0.9999894085004599	WITHOUT_CLASSIFICATION	1.0591499540096799E-5	DEFECT
// draw median	WITHOUT_CLASSIFICATION	0.9999916791532879	WITHOUT_CLASSIFICATION	8.320846712094045E-6	DEFECT
//  Check that the graph being served was created by the current user //  or that it begins with "public"	WITHOUT_CLASSIFICATION	0.9999995178589224	WITHOUT_CLASSIFICATION	4.821410776501548E-7	DEFECT
// the textAlignment and the horizontalAlignment are separate things, // but it makes sense for the default textAlignment to match the // title's horizontal alignment...	WITHOUT_CLASSIFICATION	0.99999926869796	WITHOUT_CLASSIFICATION	7.313020400713547E-7	DEFECT
// we don't use the calendar or numberFormat fields, but equals(Object) // is failing without them being non-null	WITHOUT_CLASSIFICATION	0.9939445121573115	WITHOUT_CLASSIFICATION	0.00605548784268856	DEFECT
/**/	WITHOUT_CLASSIFICATION	0.9992607240026428	WITHOUT_CLASSIFICATION	7.392759973571688E-4	DEFECT
/**/	WITHOUT_CLASSIFICATION	0.9992607240026428	WITHOUT_CLASSIFICATION	7.392759973571688E-4	DEFECT
// adjust text bounds to match string position	WITHOUT_CLASSIFICATION	0.9999879085633624	WITHOUT_CLASSIFICATION	1.2091436637693304E-5	DEFECT
// now fetch the row data - need to bear in mind that the row // structure may not have an entry for the column key, but that we // have already checked that the key is valid for the 2D structure	WITHOUT_CLASSIFICATION	0.9999147346197351	WITHOUT_CLASSIFICATION	8.526538026491589E-5	DEFECT
// defer null argument check	WITHOUT_CLASSIFICATION	0.9999971820498895	WITHOUT_CLASSIFICATION	2.8179501105238027E-6	DEFECT
// defer null argument check	WITHOUT_CLASSIFICATION	0.9999971820498895	WITHOUT_CLASSIFICATION	2.8179501105238027E-6	DEFECT
// set up the series names...	WITHOUT_CLASSIFICATION	0.9999957527090849	WITHOUT_CLASSIFICATION	4.247290915088825E-6	DEFECT
// is the category valid?	WITHOUT_CLASSIFICATION	0.999689230196078	WITHOUT_CLASSIFICATION	3.1076980392200906E-4	DEFECT
//create a temporary vector // set x to some arbitary value (used below)	WITHOUT_CLASSIFICATION	0.9999966638286041	WITHOUT_CLASSIFICATION	3.336171395888065E-6	DEFECT
// look for any keys that we don't already know about...	WITHOUT_CLASSIFICATION	0.9997528864897899	WITHOUT_CLASSIFICATION	2.4711351021015166E-4	DEFECT
//  Iterate and find all keys below threshold percentThreshold	WITHOUT_CLASSIFICATION	0.9999908531222313	WITHOUT_CLASSIFICATION	9.146877768703673E-6	DEFECT
// handle special case of BoxAndWhiskerDataset	WITHOUT_CLASSIFICATION	0.9999992912005923	WITHOUT_CLASSIFICATION	7.087994077765672E-7	DEFECT
// standard case - plain XYDataset	WITHOUT_CLASSIFICATION	0.9999995077396918	WITHOUT_CLASSIFICATION	4.922603081412215E-7	DEFECT
// hasn't implemented RangeInfo, so we'll have to iterate...	WITHOUT_CLASSIFICATION	0.9999945512512878	WITHOUT_CLASSIFICATION	5.448748712254864E-6	DEFECT
// hasn't implemented RangeInfo, so we'll have to iterate...	WITHOUT_CLASSIFICATION	0.9999945512512878	WITHOUT_CLASSIFICATION	5.448748712254864E-6	DEFECT
// CASE 1 : Comparing to another Second object // -------------------------------------------	WITHOUT_CLASSIFICATION	0.9999779241642491	WITHOUT_CLASSIFICATION	2.2075835750814475E-5	DEFECT
// CASE 2 : Comparing to another TimePeriod object // -----------------------------------------------	WITHOUT_CLASSIFICATION	0.999987005709782	WITHOUT_CLASSIFICATION	1.2994290217893587E-5	DEFECT
// CASE 2 : Comparing to another TimePeriod object // -----------------------------------------------	WITHOUT_CLASSIFICATION	0.999987005709782	WITHOUT_CLASSIFICATION	1.2994290217893587E-5	DEFECT
// CASE 2 : Comparing to another TimePeriod object // -----------------------------------------------	WITHOUT_CLASSIFICATION	0.999987005709782	WITHOUT_CLASSIFICATION	1.2994290217893587E-5	DEFECT
// CASE 2 : Comparing to another TimePeriod object // -----------------------------------------------	WITHOUT_CLASSIFICATION	0.999987005709782	WITHOUT_CLASSIFICATION	1.2994290217893587E-5	DEFECT
// remove old items if necessary, but // don't notify anyone, because that // happens next anyway...	WITHOUT_CLASSIFICATION	0.9999612282227759	WITHOUT_CLASSIFICATION	3.8771777224164184E-5	DEFECT
// get the current data item...	WITHOUT_CLASSIFICATION	0.9999982317537209	WITHOUT_CLASSIFICATION	1.7682462789831992E-6	DEFECT
// get the current data item...	WITHOUT_CLASSIFICATION	0.9999982317537209	WITHOUT_CLASSIFICATION	1.7682462789831992E-6	DEFECT
// The next 3 functions override the base-class implementation of // the DomainInfo interface.  Using saved limits (updated by // each updateTime() call), improves performance. //	WITHOUT_CLASSIFICATION	0.9999998737447453	WITHOUT_CLASSIFICATION	1.262552546804887E-7	DEFECT
// deregister the collection as a change listener to each series in the // collection	WITHOUT_CLASSIFICATION	0.9999991144786704	WITHOUT_CLASSIFICATION	8.855213295616467E-7	DEFECT
// alternatively, sometimes the first few days of the year are // considered to fall in the *last* week of the previous year...	WITHOUT_CLASSIFICATION	0.9999991323801559	WITHOUT_CLASSIFICATION	8.676198440010315E-7	DEFECT
// Unregister the collection as a change listener to each series in // the collection.	WITHOUT_CLASSIFICATION	0.999994403648509	WITHOUT_CLASSIFICATION	5.596351491025343E-6	DEFECT
// if the series is sorted, the negative index is a result from // Collections.binarySearch() and tells us where to insert the // new item...otherwise it will be just -1 and we should just // append the value to the list...	WITHOUT_CLASSIFICATION	0.9999367357527132	WITHOUT_CLASSIFICATION	6.32642472867539E-5	DEFECT
// pass mouse move event if some ChartMouseListener are listening	WITHOUT_CLASSIFICATION	0.9999973204194355	WITHOUT_CLASSIFICATION	2.6795805644473752E-6	DEFECT
// row keys...	WITHOUT_CLASSIFICATION	0.9999806314000574	WITHOUT_CLASSIFICATION	1.936859994258074E-5	DEFECT
// row keys...	WITHOUT_CLASSIFICATION	0.9999806314000574	WITHOUT_CLASSIFICATION	1.936859994258074E-5	DEFECT
// row keys...	WITHOUT_CLASSIFICATION	0.9999806314000574	WITHOUT_CLASSIFICATION	1.936859994258074E-5	DEFECT
// chart title // domain axis label // range axis label // data // orientation // include legend // tooltips? // URLs?	WITHOUT_CLASSIFICATION	0.9999610063473336	WITHOUT_CLASSIFICATION	3.8993652666268514E-5	DEFECT
// the SWTGraphics2D class doesn't handle GradientPaint well, so // replace the gradient painter from the default theme with a // standard painter...	WITHOUT_CLASSIFICATION	0.9999989946133773	WITHOUT_CLASSIFICATION	1.005386622719997E-6	DEFECT
// Dispose of any fonts we have created	WITHOUT_CLASSIFICATION	0.9999983050183167	WITHOUT_CLASSIFICATION	1.6949816832524988E-6	DEFECT
// Create the new font and set it into the title // label	WITHOUT_CLASSIFICATION	0.9999988002585688	WITHOUT_CLASSIFICATION	1.199741431230002E-6	DEFECT
// create the new color and set it to the // SwtPaintCanvas	WITHOUT_CLASSIFICATION	0.9999996076441321	WITHOUT_CLASSIFICATION	3.9235586783445577E-7	DEFECT
// row 2: outline color	WITHOUT_CLASSIFICATION	0.9999854678653521	WITHOUT_CLASSIFICATION	1.4532134647741239E-5	DEFECT
// Use a SwtPaintCanvas to show the color, note that we must set the // heightHint.	WITHOUT_CLASSIFICATION	0.9999322185450603	WITHOUT_CLASSIFICATION	6.778145493966888E-5	DEFECT
// backgroundPaint	WITHOUT_CLASSIFICATION	0.9999979761544323	WITHOUT_CLASSIFICATION	2.0238455676962774E-6	DEFECT
// backgroundPaint	WITHOUT_CLASSIFICATION	0.9999979761544323	WITHOUT_CLASSIFICATION	2.0238455676962774E-6	DEFECT
// backgroundPaint	WITHOUT_CLASSIFICATION	0.9999979761544323	WITHOUT_CLASSIFICATION	2.0238455676962774E-6	DEFECT
// now create a new title and replace the existing title, several // things should happen: // (1) Adding the new title should trigger an immediate //     ChartChangeEvent; // (2) Modifying the new title should trigger a ChartChangeEvent; // (3) Modifying the old title should NOT trigger a ChartChangeEvent	WITHOUT_CLASSIFICATION	0.9999815477261605	WITHOUT_CLASSIFICATION	1.8452273839510538E-5	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999905687775327	WITHOUT_CLASSIFICATION	9.431222467335725E-6	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999905687775327	WITHOUT_CLASSIFICATION	9.431222467335725E-6	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999905687775327	WITHOUT_CLASSIFICATION	9.431222467335725E-6	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999905687775327	WITHOUT_CLASSIFICATION	9.431222467335725E-6	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999905687775327	WITHOUT_CLASSIFICATION	9.431222467335725E-6	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999905687775327	WITHOUT_CLASSIFICATION	9.431222467335725E-6	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999905687775327	WITHOUT_CLASSIFICATION	9.431222467335725E-6	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999905687775327	WITHOUT_CLASSIFICATION	9.431222467335725E-6	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999905687775327	WITHOUT_CLASSIFICATION	9.431222467335725E-6	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999905687775327	WITHOUT_CLASSIFICATION	9.431222467335725E-6	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999905687775327	WITHOUT_CLASSIFICATION	9.431222467335725E-6	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999905687775327	WITHOUT_CLASSIFICATION	9.431222467335725E-6	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999905687775327	WITHOUT_CLASSIFICATION	9.431222467335725E-6	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999905687775327	WITHOUT_CLASSIFICATION	9.431222467335725E-6	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999905687775327	WITHOUT_CLASSIFICATION	9.431222467335725E-6	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999905687775327	WITHOUT_CLASSIFICATION	9.431222467335725E-6	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999905687775327	WITHOUT_CLASSIFICATION	9.431222467335725E-6	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999905687775327	WITHOUT_CLASSIFICATION	9.431222467335725E-6	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999905687775327	WITHOUT_CLASSIFICATION	9.431222467335725E-6	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999905687775327	WITHOUT_CLASSIFICATION	9.431222467335725E-6	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999905687775327	WITHOUT_CLASSIFICATION	9.431222467335725E-6	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999905687775327	WITHOUT_CLASSIFICATION	9.431222467335725E-6	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999905687775327	WITHOUT_CLASSIFICATION	9.431222467335725E-6	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999905687775327	WITHOUT_CLASSIFICATION	9.431222467335725E-6	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999905687775327	WITHOUT_CLASSIFICATION	9.431222467335725E-6	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999905687775327	WITHOUT_CLASSIFICATION	9.431222467335725E-6	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999905687775327	WITHOUT_CLASSIFICATION	9.431222467335725E-6	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999905687775327	WITHOUT_CLASSIFICATION	9.431222467335725E-6	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.9999937778672211	WITHOUT_CLASSIFICATION	6.222132778908538E-6	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.9999937778672211	WITHOUT_CLASSIFICATION	6.222132778908538E-6	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.9999937778672211	WITHOUT_CLASSIFICATION	6.222132778908538E-6	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.9999937778672211	WITHOUT_CLASSIFICATION	6.222132778908538E-6	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.9999937778672211	WITHOUT_CLASSIFICATION	6.222132778908538E-6	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.9999937778672211	WITHOUT_CLASSIFICATION	6.222132778908538E-6	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.9999937778672211	WITHOUT_CLASSIFICATION	6.222132778908538E-6	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.9999937778672211	WITHOUT_CLASSIFICATION	6.222132778908538E-6	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.9999937778672211	WITHOUT_CLASSIFICATION	6.222132778908538E-6	DEFECT
// labelFont	WITHOUT_CLASSIFICATION	0.9999921620244121	WITHOUT_CLASSIFICATION	7.837975587927327E-6	DEFECT
// fillPaint	WITHOUT_CLASSIFICATION	0.9999897373786347	WITHOUT_CLASSIFICATION	1.0262621365334329E-5	DEFECT
// fillPaint	WITHOUT_CLASSIFICATION	0.9999897373786347	WITHOUT_CLASSIFICATION	1.0262621365334329E-5	DEFECT
// fillPaint	WITHOUT_CLASSIFICATION	0.9999897373786347	WITHOUT_CLASSIFICATION	1.0262621365334329E-5	DEFECT
// outlinePaint	WITHOUT_CLASSIFICATION	0.9999964775886845	WITHOUT_CLASSIFICATION	3.522411315476329E-6	DEFECT
// a null key should throw an IllegalArgumentException	WITHOUT_CLASSIFICATION	0.9999888096033368	WITHOUT_CLASSIFICATION	1.1190396663142636E-5	DEFECT
// a null key should throw an IllegalArgumentException	WITHOUT_CLASSIFICATION	0.9999888096033368	WITHOUT_CLASSIFICATION	1.1190396663142636E-5	DEFECT
//gridBandPaint	WITHOUT_CLASSIFICATION	0.9999630194989314	WITHOUT_CLASSIFICATION	3.69805010685037E-5	DEFECT
//private double angle;	WITHOUT_CLASSIFICATION	0.9999849332825538	WITHOUT_CLASSIFICATION	1.5066717446191062E-5	DEFECT
//private double baseRadius;	WITHOUT_CLASSIFICATION	0.999989650030258	WITHOUT_CLASSIFICATION	1.0349969741996624E-5	DEFECT
//private double arrowWidth;	WITHOUT_CLASSIFICATION	0.9999532167346222	WITHOUT_CLASSIFICATION	4.678326537769992E-5	DEFECT
//private double labelOffset;	WITHOUT_CLASSIFICATION	0.9999904697825024	WITHOUT_CLASSIFICATION	9.530217497535226E-6	DEFECT
// font	WITHOUT_CLASSIFICATION	0.9999726236325669	WITHOUT_CLASSIFICATION	2.7376367433235134E-5	DEFECT
// paint	WITHOUT_CLASSIFICATION	0.9999810741291943	WITHOUT_CLASSIFICATION	1.8925870805732284E-5	DEFECT
// paint	WITHOUT_CLASSIFICATION	0.9999810741291943	WITHOUT_CLASSIFICATION	1.8925870805732284E-5	DEFECT
// paint	WITHOUT_CLASSIFICATION	0.9999810741291943	WITHOUT_CLASSIFICATION	1.8925870805732284E-5	DEFECT
// ok, exception is expected	WITHOUT_CLASSIFICATION	0.9999872639193191	WITHOUT_CLASSIFICATION	1.2736080680891413E-5	DEFECT
// stroke	WITHOUT_CLASSIFICATION	0.9999858947570747	WITHOUT_CLASSIFICATION	1.4105242925338302E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9998293165229138	WITHOUT_CLASSIFICATION	1.7068347708604285E-4	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9998293165229138	WITHOUT_CLASSIFICATION	1.7068347708604285E-4	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9998293165229138	WITHOUT_CLASSIFICATION	1.7068347708604285E-4	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9998293165229138	WITHOUT_CLASSIFICATION	1.7068347708604285E-4	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9998293165229138	WITHOUT_CLASSIFICATION	1.7068347708604285E-4	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9998293165229138	WITHOUT_CLASSIFICATION	1.7068347708604285E-4	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9998293165229138	WITHOUT_CLASSIFICATION	1.7068347708604285E-4	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9998293165229138	WITHOUT_CLASSIFICATION	1.7068347708604285E-4	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9998293165229138	WITHOUT_CLASSIFICATION	1.7068347708604285E-4	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9998293165229138	WITHOUT_CLASSIFICATION	1.7068347708604285E-4	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9998293165229138	WITHOUT_CLASSIFICATION	1.7068347708604285E-4	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9998293165229138	WITHOUT_CLASSIFICATION	1.7068347708604285E-4	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9998293165229138	WITHOUT_CLASSIFICATION	1.7068347708604285E-4	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9998293165229138	WITHOUT_CLASSIFICATION	1.7068347708604285E-4	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9998293165229138	WITHOUT_CLASSIFICATION	1.7068347708604285E-4	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9998293165229138	WITHOUT_CLASSIFICATION	1.7068347708604285E-4	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9998293165229138	WITHOUT_CLASSIFICATION	1.7068347708604285E-4	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9998293165229138	WITHOUT_CLASSIFICATION	1.7068347708604285E-4	DEFECT
// dateFormatOverride	WITHOUT_CLASSIFICATION	0.9999455466141403	WITHOUT_CLASSIFICATION	5.445338585969587E-5	DEFECT
// range	WITHOUT_CLASSIFICATION	0.9999708393737138	WITHOUT_CLASSIFICATION	2.9160626286238994E-5	DEFECT
// check that setting the max date to something on or before the // current min date works...	WITHOUT_CLASSIFICATION	0.9999980693101236	WITHOUT_CLASSIFICATION	1.9306898763930806E-6	DEFECT
// five dates to check...	WITHOUT_CLASSIFICATION	0.9999942919802973	WITHOUT_CLASSIFICATION	5.708019702626129E-6	DEFECT
// five dates to check...	WITHOUT_CLASSIFICATION	0.9999942919802973	WITHOUT_CLASSIFICATION	5.708019702626129E-6	DEFECT
// five dates to check...	WITHOUT_CLASSIFICATION	0.9999942919802973	WITHOUT_CLASSIFICATION	5.708019702626129E-6	DEFECT
// five dates to check...	WITHOUT_CLASSIFICATION	0.9999942919802973	WITHOUT_CLASSIFICATION	5.708019702626129E-6	DEFECT
// five dates to check...	WITHOUT_CLASSIFICATION	0.9999942919802973	WITHOUT_CLASSIFICATION	5.708019702626129E-6	DEFECT
// five dates to check...	WITHOUT_CLASSIFICATION	0.9999942919802973	WITHOUT_CLASSIFICATION	5.708019702626129E-6	DEFECT
// five dates to check...	WITHOUT_CLASSIFICATION	0.9999942919802973	WITHOUT_CLASSIFICATION	5.708019702626129E-6	DEFECT
// five dates to check...	WITHOUT_CLASSIFICATION	0.9999942919802973	WITHOUT_CLASSIFICATION	5.708019702626129E-6	DEFECT
// five dates to check...	WITHOUT_CLASSIFICATION	0.9999942919802973	WITHOUT_CLASSIFICATION	5.708019702626129E-6	DEFECT
// START: check d0 and d1	WITHOUT_CLASSIFICATION	0.9999881477990067	WITHOUT_CLASSIFICATION	1.1852200993347812E-5	DEFECT
// START: check d0 and d1	WITHOUT_CLASSIFICATION	0.9999881477990067	WITHOUT_CLASSIFICATION	1.1852200993347812E-5	DEFECT
// MIDDLE: check d1, d2 and d3	WITHOUT_CLASSIFICATION	0.9999850591347511	WITHOUT_CLASSIFICATION	1.4940865248877584E-5	DEFECT
// MIDDLE: check d1, d2 and d3	WITHOUT_CLASSIFICATION	0.9999850591347511	WITHOUT_CLASSIFICATION	1.4940865248877584E-5	DEFECT
// END: check d3 and d4	WITHOUT_CLASSIFICATION	0.9999687752615204	WITHOUT_CLASSIFICATION	3.122473847962037E-5	DEFECT
// END: check d3 and d4	WITHOUT_CLASSIFICATION	0.9999687752615204	WITHOUT_CLASSIFICATION	3.122473847962037E-5	DEFECT
//private boolean autoRangeStickyZero;	WITHOUT_CLASSIFICATION	0.9999938926390239	WITHOUT_CLASSIFICATION	6.107360976002156E-6	DEFECT
// now replacing the dataset should update the axis range...	WITHOUT_CLASSIFICATION	0.9999970972621286	WITHOUT_CLASSIFICATION	2.90273787131E-6	DEFECT
// now replacing the dataset should update the axis range...	WITHOUT_CLASSIFICATION	0.9999970972621286	WITHOUT_CLASSIFICATION	2.90273787131E-6	DEFECT
// set axis bounds to be both greater than 1	WITHOUT_CLASSIFICATION	0.999986099709004	WITHOUT_CLASSIFICATION	1.3900290996027119E-5	DEFECT
// check for bounds interval that includes 1	WITHOUT_CLASSIFICATION	0.9999969657322331	WITHOUT_CLASSIFICATION	3.0342677669084425E-6	DEFECT
// check for bounds interval that includes 1	WITHOUT_CLASSIFICATION	0.9999969657322331	WITHOUT_CLASSIFICATION	3.0342677669084425E-6	DEFECT
// tickLabelFont	WITHOUT_CLASSIFICATION	0.9999968618474672	WITHOUT_CLASSIFICATION	3.138152532795218E-6	DEFECT
// advance line Paint	WITHOUT_CLASSIFICATION	0.9999864921350471	WITHOUT_CLASSIFICATION	1.3507864952863602E-5	DEFECT
// Add exception in included segments	WITHOUT_CLASSIFICATION	0.9999965309762071	WITHOUT_CLASSIFICATION	3.4690237928599697E-6	DEFECT
// Saturday and Sundays are non business hours	WITHOUT_CLASSIFICATION	0.9999665392750603	WITHOUT_CLASSIFICATION	3.346072493964896E-5	DEFECT
/** These constants control test cycles in the validateXXXX methods. */	WITHOUT_CLASSIFICATION	0.9999919731547826	WITHOUT_CLASSIFICATION	8.02684521728265E-6	DEFECT
/** These constants control test cycles in the validateXXXX methods. */	WITHOUT_CLASSIFICATION	0.9999919731547826	WITHOUT_CLASSIFICATION	8.02684521728265E-6	DEFECT
// 1-ms test timeline using 5 included and 2 excluded segments. // // timeline start time = 0 //   | //   v //   0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 .. // +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+.. // |  |  |  |  |  |EE|EE|  |  |  |  |  |EE|EE|  |  |  |  |  |  |EE|EE|    <-- msTimeline // +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+.. //  \_________  ________/            \_/ //            \/                      | //       segment group         segment size = 1 ms //	WITHOUT_CLASSIFICATION	0.9999997769255008	WITHOUT_CLASSIFICATION	2.230744992288572E-7	DEFECT
// 1-ms test timeline (with a baseTimeline) using 2 included and 2 // excluded segments centered inside each base segment // // The ms2Timeline without a base would look like this: // //    timeline start time = 1 //      | //      v //   0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 ... // +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+... // |EE|  |  |EE|EE|  |  |EE|EE|  |  |EE|EE|  |  |EE|EE|  |  |EE|    <-- ms2Timeline // +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+... //    \____  _____/            \_/ //         \/                   | //    segment group      segment size = 1 ms // // With the base timeline some originally included segments are now // removed (see "xx" below): // //   0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 ... // +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+... // |EE|  |  |EE|EE|xx|xx|EE|EE|  |  |EE|EE|xx|xx|EE|EE|  |  |EE|    <-- ms2Timeline // +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+... // |  |  |  |  |EE|EE|EE|EE|  |  |  |  |EE|EE|EE|EE|  |  |  |  |    <-- ms2BaseTimeline // +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+... //	WITHOUT_CLASSIFICATION	0.9999949568350961	WITHOUT_CLASSIFICATION	5.043164903910862E-6	DEFECT
// test monday though friday timeline	WITHOUT_CLASSIFICATION	0.9999972460834637	WITHOUT_CLASSIFICATION	2.7539165361725472E-6	DEFECT
// find first Monday after 2001-01-01	WITHOUT_CLASSIFICATION	0.999995026541691	WITHOUT_CLASSIFICATION	4.9734583088961065E-6	DEFECT
////////////////////////////////////////////////////////////////////////// // test construction process //////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999984427330654	WITHOUT_CLASSIFICATION	1.557266934629743E-6	DEFECT
// verify attributes set during object construction	WITHOUT_CLASSIFICATION	0.9999979572128458	WITHOUT_CLASSIFICATION	2.0427871542319307E-6	DEFECT
////////////////////////////////////////////////////////////////////////// // main include and excluded segments //////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999983698258956	WITHOUT_CLASSIFICATION	1.6301741043996246E-6	DEFECT
////////////////////////////////////////////////////////////////////////// // test timeline translations //////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999953922101368	WITHOUT_CLASSIFICATION	4.607789863269688E-6	DEFECT
// verify all timeline segments included in the // baseTimeline.segment are now exceptions	WITHOUT_CLASSIFICATION	0.9999767222424932	WITHOUT_CLASSIFICATION	2.3277757506745262E-5	DEFECT
// 1-Jan-2000	WITHOUT_CLASSIFICATION	0.9999684962322889	WITHOUT_CLASSIFICATION	3.150376771099724E-5	DEFECT
// tick label insets...	WITHOUT_CLASSIFICATION	0.9999909954141842	WITHOUT_CLASSIFICATION	9.004585815734769E-6	DEFECT
// tick mark paint...	WITHOUT_CLASSIFICATION	0.9999853671553184	WITHOUT_CLASSIFICATION	1.4632844681633468E-5	DEFECT
// negativeArrowVisible;	WITHOUT_CLASSIFICATION	0.9999857227133206	WITHOUT_CLASSIFICATION	1.4277286679314249E-5	DEFECT
// axisLinePaint	WITHOUT_CLASSIFICATION	0.9999881182053973	WITHOUT_CLASSIFICATION	1.1881794602622582E-5	DEFECT
// autoRange	WITHOUT_CLASSIFICATION	0.9999897840397147	WITHOUT_CLASSIFICATION	1.0215960285245332E-5	DEFECT
// autoRangeMinimumSize	WITHOUT_CLASSIFICATION	0.9999691806047707	WITHOUT_CLASSIFICATION	3.081939522932089E-5	DEFECT
//private double fixedAutoRange;	WITHOUT_CLASSIFICATION	0.9999904571758457	WITHOUT_CLASSIFICATION	9.542824154360296E-6	DEFECT
//private boolean autoTickUnitSelection;	WITHOUT_CLASSIFICATION	0.9999914100512929	WITHOUT_CLASSIFICATION	8.589948707184667E-6	DEFECT
//private int autoTickIndex; //protected double reservedForTickLabels; //protected double reservedForAxisLabel;	WITHOUT_CLASSIFICATION	0.9999951442080307	WITHOUT_CLASSIFICATION	4.85579196927399E-6	DEFECT
// TBLRC // 00001 - center item only	WITHOUT_CLASSIFICATION	0.9999967530878567	WITHOUT_CLASSIFICATION	3.2469121431958674E-6	DEFECT
// TBLRC // 00001 - center item only	WITHOUT_CLASSIFICATION	0.9999967530878567	WITHOUT_CLASSIFICATION	3.2469121431958674E-6	DEFECT
// TBLRC // 00100 - left item only	WITHOUT_CLASSIFICATION	0.999991735433555	WITHOUT_CLASSIFICATION	8.264566444998814E-6	DEFECT
// TBLRC // 10101 - top, left and center	WITHOUT_CLASSIFICATION	0.9999991030347415	WITHOUT_CLASSIFICATION	8.969652584262991E-7	DEFECT
// TBLRC // 10110 - top, left and right	WITHOUT_CLASSIFICATION	0.999999261072715	WITHOUT_CLASSIFICATION	7.389272850635441E-7	DEFECT
// TBLRC // 11000 - top and bottom only	WITHOUT_CLASSIFICATION	0.9999964056368692	WITHOUT_CLASSIFICATION	3.594363130799914E-6	DEFECT
// TBLRC // 11011	WITHOUT_CLASSIFICATION	0.9999173929097345	WITHOUT_CLASSIFICATION	8.260709026549663E-5	DEFECT
// TBLRC // 11111 - all	WITHOUT_CLASSIFICATION	0.9999325495746572	WITHOUT_CLASSIFICATION	6.745042534277566E-5	DEFECT
// standard test	WITHOUT_CLASSIFICATION	0.9999967630929331	WITHOUT_CLASSIFICATION	3.236907067057294E-6	DEFECT
// Y format	WITHOUT_CLASSIFICATION	0.999946231331864	WITHOUT_CLASSIFICATION	5.3768668136056834E-5	DEFECT
// some setup...	WITHOUT_CLASSIFICATION	0.9999924368010179	WITHOUT_CLASSIFICATION	7.563198982040429E-6	DEFECT
// some setup...	WITHOUT_CLASSIFICATION	0.9999924368010179	WITHOUT_CLASSIFICATION	7.563198982040429E-6	DEFECT
// parent plot...	WITHOUT_CLASSIFICATION	0.9999944007915776	WITHOUT_CLASSIFICATION	5.599208422406761E-6	DEFECT
// innerSeparatorExtension	WITHOUT_CLASSIFICATION	0.9999386022415891	WITHOUT_CLASSIFICATION	6.139775841083395E-5	DEFECT
// domainAxis - no longer a separate field but test anyway...	WITHOUT_CLASSIFICATION	0.9999976454908029	WITHOUT_CLASSIFICATION	2.3545091969407597E-6	DEFECT
// rangeAxis - no longer a separate field but test anyway...	WITHOUT_CLASSIFICATION	0.9999969311969663	WITHOUT_CLASSIFICATION	3.0688030336633636E-6	DEFECT
// renderer - no longer a separate field but test anyway...	WITHOUT_CLASSIFICATION	0.9999988776603147	WITHOUT_CLASSIFICATION	1.1223396853000922E-6	DEFECT
// domainGridlinesVisible	WITHOUT_CLASSIFICATION	0.9999925262028947	WITHOUT_CLASSIFICATION	7.473797105205376E-6	DEFECT
// domainGridlinePosition	WITHOUT_CLASSIFICATION	0.9999945667847722	WITHOUT_CLASSIFICATION	5.43321522779941E-6	DEFECT
// rangeGridlinePaint	WITHOUT_CLASSIFICATION	0.9999901300694514	WITHOUT_CLASSIFICATION	9.869930548697845E-6	DEFECT
// anchorValue	WITHOUT_CLASSIFICATION	0.9999920314839337	WITHOUT_CLASSIFICATION	7.968516066347847E-6	DEFECT
// rangeCrosshairPaint	WITHOUT_CLASSIFICATION	0.9999909816586477	WITHOUT_CLASSIFICATION	9.018341352251999E-6	DEFECT
// rangeCrosshairPaint	WITHOUT_CLASSIFICATION	0.9999909816586477	WITHOUT_CLASSIFICATION	9.018341352251999E-6	DEFECT
// range markers - no longer separate fields but test anyway...	WITHOUT_CLASSIFICATION	0.9999939977148924	WITHOUT_CLASSIFICATION	6.002285107565126E-6	DEFECT
// fixed legend items	WITHOUT_CLASSIFICATION	0.9999738079137708	WITHOUT_CLASSIFICATION	2.619208622923343E-5	DEFECT
// domainCrosshairPaint	WITHOUT_CLASSIFICATION	0.9999918388741151	WITHOUT_CLASSIFICATION	8.161125884812547E-6	DEFECT
// check for independence	WITHOUT_CLASSIFICATION	0.9999958150387479	WITHOUT_CLASSIFICATION	4.184961252083758E-6	DEFECT
// check for independence	WITHOUT_CLASSIFICATION	0.9999958150387479	WITHOUT_CLASSIFICATION	4.184961252083758E-6	DEFECT
// now check that the chart is usable...	WITHOUT_CLASSIFICATION	0.9999845959551865	WITHOUT_CLASSIFICATION	1.5404044813409958E-5	DEFECT
// now check that the chart is usable...	WITHOUT_CLASSIFICATION	0.9999845959551865	WITHOUT_CLASSIFICATION	1.5404044813409958E-5	DEFECT
// now make a change to the renderer and see if it triggers a plot // change event...	WITHOUT_CLASSIFICATION	0.9999992074398588	WITHOUT_CLASSIFICATION	7.925601412318327E-7	DEFECT
// should get IllegalArgumentException for negative index	WITHOUT_CLASSIFICATION	0.9999940862185394	WITHOUT_CLASSIFICATION	5.913781460605075E-6	DEFECT
// if multiple axes are mapped, the first in the list should be // returned...	WITHOUT_CLASSIFICATION	0.9999559715585906	WITHOUT_CLASSIFICATION	4.402844140945853E-5	DEFECT
// if multiple axes are mapped, the first in the list should be // returned...	WITHOUT_CLASSIFICATION	0.9999559715585906	WITHOUT_CLASSIFICATION	4.402844140945853E-5	DEFECT
// add a second dataset	WITHOUT_CLASSIFICATION	0.9999967171346988	WITHOUT_CLASSIFICATION	3.2828653012333383E-6	DEFECT
// units	WITHOUT_CLASSIFICATION	0.9999696234699709	WITHOUT_CLASSIFICATION	3.0376530029035132E-5	DEFECT
// tick labels visible	WITHOUT_CLASSIFICATION	0.9999913942354118	WITHOUT_CLASSIFICATION	8.60576458813118E-6	DEFECT
// tick size	WITHOUT_CLASSIFICATION	0.9999885078062003	WITHOUT_CLASSIFICATION	1.149219379966233E-5	DEFECT
// the clone and the original share a reference to the SAME dataset	WITHOUT_CLASSIFICATION	0.9999986681180447	WITHOUT_CLASSIFICATION	1.3318819553629799E-6	DEFECT
// check null argument...	WITHOUT_CLASSIFICATION	0.9999956914785625	WITHOUT_CLASSIFICATION	4.308521437464468E-6	DEFECT
// check null argument...	WITHOUT_CLASSIFICATION	0.9999956914785625	WITHOUT_CLASSIFICATION	4.308521437464468E-6	DEFECT
// check null argument...	WITHOUT_CLASSIFICATION	0.9999956914785625	WITHOUT_CLASSIFICATION	4.308521437464468E-6	DEFECT
// check null argument...	WITHOUT_CLASSIFICATION	0.9999956914785625	WITHOUT_CLASSIFICATION	4.308521437464468E-6	DEFECT
// check null argument...	WITHOUT_CLASSIFICATION	0.9999956914785625	WITHOUT_CLASSIFICATION	4.308521437464468E-6	DEFECT
// check null argument...	WITHOUT_CLASSIFICATION	0.9999956914785625	WITHOUT_CLASSIFICATION	4.308521437464468E-6	DEFECT
// check null argument...	WITHOUT_CLASSIFICATION	0.9999956914785625	WITHOUT_CLASSIFICATION	4.308521437464468E-6	DEFECT
// check null argument...	WITHOUT_CLASSIFICATION	0.9999956914785625	WITHOUT_CLASSIFICATION	4.308521437464468E-6	DEFECT
// check null argument...	WITHOUT_CLASSIFICATION	0.9999956914785625	WITHOUT_CLASSIFICATION	4.308521437464468E-6	DEFECT
// check null argument...	WITHOUT_CLASSIFICATION	0.9999956914785625	WITHOUT_CLASSIFICATION	4.308521437464468E-6	DEFECT
// check null argument...	WITHOUT_CLASSIFICATION	0.9999956914785625	WITHOUT_CLASSIFICATION	4.308521437464468E-6	DEFECT
// labelType...	WITHOUT_CLASSIFICATION	0.9999855439052455	WITHOUT_CLASSIFICATION	1.4456094754481483E-5	DEFECT
// pieIndex...	WITHOUT_CLASSIFICATION	0.999976682538147	WITHOUT_CLASSIFICATION	2.3317461853039917E-5	DEFECT
// ignoreZeroValues	WITHOUT_CLASSIFICATION	0.9999923136475358	WITHOUT_CLASSIFICATION	7.686352464216722E-6	DEFECT
// sectionOutlinesVisible	WITHOUT_CLASSIFICATION	0.9999962642923479	WITHOUT_CLASSIFICATION	3.735707652091445E-6	DEFECT
// sectionOutlineStroke	WITHOUT_CLASSIFICATION	0.9999959433699883	WITHOUT_CLASSIFICATION	4.056630011739373E-6	DEFECT
// labelBackgroundPaint	WITHOUT_CLASSIFICATION	0.9999983703328896	WITHOUT_CLASSIFICATION	1.6296671103073105E-6	DEFECT
// labelGenerator	WITHOUT_CLASSIFICATION	0.9999876400347886	WITHOUT_CLASSIFICATION	1.2359965211452227E-5	DEFECT
// we use ValueMarker for the tests, because we need a concrete // subclass...	WITHOUT_CLASSIFICATION	0.999999482052639	WITHOUT_CLASSIFICATION	5.179473609886875E-7	DEFECT
// we use ValueMarker for the tests, because we need a concrete // subclass...	WITHOUT_CLASSIFICATION	0.999999482052639	WITHOUT_CLASSIFICATION	5.179473609886875E-7	DEFECT
// we use ValueMarker for the tests, because we need a concrete // subclass...	WITHOUT_CLASSIFICATION	0.999999482052639	WITHOUT_CLASSIFICATION	5.179473609886875E-7	DEFECT
// we use ValueMarker for the tests, because we need a concrete // subclass...	WITHOUT_CLASSIFICATION	0.999999482052639	WITHOUT_CLASSIFICATION	5.179473609886875E-7	DEFECT
// we use ValueMarker for the tests, because we need a concrete // subclass...	WITHOUT_CLASSIFICATION	0.999999482052639	WITHOUT_CLASSIFICATION	5.179473609886875E-7	DEFECT
// we use ValueMarker for the tests, because we need a concrete // subclass...	WITHOUT_CLASSIFICATION	0.999999482052639	WITHOUT_CLASSIFICATION	5.179473609886875E-7	DEFECT
// we use ValueMarker for the tests, because we need a concrete // subclass...	WITHOUT_CLASSIFICATION	0.999999482052639	WITHOUT_CLASSIFICATION	5.179473609886875E-7	DEFECT
// we use ValueMarker for the tests, because we need a concrete // subclass...	WITHOUT_CLASSIFICATION	0.999999482052639	WITHOUT_CLASSIFICATION	5.179473609886875E-7	DEFECT
// we use ValueMarker for the tests, because we need a concrete // subclass...	WITHOUT_CLASSIFICATION	0.999999482052639	WITHOUT_CLASSIFICATION	5.179473609886875E-7	DEFECT
// we use ValueMarker for the tests, because we need a concrete // subclass...	WITHOUT_CLASSIFICATION	0.999999482052639	WITHOUT_CLASSIFICATION	5.179473609886875E-7	DEFECT
// verify independence of fixed legend item collection	WITHOUT_CLASSIFICATION	0.9999982268794245	WITHOUT_CLASSIFICATION	1.773120575489638E-6	DEFECT
// stroke sequence	WITHOUT_CLASSIFICATION	0.9999975441936287	WITHOUT_CLASSIFICATION	2.4558063713480325E-6	DEFECT
// stroke index	WITHOUT_CLASSIFICATION	0.999992779850902	WITHOUT_CLASSIFICATION	7.220149098090969E-6	DEFECT
// check an inherited attribute	WITHOUT_CLASSIFICATION	0.9999820871391704	WITHOUT_CLASSIFICATION	1.7912860829609395E-5	DEFECT
// check an inherited attribute	WITHOUT_CLASSIFICATION	0.9999820871391704	WITHOUT_CLASSIFICATION	1.7912860829609395E-5	DEFECT
// check an inherited attribute	WITHOUT_CLASSIFICATION	0.9999820871391704	WITHOUT_CLASSIFICATION	1.7912860829609395E-5	DEFECT
// check an inherited attribute	WITHOUT_CLASSIFICATION	0.9999820871391704	WITHOUT_CLASSIFICATION	1.7912860829609395E-5	DEFECT
// check an inherited attribute	WITHOUT_CLASSIFICATION	0.9999820871391704	WITHOUT_CLASSIFICATION	1.7912860829609395E-5	DEFECT
// check an inherited attribute	WITHOUT_CLASSIFICATION	0.9999820871391704	WITHOUT_CLASSIFICATION	1.7912860829609395E-5	DEFECT
// check an inherited attribute	WITHOUT_CLASSIFICATION	0.9999820871391704	WITHOUT_CLASSIFICATION	1.7912860829609395E-5	DEFECT
// check that the listener lists are independent	WITHOUT_CLASSIFICATION	0.9999913795244738	WITHOUT_CLASSIFICATION	8.620475526137876E-6	DEFECT
// check that the listener lists are independent	WITHOUT_CLASSIFICATION	0.9999913795244738	WITHOUT_CLASSIFICATION	8.620475526137876E-6	DEFECT
// check that the listener lists are independent	WITHOUT_CLASSIFICATION	0.9999913795244738	WITHOUT_CLASSIFICATION	8.620475526137876E-6	DEFECT
// check that the listener lists are independent	WITHOUT_CLASSIFICATION	0.9999913795244738	WITHOUT_CLASSIFICATION	8.620475526137876E-6	DEFECT
// check that the listener lists are independent	WITHOUT_CLASSIFICATION	0.9999913795244738	WITHOUT_CLASSIFICATION	8.620475526137876E-6	DEFECT
// minorTickCount	WITHOUT_CLASSIFICATION	0.999992591128844	WITHOUT_CLASSIFICATION	7.40887115602435E-6	DEFECT
// try a default instance	WITHOUT_CLASSIFICATION	0.9999973683448145	WITHOUT_CLASSIFICATION	2.6316551855382646E-6	DEFECT
// try a customised instance	WITHOUT_CLASSIFICATION	0.9999933397462507	WITHOUT_CLASSIFICATION	6.660253749291024E-6	DEFECT
// seriesVisibleInLegend	WITHOUT_CLASSIFICATION	0.9999911370836961	WITHOUT_CLASSIFICATION	8.86291630375265E-6	DEFECT
//upper bound and margin OK; get log10 of upper bound	WITHOUT_CLASSIFICATION	0.9999971358315027	WITHOUT_CLASSIFICATION	2.864168497345888E-6	DEFECT
// fillPaintList	WITHOUT_CLASSIFICATION	0.999993179193784	WITHOUT_CLASSIFICATION	6.820806215979703E-6	DEFECT
//apply upper margin by increasing upper bound:	WITHOUT_CLASSIFICATION	0.9999943141577725	WITHOUT_CLASSIFICATION	5.685842227523649E-6	DEFECT
// baseStroke	WITHOUT_CLASSIFICATION	0.9999872559159834	WITHOUT_CLASSIFICATION	1.2744084016627867E-5	DEFECT
// Reference: http://www.antigrain.com/research/bezier_interpolation/	WITHOUT_CLASSIFICATION	0.9999994862536178	WITHOUT_CLASSIFICATION	5.137463822180398E-7	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999972131066635	WITHOUT_CLASSIFICATION	2.78689333669082E-6	DEFECT
// initialize ChartPanel-specific tool tip delays with // values the from ToolTipManager.sharedInstance()	WITHOUT_CLASSIFICATION	0.9999981704086905	WITHOUT_CLASSIFICATION	1.8295913095111828E-6	DEFECT
// only draw if we have good values	WITHOUT_CLASSIFICATION	0.9999987154035068	WITHOUT_CLASSIFICATION	1.2845964930965391E-6	DEFECT
// properties // save // print // zoom // tooltips	WITHOUT_CLASSIFICATION	0.9999978511397457	WITHOUT_CLASSIFICATION	2.148860254314765E-6	DEFECT
// properties // save // print // zoom // tooltips	WITHOUT_CLASSIFICATION	0.9999978511397457	WITHOUT_CLASSIFICATION	2.148860254314765E-6	DEFECT
// stop listening for changes to the existing chart	WITHOUT_CLASSIFICATION	0.9999995975370374	WITHOUT_CLASSIFICATION	4.0246296263869933E-7	DEFECT
// set up popup menu...	WITHOUT_CLASSIFICATION	0.9999932542786344	WITHOUT_CLASSIFICATION	6.745721365650189E-6	DEFECT
// itemLabelsVisible	WITHOUT_CLASSIFICATION	0.9999719900084536	WITHOUT_CLASSIFICATION	2.8009991546343962E-5	DEFECT
// make the background of the buffer clear and transparent	WITHOUT_CLASSIFICATION	0.9999989487315255	WITHOUT_CLASSIFICATION	1.0512684744398932E-6	DEFECT
// for MacOSX we can't use the CTRL key for mouse drags, see: // http://developer.apple.com/qa/qa2004/qa1362.html	WITHOUT_CLASSIFICATION	0.9999975865205447	WITHOUT_CLASSIFICATION	2.413479455232223E-6	DEFECT
// add the new chart	WITHOUT_CLASSIFICATION	0.9999950214302142	WITHOUT_CLASSIFICATION	4.978569785788143E-6	DEFECT
// work out if scaling is required...	WITHOUT_CLASSIFICATION	0.9999984875969764	WITHOUT_CLASSIFICATION	1.5124030236044177E-6	DEFECT
// first determine the size of the chart rendering area...	WITHOUT_CLASSIFICATION	0.9999952762541522	WITHOUT_CLASSIFICATION	4.72374584778667E-6	DEFECT
// do we need to resize the buffer?	WITHOUT_CLASSIFICATION	0.9999132375761002	WITHOUT_CLASSIFICATION	8.676242389972189E-5	DEFECT
// are we using the chart buffer?	WITHOUT_CLASSIFICATION	0.9995849184104537	WITHOUT_CLASSIFICATION	4.150815895462502E-4	DEFECT
// clear the flag	WITHOUT_CLASSIFICATION	0.9999965182967895	WITHOUT_CLASSIFICATION	3.4817032106726636E-6	DEFECT
// do we need to redraw the buffer?	WITHOUT_CLASSIFICATION	0.9998515853045628	WITHOUT_CLASSIFICATION	1.4841469543728966E-4	DEFECT
// redraw the zoom rectangle (if present) - if useBuffer is false, // we use XOR so we can XOR the rectangle away again without redrawing // the chart	WITHOUT_CLASSIFICATION	0.999994688975855	WITHOUT_CLASSIFICATION	5.311024145079033E-6	DEFECT
// redrawing the chart every time...	WITHOUT_CLASSIFICATION	0.999995174909148	WITHOUT_CLASSIFICATION	4.8250908520172355E-6	DEFECT
// zap the buffer onto the panel...	WITHOUT_CLASSIFICATION	0.9999858962967657	WITHOUT_CLASSIFICATION	1.4103703234352387E-5	DEFECT
// does nothing - override if necessary	WITHOUT_CLASSIFICATION	0.9999993362687494	WITHOUT_CLASSIFICATION	6.637312506189476E-7	DEFECT
// many of the zoom methods need a screen location - all we have is // the zoomPoint, but it might be null.  Here we grab the x and y // coordinates, or use defaults...	WITHOUT_CLASSIFICATION	0.999999632875591	WITHOUT_CLASSIFICATION	3.671244089384149E-7	DEFECT
// itemLabelFontList	WITHOUT_CLASSIFICATION	0.9999856546533501	WITHOUT_CLASSIFICATION	1.434534664999817E-5	DEFECT
// restore original tooltip dealys	WITHOUT_CLASSIFICATION	0.9999994536125367	WITHOUT_CLASSIFICATION	5.463874631559178E-7	DEFECT
// can we pan this plot?	WITHOUT_CLASSIFICATION	0.9998352997689839	WITHOUT_CLASSIFICATION	1.647002310161093E-4	DEFECT
// the actual panning occurs later in the mouseDragged()  // method	WITHOUT_CLASSIFICATION	0.9999977846593797	WITHOUT_CLASSIFICATION	2.2153406201888775E-6	DEFECT
// if the popup menu has already been triggered, then ignore dragging...	WITHOUT_CLASSIFICATION	0.9999970755250396	WITHOUT_CLASSIFICATION	2.9244749605192595E-6	DEFECT
// handle panning if we have a start point	WITHOUT_CLASSIFICATION	0.9999989684788343	WITHOUT_CLASSIFICATION	1.0315211657477954E-6	DEFECT
// if no initial zoom point was set, ignore dragging...	WITHOUT_CLASSIFICATION	0.9999996666806846	WITHOUT_CLASSIFICATION	3.33319315305903E-7	DEFECT
// erase the previous zoom rectangle (if any).  We only need to do // this is we are using XOR mode, which we do when we're not using // the buffer (if there is a buffer, then at the end of this method we // just trigger a repaint)	WITHOUT_CLASSIFICATION	0.999903626575785	WITHOUT_CLASSIFICATION	9.637342421499602E-5	DEFECT
// selected rectangle shouldn't extend outside the data area...	WITHOUT_CLASSIFICATION	0.9999981492480079	WITHOUT_CLASSIFICATION	1.8507519920882541E-6	DEFECT
// Draw the new zoom rectangle...	WITHOUT_CLASSIFICATION	0.9999963172714937	WITHOUT_CLASSIFICATION	3.682728506415559E-6	DEFECT
// with no buffer, we use XOR to draw the rectangle "over" the // chart...	WITHOUT_CLASSIFICATION	0.9999896948363971	WITHOUT_CLASSIFICATION	1.0305163602850567E-5	DEFECT
// if we've been panning, we need to reset now that the mouse is  // released...	WITHOUT_CLASSIFICATION	0.999978584242245	WITHOUT_CLASSIFICATION	2.1415757755063714E-5	DEFECT
// for mouseReleased event, (horizontalZoom || verticalZoom) // will be true, so we can just test for either being false; // otherwise both are true	WITHOUT_CLASSIFICATION	0.9999657816520859	WITHOUT_CLASSIFICATION	3.421834791412365E-5	DEFECT
// erase the zoom rectangle	WITHOUT_CLASSIFICATION	0.9999947832718187	WITHOUT_CLASSIFICATION	5.216728181321125E-6	DEFECT
// force a redraw // new entity code...	WITHOUT_CLASSIFICATION	0.9999927875098523	WITHOUT_CLASSIFICATION	7.212490147696611E-6	DEFECT
// we need to guard against this.zoomPoint being null	WITHOUT_CLASSIFICATION	0.999987578974095	WITHOUT_CLASSIFICATION	1.2421025905069656E-5	DEFECT
// we need to guard against this.zoomPoint being null	WITHOUT_CLASSIFICATION	0.999987578974095	WITHOUT_CLASSIFICATION	1.2421025905069656E-5	DEFECT
// Set XOR mode to draw the zoom rectangle	WITHOUT_CLASSIFICATION	0.999996300583964	WITHOUT_CLASSIFICATION	3.6994160358929925E-6	DEFECT
// null will be returned	WITHOUT_CLASSIFICATION	0.999975004181595	WITHOUT_CLASSIFICATION	2.499581840500578E-5	DEFECT
// get the origin of the zoom selection in the Java2D space used for // drawing the chart (that is, before any scaling to fit the panel)	WITHOUT_CLASSIFICATION	0.9999997413445368	WITHOUT_CLASSIFICATION	2.586554630995742E-7	DEFECT
// get the origin of the zoom selection in the Java2D space used for // drawing the chart (that is, before any scaling to fit the panel)	WITHOUT_CLASSIFICATION	0.9999997413445368	WITHOUT_CLASSIFICATION	2.586554630995742E-7	DEFECT
// use reflection to get the SVG string	WITHOUT_CLASSIFICATION	0.9999987816855973	WITHOUT_CLASSIFICATION	1.2183144027033732E-6	DEFECT
// Reset to the default 'overwrite' mode	WITHOUT_CLASSIFICATION	0.9999996861650019	WITHOUT_CLASSIFICATION	3.1383499807537267E-7	DEFECT
// Reset to the default 'overwrite' mode	WITHOUT_CLASSIFICATION	0.9999996861650019	WITHOUT_CLASSIFICATION	3.1383499807537267E-7	DEFECT
// Reset to the default 'overwrite' mode	WITHOUT_CLASSIFICATION	0.9999996861650019	WITHOUT_CLASSIFICATION	3.1383499807537267E-7	DEFECT
// null will be returned	WITHOUT_CLASSIFICATION	0.999975004181595	WITHOUT_CLASSIFICATION	2.499581840500578E-5	DEFECT
// we suppress shadow generation, because SVG is a vector format and // the shadow effect is applied via bitmap effects...	WITHOUT_CLASSIFICATION	0.9997660755676541	WITHOUT_CLASSIFICATION	2.3392443234602968E-4	DEFECT
// pdfDocument class will be null so the function will return false	WITHOUT_CLASSIFICATION	0.9999990660804754	WITHOUT_CLASSIFICATION	9.339195245920414E-7	DEFECT
// null will be returned	WITHOUT_CLASSIFICATION	0.999975004181595	WITHOUT_CLASSIFICATION	2.499581840500578E-5	DEFECT
// null will be returned	WITHOUT_CLASSIFICATION	0.999975004181595	WITHOUT_CLASSIFICATION	2.499581840500578E-5	DEFECT
// null will be returned	WITHOUT_CLASSIFICATION	0.999975004181595	WITHOUT_CLASSIFICATION	2.499581840500578E-5	DEFECT
// fetch listeners from local storage	WITHOUT_CLASSIFICATION	0.9999914620723931	WITHOUT_CLASSIFICATION	8.537927606916648E-6	DEFECT
// here we need to update the UI for the popup menu, if the panel // has one...	WITHOUT_CLASSIFICATION	0.9999980251399123	WITHOUT_CLASSIFICATION	1.9748600876459504E-6	DEFECT
// we suppress shadow generation, because PDF is a vector format and // the shadow effect is applied via bitmap effects...	WITHOUT_CLASSIFICATION	0.9998551161428662	WITHOUT_CLASSIFICATION	1.4488385713392875E-4	DEFECT
// register as a listener with sub-components...	WITHOUT_CLASSIFICATION	0.9999945613003652	WITHOUT_CLASSIFICATION	5.438699634759743E-6	DEFECT
// go through each zoom menu item and decide whether or not to // enable it...	WITHOUT_CLASSIFICATION	0.9999974302584628	WITHOUT_CLASSIFICATION	2.5697415372379417E-6	DEFECT
// suppresses compiler warning	WITHOUT_CLASSIFICATION	0.9999949752876542	WITHOUT_CLASSIFICATION	5.024712345778293E-6	DEFECT
// we create a new but empty chartMouseListeners list	WITHOUT_CLASSIFICATION	0.9999888664028576	WITHOUT_CLASSIFICATION	1.1133597142483979E-5	DEFECT
// suppresses compiler warning	WITHOUT_CLASSIFICATION	0.9999949752876542	WITHOUT_CLASSIFICATION	5.024712345778293E-6	DEFECT
/* =========================================================== * JFreeChart : a free chart library for the Java(tm) platform * =========================================================== * * (C) Copyright 2000-2014, by Object Refinery Limited and Contributors. * * Project Info:  http://www.jfree.org/jfreechart/index.html * * This library is free software; you can redistribute it and/or modify it * under the terms of the GNU Lesser General Public License as published by * the Free Software Foundation; either version 2.1 of the License, or * (at your option) any later version. * * This library is distributed in the hope that it will be useful, but * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public * License for more details. * * You should have received a copy of the GNU Lesser General Public * License along with this library; if not, write to the Free Software * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, * USA. * * [Oracle and Java are registered trademarks of Oracle and/or its affiliates.  * Other names may be trademarks of their respective owners.] * * ----------------- * ChartFactory.java * ----------------- * (C) Copyright 2001-2014, by Object Refinery Limited and Contributors. * * Original Author:  David Gilbert (for Object Refinery Limited); * Contributor(s):   Serge V. Grachov; *                   Joao Guilherme Del Valle; *                   Bill Kelemen; *                   Jon Iles; *                   Jelai Wang; *                   Richard Atkinson; *                   David Browning (for Australian Institute of Marine *                       Science); *                   Benoit Xhenseval; * * Changes * ------- * 19-Oct-2001 : Version 1, most methods transferred from JFreeChart.java (DG); * 22-Oct-2001 : Added methods to create stacked bar charts (DG); *               Renamed DataSource.java --> Dataset.java etc. (DG); * 31-Oct-2001 : Added 3D-effect vertical bar and stacked-bar charts, *               contributed by Serge V. Grachov (DG); * 07-Nov-2001 : Added a flag to control whether or not a legend is added to *               the chart (DG); * 17-Nov-2001 : For pie chart, changed dataset from CategoryDataset to *               PieDataset (DG); * 30-Nov-2001 : Removed try/catch handlers from chart creation, as the *               exception are now RuntimeExceptions, as suggested by Joao *               Guilherme Del Valle (DG); * 06-Dec-2001 : Added createCombinableXXXXXCharts methods (BK); * 12-Dec-2001 : Added createCandlestickChart() method (DG); * 13-Dec-2001 : Updated methods for charts with new renderers (DG); * 08-Jan-2002 : Added import for *               com.jrefinery.chart.combination.CombinedChart (DG); * 31-Jan-2002 : Changed the createCombinableVerticalXYBarChart() method to use *               renderer (DG); * 06-Feb-2002 : Added new method createWindPlot() (DG); * 23-Apr-2002 : Updates to the chart and plot constructor API (DG); * 21-May-2002 : Added new method createAreaChart() (JI); * 06-Jun-2002 : Added new method createGanttChart() (DG); * 11-Jun-2002 : Renamed createHorizontalStackedBarChart() *               --> createStackedHorizontalBarChart() for consistency (DG); * 06-Aug-2002 : Updated Javadoc comments (DG); * 21-Aug-2002 : Added createPieChart(CategoryDataset) method (DG); * 02-Oct-2002 : Fixed errors reported by Checkstyle (DG); * 09-Oct-2002 : Added methods including tooltips and URL flags (DG); * 06-Nov-2002 : Moved renderers into a separate package (DG); * 18-Nov-2002 : Changed CategoryDataset to TableDataset (DG); * 21-Mar-2003 : Incorporated HorizontalCategoryAxis3D, see bug id 685501 (DG); * 13-May-2003 : Merged some horizontal and vertical methods (DG); * 24-May-2003 : Added support for timeline in createHighLowChart (BK); * 07-Jul-2003 : Added createHistogram() method contributed by Jelai Wang (DG); * 27-Jul-2003 : Added createStackedAreaXYChart() method (RA); * 05-Aug-2003 : added new method createBoxAndWhiskerChart (DB); * 08-Sep-2003 : Changed ValueAxis API (DG); * 07-Oct-2003 : Added stepped area XY chart contributed by Matthias Rose (DG); * 06-Nov-2003 : Added createWaterfallChart() method (DG); * 20-Nov-2003 : Set rendering order for 3D bar charts to fix overlapping *               problems (DG); * 25-Nov-2003 : Added createWaferMapChart() method (DG); * 23-Dec-2003 : Renamed createPie3DChart() --> createPieChart3D for *               consistency (DG); * 20-Jan-2004 : Added createPolarChart() method (DG); * 28-Jan-2004 : Fixed bug (882890) with axis range in *               createStackedXYAreaChart() method (DG); * 25-Feb-2004 : Renamed XYToolTipGenerator --> XYItemLabelGenerator (DG); * 11-Mar-2004 : Updated for pie chart changes (DG); * 27-Apr-2004 : Added new createPieChart() method contributed by Benoit *               Xhenseval (see RFE 942195) (DG); * 11-May-2004 : Split StandardCategoryItemLabelGenerator *               --> StandardCategoryToolTipGenerator and *               StandardCategoryLabelGenerator (DG); * 06-Jan-2005 : Removed deprecated methods (DG); * 27-Jan-2005 : Added new constructor to LineAndShapeRenderer (DG); * 28-Feb-2005 : Added docs to createBubbleChart() method (DG); * 17-Mar-2005 : Added createRingPlot() method (DG); * 21-Apr-2005 : Replaced Insets with RectangleInsets (DG); * 29-Nov-2005 : Removed signal chart (DG); * ------------- JFREECHART 1.0.x --------------------------------------------- * 26-Jan-2006 : Corrected API docs for createScatterPlot() (DG); * 23-Aug-2006 : Modified createStackedXYAreaChart() to use *               StackedXYAreaRenderer2, because StackedXYAreaRenderer doesn't *               handle negative values (DG); * 27-Sep-2006 : Update createPieChart() method for deprecated code (DG); * 29-Nov-2006 : Update createXYBarChart() to use a time based tool tip *               generator is a DateAxis is requested (DG); * 17-Jan-2007 : Added createBoxAndWhiskerChart() method from patch 1603937 *               submitted by Darren Jung (DG); * 10-Jul-2007 : Added new methods to create pie charts with locale for *               section label and tool tip formatting (DG); * 14-Aug-2008 : Added ChartTheme facility (DG); * 23-Oct-2008 : Check for legacy theme in setChartTheme() and reset default *               bar painters (DG); * 20-Dec-2008 : In createStackedAreaChart(), set category margin to 0.0 (DG); * 02-Jul-2013 : Use ParamChecks class (DG); *  */	WITHOUT_CLASSIFICATION	0.9998377457001731	WITHOUT_CLASSIFICATION	1.6225429982689223E-4	DEFECT
//get absolute value of log10 value	WITHOUT_CLASSIFICATION	0.9999872017775037	WITHOUT_CLASSIFICATION	1.2798222496328977E-5	DEFECT
// suppresses compiler warning	WITHOUT_CLASSIFICATION	0.9999949752876542	WITHOUT_CLASSIFICATION	5.024712345778293E-6	DEFECT
// suppresses compiler warning	WITHOUT_CLASSIFICATION	0.9999949752876542	WITHOUT_CLASSIFICATION	5.024712345778293E-6	DEFECT
// create the renderer...	WITHOUT_CLASSIFICATION	0.9999830794286763	WITHOUT_CLASSIFICATION	1.692057132376445E-5	DEFECT
// create the plot...	WITHOUT_CLASSIFICATION	0.9999949555778335	WITHOUT_CLASSIFICATION	5.044422166564957E-6	DEFECT
// create the chart...	WITHOUT_CLASSIFICATION	0.9999863945471843	WITHOUT_CLASSIFICATION	1.3605452815583836E-5	DEFECT
// forces recalculation of the axis range	WITHOUT_CLASSIFICATION	0.9999984052803084	WITHOUT_CLASSIFICATION	1.5947196916066079E-6	DEFECT
// reduce the default margins	WITHOUT_CLASSIFICATION	0.9999993187786687	WITHOUT_CLASSIFICATION	6.812213314006176E-7	DEFECT
// override default	WITHOUT_CLASSIFICATION	0.9999980206783273	WITHOUT_CLASSIFICATION	1.9793216726537164E-6	DEFECT
// get desired width and height from somewhere then...	WITHOUT_CLASSIFICATION	0.9999979666863021	WITHOUT_CLASSIFICATION	2.0333136978416984E-6	DEFECT
// change rendering order to ensure that bar overlapping is the // right way around	WITHOUT_CLASSIFICATION	0.999928784132612	WITHOUT_CLASSIFICATION	7.121586738805835E-5	DEFECT
// change rendering order to ensure that bar overlapping is the // right way around	WITHOUT_CLASSIFICATION	0.999928784132612	WITHOUT_CLASSIFICATION	7.121586738805835E-5	DEFECT
// no need to instantiate this    	WITHOUT_CLASSIFICATION	0.9999768828850661	WITHOUT_CLASSIFICATION	2.3117114933794638E-5	DEFECT
// seems to be the same...	WITHOUT_CLASSIFICATION	0.9999570472023238	WITHOUT_CLASSIFICATION	4.2952797676187355E-5	DEFECT
/* =========================================================== * JFreeChart : a free chart library for the Java(tm) platform * =========================================================== * * (C) Copyright 2000-2013, by Object Refinery Limited and Contributors. * * Project Info:  http://www.jfree.org/jfreechart/index.html * * This library is free software; you can redistribute it and/or modify it * under the terms of the GNU Lesser General Public License as published by * the Free Software Foundation; either version 2.1 of the License, or * (at your option) any later version. * * This library is distributed in the hope that it will be useful, but * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public * License for more details. * * You should have received a copy of the GNU Lesser General Public * License along with this library; if not, write to the Free Software * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, * USA. * * [Oracle and Java are registered trademarks of Oracle and/or its affiliates.  * Other names may be trademarks of their respective owners.] * * ------------------- * ChartUtilities.java * ------------------- * (C) Copyright 2001-2013, by Object Refinery Limited and Contributors. * * Original Author:  David Gilbert (for Object Refinery Limited); * Contributor(s):   Wolfgang Irler; *                   Richard Atkinson; *                   Xavier Poinsard; * * Changes * ------- * 11-Dec-2001 : Version 1.  The JPEG method comes from Wolfgang Irler's *               JFreeChartServletDemo class (DG); * 23-Jan-2002 : Changed saveChartAsXXX() methods to pass IOExceptions back to *               caller (DG); * 26-Jun-2002 : Added image map methods (DG); * 05-Aug-2002 : Added writeBufferedImage methods *               Modified writeImageMap method to support flexible image *               maps (RA); * 26-Aug-2002 : Added saveChartAsJPEG and writeChartAsJPEG methods with info *               objects (RA); * 05-Sep-2002 : Added writeImageMap() method to support OverLIB *               - http://www.bosrup.com/web/overlib (RA); * 26-Sep-2002 : Fixed errors reported by Checkstyle (DG); * 17-Oct-2002 : Exposed JPEG quality setting and PNG compression level as *               parameters (DG); * 25-Oct-2002 : Fixed writeChartAsJPEG() empty method bug (DG); * 13-Mar-2003 : Updated writeImageMap method as suggested by Xavier Poinsard *               (see Feature Request 688079) (DG); * 12-Aug-2003 : Added support for custom image maps using *               ToolTipTagFragmentGenerator and URLTagFragmentGenerator (RA); * 02-Sep-2003 : Separated PNG encoding from writing chart to an *               OutputStream (RA); * 04-Dec-2003 : Chart draw() method modified to include anchor point (DG); * 20-Feb-2004 : Edited Javadocs and added argument checking (DG); * 05-Apr-2004 : Fixed problem with buffered image type (DG); * 01-Aug-2004 : Modified to use EncoderUtil for all image encoding (RA); * 02-Aug-2004 : Delegated image map related functionality to ImageMapUtil (RA); * 13-Jan-2005 : Renamed ImageMapUtil --> ImageMapUtilities, removed method *               writeImageMap(PrintWriter, String, ChartRenderingInfo) which *               exists in ImageMapUtilities (DG); * ------------- JFREECHART 1.0.x --------------------------------------------- * 06-Feb-2006 : API doc update (DG); * 19-Mar-2007 : Use try-finally to close output stream in saveChartAsXXX() *               methods (DG); * 10-Jan-2008 : Fix bug 1868251 - don't create image with transparency when *               saving to JPEG format (DG); * 02-Jul-2013 : Use ParamChecks class (DG); * */	WITHOUT_CLASSIFICATION	0.9999617957292397	WITHOUT_CLASSIFICATION	3.8204270760313464E-5	DEFECT
/* shape filled = */	WITHOUT_CLASSIFICATION	0.9999914682130749	WITHOUT_CLASSIFICATION	8.531786925091579E-6	DEFECT
/* shape visible = */	WITHOUT_CLASSIFICATION	0.9999710893712042	WITHOUT_CLASSIFICATION	2.8910628795934997E-5	DEFECT
/* shape visible = */	WITHOUT_CLASSIFICATION	0.9999710893712042	WITHOUT_CLASSIFICATION	2.8910628795934997E-5	DEFECT
/* shape visible = */	WITHOUT_CLASSIFICATION	0.9999710893712042	WITHOUT_CLASSIFICATION	2.8910628795934997E-5	DEFECT
/* shape filled = */	WITHOUT_CLASSIFICATION	0.9999914682130749	WITHOUT_CLASSIFICATION	8.531786925091579E-6	DEFECT
/* shape filled = */	WITHOUT_CLASSIFICATION	0.9999914682130749	WITHOUT_CLASSIFICATION	8.531786925091579E-6	DEFECT
/* shape filled = */	WITHOUT_CLASSIFICATION	0.9999914682130749	WITHOUT_CLASSIFICATION	8.531786925091579E-6	DEFECT
/* shape filled = */	WITHOUT_CLASSIFICATION	0.9999914682130749	WITHOUT_CLASSIFICATION	8.531786925091579E-6	DEFECT
/* shape filled = */	WITHOUT_CLASSIFICATION	0.9999914682130749	WITHOUT_CLASSIFICATION	8.531786925091579E-6	DEFECT
/* shape outlined */	WITHOUT_CLASSIFICATION	0.9999973084720948	WITHOUT_CLASSIFICATION	2.691527905260898E-6	DEFECT
/* shape outlined = */	WITHOUT_CLASSIFICATION	0.999993926428169	WITHOUT_CLASSIFICATION	6.073571830973915E-6	DEFECT
/* line visible */	WITHOUT_CLASSIFICATION	0.9999703020826831	WITHOUT_CLASSIFICATION	2.9697917316928194E-5	DEFECT
/* line visible */	WITHOUT_CLASSIFICATION	0.9999703020826831	WITHOUT_CLASSIFICATION	2.9697917316928194E-5	DEFECT
/* shape outlined = */	WITHOUT_CLASSIFICATION	0.999993926428169	WITHOUT_CLASSIFICATION	6.073571830973915E-6	DEFECT
/* shape outlined = */	WITHOUT_CLASSIFICATION	0.999993926428169	WITHOUT_CLASSIFICATION	6.073571830973915E-6	DEFECT
/* shape outlined = */	WITHOUT_CLASSIFICATION	0.999993926428169	WITHOUT_CLASSIFICATION	6.073571830973915E-6	DEFECT
/* line visible = */	WITHOUT_CLASSIFICATION	0.9999661896279964	WITHOUT_CLASSIFICATION	3.3810372003465944E-5	DEFECT
/* line visible = */	WITHOUT_CLASSIFICATION	0.9999661896279964	WITHOUT_CLASSIFICATION	3.3810372003465944E-5	DEFECT
/* line visible = */	WITHOUT_CLASSIFICATION	0.9999661896279964	WITHOUT_CLASSIFICATION	3.3810372003465944E-5	DEFECT
// positiveItemLabelPosition;	WITHOUT_CLASSIFICATION	0.9999914799503811	WITHOUT_CLASSIFICATION	8.520049618942887E-6	DEFECT
// work out if scaling is required...	WITHOUT_CLASSIFICATION	0.9999984875969764	WITHOUT_CLASSIFICATION	1.5124030236044177E-6	DEFECT
/* shape outlined = */	WITHOUT_CLASSIFICATION	0.999993926428169	WITHOUT_CLASSIFICATION	6.073571830973915E-6	DEFECT
/* line visible = */	WITHOUT_CLASSIFICATION	0.9999661896279964	WITHOUT_CLASSIFICATION	3.3810372003465944E-5	DEFECT
// negativeItemLabelPositionList;	WITHOUT_CLASSIFICATION	0.9999952505983413	WITHOUT_CLASSIFICATION	4.7494016588234775E-6	DEFECT
// ----------------- // --- Constants --- // -----------------	WITHOUT_CLASSIFICATION	0.9999891402068064	WITHOUT_CLASSIFICATION	1.0859793193580335E-5	DEFECT
// ------------------------ // --- Member Variables --- // ------------------------	WITHOUT_CLASSIFICATION	0.999987435111967	WITHOUT_CLASSIFICATION	1.2564888032994255E-5	DEFECT
// -------------------- // --- Constructors --- // --------------------	WITHOUT_CLASSIFICATION	0.9999919281183693	WITHOUT_CLASSIFICATION	8.071881630706256E-6	DEFECT
// -------------------------- // --- ChartPanel Methods --- // --------------------------	WITHOUT_CLASSIFICATION	0.9999969715071801	WITHOUT_CLASSIFICATION	3.0284928198315723E-6	DEFECT
// ---------------------- // --- Public Methods --- // ----------------------	WITHOUT_CLASSIFICATION	0.9999952934956255	WITHOUT_CLASSIFICATION	4.706504374505639E-6	DEFECT
// ----------------------- // --- Private Methods --- // -----------------------	WITHOUT_CLASSIFICATION	0.9999933036224493	WITHOUT_CLASSIFICATION	6.696377550692903E-6	DEFECT
// do nothing at all	WITHOUT_CLASSIFICATION	0.999984033479854	WITHOUT_CLASSIFICATION	1.5966520146032053E-5	DEFECT
// now process the plot if there is one	WITHOUT_CLASSIFICATION	0.9999910408372908	WITHOUT_CLASSIFICATION	8.959162709104076E-6	DEFECT
// process all domain axes	WITHOUT_CLASSIFICATION	0.9999948024135341	WITHOUT_CLASSIFICATION	5.197586465940793E-6	DEFECT
// process all domain axes	WITHOUT_CLASSIFICATION	0.9999948024135341	WITHOUT_CLASSIFICATION	5.197586465940793E-6	DEFECT
// process all range axes	WITHOUT_CLASSIFICATION	0.9999862777048452	WITHOUT_CLASSIFICATION	1.372229515489563E-5	DEFECT
// process all range axes	WITHOUT_CLASSIFICATION	0.9999862777048452	WITHOUT_CLASSIFICATION	1.372229515489563E-5	DEFECT
// process all renderers	WITHOUT_CLASSIFICATION	0.9999901560080552	WITHOUT_CLASSIFICATION	9.843991944820136E-6	DEFECT
// process all renderers	WITHOUT_CLASSIFICATION	0.9999901560080552	WITHOUT_CLASSIFICATION	9.843991944820136E-6	DEFECT
// process all annotations	WITHOUT_CLASSIFICATION	0.99998441738845	WITHOUT_CLASSIFICATION	1.558261154998215E-5	DEFECT
// BarRenderer	WITHOUT_CLASSIFICATION	0.9999784092665697	WITHOUT_CLASSIFICATION	2.1590733430387988E-5	DEFECT
// BarRenderer3D	WITHOUT_CLASSIFICATION	0.9999781214086993	WITHOUT_CLASSIFICATION	2.187859130062948E-5	DEFECT
// LineRenderer3D	WITHOUT_CLASSIFICATION	0.9999872788818049	WITHOUT_CLASSIFICATION	1.272111819505252E-5	DEFECT
//  StatisticalBarRenderer	WITHOUT_CLASSIFICATION	0.9999914314048898	WITHOUT_CLASSIFICATION	8.568595110316803E-6	DEFECT
// MinMaxCategoryRenderer	WITHOUT_CLASSIFICATION	0.9999909408274736	WITHOUT_CLASSIFICATION	9.059172526296605E-6	DEFECT
// handle GradientPaint as a special case	WITHOUT_CLASSIFICATION	0.9999993232055296	WITHOUT_CLASSIFICATION	6.767944702099026E-7	DEFECT
// create storage for listeners...	WITHOUT_CLASSIFICATION	0.999995495797957	WITHOUT_CLASSIFICATION	4.504202043034468E-6	DEFECT
// add the chart title, if one has been specified...	WITHOUT_CLASSIFICATION	0.9999994177743755	WITHOUT_CLASSIFICATION	5.82225624351879E-7	DEFECT
// this fires a ChartChangeEvent	WITHOUT_CLASSIFICATION	0.9999473886239829	WITHOUT_CLASSIFICATION	5.2611376017143496E-5	DEFECT
// if the flag is being set to true, there may be queued up changes...	WITHOUT_CLASSIFICATION	0.9999989249246247	WITHOUT_CLASSIFICATION	1.0750753752778414E-6	DEFECT
// register as a listener with sub-components...	WITHOUT_CLASSIFICATION	0.9999945613003652	WITHOUT_CLASSIFICATION	5.438699634759743E-6	DEFECT
// seem to be the same...	WITHOUT_CLASSIFICATION	0.9999771084246774	WITHOUT_CLASSIFICATION	2.2891575322560397E-5	DEFECT
// draw the label	WITHOUT_CLASSIFICATION	0.9999949171446241	WITHOUT_CLASSIFICATION	5.0828553758598685E-6	DEFECT
// clear the section attributes so that the theme's DrawingSupplier // will be used	WITHOUT_CLASSIFICATION	0.9999979899647322	WITHOUT_CLASSIFICATION	2.0100352678051234E-6	DEFECT
// for efficiency, we just use the first, last and middle items to // compute a hashCode...	WITHOUT_CLASSIFICATION	0.9999994181236809	WITHOUT_CLASSIFICATION	5.818763191605975E-7	DEFECT
// for efficiency, we just use the first, last and middle items to // compute a hashCode...	WITHOUT_CLASSIFICATION	0.9999994181236809	WITHOUT_CLASSIFICATION	5.818763191605975E-7	DEFECT
// default is to notify listeners when the // chart changes	WITHOUT_CLASSIFICATION	0.9999799430319728	WITHOUT_CLASSIFICATION	2.0056968027208488E-5	DEFECT
// added the following hint because of  // http://stackoverflow.com/questions/7785082/	WITHOUT_CLASSIFICATION	0.9999996340189834	WITHOUT_CLASSIFICATION	3.6598101662976257E-7	DEFECT
// record the chart area, if info is requested...	WITHOUT_CLASSIFICATION	0.999997971961761	WITHOUT_CLASSIFICATION	2.028038239031842E-6	DEFECT
// ensure no drawing occurs outside chart area...	WITHOUT_CLASSIFICATION	0.9999906755667779	WITHOUT_CLASSIFICATION	9.324433222084531E-6	DEFECT
// draw the chart background...	WITHOUT_CLASSIFICATION	0.9999967104853559	WITHOUT_CLASSIFICATION	3.2895146440987045E-6	DEFECT
// draw the title and subtitles...	WITHOUT_CLASSIFICATION	0.9999979251106921	WITHOUT_CLASSIFICATION	2.074889307995567E-6	DEFECT
// draw the plot (axes and data visualisation)	WITHOUT_CLASSIFICATION	0.9999981832907772	WITHOUT_CLASSIFICATION	1.816709222815058E-6	DEFECT
// private boolean borderVisible; // private transient Stroke borderStroke; // private transient Paint borderPaint;	WITHOUT_CLASSIFICATION	0.9999930369729364	WITHOUT_CLASSIFICATION	6.963027063610337E-6	DEFECT
// get a locale-specific resource bundle...	WITHOUT_CLASSIFICATION	0.9999994739252943	WITHOUT_CLASSIFICATION	5.260747056858421E-7	DEFECT
// load only when required	WITHOUT_CLASSIFICATION	0.9999922996814633	WITHOUT_CLASSIFICATION	7.70031853668919E-6	DEFECT
// use ImageIcon because it waits for the image to load...	WITHOUT_CLASSIFICATION	0.9999978300466683	WITHOUT_CLASSIFICATION	2.1699533316976453E-6	DEFECT
// don't zoom unless the mouse pointer is in the plot's data area	WITHOUT_CLASSIFICATION	0.9999814037540692	WITHOUT_CLASSIFICATION	1.8596245930815497E-5	DEFECT
// do not notify while zooming each axis	WITHOUT_CLASSIFICATION	0.9999781588147564	WITHOUT_CLASSIFICATION	2.1841185243734502E-5	DEFECT
// this generates the change event too	WITHOUT_CLASSIFICATION	0.9999656238159385	WITHOUT_CLASSIFICATION	3.437618406163437E-5	DEFECT
// if we don't have at least 2 (x, y) coordinates, just return	WITHOUT_CLASSIFICATION	0.9999974092660592	WITHOUT_CLASSIFICATION	2.5907339407888607E-6	DEFECT
// now try to reject equality	WITHOUT_CLASSIFICATION	0.9999909588264966	WITHOUT_CLASSIFICATION	9.04117350339241E-6	DEFECT
// now try to reject equality	WITHOUT_CLASSIFICATION	0.9999909588264966	WITHOUT_CLASSIFICATION	9.04117350339241E-6	DEFECT
// seem to be the same	WITHOUT_CLASSIFICATION	0.9999797558459588	WITHOUT_CLASSIFICATION	2.0244154041270162E-5	DEFECT
// seem to be the same	WITHOUT_CLASSIFICATION	0.9999797558459588	WITHOUT_CLASSIFICATION	2.0244154041270162E-5	DEFECT
// now try to reject equality...	WITHOUT_CLASSIFICATION	0.9999923027760798	WITHOUT_CLASSIFICATION	7.69722392024474E-6	DEFECT
// now try to reject equality...	WITHOUT_CLASSIFICATION	0.9999923027760798	WITHOUT_CLASSIFICATION	7.69722392024474E-6	DEFECT
/* Rectangle2D hotspot = */	WITHOUT_CLASSIFICATION	0.9999895489066345	WITHOUT_CLASSIFICATION	1.0451093365478103E-5	DEFECT
// seems to be the same...	WITHOUT_CLASSIFICATION	0.9999570472023238	WITHOUT_CLASSIFICATION	4.2952797676187355E-5	DEFECT
// FIXME //SerialUtilities.writeImage(this.image, stream);	WITHOUT_CLASSIFICATION	0.9921676799720095	WITHOUT_CLASSIFICATION	0.007832320027990444	DEFECT
// FIXME //this.image = SerialUtilities.readImage(stream);	WITHOUT_CLASSIFICATION	0.9836048123414232	WITHOUT_CLASSIFICATION	0.016395187658576844	DEFECT
// simple case	WITHOUT_CLASSIFICATION	0.9999958800164398	WITHOUT_CLASSIFICATION	4.119983560186938E-6	DEFECT
// by default the outline and background won't be visible	WITHOUT_CLASSIFICATION	0.9999991465603583	WITHOUT_CLASSIFICATION	8.53439641613616E-7	DEFECT
// now try to reject equality	WITHOUT_CLASSIFICATION	0.9999909588264966	WITHOUT_CLASSIFICATION	9.04117350339241E-6	DEFECT
// create plot ...	WITHOUT_CLASSIFICATION	0.99999627578922	WITHOUT_CLASSIFICATION	3.7242107800246753E-6	DEFECT
// add a second dataset and renderer...	WITHOUT_CLASSIFICATION	0.9999976358712761	WITHOUT_CLASSIFICATION	2.3641287240293975E-6	DEFECT
// return a new chart containing the overlaid plot...	WITHOUT_CLASSIFICATION	0.9999995627164671	WITHOUT_CLASSIFICATION	4.372835330180802E-7	DEFECT
// create dataset 1...	WITHOUT_CLASSIFICATION	0.9999923379049757	WITHOUT_CLASSIFICATION	7.662095024383597E-6	DEFECT
// seem to be the same	WITHOUT_CLASSIFICATION	0.9999797558459588	WITHOUT_CLASSIFICATION	2.0244154041270162E-5	DEFECT
// now try to reject equality...	WITHOUT_CLASSIFICATION	0.9999923027760798	WITHOUT_CLASSIFICATION	7.69722392024474E-6	DEFECT
// seems to be the same...	WITHOUT_CLASSIFICATION	0.9999570472023238	WITHOUT_CLASSIFICATION	4.2952797676187355E-5	DEFECT
// baseNegativeItemLabelPosition;	WITHOUT_CLASSIFICATION	0.9999967047580448	WITHOUT_CLASSIFICATION	3.2952419551842585E-6	DEFECT
// here we change the AffineTransform so we can draw the annotation // to a larger area and scale it down into the display area // afterwards, the original transform is restored	WITHOUT_CLASSIFICATION	0.9999451390828863	WITHOUT_CLASSIFICATION	5.486091711373346E-5	DEFECT
// compute transform matrix elements via sample points. Assume no // rotation or shear.	WITHOUT_CLASSIFICATION	0.9999670623644302	WITHOUT_CLASSIFICATION	3.293763556975442E-5	DEFECT
//  create transform & transform shape	WITHOUT_CLASSIFICATION	0.9999851059243061	WITHOUT_CLASSIFICATION	1.489407569388739E-5	DEFECT
//SerialUtilities.writeImage(this.image, stream);	WITHOUT_CLASSIFICATION	0.9999583993984812	WITHOUT_CLASSIFICATION	4.160060151884557E-5	DEFECT
//this.image = SerialUtilities.readImage(stream);	WITHOUT_CLASSIFICATION	0.9999153360680563	WITHOUT_CLASSIFICATION	8.466393194379672E-5	DEFECT
// if the axis is not visible, don't draw it...	WITHOUT_CLASSIFICATION	0.9999172540397172	WITHOUT_CLASSIFICATION	8.274596028281546E-5	DEFECT
// ensure the autorange is at least <minRange> in size...	WITHOUT_CLASSIFICATION	0.9999645163995305	WITHOUT_CLASSIFICATION	3.548360046953234E-5	DEFECT
// apply the margins - these should apply to the exponent range	WITHOUT_CLASSIFICATION	0.9999978075192136	WITHOUT_CLASSIFICATION	2.192480786464371E-6	DEFECT
// even though the axis is not visible, we need ticks for the // gridlines...	WITHOUT_CLASSIFICATION	0.9999921357414632	WITHOUT_CLASSIFICATION	7.864258536895674E-6	DEFECT
// add minor ticks (for gridlines)	WITHOUT_CLASSIFICATION	0.9999971240026376	WITHOUT_CLASSIFICATION	2.8759973623293963E-6	DEFECT
// select a tick unit that is the next one bigger than the current // (log) range divided by 50	WITHOUT_CLASSIFICATION	0.9999942830454666	WITHOUT_CLASSIFICATION	5.716954533381473E-6	DEFECT
// while the tick labels overlap and there are more tick sizes available, // choose the next bigger label	WITHOUT_CLASSIFICATION	0.999998798830278	WITHOUT_CLASSIFICATION	1.2011697220009695E-6	DEFECT
// while the tick labels overlap and there are more tick sizes available, // choose the next bigger label	WITHOUT_CLASSIFICATION	0.999998798830278	WITHOUT_CLASSIFICATION	1.2011697220009695E-6	DEFECT
// what is the available space for one unit?	WITHOUT_CLASSIFICATION	0.9998797094006322	WITHOUT_CLASSIFICATION	1.2029059936786323E-4	DEFECT
// what is the available space for one unit?	WITHOUT_CLASSIFICATION	0.9998797094006322	WITHOUT_CLASSIFICATION	1.2029059936786323E-4	DEFECT
// there are no more candidates	WITHOUT_CLASSIFICATION	0.9999837289683865	WITHOUT_CLASSIFICATION	1.6271031613569768E-5	DEFECT
// there are no more candidates	WITHOUT_CLASSIFICATION	0.9999837289683865	WITHOUT_CLASSIFICATION	1.6271031613569768E-5	DEFECT
// all tick labels have the same width (equal to the height of the // font)...	WITHOUT_CLASSIFICATION	0.9999993460619094	WITHOUT_CLASSIFICATION	6.539380905993265E-7	DEFECT
// look at lower and upper bounds...	WITHOUT_CLASSIFICATION	0.9999980997731337	WITHOUT_CLASSIFICATION	1.900226866344139E-6	DEFECT
// no need to create entity if we can't save it anyways...	WITHOUT_CLASSIFICATION	0.9999941876450626	WITHOUT_CLASSIFICATION	5.812354937369206E-6	DEFECT
// it is unlikely that 'state' will be null, but check anyway...	WITHOUT_CLASSIFICATION	0.999403068550255	WITHOUT_CLASSIFICATION	5.969314497450138E-4	DEFECT
// It's up to the plot which clones up to restore the correct references	WITHOUT_CLASSIFICATION	0.9999989993656501	WITHOUT_CLASSIFICATION	1.0006343498495005E-6	DEFECT
// draw the category labels and axis label	WITHOUT_CLASSIFICATION	0.9999980460464992	WITHOUT_CLASSIFICATION	1.953953500745057E-6	DEFECT
// regular number axis	WITHOUT_CLASSIFICATION	0.9999916993303624	WITHOUT_CLASSIFICATION	8.30066963764289E-6	DEFECT
// regular number axis	WITHOUT_CLASSIFICATION	0.9999916993303624	WITHOUT_CLASSIFICATION	8.30066963764289E-6	DEFECT
// displayStart > displayEnd, need to handle split	WITHOUT_CLASSIFICATION	0.9999993292683403	WITHOUT_CLASSIFICATION	6.707316596143729E-7	DEFECT
// displayStart > displayEnd, need to handle split	WITHOUT_CLASSIFICATION	0.9999993292683403	WITHOUT_CLASSIFICATION	6.707316596143729E-7	DEFECT
// create a new space object if one wasn't supplied...	WITHOUT_CLASSIFICATION	0.9999979905437885	WITHOUT_CLASSIFICATION	2.009456211515456E-6	DEFECT
// if the axis is not visible, no additional space is required...	WITHOUT_CLASSIFICATION	0.9999951590501157	WITHOUT_CLASSIFICATION	4.8409498843595915E-6	DEFECT
// if the axis has a fixed dimension, return it...	WITHOUT_CLASSIFICATION	0.9999957138692456	WITHOUT_CLASSIFICATION	4.286130754472455E-6	DEFECT
// get the axis label size and update the space object...	WITHOUT_CLASSIFICATION	0.9999991278015526	WITHOUT_CLASSIFICATION	8.721984472345025E-7	DEFECT
//negative values not allowed	WITHOUT_CLASSIFICATION	0.9999199305638622	WITHOUT_CLASSIFICATION	8.006943613788654E-5	DEFECT
// no plot, no data.	WITHOUT_CLASSIFICATION	0.9999961474911522	WITHOUT_CLASSIFICATION	3.852508847812795E-6	DEFECT
// no plot, no data	WITHOUT_CLASSIFICATION	0.9999962740829508	WITHOUT_CLASSIFICATION	3.7259170491960006E-6	DEFECT
// if the axis is not visible, no additional space is required...	WITHOUT_CLASSIFICATION	0.9999951590501157	WITHOUT_CLASSIFICATION	4.8409498843595915E-6	DEFECT
// if the axis has a fixed dimension, return it...	WITHOUT_CLASSIFICATION	0.9999957138692456	WITHOUT_CLASSIFICATION	4.286130754472455E-6	DEFECT
// get the axis label size and update the space object...	WITHOUT_CLASSIFICATION	0.9999991278015526	WITHOUT_CLASSIFICATION	8.721984472345025E-7	DEFECT
// baseCreateEntities;	WITHOUT_CLASSIFICATION	0.9999868160227571	WITHOUT_CLASSIFICATION	1.3183977242981687E-5	DEFECT
// add space for the outer tick labels, if any...	WITHOUT_CLASSIFICATION	0.9999996918828544	WITHOUT_CLASSIFICATION	3.0811714547683355E-7	DEFECT
// draw minor tick marks	WITHOUT_CLASSIFICATION	0.9999942295947699	WITHOUT_CLASSIFICATION	5.770405230061616E-6	DEFECT
// work out the initial gap	WITHOUT_CLASSIFICATION	0.9999965391059837	WITHOUT_CLASSIFICATION	3.4608940163407237E-6	DEFECT
// this is the last period, but it is only partially visible // so check that the label will fit before displaying it...	WITHOUT_CLASSIFICATION	0.9999443711283101	WITHOUT_CLASSIFICATION	5.5628871689737024E-5	DEFECT
// this is the first period, but it is only partially visible // so check that the label will fit before displaying it...	WITHOUT_CLASSIFICATION	0.9999407521604348	WITHOUT_CLASSIFICATION	5.924783956524431E-5	DEFECT
// work out the trailing gap	WITHOUT_CLASSIFICATION	0.9999953780774508	WITHOUT_CLASSIFICATION	4.621922549316682E-6	DEFECT
// draw the arrow...	WITHOUT_CLASSIFICATION	0.9999760384513531	WITHOUT_CLASSIFICATION	2.3961548646971062E-5	DEFECT
// need to work out the space used by the tick labels... // so we can update the cursor...	WITHOUT_CLASSIFICATION	0.9999986009632209	WITHOUT_CLASSIFICATION	1.3990367790826814E-6	DEFECT
// calculate the max size of the tick labels (if visible)...	WITHOUT_CLASSIFICATION	0.9999992799896746	WITHOUT_CLASSIFICATION	7.200103252578683E-7	DEFECT
// if autoRange is true, then the current range is irrelevant	WITHOUT_CLASSIFICATION	0.9999753460283852	WITHOUT_CLASSIFICATION	2.4653971614780988E-5	DEFECT
//setup number formatter obj	WITHOUT_CLASSIFICATION	0.9999086818442077	WITHOUT_CLASSIFICATION	9.131815579230678E-5	DEFECT
//setup number formatter obj	WITHOUT_CLASSIFICATION	0.9999086818442077	WITHOUT_CLASSIFICATION	9.131815579230678E-5	DEFECT
// if negative then set flag and make positive	WITHOUT_CLASSIFICATION	0.9999959476435416	WITHOUT_CLASSIFICATION	4.052356458435193E-6	DEFECT
// if negative then set flag and make positive	WITHOUT_CLASSIFICATION	0.9999959476435416	WITHOUT_CLASSIFICATION	4.052356458435193E-6	DEFECT
//return value; negate if original value was negative:	WITHOUT_CLASSIFICATION	0.9999956934423228	WITHOUT_CLASSIFICATION	4.306557677243569E-6	DEFECT
//invert adjustLog10	WITHOUT_CLASSIFICATION	0.9999827623897201	WITHOUT_CLASSIFICATION	1.723761027985419E-5	DEFECT
//calculate floor using negative value:	WITHOUT_CLASSIFICATION	0.9999927896341387	WITHOUT_CLASSIFICATION	7.210365861318507E-6	DEFECT
//calculate power using positive value; then negate	WITHOUT_CLASSIFICATION	0.9999878808167202	WITHOUT_CLASSIFICATION	1.2119183279764287E-5	DEFECT
//negative values are allowed	WITHOUT_CLASSIFICATION	0.9999439953393191	WITHOUT_CLASSIFICATION	5.6004660680904396E-5	DEFECT
//calculate ceil using negative value:	WITHOUT_CLASSIFICATION	0.9999793415886086	WITHOUT_CLASSIFICATION	2.0658411391502455E-5	DEFECT
// ensure the autorange is at least <minRange> in size...	WITHOUT_CLASSIFICATION	0.9999645163995305	WITHOUT_CLASSIFICATION	3.548360046953234E-5	DEFECT
// legendTextPaint	WITHOUT_CLASSIFICATION	0.9999946663000104	WITHOUT_CLASSIFICATION	5.333699989525955E-6	DEFECT
//setup for "1e#"-style tick labels or regular // numeric tick labels, depending on flag:	WITHOUT_CLASSIFICATION	0.9999995599166719	WITHOUT_CLASSIFICATION	4.4008332814350036E-7	DEFECT
// if < 10 then //increase so 0 translates to 0	WITHOUT_CLASSIFICATION	0.9999971653552184	WITHOUT_CLASSIFICATION	2.8346447814902547E-6	DEFECT
//negative values are allowed //parameter value is > 10 // The Math.log() function is based on e not 10.	WITHOUT_CLASSIFICATION	0.9996705449447453	WITHOUT_CLASSIFICATION	3.2945505525477177E-4	DEFECT
//parameter value is < -10 //calculate log using positive value:	WITHOUT_CLASSIFICATION	0.9999869782601457	WITHOUT_CLASSIFICATION	1.3021739854349839E-5	DEFECT
//parameter value is -10 > val < 10 //use as-is	WITHOUT_CLASSIFICATION	0.9999737208068571	WITHOUT_CLASSIFICATION	2.6279193142899972E-5	DEFECT
//parameter value is -10 > val < 10 //use as-is	WITHOUT_CLASSIFICATION	0.9999737208068571	WITHOUT_CLASSIFICATION	2.6279193142899972E-5	DEFECT
//negative values not allowed //parameter value is > 0 // The Math.log() function is based on e not 10.	WITHOUT_CLASSIFICATION	0.9998713154653245	WITHOUT_CLASSIFICATION	1.2868453467555297E-4	DEFECT
//parameter value is <= 0 //use as-is	WITHOUT_CLASSIFICATION	0.9999603992108715	WITHOUT_CLASSIFICATION	3.960078912840764E-5	DEFECT
//parameter value is > 10 // The Math.log() function is based on e not 10.	WITHOUT_CLASSIFICATION	0.9999677403485467	WITHOUT_CLASSIFICATION	3.225965145326578E-5	DEFECT
//parameter value is > 0 // The Math.log() function is based on e not 10.	WITHOUT_CLASSIFICATION	0.9999684427373052	WITHOUT_CLASSIFICATION	3.155726269476583E-5	DEFECT
//no real data present	WITHOUT_CLASSIFICATION	0.9999952751201603	WITHOUT_CLASSIFICATION	4.72487983965204E-6	DEFECT
//get lower bound value	WITHOUT_CLASSIFICATION	0.9999889791832864	WITHOUT_CLASSIFICATION	1.1020816713614653E-5	DEFECT
//actual data is present //get lower bound value	WITHOUT_CLASSIFICATION	0.9999976174648044	WITHOUT_CLASSIFICATION	2.3825351956374126E-6	DEFECT
//strict flag set, allow-negatives not set and values <= 0	WITHOUT_CLASSIFICATION	0.9999944134078745	WITHOUT_CLASSIFICATION	5.5865921254616034E-6	DEFECT
//apply lower margin by decreasing lower bound:	WITHOUT_CLASSIFICATION	0.9999973929306767	WITHOUT_CLASSIFICATION	2.607069323314881E-6	DEFECT
//lower bound and margin OK; get log10 of lower bound	WITHOUT_CLASSIFICATION	0.9999967537709161	WITHOUT_CLASSIFICATION	3.2462290838941234E-6	DEFECT
//get absolute value of log10 value	WITHOUT_CLASSIFICATION	0.9999872017775037	WITHOUT_CLASSIFICATION	1.2798222496328977E-5	DEFECT
//need to account for case where upper==0.0	WITHOUT_CLASSIFICATION	0.9999813263097277	WITHOUT_CLASSIFICATION	1.86736902722724E-5	DEFECT
//setup flag based on bounds values	WITHOUT_CLASSIFICATION	0.9999931457766351	WITHOUT_CLASSIFICATION	6.854223364821505E-6	DEFECT
//get lower bound value:	WITHOUT_CLASSIFICATION	0.999987795698198	WITHOUT_CLASSIFICATION	1.2204301802047182E-5	DEFECT
//get upper bound value	WITHOUT_CLASSIFICATION	0.9999892540074287	WITHOUT_CLASSIFICATION	1.0745992571373469E-5	DEFECT
//get log10 version of upper bound and round to integer:	WITHOUT_CLASSIFICATION	0.9999982328559733	WITHOUT_CLASSIFICATION	1.7671440265874856E-6	DEFECT
//for each power of 10 value; create ten ticks	WITHOUT_CLASSIFICATION	0.9999985069528325	WITHOUT_CLASSIFICATION	1.4930471674830996E-6	DEFECT
//for each tick to be displayed	WITHOUT_CLASSIFICATION	0.999998300549545	WITHOUT_CLASSIFICATION	1.6994504550270512E-6	DEFECT
//small log values in use; create numeric value for tick	WITHOUT_CLASSIFICATION	0.999993206648839	WITHOUT_CLASSIFICATION	6.7933511610419605E-6	DEFECT
//create tick label (force use of fmt obj):	WITHOUT_CLASSIFICATION	0.999995566007219	WITHOUT_CLASSIFICATION	4.433992780988562E-6	DEFECT
//no tick label to be shown	WITHOUT_CLASSIFICATION	0.9999822429232695	WITHOUT_CLASSIFICATION	1.77570767303869E-5	DEFECT
//create tick label:	WITHOUT_CLASSIFICATION	0.9999880928487013	WITHOUT_CLASSIFICATION	1.1907151298773446E-5	DEFECT
//get lower bound value:	WITHOUT_CLASSIFICATION	0.999987795698198	WITHOUT_CLASSIFICATION	1.2204301802047182E-5	DEFECT
//if autorange still below minimum then adjust by 1% // (can be needed when minRange is very small):	WITHOUT_CLASSIFICATION	0.9998787426177115	WITHOUT_CLASSIFICATION	1.2125738228846203E-4	DEFECT
//get upper bound value	WITHOUT_CLASSIFICATION	0.9999892540074287	WITHOUT_CLASSIFICATION	1.0745992571373469E-5	DEFECT
//if small log values and lower bound value too small // then set to a small value (don't allow <= 0):	WITHOUT_CLASSIFICATION	0.9999957491456057	WITHOUT_CLASSIFICATION	4.250854394197576E-6	DEFECT
//get log10 version of lower bound and round to integer:	WITHOUT_CLASSIFICATION	0.9999979701881008	WITHOUT_CLASSIFICATION	2.029811899200606E-6	DEFECT
//get log10 version of upper bound and round to integer:	WITHOUT_CLASSIFICATION	0.9999982328559733	WITHOUT_CLASSIFICATION	1.7671440265874856E-6	DEFECT
//for each tick to be displayed	WITHOUT_CLASSIFICATION	0.999998300549545	WITHOUT_CLASSIFICATION	1.6994504550270512E-6	DEFECT
//only 1 power of 10 value, it's > 0 and its resulting // tick value will be larger than lower bound of data //decrement to generate more ticks	WITHOUT_CLASSIFICATION	0.9999957556476416	WITHOUT_CLASSIFICATION	4.244352358276733E-6	DEFECT
//showing "1e#"-style ticks or negative exponent // generating tick value between 0 & 1; show fewer	WITHOUT_CLASSIFICATION	0.9999952517882643	WITHOUT_CLASSIFICATION	4.748211735797908E-6	DEFECT
//tick value not between 0 & 1 //show tick label if it's the first or last in // the set, or if it's 1-5; beyond that show // fewer as the values get larger:	WITHOUT_CLASSIFICATION	0.9999979593488799	WITHOUT_CLASSIFICATION	2.0406511201564257E-6	DEFECT
//not small log values in use; allow for values <= 0 //if did zero tick last iter then //decrement to do 1.0 tick now //calculate power-of-ten value for tick:	WITHOUT_CLASSIFICATION	0.9999996659322423	WITHOUT_CLASSIFICATION	3.3406775772507173E-7	DEFECT
// did not do zero tick last iteration	WITHOUT_CLASSIFICATION	0.999996515904636	WITHOUT_CLASSIFICATION	3.48409536389148E-6	DEFECT
//tick value is 1.0 and 0.0 is within data range //set tick value to zero //indicate zero tick	WITHOUT_CLASSIFICATION	0.9999862789146101	WITHOUT_CLASSIFICATION	1.372108538983831E-5	DEFECT
// if past highest data value then exit // method	WITHOUT_CLASSIFICATION	0.9999980704273991	WITHOUT_CLASSIFICATION	1.929572601001119E-6	DEFECT
//tick value not below lowest data value	WITHOUT_CLASSIFICATION	0.999986136286943	WITHOUT_CLASSIFICATION	1.3863713056870053E-5	DEFECT
//for each tick with a label to be displayed	WITHOUT_CLASSIFICATION	0.9999969411234791	WITHOUT_CLASSIFICATION	3.058876520743445E-6	DEFECT
//small log values in use	WITHOUT_CLASSIFICATION	0.9999623628748303	WITHOUT_CLASSIFICATION	3.7637125169649106E-5	DEFECT
//first tick of group; create label text	WITHOUT_CLASSIFICATION	0.9999985326901547	WITHOUT_CLASSIFICATION	1.467309845189921E-6	DEFECT
//not "log10"-type label	WITHOUT_CLASSIFICATION	0.9999899400431153	WITHOUT_CLASSIFICATION	1.005995688469808E-5	DEFECT
//if small log values and lower bound value too small // then set to a small value (don't allow <= 0):	WITHOUT_CLASSIFICATION	0.9999957491456057	WITHOUT_CLASSIFICATION	4.250854394197576E-6	DEFECT
//only 1 power of 10 value, it's > 0 and its resulting // tick value will be larger than lower bound of data //decrement to generate more ticks	WITHOUT_CLASSIFICATION	0.9999957556476416	WITHOUT_CLASSIFICATION	4.244352358276733E-6	DEFECT
//tick value not below lowest data value	WITHOUT_CLASSIFICATION	0.999986136286943	WITHOUT_CLASSIFICATION	1.3863713056870053E-5	DEFECT
// ITEM_LABEL_PAINT	WITHOUT_CLASSIFICATION	0.9998359576639492	WITHOUT_CLASSIFICATION	1.6404233605083195E-4	DEFECT
//if flag then //create "log10"-type label	WITHOUT_CLASSIFICATION	0.9999990642599216	WITHOUT_CLASSIFICATION	9.357400784595569E-7	DEFECT
//if flag then //create "1e#"-type label	WITHOUT_CLASSIFICATION	0.9999981374340488	WITHOUT_CLASSIFICATION	1.8625659511639902E-6	DEFECT
//not "1e#"-type label // if positive exponent then // make integer	WITHOUT_CLASSIFICATION	0.9999948884275125	WITHOUT_CLASSIFICATION	5.111572487530562E-6	DEFECT
//negative exponent; create fractional value //set exact number of fractional digits to // be shown:	WITHOUT_CLASSIFICATION	0.9999978613109385	WITHOUT_CLASSIFICATION	2.1386890614446343E-6	DEFECT
//not small log values in use; allow for values <= 0 //if did zero tick last iter then	WITHOUT_CLASSIFICATION	0.999998840408565	WITHOUT_CLASSIFICATION	1.1595914349884569E-6	DEFECT
//decrement to do 1.0 tick now	WITHOUT_CLASSIFICATION	0.999987490175382	WITHOUT_CLASSIFICATION	1.2509824617964809E-5	DEFECT
//first tick of group // did not do zero tick last // iteration	WITHOUT_CLASSIFICATION	0.9999983287764764	WITHOUT_CLASSIFICATION	1.6712235236441288E-6	DEFECT
// not first or last tick on graph and value // is 1.0 //change value to 0.0 //indicate zero tick //create label for tick	WITHOUT_CLASSIFICATION	0.9999881346591087	WITHOUT_CLASSIFICATION	1.1865340891251116E-5	DEFECT
//first or last tick on graph or value is 1.0 //create label for tick:	WITHOUT_CLASSIFICATION	0.9999911633221166	WITHOUT_CLASSIFICATION	8.83667788351609E-6	DEFECT
//create "log10"-type label	WITHOUT_CLASSIFICATION	0.9999965511657324	WITHOUT_CLASSIFICATION	3.448834267594141E-6	DEFECT
//create "1e#"-type label	WITHOUT_CLASSIFICATION	0.9999916188692076	WITHOUT_CLASSIFICATION	8.381130792451098E-6	DEFECT
// did zero tick last iteration //no label //clear flag	WITHOUT_CLASSIFICATION	0.9999981043102554	WITHOUT_CLASSIFICATION	1.895689744536713E-6	DEFECT
// not first tick of group //no label //make sure flag cleared	WITHOUT_CLASSIFICATION	0.9999993144127399	WITHOUT_CLASSIFICATION	6.855872600697309E-7	DEFECT
//if past highest data value then exit method	WITHOUT_CLASSIFICATION	0.9999984148158579	WITHOUT_CLASSIFICATION	1.5851841420128075E-6	DEFECT
//create tick object and add to list:	WITHOUT_CLASSIFICATION	0.999992369099766	WITHOUT_CLASSIFICATION	7.630900234024587E-6	DEFECT
//using exponents or force-formatter flag is set // (convert 'E' to lower-case 'e'):	WITHOUT_CLASSIFICATION	0.9999662299081344	WITHOUT_CLASSIFICATION	3.377009186545185E-5	DEFECT
// populate deprecated fields	WITHOUT_CLASSIFICATION	0.9999986152936674	WITHOUT_CLASSIFICATION	1.3847063326458727E-6	DEFECT
// usually the range will be a DateRange, but if it isn't do a // conversion...	WITHOUT_CLASSIFICATION	0.9993506673445012	WITHOUT_CLASSIFICATION	6.49332655498844E-4	DEFECT
// check the new minimum date relative to the current maximum date	WITHOUT_CLASSIFICATION	0.9999993623519805	WITHOUT_CLASSIFICATION	6.376480195283909E-7	DEFECT
// check the new maximum date relative to the current minimum date	WITHOUT_CLASSIFICATION	0.9999993662971309	WITHOUT_CLASSIFICATION	6.337028689720869E-7	DEFECT
// long result = calendar.getTimeInMillis(); // won't work with JDK 1.3	WITHOUT_CLASSIFICATION	0.9996675340155685	WITHOUT_CLASSIFICATION	3.324659844314121E-4	DEFECT
// date formatters	WITHOUT_CLASSIFICATION	0.9998843507807279	WITHOUT_CLASSIFICATION	1.1564921927215115E-4	DEFECT
// milliseconds	WITHOUT_CLASSIFICATION	0.9999915139489955	WITHOUT_CLASSIFICATION	8.486051004362648E-6	DEFECT
// look at lower and upper bounds...	WITHOUT_CLASSIFICATION	0.9999980997731337	WITHOUT_CLASSIFICATION	1.900226866344139E-6	DEFECT
// create a new space object if one wasn't supplied...	WITHOUT_CLASSIFICATION	0.9999979905437885	WITHOUT_CLASSIFICATION	2.009456211515456E-6	DEFECT
// if the axis is not visible, no additional space is required...	WITHOUT_CLASSIFICATION	0.9999951590501157	WITHOUT_CLASSIFICATION	4.8409498843595915E-6	DEFECT
// seconds	WITHOUT_CLASSIFICATION	0.9999922360407344	WITHOUT_CLASSIFICATION	7.763959265647882E-6	DEFECT
// minutes	WITHOUT_CLASSIFICATION	0.9999907205453803	WITHOUT_CLASSIFICATION	9.279454619665996E-6	DEFECT
// hours	WITHOUT_CLASSIFICATION	0.9999636372034432	WITHOUT_CLASSIFICATION	3.6362796556804066E-5	DEFECT
// days	WITHOUT_CLASSIFICATION	0.9999777084506322	WITHOUT_CLASSIFICATION	2.2291549367797886E-5	DEFECT
// months	WITHOUT_CLASSIFICATION	0.9999772233008476	WITHOUT_CLASSIFICATION	2.2776699152504534E-5	DEFECT
// years	WITHOUT_CLASSIFICATION	0.9999751037959522	WITHOUT_CLASSIFICATION	2.489620404769525E-5	DEFECT
//Timeline hasn't method getStartTime()	WITHOUT_CLASSIFICATION	0.9999847713879269	WITHOUT_CLASSIFICATION	1.5228612073196208E-5	DEFECT
// start with the current tick unit...	WITHOUT_CLASSIFICATION	0.9999974545773457	WITHOUT_CLASSIFICATION	2.5454226543052876E-6	DEFECT
// then extrapolate...	WITHOUT_CLASSIFICATION	0.999987397491336	WITHOUT_CLASSIFICATION	1.2602508664029013E-5	DEFECT
// start with a unit that is at least 1/10th of the axis length	WITHOUT_CLASSIFICATION	0.9999877763105993	WITHOUT_CLASSIFICATION	1.222368940065107E-5	DEFECT
// now extrapolate based on label height and unit height...	WITHOUT_CLASSIFICATION	0.9999978139304122	WITHOUT_CLASSIFICATION	2.1860695878182427E-6	DEFECT
// make final selection...	WITHOUT_CLASSIFICATION	0.9999983106979968	WITHOUT_CLASSIFICATION	1.6893020030645795E-6	DEFECT
// all tick labels have the same width (equal to the height of // the font)...	WITHOUT_CLASSIFICATION	0.9999993530826033	WITHOUT_CLASSIFICATION	6.469173966109479E-7	DEFECT
// could add a flag to make the following correction optional...	WITHOUT_CLASSIFICATION	0.9999996912928959	WITHOUT_CLASSIFICATION	3.0870710412304196E-7	DEFECT
// could add a flag to make the following correction optional...	WITHOUT_CLASSIFICATION	0.9999996912928959	WITHOUT_CLASSIFICATION	3.0870710412304196E-7	DEFECT
// work out the value, label and position	WITHOUT_CLASSIFICATION	0.999998861172309	WITHOUT_CLASSIFICATION	1.1388276910424943E-6	DEFECT
// work out the value, label and position	WITHOUT_CLASSIFICATION	0.999998861172309	WITHOUT_CLASSIFICATION	1.1388276910424943E-6	DEFECT
// even though the axis is not visible, we need to refresh ticks in // case the grid is being drawn...	WITHOUT_CLASSIFICATION	0.9999951209932282	WITHOUT_CLASSIFICATION	4.879006771868987E-6	DEFECT
// draw the tick marks and labels...	WITHOUT_CLASSIFICATION	0.9999974396560807	WITHOUT_CLASSIFICATION	2.5603439193367575E-6	DEFECT
// draw the axis label (note that 'state' is passed in *and* // returned)...	WITHOUT_CLASSIFICATION	0.9999957028962336	WITHOUT_CLASSIFICATION	4.297103766447005E-6	DEFECT
// when zooming to sub-millisecond ranges, it can be the case that // adjEnd == adjStart...and we can't have an axis with zero length // so we apply this instead:	WITHOUT_CLASSIFICATION	0.9999309012511653	WITHOUT_CLASSIFICATION	6.909874883464481E-5	DEFECT
// 'dateTickUnit' is immutable : no need to clone	WITHOUT_CLASSIFICATION	0.999993270605828	WITHOUT_CLASSIFICATION	6.729394172078034E-6	DEFECT
// 'tickMarkPosition' is immutable : no need to clone	WITHOUT_CLASSIFICATION	0.99999171011408	WITHOUT_CLASSIFICATION	8.289885920048418E-6	DEFECT
// if there is no specific font, use the general one...	WITHOUT_CLASSIFICATION	0.9999955232228686	WITHOUT_CLASSIFICATION	4.476777131466801E-6	DEFECT
// if there is no specific paint, use the general one...	WITHOUT_CLASSIFICATION	0.9999951677374374	WITHOUT_CLASSIFICATION	4.832262562607544E-6	DEFECT
// find first excluded base segment starting fromDomainValue	WITHOUT_CLASSIFICATION	0.999999252321479	WITHOUT_CLASSIFICATION	7.476785209531827E-7	DEFECT
// draw the category labels and axis label	WITHOUT_CLASSIFICATION	0.9999980460464992	WITHOUT_CLASSIFICATION	1.953953500745057E-6	DEFECT
// get the axis label size and update the space object...	WITHOUT_CLASSIFICATION	0.9999991278015526	WITHOUT_CLASSIFICATION	8.721984472345025E-7	DEFECT
// calculate the max size of the tick labels (if visible)...	WITHOUT_CLASSIFICATION	0.9999992799896746	WITHOUT_CLASSIFICATION	7.200103252578683E-7	DEFECT
// nothing required	WITHOUT_CLASSIFICATION	0.9999953339065996	WITHOUT_CLASSIFICATION	4.666093400511794E-6	DEFECT
// sanity check for data area...	WITHOUT_CLASSIFICATION	0.9999982645675574	WITHOUT_CLASSIFICATION	1.7354324425985083E-6	DEFECT
// step down in size until the current size is too small or there are  // no more units	WITHOUT_CLASSIFICATION	0.9999629011175164	WITHOUT_CLASSIFICATION	3.709888248363243E-5	DEFECT
//////////////////////////////////////////////////////////////////////////// // predetermined segments sizes ////////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999987343835113	WITHOUT_CLASSIFICATION	1.2656164887872016E-6	DEFECT
//////////////////////////////////////////////////////////////////////////// // other constants ////////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999963169744719	WITHOUT_CLASSIFICATION	3.6830255280326777E-6	DEFECT
//////////////////////////////////////////////////////////////////////////// // private attributes ////////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999929891995046	WITHOUT_CLASSIFICATION	7.010800495405675E-6	DEFECT
//////////////////////////////////////////////////////////////////////////// // static block ////////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999961282878892	WITHOUT_CLASSIFICATION	3.871712110807407E-6	DEFECT
// make a time zone with no DST for our Calendar calculations	WITHOUT_CLASSIFICATION	0.9999925996971331	WITHOUT_CLASSIFICATION	7.400302867041081E-6	DEFECT
// calculate midnight of first monday after 1/1/1900 relative to // current locale	WITHOUT_CLASSIFICATION	0.9999993303722765	WITHOUT_CLASSIFICATION	6.696277235711031E-7	DEFECT
//////////////////////////////////////////////////////////////////////////// // constructors and factory methods ////////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999964257818915	WITHOUT_CLASSIFICATION	3.574218108543093E-6	DEFECT
//////////////////////////////////////////////////////////////////////////// // operations ////////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999952464514879	WITHOUT_CLASSIFICATION	4.753548512145924E-6	DEFECT
// verify that baseTimeline is compatible with us	WITHOUT_CLASSIFICATION	0.9998726356858545	WITHOUT_CLASSIFICATION	1.273643141454171E-4	DEFECT
// - partialTimeInException;	WITHOUT_CLASSIFICATION	0.999991641941	WITHOUT_CLASSIFICATION	8.358059000025065E-6	DEFECT
// - partialTimeInException;	WITHOUT_CLASSIFICATION	0.999991641941	WITHOUT_CLASSIFICATION	8.358059000025065E-6	DEFECT
//return toTimelineValue(dateDomainValue.getTime());	WITHOUT_CLASSIFICATION	0.9999925557736123	WITHOUT_CLASSIFICATION	7.44422638755351E-6	DEFECT
// calculate the result as if no exceptions	WITHOUT_CLASSIFICATION	0.9999993170017842	WITHOUT_CLASSIFICATION	6.829982156924257E-7	DEFECT
// adjust result for any exceptions in the result calculated	WITHOUT_CLASSIFICATION	0.9999991596378253	WITHOUT_CLASSIFICATION	8.403621747095756E-7	DEFECT
// skip all whole exception segments in the range	WITHOUT_CLASSIFICATION	0.9999962804764941	WITHOUT_CLASSIFICATION	3.719523505874502E-6	DEFECT
// skip exception or excluded segments we may fall on	WITHOUT_CLASSIFICATION	0.9999991440507043	WITHOUT_CLASSIFICATION	8.559492956524831E-7	DEFECT
//addException(exceptionDate.getTime());	WITHOUT_CLASSIFICATION	0.9999545897059431	WITHOUT_CLASSIFICATION	4.5410294056879047E-5	DEFECT
// find all consecutive included segments	WITHOUT_CLASSIFICATION	0.9999906575423357	WITHOUT_CLASSIFICATION	9.342457664228397E-6	DEFECT
// add the interval as an exception	WITHOUT_CLASSIFICATION	0.9999924965244132	WITHOUT_CLASSIFICATION	7.503475586773969E-6	DEFECT
// find all consecutive included segments	WITHOUT_CLASSIFICATION	0.9999906575423357	WITHOUT_CLASSIFICATION	9.342457664228397E-6	DEFECT
// move forward exceptionSegmentCount segments skipping // excluded segments	WITHOUT_CLASSIFICATION	0.999999323349218	WITHOUT_CLASSIFICATION	6.766507819382808E-7	DEFECT
// empty	WITHOUT_CLASSIFICATION	0.9999772432205553	WITHOUT_CLASSIFICATION	2.2756779444814417E-5	DEFECT
// add the interval as an exception	WITHOUT_CLASSIFICATION	0.9999924965244132	WITHOUT_CLASSIFICATION	7.503475586773969E-6	DEFECT
// this is not one of our included segment, skip it	WITHOUT_CLASSIFICATION	0.999984141705754	WITHOUT_CLASSIFICATION	1.5858294246031376E-5	DEFECT
// first check that autoPopulate==false works as expected	WITHOUT_CLASSIFICATION	0.99999811125054	WITHOUT_CLASSIFICATION	1.8887494599718496E-6	DEFECT
// cycle over all the base segments groups in the range	WITHOUT_CLASSIFICATION	0.9999987415728856	WITHOUT_CLASSIFICATION	1.2584271144029147E-6	DEFECT
// cycle through all the segments contained in the base exclusion // area	WITHOUT_CLASSIFICATION	0.9999942953202916	WITHOUT_CLASSIFICATION	5.7046797083635705E-6	DEFECT
// go to next base segment group	WITHOUT_CLASSIFICATION	0.9999977940398358	WITHOUT_CLASSIFICATION	2.2059601642404494E-6	DEFECT
// key not found	WITHOUT_CLASSIFICATION	0.9999820574166997	WITHOUT_CLASSIFICATION	1.7942583300330758E-5	DEFECT
// Segment fromSegment = getSegment(from); // fromSegment.inc(); // Segment toSegment = getSegment(to); // toSegment.dec();	WITHOUT_CLASSIFICATION	0.9999906116874703	WITHOUT_CLASSIFICATION	9.388312529673758E-6	DEFECT
// long start = Math.max( //     fromSegment.getSegmentStart(), this.segmentStart // ); // long end = Math.min(toSegment.getSegmentEnd(), this.segmentEnd);	WITHOUT_CLASSIFICATION	0.9999598842531452	WITHOUT_CLASSIFICATION	4.0115746854716375E-5	DEFECT
// Compute number of labels	WITHOUT_CLASSIFICATION	0.9999986848647544	WITHOUT_CLASSIFICATION	1.3151352455491609E-6	DEFECT
// Cycle when necessary	WITHOUT_CLASSIFICATION	0.9999941109653194	WITHOUT_CLASSIFICATION	5.889034680469367E-6	DEFECT
// Cycle when necessary	WITHOUT_CLASSIFICATION	0.9999941109653194	WITHOUT_CLASSIFICATION	5.889034680469367E-6	DEFECT
// If tick overlap when cycling, update last tick too	WITHOUT_CLASSIFICATION	0.9999998237302977	WITHOUT_CLASSIFICATION	1.7626970227696157E-7	DEFECT
// continue and separate the labels only if necessary	WITHOUT_CLASSIFICATION	0.9999998956932997	WITHOUT_CLASSIFICATION	1.0430670025589657E-7	DEFECT
// TOP	WITHOUT_CLASSIFICATION	0.9997949965875783	WITHOUT_CLASSIFICATION	2.050034124216094E-4	DEFECT
// TOP	WITHOUT_CLASSIFICATION	0.9997949965875783	WITHOUT_CLASSIFICATION	2.050034124216094E-4	DEFECT
// TOP	WITHOUT_CLASSIFICATION	0.9997949965875783	WITHOUT_CLASSIFICATION	2.050034124216094E-4	DEFECT
// BOTTOM	WITHOUT_CLASSIFICATION	0.9996928167024688	WITHOUT_CLASSIFICATION	3.0718329753116143E-4	DEFECT
// BOTTOM	WITHOUT_CLASSIFICATION	0.9996928167024688	WITHOUT_CLASSIFICATION	3.0718329753116143E-4	DEFECT
// BOTTOM	WITHOUT_CLASSIFICATION	0.9996928167024688	WITHOUT_CLASSIFICATION	3.0718329753116143E-4	DEFECT
// LEFT	WITHOUT_CLASSIFICATION	0.9998839609628888	WITHOUT_CLASSIFICATION	1.1603903711113238E-4	DEFECT
// LEFT	WITHOUT_CLASSIFICATION	0.9998839609628888	WITHOUT_CLASSIFICATION	1.1603903711113238E-4	DEFECT
// LEFT	WITHOUT_CLASSIFICATION	0.9998839609628888	WITHOUT_CLASSIFICATION	1.1603903711113238E-4	DEFECT
// RIGHT	WITHOUT_CLASSIFICATION	0.9999300651288828	WITHOUT_CLASSIFICATION	6.993487111716721E-5	DEFECT
// RIGHT	WITHOUT_CLASSIFICATION	0.9999300651288828	WITHOUT_CLASSIFICATION	6.993487111716721E-5	DEFECT
// no plot, no data	WITHOUT_CLASSIFICATION	0.9999962740829508	WITHOUT_CLASSIFICATION	3.7259170491960006E-6	DEFECT
// no plot, no data	WITHOUT_CLASSIFICATION	0.9999962740829508	WITHOUT_CLASSIFICATION	3.7259170491960006E-6	DEFECT
// if fixed auto range, then derive lower bound...	WITHOUT_CLASSIFICATION	0.9999898199359429	WITHOUT_CLASSIFICATION	1.0180064057098932E-5	DEFECT
// ensure the autorange is at least <minRange> in size...	WITHOUT_CLASSIFICATION	0.9999645163995305	WITHOUT_CLASSIFICATION	3.548360046953234E-5	DEFECT
// ensure the autorange is at least <minRange> in size...	WITHOUT_CLASSIFICATION	0.9999645163995305	WITHOUT_CLASSIFICATION	3.548360046953234E-5	DEFECT
// if the axis is not visible, don't draw it...	WITHOUT_CLASSIFICATION	0.9999172540397172	WITHOUT_CLASSIFICATION	8.274596028281546E-5	DEFECT
// even though the axis is not visible, we need ticks for the // gridlines...	WITHOUT_CLASSIFICATION	0.9999921357414632	WITHOUT_CLASSIFICATION	7.864258536895674E-6	DEFECT
// look at lower and upper bounds...	WITHOUT_CLASSIFICATION	0.9999980997731337	WITHOUT_CLASSIFICATION	1.900226866344139E-6	DEFECT
// draw the tick marks and labels...	WITHOUT_CLASSIFICATION	0.9999974396560807	WITHOUT_CLASSIFICATION	2.5603439193367575E-6	DEFECT
// TOP	WITHOUT_CLASSIFICATION	0.9997949965875783	WITHOUT_CLASSIFICATION	2.050034124216094E-4	DEFECT
// BOTTOM	WITHOUT_CLASSIFICATION	0.9996928167024688	WITHOUT_CLASSIFICATION	3.0718329753116143E-4	DEFECT
// BOTTOM	WITHOUT_CLASSIFICATION	0.9996928167024688	WITHOUT_CLASSIFICATION	3.0718329753116143E-4	DEFECT
// LEFT	WITHOUT_CLASSIFICATION	0.9998839609628888	WITHOUT_CLASSIFICATION	1.1603903711113238E-4	DEFECT
// LEFT	WITHOUT_CLASSIFICATION	0.9998839609628888	WITHOUT_CLASSIFICATION	1.1603903711113238E-4	DEFECT
// RIGHT	WITHOUT_CLASSIFICATION	0.9999300651288828	WITHOUT_CLASSIFICATION	6.993487111716721E-5	DEFECT
// RIGHT	WITHOUT_CLASSIFICATION	0.9999300651288828	WITHOUT_CLASSIFICATION	6.993487111716721E-5	DEFECT
// first check that autoPopulate==false works as expected	WITHOUT_CLASSIFICATION	0.99999811125054	WITHOUT_CLASSIFICATION	1.8887494599718496E-6	DEFECT
// default make height of plotArea	WITHOUT_CLASSIFICATION	0.999999336109054	WITHOUT_CLASSIFICATION	6.638909460731127E-7	DEFECT
// allow fixed thickness	WITHOUT_CLASSIFICATION	0.9999850964516677	WITHOUT_CLASSIFICATION	1.4903548332435988E-5	DEFECT
// update, but dont draw tick marks (needed for stepped colors)	WITHOUT_CLASSIFICATION	0.9999975641758359	WITHOUT_CLASSIFICATION	2.435824164159529E-6	DEFECT
// suppresses compiler warnings	WITHOUT_CLASSIFICATION	0.9999966558962792	WITHOUT_CLASSIFICATION	3.344103720912953E-6	DEFECT
// setTickValues was missing from ColorPalette v. 0.96 //colorPalette.setTickValues(this.axis.getTicks());	WITHOUT_CLASSIFICATION	0.9999983504182635	WITHOUT_CLASSIFICATION	1.6495817366000732E-6	DEFECT
// calculate the adjusted data area taking into account the 3D effect...	WITHOUT_CLASSIFICATION	0.9999885777919248	WITHOUT_CLASSIFICATION	1.1422208075153944E-5	DEFECT
// argument checking delegated...	WITHOUT_CLASSIFICATION	0.9999990939505744	WITHOUT_CLASSIFICATION	9.060494255698959E-7	DEFECT
// transparent	WITHOUT_CLASSIFICATION	0.9999861499081059	WITHOUT_CLASSIFICATION	1.385009189414514E-5	DEFECT
//gets the outline stroke width of the plot	WITHOUT_CLASSIFICATION	0.9999955200944823	WITHOUT_CLASSIFICATION	4.4799055176396866E-6	DEFECT
// ensure that all the symbols are displayed	WITHOUT_CLASSIFICATION	0.9999878765691704	WITHOUT_CLASSIFICATION	1.2123430829596403E-5	DEFECT
// this ensure that the grid bands will be displayed correctly.	WITHOUT_CLASSIFICATION	0.9999843862303228	WITHOUT_CLASSIFICATION	1.561376967726293E-5	DEFECT
// avoid to draw overlapping tick labels	WITHOUT_CLASSIFICATION	0.9999990924976041	WITHOUT_CLASSIFICATION	9.075023958212342E-7	DEFECT
// avoid to draw overlapping tick labels	WITHOUT_CLASSIFICATION	0.9999990924976041	WITHOUT_CLASSIFICATION	9.075023958212342E-7	DEFECT
// don't draw this tick label	WITHOUT_CLASSIFICATION	0.9998847786351264	WITHOUT_CLASSIFICATION	1.1522136487366717E-4	DEFECT
// don't draw this tick label	WITHOUT_CLASSIFICATION	0.9998847786351264	WITHOUT_CLASSIFICATION	1.1522136487366717E-4	DEFECT
// remember these values for next comparison	WITHOUT_CLASSIFICATION	0.9999968536151663	WITHOUT_CLASSIFICATION	3.1463848336355716E-6	DEFECT
// remember these values for next comparison	WITHOUT_CLASSIFICATION	0.9999968536151663	WITHOUT_CLASSIFICATION	3.1463848336355716E-6	DEFECT
// first check that autoPopulate==false works as expected	WITHOUT_CLASSIFICATION	0.99999811125054	WITHOUT_CLASSIFICATION	1.8887494599718496E-6	DEFECT
// if the axis is not visible, don't draw it...	WITHOUT_CLASSIFICATION	0.9999172540397172	WITHOUT_CLASSIFICATION	8.274596028281546E-5	DEFECT
// even though the axis is not visible, we need ticks for the // gridlines...	WITHOUT_CLASSIFICATION	0.9999921357414632	WITHOUT_CLASSIFICATION	7.864258536895674E-6	DEFECT
// all tick labels have the same width (equal to the height of the // font)...	WITHOUT_CLASSIFICATION	0.9999993460619094	WITHOUT_CLASSIFICATION	6.539380905993265E-7	DEFECT
// draw the category labels and axis label	WITHOUT_CLASSIFICATION	0.9999980460464992	WITHOUT_CLASSIFICATION	1.953953500745057E-6	DEFECT
// create a new space object if one wasn't supplied...	WITHOUT_CLASSIFICATION	0.9999979905437885	WITHOUT_CLASSIFICATION	2.009456211515456E-6	DEFECT
// if the axis is not visible, no additional space is required...	WITHOUT_CLASSIFICATION	0.9999951590501157	WITHOUT_CLASSIFICATION	4.8409498843595915E-6	DEFECT
// start with the current tick unit...	WITHOUT_CLASSIFICATION	0.9999974545773457	WITHOUT_CLASSIFICATION	2.5454226543052876E-6	DEFECT
// start with the current tick unit...	WITHOUT_CLASSIFICATION	0.9999974545773457	WITHOUT_CLASSIFICATION	2.5454226543052876E-6	DEFECT
// then extrapolate...	WITHOUT_CLASSIFICATION	0.999987397491336	WITHOUT_CLASSIFICATION	1.2602508664029013E-5	DEFECT
// then extrapolate...	WITHOUT_CLASSIFICATION	0.999987397491336	WITHOUT_CLASSIFICATION	1.2602508664029013E-5	DEFECT
// check a series with no items	WITHOUT_CLASSIFICATION	0.999994972713448	WITHOUT_CLASSIFICATION	5.027286552098427E-6	DEFECT
// must be top or bottom	WITHOUT_CLASSIFICATION	0.9998738571078729	WITHOUT_CLASSIFICATION	1.261428921270729E-4	DEFECT
// catches null also	WITHOUT_CLASSIFICATION	0.9999969683831358	WITHOUT_CLASSIFICATION	3.0316168641126563E-6	DEFECT
// no action required.	WITHOUT_CLASSIFICATION	0.9999943835121463	WITHOUT_CLASSIFICATION	5.616487853683395E-6	DEFECT
// no action required.	WITHOUT_CLASSIFICATION	0.9999943835121463	WITHOUT_CLASSIFICATION	5.616487853683395E-6	DEFECT
// check if we need to collect chart entities from the container	WITHOUT_CLASSIFICATION	0.9999978896513784	WITHOUT_CLASSIFICATION	2.110348621704299E-6	DEFECT
// place in this row (truncated) anyway	WITHOUT_CLASSIFICATION	0.9999925477902438	WITHOUT_CLASSIFICATION	7.452209756169221E-6	DEFECT
// start new row	WITHOUT_CLASSIFICATION	0.9999922084728954	WITHOUT_CLASSIFICATION	7.791527104679056E-6	DEFECT
//Block b = (Block) blocks.get(i);	WITHOUT_CLASSIFICATION	0.9999805654056709	WITHOUT_CLASSIFICATION	1.9434594329073102E-5	DEFECT
// can safely ignore	WITHOUT_CLASSIFICATION	0.9999931935122187	WITHOUT_CLASSIFICATION	6.806487781292539E-6	DEFECT
// find optimum height, then map to range	WITHOUT_CLASSIFICATION	0.9999960211309773	WITHOUT_CLASSIFICATION	3.978869022658528E-6	DEFECT
// find optimum height	WITHOUT_CLASSIFICATION	0.999993117904246	WITHOUT_CLASSIFICATION	6.8820957538870916E-6	DEFECT
// find optimum height	WITHOUT_CLASSIFICATION	0.999993117904246	WITHOUT_CLASSIFICATION	6.8820957538870916E-6	DEFECT
// find optimum height and map to range	WITHOUT_CLASSIFICATION	0.9999966030593975	WITHOUT_CLASSIFICATION	3.396940602419431E-6	DEFECT
// find optimum width and map to range	WITHOUT_CLASSIFICATION	0.999994240162478	WITHOUT_CLASSIFICATION	5.759837522059387E-6	DEFECT
// check a series with no items	WITHOUT_CLASSIFICATION	0.999994972713448	WITHOUT_CLASSIFICATION	5.027286552098427E-6	DEFECT
// check a series with no items	WITHOUT_CLASSIFICATION	0.999994972713448	WITHOUT_CLASSIFICATION	5.027286552098427E-6	DEFECT
// since the flow layout is relatively straightforward, // no information needs to be recorded here	WITHOUT_CLASSIFICATION	0.9999926871826379	WITHOUT_CLASSIFICATION	7.312817362175245E-6	DEFECT
// no action required.	WITHOUT_CLASSIFICATION	0.9999943835121463	WITHOUT_CLASSIFICATION	5.616487853683395E-6	DEFECT
// first arrange without constraints, and see if this fits within // the required ranges...	WITHOUT_CLASSIFICATION	0.9999930991504059	WITHOUT_CLASSIFICATION	6.900849594004435E-6	DEFECT
// first arrange without constraints, then see if the width fits // within the required range...if not, call arrangeFN() at max width	WITHOUT_CLASSIFICATION	0.9999966908918781	WITHOUT_CLASSIFICATION	3.3091081217599524E-6	DEFECT
// first arrange without constraints, then see if the width fits // within the required range...if not, call arrangeFN() at max width	WITHOUT_CLASSIFICATION	0.9999966908918781	WITHOUT_CLASSIFICATION	3.3091081217599524E-6	DEFECT
// check if we need to collect chart entities from the container	WITHOUT_CLASSIFICATION	0.9999978896513784	WITHOUT_CLASSIFICATION	2.110348621704299E-6	DEFECT
//Block b = (Block) blocks.get(i);	WITHOUT_CLASSIFICATION	0.9999805654056709	WITHOUT_CLASSIFICATION	1.9434594329073102E-5	DEFECT
// this default implementation will just fill the available // border space with a single color	WITHOUT_CLASSIFICATION	0.9999828590239387	WITHOUT_CLASSIFICATION	1.7140976061289036E-5	DEFECT
// backgroundImage	WITHOUT_CLASSIFICATION	0.9999955288188996	WITHOUT_CLASSIFICATION	4.471181100460058E-6	DEFECT
// fixed width	WITHOUT_CLASSIFICATION	0.9999500961845661	WITHOUT_CLASSIFICATION	4.990381543390833E-5	DEFECT
// width is OK, but height must be constrained	WITHOUT_CLASSIFICATION	0.9996343356337254	WITHOUT_CLASSIFICATION	3.656643662745889E-4	DEFECT
// height is OK, but width must be constrained	WITHOUT_CLASSIFICATION	0.9992157608288897	WITHOUT_CLASSIFICATION	7.842391711103149E-4	DEFECT
// nothing to clear	WITHOUT_CLASSIFICATION	0.9999961999110086	WITHOUT_CLASSIFICATION	3.8000889913672034E-6	DEFECT
// if the area has zero height or width, we shouldn't draw anything	WITHOUT_CLASSIFICATION	0.9999907965296102	WITHOUT_CLASSIFICATION	9.203470389745977E-6	DEFECT
// since the flow layout is relatively straightforward, no information // needs to be recorded here	WITHOUT_CLASSIFICATION	0.9999914317132409	WITHOUT_CLASSIFICATION	8.568286759034314E-6	DEFECT
// place in this column (truncated) anyway	WITHOUT_CLASSIFICATION	0.9999938017245021	WITHOUT_CLASSIFICATION	6.1982754979378035E-6	DEFECT
// start new column	WITHOUT_CLASSIFICATION	0.9999976845196886	WITHOUT_CLASSIFICATION	2.3154803113382524E-6	DEFECT
// set a theme using the new shadow generator feature available in // 1.0.14 - for backwards compatibility it is not enabled by default	WITHOUT_CLASSIFICATION	0.9999988141993749	WITHOUT_CLASSIFICATION	1.1858006250609065E-6	DEFECT
/* x-axis label*/	WITHOUT_CLASSIFICATION	0.9999701527009328	WITHOUT_CLASSIFICATION	2.9847299067208563E-5	DEFECT
/* y-axis label */	WITHOUT_CLASSIFICATION	0.9999817900319379	WITHOUT_CLASSIFICATION	1.8209968062075693E-5	DEFECT
// chart title // data // no legend // tooltips // no URL generation	WITHOUT_CLASSIFICATION	0.9999985497437862	WITHOUT_CLASSIFICATION	1.45025621373073E-6	DEFECT
// check a series with one item	WITHOUT_CLASSIFICATION	0.9999951209667572	WITHOUT_CLASSIFICATION	4.879033242642592E-6	DEFECT
// ****************************************************************** //  More than 150 demo applications are included with the JFreeChart //  Developer Guide...for more information, see: // //  >   http://www.object-refinery.com/jfreechart/guide.html // // ******************************************************************	WITHOUT_CLASSIFICATION	0.9999961540123543	WITHOUT_CLASSIFICATION	3.845987645633938E-6	DEFECT
// title // x-axis label // y-axis label // data // create legend? // generate tooltips? // generate URLs?	WITHOUT_CLASSIFICATION	0.9999964671109118	WITHOUT_CLASSIFICATION	3.532889088130867E-6	DEFECT
// set a custom background for the chart	WITHOUT_CLASSIFICATION	0.9999991113638815	WITHOUT_CLASSIFICATION	8.886361186028751E-7	DEFECT
// customise the title position and font	WITHOUT_CLASSIFICATION	0.9999980832510281	WITHOUT_CLASSIFICATION	1.9167489719296243E-6	DEFECT
// use gradients and white borders for the section colours	WITHOUT_CLASSIFICATION	0.9999981750018411	WITHOUT_CLASSIFICATION	1.8249981589444085E-6	DEFECT
// customise the section label appearance	WITHOUT_CLASSIFICATION	0.99999733953225	WITHOUT_CLASSIFICATION	2.660467749936963E-6	DEFECT
// add a subtitle giving the data source	WITHOUT_CLASSIFICATION	0.9999995113883573	WITHOUT_CLASSIFICATION	4.886116426793411E-7	DEFECT
// pass to the super-class for handling	WITHOUT_CLASSIFICATION	0.999999710029365	WITHOUT_CLASSIFICATION	2.899706349860243E-7	DEFECT
// pass to the super-class for handling	WITHOUT_CLASSIFICATION	0.999999710029365	WITHOUT_CLASSIFICATION	2.899706349860243E-7	DEFECT
// pass to the super-class for handling	WITHOUT_CLASSIFICATION	0.999999710029365	WITHOUT_CLASSIFICATION	2.899706349860243E-7	DEFECT
// don't need to do anything	WITHOUT_CLASSIFICATION	0.999952220996321	WITHOUT_CLASSIFICATION	4.7779003679023325E-5	DEFECT
// don't need to do anything	WITHOUT_CLASSIFICATION	0.999952220996321	WITHOUT_CLASSIFICATION	4.7779003679023325E-5	DEFECT
//    /** Insets text field. */ //    private InsetsTextField tickLabelInsetsTextField; // //    /** Label insets text field. */ //    private InsetsTextField labelInsetsTextField;	WITHOUT_CLASSIFICATION	0.9999993145884518	WITHOUT_CLASSIFICATION	6.854115482308606E-7	DEFECT
// figure out what type of axis we have and instantiate the // appropriate panel	WITHOUT_CLASSIFICATION	0.9999960221408507	WITHOUT_CLASSIFICATION	3.9778591492876714E-6	DEFECT
// Insets values	WITHOUT_CLASSIFICATION	0.9999941650242987	WITHOUT_CLASSIFICATION	5.834975701312267E-6	DEFECT
// axis.setTickMarkStroke(getTickMarkStroke());	WITHOUT_CLASSIFICATION	0.999986961164098	WITHOUT_CLASSIFICATION	1.3038835901939541E-5	DEFECT
// create a panel for the settings...	WITHOUT_CLASSIFICATION	0.9999990967536627	WITHOUT_CLASSIFICATION	9.032463373215762E-7	DEFECT
//dmo: added this panel for colorbar control. (start dmo additions)	WITHOUT_CLASSIFICATION	0.9999210947500194	WITHOUT_CLASSIFICATION	7.890524998062054E-5	DEFECT
//      end fix by rfuller	WITHOUT_CLASSIFICATION	0.999940158348775	WITHOUT_CLASSIFICATION	5.9841651225059764E-5	DEFECT
//dmo: (end dmo additions)	WITHOUT_CLASSIFICATION	0.9998682583219359	WITHOUT_CLASSIFICATION	1.3174167806411497E-4	DEFECT
// set the plot properties...	WITHOUT_CLASSIFICATION	0.9999977977865616	WITHOUT_CLASSIFICATION	2.202213438367505E-6	DEFECT
// then the axis properties...	WITHOUT_CLASSIFICATION	0.9999940363174102	WITHOUT_CLASSIFICATION	5.963682589674505E-6	DEFECT
// pass to super-class for handling	WITHOUT_CLASSIFICATION	0.9999994977652821	WITHOUT_CLASSIFICATION	5.02234717903021E-7	DEFECT
//  No op	WITHOUT_CLASSIFICATION	0.9999603305702759	WITHOUT_CLASSIFICATION	3.966942972417117E-5	DEFECT
//  No op	WITHOUT_CLASSIFICATION	0.9999603305702759	WITHOUT_CLASSIFICATION	3.966942972417117E-5	DEFECT
// defer argument checks...	WITHOUT_CLASSIFICATION	0.9999967818096451	WITHOUT_CLASSIFICATION	3.218190354864347E-6	DEFECT
//      fix by rfuller	WITHOUT_CLASSIFICATION	0.9999177403999162	WITHOUT_CLASSIFICATION	8.225960008376458E-5	DEFECT
// populate the deprecated fields	WITHOUT_CLASSIFICATION	0.999999216462924	WITHOUT_CLASSIFICATION	7.835370760245375E-7	DEFECT
//same as for ChartEntity!	WITHOUT_CLASSIFICATION	0.999973625891703	WITHOUT_CLASSIFICATION	2.637410829702913E-5	DEFECT
//same as for ChartEntity!	WITHOUT_CLASSIFICATION	0.999973625891703	WITHOUT_CLASSIFICATION	2.637410829702913E-5	DEFECT
//same as for ChartEntity!	WITHOUT_CLASSIFICATION	0.999973625891703	WITHOUT_CLASSIFICATION	2.637410829702913E-5	DEFECT
// update the deprecated field	WITHOUT_CLASSIFICATION	0.9999981401134979	WITHOUT_CLASSIFICATION	1.8598865022300742E-6	DEFECT
// update the deprecated fields	WITHOUT_CLASSIFICATION	0.9999986996573594	WITHOUT_CLASSIFICATION	1.300342640577969E-6	DEFECT
// check the deprecated fields	WITHOUT_CLASSIFICATION	0.9999990023879969	WITHOUT_CLASSIFICATION	9.97612003091218E-7	DEFECT
// try the parent plot	WITHOUT_CLASSIFICATION	0.9999950820210214	WITHOUT_CLASSIFICATION	4.9179789786265155E-6	DEFECT
// do not notify while zooming each axis	WITHOUT_CLASSIFICATION	0.9999781588147564	WITHOUT_CLASSIFICATION	2.1841185243734502E-5	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999792375281624	WITHOUT_CLASSIFICATION	2.0762471837648883E-5	DEFECT
// this generates the change event too	WITHOUT_CLASSIFICATION	0.9999656238159385	WITHOUT_CLASSIFICATION	3.437618406163437E-5	DEFECT
/* x-axis label*/	WITHOUT_CLASSIFICATION	0.9999701527009328	WITHOUT_CLASSIFICATION	2.9847299067208563E-5	DEFECT
/* y-axis label */	WITHOUT_CLASSIFICATION	0.9999817900319379	WITHOUT_CLASSIFICATION	1.8209968062075693E-5	DEFECT
// set a custom background for the chart	WITHOUT_CLASSIFICATION	0.9999991113638815	WITHOUT_CLASSIFICATION	8.886361186028751E-7	DEFECT
// customise the title position and font	WITHOUT_CLASSIFICATION	0.9999980832510281	WITHOUT_CLASSIFICATION	1.9167489719296243E-6	DEFECT
// use gradients and white borders for the section colours	WITHOUT_CLASSIFICATION	0.9999981750018411	WITHOUT_CLASSIFICATION	1.8249981589444085E-6	DEFECT
// customise the section label appearance	WITHOUT_CLASSIFICATION	0.99999733953225	WITHOUT_CLASSIFICATION	2.660467749936963E-6	DEFECT
// add a subtitle giving the data source	WITHOUT_CLASSIFICATION	0.9999995113883573	WITHOUT_CLASSIFICATION	4.886116426793411E-7	DEFECT
//same as for ChartEntity!	WITHOUT_CLASSIFICATION	0.999973625891703	WITHOUT_CLASSIFICATION	2.637410829702913E-5	DEFECT
//dmo added //dmo added	WITHOUT_CLASSIFICATION	0.9994982531474415	WITHOUT_CLASSIFICATION	5.017468525584984E-4	DEFECT
// if there is a tool tip, we expect it to generate the title and // alt values, so we only add an empty alt if there is no tooltip	WITHOUT_CLASSIFICATION	0.9999506286457369	WITHOUT_CLASSIFICATION	4.937135426319666E-5	DEFECT
// check a series with two items	WITHOUT_CLASSIFICATION	0.9999937688906445	WITHOUT_CLASSIFICATION	6.231109355489228E-6	DEFECT
// FIXME	WITHOUT_CLASSIFICATION	0.9710469337640577	WITHOUT_CLASSIFICATION	0.028953066235942362	DEFECT
// this is a paint we don't recognise	WITHOUT_CLASSIFICATION	0.9996430443676397	WITHOUT_CLASSIFICATION	3.569556323602928E-4	DEFECT
// null is handled fine here...	WITHOUT_CLASSIFICATION	0.9999828146348021	WITHOUT_CLASSIFICATION	1.7185365197834005E-5	DEFECT
// we can't do anything	WITHOUT_CLASSIFICATION	0.9999696750520976	WITHOUT_CLASSIFICATION	3.032494790248408E-5	DEFECT
// force a redraw	WITHOUT_CLASSIFICATION	0.9999906664610841	WITHOUT_CLASSIFICATION	9.333538915782902E-6	DEFECT
// pass on the event to the auxiliary handlers	WITHOUT_CLASSIFICATION	0.9999985718684881	WITHOUT_CLASSIFICATION	1.4281315119736796E-6	DEFECT
// pass on the event to the auxiliary handlers	WITHOUT_CLASSIFICATION	0.9999985718684881	WITHOUT_CLASSIFICATION	1.4281315119736796E-6	DEFECT
// relay the event from the canvas to our registered listeners	WITHOUT_CLASSIFICATION	0.9999983042891475	WITHOUT_CLASSIFICATION	1.6957108524333422E-6	DEFECT
// relay the event from the canvas to our registered listeners	WITHOUT_CLASSIFICATION	0.9999983042891475	WITHOUT_CLASSIFICATION	1.6957108524333422E-6	DEFECT
// set the default stroke for all series	WITHOUT_CLASSIFICATION	0.999998508297722	WITHOUT_CLASSIFICATION	1.4917022780410714E-6	DEFECT
//this.chartPanel.isDomainZoomable()) {	WITHOUT_CLASSIFICATION	0.9999893808950155	WITHOUT_CLASSIFICATION	1.061910498454103E-5	DEFECT
//this.chartPanel.isRangeZoomable()) {	WITHOUT_CLASSIFICATION	0.9999901452941503	WITHOUT_CLASSIFICATION	9.854705849719488E-6	DEFECT
// does nothing unless overridden	WITHOUT_CLASSIFICATION	0.9999955052377401	WITHOUT_CLASSIFICATION	4.494762259903497E-6	DEFECT
// does nothing unless overridden	WITHOUT_CLASSIFICATION	0.9999955052377401	WITHOUT_CLASSIFICATION	4.494762259903497E-6	DEFECT
// does nothing unless overridden        	WITHOUT_CLASSIFICATION	0.9999954746661528	WITHOUT_CLASSIFICATION	4.525333847122235E-6	DEFECT
// selected rectangle shouldn't extend outside the data area...	WITHOUT_CLASSIFICATION	0.9999981492480079	WITHOUT_CLASSIFICATION	1.8507519920882541E-6	DEFECT
// for mouseReleased event, (horizontalZoom || verticalZoom) // will be true, so we can just test for either being false; // otherwise both are true	WITHOUT_CLASSIFICATION	0.9999657816520859	WITHOUT_CLASSIFICATION	3.421834791412365E-5	DEFECT
// chart title // data // no legend // tooltips // no URL generation	WITHOUT_CLASSIFICATION	0.9999985497437862	WITHOUT_CLASSIFICATION	1.45025621373073E-6	DEFECT
// does nothing unless overridden	WITHOUT_CLASSIFICATION	0.9999955052377401	WITHOUT_CLASSIFICATION	4.494762259903497E-6	DEFECT
// special case - if the underlying rectangle uses ints we // need to create one that uses doubles	WITHOUT_CLASSIFICATION	0.9999997295416274	WITHOUT_CLASSIFICATION	2.704583726497443E-7	DEFECT
// title // x-axis label // y-axis label	WITHOUT_CLASSIFICATION	0.9999787310046634	WITHOUT_CLASSIFICATION	2.1268995336600365E-5	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999792375281624	WITHOUT_CLASSIFICATION	2.0762471837648883E-5	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999792375281624	WITHOUT_CLASSIFICATION	2.0762471837648883E-5	DEFECT
// check a series with four items	WITHOUT_CLASSIFICATION	0.9999960775290851	WITHOUT_CLASSIFICATION	3.922470914929977E-6	DEFECT
// the actual panning occurs later in the mouseDragged() method	WITHOUT_CLASSIFICATION	0.9999983001042871	WITHOUT_CLASSIFICATION	1.6998957128560885E-6	DEFECT
//handle panning if we have a start point else unregister	WITHOUT_CLASSIFICATION	0.999997527982836	WITHOUT_CLASSIFICATION	2.472017163968817E-6	DEFECT
//if we have been panning reset the cursor //unregister in any case	WITHOUT_CLASSIFICATION	0.9999939300974077	WITHOUT_CLASSIFICATION	6.0699025923732055E-6	DEFECT
// the URL text should already have been escaped by the URL generator	WITHOUT_CLASSIFICATION	0.9999959303090404	WITHOUT_CLASSIFICATION	4.069690959524951E-6	DEFECT
// no fields to test	WITHOUT_CLASSIFICATION	0.9999886043402918	WITHOUT_CLASSIFICATION	1.1395659708272348E-5	DEFECT
/// we have rotation huston, please spin me	WITHOUT_CLASSIFICATION	0.9999975136500114	WITHOUT_CLASSIFICATION	2.486349988505843E-6	DEFECT
/// we have rotation huston, please spin me	WITHOUT_CLASSIFICATION	0.9999975136500114	WITHOUT_CLASSIFICATION	2.486349988505843E-6	DEFECT
/// we have rotation	WITHOUT_CLASSIFICATION	0.9999887312011987	WITHOUT_CLASSIFICATION	1.126879880122481E-5	DEFECT
/// we have rotation	WITHOUT_CLASSIFICATION	0.9999887312011987	WITHOUT_CLASSIFICATION	1.126879880122481E-5	DEFECT
/// we have rotation	WITHOUT_CLASSIFICATION	0.9999887312011987	WITHOUT_CLASSIFICATION	1.126879880122481E-5	DEFECT
// isArrowAtTop	WITHOUT_CLASSIFICATION	0.9996726677142063	WITHOUT_CLASSIFICATION	3.273322857936412E-4	DEFECT
//int maxX = (int) (plotArea.getMaxX());	WITHOUT_CLASSIFICATION	0.9999839199149603	WITHOUT_CLASSIFICATION	1.608008503966027E-5	DEFECT
//int maxX = (int) (plotArea.getMaxX());	WITHOUT_CLASSIFICATION	0.9999839199149603	WITHOUT_CLASSIFICATION	1.608008503966027E-5	DEFECT
//int midY = (int) (plotArea.getMinY() + (plotArea.getHeight() / 2));	WITHOUT_CLASSIFICATION	0.9999959805307984	WITHOUT_CLASSIFICATION	4.019469201512048E-6	DEFECT
//int midY = (int) (plotArea.getMinY() + (plotArea.getHeight() / 2));	WITHOUT_CLASSIFICATION	0.9999959805307984	WITHOUT_CLASSIFICATION	4.019469201512048E-6	DEFECT
/// we have rotation houston, please spin me	WITHOUT_CLASSIFICATION	0.9999975229271165	WITHOUT_CLASSIFICATION	2.4770728834296917E-6	DEFECT
// horizontal	WITHOUT_CLASSIFICATION	0.9999888379864058	WITHOUT_CLASSIFICATION	1.1162013594073586E-5	DEFECT
// store the plot and its weight	WITHOUT_CLASSIFICATION	0.9999978531695463	WITHOUT_CLASSIFICATION	2.146830453766601E-6	DEFECT
// configure the range axis...	WITHOUT_CLASSIFICATION	0.9999678682336293	WITHOUT_CLASSIFICATION	3.2131766370741445E-5	DEFECT
// work out the space required by the domain axis...	WITHOUT_CLASSIFICATION	0.9999988715573684	WITHOUT_CLASSIFICATION	1.1284426314680946E-6	DEFECT
// work out the maximum height or width of the non-shared axes...	WITHOUT_CLASSIFICATION	0.9999979742762337	WITHOUT_CLASSIFICATION	2.025723766240262E-6	DEFECT
// we expect the line to be vertical or horizontal // vertical	WITHOUT_CLASSIFICATION	0.9999913223756471	WITHOUT_CLASSIFICATION	8.677624352837448E-6	DEFECT
// calculate plotAreas of all sub-plots, maximum vertical/horizontal // axis width/height	WITHOUT_CLASSIFICATION	0.999998819518231	WITHOUT_CLASSIFICATION	1.180481769014689E-6	DEFECT
// calculate sub-plot area	WITHOUT_CLASSIFICATION	0.9999924657120689	WITHOUT_CLASSIFICATION	7.534287931144246E-6	DEFECT
// adjust the drawing area for plot insets (if any)...	WITHOUT_CLASSIFICATION	0.9999967097683914	WITHOUT_CLASSIFICATION	3.2902316085089602E-6	DEFECT
// calculate the data area...	WITHOUT_CLASSIFICATION	0.9999911309074593	WITHOUT_CLASSIFICATION	8.869092540741332E-6	DEFECT
// set the width and height of non-shared axis of all sub-plots	WITHOUT_CLASSIFICATION	0.9999992721015734	WITHOUT_CLASSIFICATION	7.278984265508591E-7	DEFECT
// draw the shared axis	WITHOUT_CLASSIFICATION	0.9999820970844356	WITHOUT_CLASSIFICATION	1.79029155643222E-5	DEFECT
// draw all the charts	WITHOUT_CLASSIFICATION	0.9999910480075377	WITHOUT_CLASSIFICATION	8.951992462324892E-6	DEFECT
// the range axis is deserialized before the subplots, so its value // range is likely to be incorrect...	WITHOUT_CLASSIFICATION	0.9999978581871772	WITHOUT_CLASSIFICATION	2.1418128227971703E-6	DEFECT
// default preserves previous // behaviour	WITHOUT_CLASSIFICATION	0.9999991979730267	WITHOUT_CLASSIFICATION	8.020269733601813E-7	DEFECT
// adjust for insets...	WITHOUT_CLASSIFICATION	0.9999704095374553	WITHOUT_CLASSIFICATION	2.9590462544661704E-5	DEFECT
// make the link area a square if the pie chart is to be circular... // is circular?	WITHOUT_CLASSIFICATION	0.999949734794977	WITHOUT_CLASSIFICATION	5.026520502301631E-5	DEFECT
// the link area defines the dog leg points for the linking lines to // the labels	WITHOUT_CLASSIFICATION	0.9999957057344826	WITHOUT_CLASSIFICATION	4.294265517385522E-6	DEFECT
// the explode area defines the max circle/ellipse for the exploded pie // sections. // it is defined by shrinking the linkArea by the linkMargin factor.	WITHOUT_CLASSIFICATION	0.9999864438836554	WITHOUT_CLASSIFICATION	1.3556116344538077E-5	DEFECT
// the pie area defines the circle/ellipse for regular pie sections. // it is defined by shrinking the explodeArea by the explodeMargin // factor.	WITHOUT_CLASSIFICATION	0.9999905895490099	WITHOUT_CLASSIFICATION	9.410450990189737E-6	DEFECT
// the link area defines the dog-leg point for the linking lines to // the labels	WITHOUT_CLASSIFICATION	0.9999967261601828	WITHOUT_CLASSIFICATION	3.2738398171555125E-6	DEFECT
// get the data source - return if null;	WITHOUT_CLASSIFICATION	0.9999998346609004	WITHOUT_CLASSIFICATION	1.6533909967234697E-7	DEFECT
// if too any elements	WITHOUT_CLASSIFICATION	0.9999833009989271	WITHOUT_CLASSIFICATION	1.6699001072857122E-5	DEFECT
// get a list of keys...	WITHOUT_CLASSIFICATION	0.9999938841326617	WITHOUT_CLASSIFICATION	6.115867338403161E-6	DEFECT
// do nothing by default.	WITHOUT_CLASSIFICATION	0.9999947192525374	WITHOUT_CLASSIFICATION	5.280747462670066E-6	DEFECT
//g2.clip(clipArea);	WITHOUT_CLASSIFICATION	0.9999485600486033	WITHOUT_CLASSIFICATION	5.143995139666083E-5	DEFECT
// if depth is negative don't draw anything	WITHOUT_CLASSIFICATION	0.9999235124494291	WITHOUT_CLASSIFICATION	7.648755057093829E-5	DEFECT
// draw the bottom circle	WITHOUT_CLASSIFICATION	0.9999923527654844	WITHOUT_CLASSIFICATION	7.647234515647405E-6	DEFECT
// draw the height	WITHOUT_CLASSIFICATION	0.9999939395703961	WITHOUT_CLASSIFICATION	6.060429603939466E-6	DEFECT
// cycle through once drawing only the sides at the back...	WITHOUT_CLASSIFICATION	0.9999991424845136	WITHOUT_CLASSIFICATION	8.57515486490824E-7	DEFECT
// cycle through again drawing only the sides at the front...	WITHOUT_CLASSIFICATION	0.9999985231402798	WITHOUT_CLASSIFICATION	1.4768597202202919E-6	DEFECT
// add a tooltip for the section...	WITHOUT_CLASSIFICATION	0.9999995302252481	WITHOUT_CLASSIFICATION	4.6977475194765785E-7	DEFECT
// @mgs: using the method's return value was missing	WITHOUT_CLASSIFICATION	0.999999094525535	WITHOUT_CLASSIFICATION	9.054744649666192E-7	DEFECT
// for CLOCKWISE charts, the extent will be negative...	WITHOUT_CLASSIFICATION	0.9999915089216652	WITHOUT_CLASSIFICATION	8.491078334891534E-6	DEFECT
// start at front	WITHOUT_CLASSIFICATION	0.999982954659756	WITHOUT_CLASSIFICATION	1.7045340244078463E-5	DEFECT
// the segment starts at the front, and wraps all // the way around // the back and finishes at the front again	WITHOUT_CLASSIFICATION	0.9999988940641615	WITHOUT_CLASSIFICATION	1.1059358385015266E-6	DEFECT
// starts at the front, finishes at the back (going // around the left side)	WITHOUT_CLASSIFICATION	0.9999994014092534	WITHOUT_CLASSIFICATION	5.985907466788267E-7	DEFECT
// the segment starts at the back (still extending // CLOCKWISE)	WITHOUT_CLASSIFICATION	0.9999897007022693	WITHOUT_CLASSIFICATION	1.0299297730671395E-5	DEFECT
// whole segment stays at the back	WITHOUT_CLASSIFICATION	0.9999950299935924	WITHOUT_CLASSIFICATION	4.970006407685493E-6	DEFECT
// starts at the back, wraps around front, and // finishes at back again	WITHOUT_CLASSIFICATION	0.9999953297515969	WITHOUT_CLASSIFICATION	4.670248403124893E-6	DEFECT
// starts at back, finishes at front (CLOCKWISE)	WITHOUT_CLASSIFICATION	0.9999857641113814	WITHOUT_CLASSIFICATION	1.4235888618559998E-5	DEFECT
// segment starts at the front	WITHOUT_CLASSIFICATION	0.9999846715440122	WITHOUT_CLASSIFICATION	1.5328455987840466E-5	DEFECT
// and finishes at the front	WITHOUT_CLASSIFICATION	0.9999920644443202	WITHOUT_CLASSIFICATION	7.935555679822468E-6	DEFECT
// segment only occupies the front	WITHOUT_CLASSIFICATION	0.9999987633495144	WITHOUT_CLASSIFICATION	1.2366504856607162E-6	DEFECT
// segments wraps right around the back...	WITHOUT_CLASSIFICATION	0.999998757241511	WITHOUT_CLASSIFICATION	1.242758488988338E-6	DEFECT
// segments starts at front and finishes at back...	WITHOUT_CLASSIFICATION	0.9999976387999624	WITHOUT_CLASSIFICATION	2.361200037581552E-6	DEFECT
// segment starts at back	WITHOUT_CLASSIFICATION	0.9999797858570523	WITHOUT_CLASSIFICATION	2.0214142947707934E-5	DEFECT
// and finishes at back	WITHOUT_CLASSIFICATION	0.9999876678014868	WITHOUT_CLASSIFICATION	1.2332198513178567E-5	DEFECT
//dmo //zero when the parameter is not set	WITHOUT_CLASSIFICATION	0.9999019863123618	WITHOUT_CLASSIFICATION	9.801368763808846E-5	DEFECT
// if there is an existing dataset, remove the plot from the list of // change listeners...	WITHOUT_CLASSIFICATION	0.9999836879171221	WITHOUT_CLASSIFICATION	1.6312082877950876E-5	DEFECT
// set the new dataset, and register the chart as a change listener...	WITHOUT_CLASSIFICATION	0.9999995292521442	WITHOUT_CLASSIFICATION	4.7074785575637284E-7	DEFECT
// send a dataset change event to self...	WITHOUT_CLASSIFICATION	0.9999991583078277	WITHOUT_CLASSIFICATION	8.416921723326651E-7	DEFECT
// plot is likely registered as a listener with the existing axis...	WITHOUT_CLASSIFICATION	0.9999860800984902	WITHOUT_CLASSIFICATION	1.391990150979986E-5	DEFECT
// plot is likely registered as a listener with the existing axis...	WITHOUT_CLASSIFICATION	0.9999860800984902	WITHOUT_CLASSIFICATION	1.391990150979986E-5	DEFECT
// if the plot area is too small, just return...	WITHOUT_CLASSIFICATION	0.9999763953528218	WITHOUT_CLASSIFICATION	2.3604647178241664E-5	DEFECT
// record the plot area...	WITHOUT_CLASSIFICATION	0.9999899747588572	WITHOUT_CLASSIFICATION	1.0025241142769562E-5	DEFECT
// additional dataArea modifications //check whether modification is	WITHOUT_CLASSIFICATION	0.9999969167680991	WITHOUT_CLASSIFICATION	3.083231900884454E-6	DEFECT
// ratio represents pixels	WITHOUT_CLASSIFICATION	0.9999968686178655	WITHOUT_CLASSIFICATION	3.1313821345197716E-6	DEFECT
// ratio represents axis units	WITHOUT_CLASSIFICATION	0.9999895400636405	WITHOUT_CLASSIFICATION	1.0459936359624014E-5	DEFECT
// draw the plot background...	WITHOUT_CLASSIFICATION	0.9999972112807879	WITHOUT_CLASSIFICATION	2.7887192120744863E-6	DEFECT
// draw vertical crosshair if required...	WITHOUT_CLASSIFICATION	0.9999993102631047	WITHOUT_CLASSIFICATION	6.89736895377823E-7	DEFECT
// draw horizontal crosshair if required...	WITHOUT_CLASSIFICATION	0.9999993024885501	WITHOUT_CLASSIFICATION	6.975114499689786E-7	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9999994784224214	WITHOUT_CLASSIFICATION	5.21577578463559E-7	DEFECT
// delegate 'info' and 'source' argument checks...	WITHOUT_CLASSIFICATION	0.9999998179262789	WITHOUT_CLASSIFICATION	1.8207372116052774E-7	DEFECT
// work out the space required by the domain axis...	WITHOUT_CLASSIFICATION	0.9999988715573684	WITHOUT_CLASSIFICATION	1.1284426314680946E-6	DEFECT
// delegate 'info' and 'source' argument checks...	WITHOUT_CLASSIFICATION	0.9999998179262789	WITHOUT_CLASSIFICATION	1.8207372116052774E-7	DEFECT
// now get the data and plot it (the visual representation will depend // on the renderer that has been set)...	WITHOUT_CLASSIFICATION	0.9999905448731505	WITHOUT_CLASSIFICATION	9.455126849406831E-6	DEFECT
// get the data points	WITHOUT_CLASSIFICATION	0.9999976865399016	WITHOUT_CLASSIFICATION	2.3134600983511115E-6	DEFECT
// this is a new column	WITHOUT_CLASSIFICATION	0.9997914314385451	WITHOUT_CLASSIFICATION	2.0856856145486438E-4	DEFECT
// end of column	WITHOUT_CLASSIFICATION	0.9999883220177385	WITHOUT_CLASSIFICATION	1.1677982261589862E-5	DEFECT
// add an entity for the item...	WITHOUT_CLASSIFICATION	0.9999731029637465	WITHOUT_CLASSIFICATION	2.6897036253520914E-5	DEFECT
//              }	WITHOUT_CLASSIFICATION	0.9999382453631852	WITHOUT_CLASSIFICATION	6.175463681472548E-5	DEFECT
// both axes	WITHOUT_CLASSIFICATION	0.9999707375580029	WITHOUT_CLASSIFICATION	2.9262441997012018E-5	DEFECT
// just the horizontal axis...	WITHOUT_CLASSIFICATION	0.999986035340834	WITHOUT_CLASSIFICATION	1.3964659166088746E-5	DEFECT
// just the vertical axis...	WITHOUT_CLASSIFICATION	0.9999831548048669	WITHOUT_CLASSIFICATION	1.684519513319208E-5	DEFECT
// check a series with repeating items	WITHOUT_CLASSIFICATION	0.9999967164033429	WITHOUT_CLASSIFICATION	3.2835966569974414E-6	DEFECT
// adjust for insets...	WITHOUT_CLASSIFICATION	0.9999704095374553	WITHOUT_CLASSIFICATION	2.9590462544661704E-5	DEFECT
// adjust the plot area by the interior spacing value	WITHOUT_CLASSIFICATION	0.999994226332924	WITHOUT_CLASSIFICATION	5.7736670759723536E-6	DEFECT
// set the new dataset, and register the chart as a change listener...	WITHOUT_CLASSIFICATION	0.9999995292521442	WITHOUT_CLASSIFICATION	4.7074785575637284E-7	DEFECT
// send a dataset change event to self...	WITHOUT_CLASSIFICATION	0.9999991583078277	WITHOUT_CLASSIFICATION	8.416921723326651E-7	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9999994784224214	WITHOUT_CLASSIFICATION	5.21577578463559E-7	DEFECT
//turn off anti-aliasing when filling rectangles	WITHOUT_CLASSIFICATION	0.9999958016935071	WITHOUT_CLASSIFICATION	4.198306492914039E-6	DEFECT
// add an entity for the item...	WITHOUT_CLASSIFICATION	0.9999731029637465	WITHOUT_CLASSIFICATION	2.6897036253520914E-5	DEFECT
// both axes	WITHOUT_CLASSIFICATION	0.9999707375580029	WITHOUT_CLASSIFICATION	2.9262441997012018E-5	DEFECT
// just the horizontal axis...	WITHOUT_CLASSIFICATION	0.999986035340834	WITHOUT_CLASSIFICATION	1.3964659166088746E-5	DEFECT
// just the vertical axis...	WITHOUT_CLASSIFICATION	0.9999831548048669	WITHOUT_CLASSIFICATION	1.684519513319208E-5	DEFECT
// draw the background	WITHOUT_CLASSIFICATION	0.99999573266618	WITHOUT_CLASSIFICATION	4.267333819971531E-6	DEFECT
//Object oldValue = this.toolTipGenerator;	WITHOUT_CLASSIFICATION	0.9998849167668962	WITHOUT_CLASSIFICATION	1.1508323310376571E-4	DEFECT
//Object oldValue = this.urlGenerator;	WITHOUT_CLASSIFICATION	0.9998368706750754	WITHOUT_CLASSIFICATION	1.631293249244616E-4	DEFECT
// plot the data (unless the dataset is null)...	WITHOUT_CLASSIFICATION	0.9999924946447536	WITHOUT_CLASSIFICATION	7.505355246381575E-6	DEFECT
// the following relies on the fact that the intervals are immutable	WITHOUT_CLASSIFICATION	0.9999763331803442	WITHOUT_CLASSIFICATION	2.3666819655863E-5	DEFECT
// intentionally blank	WITHOUT_CLASSIFICATION	0.9999590660139227	WITHOUT_CLASSIFICATION	4.093398607740378E-5	DEFECT
// can't find any difference	WITHOUT_CLASSIFICATION	0.9999843925743779	WITHOUT_CLASSIFICATION	1.560742562205769E-5	DEFECT
// we're doing this for testing only, and make sure that we // only add data in descending order by x-value	WITHOUT_CLASSIFICATION	0.9999976098841519	WITHOUT_CLASSIFICATION	2.3901158481747917E-6	DEFECT
// work out the maximum height or width of the non-shared axes...	WITHOUT_CLASSIFICATION	0.9999979742762337	WITHOUT_CLASSIFICATION	2.025723766240262E-6	DEFECT
// calculate sub-plot area	WITHOUT_CLASSIFICATION	0.9999924657120689	WITHOUT_CLASSIFICATION	7.534287931144246E-6	DEFECT
// calculate sub-plot area	WITHOUT_CLASSIFICATION	0.9999924657120689	WITHOUT_CLASSIFICATION	7.534287931144246E-6	DEFECT
// set up info collection...	WITHOUT_CLASSIFICATION	0.9999978589259849	WITHOUT_CLASSIFICATION	2.1410740151214234E-6	DEFECT
// adjust the drawing area for plot insets (if any)...	WITHOUT_CLASSIFICATION	0.9999967097683914	WITHOUT_CLASSIFICATION	3.2902316085089602E-6	DEFECT
// calculate the data area...	WITHOUT_CLASSIFICATION	0.9999911309074593	WITHOUT_CLASSIFICATION	8.869092540741332E-6	DEFECT
// set the width and height of non-shared axis of all sub-plots	WITHOUT_CLASSIFICATION	0.9999992721015734	WITHOUT_CLASSIFICATION	7.278984265508591E-7	DEFECT
// draw the shared axis	WITHOUT_CLASSIFICATION	0.9999820970844356	WITHOUT_CLASSIFICATION	1.79029155643222E-5	DEFECT
// if there is an existing dataset, remove the plot from the list of // change listeners...	WITHOUT_CLASSIFICATION	0.9999836879171221	WITHOUT_CLASSIFICATION	1.6312082877950876E-5	DEFECT
// set the new dataset, and register the chart as a change listener...	WITHOUT_CLASSIFICATION	0.9999995292521442	WITHOUT_CLASSIFICATION	4.7074785575637284E-7	DEFECT
// record the plot area...	WITHOUT_CLASSIFICATION	0.9999899747588572	WITHOUT_CLASSIFICATION	1.0025241142769562E-5	DEFECT
//  range = this.rangeAxis.getRange().getLength(); //  scaledRange = range * percent; //   rangeAxis.setAnchoredRange(scaledRange);	WITHOUT_CLASSIFICATION	0.9999985223923633	WITHOUT_CLASSIFICATION	1.4776076367242125E-6	DEFECT
// if the source point doesn't fall within a subplot, we do the // zoom on all subplots...	WITHOUT_CLASSIFICATION	0.9999910945093711	WITHOUT_CLASSIFICATION	8.905490628943164E-6	DEFECT
// draw all the subplots	WITHOUT_CLASSIFICATION	0.9999950415666085	WITHOUT_CLASSIFICATION	4.958433391586516E-6	DEFECT
// override is only for documentation purposes	WITHOUT_CLASSIFICATION	0.9999977562138332	WITHOUT_CLASSIFICATION	2.2437861667153913E-6	DEFECT
// send a dataset change event to self to trigger plot change event	WITHOUT_CLASSIFICATION	0.9999997757909972	WITHOUT_CLASSIFICATION	2.2420900274136924E-7	DEFECT
// adjust the drawing area for the plot insets (if any)...	WITHOUT_CLASSIFICATION	0.9999969970554844	WITHOUT_CLASSIFICATION	3.0029445155883104E-6	DEFECT
// y is minor	WITHOUT_CLASSIFICATION	0.9999344567471595	WITHOUT_CLASSIFICATION	6.554325284045581E-5	DEFECT
// y is minor	WITHOUT_CLASSIFICATION	0.9999344567471595	WITHOUT_CLASSIFICATION	6.554325284045581E-5	DEFECT
//get major dimension	WITHOUT_CLASSIFICATION	0.9999890893066272	WITHOUT_CLASSIFICATION	1.0910693372783072E-5	DEFECT
//ellipse diameter is the minor dimension	WITHOUT_CLASSIFICATION	0.9999680211542117	WITHOUT_CLASSIFICATION	3.197884578831506E-5	DEFECT
// draw the wafer	WITHOUT_CLASSIFICATION	0.9999697055007776	WITHOUT_CLASSIFICATION	3.0294499222410906E-5	DEFECT
// no data in the parent plot	WITHOUT_CLASSIFICATION	0.9999972092413658	WITHOUT_CLASSIFICATION	2.790758634228503E-6	DEFECT
// set up info collection...	WITHOUT_CLASSIFICATION	0.9999978589259849	WITHOUT_CLASSIFICATION	2.1410740151214234E-6	DEFECT
// set the width and height of non-shared axis of all sub-plots	WITHOUT_CLASSIFICATION	0.9999992721015734	WITHOUT_CLASSIFICATION	7.278984265508591E-7	DEFECT
// draw the shared axis	WITHOUT_CLASSIFICATION	0.9999820970844356	WITHOUT_CLASSIFICATION	1.79029155643222E-5	DEFECT
// draw all the charts	WITHOUT_CLASSIFICATION	0.9999910480075377	WITHOUT_CLASSIFICATION	8.951992462324892E-6	DEFECT
// adjust for insets...	WITHOUT_CLASSIFICATION	0.9999704095374553	WITHOUT_CLASSIFICATION	2.9590462544661704E-5	DEFECT
// if there is an existing dataset, remove the plot from the list of // change listeners...	WITHOUT_CLASSIFICATION	0.9999836879171221	WITHOUT_CLASSIFICATION	1.6312082877950876E-5	DEFECT
// set the new dataset, and register the chart as a change listener...	WITHOUT_CLASSIFICATION	0.9999995292521442	WITHOUT_CLASSIFICATION	4.7074785575637284E-7	DEFECT
// send a dataset change event to self...	WITHOUT_CLASSIFICATION	0.9999991583078277	WITHOUT_CLASSIFICATION	8.416921723326651E-7	DEFECT
// delegate 'info' and 'source' argument checks...	WITHOUT_CLASSIFICATION	0.9999998179262789	WITHOUT_CLASSIFICATION	1.8207372116052774E-7	DEFECT
// if the source point doesn't fall within a subplot, we do the // zoom on all subplots...	WITHOUT_CLASSIFICATION	0.9999910945093711	WITHOUT_CLASSIFICATION	8.905490628943164E-6	DEFECT
//set upperLeft point // x is minor	WITHOUT_CLASSIFICATION	0.9999488655377431	WITHOUT_CLASSIFICATION	5.1134462256883835E-5	DEFECT
//set upperLeft point // x is minor	WITHOUT_CLASSIFICATION	0.9999488655377431	WITHOUT_CLASSIFICATION	5.1134462256883835E-5	DEFECT
// calculate and draw the notch // horizontal orientation is considered notch right // vertical orientation is considered notch down	WITHOUT_CLASSIFICATION	0.999986810406219	WITHOUT_CLASSIFICATION	1.3189593780987524E-5	DEFECT
//this.axisOffset.trim(dataArea);	WITHOUT_CLASSIFICATION	0.9997498409186492	WITHOUT_CLASSIFICATION	2.501590813508334E-4	DEFECT
//// SECTION PAINT ////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999074934830038	WITHOUT_CLASSIFICATION	9.250651699613041E-5	DEFECT
// is there an override?	WITHOUT_CLASSIFICATION	0.9958327227072178	WITHOUT_CLASSIFICATION	0.004167277292782207	DEFECT
// if not, check if there is a paint defined for the specified key	WITHOUT_CLASSIFICATION	0.9999968796863771	WITHOUT_CLASSIFICATION	3.120313622903405E-6	DEFECT
// if not, check if there is a paint defined for the specified key	WITHOUT_CLASSIFICATION	0.9999968796863771	WITHOUT_CLASSIFICATION	3.120313622903405E-6	DEFECT
// nothing defined - do we autoPopulate?	WITHOUT_CLASSIFICATION	0.9999938355489127	WITHOUT_CLASSIFICATION	6.1644510873121335E-6	DEFECT
// nothing defined - do we autoPopulate?	WITHOUT_CLASSIFICATION	0.9999938355489127	WITHOUT_CLASSIFICATION	6.1644510873121335E-6	DEFECT
// null argument check delegated...	WITHOUT_CLASSIFICATION	0.9999989091995051	WITHOUT_CLASSIFICATION	1.0908004948890596E-6	DEFECT
// null argument check delegated...	WITHOUT_CLASSIFICATION	0.9999989091995051	WITHOUT_CLASSIFICATION	1.0908004948890596E-6	DEFECT
// null argument check delegated...	WITHOUT_CLASSIFICATION	0.9999989091995051	WITHOUT_CLASSIFICATION	1.0908004948890596E-6	DEFECT
//// SECTION OUTLINE PAINT ////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999279730460616	WITHOUT_CLASSIFICATION	7.202695393846757E-5	DEFECT
//// SECTION OUTLINE STROKE ///////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999072127234707	WITHOUT_CLASSIFICATION	9.278727652918894E-5	DEFECT
// if not, check if there is a stroke defined for the specified key	WITHOUT_CLASSIFICATION	0.9999977154299531	WITHOUT_CLASSIFICATION	2.284570047003783E-6	DEFECT
// adjust the plot area for interior spacing and labels...	WITHOUT_CLASSIFICATION	0.9999974973694417	WITHOUT_CLASSIFICATION	2.5026305582780103E-6	DEFECT
// make the link area a square if the pie chart is to be circular...	WITHOUT_CLASSIFICATION	0.9999958967346655	WITHOUT_CLASSIFICATION	4.10326533453889E-6	DEFECT
// work out the space required by the domain axis...	WITHOUT_CLASSIFICATION	0.9999988715573684	WITHOUT_CLASSIFICATION	1.1284426314680946E-6	DEFECT
// work out the maximum height or width of the non-shared axes...	WITHOUT_CLASSIFICATION	0.9999979742762337	WITHOUT_CLASSIFICATION	2.025723766240262E-6	DEFECT
// calculate sub-plot area	WITHOUT_CLASSIFICATION	0.9999924657120689	WITHOUT_CLASSIFICATION	7.534287931144246E-6	DEFECT
// adjust the drawing area for plot insets (if any)...	WITHOUT_CLASSIFICATION	0.9999967097683914	WITHOUT_CLASSIFICATION	3.2902316085089602E-6	DEFECT
// the pie area defines the circle/ellipse for regular pie sections. // it is defined by shrinking the explodeArea by the explodeMargin // factor.	WITHOUT_CLASSIFICATION	0.9999905895490099	WITHOUT_CLASSIFICATION	9.410450990189737E-6	DEFECT
// if there is an existing dataset, remove the plot from the list of // change listeners...	WITHOUT_CLASSIFICATION	0.9999836879171221	WITHOUT_CLASSIFICATION	1.6312082877950876E-5	DEFECT
// plot the data (unless the dataset is null)...	WITHOUT_CLASSIFICATION	0.9999924946447536	WITHOUT_CLASSIFICATION	7.505355246381575E-6	DEFECT
// no data in the parent plot	WITHOUT_CLASSIFICATION	0.9999972092413658	WITHOUT_CLASSIFICATION	2.790758634228503E-6	DEFECT
// update the linking line target for later // add an entity for the pie section	WITHOUT_CLASSIFICATION	0.999996594515679	WITHOUT_CLASSIFICATION	3.4054843209423073E-6	DEFECT
// work out the mid angle (0 - 90 and 270 - 360) = right, // otherwise left	WITHOUT_CLASSIFICATION	0.9999994822465575	WITHOUT_CLASSIFICATION	5.177534425021285E-7	DEFECT
// classify the keys according to which side the label will appear...	WITHOUT_CLASSIFICATION	0.999997970319245	WITHOUT_CLASSIFICATION	2.0296807549519863E-6	DEFECT
// calculate the max label width from the plot dimensions, because // a circular pie can leave a lot more room for labels...	WITHOUT_CLASSIFICATION	0.9999992968344583	WITHOUT_CLASSIFICATION	7.031655416889001E-7	DEFECT
// draw the labels...	WITHOUT_CLASSIFICATION	0.9999905046719794	WITHOUT_CLASSIFICATION	9.49532802069709E-6	DEFECT
// draw the right labels...	WITHOUT_CLASSIFICATION	0.9999934515241389	WITHOUT_CLASSIFICATION	6.548475861028741E-6	DEFECT
//hh * getInteriorGap();	WITHOUT_CLASSIFICATION	0.9999850590997714	WITHOUT_CLASSIFICATION	1.494090022864763E-5	DEFECT
// line not visible	WITHOUT_CLASSIFICATION	0.9999561983747355	WITHOUT_CLASSIFICATION	4.380162526454681E-5	DEFECT
// for a RadialGradientPaint we adjust the center and radius to match // the current pie segment...	WITHOUT_CLASSIFICATION	0.9999994877787318	WITHOUT_CLASSIFICATION	5.12221268098015E-7	DEFECT
// can't find any difference...	WITHOUT_CLASSIFICATION	0.9999877611140252	WITHOUT_CLASSIFICATION	1.2238885974797821E-5	DEFECT
// DEPRECATED FIELDS AND METHODS...	WITHOUT_CLASSIFICATION	0.9995468966982309	WITHOUT_CLASSIFICATION	4.531033017690317E-4	DEFECT
// no range axis // no renderer	WITHOUT_CLASSIFICATION	0.9999641076336102	WITHOUT_CLASSIFICATION	3.58923663897678E-5	DEFECT
// backgroundImage	WITHOUT_CLASSIFICATION	0.9999955288188996	WITHOUT_CLASSIFICATION	4.471181100460058E-6	DEFECT
// set the width and height of non-shared axis of all sub-plots	WITHOUT_CLASSIFICATION	0.9999992721015734	WITHOUT_CLASSIFICATION	7.278984265508591E-7	DEFECT
// draw the shared axis	WITHOUT_CLASSIFICATION	0.9999820970844356	WITHOUT_CLASSIFICATION	1.79029155643222E-5	DEFECT
// if there is an existing dataset, remove the plot from the list of // change listeners...	WITHOUT_CLASSIFICATION	0.9999836879171221	WITHOUT_CLASSIFICATION	1.6312082877950876E-5	DEFECT
// set the new dataset, and register the chart as a change listener...	WITHOUT_CLASSIFICATION	0.9999995292521442	WITHOUT_CLASSIFICATION	4.7074785575637284E-7	DEFECT
// delegate 'info' and 'source' argument checks...	WITHOUT_CLASSIFICATION	0.9999998179262789	WITHOUT_CLASSIFICATION	1.8207372116052774E-7	DEFECT
// if the source point doesn't fall within a subplot, we do the // zoom on all subplots...	WITHOUT_CLASSIFICATION	0.9999910945093711	WITHOUT_CLASSIFICATION	8.905490628943164E-6	DEFECT
// draw all the subplots	WITHOUT_CLASSIFICATION	0.9999950415666085	WITHOUT_CLASSIFICATION	4.958433391586516E-6	DEFECT
// send a dataset change event to self to trigger plot change event	WITHOUT_CLASSIFICATION	0.9999997757909972	WITHOUT_CLASSIFICATION	2.2420900274136924E-7	DEFECT
// adjust the drawing area for the plot insets (if any)...	WITHOUT_CLASSIFICATION	0.9999969970554844	WITHOUT_CLASSIFICATION	3.0029445155883104E-6	DEFECT
// delegate 'state' and 'source' argument checks...	WITHOUT_CLASSIFICATION	0.9999997051017033	WITHOUT_CLASSIFICATION	2.948982967245579E-7	DEFECT
// after setting up all the subplots, the shared domain axis may need // reconfiguring	WITHOUT_CLASSIFICATION	0.9999988266995266	WITHOUT_CLASSIFICATION	1.1733004734534758E-6	DEFECT
// 20% // 20% // 20%	WITHOUT_CLASSIFICATION	0.9999032773843772	WITHOUT_CLASSIFICATION	9.672261562285177E-5	DEFECT
// create the bounds for the inner arc	WITHOUT_CLASSIFICATION	0.9999965689261161	WITHOUT_CLASSIFICATION	3.4310738838229745E-6	DEFECT
// calculate inner arc in reverse direction, for later // GeneralPath construction	WITHOUT_CLASSIFICATION	0.9999989008775937	WITHOUT_CLASSIFICATION	1.099122406334028E-6	DEFECT
// add an entity for the pie section	WITHOUT_CLASSIFICATION	0.9999964535979599	WITHOUT_CLASSIFICATION	3.5464020400897214E-6	DEFECT
// check that there is some data to display...	WITHOUT_CLASSIFICATION	0.9999972723190779	WITHOUT_CLASSIFICATION	2.727680922022277E-6	DEFECT
// the columns variable is always >= rows	WITHOUT_CLASSIFICATION	0.9999530533097358	WITHOUT_CLASSIFICATION	4.694669026408261E-5	DEFECT
// swap rows and columns to match plotArea shape	WITHOUT_CLASSIFICATION	0.9999957601055705	WITHOUT_CLASSIFICATION	4.2398944295843645E-6	DEFECT
// update the section colors to match the global colors...	WITHOUT_CLASSIFICATION	0.9999992436974922	WITHOUT_CLASSIFICATION	7.563025078168073E-7	DEFECT
// pre-fetch the colors for each key...this is because the subplots // may not display every key, but we need the coloring to be // consistent...	WITHOUT_CLASSIFICATION	0.9999964418238243	WITHOUT_CLASSIFICATION	3.558176175675268E-6	DEFECT
// column keys provide potential keys for individual pies	WITHOUT_CLASSIFICATION	0.9999997584572866	WITHOUT_CLASSIFICATION	2.4154271327864496E-7	DEFECT
// row keys provide potential keys for individual pies	WITHOUT_CLASSIFICATION	0.9999996878753162	WITHOUT_CLASSIFICATION	3.121246837277676E-7	DEFECT
/* =========================================================== * JFreeChart : a free chart library for the Java(tm) platform * =========================================================== * * (C) Copyright 2000-2014, by Object Refinery Limited and Contributors. * * Project Info:  http://www.jfree.org/jfreechart/index.html * * This library is free software; you can redistribute it and/or modify it * under the terms of the GNU Lesser General Public License as published by * the Free Software Foundation; either version 2.1 of the License, or * (at your option) any later version. * * This library is distributed in the hope that it will be useful, but * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public * License for more details. * * You should have received a copy of the GNU Lesser General Public * License along with this library; if not, write to the Free Software * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, * USA. * * [Oracle and Java are registered trademarks of Oracle and/or its affiliates. * Other names may be trademarks of their respective owners.] * * ----------------- * CategoryPlot.java * ----------------- * (C) Copyright 2000-2014, by Object Refinery Limited and Contributors. * * Original Author:  David Gilbert (for Object Refinery Limited); * Contributor(s):   Jeremy Bowman; *                   Arnaud Lelievre; *                   Richard West, Advanced Micro Devices, Inc.; *                   Ulrich Voigt - patch 2686040; *                   Peter Kolb - patches 2603321 and 2809117; * * Changes * ------- * 21-Jun-2001 : Removed redundant JFreeChart parameter from constructors (DG); * 21-Aug-2001 : Added standard header. Fixed DOS encoding problem (DG); * 18-Sep-2001 : Updated header (DG); * 15-Oct-2001 : Data source classes moved to com.jrefinery.data.* (DG); * 22-Oct-2001 : Renamed DataSource.java --> Dataset.java etc. (DG); * 23-Oct-2001 : Changed intro and trail gaps on bar plots to use percentage of *               available space rather than a fixed number of units (DG); * 12-Dec-2001 : Changed constructors to protected (DG); * 13-Dec-2001 : Added tooltips (DG); * 16-Jan-2002 : Increased maximum intro and trail gap percents, plus added *               some argument checking code.  Thanks to Taoufik Romdhane for *               suggesting this (DG); * 05-Feb-2002 : Added accessor methods for the tooltip generator, incorporated *               alpha-transparency for Plot and subclasses (DG); * 06-Mar-2002 : Updated import statements (DG); * 14-Mar-2002 : Renamed BarPlot.java --> CategoryPlot.java, and changed code *               to use the CategoryItemRenderer interface (DG); * 22-Mar-2002 : Dropped the getCategories() method (DG); * 23-Apr-2002 : Moved the dataset from the JFreeChart class to the Plot *               class (DG); * 29-Apr-2002 : New methods to support printing values at the end of bars, *               contributed by Jeremy Bowman (DG); * 11-May-2002 : New methods for label visibility and overlaid plot support, *               contributed by Jeremy Bowman (DG); * 06-Jun-2002 : Removed the tooltip generator, this is now stored with the *               renderer.  Moved constants into the CategoryPlotConstants *               interface.  Updated Javadoc comments (DG); * 10-Jun-2002 : Overridden datasetChanged() method to update the upper and *               lower bound on the range axis (if necessary), updated *               Javadocs (DG); * 25-Jun-2002 : Removed redundant imports (DG); * 20-Aug-2002 : Changed the constructor for Marker (DG); * 28-Aug-2002 : Added listener notification to setDomainAxis() and *               setRangeAxis() (DG); * 23-Sep-2002 : Added getLegendItems() method and fixed errors reported by *               Checkstyle (DG); * 28-Oct-2002 : Changes to the CategoryDataset interface (DG); * 05-Nov-2002 : Base dataset is now TableDataset not CategoryDataset (DG); * 07-Nov-2002 : Renamed labelXXX as valueLabelXXX (DG); * 18-Nov-2002 : Added grid settings for both domain and range axis (previously *               these were set in the axes) (DG); * 19-Nov-2002 : Added axis location parameters to constructor (DG); * 17-Jan-2003 : Moved to com.jrefinery.chart.plot package (DG); * 14-Feb-2003 : Fixed bug in auto-range calculation for secondary axis (DG); * 26-Mar-2003 : Implemented Serializable (DG); * 02-May-2003 : Moved render() method up from subclasses. Added secondary *               range markers. Added an attribute to control the dataset *               rendering order.  Added a drawAnnotations() method.  Changed *               the axis location from an int to an AxisLocation (DG); * 07-May-2003 : Merged HorizontalCategoryPlot and VerticalCategoryPlot into *               this class (DG); * 02-Jun-2003 : Removed check for range axis compatibility (DG); * 04-Jul-2003 : Added a domain gridline position attribute (DG); * 21-Jul-2003 : Moved DrawingSupplier to Plot superclass (DG); * 19-Aug-2003 : Added equals() method and implemented Cloneable (DG); * 01-Sep-2003 : Fixed bug 797466 (no change event when secondary dataset *               changes) (DG); * 02-Sep-2003 : Fixed bug 795209 (wrong dataset checked in render2 method) and *               790407 (initialise method) (DG); * 08-Sep-2003 : Added internationalization via use of properties *               resourceBundle (RFE 690236) (AL); * 08-Sep-2003 : Fixed bug (wrong secondary range axis being used).  Changed *               ValueAxis API (DG); * 10-Sep-2003 : Fixed bug in setRangeAxis() method (DG); * 15-Sep-2003 : Fixed two bugs in serialization, implemented *               PublicCloneable (DG); * 23-Oct-2003 : Added event notification for changes to renderer (DG); * 26-Nov-2003 : Fixed bug (849645) in clearRangeMarkers() method (DG); * 03-Dec-2003 : Modified draw method to accept anchor (DG); * 21-Jan-2004 : Update for renamed method in ValueAxis (DG); * 10-Mar-2004 : Fixed bug in axis range calculation when secondary renderer is *               stacked (DG); * 12-May-2004 : Added fixed legend items (DG); * 19-May-2004 : Added check for null legend item from renderer (DG); * 02-Jun-2004 : Updated the DatasetRenderingOrder class (DG); * 05-Nov-2004 : Renamed getDatasetsMappedToRangeAxis() *               --> datasetsMappedToRangeAxis(), and ensured that returned *               list doesn't contain null datasets (DG); * 12-Nov-2004 : Implemented new Zoomable interface (DG); * 07-Jan-2005 : Renamed getRangeExtent() --> findRangeBounds() in *               CategoryItemRenderer (DG); * 04-May-2005 : Fixed serialization of range markers (DG); * 05-May-2005 : Updated draw() method parameters (DG); * 20-May-2005 : Added setDomainAxes() and setRangeAxes() methods, as per *               RFE 1183100 (DG); * 01-Jun-2005 : Upon deserialization, register plot as a listener with its *               axes, dataset(s) and renderer(s) - see patch 1209475 (DG); * 02-Jun-2005 : Added support for domain markers (DG); * 06-Jun-2005 : Fixed equals() method for use with GradientPaint (DG); * 09-Jun-2005 : Added setRenderers(), as per RFE 1183100 (DG); * 16-Jun-2005 : Added getDomainAxisCount() and getRangeAxisCount() methods, to *               match XYPlot (see RFE 1220495) (DG); * ------------- JFREECHART 1.0.x --------------------------------------------- * 11-Jan-2006 : Added configureRangeAxes() to rendererChanged(), since the *               renderer might influence the axis range (DG); * 27-Jan-2006 : Added various null argument checks (DG); * 18-Aug-2006 : Added getDatasetCount() method, plus a fix for bug drawing *               category labels, thanks to Adriaan Joubert (1277726) (DG); * 05-Sep-2006 : Added MarkerChangeEvent support (DG); * 30-Oct-2006 : Added getDomainAxisIndex(), datasetsMappedToDomainAxis() and *               getCategoriesForAxis() methods (DG); * 22-Nov-2006 : Fire PlotChangeEvent from setColumnRenderingOrder() and *               setRowRenderingOrder() (DG); * 29-Nov-2006 : Fix for bug 1605207 (IntervalMarker exceeds bounds of data *               area) (DG); * 26-Feb-2007 : Fix for bug 1669218 (setDomainAxisLocation() notify argument *               ignored) (DG); * 13-Mar-2007 : Added null argument checks for setRangeCrosshairPaint() and *               setRangeCrosshairStroke(), fixed clipping for *               annotations (DG); * 07-Jun-2007 : Override drawBackground() for new GradientPaint handling (DG); * 10-Jul-2007 : Added getRangeAxisIndex(ValueAxis) method (DG); * 24-Sep-2007 : Implemented new zoom methods (DG); * 25-Oct-2007 : Added some argument checks (DG); * 05-Nov-2007 : Applied patch 1823697, by Richard West, for removal of domain *               and range markers (DG); * 14-Nov-2007 : Added missing event notifications (DG); * 25-Mar-2008 : Added new methods with optional notification - see patch *               1913751 (DG); * 07-Apr-2008 : Fixed NPE in removeDomainMarker() and *               removeRangeMarker() (DG); * 23-Apr-2008 : Fixed equals() and clone() methods (DG); * 26-Jun-2008 : Fixed crosshair support (DG); * 10-Jul-2008 : Fixed outline visibility for 3D renderers (DG); * 12-Aug-2008 : Added rendererCount() method (DG); * 25-Nov-2008 : Added facility to map datasets to multiples axes (DG); * 15-Dec-2008 : Cleaned up grid drawing methods (DG); * 18-Dec-2008 : Use ResourceBundleWrapper - see patch 1607918 by *               Jess Thrysoee (DG); * 21-Jan-2009 : Added rangeMinorGridlinesVisible flag (DG); * 18-Mar-2009 : Modified anchored zoom behaviour (DG); * 19-Mar-2009 : Implemented Pannable interface - see patch 2686040 (DG); * 19-Mar-2009 : Added entity support - see patch 2603321 by Peter Kolb (DG); * 24-Jun-2009 : Implemented AnnotationChangeListener (see patch 2809117 by *               PK) (DG); * 06-Jul-2009 : Fix for cloning of renderers - see bug 2817504 (DG) * 10-Jul-2009 : Added optional drop shadow generator (DG); * 27-Sep-2011 : Fixed annotation import (DG); * 18-Oct-2011 : Fixed tooltip offset with shadow generator (DG); * 20-Nov-2011 : Initialise shadow generator as null (DG); * 02-Jul-2013 : Use ParamChecks (DG); * 12-Sep-2013 : Check for KEY_SUPPRESS_SHADOW_GENERATION rendering hint (DG); * 10-Mar-2014 : Updated Javadocs for issue #1123 (DG); * 09-Apr-2014 : Remove use of ObjectList (DG); *  */	WITHOUT_CLASSIFICATION	0.9999779461697176	WITHOUT_CLASSIFICATION	2.205383028240662E-5	DEFECT
// allocate storage for dataset, axes and renderers	WITHOUT_CLASSIFICATION	0.9999987819459369	WITHOUT_CLASSIFICATION	1.218054063043846E-6	DEFECT
// delegate...	WITHOUT_CLASSIFICATION	0.9999916342438239	WITHOUT_CLASSIFICATION	8.36575617616987E-6	DEFECT
// delegate...	WITHOUT_CLASSIFICATION	0.9999916342438239	WITHOUT_CLASSIFICATION	8.36575617616987E-6	DEFECT
// calculate the data area...	WITHOUT_CLASSIFICATION	0.9999911309074593	WITHOUT_CLASSIFICATION	8.869092540741332E-6	DEFECT
// send a dataset change event to self...	WITHOUT_CLASSIFICATION	0.9999991583078277	WITHOUT_CLASSIFICATION	8.416921723326651E-7	DEFECT
// if the plot area is too small, just return...	WITHOUT_CLASSIFICATION	0.9999763953528218	WITHOUT_CLASSIFICATION	2.3604647178241664E-5	DEFECT
// record the plot area...	WITHOUT_CLASSIFICATION	0.9999899747588572	WITHOUT_CLASSIFICATION	1.0025241142769562E-5	DEFECT
// adjust the drawing area for the plot insets (if any)...	WITHOUT_CLASSIFICATION	0.9999969970554844	WITHOUT_CLASSIFICATION	3.0029445155883104E-6	DEFECT
// set the anchor value for the range axis...	WITHOUT_CLASSIFICATION	0.9999966386728804	WITHOUT_CLASSIFICATION	3.361327119534644E-6	DEFECT
// OK	WITHOUT_CLASSIFICATION	0.9998185702052343	WITHOUT_CLASSIFICATION	1.8142979476559265E-4	DEFECT
// fake a dataset change event to update axes...	WITHOUT_CLASSIFICATION	0.9999986194618797	WITHOUT_CLASSIFICATION	1.3805381203197314E-6	DEFECT
// fake a dataset change event to update axes...	WITHOUT_CLASSIFICATION	0.9999986194618797	WITHOUT_CLASSIFICATION	1.3805381203197314E-6	DEFECT
// the first axis in the list is used for data <--> Java2D	WITHOUT_CLASSIFICATION	0.9999983186754248	WITHOUT_CLASSIFICATION	1.681324575244988E-6	DEFECT
// the first axis in the list is used for data <--> Java2D	WITHOUT_CLASSIFICATION	0.9999983186754248	WITHOUT_CLASSIFICATION	1.681324575244988E-6	DEFECT
// get the legend items for the datasets...	WITHOUT_CLASSIFICATION	0.9999987143046916	WITHOUT_CLASSIFICATION	1.2856953084390275E-6	DEFECT
// this should never happen with the existing code, but throw // an exception in case future changes make it possible...	WITHOUT_CLASSIFICATION	0.999844002387581	WITHOUT_CLASSIFICATION	1.5599761241905444E-4	DEFECT
// should be equal...	WITHOUT_CLASSIFICATION	0.9999697026452052	WITHOUT_CLASSIFICATION	3.029735479477013E-5	DEFECT
// reserve some space for the domain axis...	WITHOUT_CLASSIFICATION	0.9999957585882574	WITHOUT_CLASSIFICATION	4.241411742679424E-6	DEFECT
// reserve space for the primary domain axis...	WITHOUT_CLASSIFICATION	0.9999981405917486	WITHOUT_CLASSIFICATION	1.8594082514384932E-6	DEFECT
// reserve space for any domain axes...	WITHOUT_CLASSIFICATION	0.9999967604454765	WITHOUT_CLASSIFICATION	3.2395545235460205E-6	DEFECT
// reserve some space for the range axis...	WITHOUT_CLASSIFICATION	0.9999873534765127	WITHOUT_CLASSIFICATION	1.264652348731672E-5	DEFECT
// reserve space for the range axes (if any)...	WITHOUT_CLASSIFICATION	0.9999966488691084	WITHOUT_CLASSIFICATION	3.351130891640099E-6	DEFECT
// if the incoming state is null, no information will be passed // back to the caller - but we create a temporary state to record // the plot area, since that is used later by the axes	WITHOUT_CLASSIFICATION	0.9999751438080424	WITHOUT_CLASSIFICATION	2.4856191957659817E-5	DEFECT
// if there is a renderer, it draws the background, otherwise use the // default background...	WITHOUT_CLASSIFICATION	0.9999916348155943	WITHOUT_CLASSIFICATION	8.365184405677611E-6	DEFECT
// the anchor point is typically the point where the mouse last // clicked - the crosshairs will be driven off this point...	WITHOUT_CLASSIFICATION	0.999969574585006	WITHOUT_CLASSIFICATION	3.04254149939126E-5	DEFECT
// specify the anchor X and Y coordinates in Java2D space, for the // cases where these are not updated during rendering (i.e. no lock // on data)	WITHOUT_CLASSIFICATION	0.9999981703368831	WITHOUT_CLASSIFICATION	1.8296631168167495E-6	DEFECT
// don't let anyone draw outside the data area	WITHOUT_CLASSIFICATION	0.9999958594888131	WITHOUT_CLASSIFICATION	4.140511186970508E-6	DEFECT
// draw the markers...	WITHOUT_CLASSIFICATION	0.9999768350312653	WITHOUT_CLASSIFICATION	2.3164968734672968E-5	DEFECT
// now render data items...	WITHOUT_CLASSIFICATION	0.9999846380740856	WITHOUT_CLASSIFICATION	1.536192591445609E-5	DEFECT
// set up the alpha-transparency...	WITHOUT_CLASSIFICATION	0.9999987342403884	WITHOUT_CLASSIFICATION	1.2657596115430643E-6	DEFECT
// if the flag is being set to true, there may be queued up changes...	WITHOUT_CLASSIFICATION	0.9999989249246247	WITHOUT_CLASSIFICATION	1.0750753752778414E-6	DEFECT
// an empty dataset should return a null range	WITHOUT_CLASSIFICATION	0.9999904497289747	WITHOUT_CLASSIFICATION	9.550271025258341E-6	DEFECT
// draw the foreground markers...	WITHOUT_CLASSIFICATION	0.9999970814165954	WITHOUT_CLASSIFICATION	2.9185834044946188E-6	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999792375281624	WITHOUT_CLASSIFICATION	2.0762471837648883E-5	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999792375281624	WITHOUT_CLASSIFICATION	2.0762471837648883E-5	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999792375281624	WITHOUT_CLASSIFICATION	2.0762471837648883E-5	DEFECT
// draw the annotations (if any)...	WITHOUT_CLASSIFICATION	0.9999887852699583	WITHOUT_CLASSIFICATION	1.121473004172292E-5	DEFECT
// draw domain crosshair if required...	WITHOUT_CLASSIFICATION	0.9999988260956478	WITHOUT_CLASSIFICATION	1.173904352144605E-6	DEFECT
// draw range crosshair if required...	WITHOUT_CLASSIFICATION	0.9999986587999535	WITHOUT_CLASSIFICATION	1.3412000465252302E-6	DEFECT
// draw an outline around the plot area...	WITHOUT_CLASSIFICATION	0.9999905140000426	WITHOUT_CLASSIFICATION	9.485999957369332E-6	DEFECT
// add domain axes to lists...	WITHOUT_CLASSIFICATION	0.9999742635575294	WITHOUT_CLASSIFICATION	2.5736442470529873E-5	DEFECT
// add range axes to lists...	WITHOUT_CLASSIFICATION	0.9999722047175159	WITHOUT_CLASSIFICATION	2.7795282484090783E-5	DEFECT
// draw the top axes	WITHOUT_CLASSIFICATION	0.9999951489010049	WITHOUT_CLASSIFICATION	4.851098995178E-6	DEFECT
// draw the bottom axes	WITHOUT_CLASSIFICATION	0.9999723733041282	WITHOUT_CLASSIFICATION	2.7626695871851288E-5	DEFECT
// draw the left axes	WITHOUT_CLASSIFICATION	0.9999872629396953	WITHOUT_CLASSIFICATION	1.2737060304627903E-5	DEFECT
// draw the right axes	WITHOUT_CLASSIFICATION	0.9999820247496272	WITHOUT_CLASSIFICATION	1.79752503727754E-5	DEFECT
// draw the range grid lines, if any...	WITHOUT_CLASSIFICATION	0.9999964335106398	WITHOUT_CLASSIFICATION	3.5664893602232406E-6	DEFECT
// no renderer, no gridlines...	WITHOUT_CLASSIFICATION	0.9999950834211584	WITHOUT_CLASSIFICATION	4.916578841638264E-6	DEFECT
// iterate through the datasets that map to the axis and get the union // of the ranges.	WITHOUT_CLASSIFICATION	0.9999421754467853	WITHOUT_CLASSIFICATION	5.782455321470942E-5	DEFECT
// add the unique categories from this dataset	WITHOUT_CLASSIFICATION	0.9999943595116555	WITHOUT_CLASSIFICATION	5.640488344498996E-6	DEFECT
// do nothing, because the plot is not pannable along the domain axes	WITHOUT_CLASSIFICATION	0.9999939415297996	WITHOUT_CLASSIFICATION	6.058470200400562E-6	DEFECT
// can't zoom domain axis	WITHOUT_CLASSIFICATION	0.9999584621563434	WITHOUT_CLASSIFICATION	4.1537843656630896E-5	DEFECT
// delegate to other method	WITHOUT_CLASSIFICATION	0.999996430137069	WITHOUT_CLASSIFICATION	3.5698629310581473E-6	DEFECT
// perform the zoom on each range axis	WITHOUT_CLASSIFICATION	0.9999569852806452	WITHOUT_CLASSIFICATION	4.301471935465096E-5	DEFECT
// get the relevant source coordinate given the plot orientation	WITHOUT_CLASSIFICATION	0.9999989681835136	WITHOUT_CLASSIFICATION	1.0318164864022832E-6	DEFECT
// AxisLocation is immutable, so we can just copy the maps	WITHOUT_CLASSIFICATION	0.9999851631617184	WITHOUT_CLASSIFICATION	1.4836838281665325E-5	DEFECT
// not currently serialized	WITHOUT_CLASSIFICATION	0.9999933354206506	WITHOUT_CLASSIFICATION	6.664579349421894E-6	DEFECT
// some subclasses override this method completely, so don't put // anything here that *must* be done	WITHOUT_CLASSIFICATION	0.9999737850280044	WITHOUT_CLASSIFICATION	2.6214971995688713E-5	DEFECT
// provides a 'no action' default	WITHOUT_CLASSIFICATION	0.9999993174977921	WITHOUT_CLASSIFICATION	6.825022079300554E-7	DEFECT
// an empty dataset should return a null range	WITHOUT_CLASSIFICATION	0.9999904497289747	WITHOUT_CLASSIFICATION	9.550271025258341E-6	DEFECT
// send a dataset change event to self...	WITHOUT_CLASSIFICATION	0.9999991583078277	WITHOUT_CLASSIFICATION	8.416921723326651E-7	DEFECT
// if the plot area is too small, just return...	WITHOUT_CLASSIFICATION	0.9999763953528218	WITHOUT_CLASSIFICATION	2.3604647178241664E-5	DEFECT
// record the plot area...	WITHOUT_CLASSIFICATION	0.9999899747588572	WITHOUT_CLASSIFICATION	1.0025241142769562E-5	DEFECT
// OK	WITHOUT_CLASSIFICATION	0.9998185702052343	WITHOUT_CLASSIFICATION	1.8142979476559265E-4	DEFECT
// adjust the drawing area for the plot insets (if any)...	WITHOUT_CLASSIFICATION	0.9999969970554844	WITHOUT_CLASSIFICATION	3.0029445155883104E-6	DEFECT
// delegate...	WITHOUT_CLASSIFICATION	0.9999916342438239	WITHOUT_CLASSIFICATION	8.36575617616987E-6	DEFECT
// delegate...	WITHOUT_CLASSIFICATION	0.9999916342438239	WITHOUT_CLASSIFICATION	8.36575617616987E-6	DEFECT
// try the parent plot	WITHOUT_CLASSIFICATION	0.9999950820210214	WITHOUT_CLASSIFICATION	4.9179789786265155E-6	DEFECT
// fake a dataset change event to update axes...	WITHOUT_CLASSIFICATION	0.9999986194618797	WITHOUT_CLASSIFICATION	1.3805381203197314E-6	DEFECT
// axisIndices can be: // 1.  null; // 2.  non-empty, containing only Integer objects that are unique.	WITHOUT_CLASSIFICATION	0.9999718871322195	WITHOUT_CLASSIFICATION	2.8112867780459257E-5	DEFECT
// the first axis in the list is used for data <--> Java2D	WITHOUT_CLASSIFICATION	0.9999983186754248	WITHOUT_CLASSIFICATION	1.681324575244988E-6	DEFECT
// no renderer, no gridlines...	WITHOUT_CLASSIFICATION	0.9999950834211584	WITHOUT_CLASSIFICATION	4.916578841638264E-6	DEFECT
// iterate through the datasets that map to the axis and get the union // of the ranges.	WITHOUT_CLASSIFICATION	0.9999421754467853	WITHOUT_CLASSIFICATION	5.782455321470942E-5	DEFECT
// create the dataset...	WITHOUT_CLASSIFICATION	0.9999954381321288	WITHOUT_CLASSIFICATION	4.561867871226311E-6	DEFECT
// the above should cover all the options...	WITHOUT_CLASSIFICATION	0.9999974694219581	WITHOUT_CLASSIFICATION	2.530578041902902E-6	DEFECT
// define the default locations for up to 8 axes...	WITHOUT_CLASSIFICATION	0.9999996460345026	WITHOUT_CLASSIFICATION	3.539654972505312E-7	DEFECT
// normalize angle	WITHOUT_CLASSIFICATION	0.999962796730059	WITHOUT_CLASSIFICATION	3.7203269941035E-5	DEFECT
// draw the plot background and axes...	WITHOUT_CLASSIFICATION	0.9999989000397356	WITHOUT_CLASSIFICATION	1.0999602644108213E-6	DEFECT
// now for each dataset, get the renderer and the appropriate axis // and render the dataset...	WITHOUT_CLASSIFICATION	0.9999990749634928	WITHOUT_CLASSIFICATION	9.250365071497981E-7	DEFECT
// now get the data and plot it (the visual representation will depend // on the m_Renderer that has been set)...	WITHOUT_CLASSIFICATION	0.999991348535827	WITHOUT_CLASSIFICATION	8.651464172983057E-6	DEFECT
// draw the domain grid lines, if any...	WITHOUT_CLASSIFICATION	0.9999982639203009	WITHOUT_CLASSIFICATION	1.736079699074456E-6	DEFECT
// draw the radius grid lines, if any...	WITHOUT_CLASSIFICATION	0.9999975768358781	WITHOUT_CLASSIFICATION	2.423164121939875E-6	DEFECT
// the datasets are not cloned, but listeners need to be added...	WITHOUT_CLASSIFICATION	0.9999154736870104	WITHOUT_CLASSIFICATION	8.452631298962816E-5	DEFECT
// square	WITHOUT_CLASSIFICATION	0.9999827287383062	WITHOUT_CLASSIFICATION	1.7271261693812607E-5	DEFECT
// circle	WITHOUT_CLASSIFICATION	0.9999881556142352	WITHOUT_CLASSIFICATION	1.1844385764859093E-5	DEFECT
// up-pointing triangle	WITHOUT_CLASSIFICATION	0.9999968631322163	WITHOUT_CLASSIFICATION	3.1368677837544884E-6	DEFECT
// diamond	WITHOUT_CLASSIFICATION	0.9999866693181667	WITHOUT_CLASSIFICATION	1.3330681833342024E-5	DEFECT
// horizontal rectangle	WITHOUT_CLASSIFICATION	0.9999922660451371	WITHOUT_CLASSIFICATION	7.733954862789771E-6	DEFECT
// down-pointing triangle	WITHOUT_CLASSIFICATION	0.9999971223373825	WITHOUT_CLASSIFICATION	2.877662617476119E-6	DEFECT
// horizontal ellipse	WITHOUT_CLASSIFICATION	0.9999894979054427	WITHOUT_CLASSIFICATION	1.0502094557292052E-5	DEFECT
// right-pointing triangle	WITHOUT_CLASSIFICATION	0.9999971209565957	WITHOUT_CLASSIFICATION	2.879043404372415E-6	DEFECT
// vertical rectangle	WITHOUT_CLASSIFICATION	0.9999927673025086	WITHOUT_CLASSIFICATION	7.232697491283634E-6	DEFECT
// left-pointing triangle	WITHOUT_CLASSIFICATION	0.9999958772301317	WITHOUT_CLASSIFICATION	4.1227698682517646E-6	DEFECT
// an empty dataset should return a null range	WITHOUT_CLASSIFICATION	0.9999904497289747	WITHOUT_CLASSIFICATION	9.550271025258341E-6	DEFECT
// adjust for insets...	WITHOUT_CLASSIFICATION	0.9999704095374553	WITHOUT_CLASSIFICATION	2.9590462544661704E-5	DEFECT
// adjust the plot area by the interior spacing value	WITHOUT_CLASSIFICATION	0.999994226332924	WITHOUT_CLASSIFICATION	5.7736670759723536E-6	DEFECT
// set the new dataset, and register the chart as a change listener...	WITHOUT_CLASSIFICATION	0.9999995292521442	WITHOUT_CLASSIFICATION	4.7074785575637284E-7	DEFECT
// send a dataset change event to self to trigger plot change event	WITHOUT_CLASSIFICATION	0.9999997757909972	WITHOUT_CLASSIFICATION	2.2420900274136924E-7	DEFECT
// return the override, if there is one...	WITHOUT_CLASSIFICATION	0.9999955158432421	WITHOUT_CLASSIFICATION	4.4841567579607394E-6	DEFECT
//// SERIES PAINT /////////////////////////	WITHOUT_CLASSIFICATION	0.9998900092052813	WITHOUT_CLASSIFICATION	1.0999079471873728E-4	DEFECT
// otherwise look up the paint list	WITHOUT_CLASSIFICATION	0.9999991944582326	WITHOUT_CLASSIFICATION	8.05541767470919E-7	DEFECT
// return the override, if there is one...	WITHOUT_CLASSIFICATION	0.9999955158432421	WITHOUT_CLASSIFICATION	4.4841567579607394E-6	DEFECT
// return the override, if there is one...	WITHOUT_CLASSIFICATION	0.9999955158432421	WITHOUT_CLASSIFICATION	4.4841567579607394E-6	DEFECT
//// SERIES OUTLINE PAINT ////////////////////////////	WITHOUT_CLASSIFICATION	0.9998940841533149	WITHOUT_CLASSIFICATION	1.0591584668503588E-4	DEFECT
// otherwise look up the paint list	WITHOUT_CLASSIFICATION	0.9999991944582326	WITHOUT_CLASSIFICATION	8.05541767470919E-7	DEFECT
// otherwise look up the paint list	WITHOUT_CLASSIFICATION	0.9999991944582326	WITHOUT_CLASSIFICATION	8.05541767470919E-7	DEFECT
// an empty dataset should return a null range	WITHOUT_CLASSIFICATION	0.9999904497289747	WITHOUT_CLASSIFICATION	9.550271025258341E-6	DEFECT
// ensure we have a maximum value to use on the axes	WITHOUT_CLASSIFICATION	0.9999873027191398	WITHOUT_CLASSIFICATION	1.2697280860137783E-5	DEFECT
//// SERIES OUTLINE STROKE /////////////////////	WITHOUT_CLASSIFICATION	0.9998340865849787	WITHOUT_CLASSIFICATION	1.659134150212573E-4	DEFECT
// Next, setup the plot area	WITHOUT_CLASSIFICATION	0.9999935537502382	WITHOUT_CLASSIFICATION	6.44624976169388E-6	DEFECT
// make the chart area a square	WITHOUT_CLASSIFICATION	0.9999915577324908	WITHOUT_CLASSIFICATION	8.442267509256408E-6	DEFECT
// draw the axis and category label	WITHOUT_CLASSIFICATION	0.999997617364425	WITHOUT_CLASSIFICATION	2.382635574891749E-6	DEFECT
// 1 = end of axis	WITHOUT_CLASSIFICATION	0.9999695939806517	WITHOUT_CLASSIFICATION	3.0406019348328065E-5	DEFECT
// Now actually plot each of the series polygons..	WITHOUT_CLASSIFICATION	0.9999968942280077	WITHOUT_CLASSIFICATION	3.1057719922715046E-6	DEFECT
// plot the data...	WITHOUT_CLASSIFICATION	0.9999945551454109	WITHOUT_CLASSIFICATION	5.444854589133405E-6	DEFECT
// draw the polygon series...	WITHOUT_CLASSIFICATION	0.999996556768096	WITHOUT_CLASSIFICATION	3.4432319041058203E-6	DEFECT
// Finds our starting angle from the centre for this axis	WITHOUT_CLASSIFICATION	0.9999862138854385	WITHOUT_CLASSIFICATION	1.3786114561471854E-5	DEFECT
// The following angle calc will ensure there isn't a top // vertical axis - this may be useful if you don't want any // given criteria to 'appear' move important than the // others.. //  + (getDirection().getFactor() //        * (cat + 0.5) * 360 / catCount);	WITHOUT_CLASSIFICATION	0.9999970896051178	WITHOUT_CLASSIFICATION	2.910394882264261E-6	DEFECT
// find the point at the appropriate distance end point // along the axis/angle identified above and add it to the // polygon	WITHOUT_CLASSIFICATION	0.9999997404662142	WITHOUT_CLASSIFICATION	2.595337857599795E-7	DEFECT
// put an elipse at the point being plotted..	WITHOUT_CLASSIFICATION	0.9999849055820056	WITHOUT_CLASSIFICATION	1.5094417994407953E-5	DEFECT
// Plot the polygon	WITHOUT_CLASSIFICATION	0.9999938618329178	WITHOUT_CLASSIFICATION	6.138167082172763E-6	DEFECT
// set the anchor value for the horizontal axis...	WITHOUT_CLASSIFICATION	0.9999979699112462	WITHOUT_CLASSIFICATION	2.0300887538223885E-6	DEFECT
/* shapeFilled=*/	WITHOUT_CLASSIFICATION	0.9999852006284624	WITHOUT_CLASSIFICATION	1.4799371537579641E-5	DEFECT
// an empty dataset should return a null range	WITHOUT_CLASSIFICATION	0.9999904497289747	WITHOUT_CLASSIFICATION	9.550271025258341E-6	DEFECT
// adjust for insets...	WITHOUT_CLASSIFICATION	0.9999704095374553	WITHOUT_CLASSIFICATION	2.9590462544661704E-5	DEFECT
// send a dataset change event to self...	WITHOUT_CLASSIFICATION	0.9999991583078277	WITHOUT_CLASSIFICATION	8.416921723326651E-7	DEFECT
// plot is likely registered as a listener with the existing axis...	WITHOUT_CLASSIFICATION	0.9999860800984902	WITHOUT_CLASSIFICATION	1.391990150979986E-5	DEFECT
// if the plot area is too small, just return...	WITHOUT_CLASSIFICATION	0.9999763953528218	WITHOUT_CLASSIFICATION	2.3604647178241664E-5	DEFECT
// record the plot area...	WITHOUT_CLASSIFICATION	0.9999899747588572	WITHOUT_CLASSIFICATION	1.0025241142769562E-5	DEFECT
// OK	WITHOUT_CLASSIFICATION	0.9998185702052343	WITHOUT_CLASSIFICATION	1.8142979476559265E-4	DEFECT
// draw the background	WITHOUT_CLASSIFICATION	0.99999573266618	WITHOUT_CLASSIFICATION	4.267333819971531E-6	DEFECT
// plot the data (unless the dataset is null)...	WITHOUT_CLASSIFICATION	0.9999924946447536	WITHOUT_CLASSIFICATION	7.505355246381575E-6	DEFECT
// adjust the drawing area for the plot insets (if any)...	WITHOUT_CLASSIFICATION	0.9999969970554844	WITHOUT_CLASSIFICATION	3.0029445155883104E-6	DEFECT
// delegate...	WITHOUT_CLASSIFICATION	0.9999916342438239	WITHOUT_CLASSIFICATION	8.36575617616987E-6	DEFECT
// delegate...	WITHOUT_CLASSIFICATION	0.9999916342438239	WITHOUT_CLASSIFICATION	8.36575617616987E-6	DEFECT
// delegate...	WITHOUT_CLASSIFICATION	0.9999916342438239	WITHOUT_CLASSIFICATION	8.36575617616987E-6	DEFECT
// fake a dataset change event to update axes...	WITHOUT_CLASSIFICATION	0.9999986194618797	WITHOUT_CLASSIFICATION	1.3805381203197314E-6	DEFECT
// fake a dataset change event to update axes...	WITHOUT_CLASSIFICATION	0.9999986194618797	WITHOUT_CLASSIFICATION	1.3805381203197314E-6	DEFECT
// axisIndices can be: // 1.  null; // 2.  non-empty, containing only Integer objects that are unique.	WITHOUT_CLASSIFICATION	0.9999718871322195	WITHOUT_CLASSIFICATION	2.8112867780459257E-5	DEFECT
// reserve some space for the domain axis...	WITHOUT_CLASSIFICATION	0.9999957585882574	WITHOUT_CLASSIFICATION	4.241411742679424E-6	DEFECT
// reserve some space for the range axis...	WITHOUT_CLASSIFICATION	0.9999873534765127	WITHOUT_CLASSIFICATION	1.264652348731672E-5	DEFECT
// draw the plot background and axes...	WITHOUT_CLASSIFICATION	0.9999989000397356	WITHOUT_CLASSIFICATION	1.0999602644108213E-6	DEFECT
// check that a null dataset returns null bounds	WITHOUT_CLASSIFICATION	0.999998378434985	WITHOUT_CLASSIFICATION	1.6215650150564781E-6	DEFECT
// Lastly, fill the web polygon if this is required	WITHOUT_CLASSIFICATION	0.9999977854545975	WITHOUT_CLASSIFICATION	2.214545402480887E-6	DEFECT
// if series are in rows, then the categories are the column keys	WITHOUT_CLASSIFICATION	0.9999952314941744	WITHOUT_CLASSIFICATION	4.768505825644863E-6	DEFECT
// if series are in columns, then the categories are the row keys	WITHOUT_CLASSIFICATION	0.9999946625316213	WITHOUT_CLASSIFICATION	5.337468378633568E-6	DEFECT
//          negatives = true;	WITHOUT_CLASSIFICATION	0.9999820407549591	WITHOUT_CLASSIFICATION	1.795924504089515E-5	DEFECT
//  value = Math.pow(10,value);	WITHOUT_CLASSIFICATION	0.9999918920020641	WITHOUT_CLASSIFICATION	8.107997935900528E-6	DEFECT
//  izV = steps*numSteps*(int)((value/minZ)/(maxZlog-minZlog)) + 2;	WITHOUT_CLASSIFICATION	0.9999980455733094	WITHOUT_CLASSIFICATION	1.9544266906436603E-6	DEFECT
// super.setSeriesPaint(series, paint);	WITHOUT_CLASSIFICATION	0.9999961597365303	WITHOUT_CLASSIFICATION	3.840263469647156E-6	DEFECT
/// Squares	WITHOUT_CLASSIFICATION	0.9999762129166659	WITHOUT_CLASSIFICATION	2.3787083334079645E-5	DEFECT
/// Draw N, S, E, W	WITHOUT_CLASSIFICATION	0.9998803012541021	WITHOUT_CLASSIFICATION	1.196987458979204E-4	DEFECT
// no zooming possible	WITHOUT_CLASSIFICATION	0.9999875431320154	WITHOUT_CLASSIFICATION	1.2456867984630179E-5	DEFECT
// clone share data sets => add the clone as listener to the dataset	WITHOUT_CLASSIFICATION	0.9999993402790858	WITHOUT_CLASSIFICATION	6.597209142485077E-7	DEFECT
// only relevant when this is a subplot	WITHOUT_CLASSIFICATION	0.9999093924225749	WITHOUT_CLASSIFICATION	9.060757742503375E-5	DEFECT
// allocate storage for datasets, axes and renderers (all optional)	WITHOUT_CLASSIFICATION	0.9999995108809854	WITHOUT_CLASSIFICATION	4.891190145772956E-7	DEFECT
// reserve space for the domain axes...	WITHOUT_CLASSIFICATION	0.9999971337441483	WITHOUT_CLASSIFICATION	2.866255851639643E-6	DEFECT
// reserve space for the range axes...	WITHOUT_CLASSIFICATION	0.9999907124932971	WITHOUT_CLASSIFICATION	9.287506702942657E-6	DEFECT
// the first axis in the list is used for data <--> Java2D	WITHOUT_CLASSIFICATION	0.9999983186754248	WITHOUT_CLASSIFICATION	1.681324575244988E-6	DEFECT
// the first axis in the list is used for data <--> Java2D	WITHOUT_CLASSIFICATION	0.9999983186754248	WITHOUT_CLASSIFICATION	1.681324575244988E-6	DEFECT
// draw domain crosshair if required...	WITHOUT_CLASSIFICATION	0.9999988260956478	WITHOUT_CLASSIFICATION	1.173904352144605E-6	DEFECT
// draw range crosshair if required...	WITHOUT_CLASSIFICATION	0.9999986587999535	WITHOUT_CLASSIFICATION	1.3412000465252302E-6	DEFECT
// add domain axes to lists...	WITHOUT_CLASSIFICATION	0.9999742635575294	WITHOUT_CLASSIFICATION	2.5736442470529873E-5	DEFECT
// add range axes to lists...	WITHOUT_CLASSIFICATION	0.9999722047175159	WITHOUT_CLASSIFICATION	2.7795282484090783E-5	DEFECT
// draw the top axes	WITHOUT_CLASSIFICATION	0.9999951489010049	WITHOUT_CLASSIFICATION	4.851098995178E-6	DEFECT
// draw the bottom axes	WITHOUT_CLASSIFICATION	0.9999723733041282	WITHOUT_CLASSIFICATION	2.7626695871851288E-5	DEFECT
// draw the left axes	WITHOUT_CLASSIFICATION	0.9999872629396953	WITHOUT_CLASSIFICATION	1.2737060304627903E-5	DEFECT
// draw the right axes	WITHOUT_CLASSIFICATION	0.9999820247496272	WITHOUT_CLASSIFICATION	1.79752503727754E-5	DEFECT
// draw the range grid lines, if any...	WITHOUT_CLASSIFICATION	0.9999964335106398	WITHOUT_CLASSIFICATION	3.5664893602232406E-6	DEFECT
// no renderer, no gridlines...	WITHOUT_CLASSIFICATION	0.9999950834211584	WITHOUT_CLASSIFICATION	4.916578841638264E-6	DEFECT
// no renderer, no gridlines...	WITHOUT_CLASSIFICATION	0.9999950834211584	WITHOUT_CLASSIFICATION	4.916578841638264E-6	DEFECT
// draw the domain grid lines, if any...	WITHOUT_CLASSIFICATION	0.9999982639203009	WITHOUT_CLASSIFICATION	1.736079699074456E-6	DEFECT
// draw the markers that are associated with a specific dataset...	WITHOUT_CLASSIFICATION	0.9999958191524707	WITHOUT_CLASSIFICATION	4.180847529275176E-6	DEFECT
// now draw annotations and render data items...	WITHOUT_CLASSIFICATION	0.9999432683455722	WITHOUT_CLASSIFICATION	5.6731654427856825E-5	DEFECT
// draw background annotations	WITHOUT_CLASSIFICATION	0.999987931420077	WITHOUT_CLASSIFICATION	1.2068579922957341E-5	DEFECT
// render data items...	WITHOUT_CLASSIFICATION	0.9999892241994136	WITHOUT_CLASSIFICATION	1.0775800586371522E-5	DEFECT
// draw foreground annotations	WITHOUT_CLASSIFICATION	0.9999893440098652	WITHOUT_CLASSIFICATION	1.0655990134821332E-5	DEFECT
//  0 | 1 //  --+-- //  2 | 3	WITHOUT_CLASSIFICATION	0.999935145505953	WITHOUT_CLASSIFICATION	6.485449404706583E-5	DEFECT
// we can't draw quadrants without a valid x-axis	WITHOUT_CLASSIFICATION	0.9999844035088755	WITHOUT_CLASSIFICATION	1.559649112446792E-5	DEFECT
// we can't draw quadrants without a valid y-axis	WITHOUT_CLASSIFICATION	0.9999875027688704	WITHOUT_CLASSIFICATION	1.2497231129567356E-5	DEFECT
// PlotOrientation.VERTICAL	WITHOUT_CLASSIFICATION	0.9999864371053161	WITHOUT_CLASSIFICATION	1.3562894683943137E-5	DEFECT
// can't render anything without axes	WITHOUT_CLASSIFICATION	0.9999921007244866	WITHOUT_CLASSIFICATION	7.899275513277896E-6	DEFECT
// no default renderer available	WITHOUT_CLASSIFICATION	0.9999985942993105	WITHOUT_CLASSIFICATION	1.4057006894500572E-6	DEFECT
//render series in reverse order	WITHOUT_CLASSIFICATION	0.9999729200513963	WITHOUT_CLASSIFICATION	2.707994860373297E-5	DEFECT
//render series in forward order	WITHOUT_CLASSIFICATION	0.9999855207822733	WITHOUT_CLASSIFICATION	1.4479217726579372E-5	DEFECT
// use the TextTitle class because it is a concrete subclass	WITHOUT_CLASSIFICATION	0.9999926517519266	WITHOUT_CLASSIFICATION	7.3482480733747295E-6	DEFECT
// set up info collection...	WITHOUT_CLASSIFICATION	0.9999978589259849	WITHOUT_CLASSIFICATION	2.1410740151214234E-6	DEFECT
// adjust the drawing area for plot insets (if any)...	WITHOUT_CLASSIFICATION	0.9999967097683914	WITHOUT_CLASSIFICATION	3.2902316085089602E-6	DEFECT
// try the parent plot	WITHOUT_CLASSIFICATION	0.9999950820210214	WITHOUT_CLASSIFICATION	4.9179789786265155E-6	DEFECT
// try the parent plot	WITHOUT_CLASSIFICATION	0.9999950820210214	WITHOUT_CLASSIFICATION	4.9179789786265155E-6	DEFECT
// iterate through the datasets that map to the axis and get the union // of the ranges.	WITHOUT_CLASSIFICATION	0.9999421754467853	WITHOUT_CLASSIFICATION	5.782455321470942E-5	DEFECT
// delegate to other method	WITHOUT_CLASSIFICATION	0.999996430137069	WITHOUT_CLASSIFICATION	3.5698629310581473E-6	DEFECT
// delegate to other method	WITHOUT_CLASSIFICATION	0.999996430137069	WITHOUT_CLASSIFICATION	3.5698629310581473E-6	DEFECT
// perform the zoom on each range axis	WITHOUT_CLASSIFICATION	0.9999569852806452	WITHOUT_CLASSIFICATION	4.301471935465096E-5	DEFECT
// get the relevant source coordinate given the plot orientation	WITHOUT_CLASSIFICATION	0.9999989681835136	WITHOUT_CLASSIFICATION	1.0318164864022832E-6	DEFECT
// get the relevant source coordinate given the plot orientation	WITHOUT_CLASSIFICATION	0.9999989681835136	WITHOUT_CLASSIFICATION	1.0318164864022832E-6	DEFECT
// draw the plot background and axes...	WITHOUT_CLASSIFICATION	0.9999989000397356	WITHOUT_CLASSIFICATION	1.0999602644108213E-6	DEFECT
// the datasets are not cloned, but listeners need to be added...	WITHOUT_CLASSIFICATION	0.9999154736870104	WITHOUT_CLASSIFICATION	8.452631298962816E-5	DEFECT
// if the event was caused by a change to series visibility, then // the axis ranges might need updating...	WITHOUT_CLASSIFICATION	0.9999994374796699	WITHOUT_CLASSIFICATION	5.62520330136758E-7	DEFECT
// check that the renderer has a corresponding dataset (it doesn't // matter if the dataset is null)	WITHOUT_CLASSIFICATION	0.999994760893168	WITHOUT_CLASSIFICATION	5.239106832033429E-6	DEFECT
// check that the renderer has a corresponding dataset (it doesn't // matter if the dataset is null)	WITHOUT_CLASSIFICATION	0.999994760893168	WITHOUT_CLASSIFICATION	5.239106832033429E-6	DEFECT
// set the anchor value for the vertical axis...	WITHOUT_CLASSIFICATION	0.9999979477022936	WITHOUT_CLASSIFICATION	2.052297706465581E-6	DEFECT
// grab the plot's annotations	WITHOUT_CLASSIFICATION	0.9999826883473785	WITHOUT_CLASSIFICATION	1.7311652621616488E-5	DEFECT
// is it a domain axis?	WITHOUT_CLASSIFICATION	0.9989979914059361	WITHOUT_CLASSIFICATION	0.0010020085940638413	DEFECT
// or is it a range axis?	WITHOUT_CLASSIFICATION	0.9997420535091937	WITHOUT_CLASSIFICATION	2.579464908063106E-4	DEFECT
// if the axes use a linear scale, you can uncomment the code below and // switch to the alternative transX/transY calculation inside the loop // that follows - it is a little bit faster then. // // int xx = (int) dataArea.getMinX(); // int ww = (int) dataArea.getWidth(); // int yy = (int) dataArea.getMaxY(); // int hh = (int) dataArea.getHeight(); // double domainMin = this.domainAxis.getLowerBound(); // double domainLength = this.domainAxis.getUpperBound() - domainMin; // double rangeMin = this.rangeAxis.getLowerBound(); // double rangeLength = this.rangeAxis.getUpperBound() - rangeMin;	WITHOUT_CLASSIFICATION	0.9999593000565741	WITHOUT_CLASSIFICATION	4.069994342594162E-5	DEFECT
// register the plot as a listener with its axes, datasets, and // renderers...	WITHOUT_CLASSIFICATION	0.9999974397978337	WITHOUT_CLASSIFICATION	2.5602021662128552E-6	DEFECT
// perform the zoom on each domain axis	WITHOUT_CLASSIFICATION	0.9999849648049587	WITHOUT_CLASSIFICATION	1.5035195041206024E-5	DEFECT
// lineVisible	WITHOUT_CLASSIFICATION	0.9999734496746964	WITHOUT_CLASSIFICATION	2.6550325303706517E-5	DEFECT
// adjust for insets...	WITHOUT_CLASSIFICATION	0.9999704095374553	WITHOUT_CLASSIFICATION	2.9590462544661704E-5	DEFECT
// set the new dataset, and register the chart as a change listener...	WITHOUT_CLASSIFICATION	0.9999995292521442	WITHOUT_CLASSIFICATION	4.7074785575637284E-7	DEFECT
// send a dataset change event to self...	WITHOUT_CLASSIFICATION	0.9999991583078277	WITHOUT_CLASSIFICATION	8.416921723326651E-7	DEFECT
// draw the background	WITHOUT_CLASSIFICATION	0.99999573266618	WITHOUT_CLASSIFICATION	4.267333819971531E-6	DEFECT
// intentionally blank	WITHOUT_CLASSIFICATION	0.9999590660139227	WITHOUT_CLASSIFICATION	4.093398607740378E-5	DEFECT
// get the source coordinate - this plot has always a VERTICAL // orientation	WITHOUT_CLASSIFICATION	0.9999985520423025	WITHOUT_CLASSIFICATION	1.4479576974905158E-6	DEFECT
// images considered equal only if they're the SAME object // TODO: is there a way to do a better test?	WITHOUT_CLASSIFICATION	0.9952743799295188	WITHOUT_CLASSIFICATION	0.004725620070481124	DEFECT
//int transX = (int) (xx + ww * (x - domainMin) / domainLength); //int transY = (int) (yy - hh * (y - rangeMin) / rangeLength);	WITHOUT_CLASSIFICATION	0.9999820784451569	WITHOUT_CLASSIFICATION	1.7921554843078925E-5	DEFECT
// if there is an existing dataset, remove the plot from the list // of change listeners...	WITHOUT_CLASSIFICATION	0.9999833411960355	WITHOUT_CLASSIFICATION	1.6658803964500864E-5	DEFECT
// plot is registered as a listener with the existing axis...	WITHOUT_CLASSIFICATION	0.9999851144650675	WITHOUT_CLASSIFICATION	1.4885534932510718E-5	DEFECT
// adjust for padding...	WITHOUT_CLASSIFICATION	0.9999809072040856	WITHOUT_CLASSIFICATION	1.909279591445093E-5	DEFECT
// already calculated // already calculated	WITHOUT_CLASSIFICATION	0.9999764382573592	WITHOUT_CLASSIFICATION	2.356174264076783E-5	DEFECT
// draw range indicators...	WITHOUT_CLASSIFICATION	0.999994200895215	WITHOUT_CLASSIFICATION	5.799104785040019E-6	DEFECT
// draw start of normal range	WITHOUT_CLASSIFICATION	0.999980478367266	WITHOUT_CLASSIFICATION	1.95216327339649E-5	DEFECT
// draw start of warning range	WITHOUT_CLASSIFICATION	0.999990527652797	WITHOUT_CLASSIFICATION	9.472347203121724E-6	DEFECT
// draw start of critical range	WITHOUT_CLASSIFICATION	0.9999984549607567	WITHOUT_CLASSIFICATION	1.5450392433774256E-6	DEFECT
// draw the axis...	WITHOUT_CLASSIFICATION	0.999986425490162	WITHOUT_CLASSIFICATION	1.3574509837841186E-5	DEFECT
//cursor = midX - COLUMN_RADIUS - AXIS_GAP;	WITHOUT_CLASSIFICATION	0.9999537424141128	WITHOUT_CLASSIFICATION	4.625758588705191E-5	DEFECT
// draw text value on screen	WITHOUT_CLASSIFICATION	0.9999949906989356	WITHOUT_CLASSIFICATION	5.009301064441712E-6	DEFECT
//  draw units indicator	WITHOUT_CLASSIFICATION	0.9999947026761322	WITHOUT_CLASSIFICATION	5.297323867857014E-6	DEFECT
// draw thermometer outline	WITHOUT_CLASSIFICATION	0.9999946672406529	WITHOUT_CLASSIFICATION	5.332759347144482E-6	DEFECT
// no domain axis to zoom	WITHOUT_CLASSIFICATION	0.9999085202419875	WITHOUT_CLASSIFICATION	9.147975801245965E-5	DEFECT
// work out the anchor point	WITHOUT_CLASSIFICATION	0.9999970458690284	WITHOUT_CLASSIFICATION	2.9541309716189185E-6	DEFECT
// calculate the bounds of the template value	WITHOUT_CLASSIFICATION	0.999998899482524	WITHOUT_CLASSIFICATION	1.100517476084746E-6	DEFECT
// align this rectangle to the frameAnchor	WITHOUT_CLASSIFICATION	0.9999960123838235	WITHOUT_CLASSIFICATION	3.987616176510807E-6	DEFECT
// add the insets	WITHOUT_CLASSIFICATION	0.9999911926988122	WITHOUT_CLASSIFICATION	8.807301187723117E-6	DEFECT
// draw the border	WITHOUT_CLASSIFICATION	0.9999889830208165	WITHOUT_CLASSIFICATION	1.1016979183474559E-5	DEFECT
// now find the text anchor point	WITHOUT_CLASSIFICATION	0.9999966779357986	WITHOUT_CLASSIFICATION	3.3220642013302323E-6	DEFECT
/* lineVisible= */	WITHOUT_CLASSIFICATION	0.9999671607081165	WITHOUT_CLASSIFICATION	3.28392918834021E-5	DEFECT
// send a dataset change event to self...	WITHOUT_CLASSIFICATION	0.9999991583078277	WITHOUT_CLASSIFICATION	8.416921723326651E-7	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9999994784224214	WITHOUT_CLASSIFICATION	5.21577578463559E-7	DEFECT
// return the override, if there is one...	WITHOUT_CLASSIFICATION	0.9999955158432421	WITHOUT_CLASSIFICATION	4.4841567579607394E-6	DEFECT
// return the override, if there is one...	WITHOUT_CLASSIFICATION	0.9999955158432421	WITHOUT_CLASSIFICATION	4.4841567579607394E-6	DEFECT
// otherwise look up the paint list	WITHOUT_CLASSIFICATION	0.9999991944582326	WITHOUT_CLASSIFICATION	8.05541767470919E-7	DEFECT
// work out the anchor point	WITHOUT_CLASSIFICATION	0.9999970458690284	WITHOUT_CLASSIFICATION	2.9541309716189185E-6	DEFECT
// urlText	WITHOUT_CLASSIFICATION	0.9999812878818275	WITHOUT_CLASSIFICATION	1.871211817260656E-5	DEFECT
// first, expand the viewing area into a drawing frame	WITHOUT_CLASSIFICATION	0.9999962425763498	WITHOUT_CLASSIFICATION	3.7574236502761203E-6	DEFECT
// draw the background if there is one...	WITHOUT_CLASSIFICATION	0.9999972678821929	WITHOUT_CLASSIFICATION	2.7321178070861695E-6	DEFECT
// draw the pointers	WITHOUT_CLASSIFICATION	0.9999974275233726	WITHOUT_CLASSIFICATION	2.572476627429818E-6	DEFECT
// draw the cap if there is one...	WITHOUT_CLASSIFICATION	0.9999948521466934	WITHOUT_CLASSIFICATION	5.147853306586054E-6	DEFECT
// now do the minor tick marks	WITHOUT_CLASSIFICATION	0.9999968082031842	WITHOUT_CLASSIFICATION	3.1917968158254117E-6	DEFECT
// lowerBound	WITHOUT_CLASSIFICATION	0.9999906204424238	WITHOUT_CLASSIFICATION	9.379557576165478E-6	DEFECT
// upperBound	WITHOUT_CLASSIFICATION	0.9999874170753238	WITHOUT_CLASSIFICATION	1.258292467612465E-5	DEFECT
// startAngle	WITHOUT_CLASSIFICATION	0.9999955325245571	WITHOUT_CLASSIFICATION	4.467475442829226E-6	DEFECT
// extent	WITHOUT_CLASSIFICATION	0.9999815827404386	WITHOUT_CLASSIFICATION	1.841725956142879E-5	DEFECT
// tickRadius	WITHOUT_CLASSIFICATION	0.9999894844090251	WITHOUT_CLASSIFICATION	1.051559097498346E-5	DEFECT
// we don't clone the listeners	WITHOUT_CLASSIFICATION	0.9999754921472142	WITHOUT_CLASSIFICATION	2.4507852785770603E-5	DEFECT
// use item paint for fills by default	WITHOUT_CLASSIFICATION	0.9999989567554616	WITHOUT_CLASSIFICATION	1.0432445383793513E-6	DEFECT
// draw the outline of the filled polygon	WITHOUT_CLASSIFICATION	0.9999993306259739	WITHOUT_CLASSIFICATION	6.693740260945167E-7	DEFECT
// just the lines, no filling	WITHOUT_CLASSIFICATION	0.9999931618966481	WITHOUT_CLASSIFICATION	6.838103351964895E-6	DEFECT
// draw the item shapes	WITHOUT_CLASSIFICATION	0.9999890743916009	WITHOUT_CLASSIFICATION	1.092560839915135E-5	DEFECT
// SERIES VISIBLE (not yet respected by all renderers)	WITHOUT_CLASSIFICATION	0.9999931153914857	WITHOUT_CLASSIFICATION	6.884608514303764E-6	DEFECT
// SERIES VISIBLE IN LEGEND (not yet respected by all renderers)	WITHOUT_CLASSIFICATION	0.9999946219657271	WITHOUT_CLASSIFICATION	5.378034272991467E-6	DEFECT
// PAINT	WITHOUT_CLASSIFICATION	0.9999091720264317	WITHOUT_CLASSIFICATION	9.082797356829268E-5	DEFECT
//// FILL PAINT //////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9997358810799082	WITHOUT_CLASSIFICATION	2.6411892009182915E-4	DEFECT
// otherwise look up the paint table	WITHOUT_CLASSIFICATION	0.9999992553321589	WITHOUT_CLASSIFICATION	7.446678409402567E-7	DEFECT
// return the override, if there is one...	WITHOUT_CLASSIFICATION	0.9999955158432421	WITHOUT_CLASSIFICATION	4.4841567579607394E-6	DEFECT
// return the override, if there is one...	WITHOUT_CLASSIFICATION	0.9999955158432421	WITHOUT_CLASSIFICATION	4.4841567579607394E-6	DEFECT
// return the override, if there is one...	WITHOUT_CLASSIFICATION	0.9999955158432421	WITHOUT_CLASSIFICATION	4.4841567579607394E-6	DEFECT
// return the override, if there is one...	WITHOUT_CLASSIFICATION	0.9999955158432421	WITHOUT_CLASSIFICATION	4.4841567579607394E-6	DEFECT
// return the override, if there is one...	WITHOUT_CLASSIFICATION	0.9999955158432421	WITHOUT_CLASSIFICATION	4.4841567579607394E-6	DEFECT
// return the override, if there is one...	WITHOUT_CLASSIFICATION	0.9999955158432421	WITHOUT_CLASSIFICATION	4.4841567579607394E-6	DEFECT
// we create an event with a special flag set...the purpose of // this is to communicate to the plot (the default receiver of // the event) that series visibility has changed so the axis // ranges might need updating...	WITHOUT_CLASSIFICATION	0.9999953577119014	WITHOUT_CLASSIFICATION	4.6422880985607665E-6	DEFECT
// otherwise look up the paint table	WITHOUT_CLASSIFICATION	0.9999992553321589	WITHOUT_CLASSIFICATION	7.446678409402567E-7	DEFECT
// otherwise look up the paint table	WITHOUT_CLASSIFICATION	0.9999992553321589	WITHOUT_CLASSIFICATION	7.446678409402567E-7	DEFECT
// OUTLINE PAINT //////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999222596583988	WITHOUT_CLASSIFICATION	7.774034160122402E-5	DEFECT
// STROKE	WITHOUT_CLASSIFICATION	0.9997696277765278	WITHOUT_CLASSIFICATION	2.3037222347224633E-4	DEFECT
// OUTLINE STROKE	WITHOUT_CLASSIFICATION	0.9998015982559895	WITHOUT_CLASSIFICATION	1.9840174401044588E-4	DEFECT
// otherwise look up the stroke table	WITHOUT_CLASSIFICATION	0.9999987841812836	WITHOUT_CLASSIFICATION	1.2158187163087723E-6	DEFECT
// SHAPE	WITHOUT_CLASSIFICATION	0.9998754953785786	WITHOUT_CLASSIFICATION	1.2450462142145794E-4	DEFECT
// otherwise look up the shape list	WITHOUT_CLASSIFICATION	0.9999986932184726	WITHOUT_CLASSIFICATION	1.3067815274708073E-6	DEFECT
// ITEM LABEL VISIBILITY...	WITHOUT_CLASSIFICATION	0.999472772571489	WITHOUT_CLASSIFICATION	5.272274285108593E-4	DEFECT
// otherwise look up the boolean table	WITHOUT_CLASSIFICATION	0.9999989679539708	WITHOUT_CLASSIFICATION	1.0320460292881331E-6	DEFECT
// this should have been defined as a boolean primitive, because // allowing null values is a nuisance...but it is part of the final // API now, so we'll have to support it.	WITHOUT_CLASSIFICATION	0.999963036493263	WITHOUT_CLASSIFICATION	3.696350673702375E-5	DEFECT
//// ITEM LABEL FONT //////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9997549121655559	WITHOUT_CLASSIFICATION	2.450878344441079E-4	DEFECT
//// ITEM LABEL PAINT  ////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9998547570369762	WITHOUT_CLASSIFICATION	1.4524296302376508E-4	DEFECT
// POSITIVE ITEM LABEL POSITION...	WITHOUT_CLASSIFICATION	0.9996840877276622	WITHOUT_CLASSIFICATION	3.1591227233784445E-4	DEFECT
// otherwise look up the position table	WITHOUT_CLASSIFICATION	0.9999987766824321	WITHOUT_CLASSIFICATION	1.2233175678574848E-6	DEFECT
// NEGATIVE ITEM LABEL POSITION...	WITHOUT_CLASSIFICATION	0.9995455127370895	WITHOUT_CLASSIFICATION	4.5448726291051297E-4	DEFECT
// otherwise look up the position list	WITHOUT_CLASSIFICATION	0.9999976931868476	WITHOUT_CLASSIFICATION	2.306813152300736E-6	DEFECT
// the commented out code would be better, but only if // RendererChangeEvent is immutable, which it isn't.  See if there is // a way to fix this...	WITHOUT_CLASSIFICATION	0.9995908243783291	WITHOUT_CLASSIFICATION	4.091756216708112E-4	DEFECT
// 'paint' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999987037861827	WITHOUT_CLASSIFICATION	1.2962138172992453E-6	DEFECT
// 'basePaint' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999992426924574	WITHOUT_CLASSIFICATION	7.573075425658635E-7	DEFECT
// 'outlinePaint' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999987130291953	WITHOUT_CLASSIFICATION	1.2869708047379996E-6	DEFECT
// 'baseOutlinePaint' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999988573678126	WITHOUT_CLASSIFICATION	1.1426321874297138E-6	DEFECT
// 'stroke' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999985460562081	WITHOUT_CLASSIFICATION	1.4539437918807246E-6	DEFECT
// 'baseStroke' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999986689632021	WITHOUT_CLASSIFICATION	1.3310367978885374E-6	DEFECT
// we create an event with a special flag set...the purpose of // this is to communicate to the plot (the default receiver of // the event) that series visibility has changed so the axis // ranges might need updating...	WITHOUT_CLASSIFICATION	0.9999953577119014	WITHOUT_CLASSIFICATION	4.6422880985607665E-6	DEFECT
// 'basePaint' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999992426924574	WITHOUT_CLASSIFICATION	7.573075425658635E-7	DEFECT
// shapeList // baseShape	WITHOUT_CLASSIFICATION	0.999973179991697	WITHOUT_CLASSIFICATION	2.6820008303035018E-5	DEFECT
// 'outlineStroke' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.999998096051473	WITHOUT_CLASSIFICATION	1.903948526924156E-6	DEFECT
// 'baseOutlineStroke' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.999998309586346	WITHOUT_CLASSIFICATION	1.6904136539862115E-6	DEFECT
// 'itemLabelsVisible' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999987559353464	WITHOUT_CLASSIFICATION	1.244064653640215E-6	DEFECT
// 'itemLabelFont' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999987608900178	WITHOUT_CLASSIFICATION	1.2391099822072018E-6	DEFECT
// 'baseItemLabelFont' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999993582592427	WITHOUT_CLASSIFICATION	6.41740757301418E-7	DEFECT
// 'itemLabelPaint' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999990459266773	WITHOUT_CLASSIFICATION	9.54073322674834E-7	DEFECT
// 'baseItemLabelPaint' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999995058811072	WITHOUT_CLASSIFICATION	4.94118892811293E-7	DEFECT
// 'postiveItemLabelAnchor' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999987145430993	WITHOUT_CLASSIFICATION	1.2854569007492171E-6	DEFECT
// 'baseItemLabelAnchor' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999990161307406	WITHOUT_CLASSIFICATION	9.838692593717011E-7	DEFECT
// 'negativeItemLabelAnchor' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999983883029524	WITHOUT_CLASSIFICATION	1.6116970475581927E-6	DEFECT
// 'baseNegativeItemLabelAnchor' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999992170431352	WITHOUT_CLASSIFICATION	7.829568647813065E-7	DEFECT
// listeners are not restored automatically, but storage must be // provided...	WITHOUT_CLASSIFICATION	0.9996339300080584	WITHOUT_CLASSIFICATION	3.6606999194148485E-4	DEFECT
// === DEPRECATED CODE ===	WITHOUT_CLASSIFICATION	0.9997639473546255	WITHOUT_CLASSIFICATION	2.3605264537453473E-4	DEFECT
// The following alternative is only supported in JDK 1.4 - we support // JDK 1.3.1 onwards // setItemLabelsVisible(Boolean.valueOf(visible));	WITHOUT_CLASSIFICATION	0.999934293448674	WITHOUT_CLASSIFICATION	6.570655132606138E-5	DEFECT
//System.err.print(" creating new outlier list ");	WITHOUT_CLASSIFICATION	0.9999980697719736	WITHOUT_CLASSIFICATION	1.9302280264638628E-6	DEFECT
//// TOOL TIP GENERATOR ///////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9998637096868316	WITHOUT_CLASSIFICATION	1.3629031316845662E-4	DEFECT
//// URL GENERATOR ////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999097152816332	WITHOUT_CLASSIFICATION	9.028471836674337E-5	DEFECT
// handle value outside bounds...	WITHOUT_CLASSIFICATION	0.9999977723395542	WITHOUT_CLASSIFICATION	2.2276604458253466E-6	DEFECT
// handle special case where value is less that item zero	WITHOUT_CLASSIFICATION	0.9999830669714824	WITHOUT_CLASSIFICATION	1.6933028517612488E-5	DEFECT
// special case where the lowest x-value is >= xLow	WITHOUT_CLASSIFICATION	0.9999970597385212	WITHOUT_CLASSIFICATION	2.9402614789149026E-6	DEFECT
// special case where the highest x-value is < xLow	WITHOUT_CLASSIFICATION	0.9999972790035447	WITHOUT_CLASSIFICATION	2.7209964553097416E-6	DEFECT
// skip any items that don't need including...	WITHOUT_CLASSIFICATION	0.999957998252545	WITHOUT_CLASSIFICATION	4.200174745499186E-5	DEFECT
// skip any items that don't need including...	WITHOUT_CLASSIFICATION	0.999957998252545	WITHOUT_CLASSIFICATION	4.200174745499186E-5	DEFECT
// assign a color for each unique value	WITHOUT_CLASSIFICATION	0.9999990556060908	WITHOUT_CLASSIFICATION	9.443939091459289E-7	DEFECT
// assign a color for each unique value	WITHOUT_CLASSIFICATION	0.9999990556060908	WITHOUT_CLASSIFICATION	9.443939091459289E-7	DEFECT
// in this case, every color has a unique value	WITHOUT_CLASSIFICATION	0.9999262969090855	WITHOUT_CLASSIFICATION	7.370309091448689E-5	DEFECT
// in this case, every color has a range of values	WITHOUT_CLASSIFICATION	0.999935297057062	WITHOUT_CLASSIFICATION	6.470294293804585E-5	DEFECT
// end class wafermaprenderer	WITHOUT_CLASSIFICATION	0.999984932696578	WITHOUT_CLASSIFICATION	1.5067303421952465E-5	DEFECT
// if there is no plot, there is no dataset to access...	WITHOUT_CLASSIFICATION	0.999993933218781	WITHOUT_CLASSIFICATION	6.066781218902291E-6	DEFECT
// we don't know anything about the ordering of the x-values, // but we can still skip any initial values that fall outside the // range...	WITHOUT_CLASSIFICATION	0.9998201825581651	WITHOUT_CLASSIFICATION	1.7981744183485725E-4	DEFECT
// when the x-values are descending, the upper bound is found by // comparing against xLow	WITHOUT_CLASSIFICATION	0.9999847115764016	WITHOUT_CLASSIFICATION	1.528842359845057E-5	DEFECT
// more values than paints so map // multiple values to the same color	WITHOUT_CLASSIFICATION	0.999995953418326	WITHOUT_CLASSIFICATION	4.046581673901445E-6	DEFECT
// end foreach map entry // end else	WITHOUT_CLASSIFICATION	0.9999979383697992	WITHOUT_CLASSIFICATION	2.061630200712481E-6	DEFECT
// get the previous point and the next point so we can calculate a // "hot spot" for the area (used by the chart entity)...	WITHOUT_CLASSIFICATION	0.9999997874120852	WITHOUT_CLASSIFICATION	2.125879147197713E-7	DEFECT
// FIXME: calculate xxLeft and xxRight	WITHOUT_CLASSIFICATION	0.9986413213519154	WITHOUT_CLASSIFICATION	0.0013586786480846475	DEFECT
// handle positive value	WITHOUT_CLASSIFICATION	0.9999875710049135	WITHOUT_CLASSIFICATION	1.2428995086396589E-5	DEFECT
// LEFT POLYGON	WITHOUT_CLASSIFICATION	0.9999230185137947	WITHOUT_CLASSIFICATION	7.698148620526194E-5	DEFECT
// LEFT POLYGON	WITHOUT_CLASSIFICATION	0.9999230185137947	WITHOUT_CLASSIFICATION	7.698148620526194E-5	DEFECT
// RIGHT POLYGON	WITHOUT_CLASSIFICATION	0.9999606204218678	WITHOUT_CLASSIFICATION	3.9379578132127055E-5	DEFECT
// RIGHT POLYGON	WITHOUT_CLASSIFICATION	0.9999606204218678	WITHOUT_CLASSIFICATION	3.9379578132127055E-5	DEFECT
// handle negative value	WITHOUT_CLASSIFICATION	0.9999849211218143	WITHOUT_CLASSIFICATION	1.5078878185837355E-5	DEFECT
// calculate the bar width	WITHOUT_CLASSIFICATION	0.9999943950856912	WITHOUT_CLASSIFICATION	5.604914308742993E-6	DEFECT
// '+' because v is negative	WITHOUT_CLASSIFICATION	0.9999582775012681	WITHOUT_CLASSIFICATION	4.172249873197603E-5	DEFECT
// handle rendering separately for the two plot orientations...	WITHOUT_CLASSIFICATION	0.9999985348717146	WITHOUT_CLASSIFICATION	1.4651282854109657E-6	DEFECT
// draw the blocks	WITHOUT_CLASSIFICATION	0.999997912077778	WITHOUT_CLASSIFICATION	2.08792222192581E-6	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9999300954961883	WITHOUT_CLASSIFICATION	6.990450381177896E-5	DEFECT
// SHAPES VISIBLE	WITHOUT_CLASSIFICATION	0.9998576223168583	WITHOUT_CLASSIFICATION	1.4237768314168012E-4	DEFECT
// SHAPES FILLED	WITHOUT_CLASSIFICATION	0.9997283453038438	WITHOUT_CLASSIFICATION	2.716546961561474E-4	DEFECT
// otherwise look up the paint table	WITHOUT_CLASSIFICATION	0.9999992553321589	WITHOUT_CLASSIFICATION	7.446678409402567E-7	DEFECT
// a list to store the series index and bar region, so we can draw // all the labels at the end...	WITHOUT_CLASSIFICATION	0.9999924998563061	WITHOUT_CLASSIFICATION	7.500143693875061E-6	DEFECT
// draw the blocks	WITHOUT_CLASSIFICATION	0.999997912077778	WITHOUT_CLASSIFICATION	2.08792222192581E-6	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9999300954961883	WITHOUT_CLASSIFICATION	6.990450381177896E-5	DEFECT
// LINES VISIBLE	WITHOUT_CLASSIFICATION	0.9998639947312333	WITHOUT_CLASSIFICATION	1.360052687666838E-4	DEFECT
// preserves old behaviour	WITHOUT_CLASSIFICATION	0.9999965401969303	WITHOUT_CLASSIFICATION	3.459803069689787E-6	DEFECT
// contained titles	WITHOUT_CLASSIFICATION	0.9999965605791366	WITHOUT_CLASSIFICATION	3.4394208635180073E-6	DEFECT
// SHAPES FILLED	WITHOUT_CLASSIFICATION	0.9997283453038438	WITHOUT_CLASSIFICATION	2.716546961561474E-4	DEFECT
// return the overall setting, if there is one...	WITHOUT_CLASSIFICATION	0.9999986089323784	WITHOUT_CLASSIFICATION	1.3910676215637986E-6	DEFECT
// delegate	WITHOUT_CLASSIFICATION	0.9999926470953773	WITHOUT_CLASSIFICATION	7.352904622697956E-6	DEFECT
// do nothing if item is not visible	WITHOUT_CLASSIFICATION	0.999976101759915	WITHOUT_CLASSIFICATION	2.3898240084926393E-5	DEFECT
// do nothing if item is not visible	WITHOUT_CLASSIFICATION	0.999976101759915	WITHOUT_CLASSIFICATION	2.3898240084926393E-5	DEFECT
// do nothing if both the line and shape are not visible	WITHOUT_CLASSIFICATION	0.9999933859688647	WITHOUT_CLASSIFICATION	6.614031135261716E-6	DEFECT
// nothing is drawn for null...	WITHOUT_CLASSIFICATION	0.999980089537652	WITHOUT_CLASSIFICATION	1.991046234804206E-5	DEFECT
// current data point...	WITHOUT_CLASSIFICATION	0.9999984007353117	WITHOUT_CLASSIFICATION	1.5992646884276162E-6	DEFECT
// current data point...	WITHOUT_CLASSIFICATION	0.9999984007353117	WITHOUT_CLASSIFICATION	1.5992646884276162E-6	DEFECT
// previous data point...	WITHOUT_CLASSIFICATION	0.9999986284390039	WITHOUT_CLASSIFICATION	1.3715609960651158E-6	DEFECT
// draw the item label if there is one...	WITHOUT_CLASSIFICATION	0.9999947281087059	WITHOUT_CLASSIFICATION	5.2718912939955195E-6	DEFECT
// submit the current data point as a crosshair candidate	WITHOUT_CLASSIFICATION	0.9999995009340934	WITHOUT_CLASSIFICATION	4.99065906563868E-7	DEFECT
// set the default item label positions	WITHOUT_CLASSIFICATION	0.9999988887648468	WITHOUT_CLASSIFICATION	1.1112351533315535E-6	DEFECT
// fill background...	WITHOUT_CLASSIFICATION	0.9999913259820989	WITHOUT_CLASSIFICATION	8.674017901033339E-6	DEFECT
// highlight the background corners...	WITHOUT_CLASSIFICATION	0.9999979299697977	WITHOUT_CLASSIFICATION	2.070030202236698E-6	DEFECT
// draw background image, if there is one...	WITHOUT_CLASSIFICATION	0.9999971533443696	WITHOUT_CLASSIFICATION	2.846655630552227E-6	DEFECT
// both axes	WITHOUT_CLASSIFICATION	0.9999707375580029	WITHOUT_CLASSIFICATION	2.9262441997012018E-5	DEFECT
// === DEPRECATED CODE ===	WITHOUT_CLASSIFICATION	0.9997639473546255	WITHOUT_CLASSIFICATION	2.3605264537453473E-4	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9999300954961883	WITHOUT_CLASSIFICATION	6.990450381177896E-5	DEFECT
// cases 5, 6, 7 and 8	WITHOUT_CLASSIFICATION	0.9999917248114204	WITHOUT_CLASSIFICATION	8.275188579629585E-6	DEFECT
// put an outline around the data area...	WITHOUT_CLASSIFICATION	0.9999931915437096	WITHOUT_CLASSIFICATION	6.808456290377484E-6	DEFECT
// check the value we are plotting...	WITHOUT_CLASSIFICATION	0.9999964877114178	WITHOUT_CLASSIFICATION	3.512288582205252E-6	DEFECT
// the bar is not visible	WITHOUT_CLASSIFICATION	0.9999408671219162	WITHOUT_CLASSIFICATION	5.9132878083837306E-5	DEFECT
// draw the bar...	WITHOUT_CLASSIFICATION	0.9999846894333386	WITHOUT_CLASSIFICATION	1.53105666614299E-5	DEFECT
// ITEM LABEL GENERATOR	WITHOUT_CLASSIFICATION	0.9995045924315106	WITHOUT_CLASSIFICATION	4.954075684894424E-4	DEFECT
// return the generator for ALL series, if there is one...	WITHOUT_CLASSIFICATION	0.9999975362412734	WITHOUT_CLASSIFICATION	2.463758726547794E-6	DEFECT
// return the generator for ALL series, if there is one...	WITHOUT_CLASSIFICATION	0.9999975362412734	WITHOUT_CLASSIFICATION	2.463758726547794E-6	DEFECT
// otherwise look up the generator table	WITHOUT_CLASSIFICATION	0.9999986940923798	WITHOUT_CLASSIFICATION	1.3059076201951426E-6	DEFECT
// otherwise look up the generator table	WITHOUT_CLASSIFICATION	0.9999986940923798	WITHOUT_CLASSIFICATION	1.3059076201951426E-6	DEFECT
// TOOL TIP GENERATOR	WITHOUT_CLASSIFICATION	0.999674037249912	WITHOUT_CLASSIFICATION	3.2596275008800875E-4	DEFECT
// URL GENERATOR	WITHOUT_CLASSIFICATION	0.999888787729465	WITHOUT_CLASSIFICATION	1.1121227053498404E-4	DEFECT
// clip left and right bounds to data area	WITHOUT_CLASSIFICATION	0.9999984683113037	WITHOUT_CLASSIFICATION	1.5316886963955296E-6	DEFECT
// clip top and bottom bounds to data area	WITHOUT_CLASSIFICATION	0.9999975930027952	WITHOUT_CLASSIFICATION	2.4069972047343416E-6	DEFECT
// now draw the outlines, if visible...	WITHOUT_CLASSIFICATION	0.9999985812955743	WITHOUT_CLASSIFICATION	1.418704425684229E-6	DEFECT
// PlotOrientation.HORIZONTAL	WITHOUT_CLASSIFICATION	0.9999923215320629	WITHOUT_CLASSIFICATION	7.678467937052277E-6	DEFECT
// check that a legend item needs to be displayed...	WITHOUT_CLASSIFICATION	0.9999981572130741	WITHOUT_CLASSIFICATION	1.8427869259970625E-6	DEFECT
// defensive check	WITHOUT_CLASSIFICATION	0.9999942430889196	WITHOUT_CLASSIFICATION	5.756911080382199E-6	DEFECT
// BAR Y	WITHOUT_CLASSIFICATION	0.9998835140498005	WITHOUT_CLASSIFICATION	1.164859501994677E-4	DEFECT
// BAR X	WITHOUT_CLASSIFICATION	0.9998287394154054	WITHOUT_CLASSIFICATION	1.7126058459469596E-4	DEFECT
// cases 1, 2, 3 and 4	WITHOUT_CLASSIFICATION	0.9999916244463256	WITHOUT_CLASSIFICATION	8.375553674273227E-6	DEFECT
// you can add a null list - it would have been better if this // required EMPTY_LIST	WITHOUT_CLASSIFICATION	0.9999796719185149	WITHOUT_CLASSIFICATION	2.0328081485036382E-5	DEFECT
// BAR Y	WITHOUT_CLASSIFICATION	0.9998835140498005	WITHOUT_CLASSIFICATION	1.164859501994677E-4	DEFECT
// BAR X	WITHOUT_CLASSIFICATION	0.9998287394154054	WITHOUT_CLASSIFICATION	1.7126058459469596E-4	DEFECT
// cases 1, 2, 3 and 4	WITHOUT_CLASSIFICATION	0.9999916244463256	WITHOUT_CLASSIFICATION	8.375553674273227E-6	DEFECT
// let the superclass handle it...	WITHOUT_CLASSIFICATION	0.999999018925832	WITHOUT_CLASSIFICATION	9.810741680737746E-7	DEFECT
// bar is not visible	WITHOUT_CLASSIFICATION	0.999922344648615	WITHOUT_CLASSIFICATION	7.765535138504103E-5	DEFECT
// bar is not visible	WITHOUT_CLASSIFICATION	0.999922344648615	WITHOUT_CLASSIFICATION	7.765535138504103E-5	DEFECT
// cases 5, 6, 7 and 8	WITHOUT_CLASSIFICATION	0.9999917248114204	WITHOUT_CLASSIFICATION	8.275188579629585E-6	DEFECT
// cases 5, 6, 7 and 8	WITHOUT_CLASSIFICATION	0.9999917248114204	WITHOUT_CLASSIFICATION	8.275188579629585E-6	DEFECT
// cases 9, 10, 11 and 12	WITHOUT_CLASSIFICATION	0.9999919040713626	WITHOUT_CLASSIFICATION	8.0959286374435E-6	DEFECT
// cases 9, 10, 11 and 12	WITHOUT_CLASSIFICATION	0.9999919040713626	WITHOUT_CLASSIFICATION	8.0959286374435E-6	DEFECT
// draw the outline...	WITHOUT_CLASSIFICATION	0.9999953462164938	WITHOUT_CLASSIFICATION	4.6537835061474705E-6	DEFECT
// draw the outline...	WITHOUT_CLASSIFICATION	0.9999953462164938	WITHOUT_CLASSIFICATION	4.6537835061474705E-6	DEFECT
// standard deviation lines	WITHOUT_CLASSIFICATION	0.9999971425651872	WITHOUT_CLASSIFICATION	2.8574348126314627E-6	DEFECT
// standard deviation lines	WITHOUT_CLASSIFICATION	0.9999971425651872	WITHOUT_CLASSIFICATION	2.8574348126314627E-6	DEFECT
// no new methods	WITHOUT_CLASSIFICATION	0.9999931443932146	WITHOUT_CLASSIFICATION	6.855606785429192E-6	DEFECT
// value 0	WITHOUT_CLASSIFICATION	0.9999795841627727	WITHOUT_CLASSIFICATION	2.0415837227388437E-5	DEFECT
// get the clipping values...	WITHOUT_CLASSIFICATION	0.9999959788854021	WITHOUT_CLASSIFICATION	4.021114597845427E-6	DEFECT
// submit the current data point as a crosshair candidate	WITHOUT_CLASSIFICATION	0.9999995009340934	WITHOUT_CLASSIFICATION	4.99065906563868E-7	DEFECT
// submit the current data point as a crosshair candidate	WITHOUT_CLASSIFICATION	0.9999995009340934	WITHOUT_CLASSIFICATION	4.99065906563868E-7	DEFECT
// draw the bar...	WITHOUT_CLASSIFICATION	0.9999846894333386	WITHOUT_CLASSIFICATION	1.53105666614299E-5	DEFECT
// cases 1, 2, 3 and 4	WITHOUT_CLASSIFICATION	0.9999916244463256	WITHOUT_CLASSIFICATION	8.375553674273227E-6	DEFECT
// bar is not visible	WITHOUT_CLASSIFICATION	0.999922344648615	WITHOUT_CLASSIFICATION	7.765535138504103E-5	DEFECT
// bar is not visible	WITHOUT_CLASSIFICATION	0.999922344648615	WITHOUT_CLASSIFICATION	7.765535138504103E-5	DEFECT
// cases 5, 6, 7 and 8	WITHOUT_CLASSIFICATION	0.9999917248114204	WITHOUT_CLASSIFICATION	8.275188579629585E-6	DEFECT
// cases 9, 10, 11 and 12	WITHOUT_CLASSIFICATION	0.9999919040713626	WITHOUT_CLASSIFICATION	8.0959286374435E-6	DEFECT
// draw the outline...	WITHOUT_CLASSIFICATION	0.9999953462164938	WITHOUT_CLASSIFICATION	4.6537835061474705E-6	DEFECT
// if we modify the original list, it's best if the URL generator is // not affected	WITHOUT_CLASSIFICATION	0.9999898480912265	WITHOUT_CLASSIFICATION	1.0151908773385686E-5	DEFECT
// value 1	WITHOUT_CLASSIFICATION	0.9999745886623163	WITHOUT_CLASSIFICATION	2.5411337683740035E-5	DEFECT
// DRAW THE BARS...	WITHOUT_CLASSIFICATION	0.9997960560808955	WITHOUT_CLASSIFICATION	2.0394391910452938E-4	DEFECT
// collect entity and tool tip information...	WITHOUT_CLASSIFICATION	0.9999933873508787	WITHOUT_CLASSIFICATION	6.6126491212999435E-6	DEFECT
// Y0	WITHOUT_CLASSIFICATION	0.999922519731965	WITHOUT_CLASSIFICATION	7.748026803504098E-5	DEFECT
// Y1	WITHOUT_CLASSIFICATION	0.9999160395592686	WITHOUT_CLASSIFICATION	8.396044073150444E-5	DEFECT
// nothing is drawn for null values...	WITHOUT_CLASSIFICATION	0.999984188740934	WITHOUT_CLASSIFICATION	1.5811259065996298E-5	DEFECT
// X	WITHOUT_CLASSIFICATION	0.9998621169099187	WITHOUT_CLASSIFICATION	1.3788309008139077E-4	DEFECT
// Y	WITHOUT_CLASSIFICATION	0.9999116375261528	WITHOUT_CLASSIFICATION	8.836247384725687E-5	DEFECT
// subtitle 1 is the legend	WITHOUT_CLASSIFICATION	0.999932911870236	WITHOUT_CLASSIFICATION	6.708812976400841E-5	DEFECT
// calculate the bar width	WITHOUT_CLASSIFICATION	0.9999943950856912	WITHOUT_CLASSIFICATION	5.604914308742993E-6	DEFECT
// draw the bar...	WITHOUT_CLASSIFICATION	0.9999846894333386	WITHOUT_CLASSIFICATION	1.53105666614299E-5	DEFECT
// BAR Y	WITHOUT_CLASSIFICATION	0.9998835140498005	WITHOUT_CLASSIFICATION	1.164859501994677E-4	DEFECT
// BAR X	WITHOUT_CLASSIFICATION	0.9998287394154054	WITHOUT_CLASSIFICATION	1.7126058459469596E-4	DEFECT
// cases 1, 2, 3 and 4	WITHOUT_CLASSIFICATION	0.9999916244463256	WITHOUT_CLASSIFICATION	8.375553674273227E-6	DEFECT
// bar is not visible	WITHOUT_CLASSIFICATION	0.999922344648615	WITHOUT_CLASSIFICATION	7.765535138504103E-5	DEFECT
// cases 9, 10, 11 and 12	WITHOUT_CLASSIFICATION	0.9999919040713626	WITHOUT_CLASSIFICATION	8.0959286374435E-6	DEFECT
// draw the outline...	WITHOUT_CLASSIFICATION	0.9999953462164938	WITHOUT_CLASSIFICATION	4.6537835061474705E-6	DEFECT
// draw the outline...	WITHOUT_CLASSIFICATION	0.9999953462164938	WITHOUT_CLASSIFICATION	4.6537835061474705E-6	DEFECT
// collect entity and tool tip information...	WITHOUT_CLASSIFICATION	0.9999933873508787	WITHOUT_CLASSIFICATION	6.6126491212999435E-6	DEFECT
// collect entity and tool tip information...	WITHOUT_CLASSIFICATION	0.9999933873508787	WITHOUT_CLASSIFICATION	6.6126491212999435E-6	DEFECT
// nothing is drawn for null values...	WITHOUT_CLASSIFICATION	0.999984188740934	WITHOUT_CLASSIFICATION	1.5811259065996298E-5	DEFECT
// nothing is drawn for null values...	WITHOUT_CLASSIFICATION	0.999984188740934	WITHOUT_CLASSIFICATION	1.5811259065996298E-5	DEFECT
// the clone contains a reference to a CLONE of the original object	WITHOUT_CLASSIFICATION	0.9999968669184345	WITHOUT_CLASSIFICATION	3.1330815655956967E-6	DEFECT
// draw the item labels if there are any...	WITHOUT_CLASSIFICATION	0.9999960405654285	WITHOUT_CLASSIFICATION	3.959434571456916E-6	DEFECT
// calculate bar width...	WITHOUT_CLASSIFICATION	0.9999919777380865	WITHOUT_CLASSIFICATION	8.022261913510777E-6	DEFECT
// && state.getBarWidth() > BAR_OUTLINE_WIDTH_THRESHOLD) {	WITHOUT_CLASSIFICATION	0.9999899952086613	WITHOUT_CLASSIFICATION	1.000479133867585E-5	DEFECT
// no fields to compute...	WITHOUT_CLASSIFICATION	0.9999716654942817	WITHOUT_CLASSIFICATION	2.8334505718203964E-5	DEFECT
//plotBackgroundPaint;	WITHOUT_CLASSIFICATION	0.9999898339152736	WITHOUT_CLASSIFICATION	1.0166084726371834E-5	DEFECT
// PlotOrientation.VERTICAL	WITHOUT_CLASSIFICATION	0.9999864371053161	WITHOUT_CLASSIFICATION	1.3562894683943137E-5	DEFECT
// calculate the bar width	WITHOUT_CLASSIFICATION	0.9999943950856912	WITHOUT_CLASSIFICATION	5.604914308742993E-6	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9999300954961883	WITHOUT_CLASSIFICATION	6.990450381177896E-5	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9999300954961883	WITHOUT_CLASSIFICATION	6.990450381177896E-5	DEFECT
// submit the current data point as a crosshair candidate	WITHOUT_CLASSIFICATION	0.9999995009340934	WITHOUT_CLASSIFICATION	4.99065906563868E-7	DEFECT
// submit the current data point as a crosshair candidate	WITHOUT_CLASSIFICATION	0.9999995009340934	WITHOUT_CLASSIFICATION	4.99065906563868E-7	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999792375281624	WITHOUT_CLASSIFICATION	2.0762471837648883E-5	DEFECT
// the bar is not visible	WITHOUT_CLASSIFICATION	0.9999408671219162	WITHOUT_CLASSIFICATION	5.9132878083837306E-5	DEFECT
// draw the bar...	WITHOUT_CLASSIFICATION	0.9999846894333386	WITHOUT_CLASSIFICATION	1.53105666614299E-5	DEFECT
// check that a legend item needs to be displayed...	WITHOUT_CLASSIFICATION	0.9999981572130741	WITHOUT_CLASSIFICATION	1.8427869259970625E-6	DEFECT
// check that a legend item needs to be displayed...	WITHOUT_CLASSIFICATION	0.9999981572130741	WITHOUT_CLASSIFICATION	1.8427869259970625E-6	DEFECT
// check that a legend item needs to be displayed...	WITHOUT_CLASSIFICATION	0.9999981572130741	WITHOUT_CLASSIFICATION	1.8427869259970625E-6	DEFECT
// bar is not visible	WITHOUT_CLASSIFICATION	0.999922344648615	WITHOUT_CLASSIFICATION	7.765535138504103E-5	DEFECT
// bar is not visible	WITHOUT_CLASSIFICATION	0.999922344648615	WITHOUT_CLASSIFICATION	7.765535138504103E-5	DEFECT
// nothing is drawn for null values...	WITHOUT_CLASSIFICATION	0.999984188740934	WITHOUT_CLASSIFICATION	1.5811259065996298E-5	DEFECT
// draw the item labels if there are any...	WITHOUT_CLASSIFICATION	0.9999960405654285	WITHOUT_CLASSIFICATION	3.959434571456916E-6	DEFECT
// calculate bar width...	WITHOUT_CLASSIFICATION	0.9999919777380865	WITHOUT_CLASSIFICATION	8.022261913510777E-6	DEFECT
// check that clone is independent of the original	WITHOUT_CLASSIFICATION	0.999999180479796	WITHOUT_CLASSIFICATION	8.195202039874364E-7	DEFECT
// do nothing if item is not visible or null	WITHOUT_CLASSIFICATION	0.9999886263301885	WITHOUT_CLASSIFICATION	1.137366981156235E-5	DEFECT
// 100 percent, so it will not apply unless changed	WITHOUT_CLASSIFICATION	0.9999931459177184	WITHOUT_CLASSIFICATION	6.8540822816458895E-6	DEFECT
// work out the label anchor point...	WITHOUT_CLASSIFICATION	0.9999989134060421	WITHOUT_CLASSIFICATION	1.0865939578850835E-6	DEFECT
// FIXME: add setSeriesOutlinePaint(int, Paint, boolean)?	WITHOUT_CLASSIFICATION	0.9878890035378809	WITHOUT_CLASSIFICATION	0.012110996462119229	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9999300954961883	WITHOUT_CLASSIFICATION	6.990450381177896E-5	DEFECT
// do nothing if item is not visible	WITHOUT_CLASSIFICATION	0.999976101759915	WITHOUT_CLASSIFICATION	2.3898240084926393E-5	DEFECT
// current data point...	WITHOUT_CLASSIFICATION	0.9999984007353117	WITHOUT_CLASSIFICATION	1.5992646884276162E-6	DEFECT
// current data point...	WITHOUT_CLASSIFICATION	0.9999984007353117	WITHOUT_CLASSIFICATION	1.5992646884276162E-6	DEFECT
// previous data point...	WITHOUT_CLASSIFICATION	0.9999986284390039	WITHOUT_CLASSIFICATION	1.3715609960651158E-6	DEFECT
// draw the item labels if there are any...	WITHOUT_CLASSIFICATION	0.9999960405654285	WITHOUT_CLASSIFICATION	3.959434571456916E-6	DEFECT
// check key order	WITHOUT_CLASSIFICATION	0.9999951040825308	WITHOUT_CLASSIFICATION	4.895917469196457E-6	DEFECT
// in the following code, barL0 is (in Java2D coordinates) the LEFT // end of the bar for a horizontal bar chart, and the TOP end of the // bar for a vertical bar chart.  Whether this is the BASE of the bar // or not depends also on (a) whether the data value is 'negative' // relative to the base value and (b) whether or not the range axis is // inverted.  This only matters if/when we apply the minimumBarLength // attribute, because we should extend the non-base end of the bar	WITHOUT_CLASSIFICATION	0.9988816284551584	WITHOUT_CLASSIFICATION	0.0011183715448417095	DEFECT
// switch x and y	WITHOUT_CLASSIFICATION	0.9999956604443235	WITHOUT_CLASSIFICATION	4.339555676444179E-6	DEFECT
// or: x1s + 2*(x1-x1s)	WITHOUT_CLASSIFICATION	0.9999358956227821	WITHOUT_CLASSIFICATION	6.410437721787682E-5	DEFECT
// or: x0s + 2*(x0-x0s)	WITHOUT_CLASSIFICATION	0.9999405090772477	WITHOUT_CLASSIFICATION	5.94909227521475E-5	DEFECT
// extend x0's flat bar	WITHOUT_CLASSIFICATION	0.9999904997419645	WITHOUT_CLASSIFICATION	9.50025803548587E-6	DEFECT
// upright bar	WITHOUT_CLASSIFICATION	0.9999886860585445	WITHOUT_CLASSIFICATION	1.131394145558433E-5	DEFECT
// x1's flat bar	WITHOUT_CLASSIFICATION	0.9999784458487627	WITHOUT_CLASSIFICATION	2.1554151237260864E-5	DEFECT
//standard deviation lines	WITHOUT_CLASSIFICATION	0.9999888734787936	WITHOUT_CLASSIFICATION	1.1126521206353404E-5	DEFECT
//// OUTLINE PAINT /////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999034889702629	WITHOUT_CLASSIFICATION	9.651102973701065E-5	DEFECT
//plotOutlinePaint;	WITHOUT_CLASSIFICATION	0.9999735899207544	WITHOUT_CLASSIFICATION	2.6410079245717247E-5	DEFECT
// check key order	WITHOUT_CLASSIFICATION	0.9999951040825308	WITHOUT_CLASSIFICATION	4.895917469196457E-6	DEFECT
// check key order	WITHOUT_CLASSIFICATION	0.9999951040825308	WITHOUT_CLASSIFICATION	4.895917469196457E-6	DEFECT
// previous data point...	WITHOUT_CLASSIFICATION	0.9999986284390039	WITHOUT_CLASSIFICATION	1.3715609960651158E-6	DEFECT
// draw the item label if there is one...	WITHOUT_CLASSIFICATION	0.9999947281087059	WITHOUT_CLASSIFICATION	5.2718912939955195E-6	DEFECT
// BAR Y	WITHOUT_CLASSIFICATION	0.9998835140498005	WITHOUT_CLASSIFICATION	1.164859501994677E-4	DEFECT
// BAR X	WITHOUT_CLASSIFICATION	0.9998287394154054	WITHOUT_CLASSIFICATION	1.7126058459469596E-4	DEFECT
// Y0	WITHOUT_CLASSIFICATION	0.999922519731965	WITHOUT_CLASSIFICATION	7.748026803504098E-5	DEFECT
// Y1	WITHOUT_CLASSIFICATION	0.9999160395592686	WITHOUT_CLASSIFICATION	8.396044073150444E-5	DEFECT
// draw the standard deviation lines *before* the shapes (if they're // visible) - it looks better if the shape fill colour is different to // the line colour	WITHOUT_CLASSIFICATION	0.9999995388593459	WITHOUT_CLASSIFICATION	4.61140654157524E-7	DEFECT
// BAR WIDTH	WITHOUT_CLASSIFICATION	0.9998486102333284	WITHOUT_CLASSIFICATION	1.5138976667158918E-4	DEFECT
// BAR HEIGHT	WITHOUT_CLASSIFICATION	0.9998321994923504	WITHOUT_CLASSIFICATION	1.6780050764967597E-4	DEFECT
// there are no fields to check	WITHOUT_CLASSIFICATION	0.999968594285109	WITHOUT_CLASSIFICATION	3.140571489100583E-5	DEFECT
/* =========================================================== * JFreeChart : a free chart library for the Java(tm) platform * =========================================================== * * (C) Copyright 2000-2013, by Object Refinery Limited and Contributors. * * Project Info:  http://www.jfree.org/jfreechart/index.html * * This library is free software; you can redistribute it and/or modify it * under the terms of the GNU Lesser General Public License as published by * the Free Software Foundation; either version 2.1 of the License, or * (at your option) any later version. * * This library is distributed in the hope that it will be useful, but * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public * License for more details. * * You should have received a copy of the GNU Lesser General Public * License along with this library; if not, write to the Free Software * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, * USA. * * [Oracle and Java are registered trademarks of Oracle and/or its affiliates.  * Other names may be trademarks of their respective owners.] * * ------------------------- * CategoryItemRenderer.java * ------------------------- * * (C) Copyright 2001-2011, by Object Refinery Limited and Contributors. * * Original Author:  David Gilbert (for Object Refinery Limited); * Contributor(s):   Mark Watson (www.markwatson.com); * * Changes * ------- * 23-Oct-2001 : Version 1 (DG); * 16-Jan-2002 : Renamed HorizontalCategoryItemRenderer.java *               --> CategoryItemRenderer.java (DG); * 05-Feb-2002 : Changed return type of the drawCategoryItem method from void *               to Shape, as part of the tooltips implementation (DG) * *               NOTE (30-May-2002) : this has subsequently been changed back *               to void, tooltips are now collected along with entities in *               ChartRenderingInfo (DG); * * 14-Mar-2002 : Added the initialise method, and changed all bar plots to use *               this renderer (DG); * 23-May-2002 : Added ChartRenderingInfo to the initialise method (DG); * 29-May-2002 : Added the getAxisArea(Rectangle2D) method (DG); * 06-Jun-2002 : Updated Javadoc comments (DG); * 26-Jun-2002 : Added range axis to the initialise method (DG); * 24-Sep-2002 : Added getLegendItem() method (DG); * 23-Oct-2002 : Added methods to get/setToolTipGenerator (DG); * 05-Nov-2002 : Replaced references to CategoryDataset with TableDataset (DG); * 06-Nov-2002 : Added the domain axis to the drawCategoryItem method.  Renamed *               drawCategoryItem() --> drawItem() (DG); * 20-Nov-2002 : Changed signature of drawItem() method to reflect use of *               TableDataset (DG); * 26-Nov-2002 : Replaced the isStacked() method with the getRangeType() *               method (DG); * 08-Jan-2003 : Changed getSeriesCount() --> getRowCount() and *               getCategoryCount() --> getColumnCount() (DG); * 09-Jan-2003 : Changed name of grid-line methods (DG); * 21-Jan-2003 : Merged TableDataset with CategoryDataset (DG); * 10-Apr-2003 : Changed CategoryDataset to KeyedValues2DDataset in *               drawItem() method (DG); * 29-Apr-2003 : Eliminated Renderer interface (DG); * 02-Sep-2003 : Fix for bug 790407 (DG); * 16-Sep-2003 : Changed ChartRenderingInfo --> PlotRenderingInfo (DG); * 20-Oct-2003 : Added setOutlinePaint() method (DG); * 06-Feb-2004 : Added missing methods, and moved deprecated methods (DG); * 19-Feb-2004 : Added extra setXXXLabelsVisible() methods (DG); * 29-Apr-2004 : Changed Integer --> int in initialise() method (DG); * 18-May-2004 : Added methods for item label paint (DG); * 05-Nov-2004 : Added getPassCount() method and 'pass' parameter to drawItem() *               method (DG); * 07-Jan-2005 : Renamed getRangeExtent() --> findRangeBounds (DG); * 11-Jan-2005 : Removed deprecated code in preparation for 1.0.0 release (DG); * 23-Feb-2005 : Now extends LegendItemSource (DG); * 20-Apr-2005 : Renamed CategoryLabelGenerator *               --> CategoryItemLabelGenerator (DG); * 20-May-2005 : Added drawDomainMarker() method (DG); * ------------- JFREECHART 1.0.x --------------------------------------------- * 20-Feb-2007 : Updated API docs (DG); * 19-Apr-2007 : Deprecated seriesVisible and seriesVisibleInLegend flags (DG); * 20-Apr-2007 : Deprecated paint, fillPaint, outlinePaint, stroke, *               outlineStroke, shape, itemLabelsVisible, itemLabelFont, *               itemLabelPaint, positiveItemLabelPosition, *               negativeItemLabelPosition and createEntities override *               fields (DG); * 26-Jun-2008 : Added new method required for crosshair support - THIS CHANGES *               THE API as of version 1.0.11 (DG); * */	WITHOUT_CLASSIFICATION	0.9999992744690329	WITHOUT_CLASSIFICATION	7.255309671809128E-7	DEFECT
//// PAINT /////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999294347321668	WITHOUT_CLASSIFICATION	7.056526783321778E-5	DEFECT
// FIXME: add setSeriesPaint(int, Paint, boolean)?	WITHOUT_CLASSIFICATION	0.9903889883272805	WITHOUT_CLASSIFICATION	0.009611011672719428	DEFECT
// FIXME: add setBasePaint(int, Paint, boolean)?	WITHOUT_CLASSIFICATION	0.9936415331715309	WITHOUT_CLASSIFICATION	0.006358466828469065	DEFECT
//// FILL PAINT /////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9997358810799082	WITHOUT_CLASSIFICATION	2.6411892009182915E-4	DEFECT
// POSITIVE ITEM LABEL POSITION...	WITHOUT_CLASSIFICATION	0.9996840877276622	WITHOUT_CLASSIFICATION	3.1591227233784445E-4	DEFECT
// NEGATIVE ITEM LABEL POSITION...	WITHOUT_CLASSIFICATION	0.9995455127370895	WITHOUT_CLASSIFICATION	4.5448726291051297E-4	DEFECT
// ITEM LABEL GENERATOR	WITHOUT_CLASSIFICATION	0.9995045924315106	WITHOUT_CLASSIFICATION	4.954075684894424E-4	DEFECT
// TOOL TIP GENERATOR	WITHOUT_CLASSIFICATION	0.999674037249912	WITHOUT_CLASSIFICATION	3.2596275008800875E-4	DEFECT
// draw the outline...	WITHOUT_CLASSIFICATION	0.9999953462164938	WITHOUT_CLASSIFICATION	4.6537835061474705E-6	DEFECT
// FIXME: add setSeriesPaint(int, Paint, boolean)?	WITHOUT_CLASSIFICATION	0.9903889883272805	WITHOUT_CLASSIFICATION	0.009611011672719428	DEFECT
// ITEM LABELS VISIBLE	WITHOUT_CLASSIFICATION	0.999336106083293	WITHOUT_CLASSIFICATION	6.638939167069947E-4	DEFECT
// FIXME: add setBaseOutlinePaint(Paint, boolean)?	WITHOUT_CLASSIFICATION	0.9903638057686287	WITHOUT_CLASSIFICATION	0.009636194231371381	DEFECT
//// STROKE ////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9997878381004787	WITHOUT_CLASSIFICATION	2.1216189952139903E-4	DEFECT
// FIXME: add setSeriesStroke(int, Stroke, boolean) ?	WITHOUT_CLASSIFICATION	0.9782350898928375	WITHOUT_CLASSIFICATION	0.021764910107162545	DEFECT
// FIXME: add setBaseStroke(Stroke, boolean) ?	WITHOUT_CLASSIFICATION	0.987200872883045	WITHOUT_CLASSIFICATION	0.012799127116954991	DEFECT
//// OUTLINE STROKE ////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.999831636984288	WITHOUT_CLASSIFICATION	1.683630157120426E-4	DEFECT
// FIXME: add setSeriesOutlineStroke(int, Stroke, boolean) ?	WITHOUT_CLASSIFICATION	0.9774584549347923	WITHOUT_CLASSIFICATION	0.022541545065207606	DEFECT
// FIXME: add setBaseOutlineStroke(Stroke, boolean) ?	WITHOUT_CLASSIFICATION	0.9890786424905064	WITHOUT_CLASSIFICATION	0.010921357509493699	DEFECT
//// SHAPE /////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.999885493487447	WITHOUT_CLASSIFICATION	1.1450651255292146E-4	DEFECT
// FIXME: add setSeriesShape(int, Shape, boolean) ?	WITHOUT_CLASSIFICATION	0.9864562776836531	WITHOUT_CLASSIFICATION	0.013543722316346943	DEFECT
// FIXME: add setBaseShape(Shape, boolean) ?	WITHOUT_CLASSIFICATION	0.9871181955766926	WITHOUT_CLASSIFICATION	0.012881804423307388	DEFECT
// check retrieve value by key	WITHOUT_CLASSIFICATION	0.9999966569237095	WITHOUT_CLASSIFICATION	3.343076290475098E-6	DEFECT
// FIXME: add setSeriesItemLabelGenerator(int, CategoryItemLabelGenerator, //            boolean)	WITHOUT_CLASSIFICATION	0.9985490396755135	WITHOUT_CLASSIFICATION	0.0014509603244865664	DEFECT
// FIXME: add setBaseToolTipGenerator(CategoryToolTipGenerator, boolean) ?	WITHOUT_CLASSIFICATION	0.9944179621400296	WITHOUT_CLASSIFICATION	0.005582037859970349	DEFECT
//// ITEM LABEL FONT  //////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9997402349803629	WITHOUT_CLASSIFICATION	2.597650196370871E-4	DEFECT
// FIXME: add setSeriesItemLabelFont(int, Font, boolean) ?	WITHOUT_CLASSIFICATION	0.991433934155554	WITHOUT_CLASSIFICATION	0.008566065844446072	DEFECT
// FIXME: add setBaseItemLabelFont(Font, boolean) ?	WITHOUT_CLASSIFICATION	0.9901857437400933	WITHOUT_CLASSIFICATION	0.009814256259906734	DEFECT
//// ITEM LABEL PAINT  /////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9998547570369762	WITHOUT_CLASSIFICATION	1.4524296302376508E-4	DEFECT
// FIXME: add setSeriesItemLabelPaint(int, Paint, boolean) ?	WITHOUT_CLASSIFICATION	0.993070412402026	WITHOUT_CLASSIFICATION	0.006929587597974008	DEFECT
// FIXME: add setBaseItemLabelPaint(Paint, boolean) ?	WITHOUT_CLASSIFICATION	0.9945550350841749	WITHOUT_CLASSIFICATION	0.005444964915825158	DEFECT
// ITEM URL GENERATOR	WITHOUT_CLASSIFICATION	0.999634883298537	WITHOUT_CLASSIFICATION	3.6511670146292655E-4	DEFECT
// as a special case, if the bar colour has alpha == 0, we draw // nothing.	WITHOUT_CLASSIFICATION	0.9999996297287322	WITHOUT_CLASSIFICATION	3.70271267678506E-7	DEFECT
/*&& state.getBarWidth() > renderer.BAR_OUTLINE_WIDTH_THRESHOLD*/	WITHOUT_CLASSIFICATION	0.9999656190609892	WITHOUT_CLASSIFICATION	3.4380939010739376E-5	DEFECT
// standard ResourceBundle behaviour	WITHOUT_CLASSIFICATION	0.9999995666949179	WITHOUT_CLASSIFICATION	4.333050820912516E-7	DEFECT
// check retrieve value by key	WITHOUT_CLASSIFICATION	0.9999966569237095	WITHOUT_CLASSIFICATION	3.343076290475098E-6	DEFECT
// nothing is drawn for null...	WITHOUT_CLASSIFICATION	0.999980089537652	WITHOUT_CLASSIFICATION	1.991046234804206E-5	DEFECT
// current data point...	WITHOUT_CLASSIFICATION	0.9999984007353117	WITHOUT_CLASSIFICATION	1.5992646884276162E-6	DEFECT
// previous data point...	WITHOUT_CLASSIFICATION	0.9999986284390039	WITHOUT_CLASSIFICATION	1.3715609960651158E-6	DEFECT
// previous data point...	WITHOUT_CLASSIFICATION	0.9999986284390039	WITHOUT_CLASSIFICATION	1.3715609960651158E-6	DEFECT
// draw the item label if there is one...	WITHOUT_CLASSIFICATION	0.9999947281087059	WITHOUT_CLASSIFICATION	5.2718912939955195E-6	DEFECT
// submit the current data point as a crosshair candidate	WITHOUT_CLASSIFICATION	0.9999995009340934	WITHOUT_CLASSIFICATION	4.99065906563868E-7	DEFECT
// fill background...	WITHOUT_CLASSIFICATION	0.9999913259820989	WITHOUT_CLASSIFICATION	8.674017901033339E-6	DEFECT
// draw background image, if there is one...	WITHOUT_CLASSIFICATION	0.9999971533443696	WITHOUT_CLASSIFICATION	2.846655630552227E-6	DEFECT
// put an outline around the data area...	WITHOUT_CLASSIFICATION	0.9999931915437096	WITHOUT_CLASSIFICATION	6.808456290377484E-6	DEFECT
// draw the bar...	WITHOUT_CLASSIFICATION	0.9999846894333386	WITHOUT_CLASSIFICATION	1.53105666614299E-5	DEFECT
// collect entity and tool tip information...	WITHOUT_CLASSIFICATION	0.9999933873508787	WITHOUT_CLASSIFICATION	6.6126491212999435E-6	DEFECT
// nothing is drawn for null values...	WITHOUT_CLASSIFICATION	0.999984188740934	WITHOUT_CLASSIFICATION	1.5811259065996298E-5	DEFECT
// handle a special case - if the bar colour has alpha == 0, it is // invisible so we shouldn't draw any shadow	WITHOUT_CLASSIFICATION	0.9999979697716759	WITHOUT_CLASSIFICATION	2.0302283241471223E-6	DEFECT
// 100 percent, so it will not apply unless // changed	WITHOUT_CLASSIFICATION	0.999992745752192	WITHOUT_CLASSIFICATION	7.254247808037718E-6	DEFECT
// set the outline paint to fully transparent, then the legend shape // will just have the same colour as the lines drawn by the renderer	WITHOUT_CLASSIFICATION	0.9999974160518196	WITHOUT_CLASSIFICATION	2.5839481803838794E-6	DEFECT
// first check the number we are plotting...	WITHOUT_CLASSIFICATION	0.9999976310818217	WITHOUT_CLASSIFICATION	2.368918178313812E-6	DEFECT
// reset the min and max	WITHOUT_CLASSIFICATION	0.9999943208400681	WITHOUT_CLASSIFICATION	5.679159931942493E-6	DEFECT
// connect to the previous point	WITHOUT_CLASSIFICATION	0.9999990535360328	WITHOUT_CLASSIFICATION	9.464639672352079E-7	DEFECT
// create a line renderer only	WITHOUT_CLASSIFICATION	0.999995146428958	WITHOUT_CLASSIFICATION	4.85357104192201E-6	DEFECT
// higlight the background corners...	WITHOUT_CLASSIFICATION	0.9999979633861228	WITHOUT_CLASSIFICATION	2.036613877260093E-6	DEFECT
// do nothing if item is not visible	WITHOUT_CLASSIFICATION	0.999976101759915	WITHOUT_CLASSIFICATION	2.3898240084926393E-5	DEFECT
// check that a legend item needs to be displayed...	WITHOUT_CLASSIFICATION	0.9999981572130741	WITHOUT_CLASSIFICATION	1.8427869259970625E-6	DEFECT
// draw the outline...	WITHOUT_CLASSIFICATION	0.9999953462164938	WITHOUT_CLASSIFICATION	4.6537835061474705E-6	DEFECT
// Y0	WITHOUT_CLASSIFICATION	0.999922519731965	WITHOUT_CLASSIFICATION	7.748026803504098E-5	DEFECT
// Y1	WITHOUT_CLASSIFICATION	0.9999160395592686	WITHOUT_CLASSIFICATION	8.396044073150444E-5	DEFECT
// nothing is drawn for null values...	WITHOUT_CLASSIFICATION	0.999984188740934	WITHOUT_CLASSIFICATION	1.5811259065996298E-5	DEFECT
// BAR WIDTH	WITHOUT_CLASSIFICATION	0.9998486102333284	WITHOUT_CLASSIFICATION	1.5138976667158918E-4	DEFECT
// BAR HEIGHT	WITHOUT_CLASSIFICATION	0.9998321994923504	WITHOUT_CLASSIFICATION	1.6780050764967597E-4	DEFECT
// we'll set this to false if there is at // least one non-null data item...	WITHOUT_CLASSIFICATION	0.9999599821133225	WITHOUT_CLASSIFICATION	4.001788667740849E-5	DEFECT
// set the default item label positions, which will only be used if // the user requests visible item labels...	WITHOUT_CLASSIFICATION	0.9999992277093855	WITHOUT_CLASSIFICATION	7.722906145127226E-7	DEFECT
// treat the last column value as an absolute	WITHOUT_CLASSIFICATION	0.9999923146892188	WITHOUT_CLASSIFICATION	7.68531078118868E-6	DEFECT
// only needed if calculating percentages	WITHOUT_CLASSIFICATION	0.9999996076527732	WITHOUT_CLASSIFICATION	3.923472268534637E-7	DEFECT
// calculate the box width	WITHOUT_CLASSIFICATION	0.9999924390972915	WITHOUT_CLASSIFICATION	7.560902708424134E-6	DEFECT
// offset the start of the boxes if the total width used is smaller // than the category width	WITHOUT_CLASSIFICATION	0.9999985053095539	WITHOUT_CLASSIFICATION	1.4946904460271147E-6	DEFECT
// offset the start of the box if the box width is smaller than // the category width	WITHOUT_CLASSIFICATION	0.999994068966943	WITHOUT_CLASSIFICATION	5.93103305711156E-6	DEFECT
// draw the box...	WITHOUT_CLASSIFICATION	0.999987714945529	WITHOUT_CLASSIFICATION	1.2285054470962165E-5	DEFECT
// draw the upper shadow...	WITHOUT_CLASSIFICATION	0.999988244260711	WITHOUT_CLASSIFICATION	1.1755739288997736E-5	DEFECT
// draw the lower shadow...	WITHOUT_CLASSIFICATION	0.9999923331744663	WITHOUT_CLASSIFICATION	7.66682553365656E-6	DEFECT
// FIXME: add setBasePaint(int, Paint, boolean)?	WITHOUT_CLASSIFICATION	0.9936415331715309	WITHOUT_CLASSIFICATION	0.006358466828469065	DEFECT
// offset the start of the boxes if the total width used is smaller // than the category width	WITHOUT_CLASSIFICATION	0.9999985053095539	WITHOUT_CLASSIFICATION	1.4946904460271147E-6	DEFECT
// draw the upper shadow...	WITHOUT_CLASSIFICATION	0.999988244260711	WITHOUT_CLASSIFICATION	1.1755739288997736E-5	DEFECT
// draw the lower shadow...	WITHOUT_CLASSIFICATION	0.9999923331744663	WITHOUT_CLASSIFICATION	7.66682553365656E-6	DEFECT
// here we check that the average marker will in fact be // visible before drawing it...	WITHOUT_CLASSIFICATION	0.9999527275985303	WITHOUT_CLASSIFICATION	4.7272401469630256E-5	DEFECT
// draw mean - SPECIAL AIMS REQUIREMENT...	WITHOUT_CLASSIFICATION	0.9999681346826325	WITHOUT_CLASSIFICATION	3.186531736754463E-5	DEFECT
// average radius	WITHOUT_CLASSIFICATION	0.9999814604264934	WITHOUT_CLASSIFICATION	1.8539573506582922E-5	DEFECT
// average radius	WITHOUT_CLASSIFICATION	0.9999814604264934	WITHOUT_CLASSIFICATION	1.8539573506582922E-5	DEFECT
// check retrieve value by index	WITHOUT_CLASSIFICATION	0.9999971532804184	WITHOUT_CLASSIFICATION	2.846719581613144E-6	DEFECT
// draw median...	WITHOUT_CLASSIFICATION	0.9999906291124435	WITHOUT_CLASSIFICATION	9.370887556540873E-6	DEFECT
// draw median...	WITHOUT_CLASSIFICATION	0.9999906291124435	WITHOUT_CLASSIFICATION	9.370887556540873E-6	DEFECT
// offset the start of the box if the box width is smaller than the // category width	WITHOUT_CLASSIFICATION	0.9999962057560623	WITHOUT_CLASSIFICATION	3.7942439377698E-6	DEFECT
// draw the body...	WITHOUT_CLASSIFICATION	0.9999908512665223	WITHOUT_CLASSIFICATION	9.148733477609749E-6	DEFECT
// draw yOutliers...	WITHOUT_CLASSIFICATION	0.9999936847362727	WITHOUT_CLASSIFICATION	6.315263727324472E-6	DEFECT
// draw farout indicators	WITHOUT_CLASSIFICATION	0.9999930971738348	WITHOUT_CLASSIFICATION	6.902826165191466E-6	DEFECT
// start from Y = rangeBase	WITHOUT_CLASSIFICATION	0.999975015352366	WITHOUT_CLASSIFICATION	2.4984647634049545E-5	DEFECT
// Process outliers. Each outlier is either added to the // appropriate outlier list or a new outlier list is made	WITHOUT_CLASSIFICATION	0.9999977913024725	WITHOUT_CLASSIFICATION	2.208697527552273E-6	DEFECT
// disable visible items optimisation - it doesn't work for this // renderer...	WITHOUT_CLASSIFICATION	0.9999877813587398	WITHOUT_CLASSIFICATION	1.221864126018484E-5	DEFECT
// Get the item count for the series, so that we can know which is the // end of the series.	WITHOUT_CLASSIFICATION	0.9994819961735212	WITHOUT_CLASSIFICATION	5.180038264787401E-4	DEFECT
// avoid possible sun.dc.pr.PRException: endPath: bad path	WITHOUT_CLASSIFICATION	0.9999974793926283	WITHOUT_CLASSIFICATION	2.5206073716242106E-6	DEFECT
// Create a new Area for the series	WITHOUT_CLASSIFICATION	0.9999975995325607	WITHOUT_CLASSIFICATION	2.4004674391862493E-6	DEFECT
// The first point is (x, this.baseYValue)	WITHOUT_CLASSIFICATION	0.9999827035866485	WITHOUT_CLASSIFICATION	1.7296413351420063E-5	DEFECT
// get the previous data point...	WITHOUT_CLASSIFICATION	0.9999995935095104	WITHOUT_CLASSIFICATION	4.0649048962965434E-7	DEFECT
// not just a horizontal bar but need to perform a 'step'.	WITHOUT_CLASSIFICATION	0.9999703206608728	WITHOUT_CLASSIFICATION	2.9679339127165946E-5	DEFECT
// add an entity for the item...	WITHOUT_CLASSIFICATION	0.9999731029637465	WITHOUT_CLASSIFICATION	2.6897036253520914E-5	DEFECT
// collect entity and tool tip information...	WITHOUT_CLASSIFICATION	0.9999933873508787	WITHOUT_CLASSIFICATION	6.6126491212999435E-6	DEFECT
// avoid possible sun.dc.pr.PRException: endPath: bad path	WITHOUT_CLASSIFICATION	0.9999974793926283	WITHOUT_CLASSIFICATION	2.5206073716242106E-6	DEFECT
// retrieve an item	WITHOUT_CLASSIFICATION	0.9999573758888718	WITHOUT_CLASSIFICATION	4.262411112817242E-5	DEFECT
// Add each point to Area (x, y)	WITHOUT_CLASSIFICATION	0.9999986904153386	WITHOUT_CLASSIFICATION	1.3095846613048212E-6	DEFECT
// Check if the item is the last item for the series or if it // is a NULL value and number of items > 0.  We can't draw an area for // a single point.	WITHOUT_CLASSIFICATION	0.9999984121541808	WITHOUT_CLASSIFICATION	1.5878458192195363E-6	DEFECT
// Add the last point (x,0)	WITHOUT_CLASSIFICATION	0.9999990801440636	WITHOUT_CLASSIFICATION	9.198559364544919E-7	DEFECT
// fill the polygon	WITHOUT_CLASSIFICATION	0.9999935775423083	WITHOUT_CLASSIFICATION	6.422457691602031E-6	DEFECT
// draw an outline around the Area.	WITHOUT_CLASSIFICATION	0.9999905443948912	WITHOUT_CLASSIFICATION	9.455605108841083E-6	DEFECT
// start new area when needed (see above)	WITHOUT_CLASSIFICATION	0.9999919596885283	WITHOUT_CLASSIFICATION	8.040311471609912E-6	DEFECT
// do nothing...this is just a hook for subclasses	WITHOUT_CLASSIFICATION	0.9999967326716672	WITHOUT_CLASSIFICATION	3.2673283327035387E-6	DEFECT
// TODO getSeriesShape(n).getBounds().width / 2;	WITHOUT_CLASSIFICATION	0.9999696488388404	WITHOUT_CLASSIFICATION	3.035116115968323E-5	DEFECT
// TODO getSeriesShape(n).getBounds().height / 2;	WITHOUT_CLASSIFICATION	0.999980742470601	WITHOUT_CLASSIFICATION	1.9257529398952483E-5	DEFECT
// can't draw anything	WITHOUT_CLASSIFICATION	0.9999757743005542	WITHOUT_CLASSIFICATION	2.4225699445765473E-5	DEFECT
// draw optional guide lines	WITHOUT_CLASSIFICATION	0.9999991300084419	WITHOUT_CLASSIFICATION	8.699915580188992E-7	DEFECT
// calculate the arrow head and draw it...	WITHOUT_CLASSIFICATION	0.9999950571160657	WITHOUT_CLASSIFICATION	4.9428839342046034E-6	DEFECT
// orientation is HORIZONTAL	WITHOUT_CLASSIFICATION	0.9999194967914442	WITHOUT_CLASSIFICATION	8.050320855577517E-5	DEFECT
//labelLinkStyle;	WITHOUT_CLASSIFICATION	0.9999744429237452	WITHOUT_CLASSIFICATION	2.5557076254918195E-5	DEFECT
// request width index == itemCount	WITHOUT_CLASSIFICATION	0.999991363960379	WITHOUT_CLASSIFICATION	8.636039621021033E-6	DEFECT
// check if either series is a degenerate case (i.e. less than 2 points)	WITHOUT_CLASSIFICATION	0.9999962724333707	WITHOUT_CLASSIFICATION	3.7275666293094555E-6	DEFECT
// check if series are disjoint (i.e. domain-spans do not overlap)	WITHOUT_CLASSIFICATION	0.9999986236603761	WITHOUT_CLASSIFICATION	1.376339623912327E-6	DEFECT
// polygon definitions	WITHOUT_CLASSIFICATION	0.9999939542338057	WITHOUT_CLASSIFICATION	6.045766194308898E-6	DEFECT
// state	WITHOUT_CLASSIFICATION	0.9999812690565416	WITHOUT_CLASSIFICATION	1.8730943458377688E-5	DEFECT
// actual value set below	WITHOUT_CLASSIFICATION	0.9999821015028526	WITHOUT_CLASSIFICATION	1.7898497147410204E-5	DEFECT
// if a subtrahend is not specified, assume it is zero	WITHOUT_CLASSIFICATION	0.999994802585942	WITHOUT_CLASSIFICATION	5.197414058014118E-6	DEFECT
// fast-forward through leading tails	WITHOUT_CLASSIFICATION	0.9999979842299104	WITHOUT_CLASSIFICATION	2.0157700896248787E-6	DEFECT
// get the x and y coordinates	WITHOUT_CLASSIFICATION	0.9999984005329202	WITHOUT_CLASSIFICATION	1.5994670798552936E-6	DEFECT
// minuend needs to be fast forwarded	WITHOUT_CLASSIFICATION	0.9999934747856762	WITHOUT_CLASSIFICATION	6.525214323866105E-6	DEFECT
// subtrahend needs to be fast forwarded	WITHOUT_CLASSIFICATION	0.9999945576449061	WITHOUT_CLASSIFICATION	5.442355093950611E-6	DEFECT
// project onto subtrahend	WITHOUT_CLASSIFICATION	0.9999973206353765	WITHOUT_CLASSIFICATION	2.6793646233993115E-6	DEFECT
// project onto minuend	WITHOUT_CLASSIFICATION	0.9999939827862467	WITHOUT_CLASSIFICATION	6.017213753227202E-6	DEFECT
// start of algorithm	WITHOUT_CLASSIFICATION	0.9999814372620579	WITHOUT_CLASSIFICATION	1.8562737942121458E-5	DEFECT
// this won't happen :)	WITHOUT_CLASSIFICATION	0.9990039512459058	WITHOUT_CLASSIFICATION	9.960487540942337E-4	DEFECT
// deassert b_*FastForward (only matters for 1st time through loop)	WITHOUT_CLASSIFICATION	0.9999966174821409	WITHOUT_CLASSIFICATION	3.3825178591888044E-6	DEFECT
// check for intersect	WITHOUT_CLASSIFICATION	0.9999938392949637	WITHOUT_CLASSIFICATION	6.160705036399185E-6	DEFECT
// check if line segments are colinear	WITHOUT_CLASSIFICATION	0.9999941810787301	WITHOUT_CLASSIFICATION	5.818921269944764E-6	DEFECT
// compute common denominator	WITHOUT_CLASSIFICATION	0.9999926173442083	WITHOUT_CLASSIFICATION	7.3826557916927415E-6	DEFECT
// compute common deltas	WITHOUT_CLASSIFICATION	0.9999941610834638	WITHOUT_CLASSIFICATION	5.838916536125033E-6	DEFECT
// compute numerators	WITHOUT_CLASSIFICATION	0.9999900523773702	WITHOUT_CLASSIFICATION	9.9476226298155E-6	DEFECT
// check if previously colinear	WITHOUT_CLASSIFICATION	0.9999994933358858	WITHOUT_CLASSIFICATION	5.066641142119308E-7	DEFECT
// clear colinear points and flag	WITHOUT_CLASSIFICATION	0.9999981122549748	WITHOUT_CLASSIFICATION	1.8877450252177128E-6	DEFECT
// set new starting point for the polygon	WITHOUT_CLASSIFICATION	0.999999485111275	WITHOUT_CLASSIFICATION	5.148887250313018E-7	DEFECT
// compute slope components	WITHOUT_CLASSIFICATION	0.9999927729638409	WITHOUT_CLASSIFICATION	7.227036159176089E-6	DEFECT
// test if both grahphs have a vertical rise at the same x-value	WITHOUT_CLASSIFICATION	0.9999986133635451	WITHOUT_CLASSIFICATION	1.3866364549248152E-6	DEFECT
// check if the line segments intersect	WITHOUT_CLASSIFICATION	0.9999987561370755	WITHOUT_CLASSIFICATION	1.2438629246051212E-6	DEFECT
// compute the point of intersection	WITHOUT_CLASSIFICATION	0.9999968751046404	WITHOUT_CLASSIFICATION	3.1248953595843245E-6	DEFECT
// advance minuend and subtrahend to intesect	WITHOUT_CLASSIFICATION	0.9999987799788606	WITHOUT_CLASSIFICATION	1.2200211394106417E-6	DEFECT
// add intersection point to the polygon	WITHOUT_CLASSIFICATION	0.999998643818029	WITHOUT_CLASSIFICATION	1.3561819709019426E-6	DEFECT
// add the subtrahend's points to the polygon in reverse	WITHOUT_CLASSIFICATION	0.9999960012173915	WITHOUT_CLASSIFICATION	3.998782608469611E-6	DEFECT
// create an actual polygon	WITHOUT_CLASSIFICATION	0.9999900351550627	WITHOUT_CLASSIFICATION	9.964844937247696E-6	DEFECT
// add an entity for the item...	WITHOUT_CLASSIFICATION	0.9999731029637465	WITHOUT_CLASSIFICATION	2.6897036253520914E-5	DEFECT
// SERIES VISIBLE IN LEGEND (not yet respected by all renderers)	WITHOUT_CLASSIFICATION	0.9999946219657271	WITHOUT_CLASSIFICATION	5.378034272991467E-6	DEFECT
// draw the item label if there is one...	WITHOUT_CLASSIFICATION	0.9999947281087059	WITHOUT_CLASSIFICATION	5.2718912939955195E-6	DEFECT
// draw an outline around the Area.	WITHOUT_CLASSIFICATION	0.9999905443948912	WITHOUT_CLASSIFICATION	9.455605108841083E-6	DEFECT
// project onto subtrahend	WITHOUT_CLASSIFICATION	0.9999973206353765	WITHOUT_CLASSIFICATION	2.6793646233993115E-6	DEFECT
// project onto minuend	WITHOUT_CLASSIFICATION	0.9999939827862467	WITHOUT_CLASSIFICATION	6.017213753227202E-6	DEFECT
// add the subtrahend's points to the polygon in reverse	WITHOUT_CLASSIFICATION	0.9999960012173915	WITHOUT_CLASSIFICATION	3.998782608469611E-6	DEFECT
// create an actual polygon	WITHOUT_CLASSIFICATION	0.9999900351550627	WITHOUT_CLASSIFICATION	9.964844937247696E-6	DEFECT
// set the maxY and minY values to intersect y-value	WITHOUT_CLASSIFICATION	0.9999990645492334	WITHOUT_CLASSIFICATION	9.354507666105961E-7	DEFECT
// add interection point to new polygon	WITHOUT_CLASSIFICATION	0.9999980244674758	WITHOUT_CLASSIFICATION	1.9755325242048763E-6	DEFECT
// advance the minuend if needed	WITHOUT_CLASSIFICATION	0.9999951653420538	WITHOUT_CLASSIFICATION	4.834657946178153E-6	DEFECT
// advance the subtrahend if needed	WITHOUT_CLASSIFICATION	0.9999977356951173	WITHOUT_CLASSIFICATION	2.2643048827690557E-6	DEFECT
// check if the final polygon needs to be clipped	WITHOUT_CLASSIFICATION	0.9999992939242878	WITHOUT_CLASSIFICATION	7.060757123093908E-7	DEFECT
// consider last point of minuend and subtrahend for determining // positivity	WITHOUT_CLASSIFICATION	0.9999998179304935	WITHOUT_CLASSIFICATION	1.820695065102939E-7	DEFECT
// add the last point of the minuned and subtrahend	WITHOUT_CLASSIFICATION	0.9999996951525114	WITHOUT_CLASSIFICATION	3.0484748867413714E-7	DEFECT
// vertical orientation	WITHOUT_CLASSIFICATION	0.9999906890814113	WITHOUT_CLASSIFICATION	9.310918588748155E-6	DEFECT
//// VISIBLE //////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9998771928022205	WITHOUT_CLASSIFICATION	1.2280719777946534E-4	DEFECT
//// PAINT ////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999294347321668	WITHOUT_CLASSIFICATION	7.056526783321778E-5	DEFECT
// get the previous point and the next point so we can calculate a // "hot spot" for the area (used by the chart entity)...	WITHOUT_CLASSIFICATION	0.9999997874120852	WITHOUT_CLASSIFICATION	2.125879147197713E-7	DEFECT
// FIXME: add setSeriesOutlinePaint(int, Paint, boolean)?	WITHOUT_CLASSIFICATION	0.9878890035378809	WITHOUT_CLASSIFICATION	0.012110996462119229	DEFECT
// FIXME: add setBaseOutlinePaint(Paint, boolean)?	WITHOUT_CLASSIFICATION	0.9903638057686287	WITHOUT_CLASSIFICATION	0.009636194231371381	DEFECT
// create the polygon // add the minuend's points to polygon	WITHOUT_CLASSIFICATION	0.9999970014049462	WITHOUT_CLASSIFICATION	2.9985950538011785E-6	DEFECT
// Check if the item is the last item for the series. // and number of items > 0.  We can't draw an area for a single point.	WITHOUT_CLASSIFICATION	0.9999996887184952	WITHOUT_CLASSIFICATION	3.112815047930905E-7	DEFECT
//// OUTLINE PAINT ////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999034889702629	WITHOUT_CLASSIFICATION	9.651102973701065E-5	DEFECT
// bad axisNumber	WITHOUT_CLASSIFICATION	0.9999760879131012	WITHOUT_CLASSIFICATION	2.391208689885739E-5	DEFECT
// a Range object cannot be equal to a different object type	WITHOUT_CLASSIFICATION	0.99999516636816	WITHOUT_CLASSIFICATION	4.833631840017543E-6	DEFECT
// POSITIVE ITEM LABEL POSITION...	WITHOUT_CLASSIFICATION	0.9996840877276622	WITHOUT_CLASSIFICATION	3.1591227233784445E-4	DEFECT
// NEGATIVE ITEM LABEL POSITION...	WITHOUT_CLASSIFICATION	0.9995455127370895	WITHOUT_CLASSIFICATION	4.5448726291051297E-4	DEFECT
//// TOOL TIP GENERATOR ///////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9998637096868316	WITHOUT_CLASSIFICATION	1.3629031316845662E-4	DEFECT
//// URL GENERATOR ////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999097152816332	WITHOUT_CLASSIFICATION	9.028471836674337E-5	DEFECT
// FIXME: add setSeriesStroke(int, Stroke, boolean) ?	WITHOUT_CLASSIFICATION	0.9782350898928375	WITHOUT_CLASSIFICATION	0.021764910107162545	DEFECT
// FIXME: add setBaseStroke(Stroke, boolean) ?	WITHOUT_CLASSIFICATION	0.987200872883045	WITHOUT_CLASSIFICATION	0.012799127116954991	DEFECT
// FIXME: add setSeriesOutlineStroke(int, Stroke, boolean) ?	WITHOUT_CLASSIFICATION	0.9774584549347923	WITHOUT_CLASSIFICATION	0.022541545065207606	DEFECT
// FIXME: add setBaseOutlineStroke(Stroke, boolean) ?	WITHOUT_CLASSIFICATION	0.9890786424905064	WITHOUT_CLASSIFICATION	0.010921357509493699	DEFECT
// FIXME: add setSeriesShape(int, Shape, boolean) ?	WITHOUT_CLASSIFICATION	0.9864562776836531	WITHOUT_CLASSIFICATION	0.013543722316346943	DEFECT
// FIXME: add setBaseShape(Shape, boolean) ?	WITHOUT_CLASSIFICATION	0.9871181955766926	WITHOUT_CLASSIFICATION	0.012881804423307388	DEFECT
// allowDuplicateXValues	WITHOUT_CLASSIFICATION	0.9999948969477492	WITHOUT_CLASSIFICATION	5.103052250789319E-6	DEFECT
//// STROKE ///////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9997878381004787	WITHOUT_CLASSIFICATION	2.1216189952139903E-4	DEFECT
//// OUTLINE STROKE ///////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.999831636984288	WITHOUT_CLASSIFICATION	1.683630157120426E-4	DEFECT
//// SHAPE ////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.999885493487447	WITHOUT_CLASSIFICATION	1.1450651255292146E-4	DEFECT
//// LEGEND ITEMS /////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9998602250136095	WITHOUT_CLASSIFICATION	1.3977498639047059E-4	DEFECT
//// LEGEND ITEM LABEL GENERATOR //////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9998017068509186	WITHOUT_CLASSIFICATION	1.982931490814666E-4	DEFECT
//// ITEM LABEL GENERATOR /////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9997972390314382	WITHOUT_CLASSIFICATION	2.0276096856179074E-4	DEFECT
// FIXME:	WITHOUT_CLASSIFICATION	0.9515835358361989	WITHOUT_CLASSIFICATION	0.048416464163801035	DEFECT
//// ITEM LABEL FONT ///////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9997549121655559	WITHOUT_CLASSIFICATION	2.450878344441079E-4	DEFECT
//// ANNOTATIONS //////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9998515823201168	WITHOUT_CLASSIFICATION	1.4841767988318347E-4	DEFECT
//// DRAWING //////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999408730904612	WITHOUT_CLASSIFICATION	5.9126909538912545E-5	DEFECT
// DEPRECATED METHODS	WITHOUT_CLASSIFICATION	0.9996070468968632	WITHOUT_CLASSIFICATION	3.9295310313676137E-4	DEFECT
// need to handle cluster centering as a special case	WITHOUT_CLASSIFICATION	0.9999996290071393	WITHOUT_CLASSIFICATION	3.7099286064339883E-7	DEFECT
// may be negative	WITHOUT_CLASSIFICATION	0.9999873966018982	WITHOUT_CLASSIFICATION	1.2603398101859152E-5	DEFECT
/*             * Legacy? Just return the original Paint.             * (this corresponds EXACTLY to how Paints used to be darkened)             */	WITHOUT_CLASSIFICATION	0.9999945900134961	WITHOUT_CLASSIFICATION	5.409986503841756E-6	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999972131066635	WITHOUT_CLASSIFICATION	2.78689333669082E-6	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9999994784224214	WITHOUT_CLASSIFICATION	5.21577578463559E-7	DEFECT
// add an entity for the item...	WITHOUT_CLASSIFICATION	0.9999731029637465	WITHOUT_CLASSIFICATION	2.6897036253520914E-5	DEFECT
// do nothing if item is not visible	WITHOUT_CLASSIFICATION	0.999976101759915	WITHOUT_CLASSIFICATION	2.3898240084926393E-5	DEFECT
// Create a new Area for the series	WITHOUT_CLASSIFICATION	0.9999975995325607	WITHOUT_CLASSIFICATION	2.4004674391862493E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999773291202646	WITHOUT_CLASSIFICATION	2.2670879735463088E-5	DEFECT
// add a value	WITHOUT_CLASSIFICATION	0.9999791726487751	WITHOUT_CLASSIFICATION	2.0827351224908727E-5	DEFECT
// first pass draws the shading	WITHOUT_CLASSIFICATION	0.9999937802368385	WITHOUT_CLASSIFICATION	6.21976316146602E-6	DEFECT
// last item in series, draw the lot... // set up the alpha-transparency...	WITHOUT_CLASSIFICATION	0.9999994898324989	WITHOUT_CLASSIFICATION	5.101675011766174E-7	DEFECT
// second pass adds shapes where the items are ..	WITHOUT_CLASSIFICATION	0.9999796590482521	WITHOUT_CLASSIFICATION	2.0340951747804203E-5	DEFECT
// return straight away if the item is not visible	WITHOUT_CLASSIFICATION	0.9999974715722362	WITHOUT_CLASSIFICATION	2.5284277638588633E-6	DEFECT
// add an entity if this info is being collected	WITHOUT_CLASSIFICATION	0.9999312901817741	WITHOUT_CLASSIFICATION	6.870981822593481E-5	DEFECT
//  Get height adjustment based on stack and translate to Java2D values	WITHOUT_CLASSIFICATION	0.999999036499567	WITHOUT_CLASSIFICATION	9.635004330099016E-7	DEFECT
//  Get series Paint and Stroke	WITHOUT_CLASSIFICATION	0.999996872261851	WITHOUT_CLASSIFICATION	3.127738148968808E-6	DEFECT
//  On first pass render the areas, line and outlines	WITHOUT_CLASSIFICATION	0.999998545666697	WITHOUT_CLASSIFICATION	1.454333303012317E-6	DEFECT
// start from previous height (ph1)	WITHOUT_CLASSIFICATION	0.9999981705033654	WITHOUT_CLASSIFICATION	1.8294966346216763E-6	DEFECT
// should not get here	WITHOUT_CLASSIFICATION	0.9999732658995466	WITHOUT_CLASSIFICATION	2.6734100453461757E-5	DEFECT
// use item paint for fills by default	WITHOUT_CLASSIFICATION	0.9999989567554616	WITHOUT_CLASSIFICATION	1.0432445383793513E-6	DEFECT
// === DEPRECATED CODE ===	WITHOUT_CLASSIFICATION	0.9997639473546255	WITHOUT_CLASSIFICATION	2.3605264537453473E-4	DEFECT
// LINES VISIBLE	WITHOUT_CLASSIFICATION	0.9998639947312333	WITHOUT_CLASSIFICATION	1.360052687666838E-4	DEFECT
// SHAPES VISIBLE	WITHOUT_CLASSIFICATION	0.9998576223168583	WITHOUT_CLASSIFICATION	1.4237768314168012E-4	DEFECT
// SHAPES FILLED	WITHOUT_CLASSIFICATION	0.9997283453038438	WITHOUT_CLASSIFICATION	2.716546961561474E-4	DEFECT
// do nothing if item is not visible	WITHOUT_CLASSIFICATION	0.999976101759915	WITHOUT_CLASSIFICATION	2.3898240084926393E-5	DEFECT
// collect entity and tool tip information...	WITHOUT_CLASSIFICATION	0.9999933873508787	WITHOUT_CLASSIFICATION	6.6126491212999435E-6	DEFECT
// Get the item count for the series, so that we can know which is the // end of the series.	WITHOUT_CLASSIFICATION	0.9994819961735212	WITHOUT_CLASSIFICATION	5.180038264787401E-4	DEFECT
// get the previous data point...	WITHOUT_CLASSIFICATION	0.9999995935095104	WITHOUT_CLASSIFICATION	4.0649048962965434E-7	DEFECT
// Add each point to Area (x, y)	WITHOUT_CLASSIFICATION	0.9999986904153386	WITHOUT_CLASSIFICATION	1.3095846613048212E-6	DEFECT
// Add the last point (x,0)	WITHOUT_CLASSIFICATION	0.9999990801440636	WITHOUT_CLASSIFICATION	9.198559364544919E-7	DEFECT
// Add the last point (x,0)	WITHOUT_CLASSIFICATION	0.9999990801440636	WITHOUT_CLASSIFICATION	9.198559364544919E-7	DEFECT
// add another value	WITHOUT_CLASSIFICATION	0.9999947302536238	WITHOUT_CLASSIFICATION	5.269746376172739E-6	DEFECT
// in the rendering process, there is special handling for item // zero, so we can't support processing of visible data items only	WITHOUT_CLASSIFICATION	0.9999988987787486	WITHOUT_CLASSIFICATION	1.101221251453532E-6	DEFECT
// The first point is (x, 0)	WITHOUT_CLASSIFICATION	0.9999750528353981	WITHOUT_CLASSIFICATION	2.49471646018839E-5	DEFECT
//  Fill the polygon	WITHOUT_CLASSIFICATION	0.9999934622142187	WITHOUT_CLASSIFICATION	6.537785781344035E-6	DEFECT
//  Draw an outline around the Area.	WITHOUT_CLASSIFICATION	0.9999890417936256	WITHOUT_CLASSIFICATION	1.095820637446002E-5	DEFECT
// first pass draws the background (lines, for instance)	WITHOUT_CLASSIFICATION	0.99999959039857	WITHOUT_CLASSIFICATION	4.096014301113249E-7	DEFECT
//labelLinkPaint;	WITHOUT_CLASSIFICATION	0.9999757319128536	WITHOUT_CLASSIFICATION	2.426808714632915E-5	DEFECT
// only draw if we have good values	WITHOUT_CLASSIFICATION	0.9999987154035068	WITHOUT_CLASSIFICATION	1.2845964930965391E-6	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9999994784224214	WITHOUT_CLASSIFICATION	5.21577578463559E-7	DEFECT
// get the data points	WITHOUT_CLASSIFICATION	0.9999976865399016	WITHOUT_CLASSIFICATION	2.3134600983511115E-6	DEFECT
// draw the item label if there is one...	WITHOUT_CLASSIFICATION	0.9999947281087059	WITHOUT_CLASSIFICATION	5.2718912939955195E-6	DEFECT
// second pass adds shapes where the items are ..	WITHOUT_CLASSIFICATION	0.9999796590482521	WITHOUT_CLASSIFICATION	2.0340951747804203E-5	DEFECT
// Add points from last series to complete the base of the // polygon	WITHOUT_CLASSIFICATION	0.9999993258282589	WITHOUT_CLASSIFICATION	6.741717411884443E-7	DEFECT
// On second pass render shapes and collect entity and tooltip // information	WITHOUT_CLASSIFICATION	0.9999890633104855	WITHOUT_CLASSIFICATION	1.0936689514474107E-5	DEFECT
// update path to reflect latest point	WITHOUT_CLASSIFICATION	0.9999995905779145	WITHOUT_CLASSIFICATION	4.094220853687375E-7	DEFECT
// if this is the last item, draw the path ...	WITHOUT_CLASSIFICATION	0.9999588624719674	WITHOUT_CLASSIFICATION	4.1137528032582065E-5	DEFECT
// draw path	WITHOUT_CLASSIFICATION	0.9999836606050874	WITHOUT_CLASSIFICATION	1.633939491255859E-5	DEFECT
// Collect points	WITHOUT_CLASSIFICATION	0.9999978911932049	WITHOUT_CLASSIFICATION	2.1088067949989753E-6	DEFECT
// construct path	WITHOUT_CLASSIFICATION	0.9999927180260861	WITHOUT_CLASSIFICATION	7.28197391381883E-6	DEFECT
// we need at least two points to draw something	WITHOUT_CLASSIFICATION	0.9999978522223324	WITHOUT_CLASSIFICATION	2.1477776675865343E-6	DEFECT
// we need at least 3 points to spline. Draw simple line // for two points	WITHOUT_CLASSIFICATION	0.999997398595788	WITHOUT_CLASSIFICATION	2.601404212044108E-6	DEFECT
// construct spline // number of points // Newton form coefficients // x-coordinates of nodes	WITHOUT_CLASSIFICATION	0.9999994038860274	WITHOUT_CLASSIFICATION	5.961139726814603E-7	DEFECT
// note that a[0]=a[np-1]=0	WITHOUT_CLASSIFICATION	0.9999350922712317	WITHOUT_CLASSIFICATION	6.490772876830745E-5	DEFECT
// loop over intervals between nodes	WITHOUT_CLASSIFICATION	0.9999980380233335	WITHOUT_CLASSIFICATION	1.961976666454215E-6	DEFECT
// we're running on JRE 1.3.1 so this is the best we have...	WITHOUT_CLASSIFICATION	0.9998509369349083	WITHOUT_CLASSIFICATION	1.4906306509169013E-4	DEFECT
// both axes	WITHOUT_CLASSIFICATION	0.9999707375580029	WITHOUT_CLASSIFICATION	2.9262441997012018E-5	DEFECT
// ITEM LABEL GENERATOR	WITHOUT_CLASSIFICATION	0.9995045924315106	WITHOUT_CLASSIFICATION	4.954075684894424E-4	DEFECT
// return the generator for ALL series, if there is one...	WITHOUT_CLASSIFICATION	0.9999975362412734	WITHOUT_CLASSIFICATION	2.463758726547794E-6	DEFECT
// return the generator for ALL series, if there is one...	WITHOUT_CLASSIFICATION	0.9999975362412734	WITHOUT_CLASSIFICATION	2.463758726547794E-6	DEFECT
// otherwise look up the generator table	WITHOUT_CLASSIFICATION	0.9999986940923798	WITHOUT_CLASSIFICATION	1.3059076201951426E-6	DEFECT
// otherwise look up the generator table	WITHOUT_CLASSIFICATION	0.9999986940923798	WITHOUT_CLASSIFICATION	1.3059076201951426E-6	DEFECT
// TOOL TIP GENERATOR	WITHOUT_CLASSIFICATION	0.999674037249912	WITHOUT_CLASSIFICATION	3.2596275008800875E-4	DEFECT
// URL GENERATOR	WITHOUT_CLASSIFICATION	0.999888787729465	WITHOUT_CLASSIFICATION	1.1121227053498404E-4	DEFECT
// clip top and bottom bounds to data area	WITHOUT_CLASSIFICATION	0.9999975930027952	WITHOUT_CLASSIFICATION	2.4069972047343416E-6	DEFECT
// clip top and bottom bounds to data area	WITHOUT_CLASSIFICATION	0.9999975930027952	WITHOUT_CLASSIFICATION	2.4069972047343416E-6	DEFECT
// now draw the outlines, if visible...	WITHOUT_CLASSIFICATION	0.9999985812955743	WITHOUT_CLASSIFICATION	1.418704425684229E-6	DEFECT
// now draw the outlines, if visible...	WITHOUT_CLASSIFICATION	0.9999985812955743	WITHOUT_CLASSIFICATION	1.418704425684229E-6	DEFECT
// PlotOrientation.HORIZONTAL	WITHOUT_CLASSIFICATION	0.9999923215320629	WITHOUT_CLASSIFICATION	7.678467937052277E-6	DEFECT
// PlotOrientation.HORIZONTAL	WITHOUT_CLASSIFICATION	0.9999923215320629	WITHOUT_CLASSIFICATION	7.678467937052277E-6	DEFECT
// work out the label anchor point...	WITHOUT_CLASSIFICATION	0.9999989134060421	WITHOUT_CLASSIFICATION	1.0865939578850835E-6	DEFECT
// map a key to the default group	WITHOUT_CLASSIFICATION	0.9999993713211623	WITHOUT_CLASSIFICATION	6.286788375962828E-7	DEFECT
// Add last point @ y=0 for fillPath and close path	WITHOUT_CLASSIFICATION	0.9999998441931344	WITHOUT_CLASSIFICATION	1.5580686561105936E-7	DEFECT
// fill under the curve...	WITHOUT_CLASSIFICATION	0.9999918268391654	WITHOUT_CLASSIFICATION	8.173160834671752E-6	DEFECT
// then draw the line...	WITHOUT_CLASSIFICATION	0.9999851322962393	WITHOUT_CLASSIFICATION	1.4867703760696812E-5	DEFECT
// reset points vector	WITHOUT_CLASSIFICATION	0.9999959780674792	WITHOUT_CLASSIFICATION	4.021932520873387E-6	DEFECT
/*      factorization and forward substitution */	WITHOUT_CLASSIFICATION	0.9999978797227858	WITHOUT_CLASSIFICATION	2.1202772143157184E-6	DEFECT
// now draw the real shape	WITHOUT_CLASSIFICATION	0.9999890498724617	WITHOUT_CLASSIFICATION	1.095012753838301E-5	DEFECT
// should never get here	WITHOUT_CLASSIFICATION	0.9999911771080567	WITHOUT_CLASSIFICATION	8.822891943262094E-6	DEFECT
// 'plot' : just retain reference, not a deep copy	WITHOUT_CLASSIFICATION	0.9999985154862556	WITHOUT_CLASSIFICATION	1.4845137444242911E-6	DEFECT
// just the domain axis...	WITHOUT_CLASSIFICATION	0.99998227353063	WITHOUT_CLASSIFICATION	1.772646936995485E-5	DEFECT
// just the range axis...	WITHOUT_CLASSIFICATION	0.9999511128939723	WITHOUT_CLASSIFICATION	4.888710602773845E-5	DEFECT
// get the label position..	WITHOUT_CLASSIFICATION	0.9999958451067523	WITHOUT_CLASSIFICATION	4.15489324772955E-6	DEFECT
// do nothing if item is not visible	WITHOUT_CLASSIFICATION	0.999976101759915	WITHOUT_CLASSIFICATION	2.3898240084926393E-5	DEFECT
// draw the item label if there is one...	WITHOUT_CLASSIFICATION	0.9999947281087059	WITHOUT_CLASSIFICATION	5.2718912939955195E-6	DEFECT
// collect entity and tool tip information...	WITHOUT_CLASSIFICATION	0.9999933873508787	WITHOUT_CLASSIFICATION	6.6126491212999435E-6	DEFECT
// get the previous data point...	WITHOUT_CLASSIFICATION	0.9999995935095104	WITHOUT_CLASSIFICATION	4.0649048962965434E-7	DEFECT
// Add each point to Area (x, y)	WITHOUT_CLASSIFICATION	0.9999986904153386	WITHOUT_CLASSIFICATION	1.3095846613048212E-6	DEFECT
// vertical orientation	WITHOUT_CLASSIFICATION	0.9999906890814113	WITHOUT_CLASSIFICATION	9.310918588748155E-6	DEFECT
// in the rendering process, there is special handling for item // zero, so we can't support processing of visible data items only	WITHOUT_CLASSIFICATION	0.9999988987787486	WITHOUT_CLASSIFICATION	1.101221251453532E-6	DEFECT
// this represents the situation // for drawing a horizontal bar.	WITHOUT_CLASSIFICATION	0.9999894085004599	WITHOUT_CLASSIFICATION	1.0591499540096799E-5	DEFECT
//this handles the need to perform a 'step'.	WITHOUT_CLASSIFICATION	0.9999860908101046	WITHOUT_CLASSIFICATION	1.3909189895362406E-5	DEFECT
// calculate the step point	WITHOUT_CLASSIFICATION	0.9999989118837662	WITHOUT_CLASSIFICATION	1.0881162337012627E-6	DEFECT
//this handles the need to perform a 'step'. // calculate the step point	WITHOUT_CLASSIFICATION	0.9999988126899219	WITHOUT_CLASSIFICATION	1.187310078154412E-6	DEFECT
// submit this data item as a candidate for the crosshair point	WITHOUT_CLASSIFICATION	0.9999970413643527	WITHOUT_CLASSIFICATION	2.9586356473391056E-6	DEFECT
// create a new area polygon for the series	WITHOUT_CLASSIFICATION	0.9999984312762282	WITHOUT_CLASSIFICATION	1.5687237716596566E-6	DEFECT
// the first point is (x, 0)	WITHOUT_CLASSIFICATION	0.99998230116134	WITHOUT_CLASSIFICATION	1.7698838660020834E-5	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9999994784224214	WITHOUT_CLASSIFICATION	5.21577578463559E-7	DEFECT
// otherwise look up the paint table	WITHOUT_CLASSIFICATION	0.9999992553321589	WITHOUT_CLASSIFICATION	7.446678409402567E-7	DEFECT
// SHAPES FILLED	WITHOUT_CLASSIFICATION	0.9997283453038438	WITHOUT_CLASSIFICATION	2.716546961561474E-4	DEFECT
// return the overall setting, if there is one...	WITHOUT_CLASSIFICATION	0.9999986089323784	WITHOUT_CLASSIFICATION	1.3910676215637986E-6	DEFECT
// draw the outline...	WITHOUT_CLASSIFICATION	0.9999953462164938	WITHOUT_CLASSIFICATION	4.6537835061474705E-6	DEFECT
// && state.getBarWidth() > BAR_OUTLINE_WIDTH_THRESHOLD) {	WITHOUT_CLASSIFICATION	0.9999899952086613	WITHOUT_CLASSIFICATION	1.000479133867585E-5	DEFECT
// no fields to compute...	WITHOUT_CLASSIFICATION	0.9999716654942817	WITHOUT_CLASSIFICATION	2.8334505718203964E-5	DEFECT
// Add the last point (x,0)	WITHOUT_CLASSIFICATION	0.9999990801440636	WITHOUT_CLASSIFICATION	9.198559364544919E-7	DEFECT
// draw an outline around the Area.	WITHOUT_CLASSIFICATION	0.9999905443948912	WITHOUT_CLASSIFICATION	9.455605108841083E-6	DEFECT
// Check if the item is the last item for the series. // and number of items > 0.  We can't draw an area for a single point.	WITHOUT_CLASSIFICATION	0.9999996887184952	WITHOUT_CLASSIFICATION	3.112815047930905E-7	DEFECT
// a new map always has 1 group (the default group)	WITHOUT_CLASSIFICATION	0.9999998110511917	WITHOUT_CLASSIFICATION	1.8894880822018526E-7	DEFECT
// we make the clip region slightly larger than the // dataArea so that the clipped edges don't show lines // on the chart	WITHOUT_CLASSIFICATION	0.9999958739341905	WITHOUT_CLASSIFICATION	4.1260658094827335E-6	DEFECT
// no change	WITHOUT_CLASSIFICATION	0.9999912530547128	WITHOUT_CLASSIFICATION	8.746945287229967E-6	DEFECT
// here we use BooleanUtilities to remain compatible with JDKs < 1.4	WITHOUT_CLASSIFICATION	0.9999168716198135	WITHOUT_CLASSIFICATION	8.312838018660536E-5	DEFECT
// need to make sure we are adding *after* any duplicates	WITHOUT_CLASSIFICATION	0.9999992165180368	WITHOUT_CLASSIFICATION	7.834819632977316E-7	DEFECT
// update the max value	WITHOUT_CLASSIFICATION	0.9999829926207885	WITHOUT_CLASSIFICATION	1.7007379211474652E-5	DEFECT
// only draw if we have good values	WITHOUT_CLASSIFICATION	0.9999987154035068	WITHOUT_CLASSIFICATION	1.2845964930965391E-6	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9999994784224214	WITHOUT_CLASSIFICATION	5.21577578463559E-7	DEFECT
// draw the item label if there is one...	WITHOUT_CLASSIFICATION	0.9999947281087059	WITHOUT_CLASSIFICATION	5.2718912939955195E-6	DEFECT
// handle a special case - if the bar colour has alpha == 0, it is // invisible so we shouldn't draw any shadow	WITHOUT_CLASSIFICATION	0.9999979697716759	WITHOUT_CLASSIFICATION	2.0302283241471223E-6	DEFECT
// get the previous data point...	WITHOUT_CLASSIFICATION	0.9999995935095104	WITHOUT_CLASSIFICATION	4.0649048962965434E-7	DEFECT
// update path to reflect latest point	WITHOUT_CLASSIFICATION	0.9999995905779145	WITHOUT_CLASSIFICATION	4.094220853687375E-7	DEFECT
// draw path	WITHOUT_CLASSIFICATION	0.9999836606050874	WITHOUT_CLASSIFICATION	1.633939491255859E-5	DEFECT
// we are starting a new series path	WITHOUT_CLASSIFICATION	0.9999870610815723	WITHOUT_CLASSIFICATION	1.2938918427629466E-5	DEFECT
// only draw a line if the gap between the current and // previous data point is within the threshold	WITHOUT_CLASSIFICATION	0.9999984928508294	WITHOUT_CLASSIFICATION	1.5071491705756334E-6	DEFECT
// we needed to get this far even for invisible items, to ensure that // seriesPath updates happened, but now there is nothing more we need // to do for non-visible items...	WITHOUT_CLASSIFICATION	0.9997219331265347	WITHOUT_CLASSIFICATION	2.7806687346537137E-4	DEFECT
// this method must be overridden if you want to display images	WITHOUT_CLASSIFICATION	0.9999906963259583	WITHOUT_CLASSIFICATION	9.30367404178884E-6	DEFECT
// draw the upper shadow	WITHOUT_CLASSIFICATION	0.9999873710939322	WITHOUT_CLASSIFICATION	1.2628906067897192E-5	DEFECT
// draw the lower shadow	WITHOUT_CLASSIFICATION	0.9999917637124702	WITHOUT_CLASSIFICATION	8.236287529829407E-6	DEFECT
// draw the body	WITHOUT_CLASSIFICATION	0.9999919837663892	WITHOUT_CLASSIFICATION	8.016233610802693E-6	DEFECT
// add an entity for the item...	WITHOUT_CLASSIFICATION	0.9999731029637465	WITHOUT_CLASSIFICATION	2.6897036253520914E-5	DEFECT
// add an entity for the item...	WITHOUT_CLASSIFICATION	0.9999731029637465	WITHOUT_CLASSIFICATION	2.6897036253520914E-5	DEFECT
// draw the upper shadow	WITHOUT_CLASSIFICATION	0.9999873710939322	WITHOUT_CLASSIFICATION	1.2628906067897192E-5	DEFECT
//////////////////////////////////////////////////////////////////////////// // PROTECTED METHODS // These provide the opportunity to subclass the standard renderer and // create custom effects. ////////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999993331515107	WITHOUT_CLASSIFICATION	6.668484893299545E-7	DEFECT
// draw the lower shadow	WITHOUT_CLASSIFICATION	0.9999917637124702	WITHOUT_CLASSIFICATION	8.236287529829407E-6	DEFECT
// draw the body	WITHOUT_CLASSIFICATION	0.9999919837663892	WITHOUT_CLASSIFICATION	8.016233610802693E-6	DEFECT
// draw median	WITHOUT_CLASSIFICATION	0.9999916791532879	WITHOUT_CLASSIFICATION	8.320846712094045E-6	DEFECT
// draw average - SPECIAL AIMS REQUIREMENT	WITHOUT_CLASSIFICATION	0.9999670710281983	WITHOUT_CLASSIFICATION	3.2928971801627695E-5	DEFECT
// draw average - SPECIAL AIMS REQUIREMENT	WITHOUT_CLASSIFICATION	0.9999670710281983	WITHOUT_CLASSIFICATION	3.2928971801627695E-5	DEFECT
// here we check that the average marker will in fact be visible // before drawing it...	WITHOUT_CLASSIFICATION	0.9999423034301069	WITHOUT_CLASSIFICATION	5.769656989308518E-5	DEFECT
// yOutliers can be null, but we'd prefer it to be an empty list in // that case...	WITHOUT_CLASSIFICATION	0.9998405166878342	WITHOUT_CLASSIFICATION	1.5948331216571028E-4	DEFECT
/* From outlier array sort out which are outliers and put these into         * an arraylist. If there are any farouts, set the flag on the         * OutlierListCollection         */	WITHOUT_CLASSIFICATION	0.9999993889925451	WITHOUT_CLASSIFICATION	6.11007454821117E-7	DEFECT
// draw yOutliers	WITHOUT_CLASSIFICATION	0.9999943407606935	WITHOUT_CLASSIFICATION	5.659239306507705E-6	DEFECT
// draw outliers	WITHOUT_CLASSIFICATION	0.9999970224577143	WITHOUT_CLASSIFICATION	2.9775422857677446E-6	DEFECT
// draw farout	WITHOUT_CLASSIFICATION	0.9999897879228088	WITHOUT_CLASSIFICATION	1.0212077191185845E-5	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999972131066635	WITHOUT_CLASSIFICATION	2.78689333669082E-6	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999972131066635	WITHOUT_CLASSIFICATION	2.78689333669082E-6	DEFECT
// add an entity for the item...	WITHOUT_CLASSIFICATION	0.9999731029637465	WITHOUT_CLASSIFICATION	2.6897036253520914E-5	DEFECT
// get the previous data point...	WITHOUT_CLASSIFICATION	0.9999995935095104	WITHOUT_CLASSIFICATION	4.0649048962965434E-7	DEFECT
// here we check that the average marker will in fact be visible // before drawing it...	WITHOUT_CLASSIFICATION	0.9999423034301069	WITHOUT_CLASSIFICATION	5.769656989308518E-5	DEFECT
/* Number n = */	WITHOUT_CLASSIFICATION	0.9999543006296296	WITHOUT_CLASSIFICATION	4.5699370370331074E-5	DEFECT
// Process outliers. Each outlier is either added to the appropriate // outlier list or a new outlier list is made	WITHOUT_CLASSIFICATION	0.9999977544074868	WITHOUT_CLASSIFICATION	2.2455925131028205E-6	DEFECT
// for item labels, we have a special case because there is the // possibility to draw (a) the regular item label near to just the // upper y-value, or (b) the regular item label near the upper y-value // PLUS an additional item label near the lower y-value.	WITHOUT_CLASSIFICATION	0.9999973221901491	WITHOUT_CLASSIFICATION	2.677809850834001E-6	DEFECT
// If null, don't draw line => then delegate to parent	WITHOUT_CLASSIFICATION	0.9999958666314788	WITHOUT_CLASSIFICATION	4.133368521281142E-6	DEFECT
// If null, don't draw line at all	WITHOUT_CLASSIFICATION	0.9999853722328226	WITHOUT_CLASSIFICATION	1.4627767177283442E-5	DEFECT
// Now split the segment as needed	WITHOUT_CLASSIFICATION	0.9999988318084136	WITHOUT_CLASSIFICATION	1.1681915863904588E-6	DEFECT
// If the segment must be splitted, insert a new point // Strict test forces to have real segments (not 2 equal points) // and avoids division by 0	WITHOUT_CLASSIFICATION	0.9999987765471385	WITHOUT_CLASSIFICATION	1.2234528614735357E-6	DEFECT
// If the line is not wrapping, then parent is OK	WITHOUT_CLASSIFICATION	0.9999081324949851	WITHOUT_CLASSIFICATION	9.186750501478258E-5	DEFECT
// calculate the highest volume in the dataset...	WITHOUT_CLASSIFICATION	0.9999995739451788	WITHOUT_CLASSIFICATION	4.260548211598862E-7	DEFECT
/* Number n = */	WITHOUT_CLASSIFICATION	0.9999543006296296	WITHOUT_CLASSIFICATION	4.5699370370331074E-5	DEFECT
/* Number n = */	WITHOUT_CLASSIFICATION	0.9999543006296296	WITHOUT_CLASSIFICATION	4.5699370370331074E-5	DEFECT
/* Number n = */	WITHOUT_CLASSIFICATION	0.9999543006296296	WITHOUT_CLASSIFICATION	4.5699370370331074E-5	DEFECT
/* Number n = */	WITHOUT_CLASSIFICATION	0.9999543006296296	WITHOUT_CLASSIFICATION	4.5699370370331074E-5	DEFECT
// do nothing if item is not visible	WITHOUT_CLASSIFICATION	0.999976101759915	WITHOUT_CLASSIFICATION	2.3898240084926393E-5	DEFECT
// PlotOrientation.HORIZONTAL	WITHOUT_CLASSIFICATION	0.9999923215320629	WITHOUT_CLASSIFICATION	7.678467937052277E-6	DEFECT
// draw the outline...	WITHOUT_CLASSIFICATION	0.9999953462164938	WITHOUT_CLASSIFICATION	4.6537835061474705E-6	DEFECT
// as a special case, if the bar colour has alpha == 0, we draw // nothing.	WITHOUT_CLASSIFICATION	0.9999996297287322	WITHOUT_CLASSIFICATION	3.70271267678506E-7	DEFECT
// update path to reflect latest point	WITHOUT_CLASSIFICATION	0.9999995905779145	WITHOUT_CLASSIFICATION	4.094220853687375E-7	DEFECT
// if this is the last item, draw the path ...	WITHOUT_CLASSIFICATION	0.9999588624719674	WITHOUT_CLASSIFICATION	4.1137528032582065E-5	DEFECT
// draw path	WITHOUT_CLASSIFICATION	0.9999836606050874	WITHOUT_CLASSIFICATION	1.633939491255859E-5	DEFECT
// transpose the dimensions, because the title is rotated	WITHOUT_CLASSIFICATION	0.9999972752186611	WITHOUT_CLASSIFICATION	2.7247813389128474E-6	DEFECT
// The split may occur in either x splitted segments, if any, but // not in both	WITHOUT_CLASSIFICATION	0.9999894356094957	WITHOUT_CLASSIFICATION	1.0564390504369691E-5	DEFECT
// the x value is not within the axis range	WITHOUT_CLASSIFICATION	0.9998789737003715	WITHOUT_CLASSIFICATION	1.2102629962846272E-4	DEFECT
// not a HighLowDataset, so just draw a line connecting this point // with the previous point...	WITHOUT_CLASSIFICATION	0.9999984659243459	WITHOUT_CLASSIFICATION	1.5340756541657487E-6	DEFECT
// include the interval if there is one	WITHOUT_CLASSIFICATION	0.9999925844200963	WITHOUT_CLASSIFICATION	7.415579903741316E-6	DEFECT
// include the interval if there is one	WITHOUT_CLASSIFICATION	0.9999925844200963	WITHOUT_CLASSIFICATION	7.415579903741316E-6	DEFECT
// draw the error bar for the x-interval	WITHOUT_CLASSIFICATION	0.9999827743086327	WITHOUT_CLASSIFICATION	1.7225691367220494E-5	DEFECT
// draw the error bar for the y-interval	WITHOUT_CLASSIFICATION	0.9999877744267047	WITHOUT_CLASSIFICATION	1.2225573295385405E-5	DEFECT
//domainGridlinePaint;	WITHOUT_CLASSIFICATION	0.9999542579281417	WITHOUT_CLASSIFICATION	4.5742071858294634E-5	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9999994784224214	WITHOUT_CLASSIFICATION	5.21577578463559E-7	DEFECT
// add an entity for the item...	WITHOUT_CLASSIFICATION	0.9999731029637465	WITHOUT_CLASSIFICATION	2.6897036253520914E-5	DEFECT
// get the previous point and the next point so we can calculate a // "hot spot" for the area (used by the chart entity)...	WITHOUT_CLASSIFICATION	0.9999997874120852	WITHOUT_CLASSIFICATION	2.125879147197713E-7	DEFECT
// do nothing if item is not visible	WITHOUT_CLASSIFICATION	0.999976101759915	WITHOUT_CLASSIFICATION	2.3898240084926393E-5	DEFECT
// no new methods	WITHOUT_CLASSIFICATION	0.9999931443932146	WITHOUT_CLASSIFICATION	6.855606785429192E-6	DEFECT
// set the default item label positions, which will only be used if // the user requests visible item labels...	WITHOUT_CLASSIFICATION	0.9999992277093855	WITHOUT_CLASSIFICATION	7.722906145127226E-7	DEFECT
// handle item label drawing, now that we know all the bars have // been drawn...	WITHOUT_CLASSIFICATION	0.9999530740921769	WITHOUT_CLASSIFICATION	4.6925907823097744E-5	DEFECT
// if the renderer isn't assigned to a plot, then we don't have a // dataset...	WITHOUT_CLASSIFICATION	0.99999016337937	WITHOUT_CLASSIFICATION	9.83662062996939E-6	DEFECT
//initalize xValues, yValues, and zValues arrays.	WITHOUT_CLASSIFICATION	0.99998452446137	WITHOUT_CLASSIFICATION	1.5475538630047414E-5	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9999994784224214	WITHOUT_CLASSIFICATION	5.21577578463559E-7	DEFECT
// add an entity for the item...	WITHOUT_CLASSIFICATION	0.9999731029637465	WITHOUT_CLASSIFICATION	2.6897036253520914E-5	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999792375281624	WITHOUT_CLASSIFICATION	2.0762471837648883E-5	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999792375281624	WITHOUT_CLASSIFICATION	2.0762471837648883E-5	DEFECT
// handle positive value	WITHOUT_CLASSIFICATION	0.9999875710049135	WITHOUT_CLASSIFICATION	1.2428995086396589E-5	DEFECT
// LEFT POLYGON	WITHOUT_CLASSIFICATION	0.9999230185137947	WITHOUT_CLASSIFICATION	7.698148620526194E-5	DEFECT
// RIGHT POLYGON	WITHOUT_CLASSIFICATION	0.9999606204218678	WITHOUT_CLASSIFICATION	3.9379578132127055E-5	DEFECT
// RIGHT POLYGON	WITHOUT_CLASSIFICATION	0.9999606204218678	WITHOUT_CLASSIFICATION	3.9379578132127055E-5	DEFECT
// handle negative value	WITHOUT_CLASSIFICATION	0.9999849211218143	WITHOUT_CLASSIFICATION	1.5078878185837355E-5	DEFECT
// clip left and right bounds to data area	WITHOUT_CLASSIFICATION	0.9999984683113037	WITHOUT_CLASSIFICATION	1.5316886963955296E-6	DEFECT
// clip top and bottom bounds to data area	WITHOUT_CLASSIFICATION	0.9999975930027952	WITHOUT_CLASSIFICATION	2.4069972047343416E-6	DEFECT
// work out the label anchor point...	WITHOUT_CLASSIFICATION	0.9999989134060421	WITHOUT_CLASSIFICATION	1.0865939578850835E-6	DEFECT
//  Get series Paint and Stroke	WITHOUT_CLASSIFICATION	0.999996872261851	WITHOUT_CLASSIFICATION	3.127738148968808E-6	DEFECT
/* Number n = */	WITHOUT_CLASSIFICATION	0.9999543006296296	WITHOUT_CLASSIFICATION	4.5699370370331074E-5	DEFECT
// is there an alignment adjustment to be made?	WITHOUT_CLASSIFICATION	0.998476601199155	WITHOUT_CLASSIFICATION	0.0015233988008448837	DEFECT
// update the crosshair point	WITHOUT_CLASSIFICATION	0.9999985578393243	WITHOUT_CLASSIFICATION	1.4421606757393968E-6	DEFECT
// calculate the maximum allowed candle width from the axis...	WITHOUT_CLASSIFICATION	0.9999967245505413	WITHOUT_CLASSIFICATION	3.2754494586529117E-6	DEFECT
// Absolute value, since the relative x // positions are reversed for horizontal orientation	WITHOUT_CLASSIFICATION	0.999978726009477	WITHOUT_CLASSIFICATION	2.1273990522964504E-5	DEFECT
/* Number n = */	WITHOUT_CLASSIFICATION	0.9999543006296296	WITHOUT_CLASSIFICATION	4.5699370370331074E-5	DEFECT
// pdfDocument class will be null so the function will return false	WITHOUT_CLASSIFICATION	0.9999990660804754	WITHOUT_CLASSIFICATION	9.339195245920414E-7	DEFECT
// add an entity for the item...	WITHOUT_CLASSIFICATION	0.9999731029637465	WITHOUT_CLASSIFICATION	2.6897036253520914E-5	DEFECT
// draw the upper shadow	WITHOUT_CLASSIFICATION	0.9999873710939322	WITHOUT_CLASSIFICATION	1.2628906067897192E-5	DEFECT
// draw the lower shadow	WITHOUT_CLASSIFICATION	0.9999917637124702	WITHOUT_CLASSIFICATION	8.236287529829407E-6	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999792375281624	WITHOUT_CLASSIFICATION	2.0762471837648883E-5	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999792375281624	WITHOUT_CLASSIFICATION	2.0762471837648883E-5	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999792375281624	WITHOUT_CLASSIFICATION	2.0762471837648883E-5	DEFECT
// draw the body	WITHOUT_CLASSIFICATION	0.9999919837663892	WITHOUT_CLASSIFICATION	8.016233610802693E-6	DEFECT
// this won't happen :)	WITHOUT_CLASSIFICATION	0.9990039512459058	WITHOUT_CLASSIFICATION	9.960487540942337E-4	DEFECT
// --- DEPRECATED CODE ----------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999192520213381	WITHOUT_CLASSIFICATION	8.074797866187366E-5	DEFECT
// create the temporary directory if it doesn't exist	WITHOUT_CLASSIFICATION	0.9999984061846996	WITHOUT_CLASSIFICATION	1.5938153003510345E-6	DEFECT
//  Add chart to deletion list in session	WITHOUT_CLASSIFICATION	0.9999990295028945	WITHOUT_CLASSIFICATION	9.704971054179445E-7	DEFECT
//  Set HTTP headers	WITHOUT_CLASSIFICATION	0.9999677528864306	WITHOUT_CLASSIFICATION	3.2247113569455074E-5	DEFECT
//  Replace ".." with "" //  This is to prevent access to the rest of the file system	WITHOUT_CLASSIFICATION	0.9999966251524381	WITHOUT_CLASSIFICATION	3.3748475619397868E-6	DEFECT
//  Check the file exists	WITHOUT_CLASSIFICATION	0.9999958092625036	WITHOUT_CLASSIFICATION	4.1907374963800815E-6	DEFECT
//  Serve it up	WITHOUT_CLASSIFICATION	0.9999706239977472	WITHOUT_CLASSIFICATION	2.937600225283128E-5	DEFECT
// draw the block without collecting entities	WITHOUT_CLASSIFICATION	0.999998495523922	WITHOUT_CLASSIFICATION	1.5044760781598156E-6	DEFECT
// RectangleInsets is immutable => same reference in clone OK	WITHOUT_CLASSIFICATION	0.9999954640744474	WITHOUT_CLASSIFICATION	4.5359255525625785E-6	DEFECT
// suppress compiler warning	WITHOUT_CLASSIFICATION	0.9999955700505305	WITHOUT_CLASSIFICATION	4.4299494695147185E-6	DEFECT
// suppress compiler warning	WITHOUT_CLASSIFICATION	0.9999955700505305	WITHOUT_CLASSIFICATION	4.4299494695147185E-6	DEFECT
// determine the space required for the axis	WITHOUT_CLASSIFICATION	0.9999990726888887	WITHOUT_CLASSIFICATION	9.273111113959676E-7	DEFECT
// transpose the dimensions, because the title is rotated	WITHOUT_CLASSIFICATION	0.9999972752186611	WITHOUT_CLASSIFICATION	2.7247813389128474E-6	DEFECT
// basic check for independence	WITHOUT_CLASSIFICATION	0.9999982324433815	WITHOUT_CLASSIFICATION	1.7675566185757327E-6	DEFECT
// don't bother with parsing	WITHOUT_CLASSIFICATION	0.9999563496098341	WITHOUT_CLASSIFICATION	4.3650390165841676E-5	DEFECT
// don't bother with parsing	WITHOUT_CLASSIFICATION	0.9999563496098341	WITHOUT_CLASSIFICATION	4.3650390165841676E-5	DEFECT
// no need to instantiate this class   	WITHOUT_CLASSIFICATION	0.9999937641166049	WITHOUT_CLASSIFICATION	6.235883395110949E-6	DEFECT
//yAdj = -descent - leading + (float) bounds.getHeight();	WITHOUT_CLASSIFICATION	0.9999983584197268	WITHOUT_CLASSIFICATION	1.641580273102065E-6	DEFECT
// svgClass will be null so the function will return false	WITHOUT_CLASSIFICATION	0.9999988477884119	WITHOUT_CLASSIFICATION	1.1522115881853059E-6	DEFECT
// basic check for independence	WITHOUT_CLASSIFICATION	0.9999982324433815	WITHOUT_CLASSIFICATION	1.7675566185757327E-6	DEFECT
// basic check for independence	WITHOUT_CLASSIFICATION	0.9999982324433815	WITHOUT_CLASSIFICATION	1.7675566185757327E-6	DEFECT
// basic check for independence	WITHOUT_CLASSIFICATION	0.9999982324433815	WITHOUT_CLASSIFICATION	1.7675566185757327E-6	DEFECT
// argument checking delegated...	WITHOUT_CLASSIFICATION	0.9999990939505744	WITHOUT_CLASSIFICATION	9.060494255698959E-7	DEFECT
// don't bother with parsing	WITHOUT_CLASSIFICATION	0.9999563496098341	WITHOUT_CLASSIFICATION	4.3650390165841676E-5	DEFECT
// standard ResourceBundle behaviour	WITHOUT_CLASSIFICATION	0.9999995666949179	WITHOUT_CLASSIFICATION	4.333050820912516E-7	DEFECT
// update (x1, y1), (x2, y2) and f1 and f2 using intersections // then recheck	WITHOUT_CLASSIFICATION	0.999998386646799	WITHOUT_CLASSIFICATION	1.6133532009368114E-6	DEFECT
// first point is outside, so we update it against one of the // four sides then continue	WITHOUT_CLASSIFICATION	0.9999967003227045	WITHOUT_CLASSIFICATION	3.299677295586436E-6	DEFECT
// second point is outside, so we update it against one of the // four sides then continue	WITHOUT_CLASSIFICATION	0.9999982746715728	WITHOUT_CLASSIFICATION	1.725328427165785E-6	DEFECT
// the line is visible - if it wasn't, we'd have // returned false from within the while loop above	WITHOUT_CLASSIFICATION	0.9999933384559168	WITHOUT_CLASSIFICATION	6.66154408321459E-6	DEFECT
/*                 * Lots can go wrong while fiddling with Images, Color Models                 * & such!  If anything at all goes awry, just return the original                 * TexturePaint.  (TexturePaint's are immutable anyway, so no harm                 * done)                 */	WITHOUT_CLASSIFICATION	0.999997990630311	WITHOUT_CLASSIFICATION	2.009369688945159E-6	DEFECT
/* Placeholder */	WITHOUT_CLASSIFICATION	0.9999907343202576	WITHOUT_CLASSIFICATION	9.265679742447566E-6	DEFECT
/**/	WITHOUT_CLASSIFICATION	0.9992607240026428	WITHOUT_CLASSIFICATION	7.392759973571688E-4	DEFECT
/**/	WITHOUT_CLASSIFICATION	0.9992607240026428	WITHOUT_CLASSIFICATION	7.392759973571688E-4	DEFECT
/**/	WITHOUT_CLASSIFICATION	0.9992607240026428	WITHOUT_CLASSIFICATION	7.392759973571688E-4	DEFECT
/* (pix-buffer is large enough for all pixels of one row) */	WITHOUT_CLASSIFICATION	0.9999272541855	WITHOUT_CLASSIFICATION	7.27458145000249E-5	DEFECT
// RGB (+ optional Alpha which we leave // unchanged)	WITHOUT_CLASSIFICATION	0.9999975550647684	WITHOUT_CLASSIFICATION	2.444935231635351E-6	DEFECT
// Red // Green // Blue. Now map computed colour to // nearest in Palette...	WITHOUT_CLASSIFICATION	0.999991972852449	WITHOUT_CLASSIFICATION	8.027147550935999E-6	DEFECT
// Red // Green // Blue	WITHOUT_CLASSIFICATION	0.9999612573100213	WITHOUT_CLASSIFICATION	3.8742689978734476E-5	DEFECT
/* Ignore alpha-channel -> */	WITHOUT_CLASSIFICATION	0.9999954333958044	WITHOUT_CLASSIFICATION	4.566604195533958E-6	DEFECT
// <- this is the code that actually COPIES the pixels	WITHOUT_CLASSIFICATION	0.9996455405508899	WITHOUT_CLASSIFICATION	3.544594491100752E-4	DEFECT
/*         * Buffered Images may have properties, but NEVER disclose them!         * Nevertheless, just in case someone implements getPropertyNames()         * one day...         */	WITHOUT_CLASSIFICATION	0.9999989862500822	WITHOUT_CLASSIFICATION	1.0137499177852851E-6	DEFECT
// ALWAYS null	WITHOUT_CLASSIFICATION	0.9999736124744518	WITHOUT_CLASSIFICATION	2.6387525548176745E-5	DEFECT
// all methods are static, no need to instantiate	WITHOUT_CLASSIFICATION	0.9999931229623629	WITHOUT_CLASSIFICATION	6.877037637149027E-6	DEFECT
// substitute the filtered URL list	WITHOUT_CLASSIFICATION	0.9999985316537099	WITHOUT_CLASSIFICATION	1.468346290163428E-6	DEFECT
// adjust text bounds to match string position	WITHOUT_CLASSIFICATION	0.9999879085633624	WITHOUT_CLASSIFICATION	1.2091436637693304E-5	DEFECT
// horizontal pass	WITHOUT_CLASSIFICATION	0.9999945019637058	WITHOUT_CLASSIFICATION	5.498036294220742E-6	DEFECT
// substract the oldest pixel from the sum	WITHOUT_CLASSIFICATION	0.9999979687232723	WITHOUT_CLASSIFICATION	2.0312767277274716E-6	DEFECT
// substract the oldest pixel from the sum	WITHOUT_CLASSIFICATION	0.9999979687232723	WITHOUT_CLASSIFICATION	2.0312767277274716E-6	DEFECT
// get the lastest pixel	WITHOUT_CLASSIFICATION	0.9999966589753032	WITHOUT_CLASSIFICATION	3.3410246967801293E-6	DEFECT
// get the lastest pixel	WITHOUT_CLASSIFICATION	0.9999966589753032	WITHOUT_CLASSIFICATION	3.3410246967801293E-6	DEFECT
// vertical pass	WITHOUT_CLASSIFICATION	0.9999961351324619	WITHOUT_CLASSIFICATION	3.8648675381051395E-6	DEFECT
//get the coordinates of the original GradientPaint	WITHOUT_CLASSIFICATION	0.9999988792777033	WITHOUT_CLASSIFICATION	1.120722296804676E-6	DEFECT
//get the coordinates of the shape that is to be filled	WITHOUT_CLASSIFICATION	0.9999885110397888	WITHOUT_CLASSIFICATION	1.1488960211208665E-5	DEFECT
//reserve variables to store the coordinates of the resulting GradientPaint	WITHOUT_CLASSIFICATION	0.9999978495085841	WITHOUT_CLASSIFICATION	2.1504914159427475E-6	DEFECT
//start point is upper left corner	WITHOUT_CLASSIFICATION	0.9999778942452477	WITHOUT_CLASSIFICATION	2.2105754752252636E-5	DEFECT
//end point is lower right corner --> diagonal gradient	WITHOUT_CLASSIFICATION	0.999995505615004	WITHOUT_CLASSIFICATION	4.4943849959093775E-6	DEFECT
//start point is lower left right corner --> diagonal gradient	WITHOUT_CLASSIFICATION	0.9999968617028597	WITHOUT_CLASSIFICATION	3.1382971403607737E-6	DEFECT
// delegate argument checking to XYDataItem...	WITHOUT_CLASSIFICATION	0.9999989946334619	WITHOUT_CLASSIFICATION	1.0053665381310632E-6	DEFECT
//end point is either lower left corner --> vertical gradient //or end point is upper right corner --> horizontal gradient	WITHOUT_CLASSIFICATION	0.9999963694193027	WITHOUT_CLASSIFICATION	3.6305806973838226E-6	DEFECT
// can't allow duplicate values, so we need to check whether // there is an item with the given x-value already	WITHOUT_CLASSIFICATION	0.9999436970712399	WITHOUT_CLASSIFICATION	5.6302928760136565E-5	DEFECT
// it is too slow to look at every data item, so let's just look at // the first, middle and last items...	WITHOUT_CLASSIFICATION	0.9999930120844406	WITHOUT_CLASSIFICATION	6.987915559350112E-6	DEFECT
// CASE 1 : Comparing to another ComparableObjectItem object // ---------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999876507743276	WITHOUT_CLASSIFICATION	1.2349225672374217E-5	DEFECT
// CASE 2 : Comparing to a general object // ---------------------------------------------	WITHOUT_CLASSIFICATION	0.9999750266426016	WITHOUT_CLASSIFICATION	2.497335739834168E-5	DEFECT
// consider these to be ordered after general objects	WITHOUT_CLASSIFICATION	0.9999972532303698	WITHOUT_CLASSIFICATION	2.74676963014562E-6	DEFECT
// the row may not have an entry for this key, in which case the // return value is null	WITHOUT_CLASSIFICATION	0.9999490464047266	WITHOUT_CLASSIFICATION	5.09535952734317E-5	DEFECT
// check that the column key is defined in the 2D structure	WITHOUT_CLASSIFICATION	0.9999983461941392	WITHOUT_CLASSIFICATION	1.6538058608862633E-6	DEFECT
// 1. check whether the row is now empty.	WITHOUT_CLASSIFICATION	0.9999690983986207	WITHOUT_CLASSIFICATION	3.0901601379328694E-5	DEFECT
// 1. check whether the row is now empty.	WITHOUT_CLASSIFICATION	0.9999690983986207	WITHOUT_CLASSIFICATION	3.0901601379328694E-5	DEFECT
// 2. check whether the column is now empty.	WITHOUT_CLASSIFICATION	0.9999855087107241	WITHOUT_CLASSIFICATION	1.4491289275947552E-5	DEFECT
// 2. check whether the column is now empty.	WITHOUT_CLASSIFICATION	0.9999855087107241	WITHOUT_CLASSIFICATION	1.4491289275947552E-5	DEFECT
//int columnIndex = getColumnIndex(columnKey);	WITHOUT_CLASSIFICATION	0.9999869531120059	WITHOUT_CLASSIFICATION	1.3046887994096625E-5	DEFECT
// for the keys, a shallow copy should be fine because keys // should be immutable...	WITHOUT_CLASSIFICATION	0.9999994780427484	WITHOUT_CLASSIFICATION	5.219572515797576E-7	DEFECT
// but the row data requires a deep copy	WITHOUT_CLASSIFICATION	0.9999963718151756	WITHOUT_CLASSIFICATION	3.628184824335821E-6	DEFECT
// already know 'a' isn't null	WITHOUT_CLASSIFICATION	0.9998820106394404	WITHOUT_CLASSIFICATION	1.1798936055964408E-4	DEFECT
// defer null argument check	WITHOUT_CLASSIFICATION	0.9999971820498895	WITHOUT_CLASSIFICATION	2.8179501105238027E-6	DEFECT
// defer null argument check	WITHOUT_CLASSIFICATION	0.9999971820498895	WITHOUT_CLASSIFICATION	2.8179501105238027E-6	DEFECT
// this will include the case where the underlying dataset is null	WITHOUT_CLASSIFICATION	0.9998106420866961	WITHOUT_CLASSIFICATION	1.8935791330387152E-4	DEFECT
// this includes the case where the underlying dataset is null	WITHOUT_CLASSIFICATION	0.999934640377444	WITHOUT_CLASSIFICATION	6.535962255610212E-5	DEFECT
// we didn't find the key	WITHOUT_CLASSIFICATION	0.9999805712568326	WITHOUT_CLASSIFICATION	1.942874316739825E-5	DEFECT
// set up the category names...	WITHOUT_CLASSIFICATION	0.9999991200306596	WITHOUT_CLASSIFICATION	8.79969340340836E-7	DEFECT
// check arguments...	WITHOUT_CLASSIFICATION	0.9999925711977432	WITHOUT_CLASSIFICATION	7.428802256735759E-6	DEFECT
// fetch the value...	WITHOUT_CLASSIFICATION	0.9999818849744144	WITHOUT_CLASSIFICATION	1.8115025585612014E-5	DEFECT
// does the series exist?	WITHOUT_CLASSIFICATION	0.9999485551772835	WITHOUT_CLASSIFICATION	5.1444822716610784E-5	DEFECT
// does the series exist?	WITHOUT_CLASSIFICATION	0.9999485551772835	WITHOUT_CLASSIFICATION	5.1444822716610784E-5	DEFECT
// is the category valid?	WITHOUT_CLASSIFICATION	0.999689230196078	WITHOUT_CLASSIFICATION	3.1076980392200906E-4	DEFECT
// update the data...	WITHOUT_CLASSIFICATION	0.9999855453520707	WITHOUT_CLASSIFICATION	1.445464792920194E-5	DEFECT
// update the data...	WITHOUT_CLASSIFICATION	0.9999855453520707	WITHOUT_CLASSIFICATION	1.445464792920194E-5	DEFECT
// no additional methods required	WITHOUT_CLASSIFICATION	0.9999973571092926	WITHOUT_CLASSIFICATION	2.6428907073024234E-6	DEFECT
// Find min, max for the x and y axes	WITHOUT_CLASSIFICATION	0.9999957362303501	WITHOUT_CLASSIFICATION	4.263769649836419E-6	DEFECT
// Determine the cell size	WITHOUT_CLASSIFICATION	0.9999904181656462	WITHOUT_CLASSIFICATION	9.581834353798356E-6	DEFECT
// Generate the grid	WITHOUT_CLASSIFICATION	0.99998763801271	WITHOUT_CLASSIFICATION	1.2361987289893984E-5	DEFECT
// Map the nongrid data into the new regular grid	WITHOUT_CLASSIFICATION	0.9999993296244168	WITHOUT_CLASSIFICATION	6.703755831816603E-7	DEFECT
// scale by the inverse of distance^power	WITHOUT_CLASSIFICATION	0.9999995765723322	WITHOUT_CLASSIFICATION	4.234276677827079E-7	DEFECT
//remove distance of the sum	WITHOUT_CLASSIFICATION	0.9999980373279003	WITHOUT_CLASSIFICATION	1.9626720996590157E-6	DEFECT
// defer null argument check	WITHOUT_CLASSIFICATION	0.9999971820498895	WITHOUT_CLASSIFICATION	2.8179501105238027E-6	DEFECT
// we didn't find the key	WITHOUT_CLASSIFICATION	0.9999805712568326	WITHOUT_CLASSIFICATION	1.942874316739825E-5	DEFECT
// handle the special case where the dataset has y-intervals that // we want to measure	WITHOUT_CLASSIFICATION	0.9999993493492765	WITHOUT_CLASSIFICATION	6.506507236309575E-7	DEFECT
// the CategoryDataset interface expects a list of categories, but // we've stored them in an array...	WITHOUT_CLASSIFICATION	0.9999970404906215	WITHOUT_CLASSIFICATION	2.959509378504582E-6	DEFECT
// the CategoryDataset interface expects a list of series, but // we've stored them in an array...	WITHOUT_CLASSIFICATION	0.9999964649469972	WITHOUT_CLASSIFICATION	3.5350530027152103E-6	DEFECT
// if d is real small set the inverse to a large number // to avoid INF	WITHOUT_CLASSIFICATION	0.9999949020602339	WITHOUT_CLASSIFICATION	5.097939766163321E-6	DEFECT
//store data as Long	WITHOUT_CLASSIFICATION	0.9999935160286356	WITHOUT_CLASSIFICATION	6.483971364344167E-6	DEFECT
// store Number as Double	WITHOUT_CLASSIFICATION	0.9999937223498911	WITHOUT_CLASSIFICATION	6.277650108842953E-6	DEFECT
// check if starting new column	WITHOUT_CLASSIFICATION	0.9999996136200529	WITHOUT_CLASSIFICATION	3.8637994708297986E-7	DEFECT
//store index where new //column starts	WITHOUT_CLASSIFICATION	0.9999831780126485	WITHOUT_CLASSIFICATION	1.682198735155371E-5	DEFECT
// set x to most recent value	WITHOUT_CLASSIFICATION	0.9999971265308366	WITHOUT_CLASSIFICATION	2.873469163331601E-6	DEFECT
// create array xIndex to hold // new column indices	WITHOUT_CLASSIFICATION	0.9999900329109594	WITHOUT_CLASSIFICATION	9.967089040511512E-6	DEFECT
// store y and z axes // as Doubles	WITHOUT_CLASSIFICATION	0.999998734156041	WITHOUT_CLASSIFICATION	1.2658439589696416E-6	DEFECT
// calculate constant values	WITHOUT_CLASSIFICATION	0.9999941884515068	WITHOUT_CLASSIFICATION	5.81154849325865E-6	DEFECT
// look for any keys that we don't already know about...	WITHOUT_CLASSIFICATION	0.9997528864897899	WITHOUT_CLASSIFICATION	2.4711351021015166E-4	DEFECT
// fetch the series, remove the change listener, then remove the series.	WITHOUT_CLASSIFICATION	0.9999987440213355	WITHOUT_CLASSIFICATION	1.2559786644957377E-6	DEFECT
// remove all the series from the collection and notify listeners.	WITHOUT_CLASSIFICATION	0.9999981563014735	WITHOUT_CLASSIFICATION	1.84369852649686E-6	DEFECT
//step through all the values and add them to the hash	WITHOUT_CLASSIFICATION	0.9999968286361122	WITHOUT_CLASSIFICATION	3.17136388781028E-6	DEFECT
// no new methods required	WITHOUT_CLASSIFICATION	0.9999967150037463	WITHOUT_CLASSIFICATION	3.2849962537121728E-6	DEFECT
// can't find any differences	WITHOUT_CLASSIFICATION	0.9999904159259834	WITHOUT_CLASSIFICATION	9.584074016670634E-6	DEFECT
// now try to instantiate this ;-)	WITHOUT_CLASSIFICATION	0.9999619571418696	WITHOUT_CLASSIFICATION	3.804285813032664E-5	DEFECT
//  Create new dataset with keys above threshold percentThreshold	WITHOUT_CLASSIFICATION	0.9999948716849417	WITHOUT_CLASSIFICATION	5.128315058200449E-6	DEFECT
//  Do not add key to dataset	WITHOUT_CLASSIFICATION	0.9999788336128363	WITHOUT_CLASSIFICATION	2.1166387163662353E-5	DEFECT
//  Add key to dataset	WITHOUT_CLASSIFICATION	0.9999940689028225	WITHOUT_CLASSIFICATION	5.931097177533452E-6	DEFECT
//  Add other category if applicable	WITHOUT_CLASSIFICATION	0.9999987537135225	WITHOUT_CLASSIFICATION	1.24628647755041E-6	DEFECT
// now do the work...	WITHOUT_CLASSIFICATION	0.9999722796263318	WITHOUT_CLASSIFICATION	2.7720373668254717E-5	DEFECT
// if the dataset implements DomainInfo, life is easier	WITHOUT_CLASSIFICATION	0.9999953664998253	WITHOUT_CLASSIFICATION	4.633500174728246E-6	DEFECT
// handle the standard case (plain CategoryDataset)	WITHOUT_CLASSIFICATION	0.999999783820791	WITHOUT_CLASSIFICATION	2.161792090250149E-7	DEFECT
// update the min value	WITHOUT_CLASSIFICATION	0.9999914780325412	WITHOUT_CLASSIFICATION	8.521967458832981E-6	DEFECT
// handle the standard case (plain CategoryDataset)	WITHOUT_CLASSIFICATION	0.999999783820791	WITHOUT_CLASSIFICATION	2.161792090250149E-7	DEFECT
/////////////////////////////////////////////////////////////////////////// // From SeriesDataset ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999690720033639	WITHOUT_CLASSIFICATION	3.092799663594561E-5	DEFECT
/////////////////////////////////////////////////////////////////////////// // From XYDataset ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999747219740382	WITHOUT_CLASSIFICATION	2.5278025961803617E-5	DEFECT
/////////////////////////////////////////////////////////////////////////// // From HighLowDataset ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999932744887488	WITHOUT_CLASSIFICATION	6.725511251279597E-6	DEFECT
/////////////////////////////////////////////////////////////////////////// // From IntervalXYDataset ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999909746956751	WITHOUT_CLASSIFICATION	9.025304324983424E-6	DEFECT
/////////////////////////////////////////////////////////////////////////// // New methods from CombinationDataset ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999978990824125	WITHOUT_CLASSIFICATION	2.1009175874896698E-6	DEFECT
/////////////////////////////////////////////////////////////////////////// // New Methods ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999840317248574	WITHOUT_CLASSIFICATION	1.5968275142664125E-5	DEFECT
/////////////////////////////////////////////////////////////////////////// // Private ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999860852344015	WITHOUT_CLASSIFICATION	1.3914765598402233E-5	DEFECT
// handle the special case where the dataset has y-intervals that // we want to measure	WITHOUT_CLASSIFICATION	0.9999993493492765	WITHOUT_CLASSIFICATION	6.506507236309575E-7	DEFECT
// handle three cases by dataset type	WITHOUT_CLASSIFICATION	0.999998167914183	WITHOUT_CLASSIFICATION	1.8320858170257414E-6	DEFECT
// handle three cases by dataset type	WITHOUT_CLASSIFICATION	0.999998167914183	WITHOUT_CLASSIFICATION	1.8320858170257414E-6	DEFECT
// handle special case of IntervalXYDataset	WITHOUT_CLASSIFICATION	0.9999996248503265	WITHOUT_CLASSIFICATION	3.751496735544252E-7	DEFECT
// handle special case of IntervalXYDataset	WITHOUT_CLASSIFICATION	0.9999996248503265	WITHOUT_CLASSIFICATION	3.751496735544252E-7	DEFECT
// handle special case of IntervalXYDataset	WITHOUT_CLASSIFICATION	0.9999996248503265	WITHOUT_CLASSIFICATION	3.751496735544252E-7	DEFECT
// handle special case of OHLCDataset	WITHOUT_CLASSIFICATION	0.9999996045232898	WITHOUT_CLASSIFICATION	3.9547671022110347E-7	DEFECT
// handle special case of OHLCDataset	WITHOUT_CLASSIFICATION	0.9999996045232898	WITHOUT_CLASSIFICATION	3.9547671022110347E-7	DEFECT
// standard case - plain XYDataset	WITHOUT_CLASSIFICATION	0.9999995077396918	WITHOUT_CLASSIFICATION	4.922603081412215E-7	DEFECT
// standard case - plain XYDataset	WITHOUT_CLASSIFICATION	0.9999995077396918	WITHOUT_CLASSIFICATION	4.922603081412215E-7	DEFECT
// handle special case of BoxAndWhiskerXYDataset	WITHOUT_CLASSIFICATION	0.9999991060418936	WITHOUT_CLASSIFICATION	8.939581065153163E-7	DEFECT
// if the dataset implements DomainInfo, life is easy	WITHOUT_CLASSIFICATION	0.9999957417066961	WITHOUT_CLASSIFICATION	4.25829330385369E-6	DEFECT
// if the dataset implements DomainInfo, life is easy	WITHOUT_CLASSIFICATION	0.9999957417066961	WITHOUT_CLASSIFICATION	4.25829330385369E-6	DEFECT
// hasn't implemented DomainInfo, so iterate...	WITHOUT_CLASSIFICATION	0.999994022749414	WITHOUT_CLASSIFICATION	5.977250585995737E-6	DEFECT
// hasn't implemented RangeInfo, so we'll have to iterate...	WITHOUT_CLASSIFICATION	0.9999945512512878	WITHOUT_CLASSIFICATION	5.448748712254864E-6	DEFECT
// hasn't implemented RangeInfo, so we'll have to iterate...	WITHOUT_CLASSIFICATION	0.9999945512512878	WITHOUT_CLASSIFICATION	5.448748712254864E-6	DEFECT
// work out the minimum value...	WITHOUT_CLASSIFICATION	0.9999940943340928	WITHOUT_CLASSIFICATION	5.9056659071376566E-6	DEFECT
// work out the minimum value...	WITHOUT_CLASSIFICATION	0.9999940943340928	WITHOUT_CLASSIFICATION	5.9056659071376566E-6	DEFECT
// work out the minimum value...	WITHOUT_CLASSIFICATION	0.9999940943340928	WITHOUT_CLASSIFICATION	5.9056659071376566E-6	DEFECT
// '+', remember value is negative	WITHOUT_CLASSIFICATION	0.9999870913587322	WITHOUT_CLASSIFICATION	1.2908641267819313E-5	DEFECT
// create an array holding the group indices for each series...	WITHOUT_CLASSIFICATION	0.9999985065185353	WITHOUT_CLASSIFICATION	1.4934814647152552E-6	DEFECT
// minimum and maximum for each group...	WITHOUT_CLASSIFICATION	0.9999981854929544	WITHOUT_CLASSIFICATION	1.814507045601624E-6	DEFECT
// no new methods	WITHOUT_CLASSIFICATION	0.9999931443932146	WITHOUT_CLASSIFICATION	6.855606785429192E-6	DEFECT
// no new methods	WITHOUT_CLASSIFICATION	0.9999931443932146	WITHOUT_CLASSIFICATION	6.855606785429192E-6	DEFECT
// we'll set this to false if there is at // least one non-null data item...	WITHOUT_CLASSIFICATION	0.9999599821133225	WITHOUT_CLASSIFICATION	4.001788667740849E-5	DEFECT
// no additional methods required	WITHOUT_CLASSIFICATION	0.9999973571092926	WITHOUT_CLASSIFICATION	2.6428907073024234E-6	DEFECT
// no new methods required	WITHOUT_CLASSIFICATION	0.9999967150037463	WITHOUT_CLASSIFICATION	3.2849962537121728E-6	DEFECT
// no new methods required	WITHOUT_CLASSIFICATION	0.9999967150037463	WITHOUT_CLASSIFICATION	3.2849962537121728E-6	DEFECT
/////////////////////////////////////////////////////////////////////////// // From XYDataset ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999747219740382	WITHOUT_CLASSIFICATION	2.5278025961803617E-5	DEFECT
// handle the special case where the dataset has y-intervals that // we want to measure	WITHOUT_CLASSIFICATION	0.9999993493492765	WITHOUT_CLASSIFICATION	6.506507236309575E-7	DEFECT
// '+', remember value is negative	WITHOUT_CLASSIFICATION	0.9999870913587322	WITHOUT_CLASSIFICATION	1.2908641267819313E-5	DEFECT
// '+', remember value is negative	WITHOUT_CLASSIFICATION	0.9999870913587322	WITHOUT_CLASSIFICATION	1.2908641267819313E-5	DEFECT
// we don't know anything about the ordering of the x-values, // so we iterate until we find the first crossing of x (if any) // we know there are at least 2 items in the series at this point	WITHOUT_CLASSIFICATION	0.999988420228182	WITHOUT_CLASSIFICATION	1.1579771818033249E-5	DEFECT
// delegate null check on dataset	WITHOUT_CLASSIFICATION	0.9999988091065622	WITHOUT_CLASSIFICATION	1.1908934378161843E-6	DEFECT
// exact match on first item	WITHOUT_CLASSIFICATION	0.9999754583310636	WITHOUT_CLASSIFICATION	2.4541668936386204E-5	DEFECT
// no crossing of x	WITHOUT_CLASSIFICATION	0.9999938732957231	WITHOUT_CLASSIFICATION	6.126704276951685E-6	DEFECT
// spanning match	WITHOUT_CLASSIFICATION	0.9999935555291302	WITHOUT_CLASSIFICATION	6.444470869850218E-6	DEFECT
// exact match	WITHOUT_CLASSIFICATION	0.9999796701769441	WITHOUT_CLASSIFICATION	2.0329823055943988E-5	DEFECT
// maps our series into our parent's	WITHOUT_CLASSIFICATION	0.9999967962785367	WITHOUT_CLASSIFICATION	3.203721463363165E-6	DEFECT
// prior to 1.0.14, we just fired a PropertyChange - so we need to // keep doing this	WITHOUT_CLASSIFICATION	0.9999987743655312	WITHOUT_CLASSIFICATION	1.2256344688149629E-6	DEFECT
// no new methods added.	WITHOUT_CLASSIFICATION	0.9999709751841905	WITHOUT_CLASSIFICATION	2.9024815809526892E-5	DEFECT
// first line contains column keys	WITHOUT_CLASSIFICATION	0.9999917629175902	WITHOUT_CLASSIFICATION	8.23708240977991E-6	DEFECT
// remaining lines contain a row key and data values	WITHOUT_CLASSIFICATION	0.9999982918339674	WITHOUT_CLASSIFICATION	1.7081660325950424E-6	DEFECT
// first field contains the row key	WITHOUT_CLASSIFICATION	0.9999851684009855	WITHOUT_CLASSIFICATION	1.4831599014611269E-5	DEFECT
// update the max value	WITHOUT_CLASSIFICATION	0.9999829926207885	WITHOUT_CLASSIFICATION	1.7007379211474652E-5	DEFECT
// remaining fields contain values	WITHOUT_CLASSIFICATION	0.999993420248828	WITHOUT_CLASSIFICATION	6.5797511720116835E-6	DEFECT
// Remove any previous old data	WITHOUT_CLASSIFICATION	0.9999993582741927	WITHOUT_CLASSIFICATION	6.417258073568E-7	DEFECT
// first column contains the row key...	WITHOUT_CLASSIFICATION	0.9999894664683058	WITHOUT_CLASSIFICATION	1.0533531694293677E-5	DEFECT
// suppress (value defaults to null)	WITHOUT_CLASSIFICATION	0.9999992595196223	WITHOUT_CLASSIFICATION	7.404803777202897E-7	DEFECT
// not a value, can't use it (defaults to null)	WITHOUT_CLASSIFICATION	0.9999747786415174	WITHOUT_CLASSIFICATION	2.522135848268284E-5	DEFECT
/// First column is X data	WITHOUT_CLASSIFICATION	0.9999250798545444	WITHOUT_CLASSIFICATION	7.492014545561972E-5	DEFECT
/// Get the column names and cache them.	WITHOUT_CLASSIFICATION	0.9999967705937493	WITHOUT_CLASSIFICATION	3.2294062507479906E-6	DEFECT
// Might need to add, to free memory from any previous result sets	WITHOUT_CLASSIFICATION	0.999999445552262	WITHOUT_CLASSIFICATION	5.54447737989344E-7	DEFECT
// Are we working with a time series.	WITHOUT_CLASSIFICATION	0.9999431333716773	WITHOUT_CLASSIFICATION	5.6866628322661994E-5	DEFECT
// defer null argument check	WITHOUT_CLASSIFICATION	0.9999971820498895	WITHOUT_CLASSIFICATION	2.8179501105238027E-6	DEFECT
// defer null argument check	WITHOUT_CLASSIFICATION	0.9999971820498895	WITHOUT_CLASSIFICATION	2.8179501105238027E-6	DEFECT
// check arguments...	WITHOUT_CLASSIFICATION	0.9999925711977432	WITHOUT_CLASSIFICATION	7.428802256735759E-6	DEFECT
/////////////////////////////////////////////////////////////////////////// // From SeriesDataset ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999690720033639	WITHOUT_CLASSIFICATION	3.092799663594561E-5	DEFECT
/////////////////////////////////////////////////////////////////////////// // From IntervalXYDataset ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999909746956751	WITHOUT_CLASSIFICATION	9.025304324983424E-6	DEFECT
/////////////////////////////////////////////////////////////////////////// // New methods from CombinationDataset ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999978990824125	WITHOUT_CLASSIFICATION	2.1009175874896698E-6	DEFECT
/////////////////////////////////////////////////////////////////////////// // New methods from CombinationDataset ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999978990824125	WITHOUT_CLASSIFICATION	2.1009175874896698E-6	DEFECT
// if this series belongs to a dataset, the dataset might veto the // change if it results in two series within the dataset having the // same key	WITHOUT_CLASSIFICATION	0.9999989466588991	WITHOUT_CLASSIFICATION	1.0533411008419227E-6	DEFECT
// see comments about priority of // 10 in validateObject()	WITHOUT_CLASSIFICATION	0.9999931172131623	WITHOUT_CLASSIFICATION	6.882786837746678E-6	DEFECT
// first field is ignored, since // column 0 is for row keys	WITHOUT_CLASSIFICATION	0.9999979896051256	WITHOUT_CLASSIFICATION	2.0103948743082324E-6	DEFECT
// Get all rows. // rows = new ArrayList();	WITHOUT_CLASSIFICATION	0.9999858938218578	WITHOUT_CLASSIFICATION	1.4106178142152903E-5	DEFECT
/// Determine max and min values.	WITHOUT_CLASSIFICATION	0.9999906783474791	WITHOUT_CLASSIFICATION	9.32165252082016E-6	DEFECT
// Tell the listeners a new table has arrived.	WITHOUT_CLASSIFICATION	0.9999769345730238	WITHOUT_CLASSIFICATION	2.3065426976186938E-5	DEFECT
// fill the bins	WITHOUT_CLASSIFICATION	0.999983536478358	WITHOUT_CLASSIFICATION	1.6463521641971614E-5	DEFECT
// generic map for each series	WITHOUT_CLASSIFICATION	0.9999907697624899	WITHOUT_CLASSIFICATION	9.230237510213514E-6	DEFECT
// pretty sure this shouldn't ever happen	WITHOUT_CLASSIFICATION	0.9999595605075458	WITHOUT_CLASSIFICATION	4.043949245427778E-5	DEFECT
// lower bounds are the same	WITHOUT_CLASSIFICATION	0.9999737065287319	WITHOUT_CLASSIFICATION	2.6293471268234808E-5	DEFECT
// overridden to make public	WITHOUT_CLASSIFICATION	0.9999976477846422	WITHOUT_CLASSIFICATION	2.352215357762192E-6	DEFECT
// update the cached range values...	WITHOUT_CLASSIFICATION	0.9999970716505022	WITHOUT_CLASSIFICATION	2.928349497749637E-6	DEFECT
// check that the new bin doesn't overlap with any existing bin	WITHOUT_CLASSIFICATION	0.9999976092271865	WITHOUT_CLASSIFICATION	2.3907728135979388E-6	DEFECT
// pass values to other constructor	WITHOUT_CLASSIFICATION	0.9999969203492294	WITHOUT_CLASSIFICATION	3.0796507706908027E-6	DEFECT
// update cached min and max values	WITHOUT_CLASSIFICATION	0.9999983784956448	WITHOUT_CLASSIFICATION	1.6215043552871813E-6	DEFECT
// defer null argument checks	WITHOUT_CLASSIFICATION	0.9999980055326116	WITHOUT_CLASSIFICATION	1.9944673884329105E-6	DEFECT
// check for zero pivot element	WITHOUT_CLASSIFICATION	0.9999981201010669	WITHOUT_CLASSIFICATION	1.8798989330405996E-6	DEFECT
// treat nulls the same as NaNs	WITHOUT_CLASSIFICATION	0.9999862553191287	WITHOUT_CLASSIFICATION	1.3744680871376779E-5	DEFECT
// calculate the sum and count	WITHOUT_CLASSIFICATION	0.9999983128924126	WITHOUT_CLASSIFICATION	1.687107587463337E-6	DEFECT
// intercept	WITHOUT_CLASSIFICATION	0.9999664159414335	WITHOUT_CLASSIFICATION	3.358405856655195E-5	DEFECT
// sum of x, x^2, x * y, y	WITHOUT_CLASSIFICATION	0.9999858227837554	WITHOUT_CLASSIFICATION	1.4177216244621081E-5	DEFECT
// holds the moving average sum	WITHOUT_CLASSIFICATION	0.9999879213866532	WITHOUT_CLASSIFICATION	1.2078613346785318E-5	DEFECT
// defer null argument checks	WITHOUT_CLASSIFICATION	0.9999980055326116	WITHOUT_CLASSIFICATION	1.9944673884329105E-6	DEFECT
// make sure bins[bins.length]'s upper boundary ends at maximum // to avoid the rounding issue. the bins[0] lower boundary is // guaranteed start from min	WITHOUT_CLASSIFICATION	0.9999872352303281	WITHOUT_CLASSIFICATION	1.2764769671866084E-5	DEFECT
// iterate over all data items and update mins and maxes	WITHOUT_CLASSIFICATION	0.9999866106075643	WITHOUT_CLASSIFICATION	1.3389392435718335E-5	DEFECT
// if this cell held a maximum and/or minimum value, we'll need to // update the cached bounds...	WITHOUT_CLASSIFICATION	0.9999932045995663	WITHOUT_CLASSIFICATION	6.7954004336942235E-6	DEFECT
// ********* stat function for linear slope ******** // y = a + bx // a = ybar - b * xbar //     sum(x * y) - (sum (x) * sum(y)) / n // b = ------------------------------------ //     sum (x^2) - (sum(x)^2 / n // *************************************************	WITHOUT_CLASSIFICATION	0.9999993340630962	WITHOUT_CLASSIFICATION	6.659369038197308E-7	DEFECT
// update cached range values	WITHOUT_CLASSIFICATION	0.9999961130632395	WITHOUT_CLASSIFICATION	3.886936760489069E-6	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999792375281624	WITHOUT_CLASSIFICATION	2.0762471837648883E-5	DEFECT
// update the min value	WITHOUT_CLASSIFICATION	0.9999914780325412	WITHOUT_CLASSIFICATION	8.521967458832981E-6	DEFECT
// iterate over all data items and update mins and maxes	WITHOUT_CLASSIFICATION	0.9999866106075643	WITHOUT_CLASSIFICATION	1.3389392435718335E-5	DEFECT
// CASE 2 : Comparing to another TimePeriod object // -----------------------------------------------	WITHOUT_CLASSIFICATION	0.999987005709782	WITHOUT_CLASSIFICATION	1.2994290217893587E-5	DEFECT
// CASE 3 : Comparing to a non-TimePeriod object // ---------------------------------------------	WITHOUT_CLASSIFICATION	0.9999845591775635	WITHOUT_CLASSIFICATION	1.544082243655313E-5	DEFECT
// consider time periods to be ordered after general objects	WITHOUT_CLASSIFICATION	0.9999948867045391	WITHOUT_CLASSIFICATION	5.113295460992453E-6	DEFECT
// consider time periods to be ordered after general objects	WITHOUT_CLASSIFICATION	0.9999948867045391	WITHOUT_CLASSIFICATION	5.113295460992453E-6	DEFECT
// we are at the last minute in the hour...	WITHOUT_CLASSIFICATION	0.9999923742724707	WITHOUT_CLASSIFICATION	7.625727529270496E-6	DEFECT
// CASE 1 : Comparing to another Minute object // -------------------------------------------	WITHOUT_CLASSIFICATION	0.9999846645772607	WITHOUT_CLASSIFICATION	1.5335422739310362E-5	DEFECT
// more difficult case - evaluate later...	WITHOUT_CLASSIFICATION	0.9999986167453415	WITHOUT_CLASSIFICATION	1.3832546585412935E-6	DEFECT
// won't get here...	WITHOUT_CLASSIFICATION	0.9999514408125645	WITHOUT_CLASSIFICATION	4.8559187435537205E-5	DEFECT
// remove old items and notify if necessary	WITHOUT_CLASSIFICATION	0.9999984065698294	WITHOUT_CLASSIFICATION	1.5934301705301372E-6	DEFECT
// make the change (if it's not a duplicate time period)...	WITHOUT_CLASSIFICATION	0.9999987544081437	WITHOUT_CLASSIFICATION	1.245591856402558E-6	DEFECT
// check if this addition will exceed the maximum item count...	WITHOUT_CLASSIFICATION	0.9999830645796964	WITHOUT_CLASSIFICATION	1.6935420303516346E-5	DEFECT
// check if this addition will exceed the maximum item count...	WITHOUT_CLASSIFICATION	0.9999830645796964	WITHOUT_CLASSIFICATION	1.6935420303516346E-5	DEFECT
// find the serial index of the period specified by 'latest'	WITHOUT_CLASSIFICATION	0.9999998565592156	WITHOUT_CLASSIFICATION	1.4344078433507967E-7	DEFECT
// it is too slow to look at every data item, so let's just look at // the first, middle and last items...	WITHOUT_CLASSIFICATION	0.9999930120844406	WITHOUT_CLASSIFICATION	6.987915559350112E-6	DEFECT
// CASE 2 : Comparing to another TimePeriod object // -----------------------------------------------	WITHOUT_CLASSIFICATION	0.999987005709782	WITHOUT_CLASSIFICATION	1.2994290217893587E-5	DEFECT
// CASE 2 : Comparing to another TimePeriod object // -----------------------------------------------	WITHOUT_CLASSIFICATION	0.999987005709782	WITHOUT_CLASSIFICATION	1.2994290217893587E-5	DEFECT
// CASE 3 : Comparing to a non-TimePeriod object // ---------------------------------------------	WITHOUT_CLASSIFICATION	0.9999845591775635	WITHOUT_CLASSIFICATION	1.544082243655313E-5	DEFECT
// consider time periods to be ordered after general objects	WITHOUT_CLASSIFICATION	0.9999948867045391	WITHOUT_CLASSIFICATION	5.113295460992453E-6	DEFECT
// consider time periods to be ordered after general objects	WITHOUT_CLASSIFICATION	0.9999948867045391	WITHOUT_CLASSIFICATION	5.113295460992453E-6	DEFECT
// more difficult case - evaluate later...	WITHOUT_CLASSIFICATION	0.9999986167453415	WITHOUT_CLASSIFICATION	1.3832546585412935E-6	DEFECT
// more difficult case - evaluate later...	WITHOUT_CLASSIFICATION	0.9999986167453415	WITHOUT_CLASSIFICATION	1.3832546585412935E-6	DEFECT
// since the items are ordered, we could be more clever here and avoid // iterating over all the data	WITHOUT_CLASSIFICATION	0.9999946143522029	WITHOUT_CLASSIFICATION	5.385647797052742E-6	DEFECT
// remove old items if necessary, but // don't notify anyone, because that // happens next anyway...	WITHOUT_CLASSIFICATION	0.9999612282227759	WITHOUT_CLASSIFICATION	3.8771777224164184E-5	DEFECT
// figure out if we need to iterate through all the y-values // to find the revised minY / maxY	WITHOUT_CLASSIFICATION	0.9999971455332052	WITHOUT_CLASSIFICATION	2.8544667948800426E-6	DEFECT
// check if there are any values earlier than specified by the history // count...	WITHOUT_CLASSIFICATION	0.9999994406065206	WITHOUT_CLASSIFICATION	5.593934795043428E-7	DEFECT
// check if there are any values earlier than specified by the history // count...	WITHOUT_CLASSIFICATION	0.9999994406065206	WITHOUT_CLASSIFICATION	5.593934795043428E-7	DEFECT
// start is after last data item	WITHOUT_CLASSIFICATION	0.9999692317875905	WITHOUT_CLASSIFICATION	3.076821240960603E-5	DEFECT
// update the time series appropriately	WITHOUT_CLASSIFICATION	0.999994454090668	WITHOUT_CLASSIFICATION	5.545909331962337E-6	DEFECT
// we are at the first hour in the day...	WITHOUT_CLASSIFICATION	0.9999873239434124	WITHOUT_CLASSIFICATION	1.2676056587632416E-5	DEFECT
// we are at the last hour in the day...	WITHOUT_CLASSIFICATION	0.9999951068647046	WITHOUT_CLASSIFICATION	4.893135295440006E-6	DEFECT
// CASE 1 : Comparing to another Hour object // -----------------------------------------	WITHOUT_CLASSIFICATION	0.9999864371909462	WITHOUT_CLASSIFICATION	1.3562809053766094E-5	DEFECT
// if the hour is 0 - 23 then create an hour	WITHOUT_CLASSIFICATION	0.9999907167407895	WITHOUT_CLASSIFICATION	9.283259210542813E-6	DEFECT
// parse the string...	WITHOUT_CLASSIFICATION	0.9999823281211849	WITHOUT_CLASSIFICATION	1.767187881512058E-5	DEFECT
// create the year...	WITHOUT_CLASSIFICATION	0.9999847865684273	WITHOUT_CLASSIFICATION	1.5213431572727203E-5	DEFECT
// get the current data item...	WITHOUT_CLASSIFICATION	0.9999982317537209	WITHOUT_CLASSIFICATION	1.7682462789831992E-6	DEFECT
// work out the average for the earlier values...	WITHOUT_CLASSIFICATION	0.9999956353636235	WITHOUT_CLASSIFICATION	4.364636376537204E-6	DEFECT
// work out the average for the earlier values...	WITHOUT_CLASSIFICATION	0.9999956353636235	WITHOUT_CLASSIFICATION	4.364636376537204E-6	DEFECT
// remove the point i-periodCount out of the rolling sum.	WITHOUT_CLASSIFICATION	0.9999994750454901	WITHOUT_CLASSIFICATION	5.249545098446695E-7	DEFECT
// an arbitrary safe default value	WITHOUT_CLASSIFICATION	0.9999869113318094	WITHOUT_CLASSIFICATION	1.3088668190576785E-5	DEFECT
// default value;	WITHOUT_CLASSIFICATION	0.9999941155881382	WITHOUT_CLASSIFICATION	5.8844118617710665E-6	DEFECT
// as a class variable, initializes == 0	WITHOUT_CLASSIFICATION	0.9999950442943026	WITHOUT_CLASSIFICATION	4.955705697447653E-6	DEFECT
// cached values used for interface DomainInfo:	WITHOUT_CLASSIFICATION	0.9999988377362381	WITHOUT_CLASSIFICATION	1.1622637619033441E-6	DEFECT
//rangeGridlinePaint;	WITHOUT_CLASSIFICATION	0.9999369085446799	WITHOUT_CLASSIFICATION	6.309145532010723E-5	DEFECT
// CASE 2 : Comparing to another TimePeriod object // -----------------------------------------------	WITHOUT_CLASSIFICATION	0.999987005709782	WITHOUT_CLASSIFICATION	1.2994290217893587E-5	DEFECT
// CASE 3 : Comparing to a non-TimePeriod object // ---------------------------------------------	WITHOUT_CLASSIFICATION	0.9999845591775635	WITHOUT_CLASSIFICATION	1.544082243655313E-5	DEFECT
// CASE 3 : Comparing to a non-TimePeriod object // ---------------------------------------------	WITHOUT_CLASSIFICATION	0.9999845591775635	WITHOUT_CLASSIFICATION	1.544082243655313E-5	DEFECT
// autoinit's to null.	WITHOUT_CLASSIFICATION	0.9999866073979289	WITHOUT_CLASSIFICATION	1.3392602071223624E-5	DEFECT
// CASE 1 : Comparing to another Year object // -----------------------------------------	WITHOUT_CLASSIFICATION	0.9999785233095473	WITHOUT_CLASSIFICATION	2.147669045267846E-5	DEFECT
// if the initial averaging period is to be excluded, then // calculate the lowest x-value to have an average calculated...	WITHOUT_CLASSIFICATION	0.9999945125686117	WITHOUT_CLASSIFICATION	5.48743138830732E-6	DEFECT
//}	WITHOUT_CLASSIFICATION	0.999408137366147	WITHOUT_CLASSIFICATION	5.918626338529501E-4	DEFECT
//}	WITHOUT_CLASSIFICATION	0.999408137366147	WITHOUT_CLASSIFICATION	5.918626338529501E-4	DEFECT
// if the initial averaging period is to be excluded, then // calculate the index of the // first data item to have an average calculated...	WITHOUT_CLASSIFICATION	0.9999875271484043	WITHOUT_CLASSIFICATION	1.247285159563067E-5	DEFECT
// Cached values used for interface RangeInfo: (note minValue pinned at 0) //   A single set of extrema covers the entire SeriesCollection	WITHOUT_CLASSIFICATION	0.9999986737823069	WITHOUT_CLASSIFICATION	1.326217693008029E-6	DEFECT
///  .. etc....	WITHOUT_CLASSIFICATION	0.9999663337433744	WITHOUT_CLASSIFICATION	3.366625662553139E-5	DEFECT
/// Expand the following for all defined TimePeriods:	WITHOUT_CLASSIFICATION	0.9999943109330074	WITHOUT_CLASSIFICATION	5.6890669925641654E-6	DEFECT
// initialize the members of "seriesNames" array so they won't be null:	WITHOUT_CLASSIFICATION	0.9999484366997037	WITHOUT_CLASSIFICATION	5.156330029634212E-5	DEFECT
//{ // deep copy from values[], caller // can safely discard that array	WITHOUT_CLASSIFICATION	0.999986891653905	WITHOUT_CLASSIFICATION	1.3108346095142473E-5	DEFECT
// Avoid IndexOutOfBoundsException:	WITHOUT_CLASSIFICATION	0.9999805274763552	WITHOUT_CLASSIFICATION	1.9472523644738155E-5	DEFECT
// But if that series array already exists, just overwrite its contents	WITHOUT_CLASSIFICATION	0.9999884378999703	WITHOUT_CLASSIFICATION	1.1562100029750396E-5	DEFECT
// But if that series array already exists, just overwrite its contents //synchronized(this) //{	WITHOUT_CLASSIFICATION	0.9999788603863318	WITHOUT_CLASSIFICATION	2.1139613668178223E-5	DEFECT
// all arrays equal length, // so ignore argument:	WITHOUT_CLASSIFICATION	0.9999978017943023	WITHOUT_CLASSIFICATION	2.1982056976409102E-6	DEFECT
// Methods for managing the FIFO's:	WITHOUT_CLASSIFICATION	0.9999919847029486	WITHOUT_CLASSIFICATION	8.015297051480741E-6	DEFECT
// no translation needed	WITHOUT_CLASSIFICATION	0.9999943256688142	WITHOUT_CLASSIFICATION	5.674331185746898E-6	DEFECT
// else  [implicit here]	WITHOUT_CLASSIFICATION	0.9999823032639192	WITHOUT_CLASSIFICATION	1.769673608070252E-5	DEFECT
// newestAt takes value previously held // by oldestAT	WITHOUT_CLASSIFICATION	0.9999963475362414	WITHOUT_CLASSIFICATION	3.652463758593653E-6	DEFECT
// if the oldest data contained a maximum Y-value, invalidate the stored //   Y-max and Y-range data:	WITHOUT_CLASSIFICATION	0.999998128258789	WITHOUT_CLASSIFICATION	1.8717412109130829E-6	DEFECT
// deregister the collection as a change listener to each series in the // collection	WITHOUT_CLASSIFICATION	0.9999991144786704	WITHOUT_CLASSIFICATION	8.855213295616467E-7	DEFECT
//  wipe the next (about to be used) set of data slots	WITHOUT_CLASSIFICATION	0.999999687604695	WITHOUT_CLASSIFICATION	3.123953049014746E-7	DEFECT
// Update the array of TimePeriods:	WITHOUT_CLASSIFICATION	0.9999904795971144	WITHOUT_CLASSIFICATION	9.520402885504098E-6	DEFECT
// Now advance "oldestAt", wrapping at end of the array	WITHOUT_CLASSIFICATION	0.9999938302684155	WITHOUT_CLASSIFICATION	6.169731584575926E-6	DEFECT
// Update the domain limits: //(time is kept in msec)	WITHOUT_CLASSIFICATION	0.9999694535087592	WITHOUT_CLASSIFICATION	3.054649124082655E-5	DEFECT
//  If data can be < 0, the next 2 methods should be modified	WITHOUT_CLASSIFICATION	0.9999994588942095	WITHOUT_CLASSIFICATION	5.411057906061023E-7	DEFECT
// index to select the "series"	WITHOUT_CLASSIFICATION	0.9999828172051797	WITHOUT_CLASSIFICATION	1.718279482024905E-5	DEFECT
/* // "Extras" found useful when analyzing/verifying class behavior:    public Number getUntranslatedXValue(int series, int item)    {      return super.getXValue(series, item);    }    public float getUntranslatedY(int series, int item)    {      return super.getY(series, item);    }  */	WITHOUT_CLASSIFICATION	0.9999999484342452	WITHOUT_CLASSIFICATION	5.156575474717619E-8	DEFECT
// a Long kept updated by advanceTime()	WITHOUT_CLASSIFICATION	0.9999975723855394	WITHOUT_CLASSIFICATION	2.4276144606275784E-6	DEFECT
// a Long kept updated by advanceTime()	WITHOUT_CLASSIFICATION	0.9999975723855394	WITHOUT_CLASSIFICATION	2.4276144606275784E-6	DEFECT
// try a dataset with some content...	WITHOUT_CLASSIFICATION	0.9999956934838338	WITHOUT_CLASSIFICATION	4.306516166233509E-6	DEFECT
// try a null argument	WITHOUT_CLASSIFICATION	0.9999889592322335	WITHOUT_CLASSIFICATION	1.1040767766538406E-5	DEFECT
// try a dataset with some content...	WITHOUT_CLASSIFICATION	0.9999956934838338	WITHOUT_CLASSIFICATION	4.306516166233509E-6	DEFECT
// try a dataset with some content...	WITHOUT_CLASSIFICATION	0.9999956934838338	WITHOUT_CLASSIFICATION	4.306516166233509E-6	DEFECT
// remove all the series from the collection and notify listeners.	WITHOUT_CLASSIFICATION	0.9999981563014735	WITHOUT_CLASSIFICATION	1.84369852649686E-6	DEFECT
// CASE 2 : Comparing to another TimePeriod object // -----------------------------------------------	WITHOUT_CLASSIFICATION	0.999987005709782	WITHOUT_CLASSIFICATION	1.2994290217893587E-5	DEFECT
// CASE 3 : Comparing to a non-TimePeriod object // ---------------------------------------------	WITHOUT_CLASSIFICATION	0.9999845591775635	WITHOUT_CLASSIFICATION	1.544082243655313E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999773291202646	WITHOUT_CLASSIFICATION	2.2670879735463088E-5	DEFECT
// CASE 3 : Comparing to a non-TimePeriod object // ---------------------------------------------	WITHOUT_CLASSIFICATION	0.9999845591775635	WITHOUT_CLASSIFICATION	1.544082243655313E-5	DEFECT
// consider time periods to be ordered after general objects	WITHOUT_CLASSIFICATION	0.9999948867045391	WITHOUT_CLASSIFICATION	5.113295460992453E-6	DEFECT
// consider time periods to be ordered after general objects	WITHOUT_CLASSIFICATION	0.9999948867045391	WITHOUT_CLASSIFICATION	5.113295460992453E-6	DEFECT
// more difficult case - evaluate later...	WITHOUT_CLASSIFICATION	0.9999986167453415	WITHOUT_CLASSIFICATION	1.3832546585412935E-6	DEFECT
// more difficult case - evaluate later...	WITHOUT_CLASSIFICATION	0.9999986167453415	WITHOUT_CLASSIFICATION	1.3832546585412935E-6	DEFECT
// parse the string...	WITHOUT_CLASSIFICATION	0.9999823281211849	WITHOUT_CLASSIFICATION	1.767187881512058E-5	DEFECT
// check an empty dataset	WITHOUT_CLASSIFICATION	0.999991918601761	WITHOUT_CLASSIFICATION	8.081398239039828E-6	DEFECT
// appendData() writes new data at the index position given by newestAt/ // When adding new data dynamically, use advanceTime(), followed by this:	WITHOUT_CLASSIFICATION	0.9999912216895274	WITHOUT_CLASSIFICATION	8.778310472598619E-6	DEFECT
// check whether the "valueHistory" array member exists; if not, // create them:	WITHOUT_CLASSIFICATION	0.9999984842136118	WITHOUT_CLASSIFICATION	1.5157863881499205E-6	DEFECT
// getXxx() ftns can ignore the "series" argument: // Don't synchronize this!! Instead, synchronize the loop that calls it.	WITHOUT_CLASSIFICATION	0.9999808670941772	WITHOUT_CLASSIFICATION	1.9132905822797422E-5	DEFECT
// Don't synchronize this!! // Instead, synchronize the loop that calls it.	WITHOUT_CLASSIFICATION	0.9999903044577642	WITHOUT_CLASSIFICATION	9.695542235844493E-6	DEFECT
// The next 3 functions implement the RangeInfo interface. // Using saved limits (updated by each updateTime() call) significantly // improves performance.  WARNING: this code makes the simplifying // assumption that data is never negative.  Expand as needed for the // general case.	WITHOUT_CLASSIFICATION	0.9999788428209435	WITHOUT_CLASSIFICATION	2.1157179056467594E-5	DEFECT
// CASE 1 : Comparing to another Quarter object // --------------------------------------------	WITHOUT_CLASSIFICATION	0.9999821024361112	WITHOUT_CLASSIFICATION	1.7897563888860432E-5	DEFECT
// find the Q and the integer following it (remove both from the // string)...	WITHOUT_CLASSIFICATION	0.9999975854573012	WITHOUT_CLASSIFICATION	2.4145426988480685E-6	DEFECT
// replace any / , or - with a space	WITHOUT_CLASSIFICATION	0.9999987726701872	WITHOUT_CLASSIFICATION	1.227329812828056E-6	DEFECT
// do nothing, so null is returned	WITHOUT_CLASSIFICATION	0.9999938526507575	WITHOUT_CLASSIFICATION	6.147349242555949E-6	DEFECT
//////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9996772559041399	WITHOUT_CLASSIFICATION	3.227440958600182E-4	DEFECT
// CASE 1 : Comparing to another Day object // ----------------------------------------	WITHOUT_CLASSIFICATION	0.9999807285819582	WITHOUT_CLASSIFICATION	1.9271418041876773E-5	DEFECT
// check arguments...delegated // fetch the series name...	WITHOUT_CLASSIFICATION	0.9999984606812194	WITHOUT_CLASSIFICATION	1.5393187806541356E-6	DEFECT
// deregister the collection as a change listener to each series in the // collection	WITHOUT_CLASSIFICATION	0.9999991144786704	WITHOUT_CLASSIFICATION	8.855213295616467E-7	DEFECT
// if it is not the series name, then we have no interest	WITHOUT_CLASSIFICATION	0.9999386640108137	WITHOUT_CLASSIFICATION	6.133598918637477E-5	DEFECT
// to be defensive, let's check that the source series does in fact // belong to this collection	WITHOUT_CLASSIFICATION	0.9999990329073363	WITHOUT_CLASSIFICATION	9.670926636978514E-7	DEFECT
// check if the new series name already exists for another series	WITHOUT_CLASSIFICATION	0.9999994568696664	WITHOUT_CLASSIFICATION	5.431303335879735E-7	DEFECT
// we need to work out if the previous year has 52 or 53 weeks...	WITHOUT_CLASSIFICATION	0.9999996521195873	WITHOUT_CLASSIFICATION	3.4788041270052364E-7	DEFECT
// check an empty dataset	WITHOUT_CLASSIFICATION	0.999991918601761	WITHOUT_CLASSIFICATION	8.081398239039828E-6	DEFECT
// check an empty dataset	WITHOUT_CLASSIFICATION	0.999991918601761	WITHOUT_CLASSIFICATION	8.081398239039828E-6	DEFECT
// CASE 2 : Comparing to a general object // ---------------------------------------------	WITHOUT_CLASSIFICATION	0.9999750266426016	WITHOUT_CLASSIFICATION	2.497335739834168E-5	DEFECT
// remove all the series from the collection and notify listeners.	WITHOUT_CLASSIFICATION	0.9999981563014735	WITHOUT_CLASSIFICATION	1.84369852649686E-6	DEFECT
// CASE 1 : Comparing to another Second object // -------------------------------------------	WITHOUT_CLASSIFICATION	0.9999779241642491	WITHOUT_CLASSIFICATION	2.2075835750814475E-5	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999792375281624	WITHOUT_CLASSIFICATION	2.0762471837648883E-5	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999792375281624	WITHOUT_CLASSIFICATION	2.0762471837648883E-5	DEFECT
// CASE 2 : Comparing to another TimePeriod object // -----------------------------------------------	WITHOUT_CLASSIFICATION	0.999987005709782	WITHOUT_CLASSIFICATION	1.2994290217893587E-5	DEFECT
// CASE 3 : Comparing to a non-TimePeriod object // ---------------------------------------------	WITHOUT_CLASSIFICATION	0.9999845591775635	WITHOUT_CLASSIFICATION	1.544082243655313E-5	DEFECT
// CASE 3 : Comparing to a non-TimePeriod object // ---------------------------------------------	WITHOUT_CLASSIFICATION	0.9999845591775635	WITHOUT_CLASSIFICATION	1.544082243655313E-5	DEFECT
// CASE 3 : Comparing to a non-TimePeriod object // ---------------------------------------------	WITHOUT_CLASSIFICATION	0.9999845591775635	WITHOUT_CLASSIFICATION	1.544082243655313E-5	DEFECT
// consider time periods to be ordered after general objects	WITHOUT_CLASSIFICATION	0.9999948867045391	WITHOUT_CLASSIFICATION	5.113295460992453E-6	DEFECT
// consider time periods to be ordered after general objects	WITHOUT_CLASSIFICATION	0.9999948867045391	WITHOUT_CLASSIFICATION	5.113295460992453E-6	DEFECT
// consider time periods to be ordered after general objects	WITHOUT_CLASSIFICATION	0.9999948867045391	WITHOUT_CLASSIFICATION	5.113295460992453E-6	DEFECT
// consider time periods to be ordered after general objects	WITHOUT_CLASSIFICATION	0.9999948867045391	WITHOUT_CLASSIFICATION	5.113295460992453E-6	DEFECT
// consider time periods to be ordered after general objects	WITHOUT_CLASSIFICATION	0.9999948867045391	WITHOUT_CLASSIFICATION	5.113295460992453E-6	DEFECT
// more difficult case - evaluate later...	WITHOUT_CLASSIFICATION	0.9999986167453415	WITHOUT_CLASSIFICATION	1.3832546585412935E-6	DEFECT
// more difficult case - evaluate later...	WITHOUT_CLASSIFICATION	0.9999986167453415	WITHOUT_CLASSIFICATION	1.3832546585412935E-6	DEFECT
// more difficult case - evaluate later...	WITHOUT_CLASSIFICATION	0.9999986167453415	WITHOUT_CLASSIFICATION	1.3832546585412935E-6	DEFECT
// more difficult case - evaluate later...	WITHOUT_CLASSIFICATION	0.9999986167453415	WITHOUT_CLASSIFICATION	1.3832546585412935E-6	DEFECT
// won't get here...	WITHOUT_CLASSIFICATION	0.9999514408125645	WITHOUT_CLASSIFICATION	4.8559187435537205E-5	DEFECT
// check an empty dataset	WITHOUT_CLASSIFICATION	0.999991918601761	WITHOUT_CLASSIFICATION	8.081398239039828E-6	DEFECT
// sometimes the last few days of the year are considered to fall in // the *first* week of the following year.  Refer to the Javadocs for // GregorianCalendar.	WITHOUT_CLASSIFICATION	0.999997679452919	WITHOUT_CLASSIFICATION	2.320547080980708E-6	DEFECT
// CASE 1 : Comparing to another Week object // --------------------------------------------	WITHOUT_CLASSIFICATION	0.9999840882728215	WITHOUT_CLASSIFICATION	1.5911727178565878E-5	DEFECT
// trim whitespace from either end of the string	WITHOUT_CLASSIFICATION	0.9999914910625176	WITHOUT_CLASSIFICATION	8.508937482411688E-6	DEFECT
// trim whitespace from either end of the string	WITHOUT_CLASSIFICATION	0.9999914910625176	WITHOUT_CLASSIFICATION	8.508937482411688E-6	DEFECT
// suppress	WITHOUT_CLASSIFICATION	0.9999932417543617	WITHOUT_CLASSIFICATION	6.758245638302939E-6	DEFECT
// suppress	WITHOUT_CLASSIFICATION	0.9999932417543617	WITHOUT_CLASSIFICATION	6.758245638302939E-6	DEFECT
// suppress	WITHOUT_CLASSIFICATION	0.9999932417543617	WITHOUT_CLASSIFICATION	6.758245638302939E-6	DEFECT
// CASE 1 : Comparing to another Month object // --------------------------------------------	WITHOUT_CLASSIFICATION	0.9999784094677938	WITHOUT_CLASSIFICATION	2.1590532206176646E-5	DEFECT
// if there is no separator, we assume the first four characters // are YYYY	WITHOUT_CLASSIFICATION	0.9999945820358112	WITHOUT_CLASSIFICATION	5.417964188820023E-6	DEFECT
// now it is trickier to determine if the month or year is first	WITHOUT_CLASSIFICATION	0.9999915259359097	WITHOUT_CLASSIFICATION	8.474064090286979E-6	DEFECT
// --- DEPRECATED METHODS -------------------------------------------------	WITHOUT_CLASSIFICATION	0.999852254687556	WITHOUT_CLASSIFICATION	1.477453124440453E-4	DEFECT
// CASE 1 : Comparing to another TimeSeriesDataItem object // -------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999784855980008	WITHOUT_CLASSIFICATION	2.1514401999103894E-5	DEFECT
//private Comparable key;	WITHOUT_CLASSIFICATION	0.9999846676910588	WITHOUT_CLASSIFICATION	1.533230894120712E-5	DEFECT
//this.key = null;	WITHOUT_CLASSIFICATION	0.9999763029389735	WITHOUT_CLASSIFICATION	2.3697061026370938E-5	DEFECT
// no attributes to read	WITHOUT_CLASSIFICATION	0.9999621133741711	WITHOUT_CLASSIFICATION	3.7886625828868894E-5	DEFECT
//axisOffset;	WITHOUT_CLASSIFICATION	0.9998309385141959	WITHOUT_CLASSIFICATION	1.6906148580413596E-4	DEFECT
// check arguments...	WITHOUT_CLASSIFICATION	0.9999925711977432	WITHOUT_CLASSIFICATION	7.428802256735759E-6	DEFECT
// fetch the series, remove the change listener, then remove the series.	WITHOUT_CLASSIFICATION	0.9999987440213355	WITHOUT_CLASSIFICATION	1.2559786644957377E-6	DEFECT
// remove all the series from the collection and notify listeners.	WITHOUT_CLASSIFICATION	0.9999981563014735	WITHOUT_CLASSIFICATION	1.84369852649686E-6	DEFECT
// if it is not the series name, then we have no interest	WITHOUT_CLASSIFICATION	0.9999386640108137	WITHOUT_CLASSIFICATION	6.133598918637477E-5	DEFECT
// check if the new series name already exists for another series	WITHOUT_CLASSIFICATION	0.9999994568696664	WITHOUT_CLASSIFICATION	5.431303335879735E-7	DEFECT
// Remove all the series from the collection and notify listeners.	WITHOUT_CLASSIFICATION	0.9999983315235285	WITHOUT_CLASSIFICATION	1.6684764715000286E-6	DEFECT
// XYDataset only provides methods for reading a dataset...	WITHOUT_CLASSIFICATION	0.9999990819184902	WITHOUT_CLASSIFICATION	9.180815097722859E-7	DEFECT
// check arguments...delegated	WITHOUT_CLASSIFICATION	0.9999984433588636	WITHOUT_CLASSIFICATION	1.5566411364785454E-6	DEFECT
// check arguments...delegated	WITHOUT_CLASSIFICATION	0.9999984433588636	WITHOUT_CLASSIFICATION	1.5566411364785454E-6	DEFECT
// Remove all the series from the collection and notify listeners.	WITHOUT_CLASSIFICATION	0.9999983315235285	WITHOUT_CLASSIFICATION	1.6684764715000286E-6	DEFECT
// Unregister the collection as a change listener to each series in // the collection.	WITHOUT_CLASSIFICATION	0.999994403648509	WITHOUT_CLASSIFICATION	5.596351491025343E-6	DEFECT
// check an empty dataset	WITHOUT_CLASSIFICATION	0.999991918601761	WITHOUT_CLASSIFICATION	8.081398239039828E-6	DEFECT
// add a new series	WITHOUT_CLASSIFICATION	0.999992522391647	WITHOUT_CLASSIFICATION	7.477608352963387E-6	DEFECT
// need to configure the intervalDelegate to match the original	WITHOUT_CLASSIFICATION	0.9999980148959552	WITHOUT_CLASSIFICATION	1.985104044778706E-6	DEFECT
// check an empty dataset	WITHOUT_CLASSIFICATION	0.999991918601761	WITHOUT_CLASSIFICATION	8.081398239039828E-6	DEFECT
// we can't be sure of the order	WITHOUT_CLASSIFICATION	0.9999863739783049	WITHOUT_CLASSIFICATION	1.3626021695125286E-5	DEFECT
// replace an existing series	WITHOUT_CLASSIFICATION	0.9999915584881017	WITHOUT_CLASSIFICATION	8.441511898238873E-6	DEFECT
// check an empty dataset	WITHOUT_CLASSIFICATION	0.999991918601761	WITHOUT_CLASSIFICATION	8.081398239039828E-6	DEFECT
// either autoWidth is off or autoIntervalWidth was not set.	WITHOUT_CLASSIFICATION	0.9999894430913143	WITHOUT_CLASSIFICATION	1.0556908685793296E-5	DEFECT
// check an empty dataset	WITHOUT_CLASSIFICATION	0.999991918601761	WITHOUT_CLASSIFICATION	8.081398239039828E-6	DEFECT
// check an empty dataset	WITHOUT_CLASSIFICATION	0.999991918601761	WITHOUT_CLASSIFICATION	8.081398239039828E-6	DEFECT
// check an empty dataset	WITHOUT_CLASSIFICATION	0.999991918601761	WITHOUT_CLASSIFICATION	8.081398239039828E-6	DEFECT
// argument checking delegated...	WITHOUT_CLASSIFICATION	0.9999990939505744	WITHOUT_CLASSIFICATION	9.060494255698959E-7	DEFECT
// argument checking delegated...	WITHOUT_CLASSIFICATION	0.9999990939505744	WITHOUT_CLASSIFICATION	9.060494255698959E-7	DEFECT
// delegate argument checking to XYDataItem...	WITHOUT_CLASSIFICATION	0.9999989946334619	WITHOUT_CLASSIFICATION	1.0053665381310632E-6	DEFECT
// need to make sure we are adding *after* any duplicates	WITHOUT_CLASSIFICATION	0.9999992165180368	WITHOUT_CLASSIFICATION	7.834819632977316E-7	DEFECT
// can't allow duplicate values, so we need to check whether // there is an item with the given x-value already	WITHOUT_CLASSIFICATION	0.9999436970712399	WITHOUT_CLASSIFICATION	5.6302928760136565E-5	DEFECT
// CASE 2 : Comparing to a general object // ---------------------------------------------	WITHOUT_CLASSIFICATION	0.9999750266426016	WITHOUT_CLASSIFICATION	2.497335739834168E-5	DEFECT
// check arguments...	WITHOUT_CLASSIFICATION	0.9999925711977432	WITHOUT_CLASSIFICATION	7.428802256735759E-6	DEFECT
// consider time periods to be ordered after general objects	WITHOUT_CLASSIFICATION	0.9999948867045391	WITHOUT_CLASSIFICATION	5.113295460992453E-6	DEFECT
// won't get here...	WITHOUT_CLASSIFICATION	0.9999514408125645	WITHOUT_CLASSIFICATION	4.8559187435537205E-5	DEFECT
// check if this addition will exceed the maximum item count...	WITHOUT_CLASSIFICATION	0.9999830645796964	WITHOUT_CLASSIFICATION	1.6935420303516346E-5	DEFECT
// to be defensive, let's check that the source series does in fact // belong to this collection	WITHOUT_CLASSIFICATION	0.9999990329073363	WITHOUT_CLASSIFICATION	9.670926636978514E-7	DEFECT
// Unregister the collection as a change listener to each series in // the collection.	WITHOUT_CLASSIFICATION	0.999994403648509	WITHOUT_CLASSIFICATION	5.596351491025343E-6	DEFECT
// Unregister the collection as a change listener to each series in // the collection.	WITHOUT_CLASSIFICATION	0.999994403648509	WITHOUT_CLASSIFICATION	5.596351491025343E-6	DEFECT
// Remove all the series from the collection and notify listeners.	WITHOUT_CLASSIFICATION	0.9999983315235285	WITHOUT_CLASSIFICATION	1.6684764715000286E-6	DEFECT
// need to configure the intervalDelegate to match the original	WITHOUT_CLASSIFICATION	0.9999980148959552	WITHOUT_CLASSIFICATION	1.985104044778706E-6	DEFECT
// add a new series	WITHOUT_CLASSIFICATION	0.999992522391647	WITHOUT_CLASSIFICATION	7.477608352963387E-6	DEFECT
// add a new series	WITHOUT_CLASSIFICATION	0.999992522391647	WITHOUT_CLASSIFICATION	7.477608352963387E-6	DEFECT
// replace an existing series	WITHOUT_CLASSIFICATION	0.9999915584881017	WITHOUT_CLASSIFICATION	8.441511898238873E-6	DEFECT
// replace an existing series	WITHOUT_CLASSIFICATION	0.9999915584881017	WITHOUT_CLASSIFICATION	8.441511898238873E-6	DEFECT
// null is ignored	WITHOUT_CLASSIFICATION	0.9999955120488286	WITHOUT_CLASSIFICATION	4.48795117134562E-6	DEFECT
// everything is fine: autoWidth is on, and an autoIntervalWidth // was set.	WITHOUT_CLASSIFICATION	0.999993593996597	WITHOUT_CLASSIFICATION	6.406003402962946E-6	DEFECT
// first get the range without the interval, then expand it for the // interval width	WITHOUT_CLASSIFICATION	0.9999947479177058	WITHOUT_CLASSIFICATION	5.252082294229495E-6	DEFECT
// all series have the same number of items in // this dataset	WITHOUT_CLASSIFICATION	0.9999972864344465	WITHOUT_CLASSIFICATION	2.7135655533956953E-6	DEFECT
// this.x is not allowed to be null...	WITHOUT_CLASSIFICATION	0.99959613398436	WITHOUT_CLASSIFICATION	4.03866015639986E-4	DEFECT
// CASE 1 : Comparing to another TimeSeriesDataPair object // -------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999822143689393	WITHOUT_CLASSIFICATION	1.778563106067116E-5	DEFECT
// In version 0.9.12, in response to several developer requests, I changed // the 'data' attribute from 'private' to 'protected', so that others can // make subclasses that work directly with the underlying data structure.	WITHOUT_CLASSIFICATION	0.9999985764643574	WITHOUT_CLASSIFICATION	1.4235356425366463E-6	DEFECT
// figure out if we need to iterate through all the y-values	WITHOUT_CLASSIFICATION	0.9999970904202087	WITHOUT_CLASSIFICATION	2.9095797913053373E-6	DEFECT
// figure out if we need to iterate through all the y-values	WITHOUT_CLASSIFICATION	0.9999970904202087	WITHOUT_CLASSIFICATION	2.9095797913053373E-6	DEFECT
// if we get to here, we know that duplicate X values are not permitted	WITHOUT_CLASSIFICATION	0.9997253583432356	WITHOUT_CLASSIFICATION	2.746416567643028E-4	DEFECT
/*         * we assum super is always initialized to all-zero matrix, so the         * total sum should be 0 upon initialization. However, we set it to         * Double.MIN_VALUE to get the same effect and yet avoid division by 0         * upon initialization.         */	WITHOUT_CLASSIFICATION	0.9999983564855657	WITHOUT_CLASSIFICATION	1.6435144343526356E-6	DEFECT
// add the series...	WITHOUT_CLASSIFICATION	0.999989595510502	WITHOUT_CLASSIFICATION	1.0404489497989926E-5	DEFECT
// try a class that isn't a listener	WITHOUT_CLASSIFICATION	0.9999065281357864	WITHOUT_CLASSIFICATION	9.347186421366778E-5	DEFECT
// set up popup menu...	WITHOUT_CLASSIFICATION	0.9999932542786344	WITHOUT_CLASSIFICATION	6.745721365650189E-6	DEFECT
// stop listening for changes to the existing chart	WITHOUT_CLASSIFICATION	0.9999995975370374	WITHOUT_CLASSIFICATION	4.0246296263869933E-7	DEFECT
// add the new chart	WITHOUT_CLASSIFICATION	0.9999950214302142	WITHOUT_CLASSIFICATION	4.978569785788143E-6	DEFECT
// work out if scaling is required...	WITHOUT_CLASSIFICATION	0.9999984875969764	WITHOUT_CLASSIFICATION	1.5124030236044177E-6	DEFECT
// are we using the chart buffer?	WITHOUT_CLASSIFICATION	0.9995849184104537	WITHOUT_CLASSIFICATION	4.150815895462502E-4	DEFECT
// does nothing - override if necessary	WITHOUT_CLASSIFICATION	0.9999993362687494	WITHOUT_CLASSIFICATION	6.637312506189476E-7	DEFECT
// selected rectangle shouldn't extend outside the data area...	WITHOUT_CLASSIFICATION	0.9999981492480079	WITHOUT_CLASSIFICATION	1.8507519920882541E-6	DEFECT
// we need to guard against this.zoomPoint being null	WITHOUT_CLASSIFICATION	0.999987578974095	WITHOUT_CLASSIFICATION	1.2421025905069656E-5	DEFECT
// we need to guard against this.zoomPoint being null	WITHOUT_CLASSIFICATION	0.999987578974095	WITHOUT_CLASSIFICATION	1.2421025905069656E-5	DEFECT
// force a redraw	WITHOUT_CLASSIFICATION	0.9999906664610841	WITHOUT_CLASSIFICATION	9.333538915782902E-6	DEFECT
// it is too slow to look at every data item, so let's just look at // the first, middle and last items...	WITHOUT_CLASSIFICATION	0.9999930120844406	WITHOUT_CLASSIFICATION	6.987915559350112E-6	DEFECT
// fetch the series, remove the change listener, then remove the series.	WITHOUT_CLASSIFICATION	0.9999987440213355	WITHOUT_CLASSIFICATION	1.2559786644957377E-6	DEFECT
// Unregister the collection as a change listener to each series in // the collection.	WITHOUT_CLASSIFICATION	0.999994403648509	WITHOUT_CLASSIFICATION	5.596351491025343E-6	DEFECT
// Unregister the collection as a change listener to each series in // the collection.	WITHOUT_CLASSIFICATION	0.999994403648509	WITHOUT_CLASSIFICATION	5.596351491025343E-6	DEFECT
// check that minItem limit is observed	WITHOUT_CLASSIFICATION	0.9999867902171735	WITHOUT_CLASSIFICATION	1.3209782826541966E-5	DEFECT
//assert itemIndex >= 0 && itemIndex < getItemCount();	WITHOUT_CLASSIFICATION	0.9999828737557516	WITHOUT_CLASSIFICATION	1.7126244248517616E-5	DEFECT
//assert itemIndex >= 0 && itemIndex < getItemCount();	WITHOUT_CLASSIFICATION	0.9999828737557516	WITHOUT_CLASSIFICATION	1.7126244248517616E-5	DEFECT
//TODO private boolean fillZoomRectangle = true;	WITHOUT_CLASSIFICATION	0.9999689331509667	WITHOUT_CLASSIFICATION	3.106684903331499E-5	DEFECT
// create the canvas and add the required listeners	WITHOUT_CLASSIFICATION	0.9999975305194533	WITHOUT_CLASSIFICATION	2.4694805467354827E-6	DEFECT
//ChartEditorManager.getChartEditor(canvas.getDisplay(), this.chart);	WITHOUT_CLASSIFICATION	0.9999907558341105	WITHOUT_CLASSIFICATION	9.24416588961465E-6	DEFECT
/* in the next zoomPoint.x and y replace by e.x and y for now.         * this helps to handle the mouse events and besides,         * those values are unused AFAIK. */	WITHOUT_CLASSIFICATION	0.9999969570025751	WITHOUT_CLASSIFICATION	3.042997424966616E-6	DEFECT
// do nothing, override if necessary	WITHOUT_CLASSIFICATION	0.9999994455637885	WITHOUT_CLASSIFICATION	5.54436211408751E-7	DEFECT
// new entity code	WITHOUT_CLASSIFICATION	0.9999922526996428	WITHOUT_CLASSIFICATION	7.747300357284609E-6	DEFECT
// new entity code	WITHOUT_CLASSIFICATION	0.9999922526996428	WITHOUT_CLASSIFICATION	7.747300357284609E-6	DEFECT
// pass mouse down event if some ChartMouseListener are listening	WITHOUT_CLASSIFICATION	0.9999964962464659	WITHOUT_CLASSIFICATION	3.503753534121466E-6	DEFECT
// if the box has been drawn backwards, restore the auto bounds	WITHOUT_CLASSIFICATION	0.9999988555390495	WITHOUT_CLASSIFICATION	1.144460950492563E-6	DEFECT
// handle axis trace	WITHOUT_CLASSIFICATION	0.999987964069338	WITHOUT_CLASSIFICATION	1.203593066206716E-5	DEFECT
// handle tool tips in a simple way	WITHOUT_CLASSIFICATION	0.999998037642419	WITHOUT_CLASSIFICATION	1.9623575810002234E-6	DEFECT
// handle zoom box	WITHOUT_CLASSIFICATION	0.9999872714565928	WITHOUT_CLASSIFICATION	1.2728543407151917E-5	DEFECT
// skip if chart is null	WITHOUT_CLASSIFICATION	0.9999946941993265	WITHOUT_CLASSIFICATION	5.305800673519282E-6	DEFECT
//axisLabelPaint;	WITHOUT_CLASSIFICATION	0.99996796305667	WITHOUT_CLASSIFICATION	3.203694333000613E-5	DEFECT
// get the origin of the zoom selection in the Java2D space used for // drawing the chart (that is, before any scaling to fit the panel)	WITHOUT_CLASSIFICATION	0.9999997413445368	WITHOUT_CLASSIFICATION	2.586554630995742E-7	DEFECT
// go through each zoom menu item and decide whether or not to // enable it...	WITHOUT_CLASSIFICATION	0.9999974302584628	WITHOUT_CLASSIFICATION	2.5697415372379417E-6	DEFECT
// create the chart...	WITHOUT_CLASSIFICATION	0.9999863945471843	WITHOUT_CLASSIFICATION	1.3605452815583836E-5	DEFECT
// title // x-axis label // y-axis label // data // create legend? // generate tooltips? // generate URLs?	WITHOUT_CLASSIFICATION	0.9999964671109118	WITHOUT_CLASSIFICATION	3.532889088130867E-6	DEFECT
// check that minItem limit is observed	WITHOUT_CLASSIFICATION	0.9999867902171735	WITHOUT_CLASSIFICATION	1.3209782826541966E-5	DEFECT
//SwtGraphics2D sg2 = new SwtGraphics2D(e.gc);	WITHOUT_CLASSIFICATION	0.9999852522986246	WITHOUT_CLASSIFICATION	1.4747701375523138E-5	DEFECT
// do we need to fill the buffer?	WITHOUT_CLASSIFICATION	0.9998897881800087	WITHOUT_CLASSIFICATION	1.1021181999131461E-4	DEFECT
// Performs the actual drawing here ...	WITHOUT_CLASSIFICATION	0.9999894927323894	WITHOUT_CLASSIFICATION	1.050726761058649E-5	DEFECT
// anti-aliasing	WITHOUT_CLASSIFICATION	0.9999951263093992	WITHOUT_CLASSIFICATION	4.873690600868992E-6	DEFECT
// zap the buffer onto the canvas...	WITHOUT_CLASSIFICATION	0.9999906387751352	WITHOUT_CLASSIFICATION	9.36122486483832E-6	DEFECT
// or redrawing the chart every time...	WITHOUT_CLASSIFICATION	0.9999959246303923	WITHOUT_CLASSIFICATION	4.075369607626265E-6	DEFECT
// de-register the composite as a listener for the chart.	WITHOUT_CLASSIFICATION	0.9999979568343853	WITHOUT_CLASSIFICATION	2.0431656147497777E-6	DEFECT
// AXIS 2	WITHOUT_CLASSIFICATION	0.9998250897799908	WITHOUT_CLASSIFICATION	1.749102200090683E-4	DEFECT
// AXIS 3	WITHOUT_CLASSIFICATION	0.9998380609114715	WITHOUT_CLASSIFICATION	1.6193908852856035E-4	DEFECT
//axis3.setPositiveArrowVisible(true);	WITHOUT_CLASSIFICATION	0.9999280048717416	WITHOUT_CLASSIFICATION	7.199512825839187E-5	DEFECT
// AXIS 4	WITHOUT_CLASSIFICATION	0.999793452301757	WITHOUT_CLASSIFICATION	2.0654769824302664E-4	DEFECT
// column keys...	WITHOUT_CLASSIFICATION	0.9999936985027088	WITHOUT_CLASSIFICATION	6.301497291130818E-6	DEFECT
// create the dataset...	WITHOUT_CLASSIFICATION	0.9999954381321288	WITHOUT_CLASSIFICATION	4.561867871226311E-6	DEFECT
// NOW DO SOME OPTIONAL CUSTOMISATION OF THE CHART...	WITHOUT_CLASSIFICATION	0.9992075885725099	WITHOUT_CLASSIFICATION	7.924114274901546E-4	DEFECT
// get a reference to the plot for further customisation...	WITHOUT_CLASSIFICATION	0.9999989743490051	WITHOUT_CLASSIFICATION	1.0256509948966058E-6	DEFECT
// set the range axis to display integers only...	WITHOUT_CLASSIFICATION	0.9999939869918719	WITHOUT_CLASSIFICATION	6.013008128030124E-6	DEFECT
// disable bar outlines...	WITHOUT_CLASSIFICATION	0.9999971784830332	WITHOUT_CLASSIFICATION	2.8215169667301275E-6	DEFECT
// OPTIONAL CUSTOMISATION COMPLETED.	WITHOUT_CLASSIFICATION	0.9997633433728389	WITHOUT_CLASSIFICATION	2.366566271611596E-4	DEFECT
// chart title // data // include legend	WITHOUT_CLASSIFICATION	0.999988569277016	WITHOUT_CLASSIFICATION	1.1430722983966742E-5	DEFECT
//frame.setDisplayToolTips(false);	WITHOUT_CLASSIFICATION	0.9999773494027906	WITHOUT_CLASSIFICATION	2.2650597209368165E-5	DEFECT
// row 1: antialiasing	WITHOUT_CLASSIFICATION	0.999987559017723	WITHOUT_CLASSIFICATION	1.2440982277141255E-5	DEFECT
//row 2: background paint for the chart	WITHOUT_CLASSIFICATION	0.9999972729470432	WITHOUT_CLASSIFICATION	2.727052956653887E-6	DEFECT
// row 1	WITHOUT_CLASSIFICATION	0.9999348153403197	WITHOUT_CLASSIFICATION	6.518465968032997E-5	DEFECT
//empty cell // row 2	WITHOUT_CLASSIFICATION	0.9999605273173763	WITHOUT_CLASSIFICATION	3.9472682623669807E-5	DEFECT
// Create the color-change dialog	WITHOUT_CLASSIFICATION	0.9999991805854679	WITHOUT_CLASSIFICATION	8.194145321318643E-7	DEFECT
// Dispose of any fonts we have created	WITHOUT_CLASSIFICATION	0.9999983050183167	WITHOUT_CLASSIFICATION	1.6949816832524988E-6	DEFECT
// build second tab	WITHOUT_CLASSIFICATION	0.9999981424070331	WITHOUT_CLASSIFICATION	1.8575929668671027E-6	DEFECT
// don't need to do anything	WITHOUT_CLASSIFICATION	0.999952220996321	WITHOUT_CLASSIFICATION	4.7779003679023325E-5	DEFECT
// set the plot properties...	WITHOUT_CLASSIFICATION	0.9999977977865616	WITHOUT_CLASSIFICATION	2.202213438367505E-6	DEFECT
// row 1	WITHOUT_CLASSIFICATION	0.9999348153403197	WITHOUT_CLASSIFICATION	6.518465968032997E-5	DEFECT
// Create the color-change dialog	WITHOUT_CLASSIFICATION	0.9999991805854679	WITHOUT_CLASSIFICATION	8.194145321318643E-7	DEFECT
// Create the color-change dialog	WITHOUT_CLASSIFICATION	0.9999991805854679	WITHOUT_CLASSIFICATION	8.194145321318643E-7	DEFECT
// Dispose of any fonts we have created	WITHOUT_CLASSIFICATION	0.9999983050183167	WITHOUT_CLASSIFICATION	1.6949816832524988E-6	DEFECT
// check a regular value	WITHOUT_CLASSIFICATION	0.9999958641762848	WITHOUT_CLASSIFICATION	4.135823715244801E-6	DEFECT
// Create the new font and set it into the title // label	WITHOUT_CLASSIFICATION	0.9999988002585688	WITHOUT_CLASSIFICATION	1.199741431230002E-6	DEFECT
// Create the new font and set it into the title // label	WITHOUT_CLASSIFICATION	0.9999988002585688	WITHOUT_CLASSIFICATION	1.199741431230002E-6	DEFECT
//label.setFont(font);	WITHOUT_CLASSIFICATION	0.9999567856783651	WITHOUT_CLASSIFICATION	4.321432163489811E-5	DEFECT
// row 3	WITHOUT_CLASSIFICATION	0.9999463700737312	WITHOUT_CLASSIFICATION	5.362992626885989E-5	DEFECT
// row 3	WITHOUT_CLASSIFICATION	0.9999463700737312	WITHOUT_CLASSIFICATION	5.362992626885989E-5	DEFECT
// Use a colored text field to show the color	WITHOUT_CLASSIFICATION	0.9999933847384261	WITHOUT_CLASSIFICATION	6.615261573860459E-6	DEFECT
//tickLabelFontField.setFont(SwtUtils.toSwtFontData(getDisplay(), // axis.getTickLabelFont()));	WITHOUT_CLASSIFICATION	0.9999988457785569	WITHOUT_CLASSIFICATION	1.1542214430453835E-6	DEFECT
// Create the font-change dialog	WITHOUT_CLASSIFICATION	0.9999995118245723	WITHOUT_CLASSIFICATION	4.881754277000052E-7	DEFECT
// Create the font-change dialog	WITHOUT_CLASSIFICATION	0.9999995118245723	WITHOUT_CLASSIFICATION	4.881754277000052E-7	DEFECT
//tickLabelFontField.setFont(font);	WITHOUT_CLASSIFICATION	0.9999914131865499	WITHOUT_CLASSIFICATION	8.586813450056946E-6	DEFECT
// return the appropriate axis editor	WITHOUT_CLASSIFICATION	0.9999969011198273	WITHOUT_CLASSIFICATION	3.0988801727779313E-6	DEFECT
//this.minimumRangeValue.addModifyListener(this); //this.minimumRangeValue.addVerifyListener(this);	WITHOUT_CLASSIFICATION	0.9999749399595254	WITHOUT_CLASSIFICATION	2.5060040474710766E-5	DEFECT
//this.maximumRangeValue.addModifyListener(this); //this.maximumRangeValue.addVerifyListener(this);	WITHOUT_CLASSIFICATION	0.9999622453651076	WITHOUT_CLASSIFICATION	3.775463489250826E-5	DEFECT
// verify min value	WITHOUT_CLASSIFICATION	0.9999893263989555	WITHOUT_CLASSIFICATION	1.0673601044488042E-5	DEFECT
// verify max value	WITHOUT_CLASSIFICATION	0.9999828320610872	WITHOUT_CLASSIFICATION	1.7167938912814454E-5	DEFECT
//deal with domain axis	WITHOUT_CLASSIFICATION	0.9999428601101092	WITHOUT_CLASSIFICATION	5.71398898908521E-5	DEFECT
//deal with range axis	WITHOUT_CLASSIFICATION	0.9999144603896386	WITHOUT_CLASSIFICATION	8.553961036132376E-5	DEFECT
//deal with plot appearance	WITHOUT_CLASSIFICATION	0.9999490139351803	WITHOUT_CLASSIFICATION	5.098606481961229E-5	DEFECT
// set the axis properties	WITHOUT_CLASSIFICATION	0.9999956623417167	WITHOUT_CLASSIFICATION	4.337658283274744E-6	DEFECT
// row 1: stroke	WITHOUT_CLASSIFICATION	0.999978045685838	WITHOUT_CLASSIFICATION	2.19543141619899E-5	DEFECT
// row 3: background paint	WITHOUT_CLASSIFICATION	0.9999960150743815	WITHOUT_CLASSIFICATION	3.9849256184018105E-6	DEFECT
// row 4: orientation	WITHOUT_CLASSIFICATION	0.9999605224056242	WITHOUT_CLASSIFICATION	3.947759437579813E-5	DEFECT
// row 2	WITHOUT_CLASSIFICATION	0.9999420706149065	WITHOUT_CLASSIFICATION	5.7929385093599526E-5	DEFECT
//titleField.setFont(font);	WITHOUT_CLASSIFICATION	0.9999564202140707	WITHOUT_CLASSIFICATION	4.35797859292005E-5	DEFECT
// row 4	WITHOUT_CLASSIFICATION	0.999931590993507	WITHOUT_CLASSIFICATION	6.840900649292205E-5	DEFECT
// build first tab	WITHOUT_CLASSIFICATION	0.9999890405819079	WITHOUT_CLASSIFICATION	1.0959418092040836E-5	DEFECT
// we can't do anything	WITHOUT_CLASSIFICATION	0.9999696750520976	WITHOUT_CLASSIFICATION	3.032494790248408E-5	DEFECT
// backgroundImage	WITHOUT_CLASSIFICATION	0.9999955288188996	WITHOUT_CLASSIFICATION	4.471181100460058E-6	DEFECT
// row keys...	WITHOUT_CLASSIFICATION	0.9999806314000574	WITHOUT_CLASSIFICATION	1.936859994258074E-5	DEFECT
// column keys...	WITHOUT_CLASSIFICATION	0.9999936985027088	WITHOUT_CLASSIFICATION	6.301497291130818E-6	DEFECT
// since this is only used by clearRect(), we don't update the GC yet	WITHOUT_CLASSIFICATION	0.999996888732126	WITHOUT_CLASSIFICATION	3.1112678739443625E-6	DEFECT
// build the third tab	WITHOUT_CLASSIFICATION	0.9999850259853678	WITHOUT_CLASSIFICATION	1.497401463227449E-5	DEFECT
// ok and cancel buttons	WITHOUT_CLASSIFICATION	0.9999892975813914	WITHOUT_CLASSIFICATION	1.0702418608522122E-5	DEFECT
// to be consistent with other Graphics2D implementations	WITHOUT_CLASSIFICATION	0.9999934719817014	WITHOUT_CLASSIFICATION	6.528018298608029E-6	DEFECT
// padding	WITHOUT_CLASSIFICATION	0.9999788439590354	WITHOUT_CLASSIFICATION	2.1156040964630734E-5	DEFECT
// apply dash style if any	WITHOUT_CLASSIFICATION	0.9999961934302326	WITHOUT_CLASSIFICATION	3.806569767335774E-6	DEFECT
// handle transparency and compositing.	WITHOUT_CLASSIFICATION	0.9999950050474722	WITHOUT_CLASSIFICATION	4.994952527760854E-6	DEFECT
// we can't use the following valueOf() method, because it // won't compile with JDK1.4 // this.colorsPool.get(Integer.valueOf(awtColor.getRGB()));	WITHOUT_CLASSIFICATION	0.999780719240844	WITHOUT_CLASSIFICATION	2.1928075915595807E-4	DEFECT
// set the line style to solid by default	WITHOUT_CLASSIFICATION	0.9999993653722089	WITHOUT_CLASSIFICATION	6.346277910228408E-7	DEFECT
// retrieve the swt font description in an os indept way	WITHOUT_CLASSIFICATION	0.9999979454322716	WITHOUT_CLASSIFICATION	2.054567728445199E-6	DEFECT
// Note that for consistency with the AWT implementation, it is // necessary to switch temporarily the foreground and background // colours	WITHOUT_CLASSIFICATION	0.999998203147019	WITHOUT_CLASSIFICATION	1.7968529809618525E-6	DEFECT
// for now we simply want to extract the chars from the iterator // and call an unstyled text renderer	WITHOUT_CLASSIFICATION	0.9999960521471289	WITHOUT_CLASSIFICATION	3.947852871042903E-6	DEFECT
// create a new awt font with the appropiate data	WITHOUT_CLASSIFICATION	0.9999975312331293	WITHOUT_CLASSIFICATION	2.46876687065585E-6	DEFECT
// we dispose resources we own but user must dispose gc	WITHOUT_CLASSIFICATION	0.9999731556921769	WITHOUT_CLASSIFICATION	2.6844307823055575E-5	DEFECT
// see comment above //this.colorsPool.put(Integer.valueOf(awtColor.getRGB()), swtColor);	WITHOUT_CLASSIFICATION	0.9999962101652975	WITHOUT_CLASSIFICATION	3.7898347024473406E-6	DEFECT
// SWT and AWT share the same style constants.	WITHOUT_CLASSIFICATION	0.9999908860185837	WITHOUT_CLASSIFICATION	9.113981416287824E-6	DEFECT
// convert the font size (in pt for awt) to height in pixels for swt	WITHOUT_CLASSIFICATION	0.9999957417340672	WITHOUT_CLASSIFICATION	4.2582659327972546E-6	DEFECT
//this.myColor = new Color(getDisplay(), color.getRGB());	WITHOUT_CLASSIFICATION	0.9999975644601194	WITHOUT_CLASSIFICATION	2.435539880568627E-6	DEFECT
// renderingHints	WITHOUT_CLASSIFICATION	0.9999905810832256	WITHOUT_CLASSIFICATION	9.418916774483343E-6	DEFECT
// borderStroke	WITHOUT_CLASSIFICATION	0.9999748914592784	WITHOUT_CLASSIFICATION	2.510854072166042E-5	DEFECT
// borderVisible	WITHOUT_CLASSIFICATION	0.9999902815460296	WITHOUT_CLASSIFICATION	9.718453970345757E-6	DEFECT
// borderPaint	WITHOUT_CLASSIFICATION	0.9999945679055569	WITHOUT_CLASSIFICATION	5.432094443173379E-6	DEFECT
// title	WITHOUT_CLASSIFICATION	0.9999712419050791	WITHOUT_CLASSIFICATION	2.87580949209674E-5	DEFECT
// subtitles	WITHOUT_CLASSIFICATION	0.9999919139277654	WITHOUT_CLASSIFICATION	8.086072234487841E-6	DEFECT
// plot	WITHOUT_CLASSIFICATION	0.9999803815091249	WITHOUT_CLASSIFICATION	1.9618490875070545E-5	DEFECT
// backgroundPaint	WITHOUT_CLASSIFICATION	0.9999979761544323	WITHOUT_CLASSIFICATION	2.0238455676962774E-6	DEFECT
// backgroundImageAlignment	WITHOUT_CLASSIFICATION	0.9999974929046551	WITHOUT_CLASSIFICATION	2.507095344901257E-6	DEFECT
// backgroundImageAlpha	WITHOUT_CLASSIFICATION	0.9999955444741141	WITHOUT_CLASSIFICATION	4.455525885829327E-6	DEFECT
// no event is generated if the dataset is already empty	WITHOUT_CLASSIFICATION	0.999989060147498	WITHOUT_CLASSIFICATION	1.0939852502078343E-5	DEFECT
// create the chart...	WITHOUT_CLASSIFICATION	0.9999863945471843	WITHOUT_CLASSIFICATION	1.3605452815583836E-5	DEFECT
// create the chart...	WITHOUT_CLASSIFICATION	0.9999863945471843	WITHOUT_CLASSIFICATION	1.3605452815583836E-5	DEFECT
// try a Double.POSITIVE_INFINITY	WITHOUT_CLASSIFICATION	0.9999728994791607	WITHOUT_CLASSIFICATION	2.710052083923796E-5	DEFECT
// adding something to the returned list should NOT change the chart	WITHOUT_CLASSIFICATION	0.999994721215093	WITHOUT_CLASSIFICATION	5.278784907066289E-6	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999905687775327	WITHOUT_CLASSIFICATION	9.431222467335725E-6	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.9999937778672211	WITHOUT_CLASSIFICATION	6.222132778908538E-6	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.9999937778672211	WITHOUT_CLASSIFICATION	6.222132778908538E-6	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.9999937778672211	WITHOUT_CLASSIFICATION	6.222132778908538E-6	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.9999937778672211	WITHOUT_CLASSIFICATION	6.222132778908538E-6	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.9999937778672211	WITHOUT_CLASSIFICATION	6.222132778908538E-6	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.9999937778672211	WITHOUT_CLASSIFICATION	6.222132778908538E-6	DEFECT
// fillPaintTransformer	WITHOUT_CLASSIFICATION	0.9999778284525096	WITHOUT_CLASSIFICATION	2.2171547490367964E-5	DEFECT
// outlinePaint	WITHOUT_CLASSIFICATION	0.9999964775886845	WITHOUT_CLASSIFICATION	3.522411315476329E-6	DEFECT
// labelFont	WITHOUT_CLASSIFICATION	0.9999921620244121	WITHOUT_CLASSIFICATION	7.837975587927327E-6	DEFECT
// chart title	WITHOUT_CLASSIFICATION	0.9999927055024637	WITHOUT_CLASSIFICATION	7.294497536327135E-6	DEFECT
// labelPaint	WITHOUT_CLASSIFICATION	0.99999384146794	WITHOUT_CLASSIFICATION	6.158532060022914E-6	DEFECT
// linePaint	WITHOUT_CLASSIFICATION	0.9999856022246217	WITHOUT_CLASSIFICATION	1.43977753782242E-5	DEFECT
// fillPaint	WITHOUT_CLASSIFICATION	0.9999897373786347	WITHOUT_CLASSIFICATION	1.0262621365334329E-5	DEFECT
// chart title	WITHOUT_CLASSIFICATION	0.9999927055024637	WITHOUT_CLASSIFICATION	7.294497536327135E-6	DEFECT
// the clone references the same dataset as the original	WITHOUT_CLASSIFICATION	0.9999993466161095	WITHOUT_CLASSIFICATION	6.533838905597921E-7	DEFECT
// chart title	WITHOUT_CLASSIFICATION	0.9999927055024637	WITHOUT_CLASSIFICATION	7.294497536327135E-6	DEFECT
// chart title	WITHOUT_CLASSIFICATION	0.9999927055024637	WITHOUT_CLASSIFICATION	7.294497536327135E-6	DEFECT
// chart title	WITHOUT_CLASSIFICATION	0.9999927055024637	WITHOUT_CLASSIFICATION	7.294497536327135E-6	DEFECT
// data // include legend // tooltips // urls	WITHOUT_CLASSIFICATION	0.999996432356437	WITHOUT_CLASSIFICATION	3.567643562977239E-6	DEFECT
// include legend	WITHOUT_CLASSIFICATION	0.9999747749551454	WITHOUT_CLASSIFICATION	2.5225044854627323E-5	DEFECT
// a null key should throw an IllegalArgumentException	WITHOUT_CLASSIFICATION	0.9999888096033368	WITHOUT_CLASSIFICATION	1.1190396663142636E-5	DEFECT
// a null key should throw an IllegalArgumentException	WITHOUT_CLASSIFICATION	0.9999888096033368	WITHOUT_CLASSIFICATION	1.1190396663142636E-5	DEFECT
// include legend	WITHOUT_CLASSIFICATION	0.9999747749551454	WITHOUT_CLASSIFICATION	2.5225044854627323E-5	DEFECT
// include legend	WITHOUT_CLASSIFICATION	0.9999747749551454	WITHOUT_CLASSIFICATION	2.5225044854627323E-5	DEFECT
// include legend	WITHOUT_CLASSIFICATION	0.9999747749551454	WITHOUT_CLASSIFICATION	2.5225044854627323E-5	DEFECT
// include legend	WITHOUT_CLASSIFICATION	0.9999747749551454	WITHOUT_CLASSIFICATION	2.5225044854627323E-5	DEFECT
// include legend	WITHOUT_CLASSIFICATION	0.9999747749551454	WITHOUT_CLASSIFICATION	2.5225044854627323E-5	DEFECT
// data	WITHOUT_CLASSIFICATION	0.9999746107817905	WITHOUT_CLASSIFICATION	2.538921820948366E-5	DEFECT
// data	WITHOUT_CLASSIFICATION	0.9999746107817905	WITHOUT_CLASSIFICATION	2.538921820948366E-5	DEFECT
// data	WITHOUT_CLASSIFICATION	0.9999746107817905	WITHOUT_CLASSIFICATION	2.538921820948366E-5	DEFECT
// data	WITHOUT_CLASSIFICATION	0.9999746107817905	WITHOUT_CLASSIFICATION	2.538921820948366E-5	DEFECT
/* BufferedImage img =*/	WITHOUT_CLASSIFICATION	0.9997558393175392	WITHOUT_CLASSIFICATION	2.441606824608423E-4	DEFECT
// try a listener type that isn't registered	WITHOUT_CLASSIFICATION	0.9999880118360257	WITHOUT_CLASSIFICATION	1.1988163974394682E-5	DEFECT
// name	WITHOUT_CLASSIFICATION	0.999975256269429	WITHOUT_CLASSIFICATION	2.4743730571091853E-5	DEFECT
//extraLargeFont	WITHOUT_CLASSIFICATION	0.9999686417622085	WITHOUT_CLASSIFICATION	3.135823779160348E-5	DEFECT
//largeFont	WITHOUT_CLASSIFICATION	0.9999749261363405	WITHOUT_CLASSIFICATION	2.5073863659458442E-5	DEFECT
//regularFont;	WITHOUT_CLASSIFICATION	0.9999809628790117	WITHOUT_CLASSIFICATION	1.9037120988232177E-5	DEFECT
//titlePaint;	WITHOUT_CLASSIFICATION	0.9999605290776897	WITHOUT_CLASSIFICATION	3.9470922310192426E-5	DEFECT
//subtitlePaint;	WITHOUT_CLASSIFICATION	0.9999706587523164	WITHOUT_CLASSIFICATION	2.934124768355756E-5	DEFECT
//chartBackgroundPaint;	WITHOUT_CLASSIFICATION	0.9999812159182787	WITHOUT_CLASSIFICATION	1.8784081721346146E-5	DEFECT
//legendBackgroundPaint;	WITHOUT_CLASSIFICATION	0.9999866356759282	WITHOUT_CLASSIFICATION	1.3364324071907955E-5	DEFECT
//legendItemPaint;	WITHOUT_CLASSIFICATION	0.999971521468873	WITHOUT_CLASSIFICATION	2.847853112707403E-5	DEFECT
//drawingSupplier;	WITHOUT_CLASSIFICATION	0.9999660958671427	WITHOUT_CLASSIFICATION	3.390413285740721E-5	DEFECT
// value 1	WITHOUT_CLASSIFICATION	0.9999745886623163	WITHOUT_CLASSIFICATION	2.5411337683740035E-5	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.9999937778672211	WITHOUT_CLASSIFICATION	6.222132778908538E-6	DEFECT
// test independence	WITHOUT_CLASSIFICATION	0.9999921506658535	WITHOUT_CLASSIFICATION	7.849334146468513E-6	DEFECT
//tickLabelPaint;	WITHOUT_CLASSIFICATION	0.9999846783538232	WITHOUT_CLASSIFICATION	1.5321646176890005E-5	DEFECT
//itemLabelPaint;	WITHOUT_CLASSIFICATION	0.9999708263649697	WITHOUT_CLASSIFICATION	2.917363503042017E-5	DEFECT
//shadowVisible;	WITHOUT_CLASSIFICATION	0.9999369143537524	WITHOUT_CLASSIFICATION	6.30856462475132E-5	DEFECT
//shadowPaint;	WITHOUT_CLASSIFICATION	0.9999481296887238	WITHOUT_CLASSIFICATION	5.1870311276191024E-5	DEFECT
//barPainter;	WITHOUT_CLASSIFICATION	0.9999353458961233	WITHOUT_CLASSIFICATION	6.4654103876656E-5	DEFECT
//xyBarPainter;	WITHOUT_CLASSIFICATION	0.9999333895683825	WITHOUT_CLASSIFICATION	6.661043161744281E-5	DEFECT
//thermometerPaint;	WITHOUT_CLASSIFICATION	0.9999736017950135	WITHOUT_CLASSIFICATION	2.6398204986486085E-5	DEFECT
//wallPaint;	WITHOUT_CLASSIFICATION	0.9999484132907535	WITHOUT_CLASSIFICATION	5.158670924657057E-5	DEFECT
//errorIndicatorPaint;	WITHOUT_CLASSIFICATION	0.9998866170461648	WITHOUT_CLASSIFICATION	1.1338295383527524E-4	DEFECT
//gridBandAlternatePaint	WITHOUT_CLASSIFICATION	0.9999409329378575	WITHOUT_CLASSIFICATION	5.906706214260743E-5	DEFECT
//private double angle;	WITHOUT_CLASSIFICATION	0.9999849332825538	WITHOUT_CLASSIFICATION	1.5066717446191062E-5	DEFECT
//private double tipRadius;	WITHOUT_CLASSIFICATION	0.9999851029598765	WITHOUT_CLASSIFICATION	1.4897040123429232E-5	DEFECT
//private double tipRadius;	WITHOUT_CLASSIFICATION	0.9999851029598765	WITHOUT_CLASSIFICATION	1.4897040123429232E-5	DEFECT
//private double baseRadius;	WITHOUT_CLASSIFICATION	0.999989650030258	WITHOUT_CLASSIFICATION	1.0349969741996624E-5	DEFECT
//private double arrowLength;	WITHOUT_CLASSIFICATION	0.999978422725921	WITHOUT_CLASSIFICATION	2.1577274078970413E-5	DEFECT
//private double arrowLength;	WITHOUT_CLASSIFICATION	0.999978422725921	WITHOUT_CLASSIFICATION	2.1577274078970413E-5	DEFECT
//private double arrowWidth;	WITHOUT_CLASSIFICATION	0.9999532167346222	WITHOUT_CLASSIFICATION	4.678326537769992E-5	DEFECT
//private Stroke arrowStroke;	WITHOUT_CLASSIFICATION	0.9998569031412526	WITHOUT_CLASSIFICATION	1.4309685874745327E-4	DEFECT
//private Stroke arrowStroke;	WITHOUT_CLASSIFICATION	0.9998569031412526	WITHOUT_CLASSIFICATION	1.4309685874745327E-4	DEFECT
//private Paint arrowPaint;	WITHOUT_CLASSIFICATION	0.9999495303754924	WITHOUT_CLASSIFICATION	5.04696245075698E-5	DEFECT
//private Paint arrowPaint;	WITHOUT_CLASSIFICATION	0.9999495303754924	WITHOUT_CLASSIFICATION	5.04696245075698E-5	DEFECT
//private double labelOffset;	WITHOUT_CLASSIFICATION	0.9999904697825024	WITHOUT_CLASSIFICATION	9.530217497535226E-6	DEFECT
// text	WITHOUT_CLASSIFICATION	0.9999498557152147	WITHOUT_CLASSIFICATION	5.0144284785286065E-5	DEFECT
// text	WITHOUT_CLASSIFICATION	0.9999498557152147	WITHOUT_CLASSIFICATION	5.0144284785286065E-5	DEFECT
// x	WITHOUT_CLASSIFICATION	0.9998956330714864	WITHOUT_CLASSIFICATION	1.0436692851360087E-4	DEFECT
// y	WITHOUT_CLASSIFICATION	0.9999331010986621	WITHOUT_CLASSIFICATION	6.689890133793416E-5	DEFECT
// font	WITHOUT_CLASSIFICATION	0.9999726236325669	WITHOUT_CLASSIFICATION	2.7376367433235134E-5	DEFECT
// paint	WITHOUT_CLASSIFICATION	0.9999810741291943	WITHOUT_CLASSIFICATION	1.8925870805732284E-5	DEFECT
// paint	WITHOUT_CLASSIFICATION	0.9999810741291943	WITHOUT_CLASSIFICATION	1.8925870805732284E-5	DEFECT
// rotation anchor	WITHOUT_CLASSIFICATION	0.9999830820645211	WITHOUT_CLASSIFICATION	1.6917935478888188E-5	DEFECT
// rotation angle	WITHOUT_CLASSIFICATION	0.9999907801017138	WITHOUT_CLASSIFICATION	9.219898286121766E-6	DEFECT
// text anchor	WITHOUT_CLASSIFICATION	0.9999843078937997	WITHOUT_CLASSIFICATION	1.5692106200282822E-5	DEFECT
// textAnchor	WITHOUT_CLASSIFICATION	0.9999859548689944	WITHOUT_CLASSIFICATION	1.4045131005613992E-5	DEFECT
// rotationAnchor	WITHOUT_CLASSIFICATION	0.9999873833411064	WITHOUT_CLASSIFICATION	1.261665889357682E-5	DEFECT
// rotationAngle	WITHOUT_CLASSIFICATION	0.999993430804453	WITHOUT_CLASSIFICATION	6.569195546977472E-6	DEFECT
// category 1	WITHOUT_CLASSIFICATION	0.9999930194715752	WITHOUT_CLASSIFICATION	6.98052842481028E-6	DEFECT
// category 2	WITHOUT_CLASSIFICATION	0.999993793868302	WITHOUT_CLASSIFICATION	6.206131698037719E-6	DEFECT
// value 2	WITHOUT_CLASSIFICATION	0.9999773489897796	WITHOUT_CLASSIFICATION	2.2651010220385116E-5	DEFECT
// stroke	WITHOUT_CLASSIFICATION	0.9999858947570747	WITHOUT_CLASSIFICATION	1.4105242925338302E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9998293165229138	WITHOUT_CLASSIFICATION	1.7068347708604285E-4	DEFECT
// outlinePaint	WITHOUT_CLASSIFICATION	0.9999964775886845	WITHOUT_CLASSIFICATION	3.522411315476329E-6	DEFECT
// stroke	WITHOUT_CLASSIFICATION	0.9999858947570747	WITHOUT_CLASSIFICATION	1.4105242925338302E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9998293165229138	WITHOUT_CLASSIFICATION	1.7068347708604285E-4	DEFECT
// category	WITHOUT_CLASSIFICATION	0.9999945170941815	WITHOUT_CLASSIFICATION	5.4829058184302735E-6	DEFECT
// categoryAnchor	WITHOUT_CLASSIFICATION	0.9999958162122508	WITHOUT_CLASSIFICATION	4.183787749238742E-6	DEFECT
// value	WITHOUT_CLASSIFICATION	0.9999749324705204	WITHOUT_CLASSIFICATION	2.506752947953088E-5	DEFECT
// x0	WITHOUT_CLASSIFICATION	0.9999097708067388	WITHOUT_CLASSIFICATION	9.022919326114509E-5	DEFECT
// tickUnit	WITHOUT_CLASSIFICATION	0.9999808427654409	WITHOUT_CLASSIFICATION	1.915723455915472E-5	DEFECT
// tickMarkPosition	WITHOUT_CLASSIFICATION	0.9999925408304619	WITHOUT_CLASSIFICATION	7.459169538105731E-6	DEFECT
// timeline	WITHOUT_CLASSIFICATION	0.999976237953999	WITHOUT_CLASSIFICATION	2.3762046000922117E-5	DEFECT
// range	WITHOUT_CLASSIFICATION	0.9999708393737138	WITHOUT_CLASSIFICATION	2.9160626286238994E-5	DEFECT
// check that setting the min date to something on or after the // current min date works...	WITHOUT_CLASSIFICATION	0.999996915925235	WITHOUT_CLASSIFICATION	3.0840747649949535E-6	DEFECT
// five dates to check...	WITHOUT_CLASSIFICATION	0.9999942919802973	WITHOUT_CLASSIFICATION	5.708019702626129E-6	DEFECT
// START: check d0 and d1	WITHOUT_CLASSIFICATION	0.9999881477990067	WITHOUT_CLASSIFICATION	1.1852200993347812E-5	DEFECT
// START: check d0 and d1	WITHOUT_CLASSIFICATION	0.9999881477990067	WITHOUT_CLASSIFICATION	1.1852200993347812E-5	DEFECT
// START: check d0 and d1	WITHOUT_CLASSIFICATION	0.9999881477990067	WITHOUT_CLASSIFICATION	1.1852200993347812E-5	DEFECT
// START: check d0 and d1	WITHOUT_CLASSIFICATION	0.9999881477990067	WITHOUT_CLASSIFICATION	1.1852200993347812E-5	DEFECT
// START: check d0 and d1	WITHOUT_CLASSIFICATION	0.9999881477990067	WITHOUT_CLASSIFICATION	1.1852200993347812E-5	DEFECT
// START: check d0 and d1	WITHOUT_CLASSIFICATION	0.9999881477990067	WITHOUT_CLASSIFICATION	1.1852200993347812E-5	DEFECT
// START: check d0 and d1	WITHOUT_CLASSIFICATION	0.9999881477990067	WITHOUT_CLASSIFICATION	1.1852200993347812E-5	DEFECT
// START: check d0 and d1	WITHOUT_CLASSIFICATION	0.9999881477990067	WITHOUT_CLASSIFICATION	1.1852200993347812E-5	DEFECT
// MIDDLE: check d1, d2 and d3	WITHOUT_CLASSIFICATION	0.9999850591347511	WITHOUT_CLASSIFICATION	1.4940865248877584E-5	DEFECT
// MIDDLE: check d1, d2 and d3	WITHOUT_CLASSIFICATION	0.9999850591347511	WITHOUT_CLASSIFICATION	1.4940865248877584E-5	DEFECT
// MIDDLE: check d1, d2 and d3	WITHOUT_CLASSIFICATION	0.9999850591347511	WITHOUT_CLASSIFICATION	1.4940865248877584E-5	DEFECT
// MIDDLE: check d1, d2 and d3	WITHOUT_CLASSIFICATION	0.9999850591347511	WITHOUT_CLASSIFICATION	1.4940865248877584E-5	DEFECT
// MIDDLE: check d1, d2 and d3	WITHOUT_CLASSIFICATION	0.9999850591347511	WITHOUT_CLASSIFICATION	1.4940865248877584E-5	DEFECT
// MIDDLE: check d1, d2 and d3	WITHOUT_CLASSIFICATION	0.9999850591347511	WITHOUT_CLASSIFICATION	1.4940865248877584E-5	DEFECT
// MIDDLE: check d1, d2 and d3	WITHOUT_CLASSIFICATION	0.9999850591347511	WITHOUT_CLASSIFICATION	1.4940865248877584E-5	DEFECT
// MIDDLE: check d1, d2 and d3	WITHOUT_CLASSIFICATION	0.9999850591347511	WITHOUT_CLASSIFICATION	1.4940865248877584E-5	DEFECT
// END: check d3 and d4	WITHOUT_CLASSIFICATION	0.9999687752615204	WITHOUT_CLASSIFICATION	3.122473847962037E-5	DEFECT
// END: check d3 and d4	WITHOUT_CLASSIFICATION	0.9999687752615204	WITHOUT_CLASSIFICATION	3.122473847962037E-5	DEFECT
// END: check d3 and d4	WITHOUT_CLASSIFICATION	0.9999687752615204	WITHOUT_CLASSIFICATION	3.122473847962037E-5	DEFECT
// END: check d3 and d4	WITHOUT_CLASSIFICATION	0.9999687752615204	WITHOUT_CLASSIFICATION	3.122473847962037E-5	DEFECT
// END: check d3 and d4	WITHOUT_CLASSIFICATION	0.9999687752615204	WITHOUT_CLASSIFICATION	3.122473847962037E-5	DEFECT
// END: check d3 and d4	WITHOUT_CLASSIFICATION	0.9999687752615204	WITHOUT_CLASSIFICATION	3.122473847962037E-5	DEFECT
// END: check d3 and d4	WITHOUT_CLASSIFICATION	0.9999687752615204	WITHOUT_CLASSIFICATION	3.122473847962037E-5	DEFECT
// END: check d3 and d4	WITHOUT_CLASSIFICATION	0.9999687752615204	WITHOUT_CLASSIFICATION	3.122473847962037E-5	DEFECT
// START: check d0	WITHOUT_CLASSIFICATION	0.9999831933979967	WITHOUT_CLASSIFICATION	1.6806602003331348E-5	DEFECT
// START: check d0	WITHOUT_CLASSIFICATION	0.9999831933979967	WITHOUT_CLASSIFICATION	1.6806602003331348E-5	DEFECT
// END: check d0	WITHOUT_CLASSIFICATION	0.9999635990047941	WITHOUT_CLASSIFICATION	3.64009952057962E-5	DEFECT
// MIDDLE: check d0	WITHOUT_CLASSIFICATION	0.9999722313711854	WITHOUT_CLASSIFICATION	2.776862881459625E-5	DEFECT
// MIDDLE: check d0	WITHOUT_CLASSIFICATION	0.9999722313711854	WITHOUT_CLASSIFICATION	2.776862881459625E-5	DEFECT
// END: check d0	WITHOUT_CLASSIFICATION	0.9999635990047941	WITHOUT_CLASSIFICATION	3.64009952057962E-5	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999905687775327	WITHOUT_CLASSIFICATION	9.431222467335725E-6	DEFECT
// test independence	WITHOUT_CLASSIFICATION	0.9999921506658535	WITHOUT_CLASSIFICATION	7.849334146468513E-6	DEFECT
// now repeat for a vertical axis	WITHOUT_CLASSIFICATION	0.9999942994974462	WITHOUT_CLASSIFICATION	5.700502553798903E-6	DEFECT
// set start and end date	WITHOUT_CLASSIFICATION	0.9999894044281046	WITHOUT_CLASSIFICATION	1.059557189543046E-5	DEFECT
// if the bug is still present, this leads to an endless loop	WITHOUT_CLASSIFICATION	0.9997524210492533	WITHOUT_CLASSIFICATION	2.4757895074672384E-4	DEFECT
//private boolean autoRangeIncludesZero;	WITHOUT_CLASSIFICATION	0.9999939906740205	WITHOUT_CLASSIFICATION	6.009325979403668E-6	DEFECT
//private NumberTickUnit tickUnit;	WITHOUT_CLASSIFICATION	0.9999784956050224	WITHOUT_CLASSIFICATION	2.1504394977615653E-5	DEFECT
//private NumberFormat numberFormatOverride;	WITHOUT_CLASSIFICATION	0.9999474985833205	WITHOUT_CLASSIFICATION	5.250141667942032E-5	DEFECT
// now replacing the dataset should update the axis range...	WITHOUT_CLASSIFICATION	0.9999970972621286	WITHOUT_CLASSIFICATION	2.90273787131E-6	DEFECT
//axis.setRangeType(RangeType.POSITIVE); //axis.setLowerBound(-5.0); //assertEquals(0.0, axis.getLowerBound(), EPSILON);	WITHOUT_CLASSIFICATION	0.9999926450988533	WITHOUT_CLASSIFICATION	7.3549011466869854E-6	DEFECT
// check that changing a tick label font in a1 doesn't change a2	WITHOUT_CLASSIFICATION	0.9999954954022641	WITHOUT_CLASSIFICATION	4.504597735874607E-6	DEFECT
// check that changing a tick label paint in a1 doesn't change a2	WITHOUT_CLASSIFICATION	0.9999960731184807	WITHOUT_CLASSIFICATION	3.926881519333793E-6	DEFECT
// check that changing a category label tooltip in a1 doesn't change a2	WITHOUT_CLASSIFICATION	0.9999987901721246	WITHOUT_CLASSIFICATION	1.2098278754418702E-6	DEFECT
// set axis bounds to be both greater than 1	WITHOUT_CLASSIFICATION	0.999986099709004	WITHOUT_CLASSIFICATION	1.3900290996027119E-5	DEFECT
// check for bounds interval that includes 1	WITHOUT_CLASSIFICATION	0.9999969657322331	WITHOUT_CLASSIFICATION	3.0342677669084425E-6	DEFECT
// check for bounds interval that includes 1	WITHOUT_CLASSIFICATION	0.9999969657322331	WITHOUT_CLASSIFICATION	3.0342677669084425E-6	DEFECT
// check for both bounds smaller than 1	WITHOUT_CLASSIFICATION	0.9999973479758628	WITHOUT_CLASSIFICATION	2.6520241372743705E-6	DEFECT
// check for both bounds smaller than 1	WITHOUT_CLASSIFICATION	0.9999973479758628	WITHOUT_CLASSIFICATION	2.6520241372743705E-6	DEFECT
// lowerMargin	WITHOUT_CLASSIFICATION	0.99999221622842	WITHOUT_CLASSIFICATION	7.783771580014651E-6	DEFECT
// upperMargin	WITHOUT_CLASSIFICATION	0.9999882267806294	WITHOUT_CLASSIFICATION	1.1773219370574099E-5	DEFECT
// categoryMargin	WITHOUT_CLASSIFICATION	0.9999967658070852	WITHOUT_CLASSIFICATION	3.2341929147544694E-6	DEFECT
// maxCategoryLabelWidthRatio	WITHOUT_CLASSIFICATION	0.9999954369746977	WITHOUT_CLASSIFICATION	4.563025302298473E-6	DEFECT
// categoryLabelPositionOffset	WITHOUT_CLASSIFICATION	0.9999979148262073	WITHOUT_CLASSIFICATION	2.085173792827948E-6	DEFECT
// categoryLabelPositions	WITHOUT_CLASSIFICATION	0.9999977998141151	WITHOUT_CLASSIFICATION	2.200185884998112E-6	DEFECT
// check that changing a tick label font in a1 doesn't change a2	WITHOUT_CLASSIFICATION	0.9999954954022641	WITHOUT_CLASSIFICATION	4.504597735874607E-6	DEFECT
// check that changing a tick label paint in a1 doesn't change a2	WITHOUT_CLASSIFICATION	0.9999960731184807	WITHOUT_CLASSIFICATION	3.926881519333793E-6	DEFECT
// check that changing a category label tooltip in a1 doesn't change a2	WITHOUT_CLASSIFICATION	0.9999987901721246	WITHOUT_CLASSIFICATION	1.2098278754418702E-6	DEFECT
// 4-ms test base timeline for ms2Timeline using 1 included and 1 // excluded segments // // timeline start time = 0 //   | //   v //   0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 ... // +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+... // |  |  |  |  |EE|EE|EE|EE|  |  |  |  |EE|EE|EE|EE|  |  |  |  |    <-- ms2BaseTimeline // +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+... //  \__________  _________/            \____  _____/ //             \/                           \/ //        segment group              segment size = 4 ms //	WITHOUT_CLASSIFICATION	0.9999998391074718	WITHOUT_CLASSIFICATION	1.608925282379465E-7	DEFECT
// categoryLabelToolTips	WITHOUT_CLASSIFICATION	0.9999976498528411	WITHOUT_CLASSIFICATION	2.3501471589450918E-6	DEFECT
// categoryLabelURLs	WITHOUT_CLASSIFICATION	0.9999986263184961	WITHOUT_CLASSIFICATION	1.3736815038871317E-6	DEFECT
// tickLabelPaint	WITHOUT_CLASSIFICATION	0.9999968394494038	WITHOUT_CLASSIFICATION	3.160550596287039E-6	DEFECT
// tickLabelPaint2	WITHOUT_CLASSIFICATION	0.9999965932802488	WITHOUT_CLASSIFICATION	3.4067197511452917E-6	DEFECT
// period	WITHOUT_CLASSIFICATION	0.9999802669049941	WITHOUT_CLASSIFICATION	1.9733095005873708E-5	DEFECT
// offset	WITHOUT_CLASSIFICATION	0.9999806805436273	WITHOUT_CLASSIFICATION	1.9319456372674598E-5	DEFECT
// advance line Stroke	WITHOUT_CLASSIFICATION	0.9999823289034157	WITHOUT_CLASSIFICATION	1.7671096584294687E-5	DEFECT
// advance line Visible	WITHOUT_CLASSIFICATION	0.9999788791417247	WITHOUT_CLASSIFICATION	2.1120858275253597E-5	DEFECT
// cycle bound mapping	WITHOUT_CLASSIFICATION	0.9999951114449831	WITHOUT_CLASSIFICATION	4.8885550169320416E-6	DEFECT
// Create a segmented time line (segment size : 15 minutes)	WITHOUT_CLASSIFICATION	0.9999981266467203	WITHOUT_CLASSIFICATION	1.8733532796911596E-6	DEFECT
// Set start time	WITHOUT_CLASSIFICATION	0.9999749400707058	WITHOUT_CLASSIFICATION	2.5059929294264782E-5	DEFECT
/* PUT exclusions in test */	WITHOUT_CLASSIFICATION	0.9999850112761999	WITHOUT_CLASSIFICATION	1.498872380007785E-5	DEFECT
/** These constants control test cycles in the validateXXXX methods. */	WITHOUT_CLASSIFICATION	0.9999919731547826	WITHOUT_CLASSIFICATION	8.02684521728265E-6	DEFECT
// test 9am-4pm Monday through Friday timeline	WITHOUT_CLASSIFICATION	0.999997001202705	WITHOUT_CLASSIFICATION	2.998797295080467E-6	DEFECT
// calculate 9am on the first Monday after 2001-01-01	WITHOUT_CLASSIFICATION	0.9999983706695224	WITHOUT_CLASSIFICATION	1.629330477624278E-6	DEFECT
// verify attributes set during object construction	WITHOUT_CLASSIFICATION	0.9999979572128458	WITHOUT_CLASSIFICATION	2.0427871542319307E-6	DEFECT
// verify attributes set during object construction	WITHOUT_CLASSIFICATION	0.9999979572128458	WITHOUT_CLASSIFICATION	2.0427871542319307E-6	DEFECT
////////////////////////////////////////////////////////////////////////// // test one-segment and adjacent segments //////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999982314906124	WITHOUT_CLASSIFICATION	1.768509387558078E-6	DEFECT
// get two consecutive segments for various tests	WITHOUT_CLASSIFICATION	0.9999971752320012	WITHOUT_CLASSIFICATION	2.8247679988279508E-6	DEFECT
// verify segments are consecutive and correct	WITHOUT_CLASSIFICATION	0.999983514825404	WITHOUT_CLASSIFICATION	1.648517459598818E-5	DEFECT
// verify various indices inside a segment are the same segment	WITHOUT_CLASSIFICATION	0.9999989054268273	WITHOUT_CLASSIFICATION	1.094573172669831E-6	DEFECT
// try next segment	WITHOUT_CLASSIFICATION	0.9999935680585819	WITHOUT_CLASSIFICATION	6.431941418149563E-6	DEFECT
////////////////////////////////////////////////////////////////////////// // test inc methods //////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999940889691984	WITHOUT_CLASSIFICATION	5.911030801651514E-6	DEFECT
// test inc() method	WITHOUT_CLASSIFICATION	0.9999927426742783	WITHOUT_CLASSIFICATION	7.257325721745005E-6	DEFECT
// logically consecutive segments non-physically consecutive // (with non-contained time in between)	WITHOUT_CLASSIFICATION	0.9999907821572475	WITHOUT_CLASSIFICATION	9.217842752492644E-6	DEFECT
// physically consecutive	WITHOUT_CLASSIFICATION	0.9999904150389207	WITHOUT_CLASSIFICATION	9.584961079250334E-6	DEFECT
// test inc(n) method	WITHOUT_CLASSIFICATION	0.9999861251615595	WITHOUT_CLASSIFICATION	1.3874838440563483E-5	DEFECT
// go to another segment to continue test	WITHOUT_CLASSIFICATION	0.9999986526698144	WITHOUT_CLASSIFICATION	1.3473301855869099E-6	DEFECT
// clear any exceptions in this timeline	WITHOUT_CLASSIFICATION	0.9999556451787122	WITHOUT_CLASSIFICATION	4.435482128785666E-5	DEFECT
// test some included and excluded segments	WITHOUT_CLASSIFICATION	0.9999985334321849	WITHOUT_CLASSIFICATION	1.4665678150250807E-6	DEFECT
// should be an included segment	WITHOUT_CLASSIFICATION	0.9999771981683918	WITHOUT_CLASSIFICATION	2.2801831608188813E-5	DEFECT
// should be an excluded segment	WITHOUT_CLASSIFICATION	0.9999816691360972	WITHOUT_CLASSIFICATION	1.8330863902874007E-5	DEFECT
// fill in the exceptions	WITHOUT_CLASSIFICATION	0.9999899414699833	WITHOUT_CLASSIFICATION	1.0058530016655758E-5	DEFECT
// verify list of exceptions	WITHOUT_CLASSIFICATION	0.9999951886021853	WITHOUT_CLASSIFICATION	4.811397814633115E-6	DEFECT
// include current exception and last one	WITHOUT_CLASSIFICATION	0.9999981119076035	WITHOUT_CLASSIFICATION	1.8880923966359177E-6	DEFECT
// exclude current exception and last one	WITHOUT_CLASSIFICATION	0.9999995899782897	WITHOUT_CLASSIFICATION	4.1002171014177285E-7	DEFECT
// make sure there are no exceptions	WITHOUT_CLASSIFICATION	0.9999919532518698	WITHOUT_CLASSIFICATION	8.04674813016461E-6	DEFECT
// add our exceptions and store locally in ArrayList of Longs	WITHOUT_CLASSIFICATION	0.9999980754423459	WITHOUT_CLASSIFICATION	1.9245576541293577E-6	DEFECT
// only add an exception if it is currently an included segment	WITHOUT_CLASSIFICATION	0.999989808377784	WITHOUT_CLASSIFICATION	1.0191622215989872E-5	DEFECT
// make array of exceptions	WITHOUT_CLASSIFICATION	0.999996426151818	WITHOUT_CLASSIFICATION	3.5738481820083556E-6	DEFECT
// add the base timeline exclusions as timeline's esceptions	WITHOUT_CLASSIFICATION	0.9999961019501291	WITHOUT_CLASSIFICATION	3.8980498709690985E-6	DEFECT
// validate base timeline exclusions added as timeline's esceptions	WITHOUT_CLASSIFICATION	0.9999952619229288	WITHOUT_CLASSIFICATION	4.738077071321068E-6	DEFECT
// start time...	WITHOUT_CLASSIFICATION	0.9999841139555645	WITHOUT_CLASSIFICATION	1.588604443552546E-5	DEFECT
// 1-Jan-2000	WITHOUT_CLASSIFICATION	0.9999684962322889	WITHOUT_CLASSIFICATION	3.150376771099724E-5	DEFECT
//long v = stl.toTimelineValue(946684800020L);	WITHOUT_CLASSIFICATION	0.9999902242117278	WITHOUT_CLASSIFICATION	9.775788272129051E-6	DEFECT
// tick labels visible flag...	WITHOUT_CLASSIFICATION	0.9999937381026818	WITHOUT_CLASSIFICATION	6.2618973182513E-6	DEFECT
// lowerMargin	WITHOUT_CLASSIFICATION	0.99999221622842	WITHOUT_CLASSIFICATION	7.783771580014651E-6	DEFECT
// upperMargin	WITHOUT_CLASSIFICATION	0.9999882267806294	WITHOUT_CLASSIFICATION	1.1773219370574099E-5	DEFECT
// the reverse transformed value will be in the start of the // next non-excluded and non-exception segment	WITHOUT_CLASSIFICATION	0.9999928372175853	WITHOUT_CLASSIFICATION	7.162782414723434E-6	DEFECT
////////////////////////////////////////////////////////////////////////// // test serialization //////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.999996342170794	WITHOUT_CLASSIFICATION	3.657829205849033E-6	DEFECT
// verify all timeline segments included in the // baseTimeline.segment are now exceptions	WITHOUT_CLASSIFICATION	0.9999767222424932	WITHOUT_CLASSIFICATION	2.3277757506745262E-5	DEFECT
////////////////////////////////////////////////////////////////////////// // utility methods //////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999962257108426	WITHOUT_CLASSIFICATION	3.7742891573553074E-6	DEFECT
// subcategories	WITHOUT_CLASSIFICATION	0.9999973720221833	WITHOUT_CLASSIFICATION	2.627977816688387E-6	DEFECT
// subLabelFont	WITHOUT_CLASSIFICATION	0.9999972187853601	WITHOUT_CLASSIFICATION	2.781214639860861E-6	DEFECT
// subLabelPaint	WITHOUT_CLASSIFICATION	0.9999978147187658	WITHOUT_CLASSIFICATION	2.1852812342292727E-6	DEFECT
// some checks that the clone is independent of the original	WITHOUT_CLASSIFICATION	0.9999980960117539	WITHOUT_CLASSIFICATION	1.9039882460239774E-6	DEFECT
// visible flag...	WITHOUT_CLASSIFICATION	0.9999913743375125	WITHOUT_CLASSIFICATION	8.625662487544374E-6	DEFECT
// label...	WITHOUT_CLASSIFICATION	0.9999754681440866	WITHOUT_CLASSIFICATION	2.453185591348351E-5	DEFECT
// label font...	WITHOUT_CLASSIFICATION	0.9999913903195645	WITHOUT_CLASSIFICATION	8.60968043552897E-6	DEFECT
// label paint...	WITHOUT_CLASSIFICATION	0.9999930778879821	WITHOUT_CLASSIFICATION	6.922112017969405E-6	DEFECT
// attributed label...	WITHOUT_CLASSIFICATION	0.9999859395704653	WITHOUT_CLASSIFICATION	1.4060429534810287E-5	DEFECT
// label insets...	WITHOUT_CLASSIFICATION	0.999990012777367	WITHOUT_CLASSIFICATION	9.987222633083145E-6	DEFECT
// label angle...	WITHOUT_CLASSIFICATION	0.9999741340236312	WITHOUT_CLASSIFICATION	2.5865976368789635E-5	DEFECT
// label location...	WITHOUT_CLASSIFICATION	0.9999961325744801	WITHOUT_CLASSIFICATION	3.867425519947266E-6	DEFECT
// axis line visible...	WITHOUT_CLASSIFICATION	0.9999585958223507	WITHOUT_CLASSIFICATION	4.1404177649299926E-5	DEFECT
// axis line stroke...	WITHOUT_CLASSIFICATION	0.9999816544928802	WITHOUT_CLASSIFICATION	1.834550711974819E-5	DEFECT
// axis line paint...	WITHOUT_CLASSIFICATION	0.9999712669526616	WITHOUT_CLASSIFICATION	2.8733047338365267E-5	DEFECT
// tick label font...	WITHOUT_CLASSIFICATION	0.9999939439341693	WITHOUT_CLASSIFICATION	6.0560658306909615E-6	DEFECT
// tick label paint...	WITHOUT_CLASSIFICATION	0.9999937589522949	WITHOUT_CLASSIFICATION	6.241047705086759E-6	DEFECT
// tick marks visible flag...	WITHOUT_CLASSIFICATION	0.9999945038609102	WITHOUT_CLASSIFICATION	5.496139089787404E-6	DEFECT
// tick mark inside length...	WITHOUT_CLASSIFICATION	0.9999972549462114	WITHOUT_CLASSIFICATION	2.745053788599245E-6	DEFECT
// tick mark outside length...	WITHOUT_CLASSIFICATION	0.9999990017070263	WITHOUT_CLASSIFICATION	9.982929737208958E-7	DEFECT
// tick mark stroke...	WITHOUT_CLASSIFICATION	0.9999875612308742	WITHOUT_CLASSIFICATION	1.2438769125760673E-5	DEFECT
// fixed dimension...	WITHOUT_CLASSIFICATION	0.9999643264188741	WITHOUT_CLASSIFICATION	3.567358112589943E-5	DEFECT
// axis line visible flag...	WITHOUT_CLASSIFICATION	0.9999764786040778	WITHOUT_CLASSIFICATION	2.352139592224513E-5	DEFECT
// positiveArrowVisible;	WITHOUT_CLASSIFICATION	0.9999473683393891	WITHOUT_CLASSIFICATION	5.2631660610835245E-5	DEFECT
//private Shape upArrow;	WITHOUT_CLASSIFICATION	0.9999109685260841	WITHOUT_CLASSIFICATION	8.903147391586346E-5	DEFECT
//private Shape downArrow;	WITHOUT_CLASSIFICATION	0.9999340579151135	WITHOUT_CLASSIFICATION	6.594208488646437E-5	DEFECT
//private Shape leftArrow;	WITHOUT_CLASSIFICATION	0.9999474917568891	WITHOUT_CLASSIFICATION	5.2508243110891017E-5	DEFECT
//private Shape rightArrow;	WITHOUT_CLASSIFICATION	0.9999188154327225	WITHOUT_CLASSIFICATION	8.118456727737731E-5	DEFECT
// axisLineStroke	WITHOUT_CLASSIFICATION	0.9999898558282246	WITHOUT_CLASSIFICATION	1.0144171775349363E-5	DEFECT
// inverted	WITHOUT_CLASSIFICATION	0.9999643166675174	WITHOUT_CLASSIFICATION	3.568333248261476E-5	DEFECT
//private TickUnits standardTickUnits;	WITHOUT_CLASSIFICATION	0.9999910038876105	WITHOUT_CLASSIFICATION	8.996112389470072E-6	DEFECT
// verticalTickLabels	WITHOUT_CLASSIFICATION	0.9999914332791341	WITHOUT_CLASSIFICATION	8.566720865790045E-6	DEFECT
// time zone	WITHOUT_CLASSIFICATION	0.9999748822843241	WITHOUT_CLASSIFICATION	2.5117715676005092E-5	DEFECT
// locale	WITHOUT_CLASSIFICATION	0.9999869497986984	WITHOUT_CLASSIFICATION	1.3050201301533516E-5	DEFECT
// chars	WITHOUT_CLASSIFICATION	0.9999824708032115	WITHOUT_CLASSIFICATION	1.752919678852115E-5	DEFECT
// showYear[]	WITHOUT_CLASSIFICATION	0.9999778103035591	WITHOUT_CLASSIFICATION	2.2189696440890042E-5	DEFECT
// yearFormatter	WITHOUT_CLASSIFICATION	0.9998753565870611	WITHOUT_CLASSIFICATION	1.2464341293893738E-4	DEFECT
// NONE / NONE	WITHOUT_CLASSIFICATION	0.9998147459400915	WITHOUT_CLASSIFICATION	1.8525405990844142E-4	DEFECT
// NONE / RANGE	WITHOUT_CLASSIFICATION	0.9998617579398087	WITHOUT_CLASSIFICATION	1.382420601912334E-4	DEFECT
// NONE / FIXED	WITHOUT_CLASSIFICATION	0.9973790038646057	WITHOUT_CLASSIFICATION	0.00262099613539441	DEFECT
// RANGE / NONE	WITHOUT_CLASSIFICATION	0.9998636633559442	WITHOUT_CLASSIFICATION	1.3633664405579313E-4	DEFECT
// paint	WITHOUT_CLASSIFICATION	0.9999810741291943	WITHOUT_CLASSIFICATION	1.8925870805732284E-5	DEFECT
// RANGE / RANGE	WITHOUT_CLASSIFICATION	0.9999056476750976	WITHOUT_CLASSIFICATION	9.435232490235526E-5	DEFECT
// RANGE / FIXED	WITHOUT_CLASSIFICATION	0.9986473566628705	WITHOUT_CLASSIFICATION	0.0013526433371295436	DEFECT
// FIXED / NONE	WITHOUT_CLASSIFICATION	0.9964052932460612	WITHOUT_CLASSIFICATION	0.0035947067539388727	DEFECT
// FIXED / RANGE	WITHOUT_CLASSIFICATION	0.9981180730210147	WITHOUT_CLASSIFICATION	0.0018819269789852832	DEFECT
// FIXED / FIXED	WITHOUT_CLASSIFICATION	0.997232651963757	WITHOUT_CLASSIFICATION	0.0027673480362430634	DEFECT
// TBLRC // 00010 - right item only	WITHOUT_CLASSIFICATION	0.9999944212245447	WITHOUT_CLASSIFICATION	5.578775455336352E-6	DEFECT
// TBLRC // 00010 - right item only	WITHOUT_CLASSIFICATION	0.9999944212245447	WITHOUT_CLASSIFICATION	5.578775455336352E-6	DEFECT
// TBLRC // 00011 - right and center items	WITHOUT_CLASSIFICATION	0.9999979058687257	WITHOUT_CLASSIFICATION	2.0941312742024165E-6	DEFECT
// TBLRC // 00011 - right and center items	WITHOUT_CLASSIFICATION	0.9999979058687257	WITHOUT_CLASSIFICATION	2.0941312742024165E-6	DEFECT
// try case where right item is shorter than center item	WITHOUT_CLASSIFICATION	0.9999591184671752	WITHOUT_CLASSIFICATION	4.088153282471253E-5	DEFECT
// TBLRC // 00100 - left item only	WITHOUT_CLASSIFICATION	0.999991735433555	WITHOUT_CLASSIFICATION	8.264566444998814E-6	DEFECT
// TBLRC // 00101 - left and center items	WITHOUT_CLASSIFICATION	0.9999985269936765	WITHOUT_CLASSIFICATION	1.4730063234623105E-6	DEFECT
// TBLRC // 00101 - left and center items	WITHOUT_CLASSIFICATION	0.9999985269936765	WITHOUT_CLASSIFICATION	1.4730063234623105E-6	DEFECT
// try case where left item is shorter than center item	WITHOUT_CLASSIFICATION	0.9999748874833192	WITHOUT_CLASSIFICATION	2.5112516680766733E-5	DEFECT
// TBLRC // 00110 - left and right items	WITHOUT_CLASSIFICATION	0.9999975218843008	WITHOUT_CLASSIFICATION	2.478115699189094E-6	DEFECT
// TBLRC // 00111 - left, right and center items	WITHOUT_CLASSIFICATION	0.9999991064894352	WITHOUT_CLASSIFICATION	8.935105648001298E-7	DEFECT
// TBLRC // 01000 - bottom item only	WITHOUT_CLASSIFICATION	0.9999895846452241	WITHOUT_CLASSIFICATION	1.0415354775917626E-5	DEFECT
// TBLRC // 01001 - bottom and center only	WITHOUT_CLASSIFICATION	0.9999982780770444	WITHOUT_CLASSIFICATION	1.7219229555648504E-6	DEFECT
// TBLRC // 01010 - bottom and right only	WITHOUT_CLASSIFICATION	0.9999972150492177	WITHOUT_CLASSIFICATION	2.7849507823225357E-6	DEFECT
// TBLRC // 10110 - top, left and right	WITHOUT_CLASSIFICATION	0.999999261072715	WITHOUT_CLASSIFICATION	7.389272850635441E-7	DEFECT
// TBLRC // 10111	WITHOUT_CLASSIFICATION	0.9999179261224477	WITHOUT_CLASSIFICATION	8.207387755231071E-5	DEFECT
// TBLRC // 11000 - top and bottom only	WITHOUT_CLASSIFICATION	0.9999964056368692	WITHOUT_CLASSIFICATION	3.594363130799914E-6	DEFECT
// TBLRC // 11001	WITHOUT_CLASSIFICATION	0.9999237715974278	WITHOUT_CLASSIFICATION	7.622840257206705E-5	DEFECT
// TBLRC // 11010 - top, bottom and right	WITHOUT_CLASSIFICATION	0.9999965053214057	WITHOUT_CLASSIFICATION	3.494678594356635E-6	DEFECT
// TBLRC // 11100	WITHOUT_CLASSIFICATION	0.9999284216954231	WITHOUT_CLASSIFICATION	7.157830457688805E-5	DEFECT
// TBLRC // 11101	WITHOUT_CLASSIFICATION	0.9999188112989783	WITHOUT_CLASSIFICATION	8.118870102171973E-5	DEFECT
// TBLRC // 11110	WITHOUT_CLASSIFICATION	0.9999209165579866	WITHOUT_CLASSIFICATION	7.908344201333118E-5	DEFECT
// TBLRC // 11111 - all	WITHOUT_CLASSIFICATION	0.9999325495746572	WITHOUT_CLASSIFICATION	6.745042534277566E-5	DEFECT
// create dataset 1...	WITHOUT_CLASSIFICATION	0.9999923379049757	WITHOUT_CLASSIFICATION	7.662095024383597E-6	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999905687775327	WITHOUT_CLASSIFICATION	9.431222467335725E-6	DEFECT
// TBLRC // 00110 - left and right items	WITHOUT_CLASSIFICATION	0.9999975218843008	WITHOUT_CLASSIFICATION	2.478115699189094E-6	DEFECT
// TBLRC // 00111 - left, right and center items	WITHOUT_CLASSIFICATION	0.9999991064894352	WITHOUT_CLASSIFICATION	8.935105648001298E-7	DEFECT
// TBLRC // 01000 - bottom item only	WITHOUT_CLASSIFICATION	0.9999895846452241	WITHOUT_CLASSIFICATION	1.0415354775917626E-5	DEFECT
// TBLRC // 01001 - bottom and center only	WITHOUT_CLASSIFICATION	0.9999982780770444	WITHOUT_CLASSIFICATION	1.7219229555648504E-6	DEFECT
// TBLRC // 01010 - bottom and right only	WITHOUT_CLASSIFICATION	0.9999972150492177	WITHOUT_CLASSIFICATION	2.7849507823225357E-6	DEFECT
// TBLRC // 01011 - bottom, right and center	WITHOUT_CLASSIFICATION	0.999997767057481	WITHOUT_CLASSIFICATION	2.232942519059059E-6	DEFECT
// TBLRC // 01100	WITHOUT_CLASSIFICATION	0.9999356275602111	WITHOUT_CLASSIFICATION	6.437243978891893E-5	DEFECT
// TBLRC // 01101 - bottom, left and center	WITHOUT_CLASSIFICATION	0.999998077267801	WITHOUT_CLASSIFICATION	1.9227321990510526E-6	DEFECT
// TBLRC // 01110 - bottom. left and right	WITHOUT_CLASSIFICATION	0.9999983047214521	WITHOUT_CLASSIFICATION	1.6952785478746406E-6	DEFECT
// TBLRC // 01111	WITHOUT_CLASSIFICATION	0.9999261998597215	WITHOUT_CLASSIFICATION	7.380014027850876E-5	DEFECT
// TBLRC // 10000 - top item only	WITHOUT_CLASSIFICATION	0.9999956603878373	WITHOUT_CLASSIFICATION	4.339612162752121E-6	DEFECT
// TBLRC // 10001 - top and center only	WITHOUT_CLASSIFICATION	0.9999993257793114	WITHOUT_CLASSIFICATION	6.742206886242185E-7	DEFECT
// TBLRC // 10010 - right and top only	WITHOUT_CLASSIFICATION	0.9999990274538156	WITHOUT_CLASSIFICATION	9.725461843608672E-7	DEFECT
// TBLRC // 10011 - top, right and center	WITHOUT_CLASSIFICATION	0.9999990483828604	WITHOUT_CLASSIFICATION	9.516171396334902E-7	DEFECT
// TBLRC // 10100 - top and left only	WITHOUT_CLASSIFICATION	0.999998726447281	WITHOUT_CLASSIFICATION	1.2735527190369131E-6	DEFECT
// TBLRC // 10101 - top, left and center	WITHOUT_CLASSIFICATION	0.9999991030347415	WITHOUT_CLASSIFICATION	8.969652584262991E-7	DEFECT
// TBLRC // 10111	WITHOUT_CLASSIFICATION	0.9999179261224477	WITHOUT_CLASSIFICATION	8.207387755231071E-5	DEFECT
// standard test	WITHOUT_CLASSIFICATION	0.9999967630929331	WITHOUT_CLASSIFICATION	3.236907067057294E-6	DEFECT
// tooltip format	WITHOUT_CLASSIFICATION	0.9999847076311112	WITHOUT_CLASSIFICATION	1.5292368888693614E-5	DEFECT
// tooltip format	WITHOUT_CLASSIFICATION	0.9999847076311112	WITHOUT_CLASSIFICATION	1.5292368888693614E-5	DEFECT
// date format	WITHOUT_CLASSIFICATION	0.9999694583958131	WITHOUT_CLASSIFICATION	3.0541604186864484E-5	DEFECT
// Y format	WITHOUT_CLASSIFICATION	0.999946231331864	WITHOUT_CLASSIFICATION	5.3768668136056834E-5	DEFECT
// some setup...	WITHOUT_CLASSIFICATION	0.9999924368010179	WITHOUT_CLASSIFICATION	7.563198982040429E-6	DEFECT
// some setup...	WITHOUT_CLASSIFICATION	0.9999924368010179	WITHOUT_CLASSIFICATION	7.563198982040429E-6	DEFECT
// another test...	WITHOUT_CLASSIFICATION	0.9999936082369663	WITHOUT_CLASSIFICATION	6.391763033792701E-6	DEFECT
// try a null value	WITHOUT_CLASSIFICATION	0.9999911098063922	WITHOUT_CLASSIFICATION	8.890193607867156E-6	DEFECT
// format string...	WITHOUT_CLASSIFICATION	0.9999697071763347	WITHOUT_CLASSIFICATION	3.0292823665375468E-5	DEFECT
// x number format	WITHOUT_CLASSIFICATION	0.9999796748126643	WITHOUT_CLASSIFICATION	2.0325187335745623E-5	DEFECT
// y number format	WITHOUT_CLASSIFICATION	0.9999866388813297	WITHOUT_CLASSIFICATION	1.3361118670378072E-5	DEFECT
// z number format	WITHOUT_CLASSIFICATION	0.999984379508562	WITHOUT_CLASSIFICATION	1.562049143800883E-5	DEFECT
// x date format	WITHOUT_CLASSIFICATION	0.9999593317023381	WITHOUT_CLASSIFICATION	4.0668297661856464E-5	DEFECT
// y date format	WITHOUT_CLASSIFICATION	0.9999744247120947	WITHOUT_CLASSIFICATION	2.5575287905232235E-5	DEFECT
// z date format	WITHOUT_CLASSIFICATION	0.9999686479617971	WITHOUT_CLASSIFICATION	3.135203820291568E-5	DEFECT
// remove plot2, but plot1 is removed instead	WITHOUT_CLASSIFICATION	0.9999914919118235	WITHOUT_CLASSIFICATION	8.508088176448707E-6	DEFECT
// create subplot 1...	WITHOUT_CLASSIFICATION	0.999995453326859	WITHOUT_CLASSIFICATION	4.546673140876658E-6	DEFECT
// create subplot 2...	WITHOUT_CLASSIFICATION	0.9999962175331993	WITHOUT_CLASSIFICATION	3.782466800623375E-6	DEFECT
// add the subplots...	WITHOUT_CLASSIFICATION	0.9999902650002046	WITHOUT_CLASSIFICATION	9.734999795446206E-6	DEFECT
// separatorsVisible	WITHOUT_CLASSIFICATION	0.9999977294075826	WITHOUT_CLASSIFICATION	2.2705924174622947E-6	DEFECT
// separatorStroke	WITHOUT_CLASSIFICATION	0.9999939833551394	WITHOUT_CLASSIFICATION	6.016644860485397E-6	DEFECT
// separatorPaint	WITHOUT_CLASSIFICATION	0.9999982403330598	WITHOUT_CLASSIFICATION	1.7596669401186945E-6	DEFECT
// outerSeparatorExtension	WITHOUT_CLASSIFICATION	0.9999902015124894	WITHOUT_CLASSIFICATION	9.798487510601819E-6	DEFECT
// sectionDepth	WITHOUT_CLASSIFICATION	0.9999969079590987	WITHOUT_CLASSIFICATION	3.0920409013031288E-6	DEFECT
// orientation...	WITHOUT_CLASSIFICATION	0.999985365579425	WITHOUT_CLASSIFICATION	1.4634420574958353E-5	DEFECT
// axisOffset...	WITHOUT_CLASSIFICATION	0.9999650489393598	WITHOUT_CLASSIFICATION	3.495106064024488E-5	DEFECT
// domainAxes...	WITHOUT_CLASSIFICATION	0.9999876135185094	WITHOUT_CLASSIFICATION	1.2386481490686436E-5	DEFECT
// TBLRC // 00000 - no items	WITHOUT_CLASSIFICATION	0.9999827906410912	WITHOUT_CLASSIFICATION	1.7209358908796655E-5	DEFECT
// TBLRC // 11001	WITHOUT_CLASSIFICATION	0.9999237715974278	WITHOUT_CLASSIFICATION	7.622840257206705E-5	DEFECT
// TBLRC // 11010 - top, bottom and right	WITHOUT_CLASSIFICATION	0.9999965053214057	WITHOUT_CLASSIFICATION	3.494678594356635E-6	DEFECT
// TBLRC // 11011	WITHOUT_CLASSIFICATION	0.9999173929097345	WITHOUT_CLASSIFICATION	8.260709026549663E-5	DEFECT
// TBLRC // 11100	WITHOUT_CLASSIFICATION	0.9999284216954231	WITHOUT_CLASSIFICATION	7.157830457688805E-5	DEFECT
// TBLRC // 11101	WITHOUT_CLASSIFICATION	0.9999188112989783	WITHOUT_CLASSIFICATION	8.118870102171973E-5	DEFECT
// TBLRC // 11110	WITHOUT_CLASSIFICATION	0.9999209165579866	WITHOUT_CLASSIFICATION	7.908344201333118E-5	DEFECT
// check handling when the dataset is a regular XYDataset, not an // XYZDataset...	WITHOUT_CLASSIFICATION	0.9999820172921834	WITHOUT_CLASSIFICATION	1.7982707816572337E-5	DEFECT
// domainAxisLocation - no longer a separate field but test anyway...	WITHOUT_CLASSIFICATION	0.9999990757899219	WITHOUT_CLASSIFICATION	9.242100781769334E-7	DEFECT
// domainAxisLocations...	WITHOUT_CLASSIFICATION	0.9999863207178207	WITHOUT_CLASSIFICATION	1.3679282179183193E-5	DEFECT
// draw shared domain axis...	WITHOUT_CLASSIFICATION	0.9999844735234369	WITHOUT_CLASSIFICATION	1.5526476563132744E-5	DEFECT
// rangeAxes...	WITHOUT_CLASSIFICATION	0.9999731293602724	WITHOUT_CLASSIFICATION	2.6870639727708543E-5	DEFECT
// rangeAxisLocation - no longer a separate field but test anyway...	WITHOUT_CLASSIFICATION	0.9999987954092827	WITHOUT_CLASSIFICATION	1.2045907172562344E-6	DEFECT
// rangeAxisLocations...	WITHOUT_CLASSIFICATION	0.9999878491699773	WITHOUT_CLASSIFICATION	1.2150830022712793E-5	DEFECT
// datasetToDomainAxisMap...	WITHOUT_CLASSIFICATION	0.9999879631213773	WITHOUT_CLASSIFICATION	1.203687862267165E-5	DEFECT
// datasetToRangeAxisMap...	WITHOUT_CLASSIFICATION	0.999991340947036	WITHOUT_CLASSIFICATION	8.65905296398296E-6	DEFECT
// renderers...	WITHOUT_CLASSIFICATION	0.9999779879933973	WITHOUT_CLASSIFICATION	2.2012006602755484E-5	DEFECT
// rendering order...	WITHOUT_CLASSIFICATION	0.9999665850460963	WITHOUT_CLASSIFICATION	3.341495390364306E-5	DEFECT
// columnRenderingOrder...	WITHOUT_CLASSIFICATION	0.9999857269880592	WITHOUT_CLASSIFICATION	1.4273011940787596E-5	DEFECT
// rowRenderingOrder...	WITHOUT_CLASSIFICATION	0.9999605376010279	WITHOUT_CLASSIFICATION	3.946239897223155E-5	DEFECT
// domainGridlinesVisible	WITHOUT_CLASSIFICATION	0.9999925262028947	WITHOUT_CLASSIFICATION	7.473797105205376E-6	DEFECT
// domainGridlineStroke	WITHOUT_CLASSIFICATION	0.9999898735954608	WITHOUT_CLASSIFICATION	1.0126404539325833E-5	DEFECT
// domainGridlinePaint	WITHOUT_CLASSIFICATION	0.9999935951273339	WITHOUT_CLASSIFICATION	6.404872666106342E-6	DEFECT
// rangeGridlinesVisible	WITHOUT_CLASSIFICATION	0.9999885173403513	WITHOUT_CLASSIFICATION	1.1482659648686636E-5	DEFECT
// rangeGridlineStroke	WITHOUT_CLASSIFICATION	0.9999887970917253	WITHOUT_CLASSIFICATION	1.1202908274682682E-5	DEFECT
// rangeGridlinePaint	WITHOUT_CLASSIFICATION	0.9999901300694514	WITHOUT_CLASSIFICATION	9.869930548697845E-6	DEFECT
// rangeCrosshairVisible	WITHOUT_CLASSIFICATION	0.9999891530789481	WITHOUT_CLASSIFICATION	1.0846921051985226E-5	DEFECT
// rangeCrosshairValue	WITHOUT_CLASSIFICATION	0.9999900579706262	WITHOUT_CLASSIFICATION	9.942029373675334E-6	DEFECT
// rangeCrosshairStroke	WITHOUT_CLASSIFICATION	0.9999852494338133	WITHOUT_CLASSIFICATION	1.4750566186618417E-5	DEFECT
// rangeCrosshairLockedOnData	WITHOUT_CLASSIFICATION	0.9999951115242051	WITHOUT_CLASSIFICATION	4.888475794896498E-6	DEFECT
// foreground domain markers	WITHOUT_CLASSIFICATION	0.9999946837317544	WITHOUT_CLASSIFICATION	5.316268245581412E-6	DEFECT
// background domain markers	WITHOUT_CLASSIFICATION	0.9999952378007693	WITHOUT_CLASSIFICATION	4.762199230731541E-6	DEFECT
// foreground range markers...	WITHOUT_CLASSIFICATION	0.9999869544856107	WITHOUT_CLASSIFICATION	1.3045514389310807E-5	DEFECT
// background range markers...	WITHOUT_CLASSIFICATION	0.9999883140982049	WITHOUT_CLASSIFICATION	1.1685901795205163E-5	DEFECT
// annotations	WITHOUT_CLASSIFICATION	0.9999542612451977	WITHOUT_CLASSIFICATION	4.573875480228527E-5	DEFECT
// weight	WITHOUT_CLASSIFICATION	0.9999764383178766	WITHOUT_CLASSIFICATION	2.3561682123389576E-5	DEFECT
// fixed domain axis space...	WITHOUT_CLASSIFICATION	0.9999742648970649	WITHOUT_CLASSIFICATION	2.5735102935039273E-5	DEFECT
// fixed range axis space...	WITHOUT_CLASSIFICATION	0.9999616556895559	WITHOUT_CLASSIFICATION	3.8344310444015605E-5	DEFECT
// crosshairDatasetIndex	WITHOUT_CLASSIFICATION	0.9999953600983545	WITHOUT_CLASSIFICATION	4.639901645471327E-6	DEFECT
// domainCrosshairColumnKey	WITHOUT_CLASSIFICATION	0.9999949007012287	WITHOUT_CLASSIFICATION	5.099298771351353E-6	DEFECT
// domainCrosshairRowKey	WITHOUT_CLASSIFICATION	0.9999918622750757	WITHOUT_CLASSIFICATION	8.137724924264031E-6	DEFECT
// domainCrosshairVisible	WITHOUT_CLASSIFICATION	0.9999938337870302	WITHOUT_CLASSIFICATION	6.166212969730362E-6	DEFECT
// domainCrosshairStroke	WITHOUT_CLASSIFICATION	0.9999916146448092	WITHOUT_CLASSIFICATION	8.385355190866477E-6	DEFECT
// shadowGenerator	WITHOUT_CLASSIFICATION	0.9999876747575349	WITHOUT_CLASSIFICATION	1.2325242465153395E-5	DEFECT
// check for independence	WITHOUT_CLASSIFICATION	0.9999958150387479	WITHOUT_CLASSIFICATION	4.184961252083758E-6	DEFECT
// we didn't get an exception so all is good	WITHOUT_CLASSIFICATION	0.9999693758703366	WITHOUT_CLASSIFICATION	3.062412966326257E-5	DEFECT
// should get IllegalArgumentException for negative index	WITHOUT_CLASSIFICATION	0.9999940862185394	WITHOUT_CLASSIFICATION	5.913781460605075E-6	DEFECT
// should get IllegalArgumentException for negative index	WITHOUT_CLASSIFICATION	0.9999940862185394	WITHOUT_CLASSIFICATION	5.913781460605075E-6	DEFECT
// we should be able to give a dataset an arbitrary index	WITHOUT_CLASSIFICATION	0.9999765119691804	WITHOUT_CLASSIFICATION	2.348803081958077E-5	DEFECT
// labelFont	WITHOUT_CLASSIFICATION	0.9999921620244121	WITHOUT_CLASSIFICATION	7.837975587927327E-6	DEFECT
// labelPaint	WITHOUT_CLASSIFICATION	0.99999384146794	WITHOUT_CLASSIFICATION	6.158532060022914E-6	DEFECT
// dial outline paint	WITHOUT_CLASSIFICATION	0.9999967381763185	WITHOUT_CLASSIFICATION	3.2618236815180785E-6	DEFECT
// if multiple axes are mapped, the first in the list should be // returned...	WITHOUT_CLASSIFICATION	0.9999559715585906	WITHOUT_CLASSIFICATION	4.402844140945853E-5	DEFECT
// we should be able to give a renderer an arbitrary index	WITHOUT_CLASSIFICATION	0.9999580576010103	WITHOUT_CLASSIFICATION	4.194239898961497E-5	DEFECT
// add a second dataset	WITHOUT_CLASSIFICATION	0.9999967171346988	WITHOUT_CLASSIFICATION	3.2828653012333383E-6	DEFECT
// add a second dataset	WITHOUT_CLASSIFICATION	0.9999967171346988	WITHOUT_CLASSIFICATION	3.2828653012333383E-6	DEFECT
// add a second dataset	WITHOUT_CLASSIFICATION	0.9999967171346988	WITHOUT_CLASSIFICATION	3.2828653012333383E-6	DEFECT
// by default, the renderer with index 0 is used	WITHOUT_CLASSIFICATION	0.9999914639163541	WITHOUT_CLASSIFICATION	8.536083645891999E-6	DEFECT
// add a second renderer with the same index as dataset2, now it will // be used	WITHOUT_CLASSIFICATION	0.9999924009071224	WITHOUT_CLASSIFICATION	7.599092877559591E-6	DEFECT
// now map the dataset to the second xAxis	WITHOUT_CLASSIFICATION	0.9999986279938772	WITHOUT_CLASSIFICATION	1.372006122816823E-6	DEFECT
// now map the dataset to the second xAxis	WITHOUT_CLASSIFICATION	0.9999986279938772	WITHOUT_CLASSIFICATION	1.372006122816823E-6	DEFECT
// add a second dataset, plotted against a second x axis	WITHOUT_CLASSIFICATION	0.9999989557478246	WITHOUT_CLASSIFICATION	1.0442521753500844E-6	DEFECT
// add a second dataset, plotted against a second axis	WITHOUT_CLASSIFICATION	0.9999990913843262	WITHOUT_CLASSIFICATION	9.086156737991558E-7	DEFECT
// needle paint	WITHOUT_CLASSIFICATION	0.9999966431400508	WITHOUT_CLASSIFICATION	3.3568599491708185E-6	DEFECT
// value font	WITHOUT_CLASSIFICATION	0.9999932259626227	WITHOUT_CLASSIFICATION	6.7740373772150035E-6	DEFECT
// value paint	WITHOUT_CLASSIFICATION	0.9999949211891987	WITHOUT_CLASSIFICATION	5.0788108012480655E-6	DEFECT
// tick label font	WITHOUT_CLASSIFICATION	0.9999973125806144	WITHOUT_CLASSIFICATION	2.6874193855971203E-6	DEFECT
// tick label paint	WITHOUT_CLASSIFICATION	0.9999971975305445	WITHOUT_CLASSIFICATION	2.8024694555186824E-6	DEFECT
// tick label format	WITHOUT_CLASSIFICATION	0.999991592462633	WITHOUT_CLASSIFICATION	8.40753736691008E-6	DEFECT
// tick paint	WITHOUT_CLASSIFICATION	0.9999916072480675	WITHOUT_CLASSIFICATION	8.392751932503355E-6	DEFECT
// draw border	WITHOUT_CLASSIFICATION	0.999981492647631	WITHOUT_CLASSIFICATION	1.850735236902833E-5	DEFECT
// meter angle	WITHOUT_CLASSIFICATION	0.999992503229397	WITHOUT_CLASSIFICATION	7.4967706030173745E-6	DEFECT
//key	WITHOUT_CLASSIFICATION	0.9997385092290961	WITHOUT_CLASSIFICATION	2.614907709038952E-4	DEFECT
//paint	WITHOUT_CLASSIFICATION	0.9999003043115274	WITHOUT_CLASSIFICATION	9.96956884726684E-5	DEFECT
//stroke	WITHOUT_CLASSIFICATION	0.9998791743941899	WITHOUT_CLASSIFICATION	1.208256058101284E-4	DEFECT
//outlinePaint	WITHOUT_CLASSIFICATION	0.9999745699100387	WITHOUT_CLASSIFICATION	2.543008996122546E-5	DEFECT
//outlineStroke	WITHOUT_CLASSIFICATION	0.9999591617751907	WITHOUT_CLASSIFICATION	4.083822480936272E-5	DEFECT
//alpha	WITHOUT_CLASSIFICATION	0.9998498166727732	WITHOUT_CLASSIFICATION	1.501833272268349E-4	DEFECT
// check null argument...	WITHOUT_CLASSIFICATION	0.9999956914785625	WITHOUT_CLASSIFICATION	4.308521437464468E-6	DEFECT
// drawBorder	WITHOUT_CLASSIFICATION	0.9999840596822503	WITHOUT_CLASSIFICATION	1.594031774966348E-5	DEFECT
// rosePaint	WITHOUT_CLASSIFICATION	0.999995840658803	WITHOUT_CLASSIFICATION	4.159341197075501E-6	DEFECT
// roseCenterPaint	WITHOUT_CLASSIFICATION	0.9999957672638894	WITHOUT_CLASSIFICATION	4.23273611059302E-6	DEFECT
// roseHighlightPaint	WITHOUT_CLASSIFICATION	0.9999969857899097	WITHOUT_CLASSIFICATION	3.0142100902222223E-6	DEFECT
// interiorGap...	WITHOUT_CLASSIFICATION	0.9999716917149635	WITHOUT_CLASSIFICATION	2.8308285036473134E-5	DEFECT
// circular	WITHOUT_CLASSIFICATION	0.9999927006353435	WITHOUT_CLASSIFICATION	7.299364656546932E-6	DEFECT
// direction	WITHOUT_CLASSIFICATION	0.9999980695343871	WITHOUT_CLASSIFICATION	1.930465612905753E-6	DEFECT
// ignoreNullValues	WITHOUT_CLASSIFICATION	0.9999944837720591	WITHOUT_CLASSIFICATION	5.516227940886881E-6	DEFECT
// sectionPaint	WITHOUT_CLASSIFICATION	0.9999983889126988	WITHOUT_CLASSIFICATION	1.611087301214346E-6	DEFECT
// sectionPaintMap	WITHOUT_CLASSIFICATION	0.9999982912314967	WITHOUT_CLASSIFICATION	1.7087685033108309E-6	DEFECT
// baseSectionPaint	WITHOUT_CLASSIFICATION	0.9999969588590428	WITHOUT_CLASSIFICATION	3.041140957279815E-6	DEFECT
// sectionOutlinePaint	WITHOUT_CLASSIFICATION	0.999997473958896	WITHOUT_CLASSIFICATION	2.52604110396996E-6	DEFECT
// sectionOutlinePaintList	WITHOUT_CLASSIFICATION	0.9999978872977445	WITHOUT_CLASSIFICATION	2.112702255390585E-6	DEFECT
// baseSectionOutlinePaint	WITHOUT_CLASSIFICATION	0.9999952317662635	WITHOUT_CLASSIFICATION	4.768233736520981E-6	DEFECT
// sectionOutlineStrokeList	WITHOUT_CLASSIFICATION	0.9999968399306935	WITHOUT_CLASSIFICATION	3.1600693063757594E-6	DEFECT
// baseSectionOutlineStroke	WITHOUT_CLASSIFICATION	0.9999950868560544	WITHOUT_CLASSIFICATION	4.913143945618334E-6	DEFECT
// shadowPaint	WITHOUT_CLASSIFICATION	0.9999939402976546	WITHOUT_CLASSIFICATION	6.059702345326409E-6	DEFECT
// shadowXOffset	WITHOUT_CLASSIFICATION	0.9999816437764696	WITHOUT_CLASSIFICATION	1.8356223530422472E-5	DEFECT
// shadowYOffset	WITHOUT_CLASSIFICATION	0.9999866229858351	WITHOUT_CLASSIFICATION	1.3377014164983145E-5	DEFECT
// labelOutlinePaint	WITHOUT_CLASSIFICATION	0.9999922051315614	WITHOUT_CLASSIFICATION	7.79486843865961E-6	DEFECT
// labelOutlineStroke	WITHOUT_CLASSIFICATION	0.999986707842317	WITHOUT_CLASSIFICATION	1.3292157682991575E-5	DEFECT
// labelShadowPaint	WITHOUT_CLASSIFICATION	0.9999955746874223	WITHOUT_CLASSIFICATION	4.425312577644395E-6	DEFECT
// explodePercentages	WITHOUT_CLASSIFICATION	0.9999984536982485	WITHOUT_CLASSIFICATION	1.5463017515408098E-6	DEFECT
// backgroundImage	WITHOUT_CLASSIFICATION	0.9999955288188996	WITHOUT_CLASSIFICATION	4.471181100460058E-6	DEFECT
// startAngle	WITHOUT_CLASSIFICATION	0.9999955325245571	WITHOUT_CLASSIFICATION	4.467475442829226E-6	DEFECT
// backgroundImageAlignment	WITHOUT_CLASSIFICATION	0.9999974929046551	WITHOUT_CLASSIFICATION	2.507095344901257E-6	DEFECT
// backgroundImageAlpha	WITHOUT_CLASSIFICATION	0.9999955444741141	WITHOUT_CLASSIFICATION	4.455525885829327E-6	DEFECT
// outlinePaint	WITHOUT_CLASSIFICATION	0.9999964775886845	WITHOUT_CLASSIFICATION	3.522411315476329E-6	DEFECT
// shadowGenerator	WITHOUT_CLASSIFICATION	0.9999876747575349	WITHOUT_CLASSIFICATION	1.2325242465153395E-5	DEFECT
// direction	WITHOUT_CLASSIFICATION	0.9999980695343871	WITHOUT_CLASSIFICATION	1.930465612905753E-6	DEFECT
// labelLinkPaint	WITHOUT_CLASSIFICATION	0.9999958519339048	WITHOUT_CLASSIFICATION	4.148066095110721E-6	DEFECT
// maximumLabelWidth	WITHOUT_CLASSIFICATION	0.9999914858417959	WITHOUT_CLASSIFICATION	8.514158204175443E-6	DEFECT
// links visible	WITHOUT_CLASSIFICATION	0.9999836375799472	WITHOUT_CLASSIFICATION	1.6362420052687342E-5	DEFECT
// labelGap	WITHOUT_CLASSIFICATION	0.9999825052057875	WITHOUT_CLASSIFICATION	1.7494794212489468E-5	DEFECT
// toolTipGenerator	WITHOUT_CLASSIFICATION	0.9999907025116845	WITHOUT_CLASSIFICATION	9.297488315498478E-6	DEFECT
// linkMargin	WITHOUT_CLASSIFICATION	0.999981354113323	WITHOUT_CLASSIFICATION	1.8645886676994226E-5	DEFECT
// legendItemShape	WITHOUT_CLASSIFICATION	0.9999916877044263	WITHOUT_CLASSIFICATION	8.312295573719687E-6	DEFECT
// labelLinkStroke	WITHOUT_CLASSIFICATION	0.9999959639118154	WITHOUT_CLASSIFICATION	4.036088184579653E-6	DEFECT
// minimumArcAngleToDraw	WITHOUT_CLASSIFICATION	0.9999902595512704	WITHOUT_CLASSIFICATION	9.740448729593337E-6	DEFECT
// urlGenerator	WITHOUT_CLASSIFICATION	0.9999894823570838	WITHOUT_CLASSIFICATION	1.051764291619925E-5	DEFECT
// legendLabelGenerator	WITHOUT_CLASSIFICATION	0.9999851596028708	WITHOUT_CLASSIFICATION	1.4840397129209446E-5	DEFECT
// legendItemShape	WITHOUT_CLASSIFICATION	0.9999916877044263	WITHOUT_CLASSIFICATION	8.312295573719687E-6	DEFECT
// legendLabelToolTipGenerator	WITHOUT_CLASSIFICATION	0.999991668711939	WITHOUT_CLASSIFICATION	8.331288060973738E-6	DEFECT
// legendLabelURLGenerator	WITHOUT_CLASSIFICATION	0.9999904899385588	WITHOUT_CLASSIFICATION	9.510061441103819E-6	DEFECT
// autoPopulateSectionPaint	WITHOUT_CLASSIFICATION	0.9999980232313161	WITHOUT_CLASSIFICATION	1.976768683922374E-6	DEFECT
// autoPopulateSectionOutlinePaint	WITHOUT_CLASSIFICATION	0.9999976553977754	WITHOUT_CLASSIFICATION	2.3446022245753674E-6	DEFECT
// we use ValueMarker for the tests, because we need a concrete // subclass...	WITHOUT_CLASSIFICATION	0.999999482052639	WITHOUT_CLASSIFICATION	5.179473609886875E-7	DEFECT
// autoPopulateSectionOutlineStroke	WITHOUT_CLASSIFICATION	0.9999979206946993	WITHOUT_CLASSIFICATION	2.0793053006884247E-6	DEFECT
// check that the URL generator has been cloned	WITHOUT_CLASSIFICATION	0.9999985015772019	WITHOUT_CLASSIFICATION	1.4984227980550722E-6	DEFECT
// check that the URL generator has been cloned	WITHOUT_CLASSIFICATION	0.9999985015772019	WITHOUT_CLASSIFICATION	1.4984227980550722E-6	DEFECT
// change the shape and make sure it only affects p1	WITHOUT_CLASSIFICATION	0.9999993726060111	WITHOUT_CLASSIFICATION	6.27393988860409E-7	DEFECT
// change the generator and make sure it only affects p1	WITHOUT_CLASSIFICATION	0.9999988708682771	WITHOUT_CLASSIFICATION	1.129131722827378E-6	DEFECT
// change the generator and make sure it only affects p1	WITHOUT_CLASSIFICATION	0.9999988708682771	WITHOUT_CLASSIFICATION	1.129131722827378E-6	DEFECT
// check that null items are ignored if requested	WITHOUT_CLASSIFICATION	0.99999873941426	WITHOUT_CLASSIFICATION	1.260585739945632E-6	DEFECT
// check that zero items are ignored if requested	WITHOUT_CLASSIFICATION	0.9999976665568885	WITHOUT_CLASSIFICATION	2.3334431115339367E-6	DEFECT
// check that negative items are always ignored	WITHOUT_CLASSIFICATION	0.999996626308658	WITHOUT_CLASSIFICATION	3.373691341927232E-6	DEFECT
// noDataMessage	WITHOUT_CLASSIFICATION	0.9999871982715995	WITHOUT_CLASSIFICATION	1.2801728400538206E-5	DEFECT
// noDataMessageFont	WITHOUT_CLASSIFICATION	0.9999893678623154	WITHOUT_CLASSIFICATION	1.0632137684470464E-5	DEFECT
// noDataMessagePaint	WITHOUT_CLASSIFICATION	0.9999881827882329	WITHOUT_CLASSIFICATION	1.1817211767196491E-5	DEFECT
// outlineVisible	WITHOUT_CLASSIFICATION	0.9999951556397395	WITHOUT_CLASSIFICATION	4.844360260579703E-6	DEFECT
// outlineStroke	WITHOUT_CLASSIFICATION	0.9999943432785766	WITHOUT_CLASSIFICATION	5.656721423449892E-6	DEFECT
// foregroundAlpha	WITHOUT_CLASSIFICATION	0.9999973019038018	WITHOUT_CLASSIFICATION	2.6980961981907243E-6	DEFECT
// backgroundAlpha	WITHOUT_CLASSIFICATION	0.9999971240326063	WITHOUT_CLASSIFICATION	2.8759673937285295E-6	DEFECT
// drawingSupplier	WITHOUT_CLASSIFICATION	0.9999952828910366	WITHOUT_CLASSIFICATION	4.717108963488156E-6	DEFECT
// try a null collection	WITHOUT_CLASSIFICATION	0.9999949556574868	WITHOUT_CLASSIFICATION	5.044342513298511E-6	DEFECT
// dataExtractOrder	WITHOUT_CLASSIFICATION	0.9999861832813667	WITHOUT_CLASSIFICATION	1.3816718633262393E-5	DEFECT
// headPercent	WITHOUT_CLASSIFICATION	0.9999890727444694	WITHOUT_CLASSIFICATION	1.092725553073211E-5	DEFECT
// interiorGap	WITHOUT_CLASSIFICATION	0.9999706337758631	WITHOUT_CLASSIFICATION	2.9366224136760248E-5	DEFECT
// maxValue	WITHOUT_CLASSIFICATION	0.9999778331732732	WITHOUT_CLASSIFICATION	2.2166826726819104E-5	DEFECT
// secondary renderers	WITHOUT_CLASSIFICATION	0.9999895473600785	WITHOUT_CLASSIFICATION	1.0452639921596143E-5	DEFECT
// row keys...	WITHOUT_CLASSIFICATION	0.9999806314000574	WITHOUT_CLASSIFICATION	1.936859994258074E-5	DEFECT
// row keys...	WITHOUT_CLASSIFICATION	0.9999806314000574	WITHOUT_CLASSIFICATION	1.936859994258074E-5	DEFECT
// column keys...	WITHOUT_CLASSIFICATION	0.9999936985027088	WITHOUT_CLASSIFICATION	6.301497291130818E-6	DEFECT
// padding	WITHOUT_CLASSIFICATION	0.9999788439590354	WITHOUT_CLASSIFICATION	2.1156040964630734E-5	DEFECT
// column keys...	WITHOUT_CLASSIFICATION	0.9999936985027088	WITHOUT_CLASSIFICATION	6.301497291130818E-6	DEFECT
// column keys...	WITHOUT_CLASSIFICATION	0.9999936985027088	WITHOUT_CLASSIFICATION	6.301497291130818E-6	DEFECT
// column keys...	WITHOUT_CLASSIFICATION	0.9999936985027088	WITHOUT_CLASSIFICATION	6.301497291130818E-6	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999905687775327	WITHOUT_CLASSIFICATION	9.431222467335725E-6	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999905687775327	WITHOUT_CLASSIFICATION	9.431222467335725E-6	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999905687775327	WITHOUT_CLASSIFICATION	9.431222467335725E-6	DEFECT
// labelFont	WITHOUT_CLASSIFICATION	0.9999921620244121	WITHOUT_CLASSIFICATION	7.837975587927327E-6	DEFECT
// labelPaint	WITHOUT_CLASSIFICATION	0.99999384146794	WITHOUT_CLASSIFICATION	6.158532060022914E-6	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9998293165229138	WITHOUT_CLASSIFICATION	1.7068347708604285E-4	DEFECT
// axisLinePaint	WITHOUT_CLASSIFICATION	0.9999881182053973	WITHOUT_CLASSIFICATION	1.1881794602622582E-5	DEFECT
// axisLineStroke	WITHOUT_CLASSIFICATION	0.9999898558282246	WITHOUT_CLASSIFICATION	1.0144171775349363E-5	DEFECT
// remove plot2, but plot1 is removed instead	WITHOUT_CLASSIFICATION	0.9999914919118235	WITHOUT_CLASSIFICATION	8.508088176448707E-6	DEFECT
// orientation...	WITHOUT_CLASSIFICATION	0.999985365579425	WITHOUT_CLASSIFICATION	1.4634420574958353E-5	DEFECT
// axisOffset...	WITHOUT_CLASSIFICATION	0.9999650489393598	WITHOUT_CLASSIFICATION	3.495106064024488E-5	DEFECT
// labelGenerator	WITHOUT_CLASSIFICATION	0.9999876400347886	WITHOUT_CLASSIFICATION	1.2359965211452227E-5	DEFECT
// toolTipGenerator	WITHOUT_CLASSIFICATION	0.9999907025116845	WITHOUT_CLASSIFICATION	9.297488315498478E-6	DEFECT
// urlGenerator	WITHOUT_CLASSIFICATION	0.9999894823570838	WITHOUT_CLASSIFICATION	1.051764291619925E-5	DEFECT
// change a series paint	WITHOUT_CLASSIFICATION	0.9999962715590696	WITHOUT_CLASSIFICATION	3.728440930407812E-6	DEFECT
// baseSeriesOutlineStroke	WITHOUT_CLASSIFICATION	0.9999857085650335	WITHOUT_CLASSIFICATION	1.4291434966469095E-5	DEFECT
// valueFont	WITHOUT_CLASSIFICATION	0.9999928687631012	WITHOUT_CLASSIFICATION	7.131236898748198E-6	DEFECT
// webFilled	WITHOUT_CLASSIFICATION	0.9999813196157313	WITHOUT_CLASSIFICATION	1.8680384268631174E-5	DEFECT
// change a series outline paint	WITHOUT_CLASSIFICATION	0.9999990676060294	WITHOUT_CLASSIFICATION	9.323939706005916E-7	DEFECT
// axisLabelGap	WITHOUT_CLASSIFICATION	0.9999863048008757	WITHOUT_CLASSIFICATION	1.3695199124361456E-5	DEFECT
// thermometerPaint	WITHOUT_CLASSIFICATION	0.9999921528817595	WITHOUT_CLASSIFICATION	7.847118240478746E-6	DEFECT
// change the legendItemShape	WITHOUT_CLASSIFICATION	0.9999952662087085	WITHOUT_CLASSIFICATION	4.733791291544813E-6	DEFECT
// secondary DomainAxisLocations...	WITHOUT_CLASSIFICATION	0.9999970507983105	WITHOUT_CLASSIFICATION	2.9492016895478225E-6	DEFECT
// change a series outline stroke	WITHOUT_CLASSIFICATION	0.99999860007043	WITHOUT_CLASSIFICATION	1.3999295700282715E-6	DEFECT
// valueLocation	WITHOUT_CLASSIFICATION	0.9999977950581379	WITHOUT_CLASSIFICATION	2.204941862217686E-6	DEFECT
// thermometerStroke	WITHOUT_CLASSIFICATION	0.9999637213536319	WITHOUT_CLASSIFICATION	3.6278646368160324E-5	DEFECT
// valuePaint	WITHOUT_CLASSIFICATION	0.999994483320954	WITHOUT_CLASSIFICATION	5.516679046037503E-6	DEFECT
// axisLocation	WITHOUT_CLASSIFICATION	0.9999927906313507	WITHOUT_CLASSIFICATION	7.2093686493154216E-6	DEFECT
// showValueLines	WITHOUT_CLASSIFICATION	0.999994870467052	WITHOUT_CLASSIFICATION	5.129532948018189E-6	DEFECT
// domainAxisLocation...	WITHOUT_CLASSIFICATION	0.9999856528699236	WITHOUT_CLASSIFICATION	1.4347130076476922E-5	DEFECT
// valueFormat	WITHOUT_CLASSIFICATION	0.9999806658062208	WITHOUT_CLASSIFICATION	1.9334193779282878E-5	DEFECT
// this doesn't work	WITHOUT_CLASSIFICATION	0.9999074124163155	WITHOUT_CLASSIFICATION	9.25875836845824E-5	DEFECT
// mercuryPaint	WITHOUT_CLASSIFICATION	0.999996486722996	WITHOUT_CLASSIFICATION	3.513277004102981E-6	DEFECT
// rangeAxisLocation...	WITHOUT_CLASSIFICATION	0.9999872559429949	WITHOUT_CLASSIFICATION	1.2744057005219611E-5	DEFECT
// domainAxis...	WITHOUT_CLASSIFICATION	0.9999778682616627	WITHOUT_CLASSIFICATION	2.2131738337321067E-5	DEFECT
// secondary DomainAxes...	WITHOUT_CLASSIFICATION	0.9999922822498102	WITHOUT_CLASSIFICATION	7.717750189769564E-6	DEFECT
// secondary RangeAxisLocations...	WITHOUT_CLASSIFICATION	0.99999790574077	WITHOUT_CLASSIFICATION	2.094259229956397E-6	DEFECT
// rangeAxis...	WITHOUT_CLASSIFICATION	0.999972698770218	WITHOUT_CLASSIFICATION	2.730122978208598E-5	DEFECT
// renderer	WITHOUT_CLASSIFICATION	0.9999753330687272	WITHOUT_CLASSIFICATION	2.466693127288197E-5	DEFECT
// secondary RangeAxes...	WITHOUT_CLASSIFICATION	0.9999929752196707	WITHOUT_CLASSIFICATION	7.024780329379107E-6	DEFECT
// secondaryDatasetRangeAxisMap...	WITHOUT_CLASSIFICATION	0.9999975428552822	WITHOUT_CLASSIFICATION	2.457144717837505E-6	DEFECT
// secondary DatasetDomainAxisMap...	WITHOUT_CLASSIFICATION	0.9999962736594528	WITHOUT_CLASSIFICATION	3.7263405473416122E-6	DEFECT
// try a collection with a single number plus a null	WITHOUT_CLASSIFICATION	0.9999981446358793	WITHOUT_CLASSIFICATION	1.855364120661157E-6	DEFECT
// create dataset 1...	WITHOUT_CLASSIFICATION	0.9999923379049757	WITHOUT_CLASSIFICATION	7.662095024383597E-6	DEFECT
// create dataset 1...	WITHOUT_CLASSIFICATION	0.9999923379049757	WITHOUT_CLASSIFICATION	7.662095024383597E-6	DEFECT
// lowerBound	WITHOUT_CLASSIFICATION	0.9999906204424238	WITHOUT_CLASSIFICATION	9.379557576165478E-6	DEFECT
// remove plot2, but plot1 is removed instead	WITHOUT_CLASSIFICATION	0.9999914919118235	WITHOUT_CLASSIFICATION	8.508088176448707E-6	DEFECT
// create subplot 1...	WITHOUT_CLASSIFICATION	0.999995453326859	WITHOUT_CLASSIFICATION	4.546673140876658E-6	DEFECT
// create subplot 2...	WITHOUT_CLASSIFICATION	0.9999962175331993	WITHOUT_CLASSIFICATION	3.782466800623375E-6	DEFECT
// parent plot...	WITHOUT_CLASSIFICATION	0.9999944007915776	WITHOUT_CLASSIFICATION	5.599208422406761E-6	DEFECT
// add the subplots...	WITHOUT_CLASSIFICATION	0.9999902650002046	WITHOUT_CLASSIFICATION	9.734999795446206E-6	DEFECT
// domainGridlineStroke	WITHOUT_CLASSIFICATION	0.9999898735954608	WITHOUT_CLASSIFICATION	1.0126404539325833E-5	DEFECT
// domainGridlinePaint	WITHOUT_CLASSIFICATION	0.9999935951273339	WITHOUT_CLASSIFICATION	6.404872666106342E-6	DEFECT
// rangeGridlinesVisible	WITHOUT_CLASSIFICATION	0.9999885173403513	WITHOUT_CLASSIFICATION	1.1482659648686636E-5	DEFECT
// rangeGridlineStroke	WITHOUT_CLASSIFICATION	0.9999887970917253	WITHOUT_CLASSIFICATION	1.1202908274682682E-5	DEFECT
// rangeCrosshairVisible	WITHOUT_CLASSIFICATION	0.9999891530789481	WITHOUT_CLASSIFICATION	1.0846921051985226E-5	DEFECT
// rangeCrosshairValue	WITHOUT_CLASSIFICATION	0.9999900579706262	WITHOUT_CLASSIFICATION	9.942029373675334E-6	DEFECT
// rangeCrosshairStroke	WITHOUT_CLASSIFICATION	0.9999852494338133	WITHOUT_CLASSIFICATION	1.4750566186618417E-5	DEFECT
// rangeCrosshairLockedOnData	WITHOUT_CLASSIFICATION	0.9999951115242051	WITHOUT_CLASSIFICATION	4.888475794896498E-6	DEFECT
// weight	WITHOUT_CLASSIFICATION	0.9999764383178766	WITHOUT_CLASSIFICATION	2.3561682123389576E-5	DEFECT
// fixed legend items	WITHOUT_CLASSIFICATION	0.9999738079137708	WITHOUT_CLASSIFICATION	2.619208622923343E-5	DEFECT
// shadowGenerator	WITHOUT_CLASSIFICATION	0.9999876747575349	WITHOUT_CLASSIFICATION	1.2325242465153395E-5	DEFECT
// should get IllegalArgumentException for negative index	WITHOUT_CLASSIFICATION	0.9999940862185394	WITHOUT_CLASSIFICATION	5.913781460605075E-6	DEFECT
// we should be able to give a dataset an arbitrary index	WITHOUT_CLASSIFICATION	0.9999765119691804	WITHOUT_CLASSIFICATION	2.348803081958077E-5	DEFECT
// we should be able to give a renderer an arbitrary index	WITHOUT_CLASSIFICATION	0.9999580576010103	WITHOUT_CLASSIFICATION	4.194239898961497E-5	DEFECT
// add a second dataset	WITHOUT_CLASSIFICATION	0.9999967171346988	WITHOUT_CLASSIFICATION	3.2828653012333383E-6	DEFECT
// add a second dataset	WITHOUT_CLASSIFICATION	0.9999967171346988	WITHOUT_CLASSIFICATION	3.2828653012333383E-6	DEFECT
// by default, the renderer with index 0 is used	WITHOUT_CLASSIFICATION	0.9999914639163541	WITHOUT_CLASSIFICATION	8.536083645891999E-6	DEFECT
// now map the dataset to the second xAxis	WITHOUT_CLASSIFICATION	0.9999986279938772	WITHOUT_CLASSIFICATION	1.372006122816823E-6	DEFECT
// now map the dataset to the second xAxis	WITHOUT_CLASSIFICATION	0.9999986279938772	WITHOUT_CLASSIFICATION	1.372006122816823E-6	DEFECT
// add a second dataset, plotted against a second x axis	WITHOUT_CLASSIFICATION	0.9999989557478246	WITHOUT_CLASSIFICATION	1.0442521753500844E-6	DEFECT
// add a second dataset, plotted against a second axis	WITHOUT_CLASSIFICATION	0.9999990913843262	WITHOUT_CLASSIFICATION	9.086156737991558E-7	DEFECT
// rangeZeroBaselineVisible	WITHOUT_CLASSIFICATION	0.9999842032074	WITHOUT_CLASSIFICATION	1.579679259998495E-5	DEFECT
// rangeZeroBaselineStroke	WITHOUT_CLASSIFICATION	0.9999870746293604	WITHOUT_CLASSIFICATION	1.2925370639520556E-5	DEFECT
// rangeZeroBaselinePaint	WITHOUT_CLASSIFICATION	0.9999907799103229	WITHOUT_CLASSIFICATION	9.220089677030716E-6	DEFECT
// range markers	WITHOUT_CLASSIFICATION	0.9999781587838106	WITHOUT_CLASSIFICATION	2.184121618946964E-5	DEFECT
// secondary range markers	WITHOUT_CLASSIFICATION	0.9999891068154064	WITHOUT_CLASSIFICATION	1.0893184593529666E-5	DEFECT
// quadrant origin	WITHOUT_CLASSIFICATION	0.9999935367594364	WITHOUT_CLASSIFICATION	6.463240563578211E-6	DEFECT
// quadrant paint	WITHOUT_CLASSIFICATION	0.9999916604262227	WITHOUT_CLASSIFICATION	8.33957377728376E-6	DEFECT
// verify that the plot is listening to the cloned renderer	WITHOUT_CLASSIFICATION	0.9999942672101396	WITHOUT_CLASSIFICATION	5.732789860344895E-6	DEFECT
// no renderer 1	WITHOUT_CLASSIFICATION	0.9999840994784414	WITHOUT_CLASSIFICATION	1.5900521558653322E-5	DEFECT
// actually removes a1	WITHOUT_CLASSIFICATION	0.9999770673087959	WITHOUT_CLASSIFICATION	2.2932691204174128E-5	DEFECT
// set up some objects...	WITHOUT_CLASSIFICATION	0.9999876305192534	WITHOUT_CLASSIFICATION	1.2369480746504396E-5	DEFECT
// paint sequence	WITHOUT_CLASSIFICATION	0.9999971676412139	WITHOUT_CLASSIFICATION	2.832358786105228E-6	DEFECT
// outline paint sequence	WITHOUT_CLASSIFICATION	0.9999981935025509	WITHOUT_CLASSIFICATION	1.8064974491438054E-6	DEFECT
// outline stroke sequence	WITHOUT_CLASSIFICATION	0.9999978144791821	WITHOUT_CLASSIFICATION	2.1855208179471655E-6	DEFECT
// shape sequence	WITHOUT_CLASSIFICATION	0.9999960000200019	WITHOUT_CLASSIFICATION	3.999979998160138E-6	DEFECT
// paint index	WITHOUT_CLASSIFICATION	0.9999722139066247	WITHOUT_CLASSIFICATION	2.7786093375309307E-5	DEFECT
// outline paint index	WITHOUT_CLASSIFICATION	0.999985611972899	WITHOUT_CLASSIFICATION	1.4388027100871088E-5	DEFECT
// outline stroke index	WITHOUT_CLASSIFICATION	0.9999915453929812	WITHOUT_CLASSIFICATION	8.454607018808029E-6	DEFECT
// shape index	WITHOUT_CLASSIFICATION	0.9999883657745577	WITHOUT_CLASSIFICATION	1.163422544222877E-5	DEFECT
// create dataset 2...	WITHOUT_CLASSIFICATION	0.9999936392663543	WITHOUT_CLASSIFICATION	6.360733645694277E-6	DEFECT
// lowerBound	WITHOUT_CLASSIFICATION	0.9999906204424238	WITHOUT_CLASSIFICATION	9.379557576165478E-6	DEFECT
// upperBound	WITHOUT_CLASSIFICATION	0.9999874170753238	WITHOUT_CLASSIFICATION	1.258292467612465E-5	DEFECT
// startAngle	WITHOUT_CLASSIFICATION	0.9999955325245571	WITHOUT_CLASSIFICATION	4.467475442829226E-6	DEFECT
// extent	WITHOUT_CLASSIFICATION	0.9999815827404386	WITHOUT_CLASSIFICATION	1.841725956142879E-5	DEFECT
// tickRadius	WITHOUT_CLASSIFICATION	0.9999894844090251	WITHOUT_CLASSIFICATION	1.051559097498346E-5	DEFECT
// backgroundPaint	WITHOUT_CLASSIFICATION	0.9999979761544323	WITHOUT_CLASSIFICATION	2.0238455676962774E-6	DEFECT
// outlinePaint	WITHOUT_CLASSIFICATION	0.9999964775886845	WITHOUT_CLASSIFICATION	3.522411315476329E-6	DEFECT
// font	WITHOUT_CLASSIFICATION	0.9999726236325669	WITHOUT_CLASSIFICATION	2.7376367433235134E-5	DEFECT
// paint	WITHOUT_CLASSIFICATION	0.9999810741291943	WITHOUT_CLASSIFICATION	1.8925870805732284E-5	DEFECT
// textAnchor	WITHOUT_CLASSIFICATION	0.9999859548689944	WITHOUT_CLASSIFICATION	1.4045131005613992E-5	DEFECT
// stroke	WITHOUT_CLASSIFICATION	0.9999858947570747	WITHOUT_CLASSIFICATION	1.4105242925338302E-5	DEFECT
// now make a change to the renderer and see if it triggers a plot // change event...	WITHOUT_CLASSIFICATION	0.9999992074398588	WITHOUT_CLASSIFICATION	7.925601412318327E-7	DEFECT
// if multiple axes are mapped, the first in the list should be // returned...	WITHOUT_CLASSIFICATION	0.9999559715585906	WITHOUT_CLASSIFICATION	4.402844140945853E-5	DEFECT
// add a second renderer with the same index as dataset2, now it will // be used	WITHOUT_CLASSIFICATION	0.9999924009071224	WITHOUT_CLASSIFICATION	7.599092877559591E-6	DEFECT
// outlineStroke	WITHOUT_CLASSIFICATION	0.9999943432785766	WITHOUT_CLASSIFICATION	5.656721423449892E-6	DEFECT
// check the case where there is a secondary dataset that doesn't // have a renderer (i.e. falls back to renderer 0)	WITHOUT_CLASSIFICATION	0.9999922768804034	WITHOUT_CLASSIFICATION	7.723119596630793E-6	DEFECT
// now remove a3, but since a3.equals(a1), this will in fact remove // a1...	WITHOUT_CLASSIFICATION	0.9996853968097801	WITHOUT_CLASSIFICATION	3.146031902199358E-4	DEFECT
// check an inherited attribute	WITHOUT_CLASSIFICATION	0.9999820871391704	WITHOUT_CLASSIFICATION	1.7912860829609395E-5	DEFECT
// check that the listener lists are independent	WITHOUT_CLASSIFICATION	0.9999913795244738	WITHOUT_CLASSIFICATION	8.620475526137876E-6	DEFECT
// check that the listener lists are independent	WITHOUT_CLASSIFICATION	0.9999913795244738	WITHOUT_CLASSIFICATION	8.620475526137876E-6	DEFECT
// check that the listener lists are independent	WITHOUT_CLASSIFICATION	0.9999913795244738	WITHOUT_CLASSIFICATION	8.620475526137876E-6	DEFECT
// check that the listener lists are independent	WITHOUT_CLASSIFICATION	0.9999913795244738	WITHOUT_CLASSIFICATION	8.620475526137876E-6	DEFECT
// visible	WITHOUT_CLASSIFICATION	0.9999796852597814	WITHOUT_CLASSIFICATION	2.0314740218679827E-5	DEFECT
// radius	WITHOUT_CLASSIFICATION	0.999977281342591	WITHOUT_CLASSIFICATION	2.2718657409048608E-5	DEFECT
// test a default instance	WITHOUT_CLASSIFICATION	0.9999963801325046	WITHOUT_CLASSIFICATION	3.619867495394434E-6	DEFECT
// test a default instance	WITHOUT_CLASSIFICATION	0.9999963801325046	WITHOUT_CLASSIFICATION	3.619867495394434E-6	DEFECT
// test a default instance	WITHOUT_CLASSIFICATION	0.9999963801325046	WITHOUT_CLASSIFICATION	3.619867495394434E-6	DEFECT
// test a default instance	WITHOUT_CLASSIFICATION	0.9999963801325046	WITHOUT_CLASSIFICATION	3.619867495394434E-6	DEFECT
// test a default instance	WITHOUT_CLASSIFICATION	0.9999963801325046	WITHOUT_CLASSIFICATION	3.619867495394434E-6	DEFECT
// test a default instance	WITHOUT_CLASSIFICATION	0.9999963801325046	WITHOUT_CLASSIFICATION	3.619867495394434E-6	DEFECT
// radius	WITHOUT_CLASSIFICATION	0.999977281342591	WITHOUT_CLASSIFICATION	2.2718657409048608E-5	DEFECT
// radius	WITHOUT_CLASSIFICATION	0.999977281342591	WITHOUT_CLASSIFICATION	2.2718657409048608E-5	DEFECT
// foregroundPaint	WITHOUT_CLASSIFICATION	0.9999981013241818	WITHOUT_CLASSIFICATION	1.8986758181107272E-6	DEFECT
// background paint	WITHOUT_CLASSIFICATION	0.9999984990910785	WITHOUT_CLASSIFICATION	1.500908921512085E-6	DEFECT
// foreground paint	WITHOUT_CLASSIFICATION	0.9999985919185596	WITHOUT_CLASSIFICATION	1.4080814404915893E-6	DEFECT
// inner radius	WITHOUT_CLASSIFICATION	0.9999575139030514	WITHOUT_CLASSIFICATION	4.248609694845045E-5	DEFECT
// outer radius	WITHOUT_CLASSIFICATION	0.9999937696391037	WITHOUT_CLASSIFICATION	6.230360896307496E-6	DEFECT
// dataset index	WITHOUT_CLASSIFICATION	0.9999885865765717	WITHOUT_CLASSIFICATION	1.1413423428353866E-5	DEFECT
// dataset index	WITHOUT_CLASSIFICATION	0.9999885865765717	WITHOUT_CLASSIFICATION	1.1413423428353866E-5	DEFECT
// angle	WITHOUT_CLASSIFICATION	0.9999780730446479	WITHOUT_CLASSIFICATION	2.1926955352042426E-5	DEFECT
// frameAnchor	WITHOUT_CLASSIFICATION	0.9999865582478734	WITHOUT_CLASSIFICATION	1.3441752126652026E-5	DEFECT
// templateValue	WITHOUT_CLASSIFICATION	0.9999902436037489	WITHOUT_CLASSIFICATION	9.756396251224666E-6	DEFECT
// valueAnchor	WITHOUT_CLASSIFICATION	0.9999933130362653	WITHOUT_CLASSIFICATION	6.6869637347684084E-6	DEFECT
// fill paint	WITHOUT_CLASSIFICATION	0.9999866072906137	WITHOUT_CLASSIFICATION	1.3392709386150131E-5	DEFECT
// outline paint	WITHOUT_CLASSIFICATION	0.9999966716601826	WITHOUT_CLASSIFICATION	3.3283398173065267E-6	DEFECT
// outline stroke	WITHOUT_CLASSIFICATION	0.9999968420226356	WITHOUT_CLASSIFICATION	3.15797736439423E-6	DEFECT
// test a customised instance	WITHOUT_CLASSIFICATION	0.9999900187789559	WITHOUT_CLASSIFICATION	9.981221044028841E-6	DEFECT
// test a custom instance	WITHOUT_CLASSIFICATION	0.9999866081266346	WITHOUT_CLASSIFICATION	1.3391873365422054E-5	DEFECT
// background	WITHOUT_CLASSIFICATION	0.9999941150196879	WITHOUT_CLASSIFICATION	5.884980312034149E-6	DEFECT
// dial cap	WITHOUT_CLASSIFICATION	0.999991900821135	WITHOUT_CLASSIFICATION	8.099178865039487E-6	DEFECT
// frame	WITHOUT_CLASSIFICATION	0.9999624583436445	WITHOUT_CLASSIFICATION	3.754165635547814E-5	DEFECT
// view	WITHOUT_CLASSIFICATION	0.9999591405846441	WITHOUT_CLASSIFICATION	4.085941535586708E-5	DEFECT
// layer	WITHOUT_CLASSIFICATION	0.9999804310072522	WITHOUT_CLASSIFICATION	1.9568992747712225E-5	DEFECT
// outlinePaint	WITHOUT_CLASSIFICATION	0.9999964775886845	WITHOUT_CLASSIFICATION	3.522411315476329E-6	DEFECT
// font	WITHOUT_CLASSIFICATION	0.9999726236325669	WITHOUT_CLASSIFICATION	2.7376367433235134E-5	DEFECT
// paint	WITHOUT_CLASSIFICATION	0.9999810741291943	WITHOUT_CLASSIFICATION	1.8925870805732284E-5	DEFECT
// stroke	WITHOUT_CLASSIFICATION	0.9999858947570747	WITHOUT_CLASSIFICATION	1.4105242925338302E-5	DEFECT
// shape	WITHOUT_CLASSIFICATION	0.9999780027402255	WITHOUT_CLASSIFICATION	2.1997259774422357E-5	DEFECT
// tickLabelFont	WITHOUT_CLASSIFICATION	0.9999968618474672	WITHOUT_CLASSIFICATION	3.138152532795218E-6	DEFECT
// tickLabelPaint	WITHOUT_CLASSIFICATION	0.9999968394494038	WITHOUT_CLASSIFICATION	3.160550596287039E-6	DEFECT
// outlineStroke	WITHOUT_CLASSIFICATION	0.9999943432785766	WITHOUT_CLASSIFICATION	5.656721423449892E-6	DEFECT
// check an inherited attribute	WITHOUT_CLASSIFICATION	0.9999820871391704	WITHOUT_CLASSIFICATION	1.7912860829609395E-5	DEFECT
// check that the listener lists are independent	WITHOUT_CLASSIFICATION	0.9999913795244738	WITHOUT_CLASSIFICATION	8.620475526137876E-6	DEFECT
// check that the listener lists are independent	WITHOUT_CLASSIFICATION	0.9999913795244738	WITHOUT_CLASSIFICATION	8.620475526137876E-6	DEFECT
// test a default instance	WITHOUT_CLASSIFICATION	0.9999963801325046	WITHOUT_CLASSIFICATION	3.619867495394434E-6	DEFECT
// test a default instance	WITHOUT_CLASSIFICATION	0.9999963801325046	WITHOUT_CLASSIFICATION	3.619867495394434E-6	DEFECT
// test a default instance	WITHOUT_CLASSIFICATION	0.9999963801325046	WITHOUT_CLASSIFICATION	3.619867495394434E-6	DEFECT
// radius	WITHOUT_CLASSIFICATION	0.999977281342591	WITHOUT_CLASSIFICATION	2.2718657409048608E-5	DEFECT
// angle	WITHOUT_CLASSIFICATION	0.9999780730446479	WITHOUT_CLASSIFICATION	2.1926955352042426E-5	DEFECT
// test a customised instance	WITHOUT_CLASSIFICATION	0.9999900187789559	WITHOUT_CLASSIFICATION	9.981221044028841E-6	DEFECT
// test a customised instance	WITHOUT_CLASSIFICATION	0.9999900187789559	WITHOUT_CLASSIFICATION	9.981221044028841E-6	DEFECT
// test a custom instance	WITHOUT_CLASSIFICATION	0.9999866081266346	WITHOUT_CLASSIFICATION	1.3391873365422054E-5	DEFECT
// majorTickIncrement	WITHOUT_CLASSIFICATION	0.9999933648096874	WITHOUT_CLASSIFICATION	6.635190312650384E-6	DEFECT
// majorTickLength	WITHOUT_CLASSIFICATION	0.9999957475617685	WITHOUT_CLASSIFICATION	4.252438231577441E-6	DEFECT
// majorTickPaint	WITHOUT_CLASSIFICATION	0.9999951518354866	WITHOUT_CLASSIFICATION	4.848164513459728E-6	DEFECT
// majorTickStroke	WITHOUT_CLASSIFICATION	0.9999894488459558	WITHOUT_CLASSIFICATION	1.055115404423487E-5	DEFECT
// minorTickLength	WITHOUT_CLASSIFICATION	0.9999934545475353	WITHOUT_CLASSIFICATION	6.54545246466891E-6	DEFECT
// tickLabelOffset	WITHOUT_CLASSIFICATION	0.9999938179862771	WITHOUT_CLASSIFICATION	6.182013722878418E-6	DEFECT
// try a default instance	WITHOUT_CLASSIFICATION	0.9999973683448145	WITHOUT_CLASSIFICATION	2.6316551855382646E-6	DEFECT
// try a customised instance	WITHOUT_CLASSIFICATION	0.9999933397462507	WITHOUT_CLASSIFICATION	6.660253749291024E-6	DEFECT
// label	WITHOUT_CLASSIFICATION	0.9999740959444261	WITHOUT_CLASSIFICATION	2.590405557380613E-5	DEFECT
// gradient paint transformer	WITHOUT_CLASSIFICATION	0.9999838463907194	WITHOUT_CLASSIFICATION	1.615360928058673E-5	DEFECT
// test default instance	WITHOUT_CLASSIFICATION	0.9999972074991914	WITHOUT_CLASSIFICATION	2.7925008085602995E-6	DEFECT
// have to use a concrete subclass...	WITHOUT_CLASSIFICATION	0.999998464209179	WITHOUT_CLASSIFICATION	1.535790820907315E-6	DEFECT
// seriesVisible	WITHOUT_CLASSIFICATION	0.9999881715157645	WITHOUT_CLASSIFICATION	1.1828484235577638E-5	DEFECT
// seriesVisibleList	WITHOUT_CLASSIFICATION	0.9999941517881845	WITHOUT_CLASSIFICATION	5.8482118154662226E-6	DEFECT
// baseSeriesVisible	WITHOUT_CLASSIFICATION	0.9999847210070233	WITHOUT_CLASSIFICATION	1.5278992976663525E-5	DEFECT
// seriesVisibleInLegendList	WITHOUT_CLASSIFICATION	0.9999944550383524	WITHOUT_CLASSIFICATION	5.544961647569729E-6	DEFECT
// baseSeriesVisibleInLegend	WITHOUT_CLASSIFICATION	0.9999885516562892	WITHOUT_CLASSIFICATION	1.1448343710815236E-5	DEFECT
// paintList	WITHOUT_CLASSIFICATION	0.999988293190522	WITHOUT_CLASSIFICATION	1.1706809478032253E-5	DEFECT
// basePaint	WITHOUT_CLASSIFICATION	0.9999930829431734	WITHOUT_CLASSIFICATION	6.917056826603008E-6	DEFECT
// baseFillPaint	WITHOUT_CLASSIFICATION	0.999995098999066	WITHOUT_CLASSIFICATION	4.901000933911784E-6	DEFECT
// outlinePaintList	WITHOUT_CLASSIFICATION	0.9999976589187275	WITHOUT_CLASSIFICATION	2.341081272541974E-6	DEFECT
// baseOutlinePaint	WITHOUT_CLASSIFICATION	0.9999944320546383	WITHOUT_CLASSIFICATION	5.567945361686286E-6	DEFECT
// strokeList	WITHOUT_CLASSIFICATION	0.9999916781249849	WITHOUT_CLASSIFICATION	8.321875014985855E-6	DEFECT
// outlineStrokeList	WITHOUT_CLASSIFICATION	0.9999964983337256	WITHOUT_CLASSIFICATION	3.5016662743774338E-6	DEFECT
// baseOutlineStroke	WITHOUT_CLASSIFICATION	0.9999952463290337	WITHOUT_CLASSIFICATION	4.753670966393721E-6	DEFECT
// shapeList	WITHOUT_CLASSIFICATION	0.9999906109113318	WITHOUT_CLASSIFICATION	9.389088668243549E-6	DEFECT
// baseShape	WITHOUT_CLASSIFICATION	0.9999768662634831	WITHOUT_CLASSIFICATION	2.3133736516800297E-5	DEFECT
// itemLabelsVisibleList	WITHOUT_CLASSIFICATION	0.9999529200553009	WITHOUT_CLASSIFICATION	4.707994469901056E-5	DEFECT
// baseItemLabelsVisible	WITHOUT_CLASSIFICATION	0.9999881655217673	WITHOUT_CLASSIFICATION	1.1834478232729915E-5	DEFECT
// itemLabelFont	WITHOUT_CLASSIFICATION	0.9999829898348822	WITHOUT_CLASSIFICATION	1.701016511782102E-5	DEFECT
// baseItemLabelFont	WITHOUT_CLASSIFICATION	0.999996334928103	WITHOUT_CLASSIFICATION	3.665071896842906E-6	DEFECT
// itemLabelPaint	WITHOUT_CLASSIFICATION	0.9999828684292361	WITHOUT_CLASSIFICATION	1.7131570763796336E-5	DEFECT
// itemLabelPaintList	WITHOUT_CLASSIFICATION	0.9999711314445177	WITHOUT_CLASSIFICATION	2.886855548226734E-5	DEFECT
// baseItemLabelPaint	WITHOUT_CLASSIFICATION	0.9999942481249123	WITHOUT_CLASSIFICATION	5.751875087633251E-6	DEFECT
// positiveItemLabelPositionList;	WITHOUT_CLASSIFICATION	0.9999935074219635	WITHOUT_CLASSIFICATION	6.492578036551731E-6	DEFECT
// basePositiveItemLabelPosition;	WITHOUT_CLASSIFICATION	0.9999949729803026	WITHOUT_CLASSIFICATION	5.027019697437535E-6	DEFECT
// negativeItemLabelPosition;	WITHOUT_CLASSIFICATION	0.9999937674742463	WITHOUT_CLASSIFICATION	6.2325257537212974E-6	DEFECT
// OUTLINE STROKE	WITHOUT_CLASSIFICATION	0.9998015982559895	WITHOUT_CLASSIFICATION	1.9840174401044588E-4	DEFECT
// SHAPE	WITHOUT_CLASSIFICATION	0.9998754953785786	WITHOUT_CLASSIFICATION	1.2450462142145794E-4	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9998293165229138	WITHOUT_CLASSIFICATION	1.7068347708604285E-4	DEFECT
// baseOutlinePaint	WITHOUT_CLASSIFICATION	0.9999944320546383	WITHOUT_CLASSIFICATION	5.567945361686286E-6	DEFECT
// itemLabelAnchorOffset	WITHOUT_CLASSIFICATION	0.9999790668498498	WITHOUT_CLASSIFICATION	2.0933150150180593E-5	DEFECT
// createEntities;	WITHOUT_CLASSIFICATION	0.9999951921367121	WITHOUT_CLASSIFICATION	4.807863288000078E-6	DEFECT
// createEntitiesList;	WITHOUT_CLASSIFICATION	0.999991989569819	WITHOUT_CLASSIFICATION	8.010430181016251E-6	DEFECT
// legendShape	WITHOUT_CLASSIFICATION	0.9999881970761872	WITHOUT_CLASSIFICATION	1.1802923812786488E-5	DEFECT
// baseLegendShape	WITHOUT_CLASSIFICATION	0.9999911802904647	WITHOUT_CLASSIFICATION	8.819709535230588E-6	DEFECT
// legendTextFont	WITHOUT_CLASSIFICATION	0.9999907579813984	WITHOUT_CLASSIFICATION	9.242018601568913E-6	DEFECT
// baseLegendTextFont	WITHOUT_CLASSIFICATION	0.9999898159575972	WITHOUT_CLASSIFICATION	1.0184042402868452E-5	DEFECT
// OUTLINE PAINT	WITHOUT_CLASSIFICATION	0.9998870514448066	WITHOUT_CLASSIFICATION	1.1294855519332292E-4	DEFECT
// ITEM_LABELS_VISIBLE	WITHOUT_CLASSIFICATION	0.9995314375389597	WITHOUT_CLASSIFICATION	4.685624610404108E-4	DEFECT
// ITEM_LABEL_FONT	WITHOUT_CLASSIFICATION	0.9997753676171083	WITHOUT_CLASSIFICATION	2.2463238289180631E-4	DEFECT
// POSITIVE ITEM LABEL POSITION	WITHOUT_CLASSIFICATION	0.9996699626385159	WITHOUT_CLASSIFICATION	3.3003736148406033E-4	DEFECT
// NEGATIVE ITEM LABEL ANCHOR	WITHOUT_CLASSIFICATION	0.9995424827826602	WITHOUT_CLASSIFICATION	4.575172173398207E-4	DEFECT
// failed	WITHOUT_CLASSIFICATION	0.9999872209595501	WITHOUT_CLASSIFICATION	1.2779040449992674E-5	DEFECT
// now check autoPopulate==true	WITHOUT_CLASSIFICATION	0.9999983373947936	WITHOUT_CLASSIFICATION	1.6626052064481526E-6	DEFECT
// now check autoPopulate==true	WITHOUT_CLASSIFICATION	0.9999983373947936	WITHOUT_CLASSIFICATION	1.6626052064481526E-6	DEFECT
// now check autoPopulate==true	WITHOUT_CLASSIFICATION	0.9999983373947936	WITHOUT_CLASSIFICATION	1.6626052064481526E-6	DEFECT
/*CategoryPlot plot =*/	WITHOUT_CLASSIFICATION	0.9999728419168854	WITHOUT_CLASSIFICATION	2.7158083114604917E-5	DEFECT
/*CategoryPlot plot =*/	WITHOUT_CLASSIFICATION	0.9999728419168854	WITHOUT_CLASSIFICATION	2.7158083114604917E-5	DEFECT
/*CategoryPlot plot =*/	WITHOUT_CLASSIFICATION	0.9999728419168854	WITHOUT_CLASSIFICATION	2.7158083114604917E-5	DEFECT
// check a series with no items	WITHOUT_CLASSIFICATION	0.999994972713448	WITHOUT_CLASSIFICATION	5.027286552098427E-6	DEFECT
// check a series with no items	WITHOUT_CLASSIFICATION	0.999994972713448	WITHOUT_CLASSIFICATION	5.027286552098427E-6	DEFECT
// check a series with one item	WITHOUT_CLASSIFICATION	0.9999951209667572	WITHOUT_CLASSIFICATION	4.879033242642592E-6	DEFECT
// check a series with one item	WITHOUT_CLASSIFICATION	0.9999951209667572	WITHOUT_CLASSIFICATION	4.879033242642592E-6	DEFECT
// check a series with one item	WITHOUT_CLASSIFICATION	0.9999951209667572	WITHOUT_CLASSIFICATION	4.879033242642592E-6	DEFECT
// check a series with one item	WITHOUT_CLASSIFICATION	0.9999951209667572	WITHOUT_CLASSIFICATION	4.879033242642592E-6	DEFECT
// check a series with two items	WITHOUT_CLASSIFICATION	0.9999937688906445	WITHOUT_CLASSIFICATION	6.231109355489228E-6	DEFECT
// check a series with two items	WITHOUT_CLASSIFICATION	0.9999937688906445	WITHOUT_CLASSIFICATION	6.231109355489228E-6	DEFECT
// check a series with two items	WITHOUT_CLASSIFICATION	0.9999937688906445	WITHOUT_CLASSIFICATION	6.231109355489228E-6	DEFECT
// check a series with two items	WITHOUT_CLASSIFICATION	0.9999937688906445	WITHOUT_CLASSIFICATION	6.231109355489228E-6	DEFECT
// check a series with three items	WITHOUT_CLASSIFICATION	0.999984625505377	WITHOUT_CLASSIFICATION	1.5374494623018767E-5	DEFECT
// check a series with three items	WITHOUT_CLASSIFICATION	0.999984625505377	WITHOUT_CLASSIFICATION	1.5374494623018767E-5	DEFECT
// check a series with three items	WITHOUT_CLASSIFICATION	0.999984625505377	WITHOUT_CLASSIFICATION	1.5374494623018767E-5	DEFECT
// check a series with three items	WITHOUT_CLASSIFICATION	0.999984625505377	WITHOUT_CLASSIFICATION	1.5374494623018767E-5	DEFECT
// check a series with three items	WITHOUT_CLASSIFICATION	0.999984625505377	WITHOUT_CLASSIFICATION	1.5374494623018767E-5	DEFECT
// check a series with four items	WITHOUT_CLASSIFICATION	0.9999960775290851	WITHOUT_CLASSIFICATION	3.922470914929977E-6	DEFECT
// check a series with four items	WITHOUT_CLASSIFICATION	0.9999960775290851	WITHOUT_CLASSIFICATION	3.922470914929977E-6	DEFECT
// check a series with four items	WITHOUT_CLASSIFICATION	0.9999960775290851	WITHOUT_CLASSIFICATION	3.922470914929977E-6	DEFECT
// check a series with four items	WITHOUT_CLASSIFICATION	0.9999960775290851	WITHOUT_CLASSIFICATION	3.922470914929977E-6	DEFECT
// check a series with repeating items	WITHOUT_CLASSIFICATION	0.9999967164033429	WITHOUT_CLASSIFICATION	3.2835966569974414E-6	DEFECT
// check a series with repeating items	WITHOUT_CLASSIFICATION	0.9999967164033429	WITHOUT_CLASSIFICATION	3.2835966569974414E-6	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9998293165229138	WITHOUT_CLASSIFICATION	1.7068347708604285E-4	DEFECT
// check a series with no items	WITHOUT_CLASSIFICATION	0.999994972713448	WITHOUT_CLASSIFICATION	5.027286552098427E-6	DEFECT
// check a series with one item	WITHOUT_CLASSIFICATION	0.9999951209667572	WITHOUT_CLASSIFICATION	4.879033242642592E-6	DEFECT
// check a series with two items	WITHOUT_CLASSIFICATION	0.9999937688906445	WITHOUT_CLASSIFICATION	6.231109355489228E-6	DEFECT
// check a series with three items	WITHOUT_CLASSIFICATION	0.999984625505377	WITHOUT_CLASSIFICATION	1.5374494623018767E-5	DEFECT
// check a series with four items	WITHOUT_CLASSIFICATION	0.9999960775290851	WITHOUT_CLASSIFICATION	3.922470914929977E-6	DEFECT
// check a series with repeating items	WITHOUT_CLASSIFICATION	0.9999967164033429	WITHOUT_CLASSIFICATION	3.2835966569974414E-6	DEFECT
// we're doing this for testing only, and make sure that we // only add data in ascending order by x-value	WITHOUT_CLASSIFICATION	0.9999980865550904	WITHOUT_CLASSIFICATION	1.913444909638601E-6	DEFECT
// we're doing this for testing only, and make sure that we // only add data in descending order by x-value	WITHOUT_CLASSIFICATION	0.9999976098841519	WITHOUT_CLASSIFICATION	2.3901158481747917E-6	DEFECT
// try with gradient paint	WITHOUT_CLASSIFICATION	0.999985456873456	WITHOUT_CLASSIFICATION	1.4543126544082512E-5	DEFECT
// should be equal...	WITHOUT_CLASSIFICATION	0.9999697026452052	WITHOUT_CLASSIFICATION	3.029735479477013E-5	DEFECT
// should be equal...	WITHOUT_CLASSIFICATION	0.9999697026452052	WITHOUT_CLASSIFICATION	3.029735479477013E-5	DEFECT
// and independent...	WITHOUT_CLASSIFICATION	0.9999857909549897	WITHOUT_CLASSIFICATION	1.420904501023549E-5	DEFECT
// and independent...	WITHOUT_CLASSIFICATION	0.9999857909549897	WITHOUT_CLASSIFICATION	1.420904501023549E-5	DEFECT
// and independent...	WITHOUT_CLASSIFICATION	0.9999857909549897	WITHOUT_CLASSIFICATION	1.420904501023549E-5	DEFECT
// an empty dataset should return a null range	WITHOUT_CLASSIFICATION	0.9999904497289747	WITHOUT_CLASSIFICATION	9.550271025258341E-6	DEFECT
// an empty dataset should return a null range	WITHOUT_CLASSIFICATION	0.9999904497289747	WITHOUT_CLASSIFICATION	9.550271025258341E-6	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9999047863325418	WITHOUT_CLASSIFICATION	9.521366745816887E-5	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9999047863325418	WITHOUT_CLASSIFICATION	9.521366745816887E-5	DEFECT
// the renderer should not be equal to a BarRenderer	WITHOUT_CLASSIFICATION	0.9999589959037463	WITHOUT_CLASSIFICATION	4.100409625370721E-5	DEFECT
// firstBarPaint;	WITHOUT_CLASSIFICATION	0.999990584715946	WITHOUT_CLASSIFICATION	9.415284053903367E-6	DEFECT
// lastBarPaint;	WITHOUT_CLASSIFICATION	0.9999957071219768	WITHOUT_CLASSIFICATION	4.292878023256325E-6	DEFECT
// positiveBarPaint;	WITHOUT_CLASSIFICATION	0.9999925417852558	WITHOUT_CLASSIFICATION	7.4582147442793524E-6	DEFECT
//private Paint negativeBarPaint;	WITHOUT_CLASSIFICATION	0.9999796655323647	WITHOUT_CLASSIFICATION	2.0334467635211894E-5	DEFECT
// quick check for independence	WITHOUT_CLASSIFICATION	0.9999979030474789	WITHOUT_CLASSIFICATION	2.0969525211221257E-6	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9998293165229138	WITHOUT_CLASSIFICATION	1.7068347708604285E-4	DEFECT
// shadowXOffset	WITHOUT_CLASSIFICATION	0.9999816437764696	WITHOUT_CLASSIFICATION	1.8356223530422472E-5	DEFECT
// shadowYOffset	WITHOUT_CLASSIFICATION	0.9999866229858351	WITHOUT_CLASSIFICATION	1.3377014164983145E-5	DEFECT
// toolTipGenerator	WITHOUT_CLASSIFICATION	0.9999907025116845	WITHOUT_CLASSIFICATION	9.297488315498478E-6	DEFECT
// urlGenerator	WITHOUT_CLASSIFICATION	0.9999894823570838	WITHOUT_CLASSIFICATION	1.051764291619925E-5	DEFECT
// should be equal...	WITHOUT_CLASSIFICATION	0.9999697026452052	WITHOUT_CLASSIFICATION	3.029735479477013E-5	DEFECT
// and independent...	WITHOUT_CLASSIFICATION	0.9999857909549897	WITHOUT_CLASSIFICATION	1.420904501023549E-5	DEFECT
// an empty dataset should return a null range	WITHOUT_CLASSIFICATION	0.9999904497289747	WITHOUT_CLASSIFICATION	9.550271025258341E-6	DEFECT
// an empty dataset should return a null range	WITHOUT_CLASSIFICATION	0.9999904497289747	WITHOUT_CLASSIFICATION	9.550271025258341E-6	DEFECT
// an empty dataset should return a null range	WITHOUT_CLASSIFICATION	0.9999904497289747	WITHOUT_CLASSIFICATION	9.550271025258341E-6	DEFECT
// an empty dataset should return a null range	WITHOUT_CLASSIFICATION	0.9999904497289747	WITHOUT_CLASSIFICATION	9.550271025258341E-6	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9999047863325418	WITHOUT_CLASSIFICATION	9.521366745816887E-5	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9999047863325418	WITHOUT_CLASSIFICATION	9.521366745816887E-5	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9999047863325418	WITHOUT_CLASSIFICATION	9.521366745816887E-5	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9999047863325418	WITHOUT_CLASSIFICATION	9.521366745816887E-5	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9999047863325418	WITHOUT_CLASSIFICATION	9.521366745816887E-5	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9999047863325418	WITHOUT_CLASSIFICATION	9.521366745816887E-5	DEFECT
// check that the series visible flag is observed	WITHOUT_CLASSIFICATION	0.9999972638858553	WITHOUT_CLASSIFICATION	2.7361141447751122E-6	DEFECT
// map	WITHOUT_CLASSIFICATION	0.9999556882590958	WITHOUT_CLASSIFICATION	4.4311740904288106E-5	DEFECT
// toolTipGeneratorList	WITHOUT_CLASSIFICATION	0.9999872676764325	WITHOUT_CLASSIFICATION	1.2732323567349874E-5	DEFECT
// baseToolTipGenerator	WITHOUT_CLASSIFICATION	0.9999901316410321	WITHOUT_CLASSIFICATION	9.868358967842177E-6	DEFECT
// itemLabelGenerator	WITHOUT_CLASSIFICATION	0.9999464248694955	WITHOUT_CLASSIFICATION	5.3575130504611974E-5	DEFECT
// itemLabelGeneratorList	WITHOUT_CLASSIFICATION	0.9999533709828184	WITHOUT_CLASSIFICATION	4.6629017181655916E-5	DEFECT
// baseItemLabelGenerator	WITHOUT_CLASSIFICATION	0.9999884561768287	WITHOUT_CLASSIFICATION	1.1543823171319252E-5	DEFECT
// urlGeneratorList	WITHOUT_CLASSIFICATION	0.9999943740917698	WITHOUT_CLASSIFICATION	5.625908230110367E-6	DEFECT
// baseItemURLGenerator	WITHOUT_CLASSIFICATION	0.9999866058063456	WITHOUT_CLASSIFICATION	1.3394193654347221E-5	DEFECT
// legendItemLabelGenerator	WITHOUT_CLASSIFICATION	0.9999860336892508	WITHOUT_CLASSIFICATION	1.3966310749211466E-5	DEFECT
// legendItemToolTipGenerator	WITHOUT_CLASSIFICATION	0.9999893342730828	WITHOUT_CLASSIFICATION	1.0665726917147151E-5	DEFECT
// legendItemURLGenerator	WITHOUT_CLASSIFICATION	0.9999903968332274	WITHOUT_CLASSIFICATION	9.603166772488334E-6	DEFECT
// check that the generator has been cloned	WITHOUT_CLASSIFICATION	0.9999963267335864	WITHOUT_CLASSIFICATION	3.673266413604649E-6	DEFECT
// check that the generator has been cloned	WITHOUT_CLASSIFICATION	0.9999963267335864	WITHOUT_CLASSIFICATION	3.673266413604649E-6	DEFECT
// check that the generator has been cloned	WITHOUT_CLASSIFICATION	0.9999963267335864	WITHOUT_CLASSIFICATION	3.673266413604649E-6	DEFECT
// base value	WITHOUT_CLASSIFICATION	0.9999863716464188	WITHOUT_CLASSIFICATION	1.362835358109984E-5	DEFECT
// itemMargin	WITHOUT_CLASSIFICATION	0.9999624920662185	WITHOUT_CLASSIFICATION	3.750793378147881E-5	DEFECT
// drawBarOutline	WITHOUT_CLASSIFICATION	0.9999941355396558	WITHOUT_CLASSIFICATION	5.864460344238835E-6	DEFECT
// maximumBarWidth	WITHOUT_CLASSIFICATION	0.999979613764858	WITHOUT_CLASSIFICATION	2.0386235142018335E-5	DEFECT
// minimumBarLength	WITHOUT_CLASSIFICATION	0.9999918496249729	WITHOUT_CLASSIFICATION	8.150375027088534E-6	DEFECT
// gradientPaintTransformer	WITHOUT_CLASSIFICATION	0.9999826096459712	WITHOUT_CLASSIFICATION	1.7390354028822555E-5	DEFECT
// positiveItemLabelPositionFallback	WITHOUT_CLASSIFICATION	0.9999969604084832	WITHOUT_CLASSIFICATION	3.039591516840459E-6	DEFECT
// negativeItemLabelPositionFallback	WITHOUT_CLASSIFICATION	0.9999977765030273	WITHOUT_CLASSIFICATION	2.2234969725853294E-6	DEFECT
// barPainter	WITHOUT_CLASSIFICATION	0.9999883707598592	WITHOUT_CLASSIFICATION	1.1629240140649004E-5	DEFECT
// shadowsVisible	WITHOUT_CLASSIFICATION	0.9999915048181098	WITHOUT_CLASSIFICATION	8.495181890157445E-6	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999905687775327	WITHOUT_CLASSIFICATION	9.431222467335725E-6	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9998293165229138	WITHOUT_CLASSIFICATION	1.7068347708604285E-4	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9998293165229138	WITHOUT_CLASSIFICATION	1.7068347708604285E-4	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9998293165229138	WITHOUT_CLASSIFICATION	1.7068347708604285E-4	DEFECT
// shadowXOffset	WITHOUT_CLASSIFICATION	0.9999816437764696	WITHOUT_CLASSIFICATION	1.8356223530422472E-5	DEFECT
// shadowYOffset	WITHOUT_CLASSIFICATION	0.9999866229858351	WITHOUT_CLASSIFICATION	1.3377014164983145E-5	DEFECT
// an empty dataset should return a null range	WITHOUT_CLASSIFICATION	0.9999904497289747	WITHOUT_CLASSIFICATION	9.550271025258341E-6	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9999047863325418	WITHOUT_CLASSIFICATION	9.521366745816887E-5	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9999047863325418	WITHOUT_CLASSIFICATION	9.521366745816887E-5	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9999047863325418	WITHOUT_CLASSIFICATION	9.521366745816887E-5	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9999047863325418	WITHOUT_CLASSIFICATION	9.521366745816887E-5	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9999047863325418	WITHOUT_CLASSIFICATION	9.521366745816887E-5	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9999047863325418	WITHOUT_CLASSIFICATION	9.521366745816887E-5	DEFECT
// check that the series visible flag is observed	WITHOUT_CLASSIFICATION	0.9999972638858553	WITHOUT_CLASSIFICATION	2.7361141447751122E-6	DEFECT
// barPainter	WITHOUT_CLASSIFICATION	0.9999883707598592	WITHOUT_CLASSIFICATION	1.1629240140649004E-5	DEFECT
// shadowsVisible	WITHOUT_CLASSIFICATION	0.9999915048181098	WITHOUT_CLASSIFICATION	8.495181890157445E-6	DEFECT
// try null argument	WITHOUT_CLASSIFICATION	0.9999932565862294	WITHOUT_CLASSIFICATION	6.743413770635265E-6	DEFECT
// default instances	WITHOUT_CLASSIFICATION	0.9999985515299408	WITHOUT_CLASSIFICATION	1.4484700592296547E-6	DEFECT
// default instances	WITHOUT_CLASSIFICATION	0.9999985515299408	WITHOUT_CLASSIFICATION	1.4484700592296547E-6	DEFECT
// check that super class fields are being looked at...	WITHOUT_CLASSIFICATION	0.9999956880429828	WITHOUT_CLASSIFICATION	4.3119570172025084E-6	DEFECT
// setUseYInterval	WITHOUT_CLASSIFICATION	0.9999972534116806	WITHOUT_CLASSIFICATION	2.746588319401025E-6	DEFECT
// setBase()	WITHOUT_CLASSIFICATION	0.999989985390131	WITHOUT_CLASSIFICATION	1.0014609868946347E-5	DEFECT
// try empty dataset	WITHOUT_CLASSIFICATION	0.9999956044916445	WITHOUT_CLASSIFICATION	4.395508355585342E-6	DEFECT
// setGradientPaintTransformer()	WITHOUT_CLASSIFICATION	0.9999932944981785	WITHOUT_CLASSIFICATION	6.705501821430723E-6	DEFECT
// setDrawBarOutline()	WITHOUT_CLASSIFICATION	0.999993496062959	WITHOUT_CLASSIFICATION	6.503937041123018E-6	DEFECT
// setMargin()	WITHOUT_CLASSIFICATION	0.9999959976133316	WITHOUT_CLASSIFICATION	4.002386668380944E-6	DEFECT
// legendBar	WITHOUT_CLASSIFICATION	0.9999884839840164	WITHOUT_CLASSIFICATION	1.1516015983530874E-5	DEFECT
// positiveItemLabelFallbackPosition	WITHOUT_CLASSIFICATION	0.9999973514414491	WITHOUT_CLASSIFICATION	2.6485585509958504E-6	DEFECT
// negativeItemLabelFallbackPosition	WITHOUT_CLASSIFICATION	0.9999980625484481	WITHOUT_CLASSIFICATION	1.9374515519422663E-6	DEFECT
// check a list containing a non-Number object	WITHOUT_CLASSIFICATION	0.9999986240480249	WITHOUT_CLASSIFICATION	1.3759519751574471E-6	DEFECT
// try something from the base class	WITHOUT_CLASSIFICATION	0.9999987547942497	WITHOUT_CLASSIFICATION	1.245205750302743E-6	DEFECT
// positive paint	WITHOUT_CLASSIFICATION	0.999985897785131	WITHOUT_CLASSIFICATION	1.4102214869020501E-5	DEFECT
// negative paint	WITHOUT_CLASSIFICATION	0.9999900685302564	WITHOUT_CLASSIFICATION	9.93146974365624E-6	DEFECT
// shapesVisible	WITHOUT_CLASSIFICATION	0.9999924321059135	WITHOUT_CLASSIFICATION	7.5678940864566735E-6	DEFECT
// legendLine	WITHOUT_CLASSIFICATION	0.9999883697931726	WITHOUT_CLASSIFICATION	1.163020682740603E-5	DEFECT
// roundXCoordinates	WITHOUT_CLASSIFICATION	0.9999977829102713	WITHOUT_CLASSIFICATION	2.217089728734175E-6	DEFECT
// drawOpenTicks	WITHOUT_CLASSIFICATION	0.999995567701724	WITHOUT_CLASSIFICATION	4.432298275928233E-6	DEFECT
// drawCloseTicks	WITHOUT_CLASSIFICATION	0.9999978373518953	WITHOUT_CLASSIFICATION	2.1626481046664606E-6	DEFECT
// openTickPaint	WITHOUT_CLASSIFICATION	0.9999972213338153	WITHOUT_CLASSIFICATION	2.778666184690012E-6	DEFECT
// closeTickPaint	WITHOUT_CLASSIFICATION	0.9999984119953879	WITHOUT_CLASSIFICATION	1.5880046122261492E-6	DEFECT
// tickLength	WITHOUT_CLASSIFICATION	0.9999886920364137	WITHOUT_CLASSIFICATION	1.1307963586185636E-5	DEFECT
// try an empty dataset - should return a null range	WITHOUT_CLASSIFICATION	0.9999942172881195	WITHOUT_CLASSIFICATION	5.782711880385958E-6	DEFECT
// try a null dataset - should return a null range	WITHOUT_CLASSIFICATION	0.9999975219646792	WITHOUT_CLASSIFICATION	2.478035320842252E-6	DEFECT
// drawXError	WITHOUT_CLASSIFICATION	0.999909176077191	WITHOUT_CLASSIFICATION	9.082392280899297E-5	DEFECT
// drawYError	WITHOUT_CLASSIFICATION	0.9999331127208609	WITHOUT_CLASSIFICATION	6.688727913907871E-5	DEFECT
// capLength	WITHOUT_CLASSIFICATION	0.9999928860675831	WITHOUT_CLASSIFICATION	7.113932416989962E-6	DEFECT
// errorPaint	WITHOUT_CLASSIFICATION	0.9999442883878206	WITHOUT_CLASSIFICATION	5.571161217947976E-5	DEFECT
// errorStroke	WITHOUT_CLASSIFICATION	0.9997708058098527	WITHOUT_CLASSIFICATION	2.2919419014743884E-4	DEFECT
// check boxPaint null also	WITHOUT_CLASSIFICATION	0.9999965863834979	WITHOUT_CLASSIFICATION	3.413616502049415E-6	DEFECT
// upPaint	WITHOUT_CLASSIFICATION	0.9999915189644232	WITHOUT_CLASSIFICATION	8.48103557688916E-6	DEFECT
// downPaint	WITHOUT_CLASSIFICATION	0.9999924470163584	WITHOUT_CLASSIFICATION	7.552983641716941E-6	DEFECT
// drawVolume	WITHOUT_CLASSIFICATION	0.9999928503636318	WITHOUT_CLASSIFICATION	7.149636368162607E-6	DEFECT
// candleWidth	WITHOUT_CLASSIFICATION	0.9999954745293937	WITHOUT_CLASSIFICATION	4.525470606184771E-6	DEFECT
// maxCandleWidthInMilliseconds	WITHOUT_CLASSIFICATION	0.9999930627922828	WITHOUT_CLASSIFICATION	6.93720771717092E-6	DEFECT
// autoWidthMethod	WITHOUT_CLASSIFICATION	0.9999868705311458	WITHOUT_CLASSIFICATION	1.3129468854158383E-5	DEFECT
// autoWidthFactor	WITHOUT_CLASSIFICATION	0.9999899229106367	WITHOUT_CLASSIFICATION	1.0077089363253468E-5	DEFECT
// backgroundPaint	WITHOUT_CLASSIFICATION	0.9999979761544323	WITHOUT_CLASSIFICATION	2.0238455676962774E-6	DEFECT
// padding	WITHOUT_CLASSIFICATION	0.9999788439590354	WITHOUT_CLASSIFICATION	2.1156040964630734E-5	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999905687775327	WITHOUT_CLASSIFICATION	9.431222467335725E-6	DEFECT
// fillPaintTransformer	WITHOUT_CLASSIFICATION	0.9999778284525096	WITHOUT_CLASSIFICATION	2.2171547490367964E-5	DEFECT
// fillPaint	WITHOUT_CLASSIFICATION	0.9999897373786347	WITHOUT_CLASSIFICATION	1.0262621365334329E-5	DEFECT
// outlinePaint	WITHOUT_CLASSIFICATION	0.9999964775886845	WITHOUT_CLASSIFICATION	3.522411315476329E-6	DEFECT
// linePaint	WITHOUT_CLASSIFICATION	0.9999856022246217	WITHOUT_CLASSIFICATION	1.43977753782242E-5	DEFECT
// paint	WITHOUT_CLASSIFICATION	0.9999810741291943	WITHOUT_CLASSIFICATION	1.8925870805732284E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9998293165229138	WITHOUT_CLASSIFICATION	1.7068347708604285E-4	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9998293165229138	WITHOUT_CLASSIFICATION	1.7068347708604285E-4	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9998293165229138	WITHOUT_CLASSIFICATION	1.7068347708604285E-4	DEFECT
// shape	WITHOUT_CLASSIFICATION	0.9999780027402255	WITHOUT_CLASSIFICATION	2.1997259774422357E-5	DEFECT
// outlineStroke	WITHOUT_CLASSIFICATION	0.9999943432785766	WITHOUT_CLASSIFICATION	5.656721423449892E-6	DEFECT
// axisLocation	WITHOUT_CLASSIFICATION	0.9999927906313507	WITHOUT_CLASSIFICATION	7.2093686493154216E-6	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9999047863325418	WITHOUT_CLASSIFICATION	9.521366745816887E-5	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9999047863325418	WITHOUT_CLASSIFICATION	9.521366745816887E-5	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9999047863325418	WITHOUT_CLASSIFICATION	9.521366745816887E-5	DEFECT
// check that the generator has been cloned	WITHOUT_CLASSIFICATION	0.9999963267335864	WITHOUT_CLASSIFICATION	3.673266413604649E-6	DEFECT
// check that the generator has been cloned	WITHOUT_CLASSIFICATION	0.9999963267335864	WITHOUT_CLASSIFICATION	3.673266413604649E-6	DEFECT
// check that the generator has been cloned	WITHOUT_CLASSIFICATION	0.9999963267335864	WITHOUT_CLASSIFICATION	3.673266413604649E-6	DEFECT
// default instances	WITHOUT_CLASSIFICATION	0.9999985515299408	WITHOUT_CLASSIFICATION	1.4484700592296547E-6	DEFECT
// default instances	WITHOUT_CLASSIFICATION	0.9999985515299408	WITHOUT_CLASSIFICATION	1.4484700592296547E-6	DEFECT
// default instances	WITHOUT_CLASSIFICATION	0.9999985515299408	WITHOUT_CLASSIFICATION	1.4484700592296547E-6	DEFECT
// try an empty dataset - should return a null range	WITHOUT_CLASSIFICATION	0.9999942172881195	WITHOUT_CLASSIFICATION	5.782711880385958E-6	DEFECT
// try a null dataset - should return a null range	WITHOUT_CLASSIFICATION	0.9999975219646792	WITHOUT_CLASSIFICATION	2.478035320842252E-6	DEFECT
// locale shouldn't matter here	WITHOUT_CLASSIFICATION	0.9999723337489907	WITHOUT_CLASSIFICATION	2.7666251009216846E-5	DEFECT
// autoWidthGap	WITHOUT_CLASSIFICATION	0.9999882208218317	WITHOUT_CLASSIFICATION	1.1779178168286592E-5	DEFECT
// check that a null dataset returns null bounds	WITHOUT_CLASSIFICATION	0.999998378434985	WITHOUT_CLASSIFICATION	1.6215650150564781E-6	DEFECT
// check that a null dataset returns null bounds	WITHOUT_CLASSIFICATION	0.999998378434985	WITHOUT_CLASSIFICATION	1.6215650150564781E-6	DEFECT
// check the bounds of a simple dataset	WITHOUT_CLASSIFICATION	0.9999998271695302	WITHOUT_CLASSIFICATION	1.7283046969121078E-7	DEFECT
// test findDomainBounds as well	WITHOUT_CLASSIFICATION	0.999980383934219	WITHOUT_CLASSIFICATION	1.961606578114482E-5	DEFECT
// blockHeight	WITHOUT_CLASSIFICATION	0.9999958367723577	WITHOUT_CLASSIFICATION	4.163227642333329E-6	DEFECT
// blockWidth	WITHOUT_CLASSIFICATION	0.9999909197227581	WITHOUT_CLASSIFICATION	9.080277241814995E-6	DEFECT
// paintScale	WITHOUT_CLASSIFICATION	0.9999943055739727	WITHOUT_CLASSIFICATION	5.694426027211925E-6	DEFECT
// paintScale	WITHOUT_CLASSIFICATION	0.9999943055739727	WITHOUT_CLASSIFICATION	5.694426027211925E-6	DEFECT
// the following fields are inherited from the AbstractXYItemRenderer	WITHOUT_CLASSIFICATION	0.9999683492138395	WITHOUT_CLASSIFICATION	3.165078616050773E-5	DEFECT
// axis	WITHOUT_CLASSIFICATION	0.9999387684075053	WITHOUT_CLASSIFICATION	6.123159249473018E-5	DEFECT
// axisOffset	WITHOUT_CLASSIFICATION	0.9999666367057067	WITHOUT_CLASSIFICATION	3.336329429323205E-5	DEFECT
// stripWidth	WITHOUT_CLASSIFICATION	0.9999867702015133	WITHOUT_CLASSIFICATION	1.3229798486837756E-5	DEFECT
// stripOutlineVisible	WITHOUT_CLASSIFICATION	0.9999901903509256	WITHOUT_CLASSIFICATION	9.809649074407581E-6	DEFECT
// stripOutlinePaint	WITHOUT_CLASSIFICATION	0.9999971621954298	WITHOUT_CLASSIFICATION	2.8378045702577115E-6	DEFECT
// stripOutlineStroke	WITHOUT_CLASSIFICATION	0.9999909440501067	WITHOUT_CLASSIFICATION	9.055949893295484E-6	DEFECT
// shapeVisible	WITHOUT_CLASSIFICATION	0.9999913257119125	WITHOUT_CLASSIFICATION	8.674288087507597E-6	DEFECT
// shapeFilled	WITHOUT_CLASSIFICATION	0.9999941725328332	WITHOUT_CLASSIFICATION	5.827467166796154E-6	DEFECT
// shapeOutlineVisible	WITHOUT_CLASSIFICATION	0.999990040476379	WITHOUT_CLASSIFICATION	9.959523620956606E-6	DEFECT
// shapeAnchor	WITHOUT_CLASSIFICATION	0.9999940445702827	WITHOUT_CLASSIFICATION	5.955429717320072E-6	DEFECT
// shapeLocation	WITHOUT_CLASSIFICATION	0.9999980623386256	WITHOUT_CLASSIFICATION	1.9376613744135604E-6	DEFECT
// line	WITHOUT_CLASSIFICATION	0.9999595054266555	WITHOUT_CLASSIFICATION	4.0494573344563485E-5	DEFECT
// lineStroke	WITHOUT_CLASSIFICATION	0.9999833508099093	WITHOUT_CLASSIFICATION	1.6649190090670658E-5	DEFECT
// maximumLinesToDisplay	WITHOUT_CLASSIFICATION	0.9999944739316521	WITHOUT_CLASSIFICATION	5.526068347987972E-6	DEFECT
// toolTipText	WITHOUT_CLASSIFICATION	0.9999886246437167	WITHOUT_CLASSIFICATION	1.1375356283306721E-5	DEFECT
// expandToFitSpace	WITHOUT_CLASSIFICATION	0.9999943981627976	WITHOUT_CLASSIFICATION	5.601837202410981E-6	DEFECT
// margin	WITHOUT_CLASSIFICATION	0.9999868366495182	WITHOUT_CLASSIFICATION	1.3163350481868192E-5	DEFECT
// border	WITHOUT_CLASSIFICATION	0.9999677046485156	WITHOUT_CLASSIFICATION	3.2295351484462414E-5	DEFECT
// is the clone independent	WITHOUT_CLASSIFICATION	0.9998768831737318	WITHOUT_CLASSIFICATION	1.231168262681248E-4	DEFECT
// case 1 - object is mutable but not PublicCloneable	WITHOUT_CLASSIFICATION	0.9999482692638403	WITHOUT_CLASSIFICATION	5.173073615975737E-5	DEFECT
// simple case	WITHOUT_CLASSIFICATION	0.9999958800164398	WITHOUT_CLASSIFICATION	4.119983560186938E-6	DEFECT
// try a null value	WITHOUT_CLASSIFICATION	0.9999911098063922	WITHOUT_CLASSIFICATION	8.890193607867156E-6	DEFECT
// try null argument	WITHOUT_CLASSIFICATION	0.9999932565862294	WITHOUT_CLASSIFICATION	6.743413770635265E-6	DEFECT
// you can add a null list - it would have been better if this // required EMPTY_LIST	WITHOUT_CLASSIFICATION	0.9999796719185149	WITHOUT_CLASSIFICATION	2.0328081485036382E-5	DEFECT
// case 1 - object is mutable but not PublicCloneable	WITHOUT_CLASSIFICATION	0.9999482692638403	WITHOUT_CLASSIFICATION	5.173073615975737E-5	DEFECT
// if we modify the original list, it's best if the URL generator is // not affected	WITHOUT_CLASSIFICATION	0.9999898480912265	WITHOUT_CLASSIFICATION	1.0151908773385686E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999921624874433	WITHOUT_CLASSIFICATION	7.837512556810423E-6	DEFECT
// the clone contains a reference to the original object	WITHOUT_CLASSIFICATION	0.9999967185911662	WITHOUT_CLASSIFICATION	3.2814088337431268E-6	DEFECT
// the clone contains a reference to the original object	WITHOUT_CLASSIFICATION	0.9999967185911662	WITHOUT_CLASSIFICATION	3.2814088337431268E-6	DEFECT
// CASE 2 - object is mutable AND PublicCloneable	WITHOUT_CLASSIFICATION	0.9999848493634866	WITHOUT_CLASSIFICATION	1.5150636513278946E-5	DEFECT
// CASE 2 - object is mutable AND PublicCloneable	WITHOUT_CLASSIFICATION	0.9999848493634866	WITHOUT_CLASSIFICATION	1.5150636513278946E-5	DEFECT
// the clone contains a reference to a CLONE of the original object	WITHOUT_CLASSIFICATION	0.9999968669184345	WITHOUT_CLASSIFICATION	3.1330815655956967E-6	DEFECT
// check that clone is independent of the original	WITHOUT_CLASSIFICATION	0.999999180479796	WITHOUT_CLASSIFICATION	8.195202039874364E-7	DEFECT
// check sorted rows	WITHOUT_CLASSIFICATION	0.9999974317682057	WITHOUT_CLASSIFICATION	2.5682317943215995E-6	DEFECT
// check for unknown column	WITHOUT_CLASSIFICATION	0.9999915641113649	WITHOUT_CLASSIFICATION	8.43588863510439E-6	DEFECT
// try null key	WITHOUT_CLASSIFICATION	0.9999919994071567	WITHOUT_CLASSIFICATION	8.000592843390085E-6	DEFECT
// try null key	WITHOUT_CLASSIFICATION	0.9999919994071567	WITHOUT_CLASSIFICATION	8.000592843390085E-6	DEFECT
/*v =*/	WITHOUT_CLASSIFICATION	0.9997288331266306	WITHOUT_CLASSIFICATION	2.7116687336933804E-4	DEFECT
// confirm that the clone is independent of the original	WITHOUT_CLASSIFICATION	0.9999968700020261	WITHOUT_CLASSIFICATION	3.129997974034052E-6	DEFECT
// check null argument 1	WITHOUT_CLASSIFICATION	0.9999955518998773	WITHOUT_CLASSIFICATION	4.448100122593954E-6	DEFECT
/* ComparableObjectItem item1 = */	WITHOUT_CLASSIFICATION	0.9999838995946454	WITHOUT_CLASSIFICATION	1.6100405354556367E-5	DEFECT
// check key order	WITHOUT_CLASSIFICATION	0.9999951040825308	WITHOUT_CLASSIFICATION	4.895917469196457E-6	DEFECT
// check retrieve value by index	WITHOUT_CLASSIFICATION	0.9999971532804184	WITHOUT_CLASSIFICATION	2.846719581613144E-6	DEFECT
// retrieve an item	WITHOUT_CLASSIFICATION	0.9999573758888718	WITHOUT_CLASSIFICATION	4.262411112817242E-5	DEFECT
// request with a negative index	WITHOUT_CLASSIFICATION	0.9999816994024989	WITHOUT_CLASSIFICATION	1.8300597501083947E-5	DEFECT
// request with a negative index	WITHOUT_CLASSIFICATION	0.9999816994024989	WITHOUT_CLASSIFICATION	1.8300597501083947E-5	DEFECT
// request width index == itemCount	WITHOUT_CLASSIFICATION	0.999991363960379	WITHOUT_CLASSIFICATION	8.636039621021033E-6	DEFECT
// check null argument	WITHOUT_CLASSIFICATION	0.9999962789243189	WITHOUT_CLASSIFICATION	3.721075681156787E-6	DEFECT
// replace an existing value	WITHOUT_CLASSIFICATION	0.9999908471122189	WITHOUT_CLASSIFICATION	9.152887781162103E-6	DEFECT
// try a null key - should throw an exception	WITHOUT_CLASSIFICATION	0.9999934614140261	WITHOUT_CLASSIFICATION	6.53858597392684E-6	DEFECT
// try unknown key	WITHOUT_CLASSIFICATION	0.999983921536154	WITHOUT_CLASSIFICATION	1.6078463845909467E-5	DEFECT
// try negative key index	WITHOUT_CLASSIFICATION	0.9999756516110386	WITHOUT_CLASSIFICATION	2.4348388961370577E-5	DEFECT
// try key index == itemCount	WITHOUT_CLASSIFICATION	0.9999861134430139	WITHOUT_CLASSIFICATION	1.3886556985961251E-5	DEFECT
/*Range r2 =*/	WITHOUT_CLASSIFICATION	0.9999396368183472	WITHOUT_CLASSIFICATION	6.036318165282264E-5	DEFECT
// Expand by 0% does not change the range	WITHOUT_CLASSIFICATION	0.9999889475906658	WITHOUT_CLASSIFICATION	1.1052409334286624E-5	DEFECT
// Lower > upper: mid point is used	WITHOUT_CLASSIFICATION	0.999990171421199	WITHOUT_CLASSIFICATION	9.82857880111526E-6	DEFECT
// Shifting with a delta of 0 does not change the range	WITHOUT_CLASSIFICATION	0.9999966528155207	WITHOUT_CLASSIFICATION	3.3471844792004885E-6	DEFECT
// Scaling with a factor of 1 does not change the range	WITHOUT_CLASSIFICATION	0.9999956280714585	WITHOUT_CLASSIFICATION	4.371928541510397E-6	DEFECT
/*s1 = */	WITHOUT_CLASSIFICATION	0.999827047059558	WITHOUT_CLASSIFICATION	1.7295294044196023E-4	DEFECT
// key	WITHOUT_CLASSIFICATION	0.9999634808692166	WITHOUT_CLASSIFICATION	3.6519130783363645E-5	DEFECT
// autoSort	WITHOUT_CLASSIFICATION	0.9999765015725031	WITHOUT_CLASSIFICATION	2.3498427496945762E-5	DEFECT
// add a value	WITHOUT_CLASSIFICATION	0.9999791726487751	WITHOUT_CLASSIFICATION	2.0827351224908727E-5	DEFECT
// add another value	WITHOUT_CLASSIFICATION	0.9999947302536238	WITHOUT_CLASSIFICATION	5.269746376172739E-6	DEFECT
// remove an item	WITHOUT_CLASSIFICATION	0.9999773336198104	WITHOUT_CLASSIFICATION	2.2666380189534944E-5	DEFECT
// map a key to a new group	WITHOUT_CLASSIFICATION	0.9999936436234751	WITHOUT_CLASSIFICATION	6.356376524944968E-6	DEFECT
// clear a mapping	WITHOUT_CLASSIFICATION	0.999994313497654	WITHOUT_CLASSIFICATION	5.686502346035273E-6	DEFECT
// check handling of null key	WITHOUT_CLASSIFICATION	0.9999991160091659	WITHOUT_CLASSIFICATION	8.839908340857061E-7	DEFECT
// a new map always has 1 group (the default group)	WITHOUT_CLASSIFICATION	0.9999998110511917	WITHOUT_CLASSIFICATION	1.8894880822018526E-7	DEFECT
// now overwrite group "G2"...	WITHOUT_CLASSIFICATION	0.9999887357841473	WITHOUT_CLASSIFICATION	1.1264215852823465E-5	DEFECT
// if there is an explicit mapping to the default group, it is counted	WITHOUT_CLASSIFICATION	0.9999835525316498	WITHOUT_CLASSIFICATION	1.6447468350195605E-5	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999905687775327	WITHOUT_CLASSIFICATION	9.431222467335725E-6	DEFECT
// confirm that the clone is independent of the original	WITHOUT_CLASSIFICATION	0.9999968700020261	WITHOUT_CLASSIFICATION	3.129997974034052E-6	DEFECT
// check key order	WITHOUT_CLASSIFICATION	0.9999951040825308	WITHOUT_CLASSIFICATION	4.895917469196457E-6	DEFECT
// check key order	WITHOUT_CLASSIFICATION	0.9999951040825308	WITHOUT_CLASSIFICATION	4.895917469196457E-6	DEFECT
// check retrieve value by key	WITHOUT_CLASSIFICATION	0.9999966569237095	WITHOUT_CLASSIFICATION	3.343076290475098E-6	DEFECT
// check retrieve value by key	WITHOUT_CLASSIFICATION	0.9999966569237095	WITHOUT_CLASSIFICATION	3.343076290475098E-6	DEFECT
// check retrieve value by key	WITHOUT_CLASSIFICATION	0.9999966569237095	WITHOUT_CLASSIFICATION	3.343076290475098E-6	DEFECT
// check retrieve value by key	WITHOUT_CLASSIFICATION	0.9999966569237095	WITHOUT_CLASSIFICATION	3.343076290475098E-6	DEFECT
// check retrieve value by index	WITHOUT_CLASSIFICATION	0.9999971532804184	WITHOUT_CLASSIFICATION	2.846719581613144E-6	DEFECT
// check retrieve value by index	WITHOUT_CLASSIFICATION	0.9999971532804184	WITHOUT_CLASSIFICATION	2.846719581613144E-6	DEFECT
// check retrieve value by index	WITHOUT_CLASSIFICATION	0.9999971532804184	WITHOUT_CLASSIFICATION	2.846719581613144E-6	DEFECT
// check retrieve value by index	WITHOUT_CLASSIFICATION	0.9999971532804184	WITHOUT_CLASSIFICATION	2.846719581613144E-6	DEFECT
// now overwrite group "G2"...	WITHOUT_CLASSIFICATION	0.9999887357841473	WITHOUT_CLASSIFICATION	1.1264215852823465E-5	DEFECT
// if the default group is not mapped to, it should still count towards // the group count...	WITHOUT_CLASSIFICATION	0.9999661054563379	WITHOUT_CLASSIFICATION	3.389454366209163E-5	DEFECT
// now when the default group is mapped to, it shouldn't increase the // group count...	WITHOUT_CLASSIFICATION	0.9999795585457452	WITHOUT_CLASSIFICATION	2.044145425484844E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999921624874433	WITHOUT_CLASSIFICATION	7.837512556810423E-6	DEFECT
// the default group is always at index 0	WITHOUT_CLASSIFICATION	0.999992862840317	WITHOUT_CLASSIFICATION	7.137159683066382E-6	DEFECT
// a non-existent group should return -1	WITHOUT_CLASSIFICATION	0.9999987081529343	WITHOUT_CLASSIFICATION	1.291847065604794E-6	DEFECT
// indices are assigned in the order that groups are originally mapped	WITHOUT_CLASSIFICATION	0.9999905703122982	WITHOUT_CLASSIFICATION	9.429687701833103E-6	DEFECT
// a key that hasn't been mapped should return the default group	WITHOUT_CLASSIFICATION	0.9999941264369097	WITHOUT_CLASSIFICATION	5.873563090250357E-6	DEFECT
// a null argument should throw an exception	WITHOUT_CLASSIFICATION	0.9999857677481971	WITHOUT_CLASSIFICATION	1.4232251802867315E-5	DEFECT
// a small check for independence	WITHOUT_CLASSIFICATION	0.9999984863839038	WITHOUT_CLASSIFICATION	1.513616096287084E-6	DEFECT
// check invalid indices	WITHOUT_CLASSIFICATION	0.9999981538493417	WITHOUT_CLASSIFICATION	1.8461506582449543E-6	DEFECT
// check invalid indices	WITHOUT_CLASSIFICATION	0.9999981538493417	WITHOUT_CLASSIFICATION	1.8461506582449543E-6	DEFECT
// confirm overwriting an existing value	WITHOUT_CLASSIFICATION	0.99998206472089	WITHOUT_CLASSIFICATION	1.793527910993733E-5	DEFECT
// try null keys	WITHOUT_CLASSIFICATION	0.9999938575120656	WITHOUT_CLASSIFICATION	6.142487934481898E-6	DEFECT
// try negative row index	WITHOUT_CLASSIFICATION	0.9999620328413968	WITHOUT_CLASSIFICATION	3.7967158603273226E-5	DEFECT
// try row index too high	WITHOUT_CLASSIFICATION	0.9999746110120062	WITHOUT_CLASSIFICATION	2.53889879937626E-5	DEFECT
// try negative column index	WITHOUT_CLASSIFICATION	0.9999811327137692	WITHOUT_CLASSIFICATION	1.8867286230775007E-5	DEFECT
// try column index too high	WITHOUT_CLASSIFICATION	0.9999886171695913	WITHOUT_CLASSIFICATION	1.1382830408608757E-5	DEFECT
// try unknown row key	WITHOUT_CLASSIFICATION	0.9999560003380941	WITHOUT_CLASSIFICATION	4.3999661905875416E-5	DEFECT
// try null row key	WITHOUT_CLASSIFICATION	0.999991546240106	WITHOUT_CLASSIFICATION	8.453759893966826E-6	DEFECT
// try unknown column key	WITHOUT_CLASSIFICATION	0.9999849422529632	WITHOUT_CLASSIFICATION	1.5057747036802713E-5	DEFECT
// try null column key	WITHOUT_CLASSIFICATION	0.9999867575736819	WITHOUT_CLASSIFICATION	1.3242426318081307E-5	DEFECT
/* Comparable k = */	WITHOUT_CLASSIFICATION	0.999987517307857	WITHOUT_CLASSIFICATION	1.2482692143061688E-5	DEFECT
/* Comparable k = */	WITHOUT_CLASSIFICATION	0.999987517307857	WITHOUT_CLASSIFICATION	1.2482692143061688E-5	DEFECT
// try null	WITHOUT_CLASSIFICATION	0.9999877343566017	WITHOUT_CLASSIFICATION	1.2265643398369862E-5	DEFECT
// it's OK to use an index equal to the size of the list	WITHOUT_CLASSIFICATION	0.9999431143265098	WITHOUT_CLASSIFICATION	5.688567349011996E-5	DEFECT
// try replacing an existing value	WITHOUT_CLASSIFICATION	0.9999935845851718	WITHOUT_CLASSIFICATION	6.4154148281139255E-6	DEFECT
// basic check for independence	WITHOUT_CLASSIFICATION	0.9999982324433815	WITHOUT_CLASSIFICATION	1.7675566185757327E-6	DEFECT
// basic check for independence	WITHOUT_CLASSIFICATION	0.9999982324433815	WITHOUT_CLASSIFICATION	1.7675566185757327E-6	DEFECT
// try a null source	WITHOUT_CLASSIFICATION	0.9999977292260507	WITHOUT_CLASSIFICATION	2.2707739493233046E-6	DEFECT
// check negative index throws exception	WITHOUT_CLASSIFICATION	0.999995156090438	WITHOUT_CLASSIFICATION	4.8439095619653895E-6	DEFECT
// check negative index throws exception	WITHOUT_CLASSIFICATION	0.999995156090438	WITHOUT_CLASSIFICATION	4.8439095619653895E-6	DEFECT
// this is expected	WITHOUT_CLASSIFICATION	0.999939016038015	WITHOUT_CLASSIFICATION	6.098396198485628E-5	DEFECT
// this is expected	WITHOUT_CLASSIFICATION	0.999939016038015	WITHOUT_CLASSIFICATION	6.098396198485628E-5	DEFECT
// this is expected	WITHOUT_CLASSIFICATION	0.999939016038015	WITHOUT_CLASSIFICATION	6.098396198485628E-5	DEFECT
// check index == getItemCount() throws exception	WITHOUT_CLASSIFICATION	0.9999972112512969	WITHOUT_CLASSIFICATION	2.7887487031527593E-6	DEFECT
// test null source	WITHOUT_CLASSIFICATION	0.999997326349119	WITHOUT_CLASSIFICATION	2.6736508809657895E-6	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999921624874433	WITHOUT_CLASSIFICATION	7.837512556810423E-6	DEFECT
// an empty dataset should return a null range	WITHOUT_CLASSIFICATION	0.9999904497289747	WITHOUT_CLASSIFICATION	9.550271025258341E-6	DEFECT
/* Number n = */	WITHOUT_CLASSIFICATION	0.9999543006296296	WITHOUT_CLASSIFICATION	4.5699370370331074E-5	DEFECT
/* Number n = */	WITHOUT_CLASSIFICATION	0.9999543006296296	WITHOUT_CLASSIFICATION	4.5699370370331074E-5	DEFECT
// try null	WITHOUT_CLASSIFICATION	0.9999877343566017	WITHOUT_CLASSIFICATION	1.2265643398369862E-5	DEFECT
// basic check for independence	WITHOUT_CLASSIFICATION	0.9999982324433815	WITHOUT_CLASSIFICATION	1.7675566185757327E-6	DEFECT
// basic check for independence	WITHOUT_CLASSIFICATION	0.9999982324433815	WITHOUT_CLASSIFICATION	1.7675566185757327E-6	DEFECT
// this is expected	WITHOUT_CLASSIFICATION	0.999939016038015	WITHOUT_CLASSIFICATION	6.098396198485628E-5	DEFECT
// this is expected	WITHOUT_CLASSIFICATION	0.999939016038015	WITHOUT_CLASSIFICATION	6.098396198485628E-5	DEFECT
// this is expected	WITHOUT_CLASSIFICATION	0.999939016038015	WITHOUT_CLASSIFICATION	6.098396198485628E-5	DEFECT
// check index == getItemCount() throws exception	WITHOUT_CLASSIFICATION	0.9999972112512969	WITHOUT_CLASSIFICATION	2.7887487031527593E-6	DEFECT
// test null source	WITHOUT_CLASSIFICATION	0.999997326349119	WITHOUT_CLASSIFICATION	2.6736508809657895E-6	DEFECT
// another item	WITHOUT_CLASSIFICATION	0.9999861278018628	WITHOUT_CLASSIFICATION	1.3872198137158443E-5	DEFECT
/* Number n =*/	WITHOUT_CLASSIFICATION	0.9999422788956349	WITHOUT_CLASSIFICATION	5.7721104365059426E-5	DEFECT
// increment a null value	WITHOUT_CLASSIFICATION	0.9999687331825396	WITHOUT_CLASSIFICATION	3.126681746033046E-5	DEFECT
// increment an unknown row	WITHOUT_CLASSIFICATION	0.9998676434054895	WITHOUT_CLASSIFICATION	1.3235659451049365E-4	DEFECT
// increment an unknown column	WITHOUT_CLASSIFICATION	0.9999341895115651	WITHOUT_CLASSIFICATION	6.581048843493443E-5	DEFECT
// a row of all null values is still counted...	WITHOUT_CLASSIFICATION	0.9999939583820084	WITHOUT_CLASSIFICATION	6.041617991550155E-6	DEFECT
// a column of all null values is still counted...	WITHOUT_CLASSIFICATION	0.999993436618249	WITHOUT_CLASSIFICATION	6.563381750948925E-6	DEFECT
// try a dataset with some content...	WITHOUT_CLASSIFICATION	0.9999956934838338	WITHOUT_CLASSIFICATION	4.306516166233509E-6	DEFECT
// check that the clone doesn't share the same underlying arrays.	WITHOUT_CLASSIFICATION	0.9999909145620777	WITHOUT_CLASSIFICATION	9.085437922333538E-6	DEFECT
// check that the clone doesn't share the same underlying arrays.	WITHOUT_CLASSIFICATION	0.9999909145620777	WITHOUT_CLASSIFICATION	9.085437922333538E-6	DEFECT
// check that two empty datasets are equal	WITHOUT_CLASSIFICATION	0.9999953150755159	WITHOUT_CLASSIFICATION	4.684924484153703E-6	DEFECT
// check an empty dataset	WITHOUT_CLASSIFICATION	0.999991918601761	WITHOUT_CLASSIFICATION	8.081398239039828E-6	DEFECT
// check an empty dataset	WITHOUT_CLASSIFICATION	0.999991918601761	WITHOUT_CLASSIFICATION	8.081398239039828E-6	DEFECT
// make sure that modifying the returned array doesn't change the // function	WITHOUT_CLASSIFICATION	0.9999983851716219	WITHOUT_CLASSIFICATION	1.6148283781336938E-6	DEFECT
// note that we don't define taskB1	WITHOUT_CLASSIFICATION	0.9998654142649616	WITHOUT_CLASSIFICATION	1.3458573503846616E-4	DEFECT
// define subtasks	WITHOUT_CLASSIFICATION	0.9999974130546176	WITHOUT_CLASSIFICATION	2.58694538240835E-6	DEFECT
/* Number start = */	WITHOUT_CLASSIFICATION	0.99997906450922	WITHOUT_CLASSIFICATION	2.093549077995925E-5	DEFECT
// test collection 3, which doesn't define all tasks in all series	WITHOUT_CLASSIFICATION	0.9999959763152558	WITHOUT_CLASSIFICATION	4.023684744182998E-6	DEFECT
// test collection 3, which doesn't define all tasks in all series	WITHOUT_CLASSIFICATION	0.9999959763152558	WITHOUT_CLASSIFICATION	4.023684744182998E-6	DEFECT
// test collection 3, which doesn't define all tasks in all series	WITHOUT_CLASSIFICATION	0.9999959763152558	WITHOUT_CLASSIFICATION	4.023684744182998E-6	DEFECT
/* int count = */	WITHOUT_CLASSIFICATION	0.9999576371673752	WITHOUT_CLASSIFICATION	4.236283262482143E-5	DEFECT
/* Number end = */	WITHOUT_CLASSIFICATION	0.99995763481472	WITHOUT_CLASSIFICATION	4.236518528005864E-5	DEFECT
// try a single item	WITHOUT_CLASSIFICATION	0.9999972740965983	WITHOUT_CLASSIFICATION	2.72590340153708E-6	DEFECT
// simple check for independence	WITHOUT_CLASSIFICATION	0.999998927808833	WITHOUT_CLASSIFICATION	1.0721911670165524E-6	DEFECT
// what if we don't want the interval?	WITHOUT_CLASSIFICATION	0.9999303406019205	WITHOUT_CLASSIFICATION	6.965939807949437E-5	DEFECT
// an item in series 2	WITHOUT_CLASSIFICATION	0.9999335921098202	WITHOUT_CLASSIFICATION	6.640789017971376E-5	DEFECT
// another empty series	WITHOUT_CLASSIFICATION	0.9999931000674568	WITHOUT_CLASSIFICATION	6.899932543247951E-6	DEFECT
// a dataset with a single value	WITHOUT_CLASSIFICATION	0.9999977367668668	WITHOUT_CLASSIFICATION	2.2632331332175867E-6	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999921624874433	WITHOUT_CLASSIFICATION	7.837512556810423E-6	DEFECT
// a dataset with a single value	WITHOUT_CLASSIFICATION	0.9999977367668668	WITHOUT_CLASSIFICATION	2.2632331332175867E-6	DEFECT
// null is ignored	WITHOUT_CLASSIFICATION	0.9999955120488286	WITHOUT_CLASSIFICATION	4.48795117134562E-6	DEFECT
// a Double.NaN should be ignored	WITHOUT_CLASSIFICATION	0.9999968810757358	WITHOUT_CLASSIFICATION	3.1189242642822096E-6	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999921624874433	WITHOUT_CLASSIFICATION	7.837512556810423E-6	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999921624874433	WITHOUT_CLASSIFICATION	7.837512556810423E-6	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999921624874433	WITHOUT_CLASSIFICATION	7.837512556810423E-6	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999921624874433	WITHOUT_CLASSIFICATION	7.837512556810423E-6	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999921624874433	WITHOUT_CLASSIFICATION	7.837512556810423E-6	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999905687775327	WITHOUT_CLASSIFICATION	9.431222467335725E-6	DEFECT
// try null argument	WITHOUT_CLASSIFICATION	0.9999932565862294	WITHOUT_CLASSIFICATION	6.743413770635265E-6	DEFECT
// try null argument	WITHOUT_CLASSIFICATION	0.9999932565862294	WITHOUT_CLASSIFICATION	6.743413770635265E-6	DEFECT
// check that clone is independent of the original	WITHOUT_CLASSIFICATION	0.999999180479796	WITHOUT_CLASSIFICATION	8.195202039874364E-7	DEFECT
/* Number n =*/	WITHOUT_CLASSIFICATION	0.9999422788956349	WITHOUT_CLASSIFICATION	5.7721104365059426E-5	DEFECT
// try a dataset with some content...	WITHOUT_CLASSIFICATION	0.9999956934838338	WITHOUT_CLASSIFICATION	4.306516166233509E-6	DEFECT
// check that the clone doesn't share the same underlying arrays.	WITHOUT_CLASSIFICATION	0.9999909145620777	WITHOUT_CLASSIFICATION	9.085437922333538E-6	DEFECT
// simple check for independence	WITHOUT_CLASSIFICATION	0.999998927808833	WITHOUT_CLASSIFICATION	1.0721911670165524E-6	DEFECT
// simple check for independence	WITHOUT_CLASSIFICATION	0.999998927808833	WITHOUT_CLASSIFICATION	1.0721911670165524E-6	DEFECT
// try a single item	WITHOUT_CLASSIFICATION	0.9999972740965983	WITHOUT_CLASSIFICATION	2.72590340153708E-6	DEFECT
// another item	WITHOUT_CLASSIFICATION	0.9999861278018628	WITHOUT_CLASSIFICATION	1.3872198137158443E-5	DEFECT
// another empty series	WITHOUT_CLASSIFICATION	0.9999931000674568	WITHOUT_CLASSIFICATION	6.899932543247951E-6	DEFECT
// an item in series 2	WITHOUT_CLASSIFICATION	0.9999335921098202	WITHOUT_CLASSIFICATION	6.640789017971376E-5	DEFECT
// Double.NaN DOESN'T mess things up	WITHOUT_CLASSIFICATION	0.9999790937198174	WITHOUT_CLASSIFICATION	2.0906280182663386E-5	DEFECT
// got it!	WITHOUT_CLASSIFICATION	0.999915568273204	WITHOUT_CLASSIFICATION	8.44317267960146E-5	DEFECT
// check that empty dataset is handled OK	WITHOUT_CLASSIFICATION	0.9999915580638329	WITHOUT_CLASSIFICATION	8.441936167121364E-6	DEFECT
// and that simple aggregation works	WITHOUT_CLASSIFICATION	0.9999973603830198	WITHOUT_CLASSIFICATION	2.6396169801533535E-6	DEFECT
// an empty dataset should return a null max	WITHOUT_CLASSIFICATION	0.9999909838967809	WITHOUT_CLASSIFICATION	9.016103219155951E-6	DEFECT
// an empty dataset should return a null max	WITHOUT_CLASSIFICATION	0.9999909838967809	WITHOUT_CLASSIFICATION	9.016103219155951E-6	DEFECT
// null dataset throws IllegalArgumentException	WITHOUT_CLASSIFICATION	0.9999970984751342	WITHOUT_CLASSIFICATION	2.9015248658652064E-6	DEFECT
// null list throws IllegalArgumentException	WITHOUT_CLASSIFICATION	0.9999897430442801	WITHOUT_CLASSIFICATION	1.025695571979688E-5	DEFECT
// null range throws IllegalArgumentException	WITHOUT_CLASSIFICATION	0.9999872182269327	WITHOUT_CLASSIFICATION	1.2781773067311988E-5	DEFECT
// empty dataset returns null	WITHOUT_CLASSIFICATION	0.9999977847711818	WITHOUT_CLASSIFICATION	2.2152288181789913E-6	DEFECT
// add an empty series	WITHOUT_CLASSIFICATION	0.9999616317174145	WITHOUT_CLASSIFICATION	3.836828258547587E-5	DEFECT
// check a null value	WITHOUT_CLASSIFICATION	0.9999908829930911	WITHOUT_CLASSIFICATION	9.117006908791928E-6	DEFECT
// check a NaN	WITHOUT_CLASSIFICATION	0.9999843411772164	WITHOUT_CLASSIFICATION	1.5658822783627954E-5	DEFECT
// check another regular value	WITHOUT_CLASSIFICATION	0.9999975296918341	WITHOUT_CLASSIFICATION	2.470308165905129E-6	DEFECT
// add a second series	WITHOUT_CLASSIFICATION	0.9999933304216769	WITHOUT_CLASSIFICATION	6.669578323101644E-6	DEFECT
// add a value to the second series	WITHOUT_CLASSIFICATION	0.9999987657213121	WITHOUT_CLASSIFICATION	1.2342786879052915E-6	DEFECT
// add a value that isn't in the xRange	WITHOUT_CLASSIFICATION	0.9999613680391249	WITHOUT_CLASSIFICATION	3.863196087500037E-5	DEFECT
// try some nulls	WITHOUT_CLASSIFICATION	0.9999944307731915	WITHOUT_CLASSIFICATION	5.569226808486187E-6	DEFECT
// an empty dataset should return null for bounds	WITHOUT_CLASSIFICATION	0.9999911805023195	WITHOUT_CLASSIFICATION	8.819497680567142E-6	DEFECT
// try a dataset with a single value	WITHOUT_CLASSIFICATION	0.9999983893355602	WITHOUT_CLASSIFICATION	1.6106644397931538E-6	DEFECT
// try a dataset with two values	WITHOUT_CLASSIFICATION	0.9999972150980079	WITHOUT_CLASSIFICATION	2.7849019921237967E-6	DEFECT
// try a Double.NaN	WITHOUT_CLASSIFICATION	0.9999920398136026	WITHOUT_CLASSIFICATION	7.960186397346958E-6	DEFECT
// try a Double.NEGATIVE_INFINITY	WITHOUT_CLASSIFICATION	0.9999682829855867	WITHOUT_CLASSIFICATION	3.171701441322696E-5	DEFECT
// overwrite the value	WITHOUT_CLASSIFICATION	0.9999911994231158	WITHOUT_CLASSIFICATION	8.800576884226973E-6	DEFECT
// test independence	WITHOUT_CLASSIFICATION	0.9999921506658535	WITHOUT_CLASSIFICATION	7.849334146468513E-6	DEFECT
// now overwrite this item with another	WITHOUT_CLASSIFICATION	0.9998750318806234	WITHOUT_CLASSIFICATION	1.2496811937665747E-4	DEFECT
// try null list	WITHOUT_CLASSIFICATION	0.9999906339815	WITHOUT_CLASSIFICATION	9.3660184999721E-6	DEFECT
// try a list containing a single value	WITHOUT_CLASSIFICATION	0.9999974538717128	WITHOUT_CLASSIFICATION	2.5461282872032937E-6	DEFECT
// try null array	WITHOUT_CLASSIFICATION	0.9999825082394103	WITHOUT_CLASSIFICATION	1.7491760589844198E-5	DEFECT
// try an array containing no items	WITHOUT_CLASSIFICATION	0.9999726510023604	WITHOUT_CLASSIFICATION	2.7348997639557008E-5	DEFECT
// try an array containing a single Number	WITHOUT_CLASSIFICATION	0.9999958967228166	WITHOUT_CLASSIFICATION	4.1032771833750265E-6	DEFECT
// try an array containing a single Number and a null	WITHOUT_CLASSIFICATION	0.9999992352532584	WITHOUT_CLASSIFICATION	7.647467416534542E-7	DEFECT
// try an array containing a single Number and a NaN	WITHOUT_CLASSIFICATION	0.9999989440955497	WITHOUT_CLASSIFICATION	1.0559044502783547E-6	DEFECT
// try a null argument	WITHOUT_CLASSIFICATION	0.9999889592322335	WITHOUT_CLASSIFICATION	1.1040767766538406E-5	DEFECT
// OK	WITHOUT_CLASSIFICATION	0.9998185702052343	WITHOUT_CLASSIFICATION	1.8142979476559265E-4	DEFECT
// try null argument	WITHOUT_CLASSIFICATION	0.9999932565862294	WITHOUT_CLASSIFICATION	6.743413770635265E-6	DEFECT
// test independence	WITHOUT_CLASSIFICATION	0.9999921506658535	WITHOUT_CLASSIFICATION	7.849334146468513E-6	DEFECT
// try an empty collection	WITHOUT_CLASSIFICATION	0.999983040284511	WITHOUT_CLASSIFICATION	1.6959715489069686E-5	DEFECT
// try a collection with a single number	WITHOUT_CLASSIFICATION	0.9999980019673947	WITHOUT_CLASSIFICATION	1.9980326052340142E-6	DEFECT
// try a collection with a single number plus a NaN	WITHOUT_CLASSIFICATION	0.9999971003264791	WITHOUT_CLASSIFICATION	2.8996735208530287E-6	DEFECT
// try a collection with several numbers	WITHOUT_CLASSIFICATION	0.9999957954942374	WITHOUT_CLASSIFICATION	4.204505762527127E-6	DEFECT
// a Collection containing a NaN will return Double.NaN for the result	WITHOUT_CLASSIFICATION	0.9999977626069455	WITHOUT_CLASSIFICATION	2.2373930545899504E-6	DEFECT
// check null list	WITHOUT_CLASSIFICATION	0.9999974926077524	WITHOUT_CLASSIFICATION	2.5073922476934844E-6	DEFECT
// check empty list	WITHOUT_CLASSIFICATION	0.9999967147268537	WITHOUT_CLASSIFICATION	3.2852731461752243E-6	DEFECT
// check list containing null	WITHOUT_CLASSIFICATION	0.9999965717114938	WITHOUT_CLASSIFICATION	3.4282885062405056E-6	DEFECT
// try zero length array	WITHOUT_CLASSIFICATION	0.9999797999813097	WITHOUT_CLASSIFICATION	2.0200018690270583E-5	DEFECT
// try single value	WITHOUT_CLASSIFICATION	0.9999980462922863	WITHOUT_CLASSIFICATION	1.953707713736343E-6	DEFECT
// locale shouldn't matter here	WITHOUT_CLASSIFICATION	0.9999723337489907	WITHOUT_CLASSIFICATION	2.7666251009216846E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999921624874433	WITHOUT_CLASSIFICATION	7.837512556810423E-6	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999921624874433	WITHOUT_CLASSIFICATION	7.837512556810423E-6	DEFECT
// try deleting a time period that doesn't exist...	WITHOUT_CLASSIFICATION	0.9999948429830826	WITHOUT_CLASSIFICATION	5.15701691729839E-6	DEFECT
// try deleting null	WITHOUT_CLASSIFICATION	0.999997925060593	WITHOUT_CLASSIFICATION	2.0749394068810606E-6	DEFECT
// copy a range before the start of the series data...	WITHOUT_CLASSIFICATION	0.9999992299443198	WITHOUT_CLASSIFICATION	7.700556803491183E-7	DEFECT
// copy a range that includes only the first item in the series...	WITHOUT_CLASSIFICATION	0.9999967511916019	WITHOUT_CLASSIFICATION	3.24880839821513E-6	DEFECT
// copy a range that begins before and ends in the middle of the // series...	WITHOUT_CLASSIFICATION	0.9999980527756203	WITHOUT_CLASSIFICATION	1.947224379744853E-6	DEFECT
// copy just the first item...	WITHOUT_CLASSIFICATION	0.9999895308715406	WITHOUT_CLASSIFICATION	1.0469128459311387E-5	DEFECT
// copy the first two items...	WITHOUT_CLASSIFICATION	0.9999936843143106	WITHOUT_CLASSIFICATION	6.315685689364915E-6	DEFECT
// copy the middle three items...	WITHOUT_CLASSIFICATION	0.9999962966939197	WITHOUT_CLASSIFICATION	3.7033060802779727E-6	DEFECT
// copy the last two items...	WITHOUT_CLASSIFICATION	0.9999976070123712	WITHOUT_CLASSIFICATION	2.3929876287385376E-6	DEFECT
// copy the last item...	WITHOUT_CLASSIFICATION	0.999995903677542	WITHOUT_CLASSIFICATION	4.096322458011679E-6	DEFECT
// check negative first argument	WITHOUT_CLASSIFICATION	0.9999967214610782	WITHOUT_CLASSIFICATION	3.2785389217630226E-6	DEFECT
/* TimeSeries result = */	WITHOUT_CLASSIFICATION	0.9999143000038377	WITHOUT_CLASSIFICATION	8.569999616223913E-5	DEFECT
/* TimeSeries result = */	WITHOUT_CLASSIFICATION	0.9999143000038377	WITHOUT_CLASSIFICATION	8.569999616223913E-5	DEFECT
// check second argument less than first argument	WITHOUT_CLASSIFICATION	0.9999988569835405	WITHOUT_CLASSIFICATION	1.1430164593860838E-6	DEFECT
// changing the overwritten record shouldn't affect the series	WITHOUT_CLASSIFICATION	0.999996463927224	WITHOUT_CLASSIFICATION	3.5360727759100818E-6	DEFECT
// changing the item that was added should not change the series	WITHOUT_CLASSIFICATION	0.9999872714315466	WITHOUT_CLASSIFICATION	1.2728568453458009E-5	DEFECT
// can't get anything yet...just an exception	WITHOUT_CLASSIFICATION	0.9999855367834148	WITHOUT_CLASSIFICATION	1.4463216585194133E-5	DEFECT
/*TimeSeriesDataItem item =*/	WITHOUT_CLASSIFICATION	0.9996943220380129	WITHOUT_CLASSIFICATION	3.056779619871283E-4	DEFECT
/*item = */	WITHOUT_CLASSIFICATION	0.9999032320065642	WITHOUT_CLASSIFICATION	9.676799343581177E-5	DEFECT
/* TimeSeriesDataItem item = */	WITHOUT_CLASSIFICATION	0.9998650082980705	WITHOUT_CLASSIFICATION	1.3499170192952817E-4	DEFECT
// test empty series	WITHOUT_CLASSIFICATION	0.9999897931456277	WITHOUT_CLASSIFICATION	1.0206854372152866E-5	DEFECT
// test series with one item	WITHOUT_CLASSIFICATION	0.9999653457595019	WITHOUT_CLASSIFICATION	3.46542404980934E-5	DEFECT
// test series with two items	WITHOUT_CLASSIFICATION	0.9999613173431648	WITHOUT_CLASSIFICATION	3.868265683518696E-5	DEFECT
// milliseconds somewhere in 2006	WITHOUT_CLASSIFICATION	0.9999892251988918	WITHOUT_CLASSIFICATION	1.0774801108318773E-5	DEFECT
// test a series with 1 item	WITHOUT_CLASSIFICATION	0.9999340543452124	WITHOUT_CLASSIFICATION	6.594565478761449E-5	DEFECT
// test a series with two items	WITHOUT_CLASSIFICATION	0.9999757951014624	WITHOUT_CLASSIFICATION	2.4204898537673703E-5	DEFECT
// this line triggers the defect	WITHOUT_CLASSIFICATION	0.9999629634768249	WITHOUT_CLASSIFICATION	3.703652317512882E-5	DEFECT
// check that removing by index also works	WITHOUT_CLASSIFICATION	0.9999959068414995	WITHOUT_CLASSIFICATION	4.093158500513246E-6	DEFECT
// null items are ignored	WITHOUT_CLASSIFICATION	0.9999896020229482	WITHOUT_CLASSIFICATION	1.0397977051850471E-5	DEFECT
// if there are only null items, we get a NaNRange	WITHOUT_CLASSIFICATION	0.9999829130927832	WITHOUT_CLASSIFICATION	1.708690721676188E-5	DEFECT
// locale should not matter here	WITHOUT_CLASSIFICATION	0.9999594730478958	WITHOUT_CLASSIFICATION	4.052695210423634E-5	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999905687775327	WITHOUT_CLASSIFICATION	9.431222467335725E-6	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999921624874433	WITHOUT_CLASSIFICATION	7.837512556810423E-6	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999921624874433	WITHOUT_CLASSIFICATION	7.837512556810423E-6	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999921624874433	WITHOUT_CLASSIFICATION	7.837512556810423E-6	DEFECT
// locale should not matter here	WITHOUT_CLASSIFICATION	0.9999594730478958	WITHOUT_CLASSIFICATION	4.052695210423634E-5	DEFECT
// locale should not matter here	WITHOUT_CLASSIFICATION	0.9999594730478958	WITHOUT_CLASSIFICATION	4.052695210423634E-5	DEFECT
// test 3...	WITHOUT_CLASSIFICATION	0.9999759425959119	WITHOUT_CLASSIFICATION	2.4057404088067315E-5	DEFECT
// test 1...	WITHOUT_CLASSIFICATION	0.9999661793347964	WITHOUT_CLASSIFICATION	3.382066520361062E-5	DEFECT
// test 1...	WITHOUT_CLASSIFICATION	0.9999661793347964	WITHOUT_CLASSIFICATION	3.382066520361062E-5	DEFECT
// domain description - null	WITHOUT_CLASSIFICATION	0.9999991847983793	WITHOUT_CLASSIFICATION	8.152016207110845E-7	DEFECT
// test 2...	WITHOUT_CLASSIFICATION	0.9999720088685293	WITHOUT_CLASSIFICATION	2.7991131470589227E-5	DEFECT
// a null item should throw an IllegalArgumentException	WITHOUT_CLASSIFICATION	0.9999769069259162	WITHOUT_CLASSIFICATION	2.3093074083731734E-5	DEFECT
/*Quarter q =*/	WITHOUT_CLASSIFICATION	0.9999313411038492	WITHOUT_CLASSIFICATION	6.865889615084955E-5	DEFECT
/*Quarter q =*/	WITHOUT_CLASSIFICATION	0.9999313411038492	WITHOUT_CLASSIFICATION	6.865889615084955E-5	DEFECT
// range description	WITHOUT_CLASSIFICATION	0.999998784583737	WITHOUT_CLASSIFICATION	1.2154162629815583E-6	DEFECT
// domain description	WITHOUT_CLASSIFICATION	0.999997437408804	WITHOUT_CLASSIFICATION	2.5625911959988744E-6	DEFECT
// check dataset with one time period	WITHOUT_CLASSIFICATION	0.9999979945934971	WITHOUT_CLASSIFICATION	2.005406502850913E-6	DEFECT
// check empty dataset	WITHOUT_CLASSIFICATION	0.9999971669016331	WITHOUT_CLASSIFICATION	2.8330983668411273E-6	DEFECT
// range description - null	WITHOUT_CLASSIFICATION	0.9999991301692499	WITHOUT_CLASSIFICATION	8.698307500858382E-7	DEFECT
// check dataset with one time period	WITHOUT_CLASSIFICATION	0.9999979945934971	WITHOUT_CLASSIFICATION	2.005406502850913E-6	DEFECT
// check empty dataset	WITHOUT_CLASSIFICATION	0.9999971669016331	WITHOUT_CLASSIFICATION	2.8330983668411273E-6	DEFECT
// add a fourth time period	WITHOUT_CLASSIFICATION	0.9999865910342243	WITHOUT_CLASSIFICATION	1.3408965775833444E-5	DEFECT
// add a third time period	WITHOUT_CLASSIFICATION	0.9999590561146652	WITHOUT_CLASSIFICATION	4.0943885334894464E-5	DEFECT
// check dataset with two time periods	WITHOUT_CLASSIFICATION	0.9999982114039702	WITHOUT_CLASSIFICATION	1.788596029947751E-6	DEFECT
// check dataset with two time periods	WITHOUT_CLASSIFICATION	0.9999982114039702	WITHOUT_CLASSIFICATION	1.788596029947751E-6	DEFECT
// first day of week is Sunday	WITHOUT_CLASSIFICATION	0.9999724937665799	WITHOUT_CLASSIFICATION	2.7506233420001796E-5	DEFECT
// first day of week is monday	WITHOUT_CLASSIFICATION	0.9999795407827401	WITHOUT_CLASSIFICATION	2.0459217259911496E-5	DEFECT
// try null zone	WITHOUT_CLASSIFICATION	0.9999909638889908	WITHOUT_CLASSIFICATION	9.036111009274973E-6	DEFECT
// add series to collection 1, should be not equal	WITHOUT_CLASSIFICATION	0.9999759501378733	WITHOUT_CLASSIFICATION	2.404986212672683E-5	DEFECT
// newly created collections should be equal	WITHOUT_CLASSIFICATION	0.9999974571191059	WITHOUT_CLASSIFICATION	2.542880894057592E-6	DEFECT
// now add the same series to collection 2 to make them equal again...	WITHOUT_CLASSIFICATION	0.9999978250661247	WITHOUT_CLASSIFICATION	2.1749338753080747E-6	DEFECT
// now remove series 2 from collection 2	WITHOUT_CLASSIFICATION	0.9999949030337171	WITHOUT_CLASSIFICATION	5.096966282845418E-6	DEFECT
// now remove series 2 from collection 1 to make them equal again	WITHOUT_CLASSIFICATION	0.9999979600786334	WITHOUT_CLASSIFICATION	2.039921366484827E-6	DEFECT
// for a series with no data, we expect {-1, -1}...	WITHOUT_CLASSIFICATION	0.9999984330298629	WITHOUT_CLASSIFICATION	1.566970137004991E-6	DEFECT
// now test with a single value in the series...	WITHOUT_CLASSIFICATION	0.9999934948098651	WITHOUT_CLASSIFICATION	6.505190134843835E-6	DEFECT
// now add a second value to the series...	WITHOUT_CLASSIFICATION	0.999997989411143	WITHOUT_CLASSIFICATION	2.0105888569917736E-6	DEFECT
// now add a third value to the series...	WITHOUT_CLASSIFICATION	0.999995197421194	WITHOUT_CLASSIFICATION	4.802578805984098E-6	DEFECT
/* TimeSeries s = */	WITHOUT_CLASSIFICATION	0.9999106059423466	WITHOUT_CLASSIFICATION	8.939405765344996E-5	DEFECT
// correct outcome	WITHOUT_CLASSIFICATION	0.999988218353385	WITHOUT_CLASSIFICATION	1.178164661498779E-5	DEFECT
// wrong outcome	WITHOUT_CLASSIFICATION	0.99999153789062	WITHOUT_CLASSIFICATION	8.462109380007865E-6	DEFECT
// store the current time zone	WITHOUT_CLASSIFICATION	0.9999945431005064	WITHOUT_CLASSIFICATION	5.456899493552118E-6	DEFECT
// restore the default time zone	WITHOUT_CLASSIFICATION	0.9999988622824345	WITHOUT_CLASSIFICATION	1.137717565464748E-6	DEFECT
// when the dataset contains no series, we expect the range to be null	WITHOUT_CLASSIFICATION	0.9999980390749157	WITHOUT_CLASSIFICATION	1.9609250843735505E-6	DEFECT
// tests with values	WITHOUT_CLASSIFICATION	0.9999855127691266	WITHOUT_CLASSIFICATION	1.4487230873439882E-5	DEFECT
// adding a second series	WITHOUT_CLASSIFICATION	0.9999936469332827	WITHOUT_CLASSIFICATION	6.353066717146723E-6	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999905687775327	WITHOUT_CLASSIFICATION	9.431222467335725E-6	DEFECT
// x	WITHOUT_CLASSIFICATION	0.9998956330714864	WITHOUT_CLASSIFICATION	1.0436692851360087E-4	DEFECT
// y	WITHOUT_CLASSIFICATION	0.9999331010986621	WITHOUT_CLASSIFICATION	6.689890133793416E-5	DEFECT
// period	WITHOUT_CLASSIFICATION	0.9999802669049941	WITHOUT_CLASSIFICATION	1.9733095005873708E-5	DEFECT
// autoSort	WITHOUT_CLASSIFICATION	0.9999765015725031	WITHOUT_CLASSIFICATION	2.3498427496945762E-5	DEFECT
// autoSort	WITHOUT_CLASSIFICATION	0.9999765015725031	WITHOUT_CLASSIFICATION	2.3498427496945762E-5	DEFECT
// add a value	WITHOUT_CLASSIFICATION	0.9999791726487751	WITHOUT_CLASSIFICATION	2.0827351224908727E-5	DEFECT
// add a value	WITHOUT_CLASSIFICATION	0.9999791726487751	WITHOUT_CLASSIFICATION	2.0827351224908727E-5	DEFECT
// add another value	WITHOUT_CLASSIFICATION	0.9999947302536238	WITHOUT_CLASSIFICATION	5.269746376172739E-6	DEFECT
// add another value	WITHOUT_CLASSIFICATION	0.9999947302536238	WITHOUT_CLASSIFICATION	5.269746376172739E-6	DEFECT
// try a dataset with some content...	WITHOUT_CLASSIFICATION	0.9999956934838338	WITHOUT_CLASSIFICATION	4.306516166233509E-6	DEFECT
// try a dataset with some content...	WITHOUT_CLASSIFICATION	0.9999956934838338	WITHOUT_CLASSIFICATION	4.306516166233509E-6	DEFECT
// add an empty series	WITHOUT_CLASSIFICATION	0.9999616317174145	WITHOUT_CLASSIFICATION	3.836828258547587E-5	DEFECT
// locale shouldn't matter here	WITHOUT_CLASSIFICATION	0.9999723337489907	WITHOUT_CLASSIFICATION	2.7666251009216846E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999921624874433	WITHOUT_CLASSIFICATION	7.837512556810423E-6	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999921624874433	WITHOUT_CLASSIFICATION	7.837512556810423E-6	DEFECT
// locale should not matter here	WITHOUT_CLASSIFICATION	0.9999594730478958	WITHOUT_CLASSIFICATION	4.052695210423634E-5	DEFECT
// locale should not matter here	WITHOUT_CLASSIFICATION	0.9999594730478958	WITHOUT_CLASSIFICATION	4.052695210423634E-5	DEFECT
// test 1...	WITHOUT_CLASSIFICATION	0.9999661793347964	WITHOUT_CLASSIFICATION	3.382066520361062E-5	DEFECT
// test 1...	WITHOUT_CLASSIFICATION	0.9999661793347964	WITHOUT_CLASSIFICATION	3.382066520361062E-5	DEFECT
// test 1...	WITHOUT_CLASSIFICATION	0.9999661793347964	WITHOUT_CLASSIFICATION	3.382066520361062E-5	DEFECT
// test 2...	WITHOUT_CLASSIFICATION	0.9999720088685293	WITHOUT_CLASSIFICATION	2.7991131470589227E-5	DEFECT
// test 2...	WITHOUT_CLASSIFICATION	0.9999720088685293	WITHOUT_CLASSIFICATION	2.7991131470589227E-5	DEFECT
// test 2...	WITHOUT_CLASSIFICATION	0.9999720088685293	WITHOUT_CLASSIFICATION	2.7991131470589227E-5	DEFECT
// test 3...	WITHOUT_CLASSIFICATION	0.9999759425959119	WITHOUT_CLASSIFICATION	2.4057404088067315E-5	DEFECT
// test 3...	WITHOUT_CLASSIFICATION	0.9999759425959119	WITHOUT_CLASSIFICATION	2.4057404088067315E-5	DEFECT
// correct outcome	WITHOUT_CLASSIFICATION	0.999988218353385	WITHOUT_CLASSIFICATION	1.178164661498779E-5	DEFECT
// wrong outcome	WITHOUT_CLASSIFICATION	0.99999153789062	WITHOUT_CLASSIFICATION	8.462109380007865E-6	DEFECT
// now test that the clone is independent of the original	WITHOUT_CLASSIFICATION	0.9999976253402516	WITHOUT_CLASSIFICATION	2.374659748441666E-6	DEFECT
// Make sure there's nothing left	WITHOUT_CLASSIFICATION	0.9999959697904122	WITHOUT_CLASSIFICATION	4.030209587843963E-6	DEFECT
// seriesKey	WITHOUT_CLASSIFICATION	0.9999804720197575	WITHOUT_CLASSIFICATION	1.9527980242486256E-5	DEFECT
// seriesKey	WITHOUT_CLASSIFICATION	0.9999804720197575	WITHOUT_CLASSIFICATION	1.9527980242486256E-5	DEFECT
// the moving average series has 7 items, the first three // days (11, 12, 13 August are skipped)	WITHOUT_CLASSIFICATION	0.9999949253063706	WITHOUT_CLASSIFICATION	5.074693629360879E-6	DEFECT
// add a series	WITHOUT_CLASSIFICATION	0.9999881525927038	WITHOUT_CLASSIFICATION	1.1847407296259747E-5	DEFECT
// seriesKey	WITHOUT_CLASSIFICATION	0.9999804720197575	WITHOUT_CLASSIFICATION	1.9527980242486256E-5	DEFECT
/* XYSeries s = */	WITHOUT_CLASSIFICATION	0.9999131366846533	WITHOUT_CLASSIFICATION	8.686331534671316E-5	DEFECT
// remove a value	WITHOUT_CLASSIFICATION	0.9999921507402798	WITHOUT_CLASSIFICATION	7.849259720234952E-6	DEFECT
// remove a value	WITHOUT_CLASSIFICATION	0.9999921507402798	WITHOUT_CLASSIFICATION	7.849259720234952E-6	DEFECT
// remove a value	WITHOUT_CLASSIFICATION	0.9999921507402798	WITHOUT_CLASSIFICATION	7.849259720234952E-6	DEFECT
// and check the first series too...	WITHOUT_CLASSIFICATION	0.9999991676527755	WITHOUT_CLASSIFICATION	8.323472243738973E-7	DEFECT
// now add another series	WITHOUT_CLASSIFICATION	0.9999851510477853	WITHOUT_CLASSIFICATION	1.4848952214676672E-5	DEFECT
/*Comparable k =*/	WITHOUT_CLASSIFICATION	0.9999743123218109	WITHOUT_CLASSIFICATION	2.568767818912772E-5	DEFECT
// yLow	WITHOUT_CLASSIFICATION	0.999959441650298	WITHOUT_CLASSIFICATION	4.055834970200848E-5	DEFECT
// allowDuplicateValues	WITHOUT_CLASSIFICATION	0.9999961479687635	WITHOUT_CLASSIFICATION	3.852031236593848E-6	DEFECT
// allowDuplicateValues	WITHOUT_CLASSIFICATION	0.9999961479687635	WITHOUT_CLASSIFICATION	3.852031236593848E-6	DEFECT
// check for series key out of bounds	WITHOUT_CLASSIFICATION	0.9999992753535905	WITHOUT_CLASSIFICATION	7.246464095627878E-7	DEFECT
// yHigh	WITHOUT_CLASSIFICATION	0.9999660157446877	WITHOUT_CLASSIFICATION	3.398425531218004E-5	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999905687775327	WITHOUT_CLASSIFICATION	9.431222467335725E-6	DEFECT
// x	WITHOUT_CLASSIFICATION	0.9998956330714864	WITHOUT_CLASSIFICATION	1.0436692851360087E-4	DEFECT
// y	WITHOUT_CLASSIFICATION	0.9999331010986621	WITHOUT_CLASSIFICATION	6.689890133793416E-5	DEFECT
// default instances	WITHOUT_CLASSIFICATION	0.9999985515299408	WITHOUT_CLASSIFICATION	1.4484700592296547E-6	DEFECT
// default instances	WITHOUT_CLASSIFICATION	0.9999985515299408	WITHOUT_CLASSIFICATION	1.4484700592296547E-6	DEFECT
// autoSort	WITHOUT_CLASSIFICATION	0.9999765015725031	WITHOUT_CLASSIFICATION	2.3498427496945762E-5	DEFECT
// add a value	WITHOUT_CLASSIFICATION	0.9999791726487751	WITHOUT_CLASSIFICATION	2.0827351224908727E-5	DEFECT
// add another value	WITHOUT_CLASSIFICATION	0.9999947302536238	WITHOUT_CLASSIFICATION	5.269746376172739E-6	DEFECT
// try a dataset with some content...	WITHOUT_CLASSIFICATION	0.9999956934838338	WITHOUT_CLASSIFICATION	4.306516166233509E-6	DEFECT
// try a dataset with some content...	WITHOUT_CLASSIFICATION	0.9999956934838338	WITHOUT_CLASSIFICATION	4.306516166233509E-6	DEFECT
// try a dataset with some content...	WITHOUT_CLASSIFICATION	0.9999956934838338	WITHOUT_CLASSIFICATION	4.306516166233509E-6	DEFECT
// check that the clone doesn't share the same underlying arrays.	WITHOUT_CLASSIFICATION	0.9999909145620777	WITHOUT_CLASSIFICATION	9.085437922333538E-6	DEFECT
// check that the clone doesn't share the same underlying arrays.	WITHOUT_CLASSIFICATION	0.9999909145620777	WITHOUT_CLASSIFICATION	9.085437922333538E-6	DEFECT
// add an empty series	WITHOUT_CLASSIFICATION	0.9999616317174145	WITHOUT_CLASSIFICATION	3.836828258547587E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999921624874433	WITHOUT_CLASSIFICATION	7.837512556810423E-6	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999921624874433	WITHOUT_CLASSIFICATION	7.837512556810423E-6	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999921624874433	WITHOUT_CLASSIFICATION	7.837512556810423E-6	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999921624874433	WITHOUT_CLASSIFICATION	7.837512556810423E-6	DEFECT
// wrong outcome	WITHOUT_CLASSIFICATION	0.99999153789062	WITHOUT_CLASSIFICATION	8.462109380007865E-6	DEFECT
// wrong outcome	WITHOUT_CLASSIFICATION	0.99999153789062	WITHOUT_CLASSIFICATION	8.462109380007865E-6	DEFECT
// tests with values	WITHOUT_CLASSIFICATION	0.9999855127691266	WITHOUT_CLASSIFICATION	1.4487230873439882E-5	DEFECT
// seriesKey	WITHOUT_CLASSIFICATION	0.9999804720197575	WITHOUT_CLASSIFICATION	1.9527980242486256E-5	DEFECT
// remove a value	WITHOUT_CLASSIFICATION	0.9999921507402798	WITHOUT_CLASSIFICATION	7.849259720234952E-6	DEFECT
// add a series	WITHOUT_CLASSIFICATION	0.9999881525927038	WITHOUT_CLASSIFICATION	1.1847407296259747E-5	DEFECT
/* XYSeries s = */	WITHOUT_CLASSIFICATION	0.9999131366846533	WITHOUT_CLASSIFICATION	8.686331534671316E-5	DEFECT
/* XYSeries s = */	WITHOUT_CLASSIFICATION	0.9999131366846533	WITHOUT_CLASSIFICATION	8.686331534671316E-5	DEFECT
// and check the first series too...	WITHOUT_CLASSIFICATION	0.9999991676527755	WITHOUT_CLASSIFICATION	8.323472243738973E-7	DEFECT
// allowDuplicateValues	WITHOUT_CLASSIFICATION	0.9999961479687635	WITHOUT_CLASSIFICATION	3.852031236593848E-6	DEFECT
// check for series key out of bounds	WITHOUT_CLASSIFICATION	0.9999992753535905	WITHOUT_CLASSIFICATION	7.246464095627878E-7	DEFECT
/*Comparable k =*/	WITHOUT_CLASSIFICATION	0.9999743123218109	WITHOUT_CLASSIFICATION	2.568767818912772E-5	DEFECT
/*Comparable k =*/	WITHOUT_CLASSIFICATION	0.9999743123218109	WITHOUT_CLASSIFICATION	2.568767818912772E-5	DEFECT
/*Comparable k =*/	WITHOUT_CLASSIFICATION	0.9999743123218109	WITHOUT_CLASSIFICATION	2.568767818912772E-5	DEFECT
// check that adding a series will overwrite the old series	WITHOUT_CLASSIFICATION	0.9999953280418329	WITHOUT_CLASSIFICATION	4.671958167093433E-6	DEFECT
// check that adding a series will overwrite the old series	WITHOUT_CLASSIFICATION	0.9999953280418329	WITHOUT_CLASSIFICATION	4.671958167093433E-6	DEFECT
// check that adding a series will overwrite the old series	WITHOUT_CLASSIFICATION	0.9999953280418329	WITHOUT_CLASSIFICATION	4.671958167093433E-6	DEFECT
// check null key	WITHOUT_CLASSIFICATION	0.9999963721575675	WITHOUT_CLASSIFICATION	3.627842432445497E-6	DEFECT
// check null key	WITHOUT_CLASSIFICATION	0.9999963721575675	WITHOUT_CLASSIFICATION	3.627842432445497E-6	DEFECT
// check null key	WITHOUT_CLASSIFICATION	0.9999963721575675	WITHOUT_CLASSIFICATION	3.627842432445497E-6	DEFECT
// try an index out of bounds	WITHOUT_CLASSIFICATION	0.9999550335398499	WITHOUT_CLASSIFICATION	4.496646014999494E-5	DEFECT
// now add some more data	WITHOUT_CLASSIFICATION	0.9999735729634228	WITHOUT_CLASSIFICATION	2.6427036577093686E-5	DEFECT
// xLow	WITHOUT_CLASSIFICATION	0.9999431987421497	WITHOUT_CLASSIFICATION	5.680125785029721E-5	DEFECT
// xHigh	WITHOUT_CLASSIFICATION	0.9999523826753436	WITHOUT_CLASSIFICATION	4.7617324656502475E-5	DEFECT
// first check that a valid renaming works	WITHOUT_CLASSIFICATION	0.9999963219771285	WITHOUT_CLASSIFICATION	3.6780228715459384E-6	DEFECT
// next, check that setting a duplicate key fails	WITHOUT_CLASSIFICATION	0.9999995465488536	WITHOUT_CLASSIFICATION	4.5345114647145944E-7	DEFECT
// create an array of items in reverse order	WITHOUT_CLASSIFICATION	0.9999911553866868	WITHOUT_CLASSIFICATION	8.844613313135892E-6	DEFECT
// got the required exception	WITHOUT_CLASSIFICATION	0.9999979224073624	WITHOUT_CLASSIFICATION	2.077592637603874E-6	DEFECT
// set a theme using the new shadow generator feature available in // 1.0.14 - for backwards compatibility it is not enabled by default	WITHOUT_CLASSIFICATION	0.9999988141993749	WITHOUT_CLASSIFICATION	1.1858006250609065E-6	DEFECT
// call parent method // setup flag based on bounds values	WITHOUT_CLASSIFICATION	0.9999987402880166	WITHOUT_CLASSIFICATION	1.259711983314984E-6	DEFECT
//if flag then change to log version of lowest value // to make range begin at a 10^n value:	WITHOUT_CLASSIFICATION	0.9999983502944041	WITHOUT_CLASSIFICATION	1.6497055959675032E-6	DEFECT
//if less than 1.0 then make it 1.0 //add in margin and get exponential value:	WITHOUT_CLASSIFICATION	0.9999982501648386	WITHOUT_CLASSIFICATION	1.7498351614276122E-6	DEFECT
//negatives not allowed and upper bound between 0 & 1 //round up to nearest significant digit for bound: //get negative exponent:	WITHOUT_CLASSIFICATION	0.9999988529683007	WITHOUT_CLASSIFICATION	1.1470316991846925E-6	DEFECT
//not first tick to be displayed //no tick label	WITHOUT_CLASSIFICATION	0.999994579140903	WITHOUT_CLASSIFICATION	5.42085909704487E-6	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999905687775327	WITHOUT_CLASSIFICATION	9.431222467335725E-6	DEFECT
// x	WITHOUT_CLASSIFICATION	0.9998956330714864	WITHOUT_CLASSIFICATION	1.0436692851360087E-4	DEFECT
// y	WITHOUT_CLASSIFICATION	0.9999331010986621	WITHOUT_CLASSIFICATION	6.689890133793416E-5	DEFECT
// default instances	WITHOUT_CLASSIFICATION	0.9999985515299408	WITHOUT_CLASSIFICATION	1.4484700592296547E-6	DEFECT
// TBLRC // 00000 - no items	WITHOUT_CLASSIFICATION	0.9999827906410912	WITHOUT_CLASSIFICATION	1.7209358908796655E-5	DEFECT
// try a few checks to ensure that the clone is independent of the // original	WITHOUT_CLASSIFICATION	0.9999976639718064	WITHOUT_CLASSIFICATION	2.336028193511347E-6	DEFECT
// autoSort	WITHOUT_CLASSIFICATION	0.9999765015725031	WITHOUT_CLASSIFICATION	2.3498427496945762E-5	DEFECT
// add a value	WITHOUT_CLASSIFICATION	0.9999791726487751	WITHOUT_CLASSIFICATION	2.0827351224908727E-5	DEFECT
// add another value	WITHOUT_CLASSIFICATION	0.9999947302536238	WITHOUT_CLASSIFICATION	5.269746376172739E-6	DEFECT
// add an empty series	WITHOUT_CLASSIFICATION	0.9999616317174145	WITHOUT_CLASSIFICATION	3.836828258547587E-5	DEFECT
// now we should be allowed to change s1's key to anything but "S2"	WITHOUT_CLASSIFICATION	0.9999580425673715	WITHOUT_CLASSIFICATION	4.195743262854624E-5	DEFECT
// after s1 is removed from the collection, we should be able to set // the key to anything we want...	WITHOUT_CLASSIFICATION	0.9999944536461166	WITHOUT_CLASSIFICATION	5.546353883413038E-6	DEFECT
// check that removing by index also works	WITHOUT_CLASSIFICATION	0.9999959068414995	WITHOUT_CLASSIFICATION	4.093158500513246E-6	DEFECT
// correct outcome	WITHOUT_CLASSIFICATION	0.999988218353385	WITHOUT_CLASSIFICATION	1.178164661498779E-5	DEFECT
// wrong outcome	WITHOUT_CLASSIFICATION	0.99999153789062	WITHOUT_CLASSIFICATION	8.462109380007865E-6	DEFECT
// remove a value	WITHOUT_CLASSIFICATION	0.9999921507402798	WITHOUT_CLASSIFICATION	7.849259720234952E-6	DEFECT
// add a series	WITHOUT_CLASSIFICATION	0.9999881525927038	WITHOUT_CLASSIFICATION	1.1847407296259747E-5	DEFECT
/* XYSeries s = */	WITHOUT_CLASSIFICATION	0.9999131366846533	WITHOUT_CLASSIFICATION	8.686331534671316E-5	DEFECT
// yLow	WITHOUT_CLASSIFICATION	0.999959441650298	WITHOUT_CLASSIFICATION	4.055834970200848E-5	DEFECT
// yHigh	WITHOUT_CLASSIFICATION	0.9999660157446877	WITHOUT_CLASSIFICATION	3.398425531218004E-5	DEFECT
// xLow	WITHOUT_CLASSIFICATION	0.9999431987421497	WITHOUT_CLASSIFICATION	5.680125785029721E-5	DEFECT
// xHigh	WITHOUT_CLASSIFICATION	0.9999523826753436	WITHOUT_CLASSIFICATION	4.7617324656502475E-5	DEFECT
// when the dataset contains no series, we expect the value range to  // be null	WITHOUT_CLASSIFICATION	0.9999968166251263	WITHOUT_CLASSIFICATION	3.18337487371896E-6	DEFECT
// when the dataset contains one or more series, but those series  // contain no items, we expect the value range to be null	WITHOUT_CLASSIFICATION	0.9999924356335586	WITHOUT_CLASSIFICATION	7.564366441465617E-6	DEFECT
// the series name should not  // change because "C" is already the key for the other series in the // collection	WITHOUT_CLASSIFICATION	0.9999756411231246	WITHOUT_CLASSIFICATION	2.435887687542279E-5	DEFECT
//  Test that there are 6 X points and some specific values	WITHOUT_CLASSIFICATION	0.999995038948875	WITHOUT_CLASSIFICATION	4.961051124965363E-6	DEFECT
// after adding a point to a series, check that there are now 7 // items in each series	WITHOUT_CLASSIFICATION	0.9999763572574917	WITHOUT_CLASSIFICATION	2.3642742508265787E-5	DEFECT
//  Remove series 1	WITHOUT_CLASSIFICATION	0.999992242617215	WITHOUT_CLASSIFICATION	7.757382784944987E-6	DEFECT
//  Test that there are still 7 X points	WITHOUT_CLASSIFICATION	0.999964601967918	WITHOUT_CLASSIFICATION	3.539803208202833E-5	DEFECT
//  Remove series 2 and add new series	WITHOUT_CLASSIFICATION	0.9999979531909013	WITHOUT_CLASSIFICATION	2.046809098574707E-6	DEFECT
//  Test that there are now 4 X points	WITHOUT_CLASSIFICATION	0.9998828296399255	WITHOUT_CLASSIFICATION	1.1717036007445256E-4	DEFECT
// WITH AUTOPRUNING	WITHOUT_CLASSIFICATION	0.999921635309387	WITHOUT_CLASSIFICATION	7.836469061289227E-5	DEFECT
// should be 2 items	WITHOUT_CLASSIFICATION	0.9999867680667507	WITHOUT_CLASSIFICATION	1.3231933249431714E-5	DEFECT
// should be 2 items	WITHOUT_CLASSIFICATION	0.9999867680667507	WITHOUT_CLASSIFICATION	1.3231933249431714E-5	DEFECT
// still 2	WITHOUT_CLASSIFICATION	0.9999646714399905	WITHOUT_CLASSIFICATION	3.5328560009562605E-5	DEFECT
// still 2	WITHOUT_CLASSIFICATION	0.9999646714399905	WITHOUT_CLASSIFICATION	3.5328560009562605E-5	DEFECT
// 1 value pruned.	WITHOUT_CLASSIFICATION	0.9999959763650759	WITHOUT_CLASSIFICATION	4.0236349241253795E-6	DEFECT
// WITHOUT AUTOPRUNING	WITHOUT_CLASSIFICATION	0.999847683640809	WITHOUT_CLASSIFICATION	1.5231635919097427E-4	DEFECT
// still 2.	WITHOUT_CLASSIFICATION	0.9999630387058495	WITHOUT_CLASSIFICATION	3.6961294150539796E-5	DEFECT
// ****************************************************************** //  More than 150 demo applications are included with the JFreeChart //  Developer Guide...for more information, see: // //  >   http://www.object-refinery.com/jfreechart/guide.html // // ******************************************************************	WITHOUT_CLASSIFICATION	0.9999961540123543	WITHOUT_CLASSIFICATION	3.845987645633938E-6	DEFECT
// here we do a check to see if the user is installing the "Legacy" // theme, and reset the bar painters in that case...	WITHOUT_CLASSIFICATION	0.9999994816236406	WITHOUT_CLASSIFICATION	5.183763594231803E-7	DEFECT
// since the flow layout is relatively straightforward, // no information needs to be recorded here	WITHOUT_CLASSIFICATION	0.9999926871826379	WITHOUT_CLASSIFICATION	7.312817362175245E-6	DEFECT
// nothing is drawn if the row index is not included in the list with // the indices of the visible rows...	WITHOUT_CLASSIFICATION	0.9999690880887275	WITHOUT_CLASSIFICATION	3.091191127257423E-5	DEFECT
// calculate the bar width - this calculation differs from the // BarRenderer calculation because the bars are layered on top of one // another, so there is effectively only one bar per category for // the purpose of the bar width calculation	WITHOUT_CLASSIFICATION	0.9999931751438902	WITHOUT_CLASSIFICATION	6.824856109789979E-6	DEFECT
// the link area defines the dog leg points for the linking lines to // the labels	WITHOUT_CLASSIFICATION	0.9999957057344826	WITHOUT_CLASSIFICATION	4.294265517385522E-6	DEFECT
// if the current stroke is not a BasicStroke then it is handled as // a special case	WITHOUT_CLASSIFICATION	0.999997973546117	WITHOUT_CLASSIFICATION	2.0264538830887543E-6	DEFECT
// after setting up all the subplots, the shared range axis may need // reconfiguring	WITHOUT_CLASSIFICATION	0.9999979288485278	WITHOUT_CLASSIFICATION	2.0711514721133486E-6	DEFECT
// if there is an existing dataset, remove the plot from the list of // change listeners...	WITHOUT_CLASSIFICATION	0.9999836879171221	WITHOUT_CLASSIFICATION	1.6312082877950876E-5	DEFECT
// the segment is entirely at the // front of the chart	WITHOUT_CLASSIFICATION	0.99998450714797	WITHOUT_CLASSIFICATION	1.5492852030002806E-5	DEFECT
// starts at back and wraps right around to the // back again	WITHOUT_CLASSIFICATION	0.9999977743364041	WITHOUT_CLASSIFICATION	2.225663595873137E-6	DEFECT
// if the source point doesn't fall within a subplot, we do the // zoom on all subplots...	WITHOUT_CLASSIFICATION	0.9999910945093711	WITHOUT_CLASSIFICATION	8.905490628943164E-6	DEFECT
//  double range = this.domainAxis.getRange().getLength(); //  double scaledRange = range * percent; //  domainAxis.setAnchoredRange(scaledRange);	WITHOUT_CLASSIFICATION	0.9999981845710286	WITHOUT_CLASSIFICATION	1.8154289713950968E-6	DEFECT
// the anchor point is typically the point where the mouse last // clicked - the crosshairs will be driven off this point...	WITHOUT_CLASSIFICATION	0.999969574585006	WITHOUT_CLASSIFICATION	3.04254149939126E-5	DEFECT
// axisIndices can be: // 1.  null; // 2.  non-empty, containing only Integer objects that are unique.	WITHOUT_CLASSIFICATION	0.9999718871322195	WITHOUT_CLASSIFICATION	2.8112867780459257E-5	DEFECT
// if this cell held a maximum and/or minimum value, we'll need to // update the cached bounds...	WITHOUT_CLASSIFICATION	0.9999932045995663	WITHOUT_CLASSIFICATION	6.7954004336942235E-6	DEFECT
// if the 'notify' flag has been switched to false, we don't notify // the listeners	WITHOUT_CLASSIFICATION	0.9999720505573749	WITHOUT_CLASSIFICATION	2.7949442625093644E-5	DEFECT
// private Plot parent <-- don't clone the parent plot, but take care // childs in combined plots instead	WITHOUT_CLASSIFICATION	0.9999180803043428	WITHOUT_CLASSIFICATION	8.191969565710481E-5	DEFECT
// For the case were the first tick is greater // than minZ	WITHOUT_CLASSIFICATION	0.9999593541343204	WITHOUT_CLASSIFICATION	4.064586567973016E-5	DEFECT
// add an entity for the item, but only if it falls within the // data area...	WITHOUT_CLASSIFICATION	0.999955298976936	WITHOUT_CLASSIFICATION	4.4701023064009007E-5	DEFECT
// we create an event with a special flag set...the purpose of // this is to communicate to the plot (the default receiver of // the event) that series visibility has changed so the axis // ranges might need updating...	WITHOUT_CLASSIFICATION	0.9999953577119014	WITHOUT_CLASSIFICATION	4.6422880985607665E-6	DEFECT
// when the x-values are sorted in descending order, the lower // bound is found by calculating relative to the xHigh value	WITHOUT_CLASSIFICATION	0.9999983040492885	WITHOUT_CLASSIFICATION	1.6959507115961314E-6	DEFECT
// nothing is drawn if the row index is not included in the list with // the indices of the visible rows...	WITHOUT_CLASSIFICATION	0.9999690880887275	WITHOUT_CLASSIFICATION	3.091191127257423E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999921624874433	WITHOUT_CLASSIFICATION	7.837512556810423E-6	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999921624874433	WITHOUT_CLASSIFICATION	7.837512556810423E-6	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999921624874433	WITHOUT_CLASSIFICATION	7.837512556810423E-6	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999921624874433	WITHOUT_CLASSIFICATION	7.837512556810423E-6	DEFECT
// nothing is drawn if the row index is not included in the list with // the indices of the visible rows...	WITHOUT_CLASSIFICATION	0.9999690880887275	WITHOUT_CLASSIFICATION	3.091191127257423E-5	DEFECT
/////////////////////////////////////////////////////////////////////////// // From HighLowDataset ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999932744887488	WITHOUT_CLASSIFICATION	6.725511251279597E-6	DEFECT
// handle a special case - if the bar colour has alpha == 0, it is // invisible so we shouldn't draw any shadow	WITHOUT_CLASSIFICATION	0.9999979697716759	WITHOUT_CLASSIFICATION	2.0302283241471223E-6	DEFECT
// handle a special case - if the bar colour has alpha == 0, it is // invisible so we shouldn't draw any shadow	WITHOUT_CLASSIFICATION	0.9999979697716759	WITHOUT_CLASSIFICATION	2.0302283241471223E-6	DEFECT
// if the dataset is not a StatisticalCategoryDataset then just revert // to the superclass (LineAndShapeRenderer) behaviour...	WITHOUT_CLASSIFICATION	0.999997368559441	WITHOUT_CLASSIFICATION	2.631440558926861E-6	DEFECT
// FIXME: add setSeriesToolTipGenerator(int, CategoryToolTipGenerator, //            boolean) ?	WITHOUT_CLASSIFICATION	0.9938943849654059	WITHOUT_CLASSIFICATION	0.0061056150345939805	DEFECT
// average radius // outlier radius	WITHOUT_CLASSIFICATION	0.9999940909450047	WITHOUT_CLASSIFICATION	5.909054995194505E-6	DEFECT
// false preserves the old behaviour // prior to introducing this flag	WITHOUT_CLASSIFICATION	0.9999957682180206	WITHOUT_CLASSIFICATION	4.23178197941574E-6	DEFECT
// These are deliberately not bounded to minimums/maxCandleWidth to //  retain old behaviour.	WITHOUT_CLASSIFICATION	0.9999343410661599	WITHOUT_CLASSIFICATION	6.56589338401555E-5	DEFECT
// the noCodeBaseClassLoader is configured by a call to the // removeCodeBase() method, typically in the init() method of an // applet...	WITHOUT_CLASSIFICATION	0.9999982422473058	WITHOUT_CLASSIFICATION	1.757752694058946E-6	DEFECT
// the noCodeBaseClassLoader is configured by a call to the // removeCodeBase() method, typically in the init() method of an // applet...	WITHOUT_CLASSIFICATION	0.9999982422473058	WITHOUT_CLASSIFICATION	1.757752694058946E-6	DEFECT
// deregister the collection as a change listener to each series in // the collection.	WITHOUT_CLASSIFICATION	0.9999972971959641	WITHOUT_CLASSIFICATION	2.702804035952873E-6	DEFECT
// handle the special case where the dataset has y-intervals that // we want to measure	WITHOUT_CLASSIFICATION	0.9999993493492765	WITHOUT_CLASSIFICATION	6.506507236309575E-7	DEFECT
// CASE 3 : Comparing to a non-TimePeriod object // ---------------------------------------------	WITHOUT_CLASSIFICATION	0.9999845591775635	WITHOUT_CLASSIFICATION	1.544082243655313E-5	DEFECT
// CASE 1 : Comparing to another Second object // -------------------------------------------	WITHOUT_CLASSIFICATION	0.9999779241642491	WITHOUT_CLASSIFICATION	2.2075835750814475E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999921624874433	WITHOUT_CLASSIFICATION	7.837512556810423E-6	DEFECT
// end period is not in original series // this is first item AFTER end period // so this is last item BEFORE end	WITHOUT_CLASSIFICATION	0.999856543035892	WITHOUT_CLASSIFICATION	1.4345696410799798E-4	DEFECT
// the first initialization must precede creation of the ValueSet array: // establishes length of each array	WITHOUT_CLASSIFICATION	0.9999960917870623	WITHOUT_CLASSIFICATION	3.908212937701412E-6	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999921624874433	WITHOUT_CLASSIFICATION	7.837512556810423E-6	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999921624874433	WITHOUT_CLASSIFICATION	7.837512556810423E-6	DEFECT
// here we check that the average marker will in fact be // visible before drawing it...	WITHOUT_CLASSIFICATION	0.9999527275985303	WITHOUT_CLASSIFICATION	4.7272401469630256E-5	DEFECT
// draw outliers // outlier radius	WITHOUT_CLASSIFICATION	0.9999936452999769	WITHOUT_CLASSIFICATION	6.354700023025735E-6	DEFECT
// NULL value -> insert point on base line // instead of 'step point'	WITHOUT_CLASSIFICATION	0.9999955594067014	WITHOUT_CLASSIFICATION	4.4405932986908624E-6	DEFECT
// coordinate pairs // current minuend point // next minuend point // current subtrahend point // next subtrahend point	WITHOUT_CLASSIFICATION	0.9999989948972245	WITHOUT_CLASSIFICATION	1.005102775461108E-6	DEFECT
// the intersect is at the next point for both the minuend // and subtrahend	WITHOUT_CLASSIFICATION	0.9999786269709973	WITHOUT_CLASSIFICATION	2.137302900278038E-5	DEFECT
// create the polygon // add the minuend's points to polygon	WITHOUT_CLASSIFICATION	0.9999970014049462	WITHOUT_CLASSIFICATION	2.9985950538011785E-6	DEFECT
// the following code handles the line for the y-values...it's // all done by code in the super class	WITHOUT_CLASSIFICATION	0.9999997118165096	WITHOUT_CLASSIFICATION	2.881834903641476E-7	DEFECT
// Check if the item is the last item for the series and number of // items > 0.  We can't draw an area for a single point.	WITHOUT_CLASSIFICATION	0.9999987092878184	WITHOUT_CLASSIFICATION	1.2907121816034028E-6	DEFECT
// use item paint for outlines by // default, not outline paint	WITHOUT_CLASSIFICATION	0.9999974941805592	WITHOUT_CLASSIFICATION	2.5058194408203366E-6	DEFECT
// add an entity for the item, but only if it falls within the data // area...	WITHOUT_CLASSIFICATION	0.9999646316986218	WITHOUT_CLASSIFICATION	3.536830137824937E-5	DEFECT
// the bounds should be calculated using just the items within // the current range of the x-axis...if there is one	WITHOUT_CLASSIFICATION	0.9999918064920903	WITHOUT_CLASSIFICATION	8.193507909703798E-6	DEFECT
// We organise the data with the following assumption: // 1) the data are sorted by x then y // 2) that the data will be represented by a rectangle formed by //    using x[i+1], x, y[j+1], and y. // 3) we march along the y-axis at the same value of x until a new //    value x is found at which point we will flag the index //    where x[i+1]<>x[i]	WITHOUT_CLASSIFICATION	0.9999959134816423	WITHOUT_CLASSIFICATION	4.086518357706182E-6	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999921624874433	WITHOUT_CLASSIFICATION	7.837512556810423E-6	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999921624874433	WITHOUT_CLASSIFICATION	7.837512556810423E-6	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999921624874433	WITHOUT_CLASSIFICATION	7.837512556810423E-6	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999921624874433	WITHOUT_CLASSIFICATION	7.837512556810423E-6	DEFECT
// create the new color and set it to the // SwtPaintCanvas	WITHOUT_CLASSIFICATION	0.9999996076441321	WITHOUT_CLASSIFICATION	3.9235586783445577E-7	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999921624874433	WITHOUT_CLASSIFICATION	7.837512556810423E-6	DEFECT
// we're doing this for testing only, and make sure that we // only add data in ascending order by x-value	WITHOUT_CLASSIFICATION	0.9999980865550904	WITHOUT_CLASSIFICATION	1.913444909638601E-6	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999921624874433	WITHOUT_CLASSIFICATION	7.837512556810423E-6	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999921624874433	WITHOUT_CLASSIFICATION	7.837512556810423E-6	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999921624874433	WITHOUT_CLASSIFICATION	7.837512556810423E-6	DEFECT
// have to use a subclass of // AbstractRenderer	WITHOUT_CLASSIFICATION	0.9999991146809037	WITHOUT_CLASSIFICATION	8.85319096400755E-7	DEFECT
// include legend // tooltips // urls	WITHOUT_CLASSIFICATION	0.9999893940921274	WITHOUT_CLASSIFICATION	1.0605907872675317E-5	DEFECT
// setup our test timelines // // Legend for comments below: // <spaces> = Segments included in the final timeline // EE       = Excluded segments via timeline rules // xx       = Exception segments inherited from base timeline exclusions	WITHOUT_CLASSIFICATION	0.99999439308829	WITHOUT_CLASSIFICATION	5.606911710020452E-6	DEFECT
////////////////////////////////////////////////////////////////////////// // test exception segments //////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999978668304167	WITHOUT_CLASSIFICATION	2.1331695833449034E-6	DEFECT
// we use ValueMarker for the tests, because we need a concrete // subclass...	WITHOUT_CLASSIFICATION	0.999999482052639	WITHOUT_CLASSIFICATION	5.179473609886875E-7	DEFECT
// now check that all datasets, renderers and axes are being listened // too...	WITHOUT_CLASSIFICATION	0.9999414010051488	WITHOUT_CLASSIFICATION	5.859899485114605E-5	DEFECT
// now check that all datasets, renderers and axes are being listened // too...	WITHOUT_CLASSIFICATION	0.9999414010051488	WITHOUT_CLASSIFICATION	5.859899485114605E-5	DEFECT
// after clearing, reverts to // default group	WITHOUT_CLASSIFICATION	0.9999987808243171	WITHOUT_CLASSIFICATION	1.2191756828001744E-6	DEFECT
// regular equality for the datasets doesn't check the fields, just // the data values...so let's check some more things...	WITHOUT_CLASSIFICATION	0.9999996778391529	WITHOUT_CLASSIFICATION	3.221608471393598E-7	DEFECT
// these methods should throw an IndexOutOfBoundsException since the // column is too high...	WITHOUT_CLASSIFICATION	0.9999017589407585	WITHOUT_CLASSIFICATION	9.824105924140133E-5	DEFECT
// this replaces the entry with the current minimum value, but the new // minimum value is now in a different item	WITHOUT_CLASSIFICATION	0.9998427041816658	WITHOUT_CLASSIFICATION	1.5729581833425946E-4	DEFECT
// the dataset should prevent the addition of a series with the // same name as an existing series in the dataset	WITHOUT_CLASSIFICATION	0.9999936368396648	WITHOUT_CLASSIFICATION	6.36316033523884E-6	DEFECT
/*item = */	WITHOUT_CLASSIFICATION	0.9999032320065642	WITHOUT_CLASSIFICATION	9.676799343581177E-5	DEFECT
// test empty series	WITHOUT_CLASSIFICATION	0.9999897931456277	WITHOUT_CLASSIFICATION	1.0206854372152866E-5	DEFECT
// now we should be allowed to change s1's key to anything but "S2"	WITHOUT_CLASSIFICATION	0.9999580425673715	WITHOUT_CLASSIFICATION	4.195743262854624E-5	DEFECT
// after s1 is removed from the collection, we should be able to set // the key to anything we want...	WITHOUT_CLASSIFICATION	0.9999944536461166	WITHOUT_CLASSIFICATION	5.546353883413038E-6	DEFECT
// locale should not matter here	WITHOUT_CLASSIFICATION	0.9999594730478958	WITHOUT_CLASSIFICATION	4.052695210423634E-5	DEFECT
// correct outcome	WITHOUT_CLASSIFICATION	0.999988218353385	WITHOUT_CLASSIFICATION	1.178164661498779E-5	DEFECT
// correct outcome	WITHOUT_CLASSIFICATION	0.999988218353385	WITHOUT_CLASSIFICATION	1.178164661498779E-5	DEFECT
// wrong outcome	WITHOUT_CLASSIFICATION	0.99999153789062	WITHOUT_CLASSIFICATION	8.462109380007865E-6	DEFECT
// when the dataset contains one or more series, but those series // contain no items, we still expect the range to be null	WITHOUT_CLASSIFICATION	0.9999882686595775	WITHOUT_CLASSIFICATION	1.1731340422616105E-5	DEFECT
// tests with values	WITHOUT_CLASSIFICATION	0.9999855127691266	WITHOUT_CLASSIFICATION	1.4487230873439882E-5	DEFECT
// tests with values	WITHOUT_CLASSIFICATION	0.9999855127691266	WITHOUT_CLASSIFICATION	1.4487230873439882E-5	DEFECT
// seriesKey	WITHOUT_CLASSIFICATION	0.9999804720197575	WITHOUT_CLASSIFICATION	1.9527980242486256E-5	DEFECT
// open	WITHOUT_CLASSIFICATION	0.9999827348436581	WITHOUT_CLASSIFICATION	1.7265156341834425E-5	DEFECT
// add a series	WITHOUT_CLASSIFICATION	0.9999881525927038	WITHOUT_CLASSIFICATION	1.1847407296259747E-5	DEFECT
// allowDuplicateValues	WITHOUT_CLASSIFICATION	0.9999961479687635	WITHOUT_CLASSIFICATION	3.852031236593848E-6	DEFECT
// check for series key out of bounds	WITHOUT_CLASSIFICATION	0.9999992753535905	WITHOUT_CLASSIFICATION	7.246464095627878E-7	DEFECT
// check for series key out of bounds	WITHOUT_CLASSIFICATION	0.9999992753535905	WITHOUT_CLASSIFICATION	7.246464095627878E-7	DEFECT
/*Comparable k =*/	WITHOUT_CLASSIFICATION	0.9999743123218109	WITHOUT_CLASSIFICATION	2.568767818912772E-5	DEFECT
/*Comparable k =*/	WITHOUT_CLASSIFICATION	0.9999743123218109	WITHOUT_CLASSIFICATION	2.568767818912772E-5	DEFECT
/*Comparable k =*/	WITHOUT_CLASSIFICATION	0.9999743123218109	WITHOUT_CLASSIFICATION	2.568767818912772E-5	DEFECT
/*Comparable k =*/	WITHOUT_CLASSIFICATION	0.9999743123218109	WITHOUT_CLASSIFICATION	2.568767818912772E-5	DEFECT
// when the dataset contains no series, we expect the value range to  // be null	WITHOUT_CLASSIFICATION	0.9999968166251263	WITHOUT_CLASSIFICATION	3.18337487371896E-6	DEFECT
// when the dataset contains no series, we expect the value range to  // be null	WITHOUT_CLASSIFICATION	0.9999968166251263	WITHOUT_CLASSIFICATION	3.18337487371896E-6	DEFECT
// when the dataset contains one or more series, but those series  // contain no items, we expect the value range to be null	WITHOUT_CLASSIFICATION	0.9999924356335586	WITHOUT_CLASSIFICATION	7.564366441465617E-6	DEFECT
// when the dataset contains one or more series, but those series  // contain no items, we expect the value range to be null	WITHOUT_CLASSIFICATION	0.9999924356335586	WITHOUT_CLASSIFICATION	7.564366441465617E-6	DEFECT
// complicate things a little...	WITHOUT_CLASSIFICATION	0.9999808235980795	WITHOUT_CLASSIFICATION	1.917640192053127E-5	DEFECT
// seem to be the same...	WITHOUT_CLASSIFICATION	0.9999771084246774	WITHOUT_CLASSIFICATION	2.2891575322560397E-5	DEFECT
// what is our alignment?	WITHOUT_CLASSIFICATION	0.9998811914581921	WITHOUT_CLASSIFICATION	1.188085418079122E-4	DEFECT
// what is our alignment?	WITHOUT_CLASSIFICATION	0.9998811914581921	WITHOUT_CLASSIFICATION	1.188085418079122E-4	DEFECT
// seem to be the same...	WITHOUT_CLASSIFICATION	0.9999771084246774	WITHOUT_CLASSIFICATION	2.2891575322560397E-5	DEFECT
// slope	WITHOUT_CLASSIFICATION	0.9999921064030538	WITHOUT_CLASSIFICATION	7.893596946198304E-6	DEFECT
// complicate things a little...	WITHOUT_CLASSIFICATION	0.9999808235980795	WITHOUT_CLASSIFICATION	1.917640192053127E-5	DEFECT
// expected	WITHOUT_CLASSIFICATION	0.9999922711364592	WITHOUT_CLASSIFICATION	7.728863540797433E-6	DEFECT
// expected	WITHOUT_CLASSIFICATION	0.9999922711364592	WITHOUT_CLASSIFICATION	7.728863540797433E-6	DEFECT
// expected	WITHOUT_CLASSIFICATION	0.9999922711364592	WITHOUT_CLASSIFICATION	7.728863540797433E-6	DEFECT
// expected	WITHOUT_CLASSIFICATION	0.9999922711364592	WITHOUT_CLASSIFICATION	7.728863540797433E-6	DEFECT
// expected	WITHOUT_CLASSIFICATION	0.9999922711364592	WITHOUT_CLASSIFICATION	7.728863540797433E-6	DEFECT
// expected	WITHOUT_CLASSIFICATION	0.9999922711364592	WITHOUT_CLASSIFICATION	7.728863540797433E-6	DEFECT
/* (non-Javadoc)     * @see org.eclipse.swt.events.FocusListener#focusGained(     * org.eclipse.swt.events.FocusEvent)     */	WITHOUT_CLASSIFICATION	0.9999987072160492	WITHOUT_CLASSIFICATION	1.2927839508174458E-6	DEFECT
/* (non-Javadoc)     * @see org.eclipse.swt.events.FocusListener#focusLost(     * org.eclipse.swt.events.FocusEvent)     */	WITHOUT_CLASSIFICATION	0.9999980247328849	WITHOUT_CLASSIFICATION	1.97526711510108E-6	DEFECT
/* (non-Javadoc)         * @see org.jfree.chart.axis.LogarithmicAxis#switchedLog10(double)         */	WITHOUT_CLASSIFICATION	0.9999991189422365	WITHOUT_CLASSIFICATION	8.810577635243392E-7	DEFECT
// expected	WITHOUT_CLASSIFICATION	0.9999922711364592	WITHOUT_CLASSIFICATION	7.728863540797433E-6	DEFECT
// expected	WITHOUT_CLASSIFICATION	0.9999922711364592	WITHOUT_CLASSIFICATION	7.728863540797433E-6	DEFECT
// expected	WITHOUT_CLASSIFICATION	0.9999922711364592	WITHOUT_CLASSIFICATION	7.728863540797433E-6	DEFECT
// expected	WITHOUT_CLASSIFICATION	0.9999922711364592	WITHOUT_CLASSIFICATION	7.728863540797433E-6	DEFECT
// expected	WITHOUT_CLASSIFICATION	0.9999922711364592	WITHOUT_CLASSIFICATION	7.728863540797433E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999773291202646	WITHOUT_CLASSIFICATION	2.2670879735463088E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999773291202646	WITHOUT_CLASSIFICATION	2.2670879735463088E-5	DEFECT
// do nothing	WITHOUT_CLASSIFICATION	0.9999861106261776	WITHOUT_CLASSIFICATION	1.3889373822501771E-5	DEFECT
// do nothing	WITHOUT_CLASSIFICATION	0.9999861106261776	WITHOUT_CLASSIFICATION	1.3889373822501771E-5	DEFECT
// do nothing	WITHOUT_CLASSIFICATION	0.9999861106261776	WITHOUT_CLASSIFICATION	1.3889373822501771E-5	DEFECT
// do nothing	WITHOUT_CLASSIFICATION	0.9999861106261776	WITHOUT_CLASSIFICATION	1.3889373822501771E-5	DEFECT
//}	WITHOUT_CLASSIFICATION	0.999408137366147	WITHOUT_CLASSIFICATION	5.918626338529501E-4	DEFECT
// find out where to place the label...	WITHOUT_CLASSIFICATION	0.9999981204753198	WITHOUT_CLASSIFICATION	1.8795246801768862E-6	DEFECT
// find out where to place the label...	WITHOUT_CLASSIFICATION	0.9999981204753198	WITHOUT_CLASSIFICATION	1.8795246801768862E-6	DEFECT
// Anwender hat abgebrochen.	WITHOUT_CLASSIFICATION	0.999980893067309	WITHOUT_CLASSIFICATION	1.9106932691060144E-5	DEFECT
// insets	WITHOUT_CLASSIFICATION	0.9999461075346417	WITHOUT_CLASSIFICATION	5.389246535826642E-5	DEFECT
// insets	WITHOUT_CLASSIFICATION	0.9999461075346417	WITHOUT_CLASSIFICATION	5.389246535826642E-5	DEFECT
// ...but this does!	WITHOUT_CLASSIFICATION	0.9999282514133396	WITHOUT_CLASSIFICATION	7.174858666037618E-5	DEFECT
// insets	WITHOUT_CLASSIFICATION	0.9999461075346417	WITHOUT_CLASSIFICATION	5.389246535826642E-5	DEFECT
// check defaults	WITHOUT_CLASSIFICATION	0.9999985434839261	WITHOUT_CLASSIFICATION	1.4565160739530727E-6	DEFECT
// do nothing	WITHOUT_CLASSIFICATION	0.9999861106261776	WITHOUT_CLASSIFICATION	1.3889373822501771E-5	DEFECT
// do nothing	WITHOUT_CLASSIFICATION	0.9999861106261776	WITHOUT_CLASSIFICATION	1.3889373822501771E-5	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999792375281624	WITHOUT_CLASSIFICATION	2.0762471837648883E-5	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999792375281624	WITHOUT_CLASSIFICATION	2.0762471837648883E-5	DEFECT
// OK	WITHOUT_CLASSIFICATION	0.9998185702052343	WITHOUT_CLASSIFICATION	1.8142979476559265E-4	DEFECT
// FIXME: we've cloned the chart, but the dataset(s) aren't cloned // and we should do that	DEFECT	0.9676745738795215	WITHOUT_CLASSIFICATION	0.03232542612047848	DEFECT
// todo: not serialized yet	DEFECT	0.9999737527703639	WITHOUT_CLASSIFICATION	2.6247229636121284E-5	DEFECT
// FIRST_MONDAY_AFTER_1900 = cal.getTime().getTime(); // preceding code won't work with JDK 1.3	DEFECT	0.9996080714876708	WITHOUT_CLASSIFICATION	3.919285123290871E-4	DEFECT
// TODO: we didn't check the height yet	DEFECT	0.9999346822151464	WITHOUT_CLASSIFICATION	6.531778485366884E-5	DEFECT
// TODO: we didn't check the height yet	DEFECT	0.9999346822151464	WITHOUT_CLASSIFICATION	6.531778485366884E-5	DEFECT
// TODO: Check this result...	DEFECT	0.999774648356341	WITHOUT_CLASSIFICATION	2.25351643659032E-4	DEFECT
// TODO: Check this result...	DEFECT	0.999774648356341	WITHOUT_CLASSIFICATION	2.25351643659032E-4	DEFECT
//return cal.getTimeInMillis(); // preceding code won't work with JDK 1.3	DEFECT	0.9999471676558421	WITHOUT_CLASSIFICATION	5.283234415786731E-5	DEFECT
// result = this.workingCalendar.getTimeInMillis(); // preceding code won't work with JDK 1.3	DEFECT	0.9997090118658264	WITHOUT_CLASSIFICATION	2.9098813417353096E-4	DEFECT
