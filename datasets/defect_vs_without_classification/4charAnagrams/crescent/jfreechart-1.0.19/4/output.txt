// TBLRC // 01011 - bottom, right and center	WITHOUT_CLASSIFICATION	0.999997538468709	WITHOUT_CLASSIFICATION	2.4615312910390717E-6	DEFECT
// TBLRC // 01100	WITHOUT_CLASSIFICATION	0.9999827079298969	WITHOUT_CLASSIFICATION	1.7292070103125175E-5	DEFECT
// TBLRC // 01101 - bottom, left and center	WITHOUT_CLASSIFICATION	0.9999988243009691	WITHOUT_CLASSIFICATION	1.1756990308974637E-6	DEFECT
// TBLRC // 01110 - bottom. left and right	WITHOUT_CLASSIFICATION	0.9999962395198349	WITHOUT_CLASSIFICATION	3.7604801652246994E-6	DEFECT
// TBLRC // 01111	WITHOUT_CLASSIFICATION	0.9999801526764398	WITHOUT_CLASSIFICATION	1.9847323560169463E-5	DEFECT
// TBLRC // 10000 - top item only	WITHOUT_CLASSIFICATION	0.999995240020479	WITHOUT_CLASSIFICATION	4.759979520994966E-6	DEFECT
// TBLRC // 10001 - top and center only	WITHOUT_CLASSIFICATION	0.9999993844337443	WITHOUT_CLASSIFICATION	6.155662557178052E-7	DEFECT
// TBLRC // 10010 - right and top only	WITHOUT_CLASSIFICATION	0.9999980212065493	WITHOUT_CLASSIFICATION	1.97879345063102E-6	DEFECT
// TBLRC // 10011 - top, right and center	WITHOUT_CLASSIFICATION	0.9999989309615989	WITHOUT_CLASSIFICATION	1.0690384011333413E-6	DEFECT
// TBLRC // 10100 - top and left only	WITHOUT_CLASSIFICATION	0.999997798461268	WITHOUT_CLASSIFICATION	2.201538732039182E-6	DEFECT
// range	WITHOUT_CLASSIFICATION	0.9999957055785421	WITHOUT_CLASSIFICATION	4.294421457948475E-6	DEFECT
// units	WITHOUT_CLASSIFICATION	0.9999979384355981	WITHOUT_CLASSIFICATION	2.0615644019370952E-6	DEFECT
// interval	WITHOUT_CLASSIFICATION	0.9999949742431965	WITHOUT_CLASSIFICATION	5.02575680344916E-6	DEFECT
// dial outline paint	WITHOUT_CLASSIFICATION	0.9999931758091865	WITHOUT_CLASSIFICATION	6.82419081346171E-6	DEFECT
// dial shape	WITHOUT_CLASSIFICATION	0.9999946700565446	WITHOUT_CLASSIFICATION	5.329943455386586E-6	DEFECT
// dial background paint	WITHOUT_CLASSIFICATION	0.9999983044587027	WITHOUT_CLASSIFICATION	1.6955412971542173E-6	DEFECT
// seriesPaint	WITHOUT_CLASSIFICATION	0.9999993767010475	WITHOUT_CLASSIFICATION	6.23298952474409E-7	DEFECT
// seriesPaintList	WITHOUT_CLASSIFICATION	0.9999994318221701	WITHOUT_CLASSIFICATION	5.681778299273729E-7	DEFECT
// baseSeriesPaint	WITHOUT_CLASSIFICATION	0.9999989351850006	WITHOUT_CLASSIFICATION	1.0648149994137284E-6	DEFECT
// seriesOutlinePaint	WITHOUT_CLASSIFICATION	0.9999988855387355	WITHOUT_CLASSIFICATION	1.1144612645414433E-6	DEFECT
// seriesOutlinePaintList	WITHOUT_CLASSIFICATION	0.9999989840955005	WITHOUT_CLASSIFICATION	1.0159044994629518E-6	DEFECT
// baseSeriesOutlinePaint	WITHOUT_CLASSIFICATION	0.9999980961067668	WITHOUT_CLASSIFICATION	1.9038932332026268E-6	DEFECT
// seriesOutlineStroke	WITHOUT_CLASSIFICATION	0.999995721272038	WITHOUT_CLASSIFICATION	4.278727962101769E-6	DEFECT
// seriesOutlineStrokeList	WITHOUT_CLASSIFICATION	0.999997037520938	WITHOUT_CLASSIFICATION	2.9624790620245047E-6	DEFECT
// add an empty series	WITHOUT_CLASSIFICATION	0.9999871559471879	WITHOUT_CLASSIFICATION	1.2844052812166462E-5	DEFECT
// correct outcome	WITHOUT_CLASSIFICATION	0.9999609762102543	WITHOUT_CLASSIFICATION	3.902378974578983E-5	DEFECT
// high	WITHOUT_CLASSIFICATION	0.9999864259205304	WITHOUT_CLASSIFICATION	1.357407946961476E-5	DEFECT
// low	WITHOUT_CLASSIFICATION	0.9999964941038861	WITHOUT_CLASSIFICATION	3.5058961138190605E-6	DEFECT
// close	WITHOUT_CLASSIFICATION	0.9999992984964436	WITHOUT_CLASSIFICATION	7.015035562615503E-7	DEFECT
/* XYSeries s = */	WITHOUT_CLASSIFICATION	0.999984837948268	WITHOUT_CLASSIFICATION	1.5162051732004604E-5	DEFECT
// there should be no change event when clearing an empty series	WITHOUT_CLASSIFICATION	0.9999915529836384	WITHOUT_CLASSIFICATION	8.447016361504927E-6	DEFECT
// clean up	WITHOUT_CLASSIFICATION	0.9999988388873192	WITHOUT_CLASSIFICATION	1.1611126807265476E-6	DEFECT
// shape	WITHOUT_CLASSIFICATION	0.9999971982697747	WITHOUT_CLASSIFICATION	2.8017302252657677E-6	DEFECT
// stroke	WITHOUT_CLASSIFICATION	0.9999981374337199	WITHOUT_CLASSIFICATION	1.862566280029E-6	DEFECT
// labelFont	WITHOUT_CLASSIFICATION	0.9999972706705306	WITHOUT_CLASSIFICATION	2.7293294693638328E-6	DEFECT
// labelPaint	WITHOUT_CLASSIFICATION	0.9999979491584062	WITHOUT_CLASSIFICATION	2.050841593733493E-6	DEFECT
// upperBound	WITHOUT_CLASSIFICATION	0.999996544825702	WITHOUT_CLASSIFICATION	3.4551742979778354E-6	DEFECT
// paint	WITHOUT_CLASSIFICATION	0.9999955860788465	WITHOUT_CLASSIFICATION	4.413921153470166E-6	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999980014263546	WITHOUT_CLASSIFICATION	1.998573645409622E-6	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999980014263546	WITHOUT_CLASSIFICATION	1.998573645409622E-6	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999980014263546	WITHOUT_CLASSIFICATION	1.998573645409622E-6	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999980014263546	WITHOUT_CLASSIFICATION	1.998573645409622E-6	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999980014263546	WITHOUT_CLASSIFICATION	1.998573645409622E-6	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999980014263546	WITHOUT_CLASSIFICATION	1.998573645409622E-6	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999980014263546	WITHOUT_CLASSIFICATION	1.998573645409622E-6	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999980014263546	WITHOUT_CLASSIFICATION	1.998573645409622E-6	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999980014263546	WITHOUT_CLASSIFICATION	1.998573645409622E-6	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999980014263546	WITHOUT_CLASSIFICATION	1.998573645409622E-6	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999980014263546	WITHOUT_CLASSIFICATION	1.998573645409622E-6	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999980014263546	WITHOUT_CLASSIFICATION	1.998573645409622E-6	DEFECT
// super.drawSecondaryPass(g2, plot, dataset, pass, series, item, // domainAxis, dataArea, rangeAxis, crosshairState, entities);	WITHOUT_CLASSIFICATION	0.9999999680101824	WITHOUT_CLASSIFICATION	3.19898175147023E-8	DEFECT
// properties // save // print // zoom // tooltips	WITHOUT_CLASSIFICATION	0.9999985586269791	WITHOUT_CLASSIFICATION	1.4413730208570405E-6	DEFECT
// properties // save // print // zoom // tooltips	WITHOUT_CLASSIFICATION	0.9999985586269791	WITHOUT_CLASSIFICATION	1.4413730208570405E-6	DEFECT
// properties // save // print // zoom // tooltips	WITHOUT_CLASSIFICATION	0.9999985586269791	WITHOUT_CLASSIFICATION	1.4413730208570405E-6	DEFECT
// do we need to redraw the buffer?	WITHOUT_CLASSIFICATION	0.9999677013023743	WITHOUT_CLASSIFICATION	3.2298697625623544E-5	DEFECT
// get the origin of the zoom selection in the Java2D space used for // drawing the chart (that is, before any scaling to fit the panel)	WITHOUT_CLASSIFICATION	0.9999999974373344	WITHOUT_CLASSIFICATION	2.562665679470047E-9	DEFECT
// suppresses compiler warning	WITHOUT_CLASSIFICATION	0.9999958290810864	WITHOUT_CLASSIFICATION	4.170918913561945E-6	DEFECT
// create the chart...	WITHOUT_CLASSIFICATION	0.9999997467444173	WITHOUT_CLASSIFICATION	2.532555826873508E-7	DEFECT
/* shape visible = */	WITHOUT_CLASSIFICATION	0.9999805863466026	WITHOUT_CLASSIFICATION	1.9413653397480634E-5	DEFECT
/* shape visible = */	WITHOUT_CLASSIFICATION	0.9999805863466026	WITHOUT_CLASSIFICATION	1.9413653397480634E-5	DEFECT
/* shape visible = */	WITHOUT_CLASSIFICATION	0.9999805863466026	WITHOUT_CLASSIFICATION	1.9413653397480634E-5	DEFECT
// we clone the chart because presumably there can be some delay // between putting this instance on the system clipboard and // actually having the getTransferData() method called...	WITHOUT_CLASSIFICATION	0.9999819200889221	WITHOUT_CLASSIFICATION	1.807991107788182E-5	DEFECT
// for efficiency, we just use the first, last and middle items to // compute a hashCode...	WITHOUT_CLASSIFICATION	0.9999999713240786	WITHOUT_CLASSIFICATION	2.8675921467087808E-8	DEFECT
// create a legend, if requested...	WITHOUT_CLASSIFICATION	0.9999999148736639	WITHOUT_CLASSIFICATION	8.51263360350413E-8	DEFECT
// pass the click on to the plot... // rely on the plot to post a plot change event and redraw the chart...	WITHOUT_CLASSIFICATION	0.9999999395687197	WITHOUT_CLASSIFICATION	6.043128035824641E-8	DEFECT
// don't zoom unless the mouse pointer is in the plot's data area	WITHOUT_CLASSIFICATION	0.9999960518860236	WITHOUT_CLASSIFICATION	3.948113976364633E-6	DEFECT
// draw the label	WITHOUT_CLASSIFICATION	0.9999990066575684	WITHOUT_CLASSIFICATION	9.933424316619424E-7	DEFECT
// now try to reject equality...	WITHOUT_CLASSIFICATION	0.9999965948718905	WITHOUT_CLASSIFICATION	3.405128109546049E-6	DEFECT
// no plot, no data	WITHOUT_CLASSIFICATION	0.9999990049716634	WITHOUT_CLASSIFICATION	9.950283366248535E-7	DEFECT
// no plot, no data	WITHOUT_CLASSIFICATION	0.9999990049716634	WITHOUT_CLASSIFICATION	9.950283366248535E-7	DEFECT
// if fixed auto range, then derive lower bound...	WITHOUT_CLASSIFICATION	0.9999891435444145	WITHOUT_CLASSIFICATION	1.085645558557483E-5	DEFECT
// if the axis is not visible, don't draw it...	WITHOUT_CLASSIFICATION	0.999974105249075	WITHOUT_CLASSIFICATION	2.589475092497051E-5	DEFECT
// if the axis is not visible, don't draw it...	WITHOUT_CLASSIFICATION	0.999974105249075	WITHOUT_CLASSIFICATION	2.589475092497051E-5	DEFECT
// if the axis is not visible, don't draw it...	WITHOUT_CLASSIFICATION	0.999974105249075	WITHOUT_CLASSIFICATION	2.589475092497051E-5	DEFECT
// if the axis is not visible, don't draw it...	WITHOUT_CLASSIFICATION	0.999974105249075	WITHOUT_CLASSIFICATION	2.589475092497051E-5	DEFECT
// add minor ticks (for gridlines)	WITHOUT_CLASSIFICATION	0.9999988753764079	WITHOUT_CLASSIFICATION	1.1246235922034705E-6	DEFECT
// select a tick unit that is the next one bigger than the current // (log) range divided by 50	WITHOUT_CLASSIFICATION	0.9999980689493692	WITHOUT_CLASSIFICATION	1.9310506307619187E-6	DEFECT
// look at lower and upper bounds...	WITHOUT_CLASSIFICATION	0.9999990698137596	WITHOUT_CLASSIFICATION	9.301862404541817E-7	DEFECT
// it is unlikely that 'state' will be null, but check anyway...	WITHOUT_CLASSIFICATION	0.9997902233760984	WITHOUT_CLASSIFICATION	2.0977662390159215E-4	DEFECT
// create a new space object if one wasn't supplied...	WITHOUT_CLASSIFICATION	0.9999998052194982	WITHOUT_CLASSIFICATION	1.9478050180005607E-7	DEFECT
// work out the number of periods to skip for labelling	WITHOUT_CLASSIFICATION	0.9999991556527434	WITHOUT_CLASSIFICATION	8.443472566536801E-7	DEFECT
// draw the arrow...	WITHOUT_CLASSIFICATION	0.9999959570692464	WITHOUT_CLASSIFICATION	4.042930753622137E-6	DEFECT
// set flag true if negative values not allowed and the // lower bound is between 0 and 10:	WITHOUT_CLASSIFICATION	0.9999854036121437	WITHOUT_CLASSIFICATION	1.4596387856325836E-5	DEFECT
//parameter value is < -10 //calculate log using positive value:	WITHOUT_CLASSIFICATION	0.9998738717554057	WITHOUT_CLASSIFICATION	1.2612824459438517E-4	DEFECT
//calculate power using positive value; then negate	WITHOUT_CLASSIFICATION	0.9999667221552994	WITHOUT_CLASSIFICATION	3.3277844700639825E-5	DEFECT
//parameter value is <= 0 //use as-is	WITHOUT_CLASSIFICATION	0.9999849718267064	WITHOUT_CLASSIFICATION	1.5028173293544734E-5	DEFECT
//if less than 1.0 then make it 1.0 //subtract out margin and get exponential value:	WITHOUT_CLASSIFICATION	0.9999974472290108	WITHOUT_CLASSIFICATION	2.55277098919402E-6	DEFECT
//negatives not allowed and lower range bound is zero //use data range bound instead	WITHOUT_CLASSIFICATION	0.9999725913962972	WITHOUT_CLASSIFICATION	2.7408603702696346E-5	DEFECT
//get positive exponent //create multiplier value //multiply, round up, and divide for bound value:	WITHOUT_CLASSIFICATION	0.9999984837937783	WITHOUT_CLASSIFICATION	1.5162062217787356E-6	DEFECT
//negatives allowed or upper bound not between 0 & 1 //if flag then change to log version of highest value to // make range begin at a 10^n value; else use nearest int	WITHOUT_CLASSIFICATION	0.9999981604611085	WITHOUT_CLASSIFICATION	1.8395388914862779E-6	DEFECT
//get log10 version of lower bound and round to integer:	WITHOUT_CLASSIFICATION	0.9999991533722562	WITHOUT_CLASSIFICATION	8.46627743805608E-7	DEFECT
//first tick of series, or not too small a value and // one of first 3 ticks, or last tick to be displayed // set exact number of fractional digits to be shown // (no effect if showing "1e#"-style ticks):	WITHOUT_CLASSIFICATION	0.9999997504336777	WITHOUT_CLASSIFICATION	2.495663222865179E-7	DEFECT
//did zero tick last iteration //clear flag //create tick label string: //show tick label if "1e#"-style and it's one // of the first two, if it's the first or last // in the set, or if it's 1-5; beyond that // show fewer as the values get larger:	WITHOUT_CLASSIFICATION	0.9999997423957675	WITHOUT_CLASSIFICATION	2.576042324357538E-7	DEFECT
// as far as I know, the Locale for the calendar only affects week // number calculations, and since DateTickUnit doesn't do week // arithmetic, the default locale (whatever it is) should be fine // here...	WITHOUT_CLASSIFICATION	0.9998258984340342	WITHOUT_CLASSIFICATION	1.7410156596577413E-4	DEFECT
// as far as I know, the Locale for the calendar only affects week // number calculations, and since DateTickUnit doesn't do week // arithmetic, the default locale (whatever it is) should be fine // here...	WITHOUT_CLASSIFICATION	0.9998258984340342	WITHOUT_CLASSIFICATION	1.7410156596577413E-4	DEFECT
// start with the current tick unit...	WITHOUT_CLASSIFICATION	0.9999998027312283	WITHOUT_CLASSIFICATION	1.9726877165213012E-7	DEFECT
// all tick labels have the same width (equal to the height of // the font)...	WITHOUT_CLASSIFICATION	0.9999986689812371	WITHOUT_CLASSIFICATION	1.3310187628769384E-6	DEFECT
// draw the tick marks and labels...	WITHOUT_CLASSIFICATION	0.9999976311498092	WITHOUT_CLASSIFICATION	2.368850190836306E-6	DEFECT
// we call refresh ticks just to get the maximum width or height	WITHOUT_CLASSIFICATION	0.9999997791893377	WITHOUT_CLASSIFICATION	2.2081066243987254E-7	DEFECT
// calculate midnight of first monday after 1/1/1900 relative to // current locale	WITHOUT_CLASSIFICATION	0.9999969760992031	WITHOUT_CLASSIFICATION	3.023900796945431E-6	DEFECT
// cycle through all the segments contained in the BaseTimeline // exception segment	WITHOUT_CLASSIFICATION	0.9999984070567846	WITHOUT_CLASSIFICATION	1.5929432154187032E-6	DEFECT
// this is not one of our included segment, skip it	WITHOUT_CLASSIFICATION	0.999996461995854	WITHOUT_CLASSIFICATION	3.538004145985449E-6	DEFECT
// first test for equality (contains or contained)	WITHOUT_CLASSIFICATION	0.9999997410557999	WITHOUT_CLASSIFICATION	2.5894420004251513E-7	DEFECT
// key not found	WITHOUT_CLASSIFICATION	0.9999698058364341	WITHOUT_CLASSIFICATION	3.0194163565910774E-5	DEFECT
// Compute number of labels	WITHOUT_CLASSIFICATION	0.9999995308440156	WITHOUT_CLASSIFICATION	4.6915598430956094E-7	DEFECT
// TOP	WITHOUT_CLASSIFICATION	0.999831114337502	WITHOUT_CLASSIFICATION	1.6888566249787665E-4	DEFECT
// RIGHT	WITHOUT_CLASSIFICATION	0.9999935865788444	WITHOUT_CLASSIFICATION	6.413421155533617E-6	DEFECT
// argument checking delegated...	WITHOUT_CLASSIFICATION	0.9999994865812032	WITHOUT_CLASSIFICATION	5.134187968405951E-7	DEFECT
//gets the outline stroke width of the plot	WITHOUT_CLASSIFICATION	0.9999972207989987	WITHOUT_CLASSIFICATION	2.7792010013031096E-6	DEFECT
// first arrange without constraints, and see if this fits within // the required ranges...	WITHOUT_CLASSIFICATION	0.9999997172267457	WITHOUT_CLASSIFICATION	2.8277325428730435E-7	DEFECT
// first arrange without constraints, and see if this fits within // the required ranges...	WITHOUT_CLASSIFICATION	0.9999997172267457	WITHOUT_CLASSIFICATION	2.8277325428730435E-7	DEFECT
// set a theme using the new shadow generator feature available in // 1.0.14 - for backwards compatibility it is not enabled by default	WITHOUT_CLASSIFICATION	0.9999999636925156	WITHOUT_CLASSIFICATION	3.6307484299674325E-8	DEFECT
// ****************************************************************** //  More than 150 demo applications are included with the JFreeChart //  Developer Guide...for more information, see: // //  >   http://www.object-refinery.com/jfreechart/guide.html // // ******************************************************************	WITHOUT_CLASSIFICATION	0.9999992060569141	WITHOUT_CLASSIFICATION	7.939430858756882E-7	DEFECT
//dmo: added this panel for colorbar control. (start dmo additions)	WITHOUT_CLASSIFICATION	0.9999581509358013	WITHOUT_CLASSIFICATION	4.1849064198740215E-5	DEFECT
//dmo: (end dmo additions)	WITHOUT_CLASSIFICATION	0.9998366906453022	WITHOUT_CLASSIFICATION	1.633093546977756E-4	DEFECT
//  No op	WITHOUT_CLASSIFICATION	0.999995481086896	WITHOUT_CLASSIFICATION	4.518913104068316E-6	DEFECT
// defer argument checks...	WITHOUT_CLASSIFICATION	0.9999987474771538	WITHOUT_CLASSIFICATION	1.2525228462239326E-6	DEFECT
// defer argument checks...	WITHOUT_CLASSIFICATION	0.9999987474771538	WITHOUT_CLASSIFICATION	1.2525228462239326E-6	DEFECT
// defer argument checks...	WITHOUT_CLASSIFICATION	0.9999987474771538	WITHOUT_CLASSIFICATION	1.2525228462239326E-6	DEFECT
// defer argument checks...	WITHOUT_CLASSIFICATION	0.9999987474771538	WITHOUT_CLASSIFICATION	1.2525228462239326E-6	DEFECT
// defer argument checks...	WITHOUT_CLASSIFICATION	0.9999987474771538	WITHOUT_CLASSIFICATION	1.2525228462239326E-6	DEFECT
// defer argument checks...	WITHOUT_CLASSIFICATION	0.9999987474771538	WITHOUT_CLASSIFICATION	1.2525228462239326E-6	DEFECT
// defer argument checks...	WITHOUT_CLASSIFICATION	0.9999987474771538	WITHOUT_CLASSIFICATION	1.2525228462239326E-6	DEFECT
// defer argument checks...	WITHOUT_CLASSIFICATION	0.9999987474771538	WITHOUT_CLASSIFICATION	1.2525228462239326E-6	DEFECT
// defer argument checks...	WITHOUT_CLASSIFICATION	0.9999987474771538	WITHOUT_CLASSIFICATION	1.2525228462239326E-6	DEFECT
// pass on the event to the auxiliary handlers	WITHOUT_CLASSIFICATION	0.9999997507990169	WITHOUT_CLASSIFICATION	2.492009831040342E-7	DEFECT
// pass on the event to the auxiliary handlers	WITHOUT_CLASSIFICATION	0.9999997507990169	WITHOUT_CLASSIFICATION	2.492009831040342E-7	DEFECT
// does nothing unless overridden	WITHOUT_CLASSIFICATION	0.9999827476377087	WITHOUT_CLASSIFICATION	1.725236229135789E-5	DEFECT
// does nothing unless overridden	WITHOUT_CLASSIFICATION	0.9999827476377087	WITHOUT_CLASSIFICATION	1.725236229135789E-5	DEFECT
//no initial zoom rectangle exists but the handler is set //as life handler unregister	WITHOUT_CLASSIFICATION	0.9999994842290414	WITHOUT_CLASSIFICATION	5.157709585434915E-7	DEFECT
//float midX = (float) (minX + (plotArea.getWidth() * getRotateX())); //float midY = (float) (minY + (plotArea.getHeight() * getRotateY()));	WITHOUT_CLASSIFICATION	0.9999737005365853	WITHOUT_CLASSIFICATION	2.6299463414720565E-5	DEFECT
/// we have rotation	WITHOUT_CLASSIFICATION	0.9999721597540407	WITHOUT_CLASSIFICATION	2.784024595922124E-5	DEFECT
// store the plot and its weight	WITHOUT_CLASSIFICATION	0.9999994610705798	WITHOUT_CLASSIFICATION	5.389294201458958E-7	DEFECT
// store the plot and its weight	WITHOUT_CLASSIFICATION	0.9999994610705798	WITHOUT_CLASSIFICATION	5.389294201458958E-7	DEFECT
// work out the space required by the domain axis...	WITHOUT_CLASSIFICATION	0.9999985675172536	WITHOUT_CLASSIFICATION	1.4324827463316364E-6	DEFECT
// work out the maximum height or width of the non-shared axes...	WITHOUT_CLASSIFICATION	0.9999992238590696	WITHOUT_CLASSIFICATION	7.761409303644239E-7	DEFECT
// calculate plotAreas of all sub-plots, maximum vertical/horizontal // axis width/height	WITHOUT_CLASSIFICATION	0.9999992261065465	WITHOUT_CLASSIFICATION	7.73893453603626E-7	DEFECT
// set up info collection...	WITHOUT_CLASSIFICATION	0.9999989954802564	WITHOUT_CLASSIFICATION	1.0045197436780922E-6	DEFECT
// set up info collection...	WITHOUT_CLASSIFICATION	0.9999989954802564	WITHOUT_CLASSIFICATION	1.0045197436780922E-6	DEFECT
// adjust the drawing area for plot insets (if any)...	WITHOUT_CLASSIFICATION	0.9999997382433852	WITHOUT_CLASSIFICATION	2.617566147725847E-7	DEFECT
// adjust the drawing area for plot insets (if any)...	WITHOUT_CLASSIFICATION	0.9999997382433852	WITHOUT_CLASSIFICATION	2.617566147725847E-7	DEFECT
// after setting up all the subplots, the shared range axis may need // reconfiguring	WITHOUT_CLASSIFICATION	0.9999998191510558	WITHOUT_CLASSIFICATION	1.808489441940317E-7	DEFECT
// adjust the plot area by the interior spacing value	WITHOUT_CLASSIFICATION	0.9999988018865853	WITHOUT_CLASSIFICATION	1.198113414759678E-6	DEFECT
// if we are drawing a perfect circle, we need to readjust the top left // coordinates of the drawing area for the arcs to arrive at this // effect.	WITHOUT_CLASSIFICATION	0.9999980365977852	WITHOUT_CLASSIFICATION	1.963402214849431E-6	DEFECT
// establish the coordinates of the top left corner of the drawing area	WITHOUT_CLASSIFICATION	0.9999997725045076	WITHOUT_CLASSIFICATION	2.2749549250682237E-7	DEFECT
// draw the sections at the top of the pie (and set up tooltips)...	WITHOUT_CLASSIFICATION	0.9999999217583931	WITHOUT_CLASSIFICATION	7.824160682987148E-8	DEFECT
// the pie sections are arranged ANTICLOCKWISE	WITHOUT_CLASSIFICATION	0.9999974640412906	WITHOUT_CLASSIFICATION	2.5359587093886475E-6	DEFECT
// starts at the back and finishes at the front // (wrapping the left side)	WITHOUT_CLASSIFICATION	0.9999998872042773	WITHOUT_CLASSIFICATION	1.1279572271615316E-7	DEFECT
// if the plot area is too small, just return...	WITHOUT_CLASSIFICATION	0.999997473733906	WITHOUT_CLASSIFICATION	2.5262660939899837E-6	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9999997548832702	WITHOUT_CLASSIFICATION	2.4511672975961386E-7	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9999997548832702	WITHOUT_CLASSIFICATION	2.4511672975961386E-7	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9999997548832702	WITHOUT_CLASSIFICATION	2.4511672975961386E-7	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9999997548832702	WITHOUT_CLASSIFICATION	2.4511672975961386E-7	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9999997548832702	WITHOUT_CLASSIFICATION	2.4511672975961386E-7	DEFECT
//turn off anti-aliasing when filling rectangles	WITHOUT_CLASSIFICATION	0.9999935023944304	WITHOUT_CLASSIFICATION	6.497605569545416E-6	DEFECT
// add an entity for the item...	WITHOUT_CLASSIFICATION	0.9999907011189728	WITHOUT_CLASSIFICATION	9.298881027176369E-6	DEFECT
// add an entity for the item...	WITHOUT_CLASSIFICATION	0.9999907011189728	WITHOUT_CLASSIFICATION	9.298881027176369E-6	DEFECT
// delegate 'info' and 'source' argument checks...	WITHOUT_CLASSIFICATION	0.9999999400815485	WITHOUT_CLASSIFICATION	5.991845153652212E-8	DEFECT
// if the source point doesn't fall within a subplot, we do the // zoom on all subplots...	WITHOUT_CLASSIFICATION	0.9999971599983432	WITHOUT_CLASSIFICATION	2.840001656787243E-6	DEFECT
// if the source point doesn't fall within a subplot, we do the // zoom on all subplots...	WITHOUT_CLASSIFICATION	0.9999971599983432	WITHOUT_CLASSIFICATION	2.840001656787243E-6	DEFECT
// is there an override?	WITHOUT_CLASSIFICATION	0.9979873671680486	WITHOUT_CLASSIFICATION	0.0020126328319514148	DEFECT
// is there an override?	WITHOUT_CLASSIFICATION	0.9979873671680486	WITHOUT_CLASSIFICATION	0.0020126328319514148	DEFECT
// nothing defined - do we autoPopulate?	WITHOUT_CLASSIFICATION	0.999983076328981	WITHOUT_CLASSIFICATION	1.6923671019084434E-5	DEFECT
// null argument check delegated...	WITHOUT_CLASSIFICATION	0.9999992015146616	WITHOUT_CLASSIFICATION	7.984853384859292E-7	DEFECT
// null argument check delegated...	WITHOUT_CLASSIFICATION	0.9999992015146616	WITHOUT_CLASSIFICATION	7.984853384859292E-7	DEFECT
// null argument check delegated...	WITHOUT_CLASSIFICATION	0.9999992015146616	WITHOUT_CLASSIFICATION	7.984853384859292E-7	DEFECT
// the explode area defines the max circle/ellipse for the exploded // pie sections.  it is defined by shrinking the linkArea by the // linkMargin factor.	WITHOUT_CLASSIFICATION	0.9999940560364795	WITHOUT_CLASSIFICATION	5.943963520444844E-6	DEFECT
// work out the mid angle (0 - 90 and 270 - 360) = right, // otherwise left	WITHOUT_CLASSIFICATION	0.9999990368021299	WITHOUT_CLASSIFICATION	9.631978701461005E-7	DEFECT
// delegate...	WITHOUT_CLASSIFICATION	0.9999981823029382	WITHOUT_CLASSIFICATION	1.8176970616843207E-6	DEFECT
// delegate...	WITHOUT_CLASSIFICATION	0.9999981823029382	WITHOUT_CLASSIFICATION	1.8176970616843207E-6	DEFECT
// delegate...	WITHOUT_CLASSIFICATION	0.9999981823029382	WITHOUT_CLASSIFICATION	1.8176970616843207E-6	DEFECT
// delegate...	WITHOUT_CLASSIFICATION	0.9999981823029382	WITHOUT_CLASSIFICATION	1.8176970616843207E-6	DEFECT
// delegate...	WITHOUT_CLASSIFICATION	0.9999981823029382	WITHOUT_CLASSIFICATION	1.8176970616843207E-6	DEFECT
// no axis, no gridlines...	WITHOUT_CLASSIFICATION	0.9999981060377138	WITHOUT_CLASSIFICATION	1.8939622862761376E-6	DEFECT
// can't zoom domain axis	WITHOUT_CLASSIFICATION	0.9998782032119468	WITHOUT_CLASSIFICATION	1.2179678805334746E-4	DEFECT
// can't zoom domain axis	WITHOUT_CLASSIFICATION	0.9998782032119468	WITHOUT_CLASSIFICATION	1.2179678805334746E-4	DEFECT
// the above should cover all the options...	WITHOUT_CLASSIFICATION	0.9998871697490932	WITHOUT_CLASSIFICATION	1.1283025090682598E-4	DEFECT
// get the source coordinate - this plot has always a VERTICAL // orientation	WITHOUT_CLASSIFICATION	0.9999973209172472	WITHOUT_CLASSIFICATION	2.6790827527694223E-6	DEFECT
// get the source coordinate - this plot has always a VERTICAL // orientation	WITHOUT_CLASSIFICATION	0.9999973209172472	WITHOUT_CLASSIFICATION	2.6790827527694223E-6	DEFECT
// return the override, if there is one...	WITHOUT_CLASSIFICATION	0.999998063233146	WITHOUT_CLASSIFICATION	1.9367668539627654E-6	DEFECT
// PlotOrientation.VERTICAL	WITHOUT_CLASSIFICATION	0.999993619420425	WITHOUT_CLASSIFICATION	6.3805795749696445E-6	DEFECT
// PlotOrientation.VERTICAL	WITHOUT_CLASSIFICATION	0.999993619420425	WITHOUT_CLASSIFICATION	6.3805795749696445E-6	DEFECT
// PlotOrientation.VERTICAL	WITHOUT_CLASSIFICATION	0.999993619420425	WITHOUT_CLASSIFICATION	6.3805795749696445E-6	DEFECT
// no domain axis to zoom	WITHOUT_CLASSIFICATION	0.9999273670092628	WITHOUT_CLASSIFICATION	7.263299073723031E-5	DEFECT
// no domain axis to zoom	WITHOUT_CLASSIFICATION	0.9999273670092628	WITHOUT_CLASSIFICATION	7.263299073723031E-5	DEFECT
// the indicator bounds is calculated from the templateValue (which // determines the minimum size), the maxTemplateValue (which, if // specified, provides a maximum size) and the actual value	WITHOUT_CLASSIFICATION	0.9999997257212564	WITHOUT_CLASSIFICATION	2.7427874368132475E-7	DEFECT
// startAngle	WITHOUT_CLASSIFICATION	0.9999996051951023	WITHOUT_CLASSIFICATION	3.948048976218814E-7	DEFECT
// startAngle	WITHOUT_CLASSIFICATION	0.9999996051951023	WITHOUT_CLASSIFICATION	3.948048976218814E-7	DEFECT
// extent	WITHOUT_CLASSIFICATION	0.9999975230398065	WITHOUT_CLASSIFICATION	2.476960193580071E-6	DEFECT
// majorTickIncrement // majorTickLength // majorTickPaint // majorTickStroke // minorTickCount // minorTickLength // minorTickPaint // minorTickStroke // tickLabelOffset // tickLabelFont // tickLabelsVisible // tickLabelFormatter // firstTickLabelsVisible	WITHOUT_CLASSIFICATION	0.9999954175523201	WITHOUT_CLASSIFICATION	4.582447679920369E-6	DEFECT
// SERIES VISIBLE IN LEGEND (not yet respected by all renderers)	WITHOUT_CLASSIFICATION	0.999998133350313	WITHOUT_CLASSIFICATION	1.8666496870355663E-6	DEFECT
// PAINT	WITHOUT_CLASSIFICATION	0.9999911134632126	WITHOUT_CLASSIFICATION	8.886536787472603E-6	DEFECT
// STROKE	WITHOUT_CLASSIFICATION	0.9999802455839609	WITHOUT_CLASSIFICATION	1.975441603901352E-5	DEFECT
// itemLabelFontList // baseItemLabelFont // itemLabelPaintList // baseItemLabelPaint // positiveItemLabelPositionList // basePositiveItemLabelPosition // negativeItemLabelPositionList // baseNegativeItemLabelPosition // itemLabelAnchorOffset // createEntityList // baseCreateEntities	WITHOUT_CLASSIFICATION	0.9999997274402743	WITHOUT_CLASSIFICATION	2.7255972568204793E-7	DEFECT
// for value in bounds, do the lookup...	WITHOUT_CLASSIFICATION	0.9999990683265809	WITHOUT_CLASSIFICATION	9.316734190916947E-7	DEFECT
// for data in ascending order by x-value, we are (broadly) looking // for the index of the highest x-value that is less than xLow	WITHOUT_CLASSIFICATION	0.9999939125230025	WITHOUT_CLASSIFICATION	6.08747699749239E-6	DEFECT
// we don't know anything about the ordering of the x-values, // but we can still skip any trailing values that fall outside the // range...	WITHOUT_CLASSIFICATION	0.9998513946920244	WITHOUT_CLASSIFICATION	1.486053079755396E-4	DEFECT
// leave the y values (y1, y0) untranslated as it is going to be be // stacked up later by previous series values, after this it will be // translated.	WITHOUT_CLASSIFICATION	0.9999991902832751	WITHOUT_CLASSIFICATION	8.097167248470119E-7	DEFECT
// get the previous point and the next point so we can calculate a // "hot spot" for the area (used by the chart entity)...	WITHOUT_CLASSIFICATION	0.9999999860797065	WITHOUT_CLASSIFICATION	1.3920293454937203E-8	DEFECT
// FIXME: calculate xx0	WITHOUT_CLASSIFICATION	0.8846027565222269	DEFECT	0.11539724347777316	WITHOUT_CLASSIFICATION
// LEFT POLYGON	WITHOUT_CLASSIFICATION	0.9999870993673058	WITHOUT_CLASSIFICATION	1.2900632694158954E-5	DEFECT
// calculate the bar width	WITHOUT_CLASSIFICATION	0.9999961820203437	WITHOUT_CLASSIFICATION	3.817979656322814E-6	DEFECT
// wait till we are at the last item for the row then draw the // whole stack at once	WITHOUT_CLASSIFICATION	0.9999986205298086	WITHOUT_CLASSIFICATION	1.3794701913964092E-6	DEFECT
// a list to store the series index and bar region, so we can draw // all the labels at the end...	WITHOUT_CLASSIFICATION	0.9999970965684319	WITHOUT_CLASSIFICATION	2.9034315680947535E-6	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9999550874077812	WITHOUT_CLASSIFICATION	4.4912592218731675E-5	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9999550874077812	WITHOUT_CLASSIFICATION	4.4912592218731675E-5	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9999550874077812	WITHOUT_CLASSIFICATION	4.4912592218731675E-5	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9999550874077812	WITHOUT_CLASSIFICATION	4.4912592218731675E-5	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9999550874077812	WITHOUT_CLASSIFICATION	4.4912592218731675E-5	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9999550874077812	WITHOUT_CLASSIFICATION	4.4912592218731675E-5	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9999550874077812	WITHOUT_CLASSIFICATION	4.4912592218731675E-5	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9999550874077812	WITHOUT_CLASSIFICATION	4.4912592218731675E-5	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9999550874077812	WITHOUT_CLASSIFICATION	4.4912592218731675E-5	DEFECT
// do nothing if item is not visible	WITHOUT_CLASSIFICATION	0.9999601628914766	WITHOUT_CLASSIFICATION	3.9837108523320076E-5	DEFECT
// current data point...	WITHOUT_CLASSIFICATION	0.9999978778717445	WITHOUT_CLASSIFICATION	2.1221282555070327E-6	DEFECT
// clip left and right bounds to data area	WITHOUT_CLASSIFICATION	0.9999998088221413	WITHOUT_CLASSIFICATION	1.9117785861708476E-7	DEFECT
// clip left and right bounds to data area	WITHOUT_CLASSIFICATION	0.9999998088221413	WITHOUT_CLASSIFICATION	1.9117785861708476E-7	DEFECT
// PlotOrientation.HORIZONTAL	WITHOUT_CLASSIFICATION	0.9999969851838815	WITHOUT_CLASSIFICATION	3.0148161184746503E-6	DEFECT
// bar is not visible	WITHOUT_CLASSIFICATION	0.9999548304111865	WITHOUT_CLASSIFICATION	4.5169588813432176E-5	DEFECT
// bar is not visible	WITHOUT_CLASSIFICATION	0.9999548304111865	WITHOUT_CLASSIFICATION	4.5169588813432176E-5	DEFECT
// bar is not visible	WITHOUT_CLASSIFICATION	0.9999548304111865	WITHOUT_CLASSIFICATION	4.5169588813432176E-5	DEFECT
// draw the outline...	WITHOUT_CLASSIFICATION	0.9999976978669696	WITHOUT_CLASSIFICATION	2.3021330303780623E-6	DEFECT
// collect entity and tool tip information...	WITHOUT_CLASSIFICATION	0.9999934427192883	WITHOUT_CLASSIFICATION	6.557280711692417E-6	DEFECT
// collect entity and tool tip information...	WITHOUT_CLASSIFICATION	0.9999934427192883	WITHOUT_CLASSIFICATION	6.557280711692417E-6	DEFECT
// collect entity and tool tip information...	WITHOUT_CLASSIFICATION	0.9999934427192883	WITHOUT_CLASSIFICATION	6.557280711692417E-6	DEFECT
// collect entity and tool tip information...	WITHOUT_CLASSIFICATION	0.9999934427192883	WITHOUT_CLASSIFICATION	6.557280711692417E-6	DEFECT
// collect entity and tool tip information...	WITHOUT_CLASSIFICATION	0.9999934427192883	WITHOUT_CLASSIFICATION	6.557280711692417E-6	DEFECT
// collect entity and tool tip information...	WITHOUT_CLASSIFICATION	0.9999934427192883	WITHOUT_CLASSIFICATION	6.557280711692417E-6	DEFECT
// calculate bar width...	WITHOUT_CLASSIFICATION	0.9999898467814179	WITHOUT_CLASSIFICATION	1.0153218582114786E-5	DEFECT
// FIXME: add setBaseItemLabelGenerator(CategoryItemLabelGenerator, //            boolean) ?	WITHOUT_CLASSIFICATION	0.8817787205211034	WITHOUT_CLASSIFICATION	0.11822127947889671	DEFECT
//// ITEM LABEL PAINT  /////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999699800959138	WITHOUT_CLASSIFICATION	3.0019904086262118E-5	DEFECT
// last series, so we are ready to draw the min and max	WITHOUT_CLASSIFICATION	0.9999992210952391	WITHOUT_CLASSIFICATION	7.789047608081022E-7	DEFECT
// draw mean - SPECIAL AIMS REQUIREMENT...	WITHOUT_CLASSIFICATION	0.9999589968692318	WITHOUT_CLASSIFICATION	4.100313076805482E-5	DEFECT
// From outlier array sort out which are outliers and put these into a // list If there are any farouts, set the flag on the // OutlierListCollection	WITHOUT_CLASSIFICATION	0.9999993325417608	WITHOUT_CLASSIFICATION	6.67458239206993E-7	DEFECT
// avoid possible sun.dc.pr.PRException: endPath: bad path	WITHOUT_CLASSIFICATION	0.9999943262797835	WITHOUT_CLASSIFICATION	5.67372021650004E-6	DEFECT
// avoid possible sun.dc.pr.PRException: endPath: bad path	WITHOUT_CLASSIFICATION	0.9999943262797835	WITHOUT_CLASSIFICATION	5.67372021650004E-6	DEFECT
// Add the last point (x,0)	WITHOUT_CLASSIFICATION	0.9999995694723106	WITHOUT_CLASSIFICATION	4.305276893755126E-7	DEFECT
// Add the last point (x,0)	WITHOUT_CLASSIFICATION	0.9999995694723106	WITHOUT_CLASSIFICATION	4.305276893755126E-7	DEFECT
// check if initial polygon needs to be clipped	WITHOUT_CLASSIFICATION	0.999998928977482	WITHOUT_CLASSIFICATION	1.0710225179791212E-6	DEFECT
// never updated the subtrahend if it is implied to be zero	WITHOUT_CLASSIFICATION	0.9999999178456175	WITHOUT_CLASSIFICATION	8.215438255419476E-8	DEFECT
// check if line segments are colinear	WITHOUT_CLASSIFICATION	0.9999988233749738	WITHOUT_CLASSIFICATION	1.1766250262007837E-6	DEFECT
// clear the point vectors	WITHOUT_CLASSIFICATION	0.9999994091311634	WITHOUT_CLASSIFICATION	5.908688366560088E-7	DEFECT
//// ITEM LABELS VISIBLE //////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999493664523951	WITHOUT_CLASSIFICATION	5.0633547604792865E-5	DEFECT
// we don't need the sign	WITHOUT_CLASSIFICATION	0.999990847771306	WITHOUT_CLASSIFICATION	9.152228693918752E-6	DEFECT
// fillType == TO_UPPER_BOUND	WITHOUT_CLASSIFICATION	0.9997068867291482	WITHOUT_CLASSIFICATION	2.931132708517889E-4	DEFECT
/*      solve linear system with tridiagonal n by n matrix a        using Gaussian elimination *without* pivoting        where   a(i,i-1) = sub[i]  for 2<=i<=n        a(i,i)   = diag[i] for 1<=i<=n        a(i,i+1) = sup[i]  for 1<=i<=n-1        (the values sub[1], sup[n] are ignored)        right hand side vector b[1:n] is overwritten with solution        NOTE: 1...n is used in all arrays, 0 is unused */	WITHOUT_CLASSIFICATION	0.9999768041488789	WITHOUT_CLASSIFICATION	2.3195851121052923E-5	DEFECT
// this represents the situation // for drawing a horizontal bar.	WITHOUT_CLASSIFICATION	0.9999949631963428	WITHOUT_CLASSIFICATION	5.036803657112226E-6	DEFECT
// draw median	WITHOUT_CLASSIFICATION	0.9999953657739676	WITHOUT_CLASSIFICATION	4.634226032323962E-6	DEFECT
//  Check that the graph being served was created by the current user //  or that it begins with "public"	WITHOUT_CLASSIFICATION	0.9999999449157663	WITHOUT_CLASSIFICATION	5.508423378093126E-8	DEFECT
// the textAlignment and the horizontalAlignment are separate things, // but it makes sense for the default textAlignment to match the // title's horizontal alignment...	WITHOUT_CLASSIFICATION	0.9999998298897385	WITHOUT_CLASSIFICATION	1.7011026168119972E-7	DEFECT
// we don't use the calendar or numberFormat fields, but equals(Object) // is failing without them being non-null	WITHOUT_CLASSIFICATION	0.9983298414987227	WITHOUT_CLASSIFICATION	0.0016701585012772514	DEFECT
/**/	WITHOUT_CLASSIFICATION	0.9998846499945054	WITHOUT_CLASSIFICATION	1.1535000549452607E-4	DEFECT
/**/	WITHOUT_CLASSIFICATION	0.9998846499945054	WITHOUT_CLASSIFICATION	1.1535000549452607E-4	DEFECT
// adjust text bounds to match string position	WITHOUT_CLASSIFICATION	0.9999974476854723	WITHOUT_CLASSIFICATION	2.5523145277504402E-6	DEFECT
// now fetch the row data - need to bear in mind that the row // structure may not have an entry for the column key, but that we // have already checked that the key is valid for the 2D structure	WITHOUT_CLASSIFICATION	0.9999625688192987	WITHOUT_CLASSIFICATION	3.7431180701392246E-5	DEFECT
// defer null argument check	WITHOUT_CLASSIFICATION	0.9999940949289049	WITHOUT_CLASSIFICATION	5.905071094991613E-6	DEFECT
// defer null argument check	WITHOUT_CLASSIFICATION	0.9999940949289049	WITHOUT_CLASSIFICATION	5.905071094991613E-6	DEFECT
// set up the series names...	WITHOUT_CLASSIFICATION	0.9999990264876769	WITHOUT_CLASSIFICATION	9.735123230797503E-7	DEFECT
// is the category valid?	WITHOUT_CLASSIFICATION	0.99978952967862	WITHOUT_CLASSIFICATION	2.1047032138006333E-4	DEFECT
//create a temporary vector // set x to some arbitary value (used below)	WITHOUT_CLASSIFICATION	0.9999998358321658	WITHOUT_CLASSIFICATION	1.641678341104734E-7	DEFECT
// look for any keys that we don't already know about...	WITHOUT_CLASSIFICATION	0.9998395861444695	WITHOUT_CLASSIFICATION	1.6041385553054824E-4	DEFECT
//  Iterate and find all keys below threshold percentThreshold	WITHOUT_CLASSIFICATION	0.9999832049089368	WITHOUT_CLASSIFICATION	1.679509106316965E-5	DEFECT
// handle special case of BoxAndWhiskerDataset	WITHOUT_CLASSIFICATION	0.999998541154681	WITHOUT_CLASSIFICATION	1.4588453189402692E-6	DEFECT
// standard case - plain XYDataset	WITHOUT_CLASSIFICATION	0.999999462788893	WITHOUT_CLASSIFICATION	5.372111070052488E-7	DEFECT
// hasn't implemented RangeInfo, so we'll have to iterate...	WITHOUT_CLASSIFICATION	0.9999968297428927	WITHOUT_CLASSIFICATION	3.1702571072835027E-6	DEFECT
// hasn't implemented RangeInfo, so we'll have to iterate...	WITHOUT_CLASSIFICATION	0.9999968297428927	WITHOUT_CLASSIFICATION	3.1702571072835027E-6	DEFECT
// CASE 1 : Comparing to another Second object // -------------------------------------------	WITHOUT_CLASSIFICATION	0.9999733342946155	WITHOUT_CLASSIFICATION	2.666570538443438E-5	DEFECT
// CASE 2 : Comparing to another TimePeriod object // -----------------------------------------------	WITHOUT_CLASSIFICATION	0.9999522267106067	WITHOUT_CLASSIFICATION	4.77732893933248E-5	DEFECT
// CASE 2 : Comparing to another TimePeriod object // -----------------------------------------------	WITHOUT_CLASSIFICATION	0.9999522267106067	WITHOUT_CLASSIFICATION	4.77732893933248E-5	DEFECT
// CASE 2 : Comparing to another TimePeriod object // -----------------------------------------------	WITHOUT_CLASSIFICATION	0.9999522267106067	WITHOUT_CLASSIFICATION	4.77732893933248E-5	DEFECT
// CASE 2 : Comparing to another TimePeriod object // -----------------------------------------------	WITHOUT_CLASSIFICATION	0.9999522267106067	WITHOUT_CLASSIFICATION	4.77732893933248E-5	DEFECT
// remove old items if necessary, but // don't notify anyone, because that // happens next anyway...	WITHOUT_CLASSIFICATION	0.9999762005828514	WITHOUT_CLASSIFICATION	2.3799417148548187E-5	DEFECT
// get the current data item...	WITHOUT_CLASSIFICATION	0.9999990227415513	WITHOUT_CLASSIFICATION	9.772584487526093E-7	DEFECT
// get the current data item...	WITHOUT_CLASSIFICATION	0.9999990227415513	WITHOUT_CLASSIFICATION	9.772584487526093E-7	DEFECT
// The next 3 functions override the base-class implementation of // the DomainInfo interface.  Using saved limits (updated by // each updateTime() call), improves performance. //	WITHOUT_CLASSIFICATION	0.9999999605419224	WITHOUT_CLASSIFICATION	3.94580775436449E-8	DEFECT
// deregister the collection as a change listener to each series in the // collection	WITHOUT_CLASSIFICATION	0.9999983845055047	WITHOUT_CLASSIFICATION	1.6154944953870666E-6	DEFECT
// alternatively, sometimes the first few days of the year are // considered to fall in the *last* week of the previous year...	WITHOUT_CLASSIFICATION	0.999998780186441	WITHOUT_CLASSIFICATION	1.2198135590053453E-6	DEFECT
// Unregister the collection as a change listener to each series in // the collection.	WITHOUT_CLASSIFICATION	0.9999977403535081	WITHOUT_CLASSIFICATION	2.2596464919493415E-6	DEFECT
// if the series is sorted, the negative index is a result from // Collections.binarySearch() and tells us where to insert the // new item...otherwise it will be just -1 and we should just // append the value to the list...	WITHOUT_CLASSIFICATION	0.9999844487084726	WITHOUT_CLASSIFICATION	1.5551291527313582E-5	DEFECT
// pass mouse move event if some ChartMouseListener are listening	WITHOUT_CLASSIFICATION	0.9999968600199072	WITHOUT_CLASSIFICATION	3.139980092811014E-6	DEFECT
// row keys...	WITHOUT_CLASSIFICATION	0.9999958996012179	WITHOUT_CLASSIFICATION	4.10039878202011E-6	DEFECT
// row keys...	WITHOUT_CLASSIFICATION	0.9999958996012179	WITHOUT_CLASSIFICATION	4.10039878202011E-6	DEFECT
// row keys...	WITHOUT_CLASSIFICATION	0.9999958996012179	WITHOUT_CLASSIFICATION	4.10039878202011E-6	DEFECT
// chart title // domain axis label // range axis label // data // orientation // include legend // tooltips? // URLs?	WITHOUT_CLASSIFICATION	0.999995017805479	WITHOUT_CLASSIFICATION	4.982194521099239E-6	DEFECT
// the SWTGraphics2D class doesn't handle GradientPaint well, so // replace the gradient painter from the default theme with a // standard painter...	WITHOUT_CLASSIFICATION	0.9999999077563205	WITHOUT_CLASSIFICATION	9.224367943085013E-8	DEFECT
// Dispose of any fonts we have created	WITHOUT_CLASSIFICATION	0.9999980948028898	WITHOUT_CLASSIFICATION	1.9051971101427476E-6	DEFECT
// Create the new font and set it into the title // label	WITHOUT_CLASSIFICATION	0.9999999452079261	WITHOUT_CLASSIFICATION	5.4792073799618516E-8	DEFECT
// create the new color and set it to the // SwtPaintCanvas	WITHOUT_CLASSIFICATION	0.9999999859600929	WITHOUT_CLASSIFICATION	1.4039906995644483E-8	DEFECT
// row 2: outline color	WITHOUT_CLASSIFICATION	0.999989219520404	WITHOUT_CLASSIFICATION	1.0780479596002457E-5	DEFECT
// Use a SwtPaintCanvas to show the color, note that we must set the // heightHint.	WITHOUT_CLASSIFICATION	0.9999911016045382	WITHOUT_CLASSIFICATION	8.898395461841657E-6	DEFECT
// backgroundPaint	WITHOUT_CLASSIFICATION	0.9999993363842294	WITHOUT_CLASSIFICATION	6.636157705204189E-7	DEFECT
// backgroundPaint	WITHOUT_CLASSIFICATION	0.9999993363842294	WITHOUT_CLASSIFICATION	6.636157705204189E-7	DEFECT
// backgroundPaint	WITHOUT_CLASSIFICATION	0.9999993363842294	WITHOUT_CLASSIFICATION	6.636157705204189E-7	DEFECT
// now create a new title and replace the existing title, several // things should happen: // (1) Adding the new title should trigger an immediate //     ChartChangeEvent; // (2) Modifying the new title should trigger a ChartChangeEvent; // (3) Modifying the old title should NOT trigger a ChartChangeEvent	WITHOUT_CLASSIFICATION	0.9999916374874909	WITHOUT_CLASSIFICATION	8.362512509036001E-6	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999872438634059	WITHOUT_CLASSIFICATION	1.2756136594073208E-5	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999872438634059	WITHOUT_CLASSIFICATION	1.2756136594073208E-5	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999872438634059	WITHOUT_CLASSIFICATION	1.2756136594073208E-5	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999872438634059	WITHOUT_CLASSIFICATION	1.2756136594073208E-5	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999872438634059	WITHOUT_CLASSIFICATION	1.2756136594073208E-5	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999872438634059	WITHOUT_CLASSIFICATION	1.2756136594073208E-5	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999872438634059	WITHOUT_CLASSIFICATION	1.2756136594073208E-5	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999872438634059	WITHOUT_CLASSIFICATION	1.2756136594073208E-5	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999872438634059	WITHOUT_CLASSIFICATION	1.2756136594073208E-5	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999872438634059	WITHOUT_CLASSIFICATION	1.2756136594073208E-5	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999872438634059	WITHOUT_CLASSIFICATION	1.2756136594073208E-5	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999872438634059	WITHOUT_CLASSIFICATION	1.2756136594073208E-5	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999872438634059	WITHOUT_CLASSIFICATION	1.2756136594073208E-5	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999872438634059	WITHOUT_CLASSIFICATION	1.2756136594073208E-5	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999872438634059	WITHOUT_CLASSIFICATION	1.2756136594073208E-5	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999872438634059	WITHOUT_CLASSIFICATION	1.2756136594073208E-5	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999872438634059	WITHOUT_CLASSIFICATION	1.2756136594073208E-5	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999872438634059	WITHOUT_CLASSIFICATION	1.2756136594073208E-5	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999872438634059	WITHOUT_CLASSIFICATION	1.2756136594073208E-5	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999872438634059	WITHOUT_CLASSIFICATION	1.2756136594073208E-5	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999872438634059	WITHOUT_CLASSIFICATION	1.2756136594073208E-5	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999872438634059	WITHOUT_CLASSIFICATION	1.2756136594073208E-5	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999872438634059	WITHOUT_CLASSIFICATION	1.2756136594073208E-5	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999872438634059	WITHOUT_CLASSIFICATION	1.2756136594073208E-5	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999872438634059	WITHOUT_CLASSIFICATION	1.2756136594073208E-5	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999872438634059	WITHOUT_CLASSIFICATION	1.2756136594073208E-5	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999872438634059	WITHOUT_CLASSIFICATION	1.2756136594073208E-5	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999872438634059	WITHOUT_CLASSIFICATION	1.2756136594073208E-5	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.9999993838071033	WITHOUT_CLASSIFICATION	6.161928967699917E-7	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.9999993838071033	WITHOUT_CLASSIFICATION	6.161928967699917E-7	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.9999993838071033	WITHOUT_CLASSIFICATION	6.161928967699917E-7	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.9999993838071033	WITHOUT_CLASSIFICATION	6.161928967699917E-7	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.9999993838071033	WITHOUT_CLASSIFICATION	6.161928967699917E-7	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.9999993838071033	WITHOUT_CLASSIFICATION	6.161928967699917E-7	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.9999993838071033	WITHOUT_CLASSIFICATION	6.161928967699917E-7	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.9999993838071033	WITHOUT_CLASSIFICATION	6.161928967699917E-7	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.9999993838071033	WITHOUT_CLASSIFICATION	6.161928967699917E-7	DEFECT
// labelFont	WITHOUT_CLASSIFICATION	0.9999972706705306	WITHOUT_CLASSIFICATION	2.7293294693638328E-6	DEFECT
// fillPaint	WITHOUT_CLASSIFICATION	0.9999962262363506	WITHOUT_CLASSIFICATION	3.773763649248368E-6	DEFECT
// fillPaint	WITHOUT_CLASSIFICATION	0.9999962262363506	WITHOUT_CLASSIFICATION	3.773763649248368E-6	DEFECT
// fillPaint	WITHOUT_CLASSIFICATION	0.9999962262363506	WITHOUT_CLASSIFICATION	3.773763649248368E-6	DEFECT
// outlinePaint	WITHOUT_CLASSIFICATION	0.9999991235292298	WITHOUT_CLASSIFICATION	8.764707702539642E-7	DEFECT
// a null key should throw an IllegalArgumentException	WITHOUT_CLASSIFICATION	0.9998377009867433	WITHOUT_CLASSIFICATION	1.6229901325675328E-4	DEFECT
// a null key should throw an IllegalArgumentException	WITHOUT_CLASSIFICATION	0.9998377009867433	WITHOUT_CLASSIFICATION	1.6229901325675328E-4	DEFECT
//gridBandPaint	WITHOUT_CLASSIFICATION	0.9999864221227149	WITHOUT_CLASSIFICATION	1.3577877285078789E-5	DEFECT
//private double angle;	WITHOUT_CLASSIFICATION	0.9999728165423653	WITHOUT_CLASSIFICATION	2.7183457634717926E-5	DEFECT
//private double baseRadius;	WITHOUT_CLASSIFICATION	0.999995659585229	WITHOUT_CLASSIFICATION	4.340414771017992E-6	DEFECT
//private double arrowWidth;	WITHOUT_CLASSIFICATION	0.9999749198857787	WITHOUT_CLASSIFICATION	2.5080114221272957E-5	DEFECT
//private double labelOffset;	WITHOUT_CLASSIFICATION	0.9999931929427087	WITHOUT_CLASSIFICATION	6.807057291291268E-6	DEFECT
// font	WITHOUT_CLASSIFICATION	0.9999952431790771	WITHOUT_CLASSIFICATION	4.756820922919306E-6	DEFECT
// paint	WITHOUT_CLASSIFICATION	0.9999955860788465	WITHOUT_CLASSIFICATION	4.413921153470166E-6	DEFECT
// paint	WITHOUT_CLASSIFICATION	0.9999955860788465	WITHOUT_CLASSIFICATION	4.413921153470166E-6	DEFECT
// paint	WITHOUT_CLASSIFICATION	0.9999955860788465	WITHOUT_CLASSIFICATION	4.413921153470166E-6	DEFECT
// ok, exception is expected	WITHOUT_CLASSIFICATION	0.9999782448329847	WITHOUT_CLASSIFICATION	2.1755167015355313E-5	DEFECT
// stroke	WITHOUT_CLASSIFICATION	0.9999981374337199	WITHOUT_CLASSIFICATION	1.862566280029E-6	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9998503999155552	WITHOUT_CLASSIFICATION	1.4960008444476604E-4	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9998503999155552	WITHOUT_CLASSIFICATION	1.4960008444476604E-4	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9998503999155552	WITHOUT_CLASSIFICATION	1.4960008444476604E-4	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9998503999155552	WITHOUT_CLASSIFICATION	1.4960008444476604E-4	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9998503999155552	WITHOUT_CLASSIFICATION	1.4960008444476604E-4	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9998503999155552	WITHOUT_CLASSIFICATION	1.4960008444476604E-4	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9998503999155552	WITHOUT_CLASSIFICATION	1.4960008444476604E-4	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9998503999155552	WITHOUT_CLASSIFICATION	1.4960008444476604E-4	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9998503999155552	WITHOUT_CLASSIFICATION	1.4960008444476604E-4	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9998503999155552	WITHOUT_CLASSIFICATION	1.4960008444476604E-4	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9998503999155552	WITHOUT_CLASSIFICATION	1.4960008444476604E-4	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9998503999155552	WITHOUT_CLASSIFICATION	1.4960008444476604E-4	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9998503999155552	WITHOUT_CLASSIFICATION	1.4960008444476604E-4	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9998503999155552	WITHOUT_CLASSIFICATION	1.4960008444476604E-4	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9998503999155552	WITHOUT_CLASSIFICATION	1.4960008444476604E-4	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9998503999155552	WITHOUT_CLASSIFICATION	1.4960008444476604E-4	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9998503999155552	WITHOUT_CLASSIFICATION	1.4960008444476604E-4	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9998503999155552	WITHOUT_CLASSIFICATION	1.4960008444476604E-4	DEFECT
// dateFormatOverride	WITHOUT_CLASSIFICATION	0.9999047996242162	WITHOUT_CLASSIFICATION	9.520037578384525E-5	DEFECT
// range	WITHOUT_CLASSIFICATION	0.9999957055785421	WITHOUT_CLASSIFICATION	4.294421457948475E-6	DEFECT
// check that setting the max date to something on or before the // current min date works...	WITHOUT_CLASSIFICATION	0.9999883748271065	WITHOUT_CLASSIFICATION	1.1625172893620009E-5	DEFECT
// five dates to check...	WITHOUT_CLASSIFICATION	0.9999903172865104	WITHOUT_CLASSIFICATION	9.68271348957662E-6	DEFECT
// five dates to check...	WITHOUT_CLASSIFICATION	0.9999903172865104	WITHOUT_CLASSIFICATION	9.68271348957662E-6	DEFECT
// five dates to check...	WITHOUT_CLASSIFICATION	0.9999903172865104	WITHOUT_CLASSIFICATION	9.68271348957662E-6	DEFECT
// five dates to check...	WITHOUT_CLASSIFICATION	0.9999903172865104	WITHOUT_CLASSIFICATION	9.68271348957662E-6	DEFECT
// five dates to check...	WITHOUT_CLASSIFICATION	0.9999903172865104	WITHOUT_CLASSIFICATION	9.68271348957662E-6	DEFECT
// five dates to check...	WITHOUT_CLASSIFICATION	0.9999903172865104	WITHOUT_CLASSIFICATION	9.68271348957662E-6	DEFECT
// five dates to check...	WITHOUT_CLASSIFICATION	0.9999903172865104	WITHOUT_CLASSIFICATION	9.68271348957662E-6	DEFECT
// five dates to check...	WITHOUT_CLASSIFICATION	0.9999903172865104	WITHOUT_CLASSIFICATION	9.68271348957662E-6	DEFECT
// five dates to check...	WITHOUT_CLASSIFICATION	0.9999903172865104	WITHOUT_CLASSIFICATION	9.68271348957662E-6	DEFECT
// START: check d0 and d1	WITHOUT_CLASSIFICATION	0.9999588332680439	WITHOUT_CLASSIFICATION	4.116673195605328E-5	DEFECT
// START: check d0 and d1	WITHOUT_CLASSIFICATION	0.9999588332680439	WITHOUT_CLASSIFICATION	4.116673195605328E-5	DEFECT
// MIDDLE: check d1, d2 and d3	WITHOUT_CLASSIFICATION	0.9999400396554604	WITHOUT_CLASSIFICATION	5.996034453954632E-5	DEFECT
// MIDDLE: check d1, d2 and d3	WITHOUT_CLASSIFICATION	0.9999400396554604	WITHOUT_CLASSIFICATION	5.996034453954632E-5	DEFECT
// END: check d3 and d4	WITHOUT_CLASSIFICATION	0.9998821547533429	WITHOUT_CLASSIFICATION	1.17845246657229E-4	DEFECT
// END: check d3 and d4	WITHOUT_CLASSIFICATION	0.9998821547533429	WITHOUT_CLASSIFICATION	1.17845246657229E-4	DEFECT
//private boolean autoRangeStickyZero;	WITHOUT_CLASSIFICATION	0.9999864564127856	WITHOUT_CLASSIFICATION	1.3543587214302129E-5	DEFECT
// now replacing the dataset should update the axis range...	WITHOUT_CLASSIFICATION	0.9999990124646713	WITHOUT_CLASSIFICATION	9.875353287569744E-7	DEFECT
// now replacing the dataset should update the axis range...	WITHOUT_CLASSIFICATION	0.9999990124646713	WITHOUT_CLASSIFICATION	9.875353287569744E-7	DEFECT
// set axis bounds to be both greater than 1	WITHOUT_CLASSIFICATION	0.9999978462697402	WITHOUT_CLASSIFICATION	2.1537302598336375E-6	DEFECT
// check for bounds interval that includes 1	WITHOUT_CLASSIFICATION	0.9999994185038311	WITHOUT_CLASSIFICATION	5.814961687771504E-7	DEFECT
// check for bounds interval that includes 1	WITHOUT_CLASSIFICATION	0.9999994185038311	WITHOUT_CLASSIFICATION	5.814961687771504E-7	DEFECT
// tickLabelFont	WITHOUT_CLASSIFICATION	0.9999987239669956	WITHOUT_CLASSIFICATION	1.2760330044346361E-6	DEFECT
// advance line Paint	WITHOUT_CLASSIFICATION	0.9999909869017197	WITHOUT_CLASSIFICATION	9.013098280313932E-6	DEFECT
// Add exception in included segments	WITHOUT_CLASSIFICATION	0.9999970872838265	WITHOUT_CLASSIFICATION	2.912716173604125E-6	DEFECT
// Saturday and Sundays are non business hours	WITHOUT_CLASSIFICATION	0.9999916123603004	WITHOUT_CLASSIFICATION	8.387639699589488E-6	DEFECT
/** These constants control test cycles in the validateXXXX methods. */	WITHOUT_CLASSIFICATION	0.9998868347861496	WITHOUT_CLASSIFICATION	1.1316521385049596E-4	DEFECT
/** These constants control test cycles in the validateXXXX methods. */	WITHOUT_CLASSIFICATION	0.9998868347861496	WITHOUT_CLASSIFICATION	1.1316521385049596E-4	DEFECT
// 1-ms test timeline using 5 included and 2 excluded segments. // // timeline start time = 0 //   | //   v //   0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 .. // +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+.. // |  |  |  |  |  |EE|EE|  |  |  |  |  |EE|EE|  |  |  |  |  |  |EE|EE|    <-- msTimeline // +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+.. //  \_________  ________/            \_/ //            \/                      | //       segment group         segment size = 1 ms //	WITHOUT_CLASSIFICATION	0.9999999839976086	WITHOUT_CLASSIFICATION	1.6002391458874132E-8	DEFECT
// 1-ms test timeline (with a baseTimeline) using 2 included and 2 // excluded segments centered inside each base segment // // The ms2Timeline without a base would look like this: // //    timeline start time = 1 //      | //      v //   0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 ... // +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+... // |EE|  |  |EE|EE|  |  |EE|EE|  |  |EE|EE|  |  |EE|EE|  |  |EE|    <-- ms2Timeline // +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+... //    \____  _____/            \_/ //         \/                   | //    segment group      segment size = 1 ms // // With the base timeline some originally included segments are now // removed (see "xx" below): // //   0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 ... // +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+... // |EE|  |  |EE|EE|xx|xx|EE|EE|  |  |EE|EE|xx|xx|EE|EE|  |  |EE|    <-- ms2Timeline // +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+... // |  |  |  |  |EE|EE|EE|EE|  |  |  |  |EE|EE|EE|EE|  |  |  |  |    <-- ms2BaseTimeline // +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+... //	WITHOUT_CLASSIFICATION	0.9999998663986818	WITHOUT_CLASSIFICATION	1.3360131828120061E-7	DEFECT
// test monday though friday timeline	WITHOUT_CLASSIFICATION	0.9999969339932478	WITHOUT_CLASSIFICATION	3.066006752233996E-6	DEFECT
// find first Monday after 2001-01-01	WITHOUT_CLASSIFICATION	0.9999989376651819	WITHOUT_CLASSIFICATION	1.0623348180662097E-6	DEFECT
////////////////////////////////////////////////////////////////////////// // test construction process //////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999992995938677	WITHOUT_CLASSIFICATION	7.00406132417853E-7	DEFECT
// verify attributes set during object construction	WITHOUT_CLASSIFICATION	0.9999953153951361	WITHOUT_CLASSIFICATION	4.684604863917103E-6	DEFECT
////////////////////////////////////////////////////////////////////////// // main include and excluded segments //////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999991437417085	WITHOUT_CLASSIFICATION	8.562582915526328E-7	DEFECT
////////////////////////////////////////////////////////////////////////// // test timeline translations //////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.999998526708274	WITHOUT_CLASSIFICATION	1.4732917259019091E-6	DEFECT
// verify all timeline segments included in the // baseTimeline.segment are now exceptions	WITHOUT_CLASSIFICATION	0.9999955035862308	WITHOUT_CLASSIFICATION	4.4964137691884124E-6	DEFECT
// 1-Jan-2000	WITHOUT_CLASSIFICATION	0.9999947969383159	WITHOUT_CLASSIFICATION	5.203061684013911E-6	DEFECT
// tick label insets...	WITHOUT_CLASSIFICATION	0.9999947628533492	WITHOUT_CLASSIFICATION	5.237146650760915E-6	DEFECT
// tick mark paint...	WITHOUT_CLASSIFICATION	0.9999924688863441	WITHOUT_CLASSIFICATION	7.531113655957789E-6	DEFECT
// negativeArrowVisible;	WITHOUT_CLASSIFICATION	0.9999931391162608	WITHOUT_CLASSIFICATION	6.860883739221175E-6	DEFECT
// axisLinePaint	WITHOUT_CLASSIFICATION	0.9999973486584914	WITHOUT_CLASSIFICATION	2.651341508501466E-6	DEFECT
// autoRange	WITHOUT_CLASSIFICATION	0.999995389732946	WITHOUT_CLASSIFICATION	4.610267053933593E-6	DEFECT
// autoRangeMinimumSize	WITHOUT_CLASSIFICATION	0.9999751501931401	WITHOUT_CLASSIFICATION	2.4849806859861112E-5	DEFECT
//private double fixedAutoRange;	WITHOUT_CLASSIFICATION	0.9999644278528917	WITHOUT_CLASSIFICATION	3.557214710822952E-5	DEFECT
//private boolean autoTickUnitSelection;	WITHOUT_CLASSIFICATION	0.9999900173458006	WITHOUT_CLASSIFICATION	9.982654199510272E-6	DEFECT
//private int autoTickIndex; //protected double reservedForTickLabels; //protected double reservedForAxisLabel;	WITHOUT_CLASSIFICATION	0.99999014270269	WITHOUT_CLASSIFICATION	9.85729730990407E-6	DEFECT
// TBLRC // 00001 - center item only	WITHOUT_CLASSIFICATION	0.9999980359093181	WITHOUT_CLASSIFICATION	1.964090681753462E-6	DEFECT
// TBLRC // 00001 - center item only	WITHOUT_CLASSIFICATION	0.9999980359093181	WITHOUT_CLASSIFICATION	1.964090681753462E-6	DEFECT
// TBLRC // 00100 - left item only	WITHOUT_CLASSIFICATION	0.9999905542487348	WITHOUT_CLASSIFICATION	9.44575126512811E-6	DEFECT
// TBLRC // 10101 - top, left and center	WITHOUT_CLASSIFICATION	0.9999994291621843	WITHOUT_CLASSIFICATION	5.708378157118589E-7	DEFECT
// TBLRC // 10110 - top, left and right	WITHOUT_CLASSIFICATION	0.9999983498165835	WITHOUT_CLASSIFICATION	1.6501834163839218E-6	DEFECT
// TBLRC // 11000 - top and bottom only	WITHOUT_CLASSIFICATION	0.9999955791152293	WITHOUT_CLASSIFICATION	4.4208847707179035E-6	DEFECT
// TBLRC // 11011	WITHOUT_CLASSIFICATION	0.9999775934833783	WITHOUT_CLASSIFICATION	2.2406516621706662E-5	DEFECT
// TBLRC // 11111 - all	WITHOUT_CLASSIFICATION	0.9999490231364807	WITHOUT_CLASSIFICATION	5.097686351928249E-5	DEFECT
// standard test	WITHOUT_CLASSIFICATION	0.9999993931566677	WITHOUT_CLASSIFICATION	6.068433322299867E-7	DEFECT
// Y format	WITHOUT_CLASSIFICATION	0.999989488554901	WITHOUT_CLASSIFICATION	1.0511445099055091E-5	DEFECT
// some setup...	WITHOUT_CLASSIFICATION	0.9999972173014601	WITHOUT_CLASSIFICATION	2.7826985399407143E-6	DEFECT
// some setup...	WITHOUT_CLASSIFICATION	0.9999972173014601	WITHOUT_CLASSIFICATION	2.7826985399407143E-6	DEFECT
// parent plot...	WITHOUT_CLASSIFICATION	0.9999989995763021	WITHOUT_CLASSIFICATION	1.000423697909548E-6	DEFECT
// innerSeparatorExtension	WITHOUT_CLASSIFICATION	0.9998811243801966	WITHOUT_CLASSIFICATION	1.1887561980336303E-4	DEFECT
// domainAxis - no longer a separate field but test anyway...	WITHOUT_CLASSIFICATION	0.9999965659492875	WITHOUT_CLASSIFICATION	3.4340507124009856E-6	DEFECT
// rangeAxis - no longer a separate field but test anyway...	WITHOUT_CLASSIFICATION	0.9999981347601631	WITHOUT_CLASSIFICATION	1.8652398370141015E-6	DEFECT
// renderer - no longer a separate field but test anyway...	WITHOUT_CLASSIFICATION	0.999999313060187	WITHOUT_CLASSIFICATION	6.869398129678542E-7	DEFECT
// domainGridlinesVisible	WITHOUT_CLASSIFICATION	0.9999923356522353	WITHOUT_CLASSIFICATION	7.664347764705969E-6	DEFECT
// domainGridlinePosition	WITHOUT_CLASSIFICATION	0.9999955212795151	WITHOUT_CLASSIFICATION	4.47872048501094E-6	DEFECT
// rangeGridlinePaint	WITHOUT_CLASSIFICATION	0.9999975058510933	WITHOUT_CLASSIFICATION	2.4941489066653263E-6	DEFECT
// anchorValue	WITHOUT_CLASSIFICATION	0.9999944554116504	WITHOUT_CLASSIFICATION	5.54458834957839E-6	DEFECT
// rangeCrosshairPaint	WITHOUT_CLASSIFICATION	0.999997682217841	WITHOUT_CLASSIFICATION	2.3177821590083723E-6	DEFECT
// rangeCrosshairPaint	WITHOUT_CLASSIFICATION	0.999997682217841	WITHOUT_CLASSIFICATION	2.3177821590083723E-6	DEFECT
// range markers - no longer separate fields but test anyway...	WITHOUT_CLASSIFICATION	0.9999934370292717	WITHOUT_CLASSIFICATION	6.562970728240056E-6	DEFECT
// fixed legend items	WITHOUT_CLASSIFICATION	0.999978169105806	WITHOUT_CLASSIFICATION	2.1830894194004926E-5	DEFECT
// domainCrosshairPaint	WITHOUT_CLASSIFICATION	0.9999961990447028	WITHOUT_CLASSIFICATION	3.800955297236159E-6	DEFECT
// check for independence	WITHOUT_CLASSIFICATION	0.9999946031376233	WITHOUT_CLASSIFICATION	5.396862376542009E-6	DEFECT
// check for independence	WITHOUT_CLASSIFICATION	0.9999946031376233	WITHOUT_CLASSIFICATION	5.396862376542009E-6	DEFECT
// now check that the chart is usable...	WITHOUT_CLASSIFICATION	0.9999993614581204	WITHOUT_CLASSIFICATION	6.385418795364156E-7	DEFECT
// now check that the chart is usable...	WITHOUT_CLASSIFICATION	0.9999993614581204	WITHOUT_CLASSIFICATION	6.385418795364156E-7	DEFECT
// now make a change to the renderer and see if it triggers a plot // change event...	WITHOUT_CLASSIFICATION	0.999999967032533	WITHOUT_CLASSIFICATION	3.2967466983681235E-8	DEFECT
// should get IllegalArgumentException for negative index	WITHOUT_CLASSIFICATION	0.9999843005365956	WITHOUT_CLASSIFICATION	1.5699463404383944E-5	DEFECT
// if multiple axes are mapped, the first in the list should be // returned...	WITHOUT_CLASSIFICATION	0.9999804750164292	WITHOUT_CLASSIFICATION	1.9524983570856663E-5	DEFECT
// if multiple axes are mapped, the first in the list should be // returned...	WITHOUT_CLASSIFICATION	0.9999804750164292	WITHOUT_CLASSIFICATION	1.9524983570856663E-5	DEFECT
// add a second dataset	WITHOUT_CLASSIFICATION	0.9999988660951477	WITHOUT_CLASSIFICATION	1.1339048524362777E-6	DEFECT
// units	WITHOUT_CLASSIFICATION	0.9999979384355981	WITHOUT_CLASSIFICATION	2.0615644019370952E-6	DEFECT
// tick labels visible	WITHOUT_CLASSIFICATION	0.999994380072852	WITHOUT_CLASSIFICATION	5.619927147998981E-6	DEFECT
// tick size	WITHOUT_CLASSIFICATION	0.999997432883807	WITHOUT_CLASSIFICATION	2.567116192940069E-6	DEFECT
// the clone and the original share a reference to the SAME dataset	WITHOUT_CLASSIFICATION	0.9999998882427883	WITHOUT_CLASSIFICATION	1.1175721170838063E-7	DEFECT
// check null argument...	WITHOUT_CLASSIFICATION	0.9999962540624275	WITHOUT_CLASSIFICATION	3.745937572304011E-6	DEFECT
// check null argument...	WITHOUT_CLASSIFICATION	0.9999962540624275	WITHOUT_CLASSIFICATION	3.745937572304011E-6	DEFECT
// check null argument...	WITHOUT_CLASSIFICATION	0.9999962540624275	WITHOUT_CLASSIFICATION	3.745937572304011E-6	DEFECT
// check null argument...	WITHOUT_CLASSIFICATION	0.9999962540624275	WITHOUT_CLASSIFICATION	3.745937572304011E-6	DEFECT
// check null argument...	WITHOUT_CLASSIFICATION	0.9999962540624275	WITHOUT_CLASSIFICATION	3.745937572304011E-6	DEFECT
// check null argument...	WITHOUT_CLASSIFICATION	0.9999962540624275	WITHOUT_CLASSIFICATION	3.745937572304011E-6	DEFECT
// check null argument...	WITHOUT_CLASSIFICATION	0.9999962540624275	WITHOUT_CLASSIFICATION	3.745937572304011E-6	DEFECT
// check null argument...	WITHOUT_CLASSIFICATION	0.9999962540624275	WITHOUT_CLASSIFICATION	3.745937572304011E-6	DEFECT
// check null argument...	WITHOUT_CLASSIFICATION	0.9999962540624275	WITHOUT_CLASSIFICATION	3.745937572304011E-6	DEFECT
// check null argument...	WITHOUT_CLASSIFICATION	0.9999962540624275	WITHOUT_CLASSIFICATION	3.745937572304011E-6	DEFECT
// check null argument...	WITHOUT_CLASSIFICATION	0.9999962540624275	WITHOUT_CLASSIFICATION	3.745937572304011E-6	DEFECT
// labelType...	WITHOUT_CLASSIFICATION	0.9999945991382133	WITHOUT_CLASSIFICATION	5.400861786762894E-6	DEFECT
// pieIndex...	WITHOUT_CLASSIFICATION	0.9999916785656531	WITHOUT_CLASSIFICATION	8.321434346873811E-6	DEFECT
// ignoreZeroValues	WITHOUT_CLASSIFICATION	0.9999974395761462	WITHOUT_CLASSIFICATION	2.5604238537478497E-6	DEFECT
// sectionOutlinesVisible	WITHOUT_CLASSIFICATION	0.9999951081991645	WITHOUT_CLASSIFICATION	4.891800835503136E-6	DEFECT
// sectionOutlineStroke	WITHOUT_CLASSIFICATION	0.9999970003524011	WITHOUT_CLASSIFICATION	2.999647598727407E-6	DEFECT
// labelBackgroundPaint	WITHOUT_CLASSIFICATION	0.9999989473017945	WITHOUT_CLASSIFICATION	1.0526982055063644E-6	DEFECT
// labelGenerator	WITHOUT_CLASSIFICATION	0.9999973653851988	WITHOUT_CLASSIFICATION	2.6346148010753033E-6	DEFECT
// we use ValueMarker for the tests, because we need a concrete // subclass...	WITHOUT_CLASSIFICATION	0.9999999221885507	WITHOUT_CLASSIFICATION	7.781144929601277E-8	DEFECT
// we use ValueMarker for the tests, because we need a concrete // subclass...	WITHOUT_CLASSIFICATION	0.9999999221885507	WITHOUT_CLASSIFICATION	7.781144929601277E-8	DEFECT
// we use ValueMarker for the tests, because we need a concrete // subclass...	WITHOUT_CLASSIFICATION	0.9999999221885507	WITHOUT_CLASSIFICATION	7.781144929601277E-8	DEFECT
// we use ValueMarker for the tests, because we need a concrete // subclass...	WITHOUT_CLASSIFICATION	0.9999999221885507	WITHOUT_CLASSIFICATION	7.781144929601277E-8	DEFECT
// we use ValueMarker for the tests, because we need a concrete // subclass...	WITHOUT_CLASSIFICATION	0.9999999221885507	WITHOUT_CLASSIFICATION	7.781144929601277E-8	DEFECT
// we use ValueMarker for the tests, because we need a concrete // subclass...	WITHOUT_CLASSIFICATION	0.9999999221885507	WITHOUT_CLASSIFICATION	7.781144929601277E-8	DEFECT
// we use ValueMarker for the tests, because we need a concrete // subclass...	WITHOUT_CLASSIFICATION	0.9999999221885507	WITHOUT_CLASSIFICATION	7.781144929601277E-8	DEFECT
// we use ValueMarker for the tests, because we need a concrete // subclass...	WITHOUT_CLASSIFICATION	0.9999999221885507	WITHOUT_CLASSIFICATION	7.781144929601277E-8	DEFECT
// we use ValueMarker for the tests, because we need a concrete // subclass...	WITHOUT_CLASSIFICATION	0.9999999221885507	WITHOUT_CLASSIFICATION	7.781144929601277E-8	DEFECT
// we use ValueMarker for the tests, because we need a concrete // subclass...	WITHOUT_CLASSIFICATION	0.9999999221885507	WITHOUT_CLASSIFICATION	7.781144929601277E-8	DEFECT
// verify independence of fixed legend item collection	WITHOUT_CLASSIFICATION	0.9999806875517733	WITHOUT_CLASSIFICATION	1.9312448226734297E-5	DEFECT
// stroke sequence	WITHOUT_CLASSIFICATION	0.9999991034951556	WITHOUT_CLASSIFICATION	8.965048442790279E-7	DEFECT
// stroke index	WITHOUT_CLASSIFICATION	0.9999947445805626	WITHOUT_CLASSIFICATION	5.2554194373806225E-6	DEFECT
// check an inherited attribute	WITHOUT_CLASSIFICATION	0.9999899264696192	WITHOUT_CLASSIFICATION	1.0073530380783632E-5	DEFECT
// check an inherited attribute	WITHOUT_CLASSIFICATION	0.9999899264696192	WITHOUT_CLASSIFICATION	1.0073530380783632E-5	DEFECT
// check an inherited attribute	WITHOUT_CLASSIFICATION	0.9999899264696192	WITHOUT_CLASSIFICATION	1.0073530380783632E-5	DEFECT
// check an inherited attribute	WITHOUT_CLASSIFICATION	0.9999899264696192	WITHOUT_CLASSIFICATION	1.0073530380783632E-5	DEFECT
// check an inherited attribute	WITHOUT_CLASSIFICATION	0.9999899264696192	WITHOUT_CLASSIFICATION	1.0073530380783632E-5	DEFECT
// check an inherited attribute	WITHOUT_CLASSIFICATION	0.9999899264696192	WITHOUT_CLASSIFICATION	1.0073530380783632E-5	DEFECT
// check an inherited attribute	WITHOUT_CLASSIFICATION	0.9999899264696192	WITHOUT_CLASSIFICATION	1.0073530380783632E-5	DEFECT
// check that the listener lists are independent	WITHOUT_CLASSIFICATION	0.9999975042388828	WITHOUT_CLASSIFICATION	2.4957611171415987E-6	DEFECT
// check that the listener lists are independent	WITHOUT_CLASSIFICATION	0.9999975042388828	WITHOUT_CLASSIFICATION	2.4957611171415987E-6	DEFECT
// check that the listener lists are independent	WITHOUT_CLASSIFICATION	0.9999975042388828	WITHOUT_CLASSIFICATION	2.4957611171415987E-6	DEFECT
// check that the listener lists are independent	WITHOUT_CLASSIFICATION	0.9999975042388828	WITHOUT_CLASSIFICATION	2.4957611171415987E-6	DEFECT
// check that the listener lists are independent	WITHOUT_CLASSIFICATION	0.9999975042388828	WITHOUT_CLASSIFICATION	2.4957611171415987E-6	DEFECT
// minorTickCount	WITHOUT_CLASSIFICATION	0.9999949432376483	WITHOUT_CLASSIFICATION	5.0567623517456515E-6	DEFECT
// try a default instance	WITHOUT_CLASSIFICATION	0.9999941516923437	WITHOUT_CLASSIFICATION	5.848307656205504E-6	DEFECT
// try a customised instance	WITHOUT_CLASSIFICATION	0.999991398726249	WITHOUT_CLASSIFICATION	8.601273751057778E-6	DEFECT
// seriesVisibleInLegend	WITHOUT_CLASSIFICATION	0.9999976907198866	WITHOUT_CLASSIFICATION	2.309280113326107E-6	DEFECT
//upper bound and margin OK; get log10 of upper bound	WITHOUT_CLASSIFICATION	0.9999947998651944	WITHOUT_CLASSIFICATION	5.200134805655908E-6	DEFECT
// fillPaintList	WITHOUT_CLASSIFICATION	0.9999980034370531	WITHOUT_CLASSIFICATION	1.9965629467574644E-6	DEFECT
//apply upper margin by increasing upper bound:	WITHOUT_CLASSIFICATION	0.9999917232150319	WITHOUT_CLASSIFICATION	8.276784968069352E-6	DEFECT
// baseStroke	WITHOUT_CLASSIFICATION	0.9999979628472508	WITHOUT_CLASSIFICATION	2.037152749189973E-6	DEFECT
// Reference: http://www.antigrain.com/research/bezier_interpolation/	WITHOUT_CLASSIFICATION	0.9999995159280838	WITHOUT_CLASSIFICATION	4.840719162279524E-7	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999980014263546	WITHOUT_CLASSIFICATION	1.998573645409622E-6	DEFECT
// initialize ChartPanel-specific tool tip delays with // values the from ToolTipManager.sharedInstance()	WITHOUT_CLASSIFICATION	0.9999993214470294	WITHOUT_CLASSIFICATION	6.785529706452793E-7	DEFECT
// only draw if we have good values	WITHOUT_CLASSIFICATION	0.9999969930221796	WITHOUT_CLASSIFICATION	3.0069778204952316E-6	DEFECT
// properties // save // print // zoom // tooltips	WITHOUT_CLASSIFICATION	0.9999985586269791	WITHOUT_CLASSIFICATION	1.4413730208570405E-6	DEFECT
// properties // save // print // zoom // tooltips	WITHOUT_CLASSIFICATION	0.9999985586269791	WITHOUT_CLASSIFICATION	1.4413730208570405E-6	DEFECT
// stop listening for changes to the existing chart	WITHOUT_CLASSIFICATION	0.9999999124952944	WITHOUT_CLASSIFICATION	8.750470556123993E-8	DEFECT
// set up popup menu...	WITHOUT_CLASSIFICATION	0.9999977950701324	WITHOUT_CLASSIFICATION	2.2049298676190196E-6	DEFECT
// itemLabelsVisible	WITHOUT_CLASSIFICATION	0.9999956420445073	WITHOUT_CLASSIFICATION	4.357955492744844E-6	DEFECT
// make the background of the buffer clear and transparent	WITHOUT_CLASSIFICATION	0.9999997077308401	WITHOUT_CLASSIFICATION	2.9226915987273826E-7	DEFECT
// for MacOSX we can't use the CTRL key for mouse drags, see: // http://developer.apple.com/qa/qa2004/qa1362.html	WITHOUT_CLASSIFICATION	0.999954715366557	WITHOUT_CLASSIFICATION	4.5284633443005916E-5	DEFECT
// add the new chart	WITHOUT_CLASSIFICATION	0.9999995372458562	WITHOUT_CLASSIFICATION	4.627541438154095E-7	DEFECT
// work out if scaling is required...	WITHOUT_CLASSIFICATION	0.9999973149739653	WITHOUT_CLASSIFICATION	2.685026034721071E-6	DEFECT
// first determine the size of the chart rendering area...	WITHOUT_CLASSIFICATION	0.9999997051755467	WITHOUT_CLASSIFICATION	2.948244532873571E-7	DEFECT
// do we need to resize the buffer?	WITHOUT_CLASSIFICATION	0.999975738279439	WITHOUT_CLASSIFICATION	2.4261720561138338E-5	DEFECT
// are we using the chart buffer?	WITHOUT_CLASSIFICATION	0.9999852234232351	WITHOUT_CLASSIFICATION	1.477657676483124E-5	DEFECT
// clear the flag	WITHOUT_CLASSIFICATION	0.9999994525851684	WITHOUT_CLASSIFICATION	5.474148315885326E-7	DEFECT
// do we need to redraw the buffer?	WITHOUT_CLASSIFICATION	0.9999677013023743	WITHOUT_CLASSIFICATION	3.2298697625623544E-5	DEFECT
// redraw the zoom rectangle (if present) - if useBuffer is false, // we use XOR so we can XOR the rectangle away again without redrawing // the chart	WITHOUT_CLASSIFICATION	0.9999982134083272	WITHOUT_CLASSIFICATION	1.7865916728727032E-6	DEFECT
// redrawing the chart every time...	WITHOUT_CLASSIFICATION	0.9999990934011573	WITHOUT_CLASSIFICATION	9.065988426918085E-7	DEFECT
// zap the buffer onto the panel...	WITHOUT_CLASSIFICATION	0.9999991058448576	WITHOUT_CLASSIFICATION	8.941551424326796E-7	DEFECT
// does nothing - override if necessary	WITHOUT_CLASSIFICATION	0.9999909672478351	WITHOUT_CLASSIFICATION	9.032752164848119E-6	DEFECT
// many of the zoom methods need a screen location - all we have is // the zoomPoint, but it might be null.  Here we grab the x and y // coordinates, or use defaults...	WITHOUT_CLASSIFICATION	0.9999918783855453	WITHOUT_CLASSIFICATION	8.121614454639798E-6	DEFECT
// itemLabelFontList	WITHOUT_CLASSIFICATION	0.9999973766754143	WITHOUT_CLASSIFICATION	2.6233245856260413E-6	DEFECT
// restore original tooltip dealys	WITHOUT_CLASSIFICATION	0.9999997424353744	WITHOUT_CLASSIFICATION	2.5756462558195317E-7	DEFECT
// can we pan this plot?	WITHOUT_CLASSIFICATION	0.9995915872013286	WITHOUT_CLASSIFICATION	4.084127986714583E-4	DEFECT
// the actual panning occurs later in the mouseDragged()  // method	WITHOUT_CLASSIFICATION	0.9998736351435068	WITHOUT_CLASSIFICATION	1.2636485649314806E-4	DEFECT
// if the popup menu has already been triggered, then ignore dragging...	WITHOUT_CLASSIFICATION	0.9999979938998833	WITHOUT_CLASSIFICATION	2.0061001167568694E-6	DEFECT
// handle panning if we have a start point	WITHOUT_CLASSIFICATION	0.9999981058826384	WITHOUT_CLASSIFICATION	1.8941173615992826E-6	DEFECT
// if no initial zoom point was set, ignore dragging...	WITHOUT_CLASSIFICATION	0.9999999390960553	WITHOUT_CLASSIFICATION	6.090394469824402E-8	DEFECT
// erase the previous zoom rectangle (if any).  We only need to do // this is we are using XOR mode, which we do when we're not using // the buffer (if there is a buffer, then at the end of this method we // just trigger a repaint)	WITHOUT_CLASSIFICATION	0.9999976440301457	WITHOUT_CLASSIFICATION	2.355969854353884E-6	DEFECT
// selected rectangle shouldn't extend outside the data area...	WITHOUT_CLASSIFICATION	0.9999995716676898	WITHOUT_CLASSIFICATION	4.2833231019245985E-7	DEFECT
// Draw the new zoom rectangle...	WITHOUT_CLASSIFICATION	0.9999965193729987	WITHOUT_CLASSIFICATION	3.480627001279635E-6	DEFECT
// with no buffer, we use XOR to draw the rectangle "over" the // chart...	WITHOUT_CLASSIFICATION	0.9999997447644738	WITHOUT_CLASSIFICATION	2.552355261623165E-7	DEFECT
// if we've been panning, we need to reset now that the mouse is  // released...	WITHOUT_CLASSIFICATION	0.9999988387699902	WITHOUT_CLASSIFICATION	1.1612300097850256E-6	DEFECT
// for mouseReleased event, (horizontalZoom || verticalZoom) // will be true, so we can just test for either being false; // otherwise both are true	WITHOUT_CLASSIFICATION	0.9999956510896204	WITHOUT_CLASSIFICATION	4.348910379564981E-6	DEFECT
// erase the zoom rectangle	WITHOUT_CLASSIFICATION	0.9999983913437359	WITHOUT_CLASSIFICATION	1.608656264038931E-6	DEFECT
// force a redraw // new entity code...	WITHOUT_CLASSIFICATION	0.999999116868572	WITHOUT_CLASSIFICATION	8.831314279601811E-7	DEFECT
// we need to guard against this.zoomPoint being null	WITHOUT_CLASSIFICATION	0.9999883313022561	WITHOUT_CLASSIFICATION	1.1668697743880825E-5	DEFECT
// we need to guard against this.zoomPoint being null	WITHOUT_CLASSIFICATION	0.9999883313022561	WITHOUT_CLASSIFICATION	1.1668697743880825E-5	DEFECT
// Set XOR mode to draw the zoom rectangle	WITHOUT_CLASSIFICATION	0.9999963482775873	WITHOUT_CLASSIFICATION	3.651722412652303E-6	DEFECT
// null will be returned	WITHOUT_CLASSIFICATION	0.9999387221550796	WITHOUT_CLASSIFICATION	6.127784492033948E-5	DEFECT
// get the origin of the zoom selection in the Java2D space used for // drawing the chart (that is, before any scaling to fit the panel)	WITHOUT_CLASSIFICATION	0.9999999974373344	WITHOUT_CLASSIFICATION	2.562665679470047E-9	DEFECT
// get the origin of the zoom selection in the Java2D space used for // drawing the chart (that is, before any scaling to fit the panel)	WITHOUT_CLASSIFICATION	0.9999999974373344	WITHOUT_CLASSIFICATION	2.562665679470047E-9	DEFECT
// use reflection to get the SVG string	WITHOUT_CLASSIFICATION	0.999999843276168	WITHOUT_CLASSIFICATION	1.5672383195844564E-7	DEFECT
// Reset to the default 'overwrite' mode	WITHOUT_CLASSIFICATION	0.9999999474932567	WITHOUT_CLASSIFICATION	5.250674332380401E-8	DEFECT
// Reset to the default 'overwrite' mode	WITHOUT_CLASSIFICATION	0.9999999474932567	WITHOUT_CLASSIFICATION	5.250674332380401E-8	DEFECT
// Reset to the default 'overwrite' mode	WITHOUT_CLASSIFICATION	0.9999999474932567	WITHOUT_CLASSIFICATION	5.250674332380401E-8	DEFECT
// null will be returned	WITHOUT_CLASSIFICATION	0.9999387221550796	WITHOUT_CLASSIFICATION	6.127784492033948E-5	DEFECT
// we suppress shadow generation, because SVG is a vector format and // the shadow effect is applied via bitmap effects...	WITHOUT_CLASSIFICATION	0.9999911453392671	WITHOUT_CLASSIFICATION	8.854660732959031E-6	DEFECT
// pdfDocument class will be null so the function will return false	WITHOUT_CLASSIFICATION	0.9999954313301421	WITHOUT_CLASSIFICATION	4.568669857883558E-6	DEFECT
// null will be returned	WITHOUT_CLASSIFICATION	0.9999387221550796	WITHOUT_CLASSIFICATION	6.127784492033948E-5	DEFECT
// null will be returned	WITHOUT_CLASSIFICATION	0.9999387221550796	WITHOUT_CLASSIFICATION	6.127784492033948E-5	DEFECT
// null will be returned	WITHOUT_CLASSIFICATION	0.9999387221550796	WITHOUT_CLASSIFICATION	6.127784492033948E-5	DEFECT
// fetch listeners from local storage	WITHOUT_CLASSIFICATION	0.9999917762002497	WITHOUT_CLASSIFICATION	8.223799750408228E-6	DEFECT
// here we need to update the UI for the popup menu, if the panel // has one...	WITHOUT_CLASSIFICATION	0.9999994055233399	WITHOUT_CLASSIFICATION	5.94476660192863E-7	DEFECT
// we suppress shadow generation, because PDF is a vector format and // the shadow effect is applied via bitmap effects...	WITHOUT_CLASSIFICATION	0.9999887357074893	WITHOUT_CLASSIFICATION	1.1264292510793662E-5	DEFECT
// register as a listener with sub-components...	WITHOUT_CLASSIFICATION	0.9999996502891063	WITHOUT_CLASSIFICATION	3.4971089362815464E-7	DEFECT
// go through each zoom menu item and decide whether or not to // enable it...	WITHOUT_CLASSIFICATION	0.9999999506362303	WITHOUT_CLASSIFICATION	4.936376965305477E-8	DEFECT
// suppresses compiler warning	WITHOUT_CLASSIFICATION	0.9999958290810864	WITHOUT_CLASSIFICATION	4.170918913561945E-6	DEFECT
// we create a new but empty chartMouseListeners list	WITHOUT_CLASSIFICATION	0.9999982801643977	WITHOUT_CLASSIFICATION	1.7198356022248786E-6	DEFECT
// suppresses compiler warning	WITHOUT_CLASSIFICATION	0.9999958290810864	WITHOUT_CLASSIFICATION	4.170918913561945E-6	DEFECT
/* =========================================================== * JFreeChart : a free chart library for the Java(tm) platform * =========================================================== * * (C) Copyright 2000-2014, by Object Refinery Limited and Contributors. * * Project Info:  http://www.jfree.org/jfreechart/index.html * * This library is free software; you can redistribute it and/or modify it * under the terms of the GNU Lesser General Public License as published by * the Free Software Foundation; either version 2.1 of the License, or * (at your option) any later version. * * This library is distributed in the hope that it will be useful, but * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public * License for more details. * * You should have received a copy of the GNU Lesser General Public * License along with this library; if not, write to the Free Software * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, * USA. * * [Oracle and Java are registered trademarks of Oracle and/or its affiliates.  * Other names may be trademarks of their respective owners.] * * ----------------- * ChartFactory.java * ----------------- * (C) Copyright 2001-2014, by Object Refinery Limited and Contributors. * * Original Author:  David Gilbert (for Object Refinery Limited); * Contributor(s):   Serge V. Grachov; *                   Joao Guilherme Del Valle; *                   Bill Kelemen; *                   Jon Iles; *                   Jelai Wang; *                   Richard Atkinson; *                   David Browning (for Australian Institute of Marine *                       Science); *                   Benoit Xhenseval; * * Changes * ------- * 19-Oct-2001 : Version 1, most methods transferred from JFreeChart.java (DG); * 22-Oct-2001 : Added methods to create stacked bar charts (DG); *               Renamed DataSource.java --> Dataset.java etc. (DG); * 31-Oct-2001 : Added 3D-effect vertical bar and stacked-bar charts, *               contributed by Serge V. Grachov (DG); * 07-Nov-2001 : Added a flag to control whether or not a legend is added to *               the chart (DG); * 17-Nov-2001 : For pie chart, changed dataset from CategoryDataset to *               PieDataset (DG); * 30-Nov-2001 : Removed try/catch handlers from chart creation, as the *               exception are now RuntimeExceptions, as suggested by Joao *               Guilherme Del Valle (DG); * 06-Dec-2001 : Added createCombinableXXXXXCharts methods (BK); * 12-Dec-2001 : Added createCandlestickChart() method (DG); * 13-Dec-2001 : Updated methods for charts with new renderers (DG); * 08-Jan-2002 : Added import for *               com.jrefinery.chart.combination.CombinedChart (DG); * 31-Jan-2002 : Changed the createCombinableVerticalXYBarChart() method to use *               renderer (DG); * 06-Feb-2002 : Added new method createWindPlot() (DG); * 23-Apr-2002 : Updates to the chart and plot constructor API (DG); * 21-May-2002 : Added new method createAreaChart() (JI); * 06-Jun-2002 : Added new method createGanttChart() (DG); * 11-Jun-2002 : Renamed createHorizontalStackedBarChart() *               --> createStackedHorizontalBarChart() for consistency (DG); * 06-Aug-2002 : Updated Javadoc comments (DG); * 21-Aug-2002 : Added createPieChart(CategoryDataset) method (DG); * 02-Oct-2002 : Fixed errors reported by Checkstyle (DG); * 09-Oct-2002 : Added methods including tooltips and URL flags (DG); * 06-Nov-2002 : Moved renderers into a separate package (DG); * 18-Nov-2002 : Changed CategoryDataset to TableDataset (DG); * 21-Mar-2003 : Incorporated HorizontalCategoryAxis3D, see bug id 685501 (DG); * 13-May-2003 : Merged some horizontal and vertical methods (DG); * 24-May-2003 : Added support for timeline in createHighLowChart (BK); * 07-Jul-2003 : Added createHistogram() method contributed by Jelai Wang (DG); * 27-Jul-2003 : Added createStackedAreaXYChart() method (RA); * 05-Aug-2003 : added new method createBoxAndWhiskerChart (DB); * 08-Sep-2003 : Changed ValueAxis API (DG); * 07-Oct-2003 : Added stepped area XY chart contributed by Matthias Rose (DG); * 06-Nov-2003 : Added createWaterfallChart() method (DG); * 20-Nov-2003 : Set rendering order for 3D bar charts to fix overlapping *               problems (DG); * 25-Nov-2003 : Added createWaferMapChart() method (DG); * 23-Dec-2003 : Renamed createPie3DChart() --> createPieChart3D for *               consistency (DG); * 20-Jan-2004 : Added createPolarChart() method (DG); * 28-Jan-2004 : Fixed bug (882890) with axis range in *               createStackedXYAreaChart() method (DG); * 25-Feb-2004 : Renamed XYToolTipGenerator --> XYItemLabelGenerator (DG); * 11-Mar-2004 : Updated for pie chart changes (DG); * 27-Apr-2004 : Added new createPieChart() method contributed by Benoit *               Xhenseval (see RFE 942195) (DG); * 11-May-2004 : Split StandardCategoryItemLabelGenerator *               --> StandardCategoryToolTipGenerator and *               StandardCategoryLabelGenerator (DG); * 06-Jan-2005 : Removed deprecated methods (DG); * 27-Jan-2005 : Added new constructor to LineAndShapeRenderer (DG); * 28-Feb-2005 : Added docs to createBubbleChart() method (DG); * 17-Mar-2005 : Added createRingPlot() method (DG); * 21-Apr-2005 : Replaced Insets with RectangleInsets (DG); * 29-Nov-2005 : Removed signal chart (DG); * ------------- JFREECHART 1.0.x --------------------------------------------- * 26-Jan-2006 : Corrected API docs for createScatterPlot() (DG); * 23-Aug-2006 : Modified createStackedXYAreaChart() to use *               StackedXYAreaRenderer2, because StackedXYAreaRenderer doesn't *               handle negative values (DG); * 27-Sep-2006 : Update createPieChart() method for deprecated code (DG); * 29-Nov-2006 : Update createXYBarChart() to use a time based tool tip *               generator is a DateAxis is requested (DG); * 17-Jan-2007 : Added createBoxAndWhiskerChart() method from patch 1603937 *               submitted by Darren Jung (DG); * 10-Jul-2007 : Added new methods to create pie charts with locale for *               section label and tool tip formatting (DG); * 14-Aug-2008 : Added ChartTheme facility (DG); * 23-Oct-2008 : Check for legacy theme in setChartTheme() and reset default *               bar painters (DG); * 20-Dec-2008 : In createStackedAreaChart(), set category margin to 0.0 (DG); * 02-Jul-2013 : Use ParamChecks class (DG); *  */	WITHOUT_CLASSIFICATION	0.9944282750724204	WITHOUT_CLASSIFICATION	0.005571724927579591	DEFECT
//get absolute value of log10 value	WITHOUT_CLASSIFICATION	0.9999911966887755	WITHOUT_CLASSIFICATION	8.8033112245169E-6	DEFECT
// suppresses compiler warning	WITHOUT_CLASSIFICATION	0.9999958290810864	WITHOUT_CLASSIFICATION	4.170918913561945E-6	DEFECT
// suppresses compiler warning	WITHOUT_CLASSIFICATION	0.9999958290810864	WITHOUT_CLASSIFICATION	4.170918913561945E-6	DEFECT
// create the renderer...	WITHOUT_CLASSIFICATION	0.9999978052444631	WITHOUT_CLASSIFICATION	2.194755536885203E-6	DEFECT
// create the plot...	WITHOUT_CLASSIFICATION	0.9999994683043515	WITHOUT_CLASSIFICATION	5.316956484486186E-7	DEFECT
// create the chart...	WITHOUT_CLASSIFICATION	0.9999997467444173	WITHOUT_CLASSIFICATION	2.532555826873508E-7	DEFECT
// forces recalculation of the axis range	WITHOUT_CLASSIFICATION	0.9999969820653529	WITHOUT_CLASSIFICATION	3.01793464699922E-6	DEFECT
// reduce the default margins	WITHOUT_CLASSIFICATION	0.9999998067491502	WITHOUT_CLASSIFICATION	1.9325084980884E-7	DEFECT
// override default	WITHOUT_CLASSIFICATION	0.9999987329776525	WITHOUT_CLASSIFICATION	1.2670223475901562E-6	DEFECT
// get desired width and height from somewhere then...	WITHOUT_CLASSIFICATION	0.9999991320047082	WITHOUT_CLASSIFICATION	8.679952917139706E-7	DEFECT
// change rendering order to ensure that bar overlapping is the // right way around	WITHOUT_CLASSIFICATION	0.9999854830500722	WITHOUT_CLASSIFICATION	1.4516949927813831E-5	DEFECT
// change rendering order to ensure that bar overlapping is the // right way around	WITHOUT_CLASSIFICATION	0.9999854830500722	WITHOUT_CLASSIFICATION	1.4516949927813831E-5	DEFECT
// no need to instantiate this    	WITHOUT_CLASSIFICATION	0.99999488182649	WITHOUT_CLASSIFICATION	5.118173509899395E-6	DEFECT
// seems to be the same...	WITHOUT_CLASSIFICATION	0.9999915899802735	WITHOUT_CLASSIFICATION	8.410019726558114E-6	DEFECT
/* =========================================================== * JFreeChart : a free chart library for the Java(tm) platform * =========================================================== * * (C) Copyright 2000-2013, by Object Refinery Limited and Contributors. * * Project Info:  http://www.jfree.org/jfreechart/index.html * * This library is free software; you can redistribute it and/or modify it * under the terms of the GNU Lesser General Public License as published by * the Free Software Foundation; either version 2.1 of the License, or * (at your option) any later version. * * This library is distributed in the hope that it will be useful, but * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public * License for more details. * * You should have received a copy of the GNU Lesser General Public * License along with this library; if not, write to the Free Software * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, * USA. * * [Oracle and Java are registered trademarks of Oracle and/or its affiliates.  * Other names may be trademarks of their respective owners.] * * ------------------- * ChartUtilities.java * ------------------- * (C) Copyright 2001-2013, by Object Refinery Limited and Contributors. * * Original Author:  David Gilbert (for Object Refinery Limited); * Contributor(s):   Wolfgang Irler; *                   Richard Atkinson; *                   Xavier Poinsard; * * Changes * ------- * 11-Dec-2001 : Version 1.  The JPEG method comes from Wolfgang Irler's *               JFreeChartServletDemo class (DG); * 23-Jan-2002 : Changed saveChartAsXXX() methods to pass IOExceptions back to *               caller (DG); * 26-Jun-2002 : Added image map methods (DG); * 05-Aug-2002 : Added writeBufferedImage methods *               Modified writeImageMap method to support flexible image *               maps (RA); * 26-Aug-2002 : Added saveChartAsJPEG and writeChartAsJPEG methods with info *               objects (RA); * 05-Sep-2002 : Added writeImageMap() method to support OverLIB *               - http://www.bosrup.com/web/overlib (RA); * 26-Sep-2002 : Fixed errors reported by Checkstyle (DG); * 17-Oct-2002 : Exposed JPEG quality setting and PNG compression level as *               parameters (DG); * 25-Oct-2002 : Fixed writeChartAsJPEG() empty method bug (DG); * 13-Mar-2003 : Updated writeImageMap method as suggested by Xavier Poinsard *               (see Feature Request 688079) (DG); * 12-Aug-2003 : Added support for custom image maps using *               ToolTipTagFragmentGenerator and URLTagFragmentGenerator (RA); * 02-Sep-2003 : Separated PNG encoding from writing chart to an *               OutputStream (RA); * 04-Dec-2003 : Chart draw() method modified to include anchor point (DG); * 20-Feb-2004 : Edited Javadocs and added argument checking (DG); * 05-Apr-2004 : Fixed problem with buffered image type (DG); * 01-Aug-2004 : Modified to use EncoderUtil for all image encoding (RA); * 02-Aug-2004 : Delegated image map related functionality to ImageMapUtil (RA); * 13-Jan-2005 : Renamed ImageMapUtil --> ImageMapUtilities, removed method *               writeImageMap(PrintWriter, String, ChartRenderingInfo) which *               exists in ImageMapUtilities (DG); * ------------- JFREECHART 1.0.x --------------------------------------------- * 06-Feb-2006 : API doc update (DG); * 19-Mar-2007 : Use try-finally to close output stream in saveChartAsXXX() *               methods (DG); * 10-Jan-2008 : Fix bug 1868251 - don't create image with transparency when *               saving to JPEG format (DG); * 02-Jul-2013 : Use ParamChecks class (DG); * */	WITHOUT_CLASSIFICATION	0.9998276321237085	WITHOUT_CLASSIFICATION	1.7236787629154298E-4	DEFECT
/* shape filled = */	WITHOUT_CLASSIFICATION	0.9999964706850044	WITHOUT_CLASSIFICATION	3.5293149955264696E-6	DEFECT
/* shape visible = */	WITHOUT_CLASSIFICATION	0.9999805863466026	WITHOUT_CLASSIFICATION	1.9413653397480634E-5	DEFECT
/* shape visible = */	WITHOUT_CLASSIFICATION	0.9999805863466026	WITHOUT_CLASSIFICATION	1.9413653397480634E-5	DEFECT
/* shape visible = */	WITHOUT_CLASSIFICATION	0.9999805863466026	WITHOUT_CLASSIFICATION	1.9413653397480634E-5	DEFECT
/* shape filled = */	WITHOUT_CLASSIFICATION	0.9999964706850044	WITHOUT_CLASSIFICATION	3.5293149955264696E-6	DEFECT
/* shape filled = */	WITHOUT_CLASSIFICATION	0.9999964706850044	WITHOUT_CLASSIFICATION	3.5293149955264696E-6	DEFECT
/* shape filled = */	WITHOUT_CLASSIFICATION	0.9999964706850044	WITHOUT_CLASSIFICATION	3.5293149955264696E-6	DEFECT
/* shape filled = */	WITHOUT_CLASSIFICATION	0.9999964706850044	WITHOUT_CLASSIFICATION	3.5293149955264696E-6	DEFECT
/* shape filled = */	WITHOUT_CLASSIFICATION	0.9999964706850044	WITHOUT_CLASSIFICATION	3.5293149955264696E-6	DEFECT
/* shape outlined */	WITHOUT_CLASSIFICATION	0.9999976023308759	WITHOUT_CLASSIFICATION	2.3976691240968084E-6	DEFECT
/* shape outlined = */	WITHOUT_CLASSIFICATION	0.9999934848345351	WITHOUT_CLASSIFICATION	6.515165464894386E-6	DEFECT
/* line visible */	WITHOUT_CLASSIFICATION	0.9999850277445652	WITHOUT_CLASSIFICATION	1.4972255434761372E-5	DEFECT
/* line visible */	WITHOUT_CLASSIFICATION	0.9999850277445652	WITHOUT_CLASSIFICATION	1.4972255434761372E-5	DEFECT
/* shape outlined = */	WITHOUT_CLASSIFICATION	0.9999934848345351	WITHOUT_CLASSIFICATION	6.515165464894386E-6	DEFECT
/* shape outlined = */	WITHOUT_CLASSIFICATION	0.9999934848345351	WITHOUT_CLASSIFICATION	6.515165464894386E-6	DEFECT
/* shape outlined = */	WITHOUT_CLASSIFICATION	0.9999934848345351	WITHOUT_CLASSIFICATION	6.515165464894386E-6	DEFECT
/* line visible = */	WITHOUT_CLASSIFICATION	0.9999830413422329	WITHOUT_CLASSIFICATION	1.695865776706038E-5	DEFECT
/* line visible = */	WITHOUT_CLASSIFICATION	0.9999830413422329	WITHOUT_CLASSIFICATION	1.695865776706038E-5	DEFECT
/* line visible = */	WITHOUT_CLASSIFICATION	0.9999830413422329	WITHOUT_CLASSIFICATION	1.695865776706038E-5	DEFECT
// positiveItemLabelPosition;	WITHOUT_CLASSIFICATION	0.9999975593466137	WITHOUT_CLASSIFICATION	2.4406533863190683E-6	DEFECT
// work out if scaling is required...	WITHOUT_CLASSIFICATION	0.9999973149739653	WITHOUT_CLASSIFICATION	2.685026034721071E-6	DEFECT
/* shape outlined = */	WITHOUT_CLASSIFICATION	0.9999934848345351	WITHOUT_CLASSIFICATION	6.515165464894386E-6	DEFECT
/* line visible = */	WITHOUT_CLASSIFICATION	0.9999830413422329	WITHOUT_CLASSIFICATION	1.695865776706038E-5	DEFECT
// negativeItemLabelPositionList;	WITHOUT_CLASSIFICATION	0.9999989647823186	WITHOUT_CLASSIFICATION	1.0352176813293064E-6	DEFECT
// ----------------- // --- Constants --- // -----------------	WITHOUT_CLASSIFICATION	0.999998561530467	WITHOUT_CLASSIFICATION	1.4384695330349426E-6	DEFECT
// ------------------------ // --- Member Variables --- // ------------------------	WITHOUT_CLASSIFICATION	0.999998896312711	WITHOUT_CLASSIFICATION	1.1036872890437402E-6	DEFECT
// -------------------- // --- Constructors --- // --------------------	WITHOUT_CLASSIFICATION	0.9999981632302832	WITHOUT_CLASSIFICATION	1.836769716829273E-6	DEFECT
// -------------------------- // --- ChartPanel Methods --- // --------------------------	WITHOUT_CLASSIFICATION	0.9999991585705944	WITHOUT_CLASSIFICATION	8.414294056393115E-7	DEFECT
// ---------------------- // --- Public Methods --- // ----------------------	WITHOUT_CLASSIFICATION	0.9999936289158474	WITHOUT_CLASSIFICATION	6.371084152678094E-6	DEFECT
// ----------------------- // --- Private Methods --- // -----------------------	WITHOUT_CLASSIFICATION	0.9999940079305357	WITHOUT_CLASSIFICATION	5.992069464285247E-6	DEFECT
// do nothing at all	WITHOUT_CLASSIFICATION	0.9999750720988055	WITHOUT_CLASSIFICATION	2.492790119441085E-5	DEFECT
// now process the plot if there is one	WITHOUT_CLASSIFICATION	0.9999994148695031	WITHOUT_CLASSIFICATION	5.851304968411313E-7	DEFECT
// process all domain axes	WITHOUT_CLASSIFICATION	0.9999867094902426	WITHOUT_CLASSIFICATION	1.3290509757463722E-5	DEFECT
// process all domain axes	WITHOUT_CLASSIFICATION	0.9999867094902426	WITHOUT_CLASSIFICATION	1.3290509757463722E-5	DEFECT
// process all range axes	WITHOUT_CLASSIFICATION	0.9999942420492446	WITHOUT_CLASSIFICATION	5.7579507554418505E-6	DEFECT
// process all range axes	WITHOUT_CLASSIFICATION	0.9999942420492446	WITHOUT_CLASSIFICATION	5.7579507554418505E-6	DEFECT
// process all renderers	WITHOUT_CLASSIFICATION	0.9999967403586872	WITHOUT_CLASSIFICATION	3.2596413126822614E-6	DEFECT
// process all renderers	WITHOUT_CLASSIFICATION	0.9999967403586872	WITHOUT_CLASSIFICATION	3.2596413126822614E-6	DEFECT
// process all annotations	WITHOUT_CLASSIFICATION	0.9999929131501445	WITHOUT_CLASSIFICATION	7.08684985556149E-6	DEFECT
// BarRenderer	WITHOUT_CLASSIFICATION	0.9999938742471398	WITHOUT_CLASSIFICATION	6.125752860266258E-6	DEFECT
// BarRenderer3D	WITHOUT_CLASSIFICATION	0.9999892892203441	WITHOUT_CLASSIFICATION	1.071077965575266E-5	DEFECT
// LineRenderer3D	WITHOUT_CLASSIFICATION	0.9999960041861549	WITHOUT_CLASSIFICATION	3.995813845180615E-6	DEFECT
//  StatisticalBarRenderer	WITHOUT_CLASSIFICATION	0.9999982346066659	WITHOUT_CLASSIFICATION	1.7653933340547304E-6	DEFECT
// MinMaxCategoryRenderer	WITHOUT_CLASSIFICATION	0.9999905020267277	WITHOUT_CLASSIFICATION	9.497973272335195E-6	DEFECT
// handle GradientPaint as a special case	WITHOUT_CLASSIFICATION	0.9999996931291895	WITHOUT_CLASSIFICATION	3.068708105552708E-7	DEFECT
// create storage for listeners...	WITHOUT_CLASSIFICATION	0.9999976416658399	WITHOUT_CLASSIFICATION	2.358334160108461E-6	DEFECT
// add the chart title, if one has been specified...	WITHOUT_CLASSIFICATION	0.9999998932800924	WITHOUT_CLASSIFICATION	1.0671990759062275E-7	DEFECT
// this fires a ChartChangeEvent	WITHOUT_CLASSIFICATION	0.99998821565032	WITHOUT_CLASSIFICATION	1.1784349679942631E-5	DEFECT
// if the flag is being set to true, there may be queued up changes...	WITHOUT_CLASSIFICATION	0.9999993784102484	WITHOUT_CLASSIFICATION	6.215897515188402E-7	DEFECT
// register as a listener with sub-components...	WITHOUT_CLASSIFICATION	0.9999996502891063	WITHOUT_CLASSIFICATION	3.4971089362815464E-7	DEFECT
// seem to be the same...	WITHOUT_CLASSIFICATION	0.9999959989317612	WITHOUT_CLASSIFICATION	4.001068238827484E-6	DEFECT
// draw the label	WITHOUT_CLASSIFICATION	0.9999990066575684	WITHOUT_CLASSIFICATION	9.933424316619424E-7	DEFECT
// clear the section attributes so that the theme's DrawingSupplier // will be used	WITHOUT_CLASSIFICATION	0.9999998217616572	WITHOUT_CLASSIFICATION	1.7823834278546848E-7	DEFECT
// for efficiency, we just use the first, last and middle items to // compute a hashCode...	WITHOUT_CLASSIFICATION	0.9999999713240786	WITHOUT_CLASSIFICATION	2.8675921467087808E-8	DEFECT
// for efficiency, we just use the first, last and middle items to // compute a hashCode...	WITHOUT_CLASSIFICATION	0.9999999713240786	WITHOUT_CLASSIFICATION	2.8675921467087808E-8	DEFECT
// default is to notify listeners when the // chart changes	WITHOUT_CLASSIFICATION	0.9999929311408603	WITHOUT_CLASSIFICATION	7.068859139660565E-6	DEFECT
// added the following hint because of  // http://stackoverflow.com/questions/7785082/	WITHOUT_CLASSIFICATION	0.9999996416582392	WITHOUT_CLASSIFICATION	3.5834176079710723E-7	DEFECT
// record the chart area, if info is requested...	WITHOUT_CLASSIFICATION	0.9999998089600238	WITHOUT_CLASSIFICATION	1.9103997624562152E-7	DEFECT
// ensure no drawing occurs outside chart area...	WITHOUT_CLASSIFICATION	0.9999999358450642	WITHOUT_CLASSIFICATION	6.415493590411993E-8	DEFECT
// draw the chart background...	WITHOUT_CLASSIFICATION	0.9999997577120708	WITHOUT_CLASSIFICATION	2.4228792920536254E-7	DEFECT
// draw the title and subtitles...	WITHOUT_CLASSIFICATION	0.999999712236038	WITHOUT_CLASSIFICATION	2.877639620142054E-7	DEFECT
// draw the plot (axes and data visualisation)	WITHOUT_CLASSIFICATION	0.9999987649489849	WITHOUT_CLASSIFICATION	1.2350510151955533E-6	DEFECT
// private boolean borderVisible; // private transient Stroke borderStroke; // private transient Paint borderPaint;	WITHOUT_CLASSIFICATION	0.9999956284685739	WITHOUT_CLASSIFICATION	4.371531426115436E-6	DEFECT
// get a locale-specific resource bundle...	WITHOUT_CLASSIFICATION	0.9999998425823349	WITHOUT_CLASSIFICATION	1.5741766502600062E-7	DEFECT
// load only when required	WITHOUT_CLASSIFICATION	0.9999956608465941	WITHOUT_CLASSIFICATION	4.339153405855839E-6	DEFECT
// use ImageIcon because it waits for the image to load...	WITHOUT_CLASSIFICATION	0.9999997145834748	WITHOUT_CLASSIFICATION	2.854165251982812E-7	DEFECT
// don't zoom unless the mouse pointer is in the plot's data area	WITHOUT_CLASSIFICATION	0.9999960518860236	WITHOUT_CLASSIFICATION	3.948113976364633E-6	DEFECT
// do not notify while zooming each axis	WITHOUT_CLASSIFICATION	0.9999891267078651	WITHOUT_CLASSIFICATION	1.0873292134831895E-5	DEFECT
// this generates the change event too	WITHOUT_CLASSIFICATION	0.9999961326044431	WITHOUT_CLASSIFICATION	3.867395556949681E-6	DEFECT
// if we don't have at least 2 (x, y) coordinates, just return	WITHOUT_CLASSIFICATION	0.9999863660427943	WITHOUT_CLASSIFICATION	1.363395720569922E-5	DEFECT
// now try to reject equality	WITHOUT_CLASSIFICATION	0.9999958825170582	WITHOUT_CLASSIFICATION	4.117482941736891E-6	DEFECT
// now try to reject equality	WITHOUT_CLASSIFICATION	0.9999958825170582	WITHOUT_CLASSIFICATION	4.117482941736891E-6	DEFECT
// seem to be the same	WITHOUT_CLASSIFICATION	0.9999951851401108	WITHOUT_CLASSIFICATION	4.814859889304229E-6	DEFECT
// seem to be the same	WITHOUT_CLASSIFICATION	0.9999951851401108	WITHOUT_CLASSIFICATION	4.814859889304229E-6	DEFECT
// now try to reject equality...	WITHOUT_CLASSIFICATION	0.9999965948718905	WITHOUT_CLASSIFICATION	3.405128109546049E-6	DEFECT
// now try to reject equality...	WITHOUT_CLASSIFICATION	0.9999965948718905	WITHOUT_CLASSIFICATION	3.405128109546049E-6	DEFECT
/* Rectangle2D hotspot = */	WITHOUT_CLASSIFICATION	0.9999747886379595	WITHOUT_CLASSIFICATION	2.5211362040414286E-5	DEFECT
// seems to be the same...	WITHOUT_CLASSIFICATION	0.9999915899802735	WITHOUT_CLASSIFICATION	8.410019726558114E-6	DEFECT
// FIXME //SerialUtilities.writeImage(this.image, stream);	WITHOUT_CLASSIFICATION	0.9543147405968558	WITHOUT_CLASSIFICATION	0.045685259403144274	DEFECT
// FIXME //this.image = SerialUtilities.readImage(stream);	WITHOUT_CLASSIFICATION	0.859129439635799	WITHOUT_CLASSIFICATION	0.14087056036420098	DEFECT
// simple case	WITHOUT_CLASSIFICATION	0.9999993916575239	WITHOUT_CLASSIFICATION	6.083424760440346E-7	DEFECT
// by default the outline and background won't be visible	WITHOUT_CLASSIFICATION	0.9999978253826723	WITHOUT_CLASSIFICATION	2.174617327644052E-6	DEFECT
// now try to reject equality	WITHOUT_CLASSIFICATION	0.9999958825170582	WITHOUT_CLASSIFICATION	4.117482941736891E-6	DEFECT
// create plot ...	WITHOUT_CLASSIFICATION	0.9999994194207066	WITHOUT_CLASSIFICATION	5.805792932912101E-7	DEFECT
// add a second dataset and renderer...	WITHOUT_CLASSIFICATION	0.999999428978399	WITHOUT_CLASSIFICATION	5.710216010157347E-7	DEFECT
// return a new chart containing the overlaid plot...	WITHOUT_CLASSIFICATION	0.9999994044139299	WITHOUT_CLASSIFICATION	5.955860700957678E-7	DEFECT
// create dataset 1...	WITHOUT_CLASSIFICATION	0.9999994569221132	WITHOUT_CLASSIFICATION	5.430778867303654E-7	DEFECT
// seem to be the same	WITHOUT_CLASSIFICATION	0.9999951851401108	WITHOUT_CLASSIFICATION	4.814859889304229E-6	DEFECT
// now try to reject equality...	WITHOUT_CLASSIFICATION	0.9999965948718905	WITHOUT_CLASSIFICATION	3.405128109546049E-6	DEFECT
// seems to be the same...	WITHOUT_CLASSIFICATION	0.9999915899802735	WITHOUT_CLASSIFICATION	8.410019726558114E-6	DEFECT
// baseNegativeItemLabelPosition;	WITHOUT_CLASSIFICATION	0.9999993556952982	WITHOUT_CLASSIFICATION	6.44304701852349E-7	DEFECT
// here we change the AffineTransform so we can draw the annotation // to a larger area and scale it down into the display area // afterwards, the original transform is restored	WITHOUT_CLASSIFICATION	0.9999997192537543	WITHOUT_CLASSIFICATION	2.807462455999201E-7	DEFECT
// compute transform matrix elements via sample points. Assume no // rotation or shear.	WITHOUT_CLASSIFICATION	0.9999996505119481	WITHOUT_CLASSIFICATION	3.4948805190439996E-7	DEFECT
//  create transform & transform shape	WITHOUT_CLASSIFICATION	0.9999967588200368	WITHOUT_CLASSIFICATION	3.241179963287675E-6	DEFECT
//SerialUtilities.writeImage(this.image, stream);	WITHOUT_CLASSIFICATION	0.9999965375155051	WITHOUT_CLASSIFICATION	3.462484494831914E-6	DEFECT
//this.image = SerialUtilities.readImage(stream);	WITHOUT_CLASSIFICATION	0.999988668950578	WITHOUT_CLASSIFICATION	1.1331049422022815E-5	DEFECT
// if the axis is not visible, don't draw it...	WITHOUT_CLASSIFICATION	0.999974105249075	WITHOUT_CLASSIFICATION	2.589475092497051E-5	DEFECT
// ensure the autorange is at least <minRange> in size...	WITHOUT_CLASSIFICATION	0.9999959002217081	WITHOUT_CLASSIFICATION	4.099778291948933E-6	DEFECT
// apply the margins - these should apply to the exponent range	WITHOUT_CLASSIFICATION	0.9999984120236223	WITHOUT_CLASSIFICATION	1.587976377630513E-6	DEFECT
// even though the axis is not visible, we need ticks for the // gridlines...	WITHOUT_CLASSIFICATION	0.9999904837832179	WITHOUT_CLASSIFICATION	9.51621678216447E-6	DEFECT
// add minor ticks (for gridlines)	WITHOUT_CLASSIFICATION	0.9999988753764079	WITHOUT_CLASSIFICATION	1.1246235922034705E-6	DEFECT
// select a tick unit that is the next one bigger than the current // (log) range divided by 50	WITHOUT_CLASSIFICATION	0.9999980689493692	WITHOUT_CLASSIFICATION	1.9310506307619187E-6	DEFECT
// while the tick labels overlap and there are more tick sizes available, // choose the next bigger label	WITHOUT_CLASSIFICATION	0.9999999234383007	WITHOUT_CLASSIFICATION	7.656169924079488E-8	DEFECT
// while the tick labels overlap and there are more tick sizes available, // choose the next bigger label	WITHOUT_CLASSIFICATION	0.9999999234383007	WITHOUT_CLASSIFICATION	7.656169924079488E-8	DEFECT
// what is the available space for one unit?	WITHOUT_CLASSIFICATION	0.9999916564726112	WITHOUT_CLASSIFICATION	8.343527388793559E-6	DEFECT
// what is the available space for one unit?	WITHOUT_CLASSIFICATION	0.9999916564726112	WITHOUT_CLASSIFICATION	8.343527388793559E-6	DEFECT
// there are no more candidates	WITHOUT_CLASSIFICATION	0.9999981073219911	WITHOUT_CLASSIFICATION	1.8926780088363342E-6	DEFECT
// there are no more candidates	WITHOUT_CLASSIFICATION	0.9999981073219911	WITHOUT_CLASSIFICATION	1.8926780088363342E-6	DEFECT
// all tick labels have the same width (equal to the height of the // font)...	WITHOUT_CLASSIFICATION	0.9999986043836282	WITHOUT_CLASSIFICATION	1.3956163717949667E-6	DEFECT
// look at lower and upper bounds...	WITHOUT_CLASSIFICATION	0.9999990698137596	WITHOUT_CLASSIFICATION	9.301862404541817E-7	DEFECT
// no need to create entity if we can't save it anyways...	WITHOUT_CLASSIFICATION	0.99999911900014	WITHOUT_CLASSIFICATION	8.809998600045791E-7	DEFECT
// it is unlikely that 'state' will be null, but check anyway...	WITHOUT_CLASSIFICATION	0.9997902233760984	WITHOUT_CLASSIFICATION	2.0977662390159215E-4	DEFECT
// It's up to the plot which clones up to restore the correct references	WITHOUT_CLASSIFICATION	0.9999993158060634	WITHOUT_CLASSIFICATION	6.841939366183047E-7	DEFECT
// draw the category labels and axis label	WITHOUT_CLASSIFICATION	0.9999977819941396	WITHOUT_CLASSIFICATION	2.218005860372496E-6	DEFECT
// regular number axis	WITHOUT_CLASSIFICATION	0.9999969646106355	WITHOUT_CLASSIFICATION	3.035389364529796E-6	DEFECT
// regular number axis	WITHOUT_CLASSIFICATION	0.9999969646106355	WITHOUT_CLASSIFICATION	3.035389364529796E-6	DEFECT
// displayStart > displayEnd, need to handle split	WITHOUT_CLASSIFICATION	0.9999996588409635	WITHOUT_CLASSIFICATION	3.411590364329515E-7	DEFECT
// displayStart > displayEnd, need to handle split	WITHOUT_CLASSIFICATION	0.9999996588409635	WITHOUT_CLASSIFICATION	3.411590364329515E-7	DEFECT
// create a new space object if one wasn't supplied...	WITHOUT_CLASSIFICATION	0.9999998052194982	WITHOUT_CLASSIFICATION	1.9478050180005607E-7	DEFECT
// if the axis is not visible, no additional space is required...	WITHOUT_CLASSIFICATION	0.9999995634113691	WITHOUT_CLASSIFICATION	4.3658863091590427E-7	DEFECT
// if the axis has a fixed dimension, return it...	WITHOUT_CLASSIFICATION	0.9999809330981835	WITHOUT_CLASSIFICATION	1.906690181647549E-5	DEFECT
// get the axis label size and update the space object...	WITHOUT_CLASSIFICATION	0.9999997654806377	WITHOUT_CLASSIFICATION	2.3451936219585273E-7	DEFECT
//negative values not allowed	WITHOUT_CLASSIFICATION	0.9998714884442618	WITHOUT_CLASSIFICATION	1.285115557381977E-4	DEFECT
// no plot, no data.	WITHOUT_CLASSIFICATION	0.9999990334456461	WITHOUT_CLASSIFICATION	9.665543538513832E-7	DEFECT
// no plot, no data	WITHOUT_CLASSIFICATION	0.9999990049716634	WITHOUT_CLASSIFICATION	9.950283366248535E-7	DEFECT
// if the axis is not visible, no additional space is required...	WITHOUT_CLASSIFICATION	0.9999995634113691	WITHOUT_CLASSIFICATION	4.3658863091590427E-7	DEFECT
// if the axis has a fixed dimension, return it...	WITHOUT_CLASSIFICATION	0.9999809330981835	WITHOUT_CLASSIFICATION	1.906690181647549E-5	DEFECT
// get the axis label size and update the space object...	WITHOUT_CLASSIFICATION	0.9999997654806377	WITHOUT_CLASSIFICATION	2.3451936219585273E-7	DEFECT
// baseCreateEntities;	WITHOUT_CLASSIFICATION	0.9999990420202978	WITHOUT_CLASSIFICATION	9.579797022211508E-7	DEFECT
// add space for the outer tick labels, if any...	WITHOUT_CLASSIFICATION	0.9999998204633163	WITHOUT_CLASSIFICATION	1.7953668374278036E-7	DEFECT
// draw minor tick marks	WITHOUT_CLASSIFICATION	0.9999959310489251	WITHOUT_CLASSIFICATION	4.0689510748793435E-6	DEFECT
// work out the initial gap	WITHOUT_CLASSIFICATION	0.9999931426272257	WITHOUT_CLASSIFICATION	6.857372774217747E-6	DEFECT
// this is the last period, but it is only partially visible // so check that the label will fit before displaying it...	WITHOUT_CLASSIFICATION	0.9998622656402463	WITHOUT_CLASSIFICATION	1.3773435975386088E-4	DEFECT
// this is the first period, but it is only partially visible // so check that the label will fit before displaying it...	WITHOUT_CLASSIFICATION	0.9999222721163603	WITHOUT_CLASSIFICATION	7.77278836397514E-5	DEFECT
// work out the trailing gap	WITHOUT_CLASSIFICATION	0.999990532014873	WITHOUT_CLASSIFICATION	9.467985126950832E-6	DEFECT
// draw the arrow...	WITHOUT_CLASSIFICATION	0.9999959570692464	WITHOUT_CLASSIFICATION	4.042930753622137E-6	DEFECT
// need to work out the space used by the tick labels... // so we can update the cursor...	WITHOUT_CLASSIFICATION	0.9999997979186417	WITHOUT_CLASSIFICATION	2.0208135819222017E-7	DEFECT
// calculate the max size of the tick labels (if visible)...	WITHOUT_CLASSIFICATION	0.9999970889957309	WITHOUT_CLASSIFICATION	2.9110042690449545E-6	DEFECT
// if autoRange is true, then the current range is irrelevant	WITHOUT_CLASSIFICATION	0.9999943429126956	WITHOUT_CLASSIFICATION	5.657087304378483E-6	DEFECT
//setup number formatter obj	WITHOUT_CLASSIFICATION	0.9999794337417947	WITHOUT_CLASSIFICATION	2.056625820533183E-5	DEFECT
//setup number formatter obj	WITHOUT_CLASSIFICATION	0.9999794337417947	WITHOUT_CLASSIFICATION	2.056625820533183E-5	DEFECT
// if negative then set flag and make positive	WITHOUT_CLASSIFICATION	0.9999891626385654	WITHOUT_CLASSIFICATION	1.0837361434571425E-5	DEFECT
// if negative then set flag and make positive	WITHOUT_CLASSIFICATION	0.9999891626385654	WITHOUT_CLASSIFICATION	1.0837361434571425E-5	DEFECT
//return value; negate if original value was negative:	WITHOUT_CLASSIFICATION	0.9999878163077818	WITHOUT_CLASSIFICATION	1.2183692218314726E-5	DEFECT
//invert adjustLog10	WITHOUT_CLASSIFICATION	0.999989607271408	WITHOUT_CLASSIFICATION	1.0392728592057708E-5	DEFECT
//calculate floor using negative value:	WITHOUT_CLASSIFICATION	0.999942400540176	WITHOUT_CLASSIFICATION	5.7599459823978714E-5	DEFECT
//calculate power using positive value; then negate	WITHOUT_CLASSIFICATION	0.9999667221552994	WITHOUT_CLASSIFICATION	3.3277844700639825E-5	DEFECT
//negative values are allowed	WITHOUT_CLASSIFICATION	0.9999751268692816	WITHOUT_CLASSIFICATION	2.487313071850241E-5	DEFECT
//calculate ceil using negative value:	WITHOUT_CLASSIFICATION	0.9998378337798727	WITHOUT_CLASSIFICATION	1.6216622012732852E-4	DEFECT
// ensure the autorange is at least <minRange> in size...	WITHOUT_CLASSIFICATION	0.9999959002217081	WITHOUT_CLASSIFICATION	4.099778291948933E-6	DEFECT
// legendTextPaint	WITHOUT_CLASSIFICATION	0.9999981370303563	WITHOUT_CLASSIFICATION	1.862969643661757E-6	DEFECT
//setup for "1e#"-style tick labels or regular // numeric tick labels, depending on flag:	WITHOUT_CLASSIFICATION	0.9999995862513207	WITHOUT_CLASSIFICATION	4.137486792847912E-7	DEFECT
// if < 10 then //increase so 0 translates to 0	WITHOUT_CLASSIFICATION	0.9999992669160936	WITHOUT_CLASSIFICATION	7.330839064098376E-7	DEFECT
//negative values are allowed //parameter value is > 10 // The Math.log() function is based on e not 10.	WITHOUT_CLASSIFICATION	0.999937799118031	WITHOUT_CLASSIFICATION	6.220088196893087E-5	DEFECT
//parameter value is < -10 //calculate log using positive value:	WITHOUT_CLASSIFICATION	0.9998738717554057	WITHOUT_CLASSIFICATION	1.2612824459438517E-4	DEFECT
//parameter value is -10 > val < 10 //use as-is	WITHOUT_CLASSIFICATION	0.9999911983966313	WITHOUT_CLASSIFICATION	8.801603368708147E-6	DEFECT
//parameter value is -10 > val < 10 //use as-is	WITHOUT_CLASSIFICATION	0.9999911983966313	WITHOUT_CLASSIFICATION	8.801603368708147E-6	DEFECT
//negative values not allowed //parameter value is > 0 // The Math.log() function is based on e not 10.	WITHOUT_CLASSIFICATION	0.9999232299504927	WITHOUT_CLASSIFICATION	7.677004950740038E-5	DEFECT
//parameter value is <= 0 //use as-is	WITHOUT_CLASSIFICATION	0.9999849718267064	WITHOUT_CLASSIFICATION	1.5028173293544734E-5	DEFECT
//parameter value is > 10 // The Math.log() function is based on e not 10.	WITHOUT_CLASSIFICATION	0.999982564645331	WITHOUT_CLASSIFICATION	1.7435354669019954E-5	DEFECT
//parameter value is > 0 // The Math.log() function is based on e not 10.	WITHOUT_CLASSIFICATION	0.9999850424932394	WITHOUT_CLASSIFICATION	1.4957506760606008E-5	DEFECT
//no real data present	WITHOUT_CLASSIFICATION	0.9999984338613077	WITHOUT_CLASSIFICATION	1.5661386923213347E-6	DEFECT
//get lower bound value	WITHOUT_CLASSIFICATION	0.9999853913067551	WITHOUT_CLASSIFICATION	1.4608693244788187E-5	DEFECT
//actual data is present //get lower bound value	WITHOUT_CLASSIFICATION	0.9999951106032113	WITHOUT_CLASSIFICATION	4.889396788622556E-6	DEFECT
//strict flag set, allow-negatives not set and values <= 0	WITHOUT_CLASSIFICATION	0.9999895088619672	WITHOUT_CLASSIFICATION	1.0491138032809404E-5	DEFECT
//apply lower margin by decreasing lower bound:	WITHOUT_CLASSIFICATION	0.9999968826974018	WITHOUT_CLASSIFICATION	3.1173025981110965E-6	DEFECT
//lower bound and margin OK; get log10 of lower bound	WITHOUT_CLASSIFICATION	0.9999969220746894	WITHOUT_CLASSIFICATION	3.077925310616298E-6	DEFECT
//get absolute value of log10 value	WITHOUT_CLASSIFICATION	0.9999911966887755	WITHOUT_CLASSIFICATION	8.8033112245169E-6	DEFECT
//need to account for case where upper==0.0	WITHOUT_CLASSIFICATION	0.9999987178688716	WITHOUT_CLASSIFICATION	1.2821311283054386E-6	DEFECT
//setup flag based on bounds values	WITHOUT_CLASSIFICATION	0.9999969883731058	WITHOUT_CLASSIFICATION	3.011626894282449E-6	DEFECT
//get lower bound value:	WITHOUT_CLASSIFICATION	0.9999789127684459	WITHOUT_CLASSIFICATION	2.108723155404055E-5	DEFECT
//get upper bound value	WITHOUT_CLASSIFICATION	0.9999839354570866	WITHOUT_CLASSIFICATION	1.6064542913358612E-5	DEFECT
//get log10 version of upper bound and round to integer:	WITHOUT_CLASSIFICATION	0.9999988188854163	WITHOUT_CLASSIFICATION	1.1811145836485395E-6	DEFECT
//for each power of 10 value; create ten ticks	WITHOUT_CLASSIFICATION	0.9999995058229766	WITHOUT_CLASSIFICATION	4.941770234118759E-7	DEFECT
//for each tick to be displayed	WITHOUT_CLASSIFICATION	0.9999983392923598	WITHOUT_CLASSIFICATION	1.6607076400666511E-6	DEFECT
//small log values in use; create numeric value for tick	WITHOUT_CLASSIFICATION	0.9999567802494662	WITHOUT_CLASSIFICATION	4.321975053370902E-5	DEFECT
//create tick label (force use of fmt obj):	WITHOUT_CLASSIFICATION	0.999999094965611	WITHOUT_CLASSIFICATION	9.050343889683975E-7	DEFECT
//no tick label to be shown	WITHOUT_CLASSIFICATION	0.9999814105378193	WITHOUT_CLASSIFICATION	1.8589462180698635E-5	DEFECT
//create tick label:	WITHOUT_CLASSIFICATION	0.999994690700648	WITHOUT_CLASSIFICATION	5.309299352038427E-6	DEFECT
//get lower bound value:	WITHOUT_CLASSIFICATION	0.9999789127684459	WITHOUT_CLASSIFICATION	2.108723155404055E-5	DEFECT
//if autorange still below minimum then adjust by 1% // (can be needed when minRange is very small):	WITHOUT_CLASSIFICATION	0.9999783729962184	WITHOUT_CLASSIFICATION	2.1627003781641878E-5	DEFECT
//get upper bound value	WITHOUT_CLASSIFICATION	0.9999839354570866	WITHOUT_CLASSIFICATION	1.6064542913358612E-5	DEFECT
//if small log values and lower bound value too small // then set to a small value (don't allow <= 0):	WITHOUT_CLASSIFICATION	0.9999975401189354	WITHOUT_CLASSIFICATION	2.4598810646184173E-6	DEFECT
//get log10 version of lower bound and round to integer:	WITHOUT_CLASSIFICATION	0.9999991533722562	WITHOUT_CLASSIFICATION	8.46627743805608E-7	DEFECT
//get log10 version of upper bound and round to integer:	WITHOUT_CLASSIFICATION	0.9999988188854163	WITHOUT_CLASSIFICATION	1.1811145836485395E-6	DEFECT
//for each tick to be displayed	WITHOUT_CLASSIFICATION	0.9999983392923598	WITHOUT_CLASSIFICATION	1.6607076400666511E-6	DEFECT
//only 1 power of 10 value, it's > 0 and its resulting // tick value will be larger than lower bound of data //decrement to generate more ticks	WITHOUT_CLASSIFICATION	0.9999982171976498	WITHOUT_CLASSIFICATION	1.7828023501987876E-6	DEFECT
//showing "1e#"-style ticks or negative exponent // generating tick value between 0 & 1; show fewer	WITHOUT_CLASSIFICATION	0.99999786784343	WITHOUT_CLASSIFICATION	2.1321565699441194E-6	DEFECT
//tick value not between 0 & 1 //show tick label if it's the first or last in // the set, or if it's 1-5; beyond that show // fewer as the values get larger:	WITHOUT_CLASSIFICATION	0.999999477001191	WITHOUT_CLASSIFICATION	5.229988091026682E-7	DEFECT
//not small log values in use; allow for values <= 0 //if did zero tick last iter then //decrement to do 1.0 tick now //calculate power-of-ten value for tick:	WITHOUT_CLASSIFICATION	0.9999979216187285	WITHOUT_CLASSIFICATION	2.078381271499406E-6	DEFECT
// did not do zero tick last iteration	WITHOUT_CLASSIFICATION	0.9999975183403738	WITHOUT_CLASSIFICATION	2.481659626276534E-6	DEFECT
//tick value is 1.0 and 0.0 is within data range //set tick value to zero //indicate zero tick	WITHOUT_CLASSIFICATION	0.9999942587455657	WITHOUT_CLASSIFICATION	5.7412544344015166E-6	DEFECT
// if past highest data value then exit // method	WITHOUT_CLASSIFICATION	0.9999636363138219	WITHOUT_CLASSIFICATION	3.6363686177990815E-5	DEFECT
//tick value not below lowest data value	WITHOUT_CLASSIFICATION	0.9999796688385237	WITHOUT_CLASSIFICATION	2.0331161476193588E-5	DEFECT
//for each tick with a label to be displayed	WITHOUT_CLASSIFICATION	0.999997650811615	WITHOUT_CLASSIFICATION	2.349188385094607E-6	DEFECT
//small log values in use	WITHOUT_CLASSIFICATION	0.9998387600287709	WITHOUT_CLASSIFICATION	1.6123997122903652E-4	DEFECT
//first tick of group; create label text	WITHOUT_CLASSIFICATION	0.9999997804255452	WITHOUT_CLASSIFICATION	2.1957445473396197E-7	DEFECT
//not "log10"-type label	WITHOUT_CLASSIFICATION	0.99998298738439	WITHOUT_CLASSIFICATION	1.7012615610025517E-5	DEFECT
//if small log values and lower bound value too small // then set to a small value (don't allow <= 0):	WITHOUT_CLASSIFICATION	0.9999975401189354	WITHOUT_CLASSIFICATION	2.4598810646184173E-6	DEFECT
//only 1 power of 10 value, it's > 0 and its resulting // tick value will be larger than lower bound of data //decrement to generate more ticks	WITHOUT_CLASSIFICATION	0.9999982171976498	WITHOUT_CLASSIFICATION	1.7828023501987876E-6	DEFECT
//tick value not below lowest data value	WITHOUT_CLASSIFICATION	0.9999796688385237	WITHOUT_CLASSIFICATION	2.0331161476193588E-5	DEFECT
// ITEM_LABEL_PAINT	WITHOUT_CLASSIFICATION	0.9999850635379037	WITHOUT_CLASSIFICATION	1.4936462096182373E-5	DEFECT
//if flag then //create "log10"-type label	WITHOUT_CLASSIFICATION	0.9999966517644431	WITHOUT_CLASSIFICATION	3.3482355568854016E-6	DEFECT
//if flag then //create "1e#"-type label	WITHOUT_CLASSIFICATION	0.9999951111654498	WITHOUT_CLASSIFICATION	4.888834550222023E-6	DEFECT
//not "1e#"-type label // if positive exponent then // make integer	WITHOUT_CLASSIFICATION	0.9999946869031803	WITHOUT_CLASSIFICATION	5.313096819738549E-6	DEFECT
//negative exponent; create fractional value //set exact number of fractional digits to // be shown:	WITHOUT_CLASSIFICATION	0.9999994503469594	WITHOUT_CLASSIFICATION	5.49653040691397E-7	DEFECT
//not small log values in use; allow for values <= 0 //if did zero tick last iter then	WITHOUT_CLASSIFICATION	0.9999981345890132	WITHOUT_CLASSIFICATION	1.8654109867465848E-6	DEFECT
//decrement to do 1.0 tick now	WITHOUT_CLASSIFICATION	0.9999941909819902	WITHOUT_CLASSIFICATION	5.809018009915267E-6	DEFECT
//first tick of group // did not do zero tick last // iteration	WITHOUT_CLASSIFICATION	0.9999996972788243	WITHOUT_CLASSIFICATION	3.027211756375602E-7	DEFECT
// not first or last tick on graph and value // is 1.0 //change value to 0.0 //indicate zero tick //create label for tick	WITHOUT_CLASSIFICATION	0.999999600924428	WITHOUT_CLASSIFICATION	3.99075572026598E-7	DEFECT
//first or last tick on graph or value is 1.0 //create label for tick:	WITHOUT_CLASSIFICATION	0.9999974375278216	WITHOUT_CLASSIFICATION	2.5624721783959423E-6	DEFECT
//create "log10"-type label	WITHOUT_CLASSIFICATION	0.9999960707616967	WITHOUT_CLASSIFICATION	3.929238303313819E-6	DEFECT
//create "1e#"-type label	WITHOUT_CLASSIFICATION	0.9999939327280339	WITHOUT_CLASSIFICATION	6.067271966080593E-6	DEFECT
// did zero tick last iteration //no label //clear flag	WITHOUT_CLASSIFICATION	0.9999992786352556	WITHOUT_CLASSIFICATION	7.213647444624243E-7	DEFECT
// not first tick of group //no label //make sure flag cleared	WITHOUT_CLASSIFICATION	0.9999999233809379	WITHOUT_CLASSIFICATION	7.661906211761858E-8	DEFECT
//if past highest data value then exit method	WITHOUT_CLASSIFICATION	0.999934049873335	WITHOUT_CLASSIFICATION	6.59501266650023E-5	DEFECT
//create tick object and add to list:	WITHOUT_CLASSIFICATION	0.9999940910318188	WITHOUT_CLASSIFICATION	5.9089681812761854E-6	DEFECT
//using exponents or force-formatter flag is set // (convert 'E' to lower-case 'e'):	WITHOUT_CLASSIFICATION	0.9999985430610203	WITHOUT_CLASSIFICATION	1.4569389796375895E-6	DEFECT
// populate deprecated fields	WITHOUT_CLASSIFICATION	0.9999980549904539	WITHOUT_CLASSIFICATION	1.9450095460985943E-6	DEFECT
// usually the range will be a DateRange, but if it isn't do a // conversion...	WITHOUT_CLASSIFICATION	0.9999459333981814	WITHOUT_CLASSIFICATION	5.4066601818665175E-5	DEFECT
// check the new minimum date relative to the current maximum date	WITHOUT_CLASSIFICATION	0.9999990314094246	WITHOUT_CLASSIFICATION	9.685905753289151E-7	DEFECT
// check the new maximum date relative to the current minimum date	WITHOUT_CLASSIFICATION	0.9999989181228057	WITHOUT_CLASSIFICATION	1.0818771942791086E-6	DEFECT
// long result = calendar.getTimeInMillis(); // won't work with JDK 1.3	WITHOUT_CLASSIFICATION	0.9991098054104237	WITHOUT_CLASSIFICATION	8.901945895762566E-4	DEFECT
// date formatters	WITHOUT_CLASSIFICATION	0.9999709157660396	WITHOUT_CLASSIFICATION	2.9084233960447666E-5	DEFECT
// milliseconds	WITHOUT_CLASSIFICATION	0.9999983113134926	WITHOUT_CLASSIFICATION	1.6886865073978515E-6	DEFECT
// look at lower and upper bounds...	WITHOUT_CLASSIFICATION	0.9999990698137596	WITHOUT_CLASSIFICATION	9.301862404541817E-7	DEFECT
// create a new space object if one wasn't supplied...	WITHOUT_CLASSIFICATION	0.9999998052194982	WITHOUT_CLASSIFICATION	1.9478050180005607E-7	DEFECT
// if the axis is not visible, no additional space is required...	WITHOUT_CLASSIFICATION	0.9999995634113691	WITHOUT_CLASSIFICATION	4.3658863091590427E-7	DEFECT
// seconds	WITHOUT_CLASSIFICATION	0.9999993137574303	WITHOUT_CLASSIFICATION	6.862425696380979E-7	DEFECT
// minutes	WITHOUT_CLASSIFICATION	0.9999972871172899	WITHOUT_CLASSIFICATION	2.7128827102004902E-6	DEFECT
// hours	WITHOUT_CLASSIFICATION	0.9999970592036689	WITHOUT_CLASSIFICATION	2.9407963311685233E-6	DEFECT
// days	WITHOUT_CLASSIFICATION	0.9999958413106892	WITHOUT_CLASSIFICATION	4.1586893108105174E-6	DEFECT
// months	WITHOUT_CLASSIFICATION	0.999997392133296	WITHOUT_CLASSIFICATION	2.607866703965727E-6	DEFECT
// years	WITHOUT_CLASSIFICATION	0.999997827642717	WITHOUT_CLASSIFICATION	2.1723572828592463E-6	DEFECT
//Timeline hasn't method getStartTime()	WITHOUT_CLASSIFICATION	0.9999133409603596	WITHOUT_CLASSIFICATION	8.665903964043625E-5	DEFECT
// start with the current tick unit...	WITHOUT_CLASSIFICATION	0.9999998027312283	WITHOUT_CLASSIFICATION	1.9726877165213012E-7	DEFECT
// then extrapolate...	WITHOUT_CLASSIFICATION	0.9999969677136966	WITHOUT_CLASSIFICATION	3.0322863033484547E-6	DEFECT
// start with a unit that is at least 1/10th of the axis length	WITHOUT_CLASSIFICATION	0.9999992687055609	WITHOUT_CLASSIFICATION	7.312944391284326E-7	DEFECT
// now extrapolate based on label height and unit height...	WITHOUT_CLASSIFICATION	0.9999997680367528	WITHOUT_CLASSIFICATION	2.3196324717615024E-7	DEFECT
// make final selection...	WITHOUT_CLASSIFICATION	0.9999952212671259	WITHOUT_CLASSIFICATION	4.778732874110513E-6	DEFECT
// all tick labels have the same width (equal to the height of // the font)...	WITHOUT_CLASSIFICATION	0.9999986689812371	WITHOUT_CLASSIFICATION	1.3310187628769384E-6	DEFECT
// could add a flag to make the following correction optional...	WITHOUT_CLASSIFICATION	0.9999894647966531	WITHOUT_CLASSIFICATION	1.053520334704269E-5	DEFECT
// could add a flag to make the following correction optional...	WITHOUT_CLASSIFICATION	0.9999894647966531	WITHOUT_CLASSIFICATION	1.053520334704269E-5	DEFECT
// work out the value, label and position	WITHOUT_CLASSIFICATION	0.9999967994244825	WITHOUT_CLASSIFICATION	3.2005755174895515E-6	DEFECT
// work out the value, label and position	WITHOUT_CLASSIFICATION	0.9999967994244825	WITHOUT_CLASSIFICATION	3.2005755174895515E-6	DEFECT
// even though the axis is not visible, we need to refresh ticks in // case the grid is being drawn...	WITHOUT_CLASSIFICATION	0.9999855269663374	WITHOUT_CLASSIFICATION	1.44730336625169E-5	DEFECT
// draw the tick marks and labels...	WITHOUT_CLASSIFICATION	0.9999976311498092	WITHOUT_CLASSIFICATION	2.368850190836306E-6	DEFECT
// draw the axis label (note that 'state' is passed in *and* // returned)...	WITHOUT_CLASSIFICATION	0.999999295723188	WITHOUT_CLASSIFICATION	7.042768120491955E-7	DEFECT
// when zooming to sub-millisecond ranges, it can be the case that // adjEnd == adjStart...and we can't have an axis with zero length // so we apply this instead:	WITHOUT_CLASSIFICATION	0.9998328427209492	WITHOUT_CLASSIFICATION	1.6715727905070827E-4	DEFECT
// 'dateTickUnit' is immutable : no need to clone	WITHOUT_CLASSIFICATION	0.9999978467131102	WITHOUT_CLASSIFICATION	2.153286889790523E-6	DEFECT
// 'tickMarkPosition' is immutable : no need to clone	WITHOUT_CLASSIFICATION	0.9999981908806326	WITHOUT_CLASSIFICATION	1.8091193673865103E-6	DEFECT
// if there is no specific font, use the general one...	WITHOUT_CLASSIFICATION	0.9999998284234417	WITHOUT_CLASSIFICATION	1.715765582636999E-7	DEFECT
// if there is no specific paint, use the general one...	WITHOUT_CLASSIFICATION	0.9999998223259289	WITHOUT_CLASSIFICATION	1.77674071142746E-7	DEFECT
// find first excluded base segment starting fromDomainValue	WITHOUT_CLASSIFICATION	0.9999998285139399	WITHOUT_CLASSIFICATION	1.7148606018584576E-7	DEFECT
// draw the category labels and axis label	WITHOUT_CLASSIFICATION	0.9999977819941396	WITHOUT_CLASSIFICATION	2.218005860372496E-6	DEFECT
// get the axis label size and update the space object...	WITHOUT_CLASSIFICATION	0.9999997654806377	WITHOUT_CLASSIFICATION	2.3451936219585273E-7	DEFECT
// calculate the max size of the tick labels (if visible)...	WITHOUT_CLASSIFICATION	0.9999970889957309	WITHOUT_CLASSIFICATION	2.9110042690449545E-6	DEFECT
// nothing required	WITHOUT_CLASSIFICATION	0.9999986357478657	WITHOUT_CLASSIFICATION	1.3642521341543205E-6	DEFECT
// sanity check for data area...	WITHOUT_CLASSIFICATION	0.999998496818516	WITHOUT_CLASSIFICATION	1.5031814839697292E-6	DEFECT
// step down in size until the current size is too small or there are  // no more units	WITHOUT_CLASSIFICATION	0.9999966417493463	WITHOUT_CLASSIFICATION	3.358250653762537E-6	DEFECT
//////////////////////////////////////////////////////////////////////////// // predetermined segments sizes ////////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999997562403412	WITHOUT_CLASSIFICATION	2.437596587631793E-7	DEFECT
//////////////////////////////////////////////////////////////////////////// // other constants ////////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999996918922619	WITHOUT_CLASSIFICATION	3.0810773815981444E-7	DEFECT
//////////////////////////////////////////////////////////////////////////// // private attributes ////////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999981848038767	WITHOUT_CLASSIFICATION	1.8151961232856308E-6	DEFECT
//////////////////////////////////////////////////////////////////////////// // static block ////////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.999998800335815	WITHOUT_CLASSIFICATION	1.1996641849361214E-6	DEFECT
// make a time zone with no DST for our Calendar calculations	WITHOUT_CLASSIFICATION	0.9999421118633111	WITHOUT_CLASSIFICATION	5.788813668899574E-5	DEFECT
// calculate midnight of first monday after 1/1/1900 relative to // current locale	WITHOUT_CLASSIFICATION	0.9999969760992031	WITHOUT_CLASSIFICATION	3.023900796945431E-6	DEFECT
//////////////////////////////////////////////////////////////////////////// // constructors and factory methods ////////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999883830821221	WITHOUT_CLASSIFICATION	1.161691787790463E-5	DEFECT
//////////////////////////////////////////////////////////////////////////// // operations ////////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999978935605359	WITHOUT_CLASSIFICATION	2.1064394640324137E-6	DEFECT
// verify that baseTimeline is compatible with us	WITHOUT_CLASSIFICATION	0.9999948811697142	WITHOUT_CLASSIFICATION	5.118830285726506E-6	DEFECT
// - partialTimeInException;	WITHOUT_CLASSIFICATION	0.9999733119954973	WITHOUT_CLASSIFICATION	2.668800450261039E-5	DEFECT
// - partialTimeInException;	WITHOUT_CLASSIFICATION	0.9999733119954973	WITHOUT_CLASSIFICATION	2.668800450261039E-5	DEFECT
//return toTimelineValue(dateDomainValue.getTime());	WITHOUT_CLASSIFICATION	0.9999779620692186	WITHOUT_CLASSIFICATION	2.203793078134917E-5	DEFECT
// calculate the result as if no exceptions	WITHOUT_CLASSIFICATION	0.9999989084979969	WITHOUT_CLASSIFICATION	1.0915020031997209E-6	DEFECT
// adjust result for any exceptions in the result calculated	WITHOUT_CLASSIFICATION	0.9999911636603164	WITHOUT_CLASSIFICATION	8.836339683716158E-6	DEFECT
// skip all whole exception segments in the range	WITHOUT_CLASSIFICATION	0.9999945558205302	WITHOUT_CLASSIFICATION	5.444179469825222E-6	DEFECT
// skip exception or excluded segments we may fall on	WITHOUT_CLASSIFICATION	0.999997037150044	WITHOUT_CLASSIFICATION	2.9628499561035496E-6	DEFECT
//addException(exceptionDate.getTime());	WITHOUT_CLASSIFICATION	0.9997043023381995	WITHOUT_CLASSIFICATION	2.956976618005126E-4	DEFECT
// find all consecutive included segments	WITHOUT_CLASSIFICATION	0.9999944920661763	WITHOUT_CLASSIFICATION	5.507933823732752E-6	DEFECT
// add the interval as an exception	WITHOUT_CLASSIFICATION	0.9999777266514829	WITHOUT_CLASSIFICATION	2.2273348517118785E-5	DEFECT
// find all consecutive included segments	WITHOUT_CLASSIFICATION	0.9999944920661763	WITHOUT_CLASSIFICATION	5.507933823732752E-6	DEFECT
// move forward exceptionSegmentCount segments skipping // excluded segments	WITHOUT_CLASSIFICATION	0.999998647930203	WITHOUT_CLASSIFICATION	1.352069797030872E-6	DEFECT
// empty	WITHOUT_CLASSIFICATION	0.9999957759952776	WITHOUT_CLASSIFICATION	4.224004722455707E-6	DEFECT
// add the interval as an exception	WITHOUT_CLASSIFICATION	0.9999777266514829	WITHOUT_CLASSIFICATION	2.2273348517118785E-5	DEFECT
// this is not one of our included segment, skip it	WITHOUT_CLASSIFICATION	0.999996461995854	WITHOUT_CLASSIFICATION	3.538004145985449E-6	DEFECT
// first check that autoPopulate==false works as expected	WITHOUT_CLASSIFICATION	0.9999940638320292	WITHOUT_CLASSIFICATION	5.93616797089423E-6	DEFECT
// cycle over all the base segments groups in the range	WITHOUT_CLASSIFICATION	0.9999993351936252	WITHOUT_CLASSIFICATION	6.648063748256005E-7	DEFECT
// cycle through all the segments contained in the base exclusion // area	WITHOUT_CLASSIFICATION	0.9999993166347281	WITHOUT_CLASSIFICATION	6.833652718429781E-7	DEFECT
// go to next base segment group	WITHOUT_CLASSIFICATION	0.9999998369211703	WITHOUT_CLASSIFICATION	1.630788296659637E-7	DEFECT
// key not found	WITHOUT_CLASSIFICATION	0.9999698058364341	WITHOUT_CLASSIFICATION	3.0194163565910774E-5	DEFECT
// Segment fromSegment = getSegment(from); // fromSegment.inc(); // Segment toSegment = getSegment(to); // toSegment.dec();	WITHOUT_CLASSIFICATION	0.9999976824128193	WITHOUT_CLASSIFICATION	2.31758718070161E-6	DEFECT
// long start = Math.max( //     fromSegment.getSegmentStart(), this.segmentStart // ); // long end = Math.min(toSegment.getSegmentEnd(), this.segmentEnd);	WITHOUT_CLASSIFICATION	0.9999975396593198	WITHOUT_CLASSIFICATION	2.460340680168465E-6	DEFECT
// Compute number of labels	WITHOUT_CLASSIFICATION	0.9999995308440156	WITHOUT_CLASSIFICATION	4.6915598430956094E-7	DEFECT
// Cycle when necessary	WITHOUT_CLASSIFICATION	0.999998548529409	WITHOUT_CLASSIFICATION	1.4514705911077108E-6	DEFECT
// Cycle when necessary	WITHOUT_CLASSIFICATION	0.999998548529409	WITHOUT_CLASSIFICATION	1.4514705911077108E-6	DEFECT
// If tick overlap when cycling, update last tick too	WITHOUT_CLASSIFICATION	0.9999998830602014	WITHOUT_CLASSIFICATION	1.1693979862288436E-7	DEFECT
// continue and separate the labels only if necessary	WITHOUT_CLASSIFICATION	0.9999999628903009	WITHOUT_CLASSIFICATION	3.7109699108670297E-8	DEFECT
// TOP	WITHOUT_CLASSIFICATION	0.999831114337502	WITHOUT_CLASSIFICATION	1.6888566249787665E-4	DEFECT
// TOP	WITHOUT_CLASSIFICATION	0.999831114337502	WITHOUT_CLASSIFICATION	1.6888566249787665E-4	DEFECT
// TOP	WITHOUT_CLASSIFICATION	0.999831114337502	WITHOUT_CLASSIFICATION	1.6888566249787665E-4	DEFECT
// BOTTOM	WITHOUT_CLASSIFICATION	0.9998231249167737	WITHOUT_CLASSIFICATION	1.7687508322618907E-4	DEFECT
// BOTTOM	WITHOUT_CLASSIFICATION	0.9998231249167737	WITHOUT_CLASSIFICATION	1.7687508322618907E-4	DEFECT
// BOTTOM	WITHOUT_CLASSIFICATION	0.9998231249167737	WITHOUT_CLASSIFICATION	1.7687508322618907E-4	DEFECT
// LEFT	WITHOUT_CLASSIFICATION	0.9999856600060854	WITHOUT_CLASSIFICATION	1.4339993914731353E-5	DEFECT
// LEFT	WITHOUT_CLASSIFICATION	0.9999856600060854	WITHOUT_CLASSIFICATION	1.4339993914731353E-5	DEFECT
// LEFT	WITHOUT_CLASSIFICATION	0.9999856600060854	WITHOUT_CLASSIFICATION	1.4339993914731353E-5	DEFECT
// RIGHT	WITHOUT_CLASSIFICATION	0.9999935865788444	WITHOUT_CLASSIFICATION	6.413421155533617E-6	DEFECT
// RIGHT	WITHOUT_CLASSIFICATION	0.9999935865788444	WITHOUT_CLASSIFICATION	6.413421155533617E-6	DEFECT
// no plot, no data	WITHOUT_CLASSIFICATION	0.9999990049716634	WITHOUT_CLASSIFICATION	9.950283366248535E-7	DEFECT
// no plot, no data	WITHOUT_CLASSIFICATION	0.9999990049716634	WITHOUT_CLASSIFICATION	9.950283366248535E-7	DEFECT
// if fixed auto range, then derive lower bound...	WITHOUT_CLASSIFICATION	0.9999891435444145	WITHOUT_CLASSIFICATION	1.085645558557483E-5	DEFECT
// ensure the autorange is at least <minRange> in size...	WITHOUT_CLASSIFICATION	0.9999959002217081	WITHOUT_CLASSIFICATION	4.099778291948933E-6	DEFECT
// ensure the autorange is at least <minRange> in size...	WITHOUT_CLASSIFICATION	0.9999959002217081	WITHOUT_CLASSIFICATION	4.099778291948933E-6	DEFECT
// if the axis is not visible, don't draw it...	WITHOUT_CLASSIFICATION	0.999974105249075	WITHOUT_CLASSIFICATION	2.589475092497051E-5	DEFECT
// even though the axis is not visible, we need ticks for the // gridlines...	WITHOUT_CLASSIFICATION	0.9999904837832179	WITHOUT_CLASSIFICATION	9.51621678216447E-6	DEFECT
// look at lower and upper bounds...	WITHOUT_CLASSIFICATION	0.9999990698137596	WITHOUT_CLASSIFICATION	9.301862404541817E-7	DEFECT
// draw the tick marks and labels...	WITHOUT_CLASSIFICATION	0.9999976311498092	WITHOUT_CLASSIFICATION	2.368850190836306E-6	DEFECT
// TOP	WITHOUT_CLASSIFICATION	0.999831114337502	WITHOUT_CLASSIFICATION	1.6888566249787665E-4	DEFECT
// BOTTOM	WITHOUT_CLASSIFICATION	0.9998231249167737	WITHOUT_CLASSIFICATION	1.7687508322618907E-4	DEFECT
// BOTTOM	WITHOUT_CLASSIFICATION	0.9998231249167737	WITHOUT_CLASSIFICATION	1.7687508322618907E-4	DEFECT
// LEFT	WITHOUT_CLASSIFICATION	0.9999856600060854	WITHOUT_CLASSIFICATION	1.4339993914731353E-5	DEFECT
// LEFT	WITHOUT_CLASSIFICATION	0.9999856600060854	WITHOUT_CLASSIFICATION	1.4339993914731353E-5	DEFECT
// RIGHT	WITHOUT_CLASSIFICATION	0.9999935865788444	WITHOUT_CLASSIFICATION	6.413421155533617E-6	DEFECT
// RIGHT	WITHOUT_CLASSIFICATION	0.9999935865788444	WITHOUT_CLASSIFICATION	6.413421155533617E-6	DEFECT
// first check that autoPopulate==false works as expected	WITHOUT_CLASSIFICATION	0.9999940638320292	WITHOUT_CLASSIFICATION	5.93616797089423E-6	DEFECT
// default make height of plotArea	WITHOUT_CLASSIFICATION	0.9999970509143338	WITHOUT_CLASSIFICATION	2.9490856661900955E-6	DEFECT
// allow fixed thickness	WITHOUT_CLASSIFICATION	0.9999698589949237	WITHOUT_CLASSIFICATION	3.01410050762129E-5	DEFECT
// update, but dont draw tick marks (needed for stepped colors)	WITHOUT_CLASSIFICATION	0.9999997587779875	WITHOUT_CLASSIFICATION	2.4122201243958075E-7	DEFECT
// suppresses compiler warnings	WITHOUT_CLASSIFICATION	0.999998385429974	WITHOUT_CLASSIFICATION	1.6145700259795218E-6	DEFECT
// setTickValues was missing from ColorPalette v. 0.96 //colorPalette.setTickValues(this.axis.getTicks());	WITHOUT_CLASSIFICATION	0.9999987885031532	WITHOUT_CLASSIFICATION	1.2114968468720756E-6	DEFECT
// calculate the adjusted data area taking into account the 3D effect...	WITHOUT_CLASSIFICATION	0.9999726297173738	WITHOUT_CLASSIFICATION	2.7370282626301733E-5	DEFECT
// argument checking delegated...	WITHOUT_CLASSIFICATION	0.9999994865812032	WITHOUT_CLASSIFICATION	5.134187968405951E-7	DEFECT
// transparent	WITHOUT_CLASSIFICATION	0.9999991754086032	WITHOUT_CLASSIFICATION	8.245913967909068E-7	DEFECT
//gets the outline stroke width of the plot	WITHOUT_CLASSIFICATION	0.9999972207989987	WITHOUT_CLASSIFICATION	2.7792010013031096E-6	DEFECT
// ensure that all the symbols are displayed	WITHOUT_CLASSIFICATION	0.9999949119509661	WITHOUT_CLASSIFICATION	5.088049033892542E-6	DEFECT
// this ensure that the grid bands will be displayed correctly.	WITHOUT_CLASSIFICATION	0.9999353856177898	WITHOUT_CLASSIFICATION	6.461438221015067E-5	DEFECT
// avoid to draw overlapping tick labels	WITHOUT_CLASSIFICATION	0.999999022233746	WITHOUT_CLASSIFICATION	9.777662540145857E-7	DEFECT
// avoid to draw overlapping tick labels	WITHOUT_CLASSIFICATION	0.999999022233746	WITHOUT_CLASSIFICATION	9.777662540145857E-7	DEFECT
// don't draw this tick label	WITHOUT_CLASSIFICATION	0.999876196293514	WITHOUT_CLASSIFICATION	1.238037064860075E-4	DEFECT
// don't draw this tick label	WITHOUT_CLASSIFICATION	0.999876196293514	WITHOUT_CLASSIFICATION	1.238037064860075E-4	DEFECT
// remember these values for next comparison	WITHOUT_CLASSIFICATION	0.9999974348106849	WITHOUT_CLASSIFICATION	2.5651893150814375E-6	DEFECT
// remember these values for next comparison	WITHOUT_CLASSIFICATION	0.9999974348106849	WITHOUT_CLASSIFICATION	2.5651893150814375E-6	DEFECT
// first check that autoPopulate==false works as expected	WITHOUT_CLASSIFICATION	0.9999940638320292	WITHOUT_CLASSIFICATION	5.93616797089423E-6	DEFECT
// if the axis is not visible, don't draw it...	WITHOUT_CLASSIFICATION	0.999974105249075	WITHOUT_CLASSIFICATION	2.589475092497051E-5	DEFECT
// even though the axis is not visible, we need ticks for the // gridlines...	WITHOUT_CLASSIFICATION	0.9999904837832179	WITHOUT_CLASSIFICATION	9.51621678216447E-6	DEFECT
// all tick labels have the same width (equal to the height of the // font)...	WITHOUT_CLASSIFICATION	0.9999986043836282	WITHOUT_CLASSIFICATION	1.3956163717949667E-6	DEFECT
// draw the category labels and axis label	WITHOUT_CLASSIFICATION	0.9999977819941396	WITHOUT_CLASSIFICATION	2.218005860372496E-6	DEFECT
// create a new space object if one wasn't supplied...	WITHOUT_CLASSIFICATION	0.9999998052194982	WITHOUT_CLASSIFICATION	1.9478050180005607E-7	DEFECT
// if the axis is not visible, no additional space is required...	WITHOUT_CLASSIFICATION	0.9999995634113691	WITHOUT_CLASSIFICATION	4.3658863091590427E-7	DEFECT
// start with the current tick unit...	WITHOUT_CLASSIFICATION	0.9999998027312283	WITHOUT_CLASSIFICATION	1.9726877165213012E-7	DEFECT
// start with the current tick unit...	WITHOUT_CLASSIFICATION	0.9999998027312283	WITHOUT_CLASSIFICATION	1.9726877165213012E-7	DEFECT
// then extrapolate...	WITHOUT_CLASSIFICATION	0.9999969677136966	WITHOUT_CLASSIFICATION	3.0322863033484547E-6	DEFECT
// then extrapolate...	WITHOUT_CLASSIFICATION	0.9999969677136966	WITHOUT_CLASSIFICATION	3.0322863033484547E-6	DEFECT
// check a series with no items	WITHOUT_CLASSIFICATION	0.9999991008344373	WITHOUT_CLASSIFICATION	8.991655627600576E-7	DEFECT
// must be top or bottom	WITHOUT_CLASSIFICATION	0.999979856409044	WITHOUT_CLASSIFICATION	2.0143590955997547E-5	DEFECT
// catches null also	WITHOUT_CLASSIFICATION	0.9999913417511941	WITHOUT_CLASSIFICATION	8.658248805861706E-6	DEFECT
// no action required.	WITHOUT_CLASSIFICATION	0.9999986567649496	WITHOUT_CLASSIFICATION	1.3432350504904344E-6	DEFECT
// no action required.	WITHOUT_CLASSIFICATION	0.9999986567649496	WITHOUT_CLASSIFICATION	1.3432350504904344E-6	DEFECT
// check if we need to collect chart entities from the container	WITHOUT_CLASSIFICATION	0.9999998692922192	WITHOUT_CLASSIFICATION	1.3070778085029067E-7	DEFECT
// place in this row (truncated) anyway	WITHOUT_CLASSIFICATION	0.9999877810817949	WITHOUT_CLASSIFICATION	1.2218918205235251E-5	DEFECT
// start new row	WITHOUT_CLASSIFICATION	0.9999995627605354	WITHOUT_CLASSIFICATION	4.372394646316998E-7	DEFECT
//Block b = (Block) blocks.get(i);	WITHOUT_CLASSIFICATION	0.9999828149425902	WITHOUT_CLASSIFICATION	1.7185057409767253E-5	DEFECT
// can safely ignore	WITHOUT_CLASSIFICATION	0.9999972037700249	WITHOUT_CLASSIFICATION	2.796229975233903E-6	DEFECT
// find optimum height, then map to range	WITHOUT_CLASSIFICATION	0.9999978509478817	WITHOUT_CLASSIFICATION	2.1490521182732842E-6	DEFECT
// find optimum height	WITHOUT_CLASSIFICATION	0.9999899601194759	WITHOUT_CLASSIFICATION	1.0039880524089727E-5	DEFECT
// find optimum height	WITHOUT_CLASSIFICATION	0.9999899601194759	WITHOUT_CLASSIFICATION	1.0039880524089727E-5	DEFECT
// find optimum height and map to range	WITHOUT_CLASSIFICATION	0.9999980022579145	WITHOUT_CLASSIFICATION	1.9977420855859385E-6	DEFECT
// find optimum width and map to range	WITHOUT_CLASSIFICATION	0.9999979117335973	WITHOUT_CLASSIFICATION	2.0882664026377577E-6	DEFECT
// check a series with no items	WITHOUT_CLASSIFICATION	0.9999991008344373	WITHOUT_CLASSIFICATION	8.991655627600576E-7	DEFECT
// check a series with no items	WITHOUT_CLASSIFICATION	0.9999991008344373	WITHOUT_CLASSIFICATION	8.991655627600576E-7	DEFECT
// since the flow layout is relatively straightforward, // no information needs to be recorded here	WITHOUT_CLASSIFICATION	0.9999996022993733	WITHOUT_CLASSIFICATION	3.97700626696774E-7	DEFECT
// no action required.	WITHOUT_CLASSIFICATION	0.9999986567649496	WITHOUT_CLASSIFICATION	1.3432350504904344E-6	DEFECT
// first arrange without constraints, and see if this fits within // the required ranges...	WITHOUT_CLASSIFICATION	0.9999997172267457	WITHOUT_CLASSIFICATION	2.8277325428730435E-7	DEFECT
// first arrange without constraints, then see if the width fits // within the required range...if not, call arrangeFN() at max width	WITHOUT_CLASSIFICATION	0.9999994682136032	WITHOUT_CLASSIFICATION	5.317863968404823E-7	DEFECT
// first arrange without constraints, then see if the width fits // within the required range...if not, call arrangeFN() at max width	WITHOUT_CLASSIFICATION	0.9999994682136032	WITHOUT_CLASSIFICATION	5.317863968404823E-7	DEFECT
// check if we need to collect chart entities from the container	WITHOUT_CLASSIFICATION	0.9999998692922192	WITHOUT_CLASSIFICATION	1.3070778085029067E-7	DEFECT
//Block b = (Block) blocks.get(i);	WITHOUT_CLASSIFICATION	0.9999828149425902	WITHOUT_CLASSIFICATION	1.7185057409767253E-5	DEFECT
// this default implementation will just fill the available // border space with a single color	WITHOUT_CLASSIFICATION	0.999996518743432	WITHOUT_CLASSIFICATION	3.481256568064022E-6	DEFECT
// backgroundImage	WITHOUT_CLASSIFICATION	0.9999984460351139	WITHOUT_CLASSIFICATION	1.5539648860776786E-6	DEFECT
// fixed width	WITHOUT_CLASSIFICATION	0.9999593932108571	WITHOUT_CLASSIFICATION	4.0606789142912384E-5	DEFECT
// width is OK, but height must be constrained	WITHOUT_CLASSIFICATION	0.9999298929105951	WITHOUT_CLASSIFICATION	7.010708940492111E-5	DEFECT
// height is OK, but width must be constrained	WITHOUT_CLASSIFICATION	0.9998093515414933	WITHOUT_CLASSIFICATION	1.90648458506783E-4	DEFECT
// nothing to clear	WITHOUT_CLASSIFICATION	0.9999990643446843	WITHOUT_CLASSIFICATION	9.356553157475543E-7	DEFECT
// if the area has zero height or width, we shouldn't draw anything	WITHOUT_CLASSIFICATION	0.999996303092203	WITHOUT_CLASSIFICATION	3.696907796942284E-6	DEFECT
// since the flow layout is relatively straightforward, no information // needs to be recorded here	WITHOUT_CLASSIFICATION	0.9999995040302424	WITHOUT_CLASSIFICATION	4.959697576296183E-7	DEFECT
// place in this column (truncated) anyway	WITHOUT_CLASSIFICATION	0.999987832303663	WITHOUT_CLASSIFICATION	1.2167696337058526E-5	DEFECT
// start new column	WITHOUT_CLASSIFICATION	0.9999996833326679	WITHOUT_CLASSIFICATION	3.1666733222107263E-7	DEFECT
// set a theme using the new shadow generator feature available in // 1.0.14 - for backwards compatibility it is not enabled by default	WITHOUT_CLASSIFICATION	0.9999999636925156	WITHOUT_CLASSIFICATION	3.6307484299674325E-8	DEFECT
/* x-axis label*/	WITHOUT_CLASSIFICATION	0.9999944754624053	WITHOUT_CLASSIFICATION	5.52453759465396E-6	DEFECT
/* y-axis label */	WITHOUT_CLASSIFICATION	0.9999938276644622	WITHOUT_CLASSIFICATION	6.172335537718613E-6	DEFECT
// chart title // data // no legend // tooltips // no URL generation	WITHOUT_CLASSIFICATION	0.9999998400748825	WITHOUT_CLASSIFICATION	1.5992511750707516E-7	DEFECT
// check a series with one item	WITHOUT_CLASSIFICATION	0.9999987786155445	WITHOUT_CLASSIFICATION	1.2213844554816616E-6	DEFECT
// ****************************************************************** //  More than 150 demo applications are included with the JFreeChart //  Developer Guide...for more information, see: // //  >   http://www.object-refinery.com/jfreechart/guide.html // // ******************************************************************	WITHOUT_CLASSIFICATION	0.9999992060569141	WITHOUT_CLASSIFICATION	7.939430858756882E-7	DEFECT
// title // x-axis label // y-axis label // data // create legend? // generate tooltips? // generate URLs?	WITHOUT_CLASSIFICATION	0.9999980157058403	WITHOUT_CLASSIFICATION	1.9842941596438923E-6	DEFECT
// set a custom background for the chart	WITHOUT_CLASSIFICATION	0.999999971826402	WITHOUT_CLASSIFICATION	2.8173597982602644E-8	DEFECT
// customise the title position and font	WITHOUT_CLASSIFICATION	0.9999994322526705	WITHOUT_CLASSIFICATION	5.677473294277806E-7	DEFECT
// use gradients and white borders for the section colours	WITHOUT_CLASSIFICATION	0.9999999177160244	WITHOUT_CLASSIFICATION	8.228397556856082E-8	DEFECT
// customise the section label appearance	WITHOUT_CLASSIFICATION	0.9999983504889612	WITHOUT_CLASSIFICATION	1.6495110387913764E-6	DEFECT
// add a subtitle giving the data source	WITHOUT_CLASSIFICATION	0.9999998525102103	WITHOUT_CLASSIFICATION	1.4748978972122172E-7	DEFECT
// pass to the super-class for handling	WITHOUT_CLASSIFICATION	0.9999998648390064	WITHOUT_CLASSIFICATION	1.351609935976869E-7	DEFECT
// pass to the super-class for handling	WITHOUT_CLASSIFICATION	0.9999998648390064	WITHOUT_CLASSIFICATION	1.351609935976869E-7	DEFECT
// pass to the super-class for handling	WITHOUT_CLASSIFICATION	0.9999998648390064	WITHOUT_CLASSIFICATION	1.351609935976869E-7	DEFECT
// don't need to do anything	WITHOUT_CLASSIFICATION	0.9999610091470453	WITHOUT_CLASSIFICATION	3.899085295468364E-5	DEFECT
// don't need to do anything	WITHOUT_CLASSIFICATION	0.9999610091470453	WITHOUT_CLASSIFICATION	3.899085295468364E-5	DEFECT
//    /** Insets text field. */ //    private InsetsTextField tickLabelInsetsTextField; // //    /** Label insets text field. */ //    private InsetsTextField labelInsetsTextField;	WITHOUT_CLASSIFICATION	0.9999992125146058	WITHOUT_CLASSIFICATION	7.874853942468052E-7	DEFECT
// figure out what type of axis we have and instantiate the // appropriate panel	WITHOUT_CLASSIFICATION	0.9999874235307181	WITHOUT_CLASSIFICATION	1.2576469281945202E-5	DEFECT
// Insets values	WITHOUT_CLASSIFICATION	0.9999989966804945	WITHOUT_CLASSIFICATION	1.0033195054963758E-6	DEFECT
// axis.setTickMarkStroke(getTickMarkStroke());	WITHOUT_CLASSIFICATION	0.9999971100505299	WITHOUT_CLASSIFICATION	2.8899494701542144E-6	DEFECT
// create a panel for the settings...	WITHOUT_CLASSIFICATION	0.9999998888224426	WITHOUT_CLASSIFICATION	1.1117755750792049E-7	DEFECT
//dmo: added this panel for colorbar control. (start dmo additions)	WITHOUT_CLASSIFICATION	0.9999581509358013	WITHOUT_CLASSIFICATION	4.1849064198740215E-5	DEFECT
//      end fix by rfuller	WITHOUT_CLASSIFICATION	0.9997179687396865	WITHOUT_CLASSIFICATION	2.8203126031336095E-4	DEFECT
//dmo: (end dmo additions)	WITHOUT_CLASSIFICATION	0.9998366906453022	WITHOUT_CLASSIFICATION	1.633093546977756E-4	DEFECT
// set the plot properties...	WITHOUT_CLASSIFICATION	0.9999992825614008	WITHOUT_CLASSIFICATION	7.174385991347013E-7	DEFECT
// then the axis properties...	WITHOUT_CLASSIFICATION	0.9999919315500246	WITHOUT_CLASSIFICATION	8.068449975349861E-6	DEFECT
// pass to super-class for handling	WITHOUT_CLASSIFICATION	0.9999997796988952	WITHOUT_CLASSIFICATION	2.2030110472168135E-7	DEFECT
//  No op	WITHOUT_CLASSIFICATION	0.999995481086896	WITHOUT_CLASSIFICATION	4.518913104068316E-6	DEFECT
//  No op	WITHOUT_CLASSIFICATION	0.999995481086896	WITHOUT_CLASSIFICATION	4.518913104068316E-6	DEFECT
// defer argument checks...	WITHOUT_CLASSIFICATION	0.9999987474771538	WITHOUT_CLASSIFICATION	1.2525228462239326E-6	DEFECT
//      fix by rfuller	WITHOUT_CLASSIFICATION	0.9996385417504262	WITHOUT_CLASSIFICATION	3.6145824957378134E-4	DEFECT
// populate the deprecated fields	WITHOUT_CLASSIFICATION	0.9999994613450348	WITHOUT_CLASSIFICATION	5.38654965160357E-7	DEFECT
//same as for ChartEntity!	WITHOUT_CLASSIFICATION	0.999988288992438	WITHOUT_CLASSIFICATION	1.1711007561996687E-5	DEFECT
//same as for ChartEntity!	WITHOUT_CLASSIFICATION	0.999988288992438	WITHOUT_CLASSIFICATION	1.1711007561996687E-5	DEFECT
//same as for ChartEntity!	WITHOUT_CLASSIFICATION	0.999988288992438	WITHOUT_CLASSIFICATION	1.1711007561996687E-5	DEFECT
// update the deprecated field	WITHOUT_CLASSIFICATION	0.9999990874994972	WITHOUT_CLASSIFICATION	9.125005027738429E-7	DEFECT
// update the deprecated fields	WITHOUT_CLASSIFICATION	0.9999997484224536	WITHOUT_CLASSIFICATION	2.51577546346999E-7	DEFECT
// check the deprecated fields	WITHOUT_CLASSIFICATION	0.9999996158976494	WITHOUT_CLASSIFICATION	3.8410235061279695E-7	DEFECT
// try the parent plot	WITHOUT_CLASSIFICATION	0.9999980440669314	WITHOUT_CLASSIFICATION	1.9559330685067157E-6	DEFECT
// do not notify while zooming each axis	WITHOUT_CLASSIFICATION	0.9999891267078651	WITHOUT_CLASSIFICATION	1.0873292134831895E-5	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999874693337447	WITHOUT_CLASSIFICATION	1.2530666255248155E-5	DEFECT
// this generates the change event too	WITHOUT_CLASSIFICATION	0.9999961326044431	WITHOUT_CLASSIFICATION	3.867395556949681E-6	DEFECT
/* x-axis label*/	WITHOUT_CLASSIFICATION	0.9999944754624053	WITHOUT_CLASSIFICATION	5.52453759465396E-6	DEFECT
/* y-axis label */	WITHOUT_CLASSIFICATION	0.9999938276644622	WITHOUT_CLASSIFICATION	6.172335537718613E-6	DEFECT
// set a custom background for the chart	WITHOUT_CLASSIFICATION	0.999999971826402	WITHOUT_CLASSIFICATION	2.8173597982602644E-8	DEFECT
// customise the title position and font	WITHOUT_CLASSIFICATION	0.9999994322526705	WITHOUT_CLASSIFICATION	5.677473294277806E-7	DEFECT
// use gradients and white borders for the section colours	WITHOUT_CLASSIFICATION	0.9999999177160244	WITHOUT_CLASSIFICATION	8.228397556856082E-8	DEFECT
// customise the section label appearance	WITHOUT_CLASSIFICATION	0.9999983504889612	WITHOUT_CLASSIFICATION	1.6495110387913764E-6	DEFECT
// add a subtitle giving the data source	WITHOUT_CLASSIFICATION	0.9999998525102103	WITHOUT_CLASSIFICATION	1.4748978972122172E-7	DEFECT
//same as for ChartEntity!	WITHOUT_CLASSIFICATION	0.999988288992438	WITHOUT_CLASSIFICATION	1.1711007561996687E-5	DEFECT
//dmo added //dmo added	WITHOUT_CLASSIFICATION	0.9998437445099286	WITHOUT_CLASSIFICATION	1.5625549007133098E-4	DEFECT
// if there is a tool tip, we expect it to generate the title and // alt values, so we only add an empty alt if there is no tooltip	WITHOUT_CLASSIFICATION	0.9999961383438062	WITHOUT_CLASSIFICATION	3.861656193711004E-6	DEFECT
// check a series with two items	WITHOUT_CLASSIFICATION	0.9999992636891374	WITHOUT_CLASSIFICATION	7.363108627082653E-7	DEFECT
// FIXME	WITHOUT_CLASSIFICATION	0.8839107171292766	WITHOUT_CLASSIFICATION	0.1160892828707233	DEFECT
// this is a paint we don't recognise	WITHOUT_CLASSIFICATION	0.9997715537323929	WITHOUT_CLASSIFICATION	2.2844626760707098E-4	DEFECT
// null is handled fine here...	WITHOUT_CLASSIFICATION	0.9999851748774238	WITHOUT_CLASSIFICATION	1.4825122576151699E-5	DEFECT
// we can't do anything	WITHOUT_CLASSIFICATION	0.9998289707101533	WITHOUT_CLASSIFICATION	1.710292898466184E-4	DEFECT
// force a redraw	WITHOUT_CLASSIFICATION	0.9999989907093347	WITHOUT_CLASSIFICATION	1.009290665278222E-6	DEFECT
// pass on the event to the auxiliary handlers	WITHOUT_CLASSIFICATION	0.9999997507990169	WITHOUT_CLASSIFICATION	2.492009831040342E-7	DEFECT
// pass on the event to the auxiliary handlers	WITHOUT_CLASSIFICATION	0.9999997507990169	WITHOUT_CLASSIFICATION	2.492009831040342E-7	DEFECT
// relay the event from the canvas to our registered listeners	WITHOUT_CLASSIFICATION	0.9999996082621814	WITHOUT_CLASSIFICATION	3.917378186339739E-7	DEFECT
// relay the event from the canvas to our registered listeners	WITHOUT_CLASSIFICATION	0.9999996082621814	WITHOUT_CLASSIFICATION	3.917378186339739E-7	DEFECT
// set the default stroke for all series	WITHOUT_CLASSIFICATION	0.9999996759753633	WITHOUT_CLASSIFICATION	3.2402463668441363E-7	DEFECT
//this.chartPanel.isDomainZoomable()) {	WITHOUT_CLASSIFICATION	0.9999981199278423	WITHOUT_CLASSIFICATION	1.8800721577589224E-6	DEFECT
//this.chartPanel.isRangeZoomable()) {	WITHOUT_CLASSIFICATION	0.9999984044299082	WITHOUT_CLASSIFICATION	1.5955700917931194E-6	DEFECT
// does nothing unless overridden	WITHOUT_CLASSIFICATION	0.9999827476377087	WITHOUT_CLASSIFICATION	1.725236229135789E-5	DEFECT
// does nothing unless overridden	WITHOUT_CLASSIFICATION	0.9999827476377087	WITHOUT_CLASSIFICATION	1.725236229135789E-5	DEFECT
// does nothing unless overridden        	WITHOUT_CLASSIFICATION	0.9999742006992969	WITHOUT_CLASSIFICATION	2.5799300703145992E-5	DEFECT
// selected rectangle shouldn't extend outside the data area...	WITHOUT_CLASSIFICATION	0.9999995716676898	WITHOUT_CLASSIFICATION	4.2833231019245985E-7	DEFECT
// for mouseReleased event, (horizontalZoom || verticalZoom) // will be true, so we can just test for either being false; // otherwise both are true	WITHOUT_CLASSIFICATION	0.9999956510896204	WITHOUT_CLASSIFICATION	4.348910379564981E-6	DEFECT
// chart title // data // no legend // tooltips // no URL generation	WITHOUT_CLASSIFICATION	0.9999998400748825	WITHOUT_CLASSIFICATION	1.5992511750707516E-7	DEFECT
// does nothing unless overridden	WITHOUT_CLASSIFICATION	0.9999827476377087	WITHOUT_CLASSIFICATION	1.725236229135789E-5	DEFECT
// special case - if the underlying rectangle uses ints we // need to create one that uses doubles	WITHOUT_CLASSIFICATION	0.999999975254662	WITHOUT_CLASSIFICATION	2.474533798560811E-8	DEFECT
// title // x-axis label // y-axis label	WITHOUT_CLASSIFICATION	0.9999969112887979	WITHOUT_CLASSIFICATION	3.0887112022200214E-6	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999874693337447	WITHOUT_CLASSIFICATION	1.2530666255248155E-5	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999874693337447	WITHOUT_CLASSIFICATION	1.2530666255248155E-5	DEFECT
// check a series with four items	WITHOUT_CLASSIFICATION	0.9999993205047079	WITHOUT_CLASSIFICATION	6.794952921148928E-7	DEFECT
// the actual panning occurs later in the mouseDragged() method	WITHOUT_CLASSIFICATION	0.999923743413378	WITHOUT_CLASSIFICATION	7.625658662200287E-5	DEFECT
//handle panning if we have a start point else unregister	WITHOUT_CLASSIFICATION	0.9999981588760922	WITHOUT_CLASSIFICATION	1.841123907699219E-6	DEFECT
//if we have been panning reset the cursor //unregister in any case	WITHOUT_CLASSIFICATION	0.9999114298883669	WITHOUT_CLASSIFICATION	8.857011163307732E-5	DEFECT
// the URL text should already have been escaped by the URL generator	WITHOUT_CLASSIFICATION	0.9999869120006551	WITHOUT_CLASSIFICATION	1.3087999344885902E-5	DEFECT
// no fields to test	WITHOUT_CLASSIFICATION	0.9999982765504161	WITHOUT_CLASSIFICATION	1.7234495839161916E-6	DEFECT
/// we have rotation huston, please spin me	WITHOUT_CLASSIFICATION	0.9999955003984328	WITHOUT_CLASSIFICATION	4.499601567210749E-6	DEFECT
/// we have rotation huston, please spin me	WITHOUT_CLASSIFICATION	0.9999955003984328	WITHOUT_CLASSIFICATION	4.499601567210749E-6	DEFECT
/// we have rotation	WITHOUT_CLASSIFICATION	0.9999721597540407	WITHOUT_CLASSIFICATION	2.784024595922124E-5	DEFECT
/// we have rotation	WITHOUT_CLASSIFICATION	0.9999721597540407	WITHOUT_CLASSIFICATION	2.784024595922124E-5	DEFECT
/// we have rotation	WITHOUT_CLASSIFICATION	0.9999721597540407	WITHOUT_CLASSIFICATION	2.784024595922124E-5	DEFECT
// isArrowAtTop	WITHOUT_CLASSIFICATION	0.999959774856872	WITHOUT_CLASSIFICATION	4.022514312797511E-5	DEFECT
//int maxX = (int) (plotArea.getMaxX());	WITHOUT_CLASSIFICATION	0.999971363701487	WITHOUT_CLASSIFICATION	2.8636298513032515E-5	DEFECT
//int maxX = (int) (plotArea.getMaxX());	WITHOUT_CLASSIFICATION	0.999971363701487	WITHOUT_CLASSIFICATION	2.8636298513032515E-5	DEFECT
//int midY = (int) (plotArea.getMinY() + (plotArea.getHeight() / 2));	WITHOUT_CLASSIFICATION	0.9999838413662683	WITHOUT_CLASSIFICATION	1.6158633731777206E-5	DEFECT
//int midY = (int) (plotArea.getMinY() + (plotArea.getHeight() / 2));	WITHOUT_CLASSIFICATION	0.9999838413662683	WITHOUT_CLASSIFICATION	1.6158633731777206E-5	DEFECT
/// we have rotation houston, please spin me	WITHOUT_CLASSIFICATION	0.9999912802801758	WITHOUT_CLASSIFICATION	8.719719824189706E-6	DEFECT
// horizontal	WITHOUT_CLASSIFICATION	0.9999943005004344	WITHOUT_CLASSIFICATION	5.699499565532198E-6	DEFECT
// store the plot and its weight	WITHOUT_CLASSIFICATION	0.9999994610705798	WITHOUT_CLASSIFICATION	5.389294201458958E-7	DEFECT
// configure the range axis...	WITHOUT_CLASSIFICATION	0.9999979353268739	WITHOUT_CLASSIFICATION	2.0646731261158585E-6	DEFECT
// work out the space required by the domain axis...	WITHOUT_CLASSIFICATION	0.9999985675172536	WITHOUT_CLASSIFICATION	1.4324827463316364E-6	DEFECT
// work out the maximum height or width of the non-shared axes...	WITHOUT_CLASSIFICATION	0.9999992238590696	WITHOUT_CLASSIFICATION	7.761409303644239E-7	DEFECT
// we expect the line to be vertical or horizontal // vertical	WITHOUT_CLASSIFICATION	0.9999926092938405	WITHOUT_CLASSIFICATION	7.390706159508636E-6	DEFECT
// calculate plotAreas of all sub-plots, maximum vertical/horizontal // axis width/height	WITHOUT_CLASSIFICATION	0.9999992261065465	WITHOUT_CLASSIFICATION	7.73893453603626E-7	DEFECT
// calculate sub-plot area	WITHOUT_CLASSIFICATION	0.9999972437026886	WITHOUT_CLASSIFICATION	2.756297311326717E-6	DEFECT
// adjust the drawing area for plot insets (if any)...	WITHOUT_CLASSIFICATION	0.9999997382433852	WITHOUT_CLASSIFICATION	2.617566147725847E-7	DEFECT
// calculate the data area...	WITHOUT_CLASSIFICATION	0.9999951961864652	WITHOUT_CLASSIFICATION	4.803813534916271E-6	DEFECT
// set the width and height of non-shared axis of all sub-plots	WITHOUT_CLASSIFICATION	0.9999999516424997	WITHOUT_CLASSIFICATION	4.835750036462481E-8	DEFECT
// draw the shared axis	WITHOUT_CLASSIFICATION	0.999998039878336	WITHOUT_CLASSIFICATION	1.9601216639774396E-6	DEFECT
// draw all the charts	WITHOUT_CLASSIFICATION	0.9999993695882968	WITHOUT_CLASSIFICATION	6.304117031366863E-7	DEFECT
// the range axis is deserialized before the subplots, so its value // range is likely to be incorrect...	WITHOUT_CLASSIFICATION	0.999994708879981	WITHOUT_CLASSIFICATION	5.291120018989221E-6	DEFECT
// default preserves previous // behaviour	WITHOUT_CLASSIFICATION	0.9999991205279385	WITHOUT_CLASSIFICATION	8.794720614776568E-7	DEFECT
// adjust for insets...	WITHOUT_CLASSIFICATION	0.9999875402365611	WITHOUT_CLASSIFICATION	1.2459763438857327E-5	DEFECT
// make the link area a square if the pie chart is to be circular... // is circular?	WITHOUT_CLASSIFICATION	0.9999885894834386	WITHOUT_CLASSIFICATION	1.1410516561432976E-5	DEFECT
// the link area defines the dog leg points for the linking lines to // the labels	WITHOUT_CLASSIFICATION	0.9999995113962951	WITHOUT_CLASSIFICATION	4.886037048684111E-7	DEFECT
// the explode area defines the max circle/ellipse for the exploded pie // sections. // it is defined by shrinking the linkArea by the linkMargin factor.	WITHOUT_CLASSIFICATION	0.9999974894458923	WITHOUT_CLASSIFICATION	2.5105541077865626E-6	DEFECT
// the pie area defines the circle/ellipse for regular pie sections. // it is defined by shrinking the explodeArea by the explodeMargin // factor.	WITHOUT_CLASSIFICATION	0.9999990455695148	WITHOUT_CLASSIFICATION	9.54430485193591E-7	DEFECT
// the link area defines the dog-leg point for the linking lines to // the labels	WITHOUT_CLASSIFICATION	0.9999995576278167	WITHOUT_CLASSIFICATION	4.4237218333054755E-7	DEFECT
// get the data source - return if null;	WITHOUT_CLASSIFICATION	0.9999996115430184	WITHOUT_CLASSIFICATION	3.88456981608456E-7	DEFECT
// if too any elements	WITHOUT_CLASSIFICATION	0.9999959000134163	WITHOUT_CLASSIFICATION	4.0999865836721E-6	DEFECT
// get a list of keys...	WITHOUT_CLASSIFICATION	0.9999943228444956	WITHOUT_CLASSIFICATION	5.677155504304015E-6	DEFECT
// do nothing by default.	WITHOUT_CLASSIFICATION	0.9999846483865775	WITHOUT_CLASSIFICATION	1.5351613422513935E-5	DEFECT
//g2.clip(clipArea);	WITHOUT_CLASSIFICATION	0.9999944070119524	WITHOUT_CLASSIFICATION	5.592988047606486E-6	DEFECT
// if depth is negative don't draw anything	WITHOUT_CLASSIFICATION	0.9999508035031809	WITHOUT_CLASSIFICATION	4.919649681909789E-5	DEFECT
// draw the bottom circle	WITHOUT_CLASSIFICATION	0.9999977318663574	WITHOUT_CLASSIFICATION	2.2681336425208933E-6	DEFECT
// draw the height	WITHOUT_CLASSIFICATION	0.9999970977064951	WITHOUT_CLASSIFICATION	2.9022935048916698E-6	DEFECT
// cycle through once drawing only the sides at the back...	WITHOUT_CLASSIFICATION	0.9999998071250954	WITHOUT_CLASSIFICATION	1.9287490466069087E-7	DEFECT
// cycle through again drawing only the sides at the front...	WITHOUT_CLASSIFICATION	0.9999996082990167	WITHOUT_CLASSIFICATION	3.917009832755992E-7	DEFECT
// add a tooltip for the section...	WITHOUT_CLASSIFICATION	0.9999997459115701	WITHOUT_CLASSIFICATION	2.540884298808869E-7	DEFECT
// @mgs: using the method's return value was missing	WITHOUT_CLASSIFICATION	0.9999592353882268	WITHOUT_CLASSIFICATION	4.07646117730724E-5	DEFECT
// for CLOCKWISE charts, the extent will be negative...	WITHOUT_CLASSIFICATION	0.9999985315640078	WITHOUT_CLASSIFICATION	1.4684359921434138E-6	DEFECT
// start at front	WITHOUT_CLASSIFICATION	0.9999987625800492	WITHOUT_CLASSIFICATION	1.237419950872071E-6	DEFECT
// the segment starts at the front, and wraps all // the way around // the back and finishes at the front again	WITHOUT_CLASSIFICATION	0.9999995431719558	WITHOUT_CLASSIFICATION	4.5682804413179107E-7	DEFECT
// starts at the front, finishes at the back (going // around the left side)	WITHOUT_CLASSIFICATION	0.9999999589425168	WITHOUT_CLASSIFICATION	4.105748322461388E-8	DEFECT
// the segment starts at the back (still extending // CLOCKWISE)	WITHOUT_CLASSIFICATION	0.9999991597423185	WITHOUT_CLASSIFICATION	8.402576814929635E-7	DEFECT
// whole segment stays at the back	WITHOUT_CLASSIFICATION	0.9999981823484277	WITHOUT_CLASSIFICATION	1.8176515722196029E-6	DEFECT
// starts at the back, wraps around front, and // finishes at back again	WITHOUT_CLASSIFICATION	0.999999398240186	WITHOUT_CLASSIFICATION	6.01759814029136E-7	DEFECT
// starts at back, finishes at front (CLOCKWISE)	WITHOUT_CLASSIFICATION	0.999997637413513	WITHOUT_CLASSIFICATION	2.362586487106873E-6	DEFECT
// segment starts at the front	WITHOUT_CLASSIFICATION	0.9999984695872782	WITHOUT_CLASSIFICATION	1.5304127217957124E-6	DEFECT
// and finishes at the front	WITHOUT_CLASSIFICATION	0.9999962959601254	WITHOUT_CLASSIFICATION	3.7040398745323535E-6	DEFECT
// segment only occupies the front	WITHOUT_CLASSIFICATION	0.9999996157869309	WITHOUT_CLASSIFICATION	3.8421306911421174E-7	DEFECT
// segments wraps right around the back...	WITHOUT_CLASSIFICATION	0.9999998162708699	WITHOUT_CLASSIFICATION	1.8372913018170338E-7	DEFECT
// segments starts at front and finishes at back...	WITHOUT_CLASSIFICATION	0.99999954557376	WITHOUT_CLASSIFICATION	4.544262399333661E-7	DEFECT
// segment starts at back	WITHOUT_CLASSIFICATION	0.999997895048801	WITHOUT_CLASSIFICATION	2.104951198990938E-6	DEFECT
// and finishes at back	WITHOUT_CLASSIFICATION	0.9999890001272388	WITHOUT_CLASSIFICATION	1.0999872761244249E-5	DEFECT
//dmo //zero when the parameter is not set	WITHOUT_CLASSIFICATION	0.9999714636072831	WITHOUT_CLASSIFICATION	2.8536392717037308E-5	DEFECT
// if there is an existing dataset, remove the plot from the list of // change listeners...	WITHOUT_CLASSIFICATION	0.9999956886137038	WITHOUT_CLASSIFICATION	4.311386296240656E-6	DEFECT
// set the new dataset, and register the chart as a change listener...	WITHOUT_CLASSIFICATION	0.9999998811458761	WITHOUT_CLASSIFICATION	1.1885412383443564E-7	DEFECT
// send a dataset change event to self...	WITHOUT_CLASSIFICATION	0.9999999511968394	WITHOUT_CLASSIFICATION	4.880316054584632E-8	DEFECT
// plot is likely registered as a listener with the existing axis...	WITHOUT_CLASSIFICATION	0.9999969703234257	WITHOUT_CLASSIFICATION	3.0296765743132293E-6	DEFECT
// plot is likely registered as a listener with the existing axis...	WITHOUT_CLASSIFICATION	0.9999969703234257	WITHOUT_CLASSIFICATION	3.0296765743132293E-6	DEFECT
// if the plot area is too small, just return...	WITHOUT_CLASSIFICATION	0.999997473733906	WITHOUT_CLASSIFICATION	2.5262660939899837E-6	DEFECT
// record the plot area...	WITHOUT_CLASSIFICATION	0.9999970749081581	WITHOUT_CLASSIFICATION	2.9250918419552724E-6	DEFECT
// additional dataArea modifications //check whether modification is	WITHOUT_CLASSIFICATION	0.9999992666910964	WITHOUT_CLASSIFICATION	7.333089036461496E-7	DEFECT
// ratio represents pixels	WITHOUT_CLASSIFICATION	0.9999992681301337	WITHOUT_CLASSIFICATION	7.318698663551502E-7	DEFECT
// ratio represents axis units	WITHOUT_CLASSIFICATION	0.9999988298260241	WITHOUT_CLASSIFICATION	1.170173975927903E-6	DEFECT
// draw the plot background...	WITHOUT_CLASSIFICATION	0.9999989822044376	WITHOUT_CLASSIFICATION	1.0177955623942979E-6	DEFECT
// draw vertical crosshair if required...	WITHOUT_CLASSIFICATION	0.999999855430851	WITHOUT_CLASSIFICATION	1.445691490626577E-7	DEFECT
// draw horizontal crosshair if required...	WITHOUT_CLASSIFICATION	0.9999997124876081	WITHOUT_CLASSIFICATION	2.875123918848691E-7	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9999997548832702	WITHOUT_CLASSIFICATION	2.4511672975961386E-7	DEFECT
// delegate 'info' and 'source' argument checks...	WITHOUT_CLASSIFICATION	0.9999999400815485	WITHOUT_CLASSIFICATION	5.991845153652212E-8	DEFECT
// work out the space required by the domain axis...	WITHOUT_CLASSIFICATION	0.9999985675172536	WITHOUT_CLASSIFICATION	1.4324827463316364E-6	DEFECT
// delegate 'info' and 'source' argument checks...	WITHOUT_CLASSIFICATION	0.9999999400815485	WITHOUT_CLASSIFICATION	5.991845153652212E-8	DEFECT
// now get the data and plot it (the visual representation will depend // on the renderer that has been set)...	WITHOUT_CLASSIFICATION	0.999996979188916	WITHOUT_CLASSIFICATION	3.0208110841248373E-6	DEFECT
// get the data points	WITHOUT_CLASSIFICATION	0.9999992061361967	WITHOUT_CLASSIFICATION	7.938638032701728E-7	DEFECT
// this is a new column	WITHOUT_CLASSIFICATION	0.9998371742479117	WITHOUT_CLASSIFICATION	1.6282575208829262E-4	DEFECT
// end of column	WITHOUT_CLASSIFICATION	0.9999969235334862	WITHOUT_CLASSIFICATION	3.076466513734419E-6	DEFECT
// add an entity for the item...	WITHOUT_CLASSIFICATION	0.9999907011189728	WITHOUT_CLASSIFICATION	9.298881027176369E-6	DEFECT
//              }	WITHOUT_CLASSIFICATION	0.9999897823643142	WITHOUT_CLASSIFICATION	1.021763568585314E-5	DEFECT
// both axes	WITHOUT_CLASSIFICATION	0.9999919567552743	WITHOUT_CLASSIFICATION	8.043244725667017E-6	DEFECT
// just the horizontal axis...	WITHOUT_CLASSIFICATION	0.9999954852929556	WITHOUT_CLASSIFICATION	4.5147070444374534E-6	DEFECT
// just the vertical axis...	WITHOUT_CLASSIFICATION	0.9999979054946021	WITHOUT_CLASSIFICATION	2.094505397833139E-6	DEFECT
// check a series with repeating items	WITHOUT_CLASSIFICATION	0.999998848331336	WITHOUT_CLASSIFICATION	1.1516686639802774E-6	DEFECT
// adjust for insets...	WITHOUT_CLASSIFICATION	0.9999875402365611	WITHOUT_CLASSIFICATION	1.2459763438857327E-5	DEFECT
// adjust the plot area by the interior spacing value	WITHOUT_CLASSIFICATION	0.9999988018865853	WITHOUT_CLASSIFICATION	1.198113414759678E-6	DEFECT
// set the new dataset, and register the chart as a change listener...	WITHOUT_CLASSIFICATION	0.9999998811458761	WITHOUT_CLASSIFICATION	1.1885412383443564E-7	DEFECT
// send a dataset change event to self...	WITHOUT_CLASSIFICATION	0.9999999511968394	WITHOUT_CLASSIFICATION	4.880316054584632E-8	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9999997548832702	WITHOUT_CLASSIFICATION	2.4511672975961386E-7	DEFECT
//turn off anti-aliasing when filling rectangles	WITHOUT_CLASSIFICATION	0.9999935023944304	WITHOUT_CLASSIFICATION	6.497605569545416E-6	DEFECT
// add an entity for the item...	WITHOUT_CLASSIFICATION	0.9999907011189728	WITHOUT_CLASSIFICATION	9.298881027176369E-6	DEFECT
// both axes	WITHOUT_CLASSIFICATION	0.9999919567552743	WITHOUT_CLASSIFICATION	8.043244725667017E-6	DEFECT
// just the horizontal axis...	WITHOUT_CLASSIFICATION	0.9999954852929556	WITHOUT_CLASSIFICATION	4.5147070444374534E-6	DEFECT
// just the vertical axis...	WITHOUT_CLASSIFICATION	0.9999979054946021	WITHOUT_CLASSIFICATION	2.094505397833139E-6	DEFECT
// draw the background	WITHOUT_CLASSIFICATION	0.999998108888288	WITHOUT_CLASSIFICATION	1.8911117120475818E-6	DEFECT
//Object oldValue = this.toolTipGenerator;	WITHOUT_CLASSIFICATION	0.9998892400992734	WITHOUT_CLASSIFICATION	1.107599007265475E-4	DEFECT
//Object oldValue = this.urlGenerator;	WITHOUT_CLASSIFICATION	0.9998750848745277	WITHOUT_CLASSIFICATION	1.2491512547224752E-4	DEFECT
// plot the data (unless the dataset is null)...	WITHOUT_CLASSIFICATION	0.9999950022697387	WITHOUT_CLASSIFICATION	4.997730261251224E-6	DEFECT
// the following relies on the fact that the intervals are immutable	WITHOUT_CLASSIFICATION	0.9999988992108223	WITHOUT_CLASSIFICATION	1.1007891776688068E-6	DEFECT
// intentionally blank	WITHOUT_CLASSIFICATION	0.9999688094839183	WITHOUT_CLASSIFICATION	3.1190516081664604E-5	DEFECT
// can't find any difference	WITHOUT_CLASSIFICATION	0.9999602339322242	WITHOUT_CLASSIFICATION	3.976606777573778E-5	DEFECT
// we're doing this for testing only, and make sure that we // only add data in descending order by x-value	WITHOUT_CLASSIFICATION	0.9999936184356044	WITHOUT_CLASSIFICATION	6.381564395616449E-6	DEFECT
// work out the maximum height or width of the non-shared axes...	WITHOUT_CLASSIFICATION	0.9999992238590696	WITHOUT_CLASSIFICATION	7.761409303644239E-7	DEFECT
// calculate sub-plot area	WITHOUT_CLASSIFICATION	0.9999972437026886	WITHOUT_CLASSIFICATION	2.756297311326717E-6	DEFECT
// calculate sub-plot area	WITHOUT_CLASSIFICATION	0.9999972437026886	WITHOUT_CLASSIFICATION	2.756297311326717E-6	DEFECT
// set up info collection...	WITHOUT_CLASSIFICATION	0.9999989954802564	WITHOUT_CLASSIFICATION	1.0045197436780922E-6	DEFECT
// adjust the drawing area for plot insets (if any)...	WITHOUT_CLASSIFICATION	0.9999997382433852	WITHOUT_CLASSIFICATION	2.617566147725847E-7	DEFECT
// calculate the data area...	WITHOUT_CLASSIFICATION	0.9999951961864652	WITHOUT_CLASSIFICATION	4.803813534916271E-6	DEFECT
// set the width and height of non-shared axis of all sub-plots	WITHOUT_CLASSIFICATION	0.9999999516424997	WITHOUT_CLASSIFICATION	4.835750036462481E-8	DEFECT
// draw the shared axis	WITHOUT_CLASSIFICATION	0.999998039878336	WITHOUT_CLASSIFICATION	1.9601216639774396E-6	DEFECT
// if there is an existing dataset, remove the plot from the list of // change listeners...	WITHOUT_CLASSIFICATION	0.9999956886137038	WITHOUT_CLASSIFICATION	4.311386296240656E-6	DEFECT
// set the new dataset, and register the chart as a change listener...	WITHOUT_CLASSIFICATION	0.9999998811458761	WITHOUT_CLASSIFICATION	1.1885412383443564E-7	DEFECT
// record the plot area...	WITHOUT_CLASSIFICATION	0.9999970749081581	WITHOUT_CLASSIFICATION	2.9250918419552724E-6	DEFECT
//  range = this.rangeAxis.getRange().getLength(); //  scaledRange = range * percent; //   rangeAxis.setAnchoredRange(scaledRange);	WITHOUT_CLASSIFICATION	0.9999975656670533	WITHOUT_CLASSIFICATION	2.43433294670401E-6	DEFECT
// if the source point doesn't fall within a subplot, we do the // zoom on all subplots...	WITHOUT_CLASSIFICATION	0.9999971599983432	WITHOUT_CLASSIFICATION	2.840001656787243E-6	DEFECT
// draw all the subplots	WITHOUT_CLASSIFICATION	0.9999985139103947	WITHOUT_CLASSIFICATION	1.4860896052309636E-6	DEFECT
// override is only for documentation purposes	WITHOUT_CLASSIFICATION	0.9999982509368411	WITHOUT_CLASSIFICATION	1.7490631587759496E-6	DEFECT
// send a dataset change event to self to trigger plot change event	WITHOUT_CLASSIFICATION	0.9999999894400272	WITHOUT_CLASSIFICATION	1.055997277071697E-8	DEFECT
// adjust the drawing area for the plot insets (if any)...	WITHOUT_CLASSIFICATION	0.9999997313513571	WITHOUT_CLASSIFICATION	2.6864864286734655E-7	DEFECT
// y is minor	WITHOUT_CLASSIFICATION	0.9999847878851555	WITHOUT_CLASSIFICATION	1.5212114844365149E-5	DEFECT
// y is minor	WITHOUT_CLASSIFICATION	0.9999847878851555	WITHOUT_CLASSIFICATION	1.5212114844365149E-5	DEFECT
//get major dimension	WITHOUT_CLASSIFICATION	0.9999704080753665	WITHOUT_CLASSIFICATION	2.9591924633457675E-5	DEFECT
//ellipse diameter is the minor dimension	WITHOUT_CLASSIFICATION	0.9999077938484968	WITHOUT_CLASSIFICATION	9.220615150316692E-5	DEFECT
// draw the wafer	WITHOUT_CLASSIFICATION	0.9999962275937032	WITHOUT_CLASSIFICATION	3.772406296720172E-6	DEFECT
// no data in the parent plot	WITHOUT_CLASSIFICATION	0.9999975496601639	WITHOUT_CLASSIFICATION	2.4503398362055797E-6	DEFECT
// set up info collection...	WITHOUT_CLASSIFICATION	0.9999989954802564	WITHOUT_CLASSIFICATION	1.0045197436780922E-6	DEFECT
// set the width and height of non-shared axis of all sub-plots	WITHOUT_CLASSIFICATION	0.9999999516424997	WITHOUT_CLASSIFICATION	4.835750036462481E-8	DEFECT
// draw the shared axis	WITHOUT_CLASSIFICATION	0.999998039878336	WITHOUT_CLASSIFICATION	1.9601216639774396E-6	DEFECT
// draw all the charts	WITHOUT_CLASSIFICATION	0.9999993695882968	WITHOUT_CLASSIFICATION	6.304117031366863E-7	DEFECT
// adjust for insets...	WITHOUT_CLASSIFICATION	0.9999875402365611	WITHOUT_CLASSIFICATION	1.2459763438857327E-5	DEFECT
// if there is an existing dataset, remove the plot from the list of // change listeners...	WITHOUT_CLASSIFICATION	0.9999956886137038	WITHOUT_CLASSIFICATION	4.311386296240656E-6	DEFECT
// set the new dataset, and register the chart as a change listener...	WITHOUT_CLASSIFICATION	0.9999998811458761	WITHOUT_CLASSIFICATION	1.1885412383443564E-7	DEFECT
// send a dataset change event to self...	WITHOUT_CLASSIFICATION	0.9999999511968394	WITHOUT_CLASSIFICATION	4.880316054584632E-8	DEFECT
// delegate 'info' and 'source' argument checks...	WITHOUT_CLASSIFICATION	0.9999999400815485	WITHOUT_CLASSIFICATION	5.991845153652212E-8	DEFECT
// if the source point doesn't fall within a subplot, we do the // zoom on all subplots...	WITHOUT_CLASSIFICATION	0.9999971599983432	WITHOUT_CLASSIFICATION	2.840001656787243E-6	DEFECT
//set upperLeft point // x is minor	WITHOUT_CLASSIFICATION	0.9999905824124378	WITHOUT_CLASSIFICATION	9.417587562238086E-6	DEFECT
//set upperLeft point // x is minor	WITHOUT_CLASSIFICATION	0.9999905824124378	WITHOUT_CLASSIFICATION	9.417587562238086E-6	DEFECT
// calculate and draw the notch // horizontal orientation is considered notch right // vertical orientation is considered notch down	WITHOUT_CLASSIFICATION	0.9999956881872164	WITHOUT_CLASSIFICATION	4.3118127836385615E-6	DEFECT
//this.axisOffset.trim(dataArea);	WITHOUT_CLASSIFICATION	0.9999688486515536	WITHOUT_CLASSIFICATION	3.115134844648376E-5	DEFECT
//// SECTION PAINT ////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999791982665776	WITHOUT_CLASSIFICATION	2.0801733422438914E-5	DEFECT
// is there an override?	WITHOUT_CLASSIFICATION	0.9979873671680486	WITHOUT_CLASSIFICATION	0.0020126328319514148	DEFECT
// if not, check if there is a paint defined for the specified key	WITHOUT_CLASSIFICATION	0.9999978076786119	WITHOUT_CLASSIFICATION	2.192321388058752E-6	DEFECT
// if not, check if there is a paint defined for the specified key	WITHOUT_CLASSIFICATION	0.9999978076786119	WITHOUT_CLASSIFICATION	2.192321388058752E-6	DEFECT
// nothing defined - do we autoPopulate?	WITHOUT_CLASSIFICATION	0.999983076328981	WITHOUT_CLASSIFICATION	1.6923671019084434E-5	DEFECT
// nothing defined - do we autoPopulate?	WITHOUT_CLASSIFICATION	0.999983076328981	WITHOUT_CLASSIFICATION	1.6923671019084434E-5	DEFECT
// null argument check delegated...	WITHOUT_CLASSIFICATION	0.9999992015146616	WITHOUT_CLASSIFICATION	7.984853384859292E-7	DEFECT
// null argument check delegated...	WITHOUT_CLASSIFICATION	0.9999992015146616	WITHOUT_CLASSIFICATION	7.984853384859292E-7	DEFECT
// null argument check delegated...	WITHOUT_CLASSIFICATION	0.9999992015146616	WITHOUT_CLASSIFICATION	7.984853384859292E-7	DEFECT
//// SECTION OUTLINE PAINT ////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999791575757239	WITHOUT_CLASSIFICATION	2.0842424276058345E-5	DEFECT
//// SECTION OUTLINE STROKE ///////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999787486939808	WITHOUT_CLASSIFICATION	2.125130601916408E-5	DEFECT
// if not, check if there is a stroke defined for the specified key	WITHOUT_CLASSIFICATION	0.9999980856178152	WITHOUT_CLASSIFICATION	1.9143821847550918E-6	DEFECT
// adjust the plot area for interior spacing and labels...	WITHOUT_CLASSIFICATION	0.9999996822704592	WITHOUT_CLASSIFICATION	3.1772954083019695E-7	DEFECT
// make the link area a square if the pie chart is to be circular...	WITHOUT_CLASSIFICATION	0.9999994598876387	WITHOUT_CLASSIFICATION	5.401123612667745E-7	DEFECT
// work out the space required by the domain axis...	WITHOUT_CLASSIFICATION	0.9999985675172536	WITHOUT_CLASSIFICATION	1.4324827463316364E-6	DEFECT
// work out the maximum height or width of the non-shared axes...	WITHOUT_CLASSIFICATION	0.9999992238590696	WITHOUT_CLASSIFICATION	7.761409303644239E-7	DEFECT
// calculate sub-plot area	WITHOUT_CLASSIFICATION	0.9999972437026886	WITHOUT_CLASSIFICATION	2.756297311326717E-6	DEFECT
// adjust the drawing area for plot insets (if any)...	WITHOUT_CLASSIFICATION	0.9999997382433852	WITHOUT_CLASSIFICATION	2.617566147725847E-7	DEFECT
// the pie area defines the circle/ellipse for regular pie sections. // it is defined by shrinking the explodeArea by the explodeMargin // factor.	WITHOUT_CLASSIFICATION	0.9999990455695148	WITHOUT_CLASSIFICATION	9.54430485193591E-7	DEFECT
// if there is an existing dataset, remove the plot from the list of // change listeners...	WITHOUT_CLASSIFICATION	0.9999956886137038	WITHOUT_CLASSIFICATION	4.311386296240656E-6	DEFECT
// plot the data (unless the dataset is null)...	WITHOUT_CLASSIFICATION	0.9999950022697387	WITHOUT_CLASSIFICATION	4.997730261251224E-6	DEFECT
// no data in the parent plot	WITHOUT_CLASSIFICATION	0.9999975496601639	WITHOUT_CLASSIFICATION	2.4503398362055797E-6	DEFECT
// update the linking line target for later // add an entity for the pie section	WITHOUT_CLASSIFICATION	0.9999965363601448	WITHOUT_CLASSIFICATION	3.4636398551835313E-6	DEFECT
// work out the mid angle (0 - 90 and 270 - 360) = right, // otherwise left	WITHOUT_CLASSIFICATION	0.9999990368021299	WITHOUT_CLASSIFICATION	9.631978701461005E-7	DEFECT
// classify the keys according to which side the label will appear...	WITHOUT_CLASSIFICATION	0.9999985029890758	WITHOUT_CLASSIFICATION	1.4970109242623361E-6	DEFECT
// calculate the max label width from the plot dimensions, because // a circular pie can leave a lot more room for labels...	WITHOUT_CLASSIFICATION	0.9999985454082271	WITHOUT_CLASSIFICATION	1.4545917730292594E-6	DEFECT
// draw the labels...	WITHOUT_CLASSIFICATION	0.999997889385633	WITHOUT_CLASSIFICATION	2.1106143669659763E-6	DEFECT
// draw the right labels...	WITHOUT_CLASSIFICATION	0.999997127465168	WITHOUT_CLASSIFICATION	2.8725348320341928E-6	DEFECT
//hh * getInteriorGap();	WITHOUT_CLASSIFICATION	0.9999947090711755	WITHOUT_CLASSIFICATION	5.290928824560272E-6	DEFECT
// line not visible	WITHOUT_CLASSIFICATION	0.9999737415333457	WITHOUT_CLASSIFICATION	2.6258466654236217E-5	DEFECT
// for a RadialGradientPaint we adjust the center and radius to match // the current pie segment...	WITHOUT_CLASSIFICATION	0.9999998233865892	WITHOUT_CLASSIFICATION	1.7661341069775633E-7	DEFECT
// can't find any difference...	WITHOUT_CLASSIFICATION	0.9999784593033008	WITHOUT_CLASSIFICATION	2.154069669926078E-5	DEFECT
// DEPRECATED FIELDS AND METHODS...	WITHOUT_CLASSIFICATION	0.999627712162862	WITHOUT_CLASSIFICATION	3.722878371380497E-4	DEFECT
// no range axis // no renderer	WITHOUT_CLASSIFICATION	0.9999964236361922	WITHOUT_CLASSIFICATION	3.576363807868207E-6	DEFECT
// backgroundImage	WITHOUT_CLASSIFICATION	0.9999984460351139	WITHOUT_CLASSIFICATION	1.5539648860776786E-6	DEFECT
// set the width and height of non-shared axis of all sub-plots	WITHOUT_CLASSIFICATION	0.9999999516424997	WITHOUT_CLASSIFICATION	4.835750036462481E-8	DEFECT
// draw the shared axis	WITHOUT_CLASSIFICATION	0.999998039878336	WITHOUT_CLASSIFICATION	1.9601216639774396E-6	DEFECT
// if there is an existing dataset, remove the plot from the list of // change listeners...	WITHOUT_CLASSIFICATION	0.9999956886137038	WITHOUT_CLASSIFICATION	4.311386296240656E-6	DEFECT
// set the new dataset, and register the chart as a change listener...	WITHOUT_CLASSIFICATION	0.9999998811458761	WITHOUT_CLASSIFICATION	1.1885412383443564E-7	DEFECT
// delegate 'info' and 'source' argument checks...	WITHOUT_CLASSIFICATION	0.9999999400815485	WITHOUT_CLASSIFICATION	5.991845153652212E-8	DEFECT
// if the source point doesn't fall within a subplot, we do the // zoom on all subplots...	WITHOUT_CLASSIFICATION	0.9999971599983432	WITHOUT_CLASSIFICATION	2.840001656787243E-6	DEFECT
// draw all the subplots	WITHOUT_CLASSIFICATION	0.9999985139103947	WITHOUT_CLASSIFICATION	1.4860896052309636E-6	DEFECT
// send a dataset change event to self to trigger plot change event	WITHOUT_CLASSIFICATION	0.9999999894400272	WITHOUT_CLASSIFICATION	1.055997277071697E-8	DEFECT
// adjust the drawing area for the plot insets (if any)...	WITHOUT_CLASSIFICATION	0.9999997313513571	WITHOUT_CLASSIFICATION	2.6864864286734655E-7	DEFECT
// delegate 'state' and 'source' argument checks...	WITHOUT_CLASSIFICATION	0.9999999522228809	WITHOUT_CLASSIFICATION	4.7777119206720144E-8	DEFECT
// after setting up all the subplots, the shared domain axis may need // reconfiguring	WITHOUT_CLASSIFICATION	0.999999618754659	WITHOUT_CLASSIFICATION	3.8124534095080114E-7	DEFECT
// 20% // 20% // 20%	WITHOUT_CLASSIFICATION	0.9999917158331649	WITHOUT_CLASSIFICATION	8.284166835010141E-6	DEFECT
// create the bounds for the inner arc	WITHOUT_CLASSIFICATION	0.9999994643805292	WITHOUT_CLASSIFICATION	5.356194708006665E-7	DEFECT
// calculate inner arc in reverse direction, for later // GeneralPath construction	WITHOUT_CLASSIFICATION	0.9999793193529699	WITHOUT_CLASSIFICATION	2.0680647030096485E-5	DEFECT
// add an entity for the pie section	WITHOUT_CLASSIFICATION	0.9999965015624828	WITHOUT_CLASSIFICATION	3.498437517311061E-6	DEFECT
// check that there is some data to display...	WITHOUT_CLASSIFICATION	0.9999982132784261	WITHOUT_CLASSIFICATION	1.7867215739196245E-6	DEFECT
// the columns variable is always >= rows	WITHOUT_CLASSIFICATION	0.9999957450600057	WITHOUT_CLASSIFICATION	4.254939994320529E-6	DEFECT
// swap rows and columns to match plotArea shape	WITHOUT_CLASSIFICATION	0.9999995012050813	WITHOUT_CLASSIFICATION	4.987949186871935E-7	DEFECT
// update the section colors to match the global colors...	WITHOUT_CLASSIFICATION	0.9999998495033557	WITHOUT_CLASSIFICATION	1.5049664430742257E-7	DEFECT
// pre-fetch the colors for each key...this is because the subplots // may not display every key, but we need the coloring to be // consistent...	WITHOUT_CLASSIFICATION	0.9999951798832809	WITHOUT_CLASSIFICATION	4.820116719100621E-6	DEFECT
// column keys provide potential keys for individual pies	WITHOUT_CLASSIFICATION	0.9999995437132768	WITHOUT_CLASSIFICATION	4.5628672316356263E-7	DEFECT
// row keys provide potential keys for individual pies	WITHOUT_CLASSIFICATION	0.9999995225891865	WITHOUT_CLASSIFICATION	4.774108135751205E-7	DEFECT
/* =========================================================== * JFreeChart : a free chart library for the Java(tm) platform * =========================================================== * * (C) Copyright 2000-2014, by Object Refinery Limited and Contributors. * * Project Info:  http://www.jfree.org/jfreechart/index.html * * This library is free software; you can redistribute it and/or modify it * under the terms of the GNU Lesser General Public License as published by * the Free Software Foundation; either version 2.1 of the License, or * (at your option) any later version. * * This library is distributed in the hope that it will be useful, but * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public * License for more details. * * You should have received a copy of the GNU Lesser General Public * License along with this library; if not, write to the Free Software * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, * USA. * * [Oracle and Java are registered trademarks of Oracle and/or its affiliates. * Other names may be trademarks of their respective owners.] * * ----------------- * CategoryPlot.java * ----------------- * (C) Copyright 2000-2014, by Object Refinery Limited and Contributors. * * Original Author:  David Gilbert (for Object Refinery Limited); * Contributor(s):   Jeremy Bowman; *                   Arnaud Lelievre; *                   Richard West, Advanced Micro Devices, Inc.; *                   Ulrich Voigt - patch 2686040; *                   Peter Kolb - patches 2603321 and 2809117; * * Changes * ------- * 21-Jun-2001 : Removed redundant JFreeChart parameter from constructors (DG); * 21-Aug-2001 : Added standard header. Fixed DOS encoding problem (DG); * 18-Sep-2001 : Updated header (DG); * 15-Oct-2001 : Data source classes moved to com.jrefinery.data.* (DG); * 22-Oct-2001 : Renamed DataSource.java --> Dataset.java etc. (DG); * 23-Oct-2001 : Changed intro and trail gaps on bar plots to use percentage of *               available space rather than a fixed number of units (DG); * 12-Dec-2001 : Changed constructors to protected (DG); * 13-Dec-2001 : Added tooltips (DG); * 16-Jan-2002 : Increased maximum intro and trail gap percents, plus added *               some argument checking code.  Thanks to Taoufik Romdhane for *               suggesting this (DG); * 05-Feb-2002 : Added accessor methods for the tooltip generator, incorporated *               alpha-transparency for Plot and subclasses (DG); * 06-Mar-2002 : Updated import statements (DG); * 14-Mar-2002 : Renamed BarPlot.java --> CategoryPlot.java, and changed code *               to use the CategoryItemRenderer interface (DG); * 22-Mar-2002 : Dropped the getCategories() method (DG); * 23-Apr-2002 : Moved the dataset from the JFreeChart class to the Plot *               class (DG); * 29-Apr-2002 : New methods to support printing values at the end of bars, *               contributed by Jeremy Bowman (DG); * 11-May-2002 : New methods for label visibility and overlaid plot support, *               contributed by Jeremy Bowman (DG); * 06-Jun-2002 : Removed the tooltip generator, this is now stored with the *               renderer.  Moved constants into the CategoryPlotConstants *               interface.  Updated Javadoc comments (DG); * 10-Jun-2002 : Overridden datasetChanged() method to update the upper and *               lower bound on the range axis (if necessary), updated *               Javadocs (DG); * 25-Jun-2002 : Removed redundant imports (DG); * 20-Aug-2002 : Changed the constructor for Marker (DG); * 28-Aug-2002 : Added listener notification to setDomainAxis() and *               setRangeAxis() (DG); * 23-Sep-2002 : Added getLegendItems() method and fixed errors reported by *               Checkstyle (DG); * 28-Oct-2002 : Changes to the CategoryDataset interface (DG); * 05-Nov-2002 : Base dataset is now TableDataset not CategoryDataset (DG); * 07-Nov-2002 : Renamed labelXXX as valueLabelXXX (DG); * 18-Nov-2002 : Added grid settings for both domain and range axis (previously *               these were set in the axes) (DG); * 19-Nov-2002 : Added axis location parameters to constructor (DG); * 17-Jan-2003 : Moved to com.jrefinery.chart.plot package (DG); * 14-Feb-2003 : Fixed bug in auto-range calculation for secondary axis (DG); * 26-Mar-2003 : Implemented Serializable (DG); * 02-May-2003 : Moved render() method up from subclasses. Added secondary *               range markers. Added an attribute to control the dataset *               rendering order.  Added a drawAnnotations() method.  Changed *               the axis location from an int to an AxisLocation (DG); * 07-May-2003 : Merged HorizontalCategoryPlot and VerticalCategoryPlot into *               this class (DG); * 02-Jun-2003 : Removed check for range axis compatibility (DG); * 04-Jul-2003 : Added a domain gridline position attribute (DG); * 21-Jul-2003 : Moved DrawingSupplier to Plot superclass (DG); * 19-Aug-2003 : Added equals() method and implemented Cloneable (DG); * 01-Sep-2003 : Fixed bug 797466 (no change event when secondary dataset *               changes) (DG); * 02-Sep-2003 : Fixed bug 795209 (wrong dataset checked in render2 method) and *               790407 (initialise method) (DG); * 08-Sep-2003 : Added internationalization via use of properties *               resourceBundle (RFE 690236) (AL); * 08-Sep-2003 : Fixed bug (wrong secondary range axis being used).  Changed *               ValueAxis API (DG); * 10-Sep-2003 : Fixed bug in setRangeAxis() method (DG); * 15-Sep-2003 : Fixed two bugs in serialization, implemented *               PublicCloneable (DG); * 23-Oct-2003 : Added event notification for changes to renderer (DG); * 26-Nov-2003 : Fixed bug (849645) in clearRangeMarkers() method (DG); * 03-Dec-2003 : Modified draw method to accept anchor (DG); * 21-Jan-2004 : Update for renamed method in ValueAxis (DG); * 10-Mar-2004 : Fixed bug in axis range calculation when secondary renderer is *               stacked (DG); * 12-May-2004 : Added fixed legend items (DG); * 19-May-2004 : Added check for null legend item from renderer (DG); * 02-Jun-2004 : Updated the DatasetRenderingOrder class (DG); * 05-Nov-2004 : Renamed getDatasetsMappedToRangeAxis() *               --> datasetsMappedToRangeAxis(), and ensured that returned *               list doesn't contain null datasets (DG); * 12-Nov-2004 : Implemented new Zoomable interface (DG); * 07-Jan-2005 : Renamed getRangeExtent() --> findRangeBounds() in *               CategoryItemRenderer (DG); * 04-May-2005 : Fixed serialization of range markers (DG); * 05-May-2005 : Updated draw() method parameters (DG); * 20-May-2005 : Added setDomainAxes() and setRangeAxes() methods, as per *               RFE 1183100 (DG); * 01-Jun-2005 : Upon deserialization, register plot as a listener with its *               axes, dataset(s) and renderer(s) - see patch 1209475 (DG); * 02-Jun-2005 : Added support for domain markers (DG); * 06-Jun-2005 : Fixed equals() method for use with GradientPaint (DG); * 09-Jun-2005 : Added setRenderers(), as per RFE 1183100 (DG); * 16-Jun-2005 : Added getDomainAxisCount() and getRangeAxisCount() methods, to *               match XYPlot (see RFE 1220495) (DG); * ------------- JFREECHART 1.0.x --------------------------------------------- * 11-Jan-2006 : Added configureRangeAxes() to rendererChanged(), since the *               renderer might influence the axis range (DG); * 27-Jan-2006 : Added various null argument checks (DG); * 18-Aug-2006 : Added getDatasetCount() method, plus a fix for bug drawing *               category labels, thanks to Adriaan Joubert (1277726) (DG); * 05-Sep-2006 : Added MarkerChangeEvent support (DG); * 30-Oct-2006 : Added getDomainAxisIndex(), datasetsMappedToDomainAxis() and *               getCategoriesForAxis() methods (DG); * 22-Nov-2006 : Fire PlotChangeEvent from setColumnRenderingOrder() and *               setRowRenderingOrder() (DG); * 29-Nov-2006 : Fix for bug 1605207 (IntervalMarker exceeds bounds of data *               area) (DG); * 26-Feb-2007 : Fix for bug 1669218 (setDomainAxisLocation() notify argument *               ignored) (DG); * 13-Mar-2007 : Added null argument checks for setRangeCrosshairPaint() and *               setRangeCrosshairStroke(), fixed clipping for *               annotations (DG); * 07-Jun-2007 : Override drawBackground() for new GradientPaint handling (DG); * 10-Jul-2007 : Added getRangeAxisIndex(ValueAxis) method (DG); * 24-Sep-2007 : Implemented new zoom methods (DG); * 25-Oct-2007 : Added some argument checks (DG); * 05-Nov-2007 : Applied patch 1823697, by Richard West, for removal of domain *               and range markers (DG); * 14-Nov-2007 : Added missing event notifications (DG); * 25-Mar-2008 : Added new methods with optional notification - see patch *               1913751 (DG); * 07-Apr-2008 : Fixed NPE in removeDomainMarker() and *               removeRangeMarker() (DG); * 23-Apr-2008 : Fixed equals() and clone() methods (DG); * 26-Jun-2008 : Fixed crosshair support (DG); * 10-Jul-2008 : Fixed outline visibility for 3D renderers (DG); * 12-Aug-2008 : Added rendererCount() method (DG); * 25-Nov-2008 : Added facility to map datasets to multiples axes (DG); * 15-Dec-2008 : Cleaned up grid drawing methods (DG); * 18-Dec-2008 : Use ResourceBundleWrapper - see patch 1607918 by *               Jess Thrysoee (DG); * 21-Jan-2009 : Added rangeMinorGridlinesVisible flag (DG); * 18-Mar-2009 : Modified anchored zoom behaviour (DG); * 19-Mar-2009 : Implemented Pannable interface - see patch 2686040 (DG); * 19-Mar-2009 : Added entity support - see patch 2603321 by Peter Kolb (DG); * 24-Jun-2009 : Implemented AnnotationChangeListener (see patch 2809117 by *               PK) (DG); * 06-Jul-2009 : Fix for cloning of renderers - see bug 2817504 (DG) * 10-Jul-2009 : Added optional drop shadow generator (DG); * 27-Sep-2011 : Fixed annotation import (DG); * 18-Oct-2011 : Fixed tooltip offset with shadow generator (DG); * 20-Nov-2011 : Initialise shadow generator as null (DG); * 02-Jul-2013 : Use ParamChecks (DG); * 12-Sep-2013 : Check for KEY_SUPPRESS_SHADOW_GENERATION rendering hint (DG); * 10-Mar-2014 : Updated Javadocs for issue #1123 (DG); * 09-Apr-2014 : Remove use of ObjectList (DG); *  */	WITHOUT_CLASSIFICATION	0.9996429525893892	WITHOUT_CLASSIFICATION	3.570474106107866E-4	DEFECT
// allocate storage for dataset, axes and renderers	WITHOUT_CLASSIFICATION	0.9999991570705854	WITHOUT_CLASSIFICATION	8.429294144724705E-7	DEFECT
// delegate...	WITHOUT_CLASSIFICATION	0.9999981823029382	WITHOUT_CLASSIFICATION	1.8176970616843207E-6	DEFECT
// delegate...	WITHOUT_CLASSIFICATION	0.9999981823029382	WITHOUT_CLASSIFICATION	1.8176970616843207E-6	DEFECT
// calculate the data area...	WITHOUT_CLASSIFICATION	0.9999951961864652	WITHOUT_CLASSIFICATION	4.803813534916271E-6	DEFECT
// send a dataset change event to self...	WITHOUT_CLASSIFICATION	0.9999999511968394	WITHOUT_CLASSIFICATION	4.880316054584632E-8	DEFECT
// if the plot area is too small, just return...	WITHOUT_CLASSIFICATION	0.999997473733906	WITHOUT_CLASSIFICATION	2.5262660939899837E-6	DEFECT
// record the plot area...	WITHOUT_CLASSIFICATION	0.9999970749081581	WITHOUT_CLASSIFICATION	2.9250918419552724E-6	DEFECT
// adjust the drawing area for the plot insets (if any)...	WITHOUT_CLASSIFICATION	0.9999997313513571	WITHOUT_CLASSIFICATION	2.6864864286734655E-7	DEFECT
// set the anchor value for the range axis...	WITHOUT_CLASSIFICATION	0.9999989316733279	WITHOUT_CLASSIFICATION	1.068326672075326E-6	DEFECT
// OK	WITHOUT_CLASSIFICATION	0.9999882625349319	WITHOUT_CLASSIFICATION	1.1737465068006349E-5	DEFECT
// fake a dataset change event to update axes...	WITHOUT_CLASSIFICATION	0.9999996125948674	WITHOUT_CLASSIFICATION	3.874051325883142E-7	DEFECT
// fake a dataset change event to update axes...	WITHOUT_CLASSIFICATION	0.9999996125948674	WITHOUT_CLASSIFICATION	3.874051325883142E-7	DEFECT
// the first axis in the list is used for data <--> Java2D	WITHOUT_CLASSIFICATION	0.999999741391264	WITHOUT_CLASSIFICATION	2.586087360225072E-7	DEFECT
// the first axis in the list is used for data <--> Java2D	WITHOUT_CLASSIFICATION	0.999999741391264	WITHOUT_CLASSIFICATION	2.586087360225072E-7	DEFECT
// get the legend items for the datasets...	WITHOUT_CLASSIFICATION	0.9999997758207407	WITHOUT_CLASSIFICATION	2.241792592578302E-7	DEFECT
// this should never happen with the existing code, but throw // an exception in case future changes make it possible...	WITHOUT_CLASSIFICATION	0.9999025643391914	WITHOUT_CLASSIFICATION	9.743566080865478E-5	DEFECT
// should be equal...	WITHOUT_CLASSIFICATION	0.999974885440853	WITHOUT_CLASSIFICATION	2.5114559147009425E-5	DEFECT
// reserve some space for the domain axis...	WITHOUT_CLASSIFICATION	0.9999903993091247	WITHOUT_CLASSIFICATION	9.600690875239128E-6	DEFECT
// reserve space for the primary domain axis...	WITHOUT_CLASSIFICATION	0.9999938275584577	WITHOUT_CLASSIFICATION	6.172441542261327E-6	DEFECT
// reserve space for any domain axes...	WITHOUT_CLASSIFICATION	0.999989327242491	WITHOUT_CLASSIFICATION	1.0672757509134154E-5	DEFECT
// reserve some space for the range axis...	WITHOUT_CLASSIFICATION	0.9999919192466813	WITHOUT_CLASSIFICATION	8.080753318684183E-6	DEFECT
// reserve space for the range axes (if any)...	WITHOUT_CLASSIFICATION	0.999998779839368	WITHOUT_CLASSIFICATION	1.2201606319834095E-6	DEFECT
// if the incoming state is null, no information will be passed // back to the caller - but we create a temporary state to record // the plot area, since that is used later by the axes	WITHOUT_CLASSIFICATION	0.9999990845431426	WITHOUT_CLASSIFICATION	9.154568575816291E-7	DEFECT
// if there is a renderer, it draws the background, otherwise use the // default background...	WITHOUT_CLASSIFICATION	0.9999996025847444	WITHOUT_CLASSIFICATION	3.9741525560340945E-7	DEFECT
// the anchor point is typically the point where the mouse last // clicked - the crosshairs will be driven off this point...	WITHOUT_CLASSIFICATION	0.9999958652538034	WITHOUT_CLASSIFICATION	4.134746196550361E-6	DEFECT
// specify the anchor X and Y coordinates in Java2D space, for the // cases where these are not updated during rendering (i.e. no lock // on data)	WITHOUT_CLASSIFICATION	0.9999997261292392	WITHOUT_CLASSIFICATION	2.7387076086374216E-7	DEFECT
// don't let anyone draw outside the data area	WITHOUT_CLASSIFICATION	0.9999993069174425	WITHOUT_CLASSIFICATION	6.930825575233416E-7	DEFECT
// draw the markers...	WITHOUT_CLASSIFICATION	0.9999912913652608	WITHOUT_CLASSIFICATION	8.70863473931496E-6	DEFECT
// now render data items...	WITHOUT_CLASSIFICATION	0.9999965141757557	WITHOUT_CLASSIFICATION	3.485824244247445E-6	DEFECT
// set up the alpha-transparency...	WITHOUT_CLASSIFICATION	0.9999998974311438	WITHOUT_CLASSIFICATION	1.0256885619890285E-7	DEFECT
// if the flag is being set to true, there may be queued up changes...	WITHOUT_CLASSIFICATION	0.9999993784102484	WITHOUT_CLASSIFICATION	6.215897515188402E-7	DEFECT
// an empty dataset should return a null range	WITHOUT_CLASSIFICATION	0.999958276217122	WITHOUT_CLASSIFICATION	4.1723782877996026E-5	DEFECT
// draw the foreground markers...	WITHOUT_CLASSIFICATION	0.9999986513480864	WITHOUT_CLASSIFICATION	1.3486519135656169E-6	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999874693337447	WITHOUT_CLASSIFICATION	1.2530666255248155E-5	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999874693337447	WITHOUT_CLASSIFICATION	1.2530666255248155E-5	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999874693337447	WITHOUT_CLASSIFICATION	1.2530666255248155E-5	DEFECT
// draw the annotations (if any)...	WITHOUT_CLASSIFICATION	0.9999972193407906	WITHOUT_CLASSIFICATION	2.7806592095777337E-6	DEFECT
// draw domain crosshair if required...	WITHOUT_CLASSIFICATION	0.9999996036445616	WITHOUT_CLASSIFICATION	3.9635543835960377E-7	DEFECT
// draw range crosshair if required...	WITHOUT_CLASSIFICATION	0.9999996146444632	WITHOUT_CLASSIFICATION	3.8535553680546376E-7	DEFECT
// draw an outline around the plot area...	WITHOUT_CLASSIFICATION	0.99999894514837	WITHOUT_CLASSIFICATION	1.0548516300017594E-6	DEFECT
// add domain axes to lists...	WITHOUT_CLASSIFICATION	0.9999551763868004	WITHOUT_CLASSIFICATION	4.4823613199570914E-5	DEFECT
// add range axes to lists...	WITHOUT_CLASSIFICATION	0.9999901440707906	WITHOUT_CLASSIFICATION	9.855929209371833E-6	DEFECT
// draw the top axes	WITHOUT_CLASSIFICATION	0.999998921002345	WITHOUT_CLASSIFICATION	1.0789976550590376E-6	DEFECT
// draw the bottom axes	WITHOUT_CLASSIFICATION	0.9999945256911805	WITHOUT_CLASSIFICATION	5.474308819503112E-6	DEFECT
// draw the left axes	WITHOUT_CLASSIFICATION	0.9999975696615371	WITHOUT_CLASSIFICATION	2.4303384629603933E-6	DEFECT
// draw the right axes	WITHOUT_CLASSIFICATION	0.9999939708266674	WITHOUT_CLASSIFICATION	6.029173332574028E-6	DEFECT
// draw the range grid lines, if any...	WITHOUT_CLASSIFICATION	0.9999975085314949	WITHOUT_CLASSIFICATION	2.4914685049993425E-6	DEFECT
// no renderer, no gridlines...	WITHOUT_CLASSIFICATION	0.9999993099113708	WITHOUT_CLASSIFICATION	6.900886292876778E-7	DEFECT
// iterate through the datasets that map to the axis and get the union // of the ranges.	WITHOUT_CLASSIFICATION	0.9999988413885995	WITHOUT_CLASSIFICATION	1.1586114004575031E-6	DEFECT
// add the unique categories from this dataset	WITHOUT_CLASSIFICATION	0.9999973351610266	WITHOUT_CLASSIFICATION	2.6648389733863E-6	DEFECT
// do nothing, because the plot is not pannable along the domain axes	WITHOUT_CLASSIFICATION	0.9999958424602068	WITHOUT_CLASSIFICATION	4.157539793202283E-6	DEFECT
// can't zoom domain axis	WITHOUT_CLASSIFICATION	0.9998782032119468	WITHOUT_CLASSIFICATION	1.2179678805334746E-4	DEFECT
// delegate to other method	WITHOUT_CLASSIFICATION	0.9999912745053573	WITHOUT_CLASSIFICATION	8.725494642762143E-6	DEFECT
// perform the zoom on each range axis	WITHOUT_CLASSIFICATION	0.9999941069858206	WITHOUT_CLASSIFICATION	5.893014179392294E-6	DEFECT
// get the relevant source coordinate given the plot orientation	WITHOUT_CLASSIFICATION	0.999999883023863	WITHOUT_CLASSIFICATION	1.1697613705766243E-7	DEFECT
// AxisLocation is immutable, so we can just copy the maps	WITHOUT_CLASSIFICATION	0.9999946477654617	WITHOUT_CLASSIFICATION	5.352234538314643E-6	DEFECT
// not currently serialized	WITHOUT_CLASSIFICATION	0.9999943969266525	WITHOUT_CLASSIFICATION	5.6030733475589034E-6	DEFECT
// some subclasses override this method completely, so don't put // anything here that *must* be done	WITHOUT_CLASSIFICATION	0.9999903080371154	WITHOUT_CLASSIFICATION	9.6919628845591E-6	DEFECT
// provides a 'no action' default	WITHOUT_CLASSIFICATION	0.9999992029362745	WITHOUT_CLASSIFICATION	7.970637254920999E-7	DEFECT
// an empty dataset should return a null range	WITHOUT_CLASSIFICATION	0.999958276217122	WITHOUT_CLASSIFICATION	4.1723782877996026E-5	DEFECT
// send a dataset change event to self...	WITHOUT_CLASSIFICATION	0.9999999511968394	WITHOUT_CLASSIFICATION	4.880316054584632E-8	DEFECT
// if the plot area is too small, just return...	WITHOUT_CLASSIFICATION	0.999997473733906	WITHOUT_CLASSIFICATION	2.5262660939899837E-6	DEFECT
// record the plot area...	WITHOUT_CLASSIFICATION	0.9999970749081581	WITHOUT_CLASSIFICATION	2.9250918419552724E-6	DEFECT
// OK	WITHOUT_CLASSIFICATION	0.9999882625349319	WITHOUT_CLASSIFICATION	1.1737465068006349E-5	DEFECT
// adjust the drawing area for the plot insets (if any)...	WITHOUT_CLASSIFICATION	0.9999997313513571	WITHOUT_CLASSIFICATION	2.6864864286734655E-7	DEFECT
// delegate...	WITHOUT_CLASSIFICATION	0.9999981823029382	WITHOUT_CLASSIFICATION	1.8176970616843207E-6	DEFECT
// delegate...	WITHOUT_CLASSIFICATION	0.9999981823029382	WITHOUT_CLASSIFICATION	1.8176970616843207E-6	DEFECT
// try the parent plot	WITHOUT_CLASSIFICATION	0.9999980440669314	WITHOUT_CLASSIFICATION	1.9559330685067157E-6	DEFECT
// fake a dataset change event to update axes...	WITHOUT_CLASSIFICATION	0.9999996125948674	WITHOUT_CLASSIFICATION	3.874051325883142E-7	DEFECT
// axisIndices can be: // 1.  null; // 2.  non-empty, containing only Integer objects that are unique.	WITHOUT_CLASSIFICATION	0.9999877583559159	WITHOUT_CLASSIFICATION	1.2241644084002655E-5	DEFECT
// the first axis in the list is used for data <--> Java2D	WITHOUT_CLASSIFICATION	0.999999741391264	WITHOUT_CLASSIFICATION	2.586087360225072E-7	DEFECT
// no renderer, no gridlines...	WITHOUT_CLASSIFICATION	0.9999993099113708	WITHOUT_CLASSIFICATION	6.900886292876778E-7	DEFECT
// iterate through the datasets that map to the axis and get the union // of the ranges.	WITHOUT_CLASSIFICATION	0.9999988413885995	WITHOUT_CLASSIFICATION	1.1586114004575031E-6	DEFECT
// create the dataset...	WITHOUT_CLASSIFICATION	0.9999997689326134	WITHOUT_CLASSIFICATION	2.3106738664993729E-7	DEFECT
// the above should cover all the options...	WITHOUT_CLASSIFICATION	0.9998871697490932	WITHOUT_CLASSIFICATION	1.1283025090682598E-4	DEFECT
// define the default locations for up to 8 axes...	WITHOUT_CLASSIFICATION	0.9999996950136939	WITHOUT_CLASSIFICATION	3.049863061546381E-7	DEFECT
// normalize angle	WITHOUT_CLASSIFICATION	0.9999872586841925	WITHOUT_CLASSIFICATION	1.274131580750632E-5	DEFECT
// draw the plot background and axes...	WITHOUT_CLASSIFICATION	0.9999996261918983	WITHOUT_CLASSIFICATION	3.738081017422091E-7	DEFECT
// now for each dataset, get the renderer and the appropriate axis // and render the dataset...	WITHOUT_CLASSIFICATION	0.9999998335746922	WITHOUT_CLASSIFICATION	1.664253077104713E-7	DEFECT
// now get the data and plot it (the visual representation will depend // on the m_Renderer that has been set)...	WITHOUT_CLASSIFICATION	0.9999969071456009	WITHOUT_CLASSIFICATION	3.0928543992238076E-6	DEFECT
// draw the domain grid lines, if any...	WITHOUT_CLASSIFICATION	0.9999975606150611	WITHOUT_CLASSIFICATION	2.439384938892146E-6	DEFECT
// draw the radius grid lines, if any...	WITHOUT_CLASSIFICATION	0.9999979706521743	WITHOUT_CLASSIFICATION	2.0293478256771155E-6	DEFECT
// the datasets are not cloned, but listeners need to be added...	WITHOUT_CLASSIFICATION	0.9999966670276387	WITHOUT_CLASSIFICATION	3.3329723613415395E-6	DEFECT
// square	WITHOUT_CLASSIFICATION	0.9999991382118855	WITHOUT_CLASSIFICATION	8.617881144666559E-7	DEFECT
// circle	WITHOUT_CLASSIFICATION	0.9999990863579495	WITHOUT_CLASSIFICATION	9.13642050432046E-7	DEFECT
// up-pointing triangle	WITHOUT_CLASSIFICATION	0.9999979366042295	WITHOUT_CLASSIFICATION	2.0633957705222307E-6	DEFECT
// diamond	WITHOUT_CLASSIFICATION	0.9999917209411896	WITHOUT_CLASSIFICATION	8.279058810377366E-6	DEFECT
// horizontal rectangle	WITHOUT_CLASSIFICATION	0.9999797129055471	WITHOUT_CLASSIFICATION	2.028709445290512E-5	DEFECT
// down-pointing triangle	WITHOUT_CLASSIFICATION	0.9999952012892332	WITHOUT_CLASSIFICATION	4.798710766713773E-6	DEFECT
// horizontal ellipse	WITHOUT_CLASSIFICATION	0.9999959674894554	WITHOUT_CLASSIFICATION	4.032510544628176E-6	DEFECT
// right-pointing triangle	WITHOUT_CLASSIFICATION	0.9999973159065764	WITHOUT_CLASSIFICATION	2.684093423530244E-6	DEFECT
// vertical rectangle	WITHOUT_CLASSIFICATION	0.999990790559915	WITHOUT_CLASSIFICATION	9.209440085086931E-6	DEFECT
// left-pointing triangle	WITHOUT_CLASSIFICATION	0.9999963599353151	WITHOUT_CLASSIFICATION	3.6400646847424895E-6	DEFECT
// an empty dataset should return a null range	WITHOUT_CLASSIFICATION	0.999958276217122	WITHOUT_CLASSIFICATION	4.1723782877996026E-5	DEFECT
// adjust for insets...	WITHOUT_CLASSIFICATION	0.9999875402365611	WITHOUT_CLASSIFICATION	1.2459763438857327E-5	DEFECT
// adjust the plot area by the interior spacing value	WITHOUT_CLASSIFICATION	0.9999988018865853	WITHOUT_CLASSIFICATION	1.198113414759678E-6	DEFECT
// set the new dataset, and register the chart as a change listener...	WITHOUT_CLASSIFICATION	0.9999998811458761	WITHOUT_CLASSIFICATION	1.1885412383443564E-7	DEFECT
// send a dataset change event to self to trigger plot change event	WITHOUT_CLASSIFICATION	0.9999999894400272	WITHOUT_CLASSIFICATION	1.055997277071697E-8	DEFECT
// return the override, if there is one...	WITHOUT_CLASSIFICATION	0.999998063233146	WITHOUT_CLASSIFICATION	1.9367668539627654E-6	DEFECT
//// SERIES PAINT /////////////////////////	WITHOUT_CLASSIFICATION	0.9999809762006445	WITHOUT_CLASSIFICATION	1.9023799355521622E-5	DEFECT
// otherwise look up the paint list	WITHOUT_CLASSIFICATION	0.9999998139007833	WITHOUT_CLASSIFICATION	1.8609921674729113E-7	DEFECT
// return the override, if there is one...	WITHOUT_CLASSIFICATION	0.999998063233146	WITHOUT_CLASSIFICATION	1.9367668539627654E-6	DEFECT
// return the override, if there is one...	WITHOUT_CLASSIFICATION	0.999998063233146	WITHOUT_CLASSIFICATION	1.9367668539627654E-6	DEFECT
//// SERIES OUTLINE PAINT ////////////////////////////	WITHOUT_CLASSIFICATION	0.9999700571825929	WITHOUT_CLASSIFICATION	2.9942817407035232E-5	DEFECT
// otherwise look up the paint list	WITHOUT_CLASSIFICATION	0.9999998139007833	WITHOUT_CLASSIFICATION	1.8609921674729113E-7	DEFECT
// otherwise look up the paint list	WITHOUT_CLASSIFICATION	0.9999998139007833	WITHOUT_CLASSIFICATION	1.8609921674729113E-7	DEFECT
// an empty dataset should return a null range	WITHOUT_CLASSIFICATION	0.999958276217122	WITHOUT_CLASSIFICATION	4.1723782877996026E-5	DEFECT
// ensure we have a maximum value to use on the axes	WITHOUT_CLASSIFICATION	0.9999983322023863	WITHOUT_CLASSIFICATION	1.6677976137034012E-6	DEFECT
//// SERIES OUTLINE STROKE /////////////////////	WITHOUT_CLASSIFICATION	0.9999656981102146	WITHOUT_CLASSIFICATION	3.430188978546792E-5	DEFECT
// Next, setup the plot area	WITHOUT_CLASSIFICATION	0.99999975909986	WITHOUT_CLASSIFICATION	2.409001399344989E-7	DEFECT
// make the chart area a square	WITHOUT_CLASSIFICATION	0.9999995181349683	WITHOUT_CLASSIFICATION	4.818650316719905E-7	DEFECT
// draw the axis and category label	WITHOUT_CLASSIFICATION	0.9999966813241074	WITHOUT_CLASSIFICATION	3.318675892615112E-6	DEFECT
// 1 = end of axis	WITHOUT_CLASSIFICATION	0.9999935110922998	WITHOUT_CLASSIFICATION	6.488907700088517E-6	DEFECT
// Now actually plot each of the series polygons..	WITHOUT_CLASSIFICATION	0.9999995913938629	WITHOUT_CLASSIFICATION	4.0860613705961663E-7	DEFECT
// plot the data...	WITHOUT_CLASSIFICATION	0.999998586531562	WITHOUT_CLASSIFICATION	1.4134684379816132E-6	DEFECT
// draw the polygon series...	WITHOUT_CLASSIFICATION	0.9999982485747113	WITHOUT_CLASSIFICATION	1.7514252886631534E-6	DEFECT
// Finds our starting angle from the centre for this axis	WITHOUT_CLASSIFICATION	0.9999956406319048	WITHOUT_CLASSIFICATION	4.359368095135691E-6	DEFECT
// The following angle calc will ensure there isn't a top // vertical axis - this may be useful if you don't want any // given criteria to 'appear' move important than the // others.. //  + (getDirection().getFactor() //        * (cat + 0.5) * 360 / catCount);	WITHOUT_CLASSIFICATION	0.9999933464267808	WITHOUT_CLASSIFICATION	6.653573219129026E-6	DEFECT
// find the point at the appropriate distance end point // along the axis/angle identified above and add it to the // polygon	WITHOUT_CLASSIFICATION	0.9999971676298669	WITHOUT_CLASSIFICATION	2.8323701331855474E-6	DEFECT
// put an elipse at the point being plotted..	WITHOUT_CLASSIFICATION	0.999992691645117	WITHOUT_CLASSIFICATION	7.308354883013473E-6	DEFECT
// Plot the polygon	WITHOUT_CLASSIFICATION	0.9999971486337861	WITHOUT_CLASSIFICATION	2.8513662138812515E-6	DEFECT
// set the anchor value for the horizontal axis...	WITHOUT_CLASSIFICATION	0.9999992805028333	WITHOUT_CLASSIFICATION	7.194971667483888E-7	DEFECT
/* shapeFilled=*/	WITHOUT_CLASSIFICATION	0.9999965022086249	WITHOUT_CLASSIFICATION	3.497791375124171E-6	DEFECT
// an empty dataset should return a null range	WITHOUT_CLASSIFICATION	0.999958276217122	WITHOUT_CLASSIFICATION	4.1723782877996026E-5	DEFECT
// adjust for insets...	WITHOUT_CLASSIFICATION	0.9999875402365611	WITHOUT_CLASSIFICATION	1.2459763438857327E-5	DEFECT
// send a dataset change event to self...	WITHOUT_CLASSIFICATION	0.9999999511968394	WITHOUT_CLASSIFICATION	4.880316054584632E-8	DEFECT
// plot is likely registered as a listener with the existing axis...	WITHOUT_CLASSIFICATION	0.9999969703234257	WITHOUT_CLASSIFICATION	3.0296765743132293E-6	DEFECT
// if the plot area is too small, just return...	WITHOUT_CLASSIFICATION	0.999997473733906	WITHOUT_CLASSIFICATION	2.5262660939899837E-6	DEFECT
// record the plot area...	WITHOUT_CLASSIFICATION	0.9999970749081581	WITHOUT_CLASSIFICATION	2.9250918419552724E-6	DEFECT
// OK	WITHOUT_CLASSIFICATION	0.9999882625349319	WITHOUT_CLASSIFICATION	1.1737465068006349E-5	DEFECT
// draw the background	WITHOUT_CLASSIFICATION	0.999998108888288	WITHOUT_CLASSIFICATION	1.8911117120475818E-6	DEFECT
// plot the data (unless the dataset is null)...	WITHOUT_CLASSIFICATION	0.9999950022697387	WITHOUT_CLASSIFICATION	4.997730261251224E-6	DEFECT
// adjust the drawing area for the plot insets (if any)...	WITHOUT_CLASSIFICATION	0.9999997313513571	WITHOUT_CLASSIFICATION	2.6864864286734655E-7	DEFECT
// delegate...	WITHOUT_CLASSIFICATION	0.9999981823029382	WITHOUT_CLASSIFICATION	1.8176970616843207E-6	DEFECT
// delegate...	WITHOUT_CLASSIFICATION	0.9999981823029382	WITHOUT_CLASSIFICATION	1.8176970616843207E-6	DEFECT
// delegate...	WITHOUT_CLASSIFICATION	0.9999981823029382	WITHOUT_CLASSIFICATION	1.8176970616843207E-6	DEFECT
// fake a dataset change event to update axes...	WITHOUT_CLASSIFICATION	0.9999996125948674	WITHOUT_CLASSIFICATION	3.874051325883142E-7	DEFECT
// fake a dataset change event to update axes...	WITHOUT_CLASSIFICATION	0.9999996125948674	WITHOUT_CLASSIFICATION	3.874051325883142E-7	DEFECT
// axisIndices can be: // 1.  null; // 2.  non-empty, containing only Integer objects that are unique.	WITHOUT_CLASSIFICATION	0.9999877583559159	WITHOUT_CLASSIFICATION	1.2241644084002655E-5	DEFECT
// reserve some space for the domain axis...	WITHOUT_CLASSIFICATION	0.9999903993091247	WITHOUT_CLASSIFICATION	9.600690875239128E-6	DEFECT
// reserve some space for the range axis...	WITHOUT_CLASSIFICATION	0.9999919192466813	WITHOUT_CLASSIFICATION	8.080753318684183E-6	DEFECT
// draw the plot background and axes...	WITHOUT_CLASSIFICATION	0.9999996261918983	WITHOUT_CLASSIFICATION	3.738081017422091E-7	DEFECT
// check that a null dataset returns null bounds	WITHOUT_CLASSIFICATION	0.999998899450529	WITHOUT_CLASSIFICATION	1.1005494709605313E-6	DEFECT
// Lastly, fill the web polygon if this is required	WITHOUT_CLASSIFICATION	0.9999986217890443	WITHOUT_CLASSIFICATION	1.378210955743004E-6	DEFECT
// if series are in rows, then the categories are the column keys	WITHOUT_CLASSIFICATION	0.9999980374353657	WITHOUT_CLASSIFICATION	1.9625646342021926E-6	DEFECT
// if series are in columns, then the categories are the row keys	WITHOUT_CLASSIFICATION	0.9999978722709266	WITHOUT_CLASSIFICATION	2.1277290734353545E-6	DEFECT
//          negatives = true;	WITHOUT_CLASSIFICATION	0.9999839174167776	WITHOUT_CLASSIFICATION	1.6082583222401688E-5	DEFECT
//  value = Math.pow(10,value);	WITHOUT_CLASSIFICATION	0.9999969243439206	WITHOUT_CLASSIFICATION	3.0756560793293663E-6	DEFECT
//  izV = steps*numSteps*(int)((value/minZ)/(maxZlog-minZlog)) + 2;	WITHOUT_CLASSIFICATION	0.9999982962801168	WITHOUT_CLASSIFICATION	1.7037198832265772E-6	DEFECT
// super.setSeriesPaint(series, paint);	WITHOUT_CLASSIFICATION	0.9999998238880708	WITHOUT_CLASSIFICATION	1.7611192909910652E-7	DEFECT
/// Squares	WITHOUT_CLASSIFICATION	0.9999984910052564	WITHOUT_CLASSIFICATION	1.508994743636489E-6	DEFECT
/// Draw N, S, E, W	WITHOUT_CLASSIFICATION	0.9999922806149979	WITHOUT_CLASSIFICATION	7.719385002069037E-6	DEFECT
// no zooming possible	WITHOUT_CLASSIFICATION	0.9999934919396712	WITHOUT_CLASSIFICATION	6.508060328776779E-6	DEFECT
// clone share data sets => add the clone as listener to the dataset	WITHOUT_CLASSIFICATION	0.9999999036425883	WITHOUT_CLASSIFICATION	9.635741173865094E-8	DEFECT
// only relevant when this is a subplot	WITHOUT_CLASSIFICATION	0.9999849827681377	WITHOUT_CLASSIFICATION	1.5017231862344483E-5	DEFECT
// allocate storage for datasets, axes and renderers (all optional)	WITHOUT_CLASSIFICATION	0.9999997032064794	WITHOUT_CLASSIFICATION	2.967935206650761E-7	DEFECT
// reserve space for the domain axes...	WITHOUT_CLASSIFICATION	0.999996370667651	WITHOUT_CLASSIFICATION	3.6293323488831718E-6	DEFECT
// reserve space for the range axes...	WITHOUT_CLASSIFICATION	0.9999976074563245	WITHOUT_CLASSIFICATION	2.3925436754481635E-6	DEFECT
// the first axis in the list is used for data <--> Java2D	WITHOUT_CLASSIFICATION	0.999999741391264	WITHOUT_CLASSIFICATION	2.586087360225072E-7	DEFECT
// the first axis in the list is used for data <--> Java2D	WITHOUT_CLASSIFICATION	0.999999741391264	WITHOUT_CLASSIFICATION	2.586087360225072E-7	DEFECT
// draw domain crosshair if required...	WITHOUT_CLASSIFICATION	0.9999996036445616	WITHOUT_CLASSIFICATION	3.9635543835960377E-7	DEFECT
// draw range crosshair if required...	WITHOUT_CLASSIFICATION	0.9999996146444632	WITHOUT_CLASSIFICATION	3.8535553680546376E-7	DEFECT
// add domain axes to lists...	WITHOUT_CLASSIFICATION	0.9999551763868004	WITHOUT_CLASSIFICATION	4.4823613199570914E-5	DEFECT
// add range axes to lists...	WITHOUT_CLASSIFICATION	0.9999901440707906	WITHOUT_CLASSIFICATION	9.855929209371833E-6	DEFECT
// draw the top axes	WITHOUT_CLASSIFICATION	0.999998921002345	WITHOUT_CLASSIFICATION	1.0789976550590376E-6	DEFECT
// draw the bottom axes	WITHOUT_CLASSIFICATION	0.9999945256911805	WITHOUT_CLASSIFICATION	5.474308819503112E-6	DEFECT
// draw the left axes	WITHOUT_CLASSIFICATION	0.9999975696615371	WITHOUT_CLASSIFICATION	2.4303384629603933E-6	DEFECT
// draw the right axes	WITHOUT_CLASSIFICATION	0.9999939708266674	WITHOUT_CLASSIFICATION	6.029173332574028E-6	DEFECT
// draw the range grid lines, if any...	WITHOUT_CLASSIFICATION	0.9999975085314949	WITHOUT_CLASSIFICATION	2.4914685049993425E-6	DEFECT
// no renderer, no gridlines...	WITHOUT_CLASSIFICATION	0.9999993099113708	WITHOUT_CLASSIFICATION	6.900886292876778E-7	DEFECT
// no renderer, no gridlines...	WITHOUT_CLASSIFICATION	0.9999993099113708	WITHOUT_CLASSIFICATION	6.900886292876778E-7	DEFECT
// draw the domain grid lines, if any...	WITHOUT_CLASSIFICATION	0.9999975606150611	WITHOUT_CLASSIFICATION	2.439384938892146E-6	DEFECT
// draw the markers that are associated with a specific dataset...	WITHOUT_CLASSIFICATION	0.9999995537362457	WITHOUT_CLASSIFICATION	4.4626375423853135E-7	DEFECT
// now draw annotations and render data items...	WITHOUT_CLASSIFICATION	0.9999932321145437	WITHOUT_CLASSIFICATION	6.767885456337368E-6	DEFECT
// draw background annotations	WITHOUT_CLASSIFICATION	0.9999974309651902	WITHOUT_CLASSIFICATION	2.569034809878068E-6	DEFECT
// render data items...	WITHOUT_CLASSIFICATION	0.9999964192837055	WITHOUT_CLASSIFICATION	3.5807162945281732E-6	DEFECT
// draw foreground annotations	WITHOUT_CLASSIFICATION	0.9999968262908471	WITHOUT_CLASSIFICATION	3.1737091528947624E-6	DEFECT
//  0 | 1 //  --+-- //  2 | 3	WITHOUT_CLASSIFICATION	0.9999916321093408	WITHOUT_CLASSIFICATION	8.36789065921101E-6	DEFECT
// we can't draw quadrants without a valid x-axis	WITHOUT_CLASSIFICATION	0.9999943976868734	WITHOUT_CLASSIFICATION	5.60231312663946E-6	DEFECT
// we can't draw quadrants without a valid y-axis	WITHOUT_CLASSIFICATION	0.9999931240019653	WITHOUT_CLASSIFICATION	6.875998034742404E-6	DEFECT
// PlotOrientation.VERTICAL	WITHOUT_CLASSIFICATION	0.999993619420425	WITHOUT_CLASSIFICATION	6.3805795749696445E-6	DEFECT
// can't render anything without axes	WITHOUT_CLASSIFICATION	0.9999929750356146	WITHOUT_CLASSIFICATION	7.024964385365583E-6	DEFECT
// no default renderer available	WITHOUT_CLASSIFICATION	0.9999992246408799	WITHOUT_CLASSIFICATION	7.753591200329823E-7	DEFECT
//render series in reverse order	WITHOUT_CLASSIFICATION	0.9999909464700613	WITHOUT_CLASSIFICATION	9.053529938682598E-6	DEFECT
//render series in forward order	WITHOUT_CLASSIFICATION	0.9999897715399798	WITHOUT_CLASSIFICATION	1.0228460020106862E-5	DEFECT
// use the TextTitle class because it is a concrete subclass	WITHOUT_CLASSIFICATION	0.9999995258695575	WITHOUT_CLASSIFICATION	4.7413044236198116E-7	DEFECT
// set up info collection...	WITHOUT_CLASSIFICATION	0.9999989954802564	WITHOUT_CLASSIFICATION	1.0045197436780922E-6	DEFECT
// adjust the drawing area for plot insets (if any)...	WITHOUT_CLASSIFICATION	0.9999997382433852	WITHOUT_CLASSIFICATION	2.617566147725847E-7	DEFECT
// try the parent plot	WITHOUT_CLASSIFICATION	0.9999980440669314	WITHOUT_CLASSIFICATION	1.9559330685067157E-6	DEFECT
// try the parent plot	WITHOUT_CLASSIFICATION	0.9999980440669314	WITHOUT_CLASSIFICATION	1.9559330685067157E-6	DEFECT
// iterate through the datasets that map to the axis and get the union // of the ranges.	WITHOUT_CLASSIFICATION	0.9999988413885995	WITHOUT_CLASSIFICATION	1.1586114004575031E-6	DEFECT
// delegate to other method	WITHOUT_CLASSIFICATION	0.9999912745053573	WITHOUT_CLASSIFICATION	8.725494642762143E-6	DEFECT
// delegate to other method	WITHOUT_CLASSIFICATION	0.9999912745053573	WITHOUT_CLASSIFICATION	8.725494642762143E-6	DEFECT
// perform the zoom on each range axis	WITHOUT_CLASSIFICATION	0.9999941069858206	WITHOUT_CLASSIFICATION	5.893014179392294E-6	DEFECT
// get the relevant source coordinate given the plot orientation	WITHOUT_CLASSIFICATION	0.999999883023863	WITHOUT_CLASSIFICATION	1.1697613705766243E-7	DEFECT
// get the relevant source coordinate given the plot orientation	WITHOUT_CLASSIFICATION	0.999999883023863	WITHOUT_CLASSIFICATION	1.1697613705766243E-7	DEFECT
// draw the plot background and axes...	WITHOUT_CLASSIFICATION	0.9999996261918983	WITHOUT_CLASSIFICATION	3.738081017422091E-7	DEFECT
// the datasets are not cloned, but listeners need to be added...	WITHOUT_CLASSIFICATION	0.9999966670276387	WITHOUT_CLASSIFICATION	3.3329723613415395E-6	DEFECT
// if the event was caused by a change to series visibility, then // the axis ranges might need updating...	WITHOUT_CLASSIFICATION	0.999999980421787	WITHOUT_CLASSIFICATION	1.9578213057861936E-8	DEFECT
// check that the renderer has a corresponding dataset (it doesn't // matter if the dataset is null)	WITHOUT_CLASSIFICATION	0.9998599596525756	WITHOUT_CLASSIFICATION	1.4004034742446004E-4	DEFECT
// check that the renderer has a corresponding dataset (it doesn't // matter if the dataset is null)	WITHOUT_CLASSIFICATION	0.9998599596525756	WITHOUT_CLASSIFICATION	1.4004034742446004E-4	DEFECT
// set the anchor value for the vertical axis...	WITHOUT_CLASSIFICATION	0.999999344162683	WITHOUT_CLASSIFICATION	6.558373170821662E-7	DEFECT
// grab the plot's annotations	WITHOUT_CLASSIFICATION	0.9999969546758746	WITHOUT_CLASSIFICATION	3.045324125347867E-6	DEFECT
// is it a domain axis?	WITHOUT_CLASSIFICATION	0.998842304372828	WITHOUT_CLASSIFICATION	0.0011576956271720608	DEFECT
// or is it a range axis?	WITHOUT_CLASSIFICATION	0.9999412269042656	WITHOUT_CLASSIFICATION	5.877309573440739E-5	DEFECT
// if the axes use a linear scale, you can uncomment the code below and // switch to the alternative transX/transY calculation inside the loop // that follows - it is a little bit faster then. // // int xx = (int) dataArea.getMinX(); // int ww = (int) dataArea.getWidth(); // int yy = (int) dataArea.getMaxY(); // int hh = (int) dataArea.getHeight(); // double domainMin = this.domainAxis.getLowerBound(); // double domainLength = this.domainAxis.getUpperBound() - domainMin; // double rangeMin = this.rangeAxis.getLowerBound(); // double rangeLength = this.rangeAxis.getUpperBound() - rangeMin;	WITHOUT_CLASSIFICATION	0.9996040629703088	WITHOUT_CLASSIFICATION	3.9593702969126037E-4	DEFECT
// register the plot as a listener with its axes, datasets, and // renderers...	WITHOUT_CLASSIFICATION	0.9999992019558991	WITHOUT_CLASSIFICATION	7.9804410095671E-7	DEFECT
// perform the zoom on each domain axis	WITHOUT_CLASSIFICATION	0.9999911010166143	WITHOUT_CLASSIFICATION	8.898983385834533E-6	DEFECT
// lineVisible	WITHOUT_CLASSIFICATION	0.9999921457283625	WITHOUT_CLASSIFICATION	7.854271637576261E-6	DEFECT
// adjust for insets...	WITHOUT_CLASSIFICATION	0.9999875402365611	WITHOUT_CLASSIFICATION	1.2459763438857327E-5	DEFECT
// set the new dataset, and register the chart as a change listener...	WITHOUT_CLASSIFICATION	0.9999998811458761	WITHOUT_CLASSIFICATION	1.1885412383443564E-7	DEFECT
// send a dataset change event to self...	WITHOUT_CLASSIFICATION	0.9999999511968394	WITHOUT_CLASSIFICATION	4.880316054584632E-8	DEFECT
// draw the background	WITHOUT_CLASSIFICATION	0.999998108888288	WITHOUT_CLASSIFICATION	1.8911117120475818E-6	DEFECT
// intentionally blank	WITHOUT_CLASSIFICATION	0.9999688094839183	WITHOUT_CLASSIFICATION	3.1190516081664604E-5	DEFECT
// get the source coordinate - this plot has always a VERTICAL // orientation	WITHOUT_CLASSIFICATION	0.9999973209172472	WITHOUT_CLASSIFICATION	2.6790827527694223E-6	DEFECT
// images considered equal only if they're the SAME object // TODO: is there a way to do a better test?	WITHOUT_CLASSIFICATION	0.8827649112057866	DEFECT	0.11723508879421332	WITHOUT_CLASSIFICATION
//int transX = (int) (xx + ww * (x - domainMin) / domainLength); //int transY = (int) (yy - hh * (y - rangeMin) / rangeLength);	WITHOUT_CLASSIFICATION	0.9998782139458781	WITHOUT_CLASSIFICATION	1.2178605412194572E-4	DEFECT
// if there is an existing dataset, remove the plot from the list // of change listeners...	WITHOUT_CLASSIFICATION	0.9999947339473696	WITHOUT_CLASSIFICATION	5.266052630377585E-6	DEFECT
// plot is registered as a listener with the existing axis...	WITHOUT_CLASSIFICATION	0.9999980029220045	WITHOUT_CLASSIFICATION	1.997077995535997E-6	DEFECT
// adjust for padding...	WITHOUT_CLASSIFICATION	0.999993751700679	WITHOUT_CLASSIFICATION	6.248299321038156E-6	DEFECT
// already calculated // already calculated	WITHOUT_CLASSIFICATION	0.999973584085221	WITHOUT_CLASSIFICATION	2.6415914779001108E-5	DEFECT
// draw range indicators...	WITHOUT_CLASSIFICATION	0.999993073504994	WITHOUT_CLASSIFICATION	6.926495006014666E-6	DEFECT
// draw start of normal range	WITHOUT_CLASSIFICATION	0.9999954930330546	WITHOUT_CLASSIFICATION	4.506966945429894E-6	DEFECT
// draw start of warning range	WITHOUT_CLASSIFICATION	0.9999912009123177	WITHOUT_CLASSIFICATION	8.79908768228306E-6	DEFECT
// draw start of critical range	WITHOUT_CLASSIFICATION	0.999999645748354	WITHOUT_CLASSIFICATION	3.5425164598795527E-7	DEFECT
// draw the axis...	WITHOUT_CLASSIFICATION	0.999997651278613	WITHOUT_CLASSIFICATION	2.3487213871372293E-6	DEFECT
//cursor = midX - COLUMN_RADIUS - AXIS_GAP;	WITHOUT_CLASSIFICATION	0.9999769166961776	WITHOUT_CLASSIFICATION	2.3083303822280823E-5	DEFECT
// draw text value on screen	WITHOUT_CLASSIFICATION	0.9999970760790263	WITHOUT_CLASSIFICATION	2.9239209737242685E-6	DEFECT
//  draw units indicator	WITHOUT_CLASSIFICATION	0.9999987489841314	WITHOUT_CLASSIFICATION	1.2510158684826209E-6	DEFECT
// draw thermometer outline	WITHOUT_CLASSIFICATION	0.9999976013268509	WITHOUT_CLASSIFICATION	2.39867314905984E-6	DEFECT
// no domain axis to zoom	WITHOUT_CLASSIFICATION	0.9999273670092628	WITHOUT_CLASSIFICATION	7.263299073723031E-5	DEFECT
// work out the anchor point	WITHOUT_CLASSIFICATION	0.9999958238011899	WITHOUT_CLASSIFICATION	4.176198810031031E-6	DEFECT
// calculate the bounds of the template value	WITHOUT_CLASSIFICATION	0.9999986620303605	WITHOUT_CLASSIFICATION	1.3379696394847798E-6	DEFECT
// align this rectangle to the frameAnchor	WITHOUT_CLASSIFICATION	0.999995968086987	WITHOUT_CLASSIFICATION	4.031913013033694E-6	DEFECT
// add the insets	WITHOUT_CLASSIFICATION	0.9999972043246729	WITHOUT_CLASSIFICATION	2.795675327114574E-6	DEFECT
// draw the border	WITHOUT_CLASSIFICATION	0.9999977068558836	WITHOUT_CLASSIFICATION	2.293144116475496E-6	DEFECT
// now find the text anchor point	WITHOUT_CLASSIFICATION	0.9999992229297349	WITHOUT_CLASSIFICATION	7.770702651238254E-7	DEFECT
/* lineVisible= */	WITHOUT_CLASSIFICATION	0.9999851434608487	WITHOUT_CLASSIFICATION	1.4856539151373764E-5	DEFECT
// send a dataset change event to self...	WITHOUT_CLASSIFICATION	0.9999999511968394	WITHOUT_CLASSIFICATION	4.880316054584632E-8	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9999997548832702	WITHOUT_CLASSIFICATION	2.4511672975961386E-7	DEFECT
// return the override, if there is one...	WITHOUT_CLASSIFICATION	0.999998063233146	WITHOUT_CLASSIFICATION	1.9367668539627654E-6	DEFECT
// return the override, if there is one...	WITHOUT_CLASSIFICATION	0.999998063233146	WITHOUT_CLASSIFICATION	1.9367668539627654E-6	DEFECT
// otherwise look up the paint list	WITHOUT_CLASSIFICATION	0.9999998139007833	WITHOUT_CLASSIFICATION	1.8609921674729113E-7	DEFECT
// work out the anchor point	WITHOUT_CLASSIFICATION	0.9999958238011899	WITHOUT_CLASSIFICATION	4.176198810031031E-6	DEFECT
// urlText	WITHOUT_CLASSIFICATION	0.9999980387587099	WITHOUT_CLASSIFICATION	1.961241290122473E-6	DEFECT
// first, expand the viewing area into a drawing frame	WITHOUT_CLASSIFICATION	0.999999176496968	WITHOUT_CLASSIFICATION	8.235030319674055E-7	DEFECT
// draw the background if there is one...	WITHOUT_CLASSIFICATION	0.9999996789666765	WITHOUT_CLASSIFICATION	3.2103332351994116E-7	DEFECT
// draw the pointers	WITHOUT_CLASSIFICATION	0.9999995269804872	WITHOUT_CLASSIFICATION	4.7301951289128164E-7	DEFECT
// draw the cap if there is one...	WITHOUT_CLASSIFICATION	0.9999991545979076	WITHOUT_CLASSIFICATION	8.45402092508035E-7	DEFECT
// now do the minor tick marks	WITHOUT_CLASSIFICATION	0.9999979981157188	WITHOUT_CLASSIFICATION	2.001884281234579E-6	DEFECT
// lowerBound	WITHOUT_CLASSIFICATION	0.999998237200647	WITHOUT_CLASSIFICATION	1.7627993530274961E-6	DEFECT
// upperBound	WITHOUT_CLASSIFICATION	0.999996544825702	WITHOUT_CLASSIFICATION	3.4551742979778354E-6	DEFECT
// startAngle	WITHOUT_CLASSIFICATION	0.9999996051951023	WITHOUT_CLASSIFICATION	3.948048976218814E-7	DEFECT
// extent	WITHOUT_CLASSIFICATION	0.9999975230398065	WITHOUT_CLASSIFICATION	2.476960193580071E-6	DEFECT
// tickRadius	WITHOUT_CLASSIFICATION	0.9999983108014734	WITHOUT_CLASSIFICATION	1.6891985266558915E-6	DEFECT
// we don't clone the listeners	WITHOUT_CLASSIFICATION	0.9999853347162696	WITHOUT_CLASSIFICATION	1.4665283730436531E-5	DEFECT
// use item paint for fills by default	WITHOUT_CLASSIFICATION	0.9999994845917181	WITHOUT_CLASSIFICATION	5.154082818261999E-7	DEFECT
// draw the outline of the filled polygon	WITHOUT_CLASSIFICATION	0.9999995341399871	WITHOUT_CLASSIFICATION	4.6586001283289063E-7	DEFECT
// just the lines, no filling	WITHOUT_CLASSIFICATION	0.9999964540567474	WITHOUT_CLASSIFICATION	3.5459432524250238E-6	DEFECT
// draw the item shapes	WITHOUT_CLASSIFICATION	0.9999978076670644	WITHOUT_CLASSIFICATION	2.1923329357451966E-6	DEFECT
// SERIES VISIBLE (not yet respected by all renderers)	WITHOUT_CLASSIFICATION	0.9999970581784624	WITHOUT_CLASSIFICATION	2.941821537731852E-6	DEFECT
// SERIES VISIBLE IN LEGEND (not yet respected by all renderers)	WITHOUT_CLASSIFICATION	0.999998133350313	WITHOUT_CLASSIFICATION	1.8666496870355663E-6	DEFECT
// PAINT	WITHOUT_CLASSIFICATION	0.9999911134632126	WITHOUT_CLASSIFICATION	8.886536787472603E-6	DEFECT
//// FILL PAINT //////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9998545003988666	WITHOUT_CLASSIFICATION	1.4549960113334408E-4	DEFECT
// otherwise look up the paint table	WITHOUT_CLASSIFICATION	0.999999903527708	WITHOUT_CLASSIFICATION	9.647229204961467E-8	DEFECT
// return the override, if there is one...	WITHOUT_CLASSIFICATION	0.999998063233146	WITHOUT_CLASSIFICATION	1.9367668539627654E-6	DEFECT
// return the override, if there is one...	WITHOUT_CLASSIFICATION	0.999998063233146	WITHOUT_CLASSIFICATION	1.9367668539627654E-6	DEFECT
// return the override, if there is one...	WITHOUT_CLASSIFICATION	0.999998063233146	WITHOUT_CLASSIFICATION	1.9367668539627654E-6	DEFECT
// return the override, if there is one...	WITHOUT_CLASSIFICATION	0.999998063233146	WITHOUT_CLASSIFICATION	1.9367668539627654E-6	DEFECT
// return the override, if there is one...	WITHOUT_CLASSIFICATION	0.999998063233146	WITHOUT_CLASSIFICATION	1.9367668539627654E-6	DEFECT
// return the override, if there is one...	WITHOUT_CLASSIFICATION	0.999998063233146	WITHOUT_CLASSIFICATION	1.9367668539627654E-6	DEFECT
// we create an event with a special flag set...the purpose of // this is to communicate to the plot (the default receiver of // the event) that series visibility has changed so the axis // ranges might need updating...	WITHOUT_CLASSIFICATION	0.9999997941803264	WITHOUT_CLASSIFICATION	2.0581967359585528E-7	DEFECT
// otherwise look up the paint table	WITHOUT_CLASSIFICATION	0.999999903527708	WITHOUT_CLASSIFICATION	9.647229204961467E-8	DEFECT
// otherwise look up the paint table	WITHOUT_CLASSIFICATION	0.999999903527708	WITHOUT_CLASSIFICATION	9.647229204961467E-8	DEFECT
// OUTLINE PAINT //////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999793815103448	WITHOUT_CLASSIFICATION	2.0618489655198585E-5	DEFECT
// STROKE	WITHOUT_CLASSIFICATION	0.9999802455839609	WITHOUT_CLASSIFICATION	1.975441603901352E-5	DEFECT
// OUTLINE STROKE	WITHOUT_CLASSIFICATION	0.9999764738334873	WITHOUT_CLASSIFICATION	2.352616651266626E-5	DEFECT
// otherwise look up the stroke table	WITHOUT_CLASSIFICATION	0.9999998482630107	WITHOUT_CLASSIFICATION	1.5173698934504948E-7	DEFECT
// SHAPE	WITHOUT_CLASSIFICATION	0.9999912652898072	WITHOUT_CLASSIFICATION	8.734710192779392E-6	DEFECT
// otherwise look up the shape list	WITHOUT_CLASSIFICATION	0.9999997764958515	WITHOUT_CLASSIFICATION	2.2350414842600293E-7	DEFECT
// ITEM LABEL VISIBILITY...	WITHOUT_CLASSIFICATION	0.9999158508266048	WITHOUT_CLASSIFICATION	8.414917339522702E-5	DEFECT
// otherwise look up the boolean table	WITHOUT_CLASSIFICATION	0.9999997660906755	WITHOUT_CLASSIFICATION	2.3390932441207845E-7	DEFECT
// this should have been defined as a boolean primitive, because // allowing null values is a nuisance...but it is part of the final // API now, so we'll have to support it.	WITHOUT_CLASSIFICATION	0.9999939986681164	WITHOUT_CLASSIFICATION	6.0013318835631754E-6	DEFECT
//// ITEM LABEL FONT //////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999315211105994	WITHOUT_CLASSIFICATION	6.847888940063513E-5	DEFECT
//// ITEM LABEL PAINT  ////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999699800959138	WITHOUT_CLASSIFICATION	3.0019904086262118E-5	DEFECT
// POSITIVE ITEM LABEL POSITION...	WITHOUT_CLASSIFICATION	0.9999251799695935	WITHOUT_CLASSIFICATION	7.48200304064344E-5	DEFECT
// otherwise look up the position table	WITHOUT_CLASSIFICATION	0.9999998674136409	WITHOUT_CLASSIFICATION	1.3258635912840943E-7	DEFECT
// NEGATIVE ITEM LABEL POSITION...	WITHOUT_CLASSIFICATION	0.999935347323268	WITHOUT_CLASSIFICATION	6.465267673196536E-5	DEFECT
// otherwise look up the position list	WITHOUT_CLASSIFICATION	0.9999997537714391	WITHOUT_CLASSIFICATION	2.4622856079273244E-7	DEFECT
// the commented out code would be better, but only if // RendererChangeEvent is immutable, which it isn't.  See if there is // a way to fix this...	WITHOUT_CLASSIFICATION	0.9999200862634319	WITHOUT_CLASSIFICATION	7.991373656811357E-5	DEFECT
// 'paint' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999994698989447	WITHOUT_CLASSIFICATION	5.301010552809801E-7	DEFECT
// 'basePaint' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999998311019626	WITHOUT_CLASSIFICATION	1.6889803751410192E-7	DEFECT
// 'outlinePaint' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999995552709091	WITHOUT_CLASSIFICATION	4.44729090948327E-7	DEFECT
// 'baseOutlinePaint' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999997327827487	WITHOUT_CLASSIFICATION	2.672172512293684E-7	DEFECT
// 'stroke' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999993559086198	WITHOUT_CLASSIFICATION	6.440913802098945E-7	DEFECT
// 'baseStroke' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.999999605958272	WITHOUT_CLASSIFICATION	3.9404172814080273E-7	DEFECT
// we create an event with a special flag set...the purpose of // this is to communicate to the plot (the default receiver of // the event) that series visibility has changed so the axis // ranges might need updating...	WITHOUT_CLASSIFICATION	0.9999997941803264	WITHOUT_CLASSIFICATION	2.0581967359585528E-7	DEFECT
// 'basePaint' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999998311019626	WITHOUT_CLASSIFICATION	1.6889803751410192E-7	DEFECT
// shapeList // baseShape	WITHOUT_CLASSIFICATION	0.9999960408109325	WITHOUT_CLASSIFICATION	3.959189067443282E-6	DEFECT
// 'outlineStroke' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999989282536037	WITHOUT_CLASSIFICATION	1.0717463963029566E-6	DEFECT
// 'baseOutlineStroke' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999993560367344	WITHOUT_CLASSIFICATION	6.439632655903898E-7	DEFECT
// 'itemLabelsVisible' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999996713781933	WITHOUT_CLASSIFICATION	3.2862180674265633E-7	DEFECT
// 'itemLabelFont' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999997251189667	WITHOUT_CLASSIFICATION	2.748810332212365E-7	DEFECT
// 'baseItemLabelFont' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999998956934678	WITHOUT_CLASSIFICATION	1.0430653217495925E-7	DEFECT
// 'itemLabelPaint' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.99999981427865	WITHOUT_CLASSIFICATION	1.8572134998418153E-7	DEFECT
// 'baseItemLabelPaint' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.999999929526062	WITHOUT_CLASSIFICATION	7.047393801199989E-8	DEFECT
// 'postiveItemLabelAnchor' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999998039402695	WITHOUT_CLASSIFICATION	1.960597304917797E-7	DEFECT
// 'baseItemLabelAnchor' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999998506888171	WITHOUT_CLASSIFICATION	1.4931118284398342E-7	DEFECT
// 'negativeItemLabelAnchor' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.999999465644383	WITHOUT_CLASSIFICATION	5.34355617062923E-7	DEFECT
// 'baseNegativeItemLabelAnchor' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999998654454842	WITHOUT_CLASSIFICATION	1.34554515823737E-7	DEFECT
// listeners are not restored automatically, but storage must be // provided...	WITHOUT_CLASSIFICATION	0.9998955172957009	WITHOUT_CLASSIFICATION	1.0448270429897622E-4	DEFECT
// === DEPRECATED CODE ===	WITHOUT_CLASSIFICATION	0.9998484377525697	WITHOUT_CLASSIFICATION	1.515622474302675E-4	DEFECT
// The following alternative is only supported in JDK 1.4 - we support // JDK 1.3.1 onwards // setItemLabelsVisible(Boolean.valueOf(visible));	WITHOUT_CLASSIFICATION	0.999953650219392	WITHOUT_CLASSIFICATION	4.6349780607974425E-5	DEFECT
//System.err.print(" creating new outlier list ");	WITHOUT_CLASSIFICATION	0.9999996052477961	WITHOUT_CLASSIFICATION	3.947522039120615E-7	DEFECT
//// TOOL TIP GENERATOR ///////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9997968587574233	WITHOUT_CLASSIFICATION	2.031412425768142E-4	DEFECT
//// URL GENERATOR ////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999131318104169	WITHOUT_CLASSIFICATION	8.686818958322531E-5	DEFECT
// handle value outside bounds...	WITHOUT_CLASSIFICATION	0.9999987107096611	WITHOUT_CLASSIFICATION	1.2892903389884902E-6	DEFECT
// handle special case where value is less that item zero	WITHOUT_CLASSIFICATION	0.9999956581242612	WITHOUT_CLASSIFICATION	4.341875738747162E-6	DEFECT
// special case where the lowest x-value is >= xLow	WITHOUT_CLASSIFICATION	0.9999996937976929	WITHOUT_CLASSIFICATION	3.0620230703613996E-7	DEFECT
// special case where the highest x-value is < xLow	WITHOUT_CLASSIFICATION	0.9999995835244377	WITHOUT_CLASSIFICATION	4.1647556218624113E-7	DEFECT
// skip any items that don't need including...	WITHOUT_CLASSIFICATION	0.9999724580352662	WITHOUT_CLASSIFICATION	2.7541964733754606E-5	DEFECT
// skip any items that don't need including...	WITHOUT_CLASSIFICATION	0.9999724580352662	WITHOUT_CLASSIFICATION	2.7541964733754606E-5	DEFECT
// assign a color for each unique value	WITHOUT_CLASSIFICATION	0.9999996433499543	WITHOUT_CLASSIFICATION	3.5665004576162123E-7	DEFECT
// assign a color for each unique value	WITHOUT_CLASSIFICATION	0.9999996433499543	WITHOUT_CLASSIFICATION	3.5665004576162123E-7	DEFECT
// in this case, every color has a unique value	WITHOUT_CLASSIFICATION	0.9997781888423631	WITHOUT_CLASSIFICATION	2.218111576368952E-4	DEFECT
// in this case, every color has a range of values	WITHOUT_CLASSIFICATION	0.9997653944487009	WITHOUT_CLASSIFICATION	2.3460555129913165E-4	DEFECT
// end class wafermaprenderer	WITHOUT_CLASSIFICATION	0.9999978341475249	WITHOUT_CLASSIFICATION	2.165852475138253E-6	DEFECT
// if there is no plot, there is no dataset to access...	WITHOUT_CLASSIFICATION	0.9999996955591129	WITHOUT_CLASSIFICATION	3.044408870881528E-7	DEFECT
// we don't know anything about the ordering of the x-values, // but we can still skip any initial values that fall outside the // range...	WITHOUT_CLASSIFICATION	0.9998716348796681	WITHOUT_CLASSIFICATION	1.2836512033184136E-4	DEFECT
// when the x-values are descending, the upper bound is found by // comparing against xLow	WITHOUT_CLASSIFICATION	0.9999967422306805	WITHOUT_CLASSIFICATION	3.257769319626139E-6	DEFECT
// more values than paints so map // multiple values to the same color	WITHOUT_CLASSIFICATION	0.9999992499529061	WITHOUT_CLASSIFICATION	7.500470938218429E-7	DEFECT
// end foreach map entry // end else	WITHOUT_CLASSIFICATION	0.9999997495242178	WITHOUT_CLASSIFICATION	2.5047578227690386E-7	DEFECT
// get the previous point and the next point so we can calculate a // "hot spot" for the area (used by the chart entity)...	WITHOUT_CLASSIFICATION	0.9999999860797065	WITHOUT_CLASSIFICATION	1.3920293454937203E-8	DEFECT
// FIXME: calculate xxLeft and xxRight	WITHOUT_CLASSIFICATION	0.7001298770098894	DEFECT	0.29987012299011057	WITHOUT_CLASSIFICATION
// handle positive value	WITHOUT_CLASSIFICATION	0.9999729668017615	WITHOUT_CLASSIFICATION	2.7033198238543284E-5	DEFECT
// LEFT POLYGON	WITHOUT_CLASSIFICATION	0.9999870993673058	WITHOUT_CLASSIFICATION	1.2900632694158954E-5	DEFECT
// LEFT POLYGON	WITHOUT_CLASSIFICATION	0.9999870993673058	WITHOUT_CLASSIFICATION	1.2900632694158954E-5	DEFECT
// RIGHT POLYGON	WITHOUT_CLASSIFICATION	0.9999944559802495	WITHOUT_CLASSIFICATION	5.544019750587692E-6	DEFECT
// RIGHT POLYGON	WITHOUT_CLASSIFICATION	0.9999944559802495	WITHOUT_CLASSIFICATION	5.544019750587692E-6	DEFECT
// handle negative value	WITHOUT_CLASSIFICATION	0.9999393746020043	WITHOUT_CLASSIFICATION	6.062539799573845E-5	DEFECT
// calculate the bar width	WITHOUT_CLASSIFICATION	0.9999961820203437	WITHOUT_CLASSIFICATION	3.817979656322814E-6	DEFECT
// '+' because v is negative	WITHOUT_CLASSIFICATION	0.9999831770350535	WITHOUT_CLASSIFICATION	1.6822964946534713E-5	DEFECT
// handle rendering separately for the two plot orientations...	WITHOUT_CLASSIFICATION	0.9999991601248814	WITHOUT_CLASSIFICATION	8.398751186291479E-7	DEFECT
// draw the blocks	WITHOUT_CLASSIFICATION	0.9999994594406197	WITHOUT_CLASSIFICATION	5.405593802144964E-7	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9999550874077812	WITHOUT_CLASSIFICATION	4.4912592218731675E-5	DEFECT
// SHAPES VISIBLE	WITHOUT_CLASSIFICATION	0.9999858386258798	WITHOUT_CLASSIFICATION	1.4161374120147899E-5	DEFECT
// SHAPES FILLED	WITHOUT_CLASSIFICATION	0.9999303514339656	WITHOUT_CLASSIFICATION	6.96485660344411E-5	DEFECT
// otherwise look up the paint table	WITHOUT_CLASSIFICATION	0.999999903527708	WITHOUT_CLASSIFICATION	9.647229204961467E-8	DEFECT
// a list to store the series index and bar region, so we can draw // all the labels at the end...	WITHOUT_CLASSIFICATION	0.9999970965684319	WITHOUT_CLASSIFICATION	2.9034315680947535E-6	DEFECT
// draw the blocks	WITHOUT_CLASSIFICATION	0.9999994594406197	WITHOUT_CLASSIFICATION	5.405593802144964E-7	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9999550874077812	WITHOUT_CLASSIFICATION	4.4912592218731675E-5	DEFECT
// LINES VISIBLE	WITHOUT_CLASSIFICATION	0.9999862607778816	WITHOUT_CLASSIFICATION	1.3739222118451614E-5	DEFECT
// preserves old behaviour	WITHOUT_CLASSIFICATION	0.9999972682418522	WITHOUT_CLASSIFICATION	2.7317581477690667E-6	DEFECT
// contained titles	WITHOUT_CLASSIFICATION	0.9999997635212737	WITHOUT_CLASSIFICATION	2.364787263093568E-7	DEFECT
// SHAPES FILLED	WITHOUT_CLASSIFICATION	0.9999303514339656	WITHOUT_CLASSIFICATION	6.96485660344411E-5	DEFECT
// return the overall setting, if there is one...	WITHOUT_CLASSIFICATION	0.9999995125635099	WITHOUT_CLASSIFICATION	4.874364899951482E-7	DEFECT
// delegate	WITHOUT_CLASSIFICATION	0.999998013412059	WITHOUT_CLASSIFICATION	1.9865879410089836E-6	DEFECT
// do nothing if item is not visible	WITHOUT_CLASSIFICATION	0.9999601628914766	WITHOUT_CLASSIFICATION	3.9837108523320076E-5	DEFECT
// do nothing if item is not visible	WITHOUT_CLASSIFICATION	0.9999601628914766	WITHOUT_CLASSIFICATION	3.9837108523320076E-5	DEFECT
// do nothing if both the line and shape are not visible	WITHOUT_CLASSIFICATION	0.9999948691359154	WITHOUT_CLASSIFICATION	5.13086408463908E-6	DEFECT
// nothing is drawn for null...	WITHOUT_CLASSIFICATION	0.9999693651467285	WITHOUT_CLASSIFICATION	3.06348532714902E-5	DEFECT
// current data point...	WITHOUT_CLASSIFICATION	0.9999978778717445	WITHOUT_CLASSIFICATION	2.1221282555070327E-6	DEFECT
// current data point...	WITHOUT_CLASSIFICATION	0.9999978778717445	WITHOUT_CLASSIFICATION	2.1221282555070327E-6	DEFECT
// previous data point...	WITHOUT_CLASSIFICATION	0.9999983570359978	WITHOUT_CLASSIFICATION	1.6429640020949497E-6	DEFECT
// draw the item label if there is one...	WITHOUT_CLASSIFICATION	0.9999995872212952	WITHOUT_CLASSIFICATION	4.1277870476316046E-7	DEFECT
// submit the current data point as a crosshair candidate	WITHOUT_CLASSIFICATION	0.9999996999818758	WITHOUT_CLASSIFICATION	3.000181242082485E-7	DEFECT
// set the default item label positions	WITHOUT_CLASSIFICATION	0.999999704828797	WITHOUT_CLASSIFICATION	2.9517120307343727E-7	DEFECT
// fill background...	WITHOUT_CLASSIFICATION	0.9999957356792629	WITHOUT_CLASSIFICATION	4.2643207371246385E-6	DEFECT
// highlight the background corners...	WITHOUT_CLASSIFICATION	0.9999984974386239	WITHOUT_CLASSIFICATION	1.5025613761042466E-6	DEFECT
// draw background image, if there is one...	WITHOUT_CLASSIFICATION	0.9999996477921259	WITHOUT_CLASSIFICATION	3.5220787413909093E-7	DEFECT
// both axes	WITHOUT_CLASSIFICATION	0.9999919567552743	WITHOUT_CLASSIFICATION	8.043244725667017E-6	DEFECT
// === DEPRECATED CODE ===	WITHOUT_CLASSIFICATION	0.9998484377525697	WITHOUT_CLASSIFICATION	1.515622474302675E-4	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9999550874077812	WITHOUT_CLASSIFICATION	4.4912592218731675E-5	DEFECT
// cases 5, 6, 7 and 8	WITHOUT_CLASSIFICATION	0.9999970122186224	WITHOUT_CLASSIFICATION	2.9877813776289767E-6	DEFECT
// put an outline around the data area...	WITHOUT_CLASSIFICATION	0.9999987617255115	WITHOUT_CLASSIFICATION	1.238274488457751E-6	DEFECT
// check the value we are plotting...	WITHOUT_CLASSIFICATION	0.9999984517510545	WITHOUT_CLASSIFICATION	1.5482489454659594E-6	DEFECT
// the bar is not visible	WITHOUT_CLASSIFICATION	0.9999811814526083	WITHOUT_CLASSIFICATION	1.8818547391689622E-5	DEFECT
// draw the bar...	WITHOUT_CLASSIFICATION	0.9999980521314893	WITHOUT_CLASSIFICATION	1.947868510744303E-6	DEFECT
// ITEM LABEL GENERATOR	WITHOUT_CLASSIFICATION	0.9998339159964248	WITHOUT_CLASSIFICATION	1.6608400357523754E-4	DEFECT
// return the generator for ALL series, if there is one...	WITHOUT_CLASSIFICATION	0.999999554814951	WITHOUT_CLASSIFICATION	4.4518504910316847E-7	DEFECT
// return the generator for ALL series, if there is one...	WITHOUT_CLASSIFICATION	0.999999554814951	WITHOUT_CLASSIFICATION	4.4518504910316847E-7	DEFECT
// otherwise look up the generator table	WITHOUT_CLASSIFICATION	0.9999998808785419	WITHOUT_CLASSIFICATION	1.1912145812381658E-7	DEFECT
// otherwise look up the generator table	WITHOUT_CLASSIFICATION	0.9999998808785419	WITHOUT_CLASSIFICATION	1.1912145812381658E-7	DEFECT
// TOOL TIP GENERATOR	WITHOUT_CLASSIFICATION	0.9994019404893761	WITHOUT_CLASSIFICATION	5.980595106238648E-4	DEFECT
// URL GENERATOR	WITHOUT_CLASSIFICATION	0.9999379910817403	WITHOUT_CLASSIFICATION	6.200891825968054E-5	DEFECT
// clip left and right bounds to data area	WITHOUT_CLASSIFICATION	0.9999998088221413	WITHOUT_CLASSIFICATION	1.9117785861708476E-7	DEFECT
// clip top and bottom bounds to data area	WITHOUT_CLASSIFICATION	0.9999998044213999	WITHOUT_CLASSIFICATION	1.9557860006691956E-7	DEFECT
// now draw the outlines, if visible...	WITHOUT_CLASSIFICATION	0.9999994947485363	WITHOUT_CLASSIFICATION	5.052514636420019E-7	DEFECT
// PlotOrientation.HORIZONTAL	WITHOUT_CLASSIFICATION	0.9999969851838815	WITHOUT_CLASSIFICATION	3.0148161184746503E-6	DEFECT
// check that a legend item needs to be displayed...	WITHOUT_CLASSIFICATION	0.9999978827896189	WITHOUT_CLASSIFICATION	2.117210381070439E-6	DEFECT
// defensive check	WITHOUT_CLASSIFICATION	0.9999936833273183	WITHOUT_CLASSIFICATION	6.316672681699557E-6	DEFECT
// BAR Y	WITHOUT_CLASSIFICATION	0.9999742115555806	WITHOUT_CLASSIFICATION	2.5788444419311415E-5	DEFECT
// BAR X	WITHOUT_CLASSIFICATION	0.9999502588378304	WITHOUT_CLASSIFICATION	4.97411621696056E-5	DEFECT
// cases 1, 2, 3 and 4	WITHOUT_CLASSIFICATION	0.9999978123527955	WITHOUT_CLASSIFICATION	2.1876472045111346E-6	DEFECT
// you can add a null list - it would have been better if this // required EMPTY_LIST	WITHOUT_CLASSIFICATION	0.999628392500576	WITHOUT_CLASSIFICATION	3.7160749942393226E-4	DEFECT
// BAR Y	WITHOUT_CLASSIFICATION	0.9999742115555806	WITHOUT_CLASSIFICATION	2.5788444419311415E-5	DEFECT
// BAR X	WITHOUT_CLASSIFICATION	0.9999502588378304	WITHOUT_CLASSIFICATION	4.97411621696056E-5	DEFECT
// cases 1, 2, 3 and 4	WITHOUT_CLASSIFICATION	0.9999978123527955	WITHOUT_CLASSIFICATION	2.1876472045111346E-6	DEFECT
// let the superclass handle it...	WITHOUT_CLASSIFICATION	0.9999997086117812	WITHOUT_CLASSIFICATION	2.913882188716601E-7	DEFECT
// bar is not visible	WITHOUT_CLASSIFICATION	0.9999548304111865	WITHOUT_CLASSIFICATION	4.5169588813432176E-5	DEFECT
// bar is not visible	WITHOUT_CLASSIFICATION	0.9999548304111865	WITHOUT_CLASSIFICATION	4.5169588813432176E-5	DEFECT
// cases 5, 6, 7 and 8	WITHOUT_CLASSIFICATION	0.9999970122186224	WITHOUT_CLASSIFICATION	2.9877813776289767E-6	DEFECT
// cases 5, 6, 7 and 8	WITHOUT_CLASSIFICATION	0.9999970122186224	WITHOUT_CLASSIFICATION	2.9877813776289767E-6	DEFECT
// cases 9, 10, 11 and 12	WITHOUT_CLASSIFICATION	0.999997753634363	WITHOUT_CLASSIFICATION	2.2463656369683358E-6	DEFECT
// cases 9, 10, 11 and 12	WITHOUT_CLASSIFICATION	0.999997753634363	WITHOUT_CLASSIFICATION	2.2463656369683358E-6	DEFECT
// draw the outline...	WITHOUT_CLASSIFICATION	0.9999976978669696	WITHOUT_CLASSIFICATION	2.3021330303780623E-6	DEFECT
// draw the outline...	WITHOUT_CLASSIFICATION	0.9999976978669696	WITHOUT_CLASSIFICATION	2.3021330303780623E-6	DEFECT
// standard deviation lines	WITHOUT_CLASSIFICATION	0.9999984536345142	WITHOUT_CLASSIFICATION	1.5463654858365287E-6	DEFECT
// standard deviation lines	WITHOUT_CLASSIFICATION	0.9999984536345142	WITHOUT_CLASSIFICATION	1.5463654858365287E-6	DEFECT
// no new methods	WITHOUT_CLASSIFICATION	0.9999948400846721	WITHOUT_CLASSIFICATION	5.159915327909953E-6	DEFECT
// value 0	WITHOUT_CLASSIFICATION	0.9999946050711765	WITHOUT_CLASSIFICATION	5.394928823385402E-6	DEFECT
// get the clipping values...	WITHOUT_CLASSIFICATION	0.9999960285348043	WITHOUT_CLASSIFICATION	3.971465195709331E-6	DEFECT
// submit the current data point as a crosshair candidate	WITHOUT_CLASSIFICATION	0.9999996999818758	WITHOUT_CLASSIFICATION	3.000181242082485E-7	DEFECT
// submit the current data point as a crosshair candidate	WITHOUT_CLASSIFICATION	0.9999996999818758	WITHOUT_CLASSIFICATION	3.000181242082485E-7	DEFECT
// draw the bar...	WITHOUT_CLASSIFICATION	0.9999980521314893	WITHOUT_CLASSIFICATION	1.947868510744303E-6	DEFECT
// cases 1, 2, 3 and 4	WITHOUT_CLASSIFICATION	0.9999978123527955	WITHOUT_CLASSIFICATION	2.1876472045111346E-6	DEFECT
// bar is not visible	WITHOUT_CLASSIFICATION	0.9999548304111865	WITHOUT_CLASSIFICATION	4.5169588813432176E-5	DEFECT
// bar is not visible	WITHOUT_CLASSIFICATION	0.9999548304111865	WITHOUT_CLASSIFICATION	4.5169588813432176E-5	DEFECT
// cases 5, 6, 7 and 8	WITHOUT_CLASSIFICATION	0.9999970122186224	WITHOUT_CLASSIFICATION	2.9877813776289767E-6	DEFECT
// cases 9, 10, 11 and 12	WITHOUT_CLASSIFICATION	0.999997753634363	WITHOUT_CLASSIFICATION	2.2463656369683358E-6	DEFECT
// draw the outline...	WITHOUT_CLASSIFICATION	0.9999976978669696	WITHOUT_CLASSIFICATION	2.3021330303780623E-6	DEFECT
// if we modify the original list, it's best if the URL generator is // not affected	WITHOUT_CLASSIFICATION	0.99999445193407	WITHOUT_CLASSIFICATION	5.548065930105089E-6	DEFECT
// value 1	WITHOUT_CLASSIFICATION	0.9999944458466651	WITHOUT_CLASSIFICATION	5.554153334961481E-6	DEFECT
// DRAW THE BARS...	WITHOUT_CLASSIFICATION	0.9999294812165043	WITHOUT_CLASSIFICATION	7.051878349568721E-5	DEFECT
// collect entity and tool tip information...	WITHOUT_CLASSIFICATION	0.9999934427192883	WITHOUT_CLASSIFICATION	6.557280711692417E-6	DEFECT
// Y0	WITHOUT_CLASSIFICATION	0.9999922100367334	WITHOUT_CLASSIFICATION	7.789963266519878E-6	DEFECT
// Y1	WITHOUT_CLASSIFICATION	0.9999931867191606	WITHOUT_CLASSIFICATION	6.813280839399726E-6	DEFECT
// nothing is drawn for null values...	WITHOUT_CLASSIFICATION	0.9999453671683131	WITHOUT_CLASSIFICATION	5.463283168684824E-5	DEFECT
// X	WITHOUT_CLASSIFICATION	0.9999827008606482	WITHOUT_CLASSIFICATION	1.7299139351766385E-5	DEFECT
// Y	WITHOUT_CLASSIFICATION	0.9999917208436317	WITHOUT_CLASSIFICATION	8.279156368232612E-6	DEFECT
// subtitle 1 is the legend	WITHOUT_CLASSIFICATION	0.9999900073495449	WITHOUT_CLASSIFICATION	9.992650455196925E-6	DEFECT
// calculate the bar width	WITHOUT_CLASSIFICATION	0.9999961820203437	WITHOUT_CLASSIFICATION	3.817979656322814E-6	DEFECT
// draw the bar...	WITHOUT_CLASSIFICATION	0.9999980521314893	WITHOUT_CLASSIFICATION	1.947868510744303E-6	DEFECT
// BAR Y	WITHOUT_CLASSIFICATION	0.9999742115555806	WITHOUT_CLASSIFICATION	2.5788444419311415E-5	DEFECT
// BAR X	WITHOUT_CLASSIFICATION	0.9999502588378304	WITHOUT_CLASSIFICATION	4.97411621696056E-5	DEFECT
// cases 1, 2, 3 and 4	WITHOUT_CLASSIFICATION	0.9999978123527955	WITHOUT_CLASSIFICATION	2.1876472045111346E-6	DEFECT
// bar is not visible	WITHOUT_CLASSIFICATION	0.9999548304111865	WITHOUT_CLASSIFICATION	4.5169588813432176E-5	DEFECT
// cases 9, 10, 11 and 12	WITHOUT_CLASSIFICATION	0.999997753634363	WITHOUT_CLASSIFICATION	2.2463656369683358E-6	DEFECT
// draw the outline...	WITHOUT_CLASSIFICATION	0.9999976978669696	WITHOUT_CLASSIFICATION	2.3021330303780623E-6	DEFECT
// draw the outline...	WITHOUT_CLASSIFICATION	0.9999976978669696	WITHOUT_CLASSIFICATION	2.3021330303780623E-6	DEFECT
// collect entity and tool tip information...	WITHOUT_CLASSIFICATION	0.9999934427192883	WITHOUT_CLASSIFICATION	6.557280711692417E-6	DEFECT
// collect entity and tool tip information...	WITHOUT_CLASSIFICATION	0.9999934427192883	WITHOUT_CLASSIFICATION	6.557280711692417E-6	DEFECT
// nothing is drawn for null values...	WITHOUT_CLASSIFICATION	0.9999453671683131	WITHOUT_CLASSIFICATION	5.463283168684824E-5	DEFECT
// nothing is drawn for null values...	WITHOUT_CLASSIFICATION	0.9999453671683131	WITHOUT_CLASSIFICATION	5.463283168684824E-5	DEFECT
// the clone contains a reference to a CLONE of the original object	WITHOUT_CLASSIFICATION	0.9999996522445409	WITHOUT_CLASSIFICATION	3.477554590450493E-7	DEFECT
// draw the item labels if there are any...	WITHOUT_CLASSIFICATION	0.9999995809979711	WITHOUT_CLASSIFICATION	4.1900202880693783E-7	DEFECT
// calculate bar width...	WITHOUT_CLASSIFICATION	0.9999898467814179	WITHOUT_CLASSIFICATION	1.0153218582114786E-5	DEFECT
// && state.getBarWidth() > BAR_OUTLINE_WIDTH_THRESHOLD) {	WITHOUT_CLASSIFICATION	0.999992241822082	WITHOUT_CLASSIFICATION	7.758177918015943E-6	DEFECT
// no fields to compute...	WITHOUT_CLASSIFICATION	0.9999965083674349	WITHOUT_CLASSIFICATION	3.491632564979791E-6	DEFECT
//plotBackgroundPaint;	WITHOUT_CLASSIFICATION	0.9999932686194383	WITHOUT_CLASSIFICATION	6.731380561749685E-6	DEFECT
// PlotOrientation.VERTICAL	WITHOUT_CLASSIFICATION	0.999993619420425	WITHOUT_CLASSIFICATION	6.3805795749696445E-6	DEFECT
// calculate the bar width	WITHOUT_CLASSIFICATION	0.9999961820203437	WITHOUT_CLASSIFICATION	3.817979656322814E-6	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9999550874077812	WITHOUT_CLASSIFICATION	4.4912592218731675E-5	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9999550874077812	WITHOUT_CLASSIFICATION	4.4912592218731675E-5	DEFECT
// submit the current data point as a crosshair candidate	WITHOUT_CLASSIFICATION	0.9999996999818758	WITHOUT_CLASSIFICATION	3.000181242082485E-7	DEFECT
// submit the current data point as a crosshair candidate	WITHOUT_CLASSIFICATION	0.9999996999818758	WITHOUT_CLASSIFICATION	3.000181242082485E-7	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999874693337447	WITHOUT_CLASSIFICATION	1.2530666255248155E-5	DEFECT
// the bar is not visible	WITHOUT_CLASSIFICATION	0.9999811814526083	WITHOUT_CLASSIFICATION	1.8818547391689622E-5	DEFECT
// draw the bar...	WITHOUT_CLASSIFICATION	0.9999980521314893	WITHOUT_CLASSIFICATION	1.947868510744303E-6	DEFECT
// check that a legend item needs to be displayed...	WITHOUT_CLASSIFICATION	0.9999978827896189	WITHOUT_CLASSIFICATION	2.117210381070439E-6	DEFECT
// check that a legend item needs to be displayed...	WITHOUT_CLASSIFICATION	0.9999978827896189	WITHOUT_CLASSIFICATION	2.117210381070439E-6	DEFECT
// check that a legend item needs to be displayed...	WITHOUT_CLASSIFICATION	0.9999978827896189	WITHOUT_CLASSIFICATION	2.117210381070439E-6	DEFECT
// bar is not visible	WITHOUT_CLASSIFICATION	0.9999548304111865	WITHOUT_CLASSIFICATION	4.5169588813432176E-5	DEFECT
// bar is not visible	WITHOUT_CLASSIFICATION	0.9999548304111865	WITHOUT_CLASSIFICATION	4.5169588813432176E-5	DEFECT
// nothing is drawn for null values...	WITHOUT_CLASSIFICATION	0.9999453671683131	WITHOUT_CLASSIFICATION	5.463283168684824E-5	DEFECT
// draw the item labels if there are any...	WITHOUT_CLASSIFICATION	0.9999995809979711	WITHOUT_CLASSIFICATION	4.1900202880693783E-7	DEFECT
// calculate bar width...	WITHOUT_CLASSIFICATION	0.9999898467814179	WITHOUT_CLASSIFICATION	1.0153218582114786E-5	DEFECT
// check that clone is independent of the original	WITHOUT_CLASSIFICATION	0.9999997976510937	WITHOUT_CLASSIFICATION	2.023489064238827E-7	DEFECT
// do nothing if item is not visible or null	WITHOUT_CLASSIFICATION	0.9999608553832242	WITHOUT_CLASSIFICATION	3.914461677587422E-5	DEFECT
// 100 percent, so it will not apply unless changed	WITHOUT_CLASSIFICATION	0.9999993277882986	WITHOUT_CLASSIFICATION	6.72211701426304E-7	DEFECT
// work out the label anchor point...	WITHOUT_CLASSIFICATION	0.9999982820504432	WITHOUT_CLASSIFICATION	1.7179495567860426E-6	DEFECT
// FIXME: add setSeriesOutlinePaint(int, Paint, boolean)?	WITHOUT_CLASSIFICATION	0.7049355354278976	WITHOUT_CLASSIFICATION	0.29506446457210234	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9999550874077812	WITHOUT_CLASSIFICATION	4.4912592218731675E-5	DEFECT
// do nothing if item is not visible	WITHOUT_CLASSIFICATION	0.9999601628914766	WITHOUT_CLASSIFICATION	3.9837108523320076E-5	DEFECT
// current data point...	WITHOUT_CLASSIFICATION	0.9999978778717445	WITHOUT_CLASSIFICATION	2.1221282555070327E-6	DEFECT
// current data point...	WITHOUT_CLASSIFICATION	0.9999978778717445	WITHOUT_CLASSIFICATION	2.1221282555070327E-6	DEFECT
// previous data point...	WITHOUT_CLASSIFICATION	0.9999983570359978	WITHOUT_CLASSIFICATION	1.6429640020949497E-6	DEFECT
// draw the item labels if there are any...	WITHOUT_CLASSIFICATION	0.9999995809979711	WITHOUT_CLASSIFICATION	4.1900202880693783E-7	DEFECT
// check key order	WITHOUT_CLASSIFICATION	0.9999973994741205	WITHOUT_CLASSIFICATION	2.6005258794131834E-6	DEFECT
// in the following code, barL0 is (in Java2D coordinates) the LEFT // end of the bar for a horizontal bar chart, and the TOP end of the // bar for a vertical bar chart.  Whether this is the BASE of the bar // or not depends also on (a) whether the data value is 'negative' // relative to the base value and (b) whether or not the range axis is // inverted.  This only matters if/when we apply the minimumBarLength // attribute, because we should extend the non-base end of the bar	WITHOUT_CLASSIFICATION	0.999709054041573	WITHOUT_CLASSIFICATION	2.9094595842705335E-4	DEFECT
// switch x and y	WITHOUT_CLASSIFICATION	0.9999981871804944	WITHOUT_CLASSIFICATION	1.8128195055435486E-6	DEFECT
// or: x1s + 2*(x1-x1s)	WITHOUT_CLASSIFICATION	0.999990013261989	WITHOUT_CLASSIFICATION	9.98673801106786E-6	DEFECT
// or: x0s + 2*(x0-x0s)	WITHOUT_CLASSIFICATION	0.9999886476154305	WITHOUT_CLASSIFICATION	1.1352384569554736E-5	DEFECT
// extend x0's flat bar	WITHOUT_CLASSIFICATION	0.9999978581502839	WITHOUT_CLASSIFICATION	2.141849716025136E-6	DEFECT
// upright bar	WITHOUT_CLASSIFICATION	0.9999983507341952	WITHOUT_CLASSIFICATION	1.6492658047924572E-6	DEFECT
// x1's flat bar	WITHOUT_CLASSIFICATION	0.9999981620804721	WITHOUT_CLASSIFICATION	1.8379195279652114E-6	DEFECT
//standard deviation lines	WITHOUT_CLASSIFICATION	0.9999909290372844	WITHOUT_CLASSIFICATION	9.070962715708554E-6	DEFECT
//// OUTLINE PAINT /////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999733098352565	WITHOUT_CLASSIFICATION	2.669016474361116E-5	DEFECT
//plotOutlinePaint;	WITHOUT_CLASSIFICATION	0.9999873636411617	WITHOUT_CLASSIFICATION	1.2636358838289638E-5	DEFECT
// check key order	WITHOUT_CLASSIFICATION	0.9999973994741205	WITHOUT_CLASSIFICATION	2.6005258794131834E-6	DEFECT
// check key order	WITHOUT_CLASSIFICATION	0.9999973994741205	WITHOUT_CLASSIFICATION	2.6005258794131834E-6	DEFECT
// previous data point...	WITHOUT_CLASSIFICATION	0.9999983570359978	WITHOUT_CLASSIFICATION	1.6429640020949497E-6	DEFECT
// draw the item label if there is one...	WITHOUT_CLASSIFICATION	0.9999995872212952	WITHOUT_CLASSIFICATION	4.1277870476316046E-7	DEFECT
// BAR Y	WITHOUT_CLASSIFICATION	0.9999742115555806	WITHOUT_CLASSIFICATION	2.5788444419311415E-5	DEFECT
// BAR X	WITHOUT_CLASSIFICATION	0.9999502588378304	WITHOUT_CLASSIFICATION	4.97411621696056E-5	DEFECT
// Y0	WITHOUT_CLASSIFICATION	0.9999922100367334	WITHOUT_CLASSIFICATION	7.789963266519878E-6	DEFECT
// Y1	WITHOUT_CLASSIFICATION	0.9999931867191606	WITHOUT_CLASSIFICATION	6.813280839399726E-6	DEFECT
// draw the standard deviation lines *before* the shapes (if they're // visible) - it looks better if the shape fill colour is different to // the line colour	WITHOUT_CLASSIFICATION	0.9999998110708701	WITHOUT_CLASSIFICATION	1.889291298770638E-7	DEFECT
// BAR WIDTH	WITHOUT_CLASSIFICATION	0.9999136922822924	WITHOUT_CLASSIFICATION	8.630771770757909E-5	DEFECT
// BAR HEIGHT	WITHOUT_CLASSIFICATION	0.99995157045543	WITHOUT_CLASSIFICATION	4.8429544569963234E-5	DEFECT
// there are no fields to check	WITHOUT_CLASSIFICATION	0.9999975930358443	WITHOUT_CLASSIFICATION	2.4069641556434355E-6	DEFECT
/* =========================================================== * JFreeChart : a free chart library for the Java(tm) platform * =========================================================== * * (C) Copyright 2000-2013, by Object Refinery Limited and Contributors. * * Project Info:  http://www.jfree.org/jfreechart/index.html * * This library is free software; you can redistribute it and/or modify it * under the terms of the GNU Lesser General Public License as published by * the Free Software Foundation; either version 2.1 of the License, or * (at your option) any later version. * * This library is distributed in the hope that it will be useful, but * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public * License for more details. * * You should have received a copy of the GNU Lesser General Public * License along with this library; if not, write to the Free Software * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, * USA. * * [Oracle and Java are registered trademarks of Oracle and/or its affiliates.  * Other names may be trademarks of their respective owners.] * * ------------------------- * CategoryItemRenderer.java * ------------------------- * * (C) Copyright 2001-2011, by Object Refinery Limited and Contributors. * * Original Author:  David Gilbert (for Object Refinery Limited); * Contributor(s):   Mark Watson (www.markwatson.com); * * Changes * ------- * 23-Oct-2001 : Version 1 (DG); * 16-Jan-2002 : Renamed HorizontalCategoryItemRenderer.java *               --> CategoryItemRenderer.java (DG); * 05-Feb-2002 : Changed return type of the drawCategoryItem method from void *               to Shape, as part of the tooltips implementation (DG) * *               NOTE (30-May-2002) : this has subsequently been changed back *               to void, tooltips are now collected along with entities in *               ChartRenderingInfo (DG); * * 14-Mar-2002 : Added the initialise method, and changed all bar plots to use *               this renderer (DG); * 23-May-2002 : Added ChartRenderingInfo to the initialise method (DG); * 29-May-2002 : Added the getAxisArea(Rectangle2D) method (DG); * 06-Jun-2002 : Updated Javadoc comments (DG); * 26-Jun-2002 : Added range axis to the initialise method (DG); * 24-Sep-2002 : Added getLegendItem() method (DG); * 23-Oct-2002 : Added methods to get/setToolTipGenerator (DG); * 05-Nov-2002 : Replaced references to CategoryDataset with TableDataset (DG); * 06-Nov-2002 : Added the domain axis to the drawCategoryItem method.  Renamed *               drawCategoryItem() --> drawItem() (DG); * 20-Nov-2002 : Changed signature of drawItem() method to reflect use of *               TableDataset (DG); * 26-Nov-2002 : Replaced the isStacked() method with the getRangeType() *               method (DG); * 08-Jan-2003 : Changed getSeriesCount() --> getRowCount() and *               getCategoryCount() --> getColumnCount() (DG); * 09-Jan-2003 : Changed name of grid-line methods (DG); * 21-Jan-2003 : Merged TableDataset with CategoryDataset (DG); * 10-Apr-2003 : Changed CategoryDataset to KeyedValues2DDataset in *               drawItem() method (DG); * 29-Apr-2003 : Eliminated Renderer interface (DG); * 02-Sep-2003 : Fix for bug 790407 (DG); * 16-Sep-2003 : Changed ChartRenderingInfo --> PlotRenderingInfo (DG); * 20-Oct-2003 : Added setOutlinePaint() method (DG); * 06-Feb-2004 : Added missing methods, and moved deprecated methods (DG); * 19-Feb-2004 : Added extra setXXXLabelsVisible() methods (DG); * 29-Apr-2004 : Changed Integer --> int in initialise() method (DG); * 18-May-2004 : Added methods for item label paint (DG); * 05-Nov-2004 : Added getPassCount() method and 'pass' parameter to drawItem() *               method (DG); * 07-Jan-2005 : Renamed getRangeExtent() --> findRangeBounds (DG); * 11-Jan-2005 : Removed deprecated code in preparation for 1.0.0 release (DG); * 23-Feb-2005 : Now extends LegendItemSource (DG); * 20-Apr-2005 : Renamed CategoryLabelGenerator *               --> CategoryItemLabelGenerator (DG); * 20-May-2005 : Added drawDomainMarker() method (DG); * ------------- JFREECHART 1.0.x --------------------------------------------- * 20-Feb-2007 : Updated API docs (DG); * 19-Apr-2007 : Deprecated seriesVisible and seriesVisibleInLegend flags (DG); * 20-Apr-2007 : Deprecated paint, fillPaint, outlinePaint, stroke, *               outlineStroke, shape, itemLabelsVisible, itemLabelFont, *               itemLabelPaint, positiveItemLabelPosition, *               negativeItemLabelPosition and createEntities override *               fields (DG); * 26-Jun-2008 : Added new method required for crosshair support - THIS CHANGES *               THE API as of version 1.0.11 (DG); * */	WITHOUT_CLASSIFICATION	0.9999992575752086	WITHOUT_CLASSIFICATION	7.424247913900631E-7	DEFECT
//// PAINT /////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999875534958195	WITHOUT_CLASSIFICATION	1.24465041805686E-5	DEFECT
// FIXME: add setSeriesPaint(int, Paint, boolean)?	WITHOUT_CLASSIFICATION	0.7052846909367856	WITHOUT_CLASSIFICATION	0.29471530906321447	DEFECT
// FIXME: add setBasePaint(int, Paint, boolean)?	WITHOUT_CLASSIFICATION	0.6857664792026988	WITHOUT_CLASSIFICATION	0.31423352079730127	DEFECT
//// FILL PAINT /////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9998545003988666	WITHOUT_CLASSIFICATION	1.4549960113334408E-4	DEFECT
// POSITIVE ITEM LABEL POSITION...	WITHOUT_CLASSIFICATION	0.9999251799695935	WITHOUT_CLASSIFICATION	7.48200304064344E-5	DEFECT
// NEGATIVE ITEM LABEL POSITION...	WITHOUT_CLASSIFICATION	0.999935347323268	WITHOUT_CLASSIFICATION	6.465267673196536E-5	DEFECT
// ITEM LABEL GENERATOR	WITHOUT_CLASSIFICATION	0.9998339159964248	WITHOUT_CLASSIFICATION	1.6608400357523754E-4	DEFECT
// TOOL TIP GENERATOR	WITHOUT_CLASSIFICATION	0.9994019404893761	WITHOUT_CLASSIFICATION	5.980595106238648E-4	DEFECT
// draw the outline...	WITHOUT_CLASSIFICATION	0.9999976978669696	WITHOUT_CLASSIFICATION	2.3021330303780623E-6	DEFECT
// FIXME: add setSeriesPaint(int, Paint, boolean)?	WITHOUT_CLASSIFICATION	0.7052846909367856	WITHOUT_CLASSIFICATION	0.29471530906321447	DEFECT
// ITEM LABELS VISIBLE	WITHOUT_CLASSIFICATION	0.9999150524479706	WITHOUT_CLASSIFICATION	8.49475520293459E-5	DEFECT
// FIXME: add setBaseOutlinePaint(Paint, boolean)?	WITHOUT_CLASSIFICATION	0.6529574729718847	WITHOUT_CLASSIFICATION	0.3470425270281154	DEFECT
//// STROKE ////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999578145714615	WITHOUT_CLASSIFICATION	4.2185428538499523E-5	DEFECT
// FIXME: add setSeriesStroke(int, Stroke, boolean) ?	WITHOUT_CLASSIFICATION	0.511449756808428	WITHOUT_CLASSIFICATION	0.488550243191572	DEFECT
// FIXME: add setBaseStroke(Stroke, boolean) ?	WITHOUT_CLASSIFICATION	0.6557289086645184	WITHOUT_CLASSIFICATION	0.3442710913354816	DEFECT
//// OUTLINE STROKE ////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999683019647668	WITHOUT_CLASSIFICATION	3.16980352330882E-5	DEFECT
// FIXME: add setSeriesOutlineStroke(int, Stroke, boolean) ?	WITHOUT_CLASSIFICATION	0.561603286199799	WITHOUT_CLASSIFICATION	0.43839671380020095	DEFECT
// FIXME: add setBaseOutlineStroke(Stroke, boolean) ?	WITHOUT_CLASSIFICATION	0.6274927221477125	WITHOUT_CLASSIFICATION	0.3725072778522876	DEFECT
//// SHAPE /////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999814393236185	WITHOUT_CLASSIFICATION	1.856067638145212E-5	DEFECT
// FIXME: add setSeriesShape(int, Shape, boolean) ?	WITHOUT_CLASSIFICATION	0.6155084025470179	WITHOUT_CLASSIFICATION	0.38449159745298217	DEFECT
// FIXME: add setBaseShape(Shape, boolean) ?	WITHOUT_CLASSIFICATION	0.5917004647163729	WITHOUT_CLASSIFICATION	0.40829953528362717	DEFECT
// check retrieve value by key	WITHOUT_CLASSIFICATION	0.9999956238374583	WITHOUT_CLASSIFICATION	4.376162541724154E-6	DEFECT
// FIXME: add setSeriesItemLabelGenerator(int, CategoryItemLabelGenerator, //            boolean)	WITHOUT_CLASSIFICATION	0.9618712117391819	WITHOUT_CLASSIFICATION	0.038128788260818135	DEFECT
// FIXME: add setBaseToolTipGenerator(CategoryToolTipGenerator, boolean) ?	WITHOUT_CLASSIFICATION	0.7145564123559766	WITHOUT_CLASSIFICATION	0.2854435876440234	DEFECT
//// ITEM LABEL FONT  //////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9998986158819052	WITHOUT_CLASSIFICATION	1.0138411809487553E-4	DEFECT
// FIXME: add setSeriesItemLabelFont(int, Font, boolean) ?	WITHOUT_CLASSIFICATION	0.8252069634834124	WITHOUT_CLASSIFICATION	0.17479303651658762	DEFECT
// FIXME: add setBaseItemLabelFont(Font, boolean) ?	WITHOUT_CLASSIFICATION	0.7967630629057824	WITHOUT_CLASSIFICATION	0.20323693709421758	DEFECT
//// ITEM LABEL PAINT  /////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999699800959138	WITHOUT_CLASSIFICATION	3.0019904086262118E-5	DEFECT
// FIXME: add setSeriesItemLabelPaint(int, Paint, boolean) ?	WITHOUT_CLASSIFICATION	0.8398358961695496	WITHOUT_CLASSIFICATION	0.16016410383045052	DEFECT
// FIXME: add setBaseItemLabelPaint(Paint, boolean) ?	WITHOUT_CLASSIFICATION	0.8118457120781815	WITHOUT_CLASSIFICATION	0.18815428792181868	DEFECT
// ITEM URL GENERATOR	WITHOUT_CLASSIFICATION	0.999730644954261	WITHOUT_CLASSIFICATION	2.693550457390073E-4	DEFECT
// as a special case, if the bar colour has alpha == 0, we draw // nothing.	WITHOUT_CLASSIFICATION	0.9999998703631345	WITHOUT_CLASSIFICATION	1.2963686551151843E-7	DEFECT
/*&& state.getBarWidth() > renderer.BAR_OUTLINE_WIDTH_THRESHOLD*/	WITHOUT_CLASSIFICATION	0.9999700453289271	WITHOUT_CLASSIFICATION	2.9954671072878895E-5	DEFECT
// standard ResourceBundle behaviour	WITHOUT_CLASSIFICATION	0.9999998368417305	WITHOUT_CLASSIFICATION	1.631582694310456E-7	DEFECT
// check retrieve value by key	WITHOUT_CLASSIFICATION	0.9999956238374583	WITHOUT_CLASSIFICATION	4.376162541724154E-6	DEFECT
// nothing is drawn for null...	WITHOUT_CLASSIFICATION	0.9999693651467285	WITHOUT_CLASSIFICATION	3.06348532714902E-5	DEFECT
// current data point...	WITHOUT_CLASSIFICATION	0.9999978778717445	WITHOUT_CLASSIFICATION	2.1221282555070327E-6	DEFECT
// previous data point...	WITHOUT_CLASSIFICATION	0.9999983570359978	WITHOUT_CLASSIFICATION	1.6429640020949497E-6	DEFECT
// previous data point...	WITHOUT_CLASSIFICATION	0.9999983570359978	WITHOUT_CLASSIFICATION	1.6429640020949497E-6	DEFECT
// draw the item label if there is one...	WITHOUT_CLASSIFICATION	0.9999995872212952	WITHOUT_CLASSIFICATION	4.1277870476316046E-7	DEFECT
// submit the current data point as a crosshair candidate	WITHOUT_CLASSIFICATION	0.9999996999818758	WITHOUT_CLASSIFICATION	3.000181242082485E-7	DEFECT
// fill background...	WITHOUT_CLASSIFICATION	0.9999957356792629	WITHOUT_CLASSIFICATION	4.2643207371246385E-6	DEFECT
// draw background image, if there is one...	WITHOUT_CLASSIFICATION	0.9999996477921259	WITHOUT_CLASSIFICATION	3.5220787413909093E-7	DEFECT
// put an outline around the data area...	WITHOUT_CLASSIFICATION	0.9999987617255115	WITHOUT_CLASSIFICATION	1.238274488457751E-6	DEFECT
// draw the bar...	WITHOUT_CLASSIFICATION	0.9999980521314893	WITHOUT_CLASSIFICATION	1.947868510744303E-6	DEFECT
// collect entity and tool tip information...	WITHOUT_CLASSIFICATION	0.9999934427192883	WITHOUT_CLASSIFICATION	6.557280711692417E-6	DEFECT
// nothing is drawn for null values...	WITHOUT_CLASSIFICATION	0.9999453671683131	WITHOUT_CLASSIFICATION	5.463283168684824E-5	DEFECT
// handle a special case - if the bar colour has alpha == 0, it is // invisible so we shouldn't draw any shadow	WITHOUT_CLASSIFICATION	0.999997696045897	WITHOUT_CLASSIFICATION	2.3039541029174333E-6	DEFECT
// 100 percent, so it will not apply unless // changed	WITHOUT_CLASSIFICATION	0.9999996274025938	WITHOUT_CLASSIFICATION	3.725974061708289E-7	DEFECT
// set the outline paint to fully transparent, then the legend shape // will just have the same colour as the lines drawn by the renderer	WITHOUT_CLASSIFICATION	0.9999991236711636	WITHOUT_CLASSIFICATION	8.763288364557203E-7	DEFECT
// first check the number we are plotting...	WITHOUT_CLASSIFICATION	0.9999990278906524	WITHOUT_CLASSIFICATION	9.721093475732917E-7	DEFECT
// reset the min and max	WITHOUT_CLASSIFICATION	0.99999399327582	WITHOUT_CLASSIFICATION	6.006724180011994E-6	DEFECT
// connect to the previous point	WITHOUT_CLASSIFICATION	0.9999996878138349	WITHOUT_CLASSIFICATION	3.12186165151237E-7	DEFECT
// create a line renderer only	WITHOUT_CLASSIFICATION	0.9999982592719798	WITHOUT_CLASSIFICATION	1.7407280200999333E-6	DEFECT
// higlight the background corners...	WITHOUT_CLASSIFICATION	0.9999985227919993	WITHOUT_CLASSIFICATION	1.4772080008033627E-6	DEFECT
// do nothing if item is not visible	WITHOUT_CLASSIFICATION	0.9999601628914766	WITHOUT_CLASSIFICATION	3.9837108523320076E-5	DEFECT
// check that a legend item needs to be displayed...	WITHOUT_CLASSIFICATION	0.9999978827896189	WITHOUT_CLASSIFICATION	2.117210381070439E-6	DEFECT
// draw the outline...	WITHOUT_CLASSIFICATION	0.9999976978669696	WITHOUT_CLASSIFICATION	2.3021330303780623E-6	DEFECT
// Y0	WITHOUT_CLASSIFICATION	0.9999922100367334	WITHOUT_CLASSIFICATION	7.789963266519878E-6	DEFECT
// Y1	WITHOUT_CLASSIFICATION	0.9999931867191606	WITHOUT_CLASSIFICATION	6.813280839399726E-6	DEFECT
// nothing is drawn for null values...	WITHOUT_CLASSIFICATION	0.9999453671683131	WITHOUT_CLASSIFICATION	5.463283168684824E-5	DEFECT
// BAR WIDTH	WITHOUT_CLASSIFICATION	0.9999136922822924	WITHOUT_CLASSIFICATION	8.630771770757909E-5	DEFECT
// BAR HEIGHT	WITHOUT_CLASSIFICATION	0.99995157045543	WITHOUT_CLASSIFICATION	4.8429544569963234E-5	DEFECT
// we'll set this to false if there is at // least one non-null data item...	WITHOUT_CLASSIFICATION	0.9999855927652808	WITHOUT_CLASSIFICATION	1.4407234719375852E-5	DEFECT
// set the default item label positions, which will only be used if // the user requests visible item labels...	WITHOUT_CLASSIFICATION	0.9999999830236564	WITHOUT_CLASSIFICATION	1.6976343580183584E-8	DEFECT
// treat the last column value as an absolute	WITHOUT_CLASSIFICATION	0.9999928802989886	WITHOUT_CLASSIFICATION	7.119701011467098E-6	DEFECT
// only needed if calculating percentages	WITHOUT_CLASSIFICATION	0.9999989913332672	WITHOUT_CLASSIFICATION	1.008666732792391E-6	DEFECT
// calculate the box width	WITHOUT_CLASSIFICATION	0.9999787969634796	WITHOUT_CLASSIFICATION	2.12030365203475E-5	DEFECT
// offset the start of the boxes if the total width used is smaller // than the category width	WITHOUT_CLASSIFICATION	0.9999998706541083	WITHOUT_CLASSIFICATION	1.2934589174329685E-7	DEFECT
// offset the start of the box if the box width is smaller than // the category width	WITHOUT_CLASSIFICATION	0.9999985224002667	WITHOUT_CLASSIFICATION	1.4775997333646272E-6	DEFECT
// draw the box...	WITHOUT_CLASSIFICATION	0.9999967664082615	WITHOUT_CLASSIFICATION	3.233591738609197E-6	DEFECT
// draw the upper shadow...	WITHOUT_CLASSIFICATION	0.9999973718695947	WITHOUT_CLASSIFICATION	2.6281304053712786E-6	DEFECT
// draw the lower shadow...	WITHOUT_CLASSIFICATION	0.9999984390865561	WITHOUT_CLASSIFICATION	1.5609134439182073E-6	DEFECT
// FIXME: add setBasePaint(int, Paint, boolean)?	WITHOUT_CLASSIFICATION	0.6857664792026988	WITHOUT_CLASSIFICATION	0.31423352079730127	DEFECT
// offset the start of the boxes if the total width used is smaller // than the category width	WITHOUT_CLASSIFICATION	0.9999998706541083	WITHOUT_CLASSIFICATION	1.2934589174329685E-7	DEFECT
// draw the upper shadow...	WITHOUT_CLASSIFICATION	0.9999973718695947	WITHOUT_CLASSIFICATION	2.6281304053712786E-6	DEFECT
// draw the lower shadow...	WITHOUT_CLASSIFICATION	0.9999984390865561	WITHOUT_CLASSIFICATION	1.5609134439182073E-6	DEFECT
// here we check that the average marker will in fact be // visible before drawing it...	WITHOUT_CLASSIFICATION	0.9996404328503994	WITHOUT_CLASSIFICATION	3.5956714960059004E-4	DEFECT
// draw mean - SPECIAL AIMS REQUIREMENT...	WITHOUT_CLASSIFICATION	0.9999589968692318	WITHOUT_CLASSIFICATION	4.100313076805482E-5	DEFECT
// average radius	WITHOUT_CLASSIFICATION	0.9999971874505801	WITHOUT_CLASSIFICATION	2.8125494200378055E-6	DEFECT
// average radius	WITHOUT_CLASSIFICATION	0.9999971874505801	WITHOUT_CLASSIFICATION	2.8125494200378055E-6	DEFECT
// check retrieve value by index	WITHOUT_CLASSIFICATION	0.9999958083866256	WITHOUT_CLASSIFICATION	4.191613374444727E-6	DEFECT
// draw median...	WITHOUT_CLASSIFICATION	0.999994961150225	WITHOUT_CLASSIFICATION	5.038849774925195E-6	DEFECT
// draw median...	WITHOUT_CLASSIFICATION	0.999994961150225	WITHOUT_CLASSIFICATION	5.038849774925195E-6	DEFECT
// offset the start of the box if the box width is smaller than the // category width	WITHOUT_CLASSIFICATION	0.9999982930383736	WITHOUT_CLASSIFICATION	1.7069616263915281E-6	DEFECT
// draw the body...	WITHOUT_CLASSIFICATION	0.9999964386553529	WITHOUT_CLASSIFICATION	3.5613446470107183E-6	DEFECT
// draw yOutliers...	WITHOUT_CLASSIFICATION	0.9999985169705953	WITHOUT_CLASSIFICATION	1.4830294047901498E-6	DEFECT
// draw farout indicators	WITHOUT_CLASSIFICATION	0.9999967334260206	WITHOUT_CLASSIFICATION	3.266573979359565E-6	DEFECT
// start from Y = rangeBase	WITHOUT_CLASSIFICATION	0.9999965945203315	WITHOUT_CLASSIFICATION	3.4054796684622523E-6	DEFECT
// Process outliers. Each outlier is either added to the // appropriate outlier list or a new outlier list is made	WITHOUT_CLASSIFICATION	0.9999999552009432	WITHOUT_CLASSIFICATION	4.479905672261855E-8	DEFECT
// disable visible items optimisation - it doesn't work for this // renderer...	WITHOUT_CLASSIFICATION	0.9998179950094277	WITHOUT_CLASSIFICATION	1.8200499057225764E-4	DEFECT
// Get the item count for the series, so that we can know which is the // end of the series.	WITHOUT_CLASSIFICATION	0.9999933058035979	WITHOUT_CLASSIFICATION	6.694196402115402E-6	DEFECT
// avoid possible sun.dc.pr.PRException: endPath: bad path	WITHOUT_CLASSIFICATION	0.9999943262797835	WITHOUT_CLASSIFICATION	5.67372021650004E-6	DEFECT
// Create a new Area for the series	WITHOUT_CLASSIFICATION	0.9999994721271269	WITHOUT_CLASSIFICATION	5.27872873138407E-7	DEFECT
// The first point is (x, this.baseYValue)	WITHOUT_CLASSIFICATION	0.9999967701395232	WITHOUT_CLASSIFICATION	3.2298604768781076E-6	DEFECT
// get the previous data point...	WITHOUT_CLASSIFICATION	0.9999996470252804	WITHOUT_CLASSIFICATION	3.529747196282134E-7	DEFECT
// not just a horizontal bar but need to perform a 'step'.	WITHOUT_CLASSIFICATION	0.9999990899272236	WITHOUT_CLASSIFICATION	9.10072776297225E-7	DEFECT
// add an entity for the item...	WITHOUT_CLASSIFICATION	0.9999907011189728	WITHOUT_CLASSIFICATION	9.298881027176369E-6	DEFECT
// collect entity and tool tip information...	WITHOUT_CLASSIFICATION	0.9999934427192883	WITHOUT_CLASSIFICATION	6.557280711692417E-6	DEFECT
// avoid possible sun.dc.pr.PRException: endPath: bad path	WITHOUT_CLASSIFICATION	0.9999943262797835	WITHOUT_CLASSIFICATION	5.67372021650004E-6	DEFECT
// retrieve an item	WITHOUT_CLASSIFICATION	0.9999866183852939	WITHOUT_CLASSIFICATION	1.3381614706045258E-5	DEFECT
// Add each point to Area (x, y)	WITHOUT_CLASSIFICATION	0.9999998117853965	WITHOUT_CLASSIFICATION	1.8821460342347538E-7	DEFECT
// Check if the item is the last item for the series or if it // is a NULL value and number of items > 0.  We can't draw an area for // a single point.	WITHOUT_CLASSIFICATION	0.9999994058698288	WITHOUT_CLASSIFICATION	5.941301712028278E-7	DEFECT
// Add the last point (x,0)	WITHOUT_CLASSIFICATION	0.9999995694723106	WITHOUT_CLASSIFICATION	4.305276893755126E-7	DEFECT
// fill the polygon	WITHOUT_CLASSIFICATION	0.999989794687729	WITHOUT_CLASSIFICATION	1.0205312271025774E-5	DEFECT
// draw an outline around the Area.	WITHOUT_CLASSIFICATION	0.9999987351277746	WITHOUT_CLASSIFICATION	1.264872225437819E-6	DEFECT
// start new area when needed (see above)	WITHOUT_CLASSIFICATION	0.9999964350627413	WITHOUT_CLASSIFICATION	3.564937258804493E-6	DEFECT
// do nothing...this is just a hook for subclasses	WITHOUT_CLASSIFICATION	0.9999974731802805	WITHOUT_CLASSIFICATION	2.5268197195695197E-6	DEFECT
// TODO getSeriesShape(n).getBounds().width / 2;	WITHOUT_CLASSIFICATION	0.9963063013938182	WITHOUT_CLASSIFICATION	0.0036936986061817966	DEFECT
// TODO getSeriesShape(n).getBounds().height / 2;	WITHOUT_CLASSIFICATION	0.9969687033526762	WITHOUT_CLASSIFICATION	0.0030312966473237802	DEFECT
// can't draw anything	WITHOUT_CLASSIFICATION	0.9999732011788253	WITHOUT_CLASSIFICATION	2.6798821174712108E-5	DEFECT
// draw optional guide lines	WITHOUT_CLASSIFICATION	0.9999994159666316	WITHOUT_CLASSIFICATION	5.840333684964606E-7	DEFECT
// calculate the arrow head and draw it...	WITHOUT_CLASSIFICATION	0.999994172299232	WITHOUT_CLASSIFICATION	5.82770076795143E-6	DEFECT
// orientation is HORIZONTAL	WITHOUT_CLASSIFICATION	0.9999885849919128	WITHOUT_CLASSIFICATION	1.141500808727963E-5	DEFECT
//labelLinkStyle;	WITHOUT_CLASSIFICATION	0.9999782509166462	WITHOUT_CLASSIFICATION	2.1749083353795798E-5	DEFECT
// request width index == itemCount	WITHOUT_CLASSIFICATION	0.9999977234804424	WITHOUT_CLASSIFICATION	2.27651955762383E-6	DEFECT
// check if either series is a degenerate case (i.e. less than 2 points)	WITHOUT_CLASSIFICATION	0.9999990730587321	WITHOUT_CLASSIFICATION	9.269412678638434E-7	DEFECT
// check if series are disjoint (i.e. domain-spans do not overlap)	WITHOUT_CLASSIFICATION	0.9999997758699866	WITHOUT_CLASSIFICATION	2.2413001343501897E-7	DEFECT
// polygon definitions	WITHOUT_CLASSIFICATION	0.9999969908884171	WITHOUT_CLASSIFICATION	3.0091115828429253E-6	DEFECT
// state	WITHOUT_CLASSIFICATION	0.9999985699507266	WITHOUT_CLASSIFICATION	1.4300492734642295E-6	DEFECT
// actual value set below	WITHOUT_CLASSIFICATION	0.9999938881317599	WITHOUT_CLASSIFICATION	6.111868240106531E-6	DEFECT
// if a subtrahend is not specified, assume it is zero	WITHOUT_CLASSIFICATION	0.999999738369521	WITHOUT_CLASSIFICATION	2.616304789537796E-7	DEFECT
// fast-forward through leading tails	WITHOUT_CLASSIFICATION	0.999998162034707	WITHOUT_CLASSIFICATION	1.837965292966154E-6	DEFECT
// get the x and y coordinates	WITHOUT_CLASSIFICATION	0.9999964583494864	WITHOUT_CLASSIFICATION	3.5416505136115432E-6	DEFECT
// minuend needs to be fast forwarded	WITHOUT_CLASSIFICATION	0.9999975630362354	WITHOUT_CLASSIFICATION	2.4369637644848908E-6	DEFECT
// subtrahend needs to be fast forwarded	WITHOUT_CLASSIFICATION	0.9999997296138395	WITHOUT_CLASSIFICATION	2.703861604936965E-7	DEFECT
// project onto subtrahend	WITHOUT_CLASSIFICATION	0.9999995506045836	WITHOUT_CLASSIFICATION	4.4939541648218826E-7	DEFECT
// project onto minuend	WITHOUT_CLASSIFICATION	0.9999920787999435	WITHOUT_CLASSIFICATION	7.921200056539102E-6	DEFECT
// start of algorithm	WITHOUT_CLASSIFICATION	0.9999977459523609	WITHOUT_CLASSIFICATION	2.254047638967589E-6	DEFECT
// this won't happen :)	WITHOUT_CLASSIFICATION	0.9964996456194666	WITHOUT_CLASSIFICATION	0.0035003543805334166	DEFECT
// deassert b_*FastForward (only matters for 1st time through loop)	WITHOUT_CLASSIFICATION	0.9999986784485339	WITHOUT_CLASSIFICATION	1.3215514662508373E-6	DEFECT
// check for intersect	WITHOUT_CLASSIFICATION	0.9999963694727935	WITHOUT_CLASSIFICATION	3.630527206573037E-6	DEFECT
// check if line segments are colinear	WITHOUT_CLASSIFICATION	0.9999988233749738	WITHOUT_CLASSIFICATION	1.1766250262007837E-6	DEFECT
// compute common denominator	WITHOUT_CLASSIFICATION	0.9999980651242163	WITHOUT_CLASSIFICATION	1.93487578379267E-6	DEFECT
// compute common deltas	WITHOUT_CLASSIFICATION	0.9999993014424868	WITHOUT_CLASSIFICATION	6.985575131931999E-7	DEFECT
// compute numerators	WITHOUT_CLASSIFICATION	0.9999974463757688	WITHOUT_CLASSIFICATION	2.553624231203057E-6	DEFECT
// check if previously colinear	WITHOUT_CLASSIFICATION	0.9999991516338492	WITHOUT_CLASSIFICATION	8.483661507646437E-7	DEFECT
// clear colinear points and flag	WITHOUT_CLASSIFICATION	0.9999993450007364	WITHOUT_CLASSIFICATION	6.549992636287845E-7	DEFECT
// set new starting point for the polygon	WITHOUT_CLASSIFICATION	0.9999998689815188	WITHOUT_CLASSIFICATION	1.3101848112167225E-7	DEFECT
// compute slope components	WITHOUT_CLASSIFICATION	0.99999943346456	WITHOUT_CLASSIFICATION	5.665354400326847E-7	DEFECT
// test if both grahphs have a vertical rise at the same x-value	WITHOUT_CLASSIFICATION	0.9999979681428806	WITHOUT_CLASSIFICATION	2.0318571194185147E-6	DEFECT
// check if the line segments intersect	WITHOUT_CLASSIFICATION	0.9999995020602551	WITHOUT_CLASSIFICATION	4.979397448117911E-7	DEFECT
// compute the point of intersection	WITHOUT_CLASSIFICATION	0.9999993890551211	WITHOUT_CLASSIFICATION	6.109448788839436E-7	DEFECT
// advance minuend and subtrahend to intesect	WITHOUT_CLASSIFICATION	0.9999995435210033	WITHOUT_CLASSIFICATION	4.5647899664168234E-7	DEFECT
// add intersection point to the polygon	WITHOUT_CLASSIFICATION	0.9999995401599769	WITHOUT_CLASSIFICATION	4.5984002301216884E-7	DEFECT
// add the subtrahend's points to the polygon in reverse	WITHOUT_CLASSIFICATION	0.9999996351710149	WITHOUT_CLASSIFICATION	3.6482898524683847E-7	DEFECT
// create an actual polygon	WITHOUT_CLASSIFICATION	0.9999870470670585	WITHOUT_CLASSIFICATION	1.2952932941430079E-5	DEFECT
// add an entity for the item...	WITHOUT_CLASSIFICATION	0.9999907011189728	WITHOUT_CLASSIFICATION	9.298881027176369E-6	DEFECT
// SERIES VISIBLE IN LEGEND (not yet respected by all renderers)	WITHOUT_CLASSIFICATION	0.999998133350313	WITHOUT_CLASSIFICATION	1.8666496870355663E-6	DEFECT
// draw the item label if there is one...	WITHOUT_CLASSIFICATION	0.9999995872212952	WITHOUT_CLASSIFICATION	4.1277870476316046E-7	DEFECT
// draw an outline around the Area.	WITHOUT_CLASSIFICATION	0.9999987351277746	WITHOUT_CLASSIFICATION	1.264872225437819E-6	DEFECT
// project onto subtrahend	WITHOUT_CLASSIFICATION	0.9999995506045836	WITHOUT_CLASSIFICATION	4.4939541648218826E-7	DEFECT
// project onto minuend	WITHOUT_CLASSIFICATION	0.9999920787999435	WITHOUT_CLASSIFICATION	7.921200056539102E-6	DEFECT
// add the subtrahend's points to the polygon in reverse	WITHOUT_CLASSIFICATION	0.9999996351710149	WITHOUT_CLASSIFICATION	3.6482898524683847E-7	DEFECT
// create an actual polygon	WITHOUT_CLASSIFICATION	0.9999870470670585	WITHOUT_CLASSIFICATION	1.2952932941430079E-5	DEFECT
// set the maxY and minY values to intersect y-value	WITHOUT_CLASSIFICATION	0.9999977785546776	WITHOUT_CLASSIFICATION	2.221445322331127E-6	DEFECT
// add interection point to new polygon	WITHOUT_CLASSIFICATION	0.999997823329088	WITHOUT_CLASSIFICATION	2.176670911915639E-6	DEFECT
// advance the minuend if needed	WITHOUT_CLASSIFICATION	0.9999966133061189	WITHOUT_CLASSIFICATION	3.3866938812669474E-6	DEFECT
// advance the subtrahend if needed	WITHOUT_CLASSIFICATION	0.9999997633783289	WITHOUT_CLASSIFICATION	2.3662167114622733E-7	DEFECT
// check if the final polygon needs to be clipped	WITHOUT_CLASSIFICATION	0.9999991676813044	WITHOUT_CLASSIFICATION	8.323186956050023E-7	DEFECT
// consider last point of minuend and subtrahend for determining // positivity	WITHOUT_CLASSIFICATION	0.9999999579903496	WITHOUT_CLASSIFICATION	4.20096504892992E-8	DEFECT
// add the last point of the minuned and subtrahend	WITHOUT_CLASSIFICATION	0.9999999487516957	WITHOUT_CLASSIFICATION	5.124830433021778E-8	DEFECT
// vertical orientation	WITHOUT_CLASSIFICATION	0.999991446415567	WITHOUT_CLASSIFICATION	8.553584433011334E-6	DEFECT
//// VISIBLE //////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999758298823529	WITHOUT_CLASSIFICATION	2.417011764716653E-5	DEFECT
//// PAINT ////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999875534958195	WITHOUT_CLASSIFICATION	1.24465041805686E-5	DEFECT
// get the previous point and the next point so we can calculate a // "hot spot" for the area (used by the chart entity)...	WITHOUT_CLASSIFICATION	0.9999999860797065	WITHOUT_CLASSIFICATION	1.3920293454937203E-8	DEFECT
// FIXME: add setSeriesOutlinePaint(int, Paint, boolean)?	WITHOUT_CLASSIFICATION	0.7049355354278976	WITHOUT_CLASSIFICATION	0.29506446457210234	DEFECT
// FIXME: add setBaseOutlinePaint(Paint, boolean)?	WITHOUT_CLASSIFICATION	0.6529574729718847	WITHOUT_CLASSIFICATION	0.3470425270281154	DEFECT
// create the polygon // add the minuend's points to polygon	WITHOUT_CLASSIFICATION	0.999999642598477	WITHOUT_CLASSIFICATION	3.5740152310368184E-7	DEFECT
// Check if the item is the last item for the series. // and number of items > 0.  We can't draw an area for a single point.	WITHOUT_CLASSIFICATION	0.9999998584314377	WITHOUT_CLASSIFICATION	1.41568562350873E-7	DEFECT
//// OUTLINE PAINT ////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999733098352565	WITHOUT_CLASSIFICATION	2.669016474361116E-5	DEFECT
// bad axisNumber	WITHOUT_CLASSIFICATION	0.9999975192420801	WITHOUT_CLASSIFICATION	2.4807579199097896E-6	DEFECT
// a Range object cannot be equal to a different object type	WITHOUT_CLASSIFICATION	0.9999824984003755	WITHOUT_CLASSIFICATION	1.7501599624518218E-5	DEFECT
// POSITIVE ITEM LABEL POSITION...	WITHOUT_CLASSIFICATION	0.9999251799695935	WITHOUT_CLASSIFICATION	7.48200304064344E-5	DEFECT
// NEGATIVE ITEM LABEL POSITION...	WITHOUT_CLASSIFICATION	0.999935347323268	WITHOUT_CLASSIFICATION	6.465267673196536E-5	DEFECT
//// TOOL TIP GENERATOR ///////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9997968587574233	WITHOUT_CLASSIFICATION	2.031412425768142E-4	DEFECT
//// URL GENERATOR ////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999131318104169	WITHOUT_CLASSIFICATION	8.686818958322531E-5	DEFECT
// FIXME: add setSeriesStroke(int, Stroke, boolean) ?	WITHOUT_CLASSIFICATION	0.511449756808428	WITHOUT_CLASSIFICATION	0.488550243191572	DEFECT
// FIXME: add setBaseStroke(Stroke, boolean) ?	WITHOUT_CLASSIFICATION	0.6557289086645184	WITHOUT_CLASSIFICATION	0.3442710913354816	DEFECT
// FIXME: add setSeriesOutlineStroke(int, Stroke, boolean) ?	WITHOUT_CLASSIFICATION	0.561603286199799	WITHOUT_CLASSIFICATION	0.43839671380020095	DEFECT
// FIXME: add setBaseOutlineStroke(Stroke, boolean) ?	WITHOUT_CLASSIFICATION	0.6274927221477125	WITHOUT_CLASSIFICATION	0.3725072778522876	DEFECT
// FIXME: add setSeriesShape(int, Shape, boolean) ?	WITHOUT_CLASSIFICATION	0.6155084025470179	WITHOUT_CLASSIFICATION	0.38449159745298217	DEFECT
// FIXME: add setBaseShape(Shape, boolean) ?	WITHOUT_CLASSIFICATION	0.5917004647163729	WITHOUT_CLASSIFICATION	0.40829953528362717	DEFECT
// allowDuplicateXValues	WITHOUT_CLASSIFICATION	0.9999962060793144	WITHOUT_CLASSIFICATION	3.793920685678944E-6	DEFECT
//// STROKE ///////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999578145714615	WITHOUT_CLASSIFICATION	4.2185428538499523E-5	DEFECT
//// OUTLINE STROKE ///////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999683019647668	WITHOUT_CLASSIFICATION	3.16980352330882E-5	DEFECT
//// SHAPE ////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999814393236185	WITHOUT_CLASSIFICATION	1.856067638145212E-5	DEFECT
//// LEGEND ITEMS /////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999741100035786	WITHOUT_CLASSIFICATION	2.5889996421381338E-5	DEFECT
//// LEGEND ITEM LABEL GENERATOR //////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999008725137093	WITHOUT_CLASSIFICATION	9.912748629076767E-5	DEFECT
//// ITEM LABEL GENERATOR /////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999194204773134	WITHOUT_CLASSIFICATION	8.057952268663754E-5	DEFECT
// FIXME:	WITHOUT_CLASSIFICATION	0.702783869406161	WITHOUT_CLASSIFICATION	0.29721613059383906	DEFECT
//// ITEM LABEL FONT ///////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999315211105994	WITHOUT_CLASSIFICATION	6.847888940063513E-5	DEFECT
//// ANNOTATIONS //////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999750178716217	WITHOUT_CLASSIFICATION	2.498212837831066E-5	DEFECT
//// DRAWING //////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999877378498586	WITHOUT_CLASSIFICATION	1.2262150141388487E-5	DEFECT
// DEPRECATED METHODS	WITHOUT_CLASSIFICATION	0.999748884951972	WITHOUT_CLASSIFICATION	2.511150480279335E-4	DEFECT
// need to handle cluster centering as a special case	WITHOUT_CLASSIFICATION	0.9999997499062266	WITHOUT_CLASSIFICATION	2.500937733670779E-7	DEFECT
// may be negative	WITHOUT_CLASSIFICATION	0.9999701739457265	WITHOUT_CLASSIFICATION	2.9826054273545428E-5	DEFECT
/*             * Legacy? Just return the original Paint.             * (this corresponds EXACTLY to how Paints used to be darkened)             */	WITHOUT_CLASSIFICATION	0.9999445302658494	WITHOUT_CLASSIFICATION	5.546973415064811E-5	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999980014263546	WITHOUT_CLASSIFICATION	1.998573645409622E-6	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9999997548832702	WITHOUT_CLASSIFICATION	2.4511672975961386E-7	DEFECT
// add an entity for the item...	WITHOUT_CLASSIFICATION	0.9999907011189728	WITHOUT_CLASSIFICATION	9.298881027176369E-6	DEFECT
// do nothing if item is not visible	WITHOUT_CLASSIFICATION	0.9999601628914766	WITHOUT_CLASSIFICATION	3.9837108523320076E-5	DEFECT
// Create a new Area for the series	WITHOUT_CLASSIFICATION	0.9999994721271269	WITHOUT_CLASSIFICATION	5.27872873138407E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999937644811133	WITHOUT_CLASSIFICATION	6.235518886679509E-6	DEFECT
// add a value	WITHOUT_CLASSIFICATION	0.9999906191007988	WITHOUT_CLASSIFICATION	9.38089920115503E-6	DEFECT
// first pass draws the shading	WITHOUT_CLASSIFICATION	0.9999987313113737	WITHOUT_CLASSIFICATION	1.2686886262485127E-6	DEFECT
// last item in series, draw the lot... // set up the alpha-transparency...	WITHOUT_CLASSIFICATION	0.9999998328296393	WITHOUT_CLASSIFICATION	1.6717036073891768E-7	DEFECT
// second pass adds shapes where the items are ..	WITHOUT_CLASSIFICATION	0.999999038709566	WITHOUT_CLASSIFICATION	9.612904339627666E-7	DEFECT
// return straight away if the item is not visible	WITHOUT_CLASSIFICATION	0.999996404238216	WITHOUT_CLASSIFICATION	3.5957617841050844E-6	DEFECT
// add an entity if this info is being collected	WITHOUT_CLASSIFICATION	0.9999175708373084	WITHOUT_CLASSIFICATION	8.242916269171814E-5	DEFECT
//  Get height adjustment based on stack and translate to Java2D values	WITHOUT_CLASSIFICATION	0.9999997802132241	WITHOUT_CLASSIFICATION	2.1978677577409527E-7	DEFECT
//  Get series Paint and Stroke	WITHOUT_CLASSIFICATION	0.9999987918976867	WITHOUT_CLASSIFICATION	1.2081023133017556E-6	DEFECT
//  On first pass render the areas, line and outlines	WITHOUT_CLASSIFICATION	0.9999995341624205	WITHOUT_CLASSIFICATION	4.658375795076569E-7	DEFECT
// start from previous height (ph1)	WITHOUT_CLASSIFICATION	0.9999992814209561	WITHOUT_CLASSIFICATION	7.185790440203546E-7	DEFECT
// should not get here	WITHOUT_CLASSIFICATION	0.9999917374306512	WITHOUT_CLASSIFICATION	8.26256934894087E-6	DEFECT
// use item paint for fills by default	WITHOUT_CLASSIFICATION	0.9999994845917181	WITHOUT_CLASSIFICATION	5.154082818261999E-7	DEFECT
// === DEPRECATED CODE ===	WITHOUT_CLASSIFICATION	0.9998484377525697	WITHOUT_CLASSIFICATION	1.515622474302675E-4	DEFECT
// LINES VISIBLE	WITHOUT_CLASSIFICATION	0.9999862607778816	WITHOUT_CLASSIFICATION	1.3739222118451614E-5	DEFECT
// SHAPES VISIBLE	WITHOUT_CLASSIFICATION	0.9999858386258798	WITHOUT_CLASSIFICATION	1.4161374120147899E-5	DEFECT
// SHAPES FILLED	WITHOUT_CLASSIFICATION	0.9999303514339656	WITHOUT_CLASSIFICATION	6.96485660344411E-5	DEFECT
// do nothing if item is not visible	WITHOUT_CLASSIFICATION	0.9999601628914766	WITHOUT_CLASSIFICATION	3.9837108523320076E-5	DEFECT
// collect entity and tool tip information...	WITHOUT_CLASSIFICATION	0.9999934427192883	WITHOUT_CLASSIFICATION	6.557280711692417E-6	DEFECT
// Get the item count for the series, so that we can know which is the // end of the series.	WITHOUT_CLASSIFICATION	0.9999933058035979	WITHOUT_CLASSIFICATION	6.694196402115402E-6	DEFECT
// get the previous data point...	WITHOUT_CLASSIFICATION	0.9999996470252804	WITHOUT_CLASSIFICATION	3.529747196282134E-7	DEFECT
// Add each point to Area (x, y)	WITHOUT_CLASSIFICATION	0.9999998117853965	WITHOUT_CLASSIFICATION	1.8821460342347538E-7	DEFECT
// Add the last point (x,0)	WITHOUT_CLASSIFICATION	0.9999995694723106	WITHOUT_CLASSIFICATION	4.305276893755126E-7	DEFECT
// Add the last point (x,0)	WITHOUT_CLASSIFICATION	0.9999995694723106	WITHOUT_CLASSIFICATION	4.305276893755126E-7	DEFECT
// add another value	WITHOUT_CLASSIFICATION	0.9999970657896468	WITHOUT_CLASSIFICATION	2.9342103532642255E-6	DEFECT
// in the rendering process, there is special handling for item // zero, so we can't support processing of visible data items only	WITHOUT_CLASSIFICATION	0.9999993198307667	WITHOUT_CLASSIFICATION	6.801692332614086E-7	DEFECT
// The first point is (x, 0)	WITHOUT_CLASSIFICATION	0.9999943783408347	WITHOUT_CLASSIFICATION	5.621659165256618E-6	DEFECT
//  Fill the polygon	WITHOUT_CLASSIFICATION	0.9999885006691578	WITHOUT_CLASSIFICATION	1.1499330842126565E-5	DEFECT
//  Draw an outline around the Area.	WITHOUT_CLASSIFICATION	0.9999986329624504	WITHOUT_CLASSIFICATION	1.3670375495695182E-6	DEFECT
// first pass draws the background (lines, for instance)	WITHOUT_CLASSIFICATION	0.9999999114977334	WITHOUT_CLASSIFICATION	8.85022665763874E-8	DEFECT
//labelLinkPaint;	WITHOUT_CLASSIFICATION	0.9999887934583738	WITHOUT_CLASSIFICATION	1.12065416261546E-5	DEFECT
// only draw if we have good values	WITHOUT_CLASSIFICATION	0.9999969930221796	WITHOUT_CLASSIFICATION	3.0069778204952316E-6	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9999997548832702	WITHOUT_CLASSIFICATION	2.4511672975961386E-7	DEFECT
// get the data points	WITHOUT_CLASSIFICATION	0.9999992061361967	WITHOUT_CLASSIFICATION	7.938638032701728E-7	DEFECT
// draw the item label if there is one...	WITHOUT_CLASSIFICATION	0.9999995872212952	WITHOUT_CLASSIFICATION	4.1277870476316046E-7	DEFECT
// second pass adds shapes where the items are ..	WITHOUT_CLASSIFICATION	0.999999038709566	WITHOUT_CLASSIFICATION	9.612904339627666E-7	DEFECT
// Add points from last series to complete the base of the // polygon	WITHOUT_CLASSIFICATION	0.999999963502783	WITHOUT_CLASSIFICATION	3.649721709695989E-8	DEFECT
// On second pass render shapes and collect entity and tooltip // information	WITHOUT_CLASSIFICATION	0.9999886030698562	WITHOUT_CLASSIFICATION	1.13969301438605E-5	DEFECT
// update path to reflect latest point	WITHOUT_CLASSIFICATION	0.9999996621564108	WITHOUT_CLASSIFICATION	3.378435892976483E-7	DEFECT
// if this is the last item, draw the path ...	WITHOUT_CLASSIFICATION	0.9999875051919043	WITHOUT_CLASSIFICATION	1.2494808095771603E-5	DEFECT
// draw path	WITHOUT_CLASSIFICATION	0.9999957062158981	WITHOUT_CLASSIFICATION	4.293784101933906E-6	DEFECT
// Collect points	WITHOUT_CLASSIFICATION	0.9999988455959467	WITHOUT_CLASSIFICATION	1.1544040533296626E-6	DEFECT
// construct path	WITHOUT_CLASSIFICATION	0.9999978690817736	WITHOUT_CLASSIFICATION	2.130918226324327E-6	DEFECT
// we need at least two points to draw something	WITHOUT_CLASSIFICATION	0.9999991669693693	WITHOUT_CLASSIFICATION	8.330306307929758E-7	DEFECT
// we need at least 3 points to spline. Draw simple line // for two points	WITHOUT_CLASSIFICATION	0.9999997818655072	WITHOUT_CLASSIFICATION	2.1813449269729846E-7	DEFECT
// construct spline // number of points // Newton form coefficients // x-coordinates of nodes	WITHOUT_CLASSIFICATION	0.9999999469740991	WITHOUT_CLASSIFICATION	5.302590098114157E-8	DEFECT
// note that a[0]=a[np-1]=0	WITHOUT_CLASSIFICATION	0.9999877335449249	WITHOUT_CLASSIFICATION	1.2266455075129346E-5	DEFECT
// loop over intervals between nodes	WITHOUT_CLASSIFICATION	0.999997387463801	WITHOUT_CLASSIFICATION	2.6125361990715083E-6	DEFECT
// we're running on JRE 1.3.1 so this is the best we have...	WITHOUT_CLASSIFICATION	0.9998870585907305	WITHOUT_CLASSIFICATION	1.1294140926959132E-4	DEFECT
// both axes	WITHOUT_CLASSIFICATION	0.9999919567552743	WITHOUT_CLASSIFICATION	8.043244725667017E-6	DEFECT
// ITEM LABEL GENERATOR	WITHOUT_CLASSIFICATION	0.9998339159964248	WITHOUT_CLASSIFICATION	1.6608400357523754E-4	DEFECT
// return the generator for ALL series, if there is one...	WITHOUT_CLASSIFICATION	0.999999554814951	WITHOUT_CLASSIFICATION	4.4518504910316847E-7	DEFECT
// return the generator for ALL series, if there is one...	WITHOUT_CLASSIFICATION	0.999999554814951	WITHOUT_CLASSIFICATION	4.4518504910316847E-7	DEFECT
// otherwise look up the generator table	WITHOUT_CLASSIFICATION	0.9999998808785419	WITHOUT_CLASSIFICATION	1.1912145812381658E-7	DEFECT
// otherwise look up the generator table	WITHOUT_CLASSIFICATION	0.9999998808785419	WITHOUT_CLASSIFICATION	1.1912145812381658E-7	DEFECT
// TOOL TIP GENERATOR	WITHOUT_CLASSIFICATION	0.9994019404893761	WITHOUT_CLASSIFICATION	5.980595106238648E-4	DEFECT
// URL GENERATOR	WITHOUT_CLASSIFICATION	0.9999379910817403	WITHOUT_CLASSIFICATION	6.200891825968054E-5	DEFECT
// clip top and bottom bounds to data area	WITHOUT_CLASSIFICATION	0.9999998044213999	WITHOUT_CLASSIFICATION	1.9557860006691956E-7	DEFECT
// clip top and bottom bounds to data area	WITHOUT_CLASSIFICATION	0.9999998044213999	WITHOUT_CLASSIFICATION	1.9557860006691956E-7	DEFECT
// now draw the outlines, if visible...	WITHOUT_CLASSIFICATION	0.9999994947485363	WITHOUT_CLASSIFICATION	5.052514636420019E-7	DEFECT
// now draw the outlines, if visible...	WITHOUT_CLASSIFICATION	0.9999994947485363	WITHOUT_CLASSIFICATION	5.052514636420019E-7	DEFECT
// PlotOrientation.HORIZONTAL	WITHOUT_CLASSIFICATION	0.9999969851838815	WITHOUT_CLASSIFICATION	3.0148161184746503E-6	DEFECT
// PlotOrientation.HORIZONTAL	WITHOUT_CLASSIFICATION	0.9999969851838815	WITHOUT_CLASSIFICATION	3.0148161184746503E-6	DEFECT
// work out the label anchor point...	WITHOUT_CLASSIFICATION	0.9999982820504432	WITHOUT_CLASSIFICATION	1.7179495567860426E-6	DEFECT
// map a key to the default group	WITHOUT_CLASSIFICATION	0.9999994568776411	WITHOUT_CLASSIFICATION	5.431223588589308E-7	DEFECT
// Add last point @ y=0 for fillPath and close path	WITHOUT_CLASSIFICATION	0.9999997707774034	WITHOUT_CLASSIFICATION	2.2922259657778865E-7	DEFECT
// fill under the curve...	WITHOUT_CLASSIFICATION	0.9999957437020213	WITHOUT_CLASSIFICATION	4.25629797873686E-6	DEFECT
// then draw the line...	WITHOUT_CLASSIFICATION	0.9999949140375424	WITHOUT_CLASSIFICATION	5.0859624575320745E-6	DEFECT
// reset points vector	WITHOUT_CLASSIFICATION	0.9999987765828962	WITHOUT_CLASSIFICATION	1.2234171037824358E-6	DEFECT
/*      factorization and forward substitution */	WITHOUT_CLASSIFICATION	0.99999824722981	WITHOUT_CLASSIFICATION	1.7527701898952458E-6	DEFECT
// now draw the real shape	WITHOUT_CLASSIFICATION	0.9999980539587872	WITHOUT_CLASSIFICATION	1.9460412128588356E-6	DEFECT
// should never get here	WITHOUT_CLASSIFICATION	0.99999505380721	WITHOUT_CLASSIFICATION	4.9461927900039485E-6	DEFECT
// 'plot' : just retain reference, not a deep copy	WITHOUT_CLASSIFICATION	0.9999983382180286	WITHOUT_CLASSIFICATION	1.661781971337639E-6	DEFECT
// just the domain axis...	WITHOUT_CLASSIFICATION	0.9999837024300379	WITHOUT_CLASSIFICATION	1.6297569962095597E-5	DEFECT
// just the range axis...	WITHOUT_CLASSIFICATION	0.9999938155348171	WITHOUT_CLASSIFICATION	6.184465182772697E-6	DEFECT
// get the label position..	WITHOUT_CLASSIFICATION	0.9999981491886372	WITHOUT_CLASSIFICATION	1.8508113628120912E-6	DEFECT
// do nothing if item is not visible	WITHOUT_CLASSIFICATION	0.9999601628914766	WITHOUT_CLASSIFICATION	3.9837108523320076E-5	DEFECT
// draw the item label if there is one...	WITHOUT_CLASSIFICATION	0.9999995872212952	WITHOUT_CLASSIFICATION	4.1277870476316046E-7	DEFECT
// collect entity and tool tip information...	WITHOUT_CLASSIFICATION	0.9999934427192883	WITHOUT_CLASSIFICATION	6.557280711692417E-6	DEFECT
// get the previous data point...	WITHOUT_CLASSIFICATION	0.9999996470252804	WITHOUT_CLASSIFICATION	3.529747196282134E-7	DEFECT
// Add each point to Area (x, y)	WITHOUT_CLASSIFICATION	0.9999998117853965	WITHOUT_CLASSIFICATION	1.8821460342347538E-7	DEFECT
// vertical orientation	WITHOUT_CLASSIFICATION	0.999991446415567	WITHOUT_CLASSIFICATION	8.553584433011334E-6	DEFECT
// in the rendering process, there is special handling for item // zero, so we can't support processing of visible data items only	WITHOUT_CLASSIFICATION	0.9999993198307667	WITHOUT_CLASSIFICATION	6.801692332614086E-7	DEFECT
// this represents the situation // for drawing a horizontal bar.	WITHOUT_CLASSIFICATION	0.9999949631963428	WITHOUT_CLASSIFICATION	5.036803657112226E-6	DEFECT
//this handles the need to perform a 'step'.	WITHOUT_CLASSIFICATION	0.9999892731642549	WITHOUT_CLASSIFICATION	1.0726835745086355E-5	DEFECT
// calculate the step point	WITHOUT_CLASSIFICATION	0.9999975123944617	WITHOUT_CLASSIFICATION	2.4876055382909576E-6	DEFECT
//this handles the need to perform a 'step'. // calculate the step point	WITHOUT_CLASSIFICATION	0.9999966317159574	WITHOUT_CLASSIFICATION	3.3682840425219277E-6	DEFECT
// submit this data item as a candidate for the crosshair point	WITHOUT_CLASSIFICATION	0.9999993304504415	WITHOUT_CLASSIFICATION	6.695495584646317E-7	DEFECT
// create a new area polygon for the series	WITHOUT_CLASSIFICATION	0.9999997405395986	WITHOUT_CLASSIFICATION	2.594604014421552E-7	DEFECT
// the first point is (x, 0)	WITHOUT_CLASSIFICATION	0.9999980121640004	WITHOUT_CLASSIFICATION	1.9878359995445254E-6	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9999997548832702	WITHOUT_CLASSIFICATION	2.4511672975961386E-7	DEFECT
// otherwise look up the paint table	WITHOUT_CLASSIFICATION	0.999999903527708	WITHOUT_CLASSIFICATION	9.647229204961467E-8	DEFECT
// SHAPES FILLED	WITHOUT_CLASSIFICATION	0.9999303514339656	WITHOUT_CLASSIFICATION	6.96485660344411E-5	DEFECT
// return the overall setting, if there is one...	WITHOUT_CLASSIFICATION	0.9999995125635099	WITHOUT_CLASSIFICATION	4.874364899951482E-7	DEFECT
// draw the outline...	WITHOUT_CLASSIFICATION	0.9999976978669696	WITHOUT_CLASSIFICATION	2.3021330303780623E-6	DEFECT
// && state.getBarWidth() > BAR_OUTLINE_WIDTH_THRESHOLD) {	WITHOUT_CLASSIFICATION	0.999992241822082	WITHOUT_CLASSIFICATION	7.758177918015943E-6	DEFECT
// no fields to compute...	WITHOUT_CLASSIFICATION	0.9999965083674349	WITHOUT_CLASSIFICATION	3.491632564979791E-6	DEFECT
// Add the last point (x,0)	WITHOUT_CLASSIFICATION	0.9999995694723106	WITHOUT_CLASSIFICATION	4.305276893755126E-7	DEFECT
// draw an outline around the Area.	WITHOUT_CLASSIFICATION	0.9999987351277746	WITHOUT_CLASSIFICATION	1.264872225437819E-6	DEFECT
// Check if the item is the last item for the series. // and number of items > 0.  We can't draw an area for a single point.	WITHOUT_CLASSIFICATION	0.9999998584314377	WITHOUT_CLASSIFICATION	1.41568562350873E-7	DEFECT
// a new map always has 1 group (the default group)	WITHOUT_CLASSIFICATION	0.9999997579522266	WITHOUT_CLASSIFICATION	2.4204777331969654E-7	DEFECT
// we make the clip region slightly larger than the // dataArea so that the clipped edges don't show lines // on the chart	WITHOUT_CLASSIFICATION	0.9999964482599799	WITHOUT_CLASSIFICATION	3.551740020012177E-6	DEFECT
// no change	WITHOUT_CLASSIFICATION	0.9999986652956966	WITHOUT_CLASSIFICATION	1.334704303421652E-6	DEFECT
// here we use BooleanUtilities to remain compatible with JDKs < 1.4	WITHOUT_CLASSIFICATION	0.9999978785871673	WITHOUT_CLASSIFICATION	2.1214128327523657E-6	DEFECT
// need to make sure we are adding *after* any duplicates	WITHOUT_CLASSIFICATION	0.9999997025886521	WITHOUT_CLASSIFICATION	2.974113478970246E-7	DEFECT
// update the max value	WITHOUT_CLASSIFICATION	0.9999849190691329	WITHOUT_CLASSIFICATION	1.508093086710276E-5	DEFECT
// only draw if we have good values	WITHOUT_CLASSIFICATION	0.9999969930221796	WITHOUT_CLASSIFICATION	3.0069778204952316E-6	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9999997548832702	WITHOUT_CLASSIFICATION	2.4511672975961386E-7	DEFECT
// draw the item label if there is one...	WITHOUT_CLASSIFICATION	0.9999995872212952	WITHOUT_CLASSIFICATION	4.1277870476316046E-7	DEFECT
// handle a special case - if the bar colour has alpha == 0, it is // invisible so we shouldn't draw any shadow	WITHOUT_CLASSIFICATION	0.999997696045897	WITHOUT_CLASSIFICATION	2.3039541029174333E-6	DEFECT
// get the previous data point...	WITHOUT_CLASSIFICATION	0.9999996470252804	WITHOUT_CLASSIFICATION	3.529747196282134E-7	DEFECT
// update path to reflect latest point	WITHOUT_CLASSIFICATION	0.9999996621564108	WITHOUT_CLASSIFICATION	3.378435892976483E-7	DEFECT
// draw path	WITHOUT_CLASSIFICATION	0.9999957062158981	WITHOUT_CLASSIFICATION	4.293784101933906E-6	DEFECT
// we are starting a new series path	WITHOUT_CLASSIFICATION	0.9999977592956927	WITHOUT_CLASSIFICATION	2.2407043073202226E-6	DEFECT
// only draw a line if the gap between the current and // previous data point is within the threshold	WITHOUT_CLASSIFICATION	0.9999989710721114	WITHOUT_CLASSIFICATION	1.0289278885785442E-6	DEFECT
// we needed to get this far even for invisible items, to ensure that // seriesPath updates happened, but now there is nothing more we need // to do for non-visible items...	WITHOUT_CLASSIFICATION	0.9999894267045347	WITHOUT_CLASSIFICATION	1.0573295465360456E-5	DEFECT
// this method must be overridden if you want to display images	WITHOUT_CLASSIFICATION	0.9999190677561612	WITHOUT_CLASSIFICATION	8.093224383878924E-5	DEFECT
// draw the upper shadow	WITHOUT_CLASSIFICATION	0.999998101984786	WITHOUT_CLASSIFICATION	1.8980152138895132E-6	DEFECT
// draw the lower shadow	WITHOUT_CLASSIFICATION	0.9999988727208591	WITHOUT_CLASSIFICATION	1.1272791409810085E-6	DEFECT
// draw the body	WITHOUT_CLASSIFICATION	0.9999968588442901	WITHOUT_CLASSIFICATION	3.141155709741838E-6	DEFECT
// add an entity for the item...	WITHOUT_CLASSIFICATION	0.9999907011189728	WITHOUT_CLASSIFICATION	9.298881027176369E-6	DEFECT
// add an entity for the item...	WITHOUT_CLASSIFICATION	0.9999907011189728	WITHOUT_CLASSIFICATION	9.298881027176369E-6	DEFECT
// draw the upper shadow	WITHOUT_CLASSIFICATION	0.999998101984786	WITHOUT_CLASSIFICATION	1.8980152138895132E-6	DEFECT
//////////////////////////////////////////////////////////////////////////// // PROTECTED METHODS // These provide the opportunity to subclass the standard renderer and // create custom effects. ////////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999995424169523	WITHOUT_CLASSIFICATION	4.575830476943114E-7	DEFECT
// draw the lower shadow	WITHOUT_CLASSIFICATION	0.9999988727208591	WITHOUT_CLASSIFICATION	1.1272791409810085E-6	DEFECT
// draw the body	WITHOUT_CLASSIFICATION	0.9999968588442901	WITHOUT_CLASSIFICATION	3.141155709741838E-6	DEFECT
// draw median	WITHOUT_CLASSIFICATION	0.9999953657739676	WITHOUT_CLASSIFICATION	4.634226032323962E-6	DEFECT
// draw average - SPECIAL AIMS REQUIREMENT	WITHOUT_CLASSIFICATION	0.999978807192997	WITHOUT_CLASSIFICATION	2.119280700296762E-5	DEFECT
// draw average - SPECIAL AIMS REQUIREMENT	WITHOUT_CLASSIFICATION	0.999978807192997	WITHOUT_CLASSIFICATION	2.119280700296762E-5	DEFECT
// here we check that the average marker will in fact be visible // before drawing it...	WITHOUT_CLASSIFICATION	0.9996116230466121	WITHOUT_CLASSIFICATION	3.883769533879008E-4	DEFECT
// yOutliers can be null, but we'd prefer it to be an empty list in // that case...	WITHOUT_CLASSIFICATION	0.9997118385968079	WITHOUT_CLASSIFICATION	2.881614031921692E-4	DEFECT
/* From outlier array sort out which are outliers and put these into         * an arraylist. If there are any farouts, set the flag on the         * OutlierListCollection         */	WITHOUT_CLASSIFICATION	0.9999997529624991	WITHOUT_CLASSIFICATION	2.470375009278628E-7	DEFECT
// draw yOutliers	WITHOUT_CLASSIFICATION	0.9999989621204594	WITHOUT_CLASSIFICATION	1.0378795405760327E-6	DEFECT
// draw outliers	WITHOUT_CLASSIFICATION	0.9999996304447214	WITHOUT_CLASSIFICATION	3.69555278680503E-7	DEFECT
// draw farout	WITHOUT_CLASSIFICATION	0.9999973105919894	WITHOUT_CLASSIFICATION	2.6894080105635917E-6	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999980014263546	WITHOUT_CLASSIFICATION	1.998573645409622E-6	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999980014263546	WITHOUT_CLASSIFICATION	1.998573645409622E-6	DEFECT
// add an entity for the item...	WITHOUT_CLASSIFICATION	0.9999907011189728	WITHOUT_CLASSIFICATION	9.298881027176369E-6	DEFECT
// get the previous data point...	WITHOUT_CLASSIFICATION	0.9999996470252804	WITHOUT_CLASSIFICATION	3.529747196282134E-7	DEFECT
// here we check that the average marker will in fact be visible // before drawing it...	WITHOUT_CLASSIFICATION	0.9996116230466121	WITHOUT_CLASSIFICATION	3.883769533879008E-4	DEFECT
/* Number n = */	WITHOUT_CLASSIFICATION	0.9999880826591997	WITHOUT_CLASSIFICATION	1.1917340800221007E-5	DEFECT
// Process outliers. Each outlier is either added to the appropriate // outlier list or a new outlier list is made	WITHOUT_CLASSIFICATION	0.9999999614706372	WITHOUT_CLASSIFICATION	3.8529362815255715E-8	DEFECT
// for item labels, we have a special case because there is the // possibility to draw (a) the regular item label near to just the // upper y-value, or (b) the regular item label near the upper y-value // PLUS an additional item label near the lower y-value.	WITHOUT_CLASSIFICATION	0.9999998618962932	WITHOUT_CLASSIFICATION	1.381037066862288E-7	DEFECT
// If null, don't draw line => then delegate to parent	WITHOUT_CLASSIFICATION	0.9999988396090645	WITHOUT_CLASSIFICATION	1.1603909354779218E-6	DEFECT
// If null, don't draw line at all	WITHOUT_CLASSIFICATION	0.9999701883746076	WITHOUT_CLASSIFICATION	2.9811625392387175E-5	DEFECT
// Now split the segment as needed	WITHOUT_CLASSIFICATION	0.9999997929229262	WITHOUT_CLASSIFICATION	2.0707707375739851E-7	DEFECT
// If the segment must be splitted, insert a new point // Strict test forces to have real segments (not 2 equal points) // and avoids division by 0	WITHOUT_CLASSIFICATION	0.9999993803954078	WITHOUT_CLASSIFICATION	6.196045921100357E-7	DEFECT
// If the line is not wrapping, then parent is OK	WITHOUT_CLASSIFICATION	0.9999916431166369	WITHOUT_CLASSIFICATION	8.356883363087947E-6	DEFECT
// calculate the highest volume in the dataset...	WITHOUT_CLASSIFICATION	0.9999966432002546	WITHOUT_CLASSIFICATION	3.3567997454241103E-6	DEFECT
/* Number n = */	WITHOUT_CLASSIFICATION	0.9999880826591997	WITHOUT_CLASSIFICATION	1.1917340800221007E-5	DEFECT
/* Number n = */	WITHOUT_CLASSIFICATION	0.9999880826591997	WITHOUT_CLASSIFICATION	1.1917340800221007E-5	DEFECT
/* Number n = */	WITHOUT_CLASSIFICATION	0.9999880826591997	WITHOUT_CLASSIFICATION	1.1917340800221007E-5	DEFECT
/* Number n = */	WITHOUT_CLASSIFICATION	0.9999880826591997	WITHOUT_CLASSIFICATION	1.1917340800221007E-5	DEFECT
// do nothing if item is not visible	WITHOUT_CLASSIFICATION	0.9999601628914766	WITHOUT_CLASSIFICATION	3.9837108523320076E-5	DEFECT
// PlotOrientation.HORIZONTAL	WITHOUT_CLASSIFICATION	0.9999969851838815	WITHOUT_CLASSIFICATION	3.0148161184746503E-6	DEFECT
// draw the outline...	WITHOUT_CLASSIFICATION	0.9999976978669696	WITHOUT_CLASSIFICATION	2.3021330303780623E-6	DEFECT
// as a special case, if the bar colour has alpha == 0, we draw // nothing.	WITHOUT_CLASSIFICATION	0.9999998703631345	WITHOUT_CLASSIFICATION	1.2963686551151843E-7	DEFECT
// update path to reflect latest point	WITHOUT_CLASSIFICATION	0.9999996621564108	WITHOUT_CLASSIFICATION	3.378435892976483E-7	DEFECT
// if this is the last item, draw the path ...	WITHOUT_CLASSIFICATION	0.9999875051919043	WITHOUT_CLASSIFICATION	1.2494808095771603E-5	DEFECT
// draw path	WITHOUT_CLASSIFICATION	0.9999957062158981	WITHOUT_CLASSIFICATION	4.293784101933906E-6	DEFECT
// transpose the dimensions, because the title is rotated	WITHOUT_CLASSIFICATION	0.9999997330074084	WITHOUT_CLASSIFICATION	2.6699259151326534E-7	DEFECT
// The split may occur in either x splitted segments, if any, but // not in both	WITHOUT_CLASSIFICATION	0.9999921049339853	WITHOUT_CLASSIFICATION	7.895066014813805E-6	DEFECT
// the x value is not within the axis range	WITHOUT_CLASSIFICATION	0.9999352524354438	WITHOUT_CLASSIFICATION	6.47475645562683E-5	DEFECT
// not a HighLowDataset, so just draw a line connecting this point // with the previous point...	WITHOUT_CLASSIFICATION	0.9999998763387177	WITHOUT_CLASSIFICATION	1.2366128244993194E-7	DEFECT
// include the interval if there is one	WITHOUT_CLASSIFICATION	0.999999498926074	WITHOUT_CLASSIFICATION	5.010739261071357E-7	DEFECT
// include the interval if there is one	WITHOUT_CLASSIFICATION	0.999999498926074	WITHOUT_CLASSIFICATION	5.010739261071357E-7	DEFECT
// draw the error bar for the x-interval	WITHOUT_CLASSIFICATION	0.9999964696138302	WITHOUT_CLASSIFICATION	3.530386169928089E-6	DEFECT
// draw the error bar for the y-interval	WITHOUT_CLASSIFICATION	0.9999967133493083	WITHOUT_CLASSIFICATION	3.2866506916004796E-6	DEFECT
//domainGridlinePaint;	WITHOUT_CLASSIFICATION	0.9999819122299037	WITHOUT_CLASSIFICATION	1.8087770096367363E-5	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9999997548832702	WITHOUT_CLASSIFICATION	2.4511672975961386E-7	DEFECT
// add an entity for the item...	WITHOUT_CLASSIFICATION	0.9999907011189728	WITHOUT_CLASSIFICATION	9.298881027176369E-6	DEFECT
// get the previous point and the next point so we can calculate a // "hot spot" for the area (used by the chart entity)...	WITHOUT_CLASSIFICATION	0.9999999860797065	WITHOUT_CLASSIFICATION	1.3920293454937203E-8	DEFECT
// do nothing if item is not visible	WITHOUT_CLASSIFICATION	0.9999601628914766	WITHOUT_CLASSIFICATION	3.9837108523320076E-5	DEFECT
// no new methods	WITHOUT_CLASSIFICATION	0.9999948400846721	WITHOUT_CLASSIFICATION	5.159915327909953E-6	DEFECT
// set the default item label positions, which will only be used if // the user requests visible item labels...	WITHOUT_CLASSIFICATION	0.9999999830236564	WITHOUT_CLASSIFICATION	1.6976343580183584E-8	DEFECT
// handle item label drawing, now that we know all the bars have // been drawn...	WITHOUT_CLASSIFICATION	0.9999729378150206	WITHOUT_CLASSIFICATION	2.7062184979331954E-5	DEFECT
// if the renderer isn't assigned to a plot, then we don't have a // dataset...	WITHOUT_CLASSIFICATION	0.999998456910597	WITHOUT_CLASSIFICATION	1.543089402935401E-6	DEFECT
//initalize xValues, yValues, and zValues arrays.	WITHOUT_CLASSIFICATION	0.999979988572184	WITHOUT_CLASSIFICATION	2.0011427816084647E-5	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9999997548832702	WITHOUT_CLASSIFICATION	2.4511672975961386E-7	DEFECT
// add an entity for the item...	WITHOUT_CLASSIFICATION	0.9999907011189728	WITHOUT_CLASSIFICATION	9.298881027176369E-6	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999874693337447	WITHOUT_CLASSIFICATION	1.2530666255248155E-5	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999874693337447	WITHOUT_CLASSIFICATION	1.2530666255248155E-5	DEFECT
// handle positive value	WITHOUT_CLASSIFICATION	0.9999729668017615	WITHOUT_CLASSIFICATION	2.7033198238543284E-5	DEFECT
// LEFT POLYGON	WITHOUT_CLASSIFICATION	0.9999870993673058	WITHOUT_CLASSIFICATION	1.2900632694158954E-5	DEFECT
// RIGHT POLYGON	WITHOUT_CLASSIFICATION	0.9999944559802495	WITHOUT_CLASSIFICATION	5.544019750587692E-6	DEFECT
// RIGHT POLYGON	WITHOUT_CLASSIFICATION	0.9999944559802495	WITHOUT_CLASSIFICATION	5.544019750587692E-6	DEFECT
// handle negative value	WITHOUT_CLASSIFICATION	0.9999393746020043	WITHOUT_CLASSIFICATION	6.062539799573845E-5	DEFECT
// clip left and right bounds to data area	WITHOUT_CLASSIFICATION	0.9999998088221413	WITHOUT_CLASSIFICATION	1.9117785861708476E-7	DEFECT
// clip top and bottom bounds to data area	WITHOUT_CLASSIFICATION	0.9999998044213999	WITHOUT_CLASSIFICATION	1.9557860006691956E-7	DEFECT
// work out the label anchor point...	WITHOUT_CLASSIFICATION	0.9999982820504432	WITHOUT_CLASSIFICATION	1.7179495567860426E-6	DEFECT
//  Get series Paint and Stroke	WITHOUT_CLASSIFICATION	0.9999987918976867	WITHOUT_CLASSIFICATION	1.2081023133017556E-6	DEFECT
/* Number n = */	WITHOUT_CLASSIFICATION	0.9999880826591997	WITHOUT_CLASSIFICATION	1.1917340800221007E-5	DEFECT
// is there an alignment adjustment to be made?	WITHOUT_CLASSIFICATION	0.9997050861285877	WITHOUT_CLASSIFICATION	2.949138714123633E-4	DEFECT
// update the crosshair point	WITHOUT_CLASSIFICATION	0.9999997877341463	WITHOUT_CLASSIFICATION	2.1226585372332786E-7	DEFECT
// calculate the maximum allowed candle width from the axis...	WITHOUT_CLASSIFICATION	0.9999973185409177	WITHOUT_CLASSIFICATION	2.6814590823344074E-6	DEFECT
// Absolute value, since the relative x // positions are reversed for horizontal orientation	WITHOUT_CLASSIFICATION	0.9999991404020526	WITHOUT_CLASSIFICATION	8.595979473945891E-7	DEFECT
/* Number n = */	WITHOUT_CLASSIFICATION	0.9999880826591997	WITHOUT_CLASSIFICATION	1.1917340800221007E-5	DEFECT
// pdfDocument class will be null so the function will return false	WITHOUT_CLASSIFICATION	0.9999954313301421	WITHOUT_CLASSIFICATION	4.568669857883558E-6	DEFECT
// add an entity for the item...	WITHOUT_CLASSIFICATION	0.9999907011189728	WITHOUT_CLASSIFICATION	9.298881027176369E-6	DEFECT
// draw the upper shadow	WITHOUT_CLASSIFICATION	0.999998101984786	WITHOUT_CLASSIFICATION	1.8980152138895132E-6	DEFECT
// draw the lower shadow	WITHOUT_CLASSIFICATION	0.9999988727208591	WITHOUT_CLASSIFICATION	1.1272791409810085E-6	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999874693337447	WITHOUT_CLASSIFICATION	1.2530666255248155E-5	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999874693337447	WITHOUT_CLASSIFICATION	1.2530666255248155E-5	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999874693337447	WITHOUT_CLASSIFICATION	1.2530666255248155E-5	DEFECT
// draw the body	WITHOUT_CLASSIFICATION	0.9999968588442901	WITHOUT_CLASSIFICATION	3.141155709741838E-6	DEFECT
// this won't happen :)	WITHOUT_CLASSIFICATION	0.9964996456194666	WITHOUT_CLASSIFICATION	0.0035003543805334166	DEFECT
// --- DEPRECATED CODE ----------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999572461761331	WITHOUT_CLASSIFICATION	4.2753823866913414E-5	DEFECT
// create the temporary directory if it doesn't exist	WITHOUT_CLASSIFICATION	0.9999988931551935	WITHOUT_CLASSIFICATION	1.1068448064539502E-6	DEFECT
//  Add chart to deletion list in session	WITHOUT_CLASSIFICATION	0.9999997950033275	WITHOUT_CLASSIFICATION	2.0499667250276445E-7	DEFECT
//  Set HTTP headers	WITHOUT_CLASSIFICATION	0.9999973584377824	WITHOUT_CLASSIFICATION	2.6415622176154612E-6	DEFECT
//  Replace ".." with "" //  This is to prevent access to the rest of the file system	WITHOUT_CLASSIFICATION	0.9999998432178312	WITHOUT_CLASSIFICATION	1.567821688306266E-7	DEFECT
//  Check the file exists	WITHOUT_CLASSIFICATION	0.9999981550822458	WITHOUT_CLASSIFICATION	1.8449177542092114E-6	DEFECT
//  Serve it up	WITHOUT_CLASSIFICATION	0.9999956282621821	WITHOUT_CLASSIFICATION	4.371737817805898E-6	DEFECT
// draw the block without collecting entities	WITHOUT_CLASSIFICATION	0.9999994017093904	WITHOUT_CLASSIFICATION	5.982906095628054E-7	DEFECT
// RectangleInsets is immutable => same reference in clone OK	WITHOUT_CLASSIFICATION	0.9999979758577056	WITHOUT_CLASSIFICATION	2.0241422944964068E-6	DEFECT
// suppress compiler warning	WITHOUT_CLASSIFICATION	0.9999965987442926	WITHOUT_CLASSIFICATION	3.4012557074770137E-6	DEFECT
// suppress compiler warning	WITHOUT_CLASSIFICATION	0.9999965987442926	WITHOUT_CLASSIFICATION	3.4012557074770137E-6	DEFECT
// determine the space required for the axis	WITHOUT_CLASSIFICATION	0.999999754435679	WITHOUT_CLASSIFICATION	2.4556432105213185E-7	DEFECT
// transpose the dimensions, because the title is rotated	WITHOUT_CLASSIFICATION	0.9999997330074084	WITHOUT_CLASSIFICATION	2.6699259151326534E-7	DEFECT
// basic check for independence	WITHOUT_CLASSIFICATION	0.9999978938727915	WITHOUT_CLASSIFICATION	2.106127208504506E-6	DEFECT
// don't bother with parsing	WITHOUT_CLASSIFICATION	0.999982640530313	WITHOUT_CLASSIFICATION	1.7359469686965093E-5	DEFECT
// don't bother with parsing	WITHOUT_CLASSIFICATION	0.999982640530313	WITHOUT_CLASSIFICATION	1.7359469686965093E-5	DEFECT
// no need to instantiate this class   	WITHOUT_CLASSIFICATION	0.9999988291305293	WITHOUT_CLASSIFICATION	1.1708694707548765E-6	DEFECT
//yAdj = -descent - leading + (float) bounds.getHeight();	WITHOUT_CLASSIFICATION	0.9999973555759823	WITHOUT_CLASSIFICATION	2.644424017555208E-6	DEFECT
// svgClass will be null so the function will return false	WITHOUT_CLASSIFICATION	0.999995071329039	WITHOUT_CLASSIFICATION	4.92867096102033E-6	DEFECT
// basic check for independence	WITHOUT_CLASSIFICATION	0.9999978938727915	WITHOUT_CLASSIFICATION	2.106127208504506E-6	DEFECT
// basic check for independence	WITHOUT_CLASSIFICATION	0.9999978938727915	WITHOUT_CLASSIFICATION	2.106127208504506E-6	DEFECT
// basic check for independence	WITHOUT_CLASSIFICATION	0.9999978938727915	WITHOUT_CLASSIFICATION	2.106127208504506E-6	DEFECT
// argument checking delegated...	WITHOUT_CLASSIFICATION	0.9999994865812032	WITHOUT_CLASSIFICATION	5.134187968405951E-7	DEFECT
// don't bother with parsing	WITHOUT_CLASSIFICATION	0.999982640530313	WITHOUT_CLASSIFICATION	1.7359469686965093E-5	DEFECT
// standard ResourceBundle behaviour	WITHOUT_CLASSIFICATION	0.9999998368417305	WITHOUT_CLASSIFICATION	1.631582694310456E-7	DEFECT
// update (x1, y1), (x2, y2) and f1 and f2 using intersections // then recheck	WITHOUT_CLASSIFICATION	0.9999984990541672	WITHOUT_CLASSIFICATION	1.5009458328319246E-6	DEFECT
// first point is outside, so we update it against one of the // four sides then continue	WITHOUT_CLASSIFICATION	0.9999998444686322	WITHOUT_CLASSIFICATION	1.5553136771005385E-7	DEFECT
// second point is outside, so we update it against one of the // four sides then continue	WITHOUT_CLASSIFICATION	0.9999999303490422	WITHOUT_CLASSIFICATION	6.965095778428871E-8	DEFECT
// the line is visible - if it wasn't, we'd have // returned false from within the while loop above	WITHOUT_CLASSIFICATION	0.9998637159172873	WITHOUT_CLASSIFICATION	1.362840827127015E-4	DEFECT
/*                 * Lots can go wrong while fiddling with Images, Color Models                 * & such!  If anything at all goes awry, just return the original                 * TexturePaint.  (TexturePaint's are immutable anyway, so no harm                 * done)                 */	WITHOUT_CLASSIFICATION	0.9999999338761362	WITHOUT_CLASSIFICATION	6.612386378130243E-8	DEFECT
/* Placeholder */	WITHOUT_CLASSIFICATION	0.9999918274233711	WITHOUT_CLASSIFICATION	8.17257662899438E-6	DEFECT
/**/	WITHOUT_CLASSIFICATION	0.9998846499945054	WITHOUT_CLASSIFICATION	1.1535000549452607E-4	DEFECT
/**/	WITHOUT_CLASSIFICATION	0.9998846499945054	WITHOUT_CLASSIFICATION	1.1535000549452607E-4	DEFECT
/**/	WITHOUT_CLASSIFICATION	0.9998846499945054	WITHOUT_CLASSIFICATION	1.1535000549452607E-4	DEFECT
/* (pix-buffer is large enough for all pixels of one row) */	WITHOUT_CLASSIFICATION	0.9999792025980303	WITHOUT_CLASSIFICATION	2.0797401969634977E-5	DEFECT
// RGB (+ optional Alpha which we leave // unchanged)	WITHOUT_CLASSIFICATION	0.9999995171025681	WITHOUT_CLASSIFICATION	4.828974318527533E-7	DEFECT
// Red // Green // Blue. Now map computed colour to // nearest in Palette...	WITHOUT_CLASSIFICATION	0.9999982937755583	WITHOUT_CLASSIFICATION	1.7062244417108607E-6	DEFECT
// Red // Green // Blue	WITHOUT_CLASSIFICATION	0.9999845735474322	WITHOUT_CLASSIFICATION	1.542645256778585E-5	DEFECT
/* Ignore alpha-channel -> */	WITHOUT_CLASSIFICATION	0.9999989098747808	WITHOUT_CLASSIFICATION	1.0901252191317342E-6	DEFECT
// <- this is the code that actually COPIES the pixels	WITHOUT_CLASSIFICATION	0.9996996175853616	WITHOUT_CLASSIFICATION	3.003824146383033E-4	DEFECT
/*         * Buffered Images may have properties, but NEVER disclose them!         * Nevertheless, just in case someone implements getPropertyNames()         * one day...         */	WITHOUT_CLASSIFICATION	0.9999853133077891	WITHOUT_CLASSIFICATION	1.4686692211017723E-5	DEFECT
// ALWAYS null	WITHOUT_CLASSIFICATION	0.9999833382885093	WITHOUT_CLASSIFICATION	1.6661711490799865E-5	DEFECT
// all methods are static, no need to instantiate	WITHOUT_CLASSIFICATION	0.999997451419078	WITHOUT_CLASSIFICATION	2.5485809219234143E-6	DEFECT
// substitute the filtered URL list	WITHOUT_CLASSIFICATION	0.9999998916913059	WITHOUT_CLASSIFICATION	1.0830869422617698E-7	DEFECT
// adjust text bounds to match string position	WITHOUT_CLASSIFICATION	0.9999974476854723	WITHOUT_CLASSIFICATION	2.5523145277504402E-6	DEFECT
// horizontal pass	WITHOUT_CLASSIFICATION	0.9999983431728114	WITHOUT_CLASSIFICATION	1.6568271885157606E-6	DEFECT
// substract the oldest pixel from the sum	WITHOUT_CLASSIFICATION	0.9999991974514931	WITHOUT_CLASSIFICATION	8.025485069910648E-7	DEFECT
// substract the oldest pixel from the sum	WITHOUT_CLASSIFICATION	0.9999991974514931	WITHOUT_CLASSIFICATION	8.025485069910648E-7	DEFECT
// get the lastest pixel	WITHOUT_CLASSIFICATION	0.9999987288025561	WITHOUT_CLASSIFICATION	1.2711974438278378E-6	DEFECT
// get the lastest pixel	WITHOUT_CLASSIFICATION	0.9999987288025561	WITHOUT_CLASSIFICATION	1.2711974438278378E-6	DEFECT
// vertical pass	WITHOUT_CLASSIFICATION	0.9999993515109858	WITHOUT_CLASSIFICATION	6.484890141223311E-7	DEFECT
//get the coordinates of the original GradientPaint	WITHOUT_CLASSIFICATION	0.9999997944080388	WITHOUT_CLASSIFICATION	2.0559196127587217E-7	DEFECT
//get the coordinates of the shape that is to be filled	WITHOUT_CLASSIFICATION	0.999994514998005	WITHOUT_CLASSIFICATION	5.485001994992548E-6	DEFECT
//reserve variables to store the coordinates of the resulting GradientPaint	WITHOUT_CLASSIFICATION	0.9999999116815439	WITHOUT_CLASSIFICATION	8.831845613138886E-8	DEFECT
//start point is upper left corner	WITHOUT_CLASSIFICATION	0.9999907481101584	WITHOUT_CLASSIFICATION	9.251889841553994E-6	DEFECT
//end point is lower right corner --> diagonal gradient	WITHOUT_CLASSIFICATION	0.9999980436369755	WITHOUT_CLASSIFICATION	1.956363024549742E-6	DEFECT
//start point is lower left right corner --> diagonal gradient	WITHOUT_CLASSIFICATION	0.9999991221394693	WITHOUT_CLASSIFICATION	8.778605307035694E-7	DEFECT
// delegate argument checking to XYDataItem...	WITHOUT_CLASSIFICATION	0.9999986692058309	WITHOUT_CLASSIFICATION	1.330794169132421E-6	DEFECT
//end point is either lower left corner --> vertical gradient //or end point is upper right corner --> horizontal gradient	WITHOUT_CLASSIFICATION	0.999999092304607	WITHOUT_CLASSIFICATION	9.076953928702497E-7	DEFECT
// can't allow duplicate values, so we need to check whether // there is an item with the given x-value already	WITHOUT_CLASSIFICATION	0.9999984676044894	WITHOUT_CLASSIFICATION	1.5323955106278663E-6	DEFECT
// it is too slow to look at every data item, so let's just look at // the first, middle and last items...	WITHOUT_CLASSIFICATION	0.9999991541355033	WITHOUT_CLASSIFICATION	8.458644965690869E-7	DEFECT
// CASE 1 : Comparing to another ComparableObjectItem object // ---------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999853078735651	WITHOUT_CLASSIFICATION	1.4692126434877336E-5	DEFECT
// CASE 2 : Comparing to a general object // ---------------------------------------------	WITHOUT_CLASSIFICATION	0.9999632329202254	WITHOUT_CLASSIFICATION	3.6767079774685246E-5	DEFECT
// consider these to be ordered after general objects	WITHOUT_CLASSIFICATION	0.9999996638460789	WITHOUT_CLASSIFICATION	3.361539211729605E-7	DEFECT
// the row may not have an entry for this key, in which case the // return value is null	WITHOUT_CLASSIFICATION	0.9976676851469586	WITHOUT_CLASSIFICATION	0.0023323148530414116	DEFECT
// check that the column key is defined in the 2D structure	WITHOUT_CLASSIFICATION	0.9999968869089132	WITHOUT_CLASSIFICATION	3.113091086821109E-6	DEFECT
// 1. check whether the row is now empty.	WITHOUT_CLASSIFICATION	0.9999837096648506	WITHOUT_CLASSIFICATION	1.6290335149434174E-5	DEFECT
// 1. check whether the row is now empty.	WITHOUT_CLASSIFICATION	0.9999837096648506	WITHOUT_CLASSIFICATION	1.6290335149434174E-5	DEFECT
// 2. check whether the column is now empty.	WITHOUT_CLASSIFICATION	0.9999926750803304	WITHOUT_CLASSIFICATION	7.324919669559259E-6	DEFECT
// 2. check whether the column is now empty.	WITHOUT_CLASSIFICATION	0.9999926750803304	WITHOUT_CLASSIFICATION	7.324919669559259E-6	DEFECT
//int columnIndex = getColumnIndex(columnKey);	WITHOUT_CLASSIFICATION	0.9999676983490473	WITHOUT_CLASSIFICATION	3.2301650952608414E-5	DEFECT
// for the keys, a shallow copy should be fine because keys // should be immutable...	WITHOUT_CLASSIFICATION	0.999999378571455	WITHOUT_CLASSIFICATION	6.214285449883994E-7	DEFECT
// but the row data requires a deep copy	WITHOUT_CLASSIFICATION	0.9999991680474932	WITHOUT_CLASSIFICATION	8.319525067404634E-7	DEFECT
// already know 'a' isn't null	WITHOUT_CLASSIFICATION	0.9998652725801028	WITHOUT_CLASSIFICATION	1.3472741989714062E-4	DEFECT
// defer null argument check	WITHOUT_CLASSIFICATION	0.9999940949289049	WITHOUT_CLASSIFICATION	5.905071094991613E-6	DEFECT
// defer null argument check	WITHOUT_CLASSIFICATION	0.9999940949289049	WITHOUT_CLASSIFICATION	5.905071094991613E-6	DEFECT
// this will include the case where the underlying dataset is null	WITHOUT_CLASSIFICATION	0.9998596814939027	WITHOUT_CLASSIFICATION	1.4031850609737243E-4	DEFECT
// this includes the case where the underlying dataset is null	WITHOUT_CLASSIFICATION	0.9998900671628801	WITHOUT_CLASSIFICATION	1.0993283711999738E-4	DEFECT
// we didn't find the key	WITHOUT_CLASSIFICATION	0.9999508413427506	WITHOUT_CLASSIFICATION	4.915865724951976E-5	DEFECT
// set up the category names...	WITHOUT_CLASSIFICATION	0.9999997241111918	WITHOUT_CLASSIFICATION	2.758888082878757E-7	DEFECT
// check arguments...	WITHOUT_CLASSIFICATION	0.9999990739255804	WITHOUT_CLASSIFICATION	9.260744195331213E-7	DEFECT
// fetch the value...	WITHOUT_CLASSIFICATION	0.9999947863964831	WITHOUT_CLASSIFICATION	5.213603516851213E-6	DEFECT
// does the series exist?	WITHOUT_CLASSIFICATION	0.9998961560785423	WITHOUT_CLASSIFICATION	1.0384392145762951E-4	DEFECT
// does the series exist?	WITHOUT_CLASSIFICATION	0.9998961560785423	WITHOUT_CLASSIFICATION	1.0384392145762951E-4	DEFECT
// is the category valid?	WITHOUT_CLASSIFICATION	0.99978952967862	WITHOUT_CLASSIFICATION	2.1047032138006333E-4	DEFECT
// update the data...	WITHOUT_CLASSIFICATION	0.9999965840718132	WITHOUT_CLASSIFICATION	3.415928186626705E-6	DEFECT
// update the data...	WITHOUT_CLASSIFICATION	0.9999965840718132	WITHOUT_CLASSIFICATION	3.415928186626705E-6	DEFECT
// no additional methods required	WITHOUT_CLASSIFICATION	0.9999986420686164	WITHOUT_CLASSIFICATION	1.357931383575874E-6	DEFECT
// Find min, max for the x and y axes	WITHOUT_CLASSIFICATION	0.9999892761768692	WITHOUT_CLASSIFICATION	1.0723823130773214E-5	DEFECT
// Determine the cell size	WITHOUT_CLASSIFICATION	0.9999983700462909	WITHOUT_CLASSIFICATION	1.6299537091774902E-6	DEFECT
// Generate the grid	WITHOUT_CLASSIFICATION	0.9999980491511075	WITHOUT_CLASSIFICATION	1.9508488924863633E-6	DEFECT
// Map the nongrid data into the new regular grid	WITHOUT_CLASSIFICATION	0.9999997331215205	WITHOUT_CLASSIFICATION	2.668784794517637E-7	DEFECT
// scale by the inverse of distance^power	WITHOUT_CLASSIFICATION	0.9999998912062397	WITHOUT_CLASSIFICATION	1.0879376031309777E-7	DEFECT
//remove distance of the sum	WITHOUT_CLASSIFICATION	0.9999979618918107	WITHOUT_CLASSIFICATION	2.038108189194102E-6	DEFECT
// defer null argument check	WITHOUT_CLASSIFICATION	0.9999940949289049	WITHOUT_CLASSIFICATION	5.905071094991613E-6	DEFECT
// we didn't find the key	WITHOUT_CLASSIFICATION	0.9999508413427506	WITHOUT_CLASSIFICATION	4.915865724951976E-5	DEFECT
// handle the special case where the dataset has y-intervals that // we want to measure	WITHOUT_CLASSIFICATION	0.9999998683231411	WITHOUT_CLASSIFICATION	1.3167685877182027E-7	DEFECT
// the CategoryDataset interface expects a list of categories, but // we've stored them in an array...	WITHOUT_CLASSIFICATION	0.9999982136914122	WITHOUT_CLASSIFICATION	1.7863085878731028E-6	DEFECT
// the CategoryDataset interface expects a list of series, but // we've stored them in an array...	WITHOUT_CLASSIFICATION	0.9999983366433051	WITHOUT_CLASSIFICATION	1.6633566949694996E-6	DEFECT
// if d is real small set the inverse to a large number // to avoid INF	WITHOUT_CLASSIFICATION	0.9999993685010824	WITHOUT_CLASSIFICATION	6.314989175649576E-7	DEFECT
//store data as Long	WITHOUT_CLASSIFICATION	0.9999971182717463	WITHOUT_CLASSIFICATION	2.8817282537289377E-6	DEFECT
// store Number as Double	WITHOUT_CLASSIFICATION	0.9999986741552873	WITHOUT_CLASSIFICATION	1.3258447126997247E-6	DEFECT
// check if starting new column	WITHOUT_CLASSIFICATION	0.9999996103876219	WITHOUT_CLASSIFICATION	3.8961237822325984E-7	DEFECT
//store index where new //column starts	WITHOUT_CLASSIFICATION	0.9999908233472059	WITHOUT_CLASSIFICATION	9.176652794136233E-6	DEFECT
// set x to most recent value	WITHOUT_CLASSIFICATION	0.999999346746541	WITHOUT_CLASSIFICATION	6.532534589356136E-7	DEFECT
// create array xIndex to hold // new column indices	WITHOUT_CLASSIFICATION	0.999994812654797	WITHOUT_CLASSIFICATION	5.1873452031056056E-6	DEFECT
// store y and z axes // as Doubles	WITHOUT_CLASSIFICATION	0.9999995050834112	WITHOUT_CLASSIFICATION	4.949165888843301E-7	DEFECT
// calculate constant values	WITHOUT_CLASSIFICATION	0.9999879874294137	WITHOUT_CLASSIFICATION	1.2012570586315219E-5	DEFECT
// look for any keys that we don't already know about...	WITHOUT_CLASSIFICATION	0.9998395861444695	WITHOUT_CLASSIFICATION	1.6041385553054824E-4	DEFECT
// fetch the series, remove the change listener, then remove the series.	WITHOUT_CLASSIFICATION	0.9999992015436135	WITHOUT_CLASSIFICATION	7.984563865238953E-7	DEFECT
// remove all the series from the collection and notify listeners.	WITHOUT_CLASSIFICATION	0.9999897038405355	WITHOUT_CLASSIFICATION	1.0296159464405232E-5	DEFECT
//step through all the values and add them to the hash	WITHOUT_CLASSIFICATION	0.9999955439778859	WITHOUT_CLASSIFICATION	4.45602211405534E-6	DEFECT
// no new methods required	WITHOUT_CLASSIFICATION	0.9999973276143724	WITHOUT_CLASSIFICATION	2.6723856275224682E-6	DEFECT
// can't find any differences	WITHOUT_CLASSIFICATION	0.9999866702613646	WITHOUT_CLASSIFICATION	1.3329738635424816E-5	DEFECT
// now try to instantiate this ;-)	WITHOUT_CLASSIFICATION	0.9999872587840243	WITHOUT_CLASSIFICATION	1.2741215975746043E-5	DEFECT
//  Create new dataset with keys above threshold percentThreshold	WITHOUT_CLASSIFICATION	0.9998703589105266	WITHOUT_CLASSIFICATION	1.296410894734631E-4	DEFECT
//  Do not add key to dataset	WITHOUT_CLASSIFICATION	0.9999844877392124	WITHOUT_CLASSIFICATION	1.551226078751474E-5	DEFECT
//  Add key to dataset	WITHOUT_CLASSIFICATION	0.9999967221490029	WITHOUT_CLASSIFICATION	3.2778509971635485E-6	DEFECT
//  Add other category if applicable	WITHOUT_CLASSIFICATION	0.9999990882129104	WITHOUT_CLASSIFICATION	9.117870895973902E-7	DEFECT
// now do the work...	WITHOUT_CLASSIFICATION	0.9999704177989146	WITHOUT_CLASSIFICATION	2.9582201085485417E-5	DEFECT
// if the dataset implements DomainInfo, life is easier	WITHOUT_CLASSIFICATION	0.9999997731840862	WITHOUT_CLASSIFICATION	2.268159138819875E-7	DEFECT
// handle the standard case (plain CategoryDataset)	WITHOUT_CLASSIFICATION	0.9999996240418707	WITHOUT_CLASSIFICATION	3.7595812930918924E-7	DEFECT
// update the min value	WITHOUT_CLASSIFICATION	0.9999814481367288	WITHOUT_CLASSIFICATION	1.85518632711562E-5	DEFECT
// handle the standard case (plain CategoryDataset)	WITHOUT_CLASSIFICATION	0.9999996240418707	WITHOUT_CLASSIFICATION	3.7595812930918924E-7	DEFECT
/////////////////////////////////////////////////////////////////////////// // From SeriesDataset ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999956217008379	WITHOUT_CLASSIFICATION	4.3782991620700515E-6	DEFECT
/////////////////////////////////////////////////////////////////////////// // From XYDataset ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999950644134428	WITHOUT_CLASSIFICATION	4.935586557280858E-6	DEFECT
/////////////////////////////////////////////////////////////////////////// // From HighLowDataset ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999986989705969	WITHOUT_CLASSIFICATION	1.301029403125353E-6	DEFECT
/////////////////////////////////////////////////////////////////////////// // From IntervalXYDataset ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999984965510909	WITHOUT_CLASSIFICATION	1.5034489091772947E-6	DEFECT
/////////////////////////////////////////////////////////////////////////// // New methods from CombinationDataset ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999978374635976	WITHOUT_CLASSIFICATION	2.1625364023928977E-6	DEFECT
/////////////////////////////////////////////////////////////////////////// // New Methods ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999914301936824	WITHOUT_CLASSIFICATION	8.569806317576691E-6	DEFECT
/////////////////////////////////////////////////////////////////////////// // Private ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999954096490093	WITHOUT_CLASSIFICATION	4.590350990636373E-6	DEFECT
// handle the special case where the dataset has y-intervals that // we want to measure	WITHOUT_CLASSIFICATION	0.9999998683231411	WITHOUT_CLASSIFICATION	1.3167685877182027E-7	DEFECT
// handle three cases by dataset type	WITHOUT_CLASSIFICATION	0.9999974572804654	WITHOUT_CLASSIFICATION	2.5427195345430436E-6	DEFECT
// handle three cases by dataset type	WITHOUT_CLASSIFICATION	0.9999974572804654	WITHOUT_CLASSIFICATION	2.5427195345430436E-6	DEFECT
// handle special case of IntervalXYDataset	WITHOUT_CLASSIFICATION	0.999999735162792	WITHOUT_CLASSIFICATION	2.6483720814067986E-7	DEFECT
// handle special case of IntervalXYDataset	WITHOUT_CLASSIFICATION	0.999999735162792	WITHOUT_CLASSIFICATION	2.6483720814067986E-7	DEFECT
// handle special case of IntervalXYDataset	WITHOUT_CLASSIFICATION	0.999999735162792	WITHOUT_CLASSIFICATION	2.6483720814067986E-7	DEFECT
// handle special case of OHLCDataset	WITHOUT_CLASSIFICATION	0.9999991685169913	WITHOUT_CLASSIFICATION	8.314830086589024E-7	DEFECT
// handle special case of OHLCDataset	WITHOUT_CLASSIFICATION	0.9999991685169913	WITHOUT_CLASSIFICATION	8.314830086589024E-7	DEFECT
// standard case - plain XYDataset	WITHOUT_CLASSIFICATION	0.999999462788893	WITHOUT_CLASSIFICATION	5.372111070052488E-7	DEFECT
// standard case - plain XYDataset	WITHOUT_CLASSIFICATION	0.999999462788893	WITHOUT_CLASSIFICATION	5.372111070052488E-7	DEFECT
// handle special case of BoxAndWhiskerXYDataset	WITHOUT_CLASSIFICATION	0.9999977261881368	WITHOUT_CLASSIFICATION	2.273811863177916E-6	DEFECT
// if the dataset implements DomainInfo, life is easy	WITHOUT_CLASSIFICATION	0.999999447558682	WITHOUT_CLASSIFICATION	5.524413180705896E-7	DEFECT
// if the dataset implements DomainInfo, life is easy	WITHOUT_CLASSIFICATION	0.999999447558682	WITHOUT_CLASSIFICATION	5.524413180705896E-7	DEFECT
// hasn't implemented DomainInfo, so iterate...	WITHOUT_CLASSIFICATION	0.9999973972999628	WITHOUT_CLASSIFICATION	2.6027000370885087E-6	DEFECT
// hasn't implemented RangeInfo, so we'll have to iterate...	WITHOUT_CLASSIFICATION	0.9999968297428927	WITHOUT_CLASSIFICATION	3.1702571072835027E-6	DEFECT
// hasn't implemented RangeInfo, so we'll have to iterate...	WITHOUT_CLASSIFICATION	0.9999968297428927	WITHOUT_CLASSIFICATION	3.1702571072835027E-6	DEFECT
// work out the minimum value...	WITHOUT_CLASSIFICATION	0.9999849154814736	WITHOUT_CLASSIFICATION	1.5084518526456749E-5	DEFECT
// work out the minimum value...	WITHOUT_CLASSIFICATION	0.9999849154814736	WITHOUT_CLASSIFICATION	1.5084518526456749E-5	DEFECT
// work out the minimum value...	WITHOUT_CLASSIFICATION	0.9999849154814736	WITHOUT_CLASSIFICATION	1.5084518526456749E-5	DEFECT
// '+', remember value is negative	WITHOUT_CLASSIFICATION	0.999990096216747	WITHOUT_CLASSIFICATION	9.90378325298114E-6	DEFECT
// create an array holding the group indices for each series...	WITHOUT_CLASSIFICATION	0.9999991083466371	WITHOUT_CLASSIFICATION	8.916533629996881E-7	DEFECT
// minimum and maximum for each group...	WITHOUT_CLASSIFICATION	0.9999992257286983	WITHOUT_CLASSIFICATION	7.742713017980734E-7	DEFECT
// no new methods	WITHOUT_CLASSIFICATION	0.9999948400846721	WITHOUT_CLASSIFICATION	5.159915327909953E-6	DEFECT
// no new methods	WITHOUT_CLASSIFICATION	0.9999948400846721	WITHOUT_CLASSIFICATION	5.159915327909953E-6	DEFECT
// we'll set this to false if there is at // least one non-null data item...	WITHOUT_CLASSIFICATION	0.9999855927652808	WITHOUT_CLASSIFICATION	1.4407234719375852E-5	DEFECT
// no additional methods required	WITHOUT_CLASSIFICATION	0.9999986420686164	WITHOUT_CLASSIFICATION	1.357931383575874E-6	DEFECT
// no new methods required	WITHOUT_CLASSIFICATION	0.9999973276143724	WITHOUT_CLASSIFICATION	2.6723856275224682E-6	DEFECT
// no new methods required	WITHOUT_CLASSIFICATION	0.9999973276143724	WITHOUT_CLASSIFICATION	2.6723856275224682E-6	DEFECT
/////////////////////////////////////////////////////////////////////////// // From XYDataset ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999950644134428	WITHOUT_CLASSIFICATION	4.935586557280858E-6	DEFECT
// handle the special case where the dataset has y-intervals that // we want to measure	WITHOUT_CLASSIFICATION	0.9999998683231411	WITHOUT_CLASSIFICATION	1.3167685877182027E-7	DEFECT
// '+', remember value is negative	WITHOUT_CLASSIFICATION	0.999990096216747	WITHOUT_CLASSIFICATION	9.90378325298114E-6	DEFECT
// '+', remember value is negative	WITHOUT_CLASSIFICATION	0.999990096216747	WITHOUT_CLASSIFICATION	9.90378325298114E-6	DEFECT
// we don't know anything about the ordering of the x-values, // so we iterate until we find the first crossing of x (if any) // we know there are at least 2 items in the series at this point	WITHOUT_CLASSIFICATION	0.9999990877067733	WITHOUT_CLASSIFICATION	9.122932267177108E-7	DEFECT
// delegate null check on dataset	WITHOUT_CLASSIFICATION	0.9999969602397671	WITHOUT_CLASSIFICATION	3.0397602328469396E-6	DEFECT
// exact match on first item	WITHOUT_CLASSIFICATION	0.9999949967926943	WITHOUT_CLASSIFICATION	5.003207305607255E-6	DEFECT
// no crossing of x	WITHOUT_CLASSIFICATION	0.9999992416185685	WITHOUT_CLASSIFICATION	7.583814315537552E-7	DEFECT
// spanning match	WITHOUT_CLASSIFICATION	0.9999974543559207	WITHOUT_CLASSIFICATION	2.5456440793937646E-6	DEFECT
// exact match	WITHOUT_CLASSIFICATION	0.9999942615892597	WITHOUT_CLASSIFICATION	5.7384107402635555E-6	DEFECT
// maps our series into our parent's	WITHOUT_CLASSIFICATION	0.999999517818769	WITHOUT_CLASSIFICATION	4.821812310860115E-7	DEFECT
// prior to 1.0.14, we just fired a PropertyChange - so we need to // keep doing this	WITHOUT_CLASSIFICATION	0.9999872440889014	WITHOUT_CLASSIFICATION	1.2755911098530236E-5	DEFECT
// no new methods added.	WITHOUT_CLASSIFICATION	0.9999705870596273	WITHOUT_CLASSIFICATION	2.9412940372677004E-5	DEFECT
// first line contains column keys	WITHOUT_CLASSIFICATION	0.9999959976684023	WITHOUT_CLASSIFICATION	4.0023315977568205E-6	DEFECT
// remaining lines contain a row key and data values	WITHOUT_CLASSIFICATION	0.9999921228713088	WITHOUT_CLASSIFICATION	7.877128691178327E-6	DEFECT
// first field contains the row key	WITHOUT_CLASSIFICATION	0.9999967234142967	WITHOUT_CLASSIFICATION	3.2765857033171465E-6	DEFECT
// update the max value	WITHOUT_CLASSIFICATION	0.9999849190691329	WITHOUT_CLASSIFICATION	1.508093086710276E-5	DEFECT
// remaining fields contain values	WITHOUT_CLASSIFICATION	0.9999971659435328	WITHOUT_CLASSIFICATION	2.8340564670981426E-6	DEFECT
// Remove any previous old data	WITHOUT_CLASSIFICATION	0.9999935839460302	WITHOUT_CLASSIFICATION	6.416053969814865E-6	DEFECT
// first column contains the row key...	WITHOUT_CLASSIFICATION	0.9999960392429639	WITHOUT_CLASSIFICATION	3.960757036129657E-6	DEFECT
// suppress (value defaults to null)	WITHOUT_CLASSIFICATION	0.9999993856198701	WITHOUT_CLASSIFICATION	6.143801298249768E-7	DEFECT
// not a value, can't use it (defaults to null)	WITHOUT_CLASSIFICATION	0.9999715961600377	WITHOUT_CLASSIFICATION	2.840383996227841E-5	DEFECT
/// First column is X data	WITHOUT_CLASSIFICATION	0.9999596602959114	WITHOUT_CLASSIFICATION	4.0339704088628805E-5	DEFECT
/// Get the column names and cache them.	WITHOUT_CLASSIFICATION	0.9999988761557339	WITHOUT_CLASSIFICATION	1.1238442660944732E-6	DEFECT
// Might need to add, to free memory from any previous result sets	WITHOUT_CLASSIFICATION	0.999999469515968	WITHOUT_CLASSIFICATION	5.304840320932378E-7	DEFECT
// Are we working with a time series.	WITHOUT_CLASSIFICATION	0.9999489659385246	WITHOUT_CLASSIFICATION	5.1034061475463507E-5	DEFECT
// defer null argument check	WITHOUT_CLASSIFICATION	0.9999940949289049	WITHOUT_CLASSIFICATION	5.905071094991613E-6	DEFECT
// defer null argument check	WITHOUT_CLASSIFICATION	0.9999940949289049	WITHOUT_CLASSIFICATION	5.905071094991613E-6	DEFECT
// check arguments...	WITHOUT_CLASSIFICATION	0.9999990739255804	WITHOUT_CLASSIFICATION	9.260744195331213E-7	DEFECT
/////////////////////////////////////////////////////////////////////////// // From SeriesDataset ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999956217008379	WITHOUT_CLASSIFICATION	4.3782991620700515E-6	DEFECT
/////////////////////////////////////////////////////////////////////////// // From IntervalXYDataset ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999984965510909	WITHOUT_CLASSIFICATION	1.5034489091772947E-6	DEFECT
/////////////////////////////////////////////////////////////////////////// // New methods from CombinationDataset ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999978374635976	WITHOUT_CLASSIFICATION	2.1625364023928977E-6	DEFECT
/////////////////////////////////////////////////////////////////////////// // New methods from CombinationDataset ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999978374635976	WITHOUT_CLASSIFICATION	2.1625364023928977E-6	DEFECT
// if this series belongs to a dataset, the dataset might veto the // change if it results in two series within the dataset having the // same key	WITHOUT_CLASSIFICATION	0.9999980934036596	WITHOUT_CLASSIFICATION	1.9065963404095154E-6	DEFECT
// see comments about priority of // 10 in validateObject()	WITHOUT_CLASSIFICATION	0.9999812619083375	WITHOUT_CLASSIFICATION	1.873809166244792E-5	DEFECT
// first field is ignored, since // column 0 is for row keys	WITHOUT_CLASSIFICATION	0.9999997814049548	WITHOUT_CLASSIFICATION	2.185950451365072E-7	DEFECT
// Get all rows. // rows = new ArrayList();	WITHOUT_CLASSIFICATION	0.9999981924038555	WITHOUT_CLASSIFICATION	1.807596144590588E-6	DEFECT
/// Determine max and min values.	WITHOUT_CLASSIFICATION	0.9999737494086075	WITHOUT_CLASSIFICATION	2.6250591392465968E-5	DEFECT
// Tell the listeners a new table has arrived.	WITHOUT_CLASSIFICATION	0.999966219895636	WITHOUT_CLASSIFICATION	3.3780104363966496E-5	DEFECT
// fill the bins	WITHOUT_CLASSIFICATION	0.9999938903712594	WITHOUT_CLASSIFICATION	6.109628740693563E-6	DEFECT
// generic map for each series	WITHOUT_CLASSIFICATION	0.9999984353222429	WITHOUT_CLASSIFICATION	1.5646777570836923E-6	DEFECT
// pretty sure this shouldn't ever happen	WITHOUT_CLASSIFICATION	0.999923169390729	WITHOUT_CLASSIFICATION	7.68306092709394E-5	DEFECT
// lower bounds are the same	WITHOUT_CLASSIFICATION	0.9999964347444056	WITHOUT_CLASSIFICATION	3.5652555945269172E-6	DEFECT
// overridden to make public	WITHOUT_CLASSIFICATION	0.9999863133679907	WITHOUT_CLASSIFICATION	1.3686632009379722E-5	DEFECT
// update the cached range values...	WITHOUT_CLASSIFICATION	0.9999996240482683	WITHOUT_CLASSIFICATION	3.7595173173089944E-7	DEFECT
// check that the new bin doesn't overlap with any existing bin	WITHOUT_CLASSIFICATION	0.999992129374083	WITHOUT_CLASSIFICATION	7.870625917063624E-6	DEFECT
// pass values to other constructor	WITHOUT_CLASSIFICATION	0.9999991643172236	WITHOUT_CLASSIFICATION	8.356827764636715E-7	DEFECT
// update cached min and max values	WITHOUT_CLASSIFICATION	0.9999955502906421	WITHOUT_CLASSIFICATION	4.449709357865117E-6	DEFECT
// defer null argument checks	WITHOUT_CLASSIFICATION	0.9999976018779608	WITHOUT_CLASSIFICATION	2.3981220391477534E-6	DEFECT
// check for zero pivot element	WITHOUT_CLASSIFICATION	0.9999996196691562	WITHOUT_CLASSIFICATION	3.803308438796763E-7	DEFECT
// treat nulls the same as NaNs	WITHOUT_CLASSIFICATION	0.9999877532065747	WITHOUT_CLASSIFICATION	1.2246793425271441E-5	DEFECT
// calculate the sum and count	WITHOUT_CLASSIFICATION	0.9999983979848662	WITHOUT_CLASSIFICATION	1.6020151337911188E-6	DEFECT
// intercept	WITHOUT_CLASSIFICATION	0.9999926481366156	WITHOUT_CLASSIFICATION	7.351863384430292E-6	DEFECT
// sum of x, x^2, x * y, y	WITHOUT_CLASSIFICATION	0.9999971016182991	WITHOUT_CLASSIFICATION	2.8983817008736257E-6	DEFECT
// holds the moving average sum	WITHOUT_CLASSIFICATION	0.9999773975603201	WITHOUT_CLASSIFICATION	2.2602439679988254E-5	DEFECT
// defer null argument checks	WITHOUT_CLASSIFICATION	0.9999976018779608	WITHOUT_CLASSIFICATION	2.3981220391477534E-6	DEFECT
// make sure bins[bins.length]'s upper boundary ends at maximum // to avoid the rounding issue. the bins[0] lower boundary is // guaranteed start from min	WITHOUT_CLASSIFICATION	0.9999993705670461	WITHOUT_CLASSIFICATION	6.294329539078839E-7	DEFECT
// iterate over all data items and update mins and maxes	WITHOUT_CLASSIFICATION	0.999990826525671	WITHOUT_CLASSIFICATION	9.173474328985201E-6	DEFECT
// if this cell held a maximum and/or minimum value, we'll need to // update the cached bounds...	WITHOUT_CLASSIFICATION	0.9999994850816851	WITHOUT_CLASSIFICATION	5.14918314882774E-7	DEFECT
// ********* stat function for linear slope ******** // y = a + bx // a = ybar - b * xbar //     sum(x * y) - (sum (x) * sum(y)) / n // b = ------------------------------------ //     sum (x^2) - (sum(x)^2 / n // *************************************************	WITHOUT_CLASSIFICATION	0.9999996616531842	WITHOUT_CLASSIFICATION	3.383468157692414E-7	DEFECT
// update cached range values	WITHOUT_CLASSIFICATION	0.9999991604849343	WITHOUT_CLASSIFICATION	8.395150657957437E-7	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999874693337447	WITHOUT_CLASSIFICATION	1.2530666255248155E-5	DEFECT
// update the min value	WITHOUT_CLASSIFICATION	0.9999814481367288	WITHOUT_CLASSIFICATION	1.85518632711562E-5	DEFECT
// iterate over all data items and update mins and maxes	WITHOUT_CLASSIFICATION	0.999990826525671	WITHOUT_CLASSIFICATION	9.173474328985201E-6	DEFECT
// CASE 2 : Comparing to another TimePeriod object // -----------------------------------------------	WITHOUT_CLASSIFICATION	0.9999522267106067	WITHOUT_CLASSIFICATION	4.77732893933248E-5	DEFECT
// CASE 3 : Comparing to a non-TimePeriod object // ---------------------------------------------	WITHOUT_CLASSIFICATION	0.9999515874457237	WITHOUT_CLASSIFICATION	4.8412554276278876E-5	DEFECT
// consider time periods to be ordered after general objects	WITHOUT_CLASSIFICATION	0.9999987810063503	WITHOUT_CLASSIFICATION	1.2189936496765443E-6	DEFECT
// consider time periods to be ordered after general objects	WITHOUT_CLASSIFICATION	0.9999987810063503	WITHOUT_CLASSIFICATION	1.2189936496765443E-6	DEFECT
// we are at the last minute in the hour...	WITHOUT_CLASSIFICATION	0.9999929530066686	WITHOUT_CLASSIFICATION	7.0469933314449025E-6	DEFECT
// CASE 1 : Comparing to another Minute object // -------------------------------------------	WITHOUT_CLASSIFICATION	0.999975174047346	WITHOUT_CLASSIFICATION	2.4825952653971927E-5	DEFECT
// more difficult case - evaluate later...	WITHOUT_CLASSIFICATION	0.9999976182640324	WITHOUT_CLASSIFICATION	2.3817359675557634E-6	DEFECT
// won't get here...	WITHOUT_CLASSIFICATION	0.9999901173461199	WITHOUT_CLASSIFICATION	9.882653880167298E-6	DEFECT
// remove old items and notify if necessary	WITHOUT_CLASSIFICATION	0.9999980050918339	WITHOUT_CLASSIFICATION	1.9949081661928494E-6	DEFECT
// make the change (if it's not a duplicate time period)...	WITHOUT_CLASSIFICATION	0.9999986530387113	WITHOUT_CLASSIFICATION	1.346961288743724E-6	DEFECT
// check if this addition will exceed the maximum item count...	WITHOUT_CLASSIFICATION	0.9999909600632096	WITHOUT_CLASSIFICATION	9.039936790448117E-6	DEFECT
// check if this addition will exceed the maximum item count...	WITHOUT_CLASSIFICATION	0.9999909600632096	WITHOUT_CLASSIFICATION	9.039936790448117E-6	DEFECT
// find the serial index of the period specified by 'latest'	WITHOUT_CLASSIFICATION	0.9999997975298317	WITHOUT_CLASSIFICATION	2.024701684014327E-7	DEFECT
// it is too slow to look at every data item, so let's just look at // the first, middle and last items...	WITHOUT_CLASSIFICATION	0.9999991541355033	WITHOUT_CLASSIFICATION	8.458644965690869E-7	DEFECT
// CASE 2 : Comparing to another TimePeriod object // -----------------------------------------------	WITHOUT_CLASSIFICATION	0.9999522267106067	WITHOUT_CLASSIFICATION	4.77732893933248E-5	DEFECT
// CASE 2 : Comparing to another TimePeriod object // -----------------------------------------------	WITHOUT_CLASSIFICATION	0.9999522267106067	WITHOUT_CLASSIFICATION	4.77732893933248E-5	DEFECT
// CASE 3 : Comparing to a non-TimePeriod object // ---------------------------------------------	WITHOUT_CLASSIFICATION	0.9999515874457237	WITHOUT_CLASSIFICATION	4.8412554276278876E-5	DEFECT
// consider time periods to be ordered after general objects	WITHOUT_CLASSIFICATION	0.9999987810063503	WITHOUT_CLASSIFICATION	1.2189936496765443E-6	DEFECT
// consider time periods to be ordered after general objects	WITHOUT_CLASSIFICATION	0.9999987810063503	WITHOUT_CLASSIFICATION	1.2189936496765443E-6	DEFECT
// more difficult case - evaluate later...	WITHOUT_CLASSIFICATION	0.9999976182640324	WITHOUT_CLASSIFICATION	2.3817359675557634E-6	DEFECT
// more difficult case - evaluate later...	WITHOUT_CLASSIFICATION	0.9999976182640324	WITHOUT_CLASSIFICATION	2.3817359675557634E-6	DEFECT
// since the items are ordered, we could be more clever here and avoid // iterating over all the data	WITHOUT_CLASSIFICATION	0.9999993278424955	WITHOUT_CLASSIFICATION	6.721575045802061E-7	DEFECT
// remove old items if necessary, but // don't notify anyone, because that // happens next anyway...	WITHOUT_CLASSIFICATION	0.9999762005828514	WITHOUT_CLASSIFICATION	2.3799417148548187E-5	DEFECT
// figure out if we need to iterate through all the y-values // to find the revised minY / maxY	WITHOUT_CLASSIFICATION	0.9999997012188976	WITHOUT_CLASSIFICATION	2.987811024183249E-7	DEFECT
// check if there are any values earlier than specified by the history // count...	WITHOUT_CLASSIFICATION	0.9999998181001716	WITHOUT_CLASSIFICATION	1.8189982832087121E-7	DEFECT
// check if there are any values earlier than specified by the history // count...	WITHOUT_CLASSIFICATION	0.9999998181001716	WITHOUT_CLASSIFICATION	1.8189982832087121E-7	DEFECT
// start is after last data item	WITHOUT_CLASSIFICATION	0.9999973819252151	WITHOUT_CLASSIFICATION	2.618074784856994E-6	DEFECT
// update the time series appropriately	WITHOUT_CLASSIFICATION	0.9999979386158889	WITHOUT_CLASSIFICATION	2.061384111067081E-6	DEFECT
// we are at the first hour in the day...	WITHOUT_CLASSIFICATION	0.9999848218392813	WITHOUT_CLASSIFICATION	1.5178160718639682E-5	DEFECT
// we are at the last hour in the day...	WITHOUT_CLASSIFICATION	0.9999903869785658	WITHOUT_CLASSIFICATION	9.613021434194396E-6	DEFECT
// CASE 1 : Comparing to another Hour object // -----------------------------------------	WITHOUT_CLASSIFICATION	0.9999844944574021	WITHOUT_CLASSIFICATION	1.550554259787791E-5	DEFECT
// if the hour is 0 - 23 then create an hour	WITHOUT_CLASSIFICATION	0.9999962258507963	WITHOUT_CLASSIFICATION	3.774149203759966E-6	DEFECT
// parse the string...	WITHOUT_CLASSIFICATION	0.9999964505618149	WITHOUT_CLASSIFICATION	3.5494381851236755E-6	DEFECT
// create the year...	WITHOUT_CLASSIFICATION	0.9999969770878084	WITHOUT_CLASSIFICATION	3.022912191451693E-6	DEFECT
// get the current data item...	WITHOUT_CLASSIFICATION	0.9999990227415513	WITHOUT_CLASSIFICATION	9.772584487526093E-7	DEFECT
// work out the average for the earlier values...	WITHOUT_CLASSIFICATION	0.9999962586881643	WITHOUT_CLASSIFICATION	3.741311835788555E-6	DEFECT
// work out the average for the earlier values...	WITHOUT_CLASSIFICATION	0.9999962586881643	WITHOUT_CLASSIFICATION	3.741311835788555E-6	DEFECT
// remove the point i-periodCount out of the rolling sum.	WITHOUT_CLASSIFICATION	0.9999997561924694	WITHOUT_CLASSIFICATION	2.438075305981991E-7	DEFECT
// an arbitrary safe default value	WITHOUT_CLASSIFICATION	0.9999835764824984	WITHOUT_CLASSIFICATION	1.6423517501657258E-5	DEFECT
// default value;	WITHOUT_CLASSIFICATION	0.9999943536365427	WITHOUT_CLASSIFICATION	5.64636345732901E-6	DEFECT
// as a class variable, initializes == 0	WITHOUT_CLASSIFICATION	0.9999992689831975	WITHOUT_CLASSIFICATION	7.310168026112532E-7	DEFECT
// cached values used for interface DomainInfo:	WITHOUT_CLASSIFICATION	0.9999995708278304	WITHOUT_CLASSIFICATION	4.291721695213869E-7	DEFECT
//rangeGridlinePaint;	WITHOUT_CLASSIFICATION	0.999979076729039	WITHOUT_CLASSIFICATION	2.0923270961003366E-5	DEFECT
// CASE 2 : Comparing to another TimePeriod object // -----------------------------------------------	WITHOUT_CLASSIFICATION	0.9999522267106067	WITHOUT_CLASSIFICATION	4.77732893933248E-5	DEFECT
// CASE 3 : Comparing to a non-TimePeriod object // ---------------------------------------------	WITHOUT_CLASSIFICATION	0.9999515874457237	WITHOUT_CLASSIFICATION	4.8412554276278876E-5	DEFECT
// CASE 3 : Comparing to a non-TimePeriod object // ---------------------------------------------	WITHOUT_CLASSIFICATION	0.9999515874457237	WITHOUT_CLASSIFICATION	4.8412554276278876E-5	DEFECT
// autoinit's to null.	WITHOUT_CLASSIFICATION	0.9999939122196153	WITHOUT_CLASSIFICATION	6.087780384625775E-6	DEFECT
// CASE 1 : Comparing to another Year object // -----------------------------------------	WITHOUT_CLASSIFICATION	0.9999641479546221	WITHOUT_CLASSIFICATION	3.585204537794338E-5	DEFECT
// if the initial averaging period is to be excluded, then // calculate the lowest x-value to have an average calculated...	WITHOUT_CLASSIFICATION	0.9999748496229579	WITHOUT_CLASSIFICATION	2.5150377042082856E-5	DEFECT
//}	WITHOUT_CLASSIFICATION	0.9999065247451271	WITHOUT_CLASSIFICATION	9.347525487297817E-5	DEFECT
//}	WITHOUT_CLASSIFICATION	0.9999065247451271	WITHOUT_CLASSIFICATION	9.347525487297817E-5	DEFECT
// if the initial averaging period is to be excluded, then // calculate the index of the // first data item to have an average calculated...	WITHOUT_CLASSIFICATION	0.9999679018509005	WITHOUT_CLASSIFICATION	3.2098149099454195E-5	DEFECT
// Cached values used for interface RangeInfo: (note minValue pinned at 0) //   A single set of extrema covers the entire SeriesCollection	WITHOUT_CLASSIFICATION	0.9999993898868841	WITHOUT_CLASSIFICATION	6.101131159685177E-7	DEFECT
///  .. etc....	WITHOUT_CLASSIFICATION	0.9999882186000953	WITHOUT_CLASSIFICATION	1.1781399904650484E-5	DEFECT
/// Expand the following for all defined TimePeriods:	WITHOUT_CLASSIFICATION	0.9999949220535103	WITHOUT_CLASSIFICATION	5.077946489709927E-6	DEFECT
// initialize the members of "seriesNames" array so they won't be null:	WITHOUT_CLASSIFICATION	0.9998790496154525	WITHOUT_CLASSIFICATION	1.2095038454740015E-4	DEFECT
//{ // deep copy from values[], caller // can safely discard that array	WITHOUT_CLASSIFICATION	0.9999674713073452	WITHOUT_CLASSIFICATION	3.2528692654684095E-5	DEFECT
// Avoid IndexOutOfBoundsException:	WITHOUT_CLASSIFICATION	0.999975653728478	WITHOUT_CLASSIFICATION	2.4346271522008853E-5	DEFECT
// But if that series array already exists, just overwrite its contents	WITHOUT_CLASSIFICATION	0.9999993299064651	WITHOUT_CLASSIFICATION	6.700935348411463E-7	DEFECT
// But if that series array already exists, just overwrite its contents //synchronized(this) //{	WITHOUT_CLASSIFICATION	0.9999992553160455	WITHOUT_CLASSIFICATION	7.446839544884166E-7	DEFECT
// all arrays equal length, // so ignore argument:	WITHOUT_CLASSIFICATION	0.9999994177110614	WITHOUT_CLASSIFICATION	5.822889386128E-7	DEFECT
// Methods for managing the FIFO's:	WITHOUT_CLASSIFICATION	0.9998913698482093	WITHOUT_CLASSIFICATION	1.0863015179073643E-4	DEFECT
// no translation needed	WITHOUT_CLASSIFICATION	0.9999991315132727	WITHOUT_CLASSIFICATION	8.684867273774143E-7	DEFECT
// else  [implicit here]	WITHOUT_CLASSIFICATION	0.9999976902125083	WITHOUT_CLASSIFICATION	2.309787491713522E-6	DEFECT
// newestAt takes value previously held // by oldestAT	WITHOUT_CLASSIFICATION	0.9999800023812045	WITHOUT_CLASSIFICATION	1.9997618795395416E-5	DEFECT
// if the oldest data contained a maximum Y-value, invalidate the stored //   Y-max and Y-range data:	WITHOUT_CLASSIFICATION	0.999997901361236	WITHOUT_CLASSIFICATION	2.0986387639131077E-6	DEFECT
// deregister the collection as a change listener to each series in the // collection	WITHOUT_CLASSIFICATION	0.9999983845055047	WITHOUT_CLASSIFICATION	1.6154944953870666E-6	DEFECT
//  wipe the next (about to be used) set of data slots	WITHOUT_CLASSIFICATION	0.9999999621669136	WITHOUT_CLASSIFICATION	3.7833086391221456E-8	DEFECT
// Update the array of TimePeriods:	WITHOUT_CLASSIFICATION	0.9999887638529583	WITHOUT_CLASSIFICATION	1.123614704168139E-5	DEFECT
// Now advance "oldestAt", wrapping at end of the array	WITHOUT_CLASSIFICATION	0.9999978435751273	WITHOUT_CLASSIFICATION	2.1564248727511613E-6	DEFECT
// Update the domain limits: //(time is kept in msec)	WITHOUT_CLASSIFICATION	0.9999201485670293	WITHOUT_CLASSIFICATION	7.98514329707667E-5	DEFECT
//  If data can be < 0, the next 2 methods should be modified	WITHOUT_CLASSIFICATION	0.9999964150924493	WITHOUT_CLASSIFICATION	3.584907550678166E-6	DEFECT
// index to select the "series"	WITHOUT_CLASSIFICATION	0.9999965877747473	WITHOUT_CLASSIFICATION	3.4122252527109624E-6	DEFECT
/* // "Extras" found useful when analyzing/verifying class behavior:    public Number getUntranslatedXValue(int series, int item)    {      return super.getXValue(series, item);    }    public float getUntranslatedY(int series, int item)    {      return super.getY(series, item);    }  */	WITHOUT_CLASSIFICATION	0.9999995401388037	WITHOUT_CLASSIFICATION	4.5986119629560326E-7	DEFECT
// a Long kept updated by advanceTime()	WITHOUT_CLASSIFICATION	0.9999927365331249	WITHOUT_CLASSIFICATION	7.263466875134488E-6	DEFECT
// a Long kept updated by advanceTime()	WITHOUT_CLASSIFICATION	0.9999927365331249	WITHOUT_CLASSIFICATION	7.263466875134488E-6	DEFECT
// try a dataset with some content...	WITHOUT_CLASSIFICATION	0.9999973276064307	WITHOUT_CLASSIFICATION	2.6723935693694778E-6	DEFECT
// try a null argument	WITHOUT_CLASSIFICATION	0.9999894940748943	WITHOUT_CLASSIFICATION	1.050592510572729E-5	DEFECT
// try a dataset with some content...	WITHOUT_CLASSIFICATION	0.9999973276064307	WITHOUT_CLASSIFICATION	2.6723935693694778E-6	DEFECT
// try a dataset with some content...	WITHOUT_CLASSIFICATION	0.9999973276064307	WITHOUT_CLASSIFICATION	2.6723935693694778E-6	DEFECT
// remove all the series from the collection and notify listeners.	WITHOUT_CLASSIFICATION	0.9999897038405355	WITHOUT_CLASSIFICATION	1.0296159464405232E-5	DEFECT
// CASE 2 : Comparing to another TimePeriod object // -----------------------------------------------	WITHOUT_CLASSIFICATION	0.9999522267106067	WITHOUT_CLASSIFICATION	4.77732893933248E-5	DEFECT
// CASE 3 : Comparing to a non-TimePeriod object // ---------------------------------------------	WITHOUT_CLASSIFICATION	0.9999515874457237	WITHOUT_CLASSIFICATION	4.8412554276278876E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999937644811133	WITHOUT_CLASSIFICATION	6.235518886679509E-6	DEFECT
// CASE 3 : Comparing to a non-TimePeriod object // ---------------------------------------------	WITHOUT_CLASSIFICATION	0.9999515874457237	WITHOUT_CLASSIFICATION	4.8412554276278876E-5	DEFECT
// consider time periods to be ordered after general objects	WITHOUT_CLASSIFICATION	0.9999987810063503	WITHOUT_CLASSIFICATION	1.2189936496765443E-6	DEFECT
// consider time periods to be ordered after general objects	WITHOUT_CLASSIFICATION	0.9999987810063503	WITHOUT_CLASSIFICATION	1.2189936496765443E-6	DEFECT
// more difficult case - evaluate later...	WITHOUT_CLASSIFICATION	0.9999976182640324	WITHOUT_CLASSIFICATION	2.3817359675557634E-6	DEFECT
// more difficult case - evaluate later...	WITHOUT_CLASSIFICATION	0.9999976182640324	WITHOUT_CLASSIFICATION	2.3817359675557634E-6	DEFECT
// parse the string...	WITHOUT_CLASSIFICATION	0.9999964505618149	WITHOUT_CLASSIFICATION	3.5494381851236755E-6	DEFECT
// check an empty dataset	WITHOUT_CLASSIFICATION	0.9999927737802312	WITHOUT_CLASSIFICATION	7.2262197686898415E-6	DEFECT
// appendData() writes new data at the index position given by newestAt/ // When adding new data dynamically, use advanceTime(), followed by this:	WITHOUT_CLASSIFICATION	0.999961772378376	WITHOUT_CLASSIFICATION	3.822762162388103E-5	DEFECT
// check whether the "valueHistory" array member exists; if not, // create them:	WITHOUT_CLASSIFICATION	0.9999982559061629	WITHOUT_CLASSIFICATION	1.7440938371065668E-6	DEFECT
// getXxx() ftns can ignore the "series" argument: // Don't synchronize this!! Instead, synchronize the loop that calls it.	WITHOUT_CLASSIFICATION	0.9999876343283927	WITHOUT_CLASSIFICATION	1.2365671607418212E-5	DEFECT
// Don't synchronize this!! // Instead, synchronize the loop that calls it.	WITHOUT_CLASSIFICATION	0.9999953216727417	WITHOUT_CLASSIFICATION	4.678327258221645E-6	DEFECT
// The next 3 functions implement the RangeInfo interface. // Using saved limits (updated by each updateTime() call) significantly // improves performance.  WARNING: this code makes the simplifying // assumption that data is never negative.  Expand as needed for the // general case.	WITHOUT_CLASSIFICATION	0.9999860758629288	WITHOUT_CLASSIFICATION	1.3924137071241989E-5	DEFECT
// CASE 1 : Comparing to another Quarter object // --------------------------------------------	WITHOUT_CLASSIFICATION	0.9999796115043698	WITHOUT_CLASSIFICATION	2.0388495630270775E-5	DEFECT
// find the Q and the integer following it (remove both from the // string)...	WITHOUT_CLASSIFICATION	0.9999985871969266	WITHOUT_CLASSIFICATION	1.412803073367956E-6	DEFECT
// replace any / , or - with a space	WITHOUT_CLASSIFICATION	0.999999618938451	WITHOUT_CLASSIFICATION	3.8106154891143954E-7	DEFECT
// do nothing, so null is returned	WITHOUT_CLASSIFICATION	0.9999878064477565	WITHOUT_CLASSIFICATION	1.2193552243467352E-5	DEFECT
//////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999134697511337	WITHOUT_CLASSIFICATION	8.653024886628996E-5	DEFECT
// CASE 1 : Comparing to another Day object // ----------------------------------------	WITHOUT_CLASSIFICATION	0.9999349097070708	WITHOUT_CLASSIFICATION	6.509029292914007E-5	DEFECT
// check arguments...delegated // fetch the series name...	WITHOUT_CLASSIFICATION	0.999999862620232	WITHOUT_CLASSIFICATION	1.3737976793202546E-7	DEFECT
// deregister the collection as a change listener to each series in the // collection	WITHOUT_CLASSIFICATION	0.9999983845055047	WITHOUT_CLASSIFICATION	1.6154944953870666E-6	DEFECT
// if it is not the series name, then we have no interest	WITHOUT_CLASSIFICATION	0.9999790394164726	WITHOUT_CLASSIFICATION	2.09605835274585E-5	DEFECT
// to be defensive, let's check that the source series does in fact // belong to this collection	WITHOUT_CLASSIFICATION	0.9999831593223598	WITHOUT_CLASSIFICATION	1.6840677640184388E-5	DEFECT
// check if the new series name already exists for another series	WITHOUT_CLASSIFICATION	0.9999997117843396	WITHOUT_CLASSIFICATION	2.882156604258218E-7	DEFECT
// we need to work out if the previous year has 52 or 53 weeks...	WITHOUT_CLASSIFICATION	0.9999986443359016	WITHOUT_CLASSIFICATION	1.3556640983992454E-6	DEFECT
// check an empty dataset	WITHOUT_CLASSIFICATION	0.9999927737802312	WITHOUT_CLASSIFICATION	7.2262197686898415E-6	DEFECT
// check an empty dataset	WITHOUT_CLASSIFICATION	0.9999927737802312	WITHOUT_CLASSIFICATION	7.2262197686898415E-6	DEFECT
// CASE 2 : Comparing to a general object // ---------------------------------------------	WITHOUT_CLASSIFICATION	0.9999632329202254	WITHOUT_CLASSIFICATION	3.6767079774685246E-5	DEFECT
// remove all the series from the collection and notify listeners.	WITHOUT_CLASSIFICATION	0.9999897038405355	WITHOUT_CLASSIFICATION	1.0296159464405232E-5	DEFECT
// CASE 1 : Comparing to another Second object // -------------------------------------------	WITHOUT_CLASSIFICATION	0.9999733342946155	WITHOUT_CLASSIFICATION	2.666570538443438E-5	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999874693337447	WITHOUT_CLASSIFICATION	1.2530666255248155E-5	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999874693337447	WITHOUT_CLASSIFICATION	1.2530666255248155E-5	DEFECT
// CASE 2 : Comparing to another TimePeriod object // -----------------------------------------------	WITHOUT_CLASSIFICATION	0.9999522267106067	WITHOUT_CLASSIFICATION	4.77732893933248E-5	DEFECT
// CASE 3 : Comparing to a non-TimePeriod object // ---------------------------------------------	WITHOUT_CLASSIFICATION	0.9999515874457237	WITHOUT_CLASSIFICATION	4.8412554276278876E-5	DEFECT
// CASE 3 : Comparing to a non-TimePeriod object // ---------------------------------------------	WITHOUT_CLASSIFICATION	0.9999515874457237	WITHOUT_CLASSIFICATION	4.8412554276278876E-5	DEFECT
// CASE 3 : Comparing to a non-TimePeriod object // ---------------------------------------------	WITHOUT_CLASSIFICATION	0.9999515874457237	WITHOUT_CLASSIFICATION	4.8412554276278876E-5	DEFECT
// consider time periods to be ordered after general objects	WITHOUT_CLASSIFICATION	0.9999987810063503	WITHOUT_CLASSIFICATION	1.2189936496765443E-6	DEFECT
// consider time periods to be ordered after general objects	WITHOUT_CLASSIFICATION	0.9999987810063503	WITHOUT_CLASSIFICATION	1.2189936496765443E-6	DEFECT
// consider time periods to be ordered after general objects	WITHOUT_CLASSIFICATION	0.9999987810063503	WITHOUT_CLASSIFICATION	1.2189936496765443E-6	DEFECT
// consider time periods to be ordered after general objects	WITHOUT_CLASSIFICATION	0.9999987810063503	WITHOUT_CLASSIFICATION	1.2189936496765443E-6	DEFECT
// consider time periods to be ordered after general objects	WITHOUT_CLASSIFICATION	0.9999987810063503	WITHOUT_CLASSIFICATION	1.2189936496765443E-6	DEFECT
// more difficult case - evaluate later...	WITHOUT_CLASSIFICATION	0.9999976182640324	WITHOUT_CLASSIFICATION	2.3817359675557634E-6	DEFECT
// more difficult case - evaluate later...	WITHOUT_CLASSIFICATION	0.9999976182640324	WITHOUT_CLASSIFICATION	2.3817359675557634E-6	DEFECT
// more difficult case - evaluate later...	WITHOUT_CLASSIFICATION	0.9999976182640324	WITHOUT_CLASSIFICATION	2.3817359675557634E-6	DEFECT
// more difficult case - evaluate later...	WITHOUT_CLASSIFICATION	0.9999976182640324	WITHOUT_CLASSIFICATION	2.3817359675557634E-6	DEFECT
// won't get here...	WITHOUT_CLASSIFICATION	0.9999901173461199	WITHOUT_CLASSIFICATION	9.882653880167298E-6	DEFECT
// check an empty dataset	WITHOUT_CLASSIFICATION	0.9999927737802312	WITHOUT_CLASSIFICATION	7.2262197686898415E-6	DEFECT
// sometimes the last few days of the year are considered to fall in // the *first* week of the following year.  Refer to the Javadocs for // GregorianCalendar.	WITHOUT_CLASSIFICATION	0.9999984910398819	WITHOUT_CLASSIFICATION	1.508960118132782E-6	DEFECT
// CASE 1 : Comparing to another Week object // --------------------------------------------	WITHOUT_CLASSIFICATION	0.9999711218882608	WITHOUT_CLASSIFICATION	2.8878111739297204E-5	DEFECT
// trim whitespace from either end of the string	WITHOUT_CLASSIFICATION	0.9999982861207789	WITHOUT_CLASSIFICATION	1.7138792211259808E-6	DEFECT
// trim whitespace from either end of the string	WITHOUT_CLASSIFICATION	0.9999982861207789	WITHOUT_CLASSIFICATION	1.7138792211259808E-6	DEFECT
// suppress	WITHOUT_CLASSIFICATION	0.9999995090388478	WITHOUT_CLASSIFICATION	4.909611521028758E-7	DEFECT
// suppress	WITHOUT_CLASSIFICATION	0.9999995090388478	WITHOUT_CLASSIFICATION	4.909611521028758E-7	DEFECT
// suppress	WITHOUT_CLASSIFICATION	0.9999995090388478	WITHOUT_CLASSIFICATION	4.909611521028758E-7	DEFECT
// CASE 1 : Comparing to another Month object // --------------------------------------------	WITHOUT_CLASSIFICATION	0.9999741299821387	WITHOUT_CLASSIFICATION	2.58700178612585E-5	DEFECT
// if there is no separator, we assume the first four characters // are YYYY	WITHOUT_CLASSIFICATION	0.9999999685911902	WITHOUT_CLASSIFICATION	3.140880971906494E-8	DEFECT
// now it is trickier to determine if the month or year is first	WITHOUT_CLASSIFICATION	0.9999962888611843	WITHOUT_CLASSIFICATION	3.711138815759928E-6	DEFECT
// --- DEPRECATED METHODS -------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999215029139042	WITHOUT_CLASSIFICATION	7.849708609578544E-5	DEFECT
// CASE 1 : Comparing to another TimeSeriesDataItem object // -------------------------------------------------------	WITHOUT_CLASSIFICATION	0.99997033872782	WITHOUT_CLASSIFICATION	2.9661272180013058E-5	DEFECT
//private Comparable key;	WITHOUT_CLASSIFICATION	0.9999764847978643	WITHOUT_CLASSIFICATION	2.351520213569584E-5	DEFECT
//this.key = null;	WITHOUT_CLASSIFICATION	0.9999169114131005	WITHOUT_CLASSIFICATION	8.30885868994426E-5	DEFECT
// no attributes to read	WITHOUT_CLASSIFICATION	0.9999963871364332	WITHOUT_CLASSIFICATION	3.6128635668432094E-6	DEFECT
//axisOffset;	WITHOUT_CLASSIFICATION	0.9999668151736045	WITHOUT_CLASSIFICATION	3.31848263953517E-5	DEFECT
// check arguments...	WITHOUT_CLASSIFICATION	0.9999990739255804	WITHOUT_CLASSIFICATION	9.260744195331213E-7	DEFECT
// fetch the series, remove the change listener, then remove the series.	WITHOUT_CLASSIFICATION	0.9999992015436135	WITHOUT_CLASSIFICATION	7.984563865238953E-7	DEFECT
// remove all the series from the collection and notify listeners.	WITHOUT_CLASSIFICATION	0.9999897038405355	WITHOUT_CLASSIFICATION	1.0296159464405232E-5	DEFECT
// if it is not the series name, then we have no interest	WITHOUT_CLASSIFICATION	0.9999790394164726	WITHOUT_CLASSIFICATION	2.09605835274585E-5	DEFECT
// check if the new series name already exists for another series	WITHOUT_CLASSIFICATION	0.9999997117843396	WITHOUT_CLASSIFICATION	2.882156604258218E-7	DEFECT
// Remove all the series from the collection and notify listeners.	WITHOUT_CLASSIFICATION	0.9999893180014237	WITHOUT_CLASSIFICATION	1.0681998576396801E-5	DEFECT
// XYDataset only provides methods for reading a dataset...	WITHOUT_CLASSIFICATION	0.999996177543774	WITHOUT_CLASSIFICATION	3.822456225944805E-6	DEFECT
// check arguments...delegated	WITHOUT_CLASSIFICATION	0.9999998576493268	WITHOUT_CLASSIFICATION	1.4235067330250467E-7	DEFECT
// check arguments...delegated	WITHOUT_CLASSIFICATION	0.9999998576493268	WITHOUT_CLASSIFICATION	1.4235067330250467E-7	DEFECT
// Remove all the series from the collection and notify listeners.	WITHOUT_CLASSIFICATION	0.9999893180014237	WITHOUT_CLASSIFICATION	1.0681998576396801E-5	DEFECT
// Unregister the collection as a change listener to each series in // the collection.	WITHOUT_CLASSIFICATION	0.9999977403535081	WITHOUT_CLASSIFICATION	2.2596464919493415E-6	DEFECT
// check an empty dataset	WITHOUT_CLASSIFICATION	0.9999927737802312	WITHOUT_CLASSIFICATION	7.2262197686898415E-6	DEFECT
// add a new series	WITHOUT_CLASSIFICATION	0.999999057875587	WITHOUT_CLASSIFICATION	9.421244131690068E-7	DEFECT
// need to configure the intervalDelegate to match the original	WITHOUT_CLASSIFICATION	0.9999999507876435	WITHOUT_CLASSIFICATION	4.9212356551257094E-8	DEFECT
// check an empty dataset	WITHOUT_CLASSIFICATION	0.9999927737802312	WITHOUT_CLASSIFICATION	7.2262197686898415E-6	DEFECT
// we can't be sure of the order	WITHOUT_CLASSIFICATION	0.9999962276502019	WITHOUT_CLASSIFICATION	3.772349798202333E-6	DEFECT
// replace an existing series	WITHOUT_CLASSIFICATION	0.9999979175994438	WITHOUT_CLASSIFICATION	2.0824005561887804E-6	DEFECT
// check an empty dataset	WITHOUT_CLASSIFICATION	0.9999927737802312	WITHOUT_CLASSIFICATION	7.2262197686898415E-6	DEFECT
// either autoWidth is off or autoIntervalWidth was not set.	WITHOUT_CLASSIFICATION	0.9999996833700672	WITHOUT_CLASSIFICATION	3.166299327679588E-7	DEFECT
// check an empty dataset	WITHOUT_CLASSIFICATION	0.9999927737802312	WITHOUT_CLASSIFICATION	7.2262197686898415E-6	DEFECT
// check an empty dataset	WITHOUT_CLASSIFICATION	0.9999927737802312	WITHOUT_CLASSIFICATION	7.2262197686898415E-6	DEFECT
// check an empty dataset	WITHOUT_CLASSIFICATION	0.9999927737802312	WITHOUT_CLASSIFICATION	7.2262197686898415E-6	DEFECT
// argument checking delegated...	WITHOUT_CLASSIFICATION	0.9999994865812032	WITHOUT_CLASSIFICATION	5.134187968405951E-7	DEFECT
// argument checking delegated...	WITHOUT_CLASSIFICATION	0.9999994865812032	WITHOUT_CLASSIFICATION	5.134187968405951E-7	DEFECT
// delegate argument checking to XYDataItem...	WITHOUT_CLASSIFICATION	0.9999986692058309	WITHOUT_CLASSIFICATION	1.330794169132421E-6	DEFECT
// need to make sure we are adding *after* any duplicates	WITHOUT_CLASSIFICATION	0.9999997025886521	WITHOUT_CLASSIFICATION	2.974113478970246E-7	DEFECT
// can't allow duplicate values, so we need to check whether // there is an item with the given x-value already	WITHOUT_CLASSIFICATION	0.9999984676044894	WITHOUT_CLASSIFICATION	1.5323955106278663E-6	DEFECT
// CASE 2 : Comparing to a general object // ---------------------------------------------	WITHOUT_CLASSIFICATION	0.9999632329202254	WITHOUT_CLASSIFICATION	3.6767079774685246E-5	DEFECT
// check arguments...	WITHOUT_CLASSIFICATION	0.9999990739255804	WITHOUT_CLASSIFICATION	9.260744195331213E-7	DEFECT
// consider time periods to be ordered after general objects	WITHOUT_CLASSIFICATION	0.9999987810063503	WITHOUT_CLASSIFICATION	1.2189936496765443E-6	DEFECT
// won't get here...	WITHOUT_CLASSIFICATION	0.9999901173461199	WITHOUT_CLASSIFICATION	9.882653880167298E-6	DEFECT
// check if this addition will exceed the maximum item count...	WITHOUT_CLASSIFICATION	0.9999909600632096	WITHOUT_CLASSIFICATION	9.039936790448117E-6	DEFECT
// to be defensive, let's check that the source series does in fact // belong to this collection	WITHOUT_CLASSIFICATION	0.9999831593223598	WITHOUT_CLASSIFICATION	1.6840677640184388E-5	DEFECT
// Unregister the collection as a change listener to each series in // the collection.	WITHOUT_CLASSIFICATION	0.9999977403535081	WITHOUT_CLASSIFICATION	2.2596464919493415E-6	DEFECT
// Unregister the collection as a change listener to each series in // the collection.	WITHOUT_CLASSIFICATION	0.9999977403535081	WITHOUT_CLASSIFICATION	2.2596464919493415E-6	DEFECT
// Remove all the series from the collection and notify listeners.	WITHOUT_CLASSIFICATION	0.9999893180014237	WITHOUT_CLASSIFICATION	1.0681998576396801E-5	DEFECT
// need to configure the intervalDelegate to match the original	WITHOUT_CLASSIFICATION	0.9999999507876435	WITHOUT_CLASSIFICATION	4.9212356551257094E-8	DEFECT
// add a new series	WITHOUT_CLASSIFICATION	0.999999057875587	WITHOUT_CLASSIFICATION	9.421244131690068E-7	DEFECT
// add a new series	WITHOUT_CLASSIFICATION	0.999999057875587	WITHOUT_CLASSIFICATION	9.421244131690068E-7	DEFECT
// replace an existing series	WITHOUT_CLASSIFICATION	0.9999979175994438	WITHOUT_CLASSIFICATION	2.0824005561887804E-6	DEFECT
// replace an existing series	WITHOUT_CLASSIFICATION	0.9999979175994438	WITHOUT_CLASSIFICATION	2.0824005561887804E-6	DEFECT
// null is ignored	WITHOUT_CLASSIFICATION	0.9999971588360291	WITHOUT_CLASSIFICATION	2.8411639709508893E-6	DEFECT
// everything is fine: autoWidth is on, and an autoIntervalWidth // was set.	WITHOUT_CLASSIFICATION	0.9999963512647424	WITHOUT_CLASSIFICATION	3.64873525752497E-6	DEFECT
// first get the range without the interval, then expand it for the // interval width	WITHOUT_CLASSIFICATION	0.9999994739693243	WITHOUT_CLASSIFICATION	5.260306757721067E-7	DEFECT
// all series have the same number of items in // this dataset	WITHOUT_CLASSIFICATION	0.999991427573082	WITHOUT_CLASSIFICATION	8.572426918004344E-6	DEFECT
// this.x is not allowed to be null...	WITHOUT_CLASSIFICATION	0.9995465284961939	WITHOUT_CLASSIFICATION	4.5347150380620655E-4	DEFECT
// CASE 1 : Comparing to another TimeSeriesDataPair object // -------------------------------------------------------	WITHOUT_CLASSIFICATION	0.999970362621066	WITHOUT_CLASSIFICATION	2.963737893396978E-5	DEFECT
// In version 0.9.12, in response to several developer requests, I changed // the 'data' attribute from 'private' to 'protected', so that others can // make subclasses that work directly with the underlying data structure.	WITHOUT_CLASSIFICATION	0.9999965415562196	WITHOUT_CLASSIFICATION	3.4584437803539994E-6	DEFECT
// figure out if we need to iterate through all the y-values	WITHOUT_CLASSIFICATION	0.999999497358534	WITHOUT_CLASSIFICATION	5.02641465932633E-7	DEFECT
// figure out if we need to iterate through all the y-values	WITHOUT_CLASSIFICATION	0.999999497358534	WITHOUT_CLASSIFICATION	5.02641465932633E-7	DEFECT
// if we get to here, we know that duplicate X values are not permitted	WITHOUT_CLASSIFICATION	0.9999749045484517	WITHOUT_CLASSIFICATION	2.5095451548286168E-5	DEFECT
/*         * we assum super is always initialized to all-zero matrix, so the         * total sum should be 0 upon initialization. However, we set it to         * Double.MIN_VALUE to get the same effect and yet avoid division by 0         * upon initialization.         */	WITHOUT_CLASSIFICATION	0.9999966588668692	WITHOUT_CLASSIFICATION	3.3411331307961747E-6	DEFECT
// add the series...	WITHOUT_CLASSIFICATION	0.9999987062661895	WITHOUT_CLASSIFICATION	1.2937338105472718E-6	DEFECT
// try a class that isn't a listener	WITHOUT_CLASSIFICATION	0.999962046501335	WITHOUT_CLASSIFICATION	3.795349866499896E-5	DEFECT
// set up popup menu...	WITHOUT_CLASSIFICATION	0.9999977950701324	WITHOUT_CLASSIFICATION	2.2049298676190196E-6	DEFECT
// stop listening for changes to the existing chart	WITHOUT_CLASSIFICATION	0.9999999124952944	WITHOUT_CLASSIFICATION	8.750470556123993E-8	DEFECT
// add the new chart	WITHOUT_CLASSIFICATION	0.9999995372458562	WITHOUT_CLASSIFICATION	4.627541438154095E-7	DEFECT
// work out if scaling is required...	WITHOUT_CLASSIFICATION	0.9999973149739653	WITHOUT_CLASSIFICATION	2.685026034721071E-6	DEFECT
// are we using the chart buffer?	WITHOUT_CLASSIFICATION	0.9999852234232351	WITHOUT_CLASSIFICATION	1.477657676483124E-5	DEFECT
// does nothing - override if necessary	WITHOUT_CLASSIFICATION	0.9999909672478351	WITHOUT_CLASSIFICATION	9.032752164848119E-6	DEFECT
// selected rectangle shouldn't extend outside the data area...	WITHOUT_CLASSIFICATION	0.9999995716676898	WITHOUT_CLASSIFICATION	4.2833231019245985E-7	DEFECT
// we need to guard against this.zoomPoint being null	WITHOUT_CLASSIFICATION	0.9999883313022561	WITHOUT_CLASSIFICATION	1.1668697743880825E-5	DEFECT
// we need to guard against this.zoomPoint being null	WITHOUT_CLASSIFICATION	0.9999883313022561	WITHOUT_CLASSIFICATION	1.1668697743880825E-5	DEFECT
// force a redraw	WITHOUT_CLASSIFICATION	0.9999989907093347	WITHOUT_CLASSIFICATION	1.009290665278222E-6	DEFECT
// it is too slow to look at every data item, so let's just look at // the first, middle and last items...	WITHOUT_CLASSIFICATION	0.9999991541355033	WITHOUT_CLASSIFICATION	8.458644965690869E-7	DEFECT
// fetch the series, remove the change listener, then remove the series.	WITHOUT_CLASSIFICATION	0.9999992015436135	WITHOUT_CLASSIFICATION	7.984563865238953E-7	DEFECT
// Unregister the collection as a change listener to each series in // the collection.	WITHOUT_CLASSIFICATION	0.9999977403535081	WITHOUT_CLASSIFICATION	2.2596464919493415E-6	DEFECT
// Unregister the collection as a change listener to each series in // the collection.	WITHOUT_CLASSIFICATION	0.9999977403535081	WITHOUT_CLASSIFICATION	2.2596464919493415E-6	DEFECT
// check that minItem limit is observed	WITHOUT_CLASSIFICATION	0.9999976420254394	WITHOUT_CLASSIFICATION	2.357974560565834E-6	DEFECT
//assert itemIndex >= 0 && itemIndex < getItemCount();	WITHOUT_CLASSIFICATION	0.999996714781179	WITHOUT_CLASSIFICATION	3.2852188209396556E-6	DEFECT
//assert itemIndex >= 0 && itemIndex < getItemCount();	WITHOUT_CLASSIFICATION	0.999996714781179	WITHOUT_CLASSIFICATION	3.2852188209396556E-6	DEFECT
//TODO private boolean fillZoomRectangle = true;	WITHOUT_CLASSIFICATION	0.9899913250733199	WITHOUT_CLASSIFICATION	0.010008674926680094	DEFECT
// create the canvas and add the required listeners	WITHOUT_CLASSIFICATION	0.9999997304909833	WITHOUT_CLASSIFICATION	2.69509016698352E-7	DEFECT
//ChartEditorManager.getChartEditor(canvas.getDisplay(), this.chart);	WITHOUT_CLASSIFICATION	0.9999873392438956	WITHOUT_CLASSIFICATION	1.2660756104413774E-5	DEFECT
/* in the next zoomPoint.x and y replace by e.x and y for now.         * this helps to handle the mouse events and besides,         * those values are unused AFAIK. */	WITHOUT_CLASSIFICATION	0.9999991903343108	WITHOUT_CLASSIFICATION	8.09665689178986E-7	DEFECT
// do nothing, override if necessary	WITHOUT_CLASSIFICATION	0.9999991837424936	WITHOUT_CLASSIFICATION	8.162575064485357E-7	DEFECT
// new entity code	WITHOUT_CLASSIFICATION	0.9999972276883758	WITHOUT_CLASSIFICATION	2.7723116241080894E-6	DEFECT
// new entity code	WITHOUT_CLASSIFICATION	0.9999972276883758	WITHOUT_CLASSIFICATION	2.7723116241080894E-6	DEFECT
// pass mouse down event if some ChartMouseListener are listening	WITHOUT_CLASSIFICATION	0.9999979649124988	WITHOUT_CLASSIFICATION	2.0350875011629137E-6	DEFECT
// if the box has been drawn backwards, restore the auto bounds	WITHOUT_CLASSIFICATION	0.9999992660352119	WITHOUT_CLASSIFICATION	7.339647880750936E-7	DEFECT
// handle axis trace	WITHOUT_CLASSIFICATION	0.9999960840009152	WITHOUT_CLASSIFICATION	3.915999084754053E-6	DEFECT
// handle tool tips in a simple way	WITHOUT_CLASSIFICATION	0.9999880587945721	WITHOUT_CLASSIFICATION	1.1941205427894847E-5	DEFECT
// handle zoom box	WITHOUT_CLASSIFICATION	0.999992520673636	WITHOUT_CLASSIFICATION	7.4793263639804895E-6	DEFECT
// skip if chart is null	WITHOUT_CLASSIFICATION	0.9999982506713997	WITHOUT_CLASSIFICATION	1.7493286002686646E-6	DEFECT
//axisLabelPaint;	WITHOUT_CLASSIFICATION	0.9999922555746349	WITHOUT_CLASSIFICATION	7.744425365150704E-6	DEFECT
// get the origin of the zoom selection in the Java2D space used for // drawing the chart (that is, before any scaling to fit the panel)	WITHOUT_CLASSIFICATION	0.9999999974373344	WITHOUT_CLASSIFICATION	2.562665679470047E-9	DEFECT
// go through each zoom menu item and decide whether or not to // enable it...	WITHOUT_CLASSIFICATION	0.9999999506362303	WITHOUT_CLASSIFICATION	4.936376965305477E-8	DEFECT
// create the chart...	WITHOUT_CLASSIFICATION	0.9999997467444173	WITHOUT_CLASSIFICATION	2.532555826873508E-7	DEFECT
// title // x-axis label // y-axis label // data // create legend? // generate tooltips? // generate URLs?	WITHOUT_CLASSIFICATION	0.9999980157058403	WITHOUT_CLASSIFICATION	1.9842941596438923E-6	DEFECT
// check that minItem limit is observed	WITHOUT_CLASSIFICATION	0.9999976420254394	WITHOUT_CLASSIFICATION	2.357974560565834E-6	DEFECT
//SwtGraphics2D sg2 = new SwtGraphics2D(e.gc);	WITHOUT_CLASSIFICATION	0.9999969527596939	WITHOUT_CLASSIFICATION	3.0472403061144203E-6	DEFECT
// do we need to fill the buffer?	WITHOUT_CLASSIFICATION	0.9998799915585814	WITHOUT_CLASSIFICATION	1.200084414185437E-4	DEFECT
// Performs the actual drawing here ...	WITHOUT_CLASSIFICATION	0.99998066841213	WITHOUT_CLASSIFICATION	1.9331587870109517E-5	DEFECT
// anti-aliasing	WITHOUT_CLASSIFICATION	0.9999989793898904	WITHOUT_CLASSIFICATION	1.0206101095491653E-6	DEFECT
// zap the buffer onto the canvas...	WITHOUT_CLASSIFICATION	0.9999992158512608	WITHOUT_CLASSIFICATION	7.84148739221732E-7	DEFECT
// or redrawing the chart every time...	WITHOUT_CLASSIFICATION	0.9999993831746705	WITHOUT_CLASSIFICATION	6.168253294838214E-7	DEFECT
// de-register the composite as a listener for the chart.	WITHOUT_CLASSIFICATION	0.9999997675787973	WITHOUT_CLASSIFICATION	2.324212027142575E-7	DEFECT
// AXIS 2	WITHOUT_CLASSIFICATION	0.9999852975038043	WITHOUT_CLASSIFICATION	1.470249619574115E-5	DEFECT
// AXIS 3	WITHOUT_CLASSIFICATION	0.999985348461575	WITHOUT_CLASSIFICATION	1.4651538424808782E-5	DEFECT
//axis3.setPositiveArrowVisible(true);	WITHOUT_CLASSIFICATION	0.999995325481587	WITHOUT_CLASSIFICATION	4.674518413026877E-6	DEFECT
// AXIS 4	WITHOUT_CLASSIFICATION	0.9999812683731447	WITHOUT_CLASSIFICATION	1.87316268552386E-5	DEFECT
// column keys...	WITHOUT_CLASSIFICATION	0.9999963760877787	WITHOUT_CLASSIFICATION	3.6239122213467515E-6	DEFECT
// create the dataset...	WITHOUT_CLASSIFICATION	0.9999997689326134	WITHOUT_CLASSIFICATION	2.3106738664993729E-7	DEFECT
// NOW DO SOME OPTIONAL CUSTOMISATION OF THE CHART...	WITHOUT_CLASSIFICATION	0.998331084171966	WITHOUT_CLASSIFICATION	0.0016689158280340682	DEFECT
// get a reference to the plot for further customisation...	WITHOUT_CLASSIFICATION	0.999999869813026	WITHOUT_CLASSIFICATION	1.3018697400993004E-7	DEFECT
// set the range axis to display integers only...	WITHOUT_CLASSIFICATION	0.9999967277676942	WITHOUT_CLASSIFICATION	3.272232305718505E-6	DEFECT
// disable bar outlines...	WITHOUT_CLASSIFICATION	0.9999986944725239	WITHOUT_CLASSIFICATION	1.3055274761947663E-6	DEFECT
// OPTIONAL CUSTOMISATION COMPLETED.	WITHOUT_CLASSIFICATION	0.9999156589311249	WITHOUT_CLASSIFICATION	8.434106887505892E-5	DEFECT
// chart title // data // include legend	WITHOUT_CLASSIFICATION	0.9999993425336576	WITHOUT_CLASSIFICATION	6.574663423374045E-7	DEFECT
//frame.setDisplayToolTips(false);	WITHOUT_CLASSIFICATION	0.9999824412508106	WITHOUT_CLASSIFICATION	1.7558749189444705E-5	DEFECT
// row 1: antialiasing	WITHOUT_CLASSIFICATION	0.9999931934171399	WITHOUT_CLASSIFICATION	6.8065828600671005E-6	DEFECT
//row 2: background paint for the chart	WITHOUT_CLASSIFICATION	0.9999993660647613	WITHOUT_CLASSIFICATION	6.339352388459767E-7	DEFECT
// row 1	WITHOUT_CLASSIFICATION	0.9999969111265296	WITHOUT_CLASSIFICATION	3.0888734704116714E-6	DEFECT
//empty cell // row 2	WITHOUT_CLASSIFICATION	0.9999924099513735	WITHOUT_CLASSIFICATION	7.590048626535777E-6	DEFECT
// Create the color-change dialog	WITHOUT_CLASSIFICATION	0.9999992413056046	WITHOUT_CLASSIFICATION	7.586943954919247E-7	DEFECT
// Dispose of any fonts we have created	WITHOUT_CLASSIFICATION	0.9999980948028898	WITHOUT_CLASSIFICATION	1.9051971101427476E-6	DEFECT
// build second tab	WITHOUT_CLASSIFICATION	0.9999993828529156	WITHOUT_CLASSIFICATION	6.171470845219879E-7	DEFECT
// don't need to do anything	WITHOUT_CLASSIFICATION	0.9999610091470453	WITHOUT_CLASSIFICATION	3.899085295468364E-5	DEFECT
// set the plot properties...	WITHOUT_CLASSIFICATION	0.9999992825614008	WITHOUT_CLASSIFICATION	7.174385991347013E-7	DEFECT
// row 1	WITHOUT_CLASSIFICATION	0.9999969111265296	WITHOUT_CLASSIFICATION	3.0888734704116714E-6	DEFECT
// Create the color-change dialog	WITHOUT_CLASSIFICATION	0.9999992413056046	WITHOUT_CLASSIFICATION	7.586943954919247E-7	DEFECT
// Create the color-change dialog	WITHOUT_CLASSIFICATION	0.9999992413056046	WITHOUT_CLASSIFICATION	7.586943954919247E-7	DEFECT
// Dispose of any fonts we have created	WITHOUT_CLASSIFICATION	0.9999980948028898	WITHOUT_CLASSIFICATION	1.9051971101427476E-6	DEFECT
// check a regular value	WITHOUT_CLASSIFICATION	0.9999972773824576	WITHOUT_CLASSIFICATION	2.722617542392827E-6	DEFECT
// Create the new font and set it into the title // label	WITHOUT_CLASSIFICATION	0.9999999452079261	WITHOUT_CLASSIFICATION	5.4792073799618516E-8	DEFECT
// Create the new font and set it into the title // label	WITHOUT_CLASSIFICATION	0.9999999452079261	WITHOUT_CLASSIFICATION	5.4792073799618516E-8	DEFECT
//label.setFont(font);	WITHOUT_CLASSIFICATION	0.9999898366062728	WITHOUT_CLASSIFICATION	1.0163393727120677E-5	DEFECT
// row 3	WITHOUT_CLASSIFICATION	0.9999970343224869	WITHOUT_CLASSIFICATION	2.9656775130894576E-6	DEFECT
// row 3	WITHOUT_CLASSIFICATION	0.9999970343224869	WITHOUT_CLASSIFICATION	2.9656775130894576E-6	DEFECT
// Use a colored text field to show the color	WITHOUT_CLASSIFICATION	0.9999992839367476	WITHOUT_CLASSIFICATION	7.160632523422698E-7	DEFECT
//tickLabelFontField.setFont(SwtUtils.toSwtFontData(getDisplay(), // axis.getTickLabelFont()));	WITHOUT_CLASSIFICATION	0.9999987202219904	WITHOUT_CLASSIFICATION	1.279778009587112E-6	DEFECT
// Create the font-change dialog	WITHOUT_CLASSIFICATION	0.9999995971027984	WITHOUT_CLASSIFICATION	4.028972015882878E-7	DEFECT
// Create the font-change dialog	WITHOUT_CLASSIFICATION	0.9999995971027984	WITHOUT_CLASSIFICATION	4.028972015882878E-7	DEFECT
//tickLabelFontField.setFont(font);	WITHOUT_CLASSIFICATION	0.9999964628737363	WITHOUT_CLASSIFICATION	3.537126263545162E-6	DEFECT
// return the appropriate axis editor	WITHOUT_CLASSIFICATION	0.9999956897673049	WITHOUT_CLASSIFICATION	4.310232695116439E-6	DEFECT
//this.minimumRangeValue.addModifyListener(this); //this.minimumRangeValue.addVerifyListener(this);	WITHOUT_CLASSIFICATION	0.9999551681122102	WITHOUT_CLASSIFICATION	4.483188778974161E-5	DEFECT
//this.maximumRangeValue.addModifyListener(this); //this.maximumRangeValue.addVerifyListener(this);	WITHOUT_CLASSIFICATION	0.9999410606685102	WITHOUT_CLASSIFICATION	5.8939331489843515E-5	DEFECT
// verify min value	WITHOUT_CLASSIFICATION	0.9999802443203527	WITHOUT_CLASSIFICATION	1.9755679647389434E-5	DEFECT
// verify max value	WITHOUT_CLASSIFICATION	0.9999809982894802	WITHOUT_CLASSIFICATION	1.9001710519868323E-5	DEFECT
//deal with domain axis	WITHOUT_CLASSIFICATION	0.9999134779907781	WITHOUT_CLASSIFICATION	8.652200922179146E-5	DEFECT
//deal with range axis	WITHOUT_CLASSIFICATION	0.9999801712956912	WITHOUT_CLASSIFICATION	1.9828704308833217E-5	DEFECT
//deal with plot appearance	WITHOUT_CLASSIFICATION	0.9999590643711731	WITHOUT_CLASSIFICATION	4.093562882680238E-5	DEFECT
// set the axis properties	WITHOUT_CLASSIFICATION	0.9999983747913955	WITHOUT_CLASSIFICATION	1.6252086043665294E-6	DEFECT
// row 1: stroke	WITHOUT_CLASSIFICATION	0.9999922207467404	WITHOUT_CLASSIFICATION	7.779253259504747E-6	DEFECT
// row 3: background paint	WITHOUT_CLASSIFICATION	0.9999970196989367	WITHOUT_CLASSIFICATION	2.980301063229806E-6	DEFECT
// row 4: orientation	WITHOUT_CLASSIFICATION	0.9999584226072522	WITHOUT_CLASSIFICATION	4.157739274775583E-5	DEFECT
// row 2	WITHOUT_CLASSIFICATION	0.9999970239500883	WITHOUT_CLASSIFICATION	2.9760499117076845E-6	DEFECT
//titleField.setFont(font);	WITHOUT_CLASSIFICATION	0.9999922910077632	WITHOUT_CLASSIFICATION	7.708992236874803E-6	DEFECT
// row 4	WITHOUT_CLASSIFICATION	0.9999962083693237	WITHOUT_CLASSIFICATION	3.791630676434896E-6	DEFECT
// build first tab	WITHOUT_CLASSIFICATION	0.9999988920072259	WITHOUT_CLASSIFICATION	1.1079927740694104E-6	DEFECT
// we can't do anything	WITHOUT_CLASSIFICATION	0.9998289707101533	WITHOUT_CLASSIFICATION	1.710292898466184E-4	DEFECT
// backgroundImage	WITHOUT_CLASSIFICATION	0.9999984460351139	WITHOUT_CLASSIFICATION	1.5539648860776786E-6	DEFECT
// row keys...	WITHOUT_CLASSIFICATION	0.9999958996012179	WITHOUT_CLASSIFICATION	4.10039878202011E-6	DEFECT
// column keys...	WITHOUT_CLASSIFICATION	0.9999963760877787	WITHOUT_CLASSIFICATION	3.6239122213467515E-6	DEFECT
// since this is only used by clearRect(), we don't update the GC yet	WITHOUT_CLASSIFICATION	0.999999697326861	WITHOUT_CLASSIFICATION	3.0267313897555495E-7	DEFECT
// build the third tab	WITHOUT_CLASSIFICATION	0.9999925969540497	WITHOUT_CLASSIFICATION	7.40304595030159E-6	DEFECT
// ok and cancel buttons	WITHOUT_CLASSIFICATION	0.9999982544844345	WITHOUT_CLASSIFICATION	1.74551556558282E-6	DEFECT
// to be consistent with other Graphics2D implementations	WITHOUT_CLASSIFICATION	0.9999994859041778	WITHOUT_CLASSIFICATION	5.140958223385424E-7	DEFECT
// padding	WITHOUT_CLASSIFICATION	0.9999927878590255	WITHOUT_CLASSIFICATION	7.212140974665563E-6	DEFECT
// apply dash style if any	WITHOUT_CLASSIFICATION	0.9999949633255474	WITHOUT_CLASSIFICATION	5.036674452716167E-6	DEFECT
// handle transparency and compositing.	WITHOUT_CLASSIFICATION	0.9999987460610089	WITHOUT_CLASSIFICATION	1.2539389910865545E-6	DEFECT
// we can't use the following valueOf() method, because it // won't compile with JDK1.4 // this.colorsPool.get(Integer.valueOf(awtColor.getRGB()));	WITHOUT_CLASSIFICATION	0.9995630922637766	WITHOUT_CLASSIFICATION	4.369077362233248E-4	DEFECT
// set the line style to solid by default	WITHOUT_CLASSIFICATION	0.9999997004911155	WITHOUT_CLASSIFICATION	2.99508884519341E-7	DEFECT
// retrieve the swt font description in an os indept way	WITHOUT_CLASSIFICATION	0.9999953100913608	WITHOUT_CLASSIFICATION	4.68990863921081E-6	DEFECT
// Note that for consistency with the AWT implementation, it is // necessary to switch temporarily the foreground and background // colours	WITHOUT_CLASSIFICATION	0.9999999932073861	WITHOUT_CLASSIFICATION	6.792613896081887E-9	DEFECT
// for now we simply want to extract the chars from the iterator // and call an unstyled text renderer	WITHOUT_CLASSIFICATION	0.999999970565722	WITHOUT_CLASSIFICATION	2.943427809958325E-8	DEFECT
// create a new awt font with the appropiate data	WITHOUT_CLASSIFICATION	0.999999153965181	WITHOUT_CLASSIFICATION	8.460348190629772E-7	DEFECT
// we dispose resources we own but user must dispose gc	WITHOUT_CLASSIFICATION	0.9999978233796601	WITHOUT_CLASSIFICATION	2.176620339873899E-6	DEFECT
// see comment above //this.colorsPool.put(Integer.valueOf(awtColor.getRGB()), swtColor);	WITHOUT_CLASSIFICATION	0.9999454018610558	WITHOUT_CLASSIFICATION	5.4598138944234524E-5	DEFECT
// SWT and AWT share the same style constants.	WITHOUT_CLASSIFICATION	0.999999291704138	WITHOUT_CLASSIFICATION	7.082958620091029E-7	DEFECT
// convert the font size (in pt for awt) to height in pixels for swt	WITHOUT_CLASSIFICATION	0.9999986659612033	WITHOUT_CLASSIFICATION	1.3340387966023935E-6	DEFECT
//this.myColor = new Color(getDisplay(), color.getRGB());	WITHOUT_CLASSIFICATION	0.9999894428188772	WITHOUT_CLASSIFICATION	1.0557181122742244E-5	DEFECT
// renderingHints	WITHOUT_CLASSIFICATION	0.9999983934095033	WITHOUT_CLASSIFICATION	1.606590496716625E-6	DEFECT
// borderStroke	WITHOUT_CLASSIFICATION	0.9999874120812918	WITHOUT_CLASSIFICATION	1.25879187082459E-5	DEFECT
// borderVisible	WITHOUT_CLASSIFICATION	0.9999955819339806	WITHOUT_CLASSIFICATION	4.4180660193861655E-6	DEFECT
// borderPaint	WITHOUT_CLASSIFICATION	0.9999963147624057	WITHOUT_CLASSIFICATION	3.6852375942831857E-6	DEFECT
// title	WITHOUT_CLASSIFICATION	0.9999971904781921	WITHOUT_CLASSIFICATION	2.809521807816261E-6	DEFECT
// subtitles	WITHOUT_CLASSIFICATION	0.9999995092379105	WITHOUT_CLASSIFICATION	4.907620895769762E-7	DEFECT
// plot	WITHOUT_CLASSIFICATION	0.9999970964525958	WITHOUT_CLASSIFICATION	2.90354740415744E-6	DEFECT
// backgroundPaint	WITHOUT_CLASSIFICATION	0.9999993363842294	WITHOUT_CLASSIFICATION	6.636157705204189E-7	DEFECT
// backgroundImageAlignment	WITHOUT_CLASSIFICATION	0.9999988502486752	WITHOUT_CLASSIFICATION	1.149751324835361E-6	DEFECT
// backgroundImageAlpha	WITHOUT_CLASSIFICATION	0.999998429558119	WITHOUT_CLASSIFICATION	1.5704418810788014E-6	DEFECT
// no event is generated if the dataset is already empty	WITHOUT_CLASSIFICATION	0.9999993043137512	WITHOUT_CLASSIFICATION	6.956862488799749E-7	DEFECT
// create the chart...	WITHOUT_CLASSIFICATION	0.9999997467444173	WITHOUT_CLASSIFICATION	2.532555826873508E-7	DEFECT
// create the chart...	WITHOUT_CLASSIFICATION	0.9999997467444173	WITHOUT_CLASSIFICATION	2.532555826873508E-7	DEFECT
// try a Double.POSITIVE_INFINITY	WITHOUT_CLASSIFICATION	0.9999807299775147	WITHOUT_CLASSIFICATION	1.9270022485263306E-5	DEFECT
// adding something to the returned list should NOT change the chart	WITHOUT_CLASSIFICATION	0.9999970633287699	WITHOUT_CLASSIFICATION	2.936671230133438E-6	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999872438634059	WITHOUT_CLASSIFICATION	1.2756136594073208E-5	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.9999993838071033	WITHOUT_CLASSIFICATION	6.161928967699917E-7	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.9999993838071033	WITHOUT_CLASSIFICATION	6.161928967699917E-7	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.9999993838071033	WITHOUT_CLASSIFICATION	6.161928967699917E-7	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.9999993838071033	WITHOUT_CLASSIFICATION	6.161928967699917E-7	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.9999993838071033	WITHOUT_CLASSIFICATION	6.161928967699917E-7	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.9999993838071033	WITHOUT_CLASSIFICATION	6.161928967699917E-7	DEFECT
// fillPaintTransformer	WITHOUT_CLASSIFICATION	0.9999912099820274	WITHOUT_CLASSIFICATION	8.790017972639072E-6	DEFECT
// outlinePaint	WITHOUT_CLASSIFICATION	0.9999991235292298	WITHOUT_CLASSIFICATION	8.764707702539642E-7	DEFECT
// labelFont	WITHOUT_CLASSIFICATION	0.9999972706705306	WITHOUT_CLASSIFICATION	2.7293294693638328E-6	DEFECT
// chart title	WITHOUT_CLASSIFICATION	0.9999998490590764	WITHOUT_CLASSIFICATION	1.5094092356144312E-7	DEFECT
// labelPaint	WITHOUT_CLASSIFICATION	0.9999979491584062	WITHOUT_CLASSIFICATION	2.050841593733493E-6	DEFECT
// linePaint	WITHOUT_CLASSIFICATION	0.9999965507143342	WITHOUT_CLASSIFICATION	3.449285665794995E-6	DEFECT
// fillPaint	WITHOUT_CLASSIFICATION	0.9999962262363506	WITHOUT_CLASSIFICATION	3.773763649248368E-6	DEFECT
// chart title	WITHOUT_CLASSIFICATION	0.9999998490590764	WITHOUT_CLASSIFICATION	1.5094092356144312E-7	DEFECT
// the clone references the same dataset as the original	WITHOUT_CLASSIFICATION	0.9999995017845449	WITHOUT_CLASSIFICATION	4.982154551021181E-7	DEFECT
// chart title	WITHOUT_CLASSIFICATION	0.9999998490590764	WITHOUT_CLASSIFICATION	1.5094092356144312E-7	DEFECT
// chart title	WITHOUT_CLASSIFICATION	0.9999998490590764	WITHOUT_CLASSIFICATION	1.5094092356144312E-7	DEFECT
// chart title	WITHOUT_CLASSIFICATION	0.9999998490590764	WITHOUT_CLASSIFICATION	1.5094092356144312E-7	DEFECT
// data // include legend // tooltips // urls	WITHOUT_CLASSIFICATION	0.9999990756559634	WITHOUT_CLASSIFICATION	9.243440366885667E-7	DEFECT
// include legend	WITHOUT_CLASSIFICATION	0.9999866936580152	WITHOUT_CLASSIFICATION	1.330634198479406E-5	DEFECT
// a null key should throw an IllegalArgumentException	WITHOUT_CLASSIFICATION	0.9998377009867433	WITHOUT_CLASSIFICATION	1.6229901325675328E-4	DEFECT
// a null key should throw an IllegalArgumentException	WITHOUT_CLASSIFICATION	0.9998377009867433	WITHOUT_CLASSIFICATION	1.6229901325675328E-4	DEFECT
// include legend	WITHOUT_CLASSIFICATION	0.9999866936580152	WITHOUT_CLASSIFICATION	1.330634198479406E-5	DEFECT
// include legend	WITHOUT_CLASSIFICATION	0.9999866936580152	WITHOUT_CLASSIFICATION	1.330634198479406E-5	DEFECT
// include legend	WITHOUT_CLASSIFICATION	0.9999866936580152	WITHOUT_CLASSIFICATION	1.330634198479406E-5	DEFECT
// include legend	WITHOUT_CLASSIFICATION	0.9999866936580152	WITHOUT_CLASSIFICATION	1.330634198479406E-5	DEFECT
// include legend	WITHOUT_CLASSIFICATION	0.9999866936580152	WITHOUT_CLASSIFICATION	1.330634198479406E-5	DEFECT
// data	WITHOUT_CLASSIFICATION	0.9999937298992572	WITHOUT_CLASSIFICATION	6.2701007428159314E-6	DEFECT
// data	WITHOUT_CLASSIFICATION	0.9999937298992572	WITHOUT_CLASSIFICATION	6.2701007428159314E-6	DEFECT
// data	WITHOUT_CLASSIFICATION	0.9999937298992572	WITHOUT_CLASSIFICATION	6.2701007428159314E-6	DEFECT
// data	WITHOUT_CLASSIFICATION	0.9999937298992572	WITHOUT_CLASSIFICATION	6.2701007428159314E-6	DEFECT
/* BufferedImage img =*/	WITHOUT_CLASSIFICATION	0.999753868115407	WITHOUT_CLASSIFICATION	2.461318845930357E-4	DEFECT
// try a listener type that isn't registered	WITHOUT_CLASSIFICATION	0.9999801309938935	WITHOUT_CLASSIFICATION	1.9869006106526867E-5	DEFECT
// name	WITHOUT_CLASSIFICATION	0.9999923609583443	WITHOUT_CLASSIFICATION	7.639041655629318E-6	DEFECT
//extraLargeFont	WITHOUT_CLASSIFICATION	0.9999917317218111	WITHOUT_CLASSIFICATION	8.268278188843388E-6	DEFECT
//largeFont	WITHOUT_CLASSIFICATION	0.9999921422553671	WITHOUT_CLASSIFICATION	7.857744632875288E-6	DEFECT
//regularFont;	WITHOUT_CLASSIFICATION	0.9999924108260786	WITHOUT_CLASSIFICATION	7.589173921310868E-6	DEFECT
//titlePaint;	WITHOUT_CLASSIFICATION	0.9999894934093128	WITHOUT_CLASSIFICATION	1.0506590687187872E-5	DEFECT
//subtitlePaint;	WITHOUT_CLASSIFICATION	0.999995195491787	WITHOUT_CLASSIFICATION	4.804508213008791E-6	DEFECT
//chartBackgroundPaint;	WITHOUT_CLASSIFICATION	0.9999955959149304	WITHOUT_CLASSIFICATION	4.40408506970786E-6	DEFECT
//legendBackgroundPaint;	WITHOUT_CLASSIFICATION	0.9999919110949609	WITHOUT_CLASSIFICATION	8.088905039162075E-6	DEFECT
//legendItemPaint;	WITHOUT_CLASSIFICATION	0.9999897402464605	WITHOUT_CLASSIFICATION	1.0259753539432285E-5	DEFECT
//drawingSupplier;	WITHOUT_CLASSIFICATION	0.9999921630040576	WITHOUT_CLASSIFICATION	7.836995942508005E-6	DEFECT
// value 1	WITHOUT_CLASSIFICATION	0.9999944458466651	WITHOUT_CLASSIFICATION	5.554153334961481E-6	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.9999993838071033	WITHOUT_CLASSIFICATION	6.161928967699917E-7	DEFECT
// test independence	WITHOUT_CLASSIFICATION	0.9999974409547533	WITHOUT_CLASSIFICATION	2.5590452467655204E-6	DEFECT
//tickLabelPaint;	WITHOUT_CLASSIFICATION	0.9999924736467025	WITHOUT_CLASSIFICATION	7.526353297448557E-6	DEFECT
//itemLabelPaint;	WITHOUT_CLASSIFICATION	0.9999907821669642	WITHOUT_CLASSIFICATION	9.217833035730852E-6	DEFECT
//shadowVisible;	WITHOUT_CLASSIFICATION	0.999980344596258	WITHOUT_CLASSIFICATION	1.9655403742020154E-5	DEFECT
//shadowPaint;	WITHOUT_CLASSIFICATION	0.9999869169772769	WITHOUT_CLASSIFICATION	1.3083022722962446E-5	DEFECT
//barPainter;	WITHOUT_CLASSIFICATION	0.9999852277984697	WITHOUT_CLASSIFICATION	1.4772201530424058E-5	DEFECT
//xyBarPainter;	WITHOUT_CLASSIFICATION	0.9999723652223474	WITHOUT_CLASSIFICATION	2.763477765258036E-5	DEFECT
//thermometerPaint;	WITHOUT_CLASSIFICATION	0.9999886943598172	WITHOUT_CLASSIFICATION	1.1305640182811938E-5	DEFECT
//wallPaint;	WITHOUT_CLASSIFICATION	0.9999773503754747	WITHOUT_CLASSIFICATION	2.26496245252301E-5	DEFECT
//errorIndicatorPaint;	WITHOUT_CLASSIFICATION	0.9999145954494938	WITHOUT_CLASSIFICATION	8.54045505062601E-5	DEFECT
//gridBandAlternatePaint	WITHOUT_CLASSIFICATION	0.9999744391553747	WITHOUT_CLASSIFICATION	2.556084462534009E-5	DEFECT
//private double angle;	WITHOUT_CLASSIFICATION	0.9999728165423653	WITHOUT_CLASSIFICATION	2.7183457634717926E-5	DEFECT
//private double tipRadius;	WITHOUT_CLASSIFICATION	0.9999936001182892	WITHOUT_CLASSIFICATION	6.399881710807493E-6	DEFECT
//private double tipRadius;	WITHOUT_CLASSIFICATION	0.9999936001182892	WITHOUT_CLASSIFICATION	6.399881710807493E-6	DEFECT
//private double baseRadius;	WITHOUT_CLASSIFICATION	0.999995659585229	WITHOUT_CLASSIFICATION	4.340414771017992E-6	DEFECT
//private double arrowLength;	WITHOUT_CLASSIFICATION	0.9999726329550649	WITHOUT_CLASSIFICATION	2.7367044935091327E-5	DEFECT
//private double arrowLength;	WITHOUT_CLASSIFICATION	0.9999726329550649	WITHOUT_CLASSIFICATION	2.7367044935091327E-5	DEFECT
//private double arrowWidth;	WITHOUT_CLASSIFICATION	0.9999749198857787	WITHOUT_CLASSIFICATION	2.5080114221272957E-5	DEFECT
//private Stroke arrowStroke;	WITHOUT_CLASSIFICATION	0.9998866438177595	WITHOUT_CLASSIFICATION	1.1335618224050898E-4	DEFECT
//private Stroke arrowStroke;	WITHOUT_CLASSIFICATION	0.9998866438177595	WITHOUT_CLASSIFICATION	1.1335618224050898E-4	DEFECT
//private Paint arrowPaint;	WITHOUT_CLASSIFICATION	0.9999623157497703	WITHOUT_CLASSIFICATION	3.768425022962738E-5	DEFECT
//private Paint arrowPaint;	WITHOUT_CLASSIFICATION	0.9999623157497703	WITHOUT_CLASSIFICATION	3.768425022962738E-5	DEFECT
//private double labelOffset;	WITHOUT_CLASSIFICATION	0.9999931929427087	WITHOUT_CLASSIFICATION	6.807057291291268E-6	DEFECT
// text	WITHOUT_CLASSIFICATION	0.9999955179791374	WITHOUT_CLASSIFICATION	4.482020862490882E-6	DEFECT
// text	WITHOUT_CLASSIFICATION	0.9999955179791374	WITHOUT_CLASSIFICATION	4.482020862490882E-6	DEFECT
// x	WITHOUT_CLASSIFICATION	0.9999893001202034	WITHOUT_CLASSIFICATION	1.0699879796598567E-5	DEFECT
// y	WITHOUT_CLASSIFICATION	0.9999905092569551	WITHOUT_CLASSIFICATION	9.490743044845414E-6	DEFECT
// font	WITHOUT_CLASSIFICATION	0.9999952431790771	WITHOUT_CLASSIFICATION	4.756820922919306E-6	DEFECT
// paint	WITHOUT_CLASSIFICATION	0.9999955860788465	WITHOUT_CLASSIFICATION	4.413921153470166E-6	DEFECT
// paint	WITHOUT_CLASSIFICATION	0.9999955860788465	WITHOUT_CLASSIFICATION	4.413921153470166E-6	DEFECT
// rotation anchor	WITHOUT_CLASSIFICATION	0.9999937207582875	WITHOUT_CLASSIFICATION	6.279241712538376E-6	DEFECT
// rotation angle	WITHOUT_CLASSIFICATION	0.9999953602666304	WITHOUT_CLASSIFICATION	4.639733369680313E-6	DEFECT
// text anchor	WITHOUT_CLASSIFICATION	0.9999967430944228	WITHOUT_CLASSIFICATION	3.256905577352265E-6	DEFECT
// textAnchor	WITHOUT_CLASSIFICATION	0.9999973853408188	WITHOUT_CLASSIFICATION	2.6146591811593584E-6	DEFECT
// rotationAnchor	WITHOUT_CLASSIFICATION	0.9999969686065614	WITHOUT_CLASSIFICATION	3.031393438550437E-6	DEFECT
// rotationAngle	WITHOUT_CLASSIFICATION	0.9999980261418716	WITHOUT_CLASSIFICATION	1.973858128496372E-6	DEFECT
// category 1	WITHOUT_CLASSIFICATION	0.999998109519114	WITHOUT_CLASSIFICATION	1.890480885954789E-6	DEFECT
// category 2	WITHOUT_CLASSIFICATION	0.999998177850742	WITHOUT_CLASSIFICATION	1.8221492580557863E-6	DEFECT
// value 2	WITHOUT_CLASSIFICATION	0.9999946586024129	WITHOUT_CLASSIFICATION	5.341397587100494E-6	DEFECT
// stroke	WITHOUT_CLASSIFICATION	0.9999981374337199	WITHOUT_CLASSIFICATION	1.862566280029E-6	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9998503999155552	WITHOUT_CLASSIFICATION	1.4960008444476604E-4	DEFECT
// outlinePaint	WITHOUT_CLASSIFICATION	0.9999991235292298	WITHOUT_CLASSIFICATION	8.764707702539642E-7	DEFECT
// stroke	WITHOUT_CLASSIFICATION	0.9999981374337199	WITHOUT_CLASSIFICATION	1.862566280029E-6	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9998503999155552	WITHOUT_CLASSIFICATION	1.4960008444476604E-4	DEFECT
// category	WITHOUT_CLASSIFICATION	0.9999984980943042	WITHOUT_CLASSIFICATION	1.501905695812117E-6	DEFECT
// categoryAnchor	WITHOUT_CLASSIFICATION	0.9999986656893617	WITHOUT_CLASSIFICATION	1.3343106383493006E-6	DEFECT
// value	WITHOUT_CLASSIFICATION	0.9999927617274049	WITHOUT_CLASSIFICATION	7.238272595040949E-6	DEFECT
// x0	WITHOUT_CLASSIFICATION	0.9999895763571275	WITHOUT_CLASSIFICATION	1.042364287261032E-5	DEFECT
// tickUnit	WITHOUT_CLASSIFICATION	0.9999959069444817	WITHOUT_CLASSIFICATION	4.0930555182903456E-6	DEFECT
// tickMarkPosition	WITHOUT_CLASSIFICATION	0.9999967038592942	WITHOUT_CLASSIFICATION	3.2961407058210238E-6	DEFECT
// timeline	WITHOUT_CLASSIFICATION	0.9999944972416372	WITHOUT_CLASSIFICATION	5.502758362797182E-6	DEFECT
// range	WITHOUT_CLASSIFICATION	0.9999957055785421	WITHOUT_CLASSIFICATION	4.294421457948475E-6	DEFECT
// check that setting the min date to something on or after the // current min date works...	WITHOUT_CLASSIFICATION	0.9999826746488627	WITHOUT_CLASSIFICATION	1.7325351137387797E-5	DEFECT
// five dates to check...	WITHOUT_CLASSIFICATION	0.9999903172865104	WITHOUT_CLASSIFICATION	9.68271348957662E-6	DEFECT
// START: check d0 and d1	WITHOUT_CLASSIFICATION	0.9999588332680439	WITHOUT_CLASSIFICATION	4.116673195605328E-5	DEFECT
// START: check d0 and d1	WITHOUT_CLASSIFICATION	0.9999588332680439	WITHOUT_CLASSIFICATION	4.116673195605328E-5	DEFECT
// START: check d0 and d1	WITHOUT_CLASSIFICATION	0.9999588332680439	WITHOUT_CLASSIFICATION	4.116673195605328E-5	DEFECT
// START: check d0 and d1	WITHOUT_CLASSIFICATION	0.9999588332680439	WITHOUT_CLASSIFICATION	4.116673195605328E-5	DEFECT
// START: check d0 and d1	WITHOUT_CLASSIFICATION	0.9999588332680439	WITHOUT_CLASSIFICATION	4.116673195605328E-5	DEFECT
// START: check d0 and d1	WITHOUT_CLASSIFICATION	0.9999588332680439	WITHOUT_CLASSIFICATION	4.116673195605328E-5	DEFECT
// START: check d0 and d1	WITHOUT_CLASSIFICATION	0.9999588332680439	WITHOUT_CLASSIFICATION	4.116673195605328E-5	DEFECT
// START: check d0 and d1	WITHOUT_CLASSIFICATION	0.9999588332680439	WITHOUT_CLASSIFICATION	4.116673195605328E-5	DEFECT
// MIDDLE: check d1, d2 and d3	WITHOUT_CLASSIFICATION	0.9999400396554604	WITHOUT_CLASSIFICATION	5.996034453954632E-5	DEFECT
// MIDDLE: check d1, d2 and d3	WITHOUT_CLASSIFICATION	0.9999400396554604	WITHOUT_CLASSIFICATION	5.996034453954632E-5	DEFECT
// MIDDLE: check d1, d2 and d3	WITHOUT_CLASSIFICATION	0.9999400396554604	WITHOUT_CLASSIFICATION	5.996034453954632E-5	DEFECT
// MIDDLE: check d1, d2 and d3	WITHOUT_CLASSIFICATION	0.9999400396554604	WITHOUT_CLASSIFICATION	5.996034453954632E-5	DEFECT
// MIDDLE: check d1, d2 and d3	WITHOUT_CLASSIFICATION	0.9999400396554604	WITHOUT_CLASSIFICATION	5.996034453954632E-5	DEFECT
// MIDDLE: check d1, d2 and d3	WITHOUT_CLASSIFICATION	0.9999400396554604	WITHOUT_CLASSIFICATION	5.996034453954632E-5	DEFECT
// MIDDLE: check d1, d2 and d3	WITHOUT_CLASSIFICATION	0.9999400396554604	WITHOUT_CLASSIFICATION	5.996034453954632E-5	DEFECT
// MIDDLE: check d1, d2 and d3	WITHOUT_CLASSIFICATION	0.9999400396554604	WITHOUT_CLASSIFICATION	5.996034453954632E-5	DEFECT
// END: check d3 and d4	WITHOUT_CLASSIFICATION	0.9998821547533429	WITHOUT_CLASSIFICATION	1.17845246657229E-4	DEFECT
// END: check d3 and d4	WITHOUT_CLASSIFICATION	0.9998821547533429	WITHOUT_CLASSIFICATION	1.17845246657229E-4	DEFECT
// END: check d3 and d4	WITHOUT_CLASSIFICATION	0.9998821547533429	WITHOUT_CLASSIFICATION	1.17845246657229E-4	DEFECT
// END: check d3 and d4	WITHOUT_CLASSIFICATION	0.9998821547533429	WITHOUT_CLASSIFICATION	1.17845246657229E-4	DEFECT
// END: check d3 and d4	WITHOUT_CLASSIFICATION	0.9998821547533429	WITHOUT_CLASSIFICATION	1.17845246657229E-4	DEFECT
// END: check d3 and d4	WITHOUT_CLASSIFICATION	0.9998821547533429	WITHOUT_CLASSIFICATION	1.17845246657229E-4	DEFECT
// END: check d3 and d4	WITHOUT_CLASSIFICATION	0.9998821547533429	WITHOUT_CLASSIFICATION	1.17845246657229E-4	DEFECT
// END: check d3 and d4	WITHOUT_CLASSIFICATION	0.9998821547533429	WITHOUT_CLASSIFICATION	1.17845246657229E-4	DEFECT
// START: check d0	WITHOUT_CLASSIFICATION	0.9999786295337814	WITHOUT_CLASSIFICATION	2.1370466218650143E-5	DEFECT
// START: check d0	WITHOUT_CLASSIFICATION	0.9999786295337814	WITHOUT_CLASSIFICATION	2.1370466218650143E-5	DEFECT
// END: check d0	WITHOUT_CLASSIFICATION	0.9999495039235322	WITHOUT_CLASSIFICATION	5.0496076467787376E-5	DEFECT
// MIDDLE: check d0	WITHOUT_CLASSIFICATION	0.9999490461406111	WITHOUT_CLASSIFICATION	5.095385938894172E-5	DEFECT
// MIDDLE: check d0	WITHOUT_CLASSIFICATION	0.9999490461406111	WITHOUT_CLASSIFICATION	5.095385938894172E-5	DEFECT
// END: check d0	WITHOUT_CLASSIFICATION	0.9999495039235322	WITHOUT_CLASSIFICATION	5.0496076467787376E-5	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999872438634059	WITHOUT_CLASSIFICATION	1.2756136594073208E-5	DEFECT
// test independence	WITHOUT_CLASSIFICATION	0.9999974409547533	WITHOUT_CLASSIFICATION	2.5590452467655204E-6	DEFECT
// now repeat for a vertical axis	WITHOUT_CLASSIFICATION	0.999998733120369	WITHOUT_CLASSIFICATION	1.2668796309982414E-6	DEFECT
// set start and end date	WITHOUT_CLASSIFICATION	0.9999986204858352	WITHOUT_CLASSIFICATION	1.379514164784658E-6	DEFECT
// if the bug is still present, this leads to an endless loop	WITHOUT_CLASSIFICATION	0.9997641986402375	WITHOUT_CLASSIFICATION	2.3580135976247591E-4	DEFECT
//private boolean autoRangeIncludesZero;	WITHOUT_CLASSIFICATION	0.9999930579128752	WITHOUT_CLASSIFICATION	6.942087124775987E-6	DEFECT
//private NumberTickUnit tickUnit;	WITHOUT_CLASSIFICATION	0.9999902776179413	WITHOUT_CLASSIFICATION	9.722382058632621E-6	DEFECT
//private NumberFormat numberFormatOverride;	WITHOUT_CLASSIFICATION	0.9998851261921968	WITHOUT_CLASSIFICATION	1.1487380780324209E-4	DEFECT
// now replacing the dataset should update the axis range...	WITHOUT_CLASSIFICATION	0.9999990124646713	WITHOUT_CLASSIFICATION	9.875353287569744E-7	DEFECT
//axis.setRangeType(RangeType.POSITIVE); //axis.setLowerBound(-5.0); //assertEquals(0.0, axis.getLowerBound(), EPSILON);	WITHOUT_CLASSIFICATION	0.9999929854604566	WITHOUT_CLASSIFICATION	7.014539543457234E-6	DEFECT
// check that changing a tick label font in a1 doesn't change a2	WITHOUT_CLASSIFICATION	0.9999840394003721	WITHOUT_CLASSIFICATION	1.5960599627862306E-5	DEFECT
// check that changing a tick label paint in a1 doesn't change a2	WITHOUT_CLASSIFICATION	0.9999833770512102	WITHOUT_CLASSIFICATION	1.6622948789779393E-5	DEFECT
// check that changing a category label tooltip in a1 doesn't change a2	WITHOUT_CLASSIFICATION	0.9999882916474391	WITHOUT_CLASSIFICATION	1.17083525609072E-5	DEFECT
// set axis bounds to be both greater than 1	WITHOUT_CLASSIFICATION	0.9999978462697402	WITHOUT_CLASSIFICATION	2.1537302598336375E-6	DEFECT
// check for bounds interval that includes 1	WITHOUT_CLASSIFICATION	0.9999994185038311	WITHOUT_CLASSIFICATION	5.814961687771504E-7	DEFECT
// check for bounds interval that includes 1	WITHOUT_CLASSIFICATION	0.9999994185038311	WITHOUT_CLASSIFICATION	5.814961687771504E-7	DEFECT
// check for both bounds smaller than 1	WITHOUT_CLASSIFICATION	0.9999990317732559	WITHOUT_CLASSIFICATION	9.682267441150367E-7	DEFECT
// check for both bounds smaller than 1	WITHOUT_CLASSIFICATION	0.9999990317732559	WITHOUT_CLASSIFICATION	9.682267441150367E-7	DEFECT
// lowerMargin	WITHOUT_CLASSIFICATION	0.9999972099986795	WITHOUT_CLASSIFICATION	2.790001320537264E-6	DEFECT
// upperMargin	WITHOUT_CLASSIFICATION	0.9999951805852663	WITHOUT_CLASSIFICATION	4.819414733728284E-6	DEFECT
// categoryMargin	WITHOUT_CLASSIFICATION	0.9999978571743006	WITHOUT_CLASSIFICATION	2.1428256994056684E-6	DEFECT
// maxCategoryLabelWidthRatio	WITHOUT_CLASSIFICATION	0.9999956656568755	WITHOUT_CLASSIFICATION	4.334343124578892E-6	DEFECT
// categoryLabelPositionOffset	WITHOUT_CLASSIFICATION	0.999999418490692	WITHOUT_CLASSIFICATION	5.815093080612397E-7	DEFECT
// categoryLabelPositions	WITHOUT_CLASSIFICATION	0.9999994943818901	WITHOUT_CLASSIFICATION	5.05618109924225E-7	DEFECT
// check that changing a tick label font in a1 doesn't change a2	WITHOUT_CLASSIFICATION	0.9999840394003721	WITHOUT_CLASSIFICATION	1.5960599627862306E-5	DEFECT
// check that changing a tick label paint in a1 doesn't change a2	WITHOUT_CLASSIFICATION	0.9999833770512102	WITHOUT_CLASSIFICATION	1.6622948789779393E-5	DEFECT
// check that changing a category label tooltip in a1 doesn't change a2	WITHOUT_CLASSIFICATION	0.9999882916474391	WITHOUT_CLASSIFICATION	1.17083525609072E-5	DEFECT
// 4-ms test base timeline for ms2Timeline using 1 included and 1 // excluded segments // // timeline start time = 0 //   | //   v //   0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 ... // +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+... // |  |  |  |  |EE|EE|EE|EE|  |  |  |  |EE|EE|EE|EE|  |  |  |  |    <-- ms2BaseTimeline // +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+... //  \__________  _________/            \____  _____/ //             \/                           \/ //        segment group              segment size = 4 ms //	WITHOUT_CLASSIFICATION	0.9999999876241643	WITHOUT_CLASSIFICATION	1.2375835636317335E-8	DEFECT
// categoryLabelToolTips	WITHOUT_CLASSIFICATION	0.9999992123908796	WITHOUT_CLASSIFICATION	7.876091203538586E-7	DEFECT
// categoryLabelURLs	WITHOUT_CLASSIFICATION	0.9999997048389335	WITHOUT_CLASSIFICATION	2.951610664386255E-7	DEFECT
// tickLabelPaint	WITHOUT_CLASSIFICATION	0.9999990915545395	WITHOUT_CLASSIFICATION	9.084454605641173E-7	DEFECT
// tickLabelPaint2	WITHOUT_CLASSIFICATION	0.9999990435554045	WITHOUT_CLASSIFICATION	9.564445955260222E-7	DEFECT
// period	WITHOUT_CLASSIFICATION	0.9999894061851371	WITHOUT_CLASSIFICATION	1.0593814862942325E-5	DEFECT
// offset	WITHOUT_CLASSIFICATION	0.9999984750577727	WITHOUT_CLASSIFICATION	1.5249422273024934E-6	DEFECT
// advance line Stroke	WITHOUT_CLASSIFICATION	0.999977884126855	WITHOUT_CLASSIFICATION	2.2115873145012504E-5	DEFECT
// advance line Visible	WITHOUT_CLASSIFICATION	0.9999828655643009	WITHOUT_CLASSIFICATION	1.7134435699096822E-5	DEFECT
// cycle bound mapping	WITHOUT_CLASSIFICATION	0.9999951450575483	WITHOUT_CLASSIFICATION	4.854942451649966E-6	DEFECT
// Create a segmented time line (segment size : 15 minutes)	WITHOUT_CLASSIFICATION	0.9999989421126702	WITHOUT_CLASSIFICATION	1.057887329886145E-6	DEFECT
// Set start time	WITHOUT_CLASSIFICATION	0.9999978060480205	WITHOUT_CLASSIFICATION	2.19395197958699E-6	DEFECT
/* PUT exclusions in test */	WITHOUT_CLASSIFICATION	0.9999448746448659	WITHOUT_CLASSIFICATION	5.512535513402642E-5	DEFECT
/** These constants control test cycles in the validateXXXX methods. */	WITHOUT_CLASSIFICATION	0.9998868347861496	WITHOUT_CLASSIFICATION	1.1316521385049596E-4	DEFECT
// test 9am-4pm Monday through Friday timeline	WITHOUT_CLASSIFICATION	0.9999985177321324	WITHOUT_CLASSIFICATION	1.482267867505376E-6	DEFECT
// calculate 9am on the first Monday after 2001-01-01	WITHOUT_CLASSIFICATION	0.9999978880304591	WITHOUT_CLASSIFICATION	2.111969540885568E-6	DEFECT
// verify attributes set during object construction	WITHOUT_CLASSIFICATION	0.9999953153951361	WITHOUT_CLASSIFICATION	4.684604863917103E-6	DEFECT
// verify attributes set during object construction	WITHOUT_CLASSIFICATION	0.9999953153951361	WITHOUT_CLASSIFICATION	4.684604863917103E-6	DEFECT
////////////////////////////////////////////////////////////////////////// // test one-segment and adjacent segments //////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999998839768939	WITHOUT_CLASSIFICATION	1.1602310619683273E-7	DEFECT
// get two consecutive segments for various tests	WITHOUT_CLASSIFICATION	0.9999993353215271	WITHOUT_CLASSIFICATION	6.646784730014419E-7	DEFECT
// verify segments are consecutive and correct	WITHOUT_CLASSIFICATION	0.9999457374809603	WITHOUT_CLASSIFICATION	5.426251903961607E-5	DEFECT
// verify various indices inside a segment are the same segment	WITHOUT_CLASSIFICATION	0.999999653183356	WITHOUT_CLASSIFICATION	3.468166438757627E-7	DEFECT
// try next segment	WITHOUT_CLASSIFICATION	0.9999986621134465	WITHOUT_CLASSIFICATION	1.337886553541213E-6	DEFECT
////////////////////////////////////////////////////////////////////////// // test inc methods //////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999815231132994	WITHOUT_CLASSIFICATION	1.8476886700608077E-5	DEFECT
// test inc() method	WITHOUT_CLASSIFICATION	0.9999090373442535	WITHOUT_CLASSIFICATION	9.096265574643915E-5	DEFECT
// logically consecutive segments non-physically consecutive // (with non-contained time in between)	WITHOUT_CLASSIFICATION	0.9999961566211377	WITHOUT_CLASSIFICATION	3.843378862253365E-6	DEFECT
// physically consecutive	WITHOUT_CLASSIFICATION	0.9999902286995687	WITHOUT_CLASSIFICATION	9.771300431413549E-6	DEFECT
// test inc(n) method	WITHOUT_CLASSIFICATION	0.9998183941961238	WITHOUT_CLASSIFICATION	1.8160580387608502E-4	DEFECT
// go to another segment to continue test	WITHOUT_CLASSIFICATION	0.9999997888796961	WITHOUT_CLASSIFICATION	2.111203038898951E-7	DEFECT
// clear any exceptions in this timeline	WITHOUT_CLASSIFICATION	0.9998643267805257	WITHOUT_CLASSIFICATION	1.356732194742329E-4	DEFECT
// test some included and excluded segments	WITHOUT_CLASSIFICATION	0.999998860713044	WITHOUT_CLASSIFICATION	1.1392869560209051E-6	DEFECT
// should be an included segment	WITHOUT_CLASSIFICATION	0.9999676048952106	WITHOUT_CLASSIFICATION	3.2395104789297815E-5	DEFECT
// should be an excluded segment	WITHOUT_CLASSIFICATION	0.9999785892225094	WITHOUT_CLASSIFICATION	2.1410777490530694E-5	DEFECT
// fill in the exceptions	WITHOUT_CLASSIFICATION	0.9999593737560565	WITHOUT_CLASSIFICATION	4.0626243943438787E-5	DEFECT
// verify list of exceptions	WITHOUT_CLASSIFICATION	0.9999940259139565	WITHOUT_CLASSIFICATION	5.974086043505651E-6	DEFECT
// include current exception and last one	WITHOUT_CLASSIFICATION	0.9999954909045896	WITHOUT_CLASSIFICATION	4.50909541046634E-6	DEFECT
// exclude current exception and last one	WITHOUT_CLASSIFICATION	0.9999992317373041	WITHOUT_CLASSIFICATION	7.682626960107408E-7	DEFECT
// make sure there are no exceptions	WITHOUT_CLASSIFICATION	0.9999973358241552	WITHOUT_CLASSIFICATION	2.664175844926201E-6	DEFECT
// add our exceptions and store locally in ArrayList of Longs	WITHOUT_CLASSIFICATION	0.9999907304785606	WITHOUT_CLASSIFICATION	9.269521439454499E-6	DEFECT
// only add an exception if it is currently an included segment	WITHOUT_CLASSIFICATION	0.9999892090639707	WITHOUT_CLASSIFICATION	1.0790936029182544E-5	DEFECT
// make array of exceptions	WITHOUT_CLASSIFICATION	0.9999741008221346	WITHOUT_CLASSIFICATION	2.5899177865446127E-5	DEFECT
// add the base timeline exclusions as timeline's esceptions	WITHOUT_CLASSIFICATION	0.9999973276204057	WITHOUT_CLASSIFICATION	2.6723795942812945E-6	DEFECT
// validate base timeline exclusions added as timeline's esceptions	WITHOUT_CLASSIFICATION	0.9999958542113551	WITHOUT_CLASSIFICATION	4.14578864493232E-6	DEFECT
// start time...	WITHOUT_CLASSIFICATION	0.9999990569415776	WITHOUT_CLASSIFICATION	9.430584223417204E-7	DEFECT
// 1-Jan-2000	WITHOUT_CLASSIFICATION	0.9999947969383159	WITHOUT_CLASSIFICATION	5.203061684013911E-6	DEFECT
//long v = stl.toTimelineValue(946684800020L);	WITHOUT_CLASSIFICATION	0.9999918315139334	WITHOUT_CLASSIFICATION	8.168486066465943E-6	DEFECT
// tick labels visible flag...	WITHOUT_CLASSIFICATION	0.9999944582207068	WITHOUT_CLASSIFICATION	5.541779293302218E-6	DEFECT
// lowerMargin	WITHOUT_CLASSIFICATION	0.9999972099986795	WITHOUT_CLASSIFICATION	2.790001320537264E-6	DEFECT
// upperMargin	WITHOUT_CLASSIFICATION	0.9999951805852663	WITHOUT_CLASSIFICATION	4.819414733728284E-6	DEFECT
// the reverse transformed value will be in the start of the // next non-excluded and non-exception segment	WITHOUT_CLASSIFICATION	0.9999988281258276	WITHOUT_CLASSIFICATION	1.1718741723699415E-6	DEFECT
////////////////////////////////////////////////////////////////////////// // test serialization //////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999992708308033	WITHOUT_CLASSIFICATION	7.291691966188619E-7	DEFECT
// verify all timeline segments included in the // baseTimeline.segment are now exceptions	WITHOUT_CLASSIFICATION	0.9999955035862308	WITHOUT_CLASSIFICATION	4.4964137691884124E-6	DEFECT
////////////////////////////////////////////////////////////////////////// // utility methods //////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999952073082485	WITHOUT_CLASSIFICATION	4.7926917514477544E-6	DEFECT
// subcategories	WITHOUT_CLASSIFICATION	0.9999996399071402	WITHOUT_CLASSIFICATION	3.600928597864181E-7	DEFECT
// subLabelFont	WITHOUT_CLASSIFICATION	0.9999996256042102	WITHOUT_CLASSIFICATION	3.7439578975996637E-7	DEFECT
// subLabelPaint	WITHOUT_CLASSIFICATION	0.9999997186759543	WITHOUT_CLASSIFICATION	2.813240458061392E-7	DEFECT
// some checks that the clone is independent of the original	WITHOUT_CLASSIFICATION	0.9999991357043723	WITHOUT_CLASSIFICATION	8.642956276858871E-7	DEFECT
// visible flag...	WITHOUT_CLASSIFICATION	0.9999962614579928	WITHOUT_CLASSIFICATION	3.7385420072822927E-6	DEFECT
// label...	WITHOUT_CLASSIFICATION	0.999996019797042	WITHOUT_CLASSIFICATION	3.980202957991874E-6	DEFECT
// label font...	WITHOUT_CLASSIFICATION	0.9999973117109309	WITHOUT_CLASSIFICATION	2.688289069146486E-6	DEFECT
// label paint...	WITHOUT_CLASSIFICATION	0.9999972591578867	WITHOUT_CLASSIFICATION	2.7408421132080955E-6	DEFECT
// attributed label...	WITHOUT_CLASSIFICATION	0.9999964006461749	WITHOUT_CLASSIFICATION	3.5993538250124195E-6	DEFECT
// label insets...	WITHOUT_CLASSIFICATION	0.9999967200440584	WITHOUT_CLASSIFICATION	3.279955941675462E-6	DEFECT
// label angle...	WITHOUT_CLASSIFICATION	0.9999931809181363	WITHOUT_CLASSIFICATION	6.819081863708798E-6	DEFECT
// label location...	WITHOUT_CLASSIFICATION	0.9999950333259793	WITHOUT_CLASSIFICATION	4.96667402077197E-6	DEFECT
// axis line visible...	WITHOUT_CLASSIFICATION	0.9999750196813719	WITHOUT_CLASSIFICATION	2.4980318628145984E-5	DEFECT
// axis line stroke...	WITHOUT_CLASSIFICATION	0.9999868022382578	WITHOUT_CLASSIFICATION	1.3197761742267185E-5	DEFECT
// axis line paint...	WITHOUT_CLASSIFICATION	0.9999877764519843	WITHOUT_CLASSIFICATION	1.222354801567295E-5	DEFECT
// tick label font...	WITHOUT_CLASSIFICATION	0.999995469545145	WITHOUT_CLASSIFICATION	4.530454854998581E-6	DEFECT
// tick label paint...	WITHOUT_CLASSIFICATION	0.9999956236617301	WITHOUT_CLASSIFICATION	4.376338269904359E-6	DEFECT
// tick marks visible flag...	WITHOUT_CLASSIFICATION	0.999995670576546	WITHOUT_CLASSIFICATION	4.329423453878196E-6	DEFECT
// tick mark inside length...	WITHOUT_CLASSIFICATION	0.9999936886618495	WITHOUT_CLASSIFICATION	6.311338150510307E-6	DEFECT
// tick mark outside length...	WITHOUT_CLASSIFICATION	0.9999990318134435	WITHOUT_CLASSIFICATION	9.681865564271782E-7	DEFECT
// tick mark stroke...	WITHOUT_CLASSIFICATION	0.999994880554995	WITHOUT_CLASSIFICATION	5.119445005062618E-6	DEFECT
// fixed dimension...	WITHOUT_CLASSIFICATION	0.9998438327857457	WITHOUT_CLASSIFICATION	1.5616721425433286E-4	DEFECT
// axis line visible flag...	WITHOUT_CLASSIFICATION	0.9999783767908066	WITHOUT_CLASSIFICATION	2.1623209193354323E-5	DEFECT
// positiveArrowVisible;	WITHOUT_CLASSIFICATION	0.9999885522472065	WITHOUT_CLASSIFICATION	1.1447752793574207E-5	DEFECT
//private Shape upArrow;	WITHOUT_CLASSIFICATION	0.9999511844869816	WITHOUT_CLASSIFICATION	4.881551301845816E-5	DEFECT
//private Shape downArrow;	WITHOUT_CLASSIFICATION	0.9998879538192786	WITHOUT_CLASSIFICATION	1.1204618072132089E-4	DEFECT
//private Shape leftArrow;	WITHOUT_CLASSIFICATION	0.9999534376864293	WITHOUT_CLASSIFICATION	4.656231357078877E-5	DEFECT
//private Shape rightArrow;	WITHOUT_CLASSIFICATION	0.9999082833833937	WITHOUT_CLASSIFICATION	9.17166166063179E-5	DEFECT
// axisLineStroke	WITHOUT_CLASSIFICATION	0.9999953777038337	WITHOUT_CLASSIFICATION	4.622296166219056E-6	DEFECT
// inverted	WITHOUT_CLASSIFICATION	0.9999886945922837	WITHOUT_CLASSIFICATION	1.1305407716401594E-5	DEFECT
//private TickUnits standardTickUnits;	WITHOUT_CLASSIFICATION	0.9999924117621146	WITHOUT_CLASSIFICATION	7.5882378853036034E-6	DEFECT
// verticalTickLabels	WITHOUT_CLASSIFICATION	0.9999968166390496	WITHOUT_CLASSIFICATION	3.1833609504347743E-6	DEFECT
// time zone	WITHOUT_CLASSIFICATION	0.9999887373542836	WITHOUT_CLASSIFICATION	1.1262645716327076E-5	DEFECT
// locale	WITHOUT_CLASSIFICATION	0.9999953798354828	WITHOUT_CLASSIFICATION	4.6201645172820986E-6	DEFECT
// chars	WITHOUT_CLASSIFICATION	0.9999998959174962	WITHOUT_CLASSIFICATION	1.0408250381173227E-7	DEFECT
// showYear[]	WITHOUT_CLASSIFICATION	0.9999980476779848	WITHOUT_CLASSIFICATION	1.9523220152560126E-6	DEFECT
// yearFormatter	WITHOUT_CLASSIFICATION	0.9999545326710946	WITHOUT_CLASSIFICATION	4.546732890529503E-5	DEFECT
// NONE / NONE	WITHOUT_CLASSIFICATION	0.9999798570865607	WITHOUT_CLASSIFICATION	2.0142913439272935E-5	DEFECT
// NONE / RANGE	WITHOUT_CLASSIFICATION	0.9999872249455362	WITHOUT_CLASSIFICATION	1.2775054463886906E-5	DEFECT
// NONE / FIXED	WITHOUT_CLASSIFICATION	0.9972952451424638	WITHOUT_CLASSIFICATION	0.0027047548575360888	DEFECT
// RANGE / NONE	WITHOUT_CLASSIFICATION	0.999986016436517	WITHOUT_CLASSIFICATION	1.3983563483009096E-5	DEFECT
// paint	WITHOUT_CLASSIFICATION	0.9999955860788465	WITHOUT_CLASSIFICATION	4.413921153470166E-6	DEFECT
// RANGE / RANGE	WITHOUT_CLASSIFICATION	0.9999902415206308	WITHOUT_CLASSIFICATION	9.758479369260211E-6	DEFECT
// RANGE / FIXED	WITHOUT_CLASSIFICATION	0.9986869858572932	WITHOUT_CLASSIFICATION	0.0013130141427068547	DEFECT
// FIXED / NONE	WITHOUT_CLASSIFICATION	0.9957830595918024	WITHOUT_CLASSIFICATION	0.004216940408197643	DEFECT
// FIXED / RANGE	WITHOUT_CLASSIFICATION	0.9981280285929716	WITHOUT_CLASSIFICATION	0.0018719714070283644	DEFECT
// FIXED / FIXED	WITHOUT_CLASSIFICATION	0.9965098825544167	WITHOUT_CLASSIFICATION	0.0034901174455832713	DEFECT
// TBLRC // 00010 - right item only	WITHOUT_CLASSIFICATION	0.9999931894460913	WITHOUT_CLASSIFICATION	6.810553908763126E-6	DEFECT
// TBLRC // 00010 - right item only	WITHOUT_CLASSIFICATION	0.9999931894460913	WITHOUT_CLASSIFICATION	6.810553908763126E-6	DEFECT
// TBLRC // 00011 - right and center items	WITHOUT_CLASSIFICATION	0.9999982191843068	WITHOUT_CLASSIFICATION	1.780815693157929E-6	DEFECT
// TBLRC // 00011 - right and center items	WITHOUT_CLASSIFICATION	0.9999982191843068	WITHOUT_CLASSIFICATION	1.780815693157929E-6	DEFECT
// try case where right item is shorter than center item	WITHOUT_CLASSIFICATION	0.9999819187893833	WITHOUT_CLASSIFICATION	1.808121061676538E-5	DEFECT
// TBLRC // 00100 - left item only	WITHOUT_CLASSIFICATION	0.9999905542487348	WITHOUT_CLASSIFICATION	9.44575126512811E-6	DEFECT
// TBLRC // 00101 - left and center items	WITHOUT_CLASSIFICATION	0.9999991658021	WITHOUT_CLASSIFICATION	8.341979000423904E-7	DEFECT
// TBLRC // 00101 - left and center items	WITHOUT_CLASSIFICATION	0.9999991658021	WITHOUT_CLASSIFICATION	8.341979000423904E-7	DEFECT
// try case where left item is shorter than center item	WITHOUT_CLASSIFICATION	0.9999916979779954	WITHOUT_CLASSIFICATION	8.30202200458279E-6	DEFECT
// TBLRC // 00110 - left and right items	WITHOUT_CLASSIFICATION	0.9999978761862512	WITHOUT_CLASSIFICATION	2.1238137486926538E-6	DEFECT
// TBLRC // 00111 - left, right and center items	WITHOUT_CLASSIFICATION	0.9999992326132049	WITHOUT_CLASSIFICATION	7.673867950895284E-7	DEFECT
// TBLRC // 01000 - bottom item only	WITHOUT_CLASSIFICATION	0.9999901593594128	WITHOUT_CLASSIFICATION	9.840640587083328E-6	DEFECT
// TBLRC // 01001 - bottom and center only	WITHOUT_CLASSIFICATION	0.9999985738100687	WITHOUT_CLASSIFICATION	1.426189931220082E-6	DEFECT
// TBLRC // 01010 - bottom and right only	WITHOUT_CLASSIFICATION	0.9999955410452152	WITHOUT_CLASSIFICATION	4.458954784933345E-6	DEFECT
// TBLRC // 10110 - top, left and right	WITHOUT_CLASSIFICATION	0.9999983498165835	WITHOUT_CLASSIFICATION	1.6501834163839218E-6	DEFECT
// TBLRC // 10111	WITHOUT_CLASSIFICATION	0.9999780114595782	WITHOUT_CLASSIFICATION	2.198854042176017E-5	DEFECT
// TBLRC // 11000 - top and bottom only	WITHOUT_CLASSIFICATION	0.9999955791152293	WITHOUT_CLASSIFICATION	4.4208847707179035E-6	DEFECT
// TBLRC // 11001	WITHOUT_CLASSIFICATION	0.9999794487719609	WITHOUT_CLASSIFICATION	2.055122803903411E-5	DEFECT
// TBLRC // 11010 - top, bottom and right	WITHOUT_CLASSIFICATION	0.9999940191267024	WITHOUT_CLASSIFICATION	5.98087329770759E-6	DEFECT
// TBLRC // 11100	WITHOUT_CLASSIFICATION	0.9999798014608504	WITHOUT_CLASSIFICATION	2.019853914966191E-5	DEFECT
// TBLRC // 11101	WITHOUT_CLASSIFICATION	0.9999777275472405	WITHOUT_CLASSIFICATION	2.2272452759590032E-5	DEFECT
// TBLRC // 11110	WITHOUT_CLASSIFICATION	0.999977680531035	WITHOUT_CLASSIFICATION	2.231946896501902E-5	DEFECT
// TBLRC // 11111 - all	WITHOUT_CLASSIFICATION	0.9999490231364807	WITHOUT_CLASSIFICATION	5.097686351928249E-5	DEFECT
// create dataset 1...	WITHOUT_CLASSIFICATION	0.9999994569221132	WITHOUT_CLASSIFICATION	5.430778867303654E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999872438634059	WITHOUT_CLASSIFICATION	1.2756136594073208E-5	DEFECT
// TBLRC // 00110 - left and right items	WITHOUT_CLASSIFICATION	0.9999978761862512	WITHOUT_CLASSIFICATION	2.1238137486926538E-6	DEFECT
// TBLRC // 00111 - left, right and center items	WITHOUT_CLASSIFICATION	0.9999992326132049	WITHOUT_CLASSIFICATION	7.673867950895284E-7	DEFECT
// TBLRC // 01000 - bottom item only	WITHOUT_CLASSIFICATION	0.9999901593594128	WITHOUT_CLASSIFICATION	9.840640587083328E-6	DEFECT
// TBLRC // 01001 - bottom and center only	WITHOUT_CLASSIFICATION	0.9999985738100687	WITHOUT_CLASSIFICATION	1.426189931220082E-6	DEFECT
// TBLRC // 01010 - bottom and right only	WITHOUT_CLASSIFICATION	0.9999955410452152	WITHOUT_CLASSIFICATION	4.458954784933345E-6	DEFECT
// TBLRC // 01011 - bottom, right and center	WITHOUT_CLASSIFICATION	0.999997538468709	WITHOUT_CLASSIFICATION	2.4615312910390717E-6	DEFECT
// TBLRC // 01100	WITHOUT_CLASSIFICATION	0.9999827079298969	WITHOUT_CLASSIFICATION	1.7292070103125175E-5	DEFECT
// TBLRC // 01101 - bottom, left and center	WITHOUT_CLASSIFICATION	0.9999988243009691	WITHOUT_CLASSIFICATION	1.1756990308974637E-6	DEFECT
// TBLRC // 01110 - bottom. left and right	WITHOUT_CLASSIFICATION	0.9999962395198349	WITHOUT_CLASSIFICATION	3.7604801652246994E-6	DEFECT
// TBLRC // 01111	WITHOUT_CLASSIFICATION	0.9999801526764398	WITHOUT_CLASSIFICATION	1.9847323560169463E-5	DEFECT
// TBLRC // 10000 - top item only	WITHOUT_CLASSIFICATION	0.999995240020479	WITHOUT_CLASSIFICATION	4.759979520994966E-6	DEFECT
// TBLRC // 10001 - top and center only	WITHOUT_CLASSIFICATION	0.9999993844337443	WITHOUT_CLASSIFICATION	6.155662557178052E-7	DEFECT
// TBLRC // 10010 - right and top only	WITHOUT_CLASSIFICATION	0.9999980212065493	WITHOUT_CLASSIFICATION	1.97879345063102E-6	DEFECT
// TBLRC // 10011 - top, right and center	WITHOUT_CLASSIFICATION	0.9999989309615989	WITHOUT_CLASSIFICATION	1.0690384011333413E-6	DEFECT
// TBLRC // 10100 - top and left only	WITHOUT_CLASSIFICATION	0.999997798461268	WITHOUT_CLASSIFICATION	2.201538732039182E-6	DEFECT
// TBLRC // 10101 - top, left and center	WITHOUT_CLASSIFICATION	0.9999994291621843	WITHOUT_CLASSIFICATION	5.708378157118589E-7	DEFECT
// TBLRC // 10111	WITHOUT_CLASSIFICATION	0.9999780114595782	WITHOUT_CLASSIFICATION	2.198854042176017E-5	DEFECT
// standard test	WITHOUT_CLASSIFICATION	0.9999993931566677	WITHOUT_CLASSIFICATION	6.068433322299867E-7	DEFECT
// tooltip format	WITHOUT_CLASSIFICATION	0.999997891810974	WITHOUT_CLASSIFICATION	2.1081890260198216E-6	DEFECT
// tooltip format	WITHOUT_CLASSIFICATION	0.999997891810974	WITHOUT_CLASSIFICATION	2.1081890260198216E-6	DEFECT
// date format	WITHOUT_CLASSIFICATION	0.9999834664755562	WITHOUT_CLASSIFICATION	1.6533524443820835E-5	DEFECT
// Y format	WITHOUT_CLASSIFICATION	0.999989488554901	WITHOUT_CLASSIFICATION	1.0511445099055091E-5	DEFECT
// some setup...	WITHOUT_CLASSIFICATION	0.9999972173014601	WITHOUT_CLASSIFICATION	2.7826985399407143E-6	DEFECT
// some setup...	WITHOUT_CLASSIFICATION	0.9999972173014601	WITHOUT_CLASSIFICATION	2.7826985399407143E-6	DEFECT
// another test...	WITHOUT_CLASSIFICATION	0.9999985155069058	WITHOUT_CLASSIFICATION	1.4844930943094708E-6	DEFECT
// try a null value	WITHOUT_CLASSIFICATION	0.9999747962269354	WITHOUT_CLASSIFICATION	2.5203773064666524E-5	DEFECT
// format string...	WITHOUT_CLASSIFICATION	0.9999930844794721	WITHOUT_CLASSIFICATION	6.91552052784352E-6	DEFECT
// x number format	WITHOUT_CLASSIFICATION	0.9999837693888066	WITHOUT_CLASSIFICATION	1.6230611193411473E-5	DEFECT
// y number format	WITHOUT_CLASSIFICATION	0.999987609231971	WITHOUT_CLASSIFICATION	1.2390768029069341E-5	DEFECT
// z number format	WITHOUT_CLASSIFICATION	0.9999924056055203	WITHOUT_CLASSIFICATION	7.594394479721262E-6	DEFECT
// x date format	WITHOUT_CLASSIFICATION	0.99996373708056	WITHOUT_CLASSIFICATION	3.626291944015018E-5	DEFECT
// y date format	WITHOUT_CLASSIFICATION	0.9999794298939823	WITHOUT_CLASSIFICATION	2.0570106017772355E-5	DEFECT
// z date format	WITHOUT_CLASSIFICATION	0.99998643586092	WITHOUT_CLASSIFICATION	1.3564139079947841E-5	DEFECT
// remove plot2, but plot1 is removed instead	WITHOUT_CLASSIFICATION	0.9999901817781507	WITHOUT_CLASSIFICATION	9.818221849304252E-6	DEFECT
// create subplot 1...	WITHOUT_CLASSIFICATION	0.9999996131612849	WITHOUT_CLASSIFICATION	3.868387151122548E-7	DEFECT
// create subplot 2...	WITHOUT_CLASSIFICATION	0.9999996422029096	WITHOUT_CLASSIFICATION	3.577970904511144E-7	DEFECT
// add the subplots...	WITHOUT_CLASSIFICATION	0.9999981365755926	WITHOUT_CLASSIFICATION	1.863424407432601E-6	DEFECT
// separatorsVisible	WITHOUT_CLASSIFICATION	0.9999992821099677	WITHOUT_CLASSIFICATION	7.178900322701241E-7	DEFECT
// separatorStroke	WITHOUT_CLASSIFICATION	0.9999984217715152	WITHOUT_CLASSIFICATION	1.5782284848416862E-6	DEFECT
// separatorPaint	WITHOUT_CLASSIFICATION	0.9999994350416523	WITHOUT_CLASSIFICATION	5.649583476301762E-7	DEFECT
// outerSeparatorExtension	WITHOUT_CLASSIFICATION	0.9999882319430057	WITHOUT_CLASSIFICATION	1.1768056994273169E-5	DEFECT
// sectionDepth	WITHOUT_CLASSIFICATION	0.9999976945669039	WITHOUT_CLASSIFICATION	2.3054330960149546E-6	DEFECT
// orientation...	WITHOUT_CLASSIFICATION	0.9999970184195826	WITHOUT_CLASSIFICATION	2.9815804174267098E-6	DEFECT
// axisOffset...	WITHOUT_CLASSIFICATION	0.9999939211242681	WITHOUT_CLASSIFICATION	6.078875731843732E-6	DEFECT
// domainAxes...	WITHOUT_CLASSIFICATION	0.9999892165211015	WITHOUT_CLASSIFICATION	1.0783478898590456E-5	DEFECT
// TBLRC // 00000 - no items	WITHOUT_CLASSIFICATION	0.9999825828116449	WITHOUT_CLASSIFICATION	1.7417188355117852E-5	DEFECT
// TBLRC // 11001	WITHOUT_CLASSIFICATION	0.9999794487719609	WITHOUT_CLASSIFICATION	2.055122803903411E-5	DEFECT
// TBLRC // 11010 - top, bottom and right	WITHOUT_CLASSIFICATION	0.9999940191267024	WITHOUT_CLASSIFICATION	5.98087329770759E-6	DEFECT
// TBLRC // 11011	WITHOUT_CLASSIFICATION	0.9999775934833783	WITHOUT_CLASSIFICATION	2.2406516621706662E-5	DEFECT
// TBLRC // 11100	WITHOUT_CLASSIFICATION	0.9999798014608504	WITHOUT_CLASSIFICATION	2.019853914966191E-5	DEFECT
// TBLRC // 11101	WITHOUT_CLASSIFICATION	0.9999777275472405	WITHOUT_CLASSIFICATION	2.2272452759590032E-5	DEFECT
// TBLRC // 11110	WITHOUT_CLASSIFICATION	0.999977680531035	WITHOUT_CLASSIFICATION	2.231946896501902E-5	DEFECT
// check handling when the dataset is a regular XYDataset, not an // XYZDataset...	WITHOUT_CLASSIFICATION	0.9999858632235296	WITHOUT_CLASSIFICATION	1.4136776470480406E-5	DEFECT
// domainAxisLocation - no longer a separate field but test anyway...	WITHOUT_CLASSIFICATION	0.9999969804494353	WITHOUT_CLASSIFICATION	3.0195505647470747E-6	DEFECT
// domainAxisLocations...	WITHOUT_CLASSIFICATION	0.9999649177241209	WITHOUT_CLASSIFICATION	3.5082275879231474E-5	DEFECT
// draw shared domain axis...	WITHOUT_CLASSIFICATION	0.9999913899978382	WITHOUT_CLASSIFICATION	8.610002161827621E-6	DEFECT
// rangeAxes...	WITHOUT_CLASSIFICATION	0.9999964918151869	WITHOUT_CLASSIFICATION	3.508184813078851E-6	DEFECT
// rangeAxisLocation - no longer a separate field but test anyway...	WITHOUT_CLASSIFICATION	0.9999983599004766	WITHOUT_CLASSIFICATION	1.6400995233969034E-6	DEFECT
// rangeAxisLocations...	WITHOUT_CLASSIFICATION	0.999989089906145	WITHOUT_CLASSIFICATION	1.0910093855049933E-5	DEFECT
// datasetToDomainAxisMap...	WITHOUT_CLASSIFICATION	0.9999733367482022	WITHOUT_CLASSIFICATION	2.6663251797748866E-5	DEFECT
// datasetToRangeAxisMap...	WITHOUT_CLASSIFICATION	0.9999794092951462	WITHOUT_CLASSIFICATION	2.059070485379083E-5	DEFECT
// renderers...	WITHOUT_CLASSIFICATION	0.9999976209187692	WITHOUT_CLASSIFICATION	2.37908123074259E-6	DEFECT
// rendering order...	WITHOUT_CLASSIFICATION	0.999967739985757	WITHOUT_CLASSIFICATION	3.2260014242900404E-5	DEFECT
// columnRenderingOrder...	WITHOUT_CLASSIFICATION	0.9999877044885244	WITHOUT_CLASSIFICATION	1.2295511475742963E-5	DEFECT
// rowRenderingOrder...	WITHOUT_CLASSIFICATION	0.9999701830844023	WITHOUT_CLASSIFICATION	2.98169155977324E-5	DEFECT
// domainGridlinesVisible	WITHOUT_CLASSIFICATION	0.9999923356522353	WITHOUT_CLASSIFICATION	7.664347764705969E-6	DEFECT
// domainGridlineStroke	WITHOUT_CLASSIFICATION	0.9999869935077622	WITHOUT_CLASSIFICATION	1.3006492237707999E-5	DEFECT
// domainGridlinePaint	WITHOUT_CLASSIFICATION	0.9999954264880605	WITHOUT_CLASSIFICATION	4.573511939460043E-6	DEFECT
// rangeGridlinesVisible	WITHOUT_CLASSIFICATION	0.9999953805031072	WITHOUT_CLASSIFICATION	4.619496892781014E-6	DEFECT
// rangeGridlineStroke	WITHOUT_CLASSIFICATION	0.9999922559378019	WITHOUT_CLASSIFICATION	7.744062198044262E-6	DEFECT
// rangeGridlinePaint	WITHOUT_CLASSIFICATION	0.9999975058510933	WITHOUT_CLASSIFICATION	2.4941489066653263E-6	DEFECT
// rangeCrosshairVisible	WITHOUT_CLASSIFICATION	0.9999959409993251	WITHOUT_CLASSIFICATION	4.059000674902512E-6	DEFECT
// rangeCrosshairValue	WITHOUT_CLASSIFICATION	0.9999952320621938	WITHOUT_CLASSIFICATION	4.767937806237478E-6	DEFECT
// rangeCrosshairStroke	WITHOUT_CLASSIFICATION	0.9999935290695408	WITHOUT_CLASSIFICATION	6.470930459196044E-6	DEFECT
// rangeCrosshairLockedOnData	WITHOUT_CLASSIFICATION	0.9999948798628051	WITHOUT_CLASSIFICATION	5.1201371948316605E-6	DEFECT
// foreground domain markers	WITHOUT_CLASSIFICATION	0.9999954340709046	WITHOUT_CLASSIFICATION	4.565929095363295E-6	DEFECT
// background domain markers	WITHOUT_CLASSIFICATION	0.9999961665964167	WITHOUT_CLASSIFICATION	3.833403583307478E-6	DEFECT
// foreground range markers...	WITHOUT_CLASSIFICATION	0.9999938032431624	WITHOUT_CLASSIFICATION	6.196756837561618E-6	DEFECT
// background range markers...	WITHOUT_CLASSIFICATION	0.9999947974058324	WITHOUT_CLASSIFICATION	5.202594167588664E-6	DEFECT
// annotations	WITHOUT_CLASSIFICATION	0.9999925940450296	WITHOUT_CLASSIFICATION	7.405954970351266E-6	DEFECT
// weight	WITHOUT_CLASSIFICATION	0.9999938768369196	WITHOUT_CLASSIFICATION	6.123163080369532E-6	DEFECT
// fixed domain axis space...	WITHOUT_CLASSIFICATION	0.9999009408478811	WITHOUT_CLASSIFICATION	9.90591521188968E-5	DEFECT
// fixed range axis space...	WITHOUT_CLASSIFICATION	0.9999789903075179	WITHOUT_CLASSIFICATION	2.100969248207142E-5	DEFECT
// crosshairDatasetIndex	WITHOUT_CLASSIFICATION	0.9999992283835314	WITHOUT_CLASSIFICATION	7.71616468607346E-7	DEFECT
// domainCrosshairColumnKey	WITHOUT_CLASSIFICATION	0.99999675242703	WITHOUT_CLASSIFICATION	3.2475729698515185E-6	DEFECT
// domainCrosshairRowKey	WITHOUT_CLASSIFICATION	0.9999949264343655	WITHOUT_CLASSIFICATION	5.073565634473487E-6	DEFECT
// domainCrosshairVisible	WITHOUT_CLASSIFICATION	0.9999941775712373	WITHOUT_CLASSIFICATION	5.822428762659339E-6	DEFECT
// domainCrosshairStroke	WITHOUT_CLASSIFICATION	0.9999907177911105	WITHOUT_CLASSIFICATION	9.282208889468704E-6	DEFECT
// shadowGenerator	WITHOUT_CLASSIFICATION	0.9999988296631986	WITHOUT_CLASSIFICATION	1.170336801314962E-6	DEFECT
// check for independence	WITHOUT_CLASSIFICATION	0.9999946031376233	WITHOUT_CLASSIFICATION	5.396862376542009E-6	DEFECT
// we didn't get an exception so all is good	WITHOUT_CLASSIFICATION	0.9999264868327854	WITHOUT_CLASSIFICATION	7.351316721458254E-5	DEFECT
// should get IllegalArgumentException for negative index	WITHOUT_CLASSIFICATION	0.9999843005365956	WITHOUT_CLASSIFICATION	1.5699463404383944E-5	DEFECT
// should get IllegalArgumentException for negative index	WITHOUT_CLASSIFICATION	0.9999843005365956	WITHOUT_CLASSIFICATION	1.5699463404383944E-5	DEFECT
// we should be able to give a dataset an arbitrary index	WITHOUT_CLASSIFICATION	0.999974538598764	WITHOUT_CLASSIFICATION	2.5461401235989043E-5	DEFECT
// labelFont	WITHOUT_CLASSIFICATION	0.9999972706705306	WITHOUT_CLASSIFICATION	2.7293294693638328E-6	DEFECT
// labelPaint	WITHOUT_CLASSIFICATION	0.9999979491584062	WITHOUT_CLASSIFICATION	2.050841593733493E-6	DEFECT
// dial outline paint	WITHOUT_CLASSIFICATION	0.9999931758091865	WITHOUT_CLASSIFICATION	6.82419081346171E-6	DEFECT
// if multiple axes are mapped, the first in the list should be // returned...	WITHOUT_CLASSIFICATION	0.9999804750164292	WITHOUT_CLASSIFICATION	1.9524983570856663E-5	DEFECT
// we should be able to give a renderer an arbitrary index	WITHOUT_CLASSIFICATION	0.9999425267249532	WITHOUT_CLASSIFICATION	5.747327504671744E-5	DEFECT
// add a second dataset	WITHOUT_CLASSIFICATION	0.9999988660951477	WITHOUT_CLASSIFICATION	1.1339048524362777E-6	DEFECT
// add a second dataset	WITHOUT_CLASSIFICATION	0.9999988660951477	WITHOUT_CLASSIFICATION	1.1339048524362777E-6	DEFECT
// add a second dataset	WITHOUT_CLASSIFICATION	0.9999988660951477	WITHOUT_CLASSIFICATION	1.1339048524362777E-6	DEFECT
// by default, the renderer with index 0 is used	WITHOUT_CLASSIFICATION	0.9999976335450897	WITHOUT_CLASSIFICATION	2.366454910251684E-6	DEFECT
// add a second renderer with the same index as dataset2, now it will // be used	WITHOUT_CLASSIFICATION	0.9999984422612879	WITHOUT_CLASSIFICATION	1.5577387120601848E-6	DEFECT
// now map the dataset to the second xAxis	WITHOUT_CLASSIFICATION	0.9999998544001315	WITHOUT_CLASSIFICATION	1.4559986847271223E-7	DEFECT
// now map the dataset to the second xAxis	WITHOUT_CLASSIFICATION	0.9999998544001315	WITHOUT_CLASSIFICATION	1.4559986847271223E-7	DEFECT
// add a second dataset, plotted against a second x axis	WITHOUT_CLASSIFICATION	0.9999995563975934	WITHOUT_CLASSIFICATION	4.436024065736508E-7	DEFECT
// add a second dataset, plotted against a second axis	WITHOUT_CLASSIFICATION	0.9999997234261646	WITHOUT_CLASSIFICATION	2.765738353960747E-7	DEFECT
// needle paint	WITHOUT_CLASSIFICATION	0.9999991060448422	WITHOUT_CLASSIFICATION	8.939551577712892E-7	DEFECT
// value font	WITHOUT_CLASSIFICATION	0.9999958718168883	WITHOUT_CLASSIFICATION	4.1281831117219355E-6	DEFECT
// value paint	WITHOUT_CLASSIFICATION	0.9999960136074586	WITHOUT_CLASSIFICATION	3.98639254137064E-6	DEFECT
// tick label font	WITHOUT_CLASSIFICATION	0.9999986368693934	WITHOUT_CLASSIFICATION	1.363130606628795E-6	DEFECT
// tick label paint	WITHOUT_CLASSIFICATION	0.9999986714368543	WITHOUT_CLASSIFICATION	1.3285631457925835E-6	DEFECT
// tick label format	WITHOUT_CLASSIFICATION	0.9999970345360646	WITHOUT_CLASSIFICATION	2.965463935371987E-6	DEFECT
// tick paint	WITHOUT_CLASSIFICATION	0.9999971795209279	WITHOUT_CLASSIFICATION	2.820479072080236E-6	DEFECT
// draw border	WITHOUT_CLASSIFICATION	0.9999960426872011	WITHOUT_CLASSIFICATION	3.957312798924137E-6	DEFECT
// meter angle	WITHOUT_CLASSIFICATION	0.9999949570423041	WITHOUT_CLASSIFICATION	5.04295769582462E-6	DEFECT
//key	WITHOUT_CLASSIFICATION	0.9998921306196434	WITHOUT_CLASSIFICATION	1.0786938035648858E-4	DEFECT
//paint	WITHOUT_CLASSIFICATION	0.9999692198561215	WITHOUT_CLASSIFICATION	3.078014387851929E-5	DEFECT
//stroke	WITHOUT_CLASSIFICATION	0.9999724801449579	WITHOUT_CLASSIFICATION	2.751985504200822E-5	DEFECT
//outlinePaint	WITHOUT_CLASSIFICATION	0.9999896359073184	WITHOUT_CLASSIFICATION	1.0364092681536573E-5	DEFECT
//outlineStroke	WITHOUT_CLASSIFICATION	0.9999773831013867	WITHOUT_CLASSIFICATION	2.2616898613216036E-5	DEFECT
//alpha	WITHOUT_CLASSIFICATION	0.9999793745454679	WITHOUT_CLASSIFICATION	2.0625454532118574E-5	DEFECT
// check null argument...	WITHOUT_CLASSIFICATION	0.9999962540624275	WITHOUT_CLASSIFICATION	3.745937572304011E-6	DEFECT
// drawBorder	WITHOUT_CLASSIFICATION	0.9999964361072241	WITHOUT_CLASSIFICATION	3.5638927759451736E-6	DEFECT
// rosePaint	WITHOUT_CLASSIFICATION	0.999999440861943	WITHOUT_CLASSIFICATION	5.591380569275249E-7	DEFECT
// roseCenterPaint	WITHOUT_CLASSIFICATION	0.9999993171828154	WITHOUT_CLASSIFICATION	6.828171846271496E-7	DEFECT
// roseHighlightPaint	WITHOUT_CLASSIFICATION	0.9999993297349223	WITHOUT_CLASSIFICATION	6.702650777173632E-7	DEFECT
// interiorGap...	WITHOUT_CLASSIFICATION	0.9999893824961303	WITHOUT_CLASSIFICATION	1.0617503869561045E-5	DEFECT
// circular	WITHOUT_CLASSIFICATION	0.9999991247354822	WITHOUT_CLASSIFICATION	8.75264517849418E-7	DEFECT
// direction	WITHOUT_CLASSIFICATION	0.999993946103368	WITHOUT_CLASSIFICATION	6.053896631982024E-6	DEFECT
// ignoreNullValues	WITHOUT_CLASSIFICATION	0.9999976198404407	WITHOUT_CLASSIFICATION	2.3801595593151878E-6	DEFECT
// sectionPaint	WITHOUT_CLASSIFICATION	0.9999993415320968	WITHOUT_CLASSIFICATION	6.584679031603939E-7	DEFECT
// sectionPaintMap	WITHOUT_CLASSIFICATION	0.9999989432997586	WITHOUT_CLASSIFICATION	1.05670024135582E-6	DEFECT
// baseSectionPaint	WITHOUT_CLASSIFICATION	0.9999988562719075	WITHOUT_CLASSIFICATION	1.143728092452612E-6	DEFECT
// sectionOutlinePaint	WITHOUT_CLASSIFICATION	0.9999986254395065	WITHOUT_CLASSIFICATION	1.3745604935154501E-6	DEFECT
// sectionOutlinePaintList	WITHOUT_CLASSIFICATION	0.9999987469979742	WITHOUT_CLASSIFICATION	1.2530020259080934E-6	DEFECT
// baseSectionOutlinePaint	WITHOUT_CLASSIFICATION	0.9999976124536761	WITHOUT_CLASSIFICATION	2.387546323839957E-6	DEFECT
// sectionOutlineStrokeList	WITHOUT_CLASSIFICATION	0.9999979231234641	WITHOUT_CLASSIFICATION	2.0768765359173046E-6	DEFECT
// baseSectionOutlineStroke	WITHOUT_CLASSIFICATION	0.9999959454462192	WITHOUT_CLASSIFICATION	4.054553780844634E-6	DEFECT
// shadowPaint	WITHOUT_CLASSIFICATION	0.9999990206003669	WITHOUT_CLASSIFICATION	9.793996330867168E-7	DEFECT
// shadowXOffset	WITHOUT_CLASSIFICATION	0.9999976868490028	WITHOUT_CLASSIFICATION	2.3131509971182858E-6	DEFECT
// shadowYOffset	WITHOUT_CLASSIFICATION	0.9999986309353415	WITHOUT_CLASSIFICATION	1.3690646584474202E-6	DEFECT
// labelOutlinePaint	WITHOUT_CLASSIFICATION	0.999997950266707	WITHOUT_CLASSIFICATION	2.0497332929861705E-6	DEFECT
// labelOutlineStroke	WITHOUT_CLASSIFICATION	0.9999896487855494	WITHOUT_CLASSIFICATION	1.0351214450689365E-5	DEFECT
// labelShadowPaint	WITHOUT_CLASSIFICATION	0.9999984603275672	WITHOUT_CLASSIFICATION	1.5396724327061826E-6	DEFECT
// explodePercentages	WITHOUT_CLASSIFICATION	0.99999953684461	WITHOUT_CLASSIFICATION	4.631553899284109E-7	DEFECT
// backgroundImage	WITHOUT_CLASSIFICATION	0.9999984460351139	WITHOUT_CLASSIFICATION	1.5539648860776786E-6	DEFECT
// startAngle	WITHOUT_CLASSIFICATION	0.9999996051951023	WITHOUT_CLASSIFICATION	3.948048976218814E-7	DEFECT
// backgroundImageAlignment	WITHOUT_CLASSIFICATION	0.9999988502486752	WITHOUT_CLASSIFICATION	1.149751324835361E-6	DEFECT
// backgroundImageAlpha	WITHOUT_CLASSIFICATION	0.999998429558119	WITHOUT_CLASSIFICATION	1.5704418810788014E-6	DEFECT
// outlinePaint	WITHOUT_CLASSIFICATION	0.9999991235292298	WITHOUT_CLASSIFICATION	8.764707702539642E-7	DEFECT
// shadowGenerator	WITHOUT_CLASSIFICATION	0.9999988296631986	WITHOUT_CLASSIFICATION	1.170336801314962E-6	DEFECT
// direction	WITHOUT_CLASSIFICATION	0.999993946103368	WITHOUT_CLASSIFICATION	6.053896631982024E-6	DEFECT
// labelLinkPaint	WITHOUT_CLASSIFICATION	0.9999982407954388	WITHOUT_CLASSIFICATION	1.759204561161566E-6	DEFECT
// maximumLabelWidth	WITHOUT_CLASSIFICATION	0.9999975291052952	WITHOUT_CLASSIFICATION	2.470894704879616E-6	DEFECT
// links visible	WITHOUT_CLASSIFICATION	0.9999918346785722	WITHOUT_CLASSIFICATION	8.165321427696426E-6	DEFECT
// labelGap	WITHOUT_CLASSIFICATION	0.9999972101659196	WITHOUT_CLASSIFICATION	2.789834080511051E-6	DEFECT
// toolTipGenerator	WITHOUT_CLASSIFICATION	0.9999975541590752	WITHOUT_CLASSIFICATION	2.4458409247286755E-6	DEFECT
// linkMargin	WITHOUT_CLASSIFICATION	0.9999948136699469	WITHOUT_CLASSIFICATION	5.186330053135842E-6	DEFECT
// legendItemShape	WITHOUT_CLASSIFICATION	0.9999959940452839	WITHOUT_CLASSIFICATION	4.005954716111994E-6	DEFECT
// labelLinkStroke	WITHOUT_CLASSIFICATION	0.9999974097741678	WITHOUT_CLASSIFICATION	2.5902258322722994E-6	DEFECT
// minimumArcAngleToDraw	WITHOUT_CLASSIFICATION	0.9999921330967471	WITHOUT_CLASSIFICATION	7.86690325291715E-6	DEFECT
// urlGenerator	WITHOUT_CLASSIFICATION	0.9999981084516504	WITHOUT_CLASSIFICATION	1.891548349600372E-6	DEFECT
// legendLabelGenerator	WITHOUT_CLASSIFICATION	0.9999960540134314	WITHOUT_CLASSIFICATION	3.94598656865432E-6	DEFECT
// legendItemShape	WITHOUT_CLASSIFICATION	0.9999959940452839	WITHOUT_CLASSIFICATION	4.005954716111994E-6	DEFECT
// legendLabelToolTipGenerator	WITHOUT_CLASSIFICATION	0.999996392337177	WITHOUT_CLASSIFICATION	3.6076628230784413E-6	DEFECT
// legendLabelURLGenerator	WITHOUT_CLASSIFICATION	0.9999960813970148	WITHOUT_CLASSIFICATION	3.918602985223009E-6	DEFECT
// autoPopulateSectionPaint	WITHOUT_CLASSIFICATION	0.9999972846941333	WITHOUT_CLASSIFICATION	2.7153058667949544E-6	DEFECT
// autoPopulateSectionOutlinePaint	WITHOUT_CLASSIFICATION	0.999996943225071	WITHOUT_CLASSIFICATION	3.0567749290621812E-6	DEFECT
// we use ValueMarker for the tests, because we need a concrete // subclass...	WITHOUT_CLASSIFICATION	0.9999999221885507	WITHOUT_CLASSIFICATION	7.781144929601277E-8	DEFECT
// autoPopulateSectionOutlineStroke	WITHOUT_CLASSIFICATION	0.9999956218293096	WITHOUT_CLASSIFICATION	4.3781706904577705E-6	DEFECT
// check that the URL generator has been cloned	WITHOUT_CLASSIFICATION	0.999995859425321	WITHOUT_CLASSIFICATION	4.1405746790111605E-6	DEFECT
// check that the URL generator has been cloned	WITHOUT_CLASSIFICATION	0.999995859425321	WITHOUT_CLASSIFICATION	4.1405746790111605E-6	DEFECT
// change the shape and make sure it only affects p1	WITHOUT_CLASSIFICATION	0.9999998735019806	WITHOUT_CLASSIFICATION	1.2649801946022631E-7	DEFECT
// change the generator and make sure it only affects p1	WITHOUT_CLASSIFICATION	0.999999895896464	WITHOUT_CLASSIFICATION	1.0410353599885561E-7	DEFECT
// change the generator and make sure it only affects p1	WITHOUT_CLASSIFICATION	0.999999895896464	WITHOUT_CLASSIFICATION	1.0410353599885561E-7	DEFECT
// check that null items are ignored if requested	WITHOUT_CLASSIFICATION	0.9999995916532193	WITHOUT_CLASSIFICATION	4.083467807730672E-7	DEFECT
// check that zero items are ignored if requested	WITHOUT_CLASSIFICATION	0.9999998146657894	WITHOUT_CLASSIFICATION	1.8533421061352924E-7	DEFECT
// check that negative items are always ignored	WITHOUT_CLASSIFICATION	0.9999991683182413	WITHOUT_CLASSIFICATION	8.316817586220819E-7	DEFECT
// noDataMessage	WITHOUT_CLASSIFICATION	0.9999915041769115	WITHOUT_CLASSIFICATION	8.495823088610712E-6	DEFECT
// noDataMessageFont	WITHOUT_CLASSIFICATION	0.9999948040113523	WITHOUT_CLASSIFICATION	5.19598864774814E-6	DEFECT
// noDataMessagePaint	WITHOUT_CLASSIFICATION	0.9999875049903104	WITHOUT_CLASSIFICATION	1.2495009689518286E-5	DEFECT
// outlineVisible	WITHOUT_CLASSIFICATION	0.9999982000259087	WITHOUT_CLASSIFICATION	1.799974091296912E-6	DEFECT
// outlineStroke	WITHOUT_CLASSIFICATION	0.9999980873122705	WITHOUT_CLASSIFICATION	1.912687729609944E-6	DEFECT
// foregroundAlpha	WITHOUT_CLASSIFICATION	0.9999995202750407	WITHOUT_CLASSIFICATION	4.797249592454695E-7	DEFECT
// backgroundAlpha	WITHOUT_CLASSIFICATION	0.9999994898520156	WITHOUT_CLASSIFICATION	5.101479844559428E-7	DEFECT
// drawingSupplier	WITHOUT_CLASSIFICATION	0.9999989960716872	WITHOUT_CLASSIFICATION	1.0039283128315441E-6	DEFECT
// try a null collection	WITHOUT_CLASSIFICATION	0.9999428316027269	WITHOUT_CLASSIFICATION	5.7168397273150045E-5	DEFECT
// dataExtractOrder	WITHOUT_CLASSIFICATION	0.9999957921733217	WITHOUT_CLASSIFICATION	4.207826678311429E-6	DEFECT
// headPercent	WITHOUT_CLASSIFICATION	0.9999984293577922	WITHOUT_CLASSIFICATION	1.5706422078906077E-6	DEFECT
// interiorGap	WITHOUT_CLASSIFICATION	0.999991478262448	WITHOUT_CLASSIFICATION	8.521737551847931E-6	DEFECT
// maxValue	WITHOUT_CLASSIFICATION	0.9999899225934095	WITHOUT_CLASSIFICATION	1.0077406590628511E-5	DEFECT
// secondary renderers	WITHOUT_CLASSIFICATION	0.9999972365507305	WITHOUT_CLASSIFICATION	2.7634492694611688E-6	DEFECT
// row keys...	WITHOUT_CLASSIFICATION	0.9999958996012179	WITHOUT_CLASSIFICATION	4.10039878202011E-6	DEFECT
// row keys...	WITHOUT_CLASSIFICATION	0.9999958996012179	WITHOUT_CLASSIFICATION	4.10039878202011E-6	DEFECT
// column keys...	WITHOUT_CLASSIFICATION	0.9999963760877787	WITHOUT_CLASSIFICATION	3.6239122213467515E-6	DEFECT
// padding	WITHOUT_CLASSIFICATION	0.9999927878590255	WITHOUT_CLASSIFICATION	7.212140974665563E-6	DEFECT
// column keys...	WITHOUT_CLASSIFICATION	0.9999963760877787	WITHOUT_CLASSIFICATION	3.6239122213467515E-6	DEFECT
// column keys...	WITHOUT_CLASSIFICATION	0.9999963760877787	WITHOUT_CLASSIFICATION	3.6239122213467515E-6	DEFECT
// column keys...	WITHOUT_CLASSIFICATION	0.9999963760877787	WITHOUT_CLASSIFICATION	3.6239122213467515E-6	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999872438634059	WITHOUT_CLASSIFICATION	1.2756136594073208E-5	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999872438634059	WITHOUT_CLASSIFICATION	1.2756136594073208E-5	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999872438634059	WITHOUT_CLASSIFICATION	1.2756136594073208E-5	DEFECT
// labelFont	WITHOUT_CLASSIFICATION	0.9999972706705306	WITHOUT_CLASSIFICATION	2.7293294693638328E-6	DEFECT
// labelPaint	WITHOUT_CLASSIFICATION	0.9999979491584062	WITHOUT_CLASSIFICATION	2.050841593733493E-6	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9998503999155552	WITHOUT_CLASSIFICATION	1.4960008444476604E-4	DEFECT
// axisLinePaint	WITHOUT_CLASSIFICATION	0.9999973486584914	WITHOUT_CLASSIFICATION	2.651341508501466E-6	DEFECT
// axisLineStroke	WITHOUT_CLASSIFICATION	0.9999953777038337	WITHOUT_CLASSIFICATION	4.622296166219056E-6	DEFECT
// remove plot2, but plot1 is removed instead	WITHOUT_CLASSIFICATION	0.9999901817781507	WITHOUT_CLASSIFICATION	9.818221849304252E-6	DEFECT
// orientation...	WITHOUT_CLASSIFICATION	0.9999970184195826	WITHOUT_CLASSIFICATION	2.9815804174267098E-6	DEFECT
// axisOffset...	WITHOUT_CLASSIFICATION	0.9999939211242681	WITHOUT_CLASSIFICATION	6.078875731843732E-6	DEFECT
// labelGenerator	WITHOUT_CLASSIFICATION	0.9999973653851988	WITHOUT_CLASSIFICATION	2.6346148010753033E-6	DEFECT
// toolTipGenerator	WITHOUT_CLASSIFICATION	0.9999975541590752	WITHOUT_CLASSIFICATION	2.4458409247286755E-6	DEFECT
// urlGenerator	WITHOUT_CLASSIFICATION	0.9999981084516504	WITHOUT_CLASSIFICATION	1.891548349600372E-6	DEFECT
// change a series paint	WITHOUT_CLASSIFICATION	0.9999994376521507	WITHOUT_CLASSIFICATION	5.623478492924287E-7	DEFECT
// baseSeriesOutlineStroke	WITHOUT_CLASSIFICATION	0.9999943117730423	WITHOUT_CLASSIFICATION	5.688226957659244E-6	DEFECT
// valueFont	WITHOUT_CLASSIFICATION	0.9999954185990584	WITHOUT_CLASSIFICATION	4.5814009415302695E-6	DEFECT
// webFilled	WITHOUT_CLASSIFICATION	0.9999966289878874	WITHOUT_CLASSIFICATION	3.371012112562358E-6	DEFECT
// change a series outline paint	WITHOUT_CLASSIFICATION	0.9999998959707614	WITHOUT_CLASSIFICATION	1.0402923850046876E-7	DEFECT
// axisLabelGap	WITHOUT_CLASSIFICATION	0.9999981601467196	WITHOUT_CLASSIFICATION	1.83985328043378E-6	DEFECT
// thermometerPaint	WITHOUT_CLASSIFICATION	0.9999983136073609	WITHOUT_CLASSIFICATION	1.6863926390488087E-6	DEFECT
// change the legendItemShape	WITHOUT_CLASSIFICATION	0.9999985615773392	WITHOUT_CLASSIFICATION	1.4384226606921607E-6	DEFECT
// secondary DomainAxisLocations...	WITHOUT_CLASSIFICATION	0.9999967560905977	WITHOUT_CLASSIFICATION	3.2439094024107305E-6	DEFECT
// change a series outline stroke	WITHOUT_CLASSIFICATION	0.9999996724345405	WITHOUT_CLASSIFICATION	3.275654595691124E-7	DEFECT
// valueLocation	WITHOUT_CLASSIFICATION	0.9999883785147012	WITHOUT_CLASSIFICATION	1.1621485298716075E-5	DEFECT
// thermometerStroke	WITHOUT_CLASSIFICATION	0.99999423557921	WITHOUT_CLASSIFICATION	5.764420789937447E-6	DEFECT
// valuePaint	WITHOUT_CLASSIFICATION	0.9999964755584337	WITHOUT_CLASSIFICATION	3.5244415661795565E-6	DEFECT
// axisLocation	WITHOUT_CLASSIFICATION	0.9999881846372365	WITHOUT_CLASSIFICATION	1.18153627635143E-5	DEFECT
// showValueLines	WITHOUT_CLASSIFICATION	0.9999976871717153	WITHOUT_CLASSIFICATION	2.3128282847555833E-6	DEFECT
// domainAxisLocation...	WITHOUT_CLASSIFICATION	0.9999579572802206	WITHOUT_CLASSIFICATION	4.204271977935336E-5	DEFECT
// valueFormat	WITHOUT_CLASSIFICATION	0.9999910267008475	WITHOUT_CLASSIFICATION	8.973299152434546E-6	DEFECT
// this doesn't work	WITHOUT_CLASSIFICATION	0.9994621826682142	WITHOUT_CLASSIFICATION	5.378173317856945E-4	DEFECT
// mercuryPaint	WITHOUT_CLASSIFICATION	0.9999974424045118	WITHOUT_CLASSIFICATION	2.557595488252742E-6	DEFECT
// rangeAxisLocation...	WITHOUT_CLASSIFICATION	0.9999869252433855	WITHOUT_CLASSIFICATION	1.3074756614615316E-5	DEFECT
// domainAxis...	WITHOUT_CLASSIFICATION	0.9999869349229027	WITHOUT_CLASSIFICATION	1.3065077097308881E-5	DEFECT
// secondary DomainAxes...	WITHOUT_CLASSIFICATION	0.9999958517110268	WITHOUT_CLASSIFICATION	4.148288973158983E-6	DEFECT
// secondary RangeAxisLocations...	WITHOUT_CLASSIFICATION	0.9999978641876484	WITHOUT_CLASSIFICATION	2.1358123516274544E-6	DEFECT
// rangeAxis...	WITHOUT_CLASSIFICATION	0.9999958870077839	WITHOUT_CLASSIFICATION	4.112992216122058E-6	DEFECT
// renderer	WITHOUT_CLASSIFICATION	0.9999969303343228	WITHOUT_CLASSIFICATION	3.069665677162338E-6	DEFECT
// secondary RangeAxes...	WITHOUT_CLASSIFICATION	0.9999974122369346	WITHOUT_CLASSIFICATION	2.5877630653319045E-6	DEFECT
// secondaryDatasetRangeAxisMap...	WITHOUT_CLASSIFICATION	0.9999978849165191	WITHOUT_CLASSIFICATION	2.1150834809168938E-6	DEFECT
// secondary DatasetDomainAxisMap...	WITHOUT_CLASSIFICATION	0.9999978796813015	WITHOUT_CLASSIFICATION	2.1203186986022613E-6	DEFECT
// try a collection with a single number plus a null	WITHOUT_CLASSIFICATION	0.9999927139344595	WITHOUT_CLASSIFICATION	7.286065540548429E-6	DEFECT
// create dataset 1...	WITHOUT_CLASSIFICATION	0.9999994569221132	WITHOUT_CLASSIFICATION	5.430778867303654E-7	DEFECT
// create dataset 1...	WITHOUT_CLASSIFICATION	0.9999994569221132	WITHOUT_CLASSIFICATION	5.430778867303654E-7	DEFECT
// lowerBound	WITHOUT_CLASSIFICATION	0.999998237200647	WITHOUT_CLASSIFICATION	1.7627993530274961E-6	DEFECT
// remove plot2, but plot1 is removed instead	WITHOUT_CLASSIFICATION	0.9999901817781507	WITHOUT_CLASSIFICATION	9.818221849304252E-6	DEFECT
// create subplot 1...	WITHOUT_CLASSIFICATION	0.9999996131612849	WITHOUT_CLASSIFICATION	3.868387151122548E-7	DEFECT
// create subplot 2...	WITHOUT_CLASSIFICATION	0.9999996422029096	WITHOUT_CLASSIFICATION	3.577970904511144E-7	DEFECT
// parent plot...	WITHOUT_CLASSIFICATION	0.9999989995763021	WITHOUT_CLASSIFICATION	1.000423697909548E-6	DEFECT
// add the subplots...	WITHOUT_CLASSIFICATION	0.9999981365755926	WITHOUT_CLASSIFICATION	1.863424407432601E-6	DEFECT
// domainGridlineStroke	WITHOUT_CLASSIFICATION	0.9999869935077622	WITHOUT_CLASSIFICATION	1.3006492237707999E-5	DEFECT
// domainGridlinePaint	WITHOUT_CLASSIFICATION	0.9999954264880605	WITHOUT_CLASSIFICATION	4.573511939460043E-6	DEFECT
// rangeGridlinesVisible	WITHOUT_CLASSIFICATION	0.9999953805031072	WITHOUT_CLASSIFICATION	4.619496892781014E-6	DEFECT
// rangeGridlineStroke	WITHOUT_CLASSIFICATION	0.9999922559378019	WITHOUT_CLASSIFICATION	7.744062198044262E-6	DEFECT
// rangeCrosshairVisible	WITHOUT_CLASSIFICATION	0.9999959409993251	WITHOUT_CLASSIFICATION	4.059000674902512E-6	DEFECT
// rangeCrosshairValue	WITHOUT_CLASSIFICATION	0.9999952320621938	WITHOUT_CLASSIFICATION	4.767937806237478E-6	DEFECT
// rangeCrosshairStroke	WITHOUT_CLASSIFICATION	0.9999935290695408	WITHOUT_CLASSIFICATION	6.470930459196044E-6	DEFECT
// rangeCrosshairLockedOnData	WITHOUT_CLASSIFICATION	0.9999948798628051	WITHOUT_CLASSIFICATION	5.1201371948316605E-6	DEFECT
// weight	WITHOUT_CLASSIFICATION	0.9999938768369196	WITHOUT_CLASSIFICATION	6.123163080369532E-6	DEFECT
// fixed legend items	WITHOUT_CLASSIFICATION	0.999978169105806	WITHOUT_CLASSIFICATION	2.1830894194004926E-5	DEFECT
// shadowGenerator	WITHOUT_CLASSIFICATION	0.9999988296631986	WITHOUT_CLASSIFICATION	1.170336801314962E-6	DEFECT
// should get IllegalArgumentException for negative index	WITHOUT_CLASSIFICATION	0.9999843005365956	WITHOUT_CLASSIFICATION	1.5699463404383944E-5	DEFECT
// we should be able to give a dataset an arbitrary index	WITHOUT_CLASSIFICATION	0.999974538598764	WITHOUT_CLASSIFICATION	2.5461401235989043E-5	DEFECT
// we should be able to give a renderer an arbitrary index	WITHOUT_CLASSIFICATION	0.9999425267249532	WITHOUT_CLASSIFICATION	5.747327504671744E-5	DEFECT
// add a second dataset	WITHOUT_CLASSIFICATION	0.9999988660951477	WITHOUT_CLASSIFICATION	1.1339048524362777E-6	DEFECT
// add a second dataset	WITHOUT_CLASSIFICATION	0.9999988660951477	WITHOUT_CLASSIFICATION	1.1339048524362777E-6	DEFECT
// by default, the renderer with index 0 is used	WITHOUT_CLASSIFICATION	0.9999976335450897	WITHOUT_CLASSIFICATION	2.366454910251684E-6	DEFECT
// now map the dataset to the second xAxis	WITHOUT_CLASSIFICATION	0.9999998544001315	WITHOUT_CLASSIFICATION	1.4559986847271223E-7	DEFECT
// now map the dataset to the second xAxis	WITHOUT_CLASSIFICATION	0.9999998544001315	WITHOUT_CLASSIFICATION	1.4559986847271223E-7	DEFECT
// add a second dataset, plotted against a second x axis	WITHOUT_CLASSIFICATION	0.9999995563975934	WITHOUT_CLASSIFICATION	4.436024065736508E-7	DEFECT
// add a second dataset, plotted against a second axis	WITHOUT_CLASSIFICATION	0.9999997234261646	WITHOUT_CLASSIFICATION	2.765738353960747E-7	DEFECT
// rangeZeroBaselineVisible	WITHOUT_CLASSIFICATION	0.9999957332532029	WITHOUT_CLASSIFICATION	4.2667467971955015E-6	DEFECT
// rangeZeroBaselineStroke	WITHOUT_CLASSIFICATION	0.9999960319614459	WITHOUT_CLASSIFICATION	3.968038554133008E-6	DEFECT
// rangeZeroBaselinePaint	WITHOUT_CLASSIFICATION	0.9999986552502065	WITHOUT_CLASSIFICATION	1.3447497935522326E-6	DEFECT
// range markers	WITHOUT_CLASSIFICATION	0.999994907143706	WITHOUT_CLASSIFICATION	5.092856293983246E-6	DEFECT
// secondary range markers	WITHOUT_CLASSIFICATION	0.9999926161631715	WITHOUT_CLASSIFICATION	7.383836828553101E-6	DEFECT
// quadrant origin	WITHOUT_CLASSIFICATION	0.999998480319134	WITHOUT_CLASSIFICATION	1.5196808661354512E-6	DEFECT
// quadrant paint	WITHOUT_CLASSIFICATION	0.9999984492418045	WITHOUT_CLASSIFICATION	1.550758195578503E-6	DEFECT
// verify that the plot is listening to the cloned renderer	WITHOUT_CLASSIFICATION	0.9999978498622648	WITHOUT_CLASSIFICATION	2.1501377352645053E-6	DEFECT
// no renderer 1	WITHOUT_CLASSIFICATION	0.9999982386713149	WITHOUT_CLASSIFICATION	1.7613286851680765E-6	DEFECT
// actually removes a1	WITHOUT_CLASSIFICATION	0.9999809572690518	WITHOUT_CLASSIFICATION	1.904273094818984E-5	DEFECT
// set up some objects...	WITHOUT_CLASSIFICATION	0.9999970395698613	WITHOUT_CLASSIFICATION	2.960430138678582E-6	DEFECT
// paint sequence	WITHOUT_CLASSIFICATION	0.999999315844236	WITHOUT_CLASSIFICATION	6.841557640623629E-7	DEFECT
// outline paint sequence	WITHOUT_CLASSIFICATION	0.9999994205040104	WITHOUT_CLASSIFICATION	5.79495989739996E-7	DEFECT
// outline stroke sequence	WITHOUT_CLASSIFICATION	0.9999987755899259	WITHOUT_CLASSIFICATION	1.224410074056126E-6	DEFECT
// shape sequence	WITHOUT_CLASSIFICATION	0.9999990469224251	WITHOUT_CLASSIFICATION	9.530775748205163E-7	DEFECT
// paint index	WITHOUT_CLASSIFICATION	0.9999872680820782	WITHOUT_CLASSIFICATION	1.2731917921931204E-5	DEFECT
// outline paint index	WITHOUT_CLASSIFICATION	0.9999906113781271	WITHOUT_CLASSIFICATION	9.388621872997488E-6	DEFECT
// outline stroke index	WITHOUT_CLASSIFICATION	0.999993021984009	WITHOUT_CLASSIFICATION	6.978015991131228E-6	DEFECT
// shape index	WITHOUT_CLASSIFICATION	0.9999940443191645	WITHOUT_CLASSIFICATION	5.9556808355282034E-6	DEFECT
// create dataset 2...	WITHOUT_CLASSIFICATION	0.999999503706191	WITHOUT_CLASSIFICATION	4.96293808994024E-7	DEFECT
// lowerBound	WITHOUT_CLASSIFICATION	0.999998237200647	WITHOUT_CLASSIFICATION	1.7627993530274961E-6	DEFECT
// upperBound	WITHOUT_CLASSIFICATION	0.999996544825702	WITHOUT_CLASSIFICATION	3.4551742979778354E-6	DEFECT
// startAngle	WITHOUT_CLASSIFICATION	0.9999996051951023	WITHOUT_CLASSIFICATION	3.948048976218814E-7	DEFECT
// extent	WITHOUT_CLASSIFICATION	0.9999975230398065	WITHOUT_CLASSIFICATION	2.476960193580071E-6	DEFECT
// tickRadius	WITHOUT_CLASSIFICATION	0.9999983108014734	WITHOUT_CLASSIFICATION	1.6891985266558915E-6	DEFECT
// backgroundPaint	WITHOUT_CLASSIFICATION	0.9999993363842294	WITHOUT_CLASSIFICATION	6.636157705204189E-7	DEFECT
// outlinePaint	WITHOUT_CLASSIFICATION	0.9999991235292298	WITHOUT_CLASSIFICATION	8.764707702539642E-7	DEFECT
// font	WITHOUT_CLASSIFICATION	0.9999952431790771	WITHOUT_CLASSIFICATION	4.756820922919306E-6	DEFECT
// paint	WITHOUT_CLASSIFICATION	0.9999955860788465	WITHOUT_CLASSIFICATION	4.413921153470166E-6	DEFECT
// textAnchor	WITHOUT_CLASSIFICATION	0.9999973853408188	WITHOUT_CLASSIFICATION	2.6146591811593584E-6	DEFECT
// stroke	WITHOUT_CLASSIFICATION	0.9999981374337199	WITHOUT_CLASSIFICATION	1.862566280029E-6	DEFECT
// now make a change to the renderer and see if it triggers a plot // change event...	WITHOUT_CLASSIFICATION	0.999999967032533	WITHOUT_CLASSIFICATION	3.2967466983681235E-8	DEFECT
// if multiple axes are mapped, the first in the list should be // returned...	WITHOUT_CLASSIFICATION	0.9999804750164292	WITHOUT_CLASSIFICATION	1.9524983570856663E-5	DEFECT
// add a second renderer with the same index as dataset2, now it will // be used	WITHOUT_CLASSIFICATION	0.9999984422612879	WITHOUT_CLASSIFICATION	1.5577387120601848E-6	DEFECT
// outlineStroke	WITHOUT_CLASSIFICATION	0.9999980873122705	WITHOUT_CLASSIFICATION	1.912687729609944E-6	DEFECT
// check the case where there is a secondary dataset that doesn't // have a renderer (i.e. falls back to renderer 0)	WITHOUT_CLASSIFICATION	0.9999953300054525	WITHOUT_CLASSIFICATION	4.6699945475688605E-6	DEFECT
// now remove a3, but since a3.equals(a1), this will in fact remove // a1...	WITHOUT_CLASSIFICATION	0.9998631737083729	WITHOUT_CLASSIFICATION	1.3682629162717233E-4	DEFECT
// check an inherited attribute	WITHOUT_CLASSIFICATION	0.9999899264696192	WITHOUT_CLASSIFICATION	1.0073530380783632E-5	DEFECT
// check that the listener lists are independent	WITHOUT_CLASSIFICATION	0.9999975042388828	WITHOUT_CLASSIFICATION	2.4957611171415987E-6	DEFECT
// check that the listener lists are independent	WITHOUT_CLASSIFICATION	0.9999975042388828	WITHOUT_CLASSIFICATION	2.4957611171415987E-6	DEFECT
// check that the listener lists are independent	WITHOUT_CLASSIFICATION	0.9999975042388828	WITHOUT_CLASSIFICATION	2.4957611171415987E-6	DEFECT
// check that the listener lists are independent	WITHOUT_CLASSIFICATION	0.9999975042388828	WITHOUT_CLASSIFICATION	2.4957611171415987E-6	DEFECT
// visible	WITHOUT_CLASSIFICATION	0.9999956925318719	WITHOUT_CLASSIFICATION	4.307468128114963E-6	DEFECT
// radius	WITHOUT_CLASSIFICATION	0.9999987240817196	WITHOUT_CLASSIFICATION	1.2759182803778533E-6	DEFECT
// test a default instance	WITHOUT_CLASSIFICATION	0.9999944621352869	WITHOUT_CLASSIFICATION	5.537864713137014E-6	DEFECT
// test a default instance	WITHOUT_CLASSIFICATION	0.9999944621352869	WITHOUT_CLASSIFICATION	5.537864713137014E-6	DEFECT
// test a default instance	WITHOUT_CLASSIFICATION	0.9999944621352869	WITHOUT_CLASSIFICATION	5.537864713137014E-6	DEFECT
// test a default instance	WITHOUT_CLASSIFICATION	0.9999944621352869	WITHOUT_CLASSIFICATION	5.537864713137014E-6	DEFECT
// test a default instance	WITHOUT_CLASSIFICATION	0.9999944621352869	WITHOUT_CLASSIFICATION	5.537864713137014E-6	DEFECT
// test a default instance	WITHOUT_CLASSIFICATION	0.9999944621352869	WITHOUT_CLASSIFICATION	5.537864713137014E-6	DEFECT
// radius	WITHOUT_CLASSIFICATION	0.9999987240817196	WITHOUT_CLASSIFICATION	1.2759182803778533E-6	DEFECT
// radius	WITHOUT_CLASSIFICATION	0.9999987240817196	WITHOUT_CLASSIFICATION	1.2759182803778533E-6	DEFECT
// foregroundPaint	WITHOUT_CLASSIFICATION	0.9999993759594058	WITHOUT_CLASSIFICATION	6.240405942614697E-7	DEFECT
// background paint	WITHOUT_CLASSIFICATION	0.999999483718324	WITHOUT_CLASSIFICATION	5.162816760655492E-7	DEFECT
// foreground paint	WITHOUT_CLASSIFICATION	0.9999995145071359	WITHOUT_CLASSIFICATION	4.854928641234563E-7	DEFECT
// inner radius	WITHOUT_CLASSIFICATION	0.999993627257106	WITHOUT_CLASSIFICATION	6.372742893922522E-6	DEFECT
// outer radius	WITHOUT_CLASSIFICATION	0.9999994471131501	WITHOUT_CLASSIFICATION	5.528868499159078E-7	DEFECT
// dataset index	WITHOUT_CLASSIFICATION	0.9999954800075979	WITHOUT_CLASSIFICATION	4.519992402079094E-6	DEFECT
// dataset index	WITHOUT_CLASSIFICATION	0.9999954800075979	WITHOUT_CLASSIFICATION	4.519992402079094E-6	DEFECT
// angle	WITHOUT_CLASSIFICATION	0.9999945616871883	WITHOUT_CLASSIFICATION	5.43831281180007E-6	DEFECT
// frameAnchor	WITHOUT_CLASSIFICATION	0.9999956522010207	WITHOUT_CLASSIFICATION	4.347798979349193E-6	DEFECT
// templateValue	WITHOUT_CLASSIFICATION	0.9999956307276466	WITHOUT_CLASSIFICATION	4.369272353385168E-6	DEFECT
// valueAnchor	WITHOUT_CLASSIFICATION	0.9999968732757222	WITHOUT_CLASSIFICATION	3.1267242777649647E-6	DEFECT
// fill paint	WITHOUT_CLASSIFICATION	0.9999939976955405	WITHOUT_CLASSIFICATION	6.0023044593452535E-6	DEFECT
// outline paint	WITHOUT_CLASSIFICATION	0.9999987844192297	WITHOUT_CLASSIFICATION	1.2155807703151121E-6	DEFECT
// outline stroke	WITHOUT_CLASSIFICATION	0.9999987906802815	WITHOUT_CLASSIFICATION	1.2093197184919033E-6	DEFECT
// test a customised instance	WITHOUT_CLASSIFICATION	0.9999916270246957	WITHOUT_CLASSIFICATION	8.37297530433174E-6	DEFECT
// test a custom instance	WITHOUT_CLASSIFICATION	0.9999831015052824	WITHOUT_CLASSIFICATION	1.689849471766138E-5	DEFECT
// background	WITHOUT_CLASSIFICATION	0.9999984974813163	WITHOUT_CLASSIFICATION	1.50251868366316E-6	DEFECT
// dial cap	WITHOUT_CLASSIFICATION	0.9999916647752374	WITHOUT_CLASSIFICATION	8.33522476272533E-6	DEFECT
// frame	WITHOUT_CLASSIFICATION	0.9999942566561426	WITHOUT_CLASSIFICATION	5.743343857344434E-6	DEFECT
// view	WITHOUT_CLASSIFICATION	0.9999940265672067	WITHOUT_CLASSIFICATION	5.973432793390279E-6	DEFECT
// layer	WITHOUT_CLASSIFICATION	0.9999969469456994	WITHOUT_CLASSIFICATION	3.0530543006169448E-6	DEFECT
// outlinePaint	WITHOUT_CLASSIFICATION	0.9999991235292298	WITHOUT_CLASSIFICATION	8.764707702539642E-7	DEFECT
// font	WITHOUT_CLASSIFICATION	0.9999952431790771	WITHOUT_CLASSIFICATION	4.756820922919306E-6	DEFECT
// paint	WITHOUT_CLASSIFICATION	0.9999955860788465	WITHOUT_CLASSIFICATION	4.413921153470166E-6	DEFECT
// stroke	WITHOUT_CLASSIFICATION	0.9999981374337199	WITHOUT_CLASSIFICATION	1.862566280029E-6	DEFECT
// shape	WITHOUT_CLASSIFICATION	0.9999971982697747	WITHOUT_CLASSIFICATION	2.8017302252657677E-6	DEFECT
// tickLabelFont	WITHOUT_CLASSIFICATION	0.9999987239669956	WITHOUT_CLASSIFICATION	1.2760330044346361E-6	DEFECT
// tickLabelPaint	WITHOUT_CLASSIFICATION	0.9999990915545395	WITHOUT_CLASSIFICATION	9.084454605641173E-7	DEFECT
// outlineStroke	WITHOUT_CLASSIFICATION	0.9999980873122705	WITHOUT_CLASSIFICATION	1.912687729609944E-6	DEFECT
// check an inherited attribute	WITHOUT_CLASSIFICATION	0.9999899264696192	WITHOUT_CLASSIFICATION	1.0073530380783632E-5	DEFECT
// check that the listener lists are independent	WITHOUT_CLASSIFICATION	0.9999975042388828	WITHOUT_CLASSIFICATION	2.4957611171415987E-6	DEFECT
// check that the listener lists are independent	WITHOUT_CLASSIFICATION	0.9999975042388828	WITHOUT_CLASSIFICATION	2.4957611171415987E-6	DEFECT
// test a default instance	WITHOUT_CLASSIFICATION	0.9999944621352869	WITHOUT_CLASSIFICATION	5.537864713137014E-6	DEFECT
// test a default instance	WITHOUT_CLASSIFICATION	0.9999944621352869	WITHOUT_CLASSIFICATION	5.537864713137014E-6	DEFECT
// test a default instance	WITHOUT_CLASSIFICATION	0.9999944621352869	WITHOUT_CLASSIFICATION	5.537864713137014E-6	DEFECT
// radius	WITHOUT_CLASSIFICATION	0.9999987240817196	WITHOUT_CLASSIFICATION	1.2759182803778533E-6	DEFECT
// angle	WITHOUT_CLASSIFICATION	0.9999945616871883	WITHOUT_CLASSIFICATION	5.43831281180007E-6	DEFECT
// test a customised instance	WITHOUT_CLASSIFICATION	0.9999916270246957	WITHOUT_CLASSIFICATION	8.37297530433174E-6	DEFECT
// test a customised instance	WITHOUT_CLASSIFICATION	0.9999916270246957	WITHOUT_CLASSIFICATION	8.37297530433174E-6	DEFECT
// test a custom instance	WITHOUT_CLASSIFICATION	0.9999831015052824	WITHOUT_CLASSIFICATION	1.689849471766138E-5	DEFECT
// majorTickIncrement	WITHOUT_CLASSIFICATION	0.9999933831944018	WITHOUT_CLASSIFICATION	6.616805598161607E-6	DEFECT
// majorTickLength	WITHOUT_CLASSIFICATION	0.9999931208755551	WITHOUT_CLASSIFICATION	6.879124444827394E-6	DEFECT
// majorTickPaint	WITHOUT_CLASSIFICATION	0.9999970352161857	WITHOUT_CLASSIFICATION	2.9647838144470686E-6	DEFECT
// majorTickStroke	WITHOUT_CLASSIFICATION	0.9999934056874636	WITHOUT_CLASSIFICATION	6.594312536317998E-6	DEFECT
// minorTickLength	WITHOUT_CLASSIFICATION	0.9999869649826456	WITHOUT_CLASSIFICATION	1.303501735426279E-5	DEFECT
// tickLabelOffset	WITHOUT_CLASSIFICATION	0.9999991180598055	WITHOUT_CLASSIFICATION	8.819401945189474E-7	DEFECT
// try a default instance	WITHOUT_CLASSIFICATION	0.9999941516923437	WITHOUT_CLASSIFICATION	5.848307656205504E-6	DEFECT
// try a customised instance	WITHOUT_CLASSIFICATION	0.999991398726249	WITHOUT_CLASSIFICATION	8.601273751057778E-6	DEFECT
// label	WITHOUT_CLASSIFICATION	0.9999968400108051	WITHOUT_CLASSIFICATION	3.1599891947731194E-6	DEFECT
// gradient paint transformer	WITHOUT_CLASSIFICATION	0.999996710225186	WITHOUT_CLASSIFICATION	3.2897748139805845E-6	DEFECT
// test default instance	WITHOUT_CLASSIFICATION	0.999995986137856	WITHOUT_CLASSIFICATION	4.013862143943372E-6	DEFECT
// have to use a concrete subclass...	WITHOUT_CLASSIFICATION	0.999999546666482	WITHOUT_CLASSIFICATION	4.533335179715758E-7	DEFECT
// seriesVisible	WITHOUT_CLASSIFICATION	0.9999986585707504	WITHOUT_CLASSIFICATION	1.341429249554746E-6	DEFECT
// seriesVisibleList	WITHOUT_CLASSIFICATION	0.9999991743337141	WITHOUT_CLASSIFICATION	8.256662858000839E-7	DEFECT
// baseSeriesVisible	WITHOUT_CLASSIFICATION	0.9999982169408546	WITHOUT_CLASSIFICATION	1.7830591454563731E-6	DEFECT
// seriesVisibleInLegendList	WITHOUT_CLASSIFICATION	0.9999984458906006	WITHOUT_CLASSIFICATION	1.5541093994179409E-6	DEFECT
// baseSeriesVisibleInLegend	WITHOUT_CLASSIFICATION	0.9999969304518186	WITHOUT_CLASSIFICATION	3.0695481814108967E-6	DEFECT
// paintList	WITHOUT_CLASSIFICATION	0.999997244463412	WITHOUT_CLASSIFICATION	2.7555365879559317E-6	DEFECT
// basePaint	WITHOUT_CLASSIFICATION	0.99999868665752	WITHOUT_CLASSIFICATION	1.3133424799045175E-6	DEFECT
// baseFillPaint	WITHOUT_CLASSIFICATION	0.9999989471814557	WITHOUT_CLASSIFICATION	1.0528185443306197E-6	DEFECT
// outlinePaintList	WITHOUT_CLASSIFICATION	0.9999995362913954	WITHOUT_CLASSIFICATION	4.6370860466475414E-7	DEFECT
// baseOutlinePaint	WITHOUT_CLASSIFICATION	0.9999991606466186	WITHOUT_CLASSIFICATION	8.393533814260993E-7	DEFECT
// strokeList	WITHOUT_CLASSIFICATION	0.9999981928672698	WITHOUT_CLASSIFICATION	1.8071327302496322E-6	DEFECT
// outlineStrokeList	WITHOUT_CLASSIFICATION	0.999999231393086	WITHOUT_CLASSIFICATION	7.686069139773064E-7	DEFECT
// baseOutlineStroke	WITHOUT_CLASSIFICATION	0.999998536686002	WITHOUT_CLASSIFICATION	1.4633139980812144E-6	DEFECT
// shapeList	WITHOUT_CLASSIFICATION	0.9999981900889807	WITHOUT_CLASSIFICATION	1.8099110193441873E-6	DEFECT
// baseShape	WITHOUT_CLASSIFICATION	0.9999963767870542	WITHOUT_CLASSIFICATION	3.6232129458030645E-6	DEFECT
// itemLabelsVisibleList	WITHOUT_CLASSIFICATION	0.9999891851845932	WITHOUT_CLASSIFICATION	1.0814815406697423E-5	DEFECT
// baseItemLabelsVisible	WITHOUT_CLASSIFICATION	0.9999965612211074	WITHOUT_CLASSIFICATION	3.4387788927106027E-6	DEFECT
// itemLabelFont	WITHOUT_CLASSIFICATION	0.9999960467596292	WITHOUT_CLASSIFICATION	3.95324037083915E-6	DEFECT
// baseItemLabelFont	WITHOUT_CLASSIFICATION	0.9999994078227058	WITHOUT_CLASSIFICATION	5.921772942548725E-7	DEFECT
// itemLabelPaint	WITHOUT_CLASSIFICATION	0.9999971855696314	WITHOUT_CLASSIFICATION	2.8144303686768705E-6	DEFECT
// itemLabelPaintList	WITHOUT_CLASSIFICATION	0.9999945856037319	WITHOUT_CLASSIFICATION	5.414396268136961E-6	DEFECT
// baseItemLabelPaint	WITHOUT_CLASSIFICATION	0.9999987110623518	WITHOUT_CLASSIFICATION	1.2889376481597782E-6	DEFECT
// positiveItemLabelPositionList;	WITHOUT_CLASSIFICATION	0.9999984869227372	WITHOUT_CLASSIFICATION	1.5130772627436664E-6	DEFECT
// basePositiveItemLabelPosition;	WITHOUT_CLASSIFICATION	0.9999991275082559	WITHOUT_CLASSIFICATION	8.724917439730714E-7	DEFECT
// negativeItemLabelPosition;	WITHOUT_CLASSIFICATION	0.9999983301525032	WITHOUT_CLASSIFICATION	1.6698474968126614E-6	DEFECT
// OUTLINE STROKE	WITHOUT_CLASSIFICATION	0.9999764738334873	WITHOUT_CLASSIFICATION	2.352616651266626E-5	DEFECT
// SHAPE	WITHOUT_CLASSIFICATION	0.9999912652898072	WITHOUT_CLASSIFICATION	8.734710192779392E-6	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9998503999155552	WITHOUT_CLASSIFICATION	1.4960008444476604E-4	DEFECT
// baseOutlinePaint	WITHOUT_CLASSIFICATION	0.9999991606466186	WITHOUT_CLASSIFICATION	8.393533814260993E-7	DEFECT
// itemLabelAnchorOffset	WITHOUT_CLASSIFICATION	0.9999956835245377	WITHOUT_CLASSIFICATION	4.316475462288547E-6	DEFECT
// createEntities;	WITHOUT_CLASSIFICATION	0.9999998145392472	WITHOUT_CLASSIFICATION	1.8546075280188095E-7	DEFECT
// createEntitiesList;	WITHOUT_CLASSIFICATION	0.9999995310617226	WITHOUT_CLASSIFICATION	4.68938277447525E-7	DEFECT
// legendShape	WITHOUT_CLASSIFICATION	0.999995387222483	WITHOUT_CLASSIFICATION	4.612777516897005E-6	DEFECT
// baseLegendShape	WITHOUT_CLASSIFICATION	0.9999978611912547	WITHOUT_CLASSIFICATION	2.1388087453158116E-6	DEFECT
// legendTextFont	WITHOUT_CLASSIFICATION	0.9999955756537335	WITHOUT_CLASSIFICATION	4.4243462664927505E-6	DEFECT
// baseLegendTextFont	WITHOUT_CLASSIFICATION	0.9999951942676735	WITHOUT_CLASSIFICATION	4.805732326510647E-6	DEFECT
// OUTLINE PAINT	WITHOUT_CLASSIFICATION	0.9999776195393068	WITHOUT_CLASSIFICATION	2.238046069322247E-5	DEFECT
// ITEM_LABELS_VISIBLE	WITHOUT_CLASSIFICATION	0.99994136611766	WITHOUT_CLASSIFICATION	5.863388234005073E-5	DEFECT
// ITEM_LABEL_FONT	WITHOUT_CLASSIFICATION	0.9999655983621905	WITHOUT_CLASSIFICATION	3.440163780959789E-5	DEFECT
// POSITIVE ITEM LABEL POSITION	WITHOUT_CLASSIFICATION	0.9999274740417263	WITHOUT_CLASSIFICATION	7.252595827369777E-5	DEFECT
// NEGATIVE ITEM LABEL ANCHOR	WITHOUT_CLASSIFICATION	0.9999176331126199	WITHOUT_CLASSIFICATION	8.236688738007062E-5	DEFECT
// failed	WITHOUT_CLASSIFICATION	0.9999941891409508	WITHOUT_CLASSIFICATION	5.810859049133251E-6	DEFECT
// now check autoPopulate==true	WITHOUT_CLASSIFICATION	0.9999972973281327	WITHOUT_CLASSIFICATION	2.7026718673621537E-6	DEFECT
// now check autoPopulate==true	WITHOUT_CLASSIFICATION	0.9999972973281327	WITHOUT_CLASSIFICATION	2.7026718673621537E-6	DEFECT
// now check autoPopulate==true	WITHOUT_CLASSIFICATION	0.9999972973281327	WITHOUT_CLASSIFICATION	2.7026718673621537E-6	DEFECT
/*CategoryPlot plot =*/	WITHOUT_CLASSIFICATION	0.9999870732428707	WITHOUT_CLASSIFICATION	1.2926757129132436E-5	DEFECT
/*CategoryPlot plot =*/	WITHOUT_CLASSIFICATION	0.9999870732428707	WITHOUT_CLASSIFICATION	1.2926757129132436E-5	DEFECT
/*CategoryPlot plot =*/	WITHOUT_CLASSIFICATION	0.9999870732428707	WITHOUT_CLASSIFICATION	1.2926757129132436E-5	DEFECT
// check a series with no items	WITHOUT_CLASSIFICATION	0.9999991008344373	WITHOUT_CLASSIFICATION	8.991655627600576E-7	DEFECT
// check a series with no items	WITHOUT_CLASSIFICATION	0.9999991008344373	WITHOUT_CLASSIFICATION	8.991655627600576E-7	DEFECT
// check a series with one item	WITHOUT_CLASSIFICATION	0.9999987786155445	WITHOUT_CLASSIFICATION	1.2213844554816616E-6	DEFECT
// check a series with one item	WITHOUT_CLASSIFICATION	0.9999987786155445	WITHOUT_CLASSIFICATION	1.2213844554816616E-6	DEFECT
// check a series with one item	WITHOUT_CLASSIFICATION	0.9999987786155445	WITHOUT_CLASSIFICATION	1.2213844554816616E-6	DEFECT
// check a series with one item	WITHOUT_CLASSIFICATION	0.9999987786155445	WITHOUT_CLASSIFICATION	1.2213844554816616E-6	DEFECT
// check a series with two items	WITHOUT_CLASSIFICATION	0.9999992636891374	WITHOUT_CLASSIFICATION	7.363108627082653E-7	DEFECT
// check a series with two items	WITHOUT_CLASSIFICATION	0.9999992636891374	WITHOUT_CLASSIFICATION	7.363108627082653E-7	DEFECT
// check a series with two items	WITHOUT_CLASSIFICATION	0.9999992636891374	WITHOUT_CLASSIFICATION	7.363108627082653E-7	DEFECT
// check a series with two items	WITHOUT_CLASSIFICATION	0.9999992636891374	WITHOUT_CLASSIFICATION	7.363108627082653E-7	DEFECT
// check a series with three items	WITHOUT_CLASSIFICATION	0.9999992144549639	WITHOUT_CLASSIFICATION	7.855450360500085E-7	DEFECT
// check a series with three items	WITHOUT_CLASSIFICATION	0.9999992144549639	WITHOUT_CLASSIFICATION	7.855450360500085E-7	DEFECT
// check a series with three items	WITHOUT_CLASSIFICATION	0.9999992144549639	WITHOUT_CLASSIFICATION	7.855450360500085E-7	DEFECT
// check a series with three items	WITHOUT_CLASSIFICATION	0.9999992144549639	WITHOUT_CLASSIFICATION	7.855450360500085E-7	DEFECT
// check a series with three items	WITHOUT_CLASSIFICATION	0.9999992144549639	WITHOUT_CLASSIFICATION	7.855450360500085E-7	DEFECT
// check a series with four items	WITHOUT_CLASSIFICATION	0.9999993205047079	WITHOUT_CLASSIFICATION	6.794952921148928E-7	DEFECT
// check a series with four items	WITHOUT_CLASSIFICATION	0.9999993205047079	WITHOUT_CLASSIFICATION	6.794952921148928E-7	DEFECT
// check a series with four items	WITHOUT_CLASSIFICATION	0.9999993205047079	WITHOUT_CLASSIFICATION	6.794952921148928E-7	DEFECT
// check a series with four items	WITHOUT_CLASSIFICATION	0.9999993205047079	WITHOUT_CLASSIFICATION	6.794952921148928E-7	DEFECT
// check a series with repeating items	WITHOUT_CLASSIFICATION	0.999998848331336	WITHOUT_CLASSIFICATION	1.1516686639802774E-6	DEFECT
// check a series with repeating items	WITHOUT_CLASSIFICATION	0.999998848331336	WITHOUT_CLASSIFICATION	1.1516686639802774E-6	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9998503999155552	WITHOUT_CLASSIFICATION	1.4960008444476604E-4	DEFECT
// check a series with no items	WITHOUT_CLASSIFICATION	0.9999991008344373	WITHOUT_CLASSIFICATION	8.991655627600576E-7	DEFECT
// check a series with one item	WITHOUT_CLASSIFICATION	0.9999987786155445	WITHOUT_CLASSIFICATION	1.2213844554816616E-6	DEFECT
// check a series with two items	WITHOUT_CLASSIFICATION	0.9999992636891374	WITHOUT_CLASSIFICATION	7.363108627082653E-7	DEFECT
// check a series with three items	WITHOUT_CLASSIFICATION	0.9999992144549639	WITHOUT_CLASSIFICATION	7.855450360500085E-7	DEFECT
// check a series with four items	WITHOUT_CLASSIFICATION	0.9999993205047079	WITHOUT_CLASSIFICATION	6.794952921148928E-7	DEFECT
// check a series with repeating items	WITHOUT_CLASSIFICATION	0.999998848331336	WITHOUT_CLASSIFICATION	1.1516686639802774E-6	DEFECT
// we're doing this for testing only, and make sure that we // only add data in ascending order by x-value	WITHOUT_CLASSIFICATION	0.9999903927028462	WITHOUT_CLASSIFICATION	9.607297153724996E-6	DEFECT
// we're doing this for testing only, and make sure that we // only add data in descending order by x-value	WITHOUT_CLASSIFICATION	0.9999936184356044	WITHOUT_CLASSIFICATION	6.381564395616449E-6	DEFECT
// try with gradient paint	WITHOUT_CLASSIFICATION	0.9999959516545641	WITHOUT_CLASSIFICATION	4.048345435876748E-6	DEFECT
// should be equal...	WITHOUT_CLASSIFICATION	0.999974885440853	WITHOUT_CLASSIFICATION	2.5114559147009425E-5	DEFECT
// should be equal...	WITHOUT_CLASSIFICATION	0.999974885440853	WITHOUT_CLASSIFICATION	2.5114559147009425E-5	DEFECT
// and independent...	WITHOUT_CLASSIFICATION	0.9999850147966081	WITHOUT_CLASSIFICATION	1.498520339194071E-5	DEFECT
// and independent...	WITHOUT_CLASSIFICATION	0.9999850147966081	WITHOUT_CLASSIFICATION	1.498520339194071E-5	DEFECT
// and independent...	WITHOUT_CLASSIFICATION	0.9999850147966081	WITHOUT_CLASSIFICATION	1.498520339194071E-5	DEFECT
// an empty dataset should return a null range	WITHOUT_CLASSIFICATION	0.999958276217122	WITHOUT_CLASSIFICATION	4.1723782877996026E-5	DEFECT
// an empty dataset should return a null range	WITHOUT_CLASSIFICATION	0.999958276217122	WITHOUT_CLASSIFICATION	4.1723782877996026E-5	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9999918961300563	WITHOUT_CLASSIFICATION	8.103869943562293E-6	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9999918961300563	WITHOUT_CLASSIFICATION	8.103869943562293E-6	DEFECT
// the renderer should not be equal to a BarRenderer	WITHOUT_CLASSIFICATION	0.999991046143239	WITHOUT_CLASSIFICATION	8.95385676102621E-6	DEFECT
// firstBarPaint;	WITHOUT_CLASSIFICATION	0.9999990835356531	WITHOUT_CLASSIFICATION	9.164643470142894E-7	DEFECT
// lastBarPaint;	WITHOUT_CLASSIFICATION	0.9999994698751717	WITHOUT_CLASSIFICATION	5.301248283775117E-7	DEFECT
// positiveBarPaint;	WITHOUT_CLASSIFICATION	0.9999987226002984	WITHOUT_CLASSIFICATION	1.277399701640093E-6	DEFECT
//private Paint negativeBarPaint;	WITHOUT_CLASSIFICATION	0.9999840525008551	WITHOUT_CLASSIFICATION	1.5947499144922082E-5	DEFECT
// quick check for independence	WITHOUT_CLASSIFICATION	0.9999970208189329	WITHOUT_CLASSIFICATION	2.979181067117063E-6	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9998503999155552	WITHOUT_CLASSIFICATION	1.4960008444476604E-4	DEFECT
// shadowXOffset	WITHOUT_CLASSIFICATION	0.9999976868490028	WITHOUT_CLASSIFICATION	2.3131509971182858E-6	DEFECT
// shadowYOffset	WITHOUT_CLASSIFICATION	0.9999986309353415	WITHOUT_CLASSIFICATION	1.3690646584474202E-6	DEFECT
// toolTipGenerator	WITHOUT_CLASSIFICATION	0.9999975541590752	WITHOUT_CLASSIFICATION	2.4458409247286755E-6	DEFECT
// urlGenerator	WITHOUT_CLASSIFICATION	0.9999981084516504	WITHOUT_CLASSIFICATION	1.891548349600372E-6	DEFECT
// should be equal...	WITHOUT_CLASSIFICATION	0.999974885440853	WITHOUT_CLASSIFICATION	2.5114559147009425E-5	DEFECT
// and independent...	WITHOUT_CLASSIFICATION	0.9999850147966081	WITHOUT_CLASSIFICATION	1.498520339194071E-5	DEFECT
// an empty dataset should return a null range	WITHOUT_CLASSIFICATION	0.999958276217122	WITHOUT_CLASSIFICATION	4.1723782877996026E-5	DEFECT
// an empty dataset should return a null range	WITHOUT_CLASSIFICATION	0.999958276217122	WITHOUT_CLASSIFICATION	4.1723782877996026E-5	DEFECT
// an empty dataset should return a null range	WITHOUT_CLASSIFICATION	0.999958276217122	WITHOUT_CLASSIFICATION	4.1723782877996026E-5	DEFECT
// an empty dataset should return a null range	WITHOUT_CLASSIFICATION	0.999958276217122	WITHOUT_CLASSIFICATION	4.1723782877996026E-5	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9999918961300563	WITHOUT_CLASSIFICATION	8.103869943562293E-6	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9999918961300563	WITHOUT_CLASSIFICATION	8.103869943562293E-6	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9999918961300563	WITHOUT_CLASSIFICATION	8.103869943562293E-6	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9999918961300563	WITHOUT_CLASSIFICATION	8.103869943562293E-6	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9999918961300563	WITHOUT_CLASSIFICATION	8.103869943562293E-6	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9999918961300563	WITHOUT_CLASSIFICATION	8.103869943562293E-6	DEFECT
// check that the series visible flag is observed	WITHOUT_CLASSIFICATION	0.9999978647280195	WITHOUT_CLASSIFICATION	2.1352719805058397E-6	DEFECT
// map	WITHOUT_CLASSIFICATION	0.9999932160863978	WITHOUT_CLASSIFICATION	6.783913602257691E-6	DEFECT
// toolTipGeneratorList	WITHOUT_CLASSIFICATION	0.9999959960762346	WITHOUT_CLASSIFICATION	4.003923765420612E-6	DEFECT
// baseToolTipGenerator	WITHOUT_CLASSIFICATION	0.9999971172328359	WITHOUT_CLASSIFICATION	2.882767164160554E-6	DEFECT
// itemLabelGenerator	WITHOUT_CLASSIFICATION	0.9999889460915786	WITHOUT_CLASSIFICATION	1.105390842144301E-5	DEFECT
// itemLabelGeneratorList	WITHOUT_CLASSIFICATION	0.9999921581335564	WITHOUT_CLASSIFICATION	7.841866443650222E-6	DEFECT
// baseItemLabelGenerator	WITHOUT_CLASSIFICATION	0.9999983441651699	WITHOUT_CLASSIFICATION	1.6558348301319292E-6	DEFECT
// urlGeneratorList	WITHOUT_CLASSIFICATION	0.999998871736573	WITHOUT_CLASSIFICATION	1.1282634271029408E-6	DEFECT
// baseItemURLGenerator	WITHOUT_CLASSIFICATION	0.999996307237034	WITHOUT_CLASSIFICATION	3.69276296590815E-6	DEFECT
// legendItemLabelGenerator	WITHOUT_CLASSIFICATION	0.9999962346457169	WITHOUT_CLASSIFICATION	3.765354283021718E-6	DEFECT
// legendItemToolTipGenerator	WITHOUT_CLASSIFICATION	0.9999942568691839	WITHOUT_CLASSIFICATION	5.74313081611822E-6	DEFECT
// legendItemURLGenerator	WITHOUT_CLASSIFICATION	0.9999950215047404	WITHOUT_CLASSIFICATION	4.97849525960422E-6	DEFECT
// check that the generator has been cloned	WITHOUT_CLASSIFICATION	0.9999971057805593	WITHOUT_CLASSIFICATION	2.8942194406403924E-6	DEFECT
// check that the generator has been cloned	WITHOUT_CLASSIFICATION	0.9999971057805593	WITHOUT_CLASSIFICATION	2.8942194406403924E-6	DEFECT
// check that the generator has been cloned	WITHOUT_CLASSIFICATION	0.9999971057805593	WITHOUT_CLASSIFICATION	2.8942194406403924E-6	DEFECT
// base value	WITHOUT_CLASSIFICATION	0.9999969765861484	WITHOUT_CLASSIFICATION	3.0234138515210575E-6	DEFECT
// itemMargin	WITHOUT_CLASSIFICATION	0.999991212272992	WITHOUT_CLASSIFICATION	8.787727007944848E-6	DEFECT
// drawBarOutline	WITHOUT_CLASSIFICATION	0.9999974967113903	WITHOUT_CLASSIFICATION	2.5032886096540482E-6	DEFECT
// maximumBarWidth	WITHOUT_CLASSIFICATION	0.9999958115048202	WITHOUT_CLASSIFICATION	4.1884951798031255E-6	DEFECT
// minimumBarLength	WITHOUT_CLASSIFICATION	0.999994148788498	WITHOUT_CLASSIFICATION	5.851211501984971E-6	DEFECT
// gradientPaintTransformer	WITHOUT_CLASSIFICATION	0.9999964825145118	WITHOUT_CLASSIFICATION	3.517485488321635E-6	DEFECT
// positiveItemLabelPositionFallback	WITHOUT_CLASSIFICATION	0.9999980149241121	WITHOUT_CLASSIFICATION	1.9850758879991124E-6	DEFECT
// negativeItemLabelPositionFallback	WITHOUT_CLASSIFICATION	0.9999986418499471	WITHOUT_CLASSIFICATION	1.358150052853734E-6	DEFECT
// barPainter	WITHOUT_CLASSIFICATION	0.9999984495491329	WITHOUT_CLASSIFICATION	1.5504508670582547E-6	DEFECT
// shadowsVisible	WITHOUT_CLASSIFICATION	0.9999983985047003	WITHOUT_CLASSIFICATION	1.6014952997678202E-6	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999872438634059	WITHOUT_CLASSIFICATION	1.2756136594073208E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9998503999155552	WITHOUT_CLASSIFICATION	1.4960008444476604E-4	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9998503999155552	WITHOUT_CLASSIFICATION	1.4960008444476604E-4	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9998503999155552	WITHOUT_CLASSIFICATION	1.4960008444476604E-4	DEFECT
// shadowXOffset	WITHOUT_CLASSIFICATION	0.9999976868490028	WITHOUT_CLASSIFICATION	2.3131509971182858E-6	DEFECT
// shadowYOffset	WITHOUT_CLASSIFICATION	0.9999986309353415	WITHOUT_CLASSIFICATION	1.3690646584474202E-6	DEFECT
// an empty dataset should return a null range	WITHOUT_CLASSIFICATION	0.999958276217122	WITHOUT_CLASSIFICATION	4.1723782877996026E-5	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9999918961300563	WITHOUT_CLASSIFICATION	8.103869943562293E-6	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9999918961300563	WITHOUT_CLASSIFICATION	8.103869943562293E-6	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9999918961300563	WITHOUT_CLASSIFICATION	8.103869943562293E-6	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9999918961300563	WITHOUT_CLASSIFICATION	8.103869943562293E-6	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9999918961300563	WITHOUT_CLASSIFICATION	8.103869943562293E-6	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9999918961300563	WITHOUT_CLASSIFICATION	8.103869943562293E-6	DEFECT
// check that the series visible flag is observed	WITHOUT_CLASSIFICATION	0.9999978647280195	WITHOUT_CLASSIFICATION	2.1352719805058397E-6	DEFECT
// barPainter	WITHOUT_CLASSIFICATION	0.9999984495491329	WITHOUT_CLASSIFICATION	1.5504508670582547E-6	DEFECT
// shadowsVisible	WITHOUT_CLASSIFICATION	0.9999983985047003	WITHOUT_CLASSIFICATION	1.6014952997678202E-6	DEFECT
// try null argument	WITHOUT_CLASSIFICATION	0.9999938621613919	WITHOUT_CLASSIFICATION	6.137838608224545E-6	DEFECT
// default instances	WITHOUT_CLASSIFICATION	0.9999981457847827	WITHOUT_CLASSIFICATION	1.8542152173379805E-6	DEFECT
// default instances	WITHOUT_CLASSIFICATION	0.9999981457847827	WITHOUT_CLASSIFICATION	1.8542152173379805E-6	DEFECT
// check that super class fields are being looked at...	WITHOUT_CLASSIFICATION	0.9999993220282479	WITHOUT_CLASSIFICATION	6.779717520689025E-7	DEFECT
// setUseYInterval	WITHOUT_CLASSIFICATION	0.9999997203775326	WITHOUT_CLASSIFICATION	2.796224674560151E-7	DEFECT
// setBase()	WITHOUT_CLASSIFICATION	0.9999988238107329	WITHOUT_CLASSIFICATION	1.1761892670799864E-6	DEFECT
// try empty dataset	WITHOUT_CLASSIFICATION	0.9999991419297657	WITHOUT_CLASSIFICATION	8.580702344139646E-7	DEFECT
// setGradientPaintTransformer()	WITHOUT_CLASSIFICATION	0.9999988031152626	WITHOUT_CLASSIFICATION	1.1968847374166665E-6	DEFECT
// setDrawBarOutline()	WITHOUT_CLASSIFICATION	0.9999984934848641	WITHOUT_CLASSIFICATION	1.5065151359323735E-6	DEFECT
// setMargin()	WITHOUT_CLASSIFICATION	0.9999991973055009	WITHOUT_CLASSIFICATION	8.026944990071119E-7	DEFECT
// legendBar	WITHOUT_CLASSIFICATION	0.9999984245690401	WITHOUT_CLASSIFICATION	1.5754309599622662E-6	DEFECT
// positiveItemLabelFallbackPosition	WITHOUT_CLASSIFICATION	0.9999964675304579	WITHOUT_CLASSIFICATION	3.5324695420787414E-6	DEFECT
// negativeItemLabelFallbackPosition	WITHOUT_CLASSIFICATION	0.9999975831523273	WITHOUT_CLASSIFICATION	2.4168476726123638E-6	DEFECT
// check a list containing a non-Number object	WITHOUT_CLASSIFICATION	0.999999587536816	WITHOUT_CLASSIFICATION	4.1246318415000206E-7	DEFECT
// try something from the base class	WITHOUT_CLASSIFICATION	0.9999985873202111	WITHOUT_CLASSIFICATION	1.4126797888287159E-6	DEFECT
// positive paint	WITHOUT_CLASSIFICATION	0.9999931692926411	WITHOUT_CLASSIFICATION	6.8307073587928265E-6	DEFECT
// negative paint	WITHOUT_CLASSIFICATION	0.9999928170063965	WITHOUT_CLASSIFICATION	7.1829936034354066E-6	DEFECT
// shapesVisible	WITHOUT_CLASSIFICATION	0.9999979721251776	WITHOUT_CLASSIFICATION	2.027874822489282E-6	DEFECT
// legendLine	WITHOUT_CLASSIFICATION	0.9999961584080417	WITHOUT_CLASSIFICATION	3.841591958332755E-6	DEFECT
// roundXCoordinates	WITHOUT_CLASSIFICATION	0.9999990937011696	WITHOUT_CLASSIFICATION	9.062988304595526E-7	DEFECT
// drawOpenTicks	WITHOUT_CLASSIFICATION	0.9999973849589326	WITHOUT_CLASSIFICATION	2.6150410673409163E-6	DEFECT
// drawCloseTicks	WITHOUT_CLASSIFICATION	0.999999538226761	WITHOUT_CLASSIFICATION	4.617732389264402E-7	DEFECT
// openTickPaint	WITHOUT_CLASSIFICATION	0.9999973494331312	WITHOUT_CLASSIFICATION	2.650566868804598E-6	DEFECT
// closeTickPaint	WITHOUT_CLASSIFICATION	0.9999995662246253	WITHOUT_CLASSIFICATION	4.337753747370632E-7	DEFECT
// tickLength	WITHOUT_CLASSIFICATION	0.9999922761900575	WITHOUT_CLASSIFICATION	7.72380994242746E-6	DEFECT
// try an empty dataset - should return a null range	WITHOUT_CLASSIFICATION	0.999947399328152	WITHOUT_CLASSIFICATION	5.260067184790481E-5	DEFECT
// try a null dataset - should return a null range	WITHOUT_CLASSIFICATION	0.9999758629528669	WITHOUT_CLASSIFICATION	2.41370471330952E-5	DEFECT
// drawXError	WITHOUT_CLASSIFICATION	0.9999825796588562	WITHOUT_CLASSIFICATION	1.742034114376555E-5	DEFECT
// drawYError	WITHOUT_CLASSIFICATION	0.9999895817457899	WITHOUT_CLASSIFICATION	1.041825421018604E-5	DEFECT
// capLength	WITHOUT_CLASSIFICATION	0.9999957949548904	WITHOUT_CLASSIFICATION	4.205045109555938E-6	DEFECT
// errorPaint	WITHOUT_CLASSIFICATION	0.9999883842053688	WITHOUT_CLASSIFICATION	1.161579463114999E-5	DEFECT
// errorStroke	WITHOUT_CLASSIFICATION	0.9999623539277909	WITHOUT_CLASSIFICATION	3.7646072209075726E-5	DEFECT
// check boxPaint null also	WITHOUT_CLASSIFICATION	0.9999812148010188	WITHOUT_CLASSIFICATION	1.878519898116605E-5	DEFECT
// upPaint	WITHOUT_CLASSIFICATION	0.9999984823581989	WITHOUT_CLASSIFICATION	1.5176418010760123E-6	DEFECT
// downPaint	WITHOUT_CLASSIFICATION	0.9999942986655596	WITHOUT_CLASSIFICATION	5.701334440355838E-6	DEFECT
// drawVolume	WITHOUT_CLASSIFICATION	0.9999975252645793	WITHOUT_CLASSIFICATION	2.4747354207168846E-6	DEFECT
// candleWidth	WITHOUT_CLASSIFICATION	0.9999979544539864	WITHOUT_CLASSIFICATION	2.045546013601125E-6	DEFECT
// maxCandleWidthInMilliseconds	WITHOUT_CLASSIFICATION	0.9999964289842883	WITHOUT_CLASSIFICATION	3.571015711719291E-6	DEFECT
// autoWidthMethod	WITHOUT_CLASSIFICATION	0.9999523269051096	WITHOUT_CLASSIFICATION	4.767309489039524E-5	DEFECT
// autoWidthFactor	WITHOUT_CLASSIFICATION	0.9999973256727056	WITHOUT_CLASSIFICATION	2.6743272943808773E-6	DEFECT
// backgroundPaint	WITHOUT_CLASSIFICATION	0.9999993363842294	WITHOUT_CLASSIFICATION	6.636157705204189E-7	DEFECT
// padding	WITHOUT_CLASSIFICATION	0.9999927878590255	WITHOUT_CLASSIFICATION	7.212140974665563E-6	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999872438634059	WITHOUT_CLASSIFICATION	1.2756136594073208E-5	DEFECT
// fillPaintTransformer	WITHOUT_CLASSIFICATION	0.9999912099820274	WITHOUT_CLASSIFICATION	8.790017972639072E-6	DEFECT
// fillPaint	WITHOUT_CLASSIFICATION	0.9999962262363506	WITHOUT_CLASSIFICATION	3.773763649248368E-6	DEFECT
// outlinePaint	WITHOUT_CLASSIFICATION	0.9999991235292298	WITHOUT_CLASSIFICATION	8.764707702539642E-7	DEFECT
// linePaint	WITHOUT_CLASSIFICATION	0.9999965507143342	WITHOUT_CLASSIFICATION	3.449285665794995E-6	DEFECT
// paint	WITHOUT_CLASSIFICATION	0.9999955860788465	WITHOUT_CLASSIFICATION	4.413921153470166E-6	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9998503999155552	WITHOUT_CLASSIFICATION	1.4960008444476604E-4	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9998503999155552	WITHOUT_CLASSIFICATION	1.4960008444476604E-4	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9998503999155552	WITHOUT_CLASSIFICATION	1.4960008444476604E-4	DEFECT
// shape	WITHOUT_CLASSIFICATION	0.9999971982697747	WITHOUT_CLASSIFICATION	2.8017302252657677E-6	DEFECT
// outlineStroke	WITHOUT_CLASSIFICATION	0.9999980873122705	WITHOUT_CLASSIFICATION	1.912687729609944E-6	DEFECT
// axisLocation	WITHOUT_CLASSIFICATION	0.9999881846372365	WITHOUT_CLASSIFICATION	1.18153627635143E-5	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9999918961300563	WITHOUT_CLASSIFICATION	8.103869943562293E-6	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9999918961300563	WITHOUT_CLASSIFICATION	8.103869943562293E-6	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9999918961300563	WITHOUT_CLASSIFICATION	8.103869943562293E-6	DEFECT
// check that the generator has been cloned	WITHOUT_CLASSIFICATION	0.9999971057805593	WITHOUT_CLASSIFICATION	2.8942194406403924E-6	DEFECT
// check that the generator has been cloned	WITHOUT_CLASSIFICATION	0.9999971057805593	WITHOUT_CLASSIFICATION	2.8942194406403924E-6	DEFECT
// check that the generator has been cloned	WITHOUT_CLASSIFICATION	0.9999971057805593	WITHOUT_CLASSIFICATION	2.8942194406403924E-6	DEFECT
// default instances	WITHOUT_CLASSIFICATION	0.9999981457847827	WITHOUT_CLASSIFICATION	1.8542152173379805E-6	DEFECT
// default instances	WITHOUT_CLASSIFICATION	0.9999981457847827	WITHOUT_CLASSIFICATION	1.8542152173379805E-6	DEFECT
// default instances	WITHOUT_CLASSIFICATION	0.9999981457847827	WITHOUT_CLASSIFICATION	1.8542152173379805E-6	DEFECT
// try an empty dataset - should return a null range	WITHOUT_CLASSIFICATION	0.999947399328152	WITHOUT_CLASSIFICATION	5.260067184790481E-5	DEFECT
// try a null dataset - should return a null range	WITHOUT_CLASSIFICATION	0.9999758629528669	WITHOUT_CLASSIFICATION	2.41370471330952E-5	DEFECT
// locale shouldn't matter here	WITHOUT_CLASSIFICATION	0.9999531108675137	WITHOUT_CLASSIFICATION	4.688913248631367E-5	DEFECT
// autoWidthGap	WITHOUT_CLASSIFICATION	0.9999971672138874	WITHOUT_CLASSIFICATION	2.8327861125448076E-6	DEFECT
// check that a null dataset returns null bounds	WITHOUT_CLASSIFICATION	0.999998899450529	WITHOUT_CLASSIFICATION	1.1005494709605313E-6	DEFECT
// check that a null dataset returns null bounds	WITHOUT_CLASSIFICATION	0.999998899450529	WITHOUT_CLASSIFICATION	1.1005494709605313E-6	DEFECT
// check the bounds of a simple dataset	WITHOUT_CLASSIFICATION	0.9999999518636504	WITHOUT_CLASSIFICATION	4.813634953885164E-8	DEFECT
// test findDomainBounds as well	WITHOUT_CLASSIFICATION	0.9999924054887644	WITHOUT_CLASSIFICATION	7.594511235587679E-6	DEFECT
// blockHeight	WITHOUT_CLASSIFICATION	0.9999953518038422	WITHOUT_CLASSIFICATION	4.648196157718415E-6	DEFECT
// blockWidth	WITHOUT_CLASSIFICATION	0.9999933496673046	WITHOUT_CLASSIFICATION	6.650332695353817E-6	DEFECT
// paintScale	WITHOUT_CLASSIFICATION	0.9999966078422617	WITHOUT_CLASSIFICATION	3.392157738269879E-6	DEFECT
// paintScale	WITHOUT_CLASSIFICATION	0.9999966078422617	WITHOUT_CLASSIFICATION	3.392157738269879E-6	DEFECT
// the following fields are inherited from the AbstractXYItemRenderer	WITHOUT_CLASSIFICATION	0.9999990598536026	WITHOUT_CLASSIFICATION	9.401463972686616E-7	DEFECT
// axis	WITHOUT_CLASSIFICATION	0.9999949246082956	WITHOUT_CLASSIFICATION	5.075391704309612E-6	DEFECT
// axisOffset	WITHOUT_CLASSIFICATION	0.999994335301101	WITHOUT_CLASSIFICATION	5.664698898990218E-6	DEFECT
// stripWidth	WITHOUT_CLASSIFICATION	0.9999988948888598	WITHOUT_CLASSIFICATION	1.1051111400883165E-6	DEFECT
// stripOutlineVisible	WITHOUT_CLASSIFICATION	0.999997122207121	WITHOUT_CLASSIFICATION	2.877792878974644E-6	DEFECT
// stripOutlinePaint	WITHOUT_CLASSIFICATION	0.9999997192327057	WITHOUT_CLASSIFICATION	2.807672942535971E-7	DEFECT
// stripOutlineStroke	WITHOUT_CLASSIFICATION	0.9999970340330597	WITHOUT_CLASSIFICATION	2.965966940383074E-6	DEFECT
// shapeVisible	WITHOUT_CLASSIFICATION	0.9999978786987361	WITHOUT_CLASSIFICATION	2.1213012638067793E-6	DEFECT
// shapeFilled	WITHOUT_CLASSIFICATION	0.9999990591131844	WITHOUT_CLASSIFICATION	9.408868155916331E-7	DEFECT
// shapeOutlineVisible	WITHOUT_CLASSIFICATION	0.9999938725711727	WITHOUT_CLASSIFICATION	6.127428827337428E-6	DEFECT
// shapeAnchor	WITHOUT_CLASSIFICATION	0.9999989118357467	WITHOUT_CLASSIFICATION	1.0881642532998044E-6	DEFECT
// shapeLocation	WITHOUT_CLASSIFICATION	0.9999961859450154	WITHOUT_CLASSIFICATION	3.8140549847354904E-6	DEFECT
// line	WITHOUT_CLASSIFICATION	0.9999911027552324	WITHOUT_CLASSIFICATION	8.897244767567849E-6	DEFECT
// lineStroke	WITHOUT_CLASSIFICATION	0.9999925642852123	WITHOUT_CLASSIFICATION	7.4357147877485325E-6	DEFECT
// maximumLinesToDisplay	WITHOUT_CLASSIFICATION	0.999981624482892	WITHOUT_CLASSIFICATION	1.8375517108012022E-5	DEFECT
// toolTipText	WITHOUT_CLASSIFICATION	0.9999966812436568	WITHOUT_CLASSIFICATION	3.318756343162301E-6	DEFECT
// expandToFitSpace	WITHOUT_CLASSIFICATION	0.9999955102107215	WITHOUT_CLASSIFICATION	4.489789278488499E-6	DEFECT
// margin	WITHOUT_CLASSIFICATION	0.9999969850341833	WITHOUT_CLASSIFICATION	3.0149658166749383E-6	DEFECT
// border	WITHOUT_CLASSIFICATION	0.9999948019768252	WITHOUT_CLASSIFICATION	5.198023174772375E-6	DEFECT
// is the clone independent	WITHOUT_CLASSIFICATION	0.9999345200752933	WITHOUT_CLASSIFICATION	6.547992470665889E-5	DEFECT
// case 1 - object is mutable but not PublicCloneable	WITHOUT_CLASSIFICATION	0.9999962642220881	WITHOUT_CLASSIFICATION	3.735777911817818E-6	DEFECT
// simple case	WITHOUT_CLASSIFICATION	0.9999993916575239	WITHOUT_CLASSIFICATION	6.083424760440346E-7	DEFECT
// try a null value	WITHOUT_CLASSIFICATION	0.9999747962269354	WITHOUT_CLASSIFICATION	2.5203773064666524E-5	DEFECT
// try null argument	WITHOUT_CLASSIFICATION	0.9999938621613919	WITHOUT_CLASSIFICATION	6.137838608224545E-6	DEFECT
// you can add a null list - it would have been better if this // required EMPTY_LIST	WITHOUT_CLASSIFICATION	0.999628392500576	WITHOUT_CLASSIFICATION	3.7160749942393226E-4	DEFECT
// case 1 - object is mutable but not PublicCloneable	WITHOUT_CLASSIFICATION	0.9999962642220881	WITHOUT_CLASSIFICATION	3.735777911817818E-6	DEFECT
// if we modify the original list, it's best if the URL generator is // not affected	WITHOUT_CLASSIFICATION	0.99999445193407	WITHOUT_CLASSIFICATION	5.548065930105089E-6	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999847370663418	WITHOUT_CLASSIFICATION	1.5262933658178298E-5	DEFECT
// the clone contains a reference to the original object	WITHOUT_CLASSIFICATION	0.9999997696453315	WITHOUT_CLASSIFICATION	2.3035466845525484E-7	DEFECT
// the clone contains a reference to the original object	WITHOUT_CLASSIFICATION	0.9999997696453315	WITHOUT_CLASSIFICATION	2.3035466845525484E-7	DEFECT
// CASE 2 - object is mutable AND PublicCloneable	WITHOUT_CLASSIFICATION	0.9999955701238664	WITHOUT_CLASSIFICATION	4.429876133555454E-6	DEFECT
// CASE 2 - object is mutable AND PublicCloneable	WITHOUT_CLASSIFICATION	0.9999955701238664	WITHOUT_CLASSIFICATION	4.429876133555454E-6	DEFECT
// the clone contains a reference to a CLONE of the original object	WITHOUT_CLASSIFICATION	0.9999996522445409	WITHOUT_CLASSIFICATION	3.477554590450493E-7	DEFECT
// check that clone is independent of the original	WITHOUT_CLASSIFICATION	0.9999997976510937	WITHOUT_CLASSIFICATION	2.023489064238827E-7	DEFECT
// check sorted rows	WITHOUT_CLASSIFICATION	0.9999997419612743	WITHOUT_CLASSIFICATION	2.58038725710239E-7	DEFECT
// check for unknown column	WITHOUT_CLASSIFICATION	0.9999983686465015	WITHOUT_CLASSIFICATION	1.6313534985103611E-6	DEFECT
// try null key	WITHOUT_CLASSIFICATION	0.9999719856339756	WITHOUT_CLASSIFICATION	2.801436602440484E-5	DEFECT
// try null key	WITHOUT_CLASSIFICATION	0.9999719856339756	WITHOUT_CLASSIFICATION	2.801436602440484E-5	DEFECT
/*v =*/	WITHOUT_CLASSIFICATION	0.9999686364639317	WITHOUT_CLASSIFICATION	3.136353606825116E-5	DEFECT
// confirm that the clone is independent of the original	WITHOUT_CLASSIFICATION	0.9999997524043349	WITHOUT_CLASSIFICATION	2.475956650819535E-7	DEFECT
// check null argument 1	WITHOUT_CLASSIFICATION	0.9999967843646325	WITHOUT_CLASSIFICATION	3.215635367489565E-6	DEFECT
/* ComparableObjectItem item1 = */	WITHOUT_CLASSIFICATION	0.9999942435873828	WITHOUT_CLASSIFICATION	5.756412617228325E-6	DEFECT
// check key order	WITHOUT_CLASSIFICATION	0.9999973994741205	WITHOUT_CLASSIFICATION	2.6005258794131834E-6	DEFECT
// check retrieve value by index	WITHOUT_CLASSIFICATION	0.9999958083866256	WITHOUT_CLASSIFICATION	4.191613374444727E-6	DEFECT
// retrieve an item	WITHOUT_CLASSIFICATION	0.9999866183852939	WITHOUT_CLASSIFICATION	1.3381614706045258E-5	DEFECT
// request with a negative index	WITHOUT_CLASSIFICATION	0.9999908804877837	WITHOUT_CLASSIFICATION	9.11951221630835E-6	DEFECT
// request with a negative index	WITHOUT_CLASSIFICATION	0.9999908804877837	WITHOUT_CLASSIFICATION	9.11951221630835E-6	DEFECT
// request width index == itemCount	WITHOUT_CLASSIFICATION	0.9999977234804424	WITHOUT_CLASSIFICATION	2.27651955762383E-6	DEFECT
// check null argument	WITHOUT_CLASSIFICATION	0.9999968295273921	WITHOUT_CLASSIFICATION	3.17047260795575E-6	DEFECT
// replace an existing value	WITHOUT_CLASSIFICATION	0.9999905703196128	WITHOUT_CLASSIFICATION	9.429680387249727E-6	DEFECT
// try a null key - should throw an exception	WITHOUT_CLASSIFICATION	0.9995790046651153	WITHOUT_CLASSIFICATION	4.209953348847241E-4	DEFECT
// try unknown key	WITHOUT_CLASSIFICATION	0.9999912434634208	WITHOUT_CLASSIFICATION	8.756536579236502E-6	DEFECT
// try negative key index	WITHOUT_CLASSIFICATION	0.9998158421858919	WITHOUT_CLASSIFICATION	1.8415781410820623E-4	DEFECT
// try key index == itemCount	WITHOUT_CLASSIFICATION	0.9999564090720215	WITHOUT_CLASSIFICATION	4.359092797841849E-5	DEFECT
/*Range r2 =*/	WITHOUT_CLASSIFICATION	0.9999817136262287	WITHOUT_CLASSIFICATION	1.828637377125363E-5	DEFECT
// Expand by 0% does not change the range	WITHOUT_CLASSIFICATION	0.9999917830426328	WITHOUT_CLASSIFICATION	8.216957367301104E-6	DEFECT
// Lower > upper: mid point is used	WITHOUT_CLASSIFICATION	0.9999939257821935	WITHOUT_CLASSIFICATION	6.074217806488778E-6	DEFECT
// Shifting with a delta of 0 does not change the range	WITHOUT_CLASSIFICATION	0.9999983195938841	WITHOUT_CLASSIFICATION	1.6804061158720023E-6	DEFECT
// Scaling with a factor of 1 does not change the range	WITHOUT_CLASSIFICATION	0.999995013906807	WITHOUT_CLASSIFICATION	4.986093192922873E-6	DEFECT
/*s1 = */	WITHOUT_CLASSIFICATION	0.9999848987542242	WITHOUT_CLASSIFICATION	1.5101245775765167E-5	DEFECT
// key	WITHOUT_CLASSIFICATION	0.999986041935466	WITHOUT_CLASSIFICATION	1.3958064533986449E-5	DEFECT
// autoSort	WITHOUT_CLASSIFICATION	0.9999973640620335	WITHOUT_CLASSIFICATION	2.6359379664263556E-6	DEFECT
// add a value	WITHOUT_CLASSIFICATION	0.9999906191007988	WITHOUT_CLASSIFICATION	9.38089920115503E-6	DEFECT
// add another value	WITHOUT_CLASSIFICATION	0.9999970657896468	WITHOUT_CLASSIFICATION	2.9342103532642255E-6	DEFECT
// remove an item	WITHOUT_CLASSIFICATION	0.9999834197910521	WITHOUT_CLASSIFICATION	1.6580208947989672E-5	DEFECT
// map a key to a new group	WITHOUT_CLASSIFICATION	0.9999931788622825	WITHOUT_CLASSIFICATION	6.821137717516648E-6	DEFECT
// clear a mapping	WITHOUT_CLASSIFICATION	0.9999982115741335	WITHOUT_CLASSIFICATION	1.7884258665662137E-6	DEFECT
// check handling of null key	WITHOUT_CLASSIFICATION	0.9999806533824437	WITHOUT_CLASSIFICATION	1.9346617556340346E-5	DEFECT
// a new map always has 1 group (the default group)	WITHOUT_CLASSIFICATION	0.9999997579522266	WITHOUT_CLASSIFICATION	2.4204777331969654E-7	DEFECT
// now overwrite group "G2"...	WITHOUT_CLASSIFICATION	0.9999988635340005	WITHOUT_CLASSIFICATION	1.1364659994467782E-6	DEFECT
// if there is an explicit mapping to the default group, it is counted	WITHOUT_CLASSIFICATION	0.9999968771507257	WITHOUT_CLASSIFICATION	3.1228492742396013E-6	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999872438634059	WITHOUT_CLASSIFICATION	1.2756136594073208E-5	DEFECT
// confirm that the clone is independent of the original	WITHOUT_CLASSIFICATION	0.9999997524043349	WITHOUT_CLASSIFICATION	2.475956650819535E-7	DEFECT
// check key order	WITHOUT_CLASSIFICATION	0.9999973994741205	WITHOUT_CLASSIFICATION	2.6005258794131834E-6	DEFECT
// check key order	WITHOUT_CLASSIFICATION	0.9999973994741205	WITHOUT_CLASSIFICATION	2.6005258794131834E-6	DEFECT
// check retrieve value by key	WITHOUT_CLASSIFICATION	0.9999956238374583	WITHOUT_CLASSIFICATION	4.376162541724154E-6	DEFECT
// check retrieve value by key	WITHOUT_CLASSIFICATION	0.9999956238374583	WITHOUT_CLASSIFICATION	4.376162541724154E-6	DEFECT
// check retrieve value by key	WITHOUT_CLASSIFICATION	0.9999956238374583	WITHOUT_CLASSIFICATION	4.376162541724154E-6	DEFECT
// check retrieve value by key	WITHOUT_CLASSIFICATION	0.9999956238374583	WITHOUT_CLASSIFICATION	4.376162541724154E-6	DEFECT
// check retrieve value by index	WITHOUT_CLASSIFICATION	0.9999958083866256	WITHOUT_CLASSIFICATION	4.191613374444727E-6	DEFECT
// check retrieve value by index	WITHOUT_CLASSIFICATION	0.9999958083866256	WITHOUT_CLASSIFICATION	4.191613374444727E-6	DEFECT
// check retrieve value by index	WITHOUT_CLASSIFICATION	0.9999958083866256	WITHOUT_CLASSIFICATION	4.191613374444727E-6	DEFECT
// check retrieve value by index	WITHOUT_CLASSIFICATION	0.9999958083866256	WITHOUT_CLASSIFICATION	4.191613374444727E-6	DEFECT
// now overwrite group "G2"...	WITHOUT_CLASSIFICATION	0.9999988635340005	WITHOUT_CLASSIFICATION	1.1364659994467782E-6	DEFECT
// if the default group is not mapped to, it should still count towards // the group count...	WITHOUT_CLASSIFICATION	0.999999054990344	WITHOUT_CLASSIFICATION	9.450096558525121E-7	DEFECT
// now when the default group is mapped to, it shouldn't increase the // group count...	WITHOUT_CLASSIFICATION	0.9999980440883256	WITHOUT_CLASSIFICATION	1.9559116743748358E-6	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999847370663418	WITHOUT_CLASSIFICATION	1.5262933658178298E-5	DEFECT
// the default group is always at index 0	WITHOUT_CLASSIFICATION	0.999991628281308	WITHOUT_CLASSIFICATION	8.371718691949864E-6	DEFECT
// a non-existent group should return -1	WITHOUT_CLASSIFICATION	0.9999991856735659	WITHOUT_CLASSIFICATION	8.14326434041421E-7	DEFECT
// indices are assigned in the order that groups are originally mapped	WITHOUT_CLASSIFICATION	0.9999971932210034	WITHOUT_CLASSIFICATION	2.8067789966516915E-6	DEFECT
// a key that hasn't been mapped should return the default group	WITHOUT_CLASSIFICATION	0.9999412090038494	WITHOUT_CLASSIFICATION	5.8790996150572516E-5	DEFECT
// a null argument should throw an exception	WITHOUT_CLASSIFICATION	0.9999594942211126	WITHOUT_CLASSIFICATION	4.050577888740605E-5	DEFECT
// a small check for independence	WITHOUT_CLASSIFICATION	0.9999979251810045	WITHOUT_CLASSIFICATION	2.0748189955175884E-6	DEFECT
// check invalid indices	WITHOUT_CLASSIFICATION	0.9999984560025964	WITHOUT_CLASSIFICATION	1.5439974036470478E-6	DEFECT
// check invalid indices	WITHOUT_CLASSIFICATION	0.9999984560025964	WITHOUT_CLASSIFICATION	1.5439974036470478E-6	DEFECT
// confirm overwriting an existing value	WITHOUT_CLASSIFICATION	0.9999912989801854	WITHOUT_CLASSIFICATION	8.701019814565167E-6	DEFECT
// try null keys	WITHOUT_CLASSIFICATION	0.9999871240909899	WITHOUT_CLASSIFICATION	1.287590901001966E-5	DEFECT
// try negative row index	WITHOUT_CLASSIFICATION	0.9999046520925308	WITHOUT_CLASSIFICATION	9.534790746924018E-5	DEFECT
// try row index too high	WITHOUT_CLASSIFICATION	0.9999209353051117	WITHOUT_CLASSIFICATION	7.906469488834373E-5	DEFECT
// try negative column index	WITHOUT_CLASSIFICATION	0.9999324185288161	WITHOUT_CLASSIFICATION	6.758147118398498E-5	DEFECT
// try column index too high	WITHOUT_CLASSIFICATION	0.9999473405667314	WITHOUT_CLASSIFICATION	5.265943326864107E-5	DEFECT
// try unknown row key	WITHOUT_CLASSIFICATION	0.9999760745602944	WITHOUT_CLASSIFICATION	2.392543970567958E-5	DEFECT
// try null row key	WITHOUT_CLASSIFICATION	0.999977517387317	WITHOUT_CLASSIFICATION	2.248261268309358E-5	DEFECT
// try unknown column key	WITHOUT_CLASSIFICATION	0.9999888918313643	WITHOUT_CLASSIFICATION	1.1108168635615957E-5	DEFECT
// try null column key	WITHOUT_CLASSIFICATION	0.9999021585824017	WITHOUT_CLASSIFICATION	9.784141759830473E-5	DEFECT
/* Comparable k = */	WITHOUT_CLASSIFICATION	0.9999964795056331	WITHOUT_CLASSIFICATION	3.520494366795765E-6	DEFECT
/* Comparable k = */	WITHOUT_CLASSIFICATION	0.9999964795056331	WITHOUT_CLASSIFICATION	3.520494366795765E-6	DEFECT
// try null	WITHOUT_CLASSIFICATION	0.9999806227429388	WITHOUT_CLASSIFICATION	1.9377257061234645E-5	DEFECT
// it's OK to use an index equal to the size of the list	WITHOUT_CLASSIFICATION	0.9999882419021796	WITHOUT_CLASSIFICATION	1.175809782038817E-5	DEFECT
// try replacing an existing value	WITHOUT_CLASSIFICATION	0.9999840499412708	WITHOUT_CLASSIFICATION	1.5950058729222326E-5	DEFECT
// basic check for independence	WITHOUT_CLASSIFICATION	0.9999978938727915	WITHOUT_CLASSIFICATION	2.106127208504506E-6	DEFECT
// basic check for independence	WITHOUT_CLASSIFICATION	0.9999978938727915	WITHOUT_CLASSIFICATION	2.106127208504506E-6	DEFECT
// try a null source	WITHOUT_CLASSIFICATION	0.9999974903079567	WITHOUT_CLASSIFICATION	2.509692043326777E-6	DEFECT
// check negative index throws exception	WITHOUT_CLASSIFICATION	0.9999792309562785	WITHOUT_CLASSIFICATION	2.0769043721524086E-5	DEFECT
// check negative index throws exception	WITHOUT_CLASSIFICATION	0.9999792309562785	WITHOUT_CLASSIFICATION	2.0769043721524086E-5	DEFECT
// this is expected	WITHOUT_CLASSIFICATION	0.9999764038595734	WITHOUT_CLASSIFICATION	2.3596140426577788E-5	DEFECT
// this is expected	WITHOUT_CLASSIFICATION	0.9999764038595734	WITHOUT_CLASSIFICATION	2.3596140426577788E-5	DEFECT
// this is expected	WITHOUT_CLASSIFICATION	0.9999764038595734	WITHOUT_CLASSIFICATION	2.3596140426577788E-5	DEFECT
// check index == getItemCount() throws exception	WITHOUT_CLASSIFICATION	0.9999935556102533	WITHOUT_CLASSIFICATION	6.444389746650846E-6	DEFECT
// test null source	WITHOUT_CLASSIFICATION	0.9999988924131991	WITHOUT_CLASSIFICATION	1.1075868009160557E-6	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999847370663418	WITHOUT_CLASSIFICATION	1.5262933658178298E-5	DEFECT
// an empty dataset should return a null range	WITHOUT_CLASSIFICATION	0.999958276217122	WITHOUT_CLASSIFICATION	4.1723782877996026E-5	DEFECT
/* Number n = */	WITHOUT_CLASSIFICATION	0.9999880826591997	WITHOUT_CLASSIFICATION	1.1917340800221007E-5	DEFECT
/* Number n = */	WITHOUT_CLASSIFICATION	0.9999880826591997	WITHOUT_CLASSIFICATION	1.1917340800221007E-5	DEFECT
// try null	WITHOUT_CLASSIFICATION	0.9999806227429388	WITHOUT_CLASSIFICATION	1.9377257061234645E-5	DEFECT
// basic check for independence	WITHOUT_CLASSIFICATION	0.9999978938727915	WITHOUT_CLASSIFICATION	2.106127208504506E-6	DEFECT
// basic check for independence	WITHOUT_CLASSIFICATION	0.9999978938727915	WITHOUT_CLASSIFICATION	2.106127208504506E-6	DEFECT
// this is expected	WITHOUT_CLASSIFICATION	0.9999764038595734	WITHOUT_CLASSIFICATION	2.3596140426577788E-5	DEFECT
// this is expected	WITHOUT_CLASSIFICATION	0.9999764038595734	WITHOUT_CLASSIFICATION	2.3596140426577788E-5	DEFECT
// this is expected	WITHOUT_CLASSIFICATION	0.9999764038595734	WITHOUT_CLASSIFICATION	2.3596140426577788E-5	DEFECT
// check index == getItemCount() throws exception	WITHOUT_CLASSIFICATION	0.9999935556102533	WITHOUT_CLASSIFICATION	6.444389746650846E-6	DEFECT
// test null source	WITHOUT_CLASSIFICATION	0.9999988924131991	WITHOUT_CLASSIFICATION	1.1075868009160557E-6	DEFECT
// another item	WITHOUT_CLASSIFICATION	0.9999968749346296	WITHOUT_CLASSIFICATION	3.1250653703057064E-6	DEFECT
/* Number n =*/	WITHOUT_CLASSIFICATION	0.9999879309782396	WITHOUT_CLASSIFICATION	1.2069021760359921E-5	DEFECT
// increment a null value	WITHOUT_CLASSIFICATION	0.9998639885600403	WITHOUT_CLASSIFICATION	1.360114399595884E-4	DEFECT
// increment an unknown row	WITHOUT_CLASSIFICATION	0.9999549232763223	WITHOUT_CLASSIFICATION	4.5076723677810745E-5	DEFECT
// increment an unknown column	WITHOUT_CLASSIFICATION	0.9999713951881579	WITHOUT_CLASSIFICATION	2.8604811842020485E-5	DEFECT
// a row of all null values is still counted...	WITHOUT_CLASSIFICATION	0.9999966665776283	WITHOUT_CLASSIFICATION	3.3334223717135097E-6	DEFECT
// a column of all null values is still counted...	WITHOUT_CLASSIFICATION	0.9999909966948116	WITHOUT_CLASSIFICATION	9.003305188292813E-6	DEFECT
// try a dataset with some content...	WITHOUT_CLASSIFICATION	0.9999973276064307	WITHOUT_CLASSIFICATION	2.6723935693694778E-6	DEFECT
// check that the clone doesn't share the same underlying arrays.	WITHOUT_CLASSIFICATION	0.9999928241719243	WITHOUT_CLASSIFICATION	7.175828075809383E-6	DEFECT
// check that the clone doesn't share the same underlying arrays.	WITHOUT_CLASSIFICATION	0.9999928241719243	WITHOUT_CLASSIFICATION	7.175828075809383E-6	DEFECT
// check that two empty datasets are equal	WITHOUT_CLASSIFICATION	0.9999996355839792	WITHOUT_CLASSIFICATION	3.644160207214417E-7	DEFECT
// check an empty dataset	WITHOUT_CLASSIFICATION	0.9999927737802312	WITHOUT_CLASSIFICATION	7.2262197686898415E-6	DEFECT
// check an empty dataset	WITHOUT_CLASSIFICATION	0.9999927737802312	WITHOUT_CLASSIFICATION	7.2262197686898415E-6	DEFECT
// make sure that modifying the returned array doesn't change the // function	WITHOUT_CLASSIFICATION	0.9999804863707995	WITHOUT_CLASSIFICATION	1.9513629200554693E-5	DEFECT
// note that we don't define taskB1	WITHOUT_CLASSIFICATION	0.9999754291276668	WITHOUT_CLASSIFICATION	2.4570872333294202E-5	DEFECT
// define subtasks	WITHOUT_CLASSIFICATION	0.9999989272994996	WITHOUT_CLASSIFICATION	1.0727005004484133E-6	DEFECT
/* Number start = */	WITHOUT_CLASSIFICATION	0.999998521484298	WITHOUT_CLASSIFICATION	1.4785157020270003E-6	DEFECT
// test collection 3, which doesn't define all tasks in all series	WITHOUT_CLASSIFICATION	0.9999942972446602	WITHOUT_CLASSIFICATION	5.702755339827017E-6	DEFECT
// test collection 3, which doesn't define all tasks in all series	WITHOUT_CLASSIFICATION	0.9999942972446602	WITHOUT_CLASSIFICATION	5.702755339827017E-6	DEFECT
// test collection 3, which doesn't define all tasks in all series	WITHOUT_CLASSIFICATION	0.9999942972446602	WITHOUT_CLASSIFICATION	5.702755339827017E-6	DEFECT
/* int count = */	WITHOUT_CLASSIFICATION	0.9999652440582828	WITHOUT_CLASSIFICATION	3.475594171711484E-5	DEFECT
/* Number end = */	WITHOUT_CLASSIFICATION	0.9999919037750284	WITHOUT_CLASSIFICATION	8.09622497149849E-6	DEFECT
// try a single item	WITHOUT_CLASSIFICATION	0.9999993004383021	WITHOUT_CLASSIFICATION	6.995616978372026E-7	DEFECT
// simple check for independence	WITHOUT_CLASSIFICATION	0.9999991584638916	WITHOUT_CLASSIFICATION	8.415361084225627E-7	DEFECT
// what if we don't want the interval?	WITHOUT_CLASSIFICATION	0.9999562550488547	WITHOUT_CLASSIFICATION	4.37449511452703E-5	DEFECT
// an item in series 2	WITHOUT_CLASSIFICATION	0.9999782395162016	WITHOUT_CLASSIFICATION	2.1760483798444728E-5	DEFECT
// another empty series	WITHOUT_CLASSIFICATION	0.9999975606823753	WITHOUT_CLASSIFICATION	2.439317624657644E-6	DEFECT
// a dataset with a single value	WITHOUT_CLASSIFICATION	0.9999989791848146	WITHOUT_CLASSIFICATION	1.020815185396805E-6	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999847370663418	WITHOUT_CLASSIFICATION	1.5262933658178298E-5	DEFECT
// a dataset with a single value	WITHOUT_CLASSIFICATION	0.9999989791848146	WITHOUT_CLASSIFICATION	1.020815185396805E-6	DEFECT
// null is ignored	WITHOUT_CLASSIFICATION	0.9999971588360291	WITHOUT_CLASSIFICATION	2.8411639709508893E-6	DEFECT
// a Double.NaN should be ignored	WITHOUT_CLASSIFICATION	0.9999955175813433	WITHOUT_CLASSIFICATION	4.482418656624054E-6	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999847370663418	WITHOUT_CLASSIFICATION	1.5262933658178298E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999847370663418	WITHOUT_CLASSIFICATION	1.5262933658178298E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999847370663418	WITHOUT_CLASSIFICATION	1.5262933658178298E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999847370663418	WITHOUT_CLASSIFICATION	1.5262933658178298E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999847370663418	WITHOUT_CLASSIFICATION	1.5262933658178298E-5	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999872438634059	WITHOUT_CLASSIFICATION	1.2756136594073208E-5	DEFECT
// try null argument	WITHOUT_CLASSIFICATION	0.9999938621613919	WITHOUT_CLASSIFICATION	6.137838608224545E-6	DEFECT
// try null argument	WITHOUT_CLASSIFICATION	0.9999938621613919	WITHOUT_CLASSIFICATION	6.137838608224545E-6	DEFECT
// check that clone is independent of the original	WITHOUT_CLASSIFICATION	0.9999997976510937	WITHOUT_CLASSIFICATION	2.023489064238827E-7	DEFECT
/* Number n =*/	WITHOUT_CLASSIFICATION	0.9999879309782396	WITHOUT_CLASSIFICATION	1.2069021760359921E-5	DEFECT
// try a dataset with some content...	WITHOUT_CLASSIFICATION	0.9999973276064307	WITHOUT_CLASSIFICATION	2.6723935693694778E-6	DEFECT
// check that the clone doesn't share the same underlying arrays.	WITHOUT_CLASSIFICATION	0.9999928241719243	WITHOUT_CLASSIFICATION	7.175828075809383E-6	DEFECT
// simple check for independence	WITHOUT_CLASSIFICATION	0.9999991584638916	WITHOUT_CLASSIFICATION	8.415361084225627E-7	DEFECT
// simple check for independence	WITHOUT_CLASSIFICATION	0.9999991584638916	WITHOUT_CLASSIFICATION	8.415361084225627E-7	DEFECT
// try a single item	WITHOUT_CLASSIFICATION	0.9999993004383021	WITHOUT_CLASSIFICATION	6.995616978372026E-7	DEFECT
// another item	WITHOUT_CLASSIFICATION	0.9999968749346296	WITHOUT_CLASSIFICATION	3.1250653703057064E-6	DEFECT
// another empty series	WITHOUT_CLASSIFICATION	0.9999975606823753	WITHOUT_CLASSIFICATION	2.439317624657644E-6	DEFECT
// an item in series 2	WITHOUT_CLASSIFICATION	0.9999782395162016	WITHOUT_CLASSIFICATION	2.1760483798444728E-5	DEFECT
// Double.NaN DOESN'T mess things up	WITHOUT_CLASSIFICATION	0.9999794949739224	WITHOUT_CLASSIFICATION	2.050502607764422E-5	DEFECT
// got it!	WITHOUT_CLASSIFICATION	0.9999900141263929	WITHOUT_CLASSIFICATION	9.985873607074402E-6	DEFECT
// check that empty dataset is handled OK	WITHOUT_CLASSIFICATION	0.99999761706811	WITHOUT_CLASSIFICATION	2.382931890024332E-6	DEFECT
// and that simple aggregation works	WITHOUT_CLASSIFICATION	0.9999982300284823	WITHOUT_CLASSIFICATION	1.769971517705225E-6	DEFECT
// an empty dataset should return a null max	WITHOUT_CLASSIFICATION	0.9999580477585565	WITHOUT_CLASSIFICATION	4.195224144352497E-5	DEFECT
// an empty dataset should return a null max	WITHOUT_CLASSIFICATION	0.9999580477585565	WITHOUT_CLASSIFICATION	4.195224144352497E-5	DEFECT
// null dataset throws IllegalArgumentException	WITHOUT_CLASSIFICATION	0.9999970102202916	WITHOUT_CLASSIFICATION	2.989779708472585E-6	DEFECT
// null list throws IllegalArgumentException	WITHOUT_CLASSIFICATION	0.9999902099118099	WITHOUT_CLASSIFICATION	9.790088190150083E-6	DEFECT
// null range throws IllegalArgumentException	WITHOUT_CLASSIFICATION	0.9999898935971199	WITHOUT_CLASSIFICATION	1.0106402880173505E-5	DEFECT
// empty dataset returns null	WITHOUT_CLASSIFICATION	0.9999942674003857	WITHOUT_CLASSIFICATION	5.7325996142970515E-6	DEFECT
// add an empty series	WITHOUT_CLASSIFICATION	0.9999871559471879	WITHOUT_CLASSIFICATION	1.2844052812166462E-5	DEFECT
// check a null value	WITHOUT_CLASSIFICATION	0.999963937820607	WITHOUT_CLASSIFICATION	3.6062179393082794E-5	DEFECT
// check a NaN	WITHOUT_CLASSIFICATION	0.9999969968605167	WITHOUT_CLASSIFICATION	3.003139483395616E-6	DEFECT
// check another regular value	WITHOUT_CLASSIFICATION	0.999996287552242	WITHOUT_CLASSIFICATION	3.7124477580505764E-6	DEFECT
// add a second series	WITHOUT_CLASSIFICATION	0.9999989157113924	WITHOUT_CLASSIFICATION	1.084288607497842E-6	DEFECT
// add a value to the second series	WITHOUT_CLASSIFICATION	0.9999997261749347	WITHOUT_CLASSIFICATION	2.738250652814115E-7	DEFECT
// add a value that isn't in the xRange	WITHOUT_CLASSIFICATION	0.9999437364553849	WITHOUT_CLASSIFICATION	5.6263544615197923E-5	DEFECT
// try some nulls	WITHOUT_CLASSIFICATION	0.9999819268731759	WITHOUT_CLASSIFICATION	1.8073126824148586E-5	DEFECT
// an empty dataset should return null for bounds	WITHOUT_CLASSIFICATION	0.9999835788526927	WITHOUT_CLASSIFICATION	1.6421147307251633E-5	DEFECT
// try a dataset with a single value	WITHOUT_CLASSIFICATION	0.9999990997942464	WITHOUT_CLASSIFICATION	9.002057536238719E-7	DEFECT
// try a dataset with two values	WITHOUT_CLASSIFICATION	0.9999989190817945	WITHOUT_CLASSIFICATION	1.0809182055417243E-6	DEFECT
// try a Double.NaN	WITHOUT_CLASSIFICATION	0.9999973451390906	WITHOUT_CLASSIFICATION	2.6548609094804076E-6	DEFECT
// try a Double.NEGATIVE_INFINITY	WITHOUT_CLASSIFICATION	0.9999846562723735	WITHOUT_CLASSIFICATION	1.5343727626464288E-5	DEFECT
// overwrite the value	WITHOUT_CLASSIFICATION	0.9999970448338509	WITHOUT_CLASSIFICATION	2.955166149115206E-6	DEFECT
// test independence	WITHOUT_CLASSIFICATION	0.9999974409547533	WITHOUT_CLASSIFICATION	2.5590452467655204E-6	DEFECT
// now overwrite this item with another	WITHOUT_CLASSIFICATION	0.9999934036865414	WITHOUT_CLASSIFICATION	6.596313458501805E-6	DEFECT
// try null list	WITHOUT_CLASSIFICATION	0.9999881418131543	WITHOUT_CLASSIFICATION	1.1858186845781388E-5	DEFECT
// try a list containing a single value	WITHOUT_CLASSIFICATION	0.9999979150639958	WITHOUT_CLASSIFICATION	2.084936004184423E-6	DEFECT
// try null array	WITHOUT_CLASSIFICATION	0.9999786995110341	WITHOUT_CLASSIFICATION	2.1300488965869858E-5	DEFECT
// try an array containing no items	WITHOUT_CLASSIFICATION	0.9999874704084403	WITHOUT_CLASSIFICATION	1.2529591559744659E-5	DEFECT
// try an array containing a single Number	WITHOUT_CLASSIFICATION	0.999998560721014	WITHOUT_CLASSIFICATION	1.439278986000761E-6	DEFECT
// try an array containing a single Number and a null	WITHOUT_CLASSIFICATION	0.9999979810341052	WITHOUT_CLASSIFICATION	2.0189658947197893E-6	DEFECT
// try an array containing a single Number and a NaN	WITHOUT_CLASSIFICATION	0.9999994358413943	WITHOUT_CLASSIFICATION	5.641586058338477E-7	DEFECT
// try a null argument	WITHOUT_CLASSIFICATION	0.9999894940748943	WITHOUT_CLASSIFICATION	1.050592510572729E-5	DEFECT
// OK	WITHOUT_CLASSIFICATION	0.9999882625349319	WITHOUT_CLASSIFICATION	1.1737465068006349E-5	DEFECT
// try null argument	WITHOUT_CLASSIFICATION	0.9999938621613919	WITHOUT_CLASSIFICATION	6.137838608224545E-6	DEFECT
// test independence	WITHOUT_CLASSIFICATION	0.9999974409547533	WITHOUT_CLASSIFICATION	2.5590452467655204E-6	DEFECT
// try an empty collection	WITHOUT_CLASSIFICATION	0.9999329525010621	WITHOUT_CLASSIFICATION	6.70474989380397E-5	DEFECT
// try a collection with a single number	WITHOUT_CLASSIFICATION	0.9999976411001342	WITHOUT_CLASSIFICATION	2.358899865705228E-6	DEFECT
// try a collection with a single number plus a NaN	WITHOUT_CLASSIFICATION	0.9999965523713861	WITHOUT_CLASSIFICATION	3.4476286138804316E-6	DEFECT
// try a collection with several numbers	WITHOUT_CLASSIFICATION	0.9999974996441507	WITHOUT_CLASSIFICATION	2.500355849198955E-6	DEFECT
// a Collection containing a NaN will return Double.NaN for the result	WITHOUT_CLASSIFICATION	0.9999988904639686	WITHOUT_CLASSIFICATION	1.1095360314178427E-6	DEFECT
// check null list	WITHOUT_CLASSIFICATION	0.9999965472676428	WITHOUT_CLASSIFICATION	3.45273235727871E-6	DEFECT
// check empty list	WITHOUT_CLASSIFICATION	0.9999988451874688	WITHOUT_CLASSIFICATION	1.154812531191258E-6	DEFECT
// check list containing null	WITHOUT_CLASSIFICATION	0.9999890203161031	WITHOUT_CLASSIFICATION	1.0979683896878638E-5	DEFECT
// try zero length array	WITHOUT_CLASSIFICATION	0.9999829575478167	WITHOUT_CLASSIFICATION	1.7042452183172617E-5	DEFECT
// try single value	WITHOUT_CLASSIFICATION	0.999998613551954	WITHOUT_CLASSIFICATION	1.3864480460667843E-6	DEFECT
// locale shouldn't matter here	WITHOUT_CLASSIFICATION	0.9999531108675137	WITHOUT_CLASSIFICATION	4.688913248631367E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999847370663418	WITHOUT_CLASSIFICATION	1.5262933658178298E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999847370663418	WITHOUT_CLASSIFICATION	1.5262933658178298E-5	DEFECT
// try deleting a time period that doesn't exist...	WITHOUT_CLASSIFICATION	0.9999749589004554	WITHOUT_CLASSIFICATION	2.5041099544638154E-5	DEFECT
// try deleting null	WITHOUT_CLASSIFICATION	0.9999921609170486	WITHOUT_CLASSIFICATION	7.839082951407618E-6	DEFECT
// copy a range before the start of the series data...	WITHOUT_CLASSIFICATION	0.9999998168658218	WITHOUT_CLASSIFICATION	1.8313417821960329E-7	DEFECT
// copy a range that includes only the first item in the series...	WITHOUT_CLASSIFICATION	0.9999994470899989	WITHOUT_CLASSIFICATION	5.529100011130849E-7	DEFECT
// copy a range that begins before and ends in the middle of the // series...	WITHOUT_CLASSIFICATION	0.9999994606327807	WITHOUT_CLASSIFICATION	5.393672194134561E-7	DEFECT
// copy just the first item...	WITHOUT_CLASSIFICATION	0.999998870724951	WITHOUT_CLASSIFICATION	1.1292750490217191E-6	DEFECT
// copy the first two items...	WITHOUT_CLASSIFICATION	0.9999992035698322	WITHOUT_CLASSIFICATION	7.964301678866714E-7	DEFECT
// copy the middle three items...	WITHOUT_CLASSIFICATION	0.999999631055674	WITHOUT_CLASSIFICATION	3.689443259950207E-7	DEFECT
// copy the last two items...	WITHOUT_CLASSIFICATION	0.9999992734934695	WITHOUT_CLASSIFICATION	7.265065304643132E-7	DEFECT
// copy the last item...	WITHOUT_CLASSIFICATION	0.9999987037749735	WITHOUT_CLASSIFICATION	1.2962250265281684E-6	DEFECT
// check negative first argument	WITHOUT_CLASSIFICATION	0.9999993454484991	WITHOUT_CLASSIFICATION	6.545515009590788E-7	DEFECT
/* TimeSeries result = */	WITHOUT_CLASSIFICATION	0.9999704816148614	WITHOUT_CLASSIFICATION	2.95183851386707E-5	DEFECT
/* TimeSeries result = */	WITHOUT_CLASSIFICATION	0.9999704816148614	WITHOUT_CLASSIFICATION	2.95183851386707E-5	DEFECT
// check second argument less than first argument	WITHOUT_CLASSIFICATION	0.9999997302893829	WITHOUT_CLASSIFICATION	2.6971061704900484E-7	DEFECT
// changing the overwritten record shouldn't affect the series	WITHOUT_CLASSIFICATION	0.9999923686936263	WITHOUT_CLASSIFICATION	7.631306373803411E-6	DEFECT
// changing the item that was added should not change the series	WITHOUT_CLASSIFICATION	0.9999974641310464	WITHOUT_CLASSIFICATION	2.5358689535688297E-6	DEFECT
// can't get anything yet...just an exception	WITHOUT_CLASSIFICATION	0.9998609711657303	WITHOUT_CLASSIFICATION	1.390288342698091E-4	DEFECT
/*TimeSeriesDataItem item =*/	WITHOUT_CLASSIFICATION	0.9999338979423423	WITHOUT_CLASSIFICATION	6.610205765761719E-5	DEFECT
/*item = */	WITHOUT_CLASSIFICATION	0.99997726024707	WITHOUT_CLASSIFICATION	2.2739752929918435E-5	DEFECT
/* TimeSeriesDataItem item = */	WITHOUT_CLASSIFICATION	0.9999595345667057	WITHOUT_CLASSIFICATION	4.04654332941699E-5	DEFECT
// test empty series	WITHOUT_CLASSIFICATION	0.9999992062282456	WITHOUT_CLASSIFICATION	7.937717544050168E-7	DEFECT
// test series with one item	WITHOUT_CLASSIFICATION	0.9999965926037312	WITHOUT_CLASSIFICATION	3.407396268888852E-6	DEFECT
// test series with two items	WITHOUT_CLASSIFICATION	0.9999978113588932	WITHOUT_CLASSIFICATION	2.188641106799994E-6	DEFECT
// milliseconds somewhere in 2006	WITHOUT_CLASSIFICATION	0.9999948935895508	WITHOUT_CLASSIFICATION	5.1064104491169295E-6	DEFECT
// test a series with 1 item	WITHOUT_CLASSIFICATION	0.9999959289188841	WITHOUT_CLASSIFICATION	4.0710811158925695E-6	DEFECT
// test a series with two items	WITHOUT_CLASSIFICATION	0.9999983428745141	WITHOUT_CLASSIFICATION	1.6571254859430308E-6	DEFECT
// this line triggers the defect	WITHOUT_CLASSIFICATION	0.999976948742914	WITHOUT_CLASSIFICATION	2.3051257086003595E-5	DEFECT
// check that removing by index also works	WITHOUT_CLASSIFICATION	0.9999844395983504	WITHOUT_CLASSIFICATION	1.5560401649632038E-5	DEFECT
// null items are ignored	WITHOUT_CLASSIFICATION	0.9999940496230724	WITHOUT_CLASSIFICATION	5.950376927640472E-6	DEFECT
// if there are only null items, we get a NaNRange	WITHOUT_CLASSIFICATION	0.9999968506694663	WITHOUT_CLASSIFICATION	3.1493305337353815E-6	DEFECT
// locale should not matter here	WITHOUT_CLASSIFICATION	0.9999645180325264	WITHOUT_CLASSIFICATION	3.548196747353758E-5	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999872438634059	WITHOUT_CLASSIFICATION	1.2756136594073208E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999847370663418	WITHOUT_CLASSIFICATION	1.5262933658178298E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999847370663418	WITHOUT_CLASSIFICATION	1.5262933658178298E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999847370663418	WITHOUT_CLASSIFICATION	1.5262933658178298E-5	DEFECT
// locale should not matter here	WITHOUT_CLASSIFICATION	0.9999645180325264	WITHOUT_CLASSIFICATION	3.548196747353758E-5	DEFECT
// locale should not matter here	WITHOUT_CLASSIFICATION	0.9999645180325264	WITHOUT_CLASSIFICATION	3.548196747353758E-5	DEFECT
// test 3...	WITHOUT_CLASSIFICATION	0.9999975530489489	WITHOUT_CLASSIFICATION	2.446951051227079E-6	DEFECT
// test 1...	WITHOUT_CLASSIFICATION	0.9999971080897986	WITHOUT_CLASSIFICATION	2.8919102014749283E-6	DEFECT
// test 1...	WITHOUT_CLASSIFICATION	0.9999971080897986	WITHOUT_CLASSIFICATION	2.8919102014749283E-6	DEFECT
// domain description - null	WITHOUT_CLASSIFICATION	0.9999923483059624	WITHOUT_CLASSIFICATION	7.651694037634826E-6	DEFECT
// test 2...	WITHOUT_CLASSIFICATION	0.9999973574242687	WITHOUT_CLASSIFICATION	2.642575731282162E-6	DEFECT
// a null item should throw an IllegalArgumentException	WITHOUT_CLASSIFICATION	0.9999551737329819	WITHOUT_CLASSIFICATION	4.482626701808949E-5	DEFECT
/*Quarter q =*/	WITHOUT_CLASSIFICATION	0.999990568152153	WITHOUT_CLASSIFICATION	9.431847847009366E-6	DEFECT
/*Quarter q =*/	WITHOUT_CLASSIFICATION	0.999990568152153	WITHOUT_CLASSIFICATION	9.431847847009366E-6	DEFECT
// range description	WITHOUT_CLASSIFICATION	0.9999985525101884	WITHOUT_CLASSIFICATION	1.4474898115064464E-6	DEFECT
// domain description	WITHOUT_CLASSIFICATION	0.9999900788331727	WITHOUT_CLASSIFICATION	9.921166827278116E-6	DEFECT
// check dataset with one time period	WITHOUT_CLASSIFICATION	0.9999979870312898	WITHOUT_CLASSIFICATION	2.0129687100534802E-6	DEFECT
// check empty dataset	WITHOUT_CLASSIFICATION	0.9999987743659513	WITHOUT_CLASSIFICATION	1.225634048643294E-6	DEFECT
// range description - null	WITHOUT_CLASSIFICATION	0.9999958873200674	WITHOUT_CLASSIFICATION	4.112679932620962E-6	DEFECT
// check dataset with one time period	WITHOUT_CLASSIFICATION	0.9999979870312898	WITHOUT_CLASSIFICATION	2.0129687100534802E-6	DEFECT
// check empty dataset	WITHOUT_CLASSIFICATION	0.9999987743659513	WITHOUT_CLASSIFICATION	1.225634048643294E-6	DEFECT
// add a fourth time period	WITHOUT_CLASSIFICATION	0.9999762924005545	WITHOUT_CLASSIFICATION	2.3707599445491917E-5	DEFECT
// add a third time period	WITHOUT_CLASSIFICATION	0.999941381018659	WITHOUT_CLASSIFICATION	5.861898134098284E-5	DEFECT
// check dataset with two time periods	WITHOUT_CLASSIFICATION	0.9999994740492346	WITHOUT_CLASSIFICATION	5.259507653812851E-7	DEFECT
// check dataset with two time periods	WITHOUT_CLASSIFICATION	0.9999994740492346	WITHOUT_CLASSIFICATION	5.259507653812851E-7	DEFECT
// first day of week is Sunday	WITHOUT_CLASSIFICATION	0.9999832641911347	WITHOUT_CLASSIFICATION	1.6735808865298063E-5	DEFECT
// first day of week is monday	WITHOUT_CLASSIFICATION	0.9999889618683112	WITHOUT_CLASSIFICATION	1.103813168871693E-5	DEFECT
// try null zone	WITHOUT_CLASSIFICATION	0.9999836492848133	WITHOUT_CLASSIFICATION	1.6350715186745175E-5	DEFECT
// add series to collection 1, should be not equal	WITHOUT_CLASSIFICATION	0.999988449956434	WITHOUT_CLASSIFICATION	1.1550043566121337E-5	DEFECT
// newly created collections should be equal	WITHOUT_CLASSIFICATION	0.9999959369990118	WITHOUT_CLASSIFICATION	4.063000988139174E-6	DEFECT
// now add the same series to collection 2 to make them equal again...	WITHOUT_CLASSIFICATION	0.99999751017477	WITHOUT_CLASSIFICATION	2.4898252299559836E-6	DEFECT
// now remove series 2 from collection 2	WITHOUT_CLASSIFICATION	0.9999971324587066	WITHOUT_CLASSIFICATION	2.8675412934820895E-6	DEFECT
// now remove series 2 from collection 1 to make them equal again	WITHOUT_CLASSIFICATION	0.9999969921389046	WITHOUT_CLASSIFICATION	3.0078610953824566E-6	DEFECT
// for a series with no data, we expect {-1, -1}...	WITHOUT_CLASSIFICATION	0.9999984334556387	WITHOUT_CLASSIFICATION	1.5665443612926815E-6	DEFECT
// now test with a single value in the series...	WITHOUT_CLASSIFICATION	0.999997955422771	WITHOUT_CLASSIFICATION	2.0445772289173327E-6	DEFECT
// now add a second value to the series...	WITHOUT_CLASSIFICATION	0.9999997275658038	WITHOUT_CLASSIFICATION	2.7243419618129336E-7	DEFECT
// now add a third value to the series...	WITHOUT_CLASSIFICATION	0.9999990794851453	WITHOUT_CLASSIFICATION	9.205148546090571E-7	DEFECT
/* TimeSeries s = */	WITHOUT_CLASSIFICATION	0.9999789437020312	WITHOUT_CLASSIFICATION	2.105629796879978E-5	DEFECT
// correct outcome	WITHOUT_CLASSIFICATION	0.9999609762102543	WITHOUT_CLASSIFICATION	3.902378974578983E-5	DEFECT
// wrong outcome	WITHOUT_CLASSIFICATION	0.9999964262660636	WITHOUT_CLASSIFICATION	3.5737339365680407E-6	DEFECT
// store the current time zone	WITHOUT_CLASSIFICATION	0.9999983855924136	WITHOUT_CLASSIFICATION	1.6144075864969275E-6	DEFECT
// restore the default time zone	WITHOUT_CLASSIFICATION	0.9999993507372015	WITHOUT_CLASSIFICATION	6.492627985574541E-7	DEFECT
// when the dataset contains no series, we expect the range to be null	WITHOUT_CLASSIFICATION	0.9999932645532555	WITHOUT_CLASSIFICATION	6.735446744509121E-6	DEFECT
// tests with values	WITHOUT_CLASSIFICATION	0.9999981402664738	WITHOUT_CLASSIFICATION	1.8597335262209174E-6	DEFECT
// adding a second series	WITHOUT_CLASSIFICATION	0.9999981969518713	WITHOUT_CLASSIFICATION	1.8030481286629155E-6	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999872438634059	WITHOUT_CLASSIFICATION	1.2756136594073208E-5	DEFECT
// x	WITHOUT_CLASSIFICATION	0.9999893001202034	WITHOUT_CLASSIFICATION	1.0699879796598567E-5	DEFECT
// y	WITHOUT_CLASSIFICATION	0.9999905092569551	WITHOUT_CLASSIFICATION	9.490743044845414E-6	DEFECT
// period	WITHOUT_CLASSIFICATION	0.9999894061851371	WITHOUT_CLASSIFICATION	1.0593814862942325E-5	DEFECT
// autoSort	WITHOUT_CLASSIFICATION	0.9999973640620335	WITHOUT_CLASSIFICATION	2.6359379664263556E-6	DEFECT
// autoSort	WITHOUT_CLASSIFICATION	0.9999973640620335	WITHOUT_CLASSIFICATION	2.6359379664263556E-6	DEFECT
// add a value	WITHOUT_CLASSIFICATION	0.9999906191007988	WITHOUT_CLASSIFICATION	9.38089920115503E-6	DEFECT
// add a value	WITHOUT_CLASSIFICATION	0.9999906191007988	WITHOUT_CLASSIFICATION	9.38089920115503E-6	DEFECT
// add another value	WITHOUT_CLASSIFICATION	0.9999970657896468	WITHOUT_CLASSIFICATION	2.9342103532642255E-6	DEFECT
// add another value	WITHOUT_CLASSIFICATION	0.9999970657896468	WITHOUT_CLASSIFICATION	2.9342103532642255E-6	DEFECT
// try a dataset with some content...	WITHOUT_CLASSIFICATION	0.9999973276064307	WITHOUT_CLASSIFICATION	2.6723935693694778E-6	DEFECT
// try a dataset with some content...	WITHOUT_CLASSIFICATION	0.9999973276064307	WITHOUT_CLASSIFICATION	2.6723935693694778E-6	DEFECT
// add an empty series	WITHOUT_CLASSIFICATION	0.9999871559471879	WITHOUT_CLASSIFICATION	1.2844052812166462E-5	DEFECT
// locale shouldn't matter here	WITHOUT_CLASSIFICATION	0.9999531108675137	WITHOUT_CLASSIFICATION	4.688913248631367E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999847370663418	WITHOUT_CLASSIFICATION	1.5262933658178298E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999847370663418	WITHOUT_CLASSIFICATION	1.5262933658178298E-5	DEFECT
// locale should not matter here	WITHOUT_CLASSIFICATION	0.9999645180325264	WITHOUT_CLASSIFICATION	3.548196747353758E-5	DEFECT
// locale should not matter here	WITHOUT_CLASSIFICATION	0.9999645180325264	WITHOUT_CLASSIFICATION	3.548196747353758E-5	DEFECT
// test 1...	WITHOUT_CLASSIFICATION	0.9999971080897986	WITHOUT_CLASSIFICATION	2.8919102014749283E-6	DEFECT
// test 1...	WITHOUT_CLASSIFICATION	0.9999971080897986	WITHOUT_CLASSIFICATION	2.8919102014749283E-6	DEFECT
// test 1...	WITHOUT_CLASSIFICATION	0.9999971080897986	WITHOUT_CLASSIFICATION	2.8919102014749283E-6	DEFECT
// test 2...	WITHOUT_CLASSIFICATION	0.9999973574242687	WITHOUT_CLASSIFICATION	2.642575731282162E-6	DEFECT
// test 2...	WITHOUT_CLASSIFICATION	0.9999973574242687	WITHOUT_CLASSIFICATION	2.642575731282162E-6	DEFECT
// test 2...	WITHOUT_CLASSIFICATION	0.9999973574242687	WITHOUT_CLASSIFICATION	2.642575731282162E-6	DEFECT
// test 3...	WITHOUT_CLASSIFICATION	0.9999975530489489	WITHOUT_CLASSIFICATION	2.446951051227079E-6	DEFECT
// test 3...	WITHOUT_CLASSIFICATION	0.9999975530489489	WITHOUT_CLASSIFICATION	2.446951051227079E-6	DEFECT
// correct outcome	WITHOUT_CLASSIFICATION	0.9999609762102543	WITHOUT_CLASSIFICATION	3.902378974578983E-5	DEFECT
// wrong outcome	WITHOUT_CLASSIFICATION	0.9999964262660636	WITHOUT_CLASSIFICATION	3.5737339365680407E-6	DEFECT
// now test that the clone is independent of the original	WITHOUT_CLASSIFICATION	0.9999997825747111	WITHOUT_CLASSIFICATION	2.174252889435164E-7	DEFECT
// Make sure there's nothing left	WITHOUT_CLASSIFICATION	0.9999988338632559	WITHOUT_CLASSIFICATION	1.1661367441593934E-6	DEFECT
// seriesKey	WITHOUT_CLASSIFICATION	0.9999983557114289	WITHOUT_CLASSIFICATION	1.644288571129772E-6	DEFECT
// seriesKey	WITHOUT_CLASSIFICATION	0.9999983557114289	WITHOUT_CLASSIFICATION	1.644288571129772E-6	DEFECT
// the moving average series has 7 items, the first three // days (11, 12, 13 August are skipped)	WITHOUT_CLASSIFICATION	0.9999988184866876	WITHOUT_CLASSIFICATION	1.1815133123438368E-6	DEFECT
// add a series	WITHOUT_CLASSIFICATION	0.9999990443504166	WITHOUT_CLASSIFICATION	9.556495833403221E-7	DEFECT
// seriesKey	WITHOUT_CLASSIFICATION	0.9999983557114289	WITHOUT_CLASSIFICATION	1.644288571129772E-6	DEFECT
/* XYSeries s = */	WITHOUT_CLASSIFICATION	0.999984837948268	WITHOUT_CLASSIFICATION	1.5162051732004604E-5	DEFECT
// remove a value	WITHOUT_CLASSIFICATION	0.9999900160157863	WITHOUT_CLASSIFICATION	9.983984213619996E-6	DEFECT
// remove a value	WITHOUT_CLASSIFICATION	0.9999900160157863	WITHOUT_CLASSIFICATION	9.983984213619996E-6	DEFECT
// remove a value	WITHOUT_CLASSIFICATION	0.9999900160157863	WITHOUT_CLASSIFICATION	9.983984213619996E-6	DEFECT
// and check the first series too...	WITHOUT_CLASSIFICATION	0.9999996531527532	WITHOUT_CLASSIFICATION	3.4684724677390296E-7	DEFECT
// now add another series	WITHOUT_CLASSIFICATION	0.9999984037596311	WITHOUT_CLASSIFICATION	1.5962403689730166E-6	DEFECT
/*Comparable k =*/	WITHOUT_CLASSIFICATION	0.999993786963961	WITHOUT_CLASSIFICATION	6.213036038998887E-6	DEFECT
// yLow	WITHOUT_CLASSIFICATION	0.9999944345538413	WITHOUT_CLASSIFICATION	5.565446158707414E-6	DEFECT
// allowDuplicateValues	WITHOUT_CLASSIFICATION	0.9999976745349608	WITHOUT_CLASSIFICATION	2.3254650391730073E-6	DEFECT
// allowDuplicateValues	WITHOUT_CLASSIFICATION	0.9999976745349608	WITHOUT_CLASSIFICATION	2.3254650391730073E-6	DEFECT
// check for series key out of bounds	WITHOUT_CLASSIFICATION	0.9999996715971409	WITHOUT_CLASSIFICATION	3.2840285914131225E-7	DEFECT
// yHigh	WITHOUT_CLASSIFICATION	0.9999921707920848	WITHOUT_CLASSIFICATION	7.829207915147019E-6	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999872438634059	WITHOUT_CLASSIFICATION	1.2756136594073208E-5	DEFECT
// x	WITHOUT_CLASSIFICATION	0.9999893001202034	WITHOUT_CLASSIFICATION	1.0699879796598567E-5	DEFECT
// y	WITHOUT_CLASSIFICATION	0.9999905092569551	WITHOUT_CLASSIFICATION	9.490743044845414E-6	DEFECT
// default instances	WITHOUT_CLASSIFICATION	0.9999981457847827	WITHOUT_CLASSIFICATION	1.8542152173379805E-6	DEFECT
// default instances	WITHOUT_CLASSIFICATION	0.9999981457847827	WITHOUT_CLASSIFICATION	1.8542152173379805E-6	DEFECT
// autoSort	WITHOUT_CLASSIFICATION	0.9999973640620335	WITHOUT_CLASSIFICATION	2.6359379664263556E-6	DEFECT
// add a value	WITHOUT_CLASSIFICATION	0.9999906191007988	WITHOUT_CLASSIFICATION	9.38089920115503E-6	DEFECT
// add another value	WITHOUT_CLASSIFICATION	0.9999970657896468	WITHOUT_CLASSIFICATION	2.9342103532642255E-6	DEFECT
// try a dataset with some content...	WITHOUT_CLASSIFICATION	0.9999973276064307	WITHOUT_CLASSIFICATION	2.6723935693694778E-6	DEFECT
// try a dataset with some content...	WITHOUT_CLASSIFICATION	0.9999973276064307	WITHOUT_CLASSIFICATION	2.6723935693694778E-6	DEFECT
// try a dataset with some content...	WITHOUT_CLASSIFICATION	0.9999973276064307	WITHOUT_CLASSIFICATION	2.6723935693694778E-6	DEFECT
// check that the clone doesn't share the same underlying arrays.	WITHOUT_CLASSIFICATION	0.9999928241719243	WITHOUT_CLASSIFICATION	7.175828075809383E-6	DEFECT
// check that the clone doesn't share the same underlying arrays.	WITHOUT_CLASSIFICATION	0.9999928241719243	WITHOUT_CLASSIFICATION	7.175828075809383E-6	DEFECT
// add an empty series	WITHOUT_CLASSIFICATION	0.9999871559471879	WITHOUT_CLASSIFICATION	1.2844052812166462E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999847370663418	WITHOUT_CLASSIFICATION	1.5262933658178298E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999847370663418	WITHOUT_CLASSIFICATION	1.5262933658178298E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999847370663418	WITHOUT_CLASSIFICATION	1.5262933658178298E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999847370663418	WITHOUT_CLASSIFICATION	1.5262933658178298E-5	DEFECT
// wrong outcome	WITHOUT_CLASSIFICATION	0.9999964262660636	WITHOUT_CLASSIFICATION	3.5737339365680407E-6	DEFECT
// wrong outcome	WITHOUT_CLASSIFICATION	0.9999964262660636	WITHOUT_CLASSIFICATION	3.5737339365680407E-6	DEFECT
// tests with values	WITHOUT_CLASSIFICATION	0.9999981402664738	WITHOUT_CLASSIFICATION	1.8597335262209174E-6	DEFECT
// seriesKey	WITHOUT_CLASSIFICATION	0.9999983557114289	WITHOUT_CLASSIFICATION	1.644288571129772E-6	DEFECT
// remove a value	WITHOUT_CLASSIFICATION	0.9999900160157863	WITHOUT_CLASSIFICATION	9.983984213619996E-6	DEFECT
// add a series	WITHOUT_CLASSIFICATION	0.9999990443504166	WITHOUT_CLASSIFICATION	9.556495833403221E-7	DEFECT
/* XYSeries s = */	WITHOUT_CLASSIFICATION	0.999984837948268	WITHOUT_CLASSIFICATION	1.5162051732004604E-5	DEFECT
/* XYSeries s = */	WITHOUT_CLASSIFICATION	0.999984837948268	WITHOUT_CLASSIFICATION	1.5162051732004604E-5	DEFECT
// and check the first series too...	WITHOUT_CLASSIFICATION	0.9999996531527532	WITHOUT_CLASSIFICATION	3.4684724677390296E-7	DEFECT
// allowDuplicateValues	WITHOUT_CLASSIFICATION	0.9999976745349608	WITHOUT_CLASSIFICATION	2.3254650391730073E-6	DEFECT
// check for series key out of bounds	WITHOUT_CLASSIFICATION	0.9999996715971409	WITHOUT_CLASSIFICATION	3.2840285914131225E-7	DEFECT
/*Comparable k =*/	WITHOUT_CLASSIFICATION	0.999993786963961	WITHOUT_CLASSIFICATION	6.213036038998887E-6	DEFECT
/*Comparable k =*/	WITHOUT_CLASSIFICATION	0.999993786963961	WITHOUT_CLASSIFICATION	6.213036038998887E-6	DEFECT
/*Comparable k =*/	WITHOUT_CLASSIFICATION	0.999993786963961	WITHOUT_CLASSIFICATION	6.213036038998887E-6	DEFECT
// check that adding a series will overwrite the old series	WITHOUT_CLASSIFICATION	0.9999985917295668	WITHOUT_CLASSIFICATION	1.40827043315955E-6	DEFECT
// check that adding a series will overwrite the old series	WITHOUT_CLASSIFICATION	0.9999985917295668	WITHOUT_CLASSIFICATION	1.40827043315955E-6	DEFECT
// check that adding a series will overwrite the old series	WITHOUT_CLASSIFICATION	0.9999985917295668	WITHOUT_CLASSIFICATION	1.40827043315955E-6	DEFECT
// check null key	WITHOUT_CLASSIFICATION	0.9999906283624969	WITHOUT_CLASSIFICATION	9.371637503176629E-6	DEFECT
// check null key	WITHOUT_CLASSIFICATION	0.9999906283624969	WITHOUT_CLASSIFICATION	9.371637503176629E-6	DEFECT
// check null key	WITHOUT_CLASSIFICATION	0.9999906283624969	WITHOUT_CLASSIFICATION	9.371637503176629E-6	DEFECT
// try an index out of bounds	WITHOUT_CLASSIFICATION	0.9999664387097021	WITHOUT_CLASSIFICATION	3.356129029779989E-5	DEFECT
// now add some more data	WITHOUT_CLASSIFICATION	0.9999895628900417	WITHOUT_CLASSIFICATION	1.0437109958284684E-5	DEFECT
// xLow	WITHOUT_CLASSIFICATION	0.999994074213226	WITHOUT_CLASSIFICATION	5.925786774024037E-6	DEFECT
// xHigh	WITHOUT_CLASSIFICATION	0.9999916588998674	WITHOUT_CLASSIFICATION	8.341100132599563E-6	DEFECT
// first check that a valid renaming works	WITHOUT_CLASSIFICATION	0.9999931082920656	WITHOUT_CLASSIFICATION	6.891707934436546E-6	DEFECT
// next, check that setting a duplicate key fails	WITHOUT_CLASSIFICATION	0.9999981934441334	WITHOUT_CLASSIFICATION	1.806555866586102E-6	DEFECT
// create an array of items in reverse order	WITHOUT_CLASSIFICATION	0.9999970725053556	WITHOUT_CLASSIFICATION	2.9274946443447996E-6	DEFECT
// got the required exception	WITHOUT_CLASSIFICATION	0.9999964539409948	WITHOUT_CLASSIFICATION	3.546059005233846E-6	DEFECT
// set a theme using the new shadow generator feature available in // 1.0.14 - for backwards compatibility it is not enabled by default	WITHOUT_CLASSIFICATION	0.9999999636925156	WITHOUT_CLASSIFICATION	3.6307484299674325E-8	DEFECT
// call parent method // setup flag based on bounds values	WITHOUT_CLASSIFICATION	0.9999986778196175	WITHOUT_CLASSIFICATION	1.3221803824342937E-6	DEFECT
//if flag then change to log version of lowest value // to make range begin at a 10^n value:	WITHOUT_CLASSIFICATION	0.999987980574335	WITHOUT_CLASSIFICATION	1.2019425665021913E-5	DEFECT
//if less than 1.0 then make it 1.0 //add in margin and get exponential value:	WITHOUT_CLASSIFICATION	0.9999875188070092	WITHOUT_CLASSIFICATION	1.2481192990745856E-5	DEFECT
//negatives not allowed and upper bound between 0 & 1 //round up to nearest significant digit for bound: //get negative exponent:	WITHOUT_CLASSIFICATION	0.9999994655365995	WITHOUT_CLASSIFICATION	5.344634004956854E-7	DEFECT
//not first tick to be displayed //no tick label	WITHOUT_CLASSIFICATION	0.9999956121065537	WITHOUT_CLASSIFICATION	4.387893446251852E-6	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999872438634059	WITHOUT_CLASSIFICATION	1.2756136594073208E-5	DEFECT
// x	WITHOUT_CLASSIFICATION	0.9999893001202034	WITHOUT_CLASSIFICATION	1.0699879796598567E-5	DEFECT
// y	WITHOUT_CLASSIFICATION	0.9999905092569551	WITHOUT_CLASSIFICATION	9.490743044845414E-6	DEFECT
// default instances	WITHOUT_CLASSIFICATION	0.9999981457847827	WITHOUT_CLASSIFICATION	1.8542152173379805E-6	DEFECT
// TBLRC // 00000 - no items	WITHOUT_CLASSIFICATION	0.9999825828116449	WITHOUT_CLASSIFICATION	1.7417188355117852E-5	DEFECT
// try a few checks to ensure that the clone is independent of the // original	WITHOUT_CLASSIFICATION	0.9999998166298936	WITHOUT_CLASSIFICATION	1.8337010632024963E-7	DEFECT
// autoSort	WITHOUT_CLASSIFICATION	0.9999973640620335	WITHOUT_CLASSIFICATION	2.6359379664263556E-6	DEFECT
// add a value	WITHOUT_CLASSIFICATION	0.9999906191007988	WITHOUT_CLASSIFICATION	9.38089920115503E-6	DEFECT
// add another value	WITHOUT_CLASSIFICATION	0.9999970657896468	WITHOUT_CLASSIFICATION	2.9342103532642255E-6	DEFECT
// add an empty series	WITHOUT_CLASSIFICATION	0.9999871559471879	WITHOUT_CLASSIFICATION	1.2844052812166462E-5	DEFECT
// now we should be allowed to change s1's key to anything but "S2"	WITHOUT_CLASSIFICATION	0.9999838923048372	WITHOUT_CLASSIFICATION	1.6107695162817962E-5	DEFECT
// after s1 is removed from the collection, we should be able to set // the key to anything we want...	WITHOUT_CLASSIFICATION	0.9999947606078213	WITHOUT_CLASSIFICATION	5.239392178640205E-6	DEFECT
// check that removing by index also works	WITHOUT_CLASSIFICATION	0.9999844395983504	WITHOUT_CLASSIFICATION	1.5560401649632038E-5	DEFECT
// correct outcome	WITHOUT_CLASSIFICATION	0.9999609762102543	WITHOUT_CLASSIFICATION	3.902378974578983E-5	DEFECT
// wrong outcome	WITHOUT_CLASSIFICATION	0.9999964262660636	WITHOUT_CLASSIFICATION	3.5737339365680407E-6	DEFECT
// remove a value	WITHOUT_CLASSIFICATION	0.9999900160157863	WITHOUT_CLASSIFICATION	9.983984213619996E-6	DEFECT
// add a series	WITHOUT_CLASSIFICATION	0.9999990443504166	WITHOUT_CLASSIFICATION	9.556495833403221E-7	DEFECT
/* XYSeries s = */	WITHOUT_CLASSIFICATION	0.999984837948268	WITHOUT_CLASSIFICATION	1.5162051732004604E-5	DEFECT
// yLow	WITHOUT_CLASSIFICATION	0.9999944345538413	WITHOUT_CLASSIFICATION	5.565446158707414E-6	DEFECT
// yHigh	WITHOUT_CLASSIFICATION	0.9999921707920848	WITHOUT_CLASSIFICATION	7.829207915147019E-6	DEFECT
// xLow	WITHOUT_CLASSIFICATION	0.999994074213226	WITHOUT_CLASSIFICATION	5.925786774024037E-6	DEFECT
// xHigh	WITHOUT_CLASSIFICATION	0.9999916588998674	WITHOUT_CLASSIFICATION	8.341100132599563E-6	DEFECT
// when the dataset contains no series, we expect the value range to  // be null	WITHOUT_CLASSIFICATION	0.9999816183193098	WITHOUT_CLASSIFICATION	1.8381680690189573E-5	DEFECT
// when the dataset contains one or more series, but those series  // contain no items, we expect the value range to be null	WITHOUT_CLASSIFICATION	0.9999911710761328	WITHOUT_CLASSIFICATION	8.828923867314537E-6	DEFECT
// the series name should not  // change because "C" is already the key for the other series in the // collection	WITHOUT_CLASSIFICATION	0.9999555699038366	WITHOUT_CLASSIFICATION	4.443009616343525E-5	DEFECT
//  Test that there are 6 X points and some specific values	WITHOUT_CLASSIFICATION	0.9999984475716005	WITHOUT_CLASSIFICATION	1.552428399519131E-6	DEFECT
// after adding a point to a series, check that there are now 7 // items in each series	WITHOUT_CLASSIFICATION	0.9999995593443024	WITHOUT_CLASSIFICATION	4.406556975812054E-7	DEFECT
//  Remove series 1	WITHOUT_CLASSIFICATION	0.9999966325844493	WITHOUT_CLASSIFICATION	3.367415550809805E-6	DEFECT
//  Test that there are still 7 X points	WITHOUT_CLASSIFICATION	0.9999986102225633	WITHOUT_CLASSIFICATION	1.3897774366987087E-6	DEFECT
//  Remove series 2 and add new series	WITHOUT_CLASSIFICATION	0.9999982623829793	WITHOUT_CLASSIFICATION	1.7376170207845452E-6	DEFECT
//  Test that there are now 4 X points	WITHOUT_CLASSIFICATION	0.9999960949559759	WITHOUT_CLASSIFICATION	3.9050440241593425E-6	DEFECT
// WITH AUTOPRUNING	WITHOUT_CLASSIFICATION	0.9999783717840158	WITHOUT_CLASSIFICATION	2.1628215984259164E-5	DEFECT
// should be 2 items	WITHOUT_CLASSIFICATION	0.9999939023824426	WITHOUT_CLASSIFICATION	6.097617557483762E-6	DEFECT
// should be 2 items	WITHOUT_CLASSIFICATION	0.9999939023824426	WITHOUT_CLASSIFICATION	6.097617557483762E-6	DEFECT
// still 2	WITHOUT_CLASSIFICATION	0.9999982794213551	WITHOUT_CLASSIFICATION	1.7205786447789395E-6	DEFECT
// still 2	WITHOUT_CLASSIFICATION	0.9999982794213551	WITHOUT_CLASSIFICATION	1.7205786447789395E-6	DEFECT
// 1 value pruned.	WITHOUT_CLASSIFICATION	0.9999984227208569	WITHOUT_CLASSIFICATION	1.5772791430939243E-6	DEFECT
// WITHOUT AUTOPRUNING	WITHOUT_CLASSIFICATION	0.9999518009474385	WITHOUT_CLASSIFICATION	4.819905256154988E-5	DEFECT
// still 2.	WITHOUT_CLASSIFICATION	0.9999978777350895	WITHOUT_CLASSIFICATION	2.1222649104907937E-6	DEFECT
// ****************************************************************** //  More than 150 demo applications are included with the JFreeChart //  Developer Guide...for more information, see: // //  >   http://www.object-refinery.com/jfreechart/guide.html // // ******************************************************************	WITHOUT_CLASSIFICATION	0.9999992060569141	WITHOUT_CLASSIFICATION	7.939430858756882E-7	DEFECT
// here we do a check to see if the user is installing the "Legacy" // theme, and reset the bar painters in that case...	WITHOUT_CLASSIFICATION	0.9999998495066794	WITHOUT_CLASSIFICATION	1.5049332055499538E-7	DEFECT
// since the flow layout is relatively straightforward, // no information needs to be recorded here	WITHOUT_CLASSIFICATION	0.9999996022993733	WITHOUT_CLASSIFICATION	3.97700626696774E-7	DEFECT
// nothing is drawn if the row index is not included in the list with // the indices of the visible rows...	WITHOUT_CLASSIFICATION	0.999995192300246	WITHOUT_CLASSIFICATION	4.807699754025502E-6	DEFECT
// calculate the bar width - this calculation differs from the // BarRenderer calculation because the bars are layered on top of one // another, so there is effectively only one bar per category for // the purpose of the bar width calculation	WITHOUT_CLASSIFICATION	0.9999955670012585	WITHOUT_CLASSIFICATION	4.432998741508485E-6	DEFECT
// the link area defines the dog leg points for the linking lines to // the labels	WITHOUT_CLASSIFICATION	0.9999995113962951	WITHOUT_CLASSIFICATION	4.886037048684111E-7	DEFECT
// if the current stroke is not a BasicStroke then it is handled as // a special case	WITHOUT_CLASSIFICATION	0.9999995120059503	WITHOUT_CLASSIFICATION	4.879940497300314E-7	DEFECT
// after setting up all the subplots, the shared range axis may need // reconfiguring	WITHOUT_CLASSIFICATION	0.9999998191510558	WITHOUT_CLASSIFICATION	1.808489441940317E-7	DEFECT
// if there is an existing dataset, remove the plot from the list of // change listeners...	WITHOUT_CLASSIFICATION	0.9999956886137038	WITHOUT_CLASSIFICATION	4.311386296240656E-6	DEFECT
// the segment is entirely at the // front of the chart	WITHOUT_CLASSIFICATION	0.9999997525969448	WITHOUT_CLASSIFICATION	2.474030551718958E-7	DEFECT
// starts at back and wraps right around to the // back again	WITHOUT_CLASSIFICATION	0.9999996836036135	WITHOUT_CLASSIFICATION	3.163963865807333E-7	DEFECT
// if the source point doesn't fall within a subplot, we do the // zoom on all subplots...	WITHOUT_CLASSIFICATION	0.9999971599983432	WITHOUT_CLASSIFICATION	2.840001656787243E-6	DEFECT
//  double range = this.domainAxis.getRange().getLength(); //  double scaledRange = range * percent; //  domainAxis.setAnchoredRange(scaledRange);	WITHOUT_CLASSIFICATION	0.9999950981810538	WITHOUT_CLASSIFICATION	4.90181894618763E-6	DEFECT
// the anchor point is typically the point where the mouse last // clicked - the crosshairs will be driven off this point...	WITHOUT_CLASSIFICATION	0.9999958652538034	WITHOUT_CLASSIFICATION	4.134746196550361E-6	DEFECT
// axisIndices can be: // 1.  null; // 2.  non-empty, containing only Integer objects that are unique.	WITHOUT_CLASSIFICATION	0.9999877583559159	WITHOUT_CLASSIFICATION	1.2241644084002655E-5	DEFECT
// if this cell held a maximum and/or minimum value, we'll need to // update the cached bounds...	WITHOUT_CLASSIFICATION	0.9999994850816851	WITHOUT_CLASSIFICATION	5.14918314882774E-7	DEFECT
// if the 'notify' flag has been switched to false, we don't notify // the listeners	WITHOUT_CLASSIFICATION	0.999970895310307	WITHOUT_CLASSIFICATION	2.9104689693031213E-5	DEFECT
// private Plot parent <-- don't clone the parent plot, but take care // childs in combined plots instead	WITHOUT_CLASSIFICATION	0.9999539490184598	WITHOUT_CLASSIFICATION	4.605098154025251E-5	DEFECT
// For the case were the first tick is greater // than minZ	WITHOUT_CLASSIFICATION	0.9999944909835514	WITHOUT_CLASSIFICATION	5.509016448588714E-6	DEFECT
// add an entity for the item, but only if it falls within the // data area...	WITHOUT_CLASSIFICATION	0.9999974659985382	WITHOUT_CLASSIFICATION	2.5340014616884984E-6	DEFECT
// we create an event with a special flag set...the purpose of // this is to communicate to the plot (the default receiver of // the event) that series visibility has changed so the axis // ranges might need updating...	WITHOUT_CLASSIFICATION	0.9999997941803264	WITHOUT_CLASSIFICATION	2.0581967359585528E-7	DEFECT
// when the x-values are sorted in descending order, the lower // bound is found by calculating relative to the xHigh value	WITHOUT_CLASSIFICATION	0.9999945773596784	WITHOUT_CLASSIFICATION	5.422640321654081E-6	DEFECT
// nothing is drawn if the row index is not included in the list with // the indices of the visible rows...	WITHOUT_CLASSIFICATION	0.999995192300246	WITHOUT_CLASSIFICATION	4.807699754025502E-6	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999847370663418	WITHOUT_CLASSIFICATION	1.5262933658178298E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999847370663418	WITHOUT_CLASSIFICATION	1.5262933658178298E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999847370663418	WITHOUT_CLASSIFICATION	1.5262933658178298E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999847370663418	WITHOUT_CLASSIFICATION	1.5262933658178298E-5	DEFECT
// nothing is drawn if the row index is not included in the list with // the indices of the visible rows...	WITHOUT_CLASSIFICATION	0.999995192300246	WITHOUT_CLASSIFICATION	4.807699754025502E-6	DEFECT
/////////////////////////////////////////////////////////////////////////// // From HighLowDataset ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999986989705969	WITHOUT_CLASSIFICATION	1.301029403125353E-6	DEFECT
// handle a special case - if the bar colour has alpha == 0, it is // invisible so we shouldn't draw any shadow	WITHOUT_CLASSIFICATION	0.999997696045897	WITHOUT_CLASSIFICATION	2.3039541029174333E-6	DEFECT
// handle a special case - if the bar colour has alpha == 0, it is // invisible so we shouldn't draw any shadow	WITHOUT_CLASSIFICATION	0.999997696045897	WITHOUT_CLASSIFICATION	2.3039541029174333E-6	DEFECT
// if the dataset is not a StatisticalCategoryDataset then just revert // to the superclass (LineAndShapeRenderer) behaviour...	WITHOUT_CLASSIFICATION	0.9999999119716436	WITHOUT_CLASSIFICATION	8.80283564551035E-8	DEFECT
// FIXME: add setSeriesToolTipGenerator(int, CategoryToolTipGenerator, //            boolean) ?	WITHOUT_CLASSIFICATION	0.7930448847659893	WITHOUT_CLASSIFICATION	0.20695511523401067	DEFECT
// average radius // outlier radius	WITHOUT_CLASSIFICATION	0.9999992162931214	WITHOUT_CLASSIFICATION	7.837068786193759E-7	DEFECT
// false preserves the old behaviour // prior to introducing this flag	WITHOUT_CLASSIFICATION	0.9999552782312016	WITHOUT_CLASSIFICATION	4.472176879837187E-5	DEFECT
// These are deliberately not bounded to minimums/maxCandleWidth to //  retain old behaviour.	WITHOUT_CLASSIFICATION	0.9999920937402159	WITHOUT_CLASSIFICATION	7.90625978409941E-6	DEFECT
// the noCodeBaseClassLoader is configured by a call to the // removeCodeBase() method, typically in the init() method of an // applet...	WITHOUT_CLASSIFICATION	0.9999927513961769	WITHOUT_CLASSIFICATION	7.248603823099002E-6	DEFECT
// the noCodeBaseClassLoader is configured by a call to the // removeCodeBase() method, typically in the init() method of an // applet...	WITHOUT_CLASSIFICATION	0.9999927513961769	WITHOUT_CLASSIFICATION	7.248603823099002E-6	DEFECT
// deregister the collection as a change listener to each series in // the collection.	WITHOUT_CLASSIFICATION	0.999997966068935	WITHOUT_CLASSIFICATION	2.0339310650232846E-6	DEFECT
// handle the special case where the dataset has y-intervals that // we want to measure	WITHOUT_CLASSIFICATION	0.9999998683231411	WITHOUT_CLASSIFICATION	1.3167685877182027E-7	DEFECT
// CASE 3 : Comparing to a non-TimePeriod object // ---------------------------------------------	WITHOUT_CLASSIFICATION	0.9999515874457237	WITHOUT_CLASSIFICATION	4.8412554276278876E-5	DEFECT
// CASE 1 : Comparing to another Second object // -------------------------------------------	WITHOUT_CLASSIFICATION	0.9999733342946155	WITHOUT_CLASSIFICATION	2.666570538443438E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999847370663418	WITHOUT_CLASSIFICATION	1.5262933658178298E-5	DEFECT
// end period is not in original series // this is first item AFTER end period // so this is last item BEFORE end	WITHOUT_CLASSIFICATION	0.9999696054039723	WITHOUT_CLASSIFICATION	3.0394596027644277E-5	DEFECT
// the first initialization must precede creation of the ValueSet array: // establishes length of each array	WITHOUT_CLASSIFICATION	0.9999992033750118	WITHOUT_CLASSIFICATION	7.966249881579229E-7	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999847370663418	WITHOUT_CLASSIFICATION	1.5262933658178298E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999847370663418	WITHOUT_CLASSIFICATION	1.5262933658178298E-5	DEFECT
// here we check that the average marker will in fact be // visible before drawing it...	WITHOUT_CLASSIFICATION	0.9996404328503994	WITHOUT_CLASSIFICATION	3.5956714960059004E-4	DEFECT
// draw outliers // outlier radius	WITHOUT_CLASSIFICATION	0.9999994754065108	WITHOUT_CLASSIFICATION	5.245934890935205E-7	DEFECT
// NULL value -> insert point on base line // instead of 'step point'	WITHOUT_CLASSIFICATION	0.9999969694571379	WITHOUT_CLASSIFICATION	3.0305428622111813E-6	DEFECT
// coordinate pairs // current minuend point // next minuend point // current subtrahend point // next subtrahend point	WITHOUT_CLASSIFICATION	0.9999997270914953	WITHOUT_CLASSIFICATION	2.729085047540722E-7	DEFECT
// the intersect is at the next point for both the minuend // and subtrahend	WITHOUT_CLASSIFICATION	0.9999906653155771	WITHOUT_CLASSIFICATION	9.334684422802947E-6	DEFECT
// create the polygon // add the minuend's points to polygon	WITHOUT_CLASSIFICATION	0.999999642598477	WITHOUT_CLASSIFICATION	3.5740152310368184E-7	DEFECT
// the following code handles the line for the y-values...it's // all done by code in the super class	WITHOUT_CLASSIFICATION	0.9999992954933423	WITHOUT_CLASSIFICATION	7.045066576804842E-7	DEFECT
// Check if the item is the last item for the series and number of // items > 0.  We can't draw an area for a single point.	WITHOUT_CLASSIFICATION	0.9999994893248639	WITHOUT_CLASSIFICATION	5.106751361694898E-7	DEFECT
// use item paint for outlines by // default, not outline paint	WITHOUT_CLASSIFICATION	0.9999995443365635	WITHOUT_CLASSIFICATION	4.5566343657166663E-7	DEFECT
// add an entity for the item, but only if it falls within the data // area...	WITHOUT_CLASSIFICATION	0.9999986061716918	WITHOUT_CLASSIFICATION	1.3938283081991695E-6	DEFECT
// the bounds should be calculated using just the items within // the current range of the x-axis...if there is one	WITHOUT_CLASSIFICATION	0.9999986908520164	WITHOUT_CLASSIFICATION	1.3091479836088881E-6	DEFECT
// We organise the data with the following assumption: // 1) the data are sorted by x then y // 2) that the data will be represented by a rectangle formed by //    using x[i+1], x, y[j+1], and y. // 3) we march along the y-axis at the same value of x until a new //    value x is found at which point we will flag the index //    where x[i+1]<>x[i]	WITHOUT_CLASSIFICATION	0.9999988617507362	WITHOUT_CLASSIFICATION	1.1382492638142634E-6	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999847370663418	WITHOUT_CLASSIFICATION	1.5262933658178298E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999847370663418	WITHOUT_CLASSIFICATION	1.5262933658178298E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999847370663418	WITHOUT_CLASSIFICATION	1.5262933658178298E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999847370663418	WITHOUT_CLASSIFICATION	1.5262933658178298E-5	DEFECT
// create the new color and set it to the // SwtPaintCanvas	WITHOUT_CLASSIFICATION	0.9999999859600929	WITHOUT_CLASSIFICATION	1.4039906995644483E-8	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999847370663418	WITHOUT_CLASSIFICATION	1.5262933658178298E-5	DEFECT
// we're doing this for testing only, and make sure that we // only add data in ascending order by x-value	WITHOUT_CLASSIFICATION	0.9999903927028462	WITHOUT_CLASSIFICATION	9.607297153724996E-6	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999847370663418	WITHOUT_CLASSIFICATION	1.5262933658178298E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999847370663418	WITHOUT_CLASSIFICATION	1.5262933658178298E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999847370663418	WITHOUT_CLASSIFICATION	1.5262933658178298E-5	DEFECT
// have to use a subclass of // AbstractRenderer	WITHOUT_CLASSIFICATION	0.9999999455981773	WITHOUT_CLASSIFICATION	5.440182263144445E-8	DEFECT
// include legend // tooltips // urls	WITHOUT_CLASSIFICATION	0.9999984427917498	WITHOUT_CLASSIFICATION	1.5572082501249945E-6	DEFECT
// setup our test timelines // // Legend for comments below: // <spaces> = Segments included in the final timeline // EE       = Excluded segments via timeline rules // xx       = Exception segments inherited from base timeline exclusions	WITHOUT_CLASSIFICATION	0.9999990967222261	WITHOUT_CLASSIFICATION	9.032777738895005E-7	DEFECT
////////////////////////////////////////////////////////////////////////// // test exception segments //////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999989804060095	WITHOUT_CLASSIFICATION	1.0195939904962497E-6	DEFECT
// we use ValueMarker for the tests, because we need a concrete // subclass...	WITHOUT_CLASSIFICATION	0.9999999221885507	WITHOUT_CLASSIFICATION	7.781144929601277E-8	DEFECT
// now check that all datasets, renderers and axes are being listened // too...	WITHOUT_CLASSIFICATION	0.9999815151325158	WITHOUT_CLASSIFICATION	1.8484867484300086E-5	DEFECT
// now check that all datasets, renderers and axes are being listened // too...	WITHOUT_CLASSIFICATION	0.9999815151325158	WITHOUT_CLASSIFICATION	1.8484867484300086E-5	DEFECT
// after clearing, reverts to // default group	WITHOUT_CLASSIFICATION	0.9999997307209868	WITHOUT_CLASSIFICATION	2.6927901319379236E-7	DEFECT
// regular equality for the datasets doesn't check the fields, just // the data values...so let's check some more things...	WITHOUT_CLASSIFICATION	0.9999997712522981	WITHOUT_CLASSIFICATION	2.2874770187797618E-7	DEFECT
// these methods should throw an IndexOutOfBoundsException since the // column is too high...	WITHOUT_CLASSIFICATION	0.999872457126044	WITHOUT_CLASSIFICATION	1.2754287395601245E-4	DEFECT
// this replaces the entry with the current minimum value, but the new // minimum value is now in a different item	WITHOUT_CLASSIFICATION	0.9998653853404829	WITHOUT_CLASSIFICATION	1.3461465951710341E-4	DEFECT
// the dataset should prevent the addition of a series with the // same name as an existing series in the dataset	WITHOUT_CLASSIFICATION	0.9999969918526671	WITHOUT_CLASSIFICATION	3.0081473329127523E-6	DEFECT
/*item = */	WITHOUT_CLASSIFICATION	0.99997726024707	WITHOUT_CLASSIFICATION	2.2739752929918435E-5	DEFECT
// test empty series	WITHOUT_CLASSIFICATION	0.9999992062282456	WITHOUT_CLASSIFICATION	7.937717544050168E-7	DEFECT
// now we should be allowed to change s1's key to anything but "S2"	WITHOUT_CLASSIFICATION	0.9999838923048372	WITHOUT_CLASSIFICATION	1.6107695162817962E-5	DEFECT
// after s1 is removed from the collection, we should be able to set // the key to anything we want...	WITHOUT_CLASSIFICATION	0.9999947606078213	WITHOUT_CLASSIFICATION	5.239392178640205E-6	DEFECT
// locale should not matter here	WITHOUT_CLASSIFICATION	0.9999645180325264	WITHOUT_CLASSIFICATION	3.548196747353758E-5	DEFECT
// correct outcome	WITHOUT_CLASSIFICATION	0.9999609762102543	WITHOUT_CLASSIFICATION	3.902378974578983E-5	DEFECT
// correct outcome	WITHOUT_CLASSIFICATION	0.9999609762102543	WITHOUT_CLASSIFICATION	3.902378974578983E-5	DEFECT
// wrong outcome	WITHOUT_CLASSIFICATION	0.9999964262660636	WITHOUT_CLASSIFICATION	3.5737339365680407E-6	DEFECT
// when the dataset contains one or more series, but those series // contain no items, we still expect the range to be null	WITHOUT_CLASSIFICATION	0.9999959854539654	WITHOUT_CLASSIFICATION	4.014546034612792E-6	DEFECT
// tests with values	WITHOUT_CLASSIFICATION	0.9999981402664738	WITHOUT_CLASSIFICATION	1.8597335262209174E-6	DEFECT
// tests with values	WITHOUT_CLASSIFICATION	0.9999981402664738	WITHOUT_CLASSIFICATION	1.8597335262209174E-6	DEFECT
// seriesKey	WITHOUT_CLASSIFICATION	0.9999983557114289	WITHOUT_CLASSIFICATION	1.644288571129772E-6	DEFECT
// open	WITHOUT_CLASSIFICATION	0.9999956043367945	WITHOUT_CLASSIFICATION	4.395663205545758E-6	DEFECT
// add a series	WITHOUT_CLASSIFICATION	0.9999990443504166	WITHOUT_CLASSIFICATION	9.556495833403221E-7	DEFECT
// allowDuplicateValues	WITHOUT_CLASSIFICATION	0.9999976745349608	WITHOUT_CLASSIFICATION	2.3254650391730073E-6	DEFECT
// check for series key out of bounds	WITHOUT_CLASSIFICATION	0.9999996715971409	WITHOUT_CLASSIFICATION	3.2840285914131225E-7	DEFECT
// check for series key out of bounds	WITHOUT_CLASSIFICATION	0.9999996715971409	WITHOUT_CLASSIFICATION	3.2840285914131225E-7	DEFECT
/*Comparable k =*/	WITHOUT_CLASSIFICATION	0.999993786963961	WITHOUT_CLASSIFICATION	6.213036038998887E-6	DEFECT
/*Comparable k =*/	WITHOUT_CLASSIFICATION	0.999993786963961	WITHOUT_CLASSIFICATION	6.213036038998887E-6	DEFECT
/*Comparable k =*/	WITHOUT_CLASSIFICATION	0.999993786963961	WITHOUT_CLASSIFICATION	6.213036038998887E-6	DEFECT
/*Comparable k =*/	WITHOUT_CLASSIFICATION	0.999993786963961	WITHOUT_CLASSIFICATION	6.213036038998887E-6	DEFECT
// when the dataset contains no series, we expect the value range to  // be null	WITHOUT_CLASSIFICATION	0.9999816183193098	WITHOUT_CLASSIFICATION	1.8381680690189573E-5	DEFECT
// when the dataset contains no series, we expect the value range to  // be null	WITHOUT_CLASSIFICATION	0.9999816183193098	WITHOUT_CLASSIFICATION	1.8381680690189573E-5	DEFECT
// when the dataset contains one or more series, but those series  // contain no items, we expect the value range to be null	WITHOUT_CLASSIFICATION	0.9999911710761328	WITHOUT_CLASSIFICATION	8.828923867314537E-6	DEFECT
// when the dataset contains one or more series, but those series  // contain no items, we expect the value range to be null	WITHOUT_CLASSIFICATION	0.9999911710761328	WITHOUT_CLASSIFICATION	8.828923867314537E-6	DEFECT
// complicate things a little...	WITHOUT_CLASSIFICATION	0.9999963854763929	WITHOUT_CLASSIFICATION	3.6145236071504268E-6	DEFECT
// seem to be the same...	WITHOUT_CLASSIFICATION	0.9999959989317612	WITHOUT_CLASSIFICATION	4.001068238827484E-6	DEFECT
// what is our alignment?	WITHOUT_CLASSIFICATION	0.9999701440363467	WITHOUT_CLASSIFICATION	2.9855963653281437E-5	DEFECT
// what is our alignment?	WITHOUT_CLASSIFICATION	0.9999701440363467	WITHOUT_CLASSIFICATION	2.9855963653281437E-5	DEFECT
// seem to be the same...	WITHOUT_CLASSIFICATION	0.9999959989317612	WITHOUT_CLASSIFICATION	4.001068238827484E-6	DEFECT
// slope	WITHOUT_CLASSIFICATION	0.999998381416671	WITHOUT_CLASSIFICATION	1.618583329017758E-6	DEFECT
// complicate things a little...	WITHOUT_CLASSIFICATION	0.9999963854763929	WITHOUT_CLASSIFICATION	3.6145236071504268E-6	DEFECT
// expected	WITHOUT_CLASSIFICATION	0.9999963273595696	WITHOUT_CLASSIFICATION	3.672640430479691E-6	DEFECT
// expected	WITHOUT_CLASSIFICATION	0.9999963273595696	WITHOUT_CLASSIFICATION	3.672640430479691E-6	DEFECT
// expected	WITHOUT_CLASSIFICATION	0.9999963273595696	WITHOUT_CLASSIFICATION	3.672640430479691E-6	DEFECT
// expected	WITHOUT_CLASSIFICATION	0.9999963273595696	WITHOUT_CLASSIFICATION	3.672640430479691E-6	DEFECT
// expected	WITHOUT_CLASSIFICATION	0.9999963273595696	WITHOUT_CLASSIFICATION	3.672640430479691E-6	DEFECT
// expected	WITHOUT_CLASSIFICATION	0.9999963273595696	WITHOUT_CLASSIFICATION	3.672640430479691E-6	DEFECT
/* (non-Javadoc)     * @see org.eclipse.swt.events.FocusListener#focusGained(     * org.eclipse.swt.events.FocusEvent)     */	WITHOUT_CLASSIFICATION	0.999999745920358	WITHOUT_CLASSIFICATION	2.5407964200447597E-7	DEFECT
/* (non-Javadoc)     * @see org.eclipse.swt.events.FocusListener#focusLost(     * org.eclipse.swt.events.FocusEvent)     */	WITHOUT_CLASSIFICATION	0.9999995528792426	WITHOUT_CLASSIFICATION	4.4712075748009593E-7	DEFECT
/* (non-Javadoc)         * @see org.jfree.chart.axis.LogarithmicAxis#switchedLog10(double)         */	WITHOUT_CLASSIFICATION	0.9999999634556721	WITHOUT_CLASSIFICATION	3.6544327940763503E-8	DEFECT
// expected	WITHOUT_CLASSIFICATION	0.9999963273595696	WITHOUT_CLASSIFICATION	3.672640430479691E-6	DEFECT
// expected	WITHOUT_CLASSIFICATION	0.9999963273595696	WITHOUT_CLASSIFICATION	3.672640430479691E-6	DEFECT
// expected	WITHOUT_CLASSIFICATION	0.9999963273595696	WITHOUT_CLASSIFICATION	3.672640430479691E-6	DEFECT
// expected	WITHOUT_CLASSIFICATION	0.9999963273595696	WITHOUT_CLASSIFICATION	3.672640430479691E-6	DEFECT
// expected	WITHOUT_CLASSIFICATION	0.9999963273595696	WITHOUT_CLASSIFICATION	3.672640430479691E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999937644811133	WITHOUT_CLASSIFICATION	6.235518886679509E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999937644811133	WITHOUT_CLASSIFICATION	6.235518886679509E-6	DEFECT
// do nothing	WITHOUT_CLASSIFICATION	0.9999879407218273	WITHOUT_CLASSIFICATION	1.205927817280159E-5	DEFECT
// do nothing	WITHOUT_CLASSIFICATION	0.9999879407218273	WITHOUT_CLASSIFICATION	1.205927817280159E-5	DEFECT
// do nothing	WITHOUT_CLASSIFICATION	0.9999879407218273	WITHOUT_CLASSIFICATION	1.205927817280159E-5	DEFECT
// do nothing	WITHOUT_CLASSIFICATION	0.9999879407218273	WITHOUT_CLASSIFICATION	1.205927817280159E-5	DEFECT
//}	WITHOUT_CLASSIFICATION	0.9999065247451271	WITHOUT_CLASSIFICATION	9.347525487297817E-5	DEFECT
// find out where to place the label...	WITHOUT_CLASSIFICATION	0.9999997381541349	WITHOUT_CLASSIFICATION	2.618458650650537E-7	DEFECT
// find out where to place the label...	WITHOUT_CLASSIFICATION	0.9999997381541349	WITHOUT_CLASSIFICATION	2.618458650650537E-7	DEFECT
// Anwender hat abgebrochen.	WITHOUT_CLASSIFICATION	0.9999826665651161	WITHOUT_CLASSIFICATION	1.7333434883874607E-5	DEFECT
// insets	WITHOUT_CLASSIFICATION	0.9999918456874534	WITHOUT_CLASSIFICATION	8.154312546662293E-6	DEFECT
// insets	WITHOUT_CLASSIFICATION	0.9999918456874534	WITHOUT_CLASSIFICATION	8.154312546662293E-6	DEFECT
// ...but this does!	WITHOUT_CLASSIFICATION	0.9999240498761638	WITHOUT_CLASSIFICATION	7.595012383617962E-5	DEFECT
// insets	WITHOUT_CLASSIFICATION	0.9999918456874534	WITHOUT_CLASSIFICATION	8.154312546662293E-6	DEFECT
// check defaults	WITHOUT_CLASSIFICATION	0.9999996230856322	WITHOUT_CLASSIFICATION	3.769143677120191E-7	DEFECT
// do nothing	WITHOUT_CLASSIFICATION	0.9999879407218273	WITHOUT_CLASSIFICATION	1.205927817280159E-5	DEFECT
// do nothing	WITHOUT_CLASSIFICATION	0.9999879407218273	WITHOUT_CLASSIFICATION	1.205927817280159E-5	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999874693337447	WITHOUT_CLASSIFICATION	1.2530666255248155E-5	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999874693337447	WITHOUT_CLASSIFICATION	1.2530666255248155E-5	DEFECT
// OK	WITHOUT_CLASSIFICATION	0.9999882625349319	WITHOUT_CLASSIFICATION	1.1737465068006349E-5	DEFECT
// FIXME: we've cloned the chart, but the dataset(s) aren't cloned // and we should do that	DEFECT	0.729444997201264	WITHOUT_CLASSIFICATION	0.270555002798736	DEFECT
// todo: not serialized yet	DEFECT	0.9999798469501177	WITHOUT_CLASSIFICATION	2.0153049882374657E-5	DEFECT
// FIRST_MONDAY_AFTER_1900 = cal.getTime().getTime(); // preceding code won't work with JDK 1.3	DEFECT	0.9317765460418004	WITHOUT_CLASSIFICATION	0.06822345395819955	DEFECT
// TODO: we didn't check the height yet	DEFECT	0.7101536428448917	DEFECT	0.2898463571551082	WITHOUT_CLASSIFICATION
// TODO: we didn't check the height yet	DEFECT	0.7101536428448917	DEFECT	0.2898463571551082	WITHOUT_CLASSIFICATION
// TODO: Check this result...	DEFECT	0.6562976951767182	WITHOUT_CLASSIFICATION	0.3437023048232816	DEFECT
// TODO: Check this result...	DEFECT	0.6562976951767182	WITHOUT_CLASSIFICATION	0.3437023048232816	DEFECT
//return cal.getTimeInMillis(); // preceding code won't work with JDK 1.3	DEFECT	0.9993522232560684	WITHOUT_CLASSIFICATION	6.477767439315818E-4	DEFECT
// result = this.workingCalendar.getTimeInMillis(); // preceding code won't work with JDK 1.3	DEFECT	0.9989016404411533	WITHOUT_CLASSIFICATION	0.0010983595588467223	DEFECT
