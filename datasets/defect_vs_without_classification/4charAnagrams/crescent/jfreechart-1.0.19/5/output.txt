// TBLRC // 01011 - bottom, right and center	WITHOUT_CLASSIFICATION	0.9999975857028143	WITHOUT_CLASSIFICATION	2.414297185694534E-6	DEFECT
// TBLRC // 01100	WITHOUT_CLASSIFICATION	0.9999761457144187	WITHOUT_CLASSIFICATION	2.385428558119366E-5	DEFECT
// TBLRC // 01101 - bottom, left and center	WITHOUT_CLASSIFICATION	0.9999972033633029	WITHOUT_CLASSIFICATION	2.7966366970628914E-6	DEFECT
// TBLRC // 01110 - bottom. left and right	WITHOUT_CLASSIFICATION	0.9999952034720767	WITHOUT_CLASSIFICATION	4.796527923281268E-6	DEFECT
// TBLRC // 01111	WITHOUT_CLASSIFICATION	0.999974551671488	WITHOUT_CLASSIFICATION	2.5448328512105825E-5	DEFECT
// TBLRC // 10000 - top item only	WITHOUT_CLASSIFICATION	0.9999861170255607	WITHOUT_CLASSIFICATION	1.388297443915908E-5	DEFECT
// TBLRC // 10001 - top and center only	WITHOUT_CLASSIFICATION	0.9999980506319041	WITHOUT_CLASSIFICATION	1.9493680959835085E-6	DEFECT
// TBLRC // 10010 - right and top only	WITHOUT_CLASSIFICATION	0.9999968965266866	WITHOUT_CLASSIFICATION	3.1034733134125263E-6	DEFECT
// TBLRC // 10011 - top, right and center	WITHOUT_CLASSIFICATION	0.999997943683696	WITHOUT_CLASSIFICATION	2.0563163039629474E-6	DEFECT
// TBLRC // 10100 - top and left only	WITHOUT_CLASSIFICATION	0.9999916536222957	WITHOUT_CLASSIFICATION	8.346377704203864E-6	DEFECT
// range	WITHOUT_CLASSIFICATION	0.9999943586395379	WITHOUT_CLASSIFICATION	5.641360462073362E-6	DEFECT
// units	WITHOUT_CLASSIFICATION	0.9999951316755968	WITHOUT_CLASSIFICATION	4.868324403128415E-6	DEFECT
// interval	WITHOUT_CLASSIFICATION	0.9999968445765428	WITHOUT_CLASSIFICATION	3.1554234572176178E-6	DEFECT
// dial outline paint	WITHOUT_CLASSIFICATION	0.9999945153012635	WITHOUT_CLASSIFICATION	5.4846987364468055E-6	DEFECT
// dial shape	WITHOUT_CLASSIFICATION	0.9999968658926153	WITHOUT_CLASSIFICATION	3.13410738479318E-6	DEFECT
// dial background paint	WITHOUT_CLASSIFICATION	0.9999978562095316	WITHOUT_CLASSIFICATION	2.1437904682891028E-6	DEFECT
// seriesPaint	WITHOUT_CLASSIFICATION	0.9999994068653233	WITHOUT_CLASSIFICATION	5.931346766661398E-7	DEFECT
// seriesPaintList	WITHOUT_CLASSIFICATION	0.999998955168234	WITHOUT_CLASSIFICATION	1.0448317659744928E-6	DEFECT
// baseSeriesPaint	WITHOUT_CLASSIFICATION	0.9999989313475315	WITHOUT_CLASSIFICATION	1.0686524684443448E-6	DEFECT
// seriesOutlinePaint	WITHOUT_CLASSIFICATION	0.9999991449256028	WITHOUT_CLASSIFICATION	8.550743971539441E-7	DEFECT
// seriesOutlinePaintList	WITHOUT_CLASSIFICATION	0.9999984937506619	WITHOUT_CLASSIFICATION	1.5062493382176344E-6	DEFECT
// baseSeriesOutlinePaint	WITHOUT_CLASSIFICATION	0.9999984594103004	WITHOUT_CLASSIFICATION	1.5405896995719244E-6	DEFECT
// seriesOutlineStroke	WITHOUT_CLASSIFICATION	0.9999969078314156	WITHOUT_CLASSIFICATION	3.0921685844178564E-6	DEFECT
// seriesOutlineStrokeList	WITHOUT_CLASSIFICATION	0.9999965401483369	WITHOUT_CLASSIFICATION	3.4598516630299644E-6	DEFECT
// add an empty series	WITHOUT_CLASSIFICATION	0.9999954441098501	WITHOUT_CLASSIFICATION	4.55589014991257E-6	DEFECT
// correct outcome	WITHOUT_CLASSIFICATION	0.9999555314045395	WITHOUT_CLASSIFICATION	4.446859546054147E-5	DEFECT
// high	WITHOUT_CLASSIFICATION	0.9999886999508483	WITHOUT_CLASSIFICATION	1.130004915171701E-5	DEFECT
// low	WITHOUT_CLASSIFICATION	0.9999931543960988	WITHOUT_CLASSIFICATION	6.845603901152459E-6	DEFECT
// close	WITHOUT_CLASSIFICATION	0.9999990575110874	WITHOUT_CLASSIFICATION	9.424889125993804E-7	DEFECT
/* XYSeries s = */	WITHOUT_CLASSIFICATION	0.9999846294295077	WITHOUT_CLASSIFICATION	1.5370570492316816E-5	DEFECT
// there should be no change event when clearing an empty series	WITHOUT_CLASSIFICATION	0.9999979485880786	WITHOUT_CLASSIFICATION	2.0514119214634773E-6	DEFECT
// clean up	WITHOUT_CLASSIFICATION	0.9999992606584509	WITHOUT_CLASSIFICATION	7.393415491633331E-7	DEFECT
// shape	WITHOUT_CLASSIFICATION	0.9999964268360342	WITHOUT_CLASSIFICATION	3.5731639659618906E-6	DEFECT
// stroke	WITHOUT_CLASSIFICATION	0.9999968413684576	WITHOUT_CLASSIFICATION	3.158631542370813E-6	DEFECT
// labelFont	WITHOUT_CLASSIFICATION	0.9999973779115384	WITHOUT_CLASSIFICATION	2.622088461652587E-6	DEFECT
// labelPaint	WITHOUT_CLASSIFICATION	0.9999987865074216	WITHOUT_CLASSIFICATION	1.213492578487631E-6	DEFECT
// upperBound	WITHOUT_CLASSIFICATION	0.9999955094900672	WITHOUT_CLASSIFICATION	4.490509932867252E-6	DEFECT
// paint	WITHOUT_CLASSIFICATION	0.9999951975017685	WITHOUT_CLASSIFICATION	4.8024982315678655E-6	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999992092361156	WITHOUT_CLASSIFICATION	7.907638844166032E-7	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999992092361156	WITHOUT_CLASSIFICATION	7.907638844166032E-7	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999992092361156	WITHOUT_CLASSIFICATION	7.907638844166032E-7	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999992092361156	WITHOUT_CLASSIFICATION	7.907638844166032E-7	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999992092361156	WITHOUT_CLASSIFICATION	7.907638844166032E-7	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999992092361156	WITHOUT_CLASSIFICATION	7.907638844166032E-7	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999992092361156	WITHOUT_CLASSIFICATION	7.907638844166032E-7	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999992092361156	WITHOUT_CLASSIFICATION	7.907638844166032E-7	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999992092361156	WITHOUT_CLASSIFICATION	7.907638844166032E-7	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999992092361156	WITHOUT_CLASSIFICATION	7.907638844166032E-7	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999992092361156	WITHOUT_CLASSIFICATION	7.907638844166032E-7	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999992092361156	WITHOUT_CLASSIFICATION	7.907638844166032E-7	DEFECT
// super.drawSecondaryPass(g2, plot, dataset, pass, series, item, // domainAxis, dataArea, rangeAxis, crosshairState, entities);	WITHOUT_CLASSIFICATION	0.999999966406067	WITHOUT_CLASSIFICATION	3.35939329699434E-8	DEFECT
// properties // save // print // zoom // tooltips	WITHOUT_CLASSIFICATION	0.9999995273029842	WITHOUT_CLASSIFICATION	4.726970157473282E-7	DEFECT
// properties // save // print // zoom // tooltips	WITHOUT_CLASSIFICATION	0.9999995273029842	WITHOUT_CLASSIFICATION	4.726970157473282E-7	DEFECT
// properties // save // print // zoom // tooltips	WITHOUT_CLASSIFICATION	0.9999995273029842	WITHOUT_CLASSIFICATION	4.726970157473282E-7	DEFECT
// do we need to redraw the buffer?	WITHOUT_CLASSIFICATION	0.9999761472048084	WITHOUT_CLASSIFICATION	2.3852795191618222E-5	DEFECT
// get the origin of the zoom selection in the Java2D space used for // drawing the chart (that is, before any scaling to fit the panel)	WITHOUT_CLASSIFICATION	0.999999999256339	WITHOUT_CLASSIFICATION	7.436609279550849E-10	DEFECT
// suppresses compiler warning	WITHOUT_CLASSIFICATION	0.9999963254915909	WITHOUT_CLASSIFICATION	3.674508408997751E-6	DEFECT
// create the chart...	WITHOUT_CLASSIFICATION	0.9999998935442438	WITHOUT_CLASSIFICATION	1.0645575630845078E-7	DEFECT
/* shape visible = */	WITHOUT_CLASSIFICATION	0.9999760759455188	WITHOUT_CLASSIFICATION	2.3924054481100194E-5	DEFECT
/* shape visible = */	WITHOUT_CLASSIFICATION	0.9999760759455188	WITHOUT_CLASSIFICATION	2.3924054481100194E-5	DEFECT
/* shape visible = */	WITHOUT_CLASSIFICATION	0.9999760759455188	WITHOUT_CLASSIFICATION	2.3924054481100194E-5	DEFECT
// we clone the chart because presumably there can be some delay // between putting this instance on the system clipboard and // actually having the getTransferData() method called...	WITHOUT_CLASSIFICATION	0.9999975331426746	WITHOUT_CLASSIFICATION	2.466857325447376E-6	DEFECT
// for efficiency, we just use the first, last and middle items to // compute a hashCode...	WITHOUT_CLASSIFICATION	0.9999999948439734	WITHOUT_CLASSIFICATION	5.156026573350443E-9	DEFECT
// create a legend, if requested...	WITHOUT_CLASSIFICATION	0.9999997915745173	WITHOUT_CLASSIFICATION	2.0842548262572054E-7	DEFECT
// pass the click on to the plot... // rely on the plot to post a plot change event and redraw the chart...	WITHOUT_CLASSIFICATION	0.9999999519268101	WITHOUT_CLASSIFICATION	4.8073189843975536E-8	DEFECT
// don't zoom unless the mouse pointer is in the plot's data area	WITHOUT_CLASSIFICATION	0.9999904474270639	WITHOUT_CLASSIFICATION	9.552572936052607E-6	DEFECT
// draw the label	WITHOUT_CLASSIFICATION	0.9999990472070891	WITHOUT_CLASSIFICATION	9.527929110157683E-7	DEFECT
// now try to reject equality...	WITHOUT_CLASSIFICATION	0.9999976762990711	WITHOUT_CLASSIFICATION	2.323700928925892E-6	DEFECT
// no plot, no data	WITHOUT_CLASSIFICATION	0.9999995408640985	WITHOUT_CLASSIFICATION	4.591359016108761E-7	DEFECT
// no plot, no data	WITHOUT_CLASSIFICATION	0.9999995408640985	WITHOUT_CLASSIFICATION	4.591359016108761E-7	DEFECT
// if fixed auto range, then derive lower bound...	WITHOUT_CLASSIFICATION	0.9999914073359806	WITHOUT_CLASSIFICATION	8.592664019477138E-6	DEFECT
// if the axis is not visible, don't draw it...	WITHOUT_CLASSIFICATION	0.9999528061427359	WITHOUT_CLASSIFICATION	4.7193857264241684E-5	DEFECT
// if the axis is not visible, don't draw it...	WITHOUT_CLASSIFICATION	0.9999528061427359	WITHOUT_CLASSIFICATION	4.7193857264241684E-5	DEFECT
// if the axis is not visible, don't draw it...	WITHOUT_CLASSIFICATION	0.9999528061427359	WITHOUT_CLASSIFICATION	4.7193857264241684E-5	DEFECT
// if the axis is not visible, don't draw it...	WITHOUT_CLASSIFICATION	0.9999528061427359	WITHOUT_CLASSIFICATION	4.7193857264241684E-5	DEFECT
// add minor ticks (for gridlines)	WITHOUT_CLASSIFICATION	0.9999992330980015	WITHOUT_CLASSIFICATION	7.669019985080885E-7	DEFECT
// select a tick unit that is the next one bigger than the current // (log) range divided by 50	WITHOUT_CLASSIFICATION	0.9999954253302454	WITHOUT_CLASSIFICATION	4.574669754555899E-6	DEFECT
// look at lower and upper bounds...	WITHOUT_CLASSIFICATION	0.9999992723565939	WITHOUT_CLASSIFICATION	7.276434061761116E-7	DEFECT
// it is unlikely that 'state' will be null, but check anyway...	WITHOUT_CLASSIFICATION	0.999721575862774	WITHOUT_CLASSIFICATION	2.784241372259955E-4	DEFECT
// create a new space object if one wasn't supplied...	WITHOUT_CLASSIFICATION	0.9999999036811881	WITHOUT_CLASSIFICATION	9.63188120504918E-8	DEFECT
// work out the number of periods to skip for labelling	WITHOUT_CLASSIFICATION	0.9999977604088565	WITHOUT_CLASSIFICATION	2.239591143527532E-6	DEFECT
// draw the arrow...	WITHOUT_CLASSIFICATION	0.9999948059333417	WITHOUT_CLASSIFICATION	5.1940666583726665E-6	DEFECT
// set flag true if negative values not allowed and the // lower bound is between 0 and 10:	WITHOUT_CLASSIFICATION	0.9999916713668224	WITHOUT_CLASSIFICATION	8.32863317751583E-6	DEFECT
//parameter value is < -10 //calculate log using positive value:	WITHOUT_CLASSIFICATION	0.9998479968562176	WITHOUT_CLASSIFICATION	1.5200314378243634E-4	DEFECT
//calculate power using positive value; then negate	WITHOUT_CLASSIFICATION	0.999972112299302	WITHOUT_CLASSIFICATION	2.788770069795986E-5	DEFECT
//parameter value is <= 0 //use as-is	WITHOUT_CLASSIFICATION	0.9999846894576269	WITHOUT_CLASSIFICATION	1.5310542373108418E-5	DEFECT
//if less than 1.0 then make it 1.0 //subtract out margin and get exponential value:	WITHOUT_CLASSIFICATION	0.9999997740322027	WITHOUT_CLASSIFICATION	2.2596779731247327E-7	DEFECT
//negatives not allowed and lower range bound is zero //use data range bound instead	WITHOUT_CLASSIFICATION	0.9999686200651421	WITHOUT_CLASSIFICATION	3.137993485793878E-5	DEFECT
//get positive exponent //create multiplier value //multiply, round up, and divide for bound value:	WITHOUT_CLASSIFICATION	0.999999884671457	WITHOUT_CLASSIFICATION	1.1532854307179892E-7	DEFECT
//negatives allowed or upper bound not between 0 & 1 //if flag then change to log version of highest value to // make range begin at a 10^n value; else use nearest int	WITHOUT_CLASSIFICATION	0.9999995017426998	WITHOUT_CLASSIFICATION	4.982573001448425E-7	DEFECT
//get log10 version of lower bound and round to integer:	WITHOUT_CLASSIFICATION	0.9999994349109967	WITHOUT_CLASSIFICATION	5.650890032134969E-7	DEFECT
//first tick of series, or not too small a value and // one of first 3 ticks, or last tick to be displayed // set exact number of fractional digits to be shown // (no effect if showing "1e#"-style ticks):	WITHOUT_CLASSIFICATION	0.9999999216262966	WITHOUT_CLASSIFICATION	7.837370347363388E-8	DEFECT
//did zero tick last iteration //clear flag //create tick label string: //show tick label if "1e#"-style and it's one // of the first two, if it's the first or last // in the set, or if it's 1-5; beyond that // show fewer as the values get larger:	WITHOUT_CLASSIFICATION	0.999999377056091	WITHOUT_CLASSIFICATION	6.229439090148221E-7	DEFECT
// as far as I know, the Locale for the calendar only affects week // number calculations, and since DateTickUnit doesn't do week // arithmetic, the default locale (whatever it is) should be fine // here...	WITHOUT_CLASSIFICATION	0.999389307895146	WITHOUT_CLASSIFICATION	6.106921048539704E-4	DEFECT
// as far as I know, the Locale for the calendar only affects week // number calculations, and since DateTickUnit doesn't do week // arithmetic, the default locale (whatever it is) should be fine // here...	WITHOUT_CLASSIFICATION	0.999389307895146	WITHOUT_CLASSIFICATION	6.106921048539704E-4	DEFECT
// start with the current tick unit...	WITHOUT_CLASSIFICATION	0.999999271479419	WITHOUT_CLASSIFICATION	7.28520580850739E-7	DEFECT
// all tick labels have the same width (equal to the height of // the font)...	WITHOUT_CLASSIFICATION	0.999999663289727	WITHOUT_CLASSIFICATION	3.36710273028823E-7	DEFECT
// draw the tick marks and labels...	WITHOUT_CLASSIFICATION	0.9999969592209974	WITHOUT_CLASSIFICATION	3.040779002685803E-6	DEFECT
// we call refresh ticks just to get the maximum width or height	WITHOUT_CLASSIFICATION	0.999999893810119	WITHOUT_CLASSIFICATION	1.0618988100707755E-7	DEFECT
// calculate midnight of first monday after 1/1/1900 relative to // current locale	WITHOUT_CLASSIFICATION	0.9999984032813861	WITHOUT_CLASSIFICATION	1.596718613890331E-6	DEFECT
// cycle through all the segments contained in the BaseTimeline // exception segment	WITHOUT_CLASSIFICATION	0.9999993961564928	WITHOUT_CLASSIFICATION	6.038435072588723E-7	DEFECT
// this is not one of our included segment, skip it	WITHOUT_CLASSIFICATION	0.99999937796424	WITHOUT_CLASSIFICATION	6.220357600772576E-7	DEFECT
// first test for equality (contains or contained)	WITHOUT_CLASSIFICATION	0.9999997619915161	WITHOUT_CLASSIFICATION	2.3800848392661847E-7	DEFECT
// key not found	WITHOUT_CLASSIFICATION	0.9999587249738825	WITHOUT_CLASSIFICATION	4.1275026117596543E-5	DEFECT
// Compute number of labels	WITHOUT_CLASSIFICATION	0.9999998396586202	WITHOUT_CLASSIFICATION	1.6034137982265144E-7	DEFECT
// TOP	WITHOUT_CLASSIFICATION	0.9998168126125565	WITHOUT_CLASSIFICATION	1.8318738744359798E-4	DEFECT
// RIGHT	WITHOUT_CLASSIFICATION	0.999993875476893	WITHOUT_CLASSIFICATION	6.124523106976635E-6	DEFECT
// argument checking delegated...	WITHOUT_CLASSIFICATION	0.9999997922706068	WITHOUT_CLASSIFICATION	2.077293932781037E-7	DEFECT
//gets the outline stroke width of the plot	WITHOUT_CLASSIFICATION	0.9999993529373726	WITHOUT_CLASSIFICATION	6.470626274268143E-7	DEFECT
// first arrange without constraints, and see if this fits within // the required ranges...	WITHOUT_CLASSIFICATION	0.9999988340640203	WITHOUT_CLASSIFICATION	1.165935979653966E-6	DEFECT
// first arrange without constraints, and see if this fits within // the required ranges...	WITHOUT_CLASSIFICATION	0.9999988340640203	WITHOUT_CLASSIFICATION	1.165935979653966E-6	DEFECT
// set a theme using the new shadow generator feature available in // 1.0.14 - for backwards compatibility it is not enabled by default	WITHOUT_CLASSIFICATION	0.999999874151882	WITHOUT_CLASSIFICATION	1.258481180305036E-7	DEFECT
// ****************************************************************** //  More than 150 demo applications are included with the JFreeChart //  Developer Guide...for more information, see: // //  >   http://www.object-refinery.com/jfreechart/guide.html // // ******************************************************************	WITHOUT_CLASSIFICATION	0.99999885571185	WITHOUT_CLASSIFICATION	1.1442881499303101E-6	DEFECT
//dmo: added this panel for colorbar control. (start dmo additions)	WITHOUT_CLASSIFICATION	0.9999405193497392	WITHOUT_CLASSIFICATION	5.948065026076971E-5	DEFECT
//dmo: (end dmo additions)	WITHOUT_CLASSIFICATION	0.9998569273181361	WITHOUT_CLASSIFICATION	1.4307268186385032E-4	DEFECT
//  No op	WITHOUT_CLASSIFICATION	0.9999964757609541	WITHOUT_CLASSIFICATION	3.5242390458776106E-6	DEFECT
// defer argument checks...	WITHOUT_CLASSIFICATION	0.9999994215665835	WITHOUT_CLASSIFICATION	5.78433416521374E-7	DEFECT
// defer argument checks...	WITHOUT_CLASSIFICATION	0.9999994215665835	WITHOUT_CLASSIFICATION	5.78433416521374E-7	DEFECT
// defer argument checks...	WITHOUT_CLASSIFICATION	0.9999994215665835	WITHOUT_CLASSIFICATION	5.78433416521374E-7	DEFECT
// defer argument checks...	WITHOUT_CLASSIFICATION	0.9999994215665835	WITHOUT_CLASSIFICATION	5.78433416521374E-7	DEFECT
// defer argument checks...	WITHOUT_CLASSIFICATION	0.9999994215665835	WITHOUT_CLASSIFICATION	5.78433416521374E-7	DEFECT
// defer argument checks...	WITHOUT_CLASSIFICATION	0.9999994215665835	WITHOUT_CLASSIFICATION	5.78433416521374E-7	DEFECT
// defer argument checks...	WITHOUT_CLASSIFICATION	0.9999994215665835	WITHOUT_CLASSIFICATION	5.78433416521374E-7	DEFECT
// defer argument checks...	WITHOUT_CLASSIFICATION	0.9999994215665835	WITHOUT_CLASSIFICATION	5.78433416521374E-7	DEFECT
// defer argument checks...	WITHOUT_CLASSIFICATION	0.9999994215665835	WITHOUT_CLASSIFICATION	5.78433416521374E-7	DEFECT
// pass on the event to the auxiliary handlers	WITHOUT_CLASSIFICATION	0.9999999416675588	WITHOUT_CLASSIFICATION	5.8332441164556804E-8	DEFECT
// pass on the event to the auxiliary handlers	WITHOUT_CLASSIFICATION	0.9999999416675588	WITHOUT_CLASSIFICATION	5.8332441164556804E-8	DEFECT
// does nothing unless overridden	WITHOUT_CLASSIFICATION	0.9999818631722188	WITHOUT_CLASSIFICATION	1.813682778116977E-5	DEFECT
// does nothing unless overridden	WITHOUT_CLASSIFICATION	0.9999818631722188	WITHOUT_CLASSIFICATION	1.813682778116977E-5	DEFECT
//no initial zoom rectangle exists but the handler is set //as life handler unregister	WITHOUT_CLASSIFICATION	0.9999998529230891	WITHOUT_CLASSIFICATION	1.4707691092004174E-7	DEFECT
//float midX = (float) (minX + (plotArea.getWidth() * getRotateX())); //float midY = (float) (minY + (plotArea.getHeight() * getRotateY()));	WITHOUT_CLASSIFICATION	0.9999853709548008	WITHOUT_CLASSIFICATION	1.4629045199273269E-5	DEFECT
/// we have rotation	WITHOUT_CLASSIFICATION	0.9999862469690046	WITHOUT_CLASSIFICATION	1.3753030995448667E-5	DEFECT
// store the plot and its weight	WITHOUT_CLASSIFICATION	0.9999997721246203	WITHOUT_CLASSIFICATION	2.2787537965750162E-7	DEFECT
// store the plot and its weight	WITHOUT_CLASSIFICATION	0.9999997721246203	WITHOUT_CLASSIFICATION	2.2787537965750162E-7	DEFECT
// work out the space required by the domain axis...	WITHOUT_CLASSIFICATION	0.9999458666922133	WITHOUT_CLASSIFICATION	5.413330778670839E-5	DEFECT
// work out the maximum height or width of the non-shared axes...	WITHOUT_CLASSIFICATION	0.999999613184032	WITHOUT_CLASSIFICATION	3.868159680693787E-7	DEFECT
// calculate plotAreas of all sub-plots, maximum vertical/horizontal // axis width/height	WITHOUT_CLASSIFICATION	0.9999998263449594	WITHOUT_CLASSIFICATION	1.736550405632182E-7	DEFECT
// set up info collection...	WITHOUT_CLASSIFICATION	0.9999990428993042	WITHOUT_CLASSIFICATION	9.571006958152355E-7	DEFECT
// set up info collection...	WITHOUT_CLASSIFICATION	0.9999990428993042	WITHOUT_CLASSIFICATION	9.571006958152355E-7	DEFECT
// adjust the drawing area for plot insets (if any)...	WITHOUT_CLASSIFICATION	0.9999996884804844	WITHOUT_CLASSIFICATION	3.115195155366364E-7	DEFECT
// adjust the drawing area for plot insets (if any)...	WITHOUT_CLASSIFICATION	0.9999996884804844	WITHOUT_CLASSIFICATION	3.115195155366364E-7	DEFECT
// after setting up all the subplots, the shared range axis may need // reconfiguring	WITHOUT_CLASSIFICATION	0.999999735618825	WITHOUT_CLASSIFICATION	2.6438117494773443E-7	DEFECT
// adjust the plot area by the interior spacing value	WITHOUT_CLASSIFICATION	0.9999960737365128	WITHOUT_CLASSIFICATION	3.926263487311605E-6	DEFECT
// if we are drawing a perfect circle, we need to readjust the top left // coordinates of the drawing area for the arcs to arrive at this // effect.	WITHOUT_CLASSIFICATION	0.9999997938686933	WITHOUT_CLASSIFICATION	2.061313067149748E-7	DEFECT
// establish the coordinates of the top left corner of the drawing area	WITHOUT_CLASSIFICATION	0.9999998880885757	WITHOUT_CLASSIFICATION	1.1191142423707492E-7	DEFECT
// draw the sections at the top of the pie (and set up tooltips)...	WITHOUT_CLASSIFICATION	0.9999999851920472	WITHOUT_CLASSIFICATION	1.4807952770040864E-8	DEFECT
// the pie sections are arranged ANTICLOCKWISE	WITHOUT_CLASSIFICATION	0.9999992811833568	WITHOUT_CLASSIFICATION	7.188166432146457E-7	DEFECT
// starts at the back and finishes at the front // (wrapping the left side)	WITHOUT_CLASSIFICATION	0.999999736867671	WITHOUT_CLASSIFICATION	2.6313232898028386E-7	DEFECT
// if the plot area is too small, just return...	WITHOUT_CLASSIFICATION	0.9999990552682644	WITHOUT_CLASSIFICATION	9.447317356762296E-7	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9999995063106223	WITHOUT_CLASSIFICATION	4.936893777090077E-7	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9999995063106223	WITHOUT_CLASSIFICATION	4.936893777090077E-7	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9999995063106223	WITHOUT_CLASSIFICATION	4.936893777090077E-7	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9999995063106223	WITHOUT_CLASSIFICATION	4.936893777090077E-7	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9999995063106223	WITHOUT_CLASSIFICATION	4.936893777090077E-7	DEFECT
//turn off anti-aliasing when filling rectangles	WITHOUT_CLASSIFICATION	0.9999967383474401	WITHOUT_CLASSIFICATION	3.261652559876425E-6	DEFECT
// add an entity for the item...	WITHOUT_CLASSIFICATION	0.9999956724014626	WITHOUT_CLASSIFICATION	4.327598537415374E-6	DEFECT
// add an entity for the item...	WITHOUT_CLASSIFICATION	0.9999956724014626	WITHOUT_CLASSIFICATION	4.327598537415374E-6	DEFECT
// delegate 'info' and 'source' argument checks...	WITHOUT_CLASSIFICATION	0.9999999697503175	WITHOUT_CLASSIFICATION	3.0249682480797355E-8	DEFECT
// if the source point doesn't fall within a subplot, we do the // zoom on all subplots...	WITHOUT_CLASSIFICATION	0.9999995183214268	WITHOUT_CLASSIFICATION	4.816785732538452E-7	DEFECT
// if the source point doesn't fall within a subplot, we do the // zoom on all subplots...	WITHOUT_CLASSIFICATION	0.9999995183214268	WITHOUT_CLASSIFICATION	4.816785732538452E-7	DEFECT
// is there an override?	WITHOUT_CLASSIFICATION	0.9985188111189724	WITHOUT_CLASSIFICATION	0.0014811888810276304	DEFECT
// is there an override?	WITHOUT_CLASSIFICATION	0.9985188111189724	WITHOUT_CLASSIFICATION	0.0014811888810276304	DEFECT
// nothing defined - do we autoPopulate?	WITHOUT_CLASSIFICATION	0.9999884781388856	WITHOUT_CLASSIFICATION	1.1521861114499436E-5	DEFECT
// null argument check delegated...	WITHOUT_CLASSIFICATION	0.9999996755351886	WITHOUT_CLASSIFICATION	3.2446481134550375E-7	DEFECT
// null argument check delegated...	WITHOUT_CLASSIFICATION	0.9999996755351886	WITHOUT_CLASSIFICATION	3.2446481134550375E-7	DEFECT
// null argument check delegated...	WITHOUT_CLASSIFICATION	0.9999996755351886	WITHOUT_CLASSIFICATION	3.2446481134550375E-7	DEFECT
// the explode area defines the max circle/ellipse for the exploded // pie sections.  it is defined by shrinking the linkArea by the // linkMargin factor.	WITHOUT_CLASSIFICATION	0.9999963461803012	WITHOUT_CLASSIFICATION	3.6538196988874522E-6	DEFECT
// work out the mid angle (0 - 90 and 270 - 360) = right, // otherwise left	WITHOUT_CLASSIFICATION	0.9999899536885518	WITHOUT_CLASSIFICATION	1.0046311448261602E-5	DEFECT
// delegate...	WITHOUT_CLASSIFICATION	0.9999987910794105	WITHOUT_CLASSIFICATION	1.2089205895662219E-6	DEFECT
// delegate...	WITHOUT_CLASSIFICATION	0.9999987910794105	WITHOUT_CLASSIFICATION	1.2089205895662219E-6	DEFECT
// delegate...	WITHOUT_CLASSIFICATION	0.9999987910794105	WITHOUT_CLASSIFICATION	1.2089205895662219E-6	DEFECT
// delegate...	WITHOUT_CLASSIFICATION	0.9999987910794105	WITHOUT_CLASSIFICATION	1.2089205895662219E-6	DEFECT
// delegate...	WITHOUT_CLASSIFICATION	0.9999987910794105	WITHOUT_CLASSIFICATION	1.2089205895662219E-6	DEFECT
// no axis, no gridlines...	WITHOUT_CLASSIFICATION	0.9999996260869254	WITHOUT_CLASSIFICATION	3.7391307457343244E-7	DEFECT
// can't zoom domain axis	WITHOUT_CLASSIFICATION	0.9999613057355141	WITHOUT_CLASSIFICATION	3.869426448587957E-5	DEFECT
// can't zoom domain axis	WITHOUT_CLASSIFICATION	0.9999613057355141	WITHOUT_CLASSIFICATION	3.869426448587957E-5	DEFECT
// the above should cover all the options...	WITHOUT_CLASSIFICATION	0.9999897135658573	WITHOUT_CLASSIFICATION	1.0286434142675836E-5	DEFECT
// get the source coordinate - this plot has always a VERTICAL // orientation	WITHOUT_CLASSIFICATION	0.9999947079905043	WITHOUT_CLASSIFICATION	5.292009495696215E-6	DEFECT
// get the source coordinate - this plot has always a VERTICAL // orientation	WITHOUT_CLASSIFICATION	0.9999947079905043	WITHOUT_CLASSIFICATION	5.292009495696215E-6	DEFECT
// return the override, if there is one...	WITHOUT_CLASSIFICATION	0.9999988698439884	WITHOUT_CLASSIFICATION	1.13015601153761E-6	DEFECT
// PlotOrientation.VERTICAL	WITHOUT_CLASSIFICATION	0.9999972739344507	WITHOUT_CLASSIFICATION	2.7260655493401328E-6	DEFECT
// PlotOrientation.VERTICAL	WITHOUT_CLASSIFICATION	0.9999972739344507	WITHOUT_CLASSIFICATION	2.7260655493401328E-6	DEFECT
// PlotOrientation.VERTICAL	WITHOUT_CLASSIFICATION	0.9999972739344507	WITHOUT_CLASSIFICATION	2.7260655493401328E-6	DEFECT
// no domain axis to zoom	WITHOUT_CLASSIFICATION	0.9999861239469999	WITHOUT_CLASSIFICATION	1.3876052999984735E-5	DEFECT
// no domain axis to zoom	WITHOUT_CLASSIFICATION	0.9999861239469999	WITHOUT_CLASSIFICATION	1.3876052999984735E-5	DEFECT
// the indicator bounds is calculated from the templateValue (which // determines the minimum size), the maxTemplateValue (which, if // specified, provides a maximum size) and the actual value	WITHOUT_CLASSIFICATION	0.9999999324853207	WITHOUT_CLASSIFICATION	6.75146792182347E-8	DEFECT
// startAngle	WITHOUT_CLASSIFICATION	0.9999994993937392	WITHOUT_CLASSIFICATION	5.006062608183125E-7	DEFECT
// startAngle	WITHOUT_CLASSIFICATION	0.9999994993937392	WITHOUT_CLASSIFICATION	5.006062608183125E-7	DEFECT
// extent	WITHOUT_CLASSIFICATION	0.9999969478921736	WITHOUT_CLASSIFICATION	3.052107826372425E-6	DEFECT
// majorTickIncrement // majorTickLength // majorTickPaint // majorTickStroke // minorTickCount // minorTickLength // minorTickPaint // minorTickStroke // tickLabelOffset // tickLabelFont // tickLabelsVisible // tickLabelFormatter // firstTickLabelsVisible	WITHOUT_CLASSIFICATION	0.9999969186903079	WITHOUT_CLASSIFICATION	3.0813096921951907E-6	DEFECT
// SERIES VISIBLE IN LEGEND (not yet respected by all renderers)	WITHOUT_CLASSIFICATION	0.999996685636872	WITHOUT_CLASSIFICATION	3.3143631280201624E-6	DEFECT
// PAINT	WITHOUT_CLASSIFICATION	0.9999911880249526	WITHOUT_CLASSIFICATION	8.811975047400677E-6	DEFECT
// STROKE	WITHOUT_CLASSIFICATION	0.9999762833837532	WITHOUT_CLASSIFICATION	2.3716616246717326E-5	DEFECT
// itemLabelFontList // baseItemLabelFont // itemLabelPaintList // baseItemLabelPaint // positiveItemLabelPositionList // basePositiveItemLabelPosition // negativeItemLabelPositionList // baseNegativeItemLabelPosition // itemLabelAnchorOffset // createEntityList // baseCreateEntities	WITHOUT_CLASSIFICATION	0.9999998664048689	WITHOUT_CLASSIFICATION	1.3359513111762458E-7	DEFECT
// for value in bounds, do the lookup...	WITHOUT_CLASSIFICATION	0.9999996092750266	WITHOUT_CLASSIFICATION	3.9072497332593286E-7	DEFECT
// for data in ascending order by x-value, we are (broadly) looking // for the index of the highest x-value that is less than xLow	WITHOUT_CLASSIFICATION	0.9999969680045233	WITHOUT_CLASSIFICATION	3.0319954767339892E-6	DEFECT
// we don't know anything about the ordering of the x-values, // but we can still skip any trailing values that fall outside the // range...	WITHOUT_CLASSIFICATION	0.9996936908775781	WITHOUT_CLASSIFICATION	3.0630912242199187E-4	DEFECT
// leave the y values (y1, y0) untranslated as it is going to be be // stacked up later by previous series values, after this it will be // translated.	WITHOUT_CLASSIFICATION	0.9999981064586693	WITHOUT_CLASSIFICATION	1.893541330689767E-6	DEFECT
// get the previous point and the next point so we can calculate a // "hot spot" for the area (used by the chart entity)...	WITHOUT_CLASSIFICATION	0.9999999963114736	WITHOUT_CLASSIFICATION	3.6885263472889597E-9	DEFECT
// FIXME: calculate xx0	WITHOUT_CLASSIFICATION	0.8072428003384794	DEFECT	0.19275719966152058	WITHOUT_CLASSIFICATION
// LEFT POLYGON	WITHOUT_CLASSIFICATION	0.9999947076182741	WITHOUT_CLASSIFICATION	5.2923817258384856E-6	DEFECT
// calculate the bar width	WITHOUT_CLASSIFICATION	0.9999974419112028	WITHOUT_CLASSIFICATION	2.5580887971169363E-6	DEFECT
// wait till we are at the last item for the row then draw the // whole stack at once	WITHOUT_CLASSIFICATION	0.999994328426399	WITHOUT_CLASSIFICATION	5.67157360098055E-6	DEFECT
// a list to store the series index and bar region, so we can draw // all the labels at the end...	WITHOUT_CLASSIFICATION	0.9999996061934814	WITHOUT_CLASSIFICATION	3.938065186049033E-7	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9999841673965367	WITHOUT_CLASSIFICATION	1.5832603463317274E-5	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9999841673965367	WITHOUT_CLASSIFICATION	1.5832603463317274E-5	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9999841673965367	WITHOUT_CLASSIFICATION	1.5832603463317274E-5	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9999841673965367	WITHOUT_CLASSIFICATION	1.5832603463317274E-5	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9999841673965367	WITHOUT_CLASSIFICATION	1.5832603463317274E-5	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9999841673965367	WITHOUT_CLASSIFICATION	1.5832603463317274E-5	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9999841673965367	WITHOUT_CLASSIFICATION	1.5832603463317274E-5	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9999841673965367	WITHOUT_CLASSIFICATION	1.5832603463317274E-5	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9999841673965367	WITHOUT_CLASSIFICATION	1.5832603463317274E-5	DEFECT
// do nothing if item is not visible	WITHOUT_CLASSIFICATION	0.9999744098725992	WITHOUT_CLASSIFICATION	2.5590127400768192E-5	DEFECT
// current data point...	WITHOUT_CLASSIFICATION	0.9999987542709564	WITHOUT_CLASSIFICATION	1.245729043498765E-6	DEFECT
// clip left and right bounds to data area	WITHOUT_CLASSIFICATION	0.9999998192441876	WITHOUT_CLASSIFICATION	1.8075581238141204E-7	DEFECT
// clip left and right bounds to data area	WITHOUT_CLASSIFICATION	0.9999998192441876	WITHOUT_CLASSIFICATION	1.8075581238141204E-7	DEFECT
// PlotOrientation.HORIZONTAL	WITHOUT_CLASSIFICATION	0.9999985160690147	WITHOUT_CLASSIFICATION	1.4839309853754242E-6	DEFECT
// bar is not visible	WITHOUT_CLASSIFICATION	0.999964901497403	WITHOUT_CLASSIFICATION	3.509850259699215E-5	DEFECT
// bar is not visible	WITHOUT_CLASSIFICATION	0.999964901497403	WITHOUT_CLASSIFICATION	3.509850259699215E-5	DEFECT
// bar is not visible	WITHOUT_CLASSIFICATION	0.999964901497403	WITHOUT_CLASSIFICATION	3.509850259699215E-5	DEFECT
// draw the outline...	WITHOUT_CLASSIFICATION	0.9999981007029202	WITHOUT_CLASSIFICATION	1.8992970798264234E-6	DEFECT
// collect entity and tool tip information...	WITHOUT_CLASSIFICATION	0.9999977532571824	WITHOUT_CLASSIFICATION	2.246742817518753E-6	DEFECT
// collect entity and tool tip information...	WITHOUT_CLASSIFICATION	0.9999977532571824	WITHOUT_CLASSIFICATION	2.246742817518753E-6	DEFECT
// collect entity and tool tip information...	WITHOUT_CLASSIFICATION	0.9999977532571824	WITHOUT_CLASSIFICATION	2.246742817518753E-6	DEFECT
// collect entity and tool tip information...	WITHOUT_CLASSIFICATION	0.9999977532571824	WITHOUT_CLASSIFICATION	2.246742817518753E-6	DEFECT
// collect entity and tool tip information...	WITHOUT_CLASSIFICATION	0.9999977532571824	WITHOUT_CLASSIFICATION	2.246742817518753E-6	DEFECT
// collect entity and tool tip information...	WITHOUT_CLASSIFICATION	0.9999977532571824	WITHOUT_CLASSIFICATION	2.246742817518753E-6	DEFECT
// calculate bar width...	WITHOUT_CLASSIFICATION	0.9999952081872104	WITHOUT_CLASSIFICATION	4.791812789470136E-6	DEFECT
// FIXME: add setBaseItemLabelGenerator(CategoryItemLabelGenerator, //            boolean) ?	WITHOUT_CLASSIFICATION	0.9390926951111054	WITHOUT_CLASSIFICATION	0.06090730488889465	DEFECT
//// ITEM LABEL PAINT  /////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999751398548485	WITHOUT_CLASSIFICATION	2.48601451514488E-5	DEFECT
// last series, so we are ready to draw the min and max	WITHOUT_CLASSIFICATION	0.9999997486588452	WITHOUT_CLASSIFICATION	2.5134115467062095E-7	DEFECT
// draw mean - SPECIAL AIMS REQUIREMENT...	WITHOUT_CLASSIFICATION	0.9999887311949305	WITHOUT_CLASSIFICATION	1.1268805069616654E-5	DEFECT
// From outlier array sort out which are outliers and put these into a // list If there are any farouts, set the flag on the // OutlierListCollection	WITHOUT_CLASSIFICATION	0.99999940626574	WITHOUT_CLASSIFICATION	5.937342598576811E-7	DEFECT
// avoid possible sun.dc.pr.PRException: endPath: bad path	WITHOUT_CLASSIFICATION	0.9999965272153795	WITHOUT_CLASSIFICATION	3.4727846206075646E-6	DEFECT
// avoid possible sun.dc.pr.PRException: endPath: bad path	WITHOUT_CLASSIFICATION	0.9999965272153795	WITHOUT_CLASSIFICATION	3.4727846206075646E-6	DEFECT
// Add the last point (x,0)	WITHOUT_CLASSIFICATION	0.9999997365445152	WITHOUT_CLASSIFICATION	2.634554847510294E-7	DEFECT
// Add the last point (x,0)	WITHOUT_CLASSIFICATION	0.9999997365445152	WITHOUT_CLASSIFICATION	2.634554847510294E-7	DEFECT
// check if initial polygon needs to be clipped	WITHOUT_CLASSIFICATION	0.9999996505349883	WITHOUT_CLASSIFICATION	3.49465011753392E-7	DEFECT
// never updated the subtrahend if it is implied to be zero	WITHOUT_CLASSIFICATION	0.9999999865397244	WITHOUT_CLASSIFICATION	1.3460275623024661E-8	DEFECT
// check if line segments are colinear	WITHOUT_CLASSIFICATION	0.999998701311388	WITHOUT_CLASSIFICATION	1.2986886120409478E-6	DEFECT
// clear the point vectors	WITHOUT_CLASSIFICATION	0.9999997671044882	WITHOUT_CLASSIFICATION	2.3289551177305618E-7	DEFECT
//// ITEM LABELS VISIBLE //////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999623248042748	WITHOUT_CLASSIFICATION	3.767519572524372E-5	DEFECT
// we don't need the sign	WITHOUT_CLASSIFICATION	0.999989281723183	WITHOUT_CLASSIFICATION	1.0718276817011258E-5	DEFECT
// fillType == TO_UPPER_BOUND	WITHOUT_CLASSIFICATION	0.9998746202779338	WITHOUT_CLASSIFICATION	1.2537972206610413E-4	DEFECT
/*      solve linear system with tridiagonal n by n matrix a        using Gaussian elimination *without* pivoting        where   a(i,i-1) = sub[i]  for 2<=i<=n        a(i,i)   = diag[i] for 1<=i<=n        a(i,i+1) = sup[i]  for 1<=i<=n-1        (the values sub[1], sup[n] are ignored)        right hand side vector b[1:n] is overwritten with solution        NOTE: 1...n is used in all arrays, 0 is unused */	WITHOUT_CLASSIFICATION	0.9999993487957649	WITHOUT_CLASSIFICATION	6.512042351202441E-7	DEFECT
// this represents the situation // for drawing a horizontal bar.	WITHOUT_CLASSIFICATION	0.9999888668291966	WITHOUT_CLASSIFICATION	1.1133170803392487E-5	DEFECT
// draw median	WITHOUT_CLASSIFICATION	0.9999970646491433	WITHOUT_CLASSIFICATION	2.935350856760111E-6	DEFECT
//  Check that the graph being served was created by the current user //  or that it begins with "public"	WITHOUT_CLASSIFICATION	0.9999999530605034	WITHOUT_CLASSIFICATION	4.6939496505255855E-8	DEFECT
// the textAlignment and the horizontalAlignment are separate things, // but it makes sense for the default textAlignment to match the // title's horizontal alignment...	WITHOUT_CLASSIFICATION	0.9999999153604878	WITHOUT_CLASSIFICATION	8.463951220487486E-8	DEFECT
// we don't use the calendar or numberFormat fields, but equals(Object) // is failing without them being non-null	WITHOUT_CLASSIFICATION	0.9948235067966618	WITHOUT_CLASSIFICATION	0.0051764932033382975	DEFECT
/**/	WITHOUT_CLASSIFICATION	0.9857770558497382	WITHOUT_CLASSIFICATION	0.014222944150261894	DEFECT
/**/	WITHOUT_CLASSIFICATION	0.9857770558497382	WITHOUT_CLASSIFICATION	0.014222944150261894	DEFECT
// adjust text bounds to match string position	WITHOUT_CLASSIFICATION	0.9999986896117588	WITHOUT_CLASSIFICATION	1.3103882411918398E-6	DEFECT
// now fetch the row data - need to bear in mind that the row // structure may not have an entry for the column key, but that we // have already checked that the key is valid for the 2D structure	WITHOUT_CLASSIFICATION	0.9999962804836972	WITHOUT_CLASSIFICATION	3.719516302934526E-6	DEFECT
// defer null argument check	WITHOUT_CLASSIFICATION	0.9999975006904196	WITHOUT_CLASSIFICATION	2.4993095804420245E-6	DEFECT
// defer null argument check	WITHOUT_CLASSIFICATION	0.9999975006904196	WITHOUT_CLASSIFICATION	2.4993095804420245E-6	DEFECT
// set up the series names...	WITHOUT_CLASSIFICATION	0.9999992713502176	WITHOUT_CLASSIFICATION	7.286497824012607E-7	DEFECT
// is the category valid?	WITHOUT_CLASSIFICATION	0.9998998910113162	WITHOUT_CLASSIFICATION	1.0010898868390133E-4	DEFECT
//create a temporary vector // set x to some arbitary value (used below)	WITHOUT_CLASSIFICATION	0.9999999159493106	WITHOUT_CLASSIFICATION	8.405068949282277E-8	DEFECT
// look for any keys that we don't already know about...	WITHOUT_CLASSIFICATION	0.9996358988078292	WITHOUT_CLASSIFICATION	3.641011921708074E-4	DEFECT
//  Iterate and find all keys below threshold percentThreshold	WITHOUT_CLASSIFICATION	0.9999360023513547	WITHOUT_CLASSIFICATION	6.399764864527061E-5	DEFECT
// handle special case of BoxAndWhiskerDataset	WITHOUT_CLASSIFICATION	0.9999984126231535	WITHOUT_CLASSIFICATION	1.587376846567841E-6	DEFECT
// standard case - plain XYDataset	WITHOUT_CLASSIFICATION	0.9999990012976934	WITHOUT_CLASSIFICATION	9.987023066438526E-7	DEFECT
// hasn't implemented RangeInfo, so we'll have to iterate...	WITHOUT_CLASSIFICATION	0.9999979212973129	WITHOUT_CLASSIFICATION	2.078702687118004E-6	DEFECT
// hasn't implemented RangeInfo, so we'll have to iterate...	WITHOUT_CLASSIFICATION	0.9999979212973129	WITHOUT_CLASSIFICATION	2.078702687118004E-6	DEFECT
// CASE 1 : Comparing to another Second object // -------------------------------------------	WITHOUT_CLASSIFICATION	0.9999807547005874	WITHOUT_CLASSIFICATION	1.9245299412482867E-5	DEFECT
// CASE 2 : Comparing to another TimePeriod object // -----------------------------------------------	WITHOUT_CLASSIFICATION	0.9999697302571728	WITHOUT_CLASSIFICATION	3.0269742827235935E-5	DEFECT
// CASE 2 : Comparing to another TimePeriod object // -----------------------------------------------	WITHOUT_CLASSIFICATION	0.9999697302571728	WITHOUT_CLASSIFICATION	3.0269742827235935E-5	DEFECT
// CASE 2 : Comparing to another TimePeriod object // -----------------------------------------------	WITHOUT_CLASSIFICATION	0.9999697302571728	WITHOUT_CLASSIFICATION	3.0269742827235935E-5	DEFECT
// CASE 2 : Comparing to another TimePeriod object // -----------------------------------------------	WITHOUT_CLASSIFICATION	0.9999697302571728	WITHOUT_CLASSIFICATION	3.0269742827235935E-5	DEFECT
// remove old items if necessary, but // don't notify anyone, because that // happens next anyway...	WITHOUT_CLASSIFICATION	0.9999771874974807	WITHOUT_CLASSIFICATION	2.2812502519324896E-5	DEFECT
// get the current data item...	WITHOUT_CLASSIFICATION	0.9999991587698424	WITHOUT_CLASSIFICATION	8.412301577202467E-7	DEFECT
// get the current data item...	WITHOUT_CLASSIFICATION	0.9999991587698424	WITHOUT_CLASSIFICATION	8.412301577202467E-7	DEFECT
// The next 3 functions override the base-class implementation of // the DomainInfo interface.  Using saved limits (updated by // each updateTime() call), improves performance. //	WITHOUT_CLASSIFICATION	0.9999998936281218	WITHOUT_CLASSIFICATION	1.0637187822600732E-7	DEFECT
// deregister the collection as a change listener to each series in the // collection	WITHOUT_CLASSIFICATION	0.9999989736921009	WITHOUT_CLASSIFICATION	1.0263078991918786E-6	DEFECT
// alternatively, sometimes the first few days of the year are // considered to fall in the *last* week of the previous year...	WITHOUT_CLASSIFICATION	0.9999996605929876	WITHOUT_CLASSIFICATION	3.394070124614494E-7	DEFECT
// Unregister the collection as a change listener to each series in // the collection.	WITHOUT_CLASSIFICATION	0.9999991366728952	WITHOUT_CLASSIFICATION	8.633271047606161E-7	DEFECT
// if the series is sorted, the negative index is a result from // Collections.binarySearch() and tells us where to insert the // new item...otherwise it will be just -1 and we should just // append the value to the list...	WITHOUT_CLASSIFICATION	0.9999945640668976	WITHOUT_CLASSIFICATION	5.435933102393063E-6	DEFECT
// pass mouse move event if some ChartMouseListener are listening	WITHOUT_CLASSIFICATION	0.9999985828535477	WITHOUT_CLASSIFICATION	1.417146452374015E-6	DEFECT
// row keys...	WITHOUT_CLASSIFICATION	0.9999929907955389	WITHOUT_CLASSIFICATION	7.009204461102933E-6	DEFECT
// row keys...	WITHOUT_CLASSIFICATION	0.9999929907955389	WITHOUT_CLASSIFICATION	7.009204461102933E-6	DEFECT
// row keys...	WITHOUT_CLASSIFICATION	0.9999929907955389	WITHOUT_CLASSIFICATION	7.009204461102933E-6	DEFECT
// chart title // domain axis label // range axis label // data // orientation // include legend // tooltips? // URLs?	WITHOUT_CLASSIFICATION	0.9999915257496428	WITHOUT_CLASSIFICATION	8.474250357191965E-6	DEFECT
// the SWTGraphics2D class doesn't handle GradientPaint well, so // replace the gradient painter from the default theme with a // standard painter...	WITHOUT_CLASSIFICATION	0.9999999517425376	WITHOUT_CLASSIFICATION	4.825746232120881E-8	DEFECT
// Dispose of any fonts we have created	WITHOUT_CLASSIFICATION	0.999998308285304	WITHOUT_CLASSIFICATION	1.691714696030528E-6	DEFECT
// Create the new font and set it into the title // label	WITHOUT_CLASSIFICATION	0.9999998962892115	WITHOUT_CLASSIFICATION	1.0371078849753234E-7	DEFECT
// create the new color and set it to the // SwtPaintCanvas	WITHOUT_CLASSIFICATION	0.9999999953247681	WITHOUT_CLASSIFICATION	4.67523179402831E-9	DEFECT
// row 2: outline color	WITHOUT_CLASSIFICATION	0.9999767756761825	WITHOUT_CLASSIFICATION	2.322432381751408E-5	DEFECT
// Use a SwtPaintCanvas to show the color, note that we must set the // heightHint.	WITHOUT_CLASSIFICATION	0.9999943661440198	WITHOUT_CLASSIFICATION	5.6338559802609475E-6	DEFECT
// backgroundPaint	WITHOUT_CLASSIFICATION	0.999999148613729	WITHOUT_CLASSIFICATION	8.513862710123147E-7	DEFECT
// backgroundPaint	WITHOUT_CLASSIFICATION	0.999999148613729	WITHOUT_CLASSIFICATION	8.513862710123147E-7	DEFECT
// backgroundPaint	WITHOUT_CLASSIFICATION	0.999999148613729	WITHOUT_CLASSIFICATION	8.513862710123147E-7	DEFECT
// now create a new title and replace the existing title, several // things should happen: // (1) Adding the new title should trigger an immediate //     ChartChangeEvent; // (2) Modifying the new title should trigger a ChartChangeEvent; // (3) Modifying the old title should NOT trigger a ChartChangeEvent	WITHOUT_CLASSIFICATION	0.9999874398581892	WITHOUT_CLASSIFICATION	1.2560141810930759E-5	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999917400541091	WITHOUT_CLASSIFICATION	8.259945890952432E-6	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999917400541091	WITHOUT_CLASSIFICATION	8.259945890952432E-6	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999917400541091	WITHOUT_CLASSIFICATION	8.259945890952432E-6	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999917400541091	WITHOUT_CLASSIFICATION	8.259945890952432E-6	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999917400541091	WITHOUT_CLASSIFICATION	8.259945890952432E-6	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999917400541091	WITHOUT_CLASSIFICATION	8.259945890952432E-6	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999917400541091	WITHOUT_CLASSIFICATION	8.259945890952432E-6	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999917400541091	WITHOUT_CLASSIFICATION	8.259945890952432E-6	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999917400541091	WITHOUT_CLASSIFICATION	8.259945890952432E-6	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999917400541091	WITHOUT_CLASSIFICATION	8.259945890952432E-6	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999917400541091	WITHOUT_CLASSIFICATION	8.259945890952432E-6	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999917400541091	WITHOUT_CLASSIFICATION	8.259945890952432E-6	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999917400541091	WITHOUT_CLASSIFICATION	8.259945890952432E-6	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999917400541091	WITHOUT_CLASSIFICATION	8.259945890952432E-6	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999917400541091	WITHOUT_CLASSIFICATION	8.259945890952432E-6	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999917400541091	WITHOUT_CLASSIFICATION	8.259945890952432E-6	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999917400541091	WITHOUT_CLASSIFICATION	8.259945890952432E-6	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999917400541091	WITHOUT_CLASSIFICATION	8.259945890952432E-6	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999917400541091	WITHOUT_CLASSIFICATION	8.259945890952432E-6	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999917400541091	WITHOUT_CLASSIFICATION	8.259945890952432E-6	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999917400541091	WITHOUT_CLASSIFICATION	8.259945890952432E-6	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999917400541091	WITHOUT_CLASSIFICATION	8.259945890952432E-6	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999917400541091	WITHOUT_CLASSIFICATION	8.259945890952432E-6	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999917400541091	WITHOUT_CLASSIFICATION	8.259945890952432E-6	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999917400541091	WITHOUT_CLASSIFICATION	8.259945890952432E-6	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999917400541091	WITHOUT_CLASSIFICATION	8.259945890952432E-6	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999917400541091	WITHOUT_CLASSIFICATION	8.259945890952432E-6	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999917400541091	WITHOUT_CLASSIFICATION	8.259945890952432E-6	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.9999991988446677	WITHOUT_CLASSIFICATION	8.011553322954671E-7	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.9999991988446677	WITHOUT_CLASSIFICATION	8.011553322954671E-7	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.9999991988446677	WITHOUT_CLASSIFICATION	8.011553322954671E-7	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.9999991988446677	WITHOUT_CLASSIFICATION	8.011553322954671E-7	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.9999991988446677	WITHOUT_CLASSIFICATION	8.011553322954671E-7	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.9999991988446677	WITHOUT_CLASSIFICATION	8.011553322954671E-7	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.9999991988446677	WITHOUT_CLASSIFICATION	8.011553322954671E-7	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.9999991988446677	WITHOUT_CLASSIFICATION	8.011553322954671E-7	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.9999991988446677	WITHOUT_CLASSIFICATION	8.011553322954671E-7	DEFECT
// labelFont	WITHOUT_CLASSIFICATION	0.9999973779115384	WITHOUT_CLASSIFICATION	2.622088461652587E-6	DEFECT
// fillPaint	WITHOUT_CLASSIFICATION	0.9999970415645008	WITHOUT_CLASSIFICATION	2.9584354993289326E-6	DEFECT
// fillPaint	WITHOUT_CLASSIFICATION	0.9999970415645008	WITHOUT_CLASSIFICATION	2.9584354993289326E-6	DEFECT
// fillPaint	WITHOUT_CLASSIFICATION	0.9999970415645008	WITHOUT_CLASSIFICATION	2.9584354993289326E-6	DEFECT
// outlinePaint	WITHOUT_CLASSIFICATION	0.9999992889511972	WITHOUT_CLASSIFICATION	7.110488028258165E-7	DEFECT
// a null key should throw an IllegalArgumentException	WITHOUT_CLASSIFICATION	0.999874347893956	WITHOUT_CLASSIFICATION	1.25652106043966E-4	DEFECT
// a null key should throw an IllegalArgumentException	WITHOUT_CLASSIFICATION	0.999874347893956	WITHOUT_CLASSIFICATION	1.25652106043966E-4	DEFECT
//gridBandPaint	WITHOUT_CLASSIFICATION	0.9999904193005911	WITHOUT_CLASSIFICATION	9.580699409054862E-6	DEFECT
//private double angle;	WITHOUT_CLASSIFICATION	0.9999666847040953	WITHOUT_CLASSIFICATION	3.331529590469583E-5	DEFECT
//private double baseRadius;	WITHOUT_CLASSIFICATION	0.9999935366208588	WITHOUT_CLASSIFICATION	6.463379141156126E-6	DEFECT
//private double arrowWidth;	WITHOUT_CLASSIFICATION	0.9999613704576517	WITHOUT_CLASSIFICATION	3.862954234841868E-5	DEFECT
//private double labelOffset;	WITHOUT_CLASSIFICATION	0.9999940782616593	WITHOUT_CLASSIFICATION	5.921738340633109E-6	DEFECT
// font	WITHOUT_CLASSIFICATION	0.9999890794464322	WITHOUT_CLASSIFICATION	1.0920553567850554E-5	DEFECT
// paint	WITHOUT_CLASSIFICATION	0.9999951975017685	WITHOUT_CLASSIFICATION	4.8024982315678655E-6	DEFECT
// paint	WITHOUT_CLASSIFICATION	0.9999951975017685	WITHOUT_CLASSIFICATION	4.8024982315678655E-6	DEFECT
// paint	WITHOUT_CLASSIFICATION	0.9999951975017685	WITHOUT_CLASSIFICATION	4.8024982315678655E-6	DEFECT
// ok, exception is expected	WITHOUT_CLASSIFICATION	0.9999938554869383	WITHOUT_CLASSIFICATION	6.144513061706482E-6	DEFECT
// stroke	WITHOUT_CLASSIFICATION	0.9999968413684576	WITHOUT_CLASSIFICATION	3.158631542370813E-6	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9997740141285885	WITHOUT_CLASSIFICATION	2.2598587141163236E-4	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9997740141285885	WITHOUT_CLASSIFICATION	2.2598587141163236E-4	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9997740141285885	WITHOUT_CLASSIFICATION	2.2598587141163236E-4	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9997740141285885	WITHOUT_CLASSIFICATION	2.2598587141163236E-4	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9997740141285885	WITHOUT_CLASSIFICATION	2.2598587141163236E-4	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9997740141285885	WITHOUT_CLASSIFICATION	2.2598587141163236E-4	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9997740141285885	WITHOUT_CLASSIFICATION	2.2598587141163236E-4	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9997740141285885	WITHOUT_CLASSIFICATION	2.2598587141163236E-4	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9997740141285885	WITHOUT_CLASSIFICATION	2.2598587141163236E-4	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9997740141285885	WITHOUT_CLASSIFICATION	2.2598587141163236E-4	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9997740141285885	WITHOUT_CLASSIFICATION	2.2598587141163236E-4	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9997740141285885	WITHOUT_CLASSIFICATION	2.2598587141163236E-4	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9997740141285885	WITHOUT_CLASSIFICATION	2.2598587141163236E-4	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9997740141285885	WITHOUT_CLASSIFICATION	2.2598587141163236E-4	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9997740141285885	WITHOUT_CLASSIFICATION	2.2598587141163236E-4	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9997740141285885	WITHOUT_CLASSIFICATION	2.2598587141163236E-4	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9997740141285885	WITHOUT_CLASSIFICATION	2.2598587141163236E-4	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9997740141285885	WITHOUT_CLASSIFICATION	2.2598587141163236E-4	DEFECT
// dateFormatOverride	WITHOUT_CLASSIFICATION	0.9999547326752358	WITHOUT_CLASSIFICATION	4.5267324764108325E-5	DEFECT
// range	WITHOUT_CLASSIFICATION	0.9999943586395379	WITHOUT_CLASSIFICATION	5.641360462073362E-6	DEFECT
// check that setting the max date to something on or before the // current min date works...	WITHOUT_CLASSIFICATION	0.9999944695513074	WITHOUT_CLASSIFICATION	5.530448692593153E-6	DEFECT
// five dates to check...	WITHOUT_CLASSIFICATION	0.9999970599518768	WITHOUT_CLASSIFICATION	2.940048123108989E-6	DEFECT
// five dates to check...	WITHOUT_CLASSIFICATION	0.9999970599518768	WITHOUT_CLASSIFICATION	2.940048123108989E-6	DEFECT
// five dates to check...	WITHOUT_CLASSIFICATION	0.9999970599518768	WITHOUT_CLASSIFICATION	2.940048123108989E-6	DEFECT
// five dates to check...	WITHOUT_CLASSIFICATION	0.9999970599518768	WITHOUT_CLASSIFICATION	2.940048123108989E-6	DEFECT
// five dates to check...	WITHOUT_CLASSIFICATION	0.9999970599518768	WITHOUT_CLASSIFICATION	2.940048123108989E-6	DEFECT
// five dates to check...	WITHOUT_CLASSIFICATION	0.9999970599518768	WITHOUT_CLASSIFICATION	2.940048123108989E-6	DEFECT
// five dates to check...	WITHOUT_CLASSIFICATION	0.9999970599518768	WITHOUT_CLASSIFICATION	2.940048123108989E-6	DEFECT
// five dates to check...	WITHOUT_CLASSIFICATION	0.9999970599518768	WITHOUT_CLASSIFICATION	2.940048123108989E-6	DEFECT
// five dates to check...	WITHOUT_CLASSIFICATION	0.9999970599518768	WITHOUT_CLASSIFICATION	2.940048123108989E-6	DEFECT
// START: check d0 and d1	WITHOUT_CLASSIFICATION	0.9999665254994481	WITHOUT_CLASSIFICATION	3.3474500551949504E-5	DEFECT
// START: check d0 and d1	WITHOUT_CLASSIFICATION	0.9999665254994481	WITHOUT_CLASSIFICATION	3.3474500551949504E-5	DEFECT
// MIDDLE: check d1, d2 and d3	WITHOUT_CLASSIFICATION	0.9999650490496133	WITHOUT_CLASSIFICATION	3.495095038679562E-5	DEFECT
// MIDDLE: check d1, d2 and d3	WITHOUT_CLASSIFICATION	0.9999650490496133	WITHOUT_CLASSIFICATION	3.495095038679562E-5	DEFECT
// END: check d3 and d4	WITHOUT_CLASSIFICATION	0.9999582106825416	WITHOUT_CLASSIFICATION	4.1789317458369274E-5	DEFECT
// END: check d3 and d4	WITHOUT_CLASSIFICATION	0.9999582106825416	WITHOUT_CLASSIFICATION	4.1789317458369274E-5	DEFECT
//private boolean autoRangeStickyZero;	WITHOUT_CLASSIFICATION	0.9999860978825809	WITHOUT_CLASSIFICATION	1.3902117419018702E-5	DEFECT
// now replacing the dataset should update the axis range...	WITHOUT_CLASSIFICATION	0.999999717726345	WITHOUT_CLASSIFICATION	2.82273655050002E-7	DEFECT
// now replacing the dataset should update the axis range...	WITHOUT_CLASSIFICATION	0.999999717726345	WITHOUT_CLASSIFICATION	2.82273655050002E-7	DEFECT
// set axis bounds to be both greater than 1	WITHOUT_CLASSIFICATION	0.9999978571042567	WITHOUT_CLASSIFICATION	2.14289574324286E-6	DEFECT
// check for bounds interval that includes 1	WITHOUT_CLASSIFICATION	0.9999995638141123	WITHOUT_CLASSIFICATION	4.3618588779026205E-7	DEFECT
// check for bounds interval that includes 1	WITHOUT_CLASSIFICATION	0.9999995638141123	WITHOUT_CLASSIFICATION	4.3618588779026205E-7	DEFECT
// tickLabelFont	WITHOUT_CLASSIFICATION	0.999998404686076	WITHOUT_CLASSIFICATION	1.5953139239630195E-6	DEFECT
// advance line Paint	WITHOUT_CLASSIFICATION	0.9999905114013056	WITHOUT_CLASSIFICATION	9.488598694343299E-6	DEFECT
// Add exception in included segments	WITHOUT_CLASSIFICATION	0.9999989960766543	WITHOUT_CLASSIFICATION	1.0039233456053413E-6	DEFECT
// Saturday and Sundays are non business hours	WITHOUT_CLASSIFICATION	0.9999930208613214	WITHOUT_CLASSIFICATION	6.979138678669139E-6	DEFECT
/** These constants control test cycles in the validateXXXX methods. */	WITHOUT_CLASSIFICATION	0.998425239326995	WITHOUT_CLASSIFICATION	0.001574760673004938	DEFECT
/** These constants control test cycles in the validateXXXX methods. */	WITHOUT_CLASSIFICATION	0.998425239326995	WITHOUT_CLASSIFICATION	0.001574760673004938	DEFECT
// 1-ms test timeline using 5 included and 2 excluded segments. // // timeline start time = 0 //   | //   v //   0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 .. // +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+.. // |  |  |  |  |  |EE|EE|  |  |  |  |  |EE|EE|  |  |  |  |  |  |EE|EE|    <-- msTimeline // +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+.. //  \_________  ________/            \_/ //            \/                      | //       segment group         segment size = 1 ms //	WITHOUT_CLASSIFICATION	0.9999999842131126	WITHOUT_CLASSIFICATION	1.578688741513548E-8	DEFECT
// 1-ms test timeline (with a baseTimeline) using 2 included and 2 // excluded segments centered inside each base segment // // The ms2Timeline without a base would look like this: // //    timeline start time = 1 //      | //      v //   0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 ... // +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+... // |EE|  |  |EE|EE|  |  |EE|EE|  |  |EE|EE|  |  |EE|EE|  |  |EE|    <-- ms2Timeline // +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+... //    \____  _____/            \_/ //         \/                   | //    segment group      segment size = 1 ms // // With the base timeline some originally included segments are now // removed (see "xx" below): // //   0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 ... // +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+... // |EE|  |  |EE|EE|xx|xx|EE|EE|  |  |EE|EE|xx|xx|EE|EE|  |  |EE|    <-- ms2Timeline // +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+... // |  |  |  |  |EE|EE|EE|EE|  |  |  |  |EE|EE|EE|EE|  |  |  |  |    <-- ms2BaseTimeline // +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+... //	WITHOUT_CLASSIFICATION	0.9999989616967869	WITHOUT_CLASSIFICATION	1.0383032130399204E-6	DEFECT
// test monday though friday timeline	WITHOUT_CLASSIFICATION	0.9999987861465185	WITHOUT_CLASSIFICATION	1.2138534815035948E-6	DEFECT
// find first Monday after 2001-01-01	WITHOUT_CLASSIFICATION	0.9999980644026841	WITHOUT_CLASSIFICATION	1.935597315804704E-6	DEFECT
////////////////////////////////////////////////////////////////////////// // test construction process //////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999995833471274	WITHOUT_CLASSIFICATION	4.166528726637053E-7	DEFECT
// verify attributes set during object construction	WITHOUT_CLASSIFICATION	0.9999963289486014	WITHOUT_CLASSIFICATION	3.671051398640218E-6	DEFECT
////////////////////////////////////////////////////////////////////////// // main include and excluded segments //////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999997288719512	WITHOUT_CLASSIFICATION	2.711280487969658E-7	DEFECT
////////////////////////////////////////////////////////////////////////// // test timeline translations //////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999994976460151	WITHOUT_CLASSIFICATION	5.023539848231992E-7	DEFECT
// verify all timeline segments included in the // baseTimeline.segment are now exceptions	WITHOUT_CLASSIFICATION	0.9999985497053674	WITHOUT_CLASSIFICATION	1.4502946325908717E-6	DEFECT
// 1-Jan-2000	WITHOUT_CLASSIFICATION	0.9999920595433334	WITHOUT_CLASSIFICATION	7.940456666709856E-6	DEFECT
// tick label insets...	WITHOUT_CLASSIFICATION	0.9999951753755973	WITHOUT_CLASSIFICATION	4.824624402705778E-6	DEFECT
// tick mark paint...	WITHOUT_CLASSIFICATION	0.9999947496457127	WITHOUT_CLASSIFICATION	5.250354287363287E-6	DEFECT
// negativeArrowVisible;	WITHOUT_CLASSIFICATION	0.9999929303795247	WITHOUT_CLASSIFICATION	7.069620475315349E-6	DEFECT
// axisLinePaint	WITHOUT_CLASSIFICATION	0.9999981349593634	WITHOUT_CLASSIFICATION	1.8650406366290545E-6	DEFECT
// autoRange	WITHOUT_CLASSIFICATION	0.9999972735423129	WITHOUT_CLASSIFICATION	2.7264576870153893E-6	DEFECT
// autoRangeMinimumSize	WITHOUT_CLASSIFICATION	0.9999868520164616	WITHOUT_CLASSIFICATION	1.3147983538328061E-5	DEFECT
//private double fixedAutoRange;	WITHOUT_CLASSIFICATION	0.9999412572580113	WITHOUT_CLASSIFICATION	5.874274198867727E-5	DEFECT
//private boolean autoTickUnitSelection;	WITHOUT_CLASSIFICATION	0.9999951556875034	WITHOUT_CLASSIFICATION	4.8443124966537925E-6	DEFECT
//private int autoTickIndex; //protected double reservedForTickLabels; //protected double reservedForAxisLabel;	WITHOUT_CLASSIFICATION	0.9999885831002577	WITHOUT_CLASSIFICATION	1.1416899742315231E-5	DEFECT
// TBLRC // 00001 - center item only	WITHOUT_CLASSIFICATION	0.9999943852971945	WITHOUT_CLASSIFICATION	5.614702805489982E-6	DEFECT
// TBLRC // 00001 - center item only	WITHOUT_CLASSIFICATION	0.9999943852971945	WITHOUT_CLASSIFICATION	5.614702805489982E-6	DEFECT
// TBLRC // 00100 - left item only	WITHOUT_CLASSIFICATION	0.9999688678045964	WITHOUT_CLASSIFICATION	3.113219540366846E-5	DEFECT
// TBLRC // 10101 - top, left and center	WITHOUT_CLASSIFICATION	0.9999974835084072	WITHOUT_CLASSIFICATION	2.5164915928575895E-6	DEFECT
// TBLRC // 10110 - top, left and right	WITHOUT_CLASSIFICATION	0.9999952335953054	WITHOUT_CLASSIFICATION	4.766404694683076E-6	DEFECT
// TBLRC // 11000 - top and bottom only	WITHOUT_CLASSIFICATION	0.9999896830455738	WITHOUT_CLASSIFICATION	1.0316954426096907E-5	DEFECT
// TBLRC // 11011	WITHOUT_CLASSIFICATION	0.9999669811923778	WITHOUT_CLASSIFICATION	3.301880762224548E-5	DEFECT
// TBLRC // 11111 - all	WITHOUT_CLASSIFICATION	0.9998939959820357	WITHOUT_CLASSIFICATION	1.060040179643555E-4	DEFECT
// standard test	WITHOUT_CLASSIFICATION	0.9999997270257037	WITHOUT_CLASSIFICATION	2.729742962563956E-7	DEFECT
// Y format	WITHOUT_CLASSIFICATION	0.9999921166022561	WITHOUT_CLASSIFICATION	7.883397743946515E-6	DEFECT
// some setup...	WITHOUT_CLASSIFICATION	0.9999962119124023	WITHOUT_CLASSIFICATION	3.7880875977766534E-6	DEFECT
// some setup...	WITHOUT_CLASSIFICATION	0.9999962119124023	WITHOUT_CLASSIFICATION	3.7880875977766534E-6	DEFECT
// parent plot...	WITHOUT_CLASSIFICATION	0.999999144437647	WITHOUT_CLASSIFICATION	8.55562352981187E-7	DEFECT
// innerSeparatorExtension	WITHOUT_CLASSIFICATION	0.9999288137578491	WITHOUT_CLASSIFICATION	7.118624215083571E-5	DEFECT
// domainAxis - no longer a separate field but test anyway...	WITHOUT_CLASSIFICATION	0.9999955803023821	WITHOUT_CLASSIFICATION	4.419697617897009E-6	DEFECT
// rangeAxis - no longer a separate field but test anyway...	WITHOUT_CLASSIFICATION	0.9999961711811461	WITHOUT_CLASSIFICATION	3.8288188539260215E-6	DEFECT
// renderer - no longer a separate field but test anyway...	WITHOUT_CLASSIFICATION	0.9999982161689254	WITHOUT_CLASSIFICATION	1.7838310746799055E-6	DEFECT
// domainGridlinesVisible	WITHOUT_CLASSIFICATION	0.9999956927587018	WITHOUT_CLASSIFICATION	4.307241298260161E-6	DEFECT
// domainGridlinePosition	WITHOUT_CLASSIFICATION	0.9999975379361469	WITHOUT_CLASSIFICATION	2.4620638531505056E-6	DEFECT
// rangeGridlinePaint	WITHOUT_CLASSIFICATION	0.9999984914929698	WITHOUT_CLASSIFICATION	1.5085070300679739E-6	DEFECT
// anchorValue	WITHOUT_CLASSIFICATION	0.9999962168538401	WITHOUT_CLASSIFICATION	3.7831461599233626E-6	DEFECT
// rangeCrosshairPaint	WITHOUT_CLASSIFICATION	0.9999977984251343	WITHOUT_CLASSIFICATION	2.2015748657274992E-6	DEFECT
// rangeCrosshairPaint	WITHOUT_CLASSIFICATION	0.9999977984251343	WITHOUT_CLASSIFICATION	2.2015748657274992E-6	DEFECT
// range markers - no longer separate fields but test anyway...	WITHOUT_CLASSIFICATION	0.9999906015800719	WITHOUT_CLASSIFICATION	9.398419928069353E-6	DEFECT
// fixed legend items	WITHOUT_CLASSIFICATION	0.9999880522500938	WITHOUT_CLASSIFICATION	1.1947749906139397E-5	DEFECT
// domainCrosshairPaint	WITHOUT_CLASSIFICATION	0.9999975125083165	WITHOUT_CLASSIFICATION	2.487491683483489E-6	DEFECT
// check for independence	WITHOUT_CLASSIFICATION	0.9999973311392614	WITHOUT_CLASSIFICATION	2.668860738570442E-6	DEFECT
// check for independence	WITHOUT_CLASSIFICATION	0.9999973311392614	WITHOUT_CLASSIFICATION	2.668860738570442E-6	DEFECT
// now check that the chart is usable...	WITHOUT_CLASSIFICATION	0.9999996485430468	WITHOUT_CLASSIFICATION	3.5145695316030925E-7	DEFECT
// now check that the chart is usable...	WITHOUT_CLASSIFICATION	0.9999996485430468	WITHOUT_CLASSIFICATION	3.5145695316030925E-7	DEFECT
// now make a change to the renderer and see if it triggers a plot // change event...	WITHOUT_CLASSIFICATION	0.9999999962900794	WITHOUT_CLASSIFICATION	3.709920568628007E-9	DEFECT
// should get IllegalArgumentException for negative index	WITHOUT_CLASSIFICATION	0.999997438872427	WITHOUT_CLASSIFICATION	2.561127572951721E-6	DEFECT
// if multiple axes are mapped, the first in the list should be // returned...	WITHOUT_CLASSIFICATION	0.9999825488145877	WITHOUT_CLASSIFICATION	1.7451185412300784E-5	DEFECT
// if multiple axes are mapped, the first in the list should be // returned...	WITHOUT_CLASSIFICATION	0.9999825488145877	WITHOUT_CLASSIFICATION	1.7451185412300784E-5	DEFECT
// add a second dataset	WITHOUT_CLASSIFICATION	0.9999988872071534	WITHOUT_CLASSIFICATION	1.1127928467125633E-6	DEFECT
// units	WITHOUT_CLASSIFICATION	0.9999951316755968	WITHOUT_CLASSIFICATION	4.868324403128415E-6	DEFECT
// tick labels visible	WITHOUT_CLASSIFICATION	0.9999897485813322	WITHOUT_CLASSIFICATION	1.025141866780021E-5	DEFECT
// tick size	WITHOUT_CLASSIFICATION	0.9999959489926942	WITHOUT_CLASSIFICATION	4.051007305798507E-6	DEFECT
// the clone and the original share a reference to the SAME dataset	WITHOUT_CLASSIFICATION	0.999999942012984	WITHOUT_CLASSIFICATION	5.798701590339709E-8	DEFECT
// check null argument...	WITHOUT_CLASSIFICATION	0.9999984558099512	WITHOUT_CLASSIFICATION	1.5441900488337969E-6	DEFECT
// check null argument...	WITHOUT_CLASSIFICATION	0.9999984558099512	WITHOUT_CLASSIFICATION	1.5441900488337969E-6	DEFECT
// check null argument...	WITHOUT_CLASSIFICATION	0.9999984558099512	WITHOUT_CLASSIFICATION	1.5441900488337969E-6	DEFECT
// check null argument...	WITHOUT_CLASSIFICATION	0.9999984558099512	WITHOUT_CLASSIFICATION	1.5441900488337969E-6	DEFECT
// check null argument...	WITHOUT_CLASSIFICATION	0.9999984558099512	WITHOUT_CLASSIFICATION	1.5441900488337969E-6	DEFECT
// check null argument...	WITHOUT_CLASSIFICATION	0.9999984558099512	WITHOUT_CLASSIFICATION	1.5441900488337969E-6	DEFECT
// check null argument...	WITHOUT_CLASSIFICATION	0.9999984558099512	WITHOUT_CLASSIFICATION	1.5441900488337969E-6	DEFECT
// check null argument...	WITHOUT_CLASSIFICATION	0.9999984558099512	WITHOUT_CLASSIFICATION	1.5441900488337969E-6	DEFECT
// check null argument...	WITHOUT_CLASSIFICATION	0.9999984558099512	WITHOUT_CLASSIFICATION	1.5441900488337969E-6	DEFECT
// check null argument...	WITHOUT_CLASSIFICATION	0.9999984558099512	WITHOUT_CLASSIFICATION	1.5441900488337969E-6	DEFECT
// check null argument...	WITHOUT_CLASSIFICATION	0.9999984558099512	WITHOUT_CLASSIFICATION	1.5441900488337969E-6	DEFECT
// labelType...	WITHOUT_CLASSIFICATION	0.9999968158617352	WITHOUT_CLASSIFICATION	3.1841382647917217E-6	DEFECT
// pieIndex...	WITHOUT_CLASSIFICATION	0.9999972685752032	WITHOUT_CLASSIFICATION	2.7314247968805348E-6	DEFECT
// ignoreZeroValues	WITHOUT_CLASSIFICATION	0.9999986551002059	WITHOUT_CLASSIFICATION	1.3448997941599176E-6	DEFECT
// sectionOutlinesVisible	WITHOUT_CLASSIFICATION	0.9999957393606541	WITHOUT_CLASSIFICATION	4.26063934593602E-6	DEFECT
// sectionOutlineStroke	WITHOUT_CLASSIFICATION	0.99999810390178	WITHOUT_CLASSIFICATION	1.896098220063457E-6	DEFECT
// labelBackgroundPaint	WITHOUT_CLASSIFICATION	0.9999982895864991	WITHOUT_CLASSIFICATION	1.7104135009071691E-6	DEFECT
// labelGenerator	WITHOUT_CLASSIFICATION	0.9999988784092773	WITHOUT_CLASSIFICATION	1.121590722676688E-6	DEFECT
// we use ValueMarker for the tests, because we need a concrete // subclass...	WITHOUT_CLASSIFICATION	0.9999999855380951	WITHOUT_CLASSIFICATION	1.4461904760834016E-8	DEFECT
// we use ValueMarker for the tests, because we need a concrete // subclass...	WITHOUT_CLASSIFICATION	0.9999999855380951	WITHOUT_CLASSIFICATION	1.4461904760834016E-8	DEFECT
// we use ValueMarker for the tests, because we need a concrete // subclass...	WITHOUT_CLASSIFICATION	0.9999999855380951	WITHOUT_CLASSIFICATION	1.4461904760834016E-8	DEFECT
// we use ValueMarker for the tests, because we need a concrete // subclass...	WITHOUT_CLASSIFICATION	0.9999999855380951	WITHOUT_CLASSIFICATION	1.4461904760834016E-8	DEFECT
// we use ValueMarker for the tests, because we need a concrete // subclass...	WITHOUT_CLASSIFICATION	0.9999999855380951	WITHOUT_CLASSIFICATION	1.4461904760834016E-8	DEFECT
// we use ValueMarker for the tests, because we need a concrete // subclass...	WITHOUT_CLASSIFICATION	0.9999999855380951	WITHOUT_CLASSIFICATION	1.4461904760834016E-8	DEFECT
// we use ValueMarker for the tests, because we need a concrete // subclass...	WITHOUT_CLASSIFICATION	0.9999999855380951	WITHOUT_CLASSIFICATION	1.4461904760834016E-8	DEFECT
// we use ValueMarker for the tests, because we need a concrete // subclass...	WITHOUT_CLASSIFICATION	0.9999999855380951	WITHOUT_CLASSIFICATION	1.4461904760834016E-8	DEFECT
// we use ValueMarker for the tests, because we need a concrete // subclass...	WITHOUT_CLASSIFICATION	0.9999999855380951	WITHOUT_CLASSIFICATION	1.4461904760834016E-8	DEFECT
// we use ValueMarker for the tests, because we need a concrete // subclass...	WITHOUT_CLASSIFICATION	0.9999999855380951	WITHOUT_CLASSIFICATION	1.4461904760834016E-8	DEFECT
// verify independence of fixed legend item collection	WITHOUT_CLASSIFICATION	0.9999884388166536	WITHOUT_CLASSIFICATION	1.15611833465163E-5	DEFECT
// stroke sequence	WITHOUT_CLASSIFICATION	0.9999981872577316	WITHOUT_CLASSIFICATION	1.8127422683463478E-6	DEFECT
// stroke index	WITHOUT_CLASSIFICATION	0.999997323075186	WITHOUT_CLASSIFICATION	2.676924813972017E-6	DEFECT
// check an inherited attribute	WITHOUT_CLASSIFICATION	0.9999958954645541	WITHOUT_CLASSIFICATION	4.104535445852769E-6	DEFECT
// check an inherited attribute	WITHOUT_CLASSIFICATION	0.9999958954645541	WITHOUT_CLASSIFICATION	4.104535445852769E-6	DEFECT
// check an inherited attribute	WITHOUT_CLASSIFICATION	0.9999958954645541	WITHOUT_CLASSIFICATION	4.104535445852769E-6	DEFECT
// check an inherited attribute	WITHOUT_CLASSIFICATION	0.9999958954645541	WITHOUT_CLASSIFICATION	4.104535445852769E-6	DEFECT
// check an inherited attribute	WITHOUT_CLASSIFICATION	0.9999958954645541	WITHOUT_CLASSIFICATION	4.104535445852769E-6	DEFECT
// check an inherited attribute	WITHOUT_CLASSIFICATION	0.9999958954645541	WITHOUT_CLASSIFICATION	4.104535445852769E-6	DEFECT
// check an inherited attribute	WITHOUT_CLASSIFICATION	0.9999958954645541	WITHOUT_CLASSIFICATION	4.104535445852769E-6	DEFECT
// check that the listener lists are independent	WITHOUT_CLASSIFICATION	0.9999988454235323	WITHOUT_CLASSIFICATION	1.1545764677323932E-6	DEFECT
// check that the listener lists are independent	WITHOUT_CLASSIFICATION	0.9999988454235323	WITHOUT_CLASSIFICATION	1.1545764677323932E-6	DEFECT
// check that the listener lists are independent	WITHOUT_CLASSIFICATION	0.9999988454235323	WITHOUT_CLASSIFICATION	1.1545764677323932E-6	DEFECT
// check that the listener lists are independent	WITHOUT_CLASSIFICATION	0.9999988454235323	WITHOUT_CLASSIFICATION	1.1545764677323932E-6	DEFECT
// check that the listener lists are independent	WITHOUT_CLASSIFICATION	0.9999988454235323	WITHOUT_CLASSIFICATION	1.1545764677323932E-6	DEFECT
// minorTickCount	WITHOUT_CLASSIFICATION	0.999996593079925	WITHOUT_CLASSIFICATION	3.40692007506343E-6	DEFECT
// try a default instance	WITHOUT_CLASSIFICATION	0.9999941310612603	WITHOUT_CLASSIFICATION	5.868938739683778E-6	DEFECT
// try a customised instance	WITHOUT_CLASSIFICATION	0.9999960829381466	WITHOUT_CLASSIFICATION	3.917061853514446E-6	DEFECT
// seriesVisibleInLegend	WITHOUT_CLASSIFICATION	0.9999969885685349	WITHOUT_CLASSIFICATION	3.0114314650751197E-6	DEFECT
//upper bound and margin OK; get log10 of upper bound	WITHOUT_CLASSIFICATION	0.9999971255839011	WITHOUT_CLASSIFICATION	2.874416098874834E-6	DEFECT
// fillPaintList	WITHOUT_CLASSIFICATION	0.999997143244005	WITHOUT_CLASSIFICATION	2.8567559949685328E-6	DEFECT
//apply upper margin by increasing upper bound:	WITHOUT_CLASSIFICATION	0.9999921420972794	WITHOUT_CLASSIFICATION	7.85790272061492E-6	DEFECT
// baseStroke	WITHOUT_CLASSIFICATION	0.9999982142912727	WITHOUT_CLASSIFICATION	1.7857087273244802E-6	DEFECT
// Reference: http://www.antigrain.com/research/bezier_interpolation/	WITHOUT_CLASSIFICATION	0.9999998564282557	WITHOUT_CLASSIFICATION	1.4357174429127637E-7	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999992092361156	WITHOUT_CLASSIFICATION	7.907638844166032E-7	DEFECT
// initialize ChartPanel-specific tool tip delays with // values the from ToolTipManager.sharedInstance()	WITHOUT_CLASSIFICATION	0.9999995241095465	WITHOUT_CLASSIFICATION	4.758904535029329E-7	DEFECT
// only draw if we have good values	WITHOUT_CLASSIFICATION	0.9999989165902478	WITHOUT_CLASSIFICATION	1.0834097522322281E-6	DEFECT
// properties // save // print // zoom // tooltips	WITHOUT_CLASSIFICATION	0.9999995273029842	WITHOUT_CLASSIFICATION	4.726970157473282E-7	DEFECT
// properties // save // print // zoom // tooltips	WITHOUT_CLASSIFICATION	0.9999995273029842	WITHOUT_CLASSIFICATION	4.726970157473282E-7	DEFECT
// stop listening for changes to the existing chart	WITHOUT_CLASSIFICATION	0.9999999741993797	WITHOUT_CLASSIFICATION	2.58006202363753E-8	DEFECT
// set up popup menu...	WITHOUT_CLASSIFICATION	0.9999989571016311	WITHOUT_CLASSIFICATION	1.0428983688414972E-6	DEFECT
// itemLabelsVisible	WITHOUT_CLASSIFICATION	0.999997015698083	WITHOUT_CLASSIFICATION	2.9843019170119207E-6	DEFECT
// make the background of the buffer clear and transparent	WITHOUT_CLASSIFICATION	0.9999997672708658	WITHOUT_CLASSIFICATION	2.3272913409617493E-7	DEFECT
// for MacOSX we can't use the CTRL key for mouse drags, see: // http://developer.apple.com/qa/qa2004/qa1362.html	WITHOUT_CLASSIFICATION	0.9999763620402304	WITHOUT_CLASSIFICATION	2.363795976953086E-5	DEFECT
// add the new chart	WITHOUT_CLASSIFICATION	0.9999997187960089	WITHOUT_CLASSIFICATION	2.8120399108390203E-7	DEFECT
// work out if scaling is required...	WITHOUT_CLASSIFICATION	0.9999631306951998	WITHOUT_CLASSIFICATION	3.686930480021897E-5	DEFECT
// first determine the size of the chart rendering area...	WITHOUT_CLASSIFICATION	0.9999998074946937	WITHOUT_CLASSIFICATION	1.925053062463898E-7	DEFECT
// do we need to resize the buffer?	WITHOUT_CLASSIFICATION	0.9999736388321218	WITHOUT_CLASSIFICATION	2.636116787832438E-5	DEFECT
// are we using the chart buffer?	WITHOUT_CLASSIFICATION	0.9999945861220046	WITHOUT_CLASSIFICATION	5.413877995335748E-6	DEFECT
// clear the flag	WITHOUT_CLASSIFICATION	0.999998676266997	WITHOUT_CLASSIFICATION	1.3237330029824043E-6	DEFECT
// do we need to redraw the buffer?	WITHOUT_CLASSIFICATION	0.9999761472048084	WITHOUT_CLASSIFICATION	2.3852795191618222E-5	DEFECT
// redraw the zoom rectangle (if present) - if useBuffer is false, // we use XOR so we can XOR the rectangle away again without redrawing // the chart	WITHOUT_CLASSIFICATION	0.9999984389034132	WITHOUT_CLASSIFICATION	1.5610965868036342E-6	DEFECT
// redrawing the chart every time...	WITHOUT_CLASSIFICATION	0.9999990556024101	WITHOUT_CLASSIFICATION	9.443975899663433E-7	DEFECT
// zap the buffer onto the panel...	WITHOUT_CLASSIFICATION	0.9999992911848014	WITHOUT_CLASSIFICATION	7.088151986322697E-7	DEFECT
// does nothing - override if necessary	WITHOUT_CLASSIFICATION	0.999995443911809	WITHOUT_CLASSIFICATION	4.556088191151329E-6	DEFECT
// many of the zoom methods need a screen location - all we have is // the zoomPoint, but it might be null.  Here we grab the x and y // coordinates, or use defaults...	WITHOUT_CLASSIFICATION	0.9999992848564455	WITHOUT_CLASSIFICATION	7.151435545302555E-7	DEFECT
// itemLabelFontList	WITHOUT_CLASSIFICATION	0.9999972522867276	WITHOUT_CLASSIFICATION	2.7477132723340137E-6	DEFECT
// restore original tooltip dealys	WITHOUT_CLASSIFICATION	0.999999859319297	WITHOUT_CLASSIFICATION	1.4068070285351494E-7	DEFECT
// can we pan this plot?	WITHOUT_CLASSIFICATION	0.9997745585894026	WITHOUT_CLASSIFICATION	2.2544141059750673E-4	DEFECT
// the actual panning occurs later in the mouseDragged()  // method	WITHOUT_CLASSIFICATION	0.9999502225793145	WITHOUT_CLASSIFICATION	4.977742068541253E-5	DEFECT
// if the popup menu has already been triggered, then ignore dragging...	WITHOUT_CLASSIFICATION	0.9999997891065936	WITHOUT_CLASSIFICATION	2.1089340634347498E-7	DEFECT
// handle panning if we have a start point	WITHOUT_CLASSIFICATION	0.9999991310895997	WITHOUT_CLASSIFICATION	8.68910400251884E-7	DEFECT
// if no initial zoom point was set, ignore dragging...	WITHOUT_CLASSIFICATION	0.9999999946938224	WITHOUT_CLASSIFICATION	5.30617771339782E-9	DEFECT
// erase the previous zoom rectangle (if any).  We only need to do // this is we are using XOR mode, which we do when we're not using // the buffer (if there is a buffer, then at the end of this method we // just trigger a repaint)	WITHOUT_CLASSIFICATION	0.9999990731613722	WITHOUT_CLASSIFICATION	9.268386278722483E-7	DEFECT
// selected rectangle shouldn't extend outside the data area...	WITHOUT_CLASSIFICATION	0.9999998626473925	WITHOUT_CLASSIFICATION	1.3735260757968476E-7	DEFECT
// Draw the new zoom rectangle...	WITHOUT_CLASSIFICATION	0.9999976080553963	WITHOUT_CLASSIFICATION	2.391944603637277E-6	DEFECT
// with no buffer, we use XOR to draw the rectangle "over" the // chart...	WITHOUT_CLASSIFICATION	0.9999999576799995	WITHOUT_CLASSIFICATION	4.23200004090925E-8	DEFECT
// if we've been panning, we need to reset now that the mouse is  // released...	WITHOUT_CLASSIFICATION	0.9999995457221192	WITHOUT_CLASSIFICATION	4.542778808206681E-7	DEFECT
// for mouseReleased event, (horizontalZoom || verticalZoom) // will be true, so we can just test for either being false; // otherwise both are true	WITHOUT_CLASSIFICATION	0.9999991434373018	WITHOUT_CLASSIFICATION	8.565626981596231E-7	DEFECT
// erase the zoom rectangle	WITHOUT_CLASSIFICATION	0.9999984741101928	WITHOUT_CLASSIFICATION	1.5258898071718995E-6	DEFECT
// force a redraw // new entity code...	WITHOUT_CLASSIFICATION	0.9999988230559809	WITHOUT_CLASSIFICATION	1.1769440192326427E-6	DEFECT
// we need to guard against this.zoomPoint being null	WITHOUT_CLASSIFICATION	0.9999965117433239	WITHOUT_CLASSIFICATION	3.4882566759953105E-6	DEFECT
// we need to guard against this.zoomPoint being null	WITHOUT_CLASSIFICATION	0.9999965117433239	WITHOUT_CLASSIFICATION	3.4882566759953105E-6	DEFECT
// Set XOR mode to draw the zoom rectangle	WITHOUT_CLASSIFICATION	0.999996046645764	WITHOUT_CLASSIFICATION	3.953354235961794E-6	DEFECT
// null will be returned	WITHOUT_CLASSIFICATION	0.9999674072206992	WITHOUT_CLASSIFICATION	3.2592779300904565E-5	DEFECT
// get the origin of the zoom selection in the Java2D space used for // drawing the chart (that is, before any scaling to fit the panel)	WITHOUT_CLASSIFICATION	0.999999999256339	WITHOUT_CLASSIFICATION	7.436609279550849E-10	DEFECT
// get the origin of the zoom selection in the Java2D space used for // drawing the chart (that is, before any scaling to fit the panel)	WITHOUT_CLASSIFICATION	0.999999999256339	WITHOUT_CLASSIFICATION	7.436609279550849E-10	DEFECT
// use reflection to get the SVG string	WITHOUT_CLASSIFICATION	0.9999997524170209	WITHOUT_CLASSIFICATION	2.475829792133915E-7	DEFECT
// Reset to the default 'overwrite' mode	WITHOUT_CLASSIFICATION	0.9999999704162819	WITHOUT_CLASSIFICATION	2.9583718223746057E-8	DEFECT
// Reset to the default 'overwrite' mode	WITHOUT_CLASSIFICATION	0.9999999704162819	WITHOUT_CLASSIFICATION	2.9583718223746057E-8	DEFECT
// Reset to the default 'overwrite' mode	WITHOUT_CLASSIFICATION	0.9999999704162819	WITHOUT_CLASSIFICATION	2.9583718223746057E-8	DEFECT
// null will be returned	WITHOUT_CLASSIFICATION	0.9999674072206992	WITHOUT_CLASSIFICATION	3.2592779300904565E-5	DEFECT
// we suppress shadow generation, because SVG is a vector format and // the shadow effect is applied via bitmap effects...	WITHOUT_CLASSIFICATION	0.9999989153187621	WITHOUT_CLASSIFICATION	1.0846812380000359E-6	DEFECT
// pdfDocument class will be null so the function will return false	WITHOUT_CLASSIFICATION	0.9999989953142703	WITHOUT_CLASSIFICATION	1.0046857297953007E-6	DEFECT
// null will be returned	WITHOUT_CLASSIFICATION	0.9999674072206992	WITHOUT_CLASSIFICATION	3.2592779300904565E-5	DEFECT
// null will be returned	WITHOUT_CLASSIFICATION	0.9999674072206992	WITHOUT_CLASSIFICATION	3.2592779300904565E-5	DEFECT
// null will be returned	WITHOUT_CLASSIFICATION	0.9999674072206992	WITHOUT_CLASSIFICATION	3.2592779300904565E-5	DEFECT
// fetch listeners from local storage	WITHOUT_CLASSIFICATION	0.9999982316532956	WITHOUT_CLASSIFICATION	1.7683467044359893E-6	DEFECT
// here we need to update the UI for the popup menu, if the panel // has one...	WITHOUT_CLASSIFICATION	0.9999999691332381	WITHOUT_CLASSIFICATION	3.0866761928327405E-8	DEFECT
// we suppress shadow generation, because PDF is a vector format and // the shadow effect is applied via bitmap effects...	WITHOUT_CLASSIFICATION	0.999998578817219	WITHOUT_CLASSIFICATION	1.4211827810819491E-6	DEFECT
// register as a listener with sub-components...	WITHOUT_CLASSIFICATION	0.9999998056569791	WITHOUT_CLASSIFICATION	1.9434302094195098E-7	DEFECT
// go through each zoom menu item and decide whether or not to // enable it...	WITHOUT_CLASSIFICATION	0.9999999952822989	WITHOUT_CLASSIFICATION	4.7177011488647545E-9	DEFECT
// suppresses compiler warning	WITHOUT_CLASSIFICATION	0.9999963254915909	WITHOUT_CLASSIFICATION	3.674508408997751E-6	DEFECT
// we create a new but empty chartMouseListeners list	WITHOUT_CLASSIFICATION	0.9999989034178026	WITHOUT_CLASSIFICATION	1.0965821974670327E-6	DEFECT
// suppresses compiler warning	WITHOUT_CLASSIFICATION	0.9999963254915909	WITHOUT_CLASSIFICATION	3.674508408997751E-6	DEFECT
/* =========================================================== * JFreeChart : a free chart library for the Java(tm) platform * =========================================================== * * (C) Copyright 2000-2014, by Object Refinery Limited and Contributors. * * Project Info:  http://www.jfree.org/jfreechart/index.html * * This library is free software; you can redistribute it and/or modify it * under the terms of the GNU Lesser General Public License as published by * the Free Software Foundation; either version 2.1 of the License, or * (at your option) any later version. * * This library is distributed in the hope that it will be useful, but * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public * License for more details. * * You should have received a copy of the GNU Lesser General Public * License along with this library; if not, write to the Free Software * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, * USA. * * [Oracle and Java are registered trademarks of Oracle and/or its affiliates.  * Other names may be trademarks of their respective owners.] * * ----------------- * ChartFactory.java * ----------------- * (C) Copyright 2001-2014, by Object Refinery Limited and Contributors. * * Original Author:  David Gilbert (for Object Refinery Limited); * Contributor(s):   Serge V. Grachov; *                   Joao Guilherme Del Valle; *                   Bill Kelemen; *                   Jon Iles; *                   Jelai Wang; *                   Richard Atkinson; *                   David Browning (for Australian Institute of Marine *                       Science); *                   Benoit Xhenseval; * * Changes * ------- * 19-Oct-2001 : Version 1, most methods transferred from JFreeChart.java (DG); * 22-Oct-2001 : Added methods to create stacked bar charts (DG); *               Renamed DataSource.java --> Dataset.java etc. (DG); * 31-Oct-2001 : Added 3D-effect vertical bar and stacked-bar charts, *               contributed by Serge V. Grachov (DG); * 07-Nov-2001 : Added a flag to control whether or not a legend is added to *               the chart (DG); * 17-Nov-2001 : For pie chart, changed dataset from CategoryDataset to *               PieDataset (DG); * 30-Nov-2001 : Removed try/catch handlers from chart creation, as the *               exception are now RuntimeExceptions, as suggested by Joao *               Guilherme Del Valle (DG); * 06-Dec-2001 : Added createCombinableXXXXXCharts methods (BK); * 12-Dec-2001 : Added createCandlestickChart() method (DG); * 13-Dec-2001 : Updated methods for charts with new renderers (DG); * 08-Jan-2002 : Added import for *               com.jrefinery.chart.combination.CombinedChart (DG); * 31-Jan-2002 : Changed the createCombinableVerticalXYBarChart() method to use *               renderer (DG); * 06-Feb-2002 : Added new method createWindPlot() (DG); * 23-Apr-2002 : Updates to the chart and plot constructor API (DG); * 21-May-2002 : Added new method createAreaChart() (JI); * 06-Jun-2002 : Added new method createGanttChart() (DG); * 11-Jun-2002 : Renamed createHorizontalStackedBarChart() *               --> createStackedHorizontalBarChart() for consistency (DG); * 06-Aug-2002 : Updated Javadoc comments (DG); * 21-Aug-2002 : Added createPieChart(CategoryDataset) method (DG); * 02-Oct-2002 : Fixed errors reported by Checkstyle (DG); * 09-Oct-2002 : Added methods including tooltips and URL flags (DG); * 06-Nov-2002 : Moved renderers into a separate package (DG); * 18-Nov-2002 : Changed CategoryDataset to TableDataset (DG); * 21-Mar-2003 : Incorporated HorizontalCategoryAxis3D, see bug id 685501 (DG); * 13-May-2003 : Merged some horizontal and vertical methods (DG); * 24-May-2003 : Added support for timeline in createHighLowChart (BK); * 07-Jul-2003 : Added createHistogram() method contributed by Jelai Wang (DG); * 27-Jul-2003 : Added createStackedAreaXYChart() method (RA); * 05-Aug-2003 : added new method createBoxAndWhiskerChart (DB); * 08-Sep-2003 : Changed ValueAxis API (DG); * 07-Oct-2003 : Added stepped area XY chart contributed by Matthias Rose (DG); * 06-Nov-2003 : Added createWaterfallChart() method (DG); * 20-Nov-2003 : Set rendering order for 3D bar charts to fix overlapping *               problems (DG); * 25-Nov-2003 : Added createWaferMapChart() method (DG); * 23-Dec-2003 : Renamed createPie3DChart() --> createPieChart3D for *               consistency (DG); * 20-Jan-2004 : Added createPolarChart() method (DG); * 28-Jan-2004 : Fixed bug (882890) with axis range in *               createStackedXYAreaChart() method (DG); * 25-Feb-2004 : Renamed XYToolTipGenerator --> XYItemLabelGenerator (DG); * 11-Mar-2004 : Updated for pie chart changes (DG); * 27-Apr-2004 : Added new createPieChart() method contributed by Benoit *               Xhenseval (see RFE 942195) (DG); * 11-May-2004 : Split StandardCategoryItemLabelGenerator *               --> StandardCategoryToolTipGenerator and *               StandardCategoryLabelGenerator (DG); * 06-Jan-2005 : Removed deprecated methods (DG); * 27-Jan-2005 : Added new constructor to LineAndShapeRenderer (DG); * 28-Feb-2005 : Added docs to createBubbleChart() method (DG); * 17-Mar-2005 : Added createRingPlot() method (DG); * 21-Apr-2005 : Replaced Insets with RectangleInsets (DG); * 29-Nov-2005 : Removed signal chart (DG); * ------------- JFREECHART 1.0.x --------------------------------------------- * 26-Jan-2006 : Corrected API docs for createScatterPlot() (DG); * 23-Aug-2006 : Modified createStackedXYAreaChart() to use *               StackedXYAreaRenderer2, because StackedXYAreaRenderer doesn't *               handle negative values (DG); * 27-Sep-2006 : Update createPieChart() method for deprecated code (DG); * 29-Nov-2006 : Update createXYBarChart() to use a time based tool tip *               generator is a DateAxis is requested (DG); * 17-Jan-2007 : Added createBoxAndWhiskerChart() method from patch 1603937 *               submitted by Darren Jung (DG); * 10-Jul-2007 : Added new methods to create pie charts with locale for *               section label and tool tip formatting (DG); * 14-Aug-2008 : Added ChartTheme facility (DG); * 23-Oct-2008 : Check for legacy theme in setChartTheme() and reset default *               bar painters (DG); * 20-Dec-2008 : In createStackedAreaChart(), set category margin to 0.0 (DG); * 02-Jul-2013 : Use ParamChecks class (DG); *  */	WITHOUT_CLASSIFICATION	0.9858192809205946	WITHOUT_CLASSIFICATION	0.014180719079405442	DEFECT
//get absolute value of log10 value	WITHOUT_CLASSIFICATION	0.9999934609477649	WITHOUT_CLASSIFICATION	6.5390522350859834E-6	DEFECT
// suppresses compiler warning	WITHOUT_CLASSIFICATION	0.9999963254915909	WITHOUT_CLASSIFICATION	3.674508408997751E-6	DEFECT
// suppresses compiler warning	WITHOUT_CLASSIFICATION	0.9999963254915909	WITHOUT_CLASSIFICATION	3.674508408997751E-6	DEFECT
// create the renderer...	WITHOUT_CLASSIFICATION	0.9999978750712388	WITHOUT_CLASSIFICATION	2.1249287611809705E-6	DEFECT
// create the plot...	WITHOUT_CLASSIFICATION	0.9999997037770557	WITHOUT_CLASSIFICATION	2.9622294435143574E-7	DEFECT
// create the chart...	WITHOUT_CLASSIFICATION	0.9999998935442438	WITHOUT_CLASSIFICATION	1.0645575630845078E-7	DEFECT
// forces recalculation of the axis range	WITHOUT_CLASSIFICATION	0.99999870407438	WITHOUT_CLASSIFICATION	1.2959256200745765E-6	DEFECT
// reduce the default margins	WITHOUT_CLASSIFICATION	0.9999997029184771	WITHOUT_CLASSIFICATION	2.970815228869094E-7	DEFECT
// override default	WITHOUT_CLASSIFICATION	0.9999991404320788	WITHOUT_CLASSIFICATION	8.595679211848834E-7	DEFECT
// get desired width and height from somewhere then...	WITHOUT_CLASSIFICATION	0.9999996475581598	WITHOUT_CLASSIFICATION	3.5244184019943603E-7	DEFECT
// change rendering order to ensure that bar overlapping is the // right way around	WITHOUT_CLASSIFICATION	0.9999904051234245	WITHOUT_CLASSIFICATION	9.59487657554175E-6	DEFECT
// change rendering order to ensure that bar overlapping is the // right way around	WITHOUT_CLASSIFICATION	0.9999904051234245	WITHOUT_CLASSIFICATION	9.59487657554175E-6	DEFECT
// no need to instantiate this    	WITHOUT_CLASSIFICATION	0.9999985721257145	WITHOUT_CLASSIFICATION	1.4278742854740821E-6	DEFECT
// seems to be the same...	WITHOUT_CLASSIFICATION	0.9999979138832675	WITHOUT_CLASSIFICATION	2.086116732485089E-6	DEFECT
/* =========================================================== * JFreeChart : a free chart library for the Java(tm) platform * =========================================================== * * (C) Copyright 2000-2013, by Object Refinery Limited and Contributors. * * Project Info:  http://www.jfree.org/jfreechart/index.html * * This library is free software; you can redistribute it and/or modify it * under the terms of the GNU Lesser General Public License as published by * the Free Software Foundation; either version 2.1 of the License, or * (at your option) any later version. * * This library is distributed in the hope that it will be useful, but * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public * License for more details. * * You should have received a copy of the GNU Lesser General Public * License along with this library; if not, write to the Free Software * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, * USA. * * [Oracle and Java are registered trademarks of Oracle and/or its affiliates.  * Other names may be trademarks of their respective owners.] * * ------------------- * ChartUtilities.java * ------------------- * (C) Copyright 2001-2013, by Object Refinery Limited and Contributors. * * Original Author:  David Gilbert (for Object Refinery Limited); * Contributor(s):   Wolfgang Irler; *                   Richard Atkinson; *                   Xavier Poinsard; * * Changes * ------- * 11-Dec-2001 : Version 1.  The JPEG method comes from Wolfgang Irler's *               JFreeChartServletDemo class (DG); * 23-Jan-2002 : Changed saveChartAsXXX() methods to pass IOExceptions back to *               caller (DG); * 26-Jun-2002 : Added image map methods (DG); * 05-Aug-2002 : Added writeBufferedImage methods *               Modified writeImageMap method to support flexible image *               maps (RA); * 26-Aug-2002 : Added saveChartAsJPEG and writeChartAsJPEG methods with info *               objects (RA); * 05-Sep-2002 : Added writeImageMap() method to support OverLIB *               - http://www.bosrup.com/web/overlib (RA); * 26-Sep-2002 : Fixed errors reported by Checkstyle (DG); * 17-Oct-2002 : Exposed JPEG quality setting and PNG compression level as *               parameters (DG); * 25-Oct-2002 : Fixed writeChartAsJPEG() empty method bug (DG); * 13-Mar-2003 : Updated writeImageMap method as suggested by Xavier Poinsard *               (see Feature Request 688079) (DG); * 12-Aug-2003 : Added support for custom image maps using *               ToolTipTagFragmentGenerator and URLTagFragmentGenerator (RA); * 02-Sep-2003 : Separated PNG encoding from writing chart to an *               OutputStream (RA); * 04-Dec-2003 : Chart draw() method modified to include anchor point (DG); * 20-Feb-2004 : Edited Javadocs and added argument checking (DG); * 05-Apr-2004 : Fixed problem with buffered image type (DG); * 01-Aug-2004 : Modified to use EncoderUtil for all image encoding (RA); * 02-Aug-2004 : Delegated image map related functionality to ImageMapUtil (RA); * 13-Jan-2005 : Renamed ImageMapUtil --> ImageMapUtilities, removed method *               writeImageMap(PrintWriter, String, ChartRenderingInfo) which *               exists in ImageMapUtilities (DG); * ------------- JFREECHART 1.0.x --------------------------------------------- * 06-Feb-2006 : API doc update (DG); * 19-Mar-2007 : Use try-finally to close output stream in saveChartAsXXX() *               methods (DG); * 10-Jan-2008 : Fix bug 1868251 - don't create image with transparency when *               saving to JPEG format (DG); * 02-Jul-2013 : Use ParamChecks class (DG); * */	WITHOUT_CLASSIFICATION	0.9999748226444786	WITHOUT_CLASSIFICATION	2.517735552137744E-5	DEFECT
/* shape filled = */	WITHOUT_CLASSIFICATION	0.9999929019486857	WITHOUT_CLASSIFICATION	7.098051314235964E-6	DEFECT
/* shape visible = */	WITHOUT_CLASSIFICATION	0.9999760759455188	WITHOUT_CLASSIFICATION	2.3924054481100194E-5	DEFECT
/* shape visible = */	WITHOUT_CLASSIFICATION	0.9999760759455188	WITHOUT_CLASSIFICATION	2.3924054481100194E-5	DEFECT
/* shape visible = */	WITHOUT_CLASSIFICATION	0.9999760759455188	WITHOUT_CLASSIFICATION	2.3924054481100194E-5	DEFECT
/* shape filled = */	WITHOUT_CLASSIFICATION	0.9999929019486857	WITHOUT_CLASSIFICATION	7.098051314235964E-6	DEFECT
/* shape filled = */	WITHOUT_CLASSIFICATION	0.9999929019486857	WITHOUT_CLASSIFICATION	7.098051314235964E-6	DEFECT
/* shape filled = */	WITHOUT_CLASSIFICATION	0.9999929019486857	WITHOUT_CLASSIFICATION	7.098051314235964E-6	DEFECT
/* shape filled = */	WITHOUT_CLASSIFICATION	0.9999929019486857	WITHOUT_CLASSIFICATION	7.098051314235964E-6	DEFECT
/* shape filled = */	WITHOUT_CLASSIFICATION	0.9999929019486857	WITHOUT_CLASSIFICATION	7.098051314235964E-6	DEFECT
/* shape outlined */	WITHOUT_CLASSIFICATION	0.999998110168411	WITHOUT_CLASSIFICATION	1.8898315890825129E-6	DEFECT
/* shape outlined = */	WITHOUT_CLASSIFICATION	0.9999950101403345	WITHOUT_CLASSIFICATION	4.989859665561039E-6	DEFECT
/* line visible */	WITHOUT_CLASSIFICATION	0.9999798059220097	WITHOUT_CLASSIFICATION	2.0194077990236444E-5	DEFECT
/* line visible */	WITHOUT_CLASSIFICATION	0.9999798059220097	WITHOUT_CLASSIFICATION	2.0194077990236444E-5	DEFECT
/* shape outlined = */	WITHOUT_CLASSIFICATION	0.9999950101403345	WITHOUT_CLASSIFICATION	4.989859665561039E-6	DEFECT
/* shape outlined = */	WITHOUT_CLASSIFICATION	0.9999950101403345	WITHOUT_CLASSIFICATION	4.989859665561039E-6	DEFECT
/* shape outlined = */	WITHOUT_CLASSIFICATION	0.9999950101403345	WITHOUT_CLASSIFICATION	4.989859665561039E-6	DEFECT
/* line visible = */	WITHOUT_CLASSIFICATION	0.9999806599178938	WITHOUT_CLASSIFICATION	1.934008210635375E-5	DEFECT
/* line visible = */	WITHOUT_CLASSIFICATION	0.9999806599178938	WITHOUT_CLASSIFICATION	1.934008210635375E-5	DEFECT
/* line visible = */	WITHOUT_CLASSIFICATION	0.9999806599178938	WITHOUT_CLASSIFICATION	1.934008210635375E-5	DEFECT
// positiveItemLabelPosition;	WITHOUT_CLASSIFICATION	0.9999992745529801	WITHOUT_CLASSIFICATION	7.254470199149031E-7	DEFECT
// work out if scaling is required...	WITHOUT_CLASSIFICATION	0.9999631306951998	WITHOUT_CLASSIFICATION	3.686930480021897E-5	DEFECT
/* shape outlined = */	WITHOUT_CLASSIFICATION	0.9999950101403345	WITHOUT_CLASSIFICATION	4.989859665561039E-6	DEFECT
/* line visible = */	WITHOUT_CLASSIFICATION	0.9999806599178938	WITHOUT_CLASSIFICATION	1.934008210635375E-5	DEFECT
// negativeItemLabelPositionList;	WITHOUT_CLASSIFICATION	0.9999995634342302	WITHOUT_CLASSIFICATION	4.3656576969290625E-7	DEFECT
// ----------------- // --- Constants --- // -----------------	WITHOUT_CLASSIFICATION	0.9999978905150557	WITHOUT_CLASSIFICATION	2.1094849443329677E-6	DEFECT
// ------------------------ // --- Member Variables --- // ------------------------	WITHOUT_CLASSIFICATION	0.9999989592667802	WITHOUT_CLASSIFICATION	1.0407332197992016E-6	DEFECT
// -------------------- // --- Constructors --- // --------------------	WITHOUT_CLASSIFICATION	0.9999977601428623	WITHOUT_CLASSIFICATION	2.2398571376496524E-6	DEFECT
// -------------------------- // --- ChartPanel Methods --- // --------------------------	WITHOUT_CLASSIFICATION	0.999998369688715	WITHOUT_CLASSIFICATION	1.6303112849622944E-6	DEFECT
// ---------------------- // --- Public Methods --- // ----------------------	WITHOUT_CLASSIFICATION	0.9999878379112742	WITHOUT_CLASSIFICATION	1.2162088725689337E-5	DEFECT
// ----------------------- // --- Private Methods --- // -----------------------	WITHOUT_CLASSIFICATION	0.999990336507686	WITHOUT_CLASSIFICATION	9.663492314054031E-6	DEFECT
// do nothing at all	WITHOUT_CLASSIFICATION	0.9999797520597502	WITHOUT_CLASSIFICATION	2.024794024974527E-5	DEFECT
// now process the plot if there is one	WITHOUT_CLASSIFICATION	0.9999995398381629	WITHOUT_CLASSIFICATION	4.6016183715093334E-7	DEFECT
// process all domain axes	WITHOUT_CLASSIFICATION	0.9999959772492266	WITHOUT_CLASSIFICATION	4.022750773427626E-6	DEFECT
// process all domain axes	WITHOUT_CLASSIFICATION	0.9999959772492266	WITHOUT_CLASSIFICATION	4.022750773427626E-6	DEFECT
// process all range axes	WITHOUT_CLASSIFICATION	0.999995860898913	WITHOUT_CLASSIFICATION	4.1391010869816915E-6	DEFECT
// process all range axes	WITHOUT_CLASSIFICATION	0.999995860898913	WITHOUT_CLASSIFICATION	4.1391010869816915E-6	DEFECT
// process all renderers	WITHOUT_CLASSIFICATION	0.9999962243174237	WITHOUT_CLASSIFICATION	3.7756825762629076E-6	DEFECT
// process all renderers	WITHOUT_CLASSIFICATION	0.9999962243174237	WITHOUT_CLASSIFICATION	3.7756825762629076E-6	DEFECT
// process all annotations	WITHOUT_CLASSIFICATION	0.9999949562643415	WITHOUT_CLASSIFICATION	5.043735658460226E-6	DEFECT
// BarRenderer	WITHOUT_CLASSIFICATION	0.9999890086425506	WITHOUT_CLASSIFICATION	1.0991357449390813E-5	DEFECT
// BarRenderer3D	WITHOUT_CLASSIFICATION	0.999978533133681	WITHOUT_CLASSIFICATION	2.146686631897827E-5	DEFECT
// LineRenderer3D	WITHOUT_CLASSIFICATION	0.9999930950218979	WITHOUT_CLASSIFICATION	6.9049781020720685E-6	DEFECT
//  StatisticalBarRenderer	WITHOUT_CLASSIFICATION	0.9999965733945119	WITHOUT_CLASSIFICATION	3.4266054881149025E-6	DEFECT
// MinMaxCategoryRenderer	WITHOUT_CLASSIFICATION	0.9999931142837818	WITHOUT_CLASSIFICATION	6.885716218294478E-6	DEFECT
// handle GradientPaint as a special case	WITHOUT_CLASSIFICATION	0.9999998078385453	WITHOUT_CLASSIFICATION	1.921614548052705E-7	DEFECT
// create storage for listeners...	WITHOUT_CLASSIFICATION	0.9999986364777312	WITHOUT_CLASSIFICATION	1.363522268828485E-6	DEFECT
// add the chart title, if one has been specified...	WITHOUT_CLASSIFICATION	0.9999998922716247	WITHOUT_CLASSIFICATION	1.0772837535580608E-7	DEFECT
// this fires a ChartChangeEvent	WITHOUT_CLASSIFICATION	0.9999786663261563	WITHOUT_CLASSIFICATION	2.133367384372816E-5	DEFECT
// if the flag is being set to true, there may be queued up changes...	WITHOUT_CLASSIFICATION	0.9999991882065183	WITHOUT_CLASSIFICATION	8.117934816587276E-7	DEFECT
// register as a listener with sub-components...	WITHOUT_CLASSIFICATION	0.9999998056569791	WITHOUT_CLASSIFICATION	1.9434302094195098E-7	DEFECT
// seem to be the same...	WITHOUT_CLASSIFICATION	0.9999990182381602	WITHOUT_CLASSIFICATION	9.817618397672996E-7	DEFECT
// draw the label	WITHOUT_CLASSIFICATION	0.9999990472070891	WITHOUT_CLASSIFICATION	9.527929110157683E-7	DEFECT
// clear the section attributes so that the theme's DrawingSupplier // will be used	WITHOUT_CLASSIFICATION	0.9999999421296366	WITHOUT_CLASSIFICATION	5.787036335147862E-8	DEFECT
// for efficiency, we just use the first, last and middle items to // compute a hashCode...	WITHOUT_CLASSIFICATION	0.9999999948439734	WITHOUT_CLASSIFICATION	5.156026573350443E-9	DEFECT
// for efficiency, we just use the first, last and middle items to // compute a hashCode...	WITHOUT_CLASSIFICATION	0.9999999948439734	WITHOUT_CLASSIFICATION	5.156026573350443E-9	DEFECT
// default is to notify listeners when the // chart changes	WITHOUT_CLASSIFICATION	0.9999982923429299	WITHOUT_CLASSIFICATION	1.7076570700572267E-6	DEFECT
// added the following hint because of  // http://stackoverflow.com/questions/7785082/	WITHOUT_CLASSIFICATION	0.9999991796656682	WITHOUT_CLASSIFICATION	8.203343318370693E-7	DEFECT
// record the chart area, if info is requested...	WITHOUT_CLASSIFICATION	0.9999997408694249	WITHOUT_CLASSIFICATION	2.5913057517824986E-7	DEFECT
// ensure no drawing occurs outside chart area...	WITHOUT_CLASSIFICATION	0.9999999788139555	WITHOUT_CLASSIFICATION	2.11860444734486E-8	DEFECT
// draw the chart background...	WITHOUT_CLASSIFICATION	0.999999665132725	WITHOUT_CLASSIFICATION	3.3486727501709127E-7	DEFECT
// draw the title and subtitles...	WITHOUT_CLASSIFICATION	0.9999991405213706	WITHOUT_CLASSIFICATION	8.59478629416251E-7	DEFECT
// draw the plot (axes and data visualisation)	WITHOUT_CLASSIFICATION	0.9999988002789535	WITHOUT_CLASSIFICATION	1.1997210465243274E-6	DEFECT
// private boolean borderVisible; // private transient Stroke borderStroke; // private transient Paint borderPaint;	WITHOUT_CLASSIFICATION	0.9999962196054941	WITHOUT_CLASSIFICATION	3.7803945059662678E-6	DEFECT
// get a locale-specific resource bundle...	WITHOUT_CLASSIFICATION	0.9999997107533387	WITHOUT_CLASSIFICATION	2.8924666135169283E-7	DEFECT
// load only when required	WITHOUT_CLASSIFICATION	0.999967345238265	WITHOUT_CLASSIFICATION	3.265476173503749E-5	DEFECT
// use ImageIcon because it waits for the image to load...	WITHOUT_CLASSIFICATION	0.999999924931516	WITHOUT_CLASSIFICATION	7.50684839973567E-8	DEFECT
// don't zoom unless the mouse pointer is in the plot's data area	WITHOUT_CLASSIFICATION	0.9999904474270639	WITHOUT_CLASSIFICATION	9.552572936052607E-6	DEFECT
// do not notify while zooming each axis	WITHOUT_CLASSIFICATION	0.999996456800739	WITHOUT_CLASSIFICATION	3.543199260923063E-6	DEFECT
// this generates the change event too	WITHOUT_CLASSIFICATION	0.9999991139711164	WITHOUT_CLASSIFICATION	8.860288835236202E-7	DEFECT
// if we don't have at least 2 (x, y) coordinates, just return	WITHOUT_CLASSIFICATION	0.9999889922532263	WITHOUT_CLASSIFICATION	1.1007746773623055E-5	DEFECT
// now try to reject equality	WITHOUT_CLASSIFICATION	0.999997065509339	WITHOUT_CLASSIFICATION	2.9344906610761694E-6	DEFECT
// now try to reject equality	WITHOUT_CLASSIFICATION	0.999997065509339	WITHOUT_CLASSIFICATION	2.9344906610761694E-6	DEFECT
// seem to be the same	WITHOUT_CLASSIFICATION	0.9999984905204196	WITHOUT_CLASSIFICATION	1.5094795805162536E-6	DEFECT
// seem to be the same	WITHOUT_CLASSIFICATION	0.9999984905204196	WITHOUT_CLASSIFICATION	1.5094795805162536E-6	DEFECT
// now try to reject equality...	WITHOUT_CLASSIFICATION	0.9999976762990711	WITHOUT_CLASSIFICATION	2.323700928925892E-6	DEFECT
// now try to reject equality...	WITHOUT_CLASSIFICATION	0.9999976762990711	WITHOUT_CLASSIFICATION	2.323700928925892E-6	DEFECT
/* Rectangle2D hotspot = */	WITHOUT_CLASSIFICATION	0.99998046931334	WITHOUT_CLASSIFICATION	1.9530686660104788E-5	DEFECT
// seems to be the same...	WITHOUT_CLASSIFICATION	0.9999979138832675	WITHOUT_CLASSIFICATION	2.086116732485089E-6	DEFECT
// FIXME //SerialUtilities.writeImage(this.image, stream);	WITHOUT_CLASSIFICATION	0.9763574541310326	WITHOUT_CLASSIFICATION	0.023642545868967413	DEFECT
// FIXME //this.image = SerialUtilities.readImage(stream);	WITHOUT_CLASSIFICATION	0.8919945968448452	WITHOUT_CLASSIFICATION	0.10800540315515482	DEFECT
// simple case	WITHOUT_CLASSIFICATION	0.9999990443314702	WITHOUT_CLASSIFICATION	9.55668529755141E-7	DEFECT
// by default the outline and background won't be visible	WITHOUT_CLASSIFICATION	0.9999741226388488	WITHOUT_CLASSIFICATION	2.5877361151327116E-5	DEFECT
// now try to reject equality	WITHOUT_CLASSIFICATION	0.999997065509339	WITHOUT_CLASSIFICATION	2.9344906610761694E-6	DEFECT
// create plot ...	WITHOUT_CLASSIFICATION	0.9999996250194054	WITHOUT_CLASSIFICATION	3.74980594500816E-7	DEFECT
// add a second dataset and renderer...	WITHOUT_CLASSIFICATION	0.9999990017526607	WITHOUT_CLASSIFICATION	9.982473393481313E-7	DEFECT
// return a new chart containing the overlaid plot...	WITHOUT_CLASSIFICATION	0.9999998041416054	WITHOUT_CLASSIFICATION	1.9585839469123847E-7	DEFECT
// create dataset 1...	WITHOUT_CLASSIFICATION	0.9999994661340866	WITHOUT_CLASSIFICATION	5.338659133405712E-7	DEFECT
// seem to be the same	WITHOUT_CLASSIFICATION	0.9999984905204196	WITHOUT_CLASSIFICATION	1.5094795805162536E-6	DEFECT
// now try to reject equality...	WITHOUT_CLASSIFICATION	0.9999976762990711	WITHOUT_CLASSIFICATION	2.323700928925892E-6	DEFECT
// seems to be the same...	WITHOUT_CLASSIFICATION	0.9999979138832675	WITHOUT_CLASSIFICATION	2.086116732485089E-6	DEFECT
// baseNegativeItemLabelPosition;	WITHOUT_CLASSIFICATION	0.999999740321571	WITHOUT_CLASSIFICATION	2.596784289864805E-7	DEFECT
// here we change the AffineTransform so we can draw the annotation // to a larger area and scale it down into the display area // afterwards, the original transform is restored	WITHOUT_CLASSIFICATION	0.9999999391654004	WITHOUT_CLASSIFICATION	6.083459953848114E-8	DEFECT
// compute transform matrix elements via sample points. Assume no // rotation or shear.	WITHOUT_CLASSIFICATION	0.9999998330505564	WITHOUT_CLASSIFICATION	1.669494436717975E-7	DEFECT
//  create transform & transform shape	WITHOUT_CLASSIFICATION	0.9999983306450702	WITHOUT_CLASSIFICATION	1.6693549298128322E-6	DEFECT
//SerialUtilities.writeImage(this.image, stream);	WITHOUT_CLASSIFICATION	0.9999984202522255	WITHOUT_CLASSIFICATION	1.5797477745155004E-6	DEFECT
//this.image = SerialUtilities.readImage(stream);	WITHOUT_CLASSIFICATION	0.9999927512948433	WITHOUT_CLASSIFICATION	7.248705156672134E-6	DEFECT
// if the axis is not visible, don't draw it...	WITHOUT_CLASSIFICATION	0.9999528061427359	WITHOUT_CLASSIFICATION	4.7193857264241684E-5	DEFECT
// ensure the autorange is at least <minRange> in size...	WITHOUT_CLASSIFICATION	0.9999982542224958	WITHOUT_CLASSIFICATION	1.745777504130075E-6	DEFECT
// apply the margins - these should apply to the exponent range	WITHOUT_CLASSIFICATION	0.9999989149912563	WITHOUT_CLASSIFICATION	1.0850087436852306E-6	DEFECT
// even though the axis is not visible, we need ticks for the // gridlines...	WITHOUT_CLASSIFICATION	0.9999957202013788	WITHOUT_CLASSIFICATION	4.279798621169025E-6	DEFECT
// add minor ticks (for gridlines)	WITHOUT_CLASSIFICATION	0.9999992330980015	WITHOUT_CLASSIFICATION	7.669019985080885E-7	DEFECT
// select a tick unit that is the next one bigger than the current // (log) range divided by 50	WITHOUT_CLASSIFICATION	0.9999954253302454	WITHOUT_CLASSIFICATION	4.574669754555899E-6	DEFECT
// while the tick labels overlap and there are more tick sizes available, // choose the next bigger label	WITHOUT_CLASSIFICATION	0.9999996129764234	WITHOUT_CLASSIFICATION	3.870235765418076E-7	DEFECT
// while the tick labels overlap and there are more tick sizes available, // choose the next bigger label	WITHOUT_CLASSIFICATION	0.9999996129764234	WITHOUT_CLASSIFICATION	3.870235765418076E-7	DEFECT
// what is the available space for one unit?	WITHOUT_CLASSIFICATION	0.9999875180813035	WITHOUT_CLASSIFICATION	1.24819186964819E-5	DEFECT
// what is the available space for one unit?	WITHOUT_CLASSIFICATION	0.9999875180813035	WITHOUT_CLASSIFICATION	1.24819186964819E-5	DEFECT
// there are no more candidates	WITHOUT_CLASSIFICATION	0.9999996226002736	WITHOUT_CLASSIFICATION	3.773997264464804E-7	DEFECT
// there are no more candidates	WITHOUT_CLASSIFICATION	0.9999996226002736	WITHOUT_CLASSIFICATION	3.773997264464804E-7	DEFECT
// all tick labels have the same width (equal to the height of the // font)...	WITHOUT_CLASSIFICATION	0.9999997739394568	WITHOUT_CLASSIFICATION	2.260605430929306E-7	DEFECT
// look at lower and upper bounds...	WITHOUT_CLASSIFICATION	0.9999992723565939	WITHOUT_CLASSIFICATION	7.276434061761116E-7	DEFECT
// no need to create entity if we can't save it anyways...	WITHOUT_CLASSIFICATION	0.9999998098345029	WITHOUT_CLASSIFICATION	1.901654971784661E-7	DEFECT
// it is unlikely that 'state' will be null, but check anyway...	WITHOUT_CLASSIFICATION	0.999721575862774	WITHOUT_CLASSIFICATION	2.784241372259955E-4	DEFECT
// It's up to the plot which clones up to restore the correct references	WITHOUT_CLASSIFICATION	0.999999059481382	WITHOUT_CLASSIFICATION	9.405186180386611E-7	DEFECT
// draw the category labels and axis label	WITHOUT_CLASSIFICATION	0.9999987284186628	WITHOUT_CLASSIFICATION	1.2715813371807577E-6	DEFECT
// regular number axis	WITHOUT_CLASSIFICATION	0.9999987981682095	WITHOUT_CLASSIFICATION	1.2018317905276047E-6	DEFECT
// regular number axis	WITHOUT_CLASSIFICATION	0.9999987981682095	WITHOUT_CLASSIFICATION	1.2018317905276047E-6	DEFECT
// displayStart > displayEnd, need to handle split	WITHOUT_CLASSIFICATION	0.999999874562537	WITHOUT_CLASSIFICATION	1.2543746289177894E-7	DEFECT
// displayStart > displayEnd, need to handle split	WITHOUT_CLASSIFICATION	0.999999874562537	WITHOUT_CLASSIFICATION	1.2543746289177894E-7	DEFECT
// create a new space object if one wasn't supplied...	WITHOUT_CLASSIFICATION	0.9999999036811881	WITHOUT_CLASSIFICATION	9.63188120504918E-8	DEFECT
// if the axis is not visible, no additional space is required...	WITHOUT_CLASSIFICATION	0.9999970197208005	WITHOUT_CLASSIFICATION	2.980279199569509E-6	DEFECT
// if the axis has a fixed dimension, return it...	WITHOUT_CLASSIFICATION	0.9999897749396781	WITHOUT_CLASSIFICATION	1.0225060321929695E-5	DEFECT
// get the axis label size and update the space object...	WITHOUT_CLASSIFICATION	0.9999999021803433	WITHOUT_CLASSIFICATION	9.781965664750058E-8	DEFECT
//negative values not allowed	WITHOUT_CLASSIFICATION	0.9999176258675747	WITHOUT_CLASSIFICATION	8.237413242523336E-5	DEFECT
// no plot, no data.	WITHOUT_CLASSIFICATION	0.9999996200168844	WITHOUT_CLASSIFICATION	3.799831156317515E-7	DEFECT
// no plot, no data	WITHOUT_CLASSIFICATION	0.9999995408640985	WITHOUT_CLASSIFICATION	4.591359016108761E-7	DEFECT
// if the axis is not visible, no additional space is required...	WITHOUT_CLASSIFICATION	0.9999970197208005	WITHOUT_CLASSIFICATION	2.980279199569509E-6	DEFECT
// if the axis has a fixed dimension, return it...	WITHOUT_CLASSIFICATION	0.9999897749396781	WITHOUT_CLASSIFICATION	1.0225060321929695E-5	DEFECT
// get the axis label size and update the space object...	WITHOUT_CLASSIFICATION	0.9999999021803433	WITHOUT_CLASSIFICATION	9.781965664750058E-8	DEFECT
// baseCreateEntities;	WITHOUT_CLASSIFICATION	0.9999993167347143	WITHOUT_CLASSIFICATION	6.832652857954715E-7	DEFECT
// add space for the outer tick labels, if any...	WITHOUT_CLASSIFICATION	0.9999997704608894	WITHOUT_CLASSIFICATION	2.2953911052385478E-7	DEFECT
// draw minor tick marks	WITHOUT_CLASSIFICATION	0.9999981138771962	WITHOUT_CLASSIFICATION	1.8861228038519526E-6	DEFECT
// work out the initial gap	WITHOUT_CLASSIFICATION	0.9999853291817558	WITHOUT_CLASSIFICATION	1.4670818244243447E-5	DEFECT
// this is the last period, but it is only partially visible // so check that the label will fit before displaying it...	WITHOUT_CLASSIFICATION	0.9998609976774123	WITHOUT_CLASSIFICATION	1.3900232258759425E-4	DEFECT
// this is the first period, but it is only partially visible // so check that the label will fit before displaying it...	WITHOUT_CLASSIFICATION	0.9999226291068478	WITHOUT_CLASSIFICATION	7.737089315220458E-5	DEFECT
// work out the trailing gap	WITHOUT_CLASSIFICATION	0.9999696087257833	WITHOUT_CLASSIFICATION	3.039127421671631E-5	DEFECT
// draw the arrow...	WITHOUT_CLASSIFICATION	0.9999948059333417	WITHOUT_CLASSIFICATION	5.1940666583726665E-6	DEFECT
// need to work out the space used by the tick labels... // so we can update the cursor...	WITHOUT_CLASSIFICATION	0.999999606878771	WITHOUT_CLASSIFICATION	3.9312122898693126E-7	DEFECT
// calculate the max size of the tick labels (if visible)...	WITHOUT_CLASSIFICATION	0.9999967756323845	WITHOUT_CLASSIFICATION	3.22436761535044E-6	DEFECT
// if autoRange is true, then the current range is irrelevant	WITHOUT_CLASSIFICATION	0.999984838271737	WITHOUT_CLASSIFICATION	1.5161728262949822E-5	DEFECT
//setup number formatter obj	WITHOUT_CLASSIFICATION	0.9999836459545197	WITHOUT_CLASSIFICATION	1.635404548034103E-5	DEFECT
//setup number formatter obj	WITHOUT_CLASSIFICATION	0.9999836459545197	WITHOUT_CLASSIFICATION	1.635404548034103E-5	DEFECT
// if negative then set flag and make positive	WITHOUT_CLASSIFICATION	0.9999952784586406	WITHOUT_CLASSIFICATION	4.721541359536625E-6	DEFECT
// if negative then set flag and make positive	WITHOUT_CLASSIFICATION	0.9999952784586406	WITHOUT_CLASSIFICATION	4.721541359536625E-6	DEFECT
//return value; negate if original value was negative:	WITHOUT_CLASSIFICATION	0.9999986057135936	WITHOUT_CLASSIFICATION	1.3942864064812818E-6	DEFECT
//invert adjustLog10	WITHOUT_CLASSIFICATION	0.999992989994166	WITHOUT_CLASSIFICATION	7.010005833961783E-6	DEFECT
//calculate floor using negative value:	WITHOUT_CLASSIFICATION	0.9999707800718353	WITHOUT_CLASSIFICATION	2.921992816483788E-5	DEFECT
//calculate power using positive value; then negate	WITHOUT_CLASSIFICATION	0.999972112299302	WITHOUT_CLASSIFICATION	2.788770069795986E-5	DEFECT
//negative values are allowed	WITHOUT_CLASSIFICATION	0.9999711898462956	WITHOUT_CLASSIFICATION	2.8810153704360122E-5	DEFECT
//calculate ceil using negative value:	WITHOUT_CLASSIFICATION	0.9999242856464418	WITHOUT_CLASSIFICATION	7.571435355830675E-5	DEFECT
// ensure the autorange is at least <minRange> in size...	WITHOUT_CLASSIFICATION	0.9999982542224958	WITHOUT_CLASSIFICATION	1.745777504130075E-6	DEFECT
// legendTextPaint	WITHOUT_CLASSIFICATION	0.9999989412646308	WITHOUT_CLASSIFICATION	1.0587353691901763E-6	DEFECT
//setup for "1e#"-style tick labels or regular // numeric tick labels, depending on flag:	WITHOUT_CLASSIFICATION	0.9999968720716392	WITHOUT_CLASSIFICATION	3.127928360714473E-6	DEFECT
// if < 10 then //increase so 0 translates to 0	WITHOUT_CLASSIFICATION	0.9999992232444143	WITHOUT_CLASSIFICATION	7.767555856897503E-7	DEFECT
//negative values are allowed //parameter value is > 10 // The Math.log() function is based on e not 10.	WITHOUT_CLASSIFICATION	0.9999137548608822	WITHOUT_CLASSIFICATION	8.624513911784764E-5	DEFECT
//parameter value is < -10 //calculate log using positive value:	WITHOUT_CLASSIFICATION	0.9998479968562176	WITHOUT_CLASSIFICATION	1.5200314378243634E-4	DEFECT
//parameter value is -10 > val < 10 //use as-is	WITHOUT_CLASSIFICATION	0.9999849613828163	WITHOUT_CLASSIFICATION	1.5038617183655642E-5	DEFECT
//parameter value is -10 > val < 10 //use as-is	WITHOUT_CLASSIFICATION	0.9999849613828163	WITHOUT_CLASSIFICATION	1.5038617183655642E-5	DEFECT
//negative values not allowed //parameter value is > 0 // The Math.log() function is based on e not 10.	WITHOUT_CLASSIFICATION	0.9999018705846723	WITHOUT_CLASSIFICATION	9.81294153277399E-5	DEFECT
//parameter value is <= 0 //use as-is	WITHOUT_CLASSIFICATION	0.9999846894576269	WITHOUT_CLASSIFICATION	1.5310542373108418E-5	DEFECT
//parameter value is > 10 // The Math.log() function is based on e not 10.	WITHOUT_CLASSIFICATION	0.9999752070316721	WITHOUT_CLASSIFICATION	2.4792968327902006E-5	DEFECT
//parameter value is > 0 // The Math.log() function is based on e not 10.	WITHOUT_CLASSIFICATION	0.9999793036145925	WITHOUT_CLASSIFICATION	2.0696385407445016E-5	DEFECT
//no real data present	WITHOUT_CLASSIFICATION	0.9999985654227987	WITHOUT_CLASSIFICATION	1.434577201256305E-6	DEFECT
//get lower bound value	WITHOUT_CLASSIFICATION	0.9999861181840229	WITHOUT_CLASSIFICATION	1.388181597705569E-5	DEFECT
//actual data is present //get lower bound value	WITHOUT_CLASSIFICATION	0.99999234201711	WITHOUT_CLASSIFICATION	7.657982889996548E-6	DEFECT
//strict flag set, allow-negatives not set and values <= 0	WITHOUT_CLASSIFICATION	0.9999944501317644	WITHOUT_CLASSIFICATION	5.549868235528824E-6	DEFECT
//apply lower margin by decreasing lower bound:	WITHOUT_CLASSIFICATION	0.9999965291248506	WITHOUT_CLASSIFICATION	3.4708751495222086E-6	DEFECT
//lower bound and margin OK; get log10 of lower bound	WITHOUT_CLASSIFICATION	0.9999979692915547	WITHOUT_CLASSIFICATION	2.030708445328582E-6	DEFECT
//get absolute value of log10 value	WITHOUT_CLASSIFICATION	0.9999934609477649	WITHOUT_CLASSIFICATION	6.5390522350859834E-6	DEFECT
//need to account for case where upper==0.0	WITHOUT_CLASSIFICATION	0.9999982933017638	WITHOUT_CLASSIFICATION	1.7066982362178682E-6	DEFECT
//setup flag based on bounds values	WITHOUT_CLASSIFICATION	0.9999929980893447	WITHOUT_CLASSIFICATION	7.001910655379235E-6	DEFECT
//get lower bound value:	WITHOUT_CLASSIFICATION	0.999983115642644	WITHOUT_CLASSIFICATION	1.6884357355994266E-5	DEFECT
//get upper bound value	WITHOUT_CLASSIFICATION	0.9999904200486406	WITHOUT_CLASSIFICATION	9.579951359309727E-6	DEFECT
//get log10 version of upper bound and round to integer:	WITHOUT_CLASSIFICATION	0.9999993394641375	WITHOUT_CLASSIFICATION	6.605358624843486E-7	DEFECT
//for each power of 10 value; create ten ticks	WITHOUT_CLASSIFICATION	0.999999676622303	WITHOUT_CLASSIFICATION	3.2337769695818594E-7	DEFECT
//for each tick to be displayed	WITHOUT_CLASSIFICATION	0.9999991659728443	WITHOUT_CLASSIFICATION	8.340271555950094E-7	DEFECT
//small log values in use; create numeric value for tick	WITHOUT_CLASSIFICATION	0.9998792134021385	WITHOUT_CLASSIFICATION	1.2078659786146147E-4	DEFECT
//create tick label (force use of fmt obj):	WITHOUT_CLASSIFICATION	0.9999993653200762	WITHOUT_CLASSIFICATION	6.346799237924233E-7	DEFECT
//no tick label to be shown	WITHOUT_CLASSIFICATION	0.9999832518481773	WITHOUT_CLASSIFICATION	1.674815182279417E-5	DEFECT
//create tick label:	WITHOUT_CLASSIFICATION	0.9999943576722164	WITHOUT_CLASSIFICATION	5.6423277835995425E-6	DEFECT
//get lower bound value:	WITHOUT_CLASSIFICATION	0.999983115642644	WITHOUT_CLASSIFICATION	1.6884357355994266E-5	DEFECT
//if autorange still below minimum then adjust by 1% // (can be needed when minRange is very small):	WITHOUT_CLASSIFICATION	0.999989599678256	WITHOUT_CLASSIFICATION	1.0400321743991332E-5	DEFECT
//get upper bound value	WITHOUT_CLASSIFICATION	0.9999904200486406	WITHOUT_CLASSIFICATION	9.579951359309727E-6	DEFECT
//if small log values and lower bound value too small // then set to a small value (don't allow <= 0):	WITHOUT_CLASSIFICATION	0.9999885277998343	WITHOUT_CLASSIFICATION	1.1472200165788522E-5	DEFECT
//get log10 version of lower bound and round to integer:	WITHOUT_CLASSIFICATION	0.9999994349109967	WITHOUT_CLASSIFICATION	5.650890032134969E-7	DEFECT
//get log10 version of upper bound and round to integer:	WITHOUT_CLASSIFICATION	0.9999993394641375	WITHOUT_CLASSIFICATION	6.605358624843486E-7	DEFECT
//for each tick to be displayed	WITHOUT_CLASSIFICATION	0.9999991659728443	WITHOUT_CLASSIFICATION	8.340271555950094E-7	DEFECT
//only 1 power of 10 value, it's > 0 and its resulting // tick value will be larger than lower bound of data //decrement to generate more ticks	WITHOUT_CLASSIFICATION	0.9999985921615948	WITHOUT_CLASSIFICATION	1.407838405198735E-6	DEFECT
//showing "1e#"-style ticks or negative exponent // generating tick value between 0 & 1; show fewer	WITHOUT_CLASSIFICATION	0.9999918345261833	WITHOUT_CLASSIFICATION	8.165473816656006E-6	DEFECT
//tick value not between 0 & 1 //show tick label if it's the first or last in // the set, or if it's 1-5; beyond that show // fewer as the values get larger:	WITHOUT_CLASSIFICATION	0.9999987918624126	WITHOUT_CLASSIFICATION	1.2081375873773288E-6	DEFECT
//not small log values in use; allow for values <= 0 //if did zero tick last iter then //decrement to do 1.0 tick now //calculate power-of-ten value for tick:	WITHOUT_CLASSIFICATION	0.9999922604692747	WITHOUT_CLASSIFICATION	7.739530725398824E-6	DEFECT
// did not do zero tick last iteration	WITHOUT_CLASSIFICATION	0.999997383770357	WITHOUT_CLASSIFICATION	2.6162296431016733E-6	DEFECT
//tick value is 1.0 and 0.0 is within data range //set tick value to zero //indicate zero tick	WITHOUT_CLASSIFICATION	0.9999932533295283	WITHOUT_CLASSIFICATION	6.746670471835969E-6	DEFECT
// if past highest data value then exit // method	WITHOUT_CLASSIFICATION	0.9999841681001791	WITHOUT_CLASSIFICATION	1.5831899820921443E-5	DEFECT
//tick value not below lowest data value	WITHOUT_CLASSIFICATION	0.9999785110531549	WITHOUT_CLASSIFICATION	2.1488946845072557E-5	DEFECT
//for each tick with a label to be displayed	WITHOUT_CLASSIFICATION	0.9999988830747264	WITHOUT_CLASSIFICATION	1.116925273702458E-6	DEFECT
//small log values in use	WITHOUT_CLASSIFICATION	0.9998168739806303	WITHOUT_CLASSIFICATION	1.8312601936950706E-4	DEFECT
//first tick of group; create label text	WITHOUT_CLASSIFICATION	0.9999997724008047	WITHOUT_CLASSIFICATION	2.2759919537742795E-7	DEFECT
//not "log10"-type label	WITHOUT_CLASSIFICATION	0.9999868444972132	WITHOUT_CLASSIFICATION	1.3155502786684482E-5	DEFECT
//if small log values and lower bound value too small // then set to a small value (don't allow <= 0):	WITHOUT_CLASSIFICATION	0.9999885277998343	WITHOUT_CLASSIFICATION	1.1472200165788522E-5	DEFECT
//only 1 power of 10 value, it's > 0 and its resulting // tick value will be larger than lower bound of data //decrement to generate more ticks	WITHOUT_CLASSIFICATION	0.9999985921615948	WITHOUT_CLASSIFICATION	1.407838405198735E-6	DEFECT
//tick value not below lowest data value	WITHOUT_CLASSIFICATION	0.9999785110531549	WITHOUT_CLASSIFICATION	2.1488946845072557E-5	DEFECT
// ITEM_LABEL_PAINT	WITHOUT_CLASSIFICATION	0.9999897124564926	WITHOUT_CLASSIFICATION	1.0287543507344055E-5	DEFECT
//if flag then //create "log10"-type label	WITHOUT_CLASSIFICATION	0.9999953584571124	WITHOUT_CLASSIFICATION	4.64154288756756E-6	DEFECT
//if flag then //create "1e#"-type label	WITHOUT_CLASSIFICATION	0.9999933428302689	WITHOUT_CLASSIFICATION	6.657169731147283E-6	DEFECT
//not "1e#"-type label // if positive exponent then // make integer	WITHOUT_CLASSIFICATION	0.9999988354929746	WITHOUT_CLASSIFICATION	1.1645070253839643E-6	DEFECT
//negative exponent; create fractional value //set exact number of fractional digits to // be shown:	WITHOUT_CLASSIFICATION	0.9999999753899214	WITHOUT_CLASSIFICATION	2.4610078617425415E-8	DEFECT
//not small log values in use; allow for values <= 0 //if did zero tick last iter then	WITHOUT_CLASSIFICATION	0.999996406576207	WITHOUT_CLASSIFICATION	3.593423793012208E-6	DEFECT
//decrement to do 1.0 tick now	WITHOUT_CLASSIFICATION	0.9999855317212933	WITHOUT_CLASSIFICATION	1.4468278706632305E-5	DEFECT
//first tick of group // did not do zero tick last // iteration	WITHOUT_CLASSIFICATION	0.9999997844757377	WITHOUT_CLASSIFICATION	2.1552426239736178E-7	DEFECT
// not first or last tick on graph and value // is 1.0 //change value to 0.0 //indicate zero tick //create label for tick	WITHOUT_CLASSIFICATION	0.9999996490137733	WITHOUT_CLASSIFICATION	3.5098622680407325E-7	DEFECT
//first or last tick on graph or value is 1.0 //create label for tick:	WITHOUT_CLASSIFICATION	0.999988288184196	WITHOUT_CLASSIFICATION	1.1711815803986377E-5	DEFECT
//create "log10"-type label	WITHOUT_CLASSIFICATION	0.9999971024900997	WITHOUT_CLASSIFICATION	2.897509900438722E-6	DEFECT
//create "1e#"-type label	WITHOUT_CLASSIFICATION	0.9999956941323536	WITHOUT_CLASSIFICATION	4.3058676464745615E-6	DEFECT
// did zero tick last iteration //no label //clear flag	WITHOUT_CLASSIFICATION	0.9999976266536413	WITHOUT_CLASSIFICATION	2.373346358623203E-6	DEFECT
// not first tick of group //no label //make sure flag cleared	WITHOUT_CLASSIFICATION	0.9999999142914534	WITHOUT_CLASSIFICATION	8.570854647690157E-8	DEFECT
//if past highest data value then exit method	WITHOUT_CLASSIFICATION	0.9999683456308357	WITHOUT_CLASSIFICATION	3.1654369164200544E-5	DEFECT
//create tick object and add to list:	WITHOUT_CLASSIFICATION	0.9999937596318917	WITHOUT_CLASSIFICATION	6.240368108276245E-6	DEFECT
//using exponents or force-formatter flag is set // (convert 'E' to lower-case 'e'):	WITHOUT_CLASSIFICATION	0.9999990942804772	WITHOUT_CLASSIFICATION	9.057195227759447E-7	DEFECT
// populate deprecated fields	WITHOUT_CLASSIFICATION	0.9999995900149803	WITHOUT_CLASSIFICATION	4.099850197192982E-7	DEFECT
// usually the range will be a DateRange, but if it isn't do a // conversion...	WITHOUT_CLASSIFICATION	0.9997908513871617	WITHOUT_CLASSIFICATION	2.0914861283826683E-4	DEFECT
// check the new minimum date relative to the current maximum date	WITHOUT_CLASSIFICATION	0.9999998992103661	WITHOUT_CLASSIFICATION	1.0078963393219463E-7	DEFECT
// check the new maximum date relative to the current minimum date	WITHOUT_CLASSIFICATION	0.999999886719199	WITHOUT_CLASSIFICATION	1.1328080094518209E-7	DEFECT
// long result = calendar.getTimeInMillis(); // won't work with JDK 1.3	WITHOUT_CLASSIFICATION	0.809095040369162	WITHOUT_CLASSIFICATION	0.1909049596308379	DEFECT
// date formatters	WITHOUT_CLASSIFICATION	0.9999789978482376	WITHOUT_CLASSIFICATION	2.1002151762305837E-5	DEFECT
// milliseconds	WITHOUT_CLASSIFICATION	0.9999992727511157	WITHOUT_CLASSIFICATION	7.272488843390869E-7	DEFECT
// look at lower and upper bounds...	WITHOUT_CLASSIFICATION	0.9999992723565939	WITHOUT_CLASSIFICATION	7.276434061761116E-7	DEFECT
// create a new space object if one wasn't supplied...	WITHOUT_CLASSIFICATION	0.9999999036811881	WITHOUT_CLASSIFICATION	9.63188120504918E-8	DEFECT
// if the axis is not visible, no additional space is required...	WITHOUT_CLASSIFICATION	0.9999970197208005	WITHOUT_CLASSIFICATION	2.980279199569509E-6	DEFECT
// seconds	WITHOUT_CLASSIFICATION	0.9999994114302467	WITHOUT_CLASSIFICATION	5.885697532413705E-7	DEFECT
// minutes	WITHOUT_CLASSIFICATION	0.9999985300011295	WITHOUT_CLASSIFICATION	1.4699988705457864E-6	DEFECT
// hours	WITHOUT_CLASSIFICATION	0.9999976824364928	WITHOUT_CLASSIFICATION	2.317563507213838E-6	DEFECT
// days	WITHOUT_CLASSIFICATION	0.9999950396175972	WITHOUT_CLASSIFICATION	4.96038240283276E-6	DEFECT
// months	WITHOUT_CLASSIFICATION	0.9999976045568851	WITHOUT_CLASSIFICATION	2.395443114880505E-6	DEFECT
// years	WITHOUT_CLASSIFICATION	0.9999979762211172	WITHOUT_CLASSIFICATION	2.023778882776696E-6	DEFECT
//Timeline hasn't method getStartTime()	WITHOUT_CLASSIFICATION	0.9999571184627211	WITHOUT_CLASSIFICATION	4.2881537278898216E-5	DEFECT
// start with the current tick unit...	WITHOUT_CLASSIFICATION	0.999999271479419	WITHOUT_CLASSIFICATION	7.28520580850739E-7	DEFECT
// then extrapolate...	WITHOUT_CLASSIFICATION	0.9999988533488812	WITHOUT_CLASSIFICATION	1.1466511188719534E-6	DEFECT
// start with a unit that is at least 1/10th of the axis length	WITHOUT_CLASSIFICATION	0.999999083781324	WITHOUT_CLASSIFICATION	9.162186759668507E-7	DEFECT
// now extrapolate based on label height and unit height...	WITHOUT_CLASSIFICATION	0.9999998326298651	WITHOUT_CLASSIFICATION	1.6737013486274565E-7	DEFECT
// make final selection...	WITHOUT_CLASSIFICATION	0.9999984656998218	WITHOUT_CLASSIFICATION	1.534300178322583E-6	DEFECT
// all tick labels have the same width (equal to the height of // the font)...	WITHOUT_CLASSIFICATION	0.999999663289727	WITHOUT_CLASSIFICATION	3.36710273028823E-7	DEFECT
// could add a flag to make the following correction optional...	WITHOUT_CLASSIFICATION	0.9999736303435053	WITHOUT_CLASSIFICATION	2.636965649483092E-5	DEFECT
// could add a flag to make the following correction optional...	WITHOUT_CLASSIFICATION	0.9999736303435053	WITHOUT_CLASSIFICATION	2.636965649483092E-5	DEFECT
// work out the value, label and position	WITHOUT_CLASSIFICATION	0.9999824820587503	WITHOUT_CLASSIFICATION	1.7517941249678675E-5	DEFECT
// work out the value, label and position	WITHOUT_CLASSIFICATION	0.9999824820587503	WITHOUT_CLASSIFICATION	1.7517941249678675E-5	DEFECT
// even though the axis is not visible, we need to refresh ticks in // case the grid is being drawn...	WITHOUT_CLASSIFICATION	0.9999843026276983	WITHOUT_CLASSIFICATION	1.5697372301711143E-5	DEFECT
// draw the tick marks and labels...	WITHOUT_CLASSIFICATION	0.9999969592209974	WITHOUT_CLASSIFICATION	3.040779002685803E-6	DEFECT
// draw the axis label (note that 'state' is passed in *and* // returned)...	WITHOUT_CLASSIFICATION	0.9999996410061497	WITHOUT_CLASSIFICATION	3.58993850265668E-7	DEFECT
// when zooming to sub-millisecond ranges, it can be the case that // adjEnd == adjStart...and we can't have an axis with zero length // so we apply this instead:	WITHOUT_CLASSIFICATION	0.999912004232186	WITHOUT_CLASSIFICATION	8.799576781398271E-5	DEFECT
// 'dateTickUnit' is immutable : no need to clone	WITHOUT_CLASSIFICATION	0.9999992433989603	WITHOUT_CLASSIFICATION	7.566010397249127E-7	DEFECT
// 'tickMarkPosition' is immutable : no need to clone	WITHOUT_CLASSIFICATION	0.9999978210170208	WITHOUT_CLASSIFICATION	2.178982979105901E-6	DEFECT
// if there is no specific font, use the general one...	WITHOUT_CLASSIFICATION	0.9999998988329467	WITHOUT_CLASSIFICATION	1.0116705326867025E-7	DEFECT
// if there is no specific paint, use the general one...	WITHOUT_CLASSIFICATION	0.9999999485897343	WITHOUT_CLASSIFICATION	5.1410265759908565E-8	DEFECT
// find first excluded base segment starting fromDomainValue	WITHOUT_CLASSIFICATION	0.9999998264458131	WITHOUT_CLASSIFICATION	1.7355418698449224E-7	DEFECT
// draw the category labels and axis label	WITHOUT_CLASSIFICATION	0.9999987284186628	WITHOUT_CLASSIFICATION	1.2715813371807577E-6	DEFECT
// get the axis label size and update the space object...	WITHOUT_CLASSIFICATION	0.9999999021803433	WITHOUT_CLASSIFICATION	9.781965664750058E-8	DEFECT
// calculate the max size of the tick labels (if visible)...	WITHOUT_CLASSIFICATION	0.9999967756323845	WITHOUT_CLASSIFICATION	3.22436761535044E-6	DEFECT
// nothing required	WITHOUT_CLASSIFICATION	0.9999961099953557	WITHOUT_CLASSIFICATION	3.890004644379028E-6	DEFECT
// sanity check for data area...	WITHOUT_CLASSIFICATION	0.9999992978871193	WITHOUT_CLASSIFICATION	7.021128806993695E-7	DEFECT
// step down in size until the current size is too small or there are  // no more units	WITHOUT_CLASSIFICATION	0.9999976578680331	WITHOUT_CLASSIFICATION	2.3421319668731153E-6	DEFECT
//////////////////////////////////////////////////////////////////////////// // predetermined segments sizes ////////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999997800902743	WITHOUT_CLASSIFICATION	2.1990972559600793E-7	DEFECT
//////////////////////////////////////////////////////////////////////////// // other constants ////////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999998296670695	WITHOUT_CLASSIFICATION	1.7033293059139928E-7	DEFECT
//////////////////////////////////////////////////////////////////////////// // private attributes ////////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999988611773175	WITHOUT_CLASSIFICATION	1.1388226824810513E-6	DEFECT
//////////////////////////////////////////////////////////////////////////// // static block ////////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999988780568267	WITHOUT_CLASSIFICATION	1.1219431732026236E-6	DEFECT
// make a time zone with no DST for our Calendar calculations	WITHOUT_CLASSIFICATION	0.9999793748865198	WITHOUT_CLASSIFICATION	2.0625113480234432E-5	DEFECT
// calculate midnight of first monday after 1/1/1900 relative to // current locale	WITHOUT_CLASSIFICATION	0.9999984032813861	WITHOUT_CLASSIFICATION	1.596718613890331E-6	DEFECT
//////////////////////////////////////////////////////////////////////////// // constructors and factory methods ////////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999914247834749	WITHOUT_CLASSIFICATION	8.575216525178484E-6	DEFECT
//////////////////////////////////////////////////////////////////////////// // operations ////////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999989531699602	WITHOUT_CLASSIFICATION	1.0468300397330186E-6	DEFECT
// verify that baseTimeline is compatible with us	WITHOUT_CLASSIFICATION	0.999997466651839	WITHOUT_CLASSIFICATION	2.5333481609744984E-6	DEFECT
// - partialTimeInException;	WITHOUT_CLASSIFICATION	0.9999870438196538	WITHOUT_CLASSIFICATION	1.2956180346296932E-5	DEFECT
// - partialTimeInException;	WITHOUT_CLASSIFICATION	0.9999870438196538	WITHOUT_CLASSIFICATION	1.2956180346296932E-5	DEFECT
//return toTimelineValue(dateDomainValue.getTime());	WITHOUT_CLASSIFICATION	0.9999953964527954	WITHOUT_CLASSIFICATION	4.60354720449917E-6	DEFECT
// calculate the result as if no exceptions	WITHOUT_CLASSIFICATION	0.9999979236247512	WITHOUT_CLASSIFICATION	2.076375248849731E-6	DEFECT
// adjust result for any exceptions in the result calculated	WITHOUT_CLASSIFICATION	0.9999837991203306	WITHOUT_CLASSIFICATION	1.6200879669464266E-5	DEFECT
// skip all whole exception segments in the range	WITHOUT_CLASSIFICATION	0.9999900353673608	WITHOUT_CLASSIFICATION	9.964632639280718E-6	DEFECT
// skip exception or excluded segments we may fall on	WITHOUT_CLASSIFICATION	0.9999972936395174	WITHOUT_CLASSIFICATION	2.7063604825924013E-6	DEFECT
//addException(exceptionDate.getTime());	WITHOUT_CLASSIFICATION	0.9998962236751427	WITHOUT_CLASSIFICATION	1.0377632485726329E-4	DEFECT
// find all consecutive included segments	WITHOUT_CLASSIFICATION	0.9999981581561137	WITHOUT_CLASSIFICATION	1.8418438863340783E-6	DEFECT
// add the interval as an exception	WITHOUT_CLASSIFICATION	0.9999896312456408	WITHOUT_CLASSIFICATION	1.036875435921177E-5	DEFECT
// find all consecutive included segments	WITHOUT_CLASSIFICATION	0.9999981581561137	WITHOUT_CLASSIFICATION	1.8418438863340783E-6	DEFECT
// move forward exceptionSegmentCount segments skipping // excluded segments	WITHOUT_CLASSIFICATION	0.9999991788361735	WITHOUT_CLASSIFICATION	8.211638264465486E-7	DEFECT
// empty	WITHOUT_CLASSIFICATION	0.9999956878645606	WITHOUT_CLASSIFICATION	4.3121354394008135E-6	DEFECT
// add the interval as an exception	WITHOUT_CLASSIFICATION	0.9999896312456408	WITHOUT_CLASSIFICATION	1.036875435921177E-5	DEFECT
// this is not one of our included segment, skip it	WITHOUT_CLASSIFICATION	0.99999937796424	WITHOUT_CLASSIFICATION	6.220357600772576E-7	DEFECT
// first check that autoPopulate==false works as expected	WITHOUT_CLASSIFICATION	0.999991556500973	WITHOUT_CLASSIFICATION	8.443499026897664E-6	DEFECT
// cycle over all the base segments groups in the range	WITHOUT_CLASSIFICATION	0.9999995327141594	WITHOUT_CLASSIFICATION	4.672858404989184E-7	DEFECT
// cycle through all the segments contained in the base exclusion // area	WITHOUT_CLASSIFICATION	0.999999418356396	WITHOUT_CLASSIFICATION	5.816436039441412E-7	DEFECT
// go to next base segment group	WITHOUT_CLASSIFICATION	0.9999998746152977	WITHOUT_CLASSIFICATION	1.2538470227397626E-7	DEFECT
// key not found	WITHOUT_CLASSIFICATION	0.9999587249738825	WITHOUT_CLASSIFICATION	4.1275026117596543E-5	DEFECT
// Segment fromSegment = getSegment(from); // fromSegment.inc(); // Segment toSegment = getSegment(to); // toSegment.dec();	WITHOUT_CLASSIFICATION	0.9999973600225271	WITHOUT_CLASSIFICATION	2.6399774729159515E-6	DEFECT
// long start = Math.max( //     fromSegment.getSegmentStart(), this.segmentStart // ); // long end = Math.min(toSegment.getSegmentEnd(), this.segmentEnd);	WITHOUT_CLASSIFICATION	0.9999986913655483	WITHOUT_CLASSIFICATION	1.308634451659485E-6	DEFECT
// Compute number of labels	WITHOUT_CLASSIFICATION	0.9999998396586202	WITHOUT_CLASSIFICATION	1.6034137982265144E-7	DEFECT
// Cycle when necessary	WITHOUT_CLASSIFICATION	0.9999979346808596	WITHOUT_CLASSIFICATION	2.0653191404462173E-6	DEFECT
// Cycle when necessary	WITHOUT_CLASSIFICATION	0.9999979346808596	WITHOUT_CLASSIFICATION	2.0653191404462173E-6	DEFECT
// If tick overlap when cycling, update last tick too	WITHOUT_CLASSIFICATION	0.9999998054697582	WITHOUT_CLASSIFICATION	1.945302417184351E-7	DEFECT
// continue and separate the labels only if necessary	WITHOUT_CLASSIFICATION	0.9999999413827175	WITHOUT_CLASSIFICATION	5.8617282535605315E-8	DEFECT
// TOP	WITHOUT_CLASSIFICATION	0.9998168126125565	WITHOUT_CLASSIFICATION	1.8318738744359798E-4	DEFECT
// TOP	WITHOUT_CLASSIFICATION	0.9998168126125565	WITHOUT_CLASSIFICATION	1.8318738744359798E-4	DEFECT
// TOP	WITHOUT_CLASSIFICATION	0.9998168126125565	WITHOUT_CLASSIFICATION	1.8318738744359798E-4	DEFECT
// BOTTOM	WITHOUT_CLASSIFICATION	0.9998058459688424	WITHOUT_CLASSIFICATION	1.9415403115775748E-4	DEFECT
// BOTTOM	WITHOUT_CLASSIFICATION	0.9998058459688424	WITHOUT_CLASSIFICATION	1.9415403115775748E-4	DEFECT
// BOTTOM	WITHOUT_CLASSIFICATION	0.9998058459688424	WITHOUT_CLASSIFICATION	1.9415403115775748E-4	DEFECT
// LEFT	WITHOUT_CLASSIFICATION	0.9999837453250983	WITHOUT_CLASSIFICATION	1.6254674901700902E-5	DEFECT
// LEFT	WITHOUT_CLASSIFICATION	0.9999837453250983	WITHOUT_CLASSIFICATION	1.6254674901700902E-5	DEFECT
// LEFT	WITHOUT_CLASSIFICATION	0.9999837453250983	WITHOUT_CLASSIFICATION	1.6254674901700902E-5	DEFECT
// RIGHT	WITHOUT_CLASSIFICATION	0.999993875476893	WITHOUT_CLASSIFICATION	6.124523106976635E-6	DEFECT
// RIGHT	WITHOUT_CLASSIFICATION	0.999993875476893	WITHOUT_CLASSIFICATION	6.124523106976635E-6	DEFECT
// no plot, no data	WITHOUT_CLASSIFICATION	0.9999995408640985	WITHOUT_CLASSIFICATION	4.591359016108761E-7	DEFECT
// no plot, no data	WITHOUT_CLASSIFICATION	0.9999995408640985	WITHOUT_CLASSIFICATION	4.591359016108761E-7	DEFECT
// if fixed auto range, then derive lower bound...	WITHOUT_CLASSIFICATION	0.9999914073359806	WITHOUT_CLASSIFICATION	8.592664019477138E-6	DEFECT
// ensure the autorange is at least <minRange> in size...	WITHOUT_CLASSIFICATION	0.9999982542224958	WITHOUT_CLASSIFICATION	1.745777504130075E-6	DEFECT
// ensure the autorange is at least <minRange> in size...	WITHOUT_CLASSIFICATION	0.9999982542224958	WITHOUT_CLASSIFICATION	1.745777504130075E-6	DEFECT
// if the axis is not visible, don't draw it...	WITHOUT_CLASSIFICATION	0.9999528061427359	WITHOUT_CLASSIFICATION	4.7193857264241684E-5	DEFECT
// even though the axis is not visible, we need ticks for the // gridlines...	WITHOUT_CLASSIFICATION	0.9999957202013788	WITHOUT_CLASSIFICATION	4.279798621169025E-6	DEFECT
// look at lower and upper bounds...	WITHOUT_CLASSIFICATION	0.9999992723565939	WITHOUT_CLASSIFICATION	7.276434061761116E-7	DEFECT
// draw the tick marks and labels...	WITHOUT_CLASSIFICATION	0.9999969592209974	WITHOUT_CLASSIFICATION	3.040779002685803E-6	DEFECT
// TOP	WITHOUT_CLASSIFICATION	0.9998168126125565	WITHOUT_CLASSIFICATION	1.8318738744359798E-4	DEFECT
// BOTTOM	WITHOUT_CLASSIFICATION	0.9998058459688424	WITHOUT_CLASSIFICATION	1.9415403115775748E-4	DEFECT
// BOTTOM	WITHOUT_CLASSIFICATION	0.9998058459688424	WITHOUT_CLASSIFICATION	1.9415403115775748E-4	DEFECT
// LEFT	WITHOUT_CLASSIFICATION	0.9999837453250983	WITHOUT_CLASSIFICATION	1.6254674901700902E-5	DEFECT
// LEFT	WITHOUT_CLASSIFICATION	0.9999837453250983	WITHOUT_CLASSIFICATION	1.6254674901700902E-5	DEFECT
// RIGHT	WITHOUT_CLASSIFICATION	0.999993875476893	WITHOUT_CLASSIFICATION	6.124523106976635E-6	DEFECT
// RIGHT	WITHOUT_CLASSIFICATION	0.999993875476893	WITHOUT_CLASSIFICATION	6.124523106976635E-6	DEFECT
// first check that autoPopulate==false works as expected	WITHOUT_CLASSIFICATION	0.999991556500973	WITHOUT_CLASSIFICATION	8.443499026897664E-6	DEFECT
// default make height of plotArea	WITHOUT_CLASSIFICATION	0.9999980240337919	WITHOUT_CLASSIFICATION	1.975966208196833E-6	DEFECT
// allow fixed thickness	WITHOUT_CLASSIFICATION	0.9999546287048285	WITHOUT_CLASSIFICATION	4.537129517149022E-5	DEFECT
// update, but dont draw tick marks (needed for stepped colors)	WITHOUT_CLASSIFICATION	0.9999996118263159	WITHOUT_CLASSIFICATION	3.881736840637967E-7	DEFECT
// suppresses compiler warnings	WITHOUT_CLASSIFICATION	0.9999990424624149	WITHOUT_CLASSIFICATION	9.57537585066082E-7	DEFECT
// setTickValues was missing from ColorPalette v. 0.96 //colorPalette.setTickValues(this.axis.getTicks());	WITHOUT_CLASSIFICATION	0.999998305908472	WITHOUT_CLASSIFICATION	1.6940915279956803E-6	DEFECT
// calculate the adjusted data area taking into account the 3D effect...	WITHOUT_CLASSIFICATION	0.9999868137385008	WITHOUT_CLASSIFICATION	1.3186261499102303E-5	DEFECT
// argument checking delegated...	WITHOUT_CLASSIFICATION	0.9999997922706068	WITHOUT_CLASSIFICATION	2.077293932781037E-7	DEFECT
// transparent	WITHOUT_CLASSIFICATION	0.9999992704508323	WITHOUT_CLASSIFICATION	7.295491677245646E-7	DEFECT
//gets the outline stroke width of the plot	WITHOUT_CLASSIFICATION	0.9999993529373726	WITHOUT_CLASSIFICATION	6.470626274268143E-7	DEFECT
// ensure that all the symbols are displayed	WITHOUT_CLASSIFICATION	0.9999981694977854	WITHOUT_CLASSIFICATION	1.830502214597479E-6	DEFECT
// this ensure that the grid bands will be displayed correctly.	WITHOUT_CLASSIFICATION	0.9999668762577808	WITHOUT_CLASSIFICATION	3.312374221926229E-5	DEFECT
// avoid to draw overlapping tick labels	WITHOUT_CLASSIFICATION	0.999999418749087	WITHOUT_CLASSIFICATION	5.812509129808501E-7	DEFECT
// avoid to draw overlapping tick labels	WITHOUT_CLASSIFICATION	0.999999418749087	WITHOUT_CLASSIFICATION	5.812509129808501E-7	DEFECT
// don't draw this tick label	WITHOUT_CLASSIFICATION	0.9995110724160364	WITHOUT_CLASSIFICATION	4.889275839634924E-4	DEFECT
// don't draw this tick label	WITHOUT_CLASSIFICATION	0.9995110724160364	WITHOUT_CLASSIFICATION	4.889275839634924E-4	DEFECT
// remember these values for next comparison	WITHOUT_CLASSIFICATION	0.9999974906941689	WITHOUT_CLASSIFICATION	2.509305831090808E-6	DEFECT
// remember these values for next comparison	WITHOUT_CLASSIFICATION	0.9999974906941689	WITHOUT_CLASSIFICATION	2.509305831090808E-6	DEFECT
// first check that autoPopulate==false works as expected	WITHOUT_CLASSIFICATION	0.999991556500973	WITHOUT_CLASSIFICATION	8.443499026897664E-6	DEFECT
// if the axis is not visible, don't draw it...	WITHOUT_CLASSIFICATION	0.9999528061427359	WITHOUT_CLASSIFICATION	4.7193857264241684E-5	DEFECT
// even though the axis is not visible, we need ticks for the // gridlines...	WITHOUT_CLASSIFICATION	0.9999957202013788	WITHOUT_CLASSIFICATION	4.279798621169025E-6	DEFECT
// all tick labels have the same width (equal to the height of the // font)...	WITHOUT_CLASSIFICATION	0.9999997739394568	WITHOUT_CLASSIFICATION	2.260605430929306E-7	DEFECT
// draw the category labels and axis label	WITHOUT_CLASSIFICATION	0.9999987284186628	WITHOUT_CLASSIFICATION	1.2715813371807577E-6	DEFECT
// create a new space object if one wasn't supplied...	WITHOUT_CLASSIFICATION	0.9999999036811881	WITHOUT_CLASSIFICATION	9.63188120504918E-8	DEFECT
// if the axis is not visible, no additional space is required...	WITHOUT_CLASSIFICATION	0.9999970197208005	WITHOUT_CLASSIFICATION	2.980279199569509E-6	DEFECT
// start with the current tick unit...	WITHOUT_CLASSIFICATION	0.999999271479419	WITHOUT_CLASSIFICATION	7.28520580850739E-7	DEFECT
// start with the current tick unit...	WITHOUT_CLASSIFICATION	0.999999271479419	WITHOUT_CLASSIFICATION	7.28520580850739E-7	DEFECT
// then extrapolate...	WITHOUT_CLASSIFICATION	0.9999988533488812	WITHOUT_CLASSIFICATION	1.1466511188719534E-6	DEFECT
// then extrapolate...	WITHOUT_CLASSIFICATION	0.9999988533488812	WITHOUT_CLASSIFICATION	1.1466511188719534E-6	DEFECT
// check a series with no items	WITHOUT_CLASSIFICATION	0.9999995844777101	WITHOUT_CLASSIFICATION	4.1552228997414E-7	DEFECT
// must be top or bottom	WITHOUT_CLASSIFICATION	0.9999899391802559	WITHOUT_CLASSIFICATION	1.0060819744040563E-5	DEFECT
// catches null also	WITHOUT_CLASSIFICATION	0.9999960500182543	WITHOUT_CLASSIFICATION	3.949981745675291E-6	DEFECT
// no action required.	WITHOUT_CLASSIFICATION	0.9999974345345272	WITHOUT_CLASSIFICATION	2.5654654728320425E-6	DEFECT
// no action required.	WITHOUT_CLASSIFICATION	0.9999974345345272	WITHOUT_CLASSIFICATION	2.5654654728320425E-6	DEFECT
// check if we need to collect chart entities from the container	WITHOUT_CLASSIFICATION	0.9999999388967876	WITHOUT_CLASSIFICATION	6.110321231821822E-8	DEFECT
// place in this row (truncated) anyway	WITHOUT_CLASSIFICATION	0.9999758426464982	WITHOUT_CLASSIFICATION	2.41573535017969E-5	DEFECT
// start new row	WITHOUT_CLASSIFICATION	0.9999994561789667	WITHOUT_CLASSIFICATION	5.438210333814098E-7	DEFECT
//Block b = (Block) blocks.get(i);	WITHOUT_CLASSIFICATION	0.9999822287128487	WITHOUT_CLASSIFICATION	1.7771287151322597E-5	DEFECT
// can safely ignore	WITHOUT_CLASSIFICATION	0.9999990614085139	WITHOUT_CLASSIFICATION	9.385914860782421E-7	DEFECT
// find optimum height, then map to range	WITHOUT_CLASSIFICATION	0.9999996208562918	WITHOUT_CLASSIFICATION	3.7914370817502924E-7	DEFECT
// find optimum height	WITHOUT_CLASSIFICATION	0.9999969575409794	WITHOUT_CLASSIFICATION	3.0424590205311266E-6	DEFECT
// find optimum height	WITHOUT_CLASSIFICATION	0.9999969575409794	WITHOUT_CLASSIFICATION	3.0424590205311266E-6	DEFECT
// find optimum height and map to range	WITHOUT_CLASSIFICATION	0.9999994580943068	WITHOUT_CLASSIFICATION	5.419056931780047E-7	DEFECT
// find optimum width and map to range	WITHOUT_CLASSIFICATION	0.9999995019527079	WITHOUT_CLASSIFICATION	4.980472919823926E-7	DEFECT
// check a series with no items	WITHOUT_CLASSIFICATION	0.9999995844777101	WITHOUT_CLASSIFICATION	4.1552228997414E-7	DEFECT
// check a series with no items	WITHOUT_CLASSIFICATION	0.9999995844777101	WITHOUT_CLASSIFICATION	4.1552228997414E-7	DEFECT
// since the flow layout is relatively straightforward, // no information needs to be recorded here	WITHOUT_CLASSIFICATION	0.999999590721089	WITHOUT_CLASSIFICATION	4.09278910988527E-7	DEFECT
// no action required.	WITHOUT_CLASSIFICATION	0.9999974345345272	WITHOUT_CLASSIFICATION	2.5654654728320425E-6	DEFECT
// first arrange without constraints, and see if this fits within // the required ranges...	WITHOUT_CLASSIFICATION	0.9999988340640203	WITHOUT_CLASSIFICATION	1.165935979653966E-6	DEFECT
// first arrange without constraints, then see if the width fits // within the required range...if not, call arrangeFN() at max width	WITHOUT_CLASSIFICATION	0.9999995701665211	WITHOUT_CLASSIFICATION	4.298334789463332E-7	DEFECT
// first arrange without constraints, then see if the width fits // within the required range...if not, call arrangeFN() at max width	WITHOUT_CLASSIFICATION	0.9999995701665211	WITHOUT_CLASSIFICATION	4.298334789463332E-7	DEFECT
// check if we need to collect chart entities from the container	WITHOUT_CLASSIFICATION	0.9999999388967876	WITHOUT_CLASSIFICATION	6.110321231821822E-8	DEFECT
//Block b = (Block) blocks.get(i);	WITHOUT_CLASSIFICATION	0.9999822287128487	WITHOUT_CLASSIFICATION	1.7771287151322597E-5	DEFECT
// this default implementation will just fill the available // border space with a single color	WITHOUT_CLASSIFICATION	0.9999945252393019	WITHOUT_CLASSIFICATION	5.474760698109043E-6	DEFECT
// backgroundImage	WITHOUT_CLASSIFICATION	0.9999985365574862	WITHOUT_CLASSIFICATION	1.46344251377951E-6	DEFECT
// fixed width	WITHOUT_CLASSIFICATION	0.9999827724972502	WITHOUT_CLASSIFICATION	1.722750274973206E-5	DEFECT
// width is OK, but height must be constrained	WITHOUT_CLASSIFICATION	0.9999796704441883	WITHOUT_CLASSIFICATION	2.032955581155982E-5	DEFECT
// height is OK, but width must be constrained	WITHOUT_CLASSIFICATION	0.9999517579658245	WITHOUT_CLASSIFICATION	4.824203417540178E-5	DEFECT
// nothing to clear	WITHOUT_CLASSIFICATION	0.9999995261418899	WITHOUT_CLASSIFICATION	4.738581101892734E-7	DEFECT
// if the area has zero height or width, we shouldn't draw anything	WITHOUT_CLASSIFICATION	0.9999969408307123	WITHOUT_CLASSIFICATION	3.0591692876378454E-6	DEFECT
// since the flow layout is relatively straightforward, no information // needs to be recorded here	WITHOUT_CLASSIFICATION	0.9999991722653221	WITHOUT_CLASSIFICATION	8.277346778158345E-7	DEFECT
// place in this column (truncated) anyway	WITHOUT_CLASSIFICATION	0.9999944772522208	WITHOUT_CLASSIFICATION	5.5227477792146215E-6	DEFECT
// start new column	WITHOUT_CLASSIFICATION	0.9999998987145049	WITHOUT_CLASSIFICATION	1.0128549508642557E-7	DEFECT
// set a theme using the new shadow generator feature available in // 1.0.14 - for backwards compatibility it is not enabled by default	WITHOUT_CLASSIFICATION	0.999999874151882	WITHOUT_CLASSIFICATION	1.258481180305036E-7	DEFECT
/* x-axis label*/	WITHOUT_CLASSIFICATION	0.9999936588174195	WITHOUT_CLASSIFICATION	6.341182580488955E-6	DEFECT
/* y-axis label */	WITHOUT_CLASSIFICATION	0.9999953971299078	WITHOUT_CLASSIFICATION	4.602870092097E-6	DEFECT
// chart title // data // no legend // tooltips // no URL generation	WITHOUT_CLASSIFICATION	0.9999996374937054	WITHOUT_CLASSIFICATION	3.625062946025299E-7	DEFECT
// check a series with one item	WITHOUT_CLASSIFICATION	0.9999992711442709	WITHOUT_CLASSIFICATION	7.288557291391381E-7	DEFECT
// ****************************************************************** //  More than 150 demo applications are included with the JFreeChart //  Developer Guide...for more information, see: // //  >   http://www.object-refinery.com/jfreechart/guide.html // // ******************************************************************	WITHOUT_CLASSIFICATION	0.99999885571185	WITHOUT_CLASSIFICATION	1.1442881499303101E-6	DEFECT
// title // x-axis label // y-axis label // data // create legend? // generate tooltips? // generate URLs?	WITHOUT_CLASSIFICATION	0.9999965501663644	WITHOUT_CLASSIFICATION	3.449833635740923E-6	DEFECT
// set a custom background for the chart	WITHOUT_CLASSIFICATION	0.9999999689686592	WITHOUT_CLASSIFICATION	3.1031340768187E-8	DEFECT
// customise the title position and font	WITHOUT_CLASSIFICATION	0.9999967456727356	WITHOUT_CLASSIFICATION	3.254327264408514E-6	DEFECT
// use gradients and white borders for the section colours	WITHOUT_CLASSIFICATION	0.9999999751479985	WITHOUT_CLASSIFICATION	2.4852001505205698E-8	DEFECT
// customise the section label appearance	WITHOUT_CLASSIFICATION	0.9999974567065019	WITHOUT_CLASSIFICATION	2.5432934981503426E-6	DEFECT
// add a subtitle giving the data source	WITHOUT_CLASSIFICATION	0.9999997639139433	WITHOUT_CLASSIFICATION	2.3608605659023985E-7	DEFECT
// pass to the super-class for handling	WITHOUT_CLASSIFICATION	0.9999999440944841	WITHOUT_CLASSIFICATION	5.590551580984151E-8	DEFECT
// pass to the super-class for handling	WITHOUT_CLASSIFICATION	0.9999999440944841	WITHOUT_CLASSIFICATION	5.590551580984151E-8	DEFECT
// pass to the super-class for handling	WITHOUT_CLASSIFICATION	0.9999999440944841	WITHOUT_CLASSIFICATION	5.590551580984151E-8	DEFECT
// don't need to do anything	WITHOUT_CLASSIFICATION	0.9997913802963144	WITHOUT_CLASSIFICATION	2.0861970368553224E-4	DEFECT
// don't need to do anything	WITHOUT_CLASSIFICATION	0.9997913802963144	WITHOUT_CLASSIFICATION	2.0861970368553224E-4	DEFECT
//    /** Insets text field. */ //    private InsetsTextField tickLabelInsetsTextField; // //    /** Label insets text field. */ //    private InsetsTextField labelInsetsTextField;	WITHOUT_CLASSIFICATION	0.9999964464578284	WITHOUT_CLASSIFICATION	3.5535421715509493E-6	DEFECT
// figure out what type of axis we have and instantiate the // appropriate panel	WITHOUT_CLASSIFICATION	0.9999990185703503	WITHOUT_CLASSIFICATION	9.814296496613207E-7	DEFECT
// Insets values	WITHOUT_CLASSIFICATION	0.9999983588539421	WITHOUT_CLASSIFICATION	1.6411460579222952E-6	DEFECT
// axis.setTickMarkStroke(getTickMarkStroke());	WITHOUT_CLASSIFICATION	0.9999976274520043	WITHOUT_CLASSIFICATION	2.3725479957142646E-6	DEFECT
// create a panel for the settings...	WITHOUT_CLASSIFICATION	0.9999999295543224	WITHOUT_CLASSIFICATION	7.044567764087361E-8	DEFECT
//dmo: added this panel for colorbar control. (start dmo additions)	WITHOUT_CLASSIFICATION	0.9999405193497392	WITHOUT_CLASSIFICATION	5.948065026076971E-5	DEFECT
//      end fix by rfuller	WITHOUT_CLASSIFICATION	0.9995365226798398	WITHOUT_CLASSIFICATION	4.634773201602343E-4	DEFECT
//dmo: (end dmo additions)	WITHOUT_CLASSIFICATION	0.9998569273181361	WITHOUT_CLASSIFICATION	1.4307268186385032E-4	DEFECT
// set the plot properties...	WITHOUT_CLASSIFICATION	0.9999994506377871	WITHOUT_CLASSIFICATION	5.493622129511803E-7	DEFECT
// then the axis properties...	WITHOUT_CLASSIFICATION	0.9999966699289603	WITHOUT_CLASSIFICATION	3.3300710398012387E-6	DEFECT
// pass to super-class for handling	WITHOUT_CLASSIFICATION	0.9999999170137456	WITHOUT_CLASSIFICATION	8.298625438738311E-8	DEFECT
//  No op	WITHOUT_CLASSIFICATION	0.9999964757609541	WITHOUT_CLASSIFICATION	3.5242390458776106E-6	DEFECT
//  No op	WITHOUT_CLASSIFICATION	0.9999964757609541	WITHOUT_CLASSIFICATION	3.5242390458776106E-6	DEFECT
// defer argument checks...	WITHOUT_CLASSIFICATION	0.9999994215665835	WITHOUT_CLASSIFICATION	5.78433416521374E-7	DEFECT
//      fix by rfuller	WITHOUT_CLASSIFICATION	0.9991602882830339	WITHOUT_CLASSIFICATION	8.397117169659962E-4	DEFECT
// populate the deprecated fields	WITHOUT_CLASSIFICATION	0.9999998798392711	WITHOUT_CLASSIFICATION	1.2016072894387375E-7	DEFECT
//same as for ChartEntity!	WITHOUT_CLASSIFICATION	0.9999917463073908	WITHOUT_CLASSIFICATION	8.253692609162836E-6	DEFECT
//same as for ChartEntity!	WITHOUT_CLASSIFICATION	0.9999917463073908	WITHOUT_CLASSIFICATION	8.253692609162836E-6	DEFECT
//same as for ChartEntity!	WITHOUT_CLASSIFICATION	0.9999917463073908	WITHOUT_CLASSIFICATION	8.253692609162836E-6	DEFECT
// update the deprecated field	WITHOUT_CLASSIFICATION	0.9999998095842992	WITHOUT_CLASSIFICATION	1.9041570084689875E-7	DEFECT
// update the deprecated fields	WITHOUT_CLASSIFICATION	0.999999946642113	WITHOUT_CLASSIFICATION	5.335788704014237E-8	DEFECT
// check the deprecated fields	WITHOUT_CLASSIFICATION	0.9999998791844827	WITHOUT_CLASSIFICATION	1.2081551738276745E-7	DEFECT
// try the parent plot	WITHOUT_CLASSIFICATION	0.999997344283607	WITHOUT_CLASSIFICATION	2.6557163930235042E-6	DEFECT
// do not notify while zooming each axis	WITHOUT_CLASSIFICATION	0.999996456800739	WITHOUT_CLASSIFICATION	3.543199260923063E-6	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999934710680527	WITHOUT_CLASSIFICATION	6.528931947226976E-6	DEFECT
// this generates the change event too	WITHOUT_CLASSIFICATION	0.9999991139711164	WITHOUT_CLASSIFICATION	8.860288835236202E-7	DEFECT
/* x-axis label*/	WITHOUT_CLASSIFICATION	0.9999936588174195	WITHOUT_CLASSIFICATION	6.341182580488955E-6	DEFECT
/* y-axis label */	WITHOUT_CLASSIFICATION	0.9999953971299078	WITHOUT_CLASSIFICATION	4.602870092097E-6	DEFECT
// set a custom background for the chart	WITHOUT_CLASSIFICATION	0.9999999689686592	WITHOUT_CLASSIFICATION	3.1031340768187E-8	DEFECT
// customise the title position and font	WITHOUT_CLASSIFICATION	0.9999967456727356	WITHOUT_CLASSIFICATION	3.254327264408514E-6	DEFECT
// use gradients and white borders for the section colours	WITHOUT_CLASSIFICATION	0.9999999751479985	WITHOUT_CLASSIFICATION	2.4852001505205698E-8	DEFECT
// customise the section label appearance	WITHOUT_CLASSIFICATION	0.9999974567065019	WITHOUT_CLASSIFICATION	2.5432934981503426E-6	DEFECT
// add a subtitle giving the data source	WITHOUT_CLASSIFICATION	0.9999997639139433	WITHOUT_CLASSIFICATION	2.3608605659023985E-7	DEFECT
//same as for ChartEntity!	WITHOUT_CLASSIFICATION	0.9999917463073908	WITHOUT_CLASSIFICATION	8.253692609162836E-6	DEFECT
//dmo added //dmo added	WITHOUT_CLASSIFICATION	0.9998958986974167	WITHOUT_CLASSIFICATION	1.0410130258336914E-4	DEFECT
// if there is a tool tip, we expect it to generate the title and // alt values, so we only add an empty alt if there is no tooltip	WITHOUT_CLASSIFICATION	0.9999986885648763	WITHOUT_CLASSIFICATION	1.3114351237231644E-6	DEFECT
// check a series with two items	WITHOUT_CLASSIFICATION	0.9999995029532419	WITHOUT_CLASSIFICATION	4.970467581156699E-7	DEFECT
// FIXME	WITHOUT_CLASSIFICATION	0.8759402540480844	WITHOUT_CLASSIFICATION	0.12405974595191559	DEFECT
// this is a paint we don't recognise	WITHOUT_CLASSIFICATION	0.999404220107279	WITHOUT_CLASSIFICATION	5.957798927209671E-4	DEFECT
// null is handled fine here...	WITHOUT_CLASSIFICATION	0.9999880681812208	WITHOUT_CLASSIFICATION	1.1931818779229473E-5	DEFECT
// we can't do anything	WITHOUT_CLASSIFICATION	0.9996238443423211	WITHOUT_CLASSIFICATION	3.761556576787927E-4	DEFECT
// force a redraw	WITHOUT_CLASSIFICATION	0.999998270614804	WITHOUT_CLASSIFICATION	1.7293851961578696E-6	DEFECT
// pass on the event to the auxiliary handlers	WITHOUT_CLASSIFICATION	0.9999999416675588	WITHOUT_CLASSIFICATION	5.8332441164556804E-8	DEFECT
// pass on the event to the auxiliary handlers	WITHOUT_CLASSIFICATION	0.9999999416675588	WITHOUT_CLASSIFICATION	5.8332441164556804E-8	DEFECT
// relay the event from the canvas to our registered listeners	WITHOUT_CLASSIFICATION	0.9999998591323394	WITHOUT_CLASSIFICATION	1.4086766063758901E-7	DEFECT
// relay the event from the canvas to our registered listeners	WITHOUT_CLASSIFICATION	0.9999998591323394	WITHOUT_CLASSIFICATION	1.4086766063758901E-7	DEFECT
// set the default stroke for all series	WITHOUT_CLASSIFICATION	0.9999996849142291	WITHOUT_CLASSIFICATION	3.15085770940566E-7	DEFECT
//this.chartPanel.isDomainZoomable()) {	WITHOUT_CLASSIFICATION	0.9999987743521173	WITHOUT_CLASSIFICATION	1.2256478827151118E-6	DEFECT
//this.chartPanel.isRangeZoomable()) {	WITHOUT_CLASSIFICATION	0.9999985645941329	WITHOUT_CLASSIFICATION	1.4354058670094847E-6	DEFECT
// does nothing unless overridden	WITHOUT_CLASSIFICATION	0.9999818631722188	WITHOUT_CLASSIFICATION	1.813682778116977E-5	DEFECT
// does nothing unless overridden	WITHOUT_CLASSIFICATION	0.9999818631722188	WITHOUT_CLASSIFICATION	1.813682778116977E-5	DEFECT
// does nothing unless overridden        	WITHOUT_CLASSIFICATION	0.9999804746074857	WITHOUT_CLASSIFICATION	1.9525392514298608E-5	DEFECT
// selected rectangle shouldn't extend outside the data area...	WITHOUT_CLASSIFICATION	0.9999998626473925	WITHOUT_CLASSIFICATION	1.3735260757968476E-7	DEFECT
// for mouseReleased event, (horizontalZoom || verticalZoom) // will be true, so we can just test for either being false; // otherwise both are true	WITHOUT_CLASSIFICATION	0.9999991434373018	WITHOUT_CLASSIFICATION	8.565626981596231E-7	DEFECT
// chart title // data // no legend // tooltips // no URL generation	WITHOUT_CLASSIFICATION	0.9999996374937054	WITHOUT_CLASSIFICATION	3.625062946025299E-7	DEFECT
// does nothing unless overridden	WITHOUT_CLASSIFICATION	0.9999818631722188	WITHOUT_CLASSIFICATION	1.813682778116977E-5	DEFECT
// special case - if the underlying rectangle uses ints we // need to create one that uses doubles	WITHOUT_CLASSIFICATION	0.999999957777707	WITHOUT_CLASSIFICATION	4.222229301551486E-8	DEFECT
// title // x-axis label // y-axis label	WITHOUT_CLASSIFICATION	0.9999929812495008	WITHOUT_CLASSIFICATION	7.018750499231047E-6	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999934710680527	WITHOUT_CLASSIFICATION	6.528931947226976E-6	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999934710680527	WITHOUT_CLASSIFICATION	6.528931947226976E-6	DEFECT
// check a series with four items	WITHOUT_CLASSIFICATION	0.9999995984607356	WITHOUT_CLASSIFICATION	4.015392642844469E-7	DEFECT
// the actual panning occurs later in the mouseDragged() method	WITHOUT_CLASSIFICATION	0.9999705287594893	WITHOUT_CLASSIFICATION	2.9471240510561238E-5	DEFECT
//handle panning if we have a start point else unregister	WITHOUT_CLASSIFICATION	0.9999982196636943	WITHOUT_CLASSIFICATION	1.7803363056635453E-6	DEFECT
//if we have been panning reset the cursor //unregister in any case	WITHOUT_CLASSIFICATION	0.9999430934687615	WITHOUT_CLASSIFICATION	5.690653123857167E-5	DEFECT
// the URL text should already have been escaped by the URL generator	WITHOUT_CLASSIFICATION	0.9999854338317447	WITHOUT_CLASSIFICATION	1.4566168255305809E-5	DEFECT
// no fields to test	WITHOUT_CLASSIFICATION	0.9999994810115223	WITHOUT_CLASSIFICATION	5.18988477793207E-7	DEFECT
/// we have rotation huston, please spin me	WITHOUT_CLASSIFICATION	0.9999985119381465	WITHOUT_CLASSIFICATION	1.4880618535527466E-6	DEFECT
/// we have rotation huston, please spin me	WITHOUT_CLASSIFICATION	0.9999985119381465	WITHOUT_CLASSIFICATION	1.4880618535527466E-6	DEFECT
/// we have rotation	WITHOUT_CLASSIFICATION	0.9999862469690046	WITHOUT_CLASSIFICATION	1.3753030995448667E-5	DEFECT
/// we have rotation	WITHOUT_CLASSIFICATION	0.9999862469690046	WITHOUT_CLASSIFICATION	1.3753030995448667E-5	DEFECT
/// we have rotation	WITHOUT_CLASSIFICATION	0.9999862469690046	WITHOUT_CLASSIFICATION	1.3753030995448667E-5	DEFECT
// isArrowAtTop	WITHOUT_CLASSIFICATION	0.9999512385952853	WITHOUT_CLASSIFICATION	4.876140471471689E-5	DEFECT
//int maxX = (int) (plotArea.getMaxX());	WITHOUT_CLASSIFICATION	0.9999888943320295	WITHOUT_CLASSIFICATION	1.1105667970480484E-5	DEFECT
//int maxX = (int) (plotArea.getMaxX());	WITHOUT_CLASSIFICATION	0.9999888943320295	WITHOUT_CLASSIFICATION	1.1105667970480484E-5	DEFECT
//int midY = (int) (plotArea.getMinY() + (plotArea.getHeight() / 2));	WITHOUT_CLASSIFICATION	0.9999922129303934	WITHOUT_CLASSIFICATION	7.787069606657677E-6	DEFECT
//int midY = (int) (plotArea.getMinY() + (plotArea.getHeight() / 2));	WITHOUT_CLASSIFICATION	0.9999922129303934	WITHOUT_CLASSIFICATION	7.787069606657677E-6	DEFECT
/// we have rotation houston, please spin me	WITHOUT_CLASSIFICATION	0.9999972111002257	WITHOUT_CLASSIFICATION	2.7888997742611745E-6	DEFECT
// horizontal	WITHOUT_CLASSIFICATION	0.9999954712847143	WITHOUT_CLASSIFICATION	4.528715285704874E-6	DEFECT
// store the plot and its weight	WITHOUT_CLASSIFICATION	0.9999997721246203	WITHOUT_CLASSIFICATION	2.2787537965750162E-7	DEFECT
// configure the range axis...	WITHOUT_CLASSIFICATION	0.9999988685550764	WITHOUT_CLASSIFICATION	1.1314449236261226E-6	DEFECT
// work out the space required by the domain axis...	WITHOUT_CLASSIFICATION	0.9999458666922133	WITHOUT_CLASSIFICATION	5.413330778670839E-5	DEFECT
// work out the maximum height or width of the non-shared axes...	WITHOUT_CLASSIFICATION	0.999999613184032	WITHOUT_CLASSIFICATION	3.868159680693787E-7	DEFECT
// we expect the line to be vertical or horizontal // vertical	WITHOUT_CLASSIFICATION	0.9999983786738522	WITHOUT_CLASSIFICATION	1.6213261476942938E-6	DEFECT
// calculate plotAreas of all sub-plots, maximum vertical/horizontal // axis width/height	WITHOUT_CLASSIFICATION	0.9999998263449594	WITHOUT_CLASSIFICATION	1.736550405632182E-7	DEFECT
// calculate sub-plot area	WITHOUT_CLASSIFICATION	0.9999967782938604	WITHOUT_CLASSIFICATION	3.22170613955807E-6	DEFECT
// adjust the drawing area for plot insets (if any)...	WITHOUT_CLASSIFICATION	0.9999996884804844	WITHOUT_CLASSIFICATION	3.115195155366364E-7	DEFECT
// calculate the data area...	WITHOUT_CLASSIFICATION	0.9999969915026974	WITHOUT_CLASSIFICATION	3.0084973025751424E-6	DEFECT
// set the width and height of non-shared axis of all sub-plots	WITHOUT_CLASSIFICATION	0.999999982365336	WITHOUT_CLASSIFICATION	1.7634663877590254E-8	DEFECT
// draw the shared axis	WITHOUT_CLASSIFICATION	0.9999978762676353	WITHOUT_CLASSIFICATION	2.1237323647160175E-6	DEFECT
// draw all the charts	WITHOUT_CLASSIFICATION	0.9999997568767625	WITHOUT_CLASSIFICATION	2.431232376162776E-7	DEFECT
// the range axis is deserialized before the subplots, so its value // range is likely to be incorrect...	WITHOUT_CLASSIFICATION	0.9999895837226671	WITHOUT_CLASSIFICATION	1.0416277332866937E-5	DEFECT
// default preserves previous // behaviour	WITHOUT_CLASSIFICATION	0.9999991838346871	WITHOUT_CLASSIFICATION	8.161653127816014E-7	DEFECT
// adjust for insets...	WITHOUT_CLASSIFICATION	0.9999933933539424	WITHOUT_CLASSIFICATION	6.606646057526857E-6	DEFECT
// make the link area a square if the pie chart is to be circular... // is circular?	WITHOUT_CLASSIFICATION	0.9999977596185977	WITHOUT_CLASSIFICATION	2.2403814022346305E-6	DEFECT
// the link area defines the dog leg points for the linking lines to // the labels	WITHOUT_CLASSIFICATION	0.9999997220857916	WITHOUT_CLASSIFICATION	2.7791420833490724E-7	DEFECT
// the explode area defines the max circle/ellipse for the exploded pie // sections. // it is defined by shrinking the linkArea by the linkMargin factor.	WITHOUT_CLASSIFICATION	0.9999973209153495	WITHOUT_CLASSIFICATION	2.679084650502456E-6	DEFECT
// the pie area defines the circle/ellipse for regular pie sections. // it is defined by shrinking the explodeArea by the explodeMargin // factor.	WITHOUT_CLASSIFICATION	0.9999976340675025	WITHOUT_CLASSIFICATION	2.3659324975082754E-6	DEFECT
// the link area defines the dog-leg point for the linking lines to // the labels	WITHOUT_CLASSIFICATION	0.9999997839432931	WITHOUT_CLASSIFICATION	2.160567068391491E-7	DEFECT
// get the data source - return if null;	WITHOUT_CLASSIFICATION	0.9999997939676415	WITHOUT_CLASSIFICATION	2.0603235851492356E-7	DEFECT
// if too any elements	WITHOUT_CLASSIFICATION	0.9999974353029936	WITHOUT_CLASSIFICATION	2.564697006380472E-6	DEFECT
// get a list of keys...	WITHOUT_CLASSIFICATION	0.9999953702194625	WITHOUT_CLASSIFICATION	4.6297805374707396E-6	DEFECT
// do nothing by default.	WITHOUT_CLASSIFICATION	0.9999895473578722	WITHOUT_CLASSIFICATION	1.0452642127892136E-5	DEFECT
//g2.clip(clipArea);	WITHOUT_CLASSIFICATION	0.9999926510157678	WITHOUT_CLASSIFICATION	7.348984232110707E-6	DEFECT
// if depth is negative don't draw anything	WITHOUT_CLASSIFICATION	0.9999123479323505	WITHOUT_CLASSIFICATION	8.765206764953296E-5	DEFECT
// draw the bottom circle	WITHOUT_CLASSIFICATION	0.9999983738203236	WITHOUT_CLASSIFICATION	1.6261796763707835E-6	DEFECT
// draw the height	WITHOUT_CLASSIFICATION	0.9999973860874418	WITHOUT_CLASSIFICATION	2.6139125581728533E-6	DEFECT
// cycle through once drawing only the sides at the back...	WITHOUT_CLASSIFICATION	0.999999633566913	WITHOUT_CLASSIFICATION	3.6643308696689235E-7	DEFECT
// cycle through again drawing only the sides at the front...	WITHOUT_CLASSIFICATION	0.9999995483856264	WITHOUT_CLASSIFICATION	4.5161437356678134E-7	DEFECT
// add a tooltip for the section...	WITHOUT_CLASSIFICATION	0.9999998879224747	WITHOUT_CLASSIFICATION	1.1207752522612864E-7	DEFECT
// @mgs: using the method's return value was missing	WITHOUT_CLASSIFICATION	0.9999741396676259	WITHOUT_CLASSIFICATION	2.586033237411336E-5	DEFECT
// for CLOCKWISE charts, the extent will be negative...	WITHOUT_CLASSIFICATION	0.9999997614419054	WITHOUT_CLASSIFICATION	2.3855809456201733E-7	DEFECT
// start at front	WITHOUT_CLASSIFICATION	0.9999987298163028	WITHOUT_CLASSIFICATION	1.2701836971122484E-6	DEFECT
// the segment starts at the front, and wraps all // the way around // the back and finishes at the front again	WITHOUT_CLASSIFICATION	0.9999996368692866	WITHOUT_CLASSIFICATION	3.6313071343141896E-7	DEFECT
// starts at the front, finishes at the back (going // around the left side)	WITHOUT_CLASSIFICATION	0.9999999083664021	WITHOUT_CLASSIFICATION	9.16335979491195E-8	DEFECT
// the segment starts at the back (still extending // CLOCKWISE)	WITHOUT_CLASSIFICATION	0.9999993135238058	WITHOUT_CLASSIFICATION	6.864761942380157E-7	DEFECT
// whole segment stays at the back	WITHOUT_CLASSIFICATION	0.9999945129287553	WITHOUT_CLASSIFICATION	5.487071244770205E-6	DEFECT
// starts at the back, wraps around front, and // finishes at back again	WITHOUT_CLASSIFICATION	0.9999995624278527	WITHOUT_CLASSIFICATION	4.3757214739716763E-7	DEFECT
// starts at back, finishes at front (CLOCKWISE)	WITHOUT_CLASSIFICATION	0.9999972157479065	WITHOUT_CLASSIFICATION	2.784252093465201E-6	DEFECT
// segment starts at the front	WITHOUT_CLASSIFICATION	0.9999978259720617	WITHOUT_CLASSIFICATION	2.1740279383804044E-6	DEFECT
// and finishes at the front	WITHOUT_CLASSIFICATION	0.9999961220631928	WITHOUT_CLASSIFICATION	3.877936807168976E-6	DEFECT
// segment only occupies the front	WITHOUT_CLASSIFICATION	0.999999215765148	WITHOUT_CLASSIFICATION	7.842348518863367E-7	DEFECT
// segments wraps right around the back...	WITHOUT_CLASSIFICATION	0.9999998168973526	WITHOUT_CLASSIFICATION	1.8310264737926817E-7	DEFECT
// segments starts at front and finishes at back...	WITHOUT_CLASSIFICATION	0.9999993899099211	WITHOUT_CLASSIFICATION	6.10090079010047E-7	DEFECT
// segment starts at back	WITHOUT_CLASSIFICATION	0.9999979901439421	WITHOUT_CLASSIFICATION	2.009856057982203E-6	DEFECT
// and finishes at back	WITHOUT_CLASSIFICATION	0.999991375004264	WITHOUT_CLASSIFICATION	8.624995735961232E-6	DEFECT
//dmo //zero when the parameter is not set	WITHOUT_CLASSIFICATION	0.9999838604886887	WITHOUT_CLASSIFICATION	1.613951131120917E-5	DEFECT
// if there is an existing dataset, remove the plot from the list of // change listeners...	WITHOUT_CLASSIFICATION	0.9999995795289041	WITHOUT_CLASSIFICATION	4.2047109584777056E-7	DEFECT
// set the new dataset, and register the chart as a change listener...	WITHOUT_CLASSIFICATION	0.9999999336469156	WITHOUT_CLASSIFICATION	6.635308445747752E-8	DEFECT
// send a dataset change event to self...	WITHOUT_CLASSIFICATION	0.9999999713679724	WITHOUT_CLASSIFICATION	2.8632027740294147E-8	DEFECT
// plot is likely registered as a listener with the existing axis...	WITHOUT_CLASSIFICATION	0.9999939680361555	WITHOUT_CLASSIFICATION	6.031963844524844E-6	DEFECT
// plot is likely registered as a listener with the existing axis...	WITHOUT_CLASSIFICATION	0.9999939680361555	WITHOUT_CLASSIFICATION	6.031963844524844E-6	DEFECT
// if the plot area is too small, just return...	WITHOUT_CLASSIFICATION	0.9999990552682644	WITHOUT_CLASSIFICATION	9.447317356762296E-7	DEFECT
// record the plot area...	WITHOUT_CLASSIFICATION	0.9999982105324201	WITHOUT_CLASSIFICATION	1.7894675798616773E-6	DEFECT
// additional dataArea modifications //check whether modification is	WITHOUT_CLASSIFICATION	0.9999989625522638	WITHOUT_CLASSIFICATION	1.0374477362420638E-6	DEFECT
// ratio represents pixels	WITHOUT_CLASSIFICATION	0.9999993589074944	WITHOUT_CLASSIFICATION	6.410925056639865E-7	DEFECT
// ratio represents axis units	WITHOUT_CLASSIFICATION	0.9999985725473607	WITHOUT_CLASSIFICATION	1.4274526393466602E-6	DEFECT
// draw the plot background...	WITHOUT_CLASSIFICATION	0.9999984819038641	WITHOUT_CLASSIFICATION	1.5180961359367977E-6	DEFECT
// draw vertical crosshair if required...	WITHOUT_CLASSIFICATION	0.999999612613051	WITHOUT_CLASSIFICATION	3.8738694894797807E-7	DEFECT
// draw horizontal crosshair if required...	WITHOUT_CLASSIFICATION	0.9999991215139673	WITHOUT_CLASSIFICATION	8.784860326401026E-7	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9999995063106223	WITHOUT_CLASSIFICATION	4.936893777090077E-7	DEFECT
// delegate 'info' and 'source' argument checks...	WITHOUT_CLASSIFICATION	0.9999999697503175	WITHOUT_CLASSIFICATION	3.0249682480797355E-8	DEFECT
// work out the space required by the domain axis...	WITHOUT_CLASSIFICATION	0.9999458666922133	WITHOUT_CLASSIFICATION	5.413330778670839E-5	DEFECT
// delegate 'info' and 'source' argument checks...	WITHOUT_CLASSIFICATION	0.9999999697503175	WITHOUT_CLASSIFICATION	3.0249682480797355E-8	DEFECT
// now get the data and plot it (the visual representation will depend // on the renderer that has been set)...	WITHOUT_CLASSIFICATION	0.9999991075554059	WITHOUT_CLASSIFICATION	8.924445941415019E-7	DEFECT
// get the data points	WITHOUT_CLASSIFICATION	0.9999996467022223	WITHOUT_CLASSIFICATION	3.5329777774638527E-7	DEFECT
// this is a new column	WITHOUT_CLASSIFICATION	0.9999436743595528	WITHOUT_CLASSIFICATION	5.6325640447283985E-5	DEFECT
// end of column	WITHOUT_CLASSIFICATION	0.9999995568233899	WITHOUT_CLASSIFICATION	4.431766100830996E-7	DEFECT
// add an entity for the item...	WITHOUT_CLASSIFICATION	0.9999956724014626	WITHOUT_CLASSIFICATION	4.327598537415374E-6	DEFECT
//              }	WITHOUT_CLASSIFICATION	0.9999941484880298	WITHOUT_CLASSIFICATION	5.851511970228432E-6	DEFECT
// both axes	WITHOUT_CLASSIFICATION	0.9999969974357228	WITHOUT_CLASSIFICATION	3.0025642772413732E-6	DEFECT
// just the horizontal axis...	WITHOUT_CLASSIFICATION	0.9999970218677331	WITHOUT_CLASSIFICATION	2.978132266866193E-6	DEFECT
// just the vertical axis...	WITHOUT_CLASSIFICATION	0.9999989743275017	WITHOUT_CLASSIFICATION	1.0256724983150877E-6	DEFECT
// check a series with repeating items	WITHOUT_CLASSIFICATION	0.9999990001321699	WITHOUT_CLASSIFICATION	9.998678300841264E-7	DEFECT
// adjust for insets...	WITHOUT_CLASSIFICATION	0.9999933933539424	WITHOUT_CLASSIFICATION	6.606646057526857E-6	DEFECT
// adjust the plot area by the interior spacing value	WITHOUT_CLASSIFICATION	0.9999960737365128	WITHOUT_CLASSIFICATION	3.926263487311605E-6	DEFECT
// set the new dataset, and register the chart as a change listener...	WITHOUT_CLASSIFICATION	0.9999999336469156	WITHOUT_CLASSIFICATION	6.635308445747752E-8	DEFECT
// send a dataset change event to self...	WITHOUT_CLASSIFICATION	0.9999999713679724	WITHOUT_CLASSIFICATION	2.8632027740294147E-8	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9999995063106223	WITHOUT_CLASSIFICATION	4.936893777090077E-7	DEFECT
//turn off anti-aliasing when filling rectangles	WITHOUT_CLASSIFICATION	0.9999967383474401	WITHOUT_CLASSIFICATION	3.261652559876425E-6	DEFECT
// add an entity for the item...	WITHOUT_CLASSIFICATION	0.9999956724014626	WITHOUT_CLASSIFICATION	4.327598537415374E-6	DEFECT
// both axes	WITHOUT_CLASSIFICATION	0.9999969974357228	WITHOUT_CLASSIFICATION	3.0025642772413732E-6	DEFECT
// just the horizontal axis...	WITHOUT_CLASSIFICATION	0.9999970218677331	WITHOUT_CLASSIFICATION	2.978132266866193E-6	DEFECT
// just the vertical axis...	WITHOUT_CLASSIFICATION	0.9999989743275017	WITHOUT_CLASSIFICATION	1.0256724983150877E-6	DEFECT
// draw the background	WITHOUT_CLASSIFICATION	0.9999957718537846	WITHOUT_CLASSIFICATION	4.2281462154745755E-6	DEFECT
//Object oldValue = this.toolTipGenerator;	WITHOUT_CLASSIFICATION	0.9999683480608119	WITHOUT_CLASSIFICATION	3.165193918811884E-5	DEFECT
//Object oldValue = this.urlGenerator;	WITHOUT_CLASSIFICATION	0.9999584545945386	WITHOUT_CLASSIFICATION	4.154540546154043E-5	DEFECT
// plot the data (unless the dataset is null)...	WITHOUT_CLASSIFICATION	0.9999954695545948	WITHOUT_CLASSIFICATION	4.530445405096962E-6	DEFECT
// the following relies on the fact that the intervals are immutable	WITHOUT_CLASSIFICATION	0.999996688855475	WITHOUT_CLASSIFICATION	3.311144524997464E-6	DEFECT
// intentionally blank	WITHOUT_CLASSIFICATION	0.999977831197539	WITHOUT_CLASSIFICATION	2.2168802460940052E-5	DEFECT
// can't find any difference	WITHOUT_CLASSIFICATION	0.9999362351398615	WITHOUT_CLASSIFICATION	6.376486013848566E-5	DEFECT
// we're doing this for testing only, and make sure that we // only add data in descending order by x-value	WITHOUT_CLASSIFICATION	0.9999919188310284	WITHOUT_CLASSIFICATION	8.081168971606233E-6	DEFECT
// work out the maximum height or width of the non-shared axes...	WITHOUT_CLASSIFICATION	0.999999613184032	WITHOUT_CLASSIFICATION	3.868159680693787E-7	DEFECT
// calculate sub-plot area	WITHOUT_CLASSIFICATION	0.9999967782938604	WITHOUT_CLASSIFICATION	3.22170613955807E-6	DEFECT
// calculate sub-plot area	WITHOUT_CLASSIFICATION	0.9999967782938604	WITHOUT_CLASSIFICATION	3.22170613955807E-6	DEFECT
// set up info collection...	WITHOUT_CLASSIFICATION	0.9999990428993042	WITHOUT_CLASSIFICATION	9.571006958152355E-7	DEFECT
// adjust the drawing area for plot insets (if any)...	WITHOUT_CLASSIFICATION	0.9999996884804844	WITHOUT_CLASSIFICATION	3.115195155366364E-7	DEFECT
// calculate the data area...	WITHOUT_CLASSIFICATION	0.9999969915026974	WITHOUT_CLASSIFICATION	3.0084973025751424E-6	DEFECT
// set the width and height of non-shared axis of all sub-plots	WITHOUT_CLASSIFICATION	0.999999982365336	WITHOUT_CLASSIFICATION	1.7634663877590254E-8	DEFECT
// draw the shared axis	WITHOUT_CLASSIFICATION	0.9999978762676353	WITHOUT_CLASSIFICATION	2.1237323647160175E-6	DEFECT
// if there is an existing dataset, remove the plot from the list of // change listeners...	WITHOUT_CLASSIFICATION	0.9999995795289041	WITHOUT_CLASSIFICATION	4.2047109584777056E-7	DEFECT
// set the new dataset, and register the chart as a change listener...	WITHOUT_CLASSIFICATION	0.9999999336469156	WITHOUT_CLASSIFICATION	6.635308445747752E-8	DEFECT
// record the plot area...	WITHOUT_CLASSIFICATION	0.9999982105324201	WITHOUT_CLASSIFICATION	1.7894675798616773E-6	DEFECT
//  range = this.rangeAxis.getRange().getLength(); //  scaledRange = range * percent; //   rangeAxis.setAnchoredRange(scaledRange);	WITHOUT_CLASSIFICATION	0.9999845047562931	WITHOUT_CLASSIFICATION	1.5495243706910223E-5	DEFECT
// if the source point doesn't fall within a subplot, we do the // zoom on all subplots...	WITHOUT_CLASSIFICATION	0.9999995183214268	WITHOUT_CLASSIFICATION	4.816785732538452E-7	DEFECT
// draw all the subplots	WITHOUT_CLASSIFICATION	0.9999990207101053	WITHOUT_CLASSIFICATION	9.792898947871332E-7	DEFECT
// override is only for documentation purposes	WITHOUT_CLASSIFICATION	0.9999985491114214	WITHOUT_CLASSIFICATION	1.4508885785739752E-6	DEFECT
// send a dataset change event to self to trigger plot change event	WITHOUT_CLASSIFICATION	0.9999999957230679	WITHOUT_CLASSIFICATION	4.2769320884175274E-9	DEFECT
// adjust the drawing area for the plot insets (if any)...	WITHOUT_CLASSIFICATION	0.9999997282938243	WITHOUT_CLASSIFICATION	2.717061756692942E-7	DEFECT
// y is minor	WITHOUT_CLASSIFICATION	0.9999907189856678	WITHOUT_CLASSIFICATION	9.281014332099079E-6	DEFECT
// y is minor	WITHOUT_CLASSIFICATION	0.9999907189856678	WITHOUT_CLASSIFICATION	9.281014332099079E-6	DEFECT
//get major dimension	WITHOUT_CLASSIFICATION	0.999978180065861	WITHOUT_CLASSIFICATION	2.1819934138991314E-5	DEFECT
//ellipse diameter is the minor dimension	WITHOUT_CLASSIFICATION	0.9999395120225553	WITHOUT_CLASSIFICATION	6.048797744466746E-5	DEFECT
// draw the wafer	WITHOUT_CLASSIFICATION	0.9999964909961538	WITHOUT_CLASSIFICATION	3.5090038461973536E-6	DEFECT
// no data in the parent plot	WITHOUT_CLASSIFICATION	0.999997929344699	WITHOUT_CLASSIFICATION	2.0706553009102406E-6	DEFECT
// set up info collection...	WITHOUT_CLASSIFICATION	0.9999990428993042	WITHOUT_CLASSIFICATION	9.571006958152355E-7	DEFECT
// set the width and height of non-shared axis of all sub-plots	WITHOUT_CLASSIFICATION	0.999999982365336	WITHOUT_CLASSIFICATION	1.7634663877590254E-8	DEFECT
// draw the shared axis	WITHOUT_CLASSIFICATION	0.9999978762676353	WITHOUT_CLASSIFICATION	2.1237323647160175E-6	DEFECT
// draw all the charts	WITHOUT_CLASSIFICATION	0.9999997568767625	WITHOUT_CLASSIFICATION	2.431232376162776E-7	DEFECT
// adjust for insets...	WITHOUT_CLASSIFICATION	0.9999933933539424	WITHOUT_CLASSIFICATION	6.606646057526857E-6	DEFECT
// if there is an existing dataset, remove the plot from the list of // change listeners...	WITHOUT_CLASSIFICATION	0.9999995795289041	WITHOUT_CLASSIFICATION	4.2047109584777056E-7	DEFECT
// set the new dataset, and register the chart as a change listener...	WITHOUT_CLASSIFICATION	0.9999999336469156	WITHOUT_CLASSIFICATION	6.635308445747752E-8	DEFECT
// send a dataset change event to self...	WITHOUT_CLASSIFICATION	0.9999999713679724	WITHOUT_CLASSIFICATION	2.8632027740294147E-8	DEFECT
// delegate 'info' and 'source' argument checks...	WITHOUT_CLASSIFICATION	0.9999999697503175	WITHOUT_CLASSIFICATION	3.0249682480797355E-8	DEFECT
// if the source point doesn't fall within a subplot, we do the // zoom on all subplots...	WITHOUT_CLASSIFICATION	0.9999995183214268	WITHOUT_CLASSIFICATION	4.816785732538452E-7	DEFECT
//set upperLeft point // x is minor	WITHOUT_CLASSIFICATION	0.9999938988536387	WITHOUT_CLASSIFICATION	6.101146361411418E-6	DEFECT
//set upperLeft point // x is minor	WITHOUT_CLASSIFICATION	0.9999938988536387	WITHOUT_CLASSIFICATION	6.101146361411418E-6	DEFECT
// calculate and draw the notch // horizontal orientation is considered notch right // vertical orientation is considered notch down	WITHOUT_CLASSIFICATION	0.9999971030418039	WITHOUT_CLASSIFICATION	2.8969581960403797E-6	DEFECT
//this.axisOffset.trim(dataArea);	WITHOUT_CLASSIFICATION	0.9999819123603603	WITHOUT_CLASSIFICATION	1.808763963973872E-5	DEFECT
//// SECTION PAINT ////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999927556513714	WITHOUT_CLASSIFICATION	7.244348628676441E-6	DEFECT
// is there an override?	WITHOUT_CLASSIFICATION	0.9985188111189724	WITHOUT_CLASSIFICATION	0.0014811888810276304	DEFECT
// if not, check if there is a paint defined for the specified key	WITHOUT_CLASSIFICATION	0.9999990807813753	WITHOUT_CLASSIFICATION	9.19218624602835E-7	DEFECT
// if not, check if there is a paint defined for the specified key	WITHOUT_CLASSIFICATION	0.9999990807813753	WITHOUT_CLASSIFICATION	9.19218624602835E-7	DEFECT
// nothing defined - do we autoPopulate?	WITHOUT_CLASSIFICATION	0.9999884781388856	WITHOUT_CLASSIFICATION	1.1521861114499436E-5	DEFECT
// nothing defined - do we autoPopulate?	WITHOUT_CLASSIFICATION	0.9999884781388856	WITHOUT_CLASSIFICATION	1.1521861114499436E-5	DEFECT
// null argument check delegated...	WITHOUT_CLASSIFICATION	0.9999996755351886	WITHOUT_CLASSIFICATION	3.2446481134550375E-7	DEFECT
// null argument check delegated...	WITHOUT_CLASSIFICATION	0.9999996755351886	WITHOUT_CLASSIFICATION	3.2446481134550375E-7	DEFECT
// null argument check delegated...	WITHOUT_CLASSIFICATION	0.9999996755351886	WITHOUT_CLASSIFICATION	3.2446481134550375E-7	DEFECT
//// SECTION OUTLINE PAINT ////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999931576460657	WITHOUT_CLASSIFICATION	6.842353934350953E-6	DEFECT
//// SECTION OUTLINE STROKE ///////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999943219996039	WITHOUT_CLASSIFICATION	5.678000396076326E-6	DEFECT
// if not, check if there is a stroke defined for the specified key	WITHOUT_CLASSIFICATION	0.9999993840139337	WITHOUT_CLASSIFICATION	6.159860662365547E-7	DEFECT
// adjust the plot area for interior spacing and labels...	WITHOUT_CLASSIFICATION	0.9999997517329478	WITHOUT_CLASSIFICATION	2.482670522257445E-7	DEFECT
// make the link area a square if the pie chart is to be circular...	WITHOUT_CLASSIFICATION	0.9999999227107778	WITHOUT_CLASSIFICATION	7.728922218442162E-8	DEFECT
// work out the space required by the domain axis...	WITHOUT_CLASSIFICATION	0.9999458666922133	WITHOUT_CLASSIFICATION	5.413330778670839E-5	DEFECT
// work out the maximum height or width of the non-shared axes...	WITHOUT_CLASSIFICATION	0.999999613184032	WITHOUT_CLASSIFICATION	3.868159680693787E-7	DEFECT
// calculate sub-plot area	WITHOUT_CLASSIFICATION	0.9999967782938604	WITHOUT_CLASSIFICATION	3.22170613955807E-6	DEFECT
// adjust the drawing area for plot insets (if any)...	WITHOUT_CLASSIFICATION	0.9999996884804844	WITHOUT_CLASSIFICATION	3.115195155366364E-7	DEFECT
// the pie area defines the circle/ellipse for regular pie sections. // it is defined by shrinking the explodeArea by the explodeMargin // factor.	WITHOUT_CLASSIFICATION	0.9999976340675025	WITHOUT_CLASSIFICATION	2.3659324975082754E-6	DEFECT
// if there is an existing dataset, remove the plot from the list of // change listeners...	WITHOUT_CLASSIFICATION	0.9999995795289041	WITHOUT_CLASSIFICATION	4.2047109584777056E-7	DEFECT
// plot the data (unless the dataset is null)...	WITHOUT_CLASSIFICATION	0.9999954695545948	WITHOUT_CLASSIFICATION	4.530445405096962E-6	DEFECT
// no data in the parent plot	WITHOUT_CLASSIFICATION	0.999997929344699	WITHOUT_CLASSIFICATION	2.0706553009102406E-6	DEFECT
// update the linking line target for later // add an entity for the pie section	WITHOUT_CLASSIFICATION	0.9999970508964209	WITHOUT_CLASSIFICATION	2.9491035791690765E-6	DEFECT
// work out the mid angle (0 - 90 and 270 - 360) = right, // otherwise left	WITHOUT_CLASSIFICATION	0.9999899536885518	WITHOUT_CLASSIFICATION	1.0046311448261602E-5	DEFECT
// classify the keys according to which side the label will appear...	WITHOUT_CLASSIFICATION	0.9999982012524747	WITHOUT_CLASSIFICATION	1.798747525284333E-6	DEFECT
// calculate the max label width from the plot dimensions, because // a circular pie can leave a lot more room for labels...	WITHOUT_CLASSIFICATION	0.9999997717480413	WITHOUT_CLASSIFICATION	2.2825195862359077E-7	DEFECT
// draw the labels...	WITHOUT_CLASSIFICATION	0.9999985631114818	WITHOUT_CLASSIFICATION	1.436888518153042E-6	DEFECT
// draw the right labels...	WITHOUT_CLASSIFICATION	0.9999983217685178	WITHOUT_CLASSIFICATION	1.6782314821833864E-6	DEFECT
//hh * getInteriorGap();	WITHOUT_CLASSIFICATION	0.9999964131385956	WITHOUT_CLASSIFICATION	3.586861404503179E-6	DEFECT
// line not visible	WITHOUT_CLASSIFICATION	0.999979892147597	WITHOUT_CLASSIFICATION	2.0107852403109546E-5	DEFECT
// for a RadialGradientPaint we adjust the center and radius to match // the current pie segment...	WITHOUT_CLASSIFICATION	0.9999999648116152	WITHOUT_CLASSIFICATION	3.5188384820505894E-8	DEFECT
// can't find any difference...	WITHOUT_CLASSIFICATION	0.99996526708307	WITHOUT_CLASSIFICATION	3.4732916930009736E-5	DEFECT
// DEPRECATED FIELDS AND METHODS...	WITHOUT_CLASSIFICATION	0.9998382616127999	WITHOUT_CLASSIFICATION	1.6173838720007393E-4	DEFECT
// no range axis // no renderer	WITHOUT_CLASSIFICATION	0.999995964953329	WITHOUT_CLASSIFICATION	4.035046671039179E-6	DEFECT
// backgroundImage	WITHOUT_CLASSIFICATION	0.9999985365574862	WITHOUT_CLASSIFICATION	1.46344251377951E-6	DEFECT
// set the width and height of non-shared axis of all sub-plots	WITHOUT_CLASSIFICATION	0.999999982365336	WITHOUT_CLASSIFICATION	1.7634663877590254E-8	DEFECT
// draw the shared axis	WITHOUT_CLASSIFICATION	0.9999978762676353	WITHOUT_CLASSIFICATION	2.1237323647160175E-6	DEFECT
// if there is an existing dataset, remove the plot from the list of // change listeners...	WITHOUT_CLASSIFICATION	0.9999995795289041	WITHOUT_CLASSIFICATION	4.2047109584777056E-7	DEFECT
// set the new dataset, and register the chart as a change listener...	WITHOUT_CLASSIFICATION	0.9999999336469156	WITHOUT_CLASSIFICATION	6.635308445747752E-8	DEFECT
// delegate 'info' and 'source' argument checks...	WITHOUT_CLASSIFICATION	0.9999999697503175	WITHOUT_CLASSIFICATION	3.0249682480797355E-8	DEFECT
// if the source point doesn't fall within a subplot, we do the // zoom on all subplots...	WITHOUT_CLASSIFICATION	0.9999995183214268	WITHOUT_CLASSIFICATION	4.816785732538452E-7	DEFECT
// draw all the subplots	WITHOUT_CLASSIFICATION	0.9999990207101053	WITHOUT_CLASSIFICATION	9.792898947871332E-7	DEFECT
// send a dataset change event to self to trigger plot change event	WITHOUT_CLASSIFICATION	0.9999999957230679	WITHOUT_CLASSIFICATION	4.2769320884175274E-9	DEFECT
// adjust the drawing area for the plot insets (if any)...	WITHOUT_CLASSIFICATION	0.9999997282938243	WITHOUT_CLASSIFICATION	2.717061756692942E-7	DEFECT
// delegate 'state' and 'source' argument checks...	WITHOUT_CLASSIFICATION	0.9999999758090887	WITHOUT_CLASSIFICATION	2.4190911348553862E-8	DEFECT
// after setting up all the subplots, the shared domain axis may need // reconfiguring	WITHOUT_CLASSIFICATION	0.9999994949307831	WITHOUT_CLASSIFICATION	5.050692167884637E-7	DEFECT
// 20% // 20% // 20%	WITHOUT_CLASSIFICATION	0.9999917352994592	WITHOUT_CLASSIFICATION	8.26470054075907E-6	DEFECT
// create the bounds for the inner arc	WITHOUT_CLASSIFICATION	0.9999995705613579	WITHOUT_CLASSIFICATION	4.294386420633494E-7	DEFECT
// calculate inner arc in reverse direction, for later // GeneralPath construction	WITHOUT_CLASSIFICATION	0.999975577189548	WITHOUT_CLASSIFICATION	2.4422810452013813E-5	DEFECT
// add an entity for the pie section	WITHOUT_CLASSIFICATION	0.9999981282620322	WITHOUT_CLASSIFICATION	1.871737967730265E-6	DEFECT
// check that there is some data to display...	WITHOUT_CLASSIFICATION	0.999998986172376	WITHOUT_CLASSIFICATION	1.013827624015581E-6	DEFECT
// the columns variable is always >= rows	WITHOUT_CLASSIFICATION	0.9999978563393751	WITHOUT_CLASSIFICATION	2.143660624942154E-6	DEFECT
// swap rows and columns to match plotArea shape	WITHOUT_CLASSIFICATION	0.9999998978707524	WITHOUT_CLASSIFICATION	1.0212924757840914E-7	DEFECT
// update the section colors to match the global colors...	WITHOUT_CLASSIFICATION	0.9999999770289961	WITHOUT_CLASSIFICATION	2.297100383569518E-8	DEFECT
// pre-fetch the colors for each key...this is because the subplots // may not display every key, but we need the coloring to be // consistent...	WITHOUT_CLASSIFICATION	0.999997584056618	WITHOUT_CLASSIFICATION	2.415943382088516E-6	DEFECT
// column keys provide potential keys for individual pies	WITHOUT_CLASSIFICATION	0.9999999053041374	WITHOUT_CLASSIFICATION	9.469586266825967E-8	DEFECT
// row keys provide potential keys for individual pies	WITHOUT_CLASSIFICATION	0.9999994917388082	WITHOUT_CLASSIFICATION	5.082611917738446E-7	DEFECT
/* =========================================================== * JFreeChart : a free chart library for the Java(tm) platform * =========================================================== * * (C) Copyright 2000-2014, by Object Refinery Limited and Contributors. * * Project Info:  http://www.jfree.org/jfreechart/index.html * * This library is free software; you can redistribute it and/or modify it * under the terms of the GNU Lesser General Public License as published by * the Free Software Foundation; either version 2.1 of the License, or * (at your option) any later version. * * This library is distributed in the hope that it will be useful, but * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public * License for more details. * * You should have received a copy of the GNU Lesser General Public * License along with this library; if not, write to the Free Software * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, * USA. * * [Oracle and Java are registered trademarks of Oracle and/or its affiliates. * Other names may be trademarks of their respective owners.] * * ----------------- * CategoryPlot.java * ----------------- * (C) Copyright 2000-2014, by Object Refinery Limited and Contributors. * * Original Author:  David Gilbert (for Object Refinery Limited); * Contributor(s):   Jeremy Bowman; *                   Arnaud Lelievre; *                   Richard West, Advanced Micro Devices, Inc.; *                   Ulrich Voigt - patch 2686040; *                   Peter Kolb - patches 2603321 and 2809117; * * Changes * ------- * 21-Jun-2001 : Removed redundant JFreeChart parameter from constructors (DG); * 21-Aug-2001 : Added standard header. Fixed DOS encoding problem (DG); * 18-Sep-2001 : Updated header (DG); * 15-Oct-2001 : Data source classes moved to com.jrefinery.data.* (DG); * 22-Oct-2001 : Renamed DataSource.java --> Dataset.java etc. (DG); * 23-Oct-2001 : Changed intro and trail gaps on bar plots to use percentage of *               available space rather than a fixed number of units (DG); * 12-Dec-2001 : Changed constructors to protected (DG); * 13-Dec-2001 : Added tooltips (DG); * 16-Jan-2002 : Increased maximum intro and trail gap percents, plus added *               some argument checking code.  Thanks to Taoufik Romdhane for *               suggesting this (DG); * 05-Feb-2002 : Added accessor methods for the tooltip generator, incorporated *               alpha-transparency for Plot and subclasses (DG); * 06-Mar-2002 : Updated import statements (DG); * 14-Mar-2002 : Renamed BarPlot.java --> CategoryPlot.java, and changed code *               to use the CategoryItemRenderer interface (DG); * 22-Mar-2002 : Dropped the getCategories() method (DG); * 23-Apr-2002 : Moved the dataset from the JFreeChart class to the Plot *               class (DG); * 29-Apr-2002 : New methods to support printing values at the end of bars, *               contributed by Jeremy Bowman (DG); * 11-May-2002 : New methods for label visibility and overlaid plot support, *               contributed by Jeremy Bowman (DG); * 06-Jun-2002 : Removed the tooltip generator, this is now stored with the *               renderer.  Moved constants into the CategoryPlotConstants *               interface.  Updated Javadoc comments (DG); * 10-Jun-2002 : Overridden datasetChanged() method to update the upper and *               lower bound on the range axis (if necessary), updated *               Javadocs (DG); * 25-Jun-2002 : Removed redundant imports (DG); * 20-Aug-2002 : Changed the constructor for Marker (DG); * 28-Aug-2002 : Added listener notification to setDomainAxis() and *               setRangeAxis() (DG); * 23-Sep-2002 : Added getLegendItems() method and fixed errors reported by *               Checkstyle (DG); * 28-Oct-2002 : Changes to the CategoryDataset interface (DG); * 05-Nov-2002 : Base dataset is now TableDataset not CategoryDataset (DG); * 07-Nov-2002 : Renamed labelXXX as valueLabelXXX (DG); * 18-Nov-2002 : Added grid settings for both domain and range axis (previously *               these were set in the axes) (DG); * 19-Nov-2002 : Added axis location parameters to constructor (DG); * 17-Jan-2003 : Moved to com.jrefinery.chart.plot package (DG); * 14-Feb-2003 : Fixed bug in auto-range calculation for secondary axis (DG); * 26-Mar-2003 : Implemented Serializable (DG); * 02-May-2003 : Moved render() method up from subclasses. Added secondary *               range markers. Added an attribute to control the dataset *               rendering order.  Added a drawAnnotations() method.  Changed *               the axis location from an int to an AxisLocation (DG); * 07-May-2003 : Merged HorizontalCategoryPlot and VerticalCategoryPlot into *               this class (DG); * 02-Jun-2003 : Removed check for range axis compatibility (DG); * 04-Jul-2003 : Added a domain gridline position attribute (DG); * 21-Jul-2003 : Moved DrawingSupplier to Plot superclass (DG); * 19-Aug-2003 : Added equals() method and implemented Cloneable (DG); * 01-Sep-2003 : Fixed bug 797466 (no change event when secondary dataset *               changes) (DG); * 02-Sep-2003 : Fixed bug 795209 (wrong dataset checked in render2 method) and *               790407 (initialise method) (DG); * 08-Sep-2003 : Added internationalization via use of properties *               resourceBundle (RFE 690236) (AL); * 08-Sep-2003 : Fixed bug (wrong secondary range axis being used).  Changed *               ValueAxis API (DG); * 10-Sep-2003 : Fixed bug in setRangeAxis() method (DG); * 15-Sep-2003 : Fixed two bugs in serialization, implemented *               PublicCloneable (DG); * 23-Oct-2003 : Added event notification for changes to renderer (DG); * 26-Nov-2003 : Fixed bug (849645) in clearRangeMarkers() method (DG); * 03-Dec-2003 : Modified draw method to accept anchor (DG); * 21-Jan-2004 : Update for renamed method in ValueAxis (DG); * 10-Mar-2004 : Fixed bug in axis range calculation when secondary renderer is *               stacked (DG); * 12-May-2004 : Added fixed legend items (DG); * 19-May-2004 : Added check for null legend item from renderer (DG); * 02-Jun-2004 : Updated the DatasetRenderingOrder class (DG); * 05-Nov-2004 : Renamed getDatasetsMappedToRangeAxis() *               --> datasetsMappedToRangeAxis(), and ensured that returned *               list doesn't contain null datasets (DG); * 12-Nov-2004 : Implemented new Zoomable interface (DG); * 07-Jan-2005 : Renamed getRangeExtent() --> findRangeBounds() in *               CategoryItemRenderer (DG); * 04-May-2005 : Fixed serialization of range markers (DG); * 05-May-2005 : Updated draw() method parameters (DG); * 20-May-2005 : Added setDomainAxes() and setRangeAxes() methods, as per *               RFE 1183100 (DG); * 01-Jun-2005 : Upon deserialization, register plot as a listener with its *               axes, dataset(s) and renderer(s) - see patch 1209475 (DG); * 02-Jun-2005 : Added support for domain markers (DG); * 06-Jun-2005 : Fixed equals() method for use with GradientPaint (DG); * 09-Jun-2005 : Added setRenderers(), as per RFE 1183100 (DG); * 16-Jun-2005 : Added getDomainAxisCount() and getRangeAxisCount() methods, to *               match XYPlot (see RFE 1220495) (DG); * ------------- JFREECHART 1.0.x --------------------------------------------- * 11-Jan-2006 : Added configureRangeAxes() to rendererChanged(), since the *               renderer might influence the axis range (DG); * 27-Jan-2006 : Added various null argument checks (DG); * 18-Aug-2006 : Added getDatasetCount() method, plus a fix for bug drawing *               category labels, thanks to Adriaan Joubert (1277726) (DG); * 05-Sep-2006 : Added MarkerChangeEvent support (DG); * 30-Oct-2006 : Added getDomainAxisIndex(), datasetsMappedToDomainAxis() and *               getCategoriesForAxis() methods (DG); * 22-Nov-2006 : Fire PlotChangeEvent from setColumnRenderingOrder() and *               setRowRenderingOrder() (DG); * 29-Nov-2006 : Fix for bug 1605207 (IntervalMarker exceeds bounds of data *               area) (DG); * 26-Feb-2007 : Fix for bug 1669218 (setDomainAxisLocation() notify argument *               ignored) (DG); * 13-Mar-2007 : Added null argument checks for setRangeCrosshairPaint() and *               setRangeCrosshairStroke(), fixed clipping for *               annotations (DG); * 07-Jun-2007 : Override drawBackground() for new GradientPaint handling (DG); * 10-Jul-2007 : Added getRangeAxisIndex(ValueAxis) method (DG); * 24-Sep-2007 : Implemented new zoom methods (DG); * 25-Oct-2007 : Added some argument checks (DG); * 05-Nov-2007 : Applied patch 1823697, by Richard West, for removal of domain *               and range markers (DG); * 14-Nov-2007 : Added missing event notifications (DG); * 25-Mar-2008 : Added new methods with optional notification - see patch *               1913751 (DG); * 07-Apr-2008 : Fixed NPE in removeDomainMarker() and *               removeRangeMarker() (DG); * 23-Apr-2008 : Fixed equals() and clone() methods (DG); * 26-Jun-2008 : Fixed crosshair support (DG); * 10-Jul-2008 : Fixed outline visibility for 3D renderers (DG); * 12-Aug-2008 : Added rendererCount() method (DG); * 25-Nov-2008 : Added facility to map datasets to multiples axes (DG); * 15-Dec-2008 : Cleaned up grid drawing methods (DG); * 18-Dec-2008 : Use ResourceBundleWrapper - see patch 1607918 by *               Jess Thrysoee (DG); * 21-Jan-2009 : Added rangeMinorGridlinesVisible flag (DG); * 18-Mar-2009 : Modified anchored zoom behaviour (DG); * 19-Mar-2009 : Implemented Pannable interface - see patch 2686040 (DG); * 19-Mar-2009 : Added entity support - see patch 2603321 by Peter Kolb (DG); * 24-Jun-2009 : Implemented AnnotationChangeListener (see patch 2809117 by *               PK) (DG); * 06-Jul-2009 : Fix for cloning of renderers - see bug 2817504 (DG) * 10-Jul-2009 : Added optional drop shadow generator (DG); * 27-Sep-2011 : Fixed annotation import (DG); * 18-Oct-2011 : Fixed tooltip offset with shadow generator (DG); * 20-Nov-2011 : Initialise shadow generator as null (DG); * 02-Jul-2013 : Use ParamChecks (DG); * 12-Sep-2013 : Check for KEY_SUPPRESS_SHADOW_GENERATION rendering hint (DG); * 10-Mar-2014 : Updated Javadocs for issue #1123 (DG); * 09-Apr-2014 : Remove use of ObjectList (DG); *  */	WITHOUT_CLASSIFICATION	0.9999986056443197	WITHOUT_CLASSIFICATION	1.394355680169034E-6	DEFECT
// allocate storage for dataset, axes and renderers	WITHOUT_CLASSIFICATION	0.9999994682043545	WITHOUT_CLASSIFICATION	5.317956454175927E-7	DEFECT
// delegate...	WITHOUT_CLASSIFICATION	0.9999987910794105	WITHOUT_CLASSIFICATION	1.2089205895662219E-6	DEFECT
// delegate...	WITHOUT_CLASSIFICATION	0.9999987910794105	WITHOUT_CLASSIFICATION	1.2089205895662219E-6	DEFECT
// calculate the data area...	WITHOUT_CLASSIFICATION	0.9999969915026974	WITHOUT_CLASSIFICATION	3.0084973025751424E-6	DEFECT
// send a dataset change event to self...	WITHOUT_CLASSIFICATION	0.9999999713679724	WITHOUT_CLASSIFICATION	2.8632027740294147E-8	DEFECT
// if the plot area is too small, just return...	WITHOUT_CLASSIFICATION	0.9999990552682644	WITHOUT_CLASSIFICATION	9.447317356762296E-7	DEFECT
// record the plot area...	WITHOUT_CLASSIFICATION	0.9999982105324201	WITHOUT_CLASSIFICATION	1.7894675798616773E-6	DEFECT
// adjust the drawing area for the plot insets (if any)...	WITHOUT_CLASSIFICATION	0.9999997282938243	WITHOUT_CLASSIFICATION	2.717061756692942E-7	DEFECT
// set the anchor value for the range axis...	WITHOUT_CLASSIFICATION	0.999999308976086	WITHOUT_CLASSIFICATION	6.910239138917048E-7	DEFECT
// OK	WITHOUT_CLASSIFICATION	0.9999871538766184	WITHOUT_CLASSIFICATION	1.2846123381676648E-5	DEFECT
// fake a dataset change event to update axes...	WITHOUT_CLASSIFICATION	0.9999998198027383	WITHOUT_CLASSIFICATION	1.801972615990069E-7	DEFECT
// fake a dataset change event to update axes...	WITHOUT_CLASSIFICATION	0.9999998198027383	WITHOUT_CLASSIFICATION	1.801972615990069E-7	DEFECT
// the first axis in the list is used for data <--> Java2D	WITHOUT_CLASSIFICATION	0.9999996911892245	WITHOUT_CLASSIFICATION	3.0881077547525783E-7	DEFECT
// the first axis in the list is used for data <--> Java2D	WITHOUT_CLASSIFICATION	0.9999996911892245	WITHOUT_CLASSIFICATION	3.0881077547525783E-7	DEFECT
// get the legend items for the datasets...	WITHOUT_CLASSIFICATION	0.9999998605741617	WITHOUT_CLASSIFICATION	1.394258383378033E-7	DEFECT
// this should never happen with the existing code, but throw // an exception in case future changes make it possible...	WITHOUT_CLASSIFICATION	0.9999504500053733	WITHOUT_CLASSIFICATION	4.954999462664992E-5	DEFECT
// should be equal...	WITHOUT_CLASSIFICATION	0.9999766000279299	WITHOUT_CLASSIFICATION	2.3399972070047195E-5	DEFECT
// reserve some space for the domain axis...	WITHOUT_CLASSIFICATION	0.9999950539035236	WITHOUT_CLASSIFICATION	4.946096476380866E-6	DEFECT
// reserve space for the primary domain axis...	WITHOUT_CLASSIFICATION	0.999996593546288	WITHOUT_CLASSIFICATION	3.4064537119421236E-6	DEFECT
// reserve space for any domain axes...	WITHOUT_CLASSIFICATION	0.9999910866663343	WITHOUT_CLASSIFICATION	8.913333665758805E-6	DEFECT
// reserve some space for the range axis...	WITHOUT_CLASSIFICATION	0.9999923993094624	WITHOUT_CLASSIFICATION	7.600690537535998E-6	DEFECT
// reserve space for the range axes (if any)...	WITHOUT_CLASSIFICATION	0.9999984313660855	WITHOUT_CLASSIFICATION	1.568633914498714E-6	DEFECT
// if the incoming state is null, no information will be passed // back to the caller - but we create a temporary state to record // the plot area, since that is used later by the axes	WITHOUT_CLASSIFICATION	0.9999997680633427	WITHOUT_CLASSIFICATION	2.3193665726288204E-7	DEFECT
// if there is a renderer, it draws the background, otherwise use the // default background...	WITHOUT_CLASSIFICATION	0.9999986545586553	WITHOUT_CLASSIFICATION	1.3454413446542897E-6	DEFECT
// the anchor point is typically the point where the mouse last // clicked - the crosshairs will be driven off this point...	WITHOUT_CLASSIFICATION	0.9999986180549779	WITHOUT_CLASSIFICATION	1.3819450220771856E-6	DEFECT
// specify the anchor X and Y coordinates in Java2D space, for the // cases where these are not updated during rendering (i.e. no lock // on data)	WITHOUT_CLASSIFICATION	0.9999980282867796	WITHOUT_CLASSIFICATION	1.9717132202835225E-6	DEFECT
// don't let anyone draw outside the data area	WITHOUT_CLASSIFICATION	0.9999977545486283	WITHOUT_CLASSIFICATION	2.2454513718142496E-6	DEFECT
// draw the markers...	WITHOUT_CLASSIFICATION	0.9999938345960662	WITHOUT_CLASSIFICATION	6.1654039337781896E-6	DEFECT
// now render data items...	WITHOUT_CLASSIFICATION	0.9999971168610391	WITHOUT_CLASSIFICATION	2.883138960949339E-6	DEFECT
// set up the alpha-transparency...	WITHOUT_CLASSIFICATION	0.9999998179147807	WITHOUT_CLASSIFICATION	1.8208521924811343E-7	DEFECT
// if the flag is being set to true, there may be queued up changes...	WITHOUT_CLASSIFICATION	0.9999991882065183	WITHOUT_CLASSIFICATION	8.117934816587276E-7	DEFECT
// an empty dataset should return a null range	WITHOUT_CLASSIFICATION	0.9999838486668315	WITHOUT_CLASSIFICATION	1.615133316848508E-5	DEFECT
// draw the foreground markers...	WITHOUT_CLASSIFICATION	0.9999973420779974	WITHOUT_CLASSIFICATION	2.6579220025598913E-6	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999934710680527	WITHOUT_CLASSIFICATION	6.528931947226976E-6	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999934710680527	WITHOUT_CLASSIFICATION	6.528931947226976E-6	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999934710680527	WITHOUT_CLASSIFICATION	6.528931947226976E-6	DEFECT
// draw the annotations (if any)...	WITHOUT_CLASSIFICATION	0.9999968172441415	WITHOUT_CLASSIFICATION	3.182755858584965E-6	DEFECT
// draw domain crosshair if required...	WITHOUT_CLASSIFICATION	0.9999993128556836	WITHOUT_CLASSIFICATION	6.87144316501603E-7	DEFECT
// draw range crosshair if required...	WITHOUT_CLASSIFICATION	0.9999987267916916	WITHOUT_CLASSIFICATION	1.273208308377339E-6	DEFECT
// draw an outline around the plot area...	WITHOUT_CLASSIFICATION	0.9999992274723952	WITHOUT_CLASSIFICATION	7.725276046924311E-7	DEFECT
// add domain axes to lists...	WITHOUT_CLASSIFICATION	0.9999864537001025	WITHOUT_CLASSIFICATION	1.3546299897441103E-5	DEFECT
// add range axes to lists...	WITHOUT_CLASSIFICATION	0.9999933949814847	WITHOUT_CLASSIFICATION	6.605018515418339E-6	DEFECT
// draw the top axes	WITHOUT_CLASSIFICATION	0.9999994918415579	WITHOUT_CLASSIFICATION	5.081584420512226E-7	DEFECT
// draw the bottom axes	WITHOUT_CLASSIFICATION	0.9999977172978567	WITHOUT_CLASSIFICATION	2.282702143269469E-6	DEFECT
// draw the left axes	WITHOUT_CLASSIFICATION	0.9999975820130486	WITHOUT_CLASSIFICATION	2.41798695144276E-6	DEFECT
// draw the right axes	WITHOUT_CLASSIFICATION	0.9999967184363867	WITHOUT_CLASSIFICATION	3.2815636133420214E-6	DEFECT
// draw the range grid lines, if any...	WITHOUT_CLASSIFICATION	0.9999981957147107	WITHOUT_CLASSIFICATION	1.804285289263576E-6	DEFECT
// no renderer, no gridlines...	WITHOUT_CLASSIFICATION	0.9999994450977068	WITHOUT_CLASSIFICATION	5.549022931785104E-7	DEFECT
// iterate through the datasets that map to the axis and get the union // of the ranges.	WITHOUT_CLASSIFICATION	0.999999685667134	WITHOUT_CLASSIFICATION	3.143328659618055E-7	DEFECT
// add the unique categories from this dataset	WITHOUT_CLASSIFICATION	0.9999933261446522	WITHOUT_CLASSIFICATION	6.673855347814932E-6	DEFECT
// do nothing, because the plot is not pannable along the domain axes	WITHOUT_CLASSIFICATION	0.9999992959807981	WITHOUT_CLASSIFICATION	7.040192020038657E-7	DEFECT
// can't zoom domain axis	WITHOUT_CLASSIFICATION	0.9999613057355141	WITHOUT_CLASSIFICATION	3.869426448587957E-5	DEFECT
// delegate to other method	WITHOUT_CLASSIFICATION	0.999994842119158	WITHOUT_CLASSIFICATION	5.1578808420156345E-6	DEFECT
// perform the zoom on each range axis	WITHOUT_CLASSIFICATION	0.9999979649775348	WITHOUT_CLASSIFICATION	2.035022465235698E-6	DEFECT
// get the relevant source coordinate given the plot orientation	WITHOUT_CLASSIFICATION	0.9999999685130881	WITHOUT_CLASSIFICATION	3.148691186722112E-8	DEFECT
// AxisLocation is immutable, so we can just copy the maps	WITHOUT_CLASSIFICATION	0.9999975264507315	WITHOUT_CLASSIFICATION	2.4735492685636086E-6	DEFECT
// not currently serialized	WITHOUT_CLASSIFICATION	0.9999905666139148	WITHOUT_CLASSIFICATION	9.433386085112505E-6	DEFECT
// some subclasses override this method completely, so don't put // anything here that *must* be done	WITHOUT_CLASSIFICATION	0.999983525032901	WITHOUT_CLASSIFICATION	1.6474967098958934E-5	DEFECT
// provides a 'no action' default	WITHOUT_CLASSIFICATION	0.9999989079164843	WITHOUT_CLASSIFICATION	1.0920835158072706E-6	DEFECT
// an empty dataset should return a null range	WITHOUT_CLASSIFICATION	0.9999838486668315	WITHOUT_CLASSIFICATION	1.615133316848508E-5	DEFECT
// send a dataset change event to self...	WITHOUT_CLASSIFICATION	0.9999999713679724	WITHOUT_CLASSIFICATION	2.8632027740294147E-8	DEFECT
// if the plot area is too small, just return...	WITHOUT_CLASSIFICATION	0.9999990552682644	WITHOUT_CLASSIFICATION	9.447317356762296E-7	DEFECT
// record the plot area...	WITHOUT_CLASSIFICATION	0.9999982105324201	WITHOUT_CLASSIFICATION	1.7894675798616773E-6	DEFECT
// OK	WITHOUT_CLASSIFICATION	0.9999871538766184	WITHOUT_CLASSIFICATION	1.2846123381676648E-5	DEFECT
// adjust the drawing area for the plot insets (if any)...	WITHOUT_CLASSIFICATION	0.9999997282938243	WITHOUT_CLASSIFICATION	2.717061756692942E-7	DEFECT
// delegate...	WITHOUT_CLASSIFICATION	0.9999987910794105	WITHOUT_CLASSIFICATION	1.2089205895662219E-6	DEFECT
// delegate...	WITHOUT_CLASSIFICATION	0.9999987910794105	WITHOUT_CLASSIFICATION	1.2089205895662219E-6	DEFECT
// try the parent plot	WITHOUT_CLASSIFICATION	0.999997344283607	WITHOUT_CLASSIFICATION	2.6557163930235042E-6	DEFECT
// fake a dataset change event to update axes...	WITHOUT_CLASSIFICATION	0.9999998198027383	WITHOUT_CLASSIFICATION	1.801972615990069E-7	DEFECT
// axisIndices can be: // 1.  null; // 2.  non-empty, containing only Integer objects that are unique.	WITHOUT_CLASSIFICATION	0.9999599498857845	WITHOUT_CLASSIFICATION	4.005011421554478E-5	DEFECT
// the first axis in the list is used for data <--> Java2D	WITHOUT_CLASSIFICATION	0.9999996911892245	WITHOUT_CLASSIFICATION	3.0881077547525783E-7	DEFECT
// no renderer, no gridlines...	WITHOUT_CLASSIFICATION	0.9999994450977068	WITHOUT_CLASSIFICATION	5.549022931785104E-7	DEFECT
// iterate through the datasets that map to the axis and get the union // of the ranges.	WITHOUT_CLASSIFICATION	0.999999685667134	WITHOUT_CLASSIFICATION	3.143328659618055E-7	DEFECT
// create the dataset...	WITHOUT_CLASSIFICATION	0.9999998689267972	WITHOUT_CLASSIFICATION	1.3107320274918298E-7	DEFECT
// the above should cover all the options...	WITHOUT_CLASSIFICATION	0.9999897135658573	WITHOUT_CLASSIFICATION	1.0286434142675836E-5	DEFECT
// define the default locations for up to 8 axes...	WITHOUT_CLASSIFICATION	0.9999998290005662	WITHOUT_CLASSIFICATION	1.7099943381967605E-7	DEFECT
// normalize angle	WITHOUT_CLASSIFICATION	0.999990951160678	WITHOUT_CLASSIFICATION	9.048839321938662E-6	DEFECT
// draw the plot background and axes...	WITHOUT_CLASSIFICATION	0.99999948976847	WITHOUT_CLASSIFICATION	5.102315299357261E-7	DEFECT
// now for each dataset, get the renderer and the appropriate axis // and render the dataset...	WITHOUT_CLASSIFICATION	0.9999999351872566	WITHOUT_CLASSIFICATION	6.481274333573483E-8	DEFECT
// now get the data and plot it (the visual representation will depend // on the m_Renderer that has been set)...	WITHOUT_CLASSIFICATION	0.999999432886316	WITHOUT_CLASSIFICATION	5.671136840271084E-7	DEFECT
// draw the domain grid lines, if any...	WITHOUT_CLASSIFICATION	0.9999988668604446	WITHOUT_CLASSIFICATION	1.1331395554740706E-6	DEFECT
// draw the radius grid lines, if any...	WITHOUT_CLASSIFICATION	0.9999983663210913	WITHOUT_CLASSIFICATION	1.633678908639009E-6	DEFECT
// the datasets are not cloned, but listeners need to be added...	WITHOUT_CLASSIFICATION	0.9999990598864392	WITHOUT_CLASSIFICATION	9.401135607522048E-7	DEFECT
// square	WITHOUT_CLASSIFICATION	0.9999984822609064	WITHOUT_CLASSIFICATION	1.5177390936595925E-6	DEFECT
// circle	WITHOUT_CLASSIFICATION	0.9999985224847	WITHOUT_CLASSIFICATION	1.4775152999521575E-6	DEFECT
// up-pointing triangle	WITHOUT_CLASSIFICATION	0.9999981893651315	WITHOUT_CLASSIFICATION	1.8106348684040535E-6	DEFECT
// diamond	WITHOUT_CLASSIFICATION	0.9999924239320634	WITHOUT_CLASSIFICATION	7.5760679364305984E-6	DEFECT
// horizontal rectangle	WITHOUT_CLASSIFICATION	0.9999850131728003	WITHOUT_CLASSIFICATION	1.4986827199609364E-5	DEFECT
// down-pointing triangle	WITHOUT_CLASSIFICATION	0.9999958553533225	WITHOUT_CLASSIFICATION	4.144646677472321E-6	DEFECT
// horizontal ellipse	WITHOUT_CLASSIFICATION	0.9999968429897914	WITHOUT_CLASSIFICATION	3.1570102085316565E-6	DEFECT
// right-pointing triangle	WITHOUT_CLASSIFICATION	0.9999982357059313	WITHOUT_CLASSIFICATION	1.764294068749716E-6	DEFECT
// vertical rectangle	WITHOUT_CLASSIFICATION	0.9999939445164907	WITHOUT_CLASSIFICATION	6.055483509256953E-6	DEFECT
// left-pointing triangle	WITHOUT_CLASSIFICATION	0.9999972377711954	WITHOUT_CLASSIFICATION	2.762228804565385E-6	DEFECT
// an empty dataset should return a null range	WITHOUT_CLASSIFICATION	0.9999838486668315	WITHOUT_CLASSIFICATION	1.615133316848508E-5	DEFECT
// adjust for insets...	WITHOUT_CLASSIFICATION	0.9999933933539424	WITHOUT_CLASSIFICATION	6.606646057526857E-6	DEFECT
// adjust the plot area by the interior spacing value	WITHOUT_CLASSIFICATION	0.9999960737365128	WITHOUT_CLASSIFICATION	3.926263487311605E-6	DEFECT
// set the new dataset, and register the chart as a change listener...	WITHOUT_CLASSIFICATION	0.9999999336469156	WITHOUT_CLASSIFICATION	6.635308445747752E-8	DEFECT
// send a dataset change event to self to trigger plot change event	WITHOUT_CLASSIFICATION	0.9999999957230679	WITHOUT_CLASSIFICATION	4.2769320884175274E-9	DEFECT
// return the override, if there is one...	WITHOUT_CLASSIFICATION	0.9999988698439884	WITHOUT_CLASSIFICATION	1.13015601153761E-6	DEFECT
//// SERIES PAINT /////////////////////////	WITHOUT_CLASSIFICATION	0.9999902678224478	WITHOUT_CLASSIFICATION	9.732177552264082E-6	DEFECT
// otherwise look up the paint list	WITHOUT_CLASSIFICATION	0.9999991866608902	WITHOUT_CLASSIFICATION	8.133391097972537E-7	DEFECT
// return the override, if there is one...	WITHOUT_CLASSIFICATION	0.9999988698439884	WITHOUT_CLASSIFICATION	1.13015601153761E-6	DEFECT
// return the override, if there is one...	WITHOUT_CLASSIFICATION	0.9999988698439884	WITHOUT_CLASSIFICATION	1.13015601153761E-6	DEFECT
//// SERIES OUTLINE PAINT ////////////////////////////	WITHOUT_CLASSIFICATION	0.9999878672407403	WITHOUT_CLASSIFICATION	1.2132759259738712E-5	DEFECT
// otherwise look up the paint list	WITHOUT_CLASSIFICATION	0.9999991866608902	WITHOUT_CLASSIFICATION	8.133391097972537E-7	DEFECT
// otherwise look up the paint list	WITHOUT_CLASSIFICATION	0.9999991866608902	WITHOUT_CLASSIFICATION	8.133391097972537E-7	DEFECT
// an empty dataset should return a null range	WITHOUT_CLASSIFICATION	0.9999838486668315	WITHOUT_CLASSIFICATION	1.615133316848508E-5	DEFECT
// ensure we have a maximum value to use on the axes	WITHOUT_CLASSIFICATION	0.9999998325888534	WITHOUT_CLASSIFICATION	1.6741114668348422E-7	DEFECT
//// SERIES OUTLINE STROKE /////////////////////	WITHOUT_CLASSIFICATION	0.9999885375286335	WITHOUT_CLASSIFICATION	1.146247136663699E-5	DEFECT
// Next, setup the plot area	WITHOUT_CLASSIFICATION	0.9999996181369687	WITHOUT_CLASSIFICATION	3.818630312680368E-7	DEFECT
// make the chart area a square	WITHOUT_CLASSIFICATION	0.999999574745004	WITHOUT_CLASSIFICATION	4.252549959974057E-7	DEFECT
// draw the axis and category label	WITHOUT_CLASSIFICATION	0.9999980414607867	WITHOUT_CLASSIFICATION	1.9585392132368544E-6	DEFECT
// 1 = end of axis	WITHOUT_CLASSIFICATION	0.999998470360074	WITHOUT_CLASSIFICATION	1.5296399259965713E-6	DEFECT
// Now actually plot each of the series polygons..	WITHOUT_CLASSIFICATION	0.9999998603049014	WITHOUT_CLASSIFICATION	1.396950986244398E-7	DEFECT
// plot the data...	WITHOUT_CLASSIFICATION	0.9999991967543129	WITHOUT_CLASSIFICATION	8.03245686964356E-7	DEFECT
// draw the polygon series...	WITHOUT_CLASSIFICATION	0.9999989197024005	WITHOUT_CLASSIFICATION	1.0802975994988579E-6	DEFECT
// Finds our starting angle from the centre for this axis	WITHOUT_CLASSIFICATION	0.9999982417423213	WITHOUT_CLASSIFICATION	1.7582576786606867E-6	DEFECT
// The following angle calc will ensure there isn't a top // vertical axis - this may be useful if you don't want any // given criteria to 'appear' move important than the // others.. //  + (getDirection().getFactor() //        * (cat + 0.5) * 360 / catCount);	WITHOUT_CLASSIFICATION	0.9997110468612836	WITHOUT_CLASSIFICATION	2.889531387163947E-4	DEFECT
// find the point at the appropriate distance end point // along the axis/angle identified above and add it to the // polygon	WITHOUT_CLASSIFICATION	0.9999998120067533	WITHOUT_CLASSIFICATION	1.8799324677170734E-7	DEFECT
// put an elipse at the point being plotted..	WITHOUT_CLASSIFICATION	0.9999982178031468	WITHOUT_CLASSIFICATION	1.7821968532273832E-6	DEFECT
// Plot the polygon	WITHOUT_CLASSIFICATION	0.9999970477904062	WITHOUT_CLASSIFICATION	2.9522095938708696E-6	DEFECT
// set the anchor value for the horizontal axis...	WITHOUT_CLASSIFICATION	0.9999994631748724	WITHOUT_CLASSIFICATION	5.368251275822579E-7	DEFECT
/* shapeFilled=*/	WITHOUT_CLASSIFICATION	0.9999920313803039	WITHOUT_CLASSIFICATION	7.968619696213287E-6	DEFECT
// an empty dataset should return a null range	WITHOUT_CLASSIFICATION	0.9999838486668315	WITHOUT_CLASSIFICATION	1.615133316848508E-5	DEFECT
// adjust for insets...	WITHOUT_CLASSIFICATION	0.9999933933539424	WITHOUT_CLASSIFICATION	6.606646057526857E-6	DEFECT
// send a dataset change event to self...	WITHOUT_CLASSIFICATION	0.9999999713679724	WITHOUT_CLASSIFICATION	2.8632027740294147E-8	DEFECT
// plot is likely registered as a listener with the existing axis...	WITHOUT_CLASSIFICATION	0.9999939680361555	WITHOUT_CLASSIFICATION	6.031963844524844E-6	DEFECT
// if the plot area is too small, just return...	WITHOUT_CLASSIFICATION	0.9999990552682644	WITHOUT_CLASSIFICATION	9.447317356762296E-7	DEFECT
// record the plot area...	WITHOUT_CLASSIFICATION	0.9999982105324201	WITHOUT_CLASSIFICATION	1.7894675798616773E-6	DEFECT
// OK	WITHOUT_CLASSIFICATION	0.9999871538766184	WITHOUT_CLASSIFICATION	1.2846123381676648E-5	DEFECT
// draw the background	WITHOUT_CLASSIFICATION	0.9999957718537846	WITHOUT_CLASSIFICATION	4.2281462154745755E-6	DEFECT
// plot the data (unless the dataset is null)...	WITHOUT_CLASSIFICATION	0.9999954695545948	WITHOUT_CLASSIFICATION	4.530445405096962E-6	DEFECT
// adjust the drawing area for the plot insets (if any)...	WITHOUT_CLASSIFICATION	0.9999997282938243	WITHOUT_CLASSIFICATION	2.717061756692942E-7	DEFECT
// delegate...	WITHOUT_CLASSIFICATION	0.9999987910794105	WITHOUT_CLASSIFICATION	1.2089205895662219E-6	DEFECT
// delegate...	WITHOUT_CLASSIFICATION	0.9999987910794105	WITHOUT_CLASSIFICATION	1.2089205895662219E-6	DEFECT
// delegate...	WITHOUT_CLASSIFICATION	0.9999987910794105	WITHOUT_CLASSIFICATION	1.2089205895662219E-6	DEFECT
// fake a dataset change event to update axes...	WITHOUT_CLASSIFICATION	0.9999998198027383	WITHOUT_CLASSIFICATION	1.801972615990069E-7	DEFECT
// fake a dataset change event to update axes...	WITHOUT_CLASSIFICATION	0.9999998198027383	WITHOUT_CLASSIFICATION	1.801972615990069E-7	DEFECT
// axisIndices can be: // 1.  null; // 2.  non-empty, containing only Integer objects that are unique.	WITHOUT_CLASSIFICATION	0.9999599498857845	WITHOUT_CLASSIFICATION	4.005011421554478E-5	DEFECT
// reserve some space for the domain axis...	WITHOUT_CLASSIFICATION	0.9999950539035236	WITHOUT_CLASSIFICATION	4.946096476380866E-6	DEFECT
// reserve some space for the range axis...	WITHOUT_CLASSIFICATION	0.9999923993094624	WITHOUT_CLASSIFICATION	7.600690537535998E-6	DEFECT
// draw the plot background and axes...	WITHOUT_CLASSIFICATION	0.99999948976847	WITHOUT_CLASSIFICATION	5.102315299357261E-7	DEFECT
// check that a null dataset returns null bounds	WITHOUT_CLASSIFICATION	0.9999992172734355	WITHOUT_CLASSIFICATION	7.827265643311178E-7	DEFECT
// Lastly, fill the web polygon if this is required	WITHOUT_CLASSIFICATION	0.9999913728220827	WITHOUT_CLASSIFICATION	8.627177917178727E-6	DEFECT
// if series are in rows, then the categories are the column keys	WITHOUT_CLASSIFICATION	0.9999995972152351	WITHOUT_CLASSIFICATION	4.0278476483290347E-7	DEFECT
// if series are in columns, then the categories are the row keys	WITHOUT_CLASSIFICATION	0.9999996700035796	WITHOUT_CLASSIFICATION	3.2999642041584866E-7	DEFECT
//          negatives = true;	WITHOUT_CLASSIFICATION	0.9999904073910763	WITHOUT_CLASSIFICATION	9.592608923723665E-6	DEFECT
//  value = Math.pow(10,value);	WITHOUT_CLASSIFICATION	0.9999944906723555	WITHOUT_CLASSIFICATION	5.509327644548799E-6	DEFECT
//  izV = steps*numSteps*(int)((value/minZ)/(maxZlog-minZlog)) + 2;	WITHOUT_CLASSIFICATION	0.9999983079484785	WITHOUT_CLASSIFICATION	1.69205152147241E-6	DEFECT
// super.setSeriesPaint(series, paint);	WITHOUT_CLASSIFICATION	0.9999995468479783	WITHOUT_CLASSIFICATION	4.531520216694454E-7	DEFECT
/// Squares	WITHOUT_CLASSIFICATION	0.9999982747722331	WITHOUT_CLASSIFICATION	1.725227766865339E-6	DEFECT
/// Draw N, S, E, W	WITHOUT_CLASSIFICATION	0.9999963582119	WITHOUT_CLASSIFICATION	3.6417881000196825E-6	DEFECT
// no zooming possible	WITHOUT_CLASSIFICATION	0.9999962329026568	WITHOUT_CLASSIFICATION	3.767097343272201E-6	DEFECT
// clone share data sets => add the clone as listener to the dataset	WITHOUT_CLASSIFICATION	0.9999999656345208	WITHOUT_CLASSIFICATION	3.43654792977345E-8	DEFECT
// only relevant when this is a subplot	WITHOUT_CLASSIFICATION	0.9999343372951057	WITHOUT_CLASSIFICATION	6.566270489425376E-5	DEFECT
// allocate storage for datasets, axes and renderers (all optional)	WITHOUT_CLASSIFICATION	0.9999997663127216	WITHOUT_CLASSIFICATION	2.3368727847849402E-7	DEFECT
// reserve space for the domain axes...	WITHOUT_CLASSIFICATION	0.9999983031229003	WITHOUT_CLASSIFICATION	1.6968770997362297E-6	DEFECT
// reserve space for the range axes...	WITHOUT_CLASSIFICATION	0.9999976421440343	WITHOUT_CLASSIFICATION	2.357855965649904E-6	DEFECT
// the first axis in the list is used for data <--> Java2D	WITHOUT_CLASSIFICATION	0.9999996911892245	WITHOUT_CLASSIFICATION	3.0881077547525783E-7	DEFECT
// the first axis in the list is used for data <--> Java2D	WITHOUT_CLASSIFICATION	0.9999996911892245	WITHOUT_CLASSIFICATION	3.0881077547525783E-7	DEFECT
// draw domain crosshair if required...	WITHOUT_CLASSIFICATION	0.9999993128556836	WITHOUT_CLASSIFICATION	6.87144316501603E-7	DEFECT
// draw range crosshair if required...	WITHOUT_CLASSIFICATION	0.9999987267916916	WITHOUT_CLASSIFICATION	1.273208308377339E-6	DEFECT
// add domain axes to lists...	WITHOUT_CLASSIFICATION	0.9999864537001025	WITHOUT_CLASSIFICATION	1.3546299897441103E-5	DEFECT
// add range axes to lists...	WITHOUT_CLASSIFICATION	0.9999933949814847	WITHOUT_CLASSIFICATION	6.605018515418339E-6	DEFECT
// draw the top axes	WITHOUT_CLASSIFICATION	0.9999994918415579	WITHOUT_CLASSIFICATION	5.081584420512226E-7	DEFECT
// draw the bottom axes	WITHOUT_CLASSIFICATION	0.9999977172978567	WITHOUT_CLASSIFICATION	2.282702143269469E-6	DEFECT
// draw the left axes	WITHOUT_CLASSIFICATION	0.9999975820130486	WITHOUT_CLASSIFICATION	2.41798695144276E-6	DEFECT
// draw the right axes	WITHOUT_CLASSIFICATION	0.9999967184363867	WITHOUT_CLASSIFICATION	3.2815636133420214E-6	DEFECT
// draw the range grid lines, if any...	WITHOUT_CLASSIFICATION	0.9999981957147107	WITHOUT_CLASSIFICATION	1.804285289263576E-6	DEFECT
// no renderer, no gridlines...	WITHOUT_CLASSIFICATION	0.9999994450977068	WITHOUT_CLASSIFICATION	5.549022931785104E-7	DEFECT
// no renderer, no gridlines...	WITHOUT_CLASSIFICATION	0.9999994450977068	WITHOUT_CLASSIFICATION	5.549022931785104E-7	DEFECT
// draw the domain grid lines, if any...	WITHOUT_CLASSIFICATION	0.9999988668604446	WITHOUT_CLASSIFICATION	1.1331395554740706E-6	DEFECT
// draw the markers that are associated with a specific dataset...	WITHOUT_CLASSIFICATION	0.9999995471266246	WITHOUT_CLASSIFICATION	4.528733753181106E-7	DEFECT
// now draw annotations and render data items...	WITHOUT_CLASSIFICATION	0.9999953103385083	WITHOUT_CLASSIFICATION	4.689661491677764E-6	DEFECT
// draw background annotations	WITHOUT_CLASSIFICATION	0.9999972315508628	WITHOUT_CLASSIFICATION	2.768449137136517E-6	DEFECT
// render data items...	WITHOUT_CLASSIFICATION	0.9999963540609157	WITHOUT_CLASSIFICATION	3.645939084219187E-6	DEFECT
// draw foreground annotations	WITHOUT_CLASSIFICATION	0.9999963331839328	WITHOUT_CLASSIFICATION	3.6668160672076786E-6	DEFECT
//  0 | 1 //  --+-- //  2 | 3	WITHOUT_CLASSIFICATION	0.9999839333564798	WITHOUT_CLASSIFICATION	1.6066643520109127E-5	DEFECT
// we can't draw quadrants without a valid x-axis	WITHOUT_CLASSIFICATION	0.9999939632917411	WITHOUT_CLASSIFICATION	6.036708258957947E-6	DEFECT
// we can't draw quadrants without a valid y-axis	WITHOUT_CLASSIFICATION	0.9999929318054902	WITHOUT_CLASSIFICATION	7.0681945097761725E-6	DEFECT
// PlotOrientation.VERTICAL	WITHOUT_CLASSIFICATION	0.9999972739344507	WITHOUT_CLASSIFICATION	2.7260655493401328E-6	DEFECT
// can't render anything without axes	WITHOUT_CLASSIFICATION	0.9999863565220014	WITHOUT_CLASSIFICATION	1.3643477998626232E-5	DEFECT
// no default renderer available	WITHOUT_CLASSIFICATION	0.9999986784367894	WITHOUT_CLASSIFICATION	1.321563210573672E-6	DEFECT
//render series in reverse order	WITHOUT_CLASSIFICATION	0.999988177347468	WITHOUT_CLASSIFICATION	1.1822652532070837E-5	DEFECT
//render series in forward order	WITHOUT_CLASSIFICATION	0.999989244712873	WITHOUT_CLASSIFICATION	1.0755287127041665E-5	DEFECT
// use the TextTitle class because it is a concrete subclass	WITHOUT_CLASSIFICATION	0.9999997827712136	WITHOUT_CLASSIFICATION	2.1722878638809507E-7	DEFECT
// set up info collection...	WITHOUT_CLASSIFICATION	0.9999990428993042	WITHOUT_CLASSIFICATION	9.571006958152355E-7	DEFECT
// adjust the drawing area for plot insets (if any)...	WITHOUT_CLASSIFICATION	0.9999996884804844	WITHOUT_CLASSIFICATION	3.115195155366364E-7	DEFECT
// try the parent plot	WITHOUT_CLASSIFICATION	0.999997344283607	WITHOUT_CLASSIFICATION	2.6557163930235042E-6	DEFECT
// try the parent plot	WITHOUT_CLASSIFICATION	0.999997344283607	WITHOUT_CLASSIFICATION	2.6557163930235042E-6	DEFECT
// iterate through the datasets that map to the axis and get the union // of the ranges.	WITHOUT_CLASSIFICATION	0.999999685667134	WITHOUT_CLASSIFICATION	3.143328659618055E-7	DEFECT
// delegate to other method	WITHOUT_CLASSIFICATION	0.999994842119158	WITHOUT_CLASSIFICATION	5.1578808420156345E-6	DEFECT
// delegate to other method	WITHOUT_CLASSIFICATION	0.999994842119158	WITHOUT_CLASSIFICATION	5.1578808420156345E-6	DEFECT
// perform the zoom on each range axis	WITHOUT_CLASSIFICATION	0.9999979649775348	WITHOUT_CLASSIFICATION	2.035022465235698E-6	DEFECT
// get the relevant source coordinate given the plot orientation	WITHOUT_CLASSIFICATION	0.9999999685130881	WITHOUT_CLASSIFICATION	3.148691186722112E-8	DEFECT
// get the relevant source coordinate given the plot orientation	WITHOUT_CLASSIFICATION	0.9999999685130881	WITHOUT_CLASSIFICATION	3.148691186722112E-8	DEFECT
// draw the plot background and axes...	WITHOUT_CLASSIFICATION	0.99999948976847	WITHOUT_CLASSIFICATION	5.102315299357261E-7	DEFECT
// the datasets are not cloned, but listeners need to be added...	WITHOUT_CLASSIFICATION	0.9999990598864392	WITHOUT_CLASSIFICATION	9.401135607522048E-7	DEFECT
// if the event was caused by a change to series visibility, then // the axis ranges might need updating...	WITHOUT_CLASSIFICATION	0.999999997778599	WITHOUT_CLASSIFICATION	2.2214009894963424E-9	DEFECT
// check that the renderer has a corresponding dataset (it doesn't // matter if the dataset is null)	WITHOUT_CLASSIFICATION	0.9998882901692981	WITHOUT_CLASSIFICATION	1.117098307019195E-4	DEFECT
// check that the renderer has a corresponding dataset (it doesn't // matter if the dataset is null)	WITHOUT_CLASSIFICATION	0.9998882901692981	WITHOUT_CLASSIFICATION	1.117098307019195E-4	DEFECT
// set the anchor value for the vertical axis...	WITHOUT_CLASSIFICATION	0.9999996055166301	WITHOUT_CLASSIFICATION	3.944833698429538E-7	DEFECT
// grab the plot's annotations	WITHOUT_CLASSIFICATION	0.9999984040302305	WITHOUT_CLASSIFICATION	1.5959697694778483E-6	DEFECT
// is it a domain axis?	WITHOUT_CLASSIFICATION	0.9992487239663492	WITHOUT_CLASSIFICATION	7.512760336506968E-4	DEFECT
// or is it a range axis?	WITHOUT_CLASSIFICATION	0.9999060603297147	WITHOUT_CLASSIFICATION	9.393967028531606E-5	DEFECT
// if the axes use a linear scale, you can uncomment the code below and // switch to the alternative transX/transY calculation inside the loop // that follows - it is a little bit faster then. // // int xx = (int) dataArea.getMinX(); // int ww = (int) dataArea.getWidth(); // int yy = (int) dataArea.getMaxY(); // int hh = (int) dataArea.getHeight(); // double domainMin = this.domainAxis.getLowerBound(); // double domainLength = this.domainAxis.getUpperBound() - domainMin; // double rangeMin = this.rangeAxis.getLowerBound(); // double rangeLength = this.rangeAxis.getUpperBound() - rangeMin;	WITHOUT_CLASSIFICATION	0.9993123810428631	WITHOUT_CLASSIFICATION	6.876189571368836E-4	DEFECT
// register the plot as a listener with its axes, datasets, and // renderers...	WITHOUT_CLASSIFICATION	0.9999986813949534	WITHOUT_CLASSIFICATION	1.318605046585853E-6	DEFECT
// perform the zoom on each domain axis	WITHOUT_CLASSIFICATION	0.999998047995707	WITHOUT_CLASSIFICATION	1.952004293020423E-6	DEFECT
// lineVisible	WITHOUT_CLASSIFICATION	0.9999927471598226	WITHOUT_CLASSIFICATION	7.252840177429642E-6	DEFECT
// adjust for insets...	WITHOUT_CLASSIFICATION	0.9999933933539424	WITHOUT_CLASSIFICATION	6.606646057526857E-6	DEFECT
// set the new dataset, and register the chart as a change listener...	WITHOUT_CLASSIFICATION	0.9999999336469156	WITHOUT_CLASSIFICATION	6.635308445747752E-8	DEFECT
// send a dataset change event to self...	WITHOUT_CLASSIFICATION	0.9999999713679724	WITHOUT_CLASSIFICATION	2.8632027740294147E-8	DEFECT
// draw the background	WITHOUT_CLASSIFICATION	0.9999957718537846	WITHOUT_CLASSIFICATION	4.2281462154745755E-6	DEFECT
// intentionally blank	WITHOUT_CLASSIFICATION	0.999977831197539	WITHOUT_CLASSIFICATION	2.2168802460940052E-5	DEFECT
// get the source coordinate - this plot has always a VERTICAL // orientation	WITHOUT_CLASSIFICATION	0.9999947079905043	WITHOUT_CLASSIFICATION	5.292009495696215E-6	DEFECT
// images considered equal only if they're the SAME object // TODO: is there a way to do a better test?	WITHOUT_CLASSIFICATION	0.8474113286870425	DEFECT	0.15258867131295742	WITHOUT_CLASSIFICATION
//int transX = (int) (xx + ww * (x - domainMin) / domainLength); //int transY = (int) (yy - hh * (y - rangeMin) / rangeLength);	WITHOUT_CLASSIFICATION	0.9998912365285775	WITHOUT_CLASSIFICATION	1.0876347142256268E-4	DEFECT
// if there is an existing dataset, remove the plot from the list // of change listeners...	WITHOUT_CLASSIFICATION	0.9999996105018883	WITHOUT_CLASSIFICATION	3.894981117087533E-7	DEFECT
// plot is registered as a listener with the existing axis...	WITHOUT_CLASSIFICATION	0.9999982220387046	WITHOUT_CLASSIFICATION	1.7779612954742115E-6	DEFECT
// adjust for padding...	WITHOUT_CLASSIFICATION	0.9999962842380863	WITHOUT_CLASSIFICATION	3.715761913728011E-6	DEFECT
// already calculated // already calculated	WITHOUT_CLASSIFICATION	0.9999809460458782	WITHOUT_CLASSIFICATION	1.9053954121740693E-5	DEFECT
// draw range indicators...	WITHOUT_CLASSIFICATION	0.9999981084400447	WITHOUT_CLASSIFICATION	1.8915599553221418E-6	DEFECT
// draw start of normal range	WITHOUT_CLASSIFICATION	0.9999990750341984	WITHOUT_CLASSIFICATION	9.249658016070648E-7	DEFECT
// draw start of warning range	WITHOUT_CLASSIFICATION	0.9999963991291433	WITHOUT_CLASSIFICATION	3.6008708566249526E-6	DEFECT
// draw start of critical range	WITHOUT_CLASSIFICATION	0.9999998184631129	WITHOUT_CLASSIFICATION	1.815368871869151E-7	DEFECT
// draw the axis...	WITHOUT_CLASSIFICATION	0.9999983589744932	WITHOUT_CLASSIFICATION	1.6410255068337013E-6	DEFECT
//cursor = midX - COLUMN_RADIUS - AXIS_GAP;	WITHOUT_CLASSIFICATION	0.999996958332911	WITHOUT_CLASSIFICATION	3.041667088849973E-6	DEFECT
// draw text value on screen	WITHOUT_CLASSIFICATION	0.9999974988936647	WITHOUT_CLASSIFICATION	2.5011063352605743E-6	DEFECT
//  draw units indicator	WITHOUT_CLASSIFICATION	0.9999989977290973	WITHOUT_CLASSIFICATION	1.0022709027145363E-6	DEFECT
// draw thermometer outline	WITHOUT_CLASSIFICATION	0.9999983114172462	WITHOUT_CLASSIFICATION	1.6885827538432347E-6	DEFECT
// no domain axis to zoom	WITHOUT_CLASSIFICATION	0.9999861239469999	WITHOUT_CLASSIFICATION	1.3876052999984735E-5	DEFECT
// work out the anchor point	WITHOUT_CLASSIFICATION	0.9999909905570112	WITHOUT_CLASSIFICATION	9.009442988806697E-6	DEFECT
// calculate the bounds of the template value	WITHOUT_CLASSIFICATION	0.9999994881186488	WITHOUT_CLASSIFICATION	5.118813511935647E-7	DEFECT
// align this rectangle to the frameAnchor	WITHOUT_CLASSIFICATION	0.999998114218137	WITHOUT_CLASSIFICATION	1.885781862979908E-6	DEFECT
// add the insets	WITHOUT_CLASSIFICATION	0.999998422556567	WITHOUT_CLASSIFICATION	1.5774434329524014E-6	DEFECT
// draw the border	WITHOUT_CLASSIFICATION	0.9999974818918766	WITHOUT_CLASSIFICATION	2.5181081233919166E-6	DEFECT
// now find the text anchor point	WITHOUT_CLASSIFICATION	0.9999997112959559	WITHOUT_CLASSIFICATION	2.8870404408437855E-7	DEFECT
/* lineVisible= */	WITHOUT_CLASSIFICATION	0.9999803378880985	WITHOUT_CLASSIFICATION	1.9662111901533906E-5	DEFECT
// send a dataset change event to self...	WITHOUT_CLASSIFICATION	0.9999999713679724	WITHOUT_CLASSIFICATION	2.8632027740294147E-8	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9999995063106223	WITHOUT_CLASSIFICATION	4.936893777090077E-7	DEFECT
// return the override, if there is one...	WITHOUT_CLASSIFICATION	0.9999988698439884	WITHOUT_CLASSIFICATION	1.13015601153761E-6	DEFECT
// return the override, if there is one...	WITHOUT_CLASSIFICATION	0.9999988698439884	WITHOUT_CLASSIFICATION	1.13015601153761E-6	DEFECT
// otherwise look up the paint list	WITHOUT_CLASSIFICATION	0.9999991866608902	WITHOUT_CLASSIFICATION	8.133391097972537E-7	DEFECT
// work out the anchor point	WITHOUT_CLASSIFICATION	0.9999909905570112	WITHOUT_CLASSIFICATION	9.009442988806697E-6	DEFECT
// urlText	WITHOUT_CLASSIFICATION	0.9999968517468716	WITHOUT_CLASSIFICATION	3.148253128436283E-6	DEFECT
// first, expand the viewing area into a drawing frame	WITHOUT_CLASSIFICATION	0.9999996174998995	WITHOUT_CLASSIFICATION	3.8250010042619583E-7	DEFECT
// draw the background if there is one...	WITHOUT_CLASSIFICATION	0.9999994842108132	WITHOUT_CLASSIFICATION	5.157891868967464E-7	DEFECT
// draw the pointers	WITHOUT_CLASSIFICATION	0.9999997890688196	WITHOUT_CLASSIFICATION	2.1093118033408852E-7	DEFECT
// draw the cap if there is one...	WITHOUT_CLASSIFICATION	0.9999993398651609	WITHOUT_CLASSIFICATION	6.601348390743475E-7	DEFECT
// now do the minor tick marks	WITHOUT_CLASSIFICATION	0.9999987656811217	WITHOUT_CLASSIFICATION	1.2343188783054319E-6	DEFECT
// lowerBound	WITHOUT_CLASSIFICATION	0.9999971210334492	WITHOUT_CLASSIFICATION	2.878966550841764E-6	DEFECT
// upperBound	WITHOUT_CLASSIFICATION	0.9999955094900672	WITHOUT_CLASSIFICATION	4.490509932867252E-6	DEFECT
// startAngle	WITHOUT_CLASSIFICATION	0.9999994993937392	WITHOUT_CLASSIFICATION	5.006062608183125E-7	DEFECT
// extent	WITHOUT_CLASSIFICATION	0.9999969478921736	WITHOUT_CLASSIFICATION	3.052107826372425E-6	DEFECT
// tickRadius	WITHOUT_CLASSIFICATION	0.9999985167190342	WITHOUT_CLASSIFICATION	1.4832809658556567E-6	DEFECT
// we don't clone the listeners	WITHOUT_CLASSIFICATION	0.9999866826005307	WITHOUT_CLASSIFICATION	1.331739946941183E-5	DEFECT
// use item paint for fills by default	WITHOUT_CLASSIFICATION	0.9999993055512695	WITHOUT_CLASSIFICATION	6.94448730500978E-7	DEFECT
// draw the outline of the filled polygon	WITHOUT_CLASSIFICATION	0.999999490771756	WITHOUT_CLASSIFICATION	5.092282440084405E-7	DEFECT
// just the lines, no filling	WITHOUT_CLASSIFICATION	0.9999948360573189	WITHOUT_CLASSIFICATION	5.163942681163455E-6	DEFECT
// draw the item shapes	WITHOUT_CLASSIFICATION	0.9999987434587271	WITHOUT_CLASSIFICATION	1.2565412729459517E-6	DEFECT
// SERIES VISIBLE (not yet respected by all renderers)	WITHOUT_CLASSIFICATION	0.9999940244022606	WITHOUT_CLASSIFICATION	5.975597739432693E-6	DEFECT
// SERIES VISIBLE IN LEGEND (not yet respected by all renderers)	WITHOUT_CLASSIFICATION	0.999996685636872	WITHOUT_CLASSIFICATION	3.3143631280201624E-6	DEFECT
// PAINT	WITHOUT_CLASSIFICATION	0.9999911880249526	WITHOUT_CLASSIFICATION	8.811975047400677E-6	DEFECT
//// FILL PAINT //////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9998952426232783	WITHOUT_CLASSIFICATION	1.0475737672169284E-4	DEFECT
// otherwise look up the paint table	WITHOUT_CLASSIFICATION	0.9999997776317611	WITHOUT_CLASSIFICATION	2.223682388812745E-7	DEFECT
// return the override, if there is one...	WITHOUT_CLASSIFICATION	0.9999988698439884	WITHOUT_CLASSIFICATION	1.13015601153761E-6	DEFECT
// return the override, if there is one...	WITHOUT_CLASSIFICATION	0.9999988698439884	WITHOUT_CLASSIFICATION	1.13015601153761E-6	DEFECT
// return the override, if there is one...	WITHOUT_CLASSIFICATION	0.9999988698439884	WITHOUT_CLASSIFICATION	1.13015601153761E-6	DEFECT
// return the override, if there is one...	WITHOUT_CLASSIFICATION	0.9999988698439884	WITHOUT_CLASSIFICATION	1.13015601153761E-6	DEFECT
// return the override, if there is one...	WITHOUT_CLASSIFICATION	0.9999988698439884	WITHOUT_CLASSIFICATION	1.13015601153761E-6	DEFECT
// return the override, if there is one...	WITHOUT_CLASSIFICATION	0.9999988698439884	WITHOUT_CLASSIFICATION	1.13015601153761E-6	DEFECT
// we create an event with a special flag set...the purpose of // this is to communicate to the plot (the default receiver of // the event) that series visibility has changed so the axis // ranges might need updating...	WITHOUT_CLASSIFICATION	0.9999999976886917	WITHOUT_CLASSIFICATION	2.3113081642377865E-9	DEFECT
// otherwise look up the paint table	WITHOUT_CLASSIFICATION	0.9999997776317611	WITHOUT_CLASSIFICATION	2.223682388812745E-7	DEFECT
// otherwise look up the paint table	WITHOUT_CLASSIFICATION	0.9999997776317611	WITHOUT_CLASSIFICATION	2.223682388812745E-7	DEFECT
// OUTLINE PAINT //////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999926403386081	WITHOUT_CLASSIFICATION	7.359661391831508E-6	DEFECT
// STROKE	WITHOUT_CLASSIFICATION	0.9999762833837532	WITHOUT_CLASSIFICATION	2.3716616246717326E-5	DEFECT
// OUTLINE STROKE	WITHOUT_CLASSIFICATION	0.9999912647628078	WITHOUT_CLASSIFICATION	8.735237192229752E-6	DEFECT
// otherwise look up the stroke table	WITHOUT_CLASSIFICATION	0.9999997167197882	WITHOUT_CLASSIFICATION	2.832802118194926E-7	DEFECT
// SHAPE	WITHOUT_CLASSIFICATION	0.999982913563321	WITHOUT_CLASSIFICATION	1.7086436678938783E-5	DEFECT
// otherwise look up the shape list	WITHOUT_CLASSIFICATION	0.9999992428378143	WITHOUT_CLASSIFICATION	7.571621858118583E-7	DEFECT
// ITEM LABEL VISIBILITY...	WITHOUT_CLASSIFICATION	0.9999161378898022	WITHOUT_CLASSIFICATION	8.386211019783806E-5	DEFECT
// otherwise look up the boolean table	WITHOUT_CLASSIFICATION	0.9999994957337464	WITHOUT_CLASSIFICATION	5.04266253682859E-7	DEFECT
// this should have been defined as a boolean primitive, because // allowing null values is a nuisance...but it is part of the final // API now, so we'll have to support it.	WITHOUT_CLASSIFICATION	0.9999990969199437	WITHOUT_CLASSIFICATION	9.030800562447855E-7	DEFECT
//// ITEM LABEL FONT //////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999477554879889	WITHOUT_CLASSIFICATION	5.224451201124176E-5	DEFECT
//// ITEM LABEL PAINT  ////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999751398548485	WITHOUT_CLASSIFICATION	2.48601451514488E-5	DEFECT
// POSITIVE ITEM LABEL POSITION...	WITHOUT_CLASSIFICATION	0.9999628762130618	WITHOUT_CLASSIFICATION	3.712378693817243E-5	DEFECT
// otherwise look up the position table	WITHOUT_CLASSIFICATION	0.9999996992083697	WITHOUT_CLASSIFICATION	3.007916302748211E-7	DEFECT
// NEGATIVE ITEM LABEL POSITION...	WITHOUT_CLASSIFICATION	0.9999747214265533	WITHOUT_CLASSIFICATION	2.527857344670242E-5	DEFECT
// otherwise look up the position list	WITHOUT_CLASSIFICATION	0.9999990875688278	WITHOUT_CLASSIFICATION	9.124311721714598E-7	DEFECT
// the commented out code would be better, but only if // RendererChangeEvent is immutable, which it isn't.  See if there is // a way to fix this...	WITHOUT_CLASSIFICATION	0.999109667176425	WITHOUT_CLASSIFICATION	8.903328235749191E-4	DEFECT
// 'paint' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999994907906948	WITHOUT_CLASSIFICATION	5.092093052030912E-7	DEFECT
// 'basePaint' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.999999812057437	WITHOUT_CLASSIFICATION	1.8794256297397095E-7	DEFECT
// 'outlinePaint' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.999999600060121	WITHOUT_CLASSIFICATION	3.9993987900037434E-7	DEFECT
// 'baseOutlinePaint' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999997519733129	WITHOUT_CLASSIFICATION	2.4802668709143094E-7	DEFECT
// 'stroke' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999994056915325	WITHOUT_CLASSIFICATION	5.943084675493851E-7	DEFECT
// 'baseStroke' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999995202318922	WITHOUT_CLASSIFICATION	4.797681077008987E-7	DEFECT
// we create an event with a special flag set...the purpose of // this is to communicate to the plot (the default receiver of // the event) that series visibility has changed so the axis // ranges might need updating...	WITHOUT_CLASSIFICATION	0.9999999976886917	WITHOUT_CLASSIFICATION	2.3113081642377865E-9	DEFECT
// 'basePaint' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.999999812057437	WITHOUT_CLASSIFICATION	1.8794256297397095E-7	DEFECT
// shapeList // baseShape	WITHOUT_CLASSIFICATION	0.9999949136132062	WITHOUT_CLASSIFICATION	5.086386793692145E-6	DEFECT
// 'outlineStroke' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999991045074148	WITHOUT_CLASSIFICATION	8.954925851188714E-7	DEFECT
// 'baseOutlineStroke' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999994446512772	WITHOUT_CLASSIFICATION	5.553487228238803E-7	DEFECT
// 'itemLabelsVisible' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999996736068884	WITHOUT_CLASSIFICATION	3.2639311163131484E-7	DEFECT
// 'itemLabelFont' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999996862555623	WITHOUT_CLASSIFICATION	3.1374443767517796E-7	DEFECT
// 'baseItemLabelFont' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999998762282872	WITHOUT_CLASSIFICATION	1.2377171272747149E-7	DEFECT
// 'itemLabelPaint' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.999999861864073	WITHOUT_CLASSIFICATION	1.3813592696592817E-7	DEFECT
// 'baseItemLabelPaint' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999999455055886	WITHOUT_CLASSIFICATION	5.4494411370223947E-8	DEFECT
// 'postiveItemLabelAnchor' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999998637796502	WITHOUT_CLASSIFICATION	1.3622034981045757E-7	DEFECT
// 'baseItemLabelAnchor' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999998641226842	WITHOUT_CLASSIFICATION	1.3587731588764767E-7	DEFECT
// 'negativeItemLabelAnchor' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999997074215836	WITHOUT_CLASSIFICATION	2.9257841638248706E-7	DEFECT
// 'baseNegativeItemLabelAnchor' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999999283062326	WITHOUT_CLASSIFICATION	7.16937673700118E-8	DEFECT
// listeners are not restored automatically, but storage must be // provided...	WITHOUT_CLASSIFICATION	0.9999706958564047	WITHOUT_CLASSIFICATION	2.9304143595217273E-5	DEFECT
// === DEPRECATED CODE ===	WITHOUT_CLASSIFICATION	0.9999530483110312	WITHOUT_CLASSIFICATION	4.69516889687282E-5	DEFECT
// The following alternative is only supported in JDK 1.4 - we support // JDK 1.3.1 onwards // setItemLabelsVisible(Boolean.valueOf(visible));	WITHOUT_CLASSIFICATION	0.9963285287595312	WITHOUT_CLASSIFICATION	0.003671471240468971	DEFECT
//System.err.print(" creating new outlier list ");	WITHOUT_CLASSIFICATION	0.9999997421839419	WITHOUT_CLASSIFICATION	2.578160581045026E-7	DEFECT
//// TOOL TIP GENERATOR ///////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999403243536503	WITHOUT_CLASSIFICATION	5.967564634976465E-5	DEFECT
//// URL GENERATOR ////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999715118556078	WITHOUT_CLASSIFICATION	2.8488144392113574E-5	DEFECT
// handle value outside bounds...	WITHOUT_CLASSIFICATION	0.9999994653810609	WITHOUT_CLASSIFICATION	5.346189390871491E-7	DEFECT
// handle special case where value is less that item zero	WITHOUT_CLASSIFICATION	0.9999969688334523	WITHOUT_CLASSIFICATION	3.03116654769658E-6	DEFECT
// special case where the lowest x-value is >= xLow	WITHOUT_CLASSIFICATION	0.9999987784565841	WITHOUT_CLASSIFICATION	1.2215434159220586E-6	DEFECT
// special case where the highest x-value is < xLow	WITHOUT_CLASSIFICATION	0.9999987164581375	WITHOUT_CLASSIFICATION	1.2835418623989518E-6	DEFECT
// skip any items that don't need including...	WITHOUT_CLASSIFICATION	0.9999687698059273	WITHOUT_CLASSIFICATION	3.1230194072684434E-5	DEFECT
// skip any items that don't need including...	WITHOUT_CLASSIFICATION	0.9999687698059273	WITHOUT_CLASSIFICATION	3.1230194072684434E-5	DEFECT
// assign a color for each unique value	WITHOUT_CLASSIFICATION	0.9999995136696274	WITHOUT_CLASSIFICATION	4.863303726946366E-7	DEFECT
// assign a color for each unique value	WITHOUT_CLASSIFICATION	0.9999995136696274	WITHOUT_CLASSIFICATION	4.863303726946366E-7	DEFECT
// in this case, every color has a unique value	WITHOUT_CLASSIFICATION	0.9990307515449216	WITHOUT_CLASSIFICATION	9.6924845507835E-4	DEFECT
// in this case, every color has a range of values	WITHOUT_CLASSIFICATION	0.9997035239169738	WITHOUT_CLASSIFICATION	2.9647608302617773E-4	DEFECT
// end class wafermaprenderer	WITHOUT_CLASSIFICATION	0.9999992161979188	WITHOUT_CLASSIFICATION	7.838020811939623E-7	DEFECT
// if there is no plot, there is no dataset to access...	WITHOUT_CLASSIFICATION	0.9999998387585975	WITHOUT_CLASSIFICATION	1.6124140244314488E-7	DEFECT
// we don't know anything about the ordering of the x-values, // but we can still skip any initial values that fall outside the // range...	WITHOUT_CLASSIFICATION	0.9997812482105176	WITHOUT_CLASSIFICATION	2.1875178948237595E-4	DEFECT
// when the x-values are descending, the upper bound is found by // comparing against xLow	WITHOUT_CLASSIFICATION	0.9999803801487435	WITHOUT_CLASSIFICATION	1.961985125648082E-5	DEFECT
// more values than paints so map // multiple values to the same color	WITHOUT_CLASSIFICATION	0.9999997922238971	WITHOUT_CLASSIFICATION	2.0777610283545278E-7	DEFECT
// end foreach map entry // end else	WITHOUT_CLASSIFICATION	0.9999998752877126	WITHOUT_CLASSIFICATION	1.2471228732666394E-7	DEFECT
// get the previous point and the next point so we can calculate a // "hot spot" for the area (used by the chart entity)...	WITHOUT_CLASSIFICATION	0.9999999963114736	WITHOUT_CLASSIFICATION	3.6885263472889597E-9	DEFECT
// FIXME: calculate xxLeft and xxRight	WITHOUT_CLASSIFICATION	0.5348219720821143	DEFECT	0.46517802791788554	WITHOUT_CLASSIFICATION
// handle positive value	WITHOUT_CLASSIFICATION	0.9999901438290903	WITHOUT_CLASSIFICATION	9.85617090964191E-6	DEFECT
// LEFT POLYGON	WITHOUT_CLASSIFICATION	0.9999947076182741	WITHOUT_CLASSIFICATION	5.2923817258384856E-6	DEFECT
// LEFT POLYGON	WITHOUT_CLASSIFICATION	0.9999947076182741	WITHOUT_CLASSIFICATION	5.2923817258384856E-6	DEFECT
// RIGHT POLYGON	WITHOUT_CLASSIFICATION	0.9999976345781187	WITHOUT_CLASSIFICATION	2.365421881311786E-6	DEFECT
// RIGHT POLYGON	WITHOUT_CLASSIFICATION	0.9999976345781187	WITHOUT_CLASSIFICATION	2.365421881311786E-6	DEFECT
// handle negative value	WITHOUT_CLASSIFICATION	0.9999822069929653	WITHOUT_CLASSIFICATION	1.7793007034760755E-5	DEFECT
// calculate the bar width	WITHOUT_CLASSIFICATION	0.9999974419112028	WITHOUT_CLASSIFICATION	2.5580887971169363E-6	DEFECT
// '+' because v is negative	WITHOUT_CLASSIFICATION	0.9999937726653165	WITHOUT_CLASSIFICATION	6.227334683415344E-6	DEFECT
// handle rendering separately for the two plot orientations...	WITHOUT_CLASSIFICATION	0.9999994701996251	WITHOUT_CLASSIFICATION	5.298003749385244E-7	DEFECT
// draw the blocks	WITHOUT_CLASSIFICATION	0.999999385947525	WITHOUT_CLASSIFICATION	6.14052474985692E-7	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9999841673965367	WITHOUT_CLASSIFICATION	1.5832603463317274E-5	DEFECT
// SHAPES VISIBLE	WITHOUT_CLASSIFICATION	0.9999853892778874	WITHOUT_CLASSIFICATION	1.4610722112689001E-5	DEFECT
// SHAPES FILLED	WITHOUT_CLASSIFICATION	0.9999223073694925	WITHOUT_CLASSIFICATION	7.769263050752323E-5	DEFECT
// otherwise look up the paint table	WITHOUT_CLASSIFICATION	0.9999997776317611	WITHOUT_CLASSIFICATION	2.223682388812745E-7	DEFECT
// a list to store the series index and bar region, so we can draw // all the labels at the end...	WITHOUT_CLASSIFICATION	0.9999996061934814	WITHOUT_CLASSIFICATION	3.938065186049033E-7	DEFECT
// draw the blocks	WITHOUT_CLASSIFICATION	0.999999385947525	WITHOUT_CLASSIFICATION	6.14052474985692E-7	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9999841673965367	WITHOUT_CLASSIFICATION	1.5832603463317274E-5	DEFECT
// LINES VISIBLE	WITHOUT_CLASSIFICATION	0.9999924543532176	WITHOUT_CLASSIFICATION	7.545646782297639E-6	DEFECT
// preserves old behaviour	WITHOUT_CLASSIFICATION	0.9999975417328233	WITHOUT_CLASSIFICATION	2.4582671766888607E-6	DEFECT
// contained titles	WITHOUT_CLASSIFICATION	0.9999996361145053	WITHOUT_CLASSIFICATION	3.6388549483083336E-7	DEFECT
// SHAPES FILLED	WITHOUT_CLASSIFICATION	0.9999223073694925	WITHOUT_CLASSIFICATION	7.769263050752323E-5	DEFECT
// return the overall setting, if there is one...	WITHOUT_CLASSIFICATION	0.9999998157718395	WITHOUT_CLASSIFICATION	1.8422816052478548E-7	DEFECT
// delegate	WITHOUT_CLASSIFICATION	0.9999983560845139	WITHOUT_CLASSIFICATION	1.6439154859685034E-6	DEFECT
// do nothing if item is not visible	WITHOUT_CLASSIFICATION	0.9999744098725992	WITHOUT_CLASSIFICATION	2.5590127400768192E-5	DEFECT
// do nothing if item is not visible	WITHOUT_CLASSIFICATION	0.9999744098725992	WITHOUT_CLASSIFICATION	2.5590127400768192E-5	DEFECT
// do nothing if both the line and shape are not visible	WITHOUT_CLASSIFICATION	0.9999956511726795	WITHOUT_CLASSIFICATION	4.348827320533229E-6	DEFECT
// nothing is drawn for null...	WITHOUT_CLASSIFICATION	0.9999915376356716	WITHOUT_CLASSIFICATION	8.462364328435421E-6	DEFECT
// current data point...	WITHOUT_CLASSIFICATION	0.9999987542709564	WITHOUT_CLASSIFICATION	1.245729043498765E-6	DEFECT
// current data point...	WITHOUT_CLASSIFICATION	0.9999987542709564	WITHOUT_CLASSIFICATION	1.245729043498765E-6	DEFECT
// previous data point...	WITHOUT_CLASSIFICATION	0.9999994873612426	WITHOUT_CLASSIFICATION	5.126387575442935E-7	DEFECT
// draw the item label if there is one...	WITHOUT_CLASSIFICATION	0.9999996764681102	WITHOUT_CLASSIFICATION	3.2353188988072936E-7	DEFECT
// submit the current data point as a crosshair candidate	WITHOUT_CLASSIFICATION	0.9999998057581534	WITHOUT_CLASSIFICATION	1.9424184668326013E-7	DEFECT
// set the default item label positions	WITHOUT_CLASSIFICATION	0.9999997731232536	WITHOUT_CLASSIFICATION	2.2687674632819695E-7	DEFECT
// fill background...	WITHOUT_CLASSIFICATION	0.9999950504855155	WITHOUT_CLASSIFICATION	4.94951448450807E-6	DEFECT
// highlight the background corners...	WITHOUT_CLASSIFICATION	0.9999978695744366	WITHOUT_CLASSIFICATION	2.130425563473611E-6	DEFECT
// draw background image, if there is one...	WITHOUT_CLASSIFICATION	0.9999996240746296	WITHOUT_CLASSIFICATION	3.759253704850773E-7	DEFECT
// both axes	WITHOUT_CLASSIFICATION	0.9999969974357228	WITHOUT_CLASSIFICATION	3.0025642772413732E-6	DEFECT
// === DEPRECATED CODE ===	WITHOUT_CLASSIFICATION	0.9999530483110312	WITHOUT_CLASSIFICATION	4.69516889687282E-5	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9999841673965367	WITHOUT_CLASSIFICATION	1.5832603463317274E-5	DEFECT
// cases 5, 6, 7 and 8	WITHOUT_CLASSIFICATION	0.9999956987726921	WITHOUT_CLASSIFICATION	4.301227307851719E-6	DEFECT
// put an outline around the data area...	WITHOUT_CLASSIFICATION	0.9999990965827791	WITHOUT_CLASSIFICATION	9.034172209258794E-7	DEFECT
// check the value we are plotting...	WITHOUT_CLASSIFICATION	0.9999992390028689	WITHOUT_CLASSIFICATION	7.609971310741863E-7	DEFECT
// the bar is not visible	WITHOUT_CLASSIFICATION	0.9999871815309036	WITHOUT_CLASSIFICATION	1.2818469096464293E-5	DEFECT
// draw the bar...	WITHOUT_CLASSIFICATION	0.9999980415061566	WITHOUT_CLASSIFICATION	1.958493843492422E-6	DEFECT
// ITEM LABEL GENERATOR	WITHOUT_CLASSIFICATION	0.9998931316397028	WITHOUT_CLASSIFICATION	1.0686836029717735E-4	DEFECT
// return the generator for ALL series, if there is one...	WITHOUT_CLASSIFICATION	0.9999997896906061	WITHOUT_CLASSIFICATION	2.1030939381302895E-7	DEFECT
// return the generator for ALL series, if there is one...	WITHOUT_CLASSIFICATION	0.9999997896906061	WITHOUT_CLASSIFICATION	2.1030939381302895E-7	DEFECT
// otherwise look up the generator table	WITHOUT_CLASSIFICATION	0.9999998477049351	WITHOUT_CLASSIFICATION	1.522950650049295E-7	DEFECT
// otherwise look up the generator table	WITHOUT_CLASSIFICATION	0.9999998477049351	WITHOUT_CLASSIFICATION	1.522950650049295E-7	DEFECT
// TOOL TIP GENERATOR	WITHOUT_CLASSIFICATION	0.9997603301006931	WITHOUT_CLASSIFICATION	2.3966989930683622E-4	DEFECT
// URL GENERATOR	WITHOUT_CLASSIFICATION	0.9999760512109037	WITHOUT_CLASSIFICATION	2.394878909627448E-5	DEFECT
// clip left and right bounds to data area	WITHOUT_CLASSIFICATION	0.9999998192441876	WITHOUT_CLASSIFICATION	1.8075581238141204E-7	DEFECT
// clip top and bottom bounds to data area	WITHOUT_CLASSIFICATION	0.999999829322012	WITHOUT_CLASSIFICATION	1.7067798795653932E-7	DEFECT
// now draw the outlines, if visible...	WITHOUT_CLASSIFICATION	0.9999996025571544	WITHOUT_CLASSIFICATION	3.974428455790506E-7	DEFECT
// PlotOrientation.HORIZONTAL	WITHOUT_CLASSIFICATION	0.9999985160690147	WITHOUT_CLASSIFICATION	1.4839309853754242E-6	DEFECT
// check that a legend item needs to be displayed...	WITHOUT_CLASSIFICATION	0.9999992822450491	WITHOUT_CLASSIFICATION	7.177549508700461E-7	DEFECT
// defensive check	WITHOUT_CLASSIFICATION	0.9999966729822292	WITHOUT_CLASSIFICATION	3.327017770734121E-6	DEFECT
// BAR Y	WITHOUT_CLASSIFICATION	0.9999472183974416	WITHOUT_CLASSIFICATION	5.278160255845158E-5	DEFECT
// BAR X	WITHOUT_CLASSIFICATION	0.9999044234666014	WITHOUT_CLASSIFICATION	9.557653339868557E-5	DEFECT
// cases 1, 2, 3 and 4	WITHOUT_CLASSIFICATION	0.9999970824359868	WITHOUT_CLASSIFICATION	2.9175640132481396E-6	DEFECT
// you can add a null list - it would have been better if this // required EMPTY_LIST	WITHOUT_CLASSIFICATION	0.9994836870982418	WITHOUT_CLASSIFICATION	5.163129017582737E-4	DEFECT
// BAR Y	WITHOUT_CLASSIFICATION	0.9999472183974416	WITHOUT_CLASSIFICATION	5.278160255845158E-5	DEFECT
// BAR X	WITHOUT_CLASSIFICATION	0.9999044234666014	WITHOUT_CLASSIFICATION	9.557653339868557E-5	DEFECT
// cases 1, 2, 3 and 4	WITHOUT_CLASSIFICATION	0.9999970824359868	WITHOUT_CLASSIFICATION	2.9175640132481396E-6	DEFECT
// let the superclass handle it...	WITHOUT_CLASSIFICATION	0.999999874253295	WITHOUT_CLASSIFICATION	1.2574670510676256E-7	DEFECT
// bar is not visible	WITHOUT_CLASSIFICATION	0.999964901497403	WITHOUT_CLASSIFICATION	3.509850259699215E-5	DEFECT
// bar is not visible	WITHOUT_CLASSIFICATION	0.999964901497403	WITHOUT_CLASSIFICATION	3.509850259699215E-5	DEFECT
// cases 5, 6, 7 and 8	WITHOUT_CLASSIFICATION	0.9999956987726921	WITHOUT_CLASSIFICATION	4.301227307851719E-6	DEFECT
// cases 5, 6, 7 and 8	WITHOUT_CLASSIFICATION	0.9999956987726921	WITHOUT_CLASSIFICATION	4.301227307851719E-6	DEFECT
// cases 9, 10, 11 and 12	WITHOUT_CLASSIFICATION	0.9999968043109908	WITHOUT_CLASSIFICATION	3.1956890090990038E-6	DEFECT
// cases 9, 10, 11 and 12	WITHOUT_CLASSIFICATION	0.9999968043109908	WITHOUT_CLASSIFICATION	3.1956890090990038E-6	DEFECT
// draw the outline...	WITHOUT_CLASSIFICATION	0.9999981007029202	WITHOUT_CLASSIFICATION	1.8992970798264234E-6	DEFECT
// draw the outline...	WITHOUT_CLASSIFICATION	0.9999981007029202	WITHOUT_CLASSIFICATION	1.8992970798264234E-6	DEFECT
// standard deviation lines	WITHOUT_CLASSIFICATION	0.9999995395613217	WITHOUT_CLASSIFICATION	4.60438678291038E-7	DEFECT
// standard deviation lines	WITHOUT_CLASSIFICATION	0.9999995395613217	WITHOUT_CLASSIFICATION	4.60438678291038E-7	DEFECT
// no new methods	WITHOUT_CLASSIFICATION	0.9999978727880241	WITHOUT_CLASSIFICATION	2.1272119760175916E-6	DEFECT
// value 0	WITHOUT_CLASSIFICATION	0.9999908737218083	WITHOUT_CLASSIFICATION	9.126278191726215E-6	DEFECT
// get the clipping values...	WITHOUT_CLASSIFICATION	0.9999980274899173	WITHOUT_CLASSIFICATION	1.9725100826950614E-6	DEFECT
// submit the current data point as a crosshair candidate	WITHOUT_CLASSIFICATION	0.9999998057581534	WITHOUT_CLASSIFICATION	1.9424184668326013E-7	DEFECT
// submit the current data point as a crosshair candidate	WITHOUT_CLASSIFICATION	0.9999998057581534	WITHOUT_CLASSIFICATION	1.9424184668326013E-7	DEFECT
// draw the bar...	WITHOUT_CLASSIFICATION	0.9999980415061566	WITHOUT_CLASSIFICATION	1.958493843492422E-6	DEFECT
// cases 1, 2, 3 and 4	WITHOUT_CLASSIFICATION	0.9999970824359868	WITHOUT_CLASSIFICATION	2.9175640132481396E-6	DEFECT
// bar is not visible	WITHOUT_CLASSIFICATION	0.999964901497403	WITHOUT_CLASSIFICATION	3.509850259699215E-5	DEFECT
// bar is not visible	WITHOUT_CLASSIFICATION	0.999964901497403	WITHOUT_CLASSIFICATION	3.509850259699215E-5	DEFECT
// cases 5, 6, 7 and 8	WITHOUT_CLASSIFICATION	0.9999956987726921	WITHOUT_CLASSIFICATION	4.301227307851719E-6	DEFECT
// cases 9, 10, 11 and 12	WITHOUT_CLASSIFICATION	0.9999968043109908	WITHOUT_CLASSIFICATION	3.1956890090990038E-6	DEFECT
// draw the outline...	WITHOUT_CLASSIFICATION	0.9999981007029202	WITHOUT_CLASSIFICATION	1.8992970798264234E-6	DEFECT
// if we modify the original list, it's best if the URL generator is // not affected	WITHOUT_CLASSIFICATION	0.9999996370204547	WITHOUT_CLASSIFICATION	3.629795452465502E-7	DEFECT
// value 1	WITHOUT_CLASSIFICATION	0.9999877117903875	WITHOUT_CLASSIFICATION	1.2288209612594272E-5	DEFECT
// DRAW THE BARS...	WITHOUT_CLASSIFICATION	0.9999374490278533	WITHOUT_CLASSIFICATION	6.255097214673532E-5	DEFECT
// collect entity and tool tip information...	WITHOUT_CLASSIFICATION	0.9999977532571824	WITHOUT_CLASSIFICATION	2.246742817518753E-6	DEFECT
// Y0	WITHOUT_CLASSIFICATION	0.9999894046242476	WITHOUT_CLASSIFICATION	1.0595375752407605E-5	DEFECT
// Y1	WITHOUT_CLASSIFICATION	0.9999897233804238	WITHOUT_CLASSIFICATION	1.0276619576123052E-5	DEFECT
// nothing is drawn for null values...	WITHOUT_CLASSIFICATION	0.9999872612938883	WITHOUT_CLASSIFICATION	1.2738706111687781E-5	DEFECT
// X	WITHOUT_CLASSIFICATION	0.9999790827676561	WITHOUT_CLASSIFICATION	2.0917232343922178E-5	DEFECT
// Y	WITHOUT_CLASSIFICATION	0.9999894103229849	WITHOUT_CLASSIFICATION	1.0589677015107509E-5	DEFECT
// subtitle 1 is the legend	WITHOUT_CLASSIFICATION	0.9999587460702881	WITHOUT_CLASSIFICATION	4.125392971194601E-5	DEFECT
// calculate the bar width	WITHOUT_CLASSIFICATION	0.9999974419112028	WITHOUT_CLASSIFICATION	2.5580887971169363E-6	DEFECT
// draw the bar...	WITHOUT_CLASSIFICATION	0.9999980415061566	WITHOUT_CLASSIFICATION	1.958493843492422E-6	DEFECT
// BAR Y	WITHOUT_CLASSIFICATION	0.9999472183974416	WITHOUT_CLASSIFICATION	5.278160255845158E-5	DEFECT
// BAR X	WITHOUT_CLASSIFICATION	0.9999044234666014	WITHOUT_CLASSIFICATION	9.557653339868557E-5	DEFECT
// cases 1, 2, 3 and 4	WITHOUT_CLASSIFICATION	0.9999970824359868	WITHOUT_CLASSIFICATION	2.9175640132481396E-6	DEFECT
// bar is not visible	WITHOUT_CLASSIFICATION	0.999964901497403	WITHOUT_CLASSIFICATION	3.509850259699215E-5	DEFECT
// cases 9, 10, 11 and 12	WITHOUT_CLASSIFICATION	0.9999968043109908	WITHOUT_CLASSIFICATION	3.1956890090990038E-6	DEFECT
// draw the outline...	WITHOUT_CLASSIFICATION	0.9999981007029202	WITHOUT_CLASSIFICATION	1.8992970798264234E-6	DEFECT
// draw the outline...	WITHOUT_CLASSIFICATION	0.9999981007029202	WITHOUT_CLASSIFICATION	1.8992970798264234E-6	DEFECT
// collect entity and tool tip information...	WITHOUT_CLASSIFICATION	0.9999977532571824	WITHOUT_CLASSIFICATION	2.246742817518753E-6	DEFECT
// collect entity and tool tip information...	WITHOUT_CLASSIFICATION	0.9999977532571824	WITHOUT_CLASSIFICATION	2.246742817518753E-6	DEFECT
// nothing is drawn for null values...	WITHOUT_CLASSIFICATION	0.9999872612938883	WITHOUT_CLASSIFICATION	1.2738706111687781E-5	DEFECT
// nothing is drawn for null values...	WITHOUT_CLASSIFICATION	0.9999872612938883	WITHOUT_CLASSIFICATION	1.2738706111687781E-5	DEFECT
// the clone contains a reference to a CLONE of the original object	WITHOUT_CLASSIFICATION	0.999999913026037	WITHOUT_CLASSIFICATION	8.697396300596207E-8	DEFECT
// draw the item labels if there are any...	WITHOUT_CLASSIFICATION	0.9999995975083268	WITHOUT_CLASSIFICATION	4.0249167324787337E-7	DEFECT
// calculate bar width...	WITHOUT_CLASSIFICATION	0.9999952081872104	WITHOUT_CLASSIFICATION	4.791812789470136E-6	DEFECT
// && state.getBarWidth() > BAR_OUTLINE_WIDTH_THRESHOLD) {	WITHOUT_CLASSIFICATION	0.9999954053039666	WITHOUT_CLASSIFICATION	4.59469603345418E-6	DEFECT
// no fields to compute...	WITHOUT_CLASSIFICATION	0.999999368469398	WITHOUT_CLASSIFICATION	6.315306021420425E-7	DEFECT
//plotBackgroundPaint;	WITHOUT_CLASSIFICATION	0.9999866080190842	WITHOUT_CLASSIFICATION	1.3391980915796817E-5	DEFECT
// PlotOrientation.VERTICAL	WITHOUT_CLASSIFICATION	0.9999972739344507	WITHOUT_CLASSIFICATION	2.7260655493401328E-6	DEFECT
// calculate the bar width	WITHOUT_CLASSIFICATION	0.9999974419112028	WITHOUT_CLASSIFICATION	2.5580887971169363E-6	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9999841673965367	WITHOUT_CLASSIFICATION	1.5832603463317274E-5	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9999841673965367	WITHOUT_CLASSIFICATION	1.5832603463317274E-5	DEFECT
// submit the current data point as a crosshair candidate	WITHOUT_CLASSIFICATION	0.9999998057581534	WITHOUT_CLASSIFICATION	1.9424184668326013E-7	DEFECT
// submit the current data point as a crosshair candidate	WITHOUT_CLASSIFICATION	0.9999998057581534	WITHOUT_CLASSIFICATION	1.9424184668326013E-7	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999934710680527	WITHOUT_CLASSIFICATION	6.528931947226976E-6	DEFECT
// the bar is not visible	WITHOUT_CLASSIFICATION	0.9999871815309036	WITHOUT_CLASSIFICATION	1.2818469096464293E-5	DEFECT
// draw the bar...	WITHOUT_CLASSIFICATION	0.9999980415061566	WITHOUT_CLASSIFICATION	1.958493843492422E-6	DEFECT
// check that a legend item needs to be displayed...	WITHOUT_CLASSIFICATION	0.9999992822450491	WITHOUT_CLASSIFICATION	7.177549508700461E-7	DEFECT
// check that a legend item needs to be displayed...	WITHOUT_CLASSIFICATION	0.9999992822450491	WITHOUT_CLASSIFICATION	7.177549508700461E-7	DEFECT
// check that a legend item needs to be displayed...	WITHOUT_CLASSIFICATION	0.9999992822450491	WITHOUT_CLASSIFICATION	7.177549508700461E-7	DEFECT
// bar is not visible	WITHOUT_CLASSIFICATION	0.999964901497403	WITHOUT_CLASSIFICATION	3.509850259699215E-5	DEFECT
// bar is not visible	WITHOUT_CLASSIFICATION	0.999964901497403	WITHOUT_CLASSIFICATION	3.509850259699215E-5	DEFECT
// nothing is drawn for null values...	WITHOUT_CLASSIFICATION	0.9999872612938883	WITHOUT_CLASSIFICATION	1.2738706111687781E-5	DEFECT
// draw the item labels if there are any...	WITHOUT_CLASSIFICATION	0.9999995975083268	WITHOUT_CLASSIFICATION	4.0249167324787337E-7	DEFECT
// calculate bar width...	WITHOUT_CLASSIFICATION	0.9999952081872104	WITHOUT_CLASSIFICATION	4.791812789470136E-6	DEFECT
// check that clone is independent of the original	WITHOUT_CLASSIFICATION	0.9999999627699333	WITHOUT_CLASSIFICATION	3.72300666387979E-8	DEFECT
// do nothing if item is not visible or null	WITHOUT_CLASSIFICATION	0.9999739685585797	WITHOUT_CLASSIFICATION	2.6031441420310866E-5	DEFECT
// 100 percent, so it will not apply unless changed	WITHOUT_CLASSIFICATION	0.99999917680188	WITHOUT_CLASSIFICATION	8.231981200152233E-7	DEFECT
// work out the label anchor point...	WITHOUT_CLASSIFICATION	0.9999976394324603	WITHOUT_CLASSIFICATION	2.360567539592484E-6	DEFECT
// FIXME: add setSeriesOutlinePaint(int, Paint, boolean)?	WITHOUT_CLASSIFICATION	0.7699099318217189	WITHOUT_CLASSIFICATION	0.2300900681782812	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9999841673965367	WITHOUT_CLASSIFICATION	1.5832603463317274E-5	DEFECT
// do nothing if item is not visible	WITHOUT_CLASSIFICATION	0.9999744098725992	WITHOUT_CLASSIFICATION	2.5590127400768192E-5	DEFECT
// current data point...	WITHOUT_CLASSIFICATION	0.9999987542709564	WITHOUT_CLASSIFICATION	1.245729043498765E-6	DEFECT
// current data point...	WITHOUT_CLASSIFICATION	0.9999987542709564	WITHOUT_CLASSIFICATION	1.245729043498765E-6	DEFECT
// previous data point...	WITHOUT_CLASSIFICATION	0.9999994873612426	WITHOUT_CLASSIFICATION	5.126387575442935E-7	DEFECT
// draw the item labels if there are any...	WITHOUT_CLASSIFICATION	0.9999995975083268	WITHOUT_CLASSIFICATION	4.0249167324787337E-7	DEFECT
// check key order	WITHOUT_CLASSIFICATION	0.9999969290443321	WITHOUT_CLASSIFICATION	3.0709556677931482E-6	DEFECT
// in the following code, barL0 is (in Java2D coordinates) the LEFT // end of the bar for a horizontal bar chart, and the TOP end of the // bar for a vertical bar chart.  Whether this is the BASE of the bar // or not depends also on (a) whether the data value is 'negative' // relative to the base value and (b) whether or not the range axis is // inverted.  This only matters if/when we apply the minimumBarLength // attribute, because we should extend the non-base end of the bar	WITHOUT_CLASSIFICATION	0.9998807528918718	WITHOUT_CLASSIFICATION	1.192471081282504E-4	DEFECT
// switch x and y	WITHOUT_CLASSIFICATION	0.9999993550028976	WITHOUT_CLASSIFICATION	6.449971023513315E-7	DEFECT
// or: x1s + 2*(x1-x1s)	WITHOUT_CLASSIFICATION	0.9999820066153801	WITHOUT_CLASSIFICATION	1.7993384619901322E-5	DEFECT
// or: x0s + 2*(x0-x0s)	WITHOUT_CLASSIFICATION	0.9999815498698288	WITHOUT_CLASSIFICATION	1.8450130171117505E-5	DEFECT
// extend x0's flat bar	WITHOUT_CLASSIFICATION	0.9999979046378848	WITHOUT_CLASSIFICATION	2.095362115226681E-6	DEFECT
// upright bar	WITHOUT_CLASSIFICATION	0.9999989231749585	WITHOUT_CLASSIFICATION	1.0768250414704524E-6	DEFECT
// x1's flat bar	WITHOUT_CLASSIFICATION	0.9999970143753477	WITHOUT_CLASSIFICATION	2.985624652246792E-6	DEFECT
//standard deviation lines	WITHOUT_CLASSIFICATION	0.9999977656436986	WITHOUT_CLASSIFICATION	2.234356301423186E-6	DEFECT
//// OUTLINE PAINT /////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999907465981083	WITHOUT_CLASSIFICATION	9.253401891755016E-6	DEFECT
//plotOutlinePaint;	WITHOUT_CLASSIFICATION	0.9999904902131309	WITHOUT_CLASSIFICATION	9.509786869015724E-6	DEFECT
// check key order	WITHOUT_CLASSIFICATION	0.9999969290443321	WITHOUT_CLASSIFICATION	3.0709556677931482E-6	DEFECT
// check key order	WITHOUT_CLASSIFICATION	0.9999969290443321	WITHOUT_CLASSIFICATION	3.0709556677931482E-6	DEFECT
// previous data point...	WITHOUT_CLASSIFICATION	0.9999994873612426	WITHOUT_CLASSIFICATION	5.126387575442935E-7	DEFECT
// draw the item label if there is one...	WITHOUT_CLASSIFICATION	0.9999996764681102	WITHOUT_CLASSIFICATION	3.2353188988072936E-7	DEFECT
// BAR Y	WITHOUT_CLASSIFICATION	0.9999472183974416	WITHOUT_CLASSIFICATION	5.278160255845158E-5	DEFECT
// BAR X	WITHOUT_CLASSIFICATION	0.9999044234666014	WITHOUT_CLASSIFICATION	9.557653339868557E-5	DEFECT
// Y0	WITHOUT_CLASSIFICATION	0.9999894046242476	WITHOUT_CLASSIFICATION	1.0595375752407605E-5	DEFECT
// Y1	WITHOUT_CLASSIFICATION	0.9999897233804238	WITHOUT_CLASSIFICATION	1.0276619576123052E-5	DEFECT
// draw the standard deviation lines *before* the shapes (if they're // visible) - it looks better if the shape fill colour is different to // the line colour	WITHOUT_CLASSIFICATION	0.9999998992646638	WITHOUT_CLASSIFICATION	1.0073533627090781E-7	DEFECT
// BAR WIDTH	WITHOUT_CLASSIFICATION	0.9998961440935684	WITHOUT_CLASSIFICATION	1.0385590643156521E-4	DEFECT
// BAR HEIGHT	WITHOUT_CLASSIFICATION	0.9999571965419777	WITHOUT_CLASSIFICATION	4.2803458022409215E-5	DEFECT
// there are no fields to check	WITHOUT_CLASSIFICATION	0.9999991342142566	WITHOUT_CLASSIFICATION	8.657857433197338E-7	DEFECT
/* =========================================================== * JFreeChart : a free chart library for the Java(tm) platform * =========================================================== * * (C) Copyright 2000-2013, by Object Refinery Limited and Contributors. * * Project Info:  http://www.jfree.org/jfreechart/index.html * * This library is free software; you can redistribute it and/or modify it * under the terms of the GNU Lesser General Public License as published by * the Free Software Foundation; either version 2.1 of the License, or * (at your option) any later version. * * This library is distributed in the hope that it will be useful, but * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public * License for more details. * * You should have received a copy of the GNU Lesser General Public * License along with this library; if not, write to the Free Software * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, * USA. * * [Oracle and Java are registered trademarks of Oracle and/or its affiliates.  * Other names may be trademarks of their respective owners.] * * ------------------------- * CategoryItemRenderer.java * ------------------------- * * (C) Copyright 2001-2011, by Object Refinery Limited and Contributors. * * Original Author:  David Gilbert (for Object Refinery Limited); * Contributor(s):   Mark Watson (www.markwatson.com); * * Changes * ------- * 23-Oct-2001 : Version 1 (DG); * 16-Jan-2002 : Renamed HorizontalCategoryItemRenderer.java *               --> CategoryItemRenderer.java (DG); * 05-Feb-2002 : Changed return type of the drawCategoryItem method from void *               to Shape, as part of the tooltips implementation (DG) * *               NOTE (30-May-2002) : this has subsequently been changed back *               to void, tooltips are now collected along with entities in *               ChartRenderingInfo (DG); * * 14-Mar-2002 : Added the initialise method, and changed all bar plots to use *               this renderer (DG); * 23-May-2002 : Added ChartRenderingInfo to the initialise method (DG); * 29-May-2002 : Added the getAxisArea(Rectangle2D) method (DG); * 06-Jun-2002 : Updated Javadoc comments (DG); * 26-Jun-2002 : Added range axis to the initialise method (DG); * 24-Sep-2002 : Added getLegendItem() method (DG); * 23-Oct-2002 : Added methods to get/setToolTipGenerator (DG); * 05-Nov-2002 : Replaced references to CategoryDataset with TableDataset (DG); * 06-Nov-2002 : Added the domain axis to the drawCategoryItem method.  Renamed *               drawCategoryItem() --> drawItem() (DG); * 20-Nov-2002 : Changed signature of drawItem() method to reflect use of *               TableDataset (DG); * 26-Nov-2002 : Replaced the isStacked() method with the getRangeType() *               method (DG); * 08-Jan-2003 : Changed getSeriesCount() --> getRowCount() and *               getCategoryCount() --> getColumnCount() (DG); * 09-Jan-2003 : Changed name of grid-line methods (DG); * 21-Jan-2003 : Merged TableDataset with CategoryDataset (DG); * 10-Apr-2003 : Changed CategoryDataset to KeyedValues2DDataset in *               drawItem() method (DG); * 29-Apr-2003 : Eliminated Renderer interface (DG); * 02-Sep-2003 : Fix for bug 790407 (DG); * 16-Sep-2003 : Changed ChartRenderingInfo --> PlotRenderingInfo (DG); * 20-Oct-2003 : Added setOutlinePaint() method (DG); * 06-Feb-2004 : Added missing methods, and moved deprecated methods (DG); * 19-Feb-2004 : Added extra setXXXLabelsVisible() methods (DG); * 29-Apr-2004 : Changed Integer --> int in initialise() method (DG); * 18-May-2004 : Added methods for item label paint (DG); * 05-Nov-2004 : Added getPassCount() method and 'pass' parameter to drawItem() *               method (DG); * 07-Jan-2005 : Renamed getRangeExtent() --> findRangeBounds (DG); * 11-Jan-2005 : Removed deprecated code in preparation for 1.0.0 release (DG); * 23-Feb-2005 : Now extends LegendItemSource (DG); * 20-Apr-2005 : Renamed CategoryLabelGenerator *               --> CategoryItemLabelGenerator (DG); * 20-May-2005 : Added drawDomainMarker() method (DG); * ------------- JFREECHART 1.0.x --------------------------------------------- * 20-Feb-2007 : Updated API docs (DG); * 19-Apr-2007 : Deprecated seriesVisible and seriesVisibleInLegend flags (DG); * 20-Apr-2007 : Deprecated paint, fillPaint, outlinePaint, stroke, *               outlineStroke, shape, itemLabelsVisible, itemLabelFont, *               itemLabelPaint, positiveItemLabelPosition, *               negativeItemLabelPosition and createEntities override *               fields (DG); * 26-Jun-2008 : Added new method required for crosshair support - THIS CHANGES *               THE API as of version 1.0.11 (DG); * */	WITHOUT_CLASSIFICATION	0.999999933228753	WITHOUT_CLASSIFICATION	6.677124705937564E-8	DEFECT
//// PAINT /////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999932477336421	WITHOUT_CLASSIFICATION	6.752266358013016E-6	DEFECT
// FIXME: add setSeriesPaint(int, Paint, boolean)?	WITHOUT_CLASSIFICATION	0.7134408224046475	WITHOUT_CLASSIFICATION	0.28655917759535243	DEFECT
// FIXME: add setBasePaint(int, Paint, boolean)?	WITHOUT_CLASSIFICATION	0.7243498953843144	WITHOUT_CLASSIFICATION	0.27565010461568573	DEFECT
//// FILL PAINT /////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9998952426232783	WITHOUT_CLASSIFICATION	1.0475737672169284E-4	DEFECT
// POSITIVE ITEM LABEL POSITION...	WITHOUT_CLASSIFICATION	0.9999628762130618	WITHOUT_CLASSIFICATION	3.712378693817243E-5	DEFECT
// NEGATIVE ITEM LABEL POSITION...	WITHOUT_CLASSIFICATION	0.9999747214265533	WITHOUT_CLASSIFICATION	2.527857344670242E-5	DEFECT
// ITEM LABEL GENERATOR	WITHOUT_CLASSIFICATION	0.9998931316397028	WITHOUT_CLASSIFICATION	1.0686836029717735E-4	DEFECT
// TOOL TIP GENERATOR	WITHOUT_CLASSIFICATION	0.9997603301006931	WITHOUT_CLASSIFICATION	2.3966989930683622E-4	DEFECT
// draw the outline...	WITHOUT_CLASSIFICATION	0.9999981007029202	WITHOUT_CLASSIFICATION	1.8992970798264234E-6	DEFECT
// FIXME: add setSeriesPaint(int, Paint, boolean)?	WITHOUT_CLASSIFICATION	0.7134408224046475	WITHOUT_CLASSIFICATION	0.28655917759535243	DEFECT
// ITEM LABELS VISIBLE	WITHOUT_CLASSIFICATION	0.9999069726766481	WITHOUT_CLASSIFICATION	9.302732335188376E-5	DEFECT
// FIXME: add setBaseOutlinePaint(Paint, boolean)?	WITHOUT_CLASSIFICATION	0.7280124978608383	WITHOUT_CLASSIFICATION	0.2719875021391617	DEFECT
//// STROKE ////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999773028660837	WITHOUT_CLASSIFICATION	2.2697133916366948E-5	DEFECT
// FIXME: add setSeriesStroke(int, Stroke, boolean) ?	WITHOUT_CLASSIFICATION	0.5830102396639213	DEFECT	0.4169897603360787	WITHOUT_CLASSIFICATION
// FIXME: add setBaseStroke(Stroke, boolean) ?	WITHOUT_CLASSIFICATION	0.5018083180849305	DEFECT	0.49819168191506946	WITHOUT_CLASSIFICATION
//// OUTLINE STROKE ////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999901294051374	WITHOUT_CLASSIFICATION	9.870594862552441E-6	DEFECT
// FIXME: add setSeriesOutlineStroke(int, Stroke, boolean) ?	WITHOUT_CLASSIFICATION	0.5143029452638561	DEFECT	0.48569705473614383	WITHOUT_CLASSIFICATION
// FIXME: add setBaseOutlineStroke(Stroke, boolean) ?	WITHOUT_CLASSIFICATION	0.5462441526267502	WITHOUT_CLASSIFICATION	0.4537558473732499	DEFECT
//// SHAPE /////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999838761873711	WITHOUT_CLASSIFICATION	1.612381262896268E-5	DEFECT
// FIXME: add setSeriesShape(int, Shape, boolean) ?	WITHOUT_CLASSIFICATION	0.5253942508822768	WITHOUT_CLASSIFICATION	0.4746057491177233	DEFECT
// FIXME: add setBaseShape(Shape, boolean) ?	WITHOUT_CLASSIFICATION	0.5589294870026879	DEFECT	0.4410705129973122	WITHOUT_CLASSIFICATION
// check retrieve value by key	WITHOUT_CLASSIFICATION	0.9999944503804522	WITHOUT_CLASSIFICATION	5.549619547761523E-6	DEFECT
// FIXME: add setSeriesItemLabelGenerator(int, CategoryItemLabelGenerator, //            boolean)	WITHOUT_CLASSIFICATION	0.9893458677574897	WITHOUT_CLASSIFICATION	0.010654132242510295	DEFECT
// FIXME: add setBaseToolTipGenerator(CategoryToolTipGenerator, boolean) ?	WITHOUT_CLASSIFICATION	0.7860149089392355	WITHOUT_CLASSIFICATION	0.21398509106076444	DEFECT
//// ITEM LABEL FONT  //////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999198192986477	WITHOUT_CLASSIFICATION	8.018070135229126E-5	DEFECT
// FIXME: add setSeriesItemLabelFont(int, Font, boolean) ?	WITHOUT_CLASSIFICATION	0.8769986626054156	WITHOUT_CLASSIFICATION	0.12300133739458437	DEFECT
// FIXME: add setBaseItemLabelFont(Font, boolean) ?	WITHOUT_CLASSIFICATION	0.831030894746909	WITHOUT_CLASSIFICATION	0.1689691052530909	DEFECT
//// ITEM LABEL PAINT  /////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999751398548485	WITHOUT_CLASSIFICATION	2.48601451514488E-5	DEFECT
// FIXME: add setSeriesItemLabelPaint(int, Paint, boolean) ?	WITHOUT_CLASSIFICATION	0.9068406742673427	WITHOUT_CLASSIFICATION	0.09315932573265727	DEFECT
// FIXME: add setBaseItemLabelPaint(Paint, boolean) ?	WITHOUT_CLASSIFICATION	0.8862321183654889	WITHOUT_CLASSIFICATION	0.1137678816345112	DEFECT
// ITEM URL GENERATOR	WITHOUT_CLASSIFICATION	0.9998874077490132	WITHOUT_CLASSIFICATION	1.125922509867514E-4	DEFECT
// as a special case, if the bar colour has alpha == 0, we draw // nothing.	WITHOUT_CLASSIFICATION	0.9999999566686368	WITHOUT_CLASSIFICATION	4.3331363129941656E-8	DEFECT
/*&& state.getBarWidth() > renderer.BAR_OUTLINE_WIDTH_THRESHOLD*/	WITHOUT_CLASSIFICATION	0.9998579629625477	WITHOUT_CLASSIFICATION	1.4203703745225895E-4	DEFECT
// standard ResourceBundle behaviour	WITHOUT_CLASSIFICATION	0.9999998552918131	WITHOUT_CLASSIFICATION	1.4470818687066788E-7	DEFECT
// check retrieve value by key	WITHOUT_CLASSIFICATION	0.9999944503804522	WITHOUT_CLASSIFICATION	5.549619547761523E-6	DEFECT
// nothing is drawn for null...	WITHOUT_CLASSIFICATION	0.9999915376356716	WITHOUT_CLASSIFICATION	8.462364328435421E-6	DEFECT
// current data point...	WITHOUT_CLASSIFICATION	0.9999987542709564	WITHOUT_CLASSIFICATION	1.245729043498765E-6	DEFECT
// previous data point...	WITHOUT_CLASSIFICATION	0.9999994873612426	WITHOUT_CLASSIFICATION	5.126387575442935E-7	DEFECT
// previous data point...	WITHOUT_CLASSIFICATION	0.9999994873612426	WITHOUT_CLASSIFICATION	5.126387575442935E-7	DEFECT
// draw the item label if there is one...	WITHOUT_CLASSIFICATION	0.9999996764681102	WITHOUT_CLASSIFICATION	3.2353188988072936E-7	DEFECT
// submit the current data point as a crosshair candidate	WITHOUT_CLASSIFICATION	0.9999998057581534	WITHOUT_CLASSIFICATION	1.9424184668326013E-7	DEFECT
// fill background...	WITHOUT_CLASSIFICATION	0.9999950504855155	WITHOUT_CLASSIFICATION	4.94951448450807E-6	DEFECT
// draw background image, if there is one...	WITHOUT_CLASSIFICATION	0.9999996240746296	WITHOUT_CLASSIFICATION	3.759253704850773E-7	DEFECT
// put an outline around the data area...	WITHOUT_CLASSIFICATION	0.9999990965827791	WITHOUT_CLASSIFICATION	9.034172209258794E-7	DEFECT
// draw the bar...	WITHOUT_CLASSIFICATION	0.9999980415061566	WITHOUT_CLASSIFICATION	1.958493843492422E-6	DEFECT
// collect entity and tool tip information...	WITHOUT_CLASSIFICATION	0.9999977532571824	WITHOUT_CLASSIFICATION	2.246742817518753E-6	DEFECT
// nothing is drawn for null values...	WITHOUT_CLASSIFICATION	0.9999872612938883	WITHOUT_CLASSIFICATION	1.2738706111687781E-5	DEFECT
// handle a special case - if the bar colour has alpha == 0, it is // invisible so we shouldn't draw any shadow	WITHOUT_CLASSIFICATION	0.9999988830494198	WITHOUT_CLASSIFICATION	1.1169505802431198E-6	DEFECT
// 100 percent, so it will not apply unless // changed	WITHOUT_CLASSIFICATION	0.9999994711804054	WITHOUT_CLASSIFICATION	5.288195945332467E-7	DEFECT
// set the outline paint to fully transparent, then the legend shape // will just have the same colour as the lines drawn by the renderer	WITHOUT_CLASSIFICATION	0.9999995922767463	WITHOUT_CLASSIFICATION	4.077232537947063E-7	DEFECT
// first check the number we are plotting...	WITHOUT_CLASSIFICATION	0.9999996453274845	WITHOUT_CLASSIFICATION	3.546725154872449E-7	DEFECT
// reset the min and max	WITHOUT_CLASSIFICATION	0.9999967995409667	WITHOUT_CLASSIFICATION	3.2004590333793298E-6	DEFECT
// connect to the previous point	WITHOUT_CLASSIFICATION	0.9999998032503026	WITHOUT_CLASSIFICATION	1.9674969740841472E-7	DEFECT
// create a line renderer only	WITHOUT_CLASSIFICATION	0.9999974898537116	WITHOUT_CLASSIFICATION	2.5101462884666454E-6	DEFECT
// higlight the background corners...	WITHOUT_CLASSIFICATION	0.9999977612924565	WITHOUT_CLASSIFICATION	2.2387075434869734E-6	DEFECT
// do nothing if item is not visible	WITHOUT_CLASSIFICATION	0.9999744098725992	WITHOUT_CLASSIFICATION	2.5590127400768192E-5	DEFECT
// check that a legend item needs to be displayed...	WITHOUT_CLASSIFICATION	0.9999992822450491	WITHOUT_CLASSIFICATION	7.177549508700461E-7	DEFECT
// draw the outline...	WITHOUT_CLASSIFICATION	0.9999981007029202	WITHOUT_CLASSIFICATION	1.8992970798264234E-6	DEFECT
// Y0	WITHOUT_CLASSIFICATION	0.9999894046242476	WITHOUT_CLASSIFICATION	1.0595375752407605E-5	DEFECT
// Y1	WITHOUT_CLASSIFICATION	0.9999897233804238	WITHOUT_CLASSIFICATION	1.0276619576123052E-5	DEFECT
// nothing is drawn for null values...	WITHOUT_CLASSIFICATION	0.9999872612938883	WITHOUT_CLASSIFICATION	1.2738706111687781E-5	DEFECT
// BAR WIDTH	WITHOUT_CLASSIFICATION	0.9998961440935684	WITHOUT_CLASSIFICATION	1.0385590643156521E-4	DEFECT
// BAR HEIGHT	WITHOUT_CLASSIFICATION	0.9999571965419777	WITHOUT_CLASSIFICATION	4.2803458022409215E-5	DEFECT
// we'll set this to false if there is at // least one non-null data item...	WITHOUT_CLASSIFICATION	0.9999928844212806	WITHOUT_CLASSIFICATION	7.1155787193421154E-6	DEFECT
// set the default item label positions, which will only be used if // the user requests visible item labels...	WITHOUT_CLASSIFICATION	0.9999999914939778	WITHOUT_CLASSIFICATION	8.506022314497817E-9	DEFECT
// treat the last column value as an absolute	WITHOUT_CLASSIFICATION	0.9999984279603107	WITHOUT_CLASSIFICATION	1.5720396893858875E-6	DEFECT
// only needed if calculating percentages	WITHOUT_CLASSIFICATION	0.9999995652221394	WITHOUT_CLASSIFICATION	4.3477786055026304E-7	DEFECT
// calculate the box width	WITHOUT_CLASSIFICATION	0.9999903335229596	WITHOUT_CLASSIFICATION	9.666477040325656E-6	DEFECT
// offset the start of the boxes if the total width used is smaller // than the category width	WITHOUT_CLASSIFICATION	0.9999999884571943	WITHOUT_CLASSIFICATION	1.1542805672977717E-8	DEFECT
// offset the start of the box if the box width is smaller than // the category width	WITHOUT_CLASSIFICATION	0.9999996135554348	WITHOUT_CLASSIFICATION	3.864445651635558E-7	DEFECT
// draw the box...	WITHOUT_CLASSIFICATION	0.9999977505717288	WITHOUT_CLASSIFICATION	2.249428271132251E-6	DEFECT
// draw the upper shadow...	WITHOUT_CLASSIFICATION	0.9999977338067494	WITHOUT_CLASSIFICATION	2.2661932505706278E-6	DEFECT
// draw the lower shadow...	WITHOUT_CLASSIFICATION	0.9999983394434182	WITHOUT_CLASSIFICATION	1.6605565818624227E-6	DEFECT
// FIXME: add setBasePaint(int, Paint, boolean)?	WITHOUT_CLASSIFICATION	0.7243498953843144	WITHOUT_CLASSIFICATION	0.27565010461568573	DEFECT
// offset the start of the boxes if the total width used is smaller // than the category width	WITHOUT_CLASSIFICATION	0.9999999884571943	WITHOUT_CLASSIFICATION	1.1542805672977717E-8	DEFECT
// draw the upper shadow...	WITHOUT_CLASSIFICATION	0.9999977338067494	WITHOUT_CLASSIFICATION	2.2661932505706278E-6	DEFECT
// draw the lower shadow...	WITHOUT_CLASSIFICATION	0.9999983394434182	WITHOUT_CLASSIFICATION	1.6605565818624227E-6	DEFECT
// here we check that the average marker will in fact be // visible before drawing it...	WITHOUT_CLASSIFICATION	0.9998941418506666	WITHOUT_CLASSIFICATION	1.0585814933332728E-4	DEFECT
// draw mean - SPECIAL AIMS REQUIREMENT...	WITHOUT_CLASSIFICATION	0.9999887311949305	WITHOUT_CLASSIFICATION	1.1268805069616654E-5	DEFECT
// average radius	WITHOUT_CLASSIFICATION	0.9999978916877279	WITHOUT_CLASSIFICATION	2.1083122721692277E-6	DEFECT
// average radius	WITHOUT_CLASSIFICATION	0.9999978916877279	WITHOUT_CLASSIFICATION	2.1083122721692277E-6	DEFECT
// check retrieve value by index	WITHOUT_CLASSIFICATION	0.9999968531948646	WITHOUT_CLASSIFICATION	3.1468051353437605E-6	DEFECT
// draw median...	WITHOUT_CLASSIFICATION	0.9999977400650358	WITHOUT_CLASSIFICATION	2.2599349641956633E-6	DEFECT
// draw median...	WITHOUT_CLASSIFICATION	0.9999977400650358	WITHOUT_CLASSIFICATION	2.2599349641956633E-6	DEFECT
// offset the start of the box if the box width is smaller than the // category width	WITHOUT_CLASSIFICATION	0.9999996120530296	WITHOUT_CLASSIFICATION	3.8794697050360434E-7	DEFECT
// draw the body...	WITHOUT_CLASSIFICATION	0.9999969351619196	WITHOUT_CLASSIFICATION	3.064838080301935E-6	DEFECT
// draw yOutliers...	WITHOUT_CLASSIFICATION	0.999999445541105	WITHOUT_CLASSIFICATION	5.544588950069447E-7	DEFECT
// draw farout indicators	WITHOUT_CLASSIFICATION	0.9999988252876086	WITHOUT_CLASSIFICATION	1.174712391389052E-6	DEFECT
// start from Y = rangeBase	WITHOUT_CLASSIFICATION	0.9999978264719206	WITHOUT_CLASSIFICATION	2.1735280793736215E-6	DEFECT
// Process outliers. Each outlier is either added to the // appropriate outlier list or a new outlier list is made	WITHOUT_CLASSIFICATION	0.9999999929794173	WITHOUT_CLASSIFICATION	7.020582731295431E-9	DEFECT
// disable visible items optimisation - it doesn't work for this // renderer...	WITHOUT_CLASSIFICATION	0.9977622629319236	WITHOUT_CLASSIFICATION	0.002237737068076387	DEFECT
// Get the item count for the series, so that we can know which is the // end of the series.	WITHOUT_CLASSIFICATION	0.9999994935769596	WITHOUT_CLASSIFICATION	5.064230403598502E-7	DEFECT
// avoid possible sun.dc.pr.PRException: endPath: bad path	WITHOUT_CLASSIFICATION	0.9999965272153795	WITHOUT_CLASSIFICATION	3.4727846206075646E-6	DEFECT
// Create a new Area for the series	WITHOUT_CLASSIFICATION	0.9999996430266702	WITHOUT_CLASSIFICATION	3.5697332979904176E-7	DEFECT
// The first point is (x, this.baseYValue)	WITHOUT_CLASSIFICATION	0.9999890663636811	WITHOUT_CLASSIFICATION	1.0933636318851336E-5	DEFECT
// get the previous data point...	WITHOUT_CLASSIFICATION	0.9999998441496059	WITHOUT_CLASSIFICATION	1.5585039427700517E-7	DEFECT
// not just a horizontal bar but need to perform a 'step'.	WITHOUT_CLASSIFICATION	0.9999996989564727	WITHOUT_CLASSIFICATION	3.010435273659971E-7	DEFECT
// add an entity for the item...	WITHOUT_CLASSIFICATION	0.9999956724014626	WITHOUT_CLASSIFICATION	4.327598537415374E-6	DEFECT
// collect entity and tool tip information...	WITHOUT_CLASSIFICATION	0.9999977532571824	WITHOUT_CLASSIFICATION	2.246742817518753E-6	DEFECT
// avoid possible sun.dc.pr.PRException: endPath: bad path	WITHOUT_CLASSIFICATION	0.9999965272153795	WITHOUT_CLASSIFICATION	3.4727846206075646E-6	DEFECT
// retrieve an item	WITHOUT_CLASSIFICATION	0.9999920165272254	WITHOUT_CLASSIFICATION	7.983472774575058E-6	DEFECT
// Add each point to Area (x, y)	WITHOUT_CLASSIFICATION	0.9999999206937797	WITHOUT_CLASSIFICATION	7.930622032745529E-8	DEFECT
// Check if the item is the last item for the series or if it // is a NULL value and number of items > 0.  We can't draw an area for // a single point.	WITHOUT_CLASSIFICATION	0.9999999280317744	WITHOUT_CLASSIFICATION	7.196822557241057E-8	DEFECT
// Add the last point (x,0)	WITHOUT_CLASSIFICATION	0.9999997365445152	WITHOUT_CLASSIFICATION	2.634554847510294E-7	DEFECT
// fill the polygon	WITHOUT_CLASSIFICATION	0.9999916497558212	WITHOUT_CLASSIFICATION	8.35024417885358E-6	DEFECT
// draw an outline around the Area.	WITHOUT_CLASSIFICATION	0.9999982107933387	WITHOUT_CLASSIFICATION	1.7892066612681646E-6	DEFECT
// start new area when needed (see above)	WITHOUT_CLASSIFICATION	0.9999971506549625	WITHOUT_CLASSIFICATION	2.8493450374068606E-6	DEFECT
// do nothing...this is just a hook for subclasses	WITHOUT_CLASSIFICATION	0.9999989954553216	WITHOUT_CLASSIFICATION	1.0045446784165013E-6	DEFECT
// TODO getSeriesShape(n).getBounds().width / 2;	WITHOUT_CLASSIFICATION	0.9959460706632196	WITHOUT_CLASSIFICATION	0.004053929336780395	DEFECT
// TODO getSeriesShape(n).getBounds().height / 2;	WITHOUT_CLASSIFICATION	0.9973400105876371	WITHOUT_CLASSIFICATION	0.0026599894123628524	DEFECT
// can't draw anything	WITHOUT_CLASSIFICATION	0.9999608834173439	WITHOUT_CLASSIFICATION	3.911658265610271E-5	DEFECT
// draw optional guide lines	WITHOUT_CLASSIFICATION	0.9999997707627097	WITHOUT_CLASSIFICATION	2.2923729020909058E-7	DEFECT
// calculate the arrow head and draw it...	WITHOUT_CLASSIFICATION	0.999995232562885	WITHOUT_CLASSIFICATION	4.76743711505769E-6	DEFECT
// orientation is HORIZONTAL	WITHOUT_CLASSIFICATION	0.9999933639456353	WITHOUT_CLASSIFICATION	6.636054364741835E-6	DEFECT
//labelLinkStyle;	WITHOUT_CLASSIFICATION	0.9999825447776904	WITHOUT_CLASSIFICATION	1.745522230957441E-5	DEFECT
// request width index == itemCount	WITHOUT_CLASSIFICATION	0.9999978240836885	WITHOUT_CLASSIFICATION	2.175916311386943E-6	DEFECT
// check if either series is a degenerate case (i.e. less than 2 points)	WITHOUT_CLASSIFICATION	0.9999986085534398	WITHOUT_CLASSIFICATION	1.3914465602403514E-6	DEFECT
// check if series are disjoint (i.e. domain-spans do not overlap)	WITHOUT_CLASSIFICATION	0.9999998502318252	WITHOUT_CLASSIFICATION	1.4976817487054917E-7	DEFECT
// polygon definitions	WITHOUT_CLASSIFICATION	0.9999983913341531	WITHOUT_CLASSIFICATION	1.6086658469226367E-6	DEFECT
// state	WITHOUT_CLASSIFICATION	0.9999982227299123	WITHOUT_CLASSIFICATION	1.777270087595906E-6	DEFECT
// actual value set below	WITHOUT_CLASSIFICATION	0.9999957161678397	WITHOUT_CLASSIFICATION	4.283832160313514E-6	DEFECT
// if a subtrahend is not specified, assume it is zero	WITHOUT_CLASSIFICATION	0.9999999263518644	WITHOUT_CLASSIFICATION	7.36481356657435E-8	DEFECT
// fast-forward through leading tails	WITHOUT_CLASSIFICATION	0.9999968102535599	WITHOUT_CLASSIFICATION	3.1897464399857817E-6	DEFECT
// get the x and y coordinates	WITHOUT_CLASSIFICATION	0.999999110450714	WITHOUT_CLASSIFICATION	8.895492860842192E-7	DEFECT
// minuend needs to be fast forwarded	WITHOUT_CLASSIFICATION	0.9999979705480468	WITHOUT_CLASSIFICATION	2.0294519531761078E-6	DEFECT
// subtrahend needs to be fast forwarded	WITHOUT_CLASSIFICATION	0.9999995889429668	WITHOUT_CLASSIFICATION	4.110570332356402E-7	DEFECT
// project onto subtrahend	WITHOUT_CLASSIFICATION	0.999999763970751	WITHOUT_CLASSIFICATION	2.360292490787916E-7	DEFECT
// project onto minuend	WITHOUT_CLASSIFICATION	0.9999963886289642	WITHOUT_CLASSIFICATION	3.6113710358361286E-6	DEFECT
// start of algorithm	WITHOUT_CLASSIFICATION	0.9999990861864548	WITHOUT_CLASSIFICATION	9.13813545183109E-7	DEFECT
// this won't happen :)	WITHOUT_CLASSIFICATION	0.9940215899928609	WITHOUT_CLASSIFICATION	0.005978410007139072	DEFECT
// deassert b_*FastForward (only matters for 1st time through loop)	WITHOUT_CLASSIFICATION	0.9999971612671337	WITHOUT_CLASSIFICATION	2.8387328663086127E-6	DEFECT
// check for intersect	WITHOUT_CLASSIFICATION	0.9999982486224156	WITHOUT_CLASSIFICATION	1.7513775844487893E-6	DEFECT
// check if line segments are colinear	WITHOUT_CLASSIFICATION	0.999998701311388	WITHOUT_CLASSIFICATION	1.2986886120409478E-6	DEFECT
// compute common denominator	WITHOUT_CLASSIFICATION	0.9999994779239433	WITHOUT_CLASSIFICATION	5.220760566636699E-7	DEFECT
// compute common deltas	WITHOUT_CLASSIFICATION	0.9999996284875693	WITHOUT_CLASSIFICATION	3.715124307414453E-7	DEFECT
// compute numerators	WITHOUT_CLASSIFICATION	0.9999991740188172	WITHOUT_CLASSIFICATION	8.259811826951402E-7	DEFECT
// check if previously colinear	WITHOUT_CLASSIFICATION	0.9999995048094745	WITHOUT_CLASSIFICATION	4.951905255471662E-7	DEFECT
// clear colinear points and flag	WITHOUT_CLASSIFICATION	0.9999992322515752	WITHOUT_CLASSIFICATION	7.677484249831245E-7	DEFECT
// set new starting point for the polygon	WITHOUT_CLASSIFICATION	0.9999998884929293	WITHOUT_CLASSIFICATION	1.1150707067598682E-7	DEFECT
// compute slope components	WITHOUT_CLASSIFICATION	0.9999997591065649	WITHOUT_CLASSIFICATION	2.4089343508880744E-7	DEFECT
// test if both grahphs have a vertical rise at the same x-value	WITHOUT_CLASSIFICATION	0.9999993990564555	WITHOUT_CLASSIFICATION	6.009435445047188E-7	DEFECT
// check if the line segments intersect	WITHOUT_CLASSIFICATION	0.999999507051171	WITHOUT_CLASSIFICATION	4.929488290502482E-7	DEFECT
// compute the point of intersection	WITHOUT_CLASSIFICATION	0.9999997871676972	WITHOUT_CLASSIFICATION	2.128323027528486E-7	DEFECT
// advance minuend and subtrahend to intesect	WITHOUT_CLASSIFICATION	0.9999997162803119	WITHOUT_CLASSIFICATION	2.8371968816370583E-7	DEFECT
// add intersection point to the polygon	WITHOUT_CLASSIFICATION	0.9999997872602242	WITHOUT_CLASSIFICATION	2.1273977580552782E-7	DEFECT
// add the subtrahend's points to the polygon in reverse	WITHOUT_CLASSIFICATION	0.9999998717246189	WITHOUT_CLASSIFICATION	1.2827538101336844E-7	DEFECT
// create an actual polygon	WITHOUT_CLASSIFICATION	0.9999903491450566	WITHOUT_CLASSIFICATION	9.650854943452222E-6	DEFECT
// add an entity for the item...	WITHOUT_CLASSIFICATION	0.9999956724014626	WITHOUT_CLASSIFICATION	4.327598537415374E-6	DEFECT
// SERIES VISIBLE IN LEGEND (not yet respected by all renderers)	WITHOUT_CLASSIFICATION	0.999996685636872	WITHOUT_CLASSIFICATION	3.3143631280201624E-6	DEFECT
// draw the item label if there is one...	WITHOUT_CLASSIFICATION	0.9999996764681102	WITHOUT_CLASSIFICATION	3.2353188988072936E-7	DEFECT
// draw an outline around the Area.	WITHOUT_CLASSIFICATION	0.9999982107933387	WITHOUT_CLASSIFICATION	1.7892066612681646E-6	DEFECT
// project onto subtrahend	WITHOUT_CLASSIFICATION	0.999999763970751	WITHOUT_CLASSIFICATION	2.360292490787916E-7	DEFECT
// project onto minuend	WITHOUT_CLASSIFICATION	0.9999963886289642	WITHOUT_CLASSIFICATION	3.6113710358361286E-6	DEFECT
// add the subtrahend's points to the polygon in reverse	WITHOUT_CLASSIFICATION	0.9999998717246189	WITHOUT_CLASSIFICATION	1.2827538101336844E-7	DEFECT
// create an actual polygon	WITHOUT_CLASSIFICATION	0.9999903491450566	WITHOUT_CLASSIFICATION	9.650854943452222E-6	DEFECT
// set the maxY and minY values to intersect y-value	WITHOUT_CLASSIFICATION	0.9999993661182269	WITHOUT_CLASSIFICATION	6.338817730546238E-7	DEFECT
// add interection point to new polygon	WITHOUT_CLASSIFICATION	0.9999986860378078	WITHOUT_CLASSIFICATION	1.3139621921591347E-6	DEFECT
// advance the minuend if needed	WITHOUT_CLASSIFICATION	0.9999986151687551	WITHOUT_CLASSIFICATION	1.3848312449847534E-6	DEFECT
// advance the subtrahend if needed	WITHOUT_CLASSIFICATION	0.9999998469072959	WITHOUT_CLASSIFICATION	1.5309270413618433E-7	DEFECT
// check if the final polygon needs to be clipped	WITHOUT_CLASSIFICATION	0.9999996506736903	WITHOUT_CLASSIFICATION	3.493263096355246E-7	DEFECT
// consider last point of minuend and subtrahend for determining // positivity	WITHOUT_CLASSIFICATION	0.9999999765648234	WITHOUT_CLASSIFICATION	2.343517665112933E-8	DEFECT
// add the last point of the minuned and subtrahend	WITHOUT_CLASSIFICATION	0.9999999773513268	WITHOUT_CLASSIFICATION	2.264867308245659E-8	DEFECT
// vertical orientation	WITHOUT_CLASSIFICATION	0.9999937727185403	WITHOUT_CLASSIFICATION	6.22728145976141E-6	DEFECT
//// VISIBLE //////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999884115960439	WITHOUT_CLASSIFICATION	1.1588403956018328E-5	DEFECT
//// PAINT ////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999932477336421	WITHOUT_CLASSIFICATION	6.752266358013016E-6	DEFECT
// get the previous point and the next point so we can calculate a // "hot spot" for the area (used by the chart entity)...	WITHOUT_CLASSIFICATION	0.9999999963114736	WITHOUT_CLASSIFICATION	3.6885263472889597E-9	DEFECT
// FIXME: add setSeriesOutlinePaint(int, Paint, boolean)?	WITHOUT_CLASSIFICATION	0.7699099318217189	WITHOUT_CLASSIFICATION	0.2300900681782812	DEFECT
// FIXME: add setBaseOutlinePaint(Paint, boolean)?	WITHOUT_CLASSIFICATION	0.7280124978608383	WITHOUT_CLASSIFICATION	0.2719875021391617	DEFECT
// create the polygon // add the minuend's points to polygon	WITHOUT_CLASSIFICATION	0.9999998342982048	WITHOUT_CLASSIFICATION	1.6570179516709451E-7	DEFECT
// Check if the item is the last item for the series. // and number of items > 0.  We can't draw an area for a single point.	WITHOUT_CLASSIFICATION	0.9999999690031955	WITHOUT_CLASSIFICATION	3.0996804475386336E-8	DEFECT
//// OUTLINE PAINT ////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999907465981083	WITHOUT_CLASSIFICATION	9.253401891755016E-6	DEFECT
// bad axisNumber	WITHOUT_CLASSIFICATION	0.9999992310563963	WITHOUT_CLASSIFICATION	7.689436035788432E-7	DEFECT
// a Range object cannot be equal to a different object type	WITHOUT_CLASSIFICATION	0.9999914004308901	WITHOUT_CLASSIFICATION	8.599569109921558E-6	DEFECT
// POSITIVE ITEM LABEL POSITION...	WITHOUT_CLASSIFICATION	0.9999628762130618	WITHOUT_CLASSIFICATION	3.712378693817243E-5	DEFECT
// NEGATIVE ITEM LABEL POSITION...	WITHOUT_CLASSIFICATION	0.9999747214265533	WITHOUT_CLASSIFICATION	2.527857344670242E-5	DEFECT
//// TOOL TIP GENERATOR ///////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999403243536503	WITHOUT_CLASSIFICATION	5.967564634976465E-5	DEFECT
//// URL GENERATOR ////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999715118556078	WITHOUT_CLASSIFICATION	2.8488144392113574E-5	DEFECT
// FIXME: add setSeriesStroke(int, Stroke, boolean) ?	WITHOUT_CLASSIFICATION	0.5830102396639213	DEFECT	0.4169897603360787	WITHOUT_CLASSIFICATION
// FIXME: add setBaseStroke(Stroke, boolean) ?	WITHOUT_CLASSIFICATION	0.5018083180849305	DEFECT	0.49819168191506946	WITHOUT_CLASSIFICATION
// FIXME: add setSeriesOutlineStroke(int, Stroke, boolean) ?	WITHOUT_CLASSIFICATION	0.5143029452638561	DEFECT	0.48569705473614383	WITHOUT_CLASSIFICATION
// FIXME: add setBaseOutlineStroke(Stroke, boolean) ?	WITHOUT_CLASSIFICATION	0.5462441526267502	WITHOUT_CLASSIFICATION	0.4537558473732499	DEFECT
// FIXME: add setSeriesShape(int, Shape, boolean) ?	WITHOUT_CLASSIFICATION	0.5253942508822768	WITHOUT_CLASSIFICATION	0.4746057491177233	DEFECT
// FIXME: add setBaseShape(Shape, boolean) ?	WITHOUT_CLASSIFICATION	0.5589294870026879	DEFECT	0.4410705129973122	WITHOUT_CLASSIFICATION
// allowDuplicateXValues	WITHOUT_CLASSIFICATION	0.999997085362753	WITHOUT_CLASSIFICATION	2.914637247107457E-6	DEFECT
//// STROKE ///////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999773028660837	WITHOUT_CLASSIFICATION	2.2697133916366948E-5	DEFECT
//// OUTLINE STROKE ///////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999901294051374	WITHOUT_CLASSIFICATION	9.870594862552441E-6	DEFECT
//// SHAPE ////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999838761873711	WITHOUT_CLASSIFICATION	1.612381262896268E-5	DEFECT
//// LEGEND ITEMS /////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999926488072969	WITHOUT_CLASSIFICATION	7.351192703187355E-6	DEFECT
//// LEGEND ITEM LABEL GENERATOR //////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999674434733193	WITHOUT_CLASSIFICATION	3.2556526680657364E-5	DEFECT
//// ITEM LABEL GENERATOR /////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999640515034492	WITHOUT_CLASSIFICATION	3.594849655071204E-5	DEFECT
// FIXME:	WITHOUT_CLASSIFICATION	0.734386265976996	WITHOUT_CLASSIFICATION	0.26561373402300403	DEFECT
//// ITEM LABEL FONT ///////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999477554879889	WITHOUT_CLASSIFICATION	5.224451201124176E-5	DEFECT
//// ANNOTATIONS //////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999925881695323	WITHOUT_CLASSIFICATION	7.411830467675288E-6	DEFECT
//// DRAWING //////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999918222315629	WITHOUT_CLASSIFICATION	8.177768437102463E-6	DEFECT
// DEPRECATED METHODS	WITHOUT_CLASSIFICATION	0.9998877800173392	WITHOUT_CLASSIFICATION	1.122199826608288E-4	DEFECT
// need to handle cluster centering as a special case	WITHOUT_CLASSIFICATION	0.9999998442877839	WITHOUT_CLASSIFICATION	1.5571221602924892E-7	DEFECT
// may be negative	WITHOUT_CLASSIFICATION	0.9999885459391481	WITHOUT_CLASSIFICATION	1.1454060851895447E-5	DEFECT
/*             * Legacy? Just return the original Paint.             * (this corresponds EXACTLY to how Paints used to be darkened)             */	WITHOUT_CLASSIFICATION	0.9999751113497912	WITHOUT_CLASSIFICATION	2.488865020879387E-5	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999992092361156	WITHOUT_CLASSIFICATION	7.907638844166032E-7	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9999995063106223	WITHOUT_CLASSIFICATION	4.936893777090077E-7	DEFECT
// add an entity for the item...	WITHOUT_CLASSIFICATION	0.9999956724014626	WITHOUT_CLASSIFICATION	4.327598537415374E-6	DEFECT
// do nothing if item is not visible	WITHOUT_CLASSIFICATION	0.9999744098725992	WITHOUT_CLASSIFICATION	2.5590127400768192E-5	DEFECT
// Create a new Area for the series	WITHOUT_CLASSIFICATION	0.9999996430266702	WITHOUT_CLASSIFICATION	3.5697332979904176E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999944401552767	WITHOUT_CLASSIFICATION	5.559844723236735E-6	DEFECT
// add a value	WITHOUT_CLASSIFICATION	0.9999900983421013	WITHOUT_CLASSIFICATION	9.901657898691814E-6	DEFECT
// first pass draws the shading	WITHOUT_CLASSIFICATION	0.9999982953592035	WITHOUT_CLASSIFICATION	1.7046407964330165E-6	DEFECT
// last item in series, draw the lot... // set up the alpha-transparency...	WITHOUT_CLASSIFICATION	0.9999996695868614	WITHOUT_CLASSIFICATION	3.3041313865511943E-7	DEFECT
// second pass adds shapes where the items are ..	WITHOUT_CLASSIFICATION	0.9999994030558333	WITHOUT_CLASSIFICATION	5.969441667190076E-7	DEFECT
// return straight away if the item is not visible	WITHOUT_CLASSIFICATION	0.999998753792087	WITHOUT_CLASSIFICATION	1.2462079129282377E-6	DEFECT
// add an entity if this info is being collected	WITHOUT_CLASSIFICATION	0.9999091845171367	WITHOUT_CLASSIFICATION	9.081548286321698E-5	DEFECT
//  Get height adjustment based on stack and translate to Java2D values	WITHOUT_CLASSIFICATION	0.9999998431544763	WITHOUT_CLASSIFICATION	1.568455235749905E-7	DEFECT
//  Get series Paint and Stroke	WITHOUT_CLASSIFICATION	0.9999991179472589	WITHOUT_CLASSIFICATION	8.820527409635992E-7	DEFECT
//  On first pass render the areas, line and outlines	WITHOUT_CLASSIFICATION	0.9999994787178185	WITHOUT_CLASSIFICATION	5.212821814674304E-7	DEFECT
// start from previous height (ph1)	WITHOUT_CLASSIFICATION	0.9999995283795937	WITHOUT_CLASSIFICATION	4.716204062466726E-7	DEFECT
// should not get here	WITHOUT_CLASSIFICATION	0.9999957846429077	WITHOUT_CLASSIFICATION	4.215357092204537E-6	DEFECT
// use item paint for fills by default	WITHOUT_CLASSIFICATION	0.9999993055512695	WITHOUT_CLASSIFICATION	6.94448730500978E-7	DEFECT
// === DEPRECATED CODE ===	WITHOUT_CLASSIFICATION	0.9999530483110312	WITHOUT_CLASSIFICATION	4.69516889687282E-5	DEFECT
// LINES VISIBLE	WITHOUT_CLASSIFICATION	0.9999924543532176	WITHOUT_CLASSIFICATION	7.545646782297639E-6	DEFECT
// SHAPES VISIBLE	WITHOUT_CLASSIFICATION	0.9999853892778874	WITHOUT_CLASSIFICATION	1.4610722112689001E-5	DEFECT
// SHAPES FILLED	WITHOUT_CLASSIFICATION	0.9999223073694925	WITHOUT_CLASSIFICATION	7.769263050752323E-5	DEFECT
// do nothing if item is not visible	WITHOUT_CLASSIFICATION	0.9999744098725992	WITHOUT_CLASSIFICATION	2.5590127400768192E-5	DEFECT
// collect entity and tool tip information...	WITHOUT_CLASSIFICATION	0.9999977532571824	WITHOUT_CLASSIFICATION	2.246742817518753E-6	DEFECT
// Get the item count for the series, so that we can know which is the // end of the series.	WITHOUT_CLASSIFICATION	0.9999994935769596	WITHOUT_CLASSIFICATION	5.064230403598502E-7	DEFECT
// get the previous data point...	WITHOUT_CLASSIFICATION	0.9999998441496059	WITHOUT_CLASSIFICATION	1.5585039427700517E-7	DEFECT
// Add each point to Area (x, y)	WITHOUT_CLASSIFICATION	0.9999999206937797	WITHOUT_CLASSIFICATION	7.930622032745529E-8	DEFECT
// Add the last point (x,0)	WITHOUT_CLASSIFICATION	0.9999997365445152	WITHOUT_CLASSIFICATION	2.634554847510294E-7	DEFECT
// Add the last point (x,0)	WITHOUT_CLASSIFICATION	0.9999997365445152	WITHOUT_CLASSIFICATION	2.634554847510294E-7	DEFECT
// add another value	WITHOUT_CLASSIFICATION	0.999998107646344	WITHOUT_CLASSIFICATION	1.8923536560990426E-6	DEFECT
// in the rendering process, there is special handling for item // zero, so we can't support processing of visible data items only	WITHOUT_CLASSIFICATION	0.9999998054161079	WITHOUT_CLASSIFICATION	1.9458389221633322E-7	DEFECT
// The first point is (x, 0)	WITHOUT_CLASSIFICATION	0.9999896248625262	WITHOUT_CLASSIFICATION	1.0375137473854776E-5	DEFECT
//  Fill the polygon	WITHOUT_CLASSIFICATION	0.9999916284133379	WITHOUT_CLASSIFICATION	8.371586662097252E-6	DEFECT
//  Draw an outline around the Area.	WITHOUT_CLASSIFICATION	0.9999982144642665	WITHOUT_CLASSIFICATION	1.7855357334597416E-6	DEFECT
// first pass draws the background (lines, for instance)	WITHOUT_CLASSIFICATION	0.9999998857454816	WITHOUT_CLASSIFICATION	1.1425451832363161E-7	DEFECT
//labelLinkPaint;	WITHOUT_CLASSIFICATION	0.9999922112545089	WITHOUT_CLASSIFICATION	7.788745491066928E-6	DEFECT
// only draw if we have good values	WITHOUT_CLASSIFICATION	0.9999989165902478	WITHOUT_CLASSIFICATION	1.0834097522322281E-6	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9999995063106223	WITHOUT_CLASSIFICATION	4.936893777090077E-7	DEFECT
// get the data points	WITHOUT_CLASSIFICATION	0.9999996467022223	WITHOUT_CLASSIFICATION	3.5329777774638527E-7	DEFECT
// draw the item label if there is one...	WITHOUT_CLASSIFICATION	0.9999996764681102	WITHOUT_CLASSIFICATION	3.2353188988072936E-7	DEFECT
// second pass adds shapes where the items are ..	WITHOUT_CLASSIFICATION	0.9999994030558333	WITHOUT_CLASSIFICATION	5.969441667190076E-7	DEFECT
// Add points from last series to complete the base of the // polygon	WITHOUT_CLASSIFICATION	0.9999999877590778	WITHOUT_CLASSIFICATION	1.224092218664046E-8	DEFECT
// On second pass render shapes and collect entity and tooltip // information	WITHOUT_CLASSIFICATION	0.9999939097815612	WITHOUT_CLASSIFICATION	6.090218438758071E-6	DEFECT
// update path to reflect latest point	WITHOUT_CLASSIFICATION	0.9999998059035647	WITHOUT_CLASSIFICATION	1.9409643532322744E-7	DEFECT
// if this is the last item, draw the path ...	WITHOUT_CLASSIFICATION	0.999984509608123	WITHOUT_CLASSIFICATION	1.549039187691863E-5	DEFECT
// draw path	WITHOUT_CLASSIFICATION	0.9999969836343613	WITHOUT_CLASSIFICATION	3.016365638732514E-6	DEFECT
// Collect points	WITHOUT_CLASSIFICATION	0.999999303421698	WITHOUT_CLASSIFICATION	6.965783019992443E-7	DEFECT
// construct path	WITHOUT_CLASSIFICATION	0.9999979587070783	WITHOUT_CLASSIFICATION	2.041292921639367E-6	DEFECT
// we need at least two points to draw something	WITHOUT_CLASSIFICATION	0.9999993044965054	WITHOUT_CLASSIFICATION	6.955034945104903E-7	DEFECT
// we need at least 3 points to spline. Draw simple line // for two points	WITHOUT_CLASSIFICATION	0.9999999342703096	WITHOUT_CLASSIFICATION	6.572969039988813E-8	DEFECT
// construct spline // number of points // Newton form coefficients // x-coordinates of nodes	WITHOUT_CLASSIFICATION	0.9999999971556546	WITHOUT_CLASSIFICATION	2.844345364318371E-9	DEFECT
// note that a[0]=a[np-1]=0	WITHOUT_CLASSIFICATION	0.9999922992187484	WITHOUT_CLASSIFICATION	7.700781251487325E-6	DEFECT
// loop over intervals between nodes	WITHOUT_CLASSIFICATION	0.9999993991248899	WITHOUT_CLASSIFICATION	6.008751101388909E-7	DEFECT
// we're running on JRE 1.3.1 so this is the best we have...	WITHOUT_CLASSIFICATION	0.9998232692464053	WITHOUT_CLASSIFICATION	1.7673075359462507E-4	DEFECT
// both axes	WITHOUT_CLASSIFICATION	0.9999969974357228	WITHOUT_CLASSIFICATION	3.0025642772413732E-6	DEFECT
// ITEM LABEL GENERATOR	WITHOUT_CLASSIFICATION	0.9998931316397028	WITHOUT_CLASSIFICATION	1.0686836029717735E-4	DEFECT
// return the generator for ALL series, if there is one...	WITHOUT_CLASSIFICATION	0.9999997896906061	WITHOUT_CLASSIFICATION	2.1030939381302895E-7	DEFECT
// return the generator for ALL series, if there is one...	WITHOUT_CLASSIFICATION	0.9999997896906061	WITHOUT_CLASSIFICATION	2.1030939381302895E-7	DEFECT
// otherwise look up the generator table	WITHOUT_CLASSIFICATION	0.9999998477049351	WITHOUT_CLASSIFICATION	1.522950650049295E-7	DEFECT
// otherwise look up the generator table	WITHOUT_CLASSIFICATION	0.9999998477049351	WITHOUT_CLASSIFICATION	1.522950650049295E-7	DEFECT
// TOOL TIP GENERATOR	WITHOUT_CLASSIFICATION	0.9997603301006931	WITHOUT_CLASSIFICATION	2.3966989930683622E-4	DEFECT
// URL GENERATOR	WITHOUT_CLASSIFICATION	0.9999760512109037	WITHOUT_CLASSIFICATION	2.394878909627448E-5	DEFECT
// clip top and bottom bounds to data area	WITHOUT_CLASSIFICATION	0.999999829322012	WITHOUT_CLASSIFICATION	1.7067798795653932E-7	DEFECT
// clip top and bottom bounds to data area	WITHOUT_CLASSIFICATION	0.999999829322012	WITHOUT_CLASSIFICATION	1.7067798795653932E-7	DEFECT
// now draw the outlines, if visible...	WITHOUT_CLASSIFICATION	0.9999996025571544	WITHOUT_CLASSIFICATION	3.974428455790506E-7	DEFECT
// now draw the outlines, if visible...	WITHOUT_CLASSIFICATION	0.9999996025571544	WITHOUT_CLASSIFICATION	3.974428455790506E-7	DEFECT
// PlotOrientation.HORIZONTAL	WITHOUT_CLASSIFICATION	0.9999985160690147	WITHOUT_CLASSIFICATION	1.4839309853754242E-6	DEFECT
// PlotOrientation.HORIZONTAL	WITHOUT_CLASSIFICATION	0.9999985160690147	WITHOUT_CLASSIFICATION	1.4839309853754242E-6	DEFECT
// work out the label anchor point...	WITHOUT_CLASSIFICATION	0.9999976394324603	WITHOUT_CLASSIFICATION	2.360567539592484E-6	DEFECT
// map a key to the default group	WITHOUT_CLASSIFICATION	0.999999322661592	WITHOUT_CLASSIFICATION	6.773384080199157E-7	DEFECT
// Add last point @ y=0 for fillPath and close path	WITHOUT_CLASSIFICATION	0.9999998255000562	WITHOUT_CLASSIFICATION	1.7449994376244693E-7	DEFECT
// fill under the curve...	WITHOUT_CLASSIFICATION	0.9999927982701354	WITHOUT_CLASSIFICATION	7.201729864670812E-6	DEFECT
// then draw the line...	WITHOUT_CLASSIFICATION	0.999997120527834	WITHOUT_CLASSIFICATION	2.8794721660987964E-6	DEFECT
// reset points vector	WITHOUT_CLASSIFICATION	0.9999991279669267	WITHOUT_CLASSIFICATION	8.720330732372487E-7	DEFECT
/*      factorization and forward substitution */	WITHOUT_CLASSIFICATION	0.9999982357703004	WITHOUT_CLASSIFICATION	1.7642296996095891E-6	DEFECT
// now draw the real shape	WITHOUT_CLASSIFICATION	0.9999981652848312	WITHOUT_CLASSIFICATION	1.8347151688418243E-6	DEFECT
// should never get here	WITHOUT_CLASSIFICATION	0.999996865257844	WITHOUT_CLASSIFICATION	3.134742155972285E-6	DEFECT
// 'plot' : just retain reference, not a deep copy	WITHOUT_CLASSIFICATION	0.999998344899351	WITHOUT_CLASSIFICATION	1.6551006490419793E-6	DEFECT
// just the domain axis...	WITHOUT_CLASSIFICATION	0.9999953812829495	WITHOUT_CLASSIFICATION	4.618717050519534E-6	DEFECT
// just the range axis...	WITHOUT_CLASSIFICATION	0.9999962707578988	WITHOUT_CLASSIFICATION	3.729242101364595E-6	DEFECT
// get the label position..	WITHOUT_CLASSIFICATION	0.9999987944008197	WITHOUT_CLASSIFICATION	1.2055991802770475E-6	DEFECT
// do nothing if item is not visible	WITHOUT_CLASSIFICATION	0.9999744098725992	WITHOUT_CLASSIFICATION	2.5590127400768192E-5	DEFECT
// draw the item label if there is one...	WITHOUT_CLASSIFICATION	0.9999996764681102	WITHOUT_CLASSIFICATION	3.2353188988072936E-7	DEFECT
// collect entity and tool tip information...	WITHOUT_CLASSIFICATION	0.9999977532571824	WITHOUT_CLASSIFICATION	2.246742817518753E-6	DEFECT
// get the previous data point...	WITHOUT_CLASSIFICATION	0.9999998441496059	WITHOUT_CLASSIFICATION	1.5585039427700517E-7	DEFECT
// Add each point to Area (x, y)	WITHOUT_CLASSIFICATION	0.9999999206937797	WITHOUT_CLASSIFICATION	7.930622032745529E-8	DEFECT
// vertical orientation	WITHOUT_CLASSIFICATION	0.9999937727185403	WITHOUT_CLASSIFICATION	6.22728145976141E-6	DEFECT
// in the rendering process, there is special handling for item // zero, so we can't support processing of visible data items only	WITHOUT_CLASSIFICATION	0.9999998054161079	WITHOUT_CLASSIFICATION	1.9458389221633322E-7	DEFECT
// this represents the situation // for drawing a horizontal bar.	WITHOUT_CLASSIFICATION	0.9999888668291966	WITHOUT_CLASSIFICATION	1.1133170803392487E-5	DEFECT
//this handles the need to perform a 'step'.	WITHOUT_CLASSIFICATION	0.9999980254187113	WITHOUT_CLASSIFICATION	1.974581288682565E-6	DEFECT
// calculate the step point	WITHOUT_CLASSIFICATION	0.9999986025676789	WITHOUT_CLASSIFICATION	1.3974323209883715E-6	DEFECT
//this handles the need to perform a 'step'. // calculate the step point	WITHOUT_CLASSIFICATION	0.9999994094046257	WITHOUT_CLASSIFICATION	5.90595374349317E-7	DEFECT
// submit this data item as a candidate for the crosshair point	WITHOUT_CLASSIFICATION	0.9999996996814373	WITHOUT_CLASSIFICATION	3.0031856268330037E-7	DEFECT
// create a new area polygon for the series	WITHOUT_CLASSIFICATION	0.9999998786548504	WITHOUT_CLASSIFICATION	1.2134514962768306E-7	DEFECT
// the first point is (x, 0)	WITHOUT_CLASSIFICATION	0.9999984926758264	WITHOUT_CLASSIFICATION	1.5073241736223592E-6	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9999995063106223	WITHOUT_CLASSIFICATION	4.936893777090077E-7	DEFECT
// otherwise look up the paint table	WITHOUT_CLASSIFICATION	0.9999997776317611	WITHOUT_CLASSIFICATION	2.223682388812745E-7	DEFECT
// SHAPES FILLED	WITHOUT_CLASSIFICATION	0.9999223073694925	WITHOUT_CLASSIFICATION	7.769263050752323E-5	DEFECT
// return the overall setting, if there is one...	WITHOUT_CLASSIFICATION	0.9999998157718395	WITHOUT_CLASSIFICATION	1.8422816052478548E-7	DEFECT
// draw the outline...	WITHOUT_CLASSIFICATION	0.9999981007029202	WITHOUT_CLASSIFICATION	1.8992970798264234E-6	DEFECT
// && state.getBarWidth() > BAR_OUTLINE_WIDTH_THRESHOLD) {	WITHOUT_CLASSIFICATION	0.9999954053039666	WITHOUT_CLASSIFICATION	4.59469603345418E-6	DEFECT
// no fields to compute...	WITHOUT_CLASSIFICATION	0.999999368469398	WITHOUT_CLASSIFICATION	6.315306021420425E-7	DEFECT
// Add the last point (x,0)	WITHOUT_CLASSIFICATION	0.9999997365445152	WITHOUT_CLASSIFICATION	2.634554847510294E-7	DEFECT
// draw an outline around the Area.	WITHOUT_CLASSIFICATION	0.9999982107933387	WITHOUT_CLASSIFICATION	1.7892066612681646E-6	DEFECT
// Check if the item is the last item for the series. // and number of items > 0.  We can't draw an area for a single point.	WITHOUT_CLASSIFICATION	0.9999999690031955	WITHOUT_CLASSIFICATION	3.0996804475386336E-8	DEFECT
// a new map always has 1 group (the default group)	WITHOUT_CLASSIFICATION	0.999999313046636	WITHOUT_CLASSIFICATION	6.869533640746395E-7	DEFECT
// we make the clip region slightly larger than the // dataArea so that the clipped edges don't show lines // on the chart	WITHOUT_CLASSIFICATION	0.9999931835152905	WITHOUT_CLASSIFICATION	6.816484709450361E-6	DEFECT
// no change	WITHOUT_CLASSIFICATION	0.999999613389278	WITHOUT_CLASSIFICATION	3.8661072200330387E-7	DEFECT
// here we use BooleanUtilities to remain compatible with JDKs < 1.4	WITHOUT_CLASSIFICATION	0.9999970893879576	WITHOUT_CLASSIFICATION	2.910612042481224E-6	DEFECT
// need to make sure we are adding *after* any duplicates	WITHOUT_CLASSIFICATION	0.9999998054991429	WITHOUT_CLASSIFICATION	1.945008570437754E-7	DEFECT
// update the max value	WITHOUT_CLASSIFICATION	0.9999951799955435	WITHOUT_CLASSIFICATION	4.8200044564859475E-6	DEFECT
// only draw if we have good values	WITHOUT_CLASSIFICATION	0.9999989165902478	WITHOUT_CLASSIFICATION	1.0834097522322281E-6	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9999995063106223	WITHOUT_CLASSIFICATION	4.936893777090077E-7	DEFECT
// draw the item label if there is one...	WITHOUT_CLASSIFICATION	0.9999996764681102	WITHOUT_CLASSIFICATION	3.2353188988072936E-7	DEFECT
// handle a special case - if the bar colour has alpha == 0, it is // invisible so we shouldn't draw any shadow	WITHOUT_CLASSIFICATION	0.9999988830494198	WITHOUT_CLASSIFICATION	1.1169505802431198E-6	DEFECT
// get the previous data point...	WITHOUT_CLASSIFICATION	0.9999998441496059	WITHOUT_CLASSIFICATION	1.5585039427700517E-7	DEFECT
// update path to reflect latest point	WITHOUT_CLASSIFICATION	0.9999998059035647	WITHOUT_CLASSIFICATION	1.9409643532322744E-7	DEFECT
// draw path	WITHOUT_CLASSIFICATION	0.9999969836343613	WITHOUT_CLASSIFICATION	3.016365638732514E-6	DEFECT
// we are starting a new series path	WITHOUT_CLASSIFICATION	0.9999968050796699	WITHOUT_CLASSIFICATION	3.1949203300921084E-6	DEFECT
// only draw a line if the gap between the current and // previous data point is within the threshold	WITHOUT_CLASSIFICATION	0.9999996847642633	WITHOUT_CLASSIFICATION	3.1523573680275054E-7	DEFECT
// we needed to get this far even for invisible items, to ensure that // seriesPath updates happened, but now there is nothing more we need // to do for non-visible items...	WITHOUT_CLASSIFICATION	0.9999945329513994	WITHOUT_CLASSIFICATION	5.4670486006195364E-6	DEFECT
// this method must be overridden if you want to display images	WITHOUT_CLASSIFICATION	0.9999816578052958	WITHOUT_CLASSIFICATION	1.8342194704184675E-5	DEFECT
// draw the upper shadow	WITHOUT_CLASSIFICATION	0.9999976562390918	WITHOUT_CLASSIFICATION	2.3437609081911503E-6	DEFECT
// draw the lower shadow	WITHOUT_CLASSIFICATION	0.9999982826055624	WITHOUT_CLASSIFICATION	1.7173944376139611E-6	DEFECT
// draw the body	WITHOUT_CLASSIFICATION	0.9999967405738697	WITHOUT_CLASSIFICATION	3.259426130324392E-6	DEFECT
// add an entity for the item...	WITHOUT_CLASSIFICATION	0.9999956724014626	WITHOUT_CLASSIFICATION	4.327598537415374E-6	DEFECT
// add an entity for the item...	WITHOUT_CLASSIFICATION	0.9999956724014626	WITHOUT_CLASSIFICATION	4.327598537415374E-6	DEFECT
// draw the upper shadow	WITHOUT_CLASSIFICATION	0.9999976562390918	WITHOUT_CLASSIFICATION	2.3437609081911503E-6	DEFECT
//////////////////////////////////////////////////////////////////////////// // PROTECTED METHODS // These provide the opportunity to subclass the standard renderer and // create custom effects. ////////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999999631681012	WITHOUT_CLASSIFICATION	3.683189864456356E-8	DEFECT
// draw the lower shadow	WITHOUT_CLASSIFICATION	0.9999982826055624	WITHOUT_CLASSIFICATION	1.7173944376139611E-6	DEFECT
// draw the body	WITHOUT_CLASSIFICATION	0.9999967405738697	WITHOUT_CLASSIFICATION	3.259426130324392E-6	DEFECT
// draw median	WITHOUT_CLASSIFICATION	0.9999970646491433	WITHOUT_CLASSIFICATION	2.935350856760111E-6	DEFECT
// draw average - SPECIAL AIMS REQUIREMENT	WITHOUT_CLASSIFICATION	0.999977697637166	WITHOUT_CLASSIFICATION	2.2302362833939862E-5	DEFECT
// draw average - SPECIAL AIMS REQUIREMENT	WITHOUT_CLASSIFICATION	0.999977697637166	WITHOUT_CLASSIFICATION	2.2302362833939862E-5	DEFECT
// here we check that the average marker will in fact be visible // before drawing it...	WITHOUT_CLASSIFICATION	0.9999010771560694	WITHOUT_CLASSIFICATION	9.89228439306132E-5	DEFECT
// yOutliers can be null, but we'd prefer it to be an empty list in // that case...	WITHOUT_CLASSIFICATION	0.9999398337636854	WITHOUT_CLASSIFICATION	6.016623631456521E-5	DEFECT
/* From outlier array sort out which are outliers and put these into         * an arraylist. If there are any farouts, set the flag on the         * OutlierListCollection         */	WITHOUT_CLASSIFICATION	0.9999998769346544	WITHOUT_CLASSIFICATION	1.2306534558517817E-7	DEFECT
// draw yOutliers	WITHOUT_CLASSIFICATION	0.9999995574753517	WITHOUT_CLASSIFICATION	4.42524648271737E-7	DEFECT
// draw outliers	WITHOUT_CLASSIFICATION	0.9999998081865304	WITHOUT_CLASSIFICATION	1.918134695270872E-7	DEFECT
// draw farout	WITHOUT_CLASSIFICATION	0.999997312059369	WITHOUT_CLASSIFICATION	2.687940630930052E-6	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999992092361156	WITHOUT_CLASSIFICATION	7.907638844166032E-7	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999992092361156	WITHOUT_CLASSIFICATION	7.907638844166032E-7	DEFECT
// add an entity for the item...	WITHOUT_CLASSIFICATION	0.9999956724014626	WITHOUT_CLASSIFICATION	4.327598537415374E-6	DEFECT
// get the previous data point...	WITHOUT_CLASSIFICATION	0.9999998441496059	WITHOUT_CLASSIFICATION	1.5585039427700517E-7	DEFECT
// here we check that the average marker will in fact be visible // before drawing it...	WITHOUT_CLASSIFICATION	0.9999010771560694	WITHOUT_CLASSIFICATION	9.89228439306132E-5	DEFECT
/* Number n = */	WITHOUT_CLASSIFICATION	0.9999950550902977	WITHOUT_CLASSIFICATION	4.944909702334799E-6	DEFECT
// Process outliers. Each outlier is either added to the appropriate // outlier list or a new outlier list is made	WITHOUT_CLASSIFICATION	0.9999999931870969	WITHOUT_CLASSIFICATION	6.812903230332325E-9	DEFECT
// for item labels, we have a special case because there is the // possibility to draw (a) the regular item label near to just the // upper y-value, or (b) the regular item label near the upper y-value // PLUS an additional item label near the lower y-value.	WITHOUT_CLASSIFICATION	0.999999879496335	WITHOUT_CLASSIFICATION	1.205036651080437E-7	DEFECT
// If null, don't draw line => then delegate to parent	WITHOUT_CLASSIFICATION	0.9999972960427195	WITHOUT_CLASSIFICATION	2.703957280489091E-6	DEFECT
// If null, don't draw line at all	WITHOUT_CLASSIFICATION	0.9998989380107722	WITHOUT_CLASSIFICATION	1.0106198922776702E-4	DEFECT
// Now split the segment as needed	WITHOUT_CLASSIFICATION	0.9999998307071868	WITHOUT_CLASSIFICATION	1.6929281320703686E-7	DEFECT
// If the segment must be splitted, insert a new point // Strict test forces to have real segments (not 2 equal points) // and avoids division by 0	WITHOUT_CLASSIFICATION	0.9999996323049553	WITHOUT_CLASSIFICATION	3.6769504464273444E-7	DEFECT
// If the line is not wrapping, then parent is OK	WITHOUT_CLASSIFICATION	0.9999957538400811	WITHOUT_CLASSIFICATION	4.2461599189645035E-6	DEFECT
// calculate the highest volume in the dataset...	WITHOUT_CLASSIFICATION	0.9999993381842093	WITHOUT_CLASSIFICATION	6.618157907981471E-7	DEFECT
/* Number n = */	WITHOUT_CLASSIFICATION	0.9999950550902977	WITHOUT_CLASSIFICATION	4.944909702334799E-6	DEFECT
/* Number n = */	WITHOUT_CLASSIFICATION	0.9999950550902977	WITHOUT_CLASSIFICATION	4.944909702334799E-6	DEFECT
/* Number n = */	WITHOUT_CLASSIFICATION	0.9999950550902977	WITHOUT_CLASSIFICATION	4.944909702334799E-6	DEFECT
/* Number n = */	WITHOUT_CLASSIFICATION	0.9999950550902977	WITHOUT_CLASSIFICATION	4.944909702334799E-6	DEFECT
// do nothing if item is not visible	WITHOUT_CLASSIFICATION	0.9999744098725992	WITHOUT_CLASSIFICATION	2.5590127400768192E-5	DEFECT
// PlotOrientation.HORIZONTAL	WITHOUT_CLASSIFICATION	0.9999985160690147	WITHOUT_CLASSIFICATION	1.4839309853754242E-6	DEFECT
// draw the outline...	WITHOUT_CLASSIFICATION	0.9999981007029202	WITHOUT_CLASSIFICATION	1.8992970798264234E-6	DEFECT
// as a special case, if the bar colour has alpha == 0, we draw // nothing.	WITHOUT_CLASSIFICATION	0.9999999566686368	WITHOUT_CLASSIFICATION	4.3331363129941656E-8	DEFECT
// update path to reflect latest point	WITHOUT_CLASSIFICATION	0.9999998059035647	WITHOUT_CLASSIFICATION	1.9409643532322744E-7	DEFECT
// if this is the last item, draw the path ...	WITHOUT_CLASSIFICATION	0.999984509608123	WITHOUT_CLASSIFICATION	1.549039187691863E-5	DEFECT
// draw path	WITHOUT_CLASSIFICATION	0.9999969836343613	WITHOUT_CLASSIFICATION	3.016365638732514E-6	DEFECT
// transpose the dimensions, because the title is rotated	WITHOUT_CLASSIFICATION	0.9999992641578693	WITHOUT_CLASSIFICATION	7.358421306952872E-7	DEFECT
// The split may occur in either x splitted segments, if any, but // not in both	WITHOUT_CLASSIFICATION	0.9999984467977445	WITHOUT_CLASSIFICATION	1.553202255463637E-6	DEFECT
// the x value is not within the axis range	WITHOUT_CLASSIFICATION	0.99998752399671	WITHOUT_CLASSIFICATION	1.2476003289992987E-5	DEFECT
// not a HighLowDataset, so just draw a line connecting this point // with the previous point...	WITHOUT_CLASSIFICATION	0.9999999555479473	WITHOUT_CLASSIFICATION	4.445205270450003E-8	DEFECT
// include the interval if there is one	WITHOUT_CLASSIFICATION	0.9999997083109692	WITHOUT_CLASSIFICATION	2.916890307518378E-7	DEFECT
// include the interval if there is one	WITHOUT_CLASSIFICATION	0.9999997083109692	WITHOUT_CLASSIFICATION	2.916890307518378E-7	DEFECT
// draw the error bar for the x-interval	WITHOUT_CLASSIFICATION	0.9999972737122484	WITHOUT_CLASSIFICATION	2.7262877514416483E-6	DEFECT
// draw the error bar for the y-interval	WITHOUT_CLASSIFICATION	0.9999972272119966	WITHOUT_CLASSIFICATION	2.772788003486143E-6	DEFECT
//domainGridlinePaint;	WITHOUT_CLASSIFICATION	0.9999910089357844	WITHOUT_CLASSIFICATION	8.991064215729372E-6	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9999995063106223	WITHOUT_CLASSIFICATION	4.936893777090077E-7	DEFECT
// add an entity for the item...	WITHOUT_CLASSIFICATION	0.9999956724014626	WITHOUT_CLASSIFICATION	4.327598537415374E-6	DEFECT
// get the previous point and the next point so we can calculate a // "hot spot" for the area (used by the chart entity)...	WITHOUT_CLASSIFICATION	0.9999999963114736	WITHOUT_CLASSIFICATION	3.6885263472889597E-9	DEFECT
// do nothing if item is not visible	WITHOUT_CLASSIFICATION	0.9999744098725992	WITHOUT_CLASSIFICATION	2.5590127400768192E-5	DEFECT
// no new methods	WITHOUT_CLASSIFICATION	0.9999978727880241	WITHOUT_CLASSIFICATION	2.1272119760175916E-6	DEFECT
// set the default item label positions, which will only be used if // the user requests visible item labels...	WITHOUT_CLASSIFICATION	0.9999999914939778	WITHOUT_CLASSIFICATION	8.506022314497817E-9	DEFECT
// handle item label drawing, now that we know all the bars have // been drawn...	WITHOUT_CLASSIFICATION	0.9999889166738495	WITHOUT_CLASSIFICATION	1.1083326150483191E-5	DEFECT
// if the renderer isn't assigned to a plot, then we don't have a // dataset...	WITHOUT_CLASSIFICATION	0.9999960507936824	WITHOUT_CLASSIFICATION	3.949206317622182E-6	DEFECT
//initalize xValues, yValues, and zValues arrays.	WITHOUT_CLASSIFICATION	0.9999814311086052	WITHOUT_CLASSIFICATION	1.8568891394924232E-5	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9999995063106223	WITHOUT_CLASSIFICATION	4.936893777090077E-7	DEFECT
// add an entity for the item...	WITHOUT_CLASSIFICATION	0.9999956724014626	WITHOUT_CLASSIFICATION	4.327598537415374E-6	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999934710680527	WITHOUT_CLASSIFICATION	6.528931947226976E-6	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999934710680527	WITHOUT_CLASSIFICATION	6.528931947226976E-6	DEFECT
// handle positive value	WITHOUT_CLASSIFICATION	0.9999901438290903	WITHOUT_CLASSIFICATION	9.85617090964191E-6	DEFECT
// LEFT POLYGON	WITHOUT_CLASSIFICATION	0.9999947076182741	WITHOUT_CLASSIFICATION	5.2923817258384856E-6	DEFECT
// RIGHT POLYGON	WITHOUT_CLASSIFICATION	0.9999976345781187	WITHOUT_CLASSIFICATION	2.365421881311786E-6	DEFECT
// RIGHT POLYGON	WITHOUT_CLASSIFICATION	0.9999976345781187	WITHOUT_CLASSIFICATION	2.365421881311786E-6	DEFECT
// handle negative value	WITHOUT_CLASSIFICATION	0.9999822069929653	WITHOUT_CLASSIFICATION	1.7793007034760755E-5	DEFECT
// clip left and right bounds to data area	WITHOUT_CLASSIFICATION	0.9999998192441876	WITHOUT_CLASSIFICATION	1.8075581238141204E-7	DEFECT
// clip top and bottom bounds to data area	WITHOUT_CLASSIFICATION	0.999999829322012	WITHOUT_CLASSIFICATION	1.7067798795653932E-7	DEFECT
// work out the label anchor point...	WITHOUT_CLASSIFICATION	0.9999976394324603	WITHOUT_CLASSIFICATION	2.360567539592484E-6	DEFECT
//  Get series Paint and Stroke	WITHOUT_CLASSIFICATION	0.9999991179472589	WITHOUT_CLASSIFICATION	8.820527409635992E-7	DEFECT
/* Number n = */	WITHOUT_CLASSIFICATION	0.9999950550902977	WITHOUT_CLASSIFICATION	4.944909702334799E-6	DEFECT
// is there an alignment adjustment to be made?	WITHOUT_CLASSIFICATION	0.9997742144143058	WITHOUT_CLASSIFICATION	2.2578558569430867E-4	DEFECT
// update the crosshair point	WITHOUT_CLASSIFICATION	0.9999999292430493	WITHOUT_CLASSIFICATION	7.07569507956477E-8	DEFECT
// calculate the maximum allowed candle width from the axis...	WITHOUT_CLASSIFICATION	0.9999996031385021	WITHOUT_CLASSIFICATION	3.968614978655936E-7	DEFECT
// Absolute value, since the relative x // positions are reversed for horizontal orientation	WITHOUT_CLASSIFICATION	0.9999993834510328	WITHOUT_CLASSIFICATION	6.165489671822856E-7	DEFECT
/* Number n = */	WITHOUT_CLASSIFICATION	0.9999950550902977	WITHOUT_CLASSIFICATION	4.944909702334799E-6	DEFECT
// pdfDocument class will be null so the function will return false	WITHOUT_CLASSIFICATION	0.9999989953142703	WITHOUT_CLASSIFICATION	1.0046857297953007E-6	DEFECT
// add an entity for the item...	WITHOUT_CLASSIFICATION	0.9999956724014626	WITHOUT_CLASSIFICATION	4.327598537415374E-6	DEFECT
// draw the upper shadow	WITHOUT_CLASSIFICATION	0.9999976562390918	WITHOUT_CLASSIFICATION	2.3437609081911503E-6	DEFECT
// draw the lower shadow	WITHOUT_CLASSIFICATION	0.9999982826055624	WITHOUT_CLASSIFICATION	1.7173944376139611E-6	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999934710680527	WITHOUT_CLASSIFICATION	6.528931947226976E-6	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999934710680527	WITHOUT_CLASSIFICATION	6.528931947226976E-6	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999934710680527	WITHOUT_CLASSIFICATION	6.528931947226976E-6	DEFECT
// draw the body	WITHOUT_CLASSIFICATION	0.9999967405738697	WITHOUT_CLASSIFICATION	3.259426130324392E-6	DEFECT
// this won't happen :)	WITHOUT_CLASSIFICATION	0.9940215899928609	WITHOUT_CLASSIFICATION	0.005978410007139072	DEFECT
// --- DEPRECATED CODE ----------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999780962101691	WITHOUT_CLASSIFICATION	2.1903789830926797E-5	DEFECT
// create the temporary directory if it doesn't exist	WITHOUT_CLASSIFICATION	0.999999667614791	WITHOUT_CLASSIFICATION	3.323852090092562E-7	DEFECT
//  Add chart to deletion list in session	WITHOUT_CLASSIFICATION	0.9999998266300192	WITHOUT_CLASSIFICATION	1.7336998091468643E-7	DEFECT
//  Set HTTP headers	WITHOUT_CLASSIFICATION	0.9999974667881782	WITHOUT_CLASSIFICATION	2.533211821664203E-6	DEFECT
//  Replace ".." with "" //  This is to prevent access to the rest of the file system	WITHOUT_CLASSIFICATION	0.9999999638882209	WITHOUT_CLASSIFICATION	3.6111779065411244E-8	DEFECT
//  Check the file exists	WITHOUT_CLASSIFICATION	0.9999984355317333	WITHOUT_CLASSIFICATION	1.5644682666598612E-6	DEFECT
//  Serve it up	WITHOUT_CLASSIFICATION	0.9999961425481078	WITHOUT_CLASSIFICATION	3.8574518922499386E-6	DEFECT
// draw the block without collecting entities	WITHOUT_CLASSIFICATION	0.9999990385785654	WITHOUT_CLASSIFICATION	9.614214346189514E-7	DEFECT
// RectangleInsets is immutable => same reference in clone OK	WITHOUT_CLASSIFICATION	0.9999986367248507	WITHOUT_CLASSIFICATION	1.3632751493623953E-6	DEFECT
// suppress compiler warning	WITHOUT_CLASSIFICATION	0.9999971880431185	WITHOUT_CLASSIFICATION	2.8119568814910632E-6	DEFECT
// suppress compiler warning	WITHOUT_CLASSIFICATION	0.9999971880431185	WITHOUT_CLASSIFICATION	2.8119568814910632E-6	DEFECT
// determine the space required for the axis	WITHOUT_CLASSIFICATION	0.9999992960623769	WITHOUT_CLASSIFICATION	7.039376230266574E-7	DEFECT
// transpose the dimensions, because the title is rotated	WITHOUT_CLASSIFICATION	0.9999992641578693	WITHOUT_CLASSIFICATION	7.358421306952872E-7	DEFECT
// basic check for independence	WITHOUT_CLASSIFICATION	0.9999988175702721	WITHOUT_CLASSIFICATION	1.1824297279036862E-6	DEFECT
// don't bother with parsing	WITHOUT_CLASSIFICATION	0.9999615338239669	WITHOUT_CLASSIFICATION	3.8466176033099393E-5	DEFECT
// don't bother with parsing	WITHOUT_CLASSIFICATION	0.9999615338239669	WITHOUT_CLASSIFICATION	3.8466176033099393E-5	DEFECT
// no need to instantiate this class   	WITHOUT_CLASSIFICATION	0.9999997867456311	WITHOUT_CLASSIFICATION	2.1325436889137316E-7	DEFECT
//yAdj = -descent - leading + (float) bounds.getHeight();	WITHOUT_CLASSIFICATION	0.9999946028431346	WITHOUT_CLASSIFICATION	5.397156865379424E-6	DEFECT
// svgClass will be null so the function will return false	WITHOUT_CLASSIFICATION	0.9999979857849557	WITHOUT_CLASSIFICATION	2.0142150443217337E-6	DEFECT
// basic check for independence	WITHOUT_CLASSIFICATION	0.9999988175702721	WITHOUT_CLASSIFICATION	1.1824297279036862E-6	DEFECT
// basic check for independence	WITHOUT_CLASSIFICATION	0.9999988175702721	WITHOUT_CLASSIFICATION	1.1824297279036862E-6	DEFECT
// basic check for independence	WITHOUT_CLASSIFICATION	0.9999988175702721	WITHOUT_CLASSIFICATION	1.1824297279036862E-6	DEFECT
// argument checking delegated...	WITHOUT_CLASSIFICATION	0.9999997922706068	WITHOUT_CLASSIFICATION	2.077293932781037E-7	DEFECT
// don't bother with parsing	WITHOUT_CLASSIFICATION	0.9999615338239669	WITHOUT_CLASSIFICATION	3.8466176033099393E-5	DEFECT
// standard ResourceBundle behaviour	WITHOUT_CLASSIFICATION	0.9999998552918131	WITHOUT_CLASSIFICATION	1.4470818687066788E-7	DEFECT
// update (x1, y1), (x2, y2) and f1 and f2 using intersections // then recheck	WITHOUT_CLASSIFICATION	0.9999982446675658	WITHOUT_CLASSIFICATION	1.7553324341301975E-6	DEFECT
// first point is outside, so we update it against one of the // four sides then continue	WITHOUT_CLASSIFICATION	0.9999999910682851	WITHOUT_CLASSIFICATION	8.931714945185416E-9	DEFECT
// second point is outside, so we update it against one of the // four sides then continue	WITHOUT_CLASSIFICATION	0.9999999967216302	WITHOUT_CLASSIFICATION	3.2783698420192995E-9	DEFECT
// the line is visible - if it wasn't, we'd have // returned false from within the while loop above	WITHOUT_CLASSIFICATION	0.9999422104639688	WITHOUT_CLASSIFICATION	5.778953603113545E-5	DEFECT
/*                 * Lots can go wrong while fiddling with Images, Color Models                 * & such!  If anything at all goes awry, just return the original                 * TexturePaint.  (TexturePaint's are immutable anyway, so no harm                 * done)                 */	WITHOUT_CLASSIFICATION	0.9999999919009857	WITHOUT_CLASSIFICATION	8.099014423445354E-9	DEFECT
/* Placeholder */	WITHOUT_CLASSIFICATION	0.9999911196502483	WITHOUT_CLASSIFICATION	8.88034975157682E-6	DEFECT
/**/	WITHOUT_CLASSIFICATION	0.9857770558497382	WITHOUT_CLASSIFICATION	0.014222944150261894	DEFECT
/**/	WITHOUT_CLASSIFICATION	0.9857770558497382	WITHOUT_CLASSIFICATION	0.014222944150261894	DEFECT
/**/	WITHOUT_CLASSIFICATION	0.9857770558497382	WITHOUT_CLASSIFICATION	0.014222944150261894	DEFECT
/* (pix-buffer is large enough for all pixels of one row) */	WITHOUT_CLASSIFICATION	0.9999861744743742	WITHOUT_CLASSIFICATION	1.3825525625782946E-5	DEFECT
// RGB (+ optional Alpha which we leave // unchanged)	WITHOUT_CLASSIFICATION	0.9999993905296106	WITHOUT_CLASSIFICATION	6.094703893986187E-7	DEFECT
// Red // Green // Blue. Now map computed colour to // nearest in Palette...	WITHOUT_CLASSIFICATION	0.9999995609520472	WITHOUT_CLASSIFICATION	4.390479528562968E-7	DEFECT
// Red // Green // Blue	WITHOUT_CLASSIFICATION	0.9999822948833851	WITHOUT_CLASSIFICATION	1.7705116614967226E-5	DEFECT
/* Ignore alpha-channel -> */	WITHOUT_CLASSIFICATION	0.9999987915983766	WITHOUT_CLASSIFICATION	1.2084016234543851E-6	DEFECT
// <- this is the code that actually COPIES the pixels	WITHOUT_CLASSIFICATION	0.9997538512949979	WITHOUT_CLASSIFICATION	2.4614870500215823E-4	DEFECT
/*         * Buffered Images may have properties, but NEVER disclose them!         * Nevertheless, just in case someone implements getPropertyNames()         * one day...         */	WITHOUT_CLASSIFICATION	0.9999935940861979	WITHOUT_CLASSIFICATION	6.405913802169279E-6	DEFECT
// ALWAYS null	WITHOUT_CLASSIFICATION	0.9999860512904543	WITHOUT_CLASSIFICATION	1.394870954565643E-5	DEFECT
// all methods are static, no need to instantiate	WITHOUT_CLASSIFICATION	0.9999988421310094	WITHOUT_CLASSIFICATION	1.1578689905005754E-6	DEFECT
// substitute the filtered URL list	WITHOUT_CLASSIFICATION	0.9999993224931982	WITHOUT_CLASSIFICATION	6.775068017490756E-7	DEFECT
// adjust text bounds to match string position	WITHOUT_CLASSIFICATION	0.9999986896117588	WITHOUT_CLASSIFICATION	1.3103882411918398E-6	DEFECT
// horizontal pass	WITHOUT_CLASSIFICATION	0.9999990391331693	WITHOUT_CLASSIFICATION	9.6086683064328E-7	DEFECT
// substract the oldest pixel from the sum	WITHOUT_CLASSIFICATION	0.9999996583729582	WITHOUT_CLASSIFICATION	3.416270417273697E-7	DEFECT
// substract the oldest pixel from the sum	WITHOUT_CLASSIFICATION	0.9999996583729582	WITHOUT_CLASSIFICATION	3.416270417273697E-7	DEFECT
// get the lastest pixel	WITHOUT_CLASSIFICATION	0.9999990234439072	WITHOUT_CLASSIFICATION	9.76556092774439E-7	DEFECT
// get the lastest pixel	WITHOUT_CLASSIFICATION	0.9999990234439072	WITHOUT_CLASSIFICATION	9.76556092774439E-7	DEFECT
// vertical pass	WITHOUT_CLASSIFICATION	0.9999996582653489	WITHOUT_CLASSIFICATION	3.417346510470611E-7	DEFECT
//get the coordinates of the original GradientPaint	WITHOUT_CLASSIFICATION	0.9999999567448392	WITHOUT_CLASSIFICATION	4.325516087035215E-8	DEFECT
//get the coordinates of the shape that is to be filled	WITHOUT_CLASSIFICATION	0.9999977803152639	WITHOUT_CLASSIFICATION	2.219684736107032E-6	DEFECT
//reserve variables to store the coordinates of the resulting GradientPaint	WITHOUT_CLASSIFICATION	0.9999999731745742	WITHOUT_CLASSIFICATION	2.6825425879364387E-8	DEFECT
//start point is upper left corner	WITHOUT_CLASSIFICATION	0.9999872030301118	WITHOUT_CLASSIFICATION	1.2796969888288085E-5	DEFECT
//end point is lower right corner --> diagonal gradient	WITHOUT_CLASSIFICATION	0.9999992011828412	WITHOUT_CLASSIFICATION	7.988171587702103E-7	DEFECT
//start point is lower left right corner --> diagonal gradient	WITHOUT_CLASSIFICATION	0.999999456246491	WITHOUT_CLASSIFICATION	5.437535089514976E-7	DEFECT
// delegate argument checking to XYDataItem...	WITHOUT_CLASSIFICATION	0.9999993090282735	WITHOUT_CLASSIFICATION	6.909717265223291E-7	DEFECT
//end point is either lower left corner --> vertical gradient //or end point is upper right corner --> horizontal gradient	WITHOUT_CLASSIFICATION	0.9999995643026485	WITHOUT_CLASSIFICATION	4.356973515526447E-7	DEFECT
// can't allow duplicate values, so we need to check whether // there is an item with the given x-value already	WITHOUT_CLASSIFICATION	0.9999993848236971	WITHOUT_CLASSIFICATION	6.151763029165108E-7	DEFECT
// it is too slow to look at every data item, so let's just look at // the first, middle and last items...	WITHOUT_CLASSIFICATION	0.9999995690949045	WITHOUT_CLASSIFICATION	4.3090509550728425E-7	DEFECT
// CASE 1 : Comparing to another ComparableObjectItem object // ---------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999885579574047	WITHOUT_CLASSIFICATION	1.144204259523789E-5	DEFECT
// CASE 2 : Comparing to a general object // ---------------------------------------------	WITHOUT_CLASSIFICATION	0.999953761370464	WITHOUT_CLASSIFICATION	4.623862953600188E-5	DEFECT
// consider these to be ordered after general objects	WITHOUT_CLASSIFICATION	0.9999996484451937	WITHOUT_CLASSIFICATION	3.515548062779638E-7	DEFECT
// the row may not have an entry for this key, in which case the // return value is null	WITHOUT_CLASSIFICATION	0.9993039581563542	WITHOUT_CLASSIFICATION	6.960418436456871E-4	DEFECT
// check that the column key is defined in the 2D structure	WITHOUT_CLASSIFICATION	0.9999986720183698	WITHOUT_CLASSIFICATION	1.3279816302449605E-6	DEFECT
// 1. check whether the row is now empty.	WITHOUT_CLASSIFICATION	0.9999809563059109	WITHOUT_CLASSIFICATION	1.904369408916989E-5	DEFECT
// 1. check whether the row is now empty.	WITHOUT_CLASSIFICATION	0.9999809563059109	WITHOUT_CLASSIFICATION	1.904369408916989E-5	DEFECT
// 2. check whether the column is now empty.	WITHOUT_CLASSIFICATION	0.9999972295199724	WITHOUT_CLASSIFICATION	2.770480027631155E-6	DEFECT
// 2. check whether the column is now empty.	WITHOUT_CLASSIFICATION	0.9999972295199724	WITHOUT_CLASSIFICATION	2.770480027631155E-6	DEFECT
//int columnIndex = getColumnIndex(columnKey);	WITHOUT_CLASSIFICATION	0.9999861394229506	WITHOUT_CLASSIFICATION	1.3860577049402664E-5	DEFECT
// for the keys, a shallow copy should be fine because keys // should be immutable...	WITHOUT_CLASSIFICATION	0.9999990842681795	WITHOUT_CLASSIFICATION	9.157318204511378E-7	DEFECT
// but the row data requires a deep copy	WITHOUT_CLASSIFICATION	0.9999911043466123	WITHOUT_CLASSIFICATION	8.895653387764419E-6	DEFECT
// already know 'a' isn't null	WITHOUT_CLASSIFICATION	0.9993673616385137	WITHOUT_CLASSIFICATION	6.326383614863809E-4	DEFECT
// defer null argument check	WITHOUT_CLASSIFICATION	0.9999975006904196	WITHOUT_CLASSIFICATION	2.4993095804420245E-6	DEFECT
// defer null argument check	WITHOUT_CLASSIFICATION	0.9999975006904196	WITHOUT_CLASSIFICATION	2.4993095804420245E-6	DEFECT
// this will include the case where the underlying dataset is null	WITHOUT_CLASSIFICATION	0.9994307793960839	WITHOUT_CLASSIFICATION	5.692206039160252E-4	DEFECT
// this includes the case where the underlying dataset is null	WITHOUT_CLASSIFICATION	0.9994205498391372	WITHOUT_CLASSIFICATION	5.79450160862824E-4	DEFECT
// we didn't find the key	WITHOUT_CLASSIFICATION	0.9999551050396424	WITHOUT_CLASSIFICATION	4.489496035765373E-5	DEFECT
// set up the category names...	WITHOUT_CLASSIFICATION	0.9999998175767689	WITHOUT_CLASSIFICATION	1.8242323113161167E-7	DEFECT
// check arguments...	WITHOUT_CLASSIFICATION	0.9999994922736003	WITHOUT_CLASSIFICATION	5.077263997549239E-7	DEFECT
// fetch the value...	WITHOUT_CLASSIFICATION	0.9999971087355094	WITHOUT_CLASSIFICATION	2.8912644905637825E-6	DEFECT
// does the series exist?	WITHOUT_CLASSIFICATION	0.9999424310961269	WITHOUT_CLASSIFICATION	5.756890387307417E-5	DEFECT
// does the series exist?	WITHOUT_CLASSIFICATION	0.9999424310961269	WITHOUT_CLASSIFICATION	5.756890387307417E-5	DEFECT
// is the category valid?	WITHOUT_CLASSIFICATION	0.9998998910113162	WITHOUT_CLASSIFICATION	1.0010898868390133E-4	DEFECT
// update the data...	WITHOUT_CLASSIFICATION	0.9999987839926375	WITHOUT_CLASSIFICATION	1.2160073623878967E-6	DEFECT
// update the data...	WITHOUT_CLASSIFICATION	0.9999987839926375	WITHOUT_CLASSIFICATION	1.2160073623878967E-6	DEFECT
// no additional methods required	WITHOUT_CLASSIFICATION	0.9999938663679345	WITHOUT_CLASSIFICATION	6.133632065441832E-6	DEFECT
// Find min, max for the x and y axes	WITHOUT_CLASSIFICATION	0.9999974269256245	WITHOUT_CLASSIFICATION	2.57307437545285E-6	DEFECT
// Determine the cell size	WITHOUT_CLASSIFICATION	0.9999986292686552	WITHOUT_CLASSIFICATION	1.3707313447349223E-6	DEFECT
// Generate the grid	WITHOUT_CLASSIFICATION	0.9999991361233707	WITHOUT_CLASSIFICATION	8.638766293458362E-7	DEFECT
// Map the nongrid data into the new regular grid	WITHOUT_CLASSIFICATION	0.9999998233947179	WITHOUT_CLASSIFICATION	1.7660528217613346E-7	DEFECT
// scale by the inverse of distance^power	WITHOUT_CLASSIFICATION	0.9999997898560775	WITHOUT_CLASSIFICATION	2.1014392240757183E-7	DEFECT
//remove distance of the sum	WITHOUT_CLASSIFICATION	0.9999995329886661	WITHOUT_CLASSIFICATION	4.670113339658367E-7	DEFECT
// defer null argument check	WITHOUT_CLASSIFICATION	0.9999975006904196	WITHOUT_CLASSIFICATION	2.4993095804420245E-6	DEFECT
// we didn't find the key	WITHOUT_CLASSIFICATION	0.9999551050396424	WITHOUT_CLASSIFICATION	4.489496035765373E-5	DEFECT
// handle the special case where the dataset has y-intervals that // we want to measure	WITHOUT_CLASSIFICATION	0.9999999436721986	WITHOUT_CLASSIFICATION	5.632780128944707E-8	DEFECT
// the CategoryDataset interface expects a list of categories, but // we've stored them in an array...	WITHOUT_CLASSIFICATION	0.9999998027916348	WITHOUT_CLASSIFICATION	1.9720836525822247E-7	DEFECT
// the CategoryDataset interface expects a list of series, but // we've stored them in an array...	WITHOUT_CLASSIFICATION	0.9999998027929504	WITHOUT_CLASSIFICATION	1.972070495205967E-7	DEFECT
// if d is real small set the inverse to a large number // to avoid INF	WITHOUT_CLASSIFICATION	0.9999998836890825	WITHOUT_CLASSIFICATION	1.1631091744485248E-7	DEFECT
//store data as Long	WITHOUT_CLASSIFICATION	0.9999970536751	WITHOUT_CLASSIFICATION	2.946324900055791E-6	DEFECT
// store Number as Double	WITHOUT_CLASSIFICATION	0.9999990625340169	WITHOUT_CLASSIFICATION	9.374659830236437E-7	DEFECT
// check if starting new column	WITHOUT_CLASSIFICATION	0.9999998772153497	WITHOUT_CLASSIFICATION	1.227846502713562E-7	DEFECT
//store index where new //column starts	WITHOUT_CLASSIFICATION	0.9999988578326228	WITHOUT_CLASSIFICATION	1.1421673772937224E-6	DEFECT
// set x to most recent value	WITHOUT_CLASSIFICATION	0.9999990267865362	WITHOUT_CLASSIFICATION	9.732134638151687E-7	DEFECT
// create array xIndex to hold // new column indices	WITHOUT_CLASSIFICATION	0.9999992725686463	WITHOUT_CLASSIFICATION	7.274313537587193E-7	DEFECT
// store y and z axes // as Doubles	WITHOUT_CLASSIFICATION	0.999999620042643	WITHOUT_CLASSIFICATION	3.7995735712253614E-7	DEFECT
// calculate constant values	WITHOUT_CLASSIFICATION	0.9999899010006236	WITHOUT_CLASSIFICATION	1.009899937647291E-5	DEFECT
// look for any keys that we don't already know about...	WITHOUT_CLASSIFICATION	0.9996358988078292	WITHOUT_CLASSIFICATION	3.641011921708074E-4	DEFECT
// fetch the series, remove the change listener, then remove the series.	WITHOUT_CLASSIFICATION	0.9999996963897045	WITHOUT_CLASSIFICATION	3.036102954067122E-7	DEFECT
// remove all the series from the collection and notify listeners.	WITHOUT_CLASSIFICATION	0.9999978435566433	WITHOUT_CLASSIFICATION	2.1564433566238567E-6	DEFECT
//step through all the values and add them to the hash	WITHOUT_CLASSIFICATION	0.9999981766210183	WITHOUT_CLASSIFICATION	1.823378981705299E-6	DEFECT
// no new methods required	WITHOUT_CLASSIFICATION	0.9999918515622586	WITHOUT_CLASSIFICATION	8.148437741533069E-6	DEFECT
// can't find any differences	WITHOUT_CLASSIFICATION	0.9999783547273707	WITHOUT_CLASSIFICATION	2.1645272629312907E-5	DEFECT
// now try to instantiate this ;-)	WITHOUT_CLASSIFICATION	0.9999839626612226	WITHOUT_CLASSIFICATION	1.6037338777334157E-5	DEFECT
//  Create new dataset with keys above threshold percentThreshold	WITHOUT_CLASSIFICATION	0.9998994801388303	WITHOUT_CLASSIFICATION	1.0051986116964105E-4	DEFECT
//  Do not add key to dataset	WITHOUT_CLASSIFICATION	0.9999791589216122	WITHOUT_CLASSIFICATION	2.084107838781593E-5	DEFECT
//  Add key to dataset	WITHOUT_CLASSIFICATION	0.9999934298181582	WITHOUT_CLASSIFICATION	6.5701818417294104E-6	DEFECT
//  Add other category if applicable	WITHOUT_CLASSIFICATION	0.9999993540604468	WITHOUT_CLASSIFICATION	6.459395532262388E-7	DEFECT
// now do the work...	WITHOUT_CLASSIFICATION	0.999934755394325	WITHOUT_CLASSIFICATION	6.52446056750395E-5	DEFECT
// if the dataset implements DomainInfo, life is easier	WITHOUT_CLASSIFICATION	0.9999997243533343	WITHOUT_CLASSIFICATION	2.756466657093412E-7	DEFECT
// handle the standard case (plain CategoryDataset)	WITHOUT_CLASSIFICATION	0.999999813291175	WITHOUT_CLASSIFICATION	1.8670882500869644E-7	DEFECT
// update the min value	WITHOUT_CLASSIFICATION	0.9999953660272896	WITHOUT_CLASSIFICATION	4.633972710465572E-6	DEFECT
// handle the standard case (plain CategoryDataset)	WITHOUT_CLASSIFICATION	0.999999813291175	WITHOUT_CLASSIFICATION	1.8670882500869644E-7	DEFECT
/////////////////////////////////////////////////////////////////////////// // From SeriesDataset ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999968744244382	WITHOUT_CLASSIFICATION	3.1255755619458715E-6	DEFECT
/////////////////////////////////////////////////////////////////////////// // From XYDataset ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999972322419459	WITHOUT_CLASSIFICATION	2.7677580540445235E-6	DEFECT
/////////////////////////////////////////////////////////////////////////// // From HighLowDataset ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.999999035278595	WITHOUT_CLASSIFICATION	9.647214050587435E-7	DEFECT
/////////////////////////////////////////////////////////////////////////// // From IntervalXYDataset ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.999999035206958	WITHOUT_CLASSIFICATION	9.647930420105365E-7	DEFECT
/////////////////////////////////////////////////////////////////////////// // New methods from CombinationDataset ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999993650721216	WITHOUT_CLASSIFICATION	6.349278783274811E-7	DEFECT
/////////////////////////////////////////////////////////////////////////// // New Methods ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999950045579814	WITHOUT_CLASSIFICATION	4.9954420185434955E-6	DEFECT
/////////////////////////////////////////////////////////////////////////// // Private ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999976444283138	WITHOUT_CLASSIFICATION	2.355571686123326E-6	DEFECT
// handle the special case where the dataset has y-intervals that // we want to measure	WITHOUT_CLASSIFICATION	0.9999999436721986	WITHOUT_CLASSIFICATION	5.632780128944707E-8	DEFECT
// handle three cases by dataset type	WITHOUT_CLASSIFICATION	0.9999964570229652	WITHOUT_CLASSIFICATION	3.5429770347814918E-6	DEFECT
// handle three cases by dataset type	WITHOUT_CLASSIFICATION	0.9999964570229652	WITHOUT_CLASSIFICATION	3.5429770347814918E-6	DEFECT
// handle special case of IntervalXYDataset	WITHOUT_CLASSIFICATION	0.9999998623196633	WITHOUT_CLASSIFICATION	1.3768033678177652E-7	DEFECT
// handle special case of IntervalXYDataset	WITHOUT_CLASSIFICATION	0.9999998623196633	WITHOUT_CLASSIFICATION	1.3768033678177652E-7	DEFECT
// handle special case of IntervalXYDataset	WITHOUT_CLASSIFICATION	0.9999998623196633	WITHOUT_CLASSIFICATION	1.3768033678177652E-7	DEFECT
// handle special case of OHLCDataset	WITHOUT_CLASSIFICATION	0.9999996007040066	WITHOUT_CLASSIFICATION	3.9929599346314153E-7	DEFECT
// handle special case of OHLCDataset	WITHOUT_CLASSIFICATION	0.9999996007040066	WITHOUT_CLASSIFICATION	3.9929599346314153E-7	DEFECT
// standard case - plain XYDataset	WITHOUT_CLASSIFICATION	0.9999990012976934	WITHOUT_CLASSIFICATION	9.987023066438526E-7	DEFECT
// standard case - plain XYDataset	WITHOUT_CLASSIFICATION	0.9999990012976934	WITHOUT_CLASSIFICATION	9.987023066438526E-7	DEFECT
// handle special case of BoxAndWhiskerXYDataset	WITHOUT_CLASSIFICATION	0.9999977363100309	WITHOUT_CLASSIFICATION	2.2636899691193715E-6	DEFECT
// if the dataset implements DomainInfo, life is easy	WITHOUT_CLASSIFICATION	0.9999994013924618	WITHOUT_CLASSIFICATION	5.986075382155021E-7	DEFECT
// if the dataset implements DomainInfo, life is easy	WITHOUT_CLASSIFICATION	0.9999994013924618	WITHOUT_CLASSIFICATION	5.986075382155021E-7	DEFECT
// hasn't implemented DomainInfo, so iterate...	WITHOUT_CLASSIFICATION	0.9999977367682464	WITHOUT_CLASSIFICATION	2.2632317535735142E-6	DEFECT
// hasn't implemented RangeInfo, so we'll have to iterate...	WITHOUT_CLASSIFICATION	0.9999979212973129	WITHOUT_CLASSIFICATION	2.078702687118004E-6	DEFECT
// hasn't implemented RangeInfo, so we'll have to iterate...	WITHOUT_CLASSIFICATION	0.9999979212973129	WITHOUT_CLASSIFICATION	2.078702687118004E-6	DEFECT
// work out the minimum value...	WITHOUT_CLASSIFICATION	0.9999765437798659	WITHOUT_CLASSIFICATION	2.3456220134181832E-5	DEFECT
// work out the minimum value...	WITHOUT_CLASSIFICATION	0.9999765437798659	WITHOUT_CLASSIFICATION	2.3456220134181832E-5	DEFECT
// work out the minimum value...	WITHOUT_CLASSIFICATION	0.9999765437798659	WITHOUT_CLASSIFICATION	2.3456220134181832E-5	DEFECT
// '+', remember value is negative	WITHOUT_CLASSIFICATION	0.9999950049781524	WITHOUT_CLASSIFICATION	4.995021847679846E-6	DEFECT
// create an array holding the group indices for each series...	WITHOUT_CLASSIFICATION	0.9999993012941043	WITHOUT_CLASSIFICATION	6.987058957424961E-7	DEFECT
// minimum and maximum for each group...	WITHOUT_CLASSIFICATION	0.9999999195715813	WITHOUT_CLASSIFICATION	8.042841870210759E-8	DEFECT
// no new methods	WITHOUT_CLASSIFICATION	0.9999978727880241	WITHOUT_CLASSIFICATION	2.1272119760175916E-6	DEFECT
// no new methods	WITHOUT_CLASSIFICATION	0.9999978727880241	WITHOUT_CLASSIFICATION	2.1272119760175916E-6	DEFECT
// we'll set this to false if there is at // least one non-null data item...	WITHOUT_CLASSIFICATION	0.9999928844212806	WITHOUT_CLASSIFICATION	7.1155787193421154E-6	DEFECT
// no additional methods required	WITHOUT_CLASSIFICATION	0.9999938663679345	WITHOUT_CLASSIFICATION	6.133632065441832E-6	DEFECT
// no new methods required	WITHOUT_CLASSIFICATION	0.9999918515622586	WITHOUT_CLASSIFICATION	8.148437741533069E-6	DEFECT
// no new methods required	WITHOUT_CLASSIFICATION	0.9999918515622586	WITHOUT_CLASSIFICATION	8.148437741533069E-6	DEFECT
/////////////////////////////////////////////////////////////////////////// // From XYDataset ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999972322419459	WITHOUT_CLASSIFICATION	2.7677580540445235E-6	DEFECT
// handle the special case where the dataset has y-intervals that // we want to measure	WITHOUT_CLASSIFICATION	0.9999999436721986	WITHOUT_CLASSIFICATION	5.632780128944707E-8	DEFECT
// '+', remember value is negative	WITHOUT_CLASSIFICATION	0.9999950049781524	WITHOUT_CLASSIFICATION	4.995021847679846E-6	DEFECT
// '+', remember value is negative	WITHOUT_CLASSIFICATION	0.9999950049781524	WITHOUT_CLASSIFICATION	4.995021847679846E-6	DEFECT
// we don't know anything about the ordering of the x-values, // so we iterate until we find the first crossing of x (if any) // we know there are at least 2 items in the series at this point	WITHOUT_CLASSIFICATION	0.9999885816972209	WITHOUT_CLASSIFICATION	1.1418302779069383E-5	DEFECT
// delegate null check on dataset	WITHOUT_CLASSIFICATION	0.9999966902106912	WITHOUT_CLASSIFICATION	3.3097893088134064E-6	DEFECT
// exact match on first item	WITHOUT_CLASSIFICATION	0.9999984571470484	WITHOUT_CLASSIFICATION	1.5428529515352344E-6	DEFECT
// no crossing of x	WITHOUT_CLASSIFICATION	0.9999997190841858	WITHOUT_CLASSIFICATION	2.8091581423021065E-7	DEFECT
// spanning match	WITHOUT_CLASSIFICATION	0.9999988135950627	WITHOUT_CLASSIFICATION	1.1864049372634414E-6	DEFECT
// exact match	WITHOUT_CLASSIFICATION	0.9999983203448075	WITHOUT_CLASSIFICATION	1.6796551925816856E-6	DEFECT
// maps our series into our parent's	WITHOUT_CLASSIFICATION	0.9999996507069331	WITHOUT_CLASSIFICATION	3.4929306687776296E-7	DEFECT
// prior to 1.0.14, we just fired a PropertyChange - so we need to // keep doing this	WITHOUT_CLASSIFICATION	0.9999802753691066	WITHOUT_CLASSIFICATION	1.9724630893370037E-5	DEFECT
// no new methods added.	WITHOUT_CLASSIFICATION	0.9999867037265519	WITHOUT_CLASSIFICATION	1.3296273448107981E-5	DEFECT
// first line contains column keys	WITHOUT_CLASSIFICATION	0.9999959020493316	WITHOUT_CLASSIFICATION	4.09795066830879E-6	DEFECT
// remaining lines contain a row key and data values	WITHOUT_CLASSIFICATION	0.9999671468967958	WITHOUT_CLASSIFICATION	3.2853103204276334E-5	DEFECT
// first field contains the row key	WITHOUT_CLASSIFICATION	0.9999971770405713	WITHOUT_CLASSIFICATION	2.822959428715469E-6	DEFECT
// update the max value	WITHOUT_CLASSIFICATION	0.9999951799955435	WITHOUT_CLASSIFICATION	4.8200044564859475E-6	DEFECT
// remaining fields contain values	WITHOUT_CLASSIFICATION	0.9999980204073772	WITHOUT_CLASSIFICATION	1.9795926227527317E-6	DEFECT
// Remove any previous old data	WITHOUT_CLASSIFICATION	0.9999938703515148	WITHOUT_CLASSIFICATION	6.129648485255891E-6	DEFECT
// first column contains the row key...	WITHOUT_CLASSIFICATION	0.9999976164086135	WITHOUT_CLASSIFICATION	2.383591386447274E-6	DEFECT
// suppress (value defaults to null)	WITHOUT_CLASSIFICATION	0.9999995084372867	WITHOUT_CLASSIFICATION	4.915627134061953E-7	DEFECT
// not a value, can't use it (defaults to null)	WITHOUT_CLASSIFICATION	0.9999792957126771	WITHOUT_CLASSIFICATION	2.070428732290232E-5	DEFECT
/// First column is X data	WITHOUT_CLASSIFICATION	0.999988656295307	WITHOUT_CLASSIFICATION	1.1343704693025856E-5	DEFECT
/// Get the column names and cache them.	WITHOUT_CLASSIFICATION	0.9999996884635173	WITHOUT_CLASSIFICATION	3.115364827601702E-7	DEFECT
// Might need to add, to free memory from any previous result sets	WITHOUT_CLASSIFICATION	0.9999991354488945	WITHOUT_CLASSIFICATION	8.6455110551517E-7	DEFECT
// Are we working with a time series.	WITHOUT_CLASSIFICATION	0.9999589964339839	WITHOUT_CLASSIFICATION	4.1003566016167584E-5	DEFECT
// defer null argument check	WITHOUT_CLASSIFICATION	0.9999975006904196	WITHOUT_CLASSIFICATION	2.4993095804420245E-6	DEFECT
// defer null argument check	WITHOUT_CLASSIFICATION	0.9999975006904196	WITHOUT_CLASSIFICATION	2.4993095804420245E-6	DEFECT
// check arguments...	WITHOUT_CLASSIFICATION	0.9999994922736003	WITHOUT_CLASSIFICATION	5.077263997549239E-7	DEFECT
/////////////////////////////////////////////////////////////////////////// // From SeriesDataset ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999968744244382	WITHOUT_CLASSIFICATION	3.1255755619458715E-6	DEFECT
/////////////////////////////////////////////////////////////////////////// // From IntervalXYDataset ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.999999035206958	WITHOUT_CLASSIFICATION	9.647930420105365E-7	DEFECT
/////////////////////////////////////////////////////////////////////////// // New methods from CombinationDataset ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999993650721216	WITHOUT_CLASSIFICATION	6.349278783274811E-7	DEFECT
/////////////////////////////////////////////////////////////////////////// // New methods from CombinationDataset ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999993650721216	WITHOUT_CLASSIFICATION	6.349278783274811E-7	DEFECT
// if this series belongs to a dataset, the dataset might veto the // change if it results in two series within the dataset having the // same key	WITHOUT_CLASSIFICATION	0.9999996125727713	WITHOUT_CLASSIFICATION	3.874272286804246E-7	DEFECT
// see comments about priority of // 10 in validateObject()	WITHOUT_CLASSIFICATION	0.9999938197125151	WITHOUT_CLASSIFICATION	6.180287484880296E-6	DEFECT
// first field is ignored, since // column 0 is for row keys	WITHOUT_CLASSIFICATION	0.9999997509819871	WITHOUT_CLASSIFICATION	2.490180128209659E-7	DEFECT
// Get all rows. // rows = new ArrayList();	WITHOUT_CLASSIFICATION	0.9999962004287797	WITHOUT_CLASSIFICATION	3.799571220267036E-6	DEFECT
/// Determine max and min values.	WITHOUT_CLASSIFICATION	0.9999884274704486	WITHOUT_CLASSIFICATION	1.1572529551291447E-5	DEFECT
// Tell the listeners a new table has arrived.	WITHOUT_CLASSIFICATION	0.9999913562443676	WITHOUT_CLASSIFICATION	8.643755632340887E-6	DEFECT
// fill the bins	WITHOUT_CLASSIFICATION	0.9999967235530096	WITHOUT_CLASSIFICATION	3.2764469903436066E-6	DEFECT
// generic map for each series	WITHOUT_CLASSIFICATION	0.9999995042527491	WITHOUT_CLASSIFICATION	4.957472509295648E-7	DEFECT
// pretty sure this shouldn't ever happen	WITHOUT_CLASSIFICATION	0.99993485901987	WITHOUT_CLASSIFICATION	6.51409801299713E-5	DEFECT
// lower bounds are the same	WITHOUT_CLASSIFICATION	0.9999972769063614	WITHOUT_CLASSIFICATION	2.7230936386583024E-6	DEFECT
// overridden to make public	WITHOUT_CLASSIFICATION	0.9999947609387851	WITHOUT_CLASSIFICATION	5.2390612148806395E-6	DEFECT
// update the cached range values...	WITHOUT_CLASSIFICATION	0.999999903031117	WITHOUT_CLASSIFICATION	9.696888305563832E-8	DEFECT
// check that the new bin doesn't overlap with any existing bin	WITHOUT_CLASSIFICATION	0.9999918538737292	WITHOUT_CLASSIFICATION	8.146126270769443E-6	DEFECT
// pass values to other constructor	WITHOUT_CLASSIFICATION	0.9999995445720203	WITHOUT_CLASSIFICATION	4.554279796206526E-7	DEFECT
// update cached min and max values	WITHOUT_CLASSIFICATION	0.9999993716613913	WITHOUT_CLASSIFICATION	6.283386087130337E-7	DEFECT
// defer null argument checks	WITHOUT_CLASSIFICATION	0.9999991033872272	WITHOUT_CLASSIFICATION	8.966127729005873E-7	DEFECT
// check for zero pivot element	WITHOUT_CLASSIFICATION	0.9999996794441055	WITHOUT_CLASSIFICATION	3.2055589448620023E-7	DEFECT
// treat nulls the same as NaNs	WITHOUT_CLASSIFICATION	0.9999958243025533	WITHOUT_CLASSIFICATION	4.175697446692522E-6	DEFECT
// calculate the sum and count	WITHOUT_CLASSIFICATION	0.9999991965308207	WITHOUT_CLASSIFICATION	8.034691793864345E-7	DEFECT
// intercept	WITHOUT_CLASSIFICATION	0.9999950793680322	WITHOUT_CLASSIFICATION	4.92063196780071E-6	DEFECT
// sum of x, x^2, x * y, y	WITHOUT_CLASSIFICATION	0.9999987355345031	WITHOUT_CLASSIFICATION	1.2644654968734245E-6	DEFECT
// holds the moving average sum	WITHOUT_CLASSIFICATION	0.9999858388924415	WITHOUT_CLASSIFICATION	1.4161107558529283E-5	DEFECT
// defer null argument checks	WITHOUT_CLASSIFICATION	0.9999991033872272	WITHOUT_CLASSIFICATION	8.966127729005873E-7	DEFECT
// make sure bins[bins.length]'s upper boundary ends at maximum // to avoid the rounding issue. the bins[0] lower boundary is // guaranteed start from min	WITHOUT_CLASSIFICATION	0.9999998967798059	WITHOUT_CLASSIFICATION	1.03220194006576E-7	DEFECT
// iterate over all data items and update mins and maxes	WITHOUT_CLASSIFICATION	0.9999986485512432	WITHOUT_CLASSIFICATION	1.3514487568898294E-6	DEFECT
// if this cell held a maximum and/or minimum value, we'll need to // update the cached bounds...	WITHOUT_CLASSIFICATION	0.9999999509549878	WITHOUT_CLASSIFICATION	4.90450121742382E-8	DEFECT
// ********* stat function for linear slope ******** // y = a + bx // a = ybar - b * xbar //     sum(x * y) - (sum (x) * sum(y)) / n // b = ------------------------------------ //     sum (x^2) - (sum(x)^2 / n // *************************************************	WITHOUT_CLASSIFICATION	0.9999880467903812	WITHOUT_CLASSIFICATION	1.1953209618673538E-5	DEFECT
// update cached range values	WITHOUT_CLASSIFICATION	0.999999770293469	WITHOUT_CLASSIFICATION	2.2970653087709848E-7	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999934710680527	WITHOUT_CLASSIFICATION	6.528931947226976E-6	DEFECT
// update the min value	WITHOUT_CLASSIFICATION	0.9999953660272896	WITHOUT_CLASSIFICATION	4.633972710465572E-6	DEFECT
// iterate over all data items and update mins and maxes	WITHOUT_CLASSIFICATION	0.9999986485512432	WITHOUT_CLASSIFICATION	1.3514487568898294E-6	DEFECT
// CASE 2 : Comparing to another TimePeriod object // -----------------------------------------------	WITHOUT_CLASSIFICATION	0.9999697302571728	WITHOUT_CLASSIFICATION	3.0269742827235935E-5	DEFECT
// CASE 3 : Comparing to a non-TimePeriod object // ---------------------------------------------	WITHOUT_CLASSIFICATION	0.9999495395679789	WITHOUT_CLASSIFICATION	5.046043202104536E-5	DEFECT
// consider time periods to be ordered after general objects	WITHOUT_CLASSIFICATION	0.9999981809562206	WITHOUT_CLASSIFICATION	1.8190437793071947E-6	DEFECT
// consider time periods to be ordered after general objects	WITHOUT_CLASSIFICATION	0.9999981809562206	WITHOUT_CLASSIFICATION	1.8190437793071947E-6	DEFECT
// we are at the last minute in the hour...	WITHOUT_CLASSIFICATION	0.9999981801527151	WITHOUT_CLASSIFICATION	1.8198472849451453E-6	DEFECT
// CASE 1 : Comparing to another Minute object // -------------------------------------------	WITHOUT_CLASSIFICATION	0.9999753524714419	WITHOUT_CLASSIFICATION	2.4647528558115102E-5	DEFECT
// more difficult case - evaluate later...	WITHOUT_CLASSIFICATION	0.9999932485856098	WITHOUT_CLASSIFICATION	6.751414390197069E-6	DEFECT
// won't get here...	WITHOUT_CLASSIFICATION	0.9999810086578738	WITHOUT_CLASSIFICATION	1.8991342126252108E-5	DEFECT
// remove old items and notify if necessary	WITHOUT_CLASSIFICATION	0.9999993100988774	WITHOUT_CLASSIFICATION	6.899011226445721E-7	DEFECT
// make the change (if it's not a duplicate time period)...	WITHOUT_CLASSIFICATION	0.9999995920910676	WITHOUT_CLASSIFICATION	4.079089323442376E-7	DEFECT
// check if this addition will exceed the maximum item count...	WITHOUT_CLASSIFICATION	0.999998637280558	WITHOUT_CLASSIFICATION	1.3627194419263794E-6	DEFECT
// check if this addition will exceed the maximum item count...	WITHOUT_CLASSIFICATION	0.999998637280558	WITHOUT_CLASSIFICATION	1.3627194419263794E-6	DEFECT
// find the serial index of the period specified by 'latest'	WITHOUT_CLASSIFICATION	0.9999998720419025	WITHOUT_CLASSIFICATION	1.2795809738618E-7	DEFECT
// it is too slow to look at every data item, so let's just look at // the first, middle and last items...	WITHOUT_CLASSIFICATION	0.9999995690949045	WITHOUT_CLASSIFICATION	4.3090509550728425E-7	DEFECT
// CASE 2 : Comparing to another TimePeriod object // -----------------------------------------------	WITHOUT_CLASSIFICATION	0.9999697302571728	WITHOUT_CLASSIFICATION	3.0269742827235935E-5	DEFECT
// CASE 2 : Comparing to another TimePeriod object // -----------------------------------------------	WITHOUT_CLASSIFICATION	0.9999697302571728	WITHOUT_CLASSIFICATION	3.0269742827235935E-5	DEFECT
// CASE 3 : Comparing to a non-TimePeriod object // ---------------------------------------------	WITHOUT_CLASSIFICATION	0.9999495395679789	WITHOUT_CLASSIFICATION	5.046043202104536E-5	DEFECT
// consider time periods to be ordered after general objects	WITHOUT_CLASSIFICATION	0.9999981809562206	WITHOUT_CLASSIFICATION	1.8190437793071947E-6	DEFECT
// consider time periods to be ordered after general objects	WITHOUT_CLASSIFICATION	0.9999981809562206	WITHOUT_CLASSIFICATION	1.8190437793071947E-6	DEFECT
// more difficult case - evaluate later...	WITHOUT_CLASSIFICATION	0.9999932485856098	WITHOUT_CLASSIFICATION	6.751414390197069E-6	DEFECT
// more difficult case - evaluate later...	WITHOUT_CLASSIFICATION	0.9999932485856098	WITHOUT_CLASSIFICATION	6.751414390197069E-6	DEFECT
// since the items are ordered, we could be more clever here and avoid // iterating over all the data	WITHOUT_CLASSIFICATION	0.9999996064129065	WITHOUT_CLASSIFICATION	3.9358709352789397E-7	DEFECT
// remove old items if necessary, but // don't notify anyone, because that // happens next anyway...	WITHOUT_CLASSIFICATION	0.9999771874974807	WITHOUT_CLASSIFICATION	2.2812502519324896E-5	DEFECT
// figure out if we need to iterate through all the y-values // to find the revised minY / maxY	WITHOUT_CLASSIFICATION	0.9999999646760076	WITHOUT_CLASSIFICATION	3.532399240531884E-8	DEFECT
// check if there are any values earlier than specified by the history // count...	WITHOUT_CLASSIFICATION	0.9999996046488535	WITHOUT_CLASSIFICATION	3.9535114653473257E-7	DEFECT
// check if there are any values earlier than specified by the history // count...	WITHOUT_CLASSIFICATION	0.9999996046488535	WITHOUT_CLASSIFICATION	3.9535114653473257E-7	DEFECT
// start is after last data item	WITHOUT_CLASSIFICATION	0.9999947115654781	WITHOUT_CLASSIFICATION	5.288434521826704E-6	DEFECT
// update the time series appropriately	WITHOUT_CLASSIFICATION	0.9999989196901518	WITHOUT_CLASSIFICATION	1.0803098482315604E-6	DEFECT
// we are at the first hour in the day...	WITHOUT_CLASSIFICATION	0.9999942145510103	WITHOUT_CLASSIFICATION	5.785448989576458E-6	DEFECT
// we are at the last hour in the day...	WITHOUT_CLASSIFICATION	0.9999965876980683	WITHOUT_CLASSIFICATION	3.4123019316797726E-6	DEFECT
// CASE 1 : Comparing to another Hour object // -----------------------------------------	WITHOUT_CLASSIFICATION	0.9999826937009195	WITHOUT_CLASSIFICATION	1.7306299080560648E-5	DEFECT
// if the hour is 0 - 23 then create an hour	WITHOUT_CLASSIFICATION	0.9999967027055485	WITHOUT_CLASSIFICATION	3.297294451562551E-6	DEFECT
// parse the string...	WITHOUT_CLASSIFICATION	0.9999958492719605	WITHOUT_CLASSIFICATION	4.15072803951834E-6	DEFECT
// create the year...	WITHOUT_CLASSIFICATION	0.9999983220864658	WITHOUT_CLASSIFICATION	1.6779135341685124E-6	DEFECT
// get the current data item...	WITHOUT_CLASSIFICATION	0.9999991587698424	WITHOUT_CLASSIFICATION	8.412301577202467E-7	DEFECT
// work out the average for the earlier values...	WITHOUT_CLASSIFICATION	0.9999882689469927	WITHOUT_CLASSIFICATION	1.1731053007289081E-5	DEFECT
// work out the average for the earlier values...	WITHOUT_CLASSIFICATION	0.9999882689469927	WITHOUT_CLASSIFICATION	1.1731053007289081E-5	DEFECT
// remove the point i-periodCount out of the rolling sum.	WITHOUT_CLASSIFICATION	0.9999998300759972	WITHOUT_CLASSIFICATION	1.6992400286566896E-7	DEFECT
// an arbitrary safe default value	WITHOUT_CLASSIFICATION	0.9999893733259508	WITHOUT_CLASSIFICATION	1.0626674049048568E-5	DEFECT
// default value;	WITHOUT_CLASSIFICATION	0.9999947354268243	WITHOUT_CLASSIFICATION	5.264573175699373E-6	DEFECT
// as a class variable, initializes == 0	WITHOUT_CLASSIFICATION	0.9999992697367879	WITHOUT_CLASSIFICATION	7.302632120909162E-7	DEFECT
// cached values used for interface DomainInfo:	WITHOUT_CLASSIFICATION	0.9999998428602906	WITHOUT_CLASSIFICATION	1.571397093654875E-7	DEFECT
//rangeGridlinePaint;	WITHOUT_CLASSIFICATION	0.9999900812928072	WITHOUT_CLASSIFICATION	9.918707192852178E-6	DEFECT
// CASE 2 : Comparing to another TimePeriod object // -----------------------------------------------	WITHOUT_CLASSIFICATION	0.9999697302571728	WITHOUT_CLASSIFICATION	3.0269742827235935E-5	DEFECT
// CASE 3 : Comparing to a non-TimePeriod object // ---------------------------------------------	WITHOUT_CLASSIFICATION	0.9999495395679789	WITHOUT_CLASSIFICATION	5.046043202104536E-5	DEFECT
// CASE 3 : Comparing to a non-TimePeriod object // ---------------------------------------------	WITHOUT_CLASSIFICATION	0.9999495395679789	WITHOUT_CLASSIFICATION	5.046043202104536E-5	DEFECT
// autoinit's to null.	WITHOUT_CLASSIFICATION	0.999998146656005	WITHOUT_CLASSIFICATION	1.8533439949636186E-6	DEFECT
// CASE 1 : Comparing to another Year object // -----------------------------------------	WITHOUT_CLASSIFICATION	0.9999583604190768	WITHOUT_CLASSIFICATION	4.1639580923281856E-5	DEFECT
// if the initial averaging period is to be excluded, then // calculate the lowest x-value to have an average calculated...	WITHOUT_CLASSIFICATION	0.9999948425814074	WITHOUT_CLASSIFICATION	5.157418592641267E-6	DEFECT
//}	WITHOUT_CLASSIFICATION	0.9998670637628349	WITHOUT_CLASSIFICATION	1.3293623716505103E-4	DEFECT
//}	WITHOUT_CLASSIFICATION	0.9998670637628349	WITHOUT_CLASSIFICATION	1.3293623716505103E-4	DEFECT
// if the initial averaging period is to be excluded, then // calculate the index of the // first data item to have an average calculated...	WITHOUT_CLASSIFICATION	0.999997965587889	WITHOUT_CLASSIFICATION	2.0344121110713112E-6	DEFECT
// Cached values used for interface RangeInfo: (note minValue pinned at 0) //   A single set of extrema covers the entire SeriesCollection	WITHOUT_CLASSIFICATION	0.9999998304331309	WITHOUT_CLASSIFICATION	1.695668691896577E-7	DEFECT
///  .. etc....	WITHOUT_CLASSIFICATION	0.999993076253597	WITHOUT_CLASSIFICATION	6.9237464030765084E-6	DEFECT
/// Expand the following for all defined TimePeriods:	WITHOUT_CLASSIFICATION	0.9999894394653983	WITHOUT_CLASSIFICATION	1.0560534601757134E-5	DEFECT
// initialize the members of "seriesNames" array so they won't be null:	WITHOUT_CLASSIFICATION	0.9999458502320825	WITHOUT_CLASSIFICATION	5.4149767917531605E-5	DEFECT
//{ // deep copy from values[], caller // can safely discard that array	WITHOUT_CLASSIFICATION	0.9999847259481673	WITHOUT_CLASSIFICATION	1.5274051832756094E-5	DEFECT
// Avoid IndexOutOfBoundsException:	WITHOUT_CLASSIFICATION	0.9999926299658053	WITHOUT_CLASSIFICATION	7.370034194673869E-6	DEFECT
// But if that series array already exists, just overwrite its contents	WITHOUT_CLASSIFICATION	0.9999995634581162	WITHOUT_CLASSIFICATION	4.3654188369046724E-7	DEFECT
// But if that series array already exists, just overwrite its contents //synchronized(this) //{	WITHOUT_CLASSIFICATION	0.9999991477024872	WITHOUT_CLASSIFICATION	8.522975127785055E-7	DEFECT
// all arrays equal length, // so ignore argument:	WITHOUT_CLASSIFICATION	0.9999993860799309	WITHOUT_CLASSIFICATION	6.139200690886523E-7	DEFECT
// Methods for managing the FIFO's:	WITHOUT_CLASSIFICATION	0.9999377363809321	WITHOUT_CLASSIFICATION	6.226361906784348E-5	DEFECT
// no translation needed	WITHOUT_CLASSIFICATION	0.9999997455870047	WITHOUT_CLASSIFICATION	2.544129952967734E-7	DEFECT
// else  [implicit here]	WITHOUT_CLASSIFICATION	0.9999980083566913	WITHOUT_CLASSIFICATION	1.9916433087955656E-6	DEFECT
// newestAt takes value previously held // by oldestAT	WITHOUT_CLASSIFICATION	0.9999736180314311	WITHOUT_CLASSIFICATION	2.638196856888372E-5	DEFECT
// if the oldest data contained a maximum Y-value, invalidate the stored //   Y-max and Y-range data:	WITHOUT_CLASSIFICATION	0.9999997344659728	WITHOUT_CLASSIFICATION	2.655340271619085E-7	DEFECT
// deregister the collection as a change listener to each series in the // collection	WITHOUT_CLASSIFICATION	0.9999989736921009	WITHOUT_CLASSIFICATION	1.0263078991918786E-6	DEFECT
//  wipe the next (about to be used) set of data slots	WITHOUT_CLASSIFICATION	0.9999999935409175	WITHOUT_CLASSIFICATION	6.459082445337903E-9	DEFECT
// Update the array of TimePeriods:	WITHOUT_CLASSIFICATION	0.999996388609107	WITHOUT_CLASSIFICATION	3.6113908929838544E-6	DEFECT
// Now advance "oldestAt", wrapping at end of the array	WITHOUT_CLASSIFICATION	0.999998949375363	WITHOUT_CLASSIFICATION	1.0506246369557816E-6	DEFECT
// Update the domain limits: //(time is kept in msec)	WITHOUT_CLASSIFICATION	0.999980658707813	WITHOUT_CLASSIFICATION	1.9341292187008326E-5	DEFECT
//  If data can be < 0, the next 2 methods should be modified	WITHOUT_CLASSIFICATION	0.999997025500222	WITHOUT_CLASSIFICATION	2.9744997780355033E-6	DEFECT
// index to select the "series"	WITHOUT_CLASSIFICATION	0.9999992067808137	WITHOUT_CLASSIFICATION	7.932191864033815E-7	DEFECT
/* // "Extras" found useful when analyzing/verifying class behavior:    public Number getUntranslatedXValue(int series, int item)    {      return super.getXValue(series, item);    }    public float getUntranslatedY(int series, int item)    {      return super.getY(series, item);    }  */	WITHOUT_CLASSIFICATION	0.9999999656055124	WITHOUT_CLASSIFICATION	3.439448754833286E-8	DEFECT
// a Long kept updated by advanceTime()	WITHOUT_CLASSIFICATION	0.9999850436785216	WITHOUT_CLASSIFICATION	1.495632147835507E-5	DEFECT
// a Long kept updated by advanceTime()	WITHOUT_CLASSIFICATION	0.9999850436785216	WITHOUT_CLASSIFICATION	1.495632147835507E-5	DEFECT
// try a dataset with some content...	WITHOUT_CLASSIFICATION	0.9999961759564621	WITHOUT_CLASSIFICATION	3.824043537992664E-6	DEFECT
// try a null argument	WITHOUT_CLASSIFICATION	0.9999920659499849	WITHOUT_CLASSIFICATION	7.934050015098356E-6	DEFECT
// try a dataset with some content...	WITHOUT_CLASSIFICATION	0.9999961759564621	WITHOUT_CLASSIFICATION	3.824043537992664E-6	DEFECT
// try a dataset with some content...	WITHOUT_CLASSIFICATION	0.9999961759564621	WITHOUT_CLASSIFICATION	3.824043537992664E-6	DEFECT
// remove all the series from the collection and notify listeners.	WITHOUT_CLASSIFICATION	0.9999978435566433	WITHOUT_CLASSIFICATION	2.1564433566238567E-6	DEFECT
// CASE 2 : Comparing to another TimePeriod object // -----------------------------------------------	WITHOUT_CLASSIFICATION	0.9999697302571728	WITHOUT_CLASSIFICATION	3.0269742827235935E-5	DEFECT
// CASE 3 : Comparing to a non-TimePeriod object // ---------------------------------------------	WITHOUT_CLASSIFICATION	0.9999495395679789	WITHOUT_CLASSIFICATION	5.046043202104536E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999944401552767	WITHOUT_CLASSIFICATION	5.559844723236735E-6	DEFECT
// CASE 3 : Comparing to a non-TimePeriod object // ---------------------------------------------	WITHOUT_CLASSIFICATION	0.9999495395679789	WITHOUT_CLASSIFICATION	5.046043202104536E-5	DEFECT
// consider time periods to be ordered after general objects	WITHOUT_CLASSIFICATION	0.9999981809562206	WITHOUT_CLASSIFICATION	1.8190437793071947E-6	DEFECT
// consider time periods to be ordered after general objects	WITHOUT_CLASSIFICATION	0.9999981809562206	WITHOUT_CLASSIFICATION	1.8190437793071947E-6	DEFECT
// more difficult case - evaluate later...	WITHOUT_CLASSIFICATION	0.9999932485856098	WITHOUT_CLASSIFICATION	6.751414390197069E-6	DEFECT
// more difficult case - evaluate later...	WITHOUT_CLASSIFICATION	0.9999932485856098	WITHOUT_CLASSIFICATION	6.751414390197069E-6	DEFECT
// parse the string...	WITHOUT_CLASSIFICATION	0.9999958492719605	WITHOUT_CLASSIFICATION	4.15072803951834E-6	DEFECT
// check an empty dataset	WITHOUT_CLASSIFICATION	0.9999955199593095	WITHOUT_CLASSIFICATION	4.480040690500415E-6	DEFECT
// appendData() writes new data at the index position given by newestAt/ // When adding new data dynamically, use advanceTime(), followed by this:	WITHOUT_CLASSIFICATION	0.9995934809844036	WITHOUT_CLASSIFICATION	4.065190155963569E-4	DEFECT
// check whether the "valueHistory" array member exists; if not, // create them:	WITHOUT_CLASSIFICATION	0.9999997310924322	WITHOUT_CLASSIFICATION	2.689075677890499E-7	DEFECT
// getXxx() ftns can ignore the "series" argument: // Don't synchronize this!! Instead, synchronize the loop that calls it.	WITHOUT_CLASSIFICATION	0.9999758936782916	WITHOUT_CLASSIFICATION	2.4106321708392093E-5	DEFECT
// Don't synchronize this!! // Instead, synchronize the loop that calls it.	WITHOUT_CLASSIFICATION	0.9999748409855953	WITHOUT_CLASSIFICATION	2.5159014404641394E-5	DEFECT
// The next 3 functions implement the RangeInfo interface. // Using saved limits (updated by each updateTime() call) significantly // improves performance.  WARNING: this code makes the simplifying // assumption that data is never negative.  Expand as needed for the // general case.	WITHOUT_CLASSIFICATION	0.9999813082130932	WITHOUT_CLASSIFICATION	1.869178690688624E-5	DEFECT
// CASE 1 : Comparing to another Quarter object // --------------------------------------------	WITHOUT_CLASSIFICATION	0.9999841344456106	WITHOUT_CLASSIFICATION	1.586555438946746E-5	DEFECT
// find the Q and the integer following it (remove both from the // string)...	WITHOUT_CLASSIFICATION	0.9999983711540701	WITHOUT_CLASSIFICATION	1.6288459299543571E-6	DEFECT
// replace any / , or - with a space	WITHOUT_CLASSIFICATION	0.9999987566405272	WITHOUT_CLASSIFICATION	1.243359472790338E-6	DEFECT
// do nothing, so null is returned	WITHOUT_CLASSIFICATION	0.9999933169111854	WITHOUT_CLASSIFICATION	6.6830888145981085E-6	DEFECT
//////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999334309233675	WITHOUT_CLASSIFICATION	6.656907663251421E-5	DEFECT
// CASE 1 : Comparing to another Day object // ----------------------------------------	WITHOUT_CLASSIFICATION	0.9999374141887915	WITHOUT_CLASSIFICATION	6.258581120861598E-5	DEFECT
// check arguments...delegated // fetch the series name...	WITHOUT_CLASSIFICATION	0.9999999448065353	WITHOUT_CLASSIFICATION	5.519346466576356E-8	DEFECT
// deregister the collection as a change listener to each series in the // collection	WITHOUT_CLASSIFICATION	0.9999989736921009	WITHOUT_CLASSIFICATION	1.0263078991918786E-6	DEFECT
// if it is not the series name, then we have no interest	WITHOUT_CLASSIFICATION	0.9999950717242009	WITHOUT_CLASSIFICATION	4.928275799141766E-6	DEFECT
// to be defensive, let's check that the source series does in fact // belong to this collection	WITHOUT_CLASSIFICATION	0.9999933359055384	WITHOUT_CLASSIFICATION	6.664094461645011E-6	DEFECT
// check if the new series name already exists for another series	WITHOUT_CLASSIFICATION	0.999999918895823	WITHOUT_CLASSIFICATION	8.110417698862716E-8	DEFECT
// we need to work out if the previous year has 52 or 53 weeks...	WITHOUT_CLASSIFICATION	0.999998417784631	WITHOUT_CLASSIFICATION	1.5822153690405466E-6	DEFECT
// check an empty dataset	WITHOUT_CLASSIFICATION	0.9999955199593095	WITHOUT_CLASSIFICATION	4.480040690500415E-6	DEFECT
// check an empty dataset	WITHOUT_CLASSIFICATION	0.9999955199593095	WITHOUT_CLASSIFICATION	4.480040690500415E-6	DEFECT
// CASE 2 : Comparing to a general object // ---------------------------------------------	WITHOUT_CLASSIFICATION	0.999953761370464	WITHOUT_CLASSIFICATION	4.623862953600188E-5	DEFECT
// remove all the series from the collection and notify listeners.	WITHOUT_CLASSIFICATION	0.9999978435566433	WITHOUT_CLASSIFICATION	2.1564433566238567E-6	DEFECT
// CASE 1 : Comparing to another Second object // -------------------------------------------	WITHOUT_CLASSIFICATION	0.9999807547005874	WITHOUT_CLASSIFICATION	1.9245299412482867E-5	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999934710680527	WITHOUT_CLASSIFICATION	6.528931947226976E-6	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999934710680527	WITHOUT_CLASSIFICATION	6.528931947226976E-6	DEFECT
// CASE 2 : Comparing to another TimePeriod object // -----------------------------------------------	WITHOUT_CLASSIFICATION	0.9999697302571728	WITHOUT_CLASSIFICATION	3.0269742827235935E-5	DEFECT
// CASE 3 : Comparing to a non-TimePeriod object // ---------------------------------------------	WITHOUT_CLASSIFICATION	0.9999495395679789	WITHOUT_CLASSIFICATION	5.046043202104536E-5	DEFECT
// CASE 3 : Comparing to a non-TimePeriod object // ---------------------------------------------	WITHOUT_CLASSIFICATION	0.9999495395679789	WITHOUT_CLASSIFICATION	5.046043202104536E-5	DEFECT
// CASE 3 : Comparing to a non-TimePeriod object // ---------------------------------------------	WITHOUT_CLASSIFICATION	0.9999495395679789	WITHOUT_CLASSIFICATION	5.046043202104536E-5	DEFECT
// consider time periods to be ordered after general objects	WITHOUT_CLASSIFICATION	0.9999981809562206	WITHOUT_CLASSIFICATION	1.8190437793071947E-6	DEFECT
// consider time periods to be ordered after general objects	WITHOUT_CLASSIFICATION	0.9999981809562206	WITHOUT_CLASSIFICATION	1.8190437793071947E-6	DEFECT
// consider time periods to be ordered after general objects	WITHOUT_CLASSIFICATION	0.9999981809562206	WITHOUT_CLASSIFICATION	1.8190437793071947E-6	DEFECT
// consider time periods to be ordered after general objects	WITHOUT_CLASSIFICATION	0.9999981809562206	WITHOUT_CLASSIFICATION	1.8190437793071947E-6	DEFECT
// consider time periods to be ordered after general objects	WITHOUT_CLASSIFICATION	0.9999981809562206	WITHOUT_CLASSIFICATION	1.8190437793071947E-6	DEFECT
// more difficult case - evaluate later...	WITHOUT_CLASSIFICATION	0.9999932485856098	WITHOUT_CLASSIFICATION	6.751414390197069E-6	DEFECT
// more difficult case - evaluate later...	WITHOUT_CLASSIFICATION	0.9999932485856098	WITHOUT_CLASSIFICATION	6.751414390197069E-6	DEFECT
// more difficult case - evaluate later...	WITHOUT_CLASSIFICATION	0.9999932485856098	WITHOUT_CLASSIFICATION	6.751414390197069E-6	DEFECT
// more difficult case - evaluate later...	WITHOUT_CLASSIFICATION	0.9999932485856098	WITHOUT_CLASSIFICATION	6.751414390197069E-6	DEFECT
// won't get here...	WITHOUT_CLASSIFICATION	0.9999810086578738	WITHOUT_CLASSIFICATION	1.8991342126252108E-5	DEFECT
// check an empty dataset	WITHOUT_CLASSIFICATION	0.9999955199593095	WITHOUT_CLASSIFICATION	4.480040690500415E-6	DEFECT
// sometimes the last few days of the year are considered to fall in // the *first* week of the following year.  Refer to the Javadocs for // GregorianCalendar.	WITHOUT_CLASSIFICATION	0.999989530380635	WITHOUT_CLASSIFICATION	1.046961936511316E-5	DEFECT
// CASE 1 : Comparing to another Week object // --------------------------------------------	WITHOUT_CLASSIFICATION	0.9999561824072556	WITHOUT_CLASSIFICATION	4.3817592744439175E-5	DEFECT
// trim whitespace from either end of the string	WITHOUT_CLASSIFICATION	0.9999994650992923	WITHOUT_CLASSIFICATION	5.34900707729044E-7	DEFECT
// trim whitespace from either end of the string	WITHOUT_CLASSIFICATION	0.9999994650992923	WITHOUT_CLASSIFICATION	5.34900707729044E-7	DEFECT
// suppress	WITHOUT_CLASSIFICATION	0.9999995461886274	WITHOUT_CLASSIFICATION	4.538113725066876E-7	DEFECT
// suppress	WITHOUT_CLASSIFICATION	0.9999995461886274	WITHOUT_CLASSIFICATION	4.538113725066876E-7	DEFECT
// suppress	WITHOUT_CLASSIFICATION	0.9999995461886274	WITHOUT_CLASSIFICATION	4.538113725066876E-7	DEFECT
// CASE 1 : Comparing to another Month object // --------------------------------------------	WITHOUT_CLASSIFICATION	0.9999719265666324	WITHOUT_CLASSIFICATION	2.8073433367697915E-5	DEFECT
// if there is no separator, we assume the first four characters // are YYYY	WITHOUT_CLASSIFICATION	0.9999999900590807	WITHOUT_CLASSIFICATION	9.940919298684096E-9	DEFECT
// now it is trickier to determine if the month or year is first	WITHOUT_CLASSIFICATION	0.9999971141886088	WITHOUT_CLASSIFICATION	2.885811391138685E-6	DEFECT
// --- DEPRECATED METHODS -------------------------------------------------	WITHOUT_CLASSIFICATION	0.999949734096389	WITHOUT_CLASSIFICATION	5.026590361103258E-5	DEFECT
// CASE 1 : Comparing to another TimeSeriesDataItem object // -------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999837013877848	WITHOUT_CLASSIFICATION	1.6298612215146605E-5	DEFECT
//private Comparable key;	WITHOUT_CLASSIFICATION	0.9999732731418578	WITHOUT_CLASSIFICATION	2.672685814217375E-5	DEFECT
//this.key = null;	WITHOUT_CLASSIFICATION	0.9999370285149616	WITHOUT_CLASSIFICATION	6.297148503837668E-5	DEFECT
// no attributes to read	WITHOUT_CLASSIFICATION	0.9999984705031078	WITHOUT_CLASSIFICATION	1.529496892211898E-6	DEFECT
//axisOffset;	WITHOUT_CLASSIFICATION	0.9999791623799903	WITHOUT_CLASSIFICATION	2.0837620009761245E-5	DEFECT
// check arguments...	WITHOUT_CLASSIFICATION	0.9999994922736003	WITHOUT_CLASSIFICATION	5.077263997549239E-7	DEFECT
// fetch the series, remove the change listener, then remove the series.	WITHOUT_CLASSIFICATION	0.9999996963897045	WITHOUT_CLASSIFICATION	3.036102954067122E-7	DEFECT
// remove all the series from the collection and notify listeners.	WITHOUT_CLASSIFICATION	0.9999978435566433	WITHOUT_CLASSIFICATION	2.1564433566238567E-6	DEFECT
// if it is not the series name, then we have no interest	WITHOUT_CLASSIFICATION	0.9999950717242009	WITHOUT_CLASSIFICATION	4.928275799141766E-6	DEFECT
// check if the new series name already exists for another series	WITHOUT_CLASSIFICATION	0.999999918895823	WITHOUT_CLASSIFICATION	8.110417698862716E-8	DEFECT
// Remove all the series from the collection and notify listeners.	WITHOUT_CLASSIFICATION	0.9999984462844583	WITHOUT_CLASSIFICATION	1.553715541693334E-6	DEFECT
// XYDataset only provides methods for reading a dataset...	WITHOUT_CLASSIFICATION	0.9999806589123814	WITHOUT_CLASSIFICATION	1.934108761855637E-5	DEFECT
// check arguments...delegated	WITHOUT_CLASSIFICATION	0.9999999224103041	WITHOUT_CLASSIFICATION	7.75896958572594E-8	DEFECT
// check arguments...delegated	WITHOUT_CLASSIFICATION	0.9999999224103041	WITHOUT_CLASSIFICATION	7.75896958572594E-8	DEFECT
// Remove all the series from the collection and notify listeners.	WITHOUT_CLASSIFICATION	0.9999984462844583	WITHOUT_CLASSIFICATION	1.553715541693334E-6	DEFECT
// Unregister the collection as a change listener to each series in // the collection.	WITHOUT_CLASSIFICATION	0.9999991366728952	WITHOUT_CLASSIFICATION	8.633271047606161E-7	DEFECT
// check an empty dataset	WITHOUT_CLASSIFICATION	0.9999955199593095	WITHOUT_CLASSIFICATION	4.480040690500415E-6	DEFECT
// add a new series	WITHOUT_CLASSIFICATION	0.999999443070171	WITHOUT_CLASSIFICATION	5.569298289348297E-7	DEFECT
// need to configure the intervalDelegate to match the original	WITHOUT_CLASSIFICATION	0.9999999943467035	WITHOUT_CLASSIFICATION	5.653296512055173E-9	DEFECT
// check an empty dataset	WITHOUT_CLASSIFICATION	0.9999955199593095	WITHOUT_CLASSIFICATION	4.480040690500415E-6	DEFECT
// we can't be sure of the order	WITHOUT_CLASSIFICATION	0.9999987834229316	WITHOUT_CLASSIFICATION	1.2165770684709473E-6	DEFECT
// replace an existing series	WITHOUT_CLASSIFICATION	0.9999982415492452	WITHOUT_CLASSIFICATION	1.7584507547553195E-6	DEFECT
// check an empty dataset	WITHOUT_CLASSIFICATION	0.9999955199593095	WITHOUT_CLASSIFICATION	4.480040690500415E-6	DEFECT
// either autoWidth is off or autoIntervalWidth was not set.	WITHOUT_CLASSIFICATION	0.9999999491782812	WITHOUT_CLASSIFICATION	5.082171888816165E-8	DEFECT
// check an empty dataset	WITHOUT_CLASSIFICATION	0.9999955199593095	WITHOUT_CLASSIFICATION	4.480040690500415E-6	DEFECT
// check an empty dataset	WITHOUT_CLASSIFICATION	0.9999955199593095	WITHOUT_CLASSIFICATION	4.480040690500415E-6	DEFECT
// check an empty dataset	WITHOUT_CLASSIFICATION	0.9999955199593095	WITHOUT_CLASSIFICATION	4.480040690500415E-6	DEFECT
// argument checking delegated...	WITHOUT_CLASSIFICATION	0.9999997922706068	WITHOUT_CLASSIFICATION	2.077293932781037E-7	DEFECT
// argument checking delegated...	WITHOUT_CLASSIFICATION	0.9999997922706068	WITHOUT_CLASSIFICATION	2.077293932781037E-7	DEFECT
// delegate argument checking to XYDataItem...	WITHOUT_CLASSIFICATION	0.9999993090282735	WITHOUT_CLASSIFICATION	6.909717265223291E-7	DEFECT
// need to make sure we are adding *after* any duplicates	WITHOUT_CLASSIFICATION	0.9999998054991429	WITHOUT_CLASSIFICATION	1.945008570437754E-7	DEFECT
// can't allow duplicate values, so we need to check whether // there is an item with the given x-value already	WITHOUT_CLASSIFICATION	0.9999993848236971	WITHOUT_CLASSIFICATION	6.151763029165108E-7	DEFECT
// CASE 2 : Comparing to a general object // ---------------------------------------------	WITHOUT_CLASSIFICATION	0.999953761370464	WITHOUT_CLASSIFICATION	4.623862953600188E-5	DEFECT
// check arguments...	WITHOUT_CLASSIFICATION	0.9999994922736003	WITHOUT_CLASSIFICATION	5.077263997549239E-7	DEFECT
// consider time periods to be ordered after general objects	WITHOUT_CLASSIFICATION	0.9999981809562206	WITHOUT_CLASSIFICATION	1.8190437793071947E-6	DEFECT
// won't get here...	WITHOUT_CLASSIFICATION	0.9999810086578738	WITHOUT_CLASSIFICATION	1.8991342126252108E-5	DEFECT
// check if this addition will exceed the maximum item count...	WITHOUT_CLASSIFICATION	0.999998637280558	WITHOUT_CLASSIFICATION	1.3627194419263794E-6	DEFECT
// to be defensive, let's check that the source series does in fact // belong to this collection	WITHOUT_CLASSIFICATION	0.9999933359055384	WITHOUT_CLASSIFICATION	6.664094461645011E-6	DEFECT
// Unregister the collection as a change listener to each series in // the collection.	WITHOUT_CLASSIFICATION	0.9999991366728952	WITHOUT_CLASSIFICATION	8.633271047606161E-7	DEFECT
// Unregister the collection as a change listener to each series in // the collection.	WITHOUT_CLASSIFICATION	0.9999991366728952	WITHOUT_CLASSIFICATION	8.633271047606161E-7	DEFECT
// Remove all the series from the collection and notify listeners.	WITHOUT_CLASSIFICATION	0.9999984462844583	WITHOUT_CLASSIFICATION	1.553715541693334E-6	DEFECT
// need to configure the intervalDelegate to match the original	WITHOUT_CLASSIFICATION	0.9999999943467035	WITHOUT_CLASSIFICATION	5.653296512055173E-9	DEFECT
// add a new series	WITHOUT_CLASSIFICATION	0.999999443070171	WITHOUT_CLASSIFICATION	5.569298289348297E-7	DEFECT
// add a new series	WITHOUT_CLASSIFICATION	0.999999443070171	WITHOUT_CLASSIFICATION	5.569298289348297E-7	DEFECT
// replace an existing series	WITHOUT_CLASSIFICATION	0.9999982415492452	WITHOUT_CLASSIFICATION	1.7584507547553195E-6	DEFECT
// replace an existing series	WITHOUT_CLASSIFICATION	0.9999982415492452	WITHOUT_CLASSIFICATION	1.7584507547553195E-6	DEFECT
// null is ignored	WITHOUT_CLASSIFICATION	0.9999977550236172	WITHOUT_CLASSIFICATION	2.244976382715561E-6	DEFECT
// everything is fine: autoWidth is on, and an autoIntervalWidth // was set.	WITHOUT_CLASSIFICATION	0.9999937300429821	WITHOUT_CLASSIFICATION	6.269957017890061E-6	DEFECT
// first get the range without the interval, then expand it for the // interval width	WITHOUT_CLASSIFICATION	0.9999999141778297	WITHOUT_CLASSIFICATION	8.582217024367148E-8	DEFECT
// all series have the same number of items in // this dataset	WITHOUT_CLASSIFICATION	0.9999977231328377	WITHOUT_CLASSIFICATION	2.2768671622349566E-6	DEFECT
// this.x is not allowed to be null...	WITHOUT_CLASSIFICATION	0.999848680543959	WITHOUT_CLASSIFICATION	1.5131945604097662E-4	DEFECT
// CASE 1 : Comparing to another TimeSeriesDataPair object // -------------------------------------------------------	WITHOUT_CLASSIFICATION	0.999978748918817	WITHOUT_CLASSIFICATION	2.1251081183034403E-5	DEFECT
// In version 0.9.12, in response to several developer requests, I changed // the 'data' attribute from 'private' to 'protected', so that others can // make subclasses that work directly with the underlying data structure.	WITHOUT_CLASSIFICATION	0.9999803866371649	WITHOUT_CLASSIFICATION	1.961336283508887E-5	DEFECT
// figure out if we need to iterate through all the y-values	WITHOUT_CLASSIFICATION	0.9999999030201029	WITHOUT_CLASSIFICATION	9.697989706883175E-8	DEFECT
// figure out if we need to iterate through all the y-values	WITHOUT_CLASSIFICATION	0.9999999030201029	WITHOUT_CLASSIFICATION	9.697989706883175E-8	DEFECT
// if we get to here, we know that duplicate X values are not permitted	WITHOUT_CLASSIFICATION	0.9999711323594751	WITHOUT_CLASSIFICATION	2.8867640524939152E-5	DEFECT
/*         * we assum super is always initialized to all-zero matrix, so the         * total sum should be 0 upon initialization. However, we set it to         * Double.MIN_VALUE to get the same effect and yet avoid division by 0         * upon initialization.         */	WITHOUT_CLASSIFICATION	0.9999963653833319	WITHOUT_CLASSIFICATION	3.634616668102335E-6	DEFECT
// add the series...	WITHOUT_CLASSIFICATION	0.9999993119231096	WITHOUT_CLASSIFICATION	6.880768904233123E-7	DEFECT
// try a class that isn't a listener	WITHOUT_CLASSIFICATION	0.9999428060682094	WITHOUT_CLASSIFICATION	5.719393179066844E-5	DEFECT
// set up popup menu...	WITHOUT_CLASSIFICATION	0.9999989571016311	WITHOUT_CLASSIFICATION	1.0428983688414972E-6	DEFECT
// stop listening for changes to the existing chart	WITHOUT_CLASSIFICATION	0.9999999741993797	WITHOUT_CLASSIFICATION	2.58006202363753E-8	DEFECT
// add the new chart	WITHOUT_CLASSIFICATION	0.9999997187960089	WITHOUT_CLASSIFICATION	2.8120399108390203E-7	DEFECT
// work out if scaling is required...	WITHOUT_CLASSIFICATION	0.9999631306951998	WITHOUT_CLASSIFICATION	3.686930480021897E-5	DEFECT
// are we using the chart buffer?	WITHOUT_CLASSIFICATION	0.9999945861220046	WITHOUT_CLASSIFICATION	5.413877995335748E-6	DEFECT
// does nothing - override if necessary	WITHOUT_CLASSIFICATION	0.999995443911809	WITHOUT_CLASSIFICATION	4.556088191151329E-6	DEFECT
// selected rectangle shouldn't extend outside the data area...	WITHOUT_CLASSIFICATION	0.9999998626473925	WITHOUT_CLASSIFICATION	1.3735260757968476E-7	DEFECT
// we need to guard against this.zoomPoint being null	WITHOUT_CLASSIFICATION	0.9999965117433239	WITHOUT_CLASSIFICATION	3.4882566759953105E-6	DEFECT
// we need to guard against this.zoomPoint being null	WITHOUT_CLASSIFICATION	0.9999965117433239	WITHOUT_CLASSIFICATION	3.4882566759953105E-6	DEFECT
// force a redraw	WITHOUT_CLASSIFICATION	0.999998270614804	WITHOUT_CLASSIFICATION	1.7293851961578696E-6	DEFECT
// it is too slow to look at every data item, so let's just look at // the first, middle and last items...	WITHOUT_CLASSIFICATION	0.9999995690949045	WITHOUT_CLASSIFICATION	4.3090509550728425E-7	DEFECT
// fetch the series, remove the change listener, then remove the series.	WITHOUT_CLASSIFICATION	0.9999996963897045	WITHOUT_CLASSIFICATION	3.036102954067122E-7	DEFECT
// Unregister the collection as a change listener to each series in // the collection.	WITHOUT_CLASSIFICATION	0.9999991366728952	WITHOUT_CLASSIFICATION	8.633271047606161E-7	DEFECT
// Unregister the collection as a change listener to each series in // the collection.	WITHOUT_CLASSIFICATION	0.9999991366728952	WITHOUT_CLASSIFICATION	8.633271047606161E-7	DEFECT
// check that minItem limit is observed	WITHOUT_CLASSIFICATION	0.9999992406679012	WITHOUT_CLASSIFICATION	7.593320987839536E-7	DEFECT
//assert itemIndex >= 0 && itemIndex < getItemCount();	WITHOUT_CLASSIFICATION	0.999998837405389	WITHOUT_CLASSIFICATION	1.1625946110133223E-6	DEFECT
//assert itemIndex >= 0 && itemIndex < getItemCount();	WITHOUT_CLASSIFICATION	0.999998837405389	WITHOUT_CLASSIFICATION	1.1625946110133223E-6	DEFECT
//TODO private boolean fillZoomRectangle = true;	WITHOUT_CLASSIFICATION	0.997372179487471	WITHOUT_CLASSIFICATION	0.0026278205125288942	DEFECT
// create the canvas and add the required listeners	WITHOUT_CLASSIFICATION	0.9999992866493207	WITHOUT_CLASSIFICATION	7.13350679363143E-7	DEFECT
//ChartEditorManager.getChartEditor(canvas.getDisplay(), this.chart);	WITHOUT_CLASSIFICATION	0.999995875207822	WITHOUT_CLASSIFICATION	4.1247921781258616E-6	DEFECT
/* in the next zoomPoint.x and y replace by e.x and y for now.         * this helps to handle the mouse events and besides,         * those values are unused AFAIK. */	WITHOUT_CLASSIFICATION	0.9999996236335646	WITHOUT_CLASSIFICATION	3.763664352899817E-7	DEFECT
// do nothing, override if necessary	WITHOUT_CLASSIFICATION	0.999999629454852	WITHOUT_CLASSIFICATION	3.7054514802968265E-7	DEFECT
// new entity code	WITHOUT_CLASSIFICATION	0.9999984984532444	WITHOUT_CLASSIFICATION	1.501546755584922E-6	DEFECT
// new entity code	WITHOUT_CLASSIFICATION	0.9999984984532444	WITHOUT_CLASSIFICATION	1.501546755584922E-6	DEFECT
// pass mouse down event if some ChartMouseListener are listening	WITHOUT_CLASSIFICATION	0.9999989197013678	WITHOUT_CLASSIFICATION	1.080298632300485E-6	DEFECT
// if the box has been drawn backwards, restore the auto bounds	WITHOUT_CLASSIFICATION	0.9999998723562885	WITHOUT_CLASSIFICATION	1.276437115475569E-7	DEFECT
// handle axis trace	WITHOUT_CLASSIFICATION	0.9999986166761557	WITHOUT_CLASSIFICATION	1.3833238442802585E-6	DEFECT
// handle tool tips in a simple way	WITHOUT_CLASSIFICATION	0.999996306973426	WITHOUT_CLASSIFICATION	3.6930265740072236E-6	DEFECT
// handle zoom box	WITHOUT_CLASSIFICATION	0.999997932211778	WITHOUT_CLASSIFICATION	2.0677882219552264E-6	DEFECT
// skip if chart is null	WITHOUT_CLASSIFICATION	0.9999993516802641	WITHOUT_CLASSIFICATION	6.483197358667801E-7	DEFECT
//axisLabelPaint;	WITHOUT_CLASSIFICATION	0.9999966447600631	WITHOUT_CLASSIFICATION	3.3552399369393304E-6	DEFECT
// get the origin of the zoom selection in the Java2D space used for // drawing the chart (that is, before any scaling to fit the panel)	WITHOUT_CLASSIFICATION	0.999999999256339	WITHOUT_CLASSIFICATION	7.436609279550849E-10	DEFECT
// go through each zoom menu item and decide whether or not to // enable it...	WITHOUT_CLASSIFICATION	0.9999999952822989	WITHOUT_CLASSIFICATION	4.7177011488647545E-9	DEFECT
// create the chart...	WITHOUT_CLASSIFICATION	0.9999998935442438	WITHOUT_CLASSIFICATION	1.0645575630845078E-7	DEFECT
// title // x-axis label // y-axis label // data // create legend? // generate tooltips? // generate URLs?	WITHOUT_CLASSIFICATION	0.9999965501663644	WITHOUT_CLASSIFICATION	3.449833635740923E-6	DEFECT
// check that minItem limit is observed	WITHOUT_CLASSIFICATION	0.9999992406679012	WITHOUT_CLASSIFICATION	7.593320987839536E-7	DEFECT
//SwtGraphics2D sg2 = new SwtGraphics2D(e.gc);	WITHOUT_CLASSIFICATION	0.9999985217642638	WITHOUT_CLASSIFICATION	1.4782357361842757E-6	DEFECT
// do we need to fill the buffer?	WITHOUT_CLASSIFICATION	0.9999320525572022	WITHOUT_CLASSIFICATION	6.794744279782043E-5	DEFECT
// Performs the actual drawing here ...	WITHOUT_CLASSIFICATION	0.9999886389022912	WITHOUT_CLASSIFICATION	1.1361097708800413E-5	DEFECT
// anti-aliasing	WITHOUT_CLASSIFICATION	0.9999990015665925	WITHOUT_CLASSIFICATION	9.984334074408307E-7	DEFECT
// zap the buffer onto the canvas...	WITHOUT_CLASSIFICATION	0.9999997077928933	WITHOUT_CLASSIFICATION	2.922071067677717E-7	DEFECT
// or redrawing the chart every time...	WITHOUT_CLASSIFICATION	0.9999994749183201	WITHOUT_CLASSIFICATION	5.25081679926384E-7	DEFECT
// de-register the composite as a listener for the chart.	WITHOUT_CLASSIFICATION	0.9999998566754055	WITHOUT_CLASSIFICATION	1.4332459449713722E-7	DEFECT
// AXIS 2	WITHOUT_CLASSIFICATION	0.9999818921974647	WITHOUT_CLASSIFICATION	1.8107802535268927E-5	DEFECT
// AXIS 3	WITHOUT_CLASSIFICATION	0.9999786915767002	WITHOUT_CLASSIFICATION	2.130842329981991E-5	DEFECT
//axis3.setPositiveArrowVisible(true);	WITHOUT_CLASSIFICATION	0.9999394188699583	WITHOUT_CLASSIFICATION	6.058113004167823E-5	DEFECT
// AXIS 4	WITHOUT_CLASSIFICATION	0.9999783089635663	WITHOUT_CLASSIFICATION	2.1691036433640836E-5	DEFECT
// column keys...	WITHOUT_CLASSIFICATION	0.999998773095303	WITHOUT_CLASSIFICATION	1.2269046968527434E-6	DEFECT
// create the dataset...	WITHOUT_CLASSIFICATION	0.9999998689267972	WITHOUT_CLASSIFICATION	1.3107320274918298E-7	DEFECT
// NOW DO SOME OPTIONAL CUSTOMISATION OF THE CHART...	WITHOUT_CLASSIFICATION	0.9995000135747996	WITHOUT_CLASSIFICATION	4.999864252004975E-4	DEFECT
// get a reference to the plot for further customisation...	WITHOUT_CLASSIFICATION	0.9999999036937198	WITHOUT_CLASSIFICATION	9.630628017784927E-8	DEFECT
// set the range axis to display integers only...	WITHOUT_CLASSIFICATION	0.99999733682458	WITHOUT_CLASSIFICATION	2.6631754200652685E-6	DEFECT
// disable bar outlines...	WITHOUT_CLASSIFICATION	0.9999987804891722	WITHOUT_CLASSIFICATION	1.2195108277439354E-6	DEFECT
// OPTIONAL CUSTOMISATION COMPLETED.	WITHOUT_CLASSIFICATION	0.9999840575555572	WITHOUT_CLASSIFICATION	1.594244444278351E-5	DEFECT
// chart title // data // include legend	WITHOUT_CLASSIFICATION	0.9999977645766724	WITHOUT_CLASSIFICATION	2.2354233275933883E-6	DEFECT
//frame.setDisplayToolTips(false);	WITHOUT_CLASSIFICATION	0.9999845241819524	WITHOUT_CLASSIFICATION	1.5475818047531993E-5	DEFECT
// row 1: antialiasing	WITHOUT_CLASSIFICATION	0.999983671524143	WITHOUT_CLASSIFICATION	1.632847585689647E-5	DEFECT
//row 2: background paint for the chart	WITHOUT_CLASSIFICATION	0.9999990852184906	WITHOUT_CLASSIFICATION	9.147815094689955E-7	DEFECT
// row 1	WITHOUT_CLASSIFICATION	0.9999883282597016	WITHOUT_CLASSIFICATION	1.1671740298304206E-5	DEFECT
//empty cell // row 2	WITHOUT_CLASSIFICATION	0.9999882615562014	WITHOUT_CLASSIFICATION	1.1738443798617803E-5	DEFECT
// Create the color-change dialog	WITHOUT_CLASSIFICATION	0.9999994200943917	WITHOUT_CLASSIFICATION	5.799056083088646E-7	DEFECT
// Dispose of any fonts we have created	WITHOUT_CLASSIFICATION	0.999998308285304	WITHOUT_CLASSIFICATION	1.691714696030528E-6	DEFECT
// build second tab	WITHOUT_CLASSIFICATION	0.9999997732360765	WITHOUT_CLASSIFICATION	2.2676392348604849E-7	DEFECT
// don't need to do anything	WITHOUT_CLASSIFICATION	0.9997913802963144	WITHOUT_CLASSIFICATION	2.0861970368553224E-4	DEFECT
// set the plot properties...	WITHOUT_CLASSIFICATION	0.9999994506377871	WITHOUT_CLASSIFICATION	5.493622129511803E-7	DEFECT
// row 1	WITHOUT_CLASSIFICATION	0.9999883282597016	WITHOUT_CLASSIFICATION	1.1671740298304206E-5	DEFECT
// Create the color-change dialog	WITHOUT_CLASSIFICATION	0.9999994200943917	WITHOUT_CLASSIFICATION	5.799056083088646E-7	DEFECT
// Create the color-change dialog	WITHOUT_CLASSIFICATION	0.9999994200943917	WITHOUT_CLASSIFICATION	5.799056083088646E-7	DEFECT
// Dispose of any fonts we have created	WITHOUT_CLASSIFICATION	0.999998308285304	WITHOUT_CLASSIFICATION	1.691714696030528E-6	DEFECT
// check a regular value	WITHOUT_CLASSIFICATION	0.9999959285423113	WITHOUT_CLASSIFICATION	4.0714576886895786E-6	DEFECT
// Create the new font and set it into the title // label	WITHOUT_CLASSIFICATION	0.9999998962892115	WITHOUT_CLASSIFICATION	1.0371078849753234E-7	DEFECT
// Create the new font and set it into the title // label	WITHOUT_CLASSIFICATION	0.9999998962892115	WITHOUT_CLASSIFICATION	1.0371078849753234E-7	DEFECT
//label.setFont(font);	WITHOUT_CLASSIFICATION	0.9999844850356736	WITHOUT_CLASSIFICATION	1.551496432634257E-5	DEFECT
// row 3	WITHOUT_CLASSIFICATION	0.9999891857429347	WITHOUT_CLASSIFICATION	1.0814257065262841E-5	DEFECT
// row 3	WITHOUT_CLASSIFICATION	0.9999891857429347	WITHOUT_CLASSIFICATION	1.0814257065262841E-5	DEFECT
// Use a colored text field to show the color	WITHOUT_CLASSIFICATION	0.9999985908745769	WITHOUT_CLASSIFICATION	1.40912542322041E-6	DEFECT
//tickLabelFontField.setFont(SwtUtils.toSwtFontData(getDisplay(), // axis.getTickLabelFont()));	WITHOUT_CLASSIFICATION	0.9999995429538198	WITHOUT_CLASSIFICATION	4.5704618032060535E-7	DEFECT
// Create the font-change dialog	WITHOUT_CLASSIFICATION	0.9999993789611421	WITHOUT_CLASSIFICATION	6.210388579208836E-7	DEFECT
// Create the font-change dialog	WITHOUT_CLASSIFICATION	0.9999993789611421	WITHOUT_CLASSIFICATION	6.210388579208836E-7	DEFECT
//tickLabelFontField.setFont(font);	WITHOUT_CLASSIFICATION	0.9999947239819176	WITHOUT_CLASSIFICATION	5.276018082447905E-6	DEFECT
// return the appropriate axis editor	WITHOUT_CLASSIFICATION	0.9999965282226532	WITHOUT_CLASSIFICATION	3.47177734672415E-6	DEFECT
//this.minimumRangeValue.addModifyListener(this); //this.minimumRangeValue.addVerifyListener(this);	WITHOUT_CLASSIFICATION	0.9999682949215641	WITHOUT_CLASSIFICATION	3.170507843587124E-5	DEFECT
//this.maximumRangeValue.addModifyListener(this); //this.maximumRangeValue.addVerifyListener(this);	WITHOUT_CLASSIFICATION	0.99996218822802	WITHOUT_CLASSIFICATION	3.781177198002576E-5	DEFECT
// verify min value	WITHOUT_CLASSIFICATION	0.9999923210992862	WITHOUT_CLASSIFICATION	7.678900713930244E-6	DEFECT
// verify max value	WITHOUT_CLASSIFICATION	0.9999911794222704	WITHOUT_CLASSIFICATION	8.82057772953085E-6	DEFECT
//deal with domain axis	WITHOUT_CLASSIFICATION	0.9999781724082741	WITHOUT_CLASSIFICATION	2.182759172591703E-5	DEFECT
//deal with range axis	WITHOUT_CLASSIFICATION	0.9999894424617851	WITHOUT_CLASSIFICATION	1.0557538214856103E-5	DEFECT
//deal with plot appearance	WITHOUT_CLASSIFICATION	0.9999367509810492	WITHOUT_CLASSIFICATION	6.324901895085215E-5	DEFECT
// set the axis properties	WITHOUT_CLASSIFICATION	0.9999985091364977	WITHOUT_CLASSIFICATION	1.4908635023672787E-6	DEFECT
// row 1: stroke	WITHOUT_CLASSIFICATION	0.9999835096081339	WITHOUT_CLASSIFICATION	1.6490391866044696E-5	DEFECT
// row 3: background paint	WITHOUT_CLASSIFICATION	0.9999923834366448	WITHOUT_CLASSIFICATION	7.616563355274952E-6	DEFECT
// row 4: orientation	WITHOUT_CLASSIFICATION	0.9999355086853404	WITHOUT_CLASSIFICATION	6.449131465958413E-5	DEFECT
// row 2	WITHOUT_CLASSIFICATION	0.9999908092573085	WITHOUT_CLASSIFICATION	9.19074269148479E-6	DEFECT
//titleField.setFont(font);	WITHOUT_CLASSIFICATION	0.9999769191952067	WITHOUT_CLASSIFICATION	2.3080804793323152E-5	DEFECT
// row 4	WITHOUT_CLASSIFICATION	0.9999889850131457	WITHOUT_CLASSIFICATION	1.101498685424887E-5	DEFECT
// build first tab	WITHOUT_CLASSIFICATION	0.999998936070771	WITHOUT_CLASSIFICATION	1.0639292290833922E-6	DEFECT
// we can't do anything	WITHOUT_CLASSIFICATION	0.9996238443423211	WITHOUT_CLASSIFICATION	3.761556576787927E-4	DEFECT
// backgroundImage	WITHOUT_CLASSIFICATION	0.9999985365574862	WITHOUT_CLASSIFICATION	1.46344251377951E-6	DEFECT
// row keys...	WITHOUT_CLASSIFICATION	0.9999929907955389	WITHOUT_CLASSIFICATION	7.009204461102933E-6	DEFECT
// column keys...	WITHOUT_CLASSIFICATION	0.999998773095303	WITHOUT_CLASSIFICATION	1.2269046968527434E-6	DEFECT
// since this is only used by clearRect(), we don't update the GC yet	WITHOUT_CLASSIFICATION	0.9999976222798944	WITHOUT_CLASSIFICATION	2.377720105631589E-6	DEFECT
// build the third tab	WITHOUT_CLASSIFICATION	0.9999957152970529	WITHOUT_CLASSIFICATION	4.284702947119719E-6	DEFECT
// ok and cancel buttons	WITHOUT_CLASSIFICATION	0.9999990086588867	WITHOUT_CLASSIFICATION	9.913411133027072E-7	DEFECT
// to be consistent with other Graphics2D implementations	WITHOUT_CLASSIFICATION	0.9999995421581265	WITHOUT_CLASSIFICATION	4.578418734816727E-7	DEFECT
// padding	WITHOUT_CLASSIFICATION	0.9999861838533883	WITHOUT_CLASSIFICATION	1.3816146611710348E-5	DEFECT
// apply dash style if any	WITHOUT_CLASSIFICATION	0.9999944440173114	WITHOUT_CLASSIFICATION	5.555982688561501E-6	DEFECT
// handle transparency and compositing.	WITHOUT_CLASSIFICATION	0.999999444046387	WITHOUT_CLASSIFICATION	5.559536130856944E-7	DEFECT
// we can't use the following valueOf() method, because it // won't compile with JDK1.4 // this.colorsPool.get(Integer.valueOf(awtColor.getRGB()));	WITHOUT_CLASSIFICATION	0.9919911037674579	WITHOUT_CLASSIFICATION	0.008008896232542112	DEFECT
// set the line style to solid by default	WITHOUT_CLASSIFICATION	0.9999997163623978	WITHOUT_CLASSIFICATION	2.836376022112384E-7	DEFECT
// retrieve the swt font description in an os indept way	WITHOUT_CLASSIFICATION	0.9999956188498065	WITHOUT_CLASSIFICATION	4.3811501935676685E-6	DEFECT
// Note that for consistency with the AWT implementation, it is // necessary to switch temporarily the foreground and background // colours	WITHOUT_CLASSIFICATION	0.9999999370103342	WITHOUT_CLASSIFICATION	6.298966578355877E-8	DEFECT
// for now we simply want to extract the chars from the iterator // and call an unstyled text renderer	WITHOUT_CLASSIFICATION	0.9999999815215795	WITHOUT_CLASSIFICATION	1.847842042380311E-8	DEFECT
// create a new awt font with the appropiate data	WITHOUT_CLASSIFICATION	0.9999988087625	WITHOUT_CLASSIFICATION	1.1912374999988826E-6	DEFECT
// we dispose resources we own but user must dispose gc	WITHOUT_CLASSIFICATION	0.9999988082502576	WITHOUT_CLASSIFICATION	1.1917497424547108E-6	DEFECT
// see comment above //this.colorsPool.put(Integer.valueOf(awtColor.getRGB()), swtColor);	WITHOUT_CLASSIFICATION	0.9999720978419246	WITHOUT_CLASSIFICATION	2.790215807542017E-5	DEFECT
// SWT and AWT share the same style constants.	WITHOUT_CLASSIFICATION	0.9999970857090988	WITHOUT_CLASSIFICATION	2.9142909011347504E-6	DEFECT
// convert the font size (in pt for awt) to height in pixels for swt	WITHOUT_CLASSIFICATION	0.9999987046749363	WITHOUT_CLASSIFICATION	1.295325063733115E-6	DEFECT
//this.myColor = new Color(getDisplay(), color.getRGB());	WITHOUT_CLASSIFICATION	0.9999966881198503	WITHOUT_CLASSIFICATION	3.3118801497549366E-6	DEFECT
// renderingHints	WITHOUT_CLASSIFICATION	0.9999966289937514	WITHOUT_CLASSIFICATION	3.371006248511192E-6	DEFECT
// borderStroke	WITHOUT_CLASSIFICATION	0.9999897021240819	WITHOUT_CLASSIFICATION	1.0297875918170662E-5	DEFECT
// borderVisible	WITHOUT_CLASSIFICATION	0.9999949536317366	WITHOUT_CLASSIFICATION	5.046368263425145E-6	DEFECT
// borderPaint	WITHOUT_CLASSIFICATION	0.9999977307489966	WITHOUT_CLASSIFICATION	2.2692510033865247E-6	DEFECT
// title	WITHOUT_CLASSIFICATION	0.9999885305609236	WITHOUT_CLASSIFICATION	1.1469439076396005E-5	DEFECT
// subtitles	WITHOUT_CLASSIFICATION	0.9999990563974961	WITHOUT_CLASSIFICATION	9.436025039161221E-7	DEFECT
// plot	WITHOUT_CLASSIFICATION	0.9999956590184641	WITHOUT_CLASSIFICATION	4.340981535884936E-6	DEFECT
// backgroundPaint	WITHOUT_CLASSIFICATION	0.999999148613729	WITHOUT_CLASSIFICATION	8.513862710123147E-7	DEFECT
// backgroundImageAlignment	WITHOUT_CLASSIFICATION	0.9999979297933438	WITHOUT_CLASSIFICATION	2.0702066561616542E-6	DEFECT
// backgroundImageAlpha	WITHOUT_CLASSIFICATION	0.9999977602619979	WITHOUT_CLASSIFICATION	2.2397380020570717E-6	DEFECT
// no event is generated if the dataset is already empty	WITHOUT_CLASSIFICATION	0.9999998924278034	WITHOUT_CLASSIFICATION	1.0757219650930311E-7	DEFECT
// create the chart...	WITHOUT_CLASSIFICATION	0.9999998935442438	WITHOUT_CLASSIFICATION	1.0645575630845078E-7	DEFECT
// create the chart...	WITHOUT_CLASSIFICATION	0.9999998935442438	WITHOUT_CLASSIFICATION	1.0645575630845078E-7	DEFECT
// try a Double.POSITIVE_INFINITY	WITHOUT_CLASSIFICATION	0.9999869636874531	WITHOUT_CLASSIFICATION	1.30363125469301E-5	DEFECT
// adding something to the returned list should NOT change the chart	WITHOUT_CLASSIFICATION	0.9999987550285195	WITHOUT_CLASSIFICATION	1.2449714804695542E-6	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999917400541091	WITHOUT_CLASSIFICATION	8.259945890952432E-6	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.9999991988446677	WITHOUT_CLASSIFICATION	8.011553322954671E-7	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.9999991988446677	WITHOUT_CLASSIFICATION	8.011553322954671E-7	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.9999991988446677	WITHOUT_CLASSIFICATION	8.011553322954671E-7	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.9999991988446677	WITHOUT_CLASSIFICATION	8.011553322954671E-7	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.9999991988446677	WITHOUT_CLASSIFICATION	8.011553322954671E-7	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.9999991988446677	WITHOUT_CLASSIFICATION	8.011553322954671E-7	DEFECT
// fillPaintTransformer	WITHOUT_CLASSIFICATION	0.9999955090629479	WITHOUT_CLASSIFICATION	4.490937052095851E-6	DEFECT
// outlinePaint	WITHOUT_CLASSIFICATION	0.9999992889511972	WITHOUT_CLASSIFICATION	7.110488028258165E-7	DEFECT
// labelFont	WITHOUT_CLASSIFICATION	0.9999973779115384	WITHOUT_CLASSIFICATION	2.622088461652587E-6	DEFECT
// chart title	WITHOUT_CLASSIFICATION	0.9999996304325363	WITHOUT_CLASSIFICATION	3.6956746384192206E-7	DEFECT
// labelPaint	WITHOUT_CLASSIFICATION	0.9999987865074216	WITHOUT_CLASSIFICATION	1.213492578487631E-6	DEFECT
// linePaint	WITHOUT_CLASSIFICATION	0.9999972249380603	WITHOUT_CLASSIFICATION	2.7750619397718745E-6	DEFECT
// fillPaint	WITHOUT_CLASSIFICATION	0.9999970415645008	WITHOUT_CLASSIFICATION	2.9584354993289326E-6	DEFECT
// chart title	WITHOUT_CLASSIFICATION	0.9999996304325363	WITHOUT_CLASSIFICATION	3.6956746384192206E-7	DEFECT
// the clone references the same dataset as the original	WITHOUT_CLASSIFICATION	0.9999997657131717	WITHOUT_CLASSIFICATION	2.342868283315942E-7	DEFECT
// chart title	WITHOUT_CLASSIFICATION	0.9999996304325363	WITHOUT_CLASSIFICATION	3.6956746384192206E-7	DEFECT
// chart title	WITHOUT_CLASSIFICATION	0.9999996304325363	WITHOUT_CLASSIFICATION	3.6956746384192206E-7	DEFECT
// chart title	WITHOUT_CLASSIFICATION	0.9999996304325363	WITHOUT_CLASSIFICATION	3.6956746384192206E-7	DEFECT
// data // include legend // tooltips // urls	WITHOUT_CLASSIFICATION	0.9999991644278617	WITHOUT_CLASSIFICATION	8.355721382527177E-7	DEFECT
// include legend	WITHOUT_CLASSIFICATION	0.9999894945862257	WITHOUT_CLASSIFICATION	1.0505413774302141E-5	DEFECT
// a null key should throw an IllegalArgumentException	WITHOUT_CLASSIFICATION	0.999874347893956	WITHOUT_CLASSIFICATION	1.25652106043966E-4	DEFECT
// a null key should throw an IllegalArgumentException	WITHOUT_CLASSIFICATION	0.999874347893956	WITHOUT_CLASSIFICATION	1.25652106043966E-4	DEFECT
// include legend	WITHOUT_CLASSIFICATION	0.9999894945862257	WITHOUT_CLASSIFICATION	1.0505413774302141E-5	DEFECT
// include legend	WITHOUT_CLASSIFICATION	0.9999894945862257	WITHOUT_CLASSIFICATION	1.0505413774302141E-5	DEFECT
// include legend	WITHOUT_CLASSIFICATION	0.9999894945862257	WITHOUT_CLASSIFICATION	1.0505413774302141E-5	DEFECT
// include legend	WITHOUT_CLASSIFICATION	0.9999894945862257	WITHOUT_CLASSIFICATION	1.0505413774302141E-5	DEFECT
// include legend	WITHOUT_CLASSIFICATION	0.9999894945862257	WITHOUT_CLASSIFICATION	1.0505413774302141E-5	DEFECT
// data	WITHOUT_CLASSIFICATION	0.9999914444085841	WITHOUT_CLASSIFICATION	8.55559141582855E-6	DEFECT
// data	WITHOUT_CLASSIFICATION	0.9999914444085841	WITHOUT_CLASSIFICATION	8.55559141582855E-6	DEFECT
// data	WITHOUT_CLASSIFICATION	0.9999914444085841	WITHOUT_CLASSIFICATION	8.55559141582855E-6	DEFECT
// data	WITHOUT_CLASSIFICATION	0.9999914444085841	WITHOUT_CLASSIFICATION	8.55559141582855E-6	DEFECT
/* BufferedImage img =*/	WITHOUT_CLASSIFICATION	0.9993633915201872	WITHOUT_CLASSIFICATION	6.366084798128898E-4	DEFECT
// try a listener type that isn't registered	WITHOUT_CLASSIFICATION	0.999938590488167	WITHOUT_CLASSIFICATION	6.140951183289996E-5	DEFECT
// name	WITHOUT_CLASSIFICATION	0.9999939409686173	WITHOUT_CLASSIFICATION	6.0590313827623555E-6	DEFECT
//extraLargeFont	WITHOUT_CLASSIFICATION	0.9999899444046124	WITHOUT_CLASSIFICATION	1.0055595387553025E-5	DEFECT
//largeFont	WITHOUT_CLASSIFICATION	0.9999878953279497	WITHOUT_CLASSIFICATION	1.2104672050269672E-5	DEFECT
//regularFont;	WITHOUT_CLASSIFICATION	0.9999899559173371	WITHOUT_CLASSIFICATION	1.004408266302227E-5	DEFECT
//titlePaint;	WITHOUT_CLASSIFICATION	0.9999807102408719	WITHOUT_CLASSIFICATION	1.928975912808607E-5	DEFECT
//subtitlePaint;	WITHOUT_CLASSIFICATION	0.9999901688774261	WITHOUT_CLASSIFICATION	9.831122573908905E-6	DEFECT
//chartBackgroundPaint;	WITHOUT_CLASSIFICATION	0.9999923814029684	WITHOUT_CLASSIFICATION	7.618597031608069E-6	DEFECT
//legendBackgroundPaint;	WITHOUT_CLASSIFICATION	0.9999798891918524	WITHOUT_CLASSIFICATION	2.011080814760057E-5	DEFECT
//legendItemPaint;	WITHOUT_CLASSIFICATION	0.999993668029507	WITHOUT_CLASSIFICATION	6.331970493030067E-6	DEFECT
//drawingSupplier;	WITHOUT_CLASSIFICATION	0.9999940180940788	WITHOUT_CLASSIFICATION	5.981905921087011E-6	DEFECT
// value 1	WITHOUT_CLASSIFICATION	0.9999877117903875	WITHOUT_CLASSIFICATION	1.2288209612594272E-5	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.9999991988446677	WITHOUT_CLASSIFICATION	8.011553322954671E-7	DEFECT
// test independence	WITHOUT_CLASSIFICATION	0.9999990515389816	WITHOUT_CLASSIFICATION	9.484610184190288E-7	DEFECT
//tickLabelPaint;	WITHOUT_CLASSIFICATION	0.9999944736720686	WITHOUT_CLASSIFICATION	5.5263279313886896E-6	DEFECT
//itemLabelPaint;	WITHOUT_CLASSIFICATION	0.9999960129537987	WITHOUT_CLASSIFICATION	3.9870462013206785E-6	DEFECT
//shadowVisible;	WITHOUT_CLASSIFICATION	0.9999772962838767	WITHOUT_CLASSIFICATION	2.27037161232637E-5	DEFECT
//shadowPaint;	WITHOUT_CLASSIFICATION	0.9999927753751191	WITHOUT_CLASSIFICATION	7.224624880913077E-6	DEFECT
//barPainter;	WITHOUT_CLASSIFICATION	0.9999886197220458	WITHOUT_CLASSIFICATION	1.1380277954185595E-5	DEFECT
//xyBarPainter;	WITHOUT_CLASSIFICATION	0.9999796641783515	WITHOUT_CLASSIFICATION	2.033582164849713E-5	DEFECT
//thermometerPaint;	WITHOUT_CLASSIFICATION	0.9999925965780513	WITHOUT_CLASSIFICATION	7.403421948793768E-6	DEFECT
//wallPaint;	WITHOUT_CLASSIFICATION	0.9999840867986811	WITHOUT_CLASSIFICATION	1.5913201318901797E-5	DEFECT
//errorIndicatorPaint;	WITHOUT_CLASSIFICATION	0.9999586113161311	WITHOUT_CLASSIFICATION	4.138868386892435E-5	DEFECT
//gridBandAlternatePaint	WITHOUT_CLASSIFICATION	0.9999726771825751	WITHOUT_CLASSIFICATION	2.7322817424912593E-5	DEFECT
//private double angle;	WITHOUT_CLASSIFICATION	0.9999666847040953	WITHOUT_CLASSIFICATION	3.331529590469583E-5	DEFECT
//private double tipRadius;	WITHOUT_CLASSIFICATION	0.9999929382893643	WITHOUT_CLASSIFICATION	7.0617106356190085E-6	DEFECT
//private double tipRadius;	WITHOUT_CLASSIFICATION	0.9999929382893643	WITHOUT_CLASSIFICATION	7.0617106356190085E-6	DEFECT
//private double baseRadius;	WITHOUT_CLASSIFICATION	0.9999935366208588	WITHOUT_CLASSIFICATION	6.463379141156126E-6	DEFECT
//private double arrowLength;	WITHOUT_CLASSIFICATION	0.9999569022004735	WITHOUT_CLASSIFICATION	4.309779952659717E-5	DEFECT
//private double arrowLength;	WITHOUT_CLASSIFICATION	0.9999569022004735	WITHOUT_CLASSIFICATION	4.309779952659717E-5	DEFECT
//private double arrowWidth;	WITHOUT_CLASSIFICATION	0.9999613704576517	WITHOUT_CLASSIFICATION	3.862954234841868E-5	DEFECT
//private Stroke arrowStroke;	WITHOUT_CLASSIFICATION	0.9998794565198327	WITHOUT_CLASSIFICATION	1.2054348016739804E-4	DEFECT
//private Stroke arrowStroke;	WITHOUT_CLASSIFICATION	0.9998794565198327	WITHOUT_CLASSIFICATION	1.2054348016739804E-4	DEFECT
//private Paint arrowPaint;	WITHOUT_CLASSIFICATION	0.9999591957621321	WITHOUT_CLASSIFICATION	4.08042378678291E-5	DEFECT
//private Paint arrowPaint;	WITHOUT_CLASSIFICATION	0.9999591957621321	WITHOUT_CLASSIFICATION	4.08042378678291E-5	DEFECT
//private double labelOffset;	WITHOUT_CLASSIFICATION	0.9999940782616593	WITHOUT_CLASSIFICATION	5.921738340633109E-6	DEFECT
// text	WITHOUT_CLASSIFICATION	0.9999955984617693	WITHOUT_CLASSIFICATION	4.4015382306832965E-6	DEFECT
// text	WITHOUT_CLASSIFICATION	0.9999955984617693	WITHOUT_CLASSIFICATION	4.4015382306832965E-6	DEFECT
// x	WITHOUT_CLASSIFICATION	0.9999878621311072	WITHOUT_CLASSIFICATION	1.21378688928405E-5	DEFECT
// y	WITHOUT_CLASSIFICATION	0.9999883087656294	WITHOUT_CLASSIFICATION	1.1691234370591084E-5	DEFECT
// font	WITHOUT_CLASSIFICATION	0.9999890794464322	WITHOUT_CLASSIFICATION	1.0920553567850554E-5	DEFECT
// paint	WITHOUT_CLASSIFICATION	0.9999951975017685	WITHOUT_CLASSIFICATION	4.8024982315678655E-6	DEFECT
// paint	WITHOUT_CLASSIFICATION	0.9999951975017685	WITHOUT_CLASSIFICATION	4.8024982315678655E-6	DEFECT
// rotation anchor	WITHOUT_CLASSIFICATION	0.999995623655441	WITHOUT_CLASSIFICATION	4.3763445589391825E-6	DEFECT
// rotation angle	WITHOUT_CLASSIFICATION	0.9999944077842947	WITHOUT_CLASSIFICATION	5.592215705391688E-6	DEFECT
// text anchor	WITHOUT_CLASSIFICATION	0.9999985035768278	WITHOUT_CLASSIFICATION	1.4964231720984773E-6	DEFECT
// textAnchor	WITHOUT_CLASSIFICATION	0.9999986752823103	WITHOUT_CLASSIFICATION	1.3247176895946863E-6	DEFECT
// rotationAnchor	WITHOUT_CLASSIFICATION	0.999997068884586	WITHOUT_CLASSIFICATION	2.9311154139849664E-6	DEFECT
// rotationAngle	WITHOUT_CLASSIFICATION	0.9999967081137884	WITHOUT_CLASSIFICATION	3.2918862116330646E-6	DEFECT
// category 1	WITHOUT_CLASSIFICATION	0.9999982507066849	WITHOUT_CLASSIFICATION	1.7492933150643558E-6	DEFECT
// category 2	WITHOUT_CLASSIFICATION	0.9999986187587161	WITHOUT_CLASSIFICATION	1.3812412839435426E-6	DEFECT
// value 2	WITHOUT_CLASSIFICATION	0.9999904052499975	WITHOUT_CLASSIFICATION	9.594750002474993E-6	DEFECT
// stroke	WITHOUT_CLASSIFICATION	0.9999968413684576	WITHOUT_CLASSIFICATION	3.158631542370813E-6	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9997740141285885	WITHOUT_CLASSIFICATION	2.2598587141163236E-4	DEFECT
// outlinePaint	WITHOUT_CLASSIFICATION	0.9999992889511972	WITHOUT_CLASSIFICATION	7.110488028258165E-7	DEFECT
// stroke	WITHOUT_CLASSIFICATION	0.9999968413684576	WITHOUT_CLASSIFICATION	3.158631542370813E-6	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9997740141285885	WITHOUT_CLASSIFICATION	2.2598587141163236E-4	DEFECT
// category	WITHOUT_CLASSIFICATION	0.9999990539656161	WITHOUT_CLASSIFICATION	9.460343838839606E-7	DEFECT
// categoryAnchor	WITHOUT_CLASSIFICATION	0.9999991074075373	WITHOUT_CLASSIFICATION	8.925924627454399E-7	DEFECT
// value	WITHOUT_CLASSIFICATION	0.9999904750310907	WITHOUT_CLASSIFICATION	9.524968909309076E-6	DEFECT
// x0	WITHOUT_CLASSIFICATION	0.9999873186748411	WITHOUT_CLASSIFICATION	1.268132515889482E-5	DEFECT
// tickUnit	WITHOUT_CLASSIFICATION	0.9999958220372872	WITHOUT_CLASSIFICATION	4.177962712799022E-6	DEFECT
// tickMarkPosition	WITHOUT_CLASSIFICATION	0.9999956838473297	WITHOUT_CLASSIFICATION	4.316152670253535E-6	DEFECT
// timeline	WITHOUT_CLASSIFICATION	0.9999972722552037	WITHOUT_CLASSIFICATION	2.7277447961789544E-6	DEFECT
// range	WITHOUT_CLASSIFICATION	0.9999943586395379	WITHOUT_CLASSIFICATION	5.641360462073362E-6	DEFECT
// check that setting the min date to something on or after the // current min date works...	WITHOUT_CLASSIFICATION	0.9999869495191931	WITHOUT_CLASSIFICATION	1.3050480806888195E-5	DEFECT
// five dates to check...	WITHOUT_CLASSIFICATION	0.9999970599518768	WITHOUT_CLASSIFICATION	2.940048123108989E-6	DEFECT
// START: check d0 and d1	WITHOUT_CLASSIFICATION	0.9999665254994481	WITHOUT_CLASSIFICATION	3.3474500551949504E-5	DEFECT
// START: check d0 and d1	WITHOUT_CLASSIFICATION	0.9999665254994481	WITHOUT_CLASSIFICATION	3.3474500551949504E-5	DEFECT
// START: check d0 and d1	WITHOUT_CLASSIFICATION	0.9999665254994481	WITHOUT_CLASSIFICATION	3.3474500551949504E-5	DEFECT
// START: check d0 and d1	WITHOUT_CLASSIFICATION	0.9999665254994481	WITHOUT_CLASSIFICATION	3.3474500551949504E-5	DEFECT
// START: check d0 and d1	WITHOUT_CLASSIFICATION	0.9999665254994481	WITHOUT_CLASSIFICATION	3.3474500551949504E-5	DEFECT
// START: check d0 and d1	WITHOUT_CLASSIFICATION	0.9999665254994481	WITHOUT_CLASSIFICATION	3.3474500551949504E-5	DEFECT
// START: check d0 and d1	WITHOUT_CLASSIFICATION	0.9999665254994481	WITHOUT_CLASSIFICATION	3.3474500551949504E-5	DEFECT
// START: check d0 and d1	WITHOUT_CLASSIFICATION	0.9999665254994481	WITHOUT_CLASSIFICATION	3.3474500551949504E-5	DEFECT
// MIDDLE: check d1, d2 and d3	WITHOUT_CLASSIFICATION	0.9999650490496133	WITHOUT_CLASSIFICATION	3.495095038679562E-5	DEFECT
// MIDDLE: check d1, d2 and d3	WITHOUT_CLASSIFICATION	0.9999650490496133	WITHOUT_CLASSIFICATION	3.495095038679562E-5	DEFECT
// MIDDLE: check d1, d2 and d3	WITHOUT_CLASSIFICATION	0.9999650490496133	WITHOUT_CLASSIFICATION	3.495095038679562E-5	DEFECT
// MIDDLE: check d1, d2 and d3	WITHOUT_CLASSIFICATION	0.9999650490496133	WITHOUT_CLASSIFICATION	3.495095038679562E-5	DEFECT
// MIDDLE: check d1, d2 and d3	WITHOUT_CLASSIFICATION	0.9999650490496133	WITHOUT_CLASSIFICATION	3.495095038679562E-5	DEFECT
// MIDDLE: check d1, d2 and d3	WITHOUT_CLASSIFICATION	0.9999650490496133	WITHOUT_CLASSIFICATION	3.495095038679562E-5	DEFECT
// MIDDLE: check d1, d2 and d3	WITHOUT_CLASSIFICATION	0.9999650490496133	WITHOUT_CLASSIFICATION	3.495095038679562E-5	DEFECT
// MIDDLE: check d1, d2 and d3	WITHOUT_CLASSIFICATION	0.9999650490496133	WITHOUT_CLASSIFICATION	3.495095038679562E-5	DEFECT
// END: check d3 and d4	WITHOUT_CLASSIFICATION	0.9999582106825416	WITHOUT_CLASSIFICATION	4.1789317458369274E-5	DEFECT
// END: check d3 and d4	WITHOUT_CLASSIFICATION	0.9999582106825416	WITHOUT_CLASSIFICATION	4.1789317458369274E-5	DEFECT
// END: check d3 and d4	WITHOUT_CLASSIFICATION	0.9999582106825416	WITHOUT_CLASSIFICATION	4.1789317458369274E-5	DEFECT
// END: check d3 and d4	WITHOUT_CLASSIFICATION	0.9999582106825416	WITHOUT_CLASSIFICATION	4.1789317458369274E-5	DEFECT
// END: check d3 and d4	WITHOUT_CLASSIFICATION	0.9999582106825416	WITHOUT_CLASSIFICATION	4.1789317458369274E-5	DEFECT
// END: check d3 and d4	WITHOUT_CLASSIFICATION	0.9999582106825416	WITHOUT_CLASSIFICATION	4.1789317458369274E-5	DEFECT
// END: check d3 and d4	WITHOUT_CLASSIFICATION	0.9999582106825416	WITHOUT_CLASSIFICATION	4.1789317458369274E-5	DEFECT
// END: check d3 and d4	WITHOUT_CLASSIFICATION	0.9999582106825416	WITHOUT_CLASSIFICATION	4.1789317458369274E-5	DEFECT
// START: check d0	WITHOUT_CLASSIFICATION	0.9999796457064999	WITHOUT_CLASSIFICATION	2.0354293500041967E-5	DEFECT
// START: check d0	WITHOUT_CLASSIFICATION	0.9999796457064999	WITHOUT_CLASSIFICATION	2.0354293500041967E-5	DEFECT
// END: check d0	WITHOUT_CLASSIFICATION	0.999977316548692	WITHOUT_CLASSIFICATION	2.268345130796543E-5	DEFECT
// MIDDLE: check d0	WITHOUT_CLASSIFICATION	0.9999779445948718	WITHOUT_CLASSIFICATION	2.2055405128251524E-5	DEFECT
// MIDDLE: check d0	WITHOUT_CLASSIFICATION	0.9999779445948718	WITHOUT_CLASSIFICATION	2.2055405128251524E-5	DEFECT
// END: check d0	WITHOUT_CLASSIFICATION	0.999977316548692	WITHOUT_CLASSIFICATION	2.268345130796543E-5	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999917400541091	WITHOUT_CLASSIFICATION	8.259945890952432E-6	DEFECT
// test independence	WITHOUT_CLASSIFICATION	0.9999990515389816	WITHOUT_CLASSIFICATION	9.484610184190288E-7	DEFECT
// now repeat for a vertical axis	WITHOUT_CLASSIFICATION	0.99999915418544	WITHOUT_CLASSIFICATION	8.458145598354689E-7	DEFECT
// set start and end date	WITHOUT_CLASSIFICATION	0.9999991249571636	WITHOUT_CLASSIFICATION	8.750428363199323E-7	DEFECT
// if the bug is still present, this leads to an endless loop	WITHOUT_CLASSIFICATION	0.9995917441778743	WITHOUT_CLASSIFICATION	4.082558221256883E-4	DEFECT
//private boolean autoRangeIncludesZero;	WITHOUT_CLASSIFICATION	0.9999967187677672	WITHOUT_CLASSIFICATION	3.2812322328319325E-6	DEFECT
//private NumberTickUnit tickUnit;	WITHOUT_CLASSIFICATION	0.9999932894118962	WITHOUT_CLASSIFICATION	6.710588103675511E-6	DEFECT
//private NumberFormat numberFormatOverride;	WITHOUT_CLASSIFICATION	0.999970213077264	WITHOUT_CLASSIFICATION	2.9786922736001945E-5	DEFECT
// now replacing the dataset should update the axis range...	WITHOUT_CLASSIFICATION	0.999999717726345	WITHOUT_CLASSIFICATION	2.82273655050002E-7	DEFECT
//axis.setRangeType(RangeType.POSITIVE); //axis.setLowerBound(-5.0); //assertEquals(0.0, axis.getLowerBound(), EPSILON);	WITHOUT_CLASSIFICATION	0.9999910376208843	WITHOUT_CLASSIFICATION	8.962379115806915E-6	DEFECT
// check that changing a tick label font in a1 doesn't change a2	WITHOUT_CLASSIFICATION	0.9999300674173905	WITHOUT_CLASSIFICATION	6.993258260952239E-5	DEFECT
// check that changing a tick label paint in a1 doesn't change a2	WITHOUT_CLASSIFICATION	0.9999554383384929	WITHOUT_CLASSIFICATION	4.456166150716968E-5	DEFECT
// check that changing a category label tooltip in a1 doesn't change a2	WITHOUT_CLASSIFICATION	0.9999850292479759	WITHOUT_CLASSIFICATION	1.4970752024119727E-5	DEFECT
// set axis bounds to be both greater than 1	WITHOUT_CLASSIFICATION	0.9999978571042567	WITHOUT_CLASSIFICATION	2.14289574324286E-6	DEFECT
// check for bounds interval that includes 1	WITHOUT_CLASSIFICATION	0.9999995638141123	WITHOUT_CLASSIFICATION	4.3618588779026205E-7	DEFECT
// check for bounds interval that includes 1	WITHOUT_CLASSIFICATION	0.9999995638141123	WITHOUT_CLASSIFICATION	4.3618588779026205E-7	DEFECT
// check for both bounds smaller than 1	WITHOUT_CLASSIFICATION	0.9999990187026139	WITHOUT_CLASSIFICATION	9.812973861527229E-7	DEFECT
// check for both bounds smaller than 1	WITHOUT_CLASSIFICATION	0.9999990187026139	WITHOUT_CLASSIFICATION	9.812973861527229E-7	DEFECT
// lowerMargin	WITHOUT_CLASSIFICATION	0.9999972474969964	WITHOUT_CLASSIFICATION	2.7525030036852737E-6	DEFECT
// upperMargin	WITHOUT_CLASSIFICATION	0.9999961029279612	WITHOUT_CLASSIFICATION	3.897072038833389E-6	DEFECT
// categoryMargin	WITHOUT_CLASSIFICATION	0.999998906065358	WITHOUT_CLASSIFICATION	1.0939346420240146E-6	DEFECT
// maxCategoryLabelWidthRatio	WITHOUT_CLASSIFICATION	0.9999986936928572	WITHOUT_CLASSIFICATION	1.3063071427421563E-6	DEFECT
// categoryLabelPositionOffset	WITHOUT_CLASSIFICATION	0.9999996474004763	WITHOUT_CLASSIFICATION	3.5259952369340005E-7	DEFECT
// categoryLabelPositions	WITHOUT_CLASSIFICATION	0.9999997537754214	WITHOUT_CLASSIFICATION	2.4622457870245896E-7	DEFECT
// check that changing a tick label font in a1 doesn't change a2	WITHOUT_CLASSIFICATION	0.9999300674173905	WITHOUT_CLASSIFICATION	6.993258260952239E-5	DEFECT
// check that changing a tick label paint in a1 doesn't change a2	WITHOUT_CLASSIFICATION	0.9999554383384929	WITHOUT_CLASSIFICATION	4.456166150716968E-5	DEFECT
// check that changing a category label tooltip in a1 doesn't change a2	WITHOUT_CLASSIFICATION	0.9999850292479759	WITHOUT_CLASSIFICATION	1.4970752024119727E-5	DEFECT
// 4-ms test base timeline for ms2Timeline using 1 included and 1 // excluded segments // // timeline start time = 0 //   | //   v //   0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 ... // +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+... // |  |  |  |  |EE|EE|EE|EE|  |  |  |  |EE|EE|EE|EE|  |  |  |  |    <-- ms2BaseTimeline // +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+... //  \__________  _________/            \____  _____/ //             \/                           \/ //        segment group              segment size = 4 ms //	WITHOUT_CLASSIFICATION	0.9999999840913071	WITHOUT_CLASSIFICATION	1.590869287938515E-8	DEFECT
// categoryLabelToolTips	WITHOUT_CLASSIFICATION	0.9999997326030654	WITHOUT_CLASSIFICATION	2.673969346702061E-7	DEFECT
// categoryLabelURLs	WITHOUT_CLASSIFICATION	0.999999881293031	WITHOUT_CLASSIFICATION	1.1870696904244474E-7	DEFECT
// tickLabelPaint	WITHOUT_CLASSIFICATION	0.9999992823821114	WITHOUT_CLASSIFICATION	7.176178886636318E-7	DEFECT
// tickLabelPaint2	WITHOUT_CLASSIFICATION	0.9999991690862259	WITHOUT_CLASSIFICATION	8.309137741921735E-7	DEFECT
// period	WITHOUT_CLASSIFICATION	0.999982573814189	WITHOUT_CLASSIFICATION	1.742618581096801E-5	DEFECT
// offset	WITHOUT_CLASSIFICATION	0.9999977699425546	WITHOUT_CLASSIFICATION	2.2300574454468037E-6	DEFECT
// advance line Stroke	WITHOUT_CLASSIFICATION	0.9999769326276408	WITHOUT_CLASSIFICATION	2.3067372359278466E-5	DEFECT
// advance line Visible	WITHOUT_CLASSIFICATION	0.9999807048482829	WITHOUT_CLASSIFICATION	1.929515171710918E-5	DEFECT
// cycle bound mapping	WITHOUT_CLASSIFICATION	0.9999942617879596	WITHOUT_CLASSIFICATION	5.738212040383079E-6	DEFECT
// Create a segmented time line (segment size : 15 minutes)	WITHOUT_CLASSIFICATION	0.999997781671743	WITHOUT_CLASSIFICATION	2.2183282568679504E-6	DEFECT
// Set start time	WITHOUT_CLASSIFICATION	0.9999964164116354	WITHOUT_CLASSIFICATION	3.583588364503733E-6	DEFECT
/* PUT exclusions in test */	WITHOUT_CLASSIFICATION	0.9999677612812427	WITHOUT_CLASSIFICATION	3.223871875727685E-5	DEFECT
/** These constants control test cycles in the validateXXXX methods. */	WITHOUT_CLASSIFICATION	0.998425239326995	WITHOUT_CLASSIFICATION	0.001574760673004938	DEFECT
// test 9am-4pm Monday through Friday timeline	WITHOUT_CLASSIFICATION	0.9999991982945907	WITHOUT_CLASSIFICATION	8.0170540937912E-7	DEFECT
// calculate 9am on the first Monday after 2001-01-01	WITHOUT_CLASSIFICATION	0.9999945297700605	WITHOUT_CLASSIFICATION	5.4702299394094E-6	DEFECT
// verify attributes set during object construction	WITHOUT_CLASSIFICATION	0.9999963289486014	WITHOUT_CLASSIFICATION	3.671051398640218E-6	DEFECT
// verify attributes set during object construction	WITHOUT_CLASSIFICATION	0.9999963289486014	WITHOUT_CLASSIFICATION	3.671051398640218E-6	DEFECT
////////////////////////////////////////////////////////////////////////// // test one-segment and adjacent segments //////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999999315263701	WITHOUT_CLASSIFICATION	6.84736298642627E-8	DEFECT
// get two consecutive segments for various tests	WITHOUT_CLASSIFICATION	0.9999997529799612	WITHOUT_CLASSIFICATION	2.47020038829976E-7	DEFECT
// verify segments are consecutive and correct	WITHOUT_CLASSIFICATION	0.9999545496008043	WITHOUT_CLASSIFICATION	4.545039919562963E-5	DEFECT
// verify various indices inside a segment are the same segment	WITHOUT_CLASSIFICATION	0.999999398340662	WITHOUT_CLASSIFICATION	6.016593380200751E-7	DEFECT
// try next segment	WITHOUT_CLASSIFICATION	0.9999990578250929	WITHOUT_CLASSIFICATION	9.421749072516376E-7	DEFECT
////////////////////////////////////////////////////////////////////////// // test inc methods //////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999931916993651	WITHOUT_CLASSIFICATION	6.808300634924314E-6	DEFECT
// test inc() method	WITHOUT_CLASSIFICATION	0.9999645630317168	WITHOUT_CLASSIFICATION	3.543696828317217E-5	DEFECT
// logically consecutive segments non-physically consecutive // (with non-contained time in between)	WITHOUT_CLASSIFICATION	0.9999981639792802	WITHOUT_CLASSIFICATION	1.8360207197399082E-6	DEFECT
// physically consecutive	WITHOUT_CLASSIFICATION	0.9999944364156783	WITHOUT_CLASSIFICATION	5.563584321583473E-6	DEFECT
// test inc(n) method	WITHOUT_CLASSIFICATION	0.999931569584791	WITHOUT_CLASSIFICATION	6.843041520894566E-5	DEFECT
// go to another segment to continue test	WITHOUT_CLASSIFICATION	0.9999998673226346	WITHOUT_CLASSIFICATION	1.3267736541659478E-7	DEFECT
// clear any exceptions in this timeline	WITHOUT_CLASSIFICATION	0.9998920148723767	WITHOUT_CLASSIFICATION	1.0798512762335546E-4	DEFECT
// test some included and excluded segments	WITHOUT_CLASSIFICATION	0.9999995394331476	WITHOUT_CLASSIFICATION	4.60566852481457E-7	DEFECT
// should be an included segment	WITHOUT_CLASSIFICATION	0.9999686646856584	WITHOUT_CLASSIFICATION	3.133531434158573E-5	DEFECT
// should be an excluded segment	WITHOUT_CLASSIFICATION	0.9999804388731484	WITHOUT_CLASSIFICATION	1.956112685163851E-5	DEFECT
// fill in the exceptions	WITHOUT_CLASSIFICATION	0.9999812404365134	WITHOUT_CLASSIFICATION	1.8759563486579125E-5	DEFECT
// verify list of exceptions	WITHOUT_CLASSIFICATION	0.9999975350974625	WITHOUT_CLASSIFICATION	2.464902537418456E-6	DEFECT
// include current exception and last one	WITHOUT_CLASSIFICATION	0.9999962512245951	WITHOUT_CLASSIFICATION	3.7487754048678015E-6	DEFECT
// exclude current exception and last one	WITHOUT_CLASSIFICATION	0.9999992636294458	WITHOUT_CLASSIFICATION	7.363705542535909E-7	DEFECT
// make sure there are no exceptions	WITHOUT_CLASSIFICATION	0.9999988097568391	WITHOUT_CLASSIFICATION	1.1902431609867725E-6	DEFECT
// add our exceptions and store locally in ArrayList of Longs	WITHOUT_CLASSIFICATION	0.9999962039127491	WITHOUT_CLASSIFICATION	3.7960872509084188E-6	DEFECT
// only add an exception if it is currently an included segment	WITHOUT_CLASSIFICATION	0.9999854390045799	WITHOUT_CLASSIFICATION	1.456099542015734E-5	DEFECT
// make array of exceptions	WITHOUT_CLASSIFICATION	0.9999916327167309	WITHOUT_CLASSIFICATION	8.367283269187335E-6	DEFECT
// add the base timeline exclusions as timeline's esceptions	WITHOUT_CLASSIFICATION	0.9999984952588951	WITHOUT_CLASSIFICATION	1.504741104956413E-6	DEFECT
// validate base timeline exclusions added as timeline's esceptions	WITHOUT_CLASSIFICATION	0.9999974551311009	WITHOUT_CLASSIFICATION	2.5448688990117716E-6	DEFECT
// start time...	WITHOUT_CLASSIFICATION	0.999999333938951	WITHOUT_CLASSIFICATION	6.660610490953898E-7	DEFECT
// 1-Jan-2000	WITHOUT_CLASSIFICATION	0.9999920595433334	WITHOUT_CLASSIFICATION	7.940456666709856E-6	DEFECT
//long v = stl.toTimelineValue(946684800020L);	WITHOUT_CLASSIFICATION	0.9999907619693622	WITHOUT_CLASSIFICATION	9.238030637744427E-6	DEFECT
// tick labels visible flag...	WITHOUT_CLASSIFICATION	0.9999891351411802	WITHOUT_CLASSIFICATION	1.0864858819876171E-5	DEFECT
// lowerMargin	WITHOUT_CLASSIFICATION	0.9999972474969964	WITHOUT_CLASSIFICATION	2.7525030036852737E-6	DEFECT
// upperMargin	WITHOUT_CLASSIFICATION	0.9999961029279612	WITHOUT_CLASSIFICATION	3.897072038833389E-6	DEFECT
// the reverse transformed value will be in the start of the // next non-excluded and non-exception segment	WITHOUT_CLASSIFICATION	0.9999998907859818	WITHOUT_CLASSIFICATION	1.0921401826150604E-7	DEFECT
////////////////////////////////////////////////////////////////////////// // test serialization //////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999994816422834	WITHOUT_CLASSIFICATION	5.183577165811374E-7	DEFECT
// verify all timeline segments included in the // baseTimeline.segment are now exceptions	WITHOUT_CLASSIFICATION	0.9999985497053674	WITHOUT_CLASSIFICATION	1.4502946325908717E-6	DEFECT
////////////////////////////////////////////////////////////////////////// // utility methods //////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.999996293432799	WITHOUT_CLASSIFICATION	3.7065672009360953E-6	DEFECT
// subcategories	WITHOUT_CLASSIFICATION	0.9999998311792965	WITHOUT_CLASSIFICATION	1.6882070352987703E-7	DEFECT
// subLabelFont	WITHOUT_CLASSIFICATION	0.9999995775163542	WITHOUT_CLASSIFICATION	4.224836457698812E-7	DEFECT
// subLabelPaint	WITHOUT_CLASSIFICATION	0.9999998044764049	WITHOUT_CLASSIFICATION	1.9552359516813237E-7	DEFECT
// some checks that the clone is independent of the original	WITHOUT_CLASSIFICATION	0.9999998766006899	WITHOUT_CLASSIFICATION	1.2339931011586584E-7	DEFECT
// visible flag...	WITHOUT_CLASSIFICATION	0.9999964810753933	WITHOUT_CLASSIFICATION	3.5189246066657747E-6	DEFECT
// label...	WITHOUT_CLASSIFICATION	0.9999979230101472	WITHOUT_CLASSIFICATION	2.076989852704878E-6	DEFECT
// label font...	WITHOUT_CLASSIFICATION	0.999997450103215	WITHOUT_CLASSIFICATION	2.5498967850180977E-6	DEFECT
// label paint...	WITHOUT_CLASSIFICATION	0.999998758620122	WITHOUT_CLASSIFICATION	1.241379877957692E-6	DEFECT
// attributed label...	WITHOUT_CLASSIFICATION	0.9999983712477356	WITHOUT_CLASSIFICATION	1.6287522644202095E-6	DEFECT
// label insets...	WITHOUT_CLASSIFICATION	0.9999980899970358	WITHOUT_CLASSIFICATION	1.9100029641750462E-6	DEFECT
// label angle...	WITHOUT_CLASSIFICATION	0.9999959226159147	WITHOUT_CLASSIFICATION	4.077384085228053E-6	DEFECT
// label location...	WITHOUT_CLASSIFICATION	0.9999981589449878	WITHOUT_CLASSIFICATION	1.8410550123129078E-6	DEFECT
// axis line visible...	WITHOUT_CLASSIFICATION	0.9999859872935655	WITHOUT_CLASSIFICATION	1.4012706434588745E-5	DEFECT
// axis line stroke...	WITHOUT_CLASSIFICATION	0.9999933489329438	WITHOUT_CLASSIFICATION	6.651067056164661E-6	DEFECT
// axis line paint...	WITHOUT_CLASSIFICATION	0.9999940274145632	WITHOUT_CLASSIFICATION	5.972585436845763E-6	DEFECT
// tick label font...	WITHOUT_CLASSIFICATION	0.9999933733502185	WITHOUT_CLASSIFICATION	6.626649781431387E-6	DEFECT
// tick label paint...	WITHOUT_CLASSIFICATION	0.9999968642992313	WITHOUT_CLASSIFICATION	3.135700768727332E-6	DEFECT
// tick marks visible flag...	WITHOUT_CLASSIFICATION	0.9999911888752419	WITHOUT_CLASSIFICATION	8.811124758264799E-6	DEFECT
// tick mark inside length...	WITHOUT_CLASSIFICATION	0.9999950169195402	WITHOUT_CLASSIFICATION	4.983080459845105E-6	DEFECT
// tick mark outside length...	WITHOUT_CLASSIFICATION	0.9999990716776321	WITHOUT_CLASSIFICATION	9.28322367791144E-7	DEFECT
// tick mark stroke...	WITHOUT_CLASSIFICATION	0.9999962033885678	WITHOUT_CLASSIFICATION	3.7966114321962204E-6	DEFECT
// fixed dimension...	WITHOUT_CLASSIFICATION	0.999887435862669	WITHOUT_CLASSIFICATION	1.1256413733091171E-4	DEFECT
// axis line visible flag...	WITHOUT_CLASSIFICATION	0.9999877424623443	WITHOUT_CLASSIFICATION	1.225753765573637E-5	DEFECT
// positiveArrowVisible;	WITHOUT_CLASSIFICATION	0.9999837780546545	WITHOUT_CLASSIFICATION	1.622194534545908E-5	DEFECT
//private Shape upArrow;	WITHOUT_CLASSIFICATION	0.9999541153961664	WITHOUT_CLASSIFICATION	4.588460383360934E-5	DEFECT
//private Shape downArrow;	WITHOUT_CLASSIFICATION	0.9999198432728077	WITHOUT_CLASSIFICATION	8.015672719221473E-5	DEFECT
//private Shape leftArrow;	WITHOUT_CLASSIFICATION	0.999941721585208	WITHOUT_CLASSIFICATION	5.8278414792095975E-5	DEFECT
//private Shape rightArrow;	WITHOUT_CLASSIFICATION	0.9999325167450935	WITHOUT_CLASSIFICATION	6.74832549065045E-5	DEFECT
// axisLineStroke	WITHOUT_CLASSIFICATION	0.9999971166131718	WITHOUT_CLASSIFICATION	2.8833868282071435E-6	DEFECT
// inverted	WITHOUT_CLASSIFICATION	0.9999955824944283	WITHOUT_CLASSIFICATION	4.4175055716551356E-6	DEFECT
//private TickUnits standardTickUnits;	WITHOUT_CLASSIFICATION	0.9999951346428471	WITHOUT_CLASSIFICATION	4.865357152993477E-6	DEFECT
// verticalTickLabels	WITHOUT_CLASSIFICATION	0.9999981055830396	WITHOUT_CLASSIFICATION	1.8944169603348755E-6	DEFECT
// time zone	WITHOUT_CLASSIFICATION	0.9999915684310721	WITHOUT_CLASSIFICATION	8.431568927967406E-6	DEFECT
// locale	WITHOUT_CLASSIFICATION	0.9999942330304905	WITHOUT_CLASSIFICATION	5.766969509488517E-6	DEFECT
// chars	WITHOUT_CLASSIFICATION	0.9999999183352366	WITHOUT_CLASSIFICATION	8.166476343482737E-8	DEFECT
// showYear[]	WITHOUT_CLASSIFICATION	0.9999981069331464	WITHOUT_CLASSIFICATION	1.8930668535858178E-6	DEFECT
// yearFormatter	WITHOUT_CLASSIFICATION	0.999969755468354	WITHOUT_CLASSIFICATION	3.024453164599511E-5	DEFECT
// NONE / NONE	WITHOUT_CLASSIFICATION	0.9999919940306111	WITHOUT_CLASSIFICATION	8.00596938894487E-6	DEFECT
// NONE / RANGE	WITHOUT_CLASSIFICATION	0.9999950124441455	WITHOUT_CLASSIFICATION	4.987555854512358E-6	DEFECT
// NONE / FIXED	WITHOUT_CLASSIFICATION	0.9989200996299283	WITHOUT_CLASSIFICATION	0.0010799003700716879	DEFECT
// RANGE / NONE	WITHOUT_CLASSIFICATION	0.9999946819246889	WITHOUT_CLASSIFICATION	5.318075311074177E-6	DEFECT
// paint	WITHOUT_CLASSIFICATION	0.9999951975017685	WITHOUT_CLASSIFICATION	4.8024982315678655E-6	DEFECT
// RANGE / RANGE	WITHOUT_CLASSIFICATION	0.9999948723462521	WITHOUT_CLASSIFICATION	5.127653747974109E-6	DEFECT
// RANGE / FIXED	WITHOUT_CLASSIFICATION	0.9993078787609809	WITHOUT_CLASSIFICATION	6.921212390190497E-4	DEFECT
// FIXED / NONE	WITHOUT_CLASSIFICATION	0.9982346907864907	WITHOUT_CLASSIFICATION	0.0017653092135092598	DEFECT
// FIXED / RANGE	WITHOUT_CLASSIFICATION	0.9989385733555951	WITHOUT_CLASSIFICATION	0.0010614266444049665	DEFECT
// FIXED / FIXED	WITHOUT_CLASSIFICATION	0.9975524712102677	WITHOUT_CLASSIFICATION	0.002447528789732268	DEFECT
// TBLRC // 00010 - right item only	WITHOUT_CLASSIFICATION	0.999985147726708	WITHOUT_CLASSIFICATION	1.4852273291974433E-5	DEFECT
// TBLRC // 00010 - right item only	WITHOUT_CLASSIFICATION	0.999985147726708	WITHOUT_CLASSIFICATION	1.4852273291974433E-5	DEFECT
// TBLRC // 00011 - right and center items	WITHOUT_CLASSIFICATION	0.9999981314897864	WITHOUT_CLASSIFICATION	1.8685102134674363E-6	DEFECT
// TBLRC // 00011 - right and center items	WITHOUT_CLASSIFICATION	0.9999981314897864	WITHOUT_CLASSIFICATION	1.8685102134674363E-6	DEFECT
// try case where right item is shorter than center item	WITHOUT_CLASSIFICATION	0.9999834989731108	WITHOUT_CLASSIFICATION	1.6501026889147023E-5	DEFECT
// TBLRC // 00100 - left item only	WITHOUT_CLASSIFICATION	0.9999688678045964	WITHOUT_CLASSIFICATION	3.113219540366846E-5	DEFECT
// TBLRC // 00101 - left and center items	WITHOUT_CLASSIFICATION	0.9999984659182775	WITHOUT_CLASSIFICATION	1.5340817224677261E-6	DEFECT
// TBLRC // 00101 - left and center items	WITHOUT_CLASSIFICATION	0.9999984659182775	WITHOUT_CLASSIFICATION	1.5340817224677261E-6	DEFECT
// try case where left item is shorter than center item	WITHOUT_CLASSIFICATION	0.9999858959494125	WITHOUT_CLASSIFICATION	1.4104050587534991E-5	DEFECT
// TBLRC // 00110 - left and right items	WITHOUT_CLASSIFICATION	0.9999973752448752	WITHOUT_CLASSIFICATION	2.624755124905392E-6	DEFECT
// TBLRC // 00111 - left, right and center items	WITHOUT_CLASSIFICATION	0.9999991883599838	WITHOUT_CLASSIFICATION	8.116400161967164E-7	DEFECT
// TBLRC // 01000 - bottom item only	WITHOUT_CLASSIFICATION	0.999981184559218	WITHOUT_CLASSIFICATION	1.881544078191585E-5	DEFECT
// TBLRC // 01001 - bottom and center only	WITHOUT_CLASSIFICATION	0.9999980731243064	WITHOUT_CLASSIFICATION	1.9268756936807663E-6	DEFECT
// TBLRC // 01010 - bottom and right only	WITHOUT_CLASSIFICATION	0.9999960311351314	WITHOUT_CLASSIFICATION	3.968864868713471E-6	DEFECT
// TBLRC // 10110 - top, left and right	WITHOUT_CLASSIFICATION	0.9999952335953054	WITHOUT_CLASSIFICATION	4.766404694683076E-6	DEFECT
// TBLRC // 10111	WITHOUT_CLASSIFICATION	0.9999682080580179	WITHOUT_CLASSIFICATION	3.179194198206117E-5	DEFECT
// TBLRC // 11000 - top and bottom only	WITHOUT_CLASSIFICATION	0.9999896830455738	WITHOUT_CLASSIFICATION	1.0316954426096907E-5	DEFECT
// TBLRC // 11001	WITHOUT_CLASSIFICATION	0.9999674454167579	WITHOUT_CLASSIFICATION	3.255458324216584E-5	DEFECT
// TBLRC // 11010 - top, bottom and right	WITHOUT_CLASSIFICATION	0.9999943180643094	WITHOUT_CLASSIFICATION	5.6819356905402396E-6	DEFECT
// TBLRC // 11100	WITHOUT_CLASSIFICATION	0.9999684705448634	WITHOUT_CLASSIFICATION	3.1529455136651595E-5	DEFECT
// TBLRC // 11101	WITHOUT_CLASSIFICATION	0.9999674404527893	WITHOUT_CLASSIFICATION	3.255954721071794E-5	DEFECT
// TBLRC // 11110	WITHOUT_CLASSIFICATION	0.9999673564853445	WITHOUT_CLASSIFICATION	3.264351465539626E-5	DEFECT
// TBLRC // 11111 - all	WITHOUT_CLASSIFICATION	0.9998939959820357	WITHOUT_CLASSIFICATION	1.060040179643555E-4	DEFECT
// create dataset 1...	WITHOUT_CLASSIFICATION	0.9999994661340866	WITHOUT_CLASSIFICATION	5.338659133405712E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999917400541091	WITHOUT_CLASSIFICATION	8.259945890952432E-6	DEFECT
// TBLRC // 00110 - left and right items	WITHOUT_CLASSIFICATION	0.9999973752448752	WITHOUT_CLASSIFICATION	2.624755124905392E-6	DEFECT
// TBLRC // 00111 - left, right and center items	WITHOUT_CLASSIFICATION	0.9999991883599838	WITHOUT_CLASSIFICATION	8.116400161967164E-7	DEFECT
// TBLRC // 01000 - bottom item only	WITHOUT_CLASSIFICATION	0.999981184559218	WITHOUT_CLASSIFICATION	1.881544078191585E-5	DEFECT
// TBLRC // 01001 - bottom and center only	WITHOUT_CLASSIFICATION	0.9999980731243064	WITHOUT_CLASSIFICATION	1.9268756936807663E-6	DEFECT
// TBLRC // 01010 - bottom and right only	WITHOUT_CLASSIFICATION	0.9999960311351314	WITHOUT_CLASSIFICATION	3.968864868713471E-6	DEFECT
// TBLRC // 01011 - bottom, right and center	WITHOUT_CLASSIFICATION	0.9999975857028143	WITHOUT_CLASSIFICATION	2.414297185694534E-6	DEFECT
// TBLRC // 01100	WITHOUT_CLASSIFICATION	0.9999761457144187	WITHOUT_CLASSIFICATION	2.385428558119366E-5	DEFECT
// TBLRC // 01101 - bottom, left and center	WITHOUT_CLASSIFICATION	0.9999972033633029	WITHOUT_CLASSIFICATION	2.7966366970628914E-6	DEFECT
// TBLRC // 01110 - bottom. left and right	WITHOUT_CLASSIFICATION	0.9999952034720767	WITHOUT_CLASSIFICATION	4.796527923281268E-6	DEFECT
// TBLRC // 01111	WITHOUT_CLASSIFICATION	0.999974551671488	WITHOUT_CLASSIFICATION	2.5448328512105825E-5	DEFECT
// TBLRC // 10000 - top item only	WITHOUT_CLASSIFICATION	0.9999861170255607	WITHOUT_CLASSIFICATION	1.388297443915908E-5	DEFECT
// TBLRC // 10001 - top and center only	WITHOUT_CLASSIFICATION	0.9999980506319041	WITHOUT_CLASSIFICATION	1.9493680959835085E-6	DEFECT
// TBLRC // 10010 - right and top only	WITHOUT_CLASSIFICATION	0.9999968965266866	WITHOUT_CLASSIFICATION	3.1034733134125263E-6	DEFECT
// TBLRC // 10011 - top, right and center	WITHOUT_CLASSIFICATION	0.999997943683696	WITHOUT_CLASSIFICATION	2.0563163039629474E-6	DEFECT
// TBLRC // 10100 - top and left only	WITHOUT_CLASSIFICATION	0.9999916536222957	WITHOUT_CLASSIFICATION	8.346377704203864E-6	DEFECT
// TBLRC // 10101 - top, left and center	WITHOUT_CLASSIFICATION	0.9999974835084072	WITHOUT_CLASSIFICATION	2.5164915928575895E-6	DEFECT
// TBLRC // 10111	WITHOUT_CLASSIFICATION	0.9999682080580179	WITHOUT_CLASSIFICATION	3.179194198206117E-5	DEFECT
// standard test	WITHOUT_CLASSIFICATION	0.9999997270257037	WITHOUT_CLASSIFICATION	2.729742962563956E-7	DEFECT
// tooltip format	WITHOUT_CLASSIFICATION	0.9999987865787132	WITHOUT_CLASSIFICATION	1.2134212867013732E-6	DEFECT
// tooltip format	WITHOUT_CLASSIFICATION	0.9999987865787132	WITHOUT_CLASSIFICATION	1.2134212867013732E-6	DEFECT
// date format	WITHOUT_CLASSIFICATION	0.9999821928410466	WITHOUT_CLASSIFICATION	1.78071589534334E-5	DEFECT
// Y format	WITHOUT_CLASSIFICATION	0.9999921166022561	WITHOUT_CLASSIFICATION	7.883397743946515E-6	DEFECT
// some setup...	WITHOUT_CLASSIFICATION	0.9999962119124023	WITHOUT_CLASSIFICATION	3.7880875977766534E-6	DEFECT
// some setup...	WITHOUT_CLASSIFICATION	0.9999962119124023	WITHOUT_CLASSIFICATION	3.7880875977766534E-6	DEFECT
// another test...	WITHOUT_CLASSIFICATION	0.9999995418991565	WITHOUT_CLASSIFICATION	4.5810084345216196E-7	DEFECT
// try a null value	WITHOUT_CLASSIFICATION	0.9999822234916528	WITHOUT_CLASSIFICATION	1.7776508347191687E-5	DEFECT
// format string...	WITHOUT_CLASSIFICATION	0.9999964202150452	WITHOUT_CLASSIFICATION	3.5797849546995114E-6	DEFECT
// x number format	WITHOUT_CLASSIFICATION	0.9999930065895232	WITHOUT_CLASSIFICATION	6.9934104768538195E-6	DEFECT
// y number format	WITHOUT_CLASSIFICATION	0.9999946683627432	WITHOUT_CLASSIFICATION	5.331637256750311E-6	DEFECT
// z number format	WITHOUT_CLASSIFICATION	0.99999623547499	WITHOUT_CLASSIFICATION	3.7645250101070747E-6	DEFECT
// x date format	WITHOUT_CLASSIFICATION	0.9999668586762772	WITHOUT_CLASSIFICATION	3.3141323722805296E-5	DEFECT
// y date format	WITHOUT_CLASSIFICATION	0.9999807068783404	WITHOUT_CLASSIFICATION	1.9293121659610872E-5	DEFECT
// z date format	WITHOUT_CLASSIFICATION	0.9999858811520582	WITHOUT_CLASSIFICATION	1.4118847941883286E-5	DEFECT
// remove plot2, but plot1 is removed instead	WITHOUT_CLASSIFICATION	0.9999872850537036	WITHOUT_CLASSIFICATION	1.2714946296272738E-5	DEFECT
// create subplot 1...	WITHOUT_CLASSIFICATION	0.9999995854225896	WITHOUT_CLASSIFICATION	4.1457741035690636E-7	DEFECT
// create subplot 2...	WITHOUT_CLASSIFICATION	0.999999673587692	WITHOUT_CLASSIFICATION	3.264123079972763E-7	DEFECT
// add the subplots...	WITHOUT_CLASSIFICATION	0.9999986262360614	WITHOUT_CLASSIFICATION	1.3737639386293742E-6	DEFECT
// separatorsVisible	WITHOUT_CLASSIFICATION	0.9999992249747075	WITHOUT_CLASSIFICATION	7.750252925086953E-7	DEFECT
// separatorStroke	WITHOUT_CLASSIFICATION	0.9999987887842718	WITHOUT_CLASSIFICATION	1.2112157281320857E-6	DEFECT
// separatorPaint	WITHOUT_CLASSIFICATION	0.9999996197245398	WITHOUT_CLASSIFICATION	3.8027546018220696E-7	DEFECT
// outerSeparatorExtension	WITHOUT_CLASSIFICATION	0.9999917684683328	WITHOUT_CLASSIFICATION	8.231531667174017E-6	DEFECT
// sectionDepth	WITHOUT_CLASSIFICATION	0.9999985194392704	WITHOUT_CLASSIFICATION	1.4805607295728895E-6	DEFECT
// orientation...	WITHOUT_CLASSIFICATION	0.9999983748523806	WITHOUT_CLASSIFICATION	1.6251476194779146E-6	DEFECT
// axisOffset...	WITHOUT_CLASSIFICATION	0.9999974424851901	WITHOUT_CLASSIFICATION	2.557514809867936E-6	DEFECT
// domainAxes...	WITHOUT_CLASSIFICATION	0.9999959098119273	WITHOUT_CLASSIFICATION	4.090188072731322E-6	DEFECT
// TBLRC // 00000 - no items	WITHOUT_CLASSIFICATION	0.999982923024598	WITHOUT_CLASSIFICATION	1.7076975402005507E-5	DEFECT
// TBLRC // 11001	WITHOUT_CLASSIFICATION	0.9999674454167579	WITHOUT_CLASSIFICATION	3.255458324216584E-5	DEFECT
// TBLRC // 11010 - top, bottom and right	WITHOUT_CLASSIFICATION	0.9999943180643094	WITHOUT_CLASSIFICATION	5.6819356905402396E-6	DEFECT
// TBLRC // 11011	WITHOUT_CLASSIFICATION	0.9999669811923778	WITHOUT_CLASSIFICATION	3.301880762224548E-5	DEFECT
// TBLRC // 11100	WITHOUT_CLASSIFICATION	0.9999684705448634	WITHOUT_CLASSIFICATION	3.1529455136651595E-5	DEFECT
// TBLRC // 11101	WITHOUT_CLASSIFICATION	0.9999674404527893	WITHOUT_CLASSIFICATION	3.255954721071794E-5	DEFECT
// TBLRC // 11110	WITHOUT_CLASSIFICATION	0.9999673564853445	WITHOUT_CLASSIFICATION	3.264351465539626E-5	DEFECT
// check handling when the dataset is a regular XYDataset, not an // XYZDataset...	WITHOUT_CLASSIFICATION	0.9999928822994537	WITHOUT_CLASSIFICATION	7.117700546243779E-6	DEFECT
// domainAxisLocation - no longer a separate field but test anyway...	WITHOUT_CLASSIFICATION	0.9999979659713343	WITHOUT_CLASSIFICATION	2.0340286656429484E-6	DEFECT
// domainAxisLocations...	WITHOUT_CLASSIFICATION	0.9999892966422267	WITHOUT_CLASSIFICATION	1.0703357773448218E-5	DEFECT
// draw shared domain axis...	WITHOUT_CLASSIFICATION	0.9999973081251577	WITHOUT_CLASSIFICATION	2.691874842187471E-6	DEFECT
// rangeAxes...	WITHOUT_CLASSIFICATION	0.9999978152092246	WITHOUT_CLASSIFICATION	2.1847907754015846E-6	DEFECT
// rangeAxisLocation - no longer a separate field but test anyway...	WITHOUT_CLASSIFICATION	0.9999982379055098	WITHOUT_CLASSIFICATION	1.762094490123409E-6	DEFECT
// rangeAxisLocations...	WITHOUT_CLASSIFICATION	0.9999940550377351	WITHOUT_CLASSIFICATION	5.944962265026984E-6	DEFECT
// datasetToDomainAxisMap...	WITHOUT_CLASSIFICATION	0.9999898137141011	WITHOUT_CLASSIFICATION	1.0186285898929772E-5	DEFECT
// datasetToRangeAxisMap...	WITHOUT_CLASSIFICATION	0.9999867716644245	WITHOUT_CLASSIFICATION	1.3228335575543293E-5	DEFECT
// renderers...	WITHOUT_CLASSIFICATION	0.9999973488108906	WITHOUT_CLASSIFICATION	2.651189109289791E-6	DEFECT
// rendering order...	WITHOUT_CLASSIFICATION	0.999943677670312	WITHOUT_CLASSIFICATION	5.632232968786029E-5	DEFECT
// columnRenderingOrder...	WITHOUT_CLASSIFICATION	0.9999949802425488	WITHOUT_CLASSIFICATION	5.019757451177217E-6	DEFECT
// rowRenderingOrder...	WITHOUT_CLASSIFICATION	0.9999512153511901	WITHOUT_CLASSIFICATION	4.8784648809932564E-5	DEFECT
// domainGridlinesVisible	WITHOUT_CLASSIFICATION	0.9999956927587018	WITHOUT_CLASSIFICATION	4.307241298260161E-6	DEFECT
// domainGridlineStroke	WITHOUT_CLASSIFICATION	0.9999944340747647	WITHOUT_CLASSIFICATION	5.565925235319428E-6	DEFECT
// domainGridlinePaint	WITHOUT_CLASSIFICATION	0.9999975021411487	WITHOUT_CLASSIFICATION	2.497858851386579E-6	DEFECT
// rangeGridlinesVisible	WITHOUT_CLASSIFICATION	0.9999970706608409	WITHOUT_CLASSIFICATION	2.9293391591303015E-6	DEFECT
// rangeGridlineStroke	WITHOUT_CLASSIFICATION	0.9999960576996996	WITHOUT_CLASSIFICATION	3.94230030045507E-6	DEFECT
// rangeGridlinePaint	WITHOUT_CLASSIFICATION	0.9999984914929698	WITHOUT_CLASSIFICATION	1.5085070300679739E-6	DEFECT
// rangeCrosshairVisible	WITHOUT_CLASSIFICATION	0.9999940952282883	WITHOUT_CLASSIFICATION	5.904771711656511E-6	DEFECT
// rangeCrosshairValue	WITHOUT_CLASSIFICATION	0.9999945780327146	WITHOUT_CLASSIFICATION	5.421967285447127E-6	DEFECT
// rangeCrosshairStroke	WITHOUT_CLASSIFICATION	0.9999936652884279	WITHOUT_CLASSIFICATION	6.334711572016138E-6	DEFECT
// rangeCrosshairLockedOnData	WITHOUT_CLASSIFICATION	0.9999954248019925	WITHOUT_CLASSIFICATION	4.57519800749244E-6	DEFECT
// foreground domain markers	WITHOUT_CLASSIFICATION	0.9999969330255711	WITHOUT_CLASSIFICATION	3.0669744289111055E-6	DEFECT
// background domain markers	WITHOUT_CLASSIFICATION	0.9999976677941957	WITHOUT_CLASSIFICATION	2.3322058042849243E-6	DEFECT
// foreground range markers...	WITHOUT_CLASSIFICATION	0.9999944473183924	WITHOUT_CLASSIFICATION	5.552681607580958E-6	DEFECT
// background range markers...	WITHOUT_CLASSIFICATION	0.9999957775963619	WITHOUT_CLASSIFICATION	4.222403638053419E-6	DEFECT
// annotations	WITHOUT_CLASSIFICATION	0.9999956582179071	WITHOUT_CLASSIFICATION	4.341782092904799E-6	DEFECT
// weight	WITHOUT_CLASSIFICATION	0.9999944297423988	WITHOUT_CLASSIFICATION	5.570257601130319E-6	DEFECT
// fixed domain axis space...	WITHOUT_CLASSIFICATION	0.9999601119109606	WITHOUT_CLASSIFICATION	3.9888089039445984E-5	DEFECT
// fixed range axis space...	WITHOUT_CLASSIFICATION	0.9999818562134505	WITHOUT_CLASSIFICATION	1.814378654948969E-5	DEFECT
// crosshairDatasetIndex	WITHOUT_CLASSIFICATION	0.9999993680006223	WITHOUT_CLASSIFICATION	6.319993778259371E-7	DEFECT
// domainCrosshairColumnKey	WITHOUT_CLASSIFICATION	0.9999982493696448	WITHOUT_CLASSIFICATION	1.7506303552745794E-6	DEFECT
// domainCrosshairRowKey	WITHOUT_CLASSIFICATION	0.9999962266859569	WITHOUT_CLASSIFICATION	3.7733140431756392E-6	DEFECT
// domainCrosshairVisible	WITHOUT_CLASSIFICATION	0.9999949400218361	WITHOUT_CLASSIFICATION	5.059978163939171E-6	DEFECT
// domainCrosshairStroke	WITHOUT_CLASSIFICATION	0.9999945715929817	WITHOUT_CLASSIFICATION	5.4284070182838435E-6	DEFECT
// shadowGenerator	WITHOUT_CLASSIFICATION	0.9999994309607589	WITHOUT_CLASSIFICATION	5.690392410541144E-7	DEFECT
// check for independence	WITHOUT_CLASSIFICATION	0.9999973311392614	WITHOUT_CLASSIFICATION	2.668860738570442E-6	DEFECT
// we didn't get an exception so all is good	WITHOUT_CLASSIFICATION	0.9999624022202341	WITHOUT_CLASSIFICATION	3.759777976585525E-5	DEFECT
// should get IllegalArgumentException for negative index	WITHOUT_CLASSIFICATION	0.999997438872427	WITHOUT_CLASSIFICATION	2.561127572951721E-6	DEFECT
// should get IllegalArgumentException for negative index	WITHOUT_CLASSIFICATION	0.999997438872427	WITHOUT_CLASSIFICATION	2.561127572951721E-6	DEFECT
// we should be able to give a dataset an arbitrary index	WITHOUT_CLASSIFICATION	0.9999865674391367	WITHOUT_CLASSIFICATION	1.3432560863395347E-5	DEFECT
// labelFont	WITHOUT_CLASSIFICATION	0.9999973779115384	WITHOUT_CLASSIFICATION	2.622088461652587E-6	DEFECT
// labelPaint	WITHOUT_CLASSIFICATION	0.9999987865074216	WITHOUT_CLASSIFICATION	1.213492578487631E-6	DEFECT
// dial outline paint	WITHOUT_CLASSIFICATION	0.9999945153012635	WITHOUT_CLASSIFICATION	5.4846987364468055E-6	DEFECT
// if multiple axes are mapped, the first in the list should be // returned...	WITHOUT_CLASSIFICATION	0.9999825488145877	WITHOUT_CLASSIFICATION	1.7451185412300784E-5	DEFECT
// we should be able to give a renderer an arbitrary index	WITHOUT_CLASSIFICATION	0.9999673410940421	WITHOUT_CLASSIFICATION	3.2658905958005594E-5	DEFECT
// add a second dataset	WITHOUT_CLASSIFICATION	0.9999988872071534	WITHOUT_CLASSIFICATION	1.1127928467125633E-6	DEFECT
// add a second dataset	WITHOUT_CLASSIFICATION	0.9999988872071534	WITHOUT_CLASSIFICATION	1.1127928467125633E-6	DEFECT
// add a second dataset	WITHOUT_CLASSIFICATION	0.9999988872071534	WITHOUT_CLASSIFICATION	1.1127928467125633E-6	DEFECT
// by default, the renderer with index 0 is used	WITHOUT_CLASSIFICATION	0.999997818618519	WITHOUT_CLASSIFICATION	2.1813814809890534E-6	DEFECT
// add a second renderer with the same index as dataset2, now it will // be used	WITHOUT_CLASSIFICATION	0.9999992101507071	WITHOUT_CLASSIFICATION	7.898492927938514E-7	DEFECT
// now map the dataset to the second xAxis	WITHOUT_CLASSIFICATION	0.9999999570719424	WITHOUT_CLASSIFICATION	4.29280575458817E-8	DEFECT
// now map the dataset to the second xAxis	WITHOUT_CLASSIFICATION	0.9999999570719424	WITHOUT_CLASSIFICATION	4.29280575458817E-8	DEFECT
// add a second dataset, plotted against a second x axis	WITHOUT_CLASSIFICATION	0.9999997519716817	WITHOUT_CLASSIFICATION	2.480283183141883E-7	DEFECT
// add a second dataset, plotted against a second axis	WITHOUT_CLASSIFICATION	0.9999998483697569	WITHOUT_CLASSIFICATION	1.5163024313342214E-7	DEFECT
// needle paint	WITHOUT_CLASSIFICATION	0.9999992449218065	WITHOUT_CLASSIFICATION	7.550781935096225E-7	DEFECT
// value font	WITHOUT_CLASSIFICATION	0.9999906700135391	WITHOUT_CLASSIFICATION	9.329986460892206E-6	DEFECT
// value paint	WITHOUT_CLASSIFICATION	0.999996170870475	WITHOUT_CLASSIFICATION	3.829129525081211E-6	DEFECT
// tick label font	WITHOUT_CLASSIFICATION	0.9999970774912327	WITHOUT_CLASSIFICATION	2.9225087671827716E-6	DEFECT
// tick label paint	WITHOUT_CLASSIFICATION	0.9999986105066857	WITHOUT_CLASSIFICATION	1.3894933143059556E-6	DEFECT
// tick label format	WITHOUT_CLASSIFICATION	0.9999965647899003	WITHOUT_CLASSIFICATION	3.435210099678611E-6	DEFECT
// tick paint	WITHOUT_CLASSIFICATION	0.9999970405279198	WITHOUT_CLASSIFICATION	2.959472080221828E-6	DEFECT
// draw border	WITHOUT_CLASSIFICATION	0.9999975319617437	WITHOUT_CLASSIFICATION	2.4680382562502192E-6	DEFECT
// meter angle	WITHOUT_CLASSIFICATION	0.9999962943469933	WITHOUT_CLASSIFICATION	3.70565300673478E-6	DEFECT
//key	WITHOUT_CLASSIFICATION	0.9997359782413765	WITHOUT_CLASSIFICATION	2.640217586235474E-4	DEFECT
//paint	WITHOUT_CLASSIFICATION	0.9999557745529112	WITHOUT_CLASSIFICATION	4.4225447088809135E-5	DEFECT
//stroke	WITHOUT_CLASSIFICATION	0.9999507763551163	WITHOUT_CLASSIFICATION	4.922364488374119E-5	DEFECT
//outlinePaint	WITHOUT_CLASSIFICATION	0.9999894103707546	WITHOUT_CLASSIFICATION	1.0589629245328543E-5	DEFECT
//outlineStroke	WITHOUT_CLASSIFICATION	0.9999782476592285	WITHOUT_CLASSIFICATION	2.17523407715176E-5	DEFECT
//alpha	WITHOUT_CLASSIFICATION	0.9999692969703134	WITHOUT_CLASSIFICATION	3.0703029686505086E-5	DEFECT
// check null argument...	WITHOUT_CLASSIFICATION	0.9999984558099512	WITHOUT_CLASSIFICATION	1.5441900488337969E-6	DEFECT
// drawBorder	WITHOUT_CLASSIFICATION	0.9999974362849716	WITHOUT_CLASSIFICATION	2.563715028388505E-6	DEFECT
// rosePaint	WITHOUT_CLASSIFICATION	0.9999992684063792	WITHOUT_CLASSIFICATION	7.315936209389143E-7	DEFECT
// roseCenterPaint	WITHOUT_CLASSIFICATION	0.9999990445166063	WITHOUT_CLASSIFICATION	9.554833936847776E-7	DEFECT
// roseHighlightPaint	WITHOUT_CLASSIFICATION	0.9999993587001411	WITHOUT_CLASSIFICATION	6.412998589153939E-7	DEFECT
// interiorGap...	WITHOUT_CLASSIFICATION	0.9999953587644772	WITHOUT_CLASSIFICATION	4.641235522771378E-6	DEFECT
// circular	WITHOUT_CLASSIFICATION	0.9999993524769482	WITHOUT_CLASSIFICATION	6.475230518225397E-7	DEFECT
// direction	WITHOUT_CLASSIFICATION	0.9999945828236636	WITHOUT_CLASSIFICATION	5.417176336425435E-6	DEFECT
// ignoreNullValues	WITHOUT_CLASSIFICATION	0.9999991825412236	WITHOUT_CLASSIFICATION	8.174587764072839E-7	DEFECT
// sectionPaint	WITHOUT_CLASSIFICATION	0.9999996071817318	WITHOUT_CLASSIFICATION	3.928182681735975E-7	DEFECT
// sectionPaintMap	WITHOUT_CLASSIFICATION	0.9999994450419749	WITHOUT_CLASSIFICATION	5.54958025028008E-7	DEFECT
// baseSectionPaint	WITHOUT_CLASSIFICATION	0.9999992683395231	WITHOUT_CLASSIFICATION	7.316604768442074E-7	DEFECT
// sectionOutlinePaint	WITHOUT_CLASSIFICATION	0.9999990769373848	WITHOUT_CLASSIFICATION	9.230626153423306E-7	DEFECT
// sectionOutlinePaintList	WITHOUT_CLASSIFICATION	0.999998373986654	WITHOUT_CLASSIFICATION	1.6260133458951211E-6	DEFECT
// baseSectionOutlinePaint	WITHOUT_CLASSIFICATION	0.9999982807110079	WITHOUT_CLASSIFICATION	1.7192889921724E-6	DEFECT
// sectionOutlineStrokeList	WITHOUT_CLASSIFICATION	0.9999978784405397	WITHOUT_CLASSIFICATION	2.121559460252108E-6	DEFECT
// baseSectionOutlineStroke	WITHOUT_CLASSIFICATION	0.9999975838761469	WITHOUT_CLASSIFICATION	2.4161238530239105E-6	DEFECT
// shadowPaint	WITHOUT_CLASSIFICATION	0.9999993545333299	WITHOUT_CLASSIFICATION	6.454666701033094E-7	DEFECT
// shadowXOffset	WITHOUT_CLASSIFICATION	0.9999980882086211	WITHOUT_CLASSIFICATION	1.9117913787803248E-6	DEFECT
// shadowYOffset	WITHOUT_CLASSIFICATION	0.9999988225306758	WITHOUT_CLASSIFICATION	1.1774693240998572E-6	DEFECT
// labelOutlinePaint	WITHOUT_CLASSIFICATION	0.9999987724423326	WITHOUT_CLASSIFICATION	1.2275576673779518E-6	DEFECT
// labelOutlineStroke	WITHOUT_CLASSIFICATION	0.999994486014159	WITHOUT_CLASSIFICATION	5.5139858410906205E-6	DEFECT
// labelShadowPaint	WITHOUT_CLASSIFICATION	0.9999990967701362	WITHOUT_CLASSIFICATION	9.032298637881332E-7	DEFECT
// explodePercentages	WITHOUT_CLASSIFICATION	0.9999997693935607	WITHOUT_CLASSIFICATION	2.3060643935433508E-7	DEFECT
// backgroundImage	WITHOUT_CLASSIFICATION	0.9999985365574862	WITHOUT_CLASSIFICATION	1.46344251377951E-6	DEFECT
// startAngle	WITHOUT_CLASSIFICATION	0.9999994993937392	WITHOUT_CLASSIFICATION	5.006062608183125E-7	DEFECT
// backgroundImageAlignment	WITHOUT_CLASSIFICATION	0.9999979297933438	WITHOUT_CLASSIFICATION	2.0702066561616542E-6	DEFECT
// backgroundImageAlpha	WITHOUT_CLASSIFICATION	0.9999977602619979	WITHOUT_CLASSIFICATION	2.2397380020570717E-6	DEFECT
// outlinePaint	WITHOUT_CLASSIFICATION	0.9999992889511972	WITHOUT_CLASSIFICATION	7.110488028258165E-7	DEFECT
// shadowGenerator	WITHOUT_CLASSIFICATION	0.9999994309607589	WITHOUT_CLASSIFICATION	5.690392410541144E-7	DEFECT
// direction	WITHOUT_CLASSIFICATION	0.9999945828236636	WITHOUT_CLASSIFICATION	5.417176336425435E-6	DEFECT
// labelLinkPaint	WITHOUT_CLASSIFICATION	0.9999985761887487	WITHOUT_CLASSIFICATION	1.4238112513245003E-6	DEFECT
// maximumLabelWidth	WITHOUT_CLASSIFICATION	0.999999352714117	WITHOUT_CLASSIFICATION	6.472858831010905E-7	DEFECT
// links visible	WITHOUT_CLASSIFICATION	0.9999899869096766	WITHOUT_CLASSIFICATION	1.0013090323385109E-5	DEFECT
// labelGap	WITHOUT_CLASSIFICATION	0.99999821831397	WITHOUT_CLASSIFICATION	1.7816860300862353E-6	DEFECT
// toolTipGenerator	WITHOUT_CLASSIFICATION	0.9999991573425303	WITHOUT_CLASSIFICATION	8.426574697249072E-7	DEFECT
// linkMargin	WITHOUT_CLASSIFICATION	0.999996205050621	WITHOUT_CLASSIFICATION	3.794949379030948E-6	DEFECT
// legendItemShape	WITHOUT_CLASSIFICATION	0.9999973897564659	WITHOUT_CLASSIFICATION	2.6102435339789434E-6	DEFECT
// labelLinkStroke	WITHOUT_CLASSIFICATION	0.9999983579892188	WITHOUT_CLASSIFICATION	1.642010781145653E-6	DEFECT
// minimumArcAngleToDraw	WITHOUT_CLASSIFICATION	0.9999972152614321	WITHOUT_CLASSIFICATION	2.7847385678398527E-6	DEFECT
// urlGenerator	WITHOUT_CLASSIFICATION	0.9999988118212628	WITHOUT_CLASSIFICATION	1.1881787372413586E-6	DEFECT
// legendLabelGenerator	WITHOUT_CLASSIFICATION	0.9999981767751718	WITHOUT_CLASSIFICATION	1.82322482818218E-6	DEFECT
// legendItemShape	WITHOUT_CLASSIFICATION	0.9999973897564659	WITHOUT_CLASSIFICATION	2.6102435339789434E-6	DEFECT
// legendLabelToolTipGenerator	WITHOUT_CLASSIFICATION	0.9999986749263133	WITHOUT_CLASSIFICATION	1.3250736866512522E-6	DEFECT
// legendLabelURLGenerator	WITHOUT_CLASSIFICATION	0.9999983098168389	WITHOUT_CLASSIFICATION	1.690183161137749E-6	DEFECT
// autoPopulateSectionPaint	WITHOUT_CLASSIFICATION	0.9999988271104436	WITHOUT_CLASSIFICATION	1.1728895563367865E-6	DEFECT
// autoPopulateSectionOutlinePaint	WITHOUT_CLASSIFICATION	0.9999984500121308	WITHOUT_CLASSIFICATION	1.549987869100952E-6	DEFECT
// we use ValueMarker for the tests, because we need a concrete // subclass...	WITHOUT_CLASSIFICATION	0.9999999855380951	WITHOUT_CLASSIFICATION	1.4461904760834016E-8	DEFECT
// autoPopulateSectionOutlineStroke	WITHOUT_CLASSIFICATION	0.9999982897091312	WITHOUT_CLASSIFICATION	1.7102908687959832E-6	DEFECT
// check that the URL generator has been cloned	WITHOUT_CLASSIFICATION	0.9999989268167618	WITHOUT_CLASSIFICATION	1.0731832380901537E-6	DEFECT
// check that the URL generator has been cloned	WITHOUT_CLASSIFICATION	0.9999989268167618	WITHOUT_CLASSIFICATION	1.0731832380901537E-6	DEFECT
// change the shape and make sure it only affects p1	WITHOUT_CLASSIFICATION	0.9999998946053531	WITHOUT_CLASSIFICATION	1.0539464693044868E-7	DEFECT
// change the generator and make sure it only affects p1	WITHOUT_CLASSIFICATION	0.9999999577285132	WITHOUT_CLASSIFICATION	4.2271486648912495E-8	DEFECT
// change the generator and make sure it only affects p1	WITHOUT_CLASSIFICATION	0.9999999577285132	WITHOUT_CLASSIFICATION	4.2271486648912495E-8	DEFECT
// check that null items are ignored if requested	WITHOUT_CLASSIFICATION	0.9999997389712043	WITHOUT_CLASSIFICATION	2.6102879567612655E-7	DEFECT
// check that zero items are ignored if requested	WITHOUT_CLASSIFICATION	0.999999826079823	WITHOUT_CLASSIFICATION	1.739201770148272E-7	DEFECT
// check that negative items are always ignored	WITHOUT_CLASSIFICATION	0.9999992845126573	WITHOUT_CLASSIFICATION	7.154873426838768E-7	DEFECT
// noDataMessage	WITHOUT_CLASSIFICATION	0.9999962849573214	WITHOUT_CLASSIFICATION	3.715042678529384E-6	DEFECT
// noDataMessageFont	WITHOUT_CLASSIFICATION	0.9999962651549257	WITHOUT_CLASSIFICATION	3.734845074197521E-6	DEFECT
// noDataMessagePaint	WITHOUT_CLASSIFICATION	0.9999938601082213	WITHOUT_CLASSIFICATION	6.139891778685153E-6	DEFECT
// outlineVisible	WITHOUT_CLASSIFICATION	0.999998250075171	WITHOUT_CLASSIFICATION	1.7499248290553014E-6	DEFECT
// outlineStroke	WITHOUT_CLASSIFICATION	0.9999985394071341	WITHOUT_CLASSIFICATION	1.4605928658831702E-6	DEFECT
// foregroundAlpha	WITHOUT_CLASSIFICATION	0.9999992099785516	WITHOUT_CLASSIFICATION	7.900214484128951E-7	DEFECT
// backgroundAlpha	WITHOUT_CLASSIFICATION	0.9999991144489571	WITHOUT_CLASSIFICATION	8.855510430470704E-7	DEFECT
// drawingSupplier	WITHOUT_CLASSIFICATION	0.9999992797001542	WITHOUT_CLASSIFICATION	7.202998458614887E-7	DEFECT
// try a null collection	WITHOUT_CLASSIFICATION	0.9999566999234383	WITHOUT_CLASSIFICATION	4.3300076561798156E-5	DEFECT
// dataExtractOrder	WITHOUT_CLASSIFICATION	0.9999981345574388	WITHOUT_CLASSIFICATION	1.865442561081786E-6	DEFECT
// headPercent	WITHOUT_CLASSIFICATION	0.9999987208767505	WITHOUT_CLASSIFICATION	1.2791232495693858E-6	DEFECT
// interiorGap	WITHOUT_CLASSIFICATION	0.9999949933198005	WITHOUT_CLASSIFICATION	5.00668019955571E-6	DEFECT
// maxValue	WITHOUT_CLASSIFICATION	0.9999951363295945	WITHOUT_CLASSIFICATION	4.863670405518784E-6	DEFECT
// secondary renderers	WITHOUT_CLASSIFICATION	0.999997677746802	WITHOUT_CLASSIFICATION	2.322253197964238E-6	DEFECT
// row keys...	WITHOUT_CLASSIFICATION	0.9999929907955389	WITHOUT_CLASSIFICATION	7.009204461102933E-6	DEFECT
// row keys...	WITHOUT_CLASSIFICATION	0.9999929907955389	WITHOUT_CLASSIFICATION	7.009204461102933E-6	DEFECT
// column keys...	WITHOUT_CLASSIFICATION	0.999998773095303	WITHOUT_CLASSIFICATION	1.2269046968527434E-6	DEFECT
// padding	WITHOUT_CLASSIFICATION	0.9999861838533883	WITHOUT_CLASSIFICATION	1.3816146611710348E-5	DEFECT
// column keys...	WITHOUT_CLASSIFICATION	0.999998773095303	WITHOUT_CLASSIFICATION	1.2269046968527434E-6	DEFECT
// column keys...	WITHOUT_CLASSIFICATION	0.999998773095303	WITHOUT_CLASSIFICATION	1.2269046968527434E-6	DEFECT
// column keys...	WITHOUT_CLASSIFICATION	0.999998773095303	WITHOUT_CLASSIFICATION	1.2269046968527434E-6	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999917400541091	WITHOUT_CLASSIFICATION	8.259945890952432E-6	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999917400541091	WITHOUT_CLASSIFICATION	8.259945890952432E-6	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999917400541091	WITHOUT_CLASSIFICATION	8.259945890952432E-6	DEFECT
// labelFont	WITHOUT_CLASSIFICATION	0.9999973779115384	WITHOUT_CLASSIFICATION	2.622088461652587E-6	DEFECT
// labelPaint	WITHOUT_CLASSIFICATION	0.9999987865074216	WITHOUT_CLASSIFICATION	1.213492578487631E-6	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9997740141285885	WITHOUT_CLASSIFICATION	2.2598587141163236E-4	DEFECT
// axisLinePaint	WITHOUT_CLASSIFICATION	0.9999981349593634	WITHOUT_CLASSIFICATION	1.8650406366290545E-6	DEFECT
// axisLineStroke	WITHOUT_CLASSIFICATION	0.9999971166131718	WITHOUT_CLASSIFICATION	2.8833868282071435E-6	DEFECT
// remove plot2, but plot1 is removed instead	WITHOUT_CLASSIFICATION	0.9999872850537036	WITHOUT_CLASSIFICATION	1.2714946296272738E-5	DEFECT
// orientation...	WITHOUT_CLASSIFICATION	0.9999983748523806	WITHOUT_CLASSIFICATION	1.6251476194779146E-6	DEFECT
// axisOffset...	WITHOUT_CLASSIFICATION	0.9999974424851901	WITHOUT_CLASSIFICATION	2.557514809867936E-6	DEFECT
// labelGenerator	WITHOUT_CLASSIFICATION	0.9999988784092773	WITHOUT_CLASSIFICATION	1.121590722676688E-6	DEFECT
// toolTipGenerator	WITHOUT_CLASSIFICATION	0.9999991573425303	WITHOUT_CLASSIFICATION	8.426574697249072E-7	DEFECT
// urlGenerator	WITHOUT_CLASSIFICATION	0.9999988118212628	WITHOUT_CLASSIFICATION	1.1881787372413586E-6	DEFECT
// change a series paint	WITHOUT_CLASSIFICATION	0.9999994434513814	WITHOUT_CLASSIFICATION	5.565486186770927E-7	DEFECT
// baseSeriesOutlineStroke	WITHOUT_CLASSIFICATION	0.9999961885804457	WITHOUT_CLASSIFICATION	3.8114195542724723E-6	DEFECT
// valueFont	WITHOUT_CLASSIFICATION	0.9999943114759112	WITHOUT_CLASSIFICATION	5.688524088766825E-6	DEFECT
// webFilled	WITHOUT_CLASSIFICATION	0.9999967038533858	WITHOUT_CLASSIFICATION	3.296146614226357E-6	DEFECT
// change a series outline paint	WITHOUT_CLASSIFICATION	0.9999998593034867	WITHOUT_CLASSIFICATION	1.4069651336639828E-7	DEFECT
// axisLabelGap	WITHOUT_CLASSIFICATION	0.9999991635368088	WITHOUT_CLASSIFICATION	8.364631912004012E-7	DEFECT
// thermometerPaint	WITHOUT_CLASSIFICATION	0.9999990984162104	WITHOUT_CLASSIFICATION	9.01583789554681E-7	DEFECT
// change the legendItemShape	WITHOUT_CLASSIFICATION	0.9999991188086196	WITHOUT_CLASSIFICATION	8.811913805545425E-7	DEFECT
// secondary DomainAxisLocations...	WITHOUT_CLASSIFICATION	0.9999989846020235	WITHOUT_CLASSIFICATION	1.015397976553429E-6	DEFECT
// change a series outline stroke	WITHOUT_CLASSIFICATION	0.9999996511548268	WITHOUT_CLASSIFICATION	3.488451731736313E-7	DEFECT
// valueLocation	WITHOUT_CLASSIFICATION	0.9999922671887758	WITHOUT_CLASSIFICATION	7.732811224323098E-6	DEFECT
// thermometerStroke	WITHOUT_CLASSIFICATION	0.9999957811239286	WITHOUT_CLASSIFICATION	4.218876071331541E-6	DEFECT
// valuePaint	WITHOUT_CLASSIFICATION	0.9999971040559006	WITHOUT_CLASSIFICATION	2.895944099396282E-6	DEFECT
// axisLocation	WITHOUT_CLASSIFICATION	0.9999948383936508	WITHOUT_CLASSIFICATION	5.161606349260159E-6	DEFECT
// showValueLines	WITHOUT_CLASSIFICATION	0.9999976299844826	WITHOUT_CLASSIFICATION	2.3700155173472996E-6	DEFECT
// domainAxisLocation...	WITHOUT_CLASSIFICATION	0.9999887198057691	WITHOUT_CLASSIFICATION	1.1280194230915953E-5	DEFECT
// valueFormat	WITHOUT_CLASSIFICATION	0.9999918984601324	WITHOUT_CLASSIFICATION	8.101539867628694E-6	DEFECT
// this doesn't work	WITHOUT_CLASSIFICATION	0.9969793993117477	WITHOUT_CLASSIFICATION	0.003020600688252344	DEFECT
// mercuryPaint	WITHOUT_CLASSIFICATION	0.9999987290652598	WITHOUT_CLASSIFICATION	1.2709347401589318E-6	DEFECT
// rangeAxisLocation...	WITHOUT_CLASSIFICATION	0.9999937346440564	WITHOUT_CLASSIFICATION	6.265355943604929E-6	DEFECT
// domainAxis...	WITHOUT_CLASSIFICATION	0.9999949801863564	WITHOUT_CLASSIFICATION	5.019813643723671E-6	DEFECT
// secondary DomainAxes...	WITHOUT_CLASSIFICATION	0.9999988563165014	WITHOUT_CLASSIFICATION	1.143683498506742E-6	DEFECT
// secondary RangeAxisLocations...	WITHOUT_CLASSIFICATION	0.9999990399842488	WITHOUT_CLASSIFICATION	9.600157511266814E-7	DEFECT
// rangeAxis...	WITHOUT_CLASSIFICATION	0.9999973228430532	WITHOUT_CLASSIFICATION	2.6771569467635696E-6	DEFECT
// renderer	WITHOUT_CLASSIFICATION	0.999994546389124	WITHOUT_CLASSIFICATION	5.453610875982592E-6	DEFECT
// secondary RangeAxes...	WITHOUT_CLASSIFICATION	0.9999989489933061	WITHOUT_CLASSIFICATION	1.0510066938163483E-6	DEFECT
// secondaryDatasetRangeAxisMap...	WITHOUT_CLASSIFICATION	0.9999983914730297	WITHOUT_CLASSIFICATION	1.6085269702734537E-6	DEFECT
// secondary DatasetDomainAxisMap...	WITHOUT_CLASSIFICATION	0.9999989814701624	WITHOUT_CLASSIFICATION	1.0185298375630937E-6	DEFECT
// try a collection with a single number plus a null	WITHOUT_CLASSIFICATION	0.9999973379044397	WITHOUT_CLASSIFICATION	2.662095560299272E-6	DEFECT
// create dataset 1...	WITHOUT_CLASSIFICATION	0.9999994661340866	WITHOUT_CLASSIFICATION	5.338659133405712E-7	DEFECT
// create dataset 1...	WITHOUT_CLASSIFICATION	0.9999994661340866	WITHOUT_CLASSIFICATION	5.338659133405712E-7	DEFECT
// lowerBound	WITHOUT_CLASSIFICATION	0.9999971210334492	WITHOUT_CLASSIFICATION	2.878966550841764E-6	DEFECT
// remove plot2, but plot1 is removed instead	WITHOUT_CLASSIFICATION	0.9999872850537036	WITHOUT_CLASSIFICATION	1.2714946296272738E-5	DEFECT
// create subplot 1...	WITHOUT_CLASSIFICATION	0.9999995854225896	WITHOUT_CLASSIFICATION	4.1457741035690636E-7	DEFECT
// create subplot 2...	WITHOUT_CLASSIFICATION	0.999999673587692	WITHOUT_CLASSIFICATION	3.264123079972763E-7	DEFECT
// parent plot...	WITHOUT_CLASSIFICATION	0.999999144437647	WITHOUT_CLASSIFICATION	8.55562352981187E-7	DEFECT
// add the subplots...	WITHOUT_CLASSIFICATION	0.9999986262360614	WITHOUT_CLASSIFICATION	1.3737639386293742E-6	DEFECT
// domainGridlineStroke	WITHOUT_CLASSIFICATION	0.9999944340747647	WITHOUT_CLASSIFICATION	5.565925235319428E-6	DEFECT
// domainGridlinePaint	WITHOUT_CLASSIFICATION	0.9999975021411487	WITHOUT_CLASSIFICATION	2.497858851386579E-6	DEFECT
// rangeGridlinesVisible	WITHOUT_CLASSIFICATION	0.9999970706608409	WITHOUT_CLASSIFICATION	2.9293391591303015E-6	DEFECT
// rangeGridlineStroke	WITHOUT_CLASSIFICATION	0.9999960576996996	WITHOUT_CLASSIFICATION	3.94230030045507E-6	DEFECT
// rangeCrosshairVisible	WITHOUT_CLASSIFICATION	0.9999940952282883	WITHOUT_CLASSIFICATION	5.904771711656511E-6	DEFECT
// rangeCrosshairValue	WITHOUT_CLASSIFICATION	0.9999945780327146	WITHOUT_CLASSIFICATION	5.421967285447127E-6	DEFECT
// rangeCrosshairStroke	WITHOUT_CLASSIFICATION	0.9999936652884279	WITHOUT_CLASSIFICATION	6.334711572016138E-6	DEFECT
// rangeCrosshairLockedOnData	WITHOUT_CLASSIFICATION	0.9999954248019925	WITHOUT_CLASSIFICATION	4.57519800749244E-6	DEFECT
// weight	WITHOUT_CLASSIFICATION	0.9999944297423988	WITHOUT_CLASSIFICATION	5.570257601130319E-6	DEFECT
// fixed legend items	WITHOUT_CLASSIFICATION	0.9999880522500938	WITHOUT_CLASSIFICATION	1.1947749906139397E-5	DEFECT
// shadowGenerator	WITHOUT_CLASSIFICATION	0.9999994309607589	WITHOUT_CLASSIFICATION	5.690392410541144E-7	DEFECT
// should get IllegalArgumentException for negative index	WITHOUT_CLASSIFICATION	0.999997438872427	WITHOUT_CLASSIFICATION	2.561127572951721E-6	DEFECT
// we should be able to give a dataset an arbitrary index	WITHOUT_CLASSIFICATION	0.9999865674391367	WITHOUT_CLASSIFICATION	1.3432560863395347E-5	DEFECT
// we should be able to give a renderer an arbitrary index	WITHOUT_CLASSIFICATION	0.9999673410940421	WITHOUT_CLASSIFICATION	3.2658905958005594E-5	DEFECT
// add a second dataset	WITHOUT_CLASSIFICATION	0.9999988872071534	WITHOUT_CLASSIFICATION	1.1127928467125633E-6	DEFECT
// add a second dataset	WITHOUT_CLASSIFICATION	0.9999988872071534	WITHOUT_CLASSIFICATION	1.1127928467125633E-6	DEFECT
// by default, the renderer with index 0 is used	WITHOUT_CLASSIFICATION	0.999997818618519	WITHOUT_CLASSIFICATION	2.1813814809890534E-6	DEFECT
// now map the dataset to the second xAxis	WITHOUT_CLASSIFICATION	0.9999999570719424	WITHOUT_CLASSIFICATION	4.29280575458817E-8	DEFECT
// now map the dataset to the second xAxis	WITHOUT_CLASSIFICATION	0.9999999570719424	WITHOUT_CLASSIFICATION	4.29280575458817E-8	DEFECT
// add a second dataset, plotted against a second x axis	WITHOUT_CLASSIFICATION	0.9999997519716817	WITHOUT_CLASSIFICATION	2.480283183141883E-7	DEFECT
// add a second dataset, plotted against a second axis	WITHOUT_CLASSIFICATION	0.9999998483697569	WITHOUT_CLASSIFICATION	1.5163024313342214E-7	DEFECT
// rangeZeroBaselineVisible	WITHOUT_CLASSIFICATION	0.9999946724234033	WITHOUT_CLASSIFICATION	5.327576596645563E-6	DEFECT
// rangeZeroBaselineStroke	WITHOUT_CLASSIFICATION	0.9999965152490494	WITHOUT_CLASSIFICATION	3.4847509506665224E-6	DEFECT
// rangeZeroBaselinePaint	WITHOUT_CLASSIFICATION	0.9999984537898022	WITHOUT_CLASSIFICATION	1.5462101978235582E-6	DEFECT
// range markers	WITHOUT_CLASSIFICATION	0.9999957343516062	WITHOUT_CLASSIFICATION	4.2656483938791024E-6	DEFECT
// secondary range markers	WITHOUT_CLASSIFICATION	0.9999960035391787	WITHOUT_CLASSIFICATION	3.996460821252146E-6	DEFECT
// quadrant origin	WITHOUT_CLASSIFICATION	0.9999985547861989	WITHOUT_CLASSIFICATION	1.4452138009769604E-6	DEFECT
// quadrant paint	WITHOUT_CLASSIFICATION	0.9999982594824062	WITHOUT_CLASSIFICATION	1.7405175937593262E-6	DEFECT
// verify that the plot is listening to the cloned renderer	WITHOUT_CLASSIFICATION	0.9999990392802194	WITHOUT_CLASSIFICATION	9.607197806374475E-7	DEFECT
// no renderer 1	WITHOUT_CLASSIFICATION	0.9999978953865191	WITHOUT_CLASSIFICATION	2.104613480928967E-6	DEFECT
// actually removes a1	WITHOUT_CLASSIFICATION	0.9999812580489691	WITHOUT_CLASSIFICATION	1.8741951030908527E-5	DEFECT
// set up some objects...	WITHOUT_CLASSIFICATION	0.9999978905289888	WITHOUT_CLASSIFICATION	2.1094710112172414E-6	DEFECT
// paint sequence	WITHOUT_CLASSIFICATION	0.9999991370601979	WITHOUT_CLASSIFICATION	8.629398020423354E-7	DEFECT
// outline paint sequence	WITHOUT_CLASSIFICATION	0.9999990786831683	WITHOUT_CLASSIFICATION	9.213168316835539E-7	DEFECT
// outline stroke sequence	WITHOUT_CLASSIFICATION	0.9999983742507967	WITHOUT_CLASSIFICATION	1.6257492032255342E-6	DEFECT
// shape sequence	WITHOUT_CLASSIFICATION	0.9999984954136821	WITHOUT_CLASSIFICATION	1.5045863179195548E-6	DEFECT
// paint index	WITHOUT_CLASSIFICATION	0.9999953114511712	WITHOUT_CLASSIFICATION	4.688548828809016E-6	DEFECT
// outline paint index	WITHOUT_CLASSIFICATION	0.9999952678324319	WITHOUT_CLASSIFICATION	4.732167568175935E-6	DEFECT
// outline stroke index	WITHOUT_CLASSIFICATION	0.9999971345132666	WITHOUT_CLASSIFICATION	2.865486733473106E-6	DEFECT
// shape index	WITHOUT_CLASSIFICATION	0.9999975532832025	WITHOUT_CLASSIFICATION	2.4467167973891253E-6	DEFECT
// create dataset 2...	WITHOUT_CLASSIFICATION	0.9999995872566595	WITHOUT_CLASSIFICATION	4.127433404567899E-7	DEFECT
// lowerBound	WITHOUT_CLASSIFICATION	0.9999971210334492	WITHOUT_CLASSIFICATION	2.878966550841764E-6	DEFECT
// upperBound	WITHOUT_CLASSIFICATION	0.9999955094900672	WITHOUT_CLASSIFICATION	4.490509932867252E-6	DEFECT
// startAngle	WITHOUT_CLASSIFICATION	0.9999994993937392	WITHOUT_CLASSIFICATION	5.006062608183125E-7	DEFECT
// extent	WITHOUT_CLASSIFICATION	0.9999969478921736	WITHOUT_CLASSIFICATION	3.052107826372425E-6	DEFECT
// tickRadius	WITHOUT_CLASSIFICATION	0.9999985167190342	WITHOUT_CLASSIFICATION	1.4832809658556567E-6	DEFECT
// backgroundPaint	WITHOUT_CLASSIFICATION	0.999999148613729	WITHOUT_CLASSIFICATION	8.513862710123147E-7	DEFECT
// outlinePaint	WITHOUT_CLASSIFICATION	0.9999992889511972	WITHOUT_CLASSIFICATION	7.110488028258165E-7	DEFECT
// font	WITHOUT_CLASSIFICATION	0.9999890794464322	WITHOUT_CLASSIFICATION	1.0920553567850554E-5	DEFECT
// paint	WITHOUT_CLASSIFICATION	0.9999951975017685	WITHOUT_CLASSIFICATION	4.8024982315678655E-6	DEFECT
// textAnchor	WITHOUT_CLASSIFICATION	0.9999986752823103	WITHOUT_CLASSIFICATION	1.3247176895946863E-6	DEFECT
// stroke	WITHOUT_CLASSIFICATION	0.9999968413684576	WITHOUT_CLASSIFICATION	3.158631542370813E-6	DEFECT
// now make a change to the renderer and see if it triggers a plot // change event...	WITHOUT_CLASSIFICATION	0.9999999962900794	WITHOUT_CLASSIFICATION	3.709920568628007E-9	DEFECT
// if multiple axes are mapped, the first in the list should be // returned...	WITHOUT_CLASSIFICATION	0.9999825488145877	WITHOUT_CLASSIFICATION	1.7451185412300784E-5	DEFECT
// add a second renderer with the same index as dataset2, now it will // be used	WITHOUT_CLASSIFICATION	0.9999992101507071	WITHOUT_CLASSIFICATION	7.898492927938514E-7	DEFECT
// outlineStroke	WITHOUT_CLASSIFICATION	0.9999985394071341	WITHOUT_CLASSIFICATION	1.4605928658831702E-6	DEFECT
// check the case where there is a secondary dataset that doesn't // have a renderer (i.e. falls back to renderer 0)	WITHOUT_CLASSIFICATION	0.9999607641691454	WITHOUT_CLASSIFICATION	3.923583085459571E-5	DEFECT
// now remove a3, but since a3.equals(a1), this will in fact remove // a1...	WITHOUT_CLASSIFICATION	0.999616893412365	WITHOUT_CLASSIFICATION	3.8310658763500183E-4	DEFECT
// check an inherited attribute	WITHOUT_CLASSIFICATION	0.9999958954645541	WITHOUT_CLASSIFICATION	4.104535445852769E-6	DEFECT
// check that the listener lists are independent	WITHOUT_CLASSIFICATION	0.9999988454235323	WITHOUT_CLASSIFICATION	1.1545764677323932E-6	DEFECT
// check that the listener lists are independent	WITHOUT_CLASSIFICATION	0.9999988454235323	WITHOUT_CLASSIFICATION	1.1545764677323932E-6	DEFECT
// check that the listener lists are independent	WITHOUT_CLASSIFICATION	0.9999988454235323	WITHOUT_CLASSIFICATION	1.1545764677323932E-6	DEFECT
// check that the listener lists are independent	WITHOUT_CLASSIFICATION	0.9999988454235323	WITHOUT_CLASSIFICATION	1.1545764677323932E-6	DEFECT
// visible	WITHOUT_CLASSIFICATION	0.9999927806074284	WITHOUT_CLASSIFICATION	7.219392571634643E-6	DEFECT
// radius	WITHOUT_CLASSIFICATION	0.999998533765808	WITHOUT_CLASSIFICATION	1.4662341919663575E-6	DEFECT
// test a default instance	WITHOUT_CLASSIFICATION	0.9999962370876782	WITHOUT_CLASSIFICATION	3.76291232185601E-6	DEFECT
// test a default instance	WITHOUT_CLASSIFICATION	0.9999962370876782	WITHOUT_CLASSIFICATION	3.76291232185601E-6	DEFECT
// test a default instance	WITHOUT_CLASSIFICATION	0.9999962370876782	WITHOUT_CLASSIFICATION	3.76291232185601E-6	DEFECT
// test a default instance	WITHOUT_CLASSIFICATION	0.9999962370876782	WITHOUT_CLASSIFICATION	3.76291232185601E-6	DEFECT
// test a default instance	WITHOUT_CLASSIFICATION	0.9999962370876782	WITHOUT_CLASSIFICATION	3.76291232185601E-6	DEFECT
// test a default instance	WITHOUT_CLASSIFICATION	0.9999962370876782	WITHOUT_CLASSIFICATION	3.76291232185601E-6	DEFECT
// radius	WITHOUT_CLASSIFICATION	0.999998533765808	WITHOUT_CLASSIFICATION	1.4662341919663575E-6	DEFECT
// radius	WITHOUT_CLASSIFICATION	0.999998533765808	WITHOUT_CLASSIFICATION	1.4662341919663575E-6	DEFECT
// foregroundPaint	WITHOUT_CLASSIFICATION	0.9999992404577718	WITHOUT_CLASSIFICATION	7.595422282951288E-7	DEFECT
// background paint	WITHOUT_CLASSIFICATION	0.999999357773798	WITHOUT_CLASSIFICATION	6.422262020576364E-7	DEFECT
// foreground paint	WITHOUT_CLASSIFICATION	0.9999994270545272	WITHOUT_CLASSIFICATION	5.729454727922977E-7	DEFECT
// inner radius	WITHOUT_CLASSIFICATION	0.9999969700960774	WITHOUT_CLASSIFICATION	3.02990392273115E-6	DEFECT
// outer radius	WITHOUT_CLASSIFICATION	0.9999997060296479	WITHOUT_CLASSIFICATION	2.939703520437569E-7	DEFECT
// dataset index	WITHOUT_CLASSIFICATION	0.9999977636829066	WITHOUT_CLASSIFICATION	2.2363170935053138E-6	DEFECT
// dataset index	WITHOUT_CLASSIFICATION	0.9999977636829066	WITHOUT_CLASSIFICATION	2.2363170935053138E-6	DEFECT
// angle	WITHOUT_CLASSIFICATION	0.9999920460345704	WITHOUT_CLASSIFICATION	7.953965429608851E-6	DEFECT
// frameAnchor	WITHOUT_CLASSIFICATION	0.9999980242955839	WITHOUT_CLASSIFICATION	1.9757044160651927E-6	DEFECT
// templateValue	WITHOUT_CLASSIFICATION	0.999997374699201	WITHOUT_CLASSIFICATION	2.6253007990062216E-6	DEFECT
// valueAnchor	WITHOUT_CLASSIFICATION	0.9999973506770348	WITHOUT_CLASSIFICATION	2.6493229652082185E-6	DEFECT
// fill paint	WITHOUT_CLASSIFICATION	0.9999952516327896	WITHOUT_CLASSIFICATION	4.748367210375999E-6	DEFECT
// outline paint	WITHOUT_CLASSIFICATION	0.9999988570754275	WITHOUT_CLASSIFICATION	1.1429245724791145E-6	DEFECT
// outline stroke	WITHOUT_CLASSIFICATION	0.9999990251459289	WITHOUT_CLASSIFICATION	9.74854071217103E-7	DEFECT
// test a customised instance	WITHOUT_CLASSIFICATION	0.9999972406127348	WITHOUT_CLASSIFICATION	2.7593872652539588E-6	DEFECT
// test a custom instance	WITHOUT_CLASSIFICATION	0.9999932469473471	WITHOUT_CLASSIFICATION	6.753052652816546E-6	DEFECT
// background	WITHOUT_CLASSIFICATION	0.9999980190753816	WITHOUT_CLASSIFICATION	1.9809246183841753E-6	DEFECT
// dial cap	WITHOUT_CLASSIFICATION	0.9999948838390434	WITHOUT_CLASSIFICATION	5.116160956539476E-6	DEFECT
// frame	WITHOUT_CLASSIFICATION	0.9999956090482854	WITHOUT_CLASSIFICATION	4.390951714507777E-6	DEFECT
// view	WITHOUT_CLASSIFICATION	0.9999940398586191	WITHOUT_CLASSIFICATION	5.9601413808793825E-6	DEFECT
// layer	WITHOUT_CLASSIFICATION	0.9999954076052355	WITHOUT_CLASSIFICATION	4.592394764432082E-6	DEFECT
// outlinePaint	WITHOUT_CLASSIFICATION	0.9999992889511972	WITHOUT_CLASSIFICATION	7.110488028258165E-7	DEFECT
// font	WITHOUT_CLASSIFICATION	0.9999890794464322	WITHOUT_CLASSIFICATION	1.0920553567850554E-5	DEFECT
// paint	WITHOUT_CLASSIFICATION	0.9999951975017685	WITHOUT_CLASSIFICATION	4.8024982315678655E-6	DEFECT
// stroke	WITHOUT_CLASSIFICATION	0.9999968413684576	WITHOUT_CLASSIFICATION	3.158631542370813E-6	DEFECT
// shape	WITHOUT_CLASSIFICATION	0.9999964268360342	WITHOUT_CLASSIFICATION	3.5731639659618906E-6	DEFECT
// tickLabelFont	WITHOUT_CLASSIFICATION	0.999998404686076	WITHOUT_CLASSIFICATION	1.5953139239630195E-6	DEFECT
// tickLabelPaint	WITHOUT_CLASSIFICATION	0.9999992823821114	WITHOUT_CLASSIFICATION	7.176178886636318E-7	DEFECT
// outlineStroke	WITHOUT_CLASSIFICATION	0.9999985394071341	WITHOUT_CLASSIFICATION	1.4605928658831702E-6	DEFECT
// check an inherited attribute	WITHOUT_CLASSIFICATION	0.9999958954645541	WITHOUT_CLASSIFICATION	4.104535445852769E-6	DEFECT
// check that the listener lists are independent	WITHOUT_CLASSIFICATION	0.9999988454235323	WITHOUT_CLASSIFICATION	1.1545764677323932E-6	DEFECT
// check that the listener lists are independent	WITHOUT_CLASSIFICATION	0.9999988454235323	WITHOUT_CLASSIFICATION	1.1545764677323932E-6	DEFECT
// test a default instance	WITHOUT_CLASSIFICATION	0.9999962370876782	WITHOUT_CLASSIFICATION	3.76291232185601E-6	DEFECT
// test a default instance	WITHOUT_CLASSIFICATION	0.9999962370876782	WITHOUT_CLASSIFICATION	3.76291232185601E-6	DEFECT
// test a default instance	WITHOUT_CLASSIFICATION	0.9999962370876782	WITHOUT_CLASSIFICATION	3.76291232185601E-6	DEFECT
// radius	WITHOUT_CLASSIFICATION	0.999998533765808	WITHOUT_CLASSIFICATION	1.4662341919663575E-6	DEFECT
// angle	WITHOUT_CLASSIFICATION	0.9999920460345704	WITHOUT_CLASSIFICATION	7.953965429608851E-6	DEFECT
// test a customised instance	WITHOUT_CLASSIFICATION	0.9999972406127348	WITHOUT_CLASSIFICATION	2.7593872652539588E-6	DEFECT
// test a customised instance	WITHOUT_CLASSIFICATION	0.9999972406127348	WITHOUT_CLASSIFICATION	2.7593872652539588E-6	DEFECT
// test a custom instance	WITHOUT_CLASSIFICATION	0.9999932469473471	WITHOUT_CLASSIFICATION	6.753052652816546E-6	DEFECT
// majorTickIncrement	WITHOUT_CLASSIFICATION	0.9999929257871439	WITHOUT_CLASSIFICATION	7.0742128560961205E-6	DEFECT
// majorTickLength	WITHOUT_CLASSIFICATION	0.9999949138832545	WITHOUT_CLASSIFICATION	5.086116745491482E-6	DEFECT
// majorTickPaint	WITHOUT_CLASSIFICATION	0.9999981284413672	WITHOUT_CLASSIFICATION	1.8715586328231522E-6	DEFECT
// majorTickStroke	WITHOUT_CLASSIFICATION	0.9999961410991713	WITHOUT_CLASSIFICATION	3.858900828684381E-6	DEFECT
// minorTickLength	WITHOUT_CLASSIFICATION	0.9999926337709024	WITHOUT_CLASSIFICATION	7.366229097629608E-6	DEFECT
// tickLabelOffset	WITHOUT_CLASSIFICATION	0.9999991906291924	WITHOUT_CLASSIFICATION	8.093708075619935E-7	DEFECT
// try a default instance	WITHOUT_CLASSIFICATION	0.9999941310612603	WITHOUT_CLASSIFICATION	5.868938739683778E-6	DEFECT
// try a customised instance	WITHOUT_CLASSIFICATION	0.9999960829381466	WITHOUT_CLASSIFICATION	3.917061853514446E-6	DEFECT
// label	WITHOUT_CLASSIFICATION	0.9999964198425205	WITHOUT_CLASSIFICATION	3.580157479509531E-6	DEFECT
// gradient paint transformer	WITHOUT_CLASSIFICATION	0.9999982725249049	WITHOUT_CLASSIFICATION	1.7274750951249504E-6	DEFECT
// test default instance	WITHOUT_CLASSIFICATION	0.9999983557136305	WITHOUT_CLASSIFICATION	1.6442863694129646E-6	DEFECT
// have to use a concrete subclass...	WITHOUT_CLASSIFICATION	0.9999998879256919	WITHOUT_CLASSIFICATION	1.1207430804635559E-7	DEFECT
// seriesVisible	WITHOUT_CLASSIFICATION	0.9999983366014035	WITHOUT_CLASSIFICATION	1.6633985964573982E-6	DEFECT
// seriesVisibleList	WITHOUT_CLASSIFICATION	0.9999983123517578	WITHOUT_CLASSIFICATION	1.6876482422412528E-6	DEFECT
// baseSeriesVisible	WITHOUT_CLASSIFICATION	0.9999977016017534	WITHOUT_CLASSIFICATION	2.298398246619708E-6	DEFECT
// seriesVisibleInLegendList	WITHOUT_CLASSIFICATION	0.9999970556848886	WITHOUT_CLASSIFICATION	2.9443151113509425E-6	DEFECT
// baseSeriesVisibleInLegend	WITHOUT_CLASSIFICATION	0.9999958389617185	WITHOUT_CLASSIFICATION	4.161038281521108E-6	DEFECT
// paintList	WITHOUT_CLASSIFICATION	0.999996726295422	WITHOUT_CLASSIFICATION	3.2737045779986384E-6	DEFECT
// basePaint	WITHOUT_CLASSIFICATION	0.9999989768655471	WITHOUT_CLASSIFICATION	1.0231344528928886E-6	DEFECT
// baseFillPaint	WITHOUT_CLASSIFICATION	0.9999991023763003	WITHOUT_CLASSIFICATION	8.97623699745344E-7	DEFECT
// outlinePaintList	WITHOUT_CLASSIFICATION	0.9999993133895353	WITHOUT_CLASSIFICATION	6.866104648043256E-7	DEFECT
// baseOutlinePaint	WITHOUT_CLASSIFICATION	0.9999993764634687	WITHOUT_CLASSIFICATION	6.235365312269918E-7	DEFECT
// strokeList	WITHOUT_CLASSIFICATION	0.99999723270394	WITHOUT_CLASSIFICATION	2.767296059954735E-6	DEFECT
// outlineStrokeList	WITHOUT_CLASSIFICATION	0.9999991041369077	WITHOUT_CLASSIFICATION	8.958630922874642E-7	DEFECT
// baseOutlineStroke	WITHOUT_CLASSIFICATION	0.9999990360005008	WITHOUT_CLASSIFICATION	9.639994992623725E-7	DEFECT
// shapeList	WITHOUT_CLASSIFICATION	0.9999977004832653	WITHOUT_CLASSIFICATION	2.2995167347430225E-6	DEFECT
// baseShape	WITHOUT_CLASSIFICATION	0.9999971647454903	WITHOUT_CLASSIFICATION	2.835254509795367E-6	DEFECT
// itemLabelsVisibleList	WITHOUT_CLASSIFICATION	0.9999894380948025	WITHOUT_CLASSIFICATION	1.056190519742919E-5	DEFECT
// baseItemLabelsVisible	WITHOUT_CLASSIFICATION	0.9999970726455865	WITHOUT_CLASSIFICATION	2.927354413408476E-6	DEFECT
// itemLabelFont	WITHOUT_CLASSIFICATION	0.9999974598819401	WITHOUT_CLASSIFICATION	2.5401180598979032E-6	DEFECT
// baseItemLabelFont	WITHOUT_CLASSIFICATION	0.9999995430674743	WITHOUT_CLASSIFICATION	4.56932525720448E-7	DEFECT
// itemLabelPaint	WITHOUT_CLASSIFICATION	0.9999988573815604	WITHOUT_CLASSIFICATION	1.1426184396929803E-6	DEFECT
// itemLabelPaintList	WITHOUT_CLASSIFICATION	0.9999963758063137	WITHOUT_CLASSIFICATION	3.6241936862667533E-6	DEFECT
// baseItemLabelPaint	WITHOUT_CLASSIFICATION	0.9999993855992604	WITHOUT_CLASSIFICATION	6.144007396123953E-7	DEFECT
// positiveItemLabelPositionList;	WITHOUT_CLASSIFICATION	0.9999993542277249	WITHOUT_CLASSIFICATION	6.457722751875404E-7	DEFECT
// basePositiveItemLabelPosition;	WITHOUT_CLASSIFICATION	0.9999995294911213	WITHOUT_CLASSIFICATION	4.705088787134714E-7	DEFECT
// negativeItemLabelPosition;	WITHOUT_CLASSIFICATION	0.9999995095711647	WITHOUT_CLASSIFICATION	4.904288353093281E-7	DEFECT
// OUTLINE STROKE	WITHOUT_CLASSIFICATION	0.9999912647628078	WITHOUT_CLASSIFICATION	8.735237192229752E-6	DEFECT
// SHAPE	WITHOUT_CLASSIFICATION	0.999982913563321	WITHOUT_CLASSIFICATION	1.7086436678938783E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9997740141285885	WITHOUT_CLASSIFICATION	2.2598587141163236E-4	DEFECT
// baseOutlinePaint	WITHOUT_CLASSIFICATION	0.9999993764634687	WITHOUT_CLASSIFICATION	6.235365312269918E-7	DEFECT
// itemLabelAnchorOffset	WITHOUT_CLASSIFICATION	0.9999979878433942	WITHOUT_CLASSIFICATION	2.0121566057832603E-6	DEFECT
// createEntities;	WITHOUT_CLASSIFICATION	0.9999998998885725	WITHOUT_CLASSIFICATION	1.0011142753638818E-7	DEFECT
// createEntitiesList;	WITHOUT_CLASSIFICATION	0.9999996466876309	WITHOUT_CLASSIFICATION	3.533123692032179E-7	DEFECT
// legendShape	WITHOUT_CLASSIFICATION	0.9999959676038277	WITHOUT_CLASSIFICATION	4.032396172282953E-6	DEFECT
// baseLegendShape	WITHOUT_CLASSIFICATION	0.9999982558250886	WITHOUT_CLASSIFICATION	1.7441749113711858E-6	DEFECT
// legendTextFont	WITHOUT_CLASSIFICATION	0.9999952427596852	WITHOUT_CLASSIFICATION	4.757240314837513E-6	DEFECT
// baseLegendTextFont	WITHOUT_CLASSIFICATION	0.9999956794914523	WITHOUT_CLASSIFICATION	4.320508547777189E-6	DEFECT
// OUTLINE PAINT	WITHOUT_CLASSIFICATION	0.999991598193337	WITHOUT_CLASSIFICATION	8.401806662911918E-6	DEFECT
// ITEM_LABELS_VISIBLE	WITHOUT_CLASSIFICATION	0.9999556626480414	WITHOUT_CLASSIFICATION	4.433735195863692E-5	DEFECT
// ITEM_LABEL_FONT	WITHOUT_CLASSIFICATION	0.9999783854345571	WITHOUT_CLASSIFICATION	2.1614565442949817E-5	DEFECT
// POSITIVE ITEM LABEL POSITION	WITHOUT_CLASSIFICATION	0.9999542443818862	WITHOUT_CLASSIFICATION	4.5755618113853854E-5	DEFECT
// NEGATIVE ITEM LABEL ANCHOR	WITHOUT_CLASSIFICATION	0.9999499392535917	WITHOUT_CLASSIFICATION	5.0060746408332235E-5	DEFECT
// failed	WITHOUT_CLASSIFICATION	0.9999871175362013	WITHOUT_CLASSIFICATION	1.2882463798659512E-5	DEFECT
// now check autoPopulate==true	WITHOUT_CLASSIFICATION	0.9999982676032898	WITHOUT_CLASSIFICATION	1.7323967102897501E-6	DEFECT
// now check autoPopulate==true	WITHOUT_CLASSIFICATION	0.9999982676032898	WITHOUT_CLASSIFICATION	1.7323967102897501E-6	DEFECT
// now check autoPopulate==true	WITHOUT_CLASSIFICATION	0.9999982676032898	WITHOUT_CLASSIFICATION	1.7323967102897501E-6	DEFECT
/*CategoryPlot plot =*/	WITHOUT_CLASSIFICATION	0.9999631408441786	WITHOUT_CLASSIFICATION	3.6859155821373376E-5	DEFECT
/*CategoryPlot plot =*/	WITHOUT_CLASSIFICATION	0.9999631408441786	WITHOUT_CLASSIFICATION	3.6859155821373376E-5	DEFECT
/*CategoryPlot plot =*/	WITHOUT_CLASSIFICATION	0.9999631408441786	WITHOUT_CLASSIFICATION	3.6859155821373376E-5	DEFECT
// check a series with no items	WITHOUT_CLASSIFICATION	0.9999995844777101	WITHOUT_CLASSIFICATION	4.1552228997414E-7	DEFECT
// check a series with no items	WITHOUT_CLASSIFICATION	0.9999995844777101	WITHOUT_CLASSIFICATION	4.1552228997414E-7	DEFECT
// check a series with one item	WITHOUT_CLASSIFICATION	0.9999992711442709	WITHOUT_CLASSIFICATION	7.288557291391381E-7	DEFECT
// check a series with one item	WITHOUT_CLASSIFICATION	0.9999992711442709	WITHOUT_CLASSIFICATION	7.288557291391381E-7	DEFECT
// check a series with one item	WITHOUT_CLASSIFICATION	0.9999992711442709	WITHOUT_CLASSIFICATION	7.288557291391381E-7	DEFECT
// check a series with one item	WITHOUT_CLASSIFICATION	0.9999992711442709	WITHOUT_CLASSIFICATION	7.288557291391381E-7	DEFECT
// check a series with two items	WITHOUT_CLASSIFICATION	0.9999995029532419	WITHOUT_CLASSIFICATION	4.970467581156699E-7	DEFECT
// check a series with two items	WITHOUT_CLASSIFICATION	0.9999995029532419	WITHOUT_CLASSIFICATION	4.970467581156699E-7	DEFECT
// check a series with two items	WITHOUT_CLASSIFICATION	0.9999995029532419	WITHOUT_CLASSIFICATION	4.970467581156699E-7	DEFECT
// check a series with two items	WITHOUT_CLASSIFICATION	0.9999995029532419	WITHOUT_CLASSIFICATION	4.970467581156699E-7	DEFECT
// check a series with three items	WITHOUT_CLASSIFICATION	0.9999992816157827	WITHOUT_CLASSIFICATION	7.18384217476045E-7	DEFECT
// check a series with three items	WITHOUT_CLASSIFICATION	0.9999992816157827	WITHOUT_CLASSIFICATION	7.18384217476045E-7	DEFECT
// check a series with three items	WITHOUT_CLASSIFICATION	0.9999992816157827	WITHOUT_CLASSIFICATION	7.18384217476045E-7	DEFECT
// check a series with three items	WITHOUT_CLASSIFICATION	0.9999992816157827	WITHOUT_CLASSIFICATION	7.18384217476045E-7	DEFECT
// check a series with three items	WITHOUT_CLASSIFICATION	0.9999992816157827	WITHOUT_CLASSIFICATION	7.18384217476045E-7	DEFECT
// check a series with four items	WITHOUT_CLASSIFICATION	0.9999995984607356	WITHOUT_CLASSIFICATION	4.015392642844469E-7	DEFECT
// check a series with four items	WITHOUT_CLASSIFICATION	0.9999995984607356	WITHOUT_CLASSIFICATION	4.015392642844469E-7	DEFECT
// check a series with four items	WITHOUT_CLASSIFICATION	0.9999995984607356	WITHOUT_CLASSIFICATION	4.015392642844469E-7	DEFECT
// check a series with four items	WITHOUT_CLASSIFICATION	0.9999995984607356	WITHOUT_CLASSIFICATION	4.015392642844469E-7	DEFECT
// check a series with repeating items	WITHOUT_CLASSIFICATION	0.9999990001321699	WITHOUT_CLASSIFICATION	9.998678300841264E-7	DEFECT
// check a series with repeating items	WITHOUT_CLASSIFICATION	0.9999990001321699	WITHOUT_CLASSIFICATION	9.998678300841264E-7	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9997740141285885	WITHOUT_CLASSIFICATION	2.2598587141163236E-4	DEFECT
// check a series with no items	WITHOUT_CLASSIFICATION	0.9999995844777101	WITHOUT_CLASSIFICATION	4.1552228997414E-7	DEFECT
// check a series with one item	WITHOUT_CLASSIFICATION	0.9999992711442709	WITHOUT_CLASSIFICATION	7.288557291391381E-7	DEFECT
// check a series with two items	WITHOUT_CLASSIFICATION	0.9999995029532419	WITHOUT_CLASSIFICATION	4.970467581156699E-7	DEFECT
// check a series with three items	WITHOUT_CLASSIFICATION	0.9999992816157827	WITHOUT_CLASSIFICATION	7.18384217476045E-7	DEFECT
// check a series with four items	WITHOUT_CLASSIFICATION	0.9999995984607356	WITHOUT_CLASSIFICATION	4.015392642844469E-7	DEFECT
// check a series with repeating items	WITHOUT_CLASSIFICATION	0.9999990001321699	WITHOUT_CLASSIFICATION	9.998678300841264E-7	DEFECT
// we're doing this for testing only, and make sure that we // only add data in ascending order by x-value	WITHOUT_CLASSIFICATION	0.9999880330142438	WITHOUT_CLASSIFICATION	1.1966985756242023E-5	DEFECT
// we're doing this for testing only, and make sure that we // only add data in descending order by x-value	WITHOUT_CLASSIFICATION	0.9999919188310284	WITHOUT_CLASSIFICATION	8.081168971606233E-6	DEFECT
// try with gradient paint	WITHOUT_CLASSIFICATION	0.9999982541164644	WITHOUT_CLASSIFICATION	1.7458835355261152E-6	DEFECT
// should be equal...	WITHOUT_CLASSIFICATION	0.9999766000279299	WITHOUT_CLASSIFICATION	2.3399972070047195E-5	DEFECT
// should be equal...	WITHOUT_CLASSIFICATION	0.9999766000279299	WITHOUT_CLASSIFICATION	2.3399972070047195E-5	DEFECT
// and independent...	WITHOUT_CLASSIFICATION	0.9999955590376584	WITHOUT_CLASSIFICATION	4.440962341625455E-6	DEFECT
// and independent...	WITHOUT_CLASSIFICATION	0.9999955590376584	WITHOUT_CLASSIFICATION	4.440962341625455E-6	DEFECT
// and independent...	WITHOUT_CLASSIFICATION	0.9999955590376584	WITHOUT_CLASSIFICATION	4.440962341625455E-6	DEFECT
// an empty dataset should return a null range	WITHOUT_CLASSIFICATION	0.9999838486668315	WITHOUT_CLASSIFICATION	1.615133316848508E-5	DEFECT
// an empty dataset should return a null range	WITHOUT_CLASSIFICATION	0.9999838486668315	WITHOUT_CLASSIFICATION	1.615133316848508E-5	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9999757432579782	WITHOUT_CLASSIFICATION	2.42567420216689E-5	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9999757432579782	WITHOUT_CLASSIFICATION	2.42567420216689E-5	DEFECT
// the renderer should not be equal to a BarRenderer	WITHOUT_CLASSIFICATION	0.9999913756164639	WITHOUT_CLASSIFICATION	8.624383536213304E-6	DEFECT
// firstBarPaint;	WITHOUT_CLASSIFICATION	0.9999992323452644	WITHOUT_CLASSIFICATION	7.676547356303643E-7	DEFECT
// lastBarPaint;	WITHOUT_CLASSIFICATION	0.9999994903012966	WITHOUT_CLASSIFICATION	5.096987033102405E-7	DEFECT
// positiveBarPaint;	WITHOUT_CLASSIFICATION	0.9999992785030543	WITHOUT_CLASSIFICATION	7.214969457206273E-7	DEFECT
//private Paint negativeBarPaint;	WITHOUT_CLASSIFICATION	0.9999881734901866	WITHOUT_CLASSIFICATION	1.1826509813305956E-5	DEFECT
// quick check for independence	WITHOUT_CLASSIFICATION	0.9999961829064752	WITHOUT_CLASSIFICATION	3.817093524843611E-6	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9997740141285885	WITHOUT_CLASSIFICATION	2.2598587141163236E-4	DEFECT
// shadowXOffset	WITHOUT_CLASSIFICATION	0.9999980882086211	WITHOUT_CLASSIFICATION	1.9117913787803248E-6	DEFECT
// shadowYOffset	WITHOUT_CLASSIFICATION	0.9999988225306758	WITHOUT_CLASSIFICATION	1.1774693240998572E-6	DEFECT
// toolTipGenerator	WITHOUT_CLASSIFICATION	0.9999991573425303	WITHOUT_CLASSIFICATION	8.426574697249072E-7	DEFECT
// urlGenerator	WITHOUT_CLASSIFICATION	0.9999988118212628	WITHOUT_CLASSIFICATION	1.1881787372413586E-6	DEFECT
// should be equal...	WITHOUT_CLASSIFICATION	0.9999766000279299	WITHOUT_CLASSIFICATION	2.3399972070047195E-5	DEFECT
// and independent...	WITHOUT_CLASSIFICATION	0.9999955590376584	WITHOUT_CLASSIFICATION	4.440962341625455E-6	DEFECT
// an empty dataset should return a null range	WITHOUT_CLASSIFICATION	0.9999838486668315	WITHOUT_CLASSIFICATION	1.615133316848508E-5	DEFECT
// an empty dataset should return a null range	WITHOUT_CLASSIFICATION	0.9999838486668315	WITHOUT_CLASSIFICATION	1.615133316848508E-5	DEFECT
// an empty dataset should return a null range	WITHOUT_CLASSIFICATION	0.9999838486668315	WITHOUT_CLASSIFICATION	1.615133316848508E-5	DEFECT
// an empty dataset should return a null range	WITHOUT_CLASSIFICATION	0.9999838486668315	WITHOUT_CLASSIFICATION	1.615133316848508E-5	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9999757432579782	WITHOUT_CLASSIFICATION	2.42567420216689E-5	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9999757432579782	WITHOUT_CLASSIFICATION	2.42567420216689E-5	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9999757432579782	WITHOUT_CLASSIFICATION	2.42567420216689E-5	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9999757432579782	WITHOUT_CLASSIFICATION	2.42567420216689E-5	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9999757432579782	WITHOUT_CLASSIFICATION	2.42567420216689E-5	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9999757432579782	WITHOUT_CLASSIFICATION	2.42567420216689E-5	DEFECT
// check that the series visible flag is observed	WITHOUT_CLASSIFICATION	0.999996843713254	WITHOUT_CLASSIFICATION	3.1562867460947476E-6	DEFECT
// map	WITHOUT_CLASSIFICATION	0.9999937541384124	WITHOUT_CLASSIFICATION	6.245861587543553E-6	DEFECT
// toolTipGeneratorList	WITHOUT_CLASSIFICATION	0.9999979229037953	WITHOUT_CLASSIFICATION	2.0770962046611467E-6	DEFECT
// baseToolTipGenerator	WITHOUT_CLASSIFICATION	0.9999987430161147	WITHOUT_CLASSIFICATION	1.2569838852338218E-6	DEFECT
// itemLabelGenerator	WITHOUT_CLASSIFICATION	0.9999968431743037	WITHOUT_CLASSIFICATION	3.1568256962621584E-6	DEFECT
// itemLabelGeneratorList	WITHOUT_CLASSIFICATION	0.9999969721393758	WITHOUT_CLASSIFICATION	3.0278606242453327E-6	DEFECT
// baseItemLabelGenerator	WITHOUT_CLASSIFICATION	0.9999994321299112	WITHOUT_CLASSIFICATION	5.678700887879787E-7	DEFECT
// urlGeneratorList	WITHOUT_CLASSIFICATION	0.9999989629019491	WITHOUT_CLASSIFICATION	1.037098050931182E-6	DEFECT
// baseItemURLGenerator	WITHOUT_CLASSIFICATION	0.9999985904241488	WITHOUT_CLASSIFICATION	1.4095758511390457E-6	DEFECT
// legendItemLabelGenerator	WITHOUT_CLASSIFICATION	0.9999987057218352	WITHOUT_CLASSIFICATION	1.2942781647476182E-6	DEFECT
// legendItemToolTipGenerator	WITHOUT_CLASSIFICATION	0.9999979875431287	WITHOUT_CLASSIFICATION	2.0124568713565493E-6	DEFECT
// legendItemURLGenerator	WITHOUT_CLASSIFICATION	0.9999977264304705	WITHOUT_CLASSIFICATION	2.2735695296201247E-6	DEFECT
// check that the generator has been cloned	WITHOUT_CLASSIFICATION	0.9999994083178746	WITHOUT_CLASSIFICATION	5.916821254184876E-7	DEFECT
// check that the generator has been cloned	WITHOUT_CLASSIFICATION	0.9999994083178746	WITHOUT_CLASSIFICATION	5.916821254184876E-7	DEFECT
// check that the generator has been cloned	WITHOUT_CLASSIFICATION	0.9999994083178746	WITHOUT_CLASSIFICATION	5.916821254184876E-7	DEFECT
// base value	WITHOUT_CLASSIFICATION	0.9999962942282213	WITHOUT_CLASSIFICATION	3.705771778743271E-6	DEFECT
// itemMargin	WITHOUT_CLASSIFICATION	0.9999958322225235	WITHOUT_CLASSIFICATION	4.167777476382119E-6	DEFECT
// drawBarOutline	WITHOUT_CLASSIFICATION	0.9999984578691697	WITHOUT_CLASSIFICATION	1.5421308302508656E-6	DEFECT
// maximumBarWidth	WITHOUT_CLASSIFICATION	0.9999984169581274	WITHOUT_CLASSIFICATION	1.5830418725569292E-6	DEFECT
// minimumBarLength	WITHOUT_CLASSIFICATION	0.9999971376052917	WITHOUT_CLASSIFICATION	2.8623947083446918E-6	DEFECT
// gradientPaintTransformer	WITHOUT_CLASSIFICATION	0.9999986822081621	WITHOUT_CLASSIFICATION	1.317791837910595E-6	DEFECT
// positiveItemLabelPositionFallback	WITHOUT_CLASSIFICATION	0.9999986482453755	WITHOUT_CLASSIFICATION	1.351754624463918E-6	DEFECT
// negativeItemLabelPositionFallback	WITHOUT_CLASSIFICATION	0.9999990861640307	WITHOUT_CLASSIFICATION	9.138359692877033E-7	DEFECT
// barPainter	WITHOUT_CLASSIFICATION	0.9999989486448524	WITHOUT_CLASSIFICATION	1.0513551476592756E-6	DEFECT
// shadowsVisible	WITHOUT_CLASSIFICATION	0.9999983597065222	WITHOUT_CLASSIFICATION	1.6402934777496891E-6	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999917400541091	WITHOUT_CLASSIFICATION	8.259945890952432E-6	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9997740141285885	WITHOUT_CLASSIFICATION	2.2598587141163236E-4	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9997740141285885	WITHOUT_CLASSIFICATION	2.2598587141163236E-4	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9997740141285885	WITHOUT_CLASSIFICATION	2.2598587141163236E-4	DEFECT
// shadowXOffset	WITHOUT_CLASSIFICATION	0.9999980882086211	WITHOUT_CLASSIFICATION	1.9117913787803248E-6	DEFECT
// shadowYOffset	WITHOUT_CLASSIFICATION	0.9999988225306758	WITHOUT_CLASSIFICATION	1.1774693240998572E-6	DEFECT
// an empty dataset should return a null range	WITHOUT_CLASSIFICATION	0.9999838486668315	WITHOUT_CLASSIFICATION	1.615133316848508E-5	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9999757432579782	WITHOUT_CLASSIFICATION	2.42567420216689E-5	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9999757432579782	WITHOUT_CLASSIFICATION	2.42567420216689E-5	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9999757432579782	WITHOUT_CLASSIFICATION	2.42567420216689E-5	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9999757432579782	WITHOUT_CLASSIFICATION	2.42567420216689E-5	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9999757432579782	WITHOUT_CLASSIFICATION	2.42567420216689E-5	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9999757432579782	WITHOUT_CLASSIFICATION	2.42567420216689E-5	DEFECT
// check that the series visible flag is observed	WITHOUT_CLASSIFICATION	0.999996843713254	WITHOUT_CLASSIFICATION	3.1562867460947476E-6	DEFECT
// barPainter	WITHOUT_CLASSIFICATION	0.9999989486448524	WITHOUT_CLASSIFICATION	1.0513551476592756E-6	DEFECT
// shadowsVisible	WITHOUT_CLASSIFICATION	0.9999983597065222	WITHOUT_CLASSIFICATION	1.6402934777496891E-6	DEFECT
// try null argument	WITHOUT_CLASSIFICATION	0.9999969185833123	WITHOUT_CLASSIFICATION	3.0814166875916863E-6	DEFECT
// default instances	WITHOUT_CLASSIFICATION	0.9999985620541428	WITHOUT_CLASSIFICATION	1.4379458570960646E-6	DEFECT
// default instances	WITHOUT_CLASSIFICATION	0.9999985620541428	WITHOUT_CLASSIFICATION	1.4379458570960646E-6	DEFECT
// check that super class fields are being looked at...	WITHOUT_CLASSIFICATION	0.9999996136304254	WITHOUT_CLASSIFICATION	3.8636957452277855E-7	DEFECT
// setUseYInterval	WITHOUT_CLASSIFICATION	0.9999997666542833	WITHOUT_CLASSIFICATION	2.3334571670004897E-7	DEFECT
// setBase()	WITHOUT_CLASSIFICATION	0.9999985416546171	WITHOUT_CLASSIFICATION	1.4583453829451509E-6	DEFECT
// try empty dataset	WITHOUT_CLASSIFICATION	0.9999993980326878	WITHOUT_CLASSIFICATION	6.019673122928588E-7	DEFECT
// setGradientPaintTransformer()	WITHOUT_CLASSIFICATION	0.9999993585257819	WITHOUT_CLASSIFICATION	6.414742179860147E-7	DEFECT
// setDrawBarOutline()	WITHOUT_CLASSIFICATION	0.9999988935222905	WITHOUT_CLASSIFICATION	1.1064777094458644E-6	DEFECT
// setMargin()	WITHOUT_CLASSIFICATION	0.9999991075136432	WITHOUT_CLASSIFICATION	8.924863567503246E-7	DEFECT
// legendBar	WITHOUT_CLASSIFICATION	0.9999982263839233	WITHOUT_CLASSIFICATION	1.7736160767214264E-6	DEFECT
// positiveItemLabelFallbackPosition	WITHOUT_CLASSIFICATION	0.9999974534220494	WITHOUT_CLASSIFICATION	2.54657795049976E-6	DEFECT
// negativeItemLabelFallbackPosition	WITHOUT_CLASSIFICATION	0.9999982784187393	WITHOUT_CLASSIFICATION	1.721581260709995E-6	DEFECT
// check a list containing a non-Number object	WITHOUT_CLASSIFICATION	0.9999996605220464	WITHOUT_CLASSIFICATION	3.394779536587372E-7	DEFECT
// try something from the base class	WITHOUT_CLASSIFICATION	0.9999995598370757	WITHOUT_CLASSIFICATION	4.401629243136592E-7	DEFECT
// positive paint	WITHOUT_CLASSIFICATION	0.9999956535958313	WITHOUT_CLASSIFICATION	4.3464041687038635E-6	DEFECT
// negative paint	WITHOUT_CLASSIFICATION	0.9999962879603448	WITHOUT_CLASSIFICATION	3.712039655183792E-6	DEFECT
// shapesVisible	WITHOUT_CLASSIFICATION	0.999997582389264	WITHOUT_CLASSIFICATION	2.417610736056764E-6	DEFECT
// legendLine	WITHOUT_CLASSIFICATION	0.9999963060020451	WITHOUT_CLASSIFICATION	3.6939979549520533E-6	DEFECT
// roundXCoordinates	WITHOUT_CLASSIFICATION	0.9999994595859073	WITHOUT_CLASSIFICATION	5.404140925973691E-7	DEFECT
// drawOpenTicks	WITHOUT_CLASSIFICATION	0.9999984813454594	WITHOUT_CLASSIFICATION	1.5186545406706096E-6	DEFECT
// drawCloseTicks	WITHOUT_CLASSIFICATION	0.9999995830454207	WITHOUT_CLASSIFICATION	4.169545793475341E-7	DEFECT
// openTickPaint	WITHOUT_CLASSIFICATION	0.9999978604263778	WITHOUT_CLASSIFICATION	2.1395736220822406E-6	DEFECT
// closeTickPaint	WITHOUT_CLASSIFICATION	0.9999995929693912	WITHOUT_CLASSIFICATION	4.070306087545986E-7	DEFECT
// tickLength	WITHOUT_CLASSIFICATION	0.9999910017408219	WITHOUT_CLASSIFICATION	8.99825917800758E-6	DEFECT
// try an empty dataset - should return a null range	WITHOUT_CLASSIFICATION	0.9999782631191138	WITHOUT_CLASSIFICATION	2.1736880886175513E-5	DEFECT
// try a null dataset - should return a null range	WITHOUT_CLASSIFICATION	0.9999817922654577	WITHOUT_CLASSIFICATION	1.8207734542352098E-5	DEFECT
// drawXError	WITHOUT_CLASSIFICATION	0.9999925010092001	WITHOUT_CLASSIFICATION	7.498990799895877E-6	DEFECT
// drawYError	WITHOUT_CLASSIFICATION	0.999995352758656	WITHOUT_CLASSIFICATION	4.647241344030059E-6	DEFECT
// capLength	WITHOUT_CLASSIFICATION	0.9999967246805062	WITHOUT_CLASSIFICATION	3.275319493787409E-6	DEFECT
// errorPaint	WITHOUT_CLASSIFICATION	0.9999922004612783	WITHOUT_CLASSIFICATION	7.79953872172708E-6	DEFECT
// errorStroke	WITHOUT_CLASSIFICATION	0.9999691506473306	WITHOUT_CLASSIFICATION	3.0849352669418756E-5	DEFECT
// check boxPaint null also	WITHOUT_CLASSIFICATION	0.9999919231346669	WITHOUT_CLASSIFICATION	8.076865333100258E-6	DEFECT
// upPaint	WITHOUT_CLASSIFICATION	0.9999981131248603	WITHOUT_CLASSIFICATION	1.8868751397001337E-6	DEFECT
// downPaint	WITHOUT_CLASSIFICATION	0.9999959516690705	WITHOUT_CLASSIFICATION	4.048330929559039E-6	DEFECT
// drawVolume	WITHOUT_CLASSIFICATION	0.9999988473525531	WITHOUT_CLASSIFICATION	1.1526474468687415E-6	DEFECT
// candleWidth	WITHOUT_CLASSIFICATION	0.9999990253109315	WITHOUT_CLASSIFICATION	9.746890685209082E-7	DEFECT
// maxCandleWidthInMilliseconds	WITHOUT_CLASSIFICATION	0.9999988918042232	WITHOUT_CLASSIFICATION	1.1081957768097099E-6	DEFECT
// autoWidthMethod	WITHOUT_CLASSIFICATION	0.9999736602779482	WITHOUT_CLASSIFICATION	2.6339722051816883E-5	DEFECT
// autoWidthFactor	WITHOUT_CLASSIFICATION	0.9999987964535272	WITHOUT_CLASSIFICATION	1.2035464729270558E-6	DEFECT
// backgroundPaint	WITHOUT_CLASSIFICATION	0.999999148613729	WITHOUT_CLASSIFICATION	8.513862710123147E-7	DEFECT
// padding	WITHOUT_CLASSIFICATION	0.9999861838533883	WITHOUT_CLASSIFICATION	1.3816146611710348E-5	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999917400541091	WITHOUT_CLASSIFICATION	8.259945890952432E-6	DEFECT
// fillPaintTransformer	WITHOUT_CLASSIFICATION	0.9999955090629479	WITHOUT_CLASSIFICATION	4.490937052095851E-6	DEFECT
// fillPaint	WITHOUT_CLASSIFICATION	0.9999970415645008	WITHOUT_CLASSIFICATION	2.9584354993289326E-6	DEFECT
// outlinePaint	WITHOUT_CLASSIFICATION	0.9999992889511972	WITHOUT_CLASSIFICATION	7.110488028258165E-7	DEFECT
// linePaint	WITHOUT_CLASSIFICATION	0.9999972249380603	WITHOUT_CLASSIFICATION	2.7750619397718745E-6	DEFECT
// paint	WITHOUT_CLASSIFICATION	0.9999951975017685	WITHOUT_CLASSIFICATION	4.8024982315678655E-6	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9997740141285885	WITHOUT_CLASSIFICATION	2.2598587141163236E-4	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9997740141285885	WITHOUT_CLASSIFICATION	2.2598587141163236E-4	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9997740141285885	WITHOUT_CLASSIFICATION	2.2598587141163236E-4	DEFECT
// shape	WITHOUT_CLASSIFICATION	0.9999964268360342	WITHOUT_CLASSIFICATION	3.5731639659618906E-6	DEFECT
// outlineStroke	WITHOUT_CLASSIFICATION	0.9999985394071341	WITHOUT_CLASSIFICATION	1.4605928658831702E-6	DEFECT
// axisLocation	WITHOUT_CLASSIFICATION	0.9999948383936508	WITHOUT_CLASSIFICATION	5.161606349260159E-6	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9999757432579782	WITHOUT_CLASSIFICATION	2.42567420216689E-5	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9999757432579782	WITHOUT_CLASSIFICATION	2.42567420216689E-5	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9999757432579782	WITHOUT_CLASSIFICATION	2.42567420216689E-5	DEFECT
// check that the generator has been cloned	WITHOUT_CLASSIFICATION	0.9999994083178746	WITHOUT_CLASSIFICATION	5.916821254184876E-7	DEFECT
// check that the generator has been cloned	WITHOUT_CLASSIFICATION	0.9999994083178746	WITHOUT_CLASSIFICATION	5.916821254184876E-7	DEFECT
// check that the generator has been cloned	WITHOUT_CLASSIFICATION	0.9999994083178746	WITHOUT_CLASSIFICATION	5.916821254184876E-7	DEFECT
// default instances	WITHOUT_CLASSIFICATION	0.9999985620541428	WITHOUT_CLASSIFICATION	1.4379458570960646E-6	DEFECT
// default instances	WITHOUT_CLASSIFICATION	0.9999985620541428	WITHOUT_CLASSIFICATION	1.4379458570960646E-6	DEFECT
// default instances	WITHOUT_CLASSIFICATION	0.9999985620541428	WITHOUT_CLASSIFICATION	1.4379458570960646E-6	DEFECT
// try an empty dataset - should return a null range	WITHOUT_CLASSIFICATION	0.9999782631191138	WITHOUT_CLASSIFICATION	2.1736880886175513E-5	DEFECT
// try a null dataset - should return a null range	WITHOUT_CLASSIFICATION	0.9999817922654577	WITHOUT_CLASSIFICATION	1.8207734542352098E-5	DEFECT
// locale shouldn't matter here	WITHOUT_CLASSIFICATION	0.9999610503252078	WITHOUT_CLASSIFICATION	3.8949674792171484E-5	DEFECT
// autoWidthGap	WITHOUT_CLASSIFICATION	0.9999984806805499	WITHOUT_CLASSIFICATION	1.519319450219189E-6	DEFECT
// check that a null dataset returns null bounds	WITHOUT_CLASSIFICATION	0.9999992172734355	WITHOUT_CLASSIFICATION	7.827265643311178E-7	DEFECT
// check that a null dataset returns null bounds	WITHOUT_CLASSIFICATION	0.9999992172734355	WITHOUT_CLASSIFICATION	7.827265643311178E-7	DEFECT
// check the bounds of a simple dataset	WITHOUT_CLASSIFICATION	0.9999999174229109	WITHOUT_CLASSIFICATION	8.257708910488087E-8	DEFECT
// test findDomainBounds as well	WITHOUT_CLASSIFICATION	0.9999902135429208	WITHOUT_CLASSIFICATION	9.78645707914924E-6	DEFECT
// blockHeight	WITHOUT_CLASSIFICATION	0.9999958340110036	WITHOUT_CLASSIFICATION	4.1659889964654445E-6	DEFECT
// blockWidth	WITHOUT_CLASSIFICATION	0.9999946150995666	WITHOUT_CLASSIFICATION	5.384900433474301E-6	DEFECT
// paintScale	WITHOUT_CLASSIFICATION	0.9999975885924629	WITHOUT_CLASSIFICATION	2.4114075371338617E-6	DEFECT
// paintScale	WITHOUT_CLASSIFICATION	0.9999975885924629	WITHOUT_CLASSIFICATION	2.4114075371338617E-6	DEFECT
// the following fields are inherited from the AbstractXYItemRenderer	WITHOUT_CLASSIFICATION	0.9999986858787272	WITHOUT_CLASSIFICATION	1.314121272795438E-6	DEFECT
// axis	WITHOUT_CLASSIFICATION	0.9999961838016217	WITHOUT_CLASSIFICATION	3.816198378377298E-6	DEFECT
// axisOffset	WITHOUT_CLASSIFICATION	0.9999964057305245	WITHOUT_CLASSIFICATION	3.5942694755393202E-6	DEFECT
// stripWidth	WITHOUT_CLASSIFICATION	0.999999115712481	WITHOUT_CLASSIFICATION	8.842875189137143E-7	DEFECT
// stripOutlineVisible	WITHOUT_CLASSIFICATION	0.999996986454845	WITHOUT_CLASSIFICATION	3.0135451550517893E-6	DEFECT
// stripOutlinePaint	WITHOUT_CLASSIFICATION	0.9999997689714383	WITHOUT_CLASSIFICATION	2.310285618714219E-7	DEFECT
// stripOutlineStroke	WITHOUT_CLASSIFICATION	0.999997599072582	WITHOUT_CLASSIFICATION	2.4009274178722673E-6	DEFECT
// shapeVisible	WITHOUT_CLASSIFICATION	0.9999975267720885	WITHOUT_CLASSIFICATION	2.4732279113631247E-6	DEFECT
// shapeFilled	WITHOUT_CLASSIFICATION	0.9999987978865971	WITHOUT_CLASSIFICATION	1.2021134029782428E-6	DEFECT
// shapeOutlineVisible	WITHOUT_CLASSIFICATION	0.9999944647020464	WITHOUT_CLASSIFICATION	5.535297953604141E-6	DEFECT
// shapeAnchor	WITHOUT_CLASSIFICATION	0.9999990397959	WITHOUT_CLASSIFICATION	9.602041000367921E-7	DEFECT
// shapeLocation	WITHOUT_CLASSIFICATION	0.99999752309311	WITHOUT_CLASSIFICATION	2.476906890145696E-6	DEFECT
// line	WITHOUT_CLASSIFICATION	0.9999897443689759	WITHOUT_CLASSIFICATION	1.025563102413207E-5	DEFECT
// lineStroke	WITHOUT_CLASSIFICATION	0.9999940633263977	WITHOUT_CLASSIFICATION	5.936673602296808E-6	DEFECT
// maximumLinesToDisplay	WITHOUT_CLASSIFICATION	0.9999950409028213	WITHOUT_CLASSIFICATION	4.959097178727708E-6	DEFECT
// toolTipText	WITHOUT_CLASSIFICATION	0.9999983077309964	WITHOUT_CLASSIFICATION	1.6922690036230954E-6	DEFECT
// expandToFitSpace	WITHOUT_CLASSIFICATION	0.9999980826282117	WITHOUT_CLASSIFICATION	1.9173717883352664E-6	DEFECT
// margin	WITHOUT_CLASSIFICATION	0.9999977633292094	WITHOUT_CLASSIFICATION	2.236670790487478E-6	DEFECT
// border	WITHOUT_CLASSIFICATION	0.9999935491698282	WITHOUT_CLASSIFICATION	6.450830171883683E-6	DEFECT
// is the clone independent	WITHOUT_CLASSIFICATION	0.9999797497679257	WITHOUT_CLASSIFICATION	2.0250232074406615E-5	DEFECT
// case 1 - object is mutable but not PublicCloneable	WITHOUT_CLASSIFICATION	0.9999924580755953	WITHOUT_CLASSIFICATION	7.541924404693765E-6	DEFECT
// simple case	WITHOUT_CLASSIFICATION	0.9999990443314702	WITHOUT_CLASSIFICATION	9.55668529755141E-7	DEFECT
// try a null value	WITHOUT_CLASSIFICATION	0.9999822234916528	WITHOUT_CLASSIFICATION	1.7776508347191687E-5	DEFECT
// try null argument	WITHOUT_CLASSIFICATION	0.9999969185833123	WITHOUT_CLASSIFICATION	3.0814166875916863E-6	DEFECT
// you can add a null list - it would have been better if this // required EMPTY_LIST	WITHOUT_CLASSIFICATION	0.9994836870982418	WITHOUT_CLASSIFICATION	5.163129017582737E-4	DEFECT
// case 1 - object is mutable but not PublicCloneable	WITHOUT_CLASSIFICATION	0.9999924580755953	WITHOUT_CLASSIFICATION	7.541924404693765E-6	DEFECT
// if we modify the original list, it's best if the URL generator is // not affected	WITHOUT_CLASSIFICATION	0.9999996370204547	WITHOUT_CLASSIFICATION	3.629795452465502E-7	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999924735504521	WITHOUT_CLASSIFICATION	7.526449547970881E-6	DEFECT
// the clone contains a reference to the original object	WITHOUT_CLASSIFICATION	0.9999998681359256	WITHOUT_CLASSIFICATION	1.3186407443999666E-7	DEFECT
// the clone contains a reference to the original object	WITHOUT_CLASSIFICATION	0.9999998681359256	WITHOUT_CLASSIFICATION	1.3186407443999666E-7	DEFECT
// CASE 2 - object is mutable AND PublicCloneable	WITHOUT_CLASSIFICATION	0.99999500156937	WITHOUT_CLASSIFICATION	4.998430629893584E-6	DEFECT
// CASE 2 - object is mutable AND PublicCloneable	WITHOUT_CLASSIFICATION	0.99999500156937	WITHOUT_CLASSIFICATION	4.998430629893584E-6	DEFECT
// the clone contains a reference to a CLONE of the original object	WITHOUT_CLASSIFICATION	0.999999913026037	WITHOUT_CLASSIFICATION	8.697396300596207E-8	DEFECT
// check that clone is independent of the original	WITHOUT_CLASSIFICATION	0.9999999627699333	WITHOUT_CLASSIFICATION	3.72300666387979E-8	DEFECT
// check sorted rows	WITHOUT_CLASSIFICATION	0.9999998822817805	WITHOUT_CLASSIFICATION	1.1771821953101643E-7	DEFECT
// check for unknown column	WITHOUT_CLASSIFICATION	0.9999993621143808	WITHOUT_CLASSIFICATION	6.378856192774605E-7	DEFECT
// try null key	WITHOUT_CLASSIFICATION	0.999980127789168	WITHOUT_CLASSIFICATION	1.9872210831957235E-5	DEFECT
// try null key	WITHOUT_CLASSIFICATION	0.999980127789168	WITHOUT_CLASSIFICATION	1.9872210831957235E-5	DEFECT
/*v =*/	WITHOUT_CLASSIFICATION	0.9998557093574093	WITHOUT_CLASSIFICATION	1.4429064259075124E-4	DEFECT
// confirm that the clone is independent of the original	WITHOUT_CLASSIFICATION	0.9999999602075552	WITHOUT_CLASSIFICATION	3.979244487643326E-8	DEFECT
// check null argument 1	WITHOUT_CLASSIFICATION	0.999997746122982	WITHOUT_CLASSIFICATION	2.2538770180927357E-6	DEFECT
/* ComparableObjectItem item1 = */	WITHOUT_CLASSIFICATION	0.9999931992384471	WITHOUT_CLASSIFICATION	6.800761553001264E-6	DEFECT
// check key order	WITHOUT_CLASSIFICATION	0.9999969290443321	WITHOUT_CLASSIFICATION	3.0709556677931482E-6	DEFECT
// check retrieve value by index	WITHOUT_CLASSIFICATION	0.9999968531948646	WITHOUT_CLASSIFICATION	3.1468051353437605E-6	DEFECT
// retrieve an item	WITHOUT_CLASSIFICATION	0.9999920165272254	WITHOUT_CLASSIFICATION	7.983472774575058E-6	DEFECT
// request with a negative index	WITHOUT_CLASSIFICATION	0.9999919075522105	WITHOUT_CLASSIFICATION	8.092447789559743E-6	DEFECT
// request with a negative index	WITHOUT_CLASSIFICATION	0.9999919075522105	WITHOUT_CLASSIFICATION	8.092447789559743E-6	DEFECT
// request width index == itemCount	WITHOUT_CLASSIFICATION	0.9999978240836885	WITHOUT_CLASSIFICATION	2.175916311386943E-6	DEFECT
// check null argument	WITHOUT_CLASSIFICATION	0.9999981381387743	WITHOUT_CLASSIFICATION	1.8618612256715855E-6	DEFECT
// replace an existing value	WITHOUT_CLASSIFICATION	0.9999889088987898	WITHOUT_CLASSIFICATION	1.1091101210180683E-5	DEFECT
// try a null key - should throw an exception	WITHOUT_CLASSIFICATION	0.99950664120129	WITHOUT_CLASSIFICATION	4.933587987100532E-4	DEFECT
// try unknown key	WITHOUT_CLASSIFICATION	0.9999866608075676	WITHOUT_CLASSIFICATION	1.3339192432485574E-5	DEFECT
// try negative key index	WITHOUT_CLASSIFICATION	0.9999130027567847	WITHOUT_CLASSIFICATION	8.69972432153308E-5	DEFECT
// try key index == itemCount	WITHOUT_CLASSIFICATION	0.999972334224813	WITHOUT_CLASSIFICATION	2.7665775186941002E-5	DEFECT
/*Range r2 =*/	WITHOUT_CLASSIFICATION	0.9999170465859146	WITHOUT_CLASSIFICATION	8.29534140853906E-5	DEFECT
// Expand by 0% does not change the range	WITHOUT_CLASSIFICATION	0.9999955253668235	WITHOUT_CLASSIFICATION	4.47463317647933E-6	DEFECT
// Lower > upper: mid point is used	WITHOUT_CLASSIFICATION	0.9999981892609549	WITHOUT_CLASSIFICATION	1.8107390450900332E-6	DEFECT
// Shifting with a delta of 0 does not change the range	WITHOUT_CLASSIFICATION	0.9999993802422807	WITHOUT_CLASSIFICATION	6.197577192661221E-7	DEFECT
// Scaling with a factor of 1 does not change the range	WITHOUT_CLASSIFICATION	0.9999984621655993	WITHOUT_CLASSIFICATION	1.537834400739568E-6	DEFECT
/*s1 = */	WITHOUT_CLASSIFICATION	0.9999452031821933	WITHOUT_CLASSIFICATION	5.479681780664095E-5	DEFECT
// key	WITHOUT_CLASSIFICATION	0.9999754974519676	WITHOUT_CLASSIFICATION	2.450254803246169E-5	DEFECT
// autoSort	WITHOUT_CLASSIFICATION	0.9999980758113831	WITHOUT_CLASSIFICATION	1.924188616901048E-6	DEFECT
// add a value	WITHOUT_CLASSIFICATION	0.9999900983421013	WITHOUT_CLASSIFICATION	9.901657898691814E-6	DEFECT
// add another value	WITHOUT_CLASSIFICATION	0.999998107646344	WITHOUT_CLASSIFICATION	1.8923536560990426E-6	DEFECT
// remove an item	WITHOUT_CLASSIFICATION	0.9999891769563086	WITHOUT_CLASSIFICATION	1.0823043691474151E-5	DEFECT
// map a key to a new group	WITHOUT_CLASSIFICATION	0.9999912602593859	WITHOUT_CLASSIFICATION	8.73974061416253E-6	DEFECT
// clear a mapping	WITHOUT_CLASSIFICATION	0.9999969530236886	WITHOUT_CLASSIFICATION	3.0469763113531686E-6	DEFECT
// check handling of null key	WITHOUT_CLASSIFICATION	0.9999969466635248	WITHOUT_CLASSIFICATION	3.053336475187451E-6	DEFECT
// a new map always has 1 group (the default group)	WITHOUT_CLASSIFICATION	0.999999313046636	WITHOUT_CLASSIFICATION	6.869533640746395E-7	DEFECT
// now overwrite group "G2"...	WITHOUT_CLASSIFICATION	0.9999992933882751	WITHOUT_CLASSIFICATION	7.06611724911558E-7	DEFECT
// if there is an explicit mapping to the default group, it is counted	WITHOUT_CLASSIFICATION	0.9999994616369614	WITHOUT_CLASSIFICATION	5.383630385646965E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999917400541091	WITHOUT_CLASSIFICATION	8.259945890952432E-6	DEFECT
// confirm that the clone is independent of the original	WITHOUT_CLASSIFICATION	0.9999999602075552	WITHOUT_CLASSIFICATION	3.979244487643326E-8	DEFECT
// check key order	WITHOUT_CLASSIFICATION	0.9999969290443321	WITHOUT_CLASSIFICATION	3.0709556677931482E-6	DEFECT
// check key order	WITHOUT_CLASSIFICATION	0.9999969290443321	WITHOUT_CLASSIFICATION	3.0709556677931482E-6	DEFECT
// check retrieve value by key	WITHOUT_CLASSIFICATION	0.9999944503804522	WITHOUT_CLASSIFICATION	5.549619547761523E-6	DEFECT
// check retrieve value by key	WITHOUT_CLASSIFICATION	0.9999944503804522	WITHOUT_CLASSIFICATION	5.549619547761523E-6	DEFECT
// check retrieve value by key	WITHOUT_CLASSIFICATION	0.9999944503804522	WITHOUT_CLASSIFICATION	5.549619547761523E-6	DEFECT
// check retrieve value by key	WITHOUT_CLASSIFICATION	0.9999944503804522	WITHOUT_CLASSIFICATION	5.549619547761523E-6	DEFECT
// check retrieve value by index	WITHOUT_CLASSIFICATION	0.9999968531948646	WITHOUT_CLASSIFICATION	3.1468051353437605E-6	DEFECT
// check retrieve value by index	WITHOUT_CLASSIFICATION	0.9999968531948646	WITHOUT_CLASSIFICATION	3.1468051353437605E-6	DEFECT
// check retrieve value by index	WITHOUT_CLASSIFICATION	0.9999968531948646	WITHOUT_CLASSIFICATION	3.1468051353437605E-6	DEFECT
// check retrieve value by index	WITHOUT_CLASSIFICATION	0.9999968531948646	WITHOUT_CLASSIFICATION	3.1468051353437605E-6	DEFECT
// now overwrite group "G2"...	WITHOUT_CLASSIFICATION	0.9999992933882751	WITHOUT_CLASSIFICATION	7.06611724911558E-7	DEFECT
// if the default group is not mapped to, it should still count towards // the group count...	WITHOUT_CLASSIFICATION	0.9999997126974374	WITHOUT_CLASSIFICATION	2.8730256260072817E-7	DEFECT
// now when the default group is mapped to, it shouldn't increase the // group count...	WITHOUT_CLASSIFICATION	0.999998103719504	WITHOUT_CLASSIFICATION	1.8962804959596278E-6	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999924735504521	WITHOUT_CLASSIFICATION	7.526449547970881E-6	DEFECT
// the default group is always at index 0	WITHOUT_CLASSIFICATION	0.9999926139678005	WITHOUT_CLASSIFICATION	7.38603219946185E-6	DEFECT
// a non-existent group should return -1	WITHOUT_CLASSIFICATION	0.9999993661466404	WITHOUT_CLASSIFICATION	6.338533594980442E-7	DEFECT
// indices are assigned in the order that groups are originally mapped	WITHOUT_CLASSIFICATION	0.999998828552951	WITHOUT_CLASSIFICATION	1.171447048992679E-6	DEFECT
// a key that hasn't been mapped should return the default group	WITHOUT_CLASSIFICATION	0.9999318371837828	WITHOUT_CLASSIFICATION	6.81628162171748E-5	DEFECT
// a null argument should throw an exception	WITHOUT_CLASSIFICATION	0.9999781087473009	WITHOUT_CLASSIFICATION	2.189125269904565E-5	DEFECT
// a small check for independence	WITHOUT_CLASSIFICATION	0.9999988777210553	WITHOUT_CLASSIFICATION	1.1222789447409913E-6	DEFECT
// check invalid indices	WITHOUT_CLASSIFICATION	0.9999994978702725	WITHOUT_CLASSIFICATION	5.021297275377034E-7	DEFECT
// check invalid indices	WITHOUT_CLASSIFICATION	0.9999994978702725	WITHOUT_CLASSIFICATION	5.021297275377034E-7	DEFECT
// confirm overwriting an existing value	WITHOUT_CLASSIFICATION	0.9999939203890554	WITHOUT_CLASSIFICATION	6.079610944540547E-6	DEFECT
// try null keys	WITHOUT_CLASSIFICATION	0.9999920709430913	WITHOUT_CLASSIFICATION	7.929056908761777E-6	DEFECT
// try negative row index	WITHOUT_CLASSIFICATION	0.9999666706153596	WITHOUT_CLASSIFICATION	3.3329384640375525E-5	DEFECT
// try row index too high	WITHOUT_CLASSIFICATION	0.9999751674934578	WITHOUT_CLASSIFICATION	2.483250654224218E-5	DEFECT
// try negative column index	WITHOUT_CLASSIFICATION	0.999994321891483	WITHOUT_CLASSIFICATION	5.6781085170194625E-6	DEFECT
// try column index too high	WITHOUT_CLASSIFICATION	0.9999967745378334	WITHOUT_CLASSIFICATION	3.225462166628433E-6	DEFECT
// try unknown row key	WITHOUT_CLASSIFICATION	0.999952593044139	WITHOUT_CLASSIFICATION	4.740695586115653E-5	DEFECT
// try null row key	WITHOUT_CLASSIFICATION	0.9999741957706435	WITHOUT_CLASSIFICATION	2.580422935652074E-5	DEFECT
// try unknown column key	WITHOUT_CLASSIFICATION	0.9999940891658681	WITHOUT_CLASSIFICATION	5.910834131842073E-6	DEFECT
// try null column key	WITHOUT_CLASSIFICATION	0.9999782646052441	WITHOUT_CLASSIFICATION	2.1735394755974428E-5	DEFECT
/* Comparable k = */	WITHOUT_CLASSIFICATION	0.9999923676780721	WITHOUT_CLASSIFICATION	7.632321927859168E-6	DEFECT
/* Comparable k = */	WITHOUT_CLASSIFICATION	0.9999923676780721	WITHOUT_CLASSIFICATION	7.632321927859168E-6	DEFECT
// try null	WITHOUT_CLASSIFICATION	0.9999884542726694	WITHOUT_CLASSIFICATION	1.1545727330697847E-5	DEFECT
// it's OK to use an index equal to the size of the list	WITHOUT_CLASSIFICATION	0.999997878107941	WITHOUT_CLASSIFICATION	2.121892058996944E-6	DEFECT
// try replacing an existing value	WITHOUT_CLASSIFICATION	0.999990201211632	WITHOUT_CLASSIFICATION	9.798788368025777E-6	DEFECT
// basic check for independence	WITHOUT_CLASSIFICATION	0.9999988175702721	WITHOUT_CLASSIFICATION	1.1824297279036862E-6	DEFECT
// basic check for independence	WITHOUT_CLASSIFICATION	0.9999988175702721	WITHOUT_CLASSIFICATION	1.1824297279036862E-6	DEFECT
// try a null source	WITHOUT_CLASSIFICATION	0.9999989971244099	WITHOUT_CLASSIFICATION	1.0028755900338779E-6	DEFECT
// check negative index throws exception	WITHOUT_CLASSIFICATION	0.9999936590418926	WITHOUT_CLASSIFICATION	6.340958107369505E-6	DEFECT
// check negative index throws exception	WITHOUT_CLASSIFICATION	0.9999936590418926	WITHOUT_CLASSIFICATION	6.340958107369505E-6	DEFECT
// this is expected	WITHOUT_CLASSIFICATION	0.9999923082529643	WITHOUT_CLASSIFICATION	7.69174703583253E-6	DEFECT
// this is expected	WITHOUT_CLASSIFICATION	0.9999923082529643	WITHOUT_CLASSIFICATION	7.69174703583253E-6	DEFECT
// this is expected	WITHOUT_CLASSIFICATION	0.9999923082529643	WITHOUT_CLASSIFICATION	7.69174703583253E-6	DEFECT
// check index == getItemCount() throws exception	WITHOUT_CLASSIFICATION	0.9999969427002736	WITHOUT_CLASSIFICATION	3.0572997263530327E-6	DEFECT
// test null source	WITHOUT_CLASSIFICATION	0.9999997033024899	WITHOUT_CLASSIFICATION	2.966975100205931E-7	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999924735504521	WITHOUT_CLASSIFICATION	7.526449547970881E-6	DEFECT
// an empty dataset should return a null range	WITHOUT_CLASSIFICATION	0.9999838486668315	WITHOUT_CLASSIFICATION	1.615133316848508E-5	DEFECT
/* Number n = */	WITHOUT_CLASSIFICATION	0.9999950550902977	WITHOUT_CLASSIFICATION	4.944909702334799E-6	DEFECT
/* Number n = */	WITHOUT_CLASSIFICATION	0.9999950550902977	WITHOUT_CLASSIFICATION	4.944909702334799E-6	DEFECT
// try null	WITHOUT_CLASSIFICATION	0.9999884542726694	WITHOUT_CLASSIFICATION	1.1545727330697847E-5	DEFECT
// basic check for independence	WITHOUT_CLASSIFICATION	0.9999988175702721	WITHOUT_CLASSIFICATION	1.1824297279036862E-6	DEFECT
// basic check for independence	WITHOUT_CLASSIFICATION	0.9999988175702721	WITHOUT_CLASSIFICATION	1.1824297279036862E-6	DEFECT
// this is expected	WITHOUT_CLASSIFICATION	0.9999923082529643	WITHOUT_CLASSIFICATION	7.69174703583253E-6	DEFECT
// this is expected	WITHOUT_CLASSIFICATION	0.9999923082529643	WITHOUT_CLASSIFICATION	7.69174703583253E-6	DEFECT
// this is expected	WITHOUT_CLASSIFICATION	0.9999923082529643	WITHOUT_CLASSIFICATION	7.69174703583253E-6	DEFECT
// check index == getItemCount() throws exception	WITHOUT_CLASSIFICATION	0.9999969427002736	WITHOUT_CLASSIFICATION	3.0572997263530327E-6	DEFECT
// test null source	WITHOUT_CLASSIFICATION	0.9999997033024899	WITHOUT_CLASSIFICATION	2.966975100205931E-7	DEFECT
// another item	WITHOUT_CLASSIFICATION	0.999998866732194	WITHOUT_CLASSIFICATION	1.1332678061258214E-6	DEFECT
/* Number n =*/	WITHOUT_CLASSIFICATION	0.9999922160086803	WITHOUT_CLASSIFICATION	7.783991319820778E-6	DEFECT
// increment a null value	WITHOUT_CLASSIFICATION	0.9999098451204979	WITHOUT_CLASSIFICATION	9.015487950216166E-5	DEFECT
// increment an unknown row	WITHOUT_CLASSIFICATION	0.9999281176932353	WITHOUT_CLASSIFICATION	7.188230676463596E-5	DEFECT
// increment an unknown column	WITHOUT_CLASSIFICATION	0.9999821911592608	WITHOUT_CLASSIFICATION	1.7808840739156905E-5	DEFECT
// a row of all null values is still counted...	WITHOUT_CLASSIFICATION	0.9999950792618931	WITHOUT_CLASSIFICATION	4.920738106820008E-6	DEFECT
// a column of all null values is still counted...	WITHOUT_CLASSIFICATION	0.9999974405169539	WITHOUT_CLASSIFICATION	2.5594830460286606E-6	DEFECT
// try a dataset with some content...	WITHOUT_CLASSIFICATION	0.9999961759564621	WITHOUT_CLASSIFICATION	3.824043537992664E-6	DEFECT
// check that the clone doesn't share the same underlying arrays.	WITHOUT_CLASSIFICATION	0.9999854354185566	WITHOUT_CLASSIFICATION	1.456458144352663E-5	DEFECT
// check that the clone doesn't share the same underlying arrays.	WITHOUT_CLASSIFICATION	0.9999854354185566	WITHOUT_CLASSIFICATION	1.456458144352663E-5	DEFECT
// check that two empty datasets are equal	WITHOUT_CLASSIFICATION	0.9999996738939023	WITHOUT_CLASSIFICATION	3.2610609769430335E-7	DEFECT
// check an empty dataset	WITHOUT_CLASSIFICATION	0.9999955199593095	WITHOUT_CLASSIFICATION	4.480040690500415E-6	DEFECT
// check an empty dataset	WITHOUT_CLASSIFICATION	0.9999955199593095	WITHOUT_CLASSIFICATION	4.480040690500415E-6	DEFECT
// make sure that modifying the returned array doesn't change the // function	WITHOUT_CLASSIFICATION	0.9999814707666067	WITHOUT_CLASSIFICATION	1.8529233393280554E-5	DEFECT
// note that we don't define taskB1	WITHOUT_CLASSIFICATION	0.9999762500132642	WITHOUT_CLASSIFICATION	2.3749986735850515E-5	DEFECT
// define subtasks	WITHOUT_CLASSIFICATION	0.9999990761593625	WITHOUT_CLASSIFICATION	9.23840637640082E-7	DEFECT
/* Number start = */	WITHOUT_CLASSIFICATION	0.9999992743242307	WITHOUT_CLASSIFICATION	7.256757692304387E-7	DEFECT
// test collection 3, which doesn't define all tasks in all series	WITHOUT_CLASSIFICATION	0.9999941843168576	WITHOUT_CLASSIFICATION	5.815683142404171E-6	DEFECT
// test collection 3, which doesn't define all tasks in all series	WITHOUT_CLASSIFICATION	0.9999941843168576	WITHOUT_CLASSIFICATION	5.815683142404171E-6	DEFECT
// test collection 3, which doesn't define all tasks in all series	WITHOUT_CLASSIFICATION	0.9999941843168576	WITHOUT_CLASSIFICATION	5.815683142404171E-6	DEFECT
/* int count = */	WITHOUT_CLASSIFICATION	0.9999681161950716	WITHOUT_CLASSIFICATION	3.1883804928314424E-5	DEFECT
/* Number end = */	WITHOUT_CLASSIFICATION	0.9999973767063005	WITHOUT_CLASSIFICATION	2.623293699377261E-6	DEFECT
// try a single item	WITHOUT_CLASSIFICATION	0.9999992321139279	WITHOUT_CLASSIFICATION	7.678860720820772E-7	DEFECT
// simple check for independence	WITHOUT_CLASSIFICATION	0.9999991765935621	WITHOUT_CLASSIFICATION	8.234064378698127E-7	DEFECT
// what if we don't want the interval?	WITHOUT_CLASSIFICATION	0.99993037152709	WITHOUT_CLASSIFICATION	6.962847291008816E-5	DEFECT
// an item in series 2	WITHOUT_CLASSIFICATION	0.9999911107023355	WITHOUT_CLASSIFICATION	8.889297664509258E-6	DEFECT
// another empty series	WITHOUT_CLASSIFICATION	0.9999994492506402	WITHOUT_CLASSIFICATION	5.5074935972751E-7	DEFECT
// a dataset with a single value	WITHOUT_CLASSIFICATION	0.9999977132318957	WITHOUT_CLASSIFICATION	2.286768104314062E-6	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999924735504521	WITHOUT_CLASSIFICATION	7.526449547970881E-6	DEFECT
// a dataset with a single value	WITHOUT_CLASSIFICATION	0.9999977132318957	WITHOUT_CLASSIFICATION	2.286768104314062E-6	DEFECT
// null is ignored	WITHOUT_CLASSIFICATION	0.9999977550236172	WITHOUT_CLASSIFICATION	2.244976382715561E-6	DEFECT
// a Double.NaN should be ignored	WITHOUT_CLASSIFICATION	0.9999944984708212	WITHOUT_CLASSIFICATION	5.501529178751723E-6	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999924735504521	WITHOUT_CLASSIFICATION	7.526449547970881E-6	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999924735504521	WITHOUT_CLASSIFICATION	7.526449547970881E-6	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999924735504521	WITHOUT_CLASSIFICATION	7.526449547970881E-6	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999924735504521	WITHOUT_CLASSIFICATION	7.526449547970881E-6	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999924735504521	WITHOUT_CLASSIFICATION	7.526449547970881E-6	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999917400541091	WITHOUT_CLASSIFICATION	8.259945890952432E-6	DEFECT
// try null argument	WITHOUT_CLASSIFICATION	0.9999969185833123	WITHOUT_CLASSIFICATION	3.0814166875916863E-6	DEFECT
// try null argument	WITHOUT_CLASSIFICATION	0.9999969185833123	WITHOUT_CLASSIFICATION	3.0814166875916863E-6	DEFECT
// check that clone is independent of the original	WITHOUT_CLASSIFICATION	0.9999999627699333	WITHOUT_CLASSIFICATION	3.72300666387979E-8	DEFECT
/* Number n =*/	WITHOUT_CLASSIFICATION	0.9999922160086803	WITHOUT_CLASSIFICATION	7.783991319820778E-6	DEFECT
// try a dataset with some content...	WITHOUT_CLASSIFICATION	0.9999961759564621	WITHOUT_CLASSIFICATION	3.824043537992664E-6	DEFECT
// check that the clone doesn't share the same underlying arrays.	WITHOUT_CLASSIFICATION	0.9999854354185566	WITHOUT_CLASSIFICATION	1.456458144352663E-5	DEFECT
// simple check for independence	WITHOUT_CLASSIFICATION	0.9999991765935621	WITHOUT_CLASSIFICATION	8.234064378698127E-7	DEFECT
// simple check for independence	WITHOUT_CLASSIFICATION	0.9999991765935621	WITHOUT_CLASSIFICATION	8.234064378698127E-7	DEFECT
// try a single item	WITHOUT_CLASSIFICATION	0.9999992321139279	WITHOUT_CLASSIFICATION	7.678860720820772E-7	DEFECT
// another item	WITHOUT_CLASSIFICATION	0.999998866732194	WITHOUT_CLASSIFICATION	1.1332678061258214E-6	DEFECT
// another empty series	WITHOUT_CLASSIFICATION	0.9999994492506402	WITHOUT_CLASSIFICATION	5.5074935972751E-7	DEFECT
// an item in series 2	WITHOUT_CLASSIFICATION	0.9999911107023355	WITHOUT_CLASSIFICATION	8.889297664509258E-6	DEFECT
// Double.NaN DOESN'T mess things up	WITHOUT_CLASSIFICATION	0.9999898157685293	WITHOUT_CLASSIFICATION	1.0184231470798759E-5	DEFECT
// got it!	WITHOUT_CLASSIFICATION	0.999986759213867	WITHOUT_CLASSIFICATION	1.3240786132965918E-5	DEFECT
// check that empty dataset is handled OK	WITHOUT_CLASSIFICATION	0.9999990915538438	WITHOUT_CLASSIFICATION	9.084461561109488E-7	DEFECT
// and that simple aggregation works	WITHOUT_CLASSIFICATION	0.999994617571765	WITHOUT_CLASSIFICATION	5.382428235097624E-6	DEFECT
// an empty dataset should return a null max	WITHOUT_CLASSIFICATION	0.9999877485723287	WITHOUT_CLASSIFICATION	1.2251427671179092E-5	DEFECT
// an empty dataset should return a null max	WITHOUT_CLASSIFICATION	0.9999877485723287	WITHOUT_CLASSIFICATION	1.2251427671179092E-5	DEFECT
// null dataset throws IllegalArgumentException	WITHOUT_CLASSIFICATION	0.9999978265310284	WITHOUT_CLASSIFICATION	2.1734689716007452E-6	DEFECT
// null list throws IllegalArgumentException	WITHOUT_CLASSIFICATION	0.9999910243731617	WITHOUT_CLASSIFICATION	8.975626838401252E-6	DEFECT
// null range throws IllegalArgumentException	WITHOUT_CLASSIFICATION	0.9999934021819231	WITHOUT_CLASSIFICATION	6.597818076966636E-6	DEFECT
// empty dataset returns null	WITHOUT_CLASSIFICATION	0.9999974372366981	WITHOUT_CLASSIFICATION	2.5627633018938836E-6	DEFECT
// add an empty series	WITHOUT_CLASSIFICATION	0.9999954441098501	WITHOUT_CLASSIFICATION	4.55589014991257E-6	DEFECT
// check a null value	WITHOUT_CLASSIFICATION	0.999978465281209	WITHOUT_CLASSIFICATION	2.153471879094595E-5	DEFECT
// check a NaN	WITHOUT_CLASSIFICATION	0.9999980860000703	WITHOUT_CLASSIFICATION	1.9139999296218097E-6	DEFECT
// check another regular value	WITHOUT_CLASSIFICATION	0.9999976076897001	WITHOUT_CLASSIFICATION	2.3923102998692398E-6	DEFECT
// add a second series	WITHOUT_CLASSIFICATION	0.9999994450385933	WITHOUT_CLASSIFICATION	5.549614067378224E-7	DEFECT
// add a value to the second series	WITHOUT_CLASSIFICATION	0.9999998722286385	WITHOUT_CLASSIFICATION	1.2777136146176117E-7	DEFECT
// add a value that isn't in the xRange	WITHOUT_CLASSIFICATION	0.9999045401596338	WITHOUT_CLASSIFICATION	9.54598403662256E-5	DEFECT
// try some nulls	WITHOUT_CLASSIFICATION	0.9999893595073892	WITHOUT_CLASSIFICATION	1.0640492610885963E-5	DEFECT
// an empty dataset should return null for bounds	WITHOUT_CLASSIFICATION	0.9999946775767304	WITHOUT_CLASSIFICATION	5.322423269500865E-6	DEFECT
// try a dataset with a single value	WITHOUT_CLASSIFICATION	0.9999978905091065	WITHOUT_CLASSIFICATION	2.109490893537837E-6	DEFECT
// try a dataset with two values	WITHOUT_CLASSIFICATION	0.9999985932819355	WITHOUT_CLASSIFICATION	1.4067180643850761E-6	DEFECT
// try a Double.NaN	WITHOUT_CLASSIFICATION	0.9999966849480783	WITHOUT_CLASSIFICATION	3.315051921680684E-6	DEFECT
// try a Double.NEGATIVE_INFINITY	WITHOUT_CLASSIFICATION	0.9999853278586753	WITHOUT_CLASSIFICATION	1.467214132462883E-5	DEFECT
// overwrite the value	WITHOUT_CLASSIFICATION	0.9999980014222213	WITHOUT_CLASSIFICATION	1.998577778770987E-6	DEFECT
// test independence	WITHOUT_CLASSIFICATION	0.9999990515389816	WITHOUT_CLASSIFICATION	9.484610184190288E-7	DEFECT
// now overwrite this item with another	WITHOUT_CLASSIFICATION	0.9999954742514485	WITHOUT_CLASSIFICATION	4.525748551528107E-6	DEFECT
// try null list	WITHOUT_CLASSIFICATION	0.9999910509792567	WITHOUT_CLASSIFICATION	8.949020743408117E-6	DEFECT
// try a list containing a single value	WITHOUT_CLASSIFICATION	0.9999945153065425	WITHOUT_CLASSIFICATION	5.484693457441471E-6	DEFECT
// try null array	WITHOUT_CLASSIFICATION	0.9999901481676106	WITHOUT_CLASSIFICATION	9.851832389332687E-6	DEFECT
// try an array containing no items	WITHOUT_CLASSIFICATION	0.9999965240039798	WITHOUT_CLASSIFICATION	3.475996020347291E-6	DEFECT
// try an array containing a single Number	WITHOUT_CLASSIFICATION	0.9999988592313723	WITHOUT_CLASSIFICATION	1.1407686277006612E-6	DEFECT
// try an array containing a single Number and a null	WITHOUT_CLASSIFICATION	0.9999991025082334	WITHOUT_CLASSIFICATION	8.974917666507104E-7	DEFECT
// try an array containing a single Number and a NaN	WITHOUT_CLASSIFICATION	0.9999996907618566	WITHOUT_CLASSIFICATION	3.092381433408393E-7	DEFECT
// try a null argument	WITHOUT_CLASSIFICATION	0.9999920659499849	WITHOUT_CLASSIFICATION	7.934050015098356E-6	DEFECT
// OK	WITHOUT_CLASSIFICATION	0.9999871538766184	WITHOUT_CLASSIFICATION	1.2846123381676648E-5	DEFECT
// try null argument	WITHOUT_CLASSIFICATION	0.9999969185833123	WITHOUT_CLASSIFICATION	3.0814166875916863E-6	DEFECT
// test independence	WITHOUT_CLASSIFICATION	0.9999990515389816	WITHOUT_CLASSIFICATION	9.484610184190288E-7	DEFECT
// try an empty collection	WITHOUT_CLASSIFICATION	0.9999667055174213	WITHOUT_CLASSIFICATION	3.329448257883222E-5	DEFECT
// try a collection with a single number	WITHOUT_CLASSIFICATION	0.999998430908189	WITHOUT_CLASSIFICATION	1.5690918109233983E-6	DEFECT
// try a collection with a single number plus a NaN	WITHOUT_CLASSIFICATION	0.999998847200954	WITHOUT_CLASSIFICATION	1.1527990460463701E-6	DEFECT
// try a collection with several numbers	WITHOUT_CLASSIFICATION	0.9999992569174804	WITHOUT_CLASSIFICATION	7.430825196886142E-7	DEFECT
// a Collection containing a NaN will return Double.NaN for the result	WITHOUT_CLASSIFICATION	0.9999980713469744	WITHOUT_CLASSIFICATION	1.9286530255804683E-6	DEFECT
// check null list	WITHOUT_CLASSIFICATION	0.9999969469827517	WITHOUT_CLASSIFICATION	3.053017248251952E-6	DEFECT
// check empty list	WITHOUT_CLASSIFICATION	0.9999991488844823	WITHOUT_CLASSIFICATION	8.511155176252966E-7	DEFECT
// check list containing null	WITHOUT_CLASSIFICATION	0.9999913578276259	WITHOUT_CLASSIFICATION	8.64217237404172E-6	DEFECT
// try zero length array	WITHOUT_CLASSIFICATION	0.9999853575508977	WITHOUT_CLASSIFICATION	1.4642449102339605E-5	DEFECT
// try single value	WITHOUT_CLASSIFICATION	0.9999986964736891	WITHOUT_CLASSIFICATION	1.3035263108545648E-6	DEFECT
// locale shouldn't matter here	WITHOUT_CLASSIFICATION	0.9999610503252078	WITHOUT_CLASSIFICATION	3.8949674792171484E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999924735504521	WITHOUT_CLASSIFICATION	7.526449547970881E-6	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999924735504521	WITHOUT_CLASSIFICATION	7.526449547970881E-6	DEFECT
// try deleting a time period that doesn't exist...	WITHOUT_CLASSIFICATION	0.9999726681601655	WITHOUT_CLASSIFICATION	2.73318398344475E-5	DEFECT
// try deleting null	WITHOUT_CLASSIFICATION	0.9999928962278031	WITHOUT_CLASSIFICATION	7.103772196982059E-6	DEFECT
// copy a range before the start of the series data...	WITHOUT_CLASSIFICATION	0.9999998284847498	WITHOUT_CLASSIFICATION	1.7151525029015346E-7	DEFECT
// copy a range that includes only the first item in the series...	WITHOUT_CLASSIFICATION	0.9999990497898664	WITHOUT_CLASSIFICATION	9.50210133654676E-7	DEFECT
// copy a range that begins before and ends in the middle of the // series...	WITHOUT_CLASSIFICATION	0.9999998433028263	WITHOUT_CLASSIFICATION	1.5669717366747785E-7	DEFECT
// copy just the first item...	WITHOUT_CLASSIFICATION	0.9999989657457873	WITHOUT_CLASSIFICATION	1.0342542127232127E-6	DEFECT
// copy the first two items...	WITHOUT_CLASSIFICATION	0.9999990072141509	WITHOUT_CLASSIFICATION	9.927858490622904E-7	DEFECT
// copy the middle three items...	WITHOUT_CLASSIFICATION	0.9999997454832066	WITHOUT_CLASSIFICATION	2.5451679340900563E-7	DEFECT
// copy the last two items...	WITHOUT_CLASSIFICATION	0.9999992846861915	WITHOUT_CLASSIFICATION	7.153138085701511E-7	DEFECT
// copy the last item...	WITHOUT_CLASSIFICATION	0.9999986845433173	WITHOUT_CLASSIFICATION	1.315456682750089E-6	DEFECT
// check negative first argument	WITHOUT_CLASSIFICATION	0.999999219906506	WITHOUT_CLASSIFICATION	7.800934939751208E-7	DEFECT
/* TimeSeries result = */	WITHOUT_CLASSIFICATION	0.999932224799642	WITHOUT_CLASSIFICATION	6.777520035799032E-5	DEFECT
/* TimeSeries result = */	WITHOUT_CLASSIFICATION	0.999932224799642	WITHOUT_CLASSIFICATION	6.777520035799032E-5	DEFECT
// check second argument less than first argument	WITHOUT_CLASSIFICATION	0.9999996886187933	WITHOUT_CLASSIFICATION	3.113812066978183E-7	DEFECT
// changing the overwritten record shouldn't affect the series	WITHOUT_CLASSIFICATION	0.9999974017611436	WITHOUT_CLASSIFICATION	2.598238856310835E-6	DEFECT
// changing the item that was added should not change the series	WITHOUT_CLASSIFICATION	0.9999996628727633	WITHOUT_CLASSIFICATION	3.3712723669879475E-7	DEFECT
// can't get anything yet...just an exception	WITHOUT_CLASSIFICATION	0.999879223848161	WITHOUT_CLASSIFICATION	1.2077615183907396E-4	DEFECT
/*TimeSeriesDataItem item =*/	WITHOUT_CLASSIFICATION	0.9998850715599477	WITHOUT_CLASSIFICATION	1.1492844005230611E-4	DEFECT
/*item = */	WITHOUT_CLASSIFICATION	0.9999636441251312	WITHOUT_CLASSIFICATION	3.6355874868893144E-5	DEFECT
/* TimeSeriesDataItem item = */	WITHOUT_CLASSIFICATION	0.999977436522298	WITHOUT_CLASSIFICATION	2.2563477702011012E-5	DEFECT
// test empty series	WITHOUT_CLASSIFICATION	0.9999997612351019	WITHOUT_CLASSIFICATION	2.3876489813950493E-7	DEFECT
// test series with one item	WITHOUT_CLASSIFICATION	0.9999987732393925	WITHOUT_CLASSIFICATION	1.22676060745764E-6	DEFECT
// test series with two items	WITHOUT_CLASSIFICATION	0.9999991919382925	WITHOUT_CLASSIFICATION	8.080617074899032E-7	DEFECT
// milliseconds somewhere in 2006	WITHOUT_CLASSIFICATION	0.9999947707594979	WITHOUT_CLASSIFICATION	5.229240502075667E-6	DEFECT
// test a series with 1 item	WITHOUT_CLASSIFICATION	0.9999970438465338	WITHOUT_CLASSIFICATION	2.9561534662091673E-6	DEFECT
// test a series with two items	WITHOUT_CLASSIFICATION	0.9999991295996735	WITHOUT_CLASSIFICATION	8.704003264501658E-7	DEFECT
// this line triggers the defect	WITHOUT_CLASSIFICATION	0.9999935200850528	WITHOUT_CLASSIFICATION	6.4799149471447195E-6	DEFECT
// check that removing by index also works	WITHOUT_CLASSIFICATION	0.9999682103984832	WITHOUT_CLASSIFICATION	3.1789601516880444E-5	DEFECT
// null items are ignored	WITHOUT_CLASSIFICATION	0.9999980397437077	WITHOUT_CLASSIFICATION	1.9602562923266663E-6	DEFECT
// if there are only null items, we get a NaNRange	WITHOUT_CLASSIFICATION	0.9999985714105343	WITHOUT_CLASSIFICATION	1.4285894657857835E-6	DEFECT
// locale should not matter here	WITHOUT_CLASSIFICATION	0.9999890575662529	WITHOUT_CLASSIFICATION	1.0942433747067365E-5	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999917400541091	WITHOUT_CLASSIFICATION	8.259945890952432E-6	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999924735504521	WITHOUT_CLASSIFICATION	7.526449547970881E-6	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999924735504521	WITHOUT_CLASSIFICATION	7.526449547970881E-6	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999924735504521	WITHOUT_CLASSIFICATION	7.526449547970881E-6	DEFECT
// locale should not matter here	WITHOUT_CLASSIFICATION	0.9999890575662529	WITHOUT_CLASSIFICATION	1.0942433747067365E-5	DEFECT
// locale should not matter here	WITHOUT_CLASSIFICATION	0.9999890575662529	WITHOUT_CLASSIFICATION	1.0942433747067365E-5	DEFECT
// test 3...	WITHOUT_CLASSIFICATION	0.9999985872300569	WITHOUT_CLASSIFICATION	1.4127699430531498E-6	DEFECT
// test 1...	WITHOUT_CLASSIFICATION	0.9999979304202731	WITHOUT_CLASSIFICATION	2.0695797269784116E-6	DEFECT
// test 1...	WITHOUT_CLASSIFICATION	0.9999979304202731	WITHOUT_CLASSIFICATION	2.0695797269784116E-6	DEFECT
// domain description - null	WITHOUT_CLASSIFICATION	0.9999957370937379	WITHOUT_CLASSIFICATION	4.2629062621171255E-6	DEFECT
// test 2...	WITHOUT_CLASSIFICATION	0.9999984060577579	WITHOUT_CLASSIFICATION	1.5939422420637666E-6	DEFECT
// a null item should throw an IllegalArgumentException	WITHOUT_CLASSIFICATION	0.999980542182927	WITHOUT_CLASSIFICATION	1.9457817073012897E-5	DEFECT
/*Quarter q =*/	WITHOUT_CLASSIFICATION	0.999966365559205	WITHOUT_CLASSIFICATION	3.363444079494417E-5	DEFECT
/*Quarter q =*/	WITHOUT_CLASSIFICATION	0.999966365559205	WITHOUT_CLASSIFICATION	3.363444079494417E-5	DEFECT
// range description	WITHOUT_CLASSIFICATION	0.9999987812426002	WITHOUT_CLASSIFICATION	1.2187573998788886E-6	DEFECT
// domain description	WITHOUT_CLASSIFICATION	0.9999952950979085	WITHOUT_CLASSIFICATION	4.704902091477736E-6	DEFECT
// check dataset with one time period	WITHOUT_CLASSIFICATION	0.999997787406017	WITHOUT_CLASSIFICATION	2.2125939830526453E-6	DEFECT
// check empty dataset	WITHOUT_CLASSIFICATION	0.9999990929886481	WITHOUT_CLASSIFICATION	9.070113520172888E-7	DEFECT
// range description - null	WITHOUT_CLASSIFICATION	0.9999959322934588	WITHOUT_CLASSIFICATION	4.0677065411789585E-6	DEFECT
// check dataset with one time period	WITHOUT_CLASSIFICATION	0.999997787406017	WITHOUT_CLASSIFICATION	2.2125939830526453E-6	DEFECT
// check empty dataset	WITHOUT_CLASSIFICATION	0.9999990929886481	WITHOUT_CLASSIFICATION	9.070113520172888E-7	DEFECT
// add a fourth time period	WITHOUT_CLASSIFICATION	0.9999654335585478	WITHOUT_CLASSIFICATION	3.456644145215925E-5	DEFECT
// add a third time period	WITHOUT_CLASSIFICATION	0.9999242883174944	WITHOUT_CLASSIFICATION	7.571168250573233E-5	DEFECT
// check dataset with two time periods	WITHOUT_CLASSIFICATION	0.999999308711982	WITHOUT_CLASSIFICATION	6.912880180677815E-7	DEFECT
// check dataset with two time periods	WITHOUT_CLASSIFICATION	0.999999308711982	WITHOUT_CLASSIFICATION	6.912880180677815E-7	DEFECT
// first day of week is Sunday	WITHOUT_CLASSIFICATION	0.9999785943570667	WITHOUT_CLASSIFICATION	2.1405642933304376E-5	DEFECT
// first day of week is monday	WITHOUT_CLASSIFICATION	0.9999891878411991	WITHOUT_CLASSIFICATION	1.081215880085965E-5	DEFECT
// try null zone	WITHOUT_CLASSIFICATION	0.9999919644866826	WITHOUT_CLASSIFICATION	8.035513317495982E-6	DEFECT
// add series to collection 1, should be not equal	WITHOUT_CLASSIFICATION	0.9999894814769178	WITHOUT_CLASSIFICATION	1.051852308218794E-5	DEFECT
// newly created collections should be equal	WITHOUT_CLASSIFICATION	0.999995632474399	WITHOUT_CLASSIFICATION	4.3675256009125414E-6	DEFECT
// now add the same series to collection 2 to make them equal again...	WITHOUT_CLASSIFICATION	0.9999994526351463	WITHOUT_CLASSIFICATION	5.473648535683102E-7	DEFECT
// now remove series 2 from collection 2	WITHOUT_CLASSIFICATION	0.999997915990367	WITHOUT_CLASSIFICATION	2.084009633024785E-6	DEFECT
// now remove series 2 from collection 1 to make them equal again	WITHOUT_CLASSIFICATION	0.9999986829325169	WITHOUT_CLASSIFICATION	1.3170674830360797E-6	DEFECT
// for a series with no data, we expect {-1, -1}...	WITHOUT_CLASSIFICATION	0.99999957417406	WITHOUT_CLASSIFICATION	4.258259399629364E-7	DEFECT
// now test with a single value in the series...	WITHOUT_CLASSIFICATION	0.9999983706663257	WITHOUT_CLASSIFICATION	1.6293336743572075E-6	DEFECT
// now add a second value to the series...	WITHOUT_CLASSIFICATION	0.9999998856705459	WITHOUT_CLASSIFICATION	1.1432945412187508E-7	DEFECT
// now add a third value to the series...	WITHOUT_CLASSIFICATION	0.9999995395379199	WITHOUT_CLASSIFICATION	4.6046208012522944E-7	DEFECT
/* TimeSeries s = */	WITHOUT_CLASSIFICATION	0.9999837318092443	WITHOUT_CLASSIFICATION	1.6268190755817152E-5	DEFECT
// correct outcome	WITHOUT_CLASSIFICATION	0.9999555314045395	WITHOUT_CLASSIFICATION	4.446859546054147E-5	DEFECT
// wrong outcome	WITHOUT_CLASSIFICATION	0.9999980060979328	WITHOUT_CLASSIFICATION	1.993902067168102E-6	DEFECT
// store the current time zone	WITHOUT_CLASSIFICATION	0.9999988918540329	WITHOUT_CLASSIFICATION	1.1081459670574663E-6	DEFECT
// restore the default time zone	WITHOUT_CLASSIFICATION	0.9999993733311612	WITHOUT_CLASSIFICATION	6.266688388812627E-7	DEFECT
// when the dataset contains no series, we expect the range to be null	WITHOUT_CLASSIFICATION	0.9999989978944278	WITHOUT_CLASSIFICATION	1.0021055722330418E-6	DEFECT
// tests with values	WITHOUT_CLASSIFICATION	0.9999991863674179	WITHOUT_CLASSIFICATION	8.136325821371691E-7	DEFECT
// adding a second series	WITHOUT_CLASSIFICATION	0.9999987544987504	WITHOUT_CLASSIFICATION	1.2455012495942116E-6	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999917400541091	WITHOUT_CLASSIFICATION	8.259945890952432E-6	DEFECT
// x	WITHOUT_CLASSIFICATION	0.9999878621311072	WITHOUT_CLASSIFICATION	1.21378688928405E-5	DEFECT
// y	WITHOUT_CLASSIFICATION	0.9999883087656294	WITHOUT_CLASSIFICATION	1.1691234370591084E-5	DEFECT
// period	WITHOUT_CLASSIFICATION	0.999982573814189	WITHOUT_CLASSIFICATION	1.742618581096801E-5	DEFECT
// autoSort	WITHOUT_CLASSIFICATION	0.9999980758113831	WITHOUT_CLASSIFICATION	1.924188616901048E-6	DEFECT
// autoSort	WITHOUT_CLASSIFICATION	0.9999980758113831	WITHOUT_CLASSIFICATION	1.924188616901048E-6	DEFECT
// add a value	WITHOUT_CLASSIFICATION	0.9999900983421013	WITHOUT_CLASSIFICATION	9.901657898691814E-6	DEFECT
// add a value	WITHOUT_CLASSIFICATION	0.9999900983421013	WITHOUT_CLASSIFICATION	9.901657898691814E-6	DEFECT
// add another value	WITHOUT_CLASSIFICATION	0.999998107646344	WITHOUT_CLASSIFICATION	1.8923536560990426E-6	DEFECT
// add another value	WITHOUT_CLASSIFICATION	0.999998107646344	WITHOUT_CLASSIFICATION	1.8923536560990426E-6	DEFECT
// try a dataset with some content...	WITHOUT_CLASSIFICATION	0.9999961759564621	WITHOUT_CLASSIFICATION	3.824043537992664E-6	DEFECT
// try a dataset with some content...	WITHOUT_CLASSIFICATION	0.9999961759564621	WITHOUT_CLASSIFICATION	3.824043537992664E-6	DEFECT
// add an empty series	WITHOUT_CLASSIFICATION	0.9999954441098501	WITHOUT_CLASSIFICATION	4.55589014991257E-6	DEFECT
// locale shouldn't matter here	WITHOUT_CLASSIFICATION	0.9999610503252078	WITHOUT_CLASSIFICATION	3.8949674792171484E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999924735504521	WITHOUT_CLASSIFICATION	7.526449547970881E-6	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999924735504521	WITHOUT_CLASSIFICATION	7.526449547970881E-6	DEFECT
// locale should not matter here	WITHOUT_CLASSIFICATION	0.9999890575662529	WITHOUT_CLASSIFICATION	1.0942433747067365E-5	DEFECT
// locale should not matter here	WITHOUT_CLASSIFICATION	0.9999890575662529	WITHOUT_CLASSIFICATION	1.0942433747067365E-5	DEFECT
// test 1...	WITHOUT_CLASSIFICATION	0.9999979304202731	WITHOUT_CLASSIFICATION	2.0695797269784116E-6	DEFECT
// test 1...	WITHOUT_CLASSIFICATION	0.9999979304202731	WITHOUT_CLASSIFICATION	2.0695797269784116E-6	DEFECT
// test 1...	WITHOUT_CLASSIFICATION	0.9999979304202731	WITHOUT_CLASSIFICATION	2.0695797269784116E-6	DEFECT
// test 2...	WITHOUT_CLASSIFICATION	0.9999984060577579	WITHOUT_CLASSIFICATION	1.5939422420637666E-6	DEFECT
// test 2...	WITHOUT_CLASSIFICATION	0.9999984060577579	WITHOUT_CLASSIFICATION	1.5939422420637666E-6	DEFECT
// test 2...	WITHOUT_CLASSIFICATION	0.9999984060577579	WITHOUT_CLASSIFICATION	1.5939422420637666E-6	DEFECT
// test 3...	WITHOUT_CLASSIFICATION	0.9999985872300569	WITHOUT_CLASSIFICATION	1.4127699430531498E-6	DEFECT
// test 3...	WITHOUT_CLASSIFICATION	0.9999985872300569	WITHOUT_CLASSIFICATION	1.4127699430531498E-6	DEFECT
// correct outcome	WITHOUT_CLASSIFICATION	0.9999555314045395	WITHOUT_CLASSIFICATION	4.446859546054147E-5	DEFECT
// wrong outcome	WITHOUT_CLASSIFICATION	0.9999980060979328	WITHOUT_CLASSIFICATION	1.993902067168102E-6	DEFECT
// now test that the clone is independent of the original	WITHOUT_CLASSIFICATION	0.9999999592192863	WITHOUT_CLASSIFICATION	4.078071372657578E-8	DEFECT
// Make sure there's nothing left	WITHOUT_CLASSIFICATION	0.9999986840219148	WITHOUT_CLASSIFICATION	1.3159780851353406E-6	DEFECT
// seriesKey	WITHOUT_CLASSIFICATION	0.9999983986104881	WITHOUT_CLASSIFICATION	1.601389511789926E-6	DEFECT
// seriesKey	WITHOUT_CLASSIFICATION	0.9999983986104881	WITHOUT_CLASSIFICATION	1.601389511789926E-6	DEFECT
// the moving average series has 7 items, the first three // days (11, 12, 13 August are skipped)	WITHOUT_CLASSIFICATION	0.9999955609665868	WITHOUT_CLASSIFICATION	4.439033413215088E-6	DEFECT
// add a series	WITHOUT_CLASSIFICATION	0.9999993090285686	WITHOUT_CLASSIFICATION	6.909714313907816E-7	DEFECT
// seriesKey	WITHOUT_CLASSIFICATION	0.9999983986104881	WITHOUT_CLASSIFICATION	1.601389511789926E-6	DEFECT
/* XYSeries s = */	WITHOUT_CLASSIFICATION	0.9999846294295077	WITHOUT_CLASSIFICATION	1.5370570492316816E-5	DEFECT
// remove a value	WITHOUT_CLASSIFICATION	0.99998729065127	WITHOUT_CLASSIFICATION	1.2709348729976584E-5	DEFECT
// remove a value	WITHOUT_CLASSIFICATION	0.99998729065127	WITHOUT_CLASSIFICATION	1.2709348729976584E-5	DEFECT
// remove a value	WITHOUT_CLASSIFICATION	0.99998729065127	WITHOUT_CLASSIFICATION	1.2709348729976584E-5	DEFECT
// and check the first series too...	WITHOUT_CLASSIFICATION	0.9999997908486756	WITHOUT_CLASSIFICATION	2.0915132438630727E-7	DEFECT
// now add another series	WITHOUT_CLASSIFICATION	0.9999992800284901	WITHOUT_CLASSIFICATION	7.199715099858544E-7	DEFECT
/*Comparable k =*/	WITHOUT_CLASSIFICATION	0.9999539342960019	WITHOUT_CLASSIFICATION	4.6065703998193854E-5	DEFECT
// yLow	WITHOUT_CLASSIFICATION	0.9999908314499983	WITHOUT_CLASSIFICATION	9.168550001570501E-6	DEFECT
// allowDuplicateValues	WITHOUT_CLASSIFICATION	0.9999980602170896	WITHOUT_CLASSIFICATION	1.93978291052125E-6	DEFECT
// allowDuplicateValues	WITHOUT_CLASSIFICATION	0.9999980602170896	WITHOUT_CLASSIFICATION	1.93978291052125E-6	DEFECT
// check for series key out of bounds	WITHOUT_CLASSIFICATION	0.9999997854853104	WITHOUT_CLASSIFICATION	2.1451468958469742E-7	DEFECT
// yHigh	WITHOUT_CLASSIFICATION	0.9999915490222768	WITHOUT_CLASSIFICATION	8.450977723199845E-6	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999917400541091	WITHOUT_CLASSIFICATION	8.259945890952432E-6	DEFECT
// x	WITHOUT_CLASSIFICATION	0.9999878621311072	WITHOUT_CLASSIFICATION	1.21378688928405E-5	DEFECT
// y	WITHOUT_CLASSIFICATION	0.9999883087656294	WITHOUT_CLASSIFICATION	1.1691234370591084E-5	DEFECT
// default instances	WITHOUT_CLASSIFICATION	0.9999985620541428	WITHOUT_CLASSIFICATION	1.4379458570960646E-6	DEFECT
// default instances	WITHOUT_CLASSIFICATION	0.9999985620541428	WITHOUT_CLASSIFICATION	1.4379458570960646E-6	DEFECT
// autoSort	WITHOUT_CLASSIFICATION	0.9999980758113831	WITHOUT_CLASSIFICATION	1.924188616901048E-6	DEFECT
// add a value	WITHOUT_CLASSIFICATION	0.9999900983421013	WITHOUT_CLASSIFICATION	9.901657898691814E-6	DEFECT
// add another value	WITHOUT_CLASSIFICATION	0.999998107646344	WITHOUT_CLASSIFICATION	1.8923536560990426E-6	DEFECT
// try a dataset with some content...	WITHOUT_CLASSIFICATION	0.9999961759564621	WITHOUT_CLASSIFICATION	3.824043537992664E-6	DEFECT
// try a dataset with some content...	WITHOUT_CLASSIFICATION	0.9999961759564621	WITHOUT_CLASSIFICATION	3.824043537992664E-6	DEFECT
// try a dataset with some content...	WITHOUT_CLASSIFICATION	0.9999961759564621	WITHOUT_CLASSIFICATION	3.824043537992664E-6	DEFECT
// check that the clone doesn't share the same underlying arrays.	WITHOUT_CLASSIFICATION	0.9999854354185566	WITHOUT_CLASSIFICATION	1.456458144352663E-5	DEFECT
// check that the clone doesn't share the same underlying arrays.	WITHOUT_CLASSIFICATION	0.9999854354185566	WITHOUT_CLASSIFICATION	1.456458144352663E-5	DEFECT
// add an empty series	WITHOUT_CLASSIFICATION	0.9999954441098501	WITHOUT_CLASSIFICATION	4.55589014991257E-6	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999924735504521	WITHOUT_CLASSIFICATION	7.526449547970881E-6	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999924735504521	WITHOUT_CLASSIFICATION	7.526449547970881E-6	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999924735504521	WITHOUT_CLASSIFICATION	7.526449547970881E-6	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999924735504521	WITHOUT_CLASSIFICATION	7.526449547970881E-6	DEFECT
// wrong outcome	WITHOUT_CLASSIFICATION	0.9999980060979328	WITHOUT_CLASSIFICATION	1.993902067168102E-6	DEFECT
// wrong outcome	WITHOUT_CLASSIFICATION	0.9999980060979328	WITHOUT_CLASSIFICATION	1.993902067168102E-6	DEFECT
// tests with values	WITHOUT_CLASSIFICATION	0.9999991863674179	WITHOUT_CLASSIFICATION	8.136325821371691E-7	DEFECT
// seriesKey	WITHOUT_CLASSIFICATION	0.9999983986104881	WITHOUT_CLASSIFICATION	1.601389511789926E-6	DEFECT
// remove a value	WITHOUT_CLASSIFICATION	0.99998729065127	WITHOUT_CLASSIFICATION	1.2709348729976584E-5	DEFECT
// add a series	WITHOUT_CLASSIFICATION	0.9999993090285686	WITHOUT_CLASSIFICATION	6.909714313907816E-7	DEFECT
/* XYSeries s = */	WITHOUT_CLASSIFICATION	0.9999846294295077	WITHOUT_CLASSIFICATION	1.5370570492316816E-5	DEFECT
/* XYSeries s = */	WITHOUT_CLASSIFICATION	0.9999846294295077	WITHOUT_CLASSIFICATION	1.5370570492316816E-5	DEFECT
// and check the first series too...	WITHOUT_CLASSIFICATION	0.9999997908486756	WITHOUT_CLASSIFICATION	2.0915132438630727E-7	DEFECT
// allowDuplicateValues	WITHOUT_CLASSIFICATION	0.9999980602170896	WITHOUT_CLASSIFICATION	1.93978291052125E-6	DEFECT
// check for series key out of bounds	WITHOUT_CLASSIFICATION	0.9999997854853104	WITHOUT_CLASSIFICATION	2.1451468958469742E-7	DEFECT
/*Comparable k =*/	WITHOUT_CLASSIFICATION	0.9999539342960019	WITHOUT_CLASSIFICATION	4.6065703998193854E-5	DEFECT
/*Comparable k =*/	WITHOUT_CLASSIFICATION	0.9999539342960019	WITHOUT_CLASSIFICATION	4.6065703998193854E-5	DEFECT
/*Comparable k =*/	WITHOUT_CLASSIFICATION	0.9999539342960019	WITHOUT_CLASSIFICATION	4.6065703998193854E-5	DEFECT
// check that adding a series will overwrite the old series	WITHOUT_CLASSIFICATION	0.9999989307061801	WITHOUT_CLASSIFICATION	1.0692938199307598E-6	DEFECT
// check that adding a series will overwrite the old series	WITHOUT_CLASSIFICATION	0.9999989307061801	WITHOUT_CLASSIFICATION	1.0692938199307598E-6	DEFECT
// check that adding a series will overwrite the old series	WITHOUT_CLASSIFICATION	0.9999989307061801	WITHOUT_CLASSIFICATION	1.0692938199307598E-6	DEFECT
// check null key	WITHOUT_CLASSIFICATION	0.9999943635931199	WITHOUT_CLASSIFICATION	5.636406880029339E-6	DEFECT
// check null key	WITHOUT_CLASSIFICATION	0.9999943635931199	WITHOUT_CLASSIFICATION	5.636406880029339E-6	DEFECT
// check null key	WITHOUT_CLASSIFICATION	0.9999943635931199	WITHOUT_CLASSIFICATION	5.636406880029339E-6	DEFECT
// try an index out of bounds	WITHOUT_CLASSIFICATION	0.9999937652226113	WITHOUT_CLASSIFICATION	6.234777388706735E-6	DEFECT
// now add some more data	WITHOUT_CLASSIFICATION	0.999994098400798	WITHOUT_CLASSIFICATION	5.901599202056942E-6	DEFECT
// xLow	WITHOUT_CLASSIFICATION	0.9999910488041953	WITHOUT_CLASSIFICATION	8.951195804720022E-6	DEFECT
// xHigh	WITHOUT_CLASSIFICATION	0.9999917799873997	WITHOUT_CLASSIFICATION	8.220012600237435E-6	DEFECT
// first check that a valid renaming works	WITHOUT_CLASSIFICATION	0.9999907095808442	WITHOUT_CLASSIFICATION	9.290419155730445E-6	DEFECT
// next, check that setting a duplicate key fails	WITHOUT_CLASSIFICATION	0.9999936767788777	WITHOUT_CLASSIFICATION	6.323221122337306E-6	DEFECT
// create an array of items in reverse order	WITHOUT_CLASSIFICATION	0.99999893269885	WITHOUT_CLASSIFICATION	1.0673011500372562E-6	DEFECT
// got the required exception	WITHOUT_CLASSIFICATION	0.9999859981189254	WITHOUT_CLASSIFICATION	1.4001881074556899E-5	DEFECT
// set a theme using the new shadow generator feature available in // 1.0.14 - for backwards compatibility it is not enabled by default	WITHOUT_CLASSIFICATION	0.999999874151882	WITHOUT_CLASSIFICATION	1.258481180305036E-7	DEFECT
// call parent method // setup flag based on bounds values	WITHOUT_CLASSIFICATION	0.9999954646446683	WITHOUT_CLASSIFICATION	4.535355331700385E-6	DEFECT
//if flag then change to log version of lowest value // to make range begin at a 10^n value:	WITHOUT_CLASSIFICATION	0.9999934391824388	WITHOUT_CLASSIFICATION	6.56081756125107E-6	DEFECT
//if less than 1.0 then make it 1.0 //add in margin and get exponential value:	WITHOUT_CLASSIFICATION	0.9999981996090375	WITHOUT_CLASSIFICATION	1.8003909626148193E-6	DEFECT
//negatives not allowed and upper bound between 0 & 1 //round up to nearest significant digit for bound: //get negative exponent:	WITHOUT_CLASSIFICATION	0.9999997444268924	WITHOUT_CLASSIFICATION	2.555731075296953E-7	DEFECT
//not first tick to be displayed //no tick label	WITHOUT_CLASSIFICATION	0.999995117042298	WITHOUT_CLASSIFICATION	4.8829577020140715E-6	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999917400541091	WITHOUT_CLASSIFICATION	8.259945890952432E-6	DEFECT
// x	WITHOUT_CLASSIFICATION	0.9999878621311072	WITHOUT_CLASSIFICATION	1.21378688928405E-5	DEFECT
// y	WITHOUT_CLASSIFICATION	0.9999883087656294	WITHOUT_CLASSIFICATION	1.1691234370591084E-5	DEFECT
// default instances	WITHOUT_CLASSIFICATION	0.9999985620541428	WITHOUT_CLASSIFICATION	1.4379458570960646E-6	DEFECT
// TBLRC // 00000 - no items	WITHOUT_CLASSIFICATION	0.999982923024598	WITHOUT_CLASSIFICATION	1.7076975402005507E-5	DEFECT
// try a few checks to ensure that the clone is independent of the // original	WITHOUT_CLASSIFICATION	0.9999999815661159	WITHOUT_CLASSIFICATION	1.8433884139798855E-8	DEFECT
// autoSort	WITHOUT_CLASSIFICATION	0.9999980758113831	WITHOUT_CLASSIFICATION	1.924188616901048E-6	DEFECT
// add a value	WITHOUT_CLASSIFICATION	0.9999900983421013	WITHOUT_CLASSIFICATION	9.901657898691814E-6	DEFECT
// add another value	WITHOUT_CLASSIFICATION	0.999998107646344	WITHOUT_CLASSIFICATION	1.8923536560990426E-6	DEFECT
// add an empty series	WITHOUT_CLASSIFICATION	0.9999954441098501	WITHOUT_CLASSIFICATION	4.55589014991257E-6	DEFECT
// now we should be allowed to change s1's key to anything but "S2"	WITHOUT_CLASSIFICATION	0.9999503235999534	WITHOUT_CLASSIFICATION	4.967640004666285E-5	DEFECT
// after s1 is removed from the collection, we should be able to set // the key to anything we want...	WITHOUT_CLASSIFICATION	0.9999951975201555	WITHOUT_CLASSIFICATION	4.8024798444826685E-6	DEFECT
// check that removing by index also works	WITHOUT_CLASSIFICATION	0.9999682103984832	WITHOUT_CLASSIFICATION	3.1789601516880444E-5	DEFECT
// correct outcome	WITHOUT_CLASSIFICATION	0.9999555314045395	WITHOUT_CLASSIFICATION	4.446859546054147E-5	DEFECT
// wrong outcome	WITHOUT_CLASSIFICATION	0.9999980060979328	WITHOUT_CLASSIFICATION	1.993902067168102E-6	DEFECT
// remove a value	WITHOUT_CLASSIFICATION	0.99998729065127	WITHOUT_CLASSIFICATION	1.2709348729976584E-5	DEFECT
// add a series	WITHOUT_CLASSIFICATION	0.9999993090285686	WITHOUT_CLASSIFICATION	6.909714313907816E-7	DEFECT
/* XYSeries s = */	WITHOUT_CLASSIFICATION	0.9999846294295077	WITHOUT_CLASSIFICATION	1.5370570492316816E-5	DEFECT
// yLow	WITHOUT_CLASSIFICATION	0.9999908314499983	WITHOUT_CLASSIFICATION	9.168550001570501E-6	DEFECT
// yHigh	WITHOUT_CLASSIFICATION	0.9999915490222768	WITHOUT_CLASSIFICATION	8.450977723199845E-6	DEFECT
// xLow	WITHOUT_CLASSIFICATION	0.9999910488041953	WITHOUT_CLASSIFICATION	8.951195804720022E-6	DEFECT
// xHigh	WITHOUT_CLASSIFICATION	0.9999917799873997	WITHOUT_CLASSIFICATION	8.220012600237435E-6	DEFECT
// when the dataset contains no series, we expect the value range to  // be null	WITHOUT_CLASSIFICATION	0.9999971865758102	WITHOUT_CLASSIFICATION	2.813424189850912E-6	DEFECT
// when the dataset contains one or more series, but those series  // contain no items, we expect the value range to be null	WITHOUT_CLASSIFICATION	0.9999990103766344	WITHOUT_CLASSIFICATION	9.896233655703543E-7	DEFECT
// the series name should not  // change because "C" is already the key for the other series in the // collection	WITHOUT_CLASSIFICATION	0.9999893758836206	WITHOUT_CLASSIFICATION	1.0624116379339768E-5	DEFECT
//  Test that there are 6 X points and some specific values	WITHOUT_CLASSIFICATION	0.9999987224387018	WITHOUT_CLASSIFICATION	1.2775612981747508E-6	DEFECT
// after adding a point to a series, check that there are now 7 // items in each series	WITHOUT_CLASSIFICATION	0.9999994411558796	WITHOUT_CLASSIFICATION	5.588441204904572E-7	DEFECT
//  Remove series 1	WITHOUT_CLASSIFICATION	0.9999975673083676	WITHOUT_CLASSIFICATION	2.432691632371201E-6	DEFECT
//  Test that there are still 7 X points	WITHOUT_CLASSIFICATION	0.9999989262693231	WITHOUT_CLASSIFICATION	1.0737306769800915E-6	DEFECT
//  Remove series 2 and add new series	WITHOUT_CLASSIFICATION	0.9999991323188101	WITHOUT_CLASSIFICATION	8.676811899210694E-7	DEFECT
//  Test that there are now 4 X points	WITHOUT_CLASSIFICATION	0.9999979898414982	WITHOUT_CLASSIFICATION	2.010158501838134E-6	DEFECT
// WITH AUTOPRUNING	WITHOUT_CLASSIFICATION	0.9999885750112563	WITHOUT_CLASSIFICATION	1.1424988743617711E-5	DEFECT
// should be 2 items	WITHOUT_CLASSIFICATION	0.9999945084280443	WITHOUT_CLASSIFICATION	5.491571955690899E-6	DEFECT
// should be 2 items	WITHOUT_CLASSIFICATION	0.9999945084280443	WITHOUT_CLASSIFICATION	5.491571955690899E-6	DEFECT
// still 2	WITHOUT_CLASSIFICATION	0.9999959084761505	WITHOUT_CLASSIFICATION	4.0915238495831976E-6	DEFECT
// still 2	WITHOUT_CLASSIFICATION	0.9999959084761505	WITHOUT_CLASSIFICATION	4.0915238495831976E-6	DEFECT
// 1 value pruned.	WITHOUT_CLASSIFICATION	0.9999981702823754	WITHOUT_CLASSIFICATION	1.8297176245772223E-6	DEFECT
// WITHOUT AUTOPRUNING	WITHOUT_CLASSIFICATION	0.9999699011953737	WITHOUT_CLASSIFICATION	3.0098804626353287E-5	DEFECT
// still 2.	WITHOUT_CLASSIFICATION	0.9999966968536833	WITHOUT_CLASSIFICATION	3.3031463166361803E-6	DEFECT
// ****************************************************************** //  More than 150 demo applications are included with the JFreeChart //  Developer Guide...for more information, see: // //  >   http://www.object-refinery.com/jfreechart/guide.html // // ******************************************************************	WITHOUT_CLASSIFICATION	0.99999885571185	WITHOUT_CLASSIFICATION	1.1442881499303101E-6	DEFECT
// here we do a check to see if the user is installing the "Legacy" // theme, and reset the bar painters in that case...	WITHOUT_CLASSIFICATION	0.9999999340248579	WITHOUT_CLASSIFICATION	6.597514215499866E-8	DEFECT
// since the flow layout is relatively straightforward, // no information needs to be recorded here	WITHOUT_CLASSIFICATION	0.999999590721089	WITHOUT_CLASSIFICATION	4.09278910988527E-7	DEFECT
// nothing is drawn if the row index is not included in the list with // the indices of the visible rows...	WITHOUT_CLASSIFICATION	0.9999994856915335	WITHOUT_CLASSIFICATION	5.14308466437407E-7	DEFECT
// calculate the bar width - this calculation differs from the // BarRenderer calculation because the bars are layered on top of one // another, so there is effectively only one bar per category for // the purpose of the bar width calculation	WITHOUT_CLASSIFICATION	0.9999995414321423	WITHOUT_CLASSIFICATION	4.5856785766130834E-7	DEFECT
// the link area defines the dog leg points for the linking lines to // the labels	WITHOUT_CLASSIFICATION	0.9999997220857916	WITHOUT_CLASSIFICATION	2.7791420833490724E-7	DEFECT
// if the current stroke is not a BasicStroke then it is handled as // a special case	WITHOUT_CLASSIFICATION	0.9999996171582882	WITHOUT_CLASSIFICATION	3.828417118405388E-7	DEFECT
// after setting up all the subplots, the shared range axis may need // reconfiguring	WITHOUT_CLASSIFICATION	0.999999735618825	WITHOUT_CLASSIFICATION	2.6438117494773443E-7	DEFECT
// if there is an existing dataset, remove the plot from the list of // change listeners...	WITHOUT_CLASSIFICATION	0.9999995795289041	WITHOUT_CLASSIFICATION	4.2047109584777056E-7	DEFECT
// the segment is entirely at the // front of the chart	WITHOUT_CLASSIFICATION	0.9999999409407614	WITHOUT_CLASSIFICATION	5.9059238537036136E-8	DEFECT
// starts at back and wraps right around to the // back again	WITHOUT_CLASSIFICATION	0.99999991981122	WITHOUT_CLASSIFICATION	8.018877999004244E-8	DEFECT
// if the source point doesn't fall within a subplot, we do the // zoom on all subplots...	WITHOUT_CLASSIFICATION	0.9999995183214268	WITHOUT_CLASSIFICATION	4.816785732538452E-7	DEFECT
//  double range = this.domainAxis.getRange().getLength(); //  double scaledRange = range * percent; //  domainAxis.setAnchoredRange(scaledRange);	WITHOUT_CLASSIFICATION	0.9999690745947843	WITHOUT_CLASSIFICATION	3.092540521568791E-5	DEFECT
// the anchor point is typically the point where the mouse last // clicked - the crosshairs will be driven off this point...	WITHOUT_CLASSIFICATION	0.9999986180549779	WITHOUT_CLASSIFICATION	1.3819450220771856E-6	DEFECT
// axisIndices can be: // 1.  null; // 2.  non-empty, containing only Integer objects that are unique.	WITHOUT_CLASSIFICATION	0.9999599498857845	WITHOUT_CLASSIFICATION	4.005011421554478E-5	DEFECT
// if this cell held a maximum and/or minimum value, we'll need to // update the cached bounds...	WITHOUT_CLASSIFICATION	0.9999999509549878	WITHOUT_CLASSIFICATION	4.90450121742382E-8	DEFECT
// if the 'notify' flag has been switched to false, we don't notify // the listeners	WITHOUT_CLASSIFICATION	0.9999921090136512	WITHOUT_CLASSIFICATION	7.890986348833981E-6	DEFECT
// private Plot parent <-- don't clone the parent plot, but take care // childs in combined plots instead	WITHOUT_CLASSIFICATION	0.9999496626745685	WITHOUT_CLASSIFICATION	5.0337325431426106E-5	DEFECT
// For the case were the first tick is greater // than minZ	WITHOUT_CLASSIFICATION	0.9999906455966159	WITHOUT_CLASSIFICATION	9.354403384149723E-6	DEFECT
// add an entity for the item, but only if it falls within the // data area...	WITHOUT_CLASSIFICATION	0.999998102286404	WITHOUT_CLASSIFICATION	1.8977135960375204E-6	DEFECT
// we create an event with a special flag set...the purpose of // this is to communicate to the plot (the default receiver of // the event) that series visibility has changed so the axis // ranges might need updating...	WITHOUT_CLASSIFICATION	0.9999999976886917	WITHOUT_CLASSIFICATION	2.3113081642377865E-9	DEFECT
// when the x-values are sorted in descending order, the lower // bound is found by calculating relative to the xHigh value	WITHOUT_CLASSIFICATION	0.9999904253120924	WITHOUT_CLASSIFICATION	9.574687907637646E-6	DEFECT
// nothing is drawn if the row index is not included in the list with // the indices of the visible rows...	WITHOUT_CLASSIFICATION	0.9999994856915335	WITHOUT_CLASSIFICATION	5.14308466437407E-7	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999924735504521	WITHOUT_CLASSIFICATION	7.526449547970881E-6	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999924735504521	WITHOUT_CLASSIFICATION	7.526449547970881E-6	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999924735504521	WITHOUT_CLASSIFICATION	7.526449547970881E-6	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999924735504521	WITHOUT_CLASSIFICATION	7.526449547970881E-6	DEFECT
// nothing is drawn if the row index is not included in the list with // the indices of the visible rows...	WITHOUT_CLASSIFICATION	0.9999994856915335	WITHOUT_CLASSIFICATION	5.14308466437407E-7	DEFECT
/////////////////////////////////////////////////////////////////////////// // From HighLowDataset ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.999999035278595	WITHOUT_CLASSIFICATION	9.647214050587435E-7	DEFECT
// handle a special case - if the bar colour has alpha == 0, it is // invisible so we shouldn't draw any shadow	WITHOUT_CLASSIFICATION	0.9999988830494198	WITHOUT_CLASSIFICATION	1.1169505802431198E-6	DEFECT
// handle a special case - if the bar colour has alpha == 0, it is // invisible so we shouldn't draw any shadow	WITHOUT_CLASSIFICATION	0.9999988830494198	WITHOUT_CLASSIFICATION	1.1169505802431198E-6	DEFECT
// if the dataset is not a StatisticalCategoryDataset then just revert // to the superclass (LineAndShapeRenderer) behaviour...	WITHOUT_CLASSIFICATION	0.9999999599590147	WITHOUT_CLASSIFICATION	4.004098535990556E-8	DEFECT
// FIXME: add setSeriesToolTipGenerator(int, CategoryToolTipGenerator, //            boolean) ?	WITHOUT_CLASSIFICATION	0.914854643473132	WITHOUT_CLASSIFICATION	0.08514535652686814	DEFECT
// average radius // outlier radius	WITHOUT_CLASSIFICATION	0.999999345398492	WITHOUT_CLASSIFICATION	6.546015079582089E-7	DEFECT
// false preserves the old behaviour // prior to introducing this flag	WITHOUT_CLASSIFICATION	0.9998547056605587	WITHOUT_CLASSIFICATION	1.4529433944136558E-4	DEFECT
// These are deliberately not bounded to minimums/maxCandleWidth to //  retain old behaviour.	WITHOUT_CLASSIFICATION	0.9999976404245062	WITHOUT_CLASSIFICATION	2.359575493773945E-6	DEFECT
// the noCodeBaseClassLoader is configured by a call to the // removeCodeBase() method, typically in the init() method of an // applet...	WITHOUT_CLASSIFICATION	0.999992032680183	WITHOUT_CLASSIFICATION	7.96731981708578E-6	DEFECT
// the noCodeBaseClassLoader is configured by a call to the // removeCodeBase() method, typically in the init() method of an // applet...	WITHOUT_CLASSIFICATION	0.999992032680183	WITHOUT_CLASSIFICATION	7.96731981708578E-6	DEFECT
// deregister the collection as a change listener to each series in // the collection.	WITHOUT_CLASSIFICATION	0.9999988244937509	WITHOUT_CLASSIFICATION	1.1755062490163117E-6	DEFECT
// handle the special case where the dataset has y-intervals that // we want to measure	WITHOUT_CLASSIFICATION	0.9999999436721986	WITHOUT_CLASSIFICATION	5.632780128944707E-8	DEFECT
// CASE 3 : Comparing to a non-TimePeriod object // ---------------------------------------------	WITHOUT_CLASSIFICATION	0.9999495395679789	WITHOUT_CLASSIFICATION	5.046043202104536E-5	DEFECT
// CASE 1 : Comparing to another Second object // -------------------------------------------	WITHOUT_CLASSIFICATION	0.9999807547005874	WITHOUT_CLASSIFICATION	1.9245299412482867E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999924735504521	WITHOUT_CLASSIFICATION	7.526449547970881E-6	DEFECT
// end period is not in original series // this is first item AFTER end period // so this is last item BEFORE end	WITHOUT_CLASSIFICATION	0.9999865902673871	WITHOUT_CLASSIFICATION	1.3409732612859099E-5	DEFECT
// the first initialization must precede creation of the ValueSet array: // establishes length of each array	WITHOUT_CLASSIFICATION	0.9999997832884906	WITHOUT_CLASSIFICATION	2.1671150949104388E-7	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999924735504521	WITHOUT_CLASSIFICATION	7.526449547970881E-6	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999924735504521	WITHOUT_CLASSIFICATION	7.526449547970881E-6	DEFECT
// here we check that the average marker will in fact be // visible before drawing it...	WITHOUT_CLASSIFICATION	0.9998941418506666	WITHOUT_CLASSIFICATION	1.0585814933332728E-4	DEFECT
// draw outliers // outlier radius	WITHOUT_CLASSIFICATION	0.9999996539763409	WITHOUT_CLASSIFICATION	3.4602365910216595E-7	DEFECT
// NULL value -> insert point on base line // instead of 'step point'	WITHOUT_CLASSIFICATION	0.9999989747392395	WITHOUT_CLASSIFICATION	1.0252607605064534E-6	DEFECT
// coordinate pairs // current minuend point // next minuend point // current subtrahend point // next subtrahend point	WITHOUT_CLASSIFICATION	0.9999998952947543	WITHOUT_CLASSIFICATION	1.0470524568103165E-7	DEFECT
// the intersect is at the next point for both the minuend // and subtrahend	WITHOUT_CLASSIFICATION	0.9999993728170277	WITHOUT_CLASSIFICATION	6.271829722178496E-7	DEFECT
// create the polygon // add the minuend's points to polygon	WITHOUT_CLASSIFICATION	0.9999998342982048	WITHOUT_CLASSIFICATION	1.6570179516709451E-7	DEFECT
// the following code handles the line for the y-values...it's // all done by code in the super class	WITHOUT_CLASSIFICATION	0.9999995664355892	WITHOUT_CLASSIFICATION	4.335644108583527E-7	DEFECT
// Check if the item is the last item for the series and number of // items > 0.  We can't draw an area for a single point.	WITHOUT_CLASSIFICATION	0.9999998983384644	WITHOUT_CLASSIFICATION	1.016615356233721E-7	DEFECT
// use item paint for outlines by // default, not outline paint	WITHOUT_CLASSIFICATION	0.9999997251553081	WITHOUT_CLASSIFICATION	2.748446918537232E-7	DEFECT
// add an entity for the item, but only if it falls within the data // area...	WITHOUT_CLASSIFICATION	0.9999991707176578	WITHOUT_CLASSIFICATION	8.292823421736632E-7	DEFECT
// the bounds should be calculated using just the items within // the current range of the x-axis...if there is one	WITHOUT_CLASSIFICATION	0.9999993075748794	WITHOUT_CLASSIFICATION	6.924251206296976E-7	DEFECT
// We organise the data with the following assumption: // 1) the data are sorted by x then y // 2) that the data will be represented by a rectangle formed by //    using x[i+1], x, y[j+1], and y. // 3) we march along the y-axis at the same value of x until a new //    value x is found at which point we will flag the index //    where x[i+1]<>x[i]	WITHOUT_CLASSIFICATION	0.999993185364206	WITHOUT_CLASSIFICATION	6.814635794107718E-6	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999924735504521	WITHOUT_CLASSIFICATION	7.526449547970881E-6	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999924735504521	WITHOUT_CLASSIFICATION	7.526449547970881E-6	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999924735504521	WITHOUT_CLASSIFICATION	7.526449547970881E-6	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999924735504521	WITHOUT_CLASSIFICATION	7.526449547970881E-6	DEFECT
// create the new color and set it to the // SwtPaintCanvas	WITHOUT_CLASSIFICATION	0.9999999953247681	WITHOUT_CLASSIFICATION	4.67523179402831E-9	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999924735504521	WITHOUT_CLASSIFICATION	7.526449547970881E-6	DEFECT
// we're doing this for testing only, and make sure that we // only add data in ascending order by x-value	WITHOUT_CLASSIFICATION	0.9999880330142438	WITHOUT_CLASSIFICATION	1.1966985756242023E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999924735504521	WITHOUT_CLASSIFICATION	7.526449547970881E-6	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999924735504521	WITHOUT_CLASSIFICATION	7.526449547970881E-6	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999924735504521	WITHOUT_CLASSIFICATION	7.526449547970881E-6	DEFECT
// have to use a subclass of // AbstractRenderer	WITHOUT_CLASSIFICATION	0.9999999716742892	WITHOUT_CLASSIFICATION	2.832571071216975E-8	DEFECT
// include legend // tooltips // urls	WITHOUT_CLASSIFICATION	0.9999987628642953	WITHOUT_CLASSIFICATION	1.237135704635646E-6	DEFECT
// setup our test timelines // // Legend for comments below: // <spaces> = Segments included in the final timeline // EE       = Excluded segments via timeline rules // xx       = Exception segments inherited from base timeline exclusions	WITHOUT_CLASSIFICATION	0.9999996397546481	WITHOUT_CLASSIFICATION	3.6024535189999817E-7	DEFECT
////////////////////////////////////////////////////////////////////////// // test exception segments //////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999995754108495	WITHOUT_CLASSIFICATION	4.245891505224909E-7	DEFECT
// we use ValueMarker for the tests, because we need a concrete // subclass...	WITHOUT_CLASSIFICATION	0.9999999855380951	WITHOUT_CLASSIFICATION	1.4461904760834016E-8	DEFECT
// now check that all datasets, renderers and axes are being listened // too...	WITHOUT_CLASSIFICATION	0.9999767279306528	WITHOUT_CLASSIFICATION	2.3272069347240698E-5	DEFECT
// now check that all datasets, renderers and axes are being listened // too...	WITHOUT_CLASSIFICATION	0.9999767279306528	WITHOUT_CLASSIFICATION	2.3272069347240698E-5	DEFECT
// after clearing, reverts to // default group	WITHOUT_CLASSIFICATION	0.9999997057407046	WITHOUT_CLASSIFICATION	2.942592954633157E-7	DEFECT
// regular equality for the datasets doesn't check the fields, just // the data values...so let's check some more things...	WITHOUT_CLASSIFICATION	0.9999998841672176	WITHOUT_CLASSIFICATION	1.1583278225561044E-7	DEFECT
// these methods should throw an IndexOutOfBoundsException since the // column is too high...	WITHOUT_CLASSIFICATION	0.9999878172428431	WITHOUT_CLASSIFICATION	1.2182757156805259E-5	DEFECT
// this replaces the entry with the current minimum value, but the new // minimum value is now in a different item	WITHOUT_CLASSIFICATION	0.9999429873515301	WITHOUT_CLASSIFICATION	5.7012648470030503E-5	DEFECT
// the dataset should prevent the addition of a series with the // same name as an existing series in the dataset	WITHOUT_CLASSIFICATION	0.9999990758980917	WITHOUT_CLASSIFICATION	9.241019083053234E-7	DEFECT
/*item = */	WITHOUT_CLASSIFICATION	0.9999636441251312	WITHOUT_CLASSIFICATION	3.6355874868893144E-5	DEFECT
// test empty series	WITHOUT_CLASSIFICATION	0.9999997612351019	WITHOUT_CLASSIFICATION	2.3876489813950493E-7	DEFECT
// now we should be allowed to change s1's key to anything but "S2"	WITHOUT_CLASSIFICATION	0.9999503235999534	WITHOUT_CLASSIFICATION	4.967640004666285E-5	DEFECT
// after s1 is removed from the collection, we should be able to set // the key to anything we want...	WITHOUT_CLASSIFICATION	0.9999951975201555	WITHOUT_CLASSIFICATION	4.8024798444826685E-6	DEFECT
// locale should not matter here	WITHOUT_CLASSIFICATION	0.9999890575662529	WITHOUT_CLASSIFICATION	1.0942433747067365E-5	DEFECT
// correct outcome	WITHOUT_CLASSIFICATION	0.9999555314045395	WITHOUT_CLASSIFICATION	4.446859546054147E-5	DEFECT
// correct outcome	WITHOUT_CLASSIFICATION	0.9999555314045395	WITHOUT_CLASSIFICATION	4.446859546054147E-5	DEFECT
// wrong outcome	WITHOUT_CLASSIFICATION	0.9999980060979328	WITHOUT_CLASSIFICATION	1.993902067168102E-6	DEFECT
// when the dataset contains one or more series, but those series // contain no items, we still expect the range to be null	WITHOUT_CLASSIFICATION	0.9999993124548759	WITHOUT_CLASSIFICATION	6.875451240192109E-7	DEFECT
// tests with values	WITHOUT_CLASSIFICATION	0.9999991863674179	WITHOUT_CLASSIFICATION	8.136325821371691E-7	DEFECT
// tests with values	WITHOUT_CLASSIFICATION	0.9999991863674179	WITHOUT_CLASSIFICATION	8.136325821371691E-7	DEFECT
// seriesKey	WITHOUT_CLASSIFICATION	0.9999983986104881	WITHOUT_CLASSIFICATION	1.601389511789926E-6	DEFECT
// open	WITHOUT_CLASSIFICATION	0.9999941164298392	WITHOUT_CLASSIFICATION	5.883570160858729E-6	DEFECT
// add a series	WITHOUT_CLASSIFICATION	0.9999993090285686	WITHOUT_CLASSIFICATION	6.909714313907816E-7	DEFECT
// allowDuplicateValues	WITHOUT_CLASSIFICATION	0.9999980602170896	WITHOUT_CLASSIFICATION	1.93978291052125E-6	DEFECT
// check for series key out of bounds	WITHOUT_CLASSIFICATION	0.9999997854853104	WITHOUT_CLASSIFICATION	2.1451468958469742E-7	DEFECT
// check for series key out of bounds	WITHOUT_CLASSIFICATION	0.9999997854853104	WITHOUT_CLASSIFICATION	2.1451468958469742E-7	DEFECT
/*Comparable k =*/	WITHOUT_CLASSIFICATION	0.9999539342960019	WITHOUT_CLASSIFICATION	4.6065703998193854E-5	DEFECT
/*Comparable k =*/	WITHOUT_CLASSIFICATION	0.9999539342960019	WITHOUT_CLASSIFICATION	4.6065703998193854E-5	DEFECT
/*Comparable k =*/	WITHOUT_CLASSIFICATION	0.9999539342960019	WITHOUT_CLASSIFICATION	4.6065703998193854E-5	DEFECT
/*Comparable k =*/	WITHOUT_CLASSIFICATION	0.9999539342960019	WITHOUT_CLASSIFICATION	4.6065703998193854E-5	DEFECT
// when the dataset contains no series, we expect the value range to  // be null	WITHOUT_CLASSIFICATION	0.9999971865758102	WITHOUT_CLASSIFICATION	2.813424189850912E-6	DEFECT
// when the dataset contains no series, we expect the value range to  // be null	WITHOUT_CLASSIFICATION	0.9999971865758102	WITHOUT_CLASSIFICATION	2.813424189850912E-6	DEFECT
// when the dataset contains one or more series, but those series  // contain no items, we expect the value range to be null	WITHOUT_CLASSIFICATION	0.9999990103766344	WITHOUT_CLASSIFICATION	9.896233655703543E-7	DEFECT
// when the dataset contains one or more series, but those series  // contain no items, we expect the value range to be null	WITHOUT_CLASSIFICATION	0.9999990103766344	WITHOUT_CLASSIFICATION	9.896233655703543E-7	DEFECT
// complicate things a little...	WITHOUT_CLASSIFICATION	0.9999959204924046	WITHOUT_CLASSIFICATION	4.079507595333145E-6	DEFECT
// seem to be the same...	WITHOUT_CLASSIFICATION	0.9999990182381602	WITHOUT_CLASSIFICATION	9.817618397672996E-7	DEFECT
// what is our alignment?	WITHOUT_CLASSIFICATION	0.9999837088606678	WITHOUT_CLASSIFICATION	1.6291139332177225E-5	DEFECT
// what is our alignment?	WITHOUT_CLASSIFICATION	0.9999837088606678	WITHOUT_CLASSIFICATION	1.6291139332177225E-5	DEFECT
// seem to be the same...	WITHOUT_CLASSIFICATION	0.9999990182381602	WITHOUT_CLASSIFICATION	9.817618397672996E-7	DEFECT
// slope	WITHOUT_CLASSIFICATION	0.9999975638617778	WITHOUT_CLASSIFICATION	2.4361382221361595E-6	DEFECT
// complicate things a little...	WITHOUT_CLASSIFICATION	0.9999959204924046	WITHOUT_CLASSIFICATION	4.079507595333145E-6	DEFECT
// expected	WITHOUT_CLASSIFICATION	0.9999988239320405	WITHOUT_CLASSIFICATION	1.1760679595161268E-6	DEFECT
// expected	WITHOUT_CLASSIFICATION	0.9999988239320405	WITHOUT_CLASSIFICATION	1.1760679595161268E-6	DEFECT
// expected	WITHOUT_CLASSIFICATION	0.9999988239320405	WITHOUT_CLASSIFICATION	1.1760679595161268E-6	DEFECT
// expected	WITHOUT_CLASSIFICATION	0.9999988239320405	WITHOUT_CLASSIFICATION	1.1760679595161268E-6	DEFECT
// expected	WITHOUT_CLASSIFICATION	0.9999988239320405	WITHOUT_CLASSIFICATION	1.1760679595161268E-6	DEFECT
// expected	WITHOUT_CLASSIFICATION	0.9999988239320405	WITHOUT_CLASSIFICATION	1.1760679595161268E-6	DEFECT
/* (non-Javadoc)     * @see org.eclipse.swt.events.FocusListener#focusGained(     * org.eclipse.swt.events.FocusEvent)     */	WITHOUT_CLASSIFICATION	0.9999999183092673	WITHOUT_CLASSIFICATION	8.16907327838652E-8	DEFECT
/* (non-Javadoc)     * @see org.eclipse.swt.events.FocusListener#focusLost(     * org.eclipse.swt.events.FocusEvent)     */	WITHOUT_CLASSIFICATION	0.9999998065155519	WITHOUT_CLASSIFICATION	1.9348444819298573E-7	DEFECT
/* (non-Javadoc)         * @see org.jfree.chart.axis.LogarithmicAxis#switchedLog10(double)         */	WITHOUT_CLASSIFICATION	0.9999999592443204	WITHOUT_CLASSIFICATION	4.075567963357349E-8	DEFECT
// expected	WITHOUT_CLASSIFICATION	0.9999988239320405	WITHOUT_CLASSIFICATION	1.1760679595161268E-6	DEFECT
// expected	WITHOUT_CLASSIFICATION	0.9999988239320405	WITHOUT_CLASSIFICATION	1.1760679595161268E-6	DEFECT
// expected	WITHOUT_CLASSIFICATION	0.9999988239320405	WITHOUT_CLASSIFICATION	1.1760679595161268E-6	DEFECT
// expected	WITHOUT_CLASSIFICATION	0.9999988239320405	WITHOUT_CLASSIFICATION	1.1760679595161268E-6	DEFECT
// expected	WITHOUT_CLASSIFICATION	0.9999988239320405	WITHOUT_CLASSIFICATION	1.1760679595161268E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999944401552767	WITHOUT_CLASSIFICATION	5.559844723236735E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999944401552767	WITHOUT_CLASSIFICATION	5.559844723236735E-6	DEFECT
// do nothing	WITHOUT_CLASSIFICATION	0.9999903433540344	WITHOUT_CLASSIFICATION	9.656645965564418E-6	DEFECT
// do nothing	WITHOUT_CLASSIFICATION	0.9999903433540344	WITHOUT_CLASSIFICATION	9.656645965564418E-6	DEFECT
// do nothing	WITHOUT_CLASSIFICATION	0.9999903433540344	WITHOUT_CLASSIFICATION	9.656645965564418E-6	DEFECT
// do nothing	WITHOUT_CLASSIFICATION	0.9999903433540344	WITHOUT_CLASSIFICATION	9.656645965564418E-6	DEFECT
//}	WITHOUT_CLASSIFICATION	0.9998670637628349	WITHOUT_CLASSIFICATION	1.3293623716505103E-4	DEFECT
// find out where to place the label...	WITHOUT_CLASSIFICATION	0.9999998020783202	WITHOUT_CLASSIFICATION	1.9792167976408573E-7	DEFECT
// find out where to place the label...	WITHOUT_CLASSIFICATION	0.9999998020783202	WITHOUT_CLASSIFICATION	1.9792167976408573E-7	DEFECT
// Anwender hat abgebrochen.	WITHOUT_CLASSIFICATION	0.9999919300495819	WITHOUT_CLASSIFICATION	8.069950418206579E-6	DEFECT
// insets	WITHOUT_CLASSIFICATION	0.9999910650518367	WITHOUT_CLASSIFICATION	8.934948163324742E-6	DEFECT
// insets	WITHOUT_CLASSIFICATION	0.9999910650518367	WITHOUT_CLASSIFICATION	8.934948163324742E-6	DEFECT
// ...but this does!	WITHOUT_CLASSIFICATION	0.9999300293740857	WITHOUT_CLASSIFICATION	6.997062591428811E-5	DEFECT
// insets	WITHOUT_CLASSIFICATION	0.9999910650518367	WITHOUT_CLASSIFICATION	8.934948163324742E-6	DEFECT
// check defaults	WITHOUT_CLASSIFICATION	0.9999998123910395	WITHOUT_CLASSIFICATION	1.8760896054595957E-7	DEFECT
// do nothing	WITHOUT_CLASSIFICATION	0.9999903433540344	WITHOUT_CLASSIFICATION	9.656645965564418E-6	DEFECT
// do nothing	WITHOUT_CLASSIFICATION	0.9999903433540344	WITHOUT_CLASSIFICATION	9.656645965564418E-6	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999934710680527	WITHOUT_CLASSIFICATION	6.528931947226976E-6	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999934710680527	WITHOUT_CLASSIFICATION	6.528931947226976E-6	DEFECT
// OK	WITHOUT_CLASSIFICATION	0.9999871538766184	WITHOUT_CLASSIFICATION	1.2846123381676648E-5	DEFECT
// FIXME: we've cloned the chart, but the dataset(s) aren't cloned // and we should do that	DEFECT	0.8829054683791928	WITHOUT_CLASSIFICATION	0.11709453162080717	DEFECT
// todo: not serialized yet	DEFECT	0.9999916982300042	WITHOUT_CLASSIFICATION	8.3017699958058E-6	DEFECT
// FIRST_MONDAY_AFTER_1900 = cal.getTime().getTime(); // preceding code won't work with JDK 1.3	DEFECT	0.8637600057468294	DEFECT	0.1362399942531706	WITHOUT_CLASSIFICATION
// TODO: we didn't check the height yet	DEFECT	0.542940046909503	WITHOUT_CLASSIFICATION	0.45705995309049685	DEFECT
// TODO: we didn't check the height yet	DEFECT	0.542940046909503	WITHOUT_CLASSIFICATION	0.45705995309049685	DEFECT
// TODO: Check this result...	DEFECT	0.6539473892213062	WITHOUT_CLASSIFICATION	0.3460526107786937	DEFECT
// TODO: Check this result...	DEFECT	0.6539473892213062	WITHOUT_CLASSIFICATION	0.3460526107786937	DEFECT
//return cal.getTimeInMillis(); // preceding code won't work with JDK 1.3	DEFECT	0.9392071847404198	WITHOUT_CLASSIFICATION	0.06079281525958029	DEFECT
// result = this.workingCalendar.getTimeInMillis(); // preceding code won't work with JDK 1.3	DEFECT	0.8071512514133625	WITHOUT_CLASSIFICATION	0.19284874858663748	DEFECT
