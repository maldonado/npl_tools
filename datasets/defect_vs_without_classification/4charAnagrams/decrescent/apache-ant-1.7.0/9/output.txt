/* BuildListener stuff */	WITHOUT_CLASSIFICATION	0.999948469571042	WITHOUT_CLASSIFICATION	5.153042895809676E-5	DEFECT
// we don't expect to find this	WITHOUT_CLASSIFICATION	0.9999891508032478	WITHOUT_CLASSIFICATION	1.0849196752180584E-5	DEFECT
// ignore expected	WITHOUT_CLASSIFICATION	0.9999998707122433	WITHOUT_CLASSIFICATION	1.292877566567906E-7	DEFECT
// ignore expected	WITHOUT_CLASSIFICATION	0.9999998707122433	WITHOUT_CLASSIFICATION	1.292877566567906E-7	DEFECT
// tell the build it is finished	WITHOUT_CLASSIFICATION	0.9999980508548246	WITHOUT_CLASSIFICATION	1.9491451754774184E-6	DEFECT
//end class	WITHOUT_CLASSIFICATION	0.9999944497203814	WITHOUT_CLASSIFICATION	5.550279618554876E-6	DEFECT
// keep track of what operating systems are supported here.	WITHOUT_CLASSIFICATION	0.999998131186263	WITHOUT_CLASSIFICATION	1.868813736951607E-6	DEFECT
// father and child pattern test	WITHOUT_CLASSIFICATION	0.9999993350160438	WITHOUT_CLASSIFICATION	6.649839561607113E-7	DEFECT
// redo the test, but the 2 include patterns are inverted	WITHOUT_CLASSIFICATION	0.9999996715168356	WITHOUT_CLASSIFICATION	3.2848316445823135E-7	DEFECT
// add conditions and more commands as soon as the need arises	WITHOUT_CLASSIFICATION	0.9999749877605958	WITHOUT_CLASSIFICATION	2.5012239404208965E-5	DEFECT
// give ourselves some time for the system call // to execute... tweak if you have a really over // loaded system.	WITHOUT_CLASSIFICATION	0.9999770048881557	WITHOUT_CLASSIFICATION	2.2995111844290562E-5	DEFECT
// followLinks should be true by default, but if this ever // changes we will need this line.	WITHOUT_CLASSIFICATION	0.9999999665323204	WITHOUT_CLASSIFICATION	3.34676795895234E-8	DEFECT
//testing drive letter search from root:	WITHOUT_CLASSIFICATION	0.99999932468191	WITHOUT_CLASSIFICATION	6.753180899580074E-7	DEFECT
//if this is our context we assume there must be something here:	WITHOUT_CLASSIFICATION	0.9999954761683495	WITHOUT_CLASSIFICATION	4.523831650546018E-6	DEFECT
// This path should contain the class files for these testcases:	WITHOUT_CLASSIFICATION	0.9999972586072571	WITHOUT_CLASSIFICATION	2.7413927430278316E-6	DEFECT
// A special parent loader which is not the system class loader:	WITHOUT_CLASSIFICATION	0.9996858479203531	WITHOUT_CLASSIFICATION	3.1415207964698437E-4	DEFECT
// A special parent loader which is not the system class loader:	WITHOUT_CLASSIFICATION	0.9996858479203531	WITHOUT_CLASSIFICATION	3.1415207964698437E-4	DEFECT
// An AntClassLoader which is supposed to delegate to // the parent and then to the disk path:	WITHOUT_CLASSIFICATION	0.9999973338095474	WITHOUT_CLASSIFICATION	2.666190452577024E-6	DEFECT
// The intended result URLs:	WITHOUT_CLASSIFICATION	0.9999989193498061	WITHOUT_CLASSIFICATION	1.0806501939296902E-6	DEFECT
// JDK 1.4: return Collections.list(e);	WITHOUT_CLASSIFICATION	0.9999641878384098	WITHOUT_CLASSIFICATION	3.5812161590221634E-5	DEFECT
// override allowed on <available>	WITHOUT_CLASSIFICATION	0.9999995331381378	WITHOUT_CLASSIFICATION	4.6686186229949684E-7	DEFECT
// ensure <tstamp>'s new prefix attribute is working	WITHOUT_CLASSIFICATION	0.9999678651354468	WITHOUT_CLASSIFICATION	3.213486455319322E-5	DEFECT
// ensure <tstamp> follows the immutability rule	WITHOUT_CLASSIFICATION	0.9999998322846015	WITHOUT_CLASSIFICATION	1.67715398513832E-7	DEFECT
// ensure <condition> follows the immutability rule	WITHOUT_CLASSIFICATION	0.9999964434938319	WITHOUT_CLASSIFICATION	3.556506168083211E-6	DEFECT
// ensure <checksum> follows the immutability rule	WITHOUT_CLASSIFICATION	0.9999999574760372	WITHOUT_CLASSIFICATION	4.2523962719807856E-8	DEFECT
// ensure <exec> follows the immutability rule	WITHOUT_CLASSIFICATION	0.9999995381146298	WITHOUT_CLASSIFICATION	4.61885370133839E-7	DEFECT
// ensure <pathconvert> follows the immutability rule	WITHOUT_CLASSIFICATION	0.9999999580394976	WITHOUT_CLASSIFICATION	4.1960502453015496E-8	DEFECT
/*             * throw in drive letters             */	WITHOUT_CLASSIFICATION	0.9999731571843335	WITHOUT_CLASSIFICATION	2.684281566636395E-5	DEFECT
/*             * promised to eliminate consecutive slashes after drive letter.             */	WITHOUT_CLASSIFICATION	0.9999998544183842	WITHOUT_CLASSIFICATION	1.455816157579282E-7	DEFECT
/*             * Start with simple absolute file names.             */	WITHOUT_CLASSIFICATION	0.9999999897604825	WITHOUT_CLASSIFICATION	1.0239517416255728E-8	DEFECT
/*             * drive letters are not used, just to be considered as normal             * part of a name             */	WITHOUT_CLASSIFICATION	0.9999999943295753	WITHOUT_CLASSIFICATION	5.670424708491963E-9	DEFECT
/*         * Now test some relative file name magic.         */	WITHOUT_CLASSIFICATION	0.9999998611297892	WITHOUT_CLASSIFICATION	1.3887021077146082E-7	DEFECT
// fail, because buildfile contains two targets with the same name	WITHOUT_CLASSIFICATION	0.9999985002612702	WITHOUT_CLASSIFICATION	1.4997387298021542E-6	DEFECT
// overriding target from imported buildfile is allowed	WITHOUT_CLASSIFICATION	0.99999989418484	WITHOUT_CLASSIFICATION	1.0581515994826792E-7	DEFECT
// the buildfile to use	WITHOUT_CLASSIFICATION	0.9999998115000611	WITHOUT_CLASSIFICATION	1.8849993893253032E-7	DEFECT
// call a target	WITHOUT_CLASSIFICATION	0.9999996581717427	WITHOUT_CLASSIFICATION	3.4182825732285695E-7	DEFECT
//class-BFT	WITHOUT_CLASSIFICATION	0.999995572491368	WITHOUT_CLASSIFICATION	4.427508632125725E-6	DEFECT
// override allowed on <available>	WITHOUT_CLASSIFICATION	0.9999995331381378	WITHOUT_CLASSIFICATION	4.6686186229949684E-7	DEFECT
// ignore event	WITHOUT_CLASSIFICATION	0.9999994845591305	WITHOUT_CLASSIFICATION	5.154408695652402E-7	DEFECT
// Check it's a read-only map.	WITHOUT_CLASSIFICATION	0.9999960187556405	WITHOUT_CLASSIFICATION	3.981244359580417E-6	DEFECT
// Check it's a read-only map.	WITHOUT_CLASSIFICATION	0.9999960187556405	WITHOUT_CLASSIFICATION	3.981244359580417E-6	DEFECT
/*         * JUnit 3.7 adds a getName method to TestCase - so we now         * have a name attribute in IntrospectionHelperTest if we run         * under JUnit 3.7 but not in earlier versions.         *         * Simply add it here and remove it after the tests.         */	WITHOUT_CLASSIFICATION	0.9999942115946512	WITHOUT_CLASSIFICATION	5.7884053488235065E-6	DEFECT
// addConfigured(Hashtable) should come before addConfigured(Map)	WITHOUT_CLASSIFICATION	0.9999997629241419	WITHOUT_CLASSIFICATION	2.370758580992132E-7	DEFECT
// INVALID extension point	WITHOUT_CLASSIFICATION	0.9999978698145625	WITHOUT_CLASSIFICATION	2.130185437467263E-6	DEFECT
// INVALID extension point	WITHOUT_CLASSIFICATION	0.9999978698145625	WITHOUT_CLASSIFICATION	2.130185437467263E-6	DEFECT
// Valid extension point	WITHOUT_CLASSIFICATION	0.9999988535747342	WITHOUT_CLASSIFICATION	1.1464252658936875E-6	DEFECT
// Valid extension point, more derived than Map above, but *after* it!	WITHOUT_CLASSIFICATION	0.9999972569024531	WITHOUT_CLASSIFICATION	2.743097546899601E-6	DEFECT
// IntrospectionHelperTest	WITHOUT_CLASSIFICATION	0.999999712559039	WITHOUT_CLASSIFICATION	2.874409609966974E-7	DEFECT
// make sure we do not get a NPE	WITHOUT_CLASSIFICATION	0.9999999120374948	WITHOUT_CLASSIFICATION	8.7962505078656E-8	DEFECT
// use an anonymous subclass since ProjectComponent is abstract	WITHOUT_CLASSIFICATION	0.9999998618383116	WITHOUT_CLASSIFICATION	1.3816168841619837E-7	DEFECT
// ------------------------------------------------------ //   Helper methods // -----------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999985719576705	WITHOUT_CLASSIFICATION	1.4280423294568947E-6	DEFECT
/* I wrote the testcases in one java file because I want also to test the * combined behaviour (see end of the class).*/	WITHOUT_CLASSIFICATION	0.9999780994419141	WITHOUT_CLASSIFICATION	2.1900558085929887E-5	DEFECT
// check defaults	WITHOUT_CLASSIFICATION	0.9999999923651989	WITHOUT_CLASSIFICATION	7.634801211378972E-9	DEFECT
// check defaults	WITHOUT_CLASSIFICATION	0.9999999923651989	WITHOUT_CLASSIFICATION	7.634801211378972E-9	DEFECT
// check build.compiler provides defaults	WITHOUT_CLASSIFICATION	0.9999998575826003	WITHOUT_CLASSIFICATION	1.4241739956934703E-7	DEFECT
// setUserProperty to override system properties	WITHOUT_CLASSIFICATION	0.9999998276924276	WITHOUT_CLASSIFICATION	1.723075723579908E-7	DEFECT
// check attribute overrides build.compiler	WITHOUT_CLASSIFICATION	0.9999999932160466	WITHOUT_CLASSIFICATION	6.783953471434773E-9	DEFECT
// check attribute overrides build.compiler	WITHOUT_CLASSIFICATION	0.9999999932160466	WITHOUT_CLASSIFICATION	6.783953471434773E-9	DEFECT
// some database keys, see #getProperties(int)	WITHOUT_CLASSIFICATION	0.9999999688998972	WITHOUT_CLASSIFICATION	3.110010283761559E-8	DEFECT
// keys used in properties.	WITHOUT_CLASSIFICATION	0.9999991623828075	WITHOUT_CLASSIFICATION	8.376171924652393E-7	DEFECT
//neither	WITHOUT_CLASSIFICATION	0.9999893610881536	WITHOUT_CLASSIFICATION	1.0638911846435278E-5	DEFECT
/*     * PR 11100     */	WITHOUT_CLASSIFICATION	0.9999987292357028	WITHOUT_CLASSIFICATION	1.2707642971798898E-6	DEFECT
// simple test to ensure that the caching does work...	WITHOUT_CLASSIFICATION	0.999991891761992	WITHOUT_CLASSIFICATION	8.108238007917837E-6	DEFECT
// 2nd run..	WITHOUT_CLASSIFICATION	0.9999983219412608	WITHOUT_CLASSIFICATION	1.6780587390905207E-6	DEFECT
// the driver must still be cached.	WITHOUT_CLASSIFICATION	0.9999998006263339	WITHOUT_CLASSIFICATION	1.9937366622478023E-7	DEFECT
// look for the driver path...	WITHOUT_CLASSIFICATION	0.9999983688330865	WITHOUT_CLASSIFICATION	1.63116691356933E-6	DEFECT
//file time checks for java1.2+	WITHOUT_CLASSIFICATION	0.9999995451522837	WITHOUT_CLASSIFICATION	4.5484771625239004E-7	DEFECT
//only test on java1.5+	WITHOUT_CLASSIFICATION	0.9999990823774718	WITHOUT_CLASSIFICATION	9.176225280633079E-7	DEFECT
// AntLikeTasksAtTopLevelTest	WITHOUT_CLASSIFICATION	0.9999999357202749	WITHOUT_CLASSIFICATION	6.427972514833441E-8	DEFECT
//file length checks rely on touch generating a zero byte file	WITHOUT_CLASSIFICATION	0.9999993544068139	WITHOUT_CLASSIFICATION	6.455931860892514E-7	DEFECT
// no-op: not a real business error	WITHOUT_CLASSIFICATION	0.9996579069405852	WITHOUT_CLASSIFICATION	3.4209305941477553E-4	DEFECT
//dont look for much text here as it is vendor and version dependent	WITHOUT_CLASSIFICATION	0.9999969421888607	WITHOUT_CLASSIFICATION	3.057811139361981E-6	DEFECT
// end of try-catch	WITHOUT_CLASSIFICATION	0.9999997712882117	WITHOUT_CLASSIFICATION	2.2871178836159457E-7	DEFECT
// end of try-catch	WITHOUT_CLASSIFICATION	0.9999997712882117	WITHOUT_CLASSIFICATION	2.2871178836159457E-7	DEFECT
/*     * PR 11100     */	WITHOUT_CLASSIFICATION	0.9999987292357028	WITHOUT_CLASSIFICATION	1.2707642971798898E-6	DEFECT
/*     * PR 38973     */	WITHOUT_CLASSIFICATION	0.9999983217085174	WITHOUT_CLASSIFICATION	1.6782914826299444E-6	DEFECT
/*     * PR 11100     */	WITHOUT_CLASSIFICATION	0.9999987292357028	WITHOUT_CLASSIFICATION	1.2707642971798898E-6	DEFECT
/*     * PR 16213     */	WITHOUT_CLASSIFICATION	0.9999987700498236	WITHOUT_CLASSIFICATION	1.2299501763824057E-6	DEFECT
/*     * PR 38973     */	WITHOUT_CLASSIFICATION	0.9999983217085174	WITHOUT_CLASSIFICATION	1.6782914826299444E-6	DEFECT
/*     * PR 21996     */	WITHOUT_CLASSIFICATION	0.9999979783582348	WITHOUT_CLASSIFICATION	2.0216417651575317E-6	DEFECT
/*     * PR 10504     */	WITHOUT_CLASSIFICATION	0.9999978715335607	WITHOUT_CLASSIFICATION	2.128466439376559E-6	DEFECT
/*     * PR 20969     */	WITHOUT_CLASSIFICATION	0.9999962330875739	WITHOUT_CLASSIFICATION	3.7669124261030787E-6	DEFECT
// can't access the booleans in MyPrinter here (even if they // were static) since the MyPrinter instance that was used in // the test has likely been loaded via a different classloader // than this class.  Therefore we make the printer assert its // state and only check for the tail invocation.	WITHOUT_CLASSIFICATION	0.9999999999767384	WITHOUT_CLASSIFICATION	2.326166492482058E-11	DEFECT
// should get no output at all	WITHOUT_CLASSIFICATION	0.9999995411754429	WITHOUT_CLASSIFICATION	4.588245570472066E-7	DEFECT
// should get no output at all	WITHOUT_CLASSIFICATION	0.9999995411754429	WITHOUT_CLASSIFICATION	4.588245570472066E-7	DEFECT
// should get no output at all	WITHOUT_CLASSIFICATION	0.9999995411754429	WITHOUT_CLASSIFICATION	4.588245570472066E-7	DEFECT
// should get no output at all	WITHOUT_CLASSIFICATION	0.9999995411754429	WITHOUT_CLASSIFICATION	4.588245570472066E-7	DEFECT
//this call should succeed as unless overrides if	WITHOUT_CLASSIFICATION	0.999999515230871	WITHOUT_CLASSIFICATION	4.847691289919043E-7	DEFECT
// test that the watchdog ends the process	WITHOUT_CLASSIFICATION	0.9999982638172158	WITHOUT_CLASSIFICATION	1.7361827842372967E-6	DEFECT
// test that the watchdog ends the process	WITHOUT_CLASSIFICATION	0.9999982638172158	WITHOUT_CLASSIFICATION	1.7361827842372967E-6	DEFECT
// and a little shorter	WITHOUT_CLASSIFICATION	0.9999994078083903	WITHOUT_CLASSIFICATION	5.921916097033883E-7	DEFECT
// test that the watchdog ends the process	WITHOUT_CLASSIFICATION	0.9999982638172158	WITHOUT_CLASSIFICATION	1.7361827842372967E-6	DEFECT
// target must be specified	WITHOUT_CLASSIFICATION	0.9999999987555092	WITHOUT_CLASSIFICATION	1.244490828151519E-9	DEFECT
// Should fail since a recursion will occur...	WITHOUT_CLASSIFICATION	0.9999487243446676	WITHOUT_CLASSIFICATION	5.1275655332354666E-5	DEFECT
// a rather convoluted equals() test	WITHOUT_CLASSIFICATION	0.9999999916835918	WITHOUT_CLASSIFICATION	8.316408243450215E-9	DEFECT
// <path> swallows the basedir, it seems //assertTrue(!getProject().resolveFile("A").exists());	WITHOUT_CLASSIFICATION	0.9999988795627268	WITHOUT_CLASSIFICATION	1.1204372731208412E-6	DEFECT
// allow this as imported in targets are only tested when a target is run	WITHOUT_CLASSIFICATION	0.9999999801458439	WITHOUT_CLASSIFICATION	1.9854156109345647E-8	DEFECT
// deactivate this test as imports within targets are not allowed	WITHOUT_CLASSIFICATION	0.9999999755718543	WITHOUT_CLASSIFICATION	2.442814573371777E-8	DEFECT
// Running on Windows or something, so skip it.	WITHOUT_CLASSIFICATION	0.9999970752989743	WITHOUT_CLASSIFICATION	2.9247010256583224E-6	DEFECT
// remove log file from testSpawn	WITHOUT_CLASSIFICATION	0.999999193027434	WITHOUT_CLASSIFICATION	8.069725660495687E-7	DEFECT
// this is guaranteed by FileUtils#createTempFile	WITHOUT_CLASSIFICATION	0.9999997226090573	WITHOUT_CLASSIFICATION	2.7739094264081727E-7	DEFECT
// let's be nice with the next generation of developers	WITHOUT_CLASSIFICATION	0.9999995508014716	WITHOUT_CLASSIFICATION	4.4919852844665755E-7	DEFECT
//executeTarget("setup"); //commented out for performance while target is empty	WITHOUT_CLASSIFICATION	0.9999999139910064	WITHOUT_CLASSIFICATION	8.600899359550522E-8	DEFECT
// target // file // exptected string	WITHOUT_CLASSIFICATION	0.9999999973416235	WITHOUT_CLASSIFICATION	2.6583764027637463E-9	DEFECT
// END class ManifestClassPathTest	WITHOUT_CLASSIFICATION	0.9999992754588624	WITHOUT_CLASSIFICATION	7.2454113770316E-7	DEFECT
//      assertTrue("return code is invalid: " + retCode, retCode!=0);	WITHOUT_CLASSIFICATION	0.9999998415276768	WITHOUT_CLASSIFICATION	1.5847232316249297E-7	DEFECT
// test a process that runs and failed	WITHOUT_CLASSIFICATION	0.9999990546801208	WITHOUT_CLASSIFICATION	9.453198790917404E-7	DEFECT
// process should abort	WITHOUT_CLASSIFICATION	0.9999991450197014	WITHOUT_CLASSIFICATION	8.549802984870795E-7	DEFECT
// I assume that starting this takes less than TIME_OUT/2 ms...	WITHOUT_CLASSIFICATION	0.9999941467974381	WITHOUT_CLASSIFICATION	5.853202561834267E-6	DEFECT
// wait for TIME_OUT/2, there should be about TIME_OUT/2 ms remaining before timeout	WITHOUT_CLASSIFICATION	0.9999965722031706	WITHOUT_CLASSIFICATION	3.4277968293247205E-6	DEFECT
// now stop the watchdog.	WITHOUT_CLASSIFICATION	0.9999999662605876	WITHOUT_CLASSIFICATION	3.3739412368011954E-8	DEFECT
// wait for the thread to die, should be the end of the process	WITHOUT_CLASSIFICATION	0.9999954154140716	WITHOUT_CLASSIFICATION	4.584585928403311E-6	DEFECT
// process should be dead and well finished	WITHOUT_CLASSIFICATION	0.9999999720484153	WITHOUT_CLASSIFICATION	2.7951584610994307E-8	DEFECT
// We have to compare the decompressed content instead:	WITHOUT_CLASSIFICATION	0.9999999028805554	WITHOUT_CLASSIFICATION	9.711944458902205E-8	DEFECT
//no point in setting a message	WITHOUT_CLASSIFICATION	0.9999996914556498	WITHOUT_CLASSIFICATION	3.0854435012859457E-7	DEFECT
// this is guaranteed by FileUtils#createTempFile	WITHOUT_CLASSIFICATION	0.9999997226090573	WITHOUT_CLASSIFICATION	2.7739094264081727E-7	DEFECT
// make the spawned process run 4 seconds	WITHOUT_CLASSIFICATION	0.9999985893414919	WITHOUT_CLASSIFICATION	1.4106585081404662E-6	DEFECT
// this loop runs parallel to the build	WITHOUT_CLASSIFICATION	0.9999992232368674	WITHOUT_CLASSIFICATION	7.767631325833609E-7	DEFECT
// security	WITHOUT_CLASSIFICATION	0.9999996155677573	WITHOUT_CLASSIFICATION	3.8443224260899307E-7	DEFECT
// time of the build in milli seconds	WITHOUT_CLASSIFICATION	0.999992210936405	WITHOUT_CLASSIFICATION	7.789063595012722E-6	DEFECT
// Nothing specified -> Fail	WITHOUT_CLASSIFICATION	0.9999999978237597	WITHOUT_CLASSIFICATION	2.1762402007850386E-9	DEFECT
// Only property specified -> Fail	WITHOUT_CLASSIFICATION	0.9999998742828867	WITHOUT_CLASSIFICATION	1.2571711321240137E-7	DEFECT
// Only file specified -> Fail	WITHOUT_CLASSIFICATION	0.9999999424572873	WITHOUT_CLASSIFICATION	5.7542712832450245E-8	DEFECT
// file does exist -> property 'test' == 'true'	WITHOUT_CLASSIFICATION	0.9999986279477932	WITHOUT_CLASSIFICATION	1.3720522068992818E-6	DEFECT
// resource doesn't exist -> property 'test' == null	WITHOUT_CLASSIFICATION	0.9999949394036961	WITHOUT_CLASSIFICATION	5.060596303848254E-6	DEFECT
// resource does exist -> property 'test' == 'true'	WITHOUT_CLASSIFICATION	0.9999978681259891	WITHOUT_CLASSIFICATION	2.1318740109438626E-6	DEFECT
// class doesn't exist -> property 'test' == null	WITHOUT_CLASSIFICATION	0.9999676784155124	WITHOUT_CLASSIFICATION	3.2321584487591855E-5	DEFECT
// class does exist -> property 'test' == 'true'	WITHOUT_CLASSIFICATION	0.9999919163364452	WITHOUT_CLASSIFICATION	8.083663554847393E-6	DEFECT
// All three specified but class missing -> null	WITHOUT_CLASSIFICATION	0.999999337479702	WITHOUT_CLASSIFICATION	6.625202979795851E-7	DEFECT
// Specified property-name is "" -> true	WITHOUT_CLASSIFICATION	0.9999999119299681	WITHOUT_CLASSIFICATION	8.807003201554723E-8	DEFECT
// Specified file is "" -> invalid files do not exist	WITHOUT_CLASSIFICATION	0.9999999759289514	WITHOUT_CLASSIFICATION	2.407104861213667E-8	DEFECT
// Specified file is "" actually a directory, so it should pass	WITHOUT_CLASSIFICATION	0.999998890340072	WITHOUT_CLASSIFICATION	1.109659927986754E-6	DEFECT
// Specified resource is "" -> can such a thing exist?	WITHOUT_CLASSIFICATION	0.9999999591398987	WITHOUT_CLASSIFICATION	4.086010126116241E-8	DEFECT
/*     * returns non null IBM JDK 1.3 Linux     */	WITHOUT_CLASSIFICATION	0.999769659159063	WITHOUT_CLASSIFICATION	2.303408409369274E-4	DEFECT
// Specified dir is "" -> this is the current directory and should // always exist	WITHOUT_CLASSIFICATION	0.999998947287672	WITHOUT_CLASSIFICATION	1.0527123279701378E-6	DEFECT
// Specified dir is "../taskdefs" -> should exist since it's the // location of the buildfile used...	WITHOUT_CLASSIFICATION	0.9999999670396102	WITHOUT_CLASSIFICATION	3.296038982906611E-8	DEFECT
// Specified dir is "../this_dir_should_never_exist" -> null	WITHOUT_CLASSIFICATION	0.9999997868397695	WITHOUT_CLASSIFICATION	2.1316023042346006E-7	DEFECT
// Invalid type specified	WITHOUT_CLASSIFICATION	0.9999999472746182	WITHOUT_CLASSIFICATION	5.272538178253303E-8	DEFECT
// Core class that exists in system classpath is ignored	WITHOUT_CLASSIFICATION	0.9999990796437038	WITHOUT_CLASSIFICATION	9.203562961889814E-7	DEFECT
// Core class that exists in system classpath is not ignored with ignoresystemclass="false"	WITHOUT_CLASSIFICATION	0.999950675565727	WITHOUT_CLASSIFICATION	4.932443427291822E-5	DEFECT
// Core class that exists in system classpath is not ignored with default ignoresystemclasses value	WITHOUT_CLASSIFICATION	0.99999513028837	WITHOUT_CLASSIFICATION	4.869711630073456E-6	DEFECT
// Class is found in specified classpath	WITHOUT_CLASSIFICATION	0.9999999020785418	WITHOUT_CLASSIFICATION	9.792145812805451E-8	DEFECT
// File is not found in specified filepath	WITHOUT_CLASSIFICATION	0.9999998625919743	WITHOUT_CLASSIFICATION	1.3740802569251952E-7	DEFECT
// test when file begins with basedir twice	WITHOUT_CLASSIFICATION	0.9999955762119167	WITHOUT_CLASSIFICATION	4.42378808322789E-6	DEFECT
// test for searching parents	WITHOUT_CLASSIFICATION	0.999999286949827	WITHOUT_CLASSIFICATION	7.130501731376248E-7	DEFECT
// test for not searching parents	WITHOUT_CLASSIFICATION	0.9999846161025301	WITHOUT_CLASSIFICATION	1.5383897469916314E-5	DEFECT
// Output the default excludes	WITHOUT_CLASSIFICATION	0.9999999817681007	WITHOUT_CLASSIFICATION	1.8231899282025402E-8	DEFECT
// adding something to the excludes'	WITHOUT_CLASSIFICATION	0.9999995428175202	WITHOUT_CLASSIFICATION	4.5718247978321835E-7	DEFECT
// removing something from the defaults	WITHOUT_CLASSIFICATION	0.9999999716973751	WITHOUT_CLASSIFICATION	2.8302624906617134E-8	DEFECT
//CVS missing	WITHOUT_CLASSIFICATION	0.9999955042122045	WITHOUT_CLASSIFICATION	4.495787795445621E-6	DEFECT
// target must be specified	WITHOUT_CLASSIFICATION	0.9999999987555092	WITHOUT_CLASSIFICATION	1.244490828151519E-9	DEFECT
// We try to delete the directory created in CopydirTest	WITHOUT_CLASSIFICATION	0.9999999995750137	WITHOUT_CLASSIFICATION	4.2498630324883443E-10	DEFECT
// check that both arrays have the same size	WITHOUT_CLASSIFICATION	0.999999673000679	WITHOUT_CLASSIFICATION	3.2699932091495956E-7	DEFECT
//instance variable to allow cleanup	WITHOUT_CLASSIFICATION	0.9999999791898048	WITHOUT_CLASSIFICATION	2.081019525961462E-8	DEFECT
//ignored	WITHOUT_CLASSIFICATION	0.9999983574821831	WITHOUT_CLASSIFICATION	1.6425178169370048E-6	DEFECT
// What's the working directory?  If local, then its the // folder of the input file.  Otherwise, its the "current" dir..	WITHOUT_CLASSIFICATION	0.9999790673842277	WITHOUT_CLASSIFICATION	2.09326157722862E-5	DEFECT
// Set a property on the project to make sure that loading // a property with the same name from an xml file will // *not* change it.	WITHOUT_CLASSIFICATION	0.9999978138188697	WITHOUT_CLASSIFICATION	2.1861811304100803E-6	DEFECT
//printProperties(p.getProperties());	WITHOUT_CLASSIFICATION	0.9999981868050662	WITHOUT_CLASSIFICATION	1.8131949338062917E-6	DEFECT
// Every key identified by the Properties must have been loaded.	WITHOUT_CLASSIFICATION	0.9999992304121481	WITHOUT_CLASSIFICATION	7.695878517872467E-7	DEFECT
// The property is the name of a file.  We are testing // a location attribute, so we need to resolve the given // file name in the provided folder.	WITHOUT_CLASSIFICATION	0.9999999904056056	WITHOUT_CLASSIFICATION	9.594394402845193E-9	DEFECT
// Substitute .xml with .properties	WITHOUT_CLASSIFICATION	0.9999999321656243	WITHOUT_CLASSIFICATION	6.783437575558026E-8	DEFECT
// basedir of subant/subant-test1/subant.xml is .. // therefore we expect here the subant/subant-test1 subdirectory	WITHOUT_CLASSIFICATION	0.9999977641044857	WITHOUT_CLASSIFICATION	2.235895514334481E-6	DEFECT
// Output an empty String	WITHOUT_CLASSIFICATION	0.9999986272658725	WITHOUT_CLASSIFICATION	1.3727341275343613E-6	DEFECT
// Output 'OUTPUT OF ECHO'	WITHOUT_CLASSIFICATION	0.9999998073683205	WITHOUT_CLASSIFICATION	1.9263167947727369E-7	DEFECT
/*          * @param message         */	WITHOUT_CLASSIFICATION	0.9999998867410327	WITHOUT_CLASSIFICATION	1.1325896732118363E-7	DEFECT
// make sure that the parsing does not break	WITHOUT_CLASSIFICATION	0.9998814737457292	WITHOUT_CLASSIFICATION	1.1852625427078373E-4	DEFECT
// where the name contains <>	WITHOUT_CLASSIFICATION	0.9999997130697393	WITHOUT_CLASSIFICATION	2.869302606197577E-7	DEFECT
// where only an address is supplied	WITHOUT_CLASSIFICATION	0.9999997831449196	WITHOUT_CLASSIFICATION	2.168550803850111E-7	DEFECT
// Tests property element, using XML schema properties as an example.	WITHOUT_CLASSIFICATION	0.9999990741521603	WITHOUT_CLASSIFICATION	9.258478398675052E-7	DEFECT
// should print "panic: Cannot find importVocab file 'JavaTokenTypes.txt'" // since it needs to run java.g first before java.tree.g	WITHOUT_CLASSIFICATION	0.9999620210552734	WITHOUT_CLASSIFICATION	3.797894472655613E-5	DEFECT
// execute	WITHOUT_CLASSIFICATION	0.9999983326314741	WITHOUT_CLASSIFICATION	1.6673685259789337E-6	DEFECT
// override some of the code so we can test the handling of the // return code only.	WITHOUT_CLASSIFICATION	0.9999999664085432	WITHOUT_CLASSIFICATION	3.35914568879106E-8	DEFECT
// ask ant to update the properties...	WITHOUT_CLASSIFICATION	0.9999998471911077	WITHOUT_CLASSIFICATION	1.52808892334546E-7	DEFECT
// to override	WITHOUT_CLASSIFICATION	0.9999992015129334	WITHOUT_CLASSIFICATION	7.984870665953473E-7	DEFECT
// just to be sure	WITHOUT_CLASSIFICATION	0.9999999946784369	WITHOUT_CLASSIFICATION	5.3215630499632344E-9	DEFECT
// just to be sure	WITHOUT_CLASSIFICATION	0.9999999946784369	WITHOUT_CLASSIFICATION	5.3215630499632344E-9	DEFECT
// read in the file	WITHOUT_CLASSIFICATION	0.9999995480523202	WITHOUT_CLASSIFICATION	4.5194767990148744E-7	DEFECT
// found the property we set - it's good.	WITHOUT_CLASSIFICATION	0.9999633774232873	WITHOUT_CLASSIFICATION	3.6622576712709715E-5	DEFECT
// else	WITHOUT_CLASSIFICATION	0.9999998806542018	WITHOUT_CLASSIFICATION	1.193457982354957E-7	DEFECT
// else	WITHOUT_CLASSIFICATION	0.9999998806542018	WITHOUT_CLASSIFICATION	1.193457982354957E-7	DEFECT
// ReplaceRegExpTest	WITHOUT_CLASSIFICATION	0.9999999368818936	WITHOUT_CLASSIFICATION	6.311810649109734E-8	DEFECT
// test for 10 consecutives transform	WITHOUT_CLASSIFICATION	0.9999999658162171	WITHOUT_CLASSIFICATION	3.418378284542617E-8	DEFECT
//java keywords are not special	WITHOUT_CLASSIFICATION	0.9999913698998658	WITHOUT_CLASSIFICATION	8.6301001342118E-6	DEFECT
//underscores go in front of invalid start chars	WITHOUT_CLASSIFICATION	0.9999969566667373	WITHOUT_CLASSIFICATION	3.043333262791865E-6	DEFECT
//underscores at the front get an underscore too	WITHOUT_CLASSIFICATION	0.9999428836846975	WITHOUT_CLASSIFICATION	5.711631530238184E-5	DEFECT
//non java char at start => underscore then the the _hex value	WITHOUT_CLASSIFICATION	0.9999991241671877	WITHOUT_CLASSIFICATION	8.758328124311229E-7	DEFECT
//and paths are stripped	WITHOUT_CLASSIFICATION	0.9999989154656981	WITHOUT_CLASSIFICATION	1.0845343019123948E-6	DEFECT
/** * Tests the {@link XSLTProcess} task. * XXX merge with {@link StyleTest}? * @since Ant 1.5 */	WITHOUT_CLASSIFICATION	0.9999179764091256	WITHOUT_CLASSIFICATION	8.202359087439786E-5	DEFECT
// byte - byte compare	WITHOUT_CLASSIFICATION	0.9999969816597359	WITHOUT_CLASSIFICATION	3.0183402641026014E-6	DEFECT
// avoid endless loop	WITHOUT_CLASSIFICATION	0.9999999391565009	WITHOUT_CLASSIFICATION	6.084349913836288E-8	DEFECT
// those would fail because of the way BuildFileTest captures output	WITHOUT_CLASSIFICATION	0.9999955510094857	WITHOUT_CLASSIFICATION	4.448990514257234E-6	DEFECT
//To change body of implemented methods use File | Settings | File Templates.	WITHOUT_CLASSIFICATION	0.9999999388760855	WITHOUT_CLASSIFICATION	6.112391446218736E-8	DEFECT
// tests one the file object	WITHOUT_CLASSIFICATION	0.9999998648940457	WITHOUT_CLASSIFICATION	1.3510595442529287E-7	DEFECT
// father and child pattern test	WITHOUT_CLASSIFICATION	0.9999993350160438	WITHOUT_CLASSIFICATION	6.649839561607113E-7	DEFECT
// redo the test, but the 2 include patterns are inverted	WITHOUT_CLASSIFICATION	0.9999996715168356	WITHOUT_CLASSIFICATION	3.2848316445823135E-7	DEFECT
// end of try-catch	WITHOUT_CLASSIFICATION	0.9999997712882117	WITHOUT_CLASSIFICATION	2.2871178836159457E-7	DEFECT
// tests one the file object	WITHOUT_CLASSIFICATION	0.9999998648940457	WITHOUT_CLASSIFICATION	1.3510595442529287E-7	DEFECT
// On junit3 this is a FAILURE, on junit4 this is an ERROR	WITHOUT_CLASSIFICATION	0.9999461407514716	WITHOUT_CLASSIFICATION	5.385924852839548E-5	DEFECT
// conversion to URL via FileUtils like in XMLResultAggregator, not as suggested in the bug report	WITHOUT_CLASSIFICATION	0.9999815114196277	WITHOUT_CLASSIFICATION	1.848858037232192E-5	DEFECT
// conversion to URL via FileUtils like in XMLResultAggregator, not as suggested in the bug report	WITHOUT_CLASSIFICATION	0.9999815114196277	WITHOUT_CLASSIFICATION	1.848858037232192E-5	DEFECT
// conversion to URL via FileUtils like in XMLResultAggregator, not as suggested in the bug report	WITHOUT_CLASSIFICATION	0.9999815114196277	WITHOUT_CLASSIFICATION	1.848858037232192E-5	DEFECT
// mandatory constructor	WITHOUT_CLASSIFICATION	0.9999992684896281	WITHOUT_CLASSIFICATION	7.315103718739424E-7	DEFECT
// check that a suite generates no errors	WITHOUT_CLASSIFICATION	0.9999995645857163	WITHOUT_CLASSIFICATION	4.3541428380370904E-7	DEFECT
// check that having no suite generates no errors	WITHOUT_CLASSIFICATION	0.9999997328144448	WITHOUT_CLASSIFICATION	2.671855552327362E-7	DEFECT
// check that something which is not a testcase generates no errors // at first even though this is incorrect.	WITHOUT_CLASSIFICATION	0.9999574995662311	WITHOUT_CLASSIFICATION	4.250043376876964E-5	DEFECT
// check that an invalid suite generates an error.	WITHOUT_CLASSIFICATION	0.9999933714503904	WITHOUT_CLASSIFICATION	6.628549609632591E-6	DEFECT
// JUnit3 test //assertEquals(runner.getFormatter().getError(), JUnitTestRunner.FAILURES, runner.getRetCode());	WITHOUT_CLASSIFICATION	0.999995771589117	WITHOUT_CLASSIFICATION	4.228410882974185E-6	DEFECT
// On junit3 this is a FAILURE, on junit4 this is an ERROR	WITHOUT_CLASSIFICATION	0.9999461407514716	WITHOUT_CLASSIFICATION	5.385924852839548E-5	DEFECT
/*          * @param event the build event that is being logged.         */	WITHOUT_CLASSIFICATION	0.9999993016461867	WITHOUT_CLASSIFICATION	6.983538134362078E-7	DEFECT
// check that an exception in the constructor is noticed	WITHOUT_CLASSIFICATION	0.9999998196601745	WITHOUT_CLASSIFICATION	1.80339825418901E-7	DEFECT
// the test runner that wrap the dummy formatter that interests us	WITHOUT_CLASSIFICATION	0.9999994306736948	WITHOUT_CLASSIFICATION	5.693263052586747E-7	DEFECT
// use the classloader that loaded this class otherwise // it will not be able to run inner classes if this test // is ran in non-forked mode.	WITHOUT_CLASSIFICATION	0.9999997938021903	WITHOUT_CLASSIFICATION	2.0619780973380711E-7	DEFECT
// dummy formatter just to catch the error	WITHOUT_CLASSIFICATION	0.9999998925833552	WITHOUT_CLASSIFICATION	1.0741664485887234E-7	DEFECT
// end of try-catch	WITHOUT_CLASSIFICATION	0.9999997712882117	WITHOUT_CLASSIFICATION	2.2871178836159457E-7	DEFECT
// end of try-catch	WITHOUT_CLASSIFICATION	0.9999997712882117	WITHOUT_CLASSIFICATION	2.2871178836159457E-7	DEFECT
// byte - byte compare	WITHOUT_CLASSIFICATION	0.9999969816597359	WITHOUT_CLASSIFICATION	3.0183402641026014E-6	DEFECT
/*          * @param event the build event that is being logged.         */	WITHOUT_CLASSIFICATION	0.9999993016461867	WITHOUT_CLASSIFICATION	6.983538134362078E-7	DEFECT
// get the fileset and its basedir	WITHOUT_CLASSIFICATION	0.9999992843134673	WITHOUT_CLASSIFICATION	7.156865327250486E-7	DEFECT
// get the fileset and its basedir	WITHOUT_CLASSIFICATION	0.9999992843134673	WITHOUT_CLASSIFICATION	7.156865327250486E-7	DEFECT
// get the fileset and its basedir	WITHOUT_CLASSIFICATION	0.9999992843134673	WITHOUT_CLASSIFICATION	7.156865327250486E-7	DEFECT
// Set up a SOSGet task	WITHOUT_CLASSIFICATION	0.9999999082869527	WITHOUT_CLASSIFICATION	9.171304718648932E-8	DEFECT
// Set up a SOSGet task	WITHOUT_CLASSIFICATION	0.9999999082869527	WITHOUT_CLASSIFICATION	9.171304718648932E-8	DEFECT
// Set up a SOSCheckin task	WITHOUT_CLASSIFICATION	0.999999847838919	WITHOUT_CLASSIFICATION	1.5216108096424765E-7	DEFECT
// Set up a SOSCheckin task	WITHOUT_CLASSIFICATION	0.999999847838919	WITHOUT_CLASSIFICATION	1.5216108096424765E-7	DEFECT
// Set up a SOSCheckout task	WITHOUT_CLASSIFICATION	0.9999999423751672	WITHOUT_CLASSIFICATION	5.762483279777394E-8	DEFECT
// Set up a sosCheckout task	WITHOUT_CLASSIFICATION	0.9999999010392903	WITHOUT_CLASSIFICATION	9.896070971592123E-8	DEFECT
// Set up a sosCheckout task	WITHOUT_CLASSIFICATION	0.9999999010392903	WITHOUT_CLASSIFICATION	9.896070971592123E-8	DEFECT
// We have extra elements	WITHOUT_CLASSIFICATION	0.9999999164692472	WITHOUT_CLASSIFICATION	8.353075266409441E-8	DEFECT
// give it some time to display	WITHOUT_CLASSIFICATION	0.999984747493776	WITHOUT_CLASSIFICATION	1.5252506224032063E-5	DEFECT
// Set up a VSSGet task	WITHOUT_CLASSIFICATION	0.999999862576173	WITHOUT_CLASSIFICATION	1.3742382690721565E-7	DEFECT
// Set up a VSSLabel task	WITHOUT_CLASSIFICATION	0.9999999430932024	WITHOUT_CLASSIFICATION	5.690679758453649E-8	DEFECT
// Set up a VSSLabel task	WITHOUT_CLASSIFICATION	0.9999999430932024	WITHOUT_CLASSIFICATION	5.690679758453649E-8	DEFECT
// Set up a VSSHistory task	WITHOUT_CLASSIFICATION	0.9999998461462137	WITHOUT_CLASSIFICATION	1.5385378617234448E-7	DEFECT
// Set up a VSSHistory task	WITHOUT_CLASSIFICATION	0.9999998461462137	WITHOUT_CLASSIFICATION	1.5385378617234448E-7	DEFECT
// Set up a Timestamp	WITHOUT_CLASSIFICATION	0.9999999332671946	WITHOUT_CLASSIFICATION	6.673280545139421E-8	DEFECT
// Get today's date	WITHOUT_CLASSIFICATION	0.9999987721855507	WITHOUT_CLASSIFICATION	1.2278144492812778E-6	DEFECT
// Set up a VSSCheckIn task	WITHOUT_CLASSIFICATION	0.9999995463759652	WITHOUT_CLASSIFICATION	4.5362403470417605E-7	DEFECT
// Set up a VSSCheckOut task	WITHOUT_CLASSIFICATION	0.9999999518994434	WITHOUT_CLASSIFICATION	4.8100556675495235E-8	DEFECT
// Set up a VSSAdd task	WITHOUT_CLASSIFICATION	0.9999998959756405	WITHOUT_CLASSIFICATION	1.040243594499665E-7	DEFECT
// Set up a VSSCp task	WITHOUT_CLASSIFICATION	0.9999997825526507	WITHOUT_CLASSIFICATION	2.1744734927547618E-7	DEFECT
// Set up a VSSCreate task	WITHOUT_CLASSIFICATION	0.9999999750271521	WITHOUT_CLASSIFICATION	2.4972847857598766E-8	DEFECT
// Count the number of empty strings	WITHOUT_CLASSIFICATION	0.9999999164124693	WITHOUT_CLASSIFICATION	8.358753070219339E-8	DEFECT
// ran Ant tests with -ea and this would fail spuriously	WITHOUT_CLASSIFICATION	0.99993537800932	WITHOUT_CLASSIFICATION	6.462199067995859E-5	DEFECT
// now to the expected failures	WITHOUT_CLASSIFICATION	0.9999995093556642	WITHOUT_CLASSIFICATION	4.906443358231714E-7	DEFECT
// catalog <--> catalog	WITHOUT_CLASSIFICATION	0.9999995013195996	WITHOUT_CLASSIFICATION	4.986804003942742E-7	DEFECT
// catalog1 --> catalog2 --> catalog3 --> catalog1	WITHOUT_CLASSIFICATION	0.9999995881056218	WITHOUT_CLASSIFICATION	4.1189437822447074E-7	DEFECT
// catalog2 --> catalog1 --> catalog	WITHOUT_CLASSIFICATION	0.9999994746042765	WITHOUT_CLASSIFICATION	5.253957235164066E-7	DEFECT
//check that dir and src are incompatible	WITHOUT_CLASSIFICATION	0.9999999454078338	WITHOUT_CLASSIFICATION	5.459216627598876E-8	DEFECT
//check that fullpath and prefix are incompatible	WITHOUT_CLASSIFICATION	0.9999915327023593	WITHOUT_CLASSIFICATION	8.467297640742486E-6	DEFECT
// check that reference zipfilesets cannot have specific attributes	WITHOUT_CLASSIFICATION	0.9999998300075488	WITHOUT_CLASSIFICATION	1.6999245132183144E-7	DEFECT
// check that a reference zipfileset gets the same attributes as the original	WITHOUT_CLASSIFICATION	0.999999983508064	WITHOUT_CLASSIFICATION	1.6491936078970204E-8	DEFECT
//check that dir and src are incompatible	WITHOUT_CLASSIFICATION	0.9999999454078338	WITHOUT_CLASSIFICATION	5.459216627598876E-8	DEFECT
// // These shenanigans are necessary b/c Norm Walsh's resolver // has a different idea of how file URLs are created on windoze // ie file://c:/foo instead of file:///c:/foo //	WITHOUT_CLASSIFICATION	0.9999936391697551	WITHOUT_CLASSIFICATION	6.360830244809812E-6	DEFECT
//check that dir and src are incompatible	WITHOUT_CLASSIFICATION	0.9999999454078338	WITHOUT_CLASSIFICATION	5.459216627598876E-8	DEFECT
//check that fullpath and prefix are incompatible	WITHOUT_CLASSIFICATION	0.9999915327023593	WITHOUT_CLASSIFICATION	8.467297640742486E-6	DEFECT
// try a netware-volume length path, see how it is handled	WITHOUT_CLASSIFICATION	0.9999998826564749	WITHOUT_CLASSIFICATION	1.1734352504992373E-7	DEFECT
// actually tests constructor as well as setPath	WITHOUT_CLASSIFICATION	0.9999999997838844	WITHOUT_CLASSIFICATION	2.1611564135568666E-10	DEFECT
// check that reference tarfilesets cannot have specific attributes	WITHOUT_CLASSIFICATION	0.9999999371714359	WITHOUT_CLASSIFICATION	6.282856414893365E-8	DEFECT
// try a multi-part netware-volume length path w/forward slash, see how it is handled	WITHOUT_CLASSIFICATION	0.9999999486245535	WITHOUT_CLASSIFICATION	5.137544653418256E-8	DEFECT
// try a multi-part netware-volume length path, see how it is handled	WITHOUT_CLASSIFICATION	0.9999999030535872	WITHOUT_CLASSIFICATION	9.694641286407768E-8	DEFECT
// dummy1 --> dummy2 --> dummy3 --> dummy1	WITHOUT_CLASSIFICATION	0.9999984644168751	WITHOUT_CLASSIFICATION	1.5355831248363925E-6	DEFECT
// try a netware-volume length path w/forward slash, see how it is handled	WITHOUT_CLASSIFICATION	0.9999999378153778	WITHOUT_CLASSIFICATION	6.218462217461119E-8	DEFECT
// try a multi-part netware-volume length path with UNIX // separator (this testcase if from an actual bug that was // found, in AvailableTest, which uses PathTokenizer)	WITHOUT_CLASSIFICATION	0.9998961399084538	WITHOUT_CLASSIFICATION	1.0386009154613759E-4	DEFECT
// dummy1 --> dummy2 --> dummy3 --> dummy1	WITHOUT_CLASSIFICATION	0.9999984644168751	WITHOUT_CLASSIFICATION	1.5355831248363925E-6	DEFECT
// dummy1 --> dummy2 --> dummy3 --> dummy1	WITHOUT_CLASSIFICATION	0.9999984644168751	WITHOUT_CLASSIFICATION	1.5355831248363925E-6	DEFECT
// dummy1 --> dummy2 --> dummy3 --> dummy1	WITHOUT_CLASSIFICATION	0.9999984644168751	WITHOUT_CLASSIFICATION	1.5355831248363925E-6	DEFECT
// dummy1 --> dummy2 --> dummy3 --> dummy1	WITHOUT_CLASSIFICATION	0.9999984644168751	WITHOUT_CLASSIFICATION	1.5355831248363925E-6	DEFECT
// dummy1 --> dummy2 --> dummy3 (with Path "/a")	WITHOUT_CLASSIFICATION	0.9999990017308312	WITHOUT_CLASSIFICATION	9.982691687353428E-7	DEFECT
// This class acts as a custom Ant task also // and uses these variables/methods in that mode	WITHOUT_CLASSIFICATION	0.9999992090785703	WITHOUT_CLASSIFICATION	7.90921429725518E-7	DEFECT
// dummy1 --> dummy2 --> dummy3 // (which has the Project's basedir as root).	WITHOUT_CLASSIFICATION	0.9999996537829315	WITHOUT_CLASSIFICATION	3.4621706854389E-7	DEFECT
// dummy1 --> dummy2 --> dummy3 // (which has the Project's basedir as root).	WITHOUT_CLASSIFICATION	0.9999996537829315	WITHOUT_CLASSIFICATION	3.4621706854389E-7	DEFECT
// Grant extra permissions to read and write the user.* properties and read to the // java.home property	WITHOUT_CLASSIFICATION	0.9999981726119569	WITHOUT_CLASSIFICATION	1.8273880430910203E-6	DEFECT
// dummy1 --> dummy2 --> dummy3 // (which holds patterns "include" and "exclude")	WITHOUT_CLASSIFICATION	0.9999998649179574	WITHOUT_CLASSIFICATION	1.350820425381526E-7	DEFECT
// check that a reference tarfileset gets the same attributes as the original	WITHOUT_CLASSIFICATION	0.9999999921081306	WITHOUT_CLASSIFICATION	7.891869323116472E-9	DEFECT
// was expected	WITHOUT_CLASSIFICATION	0.999999844925933	WITHOUT_CLASSIFICATION	1.5507406708414762E-7	DEFECT
// Revoke permission to write user.home (granted above via user.*), still able to read though. // and the default granted permission to read os.name.	WITHOUT_CLASSIFICATION	0.9999999513015464	WITHOUT_CLASSIFICATION	4.869845357453124E-8	DEFECT
// Was expected, test passes	WITHOUT_CLASSIFICATION	0.9999992921525388	WITHOUT_CLASSIFICATION	7.078474610874327E-7	DEFECT
// Was expected, test passes	WITHOUT_CLASSIFICATION	0.9999992921525388	WITHOUT_CLASSIFICATION	7.078474610874327E-7	DEFECT
// Was expected, test passes	WITHOUT_CLASSIFICATION	0.9999992921525388	WITHOUT_CLASSIFICATION	7.078474610874327E-7	DEFECT
/*         * After changing CommandlineJava to search for the java         * executable, I don't know, how to tests the value returned         * here without using the same logic as applied in the class         * itself.         *         * assertTrue("no classpath", "java", s[0]);         */	WITHOUT_CLASSIFICATION	0.9999999995937678	WITHOUT_CLASSIFICATION	4.062320911415729E-10	DEFECT
//        assertEquals("with classpath", "java", s[0]);	WITHOUT_CLASSIFICATION	0.9999999963117692	WITHOUT_CLASSIFICATION	3.688230837856612E-9	DEFECT
// only the second iteration would pass because of PR 27218	WITHOUT_CLASSIFICATION	0.9999974481330811	WITHOUT_CLASSIFICATION	2.551866918923846E-6	DEFECT
//mix element types	WITHOUT_CLASSIFICATION	0.9999928822234201	WITHOUT_CLASSIFICATION	7.117776579954607E-6	DEFECT
//implicit composite	WITHOUT_CLASSIFICATION	0.9999997370953918	WITHOUT_CLASSIFICATION	2.6290460819331636E-7	DEFECT
// a --> b --> c --- def //               \-- ghi	WITHOUT_CLASSIFICATION	0.9999999735128694	WITHOUT_CLASSIFICATION	2.6487130524213067E-8	DEFECT
// // Ensure that an external entity resolves as expected Using an // XMLCatalog: // // Transform an XML file that refers to the entity into a text // file, entity is listed in the XMLCatalog pointing to a // different file.  Stuff result into property: val2 //	WITHOUT_CLASSIFICATION	0.9999999805131031	WITHOUT_CLASSIFICATION	1.9486896935635873E-8	DEFECT
// // Ensure that an external entity resolves as expected with NO // XMLCatalog involvement: // // Transform an XML file that refers to the entity into a text // file, stuff result into property: val1 //	WITHOUT_CLASSIFICATION	0.9999996481912108	WITHOUT_CLASSIFICATION	3.5180878919729163E-7	DEFECT
// this actually relies on the first manifest being found on // the classpath (probably rt.jar's) being valid	WITHOUT_CLASSIFICATION	0.9999995256335416	WITHOUT_CLASSIFICATION	4.7436645841703185E-7	DEFECT
// // Ensure that an external entity resolves as expected with NO // XMLCatalog involvement: // // Transform an XML file that contains a reference to a _second_ XML file // via the document() function.  The _second_ XML file refers to an entity. // Stuff result into the property: val3 //	WITHOUT_CLASSIFICATION	0.999995199875369	WITHOUT_CLASSIFICATION	4.800124631041866E-6	DEFECT
// // Ensure that an external entity resolves as expected Using an // XMLCatalog: // // Transform an XML file that contains a reference to a _second_ XML file // via the document() function.  The _second_ XML file refers to an entity. // The entity is listed in the XMLCatalog pointing to a different file. // Stuff result into the property: val4 //	WITHOUT_CLASSIFICATION	0.9999999828781103	WITHOUT_CLASSIFICATION	1.7121889629599567E-8	DEFECT
// The following will be used as types and tasks	WITHOUT_CLASSIFICATION	0.9999962176891757	WITHOUT_CLASSIFICATION	3.782310824290795E-6	DEFECT
// share the setup for testing the depend task	WITHOUT_CLASSIFICATION	0.9999999998507296	WITHOUT_CLASSIFICATION	1.4927042229944382E-10	DEFECT
// Test for path relative to project base directory	WITHOUT_CLASSIFICATION	0.9999999464938002	WITHOUT_CLASSIFICATION	5.350619969794982E-8	DEFECT
//class-MockCache	WITHOUT_CLASSIFICATION	0.9999958636590075	WITHOUT_CLASSIFICATION	4.136340992480258E-6	DEFECT
//  =====================  attributes  =====================	WITHOUT_CLASSIFICATION	0.9999999071464707	WITHOUT_CLASSIFICATION	9.28535293074189E-8	DEFECT
//class-MockCache	WITHOUT_CLASSIFICATION	0.9999958636590075	WITHOUT_CLASSIFICATION	4.136340992480258E-6	DEFECT
//  =====================  constructors, factories  =====================	WITHOUT_CLASSIFICATION	0.9999999635492406	WITHOUT_CLASSIFICATION	3.645075942932001E-8	DEFECT
//  =====================  JUnit stuff  =====================	WITHOUT_CLASSIFICATION	0.9999988813322009	WITHOUT_CLASSIFICATION	1.1186677990490493E-6	DEFECT
// project reference is set in super.setUp()	WITHOUT_CLASSIFICATION	0.9999974845876451	WITHOUT_CLASSIFICATION	2.515412354990407E-6	DEFECT
// init the testclasses path object	WITHOUT_CLASSIFICATION	0.9999995859285974	WITHOUT_CLASSIFICATION	4.1407140258860087E-7	DEFECT
/* * /    // for test only - ignore tests where we arent work at the moment    public static junit.framework.Test suite() {        junit.framework.TestSuite suite= new junit.framework.TestSuite();        suite.addTest(new ModifiedSelectorTest("testValidateWrongCache"));        return suite;    }    /* */	WITHOUT_CLASSIFICATION	0.9999999997426953	WITHOUT_CLASSIFICATION	2.573048259654616E-10	DEFECT
// =======  testcases for the attributes and nested elements of the selector  =====	WITHOUT_CLASSIFICATION	0.9999999877406511	WITHOUT_CLASSIFICATION	1.2259348963637479E-8	DEFECT
// do the actions	WITHOUT_CLASSIFICATION	0.9999977485979012	WITHOUT_CLASSIFICATION	2.2514020987649846E-6	DEFECT
// do the checks - the buildfile stores the fileset as property	WITHOUT_CLASSIFICATION	0.9999967333616729	WITHOUT_CLASSIFICATION	3.266638327171001E-6	DEFECT
// must be empty according to the Mock* implementations	WITHOUT_CLASSIFICATION	0.9999418226702528	WITHOUT_CLASSIFICATION	5.817732974728186E-5	DEFECT
// don't catch the JUnit exceptions	WITHOUT_CLASSIFICATION	0.9999992428139485	WITHOUT_CLASSIFICATION	7.571860516349484E-7	DEFECT
// no check for 1<=kind<=3 - only internal use therefore check it // while development	WITHOUT_CLASSIFICATION	0.9999999999460742	WITHOUT_CLASSIFICATION	5.392571602648005E-11	DEFECT
// readable form of parameter kind	WITHOUT_CLASSIFICATION	0.9999993006697283	WITHOUT_CLASSIFICATION	6.993302716954919E-7	DEFECT
// setup the "Ant project"	WITHOUT_CLASSIFICATION	0.9999995756851886	WITHOUT_CLASSIFICATION	4.243148113901201E-7	DEFECT
// setup the selector	WITHOUT_CLASSIFICATION	0.9999999707905557	WITHOUT_CLASSIFICATION	2.920944435284754E-8	DEFECT
// get the cache, so we can check our things	WITHOUT_CLASSIFICATION	0.9999999801067744	WITHOUT_CLASSIFICATION	1.9893225600192194E-8	DEFECT
// the test	WITHOUT_CLASSIFICATION	0.999999752926599	WITHOUT_CLASSIFICATION	2.470734008913824E-7	DEFECT
// MockCache doesnt create a file - therefore no cleanup needed	WITHOUT_CLASSIFICATION	0.9999999995090856	WITHOUT_CLASSIFICATION	4.909144596546763E-10	DEFECT
// add the test classes to its classpath	WITHOUT_CLASSIFICATION	0.9999999391753112	WITHOUT_CLASSIFICATION	6.082468888197753E-8	DEFECT
// let the selector do its checks	WITHOUT_CLASSIFICATION	0.999999760606701	WITHOUT_CLASSIFICATION	2.3939329899002924E-7	DEFECT
// extract the algorithm name (and config) from the selectors output	WITHOUT_CLASSIFICATION	0.9999970816359779	WITHOUT_CLASSIFICATION	2.918364022119136E-6	DEFECT
// '<' and '>' are only used if the algorithm has properties	WITHOUT_CLASSIFICATION	0.9999996743408855	WITHOUT_CLASSIFICATION	3.2565911443362066E-7	DEFECT
// return the clean value	WITHOUT_CLASSIFICATION	0.9999998174492447	WITHOUT_CLASSIFICATION	1.8255075520028495E-7	DEFECT
// initialize test environment (called "bed")	WITHOUT_CLASSIFICATION	0.9999999793379639	WITHOUT_CLASSIFICATION	2.0662036160022078E-8	DEFECT
// initialize test environment (called "bed")	WITHOUT_CLASSIFICATION	0.9999999793379639	WITHOUT_CLASSIFICATION	2.0662036160022078E-8	DEFECT
// Configure the selector	WITHOUT_CLASSIFICATION	0.9999999880308813	WITHOUT_CLASSIFICATION	1.1969118743715282E-8	DEFECT
// Configure the selector	WITHOUT_CLASSIFICATION	0.9999999880308813	WITHOUT_CLASSIFICATION	1.1969118743715282E-8	DEFECT
// does the selection	WITHOUT_CLASSIFICATION	0.9999500187160765	WITHOUT_CLASSIFICATION	4.998128392339403E-5	DEFECT
// evaluate correctness	WITHOUT_CLASSIFICATION	0.9999976191636164	WITHOUT_CLASSIFICATION	2.380836383567297E-6	DEFECT
// evaluate correctness	WITHOUT_CLASSIFICATION	0.9999976191636164	WITHOUT_CLASSIFICATION	2.380836383567297E-6	DEFECT
// same logic as on algorithm, no testcases created	WITHOUT_CLASSIFICATION	0.9999999175413771	WITHOUT_CLASSIFICATION	8.245862285842403E-8	DEFECT
// same logic as on algorithm, no testcases created	WITHOUT_CLASSIFICATION	0.9999999175413771	WITHOUT_CLASSIFICATION	8.245862285842403E-8	DEFECT
// given cache must be empty	WITHOUT_CLASSIFICATION	0.999995791319559	WITHOUT_CLASSIFICATION	4.208680441053357E-6	DEFECT
// cache must return a stored value	WITHOUT_CLASSIFICATION	0.999999825710094	WITHOUT_CLASSIFICATION	1.7428990595423003E-7	DEFECT
// test the iterator	WITHOUT_CLASSIFICATION	0.99999999291929	WITHOUT_CLASSIFICATION	7.0807101065676446E-9	DEFECT
// clear the cache	WITHOUT_CLASSIFICATION	0.9999998305992578	WITHOUT_CLASSIFICATION	1.694007421668685E-7	DEFECT
// must not be a directory	WITHOUT_CLASSIFICATION	0.9999987965316796	WITHOUT_CLASSIFICATION	1.2034683204765355E-6	DEFECT
// get the Hashvalues	WITHOUT_CLASSIFICATION	0.9999998880957827	WITHOUT_CLASSIFICATION	1.1190421723486793E-7	DEFECT
// Assert !=null and equality	WITHOUT_CLASSIFICATION	0.9999999119126277	WITHOUT_CLASSIFICATION	8.808737232057722E-8	DEFECT
//if-isFile //for	WITHOUT_CLASSIFICATION	0.9999997058992449	WITHOUT_CLASSIFICATION	2.9410075502632886E-7	DEFECT
// ==============  testcases for the comparator implementations  ==============	WITHOUT_CLASSIFICATION	0.9999994261426631	WITHOUT_CLASSIFICATION	5.738573369227656E-7	DEFECT
//not yet supported see note in selector	WITHOUT_CLASSIFICATION	0.9999809538327986	WITHOUT_CLASSIFICATION	1.9046167201439333E-5	DEFECT
//new File("src/etc/testcases/types/resources/selectors/cache.properties").delete();	WITHOUT_CLASSIFICATION	0.9999999934037497	WITHOUT_CLASSIFICATION	6.596250386012292E-9	DEFECT
// really "2"	WITHOUT_CLASSIFICATION	0.9999981466032897	WITHOUT_CLASSIFICATION	1.8533967103339479E-6	DEFECT
// Configure the selector - only defaults are used	WITHOUT_CLASSIFICATION	0.9999999986311977	WITHOUT_CLASSIFICATION	1.3688023647885389E-9	DEFECT
//                     + "  <emptyElement></emptyElement>"	WITHOUT_CLASSIFICATION	0.9999996984672559	WITHOUT_CLASSIFICATION	3.0153274407639716E-7	DEFECT
/* ============ ResourceFactory interface ====================== */	WITHOUT_CLASSIFICATION	0.9999997873671849	WITHOUT_CLASSIFICATION	2.126328151009637E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999997408296413	WITHOUT_CLASSIFICATION	2.5917035868139013E-7	DEFECT
//class-BFT	WITHOUT_CLASSIFICATION	0.999995572491368	WITHOUT_CLASSIFICATION	4.427508632125725E-6	DEFECT
// do the actions	WITHOUT_CLASSIFICATION	0.9999977485979012	WITHOUT_CLASSIFICATION	2.2514020987649846E-6	DEFECT
// don't catch the JUnit exceptions	WITHOUT_CLASSIFICATION	0.9999992428139485	WITHOUT_CLASSIFICATION	7.571860516349484E-7	DEFECT
// // *****  First Run  ***** // the first call should get all files, because nothing is in // the cache //	WITHOUT_CLASSIFICATION	0.9999997334234585	WITHOUT_CLASSIFICATION	2.6657654158053727E-7	DEFECT
// // *****  Second Run  ***** // the second call should get no files, because no content // has changed //	WITHOUT_CLASSIFICATION	0.9999999460271115	WITHOUT_CLASSIFICATION	5.397288851430322E-8	DEFECT
// // *****  make some files dirty  ***** //	WITHOUT_CLASSIFICATION	0.9999872875892369	WITHOUT_CLASSIFICATION	1.2712410763154921E-5	DEFECT
// these files are made dirty --> 3+4 with different content	WITHOUT_CLASSIFICATION	0.9999984204945019	WITHOUT_CLASSIFICATION	1.5795054979815564E-6	DEFECT
// AccessObject to the test-Ant-environment	WITHOUT_CLASSIFICATION	0.9999994441725703	WITHOUT_CLASSIFICATION	5.558274296785215E-7	DEFECT
// give some values (via property file) to that environment	WITHOUT_CLASSIFICATION	0.9999717123293613	WITHOUT_CLASSIFICATION	2.8287670638599926E-5	DEFECT
// call the target for making the files dirty	WITHOUT_CLASSIFICATION	0.9999984652539305	WITHOUT_CLASSIFICATION	1.5347460694860555E-6	DEFECT
// // *****  Third Run  ***** // third call should get only those files, which CONTENT changed // (no timestamp changes required!)	WITHOUT_CLASSIFICATION	0.9999999543327223	WITHOUT_CLASSIFICATION	4.5667277771811796E-8	DEFECT
// // *****  Check the result  ***** //	WITHOUT_CLASSIFICATION	0.9999994446922337	WITHOUT_CLASSIFICATION	5.55307766424634E-7	DEFECT
// Mark all files which should be selected as (T)rue and all others // as (F)alse. Directories are always selected so they always are // (T)rue.	WITHOUT_CLASSIFICATION	0.9999999999344321	WITHOUT_CLASSIFICATION	6.556798131012622E-11	DEFECT
// f2name shouldn't be selected: only timestamp has changed!	WITHOUT_CLASSIFICATION	0.9999766245339214	WITHOUT_CLASSIFICATION	2.33754660784777E-5	DEFECT
// info text // list of files // expected result // result	WITHOUT_CLASSIFICATION	0.999999440953286	WITHOUT_CLASSIFICATION	5.590467139899077E-7	DEFECT
// cleanup the environment	WITHOUT_CLASSIFICATION	0.9999992896843674	WITHOUT_CLASSIFICATION	7.103156327087164E-7	DEFECT
// cleanup the environment	WITHOUT_CLASSIFICATION	0.9999992896843674	WITHOUT_CLASSIFICATION	7.103156327087164E-7	DEFECT
// RuleBasedCollator not yet supported - see Selector:375 note	WITHOUT_CLASSIFICATION	0.9997370868251166	WITHOUT_CLASSIFICATION	2.6291317488336824E-4	DEFECT
//s.addParam(createParam("algorithm.provider","---")); // i don't know any valid	WITHOUT_CLASSIFICATION	0.9999057096681068	WITHOUT_CLASSIFICATION	9.429033189325444E-5	DEFECT
// first and second run	WITHOUT_CLASSIFICATION	0.9999989642544362	WITHOUT_CLASSIFICATION	1.0357455636795719E-6	DEFECT
// make dirty	WITHOUT_CLASSIFICATION	0.9999957694611269	WITHOUT_CLASSIFICATION	4.230538873137798E-6	DEFECT
// third run	WITHOUT_CLASSIFICATION	0.9999958348167619	WITHOUT_CLASSIFICATION	4.165183238070443E-6	DEFECT
// the directories to check	WITHOUT_CLASSIFICATION	0.9999998662844639	WITHOUT_CLASSIFICATION	1.3371553606804625E-7	DEFECT
// do the checks	WITHOUT_CLASSIFICATION	0.999999492728721	WITHOUT_CLASSIFICATION	5.072712789621303E-7	DEFECT
//class-MockProject	WITHOUT_CLASSIFICATION	0.9999726282800078	WITHOUT_CLASSIFICATION	2.737171999215672E-5	DEFECT
//class-ModifiedSelectorTest	WITHOUT_CLASSIFICATION	0.9999999048110999	WITHOUT_CLASSIFICATION	9.518890007919255E-8	DEFECT
// First read in zero bytes	WITHOUT_CLASSIFICATION	0.9999995066322271	WITHOUT_CLASSIFICATION	4.933677727601345E-7	DEFECT
// Now read in the string	WITHOUT_CLASSIFICATION	0.9999992956100431	WITHOUT_CLASSIFICATION	7.043899569151106E-7	DEFECT
// Make sure that the counts are the same	WITHOUT_CLASSIFICATION	0.9999999014729904	WITHOUT_CLASSIFICATION	9.852700950553324E-8	DEFECT
// LineOrientedOutputStreamTest	WITHOUT_CLASSIFICATION	0.9999999778144344	WITHOUT_CLASSIFICATION	2.2185565694152634E-8	DEFECT
// make sure that elapsed time in set via date works	WITHOUT_CLASSIFICATION	0.9999999338374119	WITHOUT_CLASSIFICATION	6.616258806244123E-8	DEFECT
// make sure that elapsed time in ms works	WITHOUT_CLASSIFICATION	0.9999990496048312	WITHOUT_CLASSIFICATION	9.503951686778095E-7	DEFECT
// should be new moon	WITHOUT_CLASSIFICATION	0.9999959901709493	WITHOUT_CLASSIFICATION	4.009829050681695E-6	DEFECT
// Try a silly case	WITHOUT_CLASSIFICATION	0.9999974530599074	WITHOUT_CLASSIFICATION	2.5469400925928094E-6	DEFECT
// and a little longer	WITHOUT_CLASSIFICATION	0.9999996762856488	WITHOUT_CLASSIFICATION	3.2371435116313154E-7	DEFECT
/*             * throw in drive letters             */	WITHOUT_CLASSIFICATION	0.9999731571843335	WITHOUT_CLASSIFICATION	2.684281566636395E-5	DEFECT
/*             * promised to eliminate consecutive slashes after drive letter.             */	WITHOUT_CLASSIFICATION	0.9999998544183842	WITHOUT_CLASSIFICATION	1.455816157579282E-7	DEFECT
/*             * Start with simple absolute file names.             */	WITHOUT_CLASSIFICATION	0.9999999897604825	WITHOUT_CLASSIFICATION	1.0239517416255728E-8	DEFECT
/*             * Start with simple absolute file names.             */	WITHOUT_CLASSIFICATION	0.9999999897604825	WITHOUT_CLASSIFICATION	1.0239517416255728E-8	DEFECT
/*         * Now test some relative file name magic.         */	WITHOUT_CLASSIFICATION	0.9999998611297892	WITHOUT_CLASSIFICATION	1.3887021077146082E-7	DEFECT
/*         * Now test some relative file name magic.         */	WITHOUT_CLASSIFICATION	0.9999998611297892	WITHOUT_CLASSIFICATION	1.3887021077146082E-7	DEFECT
// implies lastModified == 0	WITHOUT_CLASSIFICATION	0.9999999650032868	WITHOUT_CLASSIFICATION	3.499671331606201E-8	DEFECT
/* ============ FileNameMapper interface ======================= */	WITHOUT_CLASSIFICATION	0.9999994885617105	WITHOUT_CLASSIFICATION	5.114382895576408E-7	DEFECT
// Windows adds the drive letter in uppercase, unless you run Cygwin	WITHOUT_CLASSIFICATION	0.9998241016275836	WITHOUT_CLASSIFICATION	1.7589837241644397E-4	DEFECT
/*         * Sleep for some time to make sure a touched file would get a         * more recent timestamp according to the file system's         * granularity (should be > 2s to account for Windows FAT).         */	WITHOUT_CLASSIFICATION	0.9998964660381419	WITHOUT_CLASSIFICATION	1.0353396185807259E-4	DEFECT
// number of milliseconds in a day	WITHOUT_CLASSIFICATION	0.9999657250048284	WITHOUT_CLASSIFICATION	3.427499517162989E-5	DEFECT
// in a previous version, the date of the file was set to 123456 // milliseconds since 01.01.1970 // it did not work on a computer running JDK 1.4.1_02 + Windows 2000	WITHOUT_CLASSIFICATION	0.9904633881272508	WITHOUT_CLASSIFICATION	0.009536611872749243	DEFECT
/*         * I would love to compare this with 123456, but depending on         * the filesystems granularity it can take an arbitrary value.         *         * Just assert the time has changed.         */	WITHOUT_CLASSIFICATION	0.9999783037137258	WITHOUT_CLASSIFICATION	2.1696286274224517E-5	DEFECT
/*             * throw in NetWare volume names             */	WITHOUT_CLASSIFICATION	0.9999987520842453	WITHOUT_CLASSIFICATION	1.2479157547897207E-6	DEFECT
/*             * throw in NetWare volume names             */	WITHOUT_CLASSIFICATION	0.9999987520842453	WITHOUT_CLASSIFICATION	1.2479157547897207E-6	DEFECT
/*             * drive letters must be considered just normal filenames.             */	WITHOUT_CLASSIFICATION	0.9999999677149395	WITHOUT_CLASSIFICATION	3.2285060558027007E-8	DEFECT
// Passed test 	WITHOUT_CLASSIFICATION	0.9999999605689031	WITHOUT_CLASSIFICATION	3.9431097035364604E-8	DEFECT
// Expected exception caught	WITHOUT_CLASSIFICATION	0.999980507698864	WITHOUT_CLASSIFICATION	1.9492301135997847E-5	DEFECT
// Expected exception caught	WITHOUT_CLASSIFICATION	0.999980507698864	WITHOUT_CLASSIFICATION	1.9492301135997847E-5	DEFECT
// null parent dir	WITHOUT_CLASSIFICATION	0.9999965223667919	WITHOUT_CLASSIFICATION	3.4776332079344622E-6	DEFECT
//preserve case on Cygwin when using 1.4 toURI:	WITHOUT_CLASSIFICATION	0.9999984390400017	WITHOUT_CLASSIFICATION	1.560959998205752E-6	DEFECT
// OK, Java 1.3.	WITHOUT_CLASSIFICATION	0.9999995479704735	WITHOUT_CLASSIFICATION	4.520295265586123E-7	DEFECT
//get a time	WITHOUT_CLASSIFICATION	0.9999985907192634	WITHOUT_CLASSIFICATION	1.4092807364661663E-6	DEFECT
//add some time. We assume no OS has a granularity this bad	WITHOUT_CLASSIFICATION	0.9999978232085809	WITHOUT_CLASSIFICATION	2.1767914191049537E-6	DEFECT
/*        assertTrue("same timestamp is up to date",                fu.isUpToDate(firstTime, firstTime));                */	WITHOUT_CLASSIFICATION	0.9999999777746426	WITHOUT_CLASSIFICATION	2.222535746881223E-8	DEFECT
//check that older is up to date with a newer dest	WITHOUT_CLASSIFICATION	0.999999530858458	WITHOUT_CLASSIFICATION	4.691415419387437E-7	DEFECT
//check that older is up to date with a newer dest	WITHOUT_CLASSIFICATION	0.999999530858458	WITHOUT_CLASSIFICATION	4.691415419387437E-7	DEFECT
// This just tests that the function does not blow up	WITHOUT_CLASSIFICATION	0.9999993153475902	WITHOUT_CLASSIFICATION	6.846524097425009E-7	DEFECT
// java.home is bogus	WITHOUT_CLASSIFICATION	0.9999994332108231	WITHOUT_CLASSIFICATION	5.66789176973658E-7	DEFECT
// could still be OS/2	WITHOUT_CLASSIFICATION	0.9999940459026125	WITHOUT_CLASSIFICATION	5.954097387455872E-6	DEFECT
// 27224 = magic (a random port which is unlikely to be in use)	WITHOUT_CLASSIFICATION	0.9999986838895085	WITHOUT_CLASSIFICATION	1.31611049155279E-6	DEFECT
// order of headers cannot be guaranteed	WITHOUT_CLASSIFICATION	0.9999984452162022	WITHOUT_CLASSIFICATION	1.5547837979074864E-6	DEFECT
// state engine: false=envelope, true=message	WITHOUT_CLASSIFICATION	0.9999996235939499	WITHOUT_CLASSIFICATION	3.764060500357562E-7	DEFECT
// make sure there are no issues concerning line separator interpretation // a line separator for regex (perl) is always a unix line (ie \n)	WITHOUT_CLASSIFICATION	0.9999994436285787	WITHOUT_CLASSIFICATION	5.563714212007665E-7	DEFECT
// sb.append( response + "\r\n" );	WITHOUT_CLASSIFICATION	0.9999997457786741	WITHOUT_CLASSIFICATION	2.5422132582687504E-7	DEFECT
// 60s // a further 30s	WITHOUT_CLASSIFICATION	0.999999908288149	WITHOUT_CLASSIFICATION	9.171185097827068E-8	DEFECT
// 60s // a further 30s	WITHOUT_CLASSIFICATION	0.999999908288149	WITHOUT_CLASSIFICATION	9.171185097827068E-8	DEFECT
// 60s // a further 30s	WITHOUT_CLASSIFICATION	0.999999908288149	WITHOUT_CLASSIFICATION	9.171185097827068E-8	DEFECT
// 60s // a further 30s	WITHOUT_CLASSIFICATION	0.999999908288149	WITHOUT_CLASSIFICATION	9.171185097827068E-8	DEFECT
// wait for connection	WITHOUT_CLASSIFICATION	0.9999729618765237	WITHOUT_CLASSIFICATION	2.7038123476308115E-5	DEFECT
//throw new IllegalStateException("Command unrecognized: " //    + response);	WITHOUT_CLASSIFICATION	0.9999996478620592	WITHOUT_CLASSIFICATION	3.521379407922863E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999998952218317	WITHOUT_CLASSIFICATION	1.0477816833988038E-7	DEFECT
// while	WITHOUT_CLASSIFICATION	0.9999993819916307	WITHOUT_CLASSIFICATION	6.180083693022672E-7	DEFECT
// CRC manually calculated, sorry // CRC // mode // link length // uid, gid	WITHOUT_CLASSIFICATION	0.9999995988799867	WITHOUT_CLASSIFICATION	4.011200133855988E-7	DEFECT
// CRC manually calculated, sorry // CRC // mode // link length // uid, gid	WITHOUT_CLASSIFICATION	0.9999995988799867	WITHOUT_CLASSIFICATION	4.011200133855988E-7	DEFECT
// CRC // mode // link length // uid, gid	WITHOUT_CLASSIFICATION	0.9999977279216966	WITHOUT_CLASSIFICATION	2.272078303348168E-6	DEFECT
// CRC // mode // link length // uid, gid	WITHOUT_CLASSIFICATION	0.9999977279216966	WITHOUT_CLASSIFICATION	2.272078303348168E-6	DEFECT
// CRC // mode // link // uid, gid	WITHOUT_CLASSIFICATION	0.9999941990380855	WITHOUT_CLASSIFICATION	5.800961914549382E-6	DEFECT
// bad CRC // mode // link // uid, gid	WITHOUT_CLASSIFICATION	0.9999917096281845	WITHOUT_CLASSIFICATION	8.290371815525956E-6	DEFECT
//if we got here, all was well	WITHOUT_CLASSIFICATION	0.9999988755236509	WITHOUT_CLASSIFICATION	1.12447634906857E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999996763950936	WITHOUT_CLASSIFICATION	3.2360490638735057E-7	DEFECT
// CheckStyle:ConstantNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9999985489535307	WITHOUT_CLASSIFICATION	1.4510464693492277E-6	DEFECT
// CheckStyle:ConstantNameCheck ON	WITHOUT_CLASSIFICATION	0.9999991607398475	WITHOUT_CLASSIFICATION	8.392601523947596E-7	DEFECT
// Filter out messages based on priority	WITHOUT_CLASSIFICATION	0.9999927267221335	WITHOUT_CLASSIFICATION	7.273277866566177E-6	DEFECT
// Print out the name of the task if we're in one	WITHOUT_CLASSIFICATION	0.9999999975093418	WITHOUT_CLASSIFICATION	2.490658228213717E-9	DEFECT
// shouldn't be possible	WITHOUT_CLASSIFICATION	0.9999067898682816	WITHOUT_CLASSIFICATION	9.321013171832044E-5	DEFECT
// Set up PRIMITIVE_TYPE_MAP	WITHOUT_CLASSIFICATION	0.9999996784432141	WITHOUT_CLASSIFICATION	3.215567858152375E-7	DEFECT
// check of add[Configured](Class) pattern	WITHOUT_CLASSIFICATION	0.9999999709867791	WITHOUT_CLASSIFICATION	2.901322095244751E-8	DEFECT
// not really user settable properties on tasks/project components	WITHOUT_CLASSIFICATION	0.9999941161604039	WITHOUT_CLASSIFICATION	5.883839596098164E-6	DEFECT
// hide addTask for TaskContainers	WITHOUT_CLASSIFICATION	0.9999999864745558	WITHOUT_CLASSIFICATION	1.352544422738707E-8	DEFECT
// use wrappers for primitive classes, e.g. int and // Integer are treated identically	WITHOUT_CLASSIFICATION	0.9999973550640042	WITHOUT_CLASSIFICATION	2.6449359957105574E-6	DEFECT
// Check if a create of this property is already present // add takes preference over create for CB purposes	WITHOUT_CLASSIFICATION	0.9999999909736186	WITHOUT_CLASSIFICATION	9.026381456978783E-9	DEFECT
/*                         *  Ignore this method as there is an addConfigured                         *  form of this method that has a higher                         *  priority                         */	WITHOUT_CLASSIFICATION	0.9999999784807874	WITHOUT_CLASSIFICATION	2.1519212647412938E-8	DEFECT
// If a helper cannot be found, or if the helper is for another // classloader, create a new IH	WITHOUT_CLASSIFICATION	0.9999967126604205	WITHOUT_CLASSIFICATION	3.2873395794424332E-6	DEFECT
// Ignore attribute from unknown uri's	WITHOUT_CLASSIFICATION	0.9999998625152419	WITHOUT_CLASSIFICATION	1.3748475803410553E-7	DEFECT
// impossible as getMethods should only return public methods	WITHOUT_CLASSIFICATION	0.9999979836225128	WITHOUT_CLASSIFICATION	2.0163774872591566E-6	DEFECT
// impossible as getMethods should only return public methods	WITHOUT_CLASSIFICATION	0.9999979836225128	WITHOUT_CLASSIFICATION	2.0163774872591566E-6	DEFECT
// impossible as getMethods should only return public methods	WITHOUT_CLASSIFICATION	0.9999979836225128	WITHOUT_CLASSIFICATION	2.0163774872591566E-6	DEFECT
// Element doesn't handle text content	WITHOUT_CLASSIFICATION	0.9999998621603304	WITHOUT_CLASSIFICATION	1.3783966958865207E-7	DEFECT
// Not whitespace - fail	WITHOUT_CLASSIFICATION	0.9999864696558811	WITHOUT_CLASSIFICATION	1.353034411890555E-5	DEFECT
// Only whitespace - ignore	WITHOUT_CLASSIFICATION	0.999999980907475	WITHOUT_CLASSIFICATION	1.9092525014473145E-8	DEFECT
// Class doesn't have a String constructor but a decent factory method	WITHOUT_CLASSIFICATION	0.999998249338034	WITHOUT_CLASSIFICATION	1.7506619658775111E-6	DEFECT
// char and Character get special treatment - take the first character	WITHOUT_CLASSIFICATION	0.9999999961583823	WITHOUT_CLASSIFICATION	3.841617756154437E-9	DEFECT
// simplest case - setAttribute expects String	WITHOUT_CLASSIFICATION	0.9999994162598661	WITHOUT_CLASSIFICATION	5.837401339875521E-7	DEFECT
// First try with Project.	WITHOUT_CLASSIFICATION	0.9999954034769075	WITHOUT_CLASSIFICATION	4.596523092444977E-6	DEFECT
// EnumeratedAttributes have their own helper class	WITHOUT_CLASSIFICATION	0.9999970660450427	WITHOUT_CLASSIFICATION	2.933954957318961E-6	DEFECT
// resolve relative paths through Project	WITHOUT_CLASSIFICATION	0.9999936845973283	WITHOUT_CLASSIFICATION	6.315402671740621E-6	DEFECT
/** Version to use for addXXX and addConfiguredXXX */	WITHOUT_CLASSIFICATION	0.9984771193977003	WITHOUT_CLASSIFICATION	0.001522880602299719	DEFECT
// Well, no matching constructor.	WITHOUT_CLASSIFICATION	0.9999999966645838	WITHOUT_CLASSIFICATION	3.335416207635586E-9	DEFECT
// OK, try without.	WITHOUT_CLASSIFICATION	0.9999957883583834	WITHOUT_CLASSIFICATION	4.211641616540034E-6	DEFECT
// the method called to add/create the nested element	WITHOUT_CLASSIFICATION	0.9999998806642791	WITHOUT_CLASSIFICATION	1.1933572096924053E-7	DEFECT
// DO NOTHING	WITHOUT_CLASSIFICATION	0.9999985323779038	WITHOUT_CLASSIFICATION	1.4676220961730677E-6	DEFECT
// ADD or ADD_CONFIGURED	WITHOUT_CLASSIFICATION	0.9999996940834001	WITHOUT_CLASSIFICATION	3.0591659986860733E-7	DEFECT
// the method called to set the attribute	WITHOUT_CLASSIFICATION	0.9999999275734316	WITHOUT_CLASSIFICATION	7.242656836659536E-8	DEFECT
// add configured replaces the add method	WITHOUT_CLASSIFICATION	0.9999999193695375	WITHOUT_CLASSIFICATION	8.063046256124579E-8	DEFECT
// maintain a sorted list of targets	WITHOUT_CLASSIFICATION	0.9999999968234486	WITHOUT_CLASSIFICATION	3.1765513210991736E-9	DEFECT
// worst case. look for a public String constructor and use it // also supports new Whatever(Project, String) as for Path or Reference // This is used (deliberately) for all primitives/wrappers other than // char and boolean	WITHOUT_CLASSIFICATION	0.9999999999925316	WITHOUT_CLASSIFICATION	7.468357555368122E-12	DEFECT
// Already present	WITHOUT_CLASSIFICATION	0.9999996562924686	WITHOUT_CLASSIFICATION	3.437075313625896E-7	DEFECT
// higher derived	WITHOUT_CLASSIFICATION	0.9999994443670314	WITHOUT_CLASSIFICATION	5.556329686065909E-7	DEFECT
// print the stacktrace in the build file it is always useful... // better have too much info than not enough.	WITHOUT_CLASSIFICATION	0.9999552064893334	WITHOUT_CLASSIFICATION	4.4793510666488476E-5	DEFECT
// specify output in UTF8 otherwise accented characters will blow // up everything	WITHOUT_CLASSIFICATION	0.9999999997473377	WITHOUT_CLASSIFICATION	2.526623245601675E-10	DEFECT
/* For debugging purposes uncomment:        org.w3c.dom.Comment s = doc.createComment("stack=" + threadStack);        buildElement.element.appendChild(s);         */	WITHOUT_CLASSIFICATION	0.9999968136336446	WITHOUT_CLASSIFICATION	3.1863663554470485E-6	DEFECT
// -------------------------------------------------- BuildLogger interface	WITHOUT_CLASSIFICATION	0.9999968442441372	WITHOUT_CLASSIFICATION	3.1557558628571725E-6	DEFECT
// Shouldn't happen	WITHOUT_CLASSIFICATION	0.9999135688246046	WITHOUT_CLASSIFICATION	8.643117539542594E-5	DEFECT
// LF is always end of line (i.e. CRLF or single LF)	WITHOUT_CLASSIFICATION	0.9999961058521215	WITHOUT_CLASSIFICATION	3.894147878528213E-6	DEFECT
// CR without LF - send buffer then add char	WITHOUT_CLASSIFICATION	0.9999995206052948	WITHOUT_CLASSIFICATION	4.793947050356494E-7	DEFECT
// add into buffer	WITHOUT_CLASSIFICATION	0.9999996251824549	WITHOUT_CLASSIFICATION	3.7481754506240336E-7	DEFECT
// either end of buffer or a line separator char	WITHOUT_CLASSIFICATION	0.9999999260642798	WITHOUT_CLASSIFICATION	7.3935720214154E-8	DEFECT
// check adapter	WITHOUT_CLASSIFICATION	0.9999999756552533	WITHOUT_CLASSIFICATION	2.4344746741984797E-8	DEFECT
//can throw the same exception, if there is no this(Project) ctor.	WITHOUT_CLASSIFICATION	0.9999989941264434	WITHOUT_CLASSIFICATION	1.0058735565471727E-6	DEFECT
//now we instantiate	WITHOUT_CLASSIFICATION	0.9999995240885255	WITHOUT_CLASSIFICATION	4.7591147436907526E-7	DEFECT
//set up project references.	WITHOUT_CLASSIFICATION	0.9999997965094322	WITHOUT_CLASSIFICATION	2.0349056788566445E-7	DEFECT
/** Our current message output status. Follows Project.MSG_XXX. */	WITHOUT_CLASSIFICATION	0.9999515654651842	WITHOUT_CLASSIFICATION	4.8434534815870725E-5	DEFECT
/* null */	WITHOUT_CLASSIFICATION	0.9999824005844927	WITHOUT_CLASSIFICATION	1.759941550725805E-5	DEFECT
// expect the worst	WITHOUT_CLASSIFICATION	0.9999949632922727	WITHOUT_CLASSIFICATION	5.036707727329484E-6	DEFECT
//this is the list of lu	WITHOUT_CLASSIFICATION	0.9999940673780766	WITHOUT_CLASSIFICATION	5.932621923462934E-6	DEFECT
// cycle through given args	WITHOUT_CLASSIFICATION	0.9999990408970505	WITHOUT_CLASSIFICATION	9.591029494673604E-7	DEFECT
// set the flag to display the targets and quit	WITHOUT_CLASSIFICATION	0.9999996894146221	WITHOUT_CLASSIFICATION	3.1058537785766495E-7	DEFECT
// eat up next arg if present, default to build.xml	WITHOUT_CLASSIFICATION	0.9999998725395626	WITHOUT_CLASSIFICATION	1.2746043750185252E-7	DEFECT
// we don't have any more args to recognize!	WITHOUT_CLASSIFICATION	0.9996695916373192	WITHOUT_CLASSIFICATION	3.304083626808747E-4	DEFECT
// if it's no other arg, it may be the target	WITHOUT_CLASSIFICATION	0.9999999734084215	WITHOUT_CLASSIFICATION	2.6591578556620113E-8	DEFECT
// if buildFile was not specified on the command line,	WITHOUT_CLASSIFICATION	0.9999855364010117	WITHOUT_CLASSIFICATION	1.4463598988225485E-5	DEFECT
// but -find then search for it	WITHOUT_CLASSIFICATION	0.9999998503126237	WITHOUT_CLASSIFICATION	1.496873762355136E-7	DEFECT
// make sure buildfile exists	WITHOUT_CLASSIFICATION	0.9999994244595648	WITHOUT_CLASSIFICATION	5.755404351762442E-7	DEFECT
// make sure it's not a directory (this falls into the ultra // paranoid lets check everything category	WITHOUT_CLASSIFICATION	0.9999969051383976	WITHOUT_CLASSIFICATION	3.0948616023380467E-6	DEFECT
// Load the property files specified by -propertyfile	WITHOUT_CLASSIFICATION	0.9999996036018055	WITHOUT_CLASSIFICATION	3.9639819452414017E-7	DEFECT
// ensure that -D properties take precedence	WITHOUT_CLASSIFICATION	0.9999986915261738	WITHOUT_CLASSIFICATION	1.308473826187896E-6	DEFECT
// check if the target file exists in the current directory	WITHOUT_CLASSIFICATION	0.9999999805293125	WITHOUT_CLASSIFICATION	1.9470687536669007E-8	DEFECT
// change to parent directory	WITHOUT_CLASSIFICATION	0.9999987402663515	WITHOUT_CLASSIFICATION	1.2597336485232335E-6	DEFECT
// refresh our file handle	WITHOUT_CLASSIFICATION	0.9999999644948525	WITHOUT_CLASSIFICATION	3.550514740189464E-8	DEFECT
// use a system manager that prevents from System.exit()	WITHOUT_CLASSIFICATION	0.9999962869157503	WITHOUT_CLASSIFICATION	3.7130842496869285E-6	DEFECT
//SecurityManager can not be installed here for backwards //compatibility reasons (PD). Needs to be loaded prior to //ant class if we are going to implement it. //System.setSecurityManager(new NoExitSecurityManager());	WITHOUT_CLASSIFICATION	0.9999999065748112	WITHOUT_CLASSIFICATION	9.342518891327207E-8	DEFECT
// set the thread priorities	WITHOUT_CLASSIFICATION	0.9999998720733322	WITHOUT_CLASSIFICATION	1.279266679046061E-7	DEFECT
//we cannot set the priority here.	WITHOUT_CLASSIFICATION	0.9989662190272549	WITHOUT_CLASSIFICATION	0.0010337809727450908	DEFECT
// set user-define properties	WITHOUT_CLASSIFICATION	0.9999999803262459	WITHOUT_CLASSIFICATION	1.967375413038707E-8	DEFECT
//proxy setup if enabled	WITHOUT_CLASSIFICATION	0.9999998768044306	WITHOUT_CLASSIFICATION	1.2319556936360992E-7	DEFECT
// make sure that we have a target to execute	WITHOUT_CLASSIFICATION	0.999999968936309	WITHOUT_CLASSIFICATION	3.106369086916363E-8	DEFECT
// Add the default listener	WITHOUT_CLASSIFICATION	0.9999999946781648	WITHOUT_CLASSIFICATION	5.321835171746996E-9	DEFECT
// find the target with the longest name	WITHOUT_CLASSIFICATION	0.9999999973656438	WITHOUT_CLASSIFICATION	2.6343560682899803E-9	DEFECT
// split the targets in top-level and sub-targets depending // on the presence of a description	WITHOUT_CLASSIFICATION	0.9999999825020178	WITHOUT_CLASSIFICATION	1.7497982123149068E-8	DEFECT
// shouldn't need to check but...	WITHOUT_CLASSIFICATION	0.9986611570059927	WITHOUT_CLASSIFICATION	0.0013388429940074153	DEFECT
// now, start printing the targets and their descriptions	WITHOUT_CLASSIFICATION	0.9999999932062176	WITHOUT_CLASSIFICATION	6.793782415026462E-9	DEFECT
// got a bit annoyed that I couldn't find a pad function	WITHOUT_CLASSIFICATION	0.9987954202542002	WITHOUT_CLASSIFICATION	0.0012045797457998408	DEFECT
/*<String,String>*/	WITHOUT_CLASSIFICATION	0.9999324328416603	WITHOUT_CLASSIFICATION	6.756715833958076E-5	DEFECT
//At least one constructor is guaranteed to be there, but check anyway.	WITHOUT_CLASSIFICATION	0.9999998160722697	WITHOUT_CLASSIFICATION	1.8392773029247095E-7	DEFECT
// is the zip file in the cache	WITHOUT_CLASSIFICATION	0.9999989516677122	WITHOUT_CLASSIFICATION	1.0483322876841145E-6	DEFECT
// store the token just read for next time	WITHOUT_CLASSIFICATION	0.999999172662657	WITHOUT_CLASSIFICATION	8.273373430662282E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999997408296413	WITHOUT_CLASSIFICATION	2.5917035868139013E-7	DEFECT
// add the types of the parent project	WITHOUT_CLASSIFICATION	0.9999945874815269	WITHOUT_CLASSIFICATION	5.412518473090652E-6	DEFECT
// ignore path elements which are not valid relative to the // project	WITHOUT_CLASSIFICATION	0.9999998969971892	WITHOUT_CLASSIFICATION	1.030028109264965E-7	DEFECT
// Expecting an exception to be thrown by this call: // IllegalArgumentException: wrong number of Arguments	WITHOUT_CLASSIFICATION	0.9931478966171353	WITHOUT_CLASSIFICATION	0.006852103382864687	DEFECT
// we need to search the components of the path to see if we can // find the class we want.	WITHOUT_CLASSIFICATION	0.9999999698619896	WITHOUT_CLASSIFICATION	3.013801030893922E-8	DEFECT
// default to the global setting and then see // if this class belongs to a package which has been // designated to use a specific loader first // (this one or the parent one)	WITHOUT_CLASSIFICATION	0.9999999999840746	WITHOUT_CLASSIFICATION	1.592537476733838E-11	DEFECT
// we need to search the components of the path to see if // we can find the class we want.	WITHOUT_CLASSIFICATION	0.9999999761793111	WITHOUT_CLASSIFICATION	2.3820688787809722E-8	DEFECT
// try and load from this loader if the parent either didn't find // it or wasn't consulted.	WITHOUT_CLASSIFICATION	0.9999987559219469	WITHOUT_CLASSIFICATION	1.2440780532141668E-6	DEFECT
// this loader was first but it didn't find it - try the parent	WITHOUT_CLASSIFICATION	0.9999478068135446	WITHOUT_CLASSIFICATION	5.2193186455397956E-5	DEFECT
/*<URL>*/	WITHOUT_CLASSIFICATION	0.9999036541993583	WITHOUT_CLASSIFICATION	9.634580064162278E-5	DEFECT
/*<URL>*/	WITHOUT_CLASSIFICATION	0.9999036541993583	WITHOUT_CLASSIFICATION	9.634580064162278E-5	DEFECT
/*<URL>*/	WITHOUT_CLASSIFICATION	0.9999036541993583	WITHOUT_CLASSIFICATION	9.634580064162278E-5	DEFECT
// Delegate to the parent:	WITHOUT_CLASSIFICATION	0.9999994722350273	WITHOUT_CLASSIFICATION	5.27764972676453E-7	DEFECT
// Note: could cause overlaps in case ClassLoader.this.parent has matches.	WITHOUT_CLASSIFICATION	0.999999911541722	WITHOUT_CLASSIFICATION	8.845827801565853E-8	DEFECT
// ClassLoader.this.parent is already delegated to from // ClassLoader.getResources, no need:	WITHOUT_CLASSIFICATION	0.9999999968819061	WITHOUT_CLASSIFICATION	3.118093851900574E-9	DEFECT
// Normal case.	WITHOUT_CLASSIFICATION	0.9999999087884683	WITHOUT_CLASSIFICATION	9.121153164445924E-8	DEFECT
// Inverted.	WITHOUT_CLASSIFICATION	0.999999422305974	WITHOUT_CLASSIFICATION	5.776940259096667E-7	DEFECT
// already defined	WITHOUT_CLASSIFICATION	0.9999999911238482	WITHOUT_CLASSIFICATION	8.876151847105823E-9	DEFECT
// define the package now	WITHOUT_CLASSIFICATION	0.9999999267203569	WITHOUT_CLASSIFICATION	7.327964307590841E-8	DEFECT
// ioe.printStackTrace();	WITHOUT_CLASSIFICATION	0.999999649872463	WITHOUT_CLASSIFICATION	3.501275369470179E-7	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.99999795328422	WITHOUT_CLASSIFICATION	2.0467157800256684E-6	DEFECT
// Not significant for the class loader.	WITHOUT_CLASSIFICATION	0.9999996842281702	WITHOUT_CLASSIFICATION	3.1577182980057144E-7	DEFECT
// Not significant for the class loader.	WITHOUT_CLASSIFICATION	0.9999996842281702	WITHOUT_CLASSIFICATION	3.1577182980057144E-7	DEFECT
// {tasks, types}	WITHOUT_CLASSIFICATION	0.999998340734517	WITHOUT_CLASSIFICATION	1.6592654829863748E-6	DEFECT
// add the parsed namespaces of the parent project	WITHOUT_CLASSIFICATION	0.9999991812389797	WITHOUT_CLASSIFICATION	8.187610203893566E-7	DEFECT
// we need to search the components of the path to see if // we can find the class we want.	WITHOUT_CLASSIFICATION	0.9999999761793111	WITHOUT_CLASSIFICATION	2.3820688787809722E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999998952218317	WITHOUT_CLASSIFICATION	1.0477816833988038E-7	DEFECT
// don't have to check for public, since // getConstructor finds public constructors only.	WITHOUT_CLASSIFICATION	0.9999999326735576	WITHOUT_CLASSIFICATION	6.732644249838583E-8	DEFECT
// set default value, can be changed by the user	WITHOUT_CLASSIFICATION	0.9999999988573387	WITHOUT_CLASSIFICATION	1.1426613161850816E-9	DEFECT
//too bad	WITHOUT_CLASSIFICATION	0.9999943106467538	WITHOUT_CLASSIFICATION	5.689353246264702E-6	DEFECT
//must have same validity; then if they are valid they must also be the same:	WITHOUT_CLASSIFICATION	0.999999140577133	WITHOUT_CLASSIFICATION	8.594228668975358E-7	DEFECT
// namespace that does not contain antlib	WITHOUT_CLASSIFICATION	0.999997055564791	WITHOUT_CLASSIFICATION	2.94443520886624E-6	DEFECT
// Already processed	WITHOUT_CLASSIFICATION	0.9999999394603883	WITHOUT_CLASSIFICATION	6.053961166767662E-8	DEFECT
//there to stop error messages being "null"	WITHOUT_CLASSIFICATION	0.9999997705909771	WITHOUT_CLASSIFICATION	2.2940902295588985E-7	DEFECT
//if this is left out, bad things happen. like all build files break //on the first element encountered.	WITHOUT_CLASSIFICATION	0.9998578004489534	WITHOUT_CLASSIFICATION	1.4219955104657775E-4	DEFECT
// a fishing expedition :- ignore errors if antlib not present	WITHOUT_CLASSIFICATION	0.9999143840676261	WITHOUT_CLASSIFICATION	8.561593237385061E-5	DEFECT
//class of problem	WITHOUT_CLASSIFICATION	0.9999928551643107	WITHOUT_CLASSIFICATION	7.144835689314409E-6	DEFECT
//running under an IDE that doesn't set ANT_HOME	WITHOUT_CLASSIFICATION	0.9999945504569725	WITHOUT_CLASSIFICATION	5.449543027505669E-6	DEFECT
//look up the name	WITHOUT_CLASSIFICATION	0.9999994508372247	WITHOUT_CLASSIFICATION	5.491627751734678E-7	DEFECT
//we are defined, so it is an instantiation problem	WITHOUT_CLASSIFICATION	0.9999996151876932	WITHOUT_CLASSIFICATION	3.848123067568931E-7	DEFECT
//start with instantiating the class.	WITHOUT_CLASSIFICATION	0.9999961439597417	WITHOUT_CLASSIFICATION	3.856040258289117E-6	DEFECT
//here we successfully loaded the class or failed.	WITHOUT_CLASSIFICATION	0.9999954205952349	WITHOUT_CLASSIFICATION	4.579404765116003E-6	DEFECT
//success: proceed with more steps	WITHOUT_CLASSIFICATION	0.9999928564486168	WITHOUT_CLASSIFICATION	7.143551383107638E-6	DEFECT
//hey, there is nothing wrong with us	WITHOUT_CLASSIFICATION	0.9998459744618621	WITHOUT_CLASSIFICATION	1.540255381378782E-4	DEFECT
/*<Thread,Task>*/	WITHOUT_CLASSIFICATION	0.999995106963763	WITHOUT_CLASSIFICATION	4.893036237058872E-6	DEFECT
/*<ThreadGroup,Task>*/	WITHOUT_CLASSIFICATION	0.9999962083572757	WITHOUT_CLASSIFICATION	3.7916427243107474E-6	DEFECT
// If the listeners already has this listener, do nothing	WITHOUT_CLASSIFICATION	0.9999999766103566	WITHOUT_CLASSIFICATION	2.338964343320434E-8	DEFECT
// we need to build the hashtable dynamically	WITHOUT_CLASSIFICATION	0.9999959427388843	WITHOUT_CLASSIFICATION	4.057261115752624E-6	DEFECT
// sanity check	WITHOUT_CLASSIFICATION	0.9999998569632826	WITHOUT_CLASSIFICATION	1.4303671725529172E-7	DEFECT
//try the current classloader	WITHOUT_CLASSIFICATION	0.9999994776315724	WITHOUT_CLASSIFICATION	5.223684276869988E-7	DEFECT
// throw further	WITHOUT_CLASSIFICATION	0.9999960444167939	WITHOUT_CLASSIFICATION	3.955583206130953E-6	DEFECT
// only the first build exception is reported	WITHOUT_CLASSIFICATION	0.9999961623756793	WITHOUT_CLASSIFICATION	3.837624320703018E-6	DEFECT
// Make sure we exist	WITHOUT_CLASSIFICATION	0.9999996682452799	WITHOUT_CLASSIFICATION	3.3175472018942135E-7	DEFECT
// Currently visiting this node, so have a cycle	WITHOUT_CLASSIFICATION	0.9999988801620592	WITHOUT_CLASSIFICATION	1.1198379407483494E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999998952218317	WITHOUT_CLASSIFICATION	1.0477816833988038E-7	DEFECT
// create a new Vector to avoid ConcurrentModificationExc when // the listeners get added/removed while we are in fire	WITHOUT_CLASSIFICATION	0.9999999971488935	WITHOUT_CLASSIFICATION	2.85110654575726E-9	DEFECT
// sanity check ourselves, if we've been asked to build nothing // then we should complain	WITHOUT_CLASSIFICATION	0.9999999964894561	WITHOUT_CLASSIFICATION	3.510543785519589E-9	DEFECT
// Sort and run the dependency tree. // Sorting checks if all the targets (and dependencies) // exist, and if there is any cycle in the dependency // graph.	WITHOUT_CLASSIFICATION	0.9999999925105182	WITHOUT_CLASSIFICATION	7.489481871541716E-9	DEFECT
// We first run a DFS based sort using each root as a starting node. // This creates the minimum sequence of Targets to the root node(s). // We then do a sort on any remaining unVISITED targets. // This is unnecessary for doing our build, but it catches // circular dependencies or missing Targets on the entire // dependency tree, not just on the Targets that depend on the // build Target.	WITHOUT_CLASSIFICATION	0.9999999999990319	WITHOUT_CLASSIFICATION	9.681453191729411E-13	DEFECT
// no warning, this is not changing anything	WITHOUT_CLASSIFICATION	0.999969452711879	WITHOUT_CLASSIFICATION	3.0547288120997164E-5	DEFECT
// Check for old id behaviour	WITHOUT_CLASSIFICATION	0.9999994473724122	WITHOUT_CLASSIFICATION	5.526275876685883E-7	DEFECT
// Inform IH to clear the cache	WITHOUT_CLASSIFICATION	0.9999999042820522	WITHOUT_CLASSIFICATION	9.57179477843752E-8	DEFECT
// register this as the current task on the current thread.	WITHOUT_CLASSIFICATION	0.9999943307235116	WITHOUT_CLASSIFICATION	5.669276488357935E-6	DEFECT
// Make sure that	WITHOUT_CLASSIFICATION	0.9999999637661801	WITHOUT_CLASSIFICATION	3.6233819810704694E-8	DEFECT
// ignore this if the object does not have // a set project method or the method // is private/protected.	WITHOUT_CLASSIFICATION	0.9999997418213061	WITHOUT_CLASSIFICATION	2.5817869388341007E-7	DEFECT
//override facility for subclasses to put custom hashtables in	WITHOUT_CLASSIFICATION	0.9999954446607519	WITHOUT_CLASSIFICATION	4.555339248152941E-6	DEFECT
// --------------------  Hook management  --------------------	WITHOUT_CLASSIFICATION	0.9999935928238098	WITHOUT_CLASSIFICATION	6.40717619021728E-6	DEFECT
// --------------------  Methods to override  --------------------	WITHOUT_CLASSIFICATION	0.9999984312522174	WITHOUT_CLASSIFICATION	1.5687477826225642E-6	DEFECT
// If next has handled the property	WITHOUT_CLASSIFICATION	0.999997642582381	WITHOUT_CLASSIFICATION	2.357417619020747E-6	DEFECT
// try to get it from the project or keys // Backward compatibility	WITHOUT_CLASSIFICATION	0.9999996258759315	WITHOUT_CLASSIFICATION	3.7412406850446244E-7	DEFECT
// -------------------- Default implementation  -------------------- // Methods used to support the default behavior and provide backward // compatibility. Some will be deprecated, you should avoid calling them.	WITHOUT_CLASSIFICATION	0.9997177801907594	WITHOUT_CLASSIFICATION	2.822198092405025E-4	DEFECT
// user (CLI) properties take precedence	WITHOUT_CLASSIFICATION	0.9999882703100743	WITHOUT_CLASSIFICATION	1.1729689925625853E-5	DEFECT
// -------------------- Getting properties  --------------------	WITHOUT_CLASSIFICATION	0.9999995063740661	WITHOUT_CLASSIFICATION	4.936259339273431E-7	DEFECT
// -------------------- Property parsing  -------------------- // Moved from ProjectHelper. You can override the static method - // this is used for backward compatibility (for code that calls // the parse method in ProjectHelper).	WITHOUT_CLASSIFICATION	0.999979680361275	WITHOUT_CLASSIFICATION	2.031963872501285E-5	DEFECT
//search for the next instance of $ from the 'prev' position	WITHOUT_CLASSIFICATION	0.9999992987649667	WITHOUT_CLASSIFICATION	7.012350332427225E-7	DEFECT
//if we are at the end of the string, we tack on a $ //then move past it	WITHOUT_CLASSIFICATION	0.999934065225358	WITHOUT_CLASSIFICATION	6.593477464210343E-5	DEFECT
//peek ahead to see if the next char is a property or not //not a property: insert the char as a literal	WITHOUT_CLASSIFICATION	0.9999953781711394	WITHOUT_CLASSIFICATION	4.621828860614782E-6	DEFECT
//backwards compatibility two $ map to one mode	WITHOUT_CLASSIFICATION	0.9999884126513097	WITHOUT_CLASSIFICATION	1.1587348690395706E-5	DEFECT
//new behaviour: $X maps to $X for all values of X!='$'	WITHOUT_CLASSIFICATION	0.9994438095652189	WITHOUT_CLASSIFICATION	5.56190434781164E-4	DEFECT
//property found, extract its name or bail on a typo	WITHOUT_CLASSIFICATION	0.9999048328580538	WITHOUT_CLASSIFICATION	9.516714194632608E-5	DEFECT
//no more $ signs found //if there is any tail to the file, append it	WITHOUT_CLASSIFICATION	0.9999508528023117	WITHOUT_CLASSIFICATION	4.9147197688405145E-5	DEFECT
//empty	WITHOUT_CLASSIFICATION	0.9999626752415091	WITHOUT_CLASSIFICATION	3.732475849096322E-5	DEFECT
// The children are added to after this cloning	WITHOUT_CLASSIFICATION	0.9999997205228958	WITHOUT_CLASSIFICATION	2.794771042161572E-7	DEFECT
// Make sure the dependency is not empty string	WITHOUT_CLASSIFICATION	0.9999997020257793	WITHOUT_CLASSIFICATION	2.979742207046727E-7	DEFECT
// Make sure that depends attribute does not // end in a ,	WITHOUT_CLASSIFICATION	0.9999978339146398	WITHOUT_CLASSIFICATION	2.166085360228687E-6	DEFECT
// A project helper may process multiple files. We'll keep track // of them - to avoid loops and to allow caching. The caching will // probably accelerate things like <antCall>. // The key is the absolute file, the value is a processed tree. // Since the tree is composed of UE and RC - it can be reused ! // protected Hashtable processedFiles=new Hashtable();	WITHOUT_CLASSIFICATION	0.999999931781595	WITHOUT_CLASSIFICATION	6.821840501202238E-8	DEFECT
//    public Hashtable getProcessedFiles() { //        return processedFiles; //    }	WITHOUT_CLASSIFICATION	0.9999999970062038	WITHOUT_CLASSIFICATION	2.9937961137522062E-9	DEFECT
// --------------------  Parse method  --------------------	WITHOUT_CLASSIFICATION	0.9999993868993636	WITHOUT_CLASSIFICATION	6.131006363756922E-7	DEFECT
// Identify the class loader we will be using. Ant may be // in a webapp or embedded in a different app	WITHOUT_CLASSIFICATION	0.999996463842938	WITHOUT_CLASSIFICATION	3.5361570619768836E-6	DEFECT
// First, try the system property	WITHOUT_CLASSIFICATION	0.9999954677000145	WITHOUT_CLASSIFICATION	4.532299985508036E-6	DEFECT
// A JDK1.3 'service' ( like in JAXP ). That will plug a helper // automatically if in CLASSPATH, with the right META-INF/services.	WITHOUT_CLASSIFICATION	0.9569182686164535	WITHOUT_CLASSIFICATION	0.043081731383546575	DEFECT
// This code is needed by EBCDIC and other strange systems. // It's a fix for bugs reported in xerces	WITHOUT_CLASSIFICATION	0.9710246105845766	WITHOUT_CLASSIFICATION	0.028975389415423436	DEFECT
// try next method	WITHOUT_CLASSIFICATION	0.9999547440389417	WITHOUT_CLASSIFICATION	4.525596105824099E-5	DEFECT
// -------------------- Static utils, used by most helpers ----------------	WITHOUT_CLASSIFICATION	0.9999999936137193	WITHOUT_CLASSIFICATION	6.38628071553248E-9	DEFECT
// reflect these into the target	WITHOUT_CLASSIFICATION	0.9999999648391537	WITHOUT_CLASSIFICATION	3.516084640741872E-8	DEFECT
// id attribute must be set externally	WITHOUT_CLASSIFICATION	0.9999981632420117	WITHOUT_CLASSIFICATION	1.836757988314118E-6	DEFECT
// needed since project properties are not accessible	WITHOUT_CLASSIFICATION	0.9999977645211349	WITHOUT_CLASSIFICATION	2.2354788651611356E-6	DEFECT
/*<UnknownElement>*/	WITHOUT_CLASSIFICATION	0.9999325262410534	WITHOUT_CLASSIFICATION	6.747375894653147E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999997408296413	WITHOUT_CLASSIFICATION	2.5917035868139013E-7	DEFECT
/*<String,String>*/	WITHOUT_CLASSIFICATION	0.9999324328416603	WITHOUT_CLASSIFICATION	6.756715833958076E-5	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.99999795328422	WITHOUT_CLASSIFICATION	2.0467157800256684E-6	DEFECT
// reflect these into the target	WITHOUT_CLASSIFICATION	0.9999999648391537	WITHOUT_CLASSIFICATION	3.516084640741872E-8	DEFECT
// id attribute must be set externally	WITHOUT_CLASSIFICATION	0.9999981632420117	WITHOUT_CLASSIFICATION	1.836757988314118E-6	DEFECT
// Attributes	WITHOUT_CLASSIFICATION	0.9999998643048065	WITHOUT_CLASSIFICATION	1.3569519352208113E-7	DEFECT
// configure attributes of the object and it's children. If it is // a task container, defer the configuration till the task container // attempts to use the task	WITHOUT_CLASSIFICATION	0.9999999891847867	WITHOUT_CLASSIFICATION	1.0815213349177429E-8	DEFECT
// plain impossible to get here, maybeConfigure should // have thrown an exception.	WITHOUT_CLASSIFICATION	0.9999997517935046	WITHOUT_CLASSIFICATION	2.4820649530090683E-7	DEFECT
// Finished executing the task, null it to allow // GC do its job // If this UE is used again, a new "realthing" will be made	WITHOUT_CLASSIFICATION	0.9999999964742929	WITHOUT_CLASSIFICATION	3.5257071090683237E-9	DEFECT
// Do the runtime	WITHOUT_CLASSIFICATION	0.9999991164373536	WITHOUT_CLASSIFICATION	8.835626464715477E-7	DEFECT
// UnknownElement always has an associated target	WITHOUT_CLASSIFICATION	0.9999996637532135	WITHOUT_CLASSIFICATION	3.3624678658045177E-7	DEFECT
//return elementName;	WITHOUT_CLASSIFICATION	0.9999991878597273	WITHOUT_CLASSIFICATION	8.121402727616226E-7	DEFECT
// Are the names the same ?	WITHOUT_CLASSIFICATION	0.9999996345963796	WITHOUT_CLASSIFICATION	3.6540362028617334E-7	DEFECT
// Are attributes the same ?	WITHOUT_CLASSIFICATION	0.9999995332550015	WITHOUT_CLASSIFICATION	4.6674499847004726E-7	DEFECT
// Are the sub elements the same ?	WITHOUT_CLASSIFICATION	0.9999999319311836	WITHOUT_CLASSIFICATION	6.806881636375493E-8	DEFECT
// hidden constructor	WITHOUT_CLASSIFICATION	0.9999999206709695	WITHOUT_CLASSIFICATION	7.932903047665017E-8	DEFECT
//create the file	WITHOUT_CLASSIFICATION	0.9999999250931284	WITHOUT_CLASSIFICATION	7.49068716048813E-8	DEFECT
//do some writing to it	WITHOUT_CLASSIFICATION	0.9999794911958336	WITHOUT_CLASSIFICATION	2.0508804166388513E-5	DEFECT
//calendar stuff.	WITHOUT_CLASSIFICATION	0.9999996327885923	WITHOUT_CLASSIFICATION	3.672114077171508E-7	DEFECT
//not included, do nothing	WITHOUT_CLASSIFICATION	0.9999835985012612	WITHOUT_CLASSIFICATION	1.6401498738879772E-5	DEFECT
// not included, to nothing	WITHOUT_CLASSIFICATION	0.9999945258958308	WITHOUT_CLASSIFICATION	5.4741041691845244E-6	DEFECT
/*<RuntimeConfigurable>*/	WITHOUT_CLASSIFICATION	0.9999938153180726	WITHOUT_CLASSIFICATION	6.184681927310237E-6	DEFECT
/*<String>*/	WITHOUT_CLASSIFICATION	0.9999143067773637	WITHOUT_CLASSIFICATION	8.569322263631948E-5	DEFECT
// Configure the object	WITHOUT_CLASSIFICATION	0.9999998970805657	WITHOUT_CLASSIFICATION	1.0291943426891216E-7	DEFECT
// Most likely an UnknownElement	WITHOUT_CLASSIFICATION	0.9999904161766943	WITHOUT_CLASSIFICATION	9.583823305698205E-6	DEFECT
// Children (this is a shadow of UnknownElement#children)	WITHOUT_CLASSIFICATION	0.9999972552516336	WITHOUT_CLASSIFICATION	2.7447483664387216E-6	DEFECT
// poly type	WITHOUT_CLASSIFICATION	0.9999957536744984	WITHOUT_CLASSIFICATION	4.246325501607949E-6	DEFECT
// Text	WITHOUT_CLASSIFICATION	0.9999937515281887	WITHOUT_CLASSIFICATION	6.248471811338053E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999996763950936	WITHOUT_CLASSIFICATION	3.2360490638735057E-7	DEFECT
// store the token just read for next time	WITHOUT_CLASSIFICATION	0.999999172662657	WITHOUT_CLASSIFICATION	8.273373430662282E-7	DEFECT
// a task container - anything could happen - just add the // child to the container	WITHOUT_CLASSIFICATION	0.99999972899734	WITHOUT_CLASSIFICATION	2.7100266006435496E-7	DEFECT
// Is the text the same? //   Need to use equals on the string and not //   on the stringbuffer as equals on the string buffer //   does not compare the contents.	WITHOUT_CLASSIFICATION	0.9999960676340881	WITHOUT_CLASSIFICATION	3.932365911874306E-6	DEFECT
// Assume that this is an not supported attribute type // thrown for example by a dymanic attribute task // Do nothing	WITHOUT_CLASSIFICATION	0.9998197981589202	WITHOUT_CLASSIFICATION	1.8020184107978E-4	DEFECT
// on Windows and Unix, we can ignore delimiters and still have // enough information to tokenize correctly.	WITHOUT_CLASSIFICATION	0.9991463115770274	WITHOUT_CLASSIFICATION	8.536884229725447E-4	DEFECT
// we are on a dos style system so this path could be a drive // spec. We look at the next token	WITHOUT_CLASSIFICATION	0.9999860673747203	WITHOUT_CLASSIFICATION	1.3932625279672113E-5	DEFECT
// we know we are on a DOS style platform and the next path // starts with a slash or backslash, so we know this is a // drive spec	WITHOUT_CLASSIFICATION	0.9999897493711217	WITHOUT_CLASSIFICATION	1.0250628878262782E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999998952218317	WITHOUT_CLASSIFICATION	1.0477816833988038E-7	DEFECT
// ignore ";" and get the next token	WITHOUT_CLASSIFICATION	0.9999984033647088	WITHOUT_CLASSIFICATION	1.5966352911262794E-6	DEFECT
// this path could be a drive spec, so look at the next token	WITHOUT_CLASSIFICATION	0.9999908155062838	WITHOUT_CLASSIFICATION	9.184493716152526E-6	DEFECT
// it indeed is a drive spec, get the next bit	WITHOUT_CLASSIFICATION	0.9999815387260909	WITHOUT_CLASSIFICATION	1.8461273909184435E-5	DEFECT
// implicit else: ignore the ':' since we have either a // UNIX or a relative path	WITHOUT_CLASSIFICATION	0.9999999187109918	WITHOUT_CLASSIFICATION	8.128900821224766E-8	DEFECT
// Miscellaneous typical temporary files	WITHOUT_CLASSIFICATION	0.9999999719302265	WITHOUT_CLASSIFICATION	2.806977347141219E-8	DEFECT
// CVS	WITHOUT_CLASSIFICATION	0.9999983313557796	WITHOUT_CLASSIFICATION	1.6686442203967162E-6	DEFECT
// SCCS	WITHOUT_CLASSIFICATION	0.9999969341172475	WITHOUT_CLASSIFICATION	3.065882752408723E-6	DEFECT
// Visual SourceSafe	WITHOUT_CLASSIFICATION	0.9999999475280051	WITHOUT_CLASSIFICATION	5.24719947686968E-8	DEFECT
// Subversion	WITHOUT_CLASSIFICATION	0.9999995446526786	WITHOUT_CLASSIFICATION	4.5534732144051064E-7	DEFECT
// set in/excludes to reasonable defaults if needed:	WITHOUT_CLASSIFICATION	0.9999999942306772	WITHOUT_CLASSIFICATION	5.769322828977556E-9	DEFECT
// if no basedir and no includes, nothing to do:	WITHOUT_CLASSIFICATION	0.9999999188039582	WITHOUT_CLASSIFICATION	8.119604187719583E-8	DEFECT
//skip abs. paths not under basedir, if set:	WITHOUT_CLASSIFICATION	0.9999987971671461	WITHOUT_CLASSIFICATION	1.2028328538360588E-6	DEFECT
//skip non-abs. paths if basedir == null:	WITHOUT_CLASSIFICATION	0.999999847373861	WITHOUT_CLASSIFICATION	1.5262613895951202E-7	DEFECT
// we are going to scan everything anyway	WITHOUT_CLASSIFICATION	0.9999984513316554	WITHOUT_CLASSIFICATION	1.5486683445639112E-6	DEFECT
// Empty	WITHOUT_CLASSIFICATION	0.9999910788387655	WITHOUT_CLASSIFICATION	8.921161234501107E-6	DEFECT
// will be caught and redirected to Ant's logging system	WITHOUT_CLASSIFICATION	0.9999813232298739	WITHOUT_CLASSIFICATION	1.8676770126228822E-5	DEFECT
// will be caught and redirected to Ant's logging system	WITHOUT_CLASSIFICATION	0.9999813232298739	WITHOUT_CLASSIFICATION	1.8676770126228822E-5	DEFECT
//removing base from path yields no change; path not child of base	WITHOUT_CLASSIFICATION	0.9999995897454798	WITHOUT_CLASSIFICATION	4.102545202682727E-7	DEFECT
/* package-private */	WITHOUT_CLASSIFICATION	0.999998953202824	WITHOUT_CLASSIFICATION	1.0467971759975068E-6	DEFECT
// do the "singleton" initialization	WITHOUT_CLASSIFICATION	0.9999979468907693	WITHOUT_CLASSIFICATION	2.0531092308127113E-6	DEFECT
// Add the explicit resource collections to the archive.	WITHOUT_CLASSIFICATION	0.9999999124555738	WITHOUT_CLASSIFICATION	8.754442619688089E-8	DEFECT
// EOL was "\r\n"	WITHOUT_CLASSIFICATION	0.9999996345156879	WITHOUT_CLASSIFICATION	3.654843121777652E-7	DEFECT
// don't have to check for interface, since then // taskClass would be abstract too.	WITHOUT_CLASSIFICATION	0.9999999252955637	WITHOUT_CLASSIFICATION	7.470443628310814E-8	DEFECT
// ignore this if the class being used as a task does not have // a set location method.	WITHOUT_CLASSIFICATION	0.9999997802028743	WITHOUT_CLASSIFICATION	2.197971257247483E-7	DEFECT
// ignore this if the class being used as a task does not have // a set project method.	WITHOUT_CLASSIFICATION	0.9999992298476301	WITHOUT_CLASSIFICATION	7.701523698408317E-7	DEFECT
// put in the newroots map the include patterns without // wildcard tokens	WITHOUT_CLASSIFICATION	0.9999884183264781	WITHOUT_CLASSIFICATION	1.1581673521806184E-5	DEFECT
// only scan directories that can include matched files or // directories	WITHOUT_CLASSIFICATION	0.999996590588237	WITHOUT_CLASSIFICATION	3.409411762984415E-6	DEFECT
// may be on a case insensitive file system.  We want // the results to show what's really on the disk, so // we need to double check.	WITHOUT_CLASSIFICATION	0.9999998042068875	WITHOUT_CLASSIFICATION	1.957931125895005E-7	DEFECT
// adapt currentelement to the case we've // actually found	WITHOUT_CLASSIFICATION	0.9999986648458785	WITHOUT_CLASSIFICATION	1.3351541215386842E-6	DEFECT
// I am the only one so I have to close the reader	WITHOUT_CLASSIFICATION	0.99999969094318	WITHOUT_CLASSIFICATION	3.090568199374652E-7	DEFECT
// I am the only one so I have to close the reader	WITHOUT_CLASSIFICATION	0.99999969094318	WITHOUT_CLASSIFICATION	3.090568199374652E-7	DEFECT
// get parameters	WITHOUT_CLASSIFICATION	0.999999928193083	WITHOUT_CLASSIFICATION	7.180691697118813E-8	DEFECT
// Calculate the EOL string per the current config	WITHOUT_CLASSIFICATION	0.9999999777846099	WITHOUT_CLASSIFICATION	2.221539012158321E-8	DEFECT
// assume (eol == CrLf.LF || eol == CrLf.UNIX)	WITHOUT_CLASSIFICATION	0.9999999915297589	WITHOUT_CLASSIFICATION	8.47024112052466E-9	DEFECT
// Add/Remove tabs	WITHOUT_CLASSIFICATION	0.9999992938238077	WITHOUT_CLASSIFICATION	7.061761922676951E-7	DEFECT
// Add missing EOF character	WITHOUT_CLASSIFICATION	0.9999999941947881	WITHOUT_CLASSIFICATION	5.805211855470625E-9	DEFECT
// Mask, block from being edited, all characters in constants.	WITHOUT_CLASSIFICATION	0.999999911140567	WITHOUT_CLASSIFICATION	8.885943302401426E-8	DEFECT
// The current character is always emitted.	WITHOUT_CLASSIFICATION	0.999999391298422	WITHOUT_CLASSIFICATION	6.087015781025169E-7	DEFECT
// Fall tru	WITHOUT_CLASSIFICATION	0.9999968544366221	WITHOUT_CLASSIFICATION	3.145563377982038E-6	DEFECT
// Fall tru	WITHOUT_CLASSIFICATION	0.9999968544366221	WITHOUT_CLASSIFICATION	3.145563377982038E-6	DEFECT
// Fall tru	WITHOUT_CLASSIFICATION	0.9999968544366221	WITHOUT_CLASSIFICATION	3.145563377982038E-6	DEFECT
// Fall tru	WITHOUT_CLASSIFICATION	0.9999968544366221	WITHOUT_CLASSIFICATION	3.145563377982038E-6	DEFECT
// Fall tru	WITHOUT_CLASSIFICATION	0.9999968544366221	WITHOUT_CLASSIFICATION	3.145563377982038E-6	DEFECT
// EOL	WITHOUT_CLASSIFICATION	0.9999911927238142	WITHOUT_CLASSIFICATION	8.80727618580346E-6	DEFECT
// EOL was "\n"	WITHOUT_CLASSIFICATION	0.9999994067304037	WITHOUT_CLASSIFICATION	5.932695962753411E-7	DEFECT
// EOL was "\r\r\n"	WITHOUT_CLASSIFICATION	0.9999996345711295	WITHOUT_CLASSIFICATION	3.654288705613728E-7	DEFECT
// EOL was "\r"	WITHOUT_CLASSIFICATION	0.9999995940833927	WITHOUT_CLASSIFICATION	4.059166072854391E-7	DEFECT
// If source at EOF and lookAhead is ctrl-z, return EOF (NOT ctrl-z)	WITHOUT_CLASSIFICATION	0.9999959027314427	WITHOUT_CLASSIFICATION	4.097268557363109E-6	DEFECT
// if source is EOF but last character was NOT ctrl-z, return ctrl-z	WITHOUT_CLASSIFICATION	0.9999999877183144	WITHOUT_CLASSIFICATION	1.2281685599545657E-8	DEFECT
// Return current look-ahead	WITHOUT_CLASSIFICATION	0.9999826501960151	WITHOUT_CLASSIFICATION	1.73498039849079E-5	DEFECT
// EOL was "\r\r" - handle as two consecutive "\r" and // "\r"	WITHOUT_CLASSIFICATION	0.9999997226908969	WITHOUT_CLASSIFICATION	2.773091031037437E-7	DEFECT
// Instance initializer: Executes just after the super() call in this // class's constructor.	WITHOUT_CLASSIFICATION	0.9999999472905403	WITHOUT_CLASSIFICATION	5.2709459654297565E-8	DEFECT
// Return copy so that the call must call setEof() to change the state // of fixCRLF	WITHOUT_CLASSIFICATION	0.9999998542624868	WITHOUT_CLASSIFICATION	1.4573751310981055E-7	DEFECT
// Return copy so that the call must call setEol() to change the state // of fixCRLF	WITHOUT_CLASSIFICATION	0.9999998803251484	WITHOUT_CLASSIFICATION	1.196748515942042E-7	DEFECT
// Return copy so that the caller must call setTab() to change the state // of fixCRLF.	WITHOUT_CLASSIFICATION	0.9999999376670411	WITHOUT_CLASSIFICATION	6.233295891282313E-8	DEFECT
// If I'm removing an EOF character, do so first so that the other // filters don't see that character.	WITHOUT_CLASSIFICATION	0.9999999980168157	WITHOUT_CLASSIFICATION	1.983184371810399E-9	DEFECT
// Change all EOL characters to match the calculated EOL string. If // configured to do so, append a trailing EOL so that the file ends on // a EOL.	WITHOUT_CLASSIFICATION	0.9999999966820453	WITHOUT_CLASSIFICATION	3.317954802714642E-9	DEFECT
// If filtering Java source, prevent changes to whitespace in // character and string literals.	WITHOUT_CLASSIFICATION	0.9999999069128455	WITHOUT_CLASSIFICATION	9.308715459282088E-8	DEFECT
// Works like clone() but doesn't show up in the Javadocs	WITHOUT_CLASSIFICATION	0.999922863303086	WITHOUT_CLASSIFICATION	7.713669691391417E-5	DEFECT
// getConstants is a static method, no need to // pass in the object	WITHOUT_CLASSIFICATION	0.9999993729580131	WITHOUT_CLASSIFICATION	6.270419868971421E-7	DEFECT
//this field will hold unnnn right after reading a non latin character //afterwards it will be truncated of one char every call to read	WITHOUT_CLASSIFICATION	0.9997688202961065	WITHOUT_CLASSIFICATION	2.3117970389350767E-4	DEFECT
//replace the last 0s by the chars contained in s	WITHOUT_CLASSIFICATION	0.9999998403942937	WITHOUT_CLASSIFICATION	1.5960570620355432E-7	DEFECT
// line started with comment	WITHOUT_CLASSIFICATION	0.9999989845225269	WITHOUT_CLASSIFICATION	1.015477473156229E-6	DEFECT
// ----------------------------------------- //  Predefined tokenizers // -----------------------------------------	WITHOUT_CLASSIFICATION	0.9999993680248388	WITHOUT_CLASSIFICATION	6.319751612241738E-7	DEFECT
// write everything up to the from	WITHOUT_CLASSIFICATION	0.9999997775195506	WITHOUT_CLASSIFICATION	2.2248044946573744E-7	DEFECT
// write the replacement to	WITHOUT_CLASSIFICATION	0.999999973831827	WITHOUT_CLASSIFICATION	2.6168172923982772E-8	DEFECT
// search again	WITHOUT_CLASSIFICATION	0.9999999893509608	WITHOUT_CLASSIFICATION	1.0649039229000554E-8	DEFECT
// write the remaining characters	WITHOUT_CLASSIFICATION	0.9999999994329666	WITHOUT_CLASSIFICATION	5.67033413177369E-10	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999998952218317	WITHOUT_CLASSIFICATION	1.0477816833988038E-7	DEFECT
// -------------------------------------------- // //      Tokenizer Classes (impls moved to oata.util) // // --------------------------------------------	WITHOUT_CLASSIFICATION	0.9999997735264305	WITHOUT_CLASSIFICATION	2.264735694994691E-7	DEFECT
// -------------------------------------------------------- //  static utility methods - could be placed somewhere else // --------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999999967782924	WITHOUT_CLASSIFICATION	3.2217075821190014E-9	DEFECT
//Remove start and end quotes if field is a String	WITHOUT_CLASSIFICATION	0.9999612930400574	WITHOUT_CLASSIFICATION	3.870695994256138E-5	DEFECT
// default buffer size	WITHOUT_CLASSIFICATION	0.9999994089299598	WITHOUT_CLASSIFICATION	5.910700401736464E-7	DEFECT
/* Stateless */	WITHOUT_CLASSIFICATION	0.9999998620919424	WITHOUT_CLASSIFICATION	1.379080577434812E-7	DEFECT
// singletons - since all state is in the context	WITHOUT_CLASSIFICATION	0.9999971992506022	WITHOUT_CLASSIFICATION	2.800749397888968E-6	DEFECT
// we are in an imported file.	WITHOUT_CLASSIFICATION	0.9999996902551793	WITHOUT_CLASSIFICATION	3.09744820660715E-7	DEFECT
// top level file	WITHOUT_CLASSIFICATION	0.9999999231520844	WITHOUT_CLASSIFICATION	7.684791557603656E-8	DEFECT
// ?? OK ??	WITHOUT_CLASSIFICATION	0.9999986404728404	WITHOUT_CLASSIFICATION	1.359527159601787E-6	DEFECT
// use default if not file or file not found	WITHOUT_CLASSIFICATION	0.9999999721951892	WITHOUT_CLASSIFICATION	2.7804810868469408E-8	DEFECT
// Set the location of the implicit target associated with the project tag	WITHOUT_CLASSIFICATION	0.9999999519205675	WITHOUT_CLASSIFICATION	4.807943250609341E-8	DEFECT
// Ignore attributes from unknown uris	WITHOUT_CLASSIFICATION	0.9999996349033754	WITHOUT_CLASSIFICATION	3.6509662464205054E-7	DEFECT
// Ignore attributes from unknown uris	WITHOUT_CLASSIFICATION	0.9999996349033754	WITHOUT_CLASSIFICATION	3.6509662464205054E-7	DEFECT
// What's the difference between id and name ?	WITHOUT_CLASSIFICATION	0.9999999455362575	WITHOUT_CLASSIFICATION	5.44637425484832E-8	DEFECT
// no further processing	WITHOUT_CLASSIFICATION	0.9999999926172513	WITHOUT_CLASSIFICATION	7.382748659527772E-9	DEFECT
// set explicitly before starting ?	WITHOUT_CLASSIFICATION	0.9999999606243316	WITHOUT_CLASSIFICATION	3.93756683931694E-8	DEFECT
// Default for baseDir is the location of the build file.	WITHOUT_CLASSIFICATION	0.9999999766265544	WITHOUT_CLASSIFICATION	2.337344563980348E-8	DEFECT
// check whether the user has specified an absolute path	WITHOUT_CLASSIFICATION	0.9999999880147068	WITHOUT_CLASSIFICATION	1.1985293272094164E-8	DEFECT
// Check if this target is in the current build file	WITHOUT_CLASSIFICATION	0.9999999605901743	WITHOUT_CLASSIFICATION	3.9409825789308466E-8	DEFECT
// If the name has not already been defined define it	WITHOUT_CLASSIFICATION	0.9999998946203998	WITHOUT_CLASSIFICATION	1.0537960016596916E-7	DEFECT
// In an impored file (and not completely // ignoring the project tag)	WITHOUT_CLASSIFICATION	0.9999671972641064	WITHOUT_CLASSIFICATION	3.280273589351937E-5	DEFECT
/* UnknownElement is used for tasks and data types - with               delayed eval */	WITHOUT_CLASSIFICATION	0.9999998664558942	WITHOUT_CLASSIFICATION	1.3354410583263403E-7	DEFECT
// Nested element	WITHOUT_CLASSIFICATION	0.999999961724297	WITHOUT_CLASSIFICATION	3.8275702951099854E-8	DEFECT
// Task included in a target ( including the default one ).	WITHOUT_CLASSIFICATION	0.9999999962600806	WITHOUT_CLASSIFICATION	3.739919394899161E-9	DEFECT
// container.addTask(task); // This is a nop in UE: task.init();	WITHOUT_CLASSIFICATION	0.9999960716241905	WITHOUT_CLASSIFICATION	3.928375809469907E-6	DEFECT
// **   simple name specified   == path in list + name	WITHOUT_CLASSIFICATION	0.9999999949899011	WITHOUT_CLASSIFICATION	5.010098907639793E-9	DEFECT
// if the suffix does not starts with a '.' and the // char preceding the suffix is a '.', we assume the user // wants to remove the '.' as well (see docs)	WITHOUT_CLASSIFICATION	0.9995104493274707	WITHOUT_CLASSIFICATION	4.895506725293653E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999996763950936	WITHOUT_CLASSIFICATION	3.2360490638735057E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999996763950936	WITHOUT_CLASSIFICATION	3.2360490638735057E-7	DEFECT
// use default if not file or file not found	WITHOUT_CLASSIFICATION	0.9999999721951892	WITHOUT_CLASSIFICATION	2.7804810868469408E-8	DEFECT
// check whether the user has specified an absolute path	WITHOUT_CLASSIFICATION	0.9999999880147068	WITHOUT_CLASSIFICATION	1.1985293272094164E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999998952218317	WITHOUT_CLASSIFICATION	1.0477816833988038E-7	DEFECT
// Start handling SAX events	WITHOUT_CLASSIFICATION	0.9999999144644953	WITHOUT_CLASSIFICATION	8.55355046942028E-8	DEFECT
// Let parent resume handling SAX events	WITHOUT_CLASSIFICATION	0.9999994699179447	WITHOUT_CLASSIFICATION	5.300820551371608E-7	DEFECT
// implicit target must be first on dependency list	WITHOUT_CLASSIFICATION	0.9999999705650664	WITHOUT_CLASSIFICATION	2.9434933656374603E-8	DEFECT
// take care of dependencies	WITHOUT_CLASSIFICATION	0.9999994101124866	WITHOUT_CLASSIFICATION	5.898875134985774E-7	DEFECT
// swallow here, will be thrown again in // UnknownElement.maybeConfigure if the problem persists.	WITHOUT_CLASSIFICATION	0.9999993561287722	WITHOUT_CLASSIFICATION	6.438712277412984E-7	DEFECT
//XXX task.setTaskType(tag);	WITHOUT_CLASSIFICATION	0.9999769086119261	WITHOUT_CLASSIFICATION	2.3091388073838743E-5	DEFECT
// task can contain other tasks - no other nested elements possible	WITHOUT_CLASSIFICATION	0.9999999223485608	WITHOUT_CLASSIFICATION	7.765143924486334E-8	DEFECT
// taskcontainer nested element can contain other tasks - no other // nested elements possible	WITHOUT_CLASSIFICATION	0.9999999307822991	WITHOUT_CLASSIFICATION	6.921770093016062E-8	DEFECT
// Should not happen	WITHOUT_CLASSIFICATION	0.9999842445127869	WITHOUT_CLASSIFICATION	1.5755487213102478E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999998846864979	WITHOUT_CLASSIFICATION	1.1531350213453716E-7	DEFECT
// the first hex character if a character needs to be escaped	WITHOUT_CLASSIFICATION	0.9999998875553159	WITHOUT_CLASSIFICATION	1.1244468415107713E-7	DEFECT
// the second hex character if a character needs to be escaped	WITHOUT_CLASSIFICATION	0.9999979704366988	WITHOUT_CLASSIFICATION	2.02956330122084E-6	DEFECT
// initialize the above 3 arrays	WITHOUT_CLASSIFICATION	0.9999990307945693	WITHOUT_CLASSIFICATION	9.692054306947224E-7	DEFECT
// #8031: first try Java 1.4.	WITHOUT_CLASSIFICATION	0.9999939128549966	WITHOUT_CLASSIFICATION	6.087145003407106E-6	DEFECT
// Fine, Java 1.3 or earlier, do it by hand.	WITHOUT_CLASSIFICATION	0.9999982218405937	WITHOUT_CLASSIFICATION	1.7781594061978494E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999998952218317	WITHOUT_CLASSIFICATION	1.0477816833988038E-7	DEFECT
// Bad URI, pass this on.	WITHOUT_CLASSIFICATION	0.9998370419424809	WITHOUT_CLASSIFICATION	1.6295805751900656E-4	DEFECT
// Unexpected target exception? Should not happen.	WITHOUT_CLASSIFICATION	0.9999998530197683	WITHOUT_CLASSIFICATION	1.469802316003508E-7	DEFECT
// Reflection problems? Should not happen, debug.	WITHOUT_CLASSIFICATION	0.9973595546505258	WITHOUT_CLASSIFICATION	0.002640445349474098	DEFECT
// Fallback method for Java 1.3 or earlier.	WITHOUT_CLASSIFICATION	0.9999884870080441	WITHOUT_CLASSIFICATION	1.1512991955854985E-5	DEFECT
// Ignore malformed exception	WITHOUT_CLASSIFICATION	0.9999997766466594	WITHOUT_CLASSIFICATION	2.233533406829009E-7	DEFECT
// if it's not an ASCII character, break here, and use UTF-8 encoding	WITHOUT_CLASSIFICATION	0.9999992586410781	WITHOUT_CLASSIFICATION	7.413589218582957E-7	DEFECT
// record the fact that it's escaped	WITHOUT_CLASSIFICATION	0.9999995981565831	WITHOUT_CLASSIFICATION	4.0184341684694783E-7	DEFECT
// we saw some non-ascii character	WITHOUT_CLASSIFICATION	0.9999999957598061	WITHOUT_CLASSIFICATION	4.240193825250508E-9	DEFECT
// get UTF-8 bytes for the remaining sub-string	WITHOUT_CLASSIFICATION	0.9999999948470241	WITHOUT_CLASSIFICATION	5.152976008535865E-9	DEFECT
// for each byte	WITHOUT_CLASSIFICATION	0.9999998989794259	WITHOUT_CLASSIFICATION	1.0102057407488161E-7	DEFECT
// for non-ascii character: make it positive, then escape	WITHOUT_CLASSIFICATION	0.9999991100058535	WITHOUT_CLASSIFICATION	8.899941465500664E-7	DEFECT
// firstly check if the tools jar is already in the classpath	WITHOUT_CLASSIFICATION	0.9999999811858282	WITHOUT_CLASSIFICATION	1.881417179236086E-8	DEFECT
// just check whether this throws an exception	WITHOUT_CLASSIFICATION	0.9999993485896622	WITHOUT_CLASSIFICATION	6.514103378112803E-7	DEFECT
// couldn't find compiler - try to find tools.jar // based on java.home setting	WITHOUT_CLASSIFICATION	0.9999994219775258	WITHOUT_CLASSIFICATION	5.780224742408076E-7	DEFECT
// Found in java.home as given	WITHOUT_CLASSIFICATION	0.999999431166397	WITHOUT_CLASSIFICATION	5.688336029748364E-7	DEFECT
// add any jars in the directory	WITHOUT_CLASSIFICATION	0.9999987558397397	WITHOUT_CLASSIFICATION	1.2441602602623478E-6	DEFECT
// now update the class.path property	WITHOUT_CLASSIFICATION	0.9999992558466643	WITHOUT_CLASSIFICATION	7.441533358058566E-7	DEFECT
// overlay specified properties file (if any), which overrides project // settings	WITHOUT_CLASSIFICATION	0.9999999955025575	WITHOUT_CLASSIFICATION	4.497442553559651E-9	DEFECT
// ignore because properties file is not required	WITHOUT_CLASSIFICATION	0.9999975677265693	WITHOUT_CLASSIFICATION	2.4322734306146096E-6	DEFECT
// private static final int ATTR_NORMAL = 0; // private static final int ATTR_BRIGHT = 1;	WITHOUT_CLASSIFICATION	0.9999999568042802	WITHOUT_CLASSIFICATION	4.319571985732658E-8	DEFECT
// private static final int ATTR_UNDERLINE = 3; // private static final int ATTR_BLINK = 5; // private static final int ATTR_REVERSE = 7; // private static final int ATTR_HIDDEN = 8;	WITHOUT_CLASSIFICATION	0.9999999033504823	WITHOUT_CLASSIFICATION	9.664951775796307E-8	DEFECT
// private static final int FG_BLACK = 30;	WITHOUT_CLASSIFICATION	0.9999999515295906	WITHOUT_CLASSIFICATION	4.847040930512349E-8	DEFECT
// private static final int FG_YELLOW = 33;	WITHOUT_CLASSIFICATION	0.999999991227787	WITHOUT_CLASSIFICATION	8.772213058742713E-9	DEFECT
// private static final int FG_WHITE = 37;	WITHOUT_CLASSIFICATION	0.9999999825721985	WITHOUT_CLASSIFICATION	1.7427801583684794E-8	DEFECT
//Ignore - we will use the defaults.	WITHOUT_CLASSIFICATION	0.9999998435369917	WITHOUT_CLASSIFICATION	1.5646300827749084E-7	DEFECT
//Ignore - We do not want this to stop the build.	WITHOUT_CLASSIFICATION	0.9999951099312242	WITHOUT_CLASSIFICATION	4.8900687757616375E-6	DEFECT
// Fall through	WITHOUT_CLASSIFICATION	0.9999771007301629	WITHOUT_CLASSIFICATION	2.2899269837146204E-5	DEFECT
// Whether or not an actual update is required - // we don't need to update if the original file doesn't exist	WITHOUT_CLASSIFICATION	0.9997683602863591	WITHOUT_CLASSIFICATION	2.3163971364088915E-4	DEFECT
// Use the logger config	WITHOUT_CLASSIFICATION	0.9999998491989203	WITHOUT_CLASSIFICATION	1.5080107962641604E-7	DEFECT
// Since task log category includes target, we don't really // need this message	WITHOUT_CLASSIFICATION	0.9999998788890473	WITHOUT_CLASSIFICATION	1.2111095271199932E-7	DEFECT
// Driver doesn't understand the URL	WITHOUT_CLASSIFICATION	0.9999994066687845	WITHOUT_CLASSIFICATION	5.933312153765709E-7	DEFECT
// It's a task - append the target	WITHOUT_CLASSIFICATION	0.9999998954189401	WITHOUT_CLASSIFICATION	1.045810598170659E-7	DEFECT
// finally, lets execute the compiler!!	WITHOUT_CLASSIFICATION	0.9999922048589682	WITHOUT_CLASSIFICATION	7.795141031821974E-6	DEFECT
// Doesn't make sense for c-l. Use the logger config	WITHOUT_CLASSIFICATION	0.9999990617881566	WITHOUT_CLASSIFICATION	9.382118434707107E-7	DEFECT
// Could not get the required information	WITHOUT_CLASSIFICATION	0.9999952912420426	WITHOUT_CLASSIFICATION	4.708757957391101E-6	DEFECT
// Create a ZipFileSet for this file, and pass it up.	WITHOUT_CLASSIFICATION	0.9999989454840138	WITHOUT_CLASSIFICATION	1.054515986100799E-6	DEFECT
// now we need to populate the compiler adapter	WITHOUT_CLASSIFICATION	0.9999998709516079	WITHOUT_CLASSIFICATION	1.290483921458606E-7	DEFECT
// If no webxml file is specified, it's an error.	WITHOUT_CLASSIFICATION	0.9999995486631098	WITHOUT_CLASSIFICATION	4.513368902407839E-7	DEFECT
// One cannot RMIC an interface for "classic" RMI (JRMP)	WITHOUT_CLASSIFICATION	0.9999990038263953	WITHOUT_CLASSIFICATION	9.961736047240248E-7	DEFECT
// otherwise perform a timestamp comparison - at least	WITHOUT_CLASSIFICATION	0.9999991817650175	WITHOUT_CLASSIFICATION	8.182349825759182E-7	DEFECT
// don't know how to handle that - a IDL file doesn't // have a corresponding Java source for example.	WITHOUT_CLASSIFICATION	0.9999904335805007	WITHOUT_CLASSIFICATION	9.566419499250554E-6	DEFECT
/*             * Move the generated source file to the base directory.  If             * base directory and sourcebase are the same, the generated             * sources are already in place.             */	WITHOUT_CLASSIFICATION	0.9999999714937508	WITHOUT_CLASSIFICATION	2.8506249286639507E-8	DEFECT
// no source file generated, nothing to move	WITHOUT_CLASSIFICATION	0.999999998476385	WITHOUT_CLASSIFICATION	1.523614956394469E-9	DEFECT
// not the requested type	WITHOUT_CLASSIFICATION	0.9999956885488684	WITHOUT_CLASSIFICATION	4.311451131569791E-6	DEFECT
// **   full-pathname specified == path in list // **   simple name specified   == path in list	WITHOUT_CLASSIFICATION	0.9999999913210348	WITHOUT_CLASSIFICATION	8.678965157087187E-9	DEFECT
// we only get here if an exception has been thrown	WITHOUT_CLASSIFICATION	0.9999959023670526	WITHOUT_CLASSIFICATION	4.097632947450172E-6	DEFECT
// **   full-pathname specified == parent dir of path in list	WITHOUT_CLASSIFICATION	0.9999999590456752	WITHOUT_CLASSIFICATION	4.0954324870697E-8	DEFECT
// not the requested type	WITHOUT_CLASSIFICATION	0.9999956885488684	WITHOUT_CLASSIFICATION	4.311451131569791E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999998952218317	WITHOUT_CLASSIFICATION	1.0477816833988038E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999998952218317	WITHOUT_CLASSIFICATION	1.0477816833988038E-7	DEFECT
//the rest of the method treats single jar like //a nested path with one file	WITHOUT_CLASSIFICATION	0.999994411538434	WITHOUT_CLASSIFICATION	5.58846156595441E-6	DEFECT
// Check for \r, \r\n and \r\r\n // Regard \r\r not followed by \n as two lines	WITHOUT_CLASSIFICATION	0.9999960765595886	WITHOUT_CLASSIFICATION	3.92344041138228E-6	DEFECT
// scan base dirs to build up compile lists only if a // specific classname is not given	WITHOUT_CLASSIFICATION	0.9999988636129553	WITHOUT_CLASSIFICATION	1.1363870447304349E-6	DEFECT
// **   simple name specified   == parent dir + name	WITHOUT_CLASSIFICATION	0.9999999862351733	WITHOUT_CLASSIFICATION	1.3764826705857965E-8	DEFECT
// class found but restricted name; this is // actually the case we're looking for in JDK 1.3+, // so catch the exception and return	WITHOUT_CLASSIFICATION	0.9999994006147473	WITHOUT_CLASSIFICATION	5.993852525474919E-7	DEFECT
// Can return null to represent the bootstrap class loader. // see API docs of Class.getClassLoader.	WITHOUT_CLASSIFICATION	0.9999999949767312	WITHOUT_CLASSIFICATION	5.023268775200955E-9	DEFECT
// must be "add"	WITHOUT_CLASSIFICATION	0.9999998877161597	WITHOUT_CLASSIFICATION	1.1228384039853294E-7	DEFECT
// first off, make sure that we've got a srcdir and destdir	WITHOUT_CLASSIFICATION	0.9999999595982385	WITHOUT_CLASSIFICATION	4.040176152716204E-8	DEFECT
// log options used	WITHOUT_CLASSIFICATION	0.9999999095699347	WITHOUT_CLASSIFICATION	9.043006528749442E-8	DEFECT
//patch file into the fileset	WITHOUT_CLASSIFICATION	0.999999905263896	WITHOUT_CLASSIFICATION	9.473610399611538E-8	DEFECT
//set our parent dir	WITHOUT_CLASSIFICATION	0.9999995401958257	WITHOUT_CLASSIFICATION	4.5980417429641466E-7	DEFECT
// Compare the destination with the temp file	WITHOUT_CLASSIFICATION	0.999999991995982	WITHOUT_CLASSIFICATION	8.004017981809409E-9	DEFECT
// Eof has been reached	WITHOUT_CLASSIFICATION	0.9999956638667061	WITHOUT_CLASSIFICATION	4.336133293806643E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999998952218317	WITHOUT_CLASSIFICATION	1.0477816833988038E-7	DEFECT
// don't reposition when we've reached the end // of the stream	WITHOUT_CLASSIFICATION	0.9999924144654069	WITHOUT_CLASSIFICATION	7.585534593119205E-6	DEFECT
// if at eolcount == 0 and trailing characters of string // are CTRL-Zs, set eofStr	WITHOUT_CLASSIFICATION	0.9999999998985669	WITHOUT_CLASSIFICATION	1.0143308876875199E-10	DEFECT
// keep searching for the first ^Z	WITHOUT_CLASSIFICATION	0.9999999942204651	WITHOUT_CLASSIFICATION	5.779534841166313E-9	DEFECT
// Trailing characters are ^Zs // Construct new line and eofStr	WITHOUT_CLASSIFICATION	0.9999999964060714	WITHOUT_CLASSIFICATION	3.5939286474290236E-9	DEFECT
// permissible values for compression attribute	WITHOUT_CLASSIFICATION	0.999993250777756	WITHOUT_CLASSIFICATION	6.749222243936641E-6	DEFECT
//default	WITHOUT_CLASSIFICATION	0.9999939690177441	WITHOUT_CLASSIFICATION	6.030982255966268E-6	DEFECT
// shadow of the above if the value is altered in execute	WITHOUT_CLASSIFICATION	0.99999905860811	WITHOUT_CLASSIFICATION	9.413918899408186E-7	DEFECT
// For directories:	WITHOUT_CLASSIFICATION	0.9999996255725733	WITHOUT_CLASSIFICATION	3.7442742670848454E-7	DEFECT
// Renamed version of original file, if it exists	WITHOUT_CLASSIFICATION	0.9999825544860538	WITHOUT_CLASSIFICATION	1.7445513946242318E-5	DEFECT
// Add the files found in groupfileset to fileset	WITHOUT_CLASSIFICATION	0.9999993333839421	WITHOUT_CLASSIFICATION	6.66616057960097E-7	DEFECT
// can also handle empty archives	WITHOUT_CLASSIFICATION	0.9999999790611238	WITHOUT_CLASSIFICATION	2.0938876292750717E-8	DEFECT
// quick exit if the target is up to date	WITHOUT_CLASSIFICATION	0.9999999892777633	WITHOUT_CLASSIFICATION	1.0722236759425012E-8	DEFECT
// Close the output stream.	WITHOUT_CLASSIFICATION	0.9999999888210932	WITHOUT_CLASSIFICATION	1.1178906740177286E-8	DEFECT
// we are recreating the archive, need all resources	WITHOUT_CLASSIFICATION	0.9999999897412472	WITHOUT_CLASSIFICATION	1.0258752920696774E-8	DEFECT
// delete a bogus ZIP file (but only if it's not the original one)	WITHOUT_CLASSIFICATION	0.9999995637861366	WITHOUT_CLASSIFICATION	4.3621386337102383E-7	DEFECT
// In this case using java.util.zip will not work // because it does not permit a zero-entry archive. // Must create it manually.	WITHOUT_CLASSIFICATION	0.9887651074251368	WITHOUT_CLASSIFICATION	0.01123489257486325	DEFECT
// Cf. PKZIP specification.	WITHOUT_CLASSIFICATION	0.9999999636844206	WITHOUT_CLASSIFICATION	3.631557945692019E-8	DEFECT
// P // K	WITHOUT_CLASSIFICATION	0.9999963995213401	WITHOUT_CLASSIFICATION	3.600478659985178E-6	DEFECT
// remainder zeros	WITHOUT_CLASSIFICATION	0.9999990894408793	WITHOUT_CLASSIFICATION	9.105591207904671E-7	DEFECT
// Create.	WITHOUT_CLASSIFICATION	0.9999998951904409	WITHOUT_CLASSIFICATION	1.0480955917585635E-7	DEFECT
// we are recreating the archive, need all resources	WITHOUT_CLASSIFICATION	0.9999999897412472	WITHOUT_CLASSIFICATION	1.0258752920696774E-8	DEFECT
// initialResources is not empty	WITHOUT_CLASSIFICATION	0.9999950520689708	WITHOUT_CLASSIFICATION	4.947931029310688E-6	DEFECT
// initialResources is not empty	WITHOUT_CLASSIFICATION	0.9999950520689708	WITHOUT_CLASSIFICATION	4.947931029310688E-6	DEFECT
// in this case all files from origin map to // the fullPath attribute of the zipfileset at // destination	WITHOUT_CLASSIFICATION	0.9999942449386968	WITHOUT_CLASSIFICATION	5.7550613032553805E-6	DEFECT
// we are recreating the archive, need all resources	WITHOUT_CLASSIFICATION	0.9999999897412472	WITHOUT_CLASSIFICATION	1.0258752920696774E-8	DEFECT
// we are recreating the archive, need all resources	WITHOUT_CLASSIFICATION	0.9999999897412472	WITHOUT_CLASSIFICATION	1.0258752920696774E-8	DEFECT
// no emptyBehavior handling since the FileSet version // will take care of it.	WITHOUT_CLASSIFICATION	0.9999997414523517	WITHOUT_CLASSIFICATION	2.5854764834689243E-7	DEFECT
/*         * Backwards compatibility forces us to repeat the logic of         * getResourcesToAdd(FileSet[], ...) here once again.         */	WITHOUT_CLASSIFICATION	0.9999999834483237	WITHOUT_CLASSIFICATION	1.6551676206475627E-8	DEFECT
// we will return initialResources anyway, no reason // to scan further.	WITHOUT_CLASSIFICATION	0.9999998190159436	WITHOUT_CLASSIFICATION	1.809840563556801E-7	DEFECT
// we will return initialResources anyway, no reason // to scan further.	WITHOUT_CLASSIFICATION	0.9999998190159436	WITHOUT_CLASSIFICATION	1.809840563556801E-7	DEFECT
// ZIPs store time with a granularity of 2 seconds, round up	WITHOUT_CLASSIFICATION	0.9999818277550475	WITHOUT_CLASSIFICATION	1.8172244952545303E-5	DEFECT
// don't add directories we've already added. // no warning if we try, it is harmless in and of itself	WITHOUT_CLASSIFICATION	0.9999999824147338	WITHOUT_CLASSIFICATION	1.7585266239138524E-8	DEFECT
// A "refid" attribute for a node within a Path object.	WITHOUT_CLASSIFICATION	0.9999981019834756	WITHOUT_CLASSIFICATION	1.8980165243450095E-6	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.99999795328422	WITHOUT_CLASSIFICATION	2.0467157800256684E-6	DEFECT
//default	WITHOUT_CLASSIFICATION	0.9999939690177441	WITHOUT_CLASSIFICATION	6.030982255966268E-6	DEFECT
//default	WITHOUT_CLASSIFICATION	0.9999939690177441	WITHOUT_CLASSIFICATION	6.030982255966268E-6	DEFECT
// ZIPs store time with a granularity of 2 seconds, round up	WITHOUT_CLASSIFICATION	0.9999818277550475	WITHOUT_CLASSIFICATION	1.8172244952545303E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999998952218317	WITHOUT_CLASSIFICATION	1.0477816833988038E-7	DEFECT
// duplicate equal to add, so we continue	WITHOUT_CLASSIFICATION	0.9999999963829576	WITHOUT_CLASSIFICATION	3.6170423782725905E-9	DEFECT
// Store data into a byte[]	WITHOUT_CLASSIFICATION	0.999998890286719	WITHOUT_CLASSIFICATION	1.1097132810731806E-6	DEFECT
// may be altered in validate	WITHOUT_CLASSIFICATION	0.9999991006936542	WITHOUT_CLASSIFICATION	8.993063458174747E-7	DEFECT
// set user-defined properties	WITHOUT_CLASSIFICATION	0.9999999965796926	WITHOUT_CLASSIFICATION	3.4203072988764924E-9	DEFECT
// set Java built-in properties separately, // b/c we won't inherit them.	WITHOUT_CLASSIFICATION	0.9999956755078838	WITHOUT_CLASSIFICATION	4.324492116085051E-6	DEFECT
// set all properties from calling project	WITHOUT_CLASSIFICATION	0.999999370351144	WITHOUT_CLASSIFICATION	6.296488561029362E-7	DEFECT
// has been set explicitly	WITHOUT_CLASSIFICATION	0.9999994940643012	WITHOUT_CLASSIFICATION	5.059356988139764E-7	DEFECT
// Are we trying to call the target in which we are defined (or // the build file if this is a top level task)?	WITHOUT_CLASSIFICATION	0.9999999979362828	WITHOUT_CLASSIFICATION	2.063717217249132E-9	DEFECT
// help the gc	WITHOUT_CLASSIFICATION	0.9999983424910771	WITHOUT_CLASSIFICATION	1.6575089227918172E-6	DEFECT
// remove duplicate properties - last property wins // Needed for backward compatibility	WITHOUT_CLASSIFICATION	0.9999992886868976	WITHOUT_CLASSIFICATION	7.113131024040182E-7	DEFECT
// Now add all references that are not defined in the // subproject, if inheritRefs is true	WITHOUT_CLASSIFICATION	0.999999556525129	WITHOUT_CLASSIFICATION	4.434748710640177E-7	DEFECT
// not Clonable	WITHOUT_CLASSIFICATION	0.9999997346622568	WITHOUT_CLASSIFICATION	2.653377431935132E-7	DEFECT
// ignore this if the class being referenced does not have // a set project method.	WITHOUT_CLASSIFICATION	0.9999921438784626	WITHOUT_CLASSIFICATION	7.856121537487056E-6	DEFECT
// basedir and ant.file get special treatment in execute()	WITHOUT_CLASSIFICATION	0.9999993548017616	WITHOUT_CLASSIFICATION	6.451982383969506E-7	DEFECT
// don't re-set user properties, avoid the warning message	WITHOUT_CLASSIFICATION	0.9999987740895563	WITHOUT_CLASSIFICATION	1.2259104437273155E-6	DEFECT
// no user property	WITHOUT_CLASSIFICATION	0.9999995828423093	WITHOUT_CLASSIFICATION	4.1715769070218565E-7	DEFECT
// @note: it is a string and not a file to handle relative/absolute // otherwise a relative file will be resolved based on the current // basedir.	WITHOUT_CLASSIFICATION	0.9999985517316317	WITHOUT_CLASSIFICATION	1.4482683683752748E-6	DEFECT
/*     * Get the (sub)-Project instance currently in use.     * @return Project     * @since Ant 1.7     */	WITHOUT_CLASSIFICATION	0.999998496852938	WITHOUT_CLASSIFICATION	1.5031470620956483E-6	DEFECT
// check to make sure that the given dir isn't a symlink // the comparison of absolute path and canonical path // catches this	WITHOUT_CLASSIFICATION	0.9996546709903359	WITHOUT_CLASSIFICATION	3.4532900966407977E-4	DEFECT
//validation logic	WITHOUT_CLASSIFICATION	0.9999956399346203	WITHOUT_CLASSIFICATION	4.3600653797180034E-6	DEFECT
//this isnt strictly needed, but by being fussy now, //we can change implementation details later	WITHOUT_CLASSIFICATION	0.9999893523563728	WITHOUT_CLASSIFICATION	1.0647643627161941E-5	DEFECT
//special case single jar handling with signedjar attribute set	WITHOUT_CLASSIFICATION	0.9999999833908628	WITHOUT_CLASSIFICATION	1.6609137197911085E-8	DEFECT
// single jar processing	WITHOUT_CLASSIFICATION	0.9999999690582339	WITHOUT_CLASSIFICATION	3.094176609722619E-8	DEFECT
//return here.	WITHOUT_CLASSIFICATION	0.999923701788143	WITHOUT_CLASSIFICATION	7.629821185694526E-5	DEFECT
//set up our mapping policy	WITHOUT_CLASSIFICATION	0.9999997943653616	WITHOUT_CLASSIFICATION	2.0563463841576592E-7	DEFECT
//no mapper? use the identity policy	WITHOUT_CLASSIFICATION	0.9999957573736883	WITHOUT_CLASSIFICATION	4.242626311667696E-6	DEFECT
//determine the destination filename via the mapper	WITHOUT_CLASSIFICATION	0.9999999441050225	WITHOUT_CLASSIFICATION	5.589497760889281E-8	DEFECT
//we only like simple mappers.	WITHOUT_CLASSIFICATION	0.9999254770780186	WITHOUT_CLASSIFICATION	7.452292198136405E-5	DEFECT
//DO NOT SET THE -signedjar OPTION if source==dest //unless you like fielding hotspot crash reports	WITHOUT_CLASSIFICATION	0.9999998465430769	WITHOUT_CLASSIFICATION	1.5345692306123784E-7	DEFECT
//add -tsa operations if declared	WITHOUT_CLASSIFICATION	0.9999999246122878	WITHOUT_CLASSIFICATION	7.538771217263623E-8	DEFECT
//JAR source is required	WITHOUT_CLASSIFICATION	0.9999441855898361	WITHOUT_CLASSIFICATION	5.5814410163886983E-5	DEFECT
//alias is required for signing	WITHOUT_CLASSIFICATION	0.9998495652198763	WITHOUT_CLASSIFICATION	1.5043478012365943E-4	DEFECT
// restore the lastModified attribute	WITHOUT_CLASSIFICATION	0.9999999565614687	WITHOUT_CLASSIFICATION	4.3438531259815626E-8	DEFECT
//we normally compare destination with source	WITHOUT_CLASSIFICATION	0.9999993118477984	WITHOUT_CLASSIFICATION	6.881522015071417E-7	DEFECT
//but if no dest is specified, compare source to source	WITHOUT_CLASSIFICATION	0.9999999871862222	WITHOUT_CLASSIFICATION	1.2813777749689638E-8	DEFECT
//if, by any means, the destfile and source match,	WITHOUT_CLASSIFICATION	0.9999997314434441	WITHOUT_CLASSIFICATION	2.68556555900729E-7	DEFECT
//we check the presence of signatures on lazy signing	WITHOUT_CLASSIFICATION	0.9999977340854102	WITHOUT_CLASSIFICATION	2.2659145899732286E-6	DEFECT
//unsigned or non-lazy self signings are always false	WITHOUT_CLASSIFICATION	0.9999861804767627	WITHOUT_CLASSIFICATION	1.3819523237301335E-5	DEFECT
//if they are different, the timestamps are used	WITHOUT_CLASSIFICATION	0.9999999494062224	WITHOUT_CLASSIFICATION	5.05937776394265E-8	DEFECT
//just log this	WITHOUT_CLASSIFICATION	0.9999830823054653	WITHOUT_CLASSIFICATION	1.6917694534730147E-5	DEFECT
// fileutils	WITHOUT_CLASSIFICATION	0.9999998480203108	WITHOUT_CLASSIFICATION	1.5197968926286312E-7	DEFECT
// --- Fields --	WITHOUT_CLASSIFICATION	0.9999990641525357	WITHOUT_CLASSIFICATION	9.358474643323863E-7	DEFECT
// Keep a hashtable of attributes added by this task. // This task is allow to override its own properties // but not other properties.  So we need to keep track // of which properties we've added.	WITHOUT_CLASSIFICATION	0.9999997521848064	WITHOUT_CLASSIFICATION	2.478151935586988E-7	DEFECT
// Error generated during parsing	WITHOUT_CLASSIFICATION	0.9999927461533642	WITHOUT_CLASSIFICATION	7.253846635759405E-6	DEFECT
// Parser with specified options can't be built	WITHOUT_CLASSIFICATION	0.9999972222767798	WITHOUT_CLASSIFICATION	2.7777232202865407E-6	DEFECT
// I/O error	WITHOUT_CLASSIFICATION	0.9999936020455102	WITHOUT_CLASSIFICATION	6.397954489698434E-6	DEFECT
// Set the prefix for this node to include its tag name.	WITHOUT_CLASSIFICATION	0.9999614507838086	WITHOUT_CLASSIFICATION	3.8549216191400393E-5	DEFECT
// Pass the container to the processing of this node,	WITHOUT_CLASSIFICATION	0.9999997594458272	WITHOUT_CLASSIFICATION	2.4055417277266124E-7	DEFECT
// now, iterate through children.	WITHOUT_CLASSIFICATION	0.9999998262342203	WITHOUT_CLASSIFICATION	1.7376577968605186E-7	DEFECT
// For each child, pass the object added by // processNode to its children -- in other word, each // object can pass information along to its children.	WITHOUT_CLASSIFICATION	0.999998949926768	WITHOUT_CLASSIFICATION	1.0500732320463327E-6	DEFECT
// The value of an id attribute of this node.	WITHOUT_CLASSIFICATION	0.9999969652276753	WITHOUT_CLASSIFICATION	3.034772324637292E-6	DEFECT
// Is there an id attribute?	WITHOUT_CLASSIFICATION	0.9999914671863568	WITHOUT_CLASSIFICATION	8.532813643169354E-6	DEFECT
// Now, iterate through the attributes adding them.	WITHOUT_CLASSIFICATION	0.9999998547389002	WITHOUT_CLASSIFICATION	1.4526109982011147E-7	DEFECT
/*                     * The main conditional logic -- if the attribute                     * is somehow "special" (i.e., it has known                     * semantic meaning) then deal with it                     * appropriately.                     */	WITHOUT_CLASSIFICATION	0.9999882413069127	WITHOUT_CLASSIFICATION	1.1758693087298006E-5	DEFECT
// ID has already been found above.	WITHOUT_CLASSIFICATION	0.9999998887996793	WITHOUT_CLASSIFICATION	1.1120032077267959E-7	DEFECT
// A "path" attribute for a node within a Path object.	WITHOUT_CLASSIFICATION	0.999996477570708	WITHOUT_CLASSIFICATION	3.52242929192197E-6	DEFECT
// A node identifying a new path	WITHOUT_CLASSIFICATION	0.9999983278413717	WITHOUT_CLASSIFICATION	1.672158628272868E-6	DEFECT
// For the text node, add a property.	WITHOUT_CLASSIFICATION	0.9999989844075503	WITHOUT_CLASSIFICATION	1.0155924497116183E-6	DEFECT
// If the containing object was a String, then use it as the ID.	WITHOUT_CLASSIFICATION	0.9999998455259419	WITHOUT_CLASSIFICATION	1.544740581031987E-7	DEFECT
// If this attribute was added by this task, then // we append this value to the existing value. // We use the setProperty method which will // forcibly override the property if it already exists. // We need to put these properties into the project // when we read them, though (instead of keeping them // outside of the project and batch adding them at the end) // to allow other properties to reference them.	WITHOUT_CLASSIFICATION	0.999999898167144	WITHOUT_CLASSIFICATION	1.0183285612162631E-7	DEFECT
// Never include the "refid" attribute as part of the // attribute name.	WITHOUT_CLASSIFICATION	0.999999999989683	WITHOUT_CLASSIFICATION	1.0316967439207227E-11	DEFECT
// Otherwise, return it appended unless property to hide it is set.	WITHOUT_CLASSIFICATION	0.9999944193396978	WITHOUT_CLASSIFICATION	5.580660302133192E-6	DEFECT
/* Expose members for extensibility */	WITHOUT_CLASSIFICATION	0.999993183095982	WITHOUT_CLASSIFICATION	6.816904017979986E-6	DEFECT
// delegate this way around to support subclasses that // overwrite getFile	WITHOUT_CLASSIFICATION	0.999999972442369	WITHOUT_CLASSIFICATION	2.7557630987509105E-8	DEFECT
//we arent fully defined yet. this is an error unless //we are in an antlib, in which case the resource name is determined //automatically. //NB: URIs in the ant core package will be "" at this point.	WITHOUT_CLASSIFICATION	0.9940983367950715	WITHOUT_CLASSIFICATION	0.005901663204928468	DEFECT
//convert the URI to a resource	WITHOUT_CLASSIFICATION	0.9999998860193801	WITHOUT_CLASSIFICATION	1.1398061992662188E-7	DEFECT
//handle new style full paths to an antlib, in which //all but the forward slashes are allowed.	WITHOUT_CLASSIFICATION	0.9999999126830278	WITHOUT_CLASSIFICATION	8.731697220797347E-8	DEFECT
//if we haven't already named an XML file, it gets antlib.xml	WITHOUT_CLASSIFICATION	0.9999549995397292	WITHOUT_CLASSIFICATION	4.5000460270668546E-5	DEFECT
//convert from a package to a path	WITHOUT_CLASSIFICATION	0.999999693190475	WITHOUT_CLASSIFICATION	3.0680952495586625E-7	DEFECT
// Here if there is an error	WITHOUT_CLASSIFICATION	0.9999907874663534	WITHOUT_CLASSIFICATION	9.212533646745783E-6	DEFECT
// Fall Through	WITHOUT_CLASSIFICATION	0.9999931579454344	WITHOUT_CLASSIFICATION	6.842054565631419E-6	DEFECT
// log at a lower level	WITHOUT_CLASSIFICATION	0.9999995904308415	WITHOUT_CLASSIFICATION	4.095691584458202E-7	DEFECT
// Ignore the problem	WITHOUT_CLASSIFICATION	0.999999433283059	WITHOUT_CLASSIFICATION	5.667169410973892E-7	DEFECT
//trick to evoke "basedir not set" if null:	WITHOUT_CLASSIFICATION	0.9999815542411202	WITHOUT_CLASSIFICATION	1.8445758879742172E-5	DEFECT
//no sources = nothing to compare; no targets = nothing to delete:	WITHOUT_CLASSIFICATION	0.9999999886150891	WITHOUT_CLASSIFICATION	1.1384910945017489E-8	DEFECT
// Members	WITHOUT_CLASSIFICATION	0.999999812521917	WITHOUT_CLASSIFICATION	1.874780830526402E-7	DEFECT
// Members	WITHOUT_CLASSIFICATION	0.999999812521917	WITHOUT_CLASSIFICATION	1.874780830526402E-7	DEFECT
// If we are a reference, create a Path from the reference	WITHOUT_CLASSIFICATION	0.9999995891134329	WITHOUT_CLASSIFICATION	4.108865670902807E-7	DEFECT
// for NetWare and OS/2, piggy-back on Windows, since here and // in the apply code, the same assumptions can be made as with // windows - that \\ is an OK separator, and do comparisons // case-insensitive.	WITHOUT_CLASSIFICATION	0.9979903107753564	WITHOUT_CLASSIFICATION	0.0020096892246435935	DEFECT
// If the element starts with the configured prefix, then // convert the prefix to the configured 'to' value.	WITHOUT_CLASSIFICATION	0.9999989727934545	WITHOUT_CLASSIFICATION	1.0272065455380828E-6	DEFECT
// Currently, we deal with only two path formats: Unix and Windows // And Unix is everything that is not Windows	WITHOUT_CLASSIFICATION	0.9696883871035441	WITHOUT_CLASSIFICATION	0.03031161289645587	DEFECT
// may be altered in validateSetup // may be altered in validateSetup	WITHOUT_CLASSIFICATION	0.9999990102449978	WITHOUT_CLASSIFICATION	9.897550022065298E-7	DEFECT
// validate our setup	WITHOUT_CLASSIFICATION	0.9999999373359691	WITHOUT_CLASSIFICATION	6.26640308435003E-8	DEFECT
// Currently, we deal with only two path formats: Unix and Windows // And Unix is everything that is not Windows // (with the exception for NetWare and OS/2 below)	WITHOUT_CLASSIFICATION	0.9976593265446205	WITHOUT_CLASSIFICATION	0.0023406734553794973	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999998952218317	WITHOUT_CLASSIFICATION	1.0477816833988038E-7	DEFECT
// Get the list of path components in canonical form	WITHOUT_CLASSIFICATION	0.9999999727553879	WITHOUT_CLASSIFICATION	2.7244612095878394E-8	DEFECT
// Apply the path prefix map	WITHOUT_CLASSIFICATION	0.9994022039164591	WITHOUT_CLASSIFICATION	5.97796083540916E-4	DEFECT
// Now convert the path and file separator characters from the // current os to the target os.	WITHOUT_CLASSIFICATION	0.9999999991215514	WITHOUT_CLASSIFICATION	8.784485190909766E-10	DEFECT
// Place the result into the specified property, // unless setonempty == false	WITHOUT_CLASSIFICATION	0.9999999951772469	WITHOUT_CLASSIFICATION	4.8227530598066375E-9	DEFECT
// Iterate over the map entries and apply each one. // Stop when one of the entries actually changes the element.	WITHOUT_CLASSIFICATION	0.9999999643456641	WITHOUT_CLASSIFICATION	3.5654335960553236E-8	DEFECT
// Note I'm using "!=" to see if we got a new object back from // the apply method.	WITHOUT_CLASSIFICATION	0.999999939413322	WITHOUT_CLASSIFICATION	6.058667797661271E-8	DEFECT
// We applied one, so we're done	WITHOUT_CLASSIFICATION	0.9999999997684461	WITHOUT_CLASSIFICATION	2.315538986708301E-10	DEFECT
// Determine the separator strings.  The dirsep and pathsep attributes // override the targetOS settings.	WITHOUT_CLASSIFICATION	0.999999999991078	WITHOUT_CLASSIFICATION	8.921983287327573E-12	DEFECT
// override with pathsep=	WITHOUT_CLASSIFICATION	0.9999998607200727	WITHOUT_CLASSIFICATION	1.3927992718127322E-7	DEFECT
// override with dirsep=	WITHOUT_CLASSIFICATION	0.9999998130631595	WITHOUT_CLASSIFICATION	1.8693684043475608E-7	DEFECT
// Check if used by attributes	WITHOUT_CLASSIFICATION	0.999999991979154	WITHOUT_CLASSIFICATION	8.0208460558077E-9	DEFECT
// ? is there an xml api for this ?	WITHOUT_CLASSIFICATION	0.9999948645038447	WITHOUT_CLASSIFICATION	5.1354961553289325E-6	DEFECT
////////////////////////////////////////////////////////////////////// // ATTRIBUTES	WITHOUT_CLASSIFICATION	0.9999962953453685	WITHOUT_CLASSIFICATION	3.704654631579107E-6	DEFECT
////////////////////////////////////////////////////////////////////// // CONSTRUCTORS / INITIALIZERS	WITHOUT_CLASSIFICATION	0.9999990944934184	WITHOUT_CLASSIFICATION	9.055065815696451E-7	DEFECT
////////////////////////////////////////////////////////////////////// // ACCESSOR METHODS	WITHOUT_CLASSIFICATION	0.999994758918396	WITHOUT_CLASSIFICATION	5.24108160414387E-6	DEFECT
//Validate mandatory attributes	WITHOUT_CLASSIFICATION	0.9999843201351082	WITHOUT_CLASSIFICATION	1.567986489182221E-5	DEFECT
//the property attribute must have access to a property file	WITHOUT_CLASSIFICATION	0.9999930116468649	WITHOUT_CLASSIFICATION	6.9883531351026306E-6	DEFECT
//Make sure property exists in property file	WITHOUT_CLASSIFICATION	0.9997803054498161	WITHOUT_CLASSIFICATION	2.1969455018395193E-4	DEFECT
//Default is empty string	WITHOUT_CLASSIFICATION	0.9999996724424617	WITHOUT_CLASSIFICATION	3.275575383653416E-7	DEFECT
// Avoid runtime problem on pre 1.4 when compiling post 1.4	WITHOUT_CLASSIFICATION	0.9994555085771114	WITHOUT_CLASSIFICATION	5.444914228885235E-4	DEFECT
// end of finally	WITHOUT_CLASSIFICATION	0.9999782506540225	WITHOUT_CLASSIFICATION	2.174934597758355E-5	DEFECT
//look for and print warnings	WITHOUT_CLASSIFICATION	0.999999206793231	WITHOUT_CLASSIFICATION	7.932067690933733E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999996763950936	WITHOUT_CLASSIFICATION	3.2360490638735057E-7	DEFECT
////////////////////////////////////////////////////////////////////// // ATTRIBUTES	WITHOUT_CLASSIFICATION	0.9999962953453685	WITHOUT_CLASSIFICATION	3.704654631579107E-6	DEFECT
////////////////////////////////////////////////////////////////////// // ACCESSOR METHODS	WITHOUT_CLASSIFICATION	0.999994758918396	WITHOUT_CLASSIFICATION	5.24108160414387E-6	DEFECT
// line separators in values and tokens are "\n" // in order to compare with the file contents, replace them // as needed	WITHOUT_CLASSIFICATION	0.9999999460156194	WITHOUT_CLASSIFICATION	5.398438061314825E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999998952218317	WITHOUT_CLASSIFICATION	1.0477816833988038E-7	DEFECT
// Ignore Exception	WITHOUT_CLASSIFICATION	0.9999998703768748	WITHOUT_CLASSIFICATION	1.2962312530729791E-7	DEFECT
// no errors so far	WITHOUT_CLASSIFICATION	0.9999998245941973	WITHOUT_CLASSIFICATION	1.7540580265031288E-7	DEFECT
// If we don't know the type of the line // and we are in emacs mode, it will be // an error, because in this mode, jikes won't // always print "error", but sometimes other // keywords like "Syntax". We should look for // all those keywords.	WITHOUT_CLASSIFICATION	0.9999931709103389	WITHOUT_CLASSIFICATION	6.829089661067083E-6	DEFECT
// plain impossible	WITHOUT_CLASSIFICATION	0.9999998595330855	WITHOUT_CLASSIFICATION	1.4046691457230407E-7	DEFECT
// We must check if the process was not stopped // before being here	WITHOUT_CLASSIFICATION	0.9999985151678585	WITHOUT_CLASSIFICATION	1.4848321414432688E-6	DEFECT
// the process is not terminated, if this is really // a timeout and not a manual stop then kill it.	WITHOUT_CLASSIFICATION	0.9999880326106766	WITHOUT_CLASSIFICATION	1.196738932339844E-5	DEFECT
////////////////////////////////////////////////////////////////////// // CORE / MAIN BODY	WITHOUT_CLASSIFICATION	0.9999854231510398	WITHOUT_CLASSIFICATION	1.457684896022615E-5	DEFECT
// get the recorder entry	WITHOUT_CLASSIFICATION	0.9999954655078447	WITHOUT_CLASSIFICATION	4.534492155273353E-6	DEFECT
// set the values on the recorder	WITHOUT_CLASSIFICATION	0.9999983955770997	WITHOUT_CLASSIFICATION	1.6044229002705219E-6	DEFECT
////////////////////////////////////////////////////////////////////// // INNER CLASSES	WITHOUT_CLASSIFICATION	0.9999985659065906	WITHOUT_CLASSIFICATION	1.4340934093810002E-6	DEFECT
// create a recorder entry	WITHOUT_CLASSIFICATION	0.9999995120011983	WITHOUT_CLASSIFICATION	4.879988016266278E-7	DEFECT
// Use '/' to calculate digest based on file name. // This is required in order to get the same result // on different platforms.	WITHOUT_CLASSIFICATION	0.9999998375203998	WITHOUT_CLASSIFICATION	1.6247960024394913E-7	DEFECT
// Read the checksum from disk.	WITHOUT_CLASSIFICATION	0.9999995168095597	WITHOUT_CLASSIFICATION	4.831904402826902E-7	DEFECT
// A separate directory was explicitly declared	WITHOUT_CLASSIFICATION	0.999999894370945	WITHOUT_CLASSIFICATION	1.0562905500024438E-7	DEFECT
// Empty statement	WITHOUT_CLASSIFICATION	0.9999997423230343	WITHOUT_CLASSIFICATION	2.576769656801823E-7	DEFECT
//can either be a property name string or a file	WITHOUT_CLASSIFICATION	0.9999989352960003	WITHOUT_CLASSIFICATION	1.0647039997398936E-6	DEFECT
// file is on wrong format, swallow	WITHOUT_CLASSIFICATION	0.9999879745136443	WITHOUT_CLASSIFICATION	1.202548635576197E-5	DEFECT
// try to be smart, not to be fooled by a weird directory name	WITHOUT_CLASSIFICATION	0.9999998059022595	WITHOUT_CLASSIFICATION	1.9409774065377145E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999996763950936	WITHOUT_CLASSIFICATION	3.2360490638735057E-7	DEFECT
// Close the output stream.	WITHOUT_CLASSIFICATION	0.9999999888210932	WITHOUT_CLASSIFICATION	1.1178906740177286E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999998952218317	WITHOUT_CLASSIFICATION	1.0477816833988038E-7	DEFECT
// File is Comparable, so sorting is trivial	WITHOUT_CLASSIFICATION	0.9999999205046605	WITHOUT_CLASSIFICATION	7.949533959320953E-8	DEFECT
// Loop over the checksums and generate a total hash.	WITHOUT_CLASSIFICATION	0.999999997038871	WITHOUT_CLASSIFICATION	2.96112899517176E-9	DEFECT
// Add the digest for the file content	WITHOUT_CLASSIFICATION	0.9999999762417473	WITHOUT_CLASSIFICATION	2.3758252704036638E-8	DEFECT
// Add the file path	WITHOUT_CLASSIFICATION	0.9999998081288765	WITHOUT_CLASSIFICATION	1.9187112365668393E-7	DEFECT
// two characters form the hex value.	WITHOUT_CLASSIFICATION	0.9999998989675339	WITHOUT_CLASSIFICATION	1.0103246609143576E-7	DEFECT
// We just set the prefix for this fileset, and pass it up.	WITHOUT_CLASSIFICATION	0.9999874730569147	WITHOUT_CLASSIFICATION	1.2526943085371082E-5	DEFECT
// Check if the service is configured correctly	WITHOUT_CLASSIFICATION	0.9999899667480513	WITHOUT_CLASSIFICATION	1.0033251948671196E-5	DEFECT
// if we haven't got the manifest yet, attempt to // get it now and have manifest be the final merge	WITHOUT_CLASSIFICATION	0.9999949028722381	WITHOUT_CLASSIFICATION	5.097127761894426E-6	DEFECT
// time to write the manifest	WITHOUT_CLASSIFICATION	0.9999998304327142	WITHOUT_CLASSIFICATION	1.6956728583991327E-7	DEFECT
// encoding must be UTF8 as specified in the specs.	WITHOUT_CLASSIFICATION	0.9999999916362755	WITHOUT_CLASSIFICATION	8.363724561959694E-9	DEFECT
// version-info blankline	WITHOUT_CLASSIFICATION	0.9999998365025784	WITHOUT_CLASSIFICATION	1.6349742163032636E-7	DEFECT
// header newline	WITHOUT_CLASSIFICATION	0.9999987650220833	WITHOUT_CLASSIFICATION	1.2349779166356414E-6	DEFECT
// If this is the same name specified in 'manifest', this // is the manifest to use	WITHOUT_CLASSIFICATION	0.9999995782730223	WITHOUT_CLASSIFICATION	4.2172697770676445E-7	DEFECT
// we add this to our group of fileset manifests	WITHOUT_CLASSIFICATION	0.9999998207745694	WITHOUT_CLASSIFICATION	1.7922543060137268E-7	DEFECT
// assuming 'skip' otherwise // don't warn if skip has been requested explicitly, warn if user // didn't set the attribute	WITHOUT_CLASSIFICATION	0.9999936226157677	WITHOUT_CLASSIFICATION	6.377384232307612E-6	DEFECT
// Hide warning also as it makes no sense since // the filesetmanifest attribute itself has been // hidden	WITHOUT_CLASSIFICATION	0.9999999352582184	WITHOUT_CLASSIFICATION	6.474178165549229E-8	DEFECT
// need to handle manifest as a special check	WITHOUT_CLASSIFICATION	0.9999999493528088	WITHOUT_CLASSIFICATION	5.064719124014589E-8	DEFECT
// if it doesn't exist, it will get created anyway, don't // bother with any up-to-date checks.	WITHOUT_CLASSIFICATION	0.9999999330408297	WITHOUT_CLASSIFICATION	6.695917033151484E-8	DEFECT
// no existing archive	WITHOUT_CLASSIFICATION	0.9999999949560108	WITHOUT_CLASSIFICATION	5.043989225267395E-9	DEFECT
// Ignore close exception	WITHOUT_CLASSIFICATION	0.999999947837176	WITHOUT_CLASSIFICATION	5.2162823900995837E-8	DEFECT
// we want to save this info if we are going to make another pass	WITHOUT_CLASSIFICATION	0.9999941617081253	WITHOUT_CLASSIFICATION	5.838291874745495E-6	DEFECT
// couldn't find it - must be on path	WITHOUT_CLASSIFICATION	0.9999873201577206	WITHOUT_CLASSIFICATION	1.2679842279447638E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999996763950936	WITHOUT_CLASSIFICATION	3.2360490638735057E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999996763950936	WITHOUT_CLASSIFICATION	3.2360490638735057E-7	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.99999795328422	WITHOUT_CLASSIFICATION	2.0467157800256684E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999998952218317	WITHOUT_CLASSIFICATION	1.0477816833988038E-7	DEFECT
// looks like nothing from META-INF should be added // and the check is not case insensitive. // see sun.misc.JarIndex	WITHOUT_CLASSIFICATION	0.9999992362971397	WITHOUT_CLASSIFICATION	7.63702860247497E-7	DEFECT
// name newline	WITHOUT_CLASSIFICATION	0.9999994951478812	WITHOUT_CLASSIFICATION	5.048521187282029E-7	DEFECT
// longest match comes first	WITHOUT_CLASSIFICATION	0.9999997230833501	WITHOUT_CLASSIFICATION	2.7691664989999166E-7	DEFECT
// META-INF would be skipped anyway, avoid index for // manifest-only jars.	WITHOUT_CLASSIFICATION	0.997810338007962	WITHOUT_CLASSIFICATION	0.0021896619920380436	DEFECT
// a file, not in the root // since the jar may be one without directory // entries, add the parent dir of this file as // well.	WITHOUT_CLASSIFICATION	0.9999999705448495	WITHOUT_CLASSIFICATION	2.9455150566605302E-8	DEFECT
/*protected*/	WITHOUT_CLASSIFICATION	0.9999416846793411	WITHOUT_CLASSIFICATION	5.831532065896967E-5	DEFECT
// if the target file is not there, then it can't be up-to-date	WITHOUT_CLASSIFICATION	0.9999997550250396	WITHOUT_CLASSIFICATION	2.4497496043451064E-7	DEFECT
// if the source file isn't there, throw an exception	WITHOUT_CLASSIFICATION	0.9999984007051942	WITHOUT_CLASSIFICATION	1.599294805777289E-6	DEFECT
// by default, messages are always displayed	WITHOUT_CLASSIFICATION	0.9999998531119028	WITHOUT_CLASSIFICATION	1.4688809723266896E-7	DEFECT
// need to keep the package private version for backwards compatibility	WITHOUT_CLASSIFICATION	0.9999996078440052	WITHOUT_CLASSIFICATION	3.9215599471911966E-7	DEFECT
// we must keep two lists since other classes may modify the // filesets Vector (it is package private) without us noticing	WITHOUT_CLASSIFICATION	0.9999999242803784	WITHOUT_CLASSIFICATION	7.571962160755063E-8	DEFECT
// add the main fileset to the list of filesets to process.	WITHOUT_CLASSIFICATION	0.9999999914395394	WITHOUT_CLASSIFICATION	8.560460700104792E-9	DEFECT
// check if tar is out of date with respect to each // fileset	WITHOUT_CLASSIFICATION	0.9999999604923827	WITHOUT_CLASSIFICATION	3.950761736405523E-8	DEFECT
// warn or GNU	WITHOUT_CLASSIFICATION	0.9999989953267365	WITHOUT_CLASSIFICATION	1.0046732634797472E-6	DEFECT
// don't add "" to the archive	WITHOUT_CLASSIFICATION	0.9999972508308449	WITHOUT_CLASSIFICATION	2.749169155096046E-6	DEFECT
// '/' is appended for compatibility with the zip task.	WITHOUT_CLASSIFICATION	0.9999984699148032	WITHOUT_CLASSIFICATION	1.5300851967549478E-6	DEFECT
// we would end up adding "" to the archive	WITHOUT_CLASSIFICATION	0.9999996177849084	WITHOUT_CLASSIFICATION	3.822150915241149E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999998952218317	WITHOUT_CLASSIFICATION	1.0477816833988038E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999998952218317	WITHOUT_CLASSIFICATION	1.0477816833988038E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999996763950936	WITHOUT_CLASSIFICATION	3.2360490638735057E-7	DEFECT
// permissible values for compression attribute	WITHOUT_CLASSIFICATION	0.999993250777756	WITHOUT_CLASSIFICATION	6.749222243936641E-6	DEFECT
// override permissions if set explicitly	WITHOUT_CLASSIFICATION	0.9999964722287625	WITHOUT_CLASSIFICATION	3.5277712374235767E-6	DEFECT
// only override permissions if set explicitly	WITHOUT_CLASSIFICATION	0.999988132361463	WITHOUT_CLASSIFICATION	1.1867638536917894E-5	DEFECT
// non-file resources	WITHOUT_CLASSIFICATION	0.9999999249048804	WITHOUT_CLASSIFICATION	7.509511963799164E-8	DEFECT
// non-file resources	WITHOUT_CLASSIFICATION	0.9999999249048804	WITHOUT_CLASSIFICATION	7.509511963799164E-8	DEFECT
//extend Comparison; retain for BC only	WITHOUT_CLASSIFICATION	0.9999930143752134	WITHOUT_CLASSIFICATION	6.985624786645476E-6	DEFECT
//when writing to the log, we'll see what's happening:	WITHOUT_CLASSIFICATION	0.9999997350476202	WITHOUT_CLASSIFICATION	2.649523797592636E-7	DEFECT
/*         * The initial version used DateFormat.SHORT for the         * time format, which ignores seconds.  If we want         * seconds as well, we need DateFormat.MEDIUM, which         * in turn would break all old build files.         *         * First try to parse with DateFormat.SHORT and if         * that fails with MEDIUM - throw an exception if both         * fail.         */	WITHOUT_CLASSIFICATION	0.9999999994601807	WITHOUT_CLASSIFICATION	5.398193716610414E-10	DEFECT
//only set if successful to this point:	WITHOUT_CLASSIFICATION	0.9999993806654056	WITHOUT_CLASSIFICATION	6.193345944516893E-7	DEFECT
// deal with the resource collections	WITHOUT_CLASSIFICATION	0.9999993148222097	WITHOUT_CLASSIFICATION	6.851777902970702E-7	DEFECT
// deal with filesets in a special way since the task // originally also used the directories and Union won't return // them.	WITHOUT_CLASSIFICATION	0.9999996159747112	WITHOUT_CLASSIFICATION	3.8402528883992966E-7	DEFECT
// use this to create file and deal with non-writable files	WITHOUT_CLASSIFICATION	0.9999999831918386	WITHOUT_CLASSIFICATION	1.6808161438514266E-8	DEFECT
// When we leave this block we can be sure all data is really // stored in main memory before the new threads start, the new // threads will for sure load the data from main memory. // // This probably is slightly paranoid.	WITHOUT_CLASSIFICATION	0.9995032276859054	WITHOUT_CLASSIFICATION	4.967723140946468E-4	DEFECT
// start any daemon threads	WITHOUT_CLASSIFICATION	0.9999704621342732	WITHOUT_CLASSIFICATION	2.9537865726777252E-5	DEFECT
// now run main threads in limited numbers... // start initial batch of threads	WITHOUT_CLASSIFICATION	0.9999986408410128	WITHOUT_CLASSIFICATION	1.359158987256508E-6	DEFECT
// start the timeout thread	WITHOUT_CLASSIFICATION	0.9999997423145972	WITHOUT_CLASSIFICATION	2.576854028243319E-7	DEFECT
// now find available running slots for the remaining threads	WITHOUT_CLASSIFICATION	0.9999999729739483	WITHOUT_CLASSIFICATION	2.7026051732396395E-8	DEFECT
// continue on outer while loop to get another // available slot	WITHOUT_CLASSIFICATION	0.9999999752147609	WITHOUT_CLASSIFICATION	2.4785239159043188E-8	DEFECT
// if we got here all slots in use, so sleep until // something happens	WITHOUT_CLASSIFICATION	0.9999991596987996	WITHOUT_CLASSIFICATION	8.403012004150417E-7	DEFECT
// doesn't java know interruptions are rude? // just pretend it didn't happen and go about out business. // sheesh!	WITHOUT_CLASSIFICATION	0.9999958754360316	WITHOUT_CLASSIFICATION	4.1245639683379585E-6	DEFECT
// are all threads finished	WITHOUT_CLASSIFICATION	0.9999974215336999	WITHOUT_CLASSIFICATION	2.5784663001845953E-6	DEFECT
// who would interrupt me at a time like this?	WITHOUT_CLASSIFICATION	0.9999991558130396	WITHOUT_CLASSIFICATION	8.441869604586606E-7	DEFECT
// now did any of the threads throw an exception	WITHOUT_CLASSIFICATION	0.9999709662987472	WITHOUT_CLASSIFICATION	2.9033701252858568E-5	DEFECT
// return a bogus number	WITHOUT_CLASSIFICATION	0.9999998003519588	WITHOUT_CLASSIFICATION	1.996480412226014E-7	DEFECT
// Should be safe to parse	WITHOUT_CLASSIFICATION	0.9999693741746073	WITHOUT_CLASSIFICATION	3.062582539278295E-5	DEFECT
// Check name is "antlib"	WITHOUT_CLASSIFICATION	0.9999997950654264	WITHOUT_CLASSIFICATION	2.0493457358372054E-7	DEFECT
//include locally for screening purposes	WITHOUT_CLASSIFICATION	0.9999997978695869	WITHOUT_CLASSIFICATION	2.0213041304604337E-7	DEFECT
// try to find the executable	WITHOUT_CLASSIFICATION	0.9999998713039626	WITHOUT_CLASSIFICATION	1.2869603736348524E-7	DEFECT
// now try to resolve against the dir if given	WITHOUT_CLASSIFICATION	0.9999999856564341	WITHOUT_CLASSIFICATION	1.434356580318917E-8	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999996763950936	WITHOUT_CLASSIFICATION	3.2360490638735057E-7	DEFECT
// throw further	WITHOUT_CLASSIFICATION	0.9999960444167939	WITHOUT_CLASSIFICATION	3.955583206130953E-6	DEFECT
// only the first build exception is reported	WITHOUT_CLASSIFICATION	0.9999961623756793	WITHOUT_CLASSIFICATION	3.837624320703018E-6	DEFECT
//include locally for screening purposes	WITHOUT_CLASSIFICATION	0.9999997978695869	WITHOUT_CLASSIFICATION	2.0213041304604337E-7	DEFECT
// mustSearchPath is false, or no PATH or not found - keep our // fingers crossed.	WITHOUT_CLASSIFICATION	0.9999899808668327	WITHOUT_CLASSIFICATION	1.0019133167407868E-5	DEFECT
// Quick fail if this is not a valid OS for the command	WITHOUT_CLASSIFICATION	0.999744188185359	WITHOUT_CLASSIFICATION	2.558118146408781E-4	DEFECT
// possibly altered in prepareExec	WITHOUT_CLASSIFICATION	0.9999960397181786	WITHOUT_CLASSIFICATION	3.960281821293485E-6	DEFECT
//hand osfamily off to Os class, if set	WITHOUT_CLASSIFICATION	0.9999799888688834	WITHOUT_CLASSIFICATION	2.001113111659902E-5	DEFECT
// this command will be executed only on the specified OS	WITHOUT_CLASSIFICATION	0.9984819374281146	WITHOUT_CLASSIFICATION	0.0015180625718853899	DEFECT
// default directory to the project's base directory	WITHOUT_CLASSIFICATION	0.9999998647416132	WITHOUT_CLASSIFICATION	1.3525838675625868E-7	DEFECT
// assume the worst	WITHOUT_CLASSIFICATION	0.999999927916579	WITHOUT_CLASSIFICATION	7.208342099722723E-8	DEFECT
//test for and handle a forced process death	WITHOUT_CLASSIFICATION	0.9999999986501872	WITHOUT_CLASSIFICATION	1.349812875226523E-9	DEFECT
// show the command	WITHOUT_CLASSIFICATION	0.9999901542171324	WITHOUT_CLASSIFICATION	9.845782867484421E-6	DEFECT
// close the output file if required	WITHOUT_CLASSIFICATION	0.9999999314195753	WITHOUT_CLASSIFICATION	6.858042459970862E-8	DEFECT
// Same as regular <copy> task... see at end-of-file!	WITHOUT_CLASSIFICATION	0.9999920139674061	WITHOUT_CLASSIFICATION	7.98603259384241E-6	DEFECT
// Override Task#init	WITHOUT_CLASSIFICATION	0.9999999734468761	WITHOUT_CLASSIFICATION	2.655312398492533E-8	DEFECT
// Instantiate it	WITHOUT_CLASSIFICATION	0.9999990633702436	WITHOUT_CLASSIFICATION	9.366297564300868E-7	DEFECT
// Default config of <mycopy> for our purposes.	WITHOUT_CLASSIFICATION	0.9999999829133216	WITHOUT_CLASSIFICATION	1.7086678351716322E-8	DEFECT
// Override Task#execute	WITHOUT_CLASSIFICATION	0.9999999762491004	WITHOUT_CLASSIFICATION	2.3750899479842242E-8	DEFECT
// The destination of the files to copy	WITHOUT_CLASSIFICATION	0.9999994104551356	WITHOUT_CLASSIFICATION	5.895448644137944E-7	DEFECT
// The complete list of files to copy	WITHOUT_CLASSIFICATION	0.9999952984056947	WITHOUT_CLASSIFICATION	4.701594305263085E-6	DEFECT
// Copy all the necessary out-of-date files	WITHOUT_CLASSIFICATION	0.9999999360390879	WITHOUT_CLASSIFICATION	6.396091208603345E-8	DEFECT
// Do we need to perform further processing?	WITHOUT_CLASSIFICATION	0.9999999745905465	WITHOUT_CLASSIFICATION	2.5409453528149813E-8	DEFECT
// nope ;-)	WITHOUT_CLASSIFICATION	0.9999995312557706	WITHOUT_CLASSIFICATION	4.6874422939630897E-7	DEFECT
// Get rid of all files not listed in the source filesets.	WITHOUT_CLASSIFICATION	0.9999992470645159	WITHOUT_CLASSIFICATION	7.529354840836075E-7	DEFECT
// Get rid of empty directories on the destination side	WITHOUT_CLASSIFICATION	0.9999999871936365	WITHOUT_CLASSIFICATION	1.2806363440436975E-8	DEFECT
// want to keep toDir itself	WITHOUT_CLASSIFICATION	0.9999999563364835	WITHOUT_CLASSIFICATION	4.3663516556885984E-8	DEFECT
// ds returns the directories in lexicographic order. // iterating through the array backwards means we are deleting // leaves before their parent nodes - thus making sure (well, // more likely) that the directories are empty when we try to // delete them.	WITHOUT_CLASSIFICATION	0.9999999963261017	WITHOUT_CLASSIFICATION	3.673898271744605E-9	DEFECT
// Test here again to avoid method call for non-directories!	WITHOUT_CLASSIFICATION	0.9999995887558731	WITHOUT_CLASSIFICATION	4.112441268694525E-7	DEFECT
// must match the default value of Ant#inheritAll	WITHOUT_CLASSIFICATION	0.999999967401661	WITHOUT_CLASSIFICATION	3.2598339038306414E-8	DEFECT
// must match the default value of Ant#inheritRefs	WITHOUT_CLASSIFICATION	0.9999999887649019	WITHOUT_CLASSIFICATION	1.1235098150630495E-8	DEFECT
/*<TargetElement>*/	WITHOUT_CLASSIFICATION	0.9999988689461907	WITHOUT_CLASSIFICATION	1.131053809295013E-6	DEFECT
// check if one of the builds failed in keep going mode	WITHOUT_CLASSIFICATION	0.9999997257014525	WITHOUT_CLASSIFICATION	2.7429854751184516E-7	DEFECT
//     REVISIT: Defaults to the target name that contains this task if not specified.	WITHOUT_CLASSIFICATION	0.99999990529906	WITHOUT_CLASSIFICATION	9.470094000551441E-8	DEFECT
// END class SubAnt	WITHOUT_CLASSIFICATION	0.9999966332116458	WITHOUT_CLASSIFICATION	3.366788354147315E-6	DEFECT
// Child elements.	WITHOUT_CLASSIFICATION	0.9999999225270869	WITHOUT_CLASSIFICATION	7.747291313990418E-8	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999997408296413	WITHOUT_CLASSIFICATION	2.5917035868139013E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999996763950936	WITHOUT_CLASSIFICATION	3.2360490638735057E-7	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.99999795328422	WITHOUT_CLASSIFICATION	2.0467157800256684E-6	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.99999795328422	WITHOUT_CLASSIFICATION	2.0467157800256684E-6	DEFECT
// Empty	WITHOUT_CLASSIFICATION	0.9999910788387655	WITHOUT_CLASSIFICATION	8.921161234501107E-6	DEFECT
// this command will be executed only on the specified OS	WITHOUT_CLASSIFICATION	0.9984819374281146	WITHOUT_CLASSIFICATION	0.0015180625718853899	DEFECT
// default directory to the project's base directory	WITHOUT_CLASSIFICATION	0.9999998647416132	WITHOUT_CLASSIFICATION	1.3525838675625868E-7	DEFECT
// assume the worst	WITHOUT_CLASSIFICATION	0.999999927916579	WITHOUT_CLASSIFICATION	7.208342099722723E-8	DEFECT
// show the command	WITHOUT_CLASSIFICATION	0.9999901542171324	WITHOUT_CLASSIFICATION	9.845782867484421E-6	DEFECT
// close the output file if required	WITHOUT_CLASSIFICATION	0.9999999314195753	WITHOUT_CLASSIFICATION	6.858042459970862E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999998952218317	WITHOUT_CLASSIFICATION	1.0477816833988038E-7	DEFECT
// This directory may have become empty... // We need to re-query its children list!	WITHOUT_CLASSIFICATION	0.9875042487991983	WITHOUT_CLASSIFICATION	0.012495751200801774	DEFECT
// // Various copy attributes/subelements of <copy> passed thru to <mycopy> //	WITHOUT_CLASSIFICATION	0.9999999975972187	WITHOUT_CLASSIFICATION	2.402781336318114E-9	DEFECT
// List of files that must be copied, irrelevant from the // fact that they are newer or not than the destination.	WITHOUT_CLASSIFICATION	0.9999999917778765	WITHOUT_CLASSIFICATION	8.222123533426255E-9	DEFECT
// cf. NB #47191	WITHOUT_CLASSIFICATION	0.9999988544159388	WITHOUT_CLASSIFICATION	1.1455840612100932E-6	DEFECT
// Should work whether or not redirector.inputStream == null:	WITHOUT_CLASSIFICATION	0.9994573032599426	WITHOUT_CLASSIFICATION	5.426967400574221E-4	DEFECT
// #24918: send standard input to the process by default.	WITHOUT_CLASSIFICATION	0.99999615841017	WITHOUT_CLASSIFICATION	3.841589829979074E-6	DEFECT
// test if os match	WITHOUT_CLASSIFICATION	0.9999999483643377	WITHOUT_CLASSIFICATION	5.163566240231323E-8	DEFECT
// exec command on system runtime	WITHOUT_CLASSIFICATION	0.9998709113678195	WITHOUT_CLASSIFICATION	1.290886321805035E-4	DEFECT
// copy input and error to the output stream	WITHOUT_CLASSIFICATION	0.9999962815486615	WITHOUT_CLASSIFICATION	3.7184513385434614E-6	DEFECT
// starts pumping away the generated output/error	WITHOUT_CLASSIFICATION	0.999999707604629	WITHOUT_CLASSIFICATION	2.923953710162679E-7	DEFECT
// Wait for everything to finish	WITHOUT_CLASSIFICATION	0.9999994260375641	WITHOUT_CLASSIFICATION	5.739624359850068E-7	DEFECT
// check its exit value	WITHOUT_CLASSIFICATION	0.9999996929787033	WITHOUT_CLASSIFICATION	3.070212967453783E-7	DEFECT
// Inner class for continually pumping the input stream during // Process's runtime.	WITHOUT_CLASSIFICATION	0.9999505099604517	WITHOUT_CLASSIFICATION	4.949003954828436E-5	DEFECT
// The size of buffers to be used	WITHOUT_CLASSIFICATION	0.999991530456853	WITHOUT_CLASSIFICATION	8.46954314711815E-6	DEFECT
// Attributes.	WITHOUT_CLASSIFICATION	0.9999998452259703	WITHOUT_CLASSIFICATION	1.54774029768224E-7	DEFECT
// Attribute setters.	WITHOUT_CLASSIFICATION	0.9999996756175472	WITHOUT_CLASSIFICATION	3.2438245280477865E-7	DEFECT
// Nested element creators.	WITHOUT_CLASSIFICATION	0.9999999975784868	WITHOUT_CLASSIFICATION	2.4215132724791043E-9	DEFECT
// treat empty nested text as no text	WITHOUT_CLASSIFICATION	0.9999999270354818	WITHOUT_CLASSIFICATION	7.296451819605129E-8	DEFECT
// if binary check if incompatible attributes are used	WITHOUT_CLASSIFICATION	0.9999999929324207	WITHOUT_CLASSIFICATION	7.067579229440433E-9	DEFECT
// Sanity check our inputs.	WITHOUT_CLASSIFICATION	0.9999999260617825	WITHOUT_CLASSIFICATION	7.393821762719541E-8	DEFECT
// Nothing to concatenate!	WITHOUT_CLASSIFICATION	0.9999997250950691	WITHOUT_CLASSIFICATION	2.749049310267553E-7	DEFECT
// no need to do anything	WITHOUT_CLASSIFICATION	0.999998450570054	WITHOUT_CLASSIFICATION	1.5494299460075387E-6	DEFECT
// Log using WARN so it displays in 'quiet' mode.	WITHOUT_CLASSIFICATION	0.9999960077843236	WITHOUT_CLASSIFICATION	3.992215676352082E-6	DEFECT
// ensure that the parent dir of dest file exists	WITHOUT_CLASSIFICATION	0.9999997604056381	WITHOUT_CLASSIFICATION	2.3959436189252484E-7	DEFECT
// non-existing files are not allowed	WITHOUT_CLASSIFICATION	0.999999356373816	WITHOUT_CLASSIFICATION	6.436261839843971E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999996763950936	WITHOUT_CLASSIFICATION	3.2360490638735057E-7	DEFECT
// Create a ZipFileSet for this file, and pass it up.	WITHOUT_CLASSIFICATION	0.9999989454840138	WITHOUT_CLASSIFICATION	1.054515986100799E-6	DEFECT
// We just set the prefix for this fileset, and pass it up.	WITHOUT_CLASSIFICATION	0.9999874730569147	WITHOUT_CLASSIFICATION	1.2526943085371082E-5	DEFECT
// by default, messages are always displayed	WITHOUT_CLASSIFICATION	0.9999998531119028	WITHOUT_CLASSIFICATION	1.4688809723266896E-7	DEFECT
// close the output file if required	WITHOUT_CLASSIFICATION	0.9999999314195753	WITHOUT_CLASSIFICATION	6.858042459970862E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999998952218317	WITHOUT_CLASSIFICATION	1.0477816833988038E-7	DEFECT
// Initialize to the size of the first text fragment, with // the hopes that it's the only one.	WITHOUT_CLASSIFICATION	0.9999997895889594	WITHOUT_CLASSIFICATION	2.1041104065291047E-7	DEFECT
// Append the fragment -- we defer property replacement until // later just in case we get a partial property in a fragment.	WITHOUT_CLASSIFICATION	0.9999660411173571	WITHOUT_CLASSIFICATION	3.3958882642895224E-5	DEFECT
// If using resources, disallow inline text. This is similar to // using GNU 'cat' with file arguments -- stdin is simply // ignored.	WITHOUT_CLASSIFICATION	0.9999999996020807	WITHOUT_CLASSIFICATION	3.979192736495369E-10	DEFECT
/*package*/	WITHOUT_CLASSIFICATION	0.9999862822275946	WITHOUT_CLASSIFICATION	1.371777240536195E-5	DEFECT
/*package*/	WITHOUT_CLASSIFICATION	0.9999862822275946	WITHOUT_CLASSIFICATION	1.371777240536195E-5	DEFECT
// If the file being added is WEB-INF/web.xml, we warn if it's // not the one specified in the "webxml" attribute - or if // it's being added twice, meaning the same file is specified // by the "webxml" attribute and in a <fileset> element.	WITHOUT_CLASSIFICATION	0.9999999957047958	WITHOUT_CLASSIFICATION	4.2952042618814705E-9	DEFECT
//by default, we add the file.	WITHOUT_CLASSIFICATION	0.9999996849601861	WITHOUT_CLASSIFICATION	3.1503981387984034E-7	DEFECT
//a web.xml file was found. See if it is a duplicate or not	WITHOUT_CLASSIFICATION	0.9999999461263672	WITHOUT_CLASSIFICATION	5.387363288906829E-8	DEFECT
//a second web.xml file, so skip it	WITHOUT_CLASSIFICATION	0.999999511132875	WITHOUT_CLASSIFICATION	4.888671249174011E-7	DEFECT
//check to see if we warn or not	WITHOUT_CLASSIFICATION	0.999997552306739	WITHOUT_CLASSIFICATION	2.447693261068398E-6	DEFECT
//no added file, yet	WITHOUT_CLASSIFICATION	0.9999335497287729	WITHOUT_CLASSIFICATION	6.645027122711343E-5	DEFECT
//there is no web.xml file, so add it	WITHOUT_CLASSIFICATION	0.9999999872744177	WITHOUT_CLASSIFICATION	1.2725582255614302E-8	DEFECT
//and remember that we did	WITHOUT_CLASSIFICATION	0.9999905013669174	WITHOUT_CLASSIFICATION	9.498633082655407E-6	DEFECT
//validation	WITHOUT_CLASSIFICATION	0.9999651793063286	WITHOUT_CLASSIFICATION	3.482069367142847E-5	DEFECT
//discard most of really big resources	WITHOUT_CLASSIFICATION	0.999999702466647	WITHOUT_CLASSIFICATION	2.9753335292464655E-7	DEFECT
//open up the resource	WITHOUT_CLASSIFICATION	0.9999993433754718	WITHOUT_CLASSIFICATION	6.566245280772913E-7	DEFECT
// impossible since *our* processLine doesn't throw an IOException	WITHOUT_CLASSIFICATION	0.9999967120455858	WITHOUT_CLASSIFICATION	3.287954414137066E-6	DEFECT
// There have been reports that 300 files could be compiled // so 250 is a conservative approach	WITHOUT_CLASSIFICATION	0.9998979533364074	WITHOUT_CLASSIFICATION	1.0204666359261415E-4	DEFECT
// We assume, that everything jikes writes goes to // standard output, not to standard error. The option // -Xstdout that is given to Jikes in Javac.doJikesCompile() // should guarantee this. At least I hope so. :)	WITHOUT_CLASSIFICATION	0.9998081562741342	WITHOUT_CLASSIFICATION	1.9184372586579008E-4	DEFECT
//if we have a RedirectorElement, return a decoy	WITHOUT_CLASSIFICATION	0.999998868599356	WITHOUT_CLASSIFICATION	1.131400643971479E-6	DEFECT
// 0 --> srcIndex	WITHOUT_CLASSIFICATION	0.9999994102514927	WITHOUT_CLASSIFICATION	5.897485073601024E-7	DEFECT
// srcIndex --> targetIndex	WITHOUT_CLASSIFICATION	0.9999997016308689	WITHOUT_CLASSIFICATION	2.9836913110328033E-7	DEFECT
// targets are already absolute file names	WITHOUT_CLASSIFICATION	0.9999999921001238	WITHOUT_CLASSIFICATION	7.899876200036826E-9	DEFECT
// targetIndex --> end	WITHOUT_CLASSIFICATION	0.9999985121054648	WITHOUT_CLASSIFICATION	1.48789453527752E-6	DEFECT
// 0 --> targetIndex	WITHOUT_CLASSIFICATION	0.9999992836110824	WITHOUT_CLASSIFICATION	7.163889176418323E-7	DEFECT
// 0 --> srcIndex	WITHOUT_CLASSIFICATION	0.9999994102514927	WITHOUT_CLASSIFICATION	5.897485073601024E-7	DEFECT
// contains AbstractFileSet // (both DirSet and FileSet)	WITHOUT_CLASSIFICATION	0.9999997875253933	WITHOUT_CLASSIFICATION	2.124746066411058E-7	DEFECT
// need to reset the stream handler to restart // reading of pipes; // go ahead and do it always w/ nested redirectors	WITHOUT_CLASSIFICATION	0.9999998783872072	WITHOUT_CLASSIFICATION	1.2161279283091942E-7	DEFECT
// need to reset the stream handler to restart // reading of pipes; // go ahead and do it always w/ nested redirectors	WITHOUT_CLASSIFICATION	0.9999998783872072	WITHOUT_CLASSIFICATION	1.2161279283091942E-7	DEFECT
// targets are already absolute file names	WITHOUT_CLASSIFICATION	0.9999999921001238	WITHOUT_CLASSIFICATION	7.899876200036826E-9	DEFECT
// targetIndex --> srcIndex	WITHOUT_CLASSIFICATION	0.9999995053031828	WITHOUT_CLASSIFICATION	4.946968171242325E-7	DEFECT
// srcIndex --> end	WITHOUT_CLASSIFICATION	0.9999995128579532	WITHOUT_CLASSIFICATION	4.871420468943687E-7	DEFECT
// srcIndex --> end	WITHOUT_CLASSIFICATION	0.9999995128579532	WITHOUT_CLASSIFICATION	4.871420468943687E-7	DEFECT
// no targetFilePos	WITHOUT_CLASSIFICATION	0.9999999898020384	WITHOUT_CLASSIFICATION	1.019796163825349E-8	DEFECT
// fill in source file names	WITHOUT_CLASSIFICATION	0.9999998845354791	WITHOUT_CLASSIFICATION	1.154645210457942E-7	DEFECT
/* this is skipEmpty == false */	WITHOUT_CLASSIFICATION	0.9999347586979375	WITHOUT_CLASSIFICATION	6.5241302062503E-5	DEFECT
//if there is a new priority, and it is different, change it	WITHOUT_CLASSIFICATION	0.9999992816219605	WITHOUT_CLASSIFICATION	7.183780395432741E-7	DEFECT
//catch permissions denial and keep going	WITHOUT_CLASSIFICATION	0.9999998948492574	WITHOUT_CLASSIFICATION	1.0515074254513357E-7	DEFECT
//-- XSLTLiaison	WITHOUT_CLASSIFICATION	0.9999965235567997	WITHOUT_CLASSIFICATION	3.476443200280392E-6	DEFECT
// Write the properties file back out	WITHOUT_CLASSIFICATION	0.999998297250982	WITHOUT_CLASSIFICATION	1.7027490180901723E-6	DEFECT
//Finally set the property	WITHOUT_CLASSIFICATION	0.9999462165804242	WITHOUT_CLASSIFICATION	5.378341957579879E-5	DEFECT
// Try parsing the line into an integer.	WITHOUT_CLASSIFICATION	0.9999961654611172	WITHOUT_CLASSIFICATION	3.834538882786595E-6	DEFECT
//-- XSLTProcess	WITHOUT_CLASSIFICATION	0.999998101221115	WITHOUT_CLASSIFICATION	1.8987788849362327E-6	DEFECT
// check if liaison wants to log errors using us as logger	WITHOUT_CLASSIFICATION	0.9999999880439447	WITHOUT_CLASSIFICATION	1.1956055131479004E-8	DEFECT
// If we enter here, it means that the stylesheet is supplied // via style attribute	WITHOUT_CLASSIFICATION	0.9999989841849711	WITHOUT_CLASSIFICATION	1.0158150288003157E-6	DEFECT
/*                     * shouldn't throw out deprecation warnings before we know,                     * the wrong version has been used.                     */	WITHOUT_CLASSIFICATION	0.9995449460020753	WITHOUT_CLASSIFICATION	4.5505399792466756E-4	DEFECT
// if we have an in file and out then process them	WITHOUT_CLASSIFICATION	0.9999999021349402	WITHOUT_CLASSIFICATION	9.786505982899145E-8	DEFECT
//-- make sure destination directory exists...	WITHOUT_CLASSIFICATION	0.999983988331471	WITHOUT_CLASSIFICATION	1.6011668529102617E-5	DEFECT
// Process all the files marked for styling	WITHOUT_CLASSIFICATION	0.999999877770527	WITHOUT_CLASSIFICATION	1.222294729596278E-7	DEFECT
// Process all the directories marked for styling	WITHOUT_CLASSIFICATION	0.9999999671866074	WITHOUT_CLASSIFICATION	3.281339248118679E-8	DEFECT
// only resource collections, there better be some	WITHOUT_CLASSIFICATION	0.999999188334921	WITHOUT_CLASSIFICATION	8.116650789481836E-7	DEFECT
//anything else is a classname	WITHOUT_CLASSIFICATION	0.9999774742810089	WITHOUT_CLASSIFICATION	2.2525718991039515E-5	DEFECT
//-- processXML	WITHOUT_CLASSIFICATION	0.9999962600809523	WITHOUT_CLASSIFICATION	3.7399190476359334E-6	DEFECT
// Param	WITHOUT_CLASSIFICATION	0.9999997950627503	WITHOUT_CLASSIFICATION	2.0493724981865822E-7	DEFECT
// New env var...append the previous one if we have it.	WITHOUT_CLASSIFICATION	0.9999999499721841	WITHOUT_CLASSIFICATION	5.002781592397413E-8	DEFECT
// Mac	WITHOUT_CLASSIFICATION	0.9999992182883464	WITHOUT_CLASSIFICATION	7.817116537155822E-7	DEFECT
//validation	WITHOUT_CLASSIFICATION	0.9999651793063286	WITHOUT_CLASSIFICATION	3.482069367142847E-5	DEFECT
// If failed to process document, must delete target document, // or it will not attempt to process it the second time	WITHOUT_CLASSIFICATION	0.9999991113721309	WITHOUT_CLASSIFICATION	8.886278690601477E-7	DEFECT
// if processor wasn't specified, see if TraX is available.  If not, // default it to xalan, depending on which is in the classpath	WITHOUT_CLASSIFICATION	0.9999999909619807	WITHOUT_CLASSIFICATION	9.038019250993007E-9	DEFECT
// We call liason.configure() and then liaison.setStylesheet() // so that the internal variables of liaison can be set up	WITHOUT_CLASSIFICATION	0.9999999890669358	WITHOUT_CLASSIFICATION	1.0933064303368322E-8	DEFECT
// If we are here we can set the stylesheet as a // resource	WITHOUT_CLASSIFICATION	0.9999983164292595	WITHOUT_CLASSIFICATION	1.6835707405603708E-6	DEFECT
// If we are here we cannot set the stylesheet as // a resource, but we can set it as a file. So, // we make an attempt to get it as a file	WITHOUT_CLASSIFICATION	0.9999785256938303	WITHOUT_CLASSIFICATION	2.1474306169731537E-5	DEFECT
// Give always a slash as file separator, so the stylesheet could be sure about that // Use '.' so a dir+"/"+name would not result in an absolute path	WITHOUT_CLASSIFICATION	0.9999998240221164	WITHOUT_CLASSIFICATION	1.759778836585883E-7	DEFECT
// only 'name' and 'value' exist.	WITHOUT_CLASSIFICATION	0.9999925205490573	WITHOUT_CLASSIFICATION	7.4794509426658994E-6	DEFECT
// a value must be of a given type // say boolean|integer|string that are mostly used.	WITHOUT_CLASSIFICATION	0.9999999898422361	WITHOUT_CLASSIFICATION	1.0157763849554352E-8	DEFECT
// -- class Attribute	WITHOUT_CLASSIFICATION	0.999999572288396	WITHOUT_CLASSIFICATION	4.277116040704816E-7	DEFECT
// -- class Factory	WITHOUT_CLASSIFICATION	0.9999981267292527	WITHOUT_CLASSIFICATION	1.873270747309494E-6	DEFECT
// error message strings	WITHOUT_CLASSIFICATION	0.9999973736608934	WITHOUT_CLASSIFICATION	2.626339106719251E-6	DEFECT
//at this point there is one trailing space to remove, if the list is not empty.	WITHOUT_CLASSIFICATION	0.9999998071196304	WITHOUT_CLASSIFICATION	1.9288036946804675E-7	DEFECT
//now exit here if the property is already set	WITHOUT_CLASSIFICATION	0.9999912903674537	WITHOUT_CLASSIFICATION	8.709632546300489E-6	DEFECT
//and add any files if also defined	WITHOUT_CLASSIFICATION	0.999993861501242	WITHOUT_CLASSIFICATION	6.138498757954497E-6	DEFECT
//add path URLs	WITHOUT_CLASSIFICATION	0.9999996367875573	WITHOUT_CLASSIFICATION	3.6321244258889754E-7	DEFECT
//create the URL //ant equivalent of  fileToConvert.toURI().toURL().toExternalForm();	WITHOUT_CLASSIFICATION	0.9999999924737449	WITHOUT_CLASSIFICATION	7.526255081078982E-9	DEFECT
// if we run into a timeout, the run-away thread shall not // make the VM run forever - if no timeout occurs, Ant's // main thread will still be there to let the new thread // finish	WITHOUT_CLASSIFICATION	0.9999999736667795	WITHOUT_CLASSIFICATION	2.6333220475534907E-8	DEFECT
//Use the VM launcher instead of shell launcher on VMS	WITHOUT_CLASSIFICATION	0.9999875523835698	WITHOUT_CLASSIFICATION	1.2447616430098533E-5	DEFECT
/*     * Builds a command launcher for the OS and JVM we are running under.     */	WITHOUT_CLASSIFICATION	0.9999071092872539	WITHOUT_CLASSIFICATION	9.289071274620436E-5	DEFECT
// Try using a JDK 1.3 launcher	WITHOUT_CLASSIFICATION	0.9999979016683263	WITHOUT_CLASSIFICATION	2.098331673793463E-6	DEFECT
// Ignore and keep trying	WITHOUT_CLASSIFICATION	0.9999999274913944	WITHOUT_CLASSIFICATION	7.250860557475067E-8	DEFECT
// OS/2	WITHOUT_CLASSIFICATION	0.9999972139882963	WITHOUT_CLASSIFICATION	2.7860117036246236E-6	DEFECT
// Windows XP/2000/NT	WITHOUT_CLASSIFICATION	0.9997604607384444	WITHOUT_CLASSIFICATION	2.395392615556739E-4	DEFECT
// Windows 98/95 - need to use an auxiliary script	WITHOUT_CLASSIFICATION	0.9998699179290332	WITHOUT_CLASSIFICATION	1.3008207096684238E-4	DEFECT
// OpenVMS	WITHOUT_CLASSIFICATION	0.9999973472826045	WITHOUT_CLASSIFICATION	2.6527173954990355E-6	DEFECT
// Generic	WITHOUT_CLASSIFICATION	0.9999995686400481	WITHOUT_CLASSIFICATION	4.3135995189070083E-7	DEFECT
// Make sure we do not recurse forever	WITHOUT_CLASSIFICATION	0.9999999759462544	WITHOUT_CLASSIFICATION	2.405374547746449E-8	DEFECT
// Just try to use what we got	WITHOUT_CLASSIFICATION	0.9999991366041209	WITHOUT_CLASSIFICATION	8.633958791276243E-7	DEFECT
// Since we "look ahead" before adding, there's one last env var.	WITHOUT_CLASSIFICATION	0.9999998841559055	WITHOUT_CLASSIFICATION	1.1584409455780924E-7	DEFECT
// Just try to see how much we got	WITHOUT_CLASSIFICATION	0.9999982655403292	WITHOUT_CLASSIFICATION	1.7344596708105668E-6	DEFECT
// OS/2 - use same mechanism as Windows 2000	WITHOUT_CLASSIFICATION	0.999985688194105	WITHOUT_CLASSIFICATION	1.431180589500791E-5	DEFECT
// Determine if we're running under XP/2000/NT or 98/95	WITHOUT_CLASSIFICATION	0.9999995712102777	WITHOUT_CLASSIFICATION	4.28789722389926E-7	DEFECT
// Windows 98/95	WITHOUT_CLASSIFICATION	0.9999430325595287	WITHOUT_CLASSIFICATION	5.696744047135334E-5	DEFECT
// Windows XP/2000/NT/2003	WITHOUT_CLASSIFICATION	0.9994261226188135	WITHOUT_CLASSIFICATION	5.738773811866392E-4	DEFECT
// On most systems one could use: /bin/sh -c env	WITHOUT_CLASSIFICATION	0.9999463592864851	WITHOUT_CLASSIFICATION	5.364071351495461E-5	DEFECT
// Some systems have /bin/env, others /usr/bin/env, just try	WITHOUT_CLASSIFICATION	0.9999999113542444	WITHOUT_CLASSIFICATION	8.864575571500727E-8	DEFECT
// rely on PATH	WITHOUT_CLASSIFICATION	0.9999541113568422	WITHOUT_CLASSIFICATION	4.588864315773569E-5	DEFECT
// rely on PATH	WITHOUT_CLASSIFICATION	0.9999541113568422	WITHOUT_CLASSIFICATION	4.588864315773569E-5	DEFECT
//noop default encoding used	WITHOUT_CLASSIFICATION	0.9999999966015236	WITHOUT_CLASSIFICATION	3.398476464693922E-9	DEFECT
//By default, use the shell launcher for VMS //	WITHOUT_CLASSIFICATION	0.9999994553383089	WITHOUT_CLASSIFICATION	5.446616911055572E-7	DEFECT
// add the process to the list of those to destroy if the VM exits //	WITHOUT_CLASSIFICATION	0.9999999974681026	WITHOUT_CLASSIFICATION	2.5318973848353606E-9	DEFECT
// #31928: forcibly kill it before continuing.	WITHOUT_CLASSIFICATION	0.9994967481302037	WITHOUT_CLASSIFICATION	5.032518697962872E-4	DEFECT
// remove the process to the list of those to destroy if // the VM exits //	WITHOUT_CLASSIFICATION	0.9999999646345182	WITHOUT_CLASSIFICATION	3.53654817319371E-8	DEFECT
//on openvms even exit value signals failure; // for other platforms nonzero exit value signals failure	WITHOUT_CLASSIFICATION	0.9999995580604987	WITHOUT_CLASSIFICATION	4.4193950125606684E-7	DEFECT
// Get key including "="	WITHOUT_CLASSIFICATION	0.9999982651738322	WITHOUT_CLASSIFICATION	1.7348261678043137E-6	DEFECT
// Nb: using default locale as key is a env name	WITHOUT_CLASSIFICATION	0.9999993696597548	WITHOUT_CLASSIFICATION	6.303402451118639E-7	DEFECT
// Find the key in the current enviroment copy // and remove it.	WITHOUT_CLASSIFICATION	0.9999807335653966	WITHOUT_CLASSIFICATION	1.9266434603351664E-5	DEFECT
// Use the original casiness of the key	WITHOUT_CLASSIFICATION	0.9999997199848009	WITHOUT_CLASSIFICATION	2.800151991673623E-7	DEFECT
// Add the key to the enviromnent copy	WITHOUT_CLASSIFICATION	0.9999996312571393	WITHOUT_CLASSIFICATION	3.6874286074999516E-7	DEFECT
// parse the VMS logicals into required format ("VAR=VAL[,VAL2]")	WITHOUT_CLASSIFICATION	0.9999918331713786	WITHOUT_CLASSIFICATION	8.166828621441993E-6	DEFECT
// further equivalence name of previous logical	WITHOUT_CLASSIFICATION	0.99999999813704	WITHOUT_CLASSIFICATION	1.862959930502621E-9	DEFECT
// new logical?	WITHOUT_CLASSIFICATION	0.9999981528629681	WITHOUT_CLASSIFICATION	1.8471370318370456E-6	DEFECT
// already got this logical from a higher order table	WITHOUT_CLASSIFICATION	0.9999999732483187	WITHOUT_CLASSIFICATION	2.6751681246578568E-8	DEFECT
/* the arguments: */	WITHOUT_CLASSIFICATION	0.999998778409922	WITHOUT_CLASSIFICATION	1.2215900779071784E-6	DEFECT
// IllegalAccess, IllegalArgument, ClassCast	WITHOUT_CLASSIFICATION	0.9999999785978574	WITHOUT_CLASSIFICATION	2.140214256985353E-8	DEFECT
// Locate the auxiliary script	WITHOUT_CLASSIFICATION	0.9999999675129012	WITHOUT_CLASSIFICATION	3.2487098809008814E-8	DEFECT
// Build the command	WITHOUT_CLASSIFICATION	0.9998101757892172	WITHOUT_CLASSIFICATION	1.89824210782882E-4	DEFECT
// add the environment as logicals to the DCL script	WITHOUT_CLASSIFICATION	0.9999995300174233	WITHOUT_CLASSIFICATION	4.6998257680357164E-7	DEFECT
//empty	WITHOUT_CLASSIFICATION	0.9999626752415091	WITHOUT_CLASSIFICATION	3.732475849096322E-5	DEFECT
//empty	WITHOUT_CLASSIFICATION	0.9999626752415091	WITHOUT_CLASSIFICATION	3.732475849096322E-5	DEFECT
// Locate method Runtime.exec(String[] cmdarray, //                            String[] envp, File dir)	WITHOUT_CLASSIFICATION	0.9999999490141248	WITHOUT_CLASSIFICATION	5.0985875136071754E-8	DEFECT
// Use cmd.exe to change to the specified drive and // directory before running the command	WITHOUT_CLASSIFICATION	0.9999999967463458	WITHOUT_CLASSIFICATION	3.25365418166598E-9	DEFECT
// Use cmd.exe to change to the specified directory before running // the command	WITHOUT_CLASSIFICATION	0.9999999985954169	WITHOUT_CLASSIFICATION	1.4045831118353011E-9	DEFECT
// need to set the project on unknown element	WITHOUT_CLASSIFICATION	0.9999982768860904	WITHOUT_CLASSIFICATION	1.72311390967125E-6	DEFECT
//************************************************************************ //  protected and private methods //************************************************************************	WITHOUT_CLASSIFICATION	0.9999333642947772	WITHOUT_CLASSIFICATION	6.663570522280137E-5	DEFECT
//Attempt complete directory renames, if any, first.	WITHOUT_CLASSIFICATION	0.9999981196772508	WITHOUT_CLASSIFICATION	1.8803227492472174E-6	DEFECT
// files to move	WITHOUT_CLASSIFICATION	0.9999989214734913	WITHOUT_CLASSIFICATION	1.0785265087030915E-6	DEFECT
//Is this file still available to be moved?	WITHOUT_CLASSIFICATION	0.9999518695863554	WITHOUT_CLASSIFICATION	4.8130413644576696E-5	DEFECT
// if this is the last time through the loop then // move will not occur, but that's what we want	WITHOUT_CLASSIFICATION	0.9999959779429898	WITHOUT_CLASSIFICATION	4.0220570102714145E-6	DEFECT
// maybe io error?	WITHOUT_CLASSIFICATION	0.9996844439498364	WITHOUT_CLASSIFICATION	3.1555605016355423E-4	DEFECT
// found a file	WITHOUT_CLASSIFICATION	0.9999999253192864	WITHOUT_CLASSIFICATION	7.468071360379003E-8	DEFECT
// on an io error list() can return null	WITHOUT_CLASSIFICATION	0.9999712607315199	WITHOUT_CLASSIFICATION	2.873926848013989E-5	DEFECT
// Whether *this VM* is 1.4+ (but also check executable != null).	WITHOUT_CLASSIFICATION	0.9999990706646559	WITHOUT_CLASSIFICATION	9.293353440491736E-7	DEFECT
// ------------------------------------------ general Javadoc arguments	WITHOUT_CLASSIFICATION	0.9999999919265752	WITHOUT_CLASSIFICATION	8.073424889402128E-9	DEFECT
// ---------------------------- javadoc2 arguments for default doclet	WITHOUT_CLASSIFICATION	0.9999999795681563	WITHOUT_CLASSIFICATION	2.0431843659381427E-8	DEFECT
// add the links arguments	WITHOUT_CLASSIFICATION	0.9999999955226503	WITHOUT_CLASSIFICATION	4.477349697854622E-9	DEFECT
// should be impossible	WITHOUT_CLASSIFICATION	0.999991905512606	WITHOUT_CLASSIFICATION	8.094487394075619E-6	DEFECT
// is the href a valid URL	WITHOUT_CLASSIFICATION	0.9999889115996882	WITHOUT_CLASSIFICATION	1.108840031188266E-5	DEFECT
// ok - just skip	WITHOUT_CLASSIFICATION	0.9999997349461364	WITHOUT_CLASSIFICATION	2.650538636046088E-7	DEFECT
//return	WITHOUT_CLASSIFICATION	0.9999827871989675	WITHOUT_CLASSIFICATION	1.7212801032502953E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999996763950936	WITHOUT_CLASSIFICATION	3.2360490638735057E-7	DEFECT
//validation logic	WITHOUT_CLASSIFICATION	0.9999956399346203	WITHOUT_CLASSIFICATION	4.3600653797180034E-6	DEFECT
// Ignore Exception	WITHOUT_CLASSIFICATION	0.9999998703768748	WITHOUT_CLASSIFICATION	1.2962312530729791E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999998952218317	WITHOUT_CLASSIFICATION	1.0477816833988038E-7	DEFECT
// Only try to move if this is the last mapped file // and one of the mappings isn't to itself	WITHOUT_CLASSIFICATION	0.9999829273605154	WITHOUT_CLASSIFICATION	1.707263948466181E-5	DEFECT
// createArgument(true) is necessary to make sure -locale // is the first argument (required in 1.3+).	WITHOUT_CLASSIFICATION	0.9999999663900889	WITHOUT_CLASSIFICATION	3.360991106663102E-8	DEFECT
// Go through the tokens one at a time, updating the // elements array and issuing warnings where appropriate.	WITHOUT_CLASSIFICATION	0.9999854654081088	WITHOUT_CLASSIFICATION	1.4534591891012043E-5	DEFECT
// Ant javadoc task rules for group attribute: //   Args are comma-delimited. //   Each arg is 2 space-delimited strings. //   E.g., group="XSLT_Packages org.apache.xalan.xslt*, //                XPath_Packages org.apache.xalan.xpath*"	WITHOUT_CLASSIFICATION	0.9999996295683342	WITHOUT_CLASSIFICATION	3.7043166574067824E-7	DEFECT
// add the group arguments	WITHOUT_CLASSIFICATION	0.9999999940651274	WITHOUT_CLASSIFICATION	5.934872572066292E-9	DEFECT
// Javadoc 1.4 parameters	WITHOUT_CLASSIFICATION	0.9999998860606725	WITHOUT_CLASSIFICATION	1.1393932751206728E-7	DEFECT
// The tag element is not used as a fileset, // but specifies the tag directly.	WITHOUT_CLASSIFICATION	0.9999990899520314	WITHOUT_CLASSIFICATION	9.100479687443984E-7	DEFECT
// The tag element is used as a // fileset. Parse all the files and create // -tag arguments.	WITHOUT_CLASSIFICATION	0.9999999984282415	WITHOUT_CLASSIFICATION	1.5717585321157541E-9	DEFECT
// Not 1.4+.	WITHOUT_CLASSIFICATION	0.9999987751307607	WITHOUT_CLASSIFICATION	1.2248692393110303E-6	DEFECT
// Javadoc 1.2/1.3 parameters:	WITHOUT_CLASSIFICATION	0.9999996747738747	WITHOUT_CLASSIFICATION	3.2522612529234266E-7	DEFECT
// If using an external file, write the command line options to it	WITHOUT_CLASSIFICATION	0.999999108496277	WITHOUT_CLASSIFICATION	8.915037229655348E-7	DEFECT
// If using an external file, write the command line options to it	WITHOUT_CLASSIFICATION	0.999999108496277	WITHOUT_CLASSIFICATION	8.915037229655348E-7	DEFECT
/*         * No reason to change the working directory as all filenames and         * path components have been resolved already.         *         * Avoid problems with command line length in some environments.         */	WITHOUT_CLASSIFICATION	0.9976824421214261	WITHOUT_CLASSIFICATION	0.002317557878573958	DEFECT
// are there any java files in this directory?	WITHOUT_CLASSIFICATION	0.9999936184807139	WITHOUT_CLASSIFICATION	6.381519286138208E-6	DEFECT
// We don't need to care for duplicates here, // Path.list does it for us.	WITHOUT_CLASSIFICATION	0.9999999675206103	WITHOUT_CLASSIFICATION	3.2479389776557573E-8	DEFECT
// CheckStyle:MethodNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.999995028507788	WITHOUT_CLASSIFICATION	4.971492211934094E-6	DEFECT
/* Methods below all add specific selectors */	WITHOUT_CLASSIFICATION	0.999999990774703	WITHOUT_CLASSIFICATION	9.22529695185383E-9	DEFECT
//convert a class name into a resource	WITHOUT_CLASSIFICATION	0.9999999640537244	WITHOUT_CLASSIFICATION	3.594627569485752E-8	DEFECT
//set the property	WITHOUT_CLASSIFICATION	0.9999912457865711	WITHOUT_CLASSIFICATION	8.754213428889626E-6	DEFECT
// line feed	WITHOUT_CLASSIFICATION	0.9999958444029372	WITHOUT_CLASSIFICATION	4.155597062805698E-6	DEFECT
// by default, remove matching empty dirs	WITHOUT_CLASSIFICATION	0.9999993555433387	WITHOUT_CLASSIFICATION	6.444566612624066E-7	DEFECT
// delete the single file	WITHOUT_CLASSIFICATION	0.9999999114466284	WITHOUT_CLASSIFICATION	8.855337167180237E-8	DEFECT
// delete the directory	WITHOUT_CLASSIFICATION	0.9999998658450577	WITHOUT_CLASSIFICATION	1.341549422100675E-7	DEFECT
//add the files from the default fileset:	WITHOUT_CLASSIFICATION	0.9999999354268181	WITHOUT_CLASSIFICATION	6.457318192589304E-8	DEFECT
// sort first to files, then dirs	WITHOUT_CLASSIFICATION	0.999999851488775	WITHOUT_CLASSIFICATION	1.4851122501577704E-7	DEFECT
/*                 * Plain impossible with UTF8, see                 * http://java.sun.com/j2se/1.5.0/docs/guide/intl/encoding.doc.html                 *                 * fallback to platform specific anyway.                 */	WITHOUT_CLASSIFICATION	0.9999996466061484	WITHOUT_CLASSIFICATION	3.5339385168636177E-7	DEFECT
//patch the redirector to save output to a file	WITHOUT_CLASSIFICATION	0.9999999985932183	WITHOUT_CLASSIFICATION	1.406781664001826E-9	DEFECT
//verify special operations	WITHOUT_CLASSIFICATION	0.9999999749600829	WITHOUT_CLASSIFICATION	2.503991719849729E-8	DEFECT
//JAR  is required	WITHOUT_CLASSIFICATION	0.9998336968596673	WITHOUT_CLASSIFICATION	1.6630314033272466E-4	DEFECT
//deal with jdk1.4.2 bug:	WITHOUT_CLASSIFICATION	0.9994277198136149	WITHOUT_CLASSIFICATION	5.72280186385203E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999998952218317	WITHOUT_CLASSIFICATION	1.0477816833988038E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999996763950936	WITHOUT_CLASSIFICATION	3.2360490638735057E-7	DEFECT
// now we need to populate the compiler adapter	WITHOUT_CLASSIFICATION	0.9999998709516079	WITHOUT_CLASSIFICATION	1.290483921458606E-7	DEFECT
// finally, lets execute the compiler!!	WITHOUT_CLASSIFICATION	0.9999922048589682	WITHOUT_CLASSIFICATION	7.795141031821974E-6	DEFECT
//validation	WITHOUT_CLASSIFICATION	0.9999651793063286	WITHOUT_CLASSIFICATION	3.482069367142847E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999998952218317	WITHOUT_CLASSIFICATION	1.0477816833988038E-7	DEFECT
// nonexistent resources could only occur if we already // deleted something from a fileset:	WITHOUT_CLASSIFICATION	0.9999999909261847	WITHOUT_CLASSIFICATION	9.07381530031642E-9	DEFECT
//cache	WITHOUT_CLASSIFICATION	0.9999961996749221	WITHOUT_CLASSIFICATION	3.8003250778451988E-6	DEFECT
// no include pattern implicitly means includes="**"	WITHOUT_CLASSIFICATION	0.9999989048680819	WITHOUT_CLASSIFICATION	1.095131918077925E-6	DEFECT
//Do not process this file	WITHOUT_CLASSIFICATION	0.9999604285996305	WITHOUT_CLASSIFICATION	3.957140036956466E-5	DEFECT
// make sure facade knows about magic properties and fork setting	WITHOUT_CLASSIFICATION	0.9999988742928139	WITHOUT_CLASSIFICATION	1.1257071861657772E-6	DEFECT
// deal with the resources	WITHOUT_CLASSIFICATION	0.999999475910996	WITHOUT_CLASSIFICATION	5.240890039691377E-7	DEFECT
// Make a transaction for each resource	WITHOUT_CLASSIFICATION	0.9999994629938731	WITHOUT_CLASSIFICATION	5.370061268994437E-7	DEFECT
// Make a transaction group for the outer command	WITHOUT_CLASSIFICATION	0.9999988436932902	WITHOUT_CLASSIFICATION	1.1563067097927277E-6	DEFECT
// Process all transactions	WITHOUT_CLASSIFICATION	0.9999997361613936	WITHOUT_CLASSIFICATION	2.6383860651211965E-7	DEFECT
// Catch any statements not followed by ;	WITHOUT_CLASSIFICATION	0.9999987452859918	WITHOUT_CLASSIFICATION	1.2547140082789866E-6	DEFECT
// Check and ignore empty statements	WITHOUT_CLASSIFICATION	0.9999999970686465	WITHOUT_CLASSIFICATION	2.931353475595079E-9	DEFECT
/*     * Closes an unused connection after an error and doesn't rethrow     * a possible SQLException     * @since Ant 1.7     */	WITHOUT_CLASSIFICATION	0.9999985967396029	WITHOUT_CLASSIFICATION	1.4032603971313341E-6	DEFECT
// dreaded backwards compatibility	WITHOUT_CLASSIFICATION	0.9999996564438773	WITHOUT_CLASSIFICATION	3.435561226757148E-7	DEFECT
/*Throw an exception if cvs exited with error. (Iulian)*/	WITHOUT_CLASSIFICATION	0.9999969520955135	WITHOUT_CLASSIFICATION	3.047904486541816E-6	DEFECT
// re-implement legacy behaviour:	WITHOUT_CLASSIFICATION	0.9999924278646531	WITHOUT_CLASSIFICATION	7.572135346820311E-6	DEFECT
// Check if not real cvsroot => set it to null	WITHOUT_CLASSIFICATION	0.9999997033828383	WITHOUT_CLASSIFICATION	2.966171616167725E-7	DEFECT
// Check if not real cvsrsh => set it to null	WITHOUT_CLASSIFICATION	0.9999996682157083	WITHOUT_CLASSIFICATION	3.3178429161409245E-7	DEFECT
// Check if not real tag => set it to null	WITHOUT_CLASSIFICATION	0.999999731449706	WITHOUT_CLASSIFICATION	2.685502940544519E-7	DEFECT
// close the output file if required	WITHOUT_CLASSIFICATION	0.9999999314195753	WITHOUT_CLASSIFICATION	6.858042459970862E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999998952218317	WITHOUT_CLASSIFICATION	1.0477816833988038E-7	DEFECT
//req // req	WITHOUT_CLASSIFICATION	0.9999957624658289	WITHOUT_CLASSIFICATION	4.237534171139122E-6	DEFECT
// scan source directories and dest directory to build up // compile lists	WITHOUT_CLASSIFICATION	0.999999966205806	WITHOUT_CLASSIFICATION	3.379419394741258E-8	DEFECT
//there is no need to expand properties here as that happens when Transaction.addText is //called; to do so here would be an error.	WITHOUT_CLASSIFICATION	0.9999574260401445	WITHOUT_CLASSIFICATION	4.257395985555753E-5	DEFECT
//there are places (in this file, and perhaps elsewhere, where it is assumed //that null is an acceptable parameter.	WITHOUT_CLASSIFICATION	0.9999999067896664	WITHOUT_CLASSIFICATION	9.321033352591352E-8	DEFECT
// We can't do it ourselves as jCVS is GPLed, a third party task // outside of jakarta repositories would be possible though (SB).	WITHOUT_CLASSIFICATION	0.9999979842843051	WITHOUT_CLASSIFICATION	2.0157156949128707E-6	DEFECT
// // Just call the getExecuteStreamHandler() and let it handle //     the semantics of instantiation or retrieval. //	WITHOUT_CLASSIFICATION	0.9999947239313939	WITHOUT_CLASSIFICATION	5.276068606080313E-6	DEFECT
// we are chmodding the given directory	WITHOUT_CLASSIFICATION	0.9999973510735054	WITHOUT_CLASSIFICATION	2.6489264946204295E-6	DEFECT
// may be altered in validateAttributes	WITHOUT_CLASSIFICATION	0.9999997552412278	WITHOUT_CLASSIFICATION	2.4475877226269834E-7	DEFECT
// will be removed in validateAttributes	WITHOUT_CLASSIFICATION	0.999995746584118	WITHOUT_CLASSIFICATION	4.253415881893109E-6	DEFECT
// make sure we don't have an illegal set of options	WITHOUT_CLASSIFICATION	0.9999997391938672	WITHOUT_CLASSIFICATION	2.6080613271608405E-7	DEFECT
// deal with the single file	WITHOUT_CLASSIFICATION	0.9999996045857522	WITHOUT_CLASSIFICATION	3.9541424770645085E-7	DEFECT
// deal with the ResourceCollections	WITHOUT_CLASSIFICATION	0.9999996800803165	WITHOUT_CLASSIFICATION	3.1991968346637204E-7	DEFECT
// Step (1) - beware of the ZipFileSet	WITHOUT_CLASSIFICATION	0.9999997130310745	WITHOUT_CLASSIFICATION	2.8696892553059097E-7	DEFECT
// not a fileset or contains non-file resources	WITHOUT_CLASSIFICATION	0.9999995839672753	WITHOUT_CLASSIFICATION	4.1603272469993316E-7	DEFECT
// copying of dirs is trivial and can be done // for non-file resources as well as for real // files.	WITHOUT_CLASSIFICATION	0.9999999266447206	WITHOUT_CLASSIFICATION	7.335527948990966E-8	DEFECT
// a not-directory file resource // needs special treatment	WITHOUT_CLASSIFICATION	0.999999191943041	WITHOUT_CLASSIFICATION	8.0805695902054E-7	DEFECT
// do all the copy operations now...	WITHOUT_CLASSIFICATION	0.9999819979794665	WITHOUT_CLASSIFICATION	1.800202053349913E-5	DEFECT
// restrict to out-of-date resources	WITHOUT_CLASSIFICATION	0.9999999644129923	WITHOUT_CLASSIFICATION	3.558700768934643E-8	DEFECT
// clean up again, so this instance can be used a second // time	WITHOUT_CLASSIFICATION	0.9999999598325457	WITHOUT_CLASSIFICATION	4.0167454295993464E-8	DEFECT
// reuse the array created by the mapper	WITHOUT_CLASSIFICATION	0.9999999586727998	WITHOUT_CLASSIFICATION	4.1327200160818775E-8	DEFECT
// reuse the array created by the mapper	WITHOUT_CLASSIFICATION	0.9999999586727998	WITHOUT_CLASSIFICATION	4.1327200160818775E-8	DEFECT
//now patch in all system properties	WITHOUT_CLASSIFICATION	0.9999956704724426	WITHOUT_CLASSIFICATION	4.329527557455571E-6	DEFECT
// is the keystore a file	WITHOUT_CLASSIFICATION	0.9999886569603657	WITHOUT_CLASSIFICATION	1.134303963437767E-5	DEFECT
// must be a URL - just pass as is	WITHOUT_CLASSIFICATION	0.9999986527367036	WITHOUT_CLASSIFICATION	1.3472632963138258E-6	DEFECT
// Gump friendly - don't mess with the core loader if only classpath	WITHOUT_CLASSIFICATION	0.9999963862147275	WITHOUT_CLASSIFICATION	3.613785272454262E-6	DEFECT
// Construct a new class loader	WITHOUT_CLASSIFICATION	0.9999999412892512	WITHOUT_CLASSIFICATION	5.8710748724657645E-8	DEFECT
// The param is "parentFirst"	WITHOUT_CLASSIFICATION	0.9999955424658661	WITHOUT_CLASSIFICATION	4.457534133952681E-6	DEFECT
/*public*/	WITHOUT_CLASSIFICATION	0.9999615359865524	WITHOUT_CLASSIFICATION	3.846401344759986E-5	DEFECT
//shield it from being closed by a filtering StreamPumper	WITHOUT_CLASSIFICATION	0.9999997292992794	WITHOUT_CLASSIFICATION	2.707007205337194E-7	DEFECT
//shield it from being closed by a filtering StreamPumper	WITHOUT_CLASSIFICATION	0.9999997292992794	WITHOUT_CLASSIFICATION	2.707007205337194E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999998952218317	WITHOUT_CLASSIFICATION	1.0477816833988038E-7	DEFECT
// set read-only properties // CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999769552789	WITHOUT_CLASSIFICATION	2.3044721158320797E-8	DEFECT
// Are any other references held ? Can we 'close' the loader // so it removes the locks on jars ? // a new one will be created.	WITHOUT_CLASSIFICATION	0.9999963537932077	WITHOUT_CLASSIFICATION	3.6462067923573878E-6	DEFECT
// The core loader must be reverse //reverse=true;	WITHOUT_CLASSIFICATION	0.9999998614282215	WITHOUT_CLASSIFICATION	1.385717784280104E-7	DEFECT
// This allows the core loader to load optional tasks // without delegating	WITHOUT_CLASSIFICATION	0.9999998869062007	WITHOUT_CLASSIFICATION	1.1309379930911677E-7	DEFECT
//wait for the StreamPumpers to finish	WITHOUT_CLASSIFICATION	0.9999989233600635	WITHOUT_CLASSIFICATION	1.0766399365086156E-6	DEFECT
// Ignore exception	WITHOUT_CLASSIFICATION	0.9999997970566973	WITHOUT_CLASSIFICATION	2.0294330278351223E-7	DEFECT
// Normalize the reference directory (containing the jar)	WITHOUT_CLASSIFICATION	0.999999980143148	WITHOUT_CLASSIFICATION	1.9856852050563056E-8	DEFECT
// Normalize the current file	WITHOUT_CLASSIFICATION	0.999999883840266	WITHOUT_CLASSIFICATION	1.1615973413784255E-7	DEFECT
// No match, so bail out!	WITHOUT_CLASSIFICATION	0.9999999544372699	WITHOUT_CLASSIFICATION	4.5562730224059216E-8	DEFECT
// Finally assign the property with the manifest classpath	WITHOUT_CLASSIFICATION	0.9999912468042615	WITHOUT_CLASSIFICATION	8.753195738479374E-6	DEFECT
// try to find a MAX_LINE_LENGTH byte section	WITHOUT_CLASSIFICATION	0.9999989483644884	WITHOUT_CLASSIFICATION	1.0516355116067968E-6	DEFECT
// continuation line	WITHOUT_CLASSIFICATION	0.9999990206686222	WITHOUT_CLASSIFICATION	9.793313777674899E-7	DEFECT
// refresh attribute in case of multivalued attributes.	WITHOUT_CLASSIFICATION	0.9999999101207313	WITHOUT_CLASSIFICATION	8.987926867656863E-8	DEFECT
// the merge file always wins	WITHOUT_CLASSIFICATION	0.9999895304446854	WITHOUT_CLASSIFICATION	1.0469555314690723E-5	DEFECT
// the merge file *always* wins, even for Class-Path	WITHOUT_CLASSIFICATION	0.9999954006565597	WITHOUT_CLASSIFICATION	4.599343440289098E-6	DEFECT
// add in the warnings	WITHOUT_CLASSIFICATION	0.9999994395341898	WITHOUT_CLASSIFICATION	5.604658101387423E-7	DEFECT
// This should be the manifest version	WITHOUT_CLASSIFICATION	0.9999448581480174	WITHOUT_CLASSIFICATION	5.5141851982652626E-5	DEFECT
// add it back	WITHOUT_CLASSIFICATION	0.9999975275516173	WITHOUT_CLASSIFICATION	2.4724483827103076E-6	DEFECT
// shouldn't happen - ignore	WITHOUT_CLASSIFICATION	0.9999789264177743	WITHOUT_CLASSIFICATION	2.1073582225732483E-5	DEFECT
// create a vector and add in the warnings for all the sections	WITHOUT_CLASSIFICATION	0.9999876581718271	WITHOUT_CLASSIFICATION	1.2341828172850123E-5	DEFECT
//off by default	WITHOUT_CLASSIFICATION	0.9999983402480067	WITHOUT_CLASSIFICATION	1.6597519932881128E-6	DEFECT
//set up logging	WITHOUT_CLASSIFICATION	0.9999999725736738	WITHOUT_CLASSIFICATION	2.7426326221255718E-8	DEFECT
//execute the get	WITHOUT_CLASSIFICATION	0.9999923226977764	WITHOUT_CLASSIFICATION	7.677302223611444E-6	DEFECT
//dont do any progress, unless asked	WITHOUT_CLASSIFICATION	0.9999992946467325	WITHOUT_CLASSIFICATION	7.05353267531822E-7	DEFECT
//set the timestamp to the file date.	WITHOUT_CLASSIFICATION	0.9999998668709087	WITHOUT_CLASSIFICATION	1.3312909130609887E-7	DEFECT
//set up the URL connection	WITHOUT_CLASSIFICATION	0.9999984236793211	WITHOUT_CLASSIFICATION	1.5763206788755558E-6	DEFECT
// Create as many directory prefixes as parent levels to traverse, // in addition to the reference directory itself	WITHOUT_CLASSIFICATION	0.9999982256557506	WITHOUT_CLASSIFICATION	1.774344249444507E-6	DEFECT
// Find the longest prefix shared by the current file // and the reference directory.	WITHOUT_CLASSIFICATION	0.9999998916862903	WITHOUT_CLASSIFICATION	1.0831370961694045E-7	DEFECT
// We have a match! Add as many ../ as parent // directory traversed to get the relative path	WITHOUT_CLASSIFICATION	0.999999678451471	WITHOUT_CLASSIFICATION	3.215485289723944E-7	DEFECT
// Manifest's ClassPath: attribute always uses forward // slashes '/', and is space-separated. Ant will properly // format it on 72 columns with proper line continuation	WITHOUT_CLASSIFICATION	0.9997596838103249	WITHOUT_CLASSIFICATION	2.4031618967524374E-4	DEFECT
// a continuation on the first line is a // continuation of the name - concatenate this // line and the name	WITHOUT_CLASSIFICATION	0.99999994798277	WITHOUT_CLASSIFICATION	5.2017229909869437E-8	DEFECT
// required // required	WITHOUT_CLASSIFICATION	0.9999976835499337	WITHOUT_CLASSIFICATION	2.3164500663601136E-6	DEFECT
//modify the headers //NB: things like user authentication could go in here too.	WITHOUT_CLASSIFICATION	0.9972341119468894	WITHOUT_CLASSIFICATION	0.00276588805311056	DEFECT
// prepare Java 1.1 style credentials	WITHOUT_CLASSIFICATION	0.9999996388214535	WITHOUT_CLASSIFICATION	3.6117854651707997E-7	DEFECT
//we do not use the sun impl for portability, //and always use our own implementation for consistent //testing	WITHOUT_CLASSIFICATION	0.9999996511876128	WITHOUT_CLASSIFICATION	3.4881238724096514E-7	DEFECT
//connect to the remote site (may take some time)	WITHOUT_CLASSIFICATION	0.9998353466500483	WITHOUT_CLASSIFICATION	1.6465334995166572E-4	DEFECT
//next test for a 304 result (HTTP only)	WITHOUT_CLASSIFICATION	0.9999877534135073	WITHOUT_CLASSIFICATION	1.224658649260227E-5	DEFECT
// test for 401 result (HTTP only)	WITHOUT_CLASSIFICATION	0.9999982845451594	WITHOUT_CLASSIFICATION	1.7154548407186344E-6	DEFECT
//REVISIT: at this point even non HTTP connections may //support the if-modified-since behaviour -we just check //the date of the content and skip the write if it is not //newer. Some protocols (FTP) don't include dates, of //course.	WITHOUT_CLASSIFICATION	0.9999981031517854	WITHOUT_CLASSIFICATION	1.8968482145061166E-6	DEFECT
//this three attempt trick is to get round quirks in different //Java implementations. Some of them take a few goes to bind //property; we ignore the first couple of such failures.	WITHOUT_CLASSIFICATION	0.9999949774540697	WITHOUT_CLASSIFICATION	5.0225459302885495E-6	DEFECT
//successful download	WITHOUT_CLASSIFICATION	0.9999996668214493	WITHOUT_CLASSIFICATION	3.3317855066066326E-7	DEFECT
// this happens if the projecthelper was not registered with the project.	WITHOUT_CLASSIFICATION	0.9999067323922444	WITHOUT_CLASSIFICATION	9.326760775561778E-5	DEFECT
// methods to register and unregister shutdown hooks	WITHOUT_CLASSIFICATION	0.999981420597099	WITHOUT_CLASSIFICATION	1.8579402900970493E-5	DEFECT
// check to see if the shutdown hook methods exists // (support pre-JDK 1.3 VMs)	WITHOUT_CLASSIFICATION	0.9999926179996674	WITHOUT_CLASSIFICATION	7.382000332664954E-6	DEFECT
// wait to add shutdown hook as needed	WITHOUT_CLASSIFICATION	0.9999994422233623	WITHOUT_CLASSIFICATION	5.577766376363276E-7	DEFECT
// it just won't be added as a shutdown hook... :(	WITHOUT_CLASSIFICATION	0.9994443423905448	WITHOUT_CLASSIFICATION	5.556576094552406E-4	DEFECT
// shutdown already is in progress	WITHOUT_CLASSIFICATION	0.9999983479099315	WITHOUT_CLASSIFICATION	1.6520900685393057E-6	DEFECT
// Ignore Exception	WITHOUT_CLASSIFICATION	0.9999998703768748	WITHOUT_CLASSIFICATION	1.2962312530729791E-7	DEFECT
// shutdown already is in progress	WITHOUT_CLASSIFICATION	0.9999983479099315	WITHOUT_CLASSIFICATION	1.6520900685393057E-6	DEFECT
// I don't think we can use File - different rules // for relative paths.	WITHOUT_CLASSIFICATION	0.999990746968368	WITHOUT_CLASSIFICATION	9.253031631990571E-6	DEFECT
// this happens if ant is used with a project // helper that doesn't set the import.	WITHOUT_CLASSIFICATION	0.9999707952176401	WITHOUT_CLASSIFICATION	2.920478236001036E-5	DEFECT
// Paths are relative to the build file they're imported from, // *not* the current directory (same as entity includes).	WITHOUT_CLASSIFICATION	0.9999999810962056	WITHOUT_CLASSIFICATION	1.8903794457509218E-8	DEFECT
// whether or not this ProcessDestroyer has been registered as a // shutdown hook	WITHOUT_CLASSIFICATION	0.9999973483526423	WITHOUT_CLASSIFICATION	2.6516473577061916E-6	DEFECT
// whether or not this ProcessDestroyer is currently running as // shutdown hook	WITHOUT_CLASSIFICATION	0.9995201512397152	WITHOUT_CLASSIFICATION	4.798487602847896E-4	DEFECT
// this should return quickly, since it basically is a NO-OP.	WITHOUT_CLASSIFICATION	0.9993182224453798	WITHOUT_CLASSIFICATION	6.817775546202501E-4	DEFECT
// the thread didn't die in time // it should not kill any processes unexpectedly	WITHOUT_CLASSIFICATION	0.9999311476729786	WITHOUT_CLASSIFICATION	6.885232702141671E-5	DEFECT
// if this list is empty, register the shutdown hook	WITHOUT_CLASSIFICATION	0.999996637641719	WITHOUT_CLASSIFICATION	3.362358281149535E-6	DEFECT
// need to load Task via system classloader or the new // task we want to define will never be a Task but always // be wrapped into a TaskAdapter.	WITHOUT_CLASSIFICATION	0.9999999885516383	WITHOUT_CLASSIFICATION	1.1448361726183809E-8	DEFECT
// generate classpath, because kjc doesn't support sourcepath.	WITHOUT_CLASSIFICATION	0.9999997612742401	WITHOUT_CLASSIFICATION	2.387257599974739E-7	DEFECT
// generate the clsspath	WITHOUT_CLASSIFICATION	0.9999999294010041	WITHOUT_CLASSIFICATION	7.059899588251151E-8	DEFECT
// kjc don't have bootclasspath option.	WITHOUT_CLASSIFICATION	0.9999997752621747	WITHOUT_CLASSIFICATION	2.2473782531921076E-7	DEFECT
// Process the factory class	WITHOUT_CLASSIFICATION	0.9999943342971267	WITHOUT_CLASSIFICATION	5.665702873298856E-6	DEFECT
// Process the factory path	WITHOUT_CLASSIFICATION	0.9999987680853362	WITHOUT_CLASSIFICATION	1.2319146637734761E-6	DEFECT
// Process the processor options	WITHOUT_CLASSIFICATION	0.999999914339597	WITHOUT_CLASSIFICATION	8.566040298625965E-8	DEFECT
//set up the javac options	WITHOUT_CLASSIFICATION	0.9999999965903492	WITHOUT_CLASSIFICATION	3.4096508335951014E-9	DEFECT
//then add the Apt options	WITHOUT_CLASSIFICATION	0.9999996879197649	WITHOUT_CLASSIFICATION	3.120802350539602E-7	DEFECT
//finally invoke APT // Use reflection to be able to build on all JDKs:	WITHOUT_CLASSIFICATION	0.9999796214546929	WITHOUT_CLASSIFICATION	2.0378545307135944E-5	DEFECT
//rethrow build exceptions	WITHOUT_CLASSIFICATION	0.9999941237425904	WITHOUT_CLASSIFICATION	5.876257409620677E-6	DEFECT
//cast everything else to a build exception	WITHOUT_CLASSIFICATION	0.9999988491395707	WITHOUT_CLASSIFICATION	1.150860429229757E-6	DEFECT
// Call the compile() method	WITHOUT_CLASSIFICATION	0.9999933049678056	WITHOUT_CLASSIFICATION	6.695032194416908E-6	DEFECT
// jvc doesn't support bootclasspath dir (-bootclasspath) // so we'll emulate it for compatibility and convenience.	WITHOUT_CLASSIFICATION	0.999999998549353	WITHOUT_CLASSIFICATION	1.4506469665649854E-9	DEFECT
// jvc doesn't support an extension dir (-extdir) // so we'll emulate it for compatibility and convenience.	WITHOUT_CLASSIFICATION	0.9999999302142213	WITHOUT_CLASSIFICATION	6.978577868711826E-8	DEFECT
// jvc has no option for source-path so we // will add it to classpath.	WITHOUT_CLASSIFICATION	0.9999999848815477	WITHOUT_CLASSIFICATION	1.5118452287799196E-8	DEFECT
// Add the Classpath before the "internal" one.	WITHOUT_CLASSIFICATION	0.9999999967992202	WITHOUT_CLASSIFICATION	3.2007798360662197E-9	DEFECT
// Enable MS-Extensions and ...	WITHOUT_CLASSIFICATION	0.9999591166667475	WITHOUT_CLASSIFICATION	4.088333325252652E-5	DEFECT
// ... do not display a Message about this.	WITHOUT_CLASSIFICATION	0.999799972408169	WITHOUT_CLASSIFICATION	2.0002759183100396E-4	DEFECT
// Do not display Logo	WITHOUT_CLASSIFICATION	0.9999965170797682	WITHOUT_CLASSIFICATION	3.482920231830919E-6	DEFECT
//add the files	WITHOUT_CLASSIFICATION	0.9999998072094515	WITHOUT_CLASSIFICATION	1.9279054863236115E-7	DEFECT
//run	WITHOUT_CLASSIFICATION	0.99996359451585	WITHOUT_CLASSIFICATION	3.640548415001243E-5	DEFECT
//as new versions of java come out, add them to this test	WITHOUT_CLASSIFICATION	0.9999991491050283	WITHOUT_CLASSIFICATION	8.508949717535064E-7	DEFECT
//on java<=1.3 the modern falls back to classic if it is not found //but on java>=1.4 we just bail out early	WITHOUT_CLASSIFICATION	0.9999035737802184	WITHOUT_CLASSIFICATION	9.642621978162454E-5	DEFECT
// does the modern compiler exist?	WITHOUT_CLASSIFICATION	0.9988166420677957	WITHOUT_CLASSIFICATION	0.0011833579322042332	DEFECT
// CheckStyle:ConstantNameCheck ON // CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999371182178	WITHOUT_CLASSIFICATION	6.288178217887084E-8	DEFECT
// Combine the build classpath with the system classpath, in an // order determined by the value of build.sysclasspath	WITHOUT_CLASSIFICATION	0.9999991290357476	WITHOUT_CLASSIFICATION	8.709642523493776E-7	DEFECT
// For -sourcepath, use the "sourcepath" value if present. // Otherwise default to the "srcdir" value.	WITHOUT_CLASSIFICATION	0.999999999895147	WITHOUT_CLASSIFICATION	1.0485304099828333E-10	DEFECT
// Just add "sourcepath" to classpath ( for JDK1.1 ) // as well as "bootclasspath" and "extdirs"	WITHOUT_CLASSIFICATION	0.999999984024508	WITHOUT_CLASSIFICATION	1.5975492083534704E-8	DEFECT
// If the buildfile specifies sourcepath="", then don't // output any sourcepath.	WITHOUT_CLASSIFICATION	0.9999995912632881	WITHOUT_CLASSIFICATION	4.0873671189888627E-7	DEFECT
// If the buildfile specifies sourcepath="", then don't // output any sourcepath.	WITHOUT_CLASSIFICATION	0.9999995912632881	WITHOUT_CLASSIFICATION	4.0873671189888627E-7	DEFECT
// support for -source 1.1 and -source 1.2 has been // added with JDK 1.4.2 - and isn't present in 1.5.0 either	WITHOUT_CLASSIFICATION	0.9991507660994846	WITHOUT_CLASSIFICATION	8.492339005155026E-4	DEFECT
// 1.5.0 doesn't support -source 1.1	WITHOUT_CLASSIFICATION	0.9999831368530497	WITHOUT_CLASSIFICATION	1.6863146950296642E-5	DEFECT
//Use the VM launcher instead of shell launcher on VMS //for java	WITHOUT_CLASSIFICATION	0.9999638378570592	WITHOUT_CLASSIFICATION	3.6162142940838816E-5	DEFECT
// gcj doesn't support bootclasspath dir (-bootclasspath) // so we'll emulate it for compatibility and convenience.	WITHOUT_CLASSIFICATION	0.999999997390911	WITHOUT_CLASSIFICATION	2.6090889702286107E-9	DEFECT
// gcj doesn't support an extension dir (-extdir) // so we'll emulate it for compatibility and convenience.	WITHOUT_CLASSIFICATION	0.9999998744854539	WITHOUT_CLASSIFICATION	1.255145460693997E-7	DEFECT
// Gcj has no option for source-path so we // will add it to classpath.	WITHOUT_CLASSIFICATION	0.9999999868306234	WITHOUT_CLASSIFICATION	1.3169376496493232E-8	DEFECT
// Use reflection to be able to build on all JDKs >= 1.1:	WITHOUT_CLASSIFICATION	0.9999950691107161	WITHOUT_CLASSIFICATION	4.930889283966849E-6	DEFECT
// no bootclasspath, therefore, get one from the java runtime	WITHOUT_CLASSIFICATION	0.9999999968221425	WITHOUT_CLASSIFICATION	3.177857563038703E-9	DEFECT
// if the user has set JIKESPATH we should add the contents as well	WITHOUT_CLASSIFICATION	0.9999998765023859	WITHOUT_CLASSIFICATION	1.2349761411689922E-7	DEFECT
//reflection to avoid bootstrap/build problems	WITHOUT_CLASSIFICATION	0.9999959740259424	WITHOUT_CLASSIFICATION	4.025974057504391E-6	DEFECT
//now verify that the class has an implementation	WITHOUT_CLASSIFICATION	0.9994467802875575	WITHOUT_CLASSIFICATION	5.532197124425121E-4	DEFECT
//windows probing logic relies on the word 'windows' in //the OS	WITHOUT_CLASSIFICATION	0.9997336850979546	WITHOUT_CLASSIFICATION	2.6631490204536497E-4	DEFECT
//there are only four 9x platforms that we look for	WITHOUT_CLASSIFICATION	0.9999998586118705	WITHOUT_CLASSIFICATION	1.413881296348982E-7	DEFECT
//wince isn't really 9x, but crippled enough to //be a muchness. Ant doesnt run on CE, anyway.	WITHOUT_CLASSIFICATION	0.9986317798309703	WITHOUT_CLASSIFICATION	0.0013682201690297356	DEFECT
// millis per second	WITHOUT_CLASSIFICATION	0.9999842621867184	WITHOUT_CLASSIFICATION	1.5737813281586816E-5	DEFECT
//get the host of a url	WITHOUT_CLASSIFICATION	0.9999998601051779	WITHOUT_CLASSIFICATION	1.3989482219004824E-7	DEFECT
//Java1.5: reachable = address.isReachable(timeout * 1000);	WITHOUT_CLASSIFICATION	0.9999995581615989	WITHOUT_CLASSIFICATION	4.4183840105284116E-7	DEFECT
//utterly implausible, but catered for anyway	WITHOUT_CLASSIFICATION	0.9999878956960101	WITHOUT_CLASSIFICATION	1.2104303989964927E-5	DEFECT
// load the parser class	WITHOUT_CLASSIFICATION	0.9999834172276024	WITHOUT_CLASSIFICATION	1.6582772397641975E-5	DEFECT
// may be altered in validate	WITHOUT_CLASSIFICATION	0.9999991006936542	WITHOUT_CLASSIFICATION	8.993063458174747E-7	DEFECT
// Error messages	WITHOUT_CLASSIFICATION	0.9999989185498722	WITHOUT_CLASSIFICATION	1.0814501278006975E-6	DEFECT
// plain impossible	WITHOUT_CLASSIFICATION	0.9999998595330855	WITHOUT_CLASSIFICATION	1.4046691457230407E-7	DEFECT
// support for -source 1.1 and -source 1.2 has been // added with JDK 1.4.2, Jikes doesn't like it	WITHOUT_CLASSIFICATION	0.9980444574063543	WITHOUT_CLASSIFICATION	0.0019555425936456866	DEFECT
//assume this is an IOexception about un readability	WITHOUT_CLASSIFICATION	0.9998801804494717	WITHOUT_CLASSIFICATION	1.1981955052836993E-4	DEFECT
//any kind of fault: not reachable.	WITHOUT_CLASSIFICATION	0.992055584784974	WITHOUT_CLASSIFICATION	0.007944415215026004	DEFECT
//java1.4 or earlier	WITHOUT_CLASSIFICATION	0.9999996693444332	WITHOUT_CLASSIFICATION	3.306555668391648E-7	DEFECT
// don't know the type, should throw exception instead?	WITHOUT_CLASSIFICATION	0.9994519053034259	WITHOUT_CLASSIFICATION	5.480946965741117E-4	DEFECT
//pick a value that is good for everything	WITHOUT_CLASSIFICATION	0.9999865506787757	WITHOUT_CLASSIFICATION	1.344932122422211E-5	DEFECT
//initial state is false.	WITHOUT_CLASSIFICATION	0.999997714680392	WITHOUT_CLASSIFICATION	2.28531960802996E-6	DEFECT
//every condition is xored against the previous one	WITHOUT_CLASSIFICATION	0.9999840725785959	WITHOUT_CLASSIFICATION	1.592742140415206E-5	DEFECT
//validate	WITHOUT_CLASSIFICATION	0.9999938882493568	WITHOUT_CLASSIFICATION	6.111750643252335E-6	DEFECT
//#now match the files	WITHOUT_CLASSIFICATION	0.9999998553404231	WITHOUT_CLASSIFICATION	1.4465957691333744E-7	DEFECT
// Intentionally left blank	WITHOUT_CLASSIFICATION	0.9999921980763256	WITHOUT_CLASSIFICATION	7.801923674415127E-6	DEFECT
//private static final int GET_ENTRY = 0;	WITHOUT_CLASSIFICATION	0.9999999927063283	WITHOUT_CLASSIFICATION	7.2936716379767174E-9	DEFECT
// make sure attributes are reset when // working on a 'new' file.	WITHOUT_CLASSIFICATION	0.9999457505216907	WITHOUT_CLASSIFICATION	5.424947830937629E-5	DEFECT
//We have ended changelog for that particular file //so we can save it	WITHOUT_CLASSIFICATION	0.9999999940900955	WITHOUT_CLASSIFICATION	5.909904561741579E-9	DEFECT
//was -1	WITHOUT_CLASSIFICATION	0.9999971849807073	WITHOUT_CLASSIFICATION	2.815019292700047E-6	DEFECT
//was -1	WITHOUT_CLASSIFICATION	0.9999971849807073	WITHOUT_CLASSIFICATION	2.815019292700047E-6	DEFECT
//There were no revisions in this changelog //entry so lets move onto next file	WITHOUT_CLASSIFICATION	0.9999999698873042	WITHOUT_CLASSIFICATION	3.011269575035632E-8	DEFECT
//Reset comment to empty here as we can accumulate multiple lines //in the processComment method	WITHOUT_CLASSIFICATION	0.9999990272707241	WITHOUT_CLASSIFICATION	9.727292759054348E-7	DEFECT
// We want something of the form: -d ">=YYYY-MM-dd"	WITHOUT_CLASSIFICATION	0.9999997297787551	WITHOUT_CLASSIFICATION	2.702212448596381E-7	DEFECT
// Check if list of files to check has been specified	WITHOUT_CLASSIFICATION	0.9999999523519938	WITHOUT_CLASSIFICATION	4.7648006189087995E-8	DEFECT
//for now skip entries which are missing a date	WITHOUT_CLASSIFICATION	0.9999997551233059	WITHOUT_CLASSIFICATION	2.4487669414542553E-7	DEFECT
//Skip dates that are too early	WITHOUT_CLASSIFICATION	0.9999972622512435	WITHOUT_CLASSIFICATION	2.737748756507313E-6	DEFECT
//Skip dates that are too late	WITHOUT_CLASSIFICATION	0.9999984808863113	WITHOUT_CLASSIFICATION	1.519113688658797E-6	DEFECT
// validate the input parameters	WITHOUT_CLASSIFICATION	0.9999999400201955	WITHOUT_CLASSIFICATION	5.997980445977706E-8	DEFECT
// build the rdiff command	WITHOUT_CLASSIFICATION	0.9999981199839058	WITHOUT_CLASSIFICATION	1.88001609425928E-6	DEFECT
// if the two substrings are longer than the original, then name // contains address - so reset the name to null	WITHOUT_CLASSIFICATION	0.9999986507794928	WITHOUT_CLASSIFICATION	1.3492205072600735E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999998952218317	WITHOUT_CLASSIFICATION	1.0477816833988038E-7	DEFECT
// support multiple packages	WITHOUT_CLASSIFICATION	0.9999998989484696	WITHOUT_CLASSIFICATION	1.010515303579296E-7	DEFECT
// force command not to be null	WITHOUT_CLASSIFICATION	0.9999401001284141	WITHOUT_CLASSIFICATION	5.98998715858514E-5	DEFECT
// run the cvs command	WITHOUT_CLASSIFICATION	0.999991305779932	WITHOUT_CLASSIFICATION	8.694220068036058E-6	DEFECT
// parse the rdiff	WITHOUT_CLASSIFICATION	0.9999993979343128	WITHOUT_CLASSIFICATION	6.020656872284303E-7	DEFECT
// write the tag diff	WITHOUT_CLASSIFICATION	0.9999998925909346	WITHOUT_CLASSIFICATION	1.074090653419781E-7	DEFECT
// parse the output of the command	WITHOUT_CLASSIFICATION	0.999999294254996	WITHOUT_CLASSIFICATION	7.057450041051785E-7	DEFECT
// it is a new file // set the revision but not the prevrevision	WITHOUT_CLASSIFICATION	0.9999771204634647	WITHOUT_CLASSIFICATION	2.2879536535415095E-5	DEFECT
// it is a modified file // set the revision and the prevrevision	WITHOUT_CLASSIFICATION	0.9999989833187941	WITHOUT_CLASSIFICATION	1.0166812059051054E-6	DEFECT
// it is a removed file	WITHOUT_CLASSIFICATION	0.999994740660532	WITHOUT_CLASSIFICATION	5.259339468022071E-6	DEFECT
/* special headers */	WITHOUT_CLASSIFICATION	0.9999988910452183	WITHOUT_CLASSIFICATION	1.1089547817538077E-6	DEFECT
// prepare for the auto select mechanism	WITHOUT_CLASSIFICATION	0.9999999878927766	WITHOUT_CLASSIFICATION	1.210722350083982E-8	DEFECT
// try MIME format	WITHOUT_CLASSIFICATION	0.9999920668459242	WITHOUT_CLASSIFICATION	7.933154075705695E-6	DEFECT
// SMTP auth only allowed with MIME mail	WITHOUT_CLASSIFICATION	0.9999743919948907	WITHOUT_CLASSIFICATION	2.5608005109291207E-5	DEFECT
// SSL only allowed with MIME mail	WITHOUT_CLASSIFICATION	0.9999496818013529	WITHOUT_CLASSIFICATION	5.031819864716413E-5	DEFECT
// try UU format	WITHOUT_CLASSIFICATION	0.9999989609693718	WITHOUT_CLASSIFICATION	1.039030628236558E-6	DEFECT
// try plain format	WITHOUT_CLASSIFICATION	0.9999992813153208	WITHOUT_CLASSIFICATION	7.186846792045804E-7	DEFECT
// a valid mailer must be present by now	WITHOUT_CLASSIFICATION	0.99999987126653	WITHOUT_CLASSIFICATION	1.2873346994383317E-7	DEFECT
// a valid message is required	WITHOUT_CLASSIFICATION	0.9999977000062018	WITHOUT_CLASSIFICATION	2.2999937982247197E-6	DEFECT
// an address to send from is required	WITHOUT_CLASSIFICATION	0.9999718250517825	WITHOUT_CLASSIFICATION	2.8174948217407277E-5	DEFECT
// at least one address to send to/cc/bcc is required	WITHOUT_CLASSIFICATION	0.9999969366003387	WITHOUT_CLASSIFICATION	3.0633996612402187E-6	DEFECT
// set the mimetype if not done already (and required)	WITHOUT_CLASSIFICATION	0.9999976670098937	WITHOUT_CLASSIFICATION	2.3329901064055804E-6	DEFECT
// set the character set if not done already (and required)	WITHOUT_CLASSIFICATION	0.9999997435548933	WITHOUT_CLASSIFICATION	2.564451067414839E-7	DEFECT
// identify which files should be attached	WITHOUT_CLASSIFICATION	0.999971498231177	WITHOUT_CLASSIFICATION	2.850176882298961E-5	DEFECT
// let the user know what's going to happen	WITHOUT_CLASSIFICATION	0.9999933556147823	WITHOUT_CLASSIFICATION	6.644385217633871E-6	DEFECT
// pass the params to the mailer	WITHOUT_CLASSIFICATION	0.9999923938595915	WITHOUT_CLASSIFICATION	7.60614040847936E-6	DEFECT
// send the email	WITHOUT_CLASSIFICATION	0.9999997077940338	WITHOUT_CLASSIFICATION	2.92205966189054E-7	DEFECT
// let the user know what happened	WITHOUT_CLASSIFICATION	0.9999962034860567	WITHOUT_CLASSIFICATION	3.796513943358951E-6	DEFECT
// CheckStyle:MemberNameCheck ON	WITHOUT_CLASSIFICATION	0.9999990228927881	WITHOUT_CLASSIFICATION	9.771072118204615E-7	DEFECT
// Read message from a file	WITHOUT_CLASSIFICATION	0.9999990035507639	WITHOUT_CLASSIFICATION	9.964492360370966E-7	DEFECT
// Make a limited attempt to extract a sanitized name and email address // Algorithm based on the one found in Ant's MailMessage.java	WITHOUT_CLASSIFICATION	0.9999972727812556	WITHOUT_CLASSIFICATION	2.72721874432162E-6	DEFECT
// shortcut for "<address>"	WITHOUT_CLASSIFICATION	0.9999999666286482	WITHOUT_CLASSIFICATION	3.337135186864111E-8	DEFECT
// support "address (name)"	WITHOUT_CLASSIFICATION	0.9999996317296865	WITHOUT_CLASSIFICATION	3.682703133773526E-7	DEFECT
// support "(name) address"	WITHOUT_CLASSIFICATION	0.9999995500845149	WITHOUT_CLASSIFICATION	4.499154850353618E-7	DEFECT
// To work properly with national charsets we have to use // implementation of interface javax.activation.DataSource	WITHOUT_CLASSIFICATION	0.9991777731788696	WITHOUT_CLASSIFICATION	8.222268211303914E-4	DEFECT
// Must be like "text/plain; charset=windows-1251"	WITHOUT_CLASSIFICATION	0.9999999790779558	WITHOUT_CLASSIFICATION	2.0922044203944706E-8	DEFECT
// Aside, the JDK is clearly unaware of the Scottish // 'session', which involves excessive quantities of // alcohol :-)	WITHOUT_CLASSIFICATION	0.9999986368280962	WITHOUT_CLASSIFICATION	1.3631719038483443E-6	DEFECT
// SMTP provider	WITHOUT_CLASSIFICATION	0.9999899517680217	WITHOUT_CLASSIFICATION	1.0048231978283878E-5	DEFECT
//create the message	WITHOUT_CLASSIFICATION	0.9999999556419836	WITHOUT_CLASSIFICATION	4.435801633921819E-8	DEFECT
//set the sender	WITHOUT_CLASSIFICATION	0.9999987673892208	WITHOUT_CLASSIFICATION	1.2326107792189424E-6	DEFECT
// set the reply to addresses	WITHOUT_CLASSIFICATION	0.999999980015192	WITHOUT_CLASSIFICATION	1.99848081133121E-8	DEFECT
// Choosing character set of the mail message // First: looking it from MimeType	WITHOUT_CLASSIFICATION	0.999999285647244	WITHOUT_CLASSIFICATION	7.143527559176093E-7	DEFECT
// Assign/reassign message charset from MimeType	WITHOUT_CLASSIFICATION	0.9999998743223653	WITHOUT_CLASSIFICATION	1.2567763465380146E-7	DEFECT
// Next: looking if charset having explicit definition	WITHOUT_CLASSIFICATION	0.9999998051274174	WITHOUT_CLASSIFICATION	1.9487258261907205E-7	DEFECT
// Using default	WITHOUT_CLASSIFICATION	0.9999999182215192	WITHOUT_CLASSIFICATION	8.177848084036604E-8	DEFECT
// Using javax.activation.DataSource paradigm	WITHOUT_CLASSIFICATION	0.9999999676175232	WITHOUT_CLASSIFICATION	3.23824768104876E-8	DEFECT
// Assuming mime type in form "text/XXXX; charset=XXXXXX"	WITHOUT_CLASSIFICATION	0.9999995175033453	WITHOUT_CLASSIFICATION	4.824966546579214E-7	DEFECT
// Skip 'charset='	WITHOUT_CLASSIFICATION	0.9999999681375915	WITHOUT_CLASSIFICATION	3.186240859375287E-8	DEFECT
// Scanner to find our inputs // list of files to process	WITHOUT_CLASSIFICATION	0.9999998052184154	WITHOUT_CLASSIFICATION	1.9478158460834563E-7	DEFECT
// default srcDir to basedir	WITHOUT_CLASSIFICATION	0.9999998891538875	WITHOUT_CLASSIFICATION	1.108461124229387E-7	DEFECT
// Require destDir	WITHOUT_CLASSIFICATION	0.9999971321940297	WITHOUT_CLASSIFICATION	2.8678059702221015E-6	DEFECT
// if src and dest dirs are the same, require the extension // to be set, so we don't stomp every file.  One could still // include a file with the same extension, but ....	WITHOUT_CLASSIFICATION	0.9999771706313031	WITHOUT_CLASSIFICATION	2.2829368696940804E-5	DEFECT
// File to convert // where to put the results	WITHOUT_CLASSIFICATION	0.999999938354471	WITHOUT_CLASSIFICATION	6.164552901014819E-8	DEFECT
// Build the full file names	WITHOUT_CLASSIFICATION	0.999997622588083	WITHOUT_CLASSIFICATION	2.377411916974365E-6	DEFECT
// Make sure we're not about to clobber something	WITHOUT_CLASSIFICATION	0.9999999374053886	WITHOUT_CLASSIFICATION	6.259461141765958E-8	DEFECT
// Make intermediate directories if needed // XXX JDK 1.1 doesn't have File.getParentFile,	WITHOUT_CLASSIFICATION	0.9998556579849831	WITHOUT_CLASSIFICATION	1.4434201501679862E-4	DEFECT
//this.fork = s;	WITHOUT_CLASSIFICATION	0.9999992225313747	WITHOUT_CLASSIFICATION	7.774686251882037E-7	DEFECT
//TODO: use ANTLR to parse the grammar file to do this.	WITHOUT_CLASSIFICATION	0.9953443841609334	WITHOUT_CLASSIFICATION	0.004655615839066554	DEFECT
// if no output directory is specified, used the target's directory	WITHOUT_CLASSIFICATION	0.9999999999269421	WITHOUT_CLASSIFICATION	7.305790051554737E-11	DEFECT
// first off, make sure that we've got a from and to extension	WITHOUT_CLASSIFICATION	0.9999998571536141	WITHOUT_CLASSIFICATION	1.4284638583870616E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc // CheckStyle:MemberNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9999998951105344	WITHOUT_CLASSIFICATION	1.0488946556352988E-7	DEFECT
// CheckStyle:MemberNameCheck ON // CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999524510397	WITHOUT_CLASSIFICATION	4.754896041969147E-8	DEFECT
// Error strings	WITHOUT_CLASSIFICATION	0.999987467650613	WITHOUT_CLASSIFICATION	1.2532349387098366E-5	DEFECT
//validating	WITHOUT_CLASSIFICATION	0.9999964483294497	WITHOUT_CLASSIFICATION	3.5516705501955574E-6	DEFECT
//set the schema source for the doc	WITHOUT_CLASSIFICATION	0.9999999728666976	WITHOUT_CLASSIFICATION	2.7133302330161613E-8	DEFECT
//set the schema source for the doc	WITHOUT_CLASSIFICATION	0.9999999728666976	WITHOUT_CLASSIFICATION	2.7133302330161613E-8	DEFECT
//enable XSD	WITHOUT_CLASSIFICATION	0.9999984866301224	WITHOUT_CLASSIFICATION	1.5133698776638209E-6	DEFECT
//validate the parser type	WITHOUT_CLASSIFICATION	0.9999953075299461	WITHOUT_CLASSIFICATION	4.692470053874783E-6	DEFECT
//couldnt use the xerces or jaxp calls	WITHOUT_CLASSIFICATION	0.9999991769280832	WITHOUT_CLASSIFICATION	8.230719169575538E-7	DEFECT
//enable schema checking	WITHOUT_CLASSIFICATION	0.999999766254153	WITHOUT_CLASSIFICATION	2.3374584700093844E-7	DEFECT
//turn off DTDs if desired	WITHOUT_CLASSIFICATION	0.9999998759608435	WITHOUT_CLASSIFICATION	1.2403915663004007E-7	DEFECT
//schema declarations go in next	WITHOUT_CLASSIFICATION	0.999993901477037	WITHOUT_CLASSIFICATION	6.098522962972203E-6	DEFECT
// first off, make sure that we've got a srcdir and destdir	WITHOUT_CLASSIFICATION	0.9999999595982385	WITHOUT_CLASSIFICATION	4.040176152716204E-8	DEFECT
//enable schema //setFeature(XmlConstants.FEATURE_VALIDATION, false);	WITHOUT_CLASSIFICATION	0.9999998674056888	WITHOUT_CLASSIFICATION	1.3259431130837142E-7	DEFECT
//this is almost implausible, but required handling	WITHOUT_CLASSIFICATION	0.9999405967280158	WITHOUT_CLASSIFICATION	5.9403271984195494E-5	DEFECT
//SchemaLocation	WITHOUT_CLASSIFICATION	0.9999974472773765	WITHOUT_CLASSIFICATION	2.552722623497127E-6	DEFECT
//private Path extdirs;	WITHOUT_CLASSIFICATION	0.9999976255672411	WITHOUT_CLASSIFICATION	2.374432758800596E-6	DEFECT
// first off, make sure that we've got a srcdir	WITHOUT_CLASSIFICATION	0.9999999447327538	WITHOUT_CLASSIFICATION	5.5267246158600024E-8	DEFECT
// Keep jdk 1.1 compliant so others can use this	WITHOUT_CLASSIFICATION	0.9999999409995689	WITHOUT_CLASSIFICATION	5.9000430980061044E-8	DEFECT
// second CR -> EOL + possibly empty line	WITHOUT_CLASSIFICATION	0.999999697488274	WITHOUT_CLASSIFICATION	3.0251172595986513E-7	DEFECT
// first CR in this line	WITHOUT_CLASSIFICATION	0.9999997764031614	WITHOUT_CLASSIFICATION	2.2359683866879697E-7	DEFECT
// LF -> EOL	WITHOUT_CLASSIFICATION	0.9999997350937109	WITHOUT_CLASSIFICATION	2.649062892207235E-7	DEFECT
// any other char	WITHOUT_CLASSIFICATION	0.9999998595152042	WITHOUT_CLASSIFICATION	1.404847959290827E-7	DEFECT
// Mac-style linebreak or EOF (or both)	WITHOUT_CLASSIFICATION	0.9999999312960163	WITHOUT_CLASSIFICATION	6.870398361577713E-8	DEFECT
// variables to hold arguments	WITHOUT_CLASSIFICATION	0.9999998761684488	WITHOUT_CLASSIFICATION	1.238315512465698E-7	DEFECT
// ?? Should this be the default for ant?	WITHOUT_CLASSIFICATION	0.9999999561741715	WITHOUT_CLASSIFICATION	4.3825828614695E-8	DEFECT
// constants for the messages to suppress by flags and their corresponding properties	WITHOUT_CLASSIFICATION	0.9998853701875663	WITHOUT_CLASSIFICATION	1.1462981243373426E-4	DEFECT
// other implementation variables	WITHOUT_CLASSIFICATION	0.9999998537446975	WITHOUT_CLASSIFICATION	1.4625530255301375E-7	DEFECT
// classpath makes no sense	WITHOUT_CLASSIFICATION	0.9999997661452193	WITHOUT_CLASSIFICATION	2.3385478072287374E-7	DEFECT
// destDir	WITHOUT_CLASSIFICATION	0.9999993981264687	WITHOUT_CLASSIFICATION	6.018735313187611E-7	DEFECT
// srcDir	WITHOUT_CLASSIFICATION	0.9999996504278333	WITHOUT_CLASSIFICATION	3.495721666425594E-7	DEFECT
// copy the source and support files	WITHOUT_CLASSIFICATION	0.9999996884479926	WITHOUT_CLASSIFICATION	3.1155200734698867E-7	DEFECT
// compile the source files	WITHOUT_CLASSIFICATION	0.9999999440478888	WITHOUT_CLASSIFICATION	5.595211111687293E-8	DEFECT
// create an array of strings for input to the compiler: one array // comes from the compile options, the other from the compileList	WITHOUT_CLASSIFICATION	0.9999984334471811	WITHOUT_CLASSIFICATION	1.56655281891951E-6	DEFECT
// create a single array of arguments for the compiler	WITHOUT_CLASSIFICATION	0.9999997200911239	WITHOUT_CLASSIFICATION	2.799088760565561E-7	DEFECT
// print nice output about what we are doing for the log	WITHOUT_CLASSIFICATION	0.9999999907464009	WITHOUT_CLASSIFICATION	9.253599125095883E-9	DEFECT
// need to set java.class.path property and restore it later // since the NetRexx compiler has no option for the classpath	WITHOUT_CLASSIFICATION	0.9999994947054317	WITHOUT_CLASSIFICATION	5.052945682440667E-7	DEFECT
// path is mentioned in the message	WITHOUT_CLASSIFICATION	0.9999971202050808	WITHOUT_CLASSIFICATION	2.8797949192107365E-6	DEFECT
// verbose level logging for suppressed messages	WITHOUT_CLASSIFICATION	0.9999999964284293	WITHOUT_CLASSIFICATION	3.5715705730259852E-9	DEFECT
// error level logging for compiler errors	WITHOUT_CLASSIFICATION	0.999999769079865	WITHOUT_CLASSIFICATION	2.309201350393404E-7	DEFECT
// warning for all warning messages	WITHOUT_CLASSIFICATION	0.9999999537858253	WITHOUT_CLASSIFICATION	4.6214174708063576E-8	DEFECT
// info level for the rest.	WITHOUT_CLASSIFICATION	0.9999998315592676	WITHOUT_CLASSIFICATION	1.6844073249578104E-7	DEFECT
// need to reset java.class.path property // since the NetRexx compiler has no option for the classpath	WITHOUT_CLASSIFICATION	0.9999999651280463	WITHOUT_CLASSIFICATION	3.4871953688586836E-8	DEFECT
// add our classpath to the mix	WITHOUT_CLASSIFICATION	0.9999998022985599	WITHOUT_CLASSIFICATION	1.9770144013368987E-7	DEFECT
// add the system classpath // addExistingToClasspath(classpath,System.getProperty("java.class.path"));	WITHOUT_CLASSIFICATION	0.99999999650031	WITHOUT_CLASSIFICATION	3.4996900314597495E-9	DEFECT
// XMLReader used to validation process	WITHOUT_CLASSIFICATION	0.9999977848842496	WITHOUT_CLASSIFICATION	2.2151157503912817E-6	DEFECT
// turn validation on	WITHOUT_CLASSIFICATION	0.9999964513421246	WITHOUT_CLASSIFICATION	3.548657875512202E-6	DEFECT
// set the feature from the attribute list	WITHOUT_CLASSIFICATION	0.9999999960355156	WITHOUT_CLASSIFICATION	3.96448441433788E-9	DEFECT
// Sets properties	WITHOUT_CLASSIFICATION	0.9999983999612854	WITHOUT_CLASSIFICATION	1.6000387146247234E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999998952218317	WITHOUT_CLASSIFICATION	1.0477816833988038E-7	DEFECT
// quick exit if the target is up to date	WITHOUT_CLASSIFICATION	0.9999999892777633	WITHOUT_CLASSIFICATION	1.0722236759425012E-8	DEFECT
// ant task properties // defaults // CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999978958796	WITHOUT_CLASSIFICATION	2.1041204002620242E-8	DEFECT
// to report sax parsing errors // CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.999973388363489	WITHOUT_CLASSIFICATION	2.6611636510882518E-5	DEFECT
// then check it implements XMLReader	WITHOUT_CLASSIFICATION	0.9999589048818716	WITHOUT_CLASSIFICATION	4.10951181283403E-5	DEFECT
// see if it is a SAX1 Parser	WITHOUT_CLASSIFICATION	0.9999991042126506	WITHOUT_CLASSIFICATION	8.957873493512617E-7	DEFECT
// Validates property	WITHOUT_CLASSIFICATION	0.999992656007065	WITHOUT_CLASSIFICATION	7.3439929349173455E-6	DEFECT
//for every file, we have a new instance of the validator	WITHOUT_CLASSIFICATION	0.9999971996230625	WITHOUT_CLASSIFICATION	2.8003769373765315E-6	DEFECT
// if this is not a valid file: just use the uri	WITHOUT_CLASSIFICATION	0.9999987732778564	WITHOUT_CLASSIFICATION	1.226722143602109E-6	DEFECT
// Property	WITHOUT_CLASSIFICATION	0.9999943961478287	WITHOUT_CLASSIFICATION	5.603852171312668E-6	DEFECT
/*     * I'm not fond of this pattern: "sub-method expected to throw     * task-cancelling exceptions".  It feels too much like programming     * for side-effects to me...     */	WITHOUT_CLASSIFICATION	0.7649209881357821	WITHOUT_CLASSIFICATION	0.23507901186421773	DEFECT
// get files from old methods - includes and nested include	WITHOUT_CLASSIFICATION	0.999999549102771	WITHOUT_CLASSIFICATION	4.5089722897236693E-7	DEFECT
// Create the stream pumpers to forward listcab's stdout and stderr to the log // note: listcab is an interactive program, and issues prompts for every new line. //       Therefore, make it show only with verbose logging turned on.	WITHOUT_CLASSIFICATION	0.9984290589054741	WITHOUT_CLASSIFICATION	0.0015709410945259738	DEFECT
// Pump streams asynchronously	WITHOUT_CLASSIFICATION	0.9999998927738117	WITHOUT_CLASSIFICATION	1.0722618820190775E-7	DEFECT
// A wild default for when the thread is interrupted	WITHOUT_CLASSIFICATION	0.9999997860313029	WITHOUT_CLASSIFICATION	2.1396869708463327E-7	DEFECT
// Wait for the process to finish	WITHOUT_CLASSIFICATION	0.9999997934208502	WITHOUT_CLASSIFICATION	2.0657914963336687E-7	DEFECT
// Wait for the end of output and error streams	WITHOUT_CLASSIFICATION	0.9999636261064797	WITHOUT_CLASSIFICATION	3.637389352022049E-5	DEFECT
// Informative summary message in case of errors	WITHOUT_CLASSIFICATION	0.9999997658188952	WITHOUT_CLASSIFICATION	2.3418110479893752E-7	DEFECT
// die if cabarc fails	WITHOUT_CLASSIFICATION	0.9999961638516555	WITHOUT_CLASSIFICATION	3.8361483445857305E-6	DEFECT
// Use this to prepend a message to the properties file	WITHOUT_CLASSIFICATION	0.9999947537120871	WITHOUT_CLASSIFICATION	5.246287912820817E-6	DEFECT
/* ========================================================================    *    * Constructors    */	WITHOUT_CLASSIFICATION	0.9999999818177441	WITHOUT_CLASSIFICATION	1.8182256012802436E-8	DEFECT
/* ========================================================================    *    * Methods    */	WITHOUT_CLASSIFICATION	0.9999987866500889	WITHOUT_CLASSIFICATION	1.2133499110212353E-6	DEFECT
// Create the PropertyFile	WITHOUT_CLASSIFICATION	0.9999998300506223	WITHOUT_CLASSIFICATION	1.6994937777753882E-7	DEFECT
// type may be null because it wasn't set	WITHOUT_CLASSIFICATION	0.9999286632512258	WITHOUT_CLASSIFICATION	7.133674877429988E-5	DEFECT
// Default to string type // which means do nothing	WITHOUT_CLASSIFICATION	0.9999999461588133	WITHOUT_CLASSIFICATION	5.384118685990131E-8	DEFECT
// Insert as a string by default	WITHOUT_CLASSIFICATION	0.9999998836333674	WITHOUT_CLASSIFICATION	1.1636663260873115E-7	DEFECT
// swallow	WITHOUT_CLASSIFICATION	0.9999987347901225	WITHOUT_CLASSIFICATION	1.265209877513866E-6	DEFECT
// configure the transformer...	WITHOUT_CLASSIFICATION	0.9999998751577582	WITHOUT_CLASSIFICATION	1.2484224180084898E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999997408296413	WITHOUT_CLASSIFICATION	2.5917035868139013E-7	DEFECT
// If only value is specified, the property is set to it // regardless of its previous value.	WITHOUT_CLASSIFICATION	0.99999998607829	WITHOUT_CLASSIFICATION	1.3921709964419325E-8	DEFECT
// If only default is specified and the property did not // exist in the property file, the property is set to default.	WITHOUT_CLASSIFICATION	0.9999960694377875	WITHOUT_CLASSIFICATION	3.930562212475261E-6	DEFECT
// If value and default are both specified and the property // previously existed in the property file, the property // is set to value.	WITHOUT_CLASSIFICATION	0.9999999728929723	WITHOUT_CLASSIFICATION	2.7107027753493145E-8	DEFECT
// If value and default are both specified and the property // did not exist in the property file, the property is set // to default.	WITHOUT_CLASSIFICATION	0.9999992390406858	WITHOUT_CLASSIFICATION	7.60959314233943E-7	DEFECT
// Property type operations	WITHOUT_CLASSIFICATION	0.9999999329525152	WITHOUT_CLASSIFICATION	6.704748479033064E-8	DEFECT
// Property types	WITHOUT_CLASSIFICATION	0.9999991538872988	WITHOUT_CLASSIFICATION	8.461127012795762E-7	DEFECT
// resetting the stylesheet - reset transformer	WITHOUT_CLASSIFICATION	0.9999988574361133	WITHOUT_CLASSIFICATION	1.1425638867189403E-6	DEFECT
// do we need to reset templates as well	WITHOUT_CLASSIFICATION	0.9999999601136766	WITHOUT_CLASSIFICATION	3.988632333613319E-8	DEFECT
// set parameters on each transformation, maybe something has changed //(e.g. value of file name parameter)	WITHOUT_CLASSIFICATION	0.9999999876015584	WITHOUT_CLASSIFICATION	1.2398441656941007E-8	DEFECT
// end of try-catch	WITHOUT_CLASSIFICATION	0.9999997712882117	WITHOUT_CLASSIFICATION	2.2871178836159457E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999996763950936	WITHOUT_CLASSIFICATION	3.2360490638735057E-7	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.99999795328422	WITHOUT_CLASSIFICATION	2.0467157800256684E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999998952218317	WITHOUT_CLASSIFICATION	1.0477816833988038E-7	DEFECT
// WARN: Don't use the StreamSource(File) ctor. It won't work with // xalan prior to 2.2 because of systemid bugs.	WITHOUT_CLASSIFICATION	0.8945943547411207	WITHOUT_CLASSIFICATION	0.10540564525887934	DEFECT
// Use a stream so that you can close it yourself quickly // and avoid keeping the handle until the object is garbaged. // (always keep control), otherwise you won't be able to delete // the file quickly on windows.	WITHOUT_CLASSIFICATION	0.9999962918555637	WITHOUT_CLASSIFICATION	3.7081444363479903E-6	DEFECT
// not initialized yet, so create the factory	WITHOUT_CLASSIFICATION	0.9999980963522161	WITHOUT_CLASSIFICATION	1.9036477838138113E-6	DEFECT
// specific attributes for the transformer	WITHOUT_CLASSIFICATION	0.9999999984511792	WITHOUT_CLASSIFICATION	1.5488207325688189E-9	DEFECT
// kept for backwards compatibility	WITHOUT_CLASSIFICATION	0.9999995966277444	WITHOUT_CLASSIFICATION	4.033722556202609E-7	DEFECT
// configure factory attributes	WITHOUT_CLASSIFICATION	0.9999998977419203	WITHOUT_CLASSIFICATION	1.0225807956180921E-7	DEFECT
// use XMLCatalog as the entity resolver and URI resolver	WITHOUT_CLASSIFICATION	0.9999757427877883	WITHOUT_CLASSIFICATION	2.425721221166426E-5	DEFECT
// configure output properties	WITHOUT_CLASSIFICATION	0.9999998953477652	WITHOUT_CLASSIFICATION	1.0465223486251301E-7	DEFECT
//copy the properties file	WITHOUT_CLASSIFICATION	0.9999912284348944	WITHOUT_CLASSIFICATION	8.77156510552862E-6	DEFECT
/* load properties from file if specified, otherwise        use Ant's properties */	WITHOUT_CLASSIFICATION	0.9999999987748062	WITHOUT_CLASSIFICATION	1.2251938839413966E-9	DEFECT
// add ant properties	WITHOUT_CLASSIFICATION	0.9999998927925742	WITHOUT_CLASSIFICATION	1.0720742590987538E-7	DEFECT
//sort the list. Makes SCM and manual diffs easier.	WITHOUT_CLASSIFICATION	0.9999998693367511	WITHOUT_CLASSIFICATION	1.3066324891893975E-7	DEFECT
// create XML document	WITHOUT_CLASSIFICATION	0.9999997107551898	WITHOUT_CLASSIFICATION	2.892448103126636E-7	DEFECT
// output properties	WITHOUT_CLASSIFICATION	0.9999996563448529	WITHOUT_CLASSIFICATION	3.436551471227644E-7	DEFECT
// build the command line from what we got the format // as specified in the CCM.EXE help	WITHOUT_CLASSIFICATION	0.9999995058061905	WITHOUT_CLASSIFICATION	4.941938094506491E-7	DEFECT
//create task ok, set this task as the default one	WITHOUT_CLASSIFICATION	0.999999996819788	WITHOUT_CLASSIFICATION	3.1802119708463398E-9	DEFECT
// implementation of org.apache.tools.ant.taskdefs.ExecuteStreamHandler interface	WITHOUT_CLASSIFICATION	0.9999999598151975	WITHOUT_CLASSIFICATION	4.0184802371306165E-8	DEFECT
// build the command line from what we got the format is // ccm co /t .. files // as specified in the CCM.EXE help	WITHOUT_CLASSIFICATION	0.9999982610127973	WITHOUT_CLASSIFICATION	1.7389872026313281E-6	DEFECT
// Default the viewpath to basedir if it is not specified	WITHOUT_CLASSIFICATION	0.999999851533714	WITHOUT_CLASSIFICATION	1.4846628599669036E-7	DEFECT
/*         * If configured to not care about whether the element is         * already checked out to the current view.         * Then check to see if it is checked out.         */	WITHOUT_CLASSIFICATION	0.999999979041803	WITHOUT_CLASSIFICATION	2.095819699540073E-8	DEFECT
// viewpath	WITHOUT_CLASSIFICATION	0.999999482583705	WITHOUT_CLASSIFICATION	5.174162949990069E-7	DEFECT
// ClearCase items	WITHOUT_CLASSIFICATION	0.9999999834175937	WITHOUT_CLASSIFICATION	1.6582406310575717E-8	DEFECT
// -reserved	WITHOUT_CLASSIFICATION	0.9999998444472386	WITHOUT_CLASSIFICATION	1.5555276135198922E-7	DEFECT
// -unreserved	WITHOUT_CLASSIFICATION	0.9999997906495537	WITHOUT_CLASSIFICATION	2.0935044624139744E-7	DEFECT
// -out	WITHOUT_CLASSIFICATION	0.9999964550853271	WITHOUT_CLASSIFICATION	3.5449146729801065E-6	DEFECT
// -ndata	WITHOUT_CLASSIFICATION	0.9999963006986591	WITHOUT_CLASSIFICATION	3.6993013408858945E-6	DEFECT
// -version	WITHOUT_CLASSIFICATION	0.9999995834994576	WITHOUT_CLASSIFICATION	4.1650054242887624E-7	DEFECT
// -nwarn	WITHOUT_CLASSIFICATION	0.9999974186357088	WITHOUT_CLASSIFICATION	2.5813642912502276E-6	DEFECT
// viewpath	WITHOUT_CLASSIFICATION	0.999999482583705	WITHOUT_CLASSIFICATION	5.174162949990069E-7	DEFECT
// build the command line from what we got the format is // cleartool lsco [options...] [viewpath ...] // as specified in the CLEARTOOL.EXE help	WITHOUT_CLASSIFICATION	0.9999997957998621	WITHOUT_CLASSIFICATION	2.042001379863715E-7	DEFECT
// -version	WITHOUT_CLASSIFICATION	0.9999995834994576	WITHOUT_CLASSIFICATION	4.1650054242887624E-7	DEFECT
// -nwarn	WITHOUT_CLASSIFICATION	0.9999974186357088	WITHOUT_CLASSIFICATION	2.5813642912502276E-6	DEFECT
// type value	WITHOUT_CLASSIFICATION	0.9999977284019667	WITHOUT_CLASSIFICATION	2.271598033346073E-6	DEFECT
// -c	WITHOUT_CLASSIFICATION	0.9999983388687199	WITHOUT_CLASSIFICATION	1.6611312800227969E-6	DEFECT
// -c	WITHOUT_CLASSIFICATION	0.9999983388687199	WITHOUT_CLASSIFICATION	1.6611312800227969E-6	DEFECT
// -cfile	WITHOUT_CLASSIFICATION	0.9999995183586613	WITHOUT_CLASSIFICATION	4.816413386110364E-7	DEFECT
// -cfile	WITHOUT_CLASSIFICATION	0.9999995183586613	WITHOUT_CLASSIFICATION	4.816413386110364E-7	DEFECT
// -cfile	WITHOUT_CLASSIFICATION	0.9999995183586613	WITHOUT_CLASSIFICATION	4.816413386110364E-7	DEFECT
// build the command line from what we got. the format is // cleartool checkin [options...] [viewpath ...] // as specified in the CLEARTOOL.EXE help	WITHOUT_CLASSIFICATION	0.9999999118422618	WITHOUT_CLASSIFICATION	8.815773812345525E-8	DEFECT
// -ptime	WITHOUT_CLASSIFICATION	0.9999989362877755	WITHOUT_CLASSIFICATION	1.0637122245252688E-6	DEFECT
// Throws EjbcException if unsuccessful	WITHOUT_CLASSIFICATION	0.9999986669796089	WITHOUT_CLASSIFICATION	1.33302039107295E-6	DEFECT
// -keep	WITHOUT_CLASSIFICATION	0.9999980158288099	WITHOUT_CLASSIFICATION	1.9841711900995004E-6	DEFECT
// -identical	WITHOUT_CLASSIFICATION	0.9999986363733708	WITHOUT_CLASSIFICATION	1.3636266291439775E-6	DEFECT
// Check for required attributes	WITHOUT_CLASSIFICATION	0.9999997177455683	WITHOUT_CLASSIFICATION	2.8225443174230056E-7	DEFECT
// build the command line from what we got. the format is // cleartool mkattr [options...] [viewpath ...] // as specified in the CLEARTOOL help	WITHOUT_CLASSIFICATION	0.9999998675727357	WITHOUT_CLASSIFICATION	1.3242726429415792E-7	DEFECT
// -replace	WITHOUT_CLASSIFICATION	0.9999999632091916	WITHOUT_CLASSIFICATION	3.6790808431789014E-8	DEFECT
// -recurse	WITHOUT_CLASSIFICATION	0.9999999738589125	WITHOUT_CLASSIFICATION	2.614108747989468E-8	DEFECT
// type	WITHOUT_CLASSIFICATION	0.9999879741316321	WITHOUT_CLASSIFICATION	1.2025868367901089E-5	DEFECT
// viewpath	WITHOUT_CLASSIFICATION	0.999999482583705	WITHOUT_CLASSIFICATION	5.174162949990069E-7	DEFECT
// viewpath	WITHOUT_CLASSIFICATION	0.999999482583705	WITHOUT_CLASSIFICATION	5.174162949990069E-7	DEFECT
// viewpath	WITHOUT_CLASSIFICATION	0.999999482583705	WITHOUT_CLASSIFICATION	5.174162949990069E-7	DEFECT
// ClearCase items	WITHOUT_CLASSIFICATION	0.9999999834175937	WITHOUT_CLASSIFICATION	1.6582406310575717E-8	DEFECT
// ClearCase items	WITHOUT_CLASSIFICATION	0.9999999834175937	WITHOUT_CLASSIFICATION	1.6582406310575717E-8	DEFECT
// -nwarn	WITHOUT_CLASSIFICATION	0.9999974186357088	WITHOUT_CLASSIFICATION	2.5813642912502276E-6	DEFECT
// -c	WITHOUT_CLASSIFICATION	0.9999983388687199	WITHOUT_CLASSIFICATION	1.6611312800227969E-6	DEFECT
// -c	WITHOUT_CLASSIFICATION	0.9999983388687199	WITHOUT_CLASSIFICATION	1.6611312800227969E-6	DEFECT
// -cfile	WITHOUT_CLASSIFICATION	0.9999995183586613	WITHOUT_CLASSIFICATION	4.816413386110364E-7	DEFECT
// -ptime	WITHOUT_CLASSIFICATION	0.9999989362877755	WITHOUT_CLASSIFICATION	1.0637122245252688E-6	DEFECT
// -keep	WITHOUT_CLASSIFICATION	0.9999980158288099	WITHOUT_CLASSIFICATION	1.9841711900995004E-6	DEFECT
// build the command line from what we got the format is // cleartool lock [options...] // as specified in the CLEARTOOL.EXE help	WITHOUT_CLASSIFICATION	0.9999998326225258	WITHOUT_CLASSIFICATION	1.6737747410720936E-7	DEFECT
// Windows quoting of the value	WITHOUT_CLASSIFICATION	0.9999934707148681	WITHOUT_CLASSIFICATION	6.529285131899253E-6	DEFECT
// build the command line from what we got. the format is // cleartool mkelem [options...] [viewpath ...] // as specified in the CLEARTOOL.EXE help	WITHOUT_CLASSIFICATION	0.9999994559660326	WITHOUT_CLASSIFICATION	5.440339673562697E-7	DEFECT
/*         * Should choose either -ci or -nco.         */	WITHOUT_CLASSIFICATION	0.9999998575406525	WITHOUT_CLASSIFICATION	1.4245934754223074E-7	DEFECT
// -nco	WITHOUT_CLASSIFICATION	0.9999960238909116	WITHOUT_CLASSIFICATION	3.976109088445082E-6	DEFECT
// -nco	WITHOUT_CLASSIFICATION	0.9999960238909116	WITHOUT_CLASSIFICATION	3.976109088445082E-6	DEFECT
// Check the command line options	WITHOUT_CLASSIFICATION	0.9999996707755281	WITHOUT_CLASSIFICATION	3.292244718673004E-7	DEFECT
// -ci	WITHOUT_CLASSIFICATION	0.9999974372925454	WITHOUT_CLASSIFICATION	2.562707454584327E-6	DEFECT
// object selector	WITHOUT_CLASSIFICATION	0.9999998016404823	WITHOUT_CLASSIFICATION	1.9835951763777566E-7	DEFECT
// build the command line from what we got the format is // cleartool uncheckout [options...] [viewpath ...] // as specified in the CLEARTOOL.EXE help	WITHOUT_CLASSIFICATION	0.9999999578709126	WITHOUT_CLASSIFICATION	4.2129087513663706E-8	DEFECT
// -master	WITHOUT_CLASSIFICATION	0.999999955095152	WITHOUT_CLASSIFICATION	4.490484791626173E-8	DEFECT
// -rm	WITHOUT_CLASSIFICATION	0.999999375187987	WITHOUT_CLASSIFICATION	6.24812013037143E-7	DEFECT
// -eltype	WITHOUT_CLASSIFICATION	0.9999946309950563	WITHOUT_CLASSIFICATION	5.369004943823769E-6	DEFECT
// viewpath	WITHOUT_CLASSIFICATION	0.999999482583705	WITHOUT_CLASSIFICATION	5.174162949990069E-7	DEFECT
// -version	WITHOUT_CLASSIFICATION	0.9999995834994576	WITHOUT_CLASSIFICATION	4.1650054242887624E-7	DEFECT
// -c	WITHOUT_CLASSIFICATION	0.9999983388687199	WITHOUT_CLASSIFICATION	1.6611312800227969E-6	DEFECT
// -c	WITHOUT_CLASSIFICATION	0.9999983388687199	WITHOUT_CLASSIFICATION	1.6611312800227969E-6	DEFECT
// -cfile	WITHOUT_CLASSIFICATION	0.9999995183586613	WITHOUT_CLASSIFICATION	4.816413386110364E-7	DEFECT
// -cfile	WITHOUT_CLASSIFICATION	0.9999995183586613	WITHOUT_CLASSIFICATION	4.816413386110364E-7	DEFECT
// -rmall -force	WITHOUT_CLASSIFICATION	0.9999998300620103	WITHOUT_CLASSIFICATION	1.699379896535563E-7	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999992385971012	WITHOUT_CLASSIFICATION	7.614028988400122E-7	DEFECT
// build the command line from what we got. the format is // cleartool checkin [options...] [viewpath ...] // as specified in the CLEARTOOL.EXE help	WITHOUT_CLASSIFICATION	0.9999999118422618	WITHOUT_CLASSIFICATION	8.815773812345525E-8	DEFECT
// -identical	WITHOUT_CLASSIFICATION	0.9999986363733708	WITHOUT_CLASSIFICATION	1.3636266291439775E-6	DEFECT
// Check for required attributes	WITHOUT_CLASSIFICATION	0.9999997177455683	WITHOUT_CLASSIFICATION	2.8225443174230056E-7	DEFECT
// Check for required attributes	WITHOUT_CLASSIFICATION	0.9999997177455683	WITHOUT_CLASSIFICATION	2.8225443174230056E-7	DEFECT
// -replace	WITHOUT_CLASSIFICATION	0.9999999632091916	WITHOUT_CLASSIFICATION	3.6790808431789014E-8	DEFECT
// -recurse	WITHOUT_CLASSIFICATION	0.9999999738589125	WITHOUT_CLASSIFICATION	2.614108747989468E-8	DEFECT
// type	WITHOUT_CLASSIFICATION	0.9999879741316321	WITHOUT_CLASSIFICATION	1.2025868367901089E-5	DEFECT
// Returns list of EJBs for processing	WITHOUT_CLASSIFICATION	0.9999994851932017	WITHOUT_CLASSIFICATION	5.148067982281909E-7	DEFECT
// build the command line from what we got. the format is // cleartool rmtype [options...] type-selector... // as specified in the CLEARTOOL help	WITHOUT_CLASSIFICATION	0.9999998742114022	WITHOUT_CLASSIFICATION	1.2578859779409885E-7	DEFECT
// type-kind:type-name	WITHOUT_CLASSIFICATION	0.9999319688221556	WITHOUT_CLASSIFICATION	6.803117784433614E-5	DEFECT
// -ignore	WITHOUT_CLASSIFICATION	0.9999998163957008	WITHOUT_CLASSIFICATION	1.836042991043991E-7	DEFECT
// Return the type-selector	WITHOUT_CLASSIFICATION	0.9999988770029687	WITHOUT_CLASSIFICATION	1.1229970311827266E-6	DEFECT
// -full	WITHOUT_CLASSIFICATION	0.999996747408332	WITHOUT_CLASSIFICATION	3.2525916681479786E-6	DEFECT
// -incremental	WITHOUT_CLASSIFICATION	0.9999987613091388	WITHOUT_CLASSIFICATION	1.2386908613137657E-6	DEFECT
// -nlabel	WITHOUT_CLASSIFICATION	0.9999996217741731	WITHOUT_CLASSIFICATION	3.782258268325165E-7	DEFECT
// baseline_root_name	WITHOUT_CLASSIFICATION	0.9999999382236169	WITHOUT_CLASSIFICATION	6.177638315597459E-8	DEFECT
// viewpath	WITHOUT_CLASSIFICATION	0.999999482583705	WITHOUT_CLASSIFICATION	5.174162949990069E-7	DEFECT
// -c	WITHOUT_CLASSIFICATION	0.9999983388687199	WITHOUT_CLASSIFICATION	1.6611312800227969E-6	DEFECT
// -cfile	WITHOUT_CLASSIFICATION	0.9999995183586613	WITHOUT_CLASSIFICATION	4.816413386110364E-7	DEFECT
// -ptime	WITHOUT_CLASSIFICATION	0.9999989362877755	WITHOUT_CLASSIFICATION	1.0637122245252688E-6	DEFECT
// Check for required attributes	WITHOUT_CLASSIFICATION	0.9999997177455683	WITHOUT_CLASSIFICATION	2.8225443174230056E-7	DEFECT
// -replace	WITHOUT_CLASSIFICATION	0.9999999632091916	WITHOUT_CLASSIFICATION	3.6790808431789014E-8	DEFECT
// -replace	WITHOUT_CLASSIFICATION	0.9999999632091916	WITHOUT_CLASSIFICATION	3.6790808431789014E-8	DEFECT
// build the command line from what we got the format is // cleartool lock [options...] // as specified in the CLEARTOOL.EXE help	WITHOUT_CLASSIFICATION	0.9999998326225258	WITHOUT_CLASSIFICATION	1.6737747410720936E-7	DEFECT
// Check the command line options	WITHOUT_CLASSIFICATION	0.9999996707755281	WITHOUT_CLASSIFICATION	3.292244718673004E-7	DEFECT
// Check the command line options	WITHOUT_CLASSIFICATION	0.9999996707755281	WITHOUT_CLASSIFICATION	3.292244718673004E-7	DEFECT
// object selector	WITHOUT_CLASSIFICATION	0.9999998016404823	WITHOUT_CLASSIFICATION	1.9835951763777566E-7	DEFECT
// -ordinary	WITHOUT_CLASSIFICATION	0.9999993203254439	WITHOUT_CLASSIFICATION	6.796745559903863E-7	DEFECT
// build the command line from what we got the format is // cleartool update [options...] [viewpath ...] // as specified in the CLEARTOOL.EXE help	WITHOUT_CLASSIFICATION	0.9999998917846717	WITHOUT_CLASSIFICATION	1.0821532828697104E-7	DEFECT
// For debugging	WITHOUT_CLASSIFICATION	0.999997921062247	WITHOUT_CLASSIFICATION	2.0789377529828422E-6	DEFECT
// -log logname	WITHOUT_CLASSIFICATION	0.9999990962617195	WITHOUT_CLASSIFICATION	9.037382805513205E-7	DEFECT
// -graphical	WITHOUT_CLASSIFICATION	0.9999997028263888	WITHOUT_CLASSIFICATION	2.971736111861526E-7	DEFECT
// -overwrite	WITHOUT_CLASSIFICATION	0.9999997542873243	WITHOUT_CLASSIFICATION	2.4571267571209193E-7	DEFECT
// -global	WITHOUT_CLASSIFICATION	0.9999992096433553	WITHOUT_CLASSIFICATION	7.903566446689282E-7	DEFECT
// -rename	WITHOUT_CLASSIFICATION	0.9999994243326608	WITHOUT_CLASSIFICATION	5.756673391998334E-7	DEFECT
// -obsolete	WITHOUT_CLASSIFICATION	0.9999998020678875	WITHOUT_CLASSIFICATION	1.9793211253113694E-7	DEFECT
// -noverwrite	WITHOUT_CLASSIFICATION	0.9999997569120365	WITHOUT_CLASSIFICATION	2.4308796354766256E-7	DEFECT
// build the command line from what we got. the format is // cleartool mklbtype [options...] type-selector... // as specified in the CLEARTOOL help	WITHOUT_CLASSIFICATION	0.9999996494918648	WITHOUT_CLASSIFICATION	3.505081352373798E-7	DEFECT
// -ctime	WITHOUT_CLASSIFICATION	0.999998673621336	WITHOUT_CLASSIFICATION	1.3263786639030514E-6	DEFECT
// -pbranch	WITHOUT_CLASSIFICATION	0.999999932100043	WITHOUT_CLASSIFICATION	6.789995700031156E-8	DEFECT
// File[] filesInDir = directory.listFiles();	WITHOUT_CLASSIFICATION	0.999999653759592	WITHOUT_CLASSIFICATION	3.462404080378342E-7	DEFECT
// -shared	WITHOUT_CLASSIFICATION	0.9999999332568668	WITHOUT_CLASSIFICATION	6.674313325914206E-8	DEFECT
// type-name@vob	WITHOUT_CLASSIFICATION	0.9999955056560436	WITHOUT_CLASSIFICATION	4.494343956456082E-6	DEFECT
// we have a file. create a stream for it	WITHOUT_CLASSIFICATION	0.9999999570518338	WITHOUT_CLASSIFICATION	4.2948166326432385E-8	DEFECT
// default directory to the project's base directory	WITHOUT_CLASSIFICATION	0.9999998647416132	WITHOUT_CLASSIFICATION	1.3525838675625868E-7	DEFECT
// assume the worst	WITHOUT_CLASSIFICATION	0.999999927916579	WITHOUT_CLASSIFICATION	7.208342099722723E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999998952218317	WITHOUT_CLASSIFICATION	1.0477816833988038E-7	DEFECT
// create a data input stream from the jar // input stream	WITHOUT_CLASSIFICATION	0.9999999106415184	WITHOUT_CLASSIFICATION	8.935848160600878E-8	DEFECT
// this iterator is exhausted. Can we pop one off the stack	WITHOUT_CLASSIFICATION	0.9999999465085125	WITHOUT_CLASSIFICATION	5.349148745019856E-8	DEFECT
// we get the root classes and build up a set of // classes upon which they depend	WITHOUT_CLASSIFICATION	0.9999997631236142	WITHOUT_CLASSIFICATION	2.3687638577244802E-7	DEFECT
// now recover all the dependencies collected and add to the list.	WITHOUT_CLASSIFICATION	0.9999999894787781	WITHOUT_CLASSIFICATION	1.0521221867178425E-8	DEFECT
// pick up the last round of dependencies that were determined	WITHOUT_CLASSIFICATION	0.9999999858233699	WITHOUT_CLASSIFICATION	1.4176630071837364E-8	DEFECT
// right we have a good looking class file.	WITHOUT_CLASSIFICATION	0.9999152877611166	WITHOUT_CLASSIFICATION	8.471223888341249E-5	DEFECT
/* int minorVersion = */	WITHOUT_CLASSIFICATION	0.9999972146629265	WITHOUT_CLASSIFICATION	2.7853370736323765E-6	DEFECT
/* int majorVersion = */	WITHOUT_CLASSIFICATION	0.9999965633344946	WITHOUT_CLASSIFICATION	3.4366655053809194E-6	DEFECT
/* int accessFlags = */	WITHOUT_CLASSIFICATION	0.9999899255978928	WITHOUT_CLASSIFICATION	1.0074402107248552E-5	DEFECT
/* int superClassIndex = */	WITHOUT_CLASSIFICATION	0.999996877867956	WITHOUT_CLASSIFICATION	3.122132044048758E-6	DEFECT
// read the dependency cache from the disk	WITHOUT_CLASSIFICATION	0.9999995701798037	WITHOUT_CLASSIFICATION	4.298201962655569E-7	DEFECT
// try to read the dependency info from the map if it is // not out of date	WITHOUT_CLASSIFICATION	0.9999999737604002	WITHOUT_CLASSIFICATION	2.623959986918724E-8	DEFECT
// not cached - so need to read directly from the class file	WITHOUT_CLASSIFICATION	0.9999725818413978	WITHOUT_CLASSIFICATION	2.7418158602151917E-5	DEFECT
// This class depends on each class in the dependency list. For each // one of those, add this class into their affected classes list	WITHOUT_CLASSIFICATION	0.9999999251047905	WITHOUT_CLASSIFICATION	7.489520949440997E-8	DEFECT
// now determine which jars each class depends upon	WITHOUT_CLASSIFICATION	0.9999999697013259	WITHOUT_CLASSIFICATION	3.0298674209248406E-8	DEFECT
// we need to add this jar to the list for this class.	WITHOUT_CLASSIFICATION	0.9999996658318913	WITHOUT_CLASSIFICATION	3.341681088102191E-7	DEFECT
// write the dependency cache to the disk	WITHOUT_CLASSIFICATION	0.9999997920777194	WITHOUT_CLASSIFICATION	2.079222806016688E-7	DEFECT
// need to delete the main class	WITHOUT_CLASSIFICATION	0.999999109794772	WITHOUT_CLASSIFICATION	8.902052278667936E-7	DEFECT
//downgrade warnings on RMI stublike classes, as they are generated //by rmic, so there is no need to tell the user that their source is //missing.	WITHOUT_CLASSIFICATION	0.9999990110962855	WITHOUT_CLASSIFICATION	9.889037144094524E-7	DEFECT
// now check classpath file dependencies	WITHOUT_CLASSIFICATION	0.99999998323545	WITHOUT_CLASSIFICATION	1.676454999587092E-8	DEFECT
// if we have no info about the class - it may have been deleted already and we // are using cached info.	WITHOUT_CLASSIFICATION	0.9999999874335768	WITHOUT_CLASSIFICATION	1.2566423274770868E-8	DEFECT
// there was no class file. add this class to the list	WITHOUT_CLASSIFICATION	0.9999980530822463	WITHOUT_CLASSIFICATION	1.9469177536156264E-6	DEFECT
// break the classLocations into its components.	WITHOUT_CLASSIFICATION	0.9999993843846545	WITHOUT_CLASSIFICATION	6.156153453666171E-7	DEFECT
// search the various source path entries	WITHOUT_CLASSIFICATION	0.9999999974239552	WITHOUT_CLASSIFICATION	2.5760449380448546E-9	DEFECT
// create a data input stream from the jar input stream	WITHOUT_CLASSIFICATION	0.999999946051998	WITHOUT_CLASSIFICATION	5.3948001874205855E-8	DEFECT
// add null entries for any additional slots required.	WITHOUT_CLASSIFICATION	0.999979303660254	WITHOUT_CLASSIFICATION	2.069633974591699E-5	DEFECT
// end execute	WITHOUT_CLASSIFICATION	0.9999970897483416	WITHOUT_CLASSIFICATION	2.910251658567746E-6	DEFECT
//in verbose mode we always log stuff	WITHOUT_CLASSIFICATION	0.999978575411105	WITHOUT_CLASSIFICATION	2.1424588894990498E-5	DEFECT
//the simple action is to send the command line in as is	WITHOUT_CLASSIFICATION	0.999988170083016	WITHOUT_CLASSIFICATION	1.1829916983907118E-5	DEFECT
// Throws EjbcException	WITHOUT_CLASSIFICATION	0.999990404444029	WITHOUT_CLASSIFICATION	9.595555971111548E-6	DEFECT
// VSS items	WITHOUT_CLASSIFICATION	0.9999996259966939	WITHOUT_CLASSIFICATION	3.74003306025135E-7	DEFECT
// The zero index is never present in the constant pool itself so // we add a null entry for it	WITHOUT_CLASSIFICATION	0.9999962000436594	WITHOUT_CLASSIFICATION	3.7999563407229897E-6	DEFECT
//but for big operations, we save all the params to a temp file //and set @tmpfile as the command -then we remember to delete the tempfile //afterwards	WITHOUT_CLASSIFICATION	0.9999999615636082	WITHOUT_CLASSIFICATION	3.8436391783323374E-8	DEFECT
//start at 1 because element 0 is the executable name	WITHOUT_CLASSIFICATION	0.9999997961283127	WITHOUT_CLASSIFICATION	2.038716872612355E-7	DEFECT
//add to the list	WITHOUT_CLASSIFICATION	0.9999996941585281	WITHOUT_CLASSIFICATION	3.058414718922617E-7	DEFECT
//fill in args	WITHOUT_CLASSIFICATION	0.9999964901529635	WITHOUT_CLASSIFICATION	3.5098470363794854E-6	DEFECT
//fill in args	WITHOUT_CLASSIFICATION	0.9999964901529635	WITHOUT_CLASSIFICATION	3.5098470363794854E-6	DEFECT
//set source and rebuild options	WITHOUT_CLASSIFICATION	0.9999999350299161	WITHOUT_CLASSIFICATION	6.497008384555735E-8	DEFECT
//rebuild unless the dest file is newer than the source file	WITHOUT_CLASSIFICATION	0.9999993735526299	WITHOUT_CLASSIFICATION	6.264473700924928E-7	DEFECT
//mark for a rebuild if the dest file is newer	WITHOUT_CLASSIFICATION	0.9999999366856106	WITHOUT_CLASSIFICATION	6.331438943104562E-8	DEFECT
// Mono 1.0's wsdl doesn't deal with absolute paths	WITHOUT_CLASSIFICATION	0.9999998275926022	WITHOUT_CLASSIFICATION	1.7240739773400966E-7	DEFECT
//add in any extra files. //this is an error in mono, but we do not warn on it as they may fix that outside //the ant build cycle.	WITHOUT_CLASSIFICATION	0.987917713562001	WITHOUT_CLASSIFICATION	0.012082286437998984	DEFECT
//mark for a rebuild if we are newer	WITHOUT_CLASSIFICATION	0.9999982073288161	WITHOUT_CLASSIFICATION	1.7926711838728878E-6	DEFECT
//conditionally compile	WITHOUT_CLASSIFICATION	0.9995747968783936	WITHOUT_CLASSIFICATION	4.2520312160651905E-4	DEFECT
// Errors	WITHOUT_CLASSIFICATION	0.9999899883191479	WITHOUT_CLASSIFICATION	1.0011680852091057E-5	DEFECT
//bail on no references	WITHOUT_CLASSIFICATION	0.999999579683472	WITHOUT_CLASSIFICATION	4.203165280439624E-7	DEFECT
//bail on no references	WITHOUT_CLASSIFICATION	0.999999579683472	WITHOUT_CLASSIFICATION	4.203165280439624E-7	DEFECT
//demand create pathlist	WITHOUT_CLASSIFICATION	0.9999998879113167	WITHOUT_CLASSIFICATION	1.1208868339001441E-7	DEFECT
//bail on no references listed	WITHOUT_CLASSIFICATION	0.9999997682342461	WITHOUT_CLASSIFICATION	2.317657538532176E-7	DEFECT
//loop through all definitions	WITHOUT_CLASSIFICATION	0.999999842616937	WITHOUT_CLASSIFICATION	1.573830629653298E-7	DEFECT
//add those that are set, and a delimiter	WITHOUT_CLASSIFICATION	0.999999944141042	WITHOUT_CLASSIFICATION	5.585895794004142E-8	DEFECT
//set up response file options	WITHOUT_CLASSIFICATION	0.9999999905155671	WITHOUT_CLASSIFICATION	9.484433028571013E-9	DEFECT
//if the refs are out of date, force a build.	WITHOUT_CLASSIFICATION	0.9999996295754555	WITHOUT_CLASSIFICATION	3.70424544489793E-7	DEFECT
//bail out early if there were no files	WITHOUT_CLASSIFICATION	0.9999999801190388	WITHOUT_CLASSIFICATION	1.988096129211685E-8	DEFECT
//now scan the hashtable and add the files	WITHOUT_CLASSIFICATION	0.9999980317777774	WITHOUT_CLASSIFICATION	1.9682222227563454E-6	DEFECT
//add the source file	WITHOUT_CLASSIFICATION	0.9999999167050475	WITHOUT_CLASSIFICATION	8.329495252724174E-8	DEFECT
//now run	WITHOUT_CLASSIFICATION	0.9999750625410653	WITHOUT_CLASSIFICATION	2.4937458934689603E-5	DEFECT
//forcibly delete the output file in case of trouble	WITHOUT_CLASSIFICATION	0.9999999624429274	WITHOUT_CLASSIFICATION	3.7557072650433477E-8	DEFECT
//then rethrow the exception	WITHOUT_CLASSIFICATION	0.9999314324710931	WITHOUT_CLASSIFICATION	6.856752890695023E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999998952218317	WITHOUT_CLASSIFICATION	1.0477816833988038E-7	DEFECT
// CheckStyle:ConstantNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9999985489535307	WITHOUT_CLASSIFICATION	1.4510464693492277E-6	DEFECT
// CheckStyle:MethodNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.999995028507788	WITHOUT_CLASSIFICATION	4.971492211934094E-6	DEFECT
// CheckStyle:ConstantNameCheck ON // CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999371182178	WITHOUT_CLASSIFICATION	6.288178217887084E-8	DEFECT
// end execute	WITHOUT_CLASSIFICATION	0.9999970897483416	WITHOUT_CLASSIFICATION	2.910251658567746E-6	DEFECT
//fill in args	WITHOUT_CLASSIFICATION	0.9999964901529635	WITHOUT_CLASSIFICATION	3.5098470363794854E-6	DEFECT
//fill in args	WITHOUT_CLASSIFICATION	0.9999964901529635	WITHOUT_CLASSIFICATION	3.5098470363794854E-6	DEFECT
//rebuild unless the dest file is newer than the source file	WITHOUT_CLASSIFICATION	0.9999993735526299	WITHOUT_CLASSIFICATION	6.264473700924928E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999998952218317	WITHOUT_CLASSIFICATION	1.0477816833988038E-7	DEFECT
//determine directory: resourceDir if set, //the dir of the destFile if not	WITHOUT_CLASSIFICATION	0.9999998248442318	WITHOUT_CLASSIFICATION	1.7515576826030235E-7	DEFECT
//Public //Private //Family //Assembly //Family and Assembly //Family or Assembly //Private Scope	WITHOUT_CLASSIFICATION	0.9999994844402798	WITHOUT_CLASSIFICATION	5.155597202289914E-7	DEFECT
//scan for an implicit fileset if there was a srcdir set //or there was no srcDir set but there was no contained classes	WITHOUT_CLASSIFICATION	0.99999999876334	WITHOUT_CLASSIFICATION	1.2366600661809992E-9	DEFECT
//if there is no src dir here, set it	WITHOUT_CLASSIFICATION	0.9999999798636646	WITHOUT_CLASSIFICATION	2.013633543455272E-8	DEFECT
//get dependencies list.	WITHOUT_CLASSIFICATION	0.9999996311389353	WITHOUT_CLASSIFICATION	3.688610646353963E-7	DEFECT
//get any included source directories	WITHOUT_CLASSIFICATION	0.9999998909287909	WITHOUT_CLASSIFICATION	1.0907120906399566E-7	DEFECT
//add the files to the command	WITHOUT_CLASSIFICATION	0.9999862846659654	WITHOUT_CLASSIFICATION	1.3715334034657522E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc // CheckStyle:ConstantNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9999998612874741	WITHOUT_CLASSIFICATION	1.3871252591545003E-7	DEFECT
// CheckStyle:MethodNameCheck ON	WITHOUT_CLASSIFICATION	0.9999971245707201	WITHOUT_CLASSIFICATION	2.8754292798655225E-6	DEFECT
/*         *  space for more argumentativeness         *  command.addArgument();         *  command.addArgument();         */	WITHOUT_CLASSIFICATION	0.9999995681267354	WITHOUT_CLASSIFICATION	4.31873264638652E-7	DEFECT
// ends with '.' or null	WITHOUT_CLASSIFICATION	0.999976829563628	WITHOUT_CLASSIFICATION	2.3170436371892197E-5	DEFECT
/* Constants used for the "beantype" attribute */	WITHOUT_CLASSIFICATION	0.9999999524964213	WITHOUT_CLASSIFICATION	4.7503578761829E-8	DEFECT
/* Filenames of the standard EJB descriptor and the iAS-specific descriptor */	WITHOUT_CLASSIFICATION	0.9999997178088218	WITHOUT_CLASSIFICATION	2.8219117809254264E-7	DEFECT
/* Classpath used when the iAS ejbc is called */	WITHOUT_CLASSIFICATION	0.9999986100183834	WITHOUT_CLASSIFICATION	1.3899816166307622E-6	DEFECT
/* Options passed to the iAS ejbc */	WITHOUT_CLASSIFICATION	0.9999968083414305	WITHOUT_CLASSIFICATION	3.191658569666823E-6	DEFECT
/* iAS installation directory (used if ejbc isn't on user's PATH) */	WITHOUT_CLASSIFICATION	0.999998620000304	WITHOUT_CLASSIFICATION	1.3799996959792626E-6	DEFECT
/* Parser and handler used to process both EJB descriptor files */	WITHOUT_CLASSIFICATION	0.9999999033833357	WITHOUT_CLASSIFICATION	9.66166644090749E-8	DEFECT
/* Value of the display-name element read from the standard EJB descriptor */	WITHOUT_CLASSIFICATION	0.9999984507808024	WITHOUT_CLASSIFICATION	1.5492191977078597E-6	DEFECT
/*         * Parse the classpath into it's individual elements and store the         * results in the "classpathElements" instance variable.         */	WITHOUT_CLASSIFICATION	0.9999999919269377	WITHOUT_CLASSIFICATION	8.073062431072251E-9	DEFECT
/* If the -classpath flag isn't specified, use the system classpath */	WITHOUT_CLASSIFICATION	0.9999945648026698	WITHOUT_CLASSIFICATION	5.4351973302689214E-6	DEFECT
/*         * If the -d flag isn't specified, use the working directory as the         * destination directory         */	WITHOUT_CLASSIFICATION	0.9999833467884756	WITHOUT_CLASSIFICATION	1.665321152436527E-5	DEFECT
/* Construct a SAXParser used to process the descriptors */	WITHOUT_CLASSIFICATION	0.9999998803237663	WITHOUT_CLASSIFICATION	1.1967623371481769E-7	DEFECT
// SAXException or ParserConfigurationException may be thrown	WITHOUT_CLASSIFICATION	0.9999990707040491	WITHOUT_CLASSIFICATION	9.292959508220972E-7	DEFECT
/* Build and populate an instance of the ejbc utility */	WITHOUT_CLASSIFICATION	0.9999990850072844	WITHOUT_CLASSIFICATION	9.149927156691762E-7	DEFECT
/* Execute the ejbc utility -- stubs/skeletons are rebuilt, if needed */	WITHOUT_CLASSIFICATION	0.9999999672257228	WITHOUT_CLASSIFICATION	3.27742771018268E-8	DEFECT
// Add one for the "\"	WITHOUT_CLASSIFICATION	0.9999996748612276	WITHOUT_CLASSIFICATION	3.251387723067708E-7	DEFECT
/* Concatenate all of the command line arguments into a single String */	WITHOUT_CLASSIFICATION	0.9999998981475274	WITHOUT_CLASSIFICATION	1.0185247259490117E-7	DEFECT
/* If an iAS home directory is specified, prepend it to the commmand */	WITHOUT_CLASSIFICATION	0.9999892747757492	WITHOUT_CLASSIFICATION	1.0725224250811335E-5	DEFECT
/*         * The EJB information is gathered from the standard XML EJB descriptor         * and the iAS-specific XML EJB descriptor using a SAX parser.         */	WITHOUT_CLASSIFICATION	0.9999962302604986	WITHOUT_CLASSIFICATION	3.769739501469685E-6	DEFECT
/* OPTIONAL COMMAND LINE PARAMETERS */	WITHOUT_CLASSIFICATION	0.9999961240147337	WITHOUT_CLASSIFICATION	3.875985266256752E-6	DEFECT
/* No beantype flag is needed for an entity bean */	WITHOUT_CLASSIFICATION	0.9998974842168604	WITHOUT_CLASSIFICATION	1.0251578313962126E-4	DEFECT
/* REQUIRED COMMAND LINE PARAMETERS */	WITHOUT_CLASSIFICATION	0.9999949724327165	WITHOUT_CLASSIFICATION	5.027567283476878E-6	DEFECT
/* Convert the List into an Array and return it */	WITHOUT_CLASSIFICATION	0.9999998077423001	WITHOUT_CLASSIFICATION	1.9225769988946138E-7	DEFECT
/* Inner classes follow */	WITHOUT_CLASSIFICATION	0.9999977131892351	WITHOUT_CLASSIFICATION	2.2868107649221368E-6	DEFECT
// End of EjbcException inner class	WITHOUT_CLASSIFICATION	0.9999671511836444	WITHOUT_CLASSIFICATION	3.28488163556194E-5	DEFECT
// Tracks current element // Tracks current text data // "session" or "entity"	WITHOUT_CLASSIFICATION	0.9999995929936851	WITHOUT_CLASSIFICATION	4.070063147809732E-7	DEFECT
/* Search the resource Map and (if not found) file Map */	WITHOUT_CLASSIFICATION	0.9999996003421454	WITHOUT_CLASSIFICATION	3.996578546562888E-7	DEFECT
/* A new element has started, so reset the text being captured */	WITHOUT_CLASSIFICATION	0.9999999818258376	WITHOUT_CLASSIFICATION	1.8174162435564442E-8	DEFECT
/*             * If this is a standard EJB 1.1 descriptor, we are looking for one             * set of data, while if this is an iAS-specific descriptor, we're             * looking for different set of data.  Hand the processing off to             * the appropriate method.             */	WITHOUT_CLASSIFICATION	0.9999999723320393	WITHOUT_CLASSIFICATION	2.7667960668669124E-8	DEFECT
// End of EjbcHandler inner class	WITHOUT_CLASSIFICATION	0.9999991368475332	WITHOUT_CLASSIFICATION	8.631524667987519E-7	DEFECT
/*         * Below are getter's and setter's for each of the instance variables.         * Note that (in addition to supporting setters with the same type as         * the instance variable) a setter is provided with takes a String         * argument -- this are provided so the XML document handler can set         * the EJB values using the Strings it parses.         */	WITHOUT_CLASSIFICATION	0.9997814717148167	WITHOUT_CLASSIFICATION	2.1852828518335732E-4	DEFECT
/* Check that the specified instance variables are valid */	WITHOUT_CLASSIFICATION	0.9999999805501042	WITHOUT_CLASSIFICATION	1.9449895814746095E-8	DEFECT
/* Check that the EJB "source" classes all exist */	WITHOUT_CLASSIFICATION	0.9999977111666424	WITHOUT_CLASSIFICATION	2.2888333575496598E-6	DEFECT
// The timestamp of the "newest" class // Timestamp for a given class // File for the remote interface class // File for the home interface class // File for the EJB implementation class // File for the EJB primary key class	WITHOUT_CLASSIFICATION	0.9985042193964453	WITHOUT_CLASSIFICATION	0.0014957806035546513	DEFECT
/* Check the timestamp on the remote interface */	WITHOUT_CLASSIFICATION	0.9999982557201806	WITHOUT_CLASSIFICATION	1.744279819429648E-6	DEFECT
/* Check the timestamp on the home interface */	WITHOUT_CLASSIFICATION	0.9999985177958187	WITHOUT_CLASSIFICATION	1.4822041811811638E-6	DEFECT
/* Check the timestamp of the primary key class */	WITHOUT_CLASSIFICATION	0.9999935058955914	WITHOUT_CLASSIFICATION	6.4941044085260525E-6	DEFECT
// List of all stubs & skels // Earliest mod time // Has each been found?	WITHOUT_CLASSIFICATION	0.9999999939453996	WITHOUT_CLASSIFICATION	6.054600432360266E-9	DEFECT
/*             * Loop through each stub/skeleton class that must be generated, and             * determine (if all exist) which file has the most recent timestamp             */	WITHOUT_CLASSIFICATION	0.999994355429481	WITHOUT_CLASSIFICATION	5.644570518913133E-6	DEFECT
/*                 * Add each stub/skeleton class to the list of EJB files.  Note                 * that each class is added even if it doesn't exist now.                 */	WITHOUT_CLASSIFICATION	0.9999981243914424	WITHOUT_CLASSIFICATION	1.8756085574870544E-6	DEFECT
/* Keep track of the oldest modification timestamp */	WITHOUT_CLASSIFICATION	0.9999992904603383	WITHOUT_CLASSIFICATION	7.095396615960751E-7	DEFECT
// End of EjbInfo inner class	WITHOUT_CLASSIFICATION	0.9999883645401266	WITHOUT_CLASSIFICATION	1.163545987333032E-5	DEFECT
// Fully qualified name of the Java class // Name of the package for this class // Name of the class without the package	WITHOUT_CLASSIFICATION	0.9999999845291098	WITHOUT_CLASSIFICATION	1.5470890216999612E-8	DEFECT
// End of Classname inner class	WITHOUT_CLASSIFICATION	0.9999976030461977	WITHOUT_CLASSIFICATION	2.396953802332013E-6	DEFECT
// Stream to read and redirect to standard output	WITHOUT_CLASSIFICATION	0.9999978225827533	WITHOUT_CLASSIFICATION	2.177417246826092E-6	DEFECT
// End of RedirectOutput inner class	WITHOUT_CLASSIFICATION	0.999923358997983	WITHOUT_CLASSIFICATION	7.664100201699298E-5	DEFECT
// add -file xxxxx to the commandline	WITHOUT_CLASSIFICATION	0.9999998710704895	WITHOUT_CLASSIFICATION	1.289295105381178E-7	DEFECT
//clientname = ejbjarfile+client.jar	WITHOUT_CLASSIFICATION	0.9999999645772117	WITHOUT_CLASSIFICATION	3.5422788280973836E-8	DEFECT
// end of else	WITHOUT_CLASSIFICATION	0.9999998007184748	WITHOUT_CLASSIFICATION	1.9928152516972147E-7	DEFECT
// ejb jar file	WITHOUT_CLASSIFICATION	0.9999999630123811	WITHOUT_CLASSIFICATION	3.6987618804909136E-8	DEFECT
// ejb jar file	WITHOUT_CLASSIFICATION	0.9999999630123811	WITHOUT_CLASSIFICATION	3.6987618804909136E-8	DEFECT
//client jar file	WITHOUT_CLASSIFICATION	0.9999999485216144	WITHOUT_CLASSIFICATION	5.147838554014489E-8	DEFECT
//client jar file	WITHOUT_CLASSIFICATION	0.9999999485216144	WITHOUT_CLASSIFICATION	5.147838554014489E-8	DEFECT
// Have to catch this because of the semantics of calling main()	WITHOUT_CLASSIFICATION	0.9999984257923855	WITHOUT_CLASSIFICATION	1.574207614429194E-6	DEFECT
// Have to catch this because of the semantics of calling main()	WITHOUT_CLASSIFICATION	0.9999984257923855	WITHOUT_CLASSIFICATION	1.574207614429194E-6	DEFECT
//classpath	WITHOUT_CLASSIFICATION	0.9999986175437103	WITHOUT_CLASSIFICATION	1.3824562897157488E-6	DEFECT
/* ------------- */	WITHOUT_CLASSIFICATION	0.9999941870271206	WITHOUT_CLASSIFICATION	5.812972879362835E-6	DEFECT
/* ------------- */	WITHOUT_CLASSIFICATION	0.9999941870271206	WITHOUT_CLASSIFICATION	5.812972879362835E-6	DEFECT
/* GenIC options */	WITHOUT_CLASSIFICATION	0.9999994488088847	WITHOUT_CLASSIFICATION	5.511911152169087E-7	DEFECT
/* other options */	WITHOUT_CLASSIFICATION	0.9999998151351182	WITHOUT_CLASSIFICATION	1.8486488190170577E-7	DEFECT
/* -------------------- */	WITHOUT_CLASSIFICATION	0.9999911845074207	WITHOUT_CLASSIFICATION	8.815492579346621E-6	DEFECT
/* -------------------- */	WITHOUT_CLASSIFICATION	0.9999911845074207	WITHOUT_CLASSIFICATION	8.815492579346621E-6	DEFECT
/* GenIC options setter */	WITHOUT_CLASSIFICATION	0.9999996751657908	WITHOUT_CLASSIFICATION	3.2483420915804735E-7	DEFECT
// -I- // ignore all errors // -Vd	WITHOUT_CLASSIFICATION	0.9999991135945471	WITHOUT_CLASSIFICATION	8.864054529728675E-7	DEFECT
/* ------------- */	WITHOUT_CLASSIFICATION	0.9999941870271206	WITHOUT_CLASSIFICATION	5.812972879362835E-6	DEFECT
/* -------------------- */	WITHOUT_CLASSIFICATION	0.9999911845074207	WITHOUT_CLASSIFICATION	8.815492579346621E-6	DEFECT
/* other options setter */	WITHOUT_CLASSIFICATION	0.9999998681046504	WITHOUT_CLASSIFICATION	1.3189534957778068E-7	DEFECT
/* other methods */	WITHOUT_CLASSIFICATION	0.9999996357440208	WITHOUT_CLASSIFICATION	3.64255979199209E-7	DEFECT
// the method deleteOnExit() do not work because the directory is not empty	WITHOUT_CLASSIFICATION	0.9999937740638208	WITHOUT_CLASSIFICATION	6.225936179116353E-6	DEFECT
// create the generic jar first	WITHOUT_CLASSIFICATION	0.9999999917077624	WITHOUT_CLASSIFICATION	8.29223754628975E-9	DEFECT
// GenIC call on generic jar	WITHOUT_CLASSIFICATION	0.9999993933946038	WITHOUT_CLASSIFICATION	6.066053963506572E-7	DEFECT
// create the real jar	WITHOUT_CLASSIFICATION	0.9999999747757072	WITHOUT_CLASSIFICATION	2.5224292692672355E-8	DEFECT
// JOnAS-specific descriptor deployment	WITHOUT_CLASSIFICATION	0.9999998859421935	WITHOUT_CLASSIFICATION	1.1405780654351971E-7	DEFECT
// JOnAS-specific DD // true if the JOnAS convention is used for the DD // Directory path of the EJB descriptor // EJB descriptor file name // Filename appearing before name terminator // Filename appearing after the name terminator	WITHOUT_CLASSIFICATION	0.9999995676475857	WITHOUT_CLASSIFICATION	4.323524143857816E-7	DEFECT
// extract path info	WITHOUT_CLASSIFICATION	0.9999994826879721	WITHOUT_CLASSIFICATION	5.17312027840557E-7	DEFECT
// descriptorName is just a file without path	WITHOUT_CLASSIFICATION	0.9999998749940652	WITHOUT_CLASSIFICATION	1.250059347559612E-7	DEFECT
/*         * Check for the odd case where the terminator and/or filename         * extension aren't found.  These will ensure "jonas-" appears at the         * end of the name and before the '.' (if present).         */	WITHOUT_CLASSIFICATION	0.9999979707053276	WITHOUT_CLASSIFICATION	2.029294672446056E-6	DEFECT
// no . found	WITHOUT_CLASSIFICATION	0.9999998060905585	WITHOUT_CLASSIFICATION	1.939094414433623E-7	DEFECT
// try to find JOnAS specific convention name	WITHOUT_CLASSIFICATION	0.9999999093208566	WITHOUT_CLASSIFICATION	9.06791435115448E-8	DEFECT
// else get standard baseName	WITHOUT_CLASSIFICATION	0.99999986627524	WITHOUT_CLASSIFICATION	1.3372476008187848E-7	DEFECT
// jonasroot	WITHOUT_CLASSIFICATION	0.9999995966652072	WITHOUT_CLASSIFICATION	4.0333479267145786E-7	DEFECT
// java policy file	WITHOUT_CLASSIFICATION	0.9999993610497048	WITHOUT_CLASSIFICATION	6.38950295228309E-7	DEFECT
// outputdir	WITHOUT_CLASSIFICATION	0.9999978707578008	WITHOUT_CLASSIFICATION	2.129242199232281E-6	DEFECT
// work around a bug of GenIC 2.5	WITHOUT_CLASSIFICATION	0.97484681835361	WITHOUT_CLASSIFICATION	0.02515318164638998	DEFECT
// classpath	WITHOUT_CLASSIFICATION	0.9999998192940817	WITHOUT_CLASSIFICATION	1.8070591838465296E-7	DEFECT
// try to create the classpath for the correct ORB	WITHOUT_CLASSIFICATION	0.9999970548209053	WITHOUT_CLASSIFICATION	2.9451790947669125E-6	DEFECT
// keepgenerated	WITHOUT_CLASSIFICATION	0.9999999300260908	WITHOUT_CLASSIFICATION	6.99739091680121E-8	DEFECT
// nocompil	WITHOUT_CLASSIFICATION	0.9999979314191427	WITHOUT_CLASSIFICATION	2.0685808573710427E-6	DEFECT
// novalidation	WITHOUT_CLASSIFICATION	0.9999983433705292	WITHOUT_CLASSIFICATION	1.6566294708587772E-6	DEFECT
// javac	WITHOUT_CLASSIFICATION	0.9999993565671742	WITHOUT_CLASSIFICATION	6.434328258756268E-7	DEFECT
// javacopts	WITHOUT_CLASSIFICATION	0.9999998659639838	WITHOUT_CLASSIFICATION	1.3403601627307196E-7	DEFECT
// rmicopts	WITHOUT_CLASSIFICATION	0.9999996714812679	WITHOUT_CLASSIFICATION	3.285187320831613E-7	DEFECT
// secpropag	WITHOUT_CLASSIFICATION	0.9999995465125703	WITHOUT_CLASSIFICATION	4.5348742968118576E-7	DEFECT
// verbose	WITHOUT_CLASSIFICATION	0.9999996199867869	WITHOUT_CLASSIFICATION	3.8001321314249236E-7	DEFECT
// input file to process by GenIC	WITHOUT_CLASSIFICATION	0.9999996177302062	WITHOUT_CLASSIFICATION	3.8226979374765394E-7	DEFECT
// calling GenIC task	WITHOUT_CLASSIFICATION	0.9999979587464178	WITHOUT_CLASSIFICATION	2.0412535821287196E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999996763950936	WITHOUT_CLASSIFICATION	3.2360490638735057E-7	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.99999795328422	WITHOUT_CLASSIFICATION	2.0467157800256684E-6	DEFECT
// the method deleteOnExit() do not work because the directory is not empty	WITHOUT_CLASSIFICATION	0.9999937740638208	WITHOUT_CLASSIFICATION	6.225936179116353E-6	DEFECT
// baseNameTerminator not found: the descriptor use the // JOnAS naming convention, ie [Foo.xml,jonas-Foo.xml] and // not [Foo<baseNameTerminator>-ejb-jar.xml, // Foo<baseNameTerminator>-jonas-ejb-jar.xml].	WITHOUT_CLASSIFICATION	0.9999996884426673	WITHOUT_CLASSIFICATION	3.1155733270231396E-7	DEFECT
// jonasroot	WITHOUT_CLASSIFICATION	0.9999995966652072	WITHOUT_CLASSIFICATION	4.0333479267145786E-7	DEFECT
// GenIC task // GenIC class (3 are supported for various // versions	WITHOUT_CLASSIFICATION	0.9999999326132049	WITHOUT_CLASSIFICATION	6.738679515031815E-8	DEFECT
// javac	WITHOUT_CLASSIFICATION	0.9999993565671742	WITHOUT_CLASSIFICATION	6.434328258756268E-7	DEFECT
// additionalargs	WITHOUT_CLASSIFICATION	0.9999993541010885	WITHOUT_CLASSIFICATION	6.458989113510396E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999998952218317	WITHOUT_CLASSIFICATION	1.0477816833988038E-7	DEFECT
// add the generated files to the ejbFiles	WITHOUT_CLASSIFICATION	0.9999998514174793	WITHOUT_CLASSIFICATION	1.4858252073121446E-7	DEFECT
// orb	WITHOUT_CLASSIFICATION	0.9999960974732435	WITHOUT_CLASSIFICATION	3.902526756550289E-6	DEFECT
/* ----------------------------------------------------------------------------------- */	WITHOUT_CLASSIFICATION	0.9999905288028152	WITHOUT_CLASSIFICATION	9.471197184752777E-6	DEFECT
/* ----------------------------------------------------------------------------------- */	WITHOUT_CLASSIFICATION	0.9999905288028152	WITHOUT_CLASSIFICATION	9.471197184752777E-6	DEFECT
/* utilitary methods */	WITHOUT_CLASSIFICATION	0.9999995317734724	WITHOUT_CLASSIFICATION	4.6822652761021456E-7	DEFECT
// Create the parser using whatever parser the system dictates	WITHOUT_CLASSIFICATION	0.9999999506512119	WITHOUT_CLASSIFICATION	4.93487880483373E-8	DEFECT
// Loop through the files. Each file represents one deployment // descriptor, and hence one bean in our model.	WITHOUT_CLASSIFICATION	0.9999999825435401	WITHOUT_CLASSIFICATION	1.7456459957322095E-8	DEFECT
// process the deployment descriptor in each tool	WITHOUT_CLASSIFICATION	0.9999998841083739	WITHOUT_CLASSIFICATION	1.1589162606938608E-7	DEFECT
// end of execute()	WITHOUT_CLASSIFICATION	0.9999971978514047	WITHOUT_CLASSIFICATION	2.8021485951766606E-6	DEFECT
// resolve relative to project basedir	WITHOUT_CLASSIFICATION	0.9999995908823759	WITHOUT_CLASSIFICATION	4.0911762419758855E-7	DEFECT
// Get the filename into a String object	WITHOUT_CLASSIFICATION	0.9999999732691661	WITHOUT_CLASSIFICATION	2.6730833933496488E-8	DEFECT
// Get the value of the <ejb-name> tag.  Only the first occurrence.	WITHOUT_CLASSIFICATION	0.9999999997738201	WITHOUT_CLASSIFICATION	2.261798698467856E-10	DEFECT
// Then the toplink deployment descriptor	WITHOUT_CLASSIFICATION	0.9999993311276373	WITHOUT_CLASSIFICATION	6.688723626878853E-7	DEFECT
// Setup a naming standard here?.	WITHOUT_CLASSIFICATION	0.9999989479722212	WITHOUT_CLASSIFICATION	1.0520277787709118E-6	DEFECT
// get all the files in the descriptor directory	WITHOUT_CLASSIFICATION	0.9999989269444437	WITHOUT_CLASSIFICATION	1.073055556294993E-6	DEFECT
// If we still can't find it, complain	WITHOUT_CLASSIFICATION	0.9998471027007612	WITHOUT_CLASSIFICATION	1.528972992388459E-4	DEFECT
// OK, properties file may be absolute	WITHOUT_CLASSIFICATION	0.9999998667624725	WITHOUT_CLASSIFICATION	1.3323752739723838E-7	DEFECT
// do we need to regenerate the file	WITHOUT_CLASSIFICATION	0.9999997200766861	WITHOUT_CLASSIFICATION	2.799233138307209E-7	DEFECT
//weblogic.ejb.utils.DDCreator.main(args);	WITHOUT_CLASSIFICATION	0.9999999439454016	WITHOUT_CLASSIFICATION	5.605459844073767E-8	DEFECT
// there was an exception - run with no exit to get proper error	WITHOUT_CLASSIFICATION	0.9999571113316152	WITHOUT_CLASSIFICATION	4.2888668384846025E-5	DEFECT
//weblogic.ejb.utils.DDCreator.main(newArgs);	WITHOUT_CLASSIFICATION	0.9999999745376164	WITHOUT_CLASSIFICATION	2.546238362744321E-8	DEFECT
/* Attributes set by the Ant build file */	WITHOUT_CLASSIFICATION	0.9999996339313987	WITHOUT_CLASSIFICATION	3.660686013450694E-7	DEFECT
// Create the zip entry and add it to the jar file	WITHOUT_CLASSIFICATION	0.9999999613230361	WITHOUT_CLASSIFICATION	3.867696379862811E-8	DEFECT
//add it to list of files in jar	WITHOUT_CLASSIFICATION	0.9999988458873222	WITHOUT_CLASSIFICATION	1.1541126777692006E-6	DEFECT
// If it's a primitive wrapper then we shouldn't try and put // it into the jar, so ignore it.	WITHOUT_CLASSIFICATION	0.9999982634931366	WITHOUT_CLASSIFICATION	1.7365068633526787E-6	DEFECT
// Translate periods into path separators, add .class to the // name, create the File object and add it to the Hashtable.	WITHOUT_CLASSIFICATION	0.9999999288185654	WITHOUT_CLASSIFICATION	7.118143460271071E-8	DEFECT
// Weblogic will throw an error if the deployment descriptor does // not match the class files.	WITHOUT_CLASSIFICATION	0.9999491198699564	WITHOUT_CLASSIFICATION	5.088013004367102E-5	DEFECT
// Create the file input stream, and buffer everything over // to the jar output stream	WITHOUT_CLASSIFICATION	0.9999999940580531	WITHOUT_CLASSIFICATION	5.9419469563305266E-9	DEFECT
// Close up the file input stream for the class file	WITHOUT_CLASSIFICATION	0.9999999859865558	WITHOUT_CLASSIFICATION	1.4013444246707475E-8	DEFECT
// register any DTDs supplied by the user	WITHOUT_CLASSIFICATION	0.9999999733484509	WITHOUT_CLASSIFICATION	2.665154907884077E-8	DEFECT
// none to register for generic	WITHOUT_CLASSIFICATION	0.9999998473920018	WITHOUT_CLASSIFICATION	1.526079982092151E-7	DEFECT
// Retrive the files to be added to JAR from EJB descriptor	WITHOUT_CLASSIFICATION	0.9999963527974228	WITHOUT_CLASSIFICATION	3.6472025772546456E-6	DEFECT
// Add any support classes specified in the build file	WITHOUT_CLASSIFICATION	0.9999998907698312	WITHOUT_CLASSIFICATION	1.0923016886693746E-7	DEFECT
// Determine the JAR filename (without filename extension)	WITHOUT_CLASSIFICATION	0.9999998560715505	WITHOUT_CLASSIFICATION	1.4392844947334872E-7	DEFECT
// First the regular deployment descriptor	WITHOUT_CLASSIFICATION	0.9999999540589755	WITHOUT_CLASSIFICATION	4.594102450025065E-8	DEFECT
// now the vendor specific files, if any	WITHOUT_CLASSIFICATION	0.9999997729953765	WITHOUT_CLASSIFICATION	2.2700462362702275E-7	DEFECT
// add any dependent files	WITHOUT_CLASSIFICATION	0.9999997480859036	WITHOUT_CLASSIFICATION	2.519140963453888E-7	DEFECT
// Check to see if we need a build and start doing the work!	WITHOUT_CLASSIFICATION	0.9999928063189971	WITHOUT_CLASSIFICATION	7.1936810029415785E-6	DEFECT
// Log that we are going to build...	WITHOUT_CLASSIFICATION	0.9999403808378637	WITHOUT_CLASSIFICATION	5.961916213628902E-5	DEFECT
// Use helper method to write the jarfile	WITHOUT_CLASSIFICATION	0.9999999838354632	WITHOUT_CLASSIFICATION	1.6164536815913728E-8	DEFECT
// Log that the file is up to date...	WITHOUT_CLASSIFICATION	0.9999962017296362	WITHOUT_CLASSIFICATION	3.798270363646473E-6	DEFECT
/* Parse the ejb deployment descriptor.  While it may not             * look like much, we use a SAXParser and an inner class to             * get hold of all the classfile names for the descriptor.             */	WITHOUT_CLASSIFICATION	0.999927898030934	WITHOUT_CLASSIFICATION	7.210196906604097E-5	DEFECT
// add in support classes if any	WITHOUT_CLASSIFICATION	0.9999988636736586	WITHOUT_CLASSIFICATION	1.1363263413175615E-6	DEFECT
// Work out what the base name is	WITHOUT_CLASSIFICATION	0.999996621564594	WITHOUT_CLASSIFICATION	3.3784354059443402E-6	DEFECT
// nothing to add for generic tool.	WITHOUT_CLASSIFICATION	0.9999996985889097	WITHOUT_CLASSIFICATION	3.0141109025531795E-7	DEFECT
// clean the addedfiles set	WITHOUT_CLASSIFICATION	0.9999996471716599	WITHOUT_CLASSIFICATION	3.5282834009327117E-7	DEFECT
// Create the streams necessary to write the jarfile	WITHOUT_CLASSIFICATION	0.9999999941445296	WITHOUT_CLASSIFICATION	5.855470386370011E-9	DEFECT
//get and clean up innerclass name	WITHOUT_CLASSIFICATION	0.9999998721240145	WITHOUT_CLASSIFICATION	1.278759854424563E-7	DEFECT
// See if there are any inner classes for this class and add them in if there are	WITHOUT_CLASSIFICATION	0.9999947414801731	WITHOUT_CLASSIFICATION	5.258519826909415E-6	DEFECT
// Loop through all the class files found and add them to the jar	WITHOUT_CLASSIFICATION	0.9999993277305377	WITHOUT_CLASSIFICATION	6.722694623266944E-7	DEFECT
//assertions take up space too	WITHOUT_CLASSIFICATION	0.9999985788780933	WITHOUT_CLASSIFICATION	1.421121906756432E-6	DEFECT
// link the file	WITHOUT_CLASSIFICATION	0.999998410697343	WITHOUT_CLASSIFICATION	1.5893026570525294E-6	DEFECT
// Have to catch this because of the semantics of calling main()	WITHOUT_CLASSIFICATION	0.9999984257923855	WITHOUT_CLASSIFICATION	1.574207614429194E-6	DEFECT
//trim the META_INF\ off of the file name	WITHOUT_CLASSIFICATION	0.9999993852395824	WITHOUT_CLASSIFICATION	6.147604176197159E-7	DEFECT
// end of writeJar	WITHOUT_CLASSIFICATION	0.9999990762423601	WITHOUT_CLASSIFICATION	9.237576400041416E-7	DEFECT
// only generate a new ClassLoader if we have a classpath	WITHOUT_CLASSIFICATION	0.9999996243298531	WITHOUT_CLASSIFICATION	3.756701467703141E-7	DEFECT
// register all the known DTDs	WITHOUT_CLASSIFICATION	0.9999971827355553	WITHOUT_CLASSIFICATION	2.817264444749871E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999998952218317	WITHOUT_CLASSIFICATION	1.0477816833988038E-7	DEFECT
// The the weblogic cmp deployment descriptor	WITHOUT_CLASSIFICATION	0.9999999596119835	WITHOUT_CLASSIFICATION	4.0388016571157786E-8	DEFECT
// try to determine it from publicId	WITHOUT_CLASSIFICATION	0.9999994806654097	WITHOUT_CLASSIFICATION	5.193345902663963E-7	DEFECT
// try to use the compiler specified by build.compiler. // Right now we are just going to allow Jikes	WITHOUT_CLASSIFICATION	0.9999999968821448	WITHOUT_CLASSIFICATION	3.117855146817246E-9	DEFECT
// need to create a generic jar first.	WITHOUT_CLASSIFICATION	0.9999999620137658	WITHOUT_CLASSIFICATION	3.798623404238038E-8	DEFECT
// Only go forward if the generic and the weblogic file both exist	WITHOUT_CLASSIFICATION	0.999999996759087	WITHOUT_CLASSIFICATION	3.24091305737455E-9	DEFECT
//open jar files	WITHOUT_CLASSIFICATION	0.9999996122684248	WITHOUT_CLASSIFICATION	3.87731575175172E-7	DEFECT
//get the list of generic jar entries	WITHOUT_CLASSIFICATION	0.9999999894426104	WITHOUT_CLASSIFICATION	1.0557389671363386E-8	DEFECT
//get the list of weblogic jar entries	WITHOUT_CLASSIFICATION	0.9999999986775598	WITHOUT_CLASSIFICATION	1.3224400889437642E-9	DEFECT
//Cycle Through generic and make sure its in weblogic	WITHOUT_CLASSIFICATION	0.999998858888498	WITHOUT_CLASSIFICATION	1.1411115019788716E-6	DEFECT
// File name/path match	WITHOUT_CLASSIFICATION	0.9999989240308557	WITHOUT_CLASSIFICATION	1.07596914436507E-6	DEFECT
// Check files see if same	WITHOUT_CLASSIFICATION	0.9999999178709564	WITHOUT_CLASSIFICATION	8.212904350237428E-8	DEFECT
//File are different see if its an object or an interface	WITHOUT_CLASSIFICATION	0.9999996485844511	WITHOUT_CLASSIFICATION	3.5141554890148616E-7	DEFECT
//Interface changed   rebuild jar.	WITHOUT_CLASSIFICATION	0.9999999671029492	WITHOUT_CLASSIFICATION	3.289705067563977E-8	DEFECT
//Object class Changed   update it.	WITHOUT_CLASSIFICATION	0.9999997469831615	WITHOUT_CLASSIFICATION	2.5301683847372503E-7	DEFECT
// is it the manifest. If so ignore it	WITHOUT_CLASSIFICATION	0.9999997486526824	WITHOUT_CLASSIFICATION	2.5134731770766336E-7	DEFECT
//File other then class changed   rebuild	WITHOUT_CLASSIFICATION	0.9999970537828686	WITHOUT_CLASSIFICATION	2.9462171312874934E-6	DEFECT
// a file doesnt exist rebuild	WITHOUT_CLASSIFICATION	0.9999999461027602	WITHOUT_CLASSIFICATION	5.389723962967236E-8	DEFECT
//Copy files from old weblogic jar	WITHOUT_CLASSIFICATION	0.999999683153652	WITHOUT_CLASSIFICATION	3.1684634813983304E-7	DEFECT
// Use the entry from the generic jar	WITHOUT_CLASSIFICATION	0.9999997822744993	WITHOUT_CLASSIFICATION	2.177255007769465E-7	DEFECT
//use fle from original weblogic jar	WITHOUT_CLASSIFICATION	0.999999961423651	WITHOUT_CLASSIFICATION	3.857634900233555E-8	DEFECT
// need to close files and perhaps rename output	WITHOUT_CLASSIFICATION	0.9999995643411165	WITHOUT_CLASSIFICATION	4.356588834688097E-7	DEFECT
// empty	WITHOUT_CLASSIFICATION	0.9999983084942884	WITHOUT_CLASSIFICATION	1.6915057116291654E-6	DEFECT
// if the implementation classes don;t exist regenerate	WITHOUT_CLASSIFICATION	0.9999970046902352	WITHOUT_CLASSIFICATION	2.9953097646549617E-6	DEFECT
// any problems - just regenerate	WITHOUT_CLASSIFICATION	0.99999853166261	WITHOUT_CLASSIFICATION	1.4683373900744105E-6	DEFECT
// create a Java task to do the rebuild	WITHOUT_CLASSIFICATION	0.9999999059541913	WITHOUT_CLASSIFICATION	9.404580866752141E-8	DEFECT
//weblogic.ejbc.main(args);	WITHOUT_CLASSIFICATION	0.9999995457704722	WITHOUT_CLASSIFICATION	4.542295277268067E-7	DEFECT
/* Build and populate an instance of the ejbc utility */	WITHOUT_CLASSIFICATION	0.9999990850072844	WITHOUT_CLASSIFICATION	9.149927156691762E-7	DEFECT
// Have to catch this because of the semantics of calling main()	WITHOUT_CLASSIFICATION	0.9999984257923855	WITHOUT_CLASSIFICATION	1.574207614429194E-6	DEFECT
//classpath	WITHOUT_CLASSIFICATION	0.9999986175437103	WITHOUT_CLASSIFICATION	1.3824562897157488E-6	DEFECT
/* Attributes set by the Ant build file */	WITHOUT_CLASSIFICATION	0.9999996339313987	WITHOUT_CLASSIFICATION	3.660686013450694E-7	DEFECT
// Get the filename of vendor specific descriptor	WITHOUT_CLASSIFICATION	0.9999999947909903	WITHOUT_CLASSIFICATION	5.209009625481146E-9	DEFECT
//trim the META_INF\ off of the file name	WITHOUT_CLASSIFICATION	0.9999993852395824	WITHOUT_CLASSIFICATION	6.147604176197159E-7	DEFECT
// Is the ser file or any of the source files newer then the class files. // firstly find the oldest of the two class files.	WITHOUT_CLASSIFICATION	0.9999979753232794	WITHOUT_CLASSIFICATION	2.0246767206322526E-6	DEFECT
// run with no exit for better reporting	WITHOUT_CLASSIFICATION	0.9999984518631555	WITHOUT_CLASSIFICATION	1.5481368445340213E-6	DEFECT
//weblogic.ejbc.main(newArgs);	WITHOUT_CLASSIFICATION	0.999999793669577	WITHOUT_CLASSIFICATION	2.0633042292581722E-7	DEFECT
/*     * Regardless of the name of the iAS-specific EJB descriptor file, it will     * written in the completed JAR file as "ias-ejb-jar.xml".  This is the     * naming convention implemented by iAS.     */	WITHOUT_CLASSIFICATION	0.9999985076715359	WITHOUT_CLASSIFICATION	1.4923284640588796E-6	DEFECT
/* Add CMP descriptors to the list of EJB files */	WITHOUT_CLASSIFICATION	0.9999967124565646	WITHOUT_CLASSIFICATION	3.287543435290115E-6	DEFECT
/* Only calculate the descriptor name once */	WITHOUT_CLASSIFICATION	0.9999999714705833	WITHOUT_CLASSIFICATION	2.852941664571061E-8	DEFECT
// Directory path of the EJB descriptor // Filename appearing before name terminator // Filename appearing after the name terminator	WITHOUT_CLASSIFICATION	0.9999903541167195	WITHOUT_CLASSIFICATION	9.645883280437742E-6	DEFECT
/* Find the end of the standard descriptor's relative path */	WITHOUT_CLASSIFICATION	0.9999959892510533	WITHOUT_CLASSIFICATION	4.010748946689141E-6	DEFECT
/* Check to see if the standard name is used (there's no basename) */	WITHOUT_CLASSIFICATION	0.999999997239917	WITHOUT_CLASSIFICATION	2.7600830370670845E-9	DEFECT
/*             * Check for the odd case where the terminator and/or filename             * extension aren't found.  These will ensure "ias-" appears at the             * end of the name and before the '.' (if present).             */	WITHOUT_CLASSIFICATION	0.9999976877125493	WITHOUT_CLASSIFICATION	2.312287450790064E-6	DEFECT
//choose the right vendor DD	WITHOUT_CLASSIFICATION	0.9999636858757678	WITHOUT_CLASSIFICATION	3.631412423221985E-5	DEFECT
// ejb jar file to verify	WITHOUT_CLASSIFICATION	0.9999995157106668	WITHOUT_CLASSIFICATION	4.842893332936145E-7	DEFECT
//debug ?	WITHOUT_CLASSIFICATION	0.9998820274849416	WITHOUT_CLASSIFICATION	1.179725150583704E-4	DEFECT
//set the classpath	WITHOUT_CLASSIFICATION	0.9999995789363485	WITHOUT_CLASSIFICATION	4.2106365152714836E-7	DEFECT
//list file	WITHOUT_CLASSIFICATION	0.9999994347651113	WITHOUT_CLASSIFICATION	5.6523488878375E-7	DEFECT
//no TIE classes	WITHOUT_CLASSIFICATION	0.9999996598602423	WITHOUT_CLASSIFICATION	3.4013975769916216E-7	DEFECT
//root dir	WITHOUT_CLASSIFICATION	0.9999601618697096	WITHOUT_CLASSIFICATION	3.983813029044866E-5	DEFECT
//compiling order	WITHOUT_CLASSIFICATION	0.9999976784227884	WITHOUT_CLASSIFICATION	2.321577211550527E-6	DEFECT
//add the home class	WITHOUT_CLASSIFICATION	0.9999793973914052	WITHOUT_CLASSIFICATION	2.06026085948025E-5	DEFECT
//build the home classes list.	WITHOUT_CLASSIFICATION	0.9999981794809377	WITHOUT_CLASSIFICATION	1.8205190621659218E-6	DEFECT
//remove .class extension	WITHOUT_CLASSIFICATION	0.9999380654818846	WITHOUT_CLASSIFICATION	6.193451811540088E-5	DEFECT
//add the gen files to the collection	WITHOUT_CLASSIFICATION	0.999879653478665	WITHOUT_CLASSIFICATION	1.2034652133494844E-4	DEFECT
//remove the .class	WITHOUT_CLASSIFICATION	0.9999937682956674	WITHOUT_CLASSIFICATION	6.231704332538664E-6	DEFECT
// Get the Extensions document	WITHOUT_CLASSIFICATION	0.9999995606635114	WITHOUT_CLASSIFICATION	4.3933648866957317E-7	DEFECT
// We attempt to put in the MAP and Schema files of CMP beans	WITHOUT_CLASSIFICATION	0.9999968332006492	WITHOUT_CLASSIFICATION	3.1667993507656025E-6	DEFECT
// Add the Map file	WITHOUT_CLASSIFICATION	0.999999936096061	WITHOUT_CLASSIFICATION	6.390393909286273E-8	DEFECT
// Theres nothing else to see here...keep moving sonny	WITHOUT_CLASSIFICATION	0.9999790750663219	WITHOUT_CLASSIFICATION	2.0924933678063166E-5	DEFECT
// Set the options	WITHOUT_CLASSIFICATION	0.9999997566591948	WITHOUT_CLASSIFICATION	2.4334080516648514E-7	DEFECT
// Set the JvmArgs	WITHOUT_CLASSIFICATION	0.9999984489935114	WITHOUT_CLASSIFICATION	1.5510064884810902E-6	DEFECT
// Set the Environment variable	WITHOUT_CLASSIFICATION	0.9999997076704654	WITHOUT_CLASSIFICATION	2.923295345893443E-7	DEFECT
// Check if list of files to check has been specified	WITHOUT_CLASSIFICATION	0.9999999523519938	WITHOUT_CLASSIFICATION	4.7648006189087995E-8	DEFECT
// Have to catch this because of the semantics of calling main()	WITHOUT_CLASSIFICATION	0.9999984257923855	WITHOUT_CLASSIFICATION	1.574207614429194E-6	DEFECT
//open jar files	WITHOUT_CLASSIFICATION	0.9999996122684248	WITHOUT_CLASSIFICATION	3.87731575175172E-7	DEFECT
//get the list of generic jar entries	WITHOUT_CLASSIFICATION	0.9999999894426104	WITHOUT_CLASSIFICATION	1.0557389671363386E-8	DEFECT
//File are different see if its an object or an interface	WITHOUT_CLASSIFICATION	0.9999996485844511	WITHOUT_CLASSIFICATION	3.5141554890148616E-7	DEFECT
//Interface changed   rebuild jar.	WITHOUT_CLASSIFICATION	0.9999999671029492	WITHOUT_CLASSIFICATION	3.289705067563977E-8	DEFECT
//Object class Changed   update it.	WITHOUT_CLASSIFICATION	0.9999997469831615	WITHOUT_CLASSIFICATION	2.5301683847372503E-7	DEFECT
// is it the manifest. If so ignore it	WITHOUT_CLASSIFICATION	0.9999997486526824	WITHOUT_CLASSIFICATION	2.5134731770766336E-7	DEFECT
//File other then class changed   rebuild	WITHOUT_CLASSIFICATION	0.9999970537828686	WITHOUT_CLASSIFICATION	2.9462171312874934E-6	DEFECT
// Update with changed Bean class	WITHOUT_CLASSIFICATION	0.9999884405695737	WITHOUT_CLASSIFICATION	1.1559430426328029E-5	DEFECT
// Use the entry from the generic jar	WITHOUT_CLASSIFICATION	0.9999997822744993	WITHOUT_CLASSIFICATION	2.177255007769465E-7	DEFECT
// register all the DTDs, both the ones that are known and // any supplied by the user	WITHOUT_CLASSIFICATION	0.9999999939417734	WITHOUT_CLASSIFICATION	6.05822657118885E-9	DEFECT
// Set the working directory	WITHOUT_CLASSIFICATION	0.995586212487158	WITHOUT_CLASSIFICATION	0.004413787512841949	DEFECT
// Set the Java class name	WITHOUT_CLASSIFICATION	0.9999946100654233	WITHOUT_CLASSIFICATION	5.389934576679993E-6	DEFECT
// create the -generic.jar, if required	WITHOUT_CLASSIFICATION	0.9999999063558105	WITHOUT_CLASSIFICATION	9.364418956505862E-8	DEFECT
// create the "undeployed" output .jar, if required	WITHOUT_CLASSIFICATION	0.9999999296173179	WITHOUT_CLASSIFICATION	7.038268207173799E-8	DEFECT
// Only go forward if the generic and the websphere file both exist	WITHOUT_CLASSIFICATION	0.9999999961475505	WITHOUT_CLASSIFICATION	3.85244945541759E-9	DEFECT
//get the list of websphere jar entries	WITHOUT_CLASSIFICATION	0.9999999945385204	WITHOUT_CLASSIFICATION	5.461479574151827E-9	DEFECT
//Cycle Through generic and make sure its in websphere	WITHOUT_CLASSIFICATION	0.9999977119745525	WITHOUT_CLASSIFICATION	2.2880254475648973E-6	DEFECT
// File name/path match // Check files see if same	WITHOUT_CLASSIFICATION	0.9999998630203516	WITHOUT_CLASSIFICATION	1.369796484111982E-7	DEFECT
// a file doesn't exist rebuild	WITHOUT_CLASSIFICATION	0.9999996829834343	WITHOUT_CLASSIFICATION	3.17016565639868E-7	DEFECT
//Copy files from old websphere jar	WITHOUT_CLASSIFICATION	0.9999990066267672	WITHOUT_CLASSIFICATION	9.933732327829227E-7	DEFECT
//use fle from original websphere jar	WITHOUT_CLASSIFICATION	0.9999998834800382	WITHOUT_CLASSIFICATION	1.1651996172532502E-7	DEFECT
// Specification Name must match	WITHOUT_CLASSIFICATION	0.9999999027577118	WITHOUT_CLASSIFICATION	9.72422882135606E-8	DEFECT
// Available specification version must be >= required	WITHOUT_CLASSIFICATION	0.9999999038831956	WITHOUT_CLASSIFICATION	9.611680446550087E-8	DEFECT
// Implementation Vendor ID must match	WITHOUT_CLASSIFICATION	0.9999910837509732	WITHOUT_CLASSIFICATION	8.916249026779802E-6	DEFECT
// Implementation Vendor ID must match	WITHOUT_CLASSIFICATION	0.9999910837509732	WITHOUT_CLASSIFICATION	8.916249026779802E-6	DEFECT
// Implementation version must be >= required	WITHOUT_CLASSIFICATION	0.9999978320626796	WITHOUT_CLASSIFICATION	2.167937320385493E-6	DEFECT
// This available optional package satisfies the requirements	WITHOUT_CLASSIFICATION	0.9999999480575485	WITHOUT_CLASSIFICATION	5.194245140367013E-8	DEFECT
// This available optional package satisfies the requirements	WITHOUT_CLASSIFICATION	0.9999999480575485	WITHOUT_CLASSIFICATION	5.194245140367013E-8	DEFECT
//Reset list of sections	WITHOUT_CLASSIFICATION	0.999998796593293	WITHOUT_CLASSIFICATION	1.2034067069204349E-6	DEFECT
// Extension Name must match	WITHOUT_CLASSIFICATION	0.9999987524641963	WITHOUT_CLASSIFICATION	1.2475358036069297E-6	DEFECT
//Add all the dependency data to manifest for dependencies	WITHOUT_CLASSIFICATION	0.9999998709291571	WITHOUT_CLASSIFICATION	1.2907084282394012E-7	DEFECT
// Check if list of files to check has been specified	WITHOUT_CLASSIFICATION	0.9999999523519938	WITHOUT_CLASSIFICATION	4.7648006189087995E-8	DEFECT
// CheckStyle:MemberNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.999997838294206	WITHOUT_CLASSIFICATION	2.1617057939889446E-6	DEFECT
// CheckStyle:MemberNameCheck ON	WITHOUT_CLASSIFICATION	0.9999990228927881	WITHOUT_CLASSIFICATION	9.771072118204615E-7	DEFECT
// change this to get the objects from the other reference	WITHOUT_CLASSIFICATION	0.9999999450919179	WITHOUT_CLASSIFICATION	5.4908082151153126E-8	DEFECT
//Add all the dependency data to manifest for "optional" //dependencies	WITHOUT_CLASSIFICATION	0.9999999762565583	WITHOUT_CLASSIFICATION	2.3743441705839263E-8	DEFECT
//add in something like //"Extension-List: javahelp java3d"	WITHOUT_CLASSIFICATION	0.9999860179578764	WITHOUT_CLASSIFICATION	1.3982042123594581E-5	DEFECT
//all methods static	WITHOUT_CLASSIFICATION	0.9999993092662779	WITHOUT_CLASSIFICATION	6.907337220855452E-7	DEFECT
/*     * Gets the destination file     */	WITHOUT_CLASSIFICATION	0.9999998310054599	WITHOUT_CLASSIFICATION	1.689945401584692E-7	DEFECT
/*     * Validates URL     */	WITHOUT_CLASSIFICATION	0.999999220924481	WITHOUT_CLASSIFICATION	7.790755189503862E-7	DEFECT
//Load default locale bundle files //using default file encoding scheme.	WITHOUT_CLASSIFICATION	0.9999999674470706	WITHOUT_CLASSIFICATION	3.255292930372824E-8	DEFECT
//if all resource files associated with this bundle //have been scanned for and still not able to //find a single resrouce file, throw exception	WITHOUT_CLASSIFICATION	0.999996962027398	WITHOUT_CLASSIFICATION	3.037972602153218E-6	DEFECT
//So long as the line isn't empty and isn't a comment...	WITHOUT_CLASSIFICATION	0.999633873462183	WITHOUT_CLASSIFICATION	3.661265378170518E-4	DEFECT
//Legal Key-Value separators are :, = and white space.	WITHOUT_CLASSIFICATION	0.9999998373254598	WITHOUT_CLASSIFICATION	1.62674540161946E-7	DEFECT
//Only if we do have a key is there going to be a value	WITHOUT_CLASSIFICATION	0.9999274795976499	WITHOUT_CLASSIFICATION	7.25204023500417E-5	DEFECT
//Handle line continuations, if any	WITHOUT_CLASSIFICATION	0.9999997113163726	WITHOUT_CLASSIFICATION	2.8868362737514606E-7	DEFECT
//Has key already been loaded into resourceMap?	WITHOUT_CLASSIFICATION	0.999999966819687	WITHOUT_CLASSIFICATION	3.318031308818413E-8	DEFECT
//Make sure parent dirs exist, else, create them.	WITHOUT_CLASSIFICATION	0.9999997952893206	WITHOUT_CLASSIFICATION	2.047106794818803E-7	DEFECT
//Check to see if dest file has to be recreated	WITHOUT_CLASSIFICATION	0.9999996378224498	WITHOUT_CLASSIFICATION	3.621775501299362E-7	DEFECT
// is there a startToken // and there is still stuff following the startToken	WITHOUT_CLASSIFICATION	0.9990989176943627	WITHOUT_CLASSIFICATION	9.01082305637228E-4	DEFECT
// we found a starttoken, is there an endtoken following? // start at token+tokenlength because start and end // token may be indentical	WITHOUT_CLASSIFICATION	0.9995010123061888	WITHOUT_CLASSIFICATION	4.989876938111802E-4	DEFECT
// grab the token	WITHOUT_CLASSIFICATION	0.9999992242672213	WITHOUT_CLASSIFICATION	7.75732778803235E-7	DEFECT
// If there is a white space or = or :, then // it isn't to be treated as a valid key.	WITHOUT_CLASSIFICATION	0.999995879100196	WITHOUT_CLASSIFICATION	4.120899803959189E-6	DEFECT
// find the replace string	WITHOUT_CLASSIFICATION	0.9999999426170606	WITHOUT_CLASSIFICATION	5.7382939297899994E-8	DEFECT
// generate the new line	WITHOUT_CLASSIFICATION	0.9999998379643035	WITHOUT_CLASSIFICATION	1.6203569662116414E-7	DEFECT
// set start position for next search	WITHOUT_CLASSIFICATION	0.9999981885084339	WITHOUT_CLASSIFICATION	1.811491566126137E-6	DEFECT
// find next starttoken	WITHOUT_CLASSIFICATION	0.9999973955811735	WITHOUT_CLASSIFICATION	2.6044188265563286E-6	DEFECT
// deal with specified srcDir	WITHOUT_CLASSIFICATION	0.9999999924821197	WITHOUT_CLASSIFICATION	7.517880279220774E-9	DEFECT
// deal with the filesets	WITHOUT_CLASSIFICATION	0.9999996903211805	WITHOUT_CLASSIFICATION	3.0967881940103083E-7	DEFECT
// remove any files that shouldn't be overwritten.	WITHOUT_CLASSIFICATION	0.9996636366622009	WITHOUT_CLASSIFICATION	3.363633377990501E-4	DEFECT
// check that the password has been set	WITHOUT_CLASSIFICATION	0.9999985388387158	WITHOUT_CLASSIFICATION	1.4611612841701988E-6	DEFECT
// check for missing application on deploy & update	WITHOUT_CLASSIFICATION	0.999999977134755	WITHOUT_CLASSIFICATION	2.2865245014038792E-8	DEFECT
// check for missing source on deploy & update	WITHOUT_CLASSIFICATION	0.9999999906791082	WITHOUT_CLASSIFICATION	9.320891920096182E-9	DEFECT
// check for missing application on delete & undeploy	WITHOUT_CLASSIFICATION	0.9999999878467805	WITHOUT_CLASSIFICATION	1.2153219536858738E-8	DEFECT
// keys to optional attributes	WITHOUT_CLASSIFICATION	0.9999998439301493	WITHOUT_CLASSIFICATION	1.5606985065120756E-7	DEFECT
// constructs the "-url <url> -debug <action> <password>" portion // of the commmand line	WITHOUT_CLASSIFICATION	0.9999843095954039	WITHOUT_CLASSIFICATION	1.569040459612507E-5	DEFECT
/////////////////////////////////////////////////////////////////////////// // // Place vendor specific tool creations here. // ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999997645606852	WITHOUT_CLASSIFICATION	2.3543931485067397E-7	DEFECT
/////////////////////////////////////////////////////////////////////////// // // Execute method // ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999997603367949	WITHOUT_CLASSIFICATION	2.396632050668347E-7	DEFECT
/////////////////////////////////////////////////////////////////////////// // // Set/get methods // ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999997023245855	WITHOUT_CLASSIFICATION	2.9767541457483657E-7	DEFECT
// keys to optional attributes	WITHOUT_CLASSIFICATION	0.9999998439301493	WITHOUT_CLASSIFICATION	1.5606985065120756E-7	DEFECT
// convert backslashes to slashes, otherwise jjtree will // put this as comments and this seems to confuse javacc	WITHOUT_CLASSIFICATION	0.9999986089275298	WITHOUT_CLASSIFICATION	1.3910724702958445E-6	DEFECT
// required attributes	WITHOUT_CLASSIFICATION	0.9999996547371696	WITHOUT_CLASSIFICATION	3.452628304236283E-7	DEFECT
// required attributes	WITHOUT_CLASSIFICATION	0.9999996547371696	WITHOUT_CLASSIFICATION	3.452628304236283E-7	DEFECT
// required attributes	WITHOUT_CLASSIFICATION	0.9999996547371696	WITHOUT_CLASSIFICATION	3.452628304236283E-7	DEFECT
// load command line with optional attributes	WITHOUT_CLASSIFICATION	0.9999999797824174	WITHOUT_CLASSIFICATION	2.0217582649270092E-8	DEFECT
// load command line with optional attributes	WITHOUT_CLASSIFICATION	0.9999999797824174	WITHOUT_CLASSIFICATION	2.0217582649270092E-8	DEFECT
// load command line with optional attributes	WITHOUT_CLASSIFICATION	0.9999999797824174	WITHOUT_CLASSIFICATION	2.0217582649270092E-8	DEFECT
// use the directory containing the target as the output directory	WITHOUT_CLASSIFICATION	0.9999999998616291	WITHOUT_CLASSIFICATION	1.3837080345216736E-10	DEFECT
// use the directory containing the target as the output directory	WITHOUT_CLASSIFICATION	0.9999999998616291	WITHOUT_CLASSIFICATION	1.3837080345216736E-10	DEFECT
// used by jpackage for JavaCC 3.x	WITHOUT_CLASSIFICATION	0.9999998851880085	WITHOUT_CLASSIFICATION	1.1481199146371825E-7	DEFECT
// check the target is a file	WITHOUT_CLASSIFICATION	0.999999984538661	WITHOUT_CLASSIFICATION	1.5461338913874707E-8	DEFECT
// determine if the generated java file is up-to-date	WITHOUT_CLASSIFICATION	0.9999999934919974	WITHOUT_CLASSIFICATION	6.508002505146117E-9	DEFECT
// Extract file's base-name	WITHOUT_CLASSIFICATION	0.9999978529221162	WITHOUT_CLASSIFICATION	2.1470778838281484E-6	DEFECT
// Replace the file's extension with '.java'	WITHOUT_CLASSIFICATION	0.9999983436804419	WITHOUT_CLASSIFICATION	1.6563195579946907E-6	DEFECT
// Change the directory	WITHOUT_CLASSIFICATION	0.9999999427051369	WITHOUT_CLASSIFICATION	5.729486308292292E-8	DEFECT
// This default has been good enough until Ant 1.6.3, so stick // with it	WITHOUT_CLASSIFICATION	0.9999973997234123	WITHOUT_CLASSIFICATION	2.6002765876721954E-6	DEFECT
// first search for the "old" javah class in 1.4.2 tools.jar	WITHOUT_CLASSIFICATION	0.9999999680732917	WITHOUT_CLASSIFICATION	3.1926708350866456E-8	DEFECT
// assume older than 1.4.2 tools.jar	WITHOUT_CLASSIFICATION	0.9999999222843385	WITHOUT_CLASSIFICATION	7.771566151422718E-8	DEFECT
//private CommandlineJava commandline = new CommandlineJava();	WITHOUT_CLASSIFICATION	0.9999988046914987	WITHOUT_CLASSIFICATION	1.1953085012976373E-6	DEFECT
// required attributes // Deprecated! // Use this going forward	WITHOUT_CLASSIFICATION	0.9999997208553606	WITHOUT_CLASSIFICATION	2.791446394089028E-7	DEFECT
// optional attributes	WITHOUT_CLASSIFICATION	0.9999999906407828	WITHOUT_CLASSIFICATION	9.359217252591493E-9	DEFECT
// execute the test and get the return code	WITHOUT_CLASSIFICATION	0.9999998821823366	WITHOUT_CLASSIFICATION	1.1781766340528888E-7	DEFECT
// if there is an error/failure and that it should halt, stop // everything otherwise just log a statement	WITHOUT_CLASSIFICATION	0.9999987032440272	WITHOUT_CLASSIFICATION	1.2967559728346567E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999996763950936	WITHOUT_CLASSIFICATION	3.2360490638735057E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999996763950936	WITHOUT_CLASSIFICATION	3.2360490638735057E-7	DEFECT
/* int accessFlags = */	WITHOUT_CLASSIFICATION	0.9999899255978928	WITHOUT_CLASSIFICATION	1.0074402107248552E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999998952218317	WITHOUT_CLASSIFICATION	1.0477816833988038E-7	DEFECT
// not necessary as JDepend would fail, but why loose // some time?	WITHOUT_CLASSIFICATION	0.9995065484167591	WITHOUT_CLASSIFICATION	4.934515832409498E-4	DEFECT
// This bit turns <exclude> child tags into patters to ignore	WITHOUT_CLASSIFICATION	0.9999998538540859	WITHOUT_CLASSIFICATION	1.4614591406549669E-7	DEFECT
// JL: comment extracted from JUnitTask (and slightly modified)	WITHOUT_CLASSIFICATION	0.9999821092046492	WITHOUT_CLASSIFICATION	1.789079535079385E-5	DEFECT
// if not set, auto-create the ClassPath from the project	WITHOUT_CLASSIFICATION	0.999999664322988	WITHOUT_CLASSIFICATION	3.356770119536166E-7	DEFECT
// having a space between the file and its path causes commandline // to add quotes around the argument thus making JDepend not taking // it into account. Thus we split it in two	WITHOUT_CLASSIFICATION	0.9999995798289354	WITHOUT_CLASSIFICATION	4.201710646089482E-7	DEFECT
// This is the new way - use classespath - code is the // same for now	WITHOUT_CLASSIFICATION	0.9999642903772027	WITHOUT_CLASSIFICATION	3.570962279723384E-5	DEFECT
// read in all constant pool entries.	WITHOUT_CLASSIFICATION	0.9999994667020262	WITHOUT_CLASSIFICATION	5.33297973796368E-7	DEFECT
// verify this is a valid class file.	WITHOUT_CLASSIFICATION	0.9999662727047818	WITHOUT_CLASSIFICATION	3.372729521822332E-5	DEFECT
/* int version = */	WITHOUT_CLASSIFICATION	0.9999969620107975	WITHOUT_CLASSIFICATION	3.0379892025824245E-6	DEFECT
// read the constant pool.	WITHOUT_CLASSIFICATION	0.9999995628670079	WITHOUT_CLASSIFICATION	4.3713299201047933E-7	DEFECT
// read access flags and class index.	WITHOUT_CLASSIFICATION	0.999872461947116	WITHOUT_CLASSIFICATION	1.275380528839377E-4	DEFECT
//Be sure everything has been set.	WITHOUT_CLASSIFICATION	0.9999992864712091	WITHOUT_CLASSIFICATION	7.135287909149599E-7	DEFECT
//Do the merge	WITHOUT_CLASSIFICATION	0.9999961326525948	WITHOUT_CLASSIFICATION	3.867347405203514E-6	DEFECT
//Add this file to the addfiles Vector and add it //later at the top level of the output file.	WITHOUT_CLASSIFICATION	0.9999996084709154	WITHOUT_CLASSIFICATION	3.9152908451280923E-7	DEFECT
//do nothing	WITHOUT_CLASSIFICATION	0.9999979347159165	WITHOUT_CLASSIFICATION	2.065284083608523E-6	DEFECT
// jlink output input1 ... inputN	WITHOUT_CLASSIFICATION	0.999980284572023	WITHOUT_CLASSIFICATION	1.9715427976928213E-5	DEFECT
// To maintain compatibility with the command-line version, // we will only add files to be merged.	WITHOUT_CLASSIFICATION	0.9999999538683596	WITHOUT_CLASSIFICATION	4.613164044624284E-8	DEFECT
/*     * Actually performs the merging of f into the output.     * f should be a zip or jar file.     */	WITHOUT_CLASSIFICATION	0.9999784943266702	WITHOUT_CLASSIFICATION	2.1505673329816973E-5	DEFECT
//Check to see that the file with name "name" exists.	WITHOUT_CLASSIFICATION	0.9999993548056927	WITHOUT_CLASSIFICATION	6.451943071940945E-7	DEFECT
//META-INF not found in the name of the entry. Go ahead and process it.	WITHOUT_CLASSIFICATION	0.9999995144417773	WITHOUT_CLASSIFICATION	4.855582227431002E-7	DEFECT
//Weblogic jspc does not seem to work unless u explicitly set this... // Does not take the classpath from the env.... // Am i missing something about the Java task??	WITHOUT_CLASSIFICATION	0.635982424492291	WITHOUT_CLASSIFICATION	0.36401757550770913	DEFECT
//do nothing	WITHOUT_CLASSIFICATION	0.9999979347159165	WITHOUT_CLASSIFICATION	2.065284083608523E-6	DEFECT
/*     * Necessary in the case where you add a entry that     * is not compressed.     */	WITHOUT_CLASSIFICATION	0.999999831589102	WITHOUT_CLASSIFICATION	1.6841089796263556E-7	DEFECT
//Ignore manifest entries.  They're bound to cause conflicts between //files that are being merged.  User should supply their own //manifest file when doing the merge.	WITHOUT_CLASSIFICATION	0.9999999907207089	WITHOUT_CLASSIFICATION	9.279290997626832E-9	DEFECT
//It was the duplicate entry.	WITHOUT_CLASSIFICATION	0.9999995393989206	WITHOUT_CLASSIFICATION	4.6060107947488143E-7	DEFECT
/*     * Adds contents of a directory to the output.     */	WITHOUT_CLASSIFICATION	0.9999998047612617	WITHOUT_CLASSIFICATION	1.9523873826320447E-7	DEFECT
/*     * Gets the name of an entry in the file.  This is the real name     * which for a class is the name of the package with the class     * name appended.     */	WITHOUT_CLASSIFICATION	0.99999984117686	WITHOUT_CLASSIFICATION	1.5882313999674588E-7	DEFECT
// see if the file is in fact a .class file, and determine its actual name.	WITHOUT_CLASSIFICATION	0.9999999795019601	WITHOUT_CLASSIFICATION	2.0498039913008316E-8	DEFECT
/*     * Adds a file to the output stream.     */	WITHOUT_CLASSIFICATION	0.9999998144876951	WITHOUT_CLASSIFICATION	1.855123048592422E-7	DEFECT
//Make sure file exists	WITHOUT_CLASSIFICATION	0.9999988628949957	WITHOUT_CLASSIFICATION	1.137105004303698E-6	DEFECT
/*     * A convenience method that several other methods might call.     */	WITHOUT_CLASSIFICATION	0.9999991177893326	WITHOUT_CLASSIFICATION	8.822106674900075E-7	DEFECT
//This entry already exists. So, go with the first one.	WITHOUT_CLASSIFICATION	0.9999999291877025	WITHOUT_CLASSIFICATION	7.081229746779295E-8	DEFECT
/*     * A method that does the work on a given entry in a mergefile.     * The big deal is to set the right parameters in the ZipEntry     * on the output stream.     */	WITHOUT_CLASSIFICATION	0.9999767680725898	WITHOUT_CLASSIFICATION	2.3231927410202346E-5	DEFECT
//Note, don't need to specify size or crc for compressed files.	WITHOUT_CLASSIFICATION	0.9999993941892136	WITHOUT_CLASSIFICATION	6.058107864731693E-7	DEFECT
//use the systemclasspath as well, to include the ant jar	WITHOUT_CLASSIFICATION	0.9999999127595709	WITHOUT_CLASSIFICATION	8.724042917659954E-8	DEFECT
/*     * Necessary in the case where you add a entry that     * is not compressed.     */	WITHOUT_CLASSIFICATION	0.999999831589102	WITHOUT_CLASSIFICATION	1.6841089796263556E-7	DEFECT
//TODO Test on other versions of weblogic //TODO add more attributes to the task, to take care of all jspc options //TODO Test on Unix	WITHOUT_CLASSIFICATION	0.9999952153354694	WITHOUT_CLASSIFICATION	4.784664530490849E-6	DEFECT
//private String compilerPath; //fully qualified name for the compiler executable	WITHOUT_CLASSIFICATION	0.9999994718505942	WITHOUT_CLASSIFICATION	5.281494057490515E-7	DEFECT
// get all the files in the sourceDirectory	WITHOUT_CLASSIFICATION	0.9999995066622706	WITHOUT_CLASSIFICATION	4.933377294102804E-7	DEFECT
//Weblogic.jspc calls System.exit() ... have to fork // Therefore, takes loads of time // Can pass directories at a time (*.jsp) but easily runs out of // memory on hefty dirs (even on  a Sun)	WITHOUT_CLASSIFICATION	0.9987633796497835	WITHOUT_CLASSIFICATION	0.0012366203502164781	DEFECT
// apply transformation	WITHOUT_CLASSIFICATION	0.9999998070991378	WITHOUT_CLASSIFICATION	1.9290086204255204E-7	DEFECT
//end class	WITHOUT_CLASSIFICATION	0.9999944497203814	WITHOUT_CLASSIFICATION	5.550279618554876E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999996763950936	WITHOUT_CLASSIFICATION	3.2360490638735057E-7	DEFECT
// CheckStyle:ConstantNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9999985489535307	WITHOUT_CLASSIFICATION	1.4510464693492277E-6	DEFECT
// CheckStyle:ConstantNameCheck ON	WITHOUT_CLASSIFICATION	0.9999991607398475	WITHOUT_CLASSIFICATION	8.392601523947596E-7	DEFECT
// now we need to populate the compiler adapter	WITHOUT_CLASSIFICATION	0.9999998709516079	WITHOUT_CLASSIFICATION	1.290483921458606E-7	DEFECT
// finally, lets execute the compiler!!	WITHOUT_CLASSIFICATION	0.9999922048589682	WITHOUT_CLASSIFICATION	7.795141031821974E-6	DEFECT
// Create an instance of the compiler, redirecting output to // the project log	WITHOUT_CLASSIFICATION	0.999999628603841	WITHOUT_CLASSIFICATION	3.713961590711331E-7	DEFECT
// compile the source files	WITHOUT_CLASSIFICATION	0.9999999440478888	WITHOUT_CLASSIFICATION	5.595211111687293E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999998952218317	WITHOUT_CLASSIFICATION	1.0477816833988038E-7	DEFECT
//demand create vector of filesets	WITHOUT_CLASSIFICATION	0.9999997437286051	WITHOUT_CLASSIFICATION	2.5627139493692017E-7	DEFECT
// make sure that we've got a destdir	WITHOUT_CLASSIFICATION	0.9999994147239522	WITHOUT_CLASSIFICATION	5.852760478698339E-7	DEFECT
//bind to a compiler	WITHOUT_CLASSIFICATION	0.9999991107975166	WITHOUT_CLASSIFICATION	8.89202483453332E-7	DEFECT
//if we are a webapp, hand off to the compiler, which had better handle it	WITHOUT_CLASSIFICATION	0.9999999270195101	WITHOUT_CLASSIFICATION	7.298048993731383E-8	DEFECT
// make sure that we've got a srcdir	WITHOUT_CLASSIFICATION	0.9999990563708298	WITHOUT_CLASSIFICATION	9.436291701573284E-7	DEFECT
// if the compiler does its own dependency stuff, we just call it right now	WITHOUT_CLASSIFICATION	0.9999988958798426	WITHOUT_CLASSIFICATION	1.1041201573832484E-6	DEFECT
//the remainder of this method is only for compilers that need their dependency work done	WITHOUT_CLASSIFICATION	0.9995902198231897	WITHOUT_CLASSIFICATION	4.097801768102494E-4	DEFECT
// scan source directories and dest directory to build up both copy // lists and compile lists	WITHOUT_CLASSIFICATION	0.9999999988862772	WITHOUT_CLASSIFICATION	1.1137227820917443E-9	DEFECT
//        String srcFileDir=srcFile.getParent();	WITHOUT_CLASSIFICATION	0.9999999425540499	WITHOUT_CLASSIFICATION	5.7445950105524484E-8	DEFECT
//end inner class	WITHOUT_CLASSIFICATION	0.9999944866626193	WITHOUT_CLASSIFICATION	5.5133373808600915E-6	DEFECT
// since we don't mangle extensions like the servlet does, // we need to check for keywords as class names	WITHOUT_CLASSIFICATION	0.9999999701215135	WITHOUT_CLASSIFICATION	2.987848648979359E-8	DEFECT
// first char is more restrictive than the rest	WITHOUT_CLASSIFICATION	0.999999973080237	WITHOUT_CLASSIFICATION	2.691976299433319E-8	DEFECT
// this is the rest	WITHOUT_CLASSIFICATION	0.9998760411675974	WITHOUT_CLASSIFICATION	1.2395883240255446E-4	DEFECT
// If the first char is not a start of Java identifier or is _ // prepend a '_'.	WITHOUT_CLASSIFICATION	0.9999999806328598	WITHOUT_CLASSIFICATION	1.9367140266983374E-8	DEFECT
//we are forking here to be sure that if JspC calls //System.exit() it doesn't halt the build	WITHOUT_CLASSIFICATION	0.9999316453360056	WITHOUT_CLASSIFICATION	6.835466399438484E-5	DEFECT
//tomcat4.0 gets the old mangler	WITHOUT_CLASSIFICATION	0.999998367376541	WITHOUT_CLASSIFICATION	1.6326234590171854E-6	DEFECT
//tomcat4.1 gets the new one	WITHOUT_CLASSIFICATION	0.9999995079817073	WITHOUT_CLASSIFICATION	4.920182926404076E-7	DEFECT
// for all other possibilities	WITHOUT_CLASSIFICATION	0.9999999926743754	WITHOUT_CLASSIFICATION	7.325624547167298E-9	DEFECT
// append the err and output streams to the log	WITHOUT_CLASSIFICATION	0.9999979035144242	WITHOUT_CLASSIFICATION	2.0964855758434987E-6	DEFECT
// acrobatic cast.	WITHOUT_CLASSIFICATION	0.9999999004014798	WITHOUT_CLASSIFICATION	9.959852014950402E-8	DEFECT
// set the destination directory relative from the project if needed.	WITHOUT_CLASSIFICATION	0.9999999866847163	WITHOUT_CLASSIFICATION	1.3315283683888487E-8	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999996763950936	WITHOUT_CLASSIFICATION	3.2360490638735057E-7	DEFECT
// sanity check	WITHOUT_CLASSIFICATION	0.9999998569632826	WITHOUT_CLASSIFICATION	1.4303671725529172E-7	DEFECT
// plain impossible	WITHOUT_CLASSIFICATION	0.9999998595330855	WITHOUT_CLASSIFICATION	1.4046691457230407E-7	DEFECT
// Quick return - no output do nothing.	WITHOUT_CLASSIFICATION	0.999999928869947	WITHOUT_CLASSIFICATION	7.113005304613673E-8	DEFECT
// append the err and output streams to the log	WITHOUT_CLASSIFICATION	0.9999979035144242	WITHOUT_CLASSIFICATION	2.0964855758434987E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999998952218317	WITHOUT_CLASSIFICATION	1.0477816833988038E-7	DEFECT
// If style dir is not specified we have to retrieve // the stylesheet from the classloader	WITHOUT_CLASSIFICATION	0.9999991038704653	WITHOUT_CLASSIFICATION	8.961295346307163E-7	DEFECT
// If we are here, then the style dir is here and we // should read the stylesheet from the filesystem	WITHOUT_CLASSIFICATION	0.9999936360279379	WITHOUT_CLASSIFICATION	6.363972062072007E-6	DEFECT
// xalan 2	WITHOUT_CLASSIFICATION	0.9999951933530997	WITHOUT_CLASSIFICATION	4.806646900237129E-6	DEFECT
// xalan xsltc	WITHOUT_CLASSIFICATION	0.9999985802586947	WITHOUT_CLASSIFICATION	1.4197413053930008E-6	DEFECT
// jdk 1.5 xsltc	WITHOUT_CLASSIFICATION	0.9999978460019882	WITHOUT_CLASSIFICATION	2.153998011864165E-6	DEFECT
// must be plain, ensured by TypeAttribute	WITHOUT_CLASSIFICATION	0.9999999931755774	WITHOUT_CLASSIFICATION	6.8244225255306114E-9	DEFECT
// pre JUnit 3.7	WITHOUT_CLASSIFICATION	0.9999987895525125	WITHOUT_CLASSIFICATION	1.210447487474964E-6	DEFECT
// can be null if an error occurred in setUp	WITHOUT_CLASSIFICATION	0.9999992437570454	WITHOUT_CLASSIFICATION	7.562429545797898E-7	DEFECT
// PlainJUnitResultFormatter	WITHOUT_CLASSIFICATION	0.9999998653255242	WITHOUT_CLASSIFICATION	1.3467447575274329E-7	DEFECT
// Snapshot of the system properties	WITHOUT_CLASSIFICATION	0.9999991046212431	WITHOUT_CLASSIFICATION	8.95378756909511E-7	DEFECT
//add the timestamp	WITHOUT_CLASSIFICATION	0.9999996144398248	WITHOUT_CLASSIFICATION	3.855601751936423E-7	DEFECT
//and the hostname.	WITHOUT_CLASSIFICATION	0.999998803294713	WITHOUT_CLASSIFICATION	1.1967052869705753E-6	DEFECT
// Output properties	WITHOUT_CLASSIFICATION	0.9999998056656721	WITHOUT_CLASSIFICATION	1.943343278905176E-7	DEFECT
// a TestSuite can contain Tests from multiple classes, // even tests with the same name - disambiguate them.	WITHOUT_CLASSIFICATION	0.9999999552487842	WITHOUT_CLASSIFICATION	4.4751215722532564E-8	DEFECT
// XMLJUnitResultFormatter	WITHOUT_CLASSIFICATION	0.9999827668678185	WITHOUT_CLASSIFICATION	1.7233132181519703E-5	DEFECT
// Do we send output to the formatters ?	WITHOUT_CLASSIFICATION	0.9999999660299351	WITHOUT_CLASSIFICATION	3.397006488703416E-8	DEFECT
//   Attributes for basetest	WITHOUT_CLASSIFICATION	0.999999514317387	WITHOUT_CLASSIFICATION	4.85682612910601E-7	DEFECT
// forceLoadClass is not convenient here since it would not // properly deal with inner classes of these classes.	WITHOUT_CLASSIFICATION	0.9999814135382995	WITHOUT_CLASSIFICATION	1.858646170046269E-5	DEFECT
/* forkMode.getValue().equals(ForkMode.PER_BATCH) */	WITHOUT_CLASSIFICATION	0.9999866434696819	WITHOUT_CLASSIFICATION	1.335653031804389E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999996763950936	WITHOUT_CLASSIFICATION	3.2360490638735057E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999998846864979	WITHOUT_CLASSIFICATION	1.1531350213453716E-7	DEFECT
// execute the test and get the return code	WITHOUT_CLASSIFICATION	0.9999998821823366	WITHOUT_CLASSIFICATION	1.1781766340528888E-7	DEFECT
// execute the test and get the return code	WITHOUT_CLASSIFICATION	0.9999998821823366	WITHOUT_CLASSIFICATION	1.1781766340528888E-7	DEFECT
// null watchdog means no timeout, you'd better not check with null	WITHOUT_CLASSIFICATION	0.999989358040515	WITHOUT_CLASSIFICATION	1.0641959485095928E-5	DEFECT
// if there is an error/failure and that it should halt, stop // everything otherwise just log a statement	WITHOUT_CLASSIFICATION	0.9999987032440272	WITHOUT_CLASSIFICATION	1.2967559728346567E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999998952218317	WITHOUT_CLASSIFICATION	1.0477816833988038E-7	DEFECT
// set the default values if not specified //@todo should be moved to the test class instead.	WITHOUT_CLASSIFICATION	0.9999999366931889	WITHOUT_CLASSIFICATION	6.330681109351472E-8	DEFECT
// Create a temporary file to pass the test cases to run to // the runner (one test case per line)	WITHOUT_CLASSIFICATION	0.9999984211646136	WITHOUT_CLASSIFICATION	1.5788353864027951E-6	DEFECT
// #31885	WITHOUT_CLASSIFICATION	0.9999954873244491	WITHOUT_CLASSIFICATION	4.5126755508859055E-6	DEFECT
// ignored.	WITHOUT_CLASSIFICATION	0.9999998615293759	WITHOUT_CLASSIFICATION	1.384706240499855E-7	DEFECT
// in VM is not very nice since it could probably hang the // whole build. IMHO this method should be avoided and it would be best // to remove it in future versions. TBD. (SBa)	WITHOUT_CLASSIFICATION	0.8023620939295182	WITHOUT_CLASSIFICATION	0.19763790607048182	DEFECT
// make sure the test will be accepted as a TestCase	WITHOUT_CLASSIFICATION	0.9999999837511205	WITHOUT_CLASSIFICATION	1.624887947300968E-8	DEFECT
// make sure the test annotation are accepted	WITHOUT_CLASSIFICATION	0.9999998654863359	WITHOUT_CLASSIFICATION	1.3451366402179848E-7	DEFECT
// will cause trouble in JDK 1.1 if omitted	WITHOUT_CLASSIFICATION	0.9999854329594994	WITHOUT_CLASSIFICATION	1.4567040500675126E-5	DEFECT
// local copy since LogOutputStream.task is private	WITHOUT_CLASSIFICATION	0.9999942872916431	WITHOUT_CLASSIFICATION	5.71270835685055E-6	DEFECT
// this one is here because the changes to support ResourceCollections // have broken Magic's JUnitTestTask. // // The task adds a FileSet to a BatchTest instance using the // Java API and without telling the FileSet about its project // instance.  The original code would pass in project on the // call to getDirectoryScanner - which is now hidden deep into // Resources.iterator() and not reachable.	WITHOUT_CLASSIFICATION	0.9999952281313532	WITHOUT_CLASSIFICATION	4.771868646863717E-6	DEFECT
// dummy output for the framed report // it's all done by extension...	WITHOUT_CLASSIFICATION	0.9999983006315286	WITHOUT_CLASSIFICATION	1.699368471411686E-6	DEFECT
// conforming to NodeList interface	WITHOUT_CLASSIFICATION	0.9999998464381982	WITHOUT_CLASSIFICATION	1.535618018142326E-7	DEFECT
// this should never happen	WITHOUT_CLASSIFICATION	0.9999832641593486	WITHOUT_CLASSIFICATION	1.6735840651479148E-5	DEFECT
// write the document	WITHOUT_CLASSIFICATION	0.9999999527131898	WITHOUT_CLASSIFICATION	4.728681011306215E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999998952218317	WITHOUT_CLASSIFICATION	1.0477816833988038E-7	DEFECT
//----- from now, the methods are all related to DOM tree manipulation	WITHOUT_CLASSIFICATION	0.9999874519682603	WITHOUT_CLASSIFICATION	1.2548031739624398E-5	DEFECT
// writers do not throw exceptions, so check for them.	WITHOUT_CLASSIFICATION	0.9999999935024306	WITHOUT_CLASSIFICATION	6.497569376834443E-9	DEFECT
// create the dom tree	WITHOUT_CLASSIFICATION	0.9999999789943722	WITHOUT_CLASSIFICATION	2.100562779952041E-8	DEFECT
// get all files and add them to the document	WITHOUT_CLASSIFICATION	0.9999997082567923	WITHOUT_CLASSIFICATION	2.9174320769107886E-7	DEFECT
// make sure that this is REALLY a testsuite.	WITHOUT_CLASSIFICATION	0.9999993783416152	WITHOUT_CLASSIFICATION	6.216583848907256E-7	DEFECT
//wrong root element name // issue a warning.	WITHOUT_CLASSIFICATION	0.9997853596814816	WITHOUT_CLASSIFICATION	2.1464031851846347E-4	DEFECT
// a testcase might have failed and write a zero-length document, // It has already failed, but hey.... mm. just put a warning	WITHOUT_CLASSIFICATION	0.9999985924515272	WITHOUT_CLASSIFICATION	1.4075484727395124E-6	DEFECT
// a missing . might imply no package at all. Don't get fooled.	WITHOUT_CLASSIFICATION	0.9999624717503718	WITHOUT_CLASSIFICATION	3.752824962829983E-5	DEFECT
// modify the name attribute and set the package	WITHOUT_CLASSIFICATION	0.9999999830467103	WITHOUT_CLASSIFICATION	1.6953289658367174E-8	DEFECT
// don't filter AssertionFailure	WITHOUT_CLASSIFICATION	0.9999875900123812	WITHOUT_CLASSIFICATION	1.2409987618797725E-5	DEFECT
// JUnit 4 support:	WITHOUT_CLASSIFICATION	0.9999979653996998	WITHOUT_CLASSIFICATION	2.034600300169729E-6	DEFECT
// check for a static suite method first, even when using // JUnit 4	WITHOUT_CLASSIFICATION	0.9999999996240179	WITHOUT_CLASSIFICATION	3.7598212512300024E-10	DEFECT
// check if there is a suite method	WITHOUT_CLASSIFICATION	0.9999995703261407	WITHOUT_CLASSIFICATION	4.296738592323657E-7	DEFECT
// no appropriate suite method found. We don't report any // error here since it might be perfectly normal.	WITHOUT_CLASSIFICATION	0.9995104751997724	WITHOUT_CLASSIFICATION	4.89524800227579E-4	DEFECT
// Check for JDK 5 first. Will *not* help on JDK 1.4 // if only junit-4.0.jar in CP because in that case // linkage of whole task will already have failed! But // will help if CP has junit-3.8.2.jar:junit-4.0.jar.	WITHOUT_CLASSIFICATION	0.9999995560989354	WITHOUT_CLASSIFICATION	4.4390106465400864E-7	DEFECT
// In that case first C.fN will fail with CNFE and we // will avoid UnsupportedClassVersionError.	WITHOUT_CLASSIFICATION	0.9999943210798347	WITHOUT_CLASSIFICATION	5.678920165336963E-6	DEFECT
// OK, fall back to JUnit 3.	WITHOUT_CLASSIFICATION	0.9999739168255937	WITHOUT_CLASSIFICATION	2.608317440638784E-5	DEFECT
// Let's use it!	WITHOUT_CLASSIFICATION	0.9999990811452779	WITHOUT_CLASSIFICATION	9.188547221920884E-7	DEFECT
// Use JUnit 3.	WITHOUT_CLASSIFICATION	0.9999995466652827	WITHOUT_CLASSIFICATION	4.533347172843101E-7	DEFECT
// try to extract a test suite automatically this // will generate warnings if the class is no // suitable Test	WITHOUT_CLASSIFICATION	0.9999996673135966	WITHOUT_CLASSIFICATION	3.3268640344436923E-7	DEFECT
// had an exception constructing suite	WITHOUT_CLASSIFICATION	0.9999999901132198	WITHOUT_CLASSIFICATION	9.886780122865256E-9	DEFECT
// Add/overlay system properties on the properties from the Ant project	WITHOUT_CLASSIFICATION	0.9999930393045807	WITHOUT_CLASSIFICATION	6.960695419167653E-6	DEFECT
// return the stack unfiltered	WITHOUT_CLASSIFICATION	0.9999988158584058	WITHOUT_CLASSIFICATION	1.1841415941591276E-6	DEFECT
// Not strictly necessary but probably desirable. // JUnit 4-specific test GUIs will show just "failures". // But Ant's output shows "failures" vs. "errors". // We would prefer to show "failure" for things that logically are.	WITHOUT_CLASSIFICATION	0.9999998421945637	WITHOUT_CLASSIFICATION	1.5780543631706182E-7	DEFECT
// To compile on pre-JDK 4 (even though this should always succeed):	WITHOUT_CLASSIFICATION	0.9998741217203397	WITHOUT_CLASSIFICATION	1.2587827966033808E-4	DEFECT
// pre-3.4	WITHOUT_CLASSIFICATION	0.9999987013113081	WITHOUT_CLASSIFICATION	1.2986886918586141E-6	DEFECT
// JUnitTestRunner	WITHOUT_CLASSIFICATION	0.9999999109482326	WITHOUT_CLASSIFICATION	8.905176738031448E-8	DEFECT
//rethrow	WITHOUT_CLASSIFICATION	0.9999251211798414	WITHOUT_CLASSIFICATION	7.487882015860451E-5	DEFECT
//wrap	WITHOUT_CLASSIFICATION	0.9999933760317024	WITHOUT_CLASSIFICATION	6.623968297619154E-6	DEFECT
// sorted by newest Kaffe version first	WITHOUT_CLASSIFICATION	0.9999994028578271	WITHOUT_CLASSIFICATION	5.971421728902339E-7	DEFECT
// pre Kaffe 1.1.5	WITHOUT_CLASSIFICATION	0.9999973847310342	WITHOUT_CLASSIFICATION	2.615268965797302E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999996763950936	WITHOUT_CLASSIFICATION	3.2360490638735057E-7	DEFECT
// we are going to scan everything anyway	WITHOUT_CLASSIFICATION	0.9999984513316554	WITHOUT_CLASSIFICATION	1.5486683445639112E-6	DEFECT
// only scan directories that can include matched files or // directories	WITHOUT_CLASSIFICATION	0.999996590588237	WITHOUT_CLASSIFICATION	3.409411762984415E-6	DEFECT
// avoid double scanning of directories, can only happen in fast mode	WITHOUT_CLASSIFICATION	0.9999954839204682	WITHOUT_CLASSIFICATION	4.516079531690354E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999998846864979	WITHOUT_CLASSIFICATION	1.1531350213453716E-7	DEFECT
// This default has been good enough until Ant 1.6.3, so stick // with it	WITHOUT_CLASSIFICATION	0.9999973997234123	WITHOUT_CLASSIFICATION	2.6002765876721954E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999998952218317	WITHOUT_CLASSIFICATION	1.0477816833988038E-7	DEFECT
// Rats. // should not happen	WITHOUT_CLASSIFICATION	0.9994721442060924	WITHOUT_CLASSIFICATION	5.278557939075685E-4	DEFECT
// otherwise ExecuteJava has thrown an exception	WITHOUT_CLASSIFICATION	0.9999979390973809	WITHOUT_CLASSIFICATION	2.0609026190680438E-6	DEFECT
// No includes supplied, so set it to 'matches all'	WITHOUT_CLASSIFICATION	0.9999999997965278	WITHOUT_CLASSIFICATION	2.0347229260671382E-10	DEFECT
// always start from the current ftp working dir	WITHOUT_CLASSIFICATION	0.99994512996239	WITHOUT_CLASSIFICATION	5.487003760982818E-5	DEFECT
// put in the newroots vector the include patterns without // wildcard tokens	WITHOUT_CLASSIFICATION	0.9999970718833618	WITHOUT_CLASSIFICATION	2.9281166381207903E-6	DEFECT
// construct it	WITHOUT_CLASSIFICATION	0.9999996281199223	WITHOUT_CLASSIFICATION	3.7188007776770104E-7	DEFECT
// cool case, //we do not need to scan all the subdirs in the relative path	WITHOUT_CLASSIFICATION	0.9999999570760547	WITHOUT_CLASSIFICATION	4.292394530268118E-8	DEFECT
//this should not happen, except if parent has been deleted by another process	WITHOUT_CLASSIFICATION	0.9994651446503905	WITHOUT_CLASSIFICATION	5.348553496093976E-4	DEFECT
// we are already in the right path, so the second parameter // is false	WITHOUT_CLASSIFICATION	0.9999647186518819	WITHOUT_CLASSIFICATION	3.52813481181164E-5	DEFECT
// hit a hidden file assume not a symlink	WITHOUT_CLASSIFICATION	0.9999974492424237	WITHOUT_CLASSIFICATION	2.5507575763027716E-6	DEFECT
// getRelativePath also finds about symlinks	WITHOUT_CLASSIFICATION	0.9999991918241597	WITHOUT_CLASSIFICATION	8.081758402419239E-7	DEFECT
// warn that selectors are not supported	WITHOUT_CLASSIFICATION	0.9999974280992512	WITHOUT_CLASSIFICATION	2.571900748768501E-6	DEFECT
// If we are doing a listing, we need the output stream created now.	WITHOUT_CLASSIFICATION	0.9999999996273481	WITHOUT_CLASSIFICATION	3.7265190604891217E-10	DEFECT
// get files from filesets	WITHOUT_CLASSIFICATION	0.9999990814678376	WITHOUT_CLASSIFICATION	9.185321623017355E-7	DEFECT
// find first non cached dir	WITHOUT_CLASSIFICATION	0.9999999382447208	WITHOUT_CLASSIFICATION	6.175527917736902E-8	DEFECT
// check if dir exists by trying to change into it.	WITHOUT_CLASSIFICATION	0.9999999877739164	WITHOUT_CLASSIFICATION	1.2226083570261272E-8	DEFECT
// could not change to it - try to create it	WITHOUT_CLASSIFICATION	0.9999990169754686	WITHOUT_CLASSIFICATION	9.830245314013338E-7	DEFECT
// create a local temporary file	WITHOUT_CLASSIFICATION	0.9999999613369449	WITHOUT_CLASSIFICATION	3.8663055107340384E-8	DEFECT
// see if we should issue a chmod command	WITHOUT_CLASSIFICATION	0.9998255076646401	WITHOUT_CLASSIFICATION	1.7449233535993237E-4	DEFECT
// ignore it	WITHOUT_CLASSIFICATION	0.9999997315026191	WITHOUT_CLASSIFICATION	2.6849738094451974E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999998952218317	WITHOUT_CLASSIFICATION	1.0477816833988038E-7	DEFECT
// ignore it	WITHOUT_CLASSIFICATION	0.9999997315026191	WITHOUT_CLASSIFICATION	2.6849738094451974E-7	DEFECT
// delegate the deletion of the local temp file to the delete task // because of race conditions occuring on Windows	WITHOUT_CLASSIFICATION	0.9999997816690562	WITHOUT_CLASSIFICATION	2.1833094373864783E-7	DEFECT
// For Microsoft's Ftp-Service an Array with length 0 is // returned if configured to return listings in "MS-DOS"-Format	WITHOUT_CLASSIFICATION	0.9999999572352194	WITHOUT_CLASSIFICATION	4.276478058805551E-8	DEFECT
// If we are sending files, then assume out of date. // If we are getting files, then throw an error	WITHOUT_CLASSIFICATION	0.9999975931130792	WITHOUT_CLASSIFICATION	2.4068869208327403E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999998952218317	WITHOUT_CLASSIFICATION	1.0477816833988038E-7	DEFECT
// codes 521, 550 and 553 can be produced by FTP Servers //  to indicate that an attempt to create a directory has //  failed because the directory already exists.	WITHOUT_CLASSIFICATION	0.9999776654229838	WITHOUT_CLASSIFICATION	2.2334577016178026E-5	DEFECT
// If an initial command was configured then send it. // Some FTP servers offer different modes of operation, // E.G. switching between a UNIX file system mode and // a legacy file system.	WITHOUT_CLASSIFICATION	0.9999999182416569	WITHOUT_CLASSIFICATION	8.175834313840515E-8	DEFECT
// For a unix ftp server you can set the default mask for all files // created.	WITHOUT_CLASSIFICATION	0.9999999499814313	WITHOUT_CLASSIFICATION	5.001856876414796E-8	DEFECT
// If the action is MK_DIR, then the specified remote // directory is the directory to create.	WITHOUT_CLASSIFICATION	0.9999999901163253	WITHOUT_CLASSIFICATION	9.88367462751858E-9	DEFECT
// in this case we want to find how much time span there is between local // and remote	WITHOUT_CLASSIFICATION	0.9999926641445039	WITHOUT_CLASSIFICATION	7.335855496171572E-6	DEFECT
//socks	WITHOUT_CLASSIFICATION	0.9999669188785069	WITHOUT_CLASSIFICATION	3.308112149319258E-5	DEFECT
//this may be a java1.4 thingy only	WITHOUT_CLASSIFICATION	0.9999968417822243	WITHOUT_CLASSIFICATION	3.1582177757992555E-6	DEFECT
// simple one-shot execution	WITHOUT_CLASSIFICATION	0.9999988561386435	WITHOUT_CLASSIFICATION	1.1438613565821807E-6	DEFECT
// need nested read/write elements	WITHOUT_CLASSIFICATION	0.9999999718996531	WITHOUT_CLASSIFICATION	2.8100346946887323E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999998952218317	WITHOUT_CLASSIFICATION	1.0477816833988038E-7	DEFECT
//here we'd parse the output from change -o into submit -i //in order to support default change.	WITHOUT_CLASSIFICATION	0.9999999757875717	WITHOUT_CLASSIFICATION	2.421242827289028E-8	DEFECT
// CheckStyle:VisibilityModifier OFF - bc //ToDo: If dealing with default cl need to parse out <enter description here>	WITHOUT_CLASSIFICATION	0.9999905312793248	WITHOUT_CLASSIFICATION	9.46872067526311E-6	DEFECT
/* -n */	WITHOUT_CLASSIFICATION	0.999976037326037	WITHOUT_CLASSIFICATION	2.3962673962901233E-5	DEFECT
//Remove any non-numerical chars - should leave the change number	WITHOUT_CLASSIFICATION	0.9998647614831073	WITHOUT_CLASSIFICATION	1.352385168926727E-4	DEFECT
// this type of output might happen // Change 18 renamed change 20 and submitted.	WITHOUT_CLASSIFICATION	0.9998632405268368	WITHOUT_CLASSIFICATION	1.367594731631992E-4	DEFECT
//Match "//" for begining of depot filespec	WITHOUT_CLASSIFICATION	0.9999999930450387	WITHOUT_CLASSIFICATION	6.954961265286719E-9	DEFECT
// we need to escape the description in case there are /	WITHOUT_CLASSIFICATION	0.9999999181579098	WITHOUT_CLASSIFICATION	8.184209021239163E-8	DEFECT
// NOTE kirk@radik.com 04-April-2001 -- If you put in the -s, you // have to start running through regular expressions here. Much easier // to just not include the scripting information than to try to add it // and strip it later.	WITHOUT_CLASSIFICATION	0.9999990715622801	WITHOUT_CLASSIFICATION	9.284377199912555E-7	DEFECT
//EoF	WITHOUT_CLASSIFICATION	0.9999581300455681	WITHOUT_CLASSIFICATION	4.186995443184371E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc //Input //Output //Error // CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999995860549133	WITHOUT_CLASSIFICATION	4.1394508661050285E-7	DEFECT
/* Here we can either revert any unchanged files in a changelist         * or         * any files regardless of whether they have been changed or not         *         *         * The whole process also accepts a p4 filespec         */	WITHOUT_CLASSIFICATION	0.9999999548750634	WITHOUT_CLASSIFICATION	4.512493665960385E-8	DEFECT
/* -a */	WITHOUT_CLASSIFICATION	0.9999928813596461	WITHOUT_CLASSIFICATION	7.118640353860428E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999998952218317	WITHOUT_CLASSIFICATION	1.0477816833988038E-7	DEFECT
/* -n */	WITHOUT_CLASSIFICATION	0.999976037326037	WITHOUT_CLASSIFICATION	2.3962673962901233E-5	DEFECT
/* -n */	WITHOUT_CLASSIFICATION	0.999976037326037	WITHOUT_CLASSIFICATION	2.3962673962901233E-5	DEFECT
/* -f */	WITHOUT_CLASSIFICATION	0.9999892952790655	WITHOUT_CLASSIFICATION	1.0704720934466818E-5	DEFECT
/* -t */	WITHOUT_CLASSIFICATION	0.9999801356705659	WITHOUT_CLASSIFICATION	1.9864329434058352E-5	DEFECT
/* -v */	WITHOUT_CLASSIFICATION	0.999990810975736	WITHOUT_CLASSIFICATION	9.189024263925267E-6	DEFECT
//We have to create a unlocked label first	WITHOUT_CLASSIFICATION	0.9999999783261554	WITHOUT_CLASSIFICATION	2.167384458484548E-8	DEFECT
//Now lock if required	WITHOUT_CLASSIFICATION	0.999949963425279	WITHOUT_CLASSIFICATION	5.0036574721126165E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999998952218317	WITHOUT_CLASSIFICATION	1.0477816833988038E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999998952218317	WITHOUT_CLASSIFICATION	1.0477816833988038E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999998952218317	WITHOUT_CLASSIFICATION	1.0477816833988038E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999998952218317	WITHOUT_CLASSIFICATION	1.0477816833988038E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc // CheckStyle:MemberNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9999998951105344	WITHOUT_CLASSIFICATION	1.0488946556352988E-7	DEFECT
// CheckStyle:MemberNameCheck ON // CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999524510397	WITHOUT_CLASSIFICATION	4.754896041969147E-8	DEFECT
// Massage PCLI lvf output transforming '\' to '/' so get command works appropriately	WITHOUT_CLASSIFICATION	0.9999927472354064	WITHOUT_CLASSIFICATION	7.252764593609992E-6	DEFECT
//Read back the label spec from perforce, //Replace Options //Submit back to Perforce	WITHOUT_CLASSIFICATION	0.9999996620214311	WITHOUT_CLASSIFICATION	3.3797856890772297E-7	DEFECT
//when running labelsync, if view elements are in sync, //Perforce produces a line of output //looking like this one : //error: //depot/file2 - label in sync.	WITHOUT_CLASSIFICATION	0.9999904307839331	WITHOUT_CLASSIFICATION	9.569216066830383E-6	DEFECT
//sync says "error:" when a file is up-to-date	WITHOUT_CLASSIFICATION	0.9999980988392623	WITHOUT_CLASSIFICATION	1.9011607376994632E-6	DEFECT
//sometimes there's "info1:	WITHOUT_CLASSIFICATION	0.9999993830005173	WITHOUT_CLASSIFICATION	6.16999482713072E-7	DEFECT
//P4 runtime directives	WITHOUT_CLASSIFICATION	0.999998889816678	WITHOUT_CLASSIFICATION	1.1101833220427862E-6	DEFECT
// Perforce task directives	WITHOUT_CLASSIFICATION	0.9999998230169342	WITHOUT_CLASSIFICATION	1.7698306579268058E-7	DEFECT
//P4 g-opts and cmd opts (rtfm)	WITHOUT_CLASSIFICATION	0.999999905343531	WITHOUT_CLASSIFICATION	9.46564690272494E-8	DEFECT
//Setters called by Ant	WITHOUT_CLASSIFICATION	0.9999872802065656	WITHOUT_CLASSIFICATION	1.2719793434330993E-5	DEFECT
//Get default P4 settings from environment - Mark would have done something cool with //introspection here.....:-)	WITHOUT_CLASSIFICATION	0.9960534977442682	WITHOUT_CLASSIFICATION	0.003946502255731732	DEFECT
// reset error flags before executing the command	WITHOUT_CLASSIFICATION	0.9986699365429397	WITHOUT_CLASSIFICATION	0.0013300634570603462	DEFECT
//Check API for these - it's how CVS does it...	WITHOUT_CLASSIFICATION	0.9945082450876856	WITHOUT_CLASSIFICATION	0.00549175491231431	DEFECT
/*     * Constant for the PCLI listversionedfiles recursive i a format "get" understands     */	WITHOUT_CLASSIFICATION	0.9999999911687094	WITHOUT_CLASSIFICATION	8.831290542208565E-9	DEFECT
// private static final String PCLI_LVF_ARGS = "lvf -z -aw";	WITHOUT_CLASSIFICATION	0.9999999274336151	WITHOUT_CLASSIFICATION	7.25663848965016E-8	DEFECT
// Check workspace exists // Launch PCLI listversionedfiles -z -aw // Capture output // build the command line from what we got the format is	WITHOUT_CLASSIFICATION	0.9999982256580412	WITHOUT_CLASSIFICATION	1.774341958902525E-6	DEFECT
// default pvcs project is "/"	WITHOUT_CLASSIFICATION	0.9999979285776337	WITHOUT_CLASSIFICATION	2.0714223662763278E-6	DEFECT
// Create folders in workspace	WITHOUT_CLASSIFICATION	0.9999930887536274	WITHOUT_CLASSIFICATION	6.9112463726785954E-6	DEFECT
// Launch get on output captured from PCLI lvf	WITHOUT_CLASSIFICATION	0.999999972462339	WITHOUT_CLASSIFICATION	2.7537661031468646E-8	DEFECT
// Extract the name of the directory from the filename	WITHOUT_CLASSIFICATION	0.9999999403731357	WITHOUT_CLASSIFICATION	5.962686434546766E-8	DEFECT
// Change these through their GET and SET methods.	WITHOUT_CLASSIFICATION	0.9999999961800252	WITHOUT_CLASSIFICATION	3.819974798714728E-9	DEFECT
// These fields deal with includes and excludes	WITHOUT_CLASSIFICATION	0.9999964732166061	WITHOUT_CLASSIFICATION	3.526783393912193E-6	DEFECT
// Check all of the properties that are required.	WITHOUT_CLASSIFICATION	0.9999990673338255	WITHOUT_CLASSIFICATION	9.326661744790627E-7	DEFECT
// Check to see if the target directory exists.	WITHOUT_CLASSIFICATION	0.9999999924062066	WITHOUT_CLASSIFICATION	7.593793351144938E-9	DEFECT
// Search the items on this server.	WITHOUT_CLASSIFICATION	0.9999972608196114	WITHOUT_CLASSIFICATION	2.7391803887165903E-6	DEFECT
// Disconnect from the server.	WITHOUT_CLASSIFICATION	0.9999984585978519	WITHOUT_CLASSIFICATION	1.541402148120577E-6	DEFECT
// Tell how many files were checked out.	WITHOUT_CLASSIFICATION	0.999999466442363	WITHOUT_CLASSIFICATION	5.335576369799028E-7	DEFECT
// Optional; logOn() connects if necessary.	WITHOUT_CLASSIFICATION	0.9999995043173181	WITHOUT_CLASSIFICATION	4.956826818366898E-7	DEFECT
// Logon using specified user name and password.	WITHOUT_CLASSIFICATION	0.9999999829599048	WITHOUT_CLASSIFICATION	1.7040095241077792E-8	DEFECT
// We always display the ItemID (OBJECT_ID) and primary descriptor.	WITHOUT_CLASSIFICATION	0.999999844393039	WITHOUT_CLASSIFICATION	1.5560696100945208E-7	DEFECT
//If a working directory was specified then add it to the command line	WITHOUT_CLASSIFICATION	0.9972430611608367	WITHOUT_CLASSIFICATION	0.002756938839163252	DEFECT
// Checking for "\ // or           "/ // or           "X:\...	WITHOUT_CLASSIFICATION	0.999969623831961	WITHOUT_CLASSIFICATION	3.0376168039013058E-5	DEFECT
// If we find a "file" attribute then act on a file otherwise act on a project	WITHOUT_CLASSIFICATION	0.9999999593072523	WITHOUT_CLASSIFICATION	4.069274782491541E-8	DEFECT
// after you are all of the properties are ok, do your thing // with StarTeam.  If there are any kind of exceptions then // send the message to the project log.	WITHOUT_CLASSIFICATION	0.9999965787928986	WITHOUT_CLASSIFICATION	3.4212071013611653E-6	DEFECT
// For performance reasons, it is important to pre-fetch all the // properties we'll need for all the items we'll be searching.	WITHOUT_CLASSIFICATION	0.9999998390119663	WITHOUT_CLASSIFICATION	1.6098803368991953E-7	DEFECT
// We'll need this item type's primary descriptor.	WITHOUT_CLASSIFICATION	0.9999996039149416	WITHOUT_CLASSIFICATION	3.9608505836707074E-7	DEFECT
// Does this item type have a secondary descriptor? // If so, we'll need it.	WITHOUT_CLASSIFICATION	0.9999446994068608	WITHOUT_CLASSIFICATION	5.530059313909675E-5	DEFECT
// Now, build an array of the property names.	WITHOUT_CLASSIFICATION	0.9999819626285872	WITHOUT_CLASSIFICATION	1.803737141277324E-5	DEFECT
// Pre-fetch the item properties and cache them.	WITHOUT_CLASSIFICATION	0.9999999238983723	WITHOUT_CLASSIFICATION	7.610162768024643E-8	DEFECT
// Now, search for items in the selected folder.	WITHOUT_CLASSIFICATION	0.9999999805199866	WITHOUT_CLASSIFICATION	1.9480013361158147E-8	DEFECT
// Free up the memory used by the cached items.	WITHOUT_CLASSIFICATION	0.9999999291461931	WITHOUT_CLASSIFICATION	7.085380696904547E-8	DEFECT
// convert whatever separator char is in starteam to that of the target system.	WITHOUT_CLASSIFICATION	0.9999999931117318	WITHOUT_CLASSIFICATION	6.88826822340715E-9	DEFECT
// If it ends with separator then strip it off	WITHOUT_CLASSIFICATION	0.9999998429273304	WITHOUT_CLASSIFICATION	1.5707266966516207E-7	DEFECT
// Replace the projectName in the file's absolute path to the viewName. // This makes the root target of a checkout operation equal to: // targetFolder + dirName	WITHOUT_CLASSIFICATION	0.9999999997232017	WITHOUT_CLASSIFICATION	2.7679833639900456E-10	DEFECT
// only want to do this the first time	WITHOUT_CLASSIFICATION	0.9999937466418795	WITHOUT_CLASSIFICATION	6.253358120613375E-6	DEFECT
// Process all items in this folder.	WITHOUT_CLASSIFICATION	0.999999322897256	WITHOUT_CLASSIFICATION	6.771027439299679E-7	DEFECT
// Process all subfolders recursively if recursion is on.	WITHOUT_CLASSIFICATION	0.9999999594679116	WITHOUT_CLASSIFICATION	4.053208826449712E-8	DEFECT
// Get descriptors for this item type.	WITHOUT_CLASSIFICATION	0.999999859484471	WITHOUT_CLASSIFICATION	1.4051552897371876E-7	DEFECT
// VERBOSE MODE ONLY	WITHOUT_CLASSIFICATION	0.9999949955710575	WITHOUT_CLASSIFICATION	5.004428942476281E-6	DEFECT
// Show folder only if changed.	WITHOUT_CLASSIFICATION	0.9999997665813385	WITHOUT_CLASSIFICATION	2.334186614253579E-7	DEFECT
// Show if the file is locked.	WITHOUT_CLASSIFICATION	0.9999996956697318	WITHOUT_CLASSIFICATION	3.043302682958649E-7	DEFECT
// END VERBOSE ONLY	WITHOUT_CLASSIFICATION	0.9999913502906826	WITHOUT_CLASSIFICATION	8.649709317382508E-6	DEFECT
// add -command CheckOutFile to the commandline	WITHOUT_CLASSIFICATION	0.9999999114515007	WITHOUT_CLASSIFICATION	8.854849928191091E-8	DEFECT
// Finally, show the Item properties ... // Always show the ItemID.	WITHOUT_CLASSIFICATION	0.9997204144365738	WITHOUT_CLASSIFICATION	2.7958556342615144E-4	DEFECT
// Show the primary descriptor. // There should always be one.	WITHOUT_CLASSIFICATION	0.9999909387735626	WITHOUT_CLASSIFICATION	9.061226437446332E-6	DEFECT
// Show the secondary descriptor, if there is one. // Some item types have one, some don't.	WITHOUT_CLASSIFICATION	0.9999997429240884	WITHOUT_CLASSIFICATION	2.5707591151798263E-7	DEFECT
// Change the item to be checked out to a StarTeam File.	WITHOUT_CLASSIFICATION	0.9999999997763837	WITHOUT_CLASSIFICATION	2.236163605825853E-10	DEFECT
// The local file name is simply the local target path (tgt) which has // been passed recursively down from the top of the tree, with the item's name appended.	WITHOUT_CLASSIFICATION	0.9999999999474413	WITHOUT_CLASSIFICATION	5.2558767193948763E-11	DEFECT
// Begin SET and GET methods	WITHOUT_CLASSIFICATION	0.9999985424252193	WITHOUT_CLASSIFICATION	1.4575747806424173E-6	DEFECT
// Begin filter getters and setters	WITHOUT_CLASSIFICATION	0.9999763983155933	WITHOUT_CLASSIFICATION	2.3601684406743094E-5	DEFECT
// Check if need to set the loader	WITHOUT_CLASSIFICATION	0.9999999700140617	WITHOUT_CLASSIFICATION	2.9985938247428516E-8	DEFECT
// Now create the scriptRunner	WITHOUT_CLASSIFICATION	0.9999999612207346	WITHOUT_CLASSIFICATION	3.877926536698291E-8	DEFECT
// find the script repository - it is stored in the project	WITHOUT_CLASSIFICATION	0.9999631706850891	WITHOUT_CLASSIFICATION	3.6829314910991214E-5	DEFECT
/*            // try the context classloader            ClassLoader loader                = Thread.currentThread().getContextClassLoader();            */	WITHOUT_CLASSIFICATION	0.9999998193547942	WITHOUT_CLASSIFICATION	1.8064520581994273E-7	DEFECT
// If we find a "file" attribute then act on a file otherwise act on a project	WITHOUT_CLASSIFICATION	0.9999999593072523	WITHOUT_CLASSIFICATION	4.069274782491541E-8	DEFECT
// add -command CheckInFile to the commandline	WITHOUT_CLASSIFICATION	0.9999998357015972	WITHOUT_CLASSIFICATION	1.6429840284159323E-7	DEFECT
// add -file xxxxx to the commandline	WITHOUT_CLASSIFICATION	0.9999998710704895	WITHOUT_CLASSIFICATION	1.289295105381178E-7	DEFECT
// add -file xxxxx to the commandline	WITHOUT_CLASSIFICATION	0.9999998710704895	WITHOUT_CLASSIFICATION	1.289295105381178E-7	DEFECT
// add -command CheckInProject to the commandline	WITHOUT_CLASSIFICATION	0.9999994627610099	WITHOUT_CLASSIFICATION	5.372389901178742E-7	DEFECT
// look for a recursive option	WITHOUT_CLASSIFICATION	0.9999999589349894	WITHOUT_CLASSIFICATION	4.106501063341352E-8	DEFECT
// look for a recursive option	WITHOUT_CLASSIFICATION	0.9999999589349894	WITHOUT_CLASSIFICATION	4.106501063341352E-8	DEFECT
// Look for a comment	WITHOUT_CLASSIFICATION	0.9999990908660344	WITHOUT_CLASSIFICATION	9.091339654605286E-7	DEFECT
// soscmd Command options	WITHOUT_CLASSIFICATION	0.9999999448939145	WITHOUT_CLASSIFICATION	5.5106085531076325E-8	DEFECT
// soscmd Option flags	WITHOUT_CLASSIFICATION	0.9999977304766782	WITHOUT_CLASSIFICATION	2.2695233217569157E-6	DEFECT
// add -command GetFile to the commandline	WITHOUT_CLASSIFICATION	0.9999999357110768	WITHOUT_CLASSIFICATION	6.42889231478915E-8	DEFECT
// look for a version attribute	WITHOUT_CLASSIFICATION	0.9999995639619804	WITHOUT_CLASSIFICATION	4.3603801961307926E-7	DEFECT
//add -revision xxxxx to the commandline	WITHOUT_CLASSIFICATION	0.999999402566745	WITHOUT_CLASSIFICATION	5.974332549668542E-7	DEFECT
// add -command GetProject to the commandline	WITHOUT_CLASSIFICATION	0.9999999007197117	WITHOUT_CLASSIFICATION	9.928028834623479E-8	DEFECT
// look for a label option	WITHOUT_CLASSIFICATION	0.9999999275956277	WITHOUT_CLASSIFICATION	7.240437227692038E-8	DEFECT
// make sure localDir exists, create it if it doesn't	WITHOUT_CLASSIFICATION	0.999998984146418	WITHOUT_CLASSIFICATION	1.015853582050541E-6	DEFECT
// This is the exit status	WITHOUT_CLASSIFICATION	0.9999473408793198	WITHOUT_CLASSIFICATION	5.26591206803101E-5	DEFECT
// Use the OS VM launcher so we get environment variables	WITHOUT_CLASSIFICATION	0.9999999122602985	WITHOUT_CLASSIFICATION	8.773970148946435E-8	DEFECT
// Get the path to the soscmd(.exe)	WITHOUT_CLASSIFICATION	0.9999998673087749	WITHOUT_CLASSIFICATION	1.326912251594861E-7	DEFECT
// SOS server address is required	WITHOUT_CLASSIFICATION	0.9999768583559839	WITHOUT_CLASSIFICATION	2.3141644016035038E-5	DEFECT
// VSS Info is required	WITHOUT_CLASSIFICATION	0.9998216659865454	WITHOUT_CLASSIFICATION	1.7833401345460794E-4	DEFECT
// VSS project is required	WITHOUT_CLASSIFICATION	0.9996867194680015	WITHOUT_CLASSIFICATION	3.132805319985021E-4	DEFECT
// -verbose	WITHOUT_CLASSIFICATION	0.9999999507959977	WITHOUT_CLASSIFICATION	4.920400244247269E-8	DEFECT
// Disable Compression	WITHOUT_CLASSIFICATION	0.9999997828387727	WITHOUT_CLASSIFICATION	2.171612272979762E-7	DEFECT
// If -soshome was not specified then we can look for nocache	WITHOUT_CLASSIFICATION	0.9999990477189413	WITHOUT_CLASSIFICATION	9.522810587564221E-7	DEFECT
// Ignore Exception	WITHOUT_CLASSIFICATION	0.9999998703768748	WITHOUT_CLASSIFICATION	1.2962312530729791E-7	DEFECT
// look for a recursive option	WITHOUT_CLASSIFICATION	0.9999999589349894	WITHOUT_CLASSIFICATION	4.106501063341352E-8	DEFECT
// Look for a comment	WITHOUT_CLASSIFICATION	0.9999990908660344	WITHOUT_CLASSIFICATION	9.091339654605286E-7	DEFECT
// -verbose	WITHOUT_CLASSIFICATION	0.9999999507959977	WITHOUT_CLASSIFICATION	4.920400244247269E-8	DEFECT
// The SOS class knows that the SOS server needs the password flag, // even if there is no password ,so we send a " "	WITHOUT_CLASSIFICATION	0.9999954786332528	WITHOUT_CLASSIFICATION	4.521366747168175E-6	DEFECT
// add -command CheckOutProject to the commandline	WITHOUT_CLASSIFICATION	0.9999998370000912	WITHOUT_CLASSIFICATION	1.6299990868929262E-7	DEFECT
// add -command AddLabel to the commandline	WITHOUT_CLASSIFICATION	0.9999999620873031	WITHOUT_CLASSIFICATION	3.791269690617853E-8	DEFECT
// a label is required	WITHOUT_CLASSIFICATION	0.9999961667854168	WITHOUT_CLASSIFICATION	3.833214583239394E-6	DEFECT
// get the list of files in the dir	WITHOUT_CLASSIFICATION	0.9999997018944796	WITHOUT_CLASSIFICATION	2.9810552045465686E-7	DEFECT
// get a random number between 0 and the number of files	WITHOUT_CLASSIFICATION	0.9999999844852707	WITHOUT_CLASSIFICATION	1.5514729359558998E-8	DEFECT
// set the source to the file at that location	WITHOUT_CLASSIFICATION	0.9999999125917968	WITHOUT_CLASSIFICATION	8.740820330719007E-8	DEFECT
// Empty block	WITHOUT_CLASSIFICATION	0.9999976836627599	WITHOUT_CLASSIFICATION	2.3163372400898064E-6	DEFECT
//System.exit(0);	WITHOUT_CLASSIFICATION	0.9999958356121287	WITHOUT_CLASSIFICATION	4.164387871360156E-6	DEFECT
// build successfull!	WITHOUT_CLASSIFICATION	0.9999993335679089	WITHOUT_CLASSIFICATION	6.664320911490332E-7	DEFECT
/*AbstractSshMessage*/	WITHOUT_CLASSIFICATION	0.999997310398326	WITHOUT_CLASSIFICATION	2.6896016740111126E-6	DEFECT
// dir does not exist.	WITHOUT_CLASSIFICATION	0.9998682579176249	WITHOUT_CLASSIFICATION	1.3174208237506078E-4	DEFECT
// only track progress for files larger than 100kb in verbose mode	WITHOUT_CLASSIFICATION	0.9999757162780305	WITHOUT_CLASSIFICATION	2.4283721969450665E-5	DEFECT
// get I/O streams for remote scp	WITHOUT_CLASSIFICATION	0.9999968721676284	WITHOUT_CLASSIFICATION	3.127832371635677E-6	DEFECT
// this indicates an error.	WITHOUT_CLASSIFICATION	0.999705463785072	WITHOUT_CLASSIFICATION	2.9453621492810805E-4	DEFECT
// appears that the next token is not used and it's zero.	WITHOUT_CLASSIFICATION	0.9664854755935649	WITHOUT_CLASSIFICATION	0.03351452440643512	DEFECT
// read a content of lfile	WITHOUT_CLASSIFICATION	0.9999999637775855	WITHOUT_CLASSIFICATION	3.622241444938757E-8	DEFECT
// Ignored	WITHOUT_CLASSIFICATION	0.9999999074593496	WITHOUT_CLASSIFICATION	9.25406504381631E-8	DEFECT
// do nothing;	WITHOUT_CLASSIFICATION	0.9999976812042591	WITHOUT_CLASSIFICATION	2.318795740810722E-6	DEFECT
// didn't receive any response	WITHOUT_CLASSIFICATION	0.9999097411615774	WITHOUT_CLASSIFICATION	9.02588384226102E-5	DEFECT
// execute the command	WITHOUT_CLASSIFICATION	0.9999959507774406	WITHOUT_CLASSIFICATION	4.049222559438041E-6	DEFECT
// wait for it to finish	WITHOUT_CLASSIFICATION	0.9999997965812661	WITHOUT_CLASSIFICATION	2.0341873372634464E-7	DEFECT
// ran out of time	WITHOUT_CLASSIFICATION	0.9999997524928901	WITHOUT_CLASSIFICATION	2.4750710996690735E-7	DEFECT
// completed successfully	WITHOUT_CLASSIFICATION	0.9999994602073282	WITHOUT_CLASSIFICATION	5.397926718265171E-7	DEFECT
// user:password@host:/path notation	WITHOUT_CLASSIFICATION	0.9999975756339228	WITHOUT_CLASSIFICATION	2.4243660771449054E-6	DEFECT
// no password, will require passphrase	WITHOUT_CLASSIFICATION	0.9999988179681838	WITHOUT_CLASSIFICATION	1.1820318162341776E-6	DEFECT
// skip	WITHOUT_CLASSIFICATION	0.9999987695243597	WITHOUT_CLASSIFICATION	1.2304756403203695E-6	DEFECT
// send "C0644 filesize filename", where filename should not include '/'	WITHOUT_CLASSIFICATION	0.9999973068291266	WITHOUT_CLASSIFICATION	2.6931708733873922E-6	DEFECT
// send a content of lfile	WITHOUT_CLASSIFICATION	0.9999999658426544	WITHOUT_CLASSIFICATION	3.4157345568758054E-8	DEFECT
// C0644 filesize filename - header for a regular file // T time 0 time 0\n - present if perserve time. // D directory - this is the header for a directory.	WITHOUT_CLASSIFICATION	0.9999986735578137	WITHOUT_CLASSIFICATION	1.3264421862309669E-6	DEFECT
// swallow if there was an error before so that // original error will be passed up	WITHOUT_CLASSIFICATION	0.9999982254546254	WITHOUT_CLASSIFICATION	1.774545374620956E-6	DEFECT
// since filesize keeps on decreasing we have to store the // initial filesize	WITHOUT_CLASSIFICATION	0.9999999957443743	WITHOUT_CLASSIFICATION	4.2556257121973075E-9	DEFECT
// b may be 0 for success, //          1 for error, //          2 for fatal error,	WITHOUT_CLASSIFICATION	0.9999996769643201	WITHOUT_CLASSIFICATION	3.2303567990639414E-7	DEFECT
// like <exec> // like <exec> // like <exec>	WITHOUT_CLASSIFICATION	0.9999840576248198	WITHOUT_CLASSIFICATION	1.594237518014545E-5	DEFECT
//log(message, Project.MSG_DEBUG);	WITHOUT_CLASSIFICATION	0.9999983267545246	WITHOUT_CLASSIFICATION	1.6732454754244425E-6	DEFECT
// we want this to have a false default, unlike for Checkin.	WITHOUT_CLASSIFICATION	0.9999996370906028	WITHOUT_CLASSIFICATION	3.629093971965263E-7	DEFECT
// If the file doesn't pass the include/exclude tests, skip it.	WITHOUT_CLASSIFICATION	0.9999998129680947	WITHOUT_CLASSIFICATION	1.8703190520840605E-7	DEFECT
// We try to update the status once to give StarTeam // another chance.	WITHOUT_CLASSIFICATION	0.999999997966676	WITHOUT_CLASSIFICATION	2.0333238912794825E-9	DEFECT
// once we find a folder that isn't in the repository, // we know we can add it.	WITHOUT_CLASSIFICATION	0.9999920812169789	WITHOUT_CLASSIFICATION	7.918783021092516E-6	DEFECT
// once we find a folder that isn't in the repository, // we know we can add it.	WITHOUT_CLASSIFICATION	0.9999920812169789	WITHOUT_CLASSIFICATION	7.918783021092516E-6	DEFECT
// if a label has been supplied, use it to configure the view // otherwise use current view	WITHOUT_CLASSIFICATION	0.9999999978981888	WITHOUT_CLASSIFICATION	2.1018112735359666E-9	DEFECT
// if a date has been supplied use a view configured to the date.	WITHOUT_CLASSIFICATION	0.9999999885765548	WITHOUT_CLASSIFICATION	1.142344526951183E-8	DEFECT
// if a date has been supplied use a view configured to the date.	WITHOUT_CLASSIFICATION	0.9999999885765548	WITHOUT_CLASSIFICATION	1.142344526951183E-8	DEFECT
// otherwise, use this view configured as the tip.	WITHOUT_CLASSIFICATION	0.9999999760287613	WITHOUT_CLASSIFICATION	2.39712386873371E-8	DEFECT
// otherwise, use this view configured as the tip.	WITHOUT_CLASSIFICATION	0.9999999760287613	WITHOUT_CLASSIFICATION	2.39712386873371E-8	DEFECT
// For all Files in this folder, we need to check // if there have been modifications.	WITHOUT_CLASSIFICATION	0.9999999124472743	WITHOUT_CLASSIFICATION	8.755272565483071E-8	DEFECT
// Now we recursively call this method on all sub folders in this // folder unless recursive attribute is off.	WITHOUT_CLASSIFICATION	0.9999994712760039	WITHOUT_CLASSIFICATION	5.287239962316789E-7	DEFECT
// handle the files so they appear first	WITHOUT_CLASSIFICATION	0.9999999763015668	WITHOUT_CLASSIFICATION	2.3698433215900205E-8	DEFECT
// now do it again for the directories so they appear last.	WITHOUT_CLASSIFICATION	0.9999997971954537	WITHOUT_CLASSIFICATION	2.0280454622628865E-7	DEFECT
// Create the new label and update the repository	WITHOUT_CLASSIFICATION	0.9999999885300499	WITHOUT_CLASSIFICATION	1.1469949996284024E-8	DEFECT
// write a Properties file in each directory:	WITHOUT_CLASSIFICATION	0.9999996700298999	WITHOUT_CLASSIFICATION	3.299701001555359E-7	DEFECT
// Create an instance of the rmic, redirecting output to // the project log	WITHOUT_CLASSIFICATION	0.9999997691568242	WITHOUT_CLASSIFICATION	2.3084317573971935E-7	DEFECT
// CheckStyle:MethodNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.999995028507788	WITHOUT_CLASSIFICATION	4.971492211934094E-6	DEFECT
// once we find a folder that isn't in the repository, // we know we can add it.	WITHOUT_CLASSIFICATION	0.9999920812169789	WITHOUT_CLASSIFICATION	7.918783021092516E-6	DEFECT
//ATTRIBUTES settable from ant.	WITHOUT_CLASSIFICATION	0.9999995634597642	WITHOUT_CLASSIFICATION	4.365402358203085E-7	DEFECT
// if a label has been supplied and it is a view label, use it // to configure the view	WITHOUT_CLASSIFICATION	0.9999999940452959	WITHOUT_CLASSIFICATION	5.954704096834408E-9	DEFECT
// if a label has been supplied and it is a revision label, use the raw // the view as the snapshot	WITHOUT_CLASSIFICATION	0.9999999489685891	WITHOUT_CLASSIFICATION	5.1031410789638756E-8	DEFECT
// prune away any files not belonging to the revision label // this is one ugly API from Starteam SDK	WITHOUT_CLASSIFICATION	0.9993276269792822	WITHOUT_CLASSIFICATION	6.723730207177641E-4	DEFECT
// PR 31965 says that it can return null	WITHOUT_CLASSIFICATION	0.9999457871671201	WITHOUT_CLASSIFICATION	5.42128328799339E-5	DEFECT
// no root local mapping has been specified.	WITHOUT_CLASSIFICATION	0.9999998903715946	WITHOUT_CLASSIFICATION	1.0962840532366104E-7	DEFECT
// Inspect everything in the root folder and then recursively	WITHOUT_CLASSIFICATION	0.9999906833380818	WITHOUT_CLASSIFICATION	9.316661918229568E-6	DEFECT
// Tell user what he is doing	WITHOUT_CLASSIFICATION	0.9999992208568167	WITHOUT_CLASSIFICATION	7.791431832979881E-7	DEFECT
// set the local folder.	WITHOUT_CLASSIFICATION	0.9999999336002561	WITHOUT_CLASSIFICATION	6.639974396197138E-8	DEFECT
// set the local folder.	WITHOUT_CLASSIFICATION	0.9999999336002561	WITHOUT_CLASSIFICATION	6.639974396197138E-8	DEFECT
// ATTRIBUTES	WITHOUT_CLASSIFICATION	0.9999972348159755	WITHOUT_CLASSIFICATION	2.7651840245843344E-6	DEFECT
// create a hashtable to group them by parent directory:	WITHOUT_CLASSIFICATION	0.9999998730629186	WITHOUT_CLASSIFICATION	1.2693708142399406E-7	DEFECT
// else lnk exists, do nothing	WITHOUT_CLASSIFICATION	0.9999990561347155	WITHOUT_CLASSIFICATION	9.438652845708588E-7	DEFECT
// get an Iterator of file objects representing links (canonical):	WITHOUT_CLASSIFICATION	0.9999999494830867	WITHOUT_CLASSIFICATION	5.051691337706247E-8	DEFECT
//iterate through the names, get the matching values	WITHOUT_CLASSIFICATION	0.999999324249586	WITHOUT_CLASSIFICATION	6.757504140140872E-7	DEFECT
/////////////////////////////////////////////////////////////// // GET/SET methods. // Setters, of course are where ant user passes in values. ///////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999999567850031	WITHOUT_CLASSIFICATION	4.32149969646534E-8	DEFECT
/////////////////////////////////////////////////////////////// // INCLUDE-EXCLUDE processing ///////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999999700756693	WITHOUT_CLASSIFICATION	2.992433076795778E-8	DEFECT
// find the starteam folder specified to be the root of the // operation.  Throw if it can't be found.	WITHOUT_CLASSIFICATION	0.9999999911159877	WITHOUT_CLASSIFICATION	8.884012352148084E-9	DEFECT
// either use default path or root local mapping, // which is now embedded in the root folder	WITHOUT_CLASSIFICATION	0.9999999635449952	WITHOUT_CLASSIFICATION	3.6455004760772984E-8	DEFECT
///////////////////////////////////////////////////////// // GET/SET methods. // Setters, of course are where ant user passes in values. /////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999999567850031	WITHOUT_CLASSIFICATION	4.32149969646534E-8	DEFECT
// fill up a Properties object with link and resource names:	WITHOUT_CLASSIFICATION	0.9999996086001759	WITHOUT_CLASSIFICATION	3.913998240839517E-7	DEFECT
// find the resource of the existing link:	WITHOUT_CLASSIFICATION	0.9999997290102377	WITHOUT_CLASSIFICATION	2.709897622127405E-7	DEFECT
// rename the resource, thus breaking the link:	WITHOUT_CLASSIFICATION	0.9999977683859842	WITHOUT_CLASSIFICATION	2.231614015852204E-6	DEFECT
// delete the (now) broken link:	WITHOUT_CLASSIFICATION	0.9997493310812776	WITHOUT_CLASSIFICATION	2.506689187224374E-4	DEFECT
// return the resource to its original name:	WITHOUT_CLASSIFICATION	0.9999991514508456	WITHOUT_CLASSIFICATION	8.485491542503766E-7	DEFECT
// loop through the supplied file sets:	WITHOUT_CLASSIFICATION	0.9999999613601843	WITHOUT_CLASSIFICATION	3.863981577011877E-8	DEFECT
// load included files as properties files:	WITHOUT_CLASSIFICATION	0.9999995122068985	WITHOUT_CLASSIFICATION	4.877931014504701E-7	DEFECT
// -GL	WITHOUT_CLASSIFICATION	0.9999977950172436	WITHOUT_CLASSIFICATION	2.2049827563412016E-6	DEFECT
// -GL	WITHOUT_CLASSIFICATION	0.9999977950172436	WITHOUT_CLASSIFICATION	2.2049827563412016E-6	DEFECT
// -I- or -I-Y or -I-N	WITHOUT_CLASSIFICATION	0.9999983085729554	WITHOUT_CLASSIFICATION	1.6914270446156408E-6	DEFECT
// -I- or -I-Y or -I-N	WITHOUT_CLASSIFICATION	0.9999983085729554	WITHOUT_CLASSIFICATION	1.6914270446156408E-6	DEFECT
// -O-	WITHOUT_CLASSIFICATION	0.9999978123839178	WITHOUT_CLASSIFICATION	2.1876160820699833E-6	DEFECT
// -R	WITHOUT_CLASSIFICATION	0.99999740868497	WITHOUT_CLASSIFICATION	2.5913150300293016E-6	DEFECT
// -R	WITHOUT_CLASSIFICATION	0.99999740868497	WITHOUT_CLASSIFICATION	2.5913150300293016E-6	DEFECT
// -V	WITHOUT_CLASSIFICATION	0.9999970217227632	WITHOUT_CLASSIFICATION	2.9782772368988645E-6	DEFECT
// -W	WITHOUT_CLASSIFICATION	0.9999972976093872	WITHOUT_CLASSIFICATION	2.702390612801071E-6	DEFECT
// -W	WITHOUT_CLASSIFICATION	0.9999972976093872	WITHOUT_CLASSIFICATION	2.702390612801071E-6	DEFECT
// -Y	WITHOUT_CLASSIFICATION	0.9999979408596613	WITHOUT_CLASSIFICATION	2.0591403386192365E-6	DEFECT
// -Y	WITHOUT_CLASSIFICATION	0.9999979408596613	WITHOUT_CLASSIFICATION	2.0591403386192365E-6	DEFECT
// -G	WITHOUT_CLASSIFICATION	0.9999982146942898	WITHOUT_CLASSIFICATION	1.7853057101401306E-6	DEFECT
// -GWS or -GWR	WITHOUT_CLASSIFICATION	0.9999987911442183	WITHOUT_CLASSIFICATION	1.2088557817106771E-6	DEFECT
//set to empty str if no local path return	WITHOUT_CLASSIFICATION	0.9999999980335522	WITHOUT_CLASSIFICATION	1.966447792030884E-9	DEFECT
//make sure m_LocalDir exists, create it if it doesn't	WITHOUT_CLASSIFICATION	0.9999976489006922	WITHOUT_CLASSIFICATION	2.3510993078003457E-6	DEFECT
// Use the OS launcher so we get environment variables	WITHOUT_CLASSIFICATION	0.9999999776102487	WITHOUT_CLASSIFICATION	2.2389751336475752E-8	DEFECT
// VSS items	WITHOUT_CLASSIFICATION	0.9999996259966939	WITHOUT_CLASSIFICATION	3.74003306025135E-7	DEFECT
// VSS items	WITHOUT_CLASSIFICATION	0.9999996259966939	WITHOUT_CLASSIFICATION	3.74003306025135E-7	DEFECT
// -C	WITHOUT_CLASSIFICATION	0.9999980168007603	WITHOUT_CLASSIFICATION	1.9831992397172025E-6	DEFECT
// -C	WITHOUT_CLASSIFICATION	0.9999980168007603	WITHOUT_CLASSIFICATION	1.9831992397172025E-6	DEFECT
// -L Specify the new label on the command line (instead of being prompted)	WITHOUT_CLASSIFICATION	0.9999988614057466	WITHOUT_CLASSIFICATION	1.138594253445263E-6	DEFECT
// -V Label an existing file or project version	WITHOUT_CLASSIFICATION	0.9999998191921747	WITHOUT_CLASSIFICATION	1.8080782529423605E-7	DEFECT
// first off, make sure that we've got a command and a vssdir ...	WITHOUT_CLASSIFICATION	0.9999951603343324	WITHOUT_CLASSIFICATION	4.839665667511451E-6	DEFECT
// pre Kaffe 1.1.5	WITHOUT_CLASSIFICATION	0.9999973847310342	WITHOUT_CLASSIFICATION	2.615268965797302E-6	DEFECT
// -GL	WITHOUT_CLASSIFICATION	0.9999977950172436	WITHOUT_CLASSIFICATION	2.2049827563412016E-6	DEFECT
// Write the contents to our master list of links // This method assumes that all links are defined in // terms of absolute paths, or paths relative to the // working directory:	WITHOUT_CLASSIFICATION	0.9999998180787528	WITHOUT_CLASSIFICATION	1.8192124721216391E-7	DEFECT
// build the command line from what we got the format is // ss Get VSS items [-G] [-H] [-I-] [-N] [-O] [-R] [-V] [-W] [-Y] [-?] // as specified in the SS.EXE help	WITHOUT_CLASSIFICATION	0.9999999874432642	WITHOUT_CLASSIFICATION	1.255673571806599E-8	DEFECT
// -I- or -I-Y or -I-N	WITHOUT_CLASSIFICATION	0.9999983085729554	WITHOUT_CLASSIFICATION	1.6914270446156408E-6	DEFECT
// -I- or -I-Y or -I-N	WITHOUT_CLASSIFICATION	0.9999983085729554	WITHOUT_CLASSIFICATION	1.6914270446156408E-6	DEFECT
// -O-	WITHOUT_CLASSIFICATION	0.9999978123839178	WITHOUT_CLASSIFICATION	2.1876160820699833E-6	DEFECT
// -R	WITHOUT_CLASSIFICATION	0.99999740868497	WITHOUT_CLASSIFICATION	2.5913150300293016E-6	DEFECT
// -R	WITHOUT_CLASSIFICATION	0.99999740868497	WITHOUT_CLASSIFICATION	2.5913150300293016E-6	DEFECT
// -R	WITHOUT_CLASSIFICATION	0.99999740868497	WITHOUT_CLASSIFICATION	2.5913150300293016E-6	DEFECT
// -V	WITHOUT_CLASSIFICATION	0.9999970217227632	WITHOUT_CLASSIFICATION	2.9782772368988645E-6	DEFECT
// -W	WITHOUT_CLASSIFICATION	0.9999972976093872	WITHOUT_CLASSIFICATION	2.702390612801071E-6	DEFECT
// -Y	WITHOUT_CLASSIFICATION	0.9999979408596613	WITHOUT_CLASSIFICATION	2.0591403386192365E-6	DEFECT
// -Y	WITHOUT_CLASSIFICATION	0.9999979408596613	WITHOUT_CLASSIFICATION	2.0591403386192365E-6	DEFECT
// -Y	WITHOUT_CLASSIFICATION	0.9999979408596613	WITHOUT_CLASSIFICATION	2.0591403386192365E-6	DEFECT
// -G	WITHOUT_CLASSIFICATION	0.9999982146942898	WITHOUT_CLASSIFICATION	1.7853057101401306E-6	DEFECT
// -GWS or -GWR	WITHOUT_CLASSIFICATION	0.9999987911442183	WITHOUT_CLASSIFICATION	1.2088557817106771E-6	DEFECT
// VSS items	WITHOUT_CLASSIFICATION	0.9999996259966939	WITHOUT_CLASSIFICATION	3.74003306025135E-7	DEFECT
// Use getShortLabel() so labels longer then 30 char are truncated // and the user is warned	WITHOUT_CLASSIFICATION	0.9999999961623295	WITHOUT_CLASSIFICATION	3.837670483056304E-9	DEFECT
// ss.exe exits with '100', when files have been skipped // so we have to ignore the failure	WITHOUT_CLASSIFICATION	0.9999999672953543	WITHOUT_CLASSIFICATION	3.270464554618571E-8	DEFECT
// If location of ss.ini is specified we need to set the // environment-variable SSDIR to this value	WITHOUT_CLASSIFICATION	0.999999982582012	WITHOUT_CLASSIFICATION	1.741798807280906E-8	DEFECT
// build the command line from what we got the format is // ss Label VSS items [-C] [-H] [-I-] [-Llabel] [-N] [-O] [-V] [-Y] [-?] // as specified in the SS.EXE help	WITHOUT_CLASSIFICATION	0.9999999817935824	WITHOUT_CLASSIFICATION	1.8206417568521008E-8	DEFECT
// VSS items	WITHOUT_CLASSIFICATION	0.9999996259966939	WITHOUT_CLASSIFICATION	3.74003306025135E-7	DEFECT
// -C	WITHOUT_CLASSIFICATION	0.9999980168007603	WITHOUT_CLASSIFICATION	1.9831992397172025E-6	DEFECT
// -C	WITHOUT_CLASSIFICATION	0.9999980168007603	WITHOUT_CLASSIFICATION	1.9831992397172025E-6	DEFECT
// first off, make sure that we've got a command and a vssdir ...	WITHOUT_CLASSIFICATION	0.9999951603343324	WITHOUT_CLASSIFICATION	4.839665667511451E-6	DEFECT
// first off, make sure that we've got a command and a vssdir ...	WITHOUT_CLASSIFICATION	0.9999951603343324	WITHOUT_CLASSIFICATION	4.839665667511451E-6	DEFECT
// build the command line from what we got the format is // ss Checkin VSS items [-H] [-C] [-I-] [-N] [-O] [-R] [-W] [-Y] [-?] // as specified in the SS.EXE help	WITHOUT_CLASSIFICATION	0.9999999272411014	WITHOUT_CLASSIFICATION	7.275889859334906E-8	DEFECT
// -VL	WITHOUT_CLASSIFICATION	0.9999962945173234	WITHOUT_CLASSIFICATION	3.705482676540863E-6	DEFECT
// -B / -D / -F-	WITHOUT_CLASSIFICATION	0.9999959933939692	WITHOUT_CLASSIFICATION	4.006606030851812E-6	DEFECT
// -O	WITHOUT_CLASSIFICATION	0.9999981174143359	WITHOUT_CLASSIFICATION	1.8825856640632529E-6	DEFECT
// first off, make sure that we've got a command and a localPath ...	WITHOUT_CLASSIFICATION	0.9999965164411858	WITHOUT_CLASSIFICATION	3.4835588141529113E-6	DEFECT
// -G-	WITHOUT_CLASSIFICATION	0.9999983244130305	WITHOUT_CLASSIFICATION	1.6755869694441997E-6	DEFECT
// first off, make sure that we've got a command and a vssdir...	WITHOUT_CLASSIFICATION	0.9999956087965995	WITHOUT_CLASSIFICATION	4.391203400413212E-6	DEFECT
// build the command line from what we got // the format is: // ss Create VSS items [-C] [-H] [-I-] [-N] [-O] [-S] [-Y] [-?] // as specified in the SS.EXE help	WITHOUT_CLASSIFICATION	0.9999992789683153	WITHOUT_CLASSIFICATION	7.2103168458009E-7	DEFECT
// pre Kaffe 1.1.2	WITHOUT_CLASSIFICATION	0.9999984300139528	WITHOUT_CLASSIFICATION	1.5699860471859118E-6	DEFECT
// only supported since Kaffe 1.1.2	WITHOUT_CLASSIFICATION	0.9999920640931191	WITHOUT_CLASSIFICATION	7.935906880889104E-6	DEFECT
//handle the many different stub options.	WITHOUT_CLASSIFICATION	0.9999999079352562	WITHOUT_CLASSIFICATION	9.206474375213391E-8	DEFECT
//default is compatibility	WITHOUT_CLASSIFICATION	0.9999991183128228	WITHOUT_CLASSIFICATION	8.816871772399017E-7	DEFECT
//anything else	WITHOUT_CLASSIFICATION	0.9999986630655231	WITHOUT_CLASSIFICATION	1.3369344769713568E-6	DEFECT
//do nothing with the value? or go -v+stubVersion??	WITHOUT_CLASSIFICATION	0.9999955034620919	WITHOUT_CLASSIFICATION	4.496537908127528E-6	DEFECT
//set the non-null stubOption	WITHOUT_CLASSIFICATION	0.99999950236914	WITHOUT_CLASSIFICATION	4.976308599032867E-7	DEFECT
// we know that name.endsWith(".class")	WITHOUT_CLASSIFICATION	0.9999995229359436	WITHOUT_CLASSIFICATION	4.770640565011299E-7	DEFECT
// Combine the build classpath with the system classpath, in an // order determined by the value of build.sysclasspath	WITHOUT_CLASSIFICATION	0.9999991290357476	WITHOUT_CLASSIFICATION	8.709642523493776E-7	DEFECT
// swallow	WITHOUT_CLASSIFICATION	0.9999987347901225	WITHOUT_CLASSIFICATION	1.265209877513866E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999998952218317	WITHOUT_CLASSIFICATION	1.0477816833988038E-7	DEFECT
// build the command line from what we got the format is // ss CP VSS items [-H] [-I-] [-Y] [-?] // as specified in the SS.EXE help	WITHOUT_CLASSIFICATION	0.9999999293857338	WITHOUT_CLASSIFICATION	7.061426624250683E-8	DEFECT
//for java1.5+, we generate compatible stubs, that is, unless //the caller asked for IDL or IIOP support.	WITHOUT_CLASSIFICATION	0.9999963542785296	WITHOUT_CLASSIFICATION	3.645721470446314E-6	DEFECT
// JRMP with simple naming convention	WITHOUT_CLASSIFICATION	0.9999900476255352	WITHOUT_CLASSIFICATION	9.952374464723497E-6	DEFECT
/*                 * I know, this is not necessary, but I prefer it explicit (SB)                 */	WITHOUT_CLASSIFICATION	0.999920323993932	WITHOUT_CLASSIFICATION	7.967600606792321E-5	DEFECT
// no package	WITHOUT_CLASSIFICATION	0.9999999349451696	WITHOUT_CLASSIFICATION	6.505483052119686E-8	DEFECT
// no package	WITHOUT_CLASSIFICATION	0.9999999349451696	WITHOUT_CLASSIFICATION	6.505483052119686E-8	DEFECT
// only stub, no tie	WITHOUT_CLASSIFICATION	0.9999997652725571	WITHOUT_CLASSIFICATION	2.3472744293940393E-7	DEFECT
/*                         * stub is derived from implementation,                         * tie from interface name.                         */	WITHOUT_CLASSIFICATION	0.9999952949921168	WITHOUT_CLASSIFICATION	4.705007883236261E-6	DEFECT
//rely on RMIC being on the path	WITHOUT_CLASSIFICATION	0.9997594975228248	WITHOUT_CLASSIFICATION	2.405024771751598E-4	DEFECT
//set up the args	WITHOUT_CLASSIFICATION	0.9999999788187023	WITHOUT_CLASSIFICATION	2.1181297731024997E-8	DEFECT
// Create an instance of the rmic	WITHOUT_CLASSIFICATION	0.9999999034330603	WITHOUT_CLASSIFICATION	9.656693965177617E-8	DEFECT
//convert to lower case in the English locale,	WITHOUT_CLASSIFICATION	0.9999999537771933	WITHOUT_CLASSIFICATION	4.622280667691852E-8	DEFECT
//handle default specially by choosing the sun or kaffe compiler	WITHOUT_CLASSIFICATION	0.9999998077201483	WITHOUT_CLASSIFICATION	1.9227985164388246E-7	DEFECT
//no match? ask for the non-lower-cased type	WITHOUT_CLASSIFICATION	0.99999999255416	WITHOUT_CLASSIFICATION	7.44583999407194E-9	DEFECT
//do the system assertions	WITHOUT_CLASSIFICATION	0.9999989365128258	WITHOUT_CLASSIFICATION	1.0634871741648366E-6	DEFECT
//do the system assertions	WITHOUT_CLASSIFICATION	0.9999989365128258	WITHOUT_CLASSIFICATION	1.0634871741648366E-6	DEFECT
//do the system assertions	WITHOUT_CLASSIFICATION	0.9999989365128258	WITHOUT_CLASSIFICATION	1.0634871741648366E-6	DEFECT
//now any inner assertions	WITHOUT_CLASSIFICATION	0.999998724006642	WITHOUT_CLASSIFICATION	1.2759933579438013E-6	DEFECT
//now any inner assertions	WITHOUT_CLASSIFICATION	0.999998724006642	WITHOUT_CLASSIFICATION	1.2759933579438013E-6	DEFECT
//now any inner assertions	WITHOUT_CLASSIFICATION	0.999998724006642	WITHOUT_CLASSIFICATION	1.2759933579438013E-6	DEFECT
//catch invalidness	WITHOUT_CLASSIFICATION	0.9999999678282	WITHOUT_CLASSIFICATION	3.217179994672729E-8	DEFECT
//see if it is a package or a class	WITHOUT_CLASSIFICATION	0.999993143436342	WITHOUT_CLASSIFICATION	6.856563658028346E-6	DEFECT
//packages get a ... prefix	WITHOUT_CLASSIFICATION	0.9999876840275981	WITHOUT_CLASSIFICATION	1.2315972401994041E-5	DEFECT
//append the ... suffix if not there already	WITHOUT_CLASSIFICATION	0.9945771033707766	WITHOUT_CLASSIFICATION	0.005422896629223293	DEFECT
//classes just get the classname	WITHOUT_CLASSIFICATION	0.9999998600450176	WITHOUT_CLASSIFICATION	1.399549823579405E-7	DEFECT
//-- Fields ----------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999953920786362	WITHOUT_CLASSIFICATION	4.6079213637733666E-6	DEFECT
//-- Methods ---------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999931118450794	WITHOUT_CLASSIFICATION	6.888154920471417E-6	DEFECT
// Add all nested elements to our catalog	WITHOUT_CLASSIFICATION	0.9999999238845163	WITHOUT_CLASSIFICATION	7.611548376298851E-8	DEFECT
// Ignore exception	WITHOUT_CLASSIFICATION	0.9999997970566973	WITHOUT_CLASSIFICATION	2.0294330278351223E-7	DEFECT
// New behavior for delayed task creation. Description // will be evaluated in Project.getDescription()	WITHOUT_CLASSIFICATION	0.9999986331738582	WITHOUT_CLASSIFICATION	1.366826141842644E-6	DEFECT
// Append the classpath of the nested catalog	WITHOUT_CLASSIFICATION	0.9999720392691026	WITHOUT_CLASSIFICATION	2.796073089741863E-5	DEFECT
// Append the catalog path of the nested catalog	WITHOUT_CLASSIFICATION	0.9999790817105294	WITHOUT_CLASSIFICATION	2.0918289470596946E-5	DEFECT
// At this point we are probably in failure mode, but // try to use the bare URI as a last gasp	WITHOUT_CLASSIFICATION	0.9999932796959303	WITHOUT_CLASSIFICATION	6.7203040696915966E-6	DEFECT
// The Apache resolver is present - Need to check if it can // be seen by the catalog resolver class. Start by getting // the actual loader	WITHOUT_CLASSIFICATION	0.9999999842538287	WITHOUT_CLASSIFICATION	1.574617122137427E-8	DEFECT
// load the base class through this loader.	WITHOUT_CLASSIFICATION	0.999995879786275	WITHOUT_CLASSIFICATION	4.120213725063107E-6	DEFECT
// and find its actual loader	WITHOUT_CLASSIFICATION	0.9999985512662171	WITHOUT_CLASSIFICATION	1.4487337829405172E-6	DEFECT
// // Success!  The xml-commons resolver library is // available, so use it. //	WITHOUT_CLASSIFICATION	0.9999999453751501	WITHOUT_CLASSIFICATION	5.4624849844229046E-8	DEFECT
// // The xml-commons resolver library is not // available, so we can't use it. //	WITHOUT_CLASSIFICATION	0.9999997566616389	WITHOUT_CLASSIFICATION	2.433383611439421E-7	DEFECT
// the following line seems to be necessary on Windows under JDK 1.2	WITHOUT_CLASSIFICATION	0.9740531137062546	WITHOUT_CLASSIFICATION	0.02594688629374544	DEFECT
// // The ResourceLocation may specify a relative path for its // location attribute.  This is resolved using the appropriate // base. //	WITHOUT_CLASSIFICATION	0.9999999358615687	WITHOUT_CLASSIFICATION	6.413843129266977E-8	DEFECT
// // for classpath lookup we ignore the base directory //	WITHOUT_CLASSIFICATION	0.9999999994787719	WITHOUT_CLASSIFICATION	5.212279578580357E-10	DEFECT
// // The ResourceLocation may specify a relative url for its // location attribute.  This is resolved using the appropriate // base. //	WITHOUT_CLASSIFICATION	0.9999999812506215	WITHOUT_CLASSIFICATION	1.8749378465152937E-8	DEFECT
// // We didn't match a ResourceLocation, but since we // only support PUBLIC and URI entry types internally, // it is still possible that there is another entry in // an external catalog that will match.  We call // Apache resolver's resolveEntity method to cover // this possibility. //	WITHOUT_CLASSIFICATION	0.9888601000968057	WITHOUT_CLASSIFICATION	0.011139899903194382	DEFECT
// // Use the passed in base in preference to the base // from matchingEntry, which is either null or the // directory in which the external catalog file from // which it was obtained is located.  We make a copy // so matchingEntry's original base is untouched.  Of // course, if there is no base, no need to make a // copy... // // This is the standard behavior as per my reading of // the JAXP and XML Catalog specs.  CKS 11/7/2002 //	WITHOUT_CLASSIFICATION	0.9999999999502828	WITHOUT_CLASSIFICATION	4.9717274136935143E-11	DEFECT
// Parse each catalog listed in nested <catalogpath> elements	WITHOUT_CLASSIFICATION	0.9999999877042591	WITHOUT_CLASSIFICATION	1.2295740893457014E-8	DEFECT
//-- XMLCatalog	WITHOUT_CLASSIFICATION	0.999974963505085	WITHOUT_CLASSIFICATION	2.5036494915026037E-5	DEFECT
/* Methods below all add specific selectors */	WITHOUT_CLASSIFICATION	0.999999990774703	WITHOUT_CLASSIFICATION	9.22529695185383E-9	DEFECT
// No includes supplied, so set it to 'matches all'	WITHOUT_CLASSIFICATION	0.9999999997965278	WITHOUT_CLASSIFICATION	2.0347229260671382E-10	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999998952218317	WITHOUT_CLASSIFICATION	1.0477816833988038E-7	DEFECT
/* package-private for now */	WITHOUT_CLASSIFICATION	0.9999980672605872	WITHOUT_CLASSIFICATION	1.9327394128040634E-6	DEFECT
/* package-private for now */	WITHOUT_CLASSIFICATION	0.9999980672605872	WITHOUT_CLASSIFICATION	1.9327394128040634E-6	DEFECT
// special case in ZIPs, we do not want this thing included	WITHOUT_CLASSIFICATION	0.999925990258838	WITHOUT_CLASSIFICATION	7.400974116199213E-5	DEFECT
// first check if the archive needs to be scanned again	WITHOUT_CLASSIFICATION	0.9999999918057442	WITHOUT_CLASSIFICATION	8.194255801333342E-9	DEFECT
//do not use a FileResource b/c it pulls File info from the filesystem:	WITHOUT_CLASSIFICATION	0.9999996926579613	WITHOUT_CLASSIFICATION	3.073420386865281E-7	DEFECT
// spare scanning again and again	WITHOUT_CLASSIFICATION	0.9999999575387292	WITHOUT_CLASSIFICATION	4.246127088430258E-8	DEFECT
/* cached DirectoryScanner instance for our own Project only */	WITHOUT_CLASSIFICATION	0.9999969098306281	WITHOUT_CLASSIFICATION	3.0901693718965823E-6	DEFECT
// SelectorContainer methods	WITHOUT_CLASSIFICATION	0.9999999884624637	WITHOUT_CLASSIFICATION	1.153753625448005E-8	DEFECT
// WIN9x uses a bat file for executing commands	WITHOUT_CLASSIFICATION	0.999914778659092	WITHOUT_CLASSIFICATION	8.522134090809733E-5	DEFECT
// empty path return empty string	WITHOUT_CLASSIFICATION	0.999999951706166	WITHOUT_CLASSIFICATION	4.829383399111814E-8	DEFECT
//no command? no string	WITHOUT_CLASSIFICATION	0.9999986814607834	WITHOUT_CLASSIFICATION	1.3185392166180174E-6	DEFECT
// parse with a simple finite state machine	WITHOUT_CLASSIFICATION	0.9999973484087554	WITHOUT_CLASSIFICATION	2.6515912445034084E-6	DEFECT
//inherit doc	WITHOUT_CLASSIFICATION	0.9999951853441575	WITHOUT_CLASSIFICATION	4.814655842443714E-6	DEFECT
//can't have zero-length token	WITHOUT_CLASSIFICATION	0.9995602992284968	WITHOUT_CLASSIFICATION	4.397007715031954E-4	DEFECT
// we have another token, let's parse it.	WITHOUT_CLASSIFICATION	0.9999103864791972	WITHOUT_CLASSIFICATION	8.96135208028188E-5	DEFECT
// should always be the case...	WITHOUT_CLASSIFICATION	0.999976244901992	WITHOUT_CLASSIFICATION	2.3755098008060247E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999996763950936	WITHOUT_CLASSIFICATION	3.2360490638735057E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999996763950936	WITHOUT_CLASSIFICATION	3.2360490638735057E-7	DEFECT
// swallow	WITHOUT_CLASSIFICATION	0.9999987347901225	WITHOUT_CLASSIFICATION	1.265209877513866E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999998952218317	WITHOUT_CLASSIFICATION	1.0477816833988038E-7	DEFECT
/**     * Invoked by IntrospectionHelper for <code>setXXX(Path p)</code>     * attribute setters.     * @param p the <code>Project</code> for this path.     * @param path the <code>String</code> path definition.     */	WITHOUT_CLASSIFICATION	0.999999308942719	WITHOUT_CLASSIFICATION	6.910572809906288E-7	DEFECT
// ignore: don't trust anyone	WITHOUT_CLASSIFICATION	0.9999453382937638	WITHOUT_CLASSIFICATION	5.4661706236325365E-5	DEFECT
// last: don't trust the developer	WITHOUT_CLASSIFICATION	0.9999976200466185	WITHOUT_CLASSIFICATION	2.3799533813897676E-6	DEFECT
// newer versions of Kaffe (1.1.1+) won't have this, // but this will be sorted by FileSet anyway.	WITHOUT_CLASSIFICATION	0.9668306708070667	WITHOUT_CLASSIFICATION	0.03316932919293321	DEFECT
// JDK 1.2+ seems to set java.home to the JRE directory.	WITHOUT_CLASSIFICATION	0.9999960147774846	WITHOUT_CLASSIFICATION	3.985222515430909E-6	DEFECT
// Just keep the old version as well and let addExisting // sort it out.	WITHOUT_CLASSIFICATION	0.9999999989844227	WITHOUT_CLASSIFICATION	1.0155772262388162E-9	DEFECT
// Sun's and Apple's 1.4 have JCE and JSSE in separate jars.	WITHOUT_CLASSIFICATION	0.9999468156932358	WITHOUT_CLASSIFICATION	5.318430676423967E-5	DEFECT
// IBM's 1.4 has rt.jar split into 4 smaller jars and a combined // JCE/JSSE in security.jar.	WITHOUT_CLASSIFICATION	0.9999311479064784	WITHOUT_CLASSIFICATION	6.885209352158988E-5	DEFECT
// Added for MacOS X	WITHOUT_CLASSIFICATION	0.9999983348040802	WITHOUT_CLASSIFICATION	1.6651959197978435E-6	DEFECT
//remove any null elements	WITHOUT_CLASSIFICATION	0.9999952012989564	WITHOUT_CLASSIFICATION	4.7987010436818556E-6	DEFECT
//create the list	WITHOUT_CLASSIFICATION	0.9999999789331089	WITHOUT_CLASSIFICATION	2.1066891144309692E-8	DEFECT
//fill it	WITHOUT_CLASSIFICATION	0.999968484511471	WITHOUT_CLASSIFICATION	3.151548852885858E-5	DEFECT
//convert to an array	WITHOUT_CLASSIFICATION	0.9999976566975297	WITHOUT_CLASSIFICATION	2.3433024703099128E-6	DEFECT
// properties are part of the vm options...	WITHOUT_CLASSIFICATION	0.9999992505696189	WITHOUT_CLASSIFICATION	7.494303810580695E-7	DEFECT
//boot classpath	WITHOUT_CLASSIFICATION	0.999999733705233	WITHOUT_CLASSIFICATION	2.662947670903794E-7	DEFECT
//main classpath	WITHOUT_CLASSIFICATION	0.9999993447341478	WITHOUT_CLASSIFICATION	6.552658522724662E-7	DEFECT
//now any assertions are added	WITHOUT_CLASSIFICATION	0.9999966809504343	WITHOUT_CLASSIFICATION	3.319049565655849E-6	DEFECT
// this is the classname to run as well as its arguments. // in case of 'executeJar', the executable is a jar file.	WITHOUT_CLASSIFICATION	0.9999999954190785	WITHOUT_CLASSIFICATION	4.5809215726809404E-9	DEFECT
// cloned system properties	WITHOUT_CLASSIFICATION	0.9999990972747697	WITHOUT_CLASSIFICATION	9.027252302749399E-7	DEFECT
// classpath is "-classpath <classpath>" -> 2 args	WITHOUT_CLASSIFICATION	0.9999998442590179	WITHOUT_CLASSIFICATION	1.5574098207109863E-7	DEFECT
// bootclasspath is "-Xbootclasspath:<classpath>" -> 1 arg	WITHOUT_CLASSIFICATION	0.999999900346809	WITHOUT_CLASSIFICATION	9.965319113442408E-8	DEFECT
// jar execution requires an additional -jar option	WITHOUT_CLASSIFICATION	0.9999625434423588	WITHOUT_CLASSIFICATION	3.745655764117046E-5	DEFECT
/*<? extends EnumeratedAttribute>*/	WITHOUT_CLASSIFICATION	0.9999992556268248	WITHOUT_CLASSIFICATION	7.443731751454396E-7	DEFECT
//end nested class	WITHOUT_CLASSIFICATION	0.9999976066827455	WITHOUT_CLASSIFICATION	2.393317254589912E-6	DEFECT
// Add this PropertySet's nested PropertySets' property names.	WITHOUT_CLASSIFICATION	0.999997122404453	WITHOUT_CLASSIFICATION	2.8775955468904255E-6	DEFECT
//make a copy...	WITHOUT_CLASSIFICATION	0.9997679086993337	WITHOUT_CLASSIFICATION	2.3209130066621333E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999998952218317	WITHOUT_CLASSIFICATION	1.0477816833988038E-7	DEFECT
// Gotta atleast put in the proper spelling :-P	WITHOUT_CLASSIFICATION	0.9999689077983861	WITHOUT_CLASSIFICATION	3.10922016138376E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999998952218317	WITHOUT_CLASSIFICATION	1.0477816833988038E-7	DEFECT
// If this TransformOperation has DrawOperation children // then Rotate the first child and return.	WITHOUT_CLASSIFICATION	0.9999999928427721	WITHOUT_CLASSIFICATION	7.157228016001273E-9	DEFECT
// If this TransformOperation has DrawOperation children // then Rotate the first child and return.	WITHOUT_CLASSIFICATION	0.9999999928427721	WITHOUT_CLASSIFICATION	7.157228016001273E-9	DEFECT
// CheckStyle:MemberNameCheck ON	WITHOUT_CLASSIFICATION	0.9999990228927881	WITHOUT_CLASSIFICATION	9.771072118204615E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc // CheckStyle:MemberNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9999998951105344	WITHOUT_CLASSIFICATION	1.0488946556352988E-7	DEFECT
// change this to get the objects from the other reference	WITHOUT_CLASSIFICATION	0.9999999450919179	WITHOUT_CLASSIFICATION	5.4908082151153126E-8	DEFECT
// change this to get the objects from the other reference	WITHOUT_CLASSIFICATION	0.9999999450919179	WITHOUT_CLASSIFICATION	5.4908082151153126E-8	DEFECT
//-- Fields ----------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999953920786362	WITHOUT_CLASSIFICATION	4.6079213637733666E-6	DEFECT
//-- Methods ---------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999931118450794	WITHOUT_CLASSIFICATION	6.888154920471417E-6	DEFECT
// CheckStyle:VisibilityModifier OFF	WITHOUT_CLASSIFICATION	0.9999998177746504	WITHOUT_CLASSIFICATION	1.822253496713679E-7	DEFECT
// may be null if a system property has been added // after the project instance has been initialized	WITHOUT_CLASSIFICATION	0.9999743265830506	WITHOUT_CLASSIFICATION	2.567341694942663E-5	DEFECT
// Add this PropertySet's property names.	WITHOUT_CLASSIFICATION	0.9999926897798076	WITHOUT_CLASSIFICATION	7.310220192466104E-6	DEFECT
//map the names	WITHOUT_CLASSIFICATION	0.9999994055449295	WITHOUT_CLASSIFICATION	5.944550704844098E-7	DEFECT
// Create one NameEntry in the appropriate pattern list for each // line in the file.	WITHOUT_CLASSIFICATION	0.9999999820774762	WITHOUT_CLASSIFICATION	1.7922523730682405E-8	DEFECT
// Get a FileReader	WITHOUT_CLASSIFICATION	0.9999998562309805	WITHOUT_CLASSIFICATION	1.4376901949460026E-7	DEFECT
//Ignore exception	WITHOUT_CLASSIFICATION	0.999998974067708	WITHOUT_CLASSIFICATION	1.0259322920650392E-6	DEFECT
//-- ResourceLocation	WITHOUT_CLASSIFICATION	0.9999995914953655	WITHOUT_CLASSIFICATION	4.085046343685239E-7	DEFECT
// Add base set of permissions	WITHOUT_CLASSIFICATION	0.999999905020578	WITHOUT_CLASSIFICATION	9.497942204325902E-8	DEFECT
/*                     if the permission was not explicitly granted or revoked                     the original security manager will do its work                    */	WITHOUT_CLASSIFICATION	0.9998240570954261	WITHOUT_CLASSIFICATION	1.759429045739646E-4	DEFECT
// None of the actions revoked, so all allowed.	WITHOUT_CLASSIFICATION	0.9999999911987343	WITHOUT_CLASSIFICATION	8.801265755204113E-9	DEFECT
//default true:	WITHOUT_CLASSIFICATION	0.999997449356783	WITHOUT_CLASSIFICATION	2.550643217025614E-6	DEFECT
//default false:	WITHOUT_CLASSIFICATION	0.9999996072167987	WITHOUT_CLASSIFICATION	3.9278320120955015E-7	DEFECT
//default false:	WITHOUT_CLASSIFICATION	0.9999996072167987	WITHOUT_CLASSIFICATION	3.9278320120955015E-7	DEFECT
// The regular expression factory	WITHOUT_CLASSIFICATION	0.9999956384466651	WITHOUT_CLASSIFICATION	4.361553334997265E-6	DEFECT
// temporary variable	WITHOUT_CLASSIFICATION	0.9999999535492207	WITHOUT_CLASSIFICATION	4.6450779284818656E-8	DEFECT
// This is included	WITHOUT_CLASSIFICATION	0.999998769778602	WITHOUT_CLASSIFICATION	1.2302213979827116E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999998952218317	WITHOUT_CLASSIFICATION	1.0477816833988038E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999998952218317	WITHOUT_CLASSIFICATION	1.0477816833988038E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999998952218317	WITHOUT_CLASSIFICATION	1.0477816833988038E-7	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.99999795328422	WITHOUT_CLASSIFICATION	2.0467157800256684E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999998952218317	WITHOUT_CLASSIFICATION	1.0477816833988038E-7	DEFECT
//- ApacheCatalog	WITHOUT_CLASSIFICATION	0.9999948191213403	WITHOUT_CLASSIFICATION	5.180878659831726E-6	DEFECT
// // If you don't do this, you get all sorts of annoying // warnings about a missing properties file.  However, it // seems to work just fine with default values.  Ultimately, // we should probably include a "CatalogManager.properties" // file in the ant jarfile with some default property // settings.  See CatalogManager.java for more details. //	WITHOUT_CLASSIFICATION	0.9999999382845596	WITHOUT_CLASSIFICATION	6.171544037576031E-8	DEFECT
// // Make sure CatalogResolver instantiates ApacheCatalog, // rather than a plain Catalog //	WITHOUT_CLASSIFICATION	0.9999999839868853	WITHOUT_CLASSIFICATION	1.6013114772483634E-8	DEFECT
// debug // CatalogManager.getStaticManager().setVerbosity(4);	WITHOUT_CLASSIFICATION	0.9999968941628253	WITHOUT_CLASSIFICATION	3.1058371747575405E-6	DEFECT
// Pass in reference to ourselves so we can be called back.	WITHOUT_CLASSIFICATION	0.9999996739843771	WITHOUT_CLASSIFICATION	3.260156229446019E-7	DEFECT
//-- ApacheCatalogResolver	WITHOUT_CLASSIFICATION	0.9999995929096455	WITHOUT_CLASSIFICATION	4.070903544497482E-7	DEFECT
//sorted bag impl. borrowed from commons-collections TreeBag:	WITHOUT_CLASSIFICATION	0.9999658341947888	WITHOUT_CLASSIFICATION	3.416580521125599E-5	DEFECT
/* now check each Resource in case the child only           lets through files from any children IT may have: */	WITHOUT_CLASSIFICATION	0.9998149735326949	WITHOUT_CLASSIFICATION	1.8502646730514703E-4	DEFECT
//?	WITHOUT_CLASSIFICATION	0.9999565258234882	WITHOUT_CLASSIFICATION	4.347417651181709E-5	DEFECT
//not using the accessor in this case to avoid side effects	WITHOUT_CLASSIFICATION	0.9970467027486134	WITHOUT_CLASSIFICATION	0.0029532972513865627	DEFECT
/*package-private*/	WITHOUT_CLASSIFICATION	0.9999898894632587	WITHOUT_CLASSIFICATION	1.011053674124477E-5	DEFECT
//new oata.util.ReaderInputStream(new InputStreamReader(	WITHOUT_CLASSIFICATION	0.9999892881389606	WITHOUT_CLASSIFICATION	1.0711861039299667E-5	DEFECT
//, encoding), encoding);	WITHOUT_CLASSIFICATION	0.9999794675910847	WITHOUT_CLASSIFICATION	2.053240891526292E-5	DEFECT
//first the easy way, if all children are filesystem-only, return true:	WITHOUT_CLASSIFICATION	0.999999913680874	WITHOUT_CLASSIFICATION	8.63191258811836E-8	DEFECT
//preserve order-encountered using a list; enforce set logic manually:	WITHOUT_CLASSIFICATION	0.9999999349075243	WITHOUT_CLASSIFICATION	6.509247575683245E-8	DEFECT
/* cached DirectoryScanner instance */	WITHOUT_CLASSIFICATION	0.9999991201114498	WITHOUT_CLASSIFICATION	8.79888550285597E-7	DEFECT
//if no nested, natural order:	WITHOUT_CLASSIFICATION	0.9999999977565189	WITHOUT_CLASSIFICATION	2.243481057323066E-9	DEFECT
//dummy	WITHOUT_CLASSIFICATION	0.9999779251153632	WITHOUT_CLASSIFICATION	2.20748846368181E-5	DEFECT
//implement ResourceSelector; inherit doc	WITHOUT_CLASSIFICATION	0.9999996537747095	WITHOUT_CLASSIFICATION	3.462252905499056E-7	DEFECT
// First, check that all elements are correctly configured	WITHOUT_CLASSIFICATION	0.9999979577692899	WITHOUT_CLASSIFICATION	2.042230710152214E-6	DEFECT
//if either of them is missing, they are different	WITHOUT_CLASSIFICATION	0.9999928367530521	WITHOUT_CLASSIFICATION	7.163246947934621E-6	DEFECT
// different size =>different files	WITHOUT_CLASSIFICATION	0.999996784960062	WITHOUT_CLASSIFICATION	3.2150399380597086E-6	DEFECT
//same date if dest timestamp is within granularity of the srcfile	WITHOUT_CLASSIFICATION	0.9999999686951123	WITHOUT_CLASSIFICATION	3.130488773542328E-8	DEFECT
// different dates => different files	WITHOUT_CLASSIFICATION	0.9999996615827462	WITHOUT_CLASSIFICATION	3.3841725383987575E-7	DEFECT
//here do a bulk comparison	WITHOUT_CLASSIFICATION	0.9999891916204231	WITHOUT_CLASSIFICATION	1.0808379576813198E-5	DEFECT
// At this point, we know we have a tie.	WITHOUT_CLASSIFICATION	0.9999969651488597	WITHOUT_CLASSIFICATION	3.0348511402346588E-6	DEFECT
// throw BuildException on error	WITHOUT_CLASSIFICATION	0.997508704646828	WITHOUT_CLASSIFICATION	0.002491295353172078	DEFECT
// throw BuildException on error	WITHOUT_CLASSIFICATION	0.997508704646828	WITHOUT_CLASSIFICATION	0.002491295353172078	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999998952218317	WITHOUT_CLASSIFICATION	1.0477816833988038E-7	DEFECT
// throw BuildException on error	WITHOUT_CLASSIFICATION	0.997508704646828	WITHOUT_CLASSIFICATION	0.002491295353172078	DEFECT
// throw BuildException on error	WITHOUT_CLASSIFICATION	0.997508704646828	WITHOUT_CLASSIFICATION	0.002491295353172078	DEFECT
// throw BuildException on error	WITHOUT_CLASSIFICATION	0.997508704646828	WITHOUT_CLASSIFICATION	0.002491295353172078	DEFECT
// throw BuildException on error	WITHOUT_CLASSIFICATION	0.997508704646828	WITHOUT_CLASSIFICATION	0.002491295353172078	DEFECT
// If you felt daring, you could cache the basedir absolute path	WITHOUT_CLASSIFICATION	0.9999997440898098	WITHOUT_CLASSIFICATION	2.5591019018671414E-7	DEFECT
// Sanity check. Ditch it if you want faster performance	WITHOUT_CLASSIFICATION	0.9999999825751438	WITHOUT_CLASSIFICATION	1.7424856251474274E-8	DEFECT
// Determine file whose out-of-dateness is to be checked	WITHOUT_CLASSIFICATION	0.9999999559127974	WITHOUT_CLASSIFICATION	4.4087202413029333E-8	DEFECT
// If filename does not match the To attribute of the mapper // then filter it out of the files we are considering	WITHOUT_CLASSIFICATION	0.9999954192178004	WITHOUT_CLASSIFICATION	4.580782199579745E-6	DEFECT
// If filename does not match the To attribute of the mapper // then filter it out of the files we are considering	WITHOUT_CLASSIFICATION	0.9999954192178004	WITHOUT_CLASSIFICATION	4.580782199579745E-6	DEFECT
// Sanity check	WITHOUT_CLASSIFICATION	0.9999995989834863	WITHOUT_CLASSIFICATION	4.0101651366021414E-7	DEFECT
// Sanity check	WITHOUT_CLASSIFICATION	0.9999995989834863	WITHOUT_CLASSIFICATION	4.0101651366021414E-7	DEFECT
// Determine file whose existence is to be checked	WITHOUT_CLASSIFICATION	0.9999995441667727	WITHOUT_CLASSIFICATION	4.558332272656066E-7	DEFECT
/**     * When using this as a custom selector, this method will be called.     * It translates each parameter into the appropriate setXXX() call.     *     * @param parameters the complete set of parameters for this selector.     */	WITHOUT_CLASSIFICATION	0.9999989306069931	WITHOUT_CLASSIFICATION	1.0693930069121695E-6	DEFECT
// Directory size never selected for	WITHOUT_CLASSIFICATION	0.9999999318265218	WITHOUT_CLASSIFICATION	6.817347816722607E-8	DEFECT
/* You wish! */	WITHOUT_CLASSIFICATION	0.9999733367685291	WITHOUT_CLASSIFICATION	2.6663231470914344E-5	DEFECT
// check millis and only set it once.	WITHOUT_CLASSIFICATION	0.9999996802159707	WITHOUT_CLASSIFICATION	3.1978402928814793E-7	DEFECT
// When str starts with a File.separator, pattern has to start with a // File.separator. // When pattern starts with a File.separator, str has to start with a // File.separator.	WITHOUT_CLASSIFICATION	0.9999996263278871	WITHOUT_CLASSIFICATION	3.736721129282186E-7	DEFECT
// up to first '**'	WITHOUT_CLASSIFICATION	0.999999926329551	WITHOUT_CLASSIFICATION	7.367044904280105E-8	DEFECT
// up to first '**'	WITHOUT_CLASSIFICATION	0.999999926329551	WITHOUT_CLASSIFICATION	7.367044904280105E-8	DEFECT
// String is exhausted	WITHOUT_CLASSIFICATION	0.9999975874491286	WITHOUT_CLASSIFICATION	2.4125508713828112E-6	DEFECT
// String is exhausted	WITHOUT_CLASSIFICATION	0.9999975874491286	WITHOUT_CLASSIFICATION	2.4125508713828112E-6	DEFECT
// String is exhausted	WITHOUT_CLASSIFICATION	0.9999975874491286	WITHOUT_CLASSIFICATION	2.4125508713828112E-6	DEFECT
// String not exhausted, but pattern is. Failure.	WITHOUT_CLASSIFICATION	0.9995496841293383	WITHOUT_CLASSIFICATION	4.503158706617111E-4	DEFECT
// String not exhausted, but pattern is. Failure.	WITHOUT_CLASSIFICATION	0.9995496841293383	WITHOUT_CLASSIFICATION	4.503158706617111E-4	DEFECT
// up to last '**'	WITHOUT_CLASSIFICATION	0.9999995972902458	WITHOUT_CLASSIFICATION	4.027097542582679E-7	DEFECT
// '**/**' situation, so skip one	WITHOUT_CLASSIFICATION	0.9999999907056438	WITHOUT_CLASSIFICATION	9.294356204896783E-9	DEFECT
// No '*'s, so we make a shortcut	WITHOUT_CLASSIFICATION	0.9999999017103371	WITHOUT_CLASSIFICATION	9.828966296374303E-8	DEFECT
// Pattern and string do not have the same size	WITHOUT_CLASSIFICATION	0.9999854015350393	WITHOUT_CLASSIFICATION	1.4598464960737057E-5	DEFECT
// Character mismatch	WITHOUT_CLASSIFICATION	0.9999999854307643	WITHOUT_CLASSIFICATION	1.456923556729215E-8	DEFECT
// Character mismatch	WITHOUT_CLASSIFICATION	0.9999999854307643	WITHOUT_CLASSIFICATION	1.456923556729215E-8	DEFECT
// String matches against pattern	WITHOUT_CLASSIFICATION	0.9999995187863335	WITHOUT_CLASSIFICATION	4.812136664428408E-7	DEFECT
// throw BuildException on error	WITHOUT_CLASSIFICATION	0.997508704646828	WITHOUT_CLASSIFICATION	0.002491295353172078	DEFECT
// Character mismatch	WITHOUT_CLASSIFICATION	0.9999999854307643	WITHOUT_CLASSIFICATION	1.456923556729215E-8	DEFECT
// Find the pattern between padIdxStart & padIdxTmp in str between // strIdxStart & strIdxEnd	WITHOUT_CLASSIFICATION	0.9999999970090051	WITHOUT_CLASSIFICATION	2.990994803052451E-9	DEFECT
// Find the pattern between padIdxStart & padIdxTmp in str between // strIdxStart & strIdxEnd	WITHOUT_CLASSIFICATION	0.9999999970090051	WITHOUT_CLASSIFICATION	2.990994803052451E-9	DEFECT
// Character mismatch	WITHOUT_CLASSIFICATION	0.9999999854307643	WITHOUT_CLASSIFICATION	1.456923556729215E-8	DEFECT
// Character mismatch	WITHOUT_CLASSIFICATION	0.9999999854307643	WITHOUT_CLASSIFICATION	1.456923556729215E-8	DEFECT
// Character mismatch	WITHOUT_CLASSIFICATION	0.9999999854307643	WITHOUT_CLASSIFICATION	1.456923556729215E-8	DEFECT
// Pattern contains only '*', which matches anything	WITHOUT_CLASSIFICATION	0.9999664186004917	WITHOUT_CLASSIFICATION	3.358139950835334E-5	DEFECT
// Process characters before first star	WITHOUT_CLASSIFICATION	0.9999999960765019	WITHOUT_CLASSIFICATION	3.92349801079828E-9	DEFECT
// All characters in the string are used. Check if only '*'s are // left in the pattern. If so, we succeeded. Otherwise failure.	WITHOUT_CLASSIFICATION	0.9999999880479219	WITHOUT_CLASSIFICATION	1.1952078098835732E-8	DEFECT
// All characters in the string are used. Check if only '*'s are // left in the pattern. If so, we succeeded. Otherwise failure.	WITHOUT_CLASSIFICATION	0.9999999880479219	WITHOUT_CLASSIFICATION	1.1952078098835732E-8	DEFECT
// Process characters after last star	WITHOUT_CLASSIFICATION	0.9999999953407906	WITHOUT_CLASSIFICATION	4.659209329236435E-9	DEFECT
// process pattern between stars. padIdxStart and patIdxEnd point // always to a '*'.	WITHOUT_CLASSIFICATION	0.999999891605181	WITHOUT_CLASSIFICATION	1.0839481900241699E-7	DEFECT
// Two stars next to each other, skip the first one.	WITHOUT_CLASSIFICATION	0.9999998507332023	WITHOUT_CLASSIFICATION	1.4926679759137147E-7	DEFECT
// All characters in the string are used. Check if only '*'s are left // in the pattern. If so, we succeeded. Otherwise failure.	WITHOUT_CLASSIFICATION	0.9999999962172015	WITHOUT_CLASSIFICATION	3.7827985043330816E-9	DEFECT
/*++*/	WITHOUT_CLASSIFICATION	0.9998699086189504	WITHOUT_CLASSIFICATION	1.300913810495377E-4	DEFECT
// Creation is done here rather than in isSelected() because some // containers may do a validation pass before running isSelected(), // but we need to check for the existence of the created class.	WITHOUT_CLASSIFICATION	0.9999997178082974	WITHOUT_CLASSIFICATION	2.8219170250022107E-7	DEFECT
// We know that dynselector must be non-null if no error message	WITHOUT_CLASSIFICATION	0.999999853599846	WITHOUT_CLASSIFICATION	1.4640015402260793E-7	DEFECT
// Deal with if and unless properties first	WITHOUT_CLASSIFICATION	0.9999997142996875	WITHOUT_CLASSIFICATION	2.85700312506039E-7	DEFECT
// -----  attributes  -----	WITHOUT_CLASSIFICATION	0.9999998811736952	WITHOUT_CLASSIFICATION	1.1882630480689558E-7	DEFECT
// ----- internal member variables -----	WITHOUT_CLASSIFICATION	0.999999935139133	WITHOUT_CLASSIFICATION	6.486086702536764E-8	DEFECT
// -----  constructors  -----	WITHOUT_CLASSIFICATION	0.9999999488342467	WITHOUT_CLASSIFICATION	5.1165753319396974E-8	DEFECT
// ----- configuration  -----	WITHOUT_CLASSIFICATION	0.9999996980969543	WITHOUT_CLASSIFICATION	3.0190304566531495E-7	DEFECT
// normal use inside Ant	WITHOUT_CLASSIFICATION	0.9999998882009087	WITHOUT_CLASSIFICATION	1.1179909138777141E-7	DEFECT
// set self as a BuildListener to delay cachefile saves	WITHOUT_CLASSIFICATION	0.9999993947087522	WITHOUT_CLASSIFICATION	6.052912477048687E-7	DEFECT
// no reference to project - e.g. during normal JUnit tests	WITHOUT_CLASSIFICATION	0.9999999759546908	WITHOUT_CLASSIFICATION	2.404530926926095E-8	DEFECT
// this is a *.* parameter for later use	WITHOUT_CLASSIFICATION	0.9999787519405045	WITHOUT_CLASSIFICATION	2.124805949553686E-5	DEFECT
// specify the algorithm classname	WITHOUT_CLASSIFICATION	0.9999974342465997	WITHOUT_CLASSIFICATION	2.5657534003189558E-6	DEFECT
// use Algorithm defined via name	WITHOUT_CLASSIFICATION	0.9999999451586032	WITHOUT_CLASSIFICATION	5.4841396863096995E-8	DEFECT
// use Algorithm specified by classname	WITHOUT_CLASSIFICATION	0.9999992799936505	WITHOUT_CLASSIFICATION	7.20006349505152E-7	DEFECT
// nothing specified - use default	WITHOUT_CLASSIFICATION	0.9999999994456741	WITHOUT_CLASSIFICATION	5.543259465650847E-10	DEFECT
// else nothing to do	WITHOUT_CLASSIFICATION	0.9999995142320458	WITHOUT_CLASSIFICATION	4.857679543153174E-7	DEFECT
// use Algorithm defined via name	WITHOUT_CLASSIFICATION	0.9999999451586032	WITHOUT_CLASSIFICATION	5.4841396863096995E-8	DEFECT
// // -----  Set the main attributes, pattern '*'  ----- //	WITHOUT_CLASSIFICATION	0.9999997167738404	WITHOUT_CLASSIFICATION	2.832261596983925E-7	DEFECT
// use Algorithm specified by classname	WITHOUT_CLASSIFICATION	0.9999992799936505	WITHOUT_CLASSIFICATION	7.20006349505152E-7	DEFECT
// nothing specified - use default	WITHOUT_CLASSIFICATION	0.9999999994456741	WITHOUT_CLASSIFICATION	5.543259465650847E-10	DEFECT
// specify the cache classname	WITHOUT_CLASSIFICATION	0.9999998677687123	WITHOUT_CLASSIFICATION	1.322312877955895E-7	DEFECT
// use Cache defined via name	WITHOUT_CLASSIFICATION	0.999999999222125	WITHOUT_CLASSIFICATION	7.778748641033671E-10	DEFECT
// use Cache specified by classname	WITHOUT_CLASSIFICATION	0.9999999629694027	WITHOUT_CLASSIFICATION	3.703059721511212E-8	DEFECT
// specify the comparator classname	WITHOUT_CLASSIFICATION	0.9999999138344845	WITHOUT_CLASSIFICATION	8.616551552771984E-8	DEFECT
// // -----  Set the special attributes, pattern '*.*'  ----- //	WITHOUT_CLASSIFICATION	0.9999998418907687	WITHOUT_CLASSIFICATION	1.5810923119517592E-7	DEFECT
// load the specified class	WITHOUT_CLASSIFICATION	0.9999998637049533	WITHOUT_CLASSIFICATION	1.3629504665422167E-7	DEFECT
// -----  the selection work  -----	WITHOUT_CLASSIFICATION	0.999866010402083	WITHOUT_CLASSIFICATION	1.339895979170142E-4	DEFECT
// We have a 'resourced' file, so reconvert it and use // the 'old' implementation.	WITHOUT_CLASSIFICATION	0.9999998282455932	WITHOUT_CLASSIFICATION	1.7175440675682675E-7	DEFECT
// You can not compute a value for a directory	WITHOUT_CLASSIFICATION	0.9999867892228729	WITHOUT_CLASSIFICATION	1.321077712706907E-5	DEFECT
// Get the values and do the comparison	WITHOUT_CLASSIFICATION	0.9999974286854838	WITHOUT_CLASSIFICATION	2.5713145162683396E-6	DEFECT
// Maybe update the cache	WITHOUT_CLASSIFICATION	0.9999998850982337	WITHOUT_CLASSIFICATION	1.149017662861857E-7	DEFECT
// -----  attribute and nested element support  -----	WITHOUT_CLASSIFICATION	0.9999998002706865	WITHOUT_CLASSIFICATION	1.9972931363630608E-7	DEFECT
// the usual classloader	WITHOUT_CLASSIFICATION	0.999998808311852	WITHOUT_CLASSIFICATION	1.1916881480223576E-6	DEFECT
// additional use the provided classpath	WITHOUT_CLASSIFICATION	0.9999997609416275	WITHOUT_CLASSIFICATION	2.3905837256518845E-7	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9999989488507218	WITHOUT_CLASSIFICATION	1.0511492781865044E-6	DEFECT
// ----- 'beautiful' output -----	WITHOUT_CLASSIFICATION	0.9999999020483127	WITHOUT_CLASSIFICATION	9.795168739959243E-8	DEFECT
// ----- BuildListener interface methods -----	WITHOUT_CLASSIFICATION	0.9999975613864797	WITHOUT_CLASSIFICATION	2.4386135202682826E-6	DEFECT
// The EnumeratedAttributes for the three interface implementations. // Name-Classname mapping is done in the configure() method.	WITHOUT_CLASSIFICATION	0.999997215890862	WITHOUT_CLASSIFICATION	2.7841091380156266E-6	DEFECT
// -----  member variables  -----	WITHOUT_CLASSIFICATION	0.9999998666416008	WITHOUT_CLASSIFICATION	1.3335839919407604E-7	DEFECT
// -----  member variables  -----	WITHOUT_CLASSIFICATION	0.9999998666416008	WITHOUT_CLASSIFICATION	1.3335839919407604E-7	DEFECT
// -----  Algorithm-Configuration  -----	WITHOUT_CLASSIFICATION	0.999997887319072	WITHOUT_CLASSIFICATION	2.112680927847736E-6	DEFECT
// -----  Algorithm-Configuration  -----	WITHOUT_CLASSIFICATION	0.999997887319072	WITHOUT_CLASSIFICATION	2.112680927847736E-6	DEFECT
// -----  Logic  -----	WITHOUT_CLASSIFICATION	0.9999988892771936	WITHOUT_CLASSIFICATION	1.1107228064576584E-6	DEFECT
// -----  Logic  -----	WITHOUT_CLASSIFICATION	0.9999988892771936	WITHOUT_CLASSIFICATION	1.1107228064576584E-6	DEFECT
// implementation adapted from ...taskdefs.Checksum, thanks to Magesh for hint	WITHOUT_CLASSIFICATION	0.9999983457151075	WITHOUT_CLASSIFICATION	1.6542848924642401E-6	DEFECT
// Read the file	WITHOUT_CLASSIFICATION	0.9999975683498019	WITHOUT_CLASSIFICATION	2.431650198052948E-6	DEFECT
// -----  member variables - configuration  -----	WITHOUT_CLASSIFICATION	0.9999999391055071	WITHOUT_CLASSIFICATION	6.089449289792855E-8	DEFECT
// -----  member variables - internal use  -----	WITHOUT_CLASSIFICATION	0.9999999401300882	WITHOUT_CLASSIFICATION	5.986991185972408E-8	DEFECT
// -----  Constructors  -----	WITHOUT_CLASSIFICATION	0.9999999489226876	WITHOUT_CLASSIFICATION	5.107731247700533E-8	DEFECT
// -----  Cache-Configuration  -----	WITHOUT_CLASSIFICATION	0.9999996808086562	WITHOUT_CLASSIFICATION	3.191913438018553E-7	DEFECT
// -----  Data Access	WITHOUT_CLASSIFICATION	0.9999994217954825	WITHOUT_CLASSIFICATION	5.782045174932218E-7	DEFECT
// after loading the cache is up to date with the file	WITHOUT_CLASSIFICATION	0.9999998728020899	WITHOUT_CLASSIFICATION	1.271979099753688E-7	DEFECT
// -----  additional  -----	WITHOUT_CLASSIFICATION	0.9999870978564388	WITHOUT_CLASSIFICATION	1.2902143561179952E-5	DEFECT
// swallow as this simply doesn't seem to be Kaffe	WITHOUT_CLASSIFICATION	0.9998184426949204	WITHOUT_CLASSIFICATION	1.815573050796648E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999996763950936	WITHOUT_CLASSIFICATION	3.2360490638735057E-7	DEFECT
// find the line breaks and pass other chars through in blocks	WITHOUT_CLASSIFICATION	0.9999681762549896	WITHOUT_CLASSIFICATION	3.182374501031702E-5	DEFECT
// either end of buffer or a line separator char	WITHOUT_CLASSIFICATION	0.9999999260642798	WITHOUT_CLASSIFICATION	7.3935720214154E-8	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.99999795328422	WITHOUT_CLASSIFICATION	2.0467157800256684E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999998952218317	WITHOUT_CLASSIFICATION	1.0477816833988038E-7	DEFECT
// Because the content is only read the file will not be damaged. I tested // with JPG, ZIP and PDF as binary files.	WITHOUT_CLASSIFICATION	0.9999973367321975	WITHOUT_CLASSIFICATION	2.6632678025326163E-6	DEFECT
// don't need the opposite check as the Dictionaries have the // same size, so we've also covered all keys of d2 already.	WITHOUT_CLASSIFICATION	0.9999999908721963	WITHOUT_CLASSIFICATION	9.127803767739143E-9	DEFECT
//log uptodateness of all targets:	WITHOUT_CLASSIFICATION	0.9999999289972582	WITHOUT_CLASSIFICATION	7.100274178390909E-8	DEFECT
// CheckStyle:ParameterNumberCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9999997661899818	WITHOUT_CLASSIFICATION	2.3381001835225232E-7	DEFECT
// this should not happen, because the lines are // returned with the end of line delimiter	WITHOUT_CLASSIFICATION	0.9999916893840699	WITHOUT_CLASSIFICATION	8.310615930060678E-6	DEFECT
// CheckStyle:ParameterNumberCheck ON	WITHOUT_CLASSIFICATION	0.999999894316232	WITHOUT_CLASSIFICATION	1.0568376807050153E-7	DEFECT
// two not existing files are equal	WITHOUT_CLASSIFICATION	0.9999963875166911	WITHOUT_CLASSIFICATION	3.6124833089949873E-6	DEFECT
// should the following two be switched?  If r1 and r2 refer to the same file, // isn't their content equal regardless of whether that file is a directory?	WITHOUT_CLASSIFICATION	0.9999995340008317	WITHOUT_CLASSIFICATION	4.6599916829775984E-7	DEFECT
// don't want to compare directory contents for now	WITHOUT_CLASSIFICATION	0.9999393548356207	WITHOUT_CLASSIFICATION	6.0645164379311445E-5	DEFECT
//as far as we know	WITHOUT_CLASSIFICATION	0.9999980311065871	WITHOUT_CLASSIFICATION	1.968893412850685E-6	DEFECT
//ignore release of an already-closed funnel	WITHOUT_CLASSIFICATION	0.9999999994672979	WITHOUT_CLASSIFICATION	5.327020275114858E-10	DEFECT
// Write child elements and text	WITHOUT_CLASSIFICATION	0.9999999124367974	WITHOUT_CLASSIFICATION	8.756320256532359E-8	DEFECT
// Write indent characters	WITHOUT_CLASSIFICATION	0.9999999898788936	WITHOUT_CLASSIFICATION	1.0121106409635366E-8	DEFECT
// Write element	WITHOUT_CLASSIFICATION	0.9999992179382153	WITHOUT_CLASSIFICATION	7.820617846883293E-7	DEFECT
// steal default namespace	WITHOUT_CLASSIFICATION	0.9999999893379024	WITHOUT_CLASSIFICATION	1.0662097711963574E-8	DEFECT
// Write attributes	WITHOUT_CLASSIFICATION	0.9999999435680066	WITHOUT_CLASSIFICATION	5.6431993356450396E-8	DEFECT
// Write element close	WITHOUT_CLASSIFICATION	0.9999999820148486	WITHOUT_CLASSIFICATION	1.7985151328193464E-8	DEFECT
// relative path	WITHOUT_CLASSIFICATION	0.9999999103486433	WITHOUT_CLASSIFICATION	8.965135672117634E-8	DEFECT
// Fall tru	WITHOUT_CLASSIFICATION	0.9999968544366221	WITHOUT_CLASSIFICATION	3.145563377982038E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999998952218317	WITHOUT_CLASSIFICATION	1.0477816833988038E-7	DEFECT
// Determine the Java version by looking at available classes // java.net.Proxy was introduced in JDK 1.5 // java.lang.CharSequence was introduced in JDK 1.4 // java.lang.StrictMath was introduced in JDK 1.3 // java.lang.ThreadLocal was introduced in JDK 1.2 // java.lang.Void was introduced in JDK 1.1 // Count up version until a NoClassDefFoundError ends the try	WITHOUT_CLASSIFICATION	0.9999989996666565	WITHOUT_CLASSIFICATION	1.0003333435898497E-6	DEFECT
// swallow as we've hit the max class version that // we have	WITHOUT_CLASSIFICATION	0.9999987882052436	WITHOUT_CLASSIFICATION	1.2117947564156658E-6	DEFECT
// Extrapolating from: // "NetWare may have a "java" in that directory, but 99% of // the time, you don't want to execute it" -- Jeff Tulley // <JTULLEY@novell.com>	WITHOUT_CLASSIFICATION	0.9996375607009714	WITHOUT_CLASSIFICATION	3.6243929902850236E-4	DEFECT
// On IBM's JDK 1.2 the directory layout is different, 1.3 follows // Sun's layout.	WITHOUT_CLASSIFICATION	0.9971957244586752	WITHOUT_CLASSIFICATION	0.0028042755413246927	DEFECT
// On IBM's JDK 1.2 the directory layout is different, 1.3 follows // Sun's layout.	WITHOUT_CLASSIFICATION	0.9971957244586752	WITHOUT_CLASSIFICATION	0.0028042755413246927	DEFECT
// Unfortunately on Windows java.home doesn't always refer // to the correct location, so we need to fall back to // assuming java is somewhere on the PATH.	WITHOUT_CLASSIFICATION	0.9984131548658605	WITHOUT_CLASSIFICATION	0.001586845134139602	DEFECT
// fall back to JRE bin directory, also catches JDK 1.0 and 1.1 // where java.home points to the root of the JDK and Mac OS X where // the whole directory layout is different from Sun's	WITHOUT_CLASSIFICATION	0.9999765984275286	WITHOUT_CLASSIFICATION	2.3401572471377877E-5	DEFECT
// This is the most common extension case - exe for windows and OS/2, // nothing for *nix.	WITHOUT_CLASSIFICATION	0.9983240243229314	WITHOUT_CLASSIFICATION	0.0016759756770685734	DEFECT
//In Java1.5, the apache stuff moved.	WITHOUT_CLASSIFICATION	0.9999956451383828	WITHOUT_CLASSIFICATION	4.354861617155896E-6	DEFECT
//fall through.	WITHOUT_CLASSIFICATION	0.9999579744257259	WITHOUT_CLASSIFICATION	4.2025574274050675E-5	DEFECT
// fall through	WITHOUT_CLASSIFICATION	0.9999886859597789	WITHOUT_CLASSIFICATION	1.1314040221023305E-5	DEFECT
// fall through	WITHOUT_CLASSIFICATION	0.9999886859597789	WITHOUT_CLASSIFICATION	1.1314040221023305E-5	DEFECT
// fall through	WITHOUT_CLASSIFICATION	0.9999886859597789	WITHOUT_CLASSIFICATION	1.1314040221023305E-5	DEFECT
// are there any here that we forgot? // fall through	WITHOUT_CLASSIFICATION	0.9999890435689678	WITHOUT_CLASSIFICATION	1.0956431032299776E-5	DEFECT
//things like sun.reflection, sun.misc, sun.net	WITHOUT_CLASSIFICATION	0.9999867436805306	WITHOUT_CLASSIFICATION	1.3256319469423224E-5	DEFECT
//things like sun.reflection, sun.misc, sun.net	WITHOUT_CLASSIFICATION	0.9999867436805306	WITHOUT_CLASSIFICATION	1.3256319469423224E-5	DEFECT
//Strip '.' token	WITHOUT_CLASSIFICATION	0.9999905003825359	WITHOUT_CLASSIFICATION	9.499617464009776E-6	DEFECT
//If it ended in a dot, throw an exception	WITHOUT_CLASSIFICATION	0.9992999297129402	WITHOUT_CLASSIFICATION	7.000702870597104E-4	DEFECT
// Exact match	WITHOUT_CLASSIFICATION	0.9999987410879616	WITHOUT_CLASSIFICATION	1.2589120383190764E-6	DEFECT
// Exact match	WITHOUT_CLASSIFICATION	0.9999987410879616	WITHOUT_CLASSIFICATION	1.2589120383190764E-6	DEFECT
// Exact match	WITHOUT_CLASSIFICATION	0.9999987410879616	WITHOUT_CLASSIFICATION	1.2589120383190764E-6	DEFECT
// might read too much	WITHOUT_CLASSIFICATION	0.9999937142068992	WITHOUT_CLASSIFICATION	6.285793100774841E-6	DEFECT
// would be imprecise	WITHOUT_CLASSIFICATION	0.9999973804805187	WITHOUT_CLASSIFICATION	2.6195194814082067E-6	DEFECT
//last character isn't a digit	WITHOUT_CLASSIFICATION	0.9999992320089156	WITHOUT_CLASSIFICATION	7.679910844578931E-7	DEFECT
// write out the number of characters encoded in this line.	WITHOUT_CLASSIFICATION	0.9999999940869058	WITHOUT_CLASSIFICATION	5.913094186802327E-9	DEFECT
// set the padding defaults	WITHOUT_CLASSIFICATION	0.9999998801014037	WITHOUT_CLASSIFICATION	1.1989859623199025E-7	DEFECT
// get the next 3 bytes (if we have them)	WITHOUT_CLASSIFICATION	0.999999545679397	WITHOUT_CLASSIFICATION	4.543206030349909E-7	DEFECT
// OK, Java 1.3.	WITHOUT_CLASSIFICATION	0.9999995479704735	WITHOUT_CLASSIFICATION	4.520295265586123E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999996763950936	WITHOUT_CLASSIFICATION	3.2360490638735057E-7	DEFECT
// CheckStyle:ConstantNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9999985489535307	WITHOUT_CLASSIFICATION	1.4510464693492277E-6	DEFECT
// CheckStyle:ConstantNameCheck ON	WITHOUT_CLASSIFICATION	0.9999991607398475	WITHOUT_CLASSIFICATION	8.392601523947596E-7	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.99999795328422	WITHOUT_CLASSIFICATION	2.0467157800256684E-6	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.99999795328422	WITHOUT_CLASSIFICATION	2.0467157800256684E-6	DEFECT
// #8031: first try Java 1.4.	WITHOUT_CLASSIFICATION	0.9999939128549966	WITHOUT_CLASSIFICATION	6.087145003407106E-6	DEFECT
// Reflection problems? Should not happen, debug.	WITHOUT_CLASSIFICATION	0.9973595546505258	WITHOUT_CLASSIFICATION	0.002640445349474098	DEFECT
// CheckStyle:ParameterNumberCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9999997661899818	WITHOUT_CLASSIFICATION	2.3381001835225232E-7	DEFECT
// CheckStyle:ParameterNumberCheck ON	WITHOUT_CLASSIFICATION	0.999999894316232	WITHOUT_CLASSIFICATION	1.0568376807050153E-7	DEFECT
// depending on the implementation the actual RE won't // get instantiated in the constructor.	WITHOUT_CLASSIFICATION	0.9999950028619452	WITHOUT_CLASSIFICATION	4.997138054787868E-6	DEFECT
// terminate with a linefeed alone	WITHOUT_CLASSIFICATION	0.9999986870091292	WITHOUT_CLASSIFICATION	1.312990870858231E-6	DEFECT
// NotReached	WITHOUT_CLASSIFICATION	0.9999995466537811	WITHOUT_CLASSIFICATION	4.533462188679904E-7	DEFECT
//  0 to  7 //  8 to 15 // 16 to 23 // 24 to 31 // 32 to 39 // 40 to 47 // 48 to 55 // 56 to 63	WITHOUT_CLASSIFICATION	0.9999431518846286	WITHOUT_CLASSIFICATION	5.684811537145254E-5	DEFECT
// store the octets	WITHOUT_CLASSIFICATION	0.999999964628308	WITHOUT_CLASSIFICATION	3.53716920677187E-8	DEFECT
// store the octets	WITHOUT_CLASSIFICATION	0.999999964628308	WITHOUT_CLASSIFICATION	3.53716920677187E-8	DEFECT
// store the octets	WITHOUT_CLASSIFICATION	0.999999964628308	WITHOUT_CLASSIFICATION	3.53716920677187E-8	DEFECT
// padding	WITHOUT_CLASSIFICATION	0.9999949605662971	WITHOUT_CLASSIFICATION	5.0394337029568356E-6	DEFECT
// padding	WITHOUT_CLASSIFICATION	0.9999949605662971	WITHOUT_CLASSIFICATION	5.0394337029568356E-6	DEFECT
// magic property	WITHOUT_CLASSIFICATION	0.9999971402408341	WITHOUT_CLASSIFICATION	2.8597591659377296E-6	DEFECT
//only text nodes that are non null after property expansion are added	WITHOUT_CLASSIFICATION	0.9999898608627624	WITHOUT_CLASSIFICATION	1.0139137237599712E-5	DEFECT
//no need to synchronize, as Vector is always synchronized	WITHOUT_CLASSIFICATION	0.9999947290284293	WITHOUT_CLASSIFICATION	5.270971570768213E-6	DEFECT
// do not close the stream	WITHOUT_CLASSIFICATION	0.9999997814567669	WITHOUT_CLASSIFICATION	2.1854323309297677E-7	DEFECT
//Empty	WITHOUT_CLASSIFICATION	0.9999708119401972	WITHOUT_CLASSIFICATION	2.918805980285739E-5	DEFECT
//Empty	WITHOUT_CLASSIFICATION	0.9999708119401972	WITHOUT_CLASSIFICATION	2.918805980285739E-5	DEFECT
//get some non-crypto-grade randomness from various places.	WITHOUT_CLASSIFICATION	0.9999999611115745	WITHOUT_CLASSIFICATION	3.888842548532899E-8	DEFECT
// Cannot resolve it, so skip it.	WITHOUT_CLASSIFICATION	0.999999777959709	WITHOUT_CLASSIFICATION	2.2204029098090017E-7	DEFECT
// plain component	WITHOUT_CLASSIFICATION	0.9999998959652778	WITHOUT_CLASSIFICATION	1.0403472216681777E-7	DEFECT
// make sure we are dealing with an absolute path	WITHOUT_CLASSIFICATION	0.9999999227195508	WITHOUT_CLASSIFICATION	7.728044913727352E-8	DEFECT
//remove the initial separator; the root has it.	WITHOUT_CLASSIFICATION	0.9999992062231673	WITHOUT_CLASSIFICATION	7.937768326494036E-7	DEFECT
// UNC drive	WITHOUT_CLASSIFICATION	0.9999998127541241	WITHOUT_CLASSIFICATION	1.8724587582048358E-7	DEFECT
// format: "DEVICE:[DIR.SUBDIR]FILE"	WITHOUT_CLASSIFICATION	0.9999989768143174	WITHOUT_CLASSIFICATION	1.0231856825454926E-6	DEFECT
// treat directories specified using .DIR syntax as files	WITHOUT_CLASSIFICATION	0.9999999610679412	WITHOUT_CLASSIFICATION	3.8932058742990586E-8	DEFECT
// add an extra slash for filesystems with drive-specifiers	WITHOUT_CLASSIFICATION	0.9999999264360854	WITHOUT_CLASSIFICATION	7.356391461251491E-8	DEFECT
//do a check for the destination file existing	WITHOUT_CLASSIFICATION	0.9999999920969596	WITHOUT_CLASSIFICATION	7.903040456685477E-9	DEFECT
// execute the script	WITHOUT_CLASSIFICATION	0.999999481914323	WITHOUT_CLASSIFICATION	5.180856770248549E-7	DEFECT
// do nothing by default	WITHOUT_CLASSIFICATION	0.999999634331336	WITHOUT_CLASSIFICATION	3.656686641166891E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999996763950936	WITHOUT_CLASSIFICATION	3.2360490638735057E-7	DEFECT
// NotReached	WITHOUT_CLASSIFICATION	0.9999995466537811	WITHOUT_CLASSIFICATION	4.533462188679904E-7	DEFECT
// now recover all the dependencies collected and add to the list.	WITHOUT_CLASSIFICATION	0.9999999894787781	WITHOUT_CLASSIFICATION	1.0521221867178425E-8	DEFECT
//inherit doc	WITHOUT_CLASSIFICATION	0.9999951853441575	WITHOUT_CLASSIFICATION	4.814655842443714E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999998952218317	WITHOUT_CLASSIFICATION	1.0477816833988038E-7	DEFECT
// NotReached	WITHOUT_CLASSIFICATION	0.9999995466537811	WITHOUT_CLASSIFICATION	4.533462188679904E-7	DEFECT
// do not close the stream	WITHOUT_CLASSIFICATION	0.9999997814567669	WITHOUT_CLASSIFICATION	2.1854323309297677E-7	DEFECT
// on cygwin, our current directory can be a UNC; // assume user.dir is absolute or all hell breaks loose...	WITHOUT_CLASSIFICATION	0.9997464969460674	WITHOUT_CLASSIFICATION	2.5350305393258634E-4	DEFECT
// not before the filesystem root and not after it, since root // already contains one	WITHOUT_CLASSIFICATION	0.9999999781388187	WITHOUT_CLASSIFICATION	2.1861181279210066E-8	DEFECT
// ensure that l ends with a / // so we never think /foo was a parent directory of /foobar	WITHOUT_CLASSIFICATION	0.9999998245595048	WITHOUT_CLASSIFICATION	1.7544049516863712E-7	DEFECT
// ensure that l ends with a / // so we never think /foo was a parent directory of /foobar	WITHOUT_CLASSIFICATION	0.9999998245595048	WITHOUT_CLASSIFICATION	1.7544049516863712E-7	DEFECT
// build the path stack info to compare	WITHOUT_CLASSIFICATION	0.9999965262299886	WITHOUT_CLASSIFICATION	3.473770011419087E-6	DEFECT
// not the same device (would be "" on Linux/Unix)	WITHOUT_CLASSIFICATION	0.9999993534189384	WITHOUT_CLASSIFICATION	6.465810615585235E-7	DEFECT
// no comparison possible	WITHOUT_CLASSIFICATION	0.9999998105874216	WITHOUT_CLASSIFICATION	1.8941257839267813E-7	DEFECT
// get index of parts which are equal	WITHOUT_CLASSIFICATION	0.9999991606563566	WITHOUT_CLASSIFICATION	8.393436433432694E-7	DEFECT
// if "from" part is longer, fill it up with ".." // to reach path which is equal to both paths	WITHOUT_CLASSIFICATION	0.9999999997945186	WITHOUT_CLASSIFICATION	2.0548139477506248E-10	DEFECT
// fill it up path with parts which were not equal	WITHOUT_CLASSIFICATION	0.999999956239692	WITHOUT_CLASSIFICATION	4.376030801195949E-8	DEFECT
// can safely use '/' because Windows understands '/' as separator	WITHOUT_CLASSIFICATION	0.999999155044254	WITHOUT_CLASSIFICATION	8.449557460271196E-7	DEFECT
// base directory of the fileset	WITHOUT_CLASSIFICATION	0.9999998375803439	WITHOUT_CLASSIFICATION	1.6241965598186475E-7	DEFECT
// build the list of sources which are out of date with // respect to the target	WITHOUT_CLASSIFICATION	0.9999999984487815	WITHOUT_CLASSIFICATION	1.551218420239522E-9	DEFECT
// code from Magesh moved from DefaultLogger and slightly modified	WITHOUT_CLASSIFICATION	0.999999474826863	WITHOUT_CLASSIFICATION	5.251731369863117E-7	DEFECT
//if you cannot read it, you won't be able to write it either	WITHOUT_CLASSIFICATION	0.9999756673955619	WITHOUT_CLASSIFICATION	2.4332604438146558E-5	DEFECT
// must be a zip of some sort	WITHOUT_CLASSIFICATION	0.999999934421677	WITHOUT_CLASSIFICATION	6.557832297272563E-8	DEFECT
// does the class have a package structure	WITHOUT_CLASSIFICATION	0.9999983443740941	WITHOUT_CLASSIFICATION	1.6556259058482924E-6	DEFECT
// check if the package structure is more than 1 level deep	WITHOUT_CLASSIFICATION	0.9999999996881408	WITHOUT_CLASSIFICATION	3.1185917420454005E-10	DEFECT
// class name has more than 1 package level 'com.company.Class'	WITHOUT_CLASSIFICATION	0.9999994702742517	WITHOUT_CLASSIFICATION	5.297257483744621E-7	DEFECT
// class name has only 1 package level 'package.Class'	WITHOUT_CLASSIFICATION	0.9999997918915482	WITHOUT_CLASSIFICATION	2.0810845179501247E-7	DEFECT
// Add the class in dotted notation 'com.company.Class'	WITHOUT_CLASSIFICATION	0.9999930173430973	WITHOUT_CLASSIFICATION	6.982656902741391E-6	DEFECT
// Add a class with no package 'Class'	WITHOUT_CLASSIFICATION	0.9999996477958305	WITHOUT_CLASSIFICATION	3.5220416945609074E-7	DEFECT
// force BCEL classes to load now	WITHOUT_CLASSIFICATION	0.9999996540981695	WITHOUT_CLASSIFICATION	3.4590183056372416E-7	DEFECT
// force BCEL classes to load now	WITHOUT_CLASSIFICATION	0.9999996540981695	WITHOUT_CLASSIFICATION	3.4590183056372416E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999996763950936	WITHOUT_CLASSIFICATION	3.2360490638735057E-7	DEFECT
// NotReached	WITHOUT_CLASSIFICATION	0.9999995466537811	WITHOUT_CLASSIFICATION	4.533462188679904E-7	DEFECT
// we get the root classes and build up a set of // classes upon which they depend	WITHOUT_CLASSIFICATION	0.9999997631236142	WITHOUT_CLASSIFICATION	2.3687638577244802E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999998952218317	WITHOUT_CLASSIFICATION	1.0477816833988038E-7	DEFECT
// execute the script	WITHOUT_CLASSIFICATION	0.999999481914323	WITHOUT_CLASSIFICATION	5.180856770248549E-7	DEFECT
//log security exceptions and continue; it aint that //important and may be quite common running Ant embedded.	WITHOUT_CLASSIFICATION	0.9999959937648831	WITHOUT_CLASSIFICATION	4.006235116956685E-6	DEFECT
// we look through the classpath elements. If the element is a dir // we look for the file. IF it is a zip, we look for the zip entry	WITHOUT_CLASSIFICATION	0.9999999734611867	WITHOUT_CLASSIFICATION	2.6538813133576173E-8	DEFECT
// we look through the source path elements. If the element is a dir // we look for the file. If it is a zip, we look for the zip entry. // This isn't normal for source paths but we get it for free	WITHOUT_CLASSIFICATION	0.9999998522540896	WITHOUT_CLASSIFICATION	1.47745910362905E-7	DEFECT
// first letter of the previous segment of the class name 'Class' // is upper case ascii. so according to the spec it's an inner class	WITHOUT_CLASSIFICATION	0.9999998714827487	WITHOUT_CLASSIFICATION	1.2851725128635735E-7	DEFECT
// Register Groovy ourselves, since BSF did not // natively support it in versions previous to 1.2.4.	WITHOUT_CLASSIFICATION	0.9999332818678872	WITHOUT_CLASSIFICATION	6.671813211280772E-5	DEFECT
// execute the script	WITHOUT_CLASSIFICATION	0.999999481914323	WITHOUT_CLASSIFICATION	5.180856770248549E-7	DEFECT
// translate \1 to $1 so that the Perl5Substitution will work	WITHOUT_CLASSIFICATION	0.9999826383249591	WITHOUT_CLASSIFICATION	1.736167504081375E-5	DEFECT
// BSF uses a hashtable to store values // so cannot declareBean with a null value // So need to remove any bean of this name as // that bean should not be visible	WITHOUT_CLASSIFICATION	0.9999785351416592	WITHOUT_CLASSIFICATION	2.146485834069796E-5	DEFECT
// no permission here	WITHOUT_CLASSIFICATION	0.9999913123776942	WITHOUT_CLASSIFICATION	8.68762230584773E-6	DEFECT
// compute the compiler options based on the input options first	WITHOUT_CLASSIFICATION	0.999999895165995	WITHOUT_CLASSIFICATION	1.0483400497699412E-7	DEFECT
// treat non-matching groups as empty matches	WITHOUT_CLASSIFICATION	0.9999999329224144	WITHOUT_CLASSIFICATION	6.707758567668811E-8	DEFECT
// be strict about line separator	WITHOUT_CLASSIFICATION	0.9999999467385605	WITHOUT_CLASSIFICATION	5.326143958434233E-8	DEFECT
// translate \1 to $(1) so that the Matcher will work	WITHOUT_CLASSIFICATION	0.9999959056479766	WITHOUT_CLASSIFICATION	4.094352023471146E-6	DEFECT
// Do the substitution	WITHOUT_CLASSIFICATION	0.9999995884262347	WITHOUT_CLASSIFICATION	4.1157376532605223E-7	DEFECT
// replace \1 with the corresponding group	WITHOUT_CLASSIFICATION	0.9999929368432351	WITHOUT_CLASSIFICATION	7.063156765016479E-6	DEFECT
/*     * Used when sorting.  If too many long comparisons     * happen, we stop sorting, randomise the block     * slightly, and try again.     */	WITHOUT_CLASSIFICATION	0.9999997707859304	WITHOUT_CLASSIFICATION	2.2921406955708255E-7	DEFECT
/*          Nodes and heap entries run from 1.  Entry 0          for both the heap and nodes is a sentinel.        */	WITHOUT_CLASSIFICATION	0.9999995104543822	WITHOUT_CLASSIFICATION	4.895456177996416E-7	DEFECT
/*          Nodes and heap entries run from 1.  Entry 0          for both the heap and nodes is a sentinel.        */	WITHOUT_CLASSIFICATION	0.9999995104543822	WITHOUT_CLASSIFICATION	4.895456177996416E-7	DEFECT
//        blockNo++;	WITHOUT_CLASSIFICATION	0.9999985712491904	WITHOUT_CLASSIFICATION	1.428750809597584E-6	DEFECT
// // When we get here we have EITHER: // o An empty "assemble" buffer. // o No bytes to write (numToWrite == 0) //	WITHOUT_CLASSIFICATION	0.99999766523041	WITHOUT_CLASSIFICATION	2.3347695900796707E-6	DEFECT
/* Write `magic' bytes h indicating file-format == huffmanised,           followed by a digit indicating blockSize100k.        */	WITHOUT_CLASSIFICATION	0.9999999816294673	WITHOUT_CLASSIFICATION	1.8370532651090827E-8	DEFECT
//        ch = 0;	WITHOUT_CLASSIFICATION	0.9999997795734874	WITHOUT_CLASSIFICATION	2.2042651251114865E-7	DEFECT
/* 20 is just a paranoia constant */	WITHOUT_CLASSIFICATION	0.999997008337156	WITHOUT_CLASSIFICATION	2.9916628439460054E-6	DEFECT
// empty block at end of file	WITHOUT_CLASSIFICATION	0.999999119867154	WITHOUT_CLASSIFICATION	8.801328460693882E-7	DEFECT
/* sort the block and establish posn of original string */	WITHOUT_CLASSIFICATION	0.9999989000238636	WITHOUT_CLASSIFICATION	1.0999761362989633E-6	DEFECT
/* Now the block's CRC, so it is in a known place. */	WITHOUT_CLASSIFICATION	0.9999999589261179	WITHOUT_CLASSIFICATION	4.1073881960451294E-8	DEFECT
/* Now a single bit indicating randomisation. */	WITHOUT_CLASSIFICATION	0.9999847083654496	WITHOUT_CLASSIFICATION	1.529163455045604E-5	DEFECT
/* Finally, block's contents proper. */	WITHOUT_CLASSIFICATION	0.999989803434322	WITHOUT_CLASSIFICATION	1.0196565678108827E-5	DEFECT
/*          Now another magic 48-bit number, 0x177245385090, to          indicate the end of the last block.  (sqrt(pi), if          you want to know.  I did want to use e, but it contains          too much repetition -- 27 18 28 18 28 46 -- for me          to feel statistically comfortable.  Call me paranoid.)        */	WITHOUT_CLASSIFICATION	0.999999258696131	WITHOUT_CLASSIFICATION	7.413038689693747E-7	DEFECT
// write 8-bit	WITHOUT_CLASSIFICATION	0.9999995483801665	WITHOUT_CLASSIFICATION	4.5161983351970876E-7	DEFECT
// write 8-bit	WITHOUT_CLASSIFICATION	0.9999995483801665	WITHOUT_CLASSIFICATION	4.5161983351970876E-7	DEFECT
// write 8-bit	WITHOUT_CLASSIFICATION	0.9999995483801665	WITHOUT_CLASSIFICATION	4.5161983351970876E-7	DEFECT
// write 8-bit	WITHOUT_CLASSIFICATION	0.9999995483801665	WITHOUT_CLASSIFICATION	4.5161983351970876E-7	DEFECT
// write 8-bit	WITHOUT_CLASSIFICATION	0.9999995483801665	WITHOUT_CLASSIFICATION	4.5161983351970876E-7	DEFECT
// write 8-bit	WITHOUT_CLASSIFICATION	0.9999995483801665	WITHOUT_CLASSIFICATION	4.5161983351970876E-7	DEFECT
/* Decide how many coding tables to use */	WITHOUT_CLASSIFICATION	0.9997893865913605	WITHOUT_CLASSIFICATION	2.1061340863943746E-4	DEFECT
/* Generate an initial set of coding tables */	WITHOUT_CLASSIFICATION	0.9999998433552848	WITHOUT_CLASSIFICATION	1.566447153044972E-7	DEFECT
/*          Iterate up to N_ITERS times to improve the tables.        */	WITHOUT_CLASSIFICATION	0.9999999817071241	WITHOUT_CLASSIFICATION	1.8292875924363006E-8	DEFECT
/* Compute MTF values for the selectors. */	WITHOUT_CLASSIFICATION	0.9999999892054309	WITHOUT_CLASSIFICATION	1.0794569166927154E-8	DEFECT
/* Assign actual codes for the tables. */	WITHOUT_CLASSIFICATION	0.9999836960955256	WITHOUT_CLASSIFICATION	1.6303904474364545E-5	DEFECT
/* Transmit the mapping table. */	WITHOUT_CLASSIFICATION	0.9999995402842152	WITHOUT_CLASSIFICATION	4.5971578468188984E-7	DEFECT
/* Now the selectors. */	WITHOUT_CLASSIFICATION	0.9999997813426653	WITHOUT_CLASSIFICATION	2.1865733462421314E-7	DEFECT
/* Now the coding tables. */	WITHOUT_CLASSIFICATION	0.9999983791610632	WITHOUT_CLASSIFICATION	1.6208389368720492E-6	DEFECT
/* And finally, the block data proper */	WITHOUT_CLASSIFICATION	0.9996928184573939	WITHOUT_CLASSIFICATION	3.0718154260600756E-4	DEFECT
/* Set group start & end marks. */	WITHOUT_CLASSIFICATION	0.9999998663841598	WITHOUT_CLASSIFICATION	1.3361584025875686E-7	DEFECT
/*                  Calculate the cost of this group as coded                  by each of the coding tables.                */	WITHOUT_CLASSIFICATION	0.9999999968761017	WITHOUT_CLASSIFICATION	3.123898290685668E-9	DEFECT
// unrolled version of the else-block	WITHOUT_CLASSIFICATION	0.9999993899585081	WITHOUT_CLASSIFICATION	6.100414919286055E-7	DEFECT
/*                  Find the coding table which is best for this group,                  and record its identity in the selector table.                */	WITHOUT_CLASSIFICATION	0.9999998269443758	WITHOUT_CLASSIFICATION	1.7305562418981534E-7	DEFECT
/*                  Increment the symbol frequencies for the selected table.                */	WITHOUT_CLASSIFICATION	0.9999999512083525	WITHOUT_CLASSIFICATION	4.87916474304451E-8	DEFECT
/*              Recompute the tables based on the accumulated frequencies.            */	WITHOUT_CLASSIFICATION	0.999999821983726	WITHOUT_CLASSIFICATION	1.7801627401918308E-7	DEFECT
// inlined: bsW(1, inUse[i16 + j] ? 1 : 0);	WITHOUT_CLASSIFICATION	0.9999998803186813	WITHOUT_CLASSIFICATION	1.1968131875470438E-7	DEFECT
// inlined: bsW(1, 1);	WITHOUT_CLASSIFICATION	0.999994536291398	WITHOUT_CLASSIFICATION	5.463708602058217E-6	DEFECT
// inlined: bsW(1, 0);	WITHOUT_CLASSIFICATION	0.9999971567917046	WITHOUT_CLASSIFICATION	2.843208295300849E-6	DEFECT
// inlined: bsW(1, 0);	WITHOUT_CLASSIFICATION	0.9999971567917046	WITHOUT_CLASSIFICATION	2.843208295300849E-6	DEFECT
//bsBuffShadow |= 0 << (32 - bsLiveShadow - 1);	WITHOUT_CLASSIFICATION	0.9999977201063274	WITHOUT_CLASSIFICATION	2.27989367270658E-6	DEFECT
// inlined: bsW(5, curr);	WITHOUT_CLASSIFICATION	0.9999977677078762	WITHOUT_CLASSIFICATION	2.232292123943858E-6	DEFECT
// inlined: bsW(2, 2);	WITHOUT_CLASSIFICATION	0.9999957609435131	WITHOUT_CLASSIFICATION	4.239056486896934E-6	DEFECT
/* 10 */	WITHOUT_CLASSIFICATION	0.9999909117051552	WITHOUT_CLASSIFICATION	9.088294844724379E-6	DEFECT
// inlined: bsW(2, 3);	WITHOUT_CLASSIFICATION	0.9999941269354132	WITHOUT_CLASSIFICATION	5.873064586760075E-6	DEFECT
/* 11 */	WITHOUT_CLASSIFICATION	0.9999935184475764	WITHOUT_CLASSIFICATION	6.481552423582989E-6	DEFECT
// copy	WITHOUT_CLASSIFICATION	0.9999927713199868	WITHOUT_CLASSIFICATION	7.228680013234071E-6	DEFECT
// start inline mainGTU	WITHOUT_CLASSIFICATION	0.9999998904291747	WITHOUT_CLASSIFICATION	1.0957082536978037E-7	DEFECT
// following could be done in a loop, but // unrolled it for performance:	WITHOUT_CLASSIFICATION	0.9999994828917593	WITHOUT_CLASSIFICATION	5.171082406216665E-7	DEFECT
// while x > 0	WITHOUT_CLASSIFICATION	0.9999997856853355	WITHOUT_CLASSIFICATION	2.143146644677642E-7	DEFECT
// Set up the 2-byte frequency table	WITHOUT_CLASSIFICATION	0.9999999330339993	WITHOUT_CLASSIFICATION	6.696600075985137E-8	DEFECT
/*          In the various block-sized structures, live data runs          from 0 to last+NUM_OVERSHOOT_BYTES inclusive.  First,          set up the overshoot area for block.        */	WITHOUT_CLASSIFICATION	0.9999999999063884	WITHOUT_CLASSIFICATION	9.361147157225284E-11	DEFECT
// Complete the initial radix sort:	WITHOUT_CLASSIFICATION	0.9999999184615528	WITHOUT_CLASSIFICATION	8.153844725667521E-8	DEFECT
/*              Now ftab contains the first loc of every small bucket.              Calculate the running order, from smallest to largest              big bucket.        */	WITHOUT_CLASSIFICATION	0.9999999980267497	WITHOUT_CLASSIFICATION	1.9732503865989545E-9	DEFECT
/*              The main sorting loop.        */	WITHOUT_CLASSIFICATION	0.9999999228136005	WITHOUT_CLASSIFICATION	7.718639950860456E-8	DEFECT
/*                  Process big buckets, starting with the least full.            */	WITHOUT_CLASSIFICATION	0.999999566383215	WITHOUT_CLASSIFICATION	4.3361678499895516E-7	DEFECT
// Step 1:	WITHOUT_CLASSIFICATION	0.9999986016448889	WITHOUT_CLASSIFICATION	1.3983551111109265E-6	DEFECT
// Step 3:	WITHOUT_CLASSIFICATION	0.9999983892817867	WITHOUT_CLASSIFICATION	1.6107182132745693E-6	DEFECT
// handle 16 bit signed numbers	WITHOUT_CLASSIFICATION	0.9999999857719258	WITHOUT_CLASSIFICATION	1.4228074182317864E-8	DEFECT
// make maps	WITHOUT_CLASSIFICATION	0.9999982476831285	WITHOUT_CLASSIFICATION	1.7523168714410742E-6	DEFECT
/* directory with respect to       */	WITHOUT_CLASSIFICATION	0.9999910325412219	WITHOUT_CLASSIFICATION	8.967458778051714E-6	DEFECT
// with blockSize 900k //     256 byte //     256 byte //    1032 byte //   18002 byte //   18002 byte	WITHOUT_CLASSIFICATION	0.9999862698032902	WITHOUT_CLASSIFICATION	1.3730196709838758E-5	DEFECT
//     256 byte //    1548 byte //    6192 byte //      24 byte //      12 byte //    6192 byte //       6 byte //      16 byte	WITHOUT_CLASSIFICATION	0.9999864680441702	WITHOUT_CLASSIFICATION	1.3531955829726808E-5	DEFECT
//    4000 byte //    4000 byte //    4000 byte	WITHOUT_CLASSIFICATION	0.999995365712545	WITHOUT_CLASSIFICATION	4.634287455004917E-6	DEFECT
//    1024 byte //    1024 byte //     256 byte	WITHOUT_CLASSIFICATION	0.9999964103239252	WITHOUT_CLASSIFICATION	3.5896760747345617E-6	DEFECT
//    1040 byte //    2064 byte //    2064 byte	WITHOUT_CLASSIFICATION	0.9999939246320767	WITHOUT_CLASSIFICATION	6.07536792322433E-6	DEFECT
//  262148 byte // ------------ //  333408 byte	WITHOUT_CLASSIFICATION	0.9999964379277012	WITHOUT_CLASSIFICATION	3.5620722987670733E-6	DEFECT
// Just print a message, like the previous versions of this class did	WITHOUT_CLASSIFICATION	0.9999926606391073	WITHOUT_CLASSIFICATION	7.339360892758188E-6	DEFECT
// Variables used by setup* methods exclusively	WITHOUT_CLASSIFICATION	0.9999999922209761	WITHOUT_CLASSIFICATION	7.77902385049938E-9	DEFECT
// currBlockNo++;	WITHOUT_CLASSIFICATION	0.9999985681197028	WITHOUT_CLASSIFICATION	1.431880297229969E-6	DEFECT
// A bad CRC is considered a fatal error.	WITHOUT_CLASSIFICATION	0.9995502187410114	WITHOUT_CLASSIFICATION	4.4978125898852324E-4	DEFECT
/* Receive the mapping table */	WITHOUT_CLASSIFICATION	0.9999934023009807	WITHOUT_CLASSIFICATION	6.597699019416166E-6	DEFECT
/* Now the selectors */	WITHOUT_CLASSIFICATION	0.9999988967658432	WITHOUT_CLASSIFICATION	1.103234156747942E-6	DEFECT
/* Undo the MTF values for the selectors. */	WITHOUT_CLASSIFICATION	0.999999925186981	WITHOUT_CLASSIFICATION	7.481301898853747E-8	DEFECT
// nearly all times v is zero, 4 in most other cases	WITHOUT_CLASSIFICATION	0.9999957657297276	WITHOUT_CLASSIFICATION	4.234270272496873E-6	DEFECT
/* Now the coding tables */	WITHOUT_CLASSIFICATION	0.9999862197684434	WITHOUT_CLASSIFICATION	1.3780231556555345E-5	DEFECT
// finally create the Huffman tables	WITHOUT_CLASSIFICATION	0.9999998286913354	WITHOUT_CLASSIFICATION	1.7130866458149454E-7	DEFECT
// end of file // '1' // ')' // 'Y' // '&' // 'S' // 'Y'	WITHOUT_CLASSIFICATION	0.9999947627802983	WITHOUT_CLASSIFICATION	5.23721970172368E-6	DEFECT
// Inlined: // int zvec = bsR(zn);	WITHOUT_CLASSIFICATION	0.9999986791062145	WITHOUT_CLASSIFICATION	1.3208937855364555E-6	DEFECT
// Inlined: // int zvec = bsR(zn);	WITHOUT_CLASSIFICATION	0.9999986791062145	WITHOUT_CLASSIFICATION	1.3208937855364555E-6	DEFECT
/*                  This loop is hammered during decompression,                  hence avoid native method call overhead of                  System.arraycopy for very small ranges to copy.                */	WITHOUT_CLASSIFICATION	0.9999605274393543	WITHOUT_CLASSIFICATION	3.947256064577465E-5	DEFECT
/* not a char and not EOF */	WITHOUT_CLASSIFICATION	0.9999986058528508	WITHOUT_CLASSIFICATION	1.3941471491759543E-6	DEFECT
// (with blockSize 900k) //      256 byte	WITHOUT_CLASSIFICATION	0.9999576421085082	WITHOUT_CLASSIFICATION	4.235789149179244E-5	DEFECT
//     1024 byte	WITHOUT_CLASSIFICATION	0.9999977569625225	WITHOUT_CLASSIFICATION	2.243037477509187E-6	DEFECT
// No need to keep track of Bcc'd addresses	WITHOUT_CLASSIFICATION	0.9999996083234286	WITHOUT_CLASSIFICATION	3.9167657136132485E-7	DEFECT
// Blindly trust the user doesn't set any invalid headers	WITHOUT_CLASSIFICATION	0.9999954709805021	WITHOUT_CLASSIFICATION	4.529019497955947E-6	DEFECT
// RFC 822 s4.1: "Reply-To:" header is optional	WITHOUT_CLASSIFICATION	0.9999787386789739	WITHOUT_CLASSIFICATION	2.1261321026061107E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999996763950936	WITHOUT_CLASSIFICATION	3.2360490638735057E-7	DEFECT
// Mac does \n\r, but that's tough to distinguish from Windows \r\n\r\n. // Don't tackle that problem right now.	WITHOUT_CLASSIFICATION	0.9993906303199376	WITHOUT_CLASSIFICATION	6.093696800624086E-4	DEFECT
// support "address (name)"	WITHOUT_CLASSIFICATION	0.9999996317296865	WITHOUT_CLASSIFICATION	3.682703133773526E-7	DEFECT
// support "(name) address"	WITHOUT_CLASSIFICATION	0.9999995500845149	WITHOUT_CLASSIFICATION	4.499154850353618E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999998952218317	WITHOUT_CLASSIFICATION	1.0477816833988038E-7	DEFECT
//      256 byte //    18002 byte //    18002 byte	WITHOUT_CLASSIFICATION	0.9999933831660163	WITHOUT_CLASSIFICATION	6.616833983725367E-6	DEFECT
//     6192 byte //     6192 byte //     6192 byte //       24 byte	WITHOUT_CLASSIFICATION	0.9999932666903741	WITHOUT_CLASSIFICATION	6.733309625765055E-6	DEFECT
//     1028 byte //      512 byte //     3096 byte //        6 byte //--------------- //    60798 byte	WITHOUT_CLASSIFICATION	0.9999862711306144	WITHOUT_CLASSIFICATION	1.3728869385622866E-5	DEFECT
//  3600000 byte //   900000 byte //--------------- //  4560782 byte //===============	WITHOUT_CLASSIFICATION	0.9999855868855638	WITHOUT_CLASSIFICATION	1.4413114436188782E-5	DEFECT
// RFC 822 s4.1: "From:" header must be sent // We rely on error checking by the MTA	WITHOUT_CLASSIFICATION	0.9994198988527879	WITHOUT_CLASSIFICATION	5.801011472121786E-4	DEFECT
// RFC 822 s4.1: //   "Header fields are NOT required to occur in any particular order, //    except that the message body MUST occur AFTER the headers" // (the same section specifies a reccommended order, which we ignore)	WITHOUT_CLASSIFICATION	0.9999995880578879	WITHOUT_CLASSIFICATION	4.119421120866907E-7	DEFECT
// Make a limited attempt to extract a sanitized email address // Prefer text in <brackets>, ignore anything in (parentheses)	WITHOUT_CLASSIFICATION	0.9999718835826659	WITHOUT_CLASSIFICATION	2.8116417334197866E-5	DEFECT
// * * * * * Raw protocol methods below here * * * * *	WITHOUT_CLASSIFICATION	0.999996475052596	WITHOUT_CLASSIFICATION	3.524947403886933E-6	DEFECT
// make sure dot is on new line	WITHOUT_CLASSIFICATION	0.9999772690676803	WITHOUT_CLASSIFICATION	2.2730932319763625E-5	DEFECT
// raw supports <CRLF>.<CRLF>	WITHOUT_CLASSIFICATION	0.9999997771762998	WITHOUT_CLASSIFICATION	2.2282370018045034E-7	DEFECT
// Check that the response is one of the valid codes	WITHOUT_CLASSIFICATION	0.9999992971623629	WITHOUT_CLASSIFICATION	7.028376370711732E-7	DEFECT
// deprecated, but email is byte-oriented	WITHOUT_CLASSIFICATION	0.9999866049310692	WITHOUT_CLASSIFICATION	1.3395068930945166E-5	DEFECT
// ensure always \r\n	WITHOUT_CLASSIFICATION	0.9999996532756743	WITHOUT_CLASSIFICATION	3.467243257482811E-7	DEFECT
// Mac does \n\r, but that's tough to distinguish from Windows \r\n\r\n. // Don't tackle that problem right now.	WITHOUT_CLASSIFICATION	0.9993906303199376	WITHOUT_CLASSIFICATION	6.093696800624086E-4	DEFECT
// add extra dot	WITHOUT_CLASSIFICATION	0.9999993884172448	WITHOUT_CLASSIFICATION	6.115827551804083E-7	DEFECT
// add extra dot	WITHOUT_CLASSIFICATION	0.9999993884172448	WITHOUT_CLASSIFICATION	6.115827551804083E-7	DEFECT
// ensure always \r\n	WITHOUT_CLASSIFICATION	0.9999996532756743	WITHOUT_CLASSIFICATION	3.467243257482811E-7	DEFECT
// UNDONE	WITHOUT_CLASSIFICATION	0.999998596523365	WITHOUT_CLASSIFICATION	1.4034766349577342E-6	DEFECT
// create a TarEntry for the LongLink, the contents // of which are the entry's name	WITHOUT_CLASSIFICATION	0.9999999968738218	WITHOUT_CLASSIFICATION	3.1261781285152346E-9	DEFECT
// Strip off drive letters! // REVIEW Would a better check be "(File.separator == '\')"?	WITHOUT_CLASSIFICATION	0.9999999832762334	WITHOUT_CLASSIFICATION	1.6723766575952705E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999998952218317	WITHOUT_CLASSIFICATION	1.0477816833988038E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999998952218317	WITHOUT_CLASSIFICATION	1.0477816833988038E-7	DEFECT
// No absolute pathnames // Windows (and Posix?) paths can start with "\\NetworkDrive\", // so we loop on starting /'s.	WITHOUT_CLASSIFICATION	0.9999998082080958	WITHOUT_CLASSIFICATION	1.9179190412755106E-7	DEFECT
/* start of the central directory  */	WITHOUT_CLASSIFICATION	0.9999999521327534	WITHOUT_CLASSIFICATION	4.786724656406984E-8	DEFECT
// REVIEW // This is horribly inefficient, but it ensures that we // properly skip over bytes via the TarBuffer... //	WITHOUT_CLASSIFICATION	0.9999969814213591	WITHOUT_CLASSIFICATION	3.0185786408869157E-6	DEFECT
// read in the name	WITHOUT_CLASSIFICATION	0.9999991786728781	WITHOUT_CLASSIFICATION	8.213271218734227E-7	DEFECT
// remove trailing null terminator	WITHOUT_CLASSIFICATION	0.9999919581433914	WITHOUT_CLASSIFICATION	8.041856608593272E-6	DEFECT
// Unexpected EOF!	WITHOUT_CLASSIFICATION	0.9999991777735833	WITHOUT_CLASSIFICATION	8.22226416751393E-7	DEFECT
// ---------------------------------------------------------- // somewhat arbitrary choices that are quite common for shared // installations // -----------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999975259826006	WITHOUT_CLASSIFICATION	2.4740173993121457E-6	DEFECT
/* method is STORED and we used RandomAccessFile */	WITHOUT_CLASSIFICATION	0.9999983941348841	WITHOUT_CLASSIFICATION	1.6058651158760857E-6	DEFECT
// If random access output, write the local file header containing // the correct CRC and compressed/uncompressed sizes	WITHOUT_CLASSIFICATION	0.9999997136319895	WITHOUT_CLASSIFICATION	2.863680105103392E-7	DEFECT
// not specified	WITHOUT_CLASSIFICATION	0.9999997590220713	WITHOUT_CLASSIFICATION	2.409779287544603E-7	DEFECT
// not specified	WITHOUT_CLASSIFICATION	0.9999997590220713	WITHOUT_CLASSIFICATION	2.409779287544603E-7	DEFECT
// Size/CRC not required if RandomAccessFile is used	WITHOUT_CLASSIFICATION	0.9999974999565951	WITHOUT_CLASSIFICATION	2.5000434048609396E-6	DEFECT
/*     * Various ZIP constants     */	WITHOUT_CLASSIFICATION	0.9999995886709192	WITHOUT_CLASSIFICATION	4.1132908078243055E-7	DEFECT
//store method in local variable to prevent multiple method calls	WITHOUT_CLASSIFICATION	0.9999996809512086	WITHOUT_CLASSIFICATION	3.1904879133900524E-7	DEFECT
// bit3 set to signal, we use a data descriptor	WITHOUT_CLASSIFICATION	0.999999552471678	WITHOUT_CLASSIFICATION	4.4752832190671254E-7	DEFECT
// bit3 set to signal, we use a data descriptor	WITHOUT_CLASSIFICATION	0.999999552471678	WITHOUT_CLASSIFICATION	4.4752832190671254E-7	DEFECT
// compression method	WITHOUT_CLASSIFICATION	0.9999932241110555	WITHOUT_CLASSIFICATION	6.7758889445530205E-6	DEFECT
// compression method	WITHOUT_CLASSIFICATION	0.9999932241110555	WITHOUT_CLASSIFICATION	6.7758889445530205E-6	DEFECT
// last mod. time and date	WITHOUT_CLASSIFICATION	0.9999983729170592	WITHOUT_CLASSIFICATION	1.6270829408948643E-6	DEFECT
// file name length	WITHOUT_CLASSIFICATION	0.9999993175294426	WITHOUT_CLASSIFICATION	6.824705572955095E-7	DEFECT
// extra field length	WITHOUT_CLASSIFICATION	0.9999995495420155	WITHOUT_CLASSIFICATION	4.5045798451717944E-7	DEFECT
// file name	WITHOUT_CLASSIFICATION	0.9999995805203781	WITHOUT_CLASSIFICATION	4.1947962191871385E-7	DEFECT
// extra field	WITHOUT_CLASSIFICATION	0.9999995516447394	WITHOUT_CLASSIFICATION	4.4835526065105074E-7	DEFECT
// version made by	WITHOUT_CLASSIFICATION	0.9999991483563466	WITHOUT_CLASSIFICATION	8.516436532934785E-7	DEFECT
// version needed to extract // general purpose bit flag	WITHOUT_CLASSIFICATION	0.9999989620926919	WITHOUT_CLASSIFICATION	1.0379073080933668E-6	DEFECT
// last mod. time and date	WITHOUT_CLASSIFICATION	0.9999983729170592	WITHOUT_CLASSIFICATION	1.6270829408948643E-6	DEFECT
// requires version 2 as we are going to store length info // in the data descriptor	WITHOUT_CLASSIFICATION	0.9999911915018062	WITHOUT_CLASSIFICATION	8.808498193779351E-6	DEFECT
// file name length	WITHOUT_CLASSIFICATION	0.9999993175294426	WITHOUT_CLASSIFICATION	6.824705572955095E-7	DEFECT
// CRC // compressed length // uncompressed length	WITHOUT_CLASSIFICATION	0.9999998728989838	WITHOUT_CLASSIFICATION	1.2710101621722652E-7	DEFECT
// extra field length	WITHOUT_CLASSIFICATION	0.9999995495420155	WITHOUT_CLASSIFICATION	4.5045798451717944E-7	DEFECT
// file name	WITHOUT_CLASSIFICATION	0.9999995805203781	WITHOUT_CLASSIFICATION	4.1947962191871385E-7	DEFECT
// extra field	WITHOUT_CLASSIFICATION	0.9999995516447394	WITHOUT_CLASSIFICATION	4.4835526065105074E-7	DEFECT
// file comment length	WITHOUT_CLASSIFICATION	0.9999879042788258	WITHOUT_CLASSIFICATION	1.20957211741523E-5	DEFECT
// disk number start	WITHOUT_CLASSIFICATION	0.9999988915672162	WITHOUT_CLASSIFICATION	1.1084327838018305E-6	DEFECT
// internal file attributes	WITHOUT_CLASSIFICATION	0.9999999640042077	WITHOUT_CLASSIFICATION	3.599579230912009E-8	DEFECT
// external file attributes	WITHOUT_CLASSIFICATION	0.9999999380052179	WITHOUT_CLASSIFICATION	6.199478198842178E-8	DEFECT
// relative offset of LFH	WITHOUT_CLASSIFICATION	0.9999999908615166	WITHOUT_CLASSIFICATION	9.138483449156655E-9	DEFECT
// disk numbers	WITHOUT_CLASSIFICATION	0.9999995051285832	WITHOUT_CLASSIFICATION	4.948714168650265E-7	DEFECT
// number of entries	WITHOUT_CLASSIFICATION	0.9999999519200067	WITHOUT_CLASSIFICATION	4.8079993236465135E-8	DEFECT
// length and location of CD	WITHOUT_CLASSIFICATION	0.9999973474174535	WITHOUT_CLASSIFICATION	2.65258254642777E-6	DEFECT
// ZIP file comment	WITHOUT_CLASSIFICATION	0.9999879557172107	WITHOUT_CLASSIFICATION	1.2044282789365023E-5	DEFECT
// array not exhausted	WITHOUT_CLASSIFICATION	0.9999988261740321	WITHOUT_CLASSIFICATION	1.1738259678532626E-6	DEFECT
/* version made by                 */	WITHOUT_CLASSIFICATION	0.9999977230312046	WITHOUT_CLASSIFICATION	2.2769687954281217E-6	DEFECT
/* version needed to extract       */	WITHOUT_CLASSIFICATION	0.9999986251672889	WITHOUT_CLASSIFICATION	1.3748327111797157E-6	DEFECT
/* general purpose bit flag        */	WITHOUT_CLASSIFICATION	0.9999987250063843	WITHOUT_CLASSIFICATION	1.2749936156972467E-6	DEFECT
/* compression method              */	WITHOUT_CLASSIFICATION	0.9999970117858428	WITHOUT_CLASSIFICATION	2.9882141573388454E-6	DEFECT
/* last mod file time              */	WITHOUT_CLASSIFICATION	0.9999979814066152	WITHOUT_CLASSIFICATION	2.0185933848964423E-6	DEFECT
/* last mod file date              */	WITHOUT_CLASSIFICATION	0.9999982277548266	WITHOUT_CLASSIFICATION	1.7722451733400592E-6	DEFECT
/* crc-32                          */	WITHOUT_CLASSIFICATION	0.9999972056048426	WITHOUT_CLASSIFICATION	2.794395157338083E-6	DEFECT
/* uncompressed size               */	WITHOUT_CLASSIFICATION	0.9999989421142466	WITHOUT_CLASSIFICATION	1.0578857534324406E-6	DEFECT
/* filename length                 */	WITHOUT_CLASSIFICATION	0.9999968834638573	WITHOUT_CLASSIFICATION	3.1165361428118368E-6	DEFECT
/* extra field length              */	WITHOUT_CLASSIFICATION	0.9999989260144401	WITHOUT_CLASSIFICATION	1.073985559957431E-6	DEFECT
/* file comment length             */	WITHOUT_CLASSIFICATION	0.999946798501169	WITHOUT_CLASSIFICATION	5.320149883088017E-5	DEFECT
/* internal file attributes        */	WITHOUT_CLASSIFICATION	0.9999998475210773	WITHOUT_CLASSIFICATION	1.5247892257816813E-7	DEFECT
/* external file attributes        */	WITHOUT_CLASSIFICATION	0.9999996860257974	WITHOUT_CLASSIFICATION	3.1397420262303667E-7	DEFECT
/* relative offset of local header */	WITHOUT_CLASSIFICATION	0.9999999572694915	WITHOUT_CLASSIFICATION	4.273050858118396E-8	DEFECT
// disk number	WITHOUT_CLASSIFICATION	0.9999992766302238	WITHOUT_CLASSIFICATION	7.233697762118905E-7	DEFECT
// LFH offset,	WITHOUT_CLASSIFICATION	0.9999995848283377	WITHOUT_CLASSIFICATION	4.1517166219531036E-7	DEFECT
// data offset will be filled later	WITHOUT_CLASSIFICATION	0.9999981868862446	WITHOUT_CLASSIFICATION	1.813113755333491E-6	DEFECT
/* end of central dir signature    */	WITHOUT_CLASSIFICATION	0.9999995225173003	WITHOUT_CLASSIFICATION	4.77482699699353E-7	DEFECT
/* number of this disk             */	WITHOUT_CLASSIFICATION	0.9999865802884337	WITHOUT_CLASSIFICATION	1.3419711566376738E-5	DEFECT
/* number of the disk with the     */	WITHOUT_CLASSIFICATION	0.9999986634123407	WITHOUT_CLASSIFICATION	1.3365876593372104E-6	DEFECT
/* start of the central directory  */	WITHOUT_CLASSIFICATION	0.9999999521327534	WITHOUT_CLASSIFICATION	4.786724656406984E-8	DEFECT
/* the central dir on this disk    */	WITHOUT_CLASSIFICATION	0.9999911532550917	WITHOUT_CLASSIFICATION	8.846744908351399E-6	DEFECT
/* the central dir                 */	WITHOUT_CLASSIFICATION	0.9999995166934352	WITHOUT_CLASSIFICATION	4.833065647444212E-7	DEFECT
/* size of the central directory   */	WITHOUT_CLASSIFICATION	0.9999996487507168	WITHOUT_CLASSIFICATION	3.5124928310831277E-7	DEFECT
/* offset of start of central      */	WITHOUT_CLASSIFICATION	0.9999999909150361	WITHOUT_CLASSIFICATION	9.08496401310014E-9	DEFECT
// empty	WITHOUT_CLASSIFICATION	0.9999983084942884	WITHOUT_CLASSIFICATION	1.6915057116291654E-6	DEFECT
// wait 2 second extras // the test failed with 100 ms of margin on cvs.apache.org on August 1st, 2003	WITHOUT_CLASSIFICATION	0.9995481911872304	WITHOUT_CLASSIFICATION	4.518088127696679E-4	DEFECT
// dummy1 --> dummy2 --> dummy3 // (which holds a glob mapper from "*.java" to "*.class"	WITHOUT_CLASSIFICATION	0.9999996963710807	WITHOUT_CLASSIFICATION	3.036289193362302E-7	DEFECT
// // *****  initialize test environment (called "bed")  ***** //	WITHOUT_CLASSIFICATION	0.999999993433561	WITHOUT_CLASSIFICATION	6.566438928339464E-9	DEFECT
// THIS WILL FAIL. //compareBytes("abc", "utf-16");	WITHOUT_CLASSIFICATION	0.9999984005582495	WITHOUT_CLASSIFICATION	1.5994417504668347E-6	DEFECT
//catch script/ant mismatch with a meaningful message //we could ignore it, but there are likely to be other //version problems, so we stamp down on the configuration now	WITHOUT_CLASSIFICATION	0.9999999799252002	WITHOUT_CLASSIFICATION	2.0074799853881217E-8	DEFECT
//if there were no main targets, we list all subtargets //as it means nothing has a description	WITHOUT_CLASSIFICATION	0.9999994556899243	WITHOUT_CLASSIFICATION	5.44310075646575E-7	DEFECT
// For NetWare, use the boolean=true mode, so we can use delimiter // information to make a better decision later.	WITHOUT_CLASSIFICATION	0.9999999989875654	WITHOUT_CLASSIFICATION	1.0124346592550602E-9	DEFECT
// we are on NetWare, tokenizing is handled a little differently, // due to the fact that NetWare has multiple-character volume names.	WITHOUT_CLASSIFICATION	0.9999999104017839	WITHOUT_CLASSIFICATION	8.959821609201402E-8	DEFECT
// The readers return -1 if they end. So simply read the "prepend" // after that the "content" and at the end the "append" file.	WITHOUT_CLASSIFICATION	0.9999999613852087	WITHOUT_CLASSIFICATION	3.861479116840299E-8	DEFECT
// NB: this makes use of Project#setProperty rather than Project#setNewProperty //     due to backwards compatiblity reasons	WITHOUT_CLASSIFICATION	0.9999850825280401	WITHOUT_CLASSIFICATION	1.4917471959984835E-5	DEFECT
// If we've been successful on an update, delete the // temporary file	WITHOUT_CLASSIFICATION	0.9999999998511254	WITHOUT_CLASSIFICATION	1.4887449757279634E-10	DEFECT
// CheckStyle - magic numbers // checking for "X:\ 0=dquote,1=letter,2=:,3=\	WITHOUT_CLASSIFICATION	0.9999999427328028	WITHOUT_CLASSIFICATION	5.72671972893275E-8	DEFECT
/* version needed to extract       */	WITHOUT_CLASSIFICATION	0.9999986251672889	WITHOUT_CLASSIFICATION	1.3748327111797157E-6	DEFECT
/* general purpose bit flag        */	WITHOUT_CLASSIFICATION	0.9999987250063843	WITHOUT_CLASSIFICATION	1.2749936156972467E-6	DEFECT
/* compression method              */	WITHOUT_CLASSIFICATION	0.9999970117858428	WITHOUT_CLASSIFICATION	2.9882141573388454E-6	DEFECT
/* last mod file time              */	WITHOUT_CLASSIFICATION	0.9999979814066152	WITHOUT_CLASSIFICATION	2.0185933848964423E-6	DEFECT
/* last mod file date              */	WITHOUT_CLASSIFICATION	0.9999982277548266	WITHOUT_CLASSIFICATION	1.7722451733400592E-6	DEFECT
/* crc-32                          */	WITHOUT_CLASSIFICATION	0.9999972056048426	WITHOUT_CLASSIFICATION	2.794395157338083E-6	DEFECT
/* compressed size                 */	WITHOUT_CLASSIFICATION	0.9999986393439003	WITHOUT_CLASSIFICATION	1.3606560996623377E-6	DEFECT
/* uncompressed size               */	WITHOUT_CLASSIFICATION	0.9999989421142466	WITHOUT_CLASSIFICATION	1.0578857534324406E-6	DEFECT
/* end of central dir signature    */	WITHOUT_CLASSIFICATION	0.9999995225173003	WITHOUT_CLASSIFICATION	4.77482699699353E-7	DEFECT
/* number of this disk             */	WITHOUT_CLASSIFICATION	0.9999865802884337	WITHOUT_CLASSIFICATION	1.3419711566376738E-5	DEFECT
/* number of the disk with the     */	WITHOUT_CLASSIFICATION	0.9999986634123407	WITHOUT_CLASSIFICATION	1.3365876593372104E-6	DEFECT
/* total number of entries in      */	WITHOUT_CLASSIFICATION	0.9999960724176293	WITHOUT_CLASSIFICATION	3.927582370639863E-6	DEFECT
/* total number of entries in      */	WITHOUT_CLASSIFICATION	0.9999960724176293	WITHOUT_CLASSIFICATION	3.927582370639863E-6	DEFECT
/* the central dir on this disk    */	WITHOUT_CLASSIFICATION	0.9999911532550917	WITHOUT_CLASSIFICATION	8.846744908351399E-6	DEFECT
/* the central dir                 */	WITHOUT_CLASSIFICATION	0.9999995166934352	WITHOUT_CLASSIFICATION	4.833065647444212E-7	DEFECT
/* size of the central directory   */	WITHOUT_CLASSIFICATION	0.9999996487507168	WITHOUT_CLASSIFICATION	3.5124928310831277E-7	DEFECT
/* the starting disk number        */	WITHOUT_CLASSIFICATION	0.9999987794959764	WITHOUT_CLASSIFICATION	1.2205040235964117E-6	DEFECT
/* zipfile comment length          */	WITHOUT_CLASSIFICATION	0.999983854108232	WITHOUT_CLASSIFICATION	1.614589176792246E-5	DEFECT
/* local file header signature     */	WITHOUT_CLASSIFICATION	0.9999974022333553	WITHOUT_CLASSIFICATION	2.5977666446349076E-6	DEFECT
/*     * Converts DOS time to Java time (number of milliseconds since epoch).     */	WITHOUT_CLASSIFICATION	0.9999998029244468	WITHOUT_CLASSIFICATION	1.9707555311420599E-7	DEFECT
// CRC will be added later	WITHOUT_CLASSIFICATION	0.99999844793738	WITHOUT_CLASSIFICATION	1.5520626199327344E-6	DEFECT
/*<ZipExtraField>*/	WITHOUT_CLASSIFICATION	0.9999970466489049	WITHOUT_CLASSIFICATION	2.9533510951774993E-6	DEFECT
// initializes extra data to an empty byte array	WITHOUT_CLASSIFICATION	0.9999993496976688	WITHOUT_CLASSIFICATION	6.503023311897337E-7	DEFECT
// MS-DOS read-only attribute	WITHOUT_CLASSIFICATION	0.9999968339642645	WITHOUT_CLASSIFICATION	3.166035735606895E-6	DEFECT
// MS-DOS directory flag	WITHOUT_CLASSIFICATION	0.9998709434503884	WITHOUT_CLASSIFICATION	1.2905654961165112E-4	DEFECT
// A "location" attribute for a node within a // Path object.	WITHOUT_CLASSIFICATION	0.9999986625959936	WITHOUT_CLASSIFICATION	1.3374040063756037E-6	DEFECT
// Just use the same directory as the file itself. // This directory will exist	WITHOUT_CLASSIFICATION	0.9999994380517413	WITHOUT_CLASSIFICATION	5.619482587435742E-7	DEFECT
// JarIndex is sorting the directories by ascending order. // it has no value but cosmetic since it will be read into a // hashtable by the classloader, but we'll do so anyway.	WITHOUT_CLASSIFICATION	0.9999997974608571	WITHOUT_CLASSIFICATION	2.0253914288585265E-7	DEFECT
// // Static //	WITHOUT_CLASSIFICATION	0.9999999547632884	WITHOUT_CLASSIFICATION	4.5236711480352875E-8	DEFECT
//we mark the file to be deleted on exit. //the alternative would be to cache the filename and delete //after execution finished, which is much better for long-lived runtimes //though spawning complicates things...	WITHOUT_CLASSIFICATION	0.9998223576291807	WITHOUT_CLASSIFICATION	1.776423708192929E-4	DEFECT
// Protected first so if any GUI tool offers a default // based on enum #0, it will be right.	WITHOUT_CLASSIFICATION	0.9999999660447337	WITHOUT_CLASSIFICATION	3.395526627708565E-8	DEFECT
// CheckStyle:VisibilityModifier OFF - bc // the source file // the destination file // the destination directory	WITHOUT_CLASSIFICATION	0.9999999989176553	WITHOUT_CLASSIFICATION	1.0823446987237131E-9	DEFECT
// add dest dir to classpath so that previously compiled and // untouched classes are on classpath	WITHOUT_CLASSIFICATION	0.9999999684554544	WITHOUT_CLASSIFICATION	3.154454560757489E-8	DEFECT
// build the command line from what we got the format is // cleartool checkout [options...] [viewpath ...] // as specified in the CLEARTOOL.EXE help	WITHOUT_CLASSIFICATION	0.9999999584371887	WITHOUT_CLASSIFICATION	4.156281124523638E-8	DEFECT
// build the command line from what we got. the format is // cleartool mkelem [options...] [viewpath ...] // as specified in the CLEARTOOL.EXE help	WITHOUT_CLASSIFICATION	0.9999994559660326	WITHOUT_CLASSIFICATION	5.440339673562697E-7	DEFECT
// build the command line from what we got. the format is // cleartool mklabel [options...] [viewpath ...] // as specified in the CLEARTOOL help	WITHOUT_CLASSIFICATION	0.9999999315766602	WITHOUT_CLASSIFICATION	6.842333973402807E-8	DEFECT
// push the current iterator onto the stack and then // iterate through this directory.	WITHOUT_CLASSIFICATION	0.999990065898599	WITHOUT_CLASSIFICATION	9.934101400973459E-6	DEFECT
// List of EJBs found in XML // One item within the Map // Is doc iAS or EJB descriptor	WITHOUT_CLASSIFICATION	0.9999999662174781	WITHOUT_CLASSIFICATION	3.378252188556179E-8	DEFECT
// baseNameTerminator not found: the descriptor use the // JOnAS naming convention, ie [Foo.xml,jonas-Foo.xml] and // not [Foo<baseNameTerminator>-ejb-jar.xml, // Foo<baseNameTerminator>-jonas-ejb-jar.xml].	WITHOUT_CLASSIFICATION	0.9999996884426673	WITHOUT_CLASSIFICATION	3.1155733270231396E-7	DEFECT
// Loop through the files seeing if any has been touched // more recently than the destination jar.	WITHOUT_CLASSIFICATION	0.999999957104447	WITHOUT_CLASSIFICATION	4.2895553030058105E-8	DEFECT
// read in the descriptor. Under weblogic, the descriptor is a weblogic // specific subclass which has references to the implementation classes. // These classes must, therefore, be in the classpath when the deployment // descriptor is loaded from the .ser file	WITHOUT_CLASSIFICATION	0.9999999942570517	WITHOUT_CLASSIFICATION	5.742948372722249E-9	DEFECT
//WARNING: We trim the values of all the attributes because //Some extension declarations are badly defined (ie have spaces //after version or vendor)	WITHOUT_CLASSIFICATION	0.999951162241107	WITHOUT_CLASSIFICATION	4.8837758892970424E-5	DEFECT
// 2003-02-21 new replace algorithm by tbee (tbee@tbee.org) // because it wasn't able to replace something like "@aaa;@bbb;"	WITHOUT_CLASSIFICATION	0.9999976485517965	WITHOUT_CLASSIFICATION	2.3514482035131627E-6	DEFECT
// convert backslashes to slashes, otherwise jjtree will // put this as comments and this seems to confuse javacc	WITHOUT_CLASSIFICATION	0.9999986089275298	WITHOUT_CLASSIFICATION	1.3910724702958445E-6	DEFECT
//although this code appears to duplicate that of ClasspathUtils.newInstance, //we cannot use that because this formatter may run in a forked process, //without that class.	WITHOUT_CLASSIFICATION	0.9952830381529383	WITHOUT_CLASSIFICATION	0.004716961847061737	DEFECT
// build the command line from what we got the format is // ss History elements [-H] [-L] [-N] [-O] [-V] [-Y] [-#] [-?] // as specified in the SS.EXE help	WITHOUT_CLASSIFICATION	0.9999999001546275	WITHOUT_CLASSIFICATION	9.984537249309804E-8	DEFECT
// this method has severe consequences on performance. We cannot rely // on the super.hashCode() method since super.getName() always return // the empty string in the current implemention (there's no setter) // so it is basically draining the performance of a hashmap lookup	WITHOUT_CLASSIFICATION	0.9999985619616538	WITHOUT_CLASSIFICATION	1.4380383461083072E-6	DEFECT
// If this TransformOperation has DrawOperation children // then Rotate the first child and return.	WITHOUT_CLASSIFICATION	0.9999999928427721	WITHOUT_CLASSIFICATION	7.157228016001273E-9	DEFECT
// converted from sun internal classes to // new Base64Converter // utility class extracted from Get task	WITHOUT_CLASSIFICATION	0.9999986589474287	WITHOUT_CLASSIFICATION	1.3410525712889701E-6	DEFECT
// // Cannot return a null source, because we have to call // setEntityResolver (see setEntityResolver javadoc comment) //	WITHOUT_CLASSIFICATION	0.9999988032462103	WITHOUT_CLASSIFICATION	1.1967537897261337E-6	DEFECT
// CRC // compressed length // uncompressed length	WITHOUT_CLASSIFICATION	0.9999998728989838	WITHOUT_CLASSIFICATION	1.2710101621722652E-7	DEFECT
// No further methods necessary. This is just an amalgamation of two other // interfaces.	WITHOUT_CLASSIFICATION	0.9999999279665447	WITHOUT_CLASSIFICATION	7.20334553072292E-8	DEFECT
// // -----  The "Singleton"  ----- //	WITHOUT_CLASSIFICATION	0.9999996905767017	WITHOUT_CLASSIFICATION	3.0942329836059164E-7	DEFECT
// If we had child elements, we need to indent before we close // the element, otherwise we're on the same line and don't need // to indent	WITHOUT_CLASSIFICATION	0.9999994871745519	WITHOUT_CLASSIFICATION	5.128254481485207E-7	DEFECT
// The key is in the dictionary but cannot be retrieved // This is usually due references that refer to tasks // that have not been taskdefed in the current run. // Ignore	WITHOUT_CLASSIFICATION	0.9999997863090162	WITHOUT_CLASSIFICATION	2.1369098373889698E-7	DEFECT
// write magic: done by caller who created this stream //this.out.write('B'); //this.out.write('Z');	WITHOUT_CLASSIFICATION	0.9998624965720834	WITHOUT_CLASSIFICATION	1.375034279166925E-4	DEFECT
// CRC // Mode // SizDev // UID // GID	WITHOUT_CLASSIFICATION	0.9999995337031257	WITHOUT_CLASSIFICATION	4.662968743411307E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999997408296413	WITHOUT_CLASSIFICATION	2.5917035868139013E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999997408296413	WITHOUT_CLASSIFICATION	2.5917035868139013E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999997408296413	WITHOUT_CLASSIFICATION	2.5917035868139013E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999997408296413	WITHOUT_CLASSIFICATION	2.5917035868139013E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999997408296413	WITHOUT_CLASSIFICATION	2.5917035868139013E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999997408296413	WITHOUT_CLASSIFICATION	2.5917035868139013E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999997408296413	WITHOUT_CLASSIFICATION	2.5917035868139013E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999997408296413	WITHOUT_CLASSIFICATION	2.5917035868139013E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.999999759668646	WITHOUT_CLASSIFICATION	2.403313539619063E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.999999759668646	WITHOUT_CLASSIFICATION	2.403313539619063E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.999999759668646	WITHOUT_CLASSIFICATION	2.403313539619063E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.999999759668646	WITHOUT_CLASSIFICATION	2.403313539619063E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.999999759668646	WITHOUT_CLASSIFICATION	2.403313539619063E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.999999759668646	WITHOUT_CLASSIFICATION	2.403313539619063E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999997408296413	WITHOUT_CLASSIFICATION	2.5917035868139013E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999997408296413	WITHOUT_CLASSIFICATION	2.5917035868139013E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999997408296413	WITHOUT_CLASSIFICATION	2.5917035868139013E-7	DEFECT
// ignored	WITHOUT_CLASSIFICATION	0.9999997920122641	WITHOUT_CLASSIFICATION	2.0798773607673554E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999997408296413	WITHOUT_CLASSIFICATION	2.5917035868139013E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999997408296413	WITHOUT_CLASSIFICATION	2.5917035868139013E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999997408296413	WITHOUT_CLASSIFICATION	2.5917035868139013E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999997408296413	WITHOUT_CLASSIFICATION	2.5917035868139013E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999997408296413	WITHOUT_CLASSIFICATION	2.5917035868139013E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999997408296413	WITHOUT_CLASSIFICATION	2.5917035868139013E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999997408296413	WITHOUT_CLASSIFICATION	2.5917035868139013E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999997408296413	WITHOUT_CLASSIFICATION	2.5917035868139013E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999997408296413	WITHOUT_CLASSIFICATION	2.5917035868139013E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999997408296413	WITHOUT_CLASSIFICATION	2.5917035868139013E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999997408296413	WITHOUT_CLASSIFICATION	2.5917035868139013E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999997408296413	WITHOUT_CLASSIFICATION	2.5917035868139013E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999997408296413	WITHOUT_CLASSIFICATION	2.5917035868139013E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999997408296413	WITHOUT_CLASSIFICATION	2.5917035868139013E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999997408296413	WITHOUT_CLASSIFICATION	2.5917035868139013E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999997408296413	WITHOUT_CLASSIFICATION	2.5917035868139013E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999997408296413	WITHOUT_CLASSIFICATION	2.5917035868139013E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999997408296413	WITHOUT_CLASSIFICATION	2.5917035868139013E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999997408296413	WITHOUT_CLASSIFICATION	2.5917035868139013E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999997408296413	WITHOUT_CLASSIFICATION	2.5917035868139013E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999997408296413	WITHOUT_CLASSIFICATION	2.5917035868139013E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999997408296413	WITHOUT_CLASSIFICATION	2.5917035868139013E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999997408296413	WITHOUT_CLASSIFICATION	2.5917035868139013E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999997408296413	WITHOUT_CLASSIFICATION	2.5917035868139013E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999997408296413	WITHOUT_CLASSIFICATION	2.5917035868139013E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999997408296413	WITHOUT_CLASSIFICATION	2.5917035868139013E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999997408296413	WITHOUT_CLASSIFICATION	2.5917035868139013E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999997408296413	WITHOUT_CLASSIFICATION	2.5917035868139013E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999997408296413	WITHOUT_CLASSIFICATION	2.5917035868139013E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999997408296413	WITHOUT_CLASSIFICATION	2.5917035868139013E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999997408296413	WITHOUT_CLASSIFICATION	2.5917035868139013E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999997408296413	WITHOUT_CLASSIFICATION	2.5917035868139013E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999997408296413	WITHOUT_CLASSIFICATION	2.5917035868139013E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999997408296413	WITHOUT_CLASSIFICATION	2.5917035868139013E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999997408296413	WITHOUT_CLASSIFICATION	2.5917035868139013E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999997408296413	WITHOUT_CLASSIFICATION	2.5917035868139013E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999997408296413	WITHOUT_CLASSIFICATION	2.5917035868139013E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999997408296413	WITHOUT_CLASSIFICATION	2.5917035868139013E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999997408296413	WITHOUT_CLASSIFICATION	2.5917035868139013E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999997408296413	WITHOUT_CLASSIFICATION	2.5917035868139013E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999997408296413	WITHOUT_CLASSIFICATION	2.5917035868139013E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999997408296413	WITHOUT_CLASSIFICATION	2.5917035868139013E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999997408296413	WITHOUT_CLASSIFICATION	2.5917035868139013E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999997408296413	WITHOUT_CLASSIFICATION	2.5917035868139013E-7	DEFECT
// do nothing	WITHOUT_CLASSIFICATION	0.9999976298800526	WITHOUT_CLASSIFICATION	2.370119947414099E-6	DEFECT
// do nothing	WITHOUT_CLASSIFICATION	0.9999976298800526	WITHOUT_CLASSIFICATION	2.370119947414099E-6	DEFECT
// do nothing	WITHOUT_CLASSIFICATION	0.9999976298800526	WITHOUT_CLASSIFICATION	2.370119947414099E-6	DEFECT
// selectors are implicitly ANDed in DirectoryScanner.  To // revert their logic we wrap them into a <none> selector // instead.	WITHOUT_CLASSIFICATION	0.9999999999063834	WITHOUT_CLASSIFICATION	9.361655252707637E-11	DEFECT
// now wait until the spawned process is finished	WITHOUT_CLASSIFICATION	0.9999985385723579	WITHOUT_CLASSIFICATION	1.4614276420644332E-6	DEFECT
// file doesn't exist -> property 'test' == null	WITHOUT_CLASSIFICATION	0.9999973549130945	WITHOUT_CLASSIFICATION	2.6450869055298184E-6	DEFECT
// we don't expect to find this	WITHOUT_CLASSIFICATION	0.9999891508032478	WITHOUT_CLASSIFICATION	1.0849196752180584E-5	DEFECT
// we don't expect to find this	WITHOUT_CLASSIFICATION	0.9999891508032478	WITHOUT_CLASSIFICATION	1.0849196752180584E-5	DEFECT
// ignore expected	WITHOUT_CLASSIFICATION	0.9999998707122433	WITHOUT_CLASSIFICATION	1.292877566567906E-7	DEFECT
// keep track of what operating systems are supported here.	WITHOUT_CLASSIFICATION	0.999998131186263	WITHOUT_CLASSIFICATION	1.868813736951607E-6	DEFECT
// if we followed the symlink we just made we should // bypass the excludes.	WITHOUT_CLASSIFICATION	0.9999994854009809	WITHOUT_CLASSIFICATION	5.145990190253158E-7	DEFECT
// when the test is started by the build.xml of ant // if the property tests.and.ant.share.classloader is not set in the build.xml // a sysproperty with name tests.and.ant.share.classloader and value // ${tests.and.ant.share.classloader} will be set // we are trying to catch this here.	WITHOUT_CLASSIFICATION	0.999987606227644	WITHOUT_CLASSIFICATION	1.2393772355963389E-5	DEFECT
/*             * throw in drive letters             */	WITHOUT_CLASSIFICATION	0.9999731571843335	WITHOUT_CLASSIFICATION	2.684281566636395E-5	DEFECT
/*             * promised to eliminate consecutive slashes after drive letter.             */	WITHOUT_CLASSIFICATION	0.9999998544183842	WITHOUT_CLASSIFICATION	1.455816157579282E-7	DEFECT
/*             * promised to eliminate consecutive slashes after drive letter.             */	WITHOUT_CLASSIFICATION	0.9999998544183842	WITHOUT_CLASSIFICATION	1.455816157579282E-7	DEFECT
/*             * promised to eliminate consecutive slashes after drive letter.             */	WITHOUT_CLASSIFICATION	0.9999998544183842	WITHOUT_CLASSIFICATION	1.455816157579282E-7	DEFECT
// avoid multiple configurations	WITHOUT_CLASSIFICATION	0.9999999848110063	WITHOUT_CLASSIFICATION	1.518899371798516E-8	DEFECT
// ------------------------------------------------------ //   Helper methods // -----------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999985719576705	WITHOUT_CLASSIFICATION	1.4280423294568947E-6	DEFECT
// make sure the cache is cleared.	WITHOUT_CLASSIFICATION	0.9999990558760139	WITHOUT_CLASSIFICATION	9.441239861910228E-7	DEFECT
//--- NULL JDBC driver just for simple test since there are no db driver // available as a default in Ant :)	WITHOUT_CLASSIFICATION	0.9999999998169145	WITHOUT_CLASSIFICATION	1.8308561455800774E-10	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.9999991913945856	WITHOUT_CLASSIFICATION	8.086054143347291E-7	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.9999991913945856	WITHOUT_CLASSIFICATION	8.086054143347291E-7	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.9999991913945856	WITHOUT_CLASSIFICATION	8.086054143347291E-7	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.9999991913945856	WITHOUT_CLASSIFICATION	8.086054143347291E-7	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.9999991913945856	WITHOUT_CLASSIFICATION	8.086054143347291E-7	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.9999991913945856	WITHOUT_CLASSIFICATION	8.086054143347291E-7	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.9999991913945856	WITHOUT_CLASSIFICATION	8.086054143347291E-7	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.9999991913945856	WITHOUT_CLASSIFICATION	8.086054143347291E-7	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.9999991913945856	WITHOUT_CLASSIFICATION	8.086054143347291E-7	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.9999991913945856	WITHOUT_CLASSIFICATION	8.086054143347291E-7	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.9999991913945856	WITHOUT_CLASSIFICATION	8.086054143347291E-7	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.9999991913945856	WITHOUT_CLASSIFICATION	8.086054143347291E-7	DEFECT
// wait 1 second extra to allow for java to start ... // this time was OK on a Win NT machine and on nagoya	WITHOUT_CLASSIFICATION	0.9999773345477172	WITHOUT_CLASSIFICATION	2.266545228285793E-5	DEFECT
// ------------------------------------------------------ //   Helper methods - should be in BuildFileTest // -----------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999848225655316	WITHOUT_CLASSIFICATION	1.5177434468297116E-5	DEFECT
// ------------------------------------------------------ //   Helper methods - should be in BuildFileTest // -----------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999848225655316	WITHOUT_CLASSIFICATION	1.5177434468297116E-5	DEFECT
// All three specified and all three exist -> true	WITHOUT_CLASSIFICATION	0.9999998031551196	WITHOUT_CLASSIFICATION	1.9684488040014742E-7	DEFECT
// Specified class is "" -> can not exist	WITHOUT_CLASSIFICATION	0.9999955948367691	WITHOUT_CLASSIFICATION	4.405163230914638E-6	DEFECT
// Core class that exists in system classpath is ignored, but found in specified classpath	WITHOUT_CLASSIFICATION	0.9999999343304322	WITHOUT_CLASSIFICATION	6.566956777593539E-8	DEFECT
// File is not found in specified filepath	WITHOUT_CLASSIFICATION	0.9999998625919743	WITHOUT_CLASSIFICATION	1.3740802569251952E-7	DEFECT
//ignored	WITHOUT_CLASSIFICATION	0.9999983574821831	WITHOUT_CLASSIFICATION	1.6425178169370048E-6	DEFECT
// basedir of subant/subant-test2/subant.xml is .. // therefore we expect here the subant subdirectory	WITHOUT_CLASSIFICATION	0.9999955563437821	WITHOUT_CLASSIFICATION	4.443656217903142E-6	DEFECT
// 2 is != 0 and even, so it is considered // failure on any platform currently supported // by Execute#isFailure.	WITHOUT_CLASSIFICATION	0.9999894230375539	WITHOUT_CLASSIFICATION	1.0576962446103518E-5	DEFECT
//         expectBuildExceptionContaining("testNoTld", //                 "Jasper found an error in a file", //                 "Java returned: 9");	WITHOUT_CLASSIFICATION	0.9999998447546133	WITHOUT_CLASSIFICATION	1.55245386681784E-7	DEFECT
// The captureToSummary test writes to stdout and stderr, good for // verifying that the TestListener support doesn't break anything.	WITHOUT_CLASSIFICATION	0.9999995499850793	WITHOUT_CLASSIFICATION	4.500149205732035E-7	DEFECT
// testNoCrash is the test invoked by the captureToSummary's junit task	WITHOUT_CLASSIFICATION	0.9999999996180605	WITHOUT_CLASSIFICATION	3.819394767166707E-10	DEFECT
// tests one the file object	WITHOUT_CLASSIFICATION	0.9999998648940457	WITHOUT_CLASSIFICATION	1.3510595442529287E-7	DEFECT
// tests one the file object	WITHOUT_CLASSIFICATION	0.9999998648940457	WITHOUT_CLASSIFICATION	1.3510595442529287E-7	DEFECT
// tests one the file object	WITHOUT_CLASSIFICATION	0.9999998648940457	WITHOUT_CLASSIFICATION	1.3510595442529287E-7	DEFECT
// tests one the file object	WITHOUT_CLASSIFICATION	0.9999998648940457	WITHOUT_CLASSIFICATION	1.3510595442529287E-7	DEFECT
// tests one the file object	WITHOUT_CLASSIFICATION	0.9999998648940457	WITHOUT_CLASSIFICATION	1.3510595442529287E-7	DEFECT
// viewpath	WITHOUT_CLASSIFICATION	0.999999482583705	WITHOUT_CLASSIFICATION	5.174162949990069E-7	DEFECT
// conversion to URL via FileUtils like in XMLResultAggregator, not as suggested in the bug report	WITHOUT_CLASSIFICATION	0.9999815114196277	WITHOUT_CLASSIFICATION	1.848858037232192E-5	DEFECT
// conversion to URL via FileUtils like in XMLResultAggregator, not as suggested in the bug report	WITHOUT_CLASSIFICATION	0.9999815114196277	WITHOUT_CLASSIFICATION	1.848858037232192E-5	DEFECT
// conversion to URL via FileUtils like in XMLResultAggregator, not as suggested in the bug report	WITHOUT_CLASSIFICATION	0.9999815114196277	WITHOUT_CLASSIFICATION	1.848858037232192E-5	DEFECT
// conversion to URL via FileUtils like in XMLResultAggregator, not as suggested in the bug report	WITHOUT_CLASSIFICATION	0.9999815114196277	WITHOUT_CLASSIFICATION	1.848858037232192E-5	DEFECT
// We have extra elements	WITHOUT_CLASSIFICATION	0.9999999164692472	WITHOUT_CLASSIFICATION	8.353075266409441E-8	DEFECT
// Set up a VSSHistory task	WITHOUT_CLASSIFICATION	0.9999998461462137	WITHOUT_CLASSIFICATION	1.5385378617234448E-7	DEFECT
// \ doesn't have a special meaning anymore - this is different from // what the Unix sh does but causes a lot of problems on DOS // based platforms otherwise	WITHOUT_CLASSIFICATION	0.9475065135204	WITHOUT_CLASSIFICATION	0.05249348647959983	DEFECT
//check that dir and src are incompatible	WITHOUT_CLASSIFICATION	0.9999999454078338	WITHOUT_CLASSIFICATION	5.459216627598876E-8	DEFECT
// ================  testcases for the cache implementations  ================	WITHOUT_CLASSIFICATION	0.9999992507865944	WITHOUT_CLASSIFICATION	7.492134056648753E-7	DEFECT
// does the selection	WITHOUT_CLASSIFICATION	0.9999500187160765	WITHOUT_CLASSIFICATION	4.998128392339403E-5	DEFECT
// ==============  testcases for the algorithm implementations  ==============	WITHOUT_CLASSIFICATION	0.99995793778269	WITHOUT_CLASSIFICATION	4.2062217309957895E-5	DEFECT
// =====================  scenario tests  =====================	WITHOUT_CLASSIFICATION	0.9999998959120792	WITHOUT_CLASSIFICATION	1.0408792084452764E-7	DEFECT
// info text // list of files // expected result // result	WITHOUT_CLASSIFICATION	0.999999440953286	WITHOUT_CLASSIFICATION	5.590467139899077E-7	DEFECT
//  =====================  helper methods and classes  ====================	WITHOUT_CLASSIFICATION	0.9999989356765476	WITHOUT_CLASSIFICATION	1.064323452366103E-6	DEFECT
// should be full moon	WITHOUT_CLASSIFICATION	0.9999957972629783	WITHOUT_CLASSIFICATION	4.2027370216616E-6	DEFECT
// Try a silly case	WITHOUT_CLASSIFICATION	0.9999974530599074	WITHOUT_CLASSIFICATION	2.5469400925928094E-6	DEFECT
// java.home is bogus	WITHOUT_CLASSIFICATION	0.9999994332108231	WITHOUT_CLASSIFICATION	5.66789176973658E-7	DEFECT
// 60s // a further 30s	WITHOUT_CLASSIFICATION	0.999999908288149	WITHOUT_CLASSIFICATION	9.171185097827068E-8	DEFECT
// 60s // a further 30s	WITHOUT_CLASSIFICATION	0.999999908288149	WITHOUT_CLASSIFICATION	9.171185097827068E-8	DEFECT
// 60s // a further 30s	WITHOUT_CLASSIFICATION	0.999999908288149	WITHOUT_CLASSIFICATION	9.171185097827068E-8	DEFECT
// order of headers cannot be guaranteed	WITHOUT_CLASSIFICATION	0.9999984452162022	WITHOUT_CLASSIFICATION	1.5547837979074864E-6	DEFECT
// order of headers cannot be guaranteed	WITHOUT_CLASSIFICATION	0.9999984452162022	WITHOUT_CLASSIFICATION	1.5547837979074864E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999996763950936	WITHOUT_CLASSIFICATION	3.2360490638735057E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999996763950936	WITHOUT_CLASSIFICATION	3.2360490638735057E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999996763950936	WITHOUT_CLASSIFICATION	3.2360490638735057E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999996763950936	WITHOUT_CLASSIFICATION	3.2360490638735057E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999996763950936	WITHOUT_CLASSIFICATION	3.2360490638735057E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999996763950936	WITHOUT_CLASSIFICATION	3.2360490638735057E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999996763950936	WITHOUT_CLASSIFICATION	3.2360490638735057E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999996763950936	WITHOUT_CLASSIFICATION	3.2360490638735057E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999996763950936	WITHOUT_CLASSIFICATION	3.2360490638735057E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999996763950936	WITHOUT_CLASSIFICATION	3.2360490638735057E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999996763950936	WITHOUT_CLASSIFICATION	3.2360490638735057E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999996763950936	WITHOUT_CLASSIFICATION	3.2360490638735057E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999996763950936	WITHOUT_CLASSIFICATION	3.2360490638735057E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999996763950936	WITHOUT_CLASSIFICATION	3.2360490638735057E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999996763950936	WITHOUT_CLASSIFICATION	3.2360490638735057E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999996763950936	WITHOUT_CLASSIFICATION	3.2360490638735057E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999996763950936	WITHOUT_CLASSIFICATION	3.2360490638735057E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999996763950936	WITHOUT_CLASSIFICATION	3.2360490638735057E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999996763950936	WITHOUT_CLASSIFICATION	3.2360490638735057E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999996763950936	WITHOUT_CLASSIFICATION	3.2360490638735057E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999996763950936	WITHOUT_CLASSIFICATION	3.2360490638735057E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999996763950936	WITHOUT_CLASSIFICATION	3.2360490638735057E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999996763950936	WITHOUT_CLASSIFICATION	3.2360490638735057E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999996763950936	WITHOUT_CLASSIFICATION	3.2360490638735057E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999996763950936	WITHOUT_CLASSIFICATION	3.2360490638735057E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999996763950936	WITHOUT_CLASSIFICATION	3.2360490638735057E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999996763950936	WITHOUT_CLASSIFICATION	3.2360490638735057E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999996763950936	WITHOUT_CLASSIFICATION	3.2360490638735057E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999996763950936	WITHOUT_CLASSIFICATION	3.2360490638735057E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999996763950936	WITHOUT_CLASSIFICATION	3.2360490638735057E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999996763950936	WITHOUT_CLASSIFICATION	3.2360490638735057E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999996763950936	WITHOUT_CLASSIFICATION	3.2360490638735057E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999996763950936	WITHOUT_CLASSIFICATION	3.2360490638735057E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999996763950936	WITHOUT_CLASSIFICATION	3.2360490638735057E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999996763950936	WITHOUT_CLASSIFICATION	3.2360490638735057E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999996763950936	WITHOUT_CLASSIFICATION	3.2360490638735057E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999996763950936	WITHOUT_CLASSIFICATION	3.2360490638735057E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999996763950936	WITHOUT_CLASSIFICATION	3.2360490638735057E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999996763950936	WITHOUT_CLASSIFICATION	3.2360490638735057E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999996763950936	WITHOUT_CLASSIFICATION	3.2360490638735057E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999996763950936	WITHOUT_CLASSIFICATION	3.2360490638735057E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999996763950936	WITHOUT_CLASSIFICATION	3.2360490638735057E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999996763950936	WITHOUT_CLASSIFICATION	3.2360490638735057E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999996763950936	WITHOUT_CLASSIFICATION	3.2360490638735057E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999996763950936	WITHOUT_CLASSIFICATION	3.2360490638735057E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999996763950936	WITHOUT_CLASSIFICATION	3.2360490638735057E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999996763950936	WITHOUT_CLASSIFICATION	3.2360490638735057E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999996763950936	WITHOUT_CLASSIFICATION	3.2360490638735057E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999996763950936	WITHOUT_CLASSIFICATION	3.2360490638735057E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999996763950936	WITHOUT_CLASSIFICATION	3.2360490638735057E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999996763950936	WITHOUT_CLASSIFICATION	3.2360490638735057E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999996763950936	WITHOUT_CLASSIFICATION	3.2360490638735057E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999996763950936	WITHOUT_CLASSIFICATION	3.2360490638735057E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999996763950936	WITHOUT_CLASSIFICATION	3.2360490638735057E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999996763950936	WITHOUT_CLASSIFICATION	3.2360490638735057E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999996763950936	WITHOUT_CLASSIFICATION	3.2360490638735057E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999996763950936	WITHOUT_CLASSIFICATION	3.2360490638735057E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999996763950936	WITHOUT_CLASSIFICATION	3.2360490638735057E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999996763950936	WITHOUT_CLASSIFICATION	3.2360490638735057E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999996763950936	WITHOUT_CLASSIFICATION	3.2360490638735057E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999996763950936	WITHOUT_CLASSIFICATION	3.2360490638735057E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999996763950936	WITHOUT_CLASSIFICATION	3.2360490638735057E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999996763950936	WITHOUT_CLASSIFICATION	3.2360490638735057E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999996763950936	WITHOUT_CLASSIFICATION	3.2360490638735057E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999996763950936	WITHOUT_CLASSIFICATION	3.2360490638735057E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999996763950936	WITHOUT_CLASSIFICATION	3.2360490638735057E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999996763950936	WITHOUT_CLASSIFICATION	3.2360490638735057E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999996763950936	WITHOUT_CLASSIFICATION	3.2360490638735057E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999996763950936	WITHOUT_CLASSIFICATION	3.2360490638735057E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999996763950936	WITHOUT_CLASSIFICATION	3.2360490638735057E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999996763950936	WITHOUT_CLASSIFICATION	3.2360490638735057E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999996763950936	WITHOUT_CLASSIFICATION	3.2360490638735057E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999996763950936	WITHOUT_CLASSIFICATION	3.2360490638735057E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999996763950936	WITHOUT_CLASSIFICATION	3.2360490638735057E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999996763950936	WITHOUT_CLASSIFICATION	3.2360490638735057E-7	DEFECT
/*                            Ignore method m, as there is an overloaded                            form of this method that takes in a                            non-string argument, which gains higher                            priority.                        */	WITHOUT_CLASSIFICATION	0.9999999960680234	WITHOUT_CLASSIFICATION	3.931976606450794E-9	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999998952218317	WITHOUT_CLASSIFICATION	1.0477816833988038E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999998952218317	WITHOUT_CLASSIFICATION	1.0477816833988038E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999998952218317	WITHOUT_CLASSIFICATION	1.0477816833988038E-7	DEFECT
/*                        If the argument is not a String or Location,                        and if there                        is an overloaded form of this method already defined,                        we just override that with the new one.                        This mechanism does not guarantee any specific order                        in which the methods will be selected: so any code                        that depends on the order in which "set" methods have                        been defined, is not guaranteed to be selected in any                        particular order.                    */	WITHOUT_CLASSIFICATION	0.9999999999999263	WITHOUT_CLASSIFICATION	7.364831150093672E-14	DEFECT
// impossible as getMethods should only return public methods	WITHOUT_CLASSIFICATION	0.9999979836225128	WITHOUT_CLASSIFICATION	2.0163774872591566E-6	DEFECT
// impossible as getMethods should only return public methods	WITHOUT_CLASSIFICATION	0.9999979836225128	WITHOUT_CLASSIFICATION	2.0163774872591566E-6	DEFECT
// impossible as getMethods should only return public methods	WITHOUT_CLASSIFICATION	0.9999979836225128	WITHOUT_CLASSIFICATION	2.0163774872591566E-6	DEFECT
// boolean and Boolean get special treatment because we // have a nice method in Project	WITHOUT_CLASSIFICATION	0.9999999758354812	WITHOUT_CLASSIFICATION	2.416451886672297E-8	DEFECT
// find the line breaks and pass other chars through in blocks	WITHOUT_CLASSIFICATION	0.9999681762549896	WITHOUT_CLASSIFICATION	3.182374501031702E-5	DEFECT
// DataType can have a "no arg" constructor or take a single // Project argument.	WITHOUT_CLASSIFICATION	0.9999998976095578	WITHOUT_CLASSIFICATION	1.0239044226357453E-7	DEFECT
// all the names are the same: check if the class path of the loader // is the same	WITHOUT_CLASSIFICATION	0.9999953280805368	WITHOUT_CLASSIFICATION	4.671919463135725E-6	DEFECT
/* Interestingly enough, we get to here when a user                 * uses -Dname=value. However, in some cases, the OS                 * goes ahead and parses this out to args                 *   {"-Dname", "value"}                 * so instead of parsing on "=", we just make the "-D"                 * characters go away and skip one argument forward.                 *                 * I don't know how to predict when the JDK is going                 * to help or not, so we simply look for the equals sign.                 */	WITHOUT_CLASSIFICATION	0.9975509756115809	WITHOUT_CLASSIFICATION	0.002449024388419218	DEFECT
// if parent is null, then we are at the root of the fs, // complain that we can't find the build file.	WITHOUT_CLASSIFICATION	0.9999645036117896	WITHOUT_CLASSIFICATION	3.549638821045409E-5	DEFECT
// put back the original security manager //The following will never eval to true. (PD)	WITHOUT_CLASSIFICATION	0.9999995843538384	WITHOUT_CLASSIFICATION	4.1564616159493677E-7	DEFECT
// ignore path elements which are invalid // relative to the project	WITHOUT_CLASSIFICATION	0.9999999987562609	WITHOUT_CLASSIFICATION	1.2437391037009895E-9	DEFECT
// Ignore - we are interested only in the side // effect - that of getting the static initializers // invoked.  As we do not want to call a valid // constructor to get this side effect, an // attempt is made to call a hopefully // invalid constructor - come on, nobody // would have a constructor that takes in // 256 String arguments ;-) // (In fact, they can't - according to JVM spec // section 4.10, the number of method parameters is limited // to 255 by the definition of a method descriptor. // Constructors count as methods here.)	WITHOUT_CLASSIFICATION	0.9999940861164888	WITHOUT_CLASSIFICATION	5.913883511251846E-6	DEFECT
/*<URL>*/	WITHOUT_CLASSIFICATION	0.9999036541993583	WITHOUT_CLASSIFICATION	9.634580064162278E-5	DEFECT
/*<URL>*/	WITHOUT_CLASSIFICATION	0.9999036541993583	WITHOUT_CLASSIFICATION	9.634580064162278E-5	DEFECT
// 'sync' is needed - otherwise 2 threads can load the same class // twice, resulting in LinkageError: duplicated class definition. // findLoadedClass avoids that, but without sync it won't work.	WITHOUT_CLASSIFICATION	0.5995708296053054	WITHOUT_CLASSIFICATION	0.40042917039469456	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.99999795328422	WITHOUT_CLASSIFICATION	2.0467157800256684E-6	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.99999795328422	WITHOUT_CLASSIFICATION	2.0467157800256684E-6	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.99999795328422	WITHOUT_CLASSIFICATION	2.0467157800256684E-6	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.99999795328422	WITHOUT_CLASSIFICATION	2.0467157800256684E-6	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.99999795328422	WITHOUT_CLASSIFICATION	2.0467157800256684E-6	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.99999795328422	WITHOUT_CLASSIFICATION	2.0467157800256684E-6	DEFECT
// Not significant for the class loader.	WITHOUT_CLASSIFICATION	0.9999996842281702	WITHOUT_CLASSIFICATION	3.1577182980057144E-7	DEFECT
// Not significant for the class loader.	WITHOUT_CLASSIFICATION	0.9999996842281702	WITHOUT_CLASSIFICATION	3.1577182980057144E-7	DEFECT
// Not significant for the class loader.	WITHOUT_CLASSIFICATION	0.9999996842281702	WITHOUT_CLASSIFICATION	3.1577182980057144E-7	DEFECT
// Not significant for the class loader.	WITHOUT_CLASSIFICATION	0.9999996842281702	WITHOUT_CLASSIFICATION	3.1577182980057144E-7	DEFECT
// Not significant for the class loader.	WITHOUT_CLASSIFICATION	0.9999996842281702	WITHOUT_CLASSIFICATION	3.1577182980057144E-7	DEFECT
// don't have to check for public, since // getConstructor finds public constructors only.	WITHOUT_CLASSIFICATION	0.9999999326735576	WITHOUT_CLASSIFICATION	6.732644249838583E-8	DEFECT
//not a known type	WITHOUT_CLASSIFICATION	0.999625430105032	WITHOUT_CLASSIFICATION	3.7456989496801663E-4	DEFECT
// Initialize the globalFileSet's project	WITHOUT_CLASSIFICATION	0.9999995407701362	WITHOUT_CLASSIFICATION	4.592298637737472E-7	DEFECT
// create a new Vector to avoid ConcurrentModificationExc when // the listeners get added/removed while we are in fire	WITHOUT_CLASSIFICATION	0.9999999971488935	WITHOUT_CLASSIFICATION	2.85110654575726E-9	DEFECT
// first build exception	WITHOUT_CLASSIFICATION	0.9999997779390324	WITHOUT_CLASSIFICATION	2.2206096767224752E-7	DEFECT
// Not been visited	WITHOUT_CLASSIFICATION	0.9999999491236466	WITHOUT_CLASSIFICATION	5.0876353380303025E-8	DEFECT
// -------------------- Optional methods   -------------------- // You can override those methods if you want to optimize or // do advanced things (like support a special syntax). // The methods do not chain - you should use them when embedding ant // (by replacing the main helper)	WITHOUT_CLASSIFICATION	0.9999997170886584	WITHOUT_CLASSIFICATION	2.829113415232805E-7	DEFECT
/*                fragments.addElement(value.substring(pos + 1, pos + 2));                prev = pos + 2;                */	WITHOUT_CLASSIFICATION	0.9999999932137248	WITHOUT_CLASSIFICATION	6.786275099953141E-9	DEFECT
//empty	WITHOUT_CLASSIFICATION	0.9999626752415091	WITHOUT_CLASSIFICATION	3.732475849096322E-5	DEFECT
//empty	WITHOUT_CLASSIFICATION	0.9999626752415091	WITHOUT_CLASSIFICATION	3.732475849096322E-5	DEFECT
// -------------------- Common properties  -------------------- // The following properties are required by import ( and other tasks // that read build files using ProjectHelper ).	WITHOUT_CLASSIFICATION	0.9999976784772356	WITHOUT_CLASSIFICATION	2.3215227644052283E-6	DEFECT
// check to what is in the classname	WITHOUT_CLASSIFICATION	0.9999949075765404	WITHOUT_CLASSIFICATION	5.09242345959884E-6	DEFECT
//not included, do nothing	WITHOUT_CLASSIFICATION	0.9999835985012612	WITHOUT_CLASSIFICATION	1.6401498738879772E-5	DEFECT
//not included, do nothing	WITHOUT_CLASSIFICATION	0.9999835985012612	WITHOUT_CLASSIFICATION	1.6401498738879772E-5	DEFECT
// Attributes	WITHOUT_CLASSIFICATION	0.9999998643048065	WITHOUT_CLASSIFICATION	1.3569519352208113E-7	DEFECT
// make sure we aren't going to get the path separator next	WITHOUT_CLASSIFICATION	0.9999911973111019	WITHOUT_CLASSIFICATION	8.802688898207293E-6	DEFECT
// 'reasonable' default, if the component is used without // a Project ( for example as a standalone Bean ). // Most ant components can be used this way.	WITHOUT_CLASSIFICATION	0.999997640456067	WITHOUT_CLASSIFICATION	2.3595439330752873E-6	DEFECT
// don't have to check for public, since // getMethod finds public method only. // don't have to check for abstract, since then // taskClass would be abstract too.	WITHOUT_CLASSIFICATION	0.9999994781344029	WITHOUT_CLASSIFICATION	5.218655970974156E-7	DEFECT
// Mac	WITHOUT_CLASSIFICATION	0.9999992182883464	WITHOUT_CLASSIFICATION	7.817116537155822E-7	DEFECT
// set in/excludes to reasonable defaults if needed:	WITHOUT_CLASSIFICATION	0.9999999942306772	WITHOUT_CLASSIFICATION	5.769322828977556E-9	DEFECT
// may be on a case insensitive file system.  We want // the results to show what's really on the disk, so // we need to double check.	WITHOUT_CLASSIFICATION	0.9999998042068875	WITHOUT_CLASSIFICATION	1.957931125895005E-7	DEFECT
// avoid double scanning of directories, can only happen in fast mode	WITHOUT_CLASSIFICATION	0.9999954839204682	WITHOUT_CLASSIFICATION	4.516079531690354E-6	DEFECT
// Usually the initialized is set to true. But here it must not. // Because the prepend and append readers have to be instantiated // on runtime //newFilter.setInitialized(true);	WITHOUT_CLASSIFICATION	0.9982650456256392	WITHOUT_CLASSIFICATION	0.0017349543743606765	DEFECT
// if at EOF with no characters in the buffer, return EOF	WITHOUT_CLASSIFICATION	0.9999999981675906	WITHOUT_CLASSIFICATION	1.8324093454258162E-9	DEFECT
// The current character is always emitted.	WITHOUT_CLASSIFICATION	0.999999391298422	WITHOUT_CLASSIFICATION	6.087015781025169E-7	DEFECT
// The current character is always emitted.	WITHOUT_CLASSIFICATION	0.999999391298422	WITHOUT_CLASSIFICATION	6.087015781025169E-7	DEFECT
// The current character is always emitted.	WITHOUT_CLASSIFICATION	0.999999391298422	WITHOUT_CLASSIFICATION	6.087015781025169E-7	DEFECT
// The current character is always emitted.	WITHOUT_CLASSIFICATION	0.999999391298422	WITHOUT_CLASSIFICATION	6.087015781025169E-7	DEFECT
// Fall tru	WITHOUT_CLASSIFICATION	0.9999968544366221	WITHOUT_CLASSIFICATION	3.145563377982038E-6	DEFECT
// Fall tru	WITHOUT_CLASSIFICATION	0.9999968544366221	WITHOUT_CLASSIFICATION	3.145563377982038E-6	DEFECT
// Fall tru	WITHOUT_CLASSIFICATION	0.9999968544366221	WITHOUT_CLASSIFICATION	3.145563377982038E-6	DEFECT
// Fall tru	WITHOUT_CLASSIFICATION	0.9999968544366221	WITHOUT_CLASSIFICATION	3.145563377982038E-6	DEFECT
// Works like clone() but doesn't show up in the Javadocs	WITHOUT_CLASSIFICATION	0.999922863303086	WITHOUT_CLASSIFICATION	7.713669691391417E-5	DEFECT
// ----------------------------------------- //  Predefined filters // -----------------------------------------	WITHOUT_CLASSIFICATION	0.9999998009877948	WITHOUT_CLASSIFICATION	1.9901220513350622E-7	DEFECT
// -------------------------------------------- // //      Filter classes // // --------------------------------------------	WITHOUT_CLASSIFICATION	0.9999988397629348	WITHOUT_CLASSIFICATION	1.16023706519529E-6	DEFECT
// Execute the top-level target	WITHOUT_CLASSIFICATION	0.9999999955238664	WITHOUT_CLASSIFICATION	4.476133582311221E-9	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999998846864979	WITHOUT_CLASSIFICATION	1.1531350213453716E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999998846864979	WITHOUT_CLASSIFICATION	1.1531350213453716E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999998846864979	WITHOUT_CLASSIFICATION	1.1531350213453716E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999998846864979	WITHOUT_CLASSIFICATION	1.1531350213453716E-7	DEFECT
// Also check for properly formed URIs. Ant formerly recommended using // nonsense URIs such as "file:./foo.xml" in XML includes. You shouldn't // do that (just "foo.xml" is correct) but for compatibility we special-case // things when the path is not absolute, and fall back to the old parsing behavior.	WITHOUT_CLASSIFICATION	0.998858238189416	WITHOUT_CLASSIFICATION	0.0011417618105840606	DEFECT
//decide whether to copy the existing arg set, or //build a new one from the list of all args excluding the special //operations that only we handle	WITHOUT_CLASSIFICATION	0.9999999803414662	WITHOUT_CLASSIFICATION	1.9658533844127804E-8	DEFECT
// convert the replyTo string into a vector of emailaddresses	WITHOUT_CLASSIFICATION	0.9999999550852525	WITHOUT_CLASSIFICATION	4.491474740647933E-8	DEFECT
// private static final int BG_BLACK = 40; // private static final int BG_RED = 41; // private static final int BG_GREEN = 42; // private static final int BG_YELLOW = 44; // private static final int BG_BLUE = 44; // private static final int BG_MAGENTA = 45; // private static final int BG_CYAN = 46; // private static final int BG_WHITE = 47;	WITHOUT_CLASSIFICATION	0.9999999829349299	WITHOUT_CLASSIFICATION	1.7065070054951746E-8	DEFECT
// If the file being added is META-INF/application.xml, we // warn if it's not the one specified in the "appxml" // attribute - or if it's being added twice, meaning the same // file is specified by the "appxml" attribute and in a // <fileset> element.	WITHOUT_CLASSIFICATION	0.9999999979519965	WITHOUT_CLASSIFICATION	2.0480034481248314E-9	DEFECT
// class found but restricted name; this is // actually the case we're looking for in JDK 1.3+, // so catch the exception and return	WITHOUT_CLASSIFICATION	0.9999994006147473	WITHOUT_CLASSIFICATION	5.993852525474919E-7	DEFECT
// Can return null to represent the bootstrap class loader. // see API docs of Class.getClassLoader.	WITHOUT_CLASSIFICATION	0.9999999949767312	WITHOUT_CLASSIFICATION	5.023268775200955E-9	DEFECT
//default	WITHOUT_CLASSIFICATION	0.9999939690177441	WITHOUT_CLASSIFICATION	6.030982255966268E-6	DEFECT
//default	WITHOUT_CLASSIFICATION	0.9999939690177441	WITHOUT_CLASSIFICATION	6.030982255966268E-6	DEFECT
// use to scan own archive	WITHOUT_CLASSIFICATION	0.9999999729771059	WITHOUT_CLASSIFICATION	2.7022894139508698E-8	DEFECT
// collect filesets to pass them to getResourcesToAdd	WITHOUT_CLASSIFICATION	0.9999988994628753	WITHOUT_CLASSIFICATION	1.1005371247206915E-6	DEFECT
// If we're in this finally clause because of an // exception, we don't really care if there's an // exception when closing the stream. E.g. if it // throws "ZIP file must have at least one entry", // because an exception happened before we added // any files, then we must swallow this // exception. Otherwise, the error that's reported // will be the close() error, which is not the // real cause of the problem.	WITHOUT_CLASSIFICATION	0.9273255513023677	WITHOUT_CLASSIFICATION	0.07267444869763234	DEFECT
/*             * Bad luck.             *             * There are resources in the filesets that make the             * archive out of date, but not in the non-fileset             * resources. We need to rescan the non-FileSets to grab             * all of them now.             */	WITHOUT_CLASSIFICATION	0.9999988962231046	WITHOUT_CLASSIFICATION	1.103776895528795E-6	DEFECT
// ZIPs store time with a granularity of 2 seconds, round up	WITHOUT_CLASSIFICATION	0.9999818277550475	WITHOUT_CLASSIFICATION	1.8172244952545303E-5	DEFECT
/*             * ZipOutputStream.putNextEntry expects the ZipEntry to             * know its size and the CRC sum before you start writing             * the data when using STORED mode - unless it is seekable.             *             * This forces us to process the data twice.             */	WITHOUT_CLASSIFICATION	0.9999979288885635	WITHOUT_CLASSIFICATION	2.071111436402369E-6	DEFECT
// may be altered in validate	WITHOUT_CLASSIFICATION	0.9999991006936542	WITHOUT_CLASSIFICATION	8.993063458174747E-7	DEFECT
//at this point the paths are set up with lists of files, //and the mapper is ready to map from source dirs to dest files //now we iterate through every JAR giving source and dest names // deal with the paths	WITHOUT_CLASSIFICATION	0.9999999135323958	WITHOUT_CLASSIFICATION	8.646760417605693E-8	DEFECT
//calculate our destination directory; it is either the destDir //attribute, or the base dir of the fileset (for in situ updates)	WITHOUT_CLASSIFICATION	0.9999999986788256	WITHOUT_CLASSIFICATION	1.3211743494094415E-9	DEFECT
// Error messages	WITHOUT_CLASSIFICATION	0.9999989185498722	WITHOUT_CLASSIFICATION	1.0814501278006975E-6	DEFECT
// Default the viewpath to basedir if it is not specified	WITHOUT_CLASSIFICATION	0.999999851533714	WITHOUT_CLASSIFICATION	1.4846628599669036E-7	DEFECT
// Default the viewpath to basedir if it is not specified	WITHOUT_CLASSIFICATION	0.999999851533714	WITHOUT_CLASSIFICATION	1.4846628599669036E-7	DEFECT
// Default the viewpath to basedir if it is not specified	WITHOUT_CLASSIFICATION	0.999999851533714	WITHOUT_CLASSIFICATION	1.4846628599669036E-7	DEFECT
// Parse the attribute(s) and text of this node, adding // properties for each. // if the "path" attribute is specified, then return the created path // which will be passed to the children of this node.	WITHOUT_CLASSIFICATION	0.9999999620172113	WITHOUT_CLASSIFICATION	3.798278864321824E-8	DEFECT
// An arbitrary attribute.	WITHOUT_CLASSIFICATION	0.9999992877771118	WITHOUT_CLASSIFICATION	7.122228882870123E-7	DEFECT
// Return the Path we added or the ID of this node for // children to reference if needed.  Path objects are // definitely used by child path elements, and ID may be used // for a child text node.	WITHOUT_CLASSIFICATION	0.9999999995954741	WITHOUT_CLASSIFICATION	4.045257731272491E-10	DEFECT
// Fall Through	WITHOUT_CLASSIFICATION	0.9999931579454344	WITHOUT_CLASSIFICATION	6.842054565631419E-6	DEFECT
// Fall Through	WITHOUT_CLASSIFICATION	0.9999931579454344	WITHOUT_CLASSIFICATION	6.842054565631419E-6	DEFECT
// Ignore the problem	WITHOUT_CLASSIFICATION	0.999999433283059	WITHOUT_CLASSIFICATION	5.667169410973892E-7	DEFECT
// If we're on windows, then do the comparison ignoring case // and treat the two directory characters the same	WITHOUT_CLASSIFICATION	0.9999988613488041	WITHOUT_CLASSIFICATION	1.138651195933336E-6	DEFECT
// for NetWare and OS/2, piggy-back on Windows, since in the // validateSetup code, the same assumptions can be made as // with windows - that ; is the path separator	WITHOUT_CLASSIFICATION	0.9998254190688077	WITHOUT_CLASSIFICATION	1.7458093119219383E-4	DEFECT
// END static class TemplateElement	WITHOUT_CLASSIFICATION	0.9999999710611014	WITHOUT_CLASSIFICATION	2.893889853067914E-8	DEFECT
////////////////////////////////////////////////////////////////////// // CONSTRUCTORS / INITIALIZERS	WITHOUT_CLASSIFICATION	0.9999990944934184	WITHOUT_CLASSIFICATION	9.055065815696451E-7	DEFECT
//value and property are mutually exclusive attributes	WITHOUT_CLASSIFICATION	0.9999760344162205	WITHOUT_CLASSIFICATION	2.3965583779531953E-5	DEFECT
// Ignore Exception	WITHOUT_CLASSIFICATION	0.9999998703768748	WITHOUT_CLASSIFICATION	1.2962312530729791E-7	DEFECT
//int logLevel = filesetManifestConfig == null ? //    Project.MSG_WARN : Project.MSG_VERBOSE; //log("File " + file //    + " includes a META-INF/MANIFEST.MF which will be ignored. " //    + "To include this file, set filesetManifest to a value other " //    + "than 'skip'.", logLevel);	WITHOUT_CLASSIFICATION	0.9999999969010905	WITHOUT_CLASSIFICATION	3.098909578004997E-9	DEFECT
// Create the directory, as it might not exist.	WITHOUT_CLASSIFICATION	0.9999975714595859	WITHOUT_CLASSIFICATION	2.4285404140750484E-6	DEFECT
// Calculate the total checksum // Convert the keys (source files) into a sorted array.	WITHOUT_CLASSIFICATION	0.9999999977821961	WITHOUT_CLASSIFICATION	2.2178038178969222E-9	DEFECT
// must not use getEntry as "well behaving" applications // must accept the manifest in any capitalization	WITHOUT_CLASSIFICATION	0.999984159364664	WITHOUT_CLASSIFICATION	1.5840635336024985E-5	DEFECT
// We just set the prefix for this fileset, and pass it up.	WITHOUT_CLASSIFICATION	0.9999874730569147	WITHOUT_CLASSIFICATION	1.2526943085371082E-5	DEFECT
// We just set the prefix for this fileset, and pass it up.	WITHOUT_CLASSIFICATION	0.9999874730569147	WITHOUT_CLASSIFICATION	1.2526943085371082E-5	DEFECT
/*             * Precedence: manifestFile wins over inline manifest,             * over manifests read from the filesets over the original             * manifest.             *             * merge with null argument is a no-op             */	WITHOUT_CLASSIFICATION	0.9999988603749906	WITHOUT_CLASSIFICATION	1.1396250093737762E-6	DEFECT
// filesets are separate from the rest for performance // reasons.  If we use the code for union below, we'll always // scan all filesets, even if we know the target is out of // date after the first test.	WITHOUT_CLASSIFICATION	0.99999999999434	WITHOUT_CLASSIFICATION	5.6600132769525365E-12	DEFECT
// If the archive is built for the first time and it is // matched by a resource collection, then it hasn't been // found in check (it hasn't been there) but will be // included now. // // for some strange reason the old code would simply skip // the entry and not fail, do the same now for backwards // compatibility reasons.  Without this, the which4j build // fails in Gump	WITHOUT_CLASSIFICATION	0.9999997300461944	WITHOUT_CLASSIFICATION	2.6995380560821226E-7	DEFECT
// preserve permissions	WITHOUT_CLASSIFICATION	0.999995714127796	WITHOUT_CLASSIFICATION	4.28587220399505E-6	DEFECT
// override permissions if set explicitly	WITHOUT_CLASSIFICATION	0.9999964722287625	WITHOUT_CLASSIFICATION	3.5277712374235767E-6	DEFECT
// Check if we can contact the URL	WITHOUT_CLASSIFICATION	0.9999864949185683	WITHOUT_CLASSIFICATION	1.35050814317633E-5	DEFECT
// // Instance //	WITHOUT_CLASSIFICATION	0.9999998994292532	WITHOUT_CLASSIFICATION	1.0057074676026952E-7	DEFECT
//the Exec OS check is different from Os.isOs(), which //probes for a specific OS. Instead it searches the os field //for the current os.name	WITHOUT_CLASSIFICATION	0.9999999142951981	WITHOUT_CLASSIFICATION	8.570480194228621E-8	DEFECT
// Similar to a fileset, but doesn't allow dir attribute to be set	WITHOUT_CLASSIFICATION	0.9999989048135612	WITHOUT_CLASSIFICATION	1.0951864388084756E-6	DEFECT
// If the destination directory didn't already exist, // or was empty, then no previous file removal is necessary!	WITHOUT_CLASSIFICATION	0.9999999725586066	WITHOUT_CLASSIFICATION	2.7441393471088617E-8	DEFECT
// Default the viewpath to basedir if it is not specified	WITHOUT_CLASSIFICATION	0.999999851533714	WITHOUT_CLASSIFICATION	1.4846628599669036E-7	DEFECT
// preserveInTarget would find all files we want to keep, // but we need to find all that we want to delete - so the // meaning of all patterns and selectors must be inverted	WITHOUT_CLASSIFICATION	0.9999999885304259	WITHOUT_CLASSIFICATION	1.1469574022316848E-8	DEFECT
//On VMS platform, we need to create a special java options file //containing the arguments and classpath for the java command. //The special file is supported by the "-V" switch on the VMS JVM.	WITHOUT_CLASSIFICATION	0.9999999760780532	WITHOUT_CLASSIFICATION	2.3921946767879254E-8	DEFECT
// Do nothing if no resources (including nested text)	WITHOUT_CLASSIFICATION	0.9999999571017191	WITHOUT_CLASSIFICATION	4.2898280963041946E-8	DEFECT
// Windows has a 32k limit on total arg size, so // create a temporary file to store all the arguments	WITHOUT_CLASSIFICATION	0.9999999181382081	WITHOUT_CLASSIFICATION	8.186179187698786E-8	DEFECT
// filesets has been protected so we need to keep that even after // switching to resource collections.  In fact, they will still // get a different treatment form the other resource collections // even in execute since we have some subtle special features like // switching type to "dir" when we encounter a DirSet that would // be more difficult to achieve otherwise.	WITHOUT_CLASSIFICATION	0.9999995551424654	WITHOUT_CLASSIFICATION	4.448575345895611E-7	DEFECT
// need to reset the stream handler to restart // reading of pipes; // go ahead and do it always w/ nested redirectors	WITHOUT_CLASSIFICATION	0.9999998783872072	WITHOUT_CLASSIFICATION	1.2161279283091942E-7	DEFECT
/*             * if we get here, in and out have not been specified, we are             * in batch processing mode.             */	WITHOUT_CLASSIFICATION	0.9999999780906236	WITHOUT_CLASSIFICATION	2.190937639886741E-8	DEFECT
//at this point there is one trailing space to remove, if the list is not empty.	WITHOUT_CLASSIFICATION	0.9999998071196304	WITHOUT_CLASSIFICATION	1.9288036946804675E-7	DEFECT
// Ignore and keep trying	WITHOUT_CLASSIFICATION	0.9999999274913944	WITHOUT_CLASSIFICATION	7.250860557475067E-8	DEFECT
// Chunk part of previous env var (UNIX env vars can // contain embedded new lines).	WITHOUT_CLASSIFICATION	0.9999990464409173	WITHOUT_CLASSIFICATION	9.535590826447855E-7	DEFECT
// Since we "look ahead" before adding, there's one last env var.	WITHOUT_CLASSIFICATION	0.9999998841559055	WITHOUT_CLASSIFICATION	1.1584409455780924E-7	DEFECT
//noop default encoding used	WITHOUT_CLASSIFICATION	0.9999999966015236	WITHOUT_CLASSIFICATION	3.398476464693922E-9	DEFECT
// On OpenVMS Runtime#exec() doesn't support the environment array, // so we only return the new values which then will be set in // the generated DCL script, inheriting the parent process environment	WITHOUT_CLASSIFICATION	0.9999039676914465	WITHOUT_CLASSIFICATION	9.60323085535198E-5	DEFECT
// Locate the auxiliary script	WITHOUT_CLASSIFICATION	0.9999999675129012	WITHOUT_CLASSIFICATION	3.2487098809008814E-8	DEFECT
// Build the command	WITHOUT_CLASSIFICATION	0.9998101757892172	WITHOUT_CLASSIFICATION	1.89824210782882E-4	DEFECT
/*         * Writes the command into a temporary DCL script and returns the         * corresponding File object.  The script will be deleted on exit.         * @param cmd the command line to execute as an array of strings.         * @param env the environment to set as an array of strings.         * @return the command File.         * @throws IOException if errors are encountered creating the file.         */	WITHOUT_CLASSIFICATION	0.9999998631700888	WITHOUT_CLASSIFICATION	1.3682991114729928E-7	DEFECT
//************************************************************************ //  protected and private methods //************************************************************************	WITHOUT_CLASSIFICATION	0.9999333642947772	WITHOUT_CLASSIFICATION	6.663570522280137E-5	DEFECT
// ensure that parent dir of dest file exists!	WITHOUT_CLASSIFICATION	0.999998849340136	WITHOUT_CLASSIFICATION	1.1506598640175862E-6	DEFECT
// add the single group arguments // Javadoc 1.2 rules: //   Multiple -group args allowed. //   Each arg includes 3 strings: -group [name] [packagelist]. //   Elements in [packagelist] are colon-delimited. //   An element in [packagelist] may end with the * wildcard.	WITHOUT_CLASSIFICATION	0.9999999443381513	WITHOUT_CLASSIFICATION	5.5661848630251465E-8	DEFECT
// for each sourcePath entry, add a directoryset with includes // taken from packagenames attribute and nested package // elements and excludes taken from excludepackages attribute // and nested excludepackage elements	WITHOUT_CLASSIFICATION	0.9999996013096335	WITHOUT_CLASSIFICATION	3.9869036643381834E-7	DEFECT
// // Override the logging of output in order to filter out Generating // messages.  Generating messages are set to a priority of VERBOSE // unless they appear after what could be an informational message. //	WITHOUT_CLASSIFICATION	0.9999999970541421	WITHOUT_CLASSIFICATION	2.9458578366777175E-9	DEFECT
/* Methods below all add specific selectors */	WITHOUT_CLASSIFICATION	0.999999990774703	WITHOUT_CLASSIFICATION	9.22529695185383E-9	DEFECT
/* Methods below all add specific selectors */	WITHOUT_CLASSIFICATION	0.999999990774703	WITHOUT_CLASSIFICATION	9.22529695185383E-9	DEFECT
/* Methods below all add specific selectors */	WITHOUT_CLASSIFICATION	0.999999990774703	WITHOUT_CLASSIFICATION	9.22529695185383E-9	DEFECT
/*               If verbosity is MSG_VERBOSE, that mean we are doing               regular logging (backwards as that sounds).  In that               case, we want to print one message about deleting the               top of the directory tree.  Otherwise, the removeDir               method will handle messages for _all_ directories.             */	WITHOUT_CLASSIFICATION	0.999999998530068	WITHOUT_CLASSIFICATION	1.4699319694152563E-9	DEFECT
//hand down	WITHOUT_CLASSIFICATION	0.9999910410887027	WITHOUT_CLASSIFICATION	8.958911297232796E-6	DEFECT
// create intermediary directories - sometimes zip don't add them	WITHOUT_CLASSIFICATION	0.9999999845657938	WITHOUT_CLASSIFICATION	1.5434206196965975E-8	DEFECT
// SQL defines "--" as a comment to EOL // and in Oracle it may contain a hint // so we cannot just remove it, instead we must end it	WITHOUT_CLASSIFICATION	0.9999996711021981	WITHOUT_CLASSIFICATION	3.288978018727126E-7	DEFECT
/*         * In Ant 1.1, <chmod dir="foo" /> means, change the permissions         * of directory foo, not anything inside of it.  This is the case the         * second branch of the if statement below catches for backwards         * compatibility.         */	WITHOUT_CLASSIFICATION	0.9999988325668124	WITHOUT_CLASSIFICATION	1.167433187494526E-6	DEFECT
/* for historical and performance reasons we have to do               things in a rather complex way.               (1) Move is optimized to move directories if a fileset               has been included completely, therefore FileSets need a               special treatment.  This is also required to support               the failOnError semantice (skip filesets with broken               basedir but handle the remaining collections).               (2) We carry around a few protected methods that work               on basedirs and arrays of names.  To optimize stuff, all               resources with the same basedir get collected in               separate lists and then each list is handled in one go.            */	WITHOUT_CLASSIFICATION	0.9812257815179062	WITHOUT_CLASSIFICATION	0.018774218482093884	DEFECT
//we create a fileset with the source file. //this lets us combine our logic for handling output directories, //mapping etc.	WITHOUT_CLASSIFICATION	0.9999999990809835	WITHOUT_CLASSIFICATION	9.190165258898075E-10	DEFECT
// if input files are specified, inputString and inputStream are ignored; // classes that work with redirector attributes can enforce // whatever warnings are needed	WITHOUT_CLASSIFICATION	0.999996818470094	WITHOUT_CLASSIFICATION	3.181529906065468E-6	DEFECT
// Ignore exception	WITHOUT_CLASSIFICATION	0.9999997970566973	WITHOUT_CLASSIFICATION	2.0294330278351223E-7	DEFECT
// Ignore exception	WITHOUT_CLASSIFICATION	0.9999997970566973	WITHOUT_CLASSIFICATION	2.0294330278351223E-7	DEFECT
// Ignore exception	WITHOUT_CLASSIFICATION	0.9999997970566973	WITHOUT_CLASSIFICATION	2.0294330278351223E-7	DEFECT
// classpath attributes go into a vector	WITHOUT_CLASSIFICATION	0.999999926670357	WITHOUT_CLASSIFICATION	7.332964304401859E-8	DEFECT
// we have already started reading this section // this line is the first attribute. set it and then // let the normal read handle the rest	WITHOUT_CLASSIFICATION	0.9999999957245306	WITHOUT_CLASSIFICATION	4.275469426608015E-9	DEFECT
//not modified so no file download. just return //instead and trace out something so the user //doesn't think that the download happened when it //didn't	WITHOUT_CLASSIFICATION	0.9999998898805377	WITHOUT_CLASSIFICATION	1.1011946234135697E-7	DEFECT
// we have started to (over)write dest, but failed. // Try to delete the garbage we'd otherwise leave // behind.	WITHOUT_CLASSIFICATION	0.9999999495249993	WITHOUT_CLASSIFICATION	5.047500071953048E-8	DEFECT
// start() would throw IllegalThreadStateException from // ThreadGroup.add if it were destroyed	WITHOUT_CLASSIFICATION	0.9999999903361338	WITHOUT_CLASSIFICATION	9.663866125511302E-9	DEFECT
// kjc-1.5A doesn't support -encoding option now. // but it will be supported near the feature.	WITHOUT_CLASSIFICATION	0.9999920383366976	WITHOUT_CLASSIFICATION	7.961663302370265E-6	DEFECT
// Create an instance of the compiler, redirecting output to // the project log	WITHOUT_CLASSIFICATION	0.999999628603841	WITHOUT_CLASSIFICATION	3.713961590711331E-7	DEFECT
// Setup the apt executable	WITHOUT_CLASSIFICATION	0.9999992694803189	WITHOUT_CLASSIFICATION	7.305196810613845E-7	DEFECT
//On VMS platform, we need to create a special java options file //containing the arguments and classpath for the javac command. //The special file is supported by the "-V" switch on the VMS JVM.	WITHOUT_CLASSIFICATION	0.9999999790991383	WITHOUT_CLASSIFICATION	2.090086174235562E-8	DEFECT
//must keep for subclass BC, though unused: // CheckStyle:ConstantNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9999767410228441	WITHOUT_CLASSIFICATION	2.3258977155985453E-5	DEFECT
// CheckStyle:ConstantNameCheck ON // CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999371182178	WITHOUT_CLASSIFICATION	6.288178217887084E-8	DEFECT
// add dest dir to classpath so that previously compiled and // untouched classes are on classpath	WITHOUT_CLASSIFICATION	0.9999999684554544	WITHOUT_CLASSIFICATION	3.154454560757489E-8	DEFECT
// add dest dir to classpath so that previously compiled and // untouched classes are on classpath	WITHOUT_CLASSIFICATION	0.9999999684554544	WITHOUT_CLASSIFICATION	3.154454560757489E-8	DEFECT
// For -sourcepath, use the "sourcepath" value if present. // Otherwise default to the "srcdir" value.	WITHOUT_CLASSIFICATION	0.999999999895147	WITHOUT_CLASSIFICATION	1.0485304099828333E-10	DEFECT
/*             * Many system have been reported to get into trouble with             * long command lines - no, not only Windows ;-).             *             * POSIX seems to define a lower limit of 4k, so use a temporary             * file if the total length of the command line exceeds this limit.             */	WITHOUT_CLASSIFICATION	0.99995463678108	WITHOUT_CLASSIFICATION	4.536321892007888E-5	DEFECT
// there is a bootclasspath stated.  By default, the // includeJavaRuntime is false.  If the user has stated a // bootclasspath and said to include the java runtime, it's on // their head!	WITHOUT_CLASSIFICATION	0.9999995867004969	WITHOUT_CLASSIFICATION	4.132995031500259E-7	DEFECT
//The following is data used while processing stdout of CVS command	WITHOUT_CLASSIFICATION	0.9999996798656554	WITHOUT_CLASSIFICATION	3.2013434454843793E-7	DEFECT
// The date format is using a - format since 1.12.9 so we have: // 1.12.9-: 'date: YYYY/mm/dd HH:mm:ss;  author: name;' // 1.12.9+: 'date: YYYY-mm-dd HH:mm:ss Z;  author: name'	WITHOUT_CLASSIFICATION	0.9999974322161475	WITHOUT_CLASSIFICATION	2.567783852662069E-6	DEFECT
// Default the viewpath to basedir if it is not specified	WITHOUT_CLASSIFICATION	0.999999851533714	WITHOUT_CLASSIFICATION	1.4846628599669036E-7	DEFECT
// Default the viewpath to basedir if it is not specified	WITHOUT_CLASSIFICATION	0.999999851533714	WITHOUT_CLASSIFICATION	1.4846628599669036E-7	DEFECT
// viewpath	WITHOUT_CLASSIFICATION	0.999999482583705	WITHOUT_CLASSIFICATION	5.174162949990069E-7	DEFECT
// ClearCase items	WITHOUT_CLASSIFICATION	0.9999999834175937	WITHOUT_CLASSIFICATION	1.6582406310575717E-8	DEFECT
// ClearCase items	WITHOUT_CLASSIFICATION	0.9999999834175937	WITHOUT_CLASSIFICATION	1.6582406310575717E-8	DEFECT
// -branch	WITHOUT_CLASSIFICATION	0.9999998293730932	WITHOUT_CLASSIFICATION	1.706269067563428E-7	DEFECT
// -c	WITHOUT_CLASSIFICATION	0.9999983388687199	WITHOUT_CLASSIFICATION	1.6611312800227969E-6	DEFECT
// entries are of the form: //CVS 1.11 // File module/filename is new; current revision 1.1 //CVS 1.11.9 // File module/filename is new; cvstag_2003_11_03_2  revision 1.1 // or // File module/filename changed from revision 1.4 to 1.6 // or // File module/filename is removed; not included in // release tag SKINLF_12 //CVS 1.11.9 // File testantoine/antoine.bat is removed; TESTANTOINE_1 revision 1.1.1.1 // // get rid of 'File module/"	WITHOUT_CLASSIFICATION	0.999999868989008	WITHOUT_CLASSIFICATION	1.3101099208997227E-7	DEFECT
// CheckStyle:MemberNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.999997838294206	WITHOUT_CLASSIFICATION	2.1617057939889446E-6	DEFECT
// We need character encoding aware printing here. // So, using PrintWriter over OutputStreamWriter instead of PrintStream	WITHOUT_CLASSIFICATION	0.9999999349100702	WITHOUT_CLASSIFICATION	6.508992981244744E-8	DEFECT
// convert from ascii back to native // encoding to convert to/from // Where to find input files // Where to put output files // Extension of output files if different	WITHOUT_CLASSIFICATION	0.999999890473769	WITHOUT_CLASSIFICATION	1.0952623085230509E-7	DEFECT
// we are forced to fork ANTLR since there is a call // to System.exit() and there is nothing we can do // right now to avoid this. :-( (SBa) // I'm not removing this method to keep backward compatibility	WITHOUT_CLASSIFICATION	0.9999979551182503	WITHOUT_CLASSIFICATION	2.0448817496521614E-6	DEFECT
//error if both are empty, or both are set	WITHOUT_CLASSIFICATION	0.9999998464300305	WITHOUT_CLASSIFICATION	1.535699695286922E-7	DEFECT
// hasCR is still true (for the second one)	WITHOUT_CLASSIFICATION	0.9999839168409459	WITHOUT_CLASSIFICATION	1.608315905409556E-5	DEFECT
// should be the default, as it integrates better in ant.	WITHOUT_CLASSIFICATION	0.9999999137055757	WITHOUT_CLASSIFICATION	8.629442427346589E-8	DEFECT
// scan source and dest dirs to build up both copy lists and // compile lists //        scanDir(srcDir, destDir);	WITHOUT_CLASSIFICATION	0.9999999680350229	WITHOUT_CLASSIFICATION	3.1964977067039235E-8	DEFECT
// if it's a non source file, copy it if a later date than the // dest // if it's a source file, see if the destination class file // needs to be recreated via compilation	WITHOUT_CLASSIFICATION	0.9999999412382107	WITHOUT_CLASSIFICATION	5.876178943973481E-8	DEFECT
// depending on implementation, XMLReader can yield hips of warning, // only output then if user explicitly asked for it	WITHOUT_CLASSIFICATION	0.9998424831930697	WITHOUT_CLASSIFICATION	1.5751680693024223E-4	DEFECT
/* ========================================================================    *    * Instance variables.    */	WITHOUT_CLASSIFICATION	0.9999999797734498	WITHOUT_CLASSIFICATION	2.0226550265934294E-8	DEFECT
// swallow	WITHOUT_CLASSIFICATION	0.9999987347901225	WITHOUT_CLASSIFICATION	1.265209877513866E-6	DEFECT
// swallow	WITHOUT_CLASSIFICATION	0.9999987347901225	WITHOUT_CLASSIFICATION	1.265209877513866E-6	DEFECT
// swallow	WITHOUT_CLASSIFICATION	0.9999987347901225	WITHOUT_CLASSIFICATION	1.265209877513866E-6	DEFECT
// swallow	WITHOUT_CLASSIFICATION	0.9999987347901225	WITHOUT_CLASSIFICATION	1.265209877513866E-6	DEFECT
// If only default is specified and the property previously // existed in the property file, it is unchanged.	WITHOUT_CLASSIFICATION	0.9999999613006927	WITHOUT_CLASSIFICATION	3.869930735367505E-8	DEFECT
// make sure to close all handles, otherwise the garbage // collector will close them...whenever possible and // Windows may complain about not being able to delete files.	WITHOUT_CLASSIFICATION	0.9999999630825339	WITHOUT_CLASSIFICATION	3.691746610608424E-8	DEFECT
// WARN: Don't use the StreamSource(File) ctor. It won't work with // xalan prior to 2.2 because of systemid bugs.	WITHOUT_CLASSIFICATION	0.8945943547411207	WITHOUT_CLASSIFICATION	0.10540564525887934	DEFECT
// build the command line from what we got the format // as specified in the CCM.EXE help	WITHOUT_CLASSIFICATION	0.9999995058061905	WITHOUT_CLASSIFICATION	4.941938094506491E-7	DEFECT
// implementation of org.apache.tools.ant.taskdefs.ExecuteStreamHandler interface	WITHOUT_CLASSIFICATION	0.9999999598151975	WITHOUT_CLASSIFICATION	4.0184802371306165E-8	DEFECT
// Default the viewpath to basedir if it is not specified	WITHOUT_CLASSIFICATION	0.999999851533714	WITHOUT_CLASSIFICATION	1.4846628599669036E-7	DEFECT
// Default the viewpath to basedir if it is not specified	WITHOUT_CLASSIFICATION	0.999999851533714	WITHOUT_CLASSIFICATION	1.4846628599669036E-7	DEFECT
// Default the viewpath to basedir if it is not specified	WITHOUT_CLASSIFICATION	0.999999851533714	WITHOUT_CLASSIFICATION	1.4846628599669036E-7	DEFECT
// Default the viewpath to basedir if it is not specified	WITHOUT_CLASSIFICATION	0.999999851533714	WITHOUT_CLASSIFICATION	1.4846628599669036E-7	DEFECT
/*         * pre Ant 1.6 this method used to call getClass().getResource         * while Ant 1.6 will call ClassLoader.getResource().         *         * The difference is that Class.getResource expects a leading         * slash for "absolute" resources and will strip it before         * delegating to ClassLoader.getResource - so we now have to         * emulate Class's behavior.         */	WITHOUT_CLASSIFICATION	0.9999999376318904	WITHOUT_CLASSIFICATION	6.236810959073902E-8	DEFECT
// -c	WITHOUT_CLASSIFICATION	0.9999983388687199	WITHOUT_CLASSIFICATION	1.6611312800227969E-6	DEFECT
// -cfile	WITHOUT_CLASSIFICATION	0.9999995183586613	WITHOUT_CLASSIFICATION	4.816413386110364E-7	DEFECT
// -cfile	WITHOUT_CLASSIFICATION	0.9999995183586613	WITHOUT_CLASSIFICATION	4.816413386110364E-7	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999992385971012	WITHOUT_CLASSIFICATION	7.614028988400122E-7	DEFECT
/* ------------- */	WITHOUT_CLASSIFICATION	0.9999941870271206	WITHOUT_CLASSIFICATION	5.812972879362835E-6	DEFECT
// -I- or -I-Y or -I-N	WITHOUT_CLASSIFICATION	0.9999983085729554	WITHOUT_CLASSIFICATION	1.6914270446156408E-6	DEFECT
// -I- or -I-Y or -I-N	WITHOUT_CLASSIFICATION	0.9999983085729554	WITHOUT_CLASSIFICATION	1.6914270446156408E-6	DEFECT
// -I- or -I-Y or -I-N	WITHOUT_CLASSIFICATION	0.9999983085729554	WITHOUT_CLASSIFICATION	1.6914270446156408E-6	DEFECT
// first off, make sure that we've got a command and a vssdir and a label ...	WITHOUT_CLASSIFICATION	0.9999982236674818	WITHOUT_CLASSIFICATION	1.7763325181839358E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999998952218317	WITHOUT_CLASSIFICATION	1.0477816833988038E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999998952218317	WITHOUT_CLASSIFICATION	1.0477816833988038E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999998952218317	WITHOUT_CLASSIFICATION	1.0477816833988038E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999998952218317	WITHOUT_CLASSIFICATION	1.0477816833988038E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999998952218317	WITHOUT_CLASSIFICATION	1.0477816833988038E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999998952218317	WITHOUT_CLASSIFICATION	1.0477816833988038E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999998952218317	WITHOUT_CLASSIFICATION	1.0477816833988038E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999998952218317	WITHOUT_CLASSIFICATION	1.0477816833988038E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999998952218317	WITHOUT_CLASSIFICATION	1.0477816833988038E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999998952218317	WITHOUT_CLASSIFICATION	1.0477816833988038E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999998952218317	WITHOUT_CLASSIFICATION	1.0477816833988038E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999998952218317	WITHOUT_CLASSIFICATION	1.0477816833988038E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999998952218317	WITHOUT_CLASSIFICATION	1.0477816833988038E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999998952218317	WITHOUT_CLASSIFICATION	1.0477816833988038E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999998952218317	WITHOUT_CLASSIFICATION	1.0477816833988038E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999998952218317	WITHOUT_CLASSIFICATION	1.0477816833988038E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999998952218317	WITHOUT_CLASSIFICATION	1.0477816833988038E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999998952218317	WITHOUT_CLASSIFICATION	1.0477816833988038E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999998952218317	WITHOUT_CLASSIFICATION	1.0477816833988038E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999998952218317	WITHOUT_CLASSIFICATION	1.0477816833988038E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999998952218317	WITHOUT_CLASSIFICATION	1.0477816833988038E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999998952218317	WITHOUT_CLASSIFICATION	1.0477816833988038E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999998952218317	WITHOUT_CLASSIFICATION	1.0477816833988038E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999998952218317	WITHOUT_CLASSIFICATION	1.0477816833988038E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999998952218317	WITHOUT_CLASSIFICATION	1.0477816833988038E-7	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999992385971012	WITHOUT_CLASSIFICATION	7.614028988400122E-7	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999992385971012	WITHOUT_CLASSIFICATION	7.614028988400122E-7	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999992385971012	WITHOUT_CLASSIFICATION	7.614028988400122E-7	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999992385971012	WITHOUT_CLASSIFICATION	7.614028988400122E-7	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999992385971012	WITHOUT_CLASSIFICATION	7.614028988400122E-7	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999992385971012	WITHOUT_CLASSIFICATION	7.614028988400122E-7	DEFECT
/* -------------------- */	WITHOUT_CLASSIFICATION	0.9999911845074207	WITHOUT_CLASSIFICATION	8.815492579346621E-6	DEFECT
// -Y	WITHOUT_CLASSIFICATION	0.9999979408596613	WITHOUT_CLASSIFICATION	2.0591403386192365E-6	DEFECT
// -Y	WITHOUT_CLASSIFICATION	0.9999979408596613	WITHOUT_CLASSIFICATION	2.0591403386192365E-6	DEFECT
// -Y	WITHOUT_CLASSIFICATION	0.9999979408596613	WITHOUT_CLASSIFICATION	2.0591403386192365E-6	DEFECT
// VSS items	WITHOUT_CLASSIFICATION	0.9999996259966939	WITHOUT_CLASSIFICATION	3.74003306025135E-7	DEFECT
// VSS items	WITHOUT_CLASSIFICATION	0.9999996259966939	WITHOUT_CLASSIFICATION	3.74003306025135E-7	DEFECT
// skip version info and general purpose byte	WITHOUT_CLASSIFICATION	0.9999999554963599	WITHOUT_CLASSIFICATION	4.450364012784054E-8	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999992385971012	WITHOUT_CLASSIFICATION	7.614028988400122E-7	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999992385971012	WITHOUT_CLASSIFICATION	7.614028988400122E-7	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999992385971012	WITHOUT_CLASSIFICATION	7.614028988400122E-7	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999992385971012	WITHOUT_CLASSIFICATION	7.614028988400122E-7	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999992385971012	WITHOUT_CLASSIFICATION	7.614028988400122E-7	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999992385971012	WITHOUT_CLASSIFICATION	7.614028988400122E-7	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999992385971012	WITHOUT_CLASSIFICATION	7.614028988400122E-7	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999992385971012	WITHOUT_CLASSIFICATION	7.614028988400122E-7	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999992385971012	WITHOUT_CLASSIFICATION	7.614028988400122E-7	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999992385971012	WITHOUT_CLASSIFICATION	7.614028988400122E-7	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999992385971012	WITHOUT_CLASSIFICATION	7.614028988400122E-7	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999992385971012	WITHOUT_CLASSIFICATION	7.614028988400122E-7	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999992385971012	WITHOUT_CLASSIFICATION	7.614028988400122E-7	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999992385971012	WITHOUT_CLASSIFICATION	7.614028988400122E-7	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999992385971012	WITHOUT_CLASSIFICATION	7.614028988400122E-7	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999992385971012	WITHOUT_CLASSIFICATION	7.614028988400122E-7	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999992385971012	WITHOUT_CLASSIFICATION	7.614028988400122E-7	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999992385971012	WITHOUT_CLASSIFICATION	7.614028988400122E-7	DEFECT
// first off, make sure that we've got a command and a vssdir and a label ...	WITHOUT_CLASSIFICATION	0.9999982236674818	WITHOUT_CLASSIFICATION	1.7763325181839358E-6	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999992385971012	WITHOUT_CLASSIFICATION	7.614028988400122E-7	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999992385971012	WITHOUT_CLASSIFICATION	7.614028988400122E-7	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999992385971012	WITHOUT_CLASSIFICATION	7.614028988400122E-7	DEFECT
// we get the root classes and build up a set of // classes upon which they depend	WITHOUT_CLASSIFICATION	0.9999997631236142	WITHOUT_CLASSIFICATION	2.3687638577244802E-7	DEFECT
// read the constant pool in and resolve it	WITHOUT_CLASSIFICATION	0.9999960707762661	WITHOUT_CLASSIFICATION	3.929223733864204E-6	DEFECT
/*         * Use the Runtime object to execute an external command.  Use the         * RedirectOutput inner class to direct the standard and error output         * from the command to the JRE's standard output         */	WITHOUT_CLASSIFICATION	0.9999812073425305	WITHOUT_CLASSIFICATION	1.879265746946222E-5	DEFECT
/*         * Two Maps are used to track local DTDs that will be used in case the         * remote copies of these DTDs cannot be accessed.  The key for the Map         * is the DTDs public ID and the value is the local location for the DTD         */	WITHOUT_CLASSIFICATION	0.9999999741497867	WITHOUT_CLASSIFICATION	2.585021331900862E-8	DEFECT
// depFile exists and is newer than the class file // need to get dependency list from the map.	WITHOUT_CLASSIFICATION	0.9998529829453606	WITHOUT_CLASSIFICATION	1.4701705463942712E-4	DEFECT
// without closure we may delete an inner class but not the // top level class which would not trigger a recompile.	WITHOUT_CLASSIFICATION	0.9999998662173515	WITHOUT_CLASSIFICATION	1.3378264861364405E-7	DEFECT
//always trigger file mode if commands are big enough	WITHOUT_CLASSIFICATION	0.9998711554502514	WITHOUT_CLASSIFICATION	1.2884454974855658E-4	DEFECT
//fill in args	WITHOUT_CLASSIFICATION	0.9999964901529635	WITHOUT_CLASSIFICATION	3.5098470363794854E-6	DEFECT
//fill in args	WITHOUT_CLASSIFICATION	0.9999964901529635	WITHOUT_CLASSIFICATION	3.5098470363794854E-6	DEFECT
//iterate through the ref list & generate an entry for each //or just rely on the fact that the toString operator does this, but //noting that the separator is ';' on windows, ':' on unix	WITHOUT_CLASSIFICATION	0.9981796070129197	WITHOUT_CLASSIFICATION	0.0018203929870801974	DEFECT
//now run the command of exe + settings + files	WITHOUT_CLASSIFICATION	0.9999354809979197	WITHOUT_CLASSIFICATION	6.451900208025552E-5	DEFECT
/*     * Directory where "source" EJB files are stored and where stubs and     * skeletons will also be written.     */	WITHOUT_CLASSIFICATION	0.9999975044508119	WITHOUT_CLASSIFICATION	2.49554918802782E-6	DEFECT
/*     * This Hashtable maintains a list of EJB class files processed by the ejbc     * utility (both "source" class files as well as stubs and skeletons). The     * key for the Hashtable is a String representing the path to the class file     * (relative to the destination directory).  The value for the Hashtable is     * a File object which reference the actual class file.     */	WITHOUT_CLASSIFICATION	0.9999999999565818	WITHOUT_CLASSIFICATION	4.341810097449486E-11	DEFECT
/* Execute the ejbc utility -- stubs/skeletons are rebuilt, if needed */	WITHOUT_CLASSIFICATION	0.9999999672257228	WITHOUT_CLASSIFICATION	3.27742771018268E-8	DEFECT
// EJB's display name // EJB's home interface name // EJB's remote interface name // EJB's implementation class // EJB's primary key class // or "stateful" or "stateless" // Does this EJB support CMP? // Does this EJB support IIOP? // Does this EJB require failover? // CMP descriptor list	WITHOUT_CLASSIFICATION	0.9292506261962172	WITHOUT_CLASSIFICATION	0.07074937380378277	DEFECT
/* Check the timestamp on the EJB implementation class.             *             * Note that if ONLY the implementation class has changed, it's not             * necessary to rebuild the EJB stubs and skeletons.  For this             * reason, we ensure the file exists (using lastModified above), but             * we DON'T compare it's timestamp with the timestamps of the home             * and remote interfaces (because it's irrelevant in determining if             * ejbc must be run)             */	WITHOUT_CLASSIFICATION	0.9999999250275491	WITHOUT_CLASSIFICATION	7.497245091617095E-8	DEFECT
//classpath //add at the end of the classpath //the system classpath in order to find the tools.jar file	WITHOUT_CLASSIFICATION	0.9999986528416646	WITHOUT_CLASSIFICATION	1.347158335480403E-6	DEFECT
// ejb jar file	WITHOUT_CLASSIFICATION	0.9999999630123811	WITHOUT_CLASSIFICATION	3.6987618804909136E-8	DEFECT
//client jar file	WITHOUT_CLASSIFICATION	0.9999999485216144	WITHOUT_CLASSIFICATION	5.147838554014489E-8	DEFECT
// Have to catch this because of the semantics of calling main()	WITHOUT_CLASSIFICATION	0.9999984257923855	WITHOUT_CLASSIFICATION	1.574207614429194E-6	DEFECT
/* ------------- */	WITHOUT_CLASSIFICATION	0.9999941870271206	WITHOUT_CLASSIFICATION	5.812972879362835E-6	DEFECT
/* ------------- */	WITHOUT_CLASSIFICATION	0.9999941870271206	WITHOUT_CLASSIFICATION	5.812972879362835E-6	DEFECT
// descriptorName = <path><basename><basenameterminator><remainder> // examples = /org/objectweb/fooAppli/foo/Foo-ejb-jar.xml // examples = /org/objectweb/fooAppli/foo/Foo.xml (JOnAS convention)	WITHOUT_CLASSIFICATION	0.9999997003238156	WITHOUT_CLASSIFICATION	2.996761844471597E-7	DEFECT
// class name (search in the classpath provided for the ejbjar element)	WITHOUT_CLASSIFICATION	0.9999997827116988	WITHOUT_CLASSIFICATION	2.1728830127934926E-7	DEFECT
// additionalargs	WITHOUT_CLASSIFICATION	0.9999993541010885	WITHOUT_CLASSIFICATION	6.458989113510396E-7	DEFECT
// get all the files in the descriptor directory	WITHOUT_CLASSIFICATION	0.9999989269444437	WITHOUT_CLASSIFICATION	1.073055556294993E-6	DEFECT
// If an explicit securityPolicy file was specified, it maybe an // absolute path.  Use the project to resolve it.	WITHOUT_CLASSIFICATION	0.9999999117067061	WITHOUT_CLASSIFICATION	8.829329398758961E-8	DEFECT
// Since the descriptor read properly, everything should be o.k.	WITHOUT_CLASSIFICATION	0.9999996807240356	WITHOUT_CLASSIFICATION	3.1927596443479075E-7	DEFECT
// Lastly create File object for the Jar files. If we are using // a flat destination dir, then we need to redefine baseName!	WITHOUT_CLASSIFICATION	0.9999999991822944	WITHOUT_CLASSIFICATION	8.177055308477336E-10	DEFECT
/*         * For the GenericDeploymentTool, do nothing.  Vendor specific         * subclasses should throw a BuildException if the configuration is         * invalid for their server.         */	WITHOUT_CLASSIFICATION	0.9999999995360889	WITHOUT_CLASSIFICATION	4.6391108082182064E-10	DEFECT
// Get the filename of vendor specific descriptor	WITHOUT_CLASSIFICATION	0.9999999947909903	WITHOUT_CLASSIFICATION	5.209009625481146E-9	DEFECT
// now that we have the weblogic descriptor, we parse the file // to find other descriptors needed to deploy the bean. // this could be the weblogic-cmp-rdbms.xml or any other O/R // mapping tool descriptors.	WITHOUT_CLASSIFICATION	0.9999997384505229	WITHOUT_CLASSIFICATION	2.6154947710966273E-7	DEFECT
// Update with changed Bean class	WITHOUT_CLASSIFICATION	0.9999884405695737	WITHOUT_CLASSIFICATION	1.1559430426328029E-5	DEFECT
// need to close files and perhaps rename output	WITHOUT_CLASSIFICATION	0.9999995643411165	WITHOUT_CLASSIFICATION	4.356588834688097E-7	DEFECT
// empty	WITHOUT_CLASSIFICATION	0.9999983084942884	WITHOUT_CLASSIFICATION	1.6915057116291654E-6	DEFECT
// empty	WITHOUT_CLASSIFICATION	0.9999983084942884	WITHOUT_CLASSIFICATION	1.6915057116291654E-6	DEFECT
// are any of the above out of date. // we find the implementation classes and see if they are older than any // of the above or the .ser file itself.	WITHOUT_CLASSIFICATION	0.9999998973196645	WITHOUT_CLASSIFICATION	1.0268033550614646E-7	DEFECT
/*     * Filenames of the standard EJB descriptor (which is passed to this class     * from the parent "ejbjar" task) and the iAS-specific EJB descriptor     * (whose name is determined by this class).  Both filenames are relative     * to the directory specified by the "srcdir" attribute in the ejbjar task.     */	WITHOUT_CLASSIFICATION	0.9999999860953704	WITHOUT_CLASSIFICATION	1.3904629557179343E-8	DEFECT
//remove the .class	WITHOUT_CLASSIFICATION	0.9999937682956674	WITHOUT_CLASSIFICATION	6.231704332538664E-6	DEFECT
// create the output .jar, if required	WITHOUT_CLASSIFICATION	0.9999999734766344	WITHOUT_CLASSIFICATION	2.652336567170261E-8	DEFECT
// change this to get the objects from the other reference	WITHOUT_CLASSIFICATION	0.9999999450919179	WITHOUT_CLASSIFICATION	5.4908082151153126E-8	DEFECT
// Available specification version must be >= required	WITHOUT_CLASSIFICATION	0.9999999038831956	WITHOUT_CLASSIFICATION	9.611680446550087E-8	DEFECT
// Implementation version must be >= required	WITHOUT_CLASSIFICATION	0.9999978320626796	WITHOUT_CLASSIFICATION	2.167937320385493E-6	DEFECT
//WARNING: We trim the values of all the attributes because //Some extension declarations are badly defined (ie have spaces //after version or vendorID)	WITHOUT_CLASSIFICATION	0.9998834565915302	WITHOUT_CLASSIFICATION	1.1654340846983337E-4	DEFECT
/*     * Validates URL     */	WITHOUT_CLASSIFICATION	0.999999220924481	WITHOUT_CLASSIFICATION	7.790755189503862E-7	DEFECT
// the new value, this needs to be here // because it is required to calculate the next position to // search from at the end of the loop	WITHOUT_CLASSIFICATION	0.9998256535706386	WITHOUT_CLASSIFICATION	1.7434642936145527E-4	DEFECT
// iterator through all the files and process them.	WITHOUT_CLASSIFICATION	0.9999999653202686	WITHOUT_CLASSIFICATION	3.4679731501310084E-8	DEFECT
// keys to optional attributes	WITHOUT_CLASSIFICATION	0.9999998439301493	WITHOUT_CLASSIFICATION	1.5606985065120756E-7	DEFECT
// use the directory containing the target as the output directory	WITHOUT_CLASSIFICATION	0.9999999998616291	WITHOUT_CLASSIFICATION	1.3837080345216736E-10	DEFECT
// null watchdog means no timeout, you'd better not check with null	WITHOUT_CLASSIFICATION	0.999989358040515	WITHOUT_CLASSIFICATION	1.0641959485095928E-5	DEFECT
/*         * pre Ant 1.6 this method used to call getClass().getResource         * while Ant 1.6 will call ClassLoader.getResource().         *         * The difference is that Class.getResource expects a leading         * slash for "absolute" resources and will strip it before         * delegating to ClassLoader.getResource - so we now have to         * emulate Class's behavior.         */	WITHOUT_CLASSIFICATION	0.9999999376318904	WITHOUT_CLASSIFICATION	6.236810959073902E-8	DEFECT
// this comment extract from JUnit Task may also apply here // "in VM is not very nice since it could probably hang the // whole build. IMHO this method should be avoided and it would be best // to remove it in future versions. TBD. (SBa)"	WITHOUT_CLASSIFICATION	0.6662401923251783	WITHOUT_CLASSIFICATION	0.3337598076748218	DEFECT
// not necessary as JDepend would fail, but why loose // some time?	WITHOUT_CLASSIFICATION	0.9995065484167591	WITHOUT_CLASSIFICATION	4.934515832409498E-4	DEFECT
// not necessary as JDepend would fail, but why loose // some time?	WITHOUT_CLASSIFICATION	0.9995065484167591	WITHOUT_CLASSIFICATION	4.934515832409498E-4	DEFECT
// not necessary as JDepend would fail, but why loose // some time?	WITHOUT_CLASSIFICATION	0.9995065484167591	WITHOUT_CLASSIFICATION	4.934515832409498E-4	DEFECT
//do nothing	WITHOUT_CLASSIFICATION	0.9999979347159165	WITHOUT_CLASSIFICATION	2.065284083608523E-6	DEFECT
//do nothing	WITHOUT_CLASSIFICATION	0.9999979347159165	WITHOUT_CLASSIFICATION	2.065284083608523E-6	DEFECT
//If we get here, it could be because we are trying to put a //directory entry that already exists. //For example, we're trying to write "com", but a previous //entry from another mergefile was called "com". //In that case, just ignore the error and go on to the //next entry.	WITHOUT_CLASSIFICATION	0.9999999986320545	WITHOUT_CLASSIFICATION	1.3679456214595876E-9	DEFECT
/*          First, some notes.          On MRJ 2.2.2, getting the size, compressed size, and CRC32 from the          ZipInputStream does not work for compressed (deflated) files.  Those calls return -1.          For uncompressed (stored) files, those calls do work.          However, using ZipFile.getEntries() works for both compressed and          uncompressed files.          Now, from some simple testing I did, it seems that the value of CRC-32 is          independent of the compression setting. So, it should be easy to pass this          information on to the output entry.        */	WITHOUT_CLASSIFICATION	0.8278296290179752	WITHOUT_CLASSIFICATION	0.17217037098202484	DEFECT
// Quick return - no output do nothing.	WITHOUT_CLASSIFICATION	0.999999928869947	WITHOUT_CLASSIFICATION	7.113005304613673E-8	DEFECT
// Self-describing as of JUnit 4 (#38811). But trim "(ClassName)".	WITHOUT_CLASSIFICATION	0.999996502686951	WITHOUT_CLASSIFICATION	3.4973130491138537E-6	DEFECT
//the trick to integrating test output to the formatter, is to //create a special test class that asserts an error //and tell the formatter that it raised.	WITHOUT_CLASSIFICATION	0.9999999354195273	WITHOUT_CLASSIFICATION	6.458047268749845E-8	DEFECT
// ignored.	WITHOUT_CLASSIFICATION	0.9999998615293759	WITHOUT_CLASSIFICATION	1.384706240499855E-7	DEFECT
/*         * pre Ant 1.6 this method used to call getClass().getResource         * while Ant 1.6 will call ClassLoader.getResource().         *         * The difference is that Class.getResource expects a leading         * slash for "absolute" resources and will strip it before         * delegating to ClassLoader.getResource - so we now have to         * emulate Class's behavior.         */	WITHOUT_CLASSIFICATION	0.9999999376318904	WITHOUT_CLASSIFICATION	6.236810959073902E-8	DEFECT
// okay we have a copy of the child, now the child becomes the parent // and we are iterating recursively over its children.	WITHOUT_CLASSIFICATION	0.9999999930193086	WITHOUT_CLASSIFICATION	6.9806914183968E-9	DEFECT
// See wrapListener for reason:	WITHOUT_CLASSIFICATION	0.9999995466933247	WITHOUT_CLASSIFICATION	4.5330667524414834E-7	DEFECT
// if there is a suite method available, then try // to extract the suite from it. If there is an error // here it will be caught below and reported.	WITHOUT_CLASSIFICATION	0.9988777492871527	WITHOUT_CLASSIFICATION	0.0011222507128473256	DEFECT
// JUnit 4 does not distinguish between errors and failures // even in the JUnit 3 adapter. // So we need to help it a bit to retain compatibility for JUnit 3 tests.	WITHOUT_CLASSIFICATION	0.9999107665960595	WITHOUT_CLASSIFICATION	8.923340394051825E-5	DEFECT
// sorted by newest Kaffe version first	WITHOUT_CLASSIFICATION	0.9999994028578271	WITHOUT_CLASSIFICATION	5.971421728902339E-7	DEFECT
//getProject().log("listing files in directory " + directory, Project.MSG_DEBUG);	WITHOUT_CLASSIFICATION	0.9999992918373475	WITHOUT_CLASSIFICATION	7.08162652428467E-7	DEFECT
// to remove directories, start by the end of the list // the trunk does not let itself be removed before the leaves	WITHOUT_CLASSIFICATION	0.9999990455563695	WITHOUT_CLASSIFICATION	9.544436304626206E-7	DEFECT
// ignore it	WITHOUT_CLASSIFICATION	0.9999997315026191	WITHOUT_CLASSIFICATION	2.6849738094451974E-7	DEFECT
// NumberFormatException or ArrayOutOfBondsException could happen here	WITHOUT_CLASSIFICATION	0.9999924324240642	WITHOUT_CLASSIFICATION	7.567575935882491E-6	DEFECT
//Throw exception on errors (except up-to-date) // //When a server is down, the code expects : //Perforce client error: //Connect to server failed; check $P4PORT. //TCP connect to localhost:1666 failed. //connect: localhost:1666: Connection refused //Some forms producing commands (p4 -s change -o) do tag the output //others don't..... //Others mark errors as info, for example edit a file //which is already open for edit..... //Just look for error: - catches most things....	WITHOUT_CLASSIFICATION	0.9999988981366452	WITHOUT_CLASSIFICATION	1.1018633546847828E-6	DEFECT
// Because of the way I create the full target path, there // must be NO slash at the end of targetFolder and folderName // However, if the slash or backslash is the only character, leave it alone	WITHOUT_CLASSIFICATION	0.9999996774938134	WITHOUT_CLASSIFICATION	3.225061867142043E-7	DEFECT
// Connect to the StarTeam server, and log on.	WITHOUT_CLASSIFICATION	0.9999998875162222	WITHOUT_CLASSIFICATION	1.1248377783338882E-7	DEFECT
// Simplest constructor, uses default encryption algorithm and compression level.	WITHOUT_CLASSIFICATION	0.9999999903523377	WITHOUT_CLASSIFICATION	9.647662371688304E-9	DEFECT
// Create a variable dir that contains the name of // the StarTeam folder that is the root folder in this view. // Get the default path to the current view.	WITHOUT_CLASSIFICATION	0.9999999933118012	WITHOUT_CLASSIFICATION	6.688198762750289E-9	DEFECT
// We want to display the folder the same way you would // enter it on the command line ... so we remove the // View name (which is also the name of the root folder, // and therefore shows up at the start of the path).	WITHOUT_CLASSIFICATION	0.9999946104402451	WITHOUT_CLASSIFICATION	5.389559754958123E-6	DEFECT
// If we displayed the project, view, item type, or folder, // then show the list of relevant item properties.	WITHOUT_CLASSIFICATION	0.9999999979090355	WITHOUT_CLASSIFICATION	2.0909645253155655E-9	DEFECT
// If we find a "file" attribute then act on a file otherwise act on a project	WITHOUT_CLASSIFICATION	0.9999999593072523	WITHOUT_CLASSIFICATION	4.069274782491541E-8	DEFECT
// Special setters for the sub-classes	WITHOUT_CLASSIFICATION	0.9999999774615669	WITHOUT_CLASSIFICATION	2.2538433165176807E-8	DEFECT
// Special setters for the sub-classes	WITHOUT_CLASSIFICATION	0.9999999774615669	WITHOUT_CLASSIFICATION	2.2538433165176807E-8	DEFECT
// Login info is required	WITHOUT_CLASSIFICATION	0.999966617078411	WITHOUT_CLASSIFICATION	3.33829215891377E-5	DEFECT
// Path to the SourceOffSite home directory /home/user/.sos	WITHOUT_CLASSIFICATION	0.999999908912196	WITHOUT_CLASSIFICATION	9.108780389381453E-8	DEFECT
// Check if source is a directory	WITHOUT_CLASSIFICATION	0.9999996756592355	WITHOUT_CLASSIFICATION	3.243407645234779E-7	DEFECT
/*             *  There is a bug in JavaSound 0.90 (jdk1.3beta).             *  It prevents correct termination of the VM.             *  So we have to exit ourselves.             */	WITHOUT_CLASSIFICATION	0.9338259517404559	WITHOUT_CLASSIFICATION	0.06617404825954401	DEFECT
// Catch everything - some of the above return nulls, // throw exceptions or generally misbehave // in the event of a problem etc	WITHOUT_CLASSIFICATION	0.9997436524252596	WITHOUT_CLASSIFICATION	2.5634757474028496E-4	DEFECT
// only track progress for files larger than 100kb in verbose mode	WITHOUT_CLASSIFICATION	0.9999757162780305	WITHOUT_CLASSIFICATION	2.4283721969450665E-5	DEFECT
// only track progress for files larger than 100kb in verbose mode	WITHOUT_CLASSIFICATION	0.9999757162780305	WITHOUT_CLASSIFICATION	2.4283721969450665E-5	DEFECT
// since filesize keeps on decreasing we have to store the // initial filesize	WITHOUT_CLASSIFICATION	0.9999999957443743	WITHOUT_CLASSIFICATION	4.2556257121973075E-9	DEFECT
// note, it's important to scan the items BEFORE we make the // UnmatchedFileMap because that creates a bunch of NEW // folders and files (unattached to repository) and we // don't want to include those in our traversal.	WITHOUT_CLASSIFICATION	0.9999999339131734	WITHOUT_CLASSIFICATION	6.608682650759274E-8	DEFECT
// If the file doesn't pass the include/exclude tests, skip it.	WITHOUT_CLASSIFICATION	0.9999998129680947	WITHOUT_CLASSIFICATION	1.8703190520840605E-7	DEFECT
// If the file doesn't pass the include/exclude tests, skip it.	WITHOUT_CLASSIFICATION	0.9999998129680947	WITHOUT_CLASSIFICATION	1.8703190520840605E-7	DEFECT
// We try to update the status once to give StarTeam // another chance.	WITHOUT_CLASSIFICATION	0.999999997966676	WITHOUT_CLASSIFICATION	2.0333238912794825E-9	DEFECT
// note, it's important to scan the items BEFORE we make the // Unmatched file map because that creates a bunch of NEW // folders and files (unattached to repository) and we // don't want to include those in our traversal.	WITHOUT_CLASSIFICATION	0.999999842867184	WITHOUT_CLASSIFICATION	1.5713281609874734E-7	DEFECT
// once we find a folder that isn't in the repository, // anything below it can be deleted.	WITHOUT_CLASSIFICATION	0.9999990460427272	WITHOUT_CLASSIFICATION	9.539572728259197E-7	DEFECT
/////////////////////////////////////////////////////////////// // default values for attributes. ///////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999999495713531	WITHOUT_CLASSIFICATION	5.042864695229918E-8	DEFECT
// default behavior is to fail on an error // default behavior is to not overwrite // default behavior is make a single link	WITHOUT_CLASSIFICATION	0.9999438258884372	WITHOUT_CLASSIFICATION	5.6174111562830434E-5	DEFECT
// build the command line from what we got the format is // ss Add VSS items [-B] [-C] [-D-] [-H] [-I-] [-K] [-N] [-O] [-R] [-W] [-Y] [-?] // as specified in the SS.EXE help	WITHOUT_CLASSIFICATION	0.999999947720755	WITHOUT_CLASSIFICATION	5.2279245027161054E-8	DEFECT
// build the command line from what we got the format is // ss Checkout VSS items [-G] [-C] [-H] [-I-] [-N] [-O] [-R] [-V] [-Y] [-?] // as specified in the SS.EXE help	WITHOUT_CLASSIFICATION	0.999999975820203	WITHOUT_CLASSIFICATION	2.417979700033335E-8	DEFECT
// Not a .class file or the one we'd generate	WITHOUT_CLASSIFICATION	0.9999999640195443	WITHOUT_CLASSIFICATION	3.598045561581364E-8	DEFECT
// We have the loader which is being used to load the // CatalogResolver. Can it see the ApacheResolver? The // base resolver will only be able to create the ApacheResolver // if it can see it - doesn't use the context loader.	WITHOUT_CLASSIFICATION	0.9999998834718564	WITHOUT_CLASSIFICATION	1.165281435897679E-7	DEFECT
// // Use the passed in base in preference to the base // from matchingEntry, which is either null or the // directory in which the external catalog file from // which it was obtained is located.  We make a copy // so matchingEntry's original base is untouched. // // This is the standard behavior as per my reading of // the JAXP and XML Catalog specs.  CKS 11/7/2002 //	WITHOUT_CLASSIFICATION	0.9999999998539947	WITHOUT_CLASSIFICATION	1.4600525298447564E-10	DEFECT
// // Get Method instances for each of the methods we need to // call on the resolverImpl using reflection.  We can't // call them directly, because they require on the // xml-commons resolver library which may not be available // in the classpath. //	WITHOUT_CLASSIFICATION	0.9999936600379682	WITHOUT_CLASSIFICATION	6.339962031903594E-6	DEFECT
// // We didn't match a ResourceLocation, but since we // only support PUBLIC and URI entry types internally, // it is still possible that there is another entry in // an external catalog that will match.  We call // Apache resolver's resolveEntity method to cover // this possibility. //	WITHOUT_CLASSIFICATION	0.9888601000968057	WITHOUT_CLASSIFICATION	0.011139899903194382	DEFECT
// record data about the last scanned resource	WITHOUT_CLASSIFICATION	0.9999998779892039	WITHOUT_CLASSIFICATION	1.2201079617245114E-7	DEFECT
// path containing one or more elements	WITHOUT_CLASSIFICATION	0.9999999880459588	WITHOUT_CLASSIFICATION	1.1954041134929242E-8	DEFECT
// just append beginToken and search further	WITHOUT_CLASSIFICATION	0.9999998407385293	WITHOUT_CLASSIFICATION	1.5926147062249256E-7	DEFECT
//create the command to run Java, including user specified options	WITHOUT_CLASSIFICATION	0.9999999833682536	WITHOUT_CLASSIFICATION	1.6631746344516968E-8	DEFECT
// JDK usage command line says that -jar must be the first option, as there is // a bug in JDK < 1.4 that forces the jvm type to be specified as the first // option, it is appended here as specified in the docs even though there is // in fact no order.	WITHOUT_CLASSIFICATION	0.9999987208306338	WITHOUT_CLASSIFICATION	1.2791693661591202E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999998952218317	WITHOUT_CLASSIFICATION	1.0477816833988038E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999998952218317	WITHOUT_CLASSIFICATION	1.0477816833988038E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999998952218317	WITHOUT_CLASSIFICATION	1.0477816833988038E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999998952218317	WITHOUT_CLASSIFICATION	1.0477816833988038E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999998952218317	WITHOUT_CLASSIFICATION	1.0477816833988038E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999998952218317	WITHOUT_CLASSIFICATION	1.0477816833988038E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999998952218317	WITHOUT_CLASSIFICATION	1.0477816833988038E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999998952218317	WITHOUT_CLASSIFICATION	1.0477816833988038E-7	DEFECT
/* now check each Resource in case the child only           lets through files from any children IT may have: */	WITHOUT_CLASSIFICATION	0.9998149735326949	WITHOUT_CLASSIFICATION	1.8502646730514703E-4	DEFECT
// Quick return: directories cannot be signed	WITHOUT_CLASSIFICATION	0.9998152263185639	WITHOUT_CLASSIFICATION	1.8477368143605182E-4	DEFECT
/**     * When using this as a custom selector, this method will be called.     * It translates each parameter into the appropriate setXXX() call.     *     * @param parameters the complete set of parameters for this selector     */	WITHOUT_CLASSIFICATION	0.9999982272023369	WITHOUT_CLASSIFICATION	1.7727976631977226E-6	DEFECT
/**     * When using this as a custom selector, this method will be called.     * It translates each parameter into the appropriate setXXX() call.     *     * @param parameters the complete set of parameters for this selector     */	WITHOUT_CLASSIFICATION	0.9999982272023369	WITHOUT_CLASSIFICATION	1.7727976631977226E-6	DEFECT
/**     * When using this as a custom selector, this method will be called.     * It translates each parameter into the appropriate setXXX() call.     *     * @param parameters the complete set of parameters for this selector     */	WITHOUT_CLASSIFICATION	0.9999982272023369	WITHOUT_CLASSIFICATION	1.7727976631977226E-6	DEFECT
/**     * When using this as a custom selector, this method will be called.     * It translates each parameter into the appropriate setXXX() call.     *     * @param parameters the complete set of parameters for this selector     */	WITHOUT_CLASSIFICATION	0.9999982272023369	WITHOUT_CLASSIFICATION	1.7727976631977226E-6	DEFECT
/**     * When using this as a custom selector, this method will be called.     * It translates each parameter into the appropriate setXXX() call.     *     * @param parameters the complete set of parameters for this selector     */	WITHOUT_CLASSIFICATION	0.9999982272023369	WITHOUT_CLASSIFICATION	1.7727976631977226E-6	DEFECT
/**     * When using this as a custom selector, this method will be called.     * It translates each parameter into the appropriate setXXX() call.     *     * @param parameters the complete set of parameters for this selector.     */	WITHOUT_CLASSIFICATION	0.9999989306069931	WITHOUT_CLASSIFICATION	1.0693930069121695E-6	DEFECT
// // -----  Set default values  ----- //	WITHOUT_CLASSIFICATION	0.9999999548180014	WITHOUT_CLASSIFICATION	4.518199852014489E-8	DEFECT
// nothing specified - use default	WITHOUT_CLASSIFICATION	0.9999999994456741	WITHOUT_CLASSIFICATION	5.543259465650847E-10	DEFECT
// How to handle non-file-Resources? I copy temporarily the // resource to a file and use the file-implementation.	WITHOUT_CLASSIFICATION	0.9999999988767204	WITHOUT_CLASSIFICATION	1.1232796828966077E-9	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9999989488507218	WITHOUT_CLASSIFICATION	1.0511492781865044E-6	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9999989488507218	WITHOUT_CLASSIFICATION	1.0511492781865044E-6	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9999989488507218	WITHOUT_CLASSIFICATION	1.0511492781865044E-6	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9999989488507218	WITHOUT_CLASSIFICATION	1.0511492781865044E-6	DEFECT
//find the out-of-date targets:	WITHOUT_CLASSIFICATION	0.9999999882493138	WITHOUT_CLASSIFICATION	1.175068617265868E-8	DEFECT
// write namespace declarations	WITHOUT_CLASSIFICATION	0.9999999951851395	WITHOUT_CLASSIFICATION	4.814860481584502E-9	DEFECT
// Extrapolating from: // "NetWare may have a "java" in that directory, but 99% of // the time, you don't want to execute it" -- Jeff Tulley // <JTULLEY@novell.com>	WITHOUT_CLASSIFICATION	0.9996375607009714	WITHOUT_CLASSIFICATION	3.6243929902850236E-4	DEFECT
// fall through	WITHOUT_CLASSIFICATION	0.9999886859597789	WITHOUT_CLASSIFICATION	1.1314040221023305E-5	DEFECT
// fall through	WITHOUT_CLASSIFICATION	0.9999886859597789	WITHOUT_CLASSIFICATION	1.1314040221023305E-5	DEFECT
// Check for bsf first then javax // This version does not check if the scriptManager // supports the language.	WITHOUT_CLASSIFICATION	0.9999990016718932	WITHOUT_CLASSIFICATION	9.983281069349403E-7	DEFECT
// NotReached	WITHOUT_CLASSIFICATION	0.9999995466537811	WITHOUT_CLASSIFICATION	4.533462188679904E-7	DEFECT
// NotReached	WITHOUT_CLASSIFICATION	0.9999995466537811	WITHOUT_CLASSIFICATION	4.533462188679904E-7	DEFECT
//no need to synchronize, as Vector is always synchronized	WITHOUT_CLASSIFICATION	0.9999947290284293	WITHOUT_CLASSIFICATION	5.270971570768213E-6	DEFECT
// Eliminate consecutive slashes after the drive spec:	WITHOUT_CLASSIFICATION	0.9999996495378438	WITHOUT_CLASSIFICATION	3.504621562286879E-7	DEFECT
//if it does not, then the file is not up to date.	WITHOUT_CLASSIFICATION	0.999990620489282	WITHOUT_CLASSIFICATION	9.379510718065992E-6	DEFECT
// record destdir for later use in getResource	WITHOUT_CLASSIFICATION	0.9999996255401364	WITHOUT_CLASSIFICATION	3.7445986361468367E-7	DEFECT
// Check to see if it's an inner class 'com.company.Class$Inner'	WITHOUT_CLASSIFICATION	0.9999993970210728	WITHOUT_CLASSIFICATION	6.02978927196428E-7	DEFECT
// treat non-matching groups as empty matches	WITHOUT_CLASSIFICATION	0.9999999329224144	WITHOUT_CLASSIFICATION	6.707758567668811E-8	DEFECT
// treat non-matching groups as empty matches	WITHOUT_CLASSIFICATION	0.9999999329224144	WITHOUT_CLASSIFICATION	6.707758567668811E-8	DEFECT
/*          A 6-byte block header, the value chosen arbitrarily          as 0x314159265359 :-).  A 32 bit value does not really          give a strong enough guarantee that the value will not          appear by chance in the compressed datastream.  Worst-case          probability of this event, for a 900k block, is about          2.0e-3 for 32 bits, 1.0e-5 for 40 bits and 4.0e-8 for 48 bits.          For a compressed file of size 100Gb -- about 100000 blocks --          only a 48-bit marker will do.  NB: normal compression/          decompression do *not* rely on these statistical properties.          They are only important when trying to recover blocks from          damaged files.        */	WITHOUT_CLASSIFICATION	0.9981948291981771	WITHOUT_CLASSIFICATION	0.0018051708018227937	DEFECT
// write 8-bit	WITHOUT_CLASSIFICATION	0.9999995483801665	WITHOUT_CLASSIFICATION	4.5161983351970876E-7	DEFECT
// bsBuffShadow |= 0 << (32 - bsLiveShadow - 1);	WITHOUT_CLASSIFICATION	0.9999994148201214	WITHOUT_CLASSIFICATION	5.85179878661659E-7	DEFECT
// // inlined: bsW(len_selCtr[sfmap_i] & 0xff, //              code_selCtr[sfmap_i]); //	WITHOUT_CLASSIFICATION	0.9999999658526383	WITHOUT_CLASSIFICATION	3.414736171971458E-8	DEFECT
// Following block contains unrolled code which could be shortened by // coding it in additional loops.	WITHOUT_CLASSIFICATION	0.9999760600169041	WITHOUT_CLASSIFICATION	2.3939983095887892E-5	DEFECT
/*                  Complete the big bucket [ss] by quicksorting                  any unsorted small buckets [ss, j].  Hopefully                  previous pointer-scanning phases have already                  completed many of the small buckets [ss, j], so                  we don't have to sort them at all.            */	WITHOUT_CLASSIFICATION	0.9999999916455911	WITHOUT_CLASSIFICATION	8.354408983732143E-9	DEFECT
// Step 2: // Now scan this big bucket so as to synthesise the // sorted order for small buckets [t, ss] for all t != ss.	WITHOUT_CLASSIFICATION	0.999999570066156	WITHOUT_CLASSIFICATION	4.299338439319128E-7	DEFECT
//  900021 byte // 3600000 byte // 3600000 byte // ------------ // 8433529 byte // ============	WITHOUT_CLASSIFICATION	0.9999971971701288	WITHOUT_CLASSIFICATION	2.802829871231735E-6	DEFECT
// The clean way would be to throw an exception. //throw new IOException("crc error");	WITHOUT_CLASSIFICATION	0.9999355880442438	WITHOUT_CLASSIFICATION	6.441195575618312E-5	DEFECT
// make next blocks readable without error // (repair feature, not yet documented, not tested)	WITHOUT_CLASSIFICATION	0.9999949097167546	WITHOUT_CLASSIFICATION	5.090283245408663E-6	DEFECT
/*          Setting up the unzftab entries here is not strictly          necessary, but it does save having to do it later          in a separate pass, and so saves a block's worth of          cache misses.        */	WITHOUT_CLASSIFICATION	0.9996620832408799	WITHOUT_CLASSIFICATION	3.379167591200866E-4	DEFECT
// tt.length should always be >= length, but theoretically // it can happen, if the compressor mixed small and large // blocks.  Normally only the last block will be smaller // than others.	WITHOUT_CLASSIFICATION	0.9885094471058126	WITHOUT_CLASSIFICATION	0.011490552894187487	DEFECT
// deprecated, but email is byte-oriented	WITHOUT_CLASSIFICATION	0.9999866049310692	WITHOUT_CLASSIFICATION	1.3395068930945166E-5	DEFECT
// // NOTE // We have fit EOF, and the block is not full! // // This is a broken archive. It does not follow the standard // blocking algorithm. However, because we are generous, and // it requires little effort, we will simply ignore the error // and continue as if the entire block were read. This does // not appear to break anything upstream. We used to return // false in this case. // // Thanks to 'Yohann.Roussel@alcatel.fr' for this fix. //	WITHOUT_CLASSIFICATION	0.9991898416718878	WITHOUT_CLASSIFICATION	8.101583281120709E-4	DEFECT
// version needed to extract // general purpose bit flag	WITHOUT_CLASSIFICATION	0.9999989620926919	WITHOUT_CLASSIFICATION	1.0379073080933668E-6	DEFECT
// requires version 2 as we are going to store length info // in the data descriptor	WITHOUT_CLASSIFICATION	0.9999911915018062	WITHOUT_CLASSIFICATION	8.808498193779351E-6	DEFECT
// file comment	WITHOUT_CLASSIFICATION	0.9999958138535551	WITHOUT_CLASSIFICATION	4.186146444939951E-6	DEFECT
// swallow, throw the original exception instead	WITHOUT_CLASSIFICATION	0.9999907624242901	WITHOUT_CLASSIFICATION	9.237575709958735E-6	DEFECT
/* compressed size                 */	WITHOUT_CLASSIFICATION	0.9999986393439003	WITHOUT_CLASSIFICATION	1.3606560996623377E-6	DEFECT
/* disk number start               */	WITHOUT_CLASSIFICATION	0.9999990646986812	WITHOUT_CLASSIFICATION	9.353013187104534E-7	DEFECT
/* total number of entries in      */	WITHOUT_CLASSIFICATION	0.9999960724176293	WITHOUT_CLASSIFICATION	3.927582370639863E-6	DEFECT
/* total number of entries in      */	WITHOUT_CLASSIFICATION	0.9999960724176293	WITHOUT_CLASSIFICATION	3.927582370639863E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999909427986051	WITHOUT_CLASSIFICATION	9.057201394800342E-6	DEFECT
// This is turned off temporarily. There appears to be a bug // in SelectorUtils.matchPattern() where it is recursive on // Windows even if no ** is in pattern. //assertEquals("FFFTFFFFFFFF", results); // Unix // vs //assertEquals("FFFTFFFFTFFF", results); // Windows	DEFECT	0.9875373305026025	WITHOUT_CLASSIFICATION	0.012462669497397548	DEFECT
// check first that it is not already loaded otherwise // consecutive runs seems to end into an OutOfMemoryError // or it fails when there is a native library to load // several times. // this is far from being perfect but should work // in most cases.	DEFECT	0.9997161146667746	WITHOUT_CLASSIFICATION	2.838853332253672E-4	DEFECT
// FIXME formatters are not thread-safe	DEFECT	0.9319008778014765	WITHOUT_CLASSIFICATION	0.06809912219852354	DEFECT
// the generated classes must not be added in the generic JAR! // is that buggy on old JOnAS (2.4) ??	DEFECT	0.965213974761317	WITHOUT_CLASSIFICATION	0.034786025238683044	DEFECT
// I hate to admit it, but we don't know what happened // here.  Throw the Exception.	DEFECT	0.9999487749684386	WITHOUT_CLASSIFICATION	5.122503156138789E-5	DEFECT
// FIXME: Is "No Namespace is Empty Namespace" really OK?	DEFECT	0.8282554976263378	WITHOUT_CLASSIFICATION	0.17174450237366218	DEFECT
// pattern now holds ** while string is not exhausted // this will generate false positives but we can live with that.	DEFECT	0.988290027791503	WITHOUT_CLASSIFICATION	0.011709972208497123	DEFECT
// todo: is this comment still relevant ?? // FIXME: need to use a SAXSource as the source for the transform // so we can plug in our own entity resolver	DEFECT	0.9973533625161112	DEFECT	0.0026466374838887896	WITHOUT_CLASSIFICATION
// Just a note: StarTeam has a status for NEW which implies // that there is an item  on your local machine that is not // in the repository.  These are the items that show up as // NOT IN VIEW in the Starteam GUI. // One would think that we would want to perhaps checkin the // NEW items (not in all cases! - Steve Cohen 15 Dec 2001) // Unfortunately, the sdk doesn't really work, and we can't // actually see  anything with a status of NEW. That is why // we can just check out  everything here without worrying // about losing anything.	DEFECT	0.9744819232222466	WITHOUT_CLASSIFICATION	0.025518076777753335	DEFECT
// XXX: (Jon Skeet) The comment "if it hasn't been done already" may // not be strictly true. wrapper.maybeConfigure() won't configure the same // attributes/text more than once, but it may well add the children again, // unless I've missed something.	DEFECT	0.9999973607394793	WITHOUT_CLASSIFICATION	2.6392605207525814E-6	DEFECT
// TODO: // A warning line, that shows code, which contains a variable // error will cause some trouble. The parser should definitely // be much better.	DEFECT	0.5204939370341088	DEFECT	0.4795060629658911	WITHOUT_CLASSIFICATION
// todo: is this comment still relevant ?? // FIXME: need to use a SAXSource as the source for the transform // so we can plug in our own entity resolver	DEFECT	0.9973533625161112	DEFECT	0.0026466374838887896	WITHOUT_CLASSIFICATION
// FIXME this is actually not very cpu cycles friendly as we are converting from // dos to java while the underlying Sun implementation will convert // from java to dos time for internal storage...	DEFECT	0.9441328754673023	DEFECT	0.055867124532697675	WITHOUT_CLASSIFICATION
