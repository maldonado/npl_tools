/* BuildListener stuff */	WITHOUT_CLASSIFICATION	0.999990349199769	WITHOUT_CLASSIFICATION	9.650800230904703E-6	DEFECT
// we don't expect to find this	WITHOUT_CLASSIFICATION	0.9998985931094204	WITHOUT_CLASSIFICATION	1.0140689057946324E-4	DEFECT
// ignore expected	WITHOUT_CLASSIFICATION	0.9999997657669312	WITHOUT_CLASSIFICATION	2.3423306881917505E-7	DEFECT
// ignore expected	WITHOUT_CLASSIFICATION	0.9999997657669312	WITHOUT_CLASSIFICATION	2.3423306881917505E-7	DEFECT
// tell the build it is finished	WITHOUT_CLASSIFICATION	0.9999908234146005	WITHOUT_CLASSIFICATION	9.176585399383673E-6	DEFECT
//end class	WITHOUT_CLASSIFICATION	0.9999810157344622	WITHOUT_CLASSIFICATION	1.898426553779479E-5	DEFECT
// keep track of what operating systems are supported here.	WITHOUT_CLASSIFICATION	0.9999942125510634	WITHOUT_CLASSIFICATION	5.787448936690668E-6	DEFECT
// father and child pattern test	WITHOUT_CLASSIFICATION	0.9999979356839638	WITHOUT_CLASSIFICATION	2.064316036309309E-6	DEFECT
// redo the test, but the 2 include patterns are inverted	WITHOUT_CLASSIFICATION	0.9999998159693972	WITHOUT_CLASSIFICATION	1.8403060274510211E-7	DEFECT
// add conditions and more commands as soon as the need arises	WITHOUT_CLASSIFICATION	0.9999815027393282	WITHOUT_CLASSIFICATION	1.8497260671852003E-5	DEFECT
// give ourselves some time for the system call // to execute... tweak if you have a really over // loaded system.	WITHOUT_CLASSIFICATION	0.9994375646811134	WITHOUT_CLASSIFICATION	5.624353188865963E-4	DEFECT
// followLinks should be true by default, but if this ever // changes we will need this line.	WITHOUT_CLASSIFICATION	0.9999998015072332	WITHOUT_CLASSIFICATION	1.984927667781347E-7	DEFECT
//testing drive letter search from root:	WITHOUT_CLASSIFICATION	0.9999973165228871	WITHOUT_CLASSIFICATION	2.6834771127963175E-6	DEFECT
//if this is our context we assume there must be something here:	WITHOUT_CLASSIFICATION	0.9999983695009625	WITHOUT_CLASSIFICATION	1.6304990374961643E-6	DEFECT
// This path should contain the class files for these testcases:	WITHOUT_CLASSIFICATION	0.9999810164441141	WITHOUT_CLASSIFICATION	1.8983555885909025E-5	DEFECT
// A special parent loader which is not the system class loader:	WITHOUT_CLASSIFICATION	0.9981608342921857	WITHOUT_CLASSIFICATION	0.0018391657078142495	DEFECT
// A special parent loader which is not the system class loader:	WITHOUT_CLASSIFICATION	0.9981608342921857	WITHOUT_CLASSIFICATION	0.0018391657078142495	DEFECT
// An AntClassLoader which is supposed to delegate to // the parent and then to the disk path:	WITHOUT_CLASSIFICATION	0.9999278621327624	WITHOUT_CLASSIFICATION	7.213786723748924E-5	DEFECT
// The intended result URLs:	WITHOUT_CLASSIFICATION	0.9999981171019827	WITHOUT_CLASSIFICATION	1.8828980173177853E-6	DEFECT
// JDK 1.4: return Collections.list(e);	WITHOUT_CLASSIFICATION	0.9999928108016809	WITHOUT_CLASSIFICATION	7.189198319102973E-6	DEFECT
// override allowed on <available>	WITHOUT_CLASSIFICATION	0.9999985092039883	WITHOUT_CLASSIFICATION	1.4907960118285876E-6	DEFECT
// ensure <tstamp>'s new prefix attribute is working	WITHOUT_CLASSIFICATION	0.9999726203363866	WITHOUT_CLASSIFICATION	2.7379663613511663E-5	DEFECT
// ensure <tstamp> follows the immutability rule	WITHOUT_CLASSIFICATION	0.9999996065786839	WITHOUT_CLASSIFICATION	3.934213160875933E-7	DEFECT
// ensure <condition> follows the immutability rule	WITHOUT_CLASSIFICATION	0.999985350927666	WITHOUT_CLASSIFICATION	1.4649072333952894E-5	DEFECT
// ensure <checksum> follows the immutability rule	WITHOUT_CLASSIFICATION	0.9999999076801233	WITHOUT_CLASSIFICATION	9.23198766836946E-8	DEFECT
// ensure <exec> follows the immutability rule	WITHOUT_CLASSIFICATION	0.9999982349581988	WITHOUT_CLASSIFICATION	1.7650418011159403E-6	DEFECT
// ensure <pathconvert> follows the immutability rule	WITHOUT_CLASSIFICATION	0.9999997431647476	WITHOUT_CLASSIFICATION	2.568352524506927E-7	DEFECT
/*             * throw in drive letters             */	WITHOUT_CLASSIFICATION	0.9999875790020791	WITHOUT_CLASSIFICATION	1.242099792092728E-5	DEFECT
/*             * promised to eliminate consecutive slashes after drive letter.             */	WITHOUT_CLASSIFICATION	0.9999998678253107	WITHOUT_CLASSIFICATION	1.321746894174206E-7	DEFECT
/*             * Start with simple absolute file names.             */	WITHOUT_CLASSIFICATION	0.9999999929059892	WITHOUT_CLASSIFICATION	7.09401087481552E-9	DEFECT
/*             * drive letters are not used, just to be considered as normal             * part of a name             */	WITHOUT_CLASSIFICATION	0.9999999861059542	WITHOUT_CLASSIFICATION	1.3894045876256522E-8	DEFECT
/*         * Now test some relative file name magic.         */	WITHOUT_CLASSIFICATION	0.9999998934654227	WITHOUT_CLASSIFICATION	1.0653457737027987E-7	DEFECT
// fail, because buildfile contains two targets with the same name	WITHOUT_CLASSIFICATION	0.9999971896327186	WITHOUT_CLASSIFICATION	2.8103672813988606E-6	DEFECT
// overriding target from imported buildfile is allowed	WITHOUT_CLASSIFICATION	0.9999999483944615	WITHOUT_CLASSIFICATION	5.160553846595841E-8	DEFECT
// the buildfile to use	WITHOUT_CLASSIFICATION	0.9999997544826611	WITHOUT_CLASSIFICATION	2.4551733892974547E-7	DEFECT
// call a target	WITHOUT_CLASSIFICATION	0.9999986474011463	WITHOUT_CLASSIFICATION	1.352598853761246E-6	DEFECT
//class-BFT	WITHOUT_CLASSIFICATION	0.9999840091133498	WITHOUT_CLASSIFICATION	1.5990886650136166E-5	DEFECT
// override allowed on <available>	WITHOUT_CLASSIFICATION	0.9999985092039883	WITHOUT_CLASSIFICATION	1.4907960118285876E-6	DEFECT
// ignore event	WITHOUT_CLASSIFICATION	0.9999985995721953	WITHOUT_CLASSIFICATION	1.4004278047811596E-6	DEFECT
// Check it's a read-only map.	WITHOUT_CLASSIFICATION	0.9999993660921332	WITHOUT_CLASSIFICATION	6.339078666885404E-7	DEFECT
// Check it's a read-only map.	WITHOUT_CLASSIFICATION	0.9999993660921332	WITHOUT_CLASSIFICATION	6.339078666885404E-7	DEFECT
/*         * JUnit 3.7 adds a getName method to TestCase - so we now         * have a name attribute in IntrospectionHelperTest if we run         * under JUnit 3.7 but not in earlier versions.         *         * Simply add it here and remove it after the tests.         */	WITHOUT_CLASSIFICATION	0.9999882830269488	WITHOUT_CLASSIFICATION	1.1716973051190252E-5	DEFECT
// addConfigured(Hashtable) should come before addConfigured(Map)	WITHOUT_CLASSIFICATION	0.999996223500037	WITHOUT_CLASSIFICATION	3.7764999629653366E-6	DEFECT
// INVALID extension point	WITHOUT_CLASSIFICATION	0.9999964774774042	WITHOUT_CLASSIFICATION	3.5225225957682725E-6	DEFECT
// INVALID extension point	WITHOUT_CLASSIFICATION	0.9999964774774042	WITHOUT_CLASSIFICATION	3.5225225957682725E-6	DEFECT
// Valid extension point	WITHOUT_CLASSIFICATION	0.9999987758611363	WITHOUT_CLASSIFICATION	1.224138863750783E-6	DEFECT
// Valid extension point, more derived than Map above, but *after* it!	WITHOUT_CLASSIFICATION	0.9999990820025443	WITHOUT_CLASSIFICATION	9.179974557434559E-7	DEFECT
// IntrospectionHelperTest	WITHOUT_CLASSIFICATION	0.9999994411492567	WITHOUT_CLASSIFICATION	5.588507432964494E-7	DEFECT
// make sure we do not get a NPE	WITHOUT_CLASSIFICATION	0.999999127232861	WITHOUT_CLASSIFICATION	8.727671389918567E-7	DEFECT
// use an anonymous subclass since ProjectComponent is abstract	WITHOUT_CLASSIFICATION	0.9999997405045427	WITHOUT_CLASSIFICATION	2.5949545736181595E-7	DEFECT
// ------------------------------------------------------ //   Helper methods // -----------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999884813454951	WITHOUT_CLASSIFICATION	1.1518654504864613E-5	DEFECT
/* I wrote the testcases in one java file because I want also to test the * combined behaviour (see end of the class).*/	WITHOUT_CLASSIFICATION	0.99998957461901	WITHOUT_CLASSIFICATION	1.0425380990109752E-5	DEFECT
// check defaults	WITHOUT_CLASSIFICATION	0.9999999872793459	WITHOUT_CLASSIFICATION	1.2720653987910778E-8	DEFECT
// check defaults	WITHOUT_CLASSIFICATION	0.9999999872793459	WITHOUT_CLASSIFICATION	1.2720653987910778E-8	DEFECT
// check build.compiler provides defaults	WITHOUT_CLASSIFICATION	0.9999993197460385	WITHOUT_CLASSIFICATION	6.80253961463009E-7	DEFECT
// setUserProperty to override system properties	WITHOUT_CLASSIFICATION	0.9999991080972085	WITHOUT_CLASSIFICATION	8.919027916650199E-7	DEFECT
// check attribute overrides build.compiler	WITHOUT_CLASSIFICATION	0.9999999801773277	WITHOUT_CLASSIFICATION	1.9822672323914835E-8	DEFECT
// check attribute overrides build.compiler	WITHOUT_CLASSIFICATION	0.9999999801773277	WITHOUT_CLASSIFICATION	1.9822672323914835E-8	DEFECT
// some database keys, see #getProperties(int)	WITHOUT_CLASSIFICATION	0.9999999130766511	WITHOUT_CLASSIFICATION	8.692334891421401E-8	DEFECT
// keys used in properties.	WITHOUT_CLASSIFICATION	0.9999996196966948	WITHOUT_CLASSIFICATION	3.803033052014539E-7	DEFECT
//neither	WITHOUT_CLASSIFICATION	0.9999854524478392	WITHOUT_CLASSIFICATION	1.4547552160888203E-5	DEFECT
/*     * PR 11100     */	WITHOUT_CLASSIFICATION	0.999998611770963	WITHOUT_CLASSIFICATION	1.3882290368830323E-6	DEFECT
// simple test to ensure that the caching does work...	WITHOUT_CLASSIFICATION	0.9997980786967904	WITHOUT_CLASSIFICATION	2.0192130320970504E-4	DEFECT
// 2nd run..	WITHOUT_CLASSIFICATION	0.9999722326189876	WITHOUT_CLASSIFICATION	2.776738101240457E-5	DEFECT
// the driver must still be cached.	WITHOUT_CLASSIFICATION	0.9999997242157278	WITHOUT_CLASSIFICATION	2.7578427219346834E-7	DEFECT
// look for the driver path...	WITHOUT_CLASSIFICATION	0.9999907629140132	WITHOUT_CLASSIFICATION	9.237085986817565E-6	DEFECT
//file time checks for java1.2+	WITHOUT_CLASSIFICATION	0.9999997094321913	WITHOUT_CLASSIFICATION	2.905678086460521E-7	DEFECT
//only test on java1.5+	WITHOUT_CLASSIFICATION	0.999998771986404	WITHOUT_CLASSIFICATION	1.2280135959662486E-6	DEFECT
// AntLikeTasksAtTopLevelTest	WITHOUT_CLASSIFICATION	0.9999999511379077	WITHOUT_CLASSIFICATION	4.886209232474925E-8	DEFECT
//file length checks rely on touch generating a zero byte file	WITHOUT_CLASSIFICATION	0.9999985508479241	WITHOUT_CLASSIFICATION	1.4491520759545783E-6	DEFECT
// no-op: not a real business error	WITHOUT_CLASSIFICATION	0.9995504953711782	WITHOUT_CLASSIFICATION	4.495046288218446E-4	DEFECT
//dont look for much text here as it is vendor and version dependent	WITHOUT_CLASSIFICATION	0.9999560144598475	WITHOUT_CLASSIFICATION	4.3985540152437196E-5	DEFECT
// end of try-catch	WITHOUT_CLASSIFICATION	0.9999995521052819	WITHOUT_CLASSIFICATION	4.478947181212865E-7	DEFECT
// end of try-catch	WITHOUT_CLASSIFICATION	0.9999995521052819	WITHOUT_CLASSIFICATION	4.478947181212865E-7	DEFECT
/*     * PR 11100     */	WITHOUT_CLASSIFICATION	0.999998611770963	WITHOUT_CLASSIFICATION	1.3882290368830323E-6	DEFECT
/*     * PR 38973     */	WITHOUT_CLASSIFICATION	0.9999984106762779	WITHOUT_CLASSIFICATION	1.5893237221209549E-6	DEFECT
/*     * PR 11100     */	WITHOUT_CLASSIFICATION	0.999998611770963	WITHOUT_CLASSIFICATION	1.3882290368830323E-6	DEFECT
/*     * PR 16213     */	WITHOUT_CLASSIFICATION	0.999998750580853	WITHOUT_CLASSIFICATION	1.2494191470408108E-6	DEFECT
/*     * PR 38973     */	WITHOUT_CLASSIFICATION	0.9999984106762779	WITHOUT_CLASSIFICATION	1.5893237221209549E-6	DEFECT
/*     * PR 21996     */	WITHOUT_CLASSIFICATION	0.9999980263523384	WITHOUT_CLASSIFICATION	1.973647661655781E-6	DEFECT
/*     * PR 10504     */	WITHOUT_CLASSIFICATION	0.9999981482930587	WITHOUT_CLASSIFICATION	1.8517069412857418E-6	DEFECT
/*     * PR 20969     */	WITHOUT_CLASSIFICATION	0.9999959289954119	WITHOUT_CLASSIFICATION	4.07100458811451E-6	DEFECT
// can't access the booleans in MyPrinter here (even if they // were static) since the MyPrinter instance that was used in // the test has likely been loaded via a different classloader // than this class.  Therefore we make the printer assert its // state and only check for the tail invocation.	WITHOUT_CLASSIFICATION	0.9999999895637477	WITHOUT_CLASSIFICATION	1.0436252263767864E-8	DEFECT
// should get no output at all	WITHOUT_CLASSIFICATION	0.9999993775043117	WITHOUT_CLASSIFICATION	6.224956882682667E-7	DEFECT
// should get no output at all	WITHOUT_CLASSIFICATION	0.9999993775043117	WITHOUT_CLASSIFICATION	6.224956882682667E-7	DEFECT
// should get no output at all	WITHOUT_CLASSIFICATION	0.9999993775043117	WITHOUT_CLASSIFICATION	6.224956882682667E-7	DEFECT
// should get no output at all	WITHOUT_CLASSIFICATION	0.9999993775043117	WITHOUT_CLASSIFICATION	6.224956882682667E-7	DEFECT
//this call should succeed as unless overrides if	WITHOUT_CLASSIFICATION	0.9999911402565727	WITHOUT_CLASSIFICATION	8.859743427352874E-6	DEFECT
// test that the watchdog ends the process	WITHOUT_CLASSIFICATION	0.9999979364172563	WITHOUT_CLASSIFICATION	2.0635827436940306E-6	DEFECT
// test that the watchdog ends the process	WITHOUT_CLASSIFICATION	0.9999979364172563	WITHOUT_CLASSIFICATION	2.0635827436940306E-6	DEFECT
// and a little shorter	WITHOUT_CLASSIFICATION	0.9999995822933514	WITHOUT_CLASSIFICATION	4.1770664849139136E-7	DEFECT
// test that the watchdog ends the process	WITHOUT_CLASSIFICATION	0.9999979364172563	WITHOUT_CLASSIFICATION	2.0635827436940306E-6	DEFECT
// target must be specified	WITHOUT_CLASSIFICATION	0.9999999996661798	WITHOUT_CLASSIFICATION	3.3382023464266754E-10	DEFECT
// Should fail since a recursion will occur...	WITHOUT_CLASSIFICATION	0.9998768897087268	WITHOUT_CLASSIFICATION	1.231102912731909E-4	DEFECT
// a rather convoluted equals() test	WITHOUT_CLASSIFICATION	0.9999998903522929	WITHOUT_CLASSIFICATION	1.0964770722784002E-7	DEFECT
// <path> swallows the basedir, it seems //assertTrue(!getProject().resolveFile("A").exists());	WITHOUT_CLASSIFICATION	0.9999968191226477	WITHOUT_CLASSIFICATION	3.180877352218339E-6	DEFECT
// allow this as imported in targets are only tested when a target is run	WITHOUT_CLASSIFICATION	0.9999999778758208	WITHOUT_CLASSIFICATION	2.2124179142757478E-8	DEFECT
// deactivate this test as imports within targets are not allowed	WITHOUT_CLASSIFICATION	0.9999999585278806	WITHOUT_CLASSIFICATION	4.147211940685898E-8	DEFECT
// Running on Windows or something, so skip it.	WITHOUT_CLASSIFICATION	0.9999960140748848	WITHOUT_CLASSIFICATION	3.985925115263069E-6	DEFECT
// remove log file from testSpawn	WITHOUT_CLASSIFICATION	0.999999502134716	WITHOUT_CLASSIFICATION	4.978652839104342E-7	DEFECT
// this is guaranteed by FileUtils#createTempFile	WITHOUT_CLASSIFICATION	0.999997455356824	WITHOUT_CLASSIFICATION	2.5446431759577903E-6	DEFECT
// let's be nice with the next generation of developers	WITHOUT_CLASSIFICATION	0.9999949400832905	WITHOUT_CLASSIFICATION	5.059916709503109E-6	DEFECT
//executeTarget("setup"); //commented out for performance while target is empty	WITHOUT_CLASSIFICATION	0.9999998419924153	WITHOUT_CLASSIFICATION	1.5800758468401944E-7	DEFECT
// target // file // exptected string	WITHOUT_CLASSIFICATION	0.999999988679884	WITHOUT_CLASSIFICATION	1.1320116076665791E-8	DEFECT
// END class ManifestClassPathTest	WITHOUT_CLASSIFICATION	0.999999236477281	WITHOUT_CLASSIFICATION	7.63522719030398E-7	DEFECT
//      assertTrue("return code is invalid: " + retCode, retCode!=0);	WITHOUT_CLASSIFICATION	0.9999996578542805	WITHOUT_CLASSIFICATION	3.4214571949968725E-7	DEFECT
// test a process that runs and failed	WITHOUT_CLASSIFICATION	0.9999996560149756	WITHOUT_CLASSIFICATION	3.439850243104823E-7	DEFECT
// process should abort	WITHOUT_CLASSIFICATION	0.9999997016840277	WITHOUT_CLASSIFICATION	2.983159723310982E-7	DEFECT
// I assume that starting this takes less than TIME_OUT/2 ms...	WITHOUT_CLASSIFICATION	0.9999940198812036	WITHOUT_CLASSIFICATION	5.980118796422671E-6	DEFECT
// wait for TIME_OUT/2, there should be about TIME_OUT/2 ms remaining before timeout	WITHOUT_CLASSIFICATION	0.9999878412652026	WITHOUT_CLASSIFICATION	1.2158734797354245E-5	DEFECT
// now stop the watchdog.	WITHOUT_CLASSIFICATION	0.9999999725300232	WITHOUT_CLASSIFICATION	2.746997680664842E-8	DEFECT
// wait for the thread to die, should be the end of the process	WITHOUT_CLASSIFICATION	0.9999731690977728	WITHOUT_CLASSIFICATION	2.68309022272639E-5	DEFECT
// process should be dead and well finished	WITHOUT_CLASSIFICATION	0.999999901809451	WITHOUT_CLASSIFICATION	9.819054901560926E-8	DEFECT
// We have to compare the decompressed content instead:	WITHOUT_CLASSIFICATION	0.9999993990144029	WITHOUT_CLASSIFICATION	6.009855971409491E-7	DEFECT
//no point in setting a message	WITHOUT_CLASSIFICATION	0.9999973026261033	WITHOUT_CLASSIFICATION	2.697373896803517E-6	DEFECT
// this is guaranteed by FileUtils#createTempFile	WITHOUT_CLASSIFICATION	0.999997455356824	WITHOUT_CLASSIFICATION	2.5446431759577903E-6	DEFECT
// make the spawned process run 4 seconds	WITHOUT_CLASSIFICATION	0.9999969832085882	WITHOUT_CLASSIFICATION	3.0167914119087193E-6	DEFECT
// this loop runs parallel to the build	WITHOUT_CLASSIFICATION	0.9999973105465116	WITHOUT_CLASSIFICATION	2.68945348846698E-6	DEFECT
// security	WITHOUT_CLASSIFICATION	0.9999984964229961	WITHOUT_CLASSIFICATION	1.5035770038758348E-6	DEFECT
// time of the build in milli seconds	WITHOUT_CLASSIFICATION	0.9999822487322445	WITHOUT_CLASSIFICATION	1.7751267755511942E-5	DEFECT
// Nothing specified -> Fail	WITHOUT_CLASSIFICATION	0.999999994694547	WITHOUT_CLASSIFICATION	5.305452890199932E-9	DEFECT
// Only property specified -> Fail	WITHOUT_CLASSIFICATION	0.999999555275973	WITHOUT_CLASSIFICATION	4.447240270476973E-7	DEFECT
// Only file specified -> Fail	WITHOUT_CLASSIFICATION	0.9999999118984864	WITHOUT_CLASSIFICATION	8.810151361419187E-8	DEFECT
// file does exist -> property 'test' == 'true'	WITHOUT_CLASSIFICATION	0.9999981931308599	WITHOUT_CLASSIFICATION	1.8068691400410435E-6	DEFECT
// resource doesn't exist -> property 'test' == null	WITHOUT_CLASSIFICATION	0.9999854415423473	WITHOUT_CLASSIFICATION	1.4558457652718114E-5	DEFECT
// resource does exist -> property 'test' == 'true'	WITHOUT_CLASSIFICATION	0.9999949200067608	WITHOUT_CLASSIFICATION	5.079993239205351E-6	DEFECT
// class doesn't exist -> property 'test' == null	WITHOUT_CLASSIFICATION	0.9998826385296339	WITHOUT_CLASSIFICATION	1.1736147036605569E-4	DEFECT
// class does exist -> property 'test' == 'true'	WITHOUT_CLASSIFICATION	0.999972429815856	WITHOUT_CLASSIFICATION	2.7570184144030918E-5	DEFECT
// All three specified but class missing -> null	WITHOUT_CLASSIFICATION	0.9999991012052001	WITHOUT_CLASSIFICATION	8.987947998910654E-7	DEFECT
// Specified property-name is "" -> true	WITHOUT_CLASSIFICATION	0.9999998493043821	WITHOUT_CLASSIFICATION	1.5069561786722894E-7	DEFECT
// Specified file is "" -> invalid files do not exist	WITHOUT_CLASSIFICATION	0.9999998600732959	WITHOUT_CLASSIFICATION	1.3992670411854294E-7	DEFECT
// Specified file is "" actually a directory, so it should pass	WITHOUT_CLASSIFICATION	0.9999904807391576	WITHOUT_CLASSIFICATION	9.51926084234888E-6	DEFECT
// Specified resource is "" -> can such a thing exist?	WITHOUT_CLASSIFICATION	0.9999998296427284	WITHOUT_CLASSIFICATION	1.7035727157422767E-7	DEFECT
/*     * returns non null IBM JDK 1.3 Linux     */	WITHOUT_CLASSIFICATION	0.9999846311272231	WITHOUT_CLASSIFICATION	1.5368872776867528E-5	DEFECT
// Specified dir is "" -> this is the current directory and should // always exist	WITHOUT_CLASSIFICATION	0.9999890569088266	WITHOUT_CLASSIFICATION	1.0943091173548226E-5	DEFECT
// Specified dir is "../taskdefs" -> should exist since it's the // location of the buildfile used...	WITHOUT_CLASSIFICATION	0.9999978338533003	WITHOUT_CLASSIFICATION	2.1661466996567665E-6	DEFECT
// Specified dir is "../this_dir_should_never_exist" -> null	WITHOUT_CLASSIFICATION	0.9999988707887948	WITHOUT_CLASSIFICATION	1.129211205215148E-6	DEFECT
// Invalid type specified	WITHOUT_CLASSIFICATION	0.9999999262012044	WITHOUT_CLASSIFICATION	7.379879571283702E-8	DEFECT
// Core class that exists in system classpath is ignored	WITHOUT_CLASSIFICATION	0.9999954612299624	WITHOUT_CLASSIFICATION	4.5387700376563185E-6	DEFECT
// Core class that exists in system classpath is not ignored with ignoresystemclass="false"	WITHOUT_CLASSIFICATION	0.999642928586044	WITHOUT_CLASSIFICATION	3.57071413955917E-4	DEFECT
// Core class that exists in system classpath is not ignored with default ignoresystemclasses value	WITHOUT_CLASSIFICATION	0.999983091443828	WITHOUT_CLASSIFICATION	1.6908556171983E-5	DEFECT
// Class is found in specified classpath	WITHOUT_CLASSIFICATION	0.9999996952640783	WITHOUT_CLASSIFICATION	3.047359217388802E-7	DEFECT
// File is not found in specified filepath	WITHOUT_CLASSIFICATION	0.9999997645674793	WITHOUT_CLASSIFICATION	2.3543252081191072E-7	DEFECT
// test when file begins with basedir twice	WITHOUT_CLASSIFICATION	0.9999879529602158	WITHOUT_CLASSIFICATION	1.2047039784215874E-5	DEFECT
// test for searching parents	WITHOUT_CLASSIFICATION	0.9999992764578202	WITHOUT_CLASSIFICATION	7.23542179775998E-7	DEFECT
// test for not searching parents	WITHOUT_CLASSIFICATION	0.9999649161639664	WITHOUT_CLASSIFICATION	3.5083836033560614E-5	DEFECT
// Output the default excludes	WITHOUT_CLASSIFICATION	0.9999999851545215	WITHOUT_CLASSIFICATION	1.484547846742901E-8	DEFECT
// adding something to the excludes'	WITHOUT_CLASSIFICATION	0.999999762096792	WITHOUT_CLASSIFICATION	2.379032079619762E-7	DEFECT
// removing something from the defaults	WITHOUT_CLASSIFICATION	0.9999999189128093	WITHOUT_CLASSIFICATION	8.10871907714738E-8	DEFECT
//CVS missing	WITHOUT_CLASSIFICATION	0.9999887957315268	WITHOUT_CLASSIFICATION	1.1204268473239084E-5	DEFECT
// target must be specified	WITHOUT_CLASSIFICATION	0.9999999996661798	WITHOUT_CLASSIFICATION	3.3382023464266754E-10	DEFECT
// We try to delete the directory created in CopydirTest	WITHOUT_CLASSIFICATION	0.9999999972504636	WITHOUT_CLASSIFICATION	2.74953640675776E-9	DEFECT
// check that both arrays have the same size	WITHOUT_CLASSIFICATION	0.99999988933735	WITHOUT_CLASSIFICATION	1.1066265002721001E-7	DEFECT
//instance variable to allow cleanup	WITHOUT_CLASSIFICATION	0.9999999711573967	WITHOUT_CLASSIFICATION	2.8842603275959607E-8	DEFECT
//ignored	WITHOUT_CLASSIFICATION	0.99999511294749	WITHOUT_CLASSIFICATION	4.88705251008008E-6	DEFECT
// What's the working directory?  If local, then its the // folder of the input file.  Otherwise, its the "current" dir..	WITHOUT_CLASSIFICATION	0.999979472966127	WITHOUT_CLASSIFICATION	2.052703387303618E-5	DEFECT
// Set a property on the project to make sure that loading // a property with the same name from an xml file will // *not* change it.	WITHOUT_CLASSIFICATION	0.9999987496015527	WITHOUT_CLASSIFICATION	1.2503984473609905E-6	DEFECT
//printProperties(p.getProperties());	WITHOUT_CLASSIFICATION	0.9999967138184311	WITHOUT_CLASSIFICATION	3.286181568988945E-6	DEFECT
// Every key identified by the Properties must have been loaded.	WITHOUT_CLASSIFICATION	0.9999996740952348	WITHOUT_CLASSIFICATION	3.25904765150087E-7	DEFECT
// The property is the name of a file.  We are testing // a location attribute, so we need to resolve the given // file name in the provided folder.	WITHOUT_CLASSIFICATION	0.9999999311126636	WITHOUT_CLASSIFICATION	6.888733642754061E-8	DEFECT
// Substitute .xml with .properties	WITHOUT_CLASSIFICATION	0.9999996948094738	WITHOUT_CLASSIFICATION	3.051905261949237E-7	DEFECT
// basedir of subant/subant-test1/subant.xml is .. // therefore we expect here the subant/subant-test1 subdirectory	WITHOUT_CLASSIFICATION	0.9999853110382476	WITHOUT_CLASSIFICATION	1.4688961752456246E-5	DEFECT
// Output an empty String	WITHOUT_CLASSIFICATION	0.9999997663861017	WITHOUT_CLASSIFICATION	2.3361389839467338E-7	DEFECT
// Output 'OUTPUT OF ECHO'	WITHOUT_CLASSIFICATION	0.9999998331540145	WITHOUT_CLASSIFICATION	1.6684598548628538E-7	DEFECT
/*          * @param message         */	WITHOUT_CLASSIFICATION	0.9999998488619016	WITHOUT_CLASSIFICATION	1.5113809830313305E-7	DEFECT
// make sure that the parsing does not break	WITHOUT_CLASSIFICATION	0.9995176160771015	WITHOUT_CLASSIFICATION	4.82383922898488E-4	DEFECT
// where the name contains <>	WITHOUT_CLASSIFICATION	0.9999989549163374	WITHOUT_CLASSIFICATION	1.045083662635178E-6	DEFECT
// where only an address is supplied	WITHOUT_CLASSIFICATION	0.9999927526752438	WITHOUT_CLASSIFICATION	7.247324756248443E-6	DEFECT
// Tests property element, using XML schema properties as an example.	WITHOUT_CLASSIFICATION	0.9999983567599671	WITHOUT_CLASSIFICATION	1.6432400329278498E-6	DEFECT
// should print "panic: Cannot find importVocab file 'JavaTokenTypes.txt'" // since it needs to run java.g first before java.tree.g	WITHOUT_CLASSIFICATION	0.9999142499757981	WITHOUT_CLASSIFICATION	8.575002420187088E-5	DEFECT
// execute	WITHOUT_CLASSIFICATION	0.9999931028995043	WITHOUT_CLASSIFICATION	6.8971004957273914E-6	DEFECT
// override some of the code so we can test the handling of the // return code only.	WITHOUT_CLASSIFICATION	0.9999999974999247	WITHOUT_CLASSIFICATION	2.500075342675935E-9	DEFECT
// ask ant to update the properties...	WITHOUT_CLASSIFICATION	0.9999987542076872	WITHOUT_CLASSIFICATION	1.2457923127022069E-6	DEFECT
// to override	WITHOUT_CLASSIFICATION	0.9999982233526045	WITHOUT_CLASSIFICATION	1.7766473955078436E-6	DEFECT
// just to be sure	WITHOUT_CLASSIFICATION	0.9999999687806966	WITHOUT_CLASSIFICATION	3.12193034301772E-8	DEFECT
// just to be sure	WITHOUT_CLASSIFICATION	0.9999999687806966	WITHOUT_CLASSIFICATION	3.12193034301772E-8	DEFECT
// read in the file	WITHOUT_CLASSIFICATION	0.9999996078410698	WITHOUT_CLASSIFICATION	3.921589301525016E-7	DEFECT
// found the property we set - it's good.	WITHOUT_CLASSIFICATION	0.9999585631077489	WITHOUT_CLASSIFICATION	4.143689225098072E-5	DEFECT
// else	WITHOUT_CLASSIFICATION	0.9999991682622907	WITHOUT_CLASSIFICATION	8.317377093072847E-7	DEFECT
// else	WITHOUT_CLASSIFICATION	0.9999991682622907	WITHOUT_CLASSIFICATION	8.317377093072847E-7	DEFECT
// ReplaceRegExpTest	WITHOUT_CLASSIFICATION	0.9999997291599213	WITHOUT_CLASSIFICATION	2.708400787463421E-7	DEFECT
// test for 10 consecutives transform	WITHOUT_CLASSIFICATION	0.9999999180388034	WITHOUT_CLASSIFICATION	8.196119662943213E-8	DEFECT
//java keywords are not special	WITHOUT_CLASSIFICATION	0.9999942677359763	WITHOUT_CLASSIFICATION	5.732264023650028E-6	DEFECT
//underscores go in front of invalid start chars	WITHOUT_CLASSIFICATION	0.9999854413121492	WITHOUT_CLASSIFICATION	1.4558687850795862E-5	DEFECT
//underscores at the front get an underscore too	WITHOUT_CLASSIFICATION	0.999953380246355	WITHOUT_CLASSIFICATION	4.661975364488772E-5	DEFECT
//non java char at start => underscore then the the _hex value	WITHOUT_CLASSIFICATION	0.9999965558087075	WITHOUT_CLASSIFICATION	3.444191292532961E-6	DEFECT
//and paths are stripped	WITHOUT_CLASSIFICATION	0.9999990147840985	WITHOUT_CLASSIFICATION	9.852159014779994E-7	DEFECT
/** * Tests the {@link XSLTProcess} task. * XXX merge with {@link StyleTest}? * @since Ant 1.5 */	WITHOUT_CLASSIFICATION	0.9999953539719395	WITHOUT_CLASSIFICATION	4.646028060404415E-6	DEFECT
// byte - byte compare	WITHOUT_CLASSIFICATION	0.999997905072499	WITHOUT_CLASSIFICATION	2.094927501069141E-6	DEFECT
// avoid endless loop	WITHOUT_CLASSIFICATION	0.9999996410000506	WITHOUT_CLASSIFICATION	3.589999493145585E-7	DEFECT
// those would fail because of the way BuildFileTest captures output	WITHOUT_CLASSIFICATION	0.9999879480868036	WITHOUT_CLASSIFICATION	1.2051913196500615E-5	DEFECT
//To change body of implemented methods use File | Settings | File Templates.	WITHOUT_CLASSIFICATION	0.999999948833671	WITHOUT_CLASSIFICATION	5.1166329004949484E-8	DEFECT
// tests one the file object	WITHOUT_CLASSIFICATION	0.9999999424883924	WITHOUT_CLASSIFICATION	5.751160761004293E-8	DEFECT
// father and child pattern test	WITHOUT_CLASSIFICATION	0.9999979356839638	WITHOUT_CLASSIFICATION	2.064316036309309E-6	DEFECT
// redo the test, but the 2 include patterns are inverted	WITHOUT_CLASSIFICATION	0.9999998159693972	WITHOUT_CLASSIFICATION	1.8403060274510211E-7	DEFECT
// end of try-catch	WITHOUT_CLASSIFICATION	0.9999995521052819	WITHOUT_CLASSIFICATION	4.478947181212865E-7	DEFECT
// tests one the file object	WITHOUT_CLASSIFICATION	0.9999999424883924	WITHOUT_CLASSIFICATION	5.751160761004293E-8	DEFECT
// On junit3 this is a FAILURE, on junit4 this is an ERROR	WITHOUT_CLASSIFICATION	0.9999899652402264	WITHOUT_CLASSIFICATION	1.0034759773604342E-5	DEFECT
// conversion to URL via FileUtils like in XMLResultAggregator, not as suggested in the bug report	WITHOUT_CLASSIFICATION	0.9999026657471421	WITHOUT_CLASSIFICATION	9.733425285786995E-5	DEFECT
// conversion to URL via FileUtils like in XMLResultAggregator, not as suggested in the bug report	WITHOUT_CLASSIFICATION	0.9999026657471421	WITHOUT_CLASSIFICATION	9.733425285786995E-5	DEFECT
// conversion to URL via FileUtils like in XMLResultAggregator, not as suggested in the bug report	WITHOUT_CLASSIFICATION	0.9999026657471421	WITHOUT_CLASSIFICATION	9.733425285786995E-5	DEFECT
// mandatory constructor	WITHOUT_CLASSIFICATION	0.999999616202687	WITHOUT_CLASSIFICATION	3.83797313025066E-7	DEFECT
// check that a suite generates no errors	WITHOUT_CLASSIFICATION	0.9999993593090346	WITHOUT_CLASSIFICATION	6.40690965358179E-7	DEFECT
// check that having no suite generates no errors	WITHOUT_CLASSIFICATION	0.9999994400237409	WITHOUT_CLASSIFICATION	5.599762592055102E-7	DEFECT
// check that something which is not a testcase generates no errors // at first even though this is incorrect.	WITHOUT_CLASSIFICATION	0.9999888815789387	WITHOUT_CLASSIFICATION	1.111842106127645E-5	DEFECT
// check that an invalid suite generates an error.	WITHOUT_CLASSIFICATION	0.9999986320763591	WITHOUT_CLASSIFICATION	1.367923640960886E-6	DEFECT
// JUnit3 test //assertEquals(runner.getFormatter().getError(), JUnitTestRunner.FAILURES, runner.getRetCode());	WITHOUT_CLASSIFICATION	0.999998345133257	WITHOUT_CLASSIFICATION	1.6548667430671517E-6	DEFECT
// On junit3 this is a FAILURE, on junit4 this is an ERROR	WITHOUT_CLASSIFICATION	0.9999899652402264	WITHOUT_CLASSIFICATION	1.0034759773604342E-5	DEFECT
/*          * @param event the build event that is being logged.         */	WITHOUT_CLASSIFICATION	0.9999989904849469	WITHOUT_CLASSIFICATION	1.0095150530817405E-6	DEFECT
// check that an exception in the constructor is noticed	WITHOUT_CLASSIFICATION	0.9999998963588799	WITHOUT_CLASSIFICATION	1.036411200624679E-7	DEFECT
// the test runner that wrap the dummy formatter that interests us	WITHOUT_CLASSIFICATION	0.9999936233611156	WITHOUT_CLASSIFICATION	6.376638884368087E-6	DEFECT
// use the classloader that loaded this class otherwise // it will not be able to run inner classes if this test // is ran in non-forked mode.	WITHOUT_CLASSIFICATION	0.9999997766156208	WITHOUT_CLASSIFICATION	2.2338437928604187E-7	DEFECT
// dummy formatter just to catch the error	WITHOUT_CLASSIFICATION	0.9999998899555078	WITHOUT_CLASSIFICATION	1.1004449213295401E-7	DEFECT
// end of try-catch	WITHOUT_CLASSIFICATION	0.9999995521052819	WITHOUT_CLASSIFICATION	4.478947181212865E-7	DEFECT
// end of try-catch	WITHOUT_CLASSIFICATION	0.9999995521052819	WITHOUT_CLASSIFICATION	4.478947181212865E-7	DEFECT
// byte - byte compare	WITHOUT_CLASSIFICATION	0.999997905072499	WITHOUT_CLASSIFICATION	2.094927501069141E-6	DEFECT
/*          * @param event the build event that is being logged.         */	WITHOUT_CLASSIFICATION	0.9999989904849469	WITHOUT_CLASSIFICATION	1.0095150530817405E-6	DEFECT
// get the fileset and its basedir	WITHOUT_CLASSIFICATION	0.9999985919035685	WITHOUT_CLASSIFICATION	1.4080964314501732E-6	DEFECT
// get the fileset and its basedir	WITHOUT_CLASSIFICATION	0.9999985919035685	WITHOUT_CLASSIFICATION	1.4080964314501732E-6	DEFECT
// get the fileset and its basedir	WITHOUT_CLASSIFICATION	0.9999985919035685	WITHOUT_CLASSIFICATION	1.4080964314501732E-6	DEFECT
// Set up a SOSGet task	WITHOUT_CLASSIFICATION	0.9999999327255769	WITHOUT_CLASSIFICATION	6.72744231710834E-8	DEFECT
// Set up a SOSGet task	WITHOUT_CLASSIFICATION	0.9999999327255769	WITHOUT_CLASSIFICATION	6.72744231710834E-8	DEFECT
// Set up a SOSCheckin task	WITHOUT_CLASSIFICATION	0.9999999898039172	WITHOUT_CLASSIFICATION	1.0196082824731227E-8	DEFECT
// Set up a SOSCheckin task	WITHOUT_CLASSIFICATION	0.9999999898039172	WITHOUT_CLASSIFICATION	1.0196082824731227E-8	DEFECT
// Set up a SOSCheckout task	WITHOUT_CLASSIFICATION	0.999999985559787	WITHOUT_CLASSIFICATION	1.4440212951875359E-8	DEFECT
// Set up a sosCheckout task	WITHOUT_CLASSIFICATION	0.9999999715486266	WITHOUT_CLASSIFICATION	2.8451373352142428E-8	DEFECT
// Set up a sosCheckout task	WITHOUT_CLASSIFICATION	0.9999999715486266	WITHOUT_CLASSIFICATION	2.8451373352142428E-8	DEFECT
// We have extra elements	WITHOUT_CLASSIFICATION	0.9999996968205067	WITHOUT_CLASSIFICATION	3.0317949325818507E-7	DEFECT
// give it some time to display	WITHOUT_CLASSIFICATION	0.9999918516149886	WITHOUT_CLASSIFICATION	8.148385011440968E-6	DEFECT
// Set up a VSSGet task	WITHOUT_CLASSIFICATION	0.9999998972866241	WITHOUT_CLASSIFICATION	1.0271337592438943E-7	DEFECT
// Set up a VSSLabel task	WITHOUT_CLASSIFICATION	0.9999999599105327	WITHOUT_CLASSIFICATION	4.0089467293148444E-8	DEFECT
// Set up a VSSLabel task	WITHOUT_CLASSIFICATION	0.9999999599105327	WITHOUT_CLASSIFICATION	4.0089467293148444E-8	DEFECT
// Set up a VSSHistory task	WITHOUT_CLASSIFICATION	0.9999999451814464	WITHOUT_CLASSIFICATION	5.481855355292082E-8	DEFECT
// Set up a VSSHistory task	WITHOUT_CLASSIFICATION	0.9999999451814464	WITHOUT_CLASSIFICATION	5.481855355292082E-8	DEFECT
// Set up a Timestamp	WITHOUT_CLASSIFICATION	0.9999999801084937	WITHOUT_CLASSIFICATION	1.989150638075095E-8	DEFECT
// Get today's date	WITHOUT_CLASSIFICATION	0.9999990499369902	WITHOUT_CLASSIFICATION	9.50063009839344E-7	DEFECT
// Set up a VSSCheckIn task	WITHOUT_CLASSIFICATION	0.9999999559041536	WITHOUT_CLASSIFICATION	4.409584637319808E-8	DEFECT
// Set up a VSSCheckOut task	WITHOUT_CLASSIFICATION	0.9999999913027295	WITHOUT_CLASSIFICATION	8.697270444362873E-9	DEFECT
// Set up a VSSAdd task	WITHOUT_CLASSIFICATION	0.9999999215549406	WITHOUT_CLASSIFICATION	7.844505954696212E-8	DEFECT
// Set up a VSSCp task	WITHOUT_CLASSIFICATION	0.9999999075453433	WITHOUT_CLASSIFICATION	9.245465667069435E-8	DEFECT
// Set up a VSSCreate task	WITHOUT_CLASSIFICATION	0.9999999777874538	WITHOUT_CLASSIFICATION	2.221254626254114E-8	DEFECT
// Count the number of empty strings	WITHOUT_CLASSIFICATION	0.9999994651467241	WITHOUT_CLASSIFICATION	5.348532758468812E-7	DEFECT
// ran Ant tests with -ea and this would fail spuriously	WITHOUT_CLASSIFICATION	0.9998164803118215	WITHOUT_CLASSIFICATION	1.8351968817849896E-4	DEFECT
// now to the expected failures	WITHOUT_CLASSIFICATION	0.9999983932378959	WITHOUT_CLASSIFICATION	1.6067621042355435E-6	DEFECT
// catalog <--> catalog	WITHOUT_CLASSIFICATION	0.9999984469499732	WITHOUT_CLASSIFICATION	1.5530500267638649E-6	DEFECT
// catalog1 --> catalog2 --> catalog3 --> catalog1	WITHOUT_CLASSIFICATION	0.9999896877057716	WITHOUT_CLASSIFICATION	1.0312294228457113E-5	DEFECT
// catalog2 --> catalog1 --> catalog	WITHOUT_CLASSIFICATION	0.9999868563148573	WITHOUT_CLASSIFICATION	1.3143685142749278E-5	DEFECT
//check that dir and src are incompatible	WITHOUT_CLASSIFICATION	0.9999999623872676	WITHOUT_CLASSIFICATION	3.7612732408275685E-8	DEFECT
//check that fullpath and prefix are incompatible	WITHOUT_CLASSIFICATION	0.9999997960824014	WITHOUT_CLASSIFICATION	2.0391759866448846E-7	DEFECT
// check that reference zipfilesets cannot have specific attributes	WITHOUT_CLASSIFICATION	0.9999997997271154	WITHOUT_CLASSIFICATION	2.002728846404715E-7	DEFECT
// check that a reference zipfileset gets the same attributes as the original	WITHOUT_CLASSIFICATION	0.9999999645316721	WITHOUT_CLASSIFICATION	3.5468327922974816E-8	DEFECT
//check that dir and src are incompatible	WITHOUT_CLASSIFICATION	0.9999999623872676	WITHOUT_CLASSIFICATION	3.7612732408275685E-8	DEFECT
// // These shenanigans are necessary b/c Norm Walsh's resolver // has a different idea of how file URLs are created on windoze // ie file://c:/foo instead of file:///c:/foo //	WITHOUT_CLASSIFICATION	0.9999993949194234	WITHOUT_CLASSIFICATION	6.050805766417287E-7	DEFECT
//check that dir and src are incompatible	WITHOUT_CLASSIFICATION	0.9999999623872676	WITHOUT_CLASSIFICATION	3.7612732408275685E-8	DEFECT
//check that fullpath and prefix are incompatible	WITHOUT_CLASSIFICATION	0.9999997960824014	WITHOUT_CLASSIFICATION	2.0391759866448846E-7	DEFECT
// try a netware-volume length path, see how it is handled	WITHOUT_CLASSIFICATION	0.9999994216729955	WITHOUT_CLASSIFICATION	5.783270045517666E-7	DEFECT
// actually tests constructor as well as setPath	WITHOUT_CLASSIFICATION	0.99999999402296	WITHOUT_CLASSIFICATION	5.977040027924298E-9	DEFECT
// check that reference tarfilesets cannot have specific attributes	WITHOUT_CLASSIFICATION	0.9999999244359431	WITHOUT_CLASSIFICATION	7.556405683299318E-8	DEFECT
// try a multi-part netware-volume length path w/forward slash, see how it is handled	WITHOUT_CLASSIFICATION	0.9999996692102868	WITHOUT_CLASSIFICATION	3.307897132561755E-7	DEFECT
// try a multi-part netware-volume length path, see how it is handled	WITHOUT_CLASSIFICATION	0.9999994541072817	WITHOUT_CLASSIFICATION	5.458927182630822E-7	DEFECT
// dummy1 --> dummy2 --> dummy3 --> dummy1	WITHOUT_CLASSIFICATION	0.9999609153036891	WITHOUT_CLASSIFICATION	3.908469631089395E-5	DEFECT
// try a netware-volume length path w/forward slash, see how it is handled	WITHOUT_CLASSIFICATION	0.9999996495563688	WITHOUT_CLASSIFICATION	3.5044363122779786E-7	DEFECT
// try a multi-part netware-volume length path with UNIX // separator (this testcase if from an actual bug that was // found, in AvailableTest, which uses PathTokenizer)	WITHOUT_CLASSIFICATION	0.9999855457518262	WITHOUT_CLASSIFICATION	1.4454248173825427E-5	DEFECT
// dummy1 --> dummy2 --> dummy3 --> dummy1	WITHOUT_CLASSIFICATION	0.9999609153036891	WITHOUT_CLASSIFICATION	3.908469631089395E-5	DEFECT
// dummy1 --> dummy2 --> dummy3 --> dummy1	WITHOUT_CLASSIFICATION	0.9999609153036891	WITHOUT_CLASSIFICATION	3.908469631089395E-5	DEFECT
// dummy1 --> dummy2 --> dummy3 --> dummy1	WITHOUT_CLASSIFICATION	0.9999609153036891	WITHOUT_CLASSIFICATION	3.908469631089395E-5	DEFECT
// dummy1 --> dummy2 --> dummy3 --> dummy1	WITHOUT_CLASSIFICATION	0.9999609153036891	WITHOUT_CLASSIFICATION	3.908469631089395E-5	DEFECT
// dummy1 --> dummy2 --> dummy3 (with Path "/a")	WITHOUT_CLASSIFICATION	0.9999824339907732	WITHOUT_CLASSIFICATION	1.7566009226739558E-5	DEFECT
// This class acts as a custom Ant task also // and uses these variables/methods in that mode	WITHOUT_CLASSIFICATION	0.9999993736033751	WITHOUT_CLASSIFICATION	6.263966248536717E-7	DEFECT
// dummy1 --> dummy2 --> dummy3 // (which has the Project's basedir as root).	WITHOUT_CLASSIFICATION	0.9999966173731599	WITHOUT_CLASSIFICATION	3.3826268401084892E-6	DEFECT
// dummy1 --> dummy2 --> dummy3 // (which has the Project's basedir as root).	WITHOUT_CLASSIFICATION	0.9999966173731599	WITHOUT_CLASSIFICATION	3.3826268401084892E-6	DEFECT
// Grant extra permissions to read and write the user.* properties and read to the // java.home property	WITHOUT_CLASSIFICATION	0.99999802686843	WITHOUT_CLASSIFICATION	1.973131570026088E-6	DEFECT
// dummy1 --> dummy2 --> dummy3 // (which holds patterns "include" and "exclude")	WITHOUT_CLASSIFICATION	0.9999944017433844	WITHOUT_CLASSIFICATION	5.598256615594338E-6	DEFECT
// check that a reference tarfileset gets the same attributes as the original	WITHOUT_CLASSIFICATION	0.9999999842440742	WITHOUT_CLASSIFICATION	1.5755925775577302E-8	DEFECT
// was expected	WITHOUT_CLASSIFICATION	0.9999994556944511	WITHOUT_CLASSIFICATION	5.443055487908857E-7	DEFECT
// Revoke permission to write user.home (granted above via user.*), still able to read though. // and the default granted permission to read os.name.	WITHOUT_CLASSIFICATION	0.9999998722648011	WITHOUT_CLASSIFICATION	1.2773519882626762E-7	DEFECT
// Was expected, test passes	WITHOUT_CLASSIFICATION	0.9999985613140026	WITHOUT_CLASSIFICATION	1.4386859975405474E-6	DEFECT
// Was expected, test passes	WITHOUT_CLASSIFICATION	0.9999985613140026	WITHOUT_CLASSIFICATION	1.4386859975405474E-6	DEFECT
// Was expected, test passes	WITHOUT_CLASSIFICATION	0.9999985613140026	WITHOUT_CLASSIFICATION	1.4386859975405474E-6	DEFECT
/*         * After changing CommandlineJava to search for the java         * executable, I don't know, how to tests the value returned         * here without using the same logic as applied in the class         * itself.         *         * assertTrue("no classpath", "java", s[0]);         */	WITHOUT_CLASSIFICATION	0.999999998818046	WITHOUT_CLASSIFICATION	1.1819539198845627E-9	DEFECT
//        assertEquals("with classpath", "java", s[0]);	WITHOUT_CLASSIFICATION	0.9999999460010144	WITHOUT_CLASSIFICATION	5.399898552295859E-8	DEFECT
// only the second iteration would pass because of PR 27218	WITHOUT_CLASSIFICATION	0.9999277539543414	WITHOUT_CLASSIFICATION	7.224604565858348E-5	DEFECT
//mix element types	WITHOUT_CLASSIFICATION	0.9999926782135226	WITHOUT_CLASSIFICATION	7.3217864774132774E-6	DEFECT
//implicit composite	WITHOUT_CLASSIFICATION	0.999999734996608	WITHOUT_CLASSIFICATION	2.6500339207200916E-7	DEFECT
// a --> b --> c --- def //               \-- ghi	WITHOUT_CLASSIFICATION	0.9999994817419926	WITHOUT_CLASSIFICATION	5.182580073737004E-7	DEFECT
// // Ensure that an external entity resolves as expected Using an // XMLCatalog: // // Transform an XML file that refers to the entity into a text // file, entity is listed in the XMLCatalog pointing to a // different file.  Stuff result into property: val2 //	WITHOUT_CLASSIFICATION	0.9999999281960492	WITHOUT_CLASSIFICATION	7.180395074000549E-8	DEFECT
// // Ensure that an external entity resolves as expected with NO // XMLCatalog involvement: // // Transform an XML file that refers to the entity into a text // file, stuff result into property: val1 //	WITHOUT_CLASSIFICATION	0.9999998120255963	WITHOUT_CLASSIFICATION	1.8797440361415867E-7	DEFECT
// this actually relies on the first manifest being found on // the classpath (probably rt.jar's) being valid	WITHOUT_CLASSIFICATION	0.9999995450003761	WITHOUT_CLASSIFICATION	4.549996238826903E-7	DEFECT
// // Ensure that an external entity resolves as expected with NO // XMLCatalog involvement: // // Transform an XML file that contains a reference to a _second_ XML file // via the document() function.  The _second_ XML file refers to an entity. // Stuff result into the property: val3 //	WITHOUT_CLASSIFICATION	0.9999922986399372	WITHOUT_CLASSIFICATION	7.701360062822104E-6	DEFECT
// // Ensure that an external entity resolves as expected Using an // XMLCatalog: // // Transform an XML file that contains a reference to a _second_ XML file // via the document() function.  The _second_ XML file refers to an entity. // The entity is listed in the XMLCatalog pointing to a different file. // Stuff result into the property: val4 //	WITHOUT_CLASSIFICATION	0.9999997631025727	WITHOUT_CLASSIFICATION	2.3689742722498505E-7	DEFECT
// The following will be used as types and tasks	WITHOUT_CLASSIFICATION	0.9999932666596923	WITHOUT_CLASSIFICATION	6.733340307664398E-6	DEFECT
// share the setup for testing the depend task	WITHOUT_CLASSIFICATION	0.9999999986941671	WITHOUT_CLASSIFICATION	1.3058329490086759E-9	DEFECT
// Test for path relative to project base directory	WITHOUT_CLASSIFICATION	0.9999998273297994	WITHOUT_CLASSIFICATION	1.7267020057535068E-7	DEFECT
//class-MockCache	WITHOUT_CLASSIFICATION	0.9999952604237824	WITHOUT_CLASSIFICATION	4.739576217531126E-6	DEFECT
//  =====================  attributes  =====================	WITHOUT_CLASSIFICATION	0.9999994477739398	WITHOUT_CLASSIFICATION	5.522260603317823E-7	DEFECT
//class-MockCache	WITHOUT_CLASSIFICATION	0.9999952604237824	WITHOUT_CLASSIFICATION	4.739576217531126E-6	DEFECT
//  =====================  constructors, factories  =====================	WITHOUT_CLASSIFICATION	0.9999998357032484	WITHOUT_CLASSIFICATION	1.6429675170271661E-7	DEFECT
//  =====================  JUnit stuff  =====================	WITHOUT_CLASSIFICATION	0.9999962635485029	WITHOUT_CLASSIFICATION	3.7364514970284136E-6	DEFECT
// project reference is set in super.setUp()	WITHOUT_CLASSIFICATION	0.9999840813438304	WITHOUT_CLASSIFICATION	1.591865616954808E-5	DEFECT
// init the testclasses path object	WITHOUT_CLASSIFICATION	0.9999995756661891	WITHOUT_CLASSIFICATION	4.24333810856737E-7	DEFECT
/* * /    // for test only - ignore tests where we arent work at the moment    public static junit.framework.Test suite() {        junit.framework.TestSuite suite= new junit.framework.TestSuite();        suite.addTest(new ModifiedSelectorTest("testValidateWrongCache"));        return suite;    }    /* */	WITHOUT_CLASSIFICATION	0.9999999973642487	WITHOUT_CLASSIFICATION	2.6357512971935765E-9	DEFECT
// =======  testcases for the attributes and nested elements of the selector  =====	WITHOUT_CLASSIFICATION	0.9999999710546255	WITHOUT_CLASSIFICATION	2.8945374470533223E-8	DEFECT
// do the actions	WITHOUT_CLASSIFICATION	0.9999981025434643	WITHOUT_CLASSIFICATION	1.8974565356823E-6	DEFECT
// do the checks - the buildfile stores the fileset as property	WITHOUT_CLASSIFICATION	0.9999995806582694	WITHOUT_CLASSIFICATION	4.1934173055066355E-7	DEFECT
// must be empty according to the Mock* implementations	WITHOUT_CLASSIFICATION	0.99998816875685	WITHOUT_CLASSIFICATION	1.1831243149922306E-5	DEFECT
// don't catch the JUnit exceptions	WITHOUT_CLASSIFICATION	0.9999975954007629	WITHOUT_CLASSIFICATION	2.404599237064824E-6	DEFECT
// no check for 1<=kind<=3 - only internal use therefore check it // while development	WITHOUT_CLASSIFICATION	0.9999999989026618	WITHOUT_CLASSIFICATION	1.097338174791557E-9	DEFECT
// readable form of parameter kind	WITHOUT_CLASSIFICATION	0.9999993595359437	WITHOUT_CLASSIFICATION	6.404640564212066E-7	DEFECT
// setup the "Ant project"	WITHOUT_CLASSIFICATION	0.9999991416495965	WITHOUT_CLASSIFICATION	8.583504035310145E-7	DEFECT
// setup the selector	WITHOUT_CLASSIFICATION	0.9999999356265412	WITHOUT_CLASSIFICATION	6.437345883318855E-8	DEFECT
// get the cache, so we can check our things	WITHOUT_CLASSIFICATION	0.9999999861406031	WITHOUT_CLASSIFICATION	1.3859396745484716E-8	DEFECT
// the test	WITHOUT_CLASSIFICATION	0.999999483996581	WITHOUT_CLASSIFICATION	5.160034189085088E-7	DEFECT
// MockCache doesnt create a file - therefore no cleanup needed	WITHOUT_CLASSIFICATION	0.999999997329278	WITHOUT_CLASSIFICATION	2.6707220559171917E-9	DEFECT
// add the test classes to its classpath	WITHOUT_CLASSIFICATION	0.9999997767221992	WITHOUT_CLASSIFICATION	2.2327780088845734E-7	DEFECT
// let the selector do its checks	WITHOUT_CLASSIFICATION	0.9999994094418004	WITHOUT_CLASSIFICATION	5.905581996573559E-7	DEFECT
// extract the algorithm name (and config) from the selectors output	WITHOUT_CLASSIFICATION	0.9999689960029824	WITHOUT_CLASSIFICATION	3.1003997017608E-5	DEFECT
// '<' and '>' are only used if the algorithm has properties	WITHOUT_CLASSIFICATION	0.9999973355844942	WITHOUT_CLASSIFICATION	2.664415505806125E-6	DEFECT
// return the clean value	WITHOUT_CLASSIFICATION	0.9999999506573215	WITHOUT_CLASSIFICATION	4.934267843648921E-8	DEFECT
// initialize test environment (called "bed")	WITHOUT_CLASSIFICATION	0.9999999837663242	WITHOUT_CLASSIFICATION	1.6233675855761146E-8	DEFECT
// initialize test environment (called "bed")	WITHOUT_CLASSIFICATION	0.9999999837663242	WITHOUT_CLASSIFICATION	1.6233675855761146E-8	DEFECT
// Configure the selector	WITHOUT_CLASSIFICATION	0.9999999347871719	WITHOUT_CLASSIFICATION	6.521282807247701E-8	DEFECT
// Configure the selector	WITHOUT_CLASSIFICATION	0.9999999347871719	WITHOUT_CLASSIFICATION	6.521282807247701E-8	DEFECT
// does the selection	WITHOUT_CLASSIFICATION	0.9999832717179604	WITHOUT_CLASSIFICATION	1.6728282039581234E-5	DEFECT
// evaluate correctness	WITHOUT_CLASSIFICATION	0.9999958412363831	WITHOUT_CLASSIFICATION	4.158763616863321E-6	DEFECT
// evaluate correctness	WITHOUT_CLASSIFICATION	0.9999958412363831	WITHOUT_CLASSIFICATION	4.158763616863321E-6	DEFECT
// same logic as on algorithm, no testcases created	WITHOUT_CLASSIFICATION	0.9999999368347845	WITHOUT_CLASSIFICATION	6.316521547402601E-8	DEFECT
// same logic as on algorithm, no testcases created	WITHOUT_CLASSIFICATION	0.9999999368347845	WITHOUT_CLASSIFICATION	6.316521547402601E-8	DEFECT
// given cache must be empty	WITHOUT_CLASSIFICATION	0.9999993641342537	WITHOUT_CLASSIFICATION	6.358657463061968E-7	DEFECT
// cache must return a stored value	WITHOUT_CLASSIFICATION	0.9999999335679995	WITHOUT_CLASSIFICATION	6.64320004788662E-8	DEFECT
// test the iterator	WITHOUT_CLASSIFICATION	0.9999999821028162	WITHOUT_CLASSIFICATION	1.7897183863762957E-8	DEFECT
// clear the cache	WITHOUT_CLASSIFICATION	0.9999993127571464	WITHOUT_CLASSIFICATION	6.872428537026666E-7	DEFECT
// must not be a directory	WITHOUT_CLASSIFICATION	0.9999995791908645	WITHOUT_CLASSIFICATION	4.208091355417212E-7	DEFECT
// get the Hashvalues	WITHOUT_CLASSIFICATION	0.9999999038925511	WITHOUT_CLASSIFICATION	9.610744894186048E-8	DEFECT
// Assert !=null and equality	WITHOUT_CLASSIFICATION	0.9999999020327108	WITHOUT_CLASSIFICATION	9.796728909453714E-8	DEFECT
//if-isFile //for	WITHOUT_CLASSIFICATION	0.999999097923866	WITHOUT_CLASSIFICATION	9.020761339866449E-7	DEFECT
// ==============  testcases for the comparator implementations  ==============	WITHOUT_CLASSIFICATION	0.9999983702876561	WITHOUT_CLASSIFICATION	1.6297123439140276E-6	DEFECT
//not yet supported see note in selector	WITHOUT_CLASSIFICATION	0.9999737394719106	WITHOUT_CLASSIFICATION	2.626052808941466E-5	DEFECT
//new File("src/etc/testcases/types/resources/selectors/cache.properties").delete();	WITHOUT_CLASSIFICATION	0.9999999121137084	WITHOUT_CLASSIFICATION	8.788629152556115E-8	DEFECT
// really "2"	WITHOUT_CLASSIFICATION	0.9999912187587028	WITHOUT_CLASSIFICATION	8.781241297236626E-6	DEFECT
// Configure the selector - only defaults are used	WITHOUT_CLASSIFICATION	0.9999999819600421	WITHOUT_CLASSIFICATION	1.8039957874700197E-8	DEFECT
//                     + "  <emptyElement></emptyElement>"	WITHOUT_CLASSIFICATION	0.9999973287066006	WITHOUT_CLASSIFICATION	2.671293399400543E-6	DEFECT
/* ============ ResourceFactory interface ====================== */	WITHOUT_CLASSIFICATION	0.9999990126650895	WITHOUT_CLASSIFICATION	9.873349105601754E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999994848348538	WITHOUT_CLASSIFICATION	5.151651463210354E-7	DEFECT
//class-BFT	WITHOUT_CLASSIFICATION	0.9999840091133498	WITHOUT_CLASSIFICATION	1.5990886650136166E-5	DEFECT
// do the actions	WITHOUT_CLASSIFICATION	0.9999981025434643	WITHOUT_CLASSIFICATION	1.8974565356823E-6	DEFECT
// don't catch the JUnit exceptions	WITHOUT_CLASSIFICATION	0.9999975954007629	WITHOUT_CLASSIFICATION	2.404599237064824E-6	DEFECT
// // *****  First Run  ***** // the first call should get all files, because nothing is in // the cache //	WITHOUT_CLASSIFICATION	0.9999954201619179	WITHOUT_CLASSIFICATION	4.579838082097717E-6	DEFECT
// // *****  Second Run  ***** // the second call should get no files, because no content // has changed //	WITHOUT_CLASSIFICATION	0.9999995156932544	WITHOUT_CLASSIFICATION	4.843067456038914E-7	DEFECT
// // *****  make some files dirty  ***** //	WITHOUT_CLASSIFICATION	0.9999790432484557	WITHOUT_CLASSIFICATION	2.095675154434696E-5	DEFECT
// these files are made dirty --> 3+4 with different content	WITHOUT_CLASSIFICATION	0.9999978536393335	WITHOUT_CLASSIFICATION	2.1463606664070588E-6	DEFECT
// AccessObject to the test-Ant-environment	WITHOUT_CLASSIFICATION	0.9999988724750367	WITHOUT_CLASSIFICATION	1.1275249633222239E-6	DEFECT
// give some values (via property file) to that environment	WITHOUT_CLASSIFICATION	0.999958054137688	WITHOUT_CLASSIFICATION	4.194586231210918E-5	DEFECT
// call the target for making the files dirty	WITHOUT_CLASSIFICATION	0.9999984247282445	WITHOUT_CLASSIFICATION	1.5752717555188986E-6	DEFECT
// // *****  Third Run  ***** // third call should get only those files, which CONTENT changed // (no timestamp changes required!)	WITHOUT_CLASSIFICATION	0.9999991664153389	WITHOUT_CLASSIFICATION	8.335846611877192E-7	DEFECT
// // *****  Check the result  ***** //	WITHOUT_CLASSIFICATION	0.9999993755326744	WITHOUT_CLASSIFICATION	6.244673257196451E-7	DEFECT
// Mark all files which should be selected as (T)rue and all others // as (F)alse. Directories are always selected so they always are // (T)rue.	WITHOUT_CLASSIFICATION	0.9999999950373313	WITHOUT_CLASSIFICATION	4.962668701315609E-9	DEFECT
// f2name shouldn't be selected: only timestamp has changed!	WITHOUT_CLASSIFICATION	0.9999515386109068	WITHOUT_CLASSIFICATION	4.846138909307253E-5	DEFECT
// info text // list of files // expected result // result	WITHOUT_CLASSIFICATION	0.9999997359953621	WITHOUT_CLASSIFICATION	2.6400463785294764E-7	DEFECT
// cleanup the environment	WITHOUT_CLASSIFICATION	0.9999961788682143	WITHOUT_CLASSIFICATION	3.8211317855788955E-6	DEFECT
// cleanup the environment	WITHOUT_CLASSIFICATION	0.9999961788682143	WITHOUT_CLASSIFICATION	3.8211317855788955E-6	DEFECT
// RuleBasedCollator not yet supported - see Selector:375 note	WITHOUT_CLASSIFICATION	0.9987476977885175	WITHOUT_CLASSIFICATION	0.001252302211482508	DEFECT
//s.addParam(createParam("algorithm.provider","---")); // i don't know any valid	WITHOUT_CLASSIFICATION	0.9993622259994472	WITHOUT_CLASSIFICATION	6.377740005527404E-4	DEFECT
// first and second run	WITHOUT_CLASSIFICATION	0.9999988120784344	WITHOUT_CLASSIFICATION	1.1879215655774548E-6	DEFECT
// make dirty	WITHOUT_CLASSIFICATION	0.9999930754765414	WITHOUT_CLASSIFICATION	6.924523458634752E-6	DEFECT
// third run	WITHOUT_CLASSIFICATION	0.9999813441567654	WITHOUT_CLASSIFICATION	1.8655843234599605E-5	DEFECT
// the directories to check	WITHOUT_CLASSIFICATION	0.9999997810195792	WITHOUT_CLASSIFICATION	2.1898042073250492E-7	DEFECT
// do the checks	WITHOUT_CLASSIFICATION	0.9999996144162757	WITHOUT_CLASSIFICATION	3.855837242798744E-7	DEFECT
//class-MockProject	WITHOUT_CLASSIFICATION	0.9999505927003448	WITHOUT_CLASSIFICATION	4.940729965521376E-5	DEFECT
//class-ModifiedSelectorTest	WITHOUT_CLASSIFICATION	0.9999999237135724	WITHOUT_CLASSIFICATION	7.628642759240875E-8	DEFECT
// First read in zero bytes	WITHOUT_CLASSIFICATION	0.9999996608363021	WITHOUT_CLASSIFICATION	3.391636979140354E-7	DEFECT
// Now read in the string	WITHOUT_CLASSIFICATION	0.9999996744393833	WITHOUT_CLASSIFICATION	3.2556061666830256E-7	DEFECT
// Make sure that the counts are the same	WITHOUT_CLASSIFICATION	0.9999997814265255	WITHOUT_CLASSIFICATION	2.1857347448454724E-7	DEFECT
// LineOrientedOutputStreamTest	WITHOUT_CLASSIFICATION	0.9999999573900665	WITHOUT_CLASSIFICATION	4.2609933452378795E-8	DEFECT
// make sure that elapsed time in set via date works	WITHOUT_CLASSIFICATION	0.9999987627743109	WITHOUT_CLASSIFICATION	1.2372256891106965E-6	DEFECT
// make sure that elapsed time in ms works	WITHOUT_CLASSIFICATION	0.9999900580140806	WITHOUT_CLASSIFICATION	9.941985919439153E-6	DEFECT
// should be new moon	WITHOUT_CLASSIFICATION	0.9999970252977222	WITHOUT_CLASSIFICATION	2.9747022777535846E-6	DEFECT
// Try a silly case	WITHOUT_CLASSIFICATION	0.9999901009508185	WITHOUT_CLASSIFICATION	9.899049181384405E-6	DEFECT
// and a little longer	WITHOUT_CLASSIFICATION	0.9999994580809148	WITHOUT_CLASSIFICATION	5.41919085087585E-7	DEFECT
/*             * throw in drive letters             */	WITHOUT_CLASSIFICATION	0.9999875790020791	WITHOUT_CLASSIFICATION	1.242099792092728E-5	DEFECT
/*             * promised to eliminate consecutive slashes after drive letter.             */	WITHOUT_CLASSIFICATION	0.9999998678253107	WITHOUT_CLASSIFICATION	1.321746894174206E-7	DEFECT
/*             * Start with simple absolute file names.             */	WITHOUT_CLASSIFICATION	0.9999999929059892	WITHOUT_CLASSIFICATION	7.09401087481552E-9	DEFECT
/*             * Start with simple absolute file names.             */	WITHOUT_CLASSIFICATION	0.9999999929059892	WITHOUT_CLASSIFICATION	7.09401087481552E-9	DEFECT
/*         * Now test some relative file name magic.         */	WITHOUT_CLASSIFICATION	0.9999998934654227	WITHOUT_CLASSIFICATION	1.0653457737027987E-7	DEFECT
/*         * Now test some relative file name magic.         */	WITHOUT_CLASSIFICATION	0.9999998934654227	WITHOUT_CLASSIFICATION	1.0653457737027987E-7	DEFECT
// implies lastModified == 0	WITHOUT_CLASSIFICATION	0.9999999716456618	WITHOUT_CLASSIFICATION	2.8354338221763313E-8	DEFECT
/* ============ FileNameMapper interface ======================= */	WITHOUT_CLASSIFICATION	0.9999973806882297	WITHOUT_CLASSIFICATION	2.619311770312451E-6	DEFECT
// Windows adds the drive letter in uppercase, unless you run Cygwin	WITHOUT_CLASSIFICATION	0.9997776937972908	WITHOUT_CLASSIFICATION	2.2230620270927764E-4	DEFECT
/*         * Sleep for some time to make sure a touched file would get a         * more recent timestamp according to the file system's         * granularity (should be > 2s to account for Windows FAT).         */	WITHOUT_CLASSIFICATION	0.99999641986347	WITHOUT_CLASSIFICATION	3.5801365300246203E-6	DEFECT
// number of milliseconds in a day	WITHOUT_CLASSIFICATION	0.9999651212900255	WITHOUT_CLASSIFICATION	3.487870997454563E-5	DEFECT
// in a previous version, the date of the file was set to 123456 // milliseconds since 01.01.1970 // it did not work on a computer running JDK 1.4.1_02 + Windows 2000	WITHOUT_CLASSIFICATION	0.9982049587163714	WITHOUT_CLASSIFICATION	0.0017950412836286796	DEFECT
/*         * I would love to compare this with 123456, but depending on         * the filesystems granularity it can take an arbitrary value.         *         * Just assert the time has changed.         */	WITHOUT_CLASSIFICATION	0.9999996878666226	WITHOUT_CLASSIFICATION	3.1213337737658915E-7	DEFECT
/*             * throw in NetWare volume names             */	WITHOUT_CLASSIFICATION	0.9999976524414759	WITHOUT_CLASSIFICATION	2.34755852420339E-6	DEFECT
/*             * throw in NetWare volume names             */	WITHOUT_CLASSIFICATION	0.9999976524414759	WITHOUT_CLASSIFICATION	2.34755852420339E-6	DEFECT
/*             * drive letters must be considered just normal filenames.             */	WITHOUT_CLASSIFICATION	0.9999999897797246	WITHOUT_CLASSIFICATION	1.0220275432194078E-8	DEFECT
// Passed test 	WITHOUT_CLASSIFICATION	0.9999999140774976	WITHOUT_CLASSIFICATION	8.592250236970824E-8	DEFECT
// Expected exception caught	WITHOUT_CLASSIFICATION	0.99999612696442	WITHOUT_CLASSIFICATION	3.873035580010795E-6	DEFECT
// Expected exception caught	WITHOUT_CLASSIFICATION	0.99999612696442	WITHOUT_CLASSIFICATION	3.873035580010795E-6	DEFECT
// null parent dir	WITHOUT_CLASSIFICATION	0.9999954153832091	WITHOUT_CLASSIFICATION	4.584616790887584E-6	DEFECT
//preserve case on Cygwin when using 1.4 toURI:	WITHOUT_CLASSIFICATION	0.9999994492771369	WITHOUT_CLASSIFICATION	5.507228631768412E-7	DEFECT
// OK, Java 1.3.	WITHOUT_CLASSIFICATION	0.9999985044331762	WITHOUT_CLASSIFICATION	1.495566823794609E-6	DEFECT
//get a time	WITHOUT_CLASSIFICATION	0.9999994406674249	WITHOUT_CLASSIFICATION	5.593325751456866E-7	DEFECT
//add some time. We assume no OS has a granularity this bad	WITHOUT_CLASSIFICATION	0.9999968544152804	WITHOUT_CLASSIFICATION	3.1455847196040486E-6	DEFECT
/*        assertTrue("same timestamp is up to date",                fu.isUpToDate(firstTime, firstTime));                */	WITHOUT_CLASSIFICATION	0.9999999664521138	WITHOUT_CLASSIFICATION	3.354788621131511E-8	DEFECT
//check that older is up to date with a newer dest	WITHOUT_CLASSIFICATION	0.999999608979378	WITHOUT_CLASSIFICATION	3.9102062207113276E-7	DEFECT
//check that older is up to date with a newer dest	WITHOUT_CLASSIFICATION	0.999999608979378	WITHOUT_CLASSIFICATION	3.9102062207113276E-7	DEFECT
// This just tests that the function does not blow up	WITHOUT_CLASSIFICATION	0.9999980485581892	WITHOUT_CLASSIFICATION	1.951441810812894E-6	DEFECT
// java.home is bogus	WITHOUT_CLASSIFICATION	0.9999993907152908	WITHOUT_CLASSIFICATION	6.092847093379346E-7	DEFECT
// could still be OS/2	WITHOUT_CLASSIFICATION	0.9999795585199265	WITHOUT_CLASSIFICATION	2.04414800735693E-5	DEFECT
// 27224 = magic (a random port which is unlikely to be in use)	WITHOUT_CLASSIFICATION	0.9999731928836919	WITHOUT_CLASSIFICATION	2.680711630811713E-5	DEFECT
// order of headers cannot be guaranteed	WITHOUT_CLASSIFICATION	0.9999914306764127	WITHOUT_CLASSIFICATION	8.569323587318843E-6	DEFECT
// state engine: false=envelope, true=message	WITHOUT_CLASSIFICATION	0.9999972269877114	WITHOUT_CLASSIFICATION	2.773012288625814E-6	DEFECT
// make sure there are no issues concerning line separator interpretation // a line separator for regex (perl) is always a unix line (ie \n)	WITHOUT_CLASSIFICATION	0.9999997560738122	WITHOUT_CLASSIFICATION	2.4392618787948773E-7	DEFECT
// sb.append( response + "\r\n" );	WITHOUT_CLASSIFICATION	0.9999980255323737	WITHOUT_CLASSIFICATION	1.9744676262992063E-6	DEFECT
// 60s // a further 30s	WITHOUT_CLASSIFICATION	0.9999997391491064	WITHOUT_CLASSIFICATION	2.6085089347503875E-7	DEFECT
// 60s // a further 30s	WITHOUT_CLASSIFICATION	0.9999997391491064	WITHOUT_CLASSIFICATION	2.6085089347503875E-7	DEFECT
// 60s // a further 30s	WITHOUT_CLASSIFICATION	0.9999997391491064	WITHOUT_CLASSIFICATION	2.6085089347503875E-7	DEFECT
// 60s // a further 30s	WITHOUT_CLASSIFICATION	0.9999997391491064	WITHOUT_CLASSIFICATION	2.6085089347503875E-7	DEFECT
// wait for connection	WITHOUT_CLASSIFICATION	0.9999922307581922	WITHOUT_CLASSIFICATION	7.769241807723512E-6	DEFECT
//throw new IllegalStateException("Command unrecognized: " //    + response);	WITHOUT_CLASSIFICATION	0.9999934517860116	WITHOUT_CLASSIFICATION	6.548213988437444E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999209490427	WITHOUT_CLASSIFICATION	7.905095730336347E-8	DEFECT
// while	WITHOUT_CLASSIFICATION	0.9999963809955662	WITHOUT_CLASSIFICATION	3.6190044336739937E-6	DEFECT
// CRC manually calculated, sorry // CRC // mode // link length // uid, gid	WITHOUT_CLASSIFICATION	0.999999358225175	WITHOUT_CLASSIFICATION	6.417748250929893E-7	DEFECT
// CRC manually calculated, sorry // CRC // mode // link length // uid, gid	WITHOUT_CLASSIFICATION	0.999999358225175	WITHOUT_CLASSIFICATION	6.417748250929893E-7	DEFECT
// CRC // mode // link length // uid, gid	WITHOUT_CLASSIFICATION	0.9999966990461652	WITHOUT_CLASSIFICATION	3.3009538347879688E-6	DEFECT
// CRC // mode // link length // uid, gid	WITHOUT_CLASSIFICATION	0.9999966990461652	WITHOUT_CLASSIFICATION	3.3009538347879688E-6	DEFECT
// CRC // mode // link // uid, gid	WITHOUT_CLASSIFICATION	0.9999856865353436	WITHOUT_CLASSIFICATION	1.431346465644268E-5	DEFECT
// bad CRC // mode // link // uid, gid	WITHOUT_CLASSIFICATION	0.9999894023431692	WITHOUT_CLASSIFICATION	1.0597656830812502E-5	DEFECT
//if we got here, all was well	WITHOUT_CLASSIFICATION	0.999995891229601	WITHOUT_CLASSIFICATION	4.108770398990673E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999996958536274	WITHOUT_CLASSIFICATION	3.0414637271301487E-7	DEFECT
// CheckStyle:ConstantNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9999995903148149	WITHOUT_CLASSIFICATION	4.096851851945928E-7	DEFECT
// CheckStyle:ConstantNameCheck ON	WITHOUT_CLASSIFICATION	0.9999997940321296	WITHOUT_CLASSIFICATION	2.0596787035541803E-7	DEFECT
// Filter out messages based on priority	WITHOUT_CLASSIFICATION	0.9999418596039836	WITHOUT_CLASSIFICATION	5.814039601637245E-5	DEFECT
// Print out the name of the task if we're in one	WITHOUT_CLASSIFICATION	0.999999995861594	WITHOUT_CLASSIFICATION	4.1384059245451585E-9	DEFECT
// shouldn't be possible	WITHOUT_CLASSIFICATION	0.9999729786358023	WITHOUT_CLASSIFICATION	2.702136419775046E-5	DEFECT
// Set up PRIMITIVE_TYPE_MAP	WITHOUT_CLASSIFICATION	0.999999824237086	WITHOUT_CLASSIFICATION	1.757629140086421E-7	DEFECT
// check of add[Configured](Class) pattern	WITHOUT_CLASSIFICATION	0.999999838844451	WITHOUT_CLASSIFICATION	1.6115554895577791E-7	DEFECT
// not really user settable properties on tasks/project components	WITHOUT_CLASSIFICATION	0.9999855104345543	WITHOUT_CLASSIFICATION	1.4489565445595252E-5	DEFECT
// hide addTask for TaskContainers	WITHOUT_CLASSIFICATION	0.9999999700857798	WITHOUT_CLASSIFICATION	2.991422020086327E-8	DEFECT
// use wrappers for primitive classes, e.g. int and // Integer are treated identically	WITHOUT_CLASSIFICATION	0.9999957545677854	WITHOUT_CLASSIFICATION	4.245432214519218E-6	DEFECT
// Check if a create of this property is already present // add takes preference over create for CB purposes	WITHOUT_CLASSIFICATION	0.9999999989940573	WITHOUT_CLASSIFICATION	1.0059426861707941E-9	DEFECT
/*                         *  Ignore this method as there is an addConfigured                         *  form of this method that has a higher                         *  priority                         */	WITHOUT_CLASSIFICATION	0.9999999952065034	WITHOUT_CLASSIFICATION	4.793496537175263E-9	DEFECT
// If a helper cannot be found, or if the helper is for another // classloader, create a new IH	WITHOUT_CLASSIFICATION	0.9999404891551436	WITHOUT_CLASSIFICATION	5.9510844856494156E-5	DEFECT
// Ignore attribute from unknown uri's	WITHOUT_CLASSIFICATION	0.9999985694835617	WITHOUT_CLASSIFICATION	1.4305164382401112E-6	DEFECT
// impossible as getMethods should only return public methods	WITHOUT_CLASSIFICATION	0.9999997026342027	WITHOUT_CLASSIFICATION	2.9736579728506605E-7	DEFECT
// impossible as getMethods should only return public methods	WITHOUT_CLASSIFICATION	0.9999997026342027	WITHOUT_CLASSIFICATION	2.9736579728506605E-7	DEFECT
// impossible as getMethods should only return public methods	WITHOUT_CLASSIFICATION	0.9999997026342027	WITHOUT_CLASSIFICATION	2.9736579728506605E-7	DEFECT
// Element doesn't handle text content	WITHOUT_CLASSIFICATION	0.9999997346555799	WITHOUT_CLASSIFICATION	2.6534442005674624E-7	DEFECT
// Not whitespace - fail	WITHOUT_CLASSIFICATION	0.9999946610348484	WITHOUT_CLASSIFICATION	5.338965151630933E-6	DEFECT
// Only whitespace - ignore	WITHOUT_CLASSIFICATION	0.9999999637166218	WITHOUT_CLASSIFICATION	3.628337825413825E-8	DEFECT
// Class doesn't have a String constructor but a decent factory method	WITHOUT_CLASSIFICATION	0.9999999006870383	WITHOUT_CLASSIFICATION	9.931296170920622E-8	DEFECT
// char and Character get special treatment - take the first character	WITHOUT_CLASSIFICATION	0.9999999968396932	WITHOUT_CLASSIFICATION	3.160306772001206E-9	DEFECT
// simplest case - setAttribute expects String	WITHOUT_CLASSIFICATION	0.9999989151689339	WITHOUT_CLASSIFICATION	1.0848310660504959E-6	DEFECT
// First try with Project.	WITHOUT_CLASSIFICATION	0.9999969253105977	WITHOUT_CLASSIFICATION	3.0746894023093316E-6	DEFECT
// EnumeratedAttributes have their own helper class	WITHOUT_CLASSIFICATION	0.9999954194237315	WITHOUT_CLASSIFICATION	4.580576268483266E-6	DEFECT
// resolve relative paths through Project	WITHOUT_CLASSIFICATION	0.9999703018948718	WITHOUT_CLASSIFICATION	2.969810512826112E-5	DEFECT
/** Version to use for addXXX and addConfiguredXXX */	WITHOUT_CLASSIFICATION	0.9988309146083082	WITHOUT_CLASSIFICATION	0.0011690853916918433	DEFECT
// Well, no matching constructor.	WITHOUT_CLASSIFICATION	0.9999999902449512	WITHOUT_CLASSIFICATION	9.75504886782904E-9	DEFECT
// OK, try without.	WITHOUT_CLASSIFICATION	0.9999903481949343	WITHOUT_CLASSIFICATION	9.651805065791524E-6	DEFECT
// the method called to add/create the nested element	WITHOUT_CLASSIFICATION	0.9999999195394333	WITHOUT_CLASSIFICATION	8.046056662410933E-8	DEFECT
// DO NOTHING	WITHOUT_CLASSIFICATION	0.9999979048116753	WITHOUT_CLASSIFICATION	2.0951883246723556E-6	DEFECT
// ADD or ADD_CONFIGURED	WITHOUT_CLASSIFICATION	0.9999990135534625	WITHOUT_CLASSIFICATION	9.864465374285147E-7	DEFECT
// the method called to set the attribute	WITHOUT_CLASSIFICATION	0.999999932972317	WITHOUT_CLASSIFICATION	6.702768287196239E-8	DEFECT
// add configured replaces the add method	WITHOUT_CLASSIFICATION	0.9999999314935489	WITHOUT_CLASSIFICATION	6.850645111794568E-8	DEFECT
// maintain a sorted list of targets	WITHOUT_CLASSIFICATION	0.9999999941443727	WITHOUT_CLASSIFICATION	5.855627317596014E-9	DEFECT
// worst case. look for a public String constructor and use it // also supports new Whatever(Project, String) as for Path or Reference // This is used (deliberately) for all primitives/wrappers other than // char and boolean	WITHOUT_CLASSIFICATION	0.9999999935611876	WITHOUT_CLASSIFICATION	6.4388123358312485E-9	DEFECT
// Already present	WITHOUT_CLASSIFICATION	0.999999311580526	WITHOUT_CLASSIFICATION	6.884194741273722E-7	DEFECT
// higher derived	WITHOUT_CLASSIFICATION	0.9999978499871118	WITHOUT_CLASSIFICATION	2.1500128881908233E-6	DEFECT
// print the stacktrace in the build file it is always useful... // better have too much info than not enough.	WITHOUT_CLASSIFICATION	0.999949160049437	WITHOUT_CLASSIFICATION	5.083995056286322E-5	DEFECT
// specify output in UTF8 otherwise accented characters will blow // up everything	WITHOUT_CLASSIFICATION	0.9999999931701616	WITHOUT_CLASSIFICATION	6.8298383414492805E-9	DEFECT
/* For debugging purposes uncomment:        org.w3c.dom.Comment s = doc.createComment("stack=" + threadStack);        buildElement.element.appendChild(s);         */	WITHOUT_CLASSIFICATION	0.9999782376418324	WITHOUT_CLASSIFICATION	2.1762358167660836E-5	DEFECT
// -------------------------------------------------- BuildLogger interface	WITHOUT_CLASSIFICATION	0.9999860835897696	WITHOUT_CLASSIFICATION	1.3916410230399975E-5	DEFECT
// Shouldn't happen	WITHOUT_CLASSIFICATION	0.9999574513706028	WITHOUT_CLASSIFICATION	4.254862939730101E-5	DEFECT
// LF is always end of line (i.e. CRLF or single LF)	WITHOUT_CLASSIFICATION	0.9999890075687484	WITHOUT_CLASSIFICATION	1.0992431251587195E-5	DEFECT
// CR without LF - send buffer then add char	WITHOUT_CLASSIFICATION	0.9999989716238136	WITHOUT_CLASSIFICATION	1.02837618642325E-6	DEFECT
// add into buffer	WITHOUT_CLASSIFICATION	0.9999987884484058	WITHOUT_CLASSIFICATION	1.211551594082452E-6	DEFECT
// either end of buffer or a line separator char	WITHOUT_CLASSIFICATION	0.9999999441119801	WITHOUT_CLASSIFICATION	5.5888019835356194E-8	DEFECT
// check adapter	WITHOUT_CLASSIFICATION	0.9999999461934731	WITHOUT_CLASSIFICATION	5.380652690986431E-8	DEFECT
//can throw the same exception, if there is no this(Project) ctor.	WITHOUT_CLASSIFICATION	0.9999937180579337	WITHOUT_CLASSIFICATION	6.281942066317436E-6	DEFECT
//now we instantiate	WITHOUT_CLASSIFICATION	0.9999989055067673	WITHOUT_CLASSIFICATION	1.0944932327128634E-6	DEFECT
//set up project references.	WITHOUT_CLASSIFICATION	0.9999997964407232	WITHOUT_CLASSIFICATION	2.035592767754148E-7	DEFECT
/** Our current message output status. Follows Project.MSG_XXX. */	WITHOUT_CLASSIFICATION	0.9995814632228943	WITHOUT_CLASSIFICATION	4.185367771056775E-4	DEFECT
/* null */	WITHOUT_CLASSIFICATION	0.999982934927436	WITHOUT_CLASSIFICATION	1.7065072564033683E-5	DEFECT
// expect the worst	WITHOUT_CLASSIFICATION	0.9999944076808261	WITHOUT_CLASSIFICATION	5.592319173876086E-6	DEFECT
//this is the list of lu	WITHOUT_CLASSIFICATION	0.9999989463952649	WITHOUT_CLASSIFICATION	1.0536047350609092E-6	DEFECT
// cycle through given args	WITHOUT_CLASSIFICATION	0.9999991163935953	WITHOUT_CLASSIFICATION	8.836064047744768E-7	DEFECT
// set the flag to display the targets and quit	WITHOUT_CLASSIFICATION	0.9999999228868658	WITHOUT_CLASSIFICATION	7.71131342590194E-8	DEFECT
// eat up next arg if present, default to build.xml	WITHOUT_CLASSIFICATION	0.9999993106013706	WITHOUT_CLASSIFICATION	6.89398629425737E-7	DEFECT
// we don't have any more args to recognize!	WITHOUT_CLASSIFICATION	0.9988402733110956	WITHOUT_CLASSIFICATION	0.0011597266889043867	DEFECT
// if it's no other arg, it may be the target	WITHOUT_CLASSIFICATION	0.999999985257417	WITHOUT_CLASSIFICATION	1.4742582954416134E-8	DEFECT
// if buildFile was not specified on the command line,	WITHOUT_CLASSIFICATION	0.9999911002037818	WITHOUT_CLASSIFICATION	8.899796218136302E-6	DEFECT
// but -find then search for it	WITHOUT_CLASSIFICATION	0.9999994539854907	WITHOUT_CLASSIFICATION	5.460145091902541E-7	DEFECT
// make sure buildfile exists	WITHOUT_CLASSIFICATION	0.999998712984611	WITHOUT_CLASSIFICATION	1.2870153890359396E-6	DEFECT
// make sure it's not a directory (this falls into the ultra // paranoid lets check everything category	WITHOUT_CLASSIFICATION	0.9999812867659884	WITHOUT_CLASSIFICATION	1.8713234011502825E-5	DEFECT
// Load the property files specified by -propertyfile	WITHOUT_CLASSIFICATION	0.9999989685290258	WITHOUT_CLASSIFICATION	1.0314709741804855E-6	DEFECT
// ensure that -D properties take precedence	WITHOUT_CLASSIFICATION	0.9999984251834857	WITHOUT_CLASSIFICATION	1.5748165142414841E-6	DEFECT
// check if the target file exists in the current directory	WITHOUT_CLASSIFICATION	0.9999999871505306	WITHOUT_CLASSIFICATION	1.2849469429876065E-8	DEFECT
// change to parent directory	WITHOUT_CLASSIFICATION	0.9999961277074717	WITHOUT_CLASSIFICATION	3.872292528347229E-6	DEFECT
// refresh our file handle	WITHOUT_CLASSIFICATION	0.9999999584056865	WITHOUT_CLASSIFICATION	4.159431360582425E-8	DEFECT
// use a system manager that prevents from System.exit()	WITHOUT_CLASSIFICATION	0.9999931240859747	WITHOUT_CLASSIFICATION	6.875914025230994E-6	DEFECT
//SecurityManager can not be installed here for backwards //compatibility reasons (PD). Needs to be loaded prior to //ant class if we are going to implement it. //System.setSecurityManager(new NoExitSecurityManager());	WITHOUT_CLASSIFICATION	0.9999996044995498	WITHOUT_CLASSIFICATION	3.9550045016074457E-7	DEFECT
// set the thread priorities	WITHOUT_CLASSIFICATION	0.999999736977843	WITHOUT_CLASSIFICATION	2.630221571456692E-7	DEFECT
//we cannot set the priority here.	WITHOUT_CLASSIFICATION	0.9991647203308062	WITHOUT_CLASSIFICATION	8.352796691938184E-4	DEFECT
// set user-define properties	WITHOUT_CLASSIFICATION	0.9999999493653972	WITHOUT_CLASSIFICATION	5.063460292705726E-8	DEFECT
//proxy setup if enabled	WITHOUT_CLASSIFICATION	0.9999997837547356	WITHOUT_CLASSIFICATION	2.162452644450171E-7	DEFECT
// make sure that we have a target to execute	WITHOUT_CLASSIFICATION	0.9999996885723885	WITHOUT_CLASSIFICATION	3.114276113980971E-7	DEFECT
// Add the default listener	WITHOUT_CLASSIFICATION	0.9999999964345393	WITHOUT_CLASSIFICATION	3.5654607733522745E-9	DEFECT
// find the target with the longest name	WITHOUT_CLASSIFICATION	0.9999999575878572	WITHOUT_CLASSIFICATION	4.241214285959088E-8	DEFECT
// split the targets in top-level and sub-targets depending // on the presence of a description	WITHOUT_CLASSIFICATION	0.9999999906594799	WITHOUT_CLASSIFICATION	9.340520143517668E-9	DEFECT
// shouldn't need to check but...	WITHOUT_CLASSIFICATION	0.9989254908329946	WITHOUT_CLASSIFICATION	0.001074509167005323	DEFECT
// now, start printing the targets and their descriptions	WITHOUT_CLASSIFICATION	0.9999999889337801	WITHOUT_CLASSIFICATION	1.1066219831411539E-8	DEFECT
// got a bit annoyed that I couldn't find a pad function	WITHOUT_CLASSIFICATION	0.9997138489103863	WITHOUT_CLASSIFICATION	2.8615108961376655E-4	DEFECT
/*<String,String>*/	WITHOUT_CLASSIFICATION	0.999875583240658	WITHOUT_CLASSIFICATION	1.2441675934198707E-4	DEFECT
//At least one constructor is guaranteed to be there, but check anyway.	WITHOUT_CLASSIFICATION	0.9999998102358492	WITHOUT_CLASSIFICATION	1.8976415087778582E-7	DEFECT
// is the zip file in the cache	WITHOUT_CLASSIFICATION	0.9999999568577455	WITHOUT_CLASSIFICATION	4.3142254671602754E-8	DEFECT
// store the token just read for next time	WITHOUT_CLASSIFICATION	0.9999986736946856	WITHOUT_CLASSIFICATION	1.3263053143398352E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999994848348538	WITHOUT_CLASSIFICATION	5.151651463210354E-7	DEFECT
// add the types of the parent project	WITHOUT_CLASSIFICATION	0.9999569406107228	WITHOUT_CLASSIFICATION	4.305938927726612E-5	DEFECT
// ignore path elements which are not valid relative to the // project	WITHOUT_CLASSIFICATION	0.9999997591311123	WITHOUT_CLASSIFICATION	2.4086888771346257E-7	DEFECT
// Expecting an exception to be thrown by this call: // IllegalArgumentException: wrong number of Arguments	WITHOUT_CLASSIFICATION	0.9786987003448895	WITHOUT_CLASSIFICATION	0.021301299655110486	DEFECT
// we need to search the components of the path to see if we can // find the class we want.	WITHOUT_CLASSIFICATION	0.9999996198181376	WITHOUT_CLASSIFICATION	3.801818625530516E-7	DEFECT
// default to the global setting and then see // if this class belongs to a package which has been // designated to use a specific loader first // (this one or the parent one)	WITHOUT_CLASSIFICATION	0.9999999992152664	WITHOUT_CLASSIFICATION	7.84733529395546E-10	DEFECT
// we need to search the components of the path to see if // we can find the class we want.	WITHOUT_CLASSIFICATION	0.999999723437535	WITHOUT_CLASSIFICATION	2.765624651140355E-7	DEFECT
// try and load from this loader if the parent either didn't find // it or wasn't consulted.	WITHOUT_CLASSIFICATION	0.9999997752474911	WITHOUT_CLASSIFICATION	2.2475250906881658E-7	DEFECT
// this loader was first but it didn't find it - try the parent	WITHOUT_CLASSIFICATION	0.9999482395499819	WITHOUT_CLASSIFICATION	5.176045001812121E-5	DEFECT
/*<URL>*/	WITHOUT_CLASSIFICATION	0.9998212846688802	WITHOUT_CLASSIFICATION	1.787153311197819E-4	DEFECT
/*<URL>*/	WITHOUT_CLASSIFICATION	0.9998212846688802	WITHOUT_CLASSIFICATION	1.787153311197819E-4	DEFECT
/*<URL>*/	WITHOUT_CLASSIFICATION	0.9998212846688802	WITHOUT_CLASSIFICATION	1.787153311197819E-4	DEFECT
// Delegate to the parent:	WITHOUT_CLASSIFICATION	0.9999980270976376	WITHOUT_CLASSIFICATION	1.972902362355705E-6	DEFECT
// Note: could cause overlaps in case ClassLoader.this.parent has matches.	WITHOUT_CLASSIFICATION	0.9999997780363787	WITHOUT_CLASSIFICATION	2.2196362121394098E-7	DEFECT
// ClassLoader.this.parent is already delegated to from // ClassLoader.getResources, no need:	WITHOUT_CLASSIFICATION	0.9999999953617604	WITHOUT_CLASSIFICATION	4.638239627664333E-9	DEFECT
// Normal case.	WITHOUT_CLASSIFICATION	0.9999996559277257	WITHOUT_CLASSIFICATION	3.440722744132525E-7	DEFECT
// Inverted.	WITHOUT_CLASSIFICATION	0.9999970077827063	WITHOUT_CLASSIFICATION	2.9922172936807628E-6	DEFECT
// already defined	WITHOUT_CLASSIFICATION	0.9999999752124097	WITHOUT_CLASSIFICATION	2.4787590242628844E-8	DEFECT
// define the package now	WITHOUT_CLASSIFICATION	0.999999873291619	WITHOUT_CLASSIFICATION	1.2670838108325307E-7	DEFECT
// ioe.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999998965254953	WITHOUT_CLASSIFICATION	1.0347450477940424E-7	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9999940166248454	WITHOUT_CLASSIFICATION	5.983375154568819E-6	DEFECT
// Not significant for the class loader.	WITHOUT_CLASSIFICATION	0.9999992219837699	WITHOUT_CLASSIFICATION	7.780162301239988E-7	DEFECT
// Not significant for the class loader.	WITHOUT_CLASSIFICATION	0.9999992219837699	WITHOUT_CLASSIFICATION	7.780162301239988E-7	DEFECT
// {tasks, types}	WITHOUT_CLASSIFICATION	0.9999980163924092	WITHOUT_CLASSIFICATION	1.9836075908932277E-6	DEFECT
// add the parsed namespaces of the parent project	WITHOUT_CLASSIFICATION	0.9999891036562084	WITHOUT_CLASSIFICATION	1.089634379145989E-5	DEFECT
// we need to search the components of the path to see if // we can find the class we want.	WITHOUT_CLASSIFICATION	0.999999723437535	WITHOUT_CLASSIFICATION	2.765624651140355E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999209490427	WITHOUT_CLASSIFICATION	7.905095730336347E-8	DEFECT
// don't have to check for public, since // getConstructor finds public constructors only.	WITHOUT_CLASSIFICATION	0.9999998416909959	WITHOUT_CLASSIFICATION	1.5830900407339128E-7	DEFECT
// set default value, can be changed by the user	WITHOUT_CLASSIFICATION	0.9999999927673366	WITHOUT_CLASSIFICATION	7.232663358160092E-9	DEFECT
//too bad	WITHOUT_CLASSIFICATION	0.9999915100337172	WITHOUT_CLASSIFICATION	8.48996628281287E-6	DEFECT
//must have same validity; then if they are valid they must also be the same:	WITHOUT_CLASSIFICATION	0.999998552972891	WITHOUT_CLASSIFICATION	1.4470271090518876E-6	DEFECT
// namespace that does not contain antlib	WITHOUT_CLASSIFICATION	0.9999993858985443	WITHOUT_CLASSIFICATION	6.141014556119272E-7	DEFECT
// Already processed	WITHOUT_CLASSIFICATION	0.9999998168703916	WITHOUT_CLASSIFICATION	1.8312960838152442E-7	DEFECT
//there to stop error messages being "null"	WITHOUT_CLASSIFICATION	0.9999995525542937	WITHOUT_CLASSIFICATION	4.474457062569835E-7	DEFECT
//if this is left out, bad things happen. like all build files break //on the first element encountered.	WITHOUT_CLASSIFICATION	0.9958437861546384	WITHOUT_CLASSIFICATION	0.004156213845361526	DEFECT
// a fishing expedition :- ignore errors if antlib not present	WITHOUT_CLASSIFICATION	0.9997487924861136	WITHOUT_CLASSIFICATION	2.51207513886483E-4	DEFECT
//class of problem	WITHOUT_CLASSIFICATION	0.9999862486223902	WITHOUT_CLASSIFICATION	1.3751377609847134E-5	DEFECT
//running under an IDE that doesn't set ANT_HOME	WITHOUT_CLASSIFICATION	0.9999945937489185	WITHOUT_CLASSIFICATION	5.40625108151625E-6	DEFECT
//look up the name	WITHOUT_CLASSIFICATION	0.99999898329466	WITHOUT_CLASSIFICATION	1.0167053400452975E-6	DEFECT
//we are defined, so it is an instantiation problem	WITHOUT_CLASSIFICATION	0.9999996181760973	WITHOUT_CLASSIFICATION	3.8182390277005743E-7	DEFECT
//start with instantiating the class.	WITHOUT_CLASSIFICATION	0.9999892442584793	WITHOUT_CLASSIFICATION	1.0755741520617283E-5	DEFECT
//here we successfully loaded the class or failed.	WITHOUT_CLASSIFICATION	0.9999855106749959	WITHOUT_CLASSIFICATION	1.4489325004185897E-5	DEFECT
//success: proceed with more steps	WITHOUT_CLASSIFICATION	0.99997755526357	WITHOUT_CLASSIFICATION	2.244473642989444E-5	DEFECT
//hey, there is nothing wrong with us	WITHOUT_CLASSIFICATION	0.9987980281521195	WITHOUT_CLASSIFICATION	0.0012019718478805397	DEFECT
/*<Thread,Task>*/	WITHOUT_CLASSIFICATION	0.99998114147337	WITHOUT_CLASSIFICATION	1.8858526629985424E-5	DEFECT
/*<ThreadGroup,Task>*/	WITHOUT_CLASSIFICATION	0.9999928334776315	WITHOUT_CLASSIFICATION	7.16652236851953E-6	DEFECT
// If the listeners already has this listener, do nothing	WITHOUT_CLASSIFICATION	0.9999999857104778	WITHOUT_CLASSIFICATION	1.4289522138409365E-8	DEFECT
// we need to build the hashtable dynamically	WITHOUT_CLASSIFICATION	0.9999836920093285	WITHOUT_CLASSIFICATION	1.630799067144757E-5	DEFECT
// sanity check	WITHOUT_CLASSIFICATION	0.9999998976908275	WITHOUT_CLASSIFICATION	1.023091724696453E-7	DEFECT
//try the current classloader	WITHOUT_CLASSIFICATION	0.9999996490121007	WITHOUT_CLASSIFICATION	3.5098789934021194E-7	DEFECT
// throw further	WITHOUT_CLASSIFICATION	0.9999797206658757	WITHOUT_CLASSIFICATION	2.027933412430118E-5	DEFECT
// only the first build exception is reported	WITHOUT_CLASSIFICATION	0.9999876495540181	WITHOUT_CLASSIFICATION	1.2350445981880685E-5	DEFECT
// Make sure we exist	WITHOUT_CLASSIFICATION	0.9999996672522187	WITHOUT_CLASSIFICATION	3.3274778133815144E-7	DEFECT
// Currently visiting this node, so have a cycle	WITHOUT_CLASSIFICATION	0.9999945614476716	WITHOUT_CLASSIFICATION	5.438552328338948E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999209490427	WITHOUT_CLASSIFICATION	7.905095730336347E-8	DEFECT
// create a new Vector to avoid ConcurrentModificationExc when // the listeners get added/removed while we are in fire	WITHOUT_CLASSIFICATION	0.999999991489621	WITHOUT_CLASSIFICATION	8.510378913282904E-9	DEFECT
// sanity check ourselves, if we've been asked to build nothing // then we should complain	WITHOUT_CLASSIFICATION	0.9999999996180651	WITHOUT_CLASSIFICATION	3.8193488216895134E-10	DEFECT
// Sort and run the dependency tree. // Sorting checks if all the targets (and dependencies) // exist, and if there is any cycle in the dependency // graph.	WITHOUT_CLASSIFICATION	0.9999999838927888	WITHOUT_CLASSIFICATION	1.6107211232951684E-8	DEFECT
// We first run a DFS based sort using each root as a starting node. // This creates the minimum sequence of Targets to the root node(s). // We then do a sort on any remaining unVISITED targets. // This is unnecessary for doing our build, but it catches // circular dependencies or missing Targets on the entire // dependency tree, not just on the Targets that depend on the // build Target.	WITHOUT_CLASSIFICATION	0.9999999998684231	WITHOUT_CLASSIFICATION	1.315768862579323E-10	DEFECT
// no warning, this is not changing anything	WITHOUT_CLASSIFICATION	0.9999801632591906	WITHOUT_CLASSIFICATION	1.9836740809433082E-5	DEFECT
// Check for old id behaviour	WITHOUT_CLASSIFICATION	0.999999795687191	WITHOUT_CLASSIFICATION	2.0431280892721507E-7	DEFECT
// Inform IH to clear the cache	WITHOUT_CLASSIFICATION	0.9999996214506165	WITHOUT_CLASSIFICATION	3.785493833904058E-7	DEFECT
// register this as the current task on the current thread.	WITHOUT_CLASSIFICATION	0.9999964999193623	WITHOUT_CLASSIFICATION	3.500080637677385E-6	DEFECT
// Make sure that	WITHOUT_CLASSIFICATION	0.9999999097056648	WITHOUT_CLASSIFICATION	9.029433523722717E-8	DEFECT
// ignore this if the object does not have // a set project method or the method // is private/protected.	WITHOUT_CLASSIFICATION	0.9999998390168482	WITHOUT_CLASSIFICATION	1.6098315176568533E-7	DEFECT
//override facility for subclasses to put custom hashtables in	WITHOUT_CLASSIFICATION	0.9999957183713394	WITHOUT_CLASSIFICATION	4.281628660618758E-6	DEFECT
// --------------------  Hook management  --------------------	WITHOUT_CLASSIFICATION	0.9999772847401256	WITHOUT_CLASSIFICATION	2.2715259874489893E-5	DEFECT
// --------------------  Methods to override  --------------------	WITHOUT_CLASSIFICATION	0.9999967425314517	WITHOUT_CLASSIFICATION	3.257468548288214E-6	DEFECT
// If next has handled the property	WITHOUT_CLASSIFICATION	0.9999890741131299	WITHOUT_CLASSIFICATION	1.0925886870058682E-5	DEFECT
// try to get it from the project or keys // Backward compatibility	WITHOUT_CLASSIFICATION	0.9999994517689501	WITHOUT_CLASSIFICATION	5.482310498898421E-7	DEFECT
// -------------------- Default implementation  -------------------- // Methods used to support the default behavior and provide backward // compatibility. Some will be deprecated, you should avoid calling them.	WITHOUT_CLASSIFICATION	0.9995759129326864	WITHOUT_CLASSIFICATION	4.240870673135071E-4	DEFECT
// user (CLI) properties take precedence	WITHOUT_CLASSIFICATION	0.9999954705297118	WITHOUT_CLASSIFICATION	4.529470288220591E-6	DEFECT
// -------------------- Getting properties  --------------------	WITHOUT_CLASSIFICATION	0.9999946910732804	WITHOUT_CLASSIFICATION	5.308926719643848E-6	DEFECT
// -------------------- Property parsing  -------------------- // Moved from ProjectHelper. You can override the static method - // this is used for backward compatibility (for code that calls // the parse method in ProjectHelper).	WITHOUT_CLASSIFICATION	0.9999896373484212	WITHOUT_CLASSIFICATION	1.0362651578919612E-5	DEFECT
//search for the next instance of $ from the 'prev' position	WITHOUT_CLASSIFICATION	0.9999990182569704	WITHOUT_CLASSIFICATION	9.81743029649342E-7	DEFECT
//if we are at the end of the string, we tack on a $ //then move past it	WITHOUT_CLASSIFICATION	0.9999878214169284	WITHOUT_CLASSIFICATION	1.217858307151333E-5	DEFECT
//peek ahead to see if the next char is a property or not //not a property: insert the char as a literal	WITHOUT_CLASSIFICATION	0.9999916923511888	WITHOUT_CLASSIFICATION	8.307648811198439E-6	DEFECT
//backwards compatibility two $ map to one mode	WITHOUT_CLASSIFICATION	0.9999519930142141	WITHOUT_CLASSIFICATION	4.800698578579574E-5	DEFECT
//new behaviour: $X maps to $X for all values of X!='$'	WITHOUT_CLASSIFICATION	0.9983658002603484	WITHOUT_CLASSIFICATION	0.001634199739651589	DEFECT
//property found, extract its name or bail on a typo	WITHOUT_CLASSIFICATION	0.9998814015466925	WITHOUT_CLASSIFICATION	1.1859845330751924E-4	DEFECT
//no more $ signs found //if there is any tail to the file, append it	WITHOUT_CLASSIFICATION	0.9999849631896837	WITHOUT_CLASSIFICATION	1.5036810316310885E-5	DEFECT
//empty	WITHOUT_CLASSIFICATION	0.9999573539385527	WITHOUT_CLASSIFICATION	4.2646061447253527E-5	DEFECT
// The children are added to after this cloning	WITHOUT_CLASSIFICATION	0.9999979205209703	WITHOUT_CLASSIFICATION	2.0794790298098065E-6	DEFECT
// Make sure the dependency is not empty string	WITHOUT_CLASSIFICATION	0.9999980721400087	WITHOUT_CLASSIFICATION	1.9278599912850376E-6	DEFECT
// Make sure that depends attribute does not // end in a ,	WITHOUT_CLASSIFICATION	0.9999971351418041	WITHOUT_CLASSIFICATION	2.864858195808191E-6	DEFECT
// A project helper may process multiple files. We'll keep track // of them - to avoid loops and to allow caching. The caching will // probably accelerate things like <antCall>. // The key is the absolute file, the value is a processed tree. // Since the tree is composed of UE and RC - it can be reused ! // protected Hashtable processedFiles=new Hashtable();	WITHOUT_CLASSIFICATION	0.9999998603026549	WITHOUT_CLASSIFICATION	1.3969734506664033E-7	DEFECT
//    public Hashtable getProcessedFiles() { //        return processedFiles; //    }	WITHOUT_CLASSIFICATION	0.9999999952936978	WITHOUT_CLASSIFICATION	4.706302302853318E-9	DEFECT
// --------------------  Parse method  --------------------	WITHOUT_CLASSIFICATION	0.9999995195555172	WITHOUT_CLASSIFICATION	4.804444827348053E-7	DEFECT
// Identify the class loader we will be using. Ant may be // in a webapp or embedded in a different app	WITHOUT_CLASSIFICATION	0.9999414583432891	WITHOUT_CLASSIFICATION	5.8541656710836977E-5	DEFECT
// First, try the system property	WITHOUT_CLASSIFICATION	0.9999910843906743	WITHOUT_CLASSIFICATION	8.91560932556356E-6	DEFECT
// A JDK1.3 'service' ( like in JAXP ). That will plug a helper // automatically if in CLASSPATH, with the right META-INF/services.	WITHOUT_CLASSIFICATION	0.9588768782136482	WITHOUT_CLASSIFICATION	0.04112312178635183	DEFECT
// This code is needed by EBCDIC and other strange systems. // It's a fix for bugs reported in xerces	WITHOUT_CLASSIFICATION	0.9806505110230045	WITHOUT_CLASSIFICATION	0.019349488976995503	DEFECT
// try next method	WITHOUT_CLASSIFICATION	0.9999951844518167	WITHOUT_CLASSIFICATION	4.8155481834110285E-6	DEFECT
// -------------------- Static utils, used by most helpers ----------------	WITHOUT_CLASSIFICATION	0.9999997278280438	WITHOUT_CLASSIFICATION	2.7217195627402006E-7	DEFECT
// reflect these into the target	WITHOUT_CLASSIFICATION	0.9999999642316744	WITHOUT_CLASSIFICATION	3.576832574538036E-8	DEFECT
// id attribute must be set externally	WITHOUT_CLASSIFICATION	0.9999996032076068	WITHOUT_CLASSIFICATION	3.967923931221489E-7	DEFECT
// needed since project properties are not accessible	WITHOUT_CLASSIFICATION	0.9999918376654559	WITHOUT_CLASSIFICATION	8.162334544101205E-6	DEFECT
/*<UnknownElement>*/	WITHOUT_CLASSIFICATION	0.9997706157591172	WITHOUT_CLASSIFICATION	2.293842408827136E-4	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999994848348538	WITHOUT_CLASSIFICATION	5.151651463210354E-7	DEFECT
/*<String,String>*/	WITHOUT_CLASSIFICATION	0.999875583240658	WITHOUT_CLASSIFICATION	1.2441675934198707E-4	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9999940166248454	WITHOUT_CLASSIFICATION	5.983375154568819E-6	DEFECT
// reflect these into the target	WITHOUT_CLASSIFICATION	0.9999999642316744	WITHOUT_CLASSIFICATION	3.576832574538036E-8	DEFECT
// id attribute must be set externally	WITHOUT_CLASSIFICATION	0.9999996032076068	WITHOUT_CLASSIFICATION	3.967923931221489E-7	DEFECT
// Attributes	WITHOUT_CLASSIFICATION	0.9999996142072205	WITHOUT_CLASSIFICATION	3.857927794750127E-7	DEFECT
// configure attributes of the object and it's children. If it is // a task container, defer the configuration till the task container // attempts to use the task	WITHOUT_CLASSIFICATION	0.9999998136113676	WITHOUT_CLASSIFICATION	1.8638863248639618E-7	DEFECT
// plain impossible to get here, maybeConfigure should // have thrown an exception.	WITHOUT_CLASSIFICATION	0.9999994693956081	WITHOUT_CLASSIFICATION	5.306043918710408E-7	DEFECT
// Finished executing the task, null it to allow // GC do its job // If this UE is used again, a new "realthing" will be made	WITHOUT_CLASSIFICATION	0.9999999797774485	WITHOUT_CLASSIFICATION	2.0222551554146604E-8	DEFECT
// Do the runtime	WITHOUT_CLASSIFICATION	0.9999992377136327	WITHOUT_CLASSIFICATION	7.622863673354405E-7	DEFECT
// UnknownElement always has an associated target	WITHOUT_CLASSIFICATION	0.999999790470122	WITHOUT_CLASSIFICATION	2.0952987810395575E-7	DEFECT
//return elementName;	WITHOUT_CLASSIFICATION	0.999999911978595	WITHOUT_CLASSIFICATION	8.802140515817335E-8	DEFECT
// Are the names the same ?	WITHOUT_CLASSIFICATION	0.9999996582678624	WITHOUT_CLASSIFICATION	3.4173213754271386E-7	DEFECT
// Are attributes the same ?	WITHOUT_CLASSIFICATION	0.9999996414355021	WITHOUT_CLASSIFICATION	3.5856449785672545E-7	DEFECT
// Are the sub elements the same ?	WITHOUT_CLASSIFICATION	0.9999997713533623	WITHOUT_CLASSIFICATION	2.2864663773720676E-7	DEFECT
// hidden constructor	WITHOUT_CLASSIFICATION	0.9999999391955923	WITHOUT_CLASSIFICATION	6.08044077386276E-8	DEFECT
//create the file	WITHOUT_CLASSIFICATION	0.9999998345526804	WITHOUT_CLASSIFICATION	1.6544731965067174E-7	DEFECT
//do some writing to it	WITHOUT_CLASSIFICATION	0.9999957912631274	WITHOUT_CLASSIFICATION	4.208736872616954E-6	DEFECT
//calendar stuff.	WITHOUT_CLASSIFICATION	0.9999988866290836	WITHOUT_CLASSIFICATION	1.11337091632009E-6	DEFECT
//not included, do nothing	WITHOUT_CLASSIFICATION	0.9999932182610253	WITHOUT_CLASSIFICATION	6.7817389746443345E-6	DEFECT
// not included, to nothing	WITHOUT_CLASSIFICATION	0.9999927334998945	WITHOUT_CLASSIFICATION	7.266500105454538E-6	DEFECT
/*<RuntimeConfigurable>*/	WITHOUT_CLASSIFICATION	0.9999957451758731	WITHOUT_CLASSIFICATION	4.254824126918625E-6	DEFECT
/*<String>*/	WITHOUT_CLASSIFICATION	0.9998211299542612	WITHOUT_CLASSIFICATION	1.788700457386706E-4	DEFECT
// Configure the object	WITHOUT_CLASSIFICATION	0.9999997298190545	WITHOUT_CLASSIFICATION	2.701809455808176E-7	DEFECT
// Most likely an UnknownElement	WITHOUT_CLASSIFICATION	0.999961380656673	WITHOUT_CLASSIFICATION	3.8619343327004404E-5	DEFECT
// Children (this is a shadow of UnknownElement#children)	WITHOUT_CLASSIFICATION	0.9999824400713258	WITHOUT_CLASSIFICATION	1.7559928674192555E-5	DEFECT
// poly type	WITHOUT_CLASSIFICATION	0.9999888048458132	WITHOUT_CLASSIFICATION	1.1195154186723422E-5	DEFECT
// Text	WITHOUT_CLASSIFICATION	0.9999875626038514	WITHOUT_CLASSIFICATION	1.243739614851253E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999996958536274	WITHOUT_CLASSIFICATION	3.0414637271301487E-7	DEFECT
// store the token just read for next time	WITHOUT_CLASSIFICATION	0.9999986736946856	WITHOUT_CLASSIFICATION	1.3263053143398352E-6	DEFECT
// a task container - anything could happen - just add the // child to the container	WITHOUT_CLASSIFICATION	0.9999984746289744	WITHOUT_CLASSIFICATION	1.5253710255656421E-6	DEFECT
// Is the text the same? //   Need to use equals on the string and not //   on the stringbuffer as equals on the string buffer //   does not compare the contents.	WITHOUT_CLASSIFICATION	0.9999977743859008	WITHOUT_CLASSIFICATION	2.225614099118277E-6	DEFECT
// Assume that this is an not supported attribute type // thrown for example by a dymanic attribute task // Do nothing	WITHOUT_CLASSIFICATION	0.9994720659118365	WITHOUT_CLASSIFICATION	5.279340881634786E-4	DEFECT
// on Windows and Unix, we can ignore delimiters and still have // enough information to tokenize correctly.	WITHOUT_CLASSIFICATION	0.9980574525192665	WITHOUT_CLASSIFICATION	0.0019425474807335862	DEFECT
// we are on a dos style system so this path could be a drive // spec. We look at the next token	WITHOUT_CLASSIFICATION	0.9999119967899052	WITHOUT_CLASSIFICATION	8.80032100948199E-5	DEFECT
// we know we are on a DOS style platform and the next path // starts with a slash or backslash, so we know this is a // drive spec	WITHOUT_CLASSIFICATION	0.9999441721561146	WITHOUT_CLASSIFICATION	5.5827843885240156E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999209490427	WITHOUT_CLASSIFICATION	7.905095730336347E-8	DEFECT
// ignore ";" and get the next token	WITHOUT_CLASSIFICATION	0.9999896300359348	WITHOUT_CLASSIFICATION	1.0369964065171832E-5	DEFECT
// this path could be a drive spec, so look at the next token	WITHOUT_CLASSIFICATION	0.9998953516498059	WITHOUT_CLASSIFICATION	1.0464835019413487E-4	DEFECT
// it indeed is a drive spec, get the next bit	WITHOUT_CLASSIFICATION	0.9999980896853378	WITHOUT_CLASSIFICATION	1.9103146621924325E-6	DEFECT
// implicit else: ignore the ':' since we have either a // UNIX or a relative path	WITHOUT_CLASSIFICATION	0.9999994974508031	WITHOUT_CLASSIFICATION	5.025491968557915E-7	DEFECT
// Miscellaneous typical temporary files	WITHOUT_CLASSIFICATION	0.9999999119325337	WITHOUT_CLASSIFICATION	8.806746640187166E-8	DEFECT
// CVS	WITHOUT_CLASSIFICATION	0.9999943809543499	WITHOUT_CLASSIFICATION	5.619045650098316E-6	DEFECT
// SCCS	WITHOUT_CLASSIFICATION	0.9999929775404727	WITHOUT_CLASSIFICATION	7.022459527298902E-6	DEFECT
// Visual SourceSafe	WITHOUT_CLASSIFICATION	0.9999997656390474	WITHOUT_CLASSIFICATION	2.3436095259433157E-7	DEFECT
// Subversion	WITHOUT_CLASSIFICATION	0.9999996529542109	WITHOUT_CLASSIFICATION	3.470457891552941E-7	DEFECT
// set in/excludes to reasonable defaults if needed:	WITHOUT_CLASSIFICATION	0.9999999233143025	WITHOUT_CLASSIFICATION	7.668569743805335E-8	DEFECT
// if no basedir and no includes, nothing to do:	WITHOUT_CLASSIFICATION	0.9999999526690989	WITHOUT_CLASSIFICATION	4.7330901130045855E-8	DEFECT
//skip abs. paths not under basedir, if set:	WITHOUT_CLASSIFICATION	0.9999812569939057	WITHOUT_CLASSIFICATION	1.874300609421294E-5	DEFECT
//skip non-abs. paths if basedir == null:	WITHOUT_CLASSIFICATION	0.9999982514835067	WITHOUT_CLASSIFICATION	1.7485164932890137E-6	DEFECT
// we are going to scan everything anyway	WITHOUT_CLASSIFICATION	0.9999961932214592	WITHOUT_CLASSIFICATION	3.8067785407171343E-6	DEFECT
// Empty	WITHOUT_CLASSIFICATION	0.9999897035256006	WITHOUT_CLASSIFICATION	1.0296474399495748E-5	DEFECT
// will be caught and redirected to Ant's logging system	WITHOUT_CLASSIFICATION	0.9999831410363514	WITHOUT_CLASSIFICATION	1.685896364856346E-5	DEFECT
// will be caught and redirected to Ant's logging system	WITHOUT_CLASSIFICATION	0.9999831410363514	WITHOUT_CLASSIFICATION	1.685896364856346E-5	DEFECT
//removing base from path yields no change; path not child of base	WITHOUT_CLASSIFICATION	0.9999965933536167	WITHOUT_CLASSIFICATION	3.4066463833214515E-6	DEFECT
/* package-private */	WITHOUT_CLASSIFICATION	0.9999993532964625	WITHOUT_CLASSIFICATION	6.467035374719753E-7	DEFECT
// do the "singleton" initialization	WITHOUT_CLASSIFICATION	0.9999991031012572	WITHOUT_CLASSIFICATION	8.968987429653849E-7	DEFECT
// Add the explicit resource collections to the archive.	WITHOUT_CLASSIFICATION	0.9999982132418922	WITHOUT_CLASSIFICATION	1.7867581077402364E-6	DEFECT
// EOL was "\r\n"	WITHOUT_CLASSIFICATION	0.9999991787750169	WITHOUT_CLASSIFICATION	8.212249831655878E-7	DEFECT
// don't have to check for interface, since then // taskClass would be abstract too.	WITHOUT_CLASSIFICATION	0.9999996779264252	WITHOUT_CLASSIFICATION	3.2207357486283045E-7	DEFECT
// ignore this if the class being used as a task does not have // a set location method.	WITHOUT_CLASSIFICATION	0.9999996763559498	WITHOUT_CLASSIFICATION	3.236440502437223E-7	DEFECT
// ignore this if the class being used as a task does not have // a set project method.	WITHOUT_CLASSIFICATION	0.9999993134969838	WITHOUT_CLASSIFICATION	6.865030161097486E-7	DEFECT
// put in the newroots map the include patterns without // wildcard tokens	WITHOUT_CLASSIFICATION	0.9998117978872798	WITHOUT_CLASSIFICATION	1.8820211272029336E-4	DEFECT
// only scan directories that can include matched files or // directories	WITHOUT_CLASSIFICATION	0.9999993259727251	WITHOUT_CLASSIFICATION	6.740272748237698E-7	DEFECT
// may be on a case insensitive file system.  We want // the results to show what's really on the disk, so // we need to double check.	WITHOUT_CLASSIFICATION	0.9999998603813228	WITHOUT_CLASSIFICATION	1.3961867718359817E-7	DEFECT
// adapt currentelement to the case we've // actually found	WITHOUT_CLASSIFICATION	0.9999993439155908	WITHOUT_CLASSIFICATION	6.560844092674782E-7	DEFECT
// I am the only one so I have to close the reader	WITHOUT_CLASSIFICATION	0.999998545402703	WITHOUT_CLASSIFICATION	1.4545972968427937E-6	DEFECT
// I am the only one so I have to close the reader	WITHOUT_CLASSIFICATION	0.999998545402703	WITHOUT_CLASSIFICATION	1.4545972968427937E-6	DEFECT
// get parameters	WITHOUT_CLASSIFICATION	0.999999670576057	WITHOUT_CLASSIFICATION	3.2942394307016313E-7	DEFECT
// Calculate the EOL string per the current config	WITHOUT_CLASSIFICATION	0.9999998944891406	WITHOUT_CLASSIFICATION	1.0551085943229743E-7	DEFECT
// assume (eol == CrLf.LF || eol == CrLf.UNIX)	WITHOUT_CLASSIFICATION	0.9999997147663816	WITHOUT_CLASSIFICATION	2.85233618393508E-7	DEFECT
// Add/Remove tabs	WITHOUT_CLASSIFICATION	0.9999994825272025	WITHOUT_CLASSIFICATION	5.174727975318325E-7	DEFECT
// Add missing EOF character	WITHOUT_CLASSIFICATION	0.9999999920011086	WITHOUT_CLASSIFICATION	7.998891357072446E-9	DEFECT
// Mask, block from being edited, all characters in constants.	WITHOUT_CLASSIFICATION	0.9999999788093007	WITHOUT_CLASSIFICATION	2.1190699244768356E-8	DEFECT
// The current character is always emitted.	WITHOUT_CLASSIFICATION	0.9999991575350476	WITHOUT_CLASSIFICATION	8.424649523366876E-7	DEFECT
// Fall tru	WITHOUT_CLASSIFICATION	0.9999962365834545	WITHOUT_CLASSIFICATION	3.763416545424629E-6	DEFECT
// Fall tru	WITHOUT_CLASSIFICATION	0.9999962365834545	WITHOUT_CLASSIFICATION	3.763416545424629E-6	DEFECT
// Fall tru	WITHOUT_CLASSIFICATION	0.9999962365834545	WITHOUT_CLASSIFICATION	3.763416545424629E-6	DEFECT
// Fall tru	WITHOUT_CLASSIFICATION	0.9999962365834545	WITHOUT_CLASSIFICATION	3.763416545424629E-6	DEFECT
// Fall tru	WITHOUT_CLASSIFICATION	0.9999962365834545	WITHOUT_CLASSIFICATION	3.763416545424629E-6	DEFECT
// EOL	WITHOUT_CLASSIFICATION	0.9999857564089799	WITHOUT_CLASSIFICATION	1.4243591020045652E-5	DEFECT
// EOL was "\n"	WITHOUT_CLASSIFICATION	0.9999989141766273	WITHOUT_CLASSIFICATION	1.0858233727136495E-6	DEFECT
// EOL was "\r\r\n"	WITHOUT_CLASSIFICATION	0.9999991788728132	WITHOUT_CLASSIFICATION	8.21127186666095E-7	DEFECT
// EOL was "\r"	WITHOUT_CLASSIFICATION	0.9999990270449963	WITHOUT_CLASSIFICATION	9.729550037133942E-7	DEFECT
// If source at EOF and lookAhead is ctrl-z, return EOF (NOT ctrl-z)	WITHOUT_CLASSIFICATION	0.9999865774781046	WITHOUT_CLASSIFICATION	1.3422521895380486E-5	DEFECT
// if source is EOF but last character was NOT ctrl-z, return ctrl-z	WITHOUT_CLASSIFICATION	0.9999999951207108	WITHOUT_CLASSIFICATION	4.879289281186279E-9	DEFECT
// Return current look-ahead	WITHOUT_CLASSIFICATION	0.99999071155052	WITHOUT_CLASSIFICATION	9.288449479985612E-6	DEFECT
// EOL was "\r\r" - handle as two consecutive "\r" and // "\r"	WITHOUT_CLASSIFICATION	0.9999998217144124	WITHOUT_CLASSIFICATION	1.7828558756384047E-7	DEFECT
// Instance initializer: Executes just after the super() call in this // class's constructor.	WITHOUT_CLASSIFICATION	0.999999623823373	WITHOUT_CLASSIFICATION	3.761766270041963E-7	DEFECT
// Return copy so that the call must call setEof() to change the state // of fixCRLF	WITHOUT_CLASSIFICATION	0.999999920772381	WITHOUT_CLASSIFICATION	7.922761902338504E-8	DEFECT
// Return copy so that the call must call setEol() to change the state // of fixCRLF	WITHOUT_CLASSIFICATION	0.99999991660094	WITHOUT_CLASSIFICATION	8.339906001215155E-8	DEFECT
// Return copy so that the caller must call setTab() to change the state // of fixCRLF.	WITHOUT_CLASSIFICATION	0.9999999891048523	WITHOUT_CLASSIFICATION	1.0895147724391965E-8	DEFECT
// If I'm removing an EOF character, do so first so that the other // filters don't see that character.	WITHOUT_CLASSIFICATION	0.9999999810958365	WITHOUT_CLASSIFICATION	1.89041633847808E-8	DEFECT
// Change all EOL characters to match the calculated EOL string. If // configured to do so, append a trailing EOL so that the file ends on // a EOL.	WITHOUT_CLASSIFICATION	0.9999999872850888	WITHOUT_CLASSIFICATION	1.2714911221182194E-8	DEFECT
// If filtering Java source, prevent changes to whitespace in // character and string literals.	WITHOUT_CLASSIFICATION	0.9999999287074022	WITHOUT_CLASSIFICATION	7.129259788473828E-8	DEFECT
// Works like clone() but doesn't show up in the Javadocs	WITHOUT_CLASSIFICATION	0.9998064652339355	WITHOUT_CLASSIFICATION	1.9353476606451443E-4	DEFECT
// getConstants is a static method, no need to // pass in the object	WITHOUT_CLASSIFICATION	0.9999995880791231	WITHOUT_CLASSIFICATION	4.11920876762913E-7	DEFECT
//this field will hold unnnn right after reading a non latin character //afterwards it will be truncated of one char every call to read	WITHOUT_CLASSIFICATION	0.9999296159295836	WITHOUT_CLASSIFICATION	7.038407041628134E-5	DEFECT
//replace the last 0s by the chars contained in s	WITHOUT_CLASSIFICATION	0.9999993772042443	WITHOUT_CLASSIFICATION	6.227957557903993E-7	DEFECT
// line started with comment	WITHOUT_CLASSIFICATION	0.9999992325621786	WITHOUT_CLASSIFICATION	7.674378214290009E-7	DEFECT
// ----------------------------------------- //  Predefined tokenizers // -----------------------------------------	WITHOUT_CLASSIFICATION	0.9999931199502333	WITHOUT_CLASSIFICATION	6.880049766610539E-6	DEFECT
// write everything up to the from	WITHOUT_CLASSIFICATION	0.9999976033130406	WITHOUT_CLASSIFICATION	2.3966869594552066E-6	DEFECT
// write the replacement to	WITHOUT_CLASSIFICATION	0.9999998410138822	WITHOUT_CLASSIFICATION	1.5898611779658615E-7	DEFECT
// search again	WITHOUT_CLASSIFICATION	0.9999999532694138	WITHOUT_CLASSIFICATION	4.673058625111443E-8	DEFECT
// write the remaining characters	WITHOUT_CLASSIFICATION	0.9999999918751965	WITHOUT_CLASSIFICATION	8.124803473499691E-9	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999209490427	WITHOUT_CLASSIFICATION	7.905095730336347E-8	DEFECT
// -------------------------------------------- // //      Tokenizer Classes (impls moved to oata.util) // // --------------------------------------------	WITHOUT_CLASSIFICATION	0.9999918181465999	WITHOUT_CLASSIFICATION	8.181853400074225E-6	DEFECT
// -------------------------------------------------------- //  static utility methods - could be placed somewhere else // --------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999998205152846	WITHOUT_CLASSIFICATION	1.7948471546004344E-7	DEFECT
//Remove start and end quotes if field is a String	WITHOUT_CLASSIFICATION	0.999952048312928	WITHOUT_CLASSIFICATION	4.795168707197073E-5	DEFECT
// default buffer size	WITHOUT_CLASSIFICATION	0.999999685974317	WITHOUT_CLASSIFICATION	3.140256829332166E-7	DEFECT
/* Stateless */	WITHOUT_CLASSIFICATION	0.9999995278230354	WITHOUT_CLASSIFICATION	4.721769646365412E-7	DEFECT
// singletons - since all state is in the context	WITHOUT_CLASSIFICATION	0.9999850405892504	WITHOUT_CLASSIFICATION	1.4959410749453515E-5	DEFECT
// we are in an imported file.	WITHOUT_CLASSIFICATION	0.9999999265202573	WITHOUT_CLASSIFICATION	7.347974270911844E-8	DEFECT
// top level file	WITHOUT_CLASSIFICATION	0.9999998442022239	WITHOUT_CLASSIFICATION	1.55797776130044E-7	DEFECT
// ?? OK ??	WITHOUT_CLASSIFICATION	0.9999985515990032	WITHOUT_CLASSIFICATION	1.4484009967602123E-6	DEFECT
// use default if not file or file not found	WITHOUT_CLASSIFICATION	0.9999999383338303	WITHOUT_CLASSIFICATION	6.166616968045155E-8	DEFECT
// Set the location of the implicit target associated with the project tag	WITHOUT_CLASSIFICATION	0.999999893780328	WITHOUT_CLASSIFICATION	1.0621967192972208E-7	DEFECT
// Ignore attributes from unknown uris	WITHOUT_CLASSIFICATION	0.9999956588299654	WITHOUT_CLASSIFICATION	4.341170034523008E-6	DEFECT
// Ignore attributes from unknown uris	WITHOUT_CLASSIFICATION	0.9999956588299654	WITHOUT_CLASSIFICATION	4.341170034523008E-6	DEFECT
// What's the difference between id and name ?	WITHOUT_CLASSIFICATION	0.9999999081747266	WITHOUT_CLASSIFICATION	9.182527339302628E-8	DEFECT
// no further processing	WITHOUT_CLASSIFICATION	0.9999999900699409	WITHOUT_CLASSIFICATION	9.93005909685307E-9	DEFECT
// set explicitly before starting ?	WITHOUT_CLASSIFICATION	0.9999996504199969	WITHOUT_CLASSIFICATION	3.495800030833242E-7	DEFECT
// Default for baseDir is the location of the build file.	WITHOUT_CLASSIFICATION	0.9999999475066786	WITHOUT_CLASSIFICATION	5.2493321331136895E-8	DEFECT
// check whether the user has specified an absolute path	WITHOUT_CLASSIFICATION	0.9999999593220734	WITHOUT_CLASSIFICATION	4.067792663284187E-8	DEFECT
// Check if this target is in the current build file	WITHOUT_CLASSIFICATION	0.9999999852531806	WITHOUT_CLASSIFICATION	1.4746819285245207E-8	DEFECT
// If the name has not already been defined define it	WITHOUT_CLASSIFICATION	0.9999992305930373	WITHOUT_CLASSIFICATION	7.694069627545698E-7	DEFECT
// In an impored file (and not completely // ignoring the project tag)	WITHOUT_CLASSIFICATION	0.9999641783200369	WITHOUT_CLASSIFICATION	3.5821679963069555E-5	DEFECT
/* UnknownElement is used for tasks and data types - with               delayed eval */	WITHOUT_CLASSIFICATION	0.9999997727498958	WITHOUT_CLASSIFICATION	2.2725010420378126E-7	DEFECT
// Nested element	WITHOUT_CLASSIFICATION	0.9999998900075785	WITHOUT_CLASSIFICATION	1.099924214380534E-7	DEFECT
// Task included in a target ( including the default one ).	WITHOUT_CLASSIFICATION	0.9999999983685126	WITHOUT_CLASSIFICATION	1.6314874862372097E-9	DEFECT
// container.addTask(task); // This is a nop in UE: task.init();	WITHOUT_CLASSIFICATION	0.9999893327948799	WITHOUT_CLASSIFICATION	1.0667205120219758E-5	DEFECT
// **   simple name specified   == path in list + name	WITHOUT_CLASSIFICATION	0.9999999906284915	WITHOUT_CLASSIFICATION	9.371508439903254E-9	DEFECT
// if the suffix does not starts with a '.' and the // char preceding the suffix is a '.', we assume the user // wants to remove the '.' as well (see docs)	WITHOUT_CLASSIFICATION	0.9999936043565676	WITHOUT_CLASSIFICATION	6.3956434324412426E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999996958536274	WITHOUT_CLASSIFICATION	3.0414637271301487E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999996958536274	WITHOUT_CLASSIFICATION	3.0414637271301487E-7	DEFECT
// use default if not file or file not found	WITHOUT_CLASSIFICATION	0.9999999383338303	WITHOUT_CLASSIFICATION	6.166616968045155E-8	DEFECT
// check whether the user has specified an absolute path	WITHOUT_CLASSIFICATION	0.9999999593220734	WITHOUT_CLASSIFICATION	4.067792663284187E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999209490427	WITHOUT_CLASSIFICATION	7.905095730336347E-8	DEFECT
// Start handling SAX events	WITHOUT_CLASSIFICATION	0.999999879491609	WITHOUT_CLASSIFICATION	1.2050839104920843E-7	DEFECT
// Let parent resume handling SAX events	WITHOUT_CLASSIFICATION	0.9999977316242579	WITHOUT_CLASSIFICATION	2.268375742148313E-6	DEFECT
// implicit target must be first on dependency list	WITHOUT_CLASSIFICATION	0.9999999953125938	WITHOUT_CLASSIFICATION	4.687406227618408E-9	DEFECT
// take care of dependencies	WITHOUT_CLASSIFICATION	0.9999992966151495	WITHOUT_CLASSIFICATION	7.033848505170474E-7	DEFECT
// swallow here, will be thrown again in // UnknownElement.maybeConfigure if the problem persists.	WITHOUT_CLASSIFICATION	0.9999990329835974	WITHOUT_CLASSIFICATION	9.670164026079903E-7	DEFECT
//XXX task.setTaskType(tag);	WITHOUT_CLASSIFICATION	0.9999847458592062	WITHOUT_CLASSIFICATION	1.5254140793702538E-5	DEFECT
// task can contain other tasks - no other nested elements possible	WITHOUT_CLASSIFICATION	0.9999999440252381	WITHOUT_CLASSIFICATION	5.597476184429557E-8	DEFECT
// taskcontainer nested element can contain other tasks - no other // nested elements possible	WITHOUT_CLASSIFICATION	0.9999999631587106	WITHOUT_CLASSIFICATION	3.684128938830288E-8	DEFECT
// Should not happen	WITHOUT_CLASSIFICATION	0.9999528670333324	WITHOUT_CLASSIFICATION	4.713296666747884E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999989929297763	WITHOUT_CLASSIFICATION	1.0070702236150735E-6	DEFECT
// the first hex character if a character needs to be escaped	WITHOUT_CLASSIFICATION	0.9999995275478782	WITHOUT_CLASSIFICATION	4.7245212174010916E-7	DEFECT
// the second hex character if a character needs to be escaped	WITHOUT_CLASSIFICATION	0.999985123712882	WITHOUT_CLASSIFICATION	1.4876287118036826E-5	DEFECT
// initialize the above 3 arrays	WITHOUT_CLASSIFICATION	0.9999999891487604	WITHOUT_CLASSIFICATION	1.085123956603955E-8	DEFECT
// #8031: first try Java 1.4.	WITHOUT_CLASSIFICATION	0.9999933376849441	WITHOUT_CLASSIFICATION	6.662315055880644E-6	DEFECT
// Fine, Java 1.3 or earlier, do it by hand.	WITHOUT_CLASSIFICATION	0.9999975193139541	WITHOUT_CLASSIFICATION	2.4806860459390172E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999209490427	WITHOUT_CLASSIFICATION	7.905095730336347E-8	DEFECT
// Bad URI, pass this on.	WITHOUT_CLASSIFICATION	0.9999614284667305	WITHOUT_CLASSIFICATION	3.8571533269508244E-5	DEFECT
// Unexpected target exception? Should not happen.	WITHOUT_CLASSIFICATION	0.9999995464632331	WITHOUT_CLASSIFICATION	4.5353676694107027E-7	DEFECT
// Reflection problems? Should not happen, debug.	WITHOUT_CLASSIFICATION	0.9943072773771309	WITHOUT_CLASSIFICATION	0.005692722622869094	DEFECT
// Fallback method for Java 1.3 or earlier.	WITHOUT_CLASSIFICATION	0.9999963274293289	WITHOUT_CLASSIFICATION	3.672570671153024E-6	DEFECT
// Ignore malformed exception	WITHOUT_CLASSIFICATION	0.9999998407987283	WITHOUT_CLASSIFICATION	1.5920127169829439E-7	DEFECT
// if it's not an ASCII character, break here, and use UTF-8 encoding	WITHOUT_CLASSIFICATION	0.9999966451511264	WITHOUT_CLASSIFICATION	3.3548488735005323E-6	DEFECT
// record the fact that it's escaped	WITHOUT_CLASSIFICATION	0.9999986602711322	WITHOUT_CLASSIFICATION	1.3397288678946384E-6	DEFECT
// we saw some non-ascii character	WITHOUT_CLASSIFICATION	0.9999999937463886	WITHOUT_CLASSIFICATION	6.2536114353474206E-9	DEFECT
// get UTF-8 bytes for the remaining sub-string	WITHOUT_CLASSIFICATION	0.9999999606595855	WITHOUT_CLASSIFICATION	3.934041452062151E-8	DEFECT
// for each byte	WITHOUT_CLASSIFICATION	0.9999995362658457	WITHOUT_CLASSIFICATION	4.637341543033479E-7	DEFECT
// for non-ascii character: make it positive, then escape	WITHOUT_CLASSIFICATION	0.9999952363426977	WITHOUT_CLASSIFICATION	4.763657302293472E-6	DEFECT
// firstly check if the tools jar is already in the classpath	WITHOUT_CLASSIFICATION	0.9999999941564829	WITHOUT_CLASSIFICATION	5.8435170956891234E-9	DEFECT
// just check whether this throws an exception	WITHOUT_CLASSIFICATION	0.9999999845440823	WITHOUT_CLASSIFICATION	1.5455917644379017E-8	DEFECT
// couldn't find compiler - try to find tools.jar // based on java.home setting	WITHOUT_CLASSIFICATION	0.9999979972058265	WITHOUT_CLASSIFICATION	2.002794173454467E-6	DEFECT
// Found in java.home as given	WITHOUT_CLASSIFICATION	0.999999318248116	WITHOUT_CLASSIFICATION	6.817518838744153E-7	DEFECT
// add any jars in the directory	WITHOUT_CLASSIFICATION	0.999992962804259	WITHOUT_CLASSIFICATION	7.037195741021634E-6	DEFECT
// now update the class.path property	WITHOUT_CLASSIFICATION	0.9999980205325552	WITHOUT_CLASSIFICATION	1.9794674448278734E-6	DEFECT
// overlay specified properties file (if any), which overrides project // settings	WITHOUT_CLASSIFICATION	0.9999999718751793	WITHOUT_CLASSIFICATION	2.8124820683364203E-8	DEFECT
// ignore because properties file is not required	WITHOUT_CLASSIFICATION	0.9999895328746101	WITHOUT_CLASSIFICATION	1.0467125389881432E-5	DEFECT
// private static final int ATTR_NORMAL = 0; // private static final int ATTR_BRIGHT = 1;	WITHOUT_CLASSIFICATION	0.9999999202799962	WITHOUT_CLASSIFICATION	7.972000384700157E-8	DEFECT
// private static final int ATTR_UNDERLINE = 3; // private static final int ATTR_BLINK = 5; // private static final int ATTR_REVERSE = 7; // private static final int ATTR_HIDDEN = 8;	WITHOUT_CLASSIFICATION	0.9999998239733514	WITHOUT_CLASSIFICATION	1.7602664872194454E-7	DEFECT
// private static final int FG_BLACK = 30;	WITHOUT_CLASSIFICATION	0.9999997558415729	WITHOUT_CLASSIFICATION	2.441584271232254E-7	DEFECT
// private static final int FG_YELLOW = 33;	WITHOUT_CLASSIFICATION	0.9999999247787462	WITHOUT_CLASSIFICATION	7.522125376106558E-8	DEFECT
// private static final int FG_WHITE = 37;	WITHOUT_CLASSIFICATION	0.9999998855949707	WITHOUT_CLASSIFICATION	1.1440502932712742E-7	DEFECT
//Ignore - we will use the defaults.	WITHOUT_CLASSIFICATION	0.9999998665289507	WITHOUT_CLASSIFICATION	1.3347104930481053E-7	DEFECT
//Ignore - We do not want this to stop the build.	WITHOUT_CLASSIFICATION	0.9999877432393685	WITHOUT_CLASSIFICATION	1.22567606314985E-5	DEFECT
// Fall through	WITHOUT_CLASSIFICATION	0.9999685547798925	WITHOUT_CLASSIFICATION	3.144522010744248E-5	DEFECT
// Whether or not an actual update is required - // we don't need to update if the original file doesn't exist	WITHOUT_CLASSIFICATION	0.9904581481336695	WITHOUT_CLASSIFICATION	0.009541851866330485	DEFECT
// Use the logger config	WITHOUT_CLASSIFICATION	0.9999997661476498	WITHOUT_CLASSIFICATION	2.338523500250269E-7	DEFECT
// Since task log category includes target, we don't really // need this message	WITHOUT_CLASSIFICATION	0.9999997762756389	WITHOUT_CLASSIFICATION	2.237243611962953E-7	DEFECT
// Driver doesn't understand the URL	WITHOUT_CLASSIFICATION	0.9999991169179484	WITHOUT_CLASSIFICATION	8.830820516281402E-7	DEFECT
// It's a task - append the target	WITHOUT_CLASSIFICATION	0.9999997883428384	WITHOUT_CLASSIFICATION	2.116571614916742E-7	DEFECT
// finally, lets execute the compiler!!	WITHOUT_CLASSIFICATION	0.999975276638978	WITHOUT_CLASSIFICATION	2.4723361022012355E-5	DEFECT
// Doesn't make sense for c-l. Use the logger config	WITHOUT_CLASSIFICATION	0.9999939974345587	WITHOUT_CLASSIFICATION	6.0025654412247655E-6	DEFECT
// Could not get the required information	WITHOUT_CLASSIFICATION	0.9999099409331399	WITHOUT_CLASSIFICATION	9.005906686008543E-5	DEFECT
// Create a ZipFileSet for this file, and pass it up.	WITHOUT_CLASSIFICATION	0.9999972994434723	WITHOUT_CLASSIFICATION	2.700556527780175E-6	DEFECT
// now we need to populate the compiler adapter	WITHOUT_CLASSIFICATION	0.999998996428347	WITHOUT_CLASSIFICATION	1.0035716530728304E-6	DEFECT
// If no webxml file is specified, it's an error.	WITHOUT_CLASSIFICATION	0.9999999382611686	WITHOUT_CLASSIFICATION	6.173883131535417E-8	DEFECT
// One cannot RMIC an interface for "classic" RMI (JRMP)	WITHOUT_CLASSIFICATION	0.9999980646491939	WITHOUT_CLASSIFICATION	1.935350806159292E-6	DEFECT
// otherwise perform a timestamp comparison - at least	WITHOUT_CLASSIFICATION	0.9999994709339433	WITHOUT_CLASSIFICATION	5.290660566631786E-7	DEFECT
// don't know how to handle that - a IDL file doesn't // have a corresponding Java source for example.	WITHOUT_CLASSIFICATION	0.9998904928202607	WITHOUT_CLASSIFICATION	1.0950717973935279E-4	DEFECT
/*             * Move the generated source file to the base directory.  If             * base directory and sourcebase are the same, the generated             * sources are already in place.             */	WITHOUT_CLASSIFICATION	0.9999999714369309	WITHOUT_CLASSIFICATION	2.8563069107715467E-8	DEFECT
// no source file generated, nothing to move	WITHOUT_CLASSIFICATION	0.999999996996896	WITHOUT_CLASSIFICATION	3.00310393928143E-9	DEFECT
// not the requested type	WITHOUT_CLASSIFICATION	0.9999950081500375	WITHOUT_CLASSIFICATION	4.991849962475004E-6	DEFECT
// **   full-pathname specified == path in list // **   simple name specified   == path in list	WITHOUT_CLASSIFICATION	0.9999999817251201	WITHOUT_CLASSIFICATION	1.8274879895482786E-8	DEFECT
// we only get here if an exception has been thrown	WITHOUT_CLASSIFICATION	0.9999599109545912	WITHOUT_CLASSIFICATION	4.0089045408684166E-5	DEFECT
// **   full-pathname specified == parent dir of path in list	WITHOUT_CLASSIFICATION	0.9999997432378216	WITHOUT_CLASSIFICATION	2.5676217842689004E-7	DEFECT
// not the requested type	WITHOUT_CLASSIFICATION	0.9999950081500375	WITHOUT_CLASSIFICATION	4.991849962475004E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999209490427	WITHOUT_CLASSIFICATION	7.905095730336347E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999209490427	WITHOUT_CLASSIFICATION	7.905095730336347E-8	DEFECT
//the rest of the method treats single jar like //a nested path with one file	WITHOUT_CLASSIFICATION	0.999997397417686	WITHOUT_CLASSIFICATION	2.602582313955935E-6	DEFECT
// Check for \r, \r\n and \r\r\n // Regard \r\r not followed by \n as two lines	WITHOUT_CLASSIFICATION	0.9999980677149769	WITHOUT_CLASSIFICATION	1.932285023067864E-6	DEFECT
// scan base dirs to build up compile lists only if a // specific classname is not given	WITHOUT_CLASSIFICATION	0.9999862680147948	WITHOUT_CLASSIFICATION	1.3731985205098415E-5	DEFECT
// **   simple name specified   == parent dir + name	WITHOUT_CLASSIFICATION	0.9999998671895748	WITHOUT_CLASSIFICATION	1.3281042523237453E-7	DEFECT
// class found but restricted name; this is // actually the case we're looking for in JDK 1.3+, // so catch the exception and return	WITHOUT_CLASSIFICATION	0.9999997230872909	WITHOUT_CLASSIFICATION	2.769127090162772E-7	DEFECT
// Can return null to represent the bootstrap class loader. // see API docs of Class.getClassLoader.	WITHOUT_CLASSIFICATION	0.9999999996866581	WITHOUT_CLASSIFICATION	3.133418543801729E-10	DEFECT
// must be "add"	WITHOUT_CLASSIFICATION	0.9999999295730603	WITHOUT_CLASSIFICATION	7.042693981037732E-8	DEFECT
// first off, make sure that we've got a srcdir and destdir	WITHOUT_CLASSIFICATION	0.999999908455324	WITHOUT_CLASSIFICATION	9.154467598986274E-8	DEFECT
// log options used	WITHOUT_CLASSIFICATION	0.9999997143125137	WITHOUT_CLASSIFICATION	2.8568748634232355E-7	DEFECT
//patch file into the fileset	WITHOUT_CLASSIFICATION	0.9999999765333892	WITHOUT_CLASSIFICATION	2.346661083085095E-8	DEFECT
//set our parent dir	WITHOUT_CLASSIFICATION	0.9999974929269212	WITHOUT_CLASSIFICATION	2.5070730788258945E-6	DEFECT
// Compare the destination with the temp file	WITHOUT_CLASSIFICATION	0.9999999426011601	WITHOUT_CLASSIFICATION	5.739883999744497E-8	DEFECT
// Eof has been reached	WITHOUT_CLASSIFICATION	0.9999988737723514	WITHOUT_CLASSIFICATION	1.1262276485924543E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999209490427	WITHOUT_CLASSIFICATION	7.905095730336347E-8	DEFECT
// don't reposition when we've reached the end // of the stream	WITHOUT_CLASSIFICATION	0.9999924950184997	WITHOUT_CLASSIFICATION	7.504981500303726E-6	DEFECT
// if at eolcount == 0 and trailing characters of string // are CTRL-Zs, set eofStr	WITHOUT_CLASSIFICATION	0.9999999995102502	WITHOUT_CLASSIFICATION	4.897497937642277E-10	DEFECT
// keep searching for the first ^Z	WITHOUT_CLASSIFICATION	0.9999999720836819	WITHOUT_CLASSIFICATION	2.7916318201748622E-8	DEFECT
// Trailing characters are ^Zs // Construct new line and eofStr	WITHOUT_CLASSIFICATION	0.9999999966902061	WITHOUT_CLASSIFICATION	3.30979395546114E-9	DEFECT
// permissible values for compression attribute	WITHOUT_CLASSIFICATION	0.9999990851136215	WITHOUT_CLASSIFICATION	9.14886378496578E-7	DEFECT
//default	WITHOUT_CLASSIFICATION	0.9999947782843395	WITHOUT_CLASSIFICATION	5.221715660500703E-6	DEFECT
// shadow of the above if the value is altered in execute	WITHOUT_CLASSIFICATION	0.9999995436587389	WITHOUT_CLASSIFICATION	4.563412610780648E-7	DEFECT
// For directories:	WITHOUT_CLASSIFICATION	0.9999974762244717	WITHOUT_CLASSIFICATION	2.523775528325666E-6	DEFECT
// Renamed version of original file, if it exists	WITHOUT_CLASSIFICATION	0.9999382018428142	WITHOUT_CLASSIFICATION	6.179815718572552E-5	DEFECT
// Add the files found in groupfileset to fileset	WITHOUT_CLASSIFICATION	0.9999970365702927	WITHOUT_CLASSIFICATION	2.963429707432397E-6	DEFECT
// can also handle empty archives	WITHOUT_CLASSIFICATION	0.9999999595062168	WITHOUT_CLASSIFICATION	4.049378331361771E-8	DEFECT
// quick exit if the target is up to date	WITHOUT_CLASSIFICATION	0.9999998202197845	WITHOUT_CLASSIFICATION	1.797802154658295E-7	DEFECT
// Close the output stream.	WITHOUT_CLASSIFICATION	0.9999999815349156	WITHOUT_CLASSIFICATION	1.8465084306129493E-8	DEFECT
// we are recreating the archive, need all resources	WITHOUT_CLASSIFICATION	0.9999998225940048	WITHOUT_CLASSIFICATION	1.7740599522314178E-7	DEFECT
// delete a bogus ZIP file (but only if it's not the original one)	WITHOUT_CLASSIFICATION	0.9999895173129135	WITHOUT_CLASSIFICATION	1.0482687086379158E-5	DEFECT
// In this case using java.util.zip will not work // because it does not permit a zero-entry archive. // Must create it manually.	WITHOUT_CLASSIFICATION	0.828779374058053	WITHOUT_CLASSIFICATION	0.1712206259419469	DEFECT
// Cf. PKZIP specification.	WITHOUT_CLASSIFICATION	0.9999999500832246	WITHOUT_CLASSIFICATION	4.9916775295992554E-8	DEFECT
// P // K	WITHOUT_CLASSIFICATION	0.9999893996373694	WITHOUT_CLASSIFICATION	1.060036263059764E-5	DEFECT
// remainder zeros	WITHOUT_CLASSIFICATION	0.9999922127997162	WITHOUT_CLASSIFICATION	7.787200283876208E-6	DEFECT
// Create.	WITHOUT_CLASSIFICATION	0.9999995444097859	WITHOUT_CLASSIFICATION	4.555902140802967E-7	DEFECT
// we are recreating the archive, need all resources	WITHOUT_CLASSIFICATION	0.9999998225940048	WITHOUT_CLASSIFICATION	1.7740599522314178E-7	DEFECT
// initialResources is not empty	WITHOUT_CLASSIFICATION	0.9999912664501076	WITHOUT_CLASSIFICATION	8.73354989228764E-6	DEFECT
// initialResources is not empty	WITHOUT_CLASSIFICATION	0.9999912664501076	WITHOUT_CLASSIFICATION	8.73354989228764E-6	DEFECT
// in this case all files from origin map to // the fullPath attribute of the zipfileset at // destination	WITHOUT_CLASSIFICATION	0.9999957654306233	WITHOUT_CLASSIFICATION	4.234569376766541E-6	DEFECT
// we are recreating the archive, need all resources	WITHOUT_CLASSIFICATION	0.9999998225940048	WITHOUT_CLASSIFICATION	1.7740599522314178E-7	DEFECT
// we are recreating the archive, need all resources	WITHOUT_CLASSIFICATION	0.9999998225940048	WITHOUT_CLASSIFICATION	1.7740599522314178E-7	DEFECT
// no emptyBehavior handling since the FileSet version // will take care of it.	WITHOUT_CLASSIFICATION	0.9999997929654838	WITHOUT_CLASSIFICATION	2.0703451622661135E-7	DEFECT
/*         * Backwards compatibility forces us to repeat the logic of         * getResourcesToAdd(FileSet[], ...) here once again.         */	WITHOUT_CLASSIFICATION	0.9999999779827965	WITHOUT_CLASSIFICATION	2.2017203524041444E-8	DEFECT
// we will return initialResources anyway, no reason // to scan further.	WITHOUT_CLASSIFICATION	0.9999999777699596	WITHOUT_CLASSIFICATION	2.2230040398240902E-8	DEFECT
// we will return initialResources anyway, no reason // to scan further.	WITHOUT_CLASSIFICATION	0.9999999777699596	WITHOUT_CLASSIFICATION	2.2230040398240902E-8	DEFECT
// ZIPs store time with a granularity of 2 seconds, round up	WITHOUT_CLASSIFICATION	0.9999371148218544	WITHOUT_CLASSIFICATION	6.288517814553731E-5	DEFECT
// don't add directories we've already added. // no warning if we try, it is harmless in and of itself	WITHOUT_CLASSIFICATION	0.9999999963745538	WITHOUT_CLASSIFICATION	3.6254462608345425E-9	DEFECT
// A "refid" attribute for a node within a Path object.	WITHOUT_CLASSIFICATION	0.9999991738197727	WITHOUT_CLASSIFICATION	8.261802272204954E-7	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9999940166248454	WITHOUT_CLASSIFICATION	5.983375154568819E-6	DEFECT
//default	WITHOUT_CLASSIFICATION	0.9999947782843395	WITHOUT_CLASSIFICATION	5.221715660500703E-6	DEFECT
//default	WITHOUT_CLASSIFICATION	0.9999947782843395	WITHOUT_CLASSIFICATION	5.221715660500703E-6	DEFECT
// ZIPs store time with a granularity of 2 seconds, round up	WITHOUT_CLASSIFICATION	0.9999371148218544	WITHOUT_CLASSIFICATION	6.288517814553731E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999209490427	WITHOUT_CLASSIFICATION	7.905095730336347E-8	DEFECT
// duplicate equal to add, so we continue	WITHOUT_CLASSIFICATION	0.9999999790432752	WITHOUT_CLASSIFICATION	2.0956724837192176E-8	DEFECT
// Store data into a byte[]	WITHOUT_CLASSIFICATION	0.99999775736987	WITHOUT_CLASSIFICATION	2.2426301300395435E-6	DEFECT
// may be altered in validate	WITHOUT_CLASSIFICATION	0.9999976499536312	WITHOUT_CLASSIFICATION	2.350046368888059E-6	DEFECT
// set user-defined properties	WITHOUT_CLASSIFICATION	0.9999999903636352	WITHOUT_CLASSIFICATION	9.636364703372021E-9	DEFECT
// set Java built-in properties separately, // b/c we won't inherit them.	WITHOUT_CLASSIFICATION	0.999971388733065	WITHOUT_CLASSIFICATION	2.8611266934892804E-5	DEFECT
// set all properties from calling project	WITHOUT_CLASSIFICATION	0.9999976514915317	WITHOUT_CLASSIFICATION	2.348508468324814E-6	DEFECT
// has been set explicitly	WITHOUT_CLASSIFICATION	0.999999421257027	WITHOUT_CLASSIFICATION	5.787429729049391E-7	DEFECT
// Are we trying to call the target in which we are defined (or // the build file if this is a top level task)?	WITHOUT_CLASSIFICATION	0.9999999966007642	WITHOUT_CLASSIFICATION	3.399235921923648E-9	DEFECT
// help the gc	WITHOUT_CLASSIFICATION	0.9999913425575422	WITHOUT_CLASSIFICATION	8.657442457823911E-6	DEFECT
// remove duplicate properties - last property wins // Needed for backward compatibility	WITHOUT_CLASSIFICATION	0.9999937747690805	WITHOUT_CLASSIFICATION	6.225230919591555E-6	DEFECT
// Now add all references that are not defined in the // subproject, if inheritRefs is true	WITHOUT_CLASSIFICATION	0.9999995956251491	WITHOUT_CLASSIFICATION	4.0437485088882887E-7	DEFECT
// not Clonable	WITHOUT_CLASSIFICATION	0.9999992287934766	WITHOUT_CLASSIFICATION	7.712065235392823E-7	DEFECT
// ignore this if the class being referenced does not have // a set project method.	WITHOUT_CLASSIFICATION	0.999992062583955	WITHOUT_CLASSIFICATION	7.93741604496151E-6	DEFECT
// basedir and ant.file get special treatment in execute()	WITHOUT_CLASSIFICATION	0.9999970998577599	WITHOUT_CLASSIFICATION	2.9001422402327205E-6	DEFECT
// don't re-set user properties, avoid the warning message	WITHOUT_CLASSIFICATION	0.9999953302612083	WITHOUT_CLASSIFICATION	4.669738791640386E-6	DEFECT
// no user property	WITHOUT_CLASSIFICATION	0.9999993805899906	WITHOUT_CLASSIFICATION	6.194100093673966E-7	DEFECT
// @note: it is a string and not a file to handle relative/absolute // otherwise a relative file will be resolved based on the current // basedir.	WITHOUT_CLASSIFICATION	0.9999937990249254	WITHOUT_CLASSIFICATION	6.200975074584575E-6	DEFECT
/*     * Get the (sub)-Project instance currently in use.     * @return Project     * @since Ant 1.7     */	WITHOUT_CLASSIFICATION	0.9999978632388101	WITHOUT_CLASSIFICATION	2.1367611898616305E-6	DEFECT
// check to make sure that the given dir isn't a symlink // the comparison of absolute path and canonical path // catches this	WITHOUT_CLASSIFICATION	0.9986544281929014	WITHOUT_CLASSIFICATION	0.0013455718070985994	DEFECT
//validation logic	WITHOUT_CLASSIFICATION	0.9999899729329356	WITHOUT_CLASSIFICATION	1.00270670643548E-5	DEFECT
//this isnt strictly needed, but by being fussy now, //we can change implementation details later	WITHOUT_CLASSIFICATION	0.9999891140015971	WITHOUT_CLASSIFICATION	1.0885998402902932E-5	DEFECT
//special case single jar handling with signedjar attribute set	WITHOUT_CLASSIFICATION	0.9999999679136466	WITHOUT_CLASSIFICATION	3.208635330650945E-8	DEFECT
// single jar processing	WITHOUT_CLASSIFICATION	0.9999999637893496	WITHOUT_CLASSIFICATION	3.621065043273692E-8	DEFECT
//return here.	WITHOUT_CLASSIFICATION	0.9999648278440887	WITHOUT_CLASSIFICATION	3.5172155911355225E-5	DEFECT
//set up our mapping policy	WITHOUT_CLASSIFICATION	0.9999993543652465	WITHOUT_CLASSIFICATION	6.456347535722734E-7	DEFECT
//no mapper? use the identity policy	WITHOUT_CLASSIFICATION	0.999994449717582	WITHOUT_CLASSIFICATION	5.5502824180202835E-6	DEFECT
//determine the destination filename via the mapper	WITHOUT_CLASSIFICATION	0.9999994563797068	WITHOUT_CLASSIFICATION	5.436202933042707E-7	DEFECT
//we only like simple mappers.	WITHOUT_CLASSIFICATION	0.9999655159377187	WITHOUT_CLASSIFICATION	3.4484062281316406E-5	DEFECT
//DO NOT SET THE -signedjar OPTION if source==dest //unless you like fielding hotspot crash reports	WITHOUT_CLASSIFICATION	0.9999995425038791	WITHOUT_CLASSIFICATION	4.574961208201248E-7	DEFECT
//add -tsa operations if declared	WITHOUT_CLASSIFICATION	0.9999991220934112	WITHOUT_CLASSIFICATION	8.779065888398063E-7	DEFECT
//JAR source is required	WITHOUT_CLASSIFICATION	0.9999355476362642	WITHOUT_CLASSIFICATION	6.445236373585408E-5	DEFECT
//alias is required for signing	WITHOUT_CLASSIFICATION	0.9993692359342671	WITHOUT_CLASSIFICATION	6.307640657328787E-4	DEFECT
// restore the lastModified attribute	WITHOUT_CLASSIFICATION	0.9999998901626977	WITHOUT_CLASSIFICATION	1.0983730216105127E-7	DEFECT
//we normally compare destination with source	WITHOUT_CLASSIFICATION	0.9999980655054687	WITHOUT_CLASSIFICATION	1.9344945314098738E-6	DEFECT
//but if no dest is specified, compare source to source	WITHOUT_CLASSIFICATION	0.9999999180601626	WITHOUT_CLASSIFICATION	8.193983729342526E-8	DEFECT
//if, by any means, the destfile and source match,	WITHOUT_CLASSIFICATION	0.999998304714243	WITHOUT_CLASSIFICATION	1.6952857570914086E-6	DEFECT
//we check the presence of signatures on lazy signing	WITHOUT_CLASSIFICATION	0.9999983272700326	WITHOUT_CLASSIFICATION	1.6727299674842604E-6	DEFECT
//unsigned or non-lazy self signings are always false	WITHOUT_CLASSIFICATION	0.9999571667931183	WITHOUT_CLASSIFICATION	4.283320688176224E-5	DEFECT
//if they are different, the timestamps are used	WITHOUT_CLASSIFICATION	0.9999999327197316	WITHOUT_CLASSIFICATION	6.72802683490892E-8	DEFECT
//just log this	WITHOUT_CLASSIFICATION	0.9999924034654574	WITHOUT_CLASSIFICATION	7.596534542601424E-6	DEFECT
// fileutils	WITHOUT_CLASSIFICATION	0.9999991914075399	WITHOUT_CLASSIFICATION	8.085924599964471E-7	DEFECT
// --- Fields --	WITHOUT_CLASSIFICATION	0.9999844102438213	WITHOUT_CLASSIFICATION	1.558975617862439E-5	DEFECT
// Keep a hashtable of attributes added by this task. // This task is allow to override its own properties // but not other properties.  So we need to keep track // of which properties we've added.	WITHOUT_CLASSIFICATION	0.9999998560010155	WITHOUT_CLASSIFICATION	1.4399898447764488E-7	DEFECT
// Error generated during parsing	WITHOUT_CLASSIFICATION	0.9999848934915576	WITHOUT_CLASSIFICATION	1.5106508442381119E-5	DEFECT
// Parser with specified options can't be built	WITHOUT_CLASSIFICATION	0.9999989497167433	WITHOUT_CLASSIFICATION	1.050283256706484E-6	DEFECT
// I/O error	WITHOUT_CLASSIFICATION	0.9999915666346383	WITHOUT_CLASSIFICATION	8.433365361657243E-6	DEFECT
// Set the prefix for this node to include its tag name.	WITHOUT_CLASSIFICATION	0.9999979822695921	WITHOUT_CLASSIFICATION	2.0177304077463373E-6	DEFECT
// Pass the container to the processing of this node,	WITHOUT_CLASSIFICATION	0.9999995996085881	WITHOUT_CLASSIFICATION	4.003914119167713E-7	DEFECT
// now, iterate through children.	WITHOUT_CLASSIFICATION	0.9999991456969057	WITHOUT_CLASSIFICATION	8.543030942539496E-7	DEFECT
// For each child, pass the object added by // processNode to its children -- in other word, each // object can pass information along to its children.	WITHOUT_CLASSIFICATION	0.9999975622713455	WITHOUT_CLASSIFICATION	2.4377286544832005E-6	DEFECT
// The value of an id attribute of this node.	WITHOUT_CLASSIFICATION	0.999994845724577	WITHOUT_CLASSIFICATION	5.154275423080082E-6	DEFECT
// Is there an id attribute?	WITHOUT_CLASSIFICATION	0.9999974803319739	WITHOUT_CLASSIFICATION	2.519668026199163E-6	DEFECT
// Now, iterate through the attributes adding them.	WITHOUT_CLASSIFICATION	0.9999997653551211	WITHOUT_CLASSIFICATION	2.3464487898076918E-7	DEFECT
/*                     * The main conditional logic -- if the attribute                     * is somehow "special" (i.e., it has known                     * semantic meaning) then deal with it                     * appropriately.                     */	WITHOUT_CLASSIFICATION	0.9999641550512666	WITHOUT_CLASSIFICATION	3.584494873334549E-5	DEFECT
// ID has already been found above.	WITHOUT_CLASSIFICATION	0.9999998706655673	WITHOUT_CLASSIFICATION	1.2933443267745088E-7	DEFECT
// A "path" attribute for a node within a Path object.	WITHOUT_CLASSIFICATION	0.999998998402485	WITHOUT_CLASSIFICATION	1.0015975150540376E-6	DEFECT
// A node identifying a new path	WITHOUT_CLASSIFICATION	0.9999926921528113	WITHOUT_CLASSIFICATION	7.307847188626512E-6	DEFECT
// For the text node, add a property.	WITHOUT_CLASSIFICATION	0.9999954048839851	WITHOUT_CLASSIFICATION	4.595116014948578E-6	DEFECT
// If the containing object was a String, then use it as the ID.	WITHOUT_CLASSIFICATION	0.9999997958767608	WITHOUT_CLASSIFICATION	2.0412323919551813E-7	DEFECT
// If this attribute was added by this task, then // we append this value to the existing value. // We use the setProperty method which will // forcibly override the property if it already exists. // We need to put these properties into the project // when we read them, though (instead of keeping them // outside of the project and batch adding them at the end) // to allow other properties to reference them.	WITHOUT_CLASSIFICATION	0.9999989358822946	WITHOUT_CLASSIFICATION	1.0641177053775201E-6	DEFECT
// Never include the "refid" attribute as part of the // attribute name.	WITHOUT_CLASSIFICATION	0.9999999996495192	WITHOUT_CLASSIFICATION	3.504807656264985E-10	DEFECT
// Otherwise, return it appended unless property to hide it is set.	WITHOUT_CLASSIFICATION	0.9999885414285152	WITHOUT_CLASSIFICATION	1.1458571484677473E-5	DEFECT
/* Expose members for extensibility */	WITHOUT_CLASSIFICATION	0.9999916803439127	WITHOUT_CLASSIFICATION	8.319656087323671E-6	DEFECT
// delegate this way around to support subclasses that // overwrite getFile	WITHOUT_CLASSIFICATION	0.9999996667212178	WITHOUT_CLASSIFICATION	3.332787823038842E-7	DEFECT
//we arent fully defined yet. this is an error unless //we are in an antlib, in which case the resource name is determined //automatically. //NB: URIs in the ant core package will be "" at this point.	WITHOUT_CLASSIFICATION	0.9997260394565878	WITHOUT_CLASSIFICATION	2.7396054341221525E-4	DEFECT
//convert the URI to a resource	WITHOUT_CLASSIFICATION	0.9999995336099055	WITHOUT_CLASSIFICATION	4.6639009452256094E-7	DEFECT
//handle new style full paths to an antlib, in which //all but the forward slashes are allowed.	WITHOUT_CLASSIFICATION	0.9999999533146481	WITHOUT_CLASSIFICATION	4.668535204422852E-8	DEFECT
//if we haven't already named an XML file, it gets antlib.xml	WITHOUT_CLASSIFICATION	0.9999935929826334	WITHOUT_CLASSIFICATION	6.407017366690149E-6	DEFECT
//convert from a package to a path	WITHOUT_CLASSIFICATION	0.999999457525154	WITHOUT_CLASSIFICATION	5.424748460306333E-7	DEFECT
// Here if there is an error	WITHOUT_CLASSIFICATION	0.9999991556921064	WITHOUT_CLASSIFICATION	8.443078936565675E-7	DEFECT
// Fall Through	WITHOUT_CLASSIFICATION	0.9999787094564205	WITHOUT_CLASSIFICATION	2.1290543579407758E-5	DEFECT
// log at a lower level	WITHOUT_CLASSIFICATION	0.9999992298638138	WITHOUT_CLASSIFICATION	7.701361860884216E-7	DEFECT
// Ignore the problem	WITHOUT_CLASSIFICATION	0.9999985907156982	WITHOUT_CLASSIFICATION	1.4092843017565024E-6	DEFECT
//trick to evoke "basedir not set" if null:	WITHOUT_CLASSIFICATION	0.9999267182824844	WITHOUT_CLASSIFICATION	7.328171751567129E-5	DEFECT
//no sources = nothing to compare; no targets = nothing to delete:	WITHOUT_CLASSIFICATION	0.999999843443835	WITHOUT_CLASSIFICATION	1.5655616490637237E-7	DEFECT
// Members	WITHOUT_CLASSIFICATION	0.9999993259077279	WITHOUT_CLASSIFICATION	6.740922722055069E-7	DEFECT
// Members	WITHOUT_CLASSIFICATION	0.9999993259077279	WITHOUT_CLASSIFICATION	6.740922722055069E-7	DEFECT
// If we are a reference, create a Path from the reference	WITHOUT_CLASSIFICATION	0.9999989190433193	WITHOUT_CLASSIFICATION	1.0809566808155992E-6	DEFECT
// for NetWare and OS/2, piggy-back on Windows, since here and // in the apply code, the same assumptions can be made as with // windows - that \\ is an OK separator, and do comparisons // case-insensitive.	WITHOUT_CLASSIFICATION	0.9955631107731976	WITHOUT_CLASSIFICATION	0.004436889226802429	DEFECT
// If the element starts with the configured prefix, then // convert the prefix to the configured 'to' value.	WITHOUT_CLASSIFICATION	0.9999941408508952	WITHOUT_CLASSIFICATION	5.859149104760342E-6	DEFECT
// Currently, we deal with only two path formats: Unix and Windows // And Unix is everything that is not Windows	WITHOUT_CLASSIFICATION	0.982441559928176	WITHOUT_CLASSIFICATION	0.01755844007182402	DEFECT
// may be altered in validateSetup // may be altered in validateSetup	WITHOUT_CLASSIFICATION	0.9999953473725073	WITHOUT_CLASSIFICATION	4.652627492721574E-6	DEFECT
// validate our setup	WITHOUT_CLASSIFICATION	0.9999998160263447	WITHOUT_CLASSIFICATION	1.8397365518794692E-7	DEFECT
// Currently, we deal with only two path formats: Unix and Windows // And Unix is everything that is not Windows // (with the exception for NetWare and OS/2 below)	WITHOUT_CLASSIFICATION	0.9965559113939261	WITHOUT_CLASSIFICATION	0.003444088606073809	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999209490427	WITHOUT_CLASSIFICATION	7.905095730336347E-8	DEFECT
// Get the list of path components in canonical form	WITHOUT_CLASSIFICATION	0.9999999748333473	WITHOUT_CLASSIFICATION	2.516665255560081E-8	DEFECT
// Apply the path prefix map	WITHOUT_CLASSIFICATION	0.9998416804967811	WITHOUT_CLASSIFICATION	1.5831950321889011E-4	DEFECT
// Now convert the path and file separator characters from the // current os to the target os.	WITHOUT_CLASSIFICATION	0.999999999573989	WITHOUT_CLASSIFICATION	4.2601099707148504E-10	DEFECT
// Place the result into the specified property, // unless setonempty == false	WITHOUT_CLASSIFICATION	0.9999999622062901	WITHOUT_CLASSIFICATION	3.779370994191587E-8	DEFECT
// Iterate over the map entries and apply each one. // Stop when one of the entries actually changes the element.	WITHOUT_CLASSIFICATION	0.999999456740611	WITHOUT_CLASSIFICATION	5.432593889699503E-7	DEFECT
// Note I'm using "!=" to see if we got a new object back from // the apply method.	WITHOUT_CLASSIFICATION	0.9999998019416593	WITHOUT_CLASSIFICATION	1.9805834069041955E-7	DEFECT
// We applied one, so we're done	WITHOUT_CLASSIFICATION	0.9999999947726755	WITHOUT_CLASSIFICATION	5.2273244823239794E-9	DEFECT
// Determine the separator strings.  The dirsep and pathsep attributes // override the targetOS settings.	WITHOUT_CLASSIFICATION	0.9999999999699516	WITHOUT_CLASSIFICATION	3.004845658780951E-11	DEFECT
// override with pathsep=	WITHOUT_CLASSIFICATION	0.999999910769965	WITHOUT_CLASSIFICATION	8.923003506593101E-8	DEFECT
// override with dirsep=	WITHOUT_CLASSIFICATION	0.999999899419352	WITHOUT_CLASSIFICATION	1.0058064802770393E-7	DEFECT
// Check if used by attributes	WITHOUT_CLASSIFICATION	0.9999999942241659	WITHOUT_CLASSIFICATION	5.775834064067674E-9	DEFECT
// ? is there an xml api for this ?	WITHOUT_CLASSIFICATION	0.9999951684291176	WITHOUT_CLASSIFICATION	4.831570882329082E-6	DEFECT
////////////////////////////////////////////////////////////////////// // ATTRIBUTES	WITHOUT_CLASSIFICATION	0.9999889671210997	WITHOUT_CLASSIFICATION	1.1032878900127309E-5	DEFECT
////////////////////////////////////////////////////////////////////// // CONSTRUCTORS / INITIALIZERS	WITHOUT_CLASSIFICATION	0.9999974165888894	WITHOUT_CLASSIFICATION	2.5834111105796725E-6	DEFECT
////////////////////////////////////////////////////////////////////// // ACCESSOR METHODS	WITHOUT_CLASSIFICATION	0.9999920132032858	WITHOUT_CLASSIFICATION	7.986796714243724E-6	DEFECT
//Validate mandatory attributes	WITHOUT_CLASSIFICATION	0.9999845830290106	WITHOUT_CLASSIFICATION	1.5416970989391494E-5	DEFECT
//the property attribute must have access to a property file	WITHOUT_CLASSIFICATION	0.999997849453891	WITHOUT_CLASSIFICATION	2.1505461090163887E-6	DEFECT
//Make sure property exists in property file	WITHOUT_CLASSIFICATION	0.9998355676550402	WITHOUT_CLASSIFICATION	1.6443234495980063E-4	DEFECT
//Default is empty string	WITHOUT_CLASSIFICATION	0.9999997310307106	WITHOUT_CLASSIFICATION	2.689692894126257E-7	DEFECT
// Avoid runtime problem on pre 1.4 when compiling post 1.4	WITHOUT_CLASSIFICATION	0.999605091722082	WITHOUT_CLASSIFICATION	3.9490827791796216E-4	DEFECT
// end of finally	WITHOUT_CLASSIFICATION	0.9999659057666557	WITHOUT_CLASSIFICATION	3.409423334443909E-5	DEFECT
//look for and print warnings	WITHOUT_CLASSIFICATION	0.9999994595685571	WITHOUT_CLASSIFICATION	5.40431442930652E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999996958536274	WITHOUT_CLASSIFICATION	3.0414637271301487E-7	DEFECT
////////////////////////////////////////////////////////////////////// // ATTRIBUTES	WITHOUT_CLASSIFICATION	0.9999889671210997	WITHOUT_CLASSIFICATION	1.1032878900127309E-5	DEFECT
////////////////////////////////////////////////////////////////////// // ACCESSOR METHODS	WITHOUT_CLASSIFICATION	0.9999920132032858	WITHOUT_CLASSIFICATION	7.986796714243724E-6	DEFECT
// line separators in values and tokens are "\n" // in order to compare with the file contents, replace them // as needed	WITHOUT_CLASSIFICATION	0.9999999585131005	WITHOUT_CLASSIFICATION	4.148689950665514E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999209490427	WITHOUT_CLASSIFICATION	7.905095730336347E-8	DEFECT
// Ignore Exception	WITHOUT_CLASSIFICATION	0.9999995659536455	WITHOUT_CLASSIFICATION	4.3404635441434825E-7	DEFECT
// no errors so far	WITHOUT_CLASSIFICATION	0.999999744081362	WITHOUT_CLASSIFICATION	2.5591863792028564E-7	DEFECT
// If we don't know the type of the line // and we are in emacs mode, it will be // an error, because in this mode, jikes won't // always print "error", but sometimes other // keywords like "Syntax". We should look for // all those keywords.	WITHOUT_CLASSIFICATION	0.9999799558515643	WITHOUT_CLASSIFICATION	2.0044148435678137E-5	DEFECT
// plain impossible	WITHOUT_CLASSIFICATION	0.9999997874080206	WITHOUT_CLASSIFICATION	2.1259197926049924E-7	DEFECT
// We must check if the process was not stopped // before being here	WITHOUT_CLASSIFICATION	0.9999997253004688	WITHOUT_CLASSIFICATION	2.746995311785771E-7	DEFECT
// the process is not terminated, if this is really // a timeout and not a manual stop then kill it.	WITHOUT_CLASSIFICATION	0.9999633034013675	WITHOUT_CLASSIFICATION	3.6696598632458324E-5	DEFECT
////////////////////////////////////////////////////////////////////// // CORE / MAIN BODY	WITHOUT_CLASSIFICATION	0.9999640138353652	WITHOUT_CLASSIFICATION	3.5986164634843373E-5	DEFECT
// get the recorder entry	WITHOUT_CLASSIFICATION	0.9999876527290888	WITHOUT_CLASSIFICATION	1.234727091110474E-5	DEFECT
// set the values on the recorder	WITHOUT_CLASSIFICATION	0.9999938922436618	WITHOUT_CLASSIFICATION	6.107756338226077E-6	DEFECT
////////////////////////////////////////////////////////////////////// // INNER CLASSES	WITHOUT_CLASSIFICATION	0.9999898053943282	WITHOUT_CLASSIFICATION	1.0194605671742797E-5	DEFECT
// create a recorder entry	WITHOUT_CLASSIFICATION	0.9999971588485236	WITHOUT_CLASSIFICATION	2.8411514763625074E-6	DEFECT
// Use '/' to calculate digest based on file name. // This is required in order to get the same result // on different platforms.	WITHOUT_CLASSIFICATION	0.9999972932565199	WITHOUT_CLASSIFICATION	2.706743480253703E-6	DEFECT
// Read the checksum from disk.	WITHOUT_CLASSIFICATION	0.9999990701091994	WITHOUT_CLASSIFICATION	9.298908006400891E-7	DEFECT
// A separate directory was explicitly declared	WITHOUT_CLASSIFICATION	0.9999998317981315	WITHOUT_CLASSIFICATION	1.682018684950039E-7	DEFECT
// Empty statement	WITHOUT_CLASSIFICATION	0.9999995800897618	WITHOUT_CLASSIFICATION	4.1991023824702183E-7	DEFECT
//can either be a property name string or a file	WITHOUT_CLASSIFICATION	0.9999993654303548	WITHOUT_CLASSIFICATION	6.345696451232902E-7	DEFECT
// file is on wrong format, swallow	WITHOUT_CLASSIFICATION	0.9999580801020236	WITHOUT_CLASSIFICATION	4.1919897976326574E-5	DEFECT
// try to be smart, not to be fooled by a weird directory name	WITHOUT_CLASSIFICATION	0.9999982605024715	WITHOUT_CLASSIFICATION	1.7394975284819282E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999996958536274	WITHOUT_CLASSIFICATION	3.0414637271301487E-7	DEFECT
// Close the output stream.	WITHOUT_CLASSIFICATION	0.9999999815349156	WITHOUT_CLASSIFICATION	1.8465084306129493E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999209490427	WITHOUT_CLASSIFICATION	7.905095730336347E-8	DEFECT
// File is Comparable, so sorting is trivial	WITHOUT_CLASSIFICATION	0.99999991675728	WITHOUT_CLASSIFICATION	8.324272013683627E-8	DEFECT
// Loop over the checksums and generate a total hash.	WITHOUT_CLASSIFICATION	0.9999999754462925	WITHOUT_CLASSIFICATION	2.4553707561020363E-8	DEFECT
// Add the digest for the file content	WITHOUT_CLASSIFICATION	0.9999999407258718	WITHOUT_CLASSIFICATION	5.927412820087123E-8	DEFECT
// Add the file path	WITHOUT_CLASSIFICATION	0.999999375615605	WITHOUT_CLASSIFICATION	6.243843950183372E-7	DEFECT
// two characters form the hex value.	WITHOUT_CLASSIFICATION	0.9999999045577471	WITHOUT_CLASSIFICATION	9.544225289426697E-8	DEFECT
// We just set the prefix for this fileset, and pass it up.	WITHOUT_CLASSIFICATION	0.9999955914615267	WITHOUT_CLASSIFICATION	4.40853847318221E-6	DEFECT
// Check if the service is configured correctly	WITHOUT_CLASSIFICATION	0.9999375091888001	WITHOUT_CLASSIFICATION	6.249081119982318E-5	DEFECT
// if we haven't got the manifest yet, attempt to // get it now and have manifest be the final merge	WITHOUT_CLASSIFICATION	0.9999988871015537	WITHOUT_CLASSIFICATION	1.1128984462693356E-6	DEFECT
// time to write the manifest	WITHOUT_CLASSIFICATION	0.9999999051823989	WITHOUT_CLASSIFICATION	9.48176010350725E-8	DEFECT
// encoding must be UTF8 as specified in the specs.	WITHOUT_CLASSIFICATION	0.9999999848722911	WITHOUT_CLASSIFICATION	1.5127708843316257E-8	DEFECT
// version-info blankline	WITHOUT_CLASSIFICATION	0.9999998692310677	WITHOUT_CLASSIFICATION	1.307689323223734E-7	DEFECT
// header newline	WITHOUT_CLASSIFICATION	0.9999965057315895	WITHOUT_CLASSIFICATION	3.494268410381779E-6	DEFECT
// If this is the same name specified in 'manifest', this // is the manifest to use	WITHOUT_CLASSIFICATION	0.9999997777210283	WITHOUT_CLASSIFICATION	2.222789716475499E-7	DEFECT
// we add this to our group of fileset manifests	WITHOUT_CLASSIFICATION	0.999999377721187	WITHOUT_CLASSIFICATION	6.222788131480163E-7	DEFECT
// assuming 'skip' otherwise // don't warn if skip has been requested explicitly, warn if user // didn't set the attribute	WITHOUT_CLASSIFICATION	0.9999775068638884	WITHOUT_CLASSIFICATION	2.249313611158719E-5	DEFECT
// Hide warning also as it makes no sense since // the filesetmanifest attribute itself has been // hidden	WITHOUT_CLASSIFICATION	0.9999999766689172	WITHOUT_CLASSIFICATION	2.3331082841305273E-8	DEFECT
// need to handle manifest as a special check	WITHOUT_CLASSIFICATION	0.9999999758258337	WITHOUT_CLASSIFICATION	2.4174166274422735E-8	DEFECT
// if it doesn't exist, it will get created anyway, don't // bother with any up-to-date checks.	WITHOUT_CLASSIFICATION	0.9999997816746173	WITHOUT_CLASSIFICATION	2.183253827097058E-7	DEFECT
// no existing archive	WITHOUT_CLASSIFICATION	0.9999999904211258	WITHOUT_CLASSIFICATION	9.578874316852608E-9	DEFECT
// Ignore close exception	WITHOUT_CLASSIFICATION	0.9999998943275621	WITHOUT_CLASSIFICATION	1.05672437889236E-7	DEFECT
// we want to save this info if we are going to make another pass	WITHOUT_CLASSIFICATION	0.9999606665477314	WITHOUT_CLASSIFICATION	3.933345226848332E-5	DEFECT
// couldn't find it - must be on path	WITHOUT_CLASSIFICATION	0.9999975665336627	WITHOUT_CLASSIFICATION	2.4334663372923977E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999996958536274	WITHOUT_CLASSIFICATION	3.0414637271301487E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999996958536274	WITHOUT_CLASSIFICATION	3.0414637271301487E-7	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9999940166248454	WITHOUT_CLASSIFICATION	5.983375154568819E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999209490427	WITHOUT_CLASSIFICATION	7.905095730336347E-8	DEFECT
// looks like nothing from META-INF should be added // and the check is not case insensitive. // see sun.misc.JarIndex	WITHOUT_CLASSIFICATION	0.9999866904216012	WITHOUT_CLASSIFICATION	1.3309578398860151E-5	DEFECT
// name newline	WITHOUT_CLASSIFICATION	0.9999990431280934	WITHOUT_CLASSIFICATION	9.56871906603626E-7	DEFECT
// longest match comes first	WITHOUT_CLASSIFICATION	0.9999989820535325	WITHOUT_CLASSIFICATION	1.017946467398805E-6	DEFECT
// META-INF would be skipped anyway, avoid index for // manifest-only jars.	WITHOUT_CLASSIFICATION	0.9964509401251038	WITHOUT_CLASSIFICATION	0.003549059874896269	DEFECT
// a file, not in the root // since the jar may be one without directory // entries, add the parent dir of this file as // well.	WITHOUT_CLASSIFICATION	0.9999925527724536	WITHOUT_CLASSIFICATION	7.447227546394015E-6	DEFECT
/*protected*/	WITHOUT_CLASSIFICATION	0.9998905273565455	WITHOUT_CLASSIFICATION	1.0947264345453791E-4	DEFECT
// if the target file is not there, then it can't be up-to-date	WITHOUT_CLASSIFICATION	0.99999986531689	WITHOUT_CLASSIFICATION	1.3468311007407546E-7	DEFECT
// if the source file isn't there, throw an exception	WITHOUT_CLASSIFICATION	0.9999982765780956	WITHOUT_CLASSIFICATION	1.723421904362905E-6	DEFECT
// by default, messages are always displayed	WITHOUT_CLASSIFICATION	0.9999998634951625	WITHOUT_CLASSIFICATION	1.365048375710182E-7	DEFECT
// need to keep the package private version for backwards compatibility	WITHOUT_CLASSIFICATION	0.9999995000894205	WITHOUT_CLASSIFICATION	4.999105794393194E-7	DEFECT
// we must keep two lists since other classes may modify the // filesets Vector (it is package private) without us noticing	WITHOUT_CLASSIFICATION	0.9999987013136302	WITHOUT_CLASSIFICATION	1.298686369838547E-6	DEFECT
// add the main fileset to the list of filesets to process.	WITHOUT_CLASSIFICATION	0.999999993738542	WITHOUT_CLASSIFICATION	6.261458007205315E-9	DEFECT
// check if tar is out of date with respect to each // fileset	WITHOUT_CLASSIFICATION	0.9999998968085819	WITHOUT_CLASSIFICATION	1.031914181033351E-7	DEFECT
// warn or GNU	WITHOUT_CLASSIFICATION	0.9999949975491876	WITHOUT_CLASSIFICATION	5.002450812376855E-6	DEFECT
// don't add "" to the archive	WITHOUT_CLASSIFICATION	0.9999941759349867	WITHOUT_CLASSIFICATION	5.824065013330193E-6	DEFECT
// '/' is appended for compatibility with the zip task.	WITHOUT_CLASSIFICATION	0.9999988867080485	WITHOUT_CLASSIFICATION	1.1132919516143154E-6	DEFECT
// we would end up adding "" to the archive	WITHOUT_CLASSIFICATION	0.999990111309751	WITHOUT_CLASSIFICATION	9.8886902490652E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999209490427	WITHOUT_CLASSIFICATION	7.905095730336347E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999209490427	WITHOUT_CLASSIFICATION	7.905095730336347E-8	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999996958536274	WITHOUT_CLASSIFICATION	3.0414637271301487E-7	DEFECT
// permissible values for compression attribute	WITHOUT_CLASSIFICATION	0.9999990851136215	WITHOUT_CLASSIFICATION	9.14886378496578E-7	DEFECT
// override permissions if set explicitly	WITHOUT_CLASSIFICATION	0.9999837728987818	WITHOUT_CLASSIFICATION	1.6227101218197126E-5	DEFECT
// only override permissions if set explicitly	WITHOUT_CLASSIFICATION	0.9999184716485303	WITHOUT_CLASSIFICATION	8.152835146962876E-5	DEFECT
// non-file resources	WITHOUT_CLASSIFICATION	0.9999998652999282	WITHOUT_CLASSIFICATION	1.3470007181577786E-7	DEFECT
// non-file resources	WITHOUT_CLASSIFICATION	0.9999998652999282	WITHOUT_CLASSIFICATION	1.3470007181577786E-7	DEFECT
//extend Comparison; retain for BC only	WITHOUT_CLASSIFICATION	0.9999846611714309	WITHOUT_CLASSIFICATION	1.5338828569067406E-5	DEFECT
//when writing to the log, we'll see what's happening:	WITHOUT_CLASSIFICATION	0.9999994723121075	WITHOUT_CLASSIFICATION	5.276878925280835E-7	DEFECT
/*         * The initial version used DateFormat.SHORT for the         * time format, which ignores seconds.  If we want         * seconds as well, we need DateFormat.MEDIUM, which         * in turn would break all old build files.         *         * First try to parse with DateFormat.SHORT and if         * that fails with MEDIUM - throw an exception if both         * fail.         */	WITHOUT_CLASSIFICATION	0.9999999866790128	WITHOUT_CLASSIFICATION	1.3320987128153145E-8	DEFECT
//only set if successful to this point:	WITHOUT_CLASSIFICATION	0.9999917333915691	WITHOUT_CLASSIFICATION	8.266608430855072E-6	DEFECT
// deal with the resource collections	WITHOUT_CLASSIFICATION	0.9999941209802261	WITHOUT_CLASSIFICATION	5.879019773945537E-6	DEFECT
// deal with filesets in a special way since the task // originally also used the directories and Union won't return // them.	WITHOUT_CLASSIFICATION	0.9999996494418926	WITHOUT_CLASSIFICATION	3.505581074006915E-7	DEFECT
// use this to create file and deal with non-writable files	WITHOUT_CLASSIFICATION	0.9999999768118124	WITHOUT_CLASSIFICATION	2.3188187567809422E-8	DEFECT
// When we leave this block we can be sure all data is really // stored in main memory before the new threads start, the new // threads will for sure load the data from main memory. // // This probably is slightly paranoid.	WITHOUT_CLASSIFICATION	0.9984941779574564	WITHOUT_CLASSIFICATION	0.0015058220425434793	DEFECT
// start any daemon threads	WITHOUT_CLASSIFICATION	0.9999594362666004	WITHOUT_CLASSIFICATION	4.0563733399636056E-5	DEFECT
// now run main threads in limited numbers... // start initial batch of threads	WITHOUT_CLASSIFICATION	0.9999557200126041	WITHOUT_CLASSIFICATION	4.427998739577258E-5	DEFECT
// start the timeout thread	WITHOUT_CLASSIFICATION	0.9999997669711074	WITHOUT_CLASSIFICATION	2.330288926965722E-7	DEFECT
// now find available running slots for the remaining threads	WITHOUT_CLASSIFICATION	0.9999994115467922	WITHOUT_CLASSIFICATION	5.884532078298885E-7	DEFECT
// continue on outer while loop to get another // available slot	WITHOUT_CLASSIFICATION	0.9999997246249924	WITHOUT_CLASSIFICATION	2.753750075631288E-7	DEFECT
// if we got here all slots in use, so sleep until // something happens	WITHOUT_CLASSIFICATION	0.9999973328098186	WITHOUT_CLASSIFICATION	2.6671901812600873E-6	DEFECT
// doesn't java know interruptions are rude? // just pretend it didn't happen and go about out business. // sheesh!	WITHOUT_CLASSIFICATION	0.9999997452287708	WITHOUT_CLASSIFICATION	2.547712292349437E-7	DEFECT
// are all threads finished	WITHOUT_CLASSIFICATION	0.9999983490373207	WITHOUT_CLASSIFICATION	1.6509626793372853E-6	DEFECT
// who would interrupt me at a time like this?	WITHOUT_CLASSIFICATION	0.9999975730113565	WITHOUT_CLASSIFICATION	2.426988643442318E-6	DEFECT
// now did any of the threads throw an exception	WITHOUT_CLASSIFICATION	0.9999206159239232	WITHOUT_CLASSIFICATION	7.938407607675159E-5	DEFECT
// return a bogus number	WITHOUT_CLASSIFICATION	0.9999999541219968	WITHOUT_CLASSIFICATION	4.587800319972148E-8	DEFECT
// Should be safe to parse	WITHOUT_CLASSIFICATION	0.9999788374170778	WITHOUT_CLASSIFICATION	2.1162582922123777E-5	DEFECT
// Check name is "antlib"	WITHOUT_CLASSIFICATION	0.9999999489916882	WITHOUT_CLASSIFICATION	5.100831179728121E-8	DEFECT
//include locally for screening purposes	WITHOUT_CLASSIFICATION	0.999998865536815	WITHOUT_CLASSIFICATION	1.1344631848701938E-6	DEFECT
// try to find the executable	WITHOUT_CLASSIFICATION	0.9999993348194359	WITHOUT_CLASSIFICATION	6.651805640534601E-7	DEFECT
// now try to resolve against the dir if given	WITHOUT_CLASSIFICATION	0.9999998837202079	WITHOUT_CLASSIFICATION	1.1627979205819951E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999996958536274	WITHOUT_CLASSIFICATION	3.0414637271301487E-7	DEFECT
// throw further	WITHOUT_CLASSIFICATION	0.9999797206658757	WITHOUT_CLASSIFICATION	2.027933412430118E-5	DEFECT
// only the first build exception is reported	WITHOUT_CLASSIFICATION	0.9999876495540181	WITHOUT_CLASSIFICATION	1.2350445981880685E-5	DEFECT
//include locally for screening purposes	WITHOUT_CLASSIFICATION	0.999998865536815	WITHOUT_CLASSIFICATION	1.1344631848701938E-6	DEFECT
// mustSearchPath is false, or no PATH or not found - keep our // fingers crossed.	WITHOUT_CLASSIFICATION	0.9999925903033205	WITHOUT_CLASSIFICATION	7.409696679543887E-6	DEFECT
// Quick fail if this is not a valid OS for the command	WITHOUT_CLASSIFICATION	0.9997764057153652	WITHOUT_CLASSIFICATION	2.2359428463473993E-4	DEFECT
// possibly altered in prepareExec	WITHOUT_CLASSIFICATION	0.9999913352333479	WITHOUT_CLASSIFICATION	8.664766652122402E-6	DEFECT
//hand osfamily off to Os class, if set	WITHOUT_CLASSIFICATION	0.9999588978855879	WITHOUT_CLASSIFICATION	4.110211441223479E-5	DEFECT
// this command will be executed only on the specified OS	WITHOUT_CLASSIFICATION	0.9902970546878049	WITHOUT_CLASSIFICATION	0.009702945312195035	DEFECT
// default directory to the project's base directory	WITHOUT_CLASSIFICATION	0.999999338005952	WITHOUT_CLASSIFICATION	6.619940479631892E-7	DEFECT
// assume the worst	WITHOUT_CLASSIFICATION	0.9999998119920137	WITHOUT_CLASSIFICATION	1.8800798637794578E-7	DEFECT
//test for and handle a forced process death	WITHOUT_CLASSIFICATION	0.9999999951129088	WITHOUT_CLASSIFICATION	4.887091149846548E-9	DEFECT
// show the command	WITHOUT_CLASSIFICATION	0.9999897486419586	WITHOUT_CLASSIFICATION	1.0251358041433826E-5	DEFECT
// close the output file if required	WITHOUT_CLASSIFICATION	0.9999992258410676	WITHOUT_CLASSIFICATION	7.741589324331275E-7	DEFECT
// Same as regular <copy> task... see at end-of-file!	WITHOUT_CLASSIFICATION	0.9999468471817705	WITHOUT_CLASSIFICATION	5.315281822954812E-5	DEFECT
// Override Task#init	WITHOUT_CLASSIFICATION	0.9999999885943976	WITHOUT_CLASSIFICATION	1.1405602366356153E-8	DEFECT
// Instantiate it	WITHOUT_CLASSIFICATION	0.9999939466154263	WITHOUT_CLASSIFICATION	6.053384573611745E-6	DEFECT
// Default config of <mycopy> for our purposes.	WITHOUT_CLASSIFICATION	0.9999999825629546	WITHOUT_CLASSIFICATION	1.743704544546108E-8	DEFECT
// Override Task#execute	WITHOUT_CLASSIFICATION	0.9999999746064246	WITHOUT_CLASSIFICATION	2.5393575394887272E-8	DEFECT
// The destination of the files to copy	WITHOUT_CLASSIFICATION	0.9999984184975165	WITHOUT_CLASSIFICATION	1.5815024835873905E-6	DEFECT
// The complete list of files to copy	WITHOUT_CLASSIFICATION	0.9999898273310509	WITHOUT_CLASSIFICATION	1.017266894907172E-5	DEFECT
// Copy all the necessary out-of-date files	WITHOUT_CLASSIFICATION	0.999999654891805	WITHOUT_CLASSIFICATION	3.451081949782921E-7	DEFECT
// Do we need to perform further processing?	WITHOUT_CLASSIFICATION	0.9999999708635596	WITHOUT_CLASSIFICATION	2.9136440394106512E-8	DEFECT
// nope ;-)	WITHOUT_CLASSIFICATION	0.9999978205166367	WITHOUT_CLASSIFICATION	2.1794833632178327E-6	DEFECT
// Get rid of all files not listed in the source filesets.	WITHOUT_CLASSIFICATION	0.999999757650194	WITHOUT_CLASSIFICATION	2.4234980609197193E-7	DEFECT
// Get rid of empty directories on the destination side	WITHOUT_CLASSIFICATION	0.9999999316171811	WITHOUT_CLASSIFICATION	6.838281891525486E-8	DEFECT
// want to keep toDir itself	WITHOUT_CLASSIFICATION	0.9999998926842353	WITHOUT_CLASSIFICATION	1.0731576478043666E-7	DEFECT
// ds returns the directories in lexicographic order. // iterating through the array backwards means we are deleting // leaves before their parent nodes - thus making sure (well, // more likely) that the directories are empty when we try to // delete them.	WITHOUT_CLASSIFICATION	0.9999998887844347	WITHOUT_CLASSIFICATION	1.1121556526865346E-7	DEFECT
// Test here again to avoid method call for non-directories!	WITHOUT_CLASSIFICATION	0.9999992380214652	WITHOUT_CLASSIFICATION	7.619785348997064E-7	DEFECT
// must match the default value of Ant#inheritAll	WITHOUT_CLASSIFICATION	0.9999999751548958	WITHOUT_CLASSIFICATION	2.484510424139973E-8	DEFECT
// must match the default value of Ant#inheritRefs	WITHOUT_CLASSIFICATION	0.9999999882025525	WITHOUT_CLASSIFICATION	1.1797447495511425E-8	DEFECT
/*<TargetElement>*/	WITHOUT_CLASSIFICATION	0.9999979320362741	WITHOUT_CLASSIFICATION	2.0679637259609216E-6	DEFECT
// check if one of the builds failed in keep going mode	WITHOUT_CLASSIFICATION	0.9999995643666679	WITHOUT_CLASSIFICATION	4.3563333208804924E-7	DEFECT
//     REVISIT: Defaults to the target name that contains this task if not specified.	WITHOUT_CLASSIFICATION	0.9999999666196405	WITHOUT_CLASSIFICATION	3.338035950479425E-8	DEFECT
// END class SubAnt	WITHOUT_CLASSIFICATION	0.9999941379327318	WITHOUT_CLASSIFICATION	5.862067268207186E-6	DEFECT
// Child elements.	WITHOUT_CLASSIFICATION	0.9999998613494525	WITHOUT_CLASSIFICATION	1.3865054755148604E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999994848348538	WITHOUT_CLASSIFICATION	5.151651463210354E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999996958536274	WITHOUT_CLASSIFICATION	3.0414637271301487E-7	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9999940166248454	WITHOUT_CLASSIFICATION	5.983375154568819E-6	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9999940166248454	WITHOUT_CLASSIFICATION	5.983375154568819E-6	DEFECT
// Empty	WITHOUT_CLASSIFICATION	0.9999897035256006	WITHOUT_CLASSIFICATION	1.0296474399495748E-5	DEFECT
// this command will be executed only on the specified OS	WITHOUT_CLASSIFICATION	0.9902970546878049	WITHOUT_CLASSIFICATION	0.009702945312195035	DEFECT
// default directory to the project's base directory	WITHOUT_CLASSIFICATION	0.999999338005952	WITHOUT_CLASSIFICATION	6.619940479631892E-7	DEFECT
// assume the worst	WITHOUT_CLASSIFICATION	0.9999998119920137	WITHOUT_CLASSIFICATION	1.8800798637794578E-7	DEFECT
// show the command	WITHOUT_CLASSIFICATION	0.9999897486419586	WITHOUT_CLASSIFICATION	1.0251358041433826E-5	DEFECT
// close the output file if required	WITHOUT_CLASSIFICATION	0.9999992258410676	WITHOUT_CLASSIFICATION	7.741589324331275E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999209490427	WITHOUT_CLASSIFICATION	7.905095730336347E-8	DEFECT
// This directory may have become empty... // We need to re-query its children list!	WITHOUT_CLASSIFICATION	0.9337163603528784	WITHOUT_CLASSIFICATION	0.06628363964712163	DEFECT
// // Various copy attributes/subelements of <copy> passed thru to <mycopy> //	WITHOUT_CLASSIFICATION	0.9999999372959307	WITHOUT_CLASSIFICATION	6.270406927458037E-8	DEFECT
// List of files that must be copied, irrelevant from the // fact that they are newer or not than the destination.	WITHOUT_CLASSIFICATION	0.9999999968070472	WITHOUT_CLASSIFICATION	3.19295281399873E-9	DEFECT
// cf. NB #47191	WITHOUT_CLASSIFICATION	0.9999881888761102	WITHOUT_CLASSIFICATION	1.1811123889870021E-5	DEFECT
// Should work whether or not redirector.inputStream == null:	WITHOUT_CLASSIFICATION	0.9983383300259258	WITHOUT_CLASSIFICATION	0.0016616699740742316	DEFECT
// #24918: send standard input to the process by default.	WITHOUT_CLASSIFICATION	0.9999912435032083	WITHOUT_CLASSIFICATION	8.756496791698037E-6	DEFECT
// test if os match	WITHOUT_CLASSIFICATION	0.9999997397619439	WITHOUT_CLASSIFICATION	2.602380561768798E-7	DEFECT
// exec command on system runtime	WITHOUT_CLASSIFICATION	0.9998643801871108	WITHOUT_CLASSIFICATION	1.3561981288922072E-4	DEFECT
// copy input and error to the output stream	WITHOUT_CLASSIFICATION	0.9999945929811584	WITHOUT_CLASSIFICATION	5.4070188416334774E-6	DEFECT
// starts pumping away the generated output/error	WITHOUT_CLASSIFICATION	0.9999989414411377	WITHOUT_CLASSIFICATION	1.0585588623778165E-6	DEFECT
// Wait for everything to finish	WITHOUT_CLASSIFICATION	0.9999982699673512	WITHOUT_CLASSIFICATION	1.7300326487345245E-6	DEFECT
// check its exit value	WITHOUT_CLASSIFICATION	0.9999998950912126	WITHOUT_CLASSIFICATION	1.0490878738205033E-7	DEFECT
// Inner class for continually pumping the input stream during // Process's runtime.	WITHOUT_CLASSIFICATION	0.9999864610720604	WITHOUT_CLASSIFICATION	1.3538927939670024E-5	DEFECT
// The size of buffers to be used	WITHOUT_CLASSIFICATION	0.9999758366101308	WITHOUT_CLASSIFICATION	2.416338986915421E-5	DEFECT
// Attributes.	WITHOUT_CLASSIFICATION	0.9999997408571458	WITHOUT_CLASSIFICATION	2.591428541966425E-7	DEFECT
// Attribute setters.	WITHOUT_CLASSIFICATION	0.9999997778751227	WITHOUT_CLASSIFICATION	2.2212487739665932E-7	DEFECT
// Nested element creators.	WITHOUT_CLASSIFICATION	0.999999998366256	WITHOUT_CLASSIFICATION	1.6337440303597451E-9	DEFECT
// treat empty nested text as no text	WITHOUT_CLASSIFICATION	0.9999998128110528	WITHOUT_CLASSIFICATION	1.871889472052493E-7	DEFECT
// if binary check if incompatible attributes are used	WITHOUT_CLASSIFICATION	0.9999999979758698	WITHOUT_CLASSIFICATION	2.0241301119049117E-9	DEFECT
// Sanity check our inputs.	WITHOUT_CLASSIFICATION	0.9999999919444099	WITHOUT_CLASSIFICATION	8.055590126149354E-9	DEFECT
// Nothing to concatenate!	WITHOUT_CLASSIFICATION	0.9999998735189174	WITHOUT_CLASSIFICATION	1.2648108270391404E-7	DEFECT
// no need to do anything	WITHOUT_CLASSIFICATION	0.9999989790902531	WITHOUT_CLASSIFICATION	1.0209097469034583E-6	DEFECT
// Log using WARN so it displays in 'quiet' mode.	WITHOUT_CLASSIFICATION	0.9999955182210449	WITHOUT_CLASSIFICATION	4.481778955028619E-6	DEFECT
// ensure that the parent dir of dest file exists	WITHOUT_CLASSIFICATION	0.999998542916703	WITHOUT_CLASSIFICATION	1.4570832969209067E-6	DEFECT
// non-existing files are not allowed	WITHOUT_CLASSIFICATION	0.9999968321049887	WITHOUT_CLASSIFICATION	3.167895011264754E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999996958536274	WITHOUT_CLASSIFICATION	3.0414637271301487E-7	DEFECT
// Create a ZipFileSet for this file, and pass it up.	WITHOUT_CLASSIFICATION	0.9999972994434723	WITHOUT_CLASSIFICATION	2.700556527780175E-6	DEFECT
// We just set the prefix for this fileset, and pass it up.	WITHOUT_CLASSIFICATION	0.9999955914615267	WITHOUT_CLASSIFICATION	4.40853847318221E-6	DEFECT
// by default, messages are always displayed	WITHOUT_CLASSIFICATION	0.9999998634951625	WITHOUT_CLASSIFICATION	1.365048375710182E-7	DEFECT
// close the output file if required	WITHOUT_CLASSIFICATION	0.9999992258410676	WITHOUT_CLASSIFICATION	7.741589324331275E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999209490427	WITHOUT_CLASSIFICATION	7.905095730336347E-8	DEFECT
// Initialize to the size of the first text fragment, with // the hopes that it's the only one.	WITHOUT_CLASSIFICATION	0.9999995490920909	WITHOUT_CLASSIFICATION	4.5090790911119604E-7	DEFECT
// Append the fragment -- we defer property replacement until // later just in case we get a partial property in a fragment.	WITHOUT_CLASSIFICATION	0.9999925837569793	WITHOUT_CLASSIFICATION	7.416243020650409E-6	DEFECT
// If using resources, disallow inline text. This is similar to // using GNU 'cat' with file arguments -- stdin is simply // ignored.	WITHOUT_CLASSIFICATION	0.9999999949399784	WITHOUT_CLASSIFICATION	5.06002169970237E-9	DEFECT
/*package*/	WITHOUT_CLASSIFICATION	0.9999796897449954	WITHOUT_CLASSIFICATION	2.0310255004561325E-5	DEFECT
/*package*/	WITHOUT_CLASSIFICATION	0.9999796897449954	WITHOUT_CLASSIFICATION	2.0310255004561325E-5	DEFECT
// If the file being added is WEB-INF/web.xml, we warn if it's // not the one specified in the "webxml" attribute - or if // it's being added twice, meaning the same file is specified // by the "webxml" attribute and in a <fileset> element.	WITHOUT_CLASSIFICATION	0.999999966157609	WITHOUT_CLASSIFICATION	3.384239109340124E-8	DEFECT
//by default, we add the file.	WITHOUT_CLASSIFICATION	0.999999879557273	WITHOUT_CLASSIFICATION	1.204427269976618E-7	DEFECT
//a web.xml file was found. See if it is a duplicate or not	WITHOUT_CLASSIFICATION	0.9999997883377708	WITHOUT_CLASSIFICATION	2.1166222928113216E-7	DEFECT
//a second web.xml file, so skip it	WITHOUT_CLASSIFICATION	0.9999983765431417	WITHOUT_CLASSIFICATION	1.6234568582902646E-6	DEFECT
//check to see if we warn or not	WITHOUT_CLASSIFICATION	0.999999253469452	WITHOUT_CLASSIFICATION	7.465305480392167E-7	DEFECT
//no added file, yet	WITHOUT_CLASSIFICATION	0.9999926065738388	WITHOUT_CLASSIFICATION	7.39342616119528E-6	DEFECT
//there is no web.xml file, so add it	WITHOUT_CLASSIFICATION	0.9999998055346878	WITHOUT_CLASSIFICATION	1.9446531215424497E-7	DEFECT
//and remember that we did	WITHOUT_CLASSIFICATION	0.9999939066417579	WITHOUT_CLASSIFICATION	6.0933582421029745E-6	DEFECT
//validation	WITHOUT_CLASSIFICATION	0.9999642321826583	WITHOUT_CLASSIFICATION	3.5767817341806254E-5	DEFECT
//discard most of really big resources	WITHOUT_CLASSIFICATION	0.9999993811865089	WITHOUT_CLASSIFICATION	6.188134911508592E-7	DEFECT
//open up the resource	WITHOUT_CLASSIFICATION	0.9999988013864977	WITHOUT_CLASSIFICATION	1.1986135023327418E-6	DEFECT
// impossible since *our* processLine doesn't throw an IOException	WITHOUT_CLASSIFICATION	0.9999988190932921	WITHOUT_CLASSIFICATION	1.180906707805744E-6	DEFECT
// There have been reports that 300 files could be compiled // so 250 is a conservative approach	WITHOUT_CLASSIFICATION	0.9999327441857342	WITHOUT_CLASSIFICATION	6.725581426577492E-5	DEFECT
// We assume, that everything jikes writes goes to // standard output, not to standard error. The option // -Xstdout that is given to Jikes in Javac.doJikesCompile() // should guarantee this. At least I hope so. :)	WITHOUT_CLASSIFICATION	0.9974837462924833	WITHOUT_CLASSIFICATION	0.0025162537075167175	DEFECT
//if we have a RedirectorElement, return a decoy	WITHOUT_CLASSIFICATION	0.9999995284085753	WITHOUT_CLASSIFICATION	4.715914247403301E-7	DEFECT
// 0 --> srcIndex	WITHOUT_CLASSIFICATION	0.9999931279695196	WITHOUT_CLASSIFICATION	6.872030480456948E-6	DEFECT
// srcIndex --> targetIndex	WITHOUT_CLASSIFICATION	0.9999994303261307	WITHOUT_CLASSIFICATION	5.696738692571937E-7	DEFECT
// targets are already absolute file names	WITHOUT_CLASSIFICATION	0.9999999908798635	WITHOUT_CLASSIFICATION	9.120136508711258E-9	DEFECT
// targetIndex --> end	WITHOUT_CLASSIFICATION	0.9999972824194201	WITHOUT_CLASSIFICATION	2.717580579894653E-6	DEFECT
// 0 --> targetIndex	WITHOUT_CLASSIFICATION	0.9999958311156404	WITHOUT_CLASSIFICATION	4.16888435960162E-6	DEFECT
// 0 --> srcIndex	WITHOUT_CLASSIFICATION	0.9999931279695196	WITHOUT_CLASSIFICATION	6.872030480456948E-6	DEFECT
// contains AbstractFileSet // (both DirSet and FileSet)	WITHOUT_CLASSIFICATION	0.999999522768248	WITHOUT_CLASSIFICATION	4.772317520197452E-7	DEFECT
// need to reset the stream handler to restart // reading of pipes; // go ahead and do it always w/ nested redirectors	WITHOUT_CLASSIFICATION	0.9999999366212726	WITHOUT_CLASSIFICATION	6.337872731732899E-8	DEFECT
// need to reset the stream handler to restart // reading of pipes; // go ahead and do it always w/ nested redirectors	WITHOUT_CLASSIFICATION	0.9999999366212726	WITHOUT_CLASSIFICATION	6.337872731732899E-8	DEFECT
// targets are already absolute file names	WITHOUT_CLASSIFICATION	0.9999999908798635	WITHOUT_CLASSIFICATION	9.120136508711258E-9	DEFECT
// targetIndex --> srcIndex	WITHOUT_CLASSIFICATION	0.9999989658293015	WITHOUT_CLASSIFICATION	1.0341706985388396E-6	DEFECT
// srcIndex --> end	WITHOUT_CLASSIFICATION	0.9999961522444369	WITHOUT_CLASSIFICATION	3.847755563040539E-6	DEFECT
// srcIndex --> end	WITHOUT_CLASSIFICATION	0.9999961522444369	WITHOUT_CLASSIFICATION	3.847755563040539E-6	DEFECT
// no targetFilePos	WITHOUT_CLASSIFICATION	0.9999999677920585	WITHOUT_CLASSIFICATION	3.220794149320681E-8	DEFECT
// fill in source file names	WITHOUT_CLASSIFICATION	0.9999999365517018	WITHOUT_CLASSIFICATION	6.344829812243612E-8	DEFECT
/* this is skipEmpty == false */	WITHOUT_CLASSIFICATION	0.9999074140991093	WITHOUT_CLASSIFICATION	9.25859008907177E-5	DEFECT
//if there is a new priority, and it is different, change it	WITHOUT_CLASSIFICATION	0.9999978782495851	WITHOUT_CLASSIFICATION	2.1217504148457273E-6	DEFECT
//catch permissions denial and keep going	WITHOUT_CLASSIFICATION	0.9999997877016364	WITHOUT_CLASSIFICATION	2.1229836364689098E-7	DEFECT
//-- XSLTLiaison	WITHOUT_CLASSIFICATION	0.9999952014217036	WITHOUT_CLASSIFICATION	4.798578296352311E-6	DEFECT
// Write the properties file back out	WITHOUT_CLASSIFICATION	0.9999934059216541	WITHOUT_CLASSIFICATION	6.594078345894941E-6	DEFECT
//Finally set the property	WITHOUT_CLASSIFICATION	0.9999812168859825	WITHOUT_CLASSIFICATION	1.8783114017575308E-5	DEFECT
// Try parsing the line into an integer.	WITHOUT_CLASSIFICATION	0.9999960937503072	WITHOUT_CLASSIFICATION	3.906249692819725E-6	DEFECT
//-- XSLTProcess	WITHOUT_CLASSIFICATION	0.9999952372219418	WITHOUT_CLASSIFICATION	4.762778058130775E-6	DEFECT
// check if liaison wants to log errors using us as logger	WITHOUT_CLASSIFICATION	0.9999999975093918	WITHOUT_CLASSIFICATION	2.4906081758805166E-9	DEFECT
// If we enter here, it means that the stylesheet is supplied // via style attribute	WITHOUT_CLASSIFICATION	0.9999595428141295	WITHOUT_CLASSIFICATION	4.045718587044916E-5	DEFECT
/*                     * shouldn't throw out deprecation warnings before we know,                     * the wrong version has been used.                     */	WITHOUT_CLASSIFICATION	0.9998287899424932	WITHOUT_CLASSIFICATION	1.7121005750675617E-4	DEFECT
// if we have an in file and out then process them	WITHOUT_CLASSIFICATION	0.9999999866182331	WITHOUT_CLASSIFICATION	1.3381766781429311E-8	DEFECT
//-- make sure destination directory exists...	WITHOUT_CLASSIFICATION	0.999883834163751	WITHOUT_CLASSIFICATION	1.1616583624902936E-4	DEFECT
// Process all the files marked for styling	WITHOUT_CLASSIFICATION	0.999999841203292	WITHOUT_CLASSIFICATION	1.5879670803143092E-7	DEFECT
// Process all the directories marked for styling	WITHOUT_CLASSIFICATION	0.9999999023536625	WITHOUT_CLASSIFICATION	9.764633745641943E-8	DEFECT
// only resource collections, there better be some	WITHOUT_CLASSIFICATION	0.9999965197419001	WITHOUT_CLASSIFICATION	3.4802580997905105E-6	DEFECT
//anything else is a classname	WITHOUT_CLASSIFICATION	0.9999911488902412	WITHOUT_CLASSIFICATION	8.85110975875848E-6	DEFECT
//-- processXML	WITHOUT_CLASSIFICATION	0.9999906835408315	WITHOUT_CLASSIFICATION	9.316459168515264E-6	DEFECT
// Param	WITHOUT_CLASSIFICATION	0.9999994454042339	WITHOUT_CLASSIFICATION	5.54595766020314E-7	DEFECT
// New env var...append the previous one if we have it.	WITHOUT_CLASSIFICATION	0.9999996632253119	WITHOUT_CLASSIFICATION	3.3677468824337033E-7	DEFECT
// Mac	WITHOUT_CLASSIFICATION	0.9999975390899464	WITHOUT_CLASSIFICATION	2.4609100537132877E-6	DEFECT
//validation	WITHOUT_CLASSIFICATION	0.9999642321826583	WITHOUT_CLASSIFICATION	3.5767817341806254E-5	DEFECT
// If failed to process document, must delete target document, // or it will not attempt to process it the second time	WITHOUT_CLASSIFICATION	0.9999978257540459	WITHOUT_CLASSIFICATION	2.1742459540671688E-6	DEFECT
// if processor wasn't specified, see if TraX is available.  If not, // default it to xalan, depending on which is in the classpath	WITHOUT_CLASSIFICATION	0.999999969760136	WITHOUT_CLASSIFICATION	3.023986395825675E-8	DEFECT
// We call liason.configure() and then liaison.setStylesheet() // so that the internal variables of liaison can be set up	WITHOUT_CLASSIFICATION	0.9999998310399861	WITHOUT_CLASSIFICATION	1.6896001377856706E-7	DEFECT
// If we are here we can set the stylesheet as a // resource	WITHOUT_CLASSIFICATION	0.9999973257155608	WITHOUT_CLASSIFICATION	2.6742844392195246E-6	DEFECT
// If we are here we cannot set the stylesheet as // a resource, but we can set it as a file. So, // we make an attempt to get it as a file	WITHOUT_CLASSIFICATION	0.9998494016356337	WITHOUT_CLASSIFICATION	1.5059836436628196E-4	DEFECT
// Give always a slash as file separator, so the stylesheet could be sure about that // Use '.' so a dir+"/"+name would not result in an absolute path	WITHOUT_CLASSIFICATION	0.9999998994734273	WITHOUT_CLASSIFICATION	1.0052657279089295E-7	DEFECT
// only 'name' and 'value' exist.	WITHOUT_CLASSIFICATION	0.9999942135540718	WITHOUT_CLASSIFICATION	5.786445928175402E-6	DEFECT
// a value must be of a given type // say boolean|integer|string that are mostly used.	WITHOUT_CLASSIFICATION	0.9999999737482104	WITHOUT_CLASSIFICATION	2.625178965504101E-8	DEFECT
// -- class Attribute	WITHOUT_CLASSIFICATION	0.9999989702047959	WITHOUT_CLASSIFICATION	1.0297952041135925E-6	DEFECT
// -- class Factory	WITHOUT_CLASSIFICATION	0.9999865985344033	WITHOUT_CLASSIFICATION	1.3401465596565545E-5	DEFECT
// error message strings	WITHOUT_CLASSIFICATION	0.9999983194980688	WITHOUT_CLASSIFICATION	1.6805019311654731E-6	DEFECT
//at this point there is one trailing space to remove, if the list is not empty.	WITHOUT_CLASSIFICATION	0.9999963528083716	WITHOUT_CLASSIFICATION	3.647191628453298E-6	DEFECT
//now exit here if the property is already set	WITHOUT_CLASSIFICATION	0.9999893507105045	WITHOUT_CLASSIFICATION	1.0649289495389196E-5	DEFECT
//and add any files if also defined	WITHOUT_CLASSIFICATION	0.9999780313447943	WITHOUT_CLASSIFICATION	2.196865520556124E-5	DEFECT
//add path URLs	WITHOUT_CLASSIFICATION	0.9999987707817524	WITHOUT_CLASSIFICATION	1.2292182476524591E-6	DEFECT
//create the URL //ant equivalent of  fileToConvert.toURI().toURL().toExternalForm();	WITHOUT_CLASSIFICATION	0.9999999872741959	WITHOUT_CLASSIFICATION	1.2725804159705694E-8	DEFECT
// if we run into a timeout, the run-away thread shall not // make the VM run forever - if no timeout occurs, Ant's // main thread will still be there to let the new thread // finish	WITHOUT_CLASSIFICATION	0.9999996887077891	WITHOUT_CLASSIFICATION	3.112922109712378E-7	DEFECT
//Use the VM launcher instead of shell launcher on VMS	WITHOUT_CLASSIFICATION	0.9999882362460735	WITHOUT_CLASSIFICATION	1.1763753926463334E-5	DEFECT
/*     * Builds a command launcher for the OS and JVM we are running under.     */	WITHOUT_CLASSIFICATION	0.9999800271797722	WITHOUT_CLASSIFICATION	1.9972820227854852E-5	DEFECT
// Try using a JDK 1.3 launcher	WITHOUT_CLASSIFICATION	0.9999963852157695	WITHOUT_CLASSIFICATION	3.6147842305371598E-6	DEFECT
// Ignore and keep trying	WITHOUT_CLASSIFICATION	0.9999997634528036	WITHOUT_CLASSIFICATION	2.3654719629891383E-7	DEFECT
// OS/2	WITHOUT_CLASSIFICATION	0.9999900288312183	WITHOUT_CLASSIFICATION	9.971168781597676E-6	DEFECT
// Windows XP/2000/NT	WITHOUT_CLASSIFICATION	0.9995279038166716	WITHOUT_CLASSIFICATION	4.7209618332835757E-4	DEFECT
// Windows 98/95 - need to use an auxiliary script	WITHOUT_CLASSIFICATION	0.9997251574091289	WITHOUT_CLASSIFICATION	2.748425908709791E-4	DEFECT
// OpenVMS	WITHOUT_CLASSIFICATION	0.9999962413167055	WITHOUT_CLASSIFICATION	3.7586832945363547E-6	DEFECT
// Generic	WITHOUT_CLASSIFICATION	0.99999777826347	WITHOUT_CLASSIFICATION	2.2217365299935782E-6	DEFECT
// Make sure we do not recurse forever	WITHOUT_CLASSIFICATION	0.999999882328456	WITHOUT_CLASSIFICATION	1.1767154391226091E-7	DEFECT
// Just try to use what we got	WITHOUT_CLASSIFICATION	0.9999998190068753	WITHOUT_CLASSIFICATION	1.8099312471860402E-7	DEFECT
// Since we "look ahead" before adding, there's one last env var.	WITHOUT_CLASSIFICATION	0.9999994172743345	WITHOUT_CLASSIFICATION	5.82725665573056E-7	DEFECT
// Just try to see how much we got	WITHOUT_CLASSIFICATION	0.9999994296016591	WITHOUT_CLASSIFICATION	5.703983409248129E-7	DEFECT
// OS/2 - use same mechanism as Windows 2000	WITHOUT_CLASSIFICATION	0.9999873697043491	WITHOUT_CLASSIFICATION	1.2630295650912155E-5	DEFECT
// Determine if we're running under XP/2000/NT or 98/95	WITHOUT_CLASSIFICATION	0.9999985288580142	WITHOUT_CLASSIFICATION	1.4711419857288176E-6	DEFECT
// Windows 98/95	WITHOUT_CLASSIFICATION	0.999659407121441	WITHOUT_CLASSIFICATION	3.4059287855902265E-4	DEFECT
// Windows XP/2000/NT/2003	WITHOUT_CLASSIFICATION	0.9989971376835816	WITHOUT_CLASSIFICATION	0.0010028623164183815	DEFECT
// On most systems one could use: /bin/sh -c env	WITHOUT_CLASSIFICATION	0.9998111509672601	WITHOUT_CLASSIFICATION	1.8884903273996134E-4	DEFECT
// Some systems have /bin/env, others /usr/bin/env, just try	WITHOUT_CLASSIFICATION	0.9999999248649465	WITHOUT_CLASSIFICATION	7.513505346510014E-8	DEFECT
// rely on PATH	WITHOUT_CLASSIFICATION	0.9998477897239948	WITHOUT_CLASSIFICATION	1.522102760052794E-4	DEFECT
// rely on PATH	WITHOUT_CLASSIFICATION	0.9998477897239948	WITHOUT_CLASSIFICATION	1.522102760052794E-4	DEFECT
//noop default encoding used	WITHOUT_CLASSIFICATION	0.999999974414881	WITHOUT_CLASSIFICATION	2.5585119011718372E-8	DEFECT
//By default, use the shell launcher for VMS //	WITHOUT_CLASSIFICATION	0.9999978457883241	WITHOUT_CLASSIFICATION	2.1542116759317707E-6	DEFECT
// add the process to the list of those to destroy if the VM exits //	WITHOUT_CLASSIFICATION	0.9999999892434128	WITHOUT_CLASSIFICATION	1.0756587212813798E-8	DEFECT
// #31928: forcibly kill it before continuing.	WITHOUT_CLASSIFICATION	0.998210365231403	WITHOUT_CLASSIFICATION	0.0017896347685968888	DEFECT
// remove the process to the list of those to destroy if // the VM exits //	WITHOUT_CLASSIFICATION	0.9999998626073691	WITHOUT_CLASSIFICATION	1.373926309173881E-7	DEFECT
//on openvms even exit value signals failure; // for other platforms nonzero exit value signals failure	WITHOUT_CLASSIFICATION	0.999994671370643	WITHOUT_CLASSIFICATION	5.3286293569443345E-6	DEFECT
// Get key including "="	WITHOUT_CLASSIFICATION	0.9999996493372306	WITHOUT_CLASSIFICATION	3.506627693230711E-7	DEFECT
// Nb: using default locale as key is a env name	WITHOUT_CLASSIFICATION	0.9999994755270301	WITHOUT_CLASSIFICATION	5.244729698550926E-7	DEFECT
// Find the key in the current enviroment copy // and remove it.	WITHOUT_CLASSIFICATION	0.9999839125833803	WITHOUT_CLASSIFICATION	1.6087416619787084E-5	DEFECT
// Use the original casiness of the key	WITHOUT_CLASSIFICATION	0.9999982819495022	WITHOUT_CLASSIFICATION	1.718050497832441E-6	DEFECT
// Add the key to the enviromnent copy	WITHOUT_CLASSIFICATION	0.9999987361110141	WITHOUT_CLASSIFICATION	1.2638889858273863E-6	DEFECT
// parse the VMS logicals into required format ("VAR=VAL[,VAL2]")	WITHOUT_CLASSIFICATION	0.9999033649660946	WITHOUT_CLASSIFICATION	9.66350339054802E-5	DEFECT
// further equivalence name of previous logical	WITHOUT_CLASSIFICATION	0.9999999854108326	WITHOUT_CLASSIFICATION	1.4589167473541524E-8	DEFECT
// new logical?	WITHOUT_CLASSIFICATION	0.9999985298148841	WITHOUT_CLASSIFICATION	1.4701851158348632E-6	DEFECT
// already got this logical from a higher order table	WITHOUT_CLASSIFICATION	0.9999997504212063	WITHOUT_CLASSIFICATION	2.495787938060496E-7	DEFECT
/* the arguments: */	WITHOUT_CLASSIFICATION	0.9999966489812461	WITHOUT_CLASSIFICATION	3.3510187538293295E-6	DEFECT
// IllegalAccess, IllegalArgument, ClassCast	WITHOUT_CLASSIFICATION	0.9999998888718815	WITHOUT_CLASSIFICATION	1.111281184476125E-7	DEFECT
// Locate the auxiliary script	WITHOUT_CLASSIFICATION	0.9999998992123248	WITHOUT_CLASSIFICATION	1.007876752546554E-7	DEFECT
// Build the command	WITHOUT_CLASSIFICATION	0.9999241128692076	WITHOUT_CLASSIFICATION	7.588713079238356E-5	DEFECT
// add the environment as logicals to the DCL script	WITHOUT_CLASSIFICATION	0.9999964999420131	WITHOUT_CLASSIFICATION	3.500057986850137E-6	DEFECT
//empty	WITHOUT_CLASSIFICATION	0.9999573539385527	WITHOUT_CLASSIFICATION	4.2646061447253527E-5	DEFECT
//empty	WITHOUT_CLASSIFICATION	0.9999573539385527	WITHOUT_CLASSIFICATION	4.2646061447253527E-5	DEFECT
// Locate method Runtime.exec(String[] cmdarray, //                            String[] envp, File dir)	WITHOUT_CLASSIFICATION	0.9999997694280374	WITHOUT_CLASSIFICATION	2.3057196256482828E-7	DEFECT
// Use cmd.exe to change to the specified drive and // directory before running the command	WITHOUT_CLASSIFICATION	0.9999999852396134	WITHOUT_CLASSIFICATION	1.4760386563110461E-8	DEFECT
// Use cmd.exe to change to the specified directory before running // the command	WITHOUT_CLASSIFICATION	0.999999977748412	WITHOUT_CLASSIFICATION	2.2251587955749564E-8	DEFECT
// need to set the project on unknown element	WITHOUT_CLASSIFICATION	0.9999927026853128	WITHOUT_CLASSIFICATION	7.297314687249687E-6	DEFECT
//************************************************************************ //  protected and private methods //************************************************************************	WITHOUT_CLASSIFICATION	0.999966099403169	WITHOUT_CLASSIFICATION	3.3900596830896625E-5	DEFECT
//Attempt complete directory renames, if any, first.	WITHOUT_CLASSIFICATION	0.9999993069465591	WITHOUT_CLASSIFICATION	6.930534408779357E-7	DEFECT
// files to move	WITHOUT_CLASSIFICATION	0.9999984095985014	WITHOUT_CLASSIFICATION	1.590401498625638E-6	DEFECT
//Is this file still available to be moved?	WITHOUT_CLASSIFICATION	0.9999942320894323	WITHOUT_CLASSIFICATION	5.767910567686867E-6	DEFECT
// if this is the last time through the loop then // move will not occur, but that's what we want	WITHOUT_CLASSIFICATION	0.999999206067283	WITHOUT_CLASSIFICATION	7.939327169742151E-7	DEFECT
// maybe io error?	WITHOUT_CLASSIFICATION	0.9999551204385588	WITHOUT_CLASSIFICATION	4.4879561441262095E-5	DEFECT
// found a file	WITHOUT_CLASSIFICATION	0.9999996027519129	WITHOUT_CLASSIFICATION	3.9724808705100667E-7	DEFECT
// on an io error list() can return null	WITHOUT_CLASSIFICATION	0.9999997750176373	WITHOUT_CLASSIFICATION	2.2498236278295873E-7	DEFECT
// Whether *this VM* is 1.4+ (but also check executable != null).	WITHOUT_CLASSIFICATION	0.9999996729692885	WITHOUT_CLASSIFICATION	3.2703071154044235E-7	DEFECT
// ------------------------------------------ general Javadoc arguments	WITHOUT_CLASSIFICATION	0.9999999308704421	WITHOUT_CLASSIFICATION	6.912955783437313E-8	DEFECT
// ---------------------------- javadoc2 arguments for default doclet	WITHOUT_CLASSIFICATION	0.9999999503604506	WITHOUT_CLASSIFICATION	4.9639549328754284E-8	DEFECT
// add the links arguments	WITHOUT_CLASSIFICATION	0.9999999931885185	WITHOUT_CLASSIFICATION	6.811481537807118E-9	DEFECT
// should be impossible	WITHOUT_CLASSIFICATION	0.9999884982948901	WITHOUT_CLASSIFICATION	1.1501705109894848E-5	DEFECT
// is the href a valid URL	WITHOUT_CLASSIFICATION	0.9999997214727642	WITHOUT_CLASSIFICATION	2.785272358012258E-7	DEFECT
// ok - just skip	WITHOUT_CLASSIFICATION	0.9999994750931069	WITHOUT_CLASSIFICATION	5.249068930899046E-7	DEFECT
//return	WITHOUT_CLASSIFICATION	0.9999952363941894	WITHOUT_CLASSIFICATION	4.763605810633534E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999996958536274	WITHOUT_CLASSIFICATION	3.0414637271301487E-7	DEFECT
//validation logic	WITHOUT_CLASSIFICATION	0.9999899729329356	WITHOUT_CLASSIFICATION	1.00270670643548E-5	DEFECT
// Ignore Exception	WITHOUT_CLASSIFICATION	0.9999995659536455	WITHOUT_CLASSIFICATION	4.3404635441434825E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999209490427	WITHOUT_CLASSIFICATION	7.905095730336347E-8	DEFECT
// Only try to move if this is the last mapped file // and one of the mappings isn't to itself	WITHOUT_CLASSIFICATION	0.9999954244782605	WITHOUT_CLASSIFICATION	4.5755217394780856E-6	DEFECT
// createArgument(true) is necessary to make sure -locale // is the first argument (required in 1.3+).	WITHOUT_CLASSIFICATION	0.999999967839461	WITHOUT_CLASSIFICATION	3.216053897051179E-8	DEFECT
// Go through the tokens one at a time, updating the // elements array and issuing warnings where appropriate.	WITHOUT_CLASSIFICATION	0.99997624102391	WITHOUT_CLASSIFICATION	2.375897608997507E-5	DEFECT
// Ant javadoc task rules for group attribute: //   Args are comma-delimited. //   Each arg is 2 space-delimited strings. //   E.g., group="XSLT_Packages org.apache.xalan.xslt*, //                XPath_Packages org.apache.xalan.xpath*"	WITHOUT_CLASSIFICATION	0.9999995190957587	WITHOUT_CLASSIFICATION	4.809042413307807E-7	DEFECT
// add the group arguments	WITHOUT_CLASSIFICATION	0.9999999516010522	WITHOUT_CLASSIFICATION	4.839894794845705E-8	DEFECT
// Javadoc 1.4 parameters	WITHOUT_CLASSIFICATION	0.9999999696860686	WITHOUT_CLASSIFICATION	3.031393140235576E-8	DEFECT
// The tag element is not used as a fileset, // but specifies the tag directly.	WITHOUT_CLASSIFICATION	0.999995984747342	WITHOUT_CLASSIFICATION	4.015252658090915E-6	DEFECT
// The tag element is used as a // fileset. Parse all the files and create // -tag arguments.	WITHOUT_CLASSIFICATION	0.999999994077014	WITHOUT_CLASSIFICATION	5.922985984211726E-9	DEFECT
// Not 1.4+.	WITHOUT_CLASSIFICATION	0.9999972568789688	WITHOUT_CLASSIFICATION	2.7431210312682513E-6	DEFECT
// Javadoc 1.2/1.3 parameters:	WITHOUT_CLASSIFICATION	0.9999998176382404	WITHOUT_CLASSIFICATION	1.8236175955162785E-7	DEFECT
// If using an external file, write the command line options to it	WITHOUT_CLASSIFICATION	0.9999971519664695	WITHOUT_CLASSIFICATION	2.8480335303730544E-6	DEFECT
// If using an external file, write the command line options to it	WITHOUT_CLASSIFICATION	0.9999971519664695	WITHOUT_CLASSIFICATION	2.8480335303730544E-6	DEFECT
/*         * No reason to change the working directory as all filenames and         * path components have been resolved already.         *         * Avoid problems with command line length in some environments.         */	WITHOUT_CLASSIFICATION	0.9997044597090444	WITHOUT_CLASSIFICATION	2.955402909556497E-4	DEFECT
// are there any java files in this directory?	WITHOUT_CLASSIFICATION	0.9999866080803284	WITHOUT_CLASSIFICATION	1.339191967168338E-5	DEFECT
// We don't need to care for duplicates here, // Path.list does it for us.	WITHOUT_CLASSIFICATION	0.9999992109928064	WITHOUT_CLASSIFICATION	7.890071936283123E-7	DEFECT
// CheckStyle:MethodNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9999996790301204	WITHOUT_CLASSIFICATION	3.209698796376357E-7	DEFECT
/* Methods below all add specific selectors */	WITHOUT_CLASSIFICATION	0.9999999452060611	WITHOUT_CLASSIFICATION	5.479393894903947E-8	DEFECT
//convert a class name into a resource	WITHOUT_CLASSIFICATION	0.9999994099466207	WITHOUT_CLASSIFICATION	5.900533793245673E-7	DEFECT
//set the property	WITHOUT_CLASSIFICATION	0.9999914608663591	WITHOUT_CLASSIFICATION	8.539133640823445E-6	DEFECT
// line feed	WITHOUT_CLASSIFICATION	0.9999921097901873	WITHOUT_CLASSIFICATION	7.890209812812012E-6	DEFECT
// by default, remove matching empty dirs	WITHOUT_CLASSIFICATION	0.9999994849889816	WITHOUT_CLASSIFICATION	5.150110184146351E-7	DEFECT
// delete the single file	WITHOUT_CLASSIFICATION	0.9999997755087694	WITHOUT_CLASSIFICATION	2.2449123066441286E-7	DEFECT
// delete the directory	WITHOUT_CLASSIFICATION	0.9999996115408367	WITHOUT_CLASSIFICATION	3.8845916329857753E-7	DEFECT
//add the files from the default fileset:	WITHOUT_CLASSIFICATION	0.999999903482912	WITHOUT_CLASSIFICATION	9.651708793125977E-8	DEFECT
// sort first to files, then dirs	WITHOUT_CLASSIFICATION	0.999999360978666	WITHOUT_CLASSIFICATION	6.390213339715229E-7	DEFECT
/*                 * Plain impossible with UTF8, see                 * http://java.sun.com/j2se/1.5.0/docs/guide/intl/encoding.doc.html                 *                 * fallback to platform specific anyway.                 */	WITHOUT_CLASSIFICATION	0.9999989791758813	WITHOUT_CLASSIFICATION	1.0208241187291495E-6	DEFECT
//patch the redirector to save output to a file	WITHOUT_CLASSIFICATION	0.9999999833551775	WITHOUT_CLASSIFICATION	1.6644822551262774E-8	DEFECT
//verify special operations	WITHOUT_CLASSIFICATION	0.9999999792637883	WITHOUT_CLASSIFICATION	2.0736211709921073E-8	DEFECT
//JAR  is required	WITHOUT_CLASSIFICATION	0.9997172268479816	WITHOUT_CLASSIFICATION	2.8277315201841115E-4	DEFECT
//deal with jdk1.4.2 bug:	WITHOUT_CLASSIFICATION	0.9996945501464582	WITHOUT_CLASSIFICATION	3.054498535418456E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999209490427	WITHOUT_CLASSIFICATION	7.905095730336347E-8	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999996958536274	WITHOUT_CLASSIFICATION	3.0414637271301487E-7	DEFECT
// now we need to populate the compiler adapter	WITHOUT_CLASSIFICATION	0.999998996428347	WITHOUT_CLASSIFICATION	1.0035716530728304E-6	DEFECT
// finally, lets execute the compiler!!	WITHOUT_CLASSIFICATION	0.999975276638978	WITHOUT_CLASSIFICATION	2.4723361022012355E-5	DEFECT
//validation	WITHOUT_CLASSIFICATION	0.9999642321826583	WITHOUT_CLASSIFICATION	3.5767817341806254E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999209490427	WITHOUT_CLASSIFICATION	7.905095730336347E-8	DEFECT
// nonexistent resources could only occur if we already // deleted something from a fileset:	WITHOUT_CLASSIFICATION	0.9999995804910143	WITHOUT_CLASSIFICATION	4.1950898574330805E-7	DEFECT
//cache	WITHOUT_CLASSIFICATION	0.9999955589927789	WITHOUT_CLASSIFICATION	4.44100722112299E-6	DEFECT
// no include pattern implicitly means includes="**"	WITHOUT_CLASSIFICATION	0.999996865313333	WITHOUT_CLASSIFICATION	3.134686666976731E-6	DEFECT
//Do not process this file	WITHOUT_CLASSIFICATION	0.9999900137023567	WITHOUT_CLASSIFICATION	9.986297643212986E-6	DEFECT
// make sure facade knows about magic properties and fork setting	WITHOUT_CLASSIFICATION	0.9999954837752844	WITHOUT_CLASSIFICATION	4.516224715623263E-6	DEFECT
// deal with the resources	WITHOUT_CLASSIFICATION	0.999998710662092	WITHOUT_CLASSIFICATION	1.2893379080545239E-6	DEFECT
// Make a transaction for each resource	WITHOUT_CLASSIFICATION	0.9999985789871891	WITHOUT_CLASSIFICATION	1.4210128108192574E-6	DEFECT
// Make a transaction group for the outer command	WITHOUT_CLASSIFICATION	0.9999958148425699	WITHOUT_CLASSIFICATION	4.185157430121277E-6	DEFECT
// Process all transactions	WITHOUT_CLASSIFICATION	0.9999999099485699	WITHOUT_CLASSIFICATION	9.00514301580321E-8	DEFECT
// Catch any statements not followed by ;	WITHOUT_CLASSIFICATION	0.9999907462154455	WITHOUT_CLASSIFICATION	9.253784554567855E-6	DEFECT
// Check and ignore empty statements	WITHOUT_CLASSIFICATION	0.9999999920956023	WITHOUT_CLASSIFICATION	7.904397674052842E-9	DEFECT
/*     * Closes an unused connection after an error and doesn't rethrow     * a possible SQLException     * @since Ant 1.7     */	WITHOUT_CLASSIFICATION	0.9999998445424094	WITHOUT_CLASSIFICATION	1.5545759059805342E-7	DEFECT
// dreaded backwards compatibility	WITHOUT_CLASSIFICATION	0.9999970487352725	WITHOUT_CLASSIFICATION	2.9512647274339723E-6	DEFECT
/*Throw an exception if cvs exited with error. (Iulian)*/	WITHOUT_CLASSIFICATION	0.9999954009543872	WITHOUT_CLASSIFICATION	4.599045612851121E-6	DEFECT
// re-implement legacy behaviour:	WITHOUT_CLASSIFICATION	0.9999518847334441	WITHOUT_CLASSIFICATION	4.811526655579029E-5	DEFECT
// Check if not real cvsroot => set it to null	WITHOUT_CLASSIFICATION	0.9999995572908679	WITHOUT_CLASSIFICATION	4.4270913211797533E-7	DEFECT
// Check if not real cvsrsh => set it to null	WITHOUT_CLASSIFICATION	0.999999618531212	WITHOUT_CLASSIFICATION	3.814687880130858E-7	DEFECT
// Check if not real tag => set it to null	WITHOUT_CLASSIFICATION	0.9999998219436455	WITHOUT_CLASSIFICATION	1.7805635467773653E-7	DEFECT
// close the output file if required	WITHOUT_CLASSIFICATION	0.9999992258410676	WITHOUT_CLASSIFICATION	7.741589324331275E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999209490427	WITHOUT_CLASSIFICATION	7.905095730336347E-8	DEFECT
//req // req	WITHOUT_CLASSIFICATION	0.9999900887275766	WITHOUT_CLASSIFICATION	9.91127242346028E-6	DEFECT
// scan source directories and dest directory to build up // compile lists	WITHOUT_CLASSIFICATION	0.9999999345601205	WITHOUT_CLASSIFICATION	6.543987945444824E-8	DEFECT
//there is no need to expand properties here as that happens when Transaction.addText is //called; to do so here would be an error.	WITHOUT_CLASSIFICATION	0.9998783829200043	WITHOUT_CLASSIFICATION	1.216170799957084E-4	DEFECT
//there are places (in this file, and perhaps elsewhere, where it is assumed //that null is an acceptable parameter.	WITHOUT_CLASSIFICATION	0.9999999475594069	WITHOUT_CLASSIFICATION	5.244059301984281E-8	DEFECT
// We can't do it ourselves as jCVS is GPLed, a third party task // outside of jakarta repositories would be possible though (SB).	WITHOUT_CLASSIFICATION	0.9999942288279824	WITHOUT_CLASSIFICATION	5.771172017561727E-6	DEFECT
// // Just call the getExecuteStreamHandler() and let it handle //     the semantics of instantiation or retrieval. //	WITHOUT_CLASSIFICATION	0.9999249091320418	WITHOUT_CLASSIFICATION	7.5090867958217E-5	DEFECT
// we are chmodding the given directory	WITHOUT_CLASSIFICATION	0.9999860888090297	WITHOUT_CLASSIFICATION	1.3911190970185884E-5	DEFECT
// may be altered in validateAttributes	WITHOUT_CLASSIFICATION	0.9999979642898478	WITHOUT_CLASSIFICATION	2.035710152112347E-6	DEFECT
// will be removed in validateAttributes	WITHOUT_CLASSIFICATION	0.9999728315075965	WITHOUT_CLASSIFICATION	2.716849240345199E-5	DEFECT
// make sure we don't have an illegal set of options	WITHOUT_CLASSIFICATION	0.9999990042100979	WITHOUT_CLASSIFICATION	9.95789902028737E-7	DEFECT
// deal with the single file	WITHOUT_CLASSIFICATION	0.99999947965538	WITHOUT_CLASSIFICATION	5.203446198443308E-7	DEFECT
// deal with the ResourceCollections	WITHOUT_CLASSIFICATION	0.9999981423347201	WITHOUT_CLASSIFICATION	1.8576652799843192E-6	DEFECT
// Step (1) - beware of the ZipFileSet	WITHOUT_CLASSIFICATION	0.9999990400774912	WITHOUT_CLASSIFICATION	9.599225088158008E-7	DEFECT
// not a fileset or contains non-file resources	WITHOUT_CLASSIFICATION	0.9999983826236057	WITHOUT_CLASSIFICATION	1.6173763942323266E-6	DEFECT
// copying of dirs is trivial and can be done // for non-file resources as well as for real // files.	WITHOUT_CLASSIFICATION	0.9999995414249409	WITHOUT_CLASSIFICATION	4.5857505911846057E-7	DEFECT
// a not-directory file resource // needs special treatment	WITHOUT_CLASSIFICATION	0.9999979586021185	WITHOUT_CLASSIFICATION	2.041397881426811E-6	DEFECT
// do all the copy operations now...	WITHOUT_CLASSIFICATION	0.9999337204465777	WITHOUT_CLASSIFICATION	6.627955342235716E-5	DEFECT
// restrict to out-of-date resources	WITHOUT_CLASSIFICATION	0.9999995875077825	WITHOUT_CLASSIFICATION	4.124922174303742E-7	DEFECT
// clean up again, so this instance can be used a second // time	WITHOUT_CLASSIFICATION	0.9999998395182591	WITHOUT_CLASSIFICATION	1.6048174083362664E-7	DEFECT
// reuse the array created by the mapper	WITHOUT_CLASSIFICATION	0.9999998221481865	WITHOUT_CLASSIFICATION	1.778518135340137E-7	DEFECT
// reuse the array created by the mapper	WITHOUT_CLASSIFICATION	0.9999998221481865	WITHOUT_CLASSIFICATION	1.778518135340137E-7	DEFECT
//now patch in all system properties	WITHOUT_CLASSIFICATION	0.9999944356097468	WITHOUT_CLASSIFICATION	5.564390253212191E-6	DEFECT
// is the keystore a file	WITHOUT_CLASSIFICATION	0.9999997474765691	WITHOUT_CLASSIFICATION	2.5252343093168244E-7	DEFECT
// must be a URL - just pass as is	WITHOUT_CLASSIFICATION	0.9999992409123631	WITHOUT_CLASSIFICATION	7.590876367580138E-7	DEFECT
// Gump friendly - don't mess with the core loader if only classpath	WITHOUT_CLASSIFICATION	0.9998280009558133	WITHOUT_CLASSIFICATION	1.7199904418671648E-4	DEFECT
// Construct a new class loader	WITHOUT_CLASSIFICATION	0.9999999034433439	WITHOUT_CLASSIFICATION	9.655665610451361E-8	DEFECT
// The param is "parentFirst"	WITHOUT_CLASSIFICATION	0.9999941414000663	WITHOUT_CLASSIFICATION	5.858599933844441E-6	DEFECT
/*public*/	WITHOUT_CLASSIFICATION	0.9999328218706396	WITHOUT_CLASSIFICATION	6.717812936043049E-5	DEFECT
//shield it from being closed by a filtering StreamPumper	WITHOUT_CLASSIFICATION	0.9999993649180181	WITHOUT_CLASSIFICATION	6.350819819014838E-7	DEFECT
//shield it from being closed by a filtering StreamPumper	WITHOUT_CLASSIFICATION	0.9999993649180181	WITHOUT_CLASSIFICATION	6.350819819014838E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999209490427	WITHOUT_CLASSIFICATION	7.905095730336347E-8	DEFECT
// set read-only properties // CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999373253167	WITHOUT_CLASSIFICATION	6.267468334842144E-8	DEFECT
// Are any other references held ? Can we 'close' the loader // so it removes the locks on jars ? // a new one will be created.	WITHOUT_CLASSIFICATION	0.9999814568681308	WITHOUT_CLASSIFICATION	1.8543131869171106E-5	DEFECT
// The core loader must be reverse //reverse=true;	WITHOUT_CLASSIFICATION	0.9999997848665109	WITHOUT_CLASSIFICATION	2.151334891261974E-7	DEFECT
// This allows the core loader to load optional tasks // without delegating	WITHOUT_CLASSIFICATION	0.9999986320682438	WITHOUT_CLASSIFICATION	1.3679317561746064E-6	DEFECT
//wait for the StreamPumpers to finish	WITHOUT_CLASSIFICATION	0.9999994799308771	WITHOUT_CLASSIFICATION	5.200691229174903E-7	DEFECT
// Ignore exception	WITHOUT_CLASSIFICATION	0.999999269263452	WITHOUT_CLASSIFICATION	7.307365480456664E-7	DEFECT
// Normalize the reference directory (containing the jar)	WITHOUT_CLASSIFICATION	0.9999999877267007	WITHOUT_CLASSIFICATION	1.2273299301681636E-8	DEFECT
// Normalize the current file	WITHOUT_CLASSIFICATION	0.9999999895065123	WITHOUT_CLASSIFICATION	1.0493487717434342E-8	DEFECT
// No match, so bail out!	WITHOUT_CLASSIFICATION	0.9999999339756201	WITHOUT_CLASSIFICATION	6.602437975550829E-8	DEFECT
// Finally assign the property with the manifest classpath	WITHOUT_CLASSIFICATION	0.9999936685408735	WITHOUT_CLASSIFICATION	6.331459126506899E-6	DEFECT
// try to find a MAX_LINE_LENGTH byte section	WITHOUT_CLASSIFICATION	0.9999973037644961	WITHOUT_CLASSIFICATION	2.6962355039261186E-6	DEFECT
// continuation line	WITHOUT_CLASSIFICATION	0.9999985938738981	WITHOUT_CLASSIFICATION	1.4061261018488753E-6	DEFECT
// refresh attribute in case of multivalued attributes.	WITHOUT_CLASSIFICATION	0.9999999304958819	WITHOUT_CLASSIFICATION	6.950411816823346E-8	DEFECT
// the merge file always wins	WITHOUT_CLASSIFICATION	0.9999954899208012	WITHOUT_CLASSIFICATION	4.510079198660811E-6	DEFECT
// the merge file *always* wins, even for Class-Path	WITHOUT_CLASSIFICATION	0.9999969906066324	WITHOUT_CLASSIFICATION	3.0093933675140263E-6	DEFECT
// add in the warnings	WITHOUT_CLASSIFICATION	0.9999997588319434	WITHOUT_CLASSIFICATION	2.4116805661488205E-7	DEFECT
// This should be the manifest version	WITHOUT_CLASSIFICATION	0.9999336085419844	WITHOUT_CLASSIFICATION	6.63914580155876E-5	DEFECT
// add it back	WITHOUT_CLASSIFICATION	0.9999929723366291	WITHOUT_CLASSIFICATION	7.027663370911619E-6	DEFECT
// shouldn't happen - ignore	WITHOUT_CLASSIFICATION	0.9999748869967534	WITHOUT_CLASSIFICATION	2.511300324658227E-5	DEFECT
// create a vector and add in the warnings for all the sections	WITHOUT_CLASSIFICATION	0.9999728118909954	WITHOUT_CLASSIFICATION	2.7188109004657684E-5	DEFECT
//off by default	WITHOUT_CLASSIFICATION	0.9999988986516413	WITHOUT_CLASSIFICATION	1.1013483587327536E-6	DEFECT
//set up logging	WITHOUT_CLASSIFICATION	0.9999998691843747	WITHOUT_CLASSIFICATION	1.3081562535076507E-7	DEFECT
//execute the get	WITHOUT_CLASSIFICATION	0.9999816530220079	WITHOUT_CLASSIFICATION	1.8346977992080807E-5	DEFECT
//dont do any progress, unless asked	WITHOUT_CLASSIFICATION	0.9999954963353036	WITHOUT_CLASSIFICATION	4.5036646963674594E-6	DEFECT
//set the timestamp to the file date.	WITHOUT_CLASSIFICATION	0.9999999339172136	WITHOUT_CLASSIFICATION	6.608278634220588E-8	DEFECT
//set up the URL connection	WITHOUT_CLASSIFICATION	0.9999997955065664	WITHOUT_CLASSIFICATION	2.0449343355394016E-7	DEFECT
// Create as many directory prefixes as parent levels to traverse, // in addition to the reference directory itself	WITHOUT_CLASSIFICATION	0.999998933250085	WITHOUT_CLASSIFICATION	1.0667499149395862E-6	DEFECT
// Find the longest prefix shared by the current file // and the reference directory.	WITHOUT_CLASSIFICATION	0.9999999576637119	WITHOUT_CLASSIFICATION	4.233628814217278E-8	DEFECT
// We have a match! Add as many ../ as parent // directory traversed to get the relative path	WITHOUT_CLASSIFICATION	0.9999875799306277	WITHOUT_CLASSIFICATION	1.2420069372431774E-5	DEFECT
// Manifest's ClassPath: attribute always uses forward // slashes '/', and is space-separated. Ant will properly // format it on 72 columns with proper line continuation	WITHOUT_CLASSIFICATION	0.9999725282785918	WITHOUT_CLASSIFICATION	2.7471721408192246E-5	DEFECT
// a continuation on the first line is a // continuation of the name - concatenate this // line and the name	WITHOUT_CLASSIFICATION	0.9999997799746986	WITHOUT_CLASSIFICATION	2.2002530147992796E-7	DEFECT
// required // required	WITHOUT_CLASSIFICATION	0.9999946412945672	WITHOUT_CLASSIFICATION	5.3587054327629855E-6	DEFECT
//modify the headers //NB: things like user authentication could go in here too.	WITHOUT_CLASSIFICATION	0.9340511700825314	WITHOUT_CLASSIFICATION	0.06594882991746856	DEFECT
// prepare Java 1.1 style credentials	WITHOUT_CLASSIFICATION	0.9999989709890921	WITHOUT_CLASSIFICATION	1.0290109078633566E-6	DEFECT
//we do not use the sun impl for portability, //and always use our own implementation for consistent //testing	WITHOUT_CLASSIFICATION	0.9999992083768822	WITHOUT_CLASSIFICATION	7.916231178835267E-7	DEFECT
//connect to the remote site (may take some time)	WITHOUT_CLASSIFICATION	0.9998671178967852	WITHOUT_CLASSIFICATION	1.3288210321472173E-4	DEFECT
//next test for a 304 result (HTTP only)	WITHOUT_CLASSIFICATION	0.9999671861504786	WITHOUT_CLASSIFICATION	3.281384952132645E-5	DEFECT
// test for 401 result (HTTP only)	WITHOUT_CLASSIFICATION	0.9999944158741874	WITHOUT_CLASSIFICATION	5.584125812717706E-6	DEFECT
//REVISIT: at this point even non HTTP connections may //support the if-modified-since behaviour -we just check //the date of the content and skip the write if it is not //newer. Some protocols (FTP) don't include dates, of //course.	WITHOUT_CLASSIFICATION	0.9999752079223434	WITHOUT_CLASSIFICATION	2.4792077656634316E-5	DEFECT
//this three attempt trick is to get round quirks in different //Java implementations. Some of them take a few goes to bind //property; we ignore the first couple of such failures.	WITHOUT_CLASSIFICATION	0.9999990541471389	WITHOUT_CLASSIFICATION	9.458528610912345E-7	DEFECT
//successful download	WITHOUT_CLASSIFICATION	0.9999997482185949	WITHOUT_CLASSIFICATION	2.5178140498907736E-7	DEFECT
// this happens if the projecthelper was not registered with the project.	WITHOUT_CLASSIFICATION	0.995149093739445	WITHOUT_CLASSIFICATION	0.004850906260554932	DEFECT
// methods to register and unregister shutdown hooks	WITHOUT_CLASSIFICATION	0.9999815700081799	WITHOUT_CLASSIFICATION	1.8429991820098065E-5	DEFECT
// check to see if the shutdown hook methods exists // (support pre-JDK 1.3 VMs)	WITHOUT_CLASSIFICATION	0.9999947820483719	WITHOUT_CLASSIFICATION	5.217951628142751E-6	DEFECT
// wait to add shutdown hook as needed	WITHOUT_CLASSIFICATION	0.999994368166878	WITHOUT_CLASSIFICATION	5.631833121972491E-6	DEFECT
// it just won't be added as a shutdown hook... :(	WITHOUT_CLASSIFICATION	0.998291181217622	WITHOUT_CLASSIFICATION	0.0017088187823780586	DEFECT
// shutdown already is in progress	WITHOUT_CLASSIFICATION	0.9999956122898574	WITHOUT_CLASSIFICATION	4.387710142534362E-6	DEFECT
// Ignore Exception	WITHOUT_CLASSIFICATION	0.9999995659536455	WITHOUT_CLASSIFICATION	4.3404635441434825E-7	DEFECT
// shutdown already is in progress	WITHOUT_CLASSIFICATION	0.9999956122898574	WITHOUT_CLASSIFICATION	4.387710142534362E-6	DEFECT
// I don't think we can use File - different rules // for relative paths.	WITHOUT_CLASSIFICATION	0.9999741198873275	WITHOUT_CLASSIFICATION	2.5880112672403877E-5	DEFECT
// this happens if ant is used with a project // helper that doesn't set the import.	WITHOUT_CLASSIFICATION	0.9994119721291755	WITHOUT_CLASSIFICATION	5.880278708245002E-4	DEFECT
// Paths are relative to the build file they're imported from, // *not* the current directory (same as entity includes).	WITHOUT_CLASSIFICATION	0.9999999593841242	WITHOUT_CLASSIFICATION	4.0615875734628487E-8	DEFECT
// whether or not this ProcessDestroyer has been registered as a // shutdown hook	WITHOUT_CLASSIFICATION	0.999967117795062	WITHOUT_CLASSIFICATION	3.288220493800846E-5	DEFECT
// whether or not this ProcessDestroyer is currently running as // shutdown hook	WITHOUT_CLASSIFICATION	0.9981589195480469	WITHOUT_CLASSIFICATION	0.0018410804519531129	DEFECT
// this should return quickly, since it basically is a NO-OP.	WITHOUT_CLASSIFICATION	0.9998179052087817	WITHOUT_CLASSIFICATION	1.8209479121842094E-4	DEFECT
// the thread didn't die in time // it should not kill any processes unexpectedly	WITHOUT_CLASSIFICATION	0.9999095737411935	WITHOUT_CLASSIFICATION	9.042625880650286E-5	DEFECT
// if this list is empty, register the shutdown hook	WITHOUT_CLASSIFICATION	0.9999950951743697	WITHOUT_CLASSIFICATION	4.904825630306182E-6	DEFECT
// need to load Task via system classloader or the new // task we want to define will never be a Task but always // be wrapped into a TaskAdapter.	WITHOUT_CLASSIFICATION	0.999999686733837	WITHOUT_CLASSIFICATION	3.1326616308092267E-7	DEFECT
// generate classpath, because kjc doesn't support sourcepath.	WITHOUT_CLASSIFICATION	0.999995288589501	WITHOUT_CLASSIFICATION	4.711410499039275E-6	DEFECT
// generate the clsspath	WITHOUT_CLASSIFICATION	0.9999997428094892	WITHOUT_CLASSIFICATION	2.5719051069329937E-7	DEFECT
// kjc don't have bootclasspath option.	WITHOUT_CLASSIFICATION	0.9999992988704995	WITHOUT_CLASSIFICATION	7.011295004007095E-7	DEFECT
// Process the factory class	WITHOUT_CLASSIFICATION	0.9999983134013476	WITHOUT_CLASSIFICATION	1.6865986524790431E-6	DEFECT
// Process the factory path	WITHOUT_CLASSIFICATION	0.9999994249929859	WITHOUT_CLASSIFICATION	5.750070141757113E-7	DEFECT
// Process the processor options	WITHOUT_CLASSIFICATION	0.9999998397491668	WITHOUT_CLASSIFICATION	1.602508331212568E-7	DEFECT
//set up the javac options	WITHOUT_CLASSIFICATION	0.9999999953043539	WITHOUT_CLASSIFICATION	4.695646091217272E-9	DEFECT
//then add the Apt options	WITHOUT_CLASSIFICATION	0.9999997964238955	WITHOUT_CLASSIFICATION	2.0357610461981488E-7	DEFECT
//finally invoke APT // Use reflection to be able to build on all JDKs:	WITHOUT_CLASSIFICATION	0.9998739642016177	WITHOUT_CLASSIFICATION	1.2603579838239802E-4	DEFECT
//rethrow build exceptions	WITHOUT_CLASSIFICATION	0.9999970829484464	WITHOUT_CLASSIFICATION	2.917051553574987E-6	DEFECT
//cast everything else to a build exception	WITHOUT_CLASSIFICATION	0.9999960438140322	WITHOUT_CLASSIFICATION	3.956185967865359E-6	DEFECT
// Call the compile() method	WITHOUT_CLASSIFICATION	0.9999997080271018	WITHOUT_CLASSIFICATION	2.919728981228046E-7	DEFECT
// jvc doesn't support bootclasspath dir (-bootclasspath) // so we'll emulate it for compatibility and convenience.	WITHOUT_CLASSIFICATION	0.99999998362858	WITHOUT_CLASSIFICATION	1.6371420063679983E-8	DEFECT
// jvc doesn't support an extension dir (-extdir) // so we'll emulate it for compatibility and convenience.	WITHOUT_CLASSIFICATION	0.9999996394936427	WITHOUT_CLASSIFICATION	3.605063573152583E-7	DEFECT
// jvc has no option for source-path so we // will add it to classpath.	WITHOUT_CLASSIFICATION	0.9999998394923343	WITHOUT_CLASSIFICATION	1.6050766567523277E-7	DEFECT
// Add the Classpath before the "internal" one.	WITHOUT_CLASSIFICATION	0.9999999257091304	WITHOUT_CLASSIFICATION	7.429086960615007E-8	DEFECT
// Enable MS-Extensions and ...	WITHOUT_CLASSIFICATION	0.9999757342631688	WITHOUT_CLASSIFICATION	2.426573683130547E-5	DEFECT
// ... do not display a Message about this.	WITHOUT_CLASSIFICATION	0.999936083375187	WITHOUT_CLASSIFICATION	6.39166248129029E-5	DEFECT
// Do not display Logo	WITHOUT_CLASSIFICATION	0.9999969949449911	WITHOUT_CLASSIFICATION	3.0050550090335815E-6	DEFECT
//add the files	WITHOUT_CLASSIFICATION	0.9999994674916413	WITHOUT_CLASSIFICATION	5.325083587150002E-7	DEFECT
//run	WITHOUT_CLASSIFICATION	0.9999342060283267	WITHOUT_CLASSIFICATION	6.57939716733437E-5	DEFECT
//as new versions of java come out, add them to this test	WITHOUT_CLASSIFICATION	0.9999995359130737	WITHOUT_CLASSIFICATION	4.640869263249553E-7	DEFECT
//on java<=1.3 the modern falls back to classic if it is not found //but on java>=1.4 we just bail out early	WITHOUT_CLASSIFICATION	0.9999314217529638	WITHOUT_CLASSIFICATION	6.857824703630934E-5	DEFECT
// does the modern compiler exist?	WITHOUT_CLASSIFICATION	0.9996564570502483	WITHOUT_CLASSIFICATION	3.4354294975161444E-4	DEFECT
// CheckStyle:ConstantNameCheck ON // CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999882939378	WITHOUT_CLASSIFICATION	1.1706062252228547E-8	DEFECT
// Combine the build classpath with the system classpath, in an // order determined by the value of build.sysclasspath	WITHOUT_CLASSIFICATION	0.9999996860383179	WITHOUT_CLASSIFICATION	3.13961682185856E-7	DEFECT
// For -sourcepath, use the "sourcepath" value if present. // Otherwise default to the "srcdir" value.	WITHOUT_CLASSIFICATION	0.9999999988868948	WITHOUT_CLASSIFICATION	1.1131052057537929E-9	DEFECT
// Just add "sourcepath" to classpath ( for JDK1.1 ) // as well as "bootclasspath" and "extdirs"	WITHOUT_CLASSIFICATION	0.9999997676019189	WITHOUT_CLASSIFICATION	2.3239808123223837E-7	DEFECT
// If the buildfile specifies sourcepath="", then don't // output any sourcepath.	WITHOUT_CLASSIFICATION	0.9999857744368599	WITHOUT_CLASSIFICATION	1.422556314016187E-5	DEFECT
// If the buildfile specifies sourcepath="", then don't // output any sourcepath.	WITHOUT_CLASSIFICATION	0.9999857744368599	WITHOUT_CLASSIFICATION	1.422556314016187E-5	DEFECT
// support for -source 1.1 and -source 1.2 has been // added with JDK 1.4.2 - and isn't present in 1.5.0 either	WITHOUT_CLASSIFICATION	0.9997671951920626	WITHOUT_CLASSIFICATION	2.3280480793731666E-4	DEFECT
// 1.5.0 doesn't support -source 1.1	WITHOUT_CLASSIFICATION	0.9998522997786594	WITHOUT_CLASSIFICATION	1.4770022134056086E-4	DEFECT
//Use the VM launcher instead of shell launcher on VMS //for java	WITHOUT_CLASSIFICATION	0.9999733135592495	WITHOUT_CLASSIFICATION	2.6686440750505315E-5	DEFECT
// gcj doesn't support bootclasspath dir (-bootclasspath) // so we'll emulate it for compatibility and convenience.	WITHOUT_CLASSIFICATION	0.9999999459289827	WITHOUT_CLASSIFICATION	5.407101725454862E-8	DEFECT
// gcj doesn't support an extension dir (-extdir) // so we'll emulate it for compatibility and convenience.	WITHOUT_CLASSIFICATION	0.9999988093317536	WITHOUT_CLASSIFICATION	1.1906682464633754E-6	DEFECT
// Gcj has no option for source-path so we // will add it to classpath.	WITHOUT_CLASSIFICATION	0.9999998004803746	WITHOUT_CLASSIFICATION	1.9951962533952404E-7	DEFECT
// Use reflection to be able to build on all JDKs >= 1.1:	WITHOUT_CLASSIFICATION	0.9999773471175715	WITHOUT_CLASSIFICATION	2.2652882428466712E-5	DEFECT
// no bootclasspath, therefore, get one from the java runtime	WITHOUT_CLASSIFICATION	0.9999999450898487	WITHOUT_CLASSIFICATION	5.491015136319695E-8	DEFECT
// if the user has set JIKESPATH we should add the contents as well	WITHOUT_CLASSIFICATION	0.999999737708662	WITHOUT_CLASSIFICATION	2.6229133799404005E-7	DEFECT
//reflection to avoid bootstrap/build problems	WITHOUT_CLASSIFICATION	0.9999932197554884	WITHOUT_CLASSIFICATION	6.78024451173036E-6	DEFECT
//now verify that the class has an implementation	WITHOUT_CLASSIFICATION	0.9997978852503352	WITHOUT_CLASSIFICATION	2.0211474966476154E-4	DEFECT
//windows probing logic relies on the word 'windows' in //the OS	WITHOUT_CLASSIFICATION	0.9996479135507692	WITHOUT_CLASSIFICATION	3.5208644923086647E-4	DEFECT
//there are only four 9x platforms that we look for	WITHOUT_CLASSIFICATION	0.9999995302875373	WITHOUT_CLASSIFICATION	4.697124627188078E-7	DEFECT
//wince isn't really 9x, but crippled enough to //be a muchness. Ant doesnt run on CE, anyway.	WITHOUT_CLASSIFICATION	0.996368505210576	WITHOUT_CLASSIFICATION	0.0036314947894240425	DEFECT
// millis per second	WITHOUT_CLASSIFICATION	0.9999555727758823	WITHOUT_CLASSIFICATION	4.442722411766369E-5	DEFECT
//get the host of a url	WITHOUT_CLASSIFICATION	0.9999999500973585	WITHOUT_CLASSIFICATION	4.990264155288057E-8	DEFECT
//Java1.5: reachable = address.isReachable(timeout * 1000);	WITHOUT_CLASSIFICATION	0.9999933079850339	WITHOUT_CLASSIFICATION	6.6920149659860594E-6	DEFECT
//utterly implausible, but catered for anyway	WITHOUT_CLASSIFICATION	0.9999817072349932	WITHOUT_CLASSIFICATION	1.8292765006704696E-5	DEFECT
// load the parser class	WITHOUT_CLASSIFICATION	0.999967496510433	WITHOUT_CLASSIFICATION	3.25034895669318E-5	DEFECT
// may be altered in validate	WITHOUT_CLASSIFICATION	0.9999976499536312	WITHOUT_CLASSIFICATION	2.350046368888059E-6	DEFECT
// Error messages	WITHOUT_CLASSIFICATION	0.9999970168144002	WITHOUT_CLASSIFICATION	2.9831855996632883E-6	DEFECT
// plain impossible	WITHOUT_CLASSIFICATION	0.9999997874080206	WITHOUT_CLASSIFICATION	2.1259197926049924E-7	DEFECT
// support for -source 1.1 and -source 1.2 has been // added with JDK 1.4.2, Jikes doesn't like it	WITHOUT_CLASSIFICATION	0.9967284359628734	WITHOUT_CLASSIFICATION	0.0032715640371267247	DEFECT
//assume this is an IOexception about un readability	WITHOUT_CLASSIFICATION	0.9999898362158842	WITHOUT_CLASSIFICATION	1.016378411567812E-5	DEFECT
//any kind of fault: not reachable.	WITHOUT_CLASSIFICATION	0.9878302047960521	WITHOUT_CLASSIFICATION	0.012169795203947908	DEFECT
//java1.4 or earlier	WITHOUT_CLASSIFICATION	0.999998791413491	WITHOUT_CLASSIFICATION	1.2085865090264927E-6	DEFECT
// don't know the type, should throw exception instead?	WITHOUT_CLASSIFICATION	0.9981468106430588	WITHOUT_CLASSIFICATION	0.0018531893569411874	DEFECT
//pick a value that is good for everything	WITHOUT_CLASSIFICATION	0.9999785613213933	WITHOUT_CLASSIFICATION	2.1438678606782015E-5	DEFECT
//initial state is false.	WITHOUT_CLASSIFICATION	0.9999969741544111	WITHOUT_CLASSIFICATION	3.0258455887943235E-6	DEFECT
//every condition is xored against the previous one	WITHOUT_CLASSIFICATION	0.9999834852560215	WITHOUT_CLASSIFICATION	1.6514743978535138E-5	DEFECT
//validate	WITHOUT_CLASSIFICATION	0.9999890762556783	WITHOUT_CLASSIFICATION	1.0923744321600423E-5	DEFECT
//#now match the files	WITHOUT_CLASSIFICATION	0.9999998802002257	WITHOUT_CLASSIFICATION	1.1979977433233573E-7	DEFECT
// Intentionally left blank	WITHOUT_CLASSIFICATION	0.999987415620742	WITHOUT_CLASSIFICATION	1.2584379257992966E-5	DEFECT
//private static final int GET_ENTRY = 0;	WITHOUT_CLASSIFICATION	0.9999999413564309	WITHOUT_CLASSIFICATION	5.8643569188184705E-8	DEFECT
// make sure attributes are reset when // working on a 'new' file.	WITHOUT_CLASSIFICATION	0.9997451929254306	WITHOUT_CLASSIFICATION	2.5480707456937044E-4	DEFECT
//We have ended changelog for that particular file //so we can save it	WITHOUT_CLASSIFICATION	0.9999999945620116	WITHOUT_CLASSIFICATION	5.437988347748619E-9	DEFECT
//was -1	WITHOUT_CLASSIFICATION	0.999988778194555	WITHOUT_CLASSIFICATION	1.1221805444941911E-5	DEFECT
//was -1	WITHOUT_CLASSIFICATION	0.999988778194555	WITHOUT_CLASSIFICATION	1.1221805444941911E-5	DEFECT
//There were no revisions in this changelog //entry so lets move onto next file	WITHOUT_CLASSIFICATION	0.9999999835618254	WITHOUT_CLASSIFICATION	1.6438174662798805E-8	DEFECT
//Reset comment to empty here as we can accumulate multiple lines //in the processComment method	WITHOUT_CLASSIFICATION	0.9999999218053032	WITHOUT_CLASSIFICATION	7.819469689070462E-8	DEFECT
// We want something of the form: -d ">=YYYY-MM-dd"	WITHOUT_CLASSIFICATION	0.9999994713325324	WITHOUT_CLASSIFICATION	5.286674676213934E-7	DEFECT
// Check if list of files to check has been specified	WITHOUT_CLASSIFICATION	0.9999999897836411	WITHOUT_CLASSIFICATION	1.0216358802259888E-8	DEFECT
//for now skip entries which are missing a date	WITHOUT_CLASSIFICATION	0.9999943316623775	WITHOUT_CLASSIFICATION	5.668337622520873E-6	DEFECT
//Skip dates that are too early	WITHOUT_CLASSIFICATION	0.9999973491319665	WITHOUT_CLASSIFICATION	2.6508680334433424E-6	DEFECT
//Skip dates that are too late	WITHOUT_CLASSIFICATION	0.9999996292245563	WITHOUT_CLASSIFICATION	3.70775443692679E-7	DEFECT
// validate the input parameters	WITHOUT_CLASSIFICATION	0.9999997098000813	WITHOUT_CLASSIFICATION	2.9019991866957516E-7	DEFECT
// build the rdiff command	WITHOUT_CLASSIFICATION	0.9999981151625399	WITHOUT_CLASSIFICATION	1.884837460129203E-6	DEFECT
// if the two substrings are longer than the original, then name // contains address - so reset the name to null	WITHOUT_CLASSIFICATION	0.9999989518106692	WITHOUT_CLASSIFICATION	1.0481893308367453E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999209490427	WITHOUT_CLASSIFICATION	7.905095730336347E-8	DEFECT
// support multiple packages	WITHOUT_CLASSIFICATION	0.999999839205492	WITHOUT_CLASSIFICATION	1.6079450800756117E-7	DEFECT
// force command not to be null	WITHOUT_CLASSIFICATION	0.9999483080916178	WITHOUT_CLASSIFICATION	5.169190838216181E-5	DEFECT
// run the cvs command	WITHOUT_CLASSIFICATION	0.9999894652344452	WITHOUT_CLASSIFICATION	1.0534765554759444E-5	DEFECT
// parse the rdiff	WITHOUT_CLASSIFICATION	0.9999977853018525	WITHOUT_CLASSIFICATION	2.214698147521604E-6	DEFECT
// write the tag diff	WITHOUT_CLASSIFICATION	0.9999997723476332	WITHOUT_CLASSIFICATION	2.2765236672311818E-7	DEFECT
// parse the output of the command	WITHOUT_CLASSIFICATION	0.999996569124778	WITHOUT_CLASSIFICATION	3.4308752221090264E-6	DEFECT
// it is a new file // set the revision but not the prevrevision	WITHOUT_CLASSIFICATION	0.9999955171390216	WITHOUT_CLASSIFICATION	4.482860978399957E-6	DEFECT
// it is a modified file // set the revision and the prevrevision	WITHOUT_CLASSIFICATION	0.9999998469447562	WITHOUT_CLASSIFICATION	1.530552438569592E-7	DEFECT
// it is a removed file	WITHOUT_CLASSIFICATION	0.9999976500952644	WITHOUT_CLASSIFICATION	2.3499047355166317E-6	DEFECT
/* special headers */	WITHOUT_CLASSIFICATION	0.999999126073168	WITHOUT_CLASSIFICATION	8.739268319473222E-7	DEFECT
// prepare for the auto select mechanism	WITHOUT_CLASSIFICATION	0.9999999798242913	WITHOUT_CLASSIFICATION	2.0175708732595068E-8	DEFECT
// try MIME format	WITHOUT_CLASSIFICATION	0.9999931721912816	WITHOUT_CLASSIFICATION	6.827808718387109E-6	DEFECT
// SMTP auth only allowed with MIME mail	WITHOUT_CLASSIFICATION	0.9999234881192969	WITHOUT_CLASSIFICATION	7.651188070312063E-5	DEFECT
// SSL only allowed with MIME mail	WITHOUT_CLASSIFICATION	0.9998796724186164	WITHOUT_CLASSIFICATION	1.2032758138360561E-4	DEFECT
// try UU format	WITHOUT_CLASSIFICATION	0.9999987595032407	WITHOUT_CLASSIFICATION	1.2404967592903189E-6	DEFECT
// try plain format	WITHOUT_CLASSIFICATION	0.9999993062360831	WITHOUT_CLASSIFICATION	6.937639167494721E-7	DEFECT
// a valid mailer must be present by now	WITHOUT_CLASSIFICATION	0.9999999173433426	WITHOUT_CLASSIFICATION	8.265665749114614E-8	DEFECT
// a valid message is required	WITHOUT_CLASSIFICATION	0.9999945740571947	WITHOUT_CLASSIFICATION	5.425942805369786E-6	DEFECT
// an address to send from is required	WITHOUT_CLASSIFICATION	0.9999537854406798	WITHOUT_CLASSIFICATION	4.621455932015695E-5	DEFECT
// at least one address to send to/cc/bcc is required	WITHOUT_CLASSIFICATION	0.9999883761394455	WITHOUT_CLASSIFICATION	1.1623860554505204E-5	DEFECT
// set the mimetype if not done already (and required)	WITHOUT_CLASSIFICATION	0.9999765129360642	WITHOUT_CLASSIFICATION	2.34870639358554E-5	DEFECT
// set the character set if not done already (and required)	WITHOUT_CLASSIFICATION	0.9999913704680262	WITHOUT_CLASSIFICATION	8.629531973747386E-6	DEFECT
// identify which files should be attached	WITHOUT_CLASSIFICATION	0.9999687796965064	WITHOUT_CLASSIFICATION	3.122030349353063E-5	DEFECT
// let the user know what's going to happen	WITHOUT_CLASSIFICATION	0.9999312521669111	WITHOUT_CLASSIFICATION	6.874783308880605E-5	DEFECT
// pass the params to the mailer	WITHOUT_CLASSIFICATION	0.9999912212696989	WITHOUT_CLASSIFICATION	8.778730301047508E-6	DEFECT
// send the email	WITHOUT_CLASSIFICATION	0.9999987188192975	WITHOUT_CLASSIFICATION	1.281180702571644E-6	DEFECT
// let the user know what happened	WITHOUT_CLASSIFICATION	0.999975099286386	WITHOUT_CLASSIFICATION	2.490071361408148E-5	DEFECT
// CheckStyle:MemberNameCheck ON	WITHOUT_CLASSIFICATION	0.9999997752015555	WITHOUT_CLASSIFICATION	2.247984446028892E-7	DEFECT
// Read message from a file	WITHOUT_CLASSIFICATION	0.9999985375715073	WITHOUT_CLASSIFICATION	1.4624284927403504E-6	DEFECT
// Make a limited attempt to extract a sanitized name and email address // Algorithm based on the one found in Ant's MailMessage.java	WITHOUT_CLASSIFICATION	0.9999842051808866	WITHOUT_CLASSIFICATION	1.5794819113397737E-5	DEFECT
// shortcut for "<address>"	WITHOUT_CLASSIFICATION	0.9999998730407503	WITHOUT_CLASSIFICATION	1.269592496658363E-7	DEFECT
// support "address (name)"	WITHOUT_CLASSIFICATION	0.999997561893926	WITHOUT_CLASSIFICATION	2.438106074083591E-6	DEFECT
// support "(name) address"	WITHOUT_CLASSIFICATION	0.999998313493896	WITHOUT_CLASSIFICATION	1.6865061039617437E-6	DEFECT
// To work properly with national charsets we have to use // implementation of interface javax.activation.DataSource	WITHOUT_CLASSIFICATION	0.9980831036672073	WITHOUT_CLASSIFICATION	0.001916896332792686	DEFECT
// Must be like "text/plain; charset=windows-1251"	WITHOUT_CLASSIFICATION	0.9999998497219241	WITHOUT_CLASSIFICATION	1.5027807585196704E-7	DEFECT
// Aside, the JDK is clearly unaware of the Scottish // 'session', which involves excessive quantities of // alcohol :-)	WITHOUT_CLASSIFICATION	0.9999700811687053	WITHOUT_CLASSIFICATION	2.991883129457489E-5	DEFECT
// SMTP provider	WITHOUT_CLASSIFICATION	0.9999657427267566	WITHOUT_CLASSIFICATION	3.425727324335087E-5	DEFECT
//create the message	WITHOUT_CLASSIFICATION	0.9999998744728775	WITHOUT_CLASSIFICATION	1.2552712254058085E-7	DEFECT
//set the sender	WITHOUT_CLASSIFICATION	0.999996872250377	WITHOUT_CLASSIFICATION	3.127749622895169E-6	DEFECT
// set the reply to addresses	WITHOUT_CLASSIFICATION	0.9999997867335806	WITHOUT_CLASSIFICATION	2.1326641939674376E-7	DEFECT
// Choosing character set of the mail message // First: looking it from MimeType	WITHOUT_CLASSIFICATION	0.9999981414735707	WITHOUT_CLASSIFICATION	1.858526429322141E-6	DEFECT
// Assign/reassign message charset from MimeType	WITHOUT_CLASSIFICATION	0.9999997206017258	WITHOUT_CLASSIFICATION	2.793982741406265E-7	DEFECT
// Next: looking if charset having explicit definition	WITHOUT_CLASSIFICATION	0.9999959830752878	WITHOUT_CLASSIFICATION	4.016924712124476E-6	DEFECT
// Using default	WITHOUT_CLASSIFICATION	0.9999998440673453	WITHOUT_CLASSIFICATION	1.5593265468916346E-7	DEFECT
// Using javax.activation.DataSource paradigm	WITHOUT_CLASSIFICATION	0.9999995347158962	WITHOUT_CLASSIFICATION	4.6528410386161266E-7	DEFECT
// Assuming mime type in form "text/XXXX; charset=XXXXXX"	WITHOUT_CLASSIFICATION	0.9999991335765559	WITHOUT_CLASSIFICATION	8.664234441426403E-7	DEFECT
// Skip 'charset='	WITHOUT_CLASSIFICATION	0.9999998613838462	WITHOUT_CLASSIFICATION	1.38616153894819E-7	DEFECT
// Scanner to find our inputs // list of files to process	WITHOUT_CLASSIFICATION	0.9999997198701244	WITHOUT_CLASSIFICATION	2.8012987561257135E-7	DEFECT
// default srcDir to basedir	WITHOUT_CLASSIFICATION	0.9999998339735723	WITHOUT_CLASSIFICATION	1.660264276807616E-7	DEFECT
// Require destDir	WITHOUT_CLASSIFICATION	0.9999834449571873	WITHOUT_CLASSIFICATION	1.6555042812779102E-5	DEFECT
// if src and dest dirs are the same, require the extension // to be set, so we don't stomp every file.  One could still // include a file with the same extension, but ....	WITHOUT_CLASSIFICATION	0.9998738830963673	WITHOUT_CLASSIFICATION	1.2611690363274742E-4	DEFECT
// File to convert // where to put the results	WITHOUT_CLASSIFICATION	0.9999992893174608	WITHOUT_CLASSIFICATION	7.106825391401956E-7	DEFECT
// Build the full file names	WITHOUT_CLASSIFICATION	0.9999996641169876	WITHOUT_CLASSIFICATION	3.3588301234751436E-7	DEFECT
// Make sure we're not about to clobber something	WITHOUT_CLASSIFICATION	0.999999949518792	WITHOUT_CLASSIFICATION	5.048120802177572E-8	DEFECT
// Make intermediate directories if needed // XXX JDK 1.1 doesn't have File.getParentFile,	WITHOUT_CLASSIFICATION	0.999759902048619	WITHOUT_CLASSIFICATION	2.4009795138095588E-4	DEFECT
//this.fork = s;	WITHOUT_CLASSIFICATION	0.9999972921564808	WITHOUT_CLASSIFICATION	2.707843519116287E-6	DEFECT
//TODO: use ANTLR to parse the grammar file to do this.	WITHOUT_CLASSIFICATION	0.9953938152144275	WITHOUT_CLASSIFICATION	0.004606184785572505	DEFECT
// if no output directory is specified, used the target's directory	WITHOUT_CLASSIFICATION	0.9999999996212549	WITHOUT_CLASSIFICATION	3.787452494252E-10	DEFECT
// first off, make sure that we've got a from and to extension	WITHOUT_CLASSIFICATION	0.9999997801990753	WITHOUT_CLASSIFICATION	2.1980092475823363E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc // CheckStyle:MemberNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9999999750136407	WITHOUT_CLASSIFICATION	2.4986359356582724E-8	DEFECT
// CheckStyle:MemberNameCheck ON // CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999901034943	WITHOUT_CLASSIFICATION	9.896505679767212E-9	DEFECT
// Error strings	WITHOUT_CLASSIFICATION	0.9999690057173417	WITHOUT_CLASSIFICATION	3.099428265829402E-5	DEFECT
//validating	WITHOUT_CLASSIFICATION	0.9999840145459269	WITHOUT_CLASSIFICATION	1.598545407309097E-5	DEFECT
//set the schema source for the doc	WITHOUT_CLASSIFICATION	0.9999999376224974	WITHOUT_CLASSIFICATION	6.237750255622729E-8	DEFECT
//set the schema source for the doc	WITHOUT_CLASSIFICATION	0.9999999376224974	WITHOUT_CLASSIFICATION	6.237750255622729E-8	DEFECT
//enable XSD	WITHOUT_CLASSIFICATION	0.9999951727990753	WITHOUT_CLASSIFICATION	4.827200924755291E-6	DEFECT
//validate the parser type	WITHOUT_CLASSIFICATION	0.9999952464391887	WITHOUT_CLASSIFICATION	4.75356081127875E-6	DEFECT
//couldnt use the xerces or jaxp calls	WITHOUT_CLASSIFICATION	0.9999945175932999	WITHOUT_CLASSIFICATION	5.482406699956626E-6	DEFECT
//enable schema checking	WITHOUT_CLASSIFICATION	0.9999998624940246	WITHOUT_CLASSIFICATION	1.3750597543927828E-7	DEFECT
//turn off DTDs if desired	WITHOUT_CLASSIFICATION	0.9999999040748458	WITHOUT_CLASSIFICATION	9.592515412096955E-8	DEFECT
//schema declarations go in next	WITHOUT_CLASSIFICATION	0.9999917108863803	WITHOUT_CLASSIFICATION	8.289113619773674E-6	DEFECT
// first off, make sure that we've got a srcdir and destdir	WITHOUT_CLASSIFICATION	0.999999908455324	WITHOUT_CLASSIFICATION	9.154467598986274E-8	DEFECT
//enable schema //setFeature(XmlConstants.FEATURE_VALIDATION, false);	WITHOUT_CLASSIFICATION	0.9999998695578146	WITHOUT_CLASSIFICATION	1.3044218530543413E-7	DEFECT
//this is almost implausible, but required handling	WITHOUT_CLASSIFICATION	0.9999435070902992	WITHOUT_CLASSIFICATION	5.649290970070522E-5	DEFECT
//SchemaLocation	WITHOUT_CLASSIFICATION	0.9999980773445764	WITHOUT_CLASSIFICATION	1.922655423609216E-6	DEFECT
//private Path extdirs;	WITHOUT_CLASSIFICATION	0.9999991239181618	WITHOUT_CLASSIFICATION	8.76081838341458E-7	DEFECT
// first off, make sure that we've got a srcdir	WITHOUT_CLASSIFICATION	0.9999998478393349	WITHOUT_CLASSIFICATION	1.521606651024354E-7	DEFECT
// Keep jdk 1.1 compliant so others can use this	WITHOUT_CLASSIFICATION	0.9999999309643376	WITHOUT_CLASSIFICATION	6.903566243649788E-8	DEFECT
// second CR -> EOL + possibly empty line	WITHOUT_CLASSIFICATION	0.9999982255798139	WITHOUT_CLASSIFICATION	1.774420186049147E-6	DEFECT
// first CR in this line	WITHOUT_CLASSIFICATION	0.9999999318418926	WITHOUT_CLASSIFICATION	6.815810737806357E-8	DEFECT
// LF -> EOL	WITHOUT_CLASSIFICATION	0.9999962053783158	WITHOUT_CLASSIFICATION	3.794621684151052E-6	DEFECT
// any other char	WITHOUT_CLASSIFICATION	0.9999996249619971	WITHOUT_CLASSIFICATION	3.750380028460968E-7	DEFECT
// Mac-style linebreak or EOF (or both)	WITHOUT_CLASSIFICATION	0.9999998518879041	WITHOUT_CLASSIFICATION	1.4811209597803424E-7	DEFECT
// variables to hold arguments	WITHOUT_CLASSIFICATION	0.999999679115641	WITHOUT_CLASSIFICATION	3.2088435899742034E-7	DEFECT
// ?? Should this be the default for ant?	WITHOUT_CLASSIFICATION	0.9999999635900063	WITHOUT_CLASSIFICATION	3.6409993626074974E-8	DEFECT
// constants for the messages to suppress by flags and their corresponding properties	WITHOUT_CLASSIFICATION	0.999909879267521	WITHOUT_CLASSIFICATION	9.012073247909504E-5	DEFECT
// other implementation variables	WITHOUT_CLASSIFICATION	0.9999991085829172	WITHOUT_CLASSIFICATION	8.914170826973803E-7	DEFECT
// classpath makes no sense	WITHOUT_CLASSIFICATION	0.9999995635462038	WITHOUT_CLASSIFICATION	4.3645379631212066E-7	DEFECT
// destDir	WITHOUT_CLASSIFICATION	0.999998111109328	WITHOUT_CLASSIFICATION	1.8888906721139565E-6	DEFECT
// srcDir	WITHOUT_CLASSIFICATION	0.9999978691009055	WITHOUT_CLASSIFICATION	2.1308990945917433E-6	DEFECT
// copy the source and support files	WITHOUT_CLASSIFICATION	0.9999969679472163	WITHOUT_CLASSIFICATION	3.032052783739387E-6	DEFECT
// compile the source files	WITHOUT_CLASSIFICATION	0.9999999231718144	WITHOUT_CLASSIFICATION	7.682818558230503E-8	DEFECT
// create an array of strings for input to the compiler: one array // comes from the compile options, the other from the compileList	WITHOUT_CLASSIFICATION	0.9999954280333291	WITHOUT_CLASSIFICATION	4.5719666709099845E-6	DEFECT
// create a single array of arguments for the compiler	WITHOUT_CLASSIFICATION	0.9999979951322912	WITHOUT_CLASSIFICATION	2.004867708787512E-6	DEFECT
// print nice output about what we are doing for the log	WITHOUT_CLASSIFICATION	0.9999999715091169	WITHOUT_CLASSIFICATION	2.8490883094035254E-8	DEFECT
// need to set java.class.path property and restore it later // since the NetRexx compiler has no option for the classpath	WITHOUT_CLASSIFICATION	0.9999997671458097	WITHOUT_CLASSIFICATION	2.3285419024265337E-7	DEFECT
// path is mentioned in the message	WITHOUT_CLASSIFICATION	0.9999944153033369	WITHOUT_CLASSIFICATION	5.584696663141536E-6	DEFECT
// verbose level logging for suppressed messages	WITHOUT_CLASSIFICATION	0.9999999579806885	WITHOUT_CLASSIFICATION	4.201931159827086E-8	DEFECT
// error level logging for compiler errors	WITHOUT_CLASSIFICATION	0.999999519219457	WITHOUT_CLASSIFICATION	4.807805430791436E-7	DEFECT
// warning for all warning messages	WITHOUT_CLASSIFICATION	0.9999996927392039	WITHOUT_CLASSIFICATION	3.072607962150654E-7	DEFECT
// info level for the rest.	WITHOUT_CLASSIFICATION	0.9999999459049126	WITHOUT_CLASSIFICATION	5.409508736686502E-8	DEFECT
// need to reset java.class.path property // since the NetRexx compiler has no option for the classpath	WITHOUT_CLASSIFICATION	0.9999999615381324	WITHOUT_CLASSIFICATION	3.8461867565561415E-8	DEFECT
// add our classpath to the mix	WITHOUT_CLASSIFICATION	0.9999993736048618	WITHOUT_CLASSIFICATION	6.263951381551359E-7	DEFECT
// add the system classpath // addExistingToClasspath(classpath,System.getProperty("java.class.path"));	WITHOUT_CLASSIFICATION	0.9999999674369926	WITHOUT_CLASSIFICATION	3.2563007335088667E-8	DEFECT
// XMLReader used to validation process	WITHOUT_CLASSIFICATION	0.9999865912226054	WITHOUT_CLASSIFICATION	1.3408777394601074E-5	DEFECT
// turn validation on	WITHOUT_CLASSIFICATION	0.9999975352428329	WITHOUT_CLASSIFICATION	2.4647571672516597E-6	DEFECT
// set the feature from the attribute list	WITHOUT_CLASSIFICATION	0.9999999718387719	WITHOUT_CLASSIFICATION	2.8161228140840496E-8	DEFECT
// Sets properties	WITHOUT_CLASSIFICATION	0.999997118090551	WITHOUT_CLASSIFICATION	2.881909449044295E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999209490427	WITHOUT_CLASSIFICATION	7.905095730336347E-8	DEFECT
// quick exit if the target is up to date	WITHOUT_CLASSIFICATION	0.9999998202197845	WITHOUT_CLASSIFICATION	1.797802154658295E-7	DEFECT
// ant task properties // defaults // CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999999926535496	WITHOUT_CLASSIFICATION	7.346450484431228E-9	DEFECT
// to report sax parsing errors // CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999938509677099	WITHOUT_CLASSIFICATION	6.14903229009873E-6	DEFECT
// then check it implements XMLReader	WITHOUT_CLASSIFICATION	0.9999731103462507	WITHOUT_CLASSIFICATION	2.6889653749260374E-5	DEFECT
// see if it is a SAX1 Parser	WITHOUT_CLASSIFICATION	0.9999987587134067	WITHOUT_CLASSIFICATION	1.2412865932404352E-6	DEFECT
// Validates property	WITHOUT_CLASSIFICATION	0.9999965213618388	WITHOUT_CLASSIFICATION	3.4786381611530037E-6	DEFECT
//for every file, we have a new instance of the validator	WITHOUT_CLASSIFICATION	0.9999975793369117	WITHOUT_CLASSIFICATION	2.420663088252979E-6	DEFECT
// if this is not a valid file: just use the uri	WITHOUT_CLASSIFICATION	0.9999984943595619	WITHOUT_CLASSIFICATION	1.5056404381355263E-6	DEFECT
// Property	WITHOUT_CLASSIFICATION	0.999993317373734	WITHOUT_CLASSIFICATION	6.682626266049292E-6	DEFECT
/*     * I'm not fond of this pattern: "sub-method expected to throw     * task-cancelling exceptions".  It feels too much like programming     * for side-effects to me...     */	WITHOUT_CLASSIFICATION	0.6930547116523761	WITHOUT_CLASSIFICATION	0.30694528834762386	DEFECT
// get files from old methods - includes and nested include	WITHOUT_CLASSIFICATION	0.9999998699719604	WITHOUT_CLASSIFICATION	1.3002803962050644E-7	DEFECT
// Create the stream pumpers to forward listcab's stdout and stderr to the log // note: listcab is an interactive program, and issues prompts for every new line. //       Therefore, make it show only with verbose logging turned on.	WITHOUT_CLASSIFICATION	0.9999275944549492	WITHOUT_CLASSIFICATION	7.240554505088116E-5	DEFECT
// Pump streams asynchronously	WITHOUT_CLASSIFICATION	0.9999998801656877	WITHOUT_CLASSIFICATION	1.1983431226155094E-7	DEFECT
// A wild default for when the thread is interrupted	WITHOUT_CLASSIFICATION	0.9999997085132681	WITHOUT_CLASSIFICATION	2.914867318484202E-7	DEFECT
// Wait for the process to finish	WITHOUT_CLASSIFICATION	0.9999995705056688	WITHOUT_CLASSIFICATION	4.2949433119336037E-7	DEFECT
// Wait for the end of output and error streams	WITHOUT_CLASSIFICATION	0.9999774143575297	WITHOUT_CLASSIFICATION	2.2585642470264318E-5	DEFECT
// Informative summary message in case of errors	WITHOUT_CLASSIFICATION	0.9999992318921409	WITHOUT_CLASSIFICATION	7.681078590783331E-7	DEFECT
// die if cabarc fails	WITHOUT_CLASSIFICATION	0.9999944093157958	WITHOUT_CLASSIFICATION	5.590684204281282E-6	DEFECT
// Use this to prepend a message to the properties file	WITHOUT_CLASSIFICATION	0.99999162334651	WITHOUT_CLASSIFICATION	8.376653490018972E-6	DEFECT
/* ========================================================================    *    * Constructors    */	WITHOUT_CLASSIFICATION	0.9999999109611981	WITHOUT_CLASSIFICATION	8.903880182966709E-8	DEFECT
/* ========================================================================    *    * Methods    */	WITHOUT_CLASSIFICATION	0.9999985402641973	WITHOUT_CLASSIFICATION	1.459735802605684E-6	DEFECT
// Create the PropertyFile	WITHOUT_CLASSIFICATION	0.9999997751064169	WITHOUT_CLASSIFICATION	2.2489358310328476E-7	DEFECT
// type may be null because it wasn't set	WITHOUT_CLASSIFICATION	0.9999748959946448	WITHOUT_CLASSIFICATION	2.5104005355083685E-5	DEFECT
// Default to string type // which means do nothing	WITHOUT_CLASSIFICATION	0.9999999065768712	WITHOUT_CLASSIFICATION	9.342312879334615E-8	DEFECT
// Insert as a string by default	WITHOUT_CLASSIFICATION	0.9999996584649826	WITHOUT_CLASSIFICATION	3.4153501734854305E-7	DEFECT
// swallow	WITHOUT_CLASSIFICATION	0.9999942438129158	WITHOUT_CLASSIFICATION	5.756187084163846E-6	DEFECT
// configure the transformer...	WITHOUT_CLASSIFICATION	0.9999989218097867	WITHOUT_CLASSIFICATION	1.07819021328113E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999994848348538	WITHOUT_CLASSIFICATION	5.151651463210354E-7	DEFECT
// If only value is specified, the property is set to it // regardless of its previous value.	WITHOUT_CLASSIFICATION	0.9999996742860014	WITHOUT_CLASSIFICATION	3.257139985344351E-7	DEFECT
// If only default is specified and the property did not // exist in the property file, the property is set to default.	WITHOUT_CLASSIFICATION	0.9999908645960847	WITHOUT_CLASSIFICATION	9.135403915354552E-6	DEFECT
// If value and default are both specified and the property // previously existed in the property file, the property // is set to value.	WITHOUT_CLASSIFICATION	0.9999999692697823	WITHOUT_CLASSIFICATION	3.073021775677363E-8	DEFECT
// If value and default are both specified and the property // did not exist in the property file, the property is set // to default.	WITHOUT_CLASSIFICATION	0.9999979173407392	WITHOUT_CLASSIFICATION	2.0826592607302127E-6	DEFECT
// Property type operations	WITHOUT_CLASSIFICATION	0.99999996289559	WITHOUT_CLASSIFICATION	3.710441008247339E-8	DEFECT
// Property types	WITHOUT_CLASSIFICATION	0.9999987712150445	WITHOUT_CLASSIFICATION	1.2287849554039159E-6	DEFECT
// resetting the stylesheet - reset transformer	WITHOUT_CLASSIFICATION	0.9999988067394744	WITHOUT_CLASSIFICATION	1.193260525638014E-6	DEFECT
// do we need to reset templates as well	WITHOUT_CLASSIFICATION	0.9999997736560742	WITHOUT_CLASSIFICATION	2.263439258280843E-7	DEFECT
// set parameters on each transformation, maybe something has changed //(e.g. value of file name parameter)	WITHOUT_CLASSIFICATION	0.9999999877957261	WITHOUT_CLASSIFICATION	1.2204273892636328E-8	DEFECT
// end of try-catch	WITHOUT_CLASSIFICATION	0.9999995521052819	WITHOUT_CLASSIFICATION	4.478947181212865E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999996958536274	WITHOUT_CLASSIFICATION	3.0414637271301487E-7	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9999940166248454	WITHOUT_CLASSIFICATION	5.983375154568819E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999209490427	WITHOUT_CLASSIFICATION	7.905095730336347E-8	DEFECT
// WARN: Don't use the StreamSource(File) ctor. It won't work with // xalan prior to 2.2 because of systemid bugs.	WITHOUT_CLASSIFICATION	0.6393052925521857	WITHOUT_CLASSIFICATION	0.3606947074478143	DEFECT
// Use a stream so that you can close it yourself quickly // and avoid keeping the handle until the object is garbaged. // (always keep control), otherwise you won't be able to delete // the file quickly on windows.	WITHOUT_CLASSIFICATION	0.9999969310044007	WITHOUT_CLASSIFICATION	3.068995599460482E-6	DEFECT
// not initialized yet, so create the factory	WITHOUT_CLASSIFICATION	0.9999996592856679	WITHOUT_CLASSIFICATION	3.407143321247102E-7	DEFECT
// specific attributes for the transformer	WITHOUT_CLASSIFICATION	0.9999999974227378	WITHOUT_CLASSIFICATION	2.57726225084091E-9	DEFECT
// kept for backwards compatibility	WITHOUT_CLASSIFICATION	0.9999987036056548	WITHOUT_CLASSIFICATION	1.2963943452009208E-6	DEFECT
// configure factory attributes	WITHOUT_CLASSIFICATION	0.9999988820620338	WITHOUT_CLASSIFICATION	1.1179379662370943E-6	DEFECT
// use XMLCatalog as the entity resolver and URI resolver	WITHOUT_CLASSIFICATION	0.9999824767039918	WITHOUT_CLASSIFICATION	1.7523296008262747E-5	DEFECT
// configure output properties	WITHOUT_CLASSIFICATION	0.9999990349448028	WITHOUT_CLASSIFICATION	9.650551971416763E-7	DEFECT
//copy the properties file	WITHOUT_CLASSIFICATION	0.9999940681245341	WITHOUT_CLASSIFICATION	5.931875465854571E-6	DEFECT
/* load properties from file if specified, otherwise        use Ant's properties */	WITHOUT_CLASSIFICATION	0.9999999977649826	WITHOUT_CLASSIFICATION	2.2350173732069913E-9	DEFECT
// add ant properties	WITHOUT_CLASSIFICATION	0.9999997564619484	WITHOUT_CLASSIFICATION	2.435380516174498E-7	DEFECT
//sort the list. Makes SCM and manual diffs easier.	WITHOUT_CLASSIFICATION	0.999999939781794	WITHOUT_CLASSIFICATION	6.021820602403363E-8	DEFECT
// create XML document	WITHOUT_CLASSIFICATION	0.9999989734326573	WITHOUT_CLASSIFICATION	1.0265673426666104E-6	DEFECT
// output properties	WITHOUT_CLASSIFICATION	0.9999980424175777	WITHOUT_CLASSIFICATION	1.957582422196506E-6	DEFECT
// build the command line from what we got the format // as specified in the CCM.EXE help	WITHOUT_CLASSIFICATION	0.9999994095950818	WITHOUT_CLASSIFICATION	5.904049181063456E-7	DEFECT
//create task ok, set this task as the default one	WITHOUT_CLASSIFICATION	0.9999999948090937	WITHOUT_CLASSIFICATION	5.190906280601119E-9	DEFECT
// implementation of org.apache.tools.ant.taskdefs.ExecuteStreamHandler interface	WITHOUT_CLASSIFICATION	0.9999997381976963	WITHOUT_CLASSIFICATION	2.618023037415335E-7	DEFECT
// build the command line from what we got the format is // ccm co /t .. files // as specified in the CCM.EXE help	WITHOUT_CLASSIFICATION	0.9999956456173558	WITHOUT_CLASSIFICATION	4.354382644292502E-6	DEFECT
// Default the viewpath to basedir if it is not specified	WITHOUT_CLASSIFICATION	0.9999978932549702	WITHOUT_CLASSIFICATION	2.1067450297648897E-6	DEFECT
/*         * If configured to not care about whether the element is         * already checked out to the current view.         * Then check to see if it is checked out.         */	WITHOUT_CLASSIFICATION	0.9999997877669742	WITHOUT_CLASSIFICATION	2.122330259040774E-7	DEFECT
// viewpath	WITHOUT_CLASSIFICATION	0.9999976834600826	WITHOUT_CLASSIFICATION	2.316539917415587E-6	DEFECT
// ClearCase items	WITHOUT_CLASSIFICATION	0.9999998597272459	WITHOUT_CLASSIFICATION	1.4027275401730558E-7	DEFECT
// -reserved	WITHOUT_CLASSIFICATION	0.999999101072738	WITHOUT_CLASSIFICATION	8.989272618413944E-7	DEFECT
// -unreserved	WITHOUT_CLASSIFICATION	0.9999987984229843	WITHOUT_CLASSIFICATION	1.2015770156307666E-6	DEFECT
// -out	WITHOUT_CLASSIFICATION	0.9999802883305328	WITHOUT_CLASSIFICATION	1.97116694671837E-5	DEFECT
// -ndata	WITHOUT_CLASSIFICATION	0.9999765920517927	WITHOUT_CLASSIFICATION	2.340794820727142E-5	DEFECT
// -version	WITHOUT_CLASSIFICATION	0.9999993258425098	WITHOUT_CLASSIFICATION	6.741574900886896E-7	DEFECT
// -nwarn	WITHOUT_CLASSIFICATION	0.9999917221704853	WITHOUT_CLASSIFICATION	8.277829514777685E-6	DEFECT
// viewpath	WITHOUT_CLASSIFICATION	0.9999976834600826	WITHOUT_CLASSIFICATION	2.316539917415587E-6	DEFECT
// build the command line from what we got the format is // cleartool lsco [options...] [viewpath ...] // as specified in the CLEARTOOL.EXE help	WITHOUT_CLASSIFICATION	0.9999994941736441	WITHOUT_CLASSIFICATION	5.058263559509882E-7	DEFECT
// -version	WITHOUT_CLASSIFICATION	0.9999993258425098	WITHOUT_CLASSIFICATION	6.741574900886896E-7	DEFECT
// -nwarn	WITHOUT_CLASSIFICATION	0.9999917221704853	WITHOUT_CLASSIFICATION	8.277829514777685E-6	DEFECT
// type value	WITHOUT_CLASSIFICATION	0.999996379708347	WITHOUT_CLASSIFICATION	3.620291652992059E-6	DEFECT
// -c	WITHOUT_CLASSIFICATION	0.9999905162072189	WITHOUT_CLASSIFICATION	9.483792781081416E-6	DEFECT
// -c	WITHOUT_CLASSIFICATION	0.9999905162072189	WITHOUT_CLASSIFICATION	9.483792781081416E-6	DEFECT
// -cfile	WITHOUT_CLASSIFICATION	0.9999980878535218	WITHOUT_CLASSIFICATION	1.9121464781825963E-6	DEFECT
// -cfile	WITHOUT_CLASSIFICATION	0.9999980878535218	WITHOUT_CLASSIFICATION	1.9121464781825963E-6	DEFECT
// -cfile	WITHOUT_CLASSIFICATION	0.9999980878535218	WITHOUT_CLASSIFICATION	1.9121464781825963E-6	DEFECT
// build the command line from what we got. the format is // cleartool checkin [options...] [viewpath ...] // as specified in the CLEARTOOL.EXE help	WITHOUT_CLASSIFICATION	0.9999999107633372	WITHOUT_CLASSIFICATION	8.923666283224591E-8	DEFECT
// -ptime	WITHOUT_CLASSIFICATION	0.9999984536936676	WITHOUT_CLASSIFICATION	1.5463063325047124E-6	DEFECT
// Throws EjbcException if unsuccessful	WITHOUT_CLASSIFICATION	0.9999888323496674	WITHOUT_CLASSIFICATION	1.1167650332673696E-5	DEFECT
// -keep	WITHOUT_CLASSIFICATION	0.9999891376783439	WITHOUT_CLASSIFICATION	1.0862321656199218E-5	DEFECT
// -identical	WITHOUT_CLASSIFICATION	0.999992990496451	WITHOUT_CLASSIFICATION	7.009503549018078E-6	DEFECT
// Check for required attributes	WITHOUT_CLASSIFICATION	0.9999994168098083	WITHOUT_CLASSIFICATION	5.831901917065507E-7	DEFECT
// build the command line from what we got. the format is // cleartool mkattr [options...] [viewpath ...] // as specified in the CLEARTOOL help	WITHOUT_CLASSIFICATION	0.9999997518522273	WITHOUT_CLASSIFICATION	2.4814777263728136E-7	DEFECT
// -replace	WITHOUT_CLASSIFICATION	0.999999627476077	WITHOUT_CLASSIFICATION	3.725239230814589E-7	DEFECT
// -recurse	WITHOUT_CLASSIFICATION	0.9999997838049466	WITHOUT_CLASSIFICATION	2.1619505338867414E-7	DEFECT
// type	WITHOUT_CLASSIFICATION	0.9999832013589723	WITHOUT_CLASSIFICATION	1.679864102763252E-5	DEFECT
// viewpath	WITHOUT_CLASSIFICATION	0.9999976834600826	WITHOUT_CLASSIFICATION	2.316539917415587E-6	DEFECT
// viewpath	WITHOUT_CLASSIFICATION	0.9999976834600826	WITHOUT_CLASSIFICATION	2.316539917415587E-6	DEFECT
// viewpath	WITHOUT_CLASSIFICATION	0.9999976834600826	WITHOUT_CLASSIFICATION	2.316539917415587E-6	DEFECT
// ClearCase items	WITHOUT_CLASSIFICATION	0.9999998597272459	WITHOUT_CLASSIFICATION	1.4027275401730558E-7	DEFECT
// ClearCase items	WITHOUT_CLASSIFICATION	0.9999998597272459	WITHOUT_CLASSIFICATION	1.4027275401730558E-7	DEFECT
// -nwarn	WITHOUT_CLASSIFICATION	0.9999917221704853	WITHOUT_CLASSIFICATION	8.277829514777685E-6	DEFECT
// -c	WITHOUT_CLASSIFICATION	0.9999905162072189	WITHOUT_CLASSIFICATION	9.483792781081416E-6	DEFECT
// -c	WITHOUT_CLASSIFICATION	0.9999905162072189	WITHOUT_CLASSIFICATION	9.483792781081416E-6	DEFECT
// -cfile	WITHOUT_CLASSIFICATION	0.9999980878535218	WITHOUT_CLASSIFICATION	1.9121464781825963E-6	DEFECT
// -ptime	WITHOUT_CLASSIFICATION	0.9999984536936676	WITHOUT_CLASSIFICATION	1.5463063325047124E-6	DEFECT
// -keep	WITHOUT_CLASSIFICATION	0.9999891376783439	WITHOUT_CLASSIFICATION	1.0862321656199218E-5	DEFECT
// build the command line from what we got the format is // cleartool lock [options...] // as specified in the CLEARTOOL.EXE help	WITHOUT_CLASSIFICATION	0.999999535467505	WITHOUT_CLASSIFICATION	4.645324950439943E-7	DEFECT
// Windows quoting of the value	WITHOUT_CLASSIFICATION	0.9999607490855095	WITHOUT_CLASSIFICATION	3.9250914490541756E-5	DEFECT
// build the command line from what we got. the format is // cleartool mkelem [options...] [viewpath ...] // as specified in the CLEARTOOL.EXE help	WITHOUT_CLASSIFICATION	0.9999991216788422	WITHOUT_CLASSIFICATION	8.78321157892783E-7	DEFECT
/*         * Should choose either -ci or -nco.         */	WITHOUT_CLASSIFICATION	0.9999993016223183	WITHOUT_CLASSIFICATION	6.983776817317376E-7	DEFECT
// -nco	WITHOUT_CLASSIFICATION	0.9999768092121253	WITHOUT_CLASSIFICATION	2.319078787467588E-5	DEFECT
// -nco	WITHOUT_CLASSIFICATION	0.9999768092121253	WITHOUT_CLASSIFICATION	2.319078787467588E-5	DEFECT
// Check the command line options	WITHOUT_CLASSIFICATION	0.9999998273606712	WITHOUT_CLASSIFICATION	1.7263932875567217E-7	DEFECT
// -ci	WITHOUT_CLASSIFICATION	0.9999864079080986	WITHOUT_CLASSIFICATION	1.3592091901496078E-5	DEFECT
// object selector	WITHOUT_CLASSIFICATION	0.9999996766828998	WITHOUT_CLASSIFICATION	3.233171001493686E-7	DEFECT
// build the command line from what we got the format is // cleartool uncheckout [options...] [viewpath ...] // as specified in the CLEARTOOL.EXE help	WITHOUT_CLASSIFICATION	0.999999835527051	WITHOUT_CLASSIFICATION	1.6447294905156199E-7	DEFECT
// -master	WITHOUT_CLASSIFICATION	0.99999984648184	WITHOUT_CLASSIFICATION	1.5351816000865425E-7	DEFECT
// -rm	WITHOUT_CLASSIFICATION	0.9999954245437792	WITHOUT_CLASSIFICATION	4.5754562207484574E-6	DEFECT
// -eltype	WITHOUT_CLASSIFICATION	0.9999875734798694	WITHOUT_CLASSIFICATION	1.2426520130515077E-5	DEFECT
// viewpath	WITHOUT_CLASSIFICATION	0.9999976834600826	WITHOUT_CLASSIFICATION	2.316539917415587E-6	DEFECT
// -version	WITHOUT_CLASSIFICATION	0.9999993258425098	WITHOUT_CLASSIFICATION	6.741574900886896E-7	DEFECT
// -c	WITHOUT_CLASSIFICATION	0.9999905162072189	WITHOUT_CLASSIFICATION	9.483792781081416E-6	DEFECT
// -c	WITHOUT_CLASSIFICATION	0.9999905162072189	WITHOUT_CLASSIFICATION	9.483792781081416E-6	DEFECT
// -cfile	WITHOUT_CLASSIFICATION	0.9999980878535218	WITHOUT_CLASSIFICATION	1.9121464781825963E-6	DEFECT
// -cfile	WITHOUT_CLASSIFICATION	0.9999980878535218	WITHOUT_CLASSIFICATION	1.9121464781825963E-6	DEFECT
// -rmall -force	WITHOUT_CLASSIFICATION	0.999999347877319	WITHOUT_CLASSIFICATION	6.521226810243147E-7	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999874056363424	WITHOUT_CLASSIFICATION	1.2594363657753147E-5	DEFECT
// build the command line from what we got. the format is // cleartool checkin [options...] [viewpath ...] // as specified in the CLEARTOOL.EXE help	WITHOUT_CLASSIFICATION	0.9999999107633372	WITHOUT_CLASSIFICATION	8.923666283224591E-8	DEFECT
// -identical	WITHOUT_CLASSIFICATION	0.999992990496451	WITHOUT_CLASSIFICATION	7.009503549018078E-6	DEFECT
// Check for required attributes	WITHOUT_CLASSIFICATION	0.9999994168098083	WITHOUT_CLASSIFICATION	5.831901917065507E-7	DEFECT
// Check for required attributes	WITHOUT_CLASSIFICATION	0.9999994168098083	WITHOUT_CLASSIFICATION	5.831901917065507E-7	DEFECT
// -replace	WITHOUT_CLASSIFICATION	0.999999627476077	WITHOUT_CLASSIFICATION	3.725239230814589E-7	DEFECT
// -recurse	WITHOUT_CLASSIFICATION	0.9999997838049466	WITHOUT_CLASSIFICATION	2.1619505338867414E-7	DEFECT
// type	WITHOUT_CLASSIFICATION	0.9999832013589723	WITHOUT_CLASSIFICATION	1.679864102763252E-5	DEFECT
// Returns list of EJBs for processing	WITHOUT_CLASSIFICATION	0.9999993467982244	WITHOUT_CLASSIFICATION	6.532017755434222E-7	DEFECT
// build the command line from what we got. the format is // cleartool rmtype [options...] type-selector... // as specified in the CLEARTOOL help	WITHOUT_CLASSIFICATION	0.9999995572587937	WITHOUT_CLASSIFICATION	4.4274120631695146E-7	DEFECT
// type-kind:type-name	WITHOUT_CLASSIFICATION	0.9999250495130626	WITHOUT_CLASSIFICATION	7.49504869373824E-5	DEFECT
// -ignore	WITHOUT_CLASSIFICATION	0.9999982522401728	WITHOUT_CLASSIFICATION	1.747759827285019E-6	DEFECT
// Return the type-selector	WITHOUT_CLASSIFICATION	0.999999295120382	WITHOUT_CLASSIFICATION	7.048796180501403E-7	DEFECT
// -full	WITHOUT_CLASSIFICATION	0.999984538964763	WITHOUT_CLASSIFICATION	1.546103523703462E-5	DEFECT
// -incremental	WITHOUT_CLASSIFICATION	0.9999959856765308	WITHOUT_CLASSIFICATION	4.014323469120754E-6	DEFECT
// -nlabel	WITHOUT_CLASSIFICATION	0.9999979969503503	WITHOUT_CLASSIFICATION	2.003049649692343E-6	DEFECT
// baseline_root_name	WITHOUT_CLASSIFICATION	0.9999999510800696	WITHOUT_CLASSIFICATION	4.891993040205695E-8	DEFECT
// viewpath	WITHOUT_CLASSIFICATION	0.9999976834600826	WITHOUT_CLASSIFICATION	2.316539917415587E-6	DEFECT
// -c	WITHOUT_CLASSIFICATION	0.9999905162072189	WITHOUT_CLASSIFICATION	9.483792781081416E-6	DEFECT
// -cfile	WITHOUT_CLASSIFICATION	0.9999980878535218	WITHOUT_CLASSIFICATION	1.9121464781825963E-6	DEFECT
// -ptime	WITHOUT_CLASSIFICATION	0.9999984536936676	WITHOUT_CLASSIFICATION	1.5463063325047124E-6	DEFECT
// Check for required attributes	WITHOUT_CLASSIFICATION	0.9999994168098083	WITHOUT_CLASSIFICATION	5.831901917065507E-7	DEFECT
// -replace	WITHOUT_CLASSIFICATION	0.999999627476077	WITHOUT_CLASSIFICATION	3.725239230814589E-7	DEFECT
// -replace	WITHOUT_CLASSIFICATION	0.999999627476077	WITHOUT_CLASSIFICATION	3.725239230814589E-7	DEFECT
// build the command line from what we got the format is // cleartool lock [options...] // as specified in the CLEARTOOL.EXE help	WITHOUT_CLASSIFICATION	0.999999535467505	WITHOUT_CLASSIFICATION	4.645324950439943E-7	DEFECT
// Check the command line options	WITHOUT_CLASSIFICATION	0.9999998273606712	WITHOUT_CLASSIFICATION	1.7263932875567217E-7	DEFECT
// Check the command line options	WITHOUT_CLASSIFICATION	0.9999998273606712	WITHOUT_CLASSIFICATION	1.7263932875567217E-7	DEFECT
// object selector	WITHOUT_CLASSIFICATION	0.9999996766828998	WITHOUT_CLASSIFICATION	3.233171001493686E-7	DEFECT
// -ordinary	WITHOUT_CLASSIFICATION	0.9999966192754363	WITHOUT_CLASSIFICATION	3.380724563717924E-6	DEFECT
// build the command line from what we got the format is // cleartool update [options...] [viewpath ...] // as specified in the CLEARTOOL.EXE help	WITHOUT_CLASSIFICATION	0.999999663083522	WITHOUT_CLASSIFICATION	3.369164780153303E-7	DEFECT
// For debugging	WITHOUT_CLASSIFICATION	0.9999936010955859	WITHOUT_CLASSIFICATION	6.3989044141686425E-6	DEFECT
// -log logname	WITHOUT_CLASSIFICATION	0.9999980884628455	WITHOUT_CLASSIFICATION	1.911537154441375E-6	DEFECT
// -graphical	WITHOUT_CLASSIFICATION	0.999996861409435	WITHOUT_CLASSIFICATION	3.1385905649619008E-6	DEFECT
// -overwrite	WITHOUT_CLASSIFICATION	0.9999988516959148	WITHOUT_CLASSIFICATION	1.1483040852422476E-6	DEFECT
// -global	WITHOUT_CLASSIFICATION	0.9999960339401321	WITHOUT_CLASSIFICATION	3.966059867843926E-6	DEFECT
// -rename	WITHOUT_CLASSIFICATION	0.99999786987608	WITHOUT_CLASSIFICATION	2.1301239199901974E-6	DEFECT
// -obsolete	WITHOUT_CLASSIFICATION	0.9999988535571824	WITHOUT_CLASSIFICATION	1.1464428175426463E-6	DEFECT
// -noverwrite	WITHOUT_CLASSIFICATION	0.999998801901024	WITHOUT_CLASSIFICATION	1.1980989761041847E-6	DEFECT
// build the command line from what we got. the format is // cleartool mklbtype [options...] type-selector... // as specified in the CLEARTOOL help	WITHOUT_CLASSIFICATION	0.9999989454100248	WITHOUT_CLASSIFICATION	1.0545899752433775E-6	DEFECT
// -ctime	WITHOUT_CLASSIFICATION	0.9999982844665756	WITHOUT_CLASSIFICATION	1.7155334243665019E-6	DEFECT
// -pbranch	WITHOUT_CLASSIFICATION	0.99999944661094	WITHOUT_CLASSIFICATION	5.533890600847812E-7	DEFECT
// File[] filesInDir = directory.listFiles();	WITHOUT_CLASSIFICATION	0.9999991116981439	WITHOUT_CLASSIFICATION	8.883018560566572E-7	DEFECT
// -shared	WITHOUT_CLASSIFICATION	0.9999994410674493	WITHOUT_CLASSIFICATION	5.58932550591287E-7	DEFECT
// type-name@vob	WITHOUT_CLASSIFICATION	0.9999910418619244	WITHOUT_CLASSIFICATION	8.95813807559595E-6	DEFECT
// we have a file. create a stream for it	WITHOUT_CLASSIFICATION	0.9999999184959906	WITHOUT_CLASSIFICATION	8.150400946238032E-8	DEFECT
// default directory to the project's base directory	WITHOUT_CLASSIFICATION	0.999999338005952	WITHOUT_CLASSIFICATION	6.619940479631892E-7	DEFECT
// assume the worst	WITHOUT_CLASSIFICATION	0.9999998119920137	WITHOUT_CLASSIFICATION	1.8800798637794578E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999209490427	WITHOUT_CLASSIFICATION	7.905095730336347E-8	DEFECT
// create a data input stream from the jar // input stream	WITHOUT_CLASSIFICATION	0.999999760102707	WITHOUT_CLASSIFICATION	2.398972930012402E-7	DEFECT
// this iterator is exhausted. Can we pop one off the stack	WITHOUT_CLASSIFICATION	0.9999997985068454	WITHOUT_CLASSIFICATION	2.0149315454387773E-7	DEFECT
// we get the root classes and build up a set of // classes upon which they depend	WITHOUT_CLASSIFICATION	0.9999963923914749	WITHOUT_CLASSIFICATION	3.6076085250777736E-6	DEFECT
// now recover all the dependencies collected and add to the list.	WITHOUT_CLASSIFICATION	0.9999999403750496	WITHOUT_CLASSIFICATION	5.962495037444604E-8	DEFECT
// pick up the last round of dependencies that were determined	WITHOUT_CLASSIFICATION	0.9999998697645953	WITHOUT_CLASSIFICATION	1.302354047203436E-7	DEFECT
// right we have a good looking class file.	WITHOUT_CLASSIFICATION	0.9998653164456762	WITHOUT_CLASSIFICATION	1.346835543237664E-4	DEFECT
/* int minorVersion = */	WITHOUT_CLASSIFICATION	0.999999172936729	WITHOUT_CLASSIFICATION	8.270632709518248E-7	DEFECT
/* int majorVersion = */	WITHOUT_CLASSIFICATION	0.9999989602526251	WITHOUT_CLASSIFICATION	1.0397473748200442E-6	DEFECT
/* int accessFlags = */	WITHOUT_CLASSIFICATION	0.9999948937309103	WITHOUT_CLASSIFICATION	5.106269089588854E-6	DEFECT
/* int superClassIndex = */	WITHOUT_CLASSIFICATION	0.9999972139263229	WITHOUT_CLASSIFICATION	2.786073677052773E-6	DEFECT
// read the dependency cache from the disk	WITHOUT_CLASSIFICATION	0.9999995483147082	WITHOUT_CLASSIFICATION	4.516852917696885E-7	DEFECT
// try to read the dependency info from the map if it is // not out of date	WITHOUT_CLASSIFICATION	0.9999991613907686	WITHOUT_CLASSIFICATION	8.386092314350572E-7	DEFECT
// not cached - so need to read directly from the class file	WITHOUT_CLASSIFICATION	0.9999619590520614	WITHOUT_CLASSIFICATION	3.80409479385422E-5	DEFECT
// This class depends on each class in the dependency list. For each // one of those, add this class into their affected classes list	WITHOUT_CLASSIFICATION	0.9999970134612605	WITHOUT_CLASSIFICATION	2.9865387394686804E-6	DEFECT
// now determine which jars each class depends upon	WITHOUT_CLASSIFICATION	0.9999996056889319	WITHOUT_CLASSIFICATION	3.943110681456618E-7	DEFECT
// we need to add this jar to the list for this class.	WITHOUT_CLASSIFICATION	0.9999996240426369	WITHOUT_CLASSIFICATION	3.75957363107846E-7	DEFECT
// write the dependency cache to the disk	WITHOUT_CLASSIFICATION	0.9999994804391646	WITHOUT_CLASSIFICATION	5.195608354544469E-7	DEFECT
// need to delete the main class	WITHOUT_CLASSIFICATION	0.99999664574784	WITHOUT_CLASSIFICATION	3.354252160068693E-6	DEFECT
//downgrade warnings on RMI stublike classes, as they are generated //by rmic, so there is no need to tell the user that their source is //missing.	WITHOUT_CLASSIFICATION	0.9999986790931826	WITHOUT_CLASSIFICATION	1.3209068173418635E-6	DEFECT
// now check classpath file dependencies	WITHOUT_CLASSIFICATION	0.9999999845991148	WITHOUT_CLASSIFICATION	1.540088527905229E-8	DEFECT
// if we have no info about the class - it may have been deleted already and we // are using cached info.	WITHOUT_CLASSIFICATION	0.9999999837060215	WITHOUT_CLASSIFICATION	1.6293978477015124E-8	DEFECT
// there was no class file. add this class to the list	WITHOUT_CLASSIFICATION	0.9999946152172996	WITHOUT_CLASSIFICATION	5.384782700399148E-6	DEFECT
// break the classLocations into its components.	WITHOUT_CLASSIFICATION	0.9999987946301561	WITHOUT_CLASSIFICATION	1.2053698439837846E-6	DEFECT
// search the various source path entries	WITHOUT_CLASSIFICATION	0.999999898856676	WITHOUT_CLASSIFICATION	1.0114332398160548E-7	DEFECT
// create a data input stream from the jar input stream	WITHOUT_CLASSIFICATION	0.9999997909631266	WITHOUT_CLASSIFICATION	2.0903687343197157E-7	DEFECT
// add null entries for any additional slots required.	WITHOUT_CLASSIFICATION	0.999526985581672	WITHOUT_CLASSIFICATION	4.730144183279249E-4	DEFECT
// end execute	WITHOUT_CLASSIFICATION	0.9999798799165721	WITHOUT_CLASSIFICATION	2.0120083427872646E-5	DEFECT
//in verbose mode we always log stuff	WITHOUT_CLASSIFICATION	0.99999701296789	WITHOUT_CLASSIFICATION	2.987032110033292E-6	DEFECT
//the simple action is to send the command line in as is	WITHOUT_CLASSIFICATION	0.9999939170326839	WITHOUT_CLASSIFICATION	6.082967316014118E-6	DEFECT
// Throws EjbcException	WITHOUT_CLASSIFICATION	0.9999942331471305	WITHOUT_CLASSIFICATION	5.766852869410353E-6	DEFECT
// VSS items	WITHOUT_CLASSIFICATION	0.9999983963549636	WITHOUT_CLASSIFICATION	1.6036450364444224E-6	DEFECT
// The zero index is never present in the constant pool itself so // we add a null entry for it	WITHOUT_CLASSIFICATION	0.9999860506959981	WITHOUT_CLASSIFICATION	1.394930400185598E-5	DEFECT
//but for big operations, we save all the params to a temp file //and set @tmpfile as the command -then we remember to delete the tempfile //afterwards	WITHOUT_CLASSIFICATION	0.9999999238896297	WITHOUT_CLASSIFICATION	7.61103703563118E-8	DEFECT
//start at 1 because element 0 is the executable name	WITHOUT_CLASSIFICATION	0.9999996286383258	WITHOUT_CLASSIFICATION	3.7136167409662025E-7	DEFECT
//add to the list	WITHOUT_CLASSIFICATION	0.9999996926193842	WITHOUT_CLASSIFICATION	3.073806158368111E-7	DEFECT
//fill in args	WITHOUT_CLASSIFICATION	0.9999968638444967	WITHOUT_CLASSIFICATION	3.1361555033043883E-6	DEFECT
//fill in args	WITHOUT_CLASSIFICATION	0.9999968638444967	WITHOUT_CLASSIFICATION	3.1361555033043883E-6	DEFECT
//set source and rebuild options	WITHOUT_CLASSIFICATION	0.9999995201554196	WITHOUT_CLASSIFICATION	4.798445803349596E-7	DEFECT
//rebuild unless the dest file is newer than the source file	WITHOUT_CLASSIFICATION	0.9999996930791883	WITHOUT_CLASSIFICATION	3.0692081167299545E-7	DEFECT
//mark for a rebuild if the dest file is newer	WITHOUT_CLASSIFICATION	0.9999998914852078	WITHOUT_CLASSIFICATION	1.0851479219347818E-7	DEFECT
// Mono 1.0's wsdl doesn't deal with absolute paths	WITHOUT_CLASSIFICATION	0.9999984686008228	WITHOUT_CLASSIFICATION	1.5313991771538095E-6	DEFECT
//add in any extra files. //this is an error in mono, but we do not warn on it as they may fix that outside //the ant build cycle.	WITHOUT_CLASSIFICATION	0.9998838965237028	WITHOUT_CLASSIFICATION	1.1610347629730265E-4	DEFECT
//mark for a rebuild if we are newer	WITHOUT_CLASSIFICATION	0.9999899362241634	WITHOUT_CLASSIFICATION	1.0063775836623858E-5	DEFECT
//conditionally compile	WITHOUT_CLASSIFICATION	0.9998539662837144	WITHOUT_CLASSIFICATION	1.4603371628570791E-4	DEFECT
// Errors	WITHOUT_CLASSIFICATION	0.999973255878874	WITHOUT_CLASSIFICATION	2.6744121126037396E-5	DEFECT
//bail on no references	WITHOUT_CLASSIFICATION	0.9999997260114541	WITHOUT_CLASSIFICATION	2.7398854586168603E-7	DEFECT
//bail on no references	WITHOUT_CLASSIFICATION	0.9999997260114541	WITHOUT_CLASSIFICATION	2.7398854586168603E-7	DEFECT
//demand create pathlist	WITHOUT_CLASSIFICATION	0.9999998838615028	WITHOUT_CLASSIFICATION	1.1613849719687283E-7	DEFECT
//bail on no references listed	WITHOUT_CLASSIFICATION	0.9999999435059951	WITHOUT_CLASSIFICATION	5.649400497037823E-8	DEFECT
//loop through all definitions	WITHOUT_CLASSIFICATION	0.9999997230940674	WITHOUT_CLASSIFICATION	2.769059326640039E-7	DEFECT
//add those that are set, and a delimiter	WITHOUT_CLASSIFICATION	0.9999997779524271	WITHOUT_CLASSIFICATION	2.2204757279847722E-7	DEFECT
//set up response file options	WITHOUT_CLASSIFICATION	0.9999999914521206	WITHOUT_CLASSIFICATION	8.547879471121786E-9	DEFECT
//if the refs are out of date, force a build.	WITHOUT_CLASSIFICATION	0.999999142991849	WITHOUT_CLASSIFICATION	8.570081510550943E-7	DEFECT
//bail out early if there were no files	WITHOUT_CLASSIFICATION	0.9999999020918354	WITHOUT_CLASSIFICATION	9.790816447440271E-8	DEFECT
//now scan the hashtable and add the files	WITHOUT_CLASSIFICATION	0.999997636952503	WITHOUT_CLASSIFICATION	2.363047496946601E-6	DEFECT
//add the source file	WITHOUT_CLASSIFICATION	0.999999881063474	WITHOUT_CLASSIFICATION	1.1893652590243384E-7	DEFECT
//now run	WITHOUT_CLASSIFICATION	0.9998952772238525	WITHOUT_CLASSIFICATION	1.0472277614753629E-4	DEFECT
//forcibly delete the output file in case of trouble	WITHOUT_CLASSIFICATION	0.9999999673287814	WITHOUT_CLASSIFICATION	3.2671218715046465E-8	DEFECT
//then rethrow the exception	WITHOUT_CLASSIFICATION	0.9999760608997681	WITHOUT_CLASSIFICATION	2.3939100231920266E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999209490427	WITHOUT_CLASSIFICATION	7.905095730336347E-8	DEFECT
// CheckStyle:ConstantNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9999995903148149	WITHOUT_CLASSIFICATION	4.096851851945928E-7	DEFECT
// CheckStyle:MethodNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9999996790301204	WITHOUT_CLASSIFICATION	3.209698796376357E-7	DEFECT
// CheckStyle:ConstantNameCheck ON // CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999882939378	WITHOUT_CLASSIFICATION	1.1706062252228547E-8	DEFECT
// end execute	WITHOUT_CLASSIFICATION	0.9999798799165721	WITHOUT_CLASSIFICATION	2.0120083427872646E-5	DEFECT
//fill in args	WITHOUT_CLASSIFICATION	0.9999968638444967	WITHOUT_CLASSIFICATION	3.1361555033043883E-6	DEFECT
//fill in args	WITHOUT_CLASSIFICATION	0.9999968638444967	WITHOUT_CLASSIFICATION	3.1361555033043883E-6	DEFECT
//rebuild unless the dest file is newer than the source file	WITHOUT_CLASSIFICATION	0.9999996930791883	WITHOUT_CLASSIFICATION	3.0692081167299545E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999209490427	WITHOUT_CLASSIFICATION	7.905095730336347E-8	DEFECT
//determine directory: resourceDir if set, //the dir of the destFile if not	WITHOUT_CLASSIFICATION	0.9999974610156083	WITHOUT_CLASSIFICATION	2.538984391822295E-6	DEFECT
//Public //Private //Family //Assembly //Family and Assembly //Family or Assembly //Private Scope	WITHOUT_CLASSIFICATION	0.9999985390427627	WITHOUT_CLASSIFICATION	1.4609572372982537E-6	DEFECT
//scan for an implicit fileset if there was a srcdir set //or there was no srcDir set but there was no contained classes	WITHOUT_CLASSIFICATION	0.999999999722884	WITHOUT_CLASSIFICATION	2.771159781298386E-10	DEFECT
//if there is no src dir here, set it	WITHOUT_CLASSIFICATION	0.9999996579508498	WITHOUT_CLASSIFICATION	3.420491501936773E-7	DEFECT
//get dependencies list.	WITHOUT_CLASSIFICATION	0.9999997029487753	WITHOUT_CLASSIFICATION	2.9705122472851024E-7	DEFECT
//get any included source directories	WITHOUT_CLASSIFICATION	0.9999996092026248	WITHOUT_CLASSIFICATION	3.9079737529538743E-7	DEFECT
//add the files to the command	WITHOUT_CLASSIFICATION	0.9999926408112005	WITHOUT_CLASSIFICATION	7.359188799527355E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc // CheckStyle:ConstantNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.999999970444934	WITHOUT_CLASSIFICATION	2.9555065872963974E-8	DEFECT
// CheckStyle:MethodNameCheck ON	WITHOUT_CLASSIFICATION	0.9999998386334629	WITHOUT_CLASSIFICATION	1.6136653711176923E-7	DEFECT
/*         *  space for more argumentativeness         *  command.addArgument();         *  command.addArgument();         */	WITHOUT_CLASSIFICATION	0.9999967245950108	WITHOUT_CLASSIFICATION	3.2754049891970434E-6	DEFECT
// ends with '.' or null	WITHOUT_CLASSIFICATION	0.9999900894834304	WITHOUT_CLASSIFICATION	9.910516569659728E-6	DEFECT
/* Constants used for the "beantype" attribute */	WITHOUT_CLASSIFICATION	0.9999998866595284	WITHOUT_CLASSIFICATION	1.1334047152639136E-7	DEFECT
/* Filenames of the standard EJB descriptor and the iAS-specific descriptor */	WITHOUT_CLASSIFICATION	0.9999990374046932	WITHOUT_CLASSIFICATION	9.62595306748093E-7	DEFECT
/* Classpath used when the iAS ejbc is called */	WITHOUT_CLASSIFICATION	0.9999979560265669	WITHOUT_CLASSIFICATION	2.0439734329578634E-6	DEFECT
/* Options passed to the iAS ejbc */	WITHOUT_CLASSIFICATION	0.9999980507741244	WITHOUT_CLASSIFICATION	1.9492258756166818E-6	DEFECT
/* iAS installation directory (used if ejbc isn't on user's PATH) */	WITHOUT_CLASSIFICATION	0.9999986798328178	WITHOUT_CLASSIFICATION	1.3201671823014832E-6	DEFECT
/* Parser and handler used to process both EJB descriptor files */	WITHOUT_CLASSIFICATION	0.9999999251520457	WITHOUT_CLASSIFICATION	7.484795425609509E-8	DEFECT
/* Value of the display-name element read from the standard EJB descriptor */	WITHOUT_CLASSIFICATION	0.9999986084662358	WITHOUT_CLASSIFICATION	1.3915337642059908E-6	DEFECT
/*         * Parse the classpath into it's individual elements and store the         * results in the "classpathElements" instance variable.         */	WITHOUT_CLASSIFICATION	0.999999971798988	WITHOUT_CLASSIFICATION	2.820101202650483E-8	DEFECT
/* If the -classpath flag isn't specified, use the system classpath */	WITHOUT_CLASSIFICATION	0.9999945658201544	WITHOUT_CLASSIFICATION	5.434179845644835E-6	DEFECT
/*         * If the -d flag isn't specified, use the working directory as the         * destination directory         */	WITHOUT_CLASSIFICATION	0.9999946269438884	WITHOUT_CLASSIFICATION	5.373056111574168E-6	DEFECT
/* Construct a SAXParser used to process the descriptors */	WITHOUT_CLASSIFICATION	0.9999999090544852	WITHOUT_CLASSIFICATION	9.094551476325174E-8	DEFECT
// SAXException or ParserConfigurationException may be thrown	WITHOUT_CLASSIFICATION	0.9999952105794859	WITHOUT_CLASSIFICATION	4.789420514029544E-6	DEFECT
/* Build and populate an instance of the ejbc utility */	WITHOUT_CLASSIFICATION	0.9999965296607797	WITHOUT_CLASSIFICATION	3.470339220330474E-6	DEFECT
/* Execute the ejbc utility -- stubs/skeletons are rebuilt, if needed */	WITHOUT_CLASSIFICATION	0.9999997968378489	WITHOUT_CLASSIFICATION	2.0316215109601925E-7	DEFECT
// Add one for the "\"	WITHOUT_CLASSIFICATION	0.9999994195786871	WITHOUT_CLASSIFICATION	5.804213127922894E-7	DEFECT
/* Concatenate all of the command line arguments into a single String */	WITHOUT_CLASSIFICATION	0.9999980879223177	WITHOUT_CLASSIFICATION	1.9120776823044033E-6	DEFECT
/* If an iAS home directory is specified, prepend it to the commmand */	WITHOUT_CLASSIFICATION	0.9999959304349652	WITHOUT_CLASSIFICATION	4.069565034949344E-6	DEFECT
/*         * The EJB information is gathered from the standard XML EJB descriptor         * and the iAS-specific XML EJB descriptor using a SAX parser.         */	WITHOUT_CLASSIFICATION	0.9999930450623292	WITHOUT_CLASSIFICATION	6.954937670780915E-6	DEFECT
/* OPTIONAL COMMAND LINE PARAMETERS */	WITHOUT_CLASSIFICATION	0.9999904181389101	WITHOUT_CLASSIFICATION	9.581861089896309E-6	DEFECT
/* No beantype flag is needed for an entity bean */	WITHOUT_CLASSIFICATION	0.9999209415366737	WITHOUT_CLASSIFICATION	7.905846332635321E-5	DEFECT
/* REQUIRED COMMAND LINE PARAMETERS */	WITHOUT_CLASSIFICATION	0.9999899283302196	WITHOUT_CLASSIFICATION	1.0071669780288802E-5	DEFECT
/* Convert the List into an Array and return it */	WITHOUT_CLASSIFICATION	0.9999997297559209	WITHOUT_CLASSIFICATION	2.7024407910545384E-7	DEFECT
/* Inner classes follow */	WITHOUT_CLASSIFICATION	0.9999981802733854	WITHOUT_CLASSIFICATION	1.8197266146304336E-6	DEFECT
// End of EjbcException inner class	WITHOUT_CLASSIFICATION	0.9999713235946178	WITHOUT_CLASSIFICATION	2.8676405382056568E-5	DEFECT
// Tracks current element // Tracks current text data // "session" or "entity"	WITHOUT_CLASSIFICATION	0.999995868663846	WITHOUT_CLASSIFICATION	4.131336153967179E-6	DEFECT
/* Search the resource Map and (if not found) file Map */	WITHOUT_CLASSIFICATION	0.9999980129722417	WITHOUT_CLASSIFICATION	1.9870277584268808E-6	DEFECT
/* A new element has started, so reset the text being captured */	WITHOUT_CLASSIFICATION	0.9999999586968324	WITHOUT_CLASSIFICATION	4.130316765770547E-8	DEFECT
/*             * If this is a standard EJB 1.1 descriptor, we are looking for one             * set of data, while if this is an iAS-specific descriptor, we're             * looking for different set of data.  Hand the processing off to             * the appropriate method.             */	WITHOUT_CLASSIFICATION	0.9999999955820389	WITHOUT_CLASSIFICATION	4.41796118934261E-9	DEFECT
// End of EjbcHandler inner class	WITHOUT_CLASSIFICATION	0.999998759005477	WITHOUT_CLASSIFICATION	1.2409945229816001E-6	DEFECT
/*         * Below are getter's and setter's for each of the instance variables.         * Note that (in addition to supporting setters with the same type as         * the instance variable) a setter is provided with takes a String         * argument -- this are provided so the XML document handler can set         * the EJB values using the Strings it parses.         */	WITHOUT_CLASSIFICATION	0.9997655526034745	WITHOUT_CLASSIFICATION	2.3444739652533935E-4	DEFECT
/* Check that the specified instance variables are valid */	WITHOUT_CLASSIFICATION	0.9999999899065732	WITHOUT_CLASSIFICATION	1.0093426794405321E-8	DEFECT
/* Check that the EJB "source" classes all exist */	WITHOUT_CLASSIFICATION	0.9999989293966819	WITHOUT_CLASSIFICATION	1.0706033181151486E-6	DEFECT
// The timestamp of the "newest" class // Timestamp for a given class // File for the remote interface class // File for the home interface class // File for the EJB implementation class // File for the EJB primary key class	WITHOUT_CLASSIFICATION	0.9985154357429634	WITHOUT_CLASSIFICATION	0.001484564257036549	DEFECT
/* Check the timestamp on the remote interface */	WITHOUT_CLASSIFICATION	0.9999994871122703	WITHOUT_CLASSIFICATION	5.128877297315787E-7	DEFECT
/* Check the timestamp on the home interface */	WITHOUT_CLASSIFICATION	0.9999998995192596	WITHOUT_CLASSIFICATION	1.0048074034436823E-7	DEFECT
/* Check the timestamp of the primary key class */	WITHOUT_CLASSIFICATION	0.9999998086546398	WITHOUT_CLASSIFICATION	1.9134536017054863E-7	DEFECT
// List of all stubs & skels // Earliest mod time // Has each been found?	WITHOUT_CLASSIFICATION	0.9999999875722966	WITHOUT_CLASSIFICATION	1.2427703444625172E-8	DEFECT
/*             * Loop through each stub/skeleton class that must be generated, and             * determine (if all exist) which file has the most recent timestamp             */	WITHOUT_CLASSIFICATION	0.9999990270685863	WITHOUT_CLASSIFICATION	9.729314136999884E-7	DEFECT
/*                 * Add each stub/skeleton class to the list of EJB files.  Note                 * that each class is added even if it doesn't exist now.                 */	WITHOUT_CLASSIFICATION	0.9999898378075854	WITHOUT_CLASSIFICATION	1.0162192414665071E-5	DEFECT
/* Keep track of the oldest modification timestamp */	WITHOUT_CLASSIFICATION	0.999998865987135	WITHOUT_CLASSIFICATION	1.134012864897097E-6	DEFECT
// End of EjbInfo inner class	WITHOUT_CLASSIFICATION	0.9999931733220078	WITHOUT_CLASSIFICATION	6.826677992214597E-6	DEFECT
// Fully qualified name of the Java class // Name of the package for this class // Name of the class without the package	WITHOUT_CLASSIFICATION	0.9999998523067214	WITHOUT_CLASSIFICATION	1.4769327852410225E-7	DEFECT
// End of Classname inner class	WITHOUT_CLASSIFICATION	0.9999951625489221	WITHOUT_CLASSIFICATION	4.8374510779895845E-6	DEFECT
// Stream to read and redirect to standard output	WITHOUT_CLASSIFICATION	0.9999992694061057	WITHOUT_CLASSIFICATION	7.305938942951332E-7	DEFECT
// End of RedirectOutput inner class	WITHOUT_CLASSIFICATION	0.9998574219317649	WITHOUT_CLASSIFICATION	1.425780682351926E-4	DEFECT
// add -file xxxxx to the commandline	WITHOUT_CLASSIFICATION	0.9999991528093476	WITHOUT_CLASSIFICATION	8.471906524792398E-7	DEFECT
//clientname = ejbjarfile+client.jar	WITHOUT_CLASSIFICATION	0.9999998525683055	WITHOUT_CLASSIFICATION	1.4743169460809633E-7	DEFECT
// end of else	WITHOUT_CLASSIFICATION	0.9999989163365574	WITHOUT_CLASSIFICATION	1.0836634425825626E-6	DEFECT
// ejb jar file	WITHOUT_CLASSIFICATION	0.99999989101268	WITHOUT_CLASSIFICATION	1.0898731992270973E-7	DEFECT
// ejb jar file	WITHOUT_CLASSIFICATION	0.99999989101268	WITHOUT_CLASSIFICATION	1.0898731992270973E-7	DEFECT
//client jar file	WITHOUT_CLASSIFICATION	0.9999999282841995	WITHOUT_CLASSIFICATION	7.171580048512423E-8	DEFECT
//client jar file	WITHOUT_CLASSIFICATION	0.9999999282841995	WITHOUT_CLASSIFICATION	7.171580048512423E-8	DEFECT
// Have to catch this because of the semantics of calling main()	WITHOUT_CLASSIFICATION	0.9999945101483764	WITHOUT_CLASSIFICATION	5.4898516235535954E-6	DEFECT
// Have to catch this because of the semantics of calling main()	WITHOUT_CLASSIFICATION	0.9999945101483764	WITHOUT_CLASSIFICATION	5.4898516235535954E-6	DEFECT
//classpath	WITHOUT_CLASSIFICATION	0.9999961478127128	WITHOUT_CLASSIFICATION	3.8521872872204E-6	DEFECT
/* ------------- */	WITHOUT_CLASSIFICATION	0.9999780617975018	WITHOUT_CLASSIFICATION	2.193820249825295E-5	DEFECT
/* ------------- */	WITHOUT_CLASSIFICATION	0.9999780617975018	WITHOUT_CLASSIFICATION	2.193820249825295E-5	DEFECT
/* GenIC options */	WITHOUT_CLASSIFICATION	0.9999989078668072	WITHOUT_CLASSIFICATION	1.0921331928399327E-6	DEFECT
/* other options */	WITHOUT_CLASSIFICATION	0.9999994127661402	WITHOUT_CLASSIFICATION	5.872338596395717E-7	DEFECT
/* -------------------- */	WITHOUT_CLASSIFICATION	0.9999859304828134	WITHOUT_CLASSIFICATION	1.406951718672585E-5	DEFECT
/* -------------------- */	WITHOUT_CLASSIFICATION	0.9999859304828134	WITHOUT_CLASSIFICATION	1.406951718672585E-5	DEFECT
/* GenIC options setter */	WITHOUT_CLASSIFICATION	0.9999994799159175	WITHOUT_CLASSIFICATION	5.200840824752282E-7	DEFECT
// -I- // ignore all errors // -Vd	WITHOUT_CLASSIFICATION	0.9999954828641066	WITHOUT_CLASSIFICATION	4.517135893454119E-6	DEFECT
/* ------------- */	WITHOUT_CLASSIFICATION	0.9999780617975018	WITHOUT_CLASSIFICATION	2.193820249825295E-5	DEFECT
/* -------------------- */	WITHOUT_CLASSIFICATION	0.9999859304828134	WITHOUT_CLASSIFICATION	1.406951718672585E-5	DEFECT
/* other options setter */	WITHOUT_CLASSIFICATION	0.9999997588365142	WITHOUT_CLASSIFICATION	2.411634858227824E-7	DEFECT
/* other methods */	WITHOUT_CLASSIFICATION	0.9999994239114707	WITHOUT_CLASSIFICATION	5.76088529326946E-7	DEFECT
// the method deleteOnExit() do not work because the directory is not empty	WITHOUT_CLASSIFICATION	0.999976914035505	WITHOUT_CLASSIFICATION	2.3085964494957794E-5	DEFECT
// create the generic jar first	WITHOUT_CLASSIFICATION	0.9999998366967137	WITHOUT_CLASSIFICATION	1.633032863855846E-7	DEFECT
// GenIC call on generic jar	WITHOUT_CLASSIFICATION	0.9999977406760181	WITHOUT_CLASSIFICATION	2.259323981843018E-6	DEFECT
// create the real jar	WITHOUT_CLASSIFICATION	0.9999998983485414	WITHOUT_CLASSIFICATION	1.0165145864473678E-7	DEFECT
// JOnAS-specific descriptor deployment	WITHOUT_CLASSIFICATION	0.9999993886134564	WITHOUT_CLASSIFICATION	6.113865436855793E-7	DEFECT
// JOnAS-specific DD // true if the JOnAS convention is used for the DD // Directory path of the EJB descriptor // EJB descriptor file name // Filename appearing before name terminator // Filename appearing after the name terminator	WITHOUT_CLASSIFICATION	0.9999993980375539	WITHOUT_CLASSIFICATION	6.019624460116717E-7	DEFECT
// extract path info	WITHOUT_CLASSIFICATION	0.9999983600018894	WITHOUT_CLASSIFICATION	1.6399981107191624E-6	DEFECT
// descriptorName is just a file without path	WITHOUT_CLASSIFICATION	0.9999998284759055	WITHOUT_CLASSIFICATION	1.7152409456002247E-7	DEFECT
/*         * Check for the odd case where the terminator and/or filename         * extension aren't found.  These will ensure "jonas-" appears at the         * end of the name and before the '.' (if present).         */	WITHOUT_CLASSIFICATION	0.9999998161206993	WITHOUT_CLASSIFICATION	1.8387930060397987E-7	DEFECT
// no . found	WITHOUT_CLASSIFICATION	0.9999989667581278	WITHOUT_CLASSIFICATION	1.0332418722141426E-6	DEFECT
// try to find JOnAS specific convention name	WITHOUT_CLASSIFICATION	0.9999997961731488	WITHOUT_CLASSIFICATION	2.0382685108727995E-7	DEFECT
// else get standard baseName	WITHOUT_CLASSIFICATION	0.9999997666837335	WITHOUT_CLASSIFICATION	2.3331626644640114E-7	DEFECT
// jonasroot	WITHOUT_CLASSIFICATION	0.9999986967932876	WITHOUT_CLASSIFICATION	1.3032067123671846E-6	DEFECT
// java policy file	WITHOUT_CLASSIFICATION	0.9999980965482005	WITHOUT_CLASSIFICATION	1.9034517995966771E-6	DEFECT
// outputdir	WITHOUT_CLASSIFICATION	0.9999875821199766	WITHOUT_CLASSIFICATION	1.2417880023304863E-5	DEFECT
// work around a bug of GenIC 2.5	WITHOUT_CLASSIFICATION	0.8397909994130155	WITHOUT_CLASSIFICATION	0.16020900058698456	DEFECT
// classpath	WITHOUT_CLASSIFICATION	0.9999985353831373	WITHOUT_CLASSIFICATION	1.4646168627332467E-6	DEFECT
// try to create the classpath for the correct ORB	WITHOUT_CLASSIFICATION	0.9999932817856312	WITHOUT_CLASSIFICATION	6.718214368843258E-6	DEFECT
// keepgenerated	WITHOUT_CLASSIFICATION	0.999999793832899	WITHOUT_CLASSIFICATION	2.0616710093358006E-7	DEFECT
// nocompil	WITHOUT_CLASSIFICATION	0.9999951593189492	WITHOUT_CLASSIFICATION	4.840681050761875E-6	DEFECT
// novalidation	WITHOUT_CLASSIFICATION	0.9999973602469664	WITHOUT_CLASSIFICATION	2.6397530336250967E-6	DEFECT
// javac	WITHOUT_CLASSIFICATION	0.9999974272883003	WITHOUT_CLASSIFICATION	2.57271169973702E-6	DEFECT
// javacopts	WITHOUT_CLASSIFICATION	0.9999995145417703	WITHOUT_CLASSIFICATION	4.854582297025445E-7	DEFECT
// rmicopts	WITHOUT_CLASSIFICATION	0.9999984979540016	WITHOUT_CLASSIFICATION	1.5020459983884931E-6	DEFECT
// secpropag	WITHOUT_CLASSIFICATION	0.9999986972743803	WITHOUT_CLASSIFICATION	1.3027256196060727E-6	DEFECT
// verbose	WITHOUT_CLASSIFICATION	0.9999984250690485	WITHOUT_CLASSIFICATION	1.5749309515919234E-6	DEFECT
// input file to process by GenIC	WITHOUT_CLASSIFICATION	0.999999810304822	WITHOUT_CLASSIFICATION	1.8969517804616831E-7	DEFECT
// calling GenIC task	WITHOUT_CLASSIFICATION	0.9999961809698811	WITHOUT_CLASSIFICATION	3.819030118946857E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999996958536274	WITHOUT_CLASSIFICATION	3.0414637271301487E-7	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9999940166248454	WITHOUT_CLASSIFICATION	5.983375154568819E-6	DEFECT
// the method deleteOnExit() do not work because the directory is not empty	WITHOUT_CLASSIFICATION	0.999976914035505	WITHOUT_CLASSIFICATION	2.3085964494957794E-5	DEFECT
// baseNameTerminator not found: the descriptor use the // JOnAS naming convention, ie [Foo.xml,jonas-Foo.xml] and // not [Foo<baseNameTerminator>-ejb-jar.xml, // Foo<baseNameTerminator>-jonas-ejb-jar.xml].	WITHOUT_CLASSIFICATION	0.9999980101562431	WITHOUT_CLASSIFICATION	1.9898437567930218E-6	DEFECT
// jonasroot	WITHOUT_CLASSIFICATION	0.9999986967932876	WITHOUT_CLASSIFICATION	1.3032067123671846E-6	DEFECT
// GenIC task // GenIC class (3 are supported for various // versions	WITHOUT_CLASSIFICATION	0.9999992560665047	WITHOUT_CLASSIFICATION	7.439334951468756E-7	DEFECT
// javac	WITHOUT_CLASSIFICATION	0.9999974272883003	WITHOUT_CLASSIFICATION	2.57271169973702E-6	DEFECT
// additionalargs	WITHOUT_CLASSIFICATION	0.9999960046890463	WITHOUT_CLASSIFICATION	3.995310953793722E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999209490427	WITHOUT_CLASSIFICATION	7.905095730336347E-8	DEFECT
// add the generated files to the ejbFiles	WITHOUT_CLASSIFICATION	0.9999988069627562	WITHOUT_CLASSIFICATION	1.1930372437395376E-6	DEFECT
// orb	WITHOUT_CLASSIFICATION	0.9999886278609964	WITHOUT_CLASSIFICATION	1.1372139003628983E-5	DEFECT
/* ----------------------------------------------------------------------------------- */	WITHOUT_CLASSIFICATION	0.9999501563496459	WITHOUT_CLASSIFICATION	4.984365035404729E-5	DEFECT
/* ----------------------------------------------------------------------------------- */	WITHOUT_CLASSIFICATION	0.9999501563496459	WITHOUT_CLASSIFICATION	4.984365035404729E-5	DEFECT
/* utilitary methods */	WITHOUT_CLASSIFICATION	0.9999997214688635	WITHOUT_CLASSIFICATION	2.785311364527243E-7	DEFECT
// Create the parser using whatever parser the system dictates	WITHOUT_CLASSIFICATION	0.9999992718506808	WITHOUT_CLASSIFICATION	7.281493190619606E-7	DEFECT
// Loop through the files. Each file represents one deployment // descriptor, and hence one bean in our model.	WITHOUT_CLASSIFICATION	0.9999999457061582	WITHOUT_CLASSIFICATION	5.429384187215898E-8	DEFECT
// process the deployment descriptor in each tool	WITHOUT_CLASSIFICATION	0.9999997567032537	WITHOUT_CLASSIFICATION	2.4329674638552023E-7	DEFECT
// end of execute()	WITHOUT_CLASSIFICATION	0.9999828504329309	WITHOUT_CLASSIFICATION	1.7149567069104867E-5	DEFECT
// resolve relative to project basedir	WITHOUT_CLASSIFICATION	0.9999978311442735	WITHOUT_CLASSIFICATION	2.1688557265349058E-6	DEFECT
// Get the filename into a String object	WITHOUT_CLASSIFICATION	0.9999999028935044	WITHOUT_CLASSIFICATION	9.710649563315819E-8	DEFECT
// Get the value of the <ejb-name> tag.  Only the first occurrence.	WITHOUT_CLASSIFICATION	0.9999999971131825	WITHOUT_CLASSIFICATION	2.8868173751386526E-9	DEFECT
// Then the toplink deployment descriptor	WITHOUT_CLASSIFICATION	0.9999973337622569	WITHOUT_CLASSIFICATION	2.666237743193063E-6	DEFECT
// Setup a naming standard here?.	WITHOUT_CLASSIFICATION	0.99999830533272	WITHOUT_CLASSIFICATION	1.6946672799677841E-6	DEFECT
// get all the files in the descriptor directory	WITHOUT_CLASSIFICATION	0.9999975822913363	WITHOUT_CLASSIFICATION	2.4177086636880257E-6	DEFECT
// If we still can't find it, complain	WITHOUT_CLASSIFICATION	0.9999276224835033	WITHOUT_CLASSIFICATION	7.23775164966432E-5	DEFECT
// OK, properties file may be absolute	WITHOUT_CLASSIFICATION	0.9999996364316084	WITHOUT_CLASSIFICATION	3.635683916085209E-7	DEFECT
// do we need to regenerate the file	WITHOUT_CLASSIFICATION	0.9999992862040868	WITHOUT_CLASSIFICATION	7.137959131455369E-7	DEFECT
//weblogic.ejb.utils.DDCreator.main(args);	WITHOUT_CLASSIFICATION	0.9999996646813427	WITHOUT_CLASSIFICATION	3.3531865733698937E-7	DEFECT
// there was an exception - run with no exit to get proper error	WITHOUT_CLASSIFICATION	0.9999747340889767	WITHOUT_CLASSIFICATION	2.5265911023319517E-5	DEFECT
//weblogic.ejb.utils.DDCreator.main(newArgs);	WITHOUT_CLASSIFICATION	0.999999850126763	WITHOUT_CLASSIFICATION	1.4987323709604538E-7	DEFECT
/* Attributes set by the Ant build file */	WITHOUT_CLASSIFICATION	0.9999991059436817	WITHOUT_CLASSIFICATION	8.940563183438162E-7	DEFECT
// Create the zip entry and add it to the jar file	WITHOUT_CLASSIFICATION	0.9999995353964727	WITHOUT_CLASSIFICATION	4.6460352729986475E-7	DEFECT
//add it to list of files in jar	WITHOUT_CLASSIFICATION	0.9999982541729411	WITHOUT_CLASSIFICATION	1.7458270588955054E-6	DEFECT
// If it's a primitive wrapper then we shouldn't try and put // it into the jar, so ignore it.	WITHOUT_CLASSIFICATION	0.9999964855139234	WITHOUT_CLASSIFICATION	3.5144860765576707E-6	DEFECT
// Translate periods into path separators, add .class to the // name, create the File object and add it to the Hashtable.	WITHOUT_CLASSIFICATION	0.99999939923818	WITHOUT_CLASSIFICATION	6.00761819979119E-7	DEFECT
// Weblogic will throw an error if the deployment descriptor does // not match the class files.	WITHOUT_CLASSIFICATION	0.9999332862894567	WITHOUT_CLASSIFICATION	6.671371054329972E-5	DEFECT
// Create the file input stream, and buffer everything over // to the jar output stream	WITHOUT_CLASSIFICATION	0.9999999900453455	WITHOUT_CLASSIFICATION	9.954654646718628E-9	DEFECT
// Close up the file input stream for the class file	WITHOUT_CLASSIFICATION	0.9999999582241201	WITHOUT_CLASSIFICATION	4.177587991190742E-8	DEFECT
// register any DTDs supplied by the user	WITHOUT_CLASSIFICATION	0.9999997520366383	WITHOUT_CLASSIFICATION	2.4796336178558173E-7	DEFECT
// none to register for generic	WITHOUT_CLASSIFICATION	0.9999992571369591	WITHOUT_CLASSIFICATION	7.428630407533422E-7	DEFECT
// Retrive the files to be added to JAR from EJB descriptor	WITHOUT_CLASSIFICATION	0.999995533583779	WITHOUT_CLASSIFICATION	4.466416220942635E-6	DEFECT
// Add any support classes specified in the build file	WITHOUT_CLASSIFICATION	0.9999994421744317	WITHOUT_CLASSIFICATION	5.57825568225371E-7	DEFECT
// Determine the JAR filename (without filename extension)	WITHOUT_CLASSIFICATION	0.9999998492258066	WITHOUT_CLASSIFICATION	1.5077419332326643E-7	DEFECT
// First the regular deployment descriptor	WITHOUT_CLASSIFICATION	0.9999994514720981	WITHOUT_CLASSIFICATION	5.48527901951572E-7	DEFECT
// now the vendor specific files, if any	WITHOUT_CLASSIFICATION	0.9999994844498531	WITHOUT_CLASSIFICATION	5.155501469423582E-7	DEFECT
// add any dependent files	WITHOUT_CLASSIFICATION	0.999999807890664	WITHOUT_CLASSIFICATION	1.9210933601724852E-7	DEFECT
// Check to see if we need a build and start doing the work!	WITHOUT_CLASSIFICATION	0.9999897701192408	WITHOUT_CLASSIFICATION	1.0229880759262301E-5	DEFECT
// Log that we are going to build...	WITHOUT_CLASSIFICATION	0.9997085315098645	WITHOUT_CLASSIFICATION	2.9146849013543367E-4	DEFECT
// Use helper method to write the jarfile	WITHOUT_CLASSIFICATION	0.9999999451508151	WITHOUT_CLASSIFICATION	5.484918483766578E-8	DEFECT
// Log that the file is up to date...	WITHOUT_CLASSIFICATION	0.99998228225022	WITHOUT_CLASSIFICATION	1.7717749779911026E-5	DEFECT
/* Parse the ejb deployment descriptor.  While it may not             * look like much, we use a SAXParser and an inner class to             * get hold of all the classfile names for the descriptor.             */	WITHOUT_CLASSIFICATION	0.9999606623668426	WITHOUT_CLASSIFICATION	3.9337633157461336E-5	DEFECT
// add in support classes if any	WITHOUT_CLASSIFICATION	0.9999937019878169	WITHOUT_CLASSIFICATION	6.298012183040561E-6	DEFECT
// Work out what the base name is	WITHOUT_CLASSIFICATION	0.9999685795990033	WITHOUT_CLASSIFICATION	3.1420400996669945E-5	DEFECT
// nothing to add for generic tool.	WITHOUT_CLASSIFICATION	0.9999980099879537	WITHOUT_CLASSIFICATION	1.9900120462469985E-6	DEFECT
// clean the addedfiles set	WITHOUT_CLASSIFICATION	0.9999993184360351	WITHOUT_CLASSIFICATION	6.815639648422969E-7	DEFECT
// Create the streams necessary to write the jarfile	WITHOUT_CLASSIFICATION	0.9999999782460282	WITHOUT_CLASSIFICATION	2.175397183421947E-8	DEFECT
//get and clean up innerclass name	WITHOUT_CLASSIFICATION	0.999999562994883	WITHOUT_CLASSIFICATION	4.370051168957475E-7	DEFECT
// See if there are any inner classes for this class and add them in if there are	WITHOUT_CLASSIFICATION	0.9999803347765864	WITHOUT_CLASSIFICATION	1.966522341361905E-5	DEFECT
// Loop through all the class files found and add them to the jar	WITHOUT_CLASSIFICATION	0.999997582151544	WITHOUT_CLASSIFICATION	2.4178484560663447E-6	DEFECT
//assertions take up space too	WITHOUT_CLASSIFICATION	0.9999993658023121	WITHOUT_CLASSIFICATION	6.34197687976715E-7	DEFECT
// link the file	WITHOUT_CLASSIFICATION	0.9999985694910982	WITHOUT_CLASSIFICATION	1.4305089017623732E-6	DEFECT
// Have to catch this because of the semantics of calling main()	WITHOUT_CLASSIFICATION	0.9999945101483764	WITHOUT_CLASSIFICATION	5.4898516235535954E-6	DEFECT
//trim the META_INF\ off of the file name	WITHOUT_CLASSIFICATION	0.9999996959963049	WITHOUT_CLASSIFICATION	3.040036951060694E-7	DEFECT
// end of writeJar	WITHOUT_CLASSIFICATION	0.9999980374798972	WITHOUT_CLASSIFICATION	1.962520102677367E-6	DEFECT
// only generate a new ClassLoader if we have a classpath	WITHOUT_CLASSIFICATION	0.9999987571334548	WITHOUT_CLASSIFICATION	1.242866545152308E-6	DEFECT
// register all the known DTDs	WITHOUT_CLASSIFICATION	0.9999976818057639	WITHOUT_CLASSIFICATION	2.3181942361964434E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999209490427	WITHOUT_CLASSIFICATION	7.905095730336347E-8	DEFECT
// The the weblogic cmp deployment descriptor	WITHOUT_CLASSIFICATION	0.9999997535128972	WITHOUT_CLASSIFICATION	2.464871028866506E-7	DEFECT
// try to determine it from publicId	WITHOUT_CLASSIFICATION	0.9999991803407577	WITHOUT_CLASSIFICATION	8.196592421867949E-7	DEFECT
// try to use the compiler specified by build.compiler. // Right now we are just going to allow Jikes	WITHOUT_CLASSIFICATION	0.9999999407994672	WITHOUT_CLASSIFICATION	5.9200532748348995E-8	DEFECT
// need to create a generic jar first.	WITHOUT_CLASSIFICATION	0.9999997554553756	WITHOUT_CLASSIFICATION	2.4454462443746137E-7	DEFECT
// Only go forward if the generic and the weblogic file both exist	WITHOUT_CLASSIFICATION	0.9999999975281653	WITHOUT_CLASSIFICATION	2.471834722692855E-9	DEFECT
//open jar files	WITHOUT_CLASSIFICATION	0.9999991499674035	WITHOUT_CLASSIFICATION	8.500325965969457E-7	DEFECT
//get the list of generic jar entries	WITHOUT_CLASSIFICATION	0.9999999453832407	WITHOUT_CLASSIFICATION	5.461675946071943E-8	DEFECT
//get the list of weblogic jar entries	WITHOUT_CLASSIFICATION	0.9999999961921632	WITHOUT_CLASSIFICATION	3.807836823577669E-9	DEFECT
//Cycle Through generic and make sure its in weblogic	WITHOUT_CLASSIFICATION	0.9999974649711284	WITHOUT_CLASSIFICATION	2.5350288716513604E-6	DEFECT
// File name/path match	WITHOUT_CLASSIFICATION	0.9999996852727913	WITHOUT_CLASSIFICATION	3.1472720880100094E-7	DEFECT
// Check files see if same	WITHOUT_CLASSIFICATION	0.9999999680917374	WITHOUT_CLASSIFICATION	3.190826257416328E-8	DEFECT
//File are different see if its an object or an interface	WITHOUT_CLASSIFICATION	0.9999993863489228	WITHOUT_CLASSIFICATION	6.1365107716478E-7	DEFECT
//Interface changed   rebuild jar.	WITHOUT_CLASSIFICATION	0.9999993871825316	WITHOUT_CLASSIFICATION	6.128174684599537E-7	DEFECT
//Object class Changed   update it.	WITHOUT_CLASSIFICATION	0.9999991824487119	WITHOUT_CLASSIFICATION	8.175512880881008E-7	DEFECT
// is it the manifest. If so ignore it	WITHOUT_CLASSIFICATION	0.9999993847632449	WITHOUT_CLASSIFICATION	6.152367551331845E-7	DEFECT
//File other then class changed   rebuild	WITHOUT_CLASSIFICATION	0.9999878610500915	WITHOUT_CLASSIFICATION	1.2138949908493777E-5	DEFECT
// a file doesnt exist rebuild	WITHOUT_CLASSIFICATION	0.999999768426554	WITHOUT_CLASSIFICATION	2.315734459880416E-7	DEFECT
//Copy files from old weblogic jar	WITHOUT_CLASSIFICATION	0.9999991958867935	WITHOUT_CLASSIFICATION	8.041132064909736E-7	DEFECT
// Use the entry from the generic jar	WITHOUT_CLASSIFICATION	0.9999984477996475	WITHOUT_CLASSIFICATION	1.552200352460308E-6	DEFECT
//use fle from original weblogic jar	WITHOUT_CLASSIFICATION	0.9999999150968858	WITHOUT_CLASSIFICATION	8.490311421638707E-8	DEFECT
// need to close files and perhaps rename output	WITHOUT_CLASSIFICATION	0.9999996377975872	WITHOUT_CLASSIFICATION	3.622024128916886E-7	DEFECT
// empty	WITHOUT_CLASSIFICATION	0.9999962941923679	WITHOUT_CLASSIFICATION	3.7058076320617287E-6	DEFECT
// if the implementation classes don;t exist regenerate	WITHOUT_CLASSIFICATION	0.9999803426520298	WITHOUT_CLASSIFICATION	1.9657347970258048E-5	DEFECT
// any problems - just regenerate	WITHOUT_CLASSIFICATION	0.9999959372542917	WITHOUT_CLASSIFICATION	4.062745708303954E-6	DEFECT
// create a Java task to do the rebuild	WITHOUT_CLASSIFICATION	0.9999994011247727	WITHOUT_CLASSIFICATION	5.988752273309781E-7	DEFECT
//weblogic.ejbc.main(args);	WITHOUT_CLASSIFICATION	0.9999995088363517	WITHOUT_CLASSIFICATION	4.911636483322996E-7	DEFECT
/* Build and populate an instance of the ejbc utility */	WITHOUT_CLASSIFICATION	0.9999965296607797	WITHOUT_CLASSIFICATION	3.470339220330474E-6	DEFECT
// Have to catch this because of the semantics of calling main()	WITHOUT_CLASSIFICATION	0.9999945101483764	WITHOUT_CLASSIFICATION	5.4898516235535954E-6	DEFECT
//classpath	WITHOUT_CLASSIFICATION	0.9999961478127128	WITHOUT_CLASSIFICATION	3.8521872872204E-6	DEFECT
/* Attributes set by the Ant build file */	WITHOUT_CLASSIFICATION	0.9999991059436817	WITHOUT_CLASSIFICATION	8.940563183438162E-7	DEFECT
// Get the filename of vendor specific descriptor	WITHOUT_CLASSIFICATION	0.9999999800440408	WITHOUT_CLASSIFICATION	1.995595925245775E-8	DEFECT
//trim the META_INF\ off of the file name	WITHOUT_CLASSIFICATION	0.9999996959963049	WITHOUT_CLASSIFICATION	3.040036951060694E-7	DEFECT
// Is the ser file or any of the source files newer then the class files. // firstly find the oldest of the two class files.	WITHOUT_CLASSIFICATION	0.9999852436230291	WITHOUT_CLASSIFICATION	1.4756376971007785E-5	DEFECT
// run with no exit for better reporting	WITHOUT_CLASSIFICATION	0.999983332900596	WITHOUT_CLASSIFICATION	1.6667099403932922E-5	DEFECT
//weblogic.ejbc.main(newArgs);	WITHOUT_CLASSIFICATION	0.999999780470634	WITHOUT_CLASSIFICATION	2.19529366032411E-7	DEFECT
/*     * Regardless of the name of the iAS-specific EJB descriptor file, it will     * written in the completed JAR file as "ias-ejb-jar.xml".  This is the     * naming convention implemented by iAS.     */	WITHOUT_CLASSIFICATION	0.9999987647429021	WITHOUT_CLASSIFICATION	1.2352570978890208E-6	DEFECT
/* Add CMP descriptors to the list of EJB files */	WITHOUT_CLASSIFICATION	0.9999984147202595	WITHOUT_CLASSIFICATION	1.5852797405000964E-6	DEFECT
/* Only calculate the descriptor name once */	WITHOUT_CLASSIFICATION	0.999999858070991	WITHOUT_CLASSIFICATION	1.4192900895738242E-7	DEFECT
// Directory path of the EJB descriptor // Filename appearing before name terminator // Filename appearing after the name terminator	WITHOUT_CLASSIFICATION	0.9999562883222652	WITHOUT_CLASSIFICATION	4.3711677734679984E-5	DEFECT
/* Find the end of the standard descriptor's relative path */	WITHOUT_CLASSIFICATION	0.9999898356676743	WITHOUT_CLASSIFICATION	1.0164332325704186E-5	DEFECT
/* Check to see if the standard name is used (there's no basename) */	WITHOUT_CLASSIFICATION	0.9999999862045815	WITHOUT_CLASSIFICATION	1.3795418532828992E-8	DEFECT
/*             * Check for the odd case where the terminator and/or filename             * extension aren't found.  These will ensure "ias-" appears at the             * end of the name and before the '.' (if present).             */	WITHOUT_CLASSIFICATION	0.9999998168399968	WITHOUT_CLASSIFICATION	1.8316000312776281E-7	DEFECT
//choose the right vendor DD	WITHOUT_CLASSIFICATION	0.9999623238243338	WITHOUT_CLASSIFICATION	3.7676175666206675E-5	DEFECT
// ejb jar file to verify	WITHOUT_CLASSIFICATION	0.9999997923776343	WITHOUT_CLASSIFICATION	2.0762236571184025E-7	DEFECT
//debug ?	WITHOUT_CLASSIFICATION	0.9999301907721851	WITHOUT_CLASSIFICATION	6.980922781490519E-5	DEFECT
//set the classpath	WITHOUT_CLASSIFICATION	0.9999990076455237	WITHOUT_CLASSIFICATION	9.923544763017547E-7	DEFECT
//list file	WITHOUT_CLASSIFICATION	0.9999997382761866	WITHOUT_CLASSIFICATION	2.61723813381813E-7	DEFECT
//no TIE classes	WITHOUT_CLASSIFICATION	0.9999993629210768	WITHOUT_CLASSIFICATION	6.370789231418099E-7	DEFECT
//root dir	WITHOUT_CLASSIFICATION	0.9998818482373092	WITHOUT_CLASSIFICATION	1.1815176269073366E-4	DEFECT
//compiling order	WITHOUT_CLASSIFICATION	0.9999961286010419	WITHOUT_CLASSIFICATION	3.871398958015309E-6	DEFECT
//add the home class	WITHOUT_CLASSIFICATION	0.9999693309755331	WITHOUT_CLASSIFICATION	3.066902446691696E-5	DEFECT
//build the home classes list.	WITHOUT_CLASSIFICATION	0.9999994946520188	WITHOUT_CLASSIFICATION	5.053479811395508E-7	DEFECT
//remove .class extension	WITHOUT_CLASSIFICATION	0.9999898947235955	WITHOUT_CLASSIFICATION	1.0105276404431416E-5	DEFECT
//add the gen files to the collection	WITHOUT_CLASSIFICATION	0.9998355402596418	WITHOUT_CLASSIFICATION	1.6445974035817488E-4	DEFECT
//remove the .class	WITHOUT_CLASSIFICATION	0.9999939168334958	WITHOUT_CLASSIFICATION	6.0831665042232034E-6	DEFECT
// Get the Extensions document	WITHOUT_CLASSIFICATION	0.9999996730370799	WITHOUT_CLASSIFICATION	3.269629200058607E-7	DEFECT
// We attempt to put in the MAP and Schema files of CMP beans	WITHOUT_CLASSIFICATION	0.9999857727368674	WITHOUT_CLASSIFICATION	1.4227263132503342E-5	DEFECT
// Add the Map file	WITHOUT_CLASSIFICATION	0.9999997011360714	WITHOUT_CLASSIFICATION	2.9886392858071607E-7	DEFECT
// Theres nothing else to see here...keep moving sonny	WITHOUT_CLASSIFICATION	0.9996730956218074	WITHOUT_CLASSIFICATION	3.269043781926172E-4	DEFECT
// Set the options	WITHOUT_CLASSIFICATION	0.9999998303879116	WITHOUT_CLASSIFICATION	1.696120883756331E-7	DEFECT
// Set the JvmArgs	WITHOUT_CLASSIFICATION	0.9999988385348462	WITHOUT_CLASSIFICATION	1.1614651537645497E-6	DEFECT
// Set the Environment variable	WITHOUT_CLASSIFICATION	0.9999993755984979	WITHOUT_CLASSIFICATION	6.244015020555527E-7	DEFECT
// Check if list of files to check has been specified	WITHOUT_CLASSIFICATION	0.9999999897836411	WITHOUT_CLASSIFICATION	1.0216358802259888E-8	DEFECT
// Have to catch this because of the semantics of calling main()	WITHOUT_CLASSIFICATION	0.9999945101483764	WITHOUT_CLASSIFICATION	5.4898516235535954E-6	DEFECT
//open jar files	WITHOUT_CLASSIFICATION	0.9999991499674035	WITHOUT_CLASSIFICATION	8.500325965969457E-7	DEFECT
//get the list of generic jar entries	WITHOUT_CLASSIFICATION	0.9999999453832407	WITHOUT_CLASSIFICATION	5.461675946071943E-8	DEFECT
//File are different see if its an object or an interface	WITHOUT_CLASSIFICATION	0.9999993863489228	WITHOUT_CLASSIFICATION	6.1365107716478E-7	DEFECT
//Interface changed   rebuild jar.	WITHOUT_CLASSIFICATION	0.9999993871825316	WITHOUT_CLASSIFICATION	6.128174684599537E-7	DEFECT
//Object class Changed   update it.	WITHOUT_CLASSIFICATION	0.9999991824487119	WITHOUT_CLASSIFICATION	8.175512880881008E-7	DEFECT
// is it the manifest. If so ignore it	WITHOUT_CLASSIFICATION	0.9999993847632449	WITHOUT_CLASSIFICATION	6.152367551331845E-7	DEFECT
//File other then class changed   rebuild	WITHOUT_CLASSIFICATION	0.9999878610500915	WITHOUT_CLASSIFICATION	1.2138949908493777E-5	DEFECT
// Update with changed Bean class	WITHOUT_CLASSIFICATION	0.9999726442931006	WITHOUT_CLASSIFICATION	2.7355706899465296E-5	DEFECT
// Use the entry from the generic jar	WITHOUT_CLASSIFICATION	0.9999984477996475	WITHOUT_CLASSIFICATION	1.552200352460308E-6	DEFECT
// register all the DTDs, both the ones that are known and // any supplied by the user	WITHOUT_CLASSIFICATION	0.999999977940906	WITHOUT_CLASSIFICATION	2.2059094003475068E-8	DEFECT
// Set the working directory	WITHOUT_CLASSIFICATION	0.9995189816492257	WITHOUT_CLASSIFICATION	4.8101835077432543E-4	DEFECT
// Set the Java class name	WITHOUT_CLASSIFICATION	0.9999977538500118	WITHOUT_CLASSIFICATION	2.246149988121692E-6	DEFECT
// create the -generic.jar, if required	WITHOUT_CLASSIFICATION	0.9999958477454491	WITHOUT_CLASSIFICATION	4.152254550780442E-6	DEFECT
// create the "undeployed" output .jar, if required	WITHOUT_CLASSIFICATION	0.9999957711945283	WITHOUT_CLASSIFICATION	4.228805471741674E-6	DEFECT
// Only go forward if the generic and the websphere file both exist	WITHOUT_CLASSIFICATION	0.999999992413811	WITHOUT_CLASSIFICATION	7.586188969635647E-9	DEFECT
//get the list of websphere jar entries	WITHOUT_CLASSIFICATION	0.9999999711948514	WITHOUT_CLASSIFICATION	2.880514852314072E-8	DEFECT
//Cycle Through generic and make sure its in websphere	WITHOUT_CLASSIFICATION	0.999990777642868	WITHOUT_CLASSIFICATION	9.222357131951703E-6	DEFECT
// File name/path match // Check files see if same	WITHOUT_CLASSIFICATION	0.9999999321769651	WITHOUT_CLASSIFICATION	6.782303484650027E-8	DEFECT
// a file doesn't exist rebuild	WITHOUT_CLASSIFICATION	0.9999961378059388	WITHOUT_CLASSIFICATION	3.862194061291193E-6	DEFECT
//Copy files from old websphere jar	WITHOUT_CLASSIFICATION	0.9999960957398283	WITHOUT_CLASSIFICATION	3.904260171677172E-6	DEFECT
//use fle from original websphere jar	WITHOUT_CLASSIFICATION	0.9999994783294379	WITHOUT_CLASSIFICATION	5.216705621584478E-7	DEFECT
// Specification Name must match	WITHOUT_CLASSIFICATION	0.9999999626500305	WITHOUT_CLASSIFICATION	3.7349969324264065E-8	DEFECT
// Available specification version must be >= required	WITHOUT_CLASSIFICATION	0.9999999242491947	WITHOUT_CLASSIFICATION	7.575080523369926E-8	DEFECT
// Implementation Vendor ID must match	WITHOUT_CLASSIFICATION	0.9999907868222337	WITHOUT_CLASSIFICATION	9.213177766288761E-6	DEFECT
// Implementation Vendor ID must match	WITHOUT_CLASSIFICATION	0.9999907868222337	WITHOUT_CLASSIFICATION	9.213177766288761E-6	DEFECT
// Implementation version must be >= required	WITHOUT_CLASSIFICATION	0.9999971703121199	WITHOUT_CLASSIFICATION	2.8296878801141583E-6	DEFECT
// This available optional package satisfies the requirements	WITHOUT_CLASSIFICATION	0.9999997603764604	WITHOUT_CLASSIFICATION	2.3962353961454474E-7	DEFECT
// This available optional package satisfies the requirements	WITHOUT_CLASSIFICATION	0.9999997603764604	WITHOUT_CLASSIFICATION	2.3962353961454474E-7	DEFECT
//Reset list of sections	WITHOUT_CLASSIFICATION	0.999999327914307	WITHOUT_CLASSIFICATION	6.720856930079097E-7	DEFECT
// Extension Name must match	WITHOUT_CLASSIFICATION	0.9999999364451782	WITHOUT_CLASSIFICATION	6.355482190988744E-8	DEFECT
//Add all the dependency data to manifest for dependencies	WITHOUT_CLASSIFICATION	0.9999997993644102	WITHOUT_CLASSIFICATION	2.0063558990527955E-7	DEFECT
// Check if list of files to check has been specified	WITHOUT_CLASSIFICATION	0.9999999897836411	WITHOUT_CLASSIFICATION	1.0216358802259888E-8	DEFECT
// CheckStyle:MemberNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9999993468315892	WITHOUT_CLASSIFICATION	6.531684109342837E-7	DEFECT
// CheckStyle:MemberNameCheck ON	WITHOUT_CLASSIFICATION	0.9999997752015555	WITHOUT_CLASSIFICATION	2.247984446028892E-7	DEFECT
// change this to get the objects from the other reference	WITHOUT_CLASSIFICATION	0.999999765348616	WITHOUT_CLASSIFICATION	2.3465138401661063E-7	DEFECT
//Add all the dependency data to manifest for "optional" //dependencies	WITHOUT_CLASSIFICATION	0.999999926370806	WITHOUT_CLASSIFICATION	7.362919392236065E-8	DEFECT
//add in something like //"Extension-List: javahelp java3d"	WITHOUT_CLASSIFICATION	0.9999781147985739	WITHOUT_CLASSIFICATION	2.1885201426136392E-5	DEFECT
//all methods static	WITHOUT_CLASSIFICATION	0.9999985561042849	WITHOUT_CLASSIFICATION	1.443895715074562E-6	DEFECT
/*     * Gets the destination file     */	WITHOUT_CLASSIFICATION	0.9999999355574906	WITHOUT_CLASSIFICATION	6.444250948207269E-8	DEFECT
/*     * Validates URL     */	WITHOUT_CLASSIFICATION	0.9999998636989209	WITHOUT_CLASSIFICATION	1.3630107909053577E-7	DEFECT
//Load default locale bundle files //using default file encoding scheme.	WITHOUT_CLASSIFICATION	0.9999998807503047	WITHOUT_CLASSIFICATION	1.192496953487477E-7	DEFECT
//if all resource files associated with this bundle //have been scanned for and still not able to //find a single resrouce file, throw exception	WITHOUT_CLASSIFICATION	0.9999885296897351	WITHOUT_CLASSIFICATION	1.1470310264912393E-5	DEFECT
//So long as the line isn't empty and isn't a comment...	WITHOUT_CLASSIFICATION	0.9996192170083171	WITHOUT_CLASSIFICATION	3.807829916828905E-4	DEFECT
//Legal Key-Value separators are :, = and white space.	WITHOUT_CLASSIFICATION	0.999999818755814	WITHOUT_CLASSIFICATION	1.8124418603429043E-7	DEFECT
//Only if we do have a key is there going to be a value	WITHOUT_CLASSIFICATION	0.9999760847912764	WITHOUT_CLASSIFICATION	2.3915208723637733E-5	DEFECT
//Handle line continuations, if any	WITHOUT_CLASSIFICATION	0.9999997661293148	WITHOUT_CLASSIFICATION	2.3387068507820003E-7	DEFECT
//Has key already been loaded into resourceMap?	WITHOUT_CLASSIFICATION	0.9999999331033633	WITHOUT_CLASSIFICATION	6.689663668881195E-8	DEFECT
//Make sure parent dirs exist, else, create them.	WITHOUT_CLASSIFICATION	0.9999956656087876	WITHOUT_CLASSIFICATION	4.334391212356107E-6	DEFECT
//Check to see if dest file has to be recreated	WITHOUT_CLASSIFICATION	0.9999999704640965	WITHOUT_CLASSIFICATION	2.9535903494179796E-8	DEFECT
// is there a startToken // and there is still stuff following the startToken	WITHOUT_CLASSIFICATION	0.9996513010266103	WITHOUT_CLASSIFICATION	3.486989733897047E-4	DEFECT
// we found a starttoken, is there an endtoken following? // start at token+tokenlength because start and end // token may be indentical	WITHOUT_CLASSIFICATION	0.9994198179845751	WITHOUT_CLASSIFICATION	5.801820154248362E-4	DEFECT
// grab the token	WITHOUT_CLASSIFICATION	0.9999972101414972	WITHOUT_CLASSIFICATION	2.7898585028110207E-6	DEFECT
// If there is a white space or = or :, then // it isn't to be treated as a valid key.	WITHOUT_CLASSIFICATION	0.999984415228731	WITHOUT_CLASSIFICATION	1.55847712689158E-5	DEFECT
// find the replace string	WITHOUT_CLASSIFICATION	0.9999996451128272	WITHOUT_CLASSIFICATION	3.548871726993235E-7	DEFECT
// generate the new line	WITHOUT_CLASSIFICATION	0.999999699300702	WITHOUT_CLASSIFICATION	3.0069929809485565E-7	DEFECT
// set start position for next search	WITHOUT_CLASSIFICATION	0.9999885199020866	WITHOUT_CLASSIFICATION	1.1480097913498761E-5	DEFECT
// find next starttoken	WITHOUT_CLASSIFICATION	0.9999848710100482	WITHOUT_CLASSIFICATION	1.5128989951806053E-5	DEFECT
// deal with specified srcDir	WITHOUT_CLASSIFICATION	0.9999999741572208	WITHOUT_CLASSIFICATION	2.584277933751813E-8	DEFECT
// deal with the filesets	WITHOUT_CLASSIFICATION	0.9999997209894053	WITHOUT_CLASSIFICATION	2.790105947086085E-7	DEFECT
// remove any files that shouldn't be overwritten.	WITHOUT_CLASSIFICATION	0.9998232860697522	WITHOUT_CLASSIFICATION	1.7671393024784956E-4	DEFECT
// check that the password has been set	WITHOUT_CLASSIFICATION	0.9999969368653753	WITHOUT_CLASSIFICATION	3.063134624809031E-6	DEFECT
// check for missing application on deploy & update	WITHOUT_CLASSIFICATION	0.9999999299452388	WITHOUT_CLASSIFICATION	7.005476122614052E-8	DEFECT
// check for missing source on deploy & update	WITHOUT_CLASSIFICATION	0.9999999569807858	WITHOUT_CLASSIFICATION	4.301921421857889E-8	DEFECT
// check for missing application on delete & undeploy	WITHOUT_CLASSIFICATION	0.9999999331517985	WITHOUT_CLASSIFICATION	6.684820149300455E-8	DEFECT
// keys to optional attributes	WITHOUT_CLASSIFICATION	0.9999998977267528	WITHOUT_CLASSIFICATION	1.0227324722166823E-7	DEFECT
// constructs the "-url <url> -debug <action> <password>" portion // of the commmand line	WITHOUT_CLASSIFICATION	0.9999406226748976	WITHOUT_CLASSIFICATION	5.9377325102515076E-5	DEFECT
/////////////////////////////////////////////////////////////////////////// // // Place vendor specific tool creations here. // ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999955099665755	WITHOUT_CLASSIFICATION	4.490033424546E-6	DEFECT
/////////////////////////////////////////////////////////////////////////// // // Execute method // ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999998551188761	WITHOUT_CLASSIFICATION	1.4488112388977347E-7	DEFECT
/////////////////////////////////////////////////////////////////////////// // // Set/get methods // ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999995799303134	WITHOUT_CLASSIFICATION	4.200696865832971E-7	DEFECT
// keys to optional attributes	WITHOUT_CLASSIFICATION	0.9999998977267528	WITHOUT_CLASSIFICATION	1.0227324722166823E-7	DEFECT
// convert backslashes to slashes, otherwise jjtree will // put this as comments and this seems to confuse javacc	WITHOUT_CLASSIFICATION	0.9999990756607045	WITHOUT_CLASSIFICATION	9.24339295499508E-7	DEFECT
// required attributes	WITHOUT_CLASSIFICATION	0.9999990436517834	WITHOUT_CLASSIFICATION	9.563482165792611E-7	DEFECT
// required attributes	WITHOUT_CLASSIFICATION	0.9999990436517834	WITHOUT_CLASSIFICATION	9.563482165792611E-7	DEFECT
// required attributes	WITHOUT_CLASSIFICATION	0.9999990436517834	WITHOUT_CLASSIFICATION	9.563482165792611E-7	DEFECT
// load command line with optional attributes	WITHOUT_CLASSIFICATION	0.999999949863835	WITHOUT_CLASSIFICATION	5.013616499773855E-8	DEFECT
// load command line with optional attributes	WITHOUT_CLASSIFICATION	0.999999949863835	WITHOUT_CLASSIFICATION	5.013616499773855E-8	DEFECT
// load command line with optional attributes	WITHOUT_CLASSIFICATION	0.999999949863835	WITHOUT_CLASSIFICATION	5.013616499773855E-8	DEFECT
// use the directory containing the target as the output directory	WITHOUT_CLASSIFICATION	0.9999999998589253	WITHOUT_CLASSIFICATION	1.4107465113155197E-10	DEFECT
// use the directory containing the target as the output directory	WITHOUT_CLASSIFICATION	0.9999999998589253	WITHOUT_CLASSIFICATION	1.4107465113155197E-10	DEFECT
// used by jpackage for JavaCC 3.x	WITHOUT_CLASSIFICATION	0.9999995692009521	WITHOUT_CLASSIFICATION	4.307990479420007E-7	DEFECT
// check the target is a file	WITHOUT_CLASSIFICATION	0.9999999954645128	WITHOUT_CLASSIFICATION	4.535487226256763E-9	DEFECT
// determine if the generated java file is up-to-date	WITHOUT_CLASSIFICATION	0.9999999394756774	WITHOUT_CLASSIFICATION	6.052432253717627E-8	DEFECT
// Extract file's base-name	WITHOUT_CLASSIFICATION	0.9999997086658826	WITHOUT_CLASSIFICATION	2.913341173224015E-7	DEFECT
// Replace the file's extension with '.java'	WITHOUT_CLASSIFICATION	0.9999959951996465	WITHOUT_CLASSIFICATION	4.004800353475817E-6	DEFECT
// Change the directory	WITHOUT_CLASSIFICATION	0.9999999316519831	WITHOUT_CLASSIFICATION	6.834801692423032E-8	DEFECT
// This default has been good enough until Ant 1.6.3, so stick // with it	WITHOUT_CLASSIFICATION	0.9999875681314004	WITHOUT_CLASSIFICATION	1.2431868599524846E-5	DEFECT
// first search for the "old" javah class in 1.4.2 tools.jar	WITHOUT_CLASSIFICATION	0.9999995691112351	WITHOUT_CLASSIFICATION	4.308887648488564E-7	DEFECT
// assume older than 1.4.2 tools.jar	WITHOUT_CLASSIFICATION	0.9999997107049171	WITHOUT_CLASSIFICATION	2.8929508287402924E-7	DEFECT
//private CommandlineJava commandline = new CommandlineJava();	WITHOUT_CLASSIFICATION	0.9999969905822602	WITHOUT_CLASSIFICATION	3.0094177396791265E-6	DEFECT
// required attributes // Deprecated! // Use this going forward	WITHOUT_CLASSIFICATION	0.999999520263643	WITHOUT_CLASSIFICATION	4.797363570181261E-7	DEFECT
// optional attributes	WITHOUT_CLASSIFICATION	0.9999999867655345	WITHOUT_CLASSIFICATION	1.3234465488228537E-8	DEFECT
// execute the test and get the return code	WITHOUT_CLASSIFICATION	0.9999998291562606	WITHOUT_CLASSIFICATION	1.7084373932136769E-7	DEFECT
// if there is an error/failure and that it should halt, stop // everything otherwise just log a statement	WITHOUT_CLASSIFICATION	0.9999995073899428	WITHOUT_CLASSIFICATION	4.926100571311428E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999996958536274	WITHOUT_CLASSIFICATION	3.0414637271301487E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999996958536274	WITHOUT_CLASSIFICATION	3.0414637271301487E-7	DEFECT
/* int accessFlags = */	WITHOUT_CLASSIFICATION	0.9999948937309103	WITHOUT_CLASSIFICATION	5.106269089588854E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999209490427	WITHOUT_CLASSIFICATION	7.905095730336347E-8	DEFECT
// not necessary as JDepend would fail, but why loose // some time?	WITHOUT_CLASSIFICATION	0.9998581536416317	WITHOUT_CLASSIFICATION	1.418463583684071E-4	DEFECT
// This bit turns <exclude> child tags into patters to ignore	WITHOUT_CLASSIFICATION	0.999997081571902	WITHOUT_CLASSIFICATION	2.9184280979936904E-6	DEFECT
// JL: comment extracted from JUnitTask (and slightly modified)	WITHOUT_CLASSIFICATION	0.9997950130577006	WITHOUT_CLASSIFICATION	2.0498694229935467E-4	DEFECT
// if not set, auto-create the ClassPath from the project	WITHOUT_CLASSIFICATION	0.999999697852749	WITHOUT_CLASSIFICATION	3.0214725102022733E-7	DEFECT
// having a space between the file and its path causes commandline // to add quotes around the argument thus making JDepend not taking // it into account. Thus we split it in two	WITHOUT_CLASSIFICATION	0.9999930882732002	WITHOUT_CLASSIFICATION	6.911726799823507E-6	DEFECT
// This is the new way - use classespath - code is the // same for now	WITHOUT_CLASSIFICATION	0.9997683276214163	WITHOUT_CLASSIFICATION	2.3167237858370872E-4	DEFECT
// read in all constant pool entries.	WITHOUT_CLASSIFICATION	0.9999992777882786	WITHOUT_CLASSIFICATION	7.222117215529929E-7	DEFECT
// verify this is a valid class file.	WITHOUT_CLASSIFICATION	0.9999795290688904	WITHOUT_CLASSIFICATION	2.0470931109613835E-5	DEFECT
/* int version = */	WITHOUT_CLASSIFICATION	0.9999976743428519	WITHOUT_CLASSIFICATION	2.3256571480408067E-6	DEFECT
// read the constant pool.	WITHOUT_CLASSIFICATION	0.9999992382580857	WITHOUT_CLASSIFICATION	7.617419143710916E-7	DEFECT
// read access flags and class index.	WITHOUT_CLASSIFICATION	0.9998702373801565	WITHOUT_CLASSIFICATION	1.2976261984351376E-4	DEFECT
//Be sure everything has been set.	WITHOUT_CLASSIFICATION	0.99999655071071	WITHOUT_CLASSIFICATION	3.449289290044726E-6	DEFECT
//Do the merge	WITHOUT_CLASSIFICATION	0.999996736770347	WITHOUT_CLASSIFICATION	3.2632296531890004E-6	DEFECT
//Add this file to the addfiles Vector and add it //later at the top level of the output file.	WITHOUT_CLASSIFICATION	0.9999990122834523	WITHOUT_CLASSIFICATION	9.87716547756316E-7	DEFECT
//do nothing	WITHOUT_CLASSIFICATION	0.9999957247020366	WITHOUT_CLASSIFICATION	4.275297963391345E-6	DEFECT
// jlink output input1 ... inputN	WITHOUT_CLASSIFICATION	0.999807234362777	WITHOUT_CLASSIFICATION	1.9276563722306152E-4	DEFECT
// To maintain compatibility with the command-line version, // we will only add files to be merged.	WITHOUT_CLASSIFICATION	0.9999997751756522	WITHOUT_CLASSIFICATION	2.248243478892281E-7	DEFECT
/*     * Actually performs the merging of f into the output.     * f should be a zip or jar file.     */	WITHOUT_CLASSIFICATION	0.9999928294419107	WITHOUT_CLASSIFICATION	7.17055808926772E-6	DEFECT
//Check to see that the file with name "name" exists.	WITHOUT_CLASSIFICATION	0.9999999438396762	WITHOUT_CLASSIFICATION	5.616032385942184E-8	DEFECT
//META-INF not found in the name of the entry. Go ahead and process it.	WITHOUT_CLASSIFICATION	0.9999978595040109	WITHOUT_CLASSIFICATION	2.140495989138359E-6	DEFECT
//Weblogic jspc does not seem to work unless u explicitly set this... // Does not take the classpath from the env.... // Am i missing something about the Java task??	WITHOUT_CLASSIFICATION	0.9383899416626632	WITHOUT_CLASSIFICATION	0.06161005833733689	DEFECT
//do nothing	WITHOUT_CLASSIFICATION	0.9999957247020366	WITHOUT_CLASSIFICATION	4.275297963391345E-6	DEFECT
/*     * Necessary in the case where you add a entry that     * is not compressed.     */	WITHOUT_CLASSIFICATION	0.9999992622626354	WITHOUT_CLASSIFICATION	7.377373647090138E-7	DEFECT
//Ignore manifest entries.  They're bound to cause conflicts between //files that are being merged.  User should supply their own //manifest file when doing the merge.	WITHOUT_CLASSIFICATION	0.999999991622948	WITHOUT_CLASSIFICATION	8.37705199626323E-9	DEFECT
//It was the duplicate entry.	WITHOUT_CLASSIFICATION	0.9999996071123773	WITHOUT_CLASSIFICATION	3.9288762257087964E-7	DEFECT
/*     * Adds contents of a directory to the output.     */	WITHOUT_CLASSIFICATION	0.9999993110947597	WITHOUT_CLASSIFICATION	6.889052403784196E-7	DEFECT
/*     * Gets the name of an entry in the file.  This is the real name     * which for a class is the name of the package with the class     * name appended.     */	WITHOUT_CLASSIFICATION	0.9999998742318482	WITHOUT_CLASSIFICATION	1.2576815178320323E-7	DEFECT
// see if the file is in fact a .class file, and determine its actual name.	WITHOUT_CLASSIFICATION	0.9999999843893342	WITHOUT_CLASSIFICATION	1.561066581217205E-8	DEFECT
/*     * Adds a file to the output stream.     */	WITHOUT_CLASSIFICATION	0.9999997973998199	WITHOUT_CLASSIFICATION	2.0260018005344962E-7	DEFECT
//Make sure file exists	WITHOUT_CLASSIFICATION	0.999998939411341	WITHOUT_CLASSIFICATION	1.060588659026189E-6	DEFECT
/*     * A convenience method that several other methods might call.     */	WITHOUT_CLASSIFICATION	0.9999979934477972	WITHOUT_CLASSIFICATION	2.0065522027564475E-6	DEFECT
//This entry already exists. So, go with the first one.	WITHOUT_CLASSIFICATION	0.9999994044328935	WITHOUT_CLASSIFICATION	5.955671066196842E-7	DEFECT
/*     * A method that does the work on a given entry in a mergefile.     * The big deal is to set the right parameters in the ZipEntry     * on the output stream.     */	WITHOUT_CLASSIFICATION	0.9999908699475517	WITHOUT_CLASSIFICATION	9.130052448357535E-6	DEFECT
//Note, don't need to specify size or crc for compressed files.	WITHOUT_CLASSIFICATION	0.9999998002019959	WITHOUT_CLASSIFICATION	1.997980041210277E-7	DEFECT
//use the systemclasspath as well, to include the ant jar	WITHOUT_CLASSIFICATION	0.9999984758707166	WITHOUT_CLASSIFICATION	1.5241292834983766E-6	DEFECT
/*     * Necessary in the case where you add a entry that     * is not compressed.     */	WITHOUT_CLASSIFICATION	0.9999992622626354	WITHOUT_CLASSIFICATION	7.377373647090138E-7	DEFECT
//TODO Test on other versions of weblogic //TODO add more attributes to the task, to take care of all jspc options //TODO Test on Unix	WITHOUT_CLASSIFICATION	0.9999991356481849	WITHOUT_CLASSIFICATION	8.643518151388229E-7	DEFECT
//private String compilerPath; //fully qualified name for the compiler executable	WITHOUT_CLASSIFICATION	0.9999998007004692	WITHOUT_CLASSIFICATION	1.9929953086790543E-7	DEFECT
// get all the files in the sourceDirectory	WITHOUT_CLASSIFICATION	0.9999991259312487	WITHOUT_CLASSIFICATION	8.74068751372529E-7	DEFECT
//Weblogic.jspc calls System.exit() ... have to fork // Therefore, takes loads of time // Can pass directories at a time (*.jsp) but easily runs out of // memory on hefty dirs (even on  a Sun)	WITHOUT_CLASSIFICATION	0.9545701294711795	WITHOUT_CLASSIFICATION	0.04542987052882056	DEFECT
// apply transformation	WITHOUT_CLASSIFICATION	0.9999997742355263	WITHOUT_CLASSIFICATION	2.2576447380643818E-7	DEFECT
//end class	WITHOUT_CLASSIFICATION	0.9999810157344622	WITHOUT_CLASSIFICATION	1.898426553779479E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999996958536274	WITHOUT_CLASSIFICATION	3.0414637271301487E-7	DEFECT
// CheckStyle:ConstantNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9999995903148149	WITHOUT_CLASSIFICATION	4.096851851945928E-7	DEFECT
// CheckStyle:ConstantNameCheck ON	WITHOUT_CLASSIFICATION	0.9999997940321296	WITHOUT_CLASSIFICATION	2.0596787035541803E-7	DEFECT
// now we need to populate the compiler adapter	WITHOUT_CLASSIFICATION	0.999998996428347	WITHOUT_CLASSIFICATION	1.0035716530728304E-6	DEFECT
// finally, lets execute the compiler!!	WITHOUT_CLASSIFICATION	0.999975276638978	WITHOUT_CLASSIFICATION	2.4723361022012355E-5	DEFECT
// Create an instance of the compiler, redirecting output to // the project log	WITHOUT_CLASSIFICATION	0.9999975233616932	WITHOUT_CLASSIFICATION	2.4766383066767594E-6	DEFECT
// compile the source files	WITHOUT_CLASSIFICATION	0.9999999231718144	WITHOUT_CLASSIFICATION	7.682818558230503E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999209490427	WITHOUT_CLASSIFICATION	7.905095730336347E-8	DEFECT
//demand create vector of filesets	WITHOUT_CLASSIFICATION	0.9999990202858773	WITHOUT_CLASSIFICATION	9.797141226447785E-7	DEFECT
// make sure that we've got a destdir	WITHOUT_CLASSIFICATION	0.9999988846652198	WITHOUT_CLASSIFICATION	1.115334780241922E-6	DEFECT
//bind to a compiler	WITHOUT_CLASSIFICATION	0.9999987349477673	WITHOUT_CLASSIFICATION	1.2650522327613504E-6	DEFECT
//if we are a webapp, hand off to the compiler, which had better handle it	WITHOUT_CLASSIFICATION	0.999999885003549	WITHOUT_CLASSIFICATION	1.1499645096543072E-7	DEFECT
// make sure that we've got a srcdir	WITHOUT_CLASSIFICATION	0.9999978505916501	WITHOUT_CLASSIFICATION	2.1494083498128766E-6	DEFECT
// if the compiler does its own dependency stuff, we just call it right now	WITHOUT_CLASSIFICATION	0.9999991039839286	WITHOUT_CLASSIFICATION	8.960160714394433E-7	DEFECT
//the remainder of this method is only for compilers that need their dependency work done	WITHOUT_CLASSIFICATION	0.9996679794027367	WITHOUT_CLASSIFICATION	3.320205972633816E-4	DEFECT
// scan source directories and dest directory to build up both copy // lists and compile lists	WITHOUT_CLASSIFICATION	0.9999999984798068	WITHOUT_CLASSIFICATION	1.5201931438266922E-9	DEFECT
//        String srcFileDir=srcFile.getParent();	WITHOUT_CLASSIFICATION	0.999999736205809	WITHOUT_CLASSIFICATION	2.6379419109672287E-7	DEFECT
//end inner class	WITHOUT_CLASSIFICATION	0.9999816467285095	WITHOUT_CLASSIFICATION	1.835327149047345E-5	DEFECT
// since we don't mangle extensions like the servlet does, // we need to check for keywords as class names	WITHOUT_CLASSIFICATION	0.9999999229569607	WITHOUT_CLASSIFICATION	7.704303937682112E-8	DEFECT
// first char is more restrictive than the rest	WITHOUT_CLASSIFICATION	0.9999999742460856	WITHOUT_CLASSIFICATION	2.575391443626659E-8	DEFECT
// this is the rest	WITHOUT_CLASSIFICATION	0.9999246569603962	WITHOUT_CLASSIFICATION	7.534303960383188E-5	DEFECT
// If the first char is not a start of Java identifier or is _ // prepend a '_'.	WITHOUT_CLASSIFICATION	0.9999999164315656	WITHOUT_CLASSIFICATION	8.356843448298194E-8	DEFECT
//we are forking here to be sure that if JspC calls //System.exit() it doesn't halt the build	WITHOUT_CLASSIFICATION	0.998335670220046	WITHOUT_CLASSIFICATION	0.001664329779954008	DEFECT
//tomcat4.0 gets the old mangler	WITHOUT_CLASSIFICATION	0.9999969688397444	WITHOUT_CLASSIFICATION	3.031160255561026E-6	DEFECT
//tomcat4.1 gets the new one	WITHOUT_CLASSIFICATION	0.9999997840802952	WITHOUT_CLASSIFICATION	2.1591970485666747E-7	DEFECT
// for all other possibilities	WITHOUT_CLASSIFICATION	0.999999963845286	WITHOUT_CLASSIFICATION	3.615471405071001E-8	DEFECT
// append the err and output streams to the log	WITHOUT_CLASSIFICATION	0.999996814285968	WITHOUT_CLASSIFICATION	3.1857140321120895E-6	DEFECT
// acrobatic cast.	WITHOUT_CLASSIFICATION	0.9999995641779655	WITHOUT_CLASSIFICATION	4.358220343926208E-7	DEFECT
// set the destination directory relative from the project if needed.	WITHOUT_CLASSIFICATION	0.9999999690932794	WITHOUT_CLASSIFICATION	3.090672057456447E-8	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999996958536274	WITHOUT_CLASSIFICATION	3.0414637271301487E-7	DEFECT
// sanity check	WITHOUT_CLASSIFICATION	0.9999998976908275	WITHOUT_CLASSIFICATION	1.023091724696453E-7	DEFECT
// plain impossible	WITHOUT_CLASSIFICATION	0.9999997874080206	WITHOUT_CLASSIFICATION	2.1259197926049924E-7	DEFECT
// Quick return - no output do nothing.	WITHOUT_CLASSIFICATION	0.9999998700405822	WITHOUT_CLASSIFICATION	1.2995941773023318E-7	DEFECT
// append the err and output streams to the log	WITHOUT_CLASSIFICATION	0.999996814285968	WITHOUT_CLASSIFICATION	3.1857140321120895E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999209490427	WITHOUT_CLASSIFICATION	7.905095730336347E-8	DEFECT
// If style dir is not specified we have to retrieve // the stylesheet from the classloader	WITHOUT_CLASSIFICATION	0.999997978223204	WITHOUT_CLASSIFICATION	2.0217767959887886E-6	DEFECT
// If we are here, then the style dir is here and we // should read the stylesheet from the filesystem	WITHOUT_CLASSIFICATION	0.9999832663301494	WITHOUT_CLASSIFICATION	1.6733669850490597E-5	DEFECT
// xalan 2	WITHOUT_CLASSIFICATION	0.9999813943463098	WITHOUT_CLASSIFICATION	1.860565369022677E-5	DEFECT
// xalan xsltc	WITHOUT_CLASSIFICATION	0.9999973762059149	WITHOUT_CLASSIFICATION	2.6237940851032E-6	DEFECT
// jdk 1.5 xsltc	WITHOUT_CLASSIFICATION	0.9999907137485989	WITHOUT_CLASSIFICATION	9.286251401006658E-6	DEFECT
// must be plain, ensured by TypeAttribute	WITHOUT_CLASSIFICATION	0.9999999677574795	WITHOUT_CLASSIFICATION	3.2242520459600096E-8	DEFECT
// pre JUnit 3.7	WITHOUT_CLASSIFICATION	0.9999985572275045	WITHOUT_CLASSIFICATION	1.4427724954878485E-6	DEFECT
// can be null if an error occurred in setUp	WITHOUT_CLASSIFICATION	0.9999996291986476	WITHOUT_CLASSIFICATION	3.708013524138738E-7	DEFECT
// PlainJUnitResultFormatter	WITHOUT_CLASSIFICATION	0.9999999547368879	WITHOUT_CLASSIFICATION	4.5263112057506624E-8	DEFECT
// Snapshot of the system properties	WITHOUT_CLASSIFICATION	0.9999973260283955	WITHOUT_CLASSIFICATION	2.6739716044383485E-6	DEFECT
//add the timestamp	WITHOUT_CLASSIFICATION	0.9999995695933723	WITHOUT_CLASSIFICATION	4.304066277296702E-7	DEFECT
//and the hostname.	WITHOUT_CLASSIFICATION	0.9999984109118008	WITHOUT_CLASSIFICATION	1.589088199163483E-6	DEFECT
// Output properties	WITHOUT_CLASSIFICATION	0.9999993645498257	WITHOUT_CLASSIFICATION	6.354501742522169E-7	DEFECT
// a TestSuite can contain Tests from multiple classes, // even tests with the same name - disambiguate them.	WITHOUT_CLASSIFICATION	0.9999999194501277	WITHOUT_CLASSIFICATION	8.054987236793395E-8	DEFECT
// XMLJUnitResultFormatter	WITHOUT_CLASSIFICATION	0.9999929803530245	WITHOUT_CLASSIFICATION	7.019646975388042E-6	DEFECT
// Do we send output to the formatters ?	WITHOUT_CLASSIFICATION	0.9999999474777318	WITHOUT_CLASSIFICATION	5.2522268146627615E-8	DEFECT
//   Attributes for basetest	WITHOUT_CLASSIFICATION	0.9999996264442524	WITHOUT_CLASSIFICATION	3.735557475801599E-7	DEFECT
// forceLoadClass is not convenient here since it would not // properly deal with inner classes of these classes.	WITHOUT_CLASSIFICATION	0.9998423905398057	WITHOUT_CLASSIFICATION	1.5760946019431258E-4	DEFECT
/* forkMode.getValue().equals(ForkMode.PER_BATCH) */	WITHOUT_CLASSIFICATION	0.9999942915648853	WITHOUT_CLASSIFICATION	5.7084351146868365E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999996958536274	WITHOUT_CLASSIFICATION	3.0414637271301487E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999989929297763	WITHOUT_CLASSIFICATION	1.0070702236150735E-6	DEFECT
// execute the test and get the return code	WITHOUT_CLASSIFICATION	0.9999998291562606	WITHOUT_CLASSIFICATION	1.7084373932136769E-7	DEFECT
// execute the test and get the return code	WITHOUT_CLASSIFICATION	0.9999998291562606	WITHOUT_CLASSIFICATION	1.7084373932136769E-7	DEFECT
// null watchdog means no timeout, you'd better not check with null	WITHOUT_CLASSIFICATION	0.9999992942570946	WITHOUT_CLASSIFICATION	7.057429054293161E-7	DEFECT
// if there is an error/failure and that it should halt, stop // everything otherwise just log a statement	WITHOUT_CLASSIFICATION	0.9999995073899428	WITHOUT_CLASSIFICATION	4.926100571311428E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999209490427	WITHOUT_CLASSIFICATION	7.905095730336347E-8	DEFECT
// set the default values if not specified //@todo should be moved to the test class instead.	WITHOUT_CLASSIFICATION	0.9999999908976254	WITHOUT_CLASSIFICATION	9.102374667487133E-9	DEFECT
// Create a temporary file to pass the test cases to run to // the runner (one test case per line)	WITHOUT_CLASSIFICATION	0.9999945145499841	WITHOUT_CLASSIFICATION	5.48545001590431E-6	DEFECT
// #31885	WITHOUT_CLASSIFICATION	0.9999785215067991	WITHOUT_CLASSIFICATION	2.147849320086668E-5	DEFECT
// ignored.	WITHOUT_CLASSIFICATION	0.9999996698857297	WITHOUT_CLASSIFICATION	3.301142702563702E-7	DEFECT
// in VM is not very nice since it could probably hang the // whole build. IMHO this method should be avoided and it would be best // to remove it in future versions. TBD. (SBa)	WITHOUT_CLASSIFICATION	0.7853064575359305	WITHOUT_CLASSIFICATION	0.21469354246406952	DEFECT
// make sure the test will be accepted as a TestCase	WITHOUT_CLASSIFICATION	0.9999998759659608	WITHOUT_CLASSIFICATION	1.240340391359323E-7	DEFECT
// make sure the test annotation are accepted	WITHOUT_CLASSIFICATION	0.9999995597281609	WITHOUT_CLASSIFICATION	4.402718390403992E-7	DEFECT
// will cause trouble in JDK 1.1 if omitted	WITHOUT_CLASSIFICATION	0.9999882414573105	WITHOUT_CLASSIFICATION	1.1758542689588763E-5	DEFECT
// local copy since LogOutputStream.task is private	WITHOUT_CLASSIFICATION	0.999982872489257	WITHOUT_CLASSIFICATION	1.7127510743068407E-5	DEFECT
// this one is here because the changes to support ResourceCollections // have broken Magic's JUnitTestTask. // // The task adds a FileSet to a BatchTest instance using the // Java API and without telling the FileSet about its project // instance.  The original code would pass in project on the // call to getDirectoryScanner - which is now hidden deep into // Resources.iterator() and not reachable.	WITHOUT_CLASSIFICATION	0.9881078917471755	WITHOUT_CLASSIFICATION	0.011892108252824517	DEFECT
// dummy output for the framed report // it's all done by extension...	WITHOUT_CLASSIFICATION	0.9999943558821761	WITHOUT_CLASSIFICATION	5.644117823895726E-6	DEFECT
// conforming to NodeList interface	WITHOUT_CLASSIFICATION	0.9999991328144865	WITHOUT_CLASSIFICATION	8.671855134963823E-7	DEFECT
// this should never happen	WITHOUT_CLASSIFICATION	0.9996887521371449	WITHOUT_CLASSIFICATION	3.112478628551309E-4	DEFECT
// write the document	WITHOUT_CLASSIFICATION	0.9999998170327637	WITHOUT_CLASSIFICATION	1.8296723628226897E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999209490427	WITHOUT_CLASSIFICATION	7.905095730336347E-8	DEFECT
//----- from now, the methods are all related to DOM tree manipulation	WITHOUT_CLASSIFICATION	0.9999962511083746	WITHOUT_CLASSIFICATION	3.748891625208692E-6	DEFECT
// writers do not throw exceptions, so check for them.	WITHOUT_CLASSIFICATION	0.9999999606063772	WITHOUT_CLASSIFICATION	3.939362279009273E-8	DEFECT
// create the dom tree	WITHOUT_CLASSIFICATION	0.9999999614539135	WITHOUT_CLASSIFICATION	3.854608660685063E-8	DEFECT
// get all files and add them to the document	WITHOUT_CLASSIFICATION	0.9999992769925773	WITHOUT_CLASSIFICATION	7.230074226849797E-7	DEFECT
// make sure that this is REALLY a testsuite.	WITHOUT_CLASSIFICATION	0.9999974199275864	WITHOUT_CLASSIFICATION	2.5800724135659716E-6	DEFECT
//wrong root element name // issue a warning.	WITHOUT_CLASSIFICATION	0.9994782075473198	WITHOUT_CLASSIFICATION	5.217924526803432E-4	DEFECT
// a testcase might have failed and write a zero-length document, // It has already failed, but hey.... mm. just put a warning	WITHOUT_CLASSIFICATION	0.9999996481115878	WITHOUT_CLASSIFICATION	3.5188841218643885E-7	DEFECT
// a missing . might imply no package at all. Don't get fooled.	WITHOUT_CLASSIFICATION	0.9998430715872718	WITHOUT_CLASSIFICATION	1.5692841272825023E-4	DEFECT
// modify the name attribute and set the package	WITHOUT_CLASSIFICATION	0.9999997124646499	WITHOUT_CLASSIFICATION	2.8753535004126216E-7	DEFECT
// don't filter AssertionFailure	WITHOUT_CLASSIFICATION	0.9999681307833843	WITHOUT_CLASSIFICATION	3.186921661562645E-5	DEFECT
// JUnit 4 support:	WITHOUT_CLASSIFICATION	0.9999903431351049	WITHOUT_CLASSIFICATION	9.656864895049861E-6	DEFECT
// check for a static suite method first, even when using // JUnit 4	WITHOUT_CLASSIFICATION	0.9999999990349389	WITHOUT_CLASSIFICATION	9.65061143022895E-10	DEFECT
// check if there is a suite method	WITHOUT_CLASSIFICATION	0.9999999615053462	WITHOUT_CLASSIFICATION	3.849465373294581E-8	DEFECT
// no appropriate suite method found. We don't report any // error here since it might be perfectly normal.	WITHOUT_CLASSIFICATION	0.9985009774172329	WITHOUT_CLASSIFICATION	0.0014990225827672076	DEFECT
// Check for JDK 5 first. Will *not* help on JDK 1.4 // if only junit-4.0.jar in CP because in that case // linkage of whole task will already have failed! But // will help if CP has junit-3.8.2.jar:junit-4.0.jar.	WITHOUT_CLASSIFICATION	0.999999953742514	WITHOUT_CLASSIFICATION	4.625748585311377E-8	DEFECT
// In that case first C.fN will fail with CNFE and we // will avoid UnsupportedClassVersionError.	WITHOUT_CLASSIFICATION	0.9999927722274492	WITHOUT_CLASSIFICATION	7.227772550786681E-6	DEFECT
// OK, fall back to JUnit 3.	WITHOUT_CLASSIFICATION	0.9999886658772018	WITHOUT_CLASSIFICATION	1.1334122798130985E-5	DEFECT
// Let's use it!	WITHOUT_CLASSIFICATION	0.9999984915671194	WITHOUT_CLASSIFICATION	1.5084328806360797E-6	DEFECT
// Use JUnit 3.	WITHOUT_CLASSIFICATION	0.9999987152441938	WITHOUT_CLASSIFICATION	1.2847558062196902E-6	DEFECT
// try to extract a test suite automatically this // will generate warnings if the class is no // suitable Test	WITHOUT_CLASSIFICATION	0.9999912994595911	WITHOUT_CLASSIFICATION	8.700540408956946E-6	DEFECT
// had an exception constructing suite	WITHOUT_CLASSIFICATION	0.9999999788471459	WITHOUT_CLASSIFICATION	2.1152854177444857E-8	DEFECT
// Add/overlay system properties on the properties from the Ant project	WITHOUT_CLASSIFICATION	0.9999744359510088	WITHOUT_CLASSIFICATION	2.5564048991248288E-5	DEFECT
// return the stack unfiltered	WITHOUT_CLASSIFICATION	0.9999995385571977	WITHOUT_CLASSIFICATION	4.6144280228520667E-7	DEFECT
// Not strictly necessary but probably desirable. // JUnit 4-specific test GUIs will show just "failures". // But Ant's output shows "failures" vs. "errors". // We would prefer to show "failure" for things that logically are.	WITHOUT_CLASSIFICATION	0.9999999883779838	WITHOUT_CLASSIFICATION	1.1622016195275879E-8	DEFECT
// To compile on pre-JDK 4 (even though this should always succeed):	WITHOUT_CLASSIFICATION	0.9998966446251025	WITHOUT_CLASSIFICATION	1.0335537489752449E-4	DEFECT
// pre-3.4	WITHOUT_CLASSIFICATION	0.9999975069887741	WITHOUT_CLASSIFICATION	2.493011225921913E-6	DEFECT
// JUnitTestRunner	WITHOUT_CLASSIFICATION	0.9999998710657171	WITHOUT_CLASSIFICATION	1.2893428289629268E-7	DEFECT
//rethrow	WITHOUT_CLASSIFICATION	0.9999343001255351	WITHOUT_CLASSIFICATION	6.569987446497233E-5	DEFECT
//wrap	WITHOUT_CLASSIFICATION	0.9999749984400405	WITHOUT_CLASSIFICATION	2.5001559959545407E-5	DEFECT
// sorted by newest Kaffe version first	WITHOUT_CLASSIFICATION	0.9999994091613994	WITHOUT_CLASSIFICATION	5.9083860062742E-7	DEFECT
// pre Kaffe 1.1.5	WITHOUT_CLASSIFICATION	0.9999956681923083	WITHOUT_CLASSIFICATION	4.331807691680672E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999996958536274	WITHOUT_CLASSIFICATION	3.0414637271301487E-7	DEFECT
// we are going to scan everything anyway	WITHOUT_CLASSIFICATION	0.9999961932214592	WITHOUT_CLASSIFICATION	3.8067785407171343E-6	DEFECT
// only scan directories that can include matched files or // directories	WITHOUT_CLASSIFICATION	0.9999993259727251	WITHOUT_CLASSIFICATION	6.740272748237698E-7	DEFECT
// avoid double scanning of directories, can only happen in fast mode	WITHOUT_CLASSIFICATION	0.9999946422538478	WITHOUT_CLASSIFICATION	5.3577461521072345E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999989929297763	WITHOUT_CLASSIFICATION	1.0070702236150735E-6	DEFECT
// This default has been good enough until Ant 1.6.3, so stick // with it	WITHOUT_CLASSIFICATION	0.9999875681314004	WITHOUT_CLASSIFICATION	1.2431868599524846E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999209490427	WITHOUT_CLASSIFICATION	7.905095730336347E-8	DEFECT
// Rats. // should not happen	WITHOUT_CLASSIFICATION	0.9988778496611955	WITHOUT_CLASSIFICATION	0.0011221503388045345	DEFECT
// otherwise ExecuteJava has thrown an exception	WITHOUT_CLASSIFICATION	0.9999987398643242	WITHOUT_CLASSIFICATION	1.260135675833292E-6	DEFECT
// No includes supplied, so set it to 'matches all'	WITHOUT_CLASSIFICATION	0.9999999992526616	WITHOUT_CLASSIFICATION	7.473385219303626E-10	DEFECT
// always start from the current ftp working dir	WITHOUT_CLASSIFICATION	0.9998048955398942	WITHOUT_CLASSIFICATION	1.9510446010587745E-4	DEFECT
// put in the newroots vector the include patterns without // wildcard tokens	WITHOUT_CLASSIFICATION	0.9999495605125246	WITHOUT_CLASSIFICATION	5.0439487475366635E-5	DEFECT
// construct it	WITHOUT_CLASSIFICATION	0.9999986427518697	WITHOUT_CLASSIFICATION	1.3572481303426094E-6	DEFECT
// cool case, //we do not need to scan all the subdirs in the relative path	WITHOUT_CLASSIFICATION	0.9999992939677447	WITHOUT_CLASSIFICATION	7.060322553509402E-7	DEFECT
//this should not happen, except if parent has been deleted by another process	WITHOUT_CLASSIFICATION	0.9747774728883791	WITHOUT_CLASSIFICATION	0.02522252711162096	DEFECT
// we are already in the right path, so the second parameter // is false	WITHOUT_CLASSIFICATION	0.9999501977824744	WITHOUT_CLASSIFICATION	4.980221752554907E-5	DEFECT
// hit a hidden file assume not a symlink	WITHOUT_CLASSIFICATION	0.9999904292175974	WITHOUT_CLASSIFICATION	9.570782402458717E-6	DEFECT
// getRelativePath also finds about symlinks	WITHOUT_CLASSIFICATION	0.9999984988524391	WITHOUT_CLASSIFICATION	1.501147560933355E-6	DEFECT
// warn that selectors are not supported	WITHOUT_CLASSIFICATION	0.9999933410895784	WITHOUT_CLASSIFICATION	6.6589104216403115E-6	DEFECT
// If we are doing a listing, we need the output stream created now.	WITHOUT_CLASSIFICATION	0.9999999939889198	WITHOUT_CLASSIFICATION	6.011080242476671E-9	DEFECT
// get files from filesets	WITHOUT_CLASSIFICATION	0.9999993243592266	WITHOUT_CLASSIFICATION	6.756407734328038E-7	DEFECT
// find first non cached dir	WITHOUT_CLASSIFICATION	0.9999999419455281	WITHOUT_CLASSIFICATION	5.8054471957400294E-8	DEFECT
// check if dir exists by trying to change into it.	WITHOUT_CLASSIFICATION	0.9999999621345146	WITHOUT_CLASSIFICATION	3.786548542851542E-8	DEFECT
// could not change to it - try to create it	WITHOUT_CLASSIFICATION	0.9999824313094211	WITHOUT_CLASSIFICATION	1.7568690578975266E-5	DEFECT
// create a local temporary file	WITHOUT_CLASSIFICATION	0.9999995168322402	WITHOUT_CLASSIFICATION	4.831677598984044E-7	DEFECT
// see if we should issue a chmod command	WITHOUT_CLASSIFICATION	0.9994413754751751	WITHOUT_CLASSIFICATION	5.586245248248772E-4	DEFECT
// ignore it	WITHOUT_CLASSIFICATION	0.9999994298784108	WITHOUT_CLASSIFICATION	5.701215891894306E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999209490427	WITHOUT_CLASSIFICATION	7.905095730336347E-8	DEFECT
// ignore it	WITHOUT_CLASSIFICATION	0.9999994298784108	WITHOUT_CLASSIFICATION	5.701215891894306E-7	DEFECT
// delegate the deletion of the local temp file to the delete task // because of race conditions occuring on Windows	WITHOUT_CLASSIFICATION	0.9999973792655161	WITHOUT_CLASSIFICATION	2.620734483885024E-6	DEFECT
// For Microsoft's Ftp-Service an Array with length 0 is // returned if configured to return listings in "MS-DOS"-Format	WITHOUT_CLASSIFICATION	0.999999932504495	WITHOUT_CLASSIFICATION	6.74955049216809E-8	DEFECT
// If we are sending files, then assume out of date. // If we are getting files, then throw an error	WITHOUT_CLASSIFICATION	0.9999911792154936	WITHOUT_CLASSIFICATION	8.820784506366274E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999209490427	WITHOUT_CLASSIFICATION	7.905095730336347E-8	DEFECT
// codes 521, 550 and 553 can be produced by FTP Servers //  to indicate that an attempt to create a directory has //  failed because the directory already exists.	WITHOUT_CLASSIFICATION	0.9999808207462481	WITHOUT_CLASSIFICATION	1.9179253751998276E-5	DEFECT
// If an initial command was configured then send it. // Some FTP servers offer different modes of operation, // E.G. switching between a UNIX file system mode and // a legacy file system.	WITHOUT_CLASSIFICATION	0.9999995756365633	WITHOUT_CLASSIFICATION	4.2436343664636544E-7	DEFECT
// For a unix ftp server you can set the default mask for all files // created.	WITHOUT_CLASSIFICATION	0.9999999259843476	WITHOUT_CLASSIFICATION	7.401565238107629E-8	DEFECT
// If the action is MK_DIR, then the specified remote // directory is the directory to create.	WITHOUT_CLASSIFICATION	0.9999996029046431	WITHOUT_CLASSIFICATION	3.970953569681243E-7	DEFECT
// in this case we want to find how much time span there is between local // and remote	WITHOUT_CLASSIFICATION	0.9999936965983832	WITHOUT_CLASSIFICATION	6.3034016167264294E-6	DEFECT
//socks	WITHOUT_CLASSIFICATION	0.9999366646389283	WITHOUT_CLASSIFICATION	6.333536107167807E-5	DEFECT
//this may be a java1.4 thingy only	WITHOUT_CLASSIFICATION	0.9999859056919559	WITHOUT_CLASSIFICATION	1.409430804415642E-5	DEFECT
// simple one-shot execution	WITHOUT_CLASSIFICATION	0.999998931737765	WITHOUT_CLASSIFICATION	1.0682622349962385E-6	DEFECT
// need nested read/write elements	WITHOUT_CLASSIFICATION	0.9999998371135633	WITHOUT_CLASSIFICATION	1.6288643655179865E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999209490427	WITHOUT_CLASSIFICATION	7.905095730336347E-8	DEFECT
//here we'd parse the output from change -o into submit -i //in order to support default change.	WITHOUT_CLASSIFICATION	0.9999998771153202	WITHOUT_CLASSIFICATION	1.2288467977837998E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc //ToDo: If dealing with default cl need to parse out <enter description here>	WITHOUT_CLASSIFICATION	0.9999964272929648	WITHOUT_CLASSIFICATION	3.5727070351851317E-6	DEFECT
/* -n */	WITHOUT_CLASSIFICATION	0.9999459409294802	WITHOUT_CLASSIFICATION	5.40590705198721E-5	DEFECT
//Remove any non-numerical chars - should leave the change number	WITHOUT_CLASSIFICATION	0.9994846931191682	WITHOUT_CLASSIFICATION	5.153068808317967E-4	DEFECT
// this type of output might happen // Change 18 renamed change 20 and submitted.	WITHOUT_CLASSIFICATION	0.9998867372488885	WITHOUT_CLASSIFICATION	1.13262751111449E-4	DEFECT
//Match "//" for begining of depot filespec	WITHOUT_CLASSIFICATION	0.999999980719493	WITHOUT_CLASSIFICATION	1.9280506947555238E-8	DEFECT
// we need to escape the description in case there are /	WITHOUT_CLASSIFICATION	0.9999994866085484	WITHOUT_CLASSIFICATION	5.133914515073443E-7	DEFECT
// NOTE kirk@radik.com 04-April-2001 -- If you put in the -s, you // have to start running through regular expressions here. Much easier // to just not include the scripting information than to try to add it // and strip it later.	WITHOUT_CLASSIFICATION	0.9999968856983399	WITHOUT_CLASSIFICATION	3.114301660169255E-6	DEFECT
//EoF	WITHOUT_CLASSIFICATION	0.999870899217584	WITHOUT_CLASSIFICATION	1.291007824160353E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc //Input //Output //Error // CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999993067061185	WITHOUT_CLASSIFICATION	6.932938815011977E-7	DEFECT
/* Here we can either revert any unchanged files in a changelist         * or         * any files regardless of whether they have been changed or not         *         *         * The whole process also accepts a p4 filespec         */	WITHOUT_CLASSIFICATION	0.9999999861610893	WITHOUT_CLASSIFICATION	1.3838910766909184E-8	DEFECT
/* -a */	WITHOUT_CLASSIFICATION	0.9999778831639203	WITHOUT_CLASSIFICATION	2.2116836079681202E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999209490427	WITHOUT_CLASSIFICATION	7.905095730336347E-8	DEFECT
/* -n */	WITHOUT_CLASSIFICATION	0.9999459409294802	WITHOUT_CLASSIFICATION	5.40590705198721E-5	DEFECT
/* -n */	WITHOUT_CLASSIFICATION	0.9999459409294802	WITHOUT_CLASSIFICATION	5.40590705198721E-5	DEFECT
/* -f */	WITHOUT_CLASSIFICATION	0.9999672792491139	WITHOUT_CLASSIFICATION	3.272075088605465E-5	DEFECT
/* -t */	WITHOUT_CLASSIFICATION	0.9999558434668723	WITHOUT_CLASSIFICATION	4.415653312771117E-5	DEFECT
/* -v */	WITHOUT_CLASSIFICATION	0.9999707024059644	WITHOUT_CLASSIFICATION	2.9297594035638534E-5	DEFECT
//We have to create a unlocked label first	WITHOUT_CLASSIFICATION	0.9999998398230044	WITHOUT_CLASSIFICATION	1.6017699554783944E-7	DEFECT
//Now lock if required	WITHOUT_CLASSIFICATION	0.9999249614920372	WITHOUT_CLASSIFICATION	7.503850796275368E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999209490427	WITHOUT_CLASSIFICATION	7.905095730336347E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999209490427	WITHOUT_CLASSIFICATION	7.905095730336347E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999209490427	WITHOUT_CLASSIFICATION	7.905095730336347E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999209490427	WITHOUT_CLASSIFICATION	7.905095730336347E-8	DEFECT
// CheckStyle:VisibilityModifier OFF - bc // CheckStyle:MemberNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9999999750136407	WITHOUT_CLASSIFICATION	2.4986359356582724E-8	DEFECT
// CheckStyle:MemberNameCheck ON // CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999901034943	WITHOUT_CLASSIFICATION	9.896505679767212E-9	DEFECT
// Massage PCLI lvf output transforming '\' to '/' so get command works appropriately	WITHOUT_CLASSIFICATION	0.9999863096577408	WITHOUT_CLASSIFICATION	1.3690342259134717E-5	DEFECT
//Read back the label spec from perforce, //Replace Options //Submit back to Perforce	WITHOUT_CLASSIFICATION	0.9999996559020929	WITHOUT_CLASSIFICATION	3.440979070293305E-7	DEFECT
//when running labelsync, if view elements are in sync, //Perforce produces a line of output //looking like this one : //error: //depot/file2 - label in sync.	WITHOUT_CLASSIFICATION	0.999962547444616	WITHOUT_CLASSIFICATION	3.745255538408036E-5	DEFECT
//sync says "error:" when a file is up-to-date	WITHOUT_CLASSIFICATION	0.9999925464572981	WITHOUT_CLASSIFICATION	7.453542701890175E-6	DEFECT
//sometimes there's "info1:	WITHOUT_CLASSIFICATION	0.9999997084486666	WITHOUT_CLASSIFICATION	2.9155133337632573E-7	DEFECT
//P4 runtime directives	WITHOUT_CLASSIFICATION	0.9999980772066996	WITHOUT_CLASSIFICATION	1.922793300395118E-6	DEFECT
// Perforce task directives	WITHOUT_CLASSIFICATION	0.999999882245205	WITHOUT_CLASSIFICATION	1.1775479499563905E-7	DEFECT
//P4 g-opts and cmd opts (rtfm)	WITHOUT_CLASSIFICATION	0.9999997571519053	WITHOUT_CLASSIFICATION	2.428480947157153E-7	DEFECT
//Setters called by Ant	WITHOUT_CLASSIFICATION	0.9999951960290041	WITHOUT_CLASSIFICATION	4.803970995906472E-6	DEFECT
//Get default P4 settings from environment - Mark would have done something cool with //introspection here.....:-)	WITHOUT_CLASSIFICATION	0.9518206956489901	WITHOUT_CLASSIFICATION	0.04817930435100992	DEFECT
// reset error flags before executing the command	WITHOUT_CLASSIFICATION	0.9984495076817368	WITHOUT_CLASSIFICATION	0.0015504923182632787	DEFECT
//Check API for these - it's how CVS does it...	WITHOUT_CLASSIFICATION	0.9993033987435844	WITHOUT_CLASSIFICATION	6.966012564155665E-4	DEFECT
/*     * Constant for the PCLI listversionedfiles recursive i a format "get" understands     */	WITHOUT_CLASSIFICATION	0.999999997008506	WITHOUT_CLASSIFICATION	2.9914939766223117E-9	DEFECT
// private static final String PCLI_LVF_ARGS = "lvf -z -aw";	WITHOUT_CLASSIFICATION	0.9999997637470054	WITHOUT_CLASSIFICATION	2.3625299465900764E-7	DEFECT
// Check workspace exists // Launch PCLI listversionedfiles -z -aw // Capture output // build the command line from what we got the format is	WITHOUT_CLASSIFICATION	0.9999959825420668	WITHOUT_CLASSIFICATION	4.017457933293206E-6	DEFECT
// default pvcs project is "/"	WITHOUT_CLASSIFICATION	0.9999972909179675	WITHOUT_CLASSIFICATION	2.709082032520935E-6	DEFECT
// Create folders in workspace	WITHOUT_CLASSIFICATION	0.9999932743731619	WITHOUT_CLASSIFICATION	6.725626838213457E-6	DEFECT
// Launch get on output captured from PCLI lvf	WITHOUT_CLASSIFICATION	0.9999995860422614	WITHOUT_CLASSIFICATION	4.1395773865809445E-7	DEFECT
// Extract the name of the directory from the filename	WITHOUT_CLASSIFICATION	0.9999999202784781	WITHOUT_CLASSIFICATION	7.972152200428727E-8	DEFECT
// Change these through their GET and SET methods.	WITHOUT_CLASSIFICATION	0.9999999951077642	WITHOUT_CLASSIFICATION	4.8922358303422215E-9	DEFECT
// These fields deal with includes and excludes	WITHOUT_CLASSIFICATION	0.9999928645878245	WITHOUT_CLASSIFICATION	7.135412175448323E-6	DEFECT
// Check all of the properties that are required.	WITHOUT_CLASSIFICATION	0.9999983020369357	WITHOUT_CLASSIFICATION	1.6979630642531294E-6	DEFECT
// Check to see if the target directory exists.	WITHOUT_CLASSIFICATION	0.9999999956511801	WITHOUT_CLASSIFICATION	4.348819849643707E-9	DEFECT
// Search the items on this server.	WITHOUT_CLASSIFICATION	0.9999881726764709	WITHOUT_CLASSIFICATION	1.1827323529050337E-5	DEFECT
// Disconnect from the server.	WITHOUT_CLASSIFICATION	0.9999995575165962	WITHOUT_CLASSIFICATION	4.4248340381405805E-7	DEFECT
// Tell how many files were checked out.	WITHOUT_CLASSIFICATION	0.9999964845315354	WITHOUT_CLASSIFICATION	3.515468464431731E-6	DEFECT
// Optional; logOn() connects if necessary.	WITHOUT_CLASSIFICATION	0.9999981204375914	WITHOUT_CLASSIFICATION	1.879562408608886E-6	DEFECT
// Logon using specified user name and password.	WITHOUT_CLASSIFICATION	0.9999997597229165	WITHOUT_CLASSIFICATION	2.402770834669346E-7	DEFECT
// We always display the ItemID (OBJECT_ID) and primary descriptor.	WITHOUT_CLASSIFICATION	0.9999996723251514	WITHOUT_CLASSIFICATION	3.276748485781987E-7	DEFECT
//If a working directory was specified then add it to the command line	WITHOUT_CLASSIFICATION	0.9957303098748042	WITHOUT_CLASSIFICATION	0.004269690125195858	DEFECT
// Checking for "\ // or           "/ // or           "X:\...	WITHOUT_CLASSIFICATION	0.9999338294830528	WITHOUT_CLASSIFICATION	6.617051694724187E-5	DEFECT
// If we find a "file" attribute then act on a file otherwise act on a project	WITHOUT_CLASSIFICATION	0.9999997865766845	WITHOUT_CLASSIFICATION	2.134233155179845E-7	DEFECT
// after you are all of the properties are ok, do your thing // with StarTeam.  If there are any kind of exceptions then // send the message to the project log.	WITHOUT_CLASSIFICATION	0.9999838019524395	WITHOUT_CLASSIFICATION	1.6198047560369613E-5	DEFECT
// For performance reasons, it is important to pre-fetch all the // properties we'll need for all the items we'll be searching.	WITHOUT_CLASSIFICATION	0.9999971274186401	WITHOUT_CLASSIFICATION	2.872581359797768E-6	DEFECT
// We'll need this item type's primary descriptor.	WITHOUT_CLASSIFICATION	0.9999985160358213	WITHOUT_CLASSIFICATION	1.4839641786435902E-6	DEFECT
// Does this item type have a secondary descriptor? // If so, we'll need it.	WITHOUT_CLASSIFICATION	0.999981204923712	WITHOUT_CLASSIFICATION	1.8795076287888528E-5	DEFECT
// Now, build an array of the property names.	WITHOUT_CLASSIFICATION	0.9999950564601543	WITHOUT_CLASSIFICATION	4.943539845801333E-6	DEFECT
// Pre-fetch the item properties and cache them.	WITHOUT_CLASSIFICATION	0.9999998563163323	WITHOUT_CLASSIFICATION	1.4368366766029565E-7	DEFECT
// Now, search for items in the selected folder.	WITHOUT_CLASSIFICATION	0.9999998942416483	WITHOUT_CLASSIFICATION	1.0575835174652538E-7	DEFECT
// Free up the memory used by the cached items.	WITHOUT_CLASSIFICATION	0.9999997290050925	WITHOUT_CLASSIFICATION	2.7099490760809176E-7	DEFECT
// convert whatever separator char is in starteam to that of the target system.	WITHOUT_CLASSIFICATION	0.9999999826468866	WITHOUT_CLASSIFICATION	1.735311345467108E-8	DEFECT
// If it ends with separator then strip it off	WITHOUT_CLASSIFICATION	0.999998569003503	WITHOUT_CLASSIFICATION	1.4309964969223671E-6	DEFECT
// Replace the projectName in the file's absolute path to the viewName. // This makes the root target of a checkout operation equal to: // targetFolder + dirName	WITHOUT_CLASSIFICATION	0.9999999987361814	WITHOUT_CLASSIFICATION	1.2638185937426209E-9	DEFECT
// only want to do this the first time	WITHOUT_CLASSIFICATION	0.9999992596914651	WITHOUT_CLASSIFICATION	7.403085349471048E-7	DEFECT
// Process all items in this folder.	WITHOUT_CLASSIFICATION	0.9999994726487048	WITHOUT_CLASSIFICATION	5.273512951746977E-7	DEFECT
// Process all subfolders recursively if recursion is on.	WITHOUT_CLASSIFICATION	0.9999998649234579	WITHOUT_CLASSIFICATION	1.3507654207941732E-7	DEFECT
// Get descriptors for this item type.	WITHOUT_CLASSIFICATION	0.9999990336580884	WITHOUT_CLASSIFICATION	9.663419116458538E-7	DEFECT
// VERBOSE MODE ONLY	WITHOUT_CLASSIFICATION	0.9999869141154468	WITHOUT_CLASSIFICATION	1.3085884553195604E-5	DEFECT
// Show folder only if changed.	WITHOUT_CLASSIFICATION	0.9999992130521829	WITHOUT_CLASSIFICATION	7.86947817139622E-7	DEFECT
// Show if the file is locked.	WITHOUT_CLASSIFICATION	0.9999998973048915	WITHOUT_CLASSIFICATION	1.0269510865089522E-7	DEFECT
// END VERBOSE ONLY	WITHOUT_CLASSIFICATION	0.9999889757886888	WITHOUT_CLASSIFICATION	1.1024211311256555E-5	DEFECT
// add -command CheckOutFile to the commandline	WITHOUT_CLASSIFICATION	0.9999999164621376	WITHOUT_CLASSIFICATION	8.353786240769339E-8	DEFECT
// Finally, show the Item properties ... // Always show the ItemID.	WITHOUT_CLASSIFICATION	0.9993201081228168	WITHOUT_CLASSIFICATION	6.79891877183317E-4	DEFECT
// Show the primary descriptor. // There should always be one.	WITHOUT_CLASSIFICATION	0.9999795008216714	WITHOUT_CLASSIFICATION	2.0499178328549425E-5	DEFECT
// Show the secondary descriptor, if there is one. // Some item types have one, some don't.	WITHOUT_CLASSIFICATION	0.9999978039546393	WITHOUT_CLASSIFICATION	2.1960453605951495E-6	DEFECT
// Change the item to be checked out to a StarTeam File.	WITHOUT_CLASSIFICATION	0.9999999970034291	WITHOUT_CLASSIFICATION	2.996570806107101E-9	DEFECT
// The local file name is simply the local target path (tgt) which has // been passed recursively down from the top of the tree, with the item's name appended.	WITHOUT_CLASSIFICATION	0.9999999981384312	WITHOUT_CLASSIFICATION	1.861568676002206E-9	DEFECT
// Begin SET and GET methods	WITHOUT_CLASSIFICATION	0.9999999013775301	WITHOUT_CLASSIFICATION	9.862246974062372E-8	DEFECT
// Begin filter getters and setters	WITHOUT_CLASSIFICATION	0.999984718168536	WITHOUT_CLASSIFICATION	1.5281831463988312E-5	DEFECT
// Check if need to set the loader	WITHOUT_CLASSIFICATION	0.9999999798096967	WITHOUT_CLASSIFICATION	2.019030325406493E-8	DEFECT
// Now create the scriptRunner	WITHOUT_CLASSIFICATION	0.9999999648696172	WITHOUT_CLASSIFICATION	3.513038291093058E-8	DEFECT
// find the script repository - it is stored in the project	WITHOUT_CLASSIFICATION	0.9994098711535038	WITHOUT_CLASSIFICATION	5.901288464962742E-4	DEFECT
/*            // try the context classloader            ClassLoader loader                = Thread.currentThread().getContextClassLoader();            */	WITHOUT_CLASSIFICATION	0.9999997656033264	WITHOUT_CLASSIFICATION	2.3439667363408554E-7	DEFECT
// If we find a "file" attribute then act on a file otherwise act on a project	WITHOUT_CLASSIFICATION	0.9999997865766845	WITHOUT_CLASSIFICATION	2.134233155179845E-7	DEFECT
// add -command CheckInFile to the commandline	WITHOUT_CLASSIFICATION	0.9999998293324767	WITHOUT_CLASSIFICATION	1.7066752328942943E-7	DEFECT
// add -file xxxxx to the commandline	WITHOUT_CLASSIFICATION	0.9999991528093476	WITHOUT_CLASSIFICATION	8.471906524792398E-7	DEFECT
// add -file xxxxx to the commandline	WITHOUT_CLASSIFICATION	0.9999991528093476	WITHOUT_CLASSIFICATION	8.471906524792398E-7	DEFECT
// add -command CheckInProject to the commandline	WITHOUT_CLASSIFICATION	0.9999988360937633	WITHOUT_CLASSIFICATION	1.1639062367289891E-6	DEFECT
// look for a recursive option	WITHOUT_CLASSIFICATION	0.9999999641513186	WITHOUT_CLASSIFICATION	3.584868133149708E-8	DEFECT
// look for a recursive option	WITHOUT_CLASSIFICATION	0.9999999641513186	WITHOUT_CLASSIFICATION	3.584868133149708E-8	DEFECT
// Look for a comment	WITHOUT_CLASSIFICATION	0.9999991357737055	WITHOUT_CLASSIFICATION	8.642262945287168E-7	DEFECT
// soscmd Command options	WITHOUT_CLASSIFICATION	0.9999999184782756	WITHOUT_CLASSIFICATION	8.152172430713434E-8	DEFECT
// soscmd Option flags	WITHOUT_CLASSIFICATION	0.9999988522225501	WITHOUT_CLASSIFICATION	1.1477774498482475E-6	DEFECT
// add -command GetFile to the commandline	WITHOUT_CLASSIFICATION	0.9999997827446885	WITHOUT_CLASSIFICATION	2.1725531158439234E-7	DEFECT
// look for a version attribute	WITHOUT_CLASSIFICATION	0.99999900685007	WITHOUT_CLASSIFICATION	9.93149929951818E-7	DEFECT
//add -revision xxxxx to the commandline	WITHOUT_CLASSIFICATION	0.9999969525568175	WITHOUT_CLASSIFICATION	3.047443182377486E-6	DEFECT
// add -command GetProject to the commandline	WITHOUT_CLASSIFICATION	0.9999991940799551	WITHOUT_CLASSIFICATION	8.0592004498379E-7	DEFECT
// look for a label option	WITHOUT_CLASSIFICATION	0.9999998697977205	WITHOUT_CLASSIFICATION	1.3020227960478613E-7	DEFECT
// make sure localDir exists, create it if it doesn't	WITHOUT_CLASSIFICATION	0.999902260486876	WITHOUT_CLASSIFICATION	9.773951312396436E-5	DEFECT
// This is the exit status	WITHOUT_CLASSIFICATION	0.999959906745208	WITHOUT_CLASSIFICATION	4.009325479208515E-5	DEFECT
// Use the OS VM launcher so we get environment variables	WITHOUT_CLASSIFICATION	0.9999994250227484	WITHOUT_CLASSIFICATION	5.749772516657809E-7	DEFECT
// Get the path to the soscmd(.exe)	WITHOUT_CLASSIFICATION	0.999998786577929	WITHOUT_CLASSIFICATION	1.213422070945908E-6	DEFECT
// SOS server address is required	WITHOUT_CLASSIFICATION	0.9997698211005364	WITHOUT_CLASSIFICATION	2.301788994637847E-4	DEFECT
// VSS Info is required	WITHOUT_CLASSIFICATION	0.9997413504314023	WITHOUT_CLASSIFICATION	2.5864956859762E-4	DEFECT
// VSS project is required	WITHOUT_CLASSIFICATION	0.9997359655776916	WITHOUT_CLASSIFICATION	2.640344223084133E-4	DEFECT
// -verbose	WITHOUT_CLASSIFICATION	0.9999996126498292	WITHOUT_CLASSIFICATION	3.873501708865381E-7	DEFECT
// Disable Compression	WITHOUT_CLASSIFICATION	0.9999999640015959	WITHOUT_CLASSIFICATION	3.599840412169522E-8	DEFECT
// If -soshome was not specified then we can look for nocache	WITHOUT_CLASSIFICATION	0.9999989209139768	WITHOUT_CLASSIFICATION	1.0790860231563546E-6	DEFECT
// Ignore Exception	WITHOUT_CLASSIFICATION	0.9999995659536455	WITHOUT_CLASSIFICATION	4.3404635441434825E-7	DEFECT
// look for a recursive option	WITHOUT_CLASSIFICATION	0.9999999641513186	WITHOUT_CLASSIFICATION	3.584868133149708E-8	DEFECT
// Look for a comment	WITHOUT_CLASSIFICATION	0.9999991357737055	WITHOUT_CLASSIFICATION	8.642262945287168E-7	DEFECT
// -verbose	WITHOUT_CLASSIFICATION	0.9999996126498292	WITHOUT_CLASSIFICATION	3.873501708865381E-7	DEFECT
// The SOS class knows that the SOS server needs the password flag, // even if there is no password ,so we send a " "	WITHOUT_CLASSIFICATION	0.9996220341248616	WITHOUT_CLASSIFICATION	3.779658751384354E-4	DEFECT
// add -command CheckOutProject to the commandline	WITHOUT_CLASSIFICATION	0.9999996421833317	WITHOUT_CLASSIFICATION	3.578166683058664E-7	DEFECT
// add -command AddLabel to the commandline	WITHOUT_CLASSIFICATION	0.9999998147506302	WITHOUT_CLASSIFICATION	1.8524936991034345E-7	DEFECT
// a label is required	WITHOUT_CLASSIFICATION	0.99998917791341	WITHOUT_CLASSIFICATION	1.0822086589975084E-5	DEFECT
// get the list of files in the dir	WITHOUT_CLASSIFICATION	0.9999995256143244	WITHOUT_CLASSIFICATION	4.743856756786043E-7	DEFECT
// get a random number between 0 and the number of files	WITHOUT_CLASSIFICATION	0.9999998969607464	WITHOUT_CLASSIFICATION	1.0303925352835281E-7	DEFECT
// set the source to the file at that location	WITHOUT_CLASSIFICATION	0.9999998807974536	WITHOUT_CLASSIFICATION	1.1920254638636532E-7	DEFECT
// Empty block	WITHOUT_CLASSIFICATION	0.9999974158845816	WITHOUT_CLASSIFICATION	2.584115418458019E-6	DEFECT
//System.exit(0);	WITHOUT_CLASSIFICATION	0.9999914059956667	WITHOUT_CLASSIFICATION	8.594004333319329E-6	DEFECT
// build successfull!	WITHOUT_CLASSIFICATION	0.9999984406051224	WITHOUT_CLASSIFICATION	1.5593948775570398E-6	DEFECT
/*AbstractSshMessage*/	WITHOUT_CLASSIFICATION	0.9999987881774254	WITHOUT_CLASSIFICATION	1.2118225745705738E-6	DEFECT
// dir does not exist.	WITHOUT_CLASSIFICATION	0.9998564900450527	WITHOUT_CLASSIFICATION	1.4350995494729558E-4	DEFECT
// only track progress for files larger than 100kb in verbose mode	WITHOUT_CLASSIFICATION	0.9999802382090396	WITHOUT_CLASSIFICATION	1.976179096048071E-5	DEFECT
// get I/O streams for remote scp	WITHOUT_CLASSIFICATION	0.9999880406569777	WITHOUT_CLASSIFICATION	1.1959343022378472E-5	DEFECT
// this indicates an error.	WITHOUT_CLASSIFICATION	0.9999773468247616	WITHOUT_CLASSIFICATION	2.2653175238381014E-5	DEFECT
// appears that the next token is not used and it's zero.	WITHOUT_CLASSIFICATION	0.8785965931700411	WITHOUT_CLASSIFICATION	0.1214034068299589	DEFECT
// read a content of lfile	WITHOUT_CLASSIFICATION	0.9999999730037197	WITHOUT_CLASSIFICATION	2.699628036852361E-8	DEFECT
// Ignored	WITHOUT_CLASSIFICATION	0.9999991774541208	WITHOUT_CLASSIFICATION	8.2254587911796E-7	DEFECT
// do nothing;	WITHOUT_CLASSIFICATION	0.9999951506779745	WITHOUT_CLASSIFICATION	4.849322025464794E-6	DEFECT
// didn't receive any response	WITHOUT_CLASSIFICATION	0.9999951470783178	WITHOUT_CLASSIFICATION	4.852921682158426E-6	DEFECT
// execute the command	WITHOUT_CLASSIFICATION	0.9999930682495778	WITHOUT_CLASSIFICATION	6.9317504221611465E-6	DEFECT
// wait for it to finish	WITHOUT_CLASSIFICATION	0.9999996004422235	WITHOUT_CLASSIFICATION	3.9955777654236154E-7	DEFECT
// ran out of time	WITHOUT_CLASSIFICATION	0.99999972868214	WITHOUT_CLASSIFICATION	2.7131786002756885E-7	DEFECT
// completed successfully	WITHOUT_CLASSIFICATION	0.9999975543869414	WITHOUT_CLASSIFICATION	2.4456130586127225E-6	DEFECT
// user:password@host:/path notation	WITHOUT_CLASSIFICATION	0.9999934148427395	WITHOUT_CLASSIFICATION	6.585157260413746E-6	DEFECT
// no password, will require passphrase	WITHOUT_CLASSIFICATION	0.9999631744543807	WITHOUT_CLASSIFICATION	3.6825545619350354E-5	DEFECT
// skip	WITHOUT_CLASSIFICATION	0.999993998466951	WITHOUT_CLASSIFICATION	6.001533048964889E-6	DEFECT
// send "C0644 filesize filename", where filename should not include '/'	WITHOUT_CLASSIFICATION	0.9999930492481128	WITHOUT_CLASSIFICATION	6.950751887220899E-6	DEFECT
// send a content of lfile	WITHOUT_CLASSIFICATION	0.9999999743159556	WITHOUT_CLASSIFICATION	2.568404444845323E-8	DEFECT
// C0644 filesize filename - header for a regular file // T time 0 time 0\n - present if perserve time. // D directory - this is the header for a directory.	WITHOUT_CLASSIFICATION	0.9999998988014476	WITHOUT_CLASSIFICATION	1.0119855236360114E-7	DEFECT
// swallow if there was an error before so that // original error will be passed up	WITHOUT_CLASSIFICATION	0.9999988400057354	WITHOUT_CLASSIFICATION	1.1599942646506431E-6	DEFECT
// since filesize keeps on decreasing we have to store the // initial filesize	WITHOUT_CLASSIFICATION	0.9999999984777003	WITHOUT_CLASSIFICATION	1.5222997039013497E-9	DEFECT
// b may be 0 for success, //          1 for error, //          2 for fatal error,	WITHOUT_CLASSIFICATION	0.9999985757595906	WITHOUT_CLASSIFICATION	1.4242404094070112E-6	DEFECT
// like <exec> // like <exec> // like <exec>	WITHOUT_CLASSIFICATION	0.9999072133796705	WITHOUT_CLASSIFICATION	9.27866203294665E-5	DEFECT
//log(message, Project.MSG_DEBUG);	WITHOUT_CLASSIFICATION	0.9999811290071327	WITHOUT_CLASSIFICATION	1.887099286738195E-5	DEFECT
// we want this to have a false default, unlike for Checkin.	WITHOUT_CLASSIFICATION	0.9999999612734832	WITHOUT_CLASSIFICATION	3.872651678743646E-8	DEFECT
// If the file doesn't pass the include/exclude tests, skip it.	WITHOUT_CLASSIFICATION	0.9999995046924524	WITHOUT_CLASSIFICATION	4.953075477183221E-7	DEFECT
// We try to update the status once to give StarTeam // another chance.	WITHOUT_CLASSIFICATION	0.9999999923954135	WITHOUT_CLASSIFICATION	7.604586566924465E-9	DEFECT
// once we find a folder that isn't in the repository, // we know we can add it.	WITHOUT_CLASSIFICATION	0.9999839753865937	WITHOUT_CLASSIFICATION	1.602461340640394E-5	DEFECT
// once we find a folder that isn't in the repository, // we know we can add it.	WITHOUT_CLASSIFICATION	0.9999839753865937	WITHOUT_CLASSIFICATION	1.602461340640394E-5	DEFECT
// if a label has been supplied, use it to configure the view // otherwise use current view	WITHOUT_CLASSIFICATION	0.9999999229216848	WITHOUT_CLASSIFICATION	7.707831525562997E-8	DEFECT
// if a date has been supplied use a view configured to the date.	WITHOUT_CLASSIFICATION	0.9999999620769158	WITHOUT_CLASSIFICATION	3.792308420061561E-8	DEFECT
// if a date has been supplied use a view configured to the date.	WITHOUT_CLASSIFICATION	0.9999999620769158	WITHOUT_CLASSIFICATION	3.792308420061561E-8	DEFECT
// otherwise, use this view configured as the tip.	WITHOUT_CLASSIFICATION	0.9999999268467884	WITHOUT_CLASSIFICATION	7.315321158764932E-8	DEFECT
// otherwise, use this view configured as the tip.	WITHOUT_CLASSIFICATION	0.9999999268467884	WITHOUT_CLASSIFICATION	7.315321158764932E-8	DEFECT
// For all Files in this folder, we need to check // if there have been modifications.	WITHOUT_CLASSIFICATION	0.999999946068831	WITHOUT_CLASSIFICATION	5.393116891742511E-8	DEFECT
// Now we recursively call this method on all sub folders in this // folder unless recursive attribute is off.	WITHOUT_CLASSIFICATION	0.9999996903264846	WITHOUT_CLASSIFICATION	3.096735154180281E-7	DEFECT
// handle the files so they appear first	WITHOUT_CLASSIFICATION	0.9999999540477262	WITHOUT_CLASSIFICATION	4.595227376181491E-8	DEFECT
// now do it again for the directories so they appear last.	WITHOUT_CLASSIFICATION	0.99999978842734	WITHOUT_CLASSIFICATION	2.1157265999808544E-7	DEFECT
// Create the new label and update the repository	WITHOUT_CLASSIFICATION	0.9999999229264295	WITHOUT_CLASSIFICATION	7.707357048406136E-8	DEFECT
// write a Properties file in each directory:	WITHOUT_CLASSIFICATION	0.9999977464518665	WITHOUT_CLASSIFICATION	2.253548133599977E-6	DEFECT
// Create an instance of the rmic, redirecting output to // the project log	WITHOUT_CLASSIFICATION	0.9999971427914476	WITHOUT_CLASSIFICATION	2.8572085524836266E-6	DEFECT
// CheckStyle:MethodNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9999996790301204	WITHOUT_CLASSIFICATION	3.209698796376357E-7	DEFECT
// once we find a folder that isn't in the repository, // we know we can add it.	WITHOUT_CLASSIFICATION	0.9999839753865937	WITHOUT_CLASSIFICATION	1.602461340640394E-5	DEFECT
//ATTRIBUTES settable from ant.	WITHOUT_CLASSIFICATION	0.9999996289711532	WITHOUT_CLASSIFICATION	3.710288467010707E-7	DEFECT
// if a label has been supplied and it is a view label, use it // to configure the view	WITHOUT_CLASSIFICATION	0.9999999485415506	WITHOUT_CLASSIFICATION	5.14584493111209E-8	DEFECT
// if a label has been supplied and it is a revision label, use the raw // the view as the snapshot	WITHOUT_CLASSIFICATION	0.9999999068090871	WITHOUT_CLASSIFICATION	9.31909128191296E-8	DEFECT
// prune away any files not belonging to the revision label // this is one ugly API from Starteam SDK	WITHOUT_CLASSIFICATION	0.9989925953888736	WITHOUT_CLASSIFICATION	0.0010074046111263372	DEFECT
// PR 31965 says that it can return null	WITHOUT_CLASSIFICATION	0.9999985779819746	WITHOUT_CLASSIFICATION	1.4220180254980342E-6	DEFECT
// no root local mapping has been specified.	WITHOUT_CLASSIFICATION	0.9999988247319297	WITHOUT_CLASSIFICATION	1.1752680702750197E-6	DEFECT
// Inspect everything in the root folder and then recursively	WITHOUT_CLASSIFICATION	0.9999639775291521	WITHOUT_CLASSIFICATION	3.60224708479349E-5	DEFECT
// Tell user what he is doing	WITHOUT_CLASSIFICATION	0.9999981202725695	WITHOUT_CLASSIFICATION	1.8797274304492933E-6	DEFECT
// set the local folder.	WITHOUT_CLASSIFICATION	0.9999998970736051	WITHOUT_CLASSIFICATION	1.0292639477445352E-7	DEFECT
// set the local folder.	WITHOUT_CLASSIFICATION	0.9999998970736051	WITHOUT_CLASSIFICATION	1.0292639477445352E-7	DEFECT
// ATTRIBUTES	WITHOUT_CLASSIFICATION	0.9999923691820249	WITHOUT_CLASSIFICATION	7.630817974973626E-6	DEFECT
// create a hashtable to group them by parent directory:	WITHOUT_CLASSIFICATION	0.9999943040080871	WITHOUT_CLASSIFICATION	5.695991912910586E-6	DEFECT
// else lnk exists, do nothing	WITHOUT_CLASSIFICATION	0.999999223450231	WITHOUT_CLASSIFICATION	7.765497690789289E-7	DEFECT
// get an Iterator of file objects representing links (canonical):	WITHOUT_CLASSIFICATION	0.9999998743496723	WITHOUT_CLASSIFICATION	1.2565032769527176E-7	DEFECT
//iterate through the names, get the matching values	WITHOUT_CLASSIFICATION	0.9999994759696953	WITHOUT_CLASSIFICATION	5.240303045726314E-7	DEFECT
/////////////////////////////////////////////////////////////// // GET/SET methods. // Setters, of course are where ant user passes in values. ///////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999999524912178	WITHOUT_CLASSIFICATION	4.750878227215918E-8	DEFECT
/////////////////////////////////////////////////////////////// // INCLUDE-EXCLUDE processing ///////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999997402605699	WITHOUT_CLASSIFICATION	2.597394300172151E-7	DEFECT
// find the starteam folder specified to be the root of the // operation.  Throw if it can't be found.	WITHOUT_CLASSIFICATION	0.9999999381347339	WITHOUT_CLASSIFICATION	6.18652660513397E-8	DEFECT
// either use default path or root local mapping, // which is now embedded in the root folder	WITHOUT_CLASSIFICATION	0.9999978776531617	WITHOUT_CLASSIFICATION	2.1223468383759986E-6	DEFECT
///////////////////////////////////////////////////////// // GET/SET methods. // Setters, of course are where ant user passes in values. /////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999999524912178	WITHOUT_CLASSIFICATION	4.750878227215918E-8	DEFECT
// fill up a Properties object with link and resource names:	WITHOUT_CLASSIFICATION	0.9999968519928946	WITHOUT_CLASSIFICATION	3.148007105474287E-6	DEFECT
// find the resource of the existing link:	WITHOUT_CLASSIFICATION	0.9999932058965342	WITHOUT_CLASSIFICATION	6.794103465815738E-6	DEFECT
// rename the resource, thus breaking the link:	WITHOUT_CLASSIFICATION	0.9999941469667506	WITHOUT_CLASSIFICATION	5.853033249419005E-6	DEFECT
// delete the (now) broken link:	WITHOUT_CLASSIFICATION	0.9944897151524859	WITHOUT_CLASSIFICATION	0.005510284847514165	DEFECT
// return the resource to its original name:	WITHOUT_CLASSIFICATION	0.9999988696522984	WITHOUT_CLASSIFICATION	1.1303477014641399E-6	DEFECT
// loop through the supplied file sets:	WITHOUT_CLASSIFICATION	0.9999992949840978	WITHOUT_CLASSIFICATION	7.050159022784495E-7	DEFECT
// load included files as properties files:	WITHOUT_CLASSIFICATION	0.9999987548542485	WITHOUT_CLASSIFICATION	1.2451457515116178E-6	DEFECT
// -GL	WITHOUT_CLASSIFICATION	0.9999828424910323	WITHOUT_CLASSIFICATION	1.7157508967693236E-5	DEFECT
// -GL	WITHOUT_CLASSIFICATION	0.9999828424910323	WITHOUT_CLASSIFICATION	1.7157508967693236E-5	DEFECT
// -I- or -I-Y or -I-N	WITHOUT_CLASSIFICATION	0.9999925366239595	WITHOUT_CLASSIFICATION	7.46337604049399E-6	DEFECT
// -I- or -I-Y or -I-N	WITHOUT_CLASSIFICATION	0.9999925366239595	WITHOUT_CLASSIFICATION	7.46337604049399E-6	DEFECT
// -O-	WITHOUT_CLASSIFICATION	0.9999881952433569	WITHOUT_CLASSIFICATION	1.180475664310723E-5	DEFECT
// -R	WITHOUT_CLASSIFICATION	0.999984441664945	WITHOUT_CLASSIFICATION	1.5558335054928564E-5	DEFECT
// -R	WITHOUT_CLASSIFICATION	0.999984441664945	WITHOUT_CLASSIFICATION	1.5558335054928564E-5	DEFECT
// -V	WITHOUT_CLASSIFICATION	0.9999829058591394	WITHOUT_CLASSIFICATION	1.7094140860550637E-5	DEFECT
// -W	WITHOUT_CLASSIFICATION	0.9999817502662182	WITHOUT_CLASSIFICATION	1.82497337818234E-5	DEFECT
// -W	WITHOUT_CLASSIFICATION	0.9999817502662182	WITHOUT_CLASSIFICATION	1.82497337818234E-5	DEFECT
// -Y	WITHOUT_CLASSIFICATION	0.9999872444818424	WITHOUT_CLASSIFICATION	1.2755518157569098E-5	DEFECT
// -Y	WITHOUT_CLASSIFICATION	0.9999872444818424	WITHOUT_CLASSIFICATION	1.2755518157569098E-5	DEFECT
// -G	WITHOUT_CLASSIFICATION	0.999986555681788	WITHOUT_CLASSIFICATION	1.3444318212058144E-5	DEFECT
// -GWS or -GWR	WITHOUT_CLASSIFICATION	0.999987032964452	WITHOUT_CLASSIFICATION	1.2967035548042235E-5	DEFECT
//set to empty str if no local path return	WITHOUT_CLASSIFICATION	0.9999999851320267	WITHOUT_CLASSIFICATION	1.48679732621945E-8	DEFECT
//make sure m_LocalDir exists, create it if it doesn't	WITHOUT_CLASSIFICATION	0.9999250009924555	WITHOUT_CLASSIFICATION	7.499900754453979E-5	DEFECT
// Use the OS launcher so we get environment variables	WITHOUT_CLASSIFICATION	0.999999704206415	WITHOUT_CLASSIFICATION	2.9579358485402055E-7	DEFECT
// VSS items	WITHOUT_CLASSIFICATION	0.9999983963549636	WITHOUT_CLASSIFICATION	1.6036450364444224E-6	DEFECT
// VSS items	WITHOUT_CLASSIFICATION	0.9999983963549636	WITHOUT_CLASSIFICATION	1.6036450364444224E-6	DEFECT
// -C	WITHOUT_CLASSIFICATION	0.9999900193506486	WITHOUT_CLASSIFICATION	9.980649351428652E-6	DEFECT
// -C	WITHOUT_CLASSIFICATION	0.9999900193506486	WITHOUT_CLASSIFICATION	9.980649351428652E-6	DEFECT
// -L Specify the new label on the command line (instead of being prompted)	WITHOUT_CLASSIFICATION	0.9999985564353702	WITHOUT_CLASSIFICATION	1.443564629803478E-6	DEFECT
// -V Label an existing file or project version	WITHOUT_CLASSIFICATION	0.9999998560399609	WITHOUT_CLASSIFICATION	1.439600390411534E-7	DEFECT
// first off, make sure that we've got a command and a vssdir ...	WITHOUT_CLASSIFICATION	0.9999871145299449	WITHOUT_CLASSIFICATION	1.288547005496275E-5	DEFECT
// pre Kaffe 1.1.5	WITHOUT_CLASSIFICATION	0.9999956681923083	WITHOUT_CLASSIFICATION	4.331807691680672E-6	DEFECT
// -GL	WITHOUT_CLASSIFICATION	0.9999828424910323	WITHOUT_CLASSIFICATION	1.7157508967693236E-5	DEFECT
// Write the contents to our master list of links // This method assumes that all links are defined in // terms of absolute paths, or paths relative to the // working directory:	WITHOUT_CLASSIFICATION	0.9999993698592918	WITHOUT_CLASSIFICATION	6.301407081255723E-7	DEFECT
// build the command line from what we got the format is // ss Get VSS items [-G] [-H] [-I-] [-N] [-O] [-R] [-V] [-W] [-Y] [-?] // as specified in the SS.EXE help	WITHOUT_CLASSIFICATION	0.9999999151770674	WITHOUT_CLASSIFICATION	8.482293257406678E-8	DEFECT
// -I- or -I-Y or -I-N	WITHOUT_CLASSIFICATION	0.9999925366239595	WITHOUT_CLASSIFICATION	7.46337604049399E-6	DEFECT
// -I- or -I-Y or -I-N	WITHOUT_CLASSIFICATION	0.9999925366239595	WITHOUT_CLASSIFICATION	7.46337604049399E-6	DEFECT
// -O-	WITHOUT_CLASSIFICATION	0.9999881952433569	WITHOUT_CLASSIFICATION	1.180475664310723E-5	DEFECT
// -R	WITHOUT_CLASSIFICATION	0.999984441664945	WITHOUT_CLASSIFICATION	1.5558335054928564E-5	DEFECT
// -R	WITHOUT_CLASSIFICATION	0.999984441664945	WITHOUT_CLASSIFICATION	1.5558335054928564E-5	DEFECT
// -R	WITHOUT_CLASSIFICATION	0.999984441664945	WITHOUT_CLASSIFICATION	1.5558335054928564E-5	DEFECT
// -V	WITHOUT_CLASSIFICATION	0.9999829058591394	WITHOUT_CLASSIFICATION	1.7094140860550637E-5	DEFECT
// -W	WITHOUT_CLASSIFICATION	0.9999817502662182	WITHOUT_CLASSIFICATION	1.82497337818234E-5	DEFECT
// -Y	WITHOUT_CLASSIFICATION	0.9999872444818424	WITHOUT_CLASSIFICATION	1.2755518157569098E-5	DEFECT
// -Y	WITHOUT_CLASSIFICATION	0.9999872444818424	WITHOUT_CLASSIFICATION	1.2755518157569098E-5	DEFECT
// -Y	WITHOUT_CLASSIFICATION	0.9999872444818424	WITHOUT_CLASSIFICATION	1.2755518157569098E-5	DEFECT
// -G	WITHOUT_CLASSIFICATION	0.999986555681788	WITHOUT_CLASSIFICATION	1.3444318212058144E-5	DEFECT
// -GWS or -GWR	WITHOUT_CLASSIFICATION	0.999987032964452	WITHOUT_CLASSIFICATION	1.2967035548042235E-5	DEFECT
// VSS items	WITHOUT_CLASSIFICATION	0.9999983963549636	WITHOUT_CLASSIFICATION	1.6036450364444224E-6	DEFECT
// Use getShortLabel() so labels longer then 30 char are truncated // and the user is warned	WITHOUT_CLASSIFICATION	0.9999999532317053	WITHOUT_CLASSIFICATION	4.676829473195372E-8	DEFECT
// ss.exe exits with '100', when files have been skipped // so we have to ignore the failure	WITHOUT_CLASSIFICATION	0.9999998071789218	WITHOUT_CLASSIFICATION	1.9282107819522725E-7	DEFECT
// If location of ss.ini is specified we need to set the // environment-variable SSDIR to this value	WITHOUT_CLASSIFICATION	0.999999790093693	WITHOUT_CLASSIFICATION	2.0990630709709894E-7	DEFECT
// build the command line from what we got the format is // ss Label VSS items [-C] [-H] [-I-] [-Llabel] [-N] [-O] [-V] [-Y] [-?] // as specified in the SS.EXE help	WITHOUT_CLASSIFICATION	0.9999998858348648	WITHOUT_CLASSIFICATION	1.1416513531175622E-7	DEFECT
// VSS items	WITHOUT_CLASSIFICATION	0.9999983963549636	WITHOUT_CLASSIFICATION	1.6036450364444224E-6	DEFECT
// -C	WITHOUT_CLASSIFICATION	0.9999900193506486	WITHOUT_CLASSIFICATION	9.980649351428652E-6	DEFECT
// -C	WITHOUT_CLASSIFICATION	0.9999900193506486	WITHOUT_CLASSIFICATION	9.980649351428652E-6	DEFECT
// first off, make sure that we've got a command and a vssdir ...	WITHOUT_CLASSIFICATION	0.9999871145299449	WITHOUT_CLASSIFICATION	1.288547005496275E-5	DEFECT
// first off, make sure that we've got a command and a vssdir ...	WITHOUT_CLASSIFICATION	0.9999871145299449	WITHOUT_CLASSIFICATION	1.288547005496275E-5	DEFECT
// build the command line from what we got the format is // ss Checkin VSS items [-H] [-C] [-I-] [-N] [-O] [-R] [-W] [-Y] [-?] // as specified in the SS.EXE help	WITHOUT_CLASSIFICATION	0.9999998950989875	WITHOUT_CLASSIFICATION	1.0490101266024937E-7	DEFECT
// -VL	WITHOUT_CLASSIFICATION	0.9999780075343216	WITHOUT_CLASSIFICATION	2.199246567839677E-5	DEFECT
// -B / -D / -F-	WITHOUT_CLASSIFICATION	0.9999664240468789	WITHOUT_CLASSIFICATION	3.3575953121252085E-5	DEFECT
// -O	WITHOUT_CLASSIFICATION	0.9999895113584119	WITHOUT_CLASSIFICATION	1.048864158816975E-5	DEFECT
// first off, make sure that we've got a command and a localPath ...	WITHOUT_CLASSIFICATION	0.999989378353009	WITHOUT_CLASSIFICATION	1.0621646990955926E-5	DEFECT
// -G-	WITHOUT_CLASSIFICATION	0.9999869930375768	WITHOUT_CLASSIFICATION	1.3006962423293284E-5	DEFECT
// first off, make sure that we've got a command and a vssdir...	WITHOUT_CLASSIFICATION	0.9999858493604088	WITHOUT_CLASSIFICATION	1.4150639591202768E-5	DEFECT
// build the command line from what we got // the format is: // ss Create VSS items [-C] [-H] [-I-] [-N] [-O] [-S] [-Y] [-?] // as specified in the SS.EXE help	WITHOUT_CLASSIFICATION	0.9999959734350756	WITHOUT_CLASSIFICATION	4.026564924457459E-6	DEFECT
// pre Kaffe 1.1.2	WITHOUT_CLASSIFICATION	0.9999964394840349	WITHOUT_CLASSIFICATION	3.560515965063353E-6	DEFECT
// only supported since Kaffe 1.1.2	WITHOUT_CLASSIFICATION	0.9999397318340543	WITHOUT_CLASSIFICATION	6.026816594580815E-5	DEFECT
//handle the many different stub options.	WITHOUT_CLASSIFICATION	0.9999997739736872	WITHOUT_CLASSIFICATION	2.26026312731513E-7	DEFECT
//default is compatibility	WITHOUT_CLASSIFICATION	0.9999993391299753	WITHOUT_CLASSIFICATION	6.608700246555936E-7	DEFECT
//anything else	WITHOUT_CLASSIFICATION	0.9999969779659963	WITHOUT_CLASSIFICATION	3.0220340037066324E-6	DEFECT
//do nothing with the value? or go -v+stubVersion??	WITHOUT_CLASSIFICATION	0.9999998151038476	WITHOUT_CLASSIFICATION	1.8489615231453172E-7	DEFECT
//set the non-null stubOption	WITHOUT_CLASSIFICATION	0.9999999189565574	WITHOUT_CLASSIFICATION	8.104344261174777E-8	DEFECT
// we know that name.endsWith(".class")	WITHOUT_CLASSIFICATION	0.9999894597868662	WITHOUT_CLASSIFICATION	1.054021313396547E-5	DEFECT
// Combine the build classpath with the system classpath, in an // order determined by the value of build.sysclasspath	WITHOUT_CLASSIFICATION	0.9999996860383179	WITHOUT_CLASSIFICATION	3.13961682185856E-7	DEFECT
// swallow	WITHOUT_CLASSIFICATION	0.9999942438129158	WITHOUT_CLASSIFICATION	5.756187084163846E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999209490427	WITHOUT_CLASSIFICATION	7.905095730336347E-8	DEFECT
// build the command line from what we got the format is // ss CP VSS items [-H] [-I-] [-Y] [-?] // as specified in the SS.EXE help	WITHOUT_CLASSIFICATION	0.999999613602903	WITHOUT_CLASSIFICATION	3.8639709695014716E-7	DEFECT
//for java1.5+, we generate compatible stubs, that is, unless //the caller asked for IDL or IIOP support.	WITHOUT_CLASSIFICATION	0.9999821951638821	WITHOUT_CLASSIFICATION	1.78048361179074E-5	DEFECT
// JRMP with simple naming convention	WITHOUT_CLASSIFICATION	0.999998010295163	WITHOUT_CLASSIFICATION	1.9897048370266716E-6	DEFECT
/*                 * I know, this is not necessary, but I prefer it explicit (SB)                 */	WITHOUT_CLASSIFICATION	0.9998370664344841	WITHOUT_CLASSIFICATION	1.6293356551584564E-4	DEFECT
// no package	WITHOUT_CLASSIFICATION	0.9999998184885244	WITHOUT_CLASSIFICATION	1.8151147571524247E-7	DEFECT
// no package	WITHOUT_CLASSIFICATION	0.9999998184885244	WITHOUT_CLASSIFICATION	1.8151147571524247E-7	DEFECT
// only stub, no tie	WITHOUT_CLASSIFICATION	0.9999996542647591	WITHOUT_CLASSIFICATION	3.457352409567644E-7	DEFECT
/*                         * stub is derived from implementation,                         * tie from interface name.                         */	WITHOUT_CLASSIFICATION	0.9999935702204783	WITHOUT_CLASSIFICATION	6.4297795216667805E-6	DEFECT
//rely on RMIC being on the path	WITHOUT_CLASSIFICATION	0.9994371930196212	WITHOUT_CLASSIFICATION	5.62806980378854E-4	DEFECT
//set up the args	WITHOUT_CLASSIFICATION	0.9999998741661822	WITHOUT_CLASSIFICATION	1.2583381786504556E-7	DEFECT
// Create an instance of the rmic	WITHOUT_CLASSIFICATION	0.9999995389851168	WITHOUT_CLASSIFICATION	4.610148831729958E-7	DEFECT
//convert to lower case in the English locale,	WITHOUT_CLASSIFICATION	0.999998882557723	WITHOUT_CLASSIFICATION	1.1174422770250644E-6	DEFECT
//handle default specially by choosing the sun or kaffe compiler	WITHOUT_CLASSIFICATION	0.9999998398631393	WITHOUT_CLASSIFICATION	1.6013686065005413E-7	DEFECT
//no match? ask for the non-lower-cased type	WITHOUT_CLASSIFICATION	0.9999999871024471	WITHOUT_CLASSIFICATION	1.289755297550949E-8	DEFECT
//do the system assertions	WITHOUT_CLASSIFICATION	0.9999996374889617	WITHOUT_CLASSIFICATION	3.625110383450645E-7	DEFECT
//do the system assertions	WITHOUT_CLASSIFICATION	0.9999996374889617	WITHOUT_CLASSIFICATION	3.625110383450645E-7	DEFECT
//do the system assertions	WITHOUT_CLASSIFICATION	0.9999996374889617	WITHOUT_CLASSIFICATION	3.625110383450645E-7	DEFECT
//now any inner assertions	WITHOUT_CLASSIFICATION	0.999998363499565	WITHOUT_CLASSIFICATION	1.6365004350653654E-6	DEFECT
//now any inner assertions	WITHOUT_CLASSIFICATION	0.999998363499565	WITHOUT_CLASSIFICATION	1.6365004350653654E-6	DEFECT
//now any inner assertions	WITHOUT_CLASSIFICATION	0.999998363499565	WITHOUT_CLASSIFICATION	1.6365004350653654E-6	DEFECT
//catch invalidness	WITHOUT_CLASSIFICATION	0.9999998786686991	WITHOUT_CLASSIFICATION	1.2133130085486418E-7	DEFECT
//see if it is a package or a class	WITHOUT_CLASSIFICATION	0.9999648515143262	WITHOUT_CLASSIFICATION	3.514848567374504E-5	DEFECT
//packages get a ... prefix	WITHOUT_CLASSIFICATION	0.9999969636677701	WITHOUT_CLASSIFICATION	3.036332229853803E-6	DEFECT
//append the ... suffix if not there already	WITHOUT_CLASSIFICATION	0.9961592158850919	WITHOUT_CLASSIFICATION	0.0038407841149080157	DEFECT
//classes just get the classname	WITHOUT_CLASSIFICATION	0.999999782293746	WITHOUT_CLASSIFICATION	2.177062540298523E-7	DEFECT
//-- Fields ----------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999345339973404	WITHOUT_CLASSIFICATION	6.546600265957765E-5	DEFECT
//-- Methods ---------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999881837145734	WITHOUT_CLASSIFICATION	1.1816285426465695E-5	DEFECT
// Add all nested elements to our catalog	WITHOUT_CLASSIFICATION	0.9999998164535514	WITHOUT_CLASSIFICATION	1.8354644854891357E-7	DEFECT
// Ignore exception	WITHOUT_CLASSIFICATION	0.999999269263452	WITHOUT_CLASSIFICATION	7.307365480456664E-7	DEFECT
// New behavior for delayed task creation. Description // will be evaluated in Project.getDescription()	WITHOUT_CLASSIFICATION	0.9999941449063525	WITHOUT_CLASSIFICATION	5.8550936475252345E-6	DEFECT
// Append the classpath of the nested catalog	WITHOUT_CLASSIFICATION	0.9999492557514874	WITHOUT_CLASSIFICATION	5.0744248512497894E-5	DEFECT
// Append the catalog path of the nested catalog	WITHOUT_CLASSIFICATION	0.9999664028317388	WITHOUT_CLASSIFICATION	3.35971682612826E-5	DEFECT
// At this point we are probably in failure mode, but // try to use the bare URI as a last gasp	WITHOUT_CLASSIFICATION	0.9999843948754843	WITHOUT_CLASSIFICATION	1.5605124515740296E-5	DEFECT
// The Apache resolver is present - Need to check if it can // be seen by the catalog resolver class. Start by getting // the actual loader	WITHOUT_CLASSIFICATION	0.9999999791935497	WITHOUT_CLASSIFICATION	2.0806450426538197E-8	DEFECT
// load the base class through this loader.	WITHOUT_CLASSIFICATION	0.9999829221854161	WITHOUT_CLASSIFICATION	1.7077814583909744E-5	DEFECT
// and find its actual loader	WITHOUT_CLASSIFICATION	0.9999997624872156	WITHOUT_CLASSIFICATION	2.3751278446797186E-7	DEFECT
// // Success!  The xml-commons resolver library is // available, so use it. //	WITHOUT_CLASSIFICATION	0.9999971559631546	WITHOUT_CLASSIFICATION	2.8440368453698683E-6	DEFECT
// // The xml-commons resolver library is not // available, so we can't use it. //	WITHOUT_CLASSIFICATION	0.9999940619085659	WITHOUT_CLASSIFICATION	5.938091434048513E-6	DEFECT
// the following line seems to be necessary on Windows under JDK 1.2	WITHOUT_CLASSIFICATION	0.9899285453829694	WITHOUT_CLASSIFICATION	0.010071454617030628	DEFECT
// // The ResourceLocation may specify a relative path for its // location attribute.  This is resolved using the appropriate // base. //	WITHOUT_CLASSIFICATION	0.9999872800470069	WITHOUT_CLASSIFICATION	1.2719952993047745E-5	DEFECT
// // for classpath lookup we ignore the base directory //	WITHOUT_CLASSIFICATION	0.9999999729926582	WITHOUT_CLASSIFICATION	2.700734182347914E-8	DEFECT
// // The ResourceLocation may specify a relative url for its // location attribute.  This is resolved using the appropriate // base. //	WITHOUT_CLASSIFICATION	0.9999953105694179	WITHOUT_CLASSIFICATION	4.6894305820338726E-6	DEFECT
// // We didn't match a ResourceLocation, but since we // only support PUBLIC and URI entry types internally, // it is still possible that there is another entry in // an external catalog that will match.  We call // Apache resolver's resolveEntity method to cover // this possibility. //	WITHOUT_CLASSIFICATION	0.9544041958102916	WITHOUT_CLASSIFICATION	0.045595804189708364	DEFECT
// // Use the passed in base in preference to the base // from matchingEntry, which is either null or the // directory in which the external catalog file from // which it was obtained is located.  We make a copy // so matchingEntry's original base is untouched.  Of // course, if there is no base, no need to make a // copy... // // This is the standard behavior as per my reading of // the JAXP and XML Catalog specs.  CKS 11/7/2002 //	WITHOUT_CLASSIFICATION	0.9999999987112929	WITHOUT_CLASSIFICATION	1.2887070542371536E-9	DEFECT
// Parse each catalog listed in nested <catalogpath> elements	WITHOUT_CLASSIFICATION	0.9999999846006008	WITHOUT_CLASSIFICATION	1.5399399185016622E-8	DEFECT
//-- XMLCatalog	WITHOUT_CLASSIFICATION	0.9999515591439723	WITHOUT_CLASSIFICATION	4.844085602771743E-5	DEFECT
/* Methods below all add specific selectors */	WITHOUT_CLASSIFICATION	0.9999999452060611	WITHOUT_CLASSIFICATION	5.479393894903947E-8	DEFECT
// No includes supplied, so set it to 'matches all'	WITHOUT_CLASSIFICATION	0.9999999992526616	WITHOUT_CLASSIFICATION	7.473385219303626E-10	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999209490427	WITHOUT_CLASSIFICATION	7.905095730336347E-8	DEFECT
/* package-private for now */	WITHOUT_CLASSIFICATION	0.9999988069148651	WITHOUT_CLASSIFICATION	1.1930851349567903E-6	DEFECT
/* package-private for now */	WITHOUT_CLASSIFICATION	0.9999988069148651	WITHOUT_CLASSIFICATION	1.1930851349567903E-6	DEFECT
// special case in ZIPs, we do not want this thing included	WITHOUT_CLASSIFICATION	0.9999970251701273	WITHOUT_CLASSIFICATION	2.9748298726492023E-6	DEFECT
// first check if the archive needs to be scanned again	WITHOUT_CLASSIFICATION	0.9999999965949934	WITHOUT_CLASSIFICATION	3.4050067136106595E-9	DEFECT
//do not use a FileResource b/c it pulls File info from the filesystem:	WITHOUT_CLASSIFICATION	0.9999993487231951	WITHOUT_CLASSIFICATION	6.512768050008731E-7	DEFECT
// spare scanning again and again	WITHOUT_CLASSIFICATION	0.9999999541983956	WITHOUT_CLASSIFICATION	4.580160445935913E-8	DEFECT
/* cached DirectoryScanner instance for our own Project only */	WITHOUT_CLASSIFICATION	0.9999974650322696	WITHOUT_CLASSIFICATION	2.5349677303847604E-6	DEFECT
// SelectorContainer methods	WITHOUT_CLASSIFICATION	0.9999999961314706	WITHOUT_CLASSIFICATION	3.868529341955935E-9	DEFECT
// WIN9x uses a bat file for executing commands	WITHOUT_CLASSIFICATION	0.9998383541557408	WITHOUT_CLASSIFICATION	1.6164584425921988E-4	DEFECT
// empty path return empty string	WITHOUT_CLASSIFICATION	0.9999999411430605	WITHOUT_CLASSIFICATION	5.885693962857753E-8	DEFECT
//no command? no string	WITHOUT_CLASSIFICATION	0.999999334709699	WITHOUT_CLASSIFICATION	6.652903009351384E-7	DEFECT
// parse with a simple finite state machine	WITHOUT_CLASSIFICATION	0.9999962890251647	WITHOUT_CLASSIFICATION	3.7109748352229992E-6	DEFECT
//inherit doc	WITHOUT_CLASSIFICATION	0.9999949911119377	WITHOUT_CLASSIFICATION	5.008888062339111E-6	DEFECT
//can't have zero-length token	WITHOUT_CLASSIFICATION	0.9999165004776296	WITHOUT_CLASSIFICATION	8.349952237041317E-5	DEFECT
// we have another token, let's parse it.	WITHOUT_CLASSIFICATION	0.9994879626644081	WITHOUT_CLASSIFICATION	5.120373355919708E-4	DEFECT
// should always be the case...	WITHOUT_CLASSIFICATION	0.9998050962138987	WITHOUT_CLASSIFICATION	1.9490378610134167E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999996958536274	WITHOUT_CLASSIFICATION	3.0414637271301487E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999996958536274	WITHOUT_CLASSIFICATION	3.0414637271301487E-7	DEFECT
// swallow	WITHOUT_CLASSIFICATION	0.9999942438129158	WITHOUT_CLASSIFICATION	5.756187084163846E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999209490427	WITHOUT_CLASSIFICATION	7.905095730336347E-8	DEFECT
/**     * Invoked by IntrospectionHelper for <code>setXXX(Path p)</code>     * attribute setters.     * @param p the <code>Project</code> for this path.     * @param path the <code>String</code> path definition.     */	WITHOUT_CLASSIFICATION	0.9999787907002271	WITHOUT_CLASSIFICATION	2.1209299772936014E-5	DEFECT
// ignore: don't trust anyone	WITHOUT_CLASSIFICATION	0.9999903838456187	WITHOUT_CLASSIFICATION	9.616154381367539E-6	DEFECT
// last: don't trust the developer	WITHOUT_CLASSIFICATION	0.9999921279453872	WITHOUT_CLASSIFICATION	7.872054612795814E-6	DEFECT
// newer versions of Kaffe (1.1.1+) won't have this, // but this will be sorted by FileSet anyway.	WITHOUT_CLASSIFICATION	0.9753362463444138	WITHOUT_CLASSIFICATION	0.024663753655586193	DEFECT
// JDK 1.2+ seems to set java.home to the JRE directory.	WITHOUT_CLASSIFICATION	0.999999037221374	WITHOUT_CLASSIFICATION	9.627786260057262E-7	DEFECT
// Just keep the old version as well and let addExisting // sort it out.	WITHOUT_CLASSIFICATION	0.9999999790816303	WITHOUT_CLASSIFICATION	2.0918369776765854E-8	DEFECT
// Sun's and Apple's 1.4 have JCE and JSSE in separate jars.	WITHOUT_CLASSIFICATION	0.999997502242344	WITHOUT_CLASSIFICATION	2.4977576560053996E-6	DEFECT
// IBM's 1.4 has rt.jar split into 4 smaller jars and a combined // JCE/JSSE in security.jar.	WITHOUT_CLASSIFICATION	0.9999912394201296	WITHOUT_CLASSIFICATION	8.760579870366743E-6	DEFECT
// Added for MacOS X	WITHOUT_CLASSIFICATION	0.9999950493924806	WITHOUT_CLASSIFICATION	4.9506075194240615E-6	DEFECT
//remove any null elements	WITHOUT_CLASSIFICATION	0.9999991875443768	WITHOUT_CLASSIFICATION	8.124556231528696E-7	DEFECT
//create the list	WITHOUT_CLASSIFICATION	0.9999999594918159	WITHOUT_CLASSIFICATION	4.050818405845723E-8	DEFECT
//fill it	WITHOUT_CLASSIFICATION	0.9999245582356525	WITHOUT_CLASSIFICATION	7.544176434750995E-5	DEFECT
//convert to an array	WITHOUT_CLASSIFICATION	0.9999992513171498	WITHOUT_CLASSIFICATION	7.486828502340011E-7	DEFECT
// properties are part of the vm options...	WITHOUT_CLASSIFICATION	0.9999965148711208	WITHOUT_CLASSIFICATION	3.485128879231481E-6	DEFECT
//boot classpath	WITHOUT_CLASSIFICATION	0.9999992225593564	WITHOUT_CLASSIFICATION	7.774406437117459E-7	DEFECT
//main classpath	WITHOUT_CLASSIFICATION	0.9999987324208499	WITHOUT_CLASSIFICATION	1.267579150115064E-6	DEFECT
//now any assertions are added	WITHOUT_CLASSIFICATION	0.9999953883638646	WITHOUT_CLASSIFICATION	4.611636135505895E-6	DEFECT
// this is the classname to run as well as its arguments. // in case of 'executeJar', the executable is a jar file.	WITHOUT_CLASSIFICATION	0.9999999577762168	WITHOUT_CLASSIFICATION	4.222378319818826E-8	DEFECT
// cloned system properties	WITHOUT_CLASSIFICATION	0.9999989425466542	WITHOUT_CLASSIFICATION	1.0574533457183073E-6	DEFECT
// classpath is "-classpath <classpath>" -> 2 args	WITHOUT_CLASSIFICATION	0.9999917082783794	WITHOUT_CLASSIFICATION	8.291721620644367E-6	DEFECT
// bootclasspath is "-Xbootclasspath:<classpath>" -> 1 arg	WITHOUT_CLASSIFICATION	0.9999970911119134	WITHOUT_CLASSIFICATION	2.90888808653823E-6	DEFECT
// jar execution requires an additional -jar option	WITHOUT_CLASSIFICATION	0.9998904585153273	WITHOUT_CLASSIFICATION	1.0954148467274423E-4	DEFECT
/*<? extends EnumeratedAttribute>*/	WITHOUT_CLASSIFICATION	0.9999981574137914	WITHOUT_CLASSIFICATION	1.842586208728178E-6	DEFECT
//end nested class	WITHOUT_CLASSIFICATION	0.9999948372618055	WITHOUT_CLASSIFICATION	5.162738194567323E-6	DEFECT
// Add this PropertySet's nested PropertySets' property names.	WITHOUT_CLASSIFICATION	0.9999996675590173	WITHOUT_CLASSIFICATION	3.32440982767544E-7	DEFECT
//make a copy...	WITHOUT_CLASSIFICATION	0.9997352738961695	WITHOUT_CLASSIFICATION	2.6472610383053907E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999209490427	WITHOUT_CLASSIFICATION	7.905095730336347E-8	DEFECT
// Gotta atleast put in the proper spelling :-P	WITHOUT_CLASSIFICATION	0.999595173841249	WITHOUT_CLASSIFICATION	4.0482615875104205E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999209490427	WITHOUT_CLASSIFICATION	7.905095730336347E-8	DEFECT
// If this TransformOperation has DrawOperation children // then Rotate the first child and return.	WITHOUT_CLASSIFICATION	0.9999999852139462	WITHOUT_CLASSIFICATION	1.4786053911152656E-8	DEFECT
// If this TransformOperation has DrawOperation children // then Rotate the first child and return.	WITHOUT_CLASSIFICATION	0.9999999852139462	WITHOUT_CLASSIFICATION	1.4786053911152656E-8	DEFECT
// CheckStyle:MemberNameCheck ON	WITHOUT_CLASSIFICATION	0.9999997752015555	WITHOUT_CLASSIFICATION	2.247984446028892E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc // CheckStyle:MemberNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9999999750136407	WITHOUT_CLASSIFICATION	2.4986359356582724E-8	DEFECT
// change this to get the objects from the other reference	WITHOUT_CLASSIFICATION	0.999999765348616	WITHOUT_CLASSIFICATION	2.3465138401661063E-7	DEFECT
// change this to get the objects from the other reference	WITHOUT_CLASSIFICATION	0.999999765348616	WITHOUT_CLASSIFICATION	2.3465138401661063E-7	DEFECT
//-- Fields ----------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999345339973404	WITHOUT_CLASSIFICATION	6.546600265957765E-5	DEFECT
//-- Methods ---------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999881837145734	WITHOUT_CLASSIFICATION	1.1816285426465695E-5	DEFECT
// CheckStyle:VisibilityModifier OFF	WITHOUT_CLASSIFICATION	0.9999998354922427	WITHOUT_CLASSIFICATION	1.645077574406376E-7	DEFECT
// may be null if a system property has been added // after the project instance has been initialized	WITHOUT_CLASSIFICATION	0.9999982945153332	WITHOUT_CLASSIFICATION	1.7054846668340866E-6	DEFECT
// Add this PropertySet's property names.	WITHOUT_CLASSIFICATION	0.9999985669962268	WITHOUT_CLASSIFICATION	1.4330037732214338E-6	DEFECT
//map the names	WITHOUT_CLASSIFICATION	0.9999986435558236	WITHOUT_CLASSIFICATION	1.3564441763789217E-6	DEFECT
// Create one NameEntry in the appropriate pattern list for each // line in the file.	WITHOUT_CLASSIFICATION	0.9999999896991485	WITHOUT_CLASSIFICATION	1.0300851418050465E-8	DEFECT
// Get a FileReader	WITHOUT_CLASSIFICATION	0.9999995369335856	WITHOUT_CLASSIFICATION	4.630664144906685E-7	DEFECT
//Ignore exception	WITHOUT_CLASSIFICATION	0.9999979682349177	WITHOUT_CLASSIFICATION	2.031765082302883E-6	DEFECT
//-- ResourceLocation	WITHOUT_CLASSIFICATION	0.9999995716773717	WITHOUT_CLASSIFICATION	4.283226282171662E-7	DEFECT
// Add base set of permissions	WITHOUT_CLASSIFICATION	0.9999999115379312	WITHOUT_CLASSIFICATION	8.84620687671391E-8	DEFECT
/*                     if the permission was not explicitly granted or revoked                     the original security manager will do its work                    */	WITHOUT_CLASSIFICATION	0.9986862395994573	WITHOUT_CLASSIFICATION	0.0013137604005426435	DEFECT
// None of the actions revoked, so all allowed.	WITHOUT_CLASSIFICATION	0.9999996764328833	WITHOUT_CLASSIFICATION	3.235671166752387E-7	DEFECT
//default true:	WITHOUT_CLASSIFICATION	0.9999981655454785	WITHOUT_CLASSIFICATION	1.8344545214709879E-6	DEFECT
//default false:	WITHOUT_CLASSIFICATION	0.9999992430959801	WITHOUT_CLASSIFICATION	7.569040199435456E-7	DEFECT
//default false:	WITHOUT_CLASSIFICATION	0.9999992430959801	WITHOUT_CLASSIFICATION	7.569040199435456E-7	DEFECT
// The regular expression factory	WITHOUT_CLASSIFICATION	0.9999948281353697	WITHOUT_CLASSIFICATION	5.171864630254513E-6	DEFECT
// temporary variable	WITHOUT_CLASSIFICATION	0.9999999090029149	WITHOUT_CLASSIFICATION	9.099708501824839E-8	DEFECT
// This is included	WITHOUT_CLASSIFICATION	0.9999957260069993	WITHOUT_CLASSIFICATION	4.273993000757386E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999209490427	WITHOUT_CLASSIFICATION	7.905095730336347E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999209490427	WITHOUT_CLASSIFICATION	7.905095730336347E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999209490427	WITHOUT_CLASSIFICATION	7.905095730336347E-8	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9999940166248454	WITHOUT_CLASSIFICATION	5.983375154568819E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999209490427	WITHOUT_CLASSIFICATION	7.905095730336347E-8	DEFECT
//- ApacheCatalog	WITHOUT_CLASSIFICATION	0.9999944603794978	WITHOUT_CLASSIFICATION	5.5396205021244515E-6	DEFECT
// // If you don't do this, you get all sorts of annoying // warnings about a missing properties file.  However, it // seems to work just fine with default values.  Ultimately, // we should probably include a "CatalogManager.properties" // file in the ant jarfile with some default property // settings.  See CatalogManager.java for more details. //	WITHOUT_CLASSIFICATION	0.9999998120184496	WITHOUT_CLASSIFICATION	1.879815504839478E-7	DEFECT
// // Make sure CatalogResolver instantiates ApacheCatalog, // rather than a plain Catalog //	WITHOUT_CLASSIFICATION	0.9999999243780661	WITHOUT_CLASSIFICATION	7.562193399240661E-8	DEFECT
// debug // CatalogManager.getStaticManager().setVerbosity(4);	WITHOUT_CLASSIFICATION	0.9999978225880617	WITHOUT_CLASSIFICATION	2.1774119383789854E-6	DEFECT
// Pass in reference to ourselves so we can be called back.	WITHOUT_CLASSIFICATION	0.9999994697555938	WITHOUT_CLASSIFICATION	5.302444061084216E-7	DEFECT
//-- ApacheCatalogResolver	WITHOUT_CLASSIFICATION	0.9999995882926024	WITHOUT_CLASSIFICATION	4.1170739765272254E-7	DEFECT
//sorted bag impl. borrowed from commons-collections TreeBag:	WITHOUT_CLASSIFICATION	0.9998870873869848	WITHOUT_CLASSIFICATION	1.1291261301517526E-4	DEFECT
/* now check each Resource in case the child only           lets through files from any children IT may have: */	WITHOUT_CLASSIFICATION	0.9998000719422304	WITHOUT_CLASSIFICATION	1.9992805776957885E-4	DEFECT
//?	WITHOUT_CLASSIFICATION	0.9999426949588015	WITHOUT_CLASSIFICATION	5.730504119847612E-5	DEFECT
//not using the accessor in this case to avoid side effects	WITHOUT_CLASSIFICATION	0.9848984984704034	WITHOUT_CLASSIFICATION	0.015101501529596611	DEFECT
/*package-private*/	WITHOUT_CLASSIFICATION	0.9999862030551014	WITHOUT_CLASSIFICATION	1.3796944898613985E-5	DEFECT
//new oata.util.ReaderInputStream(new InputStreamReader(	WITHOUT_CLASSIFICATION	0.9999513802413244	WITHOUT_CLASSIFICATION	4.861975867566087E-5	DEFECT
//, encoding), encoding);	WITHOUT_CLASSIFICATION	0.9999233986404422	WITHOUT_CLASSIFICATION	7.660135955774853E-5	DEFECT
//first the easy way, if all children are filesystem-only, return true:	WITHOUT_CLASSIFICATION	0.9999999602069651	WITHOUT_CLASSIFICATION	3.979303490962883E-8	DEFECT
//preserve order-encountered using a list; enforce set logic manually:	WITHOUT_CLASSIFICATION	0.9999998228027512	WITHOUT_CLASSIFICATION	1.7719724873869385E-7	DEFECT
/* cached DirectoryScanner instance */	WITHOUT_CLASSIFICATION	0.9999993938680218	WITHOUT_CLASSIFICATION	6.061319783015829E-7	DEFECT
//if no nested, natural order:	WITHOUT_CLASSIFICATION	0.9999999954749145	WITHOUT_CLASSIFICATION	4.525085502688229E-9	DEFECT
//dummy	WITHOUT_CLASSIFICATION	0.9999389975230816	WITHOUT_CLASSIFICATION	6.1002476918428255E-5	DEFECT
//implement ResourceSelector; inherit doc	WITHOUT_CLASSIFICATION	0.9999988047802438	WITHOUT_CLASSIFICATION	1.1952197560771023E-6	DEFECT
// First, check that all elements are correctly configured	WITHOUT_CLASSIFICATION	0.9999980322475946	WITHOUT_CLASSIFICATION	1.9677524053405594E-6	DEFECT
//if either of them is missing, they are different	WITHOUT_CLASSIFICATION	0.9999741660353949	WITHOUT_CLASSIFICATION	2.5833964605173516E-5	DEFECT
// different size =>different files	WITHOUT_CLASSIFICATION	0.999991223131891	WITHOUT_CLASSIFICATION	8.77686810897605E-6	DEFECT
//same date if dest timestamp is within granularity of the srcfile	WITHOUT_CLASSIFICATION	0.9999998363568272	WITHOUT_CLASSIFICATION	1.6364317276828648E-7	DEFECT
// different dates => different files	WITHOUT_CLASSIFICATION	0.9999976144928515	WITHOUT_CLASSIFICATION	2.385507148587711E-6	DEFECT
//here do a bulk comparison	WITHOUT_CLASSIFICATION	0.9999886533573975	WITHOUT_CLASSIFICATION	1.1346642602515768E-5	DEFECT
// At this point, we know we have a tie.	WITHOUT_CLASSIFICATION	0.9999877141129875	WITHOUT_CLASSIFICATION	1.2285887012511622E-5	DEFECT
// throw BuildException on error	WITHOUT_CLASSIFICATION	0.9989055984679727	WITHOUT_CLASSIFICATION	0.0010944015320273302	DEFECT
// throw BuildException on error	WITHOUT_CLASSIFICATION	0.9989055984679727	WITHOUT_CLASSIFICATION	0.0010944015320273302	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999209490427	WITHOUT_CLASSIFICATION	7.905095730336347E-8	DEFECT
// throw BuildException on error	WITHOUT_CLASSIFICATION	0.9989055984679727	WITHOUT_CLASSIFICATION	0.0010944015320273302	DEFECT
// throw BuildException on error	WITHOUT_CLASSIFICATION	0.9989055984679727	WITHOUT_CLASSIFICATION	0.0010944015320273302	DEFECT
// throw BuildException on error	WITHOUT_CLASSIFICATION	0.9989055984679727	WITHOUT_CLASSIFICATION	0.0010944015320273302	DEFECT
// throw BuildException on error	WITHOUT_CLASSIFICATION	0.9989055984679727	WITHOUT_CLASSIFICATION	0.0010944015320273302	DEFECT
// If you felt daring, you could cache the basedir absolute path	WITHOUT_CLASSIFICATION	0.9999978897856688	WITHOUT_CLASSIFICATION	2.1102143311842624E-6	DEFECT
// Sanity check. Ditch it if you want faster performance	WITHOUT_CLASSIFICATION	0.9999999305199567	WITHOUT_CLASSIFICATION	6.948004322123693E-8	DEFECT
// Determine file whose out-of-dateness is to be checked	WITHOUT_CLASSIFICATION	0.9999999723715005	WITHOUT_CLASSIFICATION	2.7628499548892502E-8	DEFECT
// If filename does not match the To attribute of the mapper // then filter it out of the files we are considering	WITHOUT_CLASSIFICATION	0.9999135124335301	WITHOUT_CLASSIFICATION	8.648756646992233E-5	DEFECT
// If filename does not match the To attribute of the mapper // then filter it out of the files we are considering	WITHOUT_CLASSIFICATION	0.9999135124335301	WITHOUT_CLASSIFICATION	8.648756646992233E-5	DEFECT
// Sanity check	WITHOUT_CLASSIFICATION	0.9999997547574003	WITHOUT_CLASSIFICATION	2.452425997550336E-7	DEFECT
// Sanity check	WITHOUT_CLASSIFICATION	0.9999997547574003	WITHOUT_CLASSIFICATION	2.452425997550336E-7	DEFECT
// Determine file whose existence is to be checked	WITHOUT_CLASSIFICATION	0.9999997971061212	WITHOUT_CLASSIFICATION	2.028938788515587E-7	DEFECT
/**     * When using this as a custom selector, this method will be called.     * It translates each parameter into the appropriate setXXX() call.     *     * @param parameters the complete set of parameters for this selector.     */	WITHOUT_CLASSIFICATION	0.9999991865340477	WITHOUT_CLASSIFICATION	8.134659522725005E-7	DEFECT
// Directory size never selected for	WITHOUT_CLASSIFICATION	0.9999995174658437	WITHOUT_CLASSIFICATION	4.825341563259918E-7	DEFECT
/* You wish! */	WITHOUT_CLASSIFICATION	0.9999458819084628	WITHOUT_CLASSIFICATION	5.411809153720144E-5	DEFECT
// check millis and only set it once.	WITHOUT_CLASSIFICATION	0.9999997876740123	WITHOUT_CLASSIFICATION	2.1232598776318306E-7	DEFECT
// When str starts with a File.separator, pattern has to start with a // File.separator. // When pattern starts with a File.separator, str has to start with a // File.separator.	WITHOUT_CLASSIFICATION	0.9999986556279407	WITHOUT_CLASSIFICATION	1.3443720593477108E-6	DEFECT
// up to first '**'	WITHOUT_CLASSIFICATION	0.9999996136167772	WITHOUT_CLASSIFICATION	3.863832228196468E-7	DEFECT
// up to first '**'	WITHOUT_CLASSIFICATION	0.9999996136167772	WITHOUT_CLASSIFICATION	3.863832228196468E-7	DEFECT
// String is exhausted	WITHOUT_CLASSIFICATION	0.9999990602123814	WITHOUT_CLASSIFICATION	9.397876186466649E-7	DEFECT
// String is exhausted	WITHOUT_CLASSIFICATION	0.9999990602123814	WITHOUT_CLASSIFICATION	9.397876186466649E-7	DEFECT
// String is exhausted	WITHOUT_CLASSIFICATION	0.9999990602123814	WITHOUT_CLASSIFICATION	9.397876186466649E-7	DEFECT
// String not exhausted, but pattern is. Failure.	WITHOUT_CLASSIFICATION	0.9993707766075809	WITHOUT_CLASSIFICATION	6.292233924190607E-4	DEFECT
// String not exhausted, but pattern is. Failure.	WITHOUT_CLASSIFICATION	0.9993707766075809	WITHOUT_CLASSIFICATION	6.292233924190607E-4	DEFECT
// up to last '**'	WITHOUT_CLASSIFICATION	0.9999983929439358	WITHOUT_CLASSIFICATION	1.6070560641890477E-6	DEFECT
// '**/**' situation, so skip one	WITHOUT_CLASSIFICATION	0.9999999579266553	WITHOUT_CLASSIFICATION	4.20733447051842E-8	DEFECT
// No '*'s, so we make a shortcut	WITHOUT_CLASSIFICATION	0.9999998469126445	WITHOUT_CLASSIFICATION	1.5308735538544493E-7	DEFECT
// Pattern and string do not have the same size	WITHOUT_CLASSIFICATION	0.9999970398716984	WITHOUT_CLASSIFICATION	2.960128301674087E-6	DEFECT
// Character mismatch	WITHOUT_CLASSIFICATION	0.9999999871444399	WITHOUT_CLASSIFICATION	1.2855560012457899E-8	DEFECT
// Character mismatch	WITHOUT_CLASSIFICATION	0.9999999871444399	WITHOUT_CLASSIFICATION	1.2855560012457899E-8	DEFECT
// String matches against pattern	WITHOUT_CLASSIFICATION	0.9999996211686072	WITHOUT_CLASSIFICATION	3.7883139282303315E-7	DEFECT
// throw BuildException on error	WITHOUT_CLASSIFICATION	0.9989055984679727	WITHOUT_CLASSIFICATION	0.0010944015320273302	DEFECT
// Character mismatch	WITHOUT_CLASSIFICATION	0.9999999871444399	WITHOUT_CLASSIFICATION	1.2855560012457899E-8	DEFECT
// Find the pattern between padIdxStart & padIdxTmp in str between // strIdxStart & strIdxEnd	WITHOUT_CLASSIFICATION	0.9999999686286223	WITHOUT_CLASSIFICATION	3.137137777653886E-8	DEFECT
// Find the pattern between padIdxStart & padIdxTmp in str between // strIdxStart & strIdxEnd	WITHOUT_CLASSIFICATION	0.9999999686286223	WITHOUT_CLASSIFICATION	3.137137777653886E-8	DEFECT
// Character mismatch	WITHOUT_CLASSIFICATION	0.9999999871444399	WITHOUT_CLASSIFICATION	1.2855560012457899E-8	DEFECT
// Character mismatch	WITHOUT_CLASSIFICATION	0.9999999871444399	WITHOUT_CLASSIFICATION	1.2855560012457899E-8	DEFECT
// Character mismatch	WITHOUT_CLASSIFICATION	0.9999999871444399	WITHOUT_CLASSIFICATION	1.2855560012457899E-8	DEFECT
// Pattern contains only '*', which matches anything	WITHOUT_CLASSIFICATION	0.9999829478086107	WITHOUT_CLASSIFICATION	1.705219138926409E-5	DEFECT
// Process characters before first star	WITHOUT_CLASSIFICATION	0.9999999870217817	WITHOUT_CLASSIFICATION	1.2978218138036842E-8	DEFECT
// All characters in the string are used. Check if only '*'s are // left in the pattern. If so, we succeeded. Otherwise failure.	WITHOUT_CLASSIFICATION	0.9999999738168383	WITHOUT_CLASSIFICATION	2.6183161770092496E-8	DEFECT
// All characters in the string are used. Check if only '*'s are // left in the pattern. If so, we succeeded. Otherwise failure.	WITHOUT_CLASSIFICATION	0.9999999738168383	WITHOUT_CLASSIFICATION	2.6183161770092496E-8	DEFECT
// Process characters after last star	WITHOUT_CLASSIFICATION	0.9999999784254284	WITHOUT_CLASSIFICATION	2.157457157644335E-8	DEFECT
// process pattern between stars. padIdxStart and patIdxEnd point // always to a '*'.	WITHOUT_CLASSIFICATION	0.9999982466879203	WITHOUT_CLASSIFICATION	1.7533120797315835E-6	DEFECT
// Two stars next to each other, skip the first one.	WITHOUT_CLASSIFICATION	0.9999951313505456	WITHOUT_CLASSIFICATION	4.8686494544306564E-6	DEFECT
// All characters in the string are used. Check if only '*'s are left // in the pattern. If so, we succeeded. Otherwise failure.	WITHOUT_CLASSIFICATION	0.9999999972510099	WITHOUT_CLASSIFICATION	2.7489901527398287E-9	DEFECT
/*++*/	WITHOUT_CLASSIFICATION	0.9996799774271644	WITHOUT_CLASSIFICATION	3.200225728356109E-4	DEFECT
// Creation is done here rather than in isSelected() because some // containers may do a validation pass before running isSelected(), // but we need to check for the existence of the created class.	WITHOUT_CLASSIFICATION	0.9999997779245066	WITHOUT_CLASSIFICATION	2.2207549344366344E-7	DEFECT
// We know that dynselector must be non-null if no error message	WITHOUT_CLASSIFICATION	0.9999997497356339	WITHOUT_CLASSIFICATION	2.5026436611635975E-7	DEFECT
// Deal with if and unless properties first	WITHOUT_CLASSIFICATION	0.9999989803696993	WITHOUT_CLASSIFICATION	1.019630300721939E-6	DEFECT
// -----  attributes  -----	WITHOUT_CLASSIFICATION	0.9999997429540988	WITHOUT_CLASSIFICATION	2.5704590123148854E-7	DEFECT
// ----- internal member variables -----	WITHOUT_CLASSIFICATION	0.9999988197389618	WITHOUT_CLASSIFICATION	1.1802610382049513E-6	DEFECT
// -----  constructors  -----	WITHOUT_CLASSIFICATION	0.999999852901684	WITHOUT_CLASSIFICATION	1.4709831591233963E-7	DEFECT
// ----- configuration  -----	WITHOUT_CLASSIFICATION	0.9999989313213048	WITHOUT_CLASSIFICATION	1.0686786951402826E-6	DEFECT
// normal use inside Ant	WITHOUT_CLASSIFICATION	0.9999999151211176	WITHOUT_CLASSIFICATION	8.487888228114304E-8	DEFECT
// set self as a BuildListener to delay cachefile saves	WITHOUT_CLASSIFICATION	0.9999998614039037	WITHOUT_CLASSIFICATION	1.3859609623750646E-7	DEFECT
// no reference to project - e.g. during normal JUnit tests	WITHOUT_CLASSIFICATION	0.9999999264038913	WITHOUT_CLASSIFICATION	7.359610856993905E-8	DEFECT
// this is a *.* parameter for later use	WITHOUT_CLASSIFICATION	0.9999829441018465	WITHOUT_CLASSIFICATION	1.7055898153482223E-5	DEFECT
// specify the algorithm classname	WITHOUT_CLASSIFICATION	0.9999911347199022	WITHOUT_CLASSIFICATION	8.865280097782224E-6	DEFECT
// use Algorithm defined via name	WITHOUT_CLASSIFICATION	0.9999996226188692	WITHOUT_CLASSIFICATION	3.7738113086241176E-7	DEFECT
// use Algorithm specified by classname	WITHOUT_CLASSIFICATION	0.9999983740358147	WITHOUT_CLASSIFICATION	1.625964185376028E-6	DEFECT
// nothing specified - use default	WITHOUT_CLASSIFICATION	0.9999999981048415	WITHOUT_CLASSIFICATION	1.8951584480613912E-9	DEFECT
// else nothing to do	WITHOUT_CLASSIFICATION	0.9999994888941238	WITHOUT_CLASSIFICATION	5.111058761952705E-7	DEFECT
// use Algorithm defined via name	WITHOUT_CLASSIFICATION	0.9999996226188692	WITHOUT_CLASSIFICATION	3.7738113086241176E-7	DEFECT
// // -----  Set the main attributes, pattern '*'  ----- //	WITHOUT_CLASSIFICATION	0.9999998375827921	WITHOUT_CLASSIFICATION	1.6241720795662853E-7	DEFECT
// use Algorithm specified by classname	WITHOUT_CLASSIFICATION	0.9999983740358147	WITHOUT_CLASSIFICATION	1.625964185376028E-6	DEFECT
// nothing specified - use default	WITHOUT_CLASSIFICATION	0.9999999981048415	WITHOUT_CLASSIFICATION	1.8951584480613912E-9	DEFECT
// specify the cache classname	WITHOUT_CLASSIFICATION	0.9999999069082502	WITHOUT_CLASSIFICATION	9.30917496891158E-8	DEFECT
// use Cache defined via name	WITHOUT_CLASSIFICATION	0.999999997739773	WITHOUT_CLASSIFICATION	2.2602269682704325E-9	DEFECT
// use Cache specified by classname	WITHOUT_CLASSIFICATION	0.9999998560619162	WITHOUT_CLASSIFICATION	1.4393808383532138E-7	DEFECT
// specify the comparator classname	WITHOUT_CLASSIFICATION	0.9999996595557604	WITHOUT_CLASSIFICATION	3.4044423957583123E-7	DEFECT
// // -----  Set the special attributes, pattern '*.*'  ----- //	WITHOUT_CLASSIFICATION	0.9999997663689366	WITHOUT_CLASSIFICATION	2.336310633082467E-7	DEFECT
// load the specified class	WITHOUT_CLASSIFICATION	0.9999996612148995	WITHOUT_CLASSIFICATION	3.387851005233995E-7	DEFECT
// -----  the selection work  -----	WITHOUT_CLASSIFICATION	0.9988506501887878	WITHOUT_CLASSIFICATION	0.0011493498112122302	DEFECT
// We have a 'resourced' file, so reconvert it and use // the 'old' implementation.	WITHOUT_CLASSIFICATION	0.9999970297579261	WITHOUT_CLASSIFICATION	2.9702420739176573E-6	DEFECT
// You can not compute a value for a directory	WITHOUT_CLASSIFICATION	0.9999878879850823	WITHOUT_CLASSIFICATION	1.211201491762366E-5	DEFECT
// Get the values and do the comparison	WITHOUT_CLASSIFICATION	0.999999459668816	WITHOUT_CLASSIFICATION	5.403311839198326E-7	DEFECT
// Maybe update the cache	WITHOUT_CLASSIFICATION	0.9999998664835169	WITHOUT_CLASSIFICATION	1.3351648301544522E-7	DEFECT
// -----  attribute and nested element support  -----	WITHOUT_CLASSIFICATION	0.9999972225997763	WITHOUT_CLASSIFICATION	2.7774002237069442E-6	DEFECT
// the usual classloader	WITHOUT_CLASSIFICATION	0.9999982739439164	WITHOUT_CLASSIFICATION	1.7260560835217682E-6	DEFECT
// additional use the provided classpath	WITHOUT_CLASSIFICATION	0.9999945001490602	WITHOUT_CLASSIFICATION	5.49985093981265E-6	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9999946922479692	WITHOUT_CLASSIFICATION	5.307752030792126E-6	DEFECT
// ----- 'beautiful' output -----	WITHOUT_CLASSIFICATION	0.9999984919774952	WITHOUT_CLASSIFICATION	1.5080225047079973E-6	DEFECT
// ----- BuildListener interface methods -----	WITHOUT_CLASSIFICATION	0.9999986936524764	WITHOUT_CLASSIFICATION	1.306347523555909E-6	DEFECT
// The EnumeratedAttributes for the three interface implementations. // Name-Classname mapping is done in the configure() method.	WITHOUT_CLASSIFICATION	0.9999850127190915	WITHOUT_CLASSIFICATION	1.4987280908507261E-5	DEFECT
// -----  member variables  -----	WITHOUT_CLASSIFICATION	0.9999979396261796	WITHOUT_CLASSIFICATION	2.0603738204196253E-6	DEFECT
// -----  member variables  -----	WITHOUT_CLASSIFICATION	0.9999979396261796	WITHOUT_CLASSIFICATION	2.0603738204196253E-6	DEFECT
// -----  Algorithm-Configuration  -----	WITHOUT_CLASSIFICATION	0.9999844033119902	WITHOUT_CLASSIFICATION	1.5596688009757287E-5	DEFECT
// -----  Algorithm-Configuration  -----	WITHOUT_CLASSIFICATION	0.9999844033119902	WITHOUT_CLASSIFICATION	1.5596688009757287E-5	DEFECT
// -----  Logic  -----	WITHOUT_CLASSIFICATION	0.9999965059681217	WITHOUT_CLASSIFICATION	3.49403187831521E-6	DEFECT
// -----  Logic  -----	WITHOUT_CLASSIFICATION	0.9999965059681217	WITHOUT_CLASSIFICATION	3.49403187831521E-6	DEFECT
// implementation adapted from ...taskdefs.Checksum, thanks to Magesh for hint	WITHOUT_CLASSIFICATION	0.9999996481979391	WITHOUT_CLASSIFICATION	3.5180206090786253E-7	DEFECT
// Read the file	WITHOUT_CLASSIFICATION	0.9999957136675923	WITHOUT_CLASSIFICATION	4.2863324076983095E-6	DEFECT
// -----  member variables - configuration  -----	WITHOUT_CLASSIFICATION	0.9999990836122922	WITHOUT_CLASSIFICATION	9.163877077920563E-7	DEFECT
// -----  member variables - internal use  -----	WITHOUT_CLASSIFICATION	0.9999990260755572	WITHOUT_CLASSIFICATION	9.73924442800599E-7	DEFECT
// -----  Constructors  -----	WITHOUT_CLASSIFICATION	0.9999998398957084	WITHOUT_CLASSIFICATION	1.6010429160476544E-7	DEFECT
// -----  Cache-Configuration  -----	WITHOUT_CLASSIFICATION	0.9999978284608217	WITHOUT_CLASSIFICATION	2.171539178340526E-6	DEFECT
// -----  Data Access	WITHOUT_CLASSIFICATION	0.9999980569697651	WITHOUT_CLASSIFICATION	1.9430302348971574E-6	DEFECT
// after loading the cache is up to date with the file	WITHOUT_CLASSIFICATION	0.9999997860529467	WITHOUT_CLASSIFICATION	2.139470532966368E-7	DEFECT
// -----  additional  -----	WITHOUT_CLASSIFICATION	0.9999605789441519	WITHOUT_CLASSIFICATION	3.9421055848099726E-5	DEFECT
// swallow as this simply doesn't seem to be Kaffe	WITHOUT_CLASSIFICATION	0.999914062299617	WITHOUT_CLASSIFICATION	8.593770038311008E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999996958536274	WITHOUT_CLASSIFICATION	3.0414637271301487E-7	DEFECT
// find the line breaks and pass other chars through in blocks	WITHOUT_CLASSIFICATION	0.9999427688855644	WITHOUT_CLASSIFICATION	5.7231114435541346E-5	DEFECT
// either end of buffer or a line separator char	WITHOUT_CLASSIFICATION	0.9999999441119801	WITHOUT_CLASSIFICATION	5.5888019835356194E-8	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9999940166248454	WITHOUT_CLASSIFICATION	5.983375154568819E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999209490427	WITHOUT_CLASSIFICATION	7.905095730336347E-8	DEFECT
// Because the content is only read the file will not be damaged. I tested // with JPG, ZIP and PDF as binary files.	WITHOUT_CLASSIFICATION	0.999999784428316	WITHOUT_CLASSIFICATION	2.1557168399661834E-7	DEFECT
// don't need the opposite check as the Dictionaries have the // same size, so we've also covered all keys of d2 already.	WITHOUT_CLASSIFICATION	0.9999999894322533	WITHOUT_CLASSIFICATION	1.0567746674006653E-8	DEFECT
//log uptodateness of all targets:	WITHOUT_CLASSIFICATION	0.9999998904328188	WITHOUT_CLASSIFICATION	1.0956718119218792E-7	DEFECT
// CheckStyle:ParameterNumberCheck OFF - bc	WITHOUT_CLASSIFICATION	0.999999845302011	WITHOUT_CLASSIFICATION	1.546979889426375E-7	DEFECT
// this should not happen, because the lines are // returned with the end of line delimiter	WITHOUT_CLASSIFICATION	0.9999652047422236	WITHOUT_CLASSIFICATION	3.479525777634084E-5	DEFECT
// CheckStyle:ParameterNumberCheck ON	WITHOUT_CLASSIFICATION	0.9999999467582092	WITHOUT_CLASSIFICATION	5.324179085611728E-8	DEFECT
// two not existing files are equal	WITHOUT_CLASSIFICATION	0.9999857987897375	WITHOUT_CLASSIFICATION	1.420121026246636E-5	DEFECT
// should the following two be switched?  If r1 and r2 refer to the same file, // isn't their content equal regardless of whether that file is a directory?	WITHOUT_CLASSIFICATION	0.999999882545602	WITHOUT_CLASSIFICATION	1.174543980117108E-7	DEFECT
// don't want to compare directory contents for now	WITHOUT_CLASSIFICATION	0.9995862553136573	WITHOUT_CLASSIFICATION	4.13744686342727E-4	DEFECT
//as far as we know	WITHOUT_CLASSIFICATION	0.9999875821463745	WITHOUT_CLASSIFICATION	1.2417853625597417E-5	DEFECT
//ignore release of an already-closed funnel	WITHOUT_CLASSIFICATION	0.9999999966530663	WITHOUT_CLASSIFICATION	3.3469337878381546E-9	DEFECT
// Write child elements and text	WITHOUT_CLASSIFICATION	0.9999995549641568	WITHOUT_CLASSIFICATION	4.4503584315801E-7	DEFECT
// Write indent characters	WITHOUT_CLASSIFICATION	0.9999999857608137	WITHOUT_CLASSIFICATION	1.4239186308080669E-8	DEFECT
// Write element	WITHOUT_CLASSIFICATION	0.9999955473310974	WITHOUT_CLASSIFICATION	4.452668902633162E-6	DEFECT
// steal default namespace	WITHOUT_CLASSIFICATION	0.9999999925120927	WITHOUT_CLASSIFICATION	7.487907266945541E-9	DEFECT
// Write attributes	WITHOUT_CLASSIFICATION	0.9999996976566317	WITHOUT_CLASSIFICATION	3.0234336832058824E-7	DEFECT
// Write element close	WITHOUT_CLASSIFICATION	0.99999995460974	WITHOUT_CLASSIFICATION	4.53902600561155E-8	DEFECT
// relative path	WITHOUT_CLASSIFICATION	0.9999995402938342	WITHOUT_CLASSIFICATION	4.597061658934488E-7	DEFECT
// Fall tru	WITHOUT_CLASSIFICATION	0.9999962365834545	WITHOUT_CLASSIFICATION	3.763416545424629E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999209490427	WITHOUT_CLASSIFICATION	7.905095730336347E-8	DEFECT
// Determine the Java version by looking at available classes // java.net.Proxy was introduced in JDK 1.5 // java.lang.CharSequence was introduced in JDK 1.4 // java.lang.StrictMath was introduced in JDK 1.3 // java.lang.ThreadLocal was introduced in JDK 1.2 // java.lang.Void was introduced in JDK 1.1 // Count up version until a NoClassDefFoundError ends the try	WITHOUT_CLASSIFICATION	0.9999993448035575	WITHOUT_CLASSIFICATION	6.551964425807084E-7	DEFECT
// swallow as we've hit the max class version that // we have	WITHOUT_CLASSIFICATION	0.9999990489571557	WITHOUT_CLASSIFICATION	9.510428443581327E-7	DEFECT
// Extrapolating from: // "NetWare may have a "java" in that directory, but 99% of // the time, you don't want to execute it" -- Jeff Tulley // <JTULLEY@novell.com>	WITHOUT_CLASSIFICATION	0.9982202722485518	WITHOUT_CLASSIFICATION	0.0017797277514481923	DEFECT
// On IBM's JDK 1.2 the directory layout is different, 1.3 follows // Sun's layout.	WITHOUT_CLASSIFICATION	0.9974018522655096	WITHOUT_CLASSIFICATION	0.0025981477344904167	DEFECT
// On IBM's JDK 1.2 the directory layout is different, 1.3 follows // Sun's layout.	WITHOUT_CLASSIFICATION	0.9974018522655096	WITHOUT_CLASSIFICATION	0.0025981477344904167	DEFECT
// Unfortunately on Windows java.home doesn't always refer // to the correct location, so we need to fall back to // assuming java is somewhere on the PATH.	WITHOUT_CLASSIFICATION	0.9863191449380213	WITHOUT_CLASSIFICATION	0.013680855061978796	DEFECT
// fall back to JRE bin directory, also catches JDK 1.0 and 1.1 // where java.home points to the root of the JDK and Mac OS X where // the whole directory layout is different from Sun's	WITHOUT_CLASSIFICATION	0.9999207386610806	WITHOUT_CLASSIFICATION	7.926133891944757E-5	DEFECT
// This is the most common extension case - exe for windows and OS/2, // nothing for *nix.	WITHOUT_CLASSIFICATION	0.9996284162501541	WITHOUT_CLASSIFICATION	3.7158374984592817E-4	DEFECT
//In Java1.5, the apache stuff moved.	WITHOUT_CLASSIFICATION	0.9999950916928338	WITHOUT_CLASSIFICATION	4.908307166190789E-6	DEFECT
//fall through.	WITHOUT_CLASSIFICATION	0.9999524029835958	WITHOUT_CLASSIFICATION	4.759701640414069E-5	DEFECT
// fall through	WITHOUT_CLASSIFICATION	0.9999738893977648	WITHOUT_CLASSIFICATION	2.6110602235264884E-5	DEFECT
// fall through	WITHOUT_CLASSIFICATION	0.9999738893977648	WITHOUT_CLASSIFICATION	2.6110602235264884E-5	DEFECT
// fall through	WITHOUT_CLASSIFICATION	0.9999738893977648	WITHOUT_CLASSIFICATION	2.6110602235264884E-5	DEFECT
// are there any here that we forgot? // fall through	WITHOUT_CLASSIFICATION	0.9999816589832987	WITHOUT_CLASSIFICATION	1.8341016701273244E-5	DEFECT
//things like sun.reflection, sun.misc, sun.net	WITHOUT_CLASSIFICATION	0.9999623992884484	WITHOUT_CLASSIFICATION	3.7600711551445145E-5	DEFECT
//things like sun.reflection, sun.misc, sun.net	WITHOUT_CLASSIFICATION	0.9999623992884484	WITHOUT_CLASSIFICATION	3.7600711551445145E-5	DEFECT
//Strip '.' token	WITHOUT_CLASSIFICATION	0.999974505465343	WITHOUT_CLASSIFICATION	2.5494534656860987E-5	DEFECT
//If it ended in a dot, throw an exception	WITHOUT_CLASSIFICATION	0.9994804729232538	WITHOUT_CLASSIFICATION	5.195270767462295E-4	DEFECT
// Exact match	WITHOUT_CLASSIFICATION	0.9999983724049167	WITHOUT_CLASSIFICATION	1.6275950831896407E-6	DEFECT
// Exact match	WITHOUT_CLASSIFICATION	0.9999983724049167	WITHOUT_CLASSIFICATION	1.6275950831896407E-6	DEFECT
// Exact match	WITHOUT_CLASSIFICATION	0.9999983724049167	WITHOUT_CLASSIFICATION	1.6275950831896407E-6	DEFECT
// might read too much	WITHOUT_CLASSIFICATION	0.9999975875664202	WITHOUT_CLASSIFICATION	2.4124335797775707E-6	DEFECT
// would be imprecise	WITHOUT_CLASSIFICATION	0.9999910772344188	WITHOUT_CLASSIFICATION	8.922765581249365E-6	DEFECT
//last character isn't a digit	WITHOUT_CLASSIFICATION	0.9999996054581594	WITHOUT_CLASSIFICATION	3.9454184069477495E-7	DEFECT
// write out the number of characters encoded in this line.	WITHOUT_CLASSIFICATION	0.9999998946804982	WITHOUT_CLASSIFICATION	1.053195016888317E-7	DEFECT
// set the padding defaults	WITHOUT_CLASSIFICATION	0.9999998867749739	WITHOUT_CLASSIFICATION	1.1322502611331965E-7	DEFECT
// get the next 3 bytes (if we have them)	WITHOUT_CLASSIFICATION	0.9999972611759226	WITHOUT_CLASSIFICATION	2.738824077420334E-6	DEFECT
// OK, Java 1.3.	WITHOUT_CLASSIFICATION	0.9999985044331762	WITHOUT_CLASSIFICATION	1.495566823794609E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999996958536274	WITHOUT_CLASSIFICATION	3.0414637271301487E-7	DEFECT
// CheckStyle:ConstantNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9999995903148149	WITHOUT_CLASSIFICATION	4.096851851945928E-7	DEFECT
// CheckStyle:ConstantNameCheck ON	WITHOUT_CLASSIFICATION	0.9999997940321296	WITHOUT_CLASSIFICATION	2.0596787035541803E-7	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9999940166248454	WITHOUT_CLASSIFICATION	5.983375154568819E-6	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9999940166248454	WITHOUT_CLASSIFICATION	5.983375154568819E-6	DEFECT
// #8031: first try Java 1.4.	WITHOUT_CLASSIFICATION	0.9999933376849441	WITHOUT_CLASSIFICATION	6.662315055880644E-6	DEFECT
// Reflection problems? Should not happen, debug.	WITHOUT_CLASSIFICATION	0.9943072773771309	WITHOUT_CLASSIFICATION	0.005692722622869094	DEFECT
// CheckStyle:ParameterNumberCheck OFF - bc	WITHOUT_CLASSIFICATION	0.999999845302011	WITHOUT_CLASSIFICATION	1.546979889426375E-7	DEFECT
// CheckStyle:ParameterNumberCheck ON	WITHOUT_CLASSIFICATION	0.9999999467582092	WITHOUT_CLASSIFICATION	5.324179085611728E-8	DEFECT
// depending on the implementation the actual RE won't // get instantiated in the constructor.	WITHOUT_CLASSIFICATION	0.9999725921536081	WITHOUT_CLASSIFICATION	2.740784639191799E-5	DEFECT
// terminate with a linefeed alone	WITHOUT_CLASSIFICATION	0.9999982060388193	WITHOUT_CLASSIFICATION	1.79396118077718E-6	DEFECT
// NotReached	WITHOUT_CLASSIFICATION	0.9999995295685763	WITHOUT_CLASSIFICATION	4.7043142366041786E-7	DEFECT
//  0 to  7 //  8 to 15 // 16 to 23 // 24 to 31 // 32 to 39 // 40 to 47 // 48 to 55 // 56 to 63	WITHOUT_CLASSIFICATION	0.9996212559288964	WITHOUT_CLASSIFICATION	3.787440711035646E-4	DEFECT
// store the octets	WITHOUT_CLASSIFICATION	0.9999999314719866	WITHOUT_CLASSIFICATION	6.852801338089596E-8	DEFECT
// store the octets	WITHOUT_CLASSIFICATION	0.9999999314719866	WITHOUT_CLASSIFICATION	6.852801338089596E-8	DEFECT
// store the octets	WITHOUT_CLASSIFICATION	0.9999999314719866	WITHOUT_CLASSIFICATION	6.852801338089596E-8	DEFECT
// padding	WITHOUT_CLASSIFICATION	0.9999803844662634	WITHOUT_CLASSIFICATION	1.9615533736577654E-5	DEFECT
// padding	WITHOUT_CLASSIFICATION	0.9999803844662634	WITHOUT_CLASSIFICATION	1.9615533736577654E-5	DEFECT
// magic property	WITHOUT_CLASSIFICATION	0.9999972304085044	WITHOUT_CLASSIFICATION	2.7695914956471E-6	DEFECT
//only text nodes that are non null after property expansion are added	WITHOUT_CLASSIFICATION	0.999995127195674	WITHOUT_CLASSIFICATION	4.872804326097927E-6	DEFECT
//no need to synchronize, as Vector is always synchronized	WITHOUT_CLASSIFICATION	0.9999921130820016	WITHOUT_CLASSIFICATION	7.886917998409148E-6	DEFECT
// do not close the stream	WITHOUT_CLASSIFICATION	0.9999998430140514	WITHOUT_CLASSIFICATION	1.5698594864340186E-7	DEFECT
//Empty	WITHOUT_CLASSIFICATION	0.9999438692460078	WITHOUT_CLASSIFICATION	5.613075399220676E-5	DEFECT
//Empty	WITHOUT_CLASSIFICATION	0.9999438692460078	WITHOUT_CLASSIFICATION	5.613075399220676E-5	DEFECT
//get some non-crypto-grade randomness from various places.	WITHOUT_CLASSIFICATION	0.9999999475105484	WITHOUT_CLASSIFICATION	5.248945161526828E-8	DEFECT
// Cannot resolve it, so skip it.	WITHOUT_CLASSIFICATION	0.9999984704553754	WITHOUT_CLASSIFICATION	1.5295446245854097E-6	DEFECT
// plain component	WITHOUT_CLASSIFICATION	0.9999997901960629	WITHOUT_CLASSIFICATION	2.098039370673709E-7	DEFECT
// make sure we are dealing with an absolute path	WITHOUT_CLASSIFICATION	0.999999858283331	WITHOUT_CLASSIFICATION	1.417166689177551E-7	DEFECT
//remove the initial separator; the root has it.	WITHOUT_CLASSIFICATION	0.9999993555741294	WITHOUT_CLASSIFICATION	6.444258705344417E-7	DEFECT
// UNC drive	WITHOUT_CLASSIFICATION	0.9999994160201803	WITHOUT_CLASSIFICATION	5.839798197462111E-7	DEFECT
// format: "DEVICE:[DIR.SUBDIR]FILE"	WITHOUT_CLASSIFICATION	0.9999886975449161	WITHOUT_CLASSIFICATION	1.1302455083825144E-5	DEFECT
// treat directories specified using .DIR syntax as files	WITHOUT_CLASSIFICATION	0.9999997950366837	WITHOUT_CLASSIFICATION	2.0496331636468145E-7	DEFECT
// add an extra slash for filesystems with drive-specifiers	WITHOUT_CLASSIFICATION	0.9999993932741423	WITHOUT_CLASSIFICATION	6.067258575628317E-7	DEFECT
//do a check for the destination file existing	WITHOUT_CLASSIFICATION	0.999999987920344	WITHOUT_CLASSIFICATION	1.207965602499791E-8	DEFECT
// execute the script	WITHOUT_CLASSIFICATION	0.99999836615062	WITHOUT_CLASSIFICATION	1.6338493800247153E-6	DEFECT
// do nothing by default	WITHOUT_CLASSIFICATION	0.9999998946027278	WITHOUT_CLASSIFICATION	1.0539727223751621E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999996958536274	WITHOUT_CLASSIFICATION	3.0414637271301487E-7	DEFECT
// NotReached	WITHOUT_CLASSIFICATION	0.9999995295685763	WITHOUT_CLASSIFICATION	4.7043142366041786E-7	DEFECT
// now recover all the dependencies collected and add to the list.	WITHOUT_CLASSIFICATION	0.9999999403750496	WITHOUT_CLASSIFICATION	5.962495037444604E-8	DEFECT
//inherit doc	WITHOUT_CLASSIFICATION	0.9999949911119377	WITHOUT_CLASSIFICATION	5.008888062339111E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999209490427	WITHOUT_CLASSIFICATION	7.905095730336347E-8	DEFECT
// NotReached	WITHOUT_CLASSIFICATION	0.9999995295685763	WITHOUT_CLASSIFICATION	4.7043142366041786E-7	DEFECT
// do not close the stream	WITHOUT_CLASSIFICATION	0.9999998430140514	WITHOUT_CLASSIFICATION	1.5698594864340186E-7	DEFECT
// on cygwin, our current directory can be a UNC; // assume user.dir is absolute or all hell breaks loose...	WITHOUT_CLASSIFICATION	0.999360514004702	WITHOUT_CLASSIFICATION	6.394859952979051E-4	DEFECT
// not before the filesystem root and not after it, since root // already contains one	WITHOUT_CLASSIFICATION	0.9999999530254153	WITHOUT_CLASSIFICATION	4.6974584562688945E-8	DEFECT
// ensure that l ends with a / // so we never think /foo was a parent directory of /foobar	WITHOUT_CLASSIFICATION	0.9999967137828928	WITHOUT_CLASSIFICATION	3.286217107237673E-6	DEFECT
// ensure that l ends with a / // so we never think /foo was a parent directory of /foobar	WITHOUT_CLASSIFICATION	0.9999967137828928	WITHOUT_CLASSIFICATION	3.286217107237673E-6	DEFECT
// build the path stack info to compare	WITHOUT_CLASSIFICATION	0.9999884002950971	WITHOUT_CLASSIFICATION	1.1599704902970631E-5	DEFECT
// not the same device (would be "" on Linux/Unix)	WITHOUT_CLASSIFICATION	0.9999913556561403	WITHOUT_CLASSIFICATION	8.644343859706712E-6	DEFECT
// no comparison possible	WITHOUT_CLASSIFICATION	0.9999997946422058	WITHOUT_CLASSIFICATION	2.053577942872793E-7	DEFECT
// get index of parts which are equal	WITHOUT_CLASSIFICATION	0.9999938729016603	WITHOUT_CLASSIFICATION	6.127098339606164E-6	DEFECT
// if "from" part is longer, fill it up with ".." // to reach path which is equal to both paths	WITHOUT_CLASSIFICATION	0.9999999853680784	WITHOUT_CLASSIFICATION	1.4631921439350695E-8	DEFECT
// fill it up path with parts which were not equal	WITHOUT_CLASSIFICATION	0.999999006100588	WITHOUT_CLASSIFICATION	9.93899411952164E-7	DEFECT
// can safely use '/' because Windows understands '/' as separator	WITHOUT_CLASSIFICATION	0.9999981521101913	WITHOUT_CLASSIFICATION	1.8478898086160106E-6	DEFECT
// base directory of the fileset	WITHOUT_CLASSIFICATION	0.9999997659110725	WITHOUT_CLASSIFICATION	2.3408892734916556E-7	DEFECT
// build the list of sources which are out of date with // respect to the target	WITHOUT_CLASSIFICATION	0.9999999949753438	WITHOUT_CLASSIFICATION	5.024656308380678E-9	DEFECT
// code from Magesh moved from DefaultLogger and slightly modified	WITHOUT_CLASSIFICATION	0.9999985654466272	WITHOUT_CLASSIFICATION	1.4345533727690537E-6	DEFECT
//if you cannot read it, you won't be able to write it either	WITHOUT_CLASSIFICATION	0.9998816246173795	WITHOUT_CLASSIFICATION	1.1837538262054507E-4	DEFECT
// must be a zip of some sort	WITHOUT_CLASSIFICATION	0.9999999866125857	WITHOUT_CLASSIFICATION	1.3387414268168964E-8	DEFECT
// does the class have a package structure	WITHOUT_CLASSIFICATION	0.9999963283210321	WITHOUT_CLASSIFICATION	3.6716789678258423E-6	DEFECT
// check if the package structure is more than 1 level deep	WITHOUT_CLASSIFICATION	0.9999999972729258	WITHOUT_CLASSIFICATION	2.727074298892436E-9	DEFECT
// class name has more than 1 package level 'com.company.Class'	WITHOUT_CLASSIFICATION	0.9999968629655751	WITHOUT_CLASSIFICATION	3.137034424958829E-6	DEFECT
// class name has only 1 package level 'package.Class'	WITHOUT_CLASSIFICATION	0.999997112023365	WITHOUT_CLASSIFICATION	2.8879766349329114E-6	DEFECT
// Add the class in dotted notation 'com.company.Class'	WITHOUT_CLASSIFICATION	0.9999826941462197	WITHOUT_CLASSIFICATION	1.7305853780313186E-5	DEFECT
// Add a class with no package 'Class'	WITHOUT_CLASSIFICATION	0.9999989158707357	WITHOUT_CLASSIFICATION	1.0841292642291251E-6	DEFECT
// force BCEL classes to load now	WITHOUT_CLASSIFICATION	0.9999985396648067	WITHOUT_CLASSIFICATION	1.4603351933548508E-6	DEFECT
// force BCEL classes to load now	WITHOUT_CLASSIFICATION	0.9999985396648067	WITHOUT_CLASSIFICATION	1.4603351933548508E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999996958536274	WITHOUT_CLASSIFICATION	3.0414637271301487E-7	DEFECT
// NotReached	WITHOUT_CLASSIFICATION	0.9999995295685763	WITHOUT_CLASSIFICATION	4.7043142366041786E-7	DEFECT
// we get the root classes and build up a set of // classes upon which they depend	WITHOUT_CLASSIFICATION	0.9999963923914749	WITHOUT_CLASSIFICATION	3.6076085250777736E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999209490427	WITHOUT_CLASSIFICATION	7.905095730336347E-8	DEFECT
// execute the script	WITHOUT_CLASSIFICATION	0.99999836615062	WITHOUT_CLASSIFICATION	1.6338493800247153E-6	DEFECT
//log security exceptions and continue; it aint that //important and may be quite common running Ant embedded.	WITHOUT_CLASSIFICATION	0.9999961119201769	WITHOUT_CLASSIFICATION	3.888079823031585E-6	DEFECT
// we look through the classpath elements. If the element is a dir // we look for the file. IF it is a zip, we look for the zip entry	WITHOUT_CLASSIFICATION	0.999999797531157	WITHOUT_CLASSIFICATION	2.0246884289013755E-7	DEFECT
// we look through the source path elements. If the element is a dir // we look for the file. If it is a zip, we look for the zip entry. // This isn't normal for source paths but we get it for free	WITHOUT_CLASSIFICATION	0.9999973278787344	WITHOUT_CLASSIFICATION	2.6721212655944437E-6	DEFECT
// first letter of the previous segment of the class name 'Class' // is upper case ascii. so according to the spec it's an inner class	WITHOUT_CLASSIFICATION	0.9999999675915473	WITHOUT_CLASSIFICATION	3.2408452619662973E-8	DEFECT
// Register Groovy ourselves, since BSF did not // natively support it in versions previous to 1.2.4.	WITHOUT_CLASSIFICATION	0.9996307910375496	WITHOUT_CLASSIFICATION	3.692089624503573E-4	DEFECT
// execute the script	WITHOUT_CLASSIFICATION	0.99999836615062	WITHOUT_CLASSIFICATION	1.6338493800247153E-6	DEFECT
// translate \1 to $1 so that the Perl5Substitution will work	WITHOUT_CLASSIFICATION	0.999941408674335	WITHOUT_CLASSIFICATION	5.859132566494559E-5	DEFECT
// BSF uses a hashtable to store values // so cannot declareBean with a null value // So need to remove any bean of this name as // that bean should not be visible	WITHOUT_CLASSIFICATION	0.9999400823491342	WITHOUT_CLASSIFICATION	5.991765086579893E-5	DEFECT
// no permission here	WITHOUT_CLASSIFICATION	0.9999887679545022	WITHOUT_CLASSIFICATION	1.1232045497842539E-5	DEFECT
// compute the compiler options based on the input options first	WITHOUT_CLASSIFICATION	0.99999949511199	WITHOUT_CLASSIFICATION	5.048880099675683E-7	DEFECT
// treat non-matching groups as empty matches	WITHOUT_CLASSIFICATION	0.999999765126735	WITHOUT_CLASSIFICATION	2.3487326502621365E-7	DEFECT
// be strict about line separator	WITHOUT_CLASSIFICATION	0.9999999828821039	WITHOUT_CLASSIFICATION	1.7117896108251024E-8	DEFECT
// translate \1 to $(1) so that the Matcher will work	WITHOUT_CLASSIFICATION	0.9999418894240245	WITHOUT_CLASSIFICATION	5.811057597551223E-5	DEFECT
// Do the substitution	WITHOUT_CLASSIFICATION	0.9999999030344421	WITHOUT_CLASSIFICATION	9.696555794199367E-8	DEFECT
// replace \1 with the corresponding group	WITHOUT_CLASSIFICATION	0.9998042388187418	WITHOUT_CLASSIFICATION	1.957611812582608E-4	DEFECT
/*     * Used when sorting.  If too many long comparisons     * happen, we stop sorting, randomise the block     * slightly, and try again.     */	WITHOUT_CLASSIFICATION	0.9999996160310053	WITHOUT_CLASSIFICATION	3.839689947248538E-7	DEFECT
/*          Nodes and heap entries run from 1.  Entry 0          for both the heap and nodes is a sentinel.        */	WITHOUT_CLASSIFICATION	0.9999984426117644	WITHOUT_CLASSIFICATION	1.5573882355936487E-6	DEFECT
/*          Nodes and heap entries run from 1.  Entry 0          for both the heap and nodes is a sentinel.        */	WITHOUT_CLASSIFICATION	0.9999984426117644	WITHOUT_CLASSIFICATION	1.5573882355936487E-6	DEFECT
//        blockNo++;	WITHOUT_CLASSIFICATION	0.9999936504971323	WITHOUT_CLASSIFICATION	6.349502867726107E-6	DEFECT
// // When we get here we have EITHER: // o An empty "assemble" buffer. // o No bytes to write (numToWrite == 0) //	WITHOUT_CLASSIFICATION	0.9999859594870346	WITHOUT_CLASSIFICATION	1.4040512965332752E-5	DEFECT
/* Write `magic' bytes h indicating file-format == huffmanised,           followed by a digit indicating blockSize100k.        */	WITHOUT_CLASSIFICATION	0.99999934251582	WITHOUT_CLASSIFICATION	6.5748417988823E-7	DEFECT
//        ch = 0;	WITHOUT_CLASSIFICATION	0.9999982872207422	WITHOUT_CLASSIFICATION	1.7127792578826034E-6	DEFECT
/* 20 is just a paranoia constant */	WITHOUT_CLASSIFICATION	0.9999975674506164	WITHOUT_CLASSIFICATION	2.4325493836261523E-6	DEFECT
// empty block at end of file	WITHOUT_CLASSIFICATION	0.999999807430986	WITHOUT_CLASSIFICATION	1.925690140734493E-7	DEFECT
/* sort the block and establish posn of original string */	WITHOUT_CLASSIFICATION	0.9999983460679662	WITHOUT_CLASSIFICATION	1.6539320337459286E-6	DEFECT
/* Now the block's CRC, so it is in a known place. */	WITHOUT_CLASSIFICATION	0.9999998964660789	WITHOUT_CLASSIFICATION	1.035339211300823E-7	DEFECT
/* Now a single bit indicating randomisation. */	WITHOUT_CLASSIFICATION	0.9999365735725596	WITHOUT_CLASSIFICATION	6.342642744044868E-5	DEFECT
/* Finally, block's contents proper. */	WITHOUT_CLASSIFICATION	0.9999926813903831	WITHOUT_CLASSIFICATION	7.318609616968376E-6	DEFECT
/*          Now another magic 48-bit number, 0x177245385090, to          indicate the end of the last block.  (sqrt(pi), if          you want to know.  I did want to use e, but it contains          too much repetition -- 27 18 28 18 28 46 -- for me          to feel statistically comfortable.  Call me paranoid.)        */	WITHOUT_CLASSIFICATION	0.9999755874848453	WITHOUT_CLASSIFICATION	2.4412515154738626E-5	DEFECT
// write 8-bit	WITHOUT_CLASSIFICATION	0.9999982836337244	WITHOUT_CLASSIFICATION	1.7163662756521567E-6	DEFECT
// write 8-bit	WITHOUT_CLASSIFICATION	0.9999982836337244	WITHOUT_CLASSIFICATION	1.7163662756521567E-6	DEFECT
// write 8-bit	WITHOUT_CLASSIFICATION	0.9999982836337244	WITHOUT_CLASSIFICATION	1.7163662756521567E-6	DEFECT
// write 8-bit	WITHOUT_CLASSIFICATION	0.9999982836337244	WITHOUT_CLASSIFICATION	1.7163662756521567E-6	DEFECT
// write 8-bit	WITHOUT_CLASSIFICATION	0.9999982836337244	WITHOUT_CLASSIFICATION	1.7163662756521567E-6	DEFECT
// write 8-bit	WITHOUT_CLASSIFICATION	0.9999982836337244	WITHOUT_CLASSIFICATION	1.7163662756521567E-6	DEFECT
/* Decide how many coding tables to use */	WITHOUT_CLASSIFICATION	0.9998995665465253	WITHOUT_CLASSIFICATION	1.0043345347462423E-4	DEFECT
/* Generate an initial set of coding tables */	WITHOUT_CLASSIFICATION	0.9999995128090576	WITHOUT_CLASSIFICATION	4.871909423282516E-7	DEFECT
/*          Iterate up to N_ITERS times to improve the tables.        */	WITHOUT_CLASSIFICATION	0.9999999719291569	WITHOUT_CLASSIFICATION	2.807084302494863E-8	DEFECT
/* Compute MTF values for the selectors. */	WITHOUT_CLASSIFICATION	0.9999999386311396	WITHOUT_CLASSIFICATION	6.136886045100152E-8	DEFECT
/* Assign actual codes for the tables. */	WITHOUT_CLASSIFICATION	0.9999949991508925	WITHOUT_CLASSIFICATION	5.000849107558746E-6	DEFECT
/* Transmit the mapping table. */	WITHOUT_CLASSIFICATION	0.9999987280085739	WITHOUT_CLASSIFICATION	1.271991425999416E-6	DEFECT
/* Now the selectors. */	WITHOUT_CLASSIFICATION	0.9999996377538114	WITHOUT_CLASSIFICATION	3.6224618861209634E-7	DEFECT
/* Now the coding tables. */	WITHOUT_CLASSIFICATION	0.9999990093461371	WITHOUT_CLASSIFICATION	9.906538629108048E-7	DEFECT
/* And finally, the block data proper */	WITHOUT_CLASSIFICATION	0.999653529759767	WITHOUT_CLASSIFICATION	3.464702402330572E-4	DEFECT
/* Set group start & end marks. */	WITHOUT_CLASSIFICATION	0.9999991679480841	WITHOUT_CLASSIFICATION	8.320519159234531E-7	DEFECT
/*                  Calculate the cost of this group as coded                  by each of the coding tables.                */	WITHOUT_CLASSIFICATION	0.999999927057088	WITHOUT_CLASSIFICATION	7.294291211714108E-8	DEFECT
// unrolled version of the else-block	WITHOUT_CLASSIFICATION	0.999997376400503	WITHOUT_CLASSIFICATION	2.6235994968646373E-6	DEFECT
/*                  Find the coding table which is best for this group,                  and record its identity in the selector table.                */	WITHOUT_CLASSIFICATION	0.9999994597229518	WITHOUT_CLASSIFICATION	5.402770481820634E-7	DEFECT
/*                  Increment the symbol frequencies for the selected table.                */	WITHOUT_CLASSIFICATION	0.9999994717592097	WITHOUT_CLASSIFICATION	5.282407903635794E-7	DEFECT
/*              Recompute the tables based on the accumulated frequencies.            */	WITHOUT_CLASSIFICATION	0.9999960456609438	WITHOUT_CLASSIFICATION	3.9543390562448025E-6	DEFECT
// inlined: bsW(1, inUse[i16 + j] ? 1 : 0);	WITHOUT_CLASSIFICATION	0.9999997264293026	WITHOUT_CLASSIFICATION	2.7357069746289336E-7	DEFECT
// inlined: bsW(1, 1);	WITHOUT_CLASSIFICATION	0.9999973266516141	WITHOUT_CLASSIFICATION	2.673348385920458E-6	DEFECT
// inlined: bsW(1, 0);	WITHOUT_CLASSIFICATION	0.9999982616437519	WITHOUT_CLASSIFICATION	1.7383562480800815E-6	DEFECT
// inlined: bsW(1, 0);	WITHOUT_CLASSIFICATION	0.9999982616437519	WITHOUT_CLASSIFICATION	1.7383562480800815E-6	DEFECT
//bsBuffShadow |= 0 << (32 - bsLiveShadow - 1);	WITHOUT_CLASSIFICATION	0.9999942781020186	WITHOUT_CLASSIFICATION	5.721897981509154E-6	DEFECT
// inlined: bsW(5, curr);	WITHOUT_CLASSIFICATION	0.9999986664702671	WITHOUT_CLASSIFICATION	1.3335297328283773E-6	DEFECT
// inlined: bsW(2, 2);	WITHOUT_CLASSIFICATION	0.9999976688298172	WITHOUT_CLASSIFICATION	2.3311701827774783E-6	DEFECT
/* 10 */	WITHOUT_CLASSIFICATION	0.9999760154601702	WITHOUT_CLASSIFICATION	2.3984539829697477E-5	DEFECT
// inlined: bsW(2, 3);	WITHOUT_CLASSIFICATION	0.9999969412787444	WITHOUT_CLASSIFICATION	3.0587212555795736E-6	DEFECT
/* 11 */	WITHOUT_CLASSIFICATION	0.9999811507010731	WITHOUT_CLASSIFICATION	1.8849298927012584E-5	DEFECT
// copy	WITHOUT_CLASSIFICATION	0.999956871877124	WITHOUT_CLASSIFICATION	4.312812287611475E-5	DEFECT
// start inline mainGTU	WITHOUT_CLASSIFICATION	0.9999999065516726	WITHOUT_CLASSIFICATION	9.34483273976157E-8	DEFECT
// following could be done in a loop, but // unrolled it for performance:	WITHOUT_CLASSIFICATION	0.9999993686089033	WITHOUT_CLASSIFICATION	6.313910967881891E-7	DEFECT
// while x > 0	WITHOUT_CLASSIFICATION	0.9999981688988051	WITHOUT_CLASSIFICATION	1.831101194822776E-6	DEFECT
// Set up the 2-byte frequency table	WITHOUT_CLASSIFICATION	0.9999993844475643	WITHOUT_CLASSIFICATION	6.155524357347116E-7	DEFECT
/*          In the various block-sized structures, live data runs          from 0 to last+NUM_OVERSHOOT_BYTES inclusive.  First,          set up the overshoot area for block.        */	WITHOUT_CLASSIFICATION	0.9999999997536129	WITHOUT_CLASSIFICATION	2.4638717103023124E-10	DEFECT
// Complete the initial radix sort:	WITHOUT_CLASSIFICATION	0.9999998470540685	WITHOUT_CLASSIFICATION	1.5294593150292985E-7	DEFECT
/*              Now ftab contains the first loc of every small bucket.              Calculate the running order, from smallest to largest              big bucket.        */	WITHOUT_CLASSIFICATION	0.999999997002113	WITHOUT_CLASSIFICATION	2.9978869748993637E-9	DEFECT
/*              The main sorting loop.        */	WITHOUT_CLASSIFICATION	0.9999997869109363	WITHOUT_CLASSIFICATION	2.130890637673133E-7	DEFECT
/*                  Process big buckets, starting with the least full.            */	WITHOUT_CLASSIFICATION	0.9999994851513158	WITHOUT_CLASSIFICATION	5.148486842778407E-7	DEFECT
// Step 1:	WITHOUT_CLASSIFICATION	0.9999945865872152	WITHOUT_CLASSIFICATION	5.413412784800077E-6	DEFECT
// Step 3:	WITHOUT_CLASSIFICATION	0.9999938640309537	WITHOUT_CLASSIFICATION	6.135969046363371E-6	DEFECT
// handle 16 bit signed numbers	WITHOUT_CLASSIFICATION	0.9999999795003778	WITHOUT_CLASSIFICATION	2.0499622201562085E-8	DEFECT
// make maps	WITHOUT_CLASSIFICATION	0.9999960462127029	WITHOUT_CLASSIFICATION	3.9537872971593796E-6	DEFECT
/* directory with respect to       */	WITHOUT_CLASSIFICATION	0.9999806629078624	WITHOUT_CLASSIFICATION	1.9337092137685995E-5	DEFECT
// with blockSize 900k //     256 byte //     256 byte //    1032 byte //   18002 byte //   18002 byte	WITHOUT_CLASSIFICATION	0.9999349909847007	WITHOUT_CLASSIFICATION	6.500901529933095E-5	DEFECT
//     256 byte //    1548 byte //    6192 byte //      24 byte //      12 byte //    6192 byte //       6 byte //      16 byte	WITHOUT_CLASSIFICATION	0.9999546955256332	WITHOUT_CLASSIFICATION	4.5304474366849856E-5	DEFECT
//    4000 byte //    4000 byte //    4000 byte	WITHOUT_CLASSIFICATION	0.9999792863292846	WITHOUT_CLASSIFICATION	2.071367071545809E-5	DEFECT
//    1024 byte //    1024 byte //     256 byte	WITHOUT_CLASSIFICATION	0.9999852880079988	WITHOUT_CLASSIFICATION	1.4711992001157915E-5	DEFECT
//    1040 byte //    2064 byte //    2064 byte	WITHOUT_CLASSIFICATION	0.9999751505019265	WITHOUT_CLASSIFICATION	2.4849498073492513E-5	DEFECT
//  262148 byte // ------------ //  333408 byte	WITHOUT_CLASSIFICATION	0.9999559334161107	WITHOUT_CLASSIFICATION	4.406658388943701E-5	DEFECT
// Just print a message, like the previous versions of this class did	WITHOUT_CLASSIFICATION	0.9999937492212375	WITHOUT_CLASSIFICATION	6.25077876247758E-6	DEFECT
// Variables used by setup* methods exclusively	WITHOUT_CLASSIFICATION	0.9999999623571206	WITHOUT_CLASSIFICATION	3.7642879360563787E-8	DEFECT
// currBlockNo++;	WITHOUT_CLASSIFICATION	0.999986914918426	WITHOUT_CLASSIFICATION	1.3085081574098346E-5	DEFECT
// A bad CRC is considered a fatal error.	WITHOUT_CLASSIFICATION	0.9992351556886033	WITHOUT_CLASSIFICATION	7.648443113966119E-4	DEFECT
/* Receive the mapping table */	WITHOUT_CLASSIFICATION	0.9999970494004424	WITHOUT_CLASSIFICATION	2.9505995574752407E-6	DEFECT
/* Now the selectors */	WITHOUT_CLASSIFICATION	0.9999987643188893	WITHOUT_CLASSIFICATION	1.2356811105844794E-6	DEFECT
/* Undo the MTF values for the selectors. */	WITHOUT_CLASSIFICATION	0.9999998763725595	WITHOUT_CLASSIFICATION	1.2362744051335097E-7	DEFECT
// nearly all times v is zero, 4 in most other cases	WITHOUT_CLASSIFICATION	0.9999948932470067	WITHOUT_CLASSIFICATION	5.106752993271536E-6	DEFECT
/* Now the coding tables */	WITHOUT_CLASSIFICATION	0.9999942635032195	WITHOUT_CLASSIFICATION	5.736496780472796E-6	DEFECT
// finally create the Huffman tables	WITHOUT_CLASSIFICATION	0.999999721930246	WITHOUT_CLASSIFICATION	2.7806975396574774E-7	DEFECT
// end of file // '1' // ')' // 'Y' // '&' // 'S' // 'Y'	WITHOUT_CLASSIFICATION	0.9999911834997595	WITHOUT_CLASSIFICATION	8.816500240522711E-6	DEFECT
// Inlined: // int zvec = bsR(zn);	WITHOUT_CLASSIFICATION	0.9999968326268616	WITHOUT_CLASSIFICATION	3.167373138406183E-6	DEFECT
// Inlined: // int zvec = bsR(zn);	WITHOUT_CLASSIFICATION	0.9999968326268616	WITHOUT_CLASSIFICATION	3.167373138406183E-6	DEFECT
/*                  This loop is hammered during decompression,                  hence avoid native method call overhead of                  System.arraycopy for very small ranges to copy.                */	WITHOUT_CLASSIFICATION	0.9999993341724218	WITHOUT_CLASSIFICATION	6.658275781079626E-7	DEFECT
/* not a char and not EOF */	WITHOUT_CLASSIFICATION	0.9999983431587081	WITHOUT_CLASSIFICATION	1.656841291953944E-6	DEFECT
// (with blockSize 900k) //      256 byte	WITHOUT_CLASSIFICATION	0.9999352371154341	WITHOUT_CLASSIFICATION	6.476288456587807E-5	DEFECT
//     1024 byte	WITHOUT_CLASSIFICATION	0.9999934182362674	WITHOUT_CLASSIFICATION	6.581763732581395E-6	DEFECT
// No need to keep track of Bcc'd addresses	WITHOUT_CLASSIFICATION	0.9999989547330109	WITHOUT_CLASSIFICATION	1.0452669890673685E-6	DEFECT
// Blindly trust the user doesn't set any invalid headers	WITHOUT_CLASSIFICATION	0.999994182256532	WITHOUT_CLASSIFICATION	5.817743467960625E-6	DEFECT
// RFC 822 s4.1: "Reply-To:" header is optional	WITHOUT_CLASSIFICATION	0.9998239310573833	WITHOUT_CLASSIFICATION	1.7606894261674988E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999996958536274	WITHOUT_CLASSIFICATION	3.0414637271301487E-7	DEFECT
// Mac does \n\r, but that's tough to distinguish from Windows \r\n\r\n. // Don't tackle that problem right now.	WITHOUT_CLASSIFICATION	0.9992559736897833	WITHOUT_CLASSIFICATION	7.440263102168407E-4	DEFECT
// support "address (name)"	WITHOUT_CLASSIFICATION	0.999997561893926	WITHOUT_CLASSIFICATION	2.438106074083591E-6	DEFECT
// support "(name) address"	WITHOUT_CLASSIFICATION	0.999998313493896	WITHOUT_CLASSIFICATION	1.6865061039617437E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999209490427	WITHOUT_CLASSIFICATION	7.905095730336347E-8	DEFECT
//      256 byte //    18002 byte //    18002 byte	WITHOUT_CLASSIFICATION	0.9999614373373165	WITHOUT_CLASSIFICATION	3.856266268352353E-5	DEFECT
//     6192 byte //     6192 byte //     6192 byte //       24 byte	WITHOUT_CLASSIFICATION	0.9999739115937334	WITHOUT_CLASSIFICATION	2.6088406266548718E-5	DEFECT
//     1028 byte //      512 byte //     3096 byte //        6 byte //--------------- //    60798 byte	WITHOUT_CLASSIFICATION	0.9999135863576051	WITHOUT_CLASSIFICATION	8.64136423949208E-5	DEFECT
//  3600000 byte //   900000 byte //--------------- //  4560782 byte //===============	WITHOUT_CLASSIFICATION	0.9999445166623117	WITHOUT_CLASSIFICATION	5.548333768828721E-5	DEFECT
// RFC 822 s4.1: "From:" header must be sent // We rely on error checking by the MTA	WITHOUT_CLASSIFICATION	0.9995595960109176	WITHOUT_CLASSIFICATION	4.4040398908247073E-4	DEFECT
// RFC 822 s4.1: //   "Header fields are NOT required to occur in any particular order, //    except that the message body MUST occur AFTER the headers" // (the same section specifies a reccommended order, which we ignore)	WITHOUT_CLASSIFICATION	0.9999761565122136	WITHOUT_CLASSIFICATION	2.3843487786318057E-5	DEFECT
// Make a limited attempt to extract a sanitized email address // Prefer text in <brackets>, ignore anything in (parentheses)	WITHOUT_CLASSIFICATION	0.9999472784404035	WITHOUT_CLASSIFICATION	5.272155959632866E-5	DEFECT
// * * * * * Raw protocol methods below here * * * * *	WITHOUT_CLASSIFICATION	0.999991335215959	WITHOUT_CLASSIFICATION	8.664784041080773E-6	DEFECT
// make sure dot is on new line	WITHOUT_CLASSIFICATION	0.9999345066411682	WITHOUT_CLASSIFICATION	6.549335883171123E-5	DEFECT
// raw supports <CRLF>.<CRLF>	WITHOUT_CLASSIFICATION	0.9999994865447204	WITHOUT_CLASSIFICATION	5.134552795464343E-7	DEFECT
// Check that the response is one of the valid codes	WITHOUT_CLASSIFICATION	0.9999990530599298	WITHOUT_CLASSIFICATION	9.469400701238639E-7	DEFECT
// deprecated, but email is byte-oriented	WITHOUT_CLASSIFICATION	0.9999833271269574	WITHOUT_CLASSIFICATION	1.6672873042666016E-5	DEFECT
// ensure always \r\n	WITHOUT_CLASSIFICATION	0.9999981772133317	WITHOUT_CLASSIFICATION	1.8227866682410324E-6	DEFECT
// Mac does \n\r, but that's tough to distinguish from Windows \r\n\r\n. // Don't tackle that problem right now.	WITHOUT_CLASSIFICATION	0.9992559736897833	WITHOUT_CLASSIFICATION	7.440263102168407E-4	DEFECT
// add extra dot	WITHOUT_CLASSIFICATION	0.9999974009896284	WITHOUT_CLASSIFICATION	2.599010371557539E-6	DEFECT
// add extra dot	WITHOUT_CLASSIFICATION	0.9999974009896284	WITHOUT_CLASSIFICATION	2.599010371557539E-6	DEFECT
// ensure always \r\n	WITHOUT_CLASSIFICATION	0.9999981772133317	WITHOUT_CLASSIFICATION	1.8227866682410324E-6	DEFECT
// UNDONE	WITHOUT_CLASSIFICATION	0.9999928356776997	WITHOUT_CLASSIFICATION	7.164322300281948E-6	DEFECT
// create a TarEntry for the LongLink, the contents // of which are the entry's name	WITHOUT_CLASSIFICATION	0.9999999609040422	WITHOUT_CLASSIFICATION	3.90959577215604E-8	DEFECT
// Strip off drive letters! // REVIEW Would a better check be "(File.separator == '\')"?	WITHOUT_CLASSIFICATION	0.9999999790002274	WITHOUT_CLASSIFICATION	2.0999772561071977E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999209490427	WITHOUT_CLASSIFICATION	7.905095730336347E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999209490427	WITHOUT_CLASSIFICATION	7.905095730336347E-8	DEFECT
// No absolute pathnames // Windows (and Posix?) paths can start with "\\NetworkDrive\", // so we loop on starting /'s.	WITHOUT_CLASSIFICATION	0.9999989887697446	WITHOUT_CLASSIFICATION	1.011230255405985E-6	DEFECT
/* start of the central directory  */	WITHOUT_CLASSIFICATION	0.9999997998514382	WITHOUT_CLASSIFICATION	2.0014856180925977E-7	DEFECT
// REVIEW // This is horribly inefficient, but it ensures that we // properly skip over bytes via the TarBuffer... //	WITHOUT_CLASSIFICATION	0.9995134264947517	WITHOUT_CLASSIFICATION	4.865735052481994E-4	DEFECT
// read in the name	WITHOUT_CLASSIFICATION	0.9999993282698645	WITHOUT_CLASSIFICATION	6.717301355086962E-7	DEFECT
// remove trailing null terminator	WITHOUT_CLASSIFICATION	0.9999971245518544	WITHOUT_CLASSIFICATION	2.8754481455742825E-6	DEFECT
// Unexpected EOF!	WITHOUT_CLASSIFICATION	0.9999974822701208	WITHOUT_CLASSIFICATION	2.5177298792267314E-6	DEFECT
// ---------------------------------------------------------- // somewhat arbitrary choices that are quite common for shared // installations // -----------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999996684591095	WITHOUT_CLASSIFICATION	3.31540890508399E-7	DEFECT
/* method is STORED and we used RandomAccessFile */	WITHOUT_CLASSIFICATION	0.9999999035868931	WITHOUT_CLASSIFICATION	9.641310696214871E-8	DEFECT
// If random access output, write the local file header containing // the correct CRC and compressed/uncompressed sizes	WITHOUT_CLASSIFICATION	0.9999989268683214	WITHOUT_CLASSIFICATION	1.0731316786891726E-6	DEFECT
// not specified	WITHOUT_CLASSIFICATION	0.9999994126524797	WITHOUT_CLASSIFICATION	5.873475202304536E-7	DEFECT
// not specified	WITHOUT_CLASSIFICATION	0.9999994126524797	WITHOUT_CLASSIFICATION	5.873475202304536E-7	DEFECT
// Size/CRC not required if RandomAccessFile is used	WITHOUT_CLASSIFICATION	0.999983572339494	WITHOUT_CLASSIFICATION	1.642766050605339E-5	DEFECT
/*     * Various ZIP constants     */	WITHOUT_CLASSIFICATION	0.999999594300672	WITHOUT_CLASSIFICATION	4.056993280044084E-7	DEFECT
//store method in local variable to prevent multiple method calls	WITHOUT_CLASSIFICATION	0.9999998994353886	WITHOUT_CLASSIFICATION	1.0056461135078471E-7	DEFECT
// bit3 set to signal, we use a data descriptor	WITHOUT_CLASSIFICATION	0.9999992723755873	WITHOUT_CLASSIFICATION	7.276244126838174E-7	DEFECT
// bit3 set to signal, we use a data descriptor	WITHOUT_CLASSIFICATION	0.9999992723755873	WITHOUT_CLASSIFICATION	7.276244126838174E-7	DEFECT
// compression method	WITHOUT_CLASSIFICATION	0.9999997466811573	WITHOUT_CLASSIFICATION	2.533188426669965E-7	DEFECT
// compression method	WITHOUT_CLASSIFICATION	0.9999997466811573	WITHOUT_CLASSIFICATION	2.533188426669965E-7	DEFECT
// last mod. time and date	WITHOUT_CLASSIFICATION	0.9999986102017694	WITHOUT_CLASSIFICATION	1.3897982305683576E-6	DEFECT
// file name length	WITHOUT_CLASSIFICATION	0.9999994463815062	WITHOUT_CLASSIFICATION	5.536184938191112E-7	DEFECT
// extra field length	WITHOUT_CLASSIFICATION	0.9999986068660692	WITHOUT_CLASSIFICATION	1.3931339307166344E-6	DEFECT
// file name	WITHOUT_CLASSIFICATION	0.9999996107174346	WITHOUT_CLASSIFICATION	3.8928256546184645E-7	DEFECT
// extra field	WITHOUT_CLASSIFICATION	0.9999973553127596	WITHOUT_CLASSIFICATION	2.644687240436709E-6	DEFECT
// version made by	WITHOUT_CLASSIFICATION	0.9999986373866582	WITHOUT_CLASSIFICATION	1.3626133418343341E-6	DEFECT
// version needed to extract // general purpose bit flag	WITHOUT_CLASSIFICATION	0.9999986402276021	WITHOUT_CLASSIFICATION	1.359772397943029E-6	DEFECT
// last mod. time and date	WITHOUT_CLASSIFICATION	0.9999986102017694	WITHOUT_CLASSIFICATION	1.3897982305683576E-6	DEFECT
// requires version 2 as we are going to store length info // in the data descriptor	WITHOUT_CLASSIFICATION	0.9999620276612692	WITHOUT_CLASSIFICATION	3.797233873084208E-5	DEFECT
// file name length	WITHOUT_CLASSIFICATION	0.9999994463815062	WITHOUT_CLASSIFICATION	5.536184938191112E-7	DEFECT
// CRC // compressed length // uncompressed length	WITHOUT_CLASSIFICATION	0.999999275921798	WITHOUT_CLASSIFICATION	7.240782019975017E-7	DEFECT
// extra field length	WITHOUT_CLASSIFICATION	0.9999986068660692	WITHOUT_CLASSIFICATION	1.3931339307166344E-6	DEFECT
// file name	WITHOUT_CLASSIFICATION	0.9999996107174346	WITHOUT_CLASSIFICATION	3.8928256546184645E-7	DEFECT
// extra field	WITHOUT_CLASSIFICATION	0.9999973553127596	WITHOUT_CLASSIFICATION	2.644687240436709E-6	DEFECT
// file comment length	WITHOUT_CLASSIFICATION	0.9999972870339836	WITHOUT_CLASSIFICATION	2.712966016500591E-6	DEFECT
// disk number start	WITHOUT_CLASSIFICATION	0.9999977512739704	WITHOUT_CLASSIFICATION	2.2487260296192087E-6	DEFECT
// internal file attributes	WITHOUT_CLASSIFICATION	0.9999999876814012	WITHOUT_CLASSIFICATION	1.2318598831205096E-8	DEFECT
// external file attributes	WITHOUT_CLASSIFICATION	0.9999999361073697	WITHOUT_CLASSIFICATION	6.389263027111957E-8	DEFECT
// relative offset of LFH	WITHOUT_CLASSIFICATION	0.9999999681654648	WITHOUT_CLASSIFICATION	3.183453517495224E-8	DEFECT
// disk numbers	WITHOUT_CLASSIFICATION	0.9999984142653034	WITHOUT_CLASSIFICATION	1.585734696602417E-6	DEFECT
// number of entries	WITHOUT_CLASSIFICATION	0.9999996958276024	WITHOUT_CLASSIFICATION	3.041723975730918E-7	DEFECT
// length and location of CD	WITHOUT_CLASSIFICATION	0.99999692713167	WITHOUT_CLASSIFICATION	3.0728683300647683E-6	DEFECT
// ZIP file comment	WITHOUT_CLASSIFICATION	0.9999880416038611	WITHOUT_CLASSIFICATION	1.1958396138828274E-5	DEFECT
// array not exhausted	WITHOUT_CLASSIFICATION	0.9999995420985623	WITHOUT_CLASSIFICATION	4.5790143774481303E-7	DEFECT
/* version made by                 */	WITHOUT_CLASSIFICATION	0.9999965665257832	WITHOUT_CLASSIFICATION	3.433474216895899E-6	DEFECT
/* version needed to extract       */	WITHOUT_CLASSIFICATION	0.9999976086849502	WITHOUT_CLASSIFICATION	2.3913150497078825E-6	DEFECT
/* general purpose bit flag        */	WITHOUT_CLASSIFICATION	0.9999993847161477	WITHOUT_CLASSIFICATION	6.152838523392472E-7	DEFECT
/* compression method              */	WITHOUT_CLASSIFICATION	0.9999994678921275	WITHOUT_CLASSIFICATION	5.321078725228803E-7	DEFECT
/* last mod file time              */	WITHOUT_CLASSIFICATION	0.9999989587903857	WITHOUT_CLASSIFICATION	1.0412096142441414E-6	DEFECT
/* last mod file date              */	WITHOUT_CLASSIFICATION	0.9999981987010587	WITHOUT_CLASSIFICATION	1.801298941312356E-6	DEFECT
/* crc-32                          */	WITHOUT_CLASSIFICATION	0.9999826928998058	WITHOUT_CLASSIFICATION	1.7307100194201726E-5	DEFECT
/* uncompressed size               */	WITHOUT_CLASSIFICATION	0.9999979108966633	WITHOUT_CLASSIFICATION	2.0891033366351822E-6	DEFECT
/* filename length                 */	WITHOUT_CLASSIFICATION	0.9999972711524217	WITHOUT_CLASSIFICATION	2.7288475782731093E-6	DEFECT
/* extra field length              */	WITHOUT_CLASSIFICATION	0.9999925003765483	WITHOUT_CLASSIFICATION	7.49962345162787E-6	DEFECT
/* file comment length             */	WITHOUT_CLASSIFICATION	0.9999816806312443	WITHOUT_CLASSIFICATION	1.8319368755704715E-5	DEFECT
/* internal file attributes        */	WITHOUT_CLASSIFICATION	0.999999744304817	WITHOUT_CLASSIFICATION	2.556951830302863E-7	DEFECT
/* external file attributes        */	WITHOUT_CLASSIFICATION	0.9999993893138922	WITHOUT_CLASSIFICATION	6.106861078245953E-7	DEFECT
/* relative offset of local header */	WITHOUT_CLASSIFICATION	0.9999994087959211	WITHOUT_CLASSIFICATION	5.912040788646611E-7	DEFECT
// disk number	WITHOUT_CLASSIFICATION	0.9999982813390986	WITHOUT_CLASSIFICATION	1.718660901362661E-6	DEFECT
// LFH offset,	WITHOUT_CLASSIFICATION	0.999998492321973	WITHOUT_CLASSIFICATION	1.5076780270076525E-6	DEFECT
// data offset will be filled later	WITHOUT_CLASSIFICATION	0.999994776419485	WITHOUT_CLASSIFICATION	5.2235805149657E-6	DEFECT
/* end of central dir signature    */	WITHOUT_CLASSIFICATION	0.9999979014834735	WITHOUT_CLASSIFICATION	2.0985165265101967E-6	DEFECT
/* number of this disk             */	WITHOUT_CLASSIFICATION	0.9999793759076578	WITHOUT_CLASSIFICATION	2.0624092342230868E-5	DEFECT
/* number of the disk with the     */	WITHOUT_CLASSIFICATION	0.99999693588572	WITHOUT_CLASSIFICATION	3.064114279993368E-6	DEFECT
/* start of the central directory  */	WITHOUT_CLASSIFICATION	0.9999997998514382	WITHOUT_CLASSIFICATION	2.0014856180925977E-7	DEFECT
/* the central dir on this disk    */	WITHOUT_CLASSIFICATION	0.999980937804732	WITHOUT_CLASSIFICATION	1.9062195268004546E-5	DEFECT
/* the central dir                 */	WITHOUT_CLASSIFICATION	0.9999983928159	WITHOUT_CLASSIFICATION	1.6071841000604961E-6	DEFECT
/* size of the central directory   */	WITHOUT_CLASSIFICATION	0.9999994477025352	WITHOUT_CLASSIFICATION	5.522974648234754E-7	DEFECT
/* offset of start of central      */	WITHOUT_CLASSIFICATION	0.9999999426168787	WITHOUT_CLASSIFICATION	5.738312110417622E-8	DEFECT
// empty	WITHOUT_CLASSIFICATION	0.9999962941923679	WITHOUT_CLASSIFICATION	3.7058076320617287E-6	DEFECT
// wait 2 second extras // the test failed with 100 ms of margin on cvs.apache.org on August 1st, 2003	WITHOUT_CLASSIFICATION	0.9996601535061836	WITHOUT_CLASSIFICATION	3.3984649381628554E-4	DEFECT
// dummy1 --> dummy2 --> dummy3 // (which holds a glob mapper from "*.java" to "*.class"	WITHOUT_CLASSIFICATION	0.9999567305701615	WITHOUT_CLASSIFICATION	4.326942983832723E-5	DEFECT
// // *****  initialize test environment (called "bed")  ***** //	WITHOUT_CLASSIFICATION	0.9999999727449104	WITHOUT_CLASSIFICATION	2.7255089599666613E-8	DEFECT
// THIS WILL FAIL. //compareBytes("abc", "utf-16");	WITHOUT_CLASSIFICATION	0.999987470263125	WITHOUT_CLASSIFICATION	1.2529736874985067E-5	DEFECT
//catch script/ant mismatch with a meaningful message //we could ignore it, but there are likely to be other //version problems, so we stamp down on the configuration now	WITHOUT_CLASSIFICATION	0.9999965509045292	WITHOUT_CLASSIFICATION	3.449095470642872E-6	DEFECT
//if there were no main targets, we list all subtargets //as it means nothing has a description	WITHOUT_CLASSIFICATION	0.9999998453681166	WITHOUT_CLASSIFICATION	1.5463188341848203E-7	DEFECT
// For NetWare, use the boolean=true mode, so we can use delimiter // information to make a better decision later.	WITHOUT_CLASSIFICATION	0.9999999972392549	WITHOUT_CLASSIFICATION	2.760744993483994E-9	DEFECT
// we are on NetWare, tokenizing is handled a little differently, // due to the fact that NetWare has multiple-character volume names.	WITHOUT_CLASSIFICATION	0.9999996621834657	WITHOUT_CLASSIFICATION	3.378165342466926E-7	DEFECT
// The readers return -1 if they end. So simply read the "prepend" // after that the "content" and at the end the "append" file.	WITHOUT_CLASSIFICATION	0.9999999774847403	WITHOUT_CLASSIFICATION	2.2515259619423746E-8	DEFECT
// NB: this makes use of Project#setProperty rather than Project#setNewProperty //     due to backwards compatiblity reasons	WITHOUT_CLASSIFICATION	0.9999252650315671	WITHOUT_CLASSIFICATION	7.473496843287172E-5	DEFECT
// If we've been successful on an update, delete the // temporary file	WITHOUT_CLASSIFICATION	0.9999999997084971	WITHOUT_CLASSIFICATION	2.9150304151523097E-10	DEFECT
// CheckStyle - magic numbers // checking for "X:\ 0=dquote,1=letter,2=:,3=\	WITHOUT_CLASSIFICATION	0.9999998621834644	WITHOUT_CLASSIFICATION	1.378165356930421E-7	DEFECT
/* version needed to extract       */	WITHOUT_CLASSIFICATION	0.9999976086849502	WITHOUT_CLASSIFICATION	2.3913150497078825E-6	DEFECT
/* general purpose bit flag        */	WITHOUT_CLASSIFICATION	0.9999993847161477	WITHOUT_CLASSIFICATION	6.152838523392472E-7	DEFECT
/* compression method              */	WITHOUT_CLASSIFICATION	0.9999994678921275	WITHOUT_CLASSIFICATION	5.321078725228803E-7	DEFECT
/* last mod file time              */	WITHOUT_CLASSIFICATION	0.9999989587903857	WITHOUT_CLASSIFICATION	1.0412096142441414E-6	DEFECT
/* last mod file date              */	WITHOUT_CLASSIFICATION	0.9999981987010587	WITHOUT_CLASSIFICATION	1.801298941312356E-6	DEFECT
/* crc-32                          */	WITHOUT_CLASSIFICATION	0.9999826928998058	WITHOUT_CLASSIFICATION	1.7307100194201726E-5	DEFECT
/* compressed size                 */	WITHOUT_CLASSIFICATION	0.999997934543652	WITHOUT_CLASSIFICATION	2.06545634799738E-6	DEFECT
/* uncompressed size               */	WITHOUT_CLASSIFICATION	0.9999979108966633	WITHOUT_CLASSIFICATION	2.0891033366351822E-6	DEFECT
/* end of central dir signature    */	WITHOUT_CLASSIFICATION	0.9999979014834735	WITHOUT_CLASSIFICATION	2.0985165265101967E-6	DEFECT
/* number of this disk             */	WITHOUT_CLASSIFICATION	0.9999793759076578	WITHOUT_CLASSIFICATION	2.0624092342230868E-5	DEFECT
/* number of the disk with the     */	WITHOUT_CLASSIFICATION	0.99999693588572	WITHOUT_CLASSIFICATION	3.064114279993368E-6	DEFECT
/* total number of entries in      */	WITHOUT_CLASSIFICATION	0.9999927129828124	WITHOUT_CLASSIFICATION	7.287017187519347E-6	DEFECT
/* total number of entries in      */	WITHOUT_CLASSIFICATION	0.9999927129828124	WITHOUT_CLASSIFICATION	7.287017187519347E-6	DEFECT
/* the central dir on this disk    */	WITHOUT_CLASSIFICATION	0.999980937804732	WITHOUT_CLASSIFICATION	1.9062195268004546E-5	DEFECT
/* the central dir                 */	WITHOUT_CLASSIFICATION	0.9999983928159	WITHOUT_CLASSIFICATION	1.6071841000604961E-6	DEFECT
/* size of the central directory   */	WITHOUT_CLASSIFICATION	0.9999994477025352	WITHOUT_CLASSIFICATION	5.522974648234754E-7	DEFECT
/* the starting disk number        */	WITHOUT_CLASSIFICATION	0.9999980248747481	WITHOUT_CLASSIFICATION	1.975125251924159E-6	DEFECT
/* zipfile comment length          */	WITHOUT_CLASSIFICATION	0.9999895278381398	WITHOUT_CLASSIFICATION	1.0472161860108294E-5	DEFECT
/* local file header signature     */	WITHOUT_CLASSIFICATION	0.9999870155982512	WITHOUT_CLASSIFICATION	1.298440174879241E-5	DEFECT
/*     * Converts DOS time to Java time (number of milliseconds since epoch).     */	WITHOUT_CLASSIFICATION	0.9999991779059751	WITHOUT_CLASSIFICATION	8.220940247760287E-7	DEFECT
// CRC will be added later	WITHOUT_CLASSIFICATION	0.9999970180925484	WITHOUT_CLASSIFICATION	2.981907451622114E-6	DEFECT
/*<ZipExtraField>*/	WITHOUT_CLASSIFICATION	0.999978912147855	WITHOUT_CLASSIFICATION	2.108785214499305E-5	DEFECT
// initializes extra data to an empty byte array	WITHOUT_CLASSIFICATION	0.9999997524576495	WITHOUT_CLASSIFICATION	2.4754235049101283E-7	DEFECT
// MS-DOS read-only attribute	WITHOUT_CLASSIFICATION	0.999995300573942	WITHOUT_CLASSIFICATION	4.699426057907096E-6	DEFECT
// MS-DOS directory flag	WITHOUT_CLASSIFICATION	0.9999368844995862	WITHOUT_CLASSIFICATION	6.31155004138224E-5	DEFECT
// A "location" attribute for a node within a // Path object.	WITHOUT_CLASSIFICATION	0.9999994757442381	WITHOUT_CLASSIFICATION	5.242557619340791E-7	DEFECT
// Just use the same directory as the file itself. // This directory will exist	WITHOUT_CLASSIFICATION	0.9999995620884421	WITHOUT_CLASSIFICATION	4.379115578746431E-7	DEFECT
// JarIndex is sorting the directories by ascending order. // it has no value but cosmetic since it will be read into a // hashtable by the classloader, but we'll do so anyway.	WITHOUT_CLASSIFICATION	0.9999998857434366	WITHOUT_CLASSIFICATION	1.1425656346158775E-7	DEFECT
// // Static //	WITHOUT_CLASSIFICATION	0.999999655160087	WITHOUT_CLASSIFICATION	3.4483991300288146E-7	DEFECT
//we mark the file to be deleted on exit. //the alternative would be to cache the filename and delete //after execution finished, which is much better for long-lived runtimes //though spawning complicates things...	WITHOUT_CLASSIFICATION	0.9995664227067524	WITHOUT_CLASSIFICATION	4.3357729324746015E-4	DEFECT
// Protected first so if any GUI tool offers a default // based on enum #0, it will be right.	WITHOUT_CLASSIFICATION	0.9999998699180257	WITHOUT_CLASSIFICATION	1.3008197425398553E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc // the source file // the destination file // the destination directory	WITHOUT_CLASSIFICATION	0.9999999986330204	WITHOUT_CLASSIFICATION	1.3669797296947786E-9	DEFECT
// add dest dir to classpath so that previously compiled and // untouched classes are on classpath	WITHOUT_CLASSIFICATION	0.9999999827842907	WITHOUT_CLASSIFICATION	1.7215709214562664E-8	DEFECT
// build the command line from what we got the format is // cleartool checkout [options...] [viewpath ...] // as specified in the CLEARTOOL.EXE help	WITHOUT_CLASSIFICATION	0.9999998855610112	WITHOUT_CLASSIFICATION	1.1443898884289811E-7	DEFECT
// build the command line from what we got. the format is // cleartool mkelem [options...] [viewpath ...] // as specified in the CLEARTOOL.EXE help	WITHOUT_CLASSIFICATION	0.9999991216788422	WITHOUT_CLASSIFICATION	8.78321157892783E-7	DEFECT
// build the command line from what we got. the format is // cleartool mklabel [options...] [viewpath ...] // as specified in the CLEARTOOL help	WITHOUT_CLASSIFICATION	0.9999998267881315	WITHOUT_CLASSIFICATION	1.732118685271235E-7	DEFECT
// push the current iterator onto the stack and then // iterate through this directory.	WITHOUT_CLASSIFICATION	0.9999828233674917	WITHOUT_CLASSIFICATION	1.7176632508256843E-5	DEFECT
// List of EJBs found in XML // One item within the Map // Is doc iAS or EJB descriptor	WITHOUT_CLASSIFICATION	0.9999999076693749	WITHOUT_CLASSIFICATION	9.233062511255433E-8	DEFECT
// baseNameTerminator not found: the descriptor use the // JOnAS naming convention, ie [Foo.xml,jonas-Foo.xml] and // not [Foo<baseNameTerminator>-ejb-jar.xml, // Foo<baseNameTerminator>-jonas-ejb-jar.xml].	WITHOUT_CLASSIFICATION	0.9999980101562431	WITHOUT_CLASSIFICATION	1.9898437567930218E-6	DEFECT
// Loop through the files seeing if any has been touched // more recently than the destination jar.	WITHOUT_CLASSIFICATION	0.9999999441509125	WITHOUT_CLASSIFICATION	5.5849087401343603E-8	DEFECT
// read in the descriptor. Under weblogic, the descriptor is a weblogic // specific subclass which has references to the implementation classes. // These classes must, therefore, be in the classpath when the deployment // descriptor is loaded from the .ser file	WITHOUT_CLASSIFICATION	0.9999999963108284	WITHOUT_CLASSIFICATION	3.68917164258554E-9	DEFECT
//WARNING: We trim the values of all the attributes because //Some extension declarations are badly defined (ie have spaces //after version or vendor)	WITHOUT_CLASSIFICATION	0.9999360816700352	WITHOUT_CLASSIFICATION	6.391832996485021E-5	DEFECT
// 2003-02-21 new replace algorithm by tbee (tbee@tbee.org) // because it wasn't able to replace something like "@aaa;@bbb;"	WITHOUT_CLASSIFICATION	0.9999814174524331	WITHOUT_CLASSIFICATION	1.858254756699817E-5	DEFECT
// convert backslashes to slashes, otherwise jjtree will // put this as comments and this seems to confuse javacc	WITHOUT_CLASSIFICATION	0.9999990756607045	WITHOUT_CLASSIFICATION	9.24339295499508E-7	DEFECT
//although this code appears to duplicate that of ClasspathUtils.newInstance, //we cannot use that because this formatter may run in a forked process, //without that class.	WITHOUT_CLASSIFICATION	0.9973582381262629	WITHOUT_CLASSIFICATION	0.0026417618737370834	DEFECT
// build the command line from what we got the format is // ss History elements [-H] [-L] [-N] [-O] [-V] [-Y] [-#] [-?] // as specified in the SS.EXE help	WITHOUT_CLASSIFICATION	0.9999998950167998	WITHOUT_CLASSIFICATION	1.049832002292329E-7	DEFECT
// this method has severe consequences on performance. We cannot rely // on the super.hashCode() method since super.getName() always return // the empty string in the current implemention (there's no setter) // so it is basically draining the performance of a hashmap lookup	WITHOUT_CLASSIFICATION	0.9999973817975105	WITHOUT_CLASSIFICATION	2.6182024895691623E-6	DEFECT
// If this TransformOperation has DrawOperation children // then Rotate the first child and return.	WITHOUT_CLASSIFICATION	0.9999999852139462	WITHOUT_CLASSIFICATION	1.4786053911152656E-8	DEFECT
// converted from sun internal classes to // new Base64Converter // utility class extracted from Get task	WITHOUT_CLASSIFICATION	0.9999779140927315	WITHOUT_CLASSIFICATION	2.208590726845488E-5	DEFECT
// // Cannot return a null source, because we have to call // setEntityResolver (see setEntityResolver javadoc comment) //	WITHOUT_CLASSIFICATION	0.9999990859402825	WITHOUT_CLASSIFICATION	9.140597173935829E-7	DEFECT
// CRC // compressed length // uncompressed length	WITHOUT_CLASSIFICATION	0.999999275921798	WITHOUT_CLASSIFICATION	7.240782019975017E-7	DEFECT
// No further methods necessary. This is just an amalgamation of two other // interfaces.	WITHOUT_CLASSIFICATION	0.9999999820293684	WITHOUT_CLASSIFICATION	1.797063165656099E-8	DEFECT
// // -----  The "Singleton"  ----- //	WITHOUT_CLASSIFICATION	0.9999966020247734	WITHOUT_CLASSIFICATION	3.3979752267817975E-6	DEFECT
// If we had child elements, we need to indent before we close // the element, otherwise we're on the same line and don't need // to indent	WITHOUT_CLASSIFICATION	0.9999996102997029	WITHOUT_CLASSIFICATION	3.897002971962194E-7	DEFECT
// The key is in the dictionary but cannot be retrieved // This is usually due references that refer to tasks // that have not been taskdefed in the current run. // Ignore	WITHOUT_CLASSIFICATION	0.999999099898569	WITHOUT_CLASSIFICATION	9.001014308132779E-7	DEFECT
// write magic: done by caller who created this stream //this.out.write('B'); //this.out.write('Z');	WITHOUT_CLASSIFICATION	0.9998149660236362	WITHOUT_CLASSIFICATION	1.8503397636387525E-4	DEFECT
// CRC // Mode // SizDev // UID // GID	WITHOUT_CLASSIFICATION	0.9999982345356339	WITHOUT_CLASSIFICATION	1.7654643662251337E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999994848348538	WITHOUT_CLASSIFICATION	5.151651463210354E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999994848348538	WITHOUT_CLASSIFICATION	5.151651463210354E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999994848348538	WITHOUT_CLASSIFICATION	5.151651463210354E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999994848348538	WITHOUT_CLASSIFICATION	5.151651463210354E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999994848348538	WITHOUT_CLASSIFICATION	5.151651463210354E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999994848348538	WITHOUT_CLASSIFICATION	5.151651463210354E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999994848348538	WITHOUT_CLASSIFICATION	5.151651463210354E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999994848348538	WITHOUT_CLASSIFICATION	5.151651463210354E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999992965831613	WITHOUT_CLASSIFICATION	7.034168387789499E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999992965831613	WITHOUT_CLASSIFICATION	7.034168387789499E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999992965831613	WITHOUT_CLASSIFICATION	7.034168387789499E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999992965831613	WITHOUT_CLASSIFICATION	7.034168387789499E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999992965831613	WITHOUT_CLASSIFICATION	7.034168387789499E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999992965831613	WITHOUT_CLASSIFICATION	7.034168387789499E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999994848348538	WITHOUT_CLASSIFICATION	5.151651463210354E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999994848348538	WITHOUT_CLASSIFICATION	5.151651463210354E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999994848348538	WITHOUT_CLASSIFICATION	5.151651463210354E-7	DEFECT
// ignored	WITHOUT_CLASSIFICATION	0.999999579228022	WITHOUT_CLASSIFICATION	4.207719780032652E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999994848348538	WITHOUT_CLASSIFICATION	5.151651463210354E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999994848348538	WITHOUT_CLASSIFICATION	5.151651463210354E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999994848348538	WITHOUT_CLASSIFICATION	5.151651463210354E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999994848348538	WITHOUT_CLASSIFICATION	5.151651463210354E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999994848348538	WITHOUT_CLASSIFICATION	5.151651463210354E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999994848348538	WITHOUT_CLASSIFICATION	5.151651463210354E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999994848348538	WITHOUT_CLASSIFICATION	5.151651463210354E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999994848348538	WITHOUT_CLASSIFICATION	5.151651463210354E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999994848348538	WITHOUT_CLASSIFICATION	5.151651463210354E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999994848348538	WITHOUT_CLASSIFICATION	5.151651463210354E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999994848348538	WITHOUT_CLASSIFICATION	5.151651463210354E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999994848348538	WITHOUT_CLASSIFICATION	5.151651463210354E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999994848348538	WITHOUT_CLASSIFICATION	5.151651463210354E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999994848348538	WITHOUT_CLASSIFICATION	5.151651463210354E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999994848348538	WITHOUT_CLASSIFICATION	5.151651463210354E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999994848348538	WITHOUT_CLASSIFICATION	5.151651463210354E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999994848348538	WITHOUT_CLASSIFICATION	5.151651463210354E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999994848348538	WITHOUT_CLASSIFICATION	5.151651463210354E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999994848348538	WITHOUT_CLASSIFICATION	5.151651463210354E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999994848348538	WITHOUT_CLASSIFICATION	5.151651463210354E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999994848348538	WITHOUT_CLASSIFICATION	5.151651463210354E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999994848348538	WITHOUT_CLASSIFICATION	5.151651463210354E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999994848348538	WITHOUT_CLASSIFICATION	5.151651463210354E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999994848348538	WITHOUT_CLASSIFICATION	5.151651463210354E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999994848348538	WITHOUT_CLASSIFICATION	5.151651463210354E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999994848348538	WITHOUT_CLASSIFICATION	5.151651463210354E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999994848348538	WITHOUT_CLASSIFICATION	5.151651463210354E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999994848348538	WITHOUT_CLASSIFICATION	5.151651463210354E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999994848348538	WITHOUT_CLASSIFICATION	5.151651463210354E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999994848348538	WITHOUT_CLASSIFICATION	5.151651463210354E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999994848348538	WITHOUT_CLASSIFICATION	5.151651463210354E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999994848348538	WITHOUT_CLASSIFICATION	5.151651463210354E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999994848348538	WITHOUT_CLASSIFICATION	5.151651463210354E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999994848348538	WITHOUT_CLASSIFICATION	5.151651463210354E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999994848348538	WITHOUT_CLASSIFICATION	5.151651463210354E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999994848348538	WITHOUT_CLASSIFICATION	5.151651463210354E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999994848348538	WITHOUT_CLASSIFICATION	5.151651463210354E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999994848348538	WITHOUT_CLASSIFICATION	5.151651463210354E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999994848348538	WITHOUT_CLASSIFICATION	5.151651463210354E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999994848348538	WITHOUT_CLASSIFICATION	5.151651463210354E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999994848348538	WITHOUT_CLASSIFICATION	5.151651463210354E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999994848348538	WITHOUT_CLASSIFICATION	5.151651463210354E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999994848348538	WITHOUT_CLASSIFICATION	5.151651463210354E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999994848348538	WITHOUT_CLASSIFICATION	5.151651463210354E-7	DEFECT
// do nothing	WITHOUT_CLASSIFICATION	0.9999948044565379	WITHOUT_CLASSIFICATION	5.195543462154547E-6	DEFECT
// do nothing	WITHOUT_CLASSIFICATION	0.9999948044565379	WITHOUT_CLASSIFICATION	5.195543462154547E-6	DEFECT
// do nothing	WITHOUT_CLASSIFICATION	0.9999948044565379	WITHOUT_CLASSIFICATION	5.195543462154547E-6	DEFECT
// selectors are implicitly ANDed in DirectoryScanner.  To // revert their logic we wrap them into a <none> selector // instead.	WITHOUT_CLASSIFICATION	0.9999999997833797	WITHOUT_CLASSIFICATION	2.1662017816567992E-10	DEFECT
// now wait until the spawned process is finished	WITHOUT_CLASSIFICATION	0.9999985882656637	WITHOUT_CLASSIFICATION	1.4117343363563972E-6	DEFECT
// file doesn't exist -> property 'test' == null	WITHOUT_CLASSIFICATION	0.9999962905717826	WITHOUT_CLASSIFICATION	3.70942821727142E-6	DEFECT
// we don't expect to find this	WITHOUT_CLASSIFICATION	0.9998985931094204	WITHOUT_CLASSIFICATION	1.0140689057946324E-4	DEFECT
// we don't expect to find this	WITHOUT_CLASSIFICATION	0.9998985931094204	WITHOUT_CLASSIFICATION	1.0140689057946324E-4	DEFECT
// ignore expected	WITHOUT_CLASSIFICATION	0.9999997657669312	WITHOUT_CLASSIFICATION	2.3423306881917505E-7	DEFECT
// keep track of what operating systems are supported here.	WITHOUT_CLASSIFICATION	0.9999942125510634	WITHOUT_CLASSIFICATION	5.787448936690668E-6	DEFECT
// if we followed the symlink we just made we should // bypass the excludes.	WITHOUT_CLASSIFICATION	0.9999998445586878	WITHOUT_CLASSIFICATION	1.5544131215596096E-7	DEFECT
// when the test is started by the build.xml of ant // if the property tests.and.ant.share.classloader is not set in the build.xml // a sysproperty with name tests.and.ant.share.classloader and value // ${tests.and.ant.share.classloader} will be set // we are trying to catch this here.	WITHOUT_CLASSIFICATION	0.9997154297107212	WITHOUT_CLASSIFICATION	2.845702892787084E-4	DEFECT
/*             * throw in drive letters             */	WITHOUT_CLASSIFICATION	0.9999875790020791	WITHOUT_CLASSIFICATION	1.242099792092728E-5	DEFECT
/*             * promised to eliminate consecutive slashes after drive letter.             */	WITHOUT_CLASSIFICATION	0.9999998678253107	WITHOUT_CLASSIFICATION	1.321746894174206E-7	DEFECT
/*             * promised to eliminate consecutive slashes after drive letter.             */	WITHOUT_CLASSIFICATION	0.9999998678253107	WITHOUT_CLASSIFICATION	1.321746894174206E-7	DEFECT
/*             * promised to eliminate consecutive slashes after drive letter.             */	WITHOUT_CLASSIFICATION	0.9999998678253107	WITHOUT_CLASSIFICATION	1.321746894174206E-7	DEFECT
// avoid multiple configurations	WITHOUT_CLASSIFICATION	0.9999999136704387	WITHOUT_CLASSIFICATION	8.632956125564057E-8	DEFECT
// ------------------------------------------------------ //   Helper methods // -----------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999884813454951	WITHOUT_CLASSIFICATION	1.1518654504864613E-5	DEFECT
// make sure the cache is cleared.	WITHOUT_CLASSIFICATION	0.9999899207855714	WITHOUT_CLASSIFICATION	1.00792144286702E-5	DEFECT
//--- NULL JDBC driver just for simple test since there are no db driver // available as a default in Ant :)	WITHOUT_CLASSIFICATION	0.999999999752407	WITHOUT_CLASSIFICATION	2.4759291897156986E-10	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.9999959208606268	WITHOUT_CLASSIFICATION	4.07913937322778E-6	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.9999959208606268	WITHOUT_CLASSIFICATION	4.07913937322778E-6	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.9999959208606268	WITHOUT_CLASSIFICATION	4.07913937322778E-6	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.9999959208606268	WITHOUT_CLASSIFICATION	4.07913937322778E-6	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.9999959208606268	WITHOUT_CLASSIFICATION	4.07913937322778E-6	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.9999959208606268	WITHOUT_CLASSIFICATION	4.07913937322778E-6	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.9999959208606268	WITHOUT_CLASSIFICATION	4.07913937322778E-6	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.9999959208606268	WITHOUT_CLASSIFICATION	4.07913937322778E-6	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.9999959208606268	WITHOUT_CLASSIFICATION	4.07913937322778E-6	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.9999959208606268	WITHOUT_CLASSIFICATION	4.07913937322778E-6	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.9999959208606268	WITHOUT_CLASSIFICATION	4.07913937322778E-6	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.9999959208606268	WITHOUT_CLASSIFICATION	4.07913937322778E-6	DEFECT
// wait 1 second extra to allow for java to start ... // this time was OK on a Win NT machine and on nagoya	WITHOUT_CLASSIFICATION	0.9999612095020978	WITHOUT_CLASSIFICATION	3.879049790220174E-5	DEFECT
// ------------------------------------------------------ //   Helper methods - should be in BuildFileTest // -----------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999734912616117	WITHOUT_CLASSIFICATION	2.6508738388341286E-5	DEFECT
// ------------------------------------------------------ //   Helper methods - should be in BuildFileTest // -----------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999734912616117	WITHOUT_CLASSIFICATION	2.6508738388341286E-5	DEFECT
// All three specified and all three exist -> true	WITHOUT_CLASSIFICATION	0.9999994700357148	WITHOUT_CLASSIFICATION	5.299642851889422E-7	DEFECT
// Specified class is "" -> can not exist	WITHOUT_CLASSIFICATION	0.9999769708796165	WITHOUT_CLASSIFICATION	2.3029120383524515E-5	DEFECT
// Core class that exists in system classpath is ignored, but found in specified classpath	WITHOUT_CLASSIFICATION	0.9999995689763024	WITHOUT_CLASSIFICATION	4.3102369756783603E-7	DEFECT
// File is not found in specified filepath	WITHOUT_CLASSIFICATION	0.9999997645674793	WITHOUT_CLASSIFICATION	2.3543252081191072E-7	DEFECT
//ignored	WITHOUT_CLASSIFICATION	0.99999511294749	WITHOUT_CLASSIFICATION	4.88705251008008E-6	DEFECT
// basedir of subant/subant-test2/subant.xml is .. // therefore we expect here the subant subdirectory	WITHOUT_CLASSIFICATION	0.9999737121275574	WITHOUT_CLASSIFICATION	2.6287872442728387E-5	DEFECT
// 2 is != 0 and even, so it is considered // failure on any platform currently supported // by Execute#isFailure.	WITHOUT_CLASSIFICATION	0.9996538359932433	WITHOUT_CLASSIFICATION	3.46164006756641E-4	DEFECT
//         expectBuildExceptionContaining("testNoTld", //                 "Jasper found an error in a file", //                 "Java returned: 9");	WITHOUT_CLASSIFICATION	0.9999999620974702	WITHOUT_CLASSIFICATION	3.790252971824689E-8	DEFECT
// The captureToSummary test writes to stdout and stderr, good for // verifying that the TestListener support doesn't break anything.	WITHOUT_CLASSIFICATION	0.9999918414122486	WITHOUT_CLASSIFICATION	8.158587751355834E-6	DEFECT
// testNoCrash is the test invoked by the captureToSummary's junit task	WITHOUT_CLASSIFICATION	0.9999999959631015	WITHOUT_CLASSIFICATION	4.036898468273582E-9	DEFECT
// tests one the file object	WITHOUT_CLASSIFICATION	0.9999999424883924	WITHOUT_CLASSIFICATION	5.751160761004293E-8	DEFECT
// tests one the file object	WITHOUT_CLASSIFICATION	0.9999999424883924	WITHOUT_CLASSIFICATION	5.751160761004293E-8	DEFECT
// tests one the file object	WITHOUT_CLASSIFICATION	0.9999999424883924	WITHOUT_CLASSIFICATION	5.751160761004293E-8	DEFECT
// tests one the file object	WITHOUT_CLASSIFICATION	0.9999999424883924	WITHOUT_CLASSIFICATION	5.751160761004293E-8	DEFECT
// tests one the file object	WITHOUT_CLASSIFICATION	0.9999999424883924	WITHOUT_CLASSIFICATION	5.751160761004293E-8	DEFECT
// viewpath	WITHOUT_CLASSIFICATION	0.9999976834600826	WITHOUT_CLASSIFICATION	2.316539917415587E-6	DEFECT
// conversion to URL via FileUtils like in XMLResultAggregator, not as suggested in the bug report	WITHOUT_CLASSIFICATION	0.9999026657471421	WITHOUT_CLASSIFICATION	9.733425285786995E-5	DEFECT
// conversion to URL via FileUtils like in XMLResultAggregator, not as suggested in the bug report	WITHOUT_CLASSIFICATION	0.9999026657471421	WITHOUT_CLASSIFICATION	9.733425285786995E-5	DEFECT
// conversion to URL via FileUtils like in XMLResultAggregator, not as suggested in the bug report	WITHOUT_CLASSIFICATION	0.9999026657471421	WITHOUT_CLASSIFICATION	9.733425285786995E-5	DEFECT
// conversion to URL via FileUtils like in XMLResultAggregator, not as suggested in the bug report	WITHOUT_CLASSIFICATION	0.9999026657471421	WITHOUT_CLASSIFICATION	9.733425285786995E-5	DEFECT
// We have extra elements	WITHOUT_CLASSIFICATION	0.9999996968205067	WITHOUT_CLASSIFICATION	3.0317949325818507E-7	DEFECT
// Set up a VSSHistory task	WITHOUT_CLASSIFICATION	0.9999999451814464	WITHOUT_CLASSIFICATION	5.481855355292082E-8	DEFECT
// \ doesn't have a special meaning anymore - this is different from // what the Unix sh does but causes a lot of problems on DOS // based platforms otherwise	WITHOUT_CLASSIFICATION	0.9876429514225217	WITHOUT_CLASSIFICATION	0.012357048577478411	DEFECT
//check that dir and src are incompatible	WITHOUT_CLASSIFICATION	0.9999999623872676	WITHOUT_CLASSIFICATION	3.7612732408275685E-8	DEFECT
// ================  testcases for the cache implementations  ================	WITHOUT_CLASSIFICATION	0.9999979877368771	WITHOUT_CLASSIFICATION	2.0122631229549433E-6	DEFECT
// does the selection	WITHOUT_CLASSIFICATION	0.9999832717179604	WITHOUT_CLASSIFICATION	1.6728282039581234E-5	DEFECT
// ==============  testcases for the algorithm implementations  ==============	WITHOUT_CLASSIFICATION	0.9998706212331191	WITHOUT_CLASSIFICATION	1.2937876688082656E-4	DEFECT
// =====================  scenario tests  =====================	WITHOUT_CLASSIFICATION	0.9999996026544132	WITHOUT_CLASSIFICATION	3.9734558668596553E-7	DEFECT
// info text // list of files // expected result // result	WITHOUT_CLASSIFICATION	0.9999997359953621	WITHOUT_CLASSIFICATION	2.6400463785294764E-7	DEFECT
//  =====================  helper methods and classes  ====================	WITHOUT_CLASSIFICATION	0.9999986241144454	WITHOUT_CLASSIFICATION	1.3758855546396678E-6	DEFECT
// should be full moon	WITHOUT_CLASSIFICATION	0.9999924638004056	WITHOUT_CLASSIFICATION	7.53619959444623E-6	DEFECT
// Try a silly case	WITHOUT_CLASSIFICATION	0.9999901009508185	WITHOUT_CLASSIFICATION	9.899049181384405E-6	DEFECT
// java.home is bogus	WITHOUT_CLASSIFICATION	0.9999993907152908	WITHOUT_CLASSIFICATION	6.092847093379346E-7	DEFECT
// 60s // a further 30s	WITHOUT_CLASSIFICATION	0.9999997391491064	WITHOUT_CLASSIFICATION	2.6085089347503875E-7	DEFECT
// 60s // a further 30s	WITHOUT_CLASSIFICATION	0.9999997391491064	WITHOUT_CLASSIFICATION	2.6085089347503875E-7	DEFECT
// 60s // a further 30s	WITHOUT_CLASSIFICATION	0.9999997391491064	WITHOUT_CLASSIFICATION	2.6085089347503875E-7	DEFECT
// order of headers cannot be guaranteed	WITHOUT_CLASSIFICATION	0.9999914306764127	WITHOUT_CLASSIFICATION	8.569323587318843E-6	DEFECT
// order of headers cannot be guaranteed	WITHOUT_CLASSIFICATION	0.9999914306764127	WITHOUT_CLASSIFICATION	8.569323587318843E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999996958536274	WITHOUT_CLASSIFICATION	3.0414637271301487E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999996958536274	WITHOUT_CLASSIFICATION	3.0414637271301487E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999996958536274	WITHOUT_CLASSIFICATION	3.0414637271301487E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999996958536274	WITHOUT_CLASSIFICATION	3.0414637271301487E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999996958536274	WITHOUT_CLASSIFICATION	3.0414637271301487E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999996958536274	WITHOUT_CLASSIFICATION	3.0414637271301487E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999996958536274	WITHOUT_CLASSIFICATION	3.0414637271301487E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999996958536274	WITHOUT_CLASSIFICATION	3.0414637271301487E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999996958536274	WITHOUT_CLASSIFICATION	3.0414637271301487E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999996958536274	WITHOUT_CLASSIFICATION	3.0414637271301487E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999996958536274	WITHOUT_CLASSIFICATION	3.0414637271301487E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999996958536274	WITHOUT_CLASSIFICATION	3.0414637271301487E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999996958536274	WITHOUT_CLASSIFICATION	3.0414637271301487E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999996958536274	WITHOUT_CLASSIFICATION	3.0414637271301487E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999996958536274	WITHOUT_CLASSIFICATION	3.0414637271301487E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999996958536274	WITHOUT_CLASSIFICATION	3.0414637271301487E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999996958536274	WITHOUT_CLASSIFICATION	3.0414637271301487E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999996958536274	WITHOUT_CLASSIFICATION	3.0414637271301487E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999996958536274	WITHOUT_CLASSIFICATION	3.0414637271301487E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999996958536274	WITHOUT_CLASSIFICATION	3.0414637271301487E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999996958536274	WITHOUT_CLASSIFICATION	3.0414637271301487E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999996958536274	WITHOUT_CLASSIFICATION	3.0414637271301487E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999996958536274	WITHOUT_CLASSIFICATION	3.0414637271301487E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999996958536274	WITHOUT_CLASSIFICATION	3.0414637271301487E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999996958536274	WITHOUT_CLASSIFICATION	3.0414637271301487E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999996958536274	WITHOUT_CLASSIFICATION	3.0414637271301487E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999996958536274	WITHOUT_CLASSIFICATION	3.0414637271301487E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999996958536274	WITHOUT_CLASSIFICATION	3.0414637271301487E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999996958536274	WITHOUT_CLASSIFICATION	3.0414637271301487E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999996958536274	WITHOUT_CLASSIFICATION	3.0414637271301487E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999996958536274	WITHOUT_CLASSIFICATION	3.0414637271301487E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999996958536274	WITHOUT_CLASSIFICATION	3.0414637271301487E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999996958536274	WITHOUT_CLASSIFICATION	3.0414637271301487E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999996958536274	WITHOUT_CLASSIFICATION	3.0414637271301487E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999996958536274	WITHOUT_CLASSIFICATION	3.0414637271301487E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999996958536274	WITHOUT_CLASSIFICATION	3.0414637271301487E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999996958536274	WITHOUT_CLASSIFICATION	3.0414637271301487E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999996958536274	WITHOUT_CLASSIFICATION	3.0414637271301487E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999996958536274	WITHOUT_CLASSIFICATION	3.0414637271301487E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999996958536274	WITHOUT_CLASSIFICATION	3.0414637271301487E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999996958536274	WITHOUT_CLASSIFICATION	3.0414637271301487E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999996958536274	WITHOUT_CLASSIFICATION	3.0414637271301487E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999996958536274	WITHOUT_CLASSIFICATION	3.0414637271301487E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999996958536274	WITHOUT_CLASSIFICATION	3.0414637271301487E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999996958536274	WITHOUT_CLASSIFICATION	3.0414637271301487E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999996958536274	WITHOUT_CLASSIFICATION	3.0414637271301487E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999996958536274	WITHOUT_CLASSIFICATION	3.0414637271301487E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999996958536274	WITHOUT_CLASSIFICATION	3.0414637271301487E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999996958536274	WITHOUT_CLASSIFICATION	3.0414637271301487E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999996958536274	WITHOUT_CLASSIFICATION	3.0414637271301487E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999996958536274	WITHOUT_CLASSIFICATION	3.0414637271301487E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999996958536274	WITHOUT_CLASSIFICATION	3.0414637271301487E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999996958536274	WITHOUT_CLASSIFICATION	3.0414637271301487E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999996958536274	WITHOUT_CLASSIFICATION	3.0414637271301487E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999996958536274	WITHOUT_CLASSIFICATION	3.0414637271301487E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999996958536274	WITHOUT_CLASSIFICATION	3.0414637271301487E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999996958536274	WITHOUT_CLASSIFICATION	3.0414637271301487E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999996958536274	WITHOUT_CLASSIFICATION	3.0414637271301487E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999996958536274	WITHOUT_CLASSIFICATION	3.0414637271301487E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999996958536274	WITHOUT_CLASSIFICATION	3.0414637271301487E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999996958536274	WITHOUT_CLASSIFICATION	3.0414637271301487E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999996958536274	WITHOUT_CLASSIFICATION	3.0414637271301487E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999996958536274	WITHOUT_CLASSIFICATION	3.0414637271301487E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999996958536274	WITHOUT_CLASSIFICATION	3.0414637271301487E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999996958536274	WITHOUT_CLASSIFICATION	3.0414637271301487E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999996958536274	WITHOUT_CLASSIFICATION	3.0414637271301487E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999996958536274	WITHOUT_CLASSIFICATION	3.0414637271301487E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999996958536274	WITHOUT_CLASSIFICATION	3.0414637271301487E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999996958536274	WITHOUT_CLASSIFICATION	3.0414637271301487E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999996958536274	WITHOUT_CLASSIFICATION	3.0414637271301487E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999996958536274	WITHOUT_CLASSIFICATION	3.0414637271301487E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999996958536274	WITHOUT_CLASSIFICATION	3.0414637271301487E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999996958536274	WITHOUT_CLASSIFICATION	3.0414637271301487E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999996958536274	WITHOUT_CLASSIFICATION	3.0414637271301487E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999996958536274	WITHOUT_CLASSIFICATION	3.0414637271301487E-7	DEFECT
/*                            Ignore method m, as there is an overloaded                            form of this method that takes in a                            non-string argument, which gains higher                            priority.                        */	WITHOUT_CLASSIFICATION	0.9999999992428289	WITHOUT_CLASSIFICATION	7.571711576837324E-10	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999209490427	WITHOUT_CLASSIFICATION	7.905095730336347E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999209490427	WITHOUT_CLASSIFICATION	7.905095730336347E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999209490427	WITHOUT_CLASSIFICATION	7.905095730336347E-8	DEFECT
/*                        If the argument is not a String or Location,                        and if there                        is an overloaded form of this method already defined,                        we just override that with the new one.                        This mechanism does not guarantee any specific order                        in which the methods will be selected: so any code                        that depends on the order in which "set" methods have                        been defined, is not guaranteed to be selected in any                        particular order.                    */	WITHOUT_CLASSIFICATION	0.999999999999659	WITHOUT_CLASSIFICATION	3.4085798199953945E-13	DEFECT
// impossible as getMethods should only return public methods	WITHOUT_CLASSIFICATION	0.9999997026342027	WITHOUT_CLASSIFICATION	2.9736579728506605E-7	DEFECT
// impossible as getMethods should only return public methods	WITHOUT_CLASSIFICATION	0.9999997026342027	WITHOUT_CLASSIFICATION	2.9736579728506605E-7	DEFECT
// impossible as getMethods should only return public methods	WITHOUT_CLASSIFICATION	0.9999997026342027	WITHOUT_CLASSIFICATION	2.9736579728506605E-7	DEFECT
// boolean and Boolean get special treatment because we // have a nice method in Project	WITHOUT_CLASSIFICATION	0.9999999870755839	WITHOUT_CLASSIFICATION	1.2924415969070002E-8	DEFECT
// find the line breaks and pass other chars through in blocks	WITHOUT_CLASSIFICATION	0.9999427688855644	WITHOUT_CLASSIFICATION	5.7231114435541346E-5	DEFECT
// DataType can have a "no arg" constructor or take a single // Project argument.	WITHOUT_CLASSIFICATION	0.9999999381483624	WITHOUT_CLASSIFICATION	6.18516375506764E-8	DEFECT
// all the names are the same: check if the class path of the loader // is the same	WITHOUT_CLASSIFICATION	0.9999991476354766	WITHOUT_CLASSIFICATION	8.523645234065566E-7	DEFECT
/* Interestingly enough, we get to here when a user                 * uses -Dname=value. However, in some cases, the OS                 * goes ahead and parses this out to args                 *   {"-Dname", "value"}                 * so instead of parsing on "=", we just make the "-D"                 * characters go away and skip one argument forward.                 *                 * I don't know how to predict when the JDK is going                 * to help or not, so we simply look for the equals sign.                 */	WITHOUT_CLASSIFICATION	0.9996017628937973	WITHOUT_CLASSIFICATION	3.982371062026478E-4	DEFECT
// if parent is null, then we are at the root of the fs, // complain that we can't find the build file.	WITHOUT_CLASSIFICATION	0.9999689181101035	WITHOUT_CLASSIFICATION	3.108188989655986E-5	DEFECT
// put back the original security manager //The following will never eval to true. (PD)	WITHOUT_CLASSIFICATION	0.9999992460342898	WITHOUT_CLASSIFICATION	7.539657101702426E-7	DEFECT
// ignore path elements which are invalid // relative to the project	WITHOUT_CLASSIFICATION	0.9999999963002432	WITHOUT_CLASSIFICATION	3.699756840213598E-9	DEFECT
// Ignore - we are interested only in the side // effect - that of getting the static initializers // invoked.  As we do not want to call a valid // constructor to get this side effect, an // attempt is made to call a hopefully // invalid constructor - come on, nobody // would have a constructor that takes in // 256 String arguments ;-) // (In fact, they can't - according to JVM spec // section 4.10, the number of method parameters is limited // to 255 by the definition of a method descriptor. // Constructors count as methods here.)	WITHOUT_CLASSIFICATION	0.9999287509490566	WITHOUT_CLASSIFICATION	7.124905094330545E-5	DEFECT
/*<URL>*/	WITHOUT_CLASSIFICATION	0.9998212846688802	WITHOUT_CLASSIFICATION	1.787153311197819E-4	DEFECT
/*<URL>*/	WITHOUT_CLASSIFICATION	0.9998212846688802	WITHOUT_CLASSIFICATION	1.787153311197819E-4	DEFECT
// 'sync' is needed - otherwise 2 threads can load the same class // twice, resulting in LinkageError: duplicated class definition. // findLoadedClass avoids that, but without sync it won't work.	WITHOUT_CLASSIFICATION	0.7848501629675929	DEFECT	0.215149837032407	WITHOUT_CLASSIFICATION
//ignore	WITHOUT_CLASSIFICATION	0.9999940166248454	WITHOUT_CLASSIFICATION	5.983375154568819E-6	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9999940166248454	WITHOUT_CLASSIFICATION	5.983375154568819E-6	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9999940166248454	WITHOUT_CLASSIFICATION	5.983375154568819E-6	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9999940166248454	WITHOUT_CLASSIFICATION	5.983375154568819E-6	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9999940166248454	WITHOUT_CLASSIFICATION	5.983375154568819E-6	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9999940166248454	WITHOUT_CLASSIFICATION	5.983375154568819E-6	DEFECT
// Not significant for the class loader.	WITHOUT_CLASSIFICATION	0.9999992219837699	WITHOUT_CLASSIFICATION	7.780162301239988E-7	DEFECT
// Not significant for the class loader.	WITHOUT_CLASSIFICATION	0.9999992219837699	WITHOUT_CLASSIFICATION	7.780162301239988E-7	DEFECT
// Not significant for the class loader.	WITHOUT_CLASSIFICATION	0.9999992219837699	WITHOUT_CLASSIFICATION	7.780162301239988E-7	DEFECT
// Not significant for the class loader.	WITHOUT_CLASSIFICATION	0.9999992219837699	WITHOUT_CLASSIFICATION	7.780162301239988E-7	DEFECT
// Not significant for the class loader.	WITHOUT_CLASSIFICATION	0.9999992219837699	WITHOUT_CLASSIFICATION	7.780162301239988E-7	DEFECT
// don't have to check for public, since // getConstructor finds public constructors only.	WITHOUT_CLASSIFICATION	0.9999998416909959	WITHOUT_CLASSIFICATION	1.5830900407339128E-7	DEFECT
//not a known type	WITHOUT_CLASSIFICATION	0.9996891651116834	WITHOUT_CLASSIFICATION	3.108348883166723E-4	DEFECT
// Initialize the globalFileSet's project	WITHOUT_CLASSIFICATION	0.9999996587591181	WITHOUT_CLASSIFICATION	3.4124088191122653E-7	DEFECT
// create a new Vector to avoid ConcurrentModificationExc when // the listeners get added/removed while we are in fire	WITHOUT_CLASSIFICATION	0.999999991489621	WITHOUT_CLASSIFICATION	8.510378913282904E-9	DEFECT
// first build exception	WITHOUT_CLASSIFICATION	0.9999998351793612	WITHOUT_CLASSIFICATION	1.6482063882528088E-7	DEFECT
// Not been visited	WITHOUT_CLASSIFICATION	0.9999998576489836	WITHOUT_CLASSIFICATION	1.4235101642020816E-7	DEFECT
// -------------------- Optional methods   -------------------- // You can override those methods if you want to optimize or // do advanced things (like support a special syntax). // The methods do not chain - you should use them when embedding ant // (by replacing the main helper)	WITHOUT_CLASSIFICATION	0.9999950006036933	WITHOUT_CLASSIFICATION	4.999396306776093E-6	DEFECT
/*                fragments.addElement(value.substring(pos + 1, pos + 2));                prev = pos + 2;                */	WITHOUT_CLASSIFICATION	0.9999999903490243	WITHOUT_CLASSIFICATION	9.650975662654043E-9	DEFECT
//empty	WITHOUT_CLASSIFICATION	0.9999573539385527	WITHOUT_CLASSIFICATION	4.2646061447253527E-5	DEFECT
//empty	WITHOUT_CLASSIFICATION	0.9999573539385527	WITHOUT_CLASSIFICATION	4.2646061447253527E-5	DEFECT
// -------------------- Common properties  -------------------- // The following properties are required by import ( and other tasks // that read build files using ProjectHelper ).	WITHOUT_CLASSIFICATION	0.9998736661301058	WITHOUT_CLASSIFICATION	1.2633386989432556E-4	DEFECT
// check to what is in the classname	WITHOUT_CLASSIFICATION	0.9999949363030312	WITHOUT_CLASSIFICATION	5.0636969688128945E-6	DEFECT
//not included, do nothing	WITHOUT_CLASSIFICATION	0.9999932182610253	WITHOUT_CLASSIFICATION	6.7817389746443345E-6	DEFECT
//not included, do nothing	WITHOUT_CLASSIFICATION	0.9999932182610253	WITHOUT_CLASSIFICATION	6.7817389746443345E-6	DEFECT
// Attributes	WITHOUT_CLASSIFICATION	0.9999996142072205	WITHOUT_CLASSIFICATION	3.857927794750127E-7	DEFECT
// make sure we aren't going to get the path separator next	WITHOUT_CLASSIFICATION	0.9999826797417415	WITHOUT_CLASSIFICATION	1.7320258258471114E-5	DEFECT
// 'reasonable' default, if the component is used without // a Project ( for example as a standalone Bean ). // Most ant components can be used this way.	WITHOUT_CLASSIFICATION	0.9999941798565409	WITHOUT_CLASSIFICATION	5.8201434590274004E-6	DEFECT
// don't have to check for public, since // getMethod finds public method only. // don't have to check for abstract, since then // taskClass would be abstract too.	WITHOUT_CLASSIFICATION	0.9999990410723996	WITHOUT_CLASSIFICATION	9.58927600444579E-7	DEFECT
// Mac	WITHOUT_CLASSIFICATION	0.9999975390899464	WITHOUT_CLASSIFICATION	2.4609100537132877E-6	DEFECT
// set in/excludes to reasonable defaults if needed:	WITHOUT_CLASSIFICATION	0.9999999233143025	WITHOUT_CLASSIFICATION	7.668569743805335E-8	DEFECT
// may be on a case insensitive file system.  We want // the results to show what's really on the disk, so // we need to double check.	WITHOUT_CLASSIFICATION	0.9999998603813228	WITHOUT_CLASSIFICATION	1.3961867718359817E-7	DEFECT
// avoid double scanning of directories, can only happen in fast mode	WITHOUT_CLASSIFICATION	0.9999946422538478	WITHOUT_CLASSIFICATION	5.3577461521072345E-6	DEFECT
// Usually the initialized is set to true. But here it must not. // Because the prepend and append readers have to be instantiated // on runtime //newFilter.setInitialized(true);	WITHOUT_CLASSIFICATION	0.9997371876500736	WITHOUT_CLASSIFICATION	2.628123499264384E-4	DEFECT
// if at EOF with no characters in the buffer, return EOF	WITHOUT_CLASSIFICATION	0.9999999993486546	WITHOUT_CLASSIFICATION	6.513454939502948E-10	DEFECT
// The current character is always emitted.	WITHOUT_CLASSIFICATION	0.9999991575350476	WITHOUT_CLASSIFICATION	8.424649523366876E-7	DEFECT
// The current character is always emitted.	WITHOUT_CLASSIFICATION	0.9999991575350476	WITHOUT_CLASSIFICATION	8.424649523366876E-7	DEFECT
// The current character is always emitted.	WITHOUT_CLASSIFICATION	0.9999991575350476	WITHOUT_CLASSIFICATION	8.424649523366876E-7	DEFECT
// The current character is always emitted.	WITHOUT_CLASSIFICATION	0.9999991575350476	WITHOUT_CLASSIFICATION	8.424649523366876E-7	DEFECT
// Fall tru	WITHOUT_CLASSIFICATION	0.9999962365834545	WITHOUT_CLASSIFICATION	3.763416545424629E-6	DEFECT
// Fall tru	WITHOUT_CLASSIFICATION	0.9999962365834545	WITHOUT_CLASSIFICATION	3.763416545424629E-6	DEFECT
// Fall tru	WITHOUT_CLASSIFICATION	0.9999962365834545	WITHOUT_CLASSIFICATION	3.763416545424629E-6	DEFECT
// Fall tru	WITHOUT_CLASSIFICATION	0.9999962365834545	WITHOUT_CLASSIFICATION	3.763416545424629E-6	DEFECT
// Works like clone() but doesn't show up in the Javadocs	WITHOUT_CLASSIFICATION	0.9998064652339355	WITHOUT_CLASSIFICATION	1.9353476606451443E-4	DEFECT
// ----------------------------------------- //  Predefined filters // -----------------------------------------	WITHOUT_CLASSIFICATION	0.999997950739207	WITHOUT_CLASSIFICATION	2.04926079291331E-6	DEFECT
// -------------------------------------------- // //      Filter classes // // --------------------------------------------	WITHOUT_CLASSIFICATION	0.9999870756954017	WITHOUT_CLASSIFICATION	1.2924304598276349E-5	DEFECT
// Execute the top-level target	WITHOUT_CLASSIFICATION	0.9999999881900442	WITHOUT_CLASSIFICATION	1.1809955653300946E-8	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999989929297763	WITHOUT_CLASSIFICATION	1.0070702236150735E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999989929297763	WITHOUT_CLASSIFICATION	1.0070702236150735E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999989929297763	WITHOUT_CLASSIFICATION	1.0070702236150735E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999989929297763	WITHOUT_CLASSIFICATION	1.0070702236150735E-6	DEFECT
// Also check for properly formed URIs. Ant formerly recommended using // nonsense URIs such as "file:./foo.xml" in XML includes. You shouldn't // do that (just "foo.xml" is correct) but for compatibility we special-case // things when the path is not absolute, and fall back to the old parsing behavior.	WITHOUT_CLASSIFICATION	0.9996501761437043	WITHOUT_CLASSIFICATION	3.4982385629566065E-4	DEFECT
//decide whether to copy the existing arg set, or //build a new one from the list of all args excluding the special //operations that only we handle	WITHOUT_CLASSIFICATION	0.9999999920006925	WITHOUT_CLASSIFICATION	7.99930746912746E-9	DEFECT
// convert the replyTo string into a vector of emailaddresses	WITHOUT_CLASSIFICATION	0.9999986182821217	WITHOUT_CLASSIFICATION	1.3817178782308382E-6	DEFECT
// private static final int BG_BLACK = 40; // private static final int BG_RED = 41; // private static final int BG_GREEN = 42; // private static final int BG_YELLOW = 44; // private static final int BG_BLUE = 44; // private static final int BG_MAGENTA = 45; // private static final int BG_CYAN = 46; // private static final int BG_WHITE = 47;	WITHOUT_CLASSIFICATION	0.99999993638095	WITHOUT_CLASSIFICATION	6.361905001378003E-8	DEFECT
// If the file being added is META-INF/application.xml, we // warn if it's not the one specified in the "appxml" // attribute - or if it's being added twice, meaning the same // file is specified by the "appxml" attribute and in a // <fileset> element.	WITHOUT_CLASSIFICATION	0.9999999084283484	WITHOUT_CLASSIFICATION	9.157165170859117E-8	DEFECT
// class found but restricted name; this is // actually the case we're looking for in JDK 1.3+, // so catch the exception and return	WITHOUT_CLASSIFICATION	0.9999997230872909	WITHOUT_CLASSIFICATION	2.769127090162772E-7	DEFECT
// Can return null to represent the bootstrap class loader. // see API docs of Class.getClassLoader.	WITHOUT_CLASSIFICATION	0.9999999996866581	WITHOUT_CLASSIFICATION	3.133418543801729E-10	DEFECT
//default	WITHOUT_CLASSIFICATION	0.9999947782843395	WITHOUT_CLASSIFICATION	5.221715660500703E-6	DEFECT
//default	WITHOUT_CLASSIFICATION	0.9999947782843395	WITHOUT_CLASSIFICATION	5.221715660500703E-6	DEFECT
// use to scan own archive	WITHOUT_CLASSIFICATION	0.9999999925512155	WITHOUT_CLASSIFICATION	7.448784472798879E-9	DEFECT
// collect filesets to pass them to getResourcesToAdd	WITHOUT_CLASSIFICATION	0.999999120041655	WITHOUT_CLASSIFICATION	8.799583449683479E-7	DEFECT
// If we're in this finally clause because of an // exception, we don't really care if there's an // exception when closing the stream. E.g. if it // throws "ZIP file must have at least one entry", // because an exception happened before we added // any files, then we must swallow this // exception. Otherwise, the error that's reported // will be the close() error, which is not the // real cause of the problem.	WITHOUT_CLASSIFICATION	0.9746004027193604	WITHOUT_CLASSIFICATION	0.025399597280639587	DEFECT
/*             * Bad luck.             *             * There are resources in the filesets that make the             * archive out of date, but not in the non-fileset             * resources. We need to rescan the non-FileSets to grab             * all of them now.             */	WITHOUT_CLASSIFICATION	0.9999974496810956	WITHOUT_CLASSIFICATION	2.550318904469988E-6	DEFECT
// ZIPs store time with a granularity of 2 seconds, round up	WITHOUT_CLASSIFICATION	0.9999371148218544	WITHOUT_CLASSIFICATION	6.288517814553731E-5	DEFECT
/*             * ZipOutputStream.putNextEntry expects the ZipEntry to             * know its size and the CRC sum before you start writing             * the data when using STORED mode - unless it is seekable.             *             * This forces us to process the data twice.             */	WITHOUT_CLASSIFICATION	0.9999761238828362	WITHOUT_CLASSIFICATION	2.3876117163925957E-5	DEFECT
// may be altered in validate	WITHOUT_CLASSIFICATION	0.9999976499536312	WITHOUT_CLASSIFICATION	2.350046368888059E-6	DEFECT
//at this point the paths are set up with lists of files, //and the mapper is ready to map from source dirs to dest files //now we iterate through every JAR giving source and dest names // deal with the paths	WITHOUT_CLASSIFICATION	0.9999989703920031	WITHOUT_CLASSIFICATION	1.0296079968646958E-6	DEFECT
//calculate our destination directory; it is either the destDir //attribute, or the base dir of the fileset (for in situ updates)	WITHOUT_CLASSIFICATION	0.999999989472097	WITHOUT_CLASSIFICATION	1.052790294978266E-8	DEFECT
// Error messages	WITHOUT_CLASSIFICATION	0.9999970168144002	WITHOUT_CLASSIFICATION	2.9831855996632883E-6	DEFECT
// Default the viewpath to basedir if it is not specified	WITHOUT_CLASSIFICATION	0.9999978932549702	WITHOUT_CLASSIFICATION	2.1067450297648897E-6	DEFECT
// Default the viewpath to basedir if it is not specified	WITHOUT_CLASSIFICATION	0.9999978932549702	WITHOUT_CLASSIFICATION	2.1067450297648897E-6	DEFECT
// Default the viewpath to basedir if it is not specified	WITHOUT_CLASSIFICATION	0.9999978932549702	WITHOUT_CLASSIFICATION	2.1067450297648897E-6	DEFECT
// Parse the attribute(s) and text of this node, adding // properties for each. // if the "path" attribute is specified, then return the created path // which will be passed to the children of this node.	WITHOUT_CLASSIFICATION	0.9999994693241069	WITHOUT_CLASSIFICATION	5.30675893227194E-7	DEFECT
// An arbitrary attribute.	WITHOUT_CLASSIFICATION	0.9999996912845587	WITHOUT_CLASSIFICATION	3.0871544134229566E-7	DEFECT
// Return the Path we added or the ID of this node for // children to reference if needed.  Path objects are // definitely used by child path elements, and ID may be used // for a child text node.	WITHOUT_CLASSIFICATION	0.9999999079613817	WITHOUT_CLASSIFICATION	9.203861828867253E-8	DEFECT
// Fall Through	WITHOUT_CLASSIFICATION	0.9999787094564205	WITHOUT_CLASSIFICATION	2.1290543579407758E-5	DEFECT
// Fall Through	WITHOUT_CLASSIFICATION	0.9999787094564205	WITHOUT_CLASSIFICATION	2.1290543579407758E-5	DEFECT
// Ignore the problem	WITHOUT_CLASSIFICATION	0.9999985907156982	WITHOUT_CLASSIFICATION	1.4092843017565024E-6	DEFECT
// If we're on windows, then do the comparison ignoring case // and treat the two directory characters the same	WITHOUT_CLASSIFICATION	0.9999995167795189	WITHOUT_CLASSIFICATION	4.832204810318654E-7	DEFECT
// for NetWare and OS/2, piggy-back on Windows, since in the // validateSetup code, the same assumptions can be made as // with windows - that ; is the path separator	WITHOUT_CLASSIFICATION	0.9998424424193046	WITHOUT_CLASSIFICATION	1.5755758069543307E-4	DEFECT
// END static class TemplateElement	WITHOUT_CLASSIFICATION	0.9999997108544667	WITHOUT_CLASSIFICATION	2.8914553330140176E-7	DEFECT
////////////////////////////////////////////////////////////////////// // CONSTRUCTORS / INITIALIZERS	WITHOUT_CLASSIFICATION	0.9999974165888894	WITHOUT_CLASSIFICATION	2.5834111105796725E-6	DEFECT
//value and property are mutually exclusive attributes	WITHOUT_CLASSIFICATION	0.9999943814292539	WITHOUT_CLASSIFICATION	5.618570746162335E-6	DEFECT
// Ignore Exception	WITHOUT_CLASSIFICATION	0.9999995659536455	WITHOUT_CLASSIFICATION	4.3404635441434825E-7	DEFECT
//int logLevel = filesetManifestConfig == null ? //    Project.MSG_WARN : Project.MSG_VERBOSE; //log("File " + file //    + " includes a META-INF/MANIFEST.MF which will be ignored. " //    + "To include this file, set filesetManifest to a value other " //    + "than 'skip'.", logLevel);	WITHOUT_CLASSIFICATION	0.9999999893638475	WITHOUT_CLASSIFICATION	1.0636152640884961E-8	DEFECT
// Create the directory, as it might not exist.	WITHOUT_CLASSIFICATION	0.9999844210925137	WITHOUT_CLASSIFICATION	1.5578907486316343E-5	DEFECT
// Calculate the total checksum // Convert the keys (source files) into a sorted array.	WITHOUT_CLASSIFICATION	0.9999999891630329	WITHOUT_CLASSIFICATION	1.0836967164785422E-8	DEFECT
// must not use getEntry as "well behaving" applications // must accept the manifest in any capitalization	WITHOUT_CLASSIFICATION	0.9999923579456452	WITHOUT_CLASSIFICATION	7.642054354748506E-6	DEFECT
// We just set the prefix for this fileset, and pass it up.	WITHOUT_CLASSIFICATION	0.9999955914615267	WITHOUT_CLASSIFICATION	4.40853847318221E-6	DEFECT
// We just set the prefix for this fileset, and pass it up.	WITHOUT_CLASSIFICATION	0.9999955914615267	WITHOUT_CLASSIFICATION	4.40853847318221E-6	DEFECT
/*             * Precedence: manifestFile wins over inline manifest,             * over manifests read from the filesets over the original             * manifest.             *             * merge with null argument is a no-op             */	WITHOUT_CLASSIFICATION	0.9999999283611959	WITHOUT_CLASSIFICATION	7.163880416721371E-8	DEFECT
// filesets are separate from the rest for performance // reasons.  If we use the code for union below, we'll always // scan all filesets, even if we know the target is out of // date after the first test.	WITHOUT_CLASSIFICATION	0.999999999966862	WITHOUT_CLASSIFICATION	3.3138012645844506E-11	DEFECT
// If the archive is built for the first time and it is // matched by a resource collection, then it hasn't been // found in check (it hasn't been there) but will be // included now. // // for some strange reason the old code would simply skip // the entry and not fail, do the same now for backwards // compatibility reasons.  Without this, the which4j build // fails in Gump	WITHOUT_CLASSIFICATION	0.99995742446124	WITHOUT_CLASSIFICATION	4.257553875995788E-5	DEFECT
// preserve permissions	WITHOUT_CLASSIFICATION	0.9999995478212058	WITHOUT_CLASSIFICATION	4.5217879425575285E-7	DEFECT
// override permissions if set explicitly	WITHOUT_CLASSIFICATION	0.9999837728987818	WITHOUT_CLASSIFICATION	1.6227101218197126E-5	DEFECT
// Check if we can contact the URL	WITHOUT_CLASSIFICATION	0.9999997303370357	WITHOUT_CLASSIFICATION	2.6966296428071916E-7	DEFECT
// // Instance //	WITHOUT_CLASSIFICATION	0.9999994435531173	WITHOUT_CLASSIFICATION	5.564468826179107E-7	DEFECT
//the Exec OS check is different from Os.isOs(), which //probes for a specific OS. Instead it searches the os field //for the current os.name	WITHOUT_CLASSIFICATION	0.9999999324889267	WITHOUT_CLASSIFICATION	6.751107334233708E-8	DEFECT
// Similar to a fileset, but doesn't allow dir attribute to be set	WITHOUT_CLASSIFICATION	0.9999975492581372	WITHOUT_CLASSIFICATION	2.4507418628108207E-6	DEFECT
// If the destination directory didn't already exist, // or was empty, then no previous file removal is necessary!	WITHOUT_CLASSIFICATION	0.99999996109475	WITHOUT_CLASSIFICATION	3.8905250073547543E-8	DEFECT
// Default the viewpath to basedir if it is not specified	WITHOUT_CLASSIFICATION	0.9999978932549702	WITHOUT_CLASSIFICATION	2.1067450297648897E-6	DEFECT
// preserveInTarget would find all files we want to keep, // but we need to find all that we want to delete - so the // meaning of all patterns and selectors must be inverted	WITHOUT_CLASSIFICATION	0.9999999946868594	WITHOUT_CLASSIFICATION	5.313140565689176E-9	DEFECT
//On VMS platform, we need to create a special java options file //containing the arguments and classpath for the java command. //The special file is supported by the "-V" switch on the VMS JVM.	WITHOUT_CLASSIFICATION	0.9999999775676081	WITHOUT_CLASSIFICATION	2.2432391869537823E-8	DEFECT
// Do nothing if no resources (including nested text)	WITHOUT_CLASSIFICATION	0.9999995314058178	WITHOUT_CLASSIFICATION	4.685941823197392E-7	DEFECT
// Windows has a 32k limit on total arg size, so // create a temporary file to store all the arguments	WITHOUT_CLASSIFICATION	0.9999996308638458	WITHOUT_CLASSIFICATION	3.6913615424595916E-7	DEFECT
// filesets has been protected so we need to keep that even after // switching to resource collections.  In fact, they will still // get a different treatment form the other resource collections // even in execute since we have some subtle special features like // switching type to "dir" when we encounter a DirSet that would // be more difficult to achieve otherwise.	WITHOUT_CLASSIFICATION	0.9999926815845559	WITHOUT_CLASSIFICATION	7.318415444079686E-6	DEFECT
// need to reset the stream handler to restart // reading of pipes; // go ahead and do it always w/ nested redirectors	WITHOUT_CLASSIFICATION	0.9999999366212726	WITHOUT_CLASSIFICATION	6.337872731732899E-8	DEFECT
/*             * if we get here, in and out have not been specified, we are             * in batch processing mode.             */	WITHOUT_CLASSIFICATION	0.9999999858832345	WITHOUT_CLASSIFICATION	1.4116765577277224E-8	DEFECT
//at this point there is one trailing space to remove, if the list is not empty.	WITHOUT_CLASSIFICATION	0.9999963528083716	WITHOUT_CLASSIFICATION	3.647191628453298E-6	DEFECT
// Ignore and keep trying	WITHOUT_CLASSIFICATION	0.9999997634528036	WITHOUT_CLASSIFICATION	2.3654719629891383E-7	DEFECT
// Chunk part of previous env var (UNIX env vars can // contain embedded new lines).	WITHOUT_CLASSIFICATION	0.9999978310253295	WITHOUT_CLASSIFICATION	2.1689746704644537E-6	DEFECT
// Since we "look ahead" before adding, there's one last env var.	WITHOUT_CLASSIFICATION	0.9999994172743345	WITHOUT_CLASSIFICATION	5.82725665573056E-7	DEFECT
//noop default encoding used	WITHOUT_CLASSIFICATION	0.999999974414881	WITHOUT_CLASSIFICATION	2.5585119011718372E-8	DEFECT
// On OpenVMS Runtime#exec() doesn't support the environment array, // so we only return the new values which then will be set in // the generated DCL script, inheriting the parent process environment	WITHOUT_CLASSIFICATION	0.9998340638657416	WITHOUT_CLASSIFICATION	1.659361342584156E-4	DEFECT
// Locate the auxiliary script	WITHOUT_CLASSIFICATION	0.9999998992123248	WITHOUT_CLASSIFICATION	1.007876752546554E-7	DEFECT
// Build the command	WITHOUT_CLASSIFICATION	0.9999241128692076	WITHOUT_CLASSIFICATION	7.588713079238356E-5	DEFECT
/*         * Writes the command into a temporary DCL script and returns the         * corresponding File object.  The script will be deleted on exit.         * @param cmd the command line to execute as an array of strings.         * @param env the environment to set as an array of strings.         * @return the command File.         * @throws IOException if errors are encountered creating the file.         */	WITHOUT_CLASSIFICATION	0.999994805919125	WITHOUT_CLASSIFICATION	5.19408087495375E-6	DEFECT
//************************************************************************ //  protected and private methods //************************************************************************	WITHOUT_CLASSIFICATION	0.999966099403169	WITHOUT_CLASSIFICATION	3.3900596830896625E-5	DEFECT
// ensure that parent dir of dest file exists!	WITHOUT_CLASSIFICATION	0.9999953924086855	WITHOUT_CLASSIFICATION	4.6075913145844E-6	DEFECT
// add the single group arguments // Javadoc 1.2 rules: //   Multiple -group args allowed. //   Each arg includes 3 strings: -group [name] [packagelist]. //   Elements in [packagelist] are colon-delimited. //   An element in [packagelist] may end with the * wildcard.	WITHOUT_CLASSIFICATION	0.9999994254676652	WITHOUT_CLASSIFICATION	5.745323347806736E-7	DEFECT
// for each sourcePath entry, add a directoryset with includes // taken from packagenames attribute and nested package // elements and excludes taken from excludepackages attribute // and nested excludepackage elements	WITHOUT_CLASSIFICATION	0.9999989738381557	WITHOUT_CLASSIFICATION	1.026161844200625E-6	DEFECT
// // Override the logging of output in order to filter out Generating // messages.  Generating messages are set to a priority of VERBOSE // unless they appear after what could be an informational message. //	WITHOUT_CLASSIFICATION	0.9999999315269155	WITHOUT_CLASSIFICATION	6.847308457124345E-8	DEFECT
/* Methods below all add specific selectors */	WITHOUT_CLASSIFICATION	0.9999999452060611	WITHOUT_CLASSIFICATION	5.479393894903947E-8	DEFECT
/* Methods below all add specific selectors */	WITHOUT_CLASSIFICATION	0.9999999452060611	WITHOUT_CLASSIFICATION	5.479393894903947E-8	DEFECT
/* Methods below all add specific selectors */	WITHOUT_CLASSIFICATION	0.9999999452060611	WITHOUT_CLASSIFICATION	5.479393894903947E-8	DEFECT
/*               If verbosity is MSG_VERBOSE, that mean we are doing               regular logging (backwards as that sounds).  In that               case, we want to print one message about deleting the               top of the directory tree.  Otherwise, the removeDir               method will handle messages for _all_ directories.             */	WITHOUT_CLASSIFICATION	0.9999999966753021	WITHOUT_CLASSIFICATION	3.3246979557171056E-9	DEFECT
//hand down	WITHOUT_CLASSIFICATION	0.9999868010439821	WITHOUT_CLASSIFICATION	1.3198956017850289E-5	DEFECT
// create intermediary directories - sometimes zip don't add them	WITHOUT_CLASSIFICATION	0.9999999251315748	WITHOUT_CLASSIFICATION	7.48684251362723E-8	DEFECT
// SQL defines "--" as a comment to EOL // and in Oracle it may contain a hint // so we cannot just remove it, instead we must end it	WITHOUT_CLASSIFICATION	0.999999985786407	WITHOUT_CLASSIFICATION	1.4213592989997237E-8	DEFECT
/*         * In Ant 1.1, <chmod dir="foo" /> means, change the permissions         * of directory foo, not anything inside of it.  This is the case the         * second branch of the if statement below catches for backwards         * compatibility.         */	WITHOUT_CLASSIFICATION	0.9999974557256852	WITHOUT_CLASSIFICATION	2.5442743146837556E-6	DEFECT
/* for historical and performance reasons we have to do               things in a rather complex way.               (1) Move is optimized to move directories if a fileset               has been included completely, therefore FileSets need a               special treatment.  This is also required to support               the failOnError semantice (skip filesets with broken               basedir but handle the remaining collections).               (2) We carry around a few protected methods that work               on basedirs and arrays of names.  To optimize stuff, all               resources with the same basedir get collected in               separate lists and then each list is handled in one go.            */	WITHOUT_CLASSIFICATION	0.9907075832147222	WITHOUT_CLASSIFICATION	0.009292416785277705	DEFECT
//we create a fileset with the source file. //this lets us combine our logic for handling output directories, //mapping etc.	WITHOUT_CLASSIFICATION	0.9999999828646813	WITHOUT_CLASSIFICATION	1.713531873785416E-8	DEFECT
// if input files are specified, inputString and inputStream are ignored; // classes that work with redirector attributes can enforce // whatever warnings are needed	WITHOUT_CLASSIFICATION	0.9999996358859484	WITHOUT_CLASSIFICATION	3.641140516195369E-7	DEFECT
// Ignore exception	WITHOUT_CLASSIFICATION	0.999999269263452	WITHOUT_CLASSIFICATION	7.307365480456664E-7	DEFECT
// Ignore exception	WITHOUT_CLASSIFICATION	0.999999269263452	WITHOUT_CLASSIFICATION	7.307365480456664E-7	DEFECT
// Ignore exception	WITHOUT_CLASSIFICATION	0.999999269263452	WITHOUT_CLASSIFICATION	7.307365480456664E-7	DEFECT
// classpath attributes go into a vector	WITHOUT_CLASSIFICATION	0.9999987815346456	WITHOUT_CLASSIFICATION	1.2184653543973147E-6	DEFECT
// we have already started reading this section // this line is the first attribute. set it and then // let the normal read handle the rest	WITHOUT_CLASSIFICATION	0.999999995554767	WITHOUT_CLASSIFICATION	4.445232942975822E-9	DEFECT
//not modified so no file download. just return //instead and trace out something so the user //doesn't think that the download happened when it //didn't	WITHOUT_CLASSIFICATION	0.9999999698727224	WITHOUT_CLASSIFICATION	3.012727757120026E-8	DEFECT
// we have started to (over)write dest, but failed. // Try to delete the garbage we'd otherwise leave // behind.	WITHOUT_CLASSIFICATION	0.9999998635974977	WITHOUT_CLASSIFICATION	1.3640250227775116E-7	DEFECT
// start() would throw IllegalThreadStateException from // ThreadGroup.add if it were destroyed	WITHOUT_CLASSIFICATION	0.9999993337551768	WITHOUT_CLASSIFICATION	6.662448232368387E-7	DEFECT
// kjc-1.5A doesn't support -encoding option now. // but it will be supported near the feature.	WITHOUT_CLASSIFICATION	0.9991880044821915	WITHOUT_CLASSIFICATION	8.119955178085081E-4	DEFECT
// Create an instance of the compiler, redirecting output to // the project log	WITHOUT_CLASSIFICATION	0.9999975233616932	WITHOUT_CLASSIFICATION	2.4766383066767594E-6	DEFECT
// Setup the apt executable	WITHOUT_CLASSIFICATION	0.9999990790466814	WITHOUT_CLASSIFICATION	9.209533187095114E-7	DEFECT
//On VMS platform, we need to create a special java options file //containing the arguments and classpath for the javac command. //The special file is supported by the "-V" switch on the VMS JVM.	WITHOUT_CLASSIFICATION	0.9999999815923213	WITHOUT_CLASSIFICATION	1.840767873228926E-8	DEFECT
//must keep for subclass BC, though unused: // CheckStyle:ConstantNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9999971080215277	WITHOUT_CLASSIFICATION	2.891978472281663E-6	DEFECT
// CheckStyle:ConstantNameCheck ON // CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999882939378	WITHOUT_CLASSIFICATION	1.1706062252228547E-8	DEFECT
// add dest dir to classpath so that previously compiled and // untouched classes are on classpath	WITHOUT_CLASSIFICATION	0.9999999827842907	WITHOUT_CLASSIFICATION	1.7215709214562664E-8	DEFECT
// add dest dir to classpath so that previously compiled and // untouched classes are on classpath	WITHOUT_CLASSIFICATION	0.9999999827842907	WITHOUT_CLASSIFICATION	1.7215709214562664E-8	DEFECT
// For -sourcepath, use the "sourcepath" value if present. // Otherwise default to the "srcdir" value.	WITHOUT_CLASSIFICATION	0.9999999988868948	WITHOUT_CLASSIFICATION	1.1131052057537929E-9	DEFECT
/*             * Many system have been reported to get into trouble with             * long command lines - no, not only Windows ;-).             *             * POSIX seems to define a lower limit of 4k, so use a temporary             * file if the total length of the command line exceeds this limit.             */	WITHOUT_CLASSIFICATION	0.9992524014035508	WITHOUT_CLASSIFICATION	7.475985964492219E-4	DEFECT
// there is a bootclasspath stated.  By default, the // includeJavaRuntime is false.  If the user has stated a // bootclasspath and said to include the java runtime, it's on // their head!	WITHOUT_CLASSIFICATION	0.9999947106648602	WITHOUT_CLASSIFICATION	5.289335139759498E-6	DEFECT
//The following is data used while processing stdout of CVS command	WITHOUT_CLASSIFICATION	0.999998998659371	WITHOUT_CLASSIFICATION	1.0013406289851006E-6	DEFECT
// The date format is using a - format since 1.12.9 so we have: // 1.12.9-: 'date: YYYY/mm/dd HH:mm:ss;  author: name;' // 1.12.9+: 'date: YYYY-mm-dd HH:mm:ss Z;  author: name'	WITHOUT_CLASSIFICATION	0.9999877850319716	WITHOUT_CLASSIFICATION	1.221496802849099E-5	DEFECT
// Default the viewpath to basedir if it is not specified	WITHOUT_CLASSIFICATION	0.9999978932549702	WITHOUT_CLASSIFICATION	2.1067450297648897E-6	DEFECT
// Default the viewpath to basedir if it is not specified	WITHOUT_CLASSIFICATION	0.9999978932549702	WITHOUT_CLASSIFICATION	2.1067450297648897E-6	DEFECT
// viewpath	WITHOUT_CLASSIFICATION	0.9999976834600826	WITHOUT_CLASSIFICATION	2.316539917415587E-6	DEFECT
// ClearCase items	WITHOUT_CLASSIFICATION	0.9999998597272459	WITHOUT_CLASSIFICATION	1.4027275401730558E-7	DEFECT
// ClearCase items	WITHOUT_CLASSIFICATION	0.9999998597272459	WITHOUT_CLASSIFICATION	1.4027275401730558E-7	DEFECT
// -branch	WITHOUT_CLASSIFICATION	0.9999988709580548	WITHOUT_CLASSIFICATION	1.129041945171339E-6	DEFECT
// -c	WITHOUT_CLASSIFICATION	0.9999905162072189	WITHOUT_CLASSIFICATION	9.483792781081416E-6	DEFECT
// entries are of the form: //CVS 1.11 // File module/filename is new; current revision 1.1 //CVS 1.11.9 // File module/filename is new; cvstag_2003_11_03_2  revision 1.1 // or // File module/filename changed from revision 1.4 to 1.6 // or // File module/filename is removed; not included in // release tag SKINLF_12 //CVS 1.11.9 // File testantoine/antoine.bat is removed; TESTANTOINE_1 revision 1.1.1.1 // // get rid of 'File module/"	WITHOUT_CLASSIFICATION	0.9999998459841719	WITHOUT_CLASSIFICATION	1.5401582798916166E-7	DEFECT
// CheckStyle:MemberNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9999993468315892	WITHOUT_CLASSIFICATION	6.531684109342837E-7	DEFECT
// We need character encoding aware printing here. // So, using PrintWriter over OutputStreamWriter instead of PrintStream	WITHOUT_CLASSIFICATION	0.9999990679226427	WITHOUT_CLASSIFICATION	9.320773572744033E-7	DEFECT
// convert from ascii back to native // encoding to convert to/from // Where to find input files // Where to put output files // Extension of output files if different	WITHOUT_CLASSIFICATION	0.9999884058970993	WITHOUT_CLASSIFICATION	1.1594102900854642E-5	DEFECT
// we are forced to fork ANTLR since there is a call // to System.exit() and there is nothing we can do // right now to avoid this. :-( (SBa) // I'm not removing this method to keep backward compatibility	WITHOUT_CLASSIFICATION	0.9999948891724882	WITHOUT_CLASSIFICATION	5.110827511715683E-6	DEFECT
//error if both are empty, or both are set	WITHOUT_CLASSIFICATION	0.9999998519064798	WITHOUT_CLASSIFICATION	1.4809352015790678E-7	DEFECT
// hasCR is still true (for the second one)	WITHOUT_CLASSIFICATION	0.9999759048917488	WITHOUT_CLASSIFICATION	2.40951082511664E-5	DEFECT
// should be the default, as it integrates better in ant.	WITHOUT_CLASSIFICATION	0.9999998398415852	WITHOUT_CLASSIFICATION	1.6015841478933522E-7	DEFECT
// scan source and dest dirs to build up both copy lists and // compile lists //        scanDir(srcDir, destDir);	WITHOUT_CLASSIFICATION	0.9999999557729947	WITHOUT_CLASSIFICATION	4.4227005338051625E-8	DEFECT
// if it's a non source file, copy it if a later date than the // dest // if it's a source file, see if the destination class file // needs to be recreated via compilation	WITHOUT_CLASSIFICATION	0.9999999078223947	WITHOUT_CLASSIFICATION	9.217760530956258E-8	DEFECT
// depending on implementation, XMLReader can yield hips of warning, // only output then if user explicitly asked for it	WITHOUT_CLASSIFICATION	0.9999426620425104	WITHOUT_CLASSIFICATION	5.733795748972153E-5	DEFECT
/* ========================================================================    *    * Instance variables.    */	WITHOUT_CLASSIFICATION	0.9999998870720012	WITHOUT_CLASSIFICATION	1.1292799881960264E-7	DEFECT
// swallow	WITHOUT_CLASSIFICATION	0.9999942438129158	WITHOUT_CLASSIFICATION	5.756187084163846E-6	DEFECT
// swallow	WITHOUT_CLASSIFICATION	0.9999942438129158	WITHOUT_CLASSIFICATION	5.756187084163846E-6	DEFECT
// swallow	WITHOUT_CLASSIFICATION	0.9999942438129158	WITHOUT_CLASSIFICATION	5.756187084163846E-6	DEFECT
// swallow	WITHOUT_CLASSIFICATION	0.9999942438129158	WITHOUT_CLASSIFICATION	5.756187084163846E-6	DEFECT
// If only default is specified and the property previously // existed in the property file, it is unchanged.	WITHOUT_CLASSIFICATION	0.9999997776204484	WITHOUT_CLASSIFICATION	2.2237955162823502E-7	DEFECT
// make sure to close all handles, otherwise the garbage // collector will close them...whenever possible and // Windows may complain about not being able to delete files.	WITHOUT_CLASSIFICATION	0.9999985303198746	WITHOUT_CLASSIFICATION	1.4696801252854006E-6	DEFECT
// WARN: Don't use the StreamSource(File) ctor. It won't work with // xalan prior to 2.2 because of systemid bugs.	WITHOUT_CLASSIFICATION	0.6393052925521857	WITHOUT_CLASSIFICATION	0.3606947074478143	DEFECT
// build the command line from what we got the format // as specified in the CCM.EXE help	WITHOUT_CLASSIFICATION	0.9999994095950818	WITHOUT_CLASSIFICATION	5.904049181063456E-7	DEFECT
// implementation of org.apache.tools.ant.taskdefs.ExecuteStreamHandler interface	WITHOUT_CLASSIFICATION	0.9999997381976963	WITHOUT_CLASSIFICATION	2.618023037415335E-7	DEFECT
// Default the viewpath to basedir if it is not specified	WITHOUT_CLASSIFICATION	0.9999978932549702	WITHOUT_CLASSIFICATION	2.1067450297648897E-6	DEFECT
// Default the viewpath to basedir if it is not specified	WITHOUT_CLASSIFICATION	0.9999978932549702	WITHOUT_CLASSIFICATION	2.1067450297648897E-6	DEFECT
// Default the viewpath to basedir if it is not specified	WITHOUT_CLASSIFICATION	0.9999978932549702	WITHOUT_CLASSIFICATION	2.1067450297648897E-6	DEFECT
// Default the viewpath to basedir if it is not specified	WITHOUT_CLASSIFICATION	0.9999978932549702	WITHOUT_CLASSIFICATION	2.1067450297648897E-6	DEFECT
/*         * pre Ant 1.6 this method used to call getClass().getResource         * while Ant 1.6 will call ClassLoader.getResource().         *         * The difference is that Class.getResource expects a leading         * slash for "absolute" resources and will strip it before         * delegating to ClassLoader.getResource - so we now have to         * emulate Class's behavior.         */	WITHOUT_CLASSIFICATION	0.9999999945646819	WITHOUT_CLASSIFICATION	5.435318130984662E-9	DEFECT
// -c	WITHOUT_CLASSIFICATION	0.9999905162072189	WITHOUT_CLASSIFICATION	9.483792781081416E-6	DEFECT
// -cfile	WITHOUT_CLASSIFICATION	0.9999980878535218	WITHOUT_CLASSIFICATION	1.9121464781825963E-6	DEFECT
// -cfile	WITHOUT_CLASSIFICATION	0.9999980878535218	WITHOUT_CLASSIFICATION	1.9121464781825963E-6	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999874056363424	WITHOUT_CLASSIFICATION	1.2594363657753147E-5	DEFECT
/* ------------- */	WITHOUT_CLASSIFICATION	0.9999780617975018	WITHOUT_CLASSIFICATION	2.193820249825295E-5	DEFECT
// -I- or -I-Y or -I-N	WITHOUT_CLASSIFICATION	0.9999925366239595	WITHOUT_CLASSIFICATION	7.46337604049399E-6	DEFECT
// -I- or -I-Y or -I-N	WITHOUT_CLASSIFICATION	0.9999925366239595	WITHOUT_CLASSIFICATION	7.46337604049399E-6	DEFECT
// -I- or -I-Y or -I-N	WITHOUT_CLASSIFICATION	0.9999925366239595	WITHOUT_CLASSIFICATION	7.46337604049399E-6	DEFECT
// first off, make sure that we've got a command and a vssdir and a label ...	WITHOUT_CLASSIFICATION	0.9999923794201356	WITHOUT_CLASSIFICATION	7.620579864356415E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999209490427	WITHOUT_CLASSIFICATION	7.905095730336347E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999209490427	WITHOUT_CLASSIFICATION	7.905095730336347E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999209490427	WITHOUT_CLASSIFICATION	7.905095730336347E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999209490427	WITHOUT_CLASSIFICATION	7.905095730336347E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999209490427	WITHOUT_CLASSIFICATION	7.905095730336347E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999209490427	WITHOUT_CLASSIFICATION	7.905095730336347E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999209490427	WITHOUT_CLASSIFICATION	7.905095730336347E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999209490427	WITHOUT_CLASSIFICATION	7.905095730336347E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999209490427	WITHOUT_CLASSIFICATION	7.905095730336347E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999209490427	WITHOUT_CLASSIFICATION	7.905095730336347E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999209490427	WITHOUT_CLASSIFICATION	7.905095730336347E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999209490427	WITHOUT_CLASSIFICATION	7.905095730336347E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999209490427	WITHOUT_CLASSIFICATION	7.905095730336347E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999209490427	WITHOUT_CLASSIFICATION	7.905095730336347E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999209490427	WITHOUT_CLASSIFICATION	7.905095730336347E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999209490427	WITHOUT_CLASSIFICATION	7.905095730336347E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999209490427	WITHOUT_CLASSIFICATION	7.905095730336347E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999209490427	WITHOUT_CLASSIFICATION	7.905095730336347E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999209490427	WITHOUT_CLASSIFICATION	7.905095730336347E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999209490427	WITHOUT_CLASSIFICATION	7.905095730336347E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999209490427	WITHOUT_CLASSIFICATION	7.905095730336347E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999209490427	WITHOUT_CLASSIFICATION	7.905095730336347E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999209490427	WITHOUT_CLASSIFICATION	7.905095730336347E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999209490427	WITHOUT_CLASSIFICATION	7.905095730336347E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999209490427	WITHOUT_CLASSIFICATION	7.905095730336347E-8	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999874056363424	WITHOUT_CLASSIFICATION	1.2594363657753147E-5	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999874056363424	WITHOUT_CLASSIFICATION	1.2594363657753147E-5	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999874056363424	WITHOUT_CLASSIFICATION	1.2594363657753147E-5	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999874056363424	WITHOUT_CLASSIFICATION	1.2594363657753147E-5	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999874056363424	WITHOUT_CLASSIFICATION	1.2594363657753147E-5	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999874056363424	WITHOUT_CLASSIFICATION	1.2594363657753147E-5	DEFECT
/* -------------------- */	WITHOUT_CLASSIFICATION	0.9999859304828134	WITHOUT_CLASSIFICATION	1.406951718672585E-5	DEFECT
// -Y	WITHOUT_CLASSIFICATION	0.9999872444818424	WITHOUT_CLASSIFICATION	1.2755518157569098E-5	DEFECT
// -Y	WITHOUT_CLASSIFICATION	0.9999872444818424	WITHOUT_CLASSIFICATION	1.2755518157569098E-5	DEFECT
// -Y	WITHOUT_CLASSIFICATION	0.9999872444818424	WITHOUT_CLASSIFICATION	1.2755518157569098E-5	DEFECT
// VSS items	WITHOUT_CLASSIFICATION	0.9999983963549636	WITHOUT_CLASSIFICATION	1.6036450364444224E-6	DEFECT
// VSS items	WITHOUT_CLASSIFICATION	0.9999983963549636	WITHOUT_CLASSIFICATION	1.6036450364444224E-6	DEFECT
// skip version info and general purpose byte	WITHOUT_CLASSIFICATION	0.9999997893704721	WITHOUT_CLASSIFICATION	2.1062952787902645E-7	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999874056363424	WITHOUT_CLASSIFICATION	1.2594363657753147E-5	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999874056363424	WITHOUT_CLASSIFICATION	1.2594363657753147E-5	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999874056363424	WITHOUT_CLASSIFICATION	1.2594363657753147E-5	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999874056363424	WITHOUT_CLASSIFICATION	1.2594363657753147E-5	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999874056363424	WITHOUT_CLASSIFICATION	1.2594363657753147E-5	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999874056363424	WITHOUT_CLASSIFICATION	1.2594363657753147E-5	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999874056363424	WITHOUT_CLASSIFICATION	1.2594363657753147E-5	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999874056363424	WITHOUT_CLASSIFICATION	1.2594363657753147E-5	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999874056363424	WITHOUT_CLASSIFICATION	1.2594363657753147E-5	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999874056363424	WITHOUT_CLASSIFICATION	1.2594363657753147E-5	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999874056363424	WITHOUT_CLASSIFICATION	1.2594363657753147E-5	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999874056363424	WITHOUT_CLASSIFICATION	1.2594363657753147E-5	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999874056363424	WITHOUT_CLASSIFICATION	1.2594363657753147E-5	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999874056363424	WITHOUT_CLASSIFICATION	1.2594363657753147E-5	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999874056363424	WITHOUT_CLASSIFICATION	1.2594363657753147E-5	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999874056363424	WITHOUT_CLASSIFICATION	1.2594363657753147E-5	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999874056363424	WITHOUT_CLASSIFICATION	1.2594363657753147E-5	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999874056363424	WITHOUT_CLASSIFICATION	1.2594363657753147E-5	DEFECT
// first off, make sure that we've got a command and a vssdir and a label ...	WITHOUT_CLASSIFICATION	0.9999923794201356	WITHOUT_CLASSIFICATION	7.620579864356415E-6	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999874056363424	WITHOUT_CLASSIFICATION	1.2594363657753147E-5	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999874056363424	WITHOUT_CLASSIFICATION	1.2594363657753147E-5	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999874056363424	WITHOUT_CLASSIFICATION	1.2594363657753147E-5	DEFECT
// we get the root classes and build up a set of // classes upon which they depend	WITHOUT_CLASSIFICATION	0.9999963923914749	WITHOUT_CLASSIFICATION	3.6076085250777736E-6	DEFECT
// read the constant pool in and resolve it	WITHOUT_CLASSIFICATION	0.9999981885082955	WITHOUT_CLASSIFICATION	1.8114917044580262E-6	DEFECT
/*         * Use the Runtime object to execute an external command.  Use the         * RedirectOutput inner class to direct the standard and error output         * from the command to the JRE's standard output         */	WITHOUT_CLASSIFICATION	0.9999513029506576	WITHOUT_CLASSIFICATION	4.869704934231047E-5	DEFECT
/*         * Two Maps are used to track local DTDs that will be used in case the         * remote copies of these DTDs cannot be accessed.  The key for the Map         * is the DTDs public ID and the value is the local location for the DTD         */	WITHOUT_CLASSIFICATION	0.9999998445420006	WITHOUT_CLASSIFICATION	1.5545799927695096E-7	DEFECT
// depFile exists and is newer than the class file // need to get dependency list from the map.	WITHOUT_CLASSIFICATION	0.999972277725125	WITHOUT_CLASSIFICATION	2.772227487504801E-5	DEFECT
// without closure we may delete an inner class but not the // top level class which would not trigger a recompile.	WITHOUT_CLASSIFICATION	0.9999932282883667	WITHOUT_CLASSIFICATION	6.771711633336168E-6	DEFECT
//always trigger file mode if commands are big enough	WITHOUT_CLASSIFICATION	0.9999536727735887	WITHOUT_CLASSIFICATION	4.6327226411383645E-5	DEFECT
//fill in args	WITHOUT_CLASSIFICATION	0.9999968638444967	WITHOUT_CLASSIFICATION	3.1361555033043883E-6	DEFECT
//fill in args	WITHOUT_CLASSIFICATION	0.9999968638444967	WITHOUT_CLASSIFICATION	3.1361555033043883E-6	DEFECT
//iterate through the ref list & generate an entry for each //or just rely on the fact that the toString operator does this, but //noting that the separator is ';' on windows, ':' on unix	WITHOUT_CLASSIFICATION	0.9986058510825844	WITHOUT_CLASSIFICATION	0.0013941489174156977	DEFECT
//now run the command of exe + settings + files	WITHOUT_CLASSIFICATION	0.9997158204948741	WITHOUT_CLASSIFICATION	2.841795051259065E-4	DEFECT
/*     * Directory where "source" EJB files are stored and where stubs and     * skeletons will also be written.     */	WITHOUT_CLASSIFICATION	0.999998167293691	WITHOUT_CLASSIFICATION	1.832706309018141E-6	DEFECT
/*     * This Hashtable maintains a list of EJB class files processed by the ejbc     * utility (both "source" class files as well as stubs and skeletons). The     * key for the Hashtable is a String representing the path to the class file     * (relative to the destination directory).  The value for the Hashtable is     * a File object which reference the actual class file.     */	WITHOUT_CLASSIFICATION	0.9999999999046364	WITHOUT_CLASSIFICATION	9.536361353953741E-11	DEFECT
/* Execute the ejbc utility -- stubs/skeletons are rebuilt, if needed */	WITHOUT_CLASSIFICATION	0.9999997968378489	WITHOUT_CLASSIFICATION	2.0316215109601925E-7	DEFECT
// EJB's display name // EJB's home interface name // EJB's remote interface name // EJB's implementation class // EJB's primary key class // or "stateful" or "stateless" // Does this EJB support CMP? // Does this EJB support IIOP? // Does this EJB require failover? // CMP descriptor list	WITHOUT_CLASSIFICATION	0.9975895851144727	WITHOUT_CLASSIFICATION	0.0024104148855271785	DEFECT
/* Check the timestamp on the EJB implementation class.             *             * Note that if ONLY the implementation class has changed, it's not             * necessary to rebuild the EJB stubs and skeletons.  For this             * reason, we ensure the file exists (using lastModified above), but             * we DON'T compare it's timestamp with the timestamps of the home             * and remote interfaces (because it's irrelevant in determining if             * ejbc must be run)             */	WITHOUT_CLASSIFICATION	0.9999999945860366	WITHOUT_CLASSIFICATION	5.413963351538607E-9	DEFECT
//classpath //add at the end of the classpath //the system classpath in order to find the tools.jar file	WITHOUT_CLASSIFICATION	0.9999953162513872	WITHOUT_CLASSIFICATION	4.683748612832708E-6	DEFECT
// ejb jar file	WITHOUT_CLASSIFICATION	0.99999989101268	WITHOUT_CLASSIFICATION	1.0898731992270973E-7	DEFECT
//client jar file	WITHOUT_CLASSIFICATION	0.9999999282841995	WITHOUT_CLASSIFICATION	7.171580048512423E-8	DEFECT
// Have to catch this because of the semantics of calling main()	WITHOUT_CLASSIFICATION	0.9999945101483764	WITHOUT_CLASSIFICATION	5.4898516235535954E-6	DEFECT
/* ------------- */	WITHOUT_CLASSIFICATION	0.9999780617975018	WITHOUT_CLASSIFICATION	2.193820249825295E-5	DEFECT
/* ------------- */	WITHOUT_CLASSIFICATION	0.9999780617975018	WITHOUT_CLASSIFICATION	2.193820249825295E-5	DEFECT
// descriptorName = <path><basename><basenameterminator><remainder> // examples = /org/objectweb/fooAppli/foo/Foo-ejb-jar.xml // examples = /org/objectweb/fooAppli/foo/Foo.xml (JOnAS convention)	WITHOUT_CLASSIFICATION	0.9999937960673416	WITHOUT_CLASSIFICATION	6.203932658405041E-6	DEFECT
// class name (search in the classpath provided for the ejbjar element)	WITHOUT_CLASSIFICATION	0.9999851383218743	WITHOUT_CLASSIFICATION	1.4861678125706405E-5	DEFECT
// additionalargs	WITHOUT_CLASSIFICATION	0.9999960046890463	WITHOUT_CLASSIFICATION	3.995310953793722E-6	DEFECT
// get all the files in the descriptor directory	WITHOUT_CLASSIFICATION	0.9999975822913363	WITHOUT_CLASSIFICATION	2.4177086636880257E-6	DEFECT
// If an explicit securityPolicy file was specified, it maybe an // absolute path.  Use the project to resolve it.	WITHOUT_CLASSIFICATION	0.9999993511484939	WITHOUT_CLASSIFICATION	6.488515060948591E-7	DEFECT
// Since the descriptor read properly, everything should be o.k.	WITHOUT_CLASSIFICATION	0.9999988000428203	WITHOUT_CLASSIFICATION	1.1999571797307749E-6	DEFECT
// Lastly create File object for the Jar files. If we are using // a flat destination dir, then we need to redefine baseName!	WITHOUT_CLASSIFICATION	0.9999999924576691	WITHOUT_CLASSIFICATION	7.542330835383304E-9	DEFECT
/*         * For the GenericDeploymentTool, do nothing.  Vendor specific         * subclasses should throw a BuildException if the configuration is         * invalid for their server.         */	WITHOUT_CLASSIFICATION	0.9999999900707635	WITHOUT_CLASSIFICATION	9.9292365020446E-9	DEFECT
// Get the filename of vendor specific descriptor	WITHOUT_CLASSIFICATION	0.9999999800440408	WITHOUT_CLASSIFICATION	1.995595925245775E-8	DEFECT
// now that we have the weblogic descriptor, we parse the file // to find other descriptors needed to deploy the bean. // this could be the weblogic-cmp-rdbms.xml or any other O/R // mapping tool descriptors.	WITHOUT_CLASSIFICATION	0.9999951710624534	WITHOUT_CLASSIFICATION	4.8289375466120195E-6	DEFECT
// Update with changed Bean class	WITHOUT_CLASSIFICATION	0.9999726442931006	WITHOUT_CLASSIFICATION	2.7355706899465296E-5	DEFECT
// need to close files and perhaps rename output	WITHOUT_CLASSIFICATION	0.9999996377975872	WITHOUT_CLASSIFICATION	3.622024128916886E-7	DEFECT
// empty	WITHOUT_CLASSIFICATION	0.9999962941923679	WITHOUT_CLASSIFICATION	3.7058076320617287E-6	DEFECT
// empty	WITHOUT_CLASSIFICATION	0.9999962941923679	WITHOUT_CLASSIFICATION	3.7058076320617287E-6	DEFECT
// are any of the above out of date. // we find the implementation classes and see if they are older than any // of the above or the .ser file itself.	WITHOUT_CLASSIFICATION	0.99999991714136	WITHOUT_CLASSIFICATION	8.285863999766466E-8	DEFECT
/*     * Filenames of the standard EJB descriptor (which is passed to this class     * from the parent "ejbjar" task) and the iAS-specific EJB descriptor     * (whose name is determined by this class).  Both filenames are relative     * to the directory specified by the "srcdir" attribute in the ejbjar task.     */	WITHOUT_CLASSIFICATION	0.9999999622055589	WITHOUT_CLASSIFICATION	3.7794441088973796E-8	DEFECT
//remove the .class	WITHOUT_CLASSIFICATION	0.9999939168334958	WITHOUT_CLASSIFICATION	6.0831665042232034E-6	DEFECT
// create the output .jar, if required	WITHOUT_CLASSIFICATION	0.9999991870810281	WITHOUT_CLASSIFICATION	8.129189720367353E-7	DEFECT
// change this to get the objects from the other reference	WITHOUT_CLASSIFICATION	0.999999765348616	WITHOUT_CLASSIFICATION	2.3465138401661063E-7	DEFECT
// Available specification version must be >= required	WITHOUT_CLASSIFICATION	0.9999999242491947	WITHOUT_CLASSIFICATION	7.575080523369926E-8	DEFECT
// Implementation version must be >= required	WITHOUT_CLASSIFICATION	0.9999971703121199	WITHOUT_CLASSIFICATION	2.8296878801141583E-6	DEFECT
//WARNING: We trim the values of all the attributes because //Some extension declarations are badly defined (ie have spaces //after version or vendorID)	WITHOUT_CLASSIFICATION	0.9998622574942867	WITHOUT_CLASSIFICATION	1.3774250571322173E-4	DEFECT
/*     * Validates URL     */	WITHOUT_CLASSIFICATION	0.9999998636989209	WITHOUT_CLASSIFICATION	1.3630107909053577E-7	DEFECT
// the new value, this needs to be here // because it is required to calculate the next position to // search from at the end of the loop	WITHOUT_CLASSIFICATION	0.9793355239268658	WITHOUT_CLASSIFICATION	0.020664476073134243	DEFECT
// iterator through all the files and process them.	WITHOUT_CLASSIFICATION	0.9999999917573316	WITHOUT_CLASSIFICATION	8.242668355712403E-9	DEFECT
// keys to optional attributes	WITHOUT_CLASSIFICATION	0.9999998977267528	WITHOUT_CLASSIFICATION	1.0227324722166823E-7	DEFECT
// use the directory containing the target as the output directory	WITHOUT_CLASSIFICATION	0.9999999998589253	WITHOUT_CLASSIFICATION	1.4107465113155197E-10	DEFECT
// null watchdog means no timeout, you'd better not check with null	WITHOUT_CLASSIFICATION	0.9999992942570946	WITHOUT_CLASSIFICATION	7.057429054293161E-7	DEFECT
/*         * pre Ant 1.6 this method used to call getClass().getResource         * while Ant 1.6 will call ClassLoader.getResource().         *         * The difference is that Class.getResource expects a leading         * slash for "absolute" resources and will strip it before         * delegating to ClassLoader.getResource - so we now have to         * emulate Class's behavior.         */	WITHOUT_CLASSIFICATION	0.9999999945646819	WITHOUT_CLASSIFICATION	5.435318130984662E-9	DEFECT
// this comment extract from JUnit Task may also apply here // "in VM is not very nice since it could probably hang the // whole build. IMHO this method should be avoided and it would be best // to remove it in future versions. TBD. (SBa)"	WITHOUT_CLASSIFICATION	0.8893664590795158	DEFECT	0.11063354092048416	WITHOUT_CLASSIFICATION
// not necessary as JDepend would fail, but why loose // some time?	WITHOUT_CLASSIFICATION	0.9998581536416317	WITHOUT_CLASSIFICATION	1.418463583684071E-4	DEFECT
// not necessary as JDepend would fail, but why loose // some time?	WITHOUT_CLASSIFICATION	0.9998581536416317	WITHOUT_CLASSIFICATION	1.418463583684071E-4	DEFECT
// not necessary as JDepend would fail, but why loose // some time?	WITHOUT_CLASSIFICATION	0.9998581536416317	WITHOUT_CLASSIFICATION	1.418463583684071E-4	DEFECT
//do nothing	WITHOUT_CLASSIFICATION	0.9999957247020366	WITHOUT_CLASSIFICATION	4.275297963391345E-6	DEFECT
//do nothing	WITHOUT_CLASSIFICATION	0.9999957247020366	WITHOUT_CLASSIFICATION	4.275297963391345E-6	DEFECT
//If we get here, it could be because we are trying to put a //directory entry that already exists. //For example, we're trying to write "com", but a previous //entry from another mergefile was called "com". //In that case, just ignore the error and go on to the //next entry.	WITHOUT_CLASSIFICATION	0.9999999950760875	WITHOUT_CLASSIFICATION	4.923912473540434E-9	DEFECT
/*          First, some notes.          On MRJ 2.2.2, getting the size, compressed size, and CRC32 from the          ZipInputStream does not work for compressed (deflated) files.  Those calls return -1.          For uncompressed (stored) files, those calls do work.          However, using ZipFile.getEntries() works for both compressed and          uncompressed files.          Now, from some simple testing I did, it seems that the value of CRC-32 is          independent of the compression setting. So, it should be easy to pass this          information on to the output entry.        */	WITHOUT_CLASSIFICATION	0.9858298646880832	WITHOUT_CLASSIFICATION	0.014170135311916828	DEFECT
// Quick return - no output do nothing.	WITHOUT_CLASSIFICATION	0.9999998700405822	WITHOUT_CLASSIFICATION	1.2995941773023318E-7	DEFECT
// Self-describing as of JUnit 4 (#38811). But trim "(ClassName)".	WITHOUT_CLASSIFICATION	0.9999978191472605	WITHOUT_CLASSIFICATION	2.180852739502365E-6	DEFECT
//the trick to integrating test output to the formatter, is to //create a special test class that asserts an error //and tell the formatter that it raised.	WITHOUT_CLASSIFICATION	0.999999995456173	WITHOUT_CLASSIFICATION	4.543827061538847E-9	DEFECT
// ignored.	WITHOUT_CLASSIFICATION	0.9999996698857297	WITHOUT_CLASSIFICATION	3.301142702563702E-7	DEFECT
/*         * pre Ant 1.6 this method used to call getClass().getResource         * while Ant 1.6 will call ClassLoader.getResource().         *         * The difference is that Class.getResource expects a leading         * slash for "absolute" resources and will strip it before         * delegating to ClassLoader.getResource - so we now have to         * emulate Class's behavior.         */	WITHOUT_CLASSIFICATION	0.9999999945646819	WITHOUT_CLASSIFICATION	5.435318130984662E-9	DEFECT
// okay we have a copy of the child, now the child becomes the parent // and we are iterating recursively over its children.	WITHOUT_CLASSIFICATION	0.9999997991713657	WITHOUT_CLASSIFICATION	2.0082863441057053E-7	DEFECT
// See wrapListener for reason:	WITHOUT_CLASSIFICATION	0.9999987196007599	WITHOUT_CLASSIFICATION	1.2803992400052373E-6	DEFECT
// if there is a suite method available, then try // to extract the suite from it. If there is an error // here it will be caught below and reported.	WITHOUT_CLASSIFICATION	0.9998368492427882	WITHOUT_CLASSIFICATION	1.6315075721185394E-4	DEFECT
// JUnit 4 does not distinguish between errors and failures // even in the JUnit 3 adapter. // So we need to help it a bit to retain compatibility for JUnit 3 tests.	WITHOUT_CLASSIFICATION	0.999993648294274	WITHOUT_CLASSIFICATION	6.351705726097431E-6	DEFECT
// sorted by newest Kaffe version first	WITHOUT_CLASSIFICATION	0.9999994091613994	WITHOUT_CLASSIFICATION	5.9083860062742E-7	DEFECT
//getProject().log("listing files in directory " + directory, Project.MSG_DEBUG);	WITHOUT_CLASSIFICATION	0.9999965558938867	WITHOUT_CLASSIFICATION	3.44410611327045E-6	DEFECT
// to remove directories, start by the end of the list // the trunk does not let itself be removed before the leaves	WITHOUT_CLASSIFICATION	0.9999981414186649	WITHOUT_CLASSIFICATION	1.8585813350103252E-6	DEFECT
// ignore it	WITHOUT_CLASSIFICATION	0.9999994298784108	WITHOUT_CLASSIFICATION	5.701215891894306E-7	DEFECT
// NumberFormatException or ArrayOutOfBondsException could happen here	WITHOUT_CLASSIFICATION	0.9998137772729639	WITHOUT_CLASSIFICATION	1.86222727036058E-4	DEFECT
//Throw exception on errors (except up-to-date) // //When a server is down, the code expects : //Perforce client error: //Connect to server failed; check $P4PORT. //TCP connect to localhost:1666 failed. //connect: localhost:1666: Connection refused //Some forms producing commands (p4 -s change -o) do tag the output //others don't..... //Others mark errors as info, for example edit a file //which is already open for edit..... //Just look for error: - catches most things....	WITHOUT_CLASSIFICATION	0.9999978903735102	WITHOUT_CLASSIFICATION	2.109626489830235E-6	DEFECT
// Because of the way I create the full target path, there // must be NO slash at the end of targetFolder and folderName // However, if the slash or backslash is the only character, leave it alone	WITHOUT_CLASSIFICATION	0.9999999755708187	WITHOUT_CLASSIFICATION	2.4429181354851226E-8	DEFECT
// Connect to the StarTeam server, and log on.	WITHOUT_CLASSIFICATION	0.9999999356683464	WITHOUT_CLASSIFICATION	6.433165356162355E-8	DEFECT
// Simplest constructor, uses default encryption algorithm and compression level.	WITHOUT_CLASSIFICATION	0.9999999925708661	WITHOUT_CLASSIFICATION	7.429133857076241E-9	DEFECT
// Create a variable dir that contains the name of // the StarTeam folder that is the root folder in this view. // Get the default path to the current view.	WITHOUT_CLASSIFICATION	0.9999999967274439	WITHOUT_CLASSIFICATION	3.272556148718715E-9	DEFECT
// We want to display the folder the same way you would // enter it on the command line ... so we remove the // View name (which is also the name of the root folder, // and therefore shows up at the start of the path).	WITHOUT_CLASSIFICATION	0.9999202840264165	WITHOUT_CLASSIFICATION	7.971597358344633E-5	DEFECT
// If we displayed the project, view, item type, or folder, // then show the list of relevant item properties.	WITHOUT_CLASSIFICATION	0.999999991392883	WITHOUT_CLASSIFICATION	8.607116946878871E-9	DEFECT
// If we find a "file" attribute then act on a file otherwise act on a project	WITHOUT_CLASSIFICATION	0.9999997865766845	WITHOUT_CLASSIFICATION	2.134233155179845E-7	DEFECT
// Special setters for the sub-classes	WITHOUT_CLASSIFICATION	0.999999923790513	WITHOUT_CLASSIFICATION	7.620948706378579E-8	DEFECT
// Special setters for the sub-classes	WITHOUT_CLASSIFICATION	0.999999923790513	WITHOUT_CLASSIFICATION	7.620948706378579E-8	DEFECT
// Login info is required	WITHOUT_CLASSIFICATION	0.9999631940356699	WITHOUT_CLASSIFICATION	3.680596433006325E-5	DEFECT
// Path to the SourceOffSite home directory /home/user/.sos	WITHOUT_CLASSIFICATION	0.9999999163728361	WITHOUT_CLASSIFICATION	8.362716379481368E-8	DEFECT
// Check if source is a directory	WITHOUT_CLASSIFICATION	0.9999997012279996	WITHOUT_CLASSIFICATION	2.98772000250997E-7	DEFECT
/*             *  There is a bug in JavaSound 0.90 (jdk1.3beta).             *  It prevents correct termination of the VM.             *  So we have to exit ourselves.             */	WITHOUT_CLASSIFICATION	0.9960589781718912	WITHOUT_CLASSIFICATION	0.003941021828108837	DEFECT
// Catch everything - some of the above return nulls, // throw exceptions or generally misbehave // in the event of a problem etc	WITHOUT_CLASSIFICATION	0.9999934738969605	WITHOUT_CLASSIFICATION	6.526103039509686E-6	DEFECT
// only track progress for files larger than 100kb in verbose mode	WITHOUT_CLASSIFICATION	0.9999802382090396	WITHOUT_CLASSIFICATION	1.976179096048071E-5	DEFECT
// only track progress for files larger than 100kb in verbose mode	WITHOUT_CLASSIFICATION	0.9999802382090396	WITHOUT_CLASSIFICATION	1.976179096048071E-5	DEFECT
// since filesize keeps on decreasing we have to store the // initial filesize	WITHOUT_CLASSIFICATION	0.9999999984777003	WITHOUT_CLASSIFICATION	1.5222997039013497E-9	DEFECT
// note, it's important to scan the items BEFORE we make the // UnmatchedFileMap because that creates a bunch of NEW // folders and files (unattached to repository) and we // don't want to include those in our traversal.	WITHOUT_CLASSIFICATION	0.9999999880167353	WITHOUT_CLASSIFICATION	1.1983264753310537E-8	DEFECT
// If the file doesn't pass the include/exclude tests, skip it.	WITHOUT_CLASSIFICATION	0.9999995046924524	WITHOUT_CLASSIFICATION	4.953075477183221E-7	DEFECT
// If the file doesn't pass the include/exclude tests, skip it.	WITHOUT_CLASSIFICATION	0.9999995046924524	WITHOUT_CLASSIFICATION	4.953075477183221E-7	DEFECT
// We try to update the status once to give StarTeam // another chance.	WITHOUT_CLASSIFICATION	0.9999999923954135	WITHOUT_CLASSIFICATION	7.604586566924465E-9	DEFECT
// note, it's important to scan the items BEFORE we make the // Unmatched file map because that creates a bunch of NEW // folders and files (unattached to repository) and we // don't want to include those in our traversal.	WITHOUT_CLASSIFICATION	0.9999999795670064	WITHOUT_CLASSIFICATION	2.0432993638936768E-8	DEFECT
// once we find a folder that isn't in the repository, // anything below it can be deleted.	WITHOUT_CLASSIFICATION	0.9999990666674062	WITHOUT_CLASSIFICATION	9.333325936318262E-7	DEFECT
/////////////////////////////////////////////////////////////// // default values for attributes. ///////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999998693081785	WITHOUT_CLASSIFICATION	1.3069182147503477E-7	DEFECT
// default behavior is to fail on an error // default behavior is to not overwrite // default behavior is make a single link	WITHOUT_CLASSIFICATION	0.9999949899542014	WITHOUT_CLASSIFICATION	5.010045798502239E-6	DEFECT
// build the command line from what we got the format is // ss Add VSS items [-B] [-C] [-D-] [-H] [-I-] [-K] [-N] [-O] [-R] [-W] [-Y] [-?] // as specified in the SS.EXE help	WITHOUT_CLASSIFICATION	0.9999997038027097	WITHOUT_CLASSIFICATION	2.961972901598978E-7	DEFECT
// build the command line from what we got the format is // ss Checkout VSS items [-G] [-C] [-H] [-I-] [-N] [-O] [-R] [-V] [-Y] [-?] // as specified in the SS.EXE help	WITHOUT_CLASSIFICATION	0.9999999169913104	WITHOUT_CLASSIFICATION	8.300868947982473E-8	DEFECT
// Not a .class file or the one we'd generate	WITHOUT_CLASSIFICATION	0.9999998418769864	WITHOUT_CLASSIFICATION	1.5812301352921516E-7	DEFECT
// We have the loader which is being used to load the // CatalogResolver. Can it see the ApacheResolver? The // base resolver will only be able to create the ApacheResolver // if it can see it - doesn't use the context loader.	WITHOUT_CLASSIFICATION	0.9999998534822061	WITHOUT_CLASSIFICATION	1.4651779389421687E-7	DEFECT
// // Use the passed in base in preference to the base // from matchingEntry, which is either null or the // directory in which the external catalog file from // which it was obtained is located.  We make a copy // so matchingEntry's original base is untouched. // // This is the standard behavior as per my reading of // the JAXP and XML Catalog specs.  CKS 11/7/2002 //	WITHOUT_CLASSIFICATION	0.999999998330046	WITHOUT_CLASSIFICATION	1.6699539531168641E-9	DEFECT
// // Get Method instances for each of the methods we need to // call on the resolverImpl using reflection.  We can't // call them directly, because they require on the // xml-commons resolver library which may not be available // in the classpath. //	WITHOUT_CLASSIFICATION	0.9998551066210166	WITHOUT_CLASSIFICATION	1.4489337898330066E-4	DEFECT
// // We didn't match a ResourceLocation, but since we // only support PUBLIC and URI entry types internally, // it is still possible that there is another entry in // an external catalog that will match.  We call // Apache resolver's resolveEntity method to cover // this possibility. //	WITHOUT_CLASSIFICATION	0.9544041958102916	WITHOUT_CLASSIFICATION	0.045595804189708364	DEFECT
// record data about the last scanned resource	WITHOUT_CLASSIFICATION	0.9999997813135937	WITHOUT_CLASSIFICATION	2.1868640634552294E-7	DEFECT
// path containing one or more elements	WITHOUT_CLASSIFICATION	0.9999999540249017	WITHOUT_CLASSIFICATION	4.597509823715828E-8	DEFECT
// just append beginToken and search further	WITHOUT_CLASSIFICATION	0.9999997738705525	WITHOUT_CLASSIFICATION	2.2612944754459465E-7	DEFECT
//create the command to run Java, including user specified options	WITHOUT_CLASSIFICATION	0.9999999493774878	WITHOUT_CLASSIFICATION	5.062251216059302E-8	DEFECT
// JDK usage command line says that -jar must be the first option, as there is // a bug in JDK < 1.4 that forces the jvm type to be specified as the first // option, it is appended here as specified in the docs even though there is // in fact no order.	WITHOUT_CLASSIFICATION	0.9999999869350656	WITHOUT_CLASSIFICATION	1.306493439047301E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999209490427	WITHOUT_CLASSIFICATION	7.905095730336347E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999209490427	WITHOUT_CLASSIFICATION	7.905095730336347E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999209490427	WITHOUT_CLASSIFICATION	7.905095730336347E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999209490427	WITHOUT_CLASSIFICATION	7.905095730336347E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999209490427	WITHOUT_CLASSIFICATION	7.905095730336347E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999209490427	WITHOUT_CLASSIFICATION	7.905095730336347E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999209490427	WITHOUT_CLASSIFICATION	7.905095730336347E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999209490427	WITHOUT_CLASSIFICATION	7.905095730336347E-8	DEFECT
/* now check each Resource in case the child only           lets through files from any children IT may have: */	WITHOUT_CLASSIFICATION	0.9998000719422304	WITHOUT_CLASSIFICATION	1.9992805776957885E-4	DEFECT
// Quick return: directories cannot be signed	WITHOUT_CLASSIFICATION	0.9997983994827359	WITHOUT_CLASSIFICATION	2.0160051726403173E-4	DEFECT
/**     * When using this as a custom selector, this method will be called.     * It translates each parameter into the appropriate setXXX() call.     *     * @param parameters the complete set of parameters for this selector     */	WITHOUT_CLASSIFICATION	0.99999833380015	WITHOUT_CLASSIFICATION	1.6661998500527533E-6	DEFECT
/**     * When using this as a custom selector, this method will be called.     * It translates each parameter into the appropriate setXXX() call.     *     * @param parameters the complete set of parameters for this selector     */	WITHOUT_CLASSIFICATION	0.99999833380015	WITHOUT_CLASSIFICATION	1.6661998500527533E-6	DEFECT
/**     * When using this as a custom selector, this method will be called.     * It translates each parameter into the appropriate setXXX() call.     *     * @param parameters the complete set of parameters for this selector     */	WITHOUT_CLASSIFICATION	0.99999833380015	WITHOUT_CLASSIFICATION	1.6661998500527533E-6	DEFECT
/**     * When using this as a custom selector, this method will be called.     * It translates each parameter into the appropriate setXXX() call.     *     * @param parameters the complete set of parameters for this selector     */	WITHOUT_CLASSIFICATION	0.99999833380015	WITHOUT_CLASSIFICATION	1.6661998500527533E-6	DEFECT
/**     * When using this as a custom selector, this method will be called.     * It translates each parameter into the appropriate setXXX() call.     *     * @param parameters the complete set of parameters for this selector     */	WITHOUT_CLASSIFICATION	0.99999833380015	WITHOUT_CLASSIFICATION	1.6661998500527533E-6	DEFECT
/**     * When using this as a custom selector, this method will be called.     * It translates each parameter into the appropriate setXXX() call.     *     * @param parameters the complete set of parameters for this selector.     */	WITHOUT_CLASSIFICATION	0.9999991865340477	WITHOUT_CLASSIFICATION	8.134659522725005E-7	DEFECT
// // -----  Set default values  ----- //	WITHOUT_CLASSIFICATION	0.9999998687454039	WITHOUT_CLASSIFICATION	1.3125459615879367E-7	DEFECT
// nothing specified - use default	WITHOUT_CLASSIFICATION	0.9999999981048415	WITHOUT_CLASSIFICATION	1.8951584480613912E-9	DEFECT
// How to handle non-file-Resources? I copy temporarily the // resource to a file and use the file-implementation.	WITHOUT_CLASSIFICATION	0.9999999846463328	WITHOUT_CLASSIFICATION	1.5353667213060596E-8	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9999946922479692	WITHOUT_CLASSIFICATION	5.307752030792126E-6	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9999946922479692	WITHOUT_CLASSIFICATION	5.307752030792126E-6	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9999946922479692	WITHOUT_CLASSIFICATION	5.307752030792126E-6	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9999946922479692	WITHOUT_CLASSIFICATION	5.307752030792126E-6	DEFECT
//find the out-of-date targets:	WITHOUT_CLASSIFICATION	0.999999840060376	WITHOUT_CLASSIFICATION	1.5993962399075067E-7	DEFECT
// write namespace declarations	WITHOUT_CLASSIFICATION	0.9999999728223726	WITHOUT_CLASSIFICATION	2.7177627438669046E-8	DEFECT
// Extrapolating from: // "NetWare may have a "java" in that directory, but 99% of // the time, you don't want to execute it" -- Jeff Tulley // <JTULLEY@novell.com>	WITHOUT_CLASSIFICATION	0.9982202722485518	WITHOUT_CLASSIFICATION	0.0017797277514481923	DEFECT
// fall through	WITHOUT_CLASSIFICATION	0.9999738893977648	WITHOUT_CLASSIFICATION	2.6110602235264884E-5	DEFECT
// fall through	WITHOUT_CLASSIFICATION	0.9999738893977648	WITHOUT_CLASSIFICATION	2.6110602235264884E-5	DEFECT
// Check for bsf first then javax // This version does not check if the scriptManager // supports the language.	WITHOUT_CLASSIFICATION	0.9999996846412426	WITHOUT_CLASSIFICATION	3.1535875741881754E-7	DEFECT
// NotReached	WITHOUT_CLASSIFICATION	0.9999995295685763	WITHOUT_CLASSIFICATION	4.7043142366041786E-7	DEFECT
// NotReached	WITHOUT_CLASSIFICATION	0.9999995295685763	WITHOUT_CLASSIFICATION	4.7043142366041786E-7	DEFECT
//no need to synchronize, as Vector is always synchronized	WITHOUT_CLASSIFICATION	0.9999921130820016	WITHOUT_CLASSIFICATION	7.886917998409148E-6	DEFECT
// Eliminate consecutive slashes after the drive spec:	WITHOUT_CLASSIFICATION	0.9999993710288155	WITHOUT_CLASSIFICATION	6.289711845039779E-7	DEFECT
//if it does not, then the file is not up to date.	WITHOUT_CLASSIFICATION	0.9999542374438436	WITHOUT_CLASSIFICATION	4.576255615648915E-5	DEFECT
// record destdir for later use in getResource	WITHOUT_CLASSIFICATION	0.9999994212647552	WITHOUT_CLASSIFICATION	5.787352447466413E-7	DEFECT
// Check to see if it's an inner class 'com.company.Class$Inner'	WITHOUT_CLASSIFICATION	0.9999998451271318	WITHOUT_CLASSIFICATION	1.5487286817678839E-7	DEFECT
// treat non-matching groups as empty matches	WITHOUT_CLASSIFICATION	0.999999765126735	WITHOUT_CLASSIFICATION	2.3487326502621365E-7	DEFECT
// treat non-matching groups as empty matches	WITHOUT_CLASSIFICATION	0.999999765126735	WITHOUT_CLASSIFICATION	2.3487326502621365E-7	DEFECT
/*          A 6-byte block header, the value chosen arbitrarily          as 0x314159265359 :-).  A 32 bit value does not really          give a strong enough guarantee that the value will not          appear by chance in the compressed datastream.  Worst-case          probability of this event, for a 900k block, is about          2.0e-3 for 32 bits, 1.0e-5 for 40 bits and 4.0e-8 for 48 bits.          For a compressed file of size 100Gb -- about 100000 blocks --          only a 48-bit marker will do.  NB: normal compression/          decompression do *not* rely on these statistical properties.          They are only important when trying to recover blocks from          damaged files.        */	WITHOUT_CLASSIFICATION	0.9991598349208313	WITHOUT_CLASSIFICATION	8.401650791687029E-4	DEFECT
// write 8-bit	WITHOUT_CLASSIFICATION	0.9999982836337244	WITHOUT_CLASSIFICATION	1.7163662756521567E-6	DEFECT
// bsBuffShadow |= 0 << (32 - bsLiveShadow - 1);	WITHOUT_CLASSIFICATION	0.999998619343738	WITHOUT_CLASSIFICATION	1.3806562619999097E-6	DEFECT
// // inlined: bsW(len_selCtr[sfmap_i] & 0xff, //              code_selCtr[sfmap_i]); //	WITHOUT_CLASSIFICATION	0.9999998654176823	WITHOUT_CLASSIFICATION	1.345823177287802E-7	DEFECT
// Following block contains unrolled code which could be shortened by // coding it in additional loops.	WITHOUT_CLASSIFICATION	0.9999508505186318	WITHOUT_CLASSIFICATION	4.914948136827011E-5	DEFECT
/*                  Complete the big bucket [ss] by quicksorting                  any unsorted small buckets [ss, j].  Hopefully                  previous pointer-scanning phases have already                  completed many of the small buckets [ss, j], so                  we don't have to sort them at all.            */	WITHOUT_CLASSIFICATION	0.9999998633672137	WITHOUT_CLASSIFICATION	1.3663278632081097E-7	DEFECT
// Step 2: // Now scan this big bucket so as to synthesise the // sorted order for small buckets [t, ss] for all t != ss.	WITHOUT_CLASSIFICATION	0.9999997923915255	WITHOUT_CLASSIFICATION	2.076084745822547E-7	DEFECT
//  900021 byte // 3600000 byte // 3600000 byte // ------------ // 8433529 byte // ============	WITHOUT_CLASSIFICATION	0.999963516810355	WITHOUT_CLASSIFICATION	3.6483189644928826E-5	DEFECT
// The clean way would be to throw an exception. //throw new IOException("crc error");	WITHOUT_CLASSIFICATION	0.9997127305420839	WITHOUT_CLASSIFICATION	2.8726945791610417E-4	DEFECT
// make next blocks readable without error // (repair feature, not yet documented, not tested)	WITHOUT_CLASSIFICATION	0.9999921505325042	WITHOUT_CLASSIFICATION	7.849467495845259E-6	DEFECT
/*          Setting up the unzftab entries here is not strictly          necessary, but it does save having to do it later          in a separate pass, and so saves a block's worth of          cache misses.        */	WITHOUT_CLASSIFICATION	0.9995126964971269	WITHOUT_CLASSIFICATION	4.8730350287303E-4	DEFECT
// tt.length should always be >= length, but theoretically // it can happen, if the compressor mixed small and large // blocks.  Normally only the last block will be smaller // than others.	WITHOUT_CLASSIFICATION	0.9922778746201699	WITHOUT_CLASSIFICATION	0.007722125379830012	DEFECT
// deprecated, but email is byte-oriented	WITHOUT_CLASSIFICATION	0.9999833271269574	WITHOUT_CLASSIFICATION	1.6672873042666016E-5	DEFECT
// // NOTE // We have fit EOF, and the block is not full! // // This is a broken archive. It does not follow the standard // blocking algorithm. However, because we are generous, and // it requires little effort, we will simply ignore the error // and continue as if the entire block were read. This does // not appear to break anything upstream. We used to return // false in this case. // // Thanks to 'Yohann.Roussel@alcatel.fr' for this fix. //	WITHOUT_CLASSIFICATION	0.9991323778390833	WITHOUT_CLASSIFICATION	8.676221609167853E-4	DEFECT
// version needed to extract // general purpose bit flag	WITHOUT_CLASSIFICATION	0.9999986402276021	WITHOUT_CLASSIFICATION	1.359772397943029E-6	DEFECT
// requires version 2 as we are going to store length info // in the data descriptor	WITHOUT_CLASSIFICATION	0.9999620276612692	WITHOUT_CLASSIFICATION	3.797233873084208E-5	DEFECT
// file comment	WITHOUT_CLASSIFICATION	0.9999945506517861	WITHOUT_CLASSIFICATION	5.449348213895758E-6	DEFECT
// swallow, throw the original exception instead	WITHOUT_CLASSIFICATION	0.9999712465508006	WITHOUT_CLASSIFICATION	2.875344919943416E-5	DEFECT
/* compressed size                 */	WITHOUT_CLASSIFICATION	0.999997934543652	WITHOUT_CLASSIFICATION	2.06545634799738E-6	DEFECT
/* disk number start               */	WITHOUT_CLASSIFICATION	0.999998018220101	WITHOUT_CLASSIFICATION	1.981779898963185E-6	DEFECT
/* total number of entries in      */	WITHOUT_CLASSIFICATION	0.9999927129828124	WITHOUT_CLASSIFICATION	7.287017187519347E-6	DEFECT
/* total number of entries in      */	WITHOUT_CLASSIFICATION	0.9999927129828124	WITHOUT_CLASSIFICATION	7.287017187519347E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.999944136216236	WITHOUT_CLASSIFICATION	5.5863783763905966E-5	DEFECT
// This is turned off temporarily. There appears to be a bug // in SelectorUtils.matchPattern() where it is recursive on // Windows even if no ** is in pattern. //assertEquals("FFFTFFFFFFFF", results); // Unix // vs //assertEquals("FFFTFFFFTFFF", results); // Windows	DEFECT	0.9637987242349535	WITHOUT_CLASSIFICATION	0.036201275765046545	DEFECT
// check first that it is not already loaded otherwise // consecutive runs seems to end into an OutOfMemoryError // or it fails when there is a native library to load // several times. // this is far from being perfect but should work // in most cases.	DEFECT	0.9996372604862064	WITHOUT_CLASSIFICATION	3.627395137936431E-4	DEFECT
// FIXME formatters are not thread-safe	DEFECT	0.9709226082842191	WITHOUT_CLASSIFICATION	0.029077391715780963	DEFECT
// the generated classes must not be added in the generic JAR! // is that buggy on old JOnAS (2.4) ??	DEFECT	0.9976832930988808	WITHOUT_CLASSIFICATION	0.0023167069011191858	DEFECT
// I hate to admit it, but we don't know what happened // here.  Throw the Exception.	DEFECT	0.9986253839417107	WITHOUT_CLASSIFICATION	0.0013746160582892174	DEFECT
// FIXME: Is "No Namespace is Empty Namespace" really OK?	DEFECT	0.8133357711571029	WITHOUT_CLASSIFICATION	0.18666422884289718	DEFECT
// pattern now holds ** while string is not exhausted // this will generate false positives but we can live with that.	DEFECT	0.9941116398722565	WITHOUT_CLASSIFICATION	0.005888360127743449	DEFECT
// todo: is this comment still relevant ?? // FIXME: need to use a SAXSource as the source for the transform // so we can plug in our own entity resolver	DEFECT	0.832836576399987	WITHOUT_CLASSIFICATION	0.16716342360001302	DEFECT
// Just a note: StarTeam has a status for NEW which implies // that there is an item  on your local machine that is not // in the repository.  These are the items that show up as // NOT IN VIEW in the Starteam GUI. // One would think that we would want to perhaps checkin the // NEW items (not in all cases! - Steve Cohen 15 Dec 2001) // Unfortunately, the sdk doesn't really work, and we can't // actually see  anything with a status of NEW. That is why // we can just check out  everything here without worrying // about losing anything.	DEFECT	0.9873804486021989	WITHOUT_CLASSIFICATION	0.012619551397801073	DEFECT
// XXX: (Jon Skeet) The comment "if it hasn't been done already" may // not be strictly true. wrapper.maybeConfigure() won't configure the same // attributes/text more than once, but it may well add the children again, // unless I've missed something.	DEFECT	0.9996441286678692	WITHOUT_CLASSIFICATION	3.5587133213074777E-4	DEFECT
// TODO: // A warning line, that shows code, which contains a variable // error will cause some trouble. The parser should definitely // be much better.	DEFECT	0.8402300974042866	WITHOUT_CLASSIFICATION	0.1597699025957135	DEFECT
// todo: is this comment still relevant ?? // FIXME: need to use a SAXSource as the source for the transform // so we can plug in our own entity resolver	DEFECT	0.832836576399987	WITHOUT_CLASSIFICATION	0.16716342360001302	DEFECT
// FIXME this is actually not very cpu cycles friendly as we are converting from // dos to java while the underlying Sun implementation will convert // from java to dos time for internal storage...	DEFECT	0.9382385409499248	DEFECT	0.061761459050075164	WITHOUT_CLASSIFICATION
