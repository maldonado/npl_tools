// Delete the ActionContributionItems with matching action. //	WITHOUT_CLASSIFICATION	0.9999797270311379	WITHOUT_CLASSIFICATION	2.0272968861997275E-5	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9995929231794971	WITHOUT_CLASSIFICATION	4.070768205029192E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9998766035828676	WITHOUT_CLASSIFICATION	1.2339641713245567E-4	DEFECT
// Recompute the read only state. //	WITHOUT_CLASSIFICATION	0.9999618035048894	WITHOUT_CLASSIFICATION	3.8196495110716434E-5	DEFECT
// Refresh any actions that may become enabled or disabled. //	WITHOUT_CLASSIFICATION	0.9999962397416952	WITHOUT_CLASSIFICATION	3.7602583048834018E-6	DEFECT
// Create the command stack that will notify this editor as commands are executed. //	WITHOUT_CLASSIFICATION	0.9997777961299169	WITHOUT_CLASSIFICATION	2.222038700832275E-4	DEFECT
// Add a listener to set the most recent command's affected objects to be the selection of the viewer with focus. //	WITHOUT_CLASSIFICATION	0.9999974858673314	WITHOUT_CLASSIFICATION	2.514132668679273E-6	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9996230761711952	WITHOUT_CLASSIFICATION	3.7692382880483274E-4	DEFECT
// Try to select the affected objects. //	WITHOUT_CLASSIFICATION	0.9999911955002312	WITHOUT_CLASSIFICATION	8.804499768888832E-6	DEFECT
// Create the editing domain with a special command stack. //	WITHOUT_CLASSIFICATION	0.9999501074889837	WITHOUT_CLASSIFICATION	4.98925110162712E-5	DEFECT
// Make sure it's okay. //	WITHOUT_CLASSIFICATION	0.999993203698398	WITHOUT_CLASSIFICATION	6.796301602027732E-6	DEFECT
// Create an adapter factory that yields item providers. //	WITHOUT_CLASSIFICATION	0.9999927728994914	WITHOUT_CLASSIFICATION	7.227100508564158E-6	DEFECT
// Try to select the items in the current content viewer of the editor. //	WITHOUT_CLASSIFICATION	0.9990152522011699	WITHOUT_CLASSIFICATION	9.847477988300748E-4	DEFECT
// If it is changing... //	WITHOUT_CLASSIFICATION	0.9999768899634203	WITHOUT_CLASSIFICATION	2.3110036579781614E-5	DEFECT
// Create the listener on demand. //	WITHOUT_CLASSIFICATION	0.9999924568107678	WITHOUT_CLASSIFICATION	7.543189232173699E-6	DEFECT
// Stop listening to the old one. //	WITHOUT_CLASSIFICATION	0.9999838351133848	WITHOUT_CLASSIFICATION	1.6164886615184966E-5	DEFECT
// Start listening to the new one. //	WITHOUT_CLASSIFICATION	0.9999969498392978	WITHOUT_CLASSIFICATION	3.0501607023653643E-6	DEFECT
// Remember it. //	WITHOUT_CLASSIFICATION	0.9999928668814604	WITHOUT_CLASSIFICATION	7.133118539554705E-6	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9996230761711952	WITHOUT_CLASSIFICATION	3.7692382880483274E-4	DEFECT
// Set the editors selection based on the current viewer's selection. //	WITHOUT_CLASSIFICATION	0.999958081871174	WITHOUT_CLASSIFICATION	4.1918128826060755E-5	DEFECT
// Load the resource through the editing domain. //	WITHOUT_CLASSIFICATION	0.9999944435042761	WITHOUT_CLASSIFICATION	5.556495723819515E-6	DEFECT
// Create a page for the selection tree view. //	WITHOUT_CLASSIFICATION	0.9999987000870778	WITHOUT_CLASSIFICATION	1.2999129221367604E-6	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9996827877936082	WITHOUT_CLASSIFICATION	3.172122063917369E-4	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9996827877936082	WITHOUT_CLASSIFICATION	3.172122063917369E-4	DEFECT
// Ensures that this editor will only display the page's tab // area if there are more than one page //	WITHOUT_CLASSIFICATION	0.9999319421075431	WITHOUT_CLASSIFICATION	6.805789245686095E-5	DEFECT
// The content outline is just a tree. //	WITHOUT_CLASSIFICATION	0.9999969597886372	WITHOUT_CLASSIFICATION	3.0402113626518825E-6	DEFECT
// This is the page for the list viewer //	WITHOUT_CLASSIFICATION	0.9999525214248277	WITHOUT_CLASSIFICATION	4.747857517218536E-5	DEFECT
// This is the page for the tree viewer //	WITHOUT_CLASSIFICATION	0.9999098704582008	WITHOUT_CLASSIFICATION	9.012954179917673E-5	DEFECT
// This is the page for the table viewer. //	WITHOUT_CLASSIFICATION	0.9999637628108525	WITHOUT_CLASSIFICATION	3.6237189147487155E-5	DEFECT
// This is the page for the table tree viewer. //	WITHOUT_CLASSIFICATION	0.9999621163128988	WITHOUT_CLASSIFICATION	3.788368710122869E-5	DEFECT
// Make sure our popups work. //	WITHOUT_CLASSIFICATION	0.999792280586219	WITHOUT_CLASSIFICATION	2.0771941378081154E-4	DEFECT
// Select the root object in the view. //	WITHOUT_CLASSIFICATION	0.9999849742177175	WITHOUT_CLASSIFICATION	1.502578228243813E-5	DEFECT
// Listen to selection so that we can handle it is a special way. //	WITHOUT_CLASSIFICATION	0.999997807428602	WITHOUT_CLASSIFICATION	2.19257139790257E-6	DEFECT
// This ensures that we handle selections correctly. //	WITHOUT_CLASSIFICATION	0.9997114288391179	WITHOUT_CLASSIFICATION	2.8857116088203464E-4	DEFECT
// Set the selection to the widget. //	WITHOUT_CLASSIFICATION	0.9998610061854258	WITHOUT_CLASSIFICATION	1.389938145741405E-4	DEFECT
// Save only resources that have actually changed. //	WITHOUT_CLASSIFICATION	0.9998089625564247	WITHOUT_CLASSIFICATION	1.9103744357527367E-4	DEFECT
// Do the work within an operation because this is a long running activity that modifies the workbench. //	WITHOUT_CLASSIFICATION	0.9998306049913627	WITHOUT_CLASSIFICATION	1.6939500863739584E-4	DEFECT
// Set the input to the widget. //	WITHOUT_CLASSIFICATION	0.9998909585843311	WITHOUT_CLASSIFICATION	1.0904141566886218E-4	DEFECT
// Save the resources to the file system. //	WITHOUT_CLASSIFICATION	0.999983942283425	WITHOUT_CLASSIFICATION	1.6057716574991475E-5	DEFECT
// This runs the options, and shows progress. //	WITHOUT_CLASSIFICATION	0.9996150749577101	WITHOUT_CLASSIFICATION	3.8492504228993934E-4	DEFECT
// Refresh the necessary state. //	WITHOUT_CLASSIFICATION	0.9999969639663361	WITHOUT_CLASSIFICATION	3.036033663856083E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.99987048956532	WITHOUT_CLASSIFICATION	1.2951043468007955E-4	DEFECT
// Create a default .jetsettings file file	WITHOUT_CLASSIFICATION	0.9999991692520107	WITHOUT_CLASSIFICATION	8.307479893181562E-7	DEFECT
// Something went wrong that shouldn't. //	WITHOUT_CLASSIFICATION	0.9994497687012287	WITHOUT_CLASSIFICATION	5.502312987712894E-4	DEFECT
// Set the new variables. //	WITHOUT_CLASSIFICATION	0.9999997416893778	WITHOUT_CLASSIFICATION	2.583106222235322E-7	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.ecore.util.ExtendedMetaData#getPackage(java.lang.String)   */	WITHOUT_CLASSIFICATION	0.9999985631541144	WITHOUT_CLASSIFICATION	1.4368458855562623E-6	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9995929231794971	WITHOUT_CLASSIFICATION	4.070768205029192E-4	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999976220319823	WITHOUT_CLASSIFICATION	2.3779680177053606E-6	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999484135833615	WITHOUT_CLASSIFICATION	5.158641663847135E-5	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$	WITHOUT_CLASSIFICATION	0.9997231555131084	WITHOUT_CLASSIFICATION	2.768444868915385E-4	DEFECT
//Ecore2XMLResourceFactoryImpl	WITHOUT_CLASSIFICATION	0.9997281189469915	WITHOUT_CLASSIFICATION	2.7188105300847843E-4	DEFECT
/**   * The switch that delegates to the <code>createXXX</code> methods.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9999957123146821	WITHOUT_CLASSIFICATION	4.28768531794884E-6	DEFECT
//Ecore2XMLAdapterFactory	WITHOUT_CLASSIFICATION	0.9976042650605107	WITHOUT_CLASSIFICATION	0.002395734939489356	DEFECT
//Ecore2XMLSwitch	WITHOUT_CLASSIFICATION	0.998661066465767	WITHOUT_CLASSIFICATION	0.0013389335342330272	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.9999933771872096	WITHOUT_CLASSIFICATION	6.622812790395057E-6	DEFECT
//Ecore2XMLResourceFactoryImpl	WITHOUT_CLASSIFICATION	0.9997281189469915	WITHOUT_CLASSIFICATION	2.7188105300847843E-4	DEFECT
//FunctionNamePairImpl	WITHOUT_CLASSIFICATION	0.9998915896942837	WITHOUT_CLASSIFICATION	1.0841030571624385E-4	DEFECT
//MappingFactoryImpl	WITHOUT_CLASSIFICATION	0.9996773840613687	WITHOUT_CLASSIFICATION	3.226159386313069E-4	DEFECT
//ComplexTypeConverterImpl	WITHOUT_CLASSIFICATION	0.9999196714717685	WITHOUT_CLASSIFICATION	8.032852823148387E-5	DEFECT
//MappingHelperImpl	WITHOUT_CLASSIFICATION	0.9998809339658054	WITHOUT_CLASSIFICATION	1.1906603419461893E-4	DEFECT
//MappingStrategyImpl	WITHOUT_CLASSIFICATION	0.9999541686682456	WITHOUT_CLASSIFICATION	4.583133175442399E-5	DEFECT
//FunctionPairImpl	WITHOUT_CLASSIFICATION	0.9997856729947401	WITHOUT_CLASSIFICATION	2.143270052598314E-4	DEFECT
// Initialize simple dependencies	WITHOUT_CLASSIFICATION	0.9999991823946333	WITHOUT_CLASSIFICATION	8.176053668014476E-7	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.9999990592002509	WITHOUT_CLASSIFICATION	9.407997490422834E-7	DEFECT
// Mark meta-data to indicate it can't be changed	WITHOUT_CLASSIFICATION	0.9999930471702011	WITHOUT_CLASSIFICATION	6.95282979884545E-6	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.9999982092566939	WITHOUT_CLASSIFICATION	1.7907433059583226E-6	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.9999902001708177	WITHOUT_CLASSIFICATION	9.799829182323957E-6	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.9999995068117644	WITHOUT_CLASSIFICATION	4.93188235584206E-7	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.999998067601732	WITHOUT_CLASSIFICATION	1.932398267952577E-6	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.9999893124183389	WITHOUT_CLASSIFICATION	1.0687581661237084E-5	DEFECT
// Initialize classes and features; add operations and parameters	WITHOUT_CLASSIFICATION	0.9999987329766953	WITHOUT_CLASSIFICATION	1.2670233046854628E-6	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.9999954956836732	WITHOUT_CLASSIFICATION	4.5043163268436935E-6	DEFECT
//MappingImpl	WITHOUT_CLASSIFICATION	0.9997261522708033	WITHOUT_CLASSIFICATION	2.738477291966921E-4	DEFECT
// Remove zero width non-breaking space, which may be used as a byte order marker,  // and may be ignored according to the Unicode FAQ: http://www.unicode.org/unicode/faq/utf_bom.html#38 //	WITHOUT_CLASSIFICATION	0.9999604232365396	WITHOUT_CLASSIFICATION	3.957676346039407E-5	DEFECT
//TypeConverterImpl	WITHOUT_CLASSIFICATION	0.9998419738408769	WITHOUT_CLASSIFICATION	1.5802615912299345E-4	DEFECT
// Barring a better result, this will be the result. //	WITHOUT_CLASSIFICATION	0.9999814123689442	WITHOUT_CLASSIFICATION	1.858763105574914E-5	DEFECT
// If the intersection is empty, i.e., no ancestor is in the mapping... //	WITHOUT_CLASSIFICATION	0.9999926636149657	WITHOUT_CLASSIFICATION	7.3363850342495405E-6	DEFECT
// If this mapping isn't a parent, it's children definitely won't be either. //	WITHOUT_CLASSIFICATION	0.9999138030009269	WITHOUT_CLASSIFICATION	8.619699907310232E-5	DEFECT
// Make sure the collections aren't identical... //	WITHOUT_CLASSIFICATION	0.999969377668813	WITHOUT_CLASSIFICATION	3.062233118703229E-5	DEFECT
//FB used to check for parent != null. // Need to find the top most model object not including the resource. // parent instanceof Eobject only checks for trees in model object space.	WITHOUT_CLASSIFICATION	0.9999286743843341	WITHOUT_CLASSIFICATION	7.13256156659077E-5	DEFECT
// printAdapters();	WITHOUT_CLASSIFICATION	0.9999982224670373	WITHOUT_CLASSIFICATION	1.777532962707178E-6	DEFECT
//MappingRootImpl	WITHOUT_CLASSIFICATION	0.9998269801491336	WITHOUT_CLASSIFICATION	1.7301985086631816E-4	DEFECT
// TODO	WITHOUT_CLASSIFICATION	0.9470773458882906	WITHOUT_CLASSIFICATION	0.052922654111709266	DEFECT
// Try to select the items in the current content viewer of the editor. //	WITHOUT_CLASSIFICATION	0.9990152522011699	WITHOUT_CLASSIFICATION	9.847477988300748E-4	DEFECT
// If it is changing... //	WITHOUT_CLASSIFICATION	0.9999768899634203	WITHOUT_CLASSIFICATION	2.3110036579781614E-5	DEFECT
// Create the listener on demand. //	WITHOUT_CLASSIFICATION	0.9999924568107678	WITHOUT_CLASSIFICATION	7.543189232173699E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.99987048956532	WITHOUT_CLASSIFICATION	1.2951043468007955E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.99987048956532	WITHOUT_CLASSIFICATION	1.2951043468007955E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.99987048956532	WITHOUT_CLASSIFICATION	1.2951043468007955E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.99987048956532	WITHOUT_CLASSIFICATION	1.2951043468007955E-4	DEFECT
// VAJ kludge //	WITHOUT_CLASSIFICATION	0.9999479354557714	WITHOUT_CLASSIFICATION	5.206454422858575E-5	DEFECT
// This just notifies those things that are affected by the selection. //	WITHOUT_CLASSIFICATION	0.9999616144864382	WITHOUT_CLASSIFICATION	3.838551356182928E-5	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999976220319823	WITHOUT_CLASSIFICATION	2.3779680177053606E-6	DEFECT
// Stop listening to the old one. //	WITHOUT_CLASSIFICATION	0.9999838351133848	WITHOUT_CLASSIFICATION	1.6164886615184966E-5	DEFECT
// Start listening to the new one. //	WITHOUT_CLASSIFICATION	0.9999969498392978	WITHOUT_CLASSIFICATION	3.0501607023653643E-6	DEFECT
// Remember it. //	WITHOUT_CLASSIFICATION	0.9999928668814604	WITHOUT_CLASSIFICATION	7.133118539554705E-6	DEFECT
/* EATM getDecoratedAdapterFactory().*/	WITHOUT_CLASSIFICATION	0.9999028554948984	WITHOUT_CLASSIFICATION	9.714450510155087E-5	DEFECT
/* EATM getDecoratedAdapterFactory().*/	WITHOUT_CLASSIFICATION	0.9999028554948984	WITHOUT_CLASSIFICATION	9.714450510155087E-5	DEFECT
/* EATM getDecoratedAdapterFactory().*/	WITHOUT_CLASSIFICATION	0.9999028554948984	WITHOUT_CLASSIFICATION	9.714450510155087E-5	DEFECT
// Add a listener to set the most recent command's affected objects to be the selection of the viewer with focus. //	WITHOUT_CLASSIFICATION	0.9999974858673314	WITHOUT_CLASSIFICATION	2.514132668679273E-6	DEFECT
// I assume that the editorInput is a file object. //	WITHOUT_CLASSIFICATION	0.9999987655189484	WITHOUT_CLASSIFICATION	1.2344810515555797E-6	DEFECT
// Handle the creation of the model from the modelFile. //	WITHOUT_CLASSIFICATION	0.9998052856836736	WITHOUT_CLASSIFICATION	1.9471431632648618E-4	DEFECT
// Restore the persistent command stack, if need be. //	WITHOUT_CLASSIFICATION	0.9999985664669567	WITHOUT_CLASSIFICATION	1.4335330432025455E-6	DEFECT
// Create a page for the selection tree view. //	WITHOUT_CLASSIFICATION	0.9999987000870778	WITHOUT_CLASSIFICATION	1.2999129221367604E-6	DEFECT
// Set up the tree viewer. //	WITHOUT_CLASSIFICATION	0.9999916220695798	WITHOUT_CLASSIFICATION	8.37793042016878E-6	DEFECT
// Make sure our popups work. //	WITHOUT_CLASSIFICATION	0.999792280586219	WITHOUT_CLASSIFICATION	2.0771941378081154E-4	DEFECT
// Select the root object in the view. //	WITHOUT_CLASSIFICATION	0.9999849742177175	WITHOUT_CLASSIFICATION	1.502578228243813E-5	DEFECT
// This ensures that we handle selections correctly. //	WITHOUT_CLASSIFICATION	0.9997114288391179	WITHOUT_CLASSIFICATION	2.8857116088203464E-4	DEFECT
// Do the work within an operation because this is a long running activity that modifies the workbench. //	WITHOUT_CLASSIFICATION	0.9998306049913627	WITHOUT_CLASSIFICATION	1.6939500863739584E-4	DEFECT
// Load the resource through the editing domain. // This will create a context and associate it with the resource set. //	WITHOUT_CLASSIFICATION	0.9997604846379639	WITHOUT_CLASSIFICATION	2.395153620362337E-4	DEFECT
// The one object in the resource's extent should be the root object. //	WITHOUT_CLASSIFICATION	0.9999321776612025	WITHOUT_CLASSIFICATION	6.782233879754209E-5	DEFECT
// Save the resource to the file system. //	WITHOUT_CLASSIFICATION	0.9999808835850084	WITHOUT_CLASSIFICATION	1.911641499165719E-5	DEFECT
// Update the workbench's knowledge of the file's contents. //	WITHOUT_CLASSIFICATION	0.9999760262031249	WITHOUT_CLASSIFICATION	2.3973796875186777E-5	DEFECT
// Add the binding to the provided hash table: //	WITHOUT_CLASSIFICATION	0.9999028000213046	WITHOUT_CLASSIFICATION	9.719997869529195E-5	DEFECT
// Refresh the necessary state. //	WITHOUT_CLASSIFICATION	0.9999969639663361	WITHOUT_CLASSIFICATION	3.036033663856083E-6	DEFECT
// Something went wrong that shouldn't. //	WITHOUT_CLASSIFICATION	0.9994497687012287	WITHOUT_CLASSIFICATION	5.502312987712894E-4	DEFECT
// Parse as an attribute=value:	WITHOUT_CLASSIFICATION	0.999997207524346	WITHOUT_CLASSIFICATION	2.792475653911656E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999139943642469	WITHOUT_CLASSIFICATION	8.60056357530864E-5	DEFECT
// Create the mapping domain with a special command stack. // 	WITHOUT_CLASSIFICATION	0.9998461976010262	WITHOUT_CLASSIFICATION	1.5380239897367864E-4	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999106018941357	WITHOUT_CLASSIFICATION	8.939810586429974E-5	DEFECT
// Doing this just makes focus go to the default control, not the control that last has focus. // // super.setFocus();	WITHOUT_CLASSIFICATION	0.9999870892196056	WITHOUT_CLASSIFICATION	1.2910780394437989E-5	DEFECT
// If the object is an input or output object, then use it. //	WITHOUT_CLASSIFICATION	0.9999985361167593	WITHOUT_CLASSIFICATION	1.4638832407476072E-6	DEFECT
// Process the children recursively. //	WITHOUT_CLASSIFICATION	0.9999919726409328	WITHOUT_CLASSIFICATION	8.027359067301215E-6	DEFECT
// Look for a single-char work delimiter: //	WITHOUT_CLASSIFICATION	0.9999504226080299	WITHOUT_CLASSIFICATION	4.957739197023648E-5	DEFECT
// oldWidth = table.getClientArea().width;	WITHOUT_CLASSIFICATION	0.9999952989634282	WITHOUT_CLASSIFICATION	4.701036571842312E-6	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999976220319823	WITHOUT_CLASSIFICATION	2.3779680177053606E-6	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999484135833615	WITHOUT_CLASSIFICATION	5.158641663847135E-5	DEFECT
//MappingPackage ePackage = ((ComplexTypeConverter)object).ePackageMapping();	WITHOUT_CLASSIFICATION	0.9999972025808982	WITHOUT_CLASSIFICATION	2.7974191018332338E-6	DEFECT
// This is for the in2out feature. //	WITHOUT_CLASSIFICATION	0.9997014234581921	WITHOUT_CLASSIFICATION	2.985765418079222E-4	DEFECT
// This is for the out2in feature. //	WITHOUT_CLASSIFICATION	0.9996012969562045	WITHOUT_CLASSIFICATION	3.9870304379548973E-4	DEFECT
// HGD::fireNotifyChanged(msg.getNotifier(), msg.getEventType(), msg.getFeature(), msg.getOldValue(), msg.getNewValue(), msg.getPosition());	WITHOUT_CLASSIFICATION	0.9999928048779881	WITHOUT_CLASSIFICATION	7.195122011860177E-6	DEFECT
// This is for the in2out feature. //	WITHOUT_CLASSIFICATION	0.9997014234581921	WITHOUT_CLASSIFICATION	2.985765418079222E-4	DEFECT
// This is for the topDown feature. //	WITHOUT_CLASSIFICATION	0.9989380016512461	WITHOUT_CLASSIFICATION	0.0010619983487538671	DEFECT
//MappingPackage ePackage = ((MappingRoot)msg.getNotifier()).ePackageMapping();	WITHOUT_CLASSIFICATION	0.9999925830756219	WITHOUT_CLASSIFICATION	7.416924378225264E-6	DEFECT
//hgd::fireNotifyChanged(msg.getNotifier(), msg.getEventType(), msg.getStructuralFeature(), msg.getOldValue(), msg.getNewValue(), msg.getPosition());	WITHOUT_CLASSIFICATION	0.999992406547366	WITHOUT_CLASSIFICATION	7.593452634010147E-6	DEFECT
//MappingPackage ePackage = ((FunctionNamePair)object).ePackageMapping();	WITHOUT_CLASSIFICATION	0.9999813150268897	WITHOUT_CLASSIFICATION	1.868497311032222E-5	DEFECT
// This is for the in2out feature. //	WITHOUT_CLASSIFICATION	0.9997014234581921	WITHOUT_CLASSIFICATION	2.985765418079222E-4	DEFECT
// This is for the out2in feature. //	WITHOUT_CLASSIFICATION	0.9996012969562045	WITHOUT_CLASSIFICATION	3.9870304379548973E-4	DEFECT
//MappingPackage ePackage = ((FunctionNamePair)msg.getNotifier()).ePackageMapping();	WITHOUT_CLASSIFICATION	0.9999819370880232	WITHOUT_CLASSIFICATION	1.806291197685187E-5	DEFECT
// HGD::fireNotifyChanged(msg.getNotifier(), msg.getEventType(), msg.getStructuralFeature(), msg.getOldValue(), msg.getNewValue(), msg.getPosition());	WITHOUT_CLASSIFICATION	0.9999984813375214	WITHOUT_CLASSIFICATION	1.5186624785580884E-6	DEFECT
//MappingPackage ePackage = ((FunctionPair)object).ePackageMapping();	WITHOUT_CLASSIFICATION	0.999962307360136	WITHOUT_CLASSIFICATION	3.769263986403104E-5	DEFECT
//MappingPackage ePackage = ((FunctionPair)msg.getNotifier()).ePackageMapping();	WITHOUT_CLASSIFICATION	0.9999740563359869	WITHOUT_CLASSIFICATION	2.5943664013089175E-5	DEFECT
//HGD::fireNotifyChanged(msg.getNotifier(), msg.getEventType(), msg.getStructuralFeature(), msg.getOldValue(), msg.getNewValue(), msg.getPosition());	WITHOUT_CLASSIFICATION	0.9999925056089571	WITHOUT_CLASSIFICATION	7.4943910429038935E-6	DEFECT
// This is here only to support deprecated adapt(object) rather than adapt(object, Interface.class). // // supportedTypes.add(null);	WITHOUT_CLASSIFICATION	0.9994793873722889	WITHOUT_CLASSIFICATION	5.206126277110205E-4	DEFECT
// supportedTypes.add(IUpdateableItemText.class);	WITHOUT_CLASSIFICATION	0.9999964390292964	WITHOUT_CLASSIFICATION	3.5609707037169465E-6	DEFECT
//FB ????? 	WITHOUT_CLASSIFICATION	0.999751216972783	WITHOUT_CLASSIFICATION	2.487830272169983E-4	DEFECT
// This is for the helper feature. //	WITHOUT_CLASSIFICATION	0.9996770535548667	WITHOUT_CLASSIFICATION	3.229464451332953E-4	DEFECT
// This is for the typeMapping feature. //	WITHOUT_CLASSIFICATION	0.9996933180582962	WITHOUT_CLASSIFICATION	3.0668194170384685E-4	DEFECT
//FIX:::	WITHOUT_CLASSIFICATION	0.9739113986437048	WITHOUT_CLASSIFICATION	0.026088601356295097	DEFECT
//hgd::fireNotifyChanged(msg.getNotifier(), msg.getEventType(), msg.getFeature(), msg.getOldValue(), msg.getNewValue(), msg.getPosition());	WITHOUT_CLASSIFICATION	0.9999640245423786	WITHOUT_CLASSIFICATION	3.597545762140505E-5	DEFECT
//fireNotifyChanged(msg.getNotifier(), msg.getEventType(), msg.getFeature(), msg.getOldValue(), msg.getNewValue(), msg.getPosition());	WITHOUT_CLASSIFICATION	0.9999854133099557	WITHOUT_CLASSIFICATION	1.4586690044289105E-5	DEFECT
/**   * The switch that delegates to the <code>createXXX</code> methods.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9999957123146821	WITHOUT_CLASSIFICATION	4.28768531794884E-6	DEFECT
// Create a resource set and load the model file into it. //	WITHOUT_CLASSIFICATION	0.9999994566567194	WITHOUT_CLASSIFICATION	5.433432806846584E-7	DEFECT
// This is the path of the target directory. //	WITHOUT_CLASSIFICATION	0.9992267158809625	WITHOUT_CLASSIFICATION	7.732841190375933E-4	DEFECT
// Break the cycle. //	WITHOUT_CLASSIFICATION	0.9999760425117356	WITHOUT_CLASSIFICATION	2.3957488264417468E-5	DEFECT
//MappingAdapterFactory	WITHOUT_CLASSIFICATION	0.9995929476289798	WITHOUT_CLASSIFICATION	4.070523710203141E-4	DEFECT
// This ensures that we are dealing with actual MOF objects. //	WITHOUT_CLASSIFICATION	0.9998884461391516	WITHOUT_CLASSIFICATION	1.1155386084838882E-4	DEFECT
//MappingSwitch	WITHOUT_CLASSIFICATION	0.9998403942640162	WITHOUT_CLASSIFICATION	1.5960573598378908E-4	DEFECT
// This is the name of the model. //	WITHOUT_CLASSIFICATION	0.9998477929256779	WITHOUT_CLASSIFICATION	1.5220707432205794E-4	DEFECT
// Create a resource set and load the model file into it. //	WITHOUT_CLASSIFICATION	0.9999994566567194	WITHOUT_CLASSIFICATION	5.433432806846584E-7	DEFECT
// This is the path of the target directory. //	WITHOUT_CLASSIFICATION	0.9992267158809625	WITHOUT_CLASSIFICATION	7.732841190375933E-4	DEFECT
// This is to handle a genmodel produced by rose2genmodel. //	WITHOUT_CLASSIFICATION	0.9999504250940706	WITHOUT_CLASSIFICATION	4.957490592950795E-5	DEFECT
// This is to handle a genmodel produced by rose2genmodel. //	WITHOUT_CLASSIFICATION	0.9999504250940706	WITHOUT_CLASSIFICATION	4.957490592950795E-5	DEFECT
// Clean up any old project information. //	WITHOUT_CLASSIFICATION	0.9999856834969364	WITHOUT_CLASSIFICATION	1.43165030635465E-5	DEFECT
// Remove variables since the plugin.xml should provide the complete path information. //	WITHOUT_CLASSIFICATION	0.999999556828447	WITHOUT_CLASSIFICATION	4.431715529781254E-7	DEFECT
// Look for a likely plugin name. //	WITHOUT_CLASSIFICATION	0.9999949014892568	WITHOUT_CLASSIFICATION	5.098510743160453E-6	DEFECT
// Clean up any old project information. //	WITHOUT_CLASSIFICATION	0.9999856834969364	WITHOUT_CLASSIFICATION	1.43165030635465E-5	DEFECT
// Remove variables since the plugin.xml should provide the complete path information. //	WITHOUT_CLASSIFICATION	0.999999556828447	WITHOUT_CLASSIFICATION	4.431715529781254E-7	DEFECT
// Consult the generator option for backwards compatibility. //	WITHOUT_CLASSIFICATION	0.999998831455246	WITHOUT_CLASSIFICATION	1.1685447539903742E-6	DEFECT
// Apply a redirection pattern, if specified. //	WITHOUT_CLASSIFICATION	0.9999839030219039	WITHOUT_CLASSIFICATION	1.6096978096168663E-5	DEFECT
// If the target is read-only, we can ask the platform to release it. //	WITHOUT_CLASSIFICATION	0.9999987366483462	WITHOUT_CLASSIFICATION	1.2633516537683645E-6	DEFECT
// Multiple jet directives.	WITHOUT_CLASSIFICATION	0.9999963883435253	WITHOUT_CLASSIFICATION	3.61165647460513E-6	DEFECT
// If the target is read-only, we can ask the platform to release it. //	WITHOUT_CLASSIFICATION	0.9999987366483462	WITHOUT_CLASSIFICATION	1.2633516537683645E-6	DEFECT
// Merge with an existing file. //	WITHOUT_CLASSIFICATION	0.9999970601860048	WITHOUT_CLASSIFICATION	2.9398139953175394E-6	DEFECT
// If the target is read-only, we can ask the platform to release it, and it may be updated in the process. //	WITHOUT_CLASSIFICATION	0.9999999712812965	WITHOUT_CLASSIFICATION	2.8718703546410696E-8	DEFECT
// If the target is read-only, we can ask the platform to release it, and it may be updated in the process. //	WITHOUT_CLASSIFICATION	0.9999999712812965	WITHOUT_CLASSIFICATION	2.8718703546410696E-8	DEFECT
// Create a code formatter for this compilation unit, if needed. //	WITHOUT_CLASSIFICATION	0.999994897796351	WITHOUT_CLASSIFICATION	5.102203648997446E-6	DEFECT
// If a newline from the previous character data remains, add a generator for it. //	WITHOUT_CLASSIFICATION	0.9999981995983783	WITHOUT_CLASSIFICATION	1.8004016215939086E-6	DEFECT
// If we can't determine it by reading the file, // look at the preferences instead.	WITHOUT_CLASSIFICATION	0.9999950326877328	WITHOUT_CLASSIFICATION	4.96731226719414E-6	DEFECT
// Since we're invoking plugged-in code, we must be defensive against cycles. //	WITHOUT_CLASSIFICATION	0.9999998940937481	WITHOUT_CLASSIFICATION	1.0590625185049208E-7	DEFECT
// Compute the GeneratorData for the given object and its children, then for the parents of the given object. //	WITHOUT_CLASSIFICATION	0.9999987103645945	WITHOUT_CLASSIFICATION	1.2896354055150654E-6	DEFECT
// Combine the two lists. //	WITHOUT_CLASSIFICATION	0.9999950940293689	WITHOUT_CLASSIFICATION	4.905970631031946E-6	DEFECT
// Give all generator adapters the chance to do setup work. //	WITHOUT_CLASSIFICATION	0.9999910169358637	WITHOUT_CLASSIFICATION	8.983064136331983E-6	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999958457194256	WITHOUT_CLASSIFICATION	4.1542805744536186E-6	DEFECT
// Give all generator adapters the chance to do tear down. //	WITHOUT_CLASSIFICATION	0.9999973180092098	WITHOUT_CLASSIFICATION	2.6819907903092057E-6	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.9998283283605699	WITHOUT_CLASSIFICATION	1.7167163943015333E-4	DEFECT
// returns the package in which this enum literal is defined // returns the name of the enum literal get method in the package interface	WITHOUT_CLASSIFICATION	0.9999995719310507	WITHOUT_CLASSIFICATION	4.280689492810331E-7	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999958457194256	WITHOUT_CLASSIFICATION	4.1542805744536186E-6	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.9998283283605699	WITHOUT_CLASSIFICATION	1.7167163943015333E-4	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999958457194256	WITHOUT_CLASSIFICATION	4.1542805744536186E-6	DEFECT
// String getCapPackageID(); // Includes features in other packages that delegate to those in this one.	WITHOUT_CLASSIFICATION	0.9999772014205551	WITHOUT_CLASSIFICATION	2.2798579444911806E-5	DEFECT
// returns the package in which this feature is defined // returns the name of the feature get method in the package interface (e.g. Company_Name) // returns the name of the feature get method in the package interface (e.g. Xyz.eINSTANCE.getCompany_Name)	WITHOUT_CLASSIFICATION	0.9999993949351695	WITHOUT_CLASSIFICATION	6.050648305249132E-7	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999958457194256	WITHOUT_CLASSIFICATION	4.1542805744536186E-6	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999958457194256	WITHOUT_CLASSIFICATION	4.1542805744536186E-6	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999958457194256	WITHOUT_CLASSIFICATION	4.1542805744536186E-6	DEFECT
// // EMF.Editor generation //	WITHOUT_CLASSIFICATION	0.9998328740273268	WITHOUT_CLASSIFICATION	1.6712597267316864E-4	DEFECT
// // Tests generation //	WITHOUT_CLASSIFICATION	0.9999415920470428	WITHOUT_CLASSIFICATION	5.84079529571351E-5	DEFECT
// boolean isGenerateEditPlugin(); // boolean isGenerateEditorPlugin();	WITHOUT_CLASSIFICATION	0.9999982852851496	WITHOUT_CLASSIFICATION	1.7147148504613854E-6	DEFECT
//  Remove any non-Java dependencies from being added. //	WITHOUT_CLASSIFICATION	0.9999969714144901	WITHOUT_CLASSIFICATION	3.0285855099878297E-6	DEFECT
// This URI handler redirect the URI based on the mapping. //	WITHOUT_CLASSIFICATION	0.9994808278562783	WITHOUT_CLASSIFICATION	5.191721437216735E-4	DEFECT
// There must be at least one match. //	WITHOUT_CLASSIFICATION	0.9999782982562085	WITHOUT_CLASSIFICATION	2.1701743791500864E-5	DEFECT
// Ignore if there is not substantial change. //	WITHOUT_CLASSIFICATION	0.9999490136722536	WITHOUT_CLASSIFICATION	5.098632774644301E-5	DEFECT
// Do allow an existing build.properties to be overwritten, since it may have been created as part of an empty EMF project. // Use the existence of a plugin.xml as a guard against overwriting in a project that has already been generated. //	WITHOUT_CLASSIFICATION	0.9999957046457233	WITHOUT_CLASSIFICATION	4.295354276673299E-6	DEFECT
// Do allow an existing build.properties to be overwritten, since it may have been created as part of an empty EMF project. // Use the existence of a plugin.xml as a guard against overwriting in a project that has already been generated. //	WITHOUT_CLASSIFICATION	0.9999957046457233	WITHOUT_CLASSIFICATION	4.295354276673299E-6	DEFECT
// Do not allow an existing MANIFEST.MF to be overwritten, as the tests project is originally generated from scratch. //	WITHOUT_CLASSIFICATION	0.9999968889837821	WITHOUT_CLASSIFICATION	3.111016217814392E-6	DEFECT
// Do not allow an existing build.properties to be overwritten, as the tests project is originally generated from scratch. //	WITHOUT_CLASSIFICATION	0.9999913098596365	WITHOUT_CLASSIFICATION	8.69014036351169E-6	DEFECT
//We are not generating the manifest file if the plugin.xml exists. //	WITHOUT_CLASSIFICATION	0.999987909908672	WITHOUT_CLASSIFICATION	1.2090091327905358E-5	DEFECT
// Use an alternate if we can't write to this one. //	WITHOUT_CLASSIFICATION	0.9999829310930589	WITHOUT_CLASSIFICATION	1.7068906941175823E-5	DEFECT
// J9 2.2 has problems assigning null to a Class variable. // 	WITHOUT_CLASSIFICATION	0.9999989030820694	WITHOUT_CLASSIFICATION	1.096917930622337E-6	DEFECT
// Create the options model. //	WITHOUT_CLASSIFICATION	0.9999988485370389	WITHOUT_CLASSIFICATION	1.1514629610535055E-6	DEFECT
//  Remove any non-Java dependencies from being added. //	WITHOUT_CLASSIFICATION	0.9999969714144901	WITHOUT_CLASSIFICATION	3.0285855099878297E-6	DEFECT
// Escape a string that will terminate the comment in which this will all be nested. //	WITHOUT_CLASSIFICATION	0.9999777984490212	WITHOUT_CLASSIFICATION	2.220155097876282E-5	DEFECT
// If it is an unqualified name, we will assume it refers to a type parameter, since we don't support default package. //	WITHOUT_CLASSIFICATION	0.9999992546993023	WITHOUT_CLASSIFICATION	7.453006977057538E-7	DEFECT
// Search the local scope for a resolution of the type parameter name. //	WITHOUT_CLASSIFICATION	0.9999958550639421	WITHOUT_CLASSIFICATION	4.144936057914651E-6	DEFECT
// Check if we found a resolution for it. //	WITHOUT_CLASSIFICATION	0.9999866043376942	WITHOUT_CLASSIFICATION	1.339566230579775E-5	DEFECT
// If not we'll erase it to java.lang.Object. //	WITHOUT_CLASSIFICATION	0.9999870119630972	WITHOUT_CLASSIFICATION	1.29880369027986E-5	DEFECT
// Otherwise, recursively call ourselves to substitute it in context if necessary. //	WITHOUT_CLASSIFICATION	0.9999988424354822	WITHOUT_CLASSIFICATION	1.1575645178968229E-6	DEFECT
// Add back in the array indices if there are any. //	WITHOUT_CLASSIFICATION	0.999966749275972	WITHOUT_CLASSIFICATION	3.3250724028057345E-5	DEFECT
// Just import the name or use it directly. //	WITHOUT_CLASSIFICATION	0.9999984696522253	WITHOUT_CLASSIFICATION	1.530347774755466E-6	DEFECT
// We treat the feature as volatile if it is volatile itself or if it is  // a reference whose opposite end is volatile,  // unless that opposite volatile reference delegates to a feature map, // in which case, a full implementation of the references can be generated. //	WITHOUT_CLASSIFICATION	0.9999995637613409	WITHOUT_CLASSIFICATION	4.362386590831902E-7	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.9998283283605699	WITHOUT_CLASSIFICATION	1.7167163943015333E-4	DEFECT
/////////////////////////////////  HEADLESS INVOCATION  /////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9997455175226326	WITHOUT_CLASSIFICATION	2.5448247736743404E-4	DEFECT
// for Ecore or something that explicitly extends it, we need to exclude // EObject, which is already handled by the default case	WITHOUT_CLASSIFICATION	0.9999991373376976	WITHOUT_CLASSIFICATION	8.626623024794357E-7	DEFECT
// We assume that the rootExtendsClass already implements it. //	WITHOUT_CLASSIFICATION	0.9999970551409126	WITHOUT_CLASSIFICATION	2.9448590874291686E-6	DEFECT
// We assume that the rootExtendsClass already implements it. //	WITHOUT_CLASSIFICATION	0.9999970551409126	WITHOUT_CLASSIFICATION	2.9448590874291686E-6	DEFECT
// If the flag will straddle two fields, bump it to the next one. //	WITHOUT_CLASSIFICATION	0.999885680044962	WITHOUT_CLASSIFICATION	1.1431995503802433E-4	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.9998283283605699	WITHOUT_CLASSIFICATION	1.7167163943015333E-4	DEFECT
// Ignore the exception.	WITHOUT_CLASSIFICATION	0.9999587716194995	WITHOUT_CLASSIFICATION	4.122838050048552E-5	DEFECT
// An interface should be abstract, but this makes sure of that fact. //	WITHOUT_CLASSIFICATION	0.9999581623944089	WITHOUT_CLASSIFICATION	4.183760559100879E-5	DEFECT
// Simple cases: no mix-ins for no inheritance or for a single base class. //	WITHOUT_CLASSIFICATION	0.9999934985308814	WITHOUT_CLASSIFICATION	6.501469118558404E-6	DEFECT
// If extending an interface, its mix-ins must be included, since there is no implementation to handle them. //	WITHOUT_CLASSIFICATION	0.9999993191790739	WITHOUT_CLASSIFICATION	6.808209260568213E-7	DEFECT
// Mix-ins are everything after the base class. //	WITHOUT_CLASSIFICATION	0.9999955534676093	WITHOUT_CLASSIFICATION	4.4465323907058746E-6	DEFECT
// If this is class has mixed content, the mixed feature should always be included, even if inherited, and come first. //	WITHOUT_CLASSIFICATION	0.9999792863903515	WITHOUT_CLASSIFICATION	2.0713609648442745E-5	DEFECT
// Add all other create child features that this item provider is responsible for. //	WITHOUT_CLASSIFICATION	0.9999521088039183	WITHOUT_CLASSIFICATION	4.7891196081682466E-5	DEFECT
// Many inherited methods must be overridden to handle this case. //	WITHOUT_CLASSIFICATION	0.9999983336937077	WITHOUT_CLASSIFICATION	1.666306292258018E-6	DEFECT
// If this looks like a feature getter, a kind property will allow it to be recognized properly. //	WITHOUT_CLASSIFICATION	0.999353241947782	WITHOUT_CLASSIFICATION	6.467580522181045E-4	DEFECT
// Since we only use this right on an operation, we always want to include the keyType and valueType, and we never // want to qualify the property names. //	WITHOUT_CLASSIFICATION	0.9999988241049907	WITHOUT_CLASSIFICATION	1.175895009201684E-6	DEFECT
// Type parameter casts can't be checked. //	WITHOUT_CLASSIFICATION	0.9999942953547675	WITHOUT_CLASSIFICATION	5.7046452325762985E-6	DEFECT
// If there are any arguments and they are not unbounded wildcards, casts can't be checked. //	WITHOUT_CLASSIFICATION	0.9999608929574798	WITHOUT_CLASSIFICATION	3.910704252029012E-5	DEFECT
// Optimize the performance of applying the import regular  // expressions locating the last import line //      	WITHOUT_CLASSIFICATION	0.999996464485223	WITHOUT_CLASSIFICATION	3.5355147769649853E-6	DEFECT
// Some XML types declare nebulous Object mappings. // They actually map to internal types that shouldn't be generated into code. //	WITHOUT_CLASSIFICATION	0.9999172159709891	WITHOUT_CLASSIFICATION	8.278402901084944E-5	DEFECT
// If there is a base XML or Ecore type, use one of the two corresponding built-in factories to create a value from the literal string. //	WITHOUT_CLASSIFICATION	0.9999312206789623	WITHOUT_CLASSIFICATION	6.877932103764338E-5	DEFECT
// Get the Java literal expression for the value. //	WITHOUT_CLASSIFICATION	0.9999995517806538	WITHOUT_CLASSIFICATION	4.4821934617387975E-7	DEFECT
// Otherwise, produce an expression that uses the appropriate factory to create a value from the literal. //	WITHOUT_CLASSIFICATION	0.99999925965872	WITHOUT_CLASSIFICATION	7.403412798917299E-7	DEFECT
// If the base package isn't set but there is a parent package, us it's information instead. //	WITHOUT_CLASSIFICATION	0.9999435258601163	WITHOUT_CLASSIFICATION	5.647413988367355E-5	DEFECT
// Add all classes from this package first, to guarantee they get the // simple names	WITHOUT_CLASSIFICATION	0.9999990928173184	WITHOUT_CLASSIFICATION	9.071826816838387E-7	DEFECT
// Do this here because getExtendedMetaData() is used during initialization  // and the mappings are are populated the first time it's fetched // which will miss the packages we add as we initialize the tree. //	WITHOUT_CLASSIFICATION	0.999987309701023	WITHOUT_CLASSIFICATION	1.2690298977075374E-5	DEFECT
// Set the mapper to build an XSD2EcoreMappingRoot, if available. //	WITHOUT_CLASSIFICATION	0.9999633103015866	WITHOUT_CLASSIFICATION	3.6689698413365404E-5	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.9998283283605699	WITHOUT_CLASSIFICATION	1.7167163943015333E-4	DEFECT
// if there are no groups defined or matched, but the whole pattern matches, // then markup nodes with pattern name //	WITHOUT_CLASSIFICATION	0.9999977502116714	WITHOUT_CLASSIFICATION	2.249788328676913E-6	DEFECT
// Restore original resource URI values. //	WITHOUT_CLASSIFICATION	0.9999981431452972	WITHOUT_CLASSIFICATION	1.8568547028076086E-6	DEFECT
// The "suffix" can actually be a substitution pattern for the package name. //	WITHOUT_CLASSIFICATION	0.9999877798074228	WITHOUT_CLASSIFICATION	1.222019257716108E-5	DEFECT
// Walk up the superpackages, collecting the package names. // Because empty packages are ommitted from the GenModel, we need to walk up the EPackages. //	WITHOUT_CLASSIFICATION	0.9999936984488029	WITHOUT_CLASSIFICATION	6.301551197126352E-6	DEFECT
// Any features that delegate to features in this package. //	WITHOUT_CLASSIFICATION	0.9999710279792303	WITHOUT_CLASSIFICATION	2.897202076963556E-5	DEFECT
// If there are delegated features, add only those that aren't already in this package to the end of the list. //	WITHOUT_CLASSIFICATION	0.9999296338760034	WITHOUT_CLASSIFICATION	7.036612399653609E-5	DEFECT
// We need to screen out duplicates in the unlikely event that we have two //  features with the same class-qualified name. We'll only generate one property //  string in that case and let the user add the second one manually, if necessary. //	WITHOUT_CLASSIFICATION	0.9999090665473822	WITHOUT_CLASSIFICATION	9.093345261783913E-5	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.9998283283605699	WITHOUT_CLASSIFICATION	1.7167163943015333E-4	DEFECT
// source method return type is array (getExceptions), target is not array (i.e. addException)	WITHOUT_CLASSIFICATION	0.9999985707523578	WITHOUT_CLASSIFICATION	1.4292476421978517E-6	DEFECT
// We also need to set it on any GenModels holding any used or static packages that may be refered to. //	WITHOUT_CLASSIFICATION	0.9999602165899725	WITHOUT_CLASSIFICATION	3.978341002754862E-5	DEFECT
// We also need to set it on any GenModels holding any used or static packages that may be refered to. //	WITHOUT_CLASSIFICATION	0.9999602165899725	WITHOUT_CLASSIFICATION	3.978341002754862E-5	DEFECT
// And we need to set it on any cached GenModels holding the special Ecore and XML packages. //	WITHOUT_CLASSIFICATION	0.9991057725924231	WITHOUT_CLASSIFICATION	8.942274075769549E-4	DEFECT
// And we need to set it on any cached GenModels holding the special Ecore and XML packages. //	WITHOUT_CLASSIFICATION	0.9991057725924231	WITHOUT_CLASSIFICATION	8.942274075769549E-4	DEFECT
// It's okay for there not be a precompiled template, so fail quietly. // exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999946868812127	WITHOUT_CLASSIFICATION	5.313118787185649E-6	DEFECT
// If there are any warnings other than raw type warnings, include all the warnings. //	WITHOUT_CLASSIFICATION	0.9999987331285131	WITHOUT_CLASSIFICATION	1.2668714869152955E-6	DEFECT
// Force the project to be setup properly. //	WITHOUT_CLASSIFICATION	0.9999466545639166	WITHOUT_CLASSIFICATION	5.3345436083466983E-5	DEFECT
// Force the project to be setup properly. //	WITHOUT_CLASSIFICATION	0.9999466545639166	WITHOUT_CLASSIFICATION	5.3345436083466983E-5	DEFECT
// node is not marked up by now, but keep checking other rules 	WITHOUT_CLASSIFICATION	0.9999685964071657	WITHOUT_CLASSIFICATION	3.140359283420268E-5	DEFECT
// Subclasses may override this method	WITHOUT_CLASSIFICATION	0.9999959076488749	WITHOUT_CLASSIFICATION	4.092351124991298E-6	DEFECT
// // Tests generation //	WITHOUT_CLASSIFICATION	0.9999415920470428	WITHOUT_CLASSIFICATION	5.84079529571351E-5	DEFECT
// If we change to pattern defaults, will have to specify plain suffix in no main package case. //	WITHOUT_CLASSIFICATION	0.9999240925663534	WITHOUT_CLASSIFICATION	7.590743364659306E-5	DEFECT
// If we change to pattern defaults, will have to specify plain suffix in no main package case. //	WITHOUT_CLASSIFICATION	0.9999240925663534	WITHOUT_CLASSIFICATION	7.590743364659306E-5	DEFECT
// If we change to pattern defaults, will have to specify plain suffix in no main package case. //	WITHOUT_CLASSIFICATION	0.9999240925663534	WITHOUT_CLASSIFICATION	7.590743364659306E-5	DEFECT
// Subclasses may override this method	WITHOUT_CLASSIFICATION	0.9999959076488749	WITHOUT_CLASSIFICATION	4.092351124991298E-6	DEFECT
// See if a GenModel is registered for the package's URI, and if so, try to load it. //	WITHOUT_CLASSIFICATION	0.9999997524411186	WITHOUT_CLASSIFICATION	2.475588813768163E-7	DEFECT
// If that didn't work, just synthesize one. //	WITHOUT_CLASSIFICATION	0.9998119875022099	WITHOUT_CLASSIFICATION	1.8801249779006285E-4	DEFECT
// Different than the Edit and Editor projects, this method is invoked while  // generating the model plugin xml.	WITHOUT_CLASSIFICATION	0.9999766981725228	WITHOUT_CLASSIFICATION	2.330182747729439E-5	DEFECT
// EATM  // Foreign Model	WITHOUT_CLASSIFICATION	0.9990161823894186	WITHOUT_CLASSIFICATION	9.838176105813618E-4	DEFECT
// Any features from one package that delegate to features in another. //	WITHOUT_CLASSIFICATION	0.9999459132636397	WITHOUT_CLASSIFICATION	5.4086736360237526E-5	DEFECT
// If there are features delegating across packages, add only those that aren't already being generated. //	WITHOUT_CLASSIFICATION	0.9999914161856363	WITHOUT_CLASSIFICATION	8.583814363789447E-6	DEFECT
// Recompute the read only state. //	WITHOUT_CLASSIFICATION	0.9999618035048894	WITHOUT_CLASSIFICATION	3.8196495110716434E-5	DEFECT
// Refresh any actions that may become enabled or disabled. //	WITHOUT_CLASSIFICATION	0.9999962397416952	WITHOUT_CLASSIFICATION	3.7602583048834018E-6	DEFECT
// Create the command stack that will notify this editor as commands are executed. //	WITHOUT_CLASSIFICATION	0.9997777961299169	WITHOUT_CLASSIFICATION	2.222038700832275E-4	DEFECT
// Add a listener to set the most recent command's affected objects to be the selection of the viewer with focus. //	WITHOUT_CLASSIFICATION	0.9999974858673314	WITHOUT_CLASSIFICATION	2.514132668679273E-6	DEFECT
// Try to select the affected objects. //	WITHOUT_CLASSIFICATION	0.9999911955002312	WITHOUT_CLASSIFICATION	8.804499768888832E-6	DEFECT
// Create the editing domain with a special command stack. //	WITHOUT_CLASSIFICATION	0.9999501074889837	WITHOUT_CLASSIFICATION	4.98925110162712E-5	DEFECT
// Make sure it's okay. //	WITHOUT_CLASSIFICATION	0.999993203698398	WITHOUT_CLASSIFICATION	6.796301602027732E-6	DEFECT
// Try to select the items in the current content viewer of the editor. //	WITHOUT_CLASSIFICATION	0.9990152522011699	WITHOUT_CLASSIFICATION	9.847477988300748E-4	DEFECT
// If it is changing... //	WITHOUT_CLASSIFICATION	0.9999768899634203	WITHOUT_CLASSIFICATION	2.3110036579781614E-5	DEFECT
// Create the listener on demand. //	WITHOUT_CLASSIFICATION	0.9999924568107678	WITHOUT_CLASSIFICATION	7.543189232173699E-6	DEFECT
// This just notifies those things that are affected by the section. //	WITHOUT_CLASSIFICATION	0.9999277089975437	WITHOUT_CLASSIFICATION	7.229100245635133E-5	DEFECT
// Stop listening to the old one. //	WITHOUT_CLASSIFICATION	0.9999838351133848	WITHOUT_CLASSIFICATION	1.6164886615184966E-5	DEFECT
// Start listening to the new one. //	WITHOUT_CLASSIFICATION	0.9999969498392978	WITHOUT_CLASSIFICATION	3.0501607023653643E-6	DEFECT
// Remember it. //	WITHOUT_CLASSIFICATION	0.9999928668814604	WITHOUT_CLASSIFICATION	7.133118539554705E-6	DEFECT
// Set the editors selection based on the current viewer's selection. //	WITHOUT_CLASSIFICATION	0.999958081871174	WITHOUT_CLASSIFICATION	4.1918128826060755E-5	DEFECT
// Load the resource through the editing domain. //	WITHOUT_CLASSIFICATION	0.9999944435042761	WITHOUT_CLASSIFICATION	5.556495723819515E-6	DEFECT
// Creates the model from the editor input //	WITHOUT_CLASSIFICATION	0.9999956257317678	WITHOUT_CLASSIFICATION	4.374268232163076E-6	DEFECT
// Only creates the other pages if there is something that can be edited //	WITHOUT_CLASSIFICATION	0.9999949515345804	WITHOUT_CLASSIFICATION	5.04846541961151E-6	DEFECT
// Create a page for the selection tree view. //	WITHOUT_CLASSIFICATION	0.9999987000870778	WITHOUT_CLASSIFICATION	1.2999129221367604E-6	DEFECT
// Ensures that this editor will only display the page's tab // area if there are more than one page //	WITHOUT_CLASSIFICATION	0.9999319421075431	WITHOUT_CLASSIFICATION	6.805789245686095E-5	DEFECT
// The content outline is just a tree. //	WITHOUT_CLASSIFICATION	0.9999969597886372	WITHOUT_CLASSIFICATION	3.0402113626518825E-6	DEFECT
// Set up the tree viewer. //	WITHOUT_CLASSIFICATION	0.9999916220695798	WITHOUT_CLASSIFICATION	8.37793042016878E-6	DEFECT
// Make sure our popups work. //	WITHOUT_CLASSIFICATION	0.999792280586219	WITHOUT_CLASSIFICATION	2.0771941378081154E-4	DEFECT
// Select the root object in the view. //	WITHOUT_CLASSIFICATION	0.9999849742177175	WITHOUT_CLASSIFICATION	1.502578228243813E-5	DEFECT
// Listen to selection so that we can handle it is a special way. //	WITHOUT_CLASSIFICATION	0.999997807428602	WITHOUT_CLASSIFICATION	2.19257139790257E-6	DEFECT
// This ensures that we handle selections correctly. //	WITHOUT_CLASSIFICATION	0.9997114288391179	WITHOUT_CLASSIFICATION	2.8857116088203464E-4	DEFECT
// Get the first selected element. //	WITHOUT_CLASSIFICATION	0.9999992524617337	WITHOUT_CLASSIFICATION	7.475382662273749E-7	DEFECT
// log the error, ignore the change and continue	WITHOUT_CLASSIFICATION	0.9999214897137265	WITHOUT_CLASSIFICATION	7.851028627357679E-5	DEFECT
// Save the resources to the file system. //	WITHOUT_CLASSIFICATION	0.999983942283425	WITHOUT_CLASSIFICATION	1.6057716574991475E-5	DEFECT
// Set the selection to the widget. //	WITHOUT_CLASSIFICATION	0.9998610061854258	WITHOUT_CLASSIFICATION	1.389938145741405E-4	DEFECT
// Do the work within an operation because this is a long running activity that modifies the workbench. //	WITHOUT_CLASSIFICATION	0.9998306049913627	WITHOUT_CLASSIFICATION	1.6939500863739584E-4	DEFECT
// Save only resources that have actually changed. //	WITHOUT_CLASSIFICATION	0.9998089625564247	WITHOUT_CLASSIFICATION	1.9103744357527367E-4	DEFECT
// This is the method that gets invoked when the operation runs. //	WITHOUT_CLASSIFICATION	0.9990033069331098	WITHOUT_CLASSIFICATION	9.966930668902016E-4	DEFECT
// loop for all commented out nodes	WITHOUT_CLASSIFICATION	0.999998348830192	WITHOUT_CLASSIFICATION	1.6511698080502648E-6	DEFECT
// Do the work within an operation because this is a long running activity that modifies the workbench. //	WITHOUT_CLASSIFICATION	0.9998306049913627	WITHOUT_CLASSIFICATION	1.6939500863739584E-4	DEFECT
// Refresh the necessary state. //	WITHOUT_CLASSIFICATION	0.9999969639663361	WITHOUT_CLASSIFICATION	3.036033663856083E-6	DEFECT
// This runs the options, and shows progress. //	WITHOUT_CLASSIFICATION	0.9996150749577101	WITHOUT_CLASSIFICATION	3.8492504228993934E-4	DEFECT
// insert line break and comment out the first line if needed // note that first line might move backward beyond node start (e.g. if a comma of the previous enum constant has been commented out)	WITHOUT_CLASSIFICATION	0.999994725914973	WITHOUT_CLASSIFICATION	5.2740850270182485E-6	DEFECT
// Something went wrong that shouldn't. //	WITHOUT_CLASSIFICATION	0.9994497687012287	WITHOUT_CLASSIFICATION	5.502312987712894E-4	DEFECT
// Nothing to do	WITHOUT_CLASSIFICATION	0.9999020198436539	WITHOUT_CLASSIFICATION	9.79801563461521E-5	DEFECT
// This is the method that gets invoked when the operation runs. //	WITHOUT_CLASSIFICATION	0.9990033069331098	WITHOUT_CLASSIFICATION	9.966930668902016E-4	DEFECT
// Something went wrong that shouldn't. //	WITHOUT_CLASSIFICATION	0.9994497687012287	WITHOUT_CLASSIFICATION	5.502312987712894E-4	DEFECT
// Stop only on cancel. //	WITHOUT_CLASSIFICATION	0.9999365580360968	WITHOUT_CLASSIFICATION	6.344196390325046E-5	DEFECT
// insert line break at the first line if there is something before the node start and the beginning of the line	WITHOUT_CLASSIFICATION	0.9999962284644668	WITHOUT_CLASSIFICATION	3.771535533191099E-6	DEFECT
// Switch to the new selection provider. //	WITHOUT_CLASSIFICATION	0.99998711077656	WITHOUT_CLASSIFICATION	1.2889223439957962E-5	DEFECT
// Fake a selection changed event to update the menus. //	WITHOUT_CLASSIFICATION	0.9999946891383886	WITHOUT_CLASSIFICATION	5.31086161140091E-6	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999484135833615	WITHOUT_CLASSIFICATION	5.158641663847135E-5	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999976220319823	WITHOUT_CLASSIFICATION	2.3779680177053606E-6	DEFECT
//Class/genFeature.override.javajetinc //for	WITHOUT_CLASSIFICATION	0.9999929857393792	WITHOUT_CLASSIFICATION	7.014260620807617E-6	DEFECT
// Kick of a Java build if not already in a build. //	WITHOUT_CLASSIFICATION	0.9999547836147742	WITHOUT_CLASSIFICATION	4.5216385225736234E-5	DEFECT
//Class/implementedGenOperation.override.javajetinc //for	WITHOUT_CLASSIFICATION	0.9999983182064356	WITHOUT_CLASSIFICATION	1.6817935643874903E-6	DEFECT
// do not add a new line if there is one	WITHOUT_CLASSIFICATION	0.9999700571184628	WITHOUT_CLASSIFICATION	2.9942881537259607E-5	DEFECT
// This call should get the files checked out from version control if the project is a 'team' project. //	WITHOUT_CLASSIFICATION	0.9999770693282911	WITHOUT_CLASSIFICATION	2.2930671708906506E-5	DEFECT
// there is only whitespace on this line - no need for line break	WITHOUT_CLASSIFICATION	0.999966749712391	WITHOUT_CLASSIFICATION	3.325028760908297E-5	DEFECT
// Check which directive it is. //	WITHOUT_CLASSIFICATION	0.9999930504494238	WITHOUT_CLASSIFICATION	6.94955057624727E-6	DEFECT
//reader.reset(start); //return false;	WITHOUT_CLASSIFICATION	0.9999783495304106	WITHOUT_CLASSIFICATION	2.1650469589316936E-5	DEFECT
// Parse the attr-val pairs. //	WITHOUT_CLASSIFICATION	0.999999104039894	WITHOUT_CLASSIFICATION	8.959601060220322E-7	DEFECT
// If the template path points at a project with a JET Nature,  // then we will assume that the templates we want to use are already compiled in this plugin Java project. // 	WITHOUT_CLASSIFICATION	0.9999907107813337	WITHOUT_CLASSIFICATION	9.289218666285766E-6	DEFECT
// Compute the URL for where the classes for this project will be located. //	WITHOUT_CLASSIFICATION	0.9999975003270177	WITHOUT_CLASSIFICATION	2.4996729821807653E-6	DEFECT
// Compute the URLs for all the output folder of all the project dependencies. //	WITHOUT_CLASSIFICATION	0.9999982223516821	WITHOUT_CLASSIFICATION	1.7776483178119848E-6	DEFECT
// Define a class loader that will look in the URLs first,  // and if it doesn't find the class there, uses the emitter's loader. //	WITHOUT_CLASSIFICATION	0.9999849288939854	WITHOUT_CLASSIFICATION	1.5071106014518638E-5	DEFECT
// Define a class loader that will look up the class in the bundle, // and if it doesn't find it there, will look in the parent. //	WITHOUT_CLASSIFICATION	0.9999438704245543	WITHOUT_CLASSIFICATION	5.6129575445765485E-5	DEFECT
// Strip off the trailing "_" and load that class. //	WITHOUT_CLASSIFICATION	0.9999964202184528	WITHOUT_CLASSIFICATION	3.579781547168811E-6	DEFECT
// Check that the class is actually different from the one that's directly visible to the JETEmitter. //	WITHOUT_CLASSIFICATION	0.9999049147285739	WITHOUT_CLASSIFICATION	9.508527142606403E-5	DEFECT
// Don't do any of the other normally dynamic JETEmitter project processing. //	WITHOUT_CLASSIFICATION	0.9999776752904234	WITHOUT_CLASSIFICATION	2.2324709576634045E-5	DEFECT
// Get the existing classpath and remove the project root if necessary. // Any new non-duplicate entries will be added to this. //	WITHOUT_CLASSIFICATION	0.9999995838832922	WITHOUT_CLASSIFICATION	4.161167077886089E-7	DEFECT
// Add the new entries, including source, JRE container, and added variables and classpath containers.  //	WITHOUT_CLASSIFICATION	0.9999999579881894	WITHOUT_CLASSIFICATION	4.20118106493333E-8	DEFECT
// Construct a proper URL for relative lookup. //	WITHOUT_CLASSIFICATION	0.9999966015020559	WITHOUT_CLASSIFICATION	3.3984979440999705E-6	DEFECT
// Determine all the bundles that this project depends on. //	WITHOUT_CLASSIFICATION	0.9999932932857931	WITHOUT_CLASSIFICATION	6.706714206870153E-6	DEFECT
// If it doesn't correspond to a bundle, then try to process it as a project in the workspace. //	WITHOUT_CLASSIFICATION	0.9998528731143558	WITHOUT_CLASSIFICATION	1.4712688564417315E-4	DEFECT
// Add JETBuilder //	WITHOUT_CLASSIFICATION	0.9999527852489386	WITHOUT_CLASSIFICATION	4.721475106145821E-5	DEFECT
// Create .jetproperties file //	WITHOUT_CLASSIFICATION	0.999996261776817	WITHOUT_CLASSIFICATION	3.73822318295866E-6	DEFECT
// clone includeStack without cloning contents //	WITHOUT_CLASSIFICATION	0.999986106045233	WITHOUT_CLASSIFICATION	1.3893954766939567E-5	DEFECT
// Store the current state in stack. //	WITHOUT_CLASSIFICATION	0.9999347389799953	WITHOUT_CLASSIFICATION	6.526102000472997E-5	DEFECT
// Set the new variables. //	WITHOUT_CLASSIFICATION	0.9999997416893778	WITHOUT_CLASSIFICATION	2.583106222235322E-7	DEFECT
// Make sure we have something to pop. //	WITHOUT_CLASSIFICATION	0.9999881938973725	WITHOUT_CLASSIFICATION	1.1806102627600535E-5	DEFECT
// Get previous state in stack. //	WITHOUT_CLASSIFICATION	0.9999879249770561	WITHOUT_CLASSIFICATION	1.2075022943921601E-5	DEFECT
// Until the encoding can be specified within the template  // we need to assume an encoding capable of working with any character set.	WITHOUT_CLASSIFICATION	0.9997413189497975	WITHOUT_CLASSIFICATION	2.586810502025681E-4	DEFECT
// Register the file, and read its content: //	WITHOUT_CLASSIFICATION	0.9999882865803698	WITHOUT_CLASSIFICATION	1.1713419630347378E-5	DEFECT
// Is stack created ? (will happen if the JET file we're looking at is missing. //	WITHOUT_CLASSIFICATION	0.9999789854962338	WITHOUT_CLASSIFICATION	2.1014503766223925E-5	DEFECT
// Restore parser state: //	WITHOUT_CLASSIFICATION	0.9999439434378473	WITHOUT_CLASSIFICATION	5.605656215271583E-5	DEFECT
// Consume the open quote: //	WITHOUT_CLASSIFICATION	0.999894162047164	WITHOUT_CLASSIFICATION	1.0583795283610991E-4	DEFECT
// Check end of quote, skip closing quote: //	WITHOUT_CLASSIFICATION	0.9998242032112109	WITHOUT_CLASSIFICATION	1.7579678878903301E-4	DEFECT
// Get the attribute name: //	WITHOUT_CLASSIFICATION	0.9999839350937393	WITHOUT_CLASSIFICATION	1.6064906260698044E-5	DEFECT
// Check for an equal sign: //	WITHOUT_CLASSIFICATION	0.9998155141900674	WITHOUT_CLASSIFICATION	1.8448580993261159E-4	DEFECT
// Get the attribute value: //	WITHOUT_CLASSIFICATION	0.9999860169982631	WITHOUT_CLASSIFICATION	1.3983001736991649E-5	DEFECT
// insert line break if there is non-whitespace before end of the line	WITHOUT_CLASSIFICATION	0.9999895521732429	WITHOUT_CLASSIFICATION	1.0447826757115744E-5	DEFECT
// End of the useBean tag. //	WITHOUT_CLASSIFICATION	0.999958119265853	WITHOUT_CLASSIFICATION	4.188073414688711E-5	DEFECT
// XMLesque Close tags //	WITHOUT_CLASSIFICATION	0.9997625099876071	WITHOUT_CLASSIFICATION	2.3749001239307366E-4	DEFECT
// Parse as an attribute=value: //	WITHOUT_CLASSIFICATION	0.9999950026800244	WITHOUT_CLASSIFICATION	4.997319975594469E-6	DEFECT
// Reached EOF: //	WITHOUT_CLASSIFICATION	0.999892846186741	WITHOUT_CLASSIFICATION	1.0715381325894124E-4	DEFECT
// Look for an end-of-comment or end-of-tag: //	WITHOUT_CLASSIFICATION	0.9999096701963348	WITHOUT_CLASSIFICATION	9.032980366524119E-5	DEFECT
// The include succeeded, so if there is an alternative and we're not skipping, we need to start. //	WITHOUT_CLASSIFICATION	0.9999984061175581	WITHOUT_CLASSIFICATION	1.593882441891798E-6	DEFECT
// If a newline from the previous character data remains, leave it around to be processed as if it appeared in the included file. //	WITHOUT_CLASSIFICATION	0.9999999785589051	WITHOUT_CLASSIFICATION	2.1441094997633873E-8	DEFECT
// The include failed, so if there is an alternative, we don't skip it. //	WITHOUT_CLASSIFICATION	0.9999850329698243	WITHOUT_CLASSIFICATION	1.4967030175780427E-5	DEFECT
// A section is not allowed without a preceding include with alternative. //	WITHOUT_CLASSIFICATION	0.9996279952171884	WITHOUT_CLASSIFICATION	3.720047828116084E-4	DEFECT
// This pop is safe because a section couldn't have been started without an include that pushed. //	WITHOUT_CLASSIFICATION	0.9991831592606709	WITHOUT_CLASSIFICATION	8.168407393289494E-4	DEFECT
// Process this first. //	WITHOUT_CLASSIFICATION	0.9999988461952547	WITHOUT_CLASSIFICATION	1.1538047453462646E-6	DEFECT
// Ignore this now //	WITHOUT_CLASSIFICATION	0.9999454498795055	WITHOUT_CLASSIFICATION	5.455012049451813E-5	DEFECT
// If a newline from the previous character data remains, add a generator for it. //	WITHOUT_CLASSIFICATION	0.9999981995983783	WITHOUT_CLASSIFICATION	1.8004016215939086E-6	DEFECT
// An expression with more that 931 "+" will break Sun and IBM javac compilers. //	WITHOUT_CLASSIFICATION	0.9999620462903603	WITHOUT_CLASSIFICATION	3.7953709639730524E-5	DEFECT
// Register our directive. //	WITHOUT_CLASSIFICATION	0.9999967978503356	WITHOUT_CLASSIFICATION	3.2021496643980076E-6	DEFECT
// Ignore it if there are multiple comments. //	WITHOUT_CLASSIFICATION	0.9999987544773363	WITHOUT_CLASSIFICATION	1.2455226636017696E-6	DEFECT
// Three arguments are expected: the .xml jControlModel URI, the source java URI, and the target java URI. //	WITHOUT_CLASSIFICATION	0.9999518995793593	WITHOUT_CLASSIFICATION	4.8100420640731885E-5	DEFECT
// Create the source and target JDOMs. //	WITHOUT_CLASSIFICATION	0.9999967866819541	WITHOUT_CLASSIFICATION	3.2133180458508797E-6	DEFECT
// Create a pattern dictionary for each. //	WITHOUT_CLASSIFICATION	0.9999889298723367	WITHOUT_CLASSIFICATION	1.1070127663420822E-5	DEFECT
//  We expect this failure when running stand-alone //	WITHOUT_CLASSIFICATION	0.9995740523280233	WITHOUT_CLASSIFICATION	4.259476719766816E-4	DEFECT
// JControlModel.class is used with classNames that were not found //	WITHOUT_CLASSIFICATION	0.9999841297980089	WITHOUT_CLASSIFICATION	1.5870201991197344E-5	DEFECT
// Ignore the further-most javadoc //	WITHOUT_CLASSIFICATION	0.9999951512927637	WITHOUT_CLASSIFICATION	4.848707236202583E-6	DEFECT
// retrieve source node corresponding to target //	WITHOUT_CLASSIFICATION	0.9999967665088343	WITHOUT_CLASSIFICATION	3.233491165684133E-6	DEFECT
// convert the target node to a compatible node //	WITHOUT_CLASSIFICATION	0.9999980881786799	WITHOUT_CLASSIFICATION	1.9118213202384363E-6	DEFECT
// There must be at least one match. //	WITHOUT_CLASSIFICATION	0.9999782982562085	WITHOUT_CLASSIFICATION	2.1701743791500864E-5	DEFECT
// Ignore if there is not substantial change. //	WITHOUT_CLASSIFICATION	0.9999490136722536	WITHOUT_CLASSIFICATION	5.098632774644301E-5	DEFECT
// Create the options model. //	WITHOUT_CLASSIFICATION	0.9999988485370389	WITHOUT_CLASSIFICATION	1.1514629610535055E-6	DEFECT
// Create a pattern dictionary for each. //	WITHOUT_CLASSIFICATION	0.9999889298723367	WITHOUT_CLASSIFICATION	1.1070127663420822E-5	DEFECT
// retrieve source node corresponding to target //	WITHOUT_CLASSIFICATION	0.9999967665088343	WITHOUT_CLASSIFICATION	3.233491165684133E-6	DEFECT
// convert the target node to a compatible node //	WITHOUT_CLASSIFICATION	0.9999980881786799	WITHOUT_CLASSIFICATION	1.9118213202384363E-6	DEFECT
// Method created to increase the performance of regular expressions // by reducing the length of the string that is matched. //	WITHOUT_CLASSIFICATION	0.9999987529035221	WITHOUT_CLASSIFICATION	1.2470964778108574E-6	DEFECT
// Skip if there's an equality filter and the values aren't equal. //	WITHOUT_CLASSIFICATION	0.9999975478546294	WITHOUT_CLASSIFICATION	2.4521453707099274E-6	DEFECT
// The methods were matched by a process that doesn't consider the // parameters	WITHOUT_CLASSIFICATION	0.9999990057644225	WITHOUT_CLASSIFICATION	9.942355774819462E-7	DEFECT
// Don't push method annotations into redirected methods. //	WITHOUT_CLASSIFICATION	0.999972980789534	WITHOUT_CLASSIFICATION	2.7019210466030827E-5	DEFECT
// Three arguments are expected: the .xml getControlModel() URI, the source java URI, and the target java URI. //	WITHOUT_CLASSIFICATION	0.9999693725808282	WITHOUT_CLASSIFICATION	3.0627419171732274E-5	DEFECT
// Create the source and target JCompilationUnit. //	WITHOUT_CLASSIFICATION	0.99999953202059	WITHOUT_CLASSIFICATION	4.679794099370799E-7	DEFECT
// apply changes using ASTRewrite //	WITHOUT_CLASSIFICATION	0.9999989197084416	WITHOUT_CLASSIFICATION	1.080291558412148E-6	DEFECT
// apply additional edits like replacing or commenting out nodes //	WITHOUT_CLASSIFICATION	0.9999901724572239	WITHOUT_CLASSIFICATION	9.827542776173237E-6	DEFECT
// if the node is less than 1 line long, but its contents is replaced by multiple lines, // comment out each line in it	WITHOUT_CLASSIFICATION	0.9999972406994718	WITHOUT_CLASSIFICATION	2.7593005281107997E-6	DEFECT
// replace existing InsertEdit at this position // (case when previous node ends at the same position that current node starts at)	WITHOUT_CLASSIFICATION	0.9998186431721533	WITHOUT_CLASSIFICATION	1.813568278467212E-4	DEFECT
// create and try to add dummy edit to find the ReplaceEdit // this should be faster than lookup since underneath of addChild() binary search is used	WITHOUT_CLASSIFICATION	0.999996259500617	WITHOUT_CLASSIFICATION	3.740499383127516E-6	DEFECT
// caching parser does not parse 2nd file in the same way (javadoc of package for example) // hence, new parser is created every time this method is called	WITHOUT_CLASSIFICATION	0.9999999043811724	WITHOUT_CLASSIFICATION	9.561882764761624E-8	DEFECT
// adding 'at' allows distinguish annotations from other members // (i.e. inner class verses annotation of a class) //	WITHOUT_CLASSIFICATION	0.999950483412587	WITHOUT_CLASSIFICATION	4.9516587413085436E-5	DEFECT
// find insertion point from returned result (-(insertion point) - 1) // commentIndex is the index of the first element with end position > rangeEndPos	WITHOUT_CLASSIFICATION	0.99999836466164	WITHOUT_CLASSIFICATION	1.6353383598773556E-6	DEFECT
// find insertion point from returned result (-(insertion point) - 1) // commentIndex is an index of the first element that has start position > rangeStartPos 	WITHOUT_CLASSIFICATION	0.9999993337125592	WITHOUT_CLASSIFICATION	6.662874407998294E-7	DEFECT
// extend to include the comment at the same line as the position  // if there is nothing between the position and the comment	WITHOUT_CLASSIFICATION	0.9999981303724137	WITHOUT_CLASSIFICATION	1.8696275862956543E-6	DEFECT
// there is anything else but comma after constant - insert line break	WITHOUT_CLASSIFICATION	0.9999658996643626	WITHOUT_CLASSIFICATION	3.4100335637403235E-5	DEFECT
// we don't want to include the line comments immediately before an import in the  // returned range	WITHOUT_CLASSIFICATION	0.999997470334252	WITHOUT_CLASSIFICATION	2.529665747936869E-6	DEFECT
// since enum constants are separated by commas, they should always have the default range // we can not extend their range or reduce it	WITHOUT_CLASSIFICATION	0.9999950906351673	WITHOUT_CLASSIFICATION	4.909364832696787E-6	DEFECT
// check if given node should use the default range (i.e. node removed), // or extended range (i.e. surrounding nodes removed)	WITHOUT_CLASSIFICATION	0.9999963180063197	WITHOUT_CLASSIFICATION	3.6819936802748605E-6	DEFECT
// replace arguments that match the name of the fields with the initializer value of the field //	WITHOUT_CLASSIFICATION	0.9999994345063422	WITHOUT_CLASSIFICATION	5.654936577950432E-7	DEFECT
// move all children to the type, converting enum constants to fields // // fields that are created by conversion from enum constants must be inserted after // the last final field that is used in constructors for initializers	WITHOUT_CLASSIFICATION	0.9999996672019286	WITHOUT_CLASSIFICATION	3.327980714161658E-7	DEFECT
// Three arguments are expected: the .xml jControlModel URI, the source java URI, and the target java URI. //	WITHOUT_CLASSIFICATION	0.9999518995793593	WITHOUT_CLASSIFICATION	4.8100420640731885E-5	DEFECT
// Create the source and target JDOMs. //	WITHOUT_CLASSIFICATION	0.9999967866819541	WITHOUT_CLASSIFICATION	3.2133180458508797E-6	DEFECT
// indicate that initializer has been changed // (required to not overwrite initializer if variables are split later)	WITHOUT_CLASSIFICATION	0.999996956017081	WITHOUT_CLASSIFICATION	3.043982918974878E-6	DEFECT
// lower all except the last upper case character if there are // more than one upper case characters in the beginning. // e.g. XSDElementContent -> xsdElementContent // However if the whole string is upper case, the whole string // is turned into lower case. // e.g. CPU -> cpu	WITHOUT_CLASSIFICATION	0.9999989349368027	WITHOUT_CLASSIFICATION	1.0650631972207433E-6	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999976220319823	WITHOUT_CLASSIFICATION	2.3779680177053606E-6	DEFECT
// Don't do replacement if we just did one, or if previous line // ended with a semicolon. //	WITHOUT_CLASSIFICATION	0.9999983572241679	WITHOUT_CLASSIFICATION	1.6427758321555089E-6	DEFECT
// Don't do replacement if previous line ended with a comment. //	WITHOUT_CLASSIFICATION	0.9999967342807169	WITHOUT_CLASSIFICATION	3.265719283030739E-6	DEFECT
// If the path isn't within the root of the archive,  // create a new URI for the folder location of the archive,  // so we can look in the folder that contains it. //	WITHOUT_CLASSIFICATION	0.999907673794445	WITHOUT_CLASSIFICATION	9.232620555501012E-5	DEFECT
// Trim off the "bin" or "runtime" segment. //	WITHOUT_CLASSIFICATION	0.9997687129346764	WITHOUT_CLASSIFICATION	2.312870653235973E-4	DEFECT
// Platform.resolve() doesn't work if the project is encoded. //	WITHOUT_CLASSIFICATION	0.9999431226361688	WITHOUT_CLASSIFICATION	5.6877363831281676E-5	DEFECT
// There needs to be another URL protocol right after the archive protocol, and not a "/". //	WITHOUT_CLASSIFICATION	0.9999635621694346	WITHOUT_CLASSIFICATION	3.6437830565445864E-5	DEFECT
// There must be at least one archive path. //	WITHOUT_CLASSIFICATION	0.9999947875602475	WITHOUT_CLASSIFICATION	5.212439752506521E-6	DEFECT
// There must be at least one archive path. //	WITHOUT_CLASSIFICATION	0.9999947875602475	WITHOUT_CLASSIFICATION	5.212439752506521E-6	DEFECT
// Parse to count the archive paths that must will be delegated to the nested URL based on the number of schemes at the start. //	WITHOUT_CLASSIFICATION	0.9999975827697085	WITHOUT_CLASSIFICATION	2.417230291392608E-6	DEFECT
// There should be at least one archive separator per scheme. //	WITHOUT_CLASSIFICATION	0.9999572656933827	WITHOUT_CLASSIFICATION	4.273430661737213E-5	DEFECT
// Parse to extract the archives that will be delegated to the nested URL based on the number of schemes at the start. //	WITHOUT_CLASSIFICATION	0.9999980514133916	WITHOUT_CLASSIFICATION	1.9485866083581204E-6	DEFECT
// Skip a scheme for the archive accessor to be handled directly here. //	WITHOUT_CLASSIFICATION	0.9999991310846128	WITHOUT_CLASSIFICATION	8.689153871603789E-7	DEFECT
// Skip an archive accessor to be handled by delegation to the scheme in nested URL. //	WITHOUT_CLASSIFICATION	0.9999999296652308	WITHOUT_CLASSIFICATION	7.033476922619181E-8	DEFECT
// Create the delegate URL. //	WITHOUT_CLASSIFICATION	0.9999990843042245	WITHOUT_CLASSIFICATION	9.156957756173793E-7	DEFECT
// The cutoff point to the next archive. //	WITHOUT_CLASSIFICATION	0.9999823671032545	WITHOUT_CLASSIFICATION	1.7632896745507416E-5	DEFECT
// The cutoff point to the next archive. //	WITHOUT_CLASSIFICATION	0.9999823671032545	WITHOUT_CLASSIFICATION	1.7632896745507416E-5	DEFECT
// Construct the input stream in a special efficient way for case of a file scheme. //	WITHOUT_CLASSIFICATION	0.9999979054995599	WITHOUT_CLASSIFICATION	2.0945004399877095E-6	DEFECT
// Just get the stream from the URL. //	WITHOUT_CLASSIFICATION	0.9999941601480404	WITHOUT_CLASSIFICATION	5.839851959469928E-6	DEFECT
// The name to be used for the entry. //	WITHOUT_CLASSIFICATION	0.9999960112467582	WITHOUT_CLASSIFICATION	3.9887532418426325E-6	DEFECT
// Skip over this archive path to the next one, since we are handling this one special. //	WITHOUT_CLASSIFICATION	0.9999955244483523	WITHOUT_CLASSIFICATION	4.475551647781827E-6	DEFECT
// Loop over the archive paths. //	WITHOUT_CLASSIFICATION	0.9999987000997715	WITHOUT_CLASSIFICATION	1.2999002284450131E-6	DEFECT
// The entry name to be matched. //	WITHOUT_CLASSIFICATION	0.9999825226519155	WITHOUT_CLASSIFICATION	1.747734808460534E-5	DEFECT
// Wrap the input stream as a zip stream to scan it's contents for a match. //	WITHOUT_CLASSIFICATION	0.9999972503440563	WITHOUT_CLASSIFICATION	2.7496559437301124E-6	DEFECT
// Skip to the next archive path and continue the loop. //	WITHOUT_CLASSIFICATION	0.9999833541865479	WITHOUT_CLASSIFICATION	1.664581345206775E-5	DEFECT
// Create the delegate URL //	WITHOUT_CLASSIFICATION	0.9999991226253179	WITHOUT_CLASSIFICATION	8.773746820652241E-7	DEFECT
// Create a temporary file where the existing contents of the archive can be written  // before the new contents are added. //	WITHOUT_CLASSIFICATION	0.9999995454477963	WITHOUT_CLASSIFICATION	4.545522037121587E-7	DEFECT
// Record the input and output streams for closing in case of failure so that handles are not left open. //	WITHOUT_CLASSIFICATION	0.9996001077842988	WITHOUT_CLASSIFICATION	3.9989221570123996E-4	DEFECT
// Create the output stream to the temporary file and the input stream for the delegate URL. //	WITHOUT_CLASSIFICATION	0.9999999524444019	WITHOUT_CLASSIFICATION	4.7555598067239186E-8	DEFECT
// The most deeply nested output stream that will be returned wrapped as the result. //	WITHOUT_CLASSIFICATION	0.9999938316070973	WITHOUT_CLASSIFICATION	6.16839290256184E-6	DEFECT
// A buffer for transferring archive contents. //	WITHOUT_CLASSIFICATION	0.9999984963262298	WITHOUT_CLASSIFICATION	1.5036737700723754E-6	DEFECT
// We expect there to be at least one archive path. //	WITHOUT_CLASSIFICATION	0.9999972749754694	WITHOUT_CLASSIFICATION	2.725024530534544E-6	DEFECT
// The name that will be used as the archive entry. //	WITHOUT_CLASSIFICATION	0.9999939727541078	WITHOUT_CLASSIFICATION	6.027245892140487E-6	DEFECT
// Wrap the current result as a zip stream, and record it for loop-based recursion. //	WITHOUT_CLASSIFICATION	0.9999931401803089	WITHOUT_CLASSIFICATION	6.859819691079983E-6	DEFECT
// Wrap the current input as a zip stream, and record it for loop-based recursion. //	WITHOUT_CLASSIFICATION	0.9999888158139564	WITHOUT_CLASSIFICATION	1.1184186043631631E-5	DEFECT
// Loop over the entries in the zip stream. //	WITHOUT_CLASSIFICATION	0.9999971268897715	WITHOUT_CLASSIFICATION	2.873110228523291E-6	DEFECT
// Transfer the entry and its contents. //	WITHOUT_CLASSIFICATION	0.9999063620679005	WITHOUT_CLASSIFICATION	9.363793209949358E-5	DEFECT
// Find the next archive path and continue "recursively" if there is one. //	WITHOUT_CLASSIFICATION	0.9999701261782005	WITHOUT_CLASSIFICATION	2.987382179957156E-5	DEFECT
// Create no entry since we are deleting and return immediately. //	WITHOUT_CLASSIFICATION	0.9999997577673593	WITHOUT_CLASSIFICATION	2.422326406769193E-7	DEFECT
// Create a new or replaced entry and continue processing the remaining archives. //	WITHOUT_CLASSIFICATION	0.9999996575237621	WITHOUT_CLASSIFICATION	3.424762379135135E-7	DEFECT
// Ensure that it won't be closed in the finally block. //	WITHOUT_CLASSIFICATION	0.999261290659489	WITHOUT_CLASSIFICATION	7.387093405110734E-4	DEFECT
// Wrap the deepest result so that on close, the results are finally transferred. //	WITHOUT_CLASSIFICATION	0.9999721153646584	WITHOUT_CLASSIFICATION	2.7884635341686128E-5	DEFECT
// Make sure we close only once. //	WITHOUT_CLASSIFICATION	0.9998849025510957	WITHOUT_CLASSIFICATION	1.1509744890428261E-4	DEFECT
// Close for real so that the temporary file is ready to be read. //	WITHOUT_CLASSIFICATION	0.9999991549670912	WITHOUT_CLASSIFICATION	8.450329086850895E-7	DEFECT
// Make sure they are closed no matter what bad thing happens. //	WITHOUT_CLASSIFICATION	0.9999853873311658	WITHOUT_CLASSIFICATION	1.4612668834185244E-5	DEFECT
// Close in case of failure to complete. //	WITHOUT_CLASSIFICATION	0.9999749429671817	WITHOUT_CLASSIFICATION	2.505703281826138E-5	DEFECT
// Close if we created this. //	WITHOUT_CLASSIFICATION	0.9999990145831049	WITHOUT_CLASSIFICATION	9.85416895104186E-7	DEFECT
// Go through the commands of the list. //	WITHOUT_CLASSIFICATION	0.9999889199794793	WITHOUT_CLASSIFICATION	1.1080020520778208E-5	DEFECT
// If there are some... //	WITHOUT_CLASSIFICATION	0.9999729851294126	WITHOUT_CLASSIFICATION	2.7014870587367725E-5	DEFECT
// The termination guard is in the body. //	WITHOUT_CLASSIFICATION	0.9992396001535903	WITHOUT_CLASSIFICATION	7.603998464097851E-4	DEFECT
// We can't undo it, so we'd better give up. //	WITHOUT_CLASSIFICATION	0.9999977551492365	WITHOUT_CLASSIFICATION	2.24485076338746E-6	DEFECT
// Now is the best time to record isUndoable because later we would have to do all the executes again! // This makes canUndo very simple! //	WITHOUT_CLASSIFICATION	0.9996466439943675	WITHOUT_CLASSIFICATION	3.5335600563243076E-4	DEFECT
// If we can't execute this one, we just can't do it at all. //	WITHOUT_CLASSIFICATION	0.9999770494285539	WITHOUT_CLASSIFICATION	2.2950571446035133E-5	DEFECT
// If we are pessimistic, then we need to undo all the commands that we have executed so far. //	WITHOUT_CLASSIFICATION	0.9999606994973756	WITHOUT_CLASSIFICATION	3.930050262428524E-5	DEFECT
// The most recently processed command will never have been executed. //	WITHOUT_CLASSIFICATION	0.9999776690302727	WITHOUT_CLASSIFICATION	2.2330969727224957E-5	DEFECT
// We want to unroll all the effects of the previous commands. //	WITHOUT_CLASSIFICATION	0.9999792172158054	WITHOUT_CLASSIFICATION	2.0782784194647856E-5	DEFECT
// Skip over the command that threw the exception. //	WITHOUT_CLASSIFICATION	0.9999894353422265	WITHOUT_CLASSIFICATION	1.0564657773572476E-5	DEFECT
// Iterate back over the executed commands to undo them. //	WITHOUT_CLASSIFICATION	0.9999955438205776	WITHOUT_CLASSIFICATION	4.456179422282864E-6	DEFECT
// If the command is executable, record and execute it. //	WITHOUT_CLASSIFICATION	0.9999978919337125	WITHOUT_CLASSIFICATION	2.108066287526065E-6	DEFECT
// Clear the list past the top. //	WITHOUT_CLASSIFICATION	0.9999994049024075	WITHOUT_CLASSIFICATION	5.950975924878125E-7	DEFECT
// Record the successfully executed command. //	WITHOUT_CLASSIFICATION	0.9999969726644401	WITHOUT_CLASSIFICATION	3.027335559864369E-6	DEFECT
// note that string place holder adjusts indentation // to correct this trackAndReplace method is used below	WITHOUT_CLASSIFICATION	0.9999839235189613	WITHOUT_CLASSIFICATION	1.6076481038745177E-5	DEFECT
// Iterate back over the executed commands to undo them. //	WITHOUT_CLASSIFICATION	0.9999955438205776	WITHOUT_CLASSIFICATION	4.456179422282864E-6	DEFECT
// Clear the list past the top. //	WITHOUT_CLASSIFICATION	0.9999994049024075	WITHOUT_CLASSIFICATION	5.950975924878125E-7	DEFECT
// This forces isSaveNeded to always be true. //	WITHOUT_CLASSIFICATION	0.9999844053160466	WITHOUT_CLASSIFICATION	1.559468395342419E-5	DEFECT
// Clear the list. //	WITHOUT_CLASSIFICATION	0.9999995495549772	WITHOUT_CLASSIFICATION	4.504450228294587E-7	DEFECT
//  Remember where we are now. //	WITHOUT_CLASSIFICATION	0.9999719138059666	WITHOUT_CLASSIFICATION	2.8086194033339074E-5	DEFECT
// Only if we are at the remembered index do we NOT need to save. // //return top != saveIndex;	WITHOUT_CLASSIFICATION	0.9999785994366504	WITHOUT_CLASSIFICATION	2.1400563349750873E-5	DEFECT
// Skip over the command that threw the exception. //	WITHOUT_CLASSIFICATION	0.9999894353422265	WITHOUT_CLASSIFICATION	1.0564657773572476E-5	DEFECT
// Skip over the command that threw the exception. //	WITHOUT_CLASSIFICATION	0.9999894353422265	WITHOUT_CLASSIFICATION	1.0564657773572476E-5	DEFECT
// Iterate back over the executed commands to undo them. //	WITHOUT_CLASSIFICATION	0.9999955438205776	WITHOUT_CLASSIFICATION	4.456179422282864E-6	DEFECT
// Iterate forward over the undone commands to redo them. //	WITHOUT_CLASSIFICATION	0.9999974679050422	WITHOUT_CLASSIFICATION	2.5320949577474986E-6	DEFECT
// This ensures that these useless state variables at least reflect the right value. //	WITHOUT_CLASSIFICATION	0.9999954806311562	WITHOUT_CLASSIFICATION	4.519368843826652E-6	DEFECT
// Copy to a list and allocate positions. //	WITHOUT_CLASSIFICATION	0.999997124190618	WITHOUT_CLASSIFICATION	2.875809381963179E-6	DEFECT
// Copy to a list and allocate positions. //	WITHOUT_CLASSIFICATION	0.999997124190618	WITHOUT_CLASSIFICATION	2.875809381963179E-6	DEFECT
// Count up the objects that will be removed. // The objects are exchanged to produce this list's order //	WITHOUT_CLASSIFICATION	0.999994614137981	WITHOUT_CLASSIFICATION	5.385862019110687E-6	DEFECT
// If any objects are matched. //	WITHOUT_CLASSIFICATION	0.9999926958167669	WITHOUT_CLASSIFICATION	7.304183233183792E-6	DEFECT
// Remove from by position in reverse order. //	WITHOUT_CLASSIFICATION	0.9999840729985051	WITHOUT_CLASSIFICATION	1.592700149482019E-5	DEFECT
// Remove from by position in reverse order. //	WITHOUT_CLASSIFICATION	0.9999840729985051	WITHOUT_CLASSIFICATION	1.592700149482019E-5	DEFECT
// Compact the results to remove unmatched objects //	WITHOUT_CLASSIFICATION	0.9999992011299895	WITHOUT_CLASSIFICATION	7.988700104650799E-7	DEFECT
// If any objects are matched. //	WITHOUT_CLASSIFICATION	0.9999926958167669	WITHOUT_CLASSIFICATION	7.304183233183792E-6	DEFECT
// Remove from by position in reverse order. //	WITHOUT_CLASSIFICATION	0.9999840729985051	WITHOUT_CLASSIFICATION	1.592700149482019E-5	DEFECT
// Compact the results to remove unmatched objects //	WITHOUT_CLASSIFICATION	0.9999992011299895	WITHOUT_CLASSIFICATION	7.988700104650799E-7	DEFECT
// Create view form.     //control = new ViewForm(parent, getStyle());	WITHOUT_CLASSIFICATION	0.9999972774331193	WITHOUT_CLASSIFICATION	2.722566880618705E-6	DEFECT
// Listen to title changes. // getViewPart().addPropertyListener(this);	WITHOUT_CLASSIFICATION	0.9999944807437586	WITHOUT_CLASSIFICATION	5.519256241295786E-6	DEFECT
//titleLabel.setBackground(WorkbenchColors.getActiveGradient(), WorkbenchColors.getActiveGradientPercents()); // titleLabel.setForeground(titleLabel.getDisplay().getSystemColor(SWT.COLOR_TITLE_FOREGROUND));	WITHOUT_CLASSIFICATION	0.9999996941201772	WITHOUT_CLASSIFICATION	3.058798228110013E-7	DEFECT
//actionBar.setBackground(WorkbenchColors.getActiveGradientEnd()); //systemBar.setBackground(WorkbenchColors.getActiveGradientEnd());	WITHOUT_CLASSIFICATION	0.9999782623934692	WITHOUT_CLASSIFICATION	2.1737606530770726E-5	DEFECT
//titleLabel.setBackground(null, null); // titleLabel.setForeground(null);	WITHOUT_CLASSIFICATION	0.9999965706743454	WITHOUT_CLASSIFICATION	3.4293256546017314E-6	DEFECT
// IViewPart view = getViewPart(); // titleLabel.setText(view.getTitle()); // titleLabel.setImage(view.getTitleImage());	WITHOUT_CLASSIFICATION	0.9999995495681943	WITHOUT_CLASSIFICATION	4.504318057919068E-7	DEFECT
// If there are objects to populate... //	WITHOUT_CLASSIFICATION	0.9999437615365452	WITHOUT_CLASSIFICATION	5.623846345485795E-5	DEFECT
// Create a new array. //	WITHOUT_CLASSIFICATION	0.9999970892223647	WITHOUT_CLASSIFICATION	2.9107776353925274E-6	DEFECT
// Fill in the result array with labels and re-populate the original list in order. //	WITHOUT_CLASSIFICATION	0.9998370706549498	WITHOUT_CLASSIFICATION	1.629293450502458E-4	DEFECT
// Fill in the array with labels. //	WITHOUT_CLASSIFICATION	0.9999241515970537	WITHOUT_CLASSIFICATION	7.584840294627966E-5	DEFECT
// Get the index into the list via this call to super. //	WITHOUT_CLASSIFICATION	0.9999962073277002	WITHOUT_CLASSIFICATION	3.7926722998129235E-6	DEFECT
// Set the index of the object value in the list via this call to super. //	WITHOUT_CLASSIFICATION	0.9999959646255235	WITHOUT_CLASSIFICATION	4.0353744763796695E-6	DEFECT
// Ensure there are no extraneous style bits. //	WITHOUT_CLASSIFICATION	0.9999950583351023	WITHOUT_CLASSIFICATION	4.941664897702365E-6	DEFECT
// Assign default style bits, if necessary, and ensure none conflict. //	WITHOUT_CLASSIFICATION	0.9999996824792968	WITHOUT_CLASSIFICATION	3.175207031338813E-7	DEFECT
// Paint over the selected padding spaces with the // background colour.  On GTK, the whole item, not just // the text, is selected, so we don't do this. //	WITHOUT_CLASSIFICATION	0.9999921936772754	WITHOUT_CLASSIFICATION	7.806322724569297E-6	DEFECT
// On Motif, selection color may be set as background. //	WITHOUT_CLASSIFICATION	0.9999329754758508	WITHOUT_CLASSIFICATION	6.702452414916626E-5	DEFECT
// Draw the extra first-column image. //	WITHOUT_CLASSIFICATION	0.999997463495856	WITHOUT_CLASSIFICATION	2.536504143966997E-6	DEFECT
// Stop if the next item will be out the event bounds. // The event bounds values are also misaligned on GTK. //	WITHOUT_CLASSIFICATION	0.9999861349859285	WITHOUT_CLASSIFICATION	1.3865014071623402E-5	DEFECT
// If the table is indenting, draw tree lines. //	WITHOUT_CLASSIFICATION	0.9999955164844332	WITHOUT_CLASSIFICATION	4.483515566805791E-6	DEFECT
//private final boolean iri; //private URI cachedASCIIURI;	WITHOUT_CLASSIFICATION	0.9999955743813418	WITHOUT_CLASSIFICATION	4.4256186583169014E-6	DEFECT
// Additional useful character classes, including characters valid in certain // URI components and separators used in parsing them out of a string.  // // | ucschar | escaped	WITHOUT_CLASSIFICATION	0.9999995583289697	WITHOUT_CLASSIFICATION	4.4167103027033225E-7	DEFECT
//  private static final long SCHEME_CHAR_HI = ALPHANUM_HI | highBitmask("+-."); //  private static final long SCHEME_CHAR_LO = ALPHANUM_LO | lowBitmask("+-.");	WITHOUT_CLASSIFICATION	0.9999928125728189	WITHOUT_CLASSIFICATION	7.18742718098136E-6	DEFECT
// Returns the lower half bitmask for all ASCII characters between the two // given characters, inclusive.	WITHOUT_CLASSIFICATION	0.9999992791631622	WITHOUT_CLASSIFICATION	7.20836837752656E-7	DEFECT
// Returns the upper half bitmask for all AsCII characters between the two // given characters, inclusive.	WITHOUT_CLASSIFICATION	0.9999997130074987	WITHOUT_CLASSIFICATION	2.8699250130926536E-7	DEFECT
// Returns the lower half bitmask for all the ASCII characters in the given // string.	WITHOUT_CLASSIFICATION	0.9999950529371736	WITHOUT_CLASSIFICATION	4.947062826371927E-6	DEFECT
// Returns whether the given character is in the set specified by the given // bitmask.	WITHOUT_CLASSIFICATION	0.9999992799363333	WITHOUT_CLASSIFICATION	7.200636668229093E-7	DEFECT
// Converts null to length-zero array, and clones array to ensure // immutability.	WITHOUT_CLASSIFICATION	0.9999976070713199	WITHOUT_CLASSIFICATION	2.392928680133086E-6	DEFECT
// Checks whether the string contains any more segments after the one that // starts at position i.	WITHOUT_CLASSIFICATION	0.9999901459526216	WITHOUT_CLASSIFICATION	9.854047378331424E-6	DEFECT
// Validates all of the URI components.  Factory methods should call this // before using the constructor, though they must ensure that the // inter-component requirements described in their own Javadocs are all // satisfied, themselves.  If a new URI is being constructed out of // an existing URI, this need not be called.  Instead, just the new // components may be validated individually.	WITHOUT_CLASSIFICATION	0.9999934717367026	WITHOUT_CLASSIFICATION	6.528263297365552E-6	DEFECT
// Alternate, stricter implementations of the following validation methods // are provided, commented out, for possible future use...	WITHOUT_CLASSIFICATION	0.9999715141985728	WITHOUT_CLASSIFICATION	2.848580142713069E-5	DEFECT
// <p>A valid scheme may be null, or consist of a single letter followed // by any number of letters, numbers, and the following characters: // <code>+ - .</code>	WITHOUT_CLASSIFICATION	0.9999965419967918	WITHOUT_CLASSIFICATION	3.458003208274959E-6	DEFECT
// <p>A valid opaque part must be non-null and non-empty. It may contain // any allowed URI characters, but its first character may not be // <code>/</code> 	WITHOUT_CLASSIFICATION	0.9999816240787257	WITHOUT_CLASSIFICATION	1.8375921274287004E-5	DEFECT
//return value != null && value.length() != 0 && //  value.charAt(0) != SEGMENT_SEPARATOR && //  validate(value, URIC_HI, URIC_LO, true, true);	WITHOUT_CLASSIFICATION	0.9999991603308226	WITHOUT_CLASSIFICATION	8.396691774900567E-7	DEFECT
// A valid authority may be null or contain any allowed URI characters except // for the following: <code>/ ?</code>	WITHOUT_CLASSIFICATION	0.9999920386357413	WITHOUT_CLASSIFICATION	7.961364258809343E-6	DEFECT
// <p>A valid path segment must be non-null and may contain any allowed URI // characters except for the following: <code>/ ?</code> 	WITHOUT_CLASSIFICATION	0.9999961766435562	WITHOUT_CLASSIFICATION	3.823356443784357E-6	DEFECT
// Returns null if the specified value is null or would be a valid path // segment array of a URI; otherwise, the value of the first invalid // segment. 	WITHOUT_CLASSIFICATION	0.9999992672878428	WITHOUT_CLASSIFICATION	7.327121571829094E-7	DEFECT
// Searches the specified string for any characters in the set represented // by the 128-bit bitmask.  Returns true if any occur, or false otherwise.	WITHOUT_CLASSIFICATION	0.9999985840343609	WITHOUT_CLASSIFICATION	1.415965639054615E-6	DEFECT
// note: (absolutePath || authority == null) -> hierarchical // (authority == null && device == null && !absolutePath) -> scheme == null	WITHOUT_CLASSIFICATION	0.9999977270360406	WITHOUT_CLASSIFICATION	2.272963959357734E-6	DEFECT
// note: authority == null -> hierarchical // (authority == null && device == null && !absolutePath) -> scheme == null	WITHOUT_CLASSIFICATION	0.9999977835350471	WITHOUT_CLASSIFICATION	2.216464952978771E-6	DEFECT
// note: authority == null -> hierarchical // (authority == null && device == null && !absolutePath) -> scheme == null	WITHOUT_CLASSIFICATION	0.9999977835350471	WITHOUT_CLASSIFICATION	2.216464952978771E-6	DEFECT
// note: authority == null -> hierarchical // (authority == null && device == null && !absolutePath) -> scheme == null	WITHOUT_CLASSIFICATION	0.9999977835350471	WITHOUT_CLASSIFICATION	2.216464952978771E-6	DEFECT
// Returns true if the given value is an archive scheme, as defined by // the org.eclipse.emf.common.util.URI.archiveSchemes system property. // By default, "jar", "zip", and "archive" are considered archives.	WITHOUT_CLASSIFICATION	0.9999998428913138	WITHOUT_CLASSIFICATION	1.5710868605169673E-7	DEFECT
// Tests whether this URI's path segment array is equal to that of the // given uri.	WITHOUT_CLASSIFICATION	0.9999495617286819	WITHOUT_CLASSIFICATION	5.0438271318012864E-5	DEFECT
// Tests two objects for equality, tolerating nulls; null is considered // to be a valid value that is only equal to itself.	WITHOUT_CLASSIFICATION	0.9999966473919693	WITHOUT_CLASSIFICATION	3.3526080307654285E-6	DEFECT
// Tests two strings for equality, tolerating nulls and optionally // ignoring case.	WITHOUT_CLASSIFICATION	0.9999569257798648	WITHOUT_CLASSIFICATION	4.3074220135056886E-5	DEFECT
// note: it's okay for two URIs to share a segments array, since // neither will ever modify it	WITHOUT_CLASSIFICATION	0.9999807894139326	WITHOUT_CLASSIFICATION	1.9210586067380228E-5	DEFECT
// relative path: merge with base and keep query (note: if the // base has no path and this a non-empty relative path, there is // an implied root in the resulting path) 	WITHOUT_CLASSIFICATION	0.9998444733456266	WITHOUT_CLASSIFICATION	1.5552665437327753E-4	DEFECT
// always keep fragment, even if null, and use scheme from base; // no validation needed since all components are from existing URIs	WITHOUT_CLASSIFICATION	0.9999998173674824	WITHOUT_CLASSIFICATION	1.8263251751614412E-7	DEFECT
// use a stack to accumulate segments of base, except for the last // (i.e. skip trailing separator and anything following it), and of // relative path	WITHOUT_CLASSIFICATION	0.9999819627279796	WITHOUT_CLASSIFICATION	1.803727202045472E-5	DEFECT
// Adds a segment to a stack, skipping empty segments and self references, // and interpreting parent references.	WITHOUT_CLASSIFICATION	0.9999936742687536	WITHOUT_CLASSIFICATION	6.325731246294684E-6	DEFECT
// special care must be taken for a root's parent reference: it is // either ignored or the symbolic reference itself is pushed	WITHOUT_CLASSIFICATION	0.9999396478944057	WITHOUT_CLASSIFICATION	6.035210559426514E-5	DEFECT
// unless we're already accumulating root parent references, // parent references simply pop the last segment descended	WITHOUT_CLASSIFICATION	0.9999981743835937	WITHOUT_CLASSIFICATION	1.8256164063025493E-6	DEFECT
// note: these assertions imply that neither this nor the base URI has a // relative path; thus, both have either an absolute path or no path	WITHOUT_CLASSIFICATION	0.9998494487925623	WITHOUT_CLASSIFICATION	1.505512074377562E-4	DEFECT
// Returns the shortest relative path between the the non-relative path of // the given base and this absolute path.  If the base has no path, it is // treated as the root absolute path.	WITHOUT_CLASSIFICATION	0.999988271772261	WITHOUT_CLASSIFICATION	1.1728227739019046E-5	DEFECT
// note that the copied tree should not be modified by wrapped ASTJField // // the copied tree will have source ranges for all nodes in the source file, // hence, the get methods in the new ASTJField will not return the right contents	WITHOUT_CLASSIFICATION	0.9999171353782188	WITHOUT_CLASSIFICATION	8.286462178113741E-5	DEFECT
// a single separator, possibly preceded by some parent reference // segments, is redundant	WITHOUT_CLASSIFICATION	0.9999986802587338	WITHOUT_CLASSIFICATION	1.3197412661769338E-6	DEFECT
// an empty path needs to be replaced by a single "." if there is no // query, to distinguish it from a current document reference	WITHOUT_CLASSIFICATION	0.9999550951334348	WITHOUT_CLASSIFICATION	4.490486656519819E-5	DEFECT
// Collapses non-ending empty segments, parent references, and self // references in a non-relative path, returning the same path that would // be produced from the base hierarchical URI as part of a resolve.	WITHOUT_CLASSIFICATION	0.9999951436546552	WITHOUT_CLASSIFICATION	4.856345344681995E-6	DEFECT
// if the path is non-empty and originally ended in an empty segment, a // parent reference, or a self reference, add a trailing separator	WITHOUT_CLASSIFICATION	0.9999917591412827	WITHOUT_CLASSIFICATION	8.240858717264694E-6	DEFECT
// Returns a string representation of this URI for debugging, explicitly // showing each of the components.	WITHOUT_CLASSIFICATION	0.9997846328027487	WITHOUT_CLASSIFICATION	2.1536719725130226E-4	DEFECT
// If the new prefix has segments, it is not the root absolute path, // and we need to drop the trailing empty segment and append the tail // segments.	WITHOUT_CLASSIFICATION	0.9993465098938306	WITHOUT_CLASSIFICATION	6.534901061695691E-4	DEFECT
// If this is a hierarchical URI reference and prefix is a prefix of it, // returns the portion of the path remaining after that prefix has been // trimmed; null otherwise.	WITHOUT_CLASSIFICATION	0.9999834387025852	WITHOUT_CLASSIFICATION	1.6561297414847175E-5	DEFECT
// Don't even consider it unless this is hierarchical and has scheme, // authority, device and path absoluteness equal to those of the prefix.	WITHOUT_CLASSIFICATION	0.9999706193473847	WITHOUT_CLASSIFICATION	2.9380652615348013E-5	DEFECT
// If the prefix has no segments, then it is the root absolute path, and // we know this is an absolute path, too.	WITHOUT_CLASSIFICATION	0.9997012122740365	WITHOUT_CLASSIFICATION	2.9878772596352504E-4	DEFECT
// This must have no fewer segments than the prefix.  Since the prefix // is not the root absolute path, its last segment is empty; all others // must match.	WITHOUT_CLASSIFICATION	0.9998682922805452	WITHOUT_CLASSIFICATION	1.3170771945483631E-4	DEFECT
// create new field and replace it all by original contents	WITHOUT_CLASSIFICATION	0.9999799175223554	WITHOUT_CLASSIFICATION	2.008247764456301E-5	DEFECT
// The prefix really is a prefix of this.  If this has just one more, // empty segment, the paths are the same.	WITHOUT_CLASSIFICATION	0.9983731610995953	WITHOUT_CLASSIFICATION	0.0016268389004047267	DEFECT
// Encodes a complete URI, optionally leaving % characters unescaped when // beginning a valid three-character escape sequence.  We can either treat // the first or # as a fragment separator, or encode them all.	WITHOUT_CLASSIFICATION	0.9999996587673008	WITHOUT_CLASSIFICATION	3.412326992020173E-7	DEFECT
// range to look for comments	WITHOUT_CLASSIFICATION	0.9999887556572197	WITHOUT_CLASSIFICATION	1.1244342780346463E-5	DEFECT
// Encodes the given string, replacing each ASCII character that is not in // the set specified by the 128-bit bitmask and each non-ASCII character // below 0xA0 by an escape sequence of % followed by two hex digits.  If // % is not in the set but ignoreEscaped is true, then % will not be encoded // iff it already begins a valid escape sequence.	WITHOUT_CLASSIFICATION	0.9999577149429	WITHOUT_CLASSIFICATION	4.228505710002136E-5	DEFECT
// Tests whether an escape occurs in the given string, starting at index i. // An escape sequence is a % followed by two hex digits.	WITHOUT_CLASSIFICATION	0.9999400127090883	WITHOUT_CLASSIFICATION	5.9987290911815755E-5	DEFECT
// find start position of farthest preceding comment	WITHOUT_CLASSIFICATION	0.9999711288218546	WITHOUT_CLASSIFICATION	2.887117814541812E-5	DEFECT
// The byte is automatically widened into an int, with sign extension, // for shifting.  This can introduce 1's to the left of the byte, which // must be cleared by masking before looking up the hex digit. //	WITHOUT_CLASSIFICATION	0.9999863454390163	WITHOUT_CLASSIFICATION	1.3654560983582253E-5	DEFECT
// Returns the character encoded by % followed by the two given hex digits, // which is always 0xFF or less, so can safely be casted to a byte.  If // either character is not a hex digit, a bogus result will be returned.	WITHOUT_CLASSIFICATION	0.9998683023761277	WITHOUT_CLASSIFICATION	1.3169762387228715E-4	DEFECT
// Determine the base URL by looking for the plugin.properties file in the standard way. //	WITHOUT_CLASSIFICATION	0.9999961791161395	WITHOUT_CLASSIFICATION	3.820883860561119E-6	DEFECT
// add leading hanging comments to the previous node, // hence, only comments immediately preceding the node will be in the range for removal	WITHOUT_CLASSIFICATION	0.999921892244998	WITHOUT_CLASSIFICATION	7.810775500202756E-5	DEFECT
// for enum constants use special range	WITHOUT_CLASSIFICATION	0.9999435082371967	WITHOUT_CLASSIFICATION	5.649176280338268E-5	DEFECT
//  /** //   * Simpler implementation that sets the range of any node to be the node and all preceding comments //   */ //  public SourceRange computeSourceRange(ASTNode node) //  { //    SourceRange range = new SourceRange(node.getStartPosition(), node.getLength()); // //    range = extendRangeBackward(findLeadingComment(node, getPreviousNode(node), false), range); // //    return range; //  }	WITHOUT_CLASSIFICATION	0.9999999960181549	WITHOUT_CLASSIFICATION	3.981845016216828E-9	DEFECT
// default implementation does nothing	WITHOUT_CLASSIFICATION	0.9999929292152896	WITHOUT_CLASSIFICATION	7.070784710378547E-6	DEFECT
// clear old values	WITHOUT_CLASSIFICATION	0.9999993608917136	WITHOUT_CLASSIFICATION	6.391082865413145E-7	DEFECT
// Trim off the segments corresponding to the package nesting. //	WITHOUT_CLASSIFICATION	0.9997390486882937	WITHOUT_CLASSIFICATION	2.6095131170627336E-4	DEFECT
// For an archive URI, check for the plugin.properties in the archive. //	WITHOUT_CLASSIFICATION	0.999986023502879	WITHOUT_CLASSIFICATION	1.3976497120996557E-5	DEFECT
// append extra dimensions since they are not stored in Type object	WITHOUT_CLASSIFICATION	0.9999981080902556	WITHOUT_CLASSIFICATION	1.8919097443876142E-6	DEFECT
// Trim off the "bin" or "runtime" segment. //	WITHOUT_CLASSIFICATION	0.9997687129346764	WITHOUT_CLASSIFICATION	2.312870653235973E-4	DEFECT
// If the plugin.properties isn't within the root of the archive, // create a new URI for the folder location of the archive, // so we can look in the folder that contains it. //	WITHOUT_CLASSIFICATION	0.9998766035631645	WITHOUT_CLASSIFICATION	1.2339643683548996E-4	DEFECT
// If we didn't find the plugin.properties in the usual place nor in the archive... //	WITHOUT_CLASSIFICATION	0.9999799719009554	WITHOUT_CLASSIFICATION	2.0028099044521664E-5	DEFECT
// If we can open  an input stream, then the plugin.properties is in the folder, and we have a good base URL. //	WITHOUT_CLASSIFICATION	0.9999943364388768	WITHOUT_CLASSIFICATION	5.663561123126149E-6	DEFECT
// If we still don't have a good base URL, complain about it. //	WITHOUT_CLASSIFICATION	0.9999180867278527	WITHOUT_CLASSIFICATION	8.191327214741272E-5	DEFECT
// We don't create an iterator stack until the root mapping itself has been returned by next once. // After that the stack should be non-empty and the top iterator should yield true for hasNext.	WITHOUT_CLASSIFICATION	0.9996317440430555	WITHOUT_CLASSIFICATION	3.682559569445365E-4	DEFECT
// If we are still on the root mapping itself... //	WITHOUT_CLASSIFICATION	0.9996358137356507	WITHOUT_CLASSIFICATION	3.641862643493697E-4	DEFECT
// Yield that mapping, create a stack, record it as the next one to prune, and add it to the stack. //	WITHOUT_CLASSIFICATION	0.9999738738867858	WITHOUT_CLASSIFICATION	2.6126113214157132E-5	DEFECT
// Get the top iterator, retrieve it's result, and record it as the one to which remove will be delegated. //	WITHOUT_CLASSIFICATION	0.9999990118407943	WITHOUT_CLASSIFICATION	9.8815920571125E-7	DEFECT
// If the result about to be returned has children... //	WITHOUT_CLASSIFICATION	0.9999888870005493	WITHOUT_CLASSIFICATION	1.111299945073735E-5	DEFECT
// Record the iterator as the next one to prune, and add it to the stack. //	WITHOUT_CLASSIFICATION	0.9999815428779815	WITHOUT_CLASSIFICATION	1.8457122018518468E-5	DEFECT
// There will be no iterator to prune. //	WITHOUT_CLASSIFICATION	0.9998522345324565	WITHOUT_CLASSIFICATION	1.4776546754348543E-4	DEFECT
// While the current iterator has no next... //	WITHOUT_CLASSIFICATION	0.999955608090839	WITHOUT_CLASSIFICATION	4.439190916101788E-5	DEFECT
// Pop it from the stack. //	WITHOUT_CLASSIFICATION	0.9999792370099788	WITHOUT_CLASSIFICATION	2.0762990021089294E-5	DEFECT
// If the stack is empty, we're done. //	WITHOUT_CLASSIFICATION	0.9999452512727806	WITHOUT_CLASSIFICATION	5.474872721944724E-5	DEFECT
// if the given class is subclass of enum and node is of subclass of type	WITHOUT_CLASSIFICATION	0.999994642008481	WITHOUT_CLASSIFICATION	5.357991519070971E-6	DEFECT
// Pop it off the stack. //	WITHOUT_CLASSIFICATION	0.9999713298779402	WITHOUT_CLASSIFICATION	2.8670122059749974E-5	DEFECT
// Get the next one down and then test it for has next. //	WITHOUT_CLASSIFICATION	0.9999725698618546	WITHOUT_CLASSIFICATION	2.7430138145527075E-5	DEFECT
// If there is an iterator to prune. //	WITHOUT_CLASSIFICATION	0.9999876304566795	WITHOUT_CLASSIFICATION	1.2369543320474473E-5	DEFECT
// You can only prune once. //	WITHOUT_CLASSIFICATION	0.9999675952458146	WITHOUT_CLASSIFICATION	3.240475418535978E-5	DEFECT
// If that iterator is still at the top of the stack... //	WITHOUT_CLASSIFICATION	0.9996652623016294	WITHOUT_CLASSIFICATION	3.3473769837059566E-4	DEFECT
// Allow for a bit-shift of growth. //	WITHOUT_CLASSIFICATION	0.999943838224782	WITHOUT_CLASSIFICATION	5.6161775217960124E-5	DEFECT
// Keep popping the stack until an iterator that has a next is at the top. //	WITHOUT_CLASSIFICATION	0.9998806896668475	WITHOUT_CLASSIFICATION	1.1931033315249675E-4	DEFECT
// Conditionally create the data. //	WITHOUT_CLASSIFICATION	0.9999715251198521	WITHOUT_CLASSIFICATION	2.8474880147987162E-5	DEFECT
//  ++modCount //	WITHOUT_CLASSIFICATION	0.9998720595313575	WITHOUT_CLASSIFICATION	1.279404686424581E-4	DEFECT
// Guard for no data. //	WITHOUT_CLASSIFICATION	0.9999585815170804	WITHOUT_CLASSIFICATION	4.141848291961215E-5	DEFECT
// Guard for no data. //	WITHOUT_CLASSIFICATION	0.9999585815170804	WITHOUT_CLASSIFICATION	4.141848291961215E-5	DEFECT
// ++modCount //	WITHOUT_CLASSIFICATION	0.9999196125171576	WITHOUT_CLASSIFICATION	8.038748284246945E-5	DEFECT
// ++modCount //	WITHOUT_CLASSIFICATION	0.9999196125171576	WITHOUT_CLASSIFICATION	8.038748284246945E-5	DEFECT
// Conditionally create the data. //	WITHOUT_CLASSIFICATION	0.9999715251198521	WITHOUT_CLASSIFICATION	2.8474880147987162E-5	DEFECT
// ++modCount //	WITHOUT_CLASSIFICATION	0.9999196125171576	WITHOUT_CLASSIFICATION	8.038748284246945E-5	DEFECT
// Don't hold onto a duplicate reference to the last object. //	WITHOUT_CLASSIFICATION	0.9999846133074176	WITHOUT_CLASSIFICATION	1.5386692582446676E-5	DEFECT
// Give it all back to the garbage collector. //	WITHOUT_CLASSIFICATION	0.9999903091421727	WITHOUT_CLASSIFICATION	9.690857827331867E-6	DEFECT
// Give it all back to the garbage collector. //	WITHOUT_CLASSIFICATION	0.9999903091421727	WITHOUT_CLASSIFICATION	9.690857827331867E-6	DEFECT
// Write the capacity. //	WITHOUT_CLASSIFICATION	0.9999926085464318	WITHOUT_CLASSIFICATION	7.391453568204989E-6	DEFECT
// create map of public static final field initializers to fields	WITHOUT_CLASSIFICATION	0.9999891198144915	WITHOUT_CLASSIFICATION	1.0880185508546254E-5	DEFECT
// This seems to be a pretty sweet formula that supports good growth. // Adding an object to a list will create a list of capacity 4,  // which is just about the average list size. //	WITHOUT_CLASSIFICATION	0.9994767124499969	WITHOUT_CLASSIFICATION	5.232875500030972E-4	DEFECT
// This should be transparent. //	WITHOUT_CLASSIFICATION	0.9998883657558024	WITHOUT_CLASSIFICATION	1.116342441976016E-4	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999976220319823	WITHOUT_CLASSIFICATION	2.3779680177053606E-6	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999976220319823	WITHOUT_CLASSIFICATION	2.3779680177053606E-6	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999976220319823	WITHOUT_CLASSIFICATION	2.3779680177053606E-6	DEFECT
// Write all the entryData; there will be size of them. //	WITHOUT_CLASSIFICATION	0.9997981372508713	WITHOUT_CLASSIFICATION	2.0186274912870273E-4	DEFECT
// Restore the capacity, if there was any. //	WITHOUT_CLASSIFICATION	0.9999979261971738	WITHOUT_CLASSIFICATION	2.0738028262367515E-6	DEFECT
// Read all size number of entryData. //	WITHOUT_CLASSIFICATION	0.9999942975587734	WITHOUT_CLASSIFICATION	5.702441226494998E-6	DEFECT
//0000 0000 0001 //0000 0000 0010 //0000 0000 0100 //0000 0000 1000 //0001 0000 0000 //0010 0000 0000 //0100 0000 0000 //1000 0000 0000	WITHOUT_CLASSIFICATION	0.9994222100829042	WITHOUT_CLASSIFICATION	5.777899170958425E-4	DEFECT
//0000 0000 1111 //1111 0000 0000	WITHOUT_CLASSIFICATION	0.9996509981540794	WITHOUT_CLASSIFICATION	3.490018459205559E-4	DEFECT
// This just represents going back to the unset state, but that doesn't affect the contents of the list. //	WITHOUT_CLASSIFICATION	0.9991374083002895	WITHOUT_CLASSIFICATION	8.625916997105506E-4	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999976220319823	WITHOUT_CLASSIFICATION	2.3779680177053606E-6	DEFECT
// add all converted fields after the last final field  // that is used in initializers of the converted fields	WITHOUT_CLASSIFICATION	0.9999959629957675	WITHOUT_CLASSIFICATION	4.037004232409114E-6	DEFECT
// Internal bootstrap uses Literals constants, so we must force initialization this inner interface first. //	WITHOUT_CLASSIFICATION	0.9999989029684251	WITHOUT_CLASSIFICATION	1.097031574919632E-6	DEFECT
// Open an editor on the new file. //	WITHOUT_CLASSIFICATION	0.9999820839866508	WITHOUT_CLASSIFICATION	1.7916013349228714E-5	DEFECT
// create field initializer from enum constant's arguments and body	WITHOUT_CLASSIFICATION	0.9999892056889351	WITHOUT_CLASSIFICATION	1.0794311064812114E-5	DEFECT
// Apply the change. //	WITHOUT_CLASSIFICATION	0.9999914472221414	WITHOUT_CLASSIFICATION	8.552777858526191E-6	DEFECT
// Delete the change information because it is invalid now that the objects have been changed. //	WITHOUT_CLASSIFICATION	0.9999904729326814	WITHOUT_CLASSIFICATION	9.527067318541899E-6	DEFECT
// Apply the change and reverse the change information. //	WITHOUT_CLASSIFICATION	0.9999952994111674	WITHOUT_CLASSIFICATION	4.700588832582226E-6	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999976220319823	WITHOUT_CLASSIFICATION	2.3779680177053606E-6	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999484135833615	WITHOUT_CLASSIFICATION	5.158641663847135E-5	DEFECT
// set original node of annotations (to allow get methods to work correctly)	WITHOUT_CLASSIFICATION	0.991388205643275	WITHOUT_CLASSIFICATION	0.008611794356725062	DEFECT
// The next line leaves objectsBeforeApply with all the objects that were // added during the last recording.	WITHOUT_CLASSIFICATION	0.9999493209019874	WITHOUT_CLASSIFICATION	5.0679098012716975E-5	DEFECT
// Reverse the objects to attach and detach lists. //	WITHOUT_CLASSIFICATION	0.9999987629479513	WITHOUT_CLASSIFICATION	1.2370520487442297E-6	DEFECT
// Make sure the changed values of bidirectional reference lists are cached before we //  start to apply the change. //	WITHOUT_CLASSIFICATION	0.9999976808375132	WITHOUT_CLASSIFICATION	2.319162486797125E-6	DEFECT
// This case will be handled special during apply //	WITHOUT_CLASSIFICATION	0.9985522373319665	WITHOUT_CLASSIFICATION	0.0014477626680334656	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999484135833615	WITHOUT_CLASSIFICATION	5.158641663847135E-5	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999484135833615	WITHOUT_CLASSIFICATION	5.158641663847135E-5	DEFECT
// New Template Container Entryfield	WITHOUT_CLASSIFICATION	0.999987803902006	WITHOUT_CLASSIFICATION	1.219609799393062E-5	DEFECT
// If there's no position, the list is being cleared. //	WITHOUT_CLASSIFICATION	0.9999992691569353	WITHOUT_CLASSIFICATION	7.308430647527423E-7	DEFECT
// If there's no position, the list is being cleared. //	WITHOUT_CLASSIFICATION	0.9999992691569353	WITHOUT_CLASSIFICATION	7.308430647527423E-7	DEFECT
// EEnumImpl overrides this to do nothing. // The only case that is special is when a more specific instance of AbstractEnumerator is generated/reused. //	WITHOUT_CLASSIFICATION	0.9999500539213257	WITHOUT_CLASSIFICATION	4.99460786742921E-5	DEFECT
// When we attached we have to recompute the erasure of the type parameter. //	WITHOUT_CLASSIFICATION	0.9999921336250785	WITHOUT_CLASSIFICATION	7.866374921339631E-6	DEFECT
// Interprets escaped characters within the string according to Java // literal rules, with two exceptions: an unescaped " does not terminate // the string, and a \ not followed by b, t, n, f, r, ", ', u, or an octal // digit is taken literally, not as an error	WITHOUT_CLASSIFICATION	0.9997600013173885	WITHOUT_CLASSIFICATION	2.399986826115332E-4	DEFECT
// Create annotations // http:///org/eclipse/emf/ecore/util/ExtendedMetaData	WITHOUT_CLASSIFICATION	0.999949453112853	WITHOUT_CLASSIFICATION	5.05468871470168E-5	DEFECT
// This is needed for internal bootstrapping of EGenericType's default value for eRawType. // It's simply not available before Ecore is constructed so we make it available and then patch what's missing. //	WITHOUT_CLASSIFICATION	0.999976584226671	WITHOUT_CLASSIFICATION	2.341577332889023E-5	DEFECT
// Create a key set that supports add. //	WITHOUT_CLASSIFICATION	0.99999752494347	WITHOUT_CLASSIFICATION	2.4750565299654977E-6	DEFECT
// Skip derived features. //	WITHOUT_CLASSIFICATION	0.9999962023817583	WITHOUT_CLASSIFICATION	3.797618241754696E-6	DEFECT
// Include derived relations only if they won't also come from mixed or a group. //	WITHOUT_CLASSIFICATION	0.9999100731030673	WITHOUT_CLASSIFICATION	8.992689693270358E-5	DEFECT
// If this is just a proxy being resolved... //	WITHOUT_CLASSIFICATION	0.9999677120053193	WITHOUT_CLASSIFICATION	3.228799468066383E-5	DEFECT
// Force the raw type to be resolved so we don't resolve this endlessly. //	WITHOUT_CLASSIFICATION	0.9999685194066176	WITHOUT_CLASSIFICATION	3.14805933824788E-5	DEFECT
// Update the classifier and hence the raw type as normal. //	WITHOUT_CLASSIFICATION	0.9999989556765797	WITHOUT_CLASSIFICATION	1.044323420324845E-6	DEFECT
// The notification for this list is being thrown by the // delegating list //	WITHOUT_CLASSIFICATION	0.999946216777359	WITHOUT_CLASSIFICATION	5.378322264115401E-5	DEFECT
// At development time, the real factory may not be available. Just return null. //	WITHOUT_CLASSIFICATION	0.9999969613423398	WITHOUT_CLASSIFICATION	3.0386576602414687E-6	DEFECT
// Interprets escaped characters according to Java literal rules, with one // exception: a single \ is taken literally, not as an error.	WITHOUT_CLASSIFICATION	0.9993672467465672	WITHOUT_CLASSIFICATION	6.327532534327416E-4	DEFECT
// protected static final EStructuralFeature CONTAINING_FEATURE = new EReferenceImpl(); // protected static final EStructuralFeature CONTAINER = new EReferenceImpl();	WITHOUT_CLASSIFICATION	0.9999997632476556	WITHOUT_CLASSIFICATION	2.367523444599514E-7	DEFECT
// Entry entry = new Entry(eObject, CONTAINER); // return (InternalEObject)map.get(entry);	WITHOUT_CLASSIFICATION	0.999997216725335	WITHOUT_CLASSIFICATION	2.7832746649877638E-6	DEFECT
// This should never be called. //	WITHOUT_CLASSIFICATION	0.9999567316862313	WITHOUT_CLASSIFICATION	4.3268313768644564E-5	DEFECT
// Entry entry = new Entry(eObject, CONTAINING_FEATURE); // return (EStructuralFeature)map.get(entry);	WITHOUT_CLASSIFICATION	0.999999727617334	WITHOUT_CLASSIFICATION	2.723826659335301E-7	DEFECT
// eContainer = newContainer; // eContainerFeatureID = newContainerFeatureID;	WITHOUT_CLASSIFICATION	0.9999583375128522	WITHOUT_CLASSIFICATION	4.16624871478501E-5	DEFECT
// Since the cycle is detected by checking if we hit "this" again, after many iterations we'll call this method recursively  // in case we started with something that wasn't part of a cycle but later traversed up to a cycle. //	WITHOUT_CLASSIFICATION	0.9999862179196707	WITHOUT_CLASSIFICATION	1.3782080329236253E-5	DEFECT
// When setting the resource to null we assume that detach has already been called in the resource implementation //	WITHOUT_CLASSIFICATION	0.9999950535992638	WITHOUT_CLASSIFICATION	4.94640073626392E-6	DEFECT
/**   * Performs escape encoding on the given string so that it can be represented using 1-byte characters.   * Any characters higher than 0xFF are replaced with an escape of the form \\uXXXX, where XXXX is the   * four-digit hex representation of the Unicode code point.   */	WITHOUT_CLASSIFICATION	0.9990641559215137	WITHOUT_CLASSIFICATION	9.358440784863002E-4	DEFECT
// Compute the offset in the sequence of bit patterns for this feature ID // and then get the bit pattern at that index. //	WITHOUT_CLASSIFICATION	0.999971985247351	WITHOUT_CLASSIFICATION	2.8014752649102734E-5	DEFECT
// Compute the index within that bit pattern for this feature ID // and fetch that bit at that index. //	WITHOUT_CLASSIFICATION	0.999986829061224	WITHOUT_CLASSIFICATION	1.3170938775966424E-5	DEFECT
// For isSet, we only need to check the bit and return -1 when the bit is 0. //	WITHOUT_CLASSIFICATION	0.9999372434167892	WITHOUT_CLASSIFICATION	6.275658321069787E-5	DEFECT
// If the value index set, there's no index to return. //	WITHOUT_CLASSIFICATION	0.9999959498425085	WITHOUT_CLASSIFICATION	4.050157491505066E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.99999783982728	WITHOUT_CLASSIFICATION	2.1601727201388865E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.99999783982728	WITHOUT_CLASSIFICATION	2.1601727201388865E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.99999783982728	WITHOUT_CLASSIFICATION	2.1601727201388865E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.99999783982728	WITHOUT_CLASSIFICATION	2.1601727201388865E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.99999783982728	WITHOUT_CLASSIFICATION	2.1601727201388865E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.99999783982728	WITHOUT_CLASSIFICATION	2.1601727201388865E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.99999783982728	WITHOUT_CLASSIFICATION	2.1601727201388865E-6	DEFECT
// Count just the bits up to this one. // Note that shifting 32 bits is a no op. //	WITHOUT_CLASSIFICATION	0.9999985452395144	WITHOUT_CLASSIFICATION	1.4547604855665024E-6	DEFECT
// Count all the bits in the bit patterns up to this one in the sequence of bit patterns. //	WITHOUT_CLASSIFICATION	0.999943327569271	WITHOUT_CLASSIFICATION	5.667243072909472E-5	DEFECT
// Determine the index for the feature and return the value at that index, if an index is assigned. //	WITHOUT_CLASSIFICATION	0.9999998146746176	WITHOUT_CLASSIFICATION	1.8532538236038256E-7	DEFECT
// Determine if an index is assigned. //	WITHOUT_CLASSIFICATION	0.9999989949400973	WITHOUT_CLASSIFICATION	1.005059902717557E-6	DEFECT
// Determine the index. //	WITHOUT_CLASSIFICATION	0.9999934652225706	WITHOUT_CLASSIFICATION	6.534777429485732E-6	DEFECT
// If it's newly allocated, add a new value, and indicate there was no previous value. //	WITHOUT_CLASSIFICATION	0.9999995725471572	WITHOUT_CLASSIFICATION	4.2745284275852893E-7	DEFECT
// Set the value at the previously allocated index and return the previous value there. //	WITHOUT_CLASSIFICATION	0.9999993277489252	WITHOUT_CLASSIFICATION	6.722510747348265E-7	DEFECT
// Forward the interned value. //	WITHOUT_CLASSIFICATION	0.9999979160012052	WITHOUT_CLASSIFICATION	2.0839987948122452E-6	DEFECT
// If it's a parameterized type... //	WITHOUT_CLASSIFICATION	0.9999990798430924	WITHOUT_CLASSIFICATION	9.201569075263573E-7	DEFECT
// The instance class name is the erasure. //	WITHOUT_CLASSIFICATION	0.9999978159894446	WITHOUT_CLASSIFICATION	2.1840105553160636E-6	DEFECT
// If the name isn't a qualified name and isn't a primitive type, it's assumed to denote some arbitrary type parameter. //	WITHOUT_CLASSIFICATION	0.9999999084581713	WITHOUT_CLASSIFICATION	9.154182867806047E-8	DEFECT
// Be sure to pick up any trailing [] brackets. //	WITHOUT_CLASSIFICATION	0.99997692865614	WITHOUT_CLASSIFICATION	2.3071343860069823E-5	DEFECT
// If there is a cached result, return it. // We expect that if the package is set to be a proxy,  // the code in EPackageImpl.eSetProxyURI override will have cleared this value. //	WITHOUT_CLASSIFICATION	0.9999980978332625	WITHOUT_CLASSIFICATION	1.9021667374926806E-6	DEFECT
// If the result is not a proxy, cache it. //	WITHOUT_CLASSIFICATION	0.9999851035904086	WITHOUT_CLASSIFICATION	1.4896409591531101E-5	DEFECT
// If we turn the package into a proxy, ensure that the child classifiers clear their cached container. //	WITHOUT_CLASSIFICATION	0.9999963448101661	WITHOUT_CLASSIFICATION	3.6551898340062222E-6	DEFECT
// Is the first character a special character, i.e., something other than '@'? //	WITHOUT_CLASSIFICATION	0.9999993074052378	WITHOUT_CLASSIFICATION	6.925947621372145E-7	DEFECT
// Is it the start of a source URI of an annotation? //	WITHOUT_CLASSIFICATION	0.9999834860759618	WITHOUT_CLASSIFICATION	1.6513924038189636E-5	DEFECT
// Recompute the read only state. //	WITHOUT_CLASSIFICATION	0.9999618035048894	WITHOUT_CLASSIFICATION	3.8196495110716434E-5	DEFECT
// Refresh any actions that may become enabled or disabled. //	WITHOUT_CLASSIFICATION	0.9999962397416952	WITHOUT_CLASSIFICATION	3.7602583048834018E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.99999783982728	WITHOUT_CLASSIFICATION	2.1601727201388865E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.99999783982728	WITHOUT_CLASSIFICATION	2.1601727201388865E-6	DEFECT
// If this is just a proxy being resolved... //	WITHOUT_CLASSIFICATION	0.9999677120053193	WITHOUT_CLASSIFICATION	3.228799468066383E-5	DEFECT
// Force the raw type to be resolved so we don't resolve this endlessly. //	WITHOUT_CLASSIFICATION	0.9999685194066176	WITHOUT_CLASSIFICATION	3.14805933824788E-5	DEFECT
// Update the classifier and hence the raw type as normal. //	WITHOUT_CLASSIFICATION	0.9999989556765797	WITHOUT_CLASSIFICATION	1.044323420324845E-6	DEFECT
// Find the closing '%' //	WITHOUT_CLASSIFICATION	0.999947438108906	WITHOUT_CLASSIFICATION	5.256189109405222E-5	DEFECT
// Decode all encoded characters. //	WITHOUT_CLASSIFICATION	0.9999902856925321	WITHOUT_CLASSIFICATION	9.714307467897465E-6	DEFECT
// Check for a count, i.e., a '.' followed by a number. //	WITHOUT_CLASSIFICATION	0.9999885575375093	WITHOUT_CLASSIFICATION	1.1442462490632791E-5	DEFECT
// Look for the annotation with the matching source. //	WITHOUT_CLASSIFICATION	0.9999391604693068	WITHOUT_CLASSIFICATION	6.0839530693262364E-5	DEFECT
// Look for trailing count. //	WITHOUT_CLASSIFICATION	0.9999633676889225	WITHOUT_CLASSIFICATION	3.663231107754185E-5	DEFECT
// Look for a matching named element. //	WITHOUT_CLASSIFICATION	0.9999984995180142	WITHOUT_CLASSIFICATION	1.5004819857667387E-6	DEFECT
// Find the uppermost class loader in the hierarchy that can load the class. //	WITHOUT_CLASSIFICATION	0.9999967862634549	WITHOUT_CLASSIFICATION	3.213736545075889E-6	DEFECT
// We can't find the class, so we don't want this class loader, // but instead want the last result that was able to load the class. //	WITHOUT_CLASSIFICATION	0.999982655424257	WITHOUT_CLASSIFICATION	1.7344575742922493E-5	DEFECT
// Register with the upper most class loader that's able to load the class. //	WITHOUT_CLASSIFICATION	0.9999980471861498	WITHOUT_CLASSIFICATION	1.952813850125757E-6	DEFECT
// This let's us test whether the string exists as a file. // If not, we try as a URI. //	WITHOUT_CLASSIFICATION	0.9999848052073933	WITHOUT_CLASSIFICATION	1.5194792606693788E-5	DEFECT
// First try to see if this class has an eInstance  //	WITHOUT_CLASSIFICATION	0.9999807242376175	WITHOUT_CLASSIFICATION	1.927576238242034E-5	DEFECT
// First try to see if this class has an eInstance  //	WITHOUT_CLASSIFICATION	0.9999807242376175	WITHOUT_CLASSIFICATION	1.927576238242034E-5	DEFECT
// Remember the file. //	WITHOUT_CLASSIFICATION	0.9999958422235004	WITHOUT_CLASSIFICATION	4.157776499748302E-6	DEFECT
// Do the work within an operation. //	WITHOUT_CLASSIFICATION	0.9997498920434299	WITHOUT_CLASSIFICATION	2.5010795657017464E-4	DEFECT
// Create a resource set //	WITHOUT_CLASSIFICATION	0.99999825620354	WITHOUT_CLASSIFICATION	1.7437964600228314E-6	DEFECT
// Get the URI of the model file. //	WITHOUT_CLASSIFICATION	0.9999714088700075	WITHOUT_CLASSIFICATION	2.8591129992448095E-5	DEFECT
// Create a resource for this file. //	WITHOUT_CLASSIFICATION	0.9999992725426616	WITHOUT_CLASSIFICATION	7.274573384260692E-7	DEFECT
// Add the initial model object to the contents. //	WITHOUT_CLASSIFICATION	0.99999768211151	WITHOUT_CLASSIFICATION	2.3178884900698068E-6	DEFECT
// Save the contents of the resource to the file system. //	WITHOUT_CLASSIFICATION	0.9999556011214528	WITHOUT_CLASSIFICATION	4.43988785471708E-5	DEFECT
// Select the new file resource in the current view. //	WITHOUT_CLASSIFICATION	0.9999874123868115	WITHOUT_CLASSIFICATION	1.2587613188444231E-5	DEFECT
// Make sure the file ends in ".ecore". //	WITHOUT_CLASSIFICATION	0.9999560751783333	WITHOUT_CLASSIFICATION	4.392482166673996E-5	DEFECT
// Create a page, set the title, and the initial model file name. //	WITHOUT_CLASSIFICATION	0.9999999240006356	WITHOUT_CLASSIFICATION	7.59993643712375E-8	DEFECT
// Try and get the resource selection to determine a current directory for the file dialog. //	WITHOUT_CLASSIFICATION	0.9999498920206963	WITHOUT_CLASSIFICATION	5.010797930369405E-5	DEFECT
// Get the resource... //	WITHOUT_CLASSIFICATION	0.999967127705132	WITHOUT_CLASSIFICATION	3.2872294867953174E-5	DEFECT
// Get the resource parent, if its a file. //	WITHOUT_CLASSIFICATION	0.9999991776150141	WITHOUT_CLASSIFICATION	8.223849858732451E-7	DEFECT
// This gives us a directory... //	WITHOUT_CLASSIFICATION	0.9999210499651053	WITHOUT_CLASSIFICATION	7.895003489460741E-5	DEFECT
// Set this for the container. //	WITHOUT_CLASSIFICATION	0.9999826919248416	WITHOUT_CLASSIFICATION	1.73080751584136E-5	DEFECT
// Make up a unique new name here. //	WITHOUT_CLASSIFICATION	0.9999945232677859	WITHOUT_CLASSIFICATION	5.476732214016099E-6	DEFECT
// Create an adapter factory that yields item providers. //	WITHOUT_CLASSIFICATION	0.9999927728994914	WITHOUT_CLASSIFICATION	7.227100508564158E-6	DEFECT
// Create the command stack that will notify this editor as commands are executed. //	WITHOUT_CLASSIFICATION	0.9997777961299169	WITHOUT_CLASSIFICATION	2.222038700832275E-4	DEFECT
// Add a listener to set the most recent command's affected objects to be the selection of the viewer with focus. //	WITHOUT_CLASSIFICATION	0.9999974858673314	WITHOUT_CLASSIFICATION	2.514132668679273E-6	DEFECT
// Try to select the affected objects. //	WITHOUT_CLASSIFICATION	0.9999911955002312	WITHOUT_CLASSIFICATION	8.804499768888832E-6	DEFECT
// Create the editing domain with a special command stack. //	WITHOUT_CLASSIFICATION	0.9999501074889837	WITHOUT_CLASSIFICATION	4.98925110162712E-5	DEFECT
// Make sure it's okay. //	WITHOUT_CLASSIFICATION	0.999993203698398	WITHOUT_CLASSIFICATION	6.796301602027732E-6	DEFECT
// Try to select the items in the current content viewer of the editor. //	WITHOUT_CLASSIFICATION	0.9990152522011699	WITHOUT_CLASSIFICATION	9.847477988300748E-4	DEFECT
// If it is changing... //	WITHOUT_CLASSIFICATION	0.9999768899634203	WITHOUT_CLASSIFICATION	2.3110036579781614E-5	DEFECT
// Create the listener on demand. //	WITHOUT_CLASSIFICATION	0.9999924568107678	WITHOUT_CLASSIFICATION	7.543189232173699E-6	DEFECT
// This just notifies those things that are affected by the section. //	WITHOUT_CLASSIFICATION	0.9999277089975437	WITHOUT_CLASSIFICATION	7.229100245635133E-5	DEFECT
// Stop listening to the old one. //	WITHOUT_CLASSIFICATION	0.9999838351133848	WITHOUT_CLASSIFICATION	1.6164886615184966E-5	DEFECT
// Start listening to the new one. //	WITHOUT_CLASSIFICATION	0.9999969498392978	WITHOUT_CLASSIFICATION	3.0501607023653643E-6	DEFECT
// Remember it. //	WITHOUT_CLASSIFICATION	0.9999928668814604	WITHOUT_CLASSIFICATION	7.133118539554705E-6	DEFECT
// Set the editors selection based on the current viewer's selection. //	WITHOUT_CLASSIFICATION	0.999958081871174	WITHOUT_CLASSIFICATION	4.1918128826060755E-5	DEFECT
// Load the resource through the editing domain. //	WITHOUT_CLASSIFICATION	0.9999944435042761	WITHOUT_CLASSIFICATION	5.556495723819515E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.99999783982728	WITHOUT_CLASSIFICATION	2.1601727201388865E-6	DEFECT
// Create a page for the selection tree view. //	WITHOUT_CLASSIFICATION	0.9999987000870778	WITHOUT_CLASSIFICATION	1.2999129221367604E-6	DEFECT
// Ensures that this editor will only display the page's tab // area if there are more than one page //	WITHOUT_CLASSIFICATION	0.9999319421075431	WITHOUT_CLASSIFICATION	6.805789245686095E-5	DEFECT
// The content outline is just a tree. //	WITHOUT_CLASSIFICATION	0.9999969597886372	WITHOUT_CLASSIFICATION	3.0402113626518825E-6	DEFECT
// Set up the tree viewer. //	WITHOUT_CLASSIFICATION	0.9999916220695798	WITHOUT_CLASSIFICATION	8.37793042016878E-6	DEFECT
// Make sure our popups work. //	WITHOUT_CLASSIFICATION	0.999792280586219	WITHOUT_CLASSIFICATION	2.0771941378081154E-4	DEFECT
// Select the root object in the view. //	WITHOUT_CLASSIFICATION	0.9999849742177175	WITHOUT_CLASSIFICATION	1.502578228243813E-5	DEFECT
// Listen to selection so that we can handle it is a special way. //	WITHOUT_CLASSIFICATION	0.999997807428602	WITHOUT_CLASSIFICATION	2.19257139790257E-6	DEFECT
// Get the first selected element. //	WITHOUT_CLASSIFICATION	0.9999992524617337	WITHOUT_CLASSIFICATION	7.475382662273749E-7	DEFECT
// Set the selection to the widget. //	WITHOUT_CLASSIFICATION	0.9998610061854258	WITHOUT_CLASSIFICATION	1.389938145741405E-4	DEFECT
// Save only resources that have actually changed. //	WITHOUT_CLASSIFICATION	0.9998089625564247	WITHOUT_CLASSIFICATION	1.9103744357527367E-4	DEFECT
// This is the method that gets invoked when the operation runs. //	WITHOUT_CLASSIFICATION	0.9990033069331098	WITHOUT_CLASSIFICATION	9.966930668902016E-4	DEFECT
// Save the resources to the file system. //	WITHOUT_CLASSIFICATION	0.999983942283425	WITHOUT_CLASSIFICATION	1.6057716574991475E-5	DEFECT
// This runs the options, and shows progress. //	WITHOUT_CLASSIFICATION	0.9996150749577101	WITHOUT_CLASSIFICATION	3.8492504228993934E-4	DEFECT
// Refresh the necessary state. //	WITHOUT_CLASSIFICATION	0.9999969639663361	WITHOUT_CLASSIFICATION	3.036033663856083E-6	DEFECT
// Something went wrong that shouldn't. //	WITHOUT_CLASSIFICATION	0.9994497687012287	WITHOUT_CLASSIFICATION	5.502312987712894E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.99999783982728	WITHOUT_CLASSIFICATION	2.1601727201388865E-6	DEFECT
// Remember the file. //	WITHOUT_CLASSIFICATION	0.9999958422235004	WITHOUT_CLASSIFICATION	4.157776499748302E-6	DEFECT
// Do the work within an operation. //	WITHOUT_CLASSIFICATION	0.9997498920434299	WITHOUT_CLASSIFICATION	2.5010795657017464E-4	DEFECT
// Create a resource set //	WITHOUT_CLASSIFICATION	0.99999825620354	WITHOUT_CLASSIFICATION	1.7437964600228314E-6	DEFECT
// Get the URI of the model file. //	WITHOUT_CLASSIFICATION	0.9999714088700075	WITHOUT_CLASSIFICATION	2.8591129992448095E-5	DEFECT
// Save the contents of the resource to the file system. //	WITHOUT_CLASSIFICATION	0.9999556011214528	WITHOUT_CLASSIFICATION	4.43988785471708E-5	DEFECT
// Select the new file resource in the current view. //	WITHOUT_CLASSIFICATION	0.9999874123868115	WITHOUT_CLASSIFICATION	1.2587613188444231E-5	DEFECT
// We can't have a null name, in case we're using EMOF serialization. //	WITHOUT_CLASSIFICATION	0.999918211803433	WITHOUT_CLASSIFICATION	8.178819656700217E-5	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999976220319823	WITHOUT_CLASSIFICATION	2.3779680177053606E-6	DEFECT
// Switch to the new selection provider. //	WITHOUT_CLASSIFICATION	0.99998711077656	WITHOUT_CLASSIFICATION	1.2889223439957962E-5	DEFECT
// Fake a selection changed event to update the menus. //	WITHOUT_CLASSIFICATION	0.9999946891383886	WITHOUT_CLASSIFICATION	5.31086161140091E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.99999783982728	WITHOUT_CLASSIFICATION	2.1601727201388865E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.99999783982728	WITHOUT_CLASSIFICATION	2.1601727201388865E-6	DEFECT
// Try and get the resource selection to determine a current directory for the file dialog. //	WITHOUT_CLASSIFICATION	0.9999498920206963	WITHOUT_CLASSIFICATION	5.010797930369405E-5	DEFECT
// Get the resource... //	WITHOUT_CLASSIFICATION	0.999967127705132	WITHOUT_CLASSIFICATION	3.2872294867953174E-5	DEFECT
// Get the resource parent, if its a file. //	WITHOUT_CLASSIFICATION	0.9999991776150141	WITHOUT_CLASSIFICATION	8.223849858732451E-7	DEFECT
// This gives us a directory... //	WITHOUT_CLASSIFICATION	0.9999210499651053	WITHOUT_CLASSIFICATION	7.895003489460741E-5	DEFECT
// Make up a unique new name here. //	WITHOUT_CLASSIFICATION	0.9999945232677859	WITHOUT_CLASSIFICATION	5.476732214016099E-6	DEFECT
// Prepare for CreateChild item addition or removal. //	WITHOUT_CLASSIFICATION	0.99999246275609	WITHOUT_CLASSIFICATION	7.53724391009169E-6	DEFECT
// Prepare for CreateSibling item addition or removal. //	WITHOUT_CLASSIFICATION	0.9999906569634432	WITHOUT_CLASSIFICATION	9.343036556633897E-6	DEFECT
// Force an update because Eclipse hides empty menus now. //	WITHOUT_CLASSIFICATION	0.9999983158064583	WITHOUT_CLASSIFICATION	1.6841935416146858E-6	DEFECT
// Remove any menu items for old selection. //	WITHOUT_CLASSIFICATION	0.9999966780967658	WITHOUT_CLASSIFICATION	3.3219032342651454E-6	DEFECT
// Query the new selection for appropriate new child/sibling descriptors //	WITHOUT_CLASSIFICATION	0.9999505139729046	WITHOUT_CLASSIFICATION	4.948602709555349E-5	DEFECT
// Generate actions for selection; populate and redraw the menus. //	WITHOUT_CLASSIFICATION	0.9999947745549718	WITHOUT_CLASSIFICATION	5.2254450283113094E-6	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999484135833615	WITHOUT_CLASSIFICATION	5.158641663847135E-5	DEFECT
// Look into SubContributionItems //	WITHOUT_CLASSIFICATION	0.9999612434312878	WITHOUT_CLASSIFICATION	3.875656871225123E-5	DEFECT
// Delete the ActionContributionItems with matching action. //	WITHOUT_CLASSIFICATION	0.9999797270311379	WITHOUT_CLASSIFICATION	2.0272968861997275E-5	DEFECT
// If it's really a contained child, return the feature for it. //	WITHOUT_CLASSIFICATION	0.9999854642688344	WITHOUT_CLASSIFICATION	1.4535731165558744E-5	DEFECT
// Changes to the parameters should also update the label. //	WITHOUT_CLASSIFICATION	0.9999962838692058	WITHOUT_CLASSIFICATION	3.716130794068176E-6	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999976220319823	WITHOUT_CLASSIFICATION	2.3779680177053606E-6	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999484135833615	WITHOUT_CLASSIFICATION	5.158641663847135E-5	DEFECT
// If it's really a contained child, return the feature for it. //	WITHOUT_CLASSIFICATION	0.9999854642688344	WITHOUT_CLASSIFICATION	1.4535731165558744E-5	DEFECT
// Set the instance type name instead, since that will also set the instance class name  // but this way will make undo restore the current instance type name correctly //	WITHOUT_CLASSIFICATION	0.9999634814951687	WITHOUT_CLASSIFICATION	3.651850483135387E-5	DEFECT
// Changes to parameter types should also update the operation's label. //	WITHOUT_CLASSIFICATION	0.9999894903305557	WITHOUT_CLASSIFICATION	1.0509669444314408E-5	DEFECT
// Filter out types that aren't permitted. //	WITHOUT_CLASSIFICATION	0.999985964538532	WITHOUT_CLASSIFICATION	1.4035461467974378E-5	DEFECT
// Filter out types that aren't permitted. //	WITHOUT_CLASSIFICATION	0.999985964538532	WITHOUT_CLASSIFICATION	1.4035461467974378E-5	DEFECT
// Avoid allowing choices that will lead to duplicates. //	WITHOUT_CLASSIFICATION	0.9999745496264878	WITHOUT_CLASSIFICATION	2.5450373512175767E-5	DEFECT
//  Avoid allowing a choice that will lead to duplicates. //	WITHOUT_CLASSIFICATION	0.9999666344220376	WITHOUT_CLASSIFICATION	3.336557796244397E-5	DEFECT
// Ensure that there are enough type arguments to match the number of type parameters. //	WITHOUT_CLASSIFICATION	0.9999945062098418	WITHOUT_CLASSIFICATION	5.493790158183027E-6	DEFECT
// You can only add type arguments if there are type parameters not yet used up. //	WITHOUT_CLASSIFICATION	0.9999716267695825	WITHOUT_CLASSIFICATION	2.8373230417472948E-5	DEFECT
// You cannot add any children for a type parameter. //	WITHOUT_CLASSIFICATION	0.9999931076858173	WITHOUT_CLASSIFICATION	6.892314182677228E-6	DEFECT
// Only if you are contained by a generic type can you have bounds, // and only if there is no classifier or type parameter // and in that case the lower bound is returned only if that's the one that's set. //	WITHOUT_CLASSIFICATION	0.9999976722270747	WITHOUT_CLASSIFICATION	2.3277729253002113E-6	DEFECT
// Otherwise you can't make it a child. //	WITHOUT_CLASSIFICATION	0.9999804455015497	WITHOUT_CLASSIFICATION	1.9554498450195608E-5	DEFECT
// Let them choose type parameters as well. //	WITHOUT_CLASSIFICATION	0.9999995224602738	WITHOUT_CLASSIFICATION	4.775397261930201E-7	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999484135833615	WITHOUT_CLASSIFICATION	5.158641663847135E-5	DEFECT
// Handle eOpposite specially. //	WITHOUT_CLASSIFICATION	0.9999792379624656	WITHOUT_CLASSIFICATION	2.076203753441178E-5	DEFECT
// Don't use the normal reference copying for eOpposite. //	WITHOUT_CLASSIFICATION	0.9999594610296794	WITHOUT_CLASSIFICATION	4.0538970320741064E-5	DEFECT
// Write a signature that will be obviously corrupt // if the binary contents end up being UTF-8 encoded // or altered by line feed or carriage return changes. //	WITHOUT_CLASSIFICATION	0.9999823773644637	WITHOUT_CLASSIFICATION	1.7622635536296948E-5	DEFECT
// Filter out classes that aren't permitted. //	WITHOUT_CLASSIFICATION	0.9999866823415453	WITHOUT_CLASSIFICATION	1.3317658454610575E-5	DEFECT
// Read all the values into an array. //	WITHOUT_CLASSIFICATION	0.9999977665364395	WITHOUT_CLASSIFICATION	2.233463560644262E-6	DEFECT
// Read all the values into an array. //	WITHOUT_CLASSIFICATION	0.9999977665364395	WITHOUT_CLASSIFICATION	2.233463560644262E-6	DEFECT
// If the list is empty, we need to add all the objects, // otherwise, the reference is bidirectional and the list is at least partially populated. //	WITHOUT_CLASSIFICATION	0.9999959558982596	WITHOUT_CLASSIFICATION	4.044101740427809E-6	DEFECT
// If an input stream can't be created, ensure that the resource is still considered loaded after the failure, // and do all the same processing we'd do if we actually were able to create a valid input stream. //	WITHOUT_CLASSIFICATION	0.9999990012804132	WITHOUT_CLASSIFICATION	9.987195868126322E-7	DEFECT
// This guard is needed to ensure that clear doesn't make the resource become loaded. //	WITHOUT_CLASSIFICATION	0.9999634023697488	WITHOUT_CLASSIFICATION	3.6597630251191367E-5	DEFECT
// If we haven't yet encrypted or decrypted, generate a key. This key will  // only be used for encryption. Decryption keys are always derived from // the header of the input stream itself.	WITHOUT_CLASSIFICATION	0.9998872099616429	WITHOUT_CLASSIFICATION	1.1279003835711707E-4	DEFECT
// write the header to the output stream. this has the format  // (delimeters are not written): // PBE IV|ENCRYPTION IV|ENCRYPTED KEY LENGTH|ENCRYPTED KEY	WITHOUT_CLASSIFICATION	0.9999270415167205	WITHOUT_CLASSIFICATION	7.295848327938578E-5	DEFECT
// The CipherOutputStream shoudln't close the underlying stream //	WITHOUT_CLASSIFICATION	0.999921824678234	WITHOUT_CLASSIFICATION	7.817532176602674E-5	DEFECT
// Build a list of the keys //	WITHOUT_CLASSIFICATION	0.9999816431236834	WITHOUT_CLASSIFICATION	1.8356876316604888E-5	DEFECT
// The classifier of an references's generic type must be a class. //	WITHOUT_CLASSIFICATION	0.9999987503069956	WITHOUT_CLASSIFICATION	1.2496930044282072E-6	DEFECT
// If they are the same classifier, they are of course equal. //	WITHOUT_CLASSIFICATION	0.9999253186645136	WITHOUT_CLASSIFICATION	7.468133548638879E-5	DEFECT
// Ignore derived features. //	WITHOUT_CLASSIFICATION	0.9999936894783309	WITHOUT_CLASSIFICATION	6.310521669186318E-6	DEFECT
// Don't set the type if it's already set. //	WITHOUT_CLASSIFICATION	0.9999864745146974	WITHOUT_CLASSIFICATION	1.352548530262747E-5	DEFECT
// Look through all the references... //	WITHOUT_CLASSIFICATION	0.9998661006763077	WITHOUT_CLASSIFICATION	1.3389932369240178E-4	DEFECT
// Do the extent processing that should have been done for the root but was actualljy done for the document root. //	WITHOUT_CLASSIFICATION	0.9999358034390846	WITHOUT_CLASSIFICATION	6.419656091542451E-5	DEFECT
// Ensure that the map for Ecore is not repeatedly populated and that Property maps to EReference rather than EAttribute. //	WITHOUT_CLASSIFICATION	0.9998695547441434	WITHOUT_CLASSIFICATION	1.3044525585649355E-4	DEFECT
// Create annotations // http:///org/eclipse/emf/ecore/util/ExtendedMetaData	WITHOUT_CLASSIFICATION	0.999949453112853	WITHOUT_CLASSIFICATION	5.05468871470168E-5	DEFECT
// Internal use only. // The @ always matches line beginnings.	WITHOUT_CLASSIFICATION	0.9999956463059255	WITHOUT_CLASSIFICATION	4.353694074408923E-6	DEFECT
// Reserve a place to insert xmlns declarations after we know what they all are. //	WITHOUT_CLASSIFICATION	0.9999993158065866	WITHOUT_CLASSIFICATION	6.841934133608336E-7	DEFECT
// result = new XMLResource.XMLInfoImpl(); // result.setXMLRepresentation(XMLResource.XMLInfo.UNSPECIFIED);	WITHOUT_CLASSIFICATION	0.9999978620803409	WITHOUT_CLASSIFICATION	2.137919659022927E-6	DEFECT
// Need not to call setSource() because // a caller can not access this match instance.	WITHOUT_CLASSIFICATION	0.9999995610309003	WITHOUT_CLASSIFICATION	4.3896909975565184E-7	DEFECT
// src:    o--------o // sub:      o----o // res:    o-o    o-o // Reuse src(=right res)	WITHOUT_CLASSIFICATION	0.9998339186809134	WITHOUT_CLASSIFICATION	1.6608131908658132E-4	DEFECT
// Ignore CHAR tokens. // ** // **	WITHOUT_CLASSIFICATION	0.9999921727716228	WITHOUT_CLASSIFICATION	7.82722837732208E-6	DEFECT
//missing Specials add manually // 84	WITHOUT_CLASSIFICATION	0.9999481694672018	WITHOUT_CLASSIFICATION	5.1830532798354986E-5	DEFECT
//Check if they are PAD characters //Two PAD e.g. 3c[Pad][Pad] //last 4 bits should be zero	WITHOUT_CLASSIFICATION	0.9997680751085192	WITHOUT_CLASSIFICATION	2.3192489148069354E-4	DEFECT
// Path segments cannot contain '[' or ']' since pchar // production was not changed by RFC 2732.	WITHOUT_CLASSIFICATION	0.9999969712046787	WITHOUT_CLASSIFICATION	3.0287953212410664E-6	DEFECT
// // Data //	WITHOUT_CLASSIFICATION	0.9999731355313491	WITHOUT_CLASSIFICATION	2.6864468650858645E-5	DEFECT
// Check for scheme, which must be before '/', '?' or '#'. Also handle // names with DOS drive letters ('D:'), so 1-character schemes are not // allowed.	WITHOUT_CLASSIFICATION	0.999987884184642	WITHOUT_CLASSIFICATION	1.2115815357910061E-5	DEFECT
// Check for scheme, which must be before '/', '?' or '#'. Also handle // names with DOS drive letters ('D:'), so 1-character schemes are not // allowed.	WITHOUT_CLASSIFICATION	0.999987884184642	WITHOUT_CLASSIFICATION	1.2115815357910061E-5	DEFECT
// 6e - remove all "<segment>/../" where "<segment>" is a complete // path segment not equal to ".."	WITHOUT_CLASSIFICATION	0.9999865096575772	WITHOUT_CLASSIFICATION	1.3490342422859098E-5	DEFECT
// If the second character wasn't ':', in order to be valid, // the remainder of the string must match IPv4Address,  // and we must have read exactly 6 16-bit groups.	WITHOUT_CLASSIFICATION	0.9999792853439826	WITHOUT_CLASSIFICATION	2.071465601736331E-5	DEFECT
// userinfo can contain alphanumerics, mark characters, escaped // and ';',':','&','=','+','$',','	WITHOUT_CLASSIFICATION	0.999997734152198	WITHOUT_CLASSIFICATION	2.2658478020119766E-6	DEFECT
// Fill 2 of value (byte) 49 // Fill 26 of value (byte) -3 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999935319013092	WITHOUT_CLASSIFICATION	6.468098690652966E-6	DEFECT
// Trying to match the following productions: // hexseq = hex4 *( ":" hex4) // hex4   = 1*4HEXDIG	WITHOUT_CLASSIFICATION	0.9994075761303676	WITHOUT_CLASSIFICATION	5.924238696324571E-4	DEFECT
// Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999865306411468	WITHOUT_CLASSIFICATION	1.3469358853048835E-5	DEFECT
// Check whether there is an opposite that needs attention. //	WITHOUT_CLASSIFICATION	0.9999850216055954	WITHOUT_CLASSIFICATION	1.4978394404510581E-5	DEFECT
// Return whether there is a list, the value is in the list, and index is in range... //	WITHOUT_CLASSIFICATION	0.9999960928149613	WITHOUT_CLASSIFICATION	3.907185038788266E-6	DEFECT
// If we're creating a child under an object in a feature map, the selection will be the feature map entry. // We want to replace it with the model object. //	WITHOUT_CLASSIFICATION	0.9999885085702414	WITHOUT_CLASSIFICATION	1.1491429758554184E-5	DEFECT
// If there isn't an executable command we should maybe try a link operation, but only if we're allowed and not doing a link. //	WITHOUT_CLASSIFICATION	0.9916875281283324	WITHOUT_CLASSIFICATION	0.008312471871667627	DEFECT
// Only return the feedback for an executable command. //	WITHOUT_CLASSIFICATION	0.9999796159375918	WITHOUT_CLASSIFICATION	2.0384062408289098E-5	DEFECT
// No image is a good default. //	WITHOUT_CLASSIFICATION	0.9999981162094534	WITHOUT_CLASSIFICATION	1.8837905464749279E-6	DEFECT
// Add it to the list and remove it from the other list. //	WITHOUT_CLASSIFICATION	0.9999854680776076	WITHOUT_CLASSIFICATION	1.4531922392516983E-5	DEFECT
// Commands should operate on the values, not their wrappers.  If the command's values needed to be unwrapped, // we'll back get a new CommandParameter. //	WITHOUT_CLASSIFICATION	0.9999883503699564	WITHOUT_CLASSIFICATION	1.1649630043568466E-5	DEFECT
// When an object is controlled, the only change will be in the new resource's contents, so it must // refresh the whole viewer to hit the object's label. //	WITHOUT_CLASSIFICATION	0.9999974164427993	WITHOUT_CLASSIFICATION	2.583557200759567E-6	DEFECT
// Record the part. //	WITHOUT_CLASSIFICATION	0.9999952548981823	WITHOUT_CLASSIFICATION	4.745101817716379E-6	DEFECT
// give up if we couldn't create the command; otherwise, use a // CommandActionDelegate to set the action's text, tool-tip, icon, // etc. or just use the default icon	WITHOUT_CLASSIFICATION	0.9999996928807974	WITHOUT_CLASSIFICATION	3.0711920264866337E-7	DEFECT
// This came from trial and error, yielding decent results on all // platforms.  It should be consistent with activate(). //	WITHOUT_CLASSIFICATION	0.9999476788559627	WITHOUT_CLASSIFICATION	5.2321144037230706E-5	DEFECT
// If we don't already have it, try to get the source early. We can't give // feedback if it's not available yet (this is platform-dependent). //	WITHOUT_CLASSIFICATION	0.9998637950372402	WITHOUT_CLASSIFICATION	1.3620496275974217E-4	DEFECT
// Load the model and if it's not one already considered, e.g., a local version in the workspace, process its GenPackages. //	WITHOUT_CLASSIFICATION	0.9999990522946685	WITHOUT_CLASSIFICATION	9.477053314928094E-7	DEFECT
// If we've found thing with type parameters, search them for a match. //	WITHOUT_CLASSIFICATION	0.9999993853786603	WITHOUT_CLASSIFICATION	6.146213397540749E-7	DEFECT
// process documentation info and create eEnumLiteral for each line //	WITHOUT_CLASSIFICATION	0.9999989917242288	WITHOUT_CLASSIFICATION	1.0082757711695288E-6	DEFECT
// This just notifies those things that are affected by the section. //	WITHOUT_CLASSIFICATION	0.9999277089975437	WITHOUT_CLASSIFICATION	7.229100245635133E-5	DEFECT
// Creates the model from the editor input //	WITHOUT_CLASSIFICATION	0.9999956257317678	WITHOUT_CLASSIFICATION	4.374268232163076E-6	DEFECT
// This is the method that gets invoked when the operation runs. //	WITHOUT_CLASSIFICATION	0.9990033069331098	WITHOUT_CLASSIFICATION	9.966930668902016E-4	DEFECT
// Generate actions for selection; populate and redraw the menus. //	WITHOUT_CLASSIFICATION	0.9999947745549718	WITHOUT_CLASSIFICATION	5.2254450283113094E-6	DEFECT
// this is the case that starting process rose file by passing cat file name // this is a special case. // normally, user should pass mdl file instead of cat file //  // file is a cat file // modelTree did contain quid info	WITHOUT_CLASSIFICATION	0.9999773460275938	WITHOUT_CLASSIFICATION	2.2653972406198394E-5	DEFECT
// Create a page for the parent tree view. //	WITHOUT_CLASSIFICATION	0.9999990911888388	WITHOUT_CLASSIFICATION	9.088111612748077E-7	DEFECT
// Make sure it's okay. //	WITHOUT_CLASSIFICATION	0.999993203698398	WITHOUT_CLASSIFICATION	6.796301602027732E-6	DEFECT
// We either remove the root mapping or we use the iterator that returned the most recent next mapping. //	WITHOUT_CLASSIFICATION	0.9999993742186751	WITHOUT_CLASSIFICATION	6.257813249103146E-7	DEFECT
// Cache the tree path for each object. //	WITHOUT_CLASSIFICATION	0.9999975302377974	WITHOUT_CLASSIFICATION	2.4697622026916053E-6	DEFECT
// Set the editor's selection based on the current viewer's selection. //	WITHOUT_CLASSIFICATION	0.9999509873316439	WITHOUT_CLASSIFICATION	4.901266835608661E-5	DEFECT
// The helper part assumes that the summary is likely based on the helper and will change when the helper is set. //	WITHOUT_CLASSIFICATION	0.999667580529371	WITHOUT_CLASSIFICATION	3.3241947062899924E-4	DEFECT
// This is the method that gets invoked when the operation runs. //	WITHOUT_CLASSIFICATION	0.9990033069331098	WITHOUT_CLASSIFICATION	9.966930668902016E-4	DEFECT
// This is for the out2in feature. //	WITHOUT_CLASSIFICATION	0.9996012969562045	WITHOUT_CLASSIFICATION	3.9870304379548973E-4	DEFECT
// This is for the topDown feature. //	WITHOUT_CLASSIFICATION	0.9989380016512461	WITHOUT_CLASSIFICATION	0.0010619983487538671	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.99999783982728	WITHOUT_CLASSIFICATION	2.1601727201388865E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.99999783982728	WITHOUT_CLASSIFICATION	2.1601727201388865E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.99999783982728	WITHOUT_CLASSIFICATION	2.1601727201388865E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.99999783982728	WITHOUT_CLASSIFICATION	2.1601727201388865E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.99999783982728	WITHOUT_CLASSIFICATION	2.1601727201388865E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.99999783982728	WITHOUT_CLASSIFICATION	2.1601727201388865E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.99999783982728	WITHOUT_CLASSIFICATION	2.1601727201388865E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.99999783982728	WITHOUT_CLASSIFICATION	2.1601727201388865E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.99999783982728	WITHOUT_CLASSIFICATION	2.1601727201388865E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.99999783982728	WITHOUT_CLASSIFICATION	2.1601727201388865E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.99999783982728	WITHOUT_CLASSIFICATION	2.1601727201388865E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.99999783982728	WITHOUT_CLASSIFICATION	2.1601727201388865E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.99999783982728	WITHOUT_CLASSIFICATION	2.1601727201388865E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.99999783982728	WITHOUT_CLASSIFICATION	2.1601727201388865E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.99999783982728	WITHOUT_CLASSIFICATION	2.1601727201388865E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.99999783982728	WITHOUT_CLASSIFICATION	2.1601727201388865E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.99999783982728	WITHOUT_CLASSIFICATION	2.1601727201388865E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.99999783982728	WITHOUT_CLASSIFICATION	2.1601727201388865E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.99999783982728	WITHOUT_CLASSIFICATION	2.1601727201388865E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.99999783982728	WITHOUT_CLASSIFICATION	2.1601727201388865E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.99999783982728	WITHOUT_CLASSIFICATION	2.1601727201388865E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.99999783982728	WITHOUT_CLASSIFICATION	2.1601727201388865E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.99999783982728	WITHOUT_CLASSIFICATION	2.1601727201388865E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.99999783982728	WITHOUT_CLASSIFICATION	2.1601727201388865E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.99999783982728	WITHOUT_CLASSIFICATION	2.1601727201388865E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.99999783982728	WITHOUT_CLASSIFICATION	2.1601727201388865E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.99999783982728	WITHOUT_CLASSIFICATION	2.1601727201388865E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.99999783982728	WITHOUT_CLASSIFICATION	2.1601727201388865E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.99999783982728	WITHOUT_CLASSIFICATION	2.1601727201388865E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.99999783982728	WITHOUT_CLASSIFICATION	2.1601727201388865E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.99999783982728	WITHOUT_CLASSIFICATION	2.1601727201388865E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.99999783982728	WITHOUT_CLASSIFICATION	2.1601727201388865E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.99999783982728	WITHOUT_CLASSIFICATION	2.1601727201388865E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.99999783982728	WITHOUT_CLASSIFICATION	2.1601727201388865E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.99999783982728	WITHOUT_CLASSIFICATION	2.1601727201388865E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.99999783982728	WITHOUT_CLASSIFICATION	2.1601727201388865E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.99999783982728	WITHOUT_CLASSIFICATION	2.1601727201388865E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.99999783982728	WITHOUT_CLASSIFICATION	2.1601727201388865E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.99999783982728	WITHOUT_CLASSIFICATION	2.1601727201388865E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.99999783982728	WITHOUT_CLASSIFICATION	2.1601727201388865E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.99999783982728	WITHOUT_CLASSIFICATION	2.1601727201388865E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.99999783982728	WITHOUT_CLASSIFICATION	2.1601727201388865E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.99999783982728	WITHOUT_CLASSIFICATION	2.1601727201388865E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.99999783982728	WITHOUT_CLASSIFICATION	2.1601727201388865E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.99999783982728	WITHOUT_CLASSIFICATION	2.1601727201388865E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.99999783982728	WITHOUT_CLASSIFICATION	2.1601727201388865E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.99999783982728	WITHOUT_CLASSIFICATION	2.1601727201388865E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.99999783982728	WITHOUT_CLASSIFICATION	2.1601727201388865E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.99999783982728	WITHOUT_CLASSIFICATION	2.1601727201388865E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.99999783982728	WITHOUT_CLASSIFICATION	2.1601727201388865E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.99999783982728	WITHOUT_CLASSIFICATION	2.1601727201388865E-6	DEFECT
// There needs to be another URL protocol right after the archive protocol, and not a "/". //	WITHOUT_CLASSIFICATION	0.9999635621694346	WITHOUT_CLASSIFICATION	3.6437830565445864E-5	DEFECT
// Go directly to the right entry in the zip file,  // get the stream,  // and wrap it so that closing it closes the zip file. //	WITHOUT_CLASSIFICATION	0.9999364522234226	WITHOUT_CLASSIFICATION	6.354777657733921E-5	DEFECT
// Record them as generic streams to record state during the loop that emulates recursion. //	WITHOUT_CLASSIFICATION	0.9999871927921873	WITHOUT_CLASSIFICATION	1.2807207812769005E-5	DEFECT
// If this entry isn't the end marker  // and isn't the matching one that we are replacing... //	WITHOUT_CLASSIFICATION	0.9999005617488996	WITHOUT_CLASSIFICATION	9.943825110036035E-5	DEFECT
// Try to transfer it by reading the contents of the temporary file  // and writing them to the output stream of the delegate. //	WITHOUT_CLASSIFICATION	0.9999919987804424	WITHOUT_CLASSIFICATION	8.00121955751684E-6	DEFECT
// Either execute or redo the command, as appropriate. //	WITHOUT_CLASSIFICATION	0.9999594564929086	WITHOUT_CLASSIFICATION	4.054350709129414E-5	DEFECT
// Skip over the command that threw the exception. //	WITHOUT_CLASSIFICATION	0.9999894353422265	WITHOUT_CLASSIFICATION	1.0564657773572476E-5	DEFECT
// This is kind of tricky. // If the saveIndex was in the redo part of the command list which has now been wiped out, // then we can never reach a point where a save is not necessary, not even if we undo all the way back to the beginning. //	WITHOUT_CLASSIFICATION	0.9996997378900491	WITHOUT_CLASSIFICATION	3.00262109951002E-4	DEFECT
// Count up the objects that will be removed. // The objects are exchanged to produce this list's order //	WITHOUT_CLASSIFICATION	0.999994614137981	WITHOUT_CLASSIFICATION	5.385862019110687E-6	DEFECT
// Count up the objects that will be removed. // The objects are exchanged to produce this list's order //	WITHOUT_CLASSIFICATION	0.999994614137981	WITHOUT_CLASSIFICATION	5.385862019110687E-6	DEFECT
// Count up the objects that will be removed. // The objects are exchanged to produce this list's order //	WITHOUT_CLASSIFICATION	0.999994614137981	WITHOUT_CLASSIFICATION	5.385862019110687E-6	DEFECT
// Remove from by position in reverse order. //	WITHOUT_CLASSIFICATION	0.9999840729985051	WITHOUT_CLASSIFICATION	1.592700149482019E-5	DEFECT
// remove/add the action bar from the view so to avoid // having an empty action bar participating in the view's // layout calculation (and maybe causing an empty bar to appear)	WITHOUT_CLASSIFICATION	0.999833205140472	WITHOUT_CLASSIFICATION	1.6679485952803255E-4	DEFECT
//actionBar.setBackground(WorkbenchColors.getSystemColor(SWT.COLOR_WIDGET_BACKGROUND)); //systemBar.setBackground(WorkbenchColors.getSystemColor(SWT.COLOR_WIDGET_BACKGROUND));	WITHOUT_CLASSIFICATION	0.9999792884945395	WITHOUT_CLASSIFICATION	2.0711505460516902E-5	DEFECT
// Define gradient (blue to widget background color)	WITHOUT_CLASSIFICATION	0.999920957059202	WITHOUT_CLASSIFICATION	7.904294079791289E-5	DEFECT
// Create a new array. //	WITHOUT_CLASSIFICATION	0.9999970892223647	WITHOUT_CLASSIFICATION	2.9107776353925274E-6	DEFECT
// buttonComposite has to be the first child of composite because subclasses are expecting this.	WITHOUT_CLASSIFICATION	0.9999846460326804	WITHOUT_CLASSIFICATION	1.5353967319483954E-5	DEFECT
// Common to all URI types.	WITHOUT_CLASSIFICATION	0.9999797798708565	WITHOUT_CLASSIFICATION	2.0220129143455434E-5	DEFECT
// A cache of URIs, keyed by the strings from which they were created. // The fragment of any URI is removed before caching it here, to minimize // the size of the cache in the usual case where most URIs only differ by // the fragment.	WITHOUT_CLASSIFICATION	0.9998295963485829	WITHOUT_CLASSIFICATION	1.704036514170162E-4	DEFECT
// The lower-cased schemes that will be used to identify archive URIs.	WITHOUT_CLASSIFICATION	0.9999260577778085	WITHOUT_CLASSIFICATION	7.394222219139459E-5	DEFECT
// Special segment values interpreted at resolve and resolve time.	WITHOUT_CLASSIFICATION	0.9999957764502373	WITHOUT_CLASSIFICATION	4.223549762673078E-6	DEFECT
// Some character classes, as defined in RFC 2396's BNF for URI. // These are 128-bit bitmasks, stored as two longs, where the Nth bit is set // iff the ASCII character with value N is included in the set.  These are // created with the highBitmask() and lowBitmask() methods defined below, // and a character is tested against them using matches(). //	WITHOUT_CLASSIFICATION	0.9999999889868414	WITHOUT_CLASSIFICATION	1.1013158622515702E-8	DEFECT
// | ucschar | escaped	WITHOUT_CLASSIFICATION	0.9999971607816922	WITHOUT_CLASSIFICATION	2.8392183077529165E-6	DEFECT
// We can't want to do encoding of platform resource URIs by default yet.    //	WITHOUT_CLASSIFICATION	0.9999676435894354	WITHOUT_CLASSIFICATION	3.235641056463773E-5	DEFECT
// Returns the upper half bitmask for all the ASCII characters in the given // string.	WITHOUT_CLASSIFICATION	0.9999984721710328	WITHOUT_CLASSIFICATION	1.5278289673137376E-6	DEFECT
// Uses a cache to speed up creation of a URI from a string.  The cache // is consulted to see if the URI, less any fragment, has already been // created.  If needed, the fragment is re-appended to the cached URI, // which is considerably more efficient than creating the whole URI from // scratch.  If the URI wasn't found in the cache, it is created using // parseIntoURI() and then cached.  This method should always be used // by string-parsing factory methods, instead of parseIntoURI() directly.	WITHOUT_CLASSIFICATION	0.9999952864942904	WITHOUT_CLASSIFICATION	4.713505709608884E-6	DEFECT
// Finds the next occurrence of one of the characters in the set represented // by the given bitmask in the given string, beginning at index i. The index // of the first found character, or s.length() if there is none, is // returned.  Before searching, i is limited to the range [0, s.length()]. //	WITHOUT_CLASSIFICATION	0.9999986670039811	WITHOUT_CLASSIFICATION	1.3329960189429109E-6	DEFECT
//boolean iri = false;	WITHOUT_CLASSIFICATION	0.9999640416582065	WITHOUT_CLASSIFICATION	3.5958341793405384E-5	DEFECT
//iri = iri || containsNonASCII(segments[i]);	WITHOUT_CLASSIFICATION	0.9999919996620215	WITHOUT_CLASSIFICATION	8.00033797847684E-6	DEFECT
// <p>A valid query may be null or contain any allowed URI characters.	WITHOUT_CLASSIFICATION	0.9999956809047171	WITHOUT_CLASSIFICATION	4.319095282903417E-6	DEFECT
//return value == null || validate(value, URIC_HI, URIC_LO, true, true);	WITHOUT_CLASSIFICATION	0.9999986517033442	WITHOUT_CLASSIFICATION	1.3482966557599947E-6	DEFECT
// Tests the non-null string value to see if it contains only ASCII // characters in the set represented by the specified 128-bit bitmask, // as well as, optionally, non-ASCII characters 0xA0 and above, and, // also optionally, escape sequences of % followed by two hex digits. // This method is used for the new, strict URI validation that is not // not currently in place.	WITHOUT_CLASSIFICATION	0.9999970697894425	WITHOUT_CLASSIFICATION	2.9302105574913507E-6	DEFECT
// note: authority == null -> hierarchical // (authority == null && device == null && !absolutePath) -> scheme == null	WITHOUT_CLASSIFICATION	0.9999977835350471	WITHOUT_CLASSIFICATION	2.216464952978771E-6	DEFECT
// current document reference: use base path and query	WITHOUT_CLASSIFICATION	0.9996188525649238	WITHOUT_CLASSIFICATION	3.8114743507616306E-4	DEFECT
// else keep device, path, and query	WITHOUT_CLASSIFICATION	0.9999988589228754	WITHOUT_CLASSIFICATION	1.1410771246371632E-6	DEFECT
// else keep authority, device, path, and query	WITHOUT_CLASSIFICATION	0.9999986090785468	WITHOUT_CLASSIFICATION	1.3909214531491283E-6	DEFECT
// Merges this URI's relative path with the base non-relative path.  If // base has no path, treat it as the root absolute path, unless this has // no path either.	WITHOUT_CLASSIFICATION	0.9999861796049838	WITHOUT_CLASSIFICATION	1.3820395016210475E-5	DEFECT
// if the relative path is empty or ends in an empty segment, a parent  // reference, or a self reference, add a trailing separator to a // non-empty path	WITHOUT_CLASSIFICATION	0.9999966175168401	WITHOUT_CLASSIFICATION	3.382483159939711E-6	DEFECT
// since base must be hierarchical, and since a non-hierarchical URI // must have both scheme and opaque part, the complete absolute URI is // needed to resolve to a non-hierarchical URI	WITHOUT_CLASSIFICATION	0.9999998834775973	WITHOUT_CLASSIFICATION	1.1652240270032727E-7	DEFECT
// path form demands an absolute path: keep it and query	WITHOUT_CLASSIFICATION	0.999960805413745	WITHOUT_CLASSIFICATION	3.919458625509052E-5	DEFECT
// always include fragment, even if null; // no validation needed since all components are from existing URIs	WITHOUT_CLASSIFICATION	0.9999997214531847	WITHOUT_CLASSIFICATION	2.7854681532572716E-7	DEFECT
// Returns true if the non-relative path includes segments that would be // collapsed when resolving; false otherwise.  If preserveRootParents is // true, collapsible segments include any empty segments, except for the // last segment, as well as and parent and self references.  If // preserveRootsParents is false, parent references are not collapsible if // they are the first segment or preceded only by other parent // references.	WITHOUT_CLASSIFICATION	0.9999864276748454	WITHOUT_CLASSIFICATION	1.3572325154631832E-5	DEFECT
// if endPath is shorter than startPath, the last segment of endPath may // not be compared: because startPath has been collapsed and had its // last segment removed, all preceding segments can be considered non- // empty and followed by a separator, while the last segment of endPath // will either be non-empty and not followed by a separator, or just empty	WITHOUT_CLASSIFICATION	0.9999059418071417	WITHOUT_CLASSIFICATION	9.405819285825667E-5	DEFECT
// absolute path or no path -> absolute path	WITHOUT_CLASSIFICATION	0.9999945065658582	WITHOUT_CLASSIFICATION	5.4934341417809E-6	DEFECT
// Computes a three-character escape sequence for the byte, appending // it to the StringBuffer.  Only characters up to 0xFF should be escaped; // all but the least significant byte will be ignored.	WITHOUT_CLASSIFICATION	0.999998892061947	WITHOUT_CLASSIFICATION	1.1079380530028177E-6	DEFECT
/*   * Returns <code>true</code> if this URI contains non-ASCII characters;   * <code>false</code> otherwise.   *   * This unused code is included for possible future use...    */	WITHOUT_CLASSIFICATION	0.99999946438917	WITHOUT_CLASSIFICATION	5.356108299300693E-7	DEFECT
// If that fails, determine the URL for the class itself. // The URL will be of one of the following forms, // so there are a few good places to consider looking for the plugin.properties. // // For a plugin.xml with runtime="common.jar": // jar:file:/D:/sandbox/unpackage1-3.1M7/eclipse/plugins/org.eclipse.emf.common/common.jar!/org/eclipse/common/CommonPlugin.class // // For a plugin.xml with runtime="runtime/common.jar": // jar:file:/D:/sandbox/unpackage1-3.1M7/eclipse/plugins/org.eclipse.emf.common/runtime/common.jar!/org/eclipse/common/CommonPlugin.class // // For a plugin.xml with runtime="." where the plugin is jarred: // jar:file:/D:/sandbox/unpackage1-3.1M7/eclipse/plugins/org.eclipse.emf.common.jar!/org/eclipse/common/CommonPlugin.class // // For a plugin.xml with runtime="." where the plugin is not jarred. // file:/D:/sandbox/unpackage1-3.1M7/eclipse/plugins/org.eclipse.emf.common/org/eclipse/emf/common/CommonPlugin.class // // Running in PDE with bin on classpath: // file:/D:/sandbox/unpackage1-3.1M7/eclipse/plugins/org.eclipse.emf.common/bin/org/eclipse/emf/common/CommonPlugin.class //	WITHOUT_CLASSIFICATION	0.9949698046616923	WITHOUT_CLASSIFICATION	0.0050301953383077806	DEFECT
// If we can open  an input stream, then the plugin.properties is there, and we have a good base URL. //	WITHOUT_CLASSIFICATION	0.9999934202407909	WITHOUT_CLASSIFICATION	6.579759209236739E-6	DEFECT
// If the bundle can't be found the normal way, try to find it as the base URL. // If that also doesn't work, rethrow the original exception. //	WITHOUT_CLASSIFICATION	0.9998791434948705	WITHOUT_CLASSIFICATION	1.2085650512959803E-4	DEFECT
// ++modCount //	WITHOUT_CLASSIFICATION	0.9999196125171576	WITHOUT_CLASSIFICATION	8.038748284246945E-5	DEFECT
// ++modCount //	WITHOUT_CLASSIFICATION	0.9999196125171576	WITHOUT_CLASSIFICATION	8.038748284246945E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999139943642469	WITHOUT_CLASSIFICATION	8.60056357530864E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999139943642469	WITHOUT_CLASSIFICATION	8.60056357530864E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999139943642469	WITHOUT_CLASSIFICATION	8.60056357530864E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999139943642469	WITHOUT_CLASSIFICATION	8.60056357530864E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999139943642469	WITHOUT_CLASSIFICATION	8.60056357530864E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999139943642469	WITHOUT_CLASSIFICATION	8.60056357530864E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999139943642469	WITHOUT_CLASSIFICATION	8.60056357530864E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999139943642469	WITHOUT_CLASSIFICATION	8.60056357530864E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999139943642469	WITHOUT_CLASSIFICATION	8.60056357530864E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999139943642469	WITHOUT_CLASSIFICATION	8.60056357530864E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999139943642469	WITHOUT_CLASSIFICATION	8.60056357530864E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999139943642469	WITHOUT_CLASSIFICATION	8.60056357530864E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999139943642469	WITHOUT_CLASSIFICATION	8.60056357530864E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999139943642469	WITHOUT_CLASSIFICATION	8.60056357530864E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999139943642469	WITHOUT_CLASSIFICATION	8.60056357530864E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999139943642469	WITHOUT_CLASSIFICATION	8.60056357530864E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999139943642469	WITHOUT_CLASSIFICATION	8.60056357530864E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999139943642469	WITHOUT_CLASSIFICATION	8.60056357530864E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999139943642469	WITHOUT_CLASSIFICATION	8.60056357530864E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999139943642469	WITHOUT_CLASSIFICATION	8.60056357530864E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999139943642469	WITHOUT_CLASSIFICATION	8.60056357530864E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999139943642469	WITHOUT_CLASSIFICATION	8.60056357530864E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999139943642469	WITHOUT_CLASSIFICATION	8.60056357530864E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999139943642469	WITHOUT_CLASSIFICATION	8.60056357530864E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999139943642469	WITHOUT_CLASSIFICATION	8.60056357530864E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999139943642469	WITHOUT_CLASSIFICATION	8.60056357530864E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999139943642469	WITHOUT_CLASSIFICATION	8.60056357530864E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999139943642469	WITHOUT_CLASSIFICATION	8.60056357530864E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999139943642469	WITHOUT_CLASSIFICATION	8.60056357530864E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999139943642469	WITHOUT_CLASSIFICATION	8.60056357530864E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999139943642469	WITHOUT_CLASSIFICATION	8.60056357530864E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999139943642469	WITHOUT_CLASSIFICATION	8.60056357530864E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999139943642469	WITHOUT_CLASSIFICATION	8.60056357530864E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999139943642469	WITHOUT_CLASSIFICATION	8.60056357530864E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999139943642469	WITHOUT_CLASSIFICATION	8.60056357530864E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999139943642469	WITHOUT_CLASSIFICATION	8.60056357530864E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999139943642469	WITHOUT_CLASSIFICATION	8.60056357530864E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999139943642469	WITHOUT_CLASSIFICATION	8.60056357530864E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999139943642469	WITHOUT_CLASSIFICATION	8.60056357530864E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999139943642469	WITHOUT_CLASSIFICATION	8.60056357530864E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999139943642469	WITHOUT_CLASSIFICATION	8.60056357530864E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999139943642469	WITHOUT_CLASSIFICATION	8.60056357530864E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999139943642469	WITHOUT_CLASSIFICATION	8.60056357530864E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999139943642469	WITHOUT_CLASSIFICATION	8.60056357530864E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999139943642469	WITHOUT_CLASSIFICATION	8.60056357530864E-5	DEFECT
// Open an editor on the new file. //	WITHOUT_CLASSIFICATION	0.9999820839866508	WITHOUT_CLASSIFICATION	1.7916013349228714E-5	DEFECT
// Open an editor on the new file. //	WITHOUT_CLASSIFICATION	0.9999820839866508	WITHOUT_CLASSIFICATION	1.7916013349228714E-5	DEFECT
// feature is instance of EAttribute	WITHOUT_CLASSIFICATION	0.9999763872019803	WITHOUT_CLASSIFICATION	2.3612798019660034E-5	DEFECT
// Create a proper feature map entry. //	WITHOUT_CLASSIFICATION	0.9999692181963722	WITHOUT_CLASSIFICATION	3.07818036278327E-5	DEFECT
// Bidirectional references need to use this less efficient approach because some //  or all of the changes may already have been made from the other end. //	WITHOUT_CLASSIFICATION	0.9998457791580916	WITHOUT_CLASSIFICATION	1.5422084190837553E-4	DEFECT
// caches the list value.	WITHOUT_CLASSIFICATION	0.9999989681098944	WITHOUT_CLASSIFICATION	1.0318901055018694E-6	DEFECT
// caches the list value.	WITHOUT_CLASSIFICATION	0.9999989681098944	WITHOUT_CLASSIFICATION	1.0318901055018694E-6	DEFECT
// caches the list value.	WITHOUT_CLASSIFICATION	0.9999989681098944	WITHOUT_CLASSIFICATION	1.0318901055018694E-6	DEFECT
// Maintain a (weak hash) set on the type parameter of all referencing generic types. //	WITHOUT_CLASSIFICATION	0.9999938270632313	WITHOUT_CLASSIFICATION	6.172936768772886E-6	DEFECT
// The algorithm for the order of the features in this list should never change. // Also, the fact that a new list is created whenever the contents change  // is something else that should never change. // There are clients who rely on both these behaviors,  // and they will need to agree to any change, // so that they can adjust their own code. //	WITHOUT_CLASSIFICATION	0.9993259599121049	WITHOUT_CLASSIFICATION	6.740400878950182E-4	DEFECT
// The notification for this list is being thrown by the // delegating list //	WITHOUT_CLASSIFICATION	0.999946216777359	WITHOUT_CLASSIFICATION	5.378322264115401E-5	DEFECT
// Keep trying until all else has failed.	WITHOUT_CLASSIFICATION	0.9999312778899689	WITHOUT_CLASSIFICATION	6.872211003110122E-5	DEFECT
// return eContainerFeatureID;	WITHOUT_CLASSIFICATION	0.9999786544942627	WITHOUT_CLASSIFICATION	2.134550573727651E-5	DEFECT
// If we're not setting a new resource, attach it to the old container's resource.	WITHOUT_CLASSIFICATION	0.9998670120714013	WITHOUT_CLASSIFICATION	1.3298792859870956E-4	DEFECT
// If we didn't detach it from an old resource already, detach it from the old container's resource. //	WITHOUT_CLASSIFICATION	0.9999596196565822	WITHOUT_CLASSIFICATION	4.038034341790277E-5	DEFECT
/* backward compatibility with old generated overrides */	WITHOUT_CLASSIFICATION	0.9999992693701717	WITHOUT_CLASSIFICATION	7.306298282081742E-7	DEFECT
/* backward compatibility with old generated overrides */	WITHOUT_CLASSIFICATION	0.9999992693701717	WITHOUT_CLASSIFICATION	7.306298282081742E-7	DEFECT
// Depending on the action and the current state, we'll toggle the state. // i.e., for unset, we need to turn it off if it's on,  // and for set we need to turn it on if it's off. //	WITHOUT_CLASSIFICATION	0.9999857008128369	WITHOUT_CLASSIFICATION	1.4299187163141154E-5	DEFECT
// If the index was previously assigned, return it. // Otherwise, return a negative result that encodes the newly assigned index. //	WITHOUT_CLASSIFICATION	0.9999982157415521	WITHOUT_CLASSIFICATION	1.7842584479318563E-6	DEFECT
// We set it and get back the interned string. // This way, when instanceClassName == instanceTypeName we know we should serialize only the class name. //	WITHOUT_CLASSIFICATION	0.9999767837350609	WITHOUT_CLASSIFICATION	2.321626493900588E-5	DEFECT
// The container class must be null for the open content features of the document root // to ensure that they are looked up in the actual eClass()  // rather than assumed to be a feature with a feature ID relative to the actual class. // Otherwise, it's good to have this optimization. //	WITHOUT_CLASSIFICATION	0.999964559653145	WITHOUT_CLASSIFICATION	3.5440346854968697E-5	DEFECT
// Interpret it as part of the name. //	WITHOUT_CLASSIFICATION	0.9999959969158735	WITHOUT_CLASSIFICATION	4.0030841265042405E-6	DEFECT
// The class address was not equal, so we don't want this class loader, // but instead want the last result that was able to load the class. //	WITHOUT_CLASSIFICATION	0.9994898963820085	WITHOUT_CLASSIFICATION	5.101036179914045E-4	DEFECT
//Platform.getBundle(element.getNamespaceIdentifier()).loadClass(contributorClassName);	WITHOUT_CLASSIFICATION	0.9999940480769013	WITHOUT_CLASSIFICATION	5.951923098825937E-6	DEFECT
// First try to see if this class has an eInstance  //	WITHOUT_CLASSIFICATION	0.9999807242376175	WITHOUT_CLASSIFICATION	1.927576238242034E-5	DEFECT
// Create a resource for this file. //	WITHOUT_CLASSIFICATION	0.9999992725426616	WITHOUT_CLASSIFICATION	7.274573384260692E-7	DEFECT
// Add the initial model object to the contents. //	WITHOUT_CLASSIFICATION	0.99999768211151	WITHOUT_CLASSIFICATION	2.3178884900698068E-6	DEFECT
// Create a page, set the title, and the initial model file name. //	WITHOUT_CLASSIFICATION	0.9999999240006356	WITHOUT_CLASSIFICATION	7.59993643712375E-8	DEFECT
// Set this for the container. //	WITHOUT_CLASSIFICATION	0.9999826919248416	WITHOUT_CLASSIFICATION	1.73080751584136E-5	DEFECT
// Load the schema and packages that were used to load the instance into this resource set. //	WITHOUT_CLASSIFICATION	0.9999973272706559	WITHOUT_CLASSIFICATION	2.6727293440106662E-6	DEFECT
// Create a resource for this file. Don't specify a content type, as it could be Ecore or EMOF. //	WITHOUT_CLASSIFICATION	0.9999852612617467	WITHOUT_CLASSIFICATION	1.4738738253165233E-5	DEFECT
// Put all static package in the package registry. //	WITHOUT_CLASSIFICATION	0.9999785735142086	WITHOUT_CLASSIFICATION	2.142648579129361E-5	DEFECT
// Look into SubContributionItems //	WITHOUT_CLASSIFICATION	0.9999612434312878	WITHOUT_CLASSIFICATION	3.875656871225123E-5	DEFECT
//return;	WITHOUT_CLASSIFICATION	0.9996659960983604	WITHOUT_CLASSIFICATION	3.340039016395924E-4	DEFECT
// super.collectNewChildDescriptors(newChildDescriptors, object);	WITHOUT_CLASSIFICATION	0.9999962914123612	WITHOUT_CLASSIFICATION	3.708587638746974E-6	DEFECT
// If the list is empty, we need to add all the objects, // otherwise, the reference is bidirectional and the list is at least partially populated. //	WITHOUT_CLASSIFICATION	0.9999959558982596	WITHOUT_CLASSIFICATION	4.044101740427809E-6	DEFECT
// List subList(EStructuralFeature feature, int from, int to); // EList list(EStructuralFeature feature);	WITHOUT_CLASSIFICATION	0.9999985434945412	WITHOUT_CLASSIFICATION	1.4565054587968776E-6	DEFECT
// We do not want to diagnose any errors that have already been diagnosed by a super type. // Although we ignore all the first super's features, there may be mixin classes that still would result in duplicates. //	WITHOUT_CLASSIFICATION	0.9999834457280564	WITHOUT_CLASSIFICATION	1.655427194355166E-5	DEFECT
// There is no match if the types are different // and they don't each specify the same non-null instance class name. //	WITHOUT_CLASSIFICATION	0.9999892129470959	WITHOUT_CLASSIFICATION	1.0787052904133892E-5	DEFECT
// We need to be conservative and diagnose a problem only if we are quite sure that type is built-in  // and hence that the lack of a default value really represents a problem with being unable to convert the literal to a value. // 	WITHOUT_CLASSIFICATION	0.9999879923099834	WITHOUT_CLASSIFICATION	1.2007690016577884E-5	DEFECT
// And even if it is contained, it must not be a forward reference. // eTypeParameterIndex == index is allowed when the type parameter is  // the type argument of the bound, though //	WITHOUT_CLASSIFICATION	0.9999934505529976	WITHOUT_CLASSIFICATION	6.549447002300364E-6	DEFECT
// A primitive type can only be used as the generic type of a typed element. //	WITHOUT_CLASSIFICATION	0.9999996322184267	WITHOUT_CLASSIFICATION	3.677815732975732E-7	DEFECT
// Check if the bound specifies a classifier... //	WITHOUT_CLASSIFICATION	0.9999934267288783	WITHOUT_CLASSIFICATION	6.5732711218468415E-6	DEFECT
// Since we will do the processing recursively, we need to ensure we don't stack overflow if there is a circular super type. //	WITHOUT_CLASSIFICATION	0.999966485164833	WITHOUT_CLASSIFICATION	3.351483516696724E-5	DEFECT
// Or we test their relationship via their instance classes, if they have them. //	WITHOUT_CLASSIFICATION	0.9999978501936466	WITHOUT_CLASSIFICATION	2.149806353316847E-6	DEFECT
// The bound is a wildcard with no constraints. //	WITHOUT_CLASSIFICATION	0.9999847077424779	WITHOUT_CLASSIFICATION	1.5292257522043646E-5	DEFECT
// The bound is a wildcard with no constraints. //	WITHOUT_CLASSIFICATION	0.9999847077424779	WITHOUT_CLASSIFICATION	1.5292257522043646E-5	DEFECT
/*        featureMap.add(eStructuralFeature, cursor++, o);        expectedModCount = featureMap.getModCount();        ++entryCursor;        ++lastCursor;        // lastCursor = -1;        // prepared = 0;*/	WITHOUT_CLASSIFICATION	0.999999956398747	WITHOUT_CLASSIFICATION	4.3601253140281394E-8	DEFECT
// Don't remove the adapter if the object is in a different resource  // and that resource (and hence all its contents) are being cross referenced. //	WITHOUT_CLASSIFICATION	0.9999855108774178	WITHOUT_CLASSIFICATION	1.448912258210047E-5	DEFECT
/*  public List subList(EStructuralFeature feature, int from, int to)  {    return null;  }*/	WITHOUT_CLASSIFICATION	0.9999995571249715	WITHOUT_CLASSIFICATION	4.428750284785871E-7	DEFECT
// Mark the bound as unspecified so that it won't be considered many // but can nevertheless be recognized as being unspecified and perhaps still be treat as many. //	WITHOUT_CLASSIFICATION	0.9999420114921247	WITHOUT_CLASSIFICATION	5.7988507875245746E-5	DEFECT
// Mark the bound as unspecified so that it won't be considered many // but can nevertheless be recognized as being unspecified and perhaps still be treat as many. //	WITHOUT_CLASSIFICATION	0.9999420114921247	WITHOUT_CLASSIFICATION	5.7988507875245746E-5	DEFECT
// If we can't add it, it must already be in the list so find it and move it to the end. //	WITHOUT_CLASSIFICATION	0.999998325613863	WITHOUT_CLASSIFICATION	1.6743861369452984E-6	DEFECT
// Both eObject1 and eObject2 are not null. // If eObject1 has been compared already... //	WITHOUT_CLASSIFICATION	0.999980682080324	WITHOUT_CLASSIFICATION	1.9317919676026867E-5	DEFECT
// There's no reason they aren't equal, so they are. //	WITHOUT_CLASSIFICATION	0.9993520292296979	WITHOUT_CLASSIFICATION	6.479707703021714E-4	DEFECT
// If the set states are the same, and the values of the feature are the structurally equal, they are equal. //	WITHOUT_CLASSIFICATION	0.9999981171752331	WITHOUT_CLASSIFICATION	1.882824766851651E-6	DEFECT
// If entries don't have the same feature, the feature maps aren't equal. //	WITHOUT_CLASSIFICATION	0.99975437417043	WITHOUT_CLASSIFICATION	2.4562582956997973E-4	DEFECT
// Do a base 64 conversion by turning every 3 bytes into 4 base 64 characters //	WITHOUT_CLASSIFICATION	0.9999979902771216	WITHOUT_CLASSIFICATION	2.0097228784235514E-6	DEFECT
// Get the current time in milliseconds since the epoch  // and adjust it to match the epoch required by the specification. //	WITHOUT_CLASSIFICATION	0.9999846546989739	WITHOUT_CLASSIFICATION	1.534530102610256E-5	DEFECT
// The system time hasn't changed so add some increment of 100s of nanoseconds to guarantee uniqueness. //	WITHOUT_CLASSIFICATION	0.9993200447726206	WITHOUT_CLASSIFICATION	6.799552273792888E-4	DEFECT
// Since the granularity of time in Java is only milliseconds,  // add an adjustment so that the time is represented in 100s of nanoseconds. // The version number (1) is multiplexed into the most significant hex digit. //	WITHOUT_CLASSIFICATION	0.999999721000918	WITHOUT_CLASSIFICATION	2.7899908199015886E-7	DEFECT
// Cc	WITHOUT_CLASSIFICATION	0.9999566853632391	WITHOUT_CLASSIFICATION	4.3314636760830064E-5	DEFECT
// The entity handler is the best place to resolve and deresolve URIs since it can do it there just once to produce the entity. // So most often the entity handler will be a URI handler as well and when used as a URI handler will be an identity handler. //	WITHOUT_CLASSIFICATION	0.9999927062593775	WITHOUT_CLASSIFICATION	7.293740622509834E-6	DEFECT
// Handle the same document proxies, which may have problems resulting from the // other end of a bidirectional reference being handled as an IDREF rather than as a proxy. // When we are done with these, we know that funny proxies are now resolved as if they were handled as IDREFs. //	WITHOUT_CLASSIFICATION	0.9990743137828462	WITHOUT_CLASSIFICATION	9.256862171538397E-4	DEFECT
// So if the resolved object is also present... //	WITHOUT_CLASSIFICATION	0.99999664839749	WITHOUT_CLASSIFICATION	3.35160251002469E-6	DEFECT
// If there is no root object, we're dealing with an EAttribute feature instead of an EReference feature. // So create an instance of simple any type and prepare it to handle the text content. //	WITHOUT_CLASSIFICATION	0.9999963569618651	WITHOUT_CLASSIFICATION	3.643038134868883E-6	DEFECT
// Continue with a different approach.	WITHOUT_CLASSIFICATION	0.9996236261668097	WITHOUT_CLASSIFICATION	3.763738331903873E-4	DEFECT
// Look for the first non-XMI element. //	WITHOUT_CLASSIFICATION	0.9999848235771865	WITHOUT_CLASSIFICATION	1.517642281349495E-5	DEFECT
// set features and properties	WITHOUT_CLASSIFICATION	0.9999666465600217	WITHOUT_CLASSIFICATION	3.3353439978413996E-5	DEFECT
// Include only non-duplicate namespace declarations. //	WITHOUT_CLASSIFICATION	0.9999998226687663	WITHOUT_CLASSIFICATION	1.7733123360958154E-7	DEFECT
// We need to be careful that we don't end up requiring the no namespace package  // just because the feature is unqualified. //	WITHOUT_CLASSIFICATION	0.9999968159473009	WITHOUT_CLASSIFICATION	3.1840526990993495E-6	DEFECT
// We must have a qualifier for an attribute that needs qualified. //	WITHOUT_CLASSIFICATION	0.9999967367682003	WITHOUT_CLASSIFICATION	3.2632317997686064E-6	DEFECT
// see if prefix already exists in current context	WITHOUT_CLASSIFICATION	0.9999654698791165	WITHOUT_CLASSIFICATION	3.453012088353235E-5	DEFECT
// Walk up the super types until we reach a root. //	WITHOUT_CLASSIFICATION	0.9999733810327526	WITHOUT_CLASSIFICATION	2.661896724748639E-5	DEFECT
// Look for a matching element in the classifier's package but don't bother with the XML type package's document root. //	WITHOUT_CLASSIFICATION	0.9990808792732981	WITHOUT_CLASSIFICATION	9.19120726701965E-4	DEFECT
/*   * INTERNAL: this is a specialized method to add attributes for a top/root element   */	WITHOUT_CLASSIFICATION	0.9998123110581371	WITHOUT_CLASSIFICATION	1.8768894186288893E-4	DEFECT
// it's intentional to keep going	WITHOUT_CLASSIFICATION	0.9999896770209104	WITHOUT_CLASSIFICATION	1.0322979089728608E-5	DEFECT
// it's intentional to keep going	WITHOUT_CLASSIFICATION	0.9999896770209104	WITHOUT_CLASSIFICATION	1.0322979089728608E-5	DEFECT
// it's intentional to keep going	WITHOUT_CLASSIFICATION	0.9999896770209104	WITHOUT_CLASSIFICATION	1.0322979089728608E-5	DEFECT
// it's intentional to keep going	WITHOUT_CLASSIFICATION	0.9999896770209104	WITHOUT_CLASSIFICATION	1.0322979089728608E-5	DEFECT
// Produce the supplemental character as an entity	WITHOUT_CLASSIFICATION	0.9999983400048671	WITHOUT_CLASSIFICATION	1.6599951329816728E-6	DEFECT
// We not sure the encoding supports this code point, so we write it as a character entity reference.	WITHOUT_CLASSIFICATION	0.9995985274796568	WITHOUT_CLASSIFICATION	4.014725203432308E-4	DEFECT
// no property	WITHOUT_CLASSIFICATION	0.9998938996524183	WITHOUT_CLASSIFICATION	1.0610034758169792E-4	DEFECT
// no property	WITHOUT_CLASSIFICATION	0.9998938996524183	WITHOUT_CLASSIFICATION	1.0610034758169792E-4	DEFECT
// no property	WITHOUT_CLASSIFICATION	0.9998938996524183	WITHOUT_CLASSIFICATION	1.0610034758169792E-4	DEFECT
// Only handle classifiers from this package. //	WITHOUT_CLASSIFICATION	0.9999633606369435	WITHOUT_CLASSIFICATION	3.663936305651939E-5	DEFECT
// We effectively passed null, "" to look up the general-content feature. //	WITHOUT_CLASSIFICATION	0.9999990440738213	WITHOUT_CLASSIFICATION	9.559261786201987E-7	DEFECT
// DocumentRoot	WITHOUT_CLASSIFICATION	0.9999723640699321	WITHOUT_CLASSIFICATION	2.7635930067949454E-5	DEFECT
// Keep trying other member types until all have failed.	WITHOUT_CLASSIFICATION	0.9999581417121348	WITHOUT_CLASSIFICATION	4.1858287865147373E-5	DEFECT
// Keep trying other member types until all have failed.	WITHOUT_CLASSIFICATION	0.9999581417121348	WITHOUT_CLASSIFICATION	4.1858287865147373E-5	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9998741272583022	WITHOUT_CLASSIFICATION	1.2587274169791147E-4	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9998741272583022	WITHOUT_CLASSIFICATION	1.2587274169791147E-4	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9998741272583022	WITHOUT_CLASSIFICATION	1.2587274169791147E-4	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9998741272583022	WITHOUT_CLASSIFICATION	1.2587274169791147E-4	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9998741272583022	WITHOUT_CLASSIFICATION	1.2587274169791147E-4	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9998741272583022	WITHOUT_CLASSIFICATION	1.2587274169791147E-4	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9998741272583022	WITHOUT_CLASSIFICATION	1.2587274169791147E-4	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9998741272583022	WITHOUT_CLASSIFICATION	1.2587274169791147E-4	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9998741272583022	WITHOUT_CLASSIFICATION	1.2587274169791147E-4	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9998741272583022	WITHOUT_CLASSIFICATION	1.2587274169791147E-4	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9998741272583022	WITHOUT_CLASSIFICATION	1.2587274169791147E-4	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9998741272583022	WITHOUT_CLASSIFICATION	1.2587274169791147E-4	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9998741272583022	WITHOUT_CLASSIFICATION	1.2587274169791147E-4	DEFECT
// Need not to call setSource() because // a caller can not access this match instance.	WITHOUT_CLASSIFICATION	0.9999995610309003	WITHOUT_CLASSIFICATION	4.3896909975565184E-7	DEFECT
// Need not to call setSource() because // a caller can not access this match instance.	WITHOUT_CLASSIFICATION	0.9999995610309003	WITHOUT_CLASSIFICATION	4.3896909975565184E-7	DEFECT
/*           * The pattern has only fixed string.           * The engine uses Boyer-Moore.           */	WITHOUT_CLASSIFICATION	0.9999294603939908	WITHOUT_CLASSIFICATION	7.053960600919939E-5	DEFECT
/*           * The pattern has only fixed string.           * The engine uses Boyer-Moore.           */	WITHOUT_CLASSIFICATION	0.9999294603939908	WITHOUT_CLASSIFICATION	7.053960600919939E-5	DEFECT
/*           * The pattern contains a fixed string.           * The engine checks with Boyer-Moore whether the text contains the fixed string or not.           * If not, it return with false.           */	WITHOUT_CLASSIFICATION	0.9998940976160623	WITHOUT_CLASSIFICATION	1.0590238393774031E-4	DEFECT
// ModifierOp // CharOp  for CHAR, BACKREFERENCE, CAPTURE, ANCHOR, 	WITHOUT_CLASSIFICATION	0.9999947612873148	WITHOUT_CLASSIFICATION	5.23871268516008E-6	DEFECT
// STRING	WITHOUT_CLASSIFICATION	0.9999292140715291	WITHOUT_CLASSIFICATION	7.078592847089085E-5	DEFECT
// for RANGE or NRANGE	WITHOUT_CLASSIFICATION	0.9999598840090554	WITHOUT_CLASSIFICATION	4.01159909446183E-5	DEFECT
// Overlapped // src:    o--------o // sub:  o----o // sub:      o----o // sub:          o----o // sub:  o------------o	WITHOUT_CLASSIFICATION	0.9999083736307943	WITHOUT_CLASSIFICATION	9.162636920575598E-5	DEFECT
// this.ranges is sorted and compacted.	WITHOUT_CLASSIFICATION	0.9999932527392577	WITHOUT_CLASSIFICATION	6.74726074233505E-6	DEFECT
// src1:    o--------o // src2:          o----o // res:           o--o // Reuse src2	WITHOUT_CLASSIFICATION	0.999857659145128	WITHOUT_CLASSIFICATION	1.423408548719443E-4	DEFECT
//this.setLocale(Locale.getDefault());	WITHOUT_CLASSIFICATION	0.9999879619518783	WITHOUT_CLASSIFICATION	1.2038048121769775E-5	DEFECT
/*      public RegularExpression createRegex(String regex, int options) throws ParseException {          Token tok = this.parse(regex, options);          return new RegularExpression(regex, tok, this.parennumber, this.hasBackReferences, options);      }      */	WITHOUT_CLASSIFICATION	0.9999991454579643	WITHOUT_CLASSIFICATION	8.545420356603293E-7	DEFECT
// ')'	WITHOUT_CLASSIFICATION	0.999936030654412	WITHOUT_CLASSIFICATION	6.396934558806958E-5	DEFECT
// Skips ')'	WITHOUT_CLASSIFICATION	0.9999735344589853	WITHOUT_CLASSIFICATION	2.6465541014657558E-5	DEFECT
// off -> next of '}'	WITHOUT_CLASSIFICATION	0.9999511002821175	WITHOUT_CLASSIFICATION	4.889971788258323E-5	DEFECT
// \ + c // backsolidus // POSIX Character class such as [:alnum:]	WITHOUT_CLASSIFICATION	0.9999766741074009	WITHOUT_CLASSIFICATION	2.3325892599063897E-5	DEFECT
//tok.dumpRanges();	WITHOUT_CLASSIFICATION	0.9999464134134436	WITHOUT_CLASSIFICATION	5.35865865565193E-5	DEFECT
// Skips ']'	WITHOUT_CLASSIFICATION	0.999968500621409	WITHOUT_CLASSIFICATION	3.1499378591065444E-5	DEFECT
// ESCAPE U+001B // FORM FEED U+000C // LINE FEED U+000A // CRRIAGE RETURN U+000D // HORIZONTAL TABULATION U+0009 //case 'v':  c = 0x0b;  break; // VERTICAL TABULATION U+000B	WITHOUT_CLASSIFICATION	0.999866261408928	WITHOUT_CLASSIFICATION	1.3373859107200704E-4	DEFECT
// for CLOSURE	WITHOUT_CLASSIFICATION	0.9999826752237908	WITHOUT_CLASSIFICATION	1.73247762091521E-5	DEFECT
// for STRING	WITHOUT_CLASSIFICATION	0.9999523766599674	WITHOUT_CLASSIFICATION	4.762334003260651E-5	DEFECT
// ****	WITHOUT_CLASSIFICATION	0.999936987731616	WITHOUT_CLASSIFICATION	6.301226838397752E-5	DEFECT
/*                  result.addRange(0, RegularExpression.LINE_FEED-1);                  result.addRange(RegularExpression.LINE_FEED+1, RegularExpression.CARRIAGE_RETURN-1);                  result.addRange(RegularExpression.CARRIAGE_RETURN+1,                                  RegularExpression.LINE_SEPARATOR-1);                  result.addRange(RegularExpression.PARAGRAPH_SEPARATOR+1, UTF16_MAX);                  return 1;                  */	WITHOUT_CLASSIFICATION	0.9999994774593117	WITHOUT_CLASSIFICATION	5.225406883389388E-7	DEFECT
// ------------------------------------------------------	WITHOUT_CLASSIFICATION	0.999880241477873	WITHOUT_CLASSIFICATION	1.1975852212700191E-4	DEFECT
// ------------------------------------------------------	WITHOUT_CLASSIFICATION	0.999880241477873	WITHOUT_CLASSIFICATION	1.1975852212700191E-4	DEFECT
// 28 // 29, 30 // 31-37	WITHOUT_CLASSIFICATION	0.9999748740598204	WITHOUT_CLASSIFICATION	2.512594017947048E-5	DEFECT
// Schema Rec. {Datatypes} - Punctuation  // Pi - initial quote // Pf - final quote	WITHOUT_CLASSIFICATION	0.999948883086795	WITHOUT_CLASSIFICATION	5.1116913205035974E-5	DEFECT
/*0590..05FF;*/	WITHOUT_CLASSIFICATION	0.9992841015523389	WITHOUT_CLASSIFICATION	7.158984476611027E-4	DEFECT
/*0A00..0A7F;*/	WITHOUT_CLASSIFICATION	0.9990461355593314	WITHOUT_CLASSIFICATION	9.538644406685785E-4	DEFECT
/*0D00..0D7F;*/	WITHOUT_CLASSIFICATION	0.9986724813579436	WITHOUT_CLASSIFICATION	0.0013275186420564208	DEFECT
/*10A0..10FF;*/	WITHOUT_CLASSIFICATION	0.999025307986845	WITHOUT_CLASSIFICATION	9.746920131549928E-4	DEFECT
/*16A0..16FF;*/	WITHOUT_CLASSIFICATION	0.999373143337877	WITHOUT_CLASSIFICATION	6.268566621230228E-4	DEFECT
/*2000..206F;*/	WITHOUT_CLASSIFICATION	0.9992956277333482	WITHOUT_CLASSIFICATION	7.043722666517664E-4	DEFECT
/*2190..21FF;*/	WITHOUT_CLASSIFICATION	0.9993277029333704	WITHOUT_CLASSIFICATION	6.722970666296596E-4	DEFECT
/*2500..257F;*/	WITHOUT_CLASSIFICATION	0.9992480191997575	WITHOUT_CLASSIFICATION	7.519808002424747E-4	DEFECT
/*2FF0..2FFF;*/	WITHOUT_CLASSIFICATION	0.9991668508486986	WITHOUT_CLASSIFICATION	8.331491513013903E-4	DEFECT
/*3190..319F;*/	WITHOUT_CLASSIFICATION	0.9993540575311651	WITHOUT_CLASSIFICATION	6.459424688348362E-4	DEFECT
/*A000..A48F;*/	WITHOUT_CLASSIFICATION	0.9992431355730153	WITHOUT_CLASSIFICATION	7.568644269847258E-4	DEFECT
/*FB50..FDFF;*/	WITHOUT_CLASSIFICATION	0.9990050517487666	WITHOUT_CLASSIFICATION	9.949482512333525E-4	DEFECT
/*FF00..FFEF;*/	WITHOUT_CLASSIFICATION	0.9988142417723495	WITHOUT_CLASSIFICATION	0.001185758227650572	DEFECT
/*1D400..1D7FF;*/	WITHOUT_CLASSIFICATION	0.9990019467136545	WITHOUT_CLASSIFICATION	9.980532863455033E-4	DEFECT
//ADD THOSE MANUALLY //F0000..FFFFD; "Private Use", //100000..10FFFD; "Private Use" //FFF0..FFFD; "Specials", 	WITHOUT_CLASSIFICATION	0.9999849049961154	WITHOUT_CLASSIFICATION	1.509500388456963E-5	DEFECT
// ;DEVANAGARI SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;BENGALI SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;GURMUKHI SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;GUJARATI SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;ORIYA SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;TAMIL SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;TELUGU SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;KANNADA SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;MALAYALAM SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;THAI CHARACTER PHINTHU;Mn;9;ON;;;;;N;THAI VOWEL SIGN PHINTHU;;;; //;TIBETAN MARK HALANTA;Mn;9;ON;;;;;N;TIBETAN VIRAMA;;;;	WITHOUT_CLASSIFICATION	0.9999824488909943	WITHOUT_CLASSIFICATION	1.7551109005686895E-5	DEFECT
// Don't use 'cotinue' for this loop. // single-range | from-to-range | subtraction	WITHOUT_CLASSIFICATION	0.9999098784352084	WITHOUT_CLASSIFICATION	9.012156479161118E-5	DEFECT
// both prefix (if any) a localpart must be valid NCName	WITHOUT_CLASSIFICATION	0.999999918504707	WITHOUT_CLASSIFICATION	8.149529305018625E-8	DEFECT
// Empty.	WITHOUT_CLASSIFICATION	0.9998811898270171	WITHOUT_CLASSIFICATION	1.1881017298281428E-4	DEFECT
// Empty.	WITHOUT_CLASSIFICATION	0.9998811898270171	WITHOUT_CLASSIFICATION	1.1881017298281428E-4	DEFECT
// Empty.	WITHOUT_CLASSIFICATION	0.9998811898270171	WITHOUT_CLASSIFICATION	1.1881017298281428E-4	DEFECT
// Empty.	WITHOUT_CLASSIFICATION	0.9998811898270171	WITHOUT_CLASSIFICATION	1.1881017298281428E-4	DEFECT
/* * This class provides encode/decode for RFC 2045 Base64 as * defined by RFC 2045, N. Freed and N. Borenstein. * RFC 2045: Multipurpose Internet Mail Extensions (MIME) * Part One: Format of Internet Message Bodies. Reference * 1996 Available at: http://www.ietf.org/rfc/rfc2045.txt * This class is used by XML Schema binary format validation * * This implementation does not encode/decode streaming * data. You need the data that you will encode/decode * already on a byte array. * * @author Jeffrey Rodriguez * @author Sandy Gao */	WITHOUT_CLASSIFICATION	0.9998713890631581	WITHOUT_CLASSIFICATION	1.2861093684190413E-4	DEFECT
//if found "no data" just return null	WITHOUT_CLASSIFICATION	0.9999688183671581	WITHOUT_CLASSIFICATION	3.118163284181351E-5	DEFECT
/* * EncodingMap is a convenience class which handles conversions between  * IANA encoding names and Java encoding names, and vice versa. The * encoding names used in XML instance documents <strong>must</strong> * be the IANA encoding names specified or one of the aliases for those names * which IANA defines. * <p> * <TABLE BORDER="0" WIDTH="100%"> *  <TR> *      <TD WIDTH="33%"> *          <P ALIGN="CENTER"><B>Common Name</B> *      </TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER"><B>Use this name in XML files</B> *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER"><B>Name Type</B> *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER"><B>Xerces converts to this Java Encoder Name</B> *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">8 bit Unicode</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">UTF-8 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">UTF8 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin 1</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-1 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-1 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin 2</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-2 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-2 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin 3</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-3 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-3 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin 4</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-4 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-4 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin Cyrillic</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-5 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-5 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin Arabic</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-6 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-6 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin Greek</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-7 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-7 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin Hebrew</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-8 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-8 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin 5</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-9 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-9 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: US</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-us *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp037 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Canada</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-ca *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp037 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Netherlands</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-nl *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp037 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Denmark</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-dk *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp277 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Norway</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-no *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp277 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Finland</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-fi *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp278 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Sweden</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-se *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp278 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Italy</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-it *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp280 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Spain, Latin America</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-es *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp284 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Great Britain</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-gb *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp285 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: France</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-fr *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp297 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Arabic</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-ar1 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp420 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Hebrew</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-he *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp424 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Switzerland</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-ch *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp500 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Roece</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-roece *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp870 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Yugoslavia</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-yu *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp870 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Iceland</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-is *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp871 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Urdu</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-ar2 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp918 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">Chinese for PRC, mixed 1/2 byte</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">gb2312 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">GB2312 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">Extended Unix Code, packed for Japanese</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">euc-jp *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">eucjis *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">Japanese: iso-2022-jp</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">iso-2020-jp *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">JIS *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">Japanese: Shift JIS</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">Shift_JIS *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">SJIS *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">Chinese: Big5</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">Big5 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">Big5 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">Extended Unix Code, packed for Korean</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">euc-kr *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">iso2022kr *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">Cyrillic</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">koi8-r *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">koi8-r *      </TD> *  </TR> * </TABLE> *  * @author TAMURA Kent, IBM * @author Andy Clark, IBM */	WITHOUT_CLASSIFICATION	0.999998932047857	WITHOUT_CLASSIFICATION	1.067952143075738E-6	DEFECT
// // Static initialization //	WITHOUT_CLASSIFICATION	0.9999553252794166	WITHOUT_CLASSIFICATION	4.4674720583409036E-5	DEFECT
// // Static initialization //	WITHOUT_CLASSIFICATION	0.9999553252794166	WITHOUT_CLASSIFICATION	4.4674720583409036E-5	DEFECT
// add IANA to Java encoding mappings.	WITHOUT_CLASSIFICATION	0.9999790747401216	WITHOUT_CLASSIFICATION	2.092525987841385E-5	DEFECT
// support for 1047, as proposed to be added to the  // IANA registry in  // http://lists.w3.org/Archives/Public/ietf-charset/2002JulSep/0049.html	WITHOUT_CLASSIFICATION	0.9999962642574387	WITHOUT_CLASSIFICATION	3.7357425611453485E-6	DEFECT
// support for 1047, as proposed to be added to the  // IANA registry in  // http://lists.w3.org/Archives/Public/ietf-charset/2002JulSep/0049.html	WITHOUT_CLASSIFICATION	0.9999962642574387	WITHOUT_CLASSIFICATION	3.7357425611453485E-6	DEFECT
// <clinit>()	WITHOUT_CLASSIFICATION	0.9999874747579374	WITHOUT_CLASSIFICATION	1.2525242062751302E-5	DEFECT
// <clinit>()	WITHOUT_CLASSIFICATION	0.9999874747579374	WITHOUT_CLASSIFICATION	1.2525242062751302E-5	DEFECT
// putJava2IANAMapping(String,String)	WITHOUT_CLASSIFICATION	0.9999950572412398	WITHOUT_CLASSIFICATION	4.9427587602054655E-6	DEFECT
// getJava2IANAMapping(String):String	WITHOUT_CLASSIFICATION	0.9999911482891026	WITHOUT_CLASSIFICATION	8.851710897348416E-6	DEFECT
// removeJava2IANAMapping	WITHOUT_CLASSIFICATION	0.9999896543834242	WITHOUT_CLASSIFICATION	1.034561657573917E-5	DEFECT
// Add ASCII Letters	WITHOUT_CLASSIFICATION	0.9999914613093182	WITHOUT_CLASSIFICATION	8.538690681832145E-6	DEFECT
// Add Mark Characters	WITHOUT_CLASSIFICATION	0.9999976968778608	WITHOUT_CLASSIFICATION	2.3031221392006722E-6	DEFECT
// Add Userinfo Characters	WITHOUT_CLASSIFICATION	0.9999981640107413	WITHOUT_CLASSIFICATION	1.8359892587705093E-6	DEFECT
// just make a copy of the base if spec is empty	WITHOUT_CLASSIFICATION	0.9999856118482384	WITHOUT_CLASSIFICATION	1.4388151761559127E-5	DEFECT
// A standalone base is a valid URI according to spec	WITHOUT_CLASSIFICATION	0.9999746138381712	WITHOUT_CLASSIFICATION	2.5386161828829377E-5	DEFECT
// Two slashes means we may have authority, but definitely means we're either // matching net_path or abs_path. These two productions are ambiguous in that // every net_path (except those containing an IPv6Reference) is an abs_path.  // RFC 2396 resolves this ambiguity by applying a greedy left most matching rule.  // Try matching net_path first, and if that fails we don't have authority so  // then attempt to match abs_path. // // net_path = "//" authority [ abs_path ] // abs_path = "/"  path_segments	WITHOUT_CLASSIFICATION	0.9999534524673453	WITHOUT_CLASSIFICATION	4.654753265465321E-5	DEFECT
// Two slashes means we may have authority, but definitely means we're either // matching net_path or abs_path. These two productions are ambiguous in that // every net_path (except those containing an IPv6Reference) is an abs_path.  // RFC 2396 resolves this ambiguity by applying a greedy left most matching rule.  // Try matching net_path first, and if that fails we don't have authority so  // then attempt to match abs_path. // // net_path = "//" authority [ abs_path ] // abs_path = "/"  path_segments	WITHOUT_CLASSIFICATION	0.9999534524673453	WITHOUT_CLASSIFICATION	4.654753265465321E-5	DEFECT
// If we didn't find authority we need to back up. Attempt to // match against abs_path next.	WITHOUT_CLASSIFICATION	0.9999900788815751	WITHOUT_CLASSIFICATION	9.921118424964403E-6	DEFECT
// create message	WITHOUT_CLASSIFICATION	0.9999979995494417	WITHOUT_CLASSIFICATION	2.000450558230203E-6	DEFECT
// check to see if this is the current doc - RFC 2396 5.2 #2 // note that this is slightly different from the RFC spec in that // we don't include the check for query string being null // - this handles cases where the urispec is just a query // string or a fragment (e.g. "?y" or "#s") - // see <http://www.ics.uci.edu/~fielding/url/test1.html> which // identified this as a bug in the RFC	WITHOUT_CLASSIFICATION	0.9999655770533716	WITHOUT_CLASSIFICATION	3.442294662829463E-5	DEFECT
// check for scheme - RFC 2396 5.2 #3 // if we found a scheme, it means absolute URI, so we're done	WITHOUT_CLASSIFICATION	0.9999999109163307	WITHOUT_CLASSIFICATION	8.908366934692025E-8	DEFECT
// if we get to this point, we need to resolve relative path // RFC 2396 5.2 #6	WITHOUT_CLASSIFICATION	0.9999992428389989	WITHOUT_CLASSIFICATION	7.571610010665173E-7	DEFECT
// check for valid escape sequence	WITHOUT_CLASSIFICATION	0.9999963533521831	WITHOUT_CLASSIFICATION	3.6466478170787348E-6	DEFECT
// check for valid escape sequence	WITHOUT_CLASSIFICATION	0.9999963533521831	WITHOUT_CLASSIFICATION	3.6466478170787348E-6	DEFECT
// check for valid escape sequence	WITHOUT_CLASSIFICATION	0.9999963533521831	WITHOUT_CLASSIFICATION	3.6466478170787348E-6	DEFECT
// If the scheme specific part is opaque, it can contain '[' // and ']'. uric_no_slash wasn't modified by RFC 2732, which // I've interpreted as an error in the spec, since the  // production should be equivalent to (uric - '/'), and uric // contains '[' and ']'. - mrglavas	WITHOUT_CLASSIFICATION	0.99999999008196	WITHOUT_CLASSIFICATION	9.918040021043006E-9	DEFECT
// If the scheme specific part is opaque, it can contain '[' // and ']'. uric_no_slash wasn't modified by RFC 2732, which // I've interpreted as an error in the spec, since the  // production should be equivalent to (uric - '/'), and uric // contains '[' and ']'. - mrglavas	WITHOUT_CLASSIFICATION	0.99999999008196	WITHOUT_CLASSIFICATION	9.918040021043006E-9	DEFECT
// hostname      = *( domainlabel "." ) toplabel [ "." ] // domainlabel   = alphanum | alphanum *( alphanum | "-" ) alphanum // toplabel      = alpha | alpha *( alphanum | "-" ) alphanum	WITHOUT_CLASSIFICATION	0.9999986105651546	WITHOUT_CLASSIFICATION	1.3894348454096904E-6	DEFECT
// make sure that 1) we see only digits and dot separators, 2) that // any dot separator is preceded and followed by a digit and // 3) that we find 3 dots // // RFC 2732 amended RFC 2396 by replacing the definition  // of IPv4address with the one defined by RFC 2373. - mrglavas // // IPv4address = 1*3DIGIT "." 1*3DIGIT "." 1*3DIGIT "." 1*3DIGIT // // One to three digits must be in each segment.	WITHOUT_CLASSIFICATION	0.9999988636216518	WITHOUT_CLASSIFICATION	1.1363783482000252E-6	DEFECT
// make sure that 1) we see only digits and dot separators, 2) that // any dot separator is preceded and followed by a digit and // 3) that we find 3 dots // // RFC 2732 amended RFC 2396 by replacing the definition  // of IPv4address with the one defined by RFC 2373. - mrglavas // // IPv4address = 1*3DIGIT "." 1*3DIGIT "." 1*3DIGIT "." 1*3DIGIT // // One to three digits must be in each segment.	WITHOUT_CLASSIFICATION	0.9999988636216518	WITHOUT_CLASSIFICATION	1.1363783482000252E-6	DEFECT
// We've either reached the end of the string, the address ends in // an IPv4 address, or it is invalid. scanHexSequence has already  // made sure that we have the right number of bits. 	WITHOUT_CLASSIFICATION	0.9999599383061976	WITHOUT_CLASSIFICATION	4.006169380239081E-5	DEFECT
// This might be invalid or an IPv4address. If it's potentially an IPv4address, // backup to just after the last valid character that matches hexseq.	WITHOUT_CLASSIFICATION	0.9999928064854591	WITHOUT_CLASSIFICATION	7.193514540978798E-6	DEFECT
// Fill 2 of value (byte) 49 // Fill 26 of value (byte) -3 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999935319013092	WITHOUT_CLASSIFICATION	6.468098690652966E-6	DEFECT
// Fill 26 of value (byte) -3 // Fill 60 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999936948945779	WITHOUT_CLASSIFICATION	6.305105422051379E-6	DEFECT
// Fill 68 of value (byte) -19 // Fill 9 of value (byte) 33 // Fill 36 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 30 of value (byte) -19 // Fill 56 of value (byte) 33 // Fill 89 of value (byte) -19 // Fill 18 of value (byte) 33 // Fill 7 of value (byte) -19 // Fill 14 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 46 of value (byte) 33 // Fill 70 of value (byte) -87 // Fill 26 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 36 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999972640454865	WITHOUT_CLASSIFICATION	2.735954513414553E-6	DEFECT
// Fill 68 of value (byte) -19 // Fill 9 of value (byte) 33 // Fill 36 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 30 of value (byte) -19 // Fill 56 of value (byte) 33 // Fill 89 of value (byte) -19 // Fill 18 of value (byte) 33 // Fill 7 of value (byte) -19 // Fill 14 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 46 of value (byte) 33 // Fill 70 of value (byte) -87 // Fill 26 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 36 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999972640454865	WITHOUT_CLASSIFICATION	2.735954513414553E-6	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999855366612829	WITHOUT_CLASSIFICATION	1.4463338717115867E-5	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999855366612829	WITHOUT_CLASSIFICATION	1.4463338717115867E-5	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999855366612829	WITHOUT_CLASSIFICATION	1.4463338717115867E-5	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999855366612829	WITHOUT_CLASSIFICATION	1.4463338717115867E-5	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999855366612829	WITHOUT_CLASSIFICATION	1.4463338717115867E-5	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999855366612829	WITHOUT_CLASSIFICATION	1.4463338717115867E-5	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999855366612829	WITHOUT_CLASSIFICATION	1.4463338717115867E-5	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999855366612829	WITHOUT_CLASSIFICATION	1.4463338717115867E-5	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999855366612829	WITHOUT_CLASSIFICATION	1.4463338717115867E-5	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999855366612829	WITHOUT_CLASSIFICATION	1.4463338717115867E-5	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999855366612829	WITHOUT_CLASSIFICATION	1.4463338717115867E-5	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999855366612829	WITHOUT_CLASSIFICATION	1.4463338717115867E-5	DEFECT
// Fill 4 of value (byte) -87 // Fill 9 of value (byte) 33 // Fill 53 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 28 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 8 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 55 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999920513554581	WITHOUT_CLASSIFICATION	7.948644541871609E-6	DEFECT
// Fill 7 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 10 of value (byte) 33 // Fill 17 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999857111374985	WITHOUT_CLASSIFICATION	1.4288862501447302E-5	DEFECT
// Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999824224838983	WITHOUT_CLASSIFICATION	1.7577516101598024E-5	DEFECT
// Fill 11 of value (byte) 33 // Fill 27 of value (byte) -19 // Fill 5 of value (byte) 33 // Fill 3 of value (byte) -19 // Fill 46 of value (byte) 33 // Fill 26 of value (byte) -19 // Fill 5 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999940132969994	WITHOUT_CLASSIFICATION	5.986703000646705E-6	DEFECT
// Fill 4 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 519 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999941882599568	WITHOUT_CLASSIFICATION	5.811740043241533E-6	DEFECT
// Fill 16 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 4 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 10 of value (byte) -19 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 17 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999957047067419	WITHOUT_CLASSIFICATION	4.295293258085468E-6	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999982588287229	WITHOUT_CLASSIFICATION	1.741171277100934E-5	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999982588287229	WITHOUT_CLASSIFICATION	1.741171277100934E-5	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999982588287229	WITHOUT_CLASSIFICATION	1.741171277100934E-5	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999982588287229	WITHOUT_CLASSIFICATION	1.741171277100934E-5	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999867809944907	WITHOUT_CLASSIFICATION	1.321900550921762E-5	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999867809944907	WITHOUT_CLASSIFICATION	1.321900550921762E-5	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999867809944907	WITHOUT_CLASSIFICATION	1.321900550921762E-5	DEFECT
// Fill 5 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 17 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999866809858348	WITHOUT_CLASSIFICATION	1.3319014165132677E-5	DEFECT
// Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 4 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999893096378595	WITHOUT_CLASSIFICATION	1.06903621404542E-5	DEFECT
// }	WITHOUT_CLASSIFICATION	0.9998946261149056	WITHOUT_CLASSIFICATION	1.053738850943751E-4	DEFECT
// }	WITHOUT_CLASSIFICATION	0.9998946261149056	WITHOUT_CLASSIFICATION	1.053738850943751E-4	DEFECT
// }}	WITHOUT_CLASSIFICATION	0.9998942553401612	WITHOUT_CLASSIFICATION	1.0574465983873138E-4	DEFECT
// Fill 6 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87 // Fill 8 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999931471683737	WITHOUT_CLASSIFICATION	6.852831626283626E-6	DEFECT
// Fill 15 of value (byte) 33 // Fill 9 of value (byte) -87 // Fill 17 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999877421023966	WITHOUT_CLASSIFICATION	1.2257897603396083E-5	DEFECT
// Fill 10 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999864674021258	WITHOUT_CLASSIFICATION	1.3532597874153689E-5	DEFECT
// Fill 5 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 7 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999889720656467	WITHOUT_CLASSIFICATION	1.1027934353317E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.99987048956532	WITHOUT_CLASSIFICATION	1.2951043468007955E-4	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999960024026834	WITHOUT_CLASSIFICATION	3.997597316676026E-6	DEFECT
// cause a syntax error	WITHOUT_CLASSIFICATION	0.9999751562830024	WITHOUT_CLASSIFICATION	2.4843716997524997E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.99987048956532	WITHOUT_CLASSIFICATION	1.2951043468007955E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.99987048956532	WITHOUT_CLASSIFICATION	1.2951043468007955E-4	DEFECT
// Look for a likely plugin name. //	WITHOUT_CLASSIFICATION	0.9999949014892568	WITHOUT_CLASSIFICATION	5.098510743160453E-6	DEFECT
/*   * Returns the dynamic template path, an ordered list of URIs corresponding to locations under which to find   * templates.   */	WITHOUT_CLASSIFICATION	0.9999961519588997	WITHOUT_CLASSIFICATION	3.848041100309573E-6	DEFECT
/*   * Returns the base portion of the dynamic template path.   */	WITHOUT_CLASSIFICATION	0.9999851365091429	WITHOUT_CLASSIFICATION	1.4863490857116998E-5	DEFECT
// It's okay for there not be a precompiled template, so fail quietly.	WITHOUT_CLASSIFICATION	0.9999736408726154	WITHOUT_CLASSIFICATION	2.6359127384597275E-5	DEFECT
// Returns whether this class implements any of the given features.	WITHOUT_CLASSIFICATION	0.9999852782437944	WITHOUT_CLASSIFICATION	1.4721756205777705E-5	DEFECT
// GenTypedElement	WITHOUT_CLASSIFICATION	0.9999748997212269	WITHOUT_CLASSIFICATION	2.5100278773176147E-5	DEFECT
// GenTypeParameter	WITHOUT_CLASSIFICATION	0.9999983133634922	WITHOUT_CLASSIFICATION	1.6866365078597334E-6	DEFECT
//GenRuntimeVersion	WITHOUT_CLASSIFICATION	0.998908068142418	WITHOUT_CLASSIFICATION	0.0010919318575820511	DEFECT
//GenModelPackage	WITHOUT_CLASSIFICATION	0.9992662398257985	WITHOUT_CLASSIFICATION	7.33760174201409E-4	DEFECT
// String getPackageID();	WITHOUT_CLASSIFICATION	0.9999875484576228	WITHOUT_CLASSIFICATION	1.2451542377173223E-5	DEFECT
// getFirstFileExtension?	WITHOUT_CLASSIFICATION	0.9999954604910722	WITHOUT_CLASSIFICATION	4.5395089277458966E-6	DEFECT
// this returns either "attribute", "attribute list", "reference", or "reference list"	WITHOUT_CLASSIFICATION	0.9999939398808415	WITHOUT_CLASSIFICATION	6.060119158506868E-6	DEFECT
// add variable fragment to new declaration	WITHOUT_CLASSIFICATION	0.9999974002123129	WITHOUT_CLASSIFICATION	2.5997876871832767E-6	DEFECT
// Filtered for property keys to remove duplicates.	WITHOUT_CLASSIFICATION	0.9999628592501537	WITHOUT_CLASSIFICATION	3.714074984618987E-5	DEFECT
//GenModelFactory	WITHOUT_CLASSIFICATION	0.9994313308240332	WITHOUT_CLASSIFICATION	5.686691759667528E-4	DEFECT
// GenAnnotation	WITHOUT_CLASSIFICATION	0.9998480165107363	WITHOUT_CLASSIFICATION	1.5198348926379973E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.99987048956532	WITHOUT_CLASSIFICATION	1.2951043468007955E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.99987048956532	WITHOUT_CLASSIFICATION	1.2951043468007955E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9998766035828676	WITHOUT_CLASSIFICATION	1.2339641713245567E-4	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999960024026834	WITHOUT_CLASSIFICATION	3.997597316676026E-6	DEFECT
// add added super interfaces to the array	WITHOUT_CLASSIFICATION	0.9999968472626789	WITHOUT_CLASSIFICATION	3.1527373211728685E-6	DEFECT
// always returns original value	WITHOUT_CLASSIFICATION	0.9999959096388025	WITHOUT_CLASSIFICATION	4.0903611975357886E-6	DEFECT
// only 1 fragment left - revert the changes	WITHOUT_CLASSIFICATION	0.9999743735053007	WITHOUT_CLASSIFICATION	2.5626494699273894E-5	DEFECT
// split is performed	WITHOUT_CLASSIFICATION	0.9999951217889651	WITHOUT_CLASSIFICATION	4.878211034978775E-6	DEFECT
// name already contains ".*" - unset on demand property	WITHOUT_CLASSIFICATION	0.9999761504136905	WITHOUT_CLASSIFICATION	2.3849586309608612E-5	DEFECT
// not supported in JDOM	WITHOUT_CLASSIFICATION	0.9999318770485102	WITHOUT_CLASSIFICATION	6.812295148980931E-5	DEFECT
// not supported in JDOM    	WITHOUT_CLASSIFICATION	0.9999198763151473	WITHOUT_CLASSIFICATION	8.012368485266022E-5	DEFECT
//The shared instance.	WITHOUT_CLASSIFICATION	0.9999764597039926	WITHOUT_CLASSIFICATION	2.354029600725787E-5	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999976220319823	WITHOUT_CLASSIFICATION	2.3779680177053606E-6	DEFECT
// Empty extension to limit the effect of suppressing the deprecation warning.	WITHOUT_CLASSIFICATION	0.9999804352773098	WITHOUT_CLASSIFICATION	1.9564722690184596E-5	DEFECT
//GenAnnotationImpl	WITHOUT_CLASSIFICATION	0.9995701597879941	WITHOUT_CLASSIFICATION	4.2984021200584215E-4	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.9999933771872096	WITHOUT_CLASSIFICATION	6.622812790395057E-6	DEFECT
// Initialize simple dependencies	WITHOUT_CLASSIFICATION	0.9999991823946333	WITHOUT_CLASSIFICATION	8.176053668014476E-7	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.9999990592002509	WITHOUT_CLASSIFICATION	9.407997490422834E-7	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.99999732803041	WITHOUT_CLASSIFICATION	2.671969590056063E-6	DEFECT
// Mark meta-data to indicate it can't be changed	WITHOUT_CLASSIFICATION	0.9999930471702011	WITHOUT_CLASSIFICATION	6.95282979884545E-6	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.9999982092566939	WITHOUT_CLASSIFICATION	1.7907433059583226E-6	DEFECT
// Create enums	WITHOUT_CLASSIFICATION	0.9999951964941937	WITHOUT_CLASSIFICATION	4.803505806314458E-6	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.9999902001708177	WITHOUT_CLASSIFICATION	9.799829182323957E-6	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.9999995068117644	WITHOUT_CLASSIFICATION	4.93188235584206E-7	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.999998067601732	WITHOUT_CLASSIFICATION	1.932398267952577E-6	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.9999893124183389	WITHOUT_CLASSIFICATION	1.0687581661237084E-5	DEFECT
// Initialize enums and add enum literals	WITHOUT_CLASSIFICATION	0.9999976262966784	WITHOUT_CLASSIFICATION	2.3737033215822825E-6	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.9999954956836732	WITHOUT_CLASSIFICATION	4.5043163268436935E-6	DEFECT
//GenModelPackageImpl	WITHOUT_CLASSIFICATION	0.999659556678531	WITHOUT_CLASSIFICATION	3.4044332146909614E-4	DEFECT
// Does nothing	WITHOUT_CLASSIFICATION	0.9999822118625995	WITHOUT_CLASSIFICATION	1.7788137400497206E-5	DEFECT
// Create an import manager for this compilation unit	WITHOUT_CLASSIFICATION	0.9999619268369134	WITHOUT_CLASSIFICATION	3.807316308656318E-5	DEFECT
// Create a code formatter for this compilation unit, if needed	WITHOUT_CLASSIFICATION	0.9999906987753547	WITHOUT_CLASSIFICATION	9.301224645180988E-6	DEFECT
// InputStream contents = new ByteArrayInputStream(bytes);	WITHOUT_CLASSIFICATION	0.9999966436445139	WITHOUT_CLASSIFICATION	3.356355486127535E-6	DEFECT
// Clear the import manager	WITHOUT_CLASSIFICATION	0.9999977076933281	WITHOUT_CLASSIFICATION	2.2923066719560865E-6	DEFECT
//FB TBD different objects for ecore model!	WITHOUT_CLASSIFICATION	0.999627880289244	WITHOUT_CLASSIFICATION	3.721197107560757E-4	DEFECT
// BasicEMap.this.removeEntry(index, j);	WITHOUT_CLASSIFICATION	0.9999975697421064	WITHOUT_CLASSIFICATION	2.430257893621757E-6	DEFECT
//FB TBD different objects for ecore model!	WITHOUT_CLASSIFICATION	0.999627880289244	WITHOUT_CLASSIFICATION	3.721197107560757E-4	DEFECT
//(eType instanceof EDataType)	WITHOUT_CLASSIFICATION	0.9999646336383728	WITHOUT_CLASSIFICATION	3.536636162714458E-5	DEFECT
// order genPackages by putting firstGenPackage (if non-null) first	WITHOUT_CLASSIFICATION	0.9999961638647354	WITHOUT_CLASSIFICATION	3.836135264583848E-6	DEFECT
// generateColor();	WITHOUT_CLASSIFICATION	0.9999954810846983	WITHOUT_CLASSIFICATION	4.518915301777435E-6	DEFECT
// If the value is null, the key is a referenced object	WITHOUT_CLASSIFICATION	0.9999988983359471	WITHOUT_CLASSIFICATION	1.1016640528253061E-6	DEFECT
// If we've found thing with type parameters, search them for a match.	WITHOUT_CLASSIFICATION	0.999998975843353	WITHOUT_CLASSIFICATION	1.0241566470806048E-6	DEFECT
/*   * Set from {@link #isChildren children} if unset, and return value.   */	WITHOUT_CLASSIFICATION	0.9999993860050426	WITHOUT_CLASSIFICATION	6.139949574756395E-7	DEFECT
//  && eReverseFeature.isNavigable();	WITHOUT_CLASSIFICATION	0.9999968583635541	WITHOUT_CLASSIFICATION	3.1416364458846553E-6	DEFECT
//GenFeatureImpl	WITHOUT_CLASSIFICATION	0.99985910819392	WITHOUT_CLASSIFICATION	1.4089180607990758E-4	DEFECT
// Returns whether this class implements any of the given features.	WITHOUT_CLASSIFICATION	0.9999852782437944	WITHOUT_CLASSIFICATION	1.4721756205777705E-5	DEFECT
//GenEnumImpl	WITHOUT_CLASSIFICATION	0.999549653005128	WITHOUT_CLASSIFICATION	4.5034699487204007E-4	DEFECT
//GenModelFactoryImpl	WITHOUT_CLASSIFICATION	0.9996892492195614	WITHOUT_CLASSIFICATION	3.107507804386712E-4	DEFECT
// build mapping from classes to list of features that use them	WITHOUT_CLASSIFICATION	0.9999644092026656	WITHOUT_CLASSIFICATION	3.5590797334457515E-5	DEFECT
// scan feature lists for those with multiple elements and return them	WITHOUT_CLASSIFICATION	0.9999984207892092	WITHOUT_CLASSIFICATION	1.5792107907751156E-6	DEFECT
//data type	WITHOUT_CLASSIFICATION	0.9998445130049203	WITHOUT_CLASSIFICATION	1.554869950797108E-4	DEFECT
//GenTypeParameterImpl	WITHOUT_CLASSIFICATION	0.9999758289694118	WITHOUT_CLASSIFICATION	2.4171030588213744E-5	DEFECT
//GenTypedElementImpl	WITHOUT_CLASSIFICATION	0.999707441399918	WITHOUT_CLASSIFICATION	2.9255860008211464E-4	DEFECT
// escaped unicode form	WITHOUT_CLASSIFICATION	0.9999973479708479	WITHOUT_CLASSIFICATION	2.6520291521876246E-6	DEFECT
// EObject is handled by default case	WITHOUT_CLASSIFICATION	0.9999899581335165	WITHOUT_CLASSIFICATION	1.0041866483383705E-5	DEFECT
// Go through class super types to catch any from other packages	WITHOUT_CLASSIFICATION	0.999988671912403	WITHOUT_CLASSIFICATION	1.13280875970274E-5	DEFECT
// Go through class super types to catch constraints from other packages	WITHOUT_CLASSIFICATION	0.9999926276244697	WITHOUT_CLASSIFICATION	7.372375530256418E-6	DEFECT
// Create helpers to cache and supply information for unique naming	WITHOUT_CLASSIFICATION	0.9999887256568495	WITHOUT_CLASSIFICATION	1.127434315059442E-5	DEFECT
// Ignore this soft dependency when it's not satisfied.	WITHOUT_CLASSIFICATION	0.9997509802293695	WITHOUT_CLASSIFICATION	2.490197706305503E-4	DEFECT
// return getPrefixedName("EditPlugin");	WITHOUT_CLASSIFICATION	0.9999949380575148	WITHOUT_CLASSIFICATION	5.061942485217489E-6	DEFECT
// return getProviderPackageName() + "." + getEditPluginClassName();	WITHOUT_CLASSIFICATION	0.9999981915321623	WITHOUT_CLASSIFICATION	1.8084678376675283E-6	DEFECT
// return getPrefixedName("EditorPlugin");	WITHOUT_CLASSIFICATION	0.9999933299100346	WITHOUT_CLASSIFICATION	6.670089965447098E-6	DEFECT
// return getPresentationPackageName() + "." + getEditorPluginClassName();	WITHOUT_CLASSIFICATION	0.9999945629171807	WITHOUT_CLASSIFICATION	5.4370828192772775E-6	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9999957913813804	WITHOUT_CLASSIFICATION	4.20861861952217E-6	DEFECT
//TBD 	WITHOUT_CLASSIFICATION	0.9991739815652709	WITHOUT_CLASSIFICATION	8.260184347291581E-4	DEFECT
//TBD 	WITHOUT_CLASSIFICATION	0.9991739815652709	WITHOUT_CLASSIFICATION	8.260184347291581E-4	DEFECT
//GenPackageImpl	WITHOUT_CLASSIFICATION	0.9998111371463617	WITHOUT_CLASSIFICATION	1.8886285363832573E-4	DEFECT
// Don't care about plugin class; we can generate a model without one.	WITHOUT_CLASSIFICATION	0.9999928498619962	WITHOUT_CLASSIFICATION	7.150138003728588E-6	DEFECT
// genPackage can be a broken proxy	WITHOUT_CLASSIFICATION	0.9999540427681035	WITHOUT_CLASSIFICATION	4.595723189647704E-5	DEFECT
//   protected JETEmitter extendedItemProviderEmitter = null;	WITHOUT_CLASSIFICATION	0.9999876833178223	WITHOUT_CLASSIFICATION	1.2316682177698787E-5	DEFECT
//ItemProvider/newChildDescriptorsAttributeDelegatedFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999882867768846	WITHOUT_CLASSIFICATION	1.1713223115493902E-5	DEFECT
//GenModelImpl	WITHOUT_CLASSIFICATION	0.9994211278708541	WITHOUT_CLASSIFICATION	5.788721291458119E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9998766035828676	WITHOUT_CLASSIFICATION	1.2339641713245567E-4	DEFECT
// TODO	WITHOUT_CLASSIFICATION	0.9470773458882906	WITHOUT_CLASSIFICATION	0.052922654111709266	DEFECT
//ItemProvider/newChildDescriptorsReferenceFeature.override.javajetinc 	WITHOUT_CLASSIFICATION	0.9999905511964776	WITHOUT_CLASSIFICATION	9.448803522315926E-6	DEFECT
//ItemProvider/newChildDescriptorsAttributeFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999647982554905	WITHOUT_CLASSIFICATION	3.5201744509556053E-5	DEFECT
/**   * Calls <code>validateXXX</code> for the corresponding classifier of the model.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9999967932473037	WITHOUT_CLASSIFICATION	3.206752696340495E-6	DEFECT
//)	WITHOUT_CLASSIFICATION	0.9988643892079304	WITHOUT_CLASSIFICATION	0.0011356107920695794	DEFECT
// (	WITHOUT_CLASSIFICATION	0.9999164745481814	WITHOUT_CLASSIFICATION	8.352545181852817E-5	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9999994233633256	WITHOUT_CLASSIFICATION	5.766366744737383E-7	DEFECT
//GenModelSwitch	WITHOUT_CLASSIFICATION	0.9996599082013566	WITHOUT_CLASSIFICATION	3.400917986434077E-4	DEFECT
//GenModelAdapterFactory	WITHOUT_CLASSIFICATION	0.9996322351710325	WITHOUT_CLASSIFICATION	3.6776482896746566E-4	DEFECT
/**   * The switch that delegates to the <code>createXXX</code> methods.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9999957123146821	WITHOUT_CLASSIFICATION	4.28768531794884E-6	DEFECT
//GenModelValidator	WITHOUT_CLASSIFICATION	0.999414644569013	WITHOUT_CLASSIFICATION	5.853554309871072E-4	DEFECT
//ItemProvider/newChildDescriptorsReferenceDelegatedFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999892271897136	WITHOUT_CLASSIFICATION	1.077281028637332E-5	DEFECT
//ItemProvider/getText.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999344178779126	WITHOUT_CLASSIFICATION	6.558212208737501E-5	DEFECT
//ItemProvider/addPropertyDescriptor.override.javajetinc	WITHOUT_CLASSIFICATION	0.9998844630890047	WITHOUT_CLASSIFICATION	1.1553691099537014E-4	DEFECT
//ItemProvider/newChildDescriptorsAttributeDelegatedFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999882867768846	WITHOUT_CLASSIFICATION	1.1713223115493902E-5	DEFECT
//ItemProvider/newChildDescriptorsReferenceDelegatedFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999892271897136	WITHOUT_CLASSIFICATION	1.077281028637332E-5	DEFECT
//ItemProvider/newChildDescriptorsReferenceFeature.override.javajetinc 	WITHOUT_CLASSIFICATION	0.9999905511964776	WITHOUT_CLASSIFICATION	9.448803522315926E-6	DEFECT
//ItemProvider/newChildDescriptorsAttributeFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999647982554905	WITHOUT_CLASSIFICATION	3.5201744509556053E-5	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9999957913813804	WITHOUT_CLASSIFICATION	4.20861861952217E-6	DEFECT
// return eProperties;	WITHOUT_CLASSIFICATION	0.9999719997416602	WITHOUT_CLASSIFICATION	2.8000258339695457E-5	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9999957913813804	WITHOUT_CLASSIFICATION	4.20861861952217E-6	DEFECT
//Class/reflectiveDelegation.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999591278734602	WITHOUT_CLASSIFICATION	4.0872126539747306E-5	DEFECT
//Editor/addItemproviderFactories.override.javajetinc"	WITHOUT_CLASSIFICATION	0.9999545563953035	WITHOUT_CLASSIFICATION	4.544360469641106E-5	DEFECT
//ResourceFactoryClass/createResource.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999863757034777	WITHOUT_CLASSIFICATION	1.3624296522280675E-5	DEFECT
//Class/declaredFieldGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999919791984795	WITHOUT_CLASSIFICATION	8.020801520603735E-6	DEFECT
///////////////////////	WITHOUT_CLASSIFICATION	0.9990305024023458	WITHOUT_CLASSIFICATION	9.694975976541659E-4	DEFECT
///////////////////////	WITHOUT_CLASSIFICATION	0.9990305024023458	WITHOUT_CLASSIFICATION	9.694975976541659E-4	DEFECT
//volatile	WITHOUT_CLASSIFICATION	0.9995637448618482	WITHOUT_CLASSIFICATION	4.362551381517902E-4	DEFECT
//Class/getGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9999142708181054	WITHOUT_CLASSIFICATION	8.572918189462406E-5	DEFECT
//Class/getGenFeature.javadoc.override.javajetinc	WITHOUT_CLASSIFICATION	0.999977463457668	WITHOUT_CLASSIFICATION	2.2536542331965966E-5	DEFECT
//Class/getGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999760167099564	WITHOUT_CLASSIFICATION	2.3983290043613768E-5	DEFECT
//Class/getGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999676557275126	WITHOUT_CLASSIFICATION	3.2344272487403464E-5	DEFECT
//Class/basicGetGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9999316787754898	WITHOUT_CLASSIFICATION	6.83212245101858E-5	DEFECT
//Class/basicGetGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999742237555882	WITHOUT_CLASSIFICATION	2.5776244411804393E-5	DEFECT
//Class/basicGetGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.999980886937662	WITHOUT_CLASSIFICATION	1.9113062338105514E-5	DEFECT
//Class/basicSetGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9999466392889791	WITHOUT_CLASSIFICATION	5.3360711020818256E-5	DEFECT
//Class/basicSetGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.999979868248491	WITHOUT_CLASSIFICATION	2.0131751509014392E-5	DEFECT
//Class/basicSetGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999850723459178	WITHOUT_CLASSIFICATION	1.4927654082262268E-5	DEFECT
//Class/setGenFeature.javadoc.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999816124037224	WITHOUT_CLASSIFICATION	1.8387596277659225E-5	DEFECT
//Class/setGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9999302810453488	WITHOUT_CLASSIFICATION	6.97189546511565E-5	DEFECT
//Class/setGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999736102153781	WITHOUT_CLASSIFICATION	2.6389784621926896E-5	DEFECT
//Class/setGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999804319950375	WITHOUT_CLASSIFICATION	1.95680049625729E-5	DEFECT
//Class/basicUnsetGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9999556211377937	WITHOUT_CLASSIFICATION	4.437886220625506E-5	DEFECT
//Class/basicUnsetGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999874096459693	WITHOUT_CLASSIFICATION	1.259035403067486E-5	DEFECT
//Class.basicUnsetGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999889046991913	WITHOUT_CLASSIFICATION	1.1095300808641823E-5	DEFECT
//Class/unsetGenFeature.javadoc.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999848131856607	WITHOUT_CLASSIFICATION	1.5186814339397484E-5	DEFECT
//Class/unsetGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9999231743396897	WITHOUT_CLASSIFICATION	7.682566031034587E-5	DEFECT
//Class/unsetGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999782039309687	WITHOUT_CLASSIFICATION	2.1796069031354488E-5	DEFECT
//Class/unsetGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999838382508005	WITHOUT_CLASSIFICATION	1.6161749199595537E-5	DEFECT
//Class/isSetGenFeature.javadoc.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999840257891568	WITHOUT_CLASSIFICATION	1.5974210843220666E-5	DEFECT
//Class/isSetGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9999392328598157	WITHOUT_CLASSIFICATION	6.0767140184413424E-5	DEFECT
//Class/isSetGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999770738697947	WITHOUT_CLASSIFICATION	2.2926130205282012E-5	DEFECT
//Class/isSetGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999830003073397	WITHOUT_CLASSIFICATION	1.699969266034019E-5	DEFECT
//Class/genOperation.javadoc.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999601371775257	WITHOUT_CLASSIFICATION	3.986282247417602E-5	DEFECT
//Class/genOperation.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9999430424908807	WITHOUT_CLASSIFICATION	5.695750911920726E-5	DEFECT
//Class/implementedGenOperation.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999918481850578	WITHOUT_CLASSIFICATION	8.151814942152757E-6	DEFECT
//Class/eUnset.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999933851026503	WITHOUT_CLASSIFICATION	6.614897349688484E-6	DEFECT
//datatype	WITHOUT_CLASSIFICATION	0.999465801055654	WITHOUT_CLASSIFICATION	5.341989443460383E-4	DEFECT
//Class/eIsSet.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999864559484477	WITHOUT_CLASSIFICATION	1.3544051552391587E-5	DEFECT
//TestCase/getGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9999190917739419	WITHOUT_CLASSIFICATION	8.090822605812822E-5	DEFECT
//TestCase/getGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999693746769532	WITHOUT_CLASSIFICATION	3.0625323046801887E-5	DEFECT
//TestCase/getGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999772913216949	WITHOUT_CLASSIFICATION	2.2708678305093337E-5	DEFECT
//TestCase/setGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9999341921511559	WITHOUT_CLASSIFICATION	6.580784884412512E-5	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9998766035828676	WITHOUT_CLASSIFICATION	1.2339641713245567E-4	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9999957913813804	WITHOUT_CLASSIFICATION	4.20861861952217E-6	DEFECT
//TestCase/setGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999750906945669	WITHOUT_CLASSIFICATION	2.4909305433066976E-5	DEFECT
//TestCase/setGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.999981529776284	WITHOUT_CLASSIFICATION	1.8470223715979255E-5	DEFECT
//TestCase/unsetGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9999274946448615	WITHOUT_CLASSIFICATION	7.250535513852724E-5	DEFECT
//TestCase/unsetGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999794297005908	WITHOUT_CLASSIFICATION	2.0570299409134795E-5	DEFECT
//TestCase/unsetGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999847471617845	WITHOUT_CLASSIFICATION	1.5252838215396355E-5	DEFECT
//TestCase/isSetGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9999426501629415	WITHOUT_CLASSIFICATION	5.7349837058599575E-5	DEFECT
//TestCase/isSetGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999782922991209	WITHOUT_CLASSIFICATION	2.170770087900938E-5	DEFECT
//TestCase/implementedGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999978365174919	WITHOUT_CLASSIFICATION	2.1634825080413634E-6	DEFECT
//TestCase/genOperation.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9999462455669711	WITHOUT_CLASSIFICATION	5.3754433028833617E-5	DEFECT
//TestCase/implementedGenOperation.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999931068105964	WITHOUT_CLASSIFICATION	6.893189403586224E-6	DEFECT
//TestCase/implementedGenOperation.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999948893865829	WITHOUT_CLASSIFICATION	5.110613417146156E-6	DEFECT
/*   * Char buffer for HTML data   */	WITHOUT_CLASSIFICATION	0.9999860613685383	WITHOUT_CLASSIFICATION	1.3938631461659328E-5	DEFECT
// Match close.	WITHOUT_CLASSIFICATION	0.9999865087556957	WITHOUT_CLASSIFICATION	1.3491244304257588E-5	DEFECT
// Continue processing dynamically as normal.	WITHOUT_CLASSIFICATION	0.9999962632167194	WITHOUT_CLASSIFICATION	3.7367832805910667E-6	DEFECT
// Ignore because we'll rethrow the original exception eventually.	WITHOUT_CLASSIFICATION	0.9999452794132431	WITHOUT_CLASSIFICATION	5.4720586757054434E-5	DEFECT
// pure obfuscated genius!	WITHOUT_CLASSIFICATION	0.9999960297588701	WITHOUT_CLASSIFICATION	3.970241129857563E-6	DEFECT
// Read value until delimiter is found:	WITHOUT_CLASSIFICATION	0.9999963230805504	WITHOUT_CLASSIFICATION	3.6769194497246172E-6	DEFECT
// Take care of the quoting here.	WITHOUT_CLASSIFICATION	0.9973069822077689	WITHOUT_CLASSIFICATION	0.002693017792230974	DEFECT
// }	WITHOUT_CLASSIFICATION	0.9998946261149056	WITHOUT_CLASSIFICATION	1.053738850943751E-4	DEFECT
// (	WITHOUT_CLASSIFICATION	0.9999164745481814	WITHOUT_CLASSIFICATION	8.352545181852817E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.99987048956532	WITHOUT_CLASSIFICATION	1.2951043468007955E-4	DEFECT
// Close NCSA like attributes "->"	WITHOUT_CLASSIFICATION	0.9999975692829693	WITHOUT_CLASSIFICATION	2.4307170307745337E-6	DEFECT
// Close variable like attributes "%>"	WITHOUT_CLASSIFICATION	0.9999997034278293	WITHOUT_CLASSIFICATION	2.965721707021523E-7	DEFECT
// XMLesque Close tags	WITHOUT_CLASSIFICATION	0.999833459640013	WITHOUT_CLASSIFICATION	1.665403599870403E-4	DEFECT
// Reached EOF:	WITHOUT_CLASSIFICATION	0.999944485773767	WITHOUT_CLASSIFICATION	5.5514226232959006E-5	DEFECT
// Ignore the version	WITHOUT_CLASSIFICATION	0.9999597004000468	WITHOUT_CLASSIFICATION	4.02995999532002E-5	DEFECT
//dumpNodeContents(node);	WITHOUT_CLASSIFICATION	0.9998931455473338	WITHOUT_CLASSIFICATION	1.0685445266628437E-4	DEFECT
// dumpNodeContents(node);	WITHOUT_CLASSIFICATION	0.999992368997076	WITHOUT_CLASSIFICATION	7.631002923993184E-6	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999958457194256	WITHOUT_CLASSIFICATION	4.1542805744536186E-6	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999958457194256	WITHOUT_CLASSIFICATION	4.1542805744536186E-6	DEFECT
//)	WITHOUT_CLASSIFICATION	0.9988643892079304	WITHOUT_CLASSIFICATION	0.0011356107920695794	DEFECT
/////////////////////////////////  PULL  /////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9998656004304417	WITHOUT_CLASSIFICATION	1.343995695582906E-4	DEFECT
/*    // PULL Name    //    targetPackage.setName(sourcePackage.getName());*/	WITHOUT_CLASSIFICATION	0.9999998978422715	WITHOUT_CLASSIFICATION	1.0215772845914983E-7	DEFECT
/////////////////////////////////  PUSH  /////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9998923689851251	WITHOUT_CLASSIFICATION	1.0763101487478811E-4	DEFECT
/////////////////////////////////  SWEEP  /////////////////////////////////////	WITHOUT_CLASSIFICATION	0.999663925235332	WITHOUT_CLASSIFICATION	3.360747646679849E-4	DEFECT
/////////////////////////////////  SORT  /////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9997049951173029	WITHOUT_CLASSIFICATION	2.9500488269705615E-4	DEFECT
/////////////////////////////////  CLONE AND MAP  /////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9997813375448049	WITHOUT_CLASSIFICATION	2.18662455195161E-4	DEFECT
// System.err.println("Warning: Cannot clone '" + sourceNode.getContents() + "'");	WITHOUT_CLASSIFICATION	0.9999981182113814	WITHOUT_CLASSIFICATION	1.8817886185389013E-6	DEFECT
// apply target parent pattern first	WITHOUT_CLASSIFICATION	0.9999968748815046	WITHOUT_CLASSIFICATION	3.125118495439204E-6	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999958457194256	WITHOUT_CLASSIFICATION	4.1542805744536186E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.99987048956532	WITHOUT_CLASSIFICATION	1.2951043468007955E-4	DEFECT
/////////////////////////////////  HEADLESS INVOCATION  /////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9997455175226326	WITHOUT_CLASSIFICATION	2.5448247736743404E-4	DEFECT
// Ignore the exception.	WITHOUT_CLASSIFICATION	0.9999587716194995	WITHOUT_CLASSIFICATION	4.122838050048552E-5	DEFECT
// use new node from now on	WITHOUT_CLASSIFICATION	0.9998344509043571	WITHOUT_CLASSIFICATION	1.655490956429927E-4	DEFECT
// redo the markup since nodes changed now	WITHOUT_CLASSIFICATION	0.9999967371428304	WITHOUT_CLASSIFICATION	3.2628571696564434E-6	DEFECT
// super is called on converted node	WITHOUT_CLASSIFICATION	0.999993197728684	WITHOUT_CLASSIFICATION	6.80227131593408E-6	DEFECT
// Back up over the whitespace.	WITHOUT_CLASSIFICATION	0.9999977358083446	WITHOUT_CLASSIFICATION	2.2641916552763354E-6	DEFECT
// target method is NOT addSuperInterface	WITHOUT_CLASSIFICATION	0.9999989904047806	WITHOUT_CLASSIFICATION	1.009595219375003E-6	DEFECT
// if the parent is not in target, there is no point on checking the child	WITHOUT_CLASSIFICATION	0.9999608440243886	WITHOUT_CLASSIFICATION	3.915597561145495E-5	DEFECT
// by default nodes are marked up	WITHOUT_CLASSIFICATION	0.9999966354961937	WITHOUT_CLASSIFICATION	3.3645038063479304E-6	DEFECT
// ignore rules for nodes of different class	WITHOUT_CLASSIFICATION	0.9999758934515218	WITHOUT_CLASSIFICATION	2.410654847807343E-5	DEFECT
//)	WITHOUT_CLASSIFICATION	0.9988643892079304	WITHOUT_CLASSIFICATION	0.0011356107920695794	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999958457194256	WITHOUT_CLASSIFICATION	4.1542805744536186E-6	DEFECT
// use new node from now on	WITHOUT_CLASSIFICATION	0.9998344509043571	WITHOUT_CLASSIFICATION	1.655490956429927E-4	DEFECT
// redo the markup since nodes changed now	WITHOUT_CLASSIFICATION	0.9999967371428304	WITHOUT_CLASSIFICATION	3.2628571696564434E-6	DEFECT
// super is called on converted node	WITHOUT_CLASSIFICATION	0.999993197728684	WITHOUT_CLASSIFICATION	6.80227131593408E-6	DEFECT
// Command line execution methods	WITHOUT_CLASSIFICATION	0.9999978717671021	WITHOUT_CLASSIFICATION	2.1282328977916213E-6	DEFECT
// do not crash when control model is not set	WITHOUT_CLASSIFICATION	0.9999381669498897	WITHOUT_CLASSIFICATION	6.183305011034167E-5	DEFECT
// Subclasses may override this method	WITHOUT_CLASSIFICATION	0.9999959076488749	WITHOUT_CLASSIFICATION	4.092351124991298E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode#addChild(org.eclipse.emf.codegen.merge.java.facade.JNode)   */	WITHOUT_CLASSIFICATION	0.999999487067215	WITHOUT_CLASSIFICATION	5.129327849748863E-7	DEFECT
// Empty	WITHOUT_CLASSIFICATION	0.999909408276156	WITHOUT_CLASSIFICATION	9.05917238440131E-5	DEFECT
// Empty	WITHOUT_CLASSIFICATION	0.999909408276156	WITHOUT_CLASSIFICATION	9.05917238440131E-5	DEFECT
// Empty	WITHOUT_CLASSIFICATION	0.999909408276156	WITHOUT_CLASSIFICATION	9.05917238440131E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.99987048956532	WITHOUT_CLASSIFICATION	1.2951043468007955E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.99987048956532	WITHOUT_CLASSIFICATION	1.2951043468007955E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.99987048956532	WITHOUT_CLASSIFICATION	1.2951043468007955E-4	DEFECT
// Not instantiable	WITHOUT_CLASSIFICATION	0.9999950276580666	WITHOUT_CLASSIFICATION	4.972341933485781E-6	DEFECT
// replace or append	WITHOUT_CLASSIFICATION	0.9999804576034383	WITHOUT_CLASSIFICATION	1.9542396561638345E-5	DEFECT
// enable tracking for nodes that have string content	WITHOUT_CLASSIFICATION	0.9999618419500717	WITHOUT_CLASSIFICATION	3.815804992829191E-5	DEFECT
// enable tracking for commented out nodes	WITHOUT_CLASSIFICATION	0.9999976651083418	WITHOUT_CLASSIFICATION	2.334891658222393E-6	DEFECT
// apply header	WITHOUT_CLASSIFICATION	0.9999715393995814	WITHOUT_CLASSIFICATION	2.8460600418613677E-5	DEFECT
// skip whitespace, up to the end of the line	WITHOUT_CLASSIFICATION	0.9999940936382777	WITHOUT_CLASSIFICATION	5.906361722265253E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.99987048956532	WITHOUT_CLASSIFICATION	1.2951043468007955E-4	DEFECT
// this should never happen	WITHOUT_CLASSIFICATION	0.9998127288147235	WITHOUT_CLASSIFICATION	1.8727118527657683E-4	DEFECT
// revert all current edits for this node	WITHOUT_CLASSIFICATION	0.9999357907783792	WITHOUT_CLASSIFICATION	6.420922162067878E-5	DEFECT
// log the error, ignore the change and continue	WITHOUT_CLASSIFICATION	0.9999214897137265	WITHOUT_CLASSIFICATION	7.851028627357679E-5	DEFECT
// comment out all lines of the node itself, from firstLine to last line	WITHOUT_CLASSIFICATION	0.9999959761423023	WITHOUT_CLASSIFICATION	4.023857697690422E-6	DEFECT
// if there is anything after the node on the same line, insert line break	WITHOUT_CLASSIFICATION	0.9999818239255936	WITHOUT_CLASSIFICATION	1.817607440630356E-5	DEFECT
// reset text edits; since this node is processed successfully, there is no need to revert these changes	WITHOUT_CLASSIFICATION	0.9999982956530469	WITHOUT_CLASSIFICATION	1.7043469531842363E-6	DEFECT
// this line has been commented out, return next line number	WITHOUT_CLASSIFICATION	0.9999994427785939	WITHOUT_CLASSIFICATION	5.57221406153701E-7	DEFECT
// return the line number of the start of the node	WITHOUT_CLASSIFICATION	0.9999957071600802	WITHOUT_CLASSIFICATION	4.292839919657785E-6	DEFECT
// handle the case when there is a replace edit that covers these lines	WITHOUT_CLASSIFICATION	0.9999877944293999	WITHOUT_CLASSIFICATION	1.2205570600049743E-5	DEFECT
// skip all lines that replace edit covers	WITHOUT_CLASSIFICATION	0.9999947504074349	WITHOUT_CLASSIFICATION	5.249592565065372E-6	DEFECT
// should not happen, re-throw exception	WITHOUT_CLASSIFICATION	0.9981928613042366	WITHOUT_CLASSIFICATION	0.0018071386957633415	DEFECT
// make sure that dummy edit is not in the tree	WITHOUT_CLASSIFICATION	0.9998296621176268	WITHOUT_CLASSIFICATION	1.7033788237322552E-4	DEFECT
// assume length will grow by 10% (average line length is 20 characters)	WITHOUT_CLASSIFICATION	0.9999969165565531	WITHOUT_CLASSIFICATION	3.083443446960396E-6	DEFECT
// next position is checked as well	WITHOUT_CLASSIFICATION	0.9999942591132194	WITHOUT_CLASSIFICATION	5.740886780626648E-6	DEFECT
// char at currentPos is copied as well	WITHOUT_CLASSIFICATION	0.9999815707301517	WITHOUT_CLASSIFICATION	1.8429269848227537E-5	DEFECT
// lastPos, currentPos points at the next chars that will be copied later	WITHOUT_CLASSIFICATION	0.9999891141730703	WITHOUT_CLASSIFICATION	1.0885826929636635E-5	DEFECT
// copy last piece if any	WITHOUT_CLASSIFICATION	0.9999937417802847	WITHOUT_CLASSIFICATION	6.258219715337038E-6	DEFECT
// if needed, comment out a comma of the previous enum constant	WITHOUT_CLASSIFICATION	0.9999953160656418	WITHOUT_CLASSIFICATION	4.6839343581567185E-6	DEFECT
// if there is anything before the node on the same line, create line break and comment out the first line of the node	WITHOUT_CLASSIFICATION	0.9999609965771724	WITHOUT_CLASSIFICATION	3.900342282755229E-5	DEFECT
// there is only whitespace on this line - no need for line break	WITHOUT_CLASSIFICATION	0.999966749712391	WITHOUT_CLASSIFICATION	3.325028760908297E-5	DEFECT
// for enum constants, insert line break after the comma if there is anything after the comma	WITHOUT_CLASSIFICATION	0.9999794368079638	WITHOUT_CLASSIFICATION	2.056319203623695E-5	DEFECT
// if there is any content after the node on the same line, insert line break (to prevent commenting out extra content)	WITHOUT_CLASSIFICATION	0.9999976119875312	WITHOUT_CLASSIFICATION	2.3880124687310777E-6	DEFECT
// if previous node is not commented out, but all the following nodes are, comment out a comma (constant separator)	WITHOUT_CLASSIFICATION	0.9999961856795987	WITHOUT_CLASSIFICATION	3.8143204013921833E-6	DEFECT
// if previous node is not commented out, but all following are	WITHOUT_CLASSIFICATION	0.9999697735070135	WITHOUT_CLASSIFICATION	3.0226492986483194E-5	DEFECT
// insert new line at the end of previous constant	WITHOUT_CLASSIFICATION	0.9999880432142971	WITHOUT_CLASSIFICATION	1.1956785702982761E-5	DEFECT
// if comma is on a line by itself, comment it out but do not insert the line break	WITHOUT_CLASSIFICATION	0.9999722104661067	WITHOUT_CLASSIFICATION	2.778953389329568E-5	DEFECT
// delete variable fragment from old declaration	WITHOUT_CLASSIFICATION	0.9999987001134155	WITHOUT_CLASSIFICATION	1.299886584386085E-6	DEFECT
// do not insert line break if there is only whitespace after comma	WITHOUT_CLASSIFICATION	0.9999608762157861	WITHOUT_CLASSIFICATION	3.912378421396493E-5	DEFECT
// there is only whitespace after enum constant on the same line - do not add line breaks	WITHOUT_CLASSIFICATION	0.9997317001455697	WITHOUT_CLASSIFICATION	2.6829985443030526E-4	DEFECT
//listRewrite.remove((ASTNode)modifier, null);	WITHOUT_CLASSIFICATION	0.9999926584657272	WITHOUT_CLASSIFICATION	7.3415342728437225E-6	DEFECT
// add added super interfaces to the array	WITHOUT_CLASSIFICATION	0.9999968472626789	WITHOUT_CLASSIFICATION	3.1527373211728685E-6	DEFECT
// this could be method body, for example	WITHOUT_CLASSIFICATION	0.9999920821939513	WITHOUT_CLASSIFICATION	7.917806048719804E-6	DEFECT
// for field declarations use variable declaration fragments instead	WITHOUT_CLASSIFICATION	0.9999997453362381	WITHOUT_CLASSIFICATION	2.5466376177545757E-7	DEFECT
// for all nodes but some use default extended range	WITHOUT_CLASSIFICATION	0.9999984967311243	WITHOUT_CLASSIFICATION	1.503268875709379E-6	DEFECT
// remove all existing modifiers	WITHOUT_CLASSIFICATION	0.9999965526582775	WITHOUT_CLASSIFICATION	3.447341722657318E-6	DEFECT
// Fill 4 of value (byte) -87 // Fill 7 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 9 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 18 of value (byte) 33 // Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999927750890775	WITHOUT_CLASSIFICATION	7.224910922486042E-6	DEFECT
// append extra dimensions if any	WITHOUT_CLASSIFICATION	0.9999965626482583	WITHOUT_CLASSIFICATION	3.4373517417275052E-6	DEFECT
// Fill 4 of value (byte) -87 // Fill 7 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 9 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 18 of value (byte) 33 // Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999927750890775	WITHOUT_CLASSIFICATION	7.224910922486042E-6	DEFECT
// create new modifiers and add to rewrite	WITHOUT_CLASSIFICATION	0.9999942287249057	WITHOUT_CLASSIFICATION	5.771275094281155E-6	DEFECT
// parse	WITHOUT_CLASSIFICATION	0.9999916339507318	WITHOUT_CLASSIFICATION	8.366049268178142E-6	DEFECT
//	WITHOUT_CLASSIFICATION	0.9990358322674203	WITHOUT_CLASSIFICATION	9.641677325797974E-4	DEFECT
// specify the exact parent of annotations	WITHOUT_CLASSIFICATION	0.9999855111662541	WITHOUT_CLASSIFICATION	1.4488833745892993E-5	DEFECT
// set source	WITHOUT_CLASSIFICATION	0.999988236409725	WITHOUT_CLASSIFICATION	1.1763590275072052E-5	DEFECT
// create rewriter to record changes	WITHOUT_CLASSIFICATION	0.9999821866424313	WITHOUT_CLASSIFICATION	1.781335756858596E-5	DEFECT
// keep comments between nodes when removing or moving nodes	WITHOUT_CLASSIFICATION	0.9999911933708268	WITHOUT_CLASSIFICATION	8.806629173210026E-6	DEFECT
// set properties	WITHOUT_CLASSIFICATION	0.9999555288295258	WITHOUT_CLASSIFICATION	4.4471170474233554E-5	DEFECT
// create JNode and set properties	WITHOUT_CLASSIFICATION	0.9999880547130898	WITHOUT_CLASSIFICATION	1.1945286910204835E-5	DEFECT
// Set of options that we want to copy from the current definition        	WITHOUT_CLASSIFICATION	0.9999576766466608	WITHOUT_CLASSIFICATION	4.232335333915495E-5	DEFECT
// Set of options that we want to control	WITHOUT_CLASSIFICATION	0.9999953216030399	WITHOUT_CLASSIFICATION	4.678396960095936E-6	DEFECT
// separate fields with an empty line	WITHOUT_CLASSIFICATION	0.9999961422065101	WITHOUT_CLASSIFICATION	3.8577934898534815E-6	DEFECT
// make all enum constants to be on separate lines	WITHOUT_CLASSIFICATION	0.9999961375071822	WITHOUT_CLASSIFICATION	3.862492817801109E-6	DEFECT
// handle field declarations separately	WITHOUT_CLASSIFICATION	0.9999929571812285	WITHOUT_CLASSIFICATION	7.04281877153598E-6	DEFECT
// create new node and replace it all by original contents	WITHOUT_CLASSIFICATION	0.9999762176904714	WITHOUT_CLASSIFICATION	2.3782309528605838E-5	DEFECT
// set rewriter on the new node	WITHOUT_CLASSIFICATION	0.9998566283040998	WITHOUT_CLASSIFICATION	1.4337169590012232E-4	DEFECT
// if there are multiple variables in the same field declaration, create declaration with only 1 variable	WITHOUT_CLASSIFICATION	0.9999841339485698	WITHOUT_CLASSIFICATION	1.5866051430273597E-5	DEFECT
// rewriter is required for set methods	WITHOUT_CLASSIFICATION	0.9999635874870457	WITHOUT_CLASSIFICATION	3.641251295427428E-5	DEFECT
// set comment and initializer as strings	WITHOUT_CLASSIFICATION	0.9999962652645358	WITHOUT_CLASSIFICATION	3.734735464096923E-6	DEFECT
// set annotation contents	WITHOUT_CLASSIFICATION	0.9999583636704927	WITHOUT_CLASSIFICATION	4.163632950718507E-5	DEFECT
// skip nodes in hierarchy that can not be converted to JNode (i.e. VariableDeclarationFragment)	WITHOUT_CLASSIFICATION	0.9999986501844407	WITHOUT_CLASSIFICATION	1.349815559273987E-6	DEFECT
// get rewriter	WITHOUT_CLASSIFICATION	0.9999552423690975	WITHOUT_CLASSIFICATION	4.475763090249496E-5	DEFECT
// update the wrapped object map	WITHOUT_CLASSIFICATION	0.9999916313955394	WITHOUT_CLASSIFICATION	8.368604460691614E-6	DEFECT
// range to look for comments	WITHOUT_CLASSIFICATION	0.9999887556572197	WITHOUT_CLASSIFICATION	1.1244342780346463E-5	DEFECT
// get the end position of the range for the previous node	WITHOUT_CLASSIFICATION	0.9999378706887339	WITHOUT_CLASSIFICATION	6.212931126621792E-5	DEFECT
//previousNode.getStartPosition() + previousNode.getLength();	WITHOUT_CLASSIFICATION	0.9999938405372881	WITHOUT_CLASSIFICATION	6.159462711858443E-6	DEFECT
// if there is an element with end position <= rangeEndPos	WITHOUT_CLASSIFICATION	0.9999896843842737	WITHOUT_CLASSIFICATION	1.0315615726214234E-5	DEFECT
// the previous element must have end position <= rangeEndPos	WITHOUT_CLASSIFICATION	0.9999906689277509	WITHOUT_CLASSIFICATION	9.331072249038423E-6	DEFECT
// else - there is a comment that ends exactly at rangeEndPos    	WITHOUT_CLASSIFICATION	0.9999861722808916	WITHOUT_CLASSIFICATION	1.3827719108411061E-5	DEFECT
// if there is a comment with start position > rangeStartPos	WITHOUT_CLASSIFICATION	0.9999914035152964	WITHOUT_CLASSIFICATION	8.596484703658207E-6	DEFECT
// else - there is a comment that starts exactly at rangeStartPos	WITHOUT_CLASSIFICATION	0.9999969665691854	WITHOUT_CLASSIFICATION	3.0334308146105462E-6	DEFECT
// find start position of farthest preceding comment	WITHOUT_CLASSIFICATION	0.9999711288218546	WITHOUT_CLASSIFICATION	2.887117814541812E-5	DEFECT
// check if there is just whitespace between position and start of the comment	WITHOUT_CLASSIFICATION	0.9999969378544663	WITHOUT_CLASSIFICATION	3.0621455337789783E-6	DEFECT
// extend to include the comment at the same line as the position 	WITHOUT_CLASSIFICATION	0.9999973068698783	WITHOUT_CLASSIFICATION	2.6931301217906417E-6	DEFECT
// extend range backward	WITHOUT_CLASSIFICATION	0.9999974866194327	WITHOUT_CLASSIFICATION	2.5133805673419174E-6	DEFECT
// extend range forward	WITHOUT_CLASSIFICATION	0.9999970217686701	WITHOUT_CLASSIFICATION	2.9782313299066596E-6	DEFECT
// add trailing whitespace	WITHOUT_CLASSIFICATION	0.9999979127066475	WITHOUT_CLASSIFICATION	2.0872933524620975E-6	DEFECT
// increments the position to add the white spaces	WITHOUT_CLASSIFICATION	0.9999921813659577	WITHOUT_CLASSIFICATION	7.81863404236023E-6	DEFECT
// for all nodes but some use default extended range	WITHOUT_CLASSIFICATION	0.9999984967311243	WITHOUT_CLASSIFICATION	1.503268875709379E-6	DEFECT
// include line comments following end of the nodes into the range	WITHOUT_CLASSIFICATION	0.9999964619901034	WITHOUT_CLASSIFICATION	3.538009896531067E-6	DEFECT
// add leading comments	WITHOUT_CLASSIFICATION	0.9999962880629111	WITHOUT_CLASSIFICATION	3.711937088901421E-6	DEFECT
// add trailing comments if necessary	WITHOUT_CLASSIFICATION	0.9999983842686623	WITHOUT_CLASSIFICATION	1.6157313377257369E-6	DEFECT
// insert new declaration before this one	WITHOUT_CLASSIFICATION	0.9999794096688156	WITHOUT_CLASSIFICATION	2.059033118436849E-5	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9998766035828676	WITHOUT_CLASSIFICATION	1.2339641713245567E-4	DEFECT
// append extra dimensions if any	WITHOUT_CLASSIFICATION	0.9999965626482583	WITHOUT_CLASSIFICATION	3.4373517417275052E-6	DEFECT
// default implementation does nothing	WITHOUT_CLASSIFICATION	0.9999929292152896	WITHOUT_CLASSIFICATION	7.070784710378547E-6	DEFECT
// disable commenting out	WITHOUT_CLASSIFICATION	0.9999971422547982	WITHOUT_CLASSIFICATION	2.857745201733003E-6	DEFECT
// enable commenting out	WITHOUT_CLASSIFICATION	0.999994903976755	WITHOUT_CLASSIFICATION	5.096023245039665E-6	DEFECT
// mark the node as moved if node has been removed      	WITHOUT_CLASSIFICATION	0.9999794865907428	WITHOUT_CLASSIFICATION	2.051340925721018E-5	DEFECT
// if are dealing with original, not cloned node	WITHOUT_CLASSIFICATION	0.999808174922739	WITHOUT_CLASSIFICATION	1.9182507726090784E-4	DEFECT
// mark the node to be removed	WITHOUT_CLASSIFICATION	0.9999856641330348	WITHOUT_CLASSIFICATION	1.4335866965214457E-5	DEFECT
// assume that the node is being moved (to allow insertion after)	WITHOUT_CLASSIFICATION	0.9999914684496678	WITHOUT_CLASSIFICATION	8.531550332160228E-6	DEFECT
// remove the node	WITHOUT_CLASSIFICATION	0.9999679689225276	WITHOUT_CLASSIFICATION	3.203107747244049E-5	DEFECT
// insert new values	WITHOUT_CLASSIFICATION	0.9999992848863786	WITHOUT_CLASSIFICATION	7.151136213556077E-7	DEFECT
// stringValue not null, nodeValue is null	WITHOUT_CLASSIFICATION	0.9999829265861577	WITHOUT_CLASSIFICATION	1.707341384225926E-5	DEFECT
// always returns original value	WITHOUT_CLASSIFICATION	0.9999959096388025	WITHOUT_CLASSIFICATION	4.0903611975357886E-6	DEFECT
// append extra dimensions since they are not stored in Type object	WITHOUT_CLASSIFICATION	0.9999981080902556	WITHOUT_CLASSIFICATION	1.8919097443876142E-6	DEFECT
// create map of field names to fields	WITHOUT_CLASSIFICATION	0.9999978639748822	WITHOUT_CLASSIFICATION	2.136025117870094E-6	DEFECT
// move all children to the enum, converting some fields to constants	WITHOUT_CLASSIFICATION	0.9999814917449668	WITHOUT_CLASSIFICATION	1.8508255033268216E-5	DEFECT
// remove type, insert enum	WITHOUT_CLASSIFICATION	0.9999914937799037	WITHOUT_CLASSIFICATION	8.506220096373316E-6	DEFECT
// convert only public static final fields	WITHOUT_CLASSIFICATION	0.9999563014422953	WITHOUT_CLASSIFICATION	4.369855770479053E-5	DEFECT
// convert only fields of the same type as parent	WITHOUT_CLASSIFICATION	0.9999783427286799	WITHOUT_CLASSIFICATION	2.165727132001433E-5	DEFECT
// set arguments and body	WITHOUT_CLASSIFICATION	0.9999753320034992	WITHOUT_CLASSIFICATION	2.466799650072631E-5	DEFECT
// move annotations	WITHOUT_CLASSIFICATION	0.999997746612232	WITHOUT_CLASSIFICATION	2.253387768084209E-6	DEFECT
// unable to set arguments or body	WITHOUT_CLASSIFICATION	0.9999683024294898	WITHOUT_CLASSIFICATION	3.1697570510319594E-5	DEFECT
// update the wrapped object	WITHOUT_CLASSIFICATION	0.9999924505000105	WITHOUT_CLASSIFICATION	7.5494999895350616E-6	DEFECT
// move annotations	WITHOUT_CLASSIFICATION	0.999997746612232	WITHOUT_CLASSIFICATION	2.253387768084209E-6	DEFECT
// convert enum constants and add to list of converted constants	WITHOUT_CLASSIFICATION	0.9999927308499378	WITHOUT_CLASSIFICATION	7.2691500621615556E-6	DEFECT
// move the node	WITHOUT_CLASSIFICATION	0.9999795143748482	WITHOUT_CLASSIFICATION	2.0485625151858836E-5	DEFECT
// insert nodeToInsert after targetNode	WITHOUT_CLASSIFICATION	0.9999957262532146	WITHOUT_CLASSIFICATION	4.273746785372726E-6	DEFECT
// replace type by enum	WITHOUT_CLASSIFICATION	0.9999952185391804	WITHOUT_CLASSIFICATION	4.78146081966951E-6	DEFECT
// create field declaration with 1 variable declaration fragment	WITHOUT_CLASSIFICATION	0.9999977134552145	WITHOUT_CLASSIFICATION	2.2865447854780245E-6	DEFECT
// set the type to create	WITHOUT_CLASSIFICATION	0.9999860118079665	WITHOUT_CLASSIFICATION	1.398819203347767E-5	DEFECT
// set arguments	WITHOUT_CLASSIFICATION	0.9999887715877845	WITHOUT_CLASSIFICATION	1.1228412215472558E-5	DEFECT
// replace some arguments by another field names (constants)	WITHOUT_CLASSIFICATION	0.9999967602401233	WITHOUT_CLASSIFICATION	3.2397598767840607E-6	DEFECT
// update last field that is used	WITHOUT_CLASSIFICATION	0.9999982292191574	WITHOUT_CLASSIFICATION	1.770780842593491E-6	DEFECT
// set the arguments to the constructor	WITHOUT_CLASSIFICATION	0.9999921922896892	WITHOUT_CLASSIFICATION	7.807710310802459E-6	DEFECT
// set the body	WITHOUT_CLASSIFICATION	0.9998798097957304	WITHOUT_CLASSIFICATION	1.2019020426961797E-4	DEFECT
// set the whole initializer	WITHOUT_CLASSIFICATION	0.9999954245773311	WITHOUT_CLASSIFICATION	4.575422668823062E-6	DEFECT
// return the whole declaration contents (not just variableDeclarationFragment)	WITHOUT_CLASSIFICATION	0.9999996505006156	WITHOUT_CLASSIFICATION	3.494993844135865E-7	DEFECT
// check number of fragments	WITHOUT_CLASSIFICATION	0.9999945631709677	WITHOUT_CLASSIFICATION	5.436829032250224E-6	DEFECT
// create a copy of declaration	WITHOUT_CLASSIFICATION	0.9999110825459301	WITHOUT_CLASSIFICATION	8.891745406993216E-5	DEFECT
// new declaration will not have fragments until performSplit() is called	WITHOUT_CLASSIFICATION	0.9999661159155312	WITHOUT_CLASSIFICATION	3.388408446876164E-5	DEFECT
// set rewritten node to be the original	WITHOUT_CLASSIFICATION	0.9999258398806922	WITHOUT_CLASSIFICATION	7.416011930779243E-5	DEFECT
// perform split if there is more than 1 fragment	WITHOUT_CLASSIFICATION	0.999994997785257	WITHOUT_CLASSIFICATION	5.002214743021421E-6	DEFECT
// set javadoc	WITHOUT_CLASSIFICATION	0.999991980949943	WITHOUT_CLASSIFICATION	8.019050057029274E-6	DEFECT
// set initializer	WITHOUT_CLASSIFICATION	0.9999958251971067	WITHOUT_CLASSIFICATION	4.174802893275821E-6	DEFECT
// set annotations contents	WITHOUT_CLASSIFICATION	0.9999713327146083	WITHOUT_CLASSIFICATION	2.866728539172506E-5	DEFECT
// }	WITHOUT_CLASSIFICATION	0.9998946261149056	WITHOUT_CLASSIFICATION	1.053738850943751E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.99987048956532	WITHOUT_CLASSIFICATION	1.2951043468007955E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.99987048956532	WITHOUT_CLASSIFICATION	1.2951043468007955E-4	DEFECT
// }	WITHOUT_CLASSIFICATION	0.9998946261149056	WITHOUT_CLASSIFICATION	1.053738850943751E-4	DEFECT
// generateColor();	WITHOUT_CLASSIFICATION	0.9999954810846983	WITHOUT_CLASSIFICATION	4.518915301777435E-6	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999958457194256	WITHOUT_CLASSIFICATION	4.1542805744536186E-6	DEFECT
// container specification group	WITHOUT_CLASSIFICATION	0.9998282937151859	WITHOUT_CLASSIFICATION	1.7170628481413334E-4	DEFECT
// New Template Container Label	WITHOUT_CLASSIFICATION	0.9999958865350875	WITHOUT_CLASSIFICATION	4.113464912460282E-6	DEFECT
// New Template Container Label	WITHOUT_CLASSIFICATION	0.9999958865350875	WITHOUT_CLASSIFICATION	4.113464912460282E-6	DEFECT
// New Template Container Entryfield	WITHOUT_CLASSIFICATION	0.999987803902006	WITHOUT_CLASSIFICATION	1.219609799393062E-5	DEFECT
// jetNature.setTemplateContainers(newTemplateContainers);	WITHOUT_CLASSIFICATION	0.999997622740111	WITHOUT_CLASSIFICATION	2.3772598890270735E-6	DEFECT
// jetNature.setJavaSourceContainer(newJavaSourceContainer);	WITHOUT_CLASSIFICATION	0.9999992449904894	WITHOUT_CLASSIFICATION	7.550095106872649E-7	DEFECT
// will point at the character after 0 to 3 octal digits	WITHOUT_CLASSIFICATION	0.9999886417840675	WITHOUT_CLASSIFICATION	1.1358215932508463E-5	DEFECT
/*   * @since 2.4   */	WITHOUT_CLASSIFICATION	0.9999947743518794	WITHOUT_CLASSIFICATION	5.225648120547592E-6	DEFECT
// the for loop's condition finds the separator 	WITHOUT_CLASSIFICATION	0.9999824447349507	WITHOUT_CLASSIFICATION	1.755526504937678E-5	DEFECT
// Assume that we aren't running.	WITHOUT_CLASSIFICATION	0.9999864693652726	WITHOUT_CLASSIFICATION	1.3530634727399239E-5	DEFECT
// Assume that it's not available.	WITHOUT_CLASSIFICATION	0.9999799774952006	WITHOUT_CLASSIFICATION	2.0022504799344682E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.99999783982728	WITHOUT_CLASSIFICATION	2.1601727201388865E-6	DEFECT
/*     * Javadoc copied from interface.     */	WITHOUT_CLASSIFICATION	0.9999978412168123	WITHOUT_CLASSIFICATION	2.1587831875666037E-6	DEFECT
/*     * Javadoc copied from interface.     */	WITHOUT_CLASSIFICATION	0.9999978412168123	WITHOUT_CLASSIFICATION	2.1587831875666037E-6	DEFECT
// System.err.println("Logged throwable: --------------------"); // throwable.printStackTrace();	WITHOUT_CLASSIFICATION	0.999988905869377	WITHOUT_CLASSIFICATION	1.1094130623008301E-5	DEFECT
// System.err.println("Logged throwable: --------------------"); // throwable.printStackTrace();	WITHOUT_CLASSIFICATION	0.999988905869377	WITHOUT_CLASSIFICATION	1.1094130623008301E-5	DEFECT
// Trim off the segments corresponding to the package nesting. //	WITHOUT_CLASSIFICATION	0.9997390486882937	WITHOUT_CLASSIFICATION	2.6095131170627336E-4	DEFECT
// For an archive URI, check for the path in the archive. //	WITHOUT_CLASSIFICATION	0.9999909282595492	WITHOUT_CLASSIFICATION	9.071740450918892E-6	DEFECT
// Just print an error message.	WITHOUT_CLASSIFICATION	0.9999959973121493	WITHOUT_CLASSIFICATION	4.002687850681251E-6	DEFECT
// Assume the class is not available.	WITHOUT_CLASSIFICATION	0.9999549204627475	WITHOUT_CLASSIFICATION	4.507953725257511E-5	DEFECT
// Just return the default.	WITHOUT_CLASSIFICATION	0.9999980028387151	WITHOUT_CLASSIFICATION	1.997161284885396E-6	DEFECT
// Ignore the exception and return the original URI.	WITHOUT_CLASSIFICATION	0.999979464594759	WITHOUT_CLASSIFICATION	2.0535405241057246E-5	DEFECT
// Continue with the unresolved URI.	WITHOUT_CLASSIFICATION	0.9999612655893982	WITHOUT_CLASSIFICATION	3.873441060184654E-5	DEFECT
// Return the original URI.	WITHOUT_CLASSIFICATION	0.9999784904697273	WITHOUT_CLASSIFICATION	2.1509530272589094E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.99999783982728	WITHOUT_CLASSIFICATION	2.1601727201388865E-6	DEFECT
// If we can open  an input stream, then the path is there, and we have a good URL. //	WITHOUT_CLASSIFICATION	0.999997052968909	WITHOUT_CLASSIFICATION	2.9470310911654956E-6	DEFECT
// If we didn't find the path in the usual place nor in the archive... //	WITHOUT_CLASSIFICATION	0.9999943625340869	WITHOUT_CLASSIFICATION	5.637465913024243E-6	DEFECT
// Continue processing if the file doesn't exist so that we try create a new empty one.	WITHOUT_CLASSIFICATION	0.9999982592260965	WITHOUT_CLASSIFICATION	1.7407739035442625E-6	DEFECT
// This is just a marker interface.	WITHOUT_CLASSIFICATION	0.999962233790404	WITHOUT_CLASSIFICATION	3.776620959589317E-5	DEFECT
// This is just a marker interface.	WITHOUT_CLASSIFICATION	0.999962233790404	WITHOUT_CLASSIFICATION	3.776620959589317E-5	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999960024026834	WITHOUT_CLASSIFICATION	3.997597316676026E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.99999783982728	WITHOUT_CLASSIFICATION	2.1601727201388865E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.99999783982728	WITHOUT_CLASSIFICATION	2.1601727201388865E-6	DEFECT
/*   * @deprecated   */	WITHOUT_CLASSIFICATION	0.999996335163417	WITHOUT_CLASSIFICATION	3.664836582985041E-6	DEFECT
/*   * @deprecated   */	WITHOUT_CLASSIFICATION	0.999996335163417	WITHOUT_CLASSIFICATION	3.664836582985041E-6	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999960024026834	WITHOUT_CLASSIFICATION	3.997597316676026E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999106018941357	WITHOUT_CLASSIFICATION	8.939810586429974E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999106018941357	WITHOUT_CLASSIFICATION	8.939810586429974E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999106018941357	WITHOUT_CLASSIFICATION	8.939810586429974E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999106018941357	WITHOUT_CLASSIFICATION	8.939810586429974E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999106018941357	WITHOUT_CLASSIFICATION	8.939810586429974E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999106018941357	WITHOUT_CLASSIFICATION	8.939810586429974E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.99987048956532	WITHOUT_CLASSIFICATION	1.2951043468007955E-4	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999933122126892	WITHOUT_CLASSIFICATION	6.687787310920847E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.99999783982728	WITHOUT_CLASSIFICATION	2.1601727201388865E-6	DEFECT
// Create a title bar.	WITHOUT_CLASSIFICATION	0.9999983416391183	WITHOUT_CLASSIFICATION	1.6583608817526745E-6	DEFECT
// When the pane or any child gains focus, notify the workbench.	WITHOUT_CLASSIFICATION	0.9999466309063051	WITHOUT_CLASSIFICATION	5.336909369491722E-5	DEFECT
// Only do this once.	WITHOUT_CLASSIFICATION	0.9999292947999661	WITHOUT_CLASSIFICATION	7.070520003396298E-5	DEFECT
// Title.  	WITHOUT_CLASSIFICATION	0.9998054653709386	WITHOUT_CLASSIFICATION	1.9453462906139984E-4	DEFECT
// Action bar.	WITHOUT_CLASSIFICATION	0.9999628920892107	WITHOUT_CLASSIFICATION	3.710791078925346E-5	DEFECT
// System bar.  	WITHOUT_CLASSIFICATION	0.9999892358888902	WITHOUT_CLASSIFICATION	1.0764111109776042E-5	DEFECT
// Define gradient (blue to widget background color)	WITHOUT_CLASSIFICATION	0.999920957059202	WITHOUT_CLASSIFICATION	7.904294079791289E-5	DEFECT
// colorMap.put(CLR_GRAD_START, clr1);	WITHOUT_CLASSIFICATION	0.9999979589504445	WITHOUT_CLASSIFICATION	2.0410495554331882E-6	DEFECT
// colorMap.put(CLR_GRAD_START, clr1);	WITHOUT_CLASSIFICATION	0.9999979589504445	WITHOUT_CLASSIFICATION	2.0410495554331882E-6	DEFECT
// Preload.	WITHOUT_CLASSIFICATION	0.9999659519836009	WITHOUT_CLASSIFICATION	3.404801639916521E-5	DEFECT
// Preload.	WITHOUT_CLASSIFICATION	0.9999659519836009	WITHOUT_CLASSIFICATION	3.404801639916521E-5	DEFECT
// was the details button pressed?	WITHOUT_CLASSIFICATION	0.9999708712428005	WITHOUT_CLASSIFICATION	2.9128757199465143E-5	DEFECT
// create OK and Details buttons	WITHOUT_CLASSIFICATION	0.9999838320053572	WITHOUT_CLASSIFICATION	1.6167994642785574E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999106018941357	WITHOUT_CLASSIFICATION	8.939810586429974E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999106018941357	WITHOUT_CLASSIFICATION	8.939810586429974E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.99987048956532	WITHOUT_CLASSIFICATION	1.2951043468007955E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.99987048956532	WITHOUT_CLASSIFICATION	1.2951043468007955E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.99987048956532	WITHOUT_CLASSIFICATION	1.2951043468007955E-4	DEFECT
// Empty block	WITHOUT_CLASSIFICATION	0.9999132693492799	WITHOUT_CLASSIFICATION	8.673065072008904E-5	DEFECT
// Empty block	WITHOUT_CLASSIFICATION	0.9999132693492799	WITHOUT_CLASSIFICATION	8.673065072008904E-5	DEFECT
// Empty block	WITHOUT_CLASSIFICATION	0.9999132693492799	WITHOUT_CLASSIFICATION	8.673065072008904E-5	DEFECT
// create a composite with standard margins and spacing	WITHOUT_CLASSIFICATION	0.9999966643813508	WITHOUT_CLASSIFICATION	3.3356186491469226E-6	DEFECT
//Create a label if there are no children to force a smaller layout	WITHOUT_CLASSIFICATION	0.9999753077829139	WITHOUT_CLASSIFICATION	2.4692217086161262E-5	DEFECT
//If it was not a warning or an diagnostic then return the diagnostic image	WITHOUT_CLASSIFICATION	0.9999692569794548	WITHOUT_CLASSIFICATION	3.0743020545172206E-5	DEFECT
// Closing the detail area	WITHOUT_CLASSIFICATION	0.9999840051112643	WITHOUT_CLASSIFICATION	1.5994888735782646E-5	DEFECT
// Opening the detail area	WITHOUT_CLASSIFICATION	0.9999741584130161	WITHOUT_CLASSIFICATION	2.5841586983900026E-5	DEFECT
//Only one example per wizard	WITHOUT_CLASSIFICATION	0.9994951911289058	WITHOUT_CLASSIFICATION	5.048088710941687E-4	DEFECT
// null -> relative URI reference	WITHOUT_CLASSIFICATION	0.9999932672791002	WITHOUT_CLASSIFICATION	6.732720899760493E-6	DEFECT
// Applicable only to a hierarchical URI.	WITHOUT_CLASSIFICATION	0.9999953983334675	WITHOUT_CLASSIFICATION	4.601666532453849E-6	DEFECT
// empty last segment -> trailing separator	WITHOUT_CLASSIFICATION	0.9999964477782963	WITHOUT_CLASSIFICATION	3.552221703691976E-6	DEFECT
// Identifies a file-type absolute URI.	WITHOUT_CLASSIFICATION	0.9999992507089499	WITHOUT_CLASSIFICATION	7.492910500709264E-7	DEFECT
// Separators for parsing a URI string.	WITHOUT_CLASSIFICATION	0.9999928527071237	WITHOUT_CLASSIFICATION	7.147292876372244E-6	DEFECT
// Characters to use in escaping.	WITHOUT_CLASSIFICATION	0.9999975535799456	WITHOUT_CLASSIFICATION	2.446420054338352E-6	DEFECT
// | ucschar | escaped	WITHOUT_CLASSIFICATION	0.9999971607816922	WITHOUT_CLASSIFICATION	2.8392183077529165E-6	DEFECT
// Static initializer for archiveSchemes.	WITHOUT_CLASSIFICATION	0.999998160095856	WITHOUT_CLASSIFICATION	1.8399041440577867E-6	DEFECT
// Returns the lower half bitmask for the given ASCII character.	WITHOUT_CLASSIFICATION	0.9999978295285757	WITHOUT_CLASSIFICATION	2.170471424278999E-6	DEFECT
// Returns the upper half bitmask for the given ACSII character.	WITHOUT_CLASSIFICATION	0.9999992853094017	WITHOUT_CLASSIFICATION	7.146905983381581E-7	DEFECT
// Debugging method: converts the given long to a string of binary digits.	WITHOUT_CLASSIFICATION	0.997593014250391	WITHOUT_CLASSIFICATION	0.002406985749609003	DEFECT
// String-parsing implementation.	WITHOUT_CLASSIFICATION	0.9999873298199842	WITHOUT_CLASSIFICATION	1.2670180015769404E-5	DEFECT
// && uri.charAt(i) == FRAGMENT_SEPARATOR (implied)	WITHOUT_CLASSIFICATION	0.9999968283632463	WITHOUT_CLASSIFICATION	3.1716367536499564E-6	DEFECT
// Private constructor for use of platform factory methods.	WITHOUT_CLASSIFICATION	0.9999992060128701	WITHOUT_CLASSIFICATION	7.939871300052043E-7	DEFECT
// Private constructor for use of static factory methods.	WITHOUT_CLASSIFICATION	0.9999960449958165	WITHOUT_CLASSIFICATION	3.95500418343191E-6	DEFECT
//iri = iri || containsNonASCII(authority);	WITHOUT_CLASSIFICATION	0.9999733049824122	WITHOUT_CLASSIFICATION	2.669501758785768E-5	DEFECT
//iri = iri || containsNonASCII(device);	WITHOUT_CLASSIFICATION	0.9999911120430504	WITHOUT_CLASSIFICATION	8.887956949582974E-6	DEFECT
//iri = iri || containsNonASCII(query);	WITHOUT_CLASSIFICATION	0.9999570063765484	WITHOUT_CLASSIFICATION	4.299362345162714E-5	DEFECT
//iri = iri || containsNonASCII(fragment);	WITHOUT_CLASSIFICATION	0.9999907568841394	WITHOUT_CLASSIFICATION	9.243115860531687E-6	DEFECT
//this.iri = iri;	WITHOUT_CLASSIFICATION	0.999929048246732	WITHOUT_CLASSIFICATION	7.0951753267946E-5	DEFECT
//return value == null || validate(value, SEGMENT_CHAR_HI, SEGMENT_CHAR_LO, true, true);	WITHOUT_CLASSIFICATION	0.9999976262898523	WITHOUT_CLASSIFICATION	2.3737101476358955E-6	DEFECT
// Ignore the exception and return false.	WITHOUT_CLASSIFICATION	0.999984172817874	WITHOUT_CLASSIFICATION	1.582718212603202E-5	DEFECT
//return value != null && validate(value, SEGMENT_CHAR_HI, SEGMENT_CHAR_LO, true, true);	WITHOUT_CLASSIFICATION	0.9999955657261657	WITHOUT_CLASSIFICATION	4.434273834419522E-6	DEFECT
//return value == null || validate(value, URIC_HI, URIC_LO, true, true);	WITHOUT_CLASSIFICATION	0.9999986517033442	WITHOUT_CLASSIFICATION	1.3482966557599947E-6	DEFECT
// <p>A valid fragment may be null or contain any allowed URI characters.	WITHOUT_CLASSIFICATION	0.9999982776842203	WITHOUT_CLASSIFICATION	1.7223157796897995E-6	DEFECT
// note: hierarchical -> authority != null	WITHOUT_CLASSIFICATION	0.9999695939743103	WITHOUT_CLASSIFICATION	3.0406025689743535E-5	DEFECT
// note: device != null -> hierarchical	WITHOUT_CLASSIFICATION	0.999983499722155	WITHOUT_CLASSIFICATION	1.6500277845105692E-5	DEFECT
// note: absolutePath -> hierarchical	WITHOUT_CLASSIFICATION	0.9999910538468966	WITHOUT_CLASSIFICATION	8.946153103362154E-6	DEFECT
// note: query != null -> hierarchical	WITHOUT_CLASSIFICATION	0.9999023789198491	WITHOUT_CLASSIFICATION	9.762108015084189E-5	DEFECT
// an absolute URI needs no resolving	WITHOUT_CLASSIFICATION	0.999989400719238	WITHOUT_CLASSIFICATION	1.0599280761980345E-5	DEFECT
// note: isRelative() -> hierarchical	WITHOUT_CLASSIFICATION	0.9999983743605271	WITHOUT_CLASSIFICATION	1.6256394728800844E-6	DEFECT
// no authority: use base's	WITHOUT_CLASSIFICATION	0.9999737264727973	WITHOUT_CLASSIFICATION	2.6273527202721827E-5	DEFECT
// no device: use base's	WITHOUT_CLASSIFICATION	0.9999771126733544	WITHOUT_CLASSIFICATION	2.288732664546858E-5	DEFECT
// else keep device, path, and query	WITHOUT_CLASSIFICATION	0.9999988589228754	WITHOUT_CLASSIFICATION	1.1410771246371632E-6	DEFECT
// else absolute path: keep it and query	WITHOUT_CLASSIFICATION	0.9999768145206276	WITHOUT_CLASSIFICATION	2.318547937243807E-5	DEFECT
// else keep authority, device, path, and query	WITHOUT_CLASSIFICATION	0.9999986090785468	WITHOUT_CLASSIFICATION	1.3909214531491283E-6	DEFECT
// return a correctly sized result	WITHOUT_CLASSIFICATION	0.9999852776320698	WITHOUT_CLASSIFICATION	1.472236793019765E-5	DEFECT
// skip empty segments and self references; push everything else	WITHOUT_CLASSIFICATION	0.9999957443260126	WITHOUT_CLASSIFICATION	4.255673987375471E-6	DEFECT
// different scheme: need complete, absolute URI	WITHOUT_CLASSIFICATION	0.9999961815254907	WITHOUT_CLASSIFICATION	3.81847450917562E-6	DEFECT
// matching authorities and no device or path removal	WITHOUT_CLASSIFICATION	0.999998745644219	WITHOUT_CLASSIFICATION	1.2543557810724406E-6	DEFECT
// matching devices and no path removal	WITHOUT_CLASSIFICATION	0.9999989606867538	WITHOUT_CLASSIFICATION	1.0393132462568845E-6	DEFECT
// user rejects a relative path: keep absolute or no path	WITHOUT_CLASSIFICATION	0.9999932748223906	WITHOUT_CLASSIFICATION	6.7251776093039976E-6	DEFECT
// current document reference: keep no path or query	WITHOUT_CLASSIFICATION	0.9992957196569366	WITHOUT_CLASSIFICATION	7.042803430634192E-4	DEFECT
// no paths: keep query only	WITHOUT_CLASSIFICATION	0.9996949893434611	WITHOUT_CLASSIFICATION	3.050106565389006E-4	DEFECT
// keep query and select relative or absolute path based on length	WITHOUT_CLASSIFICATION	0.9999482448508294	WITHOUT_CLASSIFICATION	5.1755149170599547E-5	DEFECT
// user demands a relative path or the absolute path is longer	WITHOUT_CLASSIFICATION	0.9999942707999434	WITHOUT_CLASSIFICATION	5.729200056599827E-6	DEFECT
// else keep shorter absolute path	WITHOUT_CLASSIFICATION	0.9999961363662474	WITHOUT_CLASSIFICATION	3.863633752639394E-6	DEFECT
// treat an empty base path as the root absolute path	WITHOUT_CLASSIFICATION	0.9999598720219602	WITHOUT_CLASSIFICATION	4.012797803966625E-5	DEFECT
// drop last segment from base, as in resolving	WITHOUT_CLASSIFICATION	0.9999239760064613	WITHOUT_CLASSIFICATION	7.602399353873868E-5	DEFECT
// index of first segment that is different between endPath and startPath	WITHOUT_CLASSIFICATION	0.9999922952556994	WITHOUT_CLASSIFICATION	7.704744300621623E-6	DEFECT
// return a correctly sized result	WITHOUT_CLASSIFICATION	0.9999852776320698	WITHOUT_CLASSIFICATION	1.472236793019765E-5	DEFECT
// return a correctly sized result	WITHOUT_CLASSIFICATION	0.9999852776320698	WITHOUT_CLASSIFICATION	1.472236793019765E-5	DEFECT
// Empty statement.	WITHOUT_CLASSIFICATION	0.9999515135728168	WITHOUT_CLASSIFICATION	4.848642718334854E-5	DEFECT
// use a stack to accumulate segments	WITHOUT_CLASSIFICATION	0.9999633060653684	WITHOUT_CLASSIFICATION	3.669393463148957E-5	DEFECT
// absolute path or no path -> absolute path	WITHOUT_CLASSIFICATION	0.9999945065658582	WITHOUT_CLASSIFICATION	5.4934341417809E-6	DEFECT
// note: segments.length > 0 -> hierarchical	WITHOUT_CLASSIFICATION	0.9999925608360913	WITHOUT_CLASSIFICATION	7.439163908658456E-6	DEFECT
// note: segments.length > 0 -> hierarchical	WITHOUT_CLASSIFICATION	0.9999925608360913	WITHOUT_CLASSIFICATION	7.439163908658456E-6	DEFECT
// Get what's left of the segments after trimming the prefix.	WITHOUT_CLASSIFICATION	0.9999804696754934	WITHOUT_CLASSIFICATION	1.9530324506602946E-5	DEFECT
// no validation needed since all components are from existing URIs	WITHOUT_CLASSIFICATION	0.9999973332575721	WITHOUT_CLASSIFICATION	2.666742427962301E-6	DEFECT
// Otherwise, the path needs only the remaining segments.	WITHOUT_CLASSIFICATION	0.9998912749004987	WITHOUT_CLASSIFICATION	1.0872509950130317E-4	DEFECT
// Returns the int value of the given hex digit.	WITHOUT_CLASSIFICATION	0.9999945138013313	WITHOUT_CLASSIFICATION	5.486198668577814E-6	DEFECT
// Fill 6 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 62 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 6 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 11 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999910707532298	WITHOUT_CLASSIFICATION	8.929246770187714E-6	DEFECT
/*   * If this is an {@link #isIRI IRI}, converts it to a strict ASCII URI,   * using the procedure described in Section 3.1 of the   * <a href="http://www.w3.org/International/iri-edit/draft-duerst-iri-09.txt">IRI   * Draft RFC</a>.  Otherwise, this URI, itself, is returned.   *   * This unused code is included for possible future use...   */	WITHOUT_CLASSIFICATION	0.9999848786423681	WITHOUT_CLASSIFICATION	1.5121357631847063E-5	DEFECT
// Continue with the established base URL.	WITHOUT_CLASSIFICATION	0.9999918133915658	WITHOUT_CLASSIFICATION	8.186608434081547E-6	DEFECT
// Ignore the exception since we will throw one when all else fails.	WITHOUT_CLASSIFICATION	0.999531205028479	WITHOUT_CLASSIFICATION	4.6879497152106664E-4	DEFECT
// We'll rethrow the original exception, not this one.	WITHOUT_CLASSIFICATION	0.9997580758898345	WITHOUT_CLASSIFICATION	2.4192411016558935E-4	DEFECT
// Ignore this since we will throw an exception when all else fails.	WITHOUT_CLASSIFICATION	0.999316819819996	WITHOUT_CLASSIFICATION	6.831801800039346E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.99999783982728	WITHOUT_CLASSIFICATION	2.1601727201388865E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.99999783982728	WITHOUT_CLASSIFICATION	2.1601727201388865E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.99999783982728	WITHOUT_CLASSIFICATION	2.1601727201388865E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.99999783982728	WITHOUT_CLASSIFICATION	2.1601727201388865E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.99999783982728	WITHOUT_CLASSIFICATION	2.1601727201388865E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.99999783982728	WITHOUT_CLASSIFICATION	2.1601727201388865E-6	DEFECT
/*   * Javadoc copied from source.   */	WITHOUT_CLASSIFICATION	0.9999974451697908	WITHOUT_CLASSIFICATION	2.554830209284665E-6	DEFECT
// Suppress default constructor for noninstantiability.	WITHOUT_CLASSIFICATION	0.9999964110908071	WITHOUT_CLASSIFICATION	3.5889091927958776E-6	DEFECT
// Fill 6 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 62 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 6 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 11 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999910707532298	WITHOUT_CLASSIFICATION	8.929246770187714E-6	DEFECT
/*    * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999978412168123	WITHOUT_CLASSIFICATION	2.1587831875666037E-6	DEFECT
/*    * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999978412168123	WITHOUT_CLASSIFICATION	2.1587831875666037E-6	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999933122126892	WITHOUT_CLASSIFICATION	6.687787310920847E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9998766035828676	WITHOUT_CLASSIFICATION	1.2339641713245567E-4	DEFECT
//EParameter	WITHOUT_CLASSIFICATION	0.9999674941885239	WITHOUT_CLASSIFICATION	3.2505811476132344E-5	DEFECT
// Subclasses may overrride 	WITHOUT_CLASSIFICATION	0.9999931589042365	WITHOUT_CLASSIFICATION	6.841095763589224E-6	DEFECT
// WizardContainer variables	WITHOUT_CLASSIFICATION	0.9999994429511294	WITHOUT_CLASSIFICATION	5.570488706589269E-7	DEFECT
// Sorting only the genModels	WITHOUT_CLASSIFICATION	0.9999342941408876	WITHOUT_CLASSIFICATION	6.57058591122634E-5	DEFECT
//EOperation	WITHOUT_CLASSIFICATION	0.9983562883088352	WITHOUT_CLASSIFICATION	0.0016437116911648386	DEFECT
// This is only at avoid needing an @SuppressWarnings("unchecked") on the EMFObservableList	WITHOUT_CLASSIFICATION	0.9997668305681728	WITHOUT_CLASSIFICATION	2.331694318270458E-4	DEFECT
// This is only at avoid needing an @SuppressWarnings("unchecked") on the EMFObservableList	WITHOUT_CLASSIFICATION	0.9997668305681728	WITHOUT_CLASSIFICATION	2.331694318270458E-4	DEFECT
// Fill 230 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 10 of value (byte) 33 // Fill 39 of value (byte) -19 // Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999896318506113	WITHOUT_CLASSIFICATION	1.0368149388631238E-5	DEFECT
//ETypedElement	WITHOUT_CLASSIFICATION	0.9996426106049664	WITHOUT_CLASSIFICATION	3.573893950334919E-4	DEFECT
// ETypeParameter	WITHOUT_CLASSIFICATION	0.999995903492428	WITHOUT_CLASSIFICATION	4.096507572056761E-6	DEFECT
//EDataType	WITHOUT_CLASSIFICATION	0.9992984616609178	WITHOUT_CLASSIFICATION	7.015383390822369E-4	DEFECT
//EcoreFactory	WITHOUT_CLASSIFICATION	0.9987378858373998	WITHOUT_CLASSIFICATION	0.0012621141626003318	DEFECT
// EAnnotation	WITHOUT_CLASSIFICATION	0.9995427072428658	WITHOUT_CLASSIFICATION	4.5729275713429513E-4	DEFECT
// EGenericType	WITHOUT_CLASSIFICATION	0.9999443303764262	WITHOUT_CLASSIFICATION	5.566962357390713E-5	DEFECT
//EcorePackage	WITHOUT_CLASSIFICATION	0.9988028969661916	WITHOUT_CLASSIFICATION	0.0011971030338084581	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.9999933771872096	WITHOUT_CLASSIFICATION	6.622812790395057E-6	DEFECT
// Initialize simple dependencies	WITHOUT_CLASSIFICATION	0.9999991823946333	WITHOUT_CLASSIFICATION	8.176053668014476E-7	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.9999990592002509	WITHOUT_CLASSIFICATION	9.407997490422834E-7	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.99999732803041	WITHOUT_CLASSIFICATION	2.671969590056063E-6	DEFECT
// Mark meta-data to indicate it can't be changed	WITHOUT_CLASSIFICATION	0.9999930471702011	WITHOUT_CLASSIFICATION	6.95282979884545E-6	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.9999982092566939	WITHOUT_CLASSIFICATION	1.7907433059583226E-6	DEFECT
// Create enums	WITHOUT_CLASSIFICATION	0.9999951964941937	WITHOUT_CLASSIFICATION	4.803505806314458E-6	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.9999902001708177	WITHOUT_CLASSIFICATION	9.799829182323957E-6	DEFECT
// Obtain other dependent packages	WITHOUT_CLASSIFICATION	0.9999916577067488	WITHOUT_CLASSIFICATION	8.342293251226973E-6	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.9999995068117644	WITHOUT_CLASSIFICATION	4.93188235584206E-7	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.999998067601732	WITHOUT_CLASSIFICATION	1.932398267952577E-6	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.9999893124183389	WITHOUT_CLASSIFICATION	1.0687581661237084E-5	DEFECT
// Initialize enums and add enum literals	WITHOUT_CLASSIFICATION	0.9999976262966784	WITHOUT_CLASSIFICATION	2.3737033215822825E-6	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.9999954956836732	WITHOUT_CLASSIFICATION	4.5043163268436935E-6	DEFECT
// ListChange	WITHOUT_CLASSIFICATION	0.9999945906804026	WITHOUT_CLASSIFICATION	5.4093195973783525E-6	DEFECT
// FeatureMapEntry	WITHOUT_CLASSIFICATION	0.999939414088351	WITHOUT_CLASSIFICATION	6.058591164889495E-5	DEFECT
// FeatureChange	WITHOUT_CLASSIFICATION	0.9999306686690038	WITHOUT_CLASSIFICATION	6.933133099616787E-5	DEFECT
// ChangeDescription	WITHOUT_CLASSIFICATION	0.9999872598410618	WITHOUT_CLASSIFICATION	1.2740158938148297E-5	DEFECT
//ChangeFactory	WITHOUT_CLASSIFICATION	0.9995568592306806	WITHOUT_CLASSIFICATION	4.431407693193945E-4	DEFECT
//ChangePackage	WITHOUT_CLASSIFICATION	0.9995555562124319	WITHOUT_CLASSIFICATION	4.444437875680863E-4	DEFECT
// ResourceChange	WITHOUT_CLASSIFICATION	0.9999962721208719	WITHOUT_CLASSIFICATION	3.727879127982958E-6	DEFECT
//ChangePackageImpl	WITHOUT_CLASSIFICATION	0.999827691573363	WITHOUT_CLASSIFICATION	1.7230842663691978E-4	DEFECT
//EObjectToChangesMapEntryImpl	WITHOUT_CLASSIFICATION	0.9999580791011151	WITHOUT_CLASSIFICATION	4.192089888487114E-5	DEFECT
//ListChangeImpl	WITHOUT_CLASSIFICATION	0.9999707828283972	WITHOUT_CLASSIFICATION	2.9217171602695996E-5	DEFECT
// cache result	WITHOUT_CLASSIFICATION	0.9999948631444919	WITHOUT_CLASSIFICATION	5.136855508077211E-6	DEFECT
// cache result	WITHOUT_CLASSIFICATION	0.9999948631444919	WITHOUT_CLASSIFICATION	5.136855508077211E-6	DEFECT
//ResourceChangeImpl	WITHOUT_CLASSIFICATION	0.9999786437719954	WITHOUT_CLASSIFICATION	2.135622800467027E-5	DEFECT
// feature is instance of EAttribute	WITHOUT_CLASSIFICATION	0.9999763872019803	WITHOUT_CLASSIFICATION	2.3612798019660034E-5	DEFECT
// cached already?	WITHOUT_CLASSIFICATION	0.9999959578836723	WITHOUT_CLASSIFICATION	4.042116327596512E-6	DEFECT
//FeatureChangeImpl	WITHOUT_CLASSIFICATION	0.9998651646	WITHOUT_CLASSIFICATION	1.348354000000469E-4	DEFECT
//FeatureChangeImpl	WITHOUT_CLASSIFICATION	0.9998651646	WITHOUT_CLASSIFICATION	1.348354000000469E-4	DEFECT
// Isolating the new objects	WITHOUT_CLASSIFICATION	0.9999902751838687	WITHOUT_CLASSIFICATION	9.724816131400498E-6	DEFECT
// getObjectsToDetachGen() should be changed only if required	WITHOUT_CLASSIFICATION	0.9996303182703351	WITHOUT_CLASSIFICATION	3.6968172966491216E-4	DEFECT
// caches the list value.	WITHOUT_CLASSIFICATION	0.9999989681098944	WITHOUT_CLASSIFICATION	1.0318901055018694E-6	DEFECT
//ChangeDescriptionImpl	WITHOUT_CLASSIFICATION	0.9999291355422893	WITHOUT_CLASSIFICATION	7.086445771062054E-5	DEFECT
//ChangeFactoryImpl	WITHOUT_CLASSIFICATION	0.9997976335730866	WITHOUT_CLASSIFICATION	2.0236642691333963E-4	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.99999732803041	WITHOUT_CLASSIFICATION	2.671969590056063E-6	DEFECT
// Register package validator	WITHOUT_CLASSIFICATION	0.9999988601197599	WITHOUT_CLASSIFICATION	1.1398802400978825E-6	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.9999982092566939	WITHOUT_CLASSIFICATION	1.7907433059583226E-6	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.9999902001708177	WITHOUT_CLASSIFICATION	9.799829182323957E-6	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.999998067601732	WITHOUT_CLASSIFICATION	1.932398267952577E-6	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.9999893124183389	WITHOUT_CLASSIFICATION	1.0687581661237084E-5	DEFECT
// Initialize classes and features; add operations and parameters	WITHOUT_CLASSIFICATION	0.9999987329766953	WITHOUT_CLASSIFICATION	1.2670233046854628E-6	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.9999954956836732	WITHOUT_CLASSIFICATION	4.5043163268436935E-6	DEFECT
/**   * The switch that delegates to the <code>createXXX</code> methods.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9999957123146821	WITHOUT_CLASSIFICATION	4.28768531794884E-6	DEFECT
/*   * @deprecated   */	WITHOUT_CLASSIFICATION	0.999996335163417	WITHOUT_CLASSIFICATION	3.664836582985041E-6	DEFECT
//ChangeSwitch	WITHOUT_CLASSIFICATION	0.9998717968935746	WITHOUT_CLASSIFICATION	1.2820310642532314E-4	DEFECT
//ChangeAdapterFactory	WITHOUT_CLASSIFICATION	0.999643343344796	WITHOUT_CLASSIFICATION	3.566566552039866E-4	DEFECT
// Make sure that all the old values are cached.	WITHOUT_CLASSIFICATION	0.9999931763493219	WITHOUT_CLASSIFICATION	6.823650678034379E-6	DEFECT
//case Notification.REMOVE:	WITHOUT_CLASSIFICATION	0.9990481598629376	WITHOUT_CLASSIFICATION	9.518401370623223E-4	DEFECT
//case Notification.REMOVE_MANY:	WITHOUT_CLASSIFICATION	0.9996038470732866	WITHOUT_CLASSIFICATION	3.9615292671337497E-4	DEFECT
// Continue with no instanceClass. 	WITHOUT_CLASSIFICATION	0.999984256036957	WITHOUT_CLASSIFICATION	1.574396304303927E-5	DEFECT
//EGenericTypeImpl	WITHOUT_CLASSIFICATION	0.9997904531353153	WITHOUT_CLASSIFICATION	2.0954686468458588E-4	DEFECT
//EParameterImpl	WITHOUT_CLASSIFICATION	0.999977362173427	WITHOUT_CLASSIFICATION	2.2637826572945798E-5	DEFECT
// Create data types	WITHOUT_CLASSIFICATION	0.9999969529399257	WITHOUT_CLASSIFICATION	3.0470600742193424E-6	DEFECT
// Initialize data types	WITHOUT_CLASSIFICATION	0.9999943799091318	WITHOUT_CLASSIFICATION	5.620090868240852E-6	DEFECT
//return eContainer;	WITHOUT_CLASSIFICATION	0.9999381098469047	WITHOUT_CLASSIFICATION	6.189015309526477E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999106018941357	WITHOUT_CLASSIFICATION	8.939810586429974E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.99999783982728	WITHOUT_CLASSIFICATION	2.1601727201388865E-6	DEFECT
//ETypeParameterImpl	WITHOUT_CLASSIFICATION	0.9999712138894901	WITHOUT_CLASSIFICATION	2.878611050985374E-5	DEFECT
//EStringToStringMapEntryImpl	WITHOUT_CLASSIFICATION	0.9998238663858544	WITHOUT_CLASSIFICATION	1.7613361414565355E-4	DEFECT
// Don't really unset it.	WITHOUT_CLASSIFICATION	0.9998437016745247	WITHOUT_CLASSIFICATION	1.562983254753255E-4	DEFECT
// create containment one.	WITHOUT_CLASSIFICATION	0.9999868669280428	WITHOUT_CLASSIFICATION	1.3133071957288458E-5	DEFECT
//getList(entry).clear();	WITHOUT_CLASSIFICATION	0.9999931682561592	WITHOUT_CLASSIFICATION	6.831743840696626E-6	DEFECT
//ETypedElementImpl	WITHOUT_CLASSIFICATION	0.9997157864162731	WITHOUT_CLASSIFICATION	2.8421358372683186E-4	DEFECT
// Keep trying until all else has failed.	WITHOUT_CLASSIFICATION	0.9999312778899689	WITHOUT_CLASSIFICATION	6.872211003110122E-5	DEFECT
// Continue to try a different approach.	WITHOUT_CLASSIFICATION	0.999668159405749	WITHOUT_CLASSIFICATION	3.318405942509899E-4	DEFECT
// Continue to try a different approach.	WITHOUT_CLASSIFICATION	0.999668159405749	WITHOUT_CLASSIFICATION	3.318405942509899E-4	DEFECT
// Keep trying until all else false.	WITHOUT_CLASSIFICATION	0.999976750328266	WITHOUT_CLASSIFICATION	2.3249671734009695E-5	DEFECT
//EcoreFactoryImpl	WITHOUT_CLASSIFICATION	0.9994233812284556	WITHOUT_CLASSIFICATION	5.766187715443119E-4	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999106018941357	WITHOUT_CLASSIFICATION	8.939810586429974E-5	DEFECT
/* backward compatibility with old generated overrides */	WITHOUT_CLASSIFICATION	0.9999992693701717	WITHOUT_CLASSIFICATION	7.306298282081742E-7	DEFECT
/* backward compatibility with old generated overrides */	WITHOUT_CLASSIFICATION	0.9999992693701717	WITHOUT_CLASSIFICATION	7.306298282081742E-7	DEFECT
// Subclasses MUST override this function	WITHOUT_CLASSIFICATION	0.9999957794467367	WITHOUT_CLASSIFICATION	4.220553263347844E-6	DEFECT
// return eVirtualIndexBits[offset];	WITHOUT_CLASSIFICATION	0.9999828041294339	WITHOUT_CLASSIFICATION	1.719587056617415E-5	DEFECT
// eVirtualIndexBits[offset] = newIndexBits;	WITHOUT_CLASSIFICATION	0.9999848125213224	WITHOUT_CLASSIFICATION	1.5187478677633642E-5	DEFECT
// Continue to compute the offset.	WITHOUT_CLASSIFICATION	0.9999692530640516	WITHOUT_CLASSIFICATION	3.074693594832869E-5	DEFECT
// return eVirtualValues;	WITHOUT_CLASSIFICATION	0.999993965325032	WITHOUT_CLASSIFICATION	6.034674967912061E-6	DEFECT
// eVirtualValues = newValues;	WITHOUT_CLASSIFICATION	0.9999945414949705	WITHOUT_CLASSIFICATION	5.458505029509124E-6	DEFECT
// return minimumCapacity;	WITHOUT_CLASSIFICATION	0.9999972891649034	WITHOUT_CLASSIFICATION	2.7108350966378008E-6	DEFECT
// Ignore exceptions.	WITHOUT_CLASSIFICATION	0.9999853745435517	WITHOUT_CLASSIFICATION	1.4625456448110596E-5	DEFECT
// Continue and return null.	WITHOUT_CLASSIFICATION	0.9999899293785067	WITHOUT_CLASSIFICATION	1.0070621493283163E-5	DEFECT
// Ensure that cached ePackage is forgotten.	WITHOUT_CLASSIFICATION	0.9999844005411442	WITHOUT_CLASSIFICATION	1.5599458855810665E-5	DEFECT
//EAnnotationImpl	WITHOUT_CLASSIFICATION	0.9993222687457514	WITHOUT_CLASSIFICATION	6.777312542485581E-4	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999106018941357	WITHOUT_CLASSIFICATION	8.939810586429974E-5	DEFECT
// Don't really unset it.	WITHOUT_CLASSIFICATION	0.9998437016745247	WITHOUT_CLASSIFICATION	1.562983254753255E-4	DEFECT
// Force this to be initialized as well.	WITHOUT_CLASSIFICATION	0.9999982060982908	WITHOUT_CLASSIFICATION	1.793901709251309E-6	DEFECT
//)	WITHOUT_CLASSIFICATION	0.9988643892079304	WITHOUT_CLASSIFICATION	0.0011356107920695794	DEFECT
// (	WITHOUT_CLASSIFICATION	0.9999164745481814	WITHOUT_CLASSIFICATION	8.352545181852817E-5	DEFECT
// We can also optimize single valued reverse.  //	WITHOUT_CLASSIFICATION	0.9999991093317742	WITHOUT_CLASSIFICATION	8.906682258797935E-7	DEFECT
// all implementations of Java 1.5 should support AES	WITHOUT_CLASSIFICATION	0.9999875162868991	WITHOUT_CLASSIFICATION	1.248371310084559E-5	DEFECT
// generate the key	WITHOUT_CLASSIFICATION	0.9999913796359466	WITHOUT_CLASSIFICATION	8.620364053467001E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.99999783982728	WITHOUT_CLASSIFICATION	2.1601727201388865E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.99999783982728	WITHOUT_CLASSIFICATION	2.1601727201388865E-6	DEFECT
// Continue and try to close.	WITHOUT_CLASSIFICATION	0.9999834301085103	WITHOUT_CLASSIFICATION	1.656989148968828E-5	DEFECT
// Fill 3078 of value (byte) 33 // Fill 156 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 90 of value (byte) -19 // Fill 6 of value (byte) 33 // Fill 22 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999967709593718	WITHOUT_CLASSIFICATION	3.22904062827865E-6	DEFECT
// Fill 3078 of value (byte) 33 // Fill 156 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 90 of value (byte) -19 // Fill 6 of value (byte) 33 // Fill 22 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999967709593718	WITHOUT_CLASSIFICATION	3.22904062827865E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9998766035828676	WITHOUT_CLASSIFICATION	1.2339641713245567E-4	DEFECT
// ...	WITHOUT_CLASSIFICATION	0.9997656619924371	WITHOUT_CLASSIFICATION	2.343380075629658E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.99999783982728	WITHOUT_CLASSIFICATION	2.1601727201388865E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.99999783982728	WITHOUT_CLASSIFICATION	2.1601727201388865E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.99999783982728	WITHOUT_CLASSIFICATION	2.1601727201388865E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.99999783982728	WITHOUT_CLASSIFICATION	2.1601727201388865E-6	DEFECT
// Ignore exceptions.	WITHOUT_CLASSIFICATION	0.9999853745435517	WITHOUT_CLASSIFICATION	1.4625456448110596E-5	DEFECT
// Ignore exceptions.	WITHOUT_CLASSIFICATION	0.9999853745435517	WITHOUT_CLASSIFICATION	1.4625456448110596E-5	DEFECT
// encrypt the input	WITHOUT_CLASSIFICATION	0.999959379436589	WITHOUT_CLASSIFICATION	4.062056341099658E-5	DEFECT
// this is the key we will use to encrypt the data 	WITHOUT_CLASSIFICATION	0.9996786886552161	WITHOUT_CLASSIFICATION	3.213113447838578E-4	DEFECT
// create the IV for the password generation algorithm	WITHOUT_CLASSIFICATION	0.9999832143480185	WITHOUT_CLASSIFICATION	1.6785651981474007E-5	DEFECT
// generate the IV for encryption	WITHOUT_CLASSIFICATION	0.9999356610171063	WITHOUT_CLASSIFICATION	6.433898289363807E-5	DEFECT
// turn the password into an AES key	WITHOUT_CLASSIFICATION	0.9999923435423834	WITHOUT_CLASSIFICATION	7.656457616613888E-6	DEFECT
// now create the encryption cipher 	WITHOUT_CLASSIFICATION	0.9998879236693735	WITHOUT_CLASSIFICATION	1.1207633062654623E-4	DEFECT
// Read the header of the encrypted file.	WITHOUT_CLASSIFICATION	0.9999918859912467	WITHOUT_CLASSIFICATION	8.114008753388624E-6	DEFECT
// Decrypt the key bytes	WITHOUT_CLASSIFICATION	0.9999937700986478	WITHOUT_CLASSIFICATION	6.229901352363072E-6	DEFECT
// Create the key from the key bytes	WITHOUT_CLASSIFICATION	0.9999954658573067	WITHOUT_CLASSIFICATION	4.5341426932775465E-6	DEFECT
// If we haven't yet generated a key, just use this one	WITHOUT_CLASSIFICATION	0.9999925797871153	WITHOUT_CLASSIFICATION	7.420212884581378E-6	DEFECT
// now create the decrypt cipher	WITHOUT_CLASSIFICATION	0.9999746216736098	WITHOUT_CLASSIFICATION	2.5378326390179613E-5	DEFECT
// Ignore any exceptions and assume the class isn't available.	WITHOUT_CLASSIFICATION	0.9999815120830542	WITHOUT_CLASSIFICATION	1.8487916945898545E-5	DEFECT
// Ignore any exceptions and assume the class isn't available.	WITHOUT_CLASSIFICATION	0.9999815120830542	WITHOUT_CLASSIFICATION	1.8487916945898545E-5	DEFECT
// No methods added.	WITHOUT_CLASSIFICATION	0.999996310536415	WITHOUT_CLASSIFICATION	3.6894635849859896E-6	DEFECT
// ECLIPSE-DEPEND-BEGIN	WITHOUT_CLASSIFICATION	0.9999145304681855	WITHOUT_CLASSIFICATION	8.546953181455593E-5	DEFECT
// ECLIPSE-DEPEND-BEGIN	WITHOUT_CLASSIFICATION	0.9999145304681855	WITHOUT_CLASSIFICATION	8.546953181455593E-5	DEFECT
// ECLIPSE-DEPEND-END	WITHOUT_CLASSIFICATION	0.99989055862514	WITHOUT_CLASSIFICATION	1.0944137486005132E-4	DEFECT
// ECLIPSE-DEPEND-END	WITHOUT_CLASSIFICATION	0.99989055862514	WITHOUT_CLASSIFICATION	1.0944137486005132E-4	DEFECT
// We can't update any properties via just a URL connection.	WITHOUT_CLASSIFICATION	0.9999926465784367	WITHOUT_CLASSIFICATION	7.353421563360159E-6	DEFECT
// Ignore the bound if the value is too big.	WITHOUT_CLASSIFICATION	0.999995112454515	WITHOUT_CLASSIFICATION	4.887545485053451E-6	DEFECT
// Ignore the bound if the value is too big.	WITHOUT_CLASSIFICATION	0.999995112454515	WITHOUT_CLASSIFICATION	4.887545485053451E-6	DEFECT
// Ignore features from the first super type. //	WITHOUT_CLASSIFICATION	0.9999915771062076	WITHOUT_CLASSIFICATION	8.422893792384566E-6	DEFECT
// Match against every other operation but this one. //	WITHOUT_CLASSIFICATION	0.9999492550659923	WITHOUT_CLASSIFICATION	5.0744934007706084E-5	DEFECT
/**   * Calls <code>validateXXX</code> for the corresponding classifier of the model.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9999967932473037	WITHOUT_CLASSIFICATION	3.206752696340495E-6	DEFECT
// The CipherOutputStream shoudln't close the underlying stream //	WITHOUT_CLASSIFICATION	0.999921824678234	WITHOUT_CLASSIFICATION	7.817532176602674E-5	DEFECT
// List subList(EStructuralFeature feature, int from, int to); // EList list(EStructuralFeature feature);	WITHOUT_CLASSIFICATION	0.9999985434945412	WITHOUT_CLASSIFICATION	1.4565054587968776E-6	DEFECT
// Ensure that the class loader for this class will be used downstream. //	WITHOUT_CLASSIFICATION	0.9999748960385523	WITHOUT_CLASSIFICATION	2.51039614477136E-5	DEFECT
// We do not want to diagnose any errors that have already been diagnosed by a super type. // Although we ignore all the first super's features, there may be mixin classes that still would result in duplicates. //	WITHOUT_CLASSIFICATION	0.9999834457280564	WITHOUT_CLASSIFICATION	1.655427194355166E-5	DEFECT
//EcoreSwitch	WITHOUT_CLASSIFICATION	0.9994446676034228	WITHOUT_CLASSIFICATION	5.553323965772098E-4	DEFECT
// A document root can have multiple ID attributes because there can be multiple global element or attribute declarations of type ID  // and these will be the ID in the complex types that reference them, // i.e., they aren't really the ID of the document root. //	WITHOUT_CLASSIFICATION	0.9999802927688094	WITHOUT_CLASSIFICATION	1.9707231190698783E-5	DEFECT
// For performance, skip matching all the features of the first super type. //	WITHOUT_CLASSIFICATION	0.9999980736090206	WITHOUT_CLASSIFICATION	1.9263909794684227E-6	DEFECT
// Don't bother complaining about things with no name, // since there are constraints for that problem. //	WITHOUT_CLASSIFICATION	0.999986513455397	WITHOUT_CLASSIFICATION	1.3486544602998043E-5	DEFECT
// Drop the _ separators and normalize the case. //	WITHOUT_CLASSIFICATION	0.9999962605714433	WITHOUT_CLASSIFICATION	3.7394285567143863E-6	DEFECT
// Fill 31 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 53 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999893535609582	WITHOUT_CLASSIFICATION	1.0646439041723534E-5	DEFECT
// Match against every other operation but this one. //	WITHOUT_CLASSIFICATION	0.9999492550659923	WITHOUT_CLASSIFICATION	5.0744934007706084E-5	DEFECT
// Produce different levels of diagnostic depending whether the names are exactly the same or only matching. //	WITHOUT_CLASSIFICATION	0.9999981231468231	WITHOUT_CLASSIFICATION	1.8768531769269011E-6	DEFECT
// There is no match if the types are different // and they don't each specify the same non-null instance class name. //	WITHOUT_CLASSIFICATION	0.9999892129470959	WITHOUT_CLASSIFICATION	1.0787052904133892E-5	DEFECT
// Iterate over all the operations but skip all the operations in the first super. //	WITHOUT_CLASSIFICATION	0.9999875201087078	WITHOUT_CLASSIFICATION	1.247989129225943E-5	DEFECT
// We do not want to diagnose any error that have already been diagnosed by a super type. //	WITHOUT_CLASSIFICATION	0.9999606903064204	WITHOUT_CLASSIFICATION	3.9309693579480543E-5	DEFECT
// Maintain a list of classifiers for looking up conflicts. //	WITHOUT_CLASSIFICATION	0.9999955693808072	WITHOUT_CLASSIFICATION	4.430619192755842E-6	DEFECT
// Look for duplicates among the generic super types. //	WITHOUT_CLASSIFICATION	0.9999968937287594	WITHOUT_CLASSIFICATION	3.106271240514E-6	DEFECT
// Ignore it if it isn't a class. Not being a class is diagnosed for the generic type itself. //	WITHOUT_CLASSIFICATION	0.9999977096216016	WITHOUT_CLASSIFICATION	2.2903783984547838E-6	DEFECT
// The string must contain inappropriate whitespace, so find the index for the first difference. //	WITHOUT_CLASSIFICATION	0.9999279902746282	WITHOUT_CLASSIFICATION	7.200972537182011E-5	DEFECT
// Don't complain about the literals if they are the same as the names and the names collide. //	WITHOUT_CLASSIFICATION	0.9999952553645381	WITHOUT_CLASSIFICATION	4.744635461812575E-6	DEFECT
// Can't have both a classifier and a type parameter. //	WITHOUT_CLASSIFICATION	0.9999996989965612	WITHOUT_CLASSIFICATION	3.0100343888065093E-7	DEFECT
// The referencing generic type must be contained to be in scope //	WITHOUT_CLASSIFICATION	0.999978849645927	WITHOUT_CLASSIFICATION	2.1150354073011375E-5	DEFECT
// The type parameter must be in scope and must not be a forward reference. //	WITHOUT_CLASSIFICATION	0.9999968195028274	WITHOUT_CLASSIFICATION	3.18049717252918E-6	DEFECT
// When used as a generic super type, there must be a classifier that refers to a class. //	WITHOUT_CLASSIFICATION	0.9999980355455143	WITHOUT_CLASSIFICATION	1.9644544857256336E-6	DEFECT
// The type arguments of a generic super type must not be a wildcard. //	WITHOUT_CLASSIFICATION	0.9999725478120352	WITHOUT_CLASSIFICATION	2.7452187964848036E-5	DEFECT
// Wildcards are only allowed in type arguments. //	WITHOUT_CLASSIFICATION	0.9998736353707676	WITHOUT_CLASSIFICATION	1.2636462923242743E-4	DEFECT
// The classifier of an attribute's generic type must be a data type. //	WITHOUT_CLASSIFICATION	0.9999983036468837	WITHOUT_CLASSIFICATION	1.6963531161868228E-6	DEFECT
// Can't have both an upper and lower bound. //	WITHOUT_CLASSIFICATION	0.9999525755313119	WITHOUT_CLASSIFICATION	4.7424468688055656E-5	DEFECT
// Can't have a classifier or a type parameter as well as bounds. //	WITHOUT_CLASSIFICATION	0.9999997334746524	WITHOUT_CLASSIFICATION	2.665253476221949E-7	DEFECT
// Can only have bounds when used as a type argument. //	WITHOUT_CLASSIFICATION	0.9999920337851527	WITHOUT_CLASSIFICATION	7.966214847276285E-6	DEFECT
// Can't have type arguments unless there is a classifier //	WITHOUT_CLASSIFICATION	0.9999975359984034	WITHOUT_CLASSIFICATION	2.46400159668344E-6	DEFECT
// Have no arguments when they are allowed is only a warning. //	WITHOUT_CLASSIFICATION	0.9999899142976758	WITHOUT_CLASSIFICATION	1.0085702324101133E-5	DEFECT
// Incorrect number of type arguments. //	WITHOUT_CLASSIFICATION	0.9999666591329169	WITHOUT_CLASSIFICATION	3.33408670831538E-5	DEFECT
// Check if the bound specifies a classifier... //	WITHOUT_CLASSIFICATION	0.9999934267288783	WITHOUT_CLASSIFICATION	6.5732711218468415E-6	DEFECT
// If the type also specifies a classifier... //	WITHOUT_CLASSIFICATION	0.9999923834917915	WITHOUT_CLASSIFICATION	7.616508208385906E-6	DEFECT
// If the are the same then it is bounded properly... //	WITHOUT_CLASSIFICATION	0.999659970343702	WITHOUT_CLASSIFICATION	3.4002965629794415E-4	DEFECT
// We test their relationship either via them both being classes... //	WITHOUT_CLASSIFICATION	0.9999896663196304	WITHOUT_CLASSIFICATION	1.0333680369696643E-5	DEFECT
// namespace context	WITHOUT_CLASSIFICATION	0.9999988720012021	WITHOUT_CLASSIFICATION	1.1279987979450804E-6	DEFECT
// Determine if there is a bounding generic super type. //	WITHOUT_CLASSIFICATION	0.9999979119961375	WITHOUT_CLASSIFICATION	2.088003862534872E-6	DEFECT
// Set up the substitutions of any type parameters this class has with respect to the type arguments for them. //	WITHOUT_CLASSIFICATION	0.9998979148397495	WITHOUT_CLASSIFICATION	1.0208516025053956E-4	DEFECT
// Test if there are type parameters that might require substitution. //	WITHOUT_CLASSIFICATION	0.9997781290576958	WITHOUT_CLASSIFICATION	2.2187094230432505E-4	DEFECT
// If none of the generic super types are bounded, then we've failed. //	WITHOUT_CLASSIFICATION	0.9999843521899378	WITHOUT_CLASSIFICATION	1.5647810062286314E-5	DEFECT
// If neither approach finds a contradiction, we must assume they are okay and then check all the arguments. //	WITHOUT_CLASSIFICATION	0.9999617169019309	WITHOUT_CLASSIFICATION	3.828309806909304E-5	DEFECT
// If there is a type parameter, one of its bounds must be bounded by the bound. //	WITHOUT_CLASSIFICATION	0.9999994327451068	WITHOUT_CLASSIFICATION	5.672548932141324E-7	DEFECT
// If there is a upper bound, the bound must bound it. //	WITHOUT_CLASSIFICATION	0.9999943486405218	WITHOUT_CLASSIFICATION	5.651359478182391E-6	DEFECT
// Failing all those cases, there must be an lower bound that bounds it. //	WITHOUT_CLASSIFICATION	0.9998548110528888	WITHOUT_CLASSIFICATION	1.4518894711119015E-4	DEFECT
// If the generic type is a wildcard, it can't be bounded by another wildcard. //	WITHOUT_CLASSIFICATION	0.9999970506343339	WITHOUT_CLASSIFICATION	2.9493656661498455E-6	DEFECT
// If there is an lower bound, the type argument must bound it. //	WITHOUT_CLASSIFICATION	0.9999926061810577	WITHOUT_CLASSIFICATION	7.393818942291205E-6	DEFECT
// If the type also specifies a classifier... //	WITHOUT_CLASSIFICATION	0.9999923834917915	WITHOUT_CLASSIFICATION	7.616508208385906E-6	DEFECT
// If they are the same classifier, they are of course equal. //	WITHOUT_CLASSIFICATION	0.9999253186645136	WITHOUT_CLASSIFICATION	7.468133548638879E-5	DEFECT
// Consider the instance type names they wrap  // to see if they are non-null and equal. //	WITHOUT_CLASSIFICATION	0.9999989285321267	WITHOUT_CLASSIFICATION	1.0714678732869433E-6	DEFECT
// Consider the instance type names they wrap  // to see if they are non-null and equal. //	WITHOUT_CLASSIFICATION	0.9999989285321267	WITHOUT_CLASSIFICATION	1.0714678732869433E-6	DEFECT
// I.e., the classifiers are considered equal if they wrap the same non-null type. //	WITHOUT_CLASSIFICATION	0.999994753646787	WITHOUT_CLASSIFICATION	5.246353212923581E-6	DEFECT
// I.e., the classifiers are considered equal if they wrap the same non-null type. //	WITHOUT_CLASSIFICATION	0.999994753646787	WITHOUT_CLASSIFICATION	5.246353212923581E-6	DEFECT
// If the generic type is a different wildcard, it doesn't match. //	WITHOUT_CLASSIFICATION	0.9999943376089232	WITHOUT_CLASSIFICATION	5.6623910767468124E-6	DEFECT
// Reverse the test. //	WITHOUT_CLASSIFICATION	0.99999859104567	WITHOUT_CLASSIFICATION	1.4089543299834845E-6	DEFECT
// If they are the same instance they are equal. //	WITHOUT_CLASSIFICATION	0.9999829909386849	WITHOUT_CLASSIFICATION	1.7009061314997925E-5	DEFECT
// If one is null (but the other is not) then they are not equal. //	WITHOUT_CLASSIFICATION	0.9997282478207582	WITHOUT_CLASSIFICATION	2.717521792418953E-4	DEFECT
// Consider the classifiers in a special way  // to take into account the fact they they often acts as wrappers for instance type names // and that two classifiers that wrap the same instance type name should be considered equal. //	WITHOUT_CLASSIFICATION	0.9999804377131365	WITHOUT_CLASSIFICATION	1.9562286863551576E-5	DEFECT
// If they both aren't null... //	WITHOUT_CLASSIFICATION	0.9999021110619799	WITHOUT_CLASSIFICATION	9.788893802015593E-5	DEFECT
// If one is null (but the other is not) then they can't be equal. //	WITHOUT_CLASSIFICATION	0.9998570832892315	WITHOUT_CLASSIFICATION	1.4291671076849464E-4	DEFECT
// The arguments, type parameters, lower bounds and upper bounds must be equal type arguments. //	WITHOUT_CLASSIFICATION	0.9999943131992026	WITHOUT_CLASSIFICATION	5.6868007973535504E-6	DEFECT
// Ignore leading whitespace	WITHOUT_CLASSIFICATION	0.9999956910769102	WITHOUT_CLASSIFICATION	4.308923089795549E-6	DEFECT
// Ignore trailing whitespace	WITHOUT_CLASSIFICATION	0.9999940648121818	WITHOUT_CLASSIFICATION	5.935187818206089E-6	DEFECT
//EcoreValidator	WITHOUT_CLASSIFICATION	0.9989211722464996	WITHOUT_CLASSIFICATION	0.0010788277535004162	DEFECT
//  Public	WITHOUT_CLASSIFICATION	0.9999044290749749	WITHOUT_CLASSIFICATION	9.557092502510199E-5	DEFECT
// --entryCursor;	WITHOUT_CLASSIFICATION	0.9999862074369537	WITHOUT_CLASSIFICATION	1.3792563046301483E-5	DEFECT
//lastCursor = -1; //prepared = 0;	WITHOUT_CLASSIFICATION	0.9999918617387948	WITHOUT_CLASSIFICATION	8.138261205153082E-6	DEFECT
/*    public List subList(int from, int to)    {      return featureMap.subList(getEStructuralFeature(), from, to);    }*/	WITHOUT_CLASSIFICATION	0.9999991778237585	WITHOUT_CLASSIFICATION	8.221762415523574E-7	DEFECT
// Don't cache this one as it will cause leaks because to dynamic demand created document roots and demand created EClasses. //	WITHOUT_CLASSIFICATION	0.9999161343828349	WITHOUT_CLASSIFICATION	8.386561716506932E-5	DEFECT
// For the extended meta data to be created. //	WITHOUT_CLASSIFICATION	0.9999966376449572	WITHOUT_CLASSIFICATION	3.3623550429104223E-6	DEFECT
// We can also optimize single valued reverse.  //	WITHOUT_CLASSIFICATION	0.9999991093317742	WITHOUT_CLASSIFICATION	8.906682258797935E-7	DEFECT
// This forces the feature ids to be assigned. //	WITHOUT_CLASSIFICATION	0.9999846242134374	WITHOUT_CLASSIFICATION	1.5375786562653722E-5	DEFECT
// We can use == for EObjects and EnumLiterals. //	WITHOUT_CLASSIFICATION	0.9999994755697091	WITHOUT_CLASSIFICATION	5.244302909050023E-7	DEFECT
/**   * The switch that delegates to the <code>createXXX</code> methods.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9999957123146821	WITHOUT_CLASSIFICATION	4.28768531794884E-6	DEFECT
// We can use == for EObjects and EnumLiterals. //	WITHOUT_CLASSIFICATION	0.9999994755697091	WITHOUT_CLASSIFICATION	5.244302909050023E-7	DEFECT
// This should be the same as the logic in ResourceImpl.getEObject(String). //	WITHOUT_CLASSIFICATION	0.9999916343641108	WITHOUT_CLASSIFICATION	8.365635889233605E-6	DEFECT
//EcoreAdapterFactory	WITHOUT_CLASSIFICATION	0.9989840397512151	WITHOUT_CLASSIFICATION	0.0010159602487848933	DEFECT
// We need to be careful that the proxy may be resolved while we are attaching this adapter. // We need to avoid attaching the adapter during the resolve  // and also attaching it again as we walk the eContents() later. // Checking here avoids having to check during addAdapter. //	WITHOUT_CLASSIFICATION	0.9995392496181582	WITHOUT_CLASSIFICATION	4.6075038184174687E-4	DEFECT
/*  public List subList(EStructuralFeature feature, int from, int to)  {    return null;  }*/	WITHOUT_CLASSIFICATION	0.9999995571249715	WITHOUT_CLASSIFICATION	4.428750284785871E-7	DEFECT
// Validate now since the call we make after will skip validating.	WITHOUT_CLASSIFICATION	0.9999962167879949	WITHOUT_CLASSIFICATION	3.783212005128616E-6	DEFECT
// Index should be -1.	WITHOUT_CLASSIFICATION	0.9998563846760702	WITHOUT_CLASSIFICATION	1.4361532392980332E-4	DEFECT
// Index should be -1.	WITHOUT_CLASSIFICATION	0.9998563846760702	WITHOUT_CLASSIFICATION	1.4361532392980332E-4	DEFECT
// This may be called directly on an EObject for the case of a containment. //	WITHOUT_CLASSIFICATION	0.999850726599262	WITHOUT_CLASSIFICATION	1.4927340073791744E-4	DEFECT
// demandDocumentRoot(ePackage);	WITHOUT_CLASSIFICATION	0.9999799704179329	WITHOUT_CLASSIFICATION	2.0029582067139517E-5	DEFECT
// For demand created created packages we allow the list of classifiers to grow  // so this should handle those additional instances. //	WITHOUT_CLASSIFICATION	0.9993845262265052	WITHOUT_CLASSIFICATION	6.154737734947623E-4	DEFECT
// No new methods.	WITHOUT_CLASSIFICATION	0.9999900196184279	WITHOUT_CLASSIFICATION	9.980381572057634E-6	DEFECT
// Undo the preparation for previous and continue.	WITHOUT_CLASSIFICATION	0.9999823739174145	WITHOUT_CLASSIFICATION	1.7626082585536486E-5	DEFECT
// Undo the preparation for next and continue.	WITHOUT_CLASSIFICATION	0.9998968486338163	WITHOUT_CLASSIFICATION	1.0315136618374953E-4	DEFECT
// Validate now since the call we make after will skip validating.	WITHOUT_CLASSIFICATION	0.9999962167879949	WITHOUT_CLASSIFICATION	3.783212005128616E-6	DEFECT
// Index should be -1.	WITHOUT_CLASSIFICATION	0.9998563846760702	WITHOUT_CLASSIFICATION	1.4361532392980332E-4	DEFECT
// Index should be -1.	WITHOUT_CLASSIFICATION	0.9998563846760702	WITHOUT_CLASSIFICATION	1.4361532392980332E-4	DEFECT
// This may be called directly on an EObject for the case of a containment. //	WITHOUT_CLASSIFICATION	0.999850726599262	WITHOUT_CLASSIFICATION	1.4927340073791744E-4	DEFECT
/*  List theList = new java.util.ArrayList();  protected List delegateList()  {    return theList;  }*/	WITHOUT_CLASSIFICATION	0.9999997538285454	WITHOUT_CLASSIFICATION	2.4617145452816625E-7	DEFECT
//   // Suppress default constructor for noninstantiability. //   private EcoreUtil() //   { //   }	WITHOUT_CLASSIFICATION	0.999998989061449	WITHOUT_CLASSIFICATION	1.0109385510000486E-6	DEFECT
// Failure to resolve is ignored.	WITHOUT_CLASSIFICATION	0.9998623780333313	WITHOUT_CLASSIFICATION	1.3762196666871333E-4	DEFECT
// The loop resolves the cross references by visiting them.	WITHOUT_CLASSIFICATION	0.9998872796863614	WITHOUT_CLASSIFICATION	1.1272031363861244E-4	DEFECT
// We don't create an iterator stack until the root mapping itself has been returned by next once. // After that the stack should be non-empty and the top iterator should yield true for hasNext. //	WITHOUT_CLASSIFICATION	0.9998044727341874	WITHOUT_CLASSIFICATION	1.9552726581272868E-4	DEFECT
// If we are on the special resource set iterator, and there isn't really a next object at this point... //	WITHOUT_CLASSIFICATION	0.9998473485452427	WITHOUT_CLASSIFICATION	1.5265145475722554E-4	DEFECT
// Skip the dummy null object and test again. //	WITHOUT_CLASSIFICATION	0.9999988539795186	WITHOUT_CLASSIFICATION	1.1460204814412995E-6	DEFECT
// {	WITHOUT_CLASSIFICATION	0.9998931989343998	WITHOUT_CLASSIFICATION	1.068010656002156E-4	DEFECT
// {	WITHOUT_CLASSIFICATION	0.9998931989343998	WITHOUT_CLASSIFICATION	1.068010656002156E-4	DEFECT
// If the first object is null, the second object must be null. //	WITHOUT_CLASSIFICATION	0.9999992577182272	WITHOUT_CLASSIFICATION	7.422817727763589E-7	DEFECT
// We know the first object isn't null, so if the second one is, it can't be equal. //	WITHOUT_CLASSIFICATION	0.999994624436028	WITHOUT_CLASSIFICATION	5.3755639719610644E-6	DEFECT
// Then eObject2 must be that previous match. //	WITHOUT_CLASSIFICATION	0.9999955914378614	WITHOUT_CLASSIFICATION	4.408562138606702E-6	DEFECT
// If eObject2 has been compared already... //	WITHOUT_CLASSIFICATION	0.9999891787645968	WITHOUT_CLASSIFICATION	1.0821235403079229E-5	DEFECT
// Then eObject1 must be that match. //	WITHOUT_CLASSIFICATION	0.9999885514649296	WITHOUT_CLASSIFICATION	1.1448535070396125E-5	DEFECT
// Neither eObject1 nor eObject2 have been compared yet.	WITHOUT_CLASSIFICATION	0.9999802036119858	WITHOUT_CLASSIFICATION	1.979638801412005E-5	DEFECT
// If eObject1 and eObject2 are the same instance... //	WITHOUT_CLASSIFICATION	0.999991172224094	WITHOUT_CLASSIFICATION	8.827775906081837E-6	DEFECT
// Match them and return true. //	WITHOUT_CLASSIFICATION	0.9999958627111634	WITHOUT_CLASSIFICATION	4.137288836676347E-6	DEFECT
// If they don't have the same class, they can't be equal. //	WITHOUT_CLASSIFICATION	0.9994853791582866	WITHOUT_CLASSIFICATION	5.146208417134149E-4	DEFECT
// Assume from now on that they match. //	WITHOUT_CLASSIFICATION	0.9999066681507977	WITHOUT_CLASSIFICATION	9.33318492023167E-5	DEFECT
// Check all the values. //	WITHOUT_CLASSIFICATION	0.9999976149820824	WITHOUT_CLASSIFICATION	2.385017917581502E-6	DEFECT
// If the first value is null, the second value must be null. //	WITHOUT_CLASSIFICATION	0.9999997495451118	WITHOUT_CLASSIFICATION	2.5045488821810936E-7	DEFECT
// Since the first value isn't null, if the second one is, they aren't equal. //	WITHOUT_CLASSIFICATION	0.9999977038103695	WITHOUT_CLASSIFICATION	2.296189630469726E-6	DEFECT
// If this is a feature map... //	WITHOUT_CLASSIFICATION	0.9999629650708752	WITHOUT_CLASSIFICATION	3.7034929124852256E-5	DEFECT
// The feature maps must be equal. //	WITHOUT_CLASSIFICATION	0.9999820193633513	WITHOUT_CLASSIFICATION	1.7980636648638455E-5	DEFECT
// The values must be Java equal. //	WITHOUT_CLASSIFICATION	0.9999982893737818	WITHOUT_CLASSIFICATION	1.7106262182537E-6	DEFECT
// If they don't have the same size, the feature maps aren't equal. //	WITHOUT_CLASSIFICATION	0.9995433426910002	WITHOUT_CLASSIFICATION	4.566573089998509E-4	DEFECT
// Compare entries in order. //	WITHOUT_CLASSIFICATION	0.9999955263541871	WITHOUT_CLASSIFICATION	4.473645812941267E-6	DEFECT
// There is no reason they aren't equals. //	WITHOUT_CLASSIFICATION	0.9987709132559103	WITHOUT_CLASSIFICATION	0.001229086744089783	DEFECT
// If the referenced EObjects aren't equal, the feature maps aren't equal. //	WITHOUT_CLASSIFICATION	0.9999843895089114	WITHOUT_CLASSIFICATION	1.5610491088617418E-5	DEFECT
// If the values aren't Java equal, the feature maps aren't equal. //	WITHOUT_CLASSIFICATION	0.9999983285101725	WITHOUT_CLASSIFICATION	1.6714898276390602E-6	DEFECT
// EqualityHelper	WITHOUT_CLASSIFICATION	0.999977151195322	WITHOUT_CLASSIFICATION	2.2848804677941723E-5	DEFECT
// If it's a proxy, use that. //	WITHOUT_CLASSIFICATION	0.9999948022805142	WITHOUT_CLASSIFICATION	5.197719485869832E-6	DEFECT
// If it is in a resource, form the URI relative to that resource. //	WITHOUT_CLASSIFICATION	0.9999964757233323	WITHOUT_CLASSIFICATION	3.5242766677662697E-6	DEFECT
// Keys that will be used to record visibility for the accessors. //	WITHOUT_CLASSIFICATION	0.9999925512384534	WITHOUT_CLASSIFICATION	7.448761546587053E-6	DEFECT
// Value used to suppress visibility. //	WITHOUT_CLASSIFICATION	0.999997354202209	WITHOUT_CLASSIFICATION	2.6457977908838196E-6	DEFECT
// Handle the last byte at the end. //	WITHOUT_CLASSIFICATION	0.9999931727774567	WITHOUT_CLASSIFICATION	6.827222543268808E-6	DEFECT
// Generate a 48 bit node identifier;  // This is an alternative to the IEEE 802 host address, which is not available in Java. //	WITHOUT_CLASSIFICATION	0.9998994740488852	WITHOUT_CLASSIFICATION	1.0052595111481384E-4	DEFECT
// Set the most significant bit of the first octet to 1 so as to distinguish it from IEEE node addresses //	WITHOUT_CLASSIFICATION	0.9999782578204005	WITHOUT_CLASSIFICATION	2.1742179599488106E-5	DEFECT
// The node identifier is already in network byte order,  // so there is no need to do any byte order reversing. //	WITHOUT_CLASSIFICATION	0.9996616157079579	WITHOUT_CLASSIFICATION	3.383842920422245E-4	DEFECT
// clockseq_hi	WITHOUT_CLASSIFICATION	0.9999670746199333	WITHOUT_CLASSIFICATION	3.2925380066734575E-5	DEFECT
// clockseq_low	WITHOUT_CLASSIFICATION	0.9999187089702963	WITHOUT_CLASSIFICATION	8.129102970371776E-5	DEFECT
// The system clock has been rewound so the clock sequence must be incremented  // to ensure that a duplicate UUID is not generated. //	WITHOUT_CLASSIFICATION	0.9997587414277904	WITHOUT_CLASSIFICATION	2.4125857220953962E-4	DEFECT
// Wait so that the clock can catch up and the time adjustment won't overflow.	WITHOUT_CLASSIFICATION	0.9999331045431502	WITHOUT_CLASSIFICATION	6.689545684985266E-5	DEFECT
// We just woke up.	WITHOUT_CLASSIFICATION	0.9999756576406126	WITHOUT_CLASSIFICATION	2.434235938739896E-5	DEFECT
// We just woke up.	WITHOUT_CLASSIFICATION	0.9999756576406126	WITHOUT_CLASSIFICATION	2.434235938739896E-5	DEFECT
// Place the time into the byte array in network byte order. //	WITHOUT_CLASSIFICATION	0.9999892985633192	WITHOUT_CLASSIFICATION	1.0701436680730384E-5	DEFECT
// time_low //	WITHOUT_CLASSIFICATION	0.9999767601250856	WITHOUT_CLASSIFICATION	2.323987491433605E-5	DEFECT
// time_mid //	WITHOUT_CLASSIFICATION	0.9999875155872221	WITHOUT_CLASSIFICATION	1.24844127777785E-5	DEFECT
// time_hi //	WITHOUT_CLASSIFICATION	0.9999889079138753	WITHOUT_CLASSIFICATION	1.1092086124591018E-5	DEFECT
// Ignore if we can't freeze.	WITHOUT_CLASSIFICATION	0.9999593514153842	WITHOUT_CLASSIFICATION	4.064858461586975E-5	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999960024026834	WITHOUT_CLASSIFICATION	3.997597316676026E-6	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999976220319823	WITHOUT_CLASSIFICATION	2.3779680177053606E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.DOMHelper#getValue(org.w3c.dom.Node)   */	WITHOUT_CLASSIFICATION	0.9999940677869965	WITHOUT_CLASSIFICATION	5.93221300352819E-6	DEFECT
// fall through	WITHOUT_CLASSIFICATION	0.999928500710001	WITHOUT_CLASSIFICATION	7.14992899990409E-5	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9998766035828676	WITHOUT_CLASSIFICATION	1.2339641713245567E-4	DEFECT
// Fill 3 of value (byte) 33 // Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999819576617878	WITHOUT_CLASSIFICATION	1.8042338212150104E-5	DEFECT
//fall through...	WITHOUT_CLASSIFICATION	0.9992200300469426	WITHOUT_CLASSIFICATION	7.799699530573669E-4	DEFECT
// Deresolve all the URI against the current base URI. //	WITHOUT_CLASSIFICATION	0.9999775083139757	WITHOUT_CLASSIFICATION	2.2491686024329987E-5	DEFECT
// System.err.println("add = ["+newString+"]");	WITHOUT_CLASSIFICATION	0.9999987465450283	WITHOUT_CLASSIFICATION	1.2534549716414324E-6	DEFECT
// If there is a temporary file... //	WITHOUT_CLASSIFICATION	0.9999933116601801	WITHOUT_CLASSIFICATION	6.688339819855574E-6	DEFECT
// This is the cheapest and most common case. //	WITHOUT_CLASSIFICATION	0.9997587123614183	WITHOUT_CLASSIFICATION	2.4128763858160502E-4	DEFECT
// The first case is the most common case. // It is slightly cheaper to call add without an index since an index will be range checked. //  	WITHOUT_CLASSIFICATION	0.9996663523729002	WITHOUT_CLASSIFICATION	3.336476270997685E-4	DEFECT
// This case can only happen if we are reset to a mark and we've got lots of XMLNS attributes to write. //	WITHOUT_CLASSIFICATION	0.9802361960170048	WITHOUT_CLASSIFICATION	0.019763803982995192	DEFECT
// If we can't create one, too bad.	WITHOUT_CLASSIFICATION	0.9999167342287416	WITHOUT_CLASSIFICATION	8.326577125840161E-5	DEFECT
// SAXXMIHandler	WITHOUT_CLASSIFICATION	0.9998912588382598	WITHOUT_CLASSIFICATION	1.0874116174025557E-4	DEFECT
// EMOF.isReadOnly = !Ecore.changeable	WITHOUT_CLASSIFICATION	0.9998863159593127	WITHOUT_CLASSIFICATION	1.136840406872495E-4	DEFECT
// Ecore.changeable = !EMOF.isReadOnly	WITHOUT_CLASSIFICATION	0.9999414608512989	WITHOUT_CLASSIFICATION	5.853914870105034E-5	DEFECT
// Ignore it if we've already set generic versions of these //	WITHOUT_CLASSIFICATION	0.9999980104794677	WITHOUT_CLASSIFICATION	1.989520532383914E-6	DEFECT
// Ignore whatever was set before. //	WITHOUT_CLASSIFICATION	0.9999879700445107	WITHOUT_CLASSIFICATION	1.2029955489364151E-5	DEFECT
// external schema locations should only be processed once, i.e. in the subsequent parse // there is no need to process those again.	WITHOUT_CLASSIFICATION	0.9999848382665736	WITHOUT_CLASSIFICATION	1.5161733426365267E-5	DEFECT
// throws SAXException	WITHOUT_CLASSIFICATION	0.9998969702907102	WITHOUT_CLASSIFICATION	1.0302970928972807E-4	DEFECT
// The entity handler is the best place to resolve and deresolve URIs since it can do it there just once to produce the entity. // So most often the entity handler will be a URI handler as well and when used as a URI handler will be an identity handler. //	WITHOUT_CLASSIFICATION	0.9999927062593775	WITHOUT_CLASSIFICATION	7.293740622509834E-6	DEFECT
// // Overwrite DefaultHandler methods //	WITHOUT_CLASSIFICATION	0.9999980489464279	WITHOUT_CLASSIFICATION	1.951053572195064E-6	DEFECT
// // Implement LexicalHandler methods //	WITHOUT_CLASSIFICATION	0.9999991028265167	WITHOUT_CLASSIFICATION	8.97173483218102E-7	DEFECT
// // Implement DTDHandler methods //	WITHOUT_CLASSIFICATION	0.9999964500582477	WITHOUT_CLASSIFICATION	3.549941752386213E-6	DEFECT
// // Implement EntityResolver methods //	WITHOUT_CLASSIFICATION	0.9999977468406055	WITHOUT_CLASSIFICATION	2.253159394560982E-6	DEFECT
// And find the one that holds this proxy. //	WITHOUT_CLASSIFICATION	0.9999218354520166	WITHOUT_CLASSIFICATION	7.816454798331537E-5	DEFECT
// Try to resolve the proxy locally. //	WITHOUT_CLASSIFICATION	0.999870218121806	WITHOUT_CLASSIFICATION	1.2978187819396875E-4	DEFECT
// We won't need to process this again later. //	WITHOUT_CLASSIFICATION	0.9999849498303707	WITHOUT_CLASSIFICATION	1.5050169629342321E-5	DEFECT
// Compute the holder of the proxy //	WITHOUT_CLASSIFICATION	0.9999591373612747	WITHOUT_CLASSIFICATION	4.086263872522865E-5	DEFECT
// If the proxy holder can hold many values, // it may contain a duplicate that resulted when the other end was processed as an IDREF // and hence did both sides of the bidirectional relation. //	WITHOUT_CLASSIFICATION	0.999999853358798	WITHOUT_CLASSIFICATION	1.466412019814512E-7	DEFECT
// Move the resolved object to the right place, remove the proxy, and we're done. //	WITHOUT_CLASSIFICATION	0.9999955179127233	WITHOUT_CLASSIFICATION	4.48208727665995E-6	DEFECT
// If the resolved object doesn't contain a reference to the proxy holder as it should. //	WITHOUT_CLASSIFICATION	0.9994411451129726	WITHOUT_CLASSIFICATION	5.588548870273201E-4	DEFECT
// The proxy needs to be replaced in a way that updates both ends of the reference. //	WITHOUT_CLASSIFICATION	0.9999736517325762	WITHOUT_CLASSIFICATION	2.63482674237313E-5	DEFECT
// We won't need to process this again later.	WITHOUT_CLASSIFICATION	0.9999716254020151	WITHOUT_CLASSIFICATION	2.837459798479329E-5	DEFECT
// At least set the references that we were able to resolve, if any. //	WITHOUT_CLASSIFICATION	0.9999978323679997	WITHOUT_CLASSIFICATION	2.1676320002057933E-6	DEFECT
// Pretend there is an xmlns="" because we really need to ensure that the null prefix  // isn't used to denote something other than the null namespace. //	WITHOUT_CLASSIFICATION	0.9999992594493147	WITHOUT_CLASSIFICATION	7.405506853040927E-7	DEFECT
// EATM temporary for debug purposes only. //	WITHOUT_CLASSIFICATION	0.999959363396622	WITHOUT_CLASSIFICATION	4.063660337808023E-5	DEFECT
// check for simple feature	WITHOUT_CLASSIFICATION	0.9999960463162985	WITHOUT_CLASSIFICATION	3.953683701488125E-6	DEFECT
// Set up a deferred extent so the document root we create definitely will not be added to the resource. //	WITHOUT_CLASSIFICATION	0.999995878104788	WITHOUT_CLASSIFICATION	4.121895212130888E-6	DEFECT
// Remove the document root's information from the top of the stacks. //	WITHOUT_CLASSIFICATION	0.9997986576014802	WITHOUT_CLASSIFICATION	2.0134239851975802E-4	DEFECT
// Process the new root object if any. //	WITHOUT_CLASSIFICATION	0.9999996939989294	WITHOUT_CLASSIFICATION	3.060010705068779E-7	DEFECT
// There's an EObject on the stack already. //	WITHOUT_CLASSIFICATION	0.9993233182146359	WITHOUT_CLASSIFICATION	6.76681785364159E-4	DEFECT
// Excise the new root from the document root. //	WITHOUT_CLASSIFICATION	0.9999737359183329	WITHOUT_CLASSIFICATION	2.6264081666984405E-5	DEFECT
// handler.ignorableWhitespace(ch, start, length);	WITHOUT_CLASSIFICATION	0.9999984195578029	WITHOUT_CLASSIFICATION	1.5804421971366599E-6	DEFECT
// Excise the new root from the document root. //	WITHOUT_CLASSIFICATION	0.9999737359183329	WITHOUT_CLASSIFICATION	2.6264081666984405E-5	DEFECT
//}	WITHOUT_CLASSIFICATION	0.998533790472529	WITHOUT_CLASSIFICATION	0.0014662095274709708	DEFECT
// The new root object is the actual new object since all sign of the document root will now have disappeared. //	WITHOUT_CLASSIFICATION	0.9989338243116076	WITHOUT_CLASSIFICATION	0.0010661756883924669	DEFECT
// Ignore a whitespace only text entry at the beginning. //	WITHOUT_CLASSIFICATION	0.9999976165857181	WITHOUT_CLASSIFICATION	2.3834142819252776E-6	DEFECT
// Handle namespaces	WITHOUT_CLASSIFICATION	0.9999992681850497	WITHOUT_CLASSIFICATION	7.318149503642986E-7	DEFECT
// If processSchemaLocations is specified, treat these as XML Schema locations	WITHOUT_CLASSIFICATION	0.999995972625977	WITHOUT_CLASSIFICATION	4.027374023089528E-6	DEFECT
// If externalSchemaLocations are specified, process these ones as well	WITHOUT_CLASSIFICATION	0.9999995525832602	WITHOUT_CLASSIFICATION	4.4741673980518655E-7	DEFECT
// Ensure that anything can be handled, even if it's not recognized. //	WITHOUT_CLASSIFICATION	0.9999750432156838	WITHOUT_CLASSIFICATION	2.4956784316229933E-5	DEFECT
// This happens when processing an element with simple content that has elements content even though it shouldn't. //	WITHOUT_CLASSIFICATION	0.9999447311905791	WITHOUT_CLASSIFICATION	5.526880942096708E-5	DEFECT
// Try to get a general-content feature. // Use a pattern that's not possible any other way. //	WITHOUT_CLASSIFICATION	0.9999750617699126	WITHOUT_CLASSIFICATION	2.4938230087328016E-5	DEFECT
// This is for the case for a local unqualified element that has been bound. //	WITHOUT_CLASSIFICATION	0.9998253473957948	WITHOUT_CLASSIFICATION	1.7465260420517666E-4	DEFECT
// This handles the case of a substitution group. //	WITHOUT_CLASSIFICATION	0.9972295528150704	WITHOUT_CLASSIFICATION	0.002770447184929566	DEFECT
// This check is redundant -- see handleFeature method (EL)	WITHOUT_CLASSIFICATION	0.9997757831278252	WITHOUT_CLASSIFICATION	2.2421687217472638E-4	DEFECT
// processing unknown feature with xsi:type (xmi:type)	WITHOUT_CLASSIFICATION	0.9999801467358249	WITHOUT_CLASSIFICATION	1.9853264175100748E-5	DEFECT
// This only works for old globally registered things.	WITHOUT_CLASSIFICATION	0.9982553401917034	WITHOUT_CLASSIFICATION	0.0017446598082965857	DEFECT
// Ignore it if we can't find it since we'll fail anyway.	WITHOUT_CLASSIFICATION	0.9999836459084671	WITHOUT_CLASSIFICATION	1.635409153282726E-5	DEFECT
// Continue with a different approach.	WITHOUT_CLASSIFICATION	0.9996236261668097	WITHOUT_CLASSIFICATION	3.763738331903873E-4	DEFECT
// We use null here instead of "" because an attribute without a prefix is considered to have the null target namespace...	WITHOUT_CLASSIFICATION	0.9999896783685482	WITHOUT_CLASSIFICATION	1.0321631451737424E-5	DEFECT
// Create a proxy in the correct way and pop it. //	WITHOUT_CLASSIFICATION	0.9999830035330833	WITHOUT_CLASSIFICATION	1.699646691664241E-5	DEFECT
// Test for a same document reference that would usually be handled as an IDREF. //	WITHOUT_CLASSIFICATION	0.9998122805565943	WITHOUT_CLASSIFICATION	1.8771944340569867E-4	DEFECT
// EATM Demand create metadata.	WITHOUT_CLASSIFICATION	0.9999214365202174	WITHOUT_CLASSIFICATION	7.856347978253163E-5	DEFECT
/*   * Javadoc copied from interface   */	WITHOUT_CLASSIFICATION	0.9999981298699449	WITHOUT_CLASSIFICATION	1.8701300550910533E-6	DEFECT
// add the key/value pairs to the output string	WITHOUT_CLASSIFICATION	0.9999959709279569	WITHOUT_CLASSIFICATION	4.029072043117015E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999569078800925	WITHOUT_CLASSIFICATION	4.309211990746606E-5	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9998766035828676	WITHOUT_CLASSIFICATION	1.2339641713245567E-4	DEFECT
// Ensure that anything can be handled, even if it's not recognized. //	WITHOUT_CLASSIFICATION	0.9999750432156838	WITHOUT_CLASSIFICATION	2.4956784316229933E-5	DEFECT
// xmlResource.getResourceSet().getResources().addAll(generatedResources);	WITHOUT_CLASSIFICATION	0.9999997987656762	WITHOUT_CLASSIFICATION	2.012343237792902E-7	DEFECT
// use the pool to retrieve the parser	WITHOUT_CLASSIFICATION	0.9999962610658073	WITHOUT_CLASSIFICATION	3.7389341927752645E-6	DEFECT
// use the pool to retrieve the parser	WITHOUT_CLASSIFICATION	0.9999962610658073	WITHOUT_CLASSIFICATION	3.7389341927752645E-6	DEFECT
// set features and properties	WITHOUT_CLASSIFICATION	0.9999666465600217	WITHOUT_CLASSIFICATION	3.3353439978413996E-5	DEFECT
// set lexical handler	WITHOUT_CLASSIFICATION	0.9999830949262188	WITHOUT_CLASSIFICATION	1.690507378120128E-5	DEFECT
// set lexical handler	WITHOUT_CLASSIFICATION	0.9999830949262188	WITHOUT_CLASSIFICATION	1.690507378120128E-5	DEFECT
// release parser back to the pool	WITHOUT_CLASSIFICATION	0.9999855657761738	WITHOUT_CLASSIFICATION	1.4434223826196873E-5	DEFECT
// release parser back to the pool	WITHOUT_CLASSIFICATION	0.9999855657761738	WITHOUT_CLASSIFICATION	1.4434223826196873E-5	DEFECT
// Don't read encoding - rely on XML parser to provide one via Locator2	WITHOUT_CLASSIFICATION	0.9970378364371204	WITHOUT_CLASSIFICATION	0.0029621635628796954	DEFECT
// record node's attributes	WITHOUT_CLASSIFICATION	0.9999919299213529	WITHOUT_CLASSIFICATION	8.07007864715518E-6	DEFECT
// Include only non-duplicate namespace declarations. //	WITHOUT_CLASSIFICATION	0.9999998226687663	WITHOUT_CLASSIFICATION	1.7733123360958154E-7	DEFECT
// record namespaces in scope //	WITHOUT_CLASSIFICATION	0.9999951143981892	WITHOUT_CLASSIFICATION	4.885601810748679E-6	DEFECT
// traverse element node	WITHOUT_CLASSIFICATION	0.9999967860404716	WITHOUT_CLASSIFICATION	3.21395952832571E-6	DEFECT
// class AttributesProxy	WITHOUT_CLASSIFICATION	0.9999937172218331	WITHOUT_CLASSIFICATION	6.282778166927098E-6	DEFECT
// XMLLoad	WITHOUT_CLASSIFICATION	0.9992328830281695	WITHOUT_CLASSIFICATION	7.671169718305806E-4	DEFECT
// Ignore close since we don't want to let the parser close the stream when it's done.	WITHOUT_CLASSIFICATION	0.9999738226114729	WITHOUT_CLASSIFICATION	2.6177388527065325E-5	DEFECT
// Ignore since we expect this to fail because of early termination // and if there is some other kind of failure, then we'll simply not be able to match the content type.	WITHOUT_CLASSIFICATION	0.9999792390949138	WITHOUT_CLASSIFICATION	2.0760905086096766E-5	DEFECT
// handler.skippedEntity(name);	WITHOUT_CLASSIFICATION	0.9999951337178964	WITHOUT_CLASSIFICATION	4.8662821035739515E-6	DEFECT
// handler.resolveEntity(publicId, systemId);	WITHOUT_CLASSIFICATION	0.9999543793825975	WITHOUT_CLASSIFICATION	4.562061740253271E-5	DEFECT
// Skips '-'	WITHOUT_CLASSIFICATION	0.9999712306888047	WITHOUT_CLASSIFICATION	2.8769311195326593E-5	DEFECT
// We need to be careful that we don't end up requiring the no namespace package  // just because the feature is unqualified. //	WITHOUT_CLASSIFICATION	0.9999968159473009	WITHOUT_CLASSIFICATION	3.1840526990993495E-6	DEFECT
// handler.notationDecl(name, publicId, systemId);	WITHOUT_CLASSIFICATION	0.9999106346663796	WITHOUT_CLASSIFICATION	8.936533362040875E-5	DEFECT
// handler.unparsedEntityDecl(name, publicId, systemId, notationName);	WITHOUT_CLASSIFICATION	0.9999430753605191	WITHOUT_CLASSIFICATION	5.692463948103983E-5	DEFECT
// SAXXMLHandler	WITHOUT_CLASSIFICATION	0.9999266830528492	WITHOUT_CLASSIFICATION	7.331694715085905E-5	DEFECT
// true if seen xmlns="" declaration	WITHOUT_CLASSIFICATION	0.9999778391376927	WITHOUT_CLASSIFICATION	2.216086230731745E-5	DEFECT
// There really must be a package. //	WITHOUT_CLASSIFICATION	0.999979134895925	WITHOUT_CLASSIFICATION	2.086510407497872E-5	DEFECT
// There really must be a package. //	WITHOUT_CLASSIFICATION	0.999979134895925	WITHOUT_CLASSIFICATION	2.086510407497872E-5	DEFECT
// We must have a qualifier for an attribute that needs qualified. //	WITHOUT_CLASSIFICATION	0.9999967367682003	WITHOUT_CLASSIFICATION	3.2632317997686064E-6	DEFECT
// for any content prefix to URI mapping could be in namespace context	WITHOUT_CLASSIFICATION	0.9999961871914421	WITHOUT_CLASSIFICATION	3.8128085578953403E-6	DEFECT
// Once we see a lookup of an element in the null namespace, we should behave as if there has been an explicit xmlns="" //	WITHOUT_CLASSIFICATION	0.9999955641458108	WITHOUT_CLASSIFICATION	4.435854189216948E-6	DEFECT
// Only if the feature kind is unspecified should we return a match. // Otherwise, we might return an attribute feature when an element is required,  // or vice versa. This also can be controlled by XMLResource.OPTION_LAX_FEATURE_PROCESSING. //	WITHOUT_CLASSIFICATION	0.9999962585083104	WITHOUT_CLASSIFICATION	3.741491689557092E-6	DEFECT
// Sort and eliminate duplicates caused by having both a regular package and a demanded package for the same nsURI. //	WITHOUT_CLASSIFICATION	0.9999963476403714	WITHOUT_CLASSIFICATION	3.6523596287832544E-6	DEFECT
// If we are substituting an EAttribute for an EReference... //	WITHOUT_CLASSIFICATION	0.9999881500215324	WITHOUT_CLASSIFICATION	1.1849978467528643E-5	DEFECT
// Create an simple any type wrapper for the attribute value and use that with the EReference. //	WITHOUT_CLASSIFICATION	0.9999994098705639	WITHOUT_CLASSIFICATION	5.901294361022755E-7	DEFECT
// Make sure that the list will appear to be set to be empty. //	WITHOUT_CLASSIFICATION	0.9999804567877534	WITHOUT_CLASSIFICATION	1.9543212246633787E-5	DEFECT
// xmlns="" declaration // Example #1: <a><q-name>q</q-name><b xmlns="abc"/></a> // Example #2: <a xmlns="abc"><b xmlns=""/><c xmlns="abc2"/></a> // Example #3: <a xmlns:a="abc"><b xmlns:a="abc2"/></a>	WITHOUT_CLASSIFICATION	0.9999952627065061	WITHOUT_CLASSIFICATION	4.7372934939024776E-6	DEFECT
// since xmlns="" is default declaration, remove ""->empty_URI mapping	WITHOUT_CLASSIFICATION	0.9999990549053971	WITHOUT_CLASSIFICATION	9.450946028707526E-7	DEFECT
// record default ns declaration as duplicate if seen QName (#1) or seen xmlns="" (#2)	WITHOUT_CLASSIFICATION	0.9999991485945857	WITHOUT_CLASSIFICATION	8.514054143621455E-7	DEFECT
// record duplicate declaration for a given prefix (#3)	WITHOUT_CLASSIFICATION	0.9999969997351926	WITHOUT_CLASSIFICATION	3.0002648073076917E-6	DEFECT
// recording a first declaration for a given prefix	WITHOUT_CLASSIFICATION	0.9999884494435904	WITHOUT_CLASSIFICATION	1.155055640964828E-5	DEFECT
// extend the array, if necessary	WITHOUT_CLASSIFICATION	0.999999547129468	WITHOUT_CLASSIFICATION	4.52870531873184E-7	DEFECT
// push context	WITHOUT_CLASSIFICATION	0.9999626326712806	WITHOUT_CLASSIFICATION	3.7367328719357523E-5	DEFECT
// resize array, if needed	WITHOUT_CLASSIFICATION	0.9999914427828742	WITHOUT_CLASSIFICATION	8.557217125843729E-6	DEFECT
// bind prefix to uri in current context	WITHOUT_CLASSIFICATION	0.9997818416032216	WITHOUT_CLASSIFICATION	2.181583967783272E-4	DEFECT
// find prefix in current context	WITHOUT_CLASSIFICATION	0.9996719279406066	WITHOUT_CLASSIFICATION	3.280720593934716E-4	DEFECT
// prefix not found	WITHOUT_CLASSIFICATION	0.9997591830314203	WITHOUT_CLASSIFICATION	2.4081696857980537E-4	DEFECT
// find uri in current context	WITHOUT_CLASSIFICATION	0.999843291970079	WITHOUT_CLASSIFICATION	1.5670802992105587E-4	DEFECT
// uri not found	WITHOUT_CLASSIFICATION	0.9998207116484621	WITHOUT_CLASSIFICATION	1.792883515378997E-4	DEFECT
// getDeclaredPrefixAt(int):String	WITHOUT_CLASSIFICATION	0.9999800943974261	WITHOUT_CLASSIFICATION	1.990560257394977E-5	DEFECT
/*     *  Convert attribute values:     *  & to &amp;     *  < to &lt;     *  " to &quot;     *  \t to &#x9;     *  \n to &#xA;     *  \r to &#xD;     */	WITHOUT_CLASSIFICATION	0.9999929281607638	WITHOUT_CLASSIFICATION	7.071839236247023E-6	DEFECT
// Look for a matching element in the specified packages if there are any. //	WITHOUT_CLASSIFICATION	0.999992625993398	WITHOUT_CLASSIFICATION	7.374006602054653E-6	DEFECT
// Look for a substitution group feature in the feature's containing class' containing package. //	WITHOUT_CLASSIFICATION	0.9999696348607914	WITHOUT_CLASSIFICATION	3.0365139208701856E-5	DEFECT
// Look for a substitution group feature in the classifier's containing package. //	WITHOUT_CLASSIFICATION	0.9999566397455795	WITHOUT_CLASSIFICATION	4.33602544204438E-5	DEFECT
// Look for a substitution group feature in the additional packages. //	WITHOUT_CLASSIFICATION	0.9999490954161415	WITHOUT_CLASSIFICATION	5.090458385846496E-5	DEFECT
// Process the super types if that's been specified. //	WITHOUT_CLASSIFICATION	0.9999975119476033	WITHOUT_CLASSIFICATION	2.4880523966897957E-6	DEFECT
// XMIHandler	WITHOUT_CLASSIFICATION	0.9997356523153019	WITHOUT_CLASSIFICATION	2.643476846980195E-4	DEFECT
// xsi:nil // xsi:type // xmlns:xsi // xsi:schemaLocation // xsi:noNamespaceSchemaLocation	WITHOUT_CLASSIFICATION	0.9999787865427353	WITHOUT_CLASSIFICATION	2.1213457264606396E-5	DEFECT
// set serialization options	WITHOUT_CLASSIFICATION	0.9999939642586995	WITHOUT_CLASSIFICATION	6.0357413004829485E-6	DEFECT
// If we can't create a temp file then we have to ignore the option.	WITHOUT_CLASSIFICATION	0.9999371508223802	WITHOUT_CLASSIFICATION	6.284917761974054E-5	DEFECT
// DOM serialization	WITHOUT_CLASSIFICATION	0.9997250626471023	WITHOUT_CLASSIFICATION	2.7493735289771317E-4	DEFECT
// caching turned on by the user	WITHOUT_CLASSIFICATION	0.9999903496609455	WITHOUT_CLASSIFICATION	9.6503390544854E-6	DEFECT
//no caching	WITHOUT_CLASSIFICATION	0.999815971006832	WITHOUT_CLASSIFICATION	1.8402899316814888E-4	DEFECT
// If there is no field, then we can't do this.	WITHOUT_CLASSIFICATION	0.999845255772058	WITHOUT_CLASSIFICATION	1.5474422794207129E-4	DEFECT
// Entities aren't supported for DOM.	WITHOUT_CLASSIFICATION	0.9999391322238323	WITHOUT_CLASSIFICATION	6.0867776167581546E-5	DEFECT
// this is a root element	WITHOUT_CLASSIFICATION	0.9999868506323321	WITHOUT_CLASSIFICATION	1.3149367667975193E-5	DEFECT
// Process XML attributes	WITHOUT_CLASSIFICATION	0.9999971362796385	WITHOUT_CLASSIFICATION	2.8637203615305957E-6	DEFECT
// it's intentional to keep going	WITHOUT_CLASSIFICATION	0.9999896770209104	WITHOUT_CLASSIFICATION	1.0322979089728608E-5	DEFECT
// It's intentional to keep going.	WITHOUT_CLASSIFICATION	0.9999786738735102	WITHOUT_CLASSIFICATION	2.132612648974446E-5	DEFECT
// Process XML elements	WITHOUT_CLASSIFICATION	0.9999974606137471	WITHOUT_CLASSIFICATION	2.5393862529701677E-6	DEFECT
// for performance reasons saveNil and saveElement are not used	WITHOUT_CLASSIFICATION	0.9999836831094867	WITHOUT_CLASSIFICATION	1.6316890513319563E-5	DEFECT
// value[outputPos];	WITHOUT_CLASSIFICATION	0.9999966340355955	WITHOUT_CLASSIFICATION	3.365964404604956E-6	DEFECT
// Every codepoint is supported! 	WITHOUT_CLASSIFICATION	0.9998765668907815	WITHOUT_CLASSIFICATION	1.2343310921853078E-4	DEFECT
// Produce the supplemental character as an entity	WITHOUT_CLASSIFICATION	0.9999983400048671	WITHOUT_CLASSIFICATION	1.6599951329816728E-6	DEFECT
// Normal (BMP) unicode code point. See if we know for a fact that the encoding supports it:	WITHOUT_CLASSIFICATION	0.9999215150057804	WITHOUT_CLASSIFICATION	7.848499421966028E-5	DEFECT
// value[outputPos];	WITHOUT_CLASSIFICATION	0.9999966340355955	WITHOUT_CLASSIFICATION	3.365964404604956E-6	DEFECT
// Go back and add all the XMLNS stuff. //	WITHOUT_CLASSIFICATION	0.9999477156985018	WITHOUT_CLASSIFICATION	5.228430149810173E-5	DEFECT
// First try to see if this package's implementation class has an eInstance. //	WITHOUT_CLASSIFICATION	0.9999921952808882	WITHOUT_CLASSIFICATION	7.804719111673534E-6	DEFECT
// Check if it's an anonymous type. //	WITHOUT_CLASSIFICATION	0.9999977587755325	WITHOUT_CLASSIFICATION	2.2412244675271105E-6	DEFECT
// We only get here if we should do this. //	WITHOUT_CLASSIFICATION	0.9988280429202168	WITHOUT_CLASSIFICATION	0.0011719570797832065	DEFECT
// 2^N // 2^N-1    	WITHOUT_CLASSIFICATION	0.9999191657244978	WITHOUT_CLASSIFICATION	8.083427550222411E-5	DEFECT
// Every codepoint is supported! 	WITHOUT_CLASSIFICATION	0.9998765668907815	WITHOUT_CLASSIFICATION	1.2343310921853078E-4	DEFECT
// Normal (BMP) unicode code point. See if we know for a fact that the encoding supports it:	WITHOUT_CLASSIFICATION	0.9999215150057804	WITHOUT_CLASSIFICATION	7.848499421966028E-5	DEFECT
/*     *  Convert element values:     *  & to &amp;     *  < to &lt;     *  " to &quot;     *  \n to line separator     *  \r should be escaped to &xD;     */	WITHOUT_CLASSIFICATION	0.9999984677988863	WITHOUT_CLASSIFICATION	1.532201113703363E-6	DEFECT
// We not sure the encoding supports this code point, so we write it as a character entity reference.	WITHOUT_CLASSIFICATION	0.9995985274796568	WITHOUT_CLASSIFICATION	4.014725203432308E-4	DEFECT
/*     *  Convert:     *  \n to line separator     */	WITHOUT_CLASSIFICATION	0.9999882390436563	WITHOUT_CLASSIFICATION	1.1760956343708332E-5	DEFECT
// continue with default processing	WITHOUT_CLASSIFICATION	0.9999970350994193	WITHOUT_CLASSIFICATION	2.9649005807416398E-6	DEFECT
// Fill 7 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 4 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 13 of value (byte) -19 // Fill 5 of value (byte) 33 // Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999950862564115	WITHOUT_CLASSIFICATION	4.91374358849636E-6	DEFECT
// write doctype	WITHOUT_CLASSIFICATION	0.9999690037730926	WITHOUT_CLASSIFICATION	3.0996226907452964E-5	DEFECT
// Avoid a function call... //	WITHOUT_CLASSIFICATION	0.9999396313845752	WITHOUT_CLASSIFICATION	6.0368615424731374E-5	DEFECT
// create dummy documentElement	WITHOUT_CLASSIFICATION	0.9999748498914729	WITHOUT_CLASSIFICATION	2.5150108527069257E-5	DEFECT
// no property	WITHOUT_CLASSIFICATION	0.9998938996524183	WITHOUT_CLASSIFICATION	1.0610034758169792E-4	DEFECT
// no property	WITHOUT_CLASSIFICATION	0.9998938996524183	WITHOUT_CLASSIFICATION	1.0610034758169792E-4	DEFECT
// boolean not	WITHOUT_CLASSIFICATION	0.9999738916649267	WITHOUT_CLASSIFICATION	2.6108335073355314E-5	DEFECT
// ownedProperty???	WITHOUT_CLASSIFICATION	0.9999182163678532	WITHOUT_CLASSIFICATION	8.178363214680199E-5	DEFECT
// We will use an xmi:Extension element for these	WITHOUT_CLASSIFICATION	0.9999760496323234	WITHOUT_CLASSIFICATION	2.395036767663704E-5	DEFECT
// set parser features and properties	WITHOUT_CLASSIFICATION	0.9999695784541258	WITHOUT_CLASSIFICATION	3.0421545874168762E-5	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.9999933771872096	WITHOUT_CLASSIFICATION	6.622812790395057E-6	DEFECT
// Initialize simple dependencies	WITHOUT_CLASSIFICATION	0.9999991823946333	WITHOUT_CLASSIFICATION	8.176053668014476E-7	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.9999990592002509	WITHOUT_CLASSIFICATION	9.407997490422834E-7	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.9999990592002509	WITHOUT_CLASSIFICATION	9.407997490422834E-7	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.99999732803041	WITHOUT_CLASSIFICATION	2.671969590056063E-6	DEFECT
// Register package validator	WITHOUT_CLASSIFICATION	0.9999988601197599	WITHOUT_CLASSIFICATION	1.1398802400978825E-6	DEFECT
// Register package validator	WITHOUT_CLASSIFICATION	0.9999988601197599	WITHOUT_CLASSIFICATION	1.1398802400978825E-6	DEFECT
// Mark meta-data to indicate it can't be changed	WITHOUT_CLASSIFICATION	0.9999930471702011	WITHOUT_CLASSIFICATION	6.95282979884545E-6	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.9999982092566939	WITHOUT_CLASSIFICATION	1.7907433059583226E-6	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.9999982092566939	WITHOUT_CLASSIFICATION	1.7907433059583226E-6	DEFECT
// Create enums	WITHOUT_CLASSIFICATION	0.9999951964941937	WITHOUT_CLASSIFICATION	4.803505806314458E-6	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.9999902001708177	WITHOUT_CLASSIFICATION	9.799829182323957E-6	DEFECT
// Obtain other dependent packages	WITHOUT_CLASSIFICATION	0.9999916577067488	WITHOUT_CLASSIFICATION	8.342293251226973E-6	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.9999995068117644	WITHOUT_CLASSIFICATION	4.93188235584206E-7	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.999998067601732	WITHOUT_CLASSIFICATION	1.932398267952577E-6	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.9999893124183389	WITHOUT_CLASSIFICATION	1.0687581661237084E-5	DEFECT
// Initialize enums and add enum literals	WITHOUT_CLASSIFICATION	0.9999976262966784	WITHOUT_CLASSIFICATION	2.3737033215822825E-6	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.9999954956836732	WITHOUT_CLASSIFICATION	4.5043163268436935E-6	DEFECT
// Create data types	WITHOUT_CLASSIFICATION	0.9999969529399257	WITHOUT_CLASSIFICATION	3.0470600742193424E-6	DEFECT
// Initialize data types	WITHOUT_CLASSIFICATION	0.9999943799091318	WITHOUT_CLASSIFICATION	5.620090868240852E-6	DEFECT
// Ensure correct indentation for a top level attribute. // // elementNames.add("mark");	WITHOUT_CLASSIFICATION	0.9999854753644041	WITHOUT_CLASSIFICATION	1.4524635595960544E-5	DEFECT
// xmi:id // xmi:XMI // xmi:type // xmi:version // xmlns:xmi	WITHOUT_CLASSIFICATION	0.9998789863047967	WITHOUT_CLASSIFICATION	1.2101369520324465E-4	DEFECT
// no property // no property // no property	WITHOUT_CLASSIFICATION	0.9998203498411585	WITHOUT_CLASSIFICATION	1.7965015884147077E-4	DEFECT
// no property // no property	WITHOUT_CLASSIFICATION	0.9998600157064091	WITHOUT_CLASSIFICATION	1.399842935909364E-4	DEFECT
//  Interpret the body of a nested ownedComment as a comment-type and assign it as the EAnnotation.source of the parent. //	WITHOUT_CLASSIFICATION	0.9999691093209349	WITHOUT_CLASSIFICATION	3.089067906522312E-5	DEFECT
// EAnnotations denoting specific EMOF elements are serialized as their EMOF elements.  // Other EAnnotations are serialized as xmi:Extensions. //	WITHOUT_CLASSIFICATION	0.9999414653831515	WITHOUT_CLASSIFICATION	5.853461684852236E-5	DEFECT
// register default options	WITHOUT_CLASSIFICATION	0.9999995464320539	WITHOUT_CLASSIFICATION	4.535679459903487E-7	DEFECT
/*   * Create an XML processor that is aware of XML Schema specified.   * @param schemaURIs - a URI {@link org.eclipse.common.util.URI} which point to an XML Schema   */	WITHOUT_CLASSIFICATION	0.9999988733489744	WITHOUT_CLASSIFICATION	1.126651025598283E-6	DEFECT
// Assume the class isn't available.	WITHOUT_CLASSIFICATION	0.999972283283438	WITHOUT_CLASSIFICATION	2.771671656196345E-5	DEFECT
//XMLNamespaceFactory	WITHOUT_CLASSIFICATION	0.9998454320133642	WITHOUT_CLASSIFICATION	1.5456798663571444E-4	DEFECT
// DocumentRoot	WITHOUT_CLASSIFICATION	0.9999723640699321	WITHOUT_CLASSIFICATION	2.7635930067949454E-5	DEFECT
//XMLNamespacePackage	WITHOUT_CLASSIFICATION	0.9998351415401954	WITHOUT_CLASSIFICATION	1.6485845980452474E-4	DEFECT
//SpaceType	WITHOUT_CLASSIFICATION	0.9997665001786487	WITHOUT_CLASSIFICATION	2.3349982135129806E-4	DEFECT
// http:///org/eclipse/emf/ecore/util/ExtendedMetaData	WITHOUT_CLASSIFICATION	0.9999110686358164	WITHOUT_CLASSIFICATION	8.893136418367286E-5	DEFECT
//XMLNamespacePackageImpl	WITHOUT_CLASSIFICATION	0.9998806284598871	WITHOUT_CLASSIFICATION	1.1937154011281873E-4	DEFECT
//XMLNamespaceDocumentRootImpl	WITHOUT_CLASSIFICATION	0.9999192015271849	WITHOUT_CLASSIFICATION	8.079847281508069E-5	DEFECT
//XMLNamespaceFactoryImpl	WITHOUT_CLASSIFICATION	0.9998681682767253	WITHOUT_CLASSIFICATION	1.3183172327459522E-4	DEFECT
//XMLNamespaceValidator	WITHOUT_CLASSIFICATION	0.9998593180582233	WITHOUT_CLASSIFICATION	1.4068194177676676E-4	DEFECT
// AnyType	WITHOUT_CLASSIFICATION	0.9999095165460435	WITHOUT_CLASSIFICATION	9.04834539564349E-5	DEFECT
// SimpleAnyType	WITHOUT_CLASSIFICATION	0.9999803374858365	WITHOUT_CLASSIFICATION	1.9662514163579797E-5	DEFECT
// ProcessingInstructionType	WITHOUT_CLASSIFICATION	0.9999985299833498	WITHOUT_CLASSIFICATION	1.4700166501789403E-6	DEFECT
//XMLTypeFactory	WITHOUT_CLASSIFICATION	0.9988047894651491	WITHOUT_CLASSIFICATION	0.0011952105348509486	DEFECT
//XMLTypePackage	WITHOUT_CLASSIFICATION	0.9984457786652849	WITHOUT_CLASSIFICATION	0.001554221334714985	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.9999902001708177	WITHOUT_CLASSIFICATION	9.799829182323957E-6	DEFECT
// Obtain other dependent packages	WITHOUT_CLASSIFICATION	0.9999916577067488	WITHOUT_CLASSIFICATION	8.342293251226973E-6	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.9999995068117644	WITHOUT_CLASSIFICATION	4.93188235584206E-7	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.9999893124183389	WITHOUT_CLASSIFICATION	1.0687581661237084E-5	DEFECT
// Initialize classes and features; add operations and parameters	WITHOUT_CLASSIFICATION	0.9999987329766953	WITHOUT_CLASSIFICATION	1.2670233046854628E-6	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.9999954956836732	WITHOUT_CLASSIFICATION	4.5043163268436935E-6	DEFECT
// Create data types	WITHOUT_CLASSIFICATION	0.9999969529399257	WITHOUT_CLASSIFICATION	3.0470600742193424E-6	DEFECT
// Initialize data types	WITHOUT_CLASSIFICATION	0.9999943799091318	WITHOUT_CLASSIFICATION	5.620090868240852E-6	DEFECT
// {	WITHOUT_CLASSIFICATION	0.9998931989343998	WITHOUT_CLASSIFICATION	1.068010656002156E-4	DEFECT
// Create annotations // http://www.w3.org/XML/1998/namespace	WITHOUT_CLASSIFICATION	0.9999808221750364	WITHOUT_CLASSIFICATION	1.9177824963641896E-5	DEFECT
// Don't create anything.	WITHOUT_CLASSIFICATION	0.9999238619142946	WITHOUT_CLASSIFICATION	7.613808570541619E-5	DEFECT
//XMLTypePackageImpl	WITHOUT_CLASSIFICATION	0.999153889460673	WITHOUT_CLASSIFICATION	8.46110539327163E-4	DEFECT
//AnyTypeImpl	WITHOUT_CLASSIFICATION	0.9994916928278721	WITHOUT_CLASSIFICATION	5.083071721278267E-4	DEFECT
//ProcessingInstructionTypeImpl	WITHOUT_CLASSIFICATION	0.9999859666564462	WITHOUT_CLASSIFICATION	1.4033343553628708E-5	DEFECT
// do not validate on load. Check validity using Diagnostician.	WITHOUT_CLASSIFICATION	0.9999043250896055	WITHOUT_CLASSIFICATION	9.567491039453533E-5	DEFECT
// do not validate on load. Check validity using Diagnostician.	WITHOUT_CLASSIFICATION	0.9999043250896055	WITHOUT_CLASSIFICATION	9.567491039453533E-5	DEFECT
//XMLTypeFactoryImpl	WITHOUT_CLASSIFICATION	0.9992337721333857	WITHOUT_CLASSIFICATION	7.662278666143511E-4	DEFECT
//DocumentRootImpl	WITHOUT_CLASSIFICATION	0.9998063827688759	WITHOUT_CLASSIFICATION	1.9361723112403808E-4	DEFECT
//SimpleAnyTypeImpl	WITHOUT_CLASSIFICATION	0.9997552027434097	WITHOUT_CLASSIFICATION	2.44797256590337E-4	DEFECT
//System.err.println("Starts at "+index);	WITHOUT_CLASSIFICATION	0.9999912014333028	WITHOUT_CLASSIFICATION	8.798566697222663E-6	DEFECT
//System.err.println("Starts at "+index);	WITHOUT_CLASSIFICATION	0.9999912014333028	WITHOUT_CLASSIFICATION	8.798566697222663E-6	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9998741272583022	WITHOUT_CLASSIFICATION	1.2587274169791147E-4	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9998741272583022	WITHOUT_CLASSIFICATION	1.2587274169791147E-4	DEFECT
// Skips a white space.	WITHOUT_CLASSIFICATION	0.9999923728162706	WITHOUT_CLASSIFICATION	7.627183729383043E-6	DEFECT
// Skips characters between '#' and a line end.	WITHOUT_CLASSIFICATION	0.9999990683491985	WITHOUT_CLASSIFICATION	9.316508014514541E-7	DEFECT
// Strips an escaped white space.	WITHOUT_CLASSIFICATION	0.9999985079273664	WITHOUT_CLASSIFICATION	1.492072633613553E-6	DEFECT
// Other escaped character.	WITHOUT_CLASSIFICATION	0.9999978737039379	WITHOUT_CLASSIFICATION	2.126296062160951E-6	DEFECT
// As is.	WITHOUT_CLASSIFICATION	0.999899406890808	WITHOUT_CLASSIFICATION	1.0059310919193176E-4	DEFECT
// ret.next is null.	WITHOUT_CLASSIFICATION	0.9999937866950661	WITHOUT_CLASSIFICATION	6.213304933887663E-6	DEFECT
// {n}	WITHOUT_CLASSIFICATION	0.9999000789137517	WITHOUT_CLASSIFICATION	9.992108624835593E-5	DEFECT
// X{2,6} -> XX(X(X(XX?)?)?)?	WITHOUT_CLASSIFICATION	0.9998379668254943	WITHOUT_CLASSIFICATION	1.6203317450557385E-4	DEFECT
// Token.CLOSURE	WITHOUT_CLASSIFICATION	0.9998499900002176	WITHOUT_CLASSIFICATION	1.5000999978244912E-4	DEFECT
//System.err.println("DEBUG: matchEnd="+matchEnd);	WITHOUT_CLASSIFICATION	0.9999414517036646	WITHOUT_CLASSIFICATION	5.854829633559485E-5	DEFECT
//System.err.println("DEBUG: matchEnd="+matchEnd);	WITHOUT_CLASSIFICATION	0.9999414517036646	WITHOUT_CLASSIFICATION	5.854829633559485E-5	DEFECT
/*           * The pattern has only fixed string.           * The engine uses Boyer-Moore.           */	WITHOUT_CLASSIFICATION	0.9999294603939908	WITHOUT_CLASSIFICATION	7.053960600919939E-5	DEFECT
//System.err.println("DEBUG: fixed-only: "+this.fixedString);	WITHOUT_CLASSIFICATION	0.999677159614172	WITHOUT_CLASSIFICATION	3.2284038582797847E-4	DEFECT
//System.err.println("DEBUG: fixed-only: "+this.fixedString);	WITHOUT_CLASSIFICATION	0.999677159614172	WITHOUT_CLASSIFICATION	3.2284038582797847E-4	DEFECT
//System.err.println("DEBUG: fixed-only: "+this.fixedString);	WITHOUT_CLASSIFICATION	0.999677159614172	WITHOUT_CLASSIFICATION	3.2284038582797847E-4	DEFECT
/*           * The pattern contains a fixed string.           * The engine checks with Boyer-Moore whether the text contains the fixed string or not.           * If not, it return with false.           */	WITHOUT_CLASSIFICATION	0.9998940976160623	WITHOUT_CLASSIFICATION	1.0590238393774031E-4	DEFECT
/*           * The pattern contains a fixed string.           * The engine checks with Boyer-Moore whether the text contains the fixed string or not.           * If not, it return with false.           */	WITHOUT_CLASSIFICATION	0.9998940976160623	WITHOUT_CLASSIFICATION	1.0590238393774031E-4	DEFECT
//System.err.println("Non-match in fixed-string search.");	WITHOUT_CLASSIFICATION	0.999989931408974	WITHOUT_CLASSIFICATION	1.0068591026060874E-5	DEFECT
//System.err.println("Non-match in fixed-string search.");	WITHOUT_CLASSIFICATION	0.999989931408974	WITHOUT_CLASSIFICATION	1.0068591026060874E-5	DEFECT
//System.err.println("Non-match in fixed-string search.");	WITHOUT_CLASSIFICATION	0.999989931408974	WITHOUT_CLASSIFICATION	1.0068591026060874E-5	DEFECT
/*           * Checks whether the expression starts with ".*".           */	WITHOUT_CLASSIFICATION	0.9999689271864088	WITHOUT_CLASSIFICATION	3.107281359113441E-5	DEFECT
/*           * Checks whether the expression starts with ".*".           */	WITHOUT_CLASSIFICATION	0.9999689271864088	WITHOUT_CLASSIFICATION	3.107281359113441E-5	DEFECT
/*           * Checks whether the expression starts with ".*".           */	WITHOUT_CLASSIFICATION	0.9999689271864088	WITHOUT_CLASSIFICATION	3.107281359113441E-5	DEFECT
/*           * Optimization against the first character.           */	WITHOUT_CLASSIFICATION	0.9999929093129786	WITHOUT_CLASSIFICATION	7.090687021432968E-6	DEFECT
/*           * Optimization against the first character.           */	WITHOUT_CLASSIFICATION	0.9999929093129786	WITHOUT_CLASSIFICATION	7.090687021432968E-6	DEFECT
//System.err.println("DEBUG: with firstchar-matching: "+this.firstChar);	WITHOUT_CLASSIFICATION	0.9999750832598026	WITHOUT_CLASSIFICATION	2.4916740197434944E-5	DEFECT
//System.err.println("DEBUG: with firstchar-matching: "+this.firstChar);	WITHOUT_CLASSIFICATION	0.9999750832598026	WITHOUT_CLASSIFICATION	2.4916740197434944E-5	DEFECT
/*           * Straightforward matching.           */	WITHOUT_CLASSIFICATION	0.9999965358355108	WITHOUT_CLASSIFICATION	3.4641644890825163E-6	DEFECT
/*           * Straightforward matching.           */	WITHOUT_CLASSIFICATION	0.9999965358355108	WITHOUT_CLASSIFICATION	3.4641644890825163E-6	DEFECT
// Internal use only. // The @ always matches line beginnings.	WITHOUT_CLASSIFICATION	0.9999956463059255	WITHOUT_CLASSIFICATION	4.353694074408923E-6	DEFECT
// Internal use only. // The @ always matches line beginnings.	WITHOUT_CLASSIFICATION	0.9999956463059255	WITHOUT_CLASSIFICATION	4.353694074408923E-6	DEFECT
// switch anchor type	WITHOUT_CLASSIFICATION	0.999996219922427	WITHOUT_CLASSIFICATION	3.7800775729882583E-6	DEFECT
// switch anchor type	WITHOUT_CLASSIFICATION	0.999996219922427	WITHOUT_CLASSIFICATION	3.7800775729882583E-6	DEFECT
// ********	WITHOUT_CLASSIFICATION	0.9999375796100634	WITHOUT_CLASSIFICATION	6.242038993659693E-5	DEFECT
// ********	WITHOUT_CLASSIFICATION	0.9999375796100634	WITHOUT_CLASSIFICATION	6.242038993659693E-5	DEFECT
/*                       * Saves current position to avoid                       * zero-width repeats.                       */	WITHOUT_CLASSIFICATION	0.9998867670622642	WITHOUT_CLASSIFICATION	1.132329377357909E-4	DEFECT
/*                       * Saves current position to avoid                       * zero-width repeats.                       */	WITHOUT_CLASSIFICATION	0.9998867670622642	WITHOUT_CLASSIFICATION	1.132329377357909E-4	DEFECT
/*           * Optimization against the first character.           */	WITHOUT_CLASSIFICATION	0.9999929093129786	WITHOUT_CLASSIFICATION	7.090687021432968E-6	DEFECT
//System.err.println("DEBUG: with firstchar-matching: "+this.firstChar);	WITHOUT_CLASSIFICATION	0.9999750832598026	WITHOUT_CLASSIFICATION	2.4916740197434944E-5	DEFECT
/*           * Straightforward matching.           */	WITHOUT_CLASSIFICATION	0.9999965358355108	WITHOUT_CLASSIFICATION	3.4641644890825163E-6	DEFECT
// switch anchor type	WITHOUT_CLASSIFICATION	0.999996219922427	WITHOUT_CLASSIFICATION	3.7800775729882583E-6	DEFECT
// ********	WITHOUT_CLASSIFICATION	0.9999375796100634	WITHOUT_CLASSIFICATION	6.242038993659693E-5	DEFECT
/*                       * Saves current position to avoid                       * zero-width repeats.                       */	WITHOUT_CLASSIFICATION	0.9998867670622642	WITHOUT_CLASSIFICATION	1.132329377357909E-4	DEFECT
// "w"	WITHOUT_CLASSIFICATION	0.9998928387277458	WITHOUT_CLASSIFICATION	1.0716127225416008E-4	DEFECT
// Op.CHAR	WITHOUT_CLASSIFICATION	0.9999692939937372	WITHOUT_CLASSIFICATION	3.0706006262749393E-5	DEFECT
//+this.fixedString	WITHOUT_CLASSIFICATION	0.9998374847306799	WITHOUT_CLASSIFICATION	1.6251526932005802E-4	DEFECT
// This pattern has a fixed string of which length is more than one.	WITHOUT_CLASSIFICATION	0.9997671243916469	WITHOUT_CLASSIFICATION	2.3287560835296545E-4	DEFECT
// Cf // Mn // Mc	WITHOUT_CLASSIFICATION	0.9999541201427945	WITHOUT_CLASSIFICATION	4.587985720546395E-5	DEFECT
// "u"	WITHOUT_CLASSIFICATION	0.999887172271123	WITHOUT_CLASSIFICATION	1.1282772887697201E-4	DEFECT
/*    public ParseException(String mes) {        this(mes, -1);    }    */	WITHOUT_CLASSIFICATION	0.9999997353727886	WITHOUT_CLASSIFICATION	2.646272113971806E-7	DEFECT
// L // L // L // L // L // N // N // N // Mc	WITHOUT_CLASSIFICATION	0.9999511270916934	WITHOUT_CLASSIFICATION	4.887290830651508E-5	DEFECT
// Single character // [a-zA-Z] // [^a-zA-Z] // ^ $ ... // literal String  // X* // X*? // X? // X?? // X|Y // ( and ) // \1 \2 ... // (?=...) // (?!...) // (?<=...) // (?<!...) // (?>...) // (?ims-ims:...) // (?(..)yes|no)	WITHOUT_CLASSIFICATION	0.9999994140044927	WITHOUT_CLASSIFICATION	5.859955072928542E-7	DEFECT
// Legacy word characters	WITHOUT_CLASSIFICATION	0.9999920045135998	WITHOUT_CLASSIFICATION	7.995486400232434E-6	DEFECT
// for UNION	WITHOUT_CLASSIFICATION	0.9999103018803578	WITHOUT_CLASSIFICATION	8.969811964225812E-5	DEFECT
//System.err.println("Creates UnionOp");	WITHOUT_CLASSIFICATION	0.9999898615068944	WITHOUT_CLASSIFICATION	1.0138493105656534E-5	DEFECT
// ModifierOp	WITHOUT_CLASSIFICATION	0.9999274475549147	WITHOUT_CLASSIFICATION	7.255244508531566E-5	DEFECT
// for CLOSURE, QUESTION	WITHOUT_CLASSIFICATION	0.9999826528643869	WITHOUT_CLASSIFICATION	1.7347135613123448E-5	DEFECT
// for UNIoN	WITHOUT_CLASSIFICATION	0.999935004731326	WITHOUT_CLASSIFICATION	6.499526867395304E-5	DEFECT
// STRING	WITHOUT_CLASSIFICATION	0.9999292140715291	WITHOUT_CLASSIFICATION	7.078592847089085E-5	DEFECT
// RANGE, NRANGE	WITHOUT_CLASSIFICATION	0.9999571249541738	WITHOUT_CLASSIFICATION	4.287504582615702E-5	DEFECT
//case 0x0b:  ret = "\\v";  break;	WITHOUT_CLASSIFICATION	0.9993842155684046	WITHOUT_CLASSIFICATION	6.157844315954593E-4	DEFECT
// for RANGE or NRANGE	WITHOUT_CLASSIFICATION	0.9999598840090554	WITHOUT_CLASSIFICATION	4.01159909446183E-5	DEFECT
//System.err.println("Token#addRange(): "+start+" "+end);	WITHOUT_CLASSIFICATION	0.9999085712013722	WITHOUT_CLASSIFICATION	9.142879862777863E-5	DEFECT
//System.err.println("Do sorting: "+this.ranges.length);	WITHOUT_CLASSIFICATION	0.9999619264376255	WITHOUT_CLASSIFICATION	3.807356237457096E-5	DEFECT
// Index of writing point // Index of processing point	WITHOUT_CLASSIFICATION	0.9999906606903988	WITHOUT_CLASSIFICATION	9.339309601308959E-6	DEFECT
//System.err.println("Token#substractRanges(): Entry: "+this.ranges.length+", "+tok.ranges.length);	WITHOUT_CLASSIFICATION	0.9999437654610205	WITHOUT_CLASSIFICATION	5.623453897948574E-5	DEFECT
// Not overlapped // src: o-----o // sub:         o-----o // res: o-----o // Reuse sub	WITHOUT_CLASSIFICATION	0.9999780336440593	WITHOUT_CLASSIFICATION	2.1966355940641398E-5	DEFECT
// src:    o--------o // sub:  o------------o // res: empty // Reuse sub	WITHOUT_CLASSIFICATION	0.9998843068114746	WITHOUT_CLASSIFICATION	1.1569318852553429E-4	DEFECT
// src:    o--------o // sub:  o----o // res:       o-----o // Reuse src(=res)	WITHOUT_CLASSIFICATION	0.9998777704132327	WITHOUT_CLASSIFICATION	1.2222958676731888E-4	DEFECT
// src:    o--------o // sub:          o----o // res:    o-----o // Reuse sub	WITHOUT_CLASSIFICATION	0.9998178033535063	WITHOUT_CLASSIFICATION	1.8219664649368487E-4	DEFECT
// Not overlapped // src:          o-----o // sub: o----o	WITHOUT_CLASSIFICATION	0.9999654929187967	WITHOUT_CLASSIFICATION	3.450708120343072E-5	DEFECT
// this.ranges is sorted and compacted.	WITHOUT_CLASSIFICATION	0.9999932527392577	WITHOUT_CLASSIFICATION	6.74726074233505E-6	DEFECT
// Not overlapped // src1: o-----o // src2:         o-----o // res:  empty // Reuse src2	WITHOUT_CLASSIFICATION	0.9999778068908816	WITHOUT_CLASSIFICATION	2.21931091184382E-5	DEFECT
// Overlapped // src1:    o--------o // src2:  o----o // src2:      o----o // src2:          o----o // src2:  o------------o	WITHOUT_CLASSIFICATION	0.9999307495380269	WITHOUT_CLASSIFICATION	6.925046197312337E-5	DEFECT
// src1:    o--------o // src2:  o------------o // res:     o--------o // Reuse src2	WITHOUT_CLASSIFICATION	0.999857659145128	WITHOUT_CLASSIFICATION	1.423408548719443E-4	DEFECT
// src1:    o--------o // src2:  o----o // res:     o--o // Reuse the rest of src1	WITHOUT_CLASSIFICATION	0.999858767618302	WITHOUT_CLASSIFICATION	1.4123238169811155E-4	DEFECT
// src1:    o--------o // src2:      o----o // res:       o----o // Reuse the rest of src1	WITHOUT_CLASSIFICATION	0.999858767618302	WITHOUT_CLASSIFICATION	1.4123238169811155E-4	DEFECT
// Not overlapped // src1:          o-----o // src2: o----o	WITHOUT_CLASSIFICATION	0.9999739201935005	WITHOUT_CLASSIFICATION	2.6079806499455248E-5	DEFECT
// 32 is the number of bits in `int'.	WITHOUT_CLASSIFICATION	0.9999830078610035	WITHOUT_CLASSIFICATION	1.699213899661104E-5	DEFECT
// s&0x1f : 0-31	WITHOUT_CLASSIFICATION	0.9997301859114888	WITHOUT_CLASSIFICATION	2.698140885112988E-4	DEFECT
// '|' // '*' // '+' // '?' // '(' // ')' // '.' // '[' // '\' // '^' // '$' // '(?:' // '(?=' // '(?!' // '(?<=' // '(?<!' // '(?>' // '(?[' // '[:' in a character class // '(?#' // '(?' [\-,a-z,A-Z] // '(?(' // '-[' in a character class	WITHOUT_CLASSIFICATION	0.9999993791523025	WITHOUT_CLASSIFICATION	6.20847697539562E-7	DEFECT
//this.setLocale(Locale.getDefault());	WITHOUT_CLASSIFICATION	0.9999879619518783	WITHOUT_CLASSIFICATION	1.2038048121769775E-5	DEFECT
//this.setLocale(locale);	WITHOUT_CLASSIFICATION	0.9999788165412499	WITHOUT_CLASSIFICATION	2.118345875009626E-5	DEFECT
// In a character class, this.chardata has one character, that is to say, // a pair of surrogates is composed and stored to this.chardata.	WITHOUT_CLASSIFICATION	0.9999759713876939	WITHOUT_CLASSIFICATION	2.402861230610061E-5	DEFECT
// Through down	WITHOUT_CLASSIFICATION	0.9956912406075666	WITHOUT_CLASSIFICATION	0.004308759392433359	DEFECT
// Options	WITHOUT_CLASSIFICATION	0.9999894169654432	WITHOUT_CLASSIFICATION	1.0583034556787523E-5	DEFECT
// conditional // this.offsets points the next of '('.	WITHOUT_CLASSIFICATION	0.9999874706570725	WITHOUT_CLASSIFICATION	1.2529342927582745E-5	DEFECT
// '|'	WITHOUT_CLASSIFICATION	0.9999179169597581	WITHOUT_CLASSIFICATION	8.208304024192806E-5	DEFECT
//tok = Token.createConcat(tok, this.parseFactor());	WITHOUT_CLASSIFICATION	0.9999666291906468	WITHOUT_CLASSIFICATION	3.3370809353163164E-5	DEFECT
// ----------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.999880241477873	WITHOUT_CLASSIFICATION	1.1975852212700191E-4	DEFECT
// ----------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.999880241477873	WITHOUT_CLASSIFICATION	1.1975852212700191E-4	DEFECT
// ')'	WITHOUT_CLASSIFICATION	0.999936030654412	WITHOUT_CLASSIFICATION	6.396934558806958E-5	DEFECT
// ')'	WITHOUT_CLASSIFICATION	0.999936030654412	WITHOUT_CLASSIFICATION	6.396934558806958E-5	DEFECT
// ')'	WITHOUT_CLASSIFICATION	0.999936030654412	WITHOUT_CLASSIFICATION	6.396934558806958E-5	DEFECT
// X+ -> XX*	WITHOUT_CLASSIFICATION	0.999492526324778	WITHOUT_CLASSIFICATION	5.074736752220787E-4	DEFECT
// X? -> X|	WITHOUT_CLASSIFICATION	0.9997586316229845	WITHOUT_CLASSIFICATION	2.413683770154315E-4	DEFECT
// Skips ')'	WITHOUT_CLASSIFICATION	0.9999735344589853	WITHOUT_CLASSIFICATION	2.6465541014657558E-5	DEFECT
// Skips ')'	WITHOUT_CLASSIFICATION	0.9999735344589853	WITHOUT_CLASSIFICATION	2.6465541014657558E-5	DEFECT
// this.offset points the next of '('	WITHOUT_CLASSIFICATION	0.9999742571116456	WITHOUT_CLASSIFICATION	2.57428883543867E-5	DEFECT
// Parses a condition.	WITHOUT_CLASSIFICATION	0.999996301779372	WITHOUT_CLASSIFICATION	3.698220628048686E-6	DEFECT
// Points '('.	WITHOUT_CLASSIFICATION	0.9999673957939267	WITHOUT_CLASSIFICATION	3.260420607330886E-5	DEFECT
// Parses yes/no-patterns.	WITHOUT_CLASSIFICATION	0.9999941188678131	WITHOUT_CLASSIFICATION	5.881132186902265E-6	DEFECT
// this.offset points the next of '?'. // modifiers ::= [imsw]* ('-' [imsw]*)? ':'	WITHOUT_CLASSIFICATION	0.9999936951418298	WITHOUT_CLASSIFICATION	6.304858170171244E-6	DEFECT
// '-' or ':'?	WITHOUT_CLASSIFICATION	0.9999512846423539	WITHOUT_CLASSIFICATION	4.871535764602327E-5	DEFECT
// ':'?	WITHOUT_CLASSIFICATION	0.9999098666924854	WITHOUT_CLASSIFICATION	9.013330751467322E-5	DEFECT
// such as (?-i)	WITHOUT_CLASSIFICATION	0.9999941378836186	WITHOUT_CLASSIFICATION	5.862116381405934E-6	DEFECT
// Must be in 0x0040-0x005f	WITHOUT_CLASSIFICATION	0.9999954371913808	WITHOUT_CLASSIFICATION	4.562808619122052E-6	DEFECT
// through down	WITHOUT_CLASSIFICATION	0.9995709293015165	WITHOUT_CLASSIFICATION	4.2907069848355315E-4	DEFECT
// this.offset -> next of '{'	WITHOUT_CLASSIFICATION	0.9999833599258916	WITHOUT_CLASSIFICATION	1.664007410844388E-5	DEFECT
// {min,max}	WITHOUT_CLASSIFICATION	0.999969395713057	WITHOUT_CLASSIFICATION	3.0604286943068577E-5	DEFECT
// assume {min,}	WITHOUT_CLASSIFICATION	0.9999930895296545	WITHOUT_CLASSIFICATION	6.9104703455046E-6	DEFECT
//System.err.println("CLOSURE: "+min+", "+max);	WITHOUT_CLASSIFICATION	0.9999491311669656	WITHOUT_CLASSIFICATION	5.086883303429921E-5	DEFECT
// '(?:' // '(?(' // (?modifiers ... )	WITHOUT_CLASSIFICATION	0.9999578181465676	WITHOUT_CLASSIFICATION	4.218185343244788E-5	DEFECT
// Skips '.'	WITHOUT_CLASSIFICATION	0.9999641784290062	WITHOUT_CLASSIFICATION	3.5821570993823866E-5	DEFECT
// handle category escape	WITHOUT_CLASSIFICATION	0.9999869290628187	WITHOUT_CLASSIFICATION	1.3070937181287802E-5	DEFECT
// '['	WITHOUT_CLASSIFICATION	0.9999238383747606	WITHOUT_CLASSIFICATION	7.61616252393411E-5	DEFECT
// '^'	WITHOUT_CLASSIFICATION	0.9999171810087031	WITHOUT_CLASSIFICATION	8.281899129688237E-5	DEFECT
// Literal char // . // XY // X|Y|Z // X* // [a-zA-Z] etc. // [^a-zA-Z] etc. // (X) or (?:X) // // ^ $ \b \B \< \> \A \Z \z // *? +? // strings // back references // (?=...) // (?!...) // (?<=...) // (?<!...) // (?>...) // (?ims-ims:...) // (?(...)yes|no)	WITHOUT_CLASSIFICATION	0.9999981519956601	WITHOUT_CLASSIFICATION	1.8480043398986868E-6	DEFECT
// if not shorthands... // Here is no '-'.	WITHOUT_CLASSIFICATION	0.9998947671850015	WITHOUT_CLASSIFICATION	1.05232814998563E-4	DEFECT
//tok.dumpRanges();	WITHOUT_CLASSIFICATION	0.9999464134134436	WITHOUT_CLASSIFICATION	5.35865865565193E-5	DEFECT
// *** It is not a bug.	WITHOUT_CLASSIFICATION	0.9999065103364471	WITHOUT_CLASSIFICATION	9.348966355295489E-5	DEFECT
// for CLOSURE	WITHOUT_CLASSIFICATION	0.9999826752237908	WITHOUT_CLASSIFICATION	1.73247762091521E-5	DEFECT
// for CLOSURE	WITHOUT_CLASSIFICATION	0.9999826752237908	WITHOUT_CLASSIFICATION	1.73247762091521E-5	DEFECT
// for CLOSURE	WITHOUT_CLASSIFICATION	0.9999826752237908	WITHOUT_CLASSIFICATION	1.73247762091521E-5	DEFECT
// for STRING	WITHOUT_CLASSIFICATION	0.9999523766599674	WITHOUT_CLASSIFICATION	4.762334003260651E-5	DEFECT
// for STRING	WITHOUT_CLASSIFICATION	0.9999523766599674	WITHOUT_CLASSIFICATION	4.762334003260651E-5	DEFECT
// *******	WITHOUT_CLASSIFICATION	0.999936987731616	WITHOUT_CLASSIFICATION	6.301226838397752E-5	DEFECT
// ***** Really?	WITHOUT_CLASSIFICATION	0.999992997785141	WITHOUT_CLASSIFICATION	7.002214859095327E-6	DEFECT
// ***** Really?	WITHOUT_CLASSIFICATION	0.999992997785141	WITHOUT_CLASSIFICATION	7.002214859095327E-6	DEFECT
// infinity	WITHOUT_CLASSIFICATION	0.9999690631038136	WITHOUT_CLASSIFICATION	3.093689618645415E-5	DEFECT
// When this.child.getMaxLength() < 0, // this returns minus value	WITHOUT_CLASSIFICATION	0.999999355653596	WITHOUT_CLASSIFICATION	6.443464039797516E-7	DEFECT
// ******	WITHOUT_CLASSIFICATION	0.999936987731616	WITHOUT_CLASSIFICATION	6.301226838397752E-5	DEFECT
/*               *  a|b|c -> FC_TERMINAL               *  a|.|c -> FC_ANY               *  a|b|  -> FC_CONTINUE               */	WITHOUT_CLASSIFICATION	0.9999932155716243	WITHOUT_CLASSIFICATION	6.784428375588682E-6	DEFECT
// ****	WITHOUT_CLASSIFICATION	0.999936987731616	WITHOUT_CLASSIFICATION	6.301226838397752E-5	DEFECT
// **** We can not optimize.	WITHOUT_CLASSIFICATION	0.9999904584796174	WITHOUT_CLASSIFICATION	9.541520382600615E-6	DEFECT
// **** We can not optimize.	WITHOUT_CLASSIFICATION	0.9999904584796174	WITHOUT_CLASSIFICATION	9.541520382600615E-6	DEFECT
// ------------------------------------------------------	WITHOUT_CLASSIFICATION	0.999880241477873	WITHOUT_CLASSIFICATION	1.1975852212700191E-4	DEFECT
//blockNames in UNICODE 3.1 that supported by XML Schema REC             	WITHOUT_CLASSIFICATION	0.9999644267150274	WITHOUT_CLASSIFICATION	3.557328497258025E-5	DEFECT
/*0000..007F;*/	WITHOUT_CLASSIFICATION	0.9989871256486392	WITHOUT_CLASSIFICATION	0.0010128743513607963	DEFECT
/*0080..00FF;*/	WITHOUT_CLASSIFICATION	0.9989913152188442	WITHOUT_CLASSIFICATION	0.0010086847811558437	DEFECT
/*0100..017F;*/	WITHOUT_CLASSIFICATION	0.9987233943575591	WITHOUT_CLASSIFICATION	0.0012766056424409705	DEFECT
/*0180..024F;*/	WITHOUT_CLASSIFICATION	0.9994181915366842	WITHOUT_CLASSIFICATION	5.818084633157617E-4	DEFECT
/*0250..02AF;*/	WITHOUT_CLASSIFICATION	0.9993633617891686	WITHOUT_CLASSIFICATION	6.366382108312819E-4	DEFECT
/*02B0..02FF;*/	WITHOUT_CLASSIFICATION	0.9991878673267917	WITHOUT_CLASSIFICATION	8.121326732082845E-4	DEFECT
/*0300..036F;*/	WITHOUT_CLASSIFICATION	0.9994583920189014	WITHOUT_CLASSIFICATION	5.416079810985925E-4	DEFECT
/*0370..03FF;*/	WITHOUT_CLASSIFICATION	0.9992124234858195	WITHOUT_CLASSIFICATION	7.875765141805748E-4	DEFECT
/*0400..04FF;*/	WITHOUT_CLASSIFICATION	0.9993189924337073	WITHOUT_CLASSIFICATION	6.810075662927918E-4	DEFECT
/*0530..058F;*/	WITHOUT_CLASSIFICATION	0.9993318232526051	WITHOUT_CLASSIFICATION	6.681767473948405E-4	DEFECT
/*0600..06FF;*/	WITHOUT_CLASSIFICATION	0.999313862561745	WITHOUT_CLASSIFICATION	6.861374382549528E-4	DEFECT
/*0700..074F;*/	WITHOUT_CLASSIFICATION	0.9991946497247983	WITHOUT_CLASSIFICATION	8.053502752016944E-4	DEFECT
/*0780..07BF;*/	WITHOUT_CLASSIFICATION	0.999074752639904	WITHOUT_CLASSIFICATION	9.252473600959987E-4	DEFECT
/*0900..097F;*/	WITHOUT_CLASSIFICATION	0.99912878616003	WITHOUT_CLASSIFICATION	8.712138399699511E-4	DEFECT
/*0980..09FF;*/	WITHOUT_CLASSIFICATION	0.9991997857455426	WITHOUT_CLASSIFICATION	8.002142544574064E-4	DEFECT
/*0A80..0AFF;*/	WITHOUT_CLASSIFICATION	0.9991520065701807	WITHOUT_CLASSIFICATION	8.47993429819328E-4	DEFECT
/*0B00..0B7F;*/	WITHOUT_CLASSIFICATION	0.9989818516996637	WITHOUT_CLASSIFICATION	0.0010181483003363812	DEFECT
/*0B80..0BFF;*/	WITHOUT_CLASSIFICATION	0.9990665170494669	WITHOUT_CLASSIFICATION	9.334829505329605E-4	DEFECT
/*0C00..0C7F;*/	WITHOUT_CLASSIFICATION	0.9993125682470999	WITHOUT_CLASSIFICATION	6.874317529000245E-4	DEFECT
/*0C80..0CFF;*/	WITHOUT_CLASSIFICATION	0.9993749295149482	WITHOUT_CLASSIFICATION	6.250704850517411E-4	DEFECT
/*0D80..0DFF;*/	WITHOUT_CLASSIFICATION	0.9987837368036901	WITHOUT_CLASSIFICATION	0.0012162631963097885	DEFECT
/*0E00..0E7F;*/	WITHOUT_CLASSIFICATION	0.9987875238653166	WITHOUT_CLASSIFICATION	0.0012124761346834739	DEFECT
/*0E80..0EFF;*/	WITHOUT_CLASSIFICATION	0.9989045859821932	WITHOUT_CLASSIFICATION	0.0010954140178068103	DEFECT
/*0F00..0FFF;*/	WITHOUT_CLASSIFICATION	0.9989564198909191	WITHOUT_CLASSIFICATION	0.0010435801090809369	DEFECT
/*1000..109F;*/	WITHOUT_CLASSIFICATION	0.9988166163283634	WITHOUT_CLASSIFICATION	0.0011833836716365924	DEFECT
/*1100..11FF;*/	WITHOUT_CLASSIFICATION	0.9987154425717568	WITHOUT_CLASSIFICATION	0.0012845574282431245	DEFECT
/*1200..137F;*/	WITHOUT_CLASSIFICATION	0.999293207558859	WITHOUT_CLASSIFICATION	7.067924411410497E-4	DEFECT
/*13A0..13FF;*/	WITHOUT_CLASSIFICATION	0.9993113596376894	WITHOUT_CLASSIFICATION	6.88640362310624E-4	DEFECT
/*1400..167F;*/	WITHOUT_CLASSIFICATION	0.9994477047672456	WITHOUT_CLASSIFICATION	5.522952327542863E-4	DEFECT
/*1680..169F;*/	WITHOUT_CLASSIFICATION	0.9994454470903363	WITHOUT_CLASSIFICATION	5.545529096636839E-4	DEFECT
/*1780..17FF;*/	WITHOUT_CLASSIFICATION	0.9990561405016382	WITHOUT_CLASSIFICATION	9.438594983618464E-4	DEFECT
/*1800..18AF;*/	WITHOUT_CLASSIFICATION	0.999154272272677	WITHOUT_CLASSIFICATION	8.457277273229912E-4	DEFECT
/*1E00..1EFF;*/	WITHOUT_CLASSIFICATION	0.9988319743559261	WITHOUT_CLASSIFICATION	0.001168025644073928	DEFECT
/*1F00..1FFF;*/	WITHOUT_CLASSIFICATION	0.9989854526518726	WITHOUT_CLASSIFICATION	0.0010145473481273576	DEFECT
/*2070..209F;*/	WITHOUT_CLASSIFICATION	0.9993084622405958	WITHOUT_CLASSIFICATION	6.915377594042628E-4	DEFECT
/*20A0..20CF;*/	WITHOUT_CLASSIFICATION	0.9995016167313868	WITHOUT_CLASSIFICATION	4.983832686130944E-4	DEFECT
/*20D0..20FF;*/	WITHOUT_CLASSIFICATION	0.99894178800884	WITHOUT_CLASSIFICATION	0.0010582119911600506	DEFECT
/*2100..214F;*/	WITHOUT_CLASSIFICATION	0.9991870349999238	WITHOUT_CLASSIFICATION	8.129650000762034E-4	DEFECT
/*2150..218F;*/	WITHOUT_CLASSIFICATION	0.9993667236269611	WITHOUT_CLASSIFICATION	6.332763730388771E-4	DEFECT
/*2200..22FF;*/	WITHOUT_CLASSIFICATION	0.9991260461848457	WITHOUT_CLASSIFICATION	8.739538151543355E-4	DEFECT
/*2300..23FF;*/	WITHOUT_CLASSIFICATION	0.999293097316704	WITHOUT_CLASSIFICATION	7.069026832959786E-4	DEFECT
/*2400..243F;*/	WITHOUT_CLASSIFICATION	0.9994521557974974	WITHOUT_CLASSIFICATION	5.478442025026775E-4	DEFECT
/*2440..245F;*/	WITHOUT_CLASSIFICATION	0.9994538337588394	WITHOUT_CLASSIFICATION	5.461662411604992E-4	DEFECT
/*2460..24FF;*/	WITHOUT_CLASSIFICATION	0.9995759248308645	WITHOUT_CLASSIFICATION	4.240751691353451E-4	DEFECT
/*2580..259F;*/	WITHOUT_CLASSIFICATION	0.9994161240770986	WITHOUT_CLASSIFICATION	5.838759229014668E-4	DEFECT
/*25A0..25FF;*/	WITHOUT_CLASSIFICATION	0.9993395938715904	WITHOUT_CLASSIFICATION	6.60406128409649E-4	DEFECT
/*2600..26FF;*/	WITHOUT_CLASSIFICATION	0.9994213832225602	WITHOUT_CLASSIFICATION	5.786167774397983E-4	DEFECT
/*2700..27BF;*/	WITHOUT_CLASSIFICATION	0.9991441764159517	WITHOUT_CLASSIFICATION	8.558235840483005E-4	DEFECT
/*2800..28FF;*/	WITHOUT_CLASSIFICATION	0.9991141048293913	WITHOUT_CLASSIFICATION	8.858951706087131E-4	DEFECT
/*2E80..2EFF;*/	WITHOUT_CLASSIFICATION	0.9990726191181889	WITHOUT_CLASSIFICATION	9.273808818110657E-4	DEFECT
/*2F00..2FDF;*/	WITHOUT_CLASSIFICATION	0.9989529304326247	WITHOUT_CLASSIFICATION	0.0010470695673752638	DEFECT
/*3000..303F;*/	WITHOUT_CLASSIFICATION	0.9991340320921883	WITHOUT_CLASSIFICATION	8.659679078116483E-4	DEFECT
/*3040..309F;*/	WITHOUT_CLASSIFICATION	0.9995625014084433	WITHOUT_CLASSIFICATION	4.374985915568222E-4	DEFECT
/*30A0..30FF;*/	WITHOUT_CLASSIFICATION	0.9992696224303115	WITHOUT_CLASSIFICATION	7.30377569688575E-4	DEFECT
/*3100..312F;*/	WITHOUT_CLASSIFICATION	0.9990879254631628	WITHOUT_CLASSIFICATION	9.120745368372506E-4	DEFECT
/*3130..318F;*/	WITHOUT_CLASSIFICATION	0.9992960131052462	WITHOUT_CLASSIFICATION	7.039868947538014E-4	DEFECT
/*31A0..31BF;*/	WITHOUT_CLASSIFICATION	0.9993073898085686	WITHOUT_CLASSIFICATION	6.926101914313546E-4	DEFECT
/*3200..32FF;*/	WITHOUT_CLASSIFICATION	0.9992950303299903	WITHOUT_CLASSIFICATION	7.049696700096075E-4	DEFECT
/*3300..33FF;*/	WITHOUT_CLASSIFICATION	0.9991597899521066	WITHOUT_CLASSIFICATION	8.4021004789332E-4	DEFECT
/*3400..4DB5;*/	WITHOUT_CLASSIFICATION	0.9993905271560249	WITHOUT_CLASSIFICATION	6.094728439749974E-4	DEFECT
/*4E00..9FFF;*/	WITHOUT_CLASSIFICATION	0.9992770407640585	WITHOUT_CLASSIFICATION	7.229592359414272E-4	DEFECT
/*A490..A4CF;*/	WITHOUT_CLASSIFICATION	0.9996185349629403	WITHOUT_CLASSIFICATION	3.8146503705966203E-4	DEFECT
/*AC00..D7A3;*/	WITHOUT_CLASSIFICATION	0.9994412161967267	WITHOUT_CLASSIFICATION	5.587838032733843E-4	DEFECT
/*E000..F8FF;*/	WITHOUT_CLASSIFICATION	0.9987808350931656	WITHOUT_CLASSIFICATION	0.0012191649068343457	DEFECT
/*F900..FAFF;*/	WITHOUT_CLASSIFICATION	0.9992190185283063	WITHOUT_CLASSIFICATION	7.809814716936446E-4	DEFECT
/*FB00..FB4F;*/	WITHOUT_CLASSIFICATION	0.9992046174867214	WITHOUT_CLASSIFICATION	7.953825132786497E-4	DEFECT
/*FE20..FE2F;*/	WITHOUT_CLASSIFICATION	0.9990441455816594	WITHOUT_CLASSIFICATION	9.558544183405366E-4	DEFECT
/*FE30..FE4F;*/	WITHOUT_CLASSIFICATION	0.9992886794431318	WITHOUT_CLASSIFICATION	7.113205568681562E-4	DEFECT
/*FE50..FE6F;*/	WITHOUT_CLASSIFICATION	0.9992309304910487	WITHOUT_CLASSIFICATION	7.690695089512401E-4	DEFECT
/*FE70..FEFE;*/	WITHOUT_CLASSIFICATION	0.9989002231482633	WITHOUT_CLASSIFICATION	0.0010997768517367256	DEFECT
/*FEFF..FEFF;*/	WITHOUT_CLASSIFICATION	0.9985420961988989	WITHOUT_CLASSIFICATION	0.001457903801101093	DEFECT
/*10300..1032F;*/	WITHOUT_CLASSIFICATION	0.9992421593377041	WITHOUT_CLASSIFICATION	7.578406622959022E-4	DEFECT
/*10330..1034F;*/	WITHOUT_CLASSIFICATION	0.9993403358023878	WITHOUT_CLASSIFICATION	6.596641976122159E-4	DEFECT
/*10400..1044F;*/	WITHOUT_CLASSIFICATION	0.9992676417348246	WITHOUT_CLASSIFICATION	7.323582651754313E-4	DEFECT
/*1D000..1D0FF;*/	WITHOUT_CLASSIFICATION	0.9986688356974347	WITHOUT_CLASSIFICATION	0.0013311643025652638	DEFECT
/*1D100..1D1FF;*/	WITHOUT_CLASSIFICATION	0.9983939625217724	WITHOUT_CLASSIFICATION	0.0016060374782276782	DEFECT
/*20000..2A6D6;*/	WITHOUT_CLASSIFICATION	0.9993144421189636	WITHOUT_CLASSIFICATION	6.855578810363907E-4	DEFECT
/*2F800..2FA1F;*/	WITHOUT_CLASSIFICATION	0.9992441507360377	WITHOUT_CLASSIFICATION	7.558492639622905E-4	DEFECT
/*E0000..E007F;*/	WITHOUT_CLASSIFICATION	0.9988182751754349	WITHOUT_CLASSIFICATION	0.0011817248245651324	DEFECT
//missing 2 private use add manually	WITHOUT_CLASSIFICATION	0.9999898436715637	WITHOUT_CLASSIFICATION	1.0156328436266425E-5	DEFECT
// 84	WITHOUT_CLASSIFICATION	0.9999330045936797	WITHOUT_CLASSIFICATION	6.69954063202371E-5	DEFECT
//build table of Pi values	WITHOUT_CLASSIFICATION	0.9999826124602633	WITHOUT_CLASSIFICATION	1.738753973669644E-5	DEFECT
//build table of Pf values	WITHOUT_CLASSIFICATION	0.9999830253463478	WITHOUT_CLASSIFICATION	1.6974653652205662E-5	DEFECT
// for all characters	WITHOUT_CLASSIFICATION	0.9999966437992521	WITHOUT_CLASSIFICATION	3.3562007479486807E-6	DEFECT
// Unassigned	WITHOUT_CLASSIFICATION	0.9999869051134787	WITHOUT_CLASSIFICATION	1.3094886521436722E-5	DEFECT
// TR#18 1.2	WITHOUT_CLASSIFICATION	0.9997427905880606	WITHOUT_CLASSIFICATION	2.57209411939301E-4	DEFECT
// Z	WITHOUT_CLASSIFICATION	0.9998925011501452	WITHOUT_CLASSIFICATION	1.0749884985477536E-4	DEFECT
// Lu Ll Lo Nd	WITHOUT_CLASSIFICATION	0.9998606306756267	WITHOUT_CLASSIFICATION	1.3936932437327992E-4	DEFECT
// Perl extension	WITHOUT_CLASSIFICATION	0.9999877807787289	WITHOUT_CLASSIFICATION	1.2219221271105076E-5	DEFECT
//this.setLocale(locale);	WITHOUT_CLASSIFICATION	0.9999788165412499	WITHOUT_CLASSIFICATION	2.118345875009626E-5	DEFECT
// X+ -> XX*	WITHOUT_CLASSIFICATION	0.999492526324778	WITHOUT_CLASSIFICATION	5.074736752220787E-4	DEFECT
// X? -> X|	WITHOUT_CLASSIFICATION	0.9997586316229845	WITHOUT_CLASSIFICATION	2.413683770154315E-4	DEFECT
// Skips ')'	WITHOUT_CLASSIFICATION	0.9999735344589853	WITHOUT_CLASSIFICATION	2.6465541014657558E-5	DEFECT
// '['	WITHOUT_CLASSIFICATION	0.9999238383747606	WITHOUT_CLASSIFICATION	7.61616252393411E-5	DEFECT
// '^'	WITHOUT_CLASSIFICATION	0.9999171810087031	WITHOUT_CLASSIFICATION	8.281899129688237E-5	DEFECT
// Skips ']'	WITHOUT_CLASSIFICATION	0.999968500621409	WITHOUT_CLASSIFICATION	3.1499378591065444E-5	DEFECT
// for STRING	WITHOUT_CLASSIFICATION	0.9999523766599674	WITHOUT_CLASSIFICATION	4.762334003260651E-5	DEFECT
// ------------------------------------------------------	WITHOUT_CLASSIFICATION	0.999880241477873	WITHOUT_CLASSIFICATION	1.1975852212700191E-4	DEFECT
// \pM* // \PM + \pM*	WITHOUT_CLASSIFICATION	0.9999473593609579	WITHOUT_CLASSIFICATION	5.2640639042055334E-5	DEFECT
// Lu // Ll // Lo	WITHOUT_CLASSIFICATION	0.9998827987249659	WITHOUT_CLASSIFICATION	1.1720127503405219E-4	DEFECT
// Lu Ll Lo // Nd	WITHOUT_CLASSIFICATION	0.9998961168044157	WITHOUT_CLASSIFICATION	1.0388319558426964E-4	DEFECT
// synchronized // if null	WITHOUT_CLASSIFICATION	0.9999555719478809	WITHOUT_CLASSIFICATION	4.442805211913648E-5	DEFECT
//DEBUG //System.err.println("isRegisterNonXS: "+name);	WITHOUT_CLASSIFICATION	0.9999546214995547	WITHOUT_CLASSIFICATION	4.53785004452911E-5	DEFECT
// [{ASSIGNED}]-[{M},{C}]	WITHOUT_CLASSIFICATION	0.9999320904225681	WITHOUT_CLASSIFICATION	6.790957743190569E-5	DEFECT
// hangul_medial and hangul_final // extras	WITHOUT_CLASSIFICATION	0.9999949955047868	WITHOUT_CLASSIFICATION	5.004495213182455E-6	DEFECT
// base_char?	WITHOUT_CLASSIFICATION	0.9999981804871456	WITHOUT_CLASSIFICATION	1.8195128543395056E-6	DEFECT
//case 0x0b:  ret = "\\v";  break;	WITHOUT_CLASSIFICATION	0.9993842155684046	WITHOUT_CLASSIFICATION	6.157844315954593E-4	DEFECT
// This is CONCAT, and new child is CONCAT.	WITHOUT_CLASSIFICATION	0.9998491490124828	WITHOUT_CLASSIFICATION	1.5085098751712445E-4	DEFECT
// Recursion	WITHOUT_CLASSIFICATION	0.9999623102111416	WITHOUT_CLASSIFICATION	3.768978885843195E-5	DEFECT
//System.err.println("Merge '"+previous+"' and '"+tok+"'.");	WITHOUT_CLASSIFICATION	0.9999932043084336	WITHOUT_CLASSIFICATION	6.795691566394851E-6	DEFECT
// Replace previous token by STRING	WITHOUT_CLASSIFICATION	0.9999942586419709	WITHOUT_CLASSIFICATION	5.741358029133034E-6	DEFECT
// Subraction	WITHOUT_CLASSIFICATION	0.9999018243445603	WITHOUT_CLASSIFICATION	9.817565543964588E-5	DEFECT
// Exit this loop	WITHOUT_CLASSIFICATION	0.9998804248524662	WITHOUT_CLASSIFICATION	1.1957514753371999E-4	DEFECT
// if not shorthands...	WITHOUT_CLASSIFICATION	0.9998366059625587	WITHOUT_CLASSIFICATION	1.633940374412467E-4	DEFECT
// Here is no '-'.	WITHOUT_CLASSIFICATION	0.9999654226402045	WITHOUT_CLASSIFICATION	3.457735979557817E-5	DEFECT
// c '-' ']' -> '-' is a single-range.	WITHOUT_CLASSIFICATION	0.9999979963441049	WITHOUT_CLASSIFICATION	2.0036558949926064E-6	DEFECT
// if - is at the last position of the group	WITHOUT_CLASSIFICATION	0.9999750235272902	WITHOUT_CLASSIFICATION	2.4976472709910724E-5	DEFECT
// LINE FEED U+000A	WITHOUT_CLASSIFICATION	0.9999071442589378	WITHOUT_CLASSIFICATION	9.28557410622124E-5	DEFECT
// CRRIAGE RETURN U+000D	WITHOUT_CLASSIFICATION	0.99997898308597	WITHOUT_CLASSIFICATION	2.1016914029927968E-5	DEFECT
// HORIZONTAL TABULATION U+0009	WITHOUT_CLASSIFICATION	0.9999397801162807	WITHOUT_CLASSIFICATION	6.02198837193351E-5	DEFECT
// return actucal char	WITHOUT_CLASSIFICATION	0.9999919678570255	WITHOUT_CLASSIFICATION	8.032142974441489E-6	DEFECT
// \ + c // backsolidus	WITHOUT_CLASSIFICATION	0.9999820253095208	WITHOUT_CLASSIFICATION	1.7974690479090422E-5	DEFECT
// Found '-' // Is this '-' is a from-to token?? // Skips '-'	WITHOUT_CLASSIFICATION	0.9999840367385334	WITHOUT_CLASSIFICATION	1.5963261466542322E-5	DEFECT
// getIANA2JavaMapping(String):String	WITHOUT_CLASSIFICATION	0.9999911170286059	WITHOUT_CLASSIFICATION	8.882971394087317E-6	DEFECT
// This implementation was changed to not introduce multi line content.	WITHOUT_CLASSIFICATION	0.9998533690518613	WITHOUT_CLASSIFICATION	1.4663094813874614E-4	DEFECT
// form integral number of 6-bit groups	WITHOUT_CLASSIFICATION	0.9999985122715979	WITHOUT_CLASSIFICATION	1.4877284021396307E-6	DEFECT
//encodedData[encodedIndex] = 0xa;	WITHOUT_CLASSIFICATION	0.9996267818038931	WITHOUT_CLASSIFICATION	3.732181961068582E-4	DEFECT
// remove white spaces	WITHOUT_CLASSIFICATION	0.9999984241159646	WITHOUT_CLASSIFICATION	1.5758840353484291E-6	DEFECT
//should be divisible by four	WITHOUT_CLASSIFICATION	0.9999186506043142	WITHOUT_CLASSIFICATION	8.134939568576967E-5	DEFECT
//if found "no data" just return null	WITHOUT_CLASSIFICATION	0.9999688183671581	WITHOUT_CLASSIFICATION	3.118163284181351E-5	DEFECT
//if found "no data" just return null	WITHOUT_CLASSIFICATION	0.9999688183671581	WITHOUT_CLASSIFICATION	3.118163284181351E-5	DEFECT
//Check if they are PAD characters //Two PAD e.g. 3c[Pad][Pad] //last 4 bits should be zero	WITHOUT_CLASSIFICATION	0.9997680751085192	WITHOUT_CLASSIFICATION	2.3192489148069354E-4	DEFECT
//One PAD  e.g. 3cQ[Pad]	WITHOUT_CLASSIFICATION	0.9998486240642912	WITHOUT_CLASSIFICATION	1.51375935708745E-4	DEFECT
//last 2 bits should be zero	WITHOUT_CLASSIFICATION	0.9998117086984972	WITHOUT_CLASSIFICATION	1.88291301502719E-4	DEFECT
//an error  like "3c[Pad]r", "3cdX", "3cXd", "3cXX" where X is non data	WITHOUT_CLASSIFICATION	0.9957683592701835	WITHOUT_CLASSIFICATION	0.004231640729816463	DEFECT
//No PAD e.g 3cQl	WITHOUT_CLASSIFICATION	0.9996472797218509	WITHOUT_CLASSIFICATION	3.5272027814914217E-4	DEFECT
// count characters that's not whitespace	WITHOUT_CLASSIFICATION	0.9999918490767856	WITHOUT_CLASSIFICATION	8.150923214355731E-6	DEFECT
/* * format validation * * This class encodes/decodes hexadecimal data * @author Jeffrey Rodriguez */	WITHOUT_CLASSIFICATION	0.999738452522848	WITHOUT_CLASSIFICATION	2.615474771519532E-4	DEFECT
// add IANA to Java encoding mappings.	WITHOUT_CLASSIFICATION	0.9999790747401216	WITHOUT_CLASSIFICATION	2.092525987841385E-5	DEFECT
// proposed addition (see above for details):	WITHOUT_CLASSIFICATION	0.9999842020443143	WITHOUT_CLASSIFICATION	1.5797955685722275E-5	DEFECT
// Add support for Cp1252 and its friends	WITHOUT_CLASSIFICATION	0.9999944326296794	WITHOUT_CLASSIFICATION	5.567370320629719E-6	DEFECT
// <clinit>()	WITHOUT_CLASSIFICATION	0.9999874747579374	WITHOUT_CLASSIFICATION	1.2525242062751302E-5	DEFECT
// added since this encoding only differs w.r.t. presentation 	WITHOUT_CLASSIFICATION	0.9996136140477018	WITHOUT_CLASSIFICATION	3.86385952298291E-4	DEFECT
// removeIANA2JavaMapping(String):String	WITHOUT_CLASSIFICATION	0.9999898842587075	WITHOUT_CLASSIFICATION	1.0115741292492053E-5	DEFECT
// putIANA2JavaMapping(String,String)	WITHOUT_CLASSIFICATION	0.9999950399322168	WITHOUT_CLASSIFICATION	4.960067783135469E-6	DEFECT
// putJava2IANAMapping(String,String)	WITHOUT_CLASSIFICATION	0.9999950572412398	WITHOUT_CLASSIFICATION	4.9427587602054655E-6	DEFECT
// getJava2IANAMapping(String):String	WITHOUT_CLASSIFICATION	0.9999911482891026	WITHOUT_CLASSIFICATION	8.851710897348416E-6	DEFECT
// Adding new aliases as proposed in // http://lists.w3.org/Archives/Public/ietf-charset/2002JulSep/0058.html	WITHOUT_CLASSIFICATION	0.9999895827095492	WITHOUT_CLASSIFICATION	1.0417290450768383E-5	DEFECT
// REVISIT: //   j:CNS11643 -> EUC-TW? //   ISO-2022-CN? ISO-2022-CN-EXT?	WITHOUT_CLASSIFICATION	0.9998773732827511	WITHOUT_CLASSIFICATION	1.22626717248902E-4	DEFECT
// add Java to IANA encoding mappings //fJava2IANAMap.put("8859_1",    "US-ASCII"); // ?	WITHOUT_CLASSIFICATION	0.9999990582058754	WITHOUT_CLASSIFICATION	9.417941245718464E-7	DEFECT
// // Public static methods //	WITHOUT_CLASSIFICATION	0.9999946440485714	WITHOUT_CLASSIFICATION	5.3559514286138275E-6	DEFECT
// removeJava2IANAMapping	WITHOUT_CLASSIFICATION	0.9999896543834242	WITHOUT_CLASSIFICATION	1.034561657573917E-5	DEFECT
// class EncodingMap	WITHOUT_CLASSIFICATION	0.999923795334917	WITHOUT_CLASSIFICATION	7.620466508302033E-5	DEFECT
//RFC 2732 added '[' and ']' as reserved characters	WITHOUT_CLASSIFICATION	0.999997642196283	WITHOUT_CLASSIFICATION	2.3578037171348226E-6	DEFECT
// Add ASCII Digits and ASCII Hex Numbers	WITHOUT_CLASSIFICATION	0.9999971161851241	WITHOUT_CLASSIFICATION	2.8838148760234077E-6	DEFECT
// Add ASCII Letters and ASCII Hex Numbers	WITHOUT_CLASSIFICATION	0.9999983374764174	WITHOUT_CLASSIFICATION	1.6625235826040859E-6	DEFECT
// Add ASCII Letters	WITHOUT_CLASSIFICATION	0.9999914613093182	WITHOUT_CLASSIFICATION	8.538690681832145E-6	DEFECT
// Add Reserved Characters	WITHOUT_CLASSIFICATION	0.9999993566635144	WITHOUT_CLASSIFICATION	6.433364856817221E-7	DEFECT
// Add Mark Characters	WITHOUT_CLASSIFICATION	0.9999976968778608	WITHOUT_CLASSIFICATION	2.3031221392006722E-6	DEFECT
// Add Scheme Characters	WITHOUT_CLASSIFICATION	0.9999986061850663	WITHOUT_CLASSIFICATION	1.393814933707808E-6	DEFECT
// Add Path Characters	WITHOUT_CLASSIFICATION	0.9999976443872111	WITHOUT_CLASSIFICATION	2.355612789002139E-6	DEFECT
// Just use null.	WITHOUT_CLASSIFICATION	0.9999930865245688	WITHOUT_CLASSIFICATION	6.913475431186404E-6	DEFECT
// just make a copy of the base if spec is empty	WITHOUT_CLASSIFICATION	0.9999856118482384	WITHOUT_CLASSIFICATION	1.4388151761559127E-5	DEFECT
// search backwards starting from character before ':'.	WITHOUT_CLASSIFICATION	0.999971599419719	WITHOUT_CLASSIFICATION	2.8400580281067967E-5	DEFECT
// Neither 'scheme:' or 'scheme:#fragment' are valid URIs.	WITHOUT_CLASSIFICATION	0.9999976590156165	WITHOUT_CLASSIFICATION	2.340984383475283E-6	DEFECT
// Authority will be everything up to path, query or fragment	WITHOUT_CLASSIFICATION	0.9999508319968585	WITHOUT_CLASSIFICATION	4.9168003141464445E-5	DEFECT
// Attempt to parse authority. If the section is an empty string // this is a valid server based authority, so set the host to this // value.	WITHOUT_CLASSIFICATION	0.9999827261962192	WITHOUT_CLASSIFICATION	1.7273803780806235E-5	DEFECT
// Resolve relative URI to base URI - see RFC 2396 Section 5.2 // In some cases, it might make more sense to throw an exception // (when scheme is specified is the string spec and the base URI // is also specified, for example), but we're just following the // RFC specifications	WITHOUT_CLASSIFICATION	0.9999997702171507	WITHOUT_CLASSIFICATION	2.2978284935186735E-7	DEFECT
// check for absolute path - RFC 2396 5.2 #5	WITHOUT_CLASSIFICATION	0.9999992879464535	WITHOUT_CLASSIFICATION	7.120535463511021E-7	DEFECT
// 6a - get all but the last segment of the base URI path	WITHOUT_CLASSIFICATION	0.9999498547541414	WITHOUT_CLASSIFICATION	5.014524585849473E-5	DEFECT
// check for scheme - RFC 2396 5.2 #3 // if we found a scheme, it means absolute URI, so we're done	WITHOUT_CLASSIFICATION	0.9999999109163307	WITHOUT_CLASSIFICATION	8.908366934692025E-8	DEFECT
// check for authority - RFC 2396 5.2 #4 // if we found a host, then we've got a network path, so we're done	WITHOUT_CLASSIFICATION	0.9999946251564706	WITHOUT_CLASSIFICATION	5.3748435293882295E-6	DEFECT
// if we get to this point, we need to resolve relative path // RFC 2396 5.2 #6	WITHOUT_CLASSIFICATION	0.9999992428389989	WITHOUT_CLASSIFICATION	7.571610010665173E-7	DEFECT
// 6b - append the relative URI path	WITHOUT_CLASSIFICATION	0.9999933758355635	WITHOUT_CLASSIFICATION	6.624164436624434E-6	DEFECT
// 6c - remove all "./" where "." is a complete path segment	WITHOUT_CLASSIFICATION	0.999998371409696	WITHOUT_CLASSIFICATION	1.6285903039591831E-6	DEFECT
// 6d - remove "." if path ends with "." as a complete path segment	WITHOUT_CLASSIFICATION	0.999997857876815	WITHOUT_CLASSIFICATION	2.142123185003699E-6	DEFECT
// 6f - remove ending "<segment>/.." where "<segment>" is a // complete path segment	WITHOUT_CLASSIFICATION	0.9999961821146021	WITHOUT_CLASSIFICATION	3.817885398001865E-6	DEFECT
// userinfo is everything up to @	WITHOUT_CLASSIFICATION	0.9999915116884802	WITHOUT_CLASSIFICATION	8.488311519811929E-6	DEFECT
// host is everything up to last ':', or up to  // and including ']' if followed by ':'.	WITHOUT_CLASSIFICATION	0.9999964146146082	WITHOUT_CLASSIFICATION	3.585385391835489E-6	DEFECT
// port	WITHOUT_CLASSIFICATION	0.999944722087149	WITHOUT_CLASSIFICATION	5.527791285095212E-5	DEFECT
// Check if the host is well formed.	WITHOUT_CLASSIFICATION	0.9999967094433174	WITHOUT_CLASSIFICATION	3.290556682612005E-6	DEFECT
// Check that port is well formed if it exists. // REVISIT: There's no restriction on port value ranges, but // perform the same check as in setPort to be consistent. Pass // in a string to this method instead of an integer.	WITHOUT_CLASSIFICATION	0.9999958860944491	WITHOUT_CLASSIFICATION	4.1139055508248785E-6	DEFECT
// Check that userinfo is well formed if it exists.	WITHOUT_CLASSIFICATION	0.9999985858049545	WITHOUT_CLASSIFICATION	1.414195045595976E-6	DEFECT
// Userinfo can contain alphanumerics, mark characters, escaped // and ';',':','&','=','+','$',','	WITHOUT_CLASSIFICATION	0.9999976736719498	WITHOUT_CLASSIFICATION	2.3263280502391678E-6	DEFECT
// check for valid escape sequence	WITHOUT_CLASSIFICATION	0.9999963533521831	WITHOUT_CLASSIFICATION	3.6466478170787348E-6	DEFECT
// can check against path characters because the set // is the same except for '/' which we've already excluded.	WITHOUT_CLASSIFICATION	0.9999999279725931	WITHOUT_CLASSIFICATION	7.202740697893054E-8	DEFECT
// path - everything up to query string or fragment	WITHOUT_CLASSIFICATION	0.9999875234080392	WITHOUT_CLASSIFICATION	1.2476591960863391E-5	DEFECT
// RFC 2732 only allows '[' and ']' to appear in the opaque part.	WITHOUT_CLASSIFICATION	0.9999082966970416	WITHOUT_CLASSIFICATION	9.170330295836299E-5	DEFECT
// Scan path. // abs_path = "/"  path_segments // rel_path = rel_segment [ abs_path ]	WITHOUT_CLASSIFICATION	0.9999988470317793	WITHOUT_CLASSIFICATION	1.1529682207677836E-6	DEFECT
// Path segments cannot contain '[' or ']' since pchar // production was not changed by RFC 2732.	WITHOUT_CLASSIFICATION	0.9999969712046787	WITHOUT_CLASSIFICATION	3.0287953212410664E-6	DEFECT
// Scan opaque part. // opaque_part = uric_no_slash *uric	WITHOUT_CLASSIFICATION	0.9999994846508443	WITHOUT_CLASSIFICATION	5.153491555877313E-7	DEFECT
// query - starts with ? and up to fragment or end	WITHOUT_CLASSIFICATION	0.9999722595401115	WITHOUT_CLASSIFICATION	2.774045988861014E-5	DEFECT
// fragment - starts with #	WITHOUT_CLASSIFICATION	0.9999877735097674	WITHOUT_CLASSIFICATION	1.2226490232639513E-5	DEFECT
// Server based authority.	WITHOUT_CLASSIFICATION	0.9999913285626729	WITHOUT_CLASSIFICATION	8.671437327099812E-6	DEFECT
// the second hex character if a character needs to be escaped	WITHOUT_CLASSIFICATION	0.999995230111865	WITHOUT_CLASSIFICATION	4.769888135025732E-6	DEFECT
// Registry based authority.	WITHOUT_CLASSIFICATION	0.9999954391296045	WITHOUT_CLASSIFICATION	4.560870395458085E-6	DEFECT
// reg_name = 1*( unreserved | escaped | "$" | "," |  //            ";" | ":" | "@" | "&" | "=" | "+" )	WITHOUT_CLASSIFICATION	0.9999978819207043	WITHOUT_CLASSIFICATION	2.118079295621452E-6	DEFECT
// presence of the host (whether valid or empty) means // double-slashes which means generic uri	WITHOUT_CLASSIFICATION	0.9999988082828036	WITHOUT_CLASSIFICATION	1.1917171963715812E-6	DEFECT
// Check if the host is a valid IPv6reference.	WITHOUT_CLASSIFICATION	0.9999963996668378	WITHOUT_CLASSIFICATION	3.6003331621079623E-6	DEFECT
// Cannot start with a '.', '-', or end with a '-'.	WITHOUT_CLASSIFICATION	0.9999932942810733	WITHOUT_CLASSIFICATION	6.705718926660629E-6	DEFECT
// rightmost domain label starting with digit indicates IP address // since top level domain label can only start with an alpha // see RFC 2396 Section 3.2.2	WITHOUT_CLASSIFICATION	0.9999560950969669	WITHOUT_CLASSIFICATION	4.390490303312303E-5	DEFECT
// hostname      = *( domainlabel "." ) toplabel [ "." ] // domainlabel   = alphanum | alphanum *( alphanum | "-" ) alphanum // toplabel      = alpha | alpha *( alphanum | "-" ) alphanum	WITHOUT_CLASSIFICATION	0.9999986105651546	WITHOUT_CLASSIFICATION	1.3894348454096904E-6	DEFECT
// RFC 2396 states that hostnames take the form described in  // RFC 1034 (Section 3) and RFC 1123 (Section 2.1). According // to RFC 1034, hostnames are limited to 255 characters.	WITHOUT_CLASSIFICATION	0.9999990500375685	WITHOUT_CLASSIFICATION	9.499624314937908E-7	DEFECT
// domain labels can contain alphanumerics and '-" // but must start and end with an alphanumeric	WITHOUT_CLASSIFICATION	0.9999891695380679	WITHOUT_CLASSIFICATION	1.0830461931968469E-5	DEFECT
// RFC 1034: Labels must be 63 characters or less.	WITHOUT_CLASSIFICATION	0.9999997169620313	WITHOUT_CLASSIFICATION	2.83037968640725E-7	DEFECT
// Check that that there are no more than three digits // in this segment.	WITHOUT_CLASSIFICATION	0.999964405690965	WITHOUT_CLASSIFICATION	3.559430903506825E-5	DEFECT
// Check that this segment is not greater than 255.	WITHOUT_CLASSIFICATION	0.999954605562238	WITHOUT_CLASSIFICATION	4.539443776200126E-5	DEFECT
// Check if string is a potential match for IPv6reference.	WITHOUT_CLASSIFICATION	0.9999971582630327	WITHOUT_CLASSIFICATION	2.841736967311445E-6	DEFECT
// Counter for the number of 16-bit sections read in the address.	WITHOUT_CLASSIFICATION	0.9999943062633676	WITHOUT_CLASSIFICATION	5.693736632351069E-6	DEFECT
// Scan hex sequence before possible '::' or IPv4 address.	WITHOUT_CLASSIFICATION	0.9998479025557292	WITHOUT_CLASSIFICATION	1.5209744427079687E-4	DEFECT
// Address must contain 128-bits of information.	WITHOUT_CLASSIFICATION	0.9999559685908973	WITHOUT_CLASSIFICATION	4.403140910268002E-5	DEFECT
// '::' represents at least one 16-bit group of zeros.	WITHOUT_CLASSIFICATION	0.9999025280042814	WITHOUT_CLASSIFICATION	9.747199571868006E-5	DEFECT
// Trailing zeros will fill out the rest of the address.	WITHOUT_CLASSIFICATION	0.9966501800989851	WITHOUT_CLASSIFICATION	0.0033498199010149423	DEFECT
// If the second character wasn't ':', in order to be valid, // the remainder of the string must match IPv4Address,  // and we must have read exactly 6 16-bit groups.	WITHOUT_CLASSIFICATION	0.9999792853439826	WITHOUT_CLASSIFICATION	2.071465601736331E-5	DEFECT
// 3. Scan hex sequence after '::'.	WITHOUT_CLASSIFICATION	0.9999858738493964	WITHOUT_CLASSIFICATION	1.4126150603584128E-5	DEFECT
// We've either reached the end of the string, the address ends in // an IPv4 address, or it is invalid. scanHexSequence has already  // made sure that we have the right number of bits. 	WITHOUT_CLASSIFICATION	0.9999599383061976	WITHOUT_CLASSIFICATION	4.006169380239081E-5	DEFECT
// IPv6 addresses are 128-bit, so there can be at most eight sections.	WITHOUT_CLASSIFICATION	0.9999955763893076	WITHOUT_CLASSIFICATION	4.4236106923484E-6	DEFECT
// This could be '::'.	WITHOUT_CLASSIFICATION	0.9980650254870471	WITHOUT_CLASSIFICATION	0.001934974512952764	DEFECT
// There can be at most 4 hex digits per group.	WITHOUT_CLASSIFICATION	0.9999012372826563	WITHOUT_CLASSIFICATION	9.876271734353941E-5	DEFECT
// which ASCII characters need to be escaped	WITHOUT_CLASSIFICATION	0.9999987519832516	WITHOUT_CLASSIFICATION	1.2480167484420239E-6	DEFECT
// // Static initialization //	WITHOUT_CLASSIFICATION	0.9999553252794166	WITHOUT_CLASSIFICATION	4.4674720583409036E-5	DEFECT
// we saw some non-ascii character	WITHOUT_CLASSIFICATION	0.9999989204964079	WITHOUT_CLASSIFICATION	1.079503592004839E-6	DEFECT
// for each byte	WITHOUT_CLASSIFICATION	0.9999912964016714	WITHOUT_CLASSIFICATION	8.70359832860614E-6	DEFECT
// for non-ascii character: make it positive, then escape	WITHOUT_CLASSIFICATION	0.9999908059599405	WITHOUT_CLASSIFICATION	9.194040059418441E-6	DEFECT
// should never happen	WITHOUT_CLASSIFICATION	0.9998492834224694	WITHOUT_CLASSIFICATION	1.5071657753056914E-4	DEFECT
// isValidName(String):boolean	WITHOUT_CLASSIFICATION	0.9999973277221827	WITHOUT_CLASSIFICATION	2.6722778171762194E-6	DEFECT
// // XML Schema anyURI specific information //	WITHOUT_CLASSIFICATION	0.9999243070251054	WITHOUT_CLASSIFICATION	7.569297489465046E-5	DEFECT
// To encode special characters in anyURI, by using %HH to represent // special ASCII characters: 0x00~0x1F, 0x7F, ' ', '<', '>', etc. // and non-ASCII characters (whose value >= 128).	WITHOUT_CLASSIFICATION	0.9998860822083986	WITHOUT_CLASSIFICATION	1.139177916013658E-4	DEFECT
// for each character in the anyURI	WITHOUT_CLASSIFICATION	0.9999955573771125	WITHOUT_CLASSIFICATION	4.442622887428297E-6	DEFECT
// If encoding happened, create a new string; // otherwise, return the orginal one.	WITHOUT_CLASSIFICATION	0.9998543705808935	WITHOUT_CLASSIFICATION	1.4562941910652925E-4	DEFECT
// // Constants //	WITHOUT_CLASSIFICATION	0.9999748446083133	WITHOUT_CLASSIFICATION	2.515539168667722E-5	DEFECT
// Initializing the Character Flag Array // Code generated by: XMLCharGenerator.	WITHOUT_CLASSIFICATION	0.9997886336427906	WITHOUT_CLASSIFICATION	2.1136635720934153E-4	DEFECT
// Fill 3 of value (byte) 49	WITHOUT_CLASSIFICATION	0.9999885651300809	WITHOUT_CLASSIFICATION	1.1434869919163315E-5	DEFECT
// Fill 6 of value (byte) 49 // Fill 2 of value (byte) -71	WITHOUT_CLASSIFICATION	0.9999910840527689	WITHOUT_CLASSIFICATION	8.915947231069152E-6	DEFECT
// Fill 10 of value (byte) -71	WITHOUT_CLASSIFICATION	0.9999836077671663	WITHOUT_CLASSIFICATION	1.639223283358772E-5	DEFECT
// Fill 26 of value (byte) -3 // Fill 60 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999936948945779	WITHOUT_CLASSIFICATION	6.305105422051379E-6	DEFECT
// Fill 8 of value (byte) 33 // Fill 23 of value (byte) -19	WITHOUT_CLASSIFICATION	0.99998740700508	WITHOUT_CLASSIFICATION	1.2592994919842446E-5	DEFECT
// Fill 31 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999861680492779	WITHOUT_CLASSIFICATION	1.3831950722158521E-5	DEFECT
// Fill 58 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 11 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999909786480345	WITHOUT_CLASSIFICATION	9.021351965439377E-6	DEFECT
// Fill 53 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999878057380813	WITHOUT_CLASSIFICATION	1.2194261918801782E-5	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999855366612829	WITHOUT_CLASSIFICATION	1.4463338717115867E-5	DEFECT
// Fill 20 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999908819896534	WITHOUT_CLASSIFICATION	9.118010346685758E-6	DEFECT
// Fill 44 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999868977189507	WITHOUT_CLASSIFICATION	1.3102281049377687E-5	DEFECT
// Fill 7 of value (byte) -19 // Fill 3 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999809458818277	WITHOUT_CLASSIFICATION	1.905411817225508E-5	DEFECT
// Fill 18 of value (byte) -19 // Fill 13 of value (byte) 33 // Fill 12 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999875804716604	WITHOUT_CLASSIFICATION	1.2419528339690477E-5	DEFECT
// Fill 66 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999986661521009	WITHOUT_CLASSIFICATION	1.3338478990975242E-5	DEFECT
// Fill 12 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999858453486435	WITHOUT_CLASSIFICATION	1.415465135649164E-5	DEFECT
// Fill 36 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999910869057791	WITHOUT_CLASSIFICATION	8.913094220837388E-6	DEFECT
// Fill 7 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 10 of value (byte) 33 // Fill 17 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999857111374985	WITHOUT_CLASSIFICATION	1.4288862501447302E-5	DEFECT
// Fill 23 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999866063614736	WITHOUT_CLASSIFICATION	1.3393638526379617E-5	DEFECT
// Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999824224838983	WITHOUT_CLASSIFICATION	1.7577516101598024E-5	DEFECT
// Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999839347367171	WITHOUT_CLASSIFICATION	1.606526328291023E-5	DEFECT
// Fill 11 of value (byte) 33 // Fill 27 of value (byte) -19 // Fill 5 of value (byte) 33 // Fill 3 of value (byte) -19 // Fill 46 of value (byte) 33 // Fill 26 of value (byte) -19 // Fill 5 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999940132969994	WITHOUT_CLASSIFICATION	5.986703000646705E-6	DEFECT
// Fill 10 of value (byte) -19 // Fill 8 of value (byte) -87 // Fill 13 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 6 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999902865856009	WITHOUT_CLASSIFICATION	9.713414399217652E-6	DEFECT
// Fill 71 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 5 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999989739975969	WITHOUT_CLASSIFICATION	1.0260024031007874E-5	DEFECT
// Fill 15 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999872291294056	WITHOUT_CLASSIFICATION	1.2770870594404994E-5	DEFECT
// Fill 4 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999986914473966	WITHOUT_CLASSIFICATION	1.3085526033944532E-5	DEFECT
// Fill 15 of value (byte) -87 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999876745169385	WITHOUT_CLASSIFICATION	1.2325483061580558E-5	DEFECT
// Fill 53 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999879779863832	WITHOUT_CLASSIFICATION	1.2022013616772983E-5	DEFECT
// Fill 8 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 22 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999878989288143	WITHOUT_CLASSIFICATION	1.2101071185629335E-5	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999982588287229	WITHOUT_CLASSIFICATION	1.741171277100934E-5	DEFECT
// Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999824224838983	WITHOUT_CLASSIFICATION	1.7577516101598024E-5	DEFECT
// Fill 8 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 22 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999878989288143	WITHOUT_CLASSIFICATION	1.2101071185629335E-5	DEFECT
// Fill 16 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 4 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 10 of value (byte) -19 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 17 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999957047067419	WITHOUT_CLASSIFICATION	4.295293258085468E-6	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999982588287229	WITHOUT_CLASSIFICATION	1.741171277100934E-5	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999982588287229	WITHOUT_CLASSIFICATION	1.741171277100934E-5	DEFECT
// Fill 3 of value (byte) 33 // Fill 4 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999893330262787	WITHOUT_CLASSIFICATION	1.0666973721298363E-5	DEFECT
// Fill 7 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87 // Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.999987333810581	WITHOUT_CLASSIFICATION	1.2666189419046814E-5	DEFECT
// Fill 4 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999900678854504	WITHOUT_CLASSIFICATION	9.932114549437768E-6	DEFECT
// Fill 3 of value (byte) -19 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 2 of value (byte) -19 // Fill 16 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999942894152709	WITHOUT_CLASSIFICATION	5.710584729053132E-6	DEFECT
// Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 22 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999927715299912	WITHOUT_CLASSIFICATION	7.22847000880273E-6	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999867809944907	WITHOUT_CLASSIFICATION	1.321900550921762E-5	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999867809944907	WITHOUT_CLASSIFICATION	1.321900550921762E-5	DEFECT
// Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999859010793002	WITHOUT_CLASSIFICATION	1.4098920699788093E-5	DEFECT
// Fill 5 of value (byte) -87 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87 // Fill 11 of value (byte) 33 // Fill 4 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999993097683034	WITHOUT_CLASSIFICATION	6.902316966069796E-6	DEFECT
// Fill 7 of value (byte) 33 // Fill 12 of value (byte) -87 // Fill 3 of value (byte) -19 // Fill 12 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999853108492933	WITHOUT_CLASSIFICATION	1.4689150706697685E-5	DEFECT
// Fill 22 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999986795491606	WITHOUT_CLASSIFICATION	1.3204508394188868E-5	DEFECT
// Fill 5 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999885754217216	WITHOUT_CLASSIFICATION	1.1424578278478521E-5	DEFECT
// Fill 8 of value (byte) -87	WITHOUT_CLASSIFICATION	0.999979318335866	WITHOUT_CLASSIFICATION	2.0681664134110903E-5	DEFECT
// Fill 3 of value (byte) -87 // Fill 18 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999815991878929	WITHOUT_CLASSIFICATION	1.8400812107158163E-5	DEFECT
// Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999824224838983	WITHOUT_CLASSIFICATION	1.7577516101598024E-5	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999982588287229	WITHOUT_CLASSIFICATION	1.741171277100934E-5	DEFECT
// Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 4 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999893096378595	WITHOUT_CLASSIFICATION	1.06903621404542E-5	DEFECT
// Fill 3 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 18 of value (byte) 33 // Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999924445018058	WITHOUT_CLASSIFICATION	7.555498194276237E-6	DEFECT
// Fill 6 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999868060382336	WITHOUT_CLASSIFICATION	1.3193961766248214E-5	DEFECT
// Fill 4 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999903729544442	WITHOUT_CLASSIFICATION	9.627045555929535E-6	DEFECT
// Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 3 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999878675249695	WITHOUT_CLASSIFICATION	1.2132475030428084E-5	DEFECT
// Fill 3 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 5 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999888483903803	WITHOUT_CLASSIFICATION	1.1151609619776218E-5	DEFECT
// Fill 4 of value (byte) -87 // Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999876156710283	WITHOUT_CLASSIFICATION	1.238432897163312E-5	DEFECT
// Fill 15 of value (byte) 33 // Fill 9 of value (byte) -87 // Fill 17 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999877421023966	WITHOUT_CLASSIFICATION	1.2257897603396083E-5	DEFECT
// Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999835089930708	WITHOUT_CLASSIFICATION	1.6491006929271425E-5	DEFECT
// Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999835089930708	WITHOUT_CLASSIFICATION	1.6491006929271425E-5	DEFECT
// Fill 23 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999889792968502	WITHOUT_CLASSIFICATION	1.1020703149806873E-5	DEFECT
// Fill 23 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999889792968502	WITHOUT_CLASSIFICATION	1.1020703149806873E-5	DEFECT
// Fill 10 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999864674021258	WITHOUT_CLASSIFICATION	1.3532597874153689E-5	DEFECT
// Fill 5 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 7 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999889720656467	WITHOUT_CLASSIFICATION	1.1027934353317E-5	DEFECT
// Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999824224838983	WITHOUT_CLASSIFICATION	1.7577516101598024E-5	DEFECT
// Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999839347367171	WITHOUT_CLASSIFICATION	1.606526328291023E-5	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999982588287229	WITHOUT_CLASSIFICATION	1.741171277100934E-5	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999867809944907	WITHOUT_CLASSIFICATION	1.321900550921762E-5	DEFECT
// Fill 4 of value (byte) -87 // Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999876156710283	WITHOUT_CLASSIFICATION	1.238432897163312E-5	DEFECT
// Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999835089930708	WITHOUT_CLASSIFICATION	1.6491006929271425E-5	DEFECT
// Fill 23 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999889792968502	WITHOUT_CLASSIFICATION	1.1020703149806873E-5	DEFECT
// Fill 5 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 7 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999889720656467	WITHOUT_CLASSIFICATION	1.1027934353317E-5	DEFECT
// Fill 4 of value (byte) -87 // Fill 7 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 7 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999881550509188	WITHOUT_CLASSIFICATION	1.1844949081272903E-5	DEFECT
// Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 18 of value (byte) 33 // Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999924279355598	WITHOUT_CLASSIFICATION	7.5720644401825115E-6	DEFECT
// Fill 16 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 6 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999950915474289	WITHOUT_CLASSIFICATION	4.908452571007419E-6	DEFECT
// Fill 8 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 145 of value (byte) 33 // Fill 46 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999957682353412	WITHOUT_CLASSIFICATION	4.231764658864196E-6	DEFECT
// Fill 2 of value (byte) -19 // Fill 7 of value (byte) -87 // Fill 5 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 9 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999918905070437	WITHOUT_CLASSIFICATION	8.10949295632021E-6	DEFECT
// Fill 10 of value (byte) -87 // Fill 39 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999904998916782	WITHOUT_CLASSIFICATION	9.500108321885169E-6	DEFECT
// Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999849276396149	WITHOUT_CLASSIFICATION	1.5072360385119327E-5	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999867809944907	WITHOUT_CLASSIFICATION	1.321900550921762E-5	DEFECT
// Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999865306411468	WITHOUT_CLASSIFICATION	1.3469358853048835E-5	DEFECT
// Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999849276396149	WITHOUT_CLASSIFICATION	1.5072360385119327E-5	DEFECT
// Fill 6 of value (byte) 33 // Fill 4 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999899626590327	WITHOUT_CLASSIFICATION	1.0037340967311191E-5	DEFECT
// Fill 2 of value (byte) -19 // Fill 6 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999870783510034	WITHOUT_CLASSIFICATION	1.2921648996532992E-5	DEFECT
// Fill 2 of value (byte) 33 // Fill 5 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999890855669396	WITHOUT_CLASSIFICATION	1.0914433060354049E-5	DEFECT
// Fill 4 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999908769016063	WITHOUT_CLASSIFICATION	9.123098393678492E-6	DEFECT
// Fill 33 of value (byte) -19 // Fill 7 of value (byte) 33 // Fill 20 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999905169319621	WITHOUT_CLASSIFICATION	9.483068037905046E-6	DEFECT
// Fill 6 of value (byte) -87 // Fill 4 of value (byte) 33 // Fill 6 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999878283549742	WITHOUT_CLASSIFICATION	1.2171645025688185E-5	DEFECT
// Fill 21 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 7 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999846640824543	WITHOUT_CLASSIFICATION	1.533591754571216E-5	DEFECT
// Fill 230 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 10 of value (byte) 33 // Fill 39 of value (byte) -19 // Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999896318506113	WITHOUT_CLASSIFICATION	1.0368149388631238E-5	DEFECT
// Fill 5 of value (byte) -19 // Fill 41 of value (byte) 33	WITHOUT_CLASSIFICATION	0.999988771409577	WITHOUT_CLASSIFICATION	1.1228590423065554E-5	DEFECT
// Fill 11 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999824059937392	WITHOUT_CLASSIFICATION	1.759400626079067E-5	DEFECT
// Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999855340714597	WITHOUT_CLASSIFICATION	1.4465928540219609E-5	DEFECT
// Fill 5 of value (byte) 33 // Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999853799972489	WITHOUT_CLASSIFICATION	1.4620002750992631E-5	DEFECT
// Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999869443566393	WITHOUT_CLASSIFICATION	1.3055643360792246E-5	DEFECT
// Fill 40 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999896613552768	WITHOUT_CLASSIFICATION	1.033864472329023E-5	DEFECT
// Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.999984010401638	WITHOUT_CLASSIFICATION	1.598959836198473E-5	DEFECT
// Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 7 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999871620694445	WITHOUT_CLASSIFICATION	1.2837930555603198E-5	DEFECT
// Fill 7 of value (byte) -19 // Fill 40 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999905111495235	WITHOUT_CLASSIFICATION	9.488850476403286E-6	DEFECT
// Fill 4 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999850798331412	WITHOUT_CLASSIFICATION	1.492016685869574E-5	DEFECT
// Fill 8 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999811968997704	WITHOUT_CLASSIFICATION	1.880310022953476E-5	DEFECT
// Fill 68 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999849153594378	WITHOUT_CLASSIFICATION	1.5084640562174082E-5	DEFECT
// // Public static methods //	WITHOUT_CLASSIFICATION	0.9999946440485714	WITHOUT_CLASSIFICATION	5.3559514286138275E-6	DEFECT
// Fill 31 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 53 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999893535609582	WITHOUT_CLASSIFICATION	1.0646439041723534E-5	DEFECT
// Fill 7 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 4 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 13 of value (byte) -19 // Fill 5 of value (byte) 33 // Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999950862564115	WITHOUT_CLASSIFICATION	4.91374358849636E-6	DEFECT
// Fill 7 of value (byte) -19 // Fill 211 of value (byte) 33 // Fill 13 of value (byte) -87 // Fill 4 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999913189874898	WITHOUT_CLASSIFICATION	8.681012510195767E-6	DEFECT
// Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999855340714597	WITHOUT_CLASSIFICATION	1.4465928540219609E-5	DEFECT
// Fill 81 of value (byte) 33 // Fill 3 of value (byte) -19 // Fill 3714 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999859927664512	WITHOUT_CLASSIFICATION	1.4007233548696722E-5	DEFECT
// Fill 25 of value (byte) 33 // Fill 9 of value (byte) -19 // Fill 6 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999913060476499	WITHOUT_CLASSIFICATION	8.693952350023017E-6	DEFECT
// Fill 5 of value (byte) -87 // Fill 11 of value (byte) 33 // Fill 84 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 90 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999956435781965	WITHOUT_CLASSIFICATION	4.356421803504202E-6	DEFECT
// isValid(int):boolean	WITHOUT_CLASSIFICATION	0.9999889955302309	WITHOUT_CLASSIFICATION	1.1004469769026034E-5	DEFECT
// isInvalid(int):boolean	WITHOUT_CLASSIFICATION	0.99999475160529	WITHOUT_CLASSIFICATION	5.248394709920152E-6	DEFECT
// isContent(int):boolean	WITHOUT_CLASSIFICATION	0.9999954312054163	WITHOUT_CLASSIFICATION	4.568794583759685E-6	DEFECT
// isMarkup(int):boolean	WITHOUT_CLASSIFICATION	0.9999968613216942	WITHOUT_CLASSIFICATION	3.1386783058140877E-6	DEFECT
// isSpace(int):boolean	WITHOUT_CLASSIFICATION	0.999997788915498	WITHOUT_CLASSIFICATION	2.211084502102023E-6	DEFECT
// isNameStart(int):boolean	WITHOUT_CLASSIFICATION	0.9999986109131149	WITHOUT_CLASSIFICATION	1.3890868850605022E-6	DEFECT
// isName(int):boolean	WITHOUT_CLASSIFICATION	0.9999964351613567	WITHOUT_CLASSIFICATION	3.5648386433013725E-6	DEFECT
// isNCNameStart(int):boolean	WITHOUT_CLASSIFICATION	0.999999091171563	WITHOUT_CLASSIFICATION	9.088284369967544E-7	DEFECT
// isNCName(int):boolean	WITHOUT_CLASSIFICATION	0.9999976676554906	WITHOUT_CLASSIFICATION	2.3323445094079155E-6	DEFECT
// isPubid(int):boolean	WITHOUT_CLASSIFICATION	0.9999856600867044	WITHOUT_CLASSIFICATION	1.433991329543872E-5	DEFECT
/*      * [5] Name ::= (Letter | '_' | ':') (NameChar)*      */	WITHOUT_CLASSIFICATION	0.9999986365213451	WITHOUT_CLASSIFICATION	1.3634786548799828E-6	DEFECT
// isValidName(String):boolean	WITHOUT_CLASSIFICATION	0.9999973277221827	WITHOUT_CLASSIFICATION	2.6722778171762194E-6	DEFECT
/*      * from the namespace rec      * [4] NCName ::= (Letter | '_') (NCNameChar)*      */	WITHOUT_CLASSIFICATION	0.9999995851202335	WITHOUT_CLASSIFICATION	4.148797664636413E-7	DEFECT
// isValidNCName(String):boolean	WITHOUT_CLASSIFICATION	0.9999977479612095	WITHOUT_CLASSIFICATION	2.2520387904005865E-6	DEFECT
/*      * [7] Nmtoken ::= (NameChar)+      */	WITHOUT_CLASSIFICATION	0.9999821628877321	WITHOUT_CLASSIFICATION	1.7837112267955622E-5	DEFECT
// encodings	WITHOUT_CLASSIFICATION	0.999880343417398	WITHOUT_CLASSIFICATION	1.1965658260201311E-4	DEFECT
// isValidIANAEncoding(String):boolean	WITHOUT_CLASSIFICATION	0.9999816742570881	WITHOUT_CLASSIFICATION	1.8325742911926226E-5	DEFECT
// class XMLChar	WITHOUT_CLASSIFICATION	0.9999830727381679	WITHOUT_CLASSIFICATION	1.6927261832081535E-5	DEFECT
//order constants	WITHOUT_CLASSIFICATION	0.999846616457499	WITHOUT_CLASSIFICATION	1.5338354250112182E-4	DEFECT
// check whether the character is in the range 0x30 ~ 0x39	WITHOUT_CLASSIFICATION	0.9999921948066917	WITHOUT_CLASSIFICATION	7.805193308298473E-6	DEFECT
// interface TypeValidator	WITHOUT_CLASSIFICATION	0.9999844412143153	WITHOUT_CLASSIFICATION	1.55587856846088E-5	DEFECT
// This implementation was changed to not introduce multi line content.	WITHOUT_CLASSIFICATION	0.9998533690518613	WITHOUT_CLASSIFICATION	1.4663094813874614E-4	DEFECT
// form integral number of 6-bit groups	WITHOUT_CLASSIFICATION	0.9999985122715979	WITHOUT_CLASSIFICATION	1.4877284021396307E-6	DEFECT
//encodedData[encodedIndex] = 0xa;	WITHOUT_CLASSIFICATION	0.9996267818038931	WITHOUT_CLASSIFICATION	3.732181961068582E-4	DEFECT
// remove white spaces	WITHOUT_CLASSIFICATION	0.9999984241159646	WITHOUT_CLASSIFICATION	1.5758840353484291E-6	DEFECT
//should be divisible by four	WITHOUT_CLASSIFICATION	0.9999186506043142	WITHOUT_CLASSIFICATION	8.134939568576967E-5	DEFECT
//if found "no data" just return null	WITHOUT_CLASSIFICATION	0.9999688183671581	WITHOUT_CLASSIFICATION	3.118163284181351E-5	DEFECT
//One PAD  e.g. 3cQ[Pad]	WITHOUT_CLASSIFICATION	0.9998486240642912	WITHOUT_CLASSIFICATION	1.51375935708745E-4	DEFECT
//last 2 bits should be zero	WITHOUT_CLASSIFICATION	0.9998117086984972	WITHOUT_CLASSIFICATION	1.88291301502719E-4	DEFECT
//an error  like "3c[Pad]r", "3cdX", "3cXd", "3cXX" where X is non data	WITHOUT_CLASSIFICATION	0.9957683592701835	WITHOUT_CLASSIFICATION	0.004231640729816463	DEFECT
//No PAD e.g 3cQl	WITHOUT_CLASSIFICATION	0.9996472797218509	WITHOUT_CLASSIFICATION	3.5272027814914217E-4	DEFECT
// count characters that's not whitespace	WITHOUT_CLASSIFICATION	0.9999918490767856	WITHOUT_CLASSIFICATION	8.150923214355731E-6	DEFECT
// // Data //	WITHOUT_CLASSIFICATION	0.9999731355313491	WITHOUT_CLASSIFICATION	2.6864468650858645E-5	DEFECT
// // Static initialization //	WITHOUT_CLASSIFICATION	0.9999553252794166	WITHOUT_CLASSIFICATION	4.4674720583409036E-5	DEFECT
// Add support for Cp1252 and its friends	WITHOUT_CLASSIFICATION	0.9999944326296794	WITHOUT_CLASSIFICATION	5.567370320629719E-6	DEFECT
// added since this encoding only differs w.r.t. presentation 	WITHOUT_CLASSIFICATION	0.9996136140477018	WITHOUT_CLASSIFICATION	3.86385952298291E-4	DEFECT
// Adding new aliases as proposed in // http://lists.w3.org/Archives/Public/ietf-charset/2002JulSep/0058.html	WITHOUT_CLASSIFICATION	0.9999895827095492	WITHOUT_CLASSIFICATION	1.0417290450768383E-5	DEFECT
// REVISIT: //   j:CNS11643 -> EUC-TW? //   ISO-2022-CN? ISO-2022-CN-EXT?	WITHOUT_CLASSIFICATION	0.9998773732827511	WITHOUT_CLASSIFICATION	1.22626717248902E-4	DEFECT
// add Java to IANA encoding mappings //fJava2IANAMap.put("8859_1",    "US-ASCII"); // ?	WITHOUT_CLASSIFICATION	0.9999990582058754	WITHOUT_CLASSIFICATION	9.417941245718464E-7	DEFECT
// proposed addition (see above for details):	WITHOUT_CLASSIFICATION	0.9999842020443143	WITHOUT_CLASSIFICATION	1.5797955685722275E-5	DEFECT
// <clinit>()	WITHOUT_CLASSIFICATION	0.9999874747579374	WITHOUT_CLASSIFICATION	1.2525242062751302E-5	DEFECT
// // Public static methods //	WITHOUT_CLASSIFICATION	0.9999946440485714	WITHOUT_CLASSIFICATION	5.3559514286138275E-6	DEFECT
// putIANA2JavaMapping(String,String)	WITHOUT_CLASSIFICATION	0.9999950399322168	WITHOUT_CLASSIFICATION	4.960067783135469E-6	DEFECT
// getIANA2JavaMapping(String):String	WITHOUT_CLASSIFICATION	0.9999911170286059	WITHOUT_CLASSIFICATION	8.882971394087317E-6	DEFECT
// removeIANA2JavaMapping(String):String	WITHOUT_CLASSIFICATION	0.9999898842587075	WITHOUT_CLASSIFICATION	1.0115741292492053E-5	DEFECT
//RFC 2732 added '[' and ']' as reserved characters	WITHOUT_CLASSIFICATION	0.999997642196283	WITHOUT_CLASSIFICATION	2.3578037171348226E-6	DEFECT
// Add ASCII Digits and ASCII Hex Numbers	WITHOUT_CLASSIFICATION	0.9999971161851241	WITHOUT_CLASSIFICATION	2.8838148760234077E-6	DEFECT
// Add ASCII Letters and ASCII Hex Numbers	WITHOUT_CLASSIFICATION	0.9999983374764174	WITHOUT_CLASSIFICATION	1.6625235826040859E-6	DEFECT
// isValidName(String):boolean	WITHOUT_CLASSIFICATION	0.9999973277221827	WITHOUT_CLASSIFICATION	2.6722778171762194E-6	DEFECT
// Fill 3 of value (byte) -87 // Fill 6 of value (byte) 33 // Fill 40 of value (byte) -19 // Fill 7379 of value (byte) 33 // Fill 20902 of value (byte) -19 // Fill 3162 of value (byte) 33 // Fill 11172 of value (byte) -19 // Fill 92 of value (byte) 33 // Fill 8190 of value (byte) 33	WITHOUT_CLASSIFICATION	0.999995544667325	WITHOUT_CLASSIFICATION	4.455332674988563E-6	DEFECT
// if the character is in the range 0x30 ~ 0x39, return its int value (0~9), // otherwise, return -1	WITHOUT_CLASSIFICATION	0.9999996080296563	WITHOUT_CLASSIFICATION	3.919703437185408E-7	DEFECT
// Add Reserved Characters	WITHOUT_CLASSIFICATION	0.9999993566635144	WITHOUT_CLASSIFICATION	6.433364856817221E-7	DEFECT
// Add Scheme Characters	WITHOUT_CLASSIFICATION	0.9999986061850663	WITHOUT_CLASSIFICATION	1.393814933707808E-6	DEFECT
// Add Userinfo Characters	WITHOUT_CLASSIFICATION	0.9999981640107413	WITHOUT_CLASSIFICATION	1.8359892587705093E-6	DEFECT
// Add Path Characters	WITHOUT_CLASSIFICATION	0.9999976443872111	WITHOUT_CLASSIFICATION	2.355612789002139E-6	DEFECT
// Just use null.	WITHOUT_CLASSIFICATION	0.9999930865245688	WITHOUT_CLASSIFICATION	6.913475431186404E-6	DEFECT
// search backwards starting from character before ':'.	WITHOUT_CLASSIFICATION	0.999971599419719	WITHOUT_CLASSIFICATION	2.8400580281067967E-5	DEFECT
// A standalone base is a valid URI according to spec	WITHOUT_CLASSIFICATION	0.9999746138381712	WITHOUT_CLASSIFICATION	2.5386161828829377E-5	DEFECT
// Neither 'scheme:' or 'scheme:#fragment' are valid URIs.	WITHOUT_CLASSIFICATION	0.9999976590156165	WITHOUT_CLASSIFICATION	2.340984383475283E-6	DEFECT
// Authority will be everything up to path, query or fragment	WITHOUT_CLASSIFICATION	0.9999508319968585	WITHOUT_CLASSIFICATION	4.9168003141464445E-5	DEFECT
// Attempt to parse authority. If the section is an empty string // this is a valid server based authority, so set the host to this // value.	WITHOUT_CLASSIFICATION	0.9999827261962192	WITHOUT_CLASSIFICATION	1.7273803780806235E-5	DEFECT
// If we didn't find authority we need to back up. Attempt to // match against abs_path next.	WITHOUT_CLASSIFICATION	0.9999900788815751	WITHOUT_CLASSIFICATION	9.921118424964403E-6	DEFECT
// Resolve relative URI to base URI - see RFC 2396 Section 5.2 // In some cases, it might make more sense to throw an exception // (when scheme is specified is the string spec and the base URI // is also specified, for example), but we're just following the // RFC specifications	WITHOUT_CLASSIFICATION	0.9999997702171507	WITHOUT_CLASSIFICATION	2.2978284935186735E-7	DEFECT
// check to see if this is the current doc - RFC 2396 5.2 #2 // note that this is slightly different from the RFC spec in that // we don't include the check for query string being null // - this handles cases where the urispec is just a query // string or a fragment (e.g. "?y" or "#s") - // see <http://www.ics.uci.edu/~fielding/url/test1.html> which // identified this as a bug in the RFC	WITHOUT_CLASSIFICATION	0.9999655770533716	WITHOUT_CLASSIFICATION	3.442294662829463E-5	DEFECT
// check for authority - RFC 2396 5.2 #4 // if we found a host, then we've got a network path, so we're done	WITHOUT_CLASSIFICATION	0.9999946251564706	WITHOUT_CLASSIFICATION	5.3748435293882295E-6	DEFECT
// check for absolute path - RFC 2396 5.2 #5	WITHOUT_CLASSIFICATION	0.9999992879464535	WITHOUT_CLASSIFICATION	7.120535463511021E-7	DEFECT
// 6a - get all but the last segment of the base URI path	WITHOUT_CLASSIFICATION	0.9999498547541414	WITHOUT_CLASSIFICATION	5.014524585849473E-5	DEFECT
// 6b - append the relative URI path	WITHOUT_CLASSIFICATION	0.9999933758355635	WITHOUT_CLASSIFICATION	6.624164436624434E-6	DEFECT
// 6c - remove all "./" where "." is a complete path segment	WITHOUT_CLASSIFICATION	0.999998371409696	WITHOUT_CLASSIFICATION	1.6285903039591831E-6	DEFECT
// 6d - remove "." if path ends with "." as a complete path segment	WITHOUT_CLASSIFICATION	0.999997857876815	WITHOUT_CLASSIFICATION	2.142123185003699E-6	DEFECT
// 6e - remove all "<segment>/../" where "<segment>" is a complete // path segment not equal to ".."	WITHOUT_CLASSIFICATION	0.9999865096575772	WITHOUT_CLASSIFICATION	1.3490342422859098E-5	DEFECT
// 6f - remove ending "<segment>/.." where "<segment>" is a // complete path segment	WITHOUT_CLASSIFICATION	0.9999961821146021	WITHOUT_CLASSIFICATION	3.817885398001865E-6	DEFECT
// userinfo is everything up to @	WITHOUT_CLASSIFICATION	0.9999915116884802	WITHOUT_CLASSIFICATION	8.488311519811929E-6	DEFECT
// host is everything up to last ':', or up to  // and including ']' if followed by ':'.	WITHOUT_CLASSIFICATION	0.9999964146146082	WITHOUT_CLASSIFICATION	3.585385391835489E-6	DEFECT
// port	WITHOUT_CLASSIFICATION	0.999944722087149	WITHOUT_CLASSIFICATION	5.527791285095212E-5	DEFECT
// Check if the host is well formed.	WITHOUT_CLASSIFICATION	0.9999967094433174	WITHOUT_CLASSIFICATION	3.290556682612005E-6	DEFECT
// Check that port is well formed if it exists. // REVISIT: There's no restriction on port value ranges, but // perform the same check as in setPort to be consistent. Pass // in a string to this method instead of an integer.	WITHOUT_CLASSIFICATION	0.9999958860944491	WITHOUT_CLASSIFICATION	4.1139055508248785E-6	DEFECT
// Check that userinfo is well formed if it exists.	WITHOUT_CLASSIFICATION	0.9999985858049545	WITHOUT_CLASSIFICATION	1.414195045595976E-6	DEFECT
// Userinfo can contain alphanumerics, mark characters, escaped // and ';',':','&','=','+','$',','	WITHOUT_CLASSIFICATION	0.9999976736719498	WITHOUT_CLASSIFICATION	2.3263280502391678E-6	DEFECT
// check for valid escape sequence	WITHOUT_CLASSIFICATION	0.9999963533521831	WITHOUT_CLASSIFICATION	3.6466478170787348E-6	DEFECT
// check for valid escape sequence	WITHOUT_CLASSIFICATION	0.9999963533521831	WITHOUT_CLASSIFICATION	3.6466478170787348E-6	DEFECT
// can check against path characters because the set // is the same except for '/' which we've already excluded.	WITHOUT_CLASSIFICATION	0.9999999279725931	WITHOUT_CLASSIFICATION	7.202740697893054E-8	DEFECT
// path - everything up to query string or fragment	WITHOUT_CLASSIFICATION	0.9999875234080392	WITHOUT_CLASSIFICATION	1.2476591960863391E-5	DEFECT
// RFC 2732 only allows '[' and ']' to appear in the opaque part.	WITHOUT_CLASSIFICATION	0.9999082966970416	WITHOUT_CLASSIFICATION	9.170330295836299E-5	DEFECT
// Scan path. // abs_path = "/"  path_segments // rel_path = rel_segment [ abs_path ]	WITHOUT_CLASSIFICATION	0.9999988470317793	WITHOUT_CLASSIFICATION	1.1529682207677836E-6	DEFECT
// Scan opaque part. // opaque_part = uric_no_slash *uric	WITHOUT_CLASSIFICATION	0.9999994846508443	WITHOUT_CLASSIFICATION	5.153491555877313E-7	DEFECT
// query - starts with ? and up to fragment or end	WITHOUT_CLASSIFICATION	0.9999722595401115	WITHOUT_CLASSIFICATION	2.774045988861014E-5	DEFECT
// fragment - starts with #	WITHOUT_CLASSIFICATION	0.9999877735097674	WITHOUT_CLASSIFICATION	1.2226490232639513E-5	DEFECT
// Server based authority.	WITHOUT_CLASSIFICATION	0.9999913285626729	WITHOUT_CLASSIFICATION	8.671437327099812E-6	DEFECT
// Registry based authority.	WITHOUT_CLASSIFICATION	0.9999954391296045	WITHOUT_CLASSIFICATION	4.560870395458085E-6	DEFECT
// userinfo can contain alphanumerics, mark characters, escaped // and ';',':','&','=','+','$',','	WITHOUT_CLASSIFICATION	0.999997734152198	WITHOUT_CLASSIFICATION	2.2658478020119766E-6	DEFECT
// reg_name = 1*( unreserved | escaped | "$" | "," |  //            ";" | ":" | "@" | "&" | "=" | "+" )	WITHOUT_CLASSIFICATION	0.9999978819207043	WITHOUT_CLASSIFICATION	2.118079295621452E-6	DEFECT
// presence of the host (whether valid or empty) means // double-slashes which means generic uri	WITHOUT_CLASSIFICATION	0.9999988082828036	WITHOUT_CLASSIFICATION	1.1917171963715812E-6	DEFECT
// Check if the host is a valid IPv6reference.	WITHOUT_CLASSIFICATION	0.9999963996668378	WITHOUT_CLASSIFICATION	3.6003331621079623E-6	DEFECT
// Cannot start with a '.', '-', or end with a '-'.	WITHOUT_CLASSIFICATION	0.9999932942810733	WITHOUT_CLASSIFICATION	6.705718926660629E-6	DEFECT
// rightmost domain label starting with digit indicates IP address // since top level domain label can only start with an alpha // see RFC 2396 Section 3.2.2	WITHOUT_CLASSIFICATION	0.9999560950969669	WITHOUT_CLASSIFICATION	4.390490303312303E-5	DEFECT
// RFC 2396 states that hostnames take the form described in  // RFC 1034 (Section 3) and RFC 1123 (Section 2.1). According // to RFC 1034, hostnames are limited to 255 characters.	WITHOUT_CLASSIFICATION	0.9999990500375685	WITHOUT_CLASSIFICATION	9.499624314937908E-7	DEFECT
// domain labels can contain alphanumerics and '-" // but must start and end with an alphanumeric	WITHOUT_CLASSIFICATION	0.9999891695380679	WITHOUT_CLASSIFICATION	1.0830461931968469E-5	DEFECT
// RFC 1034: Labels must be 63 characters or less.	WITHOUT_CLASSIFICATION	0.9999997169620313	WITHOUT_CLASSIFICATION	2.83037968640725E-7	DEFECT
// Check that that there are no more than three digits // in this segment.	WITHOUT_CLASSIFICATION	0.999964405690965	WITHOUT_CLASSIFICATION	3.559430903506825E-5	DEFECT
// Check that this segment is not greater than 255.	WITHOUT_CLASSIFICATION	0.999954605562238	WITHOUT_CLASSIFICATION	4.539443776200126E-5	DEFECT
// Check if string is a potential match for IPv6reference.	WITHOUT_CLASSIFICATION	0.9999971582630327	WITHOUT_CLASSIFICATION	2.841736967311445E-6	DEFECT
// Counter for the number of 16-bit sections read in the address.	WITHOUT_CLASSIFICATION	0.9999943062633676	WITHOUT_CLASSIFICATION	5.693736632351069E-6	DEFECT
// Scan hex sequence before possible '::' or IPv4 address.	WITHOUT_CLASSIFICATION	0.9998479025557292	WITHOUT_CLASSIFICATION	1.5209744427079687E-4	DEFECT
// Address must contain 128-bits of information.	WITHOUT_CLASSIFICATION	0.9999559685908973	WITHOUT_CLASSIFICATION	4.403140910268002E-5	DEFECT
// '::' represents at least one 16-bit group of zeros.	WITHOUT_CLASSIFICATION	0.9999025280042814	WITHOUT_CLASSIFICATION	9.747199571868006E-5	DEFECT
// Trailing zeros will fill out the rest of the address.	WITHOUT_CLASSIFICATION	0.9966501800989851	WITHOUT_CLASSIFICATION	0.0033498199010149423	DEFECT
// 3. Scan hex sequence after '::'.	WITHOUT_CLASSIFICATION	0.9999858738493964	WITHOUT_CLASSIFICATION	1.4126150603584128E-5	DEFECT
// IPv6 addresses are 128-bit, so there can be at most eight sections.	WITHOUT_CLASSIFICATION	0.9999955763893076	WITHOUT_CLASSIFICATION	4.4236106923484E-6	DEFECT
// This could be '::'.	WITHOUT_CLASSIFICATION	0.9980650254870471	WITHOUT_CLASSIFICATION	0.001934974512952764	DEFECT
// There can be at most 4 hex digits per group.	WITHOUT_CLASSIFICATION	0.9999012372826563	WITHOUT_CLASSIFICATION	9.876271734353941E-5	DEFECT
// which ASCII characters need to be escaped	WITHOUT_CLASSIFICATION	0.9999987519832516	WITHOUT_CLASSIFICATION	1.2480167484420239E-6	DEFECT
// Trying to match the following productions: // hexseq = hex4 *( ":" hex4) // hex4   = 1*4HEXDIG	WITHOUT_CLASSIFICATION	0.9994075761303676	WITHOUT_CLASSIFICATION	5.924238696324571E-4	DEFECT
// initialize the above 3 arrays	WITHOUT_CLASSIFICATION	0.9999994416591876	WITHOUT_CLASSIFICATION	5.583408122880653E-7	DEFECT
// if it's not an ASCII character, break here, and use UTF-8 encoding	WITHOUT_CLASSIFICATION	0.9999363641671682	WITHOUT_CLASSIFICATION	6.363583283174463E-5	DEFECT
// we saw some non-ascii character	WITHOUT_CLASSIFICATION	0.9999989204964079	WITHOUT_CLASSIFICATION	1.079503592004839E-6	DEFECT
// get UTF-8 bytes for the remaining sub-string	WITHOUT_CLASSIFICATION	0.9999883695657875	WITHOUT_CLASSIFICATION	1.1630434212422808E-5	DEFECT
// for each byte	WITHOUT_CLASSIFICATION	0.9999912964016714	WITHOUT_CLASSIFICATION	8.70359832860614E-6	DEFECT
// for non-ascii character: make it positive, then escape	WITHOUT_CLASSIFICATION	0.9999908059599405	WITHOUT_CLASSIFICATION	9.194040059418441E-6	DEFECT
// should never happen	WITHOUT_CLASSIFICATION	0.9998492834224694	WITHOUT_CLASSIFICATION	1.5071657753056914E-4	DEFECT
// This might be invalid or an IPv4address. If it's potentially an IPv4address, // backup to just after the last valid character that matches hexseq.	WITHOUT_CLASSIFICATION	0.9999928064854591	WITHOUT_CLASSIFICATION	7.193514540978798E-6	DEFECT
// // XML Schema anyURI specific information //	WITHOUT_CLASSIFICATION	0.9999243070251054	WITHOUT_CLASSIFICATION	7.569297489465046E-5	DEFECT
// To encode special characters in anyURI, by using %HH to represent // special ASCII characters: 0x00~0x1F, 0x7F, ' ', '<', '>', etc. // and non-ASCII characters (whose value >= 128).	WITHOUT_CLASSIFICATION	0.9998860822083986	WITHOUT_CLASSIFICATION	1.139177916013658E-4	DEFECT
// for each character in the anyURI	WITHOUT_CLASSIFICATION	0.9999955573771125	WITHOUT_CLASSIFICATION	4.442622887428297E-6	DEFECT
// If encoding happened, create a new string; // otherwise, return the orginal one.	WITHOUT_CLASSIFICATION	0.9998543705808935	WITHOUT_CLASSIFICATION	1.4562941910652925E-4	DEFECT
// // Constants //	WITHOUT_CLASSIFICATION	0.9999748446083133	WITHOUT_CLASSIFICATION	2.515539168667722E-5	DEFECT
// Initializing the Character Flag Array // Code generated by: XMLCharGenerator.	WITHOUT_CLASSIFICATION	0.9997886336427906	WITHOUT_CLASSIFICATION	2.1136635720934153E-4	DEFECT
// Fill 3 of value (byte) 49	WITHOUT_CLASSIFICATION	0.9999885651300809	WITHOUT_CLASSIFICATION	1.1434869919163315E-5	DEFECT
// Fill 6 of value (byte) 49 // Fill 2 of value (byte) -71	WITHOUT_CLASSIFICATION	0.9999910840527689	WITHOUT_CLASSIFICATION	8.915947231069152E-6	DEFECT
// Fill 10 of value (byte) -71	WITHOUT_CLASSIFICATION	0.9999836077671663	WITHOUT_CLASSIFICATION	1.639223283358772E-5	DEFECT
// Fill 8 of value (byte) 33 // Fill 23 of value (byte) -19	WITHOUT_CLASSIFICATION	0.99998740700508	WITHOUT_CLASSIFICATION	1.2592994919842446E-5	DEFECT
// Fill 31 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999861680492779	WITHOUT_CLASSIFICATION	1.3831950722158521E-5	DEFECT
// Fill 58 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 11 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999909786480345	WITHOUT_CLASSIFICATION	9.021351965439377E-6	DEFECT
// Fill 53 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999878057380813	WITHOUT_CLASSIFICATION	1.2194261918801782E-5	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999855366612829	WITHOUT_CLASSIFICATION	1.4463338717115867E-5	DEFECT
// Fill 20 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999908819896534	WITHOUT_CLASSIFICATION	9.118010346685758E-6	DEFECT
// Fill 44 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999868977189507	WITHOUT_CLASSIFICATION	1.3102281049377687E-5	DEFECT
// Fill 7 of value (byte) -19 // Fill 3 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999809458818277	WITHOUT_CLASSIFICATION	1.905411817225508E-5	DEFECT
// Fill 18 of value (byte) -19 // Fill 13 of value (byte) 33 // Fill 12 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999875804716604	WITHOUT_CLASSIFICATION	1.2419528339690477E-5	DEFECT
// Fill 66 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999986661521009	WITHOUT_CLASSIFICATION	1.3338478990975242E-5	DEFECT
// Fill 12 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999858453486435	WITHOUT_CLASSIFICATION	1.415465135649164E-5	DEFECT
// Fill 36 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999910869057791	WITHOUT_CLASSIFICATION	8.913094220837388E-6	DEFECT
// Fill 4 of value (byte) -87 // Fill 9 of value (byte) 33 // Fill 53 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 28 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 8 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 55 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999920513554581	WITHOUT_CLASSIFICATION	7.948644541871609E-6	DEFECT
// Fill 23 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999866063614736	WITHOUT_CLASSIFICATION	1.3393638526379617E-5	DEFECT
// Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999824224838983	WITHOUT_CLASSIFICATION	1.7577516101598024E-5	DEFECT
// Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999839347367171	WITHOUT_CLASSIFICATION	1.606526328291023E-5	DEFECT
// Fill 10 of value (byte) -19 // Fill 8 of value (byte) -87 // Fill 13 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 6 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999902865856009	WITHOUT_CLASSIFICATION	9.713414399217652E-6	DEFECT
// Fill 71 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 5 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999989739975969	WITHOUT_CLASSIFICATION	1.0260024031007874E-5	DEFECT
// Fill 15 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999872291294056	WITHOUT_CLASSIFICATION	1.2770870594404994E-5	DEFECT
// Fill 4 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999986914473966	WITHOUT_CLASSIFICATION	1.3085526033944532E-5	DEFECT
// Fill 15 of value (byte) -87 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999876745169385	WITHOUT_CLASSIFICATION	1.2325483061580558E-5	DEFECT
// Fill 4 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 519 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999941882599568	WITHOUT_CLASSIFICATION	5.811740043241533E-6	DEFECT
// Fill 53 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999879779863832	WITHOUT_CLASSIFICATION	1.2022013616772983E-5	DEFECT
// Fill 8 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 22 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999878989288143	WITHOUT_CLASSIFICATION	1.2101071185629335E-5	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999982588287229	WITHOUT_CLASSIFICATION	1.741171277100934E-5	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999982588287229	WITHOUT_CLASSIFICATION	1.741171277100934E-5	DEFECT
// Fill 3 of value (byte) 33 // Fill 4 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999893330262787	WITHOUT_CLASSIFICATION	1.0666973721298363E-5	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999867809944907	WITHOUT_CLASSIFICATION	1.321900550921762E-5	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999867809944907	WITHOUT_CLASSIFICATION	1.321900550921762E-5	DEFECT
// Fill 5 of value (byte) -87 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87 // Fill 11 of value (byte) 33 // Fill 4 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999993097683034	WITHOUT_CLASSIFICATION	6.902316966069796E-6	DEFECT
// Fill 8 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 22 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999878989288143	WITHOUT_CLASSIFICATION	1.2101071185629335E-5	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999982588287229	WITHOUT_CLASSIFICATION	1.741171277100934E-5	DEFECT
// Fill 7 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87 // Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.999987333810581	WITHOUT_CLASSIFICATION	1.2666189419046814E-5	DEFECT
// Fill 4 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999900678854504	WITHOUT_CLASSIFICATION	9.932114549437768E-6	DEFECT
// Fill 3 of value (byte) -19 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 2 of value (byte) -19 // Fill 16 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999942894152709	WITHOUT_CLASSIFICATION	5.710584729053132E-6	DEFECT
// Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 22 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999927715299912	WITHOUT_CLASSIFICATION	7.22847000880273E-6	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999867809944907	WITHOUT_CLASSIFICATION	1.321900550921762E-5	DEFECT
// Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999859010793002	WITHOUT_CLASSIFICATION	1.4098920699788093E-5	DEFECT
// Fill 7 of value (byte) 33 // Fill 12 of value (byte) -87 // Fill 3 of value (byte) -19 // Fill 12 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999853108492933	WITHOUT_CLASSIFICATION	1.4689150706697685E-5	DEFECT
// Fill 22 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999986795491606	WITHOUT_CLASSIFICATION	1.3204508394188868E-5	DEFECT
// Fill 5 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999885754217216	WITHOUT_CLASSIFICATION	1.1424578278478521E-5	DEFECT
// Fill 8 of value (byte) -87	WITHOUT_CLASSIFICATION	0.999979318335866	WITHOUT_CLASSIFICATION	2.0681664134110903E-5	DEFECT
// Fill 3 of value (byte) -87 // Fill 18 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999815991878929	WITHOUT_CLASSIFICATION	1.8400812107158163E-5	DEFECT
// Fill 5 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 17 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999866809858348	WITHOUT_CLASSIFICATION	1.3319014165132677E-5	DEFECT
// Fill 6 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87 // Fill 8 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999931471683737	WITHOUT_CLASSIFICATION	6.852831626283626E-6	DEFECT
// Fill 3 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 18 of value (byte) 33 // Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999924445018058	WITHOUT_CLASSIFICATION	7.555498194276237E-6	DEFECT
// Fill 6 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999868060382336	WITHOUT_CLASSIFICATION	1.3193961766248214E-5	DEFECT
// Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 3 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999878675249695	WITHOUT_CLASSIFICATION	1.2132475030428084E-5	DEFECT
// Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999824224838983	WITHOUT_CLASSIFICATION	1.7577516101598024E-5	DEFECT
// Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999824224838983	WITHOUT_CLASSIFICATION	1.7577516101598024E-5	DEFECT
// Fill 4 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999903729544442	WITHOUT_CLASSIFICATION	9.627045555929535E-6	DEFECT
// Fill 3 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 5 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999888483903803	WITHOUT_CLASSIFICATION	1.1151609619776218E-5	DEFECT
// Fill 4 of value (byte) -87 // Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999876156710283	WITHOUT_CLASSIFICATION	1.238432897163312E-5	DEFECT
// Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999835089930708	WITHOUT_CLASSIFICATION	1.6491006929271425E-5	DEFECT
// Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999835089930708	WITHOUT_CLASSIFICATION	1.6491006929271425E-5	DEFECT
// Fill 23 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999889792968502	WITHOUT_CLASSIFICATION	1.1020703149806873E-5	DEFECT
// Fill 23 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999889792968502	WITHOUT_CLASSIFICATION	1.1020703149806873E-5	DEFECT
// Fill 10 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999864674021258	WITHOUT_CLASSIFICATION	1.3532597874153689E-5	DEFECT
// Fill 10 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999864674021258	WITHOUT_CLASSIFICATION	1.3532597874153689E-5	DEFECT
// Fill 5 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 7 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999889720656467	WITHOUT_CLASSIFICATION	1.1027934353317E-5	DEFECT
// Fill 4 of value (byte) -87 // Fill 7 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 7 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999881550509188	WITHOUT_CLASSIFICATION	1.1844949081272903E-5	DEFECT
// Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999839347367171	WITHOUT_CLASSIFICATION	1.606526328291023E-5	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999982588287229	WITHOUT_CLASSIFICATION	1.741171277100934E-5	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999867809944907	WITHOUT_CLASSIFICATION	1.321900550921762E-5	DEFECT
// Fill 4 of value (byte) -87 // Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999876156710283	WITHOUT_CLASSIFICATION	1.238432897163312E-5	DEFECT
// Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999835089930708	WITHOUT_CLASSIFICATION	1.6491006929271425E-5	DEFECT
// Fill 23 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999889792968502	WITHOUT_CLASSIFICATION	1.1020703149806873E-5	DEFECT
// Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 18 of value (byte) 33 // Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999924279355598	WITHOUT_CLASSIFICATION	7.5720644401825115E-6	DEFECT
// Fill 16 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 6 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999950915474289	WITHOUT_CLASSIFICATION	4.908452571007419E-6	DEFECT
// Fill 8 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 145 of value (byte) 33 // Fill 46 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999957682353412	WITHOUT_CLASSIFICATION	4.231764658864196E-6	DEFECT
// Fill 2 of value (byte) -19 // Fill 7 of value (byte) -87 // Fill 5 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 9 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999918905070437	WITHOUT_CLASSIFICATION	8.10949295632021E-6	DEFECT
// Fill 10 of value (byte) -87 // Fill 39 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999904998916782	WITHOUT_CLASSIFICATION	9.500108321885169E-6	DEFECT
// Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999865306411468	WITHOUT_CLASSIFICATION	1.3469358853048835E-5	DEFECT
// Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999865306411468	WITHOUT_CLASSIFICATION	1.3469358853048835E-5	DEFECT
// Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999849276396149	WITHOUT_CLASSIFICATION	1.5072360385119327E-5	DEFECT
// Fill 6 of value (byte) 33 // Fill 4 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999899626590327	WITHOUT_CLASSIFICATION	1.0037340967311191E-5	DEFECT
// Fill 2 of value (byte) -19 // Fill 6 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999870783510034	WITHOUT_CLASSIFICATION	1.2921648996532992E-5	DEFECT
// Fill 2 of value (byte) 33 // Fill 5 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999890855669396	WITHOUT_CLASSIFICATION	1.0914433060354049E-5	DEFECT
// Fill 4 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999908769016063	WITHOUT_CLASSIFICATION	9.123098393678492E-6	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999982588287229	WITHOUT_CLASSIFICATION	1.741171277100934E-5	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999867809944907	WITHOUT_CLASSIFICATION	1.321900550921762E-5	DEFECT
// Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999849276396149	WITHOUT_CLASSIFICATION	1.5072360385119327E-5	DEFECT
// Fill 33 of value (byte) -19 // Fill 7 of value (byte) 33 // Fill 20 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999905169319621	WITHOUT_CLASSIFICATION	9.483068037905046E-6	DEFECT
// Fill 6 of value (byte) -87 // Fill 4 of value (byte) 33 // Fill 6 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999878283549742	WITHOUT_CLASSIFICATION	1.2171645025688185E-5	DEFECT
// Fill 21 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 7 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999846640824543	WITHOUT_CLASSIFICATION	1.533591754571216E-5	DEFECT
// Fill 5 of value (byte) -19 // Fill 41 of value (byte) 33	WITHOUT_CLASSIFICATION	0.999988771409577	WITHOUT_CLASSIFICATION	1.1228590423065554E-5	DEFECT
// Fill 11 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999824059937392	WITHOUT_CLASSIFICATION	1.759400626079067E-5	DEFECT
// Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999855340714597	WITHOUT_CLASSIFICATION	1.4465928540219609E-5	DEFECT
// Fill 5 of value (byte) 33 // Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999853799972489	WITHOUT_CLASSIFICATION	1.4620002750992631E-5	DEFECT
// Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999869443566393	WITHOUT_CLASSIFICATION	1.3055643360792246E-5	DEFECT
// Fill 40 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999896613552768	WITHOUT_CLASSIFICATION	1.033864472329023E-5	DEFECT
// Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.999984010401638	WITHOUT_CLASSIFICATION	1.598959836198473E-5	DEFECT
// Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 7 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999871620694445	WITHOUT_CLASSIFICATION	1.2837930555603198E-5	DEFECT
// Fill 7 of value (byte) -19 // Fill 40 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999905111495235	WITHOUT_CLASSIFICATION	9.488850476403286E-6	DEFECT
// Fill 4 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999850798331412	WITHOUT_CLASSIFICATION	1.492016685869574E-5	DEFECT
// Fill 8 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999811968997704	WITHOUT_CLASSIFICATION	1.880310022953476E-5	DEFECT
// Fill 68 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999849153594378	WITHOUT_CLASSIFICATION	1.5084640562174082E-5	DEFECT
// Fill 3 of value (byte) 33 // Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999819576617878	WITHOUT_CLASSIFICATION	1.8042338212150104E-5	DEFECT
// Fill 7 of value (byte) -19 // Fill 211 of value (byte) 33 // Fill 13 of value (byte) -87 // Fill 4 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999913189874898	WITHOUT_CLASSIFICATION	8.681012510195767E-6	DEFECT
// Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999855340714597	WITHOUT_CLASSIFICATION	1.4465928540219609E-5	DEFECT
// Fill 81 of value (byte) 33 // Fill 3 of value (byte) -19 // Fill 3714 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999859927664512	WITHOUT_CLASSIFICATION	1.4007233548696722E-5	DEFECT
// Fill 25 of value (byte) 33 // Fill 9 of value (byte) -19 // Fill 6 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999913060476499	WITHOUT_CLASSIFICATION	8.693952350023017E-6	DEFECT
// Fill 5 of value (byte) -87 // Fill 11 of value (byte) 33 // Fill 84 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 90 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999956435781965	WITHOUT_CLASSIFICATION	4.356421803504202E-6	DEFECT
// Fill 3 of value (byte) -87 // Fill 6 of value (byte) 33 // Fill 40 of value (byte) -19 // Fill 7379 of value (byte) 33 // Fill 20902 of value (byte) -19 // Fill 3162 of value (byte) 33 // Fill 11172 of value (byte) -19 // Fill 92 of value (byte) 33 // Fill 8190 of value (byte) 33	WITHOUT_CLASSIFICATION	0.999995544667325	WITHOUT_CLASSIFICATION	4.455332674988563E-6	DEFECT
// isValid(int):boolean	WITHOUT_CLASSIFICATION	0.9999889955302309	WITHOUT_CLASSIFICATION	1.1004469769026034E-5	DEFECT
// isInvalid(int):boolean	WITHOUT_CLASSIFICATION	0.99999475160529	WITHOUT_CLASSIFICATION	5.248394709920152E-6	DEFECT
// isContent(int):boolean	WITHOUT_CLASSIFICATION	0.9999954312054163	WITHOUT_CLASSIFICATION	4.568794583759685E-6	DEFECT
// isMarkup(int):boolean	WITHOUT_CLASSIFICATION	0.9999968613216942	WITHOUT_CLASSIFICATION	3.1386783058140877E-6	DEFECT
// isSpace(int):boolean	WITHOUT_CLASSIFICATION	0.999997788915498	WITHOUT_CLASSIFICATION	2.211084502102023E-6	DEFECT
// isNameStart(int):boolean	WITHOUT_CLASSIFICATION	0.9999986109131149	WITHOUT_CLASSIFICATION	1.3890868850605022E-6	DEFECT
// isName(int):boolean	WITHOUT_CLASSIFICATION	0.9999964351613567	WITHOUT_CLASSIFICATION	3.5648386433013725E-6	DEFECT
// isNCNameStart(int):boolean	WITHOUT_CLASSIFICATION	0.999999091171563	WITHOUT_CLASSIFICATION	9.088284369967544E-7	DEFECT
// isNCName(int):boolean	WITHOUT_CLASSIFICATION	0.9999976676554906	WITHOUT_CLASSIFICATION	2.3323445094079155E-6	DEFECT
// isPubid(int):boolean	WITHOUT_CLASSIFICATION	0.9999856600867044	WITHOUT_CLASSIFICATION	1.433991329543872E-5	DEFECT
/*      * [5] Name ::= (Letter | '_' | ':') (NameChar)*      */	WITHOUT_CLASSIFICATION	0.9999986365213451	WITHOUT_CLASSIFICATION	1.3634786548799828E-6	DEFECT
// isValidName(String):boolean	WITHOUT_CLASSIFICATION	0.9999973277221827	WITHOUT_CLASSIFICATION	2.6722778171762194E-6	DEFECT
/*      * from the namespace rec      * [4] NCName ::= (Letter | '_') (NCNameChar)*      */	WITHOUT_CLASSIFICATION	0.9999995851202335	WITHOUT_CLASSIFICATION	4.148797664636413E-7	DEFECT
// isValidNCName(String):boolean	WITHOUT_CLASSIFICATION	0.9999977479612095	WITHOUT_CLASSIFICATION	2.2520387904005865E-6	DEFECT
/*      * [7] Nmtoken ::= (NameChar)+      */	WITHOUT_CLASSIFICATION	0.9999821628877321	WITHOUT_CLASSIFICATION	1.7837112267955622E-5	DEFECT
// encodings	WITHOUT_CLASSIFICATION	0.999880343417398	WITHOUT_CLASSIFICATION	1.1965658260201311E-4	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999976220319823	WITHOUT_CLASSIFICATION	2.3779680177053606E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9998766035828676	WITHOUT_CLASSIFICATION	1.2339641713245567E-4	DEFECT
// // Public static methods //	WITHOUT_CLASSIFICATION	0.9999946440485714	WITHOUT_CLASSIFICATION	5.3559514286138275E-6	DEFECT
// isValidIANAEncoding(String):boolean	WITHOUT_CLASSIFICATION	0.9999816742570881	WITHOUT_CLASSIFICATION	1.8325742911926226E-5	DEFECT
// isValidIANAEncoding(String):boolean	WITHOUT_CLASSIFICATION	0.9999816742570881	WITHOUT_CLASSIFICATION	1.8325742911926226E-5	DEFECT
//order constants	WITHOUT_CLASSIFICATION	0.999846616457499	WITHOUT_CLASSIFICATION	1.5338354250112182E-4	DEFECT
// check whether the character is in the range 0x30 ~ 0x39	WITHOUT_CLASSIFICATION	0.9999921948066917	WITHOUT_CLASSIFICATION	7.805193308298473E-6	DEFECT
// if the character is in the range 0x30 ~ 0x39, return its int value (0~9), // otherwise, return -1	WITHOUT_CLASSIFICATION	0.9999996080296563	WITHOUT_CLASSIFICATION	3.919703437185408E-7	DEFECT
// There are attributes to handle.	WITHOUT_CLASSIFICATION	0.999630411519723	WITHOUT_CLASSIFICATION	3.6958848027707827E-4	DEFECT
// There are attributes to handle.	WITHOUT_CLASSIFICATION	0.999630411519723	WITHOUT_CLASSIFICATION	3.6958848027707827E-4	DEFECT
//XMLTypeResourceImpl	WITHOUT_CLASSIFICATION	0.9997952688512666	WITHOUT_CLASSIFICATION	2.0473114873352798E-4	DEFECT
//XMLTypeValidator	WITHOUT_CLASSIFICATION	0.9984259773292801	WITHOUT_CLASSIFICATION	0.0015740226707199518	DEFECT
// If the feature is a bidirectional reference with a multiplicity-many reverse, a composite reverse, // or a multiplicity-1 reverse that is already set (on value), then we'll switch things around and  // execute this command a little differently, because otherwise it's not undoable. //	WITHOUT_CLASSIFICATION	0.9999989881494173	WITHOUT_CLASSIFICATION	1.0118505826155616E-6	DEFECT
// We never directly set a multiplicity-many feature to a list directly.  Instead, we remove the old values // values, move the values that remain, and insert the new values.  If all old values are removed, we'll still // set it to an empty list, or unset it, as appropriate.  //	WITHOUT_CLASSIFICATION	0.9999880262583699	WITHOUT_CLASSIFICATION	1.1973741630116936E-5	DEFECT
// If we aren't simply removing all the old values... //	WITHOUT_CLASSIFICATION	0.999973201397121	WITHOUT_CLASSIFICATION	2.6798602879033923E-5	DEFECT
// If there are values to remove, append a command for them. //	WITHOUT_CLASSIFICATION	0.9999968305314338	WITHOUT_CLASSIFICATION	3.169468566194536E-6	DEFECT
// Determine the values that will remain and move them into the right order, if necessary. //	WITHOUT_CLASSIFICATION	0.9999982091494204	WITHOUT_CLASSIFICATION	1.7908505796061597E-6	DEFECT
// end setting whole list	WITHOUT_CLASSIFICATION	0.9999832412642865	WITHOUT_CLASSIFICATION	1.6758735713469392E-5	DEFECT
// For a 1-to-many association, doing the set as a remove and add from the other end will make it undoable. // In particular, if there is an existing non-null value, we first need to remove it from the other end, so // that it will be reinserted at the correct index on undo.  //	WITHOUT_CLASSIFICATION	0.9999399117659088	WITHOUT_CLASSIFICATION	6.008823409126954E-5	DEFECT
// (value == null) && (oldValue == null) // A simple set/unset will suffice. //	WITHOUT_CLASSIFICATION	0.999999332813979	WITHOUT_CLASSIFICATION	6.671860210299628E-7	DEFECT
// (value == null) && (oldValue != null) // Remove owner from the old value and unset if necessary. //	WITHOUT_CLASSIFICATION	0.9999998709559961	WITHOUT_CLASSIFICATION	1.2904400388487514E-7	DEFECT
// ((value != null) 	WITHOUT_CLASSIFICATION	0.9999914216935727	WITHOUT_CLASSIFICATION	8.578306427258257E-6	DEFECT
// (value != null) && (oldValue == null) // Add owner to new value. //	WITHOUT_CLASSIFICATION	0.9999904793747817	WITHOUT_CLASSIFICATION	9.520625218305361E-6	DEFECT
// ((value != null) && (oldValue != null)) // Need a compound command to remove owner from old value and add it to new value. //	WITHOUT_CLASSIFICATION	0.9999958588109785	WITHOUT_CLASSIFICATION	4.141189021502958E-6	DEFECT
// For consistency, we always set 1-1 container relations from the container end. //	WITHOUT_CLASSIFICATION	0.9999623543322652	WITHOUT_CLASSIFICATION	3.764566773483727E-5	DEFECT
// For a many-to-1 or 1-to-1 association, if the opposite reference on the new value is already set to // something, we need a compound command that first explicitly removes that reference, so that it will be // restored in the undo. //	WITHOUT_CLASSIFICATION	0.999999297877362	WITHOUT_CLASSIFICATION	7.021226380318394E-7	DEFECT
// For a many-to-1, we use SetCommand.create() to create the command to remove the opposite reference; // a RemoveCommand on its opposite will actually result. //	WITHOUT_CLASSIFICATION	0.9999663913134448	WITHOUT_CLASSIFICATION	3.360868655514004E-5	DEFECT
// For a 1-to-1, we can directly create a SetCommand. //	WITHOUT_CLASSIFICATION	0.999992597435497	WITHOUT_CLASSIFICATION	7.40256450305211E-6	DEFECT
// Initialize all the fields from the command parameter. //	WITHOUT_CLASSIFICATION	0.999999386613119	WITHOUT_CLASSIFICATION	6.133868809157505E-7	DEFECT
// If there is an owner. //	WITHOUT_CLASSIFICATION	0.99998115375776	WITHOUT_CLASSIFICATION	1.8846242239944513E-5	DEFECT
// Get the owner's meta object. //	WITHOUT_CLASSIFICATION	0.9999970920349565	WITHOUT_CLASSIFICATION	2.9079650435784683E-6	DEFECT
// Is the feature an attribute of the owner... //	WITHOUT_CLASSIFICATION	0.9998937005445508	WITHOUT_CLASSIFICATION	1.0629945544926567E-4	DEFECT
// If must be of this type then. //	WITHOUT_CLASSIFICATION	0.9999866927367275	WITHOUT_CLASSIFICATION	1.3307263272496797E-5	DEFECT
// Setting at an index. Make sure the index is valid, the type is valid, and the value isn't already in a // unique feature. Record the old value. //	WITHOUT_CLASSIFICATION	0.9999953285975237	WITHOUT_CLASSIFICATION	4.671402476297487E-6	DEFECT
// If the attribute is set, record it's old value. //	WITHOUT_CLASSIFICATION	0.9999977988850401	WITHOUT_CLASSIFICATION	2.2011149598886105E-6	DEFECT
// oldValue = owner.eGet(feature);	WITHOUT_CLASSIFICATION	0.9999726627753617	WITHOUT_CLASSIFICATION	2.733722463834492E-5	DEFECT
// Make sure the container is not being put into a contained object. //	WITHOUT_CLASSIFICATION	0.9999833397201507	WITHOUT_CLASSIFICATION	1.666027984931587E-5	DEFECT
// If the other end is a many, then we should remove the owner from the old value's opposite feature so that undo will put it back. //	WITHOUT_CLASSIFICATION	0.9997651790483221	WITHOUT_CLASSIFICATION	2.3482095167786981E-4	DEFECT
// If the other end is single, then we should unset the owner from the old value's opposite feature so that undo will put it back. //	WITHOUT_CLASSIFICATION	0.9998938615924596	WITHOUT_CLASSIFICATION	1.0613840754040471E-4	DEFECT
// Either set or unset the feature. //	WITHOUT_CLASSIFICATION	0.999940111079709	WITHOUT_CLASSIFICATION	5.9888920291068036E-5	DEFECT
// Either set or unset the feature. //	WITHOUT_CLASSIFICATION	0.999940111079709	WITHOUT_CLASSIFICATION	5.9888920291068036E-5	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9999994067682163	WITHOUT_CLASSIFICATION	5.932317836988323E-7	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9999994067682163	WITHOUT_CLASSIFICATION	5.932317836988323E-7	DEFECT
// Either set or unset the old value. //	WITHOUT_CLASSIFICATION	0.9999872221300423	WITHOUT_CLASSIFICATION	1.2777869957582614E-5	DEFECT
// If there is no list to add to, no collection or an empty collection from which to add, or the index is out of range... //	WITHOUT_CLASSIFICATION	0.9997499114675044	WITHOUT_CLASSIFICATION	2.500885324956062E-4	DEFECT
// If it's a feature map, we'll need to validate the entry feature and enforce its multiplicity restraints. //	WITHOUT_CLASSIFICATION	0.9999991247766458	WITHOUT_CLASSIFICATION	8.752233542979127E-7	DEFECT
// Keep track of all the entry features that are already in the feature map and that will be added, excluding // XML text, CDATA, and comments (if we're in a mixed type). //	WITHOUT_CLASSIFICATION	0.9999785169526607	WITHOUT_CLASSIFICATION	2.1483047339227272E-5	DEFECT
// Check each object...  //	WITHOUT_CLASSIFICATION	0.9999860800121222	WITHOUT_CLASSIFICATION	1.3919987877836688E-5	DEFECT
// Check type of object. //	WITHOUT_CLASSIFICATION	0.9999870589844634	WITHOUT_CLASSIFICATION	1.294101553666832E-5	DEFECT
// Check that the object isn't already in a unique list. //	WITHOUT_CLASSIFICATION	0.9999927624286796	WITHOUT_CLASSIFICATION	7.237571320322215E-6	DEFECT
// For feature maps, test that the entry feature is a valid type, that the entry value is an instance of it, // that there is not already something in a document root, and that there is not already something in a // single-valued entry feature. //	WITHOUT_CLASSIFICATION	0.9999923834731376	WITHOUT_CLASSIFICATION	7.616526862494076E-6	DEFECT
// Check to see if a container is being put into a contained object. //	WITHOUT_CLASSIFICATION	0.999998231541539	WITHOUT_CLASSIFICATION	1.7684584609782307E-6	DEFECT
// Simply add the collection to the list. //	WITHOUT_CLASSIFICATION	0.9999930378107228	WITHOUT_CLASSIFICATION	6.962189277161957E-6	DEFECT
// Simply add the collection to the list. //	WITHOUT_CLASSIFICATION	0.9999930378107228	WITHOUT_CLASSIFICATION	6.962189277161957E-6	DEFECT
// We'd like the collection of things added to be selected after this command completes. //	WITHOUT_CLASSIFICATION	0.999998173525498	WITHOUT_CLASSIFICATION	1.8264745019385827E-6	DEFECT
// We'd like the collection of things added to be selected after this command completes. //	WITHOUT_CLASSIFICATION	0.999998173525498	WITHOUT_CLASSIFICATION	1.8264745019385827E-6	DEFECT
// Remove the collection from the list by index. //	WITHOUT_CLASSIFICATION	0.9999858999613018	WITHOUT_CLASSIFICATION	1.4100038698243429E-5	DEFECT
// We'd like the owner selected after this undo completes. //	WITHOUT_CLASSIFICATION	0.9999989228601297	WITHOUT_CLASSIFICATION	1.0771398702704636E-6	DEFECT
// It must be an unsettable feature to be null and considered set. //	WITHOUT_CLASSIFICATION	0.9999985487128684	WITHOUT_CLASSIFICATION	1.451287131599933E-6	DEFECT
// It must be an unsettable feature to be empty and considered set. //	WITHOUT_CLASSIFICATION	0.9999967764061142	WITHOUT_CLASSIFICATION	3.223593885875177E-6	DEFECT
// if one is null, they'll all be null	WITHOUT_CLASSIFICATION	0.9999977554464398	WITHOUT_CLASSIFICATION	2.244553560140466E-6	DEFECT
// Possible scope for the ChangeRecorder	WITHOUT_CLASSIFICATION	0.999997452398512	WITHOUT_CLASSIFICATION	2.5476014880656432E-6	DEFECT
// Create commands to create copies of the children. //	WITHOUT_CLASSIFICATION	0.9999932397361507	WITHOUT_CLASSIFICATION	6.760263849361243E-6	DEFECT
// We'll default to this. //	WITHOUT_CLASSIFICATION	0.9999956209609511	WITHOUT_CLASSIFICATION	4.379039048911366E-6	DEFECT
// If there isn't something obviously wrong with the arguments... //	WITHOUT_CLASSIFICATION	0.995407926019745	WITHOUT_CLASSIFICATION	0.00459207398025495	DEFECT
// If the location is near the boundary, we'll start by trying to do a drop insert. //	WITHOUT_CLASSIFICATION	0.9999048145782743	WITHOUT_CLASSIFICATION	9.518542172568102E-5	DEFECT
// If we could do a drop insert operation... //	WITHOUT_CLASSIFICATION	0.9998402194251383	WITHOUT_CLASSIFICATION	1.5978057486168304E-4	DEFECT
// Set the bounds so that we re-check when we are closer to the middle. //	WITHOUT_CLASSIFICATION	0.999956335613832	WITHOUT_CLASSIFICATION	4.366438616789591E-5	DEFECT
// We can try to do a drop on instead. //	WITHOUT_CLASSIFICATION	0.9999841140298948	WITHOUT_CLASSIFICATION	1.5885970105185264E-5	DEFECT
// Set the bounds so that we re-check when we get near the other end. //	WITHOUT_CLASSIFICATION	0.9999295699793177	WITHOUT_CLASSIFICATION	7.043002068229461E-5	DEFECT
// We are near the middle, so we'll start by trying to do a drop on. //	WITHOUT_CLASSIFICATION	0.9999831376173532	WITHOUT_CLASSIFICATION	1.6862382646815762E-5	DEFECT
// If we can do a drop on operation. //	WITHOUT_CLASSIFICATION	0.9998452648241937	WITHOUT_CLASSIFICATION	1.5473517580634667E-4	DEFECT
// Set the range so that we re-check when we get aren't in the middle. //	WITHOUT_CLASSIFICATION	0.999945209059815	WITHOUT_CLASSIFICATION	5.4790940184903146E-5	DEFECT
// We can reset and try a drop insert instead. //	WITHOUT_CLASSIFICATION	0.9999919855433568	WITHOUT_CLASSIFICATION	8.014456643246396E-6	DEFECT
// We'll always be wrong for these arguments, so don't bother re-checking. //	WITHOUT_CLASSIFICATION	0.9989947357468755	WITHOUT_CLASSIFICATION	0.001005264253124588	DEFECT
// This will be the default return value. //	WITHOUT_CLASSIFICATION	0.9999810104337309	WITHOUT_CLASSIFICATION	1.8989566269136993E-5	DEFECT
// The feedback is set based on which half we are in. // If the command isn't executable, these values won't be used. //	WITHOUT_CLASSIFICATION	0.9998726997272842	WITHOUT_CLASSIFICATION	1.2730027271587682E-4	DEFECT
// If we can't determine the parent. //	WITHOUT_CLASSIFICATION	0.9999953380735203	WITHOUT_CLASSIFICATION	4.661926479744181E-6	DEFECT
// Iterate over the children to find the owner. //	WITHOUT_CLASSIFICATION	0.9999748451514798	WITHOUT_CLASSIFICATION	2.5154848520108096E-5	DEFECT
// When we match the owner, we're done. //	WITHOUT_CLASSIFICATION	0.9999690047894243	WITHOUT_CLASSIFICATION	3.099521057580978E-5	DEFECT
// Try to create a specific command based on the current desired operation. //	WITHOUT_CLASSIFICATION	0.9998601662983583	WITHOUT_CLASSIFICATION	1.3983370164176803E-4	DEFECT
// If there isn't an executable command we should maybe try a copy operation, but only if we're allowed and not doing a link. //	WITHOUT_CLASSIFICATION	0.9884319979516991	WITHOUT_CLASSIFICATION	0.011568002048300972	DEFECT
// Try again. //	WITHOUT_CLASSIFICATION	0.9998060186375353	WITHOUT_CLASSIFICATION	1.9398136246484582E-4	DEFECT
// We've switch the operation! //	WITHOUT_CLASSIFICATION	0.9999914732385834	WITHOUT_CLASSIFICATION	8.526761416674876E-6	DEFECT
// We've switch the operation! //	WITHOUT_CLASSIFICATION	0.9999914732385834	WITHOUT_CLASSIFICATION	8.526761416674876E-6	DEFECT
// We don't want to move insert an object before or after itself... //	WITHOUT_CLASSIFICATION	0.9999892770469924	WITHOUT_CLASSIFICATION	1.0722953007548988E-5	DEFECT
// If the dragged objects share a parent... //	WITHOUT_CLASSIFICATION	0.9999889881270082	WITHOUT_CLASSIFICATION	1.1011872991785915E-5	DEFECT
// Just remove the objects and add them. //	WITHOUT_CLASSIFICATION	0.9999982933972977	WITHOUT_CLASSIFICATION	1.7066027023249896E-6	DEFECT
// We don't want to copy insert an object before or after itself... //	WITHOUT_CLASSIFICATION	0.9999105906216572	WITHOUT_CLASSIFICATION	8.940937834278411E-5	DEFECT
// Copy the collection //	WITHOUT_CLASSIFICATION	0.9999618291006136	WITHOUT_CLASSIFICATION	3.817089938629914E-5	DEFECT
// And add the copy. //	WITHOUT_CLASSIFICATION	0.9999641797209106	WITHOUT_CLASSIFICATION	3.582027908943881E-5	DEFECT
// if optimize // if collection	WITHOUT_CLASSIFICATION	0.999983803888669	WITHOUT_CLASSIFICATION	1.61961113309937E-5	DEFECT
// We don't want to insert an object before or after itself... //	WITHOUT_CLASSIFICATION	0.999964678848545	WITHOUT_CLASSIFICATION	3.5321151455011485E-5	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9999994067682163	WITHOUT_CLASSIFICATION	5.932317836988323E-7	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9999994067682163	WITHOUT_CLASSIFICATION	5.932317836988323E-7	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9999994067682163	WITHOUT_CLASSIFICATION	5.932317836988323E-7	DEFECT
// If there isn't an executable command we should maybe try a copy operation, but only if we're allowed and not doing a link. //	WITHOUT_CLASSIFICATION	0.9884319979516991	WITHOUT_CLASSIFICATION	0.011568002048300972	DEFECT
// If there isn't an executable command we should maybe try a link operation, but only if we're allowed and not doing a link. //	WITHOUT_CLASSIFICATION	0.9916875281283324	WITHOUT_CLASSIFICATION	0.008312471871667627	DEFECT
// Add the collection //	WITHOUT_CLASSIFICATION	0.999905716058705	WITHOUT_CLASSIFICATION	9.428394129495738E-5	DEFECT
// This is the default return value. //	WITHOUT_CLASSIFICATION	0.9999793425236824	WITHOUT_CLASSIFICATION	2.0657476317713362E-5	DEFECT
// This is the feedback we use to indicate drop on; it will only be used if the command is executable. //	WITHOUT_CLASSIFICATION	0.9995942961242169	WITHOUT_CLASSIFICATION	4.0570387578307756E-4	DEFECT
// Prepare the right type of operation. //	WITHOUT_CLASSIFICATION	0.999818256943285	WITHOUT_CLASSIFICATION	1.817430567150438E-4	DEFECT
// If we can't set the collection, try setting use the single value of the collection. //	WITHOUT_CLASSIFICATION	0.9999823502948966	WITHOUT_CLASSIFICATION	1.7649705103413448E-5	DEFECT
// We'll assume that the copy command can execute and that adding a copy of the clipboard // is the same test as adding the clipboard contents itself. //	WITHOUT_CLASSIFICATION	0.9999939075383182	WITHOUT_CLASSIFICATION	6.092461681830036E-6	DEFECT
// Reset as in the constructor. //	WITHOUT_CLASSIFICATION	0.9999949443540953	WITHOUT_CLASSIFICATION	5.055645904610807E-6	DEFECT
// If the operation has changed significantly... //	WITHOUT_CLASSIFICATION	0.9997469962155453	WITHOUT_CLASSIFICATION	2.5300378445467967E-4	DEFECT
// Clean it up. //	WITHOUT_CLASSIFICATION	0.9999958083494053	WITHOUT_CLASSIFICATION	4.1916505946947036E-6	DEFECT
// Set the arguments again. //	WITHOUT_CLASSIFICATION	0.9999956083410231	WITHOUT_CLASSIFICATION	4.3916589770085775E-6	DEFECT
// Determine if the operation is executable. //	WITHOUT_CLASSIFICATION	0.9999976610588865	WITHOUT_CLASSIFICATION	2.3389411134245784E-6	DEFECT
// Just return the cached result. //	WITHOUT_CLASSIFICATION	0.999998973002455	WITHOUT_CLASSIFICATION	1.0269975450682499E-6	DEFECT
// Only return the operation for an executable command. //	WITHOUT_CLASSIFICATION	0.9999682551051486	WITHOUT_CLASSIFICATION	3.1744894851369016E-5	DEFECT
// Thread.dumpStack();	WITHOUT_CLASSIFICATION	0.9999578695229205	WITHOUT_CLASSIFICATION	4.2130477079457175E-5	DEFECT
// This can't execute if there is no owner list  // or the owner list doesn't contain the value being replaced or  // there are not replacements. //	WITHOUT_CLASSIFICATION	0.9998796449550343	WITHOUT_CLASSIFICATION	1.2035504496555895E-4	DEFECT
// An extent allows anything to be added. //	WITHOUT_CLASSIFICATION	0.9999842648399665	WITHOUT_CLASSIFICATION	1.573516003350495E-5	DEFECT
// Make sure each object conforms to the type of the feature. //	WITHOUT_CLASSIFICATION	0.9999716265338942	WITHOUT_CLASSIFICATION	2.8373466105876034E-5	DEFECT
// Record the position of the value in the owner list. //	WITHOUT_CLASSIFICATION	0.9999913116199374	WITHOUT_CLASSIFICATION	8.688380062671085E-6	DEFECT
// Simply remove the object from the owner list. //	WITHOUT_CLASSIFICATION	0.9999933096332306	WITHOUT_CLASSIFICATION	6.690366769367839E-6	DEFECT
// Insert the collection at the right place. //	WITHOUT_CLASSIFICATION	0.9999665508672791	WITHOUT_CLASSIFICATION	3.3449132720821825E-5	DEFECT
// We'd like the collection of replacements selected after this replace completes. //	WITHOUT_CLASSIFICATION	0.9999973193285487	WITHOUT_CLASSIFICATION	2.6806714513083097E-6	DEFECT
// Remove the collection of replacements. //	WITHOUT_CLASSIFICATION	0.9999917701768215	WITHOUT_CLASSIFICATION	8.229823178577136E-6	DEFECT
// Add the value back in the right place. //	WITHOUT_CLASSIFICATION	0.9999822421016396	WITHOUT_CLASSIFICATION	1.7757898360355147E-5	DEFECT
// We'd like the replaced selected after this undo replace completes. //	WITHOUT_CLASSIFICATION	0.9999994695019034	WITHOUT_CLASSIFICATION	5.304980965950803E-7	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9999994067682163	WITHOUT_CLASSIFICATION	5.932317836988323E-7	DEFECT
// We'll assume that the copy command can execute and that adding a copy of the clipboard // is the same test as adding the clipboard contents itself. //	WITHOUT_CLASSIFICATION	0.9999939075383182	WITHOUT_CLASSIFICATION	6.092461681830036E-6	DEFECT
// Thread.dumpStack();	WITHOUT_CLASSIFICATION	0.9999578695229205	WITHOUT_CLASSIFICATION	4.2130477079457175E-5	DEFECT
// Create a strict compound command to do a copy and then add the result //	WITHOUT_CLASSIFICATION	0.9999875490774397	WITHOUT_CLASSIFICATION	1.2450922560341524E-5	DEFECT
// Create a command to copy the clipboard. //	WITHOUT_CLASSIFICATION	0.9999979105662767	WITHOUT_CLASSIFICATION	2.089433723209955E-6	DEFECT
// Create a proxy that will create an add command. //	WITHOUT_CLASSIFICATION	0.9999702268400171	WITHOUT_CLASSIFICATION	2.97731599829243E-5	DEFECT
// Use the original to do the add, but only if it's of the same type as the copy. // This ensures that if there is conversion being done as part of the copy, // as would be the case for a cross domain copy in the mapping framework, // that we do actually use the converted instance. //	WITHOUT_CLASSIFICATION	0.9987655315600614	WITHOUT_CLASSIFICATION	0.0012344684399385624	DEFECT
// This will determine canExecute as efficiently as possible. //	WITHOUT_CLASSIFICATION	0.9999748112022827	WITHOUT_CLASSIFICATION	2.5188797717321544E-5	DEFECT
// This will actually execute the copy command in order to check if the add can execute. //	WITHOUT_CLASSIFICATION	0.9973363777881152	WITHOUT_CLASSIFICATION	0.0026636222118847927	DEFECT
// We need to check canExecute() here in case prepare() went down the "optimize" path. //	WITHOUT_CLASSIFICATION	0.9999393117920808	WITHOUT_CLASSIFICATION	6.068820791916983E-5	DEFECT
// This can execute if there is an owner list and a collection and the owner list contains all the objects of the collection. //	WITHOUT_CLASSIFICATION	0.9999081717851549	WITHOUT_CLASSIFICATION	9.18282148450605E-5	DEFECT
// If this owned object is one from the collection... //	WITHOUT_CLASSIFICATION	0.9999679761513495	WITHOUT_CLASSIFICATION	3.2023848650481033E-5	DEFECT
// Remove the object from the collection and add it to the identity list. //	WITHOUT_CLASSIFICATION	0.9999978945416497	WITHOUT_CLASSIFICATION	2.1054583502415296E-6	DEFECT
// Record the index. //	WITHOUT_CLASSIFICATION	0.9999830277112123	WITHOUT_CLASSIFICATION	1.6972288787763013E-5	DEFECT
// Record the index. //	WITHOUT_CLASSIFICATION	0.9999830277112123	WITHOUT_CLASSIFICATION	1.6972288787763013E-5	DEFECT
// Second pass: match by value equality. //	WITHOUT_CLASSIFICATION	0.9999917809751503	WITHOUT_CLASSIFICATION	8.219024849788423E-6	DEFECT
// If this owned object is equal to one from the collection... //	WITHOUT_CLASSIFICATION	0.9999675106781121	WITHOUT_CLASSIFICATION	3.2489321887952355E-5	DEFECT
// Remove the object from the collection and add it to the equality list.  //	WITHOUT_CLASSIFICATION	0.9999906509488805	WITHOUT_CLASSIFICATION	9.34905111952832E-6	DEFECT
// Merge the lists. //	WITHOUT_CLASSIFICATION	0.9999957690586374	WITHOUT_CLASSIFICATION	4.230941362620163E-6	DEFECT
// Remove objects from the owner list by index, starting from the end. //	WITHOUT_CLASSIFICATION	0.9999960199217258	WITHOUT_CLASSIFICATION	3.980078274191155E-6	DEFECT
// We'd like the owner selected after this remove completes. //	WITHOUT_CLASSIFICATION	0.9999992163779859	WITHOUT_CLASSIFICATION	7.83622014063921E-7	DEFECT
// If either list is empty, the result is simply the other. //	WITHOUT_CLASSIFICATION	0.999992186834616	WITHOUT_CLASSIFICATION	7.813165384004732E-6	DEFECT
// Allocate list and array for objects and indices. //	WITHOUT_CLASSIFICATION	0.9999995610142893	WITHOUT_CLASSIFICATION	4.389857106821365E-7	DEFECT
// Index counters into indices1, indices2, and indices.  //	WITHOUT_CLASSIFICATION	0.9999899689565293	WITHOUT_CLASSIFICATION	1.0031043470850764E-5	DEFECT
// Object iterators. //	WITHOUT_CLASSIFICATION	0.9999975054210872	WITHOUT_CLASSIFICATION	2.4945789126884213E-6	DEFECT
// Repeatedly select the lower index and corresponding object, and advance past the selected pair. //	WITHOUT_CLASSIFICATION	0.9999968234822688	WITHOUT_CLASSIFICATION	3.176517731213265E-6	DEFECT
// We'd like the collection of things added to be selected after this command completes. //	WITHOUT_CLASSIFICATION	0.999998173525498	WITHOUT_CLASSIFICATION	1.8264745019385827E-6	DEFECT
// Create commands to create copies of the children. //	WITHOUT_CLASSIFICATION	0.9999932397361507	WITHOUT_CLASSIFICATION	6.760263849361243E-6	DEFECT
// Thread.dumpStack();	WITHOUT_CLASSIFICATION	0.9999578695229205	WITHOUT_CLASSIFICATION	4.2130477079457175E-5	DEFECT
// Remove objects from the owner list by index, starting from the end. //	WITHOUT_CLASSIFICATION	0.9999960199217258	WITHOUT_CLASSIFICATION	3.980078274191155E-6	DEFECT
// We'd like the owner selected after this remove completes. //	WITHOUT_CLASSIFICATION	0.9999992163779859	WITHOUT_CLASSIFICATION	7.83622014063921E-7	DEFECT
// Create commands to create the copy object(s). //	WITHOUT_CLASSIFICATION	0.999993782948145	WITHOUT_CLASSIFICATION	6.217051854928742E-6	DEFECT
// Create an initialize copy command for each of the created objects. //	WITHOUT_CLASSIFICATION	0.9999987839406536	WITHOUT_CLASSIFICATION	1.2160593465082977E-6	DEFECT
// Record it for execution. //	WITHOUT_CLASSIFICATION	0.9999699066961651	WITHOUT_CLASSIFICATION	3.0093303834848497E-5	DEFECT
// This ensures that the CreateCopyCommand will be executed by StrictCompoundCommand.prepare(). //	WITHOUT_CLASSIFICATION	0.9999979083306734	WITHOUT_CLASSIFICATION	2.0916693265122865E-6	DEFECT
// This will execute the CreateCopyCommand's and then call canExecute on the InitializeCopyCommand's. //	WITHOUT_CLASSIFICATION	0.9997761400313581	WITHOUT_CLASSIFICATION	2.2385996864186556E-4	DEFECT
// We'll assume that all the CreateCopyCommand's and InitializeCopyCommand's can execute. //	WITHOUT_CLASSIFICATION	0.9999982686380477	WITHOUT_CLASSIFICATION	1.7313619521587478E-6	DEFECT
// This will call prepare() which will partially execute the command. //	WITHOUT_CLASSIFICATION	0.9999223186354395	WITHOUT_CLASSIFICATION	7.768136456044777E-5	DEFECT
// We need to check canExecute() in case optimize is true. //	WITHOUT_CLASSIFICATION	0.9999984904015405	WITHOUT_CLASSIFICATION	1.509598459427205E-6	DEFECT
// Create a command to create a copy of the object. //	WITHOUT_CLASSIFICATION	0.999986926525325	WITHOUT_CLASSIFICATION	1.3073474674972346E-5	DEFECT
// This handles IStructuredSelection. //	WITHOUT_CLASSIFICATION	0.9999128787638086	WITHOUT_CLASSIFICATION	8.712123619145975E-5	DEFECT
// setResourceFactoryRegister(new ExtensibleContextResourceFactoryRegister()); //EATM setResourceFactoryRegister(new ContextResourceFactoryRegister());	WITHOUT_CLASSIFICATION	0.9999996411006065	WITHOUT_CLASSIFICATION	3.5889939357582865E-7	DEFECT
// If the owner parameter is set, we delegate to the owner's adapter //	WITHOUT_CLASSIFICATION	0.9999993899010542	WITHOUT_CLASSIFICATION	6.100989458633845E-7	DEFECT
// If there is an adapter of the correct type... //	WITHOUT_CLASSIFICATION	0.9999298154217385	WITHOUT_CLASSIFICATION	7.01845782615482E-5	DEFECT
// If command has no owner specified //	WITHOUT_CLASSIFICATION	0.9999463391641257	WITHOUT_CLASSIFICATION	5.366083587420377E-5	DEFECT
// For RemoveCommand, we will find the owner by calling EditingDomain.getParent() on the object(s) being removed. //	WITHOUT_CLASSIFICATION	0.9999957157166015	WITHOUT_CLASSIFICATION	4.2842833985477465E-6	DEFECT
// If there is a column object, just convert it to a string. //	WITHOUT_CLASSIFICATION	0.9999949322056785	WITHOUT_CLASSIFICATION	5.067794321477487E-6	DEFECT
// If there is an adapter of the correct type... //	WITHOUT_CLASSIFICATION	0.9999298154217385	WITHOUT_CLASSIFICATION	7.01845782615482E-5	DEFECT
// If there is an adapter of the correct type... //	WITHOUT_CLASSIFICATION	0.9999298154217385	WITHOUT_CLASSIFICATION	7.01845782615482E-5	DEFECT
// If there is an adapter of the correct type... //	WITHOUT_CLASSIFICATION	0.9999298154217385	WITHOUT_CLASSIFICATION	7.01845782615482E-5	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999743975518987	WITHOUT_CLASSIFICATION	2.5602448101312153E-5	DEFECT
// We will iterate over the whole collection, removing some as we go. //	WITHOUT_CLASSIFICATION	0.99999526293245	WITHOUT_CLASSIFICATION	4.73706755003421E-6	DEFECT
// Take the first object, and remove it. //	WITHOUT_CLASSIFICATION	0.9999950447211466	WITHOUT_CLASSIFICATION	4.955278853318121E-6	DEFECT
// Determine the object's parent. //	WITHOUT_CLASSIFICATION	0.9999995678239934	WITHOUT_CLASSIFICATION	4.321760067336922E-7	DEFECT
// Now we want to find all the other objects with this same parent. // So we can collection siblings together and give the parent control over their removal. //	WITHOUT_CLASSIFICATION	0.9999968855289327	WITHOUT_CLASSIFICATION	3.11447106727883E-6	DEFECT
// Get the next object and check if it has the same parent. //	WITHOUT_CLASSIFICATION	0.9999918863050898	WITHOUT_CLASSIFICATION	8.113694910091865E-6	DEFECT
// Remove the object and add it as a sibling. //	WITHOUT_CLASSIFICATION	0.9999985089814948	WITHOUT_CLASSIFICATION	1.4910185053300236E-6	DEFECT
// We will now create a command with this implied parent //	WITHOUT_CLASSIFICATION	0.9999929521787396	WITHOUT_CLASSIFICATION	7.047821260319989E-6	DEFECT
// The parent is null, which implies a top-level removal, so create a self-removing command. //	WITHOUT_CLASSIFICATION	0.9999987738748242	WITHOUT_CLASSIFICATION	1.226125175739794E-6	DEFECT
// If no object is specified, but an existing sibling is, the object is // its parent. //	WITHOUT_CLASSIFICATION	0.9999953174484895	WITHOUT_CLASSIFICATION	4.682551510552567E-6	DEFECT
// protected Object labelProvider;	WITHOUT_CLASSIFICATION	0.9999970510587962	WITHOUT_CLASSIFICATION	2.948941203675803E-6	DEFECT
//return getDefaultValue(attribute.getEType());	WITHOUT_CLASSIFICATION	0.9999684595384013	WITHOUT_CLASSIFICATION	3.154046159863024E-5	DEFECT
// If any children were added or removed, reset the indices.	WITHOUT_CLASSIFICATION	0.9999534165152388	WITHOUT_CLASSIFICATION	4.65834847612532E-5	DEFECT
// Get the URI of the model file. //	WITHOUT_CLASSIFICATION	0.9999714088700075	WITHOUT_CLASSIFICATION	2.8591129992448095E-5	DEFECT
// isValidIANAEncoding(String):boolean	WITHOUT_CLASSIFICATION	0.9999816742570881	WITHOUT_CLASSIFICATION	1.8325742911926226E-5	DEFECT
// Wrap any new children and add them to the map. Remove each current child from the set of old children. //	WITHOUT_CLASSIFICATION	0.9999075064659132	WITHOUT_CLASSIFICATION	9.249353408686039E-5	DEFECT
// Remove and dispose any wrappers for remaining old children. //	WITHOUT_CLASSIFICATION	0.9999706248216216	WITHOUT_CLASSIFICATION	2.9375178378518762E-5	DEFECT
// A SetCommand needs to go through SetCommand.create() to ensure it can execute and undo. //	WITHOUT_CLASSIFICATION	0.9999978738040665	WITHOUT_CLASSIFICATION	2.1261959334957417E-6	DEFECT
/*  protected Command createSetCommand(EditingDomain domain, Object owner, Object feature, Object value)   {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, SetCommand.class, new CommandParameter(owner, feature, value));  }  protected Command createCopyCommand(EditingDomain domain, Object owner, CopyCommand.Helper helper)  {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, CopyCommand.class, new CommandParameter(owner, null, helper));  }  protected Command createCreateCopyCommand(EditingDomain domain, Object owner, CopyCommand.Helper helper)   {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, CreateCopyCommand.class, new CommandParameter(owner, null, helper));  }  protected Command createInitializeCopyCommand(EditingDomain domain, Object owner, CopyCommand.Helper helper)   {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, InitializeCopyCommand.class, new CommandParameter(owner, null, helper));  }  protected Command createRemoveCommand(EditingDomain domain, Object owner, Object feature, Collection collection)   {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, RemoveCommand.class, new CommandParameter(owner, feature, collection));  }  protected Command createReplaceCommand(EditingDomain domain, Object owner, Object feature, Object value, Collection collection)   {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, ReplaceCommand.class, new CommandParameter(owner, feature, value, collection));  }  protected Command createAddCommand(EditingDomain domain, Object owner, Object feature, Collection collection, int index)   {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, ReplaceCommand.class, new CommandParameter(owner, feature, collection, index));  }  protected Command createMoveCommand(EditingDomain domain, Object owner, Object feature, Object value, int index)   {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, ReplaceCommand.class, new CommandParameter(owner, feature, value, index));  }  protected Command createDragAndDropCommand    (EditingDomain domain, Object owner, float location, int operations, int operation, Collection collection)  {    DragAndDropCommand.Detail detail = new DragAndDropCommand.Detail(location, operations, operation);    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, DragAndDropCommand.class, new CommandParameter(owner, detail, collection));  }*/	WITHOUT_CLASSIFICATION	0.9999999297010103	WITHOUT_CLASSIFICATION	7.029898969339823E-8	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999743975518987	WITHOUT_CLASSIFICATION	2.5602448101312153E-5	DEFECT
// Now we could check that the adapter implements interface ITableItemLabelProvider. //	WITHOUT_CLASSIFICATION	0.9999949817390188	WITHOUT_CLASSIFICATION	5.018260981215526E-6	DEFECT
// Now we could check that the adapter implements interface ITableItemLabelProvider. //	WITHOUT_CLASSIFICATION	0.9999949817390188	WITHOUT_CLASSIFICATION	5.018260981215526E-6	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999953079813295	WITHOUT_CLASSIFICATION	4.692018670464854E-6	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999953079813295	WITHOUT_CLASSIFICATION	4.692018670464854E-6	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999953079813295	WITHOUT_CLASSIFICATION	4.692018670464854E-6	DEFECT
// Otherwise, we could check that the adapter implements interface IItemLabelProvider. //	WITHOUT_CLASSIFICATION	0.9999964124959683	WITHOUT_CLASSIFICATION	3.587504031706779E-6	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999743975518987	WITHOUT_CLASSIFICATION	2.5602448101312153E-5	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999953079813295	WITHOUT_CLASSIFICATION	4.692018670464854E-6	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9999146686599837	WITHOUT_CLASSIFICATION	8.533134001628908E-5	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999953079813295	WITHOUT_CLASSIFICATION	4.692018670464854E-6	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999953079813295	WITHOUT_CLASSIFICATION	4.692018670464854E-6	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999953079813295	WITHOUT_CLASSIFICATION	4.692018670464854E-6	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999953079813295	WITHOUT_CLASSIFICATION	4.692018670464854E-6	DEFECT
// Otherwise, we could check that the adapter implements interface IItemLabelProvider. //	WITHOUT_CLASSIFICATION	0.9999964124959683	WITHOUT_CLASSIFICATION	3.587504031706779E-6	DEFECT
// Now we could check that the adapter implements interface ITableItemFontProvider. //	WITHOUT_CLASSIFICATION	0.9999828457403843	WITHOUT_CLASSIFICATION	1.7154259615709883E-5	DEFECT
// No font is a good default. //	WITHOUT_CLASSIFICATION	0.9999954619990433	WITHOUT_CLASSIFICATION	4.538000956595329E-6	DEFECT
// Otherwise, we could check that the adapter implements interface IItemFontProvider. //	WITHOUT_CLASSIFICATION	0.9999833253617809	WITHOUT_CLASSIFICATION	1.6674638219116373E-5	DEFECT
// No color is a good default. //	WITHOUT_CLASSIFICATION	0.9999973986118236	WITHOUT_CLASSIFICATION	2.6013881763620554E-6	DEFECT
// No color is a good default. //	WITHOUT_CLASSIFICATION	0.9999973986118236	WITHOUT_CLASSIFICATION	2.6013881763620554E-6	DEFECT
// Now we could check that the adapter implements interface ITableItemColorProvider. //	WITHOUT_CLASSIFICATION	0.9999915098926421	WITHOUT_CLASSIFICATION	8.490107358036493E-6	DEFECT
// Now we could check that the adapter implements interface ITableItemColorProvider. //	WITHOUT_CLASSIFICATION	0.9999915098926421	WITHOUT_CLASSIFICATION	8.490107358036493E-6	DEFECT
// Otherwise, we could check that the adapter implements interface IItemColorProvider. //	WITHOUT_CLASSIFICATION	0.9999917472722512	WITHOUT_CLASSIFICATION	8.25272774886555E-6	DEFECT
// Otherwise, we could check that the adapter implements interface IItemColorProvider. //	WITHOUT_CLASSIFICATION	0.9999917472722512	WITHOUT_CLASSIFICATION	8.25272774886555E-6	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999851447687454	WITHOUT_CLASSIFICATION	1.4855231254701075E-5	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999851447687454	WITHOUT_CLASSIFICATION	1.4855231254701075E-5	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999851447687454	WITHOUT_CLASSIFICATION	1.4855231254701075E-5	DEFECT
//public String getUpdateableText(Object object)	WITHOUT_CLASSIFICATION	0.999990328593868	WITHOUT_CLASSIFICATION	9.671406131905038E-6	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999851447687454	WITHOUT_CLASSIFICATION	1.4855231254701075E-5	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999851447687454	WITHOUT_CLASSIFICATION	1.4855231254701075E-5	DEFECT
// When the value is changed, the property sheet page doesn't update the property sheet viewer input // before refreshing, and this gets called on the obsolete wrapper. So, we need to read directly from the // model object. // //return needsEncoding(feature) ? encode((String)getEntryValue()) : getEntryValue();	WITHOUT_CLASSIFICATION	0.9999348164030746	WITHOUT_CLASSIFICATION	6.518359692536214E-5	DEFECT
// Check that the value is type compatible with the entry feature. //	WITHOUT_CLASSIFICATION	0.9999965572855886	WITHOUT_CLASSIFICATION	3.442714411381122E-6	DEFECT
// When the value is changed, the property sheet page doesn't update the property sheet viewer input // before refreshing, and this gets called on the obsolete wrapper. So, we need to read directly from the // model object. // //return value;	WITHOUT_CLASSIFICATION	0.9999884001134494	WITHOUT_CLASSIFICATION	1.1599886550634164E-5	DEFECT
// If the last object was deleted and the selection was in the property sheet view, the obsolete wrapper will // reference past the end of the list. //	WITHOUT_CLASSIFICATION	0.9997620958248398	WITHOUT_CLASSIFICATION	2.3790417516033618E-4	DEFECT
// Either the IEditingDomainItemProvider or ITreeItemContentProvider item provider interface can give us // the children. //	WITHOUT_CLASSIFICATION	0.9999849247374152	WITHOUT_CLASSIFICATION	1.5075262584910906E-5	DEFECT
// Use an existing getReferenceValue() override. //	WITHOUT_CLASSIFICATION	0.9999997783729193	WITHOUT_CLASSIFICATION	2.2162708078970523E-7	DEFECT
// First, try an existing implementation of getChildReference().  This provides backwards compatibility if that // method, now deprecated, was overridden. //	WITHOUT_CLASSIFICATION	0.9999964469188933	WITHOUT_CLASSIFICATION	3.5530811066051718E-6	DEFECT
// Iterate over all the child references to factor each child to the right reference. //	WITHOUT_CLASSIFICATION	0.9999739125427193	WITHOUT_CLASSIFICATION	2.6087457280743822E-5	DEFECT
// If this object is compatible with this reference... //	WITHOUT_CLASSIFICATION	0.999974832895237	WITHOUT_CLASSIFICATION	2.516710476302577E-5	DEFECT
// Iterate over all the set feature to factor each child to the right reference. //	WITHOUT_CLASSIFICATION	0.9998940776808851	WITHOUT_CLASSIFICATION	1.0592231911493118E-4	DEFECT
// Build the collection of new child descriptors. //	WITHOUT_CLASSIFICATION	0.999961762596478	WITHOUT_CLASSIFICATION	3.8237403522018995E-5	DEFECT
// Add child descriptors contributed by extenders. //	WITHOUT_CLASSIFICATION	0.9999905187345697	WITHOUT_CLASSIFICATION	9.481265430267864E-6	DEFECT
// If a sibling has been specified, add the best index possible to each CommandParameter. //	WITHOUT_CLASSIFICATION	0.9999985034707207	WITHOUT_CLASSIFICATION	1.4965292793161843E-6	DEFECT
// Find the index of a feature containing the sibling, or an equivalent value, in the collection of children // features. //	WITHOUT_CLASSIFICATION	0.9999386751920843	WITHOUT_CLASSIFICATION	6.132480791567284E-5	DEFECT
// For each CommandParameter with a non-null, multi-valued structural feature... //	WITHOUT_CLASSIFICATION	0.9999992502979642	WITHOUT_CLASSIFICATION	7.497020356931852E-7	DEFECT
// Look for the sibling value or an equivalent in the new child's feature. If it is found, the child should // immediately follow it. //	WITHOUT_CLASSIFICATION	0.9999886548133962	WITHOUT_CLASSIFICATION	1.134518660372276E-5	DEFECT
// Otherwise, if a sibling feature was found, iterate through the children features to find the index of // the child feature...  //	WITHOUT_CLASSIFICATION	0.9999485083644797	WITHOUT_CLASSIFICATION	5.149163552029177E-5	DEFECT
// If the child feature follows the sibling feature, the child should be first in its feature. //	WITHOUT_CLASSIFICATION	0.9998608134828458	WITHOUT_CLASSIFICATION	1.3918651715406566E-4	DEFECT
// Subclasses may override to add descriptors.	WITHOUT_CLASSIFICATION	0.9999892029281939	WITHOUT_CLASSIFICATION	1.0797071806069934E-5	DEFECT
// If necessary, get a command that replaces unwrapped values by their wrappers in the result and affected objects. //	WITHOUT_CLASSIFICATION	0.9999997017600273	WITHOUT_CLASSIFICATION	2.9823997274716687E-7	DEFECT
// Iterator over all the child references to factor each child to the right reference. //	WITHOUT_CLASSIFICATION	0.9999729614733608	WITHOUT_CLASSIFICATION	2.7038526639289047E-5	DEFECT
// If it is a list type value... // 	WITHOUT_CLASSIFICATION	0.9999973147502187	WITHOUT_CLASSIFICATION	2.68524978131548E-6	DEFECT
// If it is a list type value... // 	WITHOUT_CLASSIFICATION	0.9999973147502187	WITHOUT_CLASSIFICATION	2.68524978131548E-6	DEFECT
// Is this object in this feature... //	WITHOUT_CLASSIFICATION	0.999965549473782	WITHOUT_CLASSIFICATION	3.4450526218024765E-5	DEFECT
// Is this object in this feature... //	WITHOUT_CLASSIFICATION	0.999965549473782	WITHOUT_CLASSIFICATION	3.4450526218024765E-5	DEFECT
// Add it to the list and remove it from the other list. //	WITHOUT_CLASSIFICATION	0.9999854680776076	WITHOUT_CLASSIFICATION	1.4531922392516983E-5	DEFECT
// If we have children to remove for this feature, create a command for it. //	WITHOUT_CLASSIFICATION	0.9999880771427367	WITHOUT_CLASSIFICATION	1.1922857263315296E-5	DEFECT
// It's just a single value //	WITHOUT_CLASSIFICATION	0.9999991869164784	WITHOUT_CLASSIFICATION	8.130835215699082E-7	DEFECT
// Create a command to set this to null and remove the object from the other list. //	WITHOUT_CLASSIFICATION	0.9999969137482372	WITHOUT_CLASSIFICATION	3.0862517628983302E-6	DEFECT
// If all the objects are used up by the above, then we can't do the command. //	WITHOUT_CLASSIFICATION	0.9999979281978536	WITHOUT_CLASSIFICATION	2.071802146467102E-6	DEFECT
// Correct the index, if necessary. //	WITHOUT_CLASSIFICATION	0.9999983691938656	WITHOUT_CLASSIFICATION	1.630806134447652E-6	DEFECT
// Consume the rest of the appropriate children. //	WITHOUT_CLASSIFICATION	0.999975265903383	WITHOUT_CLASSIFICATION	2.473409661693382E-5	DEFECT
// Is this child in this feature... //	WITHOUT_CLASSIFICATION	0.999873863070242	WITHOUT_CLASSIFICATION	1.2613692975814412E-4	DEFECT
// Create a command for this feature,  //	WITHOUT_CLASSIFICATION	0.999997569845387	WITHOUT_CLASSIFICATION	2.4301546129696907E-6	DEFECT
// If all the objects aren't used up by the above, then we can't do the command. //	WITHOUT_CLASSIFICATION	0.9999981378308842	WITHOUT_CLASSIFICATION	1.8621691157671806E-6	DEFECT
// Compute the relative index as best as possible. //	WITHOUT_CLASSIFICATION	0.999999069582765	WITHOUT_CLASSIFICATION	9.304172350041176E-7	DEFECT
// Create a command for this feature, //	WITHOUT_CLASSIFICATION	0.9999982300886335	WITHOUT_CLASSIFICATION	1.7699113665370677E-6	DEFECT
// continue to next case	WITHOUT_CLASSIFICATION	0.999947547220974	WITHOUT_CLASSIFICATION	5.245277902597543E-5	DEFECT
// All this logic is so that we only create a list if the adapter is set to more than one target. //	WITHOUT_CLASSIFICATION	0.9999978539429677	WITHOUT_CLASSIFICATION	2.146057032390502E-6	DEFECT
// Dispose the child wrappers. //	WITHOUT_CLASSIFICATION	0.9999890510432754	WITHOUT_CLASSIFICATION	1.0948956724640474E-5	DEFECT
// Ignore the unset notification for an isMany feature; the value is boolean in this case. //	WITHOUT_CLASSIFICATION	0.9999654099365962	WITHOUT_CLASSIFICATION	3.459006340376425E-5	DEFECT
// No index specified when removing all elements. //	WITHOUT_CLASSIFICATION	0.9999911280333259	WITHOUT_CLASSIFICATION	8.871966674158845E-6	DEFECT
// We need the wrapper, not the item provider, to handle a DragAndDropCommand; the move, add, remove, etc. commands // that implement it will have their values unwrapped as usual. //	WITHOUT_CLASSIFICATION	0.9999289754745982	WITHOUT_CLASSIFICATION	7.102452540168534E-5	DEFECT
// Unwrap collection. //	WITHOUT_CLASSIFICATION	0.9999938418657787	WITHOUT_CLASSIFICATION	6.158134221266832E-6	DEFECT
// If the first wrapped value is found... //	WITHOUT_CLASSIFICATION	0.9999971556299916	WITHOUT_CLASSIFICATION	2.8443700082789863E-6	DEFECT
// Allocate the new collection, and populate it up to this point. //	WITHOUT_CLASSIFICATION	0.9999875423292973	WITHOUT_CLASSIFICATION	1.24576707026513E-5	DEFECT
// If a new collection was allocated, continue to populate it. //	WITHOUT_CLASSIFICATION	0.9999635701116253	WITHOUT_CLASSIFICATION	3.642988837461817E-5	DEFECT
// Unwrap value. //	WITHOUT_CLASSIFICATION	0.9999980469375492	WITHOUT_CLASSIFICATION	1.95306245070443E-6	DEFECT
// Wrappers from the old command parameter must be considered in order for cut and paste to work. //	WITHOUT_CLASSIFICATION	0.9999870591361998	WITHOUT_CLASSIFICATION	1.294086380022346E-5	DEFECT
// If the adapter factory is composeable, we'll adapt using the root. //	WITHOUT_CLASSIFICATION	0.9999751958938988	WITHOUT_CLASSIFICATION	2.4804106101181367E-5	DEFECT
// Build list of wrapped children from the appropriate adapters. //	WITHOUT_CLASSIFICATION	0.9999667735045297	WITHOUT_CLASSIFICATION	3.322649547031765E-5	DEFECT
// Add in additional wrappers to search. //	WITHOUT_CLASSIFICATION	0.9999773572298004	WITHOUT_CLASSIFICATION	2.2642770199590118E-5	DEFECT
/*   * Returns the help context id for this property.   */	WITHOUT_CLASSIFICATION	0.9999769331779985	WITHOUT_CLASSIFICATION	2.306682200148694E-5	DEFECT
/*      ResourceSet resourceSet = (ResourceSet)object;      childrenFeatures.add(ResourcePackage.eINSTANCE.getResourceSet_Resources());*/	WITHOUT_CLASSIFICATION	0.9999987328318342	WITHOUT_CLASSIFICATION	1.2671681658429538E-6	DEFECT
// Does this part provide an editing domain? //	WITHOUT_CLASSIFICATION	0.9999994423854321	WITHOUT_CLASSIFICATION	5.576145678832658E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999106018941357	WITHOUT_CLASSIFICATION	8.939810586429974E-5	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999960024026834	WITHOUT_CLASSIFICATION	3.997597316676026E-6	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.9999933771872096	WITHOUT_CLASSIFICATION	6.622812790395057E-6	DEFECT
// Initialize simple dependencies	WITHOUT_CLASSIFICATION	0.9999991823946333	WITHOUT_CLASSIFICATION	8.176053668014476E-7	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.9999990592002509	WITHOUT_CLASSIFICATION	9.407997490422834E-7	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.99999732803041	WITHOUT_CLASSIFICATION	2.671969590056063E-6	DEFECT
// Mark meta-data to indicate it can't be changed	WITHOUT_CLASSIFICATION	0.9999930471702011	WITHOUT_CLASSIFICATION	6.95282979884545E-6	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.9999982092566939	WITHOUT_CLASSIFICATION	1.7907433059583226E-6	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.9999902001708177	WITHOUT_CLASSIFICATION	9.799829182323957E-6	DEFECT
// Obtain other dependent packages	WITHOUT_CLASSIFICATION	0.9999916577067488	WITHOUT_CLASSIFICATION	8.342293251226973E-6	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.9999995068117644	WITHOUT_CLASSIFICATION	4.93188235584206E-7	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.999998067601732	WITHOUT_CLASSIFICATION	1.932398267952577E-6	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.9999893124183389	WITHOUT_CLASSIFICATION	1.0687581661237084E-5	DEFECT
// Initialize classes and features; add operations and parameters	WITHOUT_CLASSIFICATION	0.9999987329766953	WITHOUT_CLASSIFICATION	1.2670233046854628E-6	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.9999954956836732	WITHOUT_CLASSIFICATION	4.5043163268436935E-6	DEFECT
/**   * The switch that delegates to the <code>createXXX</code> methods.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9999957123146821	WITHOUT_CLASSIFICATION	4.28768531794884E-6	DEFECT
// There are attributes to handle.	WITHOUT_CLASSIFICATION	0.999630411519723	WITHOUT_CLASSIFICATION	3.6958848027707827E-4	DEFECT
// This ensure that this package itself is traversed even if the reference type is EObject... //	WITHOUT_CLASSIFICATION	0.9999858115426051	WITHOUT_CLASSIFICATION	1.4188457394850264E-5	DEFECT
// Look for each unwrapped object as a value of a wrapper, replacing it with the first one found. //	WITHOUT_CLASSIFICATION	0.9999868508764045	WITHOUT_CLASSIFICATION	1.3149123595510844E-5	DEFECT
// Is this a containment reference child? //	WITHOUT_CLASSIFICATION	0.9999924717743903	WITHOUT_CLASSIFICATION	7.528225609750274E-6	DEFECT
// Is this the label feature? //	WITHOUT_CLASSIFICATION	0.9999904761590186	WITHOUT_CLASSIFICATION	9.52384098145111E-6	DEFECT
// Or a feature map child? //	WITHOUT_CLASSIFICATION	0.9999965962795294	WITHOUT_CLASSIFICATION	3.403720470566358E-6	DEFECT
// Don't include controlled children here, they'll show up under their container. //	WITHOUT_CLASSIFICATION	0.9999536827941238	WITHOUT_CLASSIFICATION	4.6317205876140006E-5	DEFECT
// Resource resource = (Resource)object; // childrenFeatures.add(ResourcePackage.eINSTANCE.getResource_Contents());	WITHOUT_CLASSIFICATION	0.9999997200063016	WITHOUT_CLASSIFICATION	2.7999369841552776E-7	DEFECT
// Overlay if the resource is the target for any controlled objects.  //	WITHOUT_CLASSIFICATION	0.9999984626273283	WITHOUT_CLASSIFICATION	1.5373726716263618E-6	DEFECT
// case Resource.RESOURCE__IS_MODIFIED: // case Resource.RESOURCE__IS_LOADED: // case Resource.RESOURCE__IS_TRACKING_MODIFICATION: // case Resource.RESOURCE__RESOURCE_SET:	WITHOUT_CLASSIFICATION	0.999970287388866	WITHOUT_CLASSIFICATION	2.9712611134015612E-5	DEFECT
// TreeNode	WITHOUT_CLASSIFICATION	0.9993965913872591	WITHOUT_CLASSIFICATION	6.034086127409949E-4	DEFECT
//TreeFactory	WITHOUT_CLASSIFICATION	0.9991519743895928	WITHOUT_CLASSIFICATION	8.480256104071329E-4	DEFECT
//TreePackage	WITHOUT_CLASSIFICATION	0.9993737736005636	WITHOUT_CLASSIFICATION	6.262263994363488E-4	DEFECT
//TreeFactoryImpl	WITHOUT_CLASSIFICATION	0.9996126520006844	WITHOUT_CLASSIFICATION	3.873479993155994E-4	DEFECT
//TreeNodeImpl	WITHOUT_CLASSIFICATION	0.9992289913463714	WITHOUT_CLASSIFICATION	7.710086536286551E-4	DEFECT
//TreePackageImpl	WITHOUT_CLASSIFICATION	0.999757188410037	WITHOUT_CLASSIFICATION	2.428115899630292E-4	DEFECT
/*    super.collectNewChildDescriptors(newChildDescriptors, object);*/	WITHOUT_CLASSIFICATION	0.9999928686858913	WITHOUT_CLASSIFICATION	7.131314108653452E-6	DEFECT
//TreeAdapterFactory	WITHOUT_CLASSIFICATION	0.9993612368744057	WITHOUT_CLASSIFICATION	6.387631255943669E-4	DEFECT
//TreeSwitch	WITHOUT_CLASSIFICATION	0.9997095844970838	WITHOUT_CLASSIFICATION	2.9041550291621554E-4	DEFECT
// This is for backwards compatibility, since the constructor may have been overridden before it was expected // to set actionDelegate. //	WITHOUT_CLASSIFICATION	0.9999552471387722	WITHOUT_CLASSIFICATION	4.475286122793516E-5	DEFECT
// If there is a new one... //	WITHOUT_CLASSIFICATION	0.9999550065444054	WITHOUT_CLASSIFICATION	4.499345559462319E-5	DEFECT
// This guard is for extra security, but should not be necessary. //	WITHOUT_CLASSIFICATION	0.9999398150598424	WITHOUT_CLASSIFICATION	6.018494015758882E-5	DEFECT
// Use up the command. // Note that notification will cause a new command to be created. //	WITHOUT_CLASSIFICATION	0.9999919172941681	WITHOUT_CLASSIFICATION	8.082705831769522E-6	DEFECT
// We will only deal with structured selections. //	WITHOUT_CLASSIFICATION	0.9999871098978	WITHOUT_CLASSIFICATION	1.289010219996876E-5	DEFECT
// If we aren't getting the domain from the workbench part... // This happens when this action is used for a global popup action. // We try to get the editing domain from one of the objects in the selection. // //DMS editingDomain == null) ?	WITHOUT_CLASSIFICATION	0.9982286406352066	WITHOUT_CLASSIFICATION	0.0017713593647934063	DEFECT
// If we have a good editing domain... //	WITHOUT_CLASSIFICATION	0.999955535177806	WITHOUT_CLASSIFICATION	4.446482219397999E-5	DEFECT
// Delegate the action for this object to the editing domain. //	WITHOUT_CLASSIFICATION	0.9999945634024255	WITHOUT_CLASSIFICATION	5.436597574396263E-6	DEFECT
// We can enable the action as indicated by the command, // and we can set all the other values from the command. //	WITHOUT_CLASSIFICATION	0.9999989601861138	WITHOUT_CLASSIFICATION	1.0398138862364854E-6	DEFECT
// Nothing more to do and we don't want to do the default stuff below. //	WITHOUT_CLASSIFICATION	0.9999981538630539	WITHOUT_CLASSIFICATION	1.846136945999917E-6	DEFECT
// We just can't do it. //	WITHOUT_CLASSIFICATION	0.9999905782115044	WITHOUT_CLASSIFICATION	9.421788495606435E-6	DEFECT
// No point in keeping garbage. //	WITHOUT_CLASSIFICATION	0.9999952142020105	WITHOUT_CLASSIFICATION	4.785797989484745E-6	DEFECT
// Show the colourless image. //	WITHOUT_CLASSIFICATION	0.9999697197822682	WITHOUT_CLASSIFICATION	3.0280217731730403E-5	DEFECT
// try to get editing domain from workbench part	WITHOUT_CLASSIFICATION	0.9999356035245397	WITHOUT_CLASSIFICATION	6.439647546031978E-5	DEFECT
// only handle structured selections	WITHOUT_CLASSIFICATION	0.9999902130658784	WITHOUT_CLASSIFICATION	9.78693412155782E-6	DEFECT
// convert the selection to a collection of the selected objects	WITHOUT_CLASSIFICATION	0.9999903570432546	WITHOUT_CLASSIFICATION	9.642956745486792E-6	DEFECT
// if the editing domain wasn't given by the workbench part, try to get // it from the selection	WITHOUT_CLASSIFICATION	0.9999767555932773	WITHOUT_CLASSIFICATION	2.3244406722793014E-5	DEFECT
// if we found an editing domain, create command	WITHOUT_CLASSIFICATION	0.9999958524980764	WITHOUT_CLASSIFICATION	4.1475019235308084E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.99987048956532	WITHOUT_CLASSIFICATION	1.2951043468007955E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.99987048956532	WITHOUT_CLASSIFICATION	1.2951043468007955E-4	DEFECT
// use up the command	WITHOUT_CLASSIFICATION	0.9999912571854169	WITHOUT_CLASSIFICATION	8.742814583059836E-6	DEFECT
// Add our standard marker. //	WITHOUT_CLASSIFICATION	0.9999805394071217	WITHOUT_CLASSIFICATION	1.9460592878307043E-5	DEFECT
// Add the edit menu actions. //	WITHOUT_CLASSIFICATION	0.999989019954276	WITHOUT_CLASSIFICATION	1.0980045724051496E-5	DEFECT
// Add our other standard marker. //	WITHOUT_CLASSIFICATION	0.9999647147277622	WITHOUT_CLASSIFICATION	3.52852722377321E-5	DEFECT
// For the control case, we need a dialog to ask for the URI and obtain the resource, then we create the command. //	WITHOUT_CLASSIFICATION	0.9998915816134366	WITHOUT_CLASSIFICATION	1.0841838656330732E-4	DEFECT
// Ensure that all proxies are resolved so that references into the controlled object will be saved to reference the new resource. //	WITHOUT_CLASSIFICATION	0.9999524957582251	WITHOUT_CLASSIFICATION	4.75042417748109E-5	DEFECT
// grabHorizontal = true;	WITHOUT_CLASSIFICATION	0.9999874451225593	WITHOUT_CLASSIFICATION	1.2554877440658717E-5	DEFECT
// We use multi even for a single line because we want to respond to the enter key. //	WITHOUT_CLASSIFICATION	0.9999998499639428	WITHOUT_CLASSIFICATION	1.5003605730355165E-7	DEFECT
// event is null when choiceTableViewer is double clicked	WITHOUT_CLASSIFICATION	0.999993932281014	WITHOUT_CLASSIFICATION	6.067718986016027E-6	DEFECT
// event is null when featureTableViewer is double clicked 	WITHOUT_CLASSIFICATION	0.9999835673509597	WITHOUT_CLASSIFICATION	1.643264904027655E-5	DEFECT
// In column 0, the drop-down is indented past the collapse/expand icon. //	WITHOUT_CLASSIFICATION	0.9999907033698848	WITHOUT_CLASSIFICATION	9.296630115201594E-6	DEFECT
// dropDown.addListener(SWT.Paint, dropDownListener);	WITHOUT_CLASSIFICATION	0.9999926107214772	WITHOUT_CLASSIFICATION	7.3892785228852065E-6	DEFECT
// This should be consistent with paintControl(). // 	WITHOUT_CLASSIFICATION	0.9998263542642618	WITHOUT_CLASSIFICATION	1.736457357381245E-4	DEFECT
// setEditor(null, null, -1);	WITHOUT_CLASSIFICATION	0.9999902435076723	WITHOUT_CLASSIFICATION	9.756492327750495E-6	DEFECT
// Fill with background. //	WITHOUT_CLASSIFICATION	0.9995662799472982	WITHOUT_CLASSIFICATION	4.3372005270190763E-4	DEFECT
// Draw the icons. //	WITHOUT_CLASSIFICATION	0.9999918057030132	WITHOUT_CLASSIFICATION	8.19429698682011E-6	DEFECT
// Draw the text. //	WITHOUT_CLASSIFICATION	0.9999933254589114	WITHOUT_CLASSIFICATION	6.674541088598898E-6	DEFECT
// EATM Color startColor = display.getSystemColor(SWT.COLOR_LIST_SELECTION);	WITHOUT_CLASSIFICATION	0.9999950874096815	WITHOUT_CLASSIFICATION	4.912590318449514E-6	DEFECT
// Remember the requested operation.	WITHOUT_CLASSIFICATION	0.9999836088665949	WITHOUT_CLASSIFICATION	1.639113340514937E-5	DEFECT
// Remember the requested operation.	WITHOUT_CLASSIFICATION	0.9999836088665949	WITHOUT_CLASSIFICATION	1.639113340514937E-5	DEFECT
/*     * (non-Javadoc)     *      * @see org.eclipse.jface.window.Window#configureShell(org.eclipse.swt.widgets.Shell)     */	WITHOUT_CLASSIFICATION	0.9999944454790138	WITHOUT_CLASSIFICATION	5.554520986048786E-6	DEFECT
// Draw background of right-side button. //	WITHOUT_CLASSIFICATION	0.9998746935281307	WITHOUT_CLASSIFICATION	1.2530647186926986E-4	DEFECT
// Draw down arrow, offset if dropped. //	WITHOUT_CLASSIFICATION	0.9999690071160305	WITHOUT_CLASSIFICATION	3.099288396949581E-5	DEFECT
// Draw ellipses, offset if down. //	WITHOUT_CLASSIFICATION	0.9999953942097081	WITHOUT_CLASSIFICATION	4.6057902919133536E-6	DEFECT
// Draw outline. //	WITHOUT_CLASSIFICATION	0.9999938761770691	WITHOUT_CLASSIFICATION	6.123822930929241E-6	DEFECT
// Draw 3D effect on right-side button. //	WITHOUT_CLASSIFICATION	0.9999396706138522	WITHOUT_CLASSIFICATION	6.0329386147702496E-5	DEFECT
// Remember the viewer and listen to SWT.DragDetect to alert the start of the drag operation. //	WITHOUT_CLASSIFICATION	0.9999865962374982	WITHOUT_CLASSIFICATION	1.3403762501743454E-5	DEFECT
// Clear the source data.  We won't need this again, since, if it was // available, it's already in the command. //	WITHOUT_CLASSIFICATION	0.9999869853529189	WITHOUT_CLASSIFICATION	1.3014647081085172E-5	DEFECT
// A command was created if the source was available early, and the // information used to create it was cached... //	WITHOUT_CLASSIFICATION	0.9999984071605742	WITHOUT_CLASSIFICATION	1.5928394258901272E-6	DEFECT
// Recreate the command. //	WITHOUT_CLASSIFICATION	0.9999883207685036	WITHOUT_CLASSIFICATION	1.167923149629195E-5	DEFECT
// Otherwise, the source should be available now as event.data, and we // can create the command. //	WITHOUT_CLASSIFICATION	0.9999991900607625	WITHOUT_CLASSIFICATION	8.0993923747684E-7	DEFECT
// If the command can execute... //	WITHOUT_CLASSIFICATION	0.9999562514805932	WITHOUT_CLASSIFICATION	4.374851940693932E-5	DEFECT
// Execute it. //	WITHOUT_CLASSIFICATION	0.9999722171030142	WITHOUT_CLASSIFICATION	2.7782896985811486E-5	DEFECT
// Otherwise, let's call the whole thing off. //	WITHOUT_CLASSIFICATION	0.9999952483836687	WITHOUT_CLASSIFICATION	4.751616331327387E-6	DEFECT
// Clean up the state. //	WITHOUT_CLASSIFICATION	0.9999955269797514	WITHOUT_CLASSIFICATION	4.473020248628343E-6	DEFECT
// If we can't do anything else, we'll provide the default select feedback // and enable auto-scroll and auto-expand effects.	WITHOUT_CLASSIFICATION	0.9999918830317621	WITHOUT_CLASSIFICATION	8.116968237792656E-6	DEFECT
// Clear out any old information from a previous drag. //	WITHOUT_CLASSIFICATION	0.999988177564443	WITHOUT_CLASSIFICATION	1.1822435557039501E-5	DEFECT
// Get the target object from the item widget and the mouse location in it. //	WITHOUT_CLASSIFICATION	0.9999874228108055	WITHOUT_CLASSIFICATION	1.2577189194432868E-5	DEFECT
// Determine if we can create a valid command at the current location. //	WITHOUT_CLASSIFICATION	0.9999956048464115	WITHOUT_CLASSIFICATION	4.3951535885409335E-6	DEFECT
// If we don't have a previous cached command... //	WITHOUT_CLASSIFICATION	0.9999303401425743	WITHOUT_CLASSIFICATION	6.965985742562267E-5	DEFECT
// Remember the target; create the command and test if it is executable. //	WITHOUT_CLASSIFICATION	0.9999998508900777	WITHOUT_CLASSIFICATION	1.4910992222053823E-7	DEFECT
// Keep track of any changes to the command information.	WITHOUT_CLASSIFICATION	0.9999679965800109	WITHOUT_CLASSIFICATION	3.20034199890749E-5	DEFECT
/*     * (non-Javadoc) Method declared on Dialog.     */	WITHOUT_CLASSIFICATION	0.999996097004461	WITHOUT_CLASSIFICATION	3.9029955390529605E-6	DEFECT
// create OK and Cancel buttons by default	WITHOUT_CLASSIFICATION	0.9999983237952391	WITHOUT_CLASSIFICATION	1.6762047609783784E-6	DEFECT
// create composite	WITHOUT_CLASSIFICATION	0.9999977296506605	WITHOUT_CLASSIFICATION	2.270349339578477E-6	DEFECT
// generateColor();	WITHOUT_CLASSIFICATION	0.9999954810846983	WITHOUT_CLASSIFICATION	4.518915301777435E-6	DEFECT
// }}	WITHOUT_CLASSIFICATION	0.9998942553401612	WITHOUT_CLASSIFICATION	1.0574465983873138E-4	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999851447687454	WITHOUT_CLASSIFICATION	1.4855231254701075E-5	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999851447687454	WITHOUT_CLASSIFICATION	1.4855231254701075E-5	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999851447687454	WITHOUT_CLASSIFICATION	1.4855231254701075E-5	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999851447687454	WITHOUT_CLASSIFICATION	1.4855231254701075E-5	DEFECT
// Check if the cached command can provide DND feedback/revalidation. //	WITHOUT_CLASSIFICATION	0.9999745853800157	WITHOUT_CLASSIFICATION	2.541461998434575E-5	DEFECT
// If so, revalidate the command. //	WITHOUT_CLASSIFICATION	0.9999907737139386	WITHOUT_CLASSIFICATION	9.226286061399445E-6	DEFECT
// If not, dispose the current command and create a new one. //	WITHOUT_CLASSIFICATION	0.9999664339070948	WITHOUT_CLASSIFICATION	3.356609290520287E-5	DEFECT
// If this command can provide detailed drag and drop feedback... //	WITHOUT_CLASSIFICATION	0.9999753865787044	WITHOUT_CLASSIFICATION	2.461342129549854E-5	DEFECT
// Use it for the operation and drag under effect. //	WITHOUT_CLASSIFICATION	0.9999724712841482	WITHOUT_CLASSIFICATION	2.752871585175349E-5	DEFECT
// There is no executable command, so we'd better nix the whole deal. //	WITHOUT_CLASSIFICATION	0.9999899213442481	WITHOUT_CLASSIFICATION	1.0078655751921358E-5	DEFECT
// Check whether the current data type can be transfered locally. //	WITHOUT_CLASSIFICATION	0.9999927375948743	WITHOUT_CLASSIFICATION	7.262405125794858E-6	DEFECT
// Iterate over the data types to see if there is a data type that supports a local transfer. //	WITHOUT_CLASSIFICATION	0.9999993227632916	WITHOUT_CLASSIFICATION	6.772367084889142E-7	DEFECT
// If the local transfer supports this data type, switch to that data type //	WITHOUT_CLASSIFICATION	0.9999894919814623	WITHOUT_CLASSIFICATION	1.0508018537695859E-5	DEFECT
// Transfer the data and, if non-null, extract it. //	WITHOUT_CLASSIFICATION	0.9999859083776532	WITHOUT_CLASSIFICATION	1.4091622346877448E-5	DEFECT
// Transfer the data and convert the structured selection to a collection of objects. //	WITHOUT_CLASSIFICATION	0.9999543756343702	WITHOUT_CLASSIFICATION	4.562436562975606E-5	DEFECT
//do this here because setting the text will set enablement on the OK // button	WITHOUT_CLASSIFICATION	0.9971782600035057	WITHOUT_CLASSIFICATION	0.0028217399964941222	DEFECT
/* | GridData.GRAB_VERTICAL */	WITHOUT_CLASSIFICATION	0.9999845438862569	WITHOUT_CLASSIFICATION	1.545611374313328E-5	DEFECT
// Set the error message text // See https://bugs.eclipse.org/bugs/show_bug.cgi?id=66292	WITHOUT_CLASSIFICATION	0.9999887711976513	WITHOUT_CLASSIFICATION	1.1228802348722952E-5	DEFECT
// If there was no old input, then we must be providing content for this part for the first time... //	WITHOUT_CLASSIFICATION	0.9999941345556727	WITHOUT_CLASSIFICATION	5.865444327373089E-6	DEFECT
// If the notification is an IViewerNotification, it specifies how ViewerRefresh should behave.  Otherwise fall // back to NotifyChangedToViewerRefresh, which determines how to refresh the viewer directly from the model // notification. //	WITHOUT_CLASSIFICATION	0.9997123458482758	WITHOUT_CLASSIFICATION	2.876541517242073E-4	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999743975518987	WITHOUT_CLASSIFICATION	2.5602448101312153E-5	DEFECT
// Now we could check that the adapter implements interface ITableItemLabelProvider. //	WITHOUT_CLASSIFICATION	0.9999949817390188	WITHOUT_CLASSIFICATION	5.018260981215526E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.99987048956532	WITHOUT_CLASSIFICATION	1.2951043468007955E-4	DEFECT
// Now we could check that the adapter implements interface ITableItemLabelProvider. //	WITHOUT_CLASSIFICATION	0.9999949817390188	WITHOUT_CLASSIFICATION	5.018260981215526E-6	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999953079813295	WITHOUT_CLASSIFICATION	4.692018670464854E-6	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999953079813295	WITHOUT_CLASSIFICATION	4.692018670464854E-6	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999953079813295	WITHOUT_CLASSIFICATION	4.692018670464854E-6	DEFECT
// Otherwise, we could check that the adapter implements interface IItemLabelProvider. //	WITHOUT_CLASSIFICATION	0.9999964124959683	WITHOUT_CLASSIFICATION	3.587504031706779E-6	DEFECT
// Otherwise, we could check that the adapter implements interface IItemLabelProvider. //	WITHOUT_CLASSIFICATION	0.9999964124959683	WITHOUT_CLASSIFICATION	3.587504031706779E-6	DEFECT
// No image is a good default. //	WITHOUT_CLASSIFICATION	0.9999981162094534	WITHOUT_CLASSIFICATION	1.8837905464749279E-6	DEFECT
// This implements the following order of preference: //   1. full refresh and update //   2. full refresh (add update if necessary) //   3. refresh element with update //   4. refresh element (if necessary) //   5. update element // 	WITHOUT_CLASSIFICATION	0.9991333500268288	WITHOUT_CLASSIFICATION	8.666499731712619E-4	DEFECT
// n2.isLabelUpdate()	WITHOUT_CLASSIFICATION	0.9999991183658312	WITHOUT_CLASSIFICATION	8.816341687446043E-7	DEFECT
// Previously, we never updated the viewer on a resolve.  Now we post and merge it as appropriate. //	WITHOUT_CLASSIFICATION	0.999996729217149	WITHOUT_CLASSIFICATION	3.270782850927592E-6	DEFECT
// ???	WITHOUT_CLASSIFICATION	0.9999615035088648	WITHOUT_CLASSIFICATION	3.849649113514332E-5	DEFECT
//    case Notification.TOUCH:	WITHOUT_CLASSIFICATION	0.9998230584773361	WITHOUT_CLASSIFICATION	1.7694152266389557E-4	DEFECT
// We ignore non-changes for now. //	WITHOUT_CLASSIFICATION	0.999973182198092	WITHOUT_CLASSIFICATION	2.681780190816158E-5	DEFECT
// fireLabelProviderChanged();	WITHOUT_CLASSIFICATION	0.9999955695985454	WITHOUT_CLASSIFICATION	4.430401454552979E-6	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999976220319823	WITHOUT_CLASSIFICATION	2.3779680177053606E-6	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999976220319823	WITHOUT_CLASSIFICATION	2.3779680177053606E-6	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999933122126892	WITHOUT_CLASSIFICATION	6.687787310920847E-6	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999933122126892	WITHOUT_CLASSIFICATION	6.687787310920847E-6	DEFECT
// Empty extension to limit the effect of suppressing the deprecation warning.	WITHOUT_CLASSIFICATION	0.9999804352773098	WITHOUT_CLASSIFICATION	1.9564722690184596E-5	DEFECT
// Empty extension to limit the effect of suppressing the deprecation warning.	WITHOUT_CLASSIFICATION	0.9999804352773098	WITHOUT_CLASSIFICATION	1.9564722690184596E-5	DEFECT
// Ignore any exceptions and assume the class isn't available.	WITHOUT_CLASSIFICATION	0.9999815120830542	WITHOUT_CLASSIFICATION	1.8487916945898545E-5	DEFECT
// Ignore any exceptions and assume the class isn't available.	WITHOUT_CLASSIFICATION	0.9999815120830542	WITHOUT_CLASSIFICATION	1.8487916945898545E-5	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999743975518987	WITHOUT_CLASSIFICATION	2.5602448101312153E-5	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999743975518987	WITHOUT_CLASSIFICATION	2.5602448101312153E-5	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999743975518987	WITHOUT_CLASSIFICATION	2.5602448101312153E-5	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999953079813295	WITHOUT_CLASSIFICATION	4.692018670464854E-6	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999953079813295	WITHOUT_CLASSIFICATION	4.692018670464854E-6	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999953079813295	WITHOUT_CLASSIFICATION	4.692018670464854E-6	DEFECT
// If there is a column object, just convert it to a string. //	WITHOUT_CLASSIFICATION	0.9999949322056785	WITHOUT_CLASSIFICATION	5.067794321477487E-6	DEFECT
// No font is a good default. //	WITHOUT_CLASSIFICATION	0.9999954619990433	WITHOUT_CLASSIFICATION	4.538000956595329E-6	DEFECT
// Now we could check that the adapter implements interface ITableItemFontProvider. //	WITHOUT_CLASSIFICATION	0.9999828457403843	WITHOUT_CLASSIFICATION	1.7154259615709883E-5	DEFECT
// Otherwise, we could check that the adapter implements interface IItemFontProvider. //	WITHOUT_CLASSIFICATION	0.9999833253617809	WITHOUT_CLASSIFICATION	1.6674638219116373E-5	DEFECT
// No color is a good default. //	WITHOUT_CLASSIFICATION	0.9999973986118236	WITHOUT_CLASSIFICATION	2.6013881763620554E-6	DEFECT
// No color is a good default. //	WITHOUT_CLASSIFICATION	0.9999973986118236	WITHOUT_CLASSIFICATION	2.6013881763620554E-6	DEFECT
// Now we could check that the adapter implements interface ITableItemColorProvider. //	WITHOUT_CLASSIFICATION	0.9999915098926421	WITHOUT_CLASSIFICATION	8.490107358036493E-6	DEFECT
// Now we could check that the adapter implements interface ITableItemColorProvider. //	WITHOUT_CLASSIFICATION	0.9999915098926421	WITHOUT_CLASSIFICATION	8.490107358036493E-6	DEFECT
// Otherwise, we could check that the adapter implements interface IItemColorProvider. //	WITHOUT_CLASSIFICATION	0.9999917472722512	WITHOUT_CLASSIFICATION	8.25272774886555E-6	DEFECT
// Otherwise, we could check that the adapter implements interface IItemColorProvider. //	WITHOUT_CLASSIFICATION	0.9999917472722512	WITHOUT_CLASSIFICATION	8.25272774886555E-6	DEFECT
// The class is not available.	WITHOUT_CLASSIFICATION	0.9998185786394359	WITHOUT_CLASSIFICATION	1.8142136056410935E-4	DEFECT
// Nested GenAnnotations	WITHOUT_CLASSIFICATION	0.9999981140414602	WITHOUT_CLASSIFICATION	1.8859585397461366E-6	DEFECT
/*   * For debugging purposes.  May be removed in the future.   */	WITHOUT_CLASSIFICATION	0.9999842334555383	WITHOUT_CLASSIFICATION	1.5766544461625766E-5	DEFECT
// We don't need to encode here because the only platform resource URIs in the map are for projects // whose names are the same as corresponding plug-in IDs, and hence never need to be encoded // (see EcorePlugin.computePlatformResourceToPlatformPluginMap()). //	WITHOUT_CLASSIFICATION	0.9998814112182699	WITHOUT_CLASSIFICATION	1.1858878173017462E-4	DEFECT
// Create resources for all the root EPackages. //	WITHOUT_CLASSIFICATION	0.9999849186048065	WITHOUT_CLASSIFICATION	1.508139519344174E-5	DEFECT
// removing the first space	WITHOUT_CLASSIFICATION	0.9999950359173185	WITHOUT_CLASSIFICATION	4.9640826815181764E-6	DEFECT
// Subclasses may overwrite	WITHOUT_CLASSIFICATION	0.999994486324057	WITHOUT_CLASSIFICATION	5.513675943092089E-6	DEFECT
// Create resources for all the referenced EPackages // The referencedEPackage is a "local" instance of the realEPackage.  We  // will add the former to a resource that has the same URI of the later.	WITHOUT_CLASSIFICATION	0.999652676914176	WITHOUT_CLASSIFICATION	3.473230858240362E-4	DEFECT
// Initialize the GenModel with all the computed data. //	WITHOUT_CLASSIFICATION	0.99997751192751	WITHOUT_CLASSIFICATION	2.2488072489978662E-5	DEFECT
// Restore all configured settings from the original. //	WITHOUT_CLASSIFICATION	0.9999739885656849	WITHOUT_CLASSIFICATION	2.6011434315149883E-5	DEFECT
// Handle application genmodel stub //	WITHOUT_CLASSIFICATION	0.9999884825189804	WITHOUT_CLASSIFICATION	1.15174810195025E-5	DEFECT
// Determine which projects will need to be referenced. //	WITHOUT_CLASSIFICATION	0.99998243460188	WITHOUT_CLASSIFICATION	1.7565398120079555E-5	DEFECT
// Create the model project. //	WITHOUT_CLASSIFICATION	0.9999954367712377	WITHOUT_CLASSIFICATION	4.5632287623133325E-6	DEFECT
// Add a dummy GenModel for referenced packages. //	WITHOUT_CLASSIFICATION	0.9999724197615977	WITHOUT_CLASSIFICATION	2.758023840225936E-5	DEFECT
// Special case for a reference to Ecore to ensure that flag settings are respected and are set only for Ecore itself. //	WITHOUT_CLASSIFICATION	0.9997458767404901	WITHOUT_CLASSIFICATION	2.541232595099026E-4	DEFECT
// Walk the project looking for .java files to analyze. //	WITHOUT_CLASSIFICATION	0.9999917083652579	WITHOUT_CLASSIFICATION	8.29163474209009E-6	DEFECT
// If we have resolved to an EClass but we have an EAttribute, we can change it to be an EReference. //	WITHOUT_CLASSIFICATION	0.9999942493460205	WITHOUT_CLASSIFICATION	5.750653979383908E-6	DEFECT
// Now we need to hook up opposites by finding the named feature in the type. //	WITHOUT_CLASSIFICATION	0.9999955891929134	WITHOUT_CLASSIFICATION	4.410807086506725E-6	DEFECT
// Containers are transient by default unless explicitly annotated otherwise. //	WITHOUT_CLASSIFICATION	0.9999998622149882	WITHOUT_CLASSIFICATION	1.3778501189208152E-7	DEFECT
// Now we need to hook up keys by finding the named feature in the type. //	WITHOUT_CLASSIFICATION	0.9999872650888799	WITHOUT_CLASSIFICATION	1.2734911120044046E-5	DEFECT
// Clean up the temporary container annotations for holding map entry classes until they are for sure needed. //	WITHOUT_CLASSIFICATION	0.9999921339019254	WITHOUT_CLASSIFICATION	7.866098074593621E-6	DEFECT
// Now we should sort. //	WITHOUT_CLASSIFICATION	0.9999627903430168	WITHOUT_CLASSIFICATION	3.720965698321908E-5	DEFECT
// Find the fragment root so that we can generate to the right location (by default). //	WITHOUT_CLASSIFICATION	0.9999675365644943	WITHOUT_CLASSIFICATION	3.2463435505708235E-5	DEFECT
// Iterate over all projects to look at the manifests. //	WITHOUT_CLASSIFICATION	0.9999969425522631	WITHOUT_CLASSIFICATION	3.0574477368154108E-6	DEFECT
// Determine the required plugins. //	WITHOUT_CLASSIFICATION	0.9999919007124062	WITHOUT_CLASSIFICATION	8.099287593914576E-6	DEFECT
// Iterate over all the plugin IDs to determine the dependency closure. // The list grows as the plugins are visited. //	WITHOUT_CLASSIFICATION	0.9999888090184318	WITHOUT_CLASSIFICATION	1.1190981568190121E-5	DEFECT
// Also add each required plugin for consideration in the loop. //	WITHOUT_CLASSIFICATION	0.9998778563816325	WITHOUT_CLASSIFICATION	1.2214361836743572E-4	DEFECT
// If it's a platform plugin URI, include it in the map. //	WITHOUT_CLASSIFICATION	0.9999995034059684	WITHOUT_CLASSIFICATION	4.965940316318365E-7	DEFECT
// Keep only the plugins that have GenModels for consideration. //	WITHOUT_CLASSIFICATION	0.9999512502241114	WITHOUT_CLASSIFICATION	4.874977588873607E-5	DEFECT
// Consider each GenModel location URI for each required plugin. //	WITHOUT_CLASSIFICATION	0.9999854080874324	WITHOUT_CLASSIFICATION	1.459191256756485E-5	DEFECT
// Compute the closure. //	WITHOUT_CLASSIFICATION	0.9999969721274438	WITHOUT_CLASSIFICATION	3.0278725562255435E-6	DEFECT
// use no encoding	WITHOUT_CLASSIFICATION	0.9998865805440543	WITHOUT_CLASSIFICATION	1.1341945594565574E-4	DEFECT
// Walk the fields. //	WITHOUT_CLASSIFICATION	0.9999895511837521	WITHOUT_CLASSIFICATION	1.044881624795132E-5	DEFECT
// Create the EPackage on demand. //	WITHOUT_CLASSIFICATION	0.9999305720486698	WITHOUT_CLASSIFICATION	6.942795133029027E-5	DEFECT
// Check whether this has @model annotation contents. // If not, it might be a package interface, for backwards compatibility. //	WITHOUT_CLASSIFICATION	0.9999862650540663	WITHOUT_CLASSIFICATION	1.3734945933678263E-5	DEFECT
// Get the package name and see if there's an EPackage for it. //	WITHOUT_CLASSIFICATION	0.9999987296424454	WITHOUT_CLASSIFICATION	1.2703575546210966E-6	DEFECT
// If it's an interface, then it will be treated as an EClass //	WITHOUT_CLASSIFICATION	0.9999940847575721	WITHOUT_CLASSIFICATION	5.915242427895719E-6	DEFECT
// Create a generic super type with an EClass as the classifier for each super interface in the Java representation. //	WITHOUT_CLASSIFICATION	0.9999988380115251	WITHOUT_CLASSIFICATION	1.1619884748719638E-6	DEFECT
// Create a generic super type with an EClass as the classifier for each super interface in the @model representation //	WITHOUT_CLASSIFICATION	0.9999940171159418	WITHOUT_CLASSIFICATION	5.982884058097931E-6	DEFECT
// Match them and accumulate the appropriate result. //	WITHOUT_CLASSIFICATION	0.9999918834927385	WITHOUT_CLASSIFICATION	8.11650726155789E-6	DEFECT
// Walk the methods. //	WITHOUT_CLASSIFICATION	0.9999870366684505	WITHOUT_CLASSIFICATION	1.2963331549463088E-5	DEFECT
// Additional attributes and references may be defined directly on the interface in order to allow the // get accessor method to have suppressed visibility. //	WITHOUT_CLASSIFICATION	0.9999204521984404	WITHOUT_CLASSIFICATION	7.954780155956807E-5	DEFECT
// Otherwise it's treated as an EEnum //	WITHOUT_CLASSIFICATION	0.999998251629802	WITHOUT_CLASSIFICATION	1.748370197904943E-6	DEFECT
// Find Packages and Factories	WITHOUT_CLASSIFICATION	0.9999878821258757	WITHOUT_CLASSIFICATION	1.2117874124334354E-5	DEFECT
// It's definitely a package if it was declared as such. //	WITHOUT_CLASSIFICATION	0.9999985772038793	WITHOUT_CLASSIFICATION	1.4227961207409337E-6	DEFECT
// It's definitely a package if expected constants eNAME, eNS_PREFIX, or eNS_URI appear. //	WITHOUT_CLASSIFICATION	0.9999946203358921	WITHOUT_CLASSIFICATION	5.379664107908061E-6	DEFECT
// This will catch inherited features, or additional things we don't want to worry about.	WITHOUT_CLASSIFICATION	0.9984627949550754	WITHOUT_CLASSIFICATION	0.0015372050449246094	DEFECT
// Check whether this has @model annotation contents. //	WITHOUT_CLASSIFICATION	0.9998972160236341	WITHOUT_CLASSIFICATION	1.0278397636593955E-4	DEFECT
// An operation is declared via the kind property or, for backwards compatibility, by specifying parameters // (though attribute or reference kind takes precedence). //	WITHOUT_CLASSIFICATION	0.9999635274926828	WITHOUT_CLASSIFICATION	3.6472507317162555E-5	DEFECT
// Map to an EEnum.	WITHOUT_CLASSIFICATION	0.9999592908829559	WITHOUT_CLASSIFICATION	4.0709117044079425E-5	DEFECT
// The feature name is extracted lower cased. //	WITHOUT_CLASSIFICATION	0.9999887895824588	WITHOUT_CLASSIFICATION	1.1210417541100657E-5	DEFECT
// The name is extracted and lower cased. //	WITHOUT_CLASSIFICATION	0.9999956805880506	WITHOUT_CLASSIFICATION	4.319411949417758E-6	DEFECT
// Each token in parameters will specify a dataType for the corresponding parameter, but can be overridden by a // parameter-name-prefixed dataType property. //	WITHOUT_CLASSIFICATION	0.9995214282896835	WITHOUT_CLASSIFICATION	4.785717103164729E-4	DEFECT
// Each token in exceptions will specify a data type for the corresponding exception. //	WITHOUT_CLASSIFICATION	0.9989397892769152	WITHOUT_CLASSIFICATION	0.0010602107230847616	DEFECT
// If we aren't doing an operation... //	WITHOUT_CLASSIFICATION	0.9996308929380223	WITHOUT_CLASSIFICATION	3.691070619776888E-4	DEFECT
// We'll create one of these. //	WITHOUT_CLASSIFICATION	0.9999774714418974	WITHOUT_CLASSIFICATION	2.2528558102587882E-5	DEFECT
// If any of these attributes appear, this must be a reference. //	WITHOUT_CLASSIFICATION	0.9999966906189562	WITHOUT_CLASSIFICATION	3.3093810437537627E-6	DEFECT
// Set the EReference attributes. //	WITHOUT_CLASSIFICATION	0.9999932424097998	WITHOUT_CLASSIFICATION	6.757590200161743E-6	DEFECT
// Defer the handling of the opposite. //	WITHOUT_CLASSIFICATION	0.9999685560418061	WITHOUT_CLASSIFICATION	3.144395819395061E-5	DEFECT
// Set the visibility annotations for the EstructuralFeature. //	WITHOUT_CLASSIFICATION	0.9999947750568877	WITHOUT_CLASSIFICATION	5.224943112295829E-6	DEFECT
// Set the EAttribute attributes. //	WITHOUT_CLASSIFICATION	0.9999938359107284	WITHOUT_CLASSIFICATION	6.164089271626193E-6	DEFECT
// Handle the type, multiplicity and other ETypedElement attributes. //	WITHOUT_CLASSIFICATION	0.9999988104703805	WITHOUT_CLASSIFICATION	1.1895296194913829E-6	DEFECT
// Set the EStructuralFeature attributes. //	WITHOUT_CLASSIFICATION	0.9999957879808412	WITHOUT_CLASSIFICATION	4.212019158723951E-6	DEFECT
// Process the annotations. //	WITHOUT_CLASSIFICATION	0.9999988538102994	WITHOUT_CLASSIFICATION	1.146189700533409E-6	DEFECT
// For lists, maps, and feature maps, the default is many-valued, which can be overridden by an upper-bound declaration. //	WITHOUT_CLASSIFICATION	0.9999997198065547	WITHOUT_CLASSIFICATION	2.8019344532632376E-7	DEFECT
// The type can be augmented by specifying the it explicitly in the annotation. // This mostly makes sense only for many-valued typed elements, where the Java // type is a list and the item type needs to be specified. //	WITHOUT_CLASSIFICATION	0.9999920746629374	WITHOUT_CLASSIFICATION	7.925337062628838E-6	DEFECT
// Allow the value to be defined by an annotation or by the field's initializer //	WITHOUT_CLASSIFICATION	0.9999982058066006	WITHOUT_CLASSIFICATION	1.7941933994249285E-6	DEFECT
// Allow a distinct literal value to be provided, too. //	WITHOUT_CLASSIFICATION	0.9999996834201647	WITHOUT_CLASSIFICATION	3.1657983534451496E-7	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.9999982092566939	WITHOUT_CLASSIFICATION	1.7907433059583226E-6	DEFECT
// Allow a mixed case version of the name to be provided. //	WITHOUT_CLASSIFICATION	0.9999914482222815	WITHOUT_CLASSIFICATION	8.551777718448657E-6	DEFECT
// But, if name doesn't expand into field name, ignore it. //	WITHOUT_CLASSIFICATION	0.9999993261353525	WITHOUT_CLASSIFICATION	6.738646474752353E-7	DEFECT
// If there is no Ecore representation or it's invalid, e.g., when - is used to omit a specification, then just use the Java representation. //	WITHOUT_CLASSIFICATION	0.9999541331932462	WITHOUT_CLASSIFICATION	4.586680675379253E-5	DEFECT
// We want to resolve to this. //	WITHOUT_CLASSIFICATION	0.9999944938830119	WITHOUT_CLASSIFICATION	5.506116988129495E-6	DEFECT
// Check if it is exactly the name of a type parameter that's in scope. //	WITHOUT_CLASSIFICATION	0.9999994525560552	WITHOUT_CLASSIFICATION	5.47443944823895E-7	DEFECT
// Check if the name is qualified //	WITHOUT_CLASSIFICATION	0.9999986946918414	WITHOUT_CLASSIFICATION	1.3053081585036347E-6	DEFECT
// For arrays, consider the element type. //	WITHOUT_CLASSIFICATION	0.9999926153569123	WITHOUT_CLASSIFICATION	7.3846430876504905E-6	DEFECT
// Find an explicit import or the first wildcard import. //	WITHOUT_CLASSIFICATION	0.99999482653723	WITHOUT_CLASSIFICATION	5.173462769903838E-6	DEFECT
// Find the modeled package for the import and look up the name there. //	WITHOUT_CLASSIFICATION	0.9999955477479329	WITHOUT_CLASSIFICATION	4.452252067143745E-6	DEFECT
// If we can't find it, try the simple name in the package... //	WITHOUT_CLASSIFICATION	0.9999971335628695	WITHOUT_CLASSIFICATION	2.866437130588643E-6	DEFECT
// Find the modeled package for the name and look up the name there. //	WITHOUT_CLASSIFICATION	0.9999974392053842	WITHOUT_CLASSIFICATION	2.5607946159138284E-6	DEFECT
// If we still don't have one, we'll have to settle for an EDataType or EClass with an instance class name. //	WITHOUT_CLASSIFICATION	0.9999087610451766	WITHOUT_CLASSIFICATION	9.123895482339531E-5	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999976220319823	WITHOUT_CLASSIFICATION	2.3779680177053606E-6	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.9999902001708177	WITHOUT_CLASSIFICATION	9.799829182323957E-6	DEFECT
// See if we already have the EDataType. //	WITHOUT_CLASSIFICATION	0.9999664339227525	WITHOUT_CLASSIFICATION	3.356607724749605E-5	DEFECT
// Just to be helpful, we'll recognize a type of org.eclipse.emf.ecore.util.FeatureMap and convert it to EFeatureMapEntry. // This way a dataType need not be specified. But, we won't do this if recordDemandCreateEDataType is false, so we don't // change the instanceClass of a new EDataType that's implicitly being defined for FeatureMap. //	WITHOUT_CLASSIFICATION	0.9999929584364194	WITHOUT_CLASSIFICATION	7.041563580594829E-6	DEFECT
// If we don't have one yet, maybe it's one of the special types... //	WITHOUT_CLASSIFICATION	0.9992325513769582	WITHOUT_CLASSIFICATION	7.674486230417272E-4	DEFECT
// If we still don't have one, we'll have to settle for a demand created EDataType or EClass, // so create a new EClassifier with a nice unique name. //	WITHOUT_CLASSIFICATION	0.9999807350398435	WITHOUT_CLASSIFICATION	1.9264960156370515E-5	DEFECT
// If the name isn't qualified, it might be a primitive or from java.lang. Otherwise, assume it's in the current // package and use the nsPrefix for the qualified package name. //	WITHOUT_CLASSIFICATION	0.9999987831104468	WITHOUT_CLASSIFICATION	1.2168895532299367E-6	DEFECT
// Even primitives should be represented by a data type with a conventional (i.e. capitalized) name. //	WITHOUT_CLASSIFICATION	0.9999929778112847	WITHOUT_CLASSIFICATION	7.022188715319117E-6	DEFECT
// Make array names legal. //	WITHOUT_CLASSIFICATION	0.9999988533129424	WITHOUT_CLASSIFICATION	1.1466870576210316E-6	DEFECT
// Avoid classifier name collisions. //	WITHOUT_CLASSIFICATION	0.9999979681850579	WITHOUT_CLASSIFICATION	2.031814942177034E-6	DEFECT
// For the model information. //	WITHOUT_CLASSIFICATION	0.9999335659959768	WITHOUT_CLASSIFICATION	6.643400402326496E-5	DEFECT
// This is package,  // so check the package information if this is in cat file. // If it is, then load the .cat file into the tree thereby traversing it; // otherwise, just traverse the tree. //	WITHOUT_CLASSIFICATION	0.9997389361497565	WITHOUT_CLASSIFICATION	2.6106385024351363E-4	DEFECT
// The package is in a .cat file. //	WITHOUT_CLASSIFICATION	0.9999802922662065	WITHOUT_CLASSIFICATION	1.9707733793379547E-5	DEFECT
// The package not in a .cat file. //	WITHOUT_CLASSIFICATION	0.999933505820093	WITHOUT_CLASSIFICATION	6.649417990696718E-5	DEFECT
// This could potentially map every created model element to its corresponding Rose node. // However, for now we're only using it as needed. //	WITHOUT_CLASSIFICATION	0.9992158943272007	WITHOUT_CLASSIFICATION	7.841056727993015E-4	DEFECT
// Get the parent object. //	WITHOUT_CLASSIFICATION	0.9999968932830908	WITHOUT_CLASSIFICATION	3.106716909110212E-6	DEFECT
// Map to an EPackage. //	WITHOUT_CLASSIFICATION	0.9999795684950988	WITHOUT_CLASSIFICATION	2.0431504901135225E-5	DEFECT
// Add to package. //	WITHOUT_CLASSIFICATION	0.9999720861583143	WITHOUT_CLASSIFICATION	2.791384168565614E-5	DEFECT
// Map to an EClass. //	WITHOUT_CLASSIFICATION	0.9999921221027903	WITHOUT_CLASSIFICATION	7.877897209665808E-6	DEFECT
//do nothing	WITHOUT_CLASSIFICATION	0.9993906579767482	WITHOUT_CLASSIFICATION	6.093420232518114E-4	DEFECT
// Map to an EDataType. //	WITHOUT_CLASSIFICATION	0.9999593634638639	WITHOUT_CLASSIFICATION	4.0636536136043745E-5	DEFECT
// Map to an EDataType. //	WITHOUT_CLASSIFICATION	0.9999593634638639	WITHOUT_CLASSIFICATION	4.0636536136043745E-5	DEFECT
// Map to an eClass. //	WITHOUT_CLASSIFICATION	0.9999951377932105	WITHOUT_CLASSIFICATION	4.862206789628163E-6	DEFECT
// Map to an EOperation.	WITHOUT_CLASSIFICATION	0.9999110851261669	WITHOUT_CLASSIFICATION	8.891487383307335E-5	DEFECT
// Add to an EClass //	WITHOUT_CLASSIFICATION	0.9999699174903872	WITHOUT_CLASSIFICATION	3.0082509612750963E-5	DEFECT
// Map to an EParameter as input parameter for operation. //	WITHOUT_CLASSIFICATION	0.9999912365171125	WITHOUT_CLASSIFICATION	8.763482887393226E-6	DEFECT
// Do this first for better error message during setEParameterProperties. //	WITHOUT_CLASSIFICATION	0.9999984980751003	WITHOUT_CLASSIFICATION	1.501924899587154E-6	DEFECT
// Map to EAttribute, or EEnumLiteral. //	WITHOUT_CLASSIFICATION	0.9999983346074889	WITHOUT_CLASSIFICATION	1.6653925111408735E-6	DEFECT
// We will need to check the containment if we have to convert the EAttribute to an EReference later.  //	WITHOUT_CLASSIFICATION	0.9996931810801117	WITHOUT_CLASSIFICATION	3.0681891988823345E-4	DEFECT
// Convert to an EReference. //	WITHOUT_CLASSIFICATION	0.9999761994700476	WITHOUT_CLASSIFICATION	2.3800529952479946E-5	DEFECT
// map to EReference when is navigable //	WITHOUT_CLASSIFICATION	0.9999954806713318	WITHOUT_CLASSIFICATION	4.519328668150922E-6	DEFECT
// eReference.setNavigable(roseNode.isNavigable());	WITHOUT_CLASSIFICATION	0.9999945228289979	WITHOUT_CLASSIFICATION	5.477171002052269E-6	DEFECT
/*        eClass.getESuperTypes().addAll(extend);        eClass.getESuperTypes().addAll(unspecified);        eClass.getESuperTypes().addAll(mixin);        eClass.getESuperTypes().addAll(nonClass);        */	WITHOUT_CLASSIFICATION	0.9999981773348159	WITHOUT_CLASSIFICATION	1.822665184154424E-6	DEFECT
// try to retrieve the fully qualified name of the specified type...	WITHOUT_CLASSIFICATION	0.9999610284874043	WITHOUT_CLASSIFICATION	3.8971512595773916E-5	DEFECT
// convert to dot-separated format if necessary...	WITHOUT_CLASSIFICATION	0.999999512063332	WITHOUT_CLASSIFICATION	4.879366679735541E-7	DEFECT
// remove garbage characters...	WITHOUT_CLASSIFICATION	0.9999889393942378	WITHOUT_CLASSIFICATION	1.1060605762158792E-5	DEFECT
// qualify type name if not already qualified...	WITHOUT_CLASSIFICATION	0.999978524575128	WITHOUT_CLASSIFICATION	2.1475424872023794E-5	DEFECT
// default value //	WITHOUT_CLASSIFICATION	0.9999980032302096	WITHOUT_CLASSIFICATION	1.996769790489907E-6	DEFECT
// Order first by number of features (descending) and then alphabetically (ascending) //	WITHOUT_CLASSIFICATION	0.9999969352582979	WITHOUT_CLASSIFICATION	3.0647417020711227E-6	DEFECT
// Temporary WAS/WSAD migration option. //	WITHOUT_CLASSIFICATION	0.9999134828771156	WITHOUT_CLASSIFICATION	8.651712288451005E-5	DEFECT
// A container must be transient. //	WITHOUT_CLASSIFICATION	0.9999984918596979	WITHOUT_CLASSIFICATION	1.5081403021125716E-6	DEFECT
// setup attribute and parameter type //	WITHOUT_CLASSIFICATION	0.9999995466861019	WITHOUT_CLASSIFICATION	4.5331389813006136E-7	DEFECT
// Convert attributes of with EClass type to references. //	WITHOUT_CLASSIFICATION	0.9999867115552354	WITHOUT_CLASSIFICATION	1.3288444764587446E-5	DEFECT
// It was not found in the model class so check if primitive type. //	WITHOUT_CLASSIFICATION	0.9999885082254506	WITHOUT_CLASSIFICATION	1.1491774549354793E-5	DEFECT
// Convert reference to attribute if its type is an EDataType...  //	WITHOUT_CLASSIFICATION	0.9999782341183839	WITHOUT_CLASSIFICATION	2.1765881616126937E-5	DEFECT
// Store the base name for relative .cat file references. //	WITHOUT_CLASSIFICATION	0.999999153390129	WITHOUT_CLASSIFICATION	8.466098710289217E-7	DEFECT
// read mdl file...	WITHOUT_CLASSIFICATION	0.9999733745574896	WITHOUT_CLASSIFICATION	2.6625442510335846E-5	DEFECT
// special case, traverse cat file or mdl file //	WITHOUT_CLASSIFICATION	0.9999959882164237	WITHOUT_CLASSIFICATION	4.011783576401586E-6	DEFECT
// file is a mdl file // // get model name	WITHOUT_CLASSIFICATION	0.999997356393707	WITHOUT_CLASSIFICATION	2.6436062930029064E-6	DEFECT
// cat(unit) file referenced by mdl file	WITHOUT_CLASSIFICATION	0.9999955696029712	WITHOUT_CLASSIFICATION	4.430397028864417E-6	DEFECT
// Process the children of the UnitTreeNode recursively. //	WITHOUT_CLASSIFICATION	0.9999849551787358	WITHOUT_CLASSIFICATION	1.5044821264255465E-5	DEFECT
//directoryName.length() > 0 && directoryName.charAt(0) == '$') 	WITHOUT_CLASSIFICATION	0.9999876296278996	WITHOUT_CLASSIFICATION	1.2370372100503992E-5	DEFECT
// map properties even when isTreeOnly == true	WITHOUT_CLASSIFICATION	0.9999530776207218	WITHOUT_CLASSIFICATION	4.692237927817915E-5	DEFECT
//    top++;	WITHOUT_CLASSIFICATION	0.9998504248722806	WITHOUT_CLASSIFICATION	1.495751277193797E-4	DEFECT
// 7 is the size of (object	WITHOUT_CLASSIFICATION	0.9999706748283331	WITHOUT_CLASSIFICATION	2.9325171666832413E-5	DEFECT
// 5 is the size of (list	WITHOUT_CLASSIFICATION	0.9999646473983473	WITHOUT_CLASSIFICATION	3.5352601652727005E-5	DEFECT
// 6 is the size of (value	WITHOUT_CLASSIFICATION	0.9999887332832981	WITHOUT_CLASSIFICATION	1.1266716701971534E-5	DEFECT
// size should be 1	WITHOUT_CLASSIFICATION	0.9999429195647271	WITHOUT_CLASSIFICATION	5.708043527284443E-5	DEFECT
// could this happen?	WITHOUT_CLASSIFICATION	0.9999676171454903	WITHOUT_CLASSIFICATION	3.2382854509722776E-5	DEFECT
// Process the children of the UnitTreeNode recursively. //	WITHOUT_CLASSIFICATION	0.9999849551787358	WITHOUT_CLASSIFICATION	1.5044821264255465E-5	DEFECT
// Process the contents of the extent //	WITHOUT_CLASSIFICATION	0.9999974544970027	WITHOUT_CLASSIFICATION	2.545502997371391E-6	DEFECT
// Load the Rose .mdl or .cat file, and create mappings for the objects. //	WITHOUT_CLASSIFICATION	0.999999621425919	WITHOUT_CLASSIFICATION	3.785740808817999E-7	DEFECT
// This sets the parent so that the nodes can traverse to the root to find default eCore settings. //	WITHOUT_CLASSIFICATION	0.9999747346160748	WITHOUT_CLASSIFICATION	2.5265383925182637E-5	DEFECT
// Start second traverse to create mapping objects in memory. //	WITHOUT_CLASSIFICATION	0.9999896413454585	WITHOUT_CLASSIFICATION	1.035865454150052E-5	DEFECT
// Only one open quote. //	WITHOUT_CLASSIFICATION	0.9994284729925558	WITHOUT_CLASSIFICATION	5.71527007444331E-4	DEFECT
// This will not add duplicates. //	WITHOUT_CLASSIFICATION	0.9996259166322001	WITHOUT_CLASSIFICATION	3.7408336779995406E-4	DEFECT
// No additional features // MappingStrategy	WITHOUT_CLASSIFICATION	0.9999945051637272	WITHOUT_CLASSIFICATION	5.494836272703321E-6	DEFECT
//MappingPackage	WITHOUT_CLASSIFICATION	0.9996461481722827	WITHOUT_CLASSIFICATION	3.5385182771730504E-4	DEFECT
// ComplexTypeConverter	WITHOUT_CLASSIFICATION	0.9999973308182092	WITHOUT_CLASSIFICATION	2.669181790793868E-6	DEFECT
// No additional features // TypeConverter	WITHOUT_CLASSIFICATION	0.9999795766952521	WITHOUT_CLASSIFICATION	2.0423304747970353E-5	DEFECT
// MappingRoot	WITHOUT_CLASSIFICATION	0.9999852940491877	WITHOUT_CLASSIFICATION	1.4705950812344062E-5	DEFECT
// FunctionNamePair	WITHOUT_CLASSIFICATION	0.9999664231866329	WITHOUT_CLASSIFICATION	3.357681336714742E-5	DEFECT
// MappingHelper	WITHOUT_CLASSIFICATION	0.999993332423154	WITHOUT_CLASSIFICATION	6.667576845998781E-6	DEFECT
//MappingFactory	WITHOUT_CLASSIFICATION	0.9994966382071295	WITHOUT_CLASSIFICATION	5.0336179287048E-4	DEFECT
// FunctionPair	WITHOUT_CLASSIFICATION	0.9999055808739858	WITHOUT_CLASSIFICATION	9.441912601411912E-5	DEFECT
//mappingRoot.ePackageMapping().getMapping_Outputs() : //mappingRoot.ePackageMapping().getMapping_Inputs(),	WITHOUT_CLASSIFICATION	0.9998213976943126	WITHOUT_CLASSIFICATION	1.7860230568742007E-4	DEFECT
//mappingRoot.ePackageMapping().getMapping_Inputs() : //mappingRoot.ePackageMapping().getMapping_Outputs(),	WITHOUT_CLASSIFICATION	0.9998213976943126	WITHOUT_CLASSIFICATION	1.7860230568742007E-4	DEFECT
// This will deal with all the subcommands to modifying the root mapping tree. //	WITHOUT_CLASSIFICATION	0.995755718038661	WITHOUT_CLASSIFICATION	0.004244281961339049	DEFECT
// For each mapping being removed... //	WITHOUT_CLASSIFICATION	0.999967399995961	WITHOUT_CLASSIFICATION	3.260000403913896E-5	DEFECT
// Make sure the back pointers to this mapping from the mapped objects is set. //	WITHOUT_CLASSIFICATION	0.9999750874317861	WITHOUT_CLASSIFICATION	2.491256821394509E-5	DEFECT
//subcommands.appendAndExecute(new RemoveCommand(domain, mapping, mapping.ePackageMapping().getMapping_Nested(), nestedMappings)); //subcommands.appendAndExecute(new AddCommand(domain, parentMapping, parentMapping.ePackageMapping().getMapping_Nested(), nestedMappings));	WITHOUT_CLASSIFICATION	0.999998937334612	WITHOUT_CLASSIFICATION	1.0626653880874278E-6	DEFECT
// Since input objects are read-only, we don't need to make a copy of them for the clipboard. // We can just put a pointer to the original object(s) on the clipboard. //	WITHOUT_CLASSIFICATION	0.9999664972897345	WITHOUT_CLASSIFICATION	3.350271026551317E-5	DEFECT
// Do we also have some non-input objects to copy? //	WITHOUT_CLASSIFICATION	0.9999943711638603	WITHOUT_CLASSIFICATION	5.628836139709033E-6	DEFECT
// Just remember it; it's encoded later during execution, which is more efficient. //	WITHOUT_CLASSIFICATION	0.9999916390455662	WITHOUT_CLASSIFICATION	8.360954433813819E-6	DEFECT
// Do the encoding. //	WITHOUT_CLASSIFICATION	0.999854405385588	WITHOUT_CLASSIFICATION	1.4559461441192447E-4	DEFECT
// Record the records for the executed commands on the stack. //	WITHOUT_CLASSIFICATION	0.9999467456071668	WITHOUT_CLASSIFICATION	5.325439283318131E-5	DEFECT
// If there is more than one exact match, we must get an index number; //	WITHOUT_CLASSIFICATION	0.9999925483578208	WITHOUT_CLASSIFICATION	7.4516421791802E-6	DEFECT
// Iterate over the whole tree to do this. //	WITHOUT_CLASSIFICATION	0.9999934559846653	WITHOUT_CLASSIFICATION	6.5440153346790505E-6	DEFECT
//Resource resource = EcoreUtil.getURI(refObject).; FIX:::	WITHOUT_CLASSIFICATION	0.9968063620067527	WITHOUT_CLASSIFICATION	0.0031936379932472818	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.mapping.action.AddRootTopAction#getTopsToAdd()   */	WITHOUT_CLASSIFICATION	0.9999991200939261	WITHOUT_CLASSIFICATION	8.799060738224661E-7	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9999146686599837	WITHOUT_CLASSIFICATION	8.533134001628908E-5	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9999146686599837	WITHOUT_CLASSIFICATION	8.533134001628908E-5	DEFECT
// Make sure the back pointers to this mapping from the mapped objects is set. //	WITHOUT_CLASSIFICATION	0.9999750874317861	WITHOUT_CLASSIFICATION	2.491256821394509E-5	DEFECT
// Iterate over the whole tree to do this. //	WITHOUT_CLASSIFICATION	0.9999934559846653	WITHOUT_CLASSIFICATION	6.5440153346790505E-6	DEFECT
// This is tricky and is done for each object here rather than once for the owner of the addCommnd. // We want to make sure the object is really part of the conceptual tree induced by the domain. //	WITHOUT_CLASSIFICATION	0.9999349061658072	WITHOUT_CLASSIFICATION	6.509383419283526E-5	DEFECT
// For each mapping being added... //	WITHOUT_CLASSIFICATION	0.9999754789203316	WITHOUT_CLASSIFICATION	2.4521079668395434E-5	DEFECT
// Check all the siblings to see which if any should now be nested under this new mapping. // The are accumulated into a list so that they can be removed as a single command with a single notification. //	WITHOUT_CLASSIFICATION	0.9999720634935915	WITHOUT_CLASSIFICATION	2.793650640859001E-5	DEFECT
// If there are siblings that need to be reparented. //	WITHOUT_CLASSIFICATION	0.9999884219882935	WITHOUT_CLASSIFICATION	1.1578011706505809E-5	DEFECT
// Create commands to do parentMapping.getNested().removeAll(siblingsToReparent). //	WITHOUT_CLASSIFICATION	0.9999998675420203	WITHOUT_CLASSIFICATION	1.324579797397408E-7	DEFECT
//(new RemoveCommand(domain, parentMapping, parentMapping.ePackageMapping().getMapping_Nested(), siblingsToReparent));	WITHOUT_CLASSIFICATION	0.9999995799130222	WITHOUT_CLASSIFICATION	4.200869778596767E-7	DEFECT
// Create commands to do mapping.getNested().addAll(siblingsToReparent). //	WITHOUT_CLASSIFICATION	0.9999998098529352	WITHOUT_CLASSIFICATION	1.9014706477448572E-7	DEFECT
// return false if iteration should continue.	WITHOUT_CLASSIFICATION	0.9998689259232039	WITHOUT_CLASSIFICATION	1.31074076796211E-4	DEFECT
// Now we'll do recursive MatchMapping. // (We need to iterate over a copy, since we modify the underlying list in the loop.)	WITHOUT_CLASSIFICATION	0.9999995564516777	WITHOUT_CLASSIFICATION	4.435483223162587E-7	DEFECT
//(RemoveCommand.create(mappingDomain, mapping, mapping.ePackageMapping().getMapping_Outputs(), object)));	WITHOUT_CLASSIFICATION	0.9999965813161961	WITHOUT_CLASSIFICATION	3.418683803974988E-6	DEFECT
// Get the corresponding type. //	WITHOUT_CLASSIFICATION	0.9999351874430203	WITHOUT_CLASSIFICATION	6.481255697958603E-5	DEFECT
// Create the copy from this corresponding type. //	WITHOUT_CLASSIFICATION	0.9999051092418687	WITHOUT_CLASSIFICATION	9.489075813128644E-5	DEFECT
// This is done to ensure that this new copy is treated as an output by the domain. // The CreateMappingCommand will rely on this setting. //	WITHOUT_CLASSIFICATION	0.9995231597730941	WITHOUT_CLASSIFICATION	4.7684022690597445E-4	DEFECT
// Type matching never matches inputs that are already mapped	WITHOUT_CLASSIFICATION	0.9999605513064146	WITHOUT_CLASSIFICATION	3.944869358539029E-5	DEFECT
//commandList.add(RemoveCommand.create(mappingDomain, mapping, mapping.ePackageMapping().getMapping_Outputs(), object));	WITHOUT_CLASSIFICATION	0.9999975496031729	WITHOUT_CLASSIFICATION	2.4503968271336697E-6	DEFECT
// Copy the children references  //	WITHOUT_CLASSIFICATION	0.9999628978971026	WITHOUT_CLASSIFICATION	3.71021028973864E-5	DEFECT
// this will create the mapping as well	WITHOUT_CLASSIFICATION	0.9999674246646298	WITHOUT_CLASSIFICATION	3.25753353700601E-5	DEFECT
// Copy the name //	WITHOUT_CLASSIFICATION	0.9999969936021856	WITHOUT_CLASSIFICATION	3.0063978143562303E-6	DEFECT
// Copy the type //	WITHOUT_CLASSIFICATION	0.9999862522242671	WITHOUT_CLASSIFICATION	1.374777573290617E-5	DEFECT
// We have done our preparation. Now ask the super to validate. //	WITHOUT_CLASSIFICATION	0.9999276995666214	WITHOUT_CLASSIFICATION	7.23004333784903E-5	DEFECT
// Remove all the mappings from the root. //	WITHOUT_CLASSIFICATION	0.99999427904739	WITHOUT_CLASSIFICATION	5.720952609936559E-6	DEFECT
//removeCommand = RemoveCommand.create(domain, mappingRoot, mappingRoot.ePackageMapping().getMapping_Nested(), mappingRoot.getNested());	WITHOUT_CLASSIFICATION	0.9999994336076568	WITHOUT_CLASSIFICATION	5.663923432763124E-7	DEFECT
// This is the tricky part where we set the encoding  // that we'd like to have decoded as a series of commands to execute after this command has completed. //	WITHOUT_CLASSIFICATION	0.9997840445342377	WITHOUT_CLASSIFICATION	2.1595546576230127E-4	DEFECT
//domain.getMappingRoot().removeMapping(newMapping);	WITHOUT_CLASSIFICATION	0.9999402031122255	WITHOUT_CLASSIFICATION	5.9796887774457803E-5	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.mapping.action.AddRootBottomAction#getBottomsToAdd()   */	WITHOUT_CLASSIFICATION	0.9999990764694481	WITHOUT_CLASSIFICATION	9.235305518869821E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999569078800925	WITHOUT_CLASSIFICATION	4.309211990746606E-5	DEFECT
// If eCore, return the ENamedElement name //	WITHOUT_CLASSIFICATION	0.9999959054619167	WITHOUT_CLASSIFICATION	4.094538083307647E-6	DEFECT
// If there is an adapter of the correct type, return the item label //	WITHOUT_CLASSIFICATION	0.9999906998569578	WITHOUT_CLASSIFICATION	9.300143042177465E-6	DEFECT
// If eCore, set the ENamedElement name //	WITHOUT_CLASSIFICATION	0.9999970981419734	WITHOUT_CLASSIFICATION	2.9018580266092125E-6	DEFECT
// This turns a featureless set command into an operation to create a mapping. // This is invoked during drag and drop. //	WITHOUT_CLASSIFICATION	0.9998772271579036	WITHOUT_CLASSIFICATION	1.2277284209640739E-4	DEFECT
// If this is a RemoveCommand for a root input object, direct it to the MappingRoot. //	WITHOUT_CLASSIFICATION	0.9999958775639392	WITHOUT_CLASSIFICATION	4.122436060845924E-6	DEFECT
// If the owner and the copy are of the same type, we can proceed with the command, i.e. no override. // If not, we will skip this command by returning a do-nothing override. //	WITHOUT_CLASSIFICATION	0.9999915350078432	WITHOUT_CLASSIFICATION	8.464992156845556E-6	DEFECT
// remove all sourceSeparator characters	WITHOUT_CLASSIFICATION	0.9999981747445519	WITHOUT_CLASSIFICATION	1.8252554480755088E-6	DEFECT
// sourceSeparator == LABEL_NO_SEPARATOR	WITHOUT_CLASSIFICATION	0.999997535263477	WITHOUT_CLASSIFICATION	2.4647365229457093E-6	DEFECT
// add a targetSeparator in front of every upper case character	WITHOUT_CLASSIFICATION	0.9999574476297027	WITHOUT_CLASSIFICATION	4.255237029725089E-5	DEFECT
// type-mappings	WITHOUT_CLASSIFICATION	0.9999954734596895	WITHOUT_CLASSIFICATION	4.526540310521912E-6	DEFECT
// top-label-separator	WITHOUT_CLASSIFICATION	0.9999977121034822	WITHOUT_CLASSIFICATION	2.2878965179005736E-6	DEFECT
// bottom-label-separator	WITHOUT_CLASSIFICATION	0.9999983146663456	WITHOUT_CLASSIFICATION	1.685333654370065E-6	DEFECT
// top-label-case	WITHOUT_CLASSIFICATION	0.9999931636776076	WITHOUT_CLASSIFICATION	6.836322392388015E-6	DEFECT
// bottom-label-case	WITHOUT_CLASSIFICATION	0.9999929318366827	WITHOUT_CLASSIFICATION	7.068163317204584E-6	DEFECT
// top-label-forms	WITHOUT_CLASSIFICATION	0.999997566884043	WITHOUT_CLASSIFICATION	2.433115957080665E-6	DEFECT
// bottom-label-forms	WITHOUT_CLASSIFICATION	0.999996421994182	WITHOUT_CLASSIFICATION	3.578005817864776E-6	DEFECT
//if // for // for	WITHOUT_CLASSIFICATION	0.9999209568498688	WITHOUT_CLASSIFICATION	7.904315013113723E-5	DEFECT
/*     * The type string must be qualified by its package uri, e.g. DTD.xmi:DTDElement.     * The package uri is used to look up the package by calling RefRegister.getPackage(uri).     */	WITHOUT_CLASSIFICATION	0.9999995964840366	WITHOUT_CLASSIFICATION	4.035159633600668E-7	DEFECT
//Ecore2EcorePackage	WITHOUT_CLASSIFICATION	0.9989920758538096	WITHOUT_CLASSIFICATION	0.0010079241461904435	DEFECT
// Ecore2EcoreMappingRoot	WITHOUT_CLASSIFICATION	0.9999580376906996	WITHOUT_CLASSIFICATION	4.1962309300296844E-5	DEFECT
//Ecore2EcoreFactory	WITHOUT_CLASSIFICATION	0.9989373275407416	WITHOUT_CLASSIFICATION	0.001062672459258461	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999976220319823	WITHOUT_CLASSIFICATION	2.3779680177053606E-6	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999976220319823	WITHOUT_CLASSIFICATION	2.3779680177053606E-6	DEFECT
// Obtain other dependent packages	WITHOUT_CLASSIFICATION	0.9999916577067488	WITHOUT_CLASSIFICATION	8.342293251226973E-6	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.9999995068117644	WITHOUT_CLASSIFICATION	4.93188235584206E-7	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.999998067601732	WITHOUT_CLASSIFICATION	1.932398267952577E-6	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.9999893124183389	WITHOUT_CLASSIFICATION	1.0687581661237084E-5	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.mapping.ecore2ecore.Ecore2EcoreMapping#getInputEPackage()   */	WITHOUT_CLASSIFICATION	0.99999629419112	WITHOUT_CLASSIFICATION	3.7058088798766375E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.mapping.ecore2ecore.Ecore2EcoreMapping#getOutputEPackage()   */	WITHOUT_CLASSIFICATION	0.9999941441601676	WITHOUT_CLASSIFICATION	5.855839832388087E-6	DEFECT
// Initialize classes and features; add operations and parameters	WITHOUT_CLASSIFICATION	0.9999987329766953	WITHOUT_CLASSIFICATION	1.2670233046854628E-6	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.9999954956836732	WITHOUT_CLASSIFICATION	4.5043163268436935E-6	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9999994233633256	WITHOUT_CLASSIFICATION	5.766366744737383E-7	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9996230761711952	WITHOUT_CLASSIFICATION	3.7692382880483274E-4	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9999994233633256	WITHOUT_CLASSIFICATION	5.766366744737383E-7	DEFECT
/**   * The switch that delegates to the <code>createXXX</code> methods.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9999957123146821	WITHOUT_CLASSIFICATION	4.28768531794884E-6	DEFECT
// Open an editor on the new file. //	WITHOUT_CLASSIFICATION	0.9999820839866508	WITHOUT_CLASSIFICATION	1.7916013349228714E-5	DEFECT
// Remember the file. //	WITHOUT_CLASSIFICATION	0.9999958422235004	WITHOUT_CLASSIFICATION	4.157776499748302E-6	DEFECT
// Do the work within an operation. //	WITHOUT_CLASSIFICATION	0.9997498920434299	WITHOUT_CLASSIFICATION	2.5010795657017464E-4	DEFECT
// Create a resource set //	WITHOUT_CLASSIFICATION	0.99999825620354	WITHOUT_CLASSIFICATION	1.7437964600228314E-6	DEFECT
// Get the URI of the model file. //	WITHOUT_CLASSIFICATION	0.9999714088700075	WITHOUT_CLASSIFICATION	2.8591129992448095E-5	DEFECT
// Create a resource for this file. //	WITHOUT_CLASSIFICATION	0.9999992725426616	WITHOUT_CLASSIFICATION	7.274573384260692E-7	DEFECT
// Add the initial model object to the contents. //	WITHOUT_CLASSIFICATION	0.99999768211151	WITHOUT_CLASSIFICATION	2.3178884900698068E-6	DEFECT
// Save the contents of the resource to the file system. //	WITHOUT_CLASSIFICATION	0.9999556011214528	WITHOUT_CLASSIFICATION	4.43988785471708E-5	DEFECT
// Select the new file resource in the current view. //	WITHOUT_CLASSIFICATION	0.9999874123868115	WITHOUT_CLASSIFICATION	1.2587613188444231E-5	DEFECT
// Determine the values to be added and add them at the right position. //	WITHOUT_CLASSIFICATION	0.9999994448334066	WITHOUT_CLASSIFICATION	5.551665933408982E-7	DEFECT
//Ecore2EcorePackageImpl	WITHOUT_CLASSIFICATION	0.9995822783950616	WITHOUT_CLASSIFICATION	4.1772160493830753E-4	DEFECT
//Ecore2EcoreFactoryImpl	WITHOUT_CLASSIFICATION	0.9994812487929184	WITHOUT_CLASSIFICATION	5.187512070815465E-4	DEFECT
//Ecore2EcoreMappingRootImpl	WITHOUT_CLASSIFICATION	0.9998464947432344	WITHOUT_CLASSIFICATION	1.535052567657091E-4	DEFECT
//Ecore2EcoreResourceFactoryImpl	WITHOUT_CLASSIFICATION	0.9998782889382152	WITHOUT_CLASSIFICATION	1.21711061784798E-4	DEFECT
//Ecore2EcoreResourceFactoryImpl	WITHOUT_CLASSIFICATION	0.9998782889382152	WITHOUT_CLASSIFICATION	1.21711061784798E-4	DEFECT
//Ecore2EcoreAdapterFactory	WITHOUT_CLASSIFICATION	0.9991446170549472	WITHOUT_CLASSIFICATION	8.553829450529001E-4	DEFECT
//Ecore2EcoreSwitch	WITHOUT_CLASSIFICATION	0.9995324745775197	WITHOUT_CLASSIFICATION	4.675254224802627E-4	DEFECT
//$NON-NLS-1$ 	WITHOUT_CLASSIFICATION	0.9996276011244686	WITHOUT_CLASSIFICATION	3.7239887553137263E-4	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9996827877936082	WITHOUT_CLASSIFICATION	3.172122063917369E-4	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9996827877936082	WITHOUT_CLASSIFICATION	3.172122063917369E-4	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9996827877936082	WITHOUT_CLASSIFICATION	3.172122063917369E-4	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9995163037411842	WITHOUT_CLASSIFICATION	4.836962588157568E-4	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.9999933771872096	WITHOUT_CLASSIFICATION	6.622812790395057E-6	DEFECT
// Initialize simple dependencies	WITHOUT_CLASSIFICATION	0.9999991823946333	WITHOUT_CLASSIFICATION	8.176053668014476E-7	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.9999990592002509	WITHOUT_CLASSIFICATION	9.407997490422834E-7	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.99999732803041	WITHOUT_CLASSIFICATION	2.671969590056063E-6	DEFECT
// Mark meta-data to indicate it can't be changed	WITHOUT_CLASSIFICATION	0.9999930471702011	WITHOUT_CLASSIFICATION	6.95282979884545E-6	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.ui.IActionDelegate#run(org.eclipse.jface.action.IAction)   */	WITHOUT_CLASSIFICATION	0.9999995033386008	WITHOUT_CLASSIFICATION	4.966613992763874E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999569078800925	WITHOUT_CLASSIFICATION	4.309211990746606E-5	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.9999982092566939	WITHOUT_CLASSIFICATION	1.7907433059583226E-6	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.9999902001708177	WITHOUT_CLASSIFICATION	9.799829182323957E-6	DEFECT
// Obtain other dependent packages	WITHOUT_CLASSIFICATION	0.9999916577067488	WITHOUT_CLASSIFICATION	8.342293251226973E-6	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.9999995068117644	WITHOUT_CLASSIFICATION	4.93188235584206E-7	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.999998067601732	WITHOUT_CLASSIFICATION	1.932398267952577E-6	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.9999893124183389	WITHOUT_CLASSIFICATION	1.0687581661237084E-5	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.9999954956836732	WITHOUT_CLASSIFICATION	4.5043163268436935E-6	DEFECT
// Remember the file. //	WITHOUT_CLASSIFICATION	0.9999958422235004	WITHOUT_CLASSIFICATION	4.157776499748302E-6	DEFECT
// Do the work within an operation. //	WITHOUT_CLASSIFICATION	0.9997498920434299	WITHOUT_CLASSIFICATION	2.5010795657017464E-4	DEFECT
// Create a resource set //	WITHOUT_CLASSIFICATION	0.99999825620354	WITHOUT_CLASSIFICATION	1.7437964600228314E-6	DEFECT
// Create a page, set the title, and the initial model file name. //	WITHOUT_CLASSIFICATION	0.9999999240006356	WITHOUT_CLASSIFICATION	7.59993643712375E-8	DEFECT
// Try and get the resource selection to determine a current directory for the file dialog. //	WITHOUT_CLASSIFICATION	0.9999498920206963	WITHOUT_CLASSIFICATION	5.010797930369405E-5	DEFECT
// Get the resource... //	WITHOUT_CLASSIFICATION	0.999967127705132	WITHOUT_CLASSIFICATION	3.2872294867953174E-5	DEFECT
// Get the resource parent, if its a file. //	WITHOUT_CLASSIFICATION	0.9999991776150141	WITHOUT_CLASSIFICATION	8.223849858732451E-7	DEFECT
// This gives us a directory... //	WITHOUT_CLASSIFICATION	0.9999210499651053	WITHOUT_CLASSIFICATION	7.895003489460741E-5	DEFECT
// Set this for the container. //	WITHOUT_CLASSIFICATION	0.9999826919248416	WITHOUT_CLASSIFICATION	1.73080751584136E-5	DEFECT
// Make up a unique new name here. //	WITHOUT_CLASSIFICATION	0.9999945232677859	WITHOUT_CLASSIFICATION	5.476732214016099E-6	DEFECT
// For a many-to-many association, the command can only be undoable if the value or owner is last in its // respective list, since the undo will include an inverse add.  So, if the value is last, but the owner is // not, we create an undoable compound command that removes from the opposite end and then inserts the new // value. //	WITHOUT_CLASSIFICATION	0.9999923476304297	WITHOUT_CLASSIFICATION	7.652369570266351E-6	DEFECT
//Ecore2XMLPackage	WITHOUT_CLASSIFICATION	0.9971328581415225	WITHOUT_CLASSIFICATION	0.0028671418584775886	DEFECT
//Ecore2XMLFactory	WITHOUT_CLASSIFICATION	0.9969621018351509	WITHOUT_CLASSIFICATION	0.003037898164849137	DEFECT
// XMLInfo	WITHOUT_CLASSIFICATION	0.998409055650532	WITHOUT_CLASSIFICATION	0.0015909443494680861	DEFECT
// XMLMap	WITHOUT_CLASSIFICATION	0.9996304659032434	WITHOUT_CLASSIFICATION	3.695340967565411E-4	DEFECT
// missing attribute	WITHOUT_CLASSIFICATION	0.9999925240539214	WITHOUT_CLASSIFICATION	7.475946078704611E-6	DEFECT
// invalid element	WITHOUT_CLASSIFICATION	0.9999975252729238	WITHOUT_CLASSIFICATION	2.474727076135005E-6	DEFECT
//XMLMapImpl	WITHOUT_CLASSIFICATION	0.9992788108367334	WITHOUT_CLASSIFICATION	7.211891632666333E-4	DEFECT
//ENamedElementToXMLInfoMapEntryImpl	WITHOUT_CLASSIFICATION	0.9996226081360787	WITHOUT_CLASSIFICATION	3.7739186392124393E-4	DEFECT
//Ecore2XMLFactoryImpl	WITHOUT_CLASSIFICATION	0.9985155257451184	WITHOUT_CLASSIFICATION	0.0014844742548816784	DEFECT
//Ecore2XMLPackageImpl	WITHOUT_CLASSIFICATION	0.9988104524247786	WITHOUT_CLASSIFICATION	0.0011895475752213562	DEFECT
//XMLInfoImpl	WITHOUT_CLASSIFICATION	0.9978029652708222	WITHOUT_CLASSIFICATION	0.0021970347291777556	DEFECT
// Switch to the new selection provider. //	WITHOUT_CLASSIFICATION	0.99998711077656	WITHOUT_CLASSIFICATION	1.2889223439957962E-5	DEFECT
// Fake a selection changed event to update the menus. //	WITHOUT_CLASSIFICATION	0.9999946891383886	WITHOUT_CLASSIFICATION	5.31086161140091E-6	DEFECT
// Open an editor on the new file. //	WITHOUT_CLASSIFICATION	0.9999820839866508	WITHOUT_CLASSIFICATION	1.7916013349228714E-5	DEFECT
// Add the initial model object to the contents. //	WITHOUT_CLASSIFICATION	0.99999768211151	WITHOUT_CLASSIFICATION	2.3178884900698068E-6	DEFECT
// Save the contents of the resource to the file system. //	WITHOUT_CLASSIFICATION	0.9999556011214528	WITHOUT_CLASSIFICATION	4.43988785471708E-5	DEFECT
// Select the new file resource in the current view. //	WITHOUT_CLASSIFICATION	0.9999874123868115	WITHOUT_CLASSIFICATION	1.2587613188444231E-5	DEFECT
// Try and get the resource selection to determine a current directory for the file dialog. //	WITHOUT_CLASSIFICATION	0.9999498920206963	WITHOUT_CLASSIFICATION	5.010797930369405E-5	DEFECT
// Get the resource... //	WITHOUT_CLASSIFICATION	0.999967127705132	WITHOUT_CLASSIFICATION	3.2872294867953174E-5	DEFECT
// Get the resource parent, if its a file. //	WITHOUT_CLASSIFICATION	0.9999991776150141	WITHOUT_CLASSIFICATION	8.223849858732451E-7	DEFECT
// This gives us a directory... //	WITHOUT_CLASSIFICATION	0.9999210499651053	WITHOUT_CLASSIFICATION	7.895003489460741E-5	DEFECT
// Set this for the container. //	WITHOUT_CLASSIFICATION	0.9999826919248416	WITHOUT_CLASSIFICATION	1.73080751584136E-5	DEFECT
// Force an update because Eclipse hides empty menus now. //	WITHOUT_CLASSIFICATION	0.9999983158064583	WITHOUT_CLASSIFICATION	1.6841935416146858E-6	DEFECT
// Remove any menu items for old selection. //	WITHOUT_CLASSIFICATION	0.9999966780967658	WITHOUT_CLASSIFICATION	3.3219032342651454E-6	DEFECT
// Query the new selection for appropriate new child/sibling descriptors //	WITHOUT_CLASSIFICATION	0.9999505139729046	WITHOUT_CLASSIFICATION	4.948602709555349E-5	DEFECT
// Initialize all the fields from the command parameter. //	WITHOUT_CLASSIFICATION	0.999999386613119	WITHOUT_CLASSIFICATION	6.133868809157505E-7	DEFECT
// Initialize all the fields from the command parameter. //	WITHOUT_CLASSIFICATION	0.999999386613119	WITHOUT_CLASSIFICATION	6.133868809157505E-7	DEFECT
// Initialize all the fields from the command parameter. //	WITHOUT_CLASSIFICATION	0.999999386613119	WITHOUT_CLASSIFICATION	6.133868809157505E-7	DEFECT
// Initialize all the fields from the command parameter. //	WITHOUT_CLASSIFICATION	0.999999386613119	WITHOUT_CLASSIFICATION	6.133868809157505E-7	DEFECT
// Initialize all the fields from the command parameter. //	WITHOUT_CLASSIFICATION	0.999999386613119	WITHOUT_CLASSIFICATION	6.133868809157505E-7	DEFECT
// If the attribute is set, record it's old value. //	WITHOUT_CLASSIFICATION	0.9999977988850401	WITHOUT_CLASSIFICATION	2.2011149598886105E-6	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9999994067682163	WITHOUT_CLASSIFICATION	5.932317836988323E-7	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9999994067682163	WITHOUT_CLASSIFICATION	5.932317836988323E-7	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9999994067682163	WITHOUT_CLASSIFICATION	5.932317836988323E-7	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9999994067682163	WITHOUT_CLASSIFICATION	5.932317836988323E-7	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9999994067682163	WITHOUT_CLASSIFICATION	5.932317836988323E-7	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9999994067682163	WITHOUT_CLASSIFICATION	5.932317836988323E-7	DEFECT
// Create the copy //	WITHOUT_CLASSIFICATION	0.9999863178584207	WITHOUT_CLASSIFICATION	1.3682141579234375E-5	DEFECT
// EATM Leave this disabled for now. //	WITHOUT_CLASSIFICATION	0.9999766748859689	WITHOUT_CLASSIFICATION	2.332511403109395E-5	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999960024026834	WITHOUT_CLASSIFICATION	3.997597316676026E-6	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999960024026834	WITHOUT_CLASSIFICATION	3.997597316676026E-6	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999960024026834	WITHOUT_CLASSIFICATION	3.997597316676026E-6	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999960024026834	WITHOUT_CLASSIFICATION	3.997597316676026E-6	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999960024026834	WITHOUT_CLASSIFICATION	3.997597316676026E-6	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999960024026834	WITHOUT_CLASSIFICATION	3.997597316676026E-6	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999960024026834	WITHOUT_CLASSIFICATION	3.997597316676026E-6	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999960024026834	WITHOUT_CLASSIFICATION	3.997597316676026E-6	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999976220319823	WITHOUT_CLASSIFICATION	2.3779680177053606E-6	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999976220319823	WITHOUT_CLASSIFICATION	2.3779680177053606E-6	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999976220319823	WITHOUT_CLASSIFICATION	2.3779680177053606E-6	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999976220319823	WITHOUT_CLASSIFICATION	2.3779680177053606E-6	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999976220319823	WITHOUT_CLASSIFICATION	2.3779680177053606E-6	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999976220319823	WITHOUT_CLASSIFICATION	2.3779680177053606E-6	DEFECT
// Set the range so that we re-check when we get into the other half. //	WITHOUT_CLASSIFICATION	0.999927925993103	WITHOUT_CLASSIFICATION	7.207400689691891E-5	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999933122126892	WITHOUT_CLASSIFICATION	6.687787310920847E-6	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999933122126892	WITHOUT_CLASSIFICATION	6.687787310920847E-6	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999933122126892	WITHOUT_CLASSIFICATION	6.687787310920847E-6	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999933122126892	WITHOUT_CLASSIFICATION	6.687787310920847E-6	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999933122126892	WITHOUT_CLASSIFICATION	6.687787310920847E-6	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999933122126892	WITHOUT_CLASSIFICATION	6.687787310920847E-6	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999933122126892	WITHOUT_CLASSIFICATION	6.687787310920847E-6	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999933122126892	WITHOUT_CLASSIFICATION	6.687787310920847E-6	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999933122126892	WITHOUT_CLASSIFICATION	6.687787310920847E-6	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999933122126892	WITHOUT_CLASSIFICATION	6.687787310920847E-6	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999933122126892	WITHOUT_CLASSIFICATION	6.687787310920847E-6	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999933122126892	WITHOUT_CLASSIFICATION	6.687787310920847E-6	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999933122126892	WITHOUT_CLASSIFICATION	6.687787310920847E-6	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999933122126892	WITHOUT_CLASSIFICATION	6.687787310920847E-6	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999933122126892	WITHOUT_CLASSIFICATION	6.687787310920847E-6	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999933122126892	WITHOUT_CLASSIFICATION	6.687787310920847E-6	DEFECT
// If the location indicates after, add one more. //	WITHOUT_CLASSIFICATION	0.9999921680259898	WITHOUT_CLASSIFICATION	7.831974010198425E-6	DEFECT
// Empty extension to limit the effect of suppressing the deprecation warning.	WITHOUT_CLASSIFICATION	0.9999804352773098	WITHOUT_CLASSIFICATION	1.9564722690184596E-5	DEFECT
// Empty extension to limit the effect of suppressing the deprecation warning.	WITHOUT_CLASSIFICATION	0.9999804352773098	WITHOUT_CLASSIFICATION	1.9564722690184596E-5	DEFECT
// Empty extension to limit the effect of suppressing the deprecation warning.	WITHOUT_CLASSIFICATION	0.9999804352773098	WITHOUT_CLASSIFICATION	1.9564722690184596E-5	DEFECT
// Try again. //	WITHOUT_CLASSIFICATION	0.9998060186375353	WITHOUT_CLASSIFICATION	1.9398136246484582E-4	DEFECT
// This is the name of the model. //	WITHOUT_CLASSIFICATION	0.9998477929256779	WITHOUT_CLASSIFICATION	1.5220707432205794E-4	DEFECT
// Create move commands for all the objects in the collection. //	WITHOUT_CLASSIFICATION	0.9999969881028746	WITHOUT_CLASSIFICATION	3.0118971254099567E-6	DEFECT
// Apply a redirection pattern, if specified. //	WITHOUT_CLASSIFICATION	0.9999839030219039	WITHOUT_CLASSIFICATION	1.6096978096168663E-5	DEFECT
// Apply a redirection pattern, if specified. //	WITHOUT_CLASSIFICATION	0.9999839030219039	WITHOUT_CLASSIFICATION	1.6096978096168663E-5	DEFECT
// Thread.dumpStack();	WITHOUT_CLASSIFICATION	0.9999578695229205	WITHOUT_CLASSIFICATION	4.2130477079457175E-5	DEFECT
// Apply a redirection pattern, if specified. //	WITHOUT_CLASSIFICATION	0.9999839030219039	WITHOUT_CLASSIFICATION	1.6096978096168663E-5	DEFECT
// Simply remove the object from the owner list. //	WITHOUT_CLASSIFICATION	0.9999933096332306	WITHOUT_CLASSIFICATION	6.690366769367839E-6	DEFECT
// Insert the collection at the right place. //	WITHOUT_CLASSIFICATION	0.9999665508672791	WITHOUT_CLASSIFICATION	3.3449132720821825E-5	DEFECT
// We'd like the collection of replacements selected after this replace completes. //	WITHOUT_CLASSIFICATION	0.9999973193285487	WITHOUT_CLASSIFICATION	2.6806714513083097E-6	DEFECT
/*   * All Eclipse-dependent operations are delegated to this class. This pattern avoids any runtime failure due to   * missing dependencies in the stand-alone case.   */	WITHOUT_CLASSIFICATION	0.9990070146392088	WITHOUT_CLASSIFICATION	9.92985360791128E-4	DEFECT
/*   * All Eclipse-dependent operations are delegated to this class. This pattern avoids any runtime failure due to   * missing dependencies in the stand-alone case.   */	WITHOUT_CLASSIFICATION	0.9990070146392088	WITHOUT_CLASSIFICATION	9.92985360791128E-4	DEFECT
// Initialization is deferred until adapters are attached to all the objects of interest and we're // about to ask them to generate. //	WITHOUT_CLASSIFICATION	0.9999856169170157	WITHOUT_CLASSIFICATION	1.4383082984328964E-5	DEFECT
// Invoke generator adapters for each object. //	WITHOUT_CLASSIFICATION	0.9999984581167262	WITHOUT_CLASSIFICATION	1.541883273866756E-6	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.9998283283605699	WITHOUT_CLASSIFICATION	1.7167163943015333E-4	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.9998283283605699	WITHOUT_CLASSIFICATION	1.7167163943015333E-4	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.9998283283605699	WITHOUT_CLASSIFICATION	1.7167163943015333E-4	DEFECT
// Iterate over the owner list twice, first matching objects from the collection by identity (==), then matching // objects by value equality (.equals()). The positions of matched objects in the owner list are recorded, and // the objects are stored in the same order. The lists are then merged to form a final, in-order list of objects // and corresponding indices in ownerList. This is very important for undo to interpret the indices correctly. // Also, this yields exactly one object removed for each object in the collection, with preference given to // identity over value equality. //	WITHOUT_CLASSIFICATION	0.9999601713056611	WITHOUT_CLASSIFICATION	3.982869433883759E-5	DEFECT
// callers that plan to use this name without appending a suffix should call f.safeName(f.getName()) to make sure its not a keyword // this is a safe guaranteed uncapitalized form of the name // the safe name and cast to EObject, if necessary.	WITHOUT_CLASSIFICATION	0.999975285454844	WITHOUT_CLASSIFICATION	2.4714545155898703E-5	DEFECT
// Add any remaining object-index pairs from either set. //	WITHOUT_CLASSIFICATION	0.9999717143192578	WITHOUT_CLASSIFICATION	2.8285680742151852E-5	DEFECT
// For CreateChildCommand, we will find the owner by calling EditingDomain.getParent() on the first selected object	WITHOUT_CLASSIFICATION	0.9999972297035957	WITHOUT_CLASSIFICATION	2.770296404238447E-6	DEFECT
// This guards the switch. //	WITHOUT_CLASSIFICATION	0.9998884087567418	WITHOUT_CLASSIFICATION	1.1159124325833802E-4	DEFECT
// A set command without a feature sets the value of this wrapper, hence replacing it with a new wrapper. So, // we need a special command wrapper that selects this new wrapper as the affected object. //	WITHOUT_CLASSIFICATION	0.9999863411932726	WITHOUT_CLASSIFICATION	1.3658806727350209E-5	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999743975518987	WITHOUT_CLASSIFICATION	2.5602448101312153E-5	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999743975518987	WITHOUT_CLASSIFICATION	2.5602448101312153E-5	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999743975518987	WITHOUT_CLASSIFICATION	2.5602448101312153E-5	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999743975518987	WITHOUT_CLASSIFICATION	2.5602448101312153E-5	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999743975518987	WITHOUT_CLASSIFICATION	2.5602448101312153E-5	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999743975518987	WITHOUT_CLASSIFICATION	2.5602448101312153E-5	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999743975518987	WITHOUT_CLASSIFICATION	2.5602448101312153E-5	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999743975518987	WITHOUT_CLASSIFICATION	2.5602448101312153E-5	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999743975518987	WITHOUT_CLASSIFICATION	2.5602448101312153E-5	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999743975518987	WITHOUT_CLASSIFICATION	2.5602448101312153E-5	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999743975518987	WITHOUT_CLASSIFICATION	2.5602448101312153E-5	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999743975518987	WITHOUT_CLASSIFICATION	2.5602448101312153E-5	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999743975518987	WITHOUT_CLASSIFICATION	2.5602448101312153E-5	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999743975518987	WITHOUT_CLASSIFICATION	2.5602448101312153E-5	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999743975518987	WITHOUT_CLASSIFICATION	2.5602448101312153E-5	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999743975518987	WITHOUT_CLASSIFICATION	2.5602448101312153E-5	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999743975518987	WITHOUT_CLASSIFICATION	2.5602448101312153E-5	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$	WITHOUT_CLASSIFICATION	0.9997231555131084	WITHOUT_CLASSIFICATION	2.768444868915385E-4	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999743975518987	WITHOUT_CLASSIFICATION	2.5602448101312153E-5	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999953079813295	WITHOUT_CLASSIFICATION	4.692018670464854E-6	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999953079813295	WITHOUT_CLASSIFICATION	4.692018670464854E-6	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$	WITHOUT_CLASSIFICATION	0.9997231555131084	WITHOUT_CLASSIFICATION	2.768444868915385E-4	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9995163037411842	WITHOUT_CLASSIFICATION	4.836962588157568E-4	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9996827877936082	WITHOUT_CLASSIFICATION	3.172122063917369E-4	DEFECT
// Create a page, set the title, and the initial model file name. // //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.999999930196605	WITHOUT_CLASSIFICATION	6.980339502035824E-8	DEFECT
// Prepare for CreateChild item addition or removal. // //$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999917736250907	WITHOUT_CLASSIFICATION	8.226374909234471E-6	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9995929231794971	WITHOUT_CLASSIFICATION	4.070768205029192E-4	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999953079813295	WITHOUT_CLASSIFICATION	4.692018670464854E-6	DEFECT
// Make up a unique new name here. // //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999939863465087	WITHOUT_CLASSIFICATION	6.013653491272633E-6	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9995163037411842	WITHOUT_CLASSIFICATION	4.836962588157568E-4	DEFECT
// Prepare for CreateSibling item addition or removal. // //$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999876006492416	WITHOUT_CLASSIFICATION	1.239935075836985E-5	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999953079813295	WITHOUT_CLASSIFICATION	4.692018670464854E-6	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999953079813295	WITHOUT_CLASSIFICATION	4.692018670464854E-6	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999953079813295	WITHOUT_CLASSIFICATION	4.692018670464854E-6	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999851447687454	WITHOUT_CLASSIFICATION	1.4855231254701075E-5	DEFECT
// Either the IEditingDomainItemProvider or ITreeItemContentProvider item provider interface can give us // the children. //	WITHOUT_CLASSIFICATION	0.9999849247374152	WITHOUT_CLASSIFICATION	1.5075262584910906E-5	DEFECT
// These will be the children belonging to this feature. //	WITHOUT_CLASSIFICATION	0.9985026807431244	WITHOUT_CLASSIFICATION	0.0014973192568755675	DEFECT
// These will be the children belonging to this feature. //	WITHOUT_CLASSIFICATION	0.9985026807431244	WITHOUT_CLASSIFICATION	0.0014973192568755675	DEFECT
// The try/catch provides backwards compatibility with the old resource // key, "_UI_CreateChild_label", and should be removed at the next // release, when we can expect users to regenerate. //	WITHOUT_CLASSIFICATION	0.9999992239370495	WITHOUT_CLASSIFICATION	7.760629503684526E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999139943642469	WITHOUT_CLASSIFICATION	8.60056357530864E-5	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.ecore.util.ExtendedMetaData#getName(org.eclipse.emf.ecore.EClassifier)   */	WITHOUT_CLASSIFICATION	0.9999995053923085	WITHOUT_CLASSIFICATION	4.94607691488154E-7	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.ecore.util.ExtendedMetaData#getName(org.eclipse.emf.ecore.EStructuralFeature)   */	WITHOUT_CLASSIFICATION	0.9999996827632655	WITHOUT_CLASSIFICATION	3.17236734541205E-7	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.ecore.util.ExtendedMetaData#getNamespace(org.eclipse.emf.ecore.EPackage)   */	WITHOUT_CLASSIFICATION	0.9999992532230474	WITHOUT_CLASSIFICATION	7.467769526747122E-7	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.ecore.util.ExtendedMetaData#getType(org.eclipse.emf.ecore.EPackage,   *      java.lang.String)   */	WITHOUT_CLASSIFICATION	0.9999987194500971	WITHOUT_CLASSIFICATION	1.2805499029636163E-6	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.ecore.util.ExtendedMetaData#getFeatureKind(org.eclipse.emf.ecore.EStructuralFeature)   */	WITHOUT_CLASSIFICATION	0.9999995101692214	WITHOUT_CLASSIFICATION	4.898307786489079E-7	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.ecore.util.BasicExtendedMetaData#isFeatureKindSpecific()   */	WITHOUT_CLASSIFICATION	0.9999990592990177	WITHOUT_CLASSIFICATION	9.407009823155542E-7	DEFECT
/** * <!-- begin-user-doc --> * The <b>Adapter Factory</b> for the model. * It provides an adapter <code>createXXX</code> method for each class of the model. * <!-- end-user-doc --> * @see org.eclipse.emf.mapping.ecore2xml.Ecore2XMLPackage * @generated */	WITHOUT_CLASSIFICATION	0.999988686914183	WITHOUT_CLASSIFICATION	1.1313085816993424E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999139943642469	WITHOUT_CLASSIFICATION	8.60056357530864E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999139943642469	WITHOUT_CLASSIFICATION	8.60056357530864E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999139943642469	WITHOUT_CLASSIFICATION	8.60056357530864E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999139943642469	WITHOUT_CLASSIFICATION	8.60056357530864E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999139943642469	WITHOUT_CLASSIFICATION	8.60056357530864E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999139943642469	WITHOUT_CLASSIFICATION	8.60056357530864E-5	DEFECT
/** * <!-- begin-user-doc --> * The <b>Switch</b> for the model's inheritance hierarchy. * It supports the call {@link #doSwitch(EObject) doSwitch(object)} * to invoke the <code>caseXXX</code> method for each class of the model, * starting with the actual class of the object * and proceeding up the inheritance hierarchy * until a non-null result is returned, * which is the result of the switch. * <!-- end-user-doc --> * @see org.eclipse.emf.mapping.ecore2xml.Ecore2XMLPackage * @generated */	WITHOUT_CLASSIFICATION	0.9999985546357462	WITHOUT_CLASSIFICATION	1.445364253935051E-6	DEFECT
/** * <!-- begin-user-doc --> * The <b>Adapter Factory</b> for the model. * It provides an adapter <code>createXXX</code> method for each class of the model. * <!-- end-user-doc --> * @see org.eclipse.emf.mapping.MappingPackage * @generated */	WITHOUT_CLASSIFICATION	0.9999932299748948	WITHOUT_CLASSIFICATION	6.77002510517424E-6	DEFECT
/** * <!-- begin-user-doc --> * The <b>Switch</b> for the model's inheritance hierarchy. * It supports the call {@link #doSwitch(EObject) doSwitch(object)}  * to invoke the <code>caseXXX</code> method for each class of the model, * starting with the actual class of the object  * and proceeding up the inheritance hierarchy * until a non-null result is returned,  * which is the result of the switch. * <!-- end-user-doc --> * @see org.eclipse.emf.mapping.MappingPackage * @generated */	WITHOUT_CLASSIFICATION	0.9999989164800498	WITHOUT_CLASSIFICATION	1.0835199501676988E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.XMLResource#load(org.w3c.dom.Node, java.util.Map)   */	WITHOUT_CLASSIFICATION	0.9999990354713193	WITHOUT_CLASSIFICATION	9.645286806940284E-7	DEFECT
/** * <!-- begin-user-doc --> * The <b>Switch</b> for the model's inheritance hierarchy. * It supports the call {@link #doSwitch(EObject) doSwitch(object)}  * to invoke the <code>caseXXX</code> method for each class of the model, * starting with the actual class of the object  * and proceeding up the inheritance hierarchy * until a non-null result is returned,  * which is the result of the switch. * <!-- end-user-doc --> * @see org.eclipse.emf.codegen.ecore.genmodel.GenModelPackage * @generated */	WITHOUT_CLASSIFICATION	0.9999985990280409	WITHOUT_CLASSIFICATION	1.4009719591556667E-6	DEFECT
/** * <!-- begin-user-doc --> * The <b>Adapter Factory</b> for the model. * It provides an adapter <code>createXXX</code> method for each class of the model. * <!-- end-user-doc --> * @see org.eclipse.emf.codegen.ecore.genmodel.GenModelPackage * @generated */	WITHOUT_CLASSIFICATION	0.9999921298954978	WITHOUT_CLASSIFICATION	7.870104502146866E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode#insertSibling(org.eclipse.emf.codegen.merge.java.facade.JNode, org.eclipse.emf.codegen.merge.java.facade.JNode, boolean)   */	WITHOUT_CLASSIFICATION	0.9999998369068744	WITHOUT_CLASSIFICATION	1.630931254993135E-7	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJAbstractType#insertSibling(org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode, org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode, boolean)   */	WITHOUT_CLASSIFICATION	0.9999998691613451	WITHOUT_CLASSIFICATION	1.308386549664007E-7	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJAbstractType#addChild(org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode)   */	WITHOUT_CLASSIFICATION	0.9999996421298349	WITHOUT_CLASSIFICATION	3.5787016496940494E-7	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJAbstractType#remove(org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode)   */	WITHOUT_CLASSIFICATION	0.9999995198296803	WITHOUT_CLASSIFICATION	4.801703197225096E-7	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJAbstractType#getChildren()   */	WITHOUT_CLASSIFICATION	0.9999994916272812	WITHOUT_CLASSIFICATION	5.083727188316834E-7	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.AbstractJNode#computeQualifiedName()   */	WITHOUT_CLASSIFICATION	0.9999997833426193	WITHOUT_CLASSIFICATION	2.1665738071446245E-7	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode#addChild(org.eclipse.emf.codegen.merge.java.facade.JNode)   */	WITHOUT_CLASSIFICATION	0.999999487067215	WITHOUT_CLASSIFICATION	5.129327849748863E-7	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode#insertSibling(org.eclipse.emf.codegen.merge.java.facade.JNode, org.eclipse.emf.codegen.merge.java.facade.JNode, boolean)   */	WITHOUT_CLASSIFICATION	0.9999998369068744	WITHOUT_CLASSIFICATION	1.630931254993135E-7	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode#remove(org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode)   */	WITHOUT_CLASSIFICATION	0.9999993116544575	WITHOUT_CLASSIFICATION	6.883455425389591E-7	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode#insertSibling(org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode, org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode, boolean)   */	WITHOUT_CLASSIFICATION	0.9999998368782372	WITHOUT_CLASSIFICATION	1.6312176277419532E-7	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode#addChild(org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode)   */	WITHOUT_CLASSIFICATION	0.9999994869771499	WITHOUT_CLASSIFICATION	5.130228500341864E-7	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.AbstractJNode#getChildren()   */	WITHOUT_CLASSIFICATION	0.9999993907203617	WITHOUT_CLASSIFICATION	6.092796383887773E-7	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.FacadeHelper#createCompilationUnit(java.lang.String, java.lang.String)   */	WITHOUT_CLASSIFICATION	0.9999994963710424	WITHOUT_CLASSIFICATION	5.036289576719343E-7	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.FacadeHelper#getContext(org.eclipse.emf.codegen.merge.java.facade.JNode)   */	WITHOUT_CLASSIFICATION	0.9999997248565681	WITHOUT_CLASSIFICATION	2.751434320031052E-7	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.FacadeHelper#doConvertToNode(java.lang.Object)   */	WITHOUT_CLASSIFICATION	0.9999993355086535	WITHOUT_CLASSIFICATION	6.644913465226491E-7	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.FacadeHelper#addChild(org.eclipse.emf.codegen.merge.java.facade.JNode, org.eclipse.emf.codegen.merge.java.facade.JNode)   */	WITHOUT_CLASSIFICATION	0.999999271099364	WITHOUT_CLASSIFICATION	7.289006359615835E-7	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.FacadeHelper#insertSibling(org.eclipse.emf.codegen.merge.java.facade.JNode, org.eclipse.emf.codegen.merge.java.facade.JNode, boolean)   */	WITHOUT_CLASSIFICATION	0.9999997917704766	WITHOUT_CLASSIFICATION	2.0822952330723817E-7	DEFECT
// append [] if it is variable arity parameter (@see JLS3 8.4.1, http://java.sun.com/docs/books/jls/third_edition/html/classes.html#300870)	WITHOUT_CLASSIFICATION	0.9999999683645968	WITHOUT_CLASSIFICATION	3.163540325302762E-8	DEFECT
// append [] if it is variable arity parameter (@see JLS3 8.4.1, http://java.sun.com/docs/books/jls/third_edition/html/classes.html#300870)	WITHOUT_CLASSIFICATION	0.9999999683645968	WITHOUT_CLASSIFICATION	3.163540325302762E-8	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.AbstractJNode#computeQualifiedName()   */	WITHOUT_CLASSIFICATION	0.9999997833426193	WITHOUT_CLASSIFICATION	2.1665738071446245E-7	DEFECT
/* (non-Javadoc)   * @see org.eclipse.ui.IWorkbenchWindowActionDelegate#init(org.eclipse.ui.IWorkbenchWindow)   */	WITHOUT_CLASSIFICATION	0.9999977631597778	WITHOUT_CLASSIFICATION	2.236840222154218E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.ui.IActionDelegate#selectionChanged(org.eclipse.jface.action.IAction, org.eclipse.jface.viewers.ISelection)   */	WITHOUT_CLASSIFICATION	0.9999997773384607	WITHOUT_CLASSIFICATION	2.2266153938067263E-7	DEFECT
/* (non-Javadoc)   * @see org.eclipse.ui.IWorkbenchWindowActionDelegate#dispose()   */	WITHOUT_CLASSIFICATION	0.9999973454202726	WITHOUT_CLASSIFICATION	2.654579727350943E-6	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.jface.window.Window#close()   */	WITHOUT_CLASSIFICATION	0.999992175785085	WITHOUT_CLASSIFICATION	7.824214915057291E-6	DEFECT
/** * <!-- begin-user-doc --> * The <b>Switch</b> for the model's inheritance hierarchy. * It supports the call {@link #doSwitch(EObject) doSwitch(object)} * to invoke the <code>caseXXX</code> method for each class of the model, * starting with the actual class of the object * and proceeding up the inheritance hierarchy * until a non-null result is returned, * which is the result of the switch. * <!-- end-user-doc --> * @see org.eclipse.emf.ecore.change.ChangePackage * @generated */	WITHOUT_CLASSIFICATION	0.999999099653945	WITHOUT_CLASSIFICATION	9.003460551237237E-7	DEFECT
/** * <!-- begin-user-doc --> * The <b>Adapter Factory</b> for the model. * It provides an adapter <code>createXXX</code> method for each class of the model. * <!-- end-user-doc --> * @see org.eclipse.emf.ecore.change.ChangePackage * @generated */	WITHOUT_CLASSIFICATION	0.9999933978831436	WITHOUT_CLASSIFICATION	6.60211685640136E-6	DEFECT
/*    * @see org.eclipse.emf.ecore.EObject#eIsProxy()   */	WITHOUT_CLASSIFICATION	0.999989752575491	WITHOUT_CLASSIFICATION	1.0247424508990313E-5	DEFECT
/*    * @see org.eclipse.emf.ecore.InternalEObject#eSetProxyURI(org.eclipse.emf.common.util.URI)   */	WITHOUT_CLASSIFICATION	0.9999955082687116	WITHOUT_CLASSIFICATION	4.49173128833974E-6	DEFECT
/** * <!-- begin-user-doc --> * The <b>Switch</b> for the model's inheritance hierarchy. * It supports the call {@link #doSwitch(EObject) doSwitch(object)}  * to invoke the <code>caseXXX</code> method for each class of the model, * starting with the actual class of the object  * and proceeding up the inheritance hierarchy * until a non-null result is returned,  * which is the result of the switch. * <!-- end-user-doc --> * @see org.eclipse.emf.ecore.EcorePackage * @generated */	WITHOUT_CLASSIFICATION	0.9999987660186471	WITHOUT_CLASSIFICATION	1.233981352920453E-6	DEFECT
/** * <!-- begin-user-doc --> * The <b>Adapter Factory</b> for the model. * It provides an adapter <code>createXXX</code> method for each class of the model. * <!-- end-user-doc --> * @see org.eclipse.emf.ecore.EcorePackage * @generated */	WITHOUT_CLASSIFICATION	0.9999917941689153	WITHOUT_CLASSIFICATION	8.205831084801978E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.XMLLoad#load(org.eclipse.emf.ecore.xmi.XMLResource, org.w3c.dom.Node, java.util.Map)   */	WITHOUT_CLASSIFICATION	0.9999990636556785	WITHOUT_CLASSIFICATION	9.363443214802883E-7	DEFECT
/** * <!-- begin-user-doc --> * The <b>Adapter Factory</b> for the model. * It provides an adapter <code>createXXX</code> method for each class of the model. * <!-- end-user-doc --> * @see org.eclipse.emf.edit.tree.TreePackage * @generated */	WITHOUT_CLASSIFICATION	0.9999960759576673	WITHOUT_CLASSIFICATION	3.924042332739726E-6	DEFECT
/** * <!-- begin-user-doc --> * The <b>Switch</b> for the model's inheritance hierarchy. * It supports the call {@link #doSwitch(EObject) doSwitch(object)}  * to invoke the <code>caseXXX</code> method for each class of the model, * starting with the actual class of the object  * and proceeding up the inheritance hierarchy * until a non-null result is returned,  * which is the result of the switch. * <!-- end-user-doc --> * @see org.eclipse.emf.edit.tree.TreePackage * @generated */	WITHOUT_CLASSIFICATION	0.9999993370533694	WITHOUT_CLASSIFICATION	6.629466306235307E-7	DEFECT
/*     * (non-Javadoc)     *      * @see org.eclipse.jface.dialogs.Dialog#createButtonsForButtonBar(org.eclipse.swt.widgets.Composite)     */	WITHOUT_CLASSIFICATION	0.9999997955206018	WITHOUT_CLASSIFICATION	2.0447939819203897E-7	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.ui.IActionDelegate#run(org.eclipse.jface.action.IAction)   */	WITHOUT_CLASSIFICATION	0.9999995033386008	WITHOUT_CLASSIFICATION	4.966613992763874E-7	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.ui.IActionDelegate#selectionChanged(org.eclipse.jface.action.IAction,   *      org.eclipse.jface.viewers.ISelection)   */	WITHOUT_CLASSIFICATION	0.9999998197593495	WITHOUT_CLASSIFICATION	1.8024065054533446E-7	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.mapping.MappingRoot#canCreateMapping(java.util.Collection, java.util.Collection, org.eclipse.emf.mapping.Mapping)   */	WITHOUT_CLASSIFICATION	0.9999995635547128	WITHOUT_CLASSIFICATION	4.364452872610179E-7	DEFECT
/** * <!-- begin-user-doc --> * The <b>Adapter Factory</b> for the model. * It provides an adapter <code>createXXX</code> method for each class of the model. * <!-- end-user-doc --> * @see org.eclipse.emf.mapping.ecore2ecore.Ecore2EcorePackage * @generated */	WITHOUT_CLASSIFICATION	0.9999921997233404	WITHOUT_CLASSIFICATION	7.800276659632767E-6	DEFECT
/** * <!-- begin-user-doc --> * The <b>Switch</b> for the model's inheritance hierarchy. * It supports the call {@link #doSwitch(EObject) doSwitch(object)} * to invoke the <code>caseXXX</code> method for each class of the model, * starting with the actual class of the object * and proceeding up the inheritance hierarchy * until a non-null result is returned, * which is the result of the switch. * <!-- end-user-doc --> * @see org.eclipse.emf.mapping.ecore2ecore.Ecore2EcorePackage * @generated */	WITHOUT_CLASSIFICATION	0.9999990205361029	WITHOUT_CLASSIFICATION	9.794638971683663E-7	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.ui.IActionDelegate#selectionChanged(org.eclipse.jface.action.IAction,   *      org.eclipse.jface.viewers.ISelection)   */	WITHOUT_CLASSIFICATION	0.9999998197593495	WITHOUT_CLASSIFICATION	1.8024065054533446E-7	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.XMLResource.XMLMap#add(org.eclipse.emf.ecore.ENamedElement, org.eclipse.emf.ecore.xmi.XMLResource.XMLInfo)   */	WITHOUT_CLASSIFICATION	0.9999992057605528	WITHOUT_CLASSIFICATION	7.942394471809862E-7	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.XMLResource.XMLMap#getClassifier(java.lang.String, java.lang.String)   */	WITHOUT_CLASSIFICATION	0.999999580501065	WITHOUT_CLASSIFICATION	4.1949893498183074E-7	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.XMLResource.XMLMap#getFeature(org.eclipse.emf.ecore.EClass, java.lang.String, java.lang.String)   */	WITHOUT_CLASSIFICATION	0.9999995218893347	WITHOUT_CLASSIFICATION	4.781106652317223E-7	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.XMLResource.XMLMap#getFeatures(org.eclipse.emf.ecore.EClass)   */	WITHOUT_CLASSIFICATION	0.9999986500259535	WITHOUT_CLASSIFICATION	1.3499740465299342E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.XMLResource.XMLMap#getInfo(org.eclipse.emf.ecore.ENamedElement)   */	WITHOUT_CLASSIFICATION	0.9999991381986076	WITHOUT_CLASSIFICATION	8.618013924581073E-7	DEFECT
//	WITHOUT_CLASSIFICATION	0.9990358322674203	WITHOUT_CLASSIFICATION	9.641677325797974E-4	DEFECT
//	WITHOUT_CLASSIFICATION	0.9990358322674203	WITHOUT_CLASSIFICATION	9.641677325797974E-4	DEFECT
//	WITHOUT_CLASSIFICATION	0.9990358322674203	WITHOUT_CLASSIFICATION	9.641677325797974E-4	DEFECT
//	WITHOUT_CLASSIFICATION	0.9990358322674203	WITHOUT_CLASSIFICATION	9.641677325797974E-4	DEFECT
//	WITHOUT_CLASSIFICATION	0.9990358322674203	WITHOUT_CLASSIFICATION	9.641677325797974E-4	DEFECT
//	WITHOUT_CLASSIFICATION	0.9990358322674203	WITHOUT_CLASSIFICATION	9.641677325797974E-4	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999106018941357	WITHOUT_CLASSIFICATION	8.939810586429974E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999106018941357	WITHOUT_CLASSIFICATION	8.939810586429974E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999106018941357	WITHOUT_CLASSIFICATION	8.939810586429974E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999106018941357	WITHOUT_CLASSIFICATION	8.939810586429974E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999106018941357	WITHOUT_CLASSIFICATION	8.939810586429974E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999106018941357	WITHOUT_CLASSIFICATION	8.939810586429974E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999106018941357	WITHOUT_CLASSIFICATION	8.939810586429974E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999106018941357	WITHOUT_CLASSIFICATION	8.939810586429974E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999106018941357	WITHOUT_CLASSIFICATION	8.939810586429974E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999106018941357	WITHOUT_CLASSIFICATION	8.939810586429974E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999106018941357	WITHOUT_CLASSIFICATION	8.939810586429974E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999106018941357	WITHOUT_CLASSIFICATION	8.939810586429974E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999106018941357	WITHOUT_CLASSIFICATION	8.939810586429974E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999106018941357	WITHOUT_CLASSIFICATION	8.939810586429974E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999106018941357	WITHOUT_CLASSIFICATION	8.939810586429974E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999106018941357	WITHOUT_CLASSIFICATION	8.939810586429974E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999106018941357	WITHOUT_CLASSIFICATION	8.939810586429974E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999106018941357	WITHOUT_CLASSIFICATION	8.939810586429974E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999106018941357	WITHOUT_CLASSIFICATION	8.939810586429974E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999106018941357	WITHOUT_CLASSIFICATION	8.939810586429974E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999106018941357	WITHOUT_CLASSIFICATION	8.939810586429974E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999106018941357	WITHOUT_CLASSIFICATION	8.939810586429974E-5	DEFECT
// Attribute	WITHOUT_CLASSIFICATION	0.9999751978484713	WITHOUT_CLASSIFICATION	2.4802151528559195E-5	DEFECT
// If the workbench part changes... //	WITHOUT_CLASSIFICATION	0.9999561294218704	WITHOUT_CLASSIFICATION	4.3870578129518276E-5	DEFECT
// Discard the old editing domain. //	WITHOUT_CLASSIFICATION	0.9999981558195751	WITHOUT_CLASSIFICATION	1.8441804248709966E-6	DEFECT
// Convert the selection to a collection of the selected objects. //	WITHOUT_CLASSIFICATION	0.9999925404443808	WITHOUT_CLASSIFICATION	7.459555619115701E-6	DEFECT
// This returns a name like employeeNumber formatted like 'Employee Number' // This returns the same as getCapName unless it starts with "is" in which case the "is" is stripped  // This returns the name to be used in accessor method names; it's the same as getCapName, unless this is the key or value of a map entry, for which "Typed" is prepended // This returns the name of the get array-based accessor method for the list feature. // This returns the name of the get accessor method for the feature, i.e., either "is" or "get" is prefixed to getAccessorName	WITHOUT_CLASSIFICATION	0.9999988250603454	WITHOUT_CLASSIFICATION	1.174939654578755E-6	DEFECT
// This is for backwards compatibility, since the constructor may have been overridden before it was expected // to set actionDelegate. //	WITHOUT_CLASSIFICATION	0.9999552471387722	WITHOUT_CLASSIFICATION	4.475286122793516E-5	DEFECT
// this returns either "EAttribute" or "EReference"	WITHOUT_CLASSIFICATION	0.9999884293821498	WITHOUT_CLASSIFICATION	1.1570617850173698E-5	DEFECT
// this guard is for extra security, but should not be necessary	WITHOUT_CLASSIFICATION	0.9999888284213543	WITHOUT_CLASSIFICATION	1.117157864566308E-5	DEFECT
// // EMF.Edit generation //	WITHOUT_CLASSIFICATION	0.9998114013593282	WITHOUT_CLASSIFICATION	1.8859864067174184E-4	DEFECT
// We can create the RemoveCommand for an uncontrol, but we must defer creating an AddCommand // to control until run(), when the user specifies a target resource. //	WITHOUT_CLASSIFICATION	0.9999972459180544	WITHOUT_CLASSIFICATION	2.7540819455773343E-6	DEFECT
//  Remove any non-Java dependencies from being added. //	WITHOUT_CLASSIFICATION	0.9999969714144901	WITHOUT_CLASSIFICATION	3.0285855099878297E-6	DEFECT
// Get extra icon and bounds for first column of ExtendedTableTreeItem. //	WITHOUT_CLASSIFICATION	0.9999950212994464	WITHOUT_CLASSIFICATION	4.978700553600268E-6	DEFECT
/*   * Computes the default path for the given GenModel. This was previously the implementation of getTemplatePath().   */	WITHOUT_CLASSIFICATION	0.9999929753737672	WITHOUT_CLASSIFICATION	7.024626232758257E-6	DEFECT
// Clean up the command if there is one.  If we need it again in drop, // we'll recreate it from dragAndDropCommandInformation. //	WITHOUT_CLASSIFICATION	0.999982122729136	WITHOUT_CLASSIFICATION	1.787727086403587E-5	DEFECT
// Compute a map of resource location URIs to logical namespace URIs // so that cross references will be resolved via package registry when deserialized.  //	WITHOUT_CLASSIFICATION	0.999993666584247	WITHOUT_CLASSIFICATION	6.333415752998055E-6	DEFECT
// We'll need to keep track of the information we use to create the // command, so that we can recreate it in drop.	WITHOUT_CLASSIFICATION	0.999885982788554	WITHOUT_CLASSIFICATION	1.140172114461184E-4	DEFECT
// Do allow an existing MANIFEST.MF to be overwritten, since it may have been created as part of an empty EMF project. // Use the existence of a plugin.xml as a guard against overwriting in a project that has already been generated. //	WITHOUT_CLASSIFICATION	0.9999988041935395	WITHOUT_CLASSIFICATION	1.195806460516912E-6	DEFECT
// Do allow an existing MANIFEST.MF to be overwritten, since it may have been created as part of an empty EMF project. // Use the existence of a plugin.xml as a guard against overwriting in a project that has already been generated. //	WITHOUT_CLASSIFICATION	0.9999988041935395	WITHOUT_CLASSIFICATION	1.195806460516912E-6	DEFECT
// Do allow an existing MANIFEST.MF to be overwritten, since it may have been created as part of an empty EMF project. // Use the existence of a plugin.xml as a guard against overwriting in a project that has already been generated. //	WITHOUT_CLASSIFICATION	0.9999988041935395	WITHOUT_CLASSIFICATION	1.195806460516912E-6	DEFECT
/*     * (non-Javadoc) Method declared on Dialog.     */	WITHOUT_CLASSIFICATION	0.999996097004461	WITHOUT_CLASSIFICATION	3.9029955390529605E-6	DEFECT
// Do allow an existing build.properties to be overwritten, since it may have been created as part of an empty EMF project. // Use the existence of a plugin.xml as a guard against overwriting in a project that has already been generated. //	WITHOUT_CLASSIFICATION	0.9999957046457233	WITHOUT_CLASSIFICATION	4.295354276673299E-6	DEFECT
/*        text = new Text(composite, SWT.SINGLE | SWT.BORDER);        text.setLayoutData(new GridData(GridData.GRAB_HORIZONTAL                | GridData.HORIZONTAL_ALIGN_FILL));*/	WITHOUT_CLASSIFICATION	0.9999987103092997	WITHOUT_CLASSIFICATION	1.2896907003477083E-6	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.9999933771872096	WITHOUT_CLASSIFICATION	6.622812790395057E-6	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.9999933771872096	WITHOUT_CLASSIFICATION	6.622812790395057E-6	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.9999933771872096	WITHOUT_CLASSIFICATION	6.622812790395057E-6	DEFECT
// CellEditor.setValue() calls isCorrect() to validate the value that is about to be set. We are doing conversion // between the value and a corresponding string, and we would usually like to validate the string. Because // setValue() is final, we cannot do that conversion there, so we need to record what we're trying to validate and // work around the problem in isCorrect(). // 	WITHOUT_CLASSIFICATION	0.9999187050133315	WITHOUT_CLASSIFICATION	8.129498666851871E-5	DEFECT
// Initialize simple dependencies	WITHOUT_CLASSIFICATION	0.9999991823946333	WITHOUT_CLASSIFICATION	8.176053668014476E-7	DEFECT
// The referencedEPackages list is used to track the packages for // which is necessary to create the stub GenModel.  So if the ePackage // is referenced by an existing GenPackage, it doesn't need to be added to // referencedEPackages.	WITHOUT_CLASSIFICATION	0.9999948244607284	WITHOUT_CLASSIFICATION	5.175539271636633E-6	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.9999990592002509	WITHOUT_CLASSIFICATION	9.407997490422834E-7	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.9999990592002509	WITHOUT_CLASSIFICATION	9.407997490422834E-7	DEFECT
// Determine the required plugins. //	WITHOUT_CLASSIFICATION	0.9999919007124062	WITHOUT_CLASSIFICATION	8.099287593914576E-6	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.99999732803041	WITHOUT_CLASSIFICATION	2.671969590056063E-6	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.99999732803041	WITHOUT_CLASSIFICATION	2.671969590056063E-6	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.99999732803041	WITHOUT_CLASSIFICATION	2.671969590056063E-6	DEFECT
// Include each required plugin of the starting project and the exported ones of all the required projects. //	WITHOUT_CLASSIFICATION	0.9999285960191278	WITHOUT_CLASSIFICATION	7.140398087229739E-5	DEFECT
// Register package validator	WITHOUT_CLASSIFICATION	0.9999988601197599	WITHOUT_CLASSIFICATION	1.1398802400978825E-6	DEFECT
// Determine the inverse map from plugin IDs to their registered GenModel locations. //	WITHOUT_CLASSIFICATION	0.9999978695508379	WITHOUT_CLASSIFICATION	2.1304491620483522E-6	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$	WITHOUT_CLASSIFICATION	0.9997231555131084	WITHOUT_CLASSIFICATION	2.768444868915385E-4	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$	WITHOUT_CLASSIFICATION	0.9997231555131084	WITHOUT_CLASSIFICATION	2.768444868915385E-4	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9995929231794971	WITHOUT_CLASSIFICATION	4.070768205029192E-4	DEFECT
// Mark meta-data to indicate it can't be changed	WITHOUT_CLASSIFICATION	0.9999930471702011	WITHOUT_CLASSIFICATION	6.95282979884545E-6	DEFECT
// Mark meta-data to indicate it can't be changed	WITHOUT_CLASSIFICATION	0.9999930471702011	WITHOUT_CLASSIFICATION	6.95282979884545E-6	DEFECT
// Walk the fields. //	WITHOUT_CLASSIFICATION	0.9999895511837521	WITHOUT_CLASSIFICATION	1.044881624795132E-5	DEFECT
// Obtain other dependent packages	WITHOUT_CLASSIFICATION	0.9999916577067488	WITHOUT_CLASSIFICATION	8.342293251226973E-6	DEFECT
// Obtain other dependent packages	WITHOUT_CLASSIFICATION	0.9999916577067488	WITHOUT_CLASSIFICATION	8.342293251226973E-6	DEFECT
// Filter out explicit EObject from super types, except in the Ecore package itself, or if it appears in the @model superTypes. //	WITHOUT_CLASSIFICATION	0.9999157696300697	WITHOUT_CLASSIFICATION	8.423036993030241E-5	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.9999995068117644	WITHOUT_CLASSIFICATION	4.93188235584206E-7	DEFECT
// We will create an EAttribute, EReference, or an EOperation. //	WITHOUT_CLASSIFICATION	0.9999471586428337	WITHOUT_CLASSIFICATION	5.284135716622743E-5	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.999998067601732	WITHOUT_CLASSIFICATION	1.932398267952577E-6	DEFECT
// Check whether there are parameters; the special attribute and reference rules only apply for the case of no arguments. //	WITHOUT_CLASSIFICATION	0.9997320837472039	WITHOUT_CLASSIFICATION	2.679162527961E-4	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$	WITHOUT_CLASSIFICATION	0.9997231555131084	WITHOUT_CLASSIFICATION	2.768444868915385E-4	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9996827877936082	WITHOUT_CLASSIFICATION	3.172122063917369E-4	DEFECT
// Initialize classes and features; add operations and parameters	WITHOUT_CLASSIFICATION	0.9999987329766953	WITHOUT_CLASSIFICATION	1.2670233046854628E-6	DEFECT
// Initialize classes and features; add operations and parameters	WITHOUT_CLASSIFICATION	0.9999987329766953	WITHOUT_CLASSIFICATION	1.2670233046854628E-6	DEFECT
// Initialize classes and features; add operations and parameters	WITHOUT_CLASSIFICATION	0.9999987329766953	WITHOUT_CLASSIFICATION	1.2670233046854628E-6	DEFECT
// The method is not a structural feature, so it's modeled as an operation. //	WITHOUT_CLASSIFICATION	0.9999940975216618	WITHOUT_CLASSIFICATION	5.902478338176352E-6	DEFECT
// Initialize classes and features; add operations and parameters //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9999988950707386	WITHOUT_CLASSIFICATION	1.1049292614241189E-6	DEFECT
// Create annotations // http://www.eclipse.org/emf/2002/Ecore	WITHOUT_CLASSIFICATION	0.9999466775860252	WITHOUT_CLASSIFICATION	5.332241397480701E-5	DEFECT
// Don't overwrite exising file	WITHOUT_CLASSIFICATION	0.9999666224099034	WITHOUT_CLASSIFICATION	3.3377590096507935E-5	DEFECT
// Don't overwrite exising file	WITHOUT_CLASSIFICATION	0.9999666224099034	WITHOUT_CLASSIFICATION	3.3377590096507935E-5	DEFECT
// Look through the imports of the containing compilation unit. //	WITHOUT_CLASSIFICATION	0.9999470589618427	WITHOUT_CLASSIFICATION	5.294103815736867E-5	DEFECT
// Use an alternate if we can't write to this one. //	WITHOUT_CLASSIFICATION	0.9999829310930589	WITHOUT_CLASSIFICATION	1.7068906941175823E-5	DEFECT
// Map to EClass, EEnum or EInerface. // Note that we do not map structure and primitive type class. //	WITHOUT_CLASSIFICATION	0.999999832429025	WITHOUT_CLASSIFICATION	1.6757097496047564E-7	DEFECT
//purpose: using charset from 'targetFile' to encode in-memory  //         'newContents' object into bytes //modifer: Wu Zhi Qiang //date:    Aug 25, 2004 //action:  first get the charset from 'targetFile', then use it  //         to encode the 'newContents' object into bytes	WITHOUT_CLASSIFICATION	0.9998850307276081	WITHOUT_CLASSIFICATION	1.1496927239184334E-4	DEFECT
// Map to an EClass. //	WITHOUT_CLASSIFICATION	0.9999921221027903	WITHOUT_CLASSIFICATION	7.877897209665808E-6	DEFECT
// Map to an EClass. //	WITHOUT_CLASSIFICATION	0.9999921221027903	WITHOUT_CLASSIFICATION	7.877897209665808E-6	DEFECT
//FB TBD different objects for ecore model!	WITHOUT_CLASSIFICATION	0.999627880289244	WITHOUT_CLASSIFICATION	3.721197107560757E-4	DEFECT
//FB TBD different objects for ecore model!	WITHOUT_CLASSIFICATION	0.999627880289244	WITHOUT_CLASSIFICATION	3.721197107560757E-4	DEFECT
// Map to an eClass. //	WITHOUT_CLASSIFICATION	0.9999951377932105	WITHOUT_CLASSIFICATION	4.862206789628163E-6	DEFECT
// generateColor();	WITHOUT_CLASSIFICATION	0.9999954810846983	WITHOUT_CLASSIFICATION	4.518915301777435E-6	DEFECT
// This handles Rose 2003 format, e.g., // Logical View::JavaException[40722F9D0294] //	WITHOUT_CLASSIFICATION	0.9999846826486627	WITHOUT_CLASSIFICATION	1.53173513373094E-5	DEFECT
// Strip off the array indices if any. //	WITHOUT_CLASSIFICATION	0.9999978487469408	WITHOUT_CLASSIFICATION	2.151253059256915E-6	DEFECT
// process eStructuralFeatures for association end(Role) //	WITHOUT_CLASSIFICATION	0.999999574514771	WITHOUT_CLASSIFICATION	4.2548522907646096E-7	DEFECT
// If we find a match, make this generic type be for this type parameter, // and then stop the whole process.	WITHOUT_CLASSIFICATION	0.9999999722080682	WITHOUT_CLASSIFICATION	2.7791931715038823E-8	DEFECT
// If we find a match, make this generic type be for this type parameter, // and then stop the whole process.	WITHOUT_CLASSIFICATION	0.9999999722080682	WITHOUT_CLASSIFICATION	2.7791931715038823E-8	DEFECT
// ...or if it's a wildcard or group feature.  Also, make it FeatureMap-typed. //	WITHOUT_CLASSIFICATION	0.9999817220524599	WITHOUT_CLASSIFICATION	1.827794754011691E-5	DEFECT
// We don't want keyType and valueType on a map type specification in a package interface. // But, we also use qualified model information when defining a feature with suppressed get accessor // on the interface, and we do want to include these properties in that case. //	WITHOUT_CLASSIFICATION	0.9999931767371093	WITHOUT_CLASSIFICATION	6.82326289063157E-6	DEFECT
// starting traverse file and build unit tree and table info	WITHOUT_CLASSIFICATION	0.9999965142059143	WITHOUT_CLASSIFICATION	3.485794085825579E-6	DEFECT
/*  public String getImportedInstanceClassName()  {    return getGenModel().getImportedName("org.eclipse.emf.ecore.EEnumLiteral");   }*/	WITHOUT_CLASSIFICATION	0.999999708604694	WITHOUT_CLASSIFICATION	2.9139530595208853E-7	DEFECT
// Process the children of the UnitTreeNode recursively. //	WITHOUT_CLASSIFICATION	0.9999849551787358	WITHOUT_CLASSIFICATION	1.5044821264255465E-5	DEFECT
// If the flag will straddle two fields, bump it to the next one. //	WITHOUT_CLASSIFICATION	0.999885680044962	WITHOUT_CLASSIFICATION	1.1431995503802433E-4	DEFECT
//************************************************************************ //*    class RoseToken                                                   * //************************************************************************	WITHOUT_CLASSIFICATION	0.9999399470274677	WITHOUT_CLASSIFICATION	6.005297253229734E-5	DEFECT
// If there is a provider base class from outside this class that has already been generated, get the create // child references from it. We'll check for any type-compatible classes introduced in this package. //	WITHOUT_CLASSIFICATION	0.9999975967355622	WITHOUT_CLASSIFICATION	2.403264437847953E-6	DEFECT
// This will deal with all the subcommands to modifying the root mapping tree. //	WITHOUT_CLASSIFICATION	0.995755718038661	WITHOUT_CLASSIFICATION	0.004244281961339049	DEFECT
// Like isStringType(), but still returns true even if multiplicity-many. //	WITHOUT_CLASSIFICATION	0.9999993074519696	WITHOUT_CLASSIFICATION	6.92548030368841E-7	DEFECT
// Create a command to do parentMapping.getNested().remove(mapping). // //subcommands.appendAndExecute(new RemoveCommand(domain, parentMapping, parentMapping.ePackageMapping().getMapping_Nested(), mapping));	WITHOUT_CLASSIFICATION	0.9999998989781035	WITHOUT_CLASSIFICATION	1.0102189640868679E-7	DEFECT
// EDate is far too often overridden to provide a different mapping, and therefor the default is somewhat obscure. // So, it's best to delegate to the factory. //	WITHOUT_CLASSIFICATION	0.9999998047096721	WITHOUT_CLASSIFICATION	1.9529032802255339E-7	DEFECT
// Find the appropriate parent mapping, which at the very least, should be the mapping root itself. //	WITHOUT_CLASSIFICATION	0.9999601021097578	WITHOUT_CLASSIFICATION	3.989789024217404E-5	DEFECT
// }	WITHOUT_CLASSIFICATION	0.9998946261149056	WITHOUT_CLASSIFICATION	1.053738850943751E-4	DEFECT
// }	WITHOUT_CLASSIFICATION	0.9998946261149056	WITHOUT_CLASSIFICATION	1.053738850943751E-4	DEFECT
// }	WITHOUT_CLASSIFICATION	0.9998946261149056	WITHOUT_CLASSIFICATION	1.053738850943751E-4	DEFECT
// If the type isn't Object, we need to cast. If it's a primitive, we need to unbox. //	WITHOUT_CLASSIFICATION	0.999999618916968	WITHOUT_CLASSIFICATION	3.810830320078395E-7	DEFECT
//(new AddCommand(domain, mapping, mapping.ePackageMapping().getMapping_Nested(), siblingsToReparent));	WITHOUT_CLASSIFICATION	0.9999992893116357	WITHOUT_CLASSIFICATION	7.106883642599336E-7	DEFECT
// Suppress default constructor for non-instantiability.	WITHOUT_CLASSIFICATION	0.9999961949048516	WITHOUT_CLASSIFICATION	3.8050951483474626E-6	DEFECT
// This is tricky and is done for each object here rather than once for the owner of the addCommnd. // We want to make sure the object is really part of the conceptual tree induced by the domain. //	WITHOUT_CLASSIFICATION	0.9999349061658072	WITHOUT_CLASSIFICATION	6.509383419283526E-5	DEFECT
// See java.lang.Class.getName() javadoc for explanation of array encoding.	WITHOUT_CLASSIFICATION	0.9999803217878112	WITHOUT_CLASSIFICATION	1.9678212188857817E-5	DEFECT
// We'll try adding a shallow copy of the clipboard contents, instead of a full copy. // Note: we can't just try adding the clipboard contents itself, because the copy may be a //       different type then what's on the clipboard (e.g. EJB Field -> RDB Column). //	WITHOUT_CLASSIFICATION	0.9999626003912971	WITHOUT_CLASSIFICATION	3.73996087027719E-5	DEFECT
// We'll try adding a shallow copy of the clipboard contents, instead of a full copy. // Note: we can't just try adding the clipboard contents itself, because the copy may be a //       different type then what's on the clipboard (e.g. EJB Field -> RDB Column). //	WITHOUT_CLASSIFICATION	0.9999626003912971	WITHOUT_CLASSIFICATION	3.73996087027719E-5	DEFECT
// We can't blindly cache the genModel, since we need to support moving the GenPackage to another container, // but the cast is expensive, so we'd like to do it no more than absolutely necessary. //	WITHOUT_CLASSIFICATION	0.9999981823200969	WITHOUT_CLASSIFICATION	1.817679903163916E-6	DEFECT
//FB The following method is copied from com.ibm.etools.b2b.util.StringUtility //FB because the mapping framework cannot have a dependency on b2b. What we really //FB need to do is get methods like this moved to vabase so that everyone can //FB use them. // change all occurrences of oldPat to newPat	WITHOUT_CLASSIFICATION	0.9973120309221675	WITHOUT_CLASSIFICATION	0.0026879690778325743	DEFECT
// Ignore this soft dependency when it's not satisfied.	WITHOUT_CLASSIFICATION	0.9997509802293695	WITHOUT_CLASSIFICATION	2.490197706305503E-4	DEFECT
// If it's the selection viewer, then we want it to select the same selection as this selection. //	WITHOUT_CLASSIFICATION	0.999989013173153	WITHOUT_CLASSIFICATION	1.098682684691281E-5	DEFECT
// Set URIs of EPackage-containing resources: output resource to desired target URI, and others to package // namespace URIs (so cross-references will be resolved via package registry when deserialized).  //	WITHOUT_CLASSIFICATION	0.9999915717022579	WITHOUT_CLASSIFICATION	8.428297742006883E-6	DEFECT
//MappingPackageImpl	WITHOUT_CLASSIFICATION	0.9998074702424232	WITHOUT_CLASSIFICATION	1.925297575766901E-4	DEFECT
// Iterate over the mappings in the tree. //	WITHOUT_CLASSIFICATION	0.9999931423444927	WITHOUT_CLASSIFICATION	6.857655507401806E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9989639901696303	WITHOUT_CLASSIFICATION	0.0010360098303696492	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9989639901696303	WITHOUT_CLASSIFICATION	0.0010360098303696492	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9989639901696303	WITHOUT_CLASSIFICATION	0.0010360098303696492	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9989639901696303	WITHOUT_CLASSIFICATION	0.0010360098303696492	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9989639901696303	WITHOUT_CLASSIFICATION	0.0010360098303696492	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9989639901696303	WITHOUT_CLASSIFICATION	0.0010360098303696492	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9989639901696303	WITHOUT_CLASSIFICATION	0.0010360098303696492	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9989639901696303	WITHOUT_CLASSIFICATION	0.0010360098303696492	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9989639901696303	WITHOUT_CLASSIFICATION	0.0010360098303696492	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9989639901696303	WITHOUT_CLASSIFICATION	0.0010360098303696492	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9989639901696303	WITHOUT_CLASSIFICATION	0.0010360098303696492	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9989639901696303	WITHOUT_CLASSIFICATION	0.0010360098303696492	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9989639901696303	WITHOUT_CLASSIFICATION	0.0010360098303696492	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9989639901696303	WITHOUT_CLASSIFICATION	0.0010360098303696492	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9989639901696303	WITHOUT_CLASSIFICATION	0.0010360098303696492	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9989639901696303	WITHOUT_CLASSIFICATION	0.0010360098303696492	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9989639901696303	WITHOUT_CLASSIFICATION	0.0010360098303696492	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9989639901696303	WITHOUT_CLASSIFICATION	0.0010360098303696492	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9989639901696303	WITHOUT_CLASSIFICATION	0.0010360098303696492	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9989639901696303	WITHOUT_CLASSIFICATION	0.0010360098303696492	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9989639901696303	WITHOUT_CLASSIFICATION	0.0010360098303696492	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9989639901696303	WITHOUT_CLASSIFICATION	0.0010360098303696492	DEFECT
//   public String getExtendedItemProviderClassName() //   { //     return getPrefixedName("ItemProviderAdapter"); //   }	WITHOUT_CLASSIFICATION	0.9999989106893935	WITHOUT_CLASSIFICATION	1.089310606447187E-6	DEFECT
// Check to make sure that every object in the collection has an ancestor that is contained in this mapping. //	WITHOUT_CLASSIFICATION	0.9999941798348232	WITHOUT_CLASSIFICATION	5.820165176820648E-6	DEFECT
// It belongs to this package if the delegate feature is from this package, // or the class is from this package and either there is no delegate feature or the delegate feature is from some used package. //	WITHOUT_CLASSIFICATION	0.9999951410161487	WITHOUT_CLASSIFICATION	4.858983851260385E-6	DEFECT
// Ensure that this is a touch notification so to resource aren't marked as dirty. //	WITHOUT_CLASSIFICATION	0.9998040893935354	WITHOUT_CLASSIFICATION	1.9591060646461785E-4	DEFECT
// Force the project to be setup properly. //	WITHOUT_CLASSIFICATION	0.9999466545639166	WITHOUT_CLASSIFICATION	5.3345436083466983E-5	DEFECT
/* EATM getDecoratedAdapterFactory().*/	WITHOUT_CLASSIFICATION	0.9999028554948984	WITHOUT_CLASSIFICATION	9.714450510155087E-5	DEFECT
// This case happens when the IDE is brought up with the editor already open //	WITHOUT_CLASSIFICATION	0.9939042329302179	WITHOUT_CLASSIFICATION	0.006095767069782083	DEFECT
// We need to filer out duplicates in the unlikely event that we have two // features with the same class-qualified name. We'll only generate one property // string in that case and let the user add the second one manually, if necessary. //	WITHOUT_CLASSIFICATION	0.999962192431288	WITHOUT_CLASSIFICATION	3.780756871197974E-5	DEFECT
//MappingPackage ePackage = ((ComplexTypeConverter)msg.getNotifier()).ePackageMapping();	WITHOUT_CLASSIFICATION	0.9999979327539555	WITHOUT_CLASSIFICATION	2.0672460444282946E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9998766035828676	WITHOUT_CLASSIFICATION	1.2339641713245567E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9998766035828676	WITHOUT_CLASSIFICATION	1.2339641713245567E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9998766035828676	WITHOUT_CLASSIFICATION	1.2339641713245567E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9998766035828676	WITHOUT_CLASSIFICATION	1.2339641713245567E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9998766035828676	WITHOUT_CLASSIFICATION	1.2339641713245567E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9998766035828676	WITHOUT_CLASSIFICATION	1.2339641713245567E-4	DEFECT
// while	WITHOUT_CLASSIFICATION	0.9999390426031941	WITHOUT_CLASSIFICATION	6.095739680578045E-5	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9998766035828676	WITHOUT_CLASSIFICATION	1.2339641713245567E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9998766035828676	WITHOUT_CLASSIFICATION	1.2339641713245567E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9998766035828676	WITHOUT_CLASSIFICATION	1.2339641713245567E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9998766035828676	WITHOUT_CLASSIFICATION	1.2339641713245567E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9998766035828676	WITHOUT_CLASSIFICATION	1.2339641713245567E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9998766035828676	WITHOUT_CLASSIFICATION	1.2339641713245567E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9998766035828676	WITHOUT_CLASSIFICATION	1.2339641713245567E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9998766035828676	WITHOUT_CLASSIFICATION	1.2339641713245567E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9998766035828676	WITHOUT_CLASSIFICATION	1.2339641713245567E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9998766035828676	WITHOUT_CLASSIFICATION	1.2339641713245567E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9998766035828676	WITHOUT_CLASSIFICATION	1.2339641713245567E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9998766035828676	WITHOUT_CLASSIFICATION	1.2339641713245567E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9998766035828676	WITHOUT_CLASSIFICATION	1.2339641713245567E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9998766035828676	WITHOUT_CLASSIFICATION	1.2339641713245567E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9998766035828676	WITHOUT_CLASSIFICATION	1.2339641713245567E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9998766035828676	WITHOUT_CLASSIFICATION	1.2339641713245567E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9998766035828676	WITHOUT_CLASSIFICATION	1.2339641713245567E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9998766035828676	WITHOUT_CLASSIFICATION	1.2339641713245567E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9998766035828676	WITHOUT_CLASSIFICATION	1.2339641713245567E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9998766035828676	WITHOUT_CLASSIFICATION	1.2339641713245567E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9998766035828676	WITHOUT_CLASSIFICATION	1.2339641713245567E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9998766035828676	WITHOUT_CLASSIFICATION	1.2339641713245567E-4	DEFECT
// Empty	WITHOUT_CLASSIFICATION	0.999909408276156	WITHOUT_CLASSIFICATION	9.05917238440131E-5	DEFECT
// Empty	WITHOUT_CLASSIFICATION	0.999909408276156	WITHOUT_CLASSIFICATION	9.05917238440131E-5	DEFECT
// Empty	WITHOUT_CLASSIFICATION	0.999909408276156	WITHOUT_CLASSIFICATION	9.05917238440131E-5	DEFECT
// Empty	WITHOUT_CLASSIFICATION	0.999909408276156	WITHOUT_CLASSIFICATION	9.05917238440131E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.99987048956532	WITHOUT_CLASSIFICATION	1.2951043468007955E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.99987048956532	WITHOUT_CLASSIFICATION	1.2951043468007955E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.99987048956532	WITHOUT_CLASSIFICATION	1.2951043468007955E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.99987048956532	WITHOUT_CLASSIFICATION	1.2951043468007955E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.99987048956532	WITHOUT_CLASSIFICATION	1.2951043468007955E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.99987048956532	WITHOUT_CLASSIFICATION	1.2951043468007955E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.99987048956532	WITHOUT_CLASSIFICATION	1.2951043468007955E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.99987048956532	WITHOUT_CLASSIFICATION	1.2951043468007955E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.99987048956532	WITHOUT_CLASSIFICATION	1.2951043468007955E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.99987048956532	WITHOUT_CLASSIFICATION	1.2951043468007955E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.99987048956532	WITHOUT_CLASSIFICATION	1.2951043468007955E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.99987048956532	WITHOUT_CLASSIFICATION	1.2951043468007955E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.99987048956532	WITHOUT_CLASSIFICATION	1.2951043468007955E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.99987048956532	WITHOUT_CLASSIFICATION	1.2951043468007955E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.99987048956532	WITHOUT_CLASSIFICATION	1.2951043468007955E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.99987048956532	WITHOUT_CLASSIFICATION	1.2951043468007955E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.99987048956532	WITHOUT_CLASSIFICATION	1.2951043468007955E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.99987048956532	WITHOUT_CLASSIFICATION	1.2951043468007955E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.99987048956532	WITHOUT_CLASSIFICATION	1.2951043468007955E-4	DEFECT
// the first hex character if a character needs to be escaped	WITHOUT_CLASSIFICATION	0.9999989752349427	WITHOUT_CLASSIFICATION	1.0247650572171254E-6	DEFECT
// the first hex character if a character needs to be escaped	WITHOUT_CLASSIFICATION	0.9999989752349427	WITHOUT_CLASSIFICATION	1.0247650572171254E-6	DEFECT
// the second hex character if a character needs to be escaped	WITHOUT_CLASSIFICATION	0.999995230111865	WITHOUT_CLASSIFICATION	4.769888135025732E-6	DEFECT
// initialize the above 3 arrays	WITHOUT_CLASSIFICATION	0.9999994416591876	WITHOUT_CLASSIFICATION	5.583408122880653E-7	DEFECT
// if it's not an ASCII character, break here, and use UTF-8 encoding	WITHOUT_CLASSIFICATION	0.9999363641671682	WITHOUT_CLASSIFICATION	6.363583283174463E-5	DEFECT
// get UTF-8 bytes for the remaining sub-string	WITHOUT_CLASSIFICATION	0.9999883695657875	WITHOUT_CLASSIFICATION	1.1630434212422808E-5	DEFECT
//MappingPackage ePackage = ((MappingRoot)object).ePackageMapping();	WITHOUT_CLASSIFICATION	0.9999803844616667	WITHOUT_CLASSIFICATION	1.9615538333316067E-5	DEFECT
// Try to select the affected objects. //	WITHOUT_CLASSIFICATION	0.9999911955002312	WITHOUT_CLASSIFICATION	8.804499768888832E-6	DEFECT
// this should never happen	WITHOUT_CLASSIFICATION	0.9998127288147235	WITHOUT_CLASSIFICATION	1.8727118527657683E-4	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9999146686599837	WITHOUT_CLASSIFICATION	8.533134001628908E-5	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9999146686599837	WITHOUT_CLASSIFICATION	8.533134001628908E-5	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9999146686599837	WITHOUT_CLASSIFICATION	8.533134001628908E-5	DEFECT
// && commandParameter instanceof MappingCommandParameter)	WITHOUT_CLASSIFICATION	0.9999993502074789	WITHOUT_CLASSIFICATION	6.497925210322273E-7	DEFECT
// Creates the model from the editor input //	WITHOUT_CLASSIFICATION	0.9999956257317678	WITHOUT_CLASSIFICATION	4.374268232163076E-6	DEFECT
// Returning null here causes RemoveCommand.create(domain, mappedObjectItemProvider) to be delegated //  to MappedObjectItemProvider.createCommand() and there we return a command to remove mappedObject instead. // // return null;	WITHOUT_CLASSIFICATION	0.9999999810915032	WITHOUT_CLASSIFICATION	1.8908496675368286E-8	DEFECT
// Only creates the other pages if there is something that can be edited //	WITHOUT_CLASSIFICATION	0.9999949515345804	WITHOUT_CLASSIFICATION	5.04846541961151E-6	DEFECT
// Only creates the other pages if there is something that can be edited //	WITHOUT_CLASSIFICATION	0.9999949515345804	WITHOUT_CLASSIFICATION	5.04846541961151E-6	DEFECT
//hgd::fireNotifyChanged(msg.getNotifier(), msg.getEventType(), msg.getFeature(), substituteOldValue, substituteNewValue, msg.getPosition());	WITHOUT_CLASSIFICATION	0.9999841701880452	WITHOUT_CLASSIFICATION	1.5829811954771644E-5	DEFECT
// The content outline is just a tree. //	WITHOUT_CLASSIFICATION	0.9999969597886372	WITHOUT_CLASSIFICATION	3.0402113626518825E-6	DEFECT
// Set up the tree viewer. //	WITHOUT_CLASSIFICATION	0.9999916220695798	WITHOUT_CLASSIFICATION	8.37793042016878E-6	DEFECT
// Select the root object in the view. //	WITHOUT_CLASSIFICATION	0.9999849742177175	WITHOUT_CLASSIFICATION	1.502578228243813E-5	DEFECT
// This ensures that we handle selections correctly. //	WITHOUT_CLASSIFICATION	0.9997114288391179	WITHOUT_CLASSIFICATION	2.8857116088203464E-4	DEFECT
// Get the first selected element. //	WITHOUT_CLASSIFICATION	0.9999992524617337	WITHOUT_CLASSIFICATION	7.475382662273749E-7	DEFECT
// Do the work within an operation because this is a long running activity that modifies the workbench. //	WITHOUT_CLASSIFICATION	0.9998306049913627	WITHOUT_CLASSIFICATION	1.6939500863739584E-4	DEFECT
// generateMenuManager.add(new Separator("schema-actions")); // generateMenuManager.add(generateSchemaAction);    	WITHOUT_CLASSIFICATION	0.9999990083876397	WITHOUT_CLASSIFICATION	9.91612360319119E-7	DEFECT
// generateSchemaAction.setEnabled(generateSchemaAction.isEnabled());	WITHOUT_CLASSIFICATION	0.9999989920549454	WITHOUT_CLASSIFICATION	1.0079450545949675E-6	DEFECT
// menuManager.insertBefore("additions", new Separator("schema-actions")); // menuManager.insertAfter("schema-actions", generateSchemaAction);	WITHOUT_CLASSIFICATION	0.9999994087487173	WITHOUT_CLASSIFICATION	5.912512826669881E-7	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999484135833615	WITHOUT_CLASSIFICATION	5.158641663847135E-5	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999484135833615	WITHOUT_CLASSIFICATION	5.158641663847135E-5	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999484135833615	WITHOUT_CLASSIFICATION	5.158641663847135E-5	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999484135833615	WITHOUT_CLASSIFICATION	5.158641663847135E-5	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999484135833615	WITHOUT_CLASSIFICATION	5.158641663847135E-5	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999484135833615	WITHOUT_CLASSIFICATION	5.158641663847135E-5	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999484135833615	WITHOUT_CLASSIFICATION	5.158641663847135E-5	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999484135833615	WITHOUT_CLASSIFICATION	5.158641663847135E-5	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999484135833615	WITHOUT_CLASSIFICATION	5.158641663847135E-5	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999484135833615	WITHOUT_CLASSIFICATION	5.158641663847135E-5	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999484135833615	WITHOUT_CLASSIFICATION	5.158641663847135E-5	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999484135833615	WITHOUT_CLASSIFICATION	5.158641663847135E-5	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999484135833615	WITHOUT_CLASSIFICATION	5.158641663847135E-5	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999484135833615	WITHOUT_CLASSIFICATION	5.158641663847135E-5	DEFECT
//)	WITHOUT_CLASSIFICATION	0.9988643892079304	WITHOUT_CLASSIFICATION	0.0011356107920695794	DEFECT
//)	WITHOUT_CLASSIFICATION	0.9988643892079304	WITHOUT_CLASSIFICATION	0.0011356107920695794	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9999994233633256	WITHOUT_CLASSIFICATION	5.766366744737383E-7	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9999994233633256	WITHOUT_CLASSIFICATION	5.766366744737383E-7	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9999994233633256	WITHOUT_CLASSIFICATION	5.766366744737383E-7	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9999994233633256	WITHOUT_CLASSIFICATION	5.766366744737383E-7	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9999994233633256	WITHOUT_CLASSIFICATION	5.766366744737383E-7	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9999994233633256	WITHOUT_CLASSIFICATION	5.766366744737383E-7	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9999994233633256	WITHOUT_CLASSIFICATION	5.766366744737383E-7	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9999994233633256	WITHOUT_CLASSIFICATION	5.766366744737383E-7	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9999994233633256	WITHOUT_CLASSIFICATION	5.766366744737383E-7	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9999994233633256	WITHOUT_CLASSIFICATION	5.766366744737383E-7	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9999994233633256	WITHOUT_CLASSIFICATION	5.766366744737383E-7	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9999994233633256	WITHOUT_CLASSIFICATION	5.766366744737383E-7	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9999994233633256	WITHOUT_CLASSIFICATION	5.766366744737383E-7	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9999994233633256	WITHOUT_CLASSIFICATION	5.766366744737383E-7	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9999994233633256	WITHOUT_CLASSIFICATION	5.766366744737383E-7	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9999994233633256	WITHOUT_CLASSIFICATION	5.766366744737383E-7	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9999994233633256	WITHOUT_CLASSIFICATION	5.766366744737383E-7	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9999994233633256	WITHOUT_CLASSIFICATION	5.766366744737383E-7	DEFECT
/**   * Calls <code>validateXXX</code> for the corresponding classifier of the model.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9999967932473037	WITHOUT_CLASSIFICATION	3.206752696340495E-6	DEFECT
/**   * Calls <code>validateXXX</code> for the corresponding classifier of the model.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9999967932473037	WITHOUT_CLASSIFICATION	3.206752696340495E-6	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9999957913813804	WITHOUT_CLASSIFICATION	4.20861861952217E-6	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9999957913813804	WITHOUT_CLASSIFICATION	4.20861861952217E-6	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9999957913813804	WITHOUT_CLASSIFICATION	4.20861861952217E-6	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9999957913813804	WITHOUT_CLASSIFICATION	4.20861861952217E-6	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9999957913813804	WITHOUT_CLASSIFICATION	4.20861861952217E-6	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9999957913813804	WITHOUT_CLASSIFICATION	4.20861861952217E-6	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9999957913813804	WITHOUT_CLASSIFICATION	4.20861861952217E-6	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9999957913813804	WITHOUT_CLASSIFICATION	4.20861861952217E-6	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9999957913813804	WITHOUT_CLASSIFICATION	4.20861861952217E-6	DEFECT
// // Constructors //	WITHOUT_CLASSIFICATION	0.9999937396212184	WITHOUT_CLASSIFICATION	6.260378781601472E-6	DEFECT
// // Constructors //	WITHOUT_CLASSIFICATION	0.9999937396212184	WITHOUT_CLASSIFICATION	6.260378781601472E-6	DEFECT
//TestCase/isSetGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999839037760072	WITHOUT_CLASSIFICATION	1.609622399283586E-5	DEFECT
// Avoid unnecessary out.write("") statements...	WITHOUT_CLASSIFICATION	0.9999902556961962	WITHOUT_CLASSIFICATION	9.744303803774382E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9989639901696303	WITHOUT_CLASSIFICATION	0.0010360098303696492	DEFECT
// For any entry that doesn't correspond to a plugin in the running JVM, compute a URL for the classes. //	WITHOUT_CLASSIFICATION	0.9999047368365201	WITHOUT_CLASSIFICATION	9.52631634799169E-5	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9996230761711952	WITHOUT_CLASSIFICATION	3.7692382880483274E-4	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9996230761711952	WITHOUT_CLASSIFICATION	3.7692382880483274E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9989639901696303	WITHOUT_CLASSIFICATION	0.0010360098303696492	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9989639901696303	WITHOUT_CLASSIFICATION	0.0010360098303696492	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9989639901696303	WITHOUT_CLASSIFICATION	0.0010360098303696492	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9989639901696303	WITHOUT_CLASSIFICATION	0.0010360098303696492	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9989639901696303	WITHOUT_CLASSIFICATION	0.0010360098303696492	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9989639901696303	WITHOUT_CLASSIFICATION	0.0010360098303696492	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9989639901696303	WITHOUT_CLASSIFICATION	0.0010360098303696492	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9989639901696303	WITHOUT_CLASSIFICATION	0.0010360098303696492	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9989639901696303	WITHOUT_CLASSIFICATION	0.0010360098303696492	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9989639901696303	WITHOUT_CLASSIFICATION	0.0010360098303696492	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9989639901696303	WITHOUT_CLASSIFICATION	0.0010360098303696492	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9989639901696303	WITHOUT_CLASSIFICATION	0.0010360098303696492	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9989639901696303	WITHOUT_CLASSIFICATION	0.0010360098303696492	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9989639901696303	WITHOUT_CLASSIFICATION	0.0010360098303696492	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9989639901696303	WITHOUT_CLASSIFICATION	0.0010360098303696492	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9989639901696303	WITHOUT_CLASSIFICATION	0.0010360098303696492	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9989639901696303	WITHOUT_CLASSIFICATION	0.0010360098303696492	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9989639901696303	WITHOUT_CLASSIFICATION	0.0010360098303696492	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9989639901696303	WITHOUT_CLASSIFICATION	0.0010360098303696492	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9989639901696303	WITHOUT_CLASSIFICATION	0.0010360098303696492	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9989639901696303	WITHOUT_CLASSIFICATION	0.0010360098303696492	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9989639901696303	WITHOUT_CLASSIFICATION	0.0010360098303696492	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9989639901696303	WITHOUT_CLASSIFICATION	0.0010360098303696492	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9989639901696303	WITHOUT_CLASSIFICATION	0.0010360098303696492	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9989639901696303	WITHOUT_CLASSIFICATION	0.0010360098303696492	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9989639901696303	WITHOUT_CLASSIFICATION	0.0010360098303696492	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9989639901696303	WITHOUT_CLASSIFICATION	0.0010360098303696492	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9989639901696303	WITHOUT_CLASSIFICATION	0.0010360098303696492	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9989639901696303	WITHOUT_CLASSIFICATION	0.0010360098303696492	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9989639901696303	WITHOUT_CLASSIFICATION	0.0010360098303696492	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9989639901696303	WITHOUT_CLASSIFICATION	0.0010360098303696492	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9989639901696303	WITHOUT_CLASSIFICATION	0.0010360098303696492	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9989639901696303	WITHOUT_CLASSIFICATION	0.0010360098303696492	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9989639901696303	WITHOUT_CLASSIFICATION	0.0010360098303696492	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9989639901696303	WITHOUT_CLASSIFICATION	0.0010360098303696492	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9989639901696303	WITHOUT_CLASSIFICATION	0.0010360098303696492	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9989639901696303	WITHOUT_CLASSIFICATION	0.0010360098303696492	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9989639901696303	WITHOUT_CLASSIFICATION	0.0010360098303696492	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9989639901696303	WITHOUT_CLASSIFICATION	0.0010360098303696492	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9989639901696303	WITHOUT_CLASSIFICATION	0.0010360098303696492	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9989639901696303	WITHOUT_CLASSIFICATION	0.0010360098303696492	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9989639901696303	WITHOUT_CLASSIFICATION	0.0010360098303696492	DEFECT
// Define a class loader that looks up classes using the URLs or the parent class loader, // and failing those, tries to look up the class in each bundle in the running JVM. //	WITHOUT_CLASSIFICATION	0.9999984922871483	WITHOUT_CLASSIFICATION	1.5077128515992552E-6	DEFECT
// EATM in JDK 1.4 there will be an indexOf on StringBuffer. //	DEFECT	0.9997950558858556	WITHOUT_CLASSIFICATION	2.0494411414434795E-4	DEFECT
// line comments at the end of annotations are not a part of the range of annotation // TODO is not including line comments at the end of annotations a bug?	DEFECT	0.9970748660978069	WITHOUT_CLASSIFICATION	0.0029251339021930498	DEFECT
// EATM must fix isSet bits.	DEFECT	0.9999685146586754	WITHOUT_CLASSIFICATION	3.1485341324665466E-5	DEFECT
// EATM must fix isSet bits.	DEFECT	0.9999685146586754	WITHOUT_CLASSIFICATION	3.1485341324665466E-5	DEFECT
// Bug 124306: we should rely on XMLCalendar to normalize Dave value, to ensure that all Date value // fields are taken into account.	DEFECT	0.9892466018489325	WITHOUT_CLASSIFICATION	0.010753398151067543	DEFECT
// is this an error???	DEFECT	0.9999957006978781	WITHOUT_CLASSIFICATION	4.299302121903908E-6	DEFECT
// is this an error???	DEFECT	0.9999957006978781	WITHOUT_CLASSIFICATION	4.299302121903908E-6	DEFECT
//FB Won't compile with VAJ or NO_JIKES  //FB Object adapter = adapterFactory.adapt(mapping);	DEFECT	0.9993366306941531	WITHOUT_CLASSIFICATION	6.633693058468891E-4	DEFECT
