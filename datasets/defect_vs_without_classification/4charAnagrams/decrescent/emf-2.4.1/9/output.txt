// Delete the ActionContributionItems with matching action. //	WITHOUT_CLASSIFICATION	0.9999992433698369	WITHOUT_CLASSIFICATION	7.566301630810988E-7	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999868610285303	WITHOUT_CLASSIFICATION	1.313897146968343E-5	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.999999600561112	WITHOUT_CLASSIFICATION	3.994388879112048E-7	DEFECT
// Recompute the read only state. //	WITHOUT_CLASSIFICATION	0.9999993280125071	WITHOUT_CLASSIFICATION	6.71987492960909E-7	DEFECT
// Refresh any actions that may become enabled or disabled. //	WITHOUT_CLASSIFICATION	0.9995188432917116	WITHOUT_CLASSIFICATION	4.8115670828836204E-4	DEFECT
// Create the command stack that will notify this editor as commands are executed. //	WITHOUT_CLASSIFICATION	0.9999461124413709	WITHOUT_CLASSIFICATION	5.388755862904906E-5	DEFECT
// Add a listener to set the most recent command's affected objects to be the selection of the viewer with focus. //	WITHOUT_CLASSIFICATION	0.9999999597385243	WITHOUT_CLASSIFICATION	4.026147563547315E-8	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999929610569948	WITHOUT_CLASSIFICATION	7.0389430052846595E-6	DEFECT
// Try to select the affected objects. //	WITHOUT_CLASSIFICATION	0.9999998986030357	WITHOUT_CLASSIFICATION	1.0139696431559008E-7	DEFECT
// Create the editing domain with a special command stack. //	WITHOUT_CLASSIFICATION	0.9999869806757452	WITHOUT_CLASSIFICATION	1.3019324254804886E-5	DEFECT
// Make sure it's okay. //	WITHOUT_CLASSIFICATION	0.9999986252800558	WITHOUT_CLASSIFICATION	1.3747199442327677E-6	DEFECT
// Create an adapter factory that yields item providers. //	WITHOUT_CLASSIFICATION	0.9999991003363037	WITHOUT_CLASSIFICATION	8.996636962705058E-7	DEFECT
// Try to select the items in the current content viewer of the editor. //	WITHOUT_CLASSIFICATION	0.9999991552130342	WITHOUT_CLASSIFICATION	8.447869657585118E-7	DEFECT
// If it is changing... //	WITHOUT_CLASSIFICATION	0.9997361297302313	WITHOUT_CLASSIFICATION	2.6387026976871266E-4	DEFECT
// Create the listener on demand. //	WITHOUT_CLASSIFICATION	0.9999997310578651	WITHOUT_CLASSIFICATION	2.6894213483641114E-7	DEFECT
// Stop listening to the old one. //	WITHOUT_CLASSIFICATION	0.9999997355183412	WITHOUT_CLASSIFICATION	2.644816587985987E-7	DEFECT
// Start listening to the new one. //	WITHOUT_CLASSIFICATION	0.9999999177328425	WITHOUT_CLASSIFICATION	8.226715749207845E-8	DEFECT
// Remember it. //	WITHOUT_CLASSIFICATION	0.9999962758245838	WITHOUT_CLASSIFICATION	3.7241754162057685E-6	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999929610569948	WITHOUT_CLASSIFICATION	7.0389430052846595E-6	DEFECT
// Set the editors selection based on the current viewer's selection. //	WITHOUT_CLASSIFICATION	0.999991786954058	WITHOUT_CLASSIFICATION	8.213045941994377E-6	DEFECT
// Load the resource through the editing domain. //	WITHOUT_CLASSIFICATION	0.9999977373359852	WITHOUT_CLASSIFICATION	2.2626640148208017E-6	DEFECT
// Create a page for the selection tree view. //	WITHOUT_CLASSIFICATION	0.9999994788731729	WITHOUT_CLASSIFICATION	5.211268270593276E-7	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9999920843219914	WITHOUT_CLASSIFICATION	7.915678008665397E-6	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9999920843219914	WITHOUT_CLASSIFICATION	7.915678008665397E-6	DEFECT
// Ensures that this editor will only display the page's tab // area if there are more than one page //	WITHOUT_CLASSIFICATION	0.9999998257709258	WITHOUT_CLASSIFICATION	1.7422907414198278E-7	DEFECT
// The content outline is just a tree. //	WITHOUT_CLASSIFICATION	0.9999999499798639	WITHOUT_CLASSIFICATION	5.002013609169084E-8	DEFECT
// This is the page for the list viewer //	WITHOUT_CLASSIFICATION	0.9999989326924343	WITHOUT_CLASSIFICATION	1.067307565728153E-6	DEFECT
// This is the page for the tree viewer //	WITHOUT_CLASSIFICATION	0.9999827936617132	WITHOUT_CLASSIFICATION	1.7206338286831904E-5	DEFECT
// This is the page for the table viewer. //	WITHOUT_CLASSIFICATION	0.9999989364039839	WITHOUT_CLASSIFICATION	1.0635960161164573E-6	DEFECT
// This is the page for the table tree viewer. //	WITHOUT_CLASSIFICATION	0.9999975311966621	WITHOUT_CLASSIFICATION	2.46880333789616E-6	DEFECT
// Make sure our popups work. //	WITHOUT_CLASSIFICATION	0.9999835615717634	WITHOUT_CLASSIFICATION	1.6438428236646618E-5	DEFECT
// Select the root object in the view. //	WITHOUT_CLASSIFICATION	0.9999806077227303	WITHOUT_CLASSIFICATION	1.9392277269556154E-5	DEFECT
// Listen to selection so that we can handle it is a special way. //	WITHOUT_CLASSIFICATION	0.9999993623902783	WITHOUT_CLASSIFICATION	6.376097216545764E-7	DEFECT
// This ensures that we handle selections correctly. //	WITHOUT_CLASSIFICATION	0.9993812724027106	WITHOUT_CLASSIFICATION	6.187275972893944E-4	DEFECT
// Set the selection to the widget. //	WITHOUT_CLASSIFICATION	0.9999790939770926	WITHOUT_CLASSIFICATION	2.0906022907384546E-5	DEFECT
// Save only resources that have actually changed. //	WITHOUT_CLASSIFICATION	0.9999946505650742	WITHOUT_CLASSIFICATION	5.349434925840214E-6	DEFECT
// Do the work within an operation because this is a long running activity that modifies the workbench. //	WITHOUT_CLASSIFICATION	0.9999975758091426	WITHOUT_CLASSIFICATION	2.4241908573637416E-6	DEFECT
// Set the input to the widget. //	WITHOUT_CLASSIFICATION	0.9999932048009764	WITHOUT_CLASSIFICATION	6.795199023622225E-6	DEFECT
// Save the resources to the file system. //	WITHOUT_CLASSIFICATION	0.9999956244261219	WITHOUT_CLASSIFICATION	4.375573878079197E-6	DEFECT
// This runs the options, and shows progress. //	WITHOUT_CLASSIFICATION	0.9999869522601053	WITHOUT_CLASSIFICATION	1.3047739894719312E-5	DEFECT
// Refresh the necessary state. //	WITHOUT_CLASSIFICATION	0.999999566813694	WITHOUT_CLASSIFICATION	4.331863060705827E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.999999826515885	WITHOUT_CLASSIFICATION	1.7348411491497847E-7	DEFECT
// Create a default .jetsettings file file	WITHOUT_CLASSIFICATION	0.999999989690635	WITHOUT_CLASSIFICATION	1.0309364945556377E-8	DEFECT
// Something went wrong that shouldn't. //	WITHOUT_CLASSIFICATION	0.9987759713117987	WITHOUT_CLASSIFICATION	0.0012240286882012738	DEFECT
// Set the new variables. //	WITHOUT_CLASSIFICATION	0.9999999420708743	WITHOUT_CLASSIFICATION	5.792912576102925E-8	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.ecore.util.ExtendedMetaData#getPackage(java.lang.String)   */	WITHOUT_CLASSIFICATION	0.9999999999913837	WITHOUT_CLASSIFICATION	8.616429781016281E-12	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.99998644406869	WITHOUT_CLASSIFICATION	1.3555931310101503E-5	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999995972496601	WITHOUT_CLASSIFICATION	4.0275033974482523E-7	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999827188826	WITHOUT_CLASSIFICATION	1.7281117422851505E-8	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$	WITHOUT_CLASSIFICATION	0.9999877952066473	WITHOUT_CLASSIFICATION	1.2204793352697597E-5	DEFECT
//Ecore2XMLResourceFactoryImpl	WITHOUT_CLASSIFICATION	0.9999931363328944	WITHOUT_CLASSIFICATION	6.86366710561071E-6	DEFECT
/**   * The switch that delegates to the <code>createXXX</code> methods.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9999999008203482	WITHOUT_CLASSIFICATION	9.917965187179749E-8	DEFECT
//Ecore2XMLAdapterFactory	WITHOUT_CLASSIFICATION	0.9998722907791548	WITHOUT_CLASSIFICATION	1.2770922084514165E-4	DEFECT
//Ecore2XMLSwitch	WITHOUT_CLASSIFICATION	0.9999227133267294	WITHOUT_CLASSIFICATION	7.728667327057576E-5	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.9999999772821485	WITHOUT_CLASSIFICATION	2.2717851443933376E-8	DEFECT
//Ecore2XMLResourceFactoryImpl	WITHOUT_CLASSIFICATION	0.9999931363328944	WITHOUT_CLASSIFICATION	6.86366710561071E-6	DEFECT
//FunctionNamePairImpl	WITHOUT_CLASSIFICATION	0.9999934106553956	WITHOUT_CLASSIFICATION	6.589344604341886E-6	DEFECT
//MappingFactoryImpl	WITHOUT_CLASSIFICATION	0.9999667466802056	WITHOUT_CLASSIFICATION	3.325331979444943E-5	DEFECT
//ComplexTypeConverterImpl	WITHOUT_CLASSIFICATION	0.9999706830221082	WITHOUT_CLASSIFICATION	2.931697789185213E-5	DEFECT
//MappingHelperImpl	WITHOUT_CLASSIFICATION	0.9999912141095318	WITHOUT_CLASSIFICATION	8.785890468128446E-6	DEFECT
//MappingStrategyImpl	WITHOUT_CLASSIFICATION	0.9999874109362729	WITHOUT_CLASSIFICATION	1.2589063727176794E-5	DEFECT
//FunctionPairImpl	WITHOUT_CLASSIFICATION	0.9999923106030723	WITHOUT_CLASSIFICATION	7.689396927672116E-6	DEFECT
// Initialize simple dependencies	WITHOUT_CLASSIFICATION	0.9999998628457445	WITHOUT_CLASSIFICATION	1.3715425542933645E-7	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.9999995366025851	WITHOUT_CLASSIFICATION	4.6339741494588786E-7	DEFECT
// Mark meta-data to indicate it can't be changed	WITHOUT_CLASSIFICATION	0.99999860427837	WITHOUT_CLASSIFICATION	1.3957216301158224E-6	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.999999891557245	WITHOUT_CLASSIFICATION	1.0844275502500757E-7	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.999999382397121	WITHOUT_CLASSIFICATION	6.176028789009124E-7	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.9999993290912625	WITHOUT_CLASSIFICATION	6.709087374268461E-7	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.9999978849235671	WITHOUT_CLASSIFICATION	2.1150764329847075E-6	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.9999996570524105	WITHOUT_CLASSIFICATION	3.429475895124151E-7	DEFECT
// Initialize classes and features; add operations and parameters	WITHOUT_CLASSIFICATION	0.999997918294812	WITHOUT_CLASSIFICATION	2.0817051879083706E-6	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.9999999647879461	WITHOUT_CLASSIFICATION	3.5212053998147653E-8	DEFECT
//MappingImpl	WITHOUT_CLASSIFICATION	0.9999719343196822	WITHOUT_CLASSIFICATION	2.8065680317883364E-5	DEFECT
// Remove zero width non-breaking space, which may be used as a byte order marker,  // and may be ignored according to the Unicode FAQ: http://www.unicode.org/unicode/faq/utf_bom.html#38 //	WITHOUT_CLASSIFICATION	0.9999994047023559	WITHOUT_CLASSIFICATION	5.952976441303817E-7	DEFECT
//TypeConverterImpl	WITHOUT_CLASSIFICATION	0.9999848829048912	WITHOUT_CLASSIFICATION	1.5117095108794061E-5	DEFECT
// Barring a better result, this will be the result. //	WITHOUT_CLASSIFICATION	0.9804463766098819	WITHOUT_CLASSIFICATION	0.019553623390118152	DEFECT
// If the intersection is empty, i.e., no ancestor is in the mapping... //	WITHOUT_CLASSIFICATION	0.9999974938947906	WITHOUT_CLASSIFICATION	2.5061052092809568E-6	DEFECT
// If this mapping isn't a parent, it's children definitely won't be either. //	WITHOUT_CLASSIFICATION	0.997911781106592	WITHOUT_CLASSIFICATION	0.0020882188934079867	DEFECT
// Make sure the collections aren't identical... //	WITHOUT_CLASSIFICATION	0.9990815251164116	WITHOUT_CLASSIFICATION	9.184748835884844E-4	DEFECT
//FB used to check for parent != null. // Need to find the top most model object not including the resource. // parent instanceof Eobject only checks for trees in model object space.	WITHOUT_CLASSIFICATION	0.9999640386086351	WITHOUT_CLASSIFICATION	3.5961391364848044E-5	DEFECT
// printAdapters();	WITHOUT_CLASSIFICATION	0.9999999612719035	WITHOUT_CLASSIFICATION	3.872809641992977E-8	DEFECT
//MappingRootImpl	WITHOUT_CLASSIFICATION	0.999966362179132	WITHOUT_CLASSIFICATION	3.36378208679366E-5	DEFECT
// TODO	WITHOUT_CLASSIFICATION	0.999446971900518	WITHOUT_CLASSIFICATION	5.530280994820118E-4	DEFECT
// Try to select the items in the current content viewer of the editor. //	WITHOUT_CLASSIFICATION	0.9999991552130342	WITHOUT_CLASSIFICATION	8.447869657585118E-7	DEFECT
// If it is changing... //	WITHOUT_CLASSIFICATION	0.9997361297302313	WITHOUT_CLASSIFICATION	2.6387026976871266E-4	DEFECT
// Create the listener on demand. //	WITHOUT_CLASSIFICATION	0.9999997310578651	WITHOUT_CLASSIFICATION	2.6894213483641114E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.999999826515885	WITHOUT_CLASSIFICATION	1.7348411491497847E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.999999826515885	WITHOUT_CLASSIFICATION	1.7348411491497847E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.999999826515885	WITHOUT_CLASSIFICATION	1.7348411491497847E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.999999826515885	WITHOUT_CLASSIFICATION	1.7348411491497847E-7	DEFECT
// VAJ kludge //	WITHOUT_CLASSIFICATION	0.9999949823088621	WITHOUT_CLASSIFICATION	5.017691137839747E-6	DEFECT
// This just notifies those things that are affected by the selection. //	WITHOUT_CLASSIFICATION	0.9999976394683844	WITHOUT_CLASSIFICATION	2.3605316156064037E-6	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999995972496601	WITHOUT_CLASSIFICATION	4.0275033974482523E-7	DEFECT
// Stop listening to the old one. //	WITHOUT_CLASSIFICATION	0.9999997355183412	WITHOUT_CLASSIFICATION	2.644816587985987E-7	DEFECT
// Start listening to the new one. //	WITHOUT_CLASSIFICATION	0.9999999177328425	WITHOUT_CLASSIFICATION	8.226715749207845E-8	DEFECT
// Remember it. //	WITHOUT_CLASSIFICATION	0.9999962758245838	WITHOUT_CLASSIFICATION	3.7241754162057685E-6	DEFECT
/* EATM getDecoratedAdapterFactory().*/	WITHOUT_CLASSIFICATION	0.9999928611411714	WITHOUT_CLASSIFICATION	7.1388588286203615E-6	DEFECT
/* EATM getDecoratedAdapterFactory().*/	WITHOUT_CLASSIFICATION	0.9999928611411714	WITHOUT_CLASSIFICATION	7.1388588286203615E-6	DEFECT
/* EATM getDecoratedAdapterFactory().*/	WITHOUT_CLASSIFICATION	0.9999928611411714	WITHOUT_CLASSIFICATION	7.1388588286203615E-6	DEFECT
// Add a listener to set the most recent command's affected objects to be the selection of the viewer with focus. //	WITHOUT_CLASSIFICATION	0.9999999597385243	WITHOUT_CLASSIFICATION	4.026147563547315E-8	DEFECT
// I assume that the editorInput is a file object. //	WITHOUT_CLASSIFICATION	0.9999963690387336	WITHOUT_CLASSIFICATION	3.630961266322672E-6	DEFECT
// Handle the creation of the model from the modelFile. //	WITHOUT_CLASSIFICATION	0.9999999755542168	WITHOUT_CLASSIFICATION	2.444578325848193E-8	DEFECT
// Restore the persistent command stack, if need be. //	WITHOUT_CLASSIFICATION	0.999999476022859	WITHOUT_CLASSIFICATION	5.239771410433064E-7	DEFECT
// Create a page for the selection tree view. //	WITHOUT_CLASSIFICATION	0.9999994788731729	WITHOUT_CLASSIFICATION	5.211268270593276E-7	DEFECT
// Set up the tree viewer. //	WITHOUT_CLASSIFICATION	0.9999993964656559	WITHOUT_CLASSIFICATION	6.035343441100287E-7	DEFECT
// Make sure our popups work. //	WITHOUT_CLASSIFICATION	0.9999835615717634	WITHOUT_CLASSIFICATION	1.6438428236646618E-5	DEFECT
// Select the root object in the view. //	WITHOUT_CLASSIFICATION	0.9999806077227303	WITHOUT_CLASSIFICATION	1.9392277269556154E-5	DEFECT
// This ensures that we handle selections correctly. //	WITHOUT_CLASSIFICATION	0.9993812724027106	WITHOUT_CLASSIFICATION	6.187275972893944E-4	DEFECT
// Do the work within an operation because this is a long running activity that modifies the workbench. //	WITHOUT_CLASSIFICATION	0.9999975758091426	WITHOUT_CLASSIFICATION	2.4241908573637416E-6	DEFECT
// Load the resource through the editing domain. // This will create a context and associate it with the resource set. //	WITHOUT_CLASSIFICATION	0.999951586485319	WITHOUT_CLASSIFICATION	4.84135146810908E-5	DEFECT
// The one object in the resource's extent should be the root object. //	WITHOUT_CLASSIFICATION	0.99998275189625	WITHOUT_CLASSIFICATION	1.7248103750049308E-5	DEFECT
// Save the resource to the file system. //	WITHOUT_CLASSIFICATION	0.9999991266030321	WITHOUT_CLASSIFICATION	8.733969679842093E-7	DEFECT
// Update the workbench's knowledge of the file's contents. //	WITHOUT_CLASSIFICATION	0.9999991583538586	WITHOUT_CLASSIFICATION	8.416461415314225E-7	DEFECT
// Add the binding to the provided hash table: //	WITHOUT_CLASSIFICATION	0.9999942410480795	WITHOUT_CLASSIFICATION	5.75895192054463E-6	DEFECT
// Refresh the necessary state. //	WITHOUT_CLASSIFICATION	0.999999566813694	WITHOUT_CLASSIFICATION	4.331863060705827E-7	DEFECT
// Something went wrong that shouldn't. //	WITHOUT_CLASSIFICATION	0.9987759713117987	WITHOUT_CLASSIFICATION	0.0012240286882012738	DEFECT
// Parse as an attribute=value:	WITHOUT_CLASSIFICATION	0.9999997223841128	WITHOUT_CLASSIFICATION	2.776158872587543E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999997500428611	WITHOUT_CLASSIFICATION	2.499571388153945E-7	DEFECT
// Create the mapping domain with a special command stack. // 	WITHOUT_CLASSIFICATION	0.9998654943982824	WITHOUT_CLASSIFICATION	1.3450560171759108E-4	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999997905852969	WITHOUT_CLASSIFICATION	2.0941470312362812E-7	DEFECT
// Doing this just makes focus go to the default control, not the control that last has focus. // // super.setFocus();	WITHOUT_CLASSIFICATION	0.999999826306558	WITHOUT_CLASSIFICATION	1.7369344199773017E-7	DEFECT
// If the object is an input or output object, then use it. //	WITHOUT_CLASSIFICATION	0.9999998609529734	WITHOUT_CLASSIFICATION	1.390470265355976E-7	DEFECT
// Process the children recursively. //	WITHOUT_CLASSIFICATION	0.9999979264547295	WITHOUT_CLASSIFICATION	2.073545270497415E-6	DEFECT
// Look for a single-char work delimiter: //	WITHOUT_CLASSIFICATION	0.9999945784716132	WITHOUT_CLASSIFICATION	5.421528386776616E-6	DEFECT
// oldWidth = table.getClientArea().width;	WITHOUT_CLASSIFICATION	0.9999992434430748	WITHOUT_CLASSIFICATION	7.565569252425181E-7	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999995972496601	WITHOUT_CLASSIFICATION	4.0275033974482523E-7	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999827188826	WITHOUT_CLASSIFICATION	1.7281117422851505E-8	DEFECT
//MappingPackage ePackage = ((ComplexTypeConverter)object).ePackageMapping();	WITHOUT_CLASSIFICATION	0.9999965841690226	WITHOUT_CLASSIFICATION	3.4158309772623206E-6	DEFECT
// This is for the in2out feature. //	WITHOUT_CLASSIFICATION	0.9999914693896469	WITHOUT_CLASSIFICATION	8.530610353096324E-6	DEFECT
// This is for the out2in feature. //	WITHOUT_CLASSIFICATION	0.9999880618329754	WITHOUT_CLASSIFICATION	1.1938167024662235E-5	DEFECT
// HGD::fireNotifyChanged(msg.getNotifier(), msg.getEventType(), msg.getFeature(), msg.getOldValue(), msg.getNewValue(), msg.getPosition());	WITHOUT_CLASSIFICATION	0.9999999856469584	WITHOUT_CLASSIFICATION	1.4353041704626436E-8	DEFECT
// This is for the in2out feature. //	WITHOUT_CLASSIFICATION	0.9999914693896469	WITHOUT_CLASSIFICATION	8.530610353096324E-6	DEFECT
// This is for the topDown feature. //	WITHOUT_CLASSIFICATION	0.9999672636873839	WITHOUT_CLASSIFICATION	3.273631261615202E-5	DEFECT
//MappingPackage ePackage = ((MappingRoot)msg.getNotifier()).ePackageMapping();	WITHOUT_CLASSIFICATION	0.9999999045928119	WITHOUT_CLASSIFICATION	9.54071882326714E-8	DEFECT
//hgd::fireNotifyChanged(msg.getNotifier(), msg.getEventType(), msg.getStructuralFeature(), msg.getOldValue(), msg.getNewValue(), msg.getPosition());	WITHOUT_CLASSIFICATION	0.9999999938638412	WITHOUT_CLASSIFICATION	6.136158851488953E-9	DEFECT
//MappingPackage ePackage = ((FunctionNamePair)object).ePackageMapping();	WITHOUT_CLASSIFICATION	0.9999995439805345	WITHOUT_CLASSIFICATION	4.5601946550776115E-7	DEFECT
// This is for the in2out feature. //	WITHOUT_CLASSIFICATION	0.9999914693896469	WITHOUT_CLASSIFICATION	8.530610353096324E-6	DEFECT
// This is for the out2in feature. //	WITHOUT_CLASSIFICATION	0.9999880618329754	WITHOUT_CLASSIFICATION	1.1938167024662235E-5	DEFECT
//MappingPackage ePackage = ((FunctionNamePair)msg.getNotifier()).ePackageMapping();	WITHOUT_CLASSIFICATION	0.9999998319299194	WITHOUT_CLASSIFICATION	1.6807008064675502E-7	DEFECT
// HGD::fireNotifyChanged(msg.getNotifier(), msg.getEventType(), msg.getStructuralFeature(), msg.getOldValue(), msg.getNewValue(), msg.getPosition());	WITHOUT_CLASSIFICATION	0.9999999979290672	WITHOUT_CLASSIFICATION	2.070932702714135E-9	DEFECT
//MappingPackage ePackage = ((FunctionPair)object).ePackageMapping();	WITHOUT_CLASSIFICATION	0.9999993930782181	WITHOUT_CLASSIFICATION	6.069217818611212E-7	DEFECT
//MappingPackage ePackage = ((FunctionPair)msg.getNotifier()).ePackageMapping();	WITHOUT_CLASSIFICATION	0.9999998897298379	WITHOUT_CLASSIFICATION	1.1027016203906627E-7	DEFECT
//HGD::fireNotifyChanged(msg.getNotifier(), msg.getEventType(), msg.getStructuralFeature(), msg.getOldValue(), msg.getNewValue(), msg.getPosition());	WITHOUT_CLASSIFICATION	0.9999999936541504	WITHOUT_CLASSIFICATION	6.345849574807458E-9	DEFECT
// This is here only to support deprecated adapt(object) rather than adapt(object, Interface.class). // // supportedTypes.add(null);	WITHOUT_CLASSIFICATION	0.9999944012825954	WITHOUT_CLASSIFICATION	5.59871740464565E-6	DEFECT
// supportedTypes.add(IUpdateableItemText.class);	WITHOUT_CLASSIFICATION	0.99999968314048	WITHOUT_CLASSIFICATION	3.1685951989229394E-7	DEFECT
//FB ????? 	WITHOUT_CLASSIFICATION	0.9999802880936058	WITHOUT_CLASSIFICATION	1.9711906394241534E-5	DEFECT
// This is for the helper feature. //	WITHOUT_CLASSIFICATION	0.9999351825408435	WITHOUT_CLASSIFICATION	6.481745915654196E-5	DEFECT
// This is for the typeMapping feature. //	WITHOUT_CLASSIFICATION	0.9998615271885296	WITHOUT_CLASSIFICATION	1.384728114703617E-4	DEFECT
//FIX:::	WITHOUT_CLASSIFICATION	0.9981912255345338	WITHOUT_CLASSIFICATION	0.0018087744654662283	DEFECT
//hgd::fireNotifyChanged(msg.getNotifier(), msg.getEventType(), msg.getFeature(), msg.getOldValue(), msg.getNewValue(), msg.getPosition());	WITHOUT_CLASSIFICATION	0.9999999574720405	WITHOUT_CLASSIFICATION	4.252795934064156E-8	DEFECT
//fireNotifyChanged(msg.getNotifier(), msg.getEventType(), msg.getFeature(), msg.getOldValue(), msg.getNewValue(), msg.getPosition());	WITHOUT_CLASSIFICATION	0.9999999830033484	WITHOUT_CLASSIFICATION	1.699665157469011E-8	DEFECT
/**   * The switch that delegates to the <code>createXXX</code> methods.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9999999008203482	WITHOUT_CLASSIFICATION	9.917965187179749E-8	DEFECT
// Create a resource set and load the model file into it. //	WITHOUT_CLASSIFICATION	0.9999999951800802	WITHOUT_CLASSIFICATION	4.8199197838563225E-9	DEFECT
// This is the path of the target directory. //	WITHOUT_CLASSIFICATION	0.9999991602567606	WITHOUT_CLASSIFICATION	8.397432394157762E-7	DEFECT
// Break the cycle. //	WITHOUT_CLASSIFICATION	0.9998551361277738	WITHOUT_CLASSIFICATION	1.4486387222619317E-4	DEFECT
//MappingAdapterFactory	WITHOUT_CLASSIFICATION	0.9999780866893253	WITHOUT_CLASSIFICATION	2.191331067472659E-5	DEFECT
// This ensures that we are dealing with actual MOF objects. //	WITHOUT_CLASSIFICATION	0.9999992147659119	WITHOUT_CLASSIFICATION	7.852340880349911E-7	DEFECT
//MappingSwitch	WITHOUT_CLASSIFICATION	0.9999900217102334	WITHOUT_CLASSIFICATION	9.978289766623106E-6	DEFECT
// This is the name of the model. //	WITHOUT_CLASSIFICATION	0.9999733537590358	WITHOUT_CLASSIFICATION	2.664624096410795E-5	DEFECT
// Create a resource set and load the model file into it. //	WITHOUT_CLASSIFICATION	0.9999999951800802	WITHOUT_CLASSIFICATION	4.8199197838563225E-9	DEFECT
// This is the path of the target directory. //	WITHOUT_CLASSIFICATION	0.9999991602567606	WITHOUT_CLASSIFICATION	8.397432394157762E-7	DEFECT
// This is to handle a genmodel produced by rose2genmodel. //	WITHOUT_CLASSIFICATION	0.9999751530805192	WITHOUT_CLASSIFICATION	2.4846919480699803E-5	DEFECT
// This is to handle a genmodel produced by rose2genmodel. //	WITHOUT_CLASSIFICATION	0.9999751530805192	WITHOUT_CLASSIFICATION	2.4846919480699803E-5	DEFECT
// Clean up any old project information. //	WITHOUT_CLASSIFICATION	0.9999864619811066	WITHOUT_CLASSIFICATION	1.3538018893372083E-5	DEFECT
// Remove variables since the plugin.xml should provide the complete path information. //	WITHOUT_CLASSIFICATION	0.9773807691915908	WITHOUT_CLASSIFICATION	0.022619230808409233	DEFECT
// Look for a likely plugin name. //	WITHOUT_CLASSIFICATION	0.9999520313062412	WITHOUT_CLASSIFICATION	4.79686937588865E-5	DEFECT
// Clean up any old project information. //	WITHOUT_CLASSIFICATION	0.9999864619811066	WITHOUT_CLASSIFICATION	1.3538018893372083E-5	DEFECT
// Remove variables since the plugin.xml should provide the complete path information. //	WITHOUT_CLASSIFICATION	0.9773807691915908	WITHOUT_CLASSIFICATION	0.022619230808409233	DEFECT
// Consult the generator option for backwards compatibility. //	WITHOUT_CLASSIFICATION	0.9999988367218063	WITHOUT_CLASSIFICATION	1.1632781936543456E-6	DEFECT
// Apply a redirection pattern, if specified. //	WITHOUT_CLASSIFICATION	0.9999412603846947	WITHOUT_CLASSIFICATION	5.873961530543664E-5	DEFECT
// If the target is read-only, we can ask the platform to release it. //	WITHOUT_CLASSIFICATION	0.9999999978617666	WITHOUT_CLASSIFICATION	2.138233334127685E-9	DEFECT
// Multiple jet directives.	WITHOUT_CLASSIFICATION	0.9999999769721521	WITHOUT_CLASSIFICATION	2.30278478842052E-8	DEFECT
// If the target is read-only, we can ask the platform to release it. //	WITHOUT_CLASSIFICATION	0.9999999978617666	WITHOUT_CLASSIFICATION	2.138233334127685E-9	DEFECT
// Merge with an existing file. //	WITHOUT_CLASSIFICATION	0.9999999549039782	WITHOUT_CLASSIFICATION	4.509602170872931E-8	DEFECT
// If the target is read-only, we can ask the platform to release it, and it may be updated in the process. //	WITHOUT_CLASSIFICATION	0.9999999996705965	WITHOUT_CLASSIFICATION	3.2940357750565304E-10	DEFECT
// If the target is read-only, we can ask the platform to release it, and it may be updated in the process. //	WITHOUT_CLASSIFICATION	0.9999999996705965	WITHOUT_CLASSIFICATION	3.2940357750565304E-10	DEFECT
// Create a code formatter for this compilation unit, if needed. //	WITHOUT_CLASSIFICATION	0.9999975305626976	WITHOUT_CLASSIFICATION	2.469437302329527E-6	DEFECT
// If a newline from the previous character data remains, add a generator for it. //	WITHOUT_CLASSIFICATION	0.9999998355510699	WITHOUT_CLASSIFICATION	1.6444893019571316E-7	DEFECT
// If we can't determine it by reading the file, // look at the preferences instead.	WITHOUT_CLASSIFICATION	0.9999431170058487	WITHOUT_CLASSIFICATION	5.6882994151373916E-5	DEFECT
// Since we're invoking plugged-in code, we must be defensive against cycles. //	WITHOUT_CLASSIFICATION	0.9999999476287231	WITHOUT_CLASSIFICATION	5.237127683022285E-8	DEFECT
// Compute the GeneratorData for the given object and its children, then for the parents of the given object. //	WITHOUT_CLASSIFICATION	0.9999997875669444	WITHOUT_CLASSIFICATION	2.1243305569999287E-7	DEFECT
// Combine the two lists. //	WITHOUT_CLASSIFICATION	0.9999996675962272	WITHOUT_CLASSIFICATION	3.3240377278590815E-7	DEFECT
// Give all generator adapters the chance to do setup work. //	WITHOUT_CLASSIFICATION	0.9999990721851391	WITHOUT_CLASSIFICATION	9.278148610336367E-7	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999998254076871	WITHOUT_CLASSIFICATION	1.7459231293011581E-7	DEFECT
// Give all generator adapters the chance to do tear down. //	WITHOUT_CLASSIFICATION	0.999999196354422	WITHOUT_CLASSIFICATION	8.0364557801251E-7	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.9999891348511906	WITHOUT_CLASSIFICATION	1.0865148809466358E-5	DEFECT
// returns the package in which this enum literal is defined // returns the name of the enum literal get method in the package interface	WITHOUT_CLASSIFICATION	0.9999999998988413	WITHOUT_CLASSIFICATION	1.0115876647325485E-10	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999998254076871	WITHOUT_CLASSIFICATION	1.7459231293011581E-7	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.9999891348511906	WITHOUT_CLASSIFICATION	1.0865148809466358E-5	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999998254076871	WITHOUT_CLASSIFICATION	1.7459231293011581E-7	DEFECT
// String getCapPackageID(); // Includes features in other packages that delegate to those in this one.	WITHOUT_CLASSIFICATION	0.9999996358023286	WITHOUT_CLASSIFICATION	3.6419767128780037E-7	DEFECT
// returns the package in which this feature is defined // returns the name of the feature get method in the package interface (e.g. Company_Name) // returns the name of the feature get method in the package interface (e.g. Xyz.eINSTANCE.getCompany_Name)	WITHOUT_CLASSIFICATION	0.9999999583885436	WITHOUT_CLASSIFICATION	4.161145628456787E-8	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999998254076871	WITHOUT_CLASSIFICATION	1.7459231293011581E-7	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999998254076871	WITHOUT_CLASSIFICATION	1.7459231293011581E-7	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999998254076871	WITHOUT_CLASSIFICATION	1.7459231293011581E-7	DEFECT
// // EMF.Editor generation //	WITHOUT_CLASSIFICATION	0.9999944342925297	WITHOUT_CLASSIFICATION	5.565707470316439E-6	DEFECT
// // Tests generation //	WITHOUT_CLASSIFICATION	0.9999996464637482	WITHOUT_CLASSIFICATION	3.535362518435666E-7	DEFECT
// boolean isGenerateEditPlugin(); // boolean isGenerateEditorPlugin();	WITHOUT_CLASSIFICATION	0.999999812574222	WITHOUT_CLASSIFICATION	1.8742577802216597E-7	DEFECT
//  Remove any non-Java dependencies from being added. //	WITHOUT_CLASSIFICATION	0.9999811085456207	WITHOUT_CLASSIFICATION	1.8891454379267236E-5	DEFECT
// This URI handler redirect the URI based on the mapping. //	WITHOUT_CLASSIFICATION	0.9998507372045964	WITHOUT_CLASSIFICATION	1.4926279540363553E-4	DEFECT
// There must be at least one match. //	WITHOUT_CLASSIFICATION	0.9999983495620244	WITHOUT_CLASSIFICATION	1.650437975595744E-6	DEFECT
// Ignore if there is not substantial change. //	WITHOUT_CLASSIFICATION	0.9999999779411346	WITHOUT_CLASSIFICATION	2.205886539944195E-8	DEFECT
// Do allow an existing build.properties to be overwritten, since it may have been created as part of an empty EMF project. // Use the existence of a plugin.xml as a guard against overwriting in a project that has already been generated. //	WITHOUT_CLASSIFICATION	0.9999997495111235	WITHOUT_CLASSIFICATION	2.504888766342679E-7	DEFECT
// Do allow an existing build.properties to be overwritten, since it may have been created as part of an empty EMF project. // Use the existence of a plugin.xml as a guard against overwriting in a project that has already been generated. //	WITHOUT_CLASSIFICATION	0.9999997495111235	WITHOUT_CLASSIFICATION	2.504888766342679E-7	DEFECT
// Do not allow an existing MANIFEST.MF to be overwritten, as the tests project is originally generated from scratch. //	WITHOUT_CLASSIFICATION	0.9999999449050393	WITHOUT_CLASSIFICATION	5.509496075548922E-8	DEFECT
// Do not allow an existing build.properties to be overwritten, as the tests project is originally generated from scratch. //	WITHOUT_CLASSIFICATION	0.999999922824039	WITHOUT_CLASSIFICATION	7.717596093869863E-8	DEFECT
//We are not generating the manifest file if the plugin.xml exists. //	WITHOUT_CLASSIFICATION	0.999987712533498	WITHOUT_CLASSIFICATION	1.2287466501846509E-5	DEFECT
// Use an alternate if we can't write to this one. //	WITHOUT_CLASSIFICATION	0.9999699387130936	WITHOUT_CLASSIFICATION	3.0061286906332624E-5	DEFECT
// J9 2.2 has problems assigning null to a Class variable. // 	WITHOUT_CLASSIFICATION	0.9999866585582964	WITHOUT_CLASSIFICATION	1.3341441703538147E-5	DEFECT
// Create the options model. //	WITHOUT_CLASSIFICATION	0.9999998789840371	WITHOUT_CLASSIFICATION	1.210159629973581E-7	DEFECT
//  Remove any non-Java dependencies from being added. //	WITHOUT_CLASSIFICATION	0.9999811085456207	WITHOUT_CLASSIFICATION	1.8891454379267236E-5	DEFECT
// Escape a string that will terminate the comment in which this will all be nested. //	WITHOUT_CLASSIFICATION	0.9999335886968937	WITHOUT_CLASSIFICATION	6.64113031062126E-5	DEFECT
// If it is an unqualified name, we will assume it refers to a type parameter, since we don't support default package. //	WITHOUT_CLASSIFICATION	0.9999999190384549	WITHOUT_CLASSIFICATION	8.096154518401681E-8	DEFECT
// Search the local scope for a resolution of the type parameter name. //	WITHOUT_CLASSIFICATION	0.9999981091265259	WITHOUT_CLASSIFICATION	1.8908734740350114E-6	DEFECT
// Check if we found a resolution for it. //	WITHOUT_CLASSIFICATION	0.999999487099873	WITHOUT_CLASSIFICATION	5.129001269715678E-7	DEFECT
// If not we'll erase it to java.lang.Object. //	WITHOUT_CLASSIFICATION	0.99999136687364	WITHOUT_CLASSIFICATION	8.633126360070748E-6	DEFECT
// Otherwise, recursively call ourselves to substitute it in context if necessary. //	WITHOUT_CLASSIFICATION	0.9999999896838526	WITHOUT_CLASSIFICATION	1.0316147387026503E-8	DEFECT
// Add back in the array indices if there are any. //	WITHOUT_CLASSIFICATION	0.999959453205431	WITHOUT_CLASSIFICATION	4.054679456902454E-5	DEFECT
// Just import the name or use it directly. //	WITHOUT_CLASSIFICATION	0.9999773045057735	WITHOUT_CLASSIFICATION	2.2695494226488096E-5	DEFECT
// We treat the feature as volatile if it is volatile itself or if it is  // a reference whose opposite end is volatile,  // unless that opposite volatile reference delegates to a feature map, // in which case, a full implementation of the references can be generated. //	WITHOUT_CLASSIFICATION	0.9999999512388531	WITHOUT_CLASSIFICATION	4.8761146952693534E-8	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.9999891348511906	WITHOUT_CLASSIFICATION	1.0865148809466358E-5	DEFECT
/////////////////////////////////  HEADLESS INVOCATION  /////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999991582918263	WITHOUT_CLASSIFICATION	8.417081736710067E-7	DEFECT
// for Ecore or something that explicitly extends it, we need to exclude // EObject, which is already handled by the default case	WITHOUT_CLASSIFICATION	0.9999999999202598	WITHOUT_CLASSIFICATION	7.974023948227919E-11	DEFECT
// We assume that the rootExtendsClass already implements it. //	WITHOUT_CLASSIFICATION	0.999999819922672	WITHOUT_CLASSIFICATION	1.8007732803569122E-7	DEFECT
// We assume that the rootExtendsClass already implements it. //	WITHOUT_CLASSIFICATION	0.999999819922672	WITHOUT_CLASSIFICATION	1.8007732803569122E-7	DEFECT
// If the flag will straddle two fields, bump it to the next one. //	WITHOUT_CLASSIFICATION	0.9999991617220052	WITHOUT_CLASSIFICATION	8.382779948287759E-7	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.9999891348511906	WITHOUT_CLASSIFICATION	1.0865148809466358E-5	DEFECT
// Ignore the exception.	WITHOUT_CLASSIFICATION	0.999999880423558	WITHOUT_CLASSIFICATION	1.1957644199480692E-7	DEFECT
// An interface should be abstract, but this makes sure of that fact. //	WITHOUT_CLASSIFICATION	0.999993227446167	WITHOUT_CLASSIFICATION	6.7725538329796575E-6	DEFECT
// Simple cases: no mix-ins for no inheritance or for a single base class. //	WITHOUT_CLASSIFICATION	0.9885320591283477	WITHOUT_CLASSIFICATION	0.011467940871652243	DEFECT
// If extending an interface, its mix-ins must be included, since there is no implementation to handle them. //	WITHOUT_CLASSIFICATION	0.9999999870596622	WITHOUT_CLASSIFICATION	1.2940337757857215E-8	DEFECT
// Mix-ins are everything after the base class. //	WITHOUT_CLASSIFICATION	0.99997559779201	WITHOUT_CLASSIFICATION	2.4402207990065554E-5	DEFECT
// If this is class has mixed content, the mixed feature should always be included, even if inherited, and come first. //	WITHOUT_CLASSIFICATION	0.9996661127446247	WITHOUT_CLASSIFICATION	3.338872553754034E-4	DEFECT
// Add all other create child features that this item provider is responsible for. //	WITHOUT_CLASSIFICATION	0.9999999359033354	WITHOUT_CLASSIFICATION	6.409666469922609E-8	DEFECT
// Many inherited methods must be overridden to handle this case. //	WITHOUT_CLASSIFICATION	0.9999999852228861	WITHOUT_CLASSIFICATION	1.4777113965547003E-8	DEFECT
// If this looks like a feature getter, a kind property will allow it to be recognized properly. //	WITHOUT_CLASSIFICATION	0.9998892008266966	WITHOUT_CLASSIFICATION	1.1079917330331784E-4	DEFECT
// Since we only use this right on an operation, we always want to include the keyType and valueType, and we never // want to qualify the property names. //	WITHOUT_CLASSIFICATION	0.999999998125247	WITHOUT_CLASSIFICATION	1.874752996852145E-9	DEFECT
// Type parameter casts can't be checked. //	WITHOUT_CLASSIFICATION	0.9999879496515917	WITHOUT_CLASSIFICATION	1.2050348408261051E-5	DEFECT
// If there are any arguments and they are not unbounded wildcards, casts can't be checked. //	WITHOUT_CLASSIFICATION	0.9999977603416789	WITHOUT_CLASSIFICATION	2.239658321138651E-6	DEFECT
// Optimize the performance of applying the import regular  // expressions locating the last import line //      	WITHOUT_CLASSIFICATION	0.9999996101959351	WITHOUT_CLASSIFICATION	3.898040649617334E-7	DEFECT
// Some XML types declare nebulous Object mappings. // They actually map to internal types that shouldn't be generated into code. //	WITHOUT_CLASSIFICATION	0.9708735417151335	WITHOUT_CLASSIFICATION	0.029126458284866534	DEFECT
// If there is a base XML or Ecore type, use one of the two corresponding built-in factories to create a value from the literal string. //	WITHOUT_CLASSIFICATION	0.9999885847975313	WITHOUT_CLASSIFICATION	1.1415202468694229E-5	DEFECT
// Get the Java literal expression for the value. //	WITHOUT_CLASSIFICATION	0.999999924534129	WITHOUT_CLASSIFICATION	7.546587092180294E-8	DEFECT
// Otherwise, produce an expression that uses the appropriate factory to create a value from the literal. //	WITHOUT_CLASSIFICATION	0.999999945007334	WITHOUT_CLASSIFICATION	5.499266592465933E-8	DEFECT
// If the base package isn't set but there is a parent package, us it's information instead. //	WITHOUT_CLASSIFICATION	0.9999989851417329	WITHOUT_CLASSIFICATION	1.0148582670558243E-6	DEFECT
// Add all classes from this package first, to guarantee they get the // simple names	WITHOUT_CLASSIFICATION	0.9999999877714953	WITHOUT_CLASSIFICATION	1.2228504613028378E-8	DEFECT
// Do this here because getExtendedMetaData() is used during initialization  // and the mappings are are populated the first time it's fetched // which will miss the packages we add as we initialize the tree. //	WITHOUT_CLASSIFICATION	0.9999989175315894	WITHOUT_CLASSIFICATION	1.0824684106438162E-6	DEFECT
// Set the mapper to build an XSD2EcoreMappingRoot, if available. //	WITHOUT_CLASSIFICATION	0.9999139030497722	WITHOUT_CLASSIFICATION	8.609695022768095E-5	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.9999891348511906	WITHOUT_CLASSIFICATION	1.0865148809466358E-5	DEFECT
// if there are no groups defined or matched, but the whole pattern matches, // then markup nodes with pattern name //	WITHOUT_CLASSIFICATION	0.9999999442367216	WITHOUT_CLASSIFICATION	5.576327839947803E-8	DEFECT
// Restore original resource URI values. //	WITHOUT_CLASSIFICATION	0.999997947633159	WITHOUT_CLASSIFICATION	2.0523668409135835E-6	DEFECT
// The "suffix" can actually be a substitution pattern for the package name. //	WITHOUT_CLASSIFICATION	0.9999805421939819	WITHOUT_CLASSIFICATION	1.945780601803378E-5	DEFECT
// Walk up the superpackages, collecting the package names. // Because empty packages are ommitted from the GenModel, we need to walk up the EPackages. //	WITHOUT_CLASSIFICATION	0.9999987258205323	WITHOUT_CLASSIFICATION	1.2741794677438762E-6	DEFECT
// Any features that delegate to features in this package. //	WITHOUT_CLASSIFICATION	0.9999974348919103	WITHOUT_CLASSIFICATION	2.565108089663335E-6	DEFECT
// If there are delegated features, add only those that aren't already in this package to the end of the list. //	WITHOUT_CLASSIFICATION	0.9999989969324948	WITHOUT_CLASSIFICATION	1.003067505114007E-6	DEFECT
// We need to screen out duplicates in the unlikely event that we have two //  features with the same class-qualified name. We'll only generate one property //  string in that case and let the user add the second one manually, if necessary. //	WITHOUT_CLASSIFICATION	0.9999882088111777	WITHOUT_CLASSIFICATION	1.1791188822433712E-5	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.9999891348511906	WITHOUT_CLASSIFICATION	1.0865148809466358E-5	DEFECT
// source method return type is array (getExceptions), target is not array (i.e. addException)	WITHOUT_CLASSIFICATION	0.9999997375777036	WITHOUT_CLASSIFICATION	2.624222964085091E-7	DEFECT
// We also need to set it on any GenModels holding any used or static packages that may be refered to. //	WITHOUT_CLASSIFICATION	0.9999999415336372	WITHOUT_CLASSIFICATION	5.8466362738777926E-8	DEFECT
// We also need to set it on any GenModels holding any used or static packages that may be refered to. //	WITHOUT_CLASSIFICATION	0.9999999415336372	WITHOUT_CLASSIFICATION	5.8466362738777926E-8	DEFECT
// And we need to set it on any cached GenModels holding the special Ecore and XML packages. //	WITHOUT_CLASSIFICATION	0.9999744670664623	WITHOUT_CLASSIFICATION	2.553293353778982E-5	DEFECT
// And we need to set it on any cached GenModels holding the special Ecore and XML packages. //	WITHOUT_CLASSIFICATION	0.9999744670664623	WITHOUT_CLASSIFICATION	2.553293353778982E-5	DEFECT
// It's okay for there not be a precompiled template, so fail quietly. // exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.999999847589253	WITHOUT_CLASSIFICATION	1.5241074703334185E-7	DEFECT
// If there are any warnings other than raw type warnings, include all the warnings. //	WITHOUT_CLASSIFICATION	0.9999703565056163	WITHOUT_CLASSIFICATION	2.9643494383675488E-5	DEFECT
// Force the project to be setup properly. //	WITHOUT_CLASSIFICATION	0.9999981922733506	WITHOUT_CLASSIFICATION	1.8077266493065428E-6	DEFECT
// Force the project to be setup properly. //	WITHOUT_CLASSIFICATION	0.9999981922733506	WITHOUT_CLASSIFICATION	1.8077266493065428E-6	DEFECT
// node is not marked up by now, but keep checking other rules 	WITHOUT_CLASSIFICATION	0.9999995187138021	WITHOUT_CLASSIFICATION	4.81286197948927E-7	DEFECT
// Subclasses may override this method	WITHOUT_CLASSIFICATION	0.9999977666683926	WITHOUT_CLASSIFICATION	2.233331607317072E-6	DEFECT
// // Tests generation //	WITHOUT_CLASSIFICATION	0.9999996464637482	WITHOUT_CLASSIFICATION	3.535362518435666E-7	DEFECT
// If we change to pattern defaults, will have to specify plain suffix in no main package case. //	WITHOUT_CLASSIFICATION	0.9999987370619446	WITHOUT_CLASSIFICATION	1.2629380553060056E-6	DEFECT
// If we change to pattern defaults, will have to specify plain suffix in no main package case. //	WITHOUT_CLASSIFICATION	0.9999987370619446	WITHOUT_CLASSIFICATION	1.2629380553060056E-6	DEFECT
// If we change to pattern defaults, will have to specify plain suffix in no main package case. //	WITHOUT_CLASSIFICATION	0.9999987370619446	WITHOUT_CLASSIFICATION	1.2629380553060056E-6	DEFECT
// Subclasses may override this method	WITHOUT_CLASSIFICATION	0.9999977666683926	WITHOUT_CLASSIFICATION	2.233331607317072E-6	DEFECT
// See if a GenModel is registered for the package's URI, and if so, try to load it. //	WITHOUT_CLASSIFICATION	0.999999969188606	WITHOUT_CLASSIFICATION	3.0811393975677664E-8	DEFECT
// If that didn't work, just synthesize one. //	WITHOUT_CLASSIFICATION	0.9999817283686567	WITHOUT_CLASSIFICATION	1.82716313433132E-5	DEFECT
// Different than the Edit and Editor projects, this method is invoked while  // generating the model plugin xml.	WITHOUT_CLASSIFICATION	0.9995835906765469	WITHOUT_CLASSIFICATION	4.164093234531426E-4	DEFECT
// EATM  // Foreign Model	WITHOUT_CLASSIFICATION	0.9999921572621305	WITHOUT_CLASSIFICATION	7.842737869380099E-6	DEFECT
// Any features from one package that delegate to features in another. //	WITHOUT_CLASSIFICATION	0.9999995800093421	WITHOUT_CLASSIFICATION	4.199906578950167E-7	DEFECT
// If there are features delegating across packages, add only those that aren't already being generated. //	WITHOUT_CLASSIFICATION	0.9999998758146292	WITHOUT_CLASSIFICATION	1.241853707428128E-7	DEFECT
// Recompute the read only state. //	WITHOUT_CLASSIFICATION	0.9999993280125071	WITHOUT_CLASSIFICATION	6.71987492960909E-7	DEFECT
// Refresh any actions that may become enabled or disabled. //	WITHOUT_CLASSIFICATION	0.9995188432917116	WITHOUT_CLASSIFICATION	4.8115670828836204E-4	DEFECT
// Create the command stack that will notify this editor as commands are executed. //	WITHOUT_CLASSIFICATION	0.9999461124413709	WITHOUT_CLASSIFICATION	5.388755862904906E-5	DEFECT
// Add a listener to set the most recent command's affected objects to be the selection of the viewer with focus. //	WITHOUT_CLASSIFICATION	0.9999999597385243	WITHOUT_CLASSIFICATION	4.026147563547315E-8	DEFECT
// Try to select the affected objects. //	WITHOUT_CLASSIFICATION	0.9999998986030357	WITHOUT_CLASSIFICATION	1.0139696431559008E-7	DEFECT
// Create the editing domain with a special command stack. //	WITHOUT_CLASSIFICATION	0.9999869806757452	WITHOUT_CLASSIFICATION	1.3019324254804886E-5	DEFECT
// Make sure it's okay. //	WITHOUT_CLASSIFICATION	0.9999986252800558	WITHOUT_CLASSIFICATION	1.3747199442327677E-6	DEFECT
// Try to select the items in the current content viewer of the editor. //	WITHOUT_CLASSIFICATION	0.9999991552130342	WITHOUT_CLASSIFICATION	8.447869657585118E-7	DEFECT
// If it is changing... //	WITHOUT_CLASSIFICATION	0.9997361297302313	WITHOUT_CLASSIFICATION	2.6387026976871266E-4	DEFECT
// Create the listener on demand. //	WITHOUT_CLASSIFICATION	0.9999997310578651	WITHOUT_CLASSIFICATION	2.6894213483641114E-7	DEFECT
// This just notifies those things that are affected by the section. //	WITHOUT_CLASSIFICATION	0.9999955132085773	WITHOUT_CLASSIFICATION	4.486791422666735E-6	DEFECT
// Stop listening to the old one. //	WITHOUT_CLASSIFICATION	0.9999997355183412	WITHOUT_CLASSIFICATION	2.644816587985987E-7	DEFECT
// Start listening to the new one. //	WITHOUT_CLASSIFICATION	0.9999999177328425	WITHOUT_CLASSIFICATION	8.226715749207845E-8	DEFECT
// Remember it. //	WITHOUT_CLASSIFICATION	0.9999962758245838	WITHOUT_CLASSIFICATION	3.7241754162057685E-6	DEFECT
// Set the editors selection based on the current viewer's selection. //	WITHOUT_CLASSIFICATION	0.999991786954058	WITHOUT_CLASSIFICATION	8.213045941994377E-6	DEFECT
// Load the resource through the editing domain. //	WITHOUT_CLASSIFICATION	0.9999977373359852	WITHOUT_CLASSIFICATION	2.2626640148208017E-6	DEFECT
// Creates the model from the editor input //	WITHOUT_CLASSIFICATION	0.9999998676483121	WITHOUT_CLASSIFICATION	1.3235168798688526E-7	DEFECT
// Only creates the other pages if there is something that can be edited //	WITHOUT_CLASSIFICATION	0.9999998685067744	WITHOUT_CLASSIFICATION	1.3149322558870412E-7	DEFECT
// Create a page for the selection tree view. //	WITHOUT_CLASSIFICATION	0.9999994788731729	WITHOUT_CLASSIFICATION	5.211268270593276E-7	DEFECT
// Ensures that this editor will only display the page's tab // area if there are more than one page //	WITHOUT_CLASSIFICATION	0.9999998257709258	WITHOUT_CLASSIFICATION	1.7422907414198278E-7	DEFECT
// The content outline is just a tree. //	WITHOUT_CLASSIFICATION	0.9999999499798639	WITHOUT_CLASSIFICATION	5.002013609169084E-8	DEFECT
// Set up the tree viewer. //	WITHOUT_CLASSIFICATION	0.9999993964656559	WITHOUT_CLASSIFICATION	6.035343441100287E-7	DEFECT
// Make sure our popups work. //	WITHOUT_CLASSIFICATION	0.9999835615717634	WITHOUT_CLASSIFICATION	1.6438428236646618E-5	DEFECT
// Select the root object in the view. //	WITHOUT_CLASSIFICATION	0.9999806077227303	WITHOUT_CLASSIFICATION	1.9392277269556154E-5	DEFECT
// Listen to selection so that we can handle it is a special way. //	WITHOUT_CLASSIFICATION	0.9999993623902783	WITHOUT_CLASSIFICATION	6.376097216545764E-7	DEFECT
// This ensures that we handle selections correctly. //	WITHOUT_CLASSIFICATION	0.9993812724027106	WITHOUT_CLASSIFICATION	6.187275972893944E-4	DEFECT
// Get the first selected element. //	WITHOUT_CLASSIFICATION	0.9999999858083467	WITHOUT_CLASSIFICATION	1.4191653331381248E-8	DEFECT
// log the error, ignore the change and continue	WITHOUT_CLASSIFICATION	0.9999999969110243	WITHOUT_CLASSIFICATION	3.0889756583082857E-9	DEFECT
// Save the resources to the file system. //	WITHOUT_CLASSIFICATION	0.9999956244261219	WITHOUT_CLASSIFICATION	4.375573878079197E-6	DEFECT
// Set the selection to the widget. //	WITHOUT_CLASSIFICATION	0.9999790939770926	WITHOUT_CLASSIFICATION	2.0906022907384546E-5	DEFECT
// Do the work within an operation because this is a long running activity that modifies the workbench. //	WITHOUT_CLASSIFICATION	0.9999975758091426	WITHOUT_CLASSIFICATION	2.4241908573637416E-6	DEFECT
// Save only resources that have actually changed. //	WITHOUT_CLASSIFICATION	0.9999946505650742	WITHOUT_CLASSIFICATION	5.349434925840214E-6	DEFECT
// This is the method that gets invoked when the operation runs. //	WITHOUT_CLASSIFICATION	0.9999992489891407	WITHOUT_CLASSIFICATION	7.51010859315077E-7	DEFECT
// loop for all commented out nodes	WITHOUT_CLASSIFICATION	0.999999874213795	WITHOUT_CLASSIFICATION	1.2578620509469856E-7	DEFECT
// Do the work within an operation because this is a long running activity that modifies the workbench. //	WITHOUT_CLASSIFICATION	0.9999975758091426	WITHOUT_CLASSIFICATION	2.4241908573637416E-6	DEFECT
// Refresh the necessary state. //	WITHOUT_CLASSIFICATION	0.999999566813694	WITHOUT_CLASSIFICATION	4.331863060705827E-7	DEFECT
// This runs the options, and shows progress. //	WITHOUT_CLASSIFICATION	0.9999869522601053	WITHOUT_CLASSIFICATION	1.3047739894719312E-5	DEFECT
// insert line break and comment out the first line if needed // note that first line might move backward beyond node start (e.g. if a comma of the previous enum constant has been commented out)	WITHOUT_CLASSIFICATION	0.9999949885491112	WITHOUT_CLASSIFICATION	5.011450888851115E-6	DEFECT
// Something went wrong that shouldn't. //	WITHOUT_CLASSIFICATION	0.9987759713117987	WITHOUT_CLASSIFICATION	0.0012240286882012738	DEFECT
// Nothing to do	WITHOUT_CLASSIFICATION	0.9999991357001328	WITHOUT_CLASSIFICATION	8.64299867286624E-7	DEFECT
// This is the method that gets invoked when the operation runs. //	WITHOUT_CLASSIFICATION	0.9999992489891407	WITHOUT_CLASSIFICATION	7.51010859315077E-7	DEFECT
// Something went wrong that shouldn't. //	WITHOUT_CLASSIFICATION	0.9987759713117987	WITHOUT_CLASSIFICATION	0.0012240286882012738	DEFECT
// Stop only on cancel. //	WITHOUT_CLASSIFICATION	0.9999948169381769	WITHOUT_CLASSIFICATION	5.18306182313648E-6	DEFECT
// insert line break at the first line if there is something before the node start and the beginning of the line	WITHOUT_CLASSIFICATION	0.9999999984246909	WITHOUT_CLASSIFICATION	1.5753090876074294E-9	DEFECT
// Switch to the new selection provider. //	WITHOUT_CLASSIFICATION	0.9999969226012472	WITHOUT_CLASSIFICATION	3.0773987526923322E-6	DEFECT
// Fake a selection changed event to update the menus. //	WITHOUT_CLASSIFICATION	0.9999994256721726	WITHOUT_CLASSIFICATION	5.743278273912887E-7	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999827188826	WITHOUT_CLASSIFICATION	1.7281117422851505E-8	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999995972496601	WITHOUT_CLASSIFICATION	4.0275033974482523E-7	DEFECT
//Class/genFeature.override.javajetinc //for	WITHOUT_CLASSIFICATION	0.9999999847926067	WITHOUT_CLASSIFICATION	1.5207393303595853E-8	DEFECT
// Kick of a Java build if not already in a build. //	WITHOUT_CLASSIFICATION	0.9998614232587761	WITHOUT_CLASSIFICATION	1.3857674122383143E-4	DEFECT
//Class/implementedGenOperation.override.javajetinc //for	WITHOUT_CLASSIFICATION	0.999999984464721	WITHOUT_CLASSIFICATION	1.5535279038941883E-8	DEFECT
// do not add a new line if there is one	WITHOUT_CLASSIFICATION	0.999999621027404	WITHOUT_CLASSIFICATION	3.7897259603874467E-7	DEFECT
// This call should get the files checked out from version control if the project is a 'team' project. //	WITHOUT_CLASSIFICATION	0.9999820304964187	WITHOUT_CLASSIFICATION	1.796950358135345E-5	DEFECT
// there is only whitespace on this line - no need for line break	WITHOUT_CLASSIFICATION	0.9999935687314259	WITHOUT_CLASSIFICATION	6.4312685741815E-6	DEFECT
// Check which directive it is. //	WITHOUT_CLASSIFICATION	0.9999992417631888	WITHOUT_CLASSIFICATION	7.582368112021276E-7	DEFECT
//reader.reset(start); //return false;	WITHOUT_CLASSIFICATION	0.99999800197352	WITHOUT_CLASSIFICATION	1.9980264799702714E-6	DEFECT
// Parse the attr-val pairs. //	WITHOUT_CLASSIFICATION	0.9999997812311867	WITHOUT_CLASSIFICATION	2.1876881326488195E-7	DEFECT
// If the template path points at a project with a JET Nature,  // then we will assume that the templates we want to use are already compiled in this plugin Java project. // 	WITHOUT_CLASSIFICATION	0.9999988788321376	WITHOUT_CLASSIFICATION	1.1211678624638306E-6	DEFECT
// Compute the URL for where the classes for this project will be located. //	WITHOUT_CLASSIFICATION	0.9999994207224727	WITHOUT_CLASSIFICATION	5.792775272442007E-7	DEFECT
// Compute the URLs for all the output folder of all the project dependencies. //	WITHOUT_CLASSIFICATION	0.9999995892434665	WITHOUT_CLASSIFICATION	4.1075653353018696E-7	DEFECT
// Define a class loader that will look in the URLs first,  // and if it doesn't find the class there, uses the emitter's loader. //	WITHOUT_CLASSIFICATION	0.9999964291625628	WITHOUT_CLASSIFICATION	3.570837437091691E-6	DEFECT
// Define a class loader that will look up the class in the bundle, // and if it doesn't find it there, will look in the parent. //	WITHOUT_CLASSIFICATION	0.9999954136033835	WITHOUT_CLASSIFICATION	4.586396616497989E-6	DEFECT
// Strip off the trailing "_" and load that class. //	WITHOUT_CLASSIFICATION	0.9999999717224366	WITHOUT_CLASSIFICATION	2.8277563318989405E-8	DEFECT
// Check that the class is actually different from the one that's directly visible to the JETEmitter. //	WITHOUT_CLASSIFICATION	0.9999952137854219	WITHOUT_CLASSIFICATION	4.7862145781703885E-6	DEFECT
// Don't do any of the other normally dynamic JETEmitter project processing. //	WITHOUT_CLASSIFICATION	0.9999945795254549	WITHOUT_CLASSIFICATION	5.4204745451863315E-6	DEFECT
// Get the existing classpath and remove the project root if necessary. // Any new non-duplicate entries will be added to this. //	WITHOUT_CLASSIFICATION	0.999999972410544	WITHOUT_CLASSIFICATION	2.7589456081437923E-8	DEFECT
// Add the new entries, including source, JRE container, and added variables and classpath containers.  //	WITHOUT_CLASSIFICATION	0.9999999925324474	WITHOUT_CLASSIFICATION	7.467552595921205E-9	DEFECT
// Construct a proper URL for relative lookup. //	WITHOUT_CLASSIFICATION	0.9999994481994421	WITHOUT_CLASSIFICATION	5.518005579046851E-7	DEFECT
// Determine all the bundles that this project depends on. //	WITHOUT_CLASSIFICATION	0.9999943678212593	WITHOUT_CLASSIFICATION	5.632178740733811E-6	DEFECT
// If it doesn't correspond to a bundle, then try to process it as a project in the workspace. //	WITHOUT_CLASSIFICATION	0.9604930087949546	WITHOUT_CLASSIFICATION	0.03950699120504544	DEFECT
// Add JETBuilder //	WITHOUT_CLASSIFICATION	0.9999994879093727	WITHOUT_CLASSIFICATION	5.120906273869094E-7	DEFECT
// Create .jetproperties file //	WITHOUT_CLASSIFICATION	0.9999998511703202	WITHOUT_CLASSIFICATION	1.4882967980203508E-7	DEFECT
// clone includeStack without cloning contents //	WITHOUT_CLASSIFICATION	0.9999999932019628	WITHOUT_CLASSIFICATION	6.798037179629883E-9	DEFECT
// Store the current state in stack. //	WITHOUT_CLASSIFICATION	0.9999993942883306	WITHOUT_CLASSIFICATION	6.057116694236074E-7	DEFECT
// Set the new variables. //	WITHOUT_CLASSIFICATION	0.9999999420708743	WITHOUT_CLASSIFICATION	5.792912576102925E-8	DEFECT
// Make sure we have something to pop. //	WITHOUT_CLASSIFICATION	0.9999989871114094	WITHOUT_CLASSIFICATION	1.012888590582497E-6	DEFECT
// Get previous state in stack. //	WITHOUT_CLASSIFICATION	0.9999998611758034	WITHOUT_CLASSIFICATION	1.3882419668692598E-7	DEFECT
// Until the encoding can be specified within the template  // we need to assume an encoding capable of working with any character set.	WITHOUT_CLASSIFICATION	0.9999999836613244	WITHOUT_CLASSIFICATION	1.6338675535273475E-8	DEFECT
// Register the file, and read its content: //	WITHOUT_CLASSIFICATION	0.9999867008271015	WITHOUT_CLASSIFICATION	1.3299172898449517E-5	DEFECT
// Is stack created ? (will happen if the JET file we're looking at is missing. //	WITHOUT_CLASSIFICATION	0.9999763706298413	WITHOUT_CLASSIFICATION	2.3629370158696846E-5	DEFECT
// Restore parser state: //	WITHOUT_CLASSIFICATION	0.99941827403055	WITHOUT_CLASSIFICATION	5.817259694500962E-4	DEFECT
// Consume the open quote: //	WITHOUT_CLASSIFICATION	0.9999991712797163	WITHOUT_CLASSIFICATION	8.287202838232412E-7	DEFECT
// Check end of quote, skip closing quote: //	WITHOUT_CLASSIFICATION	0.9999997306711655	WITHOUT_CLASSIFICATION	2.693288344735607E-7	DEFECT
// Get the attribute name: //	WITHOUT_CLASSIFICATION	0.9999995330045017	WITHOUT_CLASSIFICATION	4.6699549833300133E-7	DEFECT
// Check for an equal sign: //	WITHOUT_CLASSIFICATION	0.9999983318865818	WITHOUT_CLASSIFICATION	1.668113418263156E-6	DEFECT
// Get the attribute value: //	WITHOUT_CLASSIFICATION	0.9999992450155702	WITHOUT_CLASSIFICATION	7.549844296909181E-7	DEFECT
// insert line break if there is non-whitespace before end of the line	WITHOUT_CLASSIFICATION	0.9999998398032489	WITHOUT_CLASSIFICATION	1.6019675106487236E-7	DEFECT
// End of the useBean tag. //	WITHOUT_CLASSIFICATION	0.99999845466813	WITHOUT_CLASSIFICATION	1.545331869987614E-6	DEFECT
// XMLesque Close tags //	WITHOUT_CLASSIFICATION	0.9999834541049178	WITHOUT_CLASSIFICATION	1.6545895082129826E-5	DEFECT
// Parse as an attribute=value: //	WITHOUT_CLASSIFICATION	0.9999973267267422	WITHOUT_CLASSIFICATION	2.6732732577162534E-6	DEFECT
// Reached EOF: //	WITHOUT_CLASSIFICATION	0.9999719083774871	WITHOUT_CLASSIFICATION	2.809162251297612E-5	DEFECT
// Look for an end-of-comment or end-of-tag: //	WITHOUT_CLASSIFICATION	0.9999911355769391	WITHOUT_CLASSIFICATION	8.86442306099689E-6	DEFECT
// The include succeeded, so if there is an alternative and we're not skipping, we need to start. //	WITHOUT_CLASSIFICATION	0.9999999947746903	WITHOUT_CLASSIFICATION	5.2253098323120015E-9	DEFECT
// If a newline from the previous character data remains, leave it around to be processed as if it appeared in the included file. //	WITHOUT_CLASSIFICATION	0.999999958406245	WITHOUT_CLASSIFICATION	4.159375508963433E-8	DEFECT
// The include failed, so if there is an alternative, we don't skip it. //	WITHOUT_CLASSIFICATION	0.999999968402111	WITHOUT_CLASSIFICATION	3.159788891955702E-8	DEFECT
// A section is not allowed without a preceding include with alternative. //	WITHOUT_CLASSIFICATION	0.9921331974436709	WITHOUT_CLASSIFICATION	0.0078668025563291	DEFECT
// This pop is safe because a section couldn't have been started without an include that pushed. //	WITHOUT_CLASSIFICATION	0.9998493527060079	WITHOUT_CLASSIFICATION	1.5064729399197428E-4	DEFECT
// Process this first. //	WITHOUT_CLASSIFICATION	0.9999990864360516	WITHOUT_CLASSIFICATION	9.13563948459339E-7	DEFECT
// Ignore this now //	WITHOUT_CLASSIFICATION	0.9999998117200184	WITHOUT_CLASSIFICATION	1.8827998159154902E-7	DEFECT
// If a newline from the previous character data remains, add a generator for it. //	WITHOUT_CLASSIFICATION	0.9999998355510699	WITHOUT_CLASSIFICATION	1.6444893019571316E-7	DEFECT
// An expression with more that 931 "+" will break Sun and IBM javac compilers. //	WITHOUT_CLASSIFICATION	0.9999914350294945	WITHOUT_CLASSIFICATION	8.564970505451722E-6	DEFECT
// Register our directive. //	WITHOUT_CLASSIFICATION	0.9999996654443539	WITHOUT_CLASSIFICATION	3.3455564607461374E-7	DEFECT
// Ignore it if there are multiple comments. //	WITHOUT_CLASSIFICATION	0.9999999877256259	WITHOUT_CLASSIFICATION	1.2274373969945375E-8	DEFECT
// Three arguments are expected: the .xml jControlModel URI, the source java URI, and the target java URI. //	WITHOUT_CLASSIFICATION	0.9999999213255646	WITHOUT_CLASSIFICATION	7.867443541000526E-8	DEFECT
// Create the source and target JDOMs. //	WITHOUT_CLASSIFICATION	0.9999999943100886	WITHOUT_CLASSIFICATION	5.689911403481814E-9	DEFECT
// Create a pattern dictionary for each. //	WITHOUT_CLASSIFICATION	0.9999384570765577	WITHOUT_CLASSIFICATION	6.154292344223011E-5	DEFECT
//  We expect this failure when running stand-alone //	WITHOUT_CLASSIFICATION	0.9999128758101506	WITHOUT_CLASSIFICATION	8.712418984931906E-5	DEFECT
// JControlModel.class is used with classNames that were not found //	WITHOUT_CLASSIFICATION	0.9999965589661048	WITHOUT_CLASSIFICATION	3.44103389507986E-6	DEFECT
// Ignore the further-most javadoc //	WITHOUT_CLASSIFICATION	0.9999999991418445	WITHOUT_CLASSIFICATION	8.581554887003765E-10	DEFECT
// retrieve source node corresponding to target //	WITHOUT_CLASSIFICATION	0.9999998639016522	WITHOUT_CLASSIFICATION	1.360983478154539E-7	DEFECT
// convert the target node to a compatible node //	WITHOUT_CLASSIFICATION	0.999999998556521	WITHOUT_CLASSIFICATION	1.4434789055455428E-9	DEFECT
// There must be at least one match. //	WITHOUT_CLASSIFICATION	0.9999983495620244	WITHOUT_CLASSIFICATION	1.650437975595744E-6	DEFECT
// Ignore if there is not substantial change. //	WITHOUT_CLASSIFICATION	0.9999999779411346	WITHOUT_CLASSIFICATION	2.205886539944195E-8	DEFECT
// Create the options model. //	WITHOUT_CLASSIFICATION	0.9999998789840371	WITHOUT_CLASSIFICATION	1.210159629973581E-7	DEFECT
// Create a pattern dictionary for each. //	WITHOUT_CLASSIFICATION	0.9999384570765577	WITHOUT_CLASSIFICATION	6.154292344223011E-5	DEFECT
// retrieve source node corresponding to target //	WITHOUT_CLASSIFICATION	0.9999998639016522	WITHOUT_CLASSIFICATION	1.360983478154539E-7	DEFECT
// convert the target node to a compatible node //	WITHOUT_CLASSIFICATION	0.999999998556521	WITHOUT_CLASSIFICATION	1.4434789055455428E-9	DEFECT
// Method created to increase the performance of regular expressions // by reducing the length of the string that is matched. //	WITHOUT_CLASSIFICATION	0.9999999431825358	WITHOUT_CLASSIFICATION	5.6817464146063375E-8	DEFECT
// Skip if there's an equality filter and the values aren't equal. //	WITHOUT_CLASSIFICATION	0.9999960246552323	WITHOUT_CLASSIFICATION	3.975344767671853E-6	DEFECT
// The methods were matched by a process that doesn't consider the // parameters	WITHOUT_CLASSIFICATION	0.9999801220507345	WITHOUT_CLASSIFICATION	1.987794926542254E-5	DEFECT
// Don't push method annotations into redirected methods. //	WITHOUT_CLASSIFICATION	0.9999981371338315	WITHOUT_CLASSIFICATION	1.8628661685312278E-6	DEFECT
// Three arguments are expected: the .xml getControlModel() URI, the source java URI, and the target java URI. //	WITHOUT_CLASSIFICATION	0.9999997229064608	WITHOUT_CLASSIFICATION	2.7709353921221836E-7	DEFECT
// Create the source and target JCompilationUnit. //	WITHOUT_CLASSIFICATION	0.9999999996572393	WITHOUT_CLASSIFICATION	3.427606134533506E-10	DEFECT
// apply changes using ASTRewrite //	WITHOUT_CLASSIFICATION	0.999999999097097	WITHOUT_CLASSIFICATION	9.029029528774897E-10	DEFECT
// apply additional edits like replacing or commenting out nodes //	WITHOUT_CLASSIFICATION	0.9999952532559656	WITHOUT_CLASSIFICATION	4.74674403428222E-6	DEFECT
// if the node is less than 1 line long, but its contents is replaced by multiple lines, // comment out each line in it	WITHOUT_CLASSIFICATION	0.999999997225288	WITHOUT_CLASSIFICATION	2.774711991693443E-9	DEFECT
// replace existing InsertEdit at this position // (case when previous node ends at the same position that current node starts at)	WITHOUT_CLASSIFICATION	0.9999631547892573	WITHOUT_CLASSIFICATION	3.68452107425565E-5	DEFECT
// create and try to add dummy edit to find the ReplaceEdit // this should be faster than lookup since underneath of addChild() binary search is used	WITHOUT_CLASSIFICATION	0.999999391751164	WITHOUT_CLASSIFICATION	6.082488360165229E-7	DEFECT
// caching parser does not parse 2nd file in the same way (javadoc of package for example) // hence, new parser is created every time this method is called	WITHOUT_CLASSIFICATION	0.9997744608352839	WITHOUT_CLASSIFICATION	2.2553916471617375E-4	DEFECT
// adding 'at' allows distinguish annotations from other members // (i.e. inner class verses annotation of a class) //	WITHOUT_CLASSIFICATION	0.9999992726703298	WITHOUT_CLASSIFICATION	7.273296700915183E-7	DEFECT
// find insertion point from returned result (-(insertion point) - 1) // commentIndex is the index of the first element with end position > rangeEndPos	WITHOUT_CLASSIFICATION	0.9999998657016084	WITHOUT_CLASSIFICATION	1.3429839167281904E-7	DEFECT
// find insertion point from returned result (-(insertion point) - 1) // commentIndex is an index of the first element that has start position > rangeStartPos 	WITHOUT_CLASSIFICATION	0.9999998130684243	WITHOUT_CLASSIFICATION	1.8693157569588684E-7	DEFECT
// extend to include the comment at the same line as the position  // if there is nothing between the position and the comment	WITHOUT_CLASSIFICATION	0.9999999703314334	WITHOUT_CLASSIFICATION	2.9668566582254187E-8	DEFECT
// there is anything else but comma after constant - insert line break	WITHOUT_CLASSIFICATION	0.9999117937395231	WITHOUT_CLASSIFICATION	8.820626047685391E-5	DEFECT
// we don't want to include the line comments immediately before an import in the  // returned range	WITHOUT_CLASSIFICATION	0.9999998554460722	WITHOUT_CLASSIFICATION	1.4455392776523245E-7	DEFECT
// since enum constants are separated by commas, they should always have the default range // we can not extend their range or reduce it	WITHOUT_CLASSIFICATION	0.9999999843437161	WITHOUT_CLASSIFICATION	1.5656283869097685E-8	DEFECT
// check if given node should use the default range (i.e. node removed), // or extended range (i.e. surrounding nodes removed)	WITHOUT_CLASSIFICATION	0.9999994795240494	WITHOUT_CLASSIFICATION	5.204759505379359E-7	DEFECT
// replace arguments that match the name of the fields with the initializer value of the field //	WITHOUT_CLASSIFICATION	0.9999999977268232	WITHOUT_CLASSIFICATION	2.2731767047533793E-9	DEFECT
// move all children to the type, converting enum constants to fields // // fields that are created by conversion from enum constants must be inserted after // the last final field that is used in constructors for initializers	WITHOUT_CLASSIFICATION	0.9999999999270526	WITHOUT_CLASSIFICATION	7.294745477418125E-11	DEFECT
// Three arguments are expected: the .xml jControlModel URI, the source java URI, and the target java URI. //	WITHOUT_CLASSIFICATION	0.9999999213255646	WITHOUT_CLASSIFICATION	7.867443541000526E-8	DEFECT
// Create the source and target JDOMs. //	WITHOUT_CLASSIFICATION	0.9999999943100886	WITHOUT_CLASSIFICATION	5.689911403481814E-9	DEFECT
// indicate that initializer has been changed // (required to not overwrite initializer if variables are split later)	WITHOUT_CLASSIFICATION	0.9999999945501329	WITHOUT_CLASSIFICATION	5.449867119939411E-9	DEFECT
// lower all except the last upper case character if there are // more than one upper case characters in the beginning. // e.g. XSDElementContent -> xsdElementContent // However if the whole string is upper case, the whole string // is turned into lower case. // e.g. CPU -> cpu	WITHOUT_CLASSIFICATION	0.9999999999784035	WITHOUT_CLASSIFICATION	2.159648088648403E-11	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999995972496601	WITHOUT_CLASSIFICATION	4.0275033974482523E-7	DEFECT
// Don't do replacement if we just did one, or if previous line // ended with a semicolon. //	WITHOUT_CLASSIFICATION	0.9999999564180482	WITHOUT_CLASSIFICATION	4.358195173721688E-8	DEFECT
// Don't do replacement if previous line ended with a comment. //	WITHOUT_CLASSIFICATION	0.9999997920042031	WITHOUT_CLASSIFICATION	2.0799579695955466E-7	DEFECT
// If the path isn't within the root of the archive,  // create a new URI for the folder location of the archive,  // so we can look in the folder that contains it. //	WITHOUT_CLASSIFICATION	0.9999846020408922	WITHOUT_CLASSIFICATION	1.5397959107774522E-5	DEFECT
// Trim off the "bin" or "runtime" segment. //	WITHOUT_CLASSIFICATION	0.9999981383376456	WITHOUT_CLASSIFICATION	1.8616623543223235E-6	DEFECT
// Platform.resolve() doesn't work if the project is encoded. //	WITHOUT_CLASSIFICATION	0.9998706365427787	WITHOUT_CLASSIFICATION	1.2936345722132296E-4	DEFECT
// There needs to be another URL protocol right after the archive protocol, and not a "/". //	WITHOUT_CLASSIFICATION	0.9999878228423847	WITHOUT_CLASSIFICATION	1.2177157615135411E-5	DEFECT
// There must be at least one archive path. //	WITHOUT_CLASSIFICATION	0.99999909903124	WITHOUT_CLASSIFICATION	9.009687600720727E-7	DEFECT
// There must be at least one archive path. //	WITHOUT_CLASSIFICATION	0.99999909903124	WITHOUT_CLASSIFICATION	9.009687600720727E-7	DEFECT
// Parse to count the archive paths that must will be delegated to the nested URL based on the number of schemes at the start. //	WITHOUT_CLASSIFICATION	0.99999768247763	WITHOUT_CLASSIFICATION	2.3175223700429995E-6	DEFECT
// There should be at least one archive separator per scheme. //	WITHOUT_CLASSIFICATION	0.9999977640881246	WITHOUT_CLASSIFICATION	2.2359118754846223E-6	DEFECT
// Parse to extract the archives that will be delegated to the nested URL based on the number of schemes at the start. //	WITHOUT_CLASSIFICATION	0.9999984056874038	WITHOUT_CLASSIFICATION	1.5943125961929665E-6	DEFECT
// Skip a scheme for the archive accessor to be handled directly here. //	WITHOUT_CLASSIFICATION	0.9999991101550602	WITHOUT_CLASSIFICATION	8.898449398717236E-7	DEFECT
// Skip an archive accessor to be handled by delegation to the scheme in nested URL. //	WITHOUT_CLASSIFICATION	0.9999999966666517	WITHOUT_CLASSIFICATION	3.333348210068269E-9	DEFECT
// Create the delegate URL. //	WITHOUT_CLASSIFICATION	0.9999999774541578	WITHOUT_CLASSIFICATION	2.2545842176892162E-8	DEFECT
// The cutoff point to the next archive. //	WITHOUT_CLASSIFICATION	0.9999998887776577	WITHOUT_CLASSIFICATION	1.1122234232954484E-7	DEFECT
// The cutoff point to the next archive. //	WITHOUT_CLASSIFICATION	0.9999998887776577	WITHOUT_CLASSIFICATION	1.1122234232954484E-7	DEFECT
// Construct the input stream in a special efficient way for case of a file scheme. //	WITHOUT_CLASSIFICATION	0.999999967501934	WITHOUT_CLASSIFICATION	3.249806593652023E-8	DEFECT
// Just get the stream from the URL. //	WITHOUT_CLASSIFICATION	0.9999984231679909	WITHOUT_CLASSIFICATION	1.5768320090363039E-6	DEFECT
// The name to be used for the entry. //	WITHOUT_CLASSIFICATION	0.9999998997544327	WITHOUT_CLASSIFICATION	1.0024556727926645E-7	DEFECT
// Skip over this archive path to the next one, since we are handling this one special. //	WITHOUT_CLASSIFICATION	0.9999999596691588	WITHOUT_CLASSIFICATION	4.0330841163418706E-8	DEFECT
// Loop over the archive paths. //	WITHOUT_CLASSIFICATION	0.9999999940142409	WITHOUT_CLASSIFICATION	5.9857591428006E-9	DEFECT
// The entry name to be matched. //	WITHOUT_CLASSIFICATION	0.9999947240364319	WITHOUT_CLASSIFICATION	5.275963568234786E-6	DEFECT
// Wrap the input stream as a zip stream to scan it's contents for a match. //	WITHOUT_CLASSIFICATION	0.999999975655153	WITHOUT_CLASSIFICATION	2.4344846917946888E-8	DEFECT
// Skip to the next archive path and continue the loop. //	WITHOUT_CLASSIFICATION	0.9999995400720696	WITHOUT_CLASSIFICATION	4.5992793045127393E-7	DEFECT
// Create the delegate URL //	WITHOUT_CLASSIFICATION	0.9999999896943971	WITHOUT_CLASSIFICATION	1.0305602822019236E-8	DEFECT
// Create a temporary file where the existing contents of the archive can be written  // before the new contents are added. //	WITHOUT_CLASSIFICATION	0.999999984404241	WITHOUT_CLASSIFICATION	1.5595759115160795E-8	DEFECT
// Record the input and output streams for closing in case of failure so that handles are not left open. //	WITHOUT_CLASSIFICATION	0.9999162312461618	WITHOUT_CLASSIFICATION	8.376875383824893E-5	DEFECT
// Create the output stream to the temporary file and the input stream for the delegate URL. //	WITHOUT_CLASSIFICATION	0.9999999994914067	WITHOUT_CLASSIFICATION	5.085933028647312E-10	DEFECT
// The most deeply nested output stream that will be returned wrapped as the result. //	WITHOUT_CLASSIFICATION	0.9999507970415823	WITHOUT_CLASSIFICATION	4.920295841776479E-5	DEFECT
// A buffer for transferring archive contents. //	WITHOUT_CLASSIFICATION	0.9999998686985022	WITHOUT_CLASSIFICATION	1.3130149769799437E-7	DEFECT
// We expect there to be at least one archive path. //	WITHOUT_CLASSIFICATION	0.9999973977631494	WITHOUT_CLASSIFICATION	2.6022368506429144E-6	DEFECT
// The name that will be used as the archive entry. //	WITHOUT_CLASSIFICATION	0.9999996029574387	WITHOUT_CLASSIFICATION	3.9704256129292224E-7	DEFECT
// Wrap the current result as a zip stream, and record it for loop-based recursion. //	WITHOUT_CLASSIFICATION	0.9999976379211485	WITHOUT_CLASSIFICATION	2.362078851499261E-6	DEFECT
// Wrap the current input as a zip stream, and record it for loop-based recursion. //	WITHOUT_CLASSIFICATION	0.9999995952747557	WITHOUT_CLASSIFICATION	4.047252443304667E-7	DEFECT
// Loop over the entries in the zip stream. //	WITHOUT_CLASSIFICATION	0.9999999786289699	WITHOUT_CLASSIFICATION	2.1371030054426436E-8	DEFECT
// Transfer the entry and its contents. //	WITHOUT_CLASSIFICATION	0.9999997615309425	WITHOUT_CLASSIFICATION	2.384690575128681E-7	DEFECT
// Find the next archive path and continue "recursively" if there is one. //	WITHOUT_CLASSIFICATION	0.9999998666598383	WITHOUT_CLASSIFICATION	1.3334016164620237E-7	DEFECT
// Create no entry since we are deleting and return immediately. //	WITHOUT_CLASSIFICATION	0.999999990336848	WITHOUT_CLASSIFICATION	9.663151957656607E-9	DEFECT
// Create a new or replaced entry and continue processing the remaining archives. //	WITHOUT_CLASSIFICATION	0.9999999953682516	WITHOUT_CLASSIFICATION	4.631748394134713E-9	DEFECT
// Ensure that it won't be closed in the finally block. //	WITHOUT_CLASSIFICATION	0.999997028516667	WITHOUT_CLASSIFICATION	2.971483332980166E-6	DEFECT
// Wrap the deepest result so that on close, the results are finally transferred. //	WITHOUT_CLASSIFICATION	0.9999999089361847	WITHOUT_CLASSIFICATION	9.106381520842378E-8	DEFECT
// Make sure we close only once. //	WITHOUT_CLASSIFICATION	0.999999783205602	WITHOUT_CLASSIFICATION	2.16794397927588E-7	DEFECT
// Close for real so that the temporary file is ready to be read. //	WITHOUT_CLASSIFICATION	0.9999999301962218	WITHOUT_CLASSIFICATION	6.980377815317627E-8	DEFECT
// Make sure they are closed no matter what bad thing happens. //	WITHOUT_CLASSIFICATION	0.9999991590190977	WITHOUT_CLASSIFICATION	8.409809022522991E-7	DEFECT
// Close in case of failure to complete. //	WITHOUT_CLASSIFICATION	0.9999992554529181	WITHOUT_CLASSIFICATION	7.445470819136135E-7	DEFECT
// Close if we created this. //	WITHOUT_CLASSIFICATION	0.9999999950281013	WITHOUT_CLASSIFICATION	4.971898658255437E-9	DEFECT
// Go through the commands of the list. //	WITHOUT_CLASSIFICATION	0.9999988624045727	WITHOUT_CLASSIFICATION	1.1375954272295774E-6	DEFECT
// If there are some... //	WITHOUT_CLASSIFICATION	0.9999881808253664	WITHOUT_CLASSIFICATION	1.181917463349611E-5	DEFECT
// The termination guard is in the body. //	WITHOUT_CLASSIFICATION	0.9999936592927159	WITHOUT_CLASSIFICATION	6.3407072841691515E-6	DEFECT
// We can't undo it, so we'd better give up. //	WITHOUT_CLASSIFICATION	0.9999929099188166	WITHOUT_CLASSIFICATION	7.090081183373817E-6	DEFECT
// Now is the best time to record isUndoable because later we would have to do all the executes again! // This makes canUndo very simple! //	WITHOUT_CLASSIFICATION	0.9998680163736273	WITHOUT_CLASSIFICATION	1.319836263725808E-4	DEFECT
// If we can't execute this one, we just can't do it at all. //	WITHOUT_CLASSIFICATION	0.9999924204792975	WITHOUT_CLASSIFICATION	7.5795207024667075E-6	DEFECT
// If we are pessimistic, then we need to undo all the commands that we have executed so far. //	WITHOUT_CLASSIFICATION	0.9999659541929603	WITHOUT_CLASSIFICATION	3.4045807039741266E-5	DEFECT
// The most recently processed command will never have been executed. //	WITHOUT_CLASSIFICATION	0.9999914245346765	WITHOUT_CLASSIFICATION	8.575465323525954E-6	DEFECT
// We want to unroll all the effects of the previous commands. //	WITHOUT_CLASSIFICATION	0.9999919568198805	WITHOUT_CLASSIFICATION	8.043180119453168E-6	DEFECT
// Skip over the command that threw the exception. //	WITHOUT_CLASSIFICATION	0.9999849216960075	WITHOUT_CLASSIFICATION	1.5078303992605606E-5	DEFECT
// Iterate back over the executed commands to undo them. //	WITHOUT_CLASSIFICATION	0.9999993926974672	WITHOUT_CLASSIFICATION	6.073025327951929E-7	DEFECT
// If the command is executable, record and execute it. //	WITHOUT_CLASSIFICATION	0.9999754783502269	WITHOUT_CLASSIFICATION	2.4521649773097315E-5	DEFECT
// Clear the list past the top. //	WITHOUT_CLASSIFICATION	0.9999998972774828	WITHOUT_CLASSIFICATION	1.0272251712915936E-7	DEFECT
// Record the successfully executed command. //	WITHOUT_CLASSIFICATION	0.9999977471959641	WITHOUT_CLASSIFICATION	2.2528040358600203E-6	DEFECT
// note that string place holder adjusts indentation // to correct this trackAndReplace method is used below	WITHOUT_CLASSIFICATION	0.9999952216908997	WITHOUT_CLASSIFICATION	4.778309100353311E-6	DEFECT
// Iterate back over the executed commands to undo them. //	WITHOUT_CLASSIFICATION	0.9999993926974672	WITHOUT_CLASSIFICATION	6.073025327951929E-7	DEFECT
// Clear the list past the top. //	WITHOUT_CLASSIFICATION	0.9999998972774828	WITHOUT_CLASSIFICATION	1.0272251712915936E-7	DEFECT
// This forces isSaveNeded to always be true. //	WITHOUT_CLASSIFICATION	0.9999892668436264	WITHOUT_CLASSIFICATION	1.0733156373595595E-5	DEFECT
// Clear the list. //	WITHOUT_CLASSIFICATION	0.9999999732731333	WITHOUT_CLASSIFICATION	2.6726866674165075E-8	DEFECT
//  Remember where we are now. //	WITHOUT_CLASSIFICATION	0.9999993613321997	WITHOUT_CLASSIFICATION	6.386678001979827E-7	DEFECT
// Only if we are at the remembered index do we NOT need to save. // //return top != saveIndex;	WITHOUT_CLASSIFICATION	0.9999999845431816	WITHOUT_CLASSIFICATION	1.5456818369460266E-8	DEFECT
// Skip over the command that threw the exception. //	WITHOUT_CLASSIFICATION	0.9999849216960075	WITHOUT_CLASSIFICATION	1.5078303992605606E-5	DEFECT
// Skip over the command that threw the exception. //	WITHOUT_CLASSIFICATION	0.9999849216960075	WITHOUT_CLASSIFICATION	1.5078303992605606E-5	DEFECT
// Iterate back over the executed commands to undo them. //	WITHOUT_CLASSIFICATION	0.9999993926974672	WITHOUT_CLASSIFICATION	6.073025327951929E-7	DEFECT
// Iterate forward over the undone commands to redo them. //	WITHOUT_CLASSIFICATION	0.9999998353059748	WITHOUT_CLASSIFICATION	1.6469402517760927E-7	DEFECT
// This ensures that these useless state variables at least reflect the right value. //	WITHOUT_CLASSIFICATION	0.9999986346932563	WITHOUT_CLASSIFICATION	1.3653067437057469E-6	DEFECT
// Copy to a list and allocate positions. //	WITHOUT_CLASSIFICATION	0.9999993270783937	WITHOUT_CLASSIFICATION	6.729216063328973E-7	DEFECT
// Copy to a list and allocate positions. //	WITHOUT_CLASSIFICATION	0.9999993270783937	WITHOUT_CLASSIFICATION	6.729216063328973E-7	DEFECT
// Count up the objects that will be removed. // The objects are exchanged to produce this list's order //	WITHOUT_CLASSIFICATION	0.9999999980482066	WITHOUT_CLASSIFICATION	1.9517934827246193E-9	DEFECT
// If any objects are matched. //	WITHOUT_CLASSIFICATION	0.9999934245650668	WITHOUT_CLASSIFICATION	6.575434933195622E-6	DEFECT
// Remove from by position in reverse order. //	WITHOUT_CLASSIFICATION	0.99993520310125	WITHOUT_CLASSIFICATION	6.47968987500614E-5	DEFECT
// Remove from by position in reverse order. //	WITHOUT_CLASSIFICATION	0.99993520310125	WITHOUT_CLASSIFICATION	6.47968987500614E-5	DEFECT
// Compact the results to remove unmatched objects //	WITHOUT_CLASSIFICATION	0.9999982802773805	WITHOUT_CLASSIFICATION	1.7197226194771695E-6	DEFECT
// If any objects are matched. //	WITHOUT_CLASSIFICATION	0.9999934245650668	WITHOUT_CLASSIFICATION	6.575434933195622E-6	DEFECT
// Remove from by position in reverse order. //	WITHOUT_CLASSIFICATION	0.99993520310125	WITHOUT_CLASSIFICATION	6.47968987500614E-5	DEFECT
// Compact the results to remove unmatched objects //	WITHOUT_CLASSIFICATION	0.9999982802773805	WITHOUT_CLASSIFICATION	1.7197226194771695E-6	DEFECT
// Create view form.     //control = new ViewForm(parent, getStyle());	WITHOUT_CLASSIFICATION	0.9999979714279682	WITHOUT_CLASSIFICATION	2.0285720318239596E-6	DEFECT
// Listen to title changes. // getViewPart().addPropertyListener(this);	WITHOUT_CLASSIFICATION	0.9999999413910482	WITHOUT_CLASSIFICATION	5.860895189866771E-8	DEFECT
//titleLabel.setBackground(WorkbenchColors.getActiveGradient(), WorkbenchColors.getActiveGradientPercents()); // titleLabel.setForeground(titleLabel.getDisplay().getSystemColor(SWT.COLOR_TITLE_FOREGROUND));	WITHOUT_CLASSIFICATION	0.9999999993015888	WITHOUT_CLASSIFICATION	6.984112890428453E-10	DEFECT
//actionBar.setBackground(WorkbenchColors.getActiveGradientEnd()); //systemBar.setBackground(WorkbenchColors.getActiveGradientEnd());	WITHOUT_CLASSIFICATION	0.9999998212817632	WITHOUT_CLASSIFICATION	1.7871823674838371E-7	DEFECT
//titleLabel.setBackground(null, null); // titleLabel.setForeground(null);	WITHOUT_CLASSIFICATION	0.9999929281929267	WITHOUT_CLASSIFICATION	7.071807073173078E-6	DEFECT
// IViewPart view = getViewPart(); // titleLabel.setText(view.getTitle()); // titleLabel.setImage(view.getTitleImage());	WITHOUT_CLASSIFICATION	0.999999955842278	WITHOUT_CLASSIFICATION	4.4157722105252627E-8	DEFECT
// If there are objects to populate... //	WITHOUT_CLASSIFICATION	0.999991286140341	WITHOUT_CLASSIFICATION	8.71385965893326E-6	DEFECT
// Create a new array. //	WITHOUT_CLASSIFICATION	0.9999989388932101	WITHOUT_CLASSIFICATION	1.0611067898583822E-6	DEFECT
// Fill in the result array with labels and re-populate the original list in order. //	WITHOUT_CLASSIFICATION	0.9999051124948871	WITHOUT_CLASSIFICATION	9.488750511295837E-5	DEFECT
// Fill in the array with labels. //	WITHOUT_CLASSIFICATION	0.9999780542052298	WITHOUT_CLASSIFICATION	2.1945794770315848E-5	DEFECT
// Get the index into the list via this call to super. //	WITHOUT_CLASSIFICATION	0.9999997726626938	WITHOUT_CLASSIFICATION	2.273373063033089E-7	DEFECT
// Set the index of the object value in the list via this call to super. //	WITHOUT_CLASSIFICATION	0.9999973765551406	WITHOUT_CLASSIFICATION	2.6234448593616944E-6	DEFECT
// Ensure there are no extraneous style bits. //	WITHOUT_CLASSIFICATION	0.999999995924367	WITHOUT_CLASSIFICATION	4.075633029102128E-9	DEFECT
// Assign default style bits, if necessary, and ensure none conflict. //	WITHOUT_CLASSIFICATION	0.999999991786324	WITHOUT_CLASSIFICATION	8.213675867326393E-9	DEFECT
// Paint over the selected padding spaces with the // background colour.  On GTK, the whole item, not just // the text, is selected, so we don't do this. //	WITHOUT_CLASSIFICATION	0.9999999999986257	WITHOUT_CLASSIFICATION	1.374402079595484E-12	DEFECT
// On Motif, selection color may be set as background. //	WITHOUT_CLASSIFICATION	0.9999986917219015	WITHOUT_CLASSIFICATION	1.3082780985053375E-6	DEFECT
// Draw the extra first-column image. //	WITHOUT_CLASSIFICATION	0.9999999360872203	WITHOUT_CLASSIFICATION	6.391277971281673E-8	DEFECT
// Stop if the next item will be out the event bounds. // The event bounds values are also misaligned on GTK. //	WITHOUT_CLASSIFICATION	0.9999999844220537	WITHOUT_CLASSIFICATION	1.5577946311130532E-8	DEFECT
// If the table is indenting, draw tree lines. //	WITHOUT_CLASSIFICATION	0.9999999462924988	WITHOUT_CLASSIFICATION	5.3707501312949336E-8	DEFECT
//private final boolean iri; //private URI cachedASCIIURI;	WITHOUT_CLASSIFICATION	0.9999994262724182	WITHOUT_CLASSIFICATION	5.737275818415482E-7	DEFECT
// Additional useful character classes, including characters valid in certain // URI components and separators used in parsing them out of a string.  // // | ucschar | escaped	WITHOUT_CLASSIFICATION	0.9999999998376806	WITHOUT_CLASSIFICATION	1.623193477636718E-10	DEFECT
//  private static final long SCHEME_CHAR_HI = ALPHANUM_HI | highBitmask("+-."); //  private static final long SCHEME_CHAR_LO = ALPHANUM_LO | lowBitmask("+-.");	WITHOUT_CLASSIFICATION	0.9999999221816669	WITHOUT_CLASSIFICATION	7.781833311341467E-8	DEFECT
// Returns the lower half bitmask for all ASCII characters between the two // given characters, inclusive.	WITHOUT_CLASSIFICATION	0.9999999936308782	WITHOUT_CLASSIFICATION	6.36912178072538E-9	DEFECT
// Returns the upper half bitmask for all AsCII characters between the two // given characters, inclusive.	WITHOUT_CLASSIFICATION	0.9999999556852684	WITHOUT_CLASSIFICATION	4.431473153210239E-8	DEFECT
// Returns the lower half bitmask for all the ASCII characters in the given // string.	WITHOUT_CLASSIFICATION	0.9999998804087546	WITHOUT_CLASSIFICATION	1.1959124538822325E-7	DEFECT
// Returns whether the given character is in the set specified by the given // bitmask.	WITHOUT_CLASSIFICATION	0.9999999955526795	WITHOUT_CLASSIFICATION	4.447320519051822E-9	DEFECT
// Converts null to length-zero array, and clones array to ensure // immutability.	WITHOUT_CLASSIFICATION	0.9999999923008086	WITHOUT_CLASSIFICATION	7.699191435609351E-9	DEFECT
// Checks whether the string contains any more segments after the one that // starts at position i.	WITHOUT_CLASSIFICATION	0.9999992329224273	WITHOUT_CLASSIFICATION	7.670775725802019E-7	DEFECT
// Validates all of the URI components.  Factory methods should call this // before using the constructor, though they must ensure that the // inter-component requirements described in their own Javadocs are all // satisfied, themselves.  If a new URI is being constructed out of // an existing URI, this need not be called.  Instead, just the new // components may be validated individually.	WITHOUT_CLASSIFICATION	0.999999999671029	WITHOUT_CLASSIFICATION	3.289709104763299E-10	DEFECT
// Alternate, stricter implementations of the following validation methods // are provided, commented out, for possible future use...	WITHOUT_CLASSIFICATION	0.999981769226618	WITHOUT_CLASSIFICATION	1.8230773382011166E-5	DEFECT
// <p>A valid scheme may be null, or consist of a single letter followed // by any number of letters, numbers, and the following characters: // <code>+ - .</code>	WITHOUT_CLASSIFICATION	0.9999978150638291	WITHOUT_CLASSIFICATION	2.1849361708918513E-6	DEFECT
// <p>A valid opaque part must be non-null and non-empty. It may contain // any allowed URI characters, but its first character may not be // <code>/</code> 	WITHOUT_CLASSIFICATION	0.999999975395588	WITHOUT_CLASSIFICATION	2.460441204236051E-8	DEFECT
//return value != null && value.length() != 0 && //  value.charAt(0) != SEGMENT_SEPARATOR && //  validate(value, URIC_HI, URIC_LO, true, true);	WITHOUT_CLASSIFICATION	0.9999941423163524	WITHOUT_CLASSIFICATION	5.857683647656448E-6	DEFECT
// A valid authority may be null or contain any allowed URI characters except // for the following: <code>/ ?</code>	WITHOUT_CLASSIFICATION	0.9999999519024245	WITHOUT_CLASSIFICATION	4.8097575523354836E-8	DEFECT
// <p>A valid path segment must be non-null and may contain any allowed URI // characters except for the following: <code>/ ?</code> 	WITHOUT_CLASSIFICATION	0.9999999198032717	WITHOUT_CLASSIFICATION	8.01967282214895E-8	DEFECT
// Returns null if the specified value is null or would be a valid path // segment array of a URI; otherwise, the value of the first invalid // segment. 	WITHOUT_CLASSIFICATION	0.9999995587197439	WITHOUT_CLASSIFICATION	4.4128025619230615E-7	DEFECT
// Searches the specified string for any characters in the set represented // by the 128-bit bitmask.  Returns true if any occur, or false otherwise.	WITHOUT_CLASSIFICATION	0.9999999999735765	WITHOUT_CLASSIFICATION	2.6423514202837136E-11	DEFECT
// note: (absolutePath || authority == null) -> hierarchical // (authority == null && device == null && !absolutePath) -> scheme == null	WITHOUT_CLASSIFICATION	0.9999993385398331	WITHOUT_CLASSIFICATION	6.614601669435126E-7	DEFECT
// note: authority == null -> hierarchical // (authority == null && device == null && !absolutePath) -> scheme == null	WITHOUT_CLASSIFICATION	0.9999993465163426	WITHOUT_CLASSIFICATION	6.534836573434435E-7	DEFECT
// note: authority == null -> hierarchical // (authority == null && device == null && !absolutePath) -> scheme == null	WITHOUT_CLASSIFICATION	0.9999993465163426	WITHOUT_CLASSIFICATION	6.534836573434435E-7	DEFECT
// note: authority == null -> hierarchical // (authority == null && device == null && !absolutePath) -> scheme == null	WITHOUT_CLASSIFICATION	0.9999993465163426	WITHOUT_CLASSIFICATION	6.534836573434435E-7	DEFECT
// Returns true if the given value is an archive scheme, as defined by // the org.eclipse.emf.common.util.URI.archiveSchemes system property. // By default, "jar", "zip", and "archive" are considered archives.	WITHOUT_CLASSIFICATION	0.9999997692049319	WITHOUT_CLASSIFICATION	2.3079506801020964E-7	DEFECT
// Tests whether this URI's path segment array is equal to that of the // given uri.	WITHOUT_CLASSIFICATION	0.999999877081145	WITHOUT_CLASSIFICATION	1.2291885491288745E-7	DEFECT
// Tests two objects for equality, tolerating nulls; null is considered // to be a valid value that is only equal to itself.	WITHOUT_CLASSIFICATION	0.999997765534128	WITHOUT_CLASSIFICATION	2.2344658720582287E-6	DEFECT
// Tests two strings for equality, tolerating nulls and optionally // ignoring case.	WITHOUT_CLASSIFICATION	0.9999999862203632	WITHOUT_CLASSIFICATION	1.3779636673637585E-8	DEFECT
// note: it's okay for two URIs to share a segments array, since // neither will ever modify it	WITHOUT_CLASSIFICATION	0.999989997903963	WITHOUT_CLASSIFICATION	1.0002096036953697E-5	DEFECT
// relative path: merge with base and keep query (note: if the // base has no path and this a non-empty relative path, there is // an implied root in the resulting path) 	WITHOUT_CLASSIFICATION	0.9999912206123875	WITHOUT_CLASSIFICATION	8.779387612435951E-6	DEFECT
// always keep fragment, even if null, and use scheme from base; // no validation needed since all components are from existing URIs	WITHOUT_CLASSIFICATION	0.9999999990807842	WITHOUT_CLASSIFICATION	9.192157555372843E-10	DEFECT
// use a stack to accumulate segments of base, except for the last // (i.e. skip trailing separator and anything following it), and of // relative path	WITHOUT_CLASSIFICATION	0.999999639275816	WITHOUT_CLASSIFICATION	3.607241839042339E-7	DEFECT
// Adds a segment to a stack, skipping empty segments and self references, // and interpreting parent references.	WITHOUT_CLASSIFICATION	0.9999997240042205	WITHOUT_CLASSIFICATION	2.759957795098108E-7	DEFECT
// special care must be taken for a root's parent reference: it is // either ignored or the symbolic reference itself is pushed	WITHOUT_CLASSIFICATION	0.9999996827330044	WITHOUT_CLASSIFICATION	3.1726699556492464E-7	DEFECT
// unless we're already accumulating root parent references, // parent references simply pop the last segment descended	WITHOUT_CLASSIFICATION	0.999999172653469	WITHOUT_CLASSIFICATION	8.273465309178628E-7	DEFECT
// note: these assertions imply that neither this nor the base URI has a // relative path; thus, both have either an absolute path or no path	WITHOUT_CLASSIFICATION	0.9999890120809132	WITHOUT_CLASSIFICATION	1.0987919086810237E-5	DEFECT
// Returns the shortest relative path between the the non-relative path of // the given base and this absolute path.  If the base has no path, it is // treated as the root absolute path.	WITHOUT_CLASSIFICATION	0.9999997377545568	WITHOUT_CLASSIFICATION	2.6224544329137425E-7	DEFECT
// note that the copied tree should not be modified by wrapped ASTJField // // the copied tree will have source ranges for all nodes in the source file, // hence, the get methods in the new ASTJField will not return the right contents	WITHOUT_CLASSIFICATION	0.9999673287573096	WITHOUT_CLASSIFICATION	3.267124269024768E-5	DEFECT
// a single separator, possibly preceded by some parent reference // segments, is redundant	WITHOUT_CLASSIFICATION	0.9998283012047363	WITHOUT_CLASSIFICATION	1.7169879526377922E-4	DEFECT
// an empty path needs to be replaced by a single "." if there is no // query, to distinguish it from a current document reference	WITHOUT_CLASSIFICATION	0.999999997052301	WITHOUT_CLASSIFICATION	2.9476989804754006E-9	DEFECT
// Collapses non-ending empty segments, parent references, and self // references in a non-relative path, returning the same path that would // be produced from the base hierarchical URI as part of a resolve.	WITHOUT_CLASSIFICATION	0.9999998296978909	WITHOUT_CLASSIFICATION	1.7030210910284328E-7	DEFECT
// if the path is non-empty and originally ended in an empty segment, a // parent reference, or a self reference, add a trailing separator	WITHOUT_CLASSIFICATION	0.9999982507420672	WITHOUT_CLASSIFICATION	1.7492579328768987E-6	DEFECT
// Returns a string representation of this URI for debugging, explicitly // showing each of the components.	WITHOUT_CLASSIFICATION	0.999995702988672	WITHOUT_CLASSIFICATION	4.2970113279262955E-6	DEFECT
// If the new prefix has segments, it is not the root absolute path, // and we need to drop the trailing empty segment and append the tail // segments.	WITHOUT_CLASSIFICATION	0.9999816044233903	WITHOUT_CLASSIFICATION	1.839557660967246E-5	DEFECT
// If this is a hierarchical URI reference and prefix is a prefix of it, // returns the portion of the path remaining after that prefix has been // trimmed; null otherwise.	WITHOUT_CLASSIFICATION	0.9999556815365733	WITHOUT_CLASSIFICATION	4.43184634266334E-5	DEFECT
// Don't even consider it unless this is hierarchical and has scheme, // authority, device and path absoluteness equal to those of the prefix.	WITHOUT_CLASSIFICATION	0.9999997941014241	WITHOUT_CLASSIFICATION	2.0589857584459755E-7	DEFECT
// If the prefix has no segments, then it is the root absolute path, and // we know this is an absolute path, too.	WITHOUT_CLASSIFICATION	0.9999251734086693	WITHOUT_CLASSIFICATION	7.482659133070713E-5	DEFECT
// This must have no fewer segments than the prefix.  Since the prefix // is not the root absolute path, its last segment is empty; all others // must match.	WITHOUT_CLASSIFICATION	0.9999998338935397	WITHOUT_CLASSIFICATION	1.6610646030595867E-7	DEFECT
// create new field and replace it all by original contents	WITHOUT_CLASSIFICATION	0.9999996796452969	WITHOUT_CLASSIFICATION	3.2035470309454385E-7	DEFECT
// The prefix really is a prefix of this.  If this has just one more, // empty segment, the paths are the same.	WITHOUT_CLASSIFICATION	0.9999974806884123	WITHOUT_CLASSIFICATION	2.519311587588232E-6	DEFECT
// Encodes a complete URI, optionally leaving % characters unescaped when // beginning a valid three-character escape sequence.  We can either treat // the first or # as a fragment separator, or encode them all.	WITHOUT_CLASSIFICATION	0.9999999983047757	WITHOUT_CLASSIFICATION	1.6952243405045334E-9	DEFECT
// range to look for comments	WITHOUT_CLASSIFICATION	0.9999998451334363	WITHOUT_CLASSIFICATION	1.5486656368841452E-7	DEFECT
// Encodes the given string, replacing each ASCII character that is not in // the set specified by the 128-bit bitmask and each non-ASCII character // below 0xA0 by an escape sequence of % followed by two hex digits.  If // % is not in the set but ignoreEscaped is true, then % will not be encoded // iff it already begins a valid escape sequence.	WITHOUT_CLASSIFICATION	0.9999999806637114	WITHOUT_CLASSIFICATION	1.9336288550489135E-8	DEFECT
// Tests whether an escape occurs in the given string, starting at index i. // An escape sequence is a % followed by two hex digits.	WITHOUT_CLASSIFICATION	0.9999977587169288	WITHOUT_CLASSIFICATION	2.241283071190797E-6	DEFECT
// find start position of farthest preceding comment	WITHOUT_CLASSIFICATION	0.9999538902160829	WITHOUT_CLASSIFICATION	4.610978391707674E-5	DEFECT
// The byte is automatically widened into an int, with sign extension, // for shifting.  This can introduce 1's to the left of the byte, which // must be cleared by masking before looking up the hex digit. //	WITHOUT_CLASSIFICATION	0.9999992814062852	WITHOUT_CLASSIFICATION	7.185937147454113E-7	DEFECT
// Returns the character encoded by % followed by the two given hex digits, // which is always 0xFF or less, so can safely be casted to a byte.  If // either character is not a hex digit, a bogus result will be returned.	WITHOUT_CLASSIFICATION	0.9992953943431048	WITHOUT_CLASSIFICATION	7.0460565689526E-4	DEFECT
// Determine the base URL by looking for the plugin.properties file in the standard way. //	WITHOUT_CLASSIFICATION	0.99998678053516	WITHOUT_CLASSIFICATION	1.3219464840058996E-5	DEFECT
// add leading hanging comments to the previous node, // hence, only comments immediately preceding the node will be in the range for removal	WITHOUT_CLASSIFICATION	0.9999269240574721	WITHOUT_CLASSIFICATION	7.307594252791044E-5	DEFECT
// for enum constants use special range	WITHOUT_CLASSIFICATION	0.9999999926220757	WITHOUT_CLASSIFICATION	7.377924319033086E-9	DEFECT
//  /** //   * Simpler implementation that sets the range of any node to be the node and all preceding comments //   */ //  public SourceRange computeSourceRange(ASTNode node) //  { //    SourceRange range = new SourceRange(node.getStartPosition(), node.getLength()); // //    range = extendRangeBackward(findLeadingComment(node, getPreviousNode(node), false), range); // //    return range; //  }	WITHOUT_CLASSIFICATION	0.9999997013562063	WITHOUT_CLASSIFICATION	2.986437937082991E-7	DEFECT
// default implementation does nothing	WITHOUT_CLASSIFICATION	0.9999945402316813	WITHOUT_CLASSIFICATION	5.459768318606448E-6	DEFECT
// clear old values	WITHOUT_CLASSIFICATION	0.9999996931673697	WITHOUT_CLASSIFICATION	3.0683263021255065E-7	DEFECT
// Trim off the segments corresponding to the package nesting. //	WITHOUT_CLASSIFICATION	0.9999862357555964	WITHOUT_CLASSIFICATION	1.3764244403628536E-5	DEFECT
// For an archive URI, check for the plugin.properties in the archive. //	WITHOUT_CLASSIFICATION	0.9999986926480935	WITHOUT_CLASSIFICATION	1.3073519064151304E-6	DEFECT
// append extra dimensions since they are not stored in Type object	WITHOUT_CLASSIFICATION	0.9999936691281474	WITHOUT_CLASSIFICATION	6.330871852575681E-6	DEFECT
// Trim off the "bin" or "runtime" segment. //	WITHOUT_CLASSIFICATION	0.9999981383376456	WITHOUT_CLASSIFICATION	1.8616623543223235E-6	DEFECT
// If the plugin.properties isn't within the root of the archive, // create a new URI for the folder location of the archive, // so we can look in the folder that contains it. //	WITHOUT_CLASSIFICATION	0.9998730707810811	WITHOUT_CLASSIFICATION	1.2692921891887282E-4	DEFECT
// If we didn't find the plugin.properties in the usual place nor in the archive... //	WITHOUT_CLASSIFICATION	0.999887055020383	WITHOUT_CLASSIFICATION	1.1294497961702415E-4	DEFECT
// If we can open  an input stream, then the plugin.properties is in the folder, and we have a good base URL. //	WITHOUT_CLASSIFICATION	0.9995528594783782	WITHOUT_CLASSIFICATION	4.471405216216818E-4	DEFECT
// If we still don't have a good base URL, complain about it. //	WITHOUT_CLASSIFICATION	0.9998204938411978	WITHOUT_CLASSIFICATION	1.7950615880217788E-4	DEFECT
// We don't create an iterator stack until the root mapping itself has been returned by next once. // After that the stack should be non-empty and the top iterator should yield true for hasNext.	WITHOUT_CLASSIFICATION	0.999981635841249	WITHOUT_CLASSIFICATION	1.8364158751077936E-5	DEFECT
// If we are still on the root mapping itself... //	WITHOUT_CLASSIFICATION	0.9990326585870488	WITHOUT_CLASSIFICATION	9.673414129512523E-4	DEFECT
// Yield that mapping, create a stack, record it as the next one to prune, and add it to the stack. //	WITHOUT_CLASSIFICATION	0.9999922711693309	WITHOUT_CLASSIFICATION	7.72883066913352E-6	DEFECT
// Get the top iterator, retrieve it's result, and record it as the one to which remove will be delegated. //	WITHOUT_CLASSIFICATION	0.9999999998866154	WITHOUT_CLASSIFICATION	1.1338461540441443E-10	DEFECT
// If the result about to be returned has children... //	WITHOUT_CLASSIFICATION	0.9999182221272978	WITHOUT_CLASSIFICATION	8.17778727022902E-5	DEFECT
// Record the iterator as the next one to prune, and add it to the stack. //	WITHOUT_CLASSIFICATION	0.999998904208087	WITHOUT_CLASSIFICATION	1.0957919129867913E-6	DEFECT
// There will be no iterator to prune. //	WITHOUT_CLASSIFICATION	0.9999998768435658	WITHOUT_CLASSIFICATION	1.231564341422806E-7	DEFECT
// While the current iterator has no next... //	WITHOUT_CLASSIFICATION	0.9999963745612094	WITHOUT_CLASSIFICATION	3.625438790675876E-6	DEFECT
// Pop it from the stack. //	WITHOUT_CLASSIFICATION	0.999999405258898	WITHOUT_CLASSIFICATION	5.947411019000845E-7	DEFECT
// If the stack is empty, we're done. //	WITHOUT_CLASSIFICATION	0.9999976784489322	WITHOUT_CLASSIFICATION	2.321551067874957E-6	DEFECT
// if the given class is subclass of enum and node is of subclass of type	WITHOUT_CLASSIFICATION	0.9999844573210609	WITHOUT_CLASSIFICATION	1.5542678939100132E-5	DEFECT
// Pop it off the stack. //	WITHOUT_CLASSIFICATION	0.9999998541252993	WITHOUT_CLASSIFICATION	1.458747006653437E-7	DEFECT
// Get the next one down and then test it for has next. //	WITHOUT_CLASSIFICATION	0.9999998974318943	WITHOUT_CLASSIFICATION	1.0256810571448948E-7	DEFECT
// If there is an iterator to prune. //	WITHOUT_CLASSIFICATION	0.9999999854615491	WITHOUT_CLASSIFICATION	1.4538450853855494E-8	DEFECT
// You can only prune once. //	WITHOUT_CLASSIFICATION	0.999997919253891	WITHOUT_CLASSIFICATION	2.0807461088608025E-6	DEFECT
// If that iterator is still at the top of the stack... //	WITHOUT_CLASSIFICATION	0.9999828856652461	WITHOUT_CLASSIFICATION	1.711433475392347E-5	DEFECT
// Allow for a bit-shift of growth. //	WITHOUT_CLASSIFICATION	0.9999993734957541	WITHOUT_CLASSIFICATION	6.265042459831844E-7	DEFECT
// Keep popping the stack until an iterator that has a next is at the top. //	WITHOUT_CLASSIFICATION	0.999951487441579	WITHOUT_CLASSIFICATION	4.8512558421047175E-5	DEFECT
// Conditionally create the data. //	WITHOUT_CLASSIFICATION	0.9999835346191936	WITHOUT_CLASSIFICATION	1.646538080638642E-5	DEFECT
//  ++modCount //	WITHOUT_CLASSIFICATION	0.9999977756269425	WITHOUT_CLASSIFICATION	2.22437305755019E-6	DEFECT
// Guard for no data. //	WITHOUT_CLASSIFICATION	0.9999998963687639	WITHOUT_CLASSIFICATION	1.0363123609407483E-7	DEFECT
// Guard for no data. //	WITHOUT_CLASSIFICATION	0.9999998963687639	WITHOUT_CLASSIFICATION	1.0363123609407483E-7	DEFECT
// ++modCount //	WITHOUT_CLASSIFICATION	0.9999987911882716	WITHOUT_CLASSIFICATION	1.2088117283461683E-6	DEFECT
// ++modCount //	WITHOUT_CLASSIFICATION	0.9999987911882716	WITHOUT_CLASSIFICATION	1.2088117283461683E-6	DEFECT
// Conditionally create the data. //	WITHOUT_CLASSIFICATION	0.9999835346191936	WITHOUT_CLASSIFICATION	1.646538080638642E-5	DEFECT
// ++modCount //	WITHOUT_CLASSIFICATION	0.9999987911882716	WITHOUT_CLASSIFICATION	1.2088117283461683E-6	DEFECT
// Don't hold onto a duplicate reference to the last object. //	WITHOUT_CLASSIFICATION	0.9999997678761414	WITHOUT_CLASSIFICATION	2.321238585986287E-7	DEFECT
// Give it all back to the garbage collector. //	WITHOUT_CLASSIFICATION	0.9999988288035665	WITHOUT_CLASSIFICATION	1.1711964334960134E-6	DEFECT
// Give it all back to the garbage collector. //	WITHOUT_CLASSIFICATION	0.9999988288035665	WITHOUT_CLASSIFICATION	1.1711964334960134E-6	DEFECT
// Write the capacity. //	WITHOUT_CLASSIFICATION	0.9999987726951116	WITHOUT_CLASSIFICATION	1.2273048884428788E-6	DEFECT
// create map of public static final field initializers to fields	WITHOUT_CLASSIFICATION	0.9999999701189864	WITHOUT_CLASSIFICATION	2.988101355081701E-8	DEFECT
// This seems to be a pretty sweet formula that supports good growth. // Adding an object to a list will create a list of capacity 4,  // which is just about the average list size. //	WITHOUT_CLASSIFICATION	0.9999999826018571	WITHOUT_CLASSIFICATION	1.739814296337118E-8	DEFECT
// This should be transparent. //	WITHOUT_CLASSIFICATION	0.9999097263946087	WITHOUT_CLASSIFICATION	9.027360539128117E-5	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999995972496601	WITHOUT_CLASSIFICATION	4.0275033974482523E-7	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999995972496601	WITHOUT_CLASSIFICATION	4.0275033974482523E-7	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999995972496601	WITHOUT_CLASSIFICATION	4.0275033974482523E-7	DEFECT
// Write all the entryData; there will be size of them. //	WITHOUT_CLASSIFICATION	0.9999939882111594	WITHOUT_CLASSIFICATION	6.011788840710184E-6	DEFECT
// Restore the capacity, if there was any. //	WITHOUT_CLASSIFICATION	0.9999991009449495	WITHOUT_CLASSIFICATION	8.990550504855274E-7	DEFECT
// Read all size number of entryData. //	WITHOUT_CLASSIFICATION	0.9999921025434854	WITHOUT_CLASSIFICATION	7.897456514654405E-6	DEFECT
//0000 0000 0001 //0000 0000 0010 //0000 0000 0100 //0000 0000 1000 //0001 0000 0000 //0010 0000 0000 //0100 0000 0000 //1000 0000 0000	WITHOUT_CLASSIFICATION	0.9999940671962481	WITHOUT_CLASSIFICATION	5.932803751903945E-6	DEFECT
//0000 0000 1111 //1111 0000 0000	WITHOUT_CLASSIFICATION	0.9999928794851375	WITHOUT_CLASSIFICATION	7.120514862490231E-6	DEFECT
// This just represents going back to the unset state, but that doesn't affect the contents of the list. //	WITHOUT_CLASSIFICATION	0.9999991595413479	WITHOUT_CLASSIFICATION	8.404586521067455E-7	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999995972496601	WITHOUT_CLASSIFICATION	4.0275033974482523E-7	DEFECT
// add all converted fields after the last final field  // that is used in initializers of the converted fields	WITHOUT_CLASSIFICATION	0.9999999919146598	WITHOUT_CLASSIFICATION	8.085340203229904E-9	DEFECT
// Internal bootstrap uses Literals constants, so we must force initialization this inner interface first. //	WITHOUT_CLASSIFICATION	0.9999999996399138	WITHOUT_CLASSIFICATION	3.600860785569267E-10	DEFECT
// Open an editor on the new file. //	WITHOUT_CLASSIFICATION	0.9999987406468108	WITHOUT_CLASSIFICATION	1.2593531891924936E-6	DEFECT
// create field initializer from enum constant's arguments and body	WITHOUT_CLASSIFICATION	0.9999999879878798	WITHOUT_CLASSIFICATION	1.2012120161075794E-8	DEFECT
// Apply the change. //	WITHOUT_CLASSIFICATION	0.9999986654009202	WITHOUT_CLASSIFICATION	1.334599079797724E-6	DEFECT
// Delete the change information because it is invalid now that the objects have been changed. //	WITHOUT_CLASSIFICATION	0.9999999999056925	WITHOUT_CLASSIFICATION	9.430742253755001E-11	DEFECT
// Apply the change and reverse the change information. //	WITHOUT_CLASSIFICATION	0.9999999154980186	WITHOUT_CLASSIFICATION	8.450198147934745E-8	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999995972496601	WITHOUT_CLASSIFICATION	4.0275033974482523E-7	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999827188826	WITHOUT_CLASSIFICATION	1.7281117422851505E-8	DEFECT
// set original node of annotations (to allow get methods to work correctly)	WITHOUT_CLASSIFICATION	0.9940372573989784	WITHOUT_CLASSIFICATION	0.005962742601021567	DEFECT
// The next line leaves objectsBeforeApply with all the objects that were // added during the last recording.	WITHOUT_CLASSIFICATION	0.9996441997393959	WITHOUT_CLASSIFICATION	3.5580026060412457E-4	DEFECT
// Reverse the objects to attach and detach lists. //	WITHOUT_CLASSIFICATION	0.9999997764823879	WITHOUT_CLASSIFICATION	2.235176121704295E-7	DEFECT
// Make sure the changed values of bidirectional reference lists are cached before we //  start to apply the change. //	WITHOUT_CLASSIFICATION	0.9999999995216866	WITHOUT_CLASSIFICATION	4.783133480101918E-10	DEFECT
// This case will be handled special during apply //	WITHOUT_CLASSIFICATION	0.999999220537455	WITHOUT_CLASSIFICATION	7.794625449748805E-7	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999827188826	WITHOUT_CLASSIFICATION	1.7281117422851505E-8	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999827188826	WITHOUT_CLASSIFICATION	1.7281117422851505E-8	DEFECT
// New Template Container Entryfield	WITHOUT_CLASSIFICATION	0.9999999969447758	WITHOUT_CLASSIFICATION	3.0552242172350064E-9	DEFECT
// If there's no position, the list is being cleared. //	WITHOUT_CLASSIFICATION	0.9999981600440333	WITHOUT_CLASSIFICATION	1.8399559666558984E-6	DEFECT
// If there's no position, the list is being cleared. //	WITHOUT_CLASSIFICATION	0.9999981600440333	WITHOUT_CLASSIFICATION	1.8399559666558984E-6	DEFECT
// EEnumImpl overrides this to do nothing. // The only case that is special is when a more specific instance of AbstractEnumerator is generated/reused. //	WITHOUT_CLASSIFICATION	0.9999998907174111	WITHOUT_CLASSIFICATION	1.0928258880685254E-7	DEFECT
// When we attached we have to recompute the erasure of the type parameter. //	WITHOUT_CLASSIFICATION	0.9999997332824203	WITHOUT_CLASSIFICATION	2.6671757977980045E-7	DEFECT
// Interprets escaped characters within the string according to Java // literal rules, with two exceptions: an unescaped " does not terminate // the string, and a \ not followed by b, t, n, f, r, ", ', u, or an octal // digit is taken literally, not as an error	WITHOUT_CLASSIFICATION	0.9999935795507604	WITHOUT_CLASSIFICATION	6.420449239634232E-6	DEFECT
// Create annotations // http:///org/eclipse/emf/ecore/util/ExtendedMetaData	WITHOUT_CLASSIFICATION	0.9999986127543973	WITHOUT_CLASSIFICATION	1.3872456027501039E-6	DEFECT
// This is needed for internal bootstrapping of EGenericType's default value for eRawType. // It's simply not available before Ecore is constructed so we make it available and then patch what's missing. //	WITHOUT_CLASSIFICATION	0.9999999363664082	WITHOUT_CLASSIFICATION	6.363359190780084E-8	DEFECT
// Create a key set that supports add. //	WITHOUT_CLASSIFICATION	0.9999989762155752	WITHOUT_CLASSIFICATION	1.0237844248133446E-6	DEFECT
// Skip derived features. //	WITHOUT_CLASSIFICATION	0.9999998830359541	WITHOUT_CLASSIFICATION	1.1696404597762731E-7	DEFECT
// Include derived relations only if they won't also come from mixed or a group. //	WITHOUT_CLASSIFICATION	0.9998864649264773	WITHOUT_CLASSIFICATION	1.1353507352274712E-4	DEFECT
// If this is just a proxy being resolved... //	WITHOUT_CLASSIFICATION	0.9999259918506012	WITHOUT_CLASSIFICATION	7.400814939893224E-5	DEFECT
// Force the raw type to be resolved so we don't resolve this endlessly. //	WITHOUT_CLASSIFICATION	0.9999789476606793	WITHOUT_CLASSIFICATION	2.105233932068827E-5	DEFECT
// Update the classifier and hence the raw type as normal. //	WITHOUT_CLASSIFICATION	0.9999995928782552	WITHOUT_CLASSIFICATION	4.071217446862965E-7	DEFECT
// The notification for this list is being thrown by the // delegating list //	WITHOUT_CLASSIFICATION	0.9999938116348811	WITHOUT_CLASSIFICATION	6.188365118856348E-6	DEFECT
// At development time, the real factory may not be available. Just return null. //	WITHOUT_CLASSIFICATION	0.9999999291419193	WITHOUT_CLASSIFICATION	7.085808078386541E-8	DEFECT
// Interprets escaped characters according to Java literal rules, with one // exception: a single \ is taken literally, not as an error.	WITHOUT_CLASSIFICATION	0.9999966045087613	WITHOUT_CLASSIFICATION	3.395491238831761E-6	DEFECT
// protected static final EStructuralFeature CONTAINING_FEATURE = new EReferenceImpl(); // protected static final EStructuralFeature CONTAINER = new EReferenceImpl();	WITHOUT_CLASSIFICATION	0.9999999998736631	WITHOUT_CLASSIFICATION	1.263368218126475E-10	DEFECT
// Entry entry = new Entry(eObject, CONTAINER); // return (InternalEObject)map.get(entry);	WITHOUT_CLASSIFICATION	0.9999998714857803	WITHOUT_CLASSIFICATION	1.285142197176299E-7	DEFECT
// This should never be called. //	WITHOUT_CLASSIFICATION	0.999999441778401	WITHOUT_CLASSIFICATION	5.582215989251785E-7	DEFECT
// Entry entry = new Entry(eObject, CONTAINING_FEATURE); // return (EStructuralFeature)map.get(entry);	WITHOUT_CLASSIFICATION	0.9999999979271835	WITHOUT_CLASSIFICATION	2.072816430333058E-9	DEFECT
// eContainer = newContainer; // eContainerFeatureID = newContainerFeatureID;	WITHOUT_CLASSIFICATION	0.9999999147845439	WITHOUT_CLASSIFICATION	8.52154562290848E-8	DEFECT
// Since the cycle is detected by checking if we hit "this" again, after many iterations we'll call this method recursively  // in case we started with something that wasn't part of a cycle but later traversed up to a cycle. //	WITHOUT_CLASSIFICATION	0.9999995484649947	WITHOUT_CLASSIFICATION	4.515350052792379E-7	DEFECT
// When setting the resource to null we assume that detach has already been called in the resource implementation //	WITHOUT_CLASSIFICATION	0.9999995414443084	WITHOUT_CLASSIFICATION	4.585556915546565E-7	DEFECT
/**   * Performs escape encoding on the given string so that it can be represented using 1-byte characters.   * Any characters higher than 0xFF are replaced with an escape of the form \\uXXXX, where XXXX is the   * four-digit hex representation of the Unicode code point.   */	WITHOUT_CLASSIFICATION	0.9999894511086361	WITHOUT_CLASSIFICATION	1.0548891363954147E-5	DEFECT
// Compute the offset in the sequence of bit patterns for this feature ID // and then get the bit pattern at that index. //	WITHOUT_CLASSIFICATION	0.9999891440081309	WITHOUT_CLASSIFICATION	1.0855991869227158E-5	DEFECT
// Compute the index within that bit pattern for this feature ID // and fetch that bit at that index. //	WITHOUT_CLASSIFICATION	0.9999891186843144	WITHOUT_CLASSIFICATION	1.0881315685684282E-5	DEFECT
// For isSet, we only need to check the bit and return -1 when the bit is 0. //	WITHOUT_CLASSIFICATION	0.9999993143155644	WITHOUT_CLASSIFICATION	6.856844356054853E-7	DEFECT
// If the value index set, there's no index to return. //	WITHOUT_CLASSIFICATION	0.9999989457290086	WITHOUT_CLASSIFICATION	1.0542709913917167E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999476785159	WITHOUT_CLASSIFICATION	5.232148409313304E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999476785159	WITHOUT_CLASSIFICATION	5.232148409313304E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999476785159	WITHOUT_CLASSIFICATION	5.232148409313304E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999476785159	WITHOUT_CLASSIFICATION	5.232148409313304E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999476785159	WITHOUT_CLASSIFICATION	5.232148409313304E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999476785159	WITHOUT_CLASSIFICATION	5.232148409313304E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999476785159	WITHOUT_CLASSIFICATION	5.232148409313304E-8	DEFECT
// Count just the bits up to this one. // Note that shifting 32 bits is a no op. //	WITHOUT_CLASSIFICATION	0.9999999999197144	WITHOUT_CLASSIFICATION	8.02855447524164E-11	DEFECT
// Count all the bits in the bit patterns up to this one in the sequence of bit patterns. //	WITHOUT_CLASSIFICATION	0.9999995459366045	WITHOUT_CLASSIFICATION	4.540633955913324E-7	DEFECT
// Determine the index for the feature and return the value at that index, if an index is assigned. //	WITHOUT_CLASSIFICATION	0.9999999767910478	WITHOUT_CLASSIFICATION	2.320895211255267E-8	DEFECT
// Determine if an index is assigned. //	WITHOUT_CLASSIFICATION	0.9999999751915327	WITHOUT_CLASSIFICATION	2.4808467371147242E-8	DEFECT
// Determine the index. //	WITHOUT_CLASSIFICATION	0.9999995060569924	WITHOUT_CLASSIFICATION	4.93943007592792E-7	DEFECT
// If it's newly allocated, add a new value, and indicate there was no previous value. //	WITHOUT_CLASSIFICATION	0.9999999841260812	WITHOUT_CLASSIFICATION	1.5873918813585966E-8	DEFECT
// Set the value at the previously allocated index and return the previous value there. //	WITHOUT_CLASSIFICATION	0.9999933385905155	WITHOUT_CLASSIFICATION	6.661409484446844E-6	DEFECT
// Forward the interned value. //	WITHOUT_CLASSIFICATION	0.9999994358091483	WITHOUT_CLASSIFICATION	5.641908517491371E-7	DEFECT
// If it's a parameterized type... //	WITHOUT_CLASSIFICATION	0.9985303590745228	WITHOUT_CLASSIFICATION	0.001469640925477209	DEFECT
// The instance class name is the erasure. //	WITHOUT_CLASSIFICATION	0.9999995289783367	WITHOUT_CLASSIFICATION	4.7102166330164166E-7	DEFECT
// If the name isn't a qualified name and isn't a primitive type, it's assumed to denote some arbitrary type parameter. //	WITHOUT_CLASSIFICATION	0.9999999818242294	WITHOUT_CLASSIFICATION	1.8175770593891572E-8	DEFECT
// Be sure to pick up any trailing [] brackets. //	WITHOUT_CLASSIFICATION	0.9999991979787756	WITHOUT_CLASSIFICATION	8.020212243350279E-7	DEFECT
// If there is a cached result, return it. // We expect that if the package is set to be a proxy,  // the code in EPackageImpl.eSetProxyURI override will have cleared this value. //	WITHOUT_CLASSIFICATION	0.9999020618498535	WITHOUT_CLASSIFICATION	9.793815014636776E-5	DEFECT
// If the result is not a proxy, cache it. //	WITHOUT_CLASSIFICATION	0.9997414972305623	WITHOUT_CLASSIFICATION	2.5850276943776093E-4	DEFECT
// If we turn the package into a proxy, ensure that the child classifiers clear their cached container. //	WITHOUT_CLASSIFICATION	0.9999999838032322	WITHOUT_CLASSIFICATION	1.619676775362995E-8	DEFECT
// Is the first character a special character, i.e., something other than '@'? //	WITHOUT_CLASSIFICATION	0.9999999958616147	WITHOUT_CLASSIFICATION	4.138385232922881E-9	DEFECT
// Is it the start of a source URI of an annotation? //	WITHOUT_CLASSIFICATION	0.999999732935236	WITHOUT_CLASSIFICATION	2.670647639854218E-7	DEFECT
// Recompute the read only state. //	WITHOUT_CLASSIFICATION	0.9999993280125071	WITHOUT_CLASSIFICATION	6.71987492960909E-7	DEFECT
// Refresh any actions that may become enabled or disabled. //	WITHOUT_CLASSIFICATION	0.9995188432917116	WITHOUT_CLASSIFICATION	4.8115670828836204E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999476785159	WITHOUT_CLASSIFICATION	5.232148409313304E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999476785159	WITHOUT_CLASSIFICATION	5.232148409313304E-8	DEFECT
// If this is just a proxy being resolved... //	WITHOUT_CLASSIFICATION	0.9999259918506012	WITHOUT_CLASSIFICATION	7.400814939893224E-5	DEFECT
// Force the raw type to be resolved so we don't resolve this endlessly. //	WITHOUT_CLASSIFICATION	0.9999789476606793	WITHOUT_CLASSIFICATION	2.105233932068827E-5	DEFECT
// Update the classifier and hence the raw type as normal. //	WITHOUT_CLASSIFICATION	0.9999995928782552	WITHOUT_CLASSIFICATION	4.071217446862965E-7	DEFECT
// Find the closing '%' //	WITHOUT_CLASSIFICATION	0.999999847272555	WITHOUT_CLASSIFICATION	1.5272744494514955E-7	DEFECT
// Decode all encoded characters. //	WITHOUT_CLASSIFICATION	0.9999999784835936	WITHOUT_CLASSIFICATION	2.151640641170676E-8	DEFECT
// Check for a count, i.e., a '.' followed by a number. //	WITHOUT_CLASSIFICATION	0.9999996991056228	WITHOUT_CLASSIFICATION	3.0089437719317257E-7	DEFECT
// Look for the annotation with the matching source. //	WITHOUT_CLASSIFICATION	0.9999997947633038	WITHOUT_CLASSIFICATION	2.0523669613824312E-7	DEFECT
// Look for trailing count. //	WITHOUT_CLASSIFICATION	0.9999994726072037	WITHOUT_CLASSIFICATION	5.273927963549559E-7	DEFECT
// Look for a matching named element. //	WITHOUT_CLASSIFICATION	0.9999993441515496	WITHOUT_CLASSIFICATION	6.558484503638288E-7	DEFECT
// Find the uppermost class loader in the hierarchy that can load the class. //	WITHOUT_CLASSIFICATION	0.9999997166506426	WITHOUT_CLASSIFICATION	2.8334935735208825E-7	DEFECT
// We can't find the class, so we don't want this class loader, // but instead want the last result that was able to load the class. //	WITHOUT_CLASSIFICATION	0.9999799337943048	WITHOUT_CLASSIFICATION	2.0066205695072036E-5	DEFECT
// Register with the upper most class loader that's able to load the class. //	WITHOUT_CLASSIFICATION	0.9999999638381527	WITHOUT_CLASSIFICATION	3.616184727640673E-8	DEFECT
// This let's us test whether the string exists as a file. // If not, we try as a URI. //	WITHOUT_CLASSIFICATION	0.9999999237993472	WITHOUT_CLASSIFICATION	7.620065280092707E-8	DEFECT
// First try to see if this class has an eInstance  //	WITHOUT_CLASSIFICATION	0.9999991845060795	WITHOUT_CLASSIFICATION	8.154939204633496E-7	DEFECT
// First try to see if this class has an eInstance  //	WITHOUT_CLASSIFICATION	0.9999991845060795	WITHOUT_CLASSIFICATION	8.154939204633496E-7	DEFECT
// Remember the file. //	WITHOUT_CLASSIFICATION	0.99999666420128	WITHOUT_CLASSIFICATION	3.335798720007904E-6	DEFECT
// Do the work within an operation. //	WITHOUT_CLASSIFICATION	0.9999687702507611	WITHOUT_CLASSIFICATION	3.1229749238905735E-5	DEFECT
// Create a resource set //	WITHOUT_CLASSIFICATION	0.9999999933269911	WITHOUT_CLASSIFICATION	6.6730089600617695E-9	DEFECT
// Get the URI of the model file. //	WITHOUT_CLASSIFICATION	0.9999995321347683	WITHOUT_CLASSIFICATION	4.6786523159738616E-7	DEFECT
// Create a resource for this file. //	WITHOUT_CLASSIFICATION	0.9999998043025027	WITHOUT_CLASSIFICATION	1.9569749731170499E-7	DEFECT
// Add the initial model object to the contents. //	WITHOUT_CLASSIFICATION	0.9999999940977274	WITHOUT_CLASSIFICATION	5.902272575517009E-9	DEFECT
// Save the contents of the resource to the file system. //	WITHOUT_CLASSIFICATION	0.9999994542933036	WITHOUT_CLASSIFICATION	5.457066963858113E-7	DEFECT
// Select the new file resource in the current view. //	WITHOUT_CLASSIFICATION	0.999999308325589	WITHOUT_CLASSIFICATION	6.916744109176111E-7	DEFECT
// Make sure the file ends in ".ecore". //	WITHOUT_CLASSIFICATION	0.9999981082481028	WITHOUT_CLASSIFICATION	1.8917518971993853E-6	DEFECT
// Create a page, set the title, and the initial model file name. //	WITHOUT_CLASSIFICATION	0.9999999835852913	WITHOUT_CLASSIFICATION	1.6414708744470973E-8	DEFECT
// Try and get the resource selection to determine a current directory for the file dialog. //	WITHOUT_CLASSIFICATION	0.9999999847047633	WITHOUT_CLASSIFICATION	1.529523673530326E-8	DEFECT
// Get the resource... //	WITHOUT_CLASSIFICATION	0.9999977963906652	WITHOUT_CLASSIFICATION	2.203609334759539E-6	DEFECT
// Get the resource parent, if its a file. //	WITHOUT_CLASSIFICATION	0.9999999092318093	WITHOUT_CLASSIFICATION	9.076819071260528E-8	DEFECT
// This gives us a directory... //	WITHOUT_CLASSIFICATION	0.999947719918437	WITHOUT_CLASSIFICATION	5.2280081563124474E-5	DEFECT
// Set this for the container. //	WITHOUT_CLASSIFICATION	0.999997005764308	WITHOUT_CLASSIFICATION	2.994235691999589E-6	DEFECT
// Make up a unique new name here. //	WITHOUT_CLASSIFICATION	0.9999886970380123	WITHOUT_CLASSIFICATION	1.130296198766988E-5	DEFECT
// Create an adapter factory that yields item providers. //	WITHOUT_CLASSIFICATION	0.9999991003363037	WITHOUT_CLASSIFICATION	8.996636962705058E-7	DEFECT
// Create the command stack that will notify this editor as commands are executed. //	WITHOUT_CLASSIFICATION	0.9999461124413709	WITHOUT_CLASSIFICATION	5.388755862904906E-5	DEFECT
// Add a listener to set the most recent command's affected objects to be the selection of the viewer with focus. //	WITHOUT_CLASSIFICATION	0.9999999597385243	WITHOUT_CLASSIFICATION	4.026147563547315E-8	DEFECT
// Try to select the affected objects. //	WITHOUT_CLASSIFICATION	0.9999998986030357	WITHOUT_CLASSIFICATION	1.0139696431559008E-7	DEFECT
// Create the editing domain with a special command stack. //	WITHOUT_CLASSIFICATION	0.9999869806757452	WITHOUT_CLASSIFICATION	1.3019324254804886E-5	DEFECT
// Make sure it's okay. //	WITHOUT_CLASSIFICATION	0.9999986252800558	WITHOUT_CLASSIFICATION	1.3747199442327677E-6	DEFECT
// Try to select the items in the current content viewer of the editor. //	WITHOUT_CLASSIFICATION	0.9999991552130342	WITHOUT_CLASSIFICATION	8.447869657585118E-7	DEFECT
// If it is changing... //	WITHOUT_CLASSIFICATION	0.9997361297302313	WITHOUT_CLASSIFICATION	2.6387026976871266E-4	DEFECT
// Create the listener on demand. //	WITHOUT_CLASSIFICATION	0.9999997310578651	WITHOUT_CLASSIFICATION	2.6894213483641114E-7	DEFECT
// This just notifies those things that are affected by the section. //	WITHOUT_CLASSIFICATION	0.9999955132085773	WITHOUT_CLASSIFICATION	4.486791422666735E-6	DEFECT
// Stop listening to the old one. //	WITHOUT_CLASSIFICATION	0.9999997355183412	WITHOUT_CLASSIFICATION	2.644816587985987E-7	DEFECT
// Start listening to the new one. //	WITHOUT_CLASSIFICATION	0.9999999177328425	WITHOUT_CLASSIFICATION	8.226715749207845E-8	DEFECT
// Remember it. //	WITHOUT_CLASSIFICATION	0.9999962758245838	WITHOUT_CLASSIFICATION	3.7241754162057685E-6	DEFECT
// Set the editors selection based on the current viewer's selection. //	WITHOUT_CLASSIFICATION	0.999991786954058	WITHOUT_CLASSIFICATION	8.213045941994377E-6	DEFECT
// Load the resource through the editing domain. //	WITHOUT_CLASSIFICATION	0.9999977373359852	WITHOUT_CLASSIFICATION	2.2626640148208017E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999476785159	WITHOUT_CLASSIFICATION	5.232148409313304E-8	DEFECT
// Create a page for the selection tree view. //	WITHOUT_CLASSIFICATION	0.9999994788731729	WITHOUT_CLASSIFICATION	5.211268270593276E-7	DEFECT
// Ensures that this editor will only display the page's tab // area if there are more than one page //	WITHOUT_CLASSIFICATION	0.9999998257709258	WITHOUT_CLASSIFICATION	1.7422907414198278E-7	DEFECT
// The content outline is just a tree. //	WITHOUT_CLASSIFICATION	0.9999999499798639	WITHOUT_CLASSIFICATION	5.002013609169084E-8	DEFECT
// Set up the tree viewer. //	WITHOUT_CLASSIFICATION	0.9999993964656559	WITHOUT_CLASSIFICATION	6.035343441100287E-7	DEFECT
// Make sure our popups work. //	WITHOUT_CLASSIFICATION	0.9999835615717634	WITHOUT_CLASSIFICATION	1.6438428236646618E-5	DEFECT
// Select the root object in the view. //	WITHOUT_CLASSIFICATION	0.9999806077227303	WITHOUT_CLASSIFICATION	1.9392277269556154E-5	DEFECT
// Listen to selection so that we can handle it is a special way. //	WITHOUT_CLASSIFICATION	0.9999993623902783	WITHOUT_CLASSIFICATION	6.376097216545764E-7	DEFECT
// Get the first selected element. //	WITHOUT_CLASSIFICATION	0.9999999858083467	WITHOUT_CLASSIFICATION	1.4191653331381248E-8	DEFECT
// Set the selection to the widget. //	WITHOUT_CLASSIFICATION	0.9999790939770926	WITHOUT_CLASSIFICATION	2.0906022907384546E-5	DEFECT
// Save only resources that have actually changed. //	WITHOUT_CLASSIFICATION	0.9999946505650742	WITHOUT_CLASSIFICATION	5.349434925840214E-6	DEFECT
// This is the method that gets invoked when the operation runs. //	WITHOUT_CLASSIFICATION	0.9999992489891407	WITHOUT_CLASSIFICATION	7.51010859315077E-7	DEFECT
// Save the resources to the file system. //	WITHOUT_CLASSIFICATION	0.9999956244261219	WITHOUT_CLASSIFICATION	4.375573878079197E-6	DEFECT
// This runs the options, and shows progress. //	WITHOUT_CLASSIFICATION	0.9999869522601053	WITHOUT_CLASSIFICATION	1.3047739894719312E-5	DEFECT
// Refresh the necessary state. //	WITHOUT_CLASSIFICATION	0.999999566813694	WITHOUT_CLASSIFICATION	4.331863060705827E-7	DEFECT
// Something went wrong that shouldn't. //	WITHOUT_CLASSIFICATION	0.9987759713117987	WITHOUT_CLASSIFICATION	0.0012240286882012738	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999476785159	WITHOUT_CLASSIFICATION	5.232148409313304E-8	DEFECT
// Remember the file. //	WITHOUT_CLASSIFICATION	0.99999666420128	WITHOUT_CLASSIFICATION	3.335798720007904E-6	DEFECT
// Do the work within an operation. //	WITHOUT_CLASSIFICATION	0.9999687702507611	WITHOUT_CLASSIFICATION	3.1229749238905735E-5	DEFECT
// Create a resource set //	WITHOUT_CLASSIFICATION	0.9999999933269911	WITHOUT_CLASSIFICATION	6.6730089600617695E-9	DEFECT
// Get the URI of the model file. //	WITHOUT_CLASSIFICATION	0.9999995321347683	WITHOUT_CLASSIFICATION	4.6786523159738616E-7	DEFECT
// Save the contents of the resource to the file system. //	WITHOUT_CLASSIFICATION	0.9999994542933036	WITHOUT_CLASSIFICATION	5.457066963858113E-7	DEFECT
// Select the new file resource in the current view. //	WITHOUT_CLASSIFICATION	0.999999308325589	WITHOUT_CLASSIFICATION	6.916744109176111E-7	DEFECT
// We can't have a null name, in case we're using EMOF serialization. //	WITHOUT_CLASSIFICATION	0.9989576181559631	WITHOUT_CLASSIFICATION	0.001042381844036953	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999995972496601	WITHOUT_CLASSIFICATION	4.0275033974482523E-7	DEFECT
// Switch to the new selection provider. //	WITHOUT_CLASSIFICATION	0.9999969226012472	WITHOUT_CLASSIFICATION	3.0773987526923322E-6	DEFECT
// Fake a selection changed event to update the menus. //	WITHOUT_CLASSIFICATION	0.9999994256721726	WITHOUT_CLASSIFICATION	5.743278273912887E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999476785159	WITHOUT_CLASSIFICATION	5.232148409313304E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999476785159	WITHOUT_CLASSIFICATION	5.232148409313304E-8	DEFECT
// Try and get the resource selection to determine a current directory for the file dialog. //	WITHOUT_CLASSIFICATION	0.9999999847047633	WITHOUT_CLASSIFICATION	1.529523673530326E-8	DEFECT
// Get the resource... //	WITHOUT_CLASSIFICATION	0.9999977963906652	WITHOUT_CLASSIFICATION	2.203609334759539E-6	DEFECT
// Get the resource parent, if its a file. //	WITHOUT_CLASSIFICATION	0.9999999092318093	WITHOUT_CLASSIFICATION	9.076819071260528E-8	DEFECT
// This gives us a directory... //	WITHOUT_CLASSIFICATION	0.999947719918437	WITHOUT_CLASSIFICATION	5.2280081563124474E-5	DEFECT
// Make up a unique new name here. //	WITHOUT_CLASSIFICATION	0.9999886970380123	WITHOUT_CLASSIFICATION	1.130296198766988E-5	DEFECT
// Prepare for CreateChild item addition or removal. //	WITHOUT_CLASSIFICATION	0.9999952254475941	WITHOUT_CLASSIFICATION	4.774552405820097E-6	DEFECT
// Prepare for CreateSibling item addition or removal. //	WITHOUT_CLASSIFICATION	0.9999911364628625	WITHOUT_CLASSIFICATION	8.86353713750191E-6	DEFECT
// Force an update because Eclipse hides empty menus now. //	WITHOUT_CLASSIFICATION	0.9999999952943627	WITHOUT_CLASSIFICATION	4.705637370748137E-9	DEFECT
// Remove any menu items for old selection. //	WITHOUT_CLASSIFICATION	0.9976675862871083	WITHOUT_CLASSIFICATION	0.0023324137128917727	DEFECT
// Query the new selection for appropriate new child/sibling descriptors //	WITHOUT_CLASSIFICATION	0.9999971552817841	WITHOUT_CLASSIFICATION	2.8447182159059214E-6	DEFECT
// Generate actions for selection; populate and redraw the menus. //	WITHOUT_CLASSIFICATION	0.9999985920729555	WITHOUT_CLASSIFICATION	1.4079270444650047E-6	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999827188826	WITHOUT_CLASSIFICATION	1.7281117422851505E-8	DEFECT
// Look into SubContributionItems //	WITHOUT_CLASSIFICATION	0.9999999484872488	WITHOUT_CLASSIFICATION	5.1512751321733285E-8	DEFECT
// Delete the ActionContributionItems with matching action. //	WITHOUT_CLASSIFICATION	0.9999992433698369	WITHOUT_CLASSIFICATION	7.566301630810988E-7	DEFECT
// If it's really a contained child, return the feature for it. //	WITHOUT_CLASSIFICATION	0.9999988674482178	WITHOUT_CLASSIFICATION	1.1325517822662353E-6	DEFECT
// Changes to the parameters should also update the label. //	WITHOUT_CLASSIFICATION	0.9999997223674136	WITHOUT_CLASSIFICATION	2.776325863436141E-7	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999995972496601	WITHOUT_CLASSIFICATION	4.0275033974482523E-7	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999827188826	WITHOUT_CLASSIFICATION	1.7281117422851505E-8	DEFECT
// If it's really a contained child, return the feature for it. //	WITHOUT_CLASSIFICATION	0.9999988674482178	WITHOUT_CLASSIFICATION	1.1325517822662353E-6	DEFECT
// Set the instance type name instead, since that will also set the instance class name  // but this way will make undo restore the current instance type name correctly //	WITHOUT_CLASSIFICATION	0.9749802097307353	WITHOUT_CLASSIFICATION	0.025019790269264687	DEFECT
// Changes to parameter types should also update the operation's label. //	WITHOUT_CLASSIFICATION	0.9999997797871196	WITHOUT_CLASSIFICATION	2.2021288024452883E-7	DEFECT
// Filter out types that aren't permitted. //	WITHOUT_CLASSIFICATION	0.9999165325656872	WITHOUT_CLASSIFICATION	8.346743431276761E-5	DEFECT
// Filter out types that aren't permitted. //	WITHOUT_CLASSIFICATION	0.9999165325656872	WITHOUT_CLASSIFICATION	8.346743431276761E-5	DEFECT
// Avoid allowing choices that will lead to duplicates. //	WITHOUT_CLASSIFICATION	0.9999991692129797	WITHOUT_CLASSIFICATION	8.307870202354582E-7	DEFECT
//  Avoid allowing a choice that will lead to duplicates. //	WITHOUT_CLASSIFICATION	0.9999997687924876	WITHOUT_CLASSIFICATION	2.3120751235636867E-7	DEFECT
// Ensure that there are enough type arguments to match the number of type parameters. //	WITHOUT_CLASSIFICATION	0.9999999189780284	WITHOUT_CLASSIFICATION	8.102197153938015E-8	DEFECT
// You can only add type arguments if there are type parameters not yet used up. //	WITHOUT_CLASSIFICATION	0.999998973958597	WITHOUT_CLASSIFICATION	1.0260414028807345E-6	DEFECT
// You cannot add any children for a type parameter. //	WITHOUT_CLASSIFICATION	0.999113958333369	WITHOUT_CLASSIFICATION	8.860416666309956E-4	DEFECT
// Only if you are contained by a generic type can you have bounds, // and only if there is no classifier or type parameter // and in that case the lower bound is returned only if that's the one that's set. //	WITHOUT_CLASSIFICATION	0.9999999994263727	WITHOUT_CLASSIFICATION	5.736272982649227E-10	DEFECT
// Otherwise you can't make it a child. //	WITHOUT_CLASSIFICATION	0.9999751950880855	WITHOUT_CLASSIFICATION	2.4804911914502466E-5	DEFECT
// Let them choose type parameters as well. //	WITHOUT_CLASSIFICATION	0.9999999606910426	WITHOUT_CLASSIFICATION	3.930895746566096E-8	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999827188826	WITHOUT_CLASSIFICATION	1.7281117422851505E-8	DEFECT
// Handle eOpposite specially. //	WITHOUT_CLASSIFICATION	0.9999992627053059	WITHOUT_CLASSIFICATION	7.372946940773653E-7	DEFECT
// Don't use the normal reference copying for eOpposite. //	WITHOUT_CLASSIFICATION	0.9999998911277369	WITHOUT_CLASSIFICATION	1.0887226306048742E-7	DEFECT
// Write a signature that will be obviously corrupt // if the binary contents end up being UTF-8 encoded // or altered by line feed or carriage return changes. //	WITHOUT_CLASSIFICATION	0.9999995512524914	WITHOUT_CLASSIFICATION	4.487475085626799E-7	DEFECT
// Filter out classes that aren't permitted. //	WITHOUT_CLASSIFICATION	0.9999682254762297	WITHOUT_CLASSIFICATION	3.1774523770385175E-5	DEFECT
// Read all the values into an array. //	WITHOUT_CLASSIFICATION	0.9999584674318429	WITHOUT_CLASSIFICATION	4.1532568157061134E-5	DEFECT
// Read all the values into an array. //	WITHOUT_CLASSIFICATION	0.9999584674318429	WITHOUT_CLASSIFICATION	4.1532568157061134E-5	DEFECT
// If the list is empty, we need to add all the objects, // otherwise, the reference is bidirectional and the list is at least partially populated. //	WITHOUT_CLASSIFICATION	0.9999998899553535	WITHOUT_CLASSIFICATION	1.1004464655313396E-7	DEFECT
// If an input stream can't be created, ensure that the resource is still considered loaded after the failure, // and do all the same processing we'd do if we actually were able to create a valid input stream. //	WITHOUT_CLASSIFICATION	0.999998902196425	WITHOUT_CLASSIFICATION	1.0978035751362773E-6	DEFECT
// This guard is needed to ensure that clear doesn't make the resource become loaded. //	WITHOUT_CLASSIFICATION	0.9999994913878605	WITHOUT_CLASSIFICATION	5.086121395699843E-7	DEFECT
// If we haven't yet encrypted or decrypted, generate a key. This key will  // only be used for encryption. Decryption keys are always derived from // the header of the input stream itself.	WITHOUT_CLASSIFICATION	0.9998757848507637	WITHOUT_CLASSIFICATION	1.2421514923633092E-4	DEFECT
// write the header to the output stream. this has the format  // (delimeters are not written): // PBE IV|ENCRYPTION IV|ENCRYPTED KEY LENGTH|ENCRYPTED KEY	WITHOUT_CLASSIFICATION	0.9999988248338073	WITHOUT_CLASSIFICATION	1.1751661926398722E-6	DEFECT
// The CipherOutputStream shoudln't close the underlying stream //	WITHOUT_CLASSIFICATION	0.9999983303173731	WITHOUT_CLASSIFICATION	1.6696826269598166E-6	DEFECT
// Build a list of the keys //	WITHOUT_CLASSIFICATION	0.9999967551853679	WITHOUT_CLASSIFICATION	3.244814632179535E-6	DEFECT
// The classifier of an references's generic type must be a class. //	WITHOUT_CLASSIFICATION	0.9999985770379901	WITHOUT_CLASSIFICATION	1.4229620099310822E-6	DEFECT
// If they are the same classifier, they are of course equal. //	WITHOUT_CLASSIFICATION	0.9999999765492061	WITHOUT_CLASSIFICATION	2.3450793870186374E-8	DEFECT
// Ignore derived features. //	WITHOUT_CLASSIFICATION	0.9999999641433324	WITHOUT_CLASSIFICATION	3.5856667651039606E-8	DEFECT
// Don't set the type if it's already set. //	WITHOUT_CLASSIFICATION	0.9999920916420516	WITHOUT_CLASSIFICATION	7.908357948273152E-6	DEFECT
// Look through all the references... //	WITHOUT_CLASSIFICATION	0.9998922657615628	WITHOUT_CLASSIFICATION	1.0773423843721563E-4	DEFECT
// Do the extent processing that should have been done for the root but was actualljy done for the document root. //	WITHOUT_CLASSIFICATION	0.9999951215689332	WITHOUT_CLASSIFICATION	4.878431066817426E-6	DEFECT
// Ensure that the map for Ecore is not repeatedly populated and that Property maps to EReference rather than EAttribute. //	WITHOUT_CLASSIFICATION	0.9998241553595467	WITHOUT_CLASSIFICATION	1.7584464045324833E-4	DEFECT
// Create annotations // http:///org/eclipse/emf/ecore/util/ExtendedMetaData	WITHOUT_CLASSIFICATION	0.9999986127543973	WITHOUT_CLASSIFICATION	1.3872456027501039E-6	DEFECT
// Internal use only. // The @ always matches line beginnings.	WITHOUT_CLASSIFICATION	0.9999999886068885	WITHOUT_CLASSIFICATION	1.1393111377997302E-8	DEFECT
// Reserve a place to insert xmlns declarations after we know what they all are. //	WITHOUT_CLASSIFICATION	0.9999985968571156	WITHOUT_CLASSIFICATION	1.4031428844926012E-6	DEFECT
// result = new XMLResource.XMLInfoImpl(); // result.setXMLRepresentation(XMLResource.XMLInfo.UNSPECIFIED);	WITHOUT_CLASSIFICATION	0.9999998504015941	WITHOUT_CLASSIFICATION	1.495984058725433E-7	DEFECT
// Need not to call setSource() because // a caller can not access this match instance.	WITHOUT_CLASSIFICATION	0.9999999937835088	WITHOUT_CLASSIFICATION	6.216491183683131E-9	DEFECT
// src:    o--------o // sub:      o----o // res:    o-o    o-o // Reuse src(=right res)	WITHOUT_CLASSIFICATION	0.9999576277011962	WITHOUT_CLASSIFICATION	4.237229880375396E-5	DEFECT
// Ignore CHAR tokens. // ** // **	WITHOUT_CLASSIFICATION	0.9999766844239996	WITHOUT_CLASSIFICATION	2.331557600044964E-5	DEFECT
//missing Specials add manually // 84	WITHOUT_CLASSIFICATION	0.9999817080540764	WITHOUT_CLASSIFICATION	1.829194592362419E-5	DEFECT
//Check if they are PAD characters //Two PAD e.g. 3c[Pad][Pad] //last 4 bits should be zero	WITHOUT_CLASSIFICATION	0.9999999861799949	WITHOUT_CLASSIFICATION	1.3820005192339913E-8	DEFECT
// Path segments cannot contain '[' or ']' since pchar // production was not changed by RFC 2732.	WITHOUT_CLASSIFICATION	0.9999972974631138	WITHOUT_CLASSIFICATION	2.7025368862375353E-6	DEFECT
// // Data //	WITHOUT_CLASSIFICATION	0.9999997387757592	WITHOUT_CLASSIFICATION	2.612242407954309E-7	DEFECT
// Check for scheme, which must be before '/', '?' or '#'. Also handle // names with DOS drive letters ('D:'), so 1-character schemes are not // allowed.	WITHOUT_CLASSIFICATION	0.9999999707198607	WITHOUT_CLASSIFICATION	2.92801392600079E-8	DEFECT
// Check for scheme, which must be before '/', '?' or '#'. Also handle // names with DOS drive letters ('D:'), so 1-character schemes are not // allowed.	WITHOUT_CLASSIFICATION	0.9999999707198607	WITHOUT_CLASSIFICATION	2.92801392600079E-8	DEFECT
// 6e - remove all "<segment>/../" where "<segment>" is a complete // path segment not equal to ".."	WITHOUT_CLASSIFICATION	0.9999246749946497	WITHOUT_CLASSIFICATION	7.532500535036504E-5	DEFECT
// If the second character wasn't ':', in order to be valid, // the remainder of the string must match IPv4Address,  // and we must have read exactly 6 16-bit groups.	WITHOUT_CLASSIFICATION	0.9999971842229406	WITHOUT_CLASSIFICATION	2.8157770592925323E-6	DEFECT
// userinfo can contain alphanumerics, mark characters, escaped // and ';',':','&','=','+','$',','	WITHOUT_CLASSIFICATION	0.9999999850582582	WITHOUT_CLASSIFICATION	1.494174178420088E-8	DEFECT
// Fill 2 of value (byte) 49 // Fill 26 of value (byte) -3 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999611429034172	WITHOUT_CLASSIFICATION	3.885709658280721E-5	DEFECT
// Trying to match the following productions: // hexseq = hex4 *( ":" hex4) // hex4   = 1*4HEXDIG	WITHOUT_CLASSIFICATION	0.9999723335567708	WITHOUT_CLASSIFICATION	2.766644322907391E-5	DEFECT
// Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999773296732647	WITHOUT_CLASSIFICATION	2.2670326735227874E-5	DEFECT
// Check whether there is an opposite that needs attention. //	WITHOUT_CLASSIFICATION	0.9999973100672871	WITHOUT_CLASSIFICATION	2.6899327129214147E-6	DEFECT
// Return whether there is a list, the value is in the list, and index is in range... //	WITHOUT_CLASSIFICATION	0.9999214291079184	WITHOUT_CLASSIFICATION	7.857089208155827E-5	DEFECT
// If we're creating a child under an object in a feature map, the selection will be the feature map entry. // We want to replace it with the model object. //	WITHOUT_CLASSIFICATION	0.9999997143742136	WITHOUT_CLASSIFICATION	2.856257863817793E-7	DEFECT
// If there isn't an executable command we should maybe try a link operation, but only if we're allowed and not doing a link. //	WITHOUT_CLASSIFICATION	0.9999218404828932	WITHOUT_CLASSIFICATION	7.815951710673068E-5	DEFECT
// Only return the feedback for an executable command. //	WITHOUT_CLASSIFICATION	0.9999942190793232	WITHOUT_CLASSIFICATION	5.780920676832523E-6	DEFECT
// No image is a good default. //	WITHOUT_CLASSIFICATION	0.9999998542276872	WITHOUT_CLASSIFICATION	1.4577231272726284E-7	DEFECT
// Add it to the list and remove it from the other list. //	WITHOUT_CLASSIFICATION	0.9999998029012154	WITHOUT_CLASSIFICATION	1.9709878459457972E-7	DEFECT
// Commands should operate on the values, not their wrappers.  If the command's values needed to be unwrapped, // we'll back get a new CommandParameter. //	WITHOUT_CLASSIFICATION	0.9999914671984199	WITHOUT_CLASSIFICATION	8.532801580095915E-6	DEFECT
// When an object is controlled, the only change will be in the new resource's contents, so it must // refresh the whole viewer to hit the object's label. //	WITHOUT_CLASSIFICATION	0.9999999982738248	WITHOUT_CLASSIFICATION	1.7261751717287882E-9	DEFECT
// Record the part. //	WITHOUT_CLASSIFICATION	0.9999953849853392	WITHOUT_CLASSIFICATION	4.615014660849607E-6	DEFECT
// give up if we couldn't create the command; otherwise, use a // CommandActionDelegate to set the action's text, tool-tip, icon, // etc. or just use the default icon	WITHOUT_CLASSIFICATION	0.9999999999826986	WITHOUT_CLASSIFICATION	1.7301305039342033E-11	DEFECT
// This came from trial and error, yielding decent results on all // platforms.  It should be consistent with activate(). //	WITHOUT_CLASSIFICATION	0.9973976007481219	WITHOUT_CLASSIFICATION	0.0026023992518781733	DEFECT
// If we don't already have it, try to get the source early. We can't give // feedback if it's not available yet (this is platform-dependent). //	WITHOUT_CLASSIFICATION	0.9998983472812701	WITHOUT_CLASSIFICATION	1.0165271872977477E-4	DEFECT
// Load the model and if it's not one already considered, e.g., a local version in the workspace, process its GenPackages. //	WITHOUT_CLASSIFICATION	0.999999238066899	WITHOUT_CLASSIFICATION	7.619331009630032E-7	DEFECT
// If we've found thing with type parameters, search them for a match. //	WITHOUT_CLASSIFICATION	0.9999982517823894	WITHOUT_CLASSIFICATION	1.7482176105308988E-6	DEFECT
// process documentation info and create eEnumLiteral for each line //	WITHOUT_CLASSIFICATION	0.9999999947284545	WITHOUT_CLASSIFICATION	5.271545578846696E-9	DEFECT
// This just notifies those things that are affected by the section. //	WITHOUT_CLASSIFICATION	0.9999955132085773	WITHOUT_CLASSIFICATION	4.486791422666735E-6	DEFECT
// Creates the model from the editor input //	WITHOUT_CLASSIFICATION	0.9999998676483121	WITHOUT_CLASSIFICATION	1.3235168798688526E-7	DEFECT
// This is the method that gets invoked when the operation runs. //	WITHOUT_CLASSIFICATION	0.9999992489891407	WITHOUT_CLASSIFICATION	7.51010859315077E-7	DEFECT
// Generate actions for selection; populate and redraw the menus. //	WITHOUT_CLASSIFICATION	0.9999985920729555	WITHOUT_CLASSIFICATION	1.4079270444650047E-6	DEFECT
// this is the case that starting process rose file by passing cat file name // this is a special case. // normally, user should pass mdl file instead of cat file //  // file is a cat file // modelTree did contain quid info	WITHOUT_CLASSIFICATION	0.9999996004730584	WITHOUT_CLASSIFICATION	3.995269416840862E-7	DEFECT
// Create a page for the parent tree view. //	WITHOUT_CLASSIFICATION	0.9999971739185888	WITHOUT_CLASSIFICATION	2.8260814111959293E-6	DEFECT
// Make sure it's okay. //	WITHOUT_CLASSIFICATION	0.9999986252800558	WITHOUT_CLASSIFICATION	1.3747199442327677E-6	DEFECT
// We either remove the root mapping or we use the iterator that returned the most recent next mapping. //	WITHOUT_CLASSIFICATION	0.9999996650415374	WITHOUT_CLASSIFICATION	3.3495846261768264E-7	DEFECT
// Cache the tree path for each object. //	WITHOUT_CLASSIFICATION	0.999997950480811	WITHOUT_CLASSIFICATION	2.049519189060164E-6	DEFECT
// Set the editor's selection based on the current viewer's selection. //	WITHOUT_CLASSIFICATION	0.9999880217455827	WITHOUT_CLASSIFICATION	1.1978254417467142E-5	DEFECT
// The helper part assumes that the summary is likely based on the helper and will change when the helper is set. //	WITHOUT_CLASSIFICATION	0.9999805116704841	WITHOUT_CLASSIFICATION	1.9488329515934626E-5	DEFECT
// This is the method that gets invoked when the operation runs. //	WITHOUT_CLASSIFICATION	0.9999992489891407	WITHOUT_CLASSIFICATION	7.51010859315077E-7	DEFECT
// This is for the out2in feature. //	WITHOUT_CLASSIFICATION	0.9999880618329754	WITHOUT_CLASSIFICATION	1.1938167024662235E-5	DEFECT
// This is for the topDown feature. //	WITHOUT_CLASSIFICATION	0.9999672636873839	WITHOUT_CLASSIFICATION	3.273631261615202E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999476785159	WITHOUT_CLASSIFICATION	5.232148409313304E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999476785159	WITHOUT_CLASSIFICATION	5.232148409313304E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999476785159	WITHOUT_CLASSIFICATION	5.232148409313304E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999476785159	WITHOUT_CLASSIFICATION	5.232148409313304E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999476785159	WITHOUT_CLASSIFICATION	5.232148409313304E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999476785159	WITHOUT_CLASSIFICATION	5.232148409313304E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999476785159	WITHOUT_CLASSIFICATION	5.232148409313304E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999476785159	WITHOUT_CLASSIFICATION	5.232148409313304E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999476785159	WITHOUT_CLASSIFICATION	5.232148409313304E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999476785159	WITHOUT_CLASSIFICATION	5.232148409313304E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999476785159	WITHOUT_CLASSIFICATION	5.232148409313304E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999476785159	WITHOUT_CLASSIFICATION	5.232148409313304E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999476785159	WITHOUT_CLASSIFICATION	5.232148409313304E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999476785159	WITHOUT_CLASSIFICATION	5.232148409313304E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999476785159	WITHOUT_CLASSIFICATION	5.232148409313304E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999476785159	WITHOUT_CLASSIFICATION	5.232148409313304E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999476785159	WITHOUT_CLASSIFICATION	5.232148409313304E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999476785159	WITHOUT_CLASSIFICATION	5.232148409313304E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999476785159	WITHOUT_CLASSIFICATION	5.232148409313304E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999476785159	WITHOUT_CLASSIFICATION	5.232148409313304E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999476785159	WITHOUT_CLASSIFICATION	5.232148409313304E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999476785159	WITHOUT_CLASSIFICATION	5.232148409313304E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999476785159	WITHOUT_CLASSIFICATION	5.232148409313304E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999476785159	WITHOUT_CLASSIFICATION	5.232148409313304E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999476785159	WITHOUT_CLASSIFICATION	5.232148409313304E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999476785159	WITHOUT_CLASSIFICATION	5.232148409313304E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999476785159	WITHOUT_CLASSIFICATION	5.232148409313304E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999476785159	WITHOUT_CLASSIFICATION	5.232148409313304E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999476785159	WITHOUT_CLASSIFICATION	5.232148409313304E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999476785159	WITHOUT_CLASSIFICATION	5.232148409313304E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999476785159	WITHOUT_CLASSIFICATION	5.232148409313304E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999476785159	WITHOUT_CLASSIFICATION	5.232148409313304E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999476785159	WITHOUT_CLASSIFICATION	5.232148409313304E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999476785159	WITHOUT_CLASSIFICATION	5.232148409313304E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999476785159	WITHOUT_CLASSIFICATION	5.232148409313304E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999476785159	WITHOUT_CLASSIFICATION	5.232148409313304E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999476785159	WITHOUT_CLASSIFICATION	5.232148409313304E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999476785159	WITHOUT_CLASSIFICATION	5.232148409313304E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999476785159	WITHOUT_CLASSIFICATION	5.232148409313304E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999476785159	WITHOUT_CLASSIFICATION	5.232148409313304E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999476785159	WITHOUT_CLASSIFICATION	5.232148409313304E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999476785159	WITHOUT_CLASSIFICATION	5.232148409313304E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999476785159	WITHOUT_CLASSIFICATION	5.232148409313304E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999476785159	WITHOUT_CLASSIFICATION	5.232148409313304E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999476785159	WITHOUT_CLASSIFICATION	5.232148409313304E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999476785159	WITHOUT_CLASSIFICATION	5.232148409313304E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999476785159	WITHOUT_CLASSIFICATION	5.232148409313304E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999476785159	WITHOUT_CLASSIFICATION	5.232148409313304E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999476785159	WITHOUT_CLASSIFICATION	5.232148409313304E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999476785159	WITHOUT_CLASSIFICATION	5.232148409313304E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999476785159	WITHOUT_CLASSIFICATION	5.232148409313304E-8	DEFECT
// There needs to be another URL protocol right after the archive protocol, and not a "/". //	WITHOUT_CLASSIFICATION	0.9999878228423847	WITHOUT_CLASSIFICATION	1.2177157615135411E-5	DEFECT
// Go directly to the right entry in the zip file,  // get the stream,  // and wrap it so that closing it closes the zip file. //	WITHOUT_CLASSIFICATION	0.9999999691432154	WITHOUT_CLASSIFICATION	3.085678450701197E-8	DEFECT
// Record them as generic streams to record state during the loop that emulates recursion. //	WITHOUT_CLASSIFICATION	0.9999998665261629	WITHOUT_CLASSIFICATION	1.334738371221977E-7	DEFECT
// If this entry isn't the end marker  // and isn't the matching one that we are replacing... //	WITHOUT_CLASSIFICATION	0.9990038714609325	WITHOUT_CLASSIFICATION	9.961285390674755E-4	DEFECT
// Try to transfer it by reading the contents of the temporary file  // and writing them to the output stream of the delegate. //	WITHOUT_CLASSIFICATION	0.9999999966681206	WITHOUT_CLASSIFICATION	3.3318793448073295E-9	DEFECT
// Either execute or redo the command, as appropriate. //	WITHOUT_CLASSIFICATION	0.9999932906776264	WITHOUT_CLASSIFICATION	6.709322373542726E-6	DEFECT
// Skip over the command that threw the exception. //	WITHOUT_CLASSIFICATION	0.9999849216960075	WITHOUT_CLASSIFICATION	1.5078303992605606E-5	DEFECT
// This is kind of tricky. // If the saveIndex was in the redo part of the command list which has now been wiped out, // then we can never reach a point where a save is not necessary, not even if we undo all the way back to the beginning. //	WITHOUT_CLASSIFICATION	0.9999981700706784	WITHOUT_CLASSIFICATION	1.8299293216517925E-6	DEFECT
// Count up the objects that will be removed. // The objects are exchanged to produce this list's order //	WITHOUT_CLASSIFICATION	0.9999999980482066	WITHOUT_CLASSIFICATION	1.9517934827246193E-9	DEFECT
// Count up the objects that will be removed. // The objects are exchanged to produce this list's order //	WITHOUT_CLASSIFICATION	0.9999999980482066	WITHOUT_CLASSIFICATION	1.9517934827246193E-9	DEFECT
// Count up the objects that will be removed. // The objects are exchanged to produce this list's order //	WITHOUT_CLASSIFICATION	0.9999999980482066	WITHOUT_CLASSIFICATION	1.9517934827246193E-9	DEFECT
// Remove from by position in reverse order. //	WITHOUT_CLASSIFICATION	0.99993520310125	WITHOUT_CLASSIFICATION	6.47968987500614E-5	DEFECT
// remove/add the action bar from the view so to avoid // having an empty action bar participating in the view's // layout calculation (and maybe causing an empty bar to appear)	WITHOUT_CLASSIFICATION	0.99996955990054	WITHOUT_CLASSIFICATION	3.04400994598801E-5	DEFECT
//actionBar.setBackground(WorkbenchColors.getSystemColor(SWT.COLOR_WIDGET_BACKGROUND)); //systemBar.setBackground(WorkbenchColors.getSystemColor(SWT.COLOR_WIDGET_BACKGROUND));	WITHOUT_CLASSIFICATION	0.9999999170741385	WITHOUT_CLASSIFICATION	8.292586144980448E-8	DEFECT
// Define gradient (blue to widget background color)	WITHOUT_CLASSIFICATION	0.9999999612883352	WITHOUT_CLASSIFICATION	3.871166484372616E-8	DEFECT
// Create a new array. //	WITHOUT_CLASSIFICATION	0.9999989388932101	WITHOUT_CLASSIFICATION	1.0611067898583822E-6	DEFECT
// buttonComposite has to be the first child of composite because subclasses are expecting this.	WITHOUT_CLASSIFICATION	0.9999999927944961	WITHOUT_CLASSIFICATION	7.205503835202579E-9	DEFECT
// Common to all URI types.	WITHOUT_CLASSIFICATION	0.9999989885424877	WITHOUT_CLASSIFICATION	1.0114575122366934E-6	DEFECT
// A cache of URIs, keyed by the strings from which they were created. // The fragment of any URI is removed before caching it here, to minimize // the size of the cache in the usual case where most URIs only differ by // the fragment.	WITHOUT_CLASSIFICATION	0.999998843084522	WITHOUT_CLASSIFICATION	1.1569154780314894E-6	DEFECT
// The lower-cased schemes that will be used to identify archive URIs.	WITHOUT_CLASSIFICATION	0.9999996835656052	WITHOUT_CLASSIFICATION	3.1643439478216323E-7	DEFECT
// Special segment values interpreted at resolve and resolve time.	WITHOUT_CLASSIFICATION	0.9999973516782146	WITHOUT_CLASSIFICATION	2.64832178541627E-6	DEFECT
// Some character classes, as defined in RFC 2396's BNF for URI. // These are 128-bit bitmasks, stored as two longs, where the Nth bit is set // iff the ASCII character with value N is included in the set.  These are // created with the highBitmask() and lowBitmask() methods defined below, // and a character is tested against them using matches(). //	WITHOUT_CLASSIFICATION	0.9999999999966594	WITHOUT_CLASSIFICATION	3.340471459187524E-12	DEFECT
// | ucschar | escaped	WITHOUT_CLASSIFICATION	0.9999999929752702	WITHOUT_CLASSIFICATION	7.024729775988959E-9	DEFECT
// We can't want to do encoding of platform resource URIs by default yet.    //	WITHOUT_CLASSIFICATION	0.9999974710425863	WITHOUT_CLASSIFICATION	2.5289574137399865E-6	DEFECT
// Returns the upper half bitmask for all the ASCII characters in the given // string.	WITHOUT_CLASSIFICATION	0.9999990185612504	WITHOUT_CLASSIFICATION	9.814387495612147E-7	DEFECT
// Uses a cache to speed up creation of a URI from a string.  The cache // is consulted to see if the URI, less any fragment, has already been // created.  If needed, the fragment is re-appended to the cached URI, // which is considerably more efficient than creating the whole URI from // scratch.  If the URI wasn't found in the cache, it is created using // parseIntoURI() and then cached.  This method should always be used // by string-parsing factory methods, instead of parseIntoURI() directly.	WITHOUT_CLASSIFICATION	0.9998076872468852	WITHOUT_CLASSIFICATION	1.9231275311474633E-4	DEFECT
// Finds the next occurrence of one of the characters in the set represented // by the given bitmask in the given string, beginning at index i. The index // of the first found character, or s.length() if there is none, is // returned.  Before searching, i is limited to the range [0, s.length()]. //	WITHOUT_CLASSIFICATION	0.9999999999994552	WITHOUT_CLASSIFICATION	5.448732052011925E-13	DEFECT
//boolean iri = false;	WITHOUT_CLASSIFICATION	0.9999999079473536	WITHOUT_CLASSIFICATION	9.205264646188702E-8	DEFECT
//iri = iri || containsNonASCII(segments[i]);	WITHOUT_CLASSIFICATION	0.9999996681378268	WITHOUT_CLASSIFICATION	3.318621731830189E-7	DEFECT
// <p>A valid query may be null or contain any allowed URI characters.	WITHOUT_CLASSIFICATION	0.9999999660000304	WITHOUT_CLASSIFICATION	3.399996957261431E-8	DEFECT
//return value == null || validate(value, URIC_HI, URIC_LO, true, true);	WITHOUT_CLASSIFICATION	0.9999941228052556	WITHOUT_CLASSIFICATION	5.877194744476818E-6	DEFECT
// Tests the non-null string value to see if it contains only ASCII // characters in the set represented by the specified 128-bit bitmask, // as well as, optionally, non-ASCII characters 0xA0 and above, and, // also optionally, escape sequences of % followed by two hex digits. // This method is used for the new, strict URI validation that is not // not currently in place.	WITHOUT_CLASSIFICATION	0.9999999999999513	WITHOUT_CLASSIFICATION	4.877964237102458E-14	DEFECT
// note: authority == null -> hierarchical // (authority == null && device == null && !absolutePath) -> scheme == null	WITHOUT_CLASSIFICATION	0.9999993465163426	WITHOUT_CLASSIFICATION	6.534836573434435E-7	DEFECT
// current document reference: use base path and query	WITHOUT_CLASSIFICATION	0.9999992373659226	WITHOUT_CLASSIFICATION	7.626340773342428E-7	DEFECT
// else keep device, path, and query	WITHOUT_CLASSIFICATION	0.9999999944689067	WITHOUT_CLASSIFICATION	5.531093242894316E-9	DEFECT
// else keep authority, device, path, and query	WITHOUT_CLASSIFICATION	0.9999999949844974	WITHOUT_CLASSIFICATION	5.015502632919193E-9	DEFECT
// Merges this URI's relative path with the base non-relative path.  If // base has no path, treat it as the root absolute path, unless this has // no path either.	WITHOUT_CLASSIFICATION	0.9999999913593641	WITHOUT_CLASSIFICATION	8.640635864185767E-9	DEFECT
// if the relative path is empty or ends in an empty segment, a parent  // reference, or a self reference, add a trailing separator to a // non-empty path	WITHOUT_CLASSIFICATION	0.9999999460732177	WITHOUT_CLASSIFICATION	5.392678214825961E-8	DEFECT
// since base must be hierarchical, and since a non-hierarchical URI // must have both scheme and opaque part, the complete absolute URI is // needed to resolve to a non-hierarchical URI	WITHOUT_CLASSIFICATION	0.9999999953535641	WITHOUT_CLASSIFICATION	4.64643592232469E-9	DEFECT
// path form demands an absolute path: keep it and query	WITHOUT_CLASSIFICATION	0.99997942835957	WITHOUT_CLASSIFICATION	2.0571640429957462E-5	DEFECT
// always include fragment, even if null; // no validation needed since all components are from existing URIs	WITHOUT_CLASSIFICATION	0.9999999992776972	WITHOUT_CLASSIFICATION	7.22302659234343E-10	DEFECT
// Returns true if the non-relative path includes segments that would be // collapsed when resolving; false otherwise.  If preserveRootParents is // true, collapsible segments include any empty segments, except for the // last segment, as well as and parent and self references.  If // preserveRootsParents is false, parent references are not collapsible if // they are the first segment or preceded only by other parent // references.	WITHOUT_CLASSIFICATION	0.9999998446105519	WITHOUT_CLASSIFICATION	1.5538944806639656E-7	DEFECT
// if endPath is shorter than startPath, the last segment of endPath may // not be compared: because startPath has been collapsed and had its // last segment removed, all preceding segments can be considered non- // empty and followed by a separator, while the last segment of endPath // will either be non-empty and not followed by a separator, or just empty	WITHOUT_CLASSIFICATION	0.9999613216141163	WITHOUT_CLASSIFICATION	3.8678385883675475E-5	DEFECT
// absolute path or no path -> absolute path	WITHOUT_CLASSIFICATION	0.9999999944949299	WITHOUT_CLASSIFICATION	5.50507003228734E-9	DEFECT
// Computes a three-character escape sequence for the byte, appending // it to the StringBuffer.  Only characters up to 0xFF should be escaped; // all but the least significant byte will be ignored.	WITHOUT_CLASSIFICATION	0.9999999957424883	WITHOUT_CLASSIFICATION	4.257511646786329E-9	DEFECT
/*   * Returns <code>true</code> if this URI contains non-ASCII characters;   * <code>false</code> otherwise.   *   * This unused code is included for possible future use...    */	WITHOUT_CLASSIFICATION	0.9999999995069248	WITHOUT_CLASSIFICATION	4.930752981541008E-10	DEFECT
// If that fails, determine the URL for the class itself. // The URL will be of one of the following forms, // so there are a few good places to consider looking for the plugin.properties. // // For a plugin.xml with runtime="common.jar": // jar:file:/D:/sandbox/unpackage1-3.1M7/eclipse/plugins/org.eclipse.emf.common/common.jar!/org/eclipse/common/CommonPlugin.class // // For a plugin.xml with runtime="runtime/common.jar": // jar:file:/D:/sandbox/unpackage1-3.1M7/eclipse/plugins/org.eclipse.emf.common/runtime/common.jar!/org/eclipse/common/CommonPlugin.class // // For a plugin.xml with runtime="." where the plugin is jarred: // jar:file:/D:/sandbox/unpackage1-3.1M7/eclipse/plugins/org.eclipse.emf.common.jar!/org/eclipse/common/CommonPlugin.class // // For a plugin.xml with runtime="." where the plugin is not jarred. // file:/D:/sandbox/unpackage1-3.1M7/eclipse/plugins/org.eclipse.emf.common/org/eclipse/emf/common/CommonPlugin.class // // Running in PDE with bin on classpath: // file:/D:/sandbox/unpackage1-3.1M7/eclipse/plugins/org.eclipse.emf.common/bin/org/eclipse/emf/common/CommonPlugin.class //	WITHOUT_CLASSIFICATION	0.9999990962775535	WITHOUT_CLASSIFICATION	9.037224465622083E-7	DEFECT
// If we can open  an input stream, then the plugin.properties is there, and we have a good base URL. //	WITHOUT_CLASSIFICATION	0.9996050661920343	WITHOUT_CLASSIFICATION	3.949338079657694E-4	DEFECT
// If the bundle can't be found the normal way, try to find it as the base URL. // If that also doesn't work, rethrow the original exception. //	WITHOUT_CLASSIFICATION	0.9999280782410602	WITHOUT_CLASSIFICATION	7.192175893985248E-5	DEFECT
// ++modCount //	WITHOUT_CLASSIFICATION	0.9999987911882716	WITHOUT_CLASSIFICATION	1.2088117283461683E-6	DEFECT
// ++modCount //	WITHOUT_CLASSIFICATION	0.9999987911882716	WITHOUT_CLASSIFICATION	1.2088117283461683E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999997500428611	WITHOUT_CLASSIFICATION	2.499571388153945E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999997500428611	WITHOUT_CLASSIFICATION	2.499571388153945E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999997500428611	WITHOUT_CLASSIFICATION	2.499571388153945E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999997500428611	WITHOUT_CLASSIFICATION	2.499571388153945E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999997500428611	WITHOUT_CLASSIFICATION	2.499571388153945E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999997500428611	WITHOUT_CLASSIFICATION	2.499571388153945E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999997500428611	WITHOUT_CLASSIFICATION	2.499571388153945E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999997500428611	WITHOUT_CLASSIFICATION	2.499571388153945E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999997500428611	WITHOUT_CLASSIFICATION	2.499571388153945E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999997500428611	WITHOUT_CLASSIFICATION	2.499571388153945E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999997500428611	WITHOUT_CLASSIFICATION	2.499571388153945E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999997500428611	WITHOUT_CLASSIFICATION	2.499571388153945E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999997500428611	WITHOUT_CLASSIFICATION	2.499571388153945E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999997500428611	WITHOUT_CLASSIFICATION	2.499571388153945E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999997500428611	WITHOUT_CLASSIFICATION	2.499571388153945E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999997500428611	WITHOUT_CLASSIFICATION	2.499571388153945E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999997500428611	WITHOUT_CLASSIFICATION	2.499571388153945E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999997500428611	WITHOUT_CLASSIFICATION	2.499571388153945E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999997500428611	WITHOUT_CLASSIFICATION	2.499571388153945E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999997500428611	WITHOUT_CLASSIFICATION	2.499571388153945E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999997500428611	WITHOUT_CLASSIFICATION	2.499571388153945E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999997500428611	WITHOUT_CLASSIFICATION	2.499571388153945E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999997500428611	WITHOUT_CLASSIFICATION	2.499571388153945E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999997500428611	WITHOUT_CLASSIFICATION	2.499571388153945E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999997500428611	WITHOUT_CLASSIFICATION	2.499571388153945E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999997500428611	WITHOUT_CLASSIFICATION	2.499571388153945E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999997500428611	WITHOUT_CLASSIFICATION	2.499571388153945E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999997500428611	WITHOUT_CLASSIFICATION	2.499571388153945E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999997500428611	WITHOUT_CLASSIFICATION	2.499571388153945E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999997500428611	WITHOUT_CLASSIFICATION	2.499571388153945E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999997500428611	WITHOUT_CLASSIFICATION	2.499571388153945E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999997500428611	WITHOUT_CLASSIFICATION	2.499571388153945E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999997500428611	WITHOUT_CLASSIFICATION	2.499571388153945E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999997500428611	WITHOUT_CLASSIFICATION	2.499571388153945E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999997500428611	WITHOUT_CLASSIFICATION	2.499571388153945E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999997500428611	WITHOUT_CLASSIFICATION	2.499571388153945E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999997500428611	WITHOUT_CLASSIFICATION	2.499571388153945E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999997500428611	WITHOUT_CLASSIFICATION	2.499571388153945E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999997500428611	WITHOUT_CLASSIFICATION	2.499571388153945E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999997500428611	WITHOUT_CLASSIFICATION	2.499571388153945E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999997500428611	WITHOUT_CLASSIFICATION	2.499571388153945E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999997500428611	WITHOUT_CLASSIFICATION	2.499571388153945E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999997500428611	WITHOUT_CLASSIFICATION	2.499571388153945E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999997500428611	WITHOUT_CLASSIFICATION	2.499571388153945E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999997500428611	WITHOUT_CLASSIFICATION	2.499571388153945E-7	DEFECT
// Open an editor on the new file. //	WITHOUT_CLASSIFICATION	0.9999987406468108	WITHOUT_CLASSIFICATION	1.2593531891924936E-6	DEFECT
// Open an editor on the new file. //	WITHOUT_CLASSIFICATION	0.9999987406468108	WITHOUT_CLASSIFICATION	1.2593531891924936E-6	DEFECT
// feature is instance of EAttribute	WITHOUT_CLASSIFICATION	0.999999932759336	WITHOUT_CLASSIFICATION	6.724066397271668E-8	DEFECT
// Create a proper feature map entry. //	WITHOUT_CLASSIFICATION	0.9999940758615032	WITHOUT_CLASSIFICATION	5.924138496799592E-6	DEFECT
// Bidirectional references need to use this less efficient approach because some //  or all of the changes may already have been made from the other end. //	WITHOUT_CLASSIFICATION	0.9999999683076218	WITHOUT_CLASSIFICATION	3.169237824099573E-8	DEFECT
// caches the list value.	WITHOUT_CLASSIFICATION	0.9999999290180049	WITHOUT_CLASSIFICATION	7.098199510622512E-8	DEFECT
// caches the list value.	WITHOUT_CLASSIFICATION	0.9999999290180049	WITHOUT_CLASSIFICATION	7.098199510622512E-8	DEFECT
// caches the list value.	WITHOUT_CLASSIFICATION	0.9999999290180049	WITHOUT_CLASSIFICATION	7.098199510622512E-8	DEFECT
// Maintain a (weak hash) set on the type parameter of all referencing generic types. //	WITHOUT_CLASSIFICATION	0.9999916445762089	WITHOUT_CLASSIFICATION	8.355423791053864E-6	DEFECT
// The algorithm for the order of the features in this list should never change. // Also, the fact that a new list is created whenever the contents change  // is something else that should never change. // There are clients who rely on both these behaviors,  // and they will need to agree to any change, // so that they can adjust their own code. //	WITHOUT_CLASSIFICATION	0.9999999787749734	WITHOUT_CLASSIFICATION	2.1225026582399378E-8	DEFECT
// The notification for this list is being thrown by the // delegating list //	WITHOUT_CLASSIFICATION	0.9999938116348811	WITHOUT_CLASSIFICATION	6.188365118856348E-6	DEFECT
// Keep trying until all else has failed.	WITHOUT_CLASSIFICATION	0.9999990394920003	WITHOUT_CLASSIFICATION	9.605079996714293E-7	DEFECT
// return eContainerFeatureID;	WITHOUT_CLASSIFICATION	0.9999999208165185	WITHOUT_CLASSIFICATION	7.91834816119533E-8	DEFECT
// If we're not setting a new resource, attach it to the old container's resource.	WITHOUT_CLASSIFICATION	0.999999712128037	WITHOUT_CLASSIFICATION	2.8787196304294433E-7	DEFECT
// If we didn't detach it from an old resource already, detach it from the old container's resource. //	WITHOUT_CLASSIFICATION	0.9999983576608162	WITHOUT_CLASSIFICATION	1.642339183719919E-6	DEFECT
/* backward compatibility with old generated overrides */	WITHOUT_CLASSIFICATION	0.9999988939696577	WITHOUT_CLASSIFICATION	1.1060303422486555E-6	DEFECT
/* backward compatibility with old generated overrides */	WITHOUT_CLASSIFICATION	0.9999988939696577	WITHOUT_CLASSIFICATION	1.1060303422486555E-6	DEFECT
// Depending on the action and the current state, we'll toggle the state. // i.e., for unset, we need to turn it off if it's on,  // and for set we need to turn it on if it's off. //	WITHOUT_CLASSIFICATION	0.9999999988948384	WITHOUT_CLASSIFICATION	1.1051616801253941E-9	DEFECT
// If the index was previously assigned, return it. // Otherwise, return a negative result that encodes the newly assigned index. //	WITHOUT_CLASSIFICATION	0.9999997228582543	WITHOUT_CLASSIFICATION	2.7714174568269705E-7	DEFECT
// We set it and get back the interned string. // This way, when instanceClassName == instanceTypeName we know we should serialize only the class name. //	WITHOUT_CLASSIFICATION	0.999996748188376	WITHOUT_CLASSIFICATION	3.2518116239385577E-6	DEFECT
// The container class must be null for the open content features of the document root // to ensure that they are looked up in the actual eClass()  // rather than assumed to be a feature with a feature ID relative to the actual class. // Otherwise, it's good to have this optimization. //	WITHOUT_CLASSIFICATION	0.9999999903493311	WITHOUT_CLASSIFICATION	9.650668937960733E-9	DEFECT
// Interpret it as part of the name. //	WITHOUT_CLASSIFICATION	0.9999999895847654	WITHOUT_CLASSIFICATION	1.041523466399454E-8	DEFECT
// The class address was not equal, so we don't want this class loader, // but instead want the last result that was able to load the class. //	WITHOUT_CLASSIFICATION	0.9999856896131816	WITHOUT_CLASSIFICATION	1.4310386818513281E-5	DEFECT
//Platform.getBundle(element.getNamespaceIdentifier()).loadClass(contributorClassName);	WITHOUT_CLASSIFICATION	0.9999999674006749	WITHOUT_CLASSIFICATION	3.259932517105693E-8	DEFECT
// First try to see if this class has an eInstance  //	WITHOUT_CLASSIFICATION	0.9999991845060795	WITHOUT_CLASSIFICATION	8.154939204633496E-7	DEFECT
// Create a resource for this file. //	WITHOUT_CLASSIFICATION	0.9999998043025027	WITHOUT_CLASSIFICATION	1.9569749731170499E-7	DEFECT
// Add the initial model object to the contents. //	WITHOUT_CLASSIFICATION	0.9999999940977274	WITHOUT_CLASSIFICATION	5.902272575517009E-9	DEFECT
// Create a page, set the title, and the initial model file name. //	WITHOUT_CLASSIFICATION	0.9999999835852913	WITHOUT_CLASSIFICATION	1.6414708744470973E-8	DEFECT
// Set this for the container. //	WITHOUT_CLASSIFICATION	0.999997005764308	WITHOUT_CLASSIFICATION	2.994235691999589E-6	DEFECT
// Load the schema and packages that were used to load the instance into this resource set. //	WITHOUT_CLASSIFICATION	0.9999999539773486	WITHOUT_CLASSIFICATION	4.602265127295084E-8	DEFECT
// Create a resource for this file. Don't specify a content type, as it could be Ecore or EMOF. //	WITHOUT_CLASSIFICATION	0.9999999069223704	WITHOUT_CLASSIFICATION	9.307762956894974E-8	DEFECT
// Put all static package in the package registry. //	WITHOUT_CLASSIFICATION	0.999999905547153	WITHOUT_CLASSIFICATION	9.445284686337911E-8	DEFECT
// Look into SubContributionItems //	WITHOUT_CLASSIFICATION	0.9999999484872488	WITHOUT_CLASSIFICATION	5.1512751321733285E-8	DEFECT
//return;	WITHOUT_CLASSIFICATION	0.9999919410990419	WITHOUT_CLASSIFICATION	8.058900958180523E-6	DEFECT
// super.collectNewChildDescriptors(newChildDescriptors, object);	WITHOUT_CLASSIFICATION	0.9999999785529513	WITHOUT_CLASSIFICATION	2.1447048631918014E-8	DEFECT
// If the list is empty, we need to add all the objects, // otherwise, the reference is bidirectional and the list is at least partially populated. //	WITHOUT_CLASSIFICATION	0.9999998899553535	WITHOUT_CLASSIFICATION	1.1004464655313396E-7	DEFECT
// List subList(EStructuralFeature feature, int from, int to); // EList list(EStructuralFeature feature);	WITHOUT_CLASSIFICATION	0.9999999544287449	WITHOUT_CLASSIFICATION	4.5571255001428624E-8	DEFECT
// We do not want to diagnose any errors that have already been diagnosed by a super type. // Although we ignore all the first super's features, there may be mixin classes that still would result in duplicates. //	WITHOUT_CLASSIFICATION	0.9996767492723458	WITHOUT_CLASSIFICATION	3.232507276542272E-4	DEFECT
// There is no match if the types are different // and they don't each specify the same non-null instance class name. //	WITHOUT_CLASSIFICATION	0.999999994805162	WITHOUT_CLASSIFICATION	5.194838044048842E-9	DEFECT
// We need to be conservative and diagnose a problem only if we are quite sure that type is built-in  // and hence that the lack of a default value really represents a problem with being unable to convert the literal to a value. // 	WITHOUT_CLASSIFICATION	0.9999998265906932	WITHOUT_CLASSIFICATION	1.7340930680126623E-7	DEFECT
// And even if it is contained, it must not be a forward reference. // eTypeParameterIndex == index is allowed when the type parameter is  // the type argument of the bound, though //	WITHOUT_CLASSIFICATION	0.9999998707157216	WITHOUT_CLASSIFICATION	1.2928427834171118E-7	DEFECT
// A primitive type can only be used as the generic type of a typed element. //	WITHOUT_CLASSIFICATION	0.999995470383645	WITHOUT_CLASSIFICATION	4.529616355029713E-6	DEFECT
// Check if the bound specifies a classifier... //	WITHOUT_CLASSIFICATION	0.9999996175345855	WITHOUT_CLASSIFICATION	3.8246541449125264E-7	DEFECT
// Since we will do the processing recursively, we need to ensure we don't stack overflow if there is a circular super type. //	WITHOUT_CLASSIFICATION	0.9999999740479816	WITHOUT_CLASSIFICATION	2.595201839176937E-8	DEFECT
// Or we test their relationship via their instance classes, if they have them. //	WITHOUT_CLASSIFICATION	0.9999999991765255	WITHOUT_CLASSIFICATION	8.234744173867408E-10	DEFECT
// The bound is a wildcard with no constraints. //	WITHOUT_CLASSIFICATION	0.999999991680736	WITHOUT_CLASSIFICATION	8.319264048742334E-9	DEFECT
// The bound is a wildcard with no constraints. //	WITHOUT_CLASSIFICATION	0.999999991680736	WITHOUT_CLASSIFICATION	8.319264048742334E-9	DEFECT
/*        featureMap.add(eStructuralFeature, cursor++, o);        expectedModCount = featureMap.getModCount();        ++entryCursor;        ++lastCursor;        // lastCursor = -1;        // prepared = 0;*/	WITHOUT_CLASSIFICATION	0.999999999575312	WITHOUT_CLASSIFICATION	4.2468793832772063E-10	DEFECT
// Don't remove the adapter if the object is in a different resource  // and that resource (and hence all its contents) are being cross referenced. //	WITHOUT_CLASSIFICATION	0.9999744040375736	WITHOUT_CLASSIFICATION	2.559596242639319E-5	DEFECT
/*  public List subList(EStructuralFeature feature, int from, int to)  {    return null;  }*/	WITHOUT_CLASSIFICATION	0.999999957495828	WITHOUT_CLASSIFICATION	4.2504171894229484E-8	DEFECT
// Mark the bound as unspecified so that it won't be considered many // but can nevertheless be recognized as being unspecified and perhaps still be treat as many. //	WITHOUT_CLASSIFICATION	0.9999966881373352	WITHOUT_CLASSIFICATION	3.3118626647121795E-6	DEFECT
// Mark the bound as unspecified so that it won't be considered many // but can nevertheless be recognized as being unspecified and perhaps still be treat as many. //	WITHOUT_CLASSIFICATION	0.9999966881373352	WITHOUT_CLASSIFICATION	3.3118626647121795E-6	DEFECT
// If we can't add it, it must already be in the list so find it and move it to the end. //	WITHOUT_CLASSIFICATION	0.9999125201725508	WITHOUT_CLASSIFICATION	8.747982744905615E-5	DEFECT
// Both eObject1 and eObject2 are not null. // If eObject1 has been compared already... //	WITHOUT_CLASSIFICATION	0.8132266587482374	WITHOUT_CLASSIFICATION	0.18677334125176254	DEFECT
// There's no reason they aren't equal, so they are. //	WITHOUT_CLASSIFICATION	0.9999994755295405	WITHOUT_CLASSIFICATION	5.244704594528995E-7	DEFECT
// If the set states are the same, and the values of the feature are the structurally equal, they are equal. //	WITHOUT_CLASSIFICATION	0.9999999916777679	WITHOUT_CLASSIFICATION	8.322232200690034E-9	DEFECT
// If entries don't have the same feature, the feature maps aren't equal. //	WITHOUT_CLASSIFICATION	0.9999510410755528	WITHOUT_CLASSIFICATION	4.895892444719988E-5	DEFECT
// Do a base 64 conversion by turning every 3 bytes into 4 base 64 characters //	WITHOUT_CLASSIFICATION	0.9999999975199356	WITHOUT_CLASSIFICATION	2.4800644876616028E-9	DEFECT
// Get the current time in milliseconds since the epoch  // and adjust it to match the epoch required by the specification. //	WITHOUT_CLASSIFICATION	0.9999999813500022	WITHOUT_CLASSIFICATION	1.8649997747057156E-8	DEFECT
// The system time hasn't changed so add some increment of 100s of nanoseconds to guarantee uniqueness. //	WITHOUT_CLASSIFICATION	0.9999986606163935	WITHOUT_CLASSIFICATION	1.3393836064335952E-6	DEFECT
// Since the granularity of time in Java is only milliseconds,  // add an adjustment so that the time is represented in 100s of nanoseconds. // The version number (1) is multiplexed into the most significant hex digit. //	WITHOUT_CLASSIFICATION	0.9999996900226721	WITHOUT_CLASSIFICATION	3.099773279841389E-7	DEFECT
// Cc	WITHOUT_CLASSIFICATION	0.9999985222292708	WITHOUT_CLASSIFICATION	1.4777707292886033E-6	DEFECT
// The entity handler is the best place to resolve and deresolve URIs since it can do it there just once to produce the entity. // So most often the entity handler will be a URI handler as well and when used as a URI handler will be an identity handler. //	WITHOUT_CLASSIFICATION	0.999999999497593	WITHOUT_CLASSIFICATION	5.024070115206929E-10	DEFECT
// Handle the same document proxies, which may have problems resulting from the // other end of a bidirectional reference being handled as an IDREF rather than as a proxy. // When we are done with these, we know that funny proxies are now resolved as if they were handled as IDREFs. //	WITHOUT_CLASSIFICATION	0.9999998370082329	WITHOUT_CLASSIFICATION	1.629917671685221E-7	DEFECT
// So if the resolved object is also present... //	WITHOUT_CLASSIFICATION	0.9998830603077686	WITHOUT_CLASSIFICATION	1.1693969223134066E-4	DEFECT
// If there is no root object, we're dealing with an EAttribute feature instead of an EReference feature. // So create an instance of simple any type and prepare it to handle the text content. //	WITHOUT_CLASSIFICATION	0.9999999999293538	WITHOUT_CLASSIFICATION	7.064606205506447E-11	DEFECT
// Continue with a different approach.	WITHOUT_CLASSIFICATION	0.9999826391125721	WITHOUT_CLASSIFICATION	1.7360887427854048E-5	DEFECT
// Look for the first non-XMI element. //	WITHOUT_CLASSIFICATION	0.9999999736720393	WITHOUT_CLASSIFICATION	2.6327960683136638E-8	DEFECT
// set features and properties	WITHOUT_CLASSIFICATION	0.9999999430029466	WITHOUT_CLASSIFICATION	5.6997053411786806E-8	DEFECT
// Include only non-duplicate namespace declarations. //	WITHOUT_CLASSIFICATION	0.9999999990684565	WITHOUT_CLASSIFICATION	9.315435759934855E-10	DEFECT
// We need to be careful that we don't end up requiring the no namespace package  // just because the feature is unqualified. //	WITHOUT_CLASSIFICATION	0.9999999991247901	WITHOUT_CLASSIFICATION	8.752098772575504E-10	DEFECT
// We must have a qualifier for an attribute that needs qualified. //	WITHOUT_CLASSIFICATION	0.9999999828972151	WITHOUT_CLASSIFICATION	1.7102784900117546E-8	DEFECT
// see if prefix already exists in current context	WITHOUT_CLASSIFICATION	0.9999978838578663	WITHOUT_CLASSIFICATION	2.116142133759808E-6	DEFECT
// Walk up the super types until we reach a root. //	WITHOUT_CLASSIFICATION	0.9999764409566758	WITHOUT_CLASSIFICATION	2.3559043324147637E-5	DEFECT
// Look for a matching element in the classifier's package but don't bother with the XML type package's document root. //	WITHOUT_CLASSIFICATION	0.9999954566949355	WITHOUT_CLASSIFICATION	4.543305064455327E-6	DEFECT
/*   * INTERNAL: this is a specialized method to add attributes for a top/root element   */	WITHOUT_CLASSIFICATION	0.9999567683980211	WITHOUT_CLASSIFICATION	4.323160197895397E-5	DEFECT
// it's intentional to keep going	WITHOUT_CLASSIFICATION	0.9999999031473213	WITHOUT_CLASSIFICATION	9.685267862194098E-8	DEFECT
// it's intentional to keep going	WITHOUT_CLASSIFICATION	0.9999999031473213	WITHOUT_CLASSIFICATION	9.685267862194098E-8	DEFECT
// it's intentional to keep going	WITHOUT_CLASSIFICATION	0.9999999031473213	WITHOUT_CLASSIFICATION	9.685267862194098E-8	DEFECT
// it's intentional to keep going	WITHOUT_CLASSIFICATION	0.9999999031473213	WITHOUT_CLASSIFICATION	9.685267862194098E-8	DEFECT
// Produce the supplemental character as an entity	WITHOUT_CLASSIFICATION	0.9999999208567099	WITHOUT_CLASSIFICATION	7.914329022147417E-8	DEFECT
// We not sure the encoding supports this code point, so we write it as a character entity reference.	WITHOUT_CLASSIFICATION	0.9999999176511761	WITHOUT_CLASSIFICATION	8.234882389248383E-8	DEFECT
// no property	WITHOUT_CLASSIFICATION	0.9999979052195528	WITHOUT_CLASSIFICATION	2.09478044714917E-6	DEFECT
// no property	WITHOUT_CLASSIFICATION	0.9999979052195528	WITHOUT_CLASSIFICATION	2.09478044714917E-6	DEFECT
// no property	WITHOUT_CLASSIFICATION	0.9999979052195528	WITHOUT_CLASSIFICATION	2.09478044714917E-6	DEFECT
// Only handle classifiers from this package. //	WITHOUT_CLASSIFICATION	0.9999999098260375	WITHOUT_CLASSIFICATION	9.01739625789922E-8	DEFECT
// We effectively passed null, "" to look up the general-content feature. //	WITHOUT_CLASSIFICATION	0.9999951332594365	WITHOUT_CLASSIFICATION	4.866740563612905E-6	DEFECT
// DocumentRoot	WITHOUT_CLASSIFICATION	0.9999997581567381	WITHOUT_CLASSIFICATION	2.418432618735196E-7	DEFECT
// Keep trying other member types until all have failed.	WITHOUT_CLASSIFICATION	0.9999989061112328	WITHOUT_CLASSIFICATION	1.0938887672178082E-6	DEFECT
// Keep trying other member types until all have failed.	WITHOUT_CLASSIFICATION	0.9999989061112328	WITHOUT_CLASSIFICATION	1.0938887672178082E-6	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9999982582005741	WITHOUT_CLASSIFICATION	1.7417994259537E-6	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9999982582005741	WITHOUT_CLASSIFICATION	1.7417994259537E-6	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9999982582005741	WITHOUT_CLASSIFICATION	1.7417994259537E-6	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9999982582005741	WITHOUT_CLASSIFICATION	1.7417994259537E-6	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9999982582005741	WITHOUT_CLASSIFICATION	1.7417994259537E-6	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9999982582005741	WITHOUT_CLASSIFICATION	1.7417994259537E-6	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9999982582005741	WITHOUT_CLASSIFICATION	1.7417994259537E-6	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9999982582005741	WITHOUT_CLASSIFICATION	1.7417994259537E-6	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9999982582005741	WITHOUT_CLASSIFICATION	1.7417994259537E-6	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9999982582005741	WITHOUT_CLASSIFICATION	1.7417994259537E-6	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9999982582005741	WITHOUT_CLASSIFICATION	1.7417994259537E-6	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9999982582005741	WITHOUT_CLASSIFICATION	1.7417994259537E-6	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9999982582005741	WITHOUT_CLASSIFICATION	1.7417994259537E-6	DEFECT
// Need not to call setSource() because // a caller can not access this match instance.	WITHOUT_CLASSIFICATION	0.9999999937835088	WITHOUT_CLASSIFICATION	6.216491183683131E-9	DEFECT
// Need not to call setSource() because // a caller can not access this match instance.	WITHOUT_CLASSIFICATION	0.9999999937835088	WITHOUT_CLASSIFICATION	6.216491183683131E-9	DEFECT
/*           * The pattern has only fixed string.           * The engine uses Boyer-Moore.           */	WITHOUT_CLASSIFICATION	0.9815349329471214	WITHOUT_CLASSIFICATION	0.01846506705287862	DEFECT
/*           * The pattern has only fixed string.           * The engine uses Boyer-Moore.           */	WITHOUT_CLASSIFICATION	0.9815349329471214	WITHOUT_CLASSIFICATION	0.01846506705287862	DEFECT
/*           * The pattern contains a fixed string.           * The engine checks with Boyer-Moore whether the text contains the fixed string or not.           * If not, it return with false.           */	WITHOUT_CLASSIFICATION	0.9995412016039756	WITHOUT_CLASSIFICATION	4.5879839602445965E-4	DEFECT
// ModifierOp // CharOp  for CHAR, BACKREFERENCE, CAPTURE, ANCHOR, 	WITHOUT_CLASSIFICATION	0.9999998073412982	WITHOUT_CLASSIFICATION	1.926587018098686E-7	DEFECT
// STRING	WITHOUT_CLASSIFICATION	0.9999990351328565	WITHOUT_CLASSIFICATION	9.648671435313E-7	DEFECT
// for RANGE or NRANGE	WITHOUT_CLASSIFICATION	0.9999995089093593	WITHOUT_CLASSIFICATION	4.910906407690306E-7	DEFECT
// Overlapped // src:    o--------o // sub:  o----o // sub:      o----o // sub:          o----o // sub:  o------------o	WITHOUT_CLASSIFICATION	0.9999998274631474	WITHOUT_CLASSIFICATION	1.7253685251826997E-7	DEFECT
// this.ranges is sorted and compacted.	WITHOUT_CLASSIFICATION	0.999997311607178	WITHOUT_CLASSIFICATION	2.6883928220918594E-6	DEFECT
// src1:    o--------o // src2:          o----o // res:           o--o // Reuse src2	WITHOUT_CLASSIFICATION	0.9999857027603103	WITHOUT_CLASSIFICATION	1.429723968962241E-5	DEFECT
//this.setLocale(Locale.getDefault());	WITHOUT_CLASSIFICATION	0.9999999959350093	WITHOUT_CLASSIFICATION	4.064990648866222E-9	DEFECT
/*      public RegularExpression createRegex(String regex, int options) throws ParseException {          Token tok = this.parse(regex, options);          return new RegularExpression(regex, tok, this.parennumber, this.hasBackReferences, options);      }      */	WITHOUT_CLASSIFICATION	0.9999999626924664	WITHOUT_CLASSIFICATION	3.7307533661425416E-8	DEFECT
// ')'	WITHOUT_CLASSIFICATION	0.9999972311618645	WITHOUT_CLASSIFICATION	2.768838135482574E-6	DEFECT
// Skips ')'	WITHOUT_CLASSIFICATION	0.9999986399636023	WITHOUT_CLASSIFICATION	1.3600363976793866E-6	DEFECT
// off -> next of '}'	WITHOUT_CLASSIFICATION	0.999998576913823	WITHOUT_CLASSIFICATION	1.4230861770142692E-6	DEFECT
// \ + c // backsolidus // POSIX Character class such as [:alnum:]	WITHOUT_CLASSIFICATION	0.9999999826391041	WITHOUT_CLASSIFICATION	1.7360896022049077E-8	DEFECT
//tok.dumpRanges();	WITHOUT_CLASSIFICATION	0.999999367849869	WITHOUT_CLASSIFICATION	6.321501309814845E-7	DEFECT
// Skips ']'	WITHOUT_CLASSIFICATION	0.9999990185392975	WITHOUT_CLASSIFICATION	9.814607025175867E-7	DEFECT
// ESCAPE U+001B // FORM FEED U+000C // LINE FEED U+000A // CRRIAGE RETURN U+000D // HORIZONTAL TABULATION U+0009 //case 'v':  c = 0x0b;  break; // VERTICAL TABULATION U+000B	WITHOUT_CLASSIFICATION	0.99999827468588	WITHOUT_CLASSIFICATION	1.7253141200975087E-6	DEFECT
// for CLOSURE	WITHOUT_CLASSIFICATION	0.9999998958995642	WITHOUT_CLASSIFICATION	1.0410043574318651E-7	DEFECT
// for STRING	WITHOUT_CLASSIFICATION	0.9999998239407397	WITHOUT_CLASSIFICATION	1.7605926028012213E-7	DEFECT
// ****	WITHOUT_CLASSIFICATION	0.999979617535366	WITHOUT_CLASSIFICATION	2.038246463399153E-5	DEFECT
/*                  result.addRange(0, RegularExpression.LINE_FEED-1);                  result.addRange(RegularExpression.LINE_FEED+1, RegularExpression.CARRIAGE_RETURN-1);                  result.addRange(RegularExpression.CARRIAGE_RETURN+1,                                  RegularExpression.LINE_SEPARATOR-1);                  result.addRange(RegularExpression.PARAGRAPH_SEPARATOR+1, UTF16_MAX);                  return 1;                  */	WITHOUT_CLASSIFICATION	0.999998976343455	WITHOUT_CLASSIFICATION	1.0236565449045143E-6	DEFECT
// ------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999985581838235	WITHOUT_CLASSIFICATION	1.4418161764275235E-6	DEFECT
// ------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999985581838235	WITHOUT_CLASSIFICATION	1.4418161764275235E-6	DEFECT
// 28 // 29, 30 // 31-37	WITHOUT_CLASSIFICATION	0.9999966439240653	WITHOUT_CLASSIFICATION	3.356075934750409E-6	DEFECT
// Schema Rec. {Datatypes} - Punctuation  // Pi - initial quote // Pf - final quote	WITHOUT_CLASSIFICATION	0.9999934271703483	WITHOUT_CLASSIFICATION	6.572829651652932E-6	DEFECT
/*0590..05FF;*/	WITHOUT_CLASSIFICATION	0.9993841049595805	WITHOUT_CLASSIFICATION	6.158950404194929E-4	DEFECT
/*0A00..0A7F;*/	WITHOUT_CLASSIFICATION	0.9992633261252544	WITHOUT_CLASSIFICATION	7.366738747456126E-4	DEFECT
/*0D00..0D7F;*/	WITHOUT_CLASSIFICATION	0.9992122980022234	WITHOUT_CLASSIFICATION	7.877019977764473E-4	DEFECT
/*10A0..10FF;*/	WITHOUT_CLASSIFICATION	0.9996274037020716	WITHOUT_CLASSIFICATION	3.725962979284239E-4	DEFECT
/*16A0..16FF;*/	WITHOUT_CLASSIFICATION	0.9996159868410431	WITHOUT_CLASSIFICATION	3.840131589569296E-4	DEFECT
/*2000..206F;*/	WITHOUT_CLASSIFICATION	0.9986084840641691	WITHOUT_CLASSIFICATION	0.0013915159358308176	DEFECT
/*2190..21FF;*/	WITHOUT_CLASSIFICATION	0.9994752374834096	WITHOUT_CLASSIFICATION	5.247625165903537E-4	DEFECT
/*2500..257F;*/	WITHOUT_CLASSIFICATION	0.9985176601791177	WITHOUT_CLASSIFICATION	0.0014823398208822982	DEFECT
/*2FF0..2FFF;*/	WITHOUT_CLASSIFICATION	0.9995567677263263	WITHOUT_CLASSIFICATION	4.432322736736972E-4	DEFECT
/*3190..319F;*/	WITHOUT_CLASSIFICATION	0.9995787448559389	WITHOUT_CLASSIFICATION	4.212551440610821E-4	DEFECT
/*A000..A48F;*/	WITHOUT_CLASSIFICATION	0.9993205066924082	WITHOUT_CLASSIFICATION	6.794933075918483E-4	DEFECT
/*FB50..FDFF;*/	WITHOUT_CLASSIFICATION	0.9985646203440526	WITHOUT_CLASSIFICATION	0.001435379655947397	DEFECT
/*FF00..FFEF;*/	WITHOUT_CLASSIFICATION	0.9995533775870541	WITHOUT_CLASSIFICATION	4.4662241294596646E-4	DEFECT
/*1D400..1D7FF;*/	WITHOUT_CLASSIFICATION	0.9991848822674451	WITHOUT_CLASSIFICATION	8.151177325549592E-4	DEFECT
//ADD THOSE MANUALLY //F0000..FFFFD; "Private Use", //100000..10FFFD; "Private Use" //FFF0..FFFD; "Specials", 	WITHOUT_CLASSIFICATION	0.9999979152544616	WITHOUT_CLASSIFICATION	2.084745538439139E-6	DEFECT
// ;DEVANAGARI SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;BENGALI SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;GURMUKHI SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;GUJARATI SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;ORIYA SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;TAMIL SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;TELUGU SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;KANNADA SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;MALAYALAM SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;THAI CHARACTER PHINTHU;Mn;9;ON;;;;;N;THAI VOWEL SIGN PHINTHU;;;; //;TIBETAN MARK HALANTA;Mn;9;ON;;;;;N;TIBETAN VIRAMA;;;;	WITHOUT_CLASSIFICATION	0.999997282583115	WITHOUT_CLASSIFICATION	2.7174168849269394E-6	DEFECT
// Don't use 'cotinue' for this loop. // single-range | from-to-range | subtraction	WITHOUT_CLASSIFICATION	0.9999996385700615	WITHOUT_CLASSIFICATION	3.614299385604059E-7	DEFECT
// both prefix (if any) a localpart must be valid NCName	WITHOUT_CLASSIFICATION	0.9999999968862614	WITHOUT_CLASSIFICATION	3.113738536042352E-9	DEFECT
// Empty.	WITHOUT_CLASSIFICATION	0.9999925754038371	WITHOUT_CLASSIFICATION	7.424596162936847E-6	DEFECT
// Empty.	WITHOUT_CLASSIFICATION	0.9999925754038371	WITHOUT_CLASSIFICATION	7.424596162936847E-6	DEFECT
// Empty.	WITHOUT_CLASSIFICATION	0.9999925754038371	WITHOUT_CLASSIFICATION	7.424596162936847E-6	DEFECT
// Empty.	WITHOUT_CLASSIFICATION	0.9999925754038371	WITHOUT_CLASSIFICATION	7.424596162936847E-6	DEFECT
/* * This class provides encode/decode for RFC 2045 Base64 as * defined by RFC 2045, N. Freed and N. Borenstein. * RFC 2045: Multipurpose Internet Mail Extensions (MIME) * Part One: Format of Internet Message Bodies. Reference * 1996 Available at: http://www.ietf.org/rfc/rfc2045.txt * This class is used by XML Schema binary format validation * * This implementation does not encode/decode streaming * data. You need the data that you will encode/decode * already on a byte array. * * @author Jeffrey Rodriguez * @author Sandy Gao */	WITHOUT_CLASSIFICATION	0.9986034826927627	WITHOUT_CLASSIFICATION	0.0013965173072373136	DEFECT
//if found "no data" just return null	WITHOUT_CLASSIFICATION	0.9999999876238551	WITHOUT_CLASSIFICATION	1.2376144767763131E-8	DEFECT
/* * EncodingMap is a convenience class which handles conversions between  * IANA encoding names and Java encoding names, and vice versa. The * encoding names used in XML instance documents <strong>must</strong> * be the IANA encoding names specified or one of the aliases for those names * which IANA defines. * <p> * <TABLE BORDER="0" WIDTH="100%"> *  <TR> *      <TD WIDTH="33%"> *          <P ALIGN="CENTER"><B>Common Name</B> *      </TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER"><B>Use this name in XML files</B> *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER"><B>Name Type</B> *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER"><B>Xerces converts to this Java Encoder Name</B> *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">8 bit Unicode</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">UTF-8 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">UTF8 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin 1</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-1 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-1 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin 2</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-2 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-2 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin 3</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-3 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-3 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin 4</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-4 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-4 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin Cyrillic</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-5 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-5 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin Arabic</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-6 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-6 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin Greek</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-7 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-7 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin Hebrew</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-8 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-8 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin 5</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-9 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-9 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: US</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-us *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp037 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Canada</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-ca *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp037 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Netherlands</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-nl *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp037 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Denmark</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-dk *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp277 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Norway</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-no *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp277 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Finland</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-fi *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp278 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Sweden</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-se *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp278 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Italy</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-it *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp280 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Spain, Latin America</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-es *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp284 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Great Britain</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-gb *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp285 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: France</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-fr *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp297 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Arabic</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-ar1 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp420 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Hebrew</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-he *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp424 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Switzerland</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-ch *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp500 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Roece</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-roece *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp870 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Yugoslavia</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-yu *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp870 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Iceland</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-is *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp871 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Urdu</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-ar2 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp918 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">Chinese for PRC, mixed 1/2 byte</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">gb2312 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">GB2312 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">Extended Unix Code, packed for Japanese</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">euc-jp *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">eucjis *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">Japanese: iso-2022-jp</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">iso-2020-jp *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">JIS *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">Japanese: Shift JIS</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">Shift_JIS *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">SJIS *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">Chinese: Big5</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">Big5 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">Big5 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">Extended Unix Code, packed for Korean</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">euc-kr *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">iso2022kr *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">Cyrillic</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">koi8-r *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">koi8-r *      </TD> *  </TR> * </TABLE> *  * @author TAMURA Kent, IBM * @author Andy Clark, IBM */	WITHOUT_CLASSIFICATION	0.9999999999998332	WITHOUT_CLASSIFICATION	1.66763360681059E-13	DEFECT
// // Static initialization //	WITHOUT_CLASSIFICATION	0.9999992104642361	WITHOUT_CLASSIFICATION	7.895357638243768E-7	DEFECT
// // Static initialization //	WITHOUT_CLASSIFICATION	0.9999992104642361	WITHOUT_CLASSIFICATION	7.895357638243768E-7	DEFECT
// add IANA to Java encoding mappings.	WITHOUT_CLASSIFICATION	0.999998690964243	WITHOUT_CLASSIFICATION	1.3090357569514772E-6	DEFECT
// support for 1047, as proposed to be added to the  // IANA registry in  // http://lists.w3.org/Archives/Public/ietf-charset/2002JulSep/0049.html	WITHOUT_CLASSIFICATION	0.9999989744524127	WITHOUT_CLASSIFICATION	1.0255475873356287E-6	DEFECT
// support for 1047, as proposed to be added to the  // IANA registry in  // http://lists.w3.org/Archives/Public/ietf-charset/2002JulSep/0049.html	WITHOUT_CLASSIFICATION	0.9999989744524127	WITHOUT_CLASSIFICATION	1.0255475873356287E-6	DEFECT
// <clinit>()	WITHOUT_CLASSIFICATION	0.9999994544160197	WITHOUT_CLASSIFICATION	5.455839802756676E-7	DEFECT
// <clinit>()	WITHOUT_CLASSIFICATION	0.9999994544160197	WITHOUT_CLASSIFICATION	5.455839802756676E-7	DEFECT
// putJava2IANAMapping(String,String)	WITHOUT_CLASSIFICATION	0.9999997236444834	WITHOUT_CLASSIFICATION	2.7635551654577055E-7	DEFECT
// getJava2IANAMapping(String):String	WITHOUT_CLASSIFICATION	0.9999990969980361	WITHOUT_CLASSIFICATION	9.030019638334211E-7	DEFECT
// removeJava2IANAMapping	WITHOUT_CLASSIFICATION	0.9999987626811205	WITHOUT_CLASSIFICATION	1.2373188794869078E-6	DEFECT
// Add ASCII Letters	WITHOUT_CLASSIFICATION	0.9999998577034858	WITHOUT_CLASSIFICATION	1.422965142282251E-7	DEFECT
// Add Mark Characters	WITHOUT_CLASSIFICATION	0.9999999965052846	WITHOUT_CLASSIFICATION	3.494715393915163E-9	DEFECT
// Add Userinfo Characters	WITHOUT_CLASSIFICATION	0.9999999976490109	WITHOUT_CLASSIFICATION	2.3509890354250917E-9	DEFECT
// just make a copy of the base if spec is empty	WITHOUT_CLASSIFICATION	0.9999999920701572	WITHOUT_CLASSIFICATION	7.92984284303771E-9	DEFECT
// A standalone base is a valid URI according to spec	WITHOUT_CLASSIFICATION	0.9999983624452478	WITHOUT_CLASSIFICATION	1.6375547521911027E-6	DEFECT
// Two slashes means we may have authority, but definitely means we're either // matching net_path or abs_path. These two productions are ambiguous in that // every net_path (except those containing an IPv6Reference) is an abs_path.  // RFC 2396 resolves this ambiguity by applying a greedy left most matching rule.  // Try matching net_path first, and if that fails we don't have authority so  // then attempt to match abs_path. // // net_path = "//" authority [ abs_path ] // abs_path = "/"  path_segments	WITHOUT_CLASSIFICATION	0.9998230074283585	WITHOUT_CLASSIFICATION	1.769925716414433E-4	DEFECT
// Two slashes means we may have authority, but definitely means we're either // matching net_path or abs_path. These two productions are ambiguous in that // every net_path (except those containing an IPv6Reference) is an abs_path.  // RFC 2396 resolves this ambiguity by applying a greedy left most matching rule.  // Try matching net_path first, and if that fails we don't have authority so  // then attempt to match abs_path. // // net_path = "//" authority [ abs_path ] // abs_path = "/"  path_segments	WITHOUT_CLASSIFICATION	0.9998230074283585	WITHOUT_CLASSIFICATION	1.769925716414433E-4	DEFECT
// If we didn't find authority we need to back up. Attempt to // match against abs_path next.	WITHOUT_CLASSIFICATION	0.9999857689776387	WITHOUT_CLASSIFICATION	1.4231022361348719E-5	DEFECT
// create message	WITHOUT_CLASSIFICATION	0.9999999544166146	WITHOUT_CLASSIFICATION	4.558338545715176E-8	DEFECT
// check to see if this is the current doc - RFC 2396 5.2 #2 // note that this is slightly different from the RFC spec in that // we don't include the check for query string being null // - this handles cases where the urispec is just a query // string or a fragment (e.g. "?y" or "#s") - // see <http://www.ics.uci.edu/~fielding/url/test1.html> which // identified this as a bug in the RFC	WITHOUT_CLASSIFICATION	0.9999999515560863	WITHOUT_CLASSIFICATION	4.844391376501507E-8	DEFECT
// check for scheme - RFC 2396 5.2 #3 // if we found a scheme, it means absolute URI, so we're done	WITHOUT_CLASSIFICATION	0.9999999977693815	WITHOUT_CLASSIFICATION	2.2306184262981345E-9	DEFECT
// if we get to this point, we need to resolve relative path // RFC 2396 5.2 #6	WITHOUT_CLASSIFICATION	0.9999964852348381	WITHOUT_CLASSIFICATION	3.514765162024307E-6	DEFECT
// check for valid escape sequence	WITHOUT_CLASSIFICATION	0.9999999901484843	WITHOUT_CLASSIFICATION	9.851515626688806E-9	DEFECT
// check for valid escape sequence	WITHOUT_CLASSIFICATION	0.9999999901484843	WITHOUT_CLASSIFICATION	9.851515626688806E-9	DEFECT
// check for valid escape sequence	WITHOUT_CLASSIFICATION	0.9999999901484843	WITHOUT_CLASSIFICATION	9.851515626688806E-9	DEFECT
// If the scheme specific part is opaque, it can contain '[' // and ']'. uric_no_slash wasn't modified by RFC 2732, which // I've interpreted as an error in the spec, since the  // production should be equivalent to (uric - '/'), and uric // contains '[' and ']'. - mrglavas	WITHOUT_CLASSIFICATION	0.9999999982799255	WITHOUT_CLASSIFICATION	1.7200745152909759E-9	DEFECT
// If the scheme specific part is opaque, it can contain '[' // and ']'. uric_no_slash wasn't modified by RFC 2732, which // I've interpreted as an error in the spec, since the  // production should be equivalent to (uric - '/'), and uric // contains '[' and ']'. - mrglavas	WITHOUT_CLASSIFICATION	0.9999999982799255	WITHOUT_CLASSIFICATION	1.7200745152909759E-9	DEFECT
// hostname      = *( domainlabel "." ) toplabel [ "." ] // domainlabel   = alphanum | alphanum *( alphanum | "-" ) alphanum // toplabel      = alpha | alpha *( alphanum | "-" ) alphanum	WITHOUT_CLASSIFICATION	0.9999999969243925	WITHOUT_CLASSIFICATION	3.0756076676585843E-9	DEFECT
// make sure that 1) we see only digits and dot separators, 2) that // any dot separator is preceded and followed by a digit and // 3) that we find 3 dots // // RFC 2732 amended RFC 2396 by replacing the definition  // of IPv4address with the one defined by RFC 2373. - mrglavas // // IPv4address = 1*3DIGIT "." 1*3DIGIT "." 1*3DIGIT "." 1*3DIGIT // // One to three digits must be in each segment.	WITHOUT_CLASSIFICATION	0.9999999777995521	WITHOUT_CLASSIFICATION	2.220044784881625E-8	DEFECT
// make sure that 1) we see only digits and dot separators, 2) that // any dot separator is preceded and followed by a digit and // 3) that we find 3 dots // // RFC 2732 amended RFC 2396 by replacing the definition  // of IPv4address with the one defined by RFC 2373. - mrglavas // // IPv4address = 1*3DIGIT "." 1*3DIGIT "." 1*3DIGIT "." 1*3DIGIT // // One to three digits must be in each segment.	WITHOUT_CLASSIFICATION	0.9999999777995521	WITHOUT_CLASSIFICATION	2.220044784881625E-8	DEFECT
// We've either reached the end of the string, the address ends in // an IPv4 address, or it is invalid. scanHexSequence has already  // made sure that we have the right number of bits. 	WITHOUT_CLASSIFICATION	0.9999999796858052	WITHOUT_CLASSIFICATION	2.0314194777864258E-8	DEFECT
// This might be invalid or an IPv4address. If it's potentially an IPv4address, // backup to just after the last valid character that matches hexseq.	WITHOUT_CLASSIFICATION	0.9999999750861642	WITHOUT_CLASSIFICATION	2.4913835710231158E-8	DEFECT
// Fill 2 of value (byte) 49 // Fill 26 of value (byte) -3 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999611429034172	WITHOUT_CLASSIFICATION	3.885709658280721E-5	DEFECT
// Fill 26 of value (byte) -3 // Fill 60 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999639928233158	WITHOUT_CLASSIFICATION	3.6007176684117636E-5	DEFECT
// Fill 68 of value (byte) -19 // Fill 9 of value (byte) 33 // Fill 36 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 30 of value (byte) -19 // Fill 56 of value (byte) 33 // Fill 89 of value (byte) -19 // Fill 18 of value (byte) 33 // Fill 7 of value (byte) -19 // Fill 14 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 46 of value (byte) 33 // Fill 70 of value (byte) -87 // Fill 26 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 36 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9996867746815273	WITHOUT_CLASSIFICATION	3.1322531847261914E-4	DEFECT
// Fill 68 of value (byte) -19 // Fill 9 of value (byte) 33 // Fill 36 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 30 of value (byte) -19 // Fill 56 of value (byte) 33 // Fill 89 of value (byte) -19 // Fill 18 of value (byte) 33 // Fill 7 of value (byte) -19 // Fill 14 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 46 of value (byte) 33 // Fill 70 of value (byte) -87 // Fill 26 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 36 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9996867746815273	WITHOUT_CLASSIFICATION	3.1322531847261914E-4	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999992645961811	WITHOUT_CLASSIFICATION	7.354038188959613E-6	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999992645961811	WITHOUT_CLASSIFICATION	7.354038188959613E-6	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999992645961811	WITHOUT_CLASSIFICATION	7.354038188959613E-6	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999992645961811	WITHOUT_CLASSIFICATION	7.354038188959613E-6	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999992645961811	WITHOUT_CLASSIFICATION	7.354038188959613E-6	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999992645961811	WITHOUT_CLASSIFICATION	7.354038188959613E-6	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999992645961811	WITHOUT_CLASSIFICATION	7.354038188959613E-6	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999992645961811	WITHOUT_CLASSIFICATION	7.354038188959613E-6	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999992645961811	WITHOUT_CLASSIFICATION	7.354038188959613E-6	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999992645961811	WITHOUT_CLASSIFICATION	7.354038188959613E-6	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999992645961811	WITHOUT_CLASSIFICATION	7.354038188959613E-6	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999992645961811	WITHOUT_CLASSIFICATION	7.354038188959613E-6	DEFECT
// Fill 4 of value (byte) -87 // Fill 9 of value (byte) 33 // Fill 53 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 28 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 8 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 55 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999096863880215	WITHOUT_CLASSIFICATION	9.031361197855632E-5	DEFECT
// Fill 7 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 10 of value (byte) 33 // Fill 17 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999587647858257	WITHOUT_CLASSIFICATION	4.123521417426097E-5	DEFECT
// Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999925250968589	WITHOUT_CLASSIFICATION	7.474903141117851E-6	DEFECT
// Fill 11 of value (byte) 33 // Fill 27 of value (byte) -19 // Fill 5 of value (byte) 33 // Fill 3 of value (byte) -19 // Fill 46 of value (byte) 33 // Fill 26 of value (byte) -19 // Fill 5 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999532331044538	WITHOUT_CLASSIFICATION	4.6766895546060824E-5	DEFECT
// Fill 4 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 519 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999513772247157	WITHOUT_CLASSIFICATION	4.8622775284178764E-5	DEFECT
// Fill 16 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 4 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 10 of value (byte) -19 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 17 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999537780634393	WITHOUT_CLASSIFICATION	4.6221936560702876E-5	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999897051715839	WITHOUT_CLASSIFICATION	1.0294828416031132E-5	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999897051715839	WITHOUT_CLASSIFICATION	1.0294828416031132E-5	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999897051715839	WITHOUT_CLASSIFICATION	1.0294828416031132E-5	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999897051715839	WITHOUT_CLASSIFICATION	1.0294828416031132E-5	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999867520084271	WITHOUT_CLASSIFICATION	1.3247991572831958E-5	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999867520084271	WITHOUT_CLASSIFICATION	1.3247991572831958E-5	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999867520084271	WITHOUT_CLASSIFICATION	1.3247991572831958E-5	DEFECT
// Fill 5 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 17 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999602930501871	WITHOUT_CLASSIFICATION	3.9706949812937254E-5	DEFECT
// Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 4 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999661917594272	WITHOUT_CLASSIFICATION	3.380824057264421E-5	DEFECT
// }	WITHOUT_CLASSIFICATION	0.9999968737632579	WITHOUT_CLASSIFICATION	3.1262367422214507E-6	DEFECT
// }	WITHOUT_CLASSIFICATION	0.9999968737632579	WITHOUT_CLASSIFICATION	3.1262367422214507E-6	DEFECT
// }}	WITHOUT_CLASSIFICATION	0.9999980439100117	WITHOUT_CLASSIFICATION	1.9560899883061235E-6	DEFECT
// Fill 6 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87 // Fill 8 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999135539800625	WITHOUT_CLASSIFICATION	8.644601993743384E-5	DEFECT
// Fill 15 of value (byte) 33 // Fill 9 of value (byte) -87 // Fill 17 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999397613155941	WITHOUT_CLASSIFICATION	6.023868440578256E-5	DEFECT
// Fill 10 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999902024540713	WITHOUT_CLASSIFICATION	9.797545928579068E-6	DEFECT
// Fill 5 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 7 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999605003532998	WITHOUT_CLASSIFICATION	3.949964670030589E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.999999826515885	WITHOUT_CLASSIFICATION	1.7348411491497847E-7	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999999184455309	WITHOUT_CLASSIFICATION	8.155446905564088E-8	DEFECT
// cause a syntax error	WITHOUT_CLASSIFICATION	0.9999973845024542	WITHOUT_CLASSIFICATION	2.615497545881975E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.999999826515885	WITHOUT_CLASSIFICATION	1.7348411491497847E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.999999826515885	WITHOUT_CLASSIFICATION	1.7348411491497847E-7	DEFECT
// Look for a likely plugin name. //	WITHOUT_CLASSIFICATION	0.9999520313062412	WITHOUT_CLASSIFICATION	4.79686937588865E-5	DEFECT
/*   * Returns the dynamic template path, an ordered list of URIs corresponding to locations under which to find   * templates.   */	WITHOUT_CLASSIFICATION	0.9999997730339772	WITHOUT_CLASSIFICATION	2.2696602283773392E-7	DEFECT
/*   * Returns the base portion of the dynamic template path.   */	WITHOUT_CLASSIFICATION	0.9999967927120622	WITHOUT_CLASSIFICATION	3.207287937786315E-6	DEFECT
// It's okay for there not be a precompiled template, so fail quietly.	WITHOUT_CLASSIFICATION	0.9999994781358981	WITHOUT_CLASSIFICATION	5.218641019464757E-7	DEFECT
// Returns whether this class implements any of the given features.	WITHOUT_CLASSIFICATION	0.9977969542632471	WITHOUT_CLASSIFICATION	0.0022030457367528448	DEFECT
// GenTypedElement	WITHOUT_CLASSIFICATION	0.999999641706119	WITHOUT_CLASSIFICATION	3.5829388095545524E-7	DEFECT
// GenTypeParameter	WITHOUT_CLASSIFICATION	0.9999999250777474	WITHOUT_CLASSIFICATION	7.492225255147507E-8	DEFECT
//GenRuntimeVersion	WITHOUT_CLASSIFICATION	0.9999931045250263	WITHOUT_CLASSIFICATION	6.895474973654446E-6	DEFECT
//GenModelPackage	WITHOUT_CLASSIFICATION	0.9999925758335059	WITHOUT_CLASSIFICATION	7.424166494184995E-6	DEFECT
// String getPackageID();	WITHOUT_CLASSIFICATION	0.9999992522599384	WITHOUT_CLASSIFICATION	7.477400615876296E-7	DEFECT
// getFirstFileExtension?	WITHOUT_CLASSIFICATION	0.9999997478770811	WITHOUT_CLASSIFICATION	2.5212291889568886E-7	DEFECT
// this returns either "attribute", "attribute list", "reference", or "reference list"	WITHOUT_CLASSIFICATION	0.9999996225549366	WITHOUT_CLASSIFICATION	3.7744506342974176E-7	DEFECT
// add variable fragment to new declaration	WITHOUT_CLASSIFICATION	0.9999999900259425	WITHOUT_CLASSIFICATION	9.974057498078675E-9	DEFECT
// Filtered for property keys to remove duplicates.	WITHOUT_CLASSIFICATION	0.9999991185563741	WITHOUT_CLASSIFICATION	8.814436258843466E-7	DEFECT
//GenModelFactory	WITHOUT_CLASSIFICATION	0.9999934296310352	WITHOUT_CLASSIFICATION	6.5703689647521766E-6	DEFECT
// GenAnnotation	WITHOUT_CLASSIFICATION	0.9999973141449845	WITHOUT_CLASSIFICATION	2.6858550154323124E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.999999826515885	WITHOUT_CLASSIFICATION	1.7348411491497847E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.999999826515885	WITHOUT_CLASSIFICATION	1.7348411491497847E-7	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.999999600561112	WITHOUT_CLASSIFICATION	3.994388879112048E-7	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999999184455309	WITHOUT_CLASSIFICATION	8.155446905564088E-8	DEFECT
// add added super interfaces to the array	WITHOUT_CLASSIFICATION	0.9999995869647348	WITHOUT_CLASSIFICATION	4.130352651549609E-7	DEFECT
// always returns original value	WITHOUT_CLASSIFICATION	0.9999993286490955	WITHOUT_CLASSIFICATION	6.71350904520347E-7	DEFECT
// only 1 fragment left - revert the changes	WITHOUT_CLASSIFICATION	0.9999999718719833	WITHOUT_CLASSIFICATION	2.8128016653187694E-8	DEFECT
// split is performed	WITHOUT_CLASSIFICATION	0.999999701849771	WITHOUT_CLASSIFICATION	2.9815022906191127E-7	DEFECT
// name already contains ".*" - unset on demand property	WITHOUT_CLASSIFICATION	0.9999932997095988	WITHOUT_CLASSIFICATION	6.7002904011009674E-6	DEFECT
// not supported in JDOM	WITHOUT_CLASSIFICATION	0.9999439653913271	WITHOUT_CLASSIFICATION	5.6034608672997454E-5	DEFECT
// not supported in JDOM    	WITHOUT_CLASSIFICATION	0.9999276762816318	WITHOUT_CLASSIFICATION	7.232371836817485E-5	DEFECT
//The shared instance.	WITHOUT_CLASSIFICATION	0.9999997929054933	WITHOUT_CLASSIFICATION	2.0709450678449454E-7	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999995972496601	WITHOUT_CLASSIFICATION	4.0275033974482523E-7	DEFECT
// Empty extension to limit the effect of suppressing the deprecation warning.	WITHOUT_CLASSIFICATION	0.9999951632862839	WITHOUT_CLASSIFICATION	4.836713716099347E-6	DEFECT
//GenAnnotationImpl	WITHOUT_CLASSIFICATION	0.9999655322289157	WITHOUT_CLASSIFICATION	3.446777108434764E-5	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.9999999772821485	WITHOUT_CLASSIFICATION	2.2717851443933376E-8	DEFECT
// Initialize simple dependencies	WITHOUT_CLASSIFICATION	0.9999998628457445	WITHOUT_CLASSIFICATION	1.3715425542933645E-7	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.9999995366025851	WITHOUT_CLASSIFICATION	4.6339741494588786E-7	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.999999830336471	WITHOUT_CLASSIFICATION	1.6966352898701455E-7	DEFECT
// Mark meta-data to indicate it can't be changed	WITHOUT_CLASSIFICATION	0.99999860427837	WITHOUT_CLASSIFICATION	1.3957216301158224E-6	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.999999891557245	WITHOUT_CLASSIFICATION	1.0844275502500757E-7	DEFECT
// Create enums	WITHOUT_CLASSIFICATION	0.9999999279906351	WITHOUT_CLASSIFICATION	7.200936492899245E-8	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.999999382397121	WITHOUT_CLASSIFICATION	6.176028789009124E-7	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.9999993290912625	WITHOUT_CLASSIFICATION	6.709087374268461E-7	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.9999978849235671	WITHOUT_CLASSIFICATION	2.1150764329847075E-6	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.9999996570524105	WITHOUT_CLASSIFICATION	3.429475895124151E-7	DEFECT
// Initialize enums and add enum literals	WITHOUT_CLASSIFICATION	0.9999994618759017	WITHOUT_CLASSIFICATION	5.381240982525359E-7	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.9999999647879461	WITHOUT_CLASSIFICATION	3.5212053998147653E-8	DEFECT
//GenModelPackageImpl	WITHOUT_CLASSIFICATION	0.999984367148437	WITHOUT_CLASSIFICATION	1.56328515630572E-5	DEFECT
// Does nothing	WITHOUT_CLASSIFICATION	0.9999989700530608	WITHOUT_CLASSIFICATION	1.0299469392248786E-6	DEFECT
// Create an import manager for this compilation unit	WITHOUT_CLASSIFICATION	0.9999994473631756	WITHOUT_CLASSIFICATION	5.526368243901232E-7	DEFECT
// Create a code formatter for this compilation unit, if needed	WITHOUT_CLASSIFICATION	0.9999980152238037	WITHOUT_CLASSIFICATION	1.9847761962890776E-6	DEFECT
// InputStream contents = new ByteArrayInputStream(bytes);	WITHOUT_CLASSIFICATION	0.9999966668506741	WITHOUT_CLASSIFICATION	3.3331493259205567E-6	DEFECT
// Clear the import manager	WITHOUT_CLASSIFICATION	0.9999996284681902	WITHOUT_CLASSIFICATION	3.7153180971743467E-7	DEFECT
//FB TBD different objects for ecore model!	WITHOUT_CLASSIFICATION	0.9997636120529548	WITHOUT_CLASSIFICATION	2.363879470453277E-4	DEFECT
// BasicEMap.this.removeEntry(index, j);	WITHOUT_CLASSIFICATION	0.9999994147951315	WITHOUT_CLASSIFICATION	5.852048684178896E-7	DEFECT
//FB TBD different objects for ecore model!	WITHOUT_CLASSIFICATION	0.9997636120529548	WITHOUT_CLASSIFICATION	2.363879470453277E-4	DEFECT
//(eType instanceof EDataType)	WITHOUT_CLASSIFICATION	0.9999992556787545	WITHOUT_CLASSIFICATION	7.443212454434259E-7	DEFECT
// order genPackages by putting firstGenPackage (if non-null) first	WITHOUT_CLASSIFICATION	0.9999998130889065	WITHOUT_CLASSIFICATION	1.8691109344773417E-7	DEFECT
// generateColor();	WITHOUT_CLASSIFICATION	0.9999990831823814	WITHOUT_CLASSIFICATION	9.168176186913331E-7	DEFECT
// If the value is null, the key is a referenced object	WITHOUT_CLASSIFICATION	0.9999285649610951	WITHOUT_CLASSIFICATION	7.143503890498637E-5	DEFECT
// If we've found thing with type parameters, search them for a match.	WITHOUT_CLASSIFICATION	0.9999994447127691	WITHOUT_CLASSIFICATION	5.552872309792121E-7	DEFECT
/*   * Set from {@link #isChildren children} if unset, and return value.   */	WITHOUT_CLASSIFICATION	0.9999998542627748	WITHOUT_CLASSIFICATION	1.4573722513618953E-7	DEFECT
//  && eReverseFeature.isNavigable();	WITHOUT_CLASSIFICATION	0.9999999986732024	WITHOUT_CLASSIFICATION	1.326797555183756E-9	DEFECT
//GenFeatureImpl	WITHOUT_CLASSIFICATION	0.999999298168379	WITHOUT_CLASSIFICATION	7.018316211305659E-7	DEFECT
// Returns whether this class implements any of the given features.	WITHOUT_CLASSIFICATION	0.9977969542632471	WITHOUT_CLASSIFICATION	0.0022030457367528448	DEFECT
//GenEnumImpl	WITHOUT_CLASSIFICATION	0.9999947018223919	WITHOUT_CLASSIFICATION	5.298177608079179E-6	DEFECT
//GenModelFactoryImpl	WITHOUT_CLASSIFICATION	0.9999923485104001	WITHOUT_CLASSIFICATION	7.651489599930876E-6	DEFECT
// build mapping from classes to list of features that use them	WITHOUT_CLASSIFICATION	0.9999999205247737	WITHOUT_CLASSIFICATION	7.947522626565652E-8	DEFECT
// scan feature lists for those with multiple elements and return them	WITHOUT_CLASSIFICATION	0.9999999963319872	WITHOUT_CLASSIFICATION	3.668012694904102E-9	DEFECT
//data type	WITHOUT_CLASSIFICATION	0.9999926128157542	WITHOUT_CLASSIFICATION	7.387184245759421E-6	DEFECT
//GenTypeParameterImpl	WITHOUT_CLASSIFICATION	0.999991767572187	WITHOUT_CLASSIFICATION	8.232427813021046E-6	DEFECT
//GenTypedElementImpl	WITHOUT_CLASSIFICATION	0.9999811784593007	WITHOUT_CLASSIFICATION	1.8821540699398254E-5	DEFECT
// escaped unicode form	WITHOUT_CLASSIFICATION	0.9999999429036028	WITHOUT_CLASSIFICATION	5.709639706313481E-8	DEFECT
// EObject is handled by default case	WITHOUT_CLASSIFICATION	0.9999999829905037	WITHOUT_CLASSIFICATION	1.7009496172786257E-8	DEFECT
// Go through class super types to catch any from other packages	WITHOUT_CLASSIFICATION	0.9999995351269306	WITHOUT_CLASSIFICATION	4.648730693876126E-7	DEFECT
// Go through class super types to catch constraints from other packages	WITHOUT_CLASSIFICATION	0.9999999881745391	WITHOUT_CLASSIFICATION	1.1825460834746193E-8	DEFECT
// Create helpers to cache and supply information for unique naming	WITHOUT_CLASSIFICATION	0.9999934584940947	WITHOUT_CLASSIFICATION	6.541505905333926E-6	DEFECT
// Ignore this soft dependency when it's not satisfied.	WITHOUT_CLASSIFICATION	0.99999920786072	WITHOUT_CLASSIFICATION	7.921392799687895E-7	DEFECT
// return getPrefixedName("EditPlugin");	WITHOUT_CLASSIFICATION	0.9999960858984984	WITHOUT_CLASSIFICATION	3.914101501566785E-6	DEFECT
// return getProviderPackageName() + "." + getEditPluginClassName();	WITHOUT_CLASSIFICATION	0.999998979359902	WITHOUT_CLASSIFICATION	1.020640098004519E-6	DEFECT
// return getPrefixedName("EditorPlugin");	WITHOUT_CLASSIFICATION	0.9999960374794633	WITHOUT_CLASSIFICATION	3.962520536746674E-6	DEFECT
// return getPresentationPackageName() + "." + getEditorPluginClassName();	WITHOUT_CLASSIFICATION	0.9999998757388951	WITHOUT_CLASSIFICATION	1.242611048373082E-7	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9999974839082467	WITHOUT_CLASSIFICATION	2.5160917533349325E-6	DEFECT
//TBD 	WITHOUT_CLASSIFICATION	0.9999710366039118	WITHOUT_CLASSIFICATION	2.8963396088122526E-5	DEFECT
//TBD 	WITHOUT_CLASSIFICATION	0.9999710366039118	WITHOUT_CLASSIFICATION	2.8963396088122526E-5	DEFECT
//GenPackageImpl	WITHOUT_CLASSIFICATION	0.9999936774274526	WITHOUT_CLASSIFICATION	6.322572547424309E-6	DEFECT
// Don't care about plugin class; we can generate a model without one.	WITHOUT_CLASSIFICATION	0.9996963188600594	WITHOUT_CLASSIFICATION	3.036811399406171E-4	DEFECT
// genPackage can be a broken proxy	WITHOUT_CLASSIFICATION	0.9974728739904938	WITHOUT_CLASSIFICATION	0.002527126009506218	DEFECT
//   protected JETEmitter extendedItemProviderEmitter = null;	WITHOUT_CLASSIFICATION	0.9999470741185138	WITHOUT_CLASSIFICATION	5.292588148624158E-5	DEFECT
//ItemProvider/newChildDescriptorsAttributeDelegatedFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999999837879016	WITHOUT_CLASSIFICATION	1.6212098398136694E-8	DEFECT
//GenModelImpl	WITHOUT_CLASSIFICATION	0.999983877340573	WITHOUT_CLASSIFICATION	1.6122659426989656E-5	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.999999600561112	WITHOUT_CLASSIFICATION	3.994388879112048E-7	DEFECT
// TODO	WITHOUT_CLASSIFICATION	0.999446971900518	WITHOUT_CLASSIFICATION	5.530280994820118E-4	DEFECT
//ItemProvider/newChildDescriptorsReferenceFeature.override.javajetinc 	WITHOUT_CLASSIFICATION	0.9999999739580948	WITHOUT_CLASSIFICATION	2.6041905148550754E-8	DEFECT
//ItemProvider/newChildDescriptorsAttributeFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999999344983974	WITHOUT_CLASSIFICATION	6.550160261433555E-8	DEFECT
/**   * Calls <code>validateXXX</code> for the corresponding classifier of the model.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9999638723482505	WITHOUT_CLASSIFICATION	3.6127651749576896E-5	DEFECT
//)	WITHOUT_CLASSIFICATION	0.9999724231512007	WITHOUT_CLASSIFICATION	2.757684879929304E-5	DEFECT
// (	WITHOUT_CLASSIFICATION	0.999998070673608	WITHOUT_CLASSIFICATION	1.9293263920463364E-6	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9990389862656467	WITHOUT_CLASSIFICATION	9.610137343533806E-4	DEFECT
//GenModelSwitch	WITHOUT_CLASSIFICATION	0.9999899922325147	WITHOUT_CLASSIFICATION	1.000776748525117E-5	DEFECT
//GenModelAdapterFactory	WITHOUT_CLASSIFICATION	0.9999943067347549	WITHOUT_CLASSIFICATION	5.693265245020842E-6	DEFECT
/**   * The switch that delegates to the <code>createXXX</code> methods.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9999999008203482	WITHOUT_CLASSIFICATION	9.917965187179749E-8	DEFECT
//GenModelValidator	WITHOUT_CLASSIFICATION	0.999997081806517	WITHOUT_CLASSIFICATION	2.9181934829221077E-6	DEFECT
//ItemProvider/newChildDescriptorsReferenceDelegatedFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999999878438744	WITHOUT_CLASSIFICATION	1.215612554529077E-8	DEFECT
//ItemProvider/getText.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999984748236506	WITHOUT_CLASSIFICATION	1.5251763494203258E-6	DEFECT
//ItemProvider/addPropertyDescriptor.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999993709247781	WITHOUT_CLASSIFICATION	6.290752217939087E-7	DEFECT
//ItemProvider/newChildDescriptorsAttributeDelegatedFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999999837879016	WITHOUT_CLASSIFICATION	1.6212098398136694E-8	DEFECT
//ItemProvider/newChildDescriptorsReferenceDelegatedFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999999878438744	WITHOUT_CLASSIFICATION	1.215612554529077E-8	DEFECT
//ItemProvider/newChildDescriptorsReferenceFeature.override.javajetinc 	WITHOUT_CLASSIFICATION	0.9999999739580948	WITHOUT_CLASSIFICATION	2.6041905148550754E-8	DEFECT
//ItemProvider/newChildDescriptorsAttributeFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999999344983974	WITHOUT_CLASSIFICATION	6.550160261433555E-8	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9999974839082467	WITHOUT_CLASSIFICATION	2.5160917533349325E-6	DEFECT
// return eProperties;	WITHOUT_CLASSIFICATION	0.9999999337805316	WITHOUT_CLASSIFICATION	6.621946838025402E-8	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9999974839082467	WITHOUT_CLASSIFICATION	2.5160917533349325E-6	DEFECT
//Class/reflectiveDelegation.override.javajetinc	WITHOUT_CLASSIFICATION	0.999999851135959	WITHOUT_CLASSIFICATION	1.48864040985773E-7	DEFECT
//Editor/addItemproviderFactories.override.javajetinc"	WITHOUT_CLASSIFICATION	0.9999998598998264	WITHOUT_CLASSIFICATION	1.401001735836447E-7	DEFECT
//ResourceFactoryClass/createResource.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999999900165171	WITHOUT_CLASSIFICATION	9.983482905277483E-9	DEFECT
//Class/declaredFieldGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999999968987124	WITHOUT_CLASSIFICATION	3.1012876369944702E-9	DEFECT
///////////////////////	WITHOUT_CLASSIFICATION	0.9999927697301552	WITHOUT_CLASSIFICATION	7.230269844820917E-6	DEFECT
///////////////////////	WITHOUT_CLASSIFICATION	0.9999927697301552	WITHOUT_CLASSIFICATION	7.230269844820917E-6	DEFECT
//volatile	WITHOUT_CLASSIFICATION	0.9999975442326162	WITHOUT_CLASSIFICATION	2.4557673836804866E-6	DEFECT
//Class/getGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9999999134637836	WITHOUT_CLASSIFICATION	8.653621638547434E-8	DEFECT
//Class/getGenFeature.javadoc.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999999857821775	WITHOUT_CLASSIFICATION	1.421782250976387E-8	DEFECT
//Class/getGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999999773207363	WITHOUT_CLASSIFICATION	2.267926377634635E-8	DEFECT
//Class/getGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999999522509501	WITHOUT_CLASSIFICATION	4.7749049932743184E-8	DEFECT
//Class/basicGetGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9999999374564762	WITHOUT_CLASSIFICATION	6.254352375585964E-8	DEFECT
//Class/basicGetGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999999654896651	WITHOUT_CLASSIFICATION	3.4510334879558255E-8	DEFECT
//Class/basicGetGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999999836087003	WITHOUT_CLASSIFICATION	1.6391299584093043E-8	DEFECT
//Class/basicSetGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9999999437860742	WITHOUT_CLASSIFICATION	5.621392597584033E-8	DEFECT
//Class/basicSetGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999999689822178	WITHOUT_CLASSIFICATION	3.1017782310921254E-8	DEFECT
//Class/basicSetGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999999852675506	WITHOUT_CLASSIFICATION	1.473244937015531E-8	DEFECT
//Class/setGenFeature.javadoc.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999999929039911	WITHOUT_CLASSIFICATION	7.09600892098818E-9	DEFECT
//Class/setGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9999999456468734	WITHOUT_CLASSIFICATION	5.435312655863082E-8	DEFECT
//Class/setGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999999761688058	WITHOUT_CLASSIFICATION	2.3831194245794964E-8	DEFECT
//Class/setGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.999999988680949	WITHOUT_CLASSIFICATION	1.1319051046668746E-8	DEFECT
//Class/basicUnsetGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9999999723179105	WITHOUT_CLASSIFICATION	2.768208952737836E-8	DEFECT
//Class/basicUnsetGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999999845140835	WITHOUT_CLASSIFICATION	1.548591659050431E-8	DEFECT
//Class.basicUnsetGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999999953786801	WITHOUT_CLASSIFICATION	4.621319806672592E-9	DEFECT
//Class/unsetGenFeature.javadoc.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999999850617495	WITHOUT_CLASSIFICATION	1.4938250519923505E-8	DEFECT
//Class/unsetGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9999999103204696	WITHOUT_CLASSIFICATION	8.967953039490735E-8	DEFECT
//Class/unsetGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999999498314691	WITHOUT_CLASSIFICATION	5.0168530960482866E-8	DEFECT
//Class/unsetGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999999761715604	WITHOUT_CLASSIFICATION	2.3828439518117174E-8	DEFECT
//Class/isSetGenFeature.javadoc.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999999917241188	WITHOUT_CLASSIFICATION	8.275881090364204E-9	DEFECT
//Class/isSetGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9999999496291743	WITHOUT_CLASSIFICATION	5.037082562884229E-8	DEFECT
//Class/isSetGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999999722063301	WITHOUT_CLASSIFICATION	2.7793669859607324E-8	DEFECT
//Class/isSetGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999999867989005	WITHOUT_CLASSIFICATION	1.3201099589256299E-8	DEFECT
//Class/genOperation.javadoc.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999999192516688	WITHOUT_CLASSIFICATION	8.074833120590346E-8	DEFECT
//Class/genOperation.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9999996676696733	WITHOUT_CLASSIFICATION	3.323303266758338E-7	DEFECT
//Class/implementedGenOperation.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999998763887858	WITHOUT_CLASSIFICATION	1.236112141696329E-7	DEFECT
//Class/eUnset.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999999199818673	WITHOUT_CLASSIFICATION	8.001813260218658E-8	DEFECT
//datatype	WITHOUT_CLASSIFICATION	0.9999470426275114	WITHOUT_CLASSIFICATION	5.2957372488620936E-5	DEFECT
//Class/eIsSet.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999997959247993	WITHOUT_CLASSIFICATION	2.0407520066679952E-7	DEFECT
//TestCase/getGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9999999688943552	WITHOUT_CLASSIFICATION	3.110564477521897E-8	DEFECT
//TestCase/getGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999999863616925	WITHOUT_CLASSIFICATION	1.3638307490961768E-8	DEFECT
//TestCase/getGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999999935222426	WITHOUT_CLASSIFICATION	6.477757524949027E-9	DEFECT
//TestCase/setGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9999999808739625	WITHOUT_CLASSIFICATION	1.9126037485142995E-8	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.999999600561112	WITHOUT_CLASSIFICATION	3.994388879112048E-7	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9999974839082467	WITHOUT_CLASSIFICATION	2.5160917533349325E-6	DEFECT
//TestCase/setGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999999916141659	WITHOUT_CLASSIFICATION	8.385834160849805E-9	DEFECT
//TestCase/setGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999999960169985	WITHOUT_CLASSIFICATION	3.983001572930926E-9	DEFECT
//TestCase/unsetGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9999999677406503	WITHOUT_CLASSIFICATION	3.2259349805446614E-8	DEFECT
//TestCase/unsetGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999999819534722	WITHOUT_CLASSIFICATION	1.8046527913451442E-8	DEFECT
//TestCase/unsetGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999999914284796	WITHOUT_CLASSIFICATION	8.571520501249647E-9	DEFECT
//TestCase/isSetGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9999999821980204	WITHOUT_CLASSIFICATION	1.780197955482117E-8	DEFECT
//TestCase/isSetGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999999921947006	WITHOUT_CLASSIFICATION	7.80529936148752E-9	DEFECT
//TestCase/implementedGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999999927024837	WITHOUT_CLASSIFICATION	7.297516370450356E-9	DEFECT
//TestCase/genOperation.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9999998805430703	WITHOUT_CLASSIFICATION	1.194569296987222E-7	DEFECT
//TestCase/implementedGenOperation.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999999553398937	WITHOUT_CLASSIFICATION	4.46601063600235E-8	DEFECT
//TestCase/implementedGenOperation.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999999791673895	WITHOUT_CLASSIFICATION	2.0832610487685834E-8	DEFECT
/*   * Char buffer for HTML data   */	WITHOUT_CLASSIFICATION	0.9999998912369004	WITHOUT_CLASSIFICATION	1.0876309967052107E-7	DEFECT
// Match close.	WITHOUT_CLASSIFICATION	0.9999999909986595	WITHOUT_CLASSIFICATION	9.001340352644504E-9	DEFECT
// Continue processing dynamically as normal.	WITHOUT_CLASSIFICATION	0.9999977419073541	WITHOUT_CLASSIFICATION	2.2580926457845883E-6	DEFECT
// Ignore because we'll rethrow the original exception eventually.	WITHOUT_CLASSIFICATION	0.9999999734370234	WITHOUT_CLASSIFICATION	2.6562976619151054E-8	DEFECT
// pure obfuscated genius!	WITHOUT_CLASSIFICATION	0.9999999872329248	WITHOUT_CLASSIFICATION	1.2767075233345343E-8	DEFECT
// Read value until delimiter is found:	WITHOUT_CLASSIFICATION	0.9999874237648759	WITHOUT_CLASSIFICATION	1.2576235124010008E-5	DEFECT
// Take care of the quoting here.	WITHOUT_CLASSIFICATION	0.9999930926854497	WITHOUT_CLASSIFICATION	6.907314550274682E-6	DEFECT
// }	WITHOUT_CLASSIFICATION	0.9999968737632579	WITHOUT_CLASSIFICATION	3.1262367422214507E-6	DEFECT
// (	WITHOUT_CLASSIFICATION	0.999998070673608	WITHOUT_CLASSIFICATION	1.9293263920463364E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.999999826515885	WITHOUT_CLASSIFICATION	1.7348411491497847E-7	DEFECT
// Close NCSA like attributes "->"	WITHOUT_CLASSIFICATION	0.9999999433271037	WITHOUT_CLASSIFICATION	5.667289633500246E-8	DEFECT
// Close variable like attributes "%>"	WITHOUT_CLASSIFICATION	0.9999999934067701	WITHOUT_CLASSIFICATION	6.593229798885958E-9	DEFECT
// XMLesque Close tags	WITHOUT_CLASSIFICATION	0.9999958679465173	WITHOUT_CLASSIFICATION	4.132053482777304E-6	DEFECT
// Reached EOF:	WITHOUT_CLASSIFICATION	0.999997785795	WITHOUT_CLASSIFICATION	2.2142050000669E-6	DEFECT
// Ignore the version	WITHOUT_CLASSIFICATION	0.9999999151053084	WITHOUT_CLASSIFICATION	8.489469159602038E-8	DEFECT
//dumpNodeContents(node);	WITHOUT_CLASSIFICATION	0.999999268594617	WITHOUT_CLASSIFICATION	7.314053830326447E-7	DEFECT
// dumpNodeContents(node);	WITHOUT_CLASSIFICATION	0.9999998595327313	WITHOUT_CLASSIFICATION	1.4046726869362816E-7	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999998254076871	WITHOUT_CLASSIFICATION	1.7459231293011581E-7	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999998254076871	WITHOUT_CLASSIFICATION	1.7459231293011581E-7	DEFECT
//)	WITHOUT_CLASSIFICATION	0.9999724231512007	WITHOUT_CLASSIFICATION	2.757684879929304E-5	DEFECT
/////////////////////////////////  PULL  /////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999970508562254	WITHOUT_CLASSIFICATION	2.9491437745893164E-6	DEFECT
/*    // PULL Name    //    targetPackage.setName(sourcePackage.getName());*/	WITHOUT_CLASSIFICATION	0.9999999977839407	WITHOUT_CLASSIFICATION	2.2160593944987866E-9	DEFECT
/////////////////////////////////  PUSH  /////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999979476458098	WITHOUT_CLASSIFICATION	2.0523541901588785E-6	DEFECT
/////////////////////////////////  SWEEP  /////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999982216515919	WITHOUT_CLASSIFICATION	1.778348408035072E-6	DEFECT
/////////////////////////////////  SORT  /////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999978970674048	WITHOUT_CLASSIFICATION	2.1029325952137115E-6	DEFECT
/////////////////////////////////  CLONE AND MAP  /////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999985323744063	WITHOUT_CLASSIFICATION	1.467625593668631E-6	DEFECT
// System.err.println("Warning: Cannot clone '" + sourceNode.getContents() + "'");	WITHOUT_CLASSIFICATION	0.9999999530505005	WITHOUT_CLASSIFICATION	4.694949957590256E-8	DEFECT
// apply target parent pattern first	WITHOUT_CLASSIFICATION	0.9999998021718447	WITHOUT_CLASSIFICATION	1.9782815537482417E-7	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999998254076871	WITHOUT_CLASSIFICATION	1.7459231293011581E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.999999826515885	WITHOUT_CLASSIFICATION	1.7348411491497847E-7	DEFECT
/////////////////////////////////  HEADLESS INVOCATION  /////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999991582918263	WITHOUT_CLASSIFICATION	8.417081736710067E-7	DEFECT
// Ignore the exception.	WITHOUT_CLASSIFICATION	0.999999880423558	WITHOUT_CLASSIFICATION	1.1957644199480692E-7	DEFECT
// use new node from now on	WITHOUT_CLASSIFICATION	0.9999994086685797	WITHOUT_CLASSIFICATION	5.913314202002924E-7	DEFECT
// redo the markup since nodes changed now	WITHOUT_CLASSIFICATION	0.9999999879552135	WITHOUT_CLASSIFICATION	1.204478641511258E-8	DEFECT
// super is called on converted node	WITHOUT_CLASSIFICATION	0.9999967335542684	WITHOUT_CLASSIFICATION	3.266445731594772E-6	DEFECT
// Back up over the whitespace.	WITHOUT_CLASSIFICATION	0.9999998561553946	WITHOUT_CLASSIFICATION	1.4384460551705194E-7	DEFECT
// target method is NOT addSuperInterface	WITHOUT_CLASSIFICATION	0.9999999973046007	WITHOUT_CLASSIFICATION	2.6953994397884854E-9	DEFECT
// if the parent is not in target, there is no point on checking the child	WITHOUT_CLASSIFICATION	0.9999992144193985	WITHOUT_CLASSIFICATION	7.85580601589694E-7	DEFECT
// by default nodes are marked up	WITHOUT_CLASSIFICATION	0.9999996769330489	WITHOUT_CLASSIFICATION	3.230669510608737E-7	DEFECT
// ignore rules for nodes of different class	WITHOUT_CLASSIFICATION	0.999996656051175	WITHOUT_CLASSIFICATION	3.3439488248626026E-6	DEFECT
//)	WITHOUT_CLASSIFICATION	0.9999724231512007	WITHOUT_CLASSIFICATION	2.757684879929304E-5	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999998254076871	WITHOUT_CLASSIFICATION	1.7459231293011581E-7	DEFECT
// use new node from now on	WITHOUT_CLASSIFICATION	0.9999994086685797	WITHOUT_CLASSIFICATION	5.913314202002924E-7	DEFECT
// redo the markup since nodes changed now	WITHOUT_CLASSIFICATION	0.9999999879552135	WITHOUT_CLASSIFICATION	1.204478641511258E-8	DEFECT
// super is called on converted node	WITHOUT_CLASSIFICATION	0.9999967335542684	WITHOUT_CLASSIFICATION	3.266445731594772E-6	DEFECT
// Command line execution methods	WITHOUT_CLASSIFICATION	0.9999988049577812	WITHOUT_CLASSIFICATION	1.1950422187733202E-6	DEFECT
// do not crash when control model is not set	WITHOUT_CLASSIFICATION	0.9999454617464016	WITHOUT_CLASSIFICATION	5.453825359828353E-5	DEFECT
// Subclasses may override this method	WITHOUT_CLASSIFICATION	0.9999977666683926	WITHOUT_CLASSIFICATION	2.233331607317072E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode#addChild(org.eclipse.emf.codegen.merge.java.facade.JNode)   */	WITHOUT_CLASSIFICATION	0.9999999999730679	WITHOUT_CLASSIFICATION	2.693202625001227E-11	DEFECT
// Empty	WITHOUT_CLASSIFICATION	0.9999908557944834	WITHOUT_CLASSIFICATION	9.144205516559578E-6	DEFECT
// Empty	WITHOUT_CLASSIFICATION	0.9999908557944834	WITHOUT_CLASSIFICATION	9.144205516559578E-6	DEFECT
// Empty	WITHOUT_CLASSIFICATION	0.9999908557944834	WITHOUT_CLASSIFICATION	9.144205516559578E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.999999826515885	WITHOUT_CLASSIFICATION	1.7348411491497847E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.999999826515885	WITHOUT_CLASSIFICATION	1.7348411491497847E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.999999826515885	WITHOUT_CLASSIFICATION	1.7348411491497847E-7	DEFECT
// Not instantiable	WITHOUT_CLASSIFICATION	0.9999996648939634	WITHOUT_CLASSIFICATION	3.351060365523516E-7	DEFECT
// replace or append	WITHOUT_CLASSIFICATION	0.9999989070706204	WITHOUT_CLASSIFICATION	1.0929293795534775E-6	DEFECT
// enable tracking for nodes that have string content	WITHOUT_CLASSIFICATION	0.9999973832649715	WITHOUT_CLASSIFICATION	2.616735028633194E-6	DEFECT
// enable tracking for commented out nodes	WITHOUT_CLASSIFICATION	0.9999998093465007	WITHOUT_CLASSIFICATION	1.906534992373977E-7	DEFECT
// apply header	WITHOUT_CLASSIFICATION	0.9999995602894614	WITHOUT_CLASSIFICATION	4.397105386200234E-7	DEFECT
// skip whitespace, up to the end of the line	WITHOUT_CLASSIFICATION	0.9999999922788144	WITHOUT_CLASSIFICATION	7.72118565336039E-9	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.999999826515885	WITHOUT_CLASSIFICATION	1.7348411491497847E-7	DEFECT
// this should never happen	WITHOUT_CLASSIFICATION	0.9999902427376153	WITHOUT_CLASSIFICATION	9.757262384747071E-6	DEFECT
// revert all current edits for this node	WITHOUT_CLASSIFICATION	0.9999993447641591	WITHOUT_CLASSIFICATION	6.552358409290583E-7	DEFECT
// log the error, ignore the change and continue	WITHOUT_CLASSIFICATION	0.9999999969110243	WITHOUT_CLASSIFICATION	3.0889756583082857E-9	DEFECT
// comment out all lines of the node itself, from firstLine to last line	WITHOUT_CLASSIFICATION	0.9999999596583361	WITHOUT_CLASSIFICATION	4.034166392466156E-8	DEFECT
// if there is anything after the node on the same line, insert line break	WITHOUT_CLASSIFICATION	0.9999965024651851	WITHOUT_CLASSIFICATION	3.4975348148822736E-6	DEFECT
// reset text edits; since this node is processed successfully, there is no need to revert these changes	WITHOUT_CLASSIFICATION	0.9999999994260973	WITHOUT_CLASSIFICATION	5.739027785430522E-10	DEFECT
// this line has been commented out, return next line number	WITHOUT_CLASSIFICATION	0.9999492579434011	WITHOUT_CLASSIFICATION	5.0742056598808305E-5	DEFECT
// return the line number of the start of the node	WITHOUT_CLASSIFICATION	0.9999999937841405	WITHOUT_CLASSIFICATION	6.215859482477075E-9	DEFECT
// handle the case when there is a replace edit that covers these lines	WITHOUT_CLASSIFICATION	0.9999999472792921	WITHOUT_CLASSIFICATION	5.2720707913250114E-8	DEFECT
// skip all lines that replace edit covers	WITHOUT_CLASSIFICATION	0.9999988462405954	WITHOUT_CLASSIFICATION	1.1537594045651482E-6	DEFECT
// should not happen, re-throw exception	WITHOUT_CLASSIFICATION	0.9994260315668736	WITHOUT_CLASSIFICATION	5.739684331264674E-4	DEFECT
// make sure that dummy edit is not in the tree	WITHOUT_CLASSIFICATION	0.9992545574932283	WITHOUT_CLASSIFICATION	7.454425067716947E-4	DEFECT
// assume length will grow by 10% (average line length is 20 characters)	WITHOUT_CLASSIFICATION	0.9999991806136235	WITHOUT_CLASSIFICATION	8.193863765988435E-7	DEFECT
// next position is checked as well	WITHOUT_CLASSIFICATION	0.9999975916703453	WITHOUT_CLASSIFICATION	2.4083296546862776E-6	DEFECT
// char at currentPos is copied as well	WITHOUT_CLASSIFICATION	0.9999999191173963	WITHOUT_CLASSIFICATION	8.088260372071402E-8	DEFECT
// lastPos, currentPos points at the next chars that will be copied later	WITHOUT_CLASSIFICATION	0.9999989716914285	WITHOUT_CLASSIFICATION	1.0283085715052283E-6	DEFECT
// copy last piece if any	WITHOUT_CLASSIFICATION	0.9999986513512402	WITHOUT_CLASSIFICATION	1.3486487596665445E-6	DEFECT
// if needed, comment out a comma of the previous enum constant	WITHOUT_CLASSIFICATION	0.9999999965868296	WITHOUT_CLASSIFICATION	3.413170408237323E-9	DEFECT
// if there is anything before the node on the same line, create line break and comment out the first line of the node	WITHOUT_CLASSIFICATION	0.9999999891867466	WITHOUT_CLASSIFICATION	1.081325345234578E-8	DEFECT
// there is only whitespace on this line - no need for line break	WITHOUT_CLASSIFICATION	0.9999935687314259	WITHOUT_CLASSIFICATION	6.4312685741815E-6	DEFECT
// for enum constants, insert line break after the comma if there is anything after the comma	WITHOUT_CLASSIFICATION	0.9999925182585415	WITHOUT_CLASSIFICATION	7.481741458420107E-6	DEFECT
// if there is any content after the node on the same line, insert line break (to prevent commenting out extra content)	WITHOUT_CLASSIFICATION	0.9999997332513159	WITHOUT_CLASSIFICATION	2.6674868414205555E-7	DEFECT
// if previous node is not commented out, but all the following nodes are, comment out a comma (constant separator)	WITHOUT_CLASSIFICATION	0.9999996612071524	WITHOUT_CLASSIFICATION	3.38792847573075E-7	DEFECT
// if previous node is not commented out, but all following are	WITHOUT_CLASSIFICATION	0.9999991018580672	WITHOUT_CLASSIFICATION	8.981419327718441E-7	DEFECT
// insert new line at the end of previous constant	WITHOUT_CLASSIFICATION	0.9999991224846736	WITHOUT_CLASSIFICATION	8.775153264316034E-7	DEFECT
// if comma is on a line by itself, comment it out but do not insert the line break	WITHOUT_CLASSIFICATION	0.999998665073258	WITHOUT_CLASSIFICATION	1.3349267420156946E-6	DEFECT
// delete variable fragment from old declaration	WITHOUT_CLASSIFICATION	0.9999999583098048	WITHOUT_CLASSIFICATION	4.169019514894086E-8	DEFECT
// do not insert line break if there is only whitespace after comma	WITHOUT_CLASSIFICATION	0.9999363757802966	WITHOUT_CLASSIFICATION	6.362421970339849E-5	DEFECT
// there is only whitespace after enum constant on the same line - do not add line breaks	WITHOUT_CLASSIFICATION	0.9999897319945906	WITHOUT_CLASSIFICATION	1.0268005409371528E-5	DEFECT
//listRewrite.remove((ASTNode)modifier, null);	WITHOUT_CLASSIFICATION	0.9999999219300357	WITHOUT_CLASSIFICATION	7.806996431738412E-8	DEFECT
// add added super interfaces to the array	WITHOUT_CLASSIFICATION	0.9999995869647348	WITHOUT_CLASSIFICATION	4.130352651549609E-7	DEFECT
// this could be method body, for example	WITHOUT_CLASSIFICATION	0.9999650645923647	WITHOUT_CLASSIFICATION	3.493540763535103E-5	DEFECT
// for field declarations use variable declaration fragments instead	WITHOUT_CLASSIFICATION	0.9999999997484855	WITHOUT_CLASSIFICATION	2.515145383897877E-10	DEFECT
// for all nodes but some use default extended range	WITHOUT_CLASSIFICATION	0.999999843997129	WITHOUT_CLASSIFICATION	1.5600287088876737E-7	DEFECT
// remove all existing modifiers	WITHOUT_CLASSIFICATION	0.9999997552492158	WITHOUT_CLASSIFICATION	2.4475078425501754E-7	DEFECT
// Fill 4 of value (byte) -87 // Fill 7 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 9 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 18 of value (byte) 33 // Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999440357745683	WITHOUT_CLASSIFICATION	5.596422543167641E-5	DEFECT
// append extra dimensions if any	WITHOUT_CLASSIFICATION	0.9999672748644571	WITHOUT_CLASSIFICATION	3.272513554280896E-5	DEFECT
// Fill 4 of value (byte) -87 // Fill 7 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 9 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 18 of value (byte) 33 // Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999440357745683	WITHOUT_CLASSIFICATION	5.596422543167641E-5	DEFECT
// create new modifiers and add to rewrite	WITHOUT_CLASSIFICATION	0.999999971616234	WITHOUT_CLASSIFICATION	2.8383766048065863E-8	DEFECT
// parse	WITHOUT_CLASSIFICATION	0.9999989802420859	WITHOUT_CLASSIFICATION	1.0197579141495544E-6	DEFECT
//	WITHOUT_CLASSIFICATION	0.999986168788491	WITHOUT_CLASSIFICATION	1.3831211508944887E-5	DEFECT
// specify the exact parent of annotations	WITHOUT_CLASSIFICATION	0.9999998880863501	WITHOUT_CLASSIFICATION	1.119136498640245E-7	DEFECT
// set source	WITHOUT_CLASSIFICATION	0.9999999752605693	WITHOUT_CLASSIFICATION	2.4739430726985438E-8	DEFECT
// create rewriter to record changes	WITHOUT_CLASSIFICATION	0.9999999924640042	WITHOUT_CLASSIFICATION	7.535995718421849E-9	DEFECT
// keep comments between nodes when removing or moving nodes	WITHOUT_CLASSIFICATION	0.9999986697157606	WITHOUT_CLASSIFICATION	1.3302842393833566E-6	DEFECT
// set properties	WITHOUT_CLASSIFICATION	0.9999999188582094	WITHOUT_CLASSIFICATION	8.114179062662984E-8	DEFECT
// create JNode and set properties	WITHOUT_CLASSIFICATION	0.9999999453379875	WITHOUT_CLASSIFICATION	5.4662012462472036E-8	DEFECT
// Set of options that we want to copy from the current definition        	WITHOUT_CLASSIFICATION	0.9999998464053399	WITHOUT_CLASSIFICATION	1.53594660064902E-7	DEFECT
// Set of options that we want to control	WITHOUT_CLASSIFICATION	0.9999997899963092	WITHOUT_CLASSIFICATION	2.100036908308272E-7	DEFECT
// separate fields with an empty line	WITHOUT_CLASSIFICATION	0.9999992951837948	WITHOUT_CLASSIFICATION	7.048162051630665E-7	DEFECT
// make all enum constants to be on separate lines	WITHOUT_CLASSIFICATION	0.9999992351601982	WITHOUT_CLASSIFICATION	7.648398018006574E-7	DEFECT
// handle field declarations separately	WITHOUT_CLASSIFICATION	0.9999999791438425	WITHOUT_CLASSIFICATION	2.0856157476039215E-8	DEFECT
// create new node and replace it all by original contents	WITHOUT_CLASSIFICATION	0.9999994925327539	WITHOUT_CLASSIFICATION	5.074672461597397E-7	DEFECT
// set rewriter on the new node	WITHOUT_CLASSIFICATION	0.9999994569649553	WITHOUT_CLASSIFICATION	5.430350447794557E-7	DEFECT
// if there are multiple variables in the same field declaration, create declaration with only 1 variable	WITHOUT_CLASSIFICATION	0.9999999962266304	WITHOUT_CLASSIFICATION	3.773369528021875E-9	DEFECT
// rewriter is required for set methods	WITHOUT_CLASSIFICATION	0.9999978198470372	WITHOUT_CLASSIFICATION	2.180152962837278E-6	DEFECT
// set comment and initializer as strings	WITHOUT_CLASSIFICATION	0.9999998814814264	WITHOUT_CLASSIFICATION	1.1851857365030873E-7	DEFECT
// set annotation contents	WITHOUT_CLASSIFICATION	0.9999999442239362	WITHOUT_CLASSIFICATION	5.577606379585769E-8	DEFECT
// skip nodes in hierarchy that can not be converted to JNode (i.e. VariableDeclarationFragment)	WITHOUT_CLASSIFICATION	0.9999999736219909	WITHOUT_CLASSIFICATION	2.6378009119113624E-8	DEFECT
// get rewriter	WITHOUT_CLASSIFICATION	0.9999998231840077	WITHOUT_CLASSIFICATION	1.7681599226551403E-7	DEFECT
// update the wrapped object map	WITHOUT_CLASSIFICATION	0.9999980335692497	WITHOUT_CLASSIFICATION	1.966430750261375E-6	DEFECT
// range to look for comments	WITHOUT_CLASSIFICATION	0.9999998451334363	WITHOUT_CLASSIFICATION	1.5486656368841452E-7	DEFECT
// get the end position of the range for the previous node	WITHOUT_CLASSIFICATION	0.9999998282327356	WITHOUT_CLASSIFICATION	1.717672644552919E-7	DEFECT
//previousNode.getStartPosition() + previousNode.getLength();	WITHOUT_CLASSIFICATION	0.9999999001068172	WITHOUT_CLASSIFICATION	9.989318284025599E-8	DEFECT
// if there is an element with end position <= rangeEndPos	WITHOUT_CLASSIFICATION	0.9999999872157499	WITHOUT_CLASSIFICATION	1.2784250132589362E-8	DEFECT
// the previous element must have end position <= rangeEndPos	WITHOUT_CLASSIFICATION	0.999999811651389	WITHOUT_CLASSIFICATION	1.883486111056355E-7	DEFECT
// else - there is a comment that ends exactly at rangeEndPos    	WITHOUT_CLASSIFICATION	0.9999948168101122	WITHOUT_CLASSIFICATION	5.183189887780799E-6	DEFECT
// if there is a comment with start position > rangeStartPos	WITHOUT_CLASSIFICATION	0.999999969641145	WITHOUT_CLASSIFICATION	3.035885505934722E-8	DEFECT
// else - there is a comment that starts exactly at rangeStartPos	WITHOUT_CLASSIFICATION	0.9999993925390751	WITHOUT_CLASSIFICATION	6.074609248386442E-7	DEFECT
// find start position of farthest preceding comment	WITHOUT_CLASSIFICATION	0.9999538902160829	WITHOUT_CLASSIFICATION	4.610978391707674E-5	DEFECT
// check if there is just whitespace between position and start of the comment	WITHOUT_CLASSIFICATION	0.9999999995158764	WITHOUT_CLASSIFICATION	4.841235877719426E-10	DEFECT
// extend to include the comment at the same line as the position 	WITHOUT_CLASSIFICATION	0.9999886963279789	WITHOUT_CLASSIFICATION	1.1303672021168688E-5	DEFECT
// extend range backward	WITHOUT_CLASSIFICATION	0.9999995925259023	WITHOUT_CLASSIFICATION	4.0747409770965174E-7	DEFECT
// extend range forward	WITHOUT_CLASSIFICATION	0.999999785319147	WITHOUT_CLASSIFICATION	2.1468085286979138E-7	DEFECT
// add trailing whitespace	WITHOUT_CLASSIFICATION	0.999999991504361	WITHOUT_CLASSIFICATION	8.49563890236271E-9	DEFECT
// increments the position to add the white spaces	WITHOUT_CLASSIFICATION	0.999999390709824	WITHOUT_CLASSIFICATION	6.092901759976924E-7	DEFECT
// for all nodes but some use default extended range	WITHOUT_CLASSIFICATION	0.999999843997129	WITHOUT_CLASSIFICATION	1.5600287088876737E-7	DEFECT
// include line comments following end of the nodes into the range	WITHOUT_CLASSIFICATION	0.9999999617320642	WITHOUT_CLASSIFICATION	3.826793578891763E-8	DEFECT
// add leading comments	WITHOUT_CLASSIFICATION	0.9999996405541127	WITHOUT_CLASSIFICATION	3.594458872403952E-7	DEFECT
// add trailing comments if necessary	WITHOUT_CLASSIFICATION	0.999999709677846	WITHOUT_CLASSIFICATION	2.9032215393811244E-7	DEFECT
// insert new declaration before this one	WITHOUT_CLASSIFICATION	0.9999999487169604	WITHOUT_CLASSIFICATION	5.1283039574477226E-8	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.999999600561112	WITHOUT_CLASSIFICATION	3.994388879112048E-7	DEFECT
// append extra dimensions if any	WITHOUT_CLASSIFICATION	0.9999672748644571	WITHOUT_CLASSIFICATION	3.272513554280896E-5	DEFECT
// default implementation does nothing	WITHOUT_CLASSIFICATION	0.9999945402316813	WITHOUT_CLASSIFICATION	5.459768318606448E-6	DEFECT
// disable commenting out	WITHOUT_CLASSIFICATION	0.9999986625627357	WITHOUT_CLASSIFICATION	1.337437264332211E-6	DEFECT
// enable commenting out	WITHOUT_CLASSIFICATION	0.999999838247779	WITHOUT_CLASSIFICATION	1.6175222090520445E-7	DEFECT
// mark the node as moved if node has been removed      	WITHOUT_CLASSIFICATION	0.9999960010405765	WITHOUT_CLASSIFICATION	3.998959423496467E-6	DEFECT
// if are dealing with original, not cloned node	WITHOUT_CLASSIFICATION	0.9999999647250017	WITHOUT_CLASSIFICATION	3.527499834961186E-8	DEFECT
// mark the node to be removed	WITHOUT_CLASSIFICATION	0.9999966961422556	WITHOUT_CLASSIFICATION	3.3038577444432408E-6	DEFECT
// assume that the node is being moved (to allow insertion after)	WITHOUT_CLASSIFICATION	0.9999998222438544	WITHOUT_CLASSIFICATION	1.7775614549573531E-7	DEFECT
// remove the node	WITHOUT_CLASSIFICATION	0.9999982098352586	WITHOUT_CLASSIFICATION	1.790164741424706E-6	DEFECT
// insert new values	WITHOUT_CLASSIFICATION	0.9999999455566269	WITHOUT_CLASSIFICATION	5.444337315269526E-8	DEFECT
// stringValue not null, nodeValue is null	WITHOUT_CLASSIFICATION	0.9998909292441693	WITHOUT_CLASSIFICATION	1.0907075583057266E-4	DEFECT
// always returns original value	WITHOUT_CLASSIFICATION	0.9999993286490955	WITHOUT_CLASSIFICATION	6.71350904520347E-7	DEFECT
// append extra dimensions since they are not stored in Type object	WITHOUT_CLASSIFICATION	0.9999936691281474	WITHOUT_CLASSIFICATION	6.330871852575681E-6	DEFECT
// create map of field names to fields	WITHOUT_CLASSIFICATION	0.9999993365468597	WITHOUT_CLASSIFICATION	6.634531402832227E-7	DEFECT
// move all children to the enum, converting some fields to constants	WITHOUT_CLASSIFICATION	0.9999994717015206	WITHOUT_CLASSIFICATION	5.282984794480132E-7	DEFECT
// remove type, insert enum	WITHOUT_CLASSIFICATION	0.9999927493847891	WITHOUT_CLASSIFICATION	7.250615210850848E-6	DEFECT
// convert only public static final fields	WITHOUT_CLASSIFICATION	0.9999999913112586	WITHOUT_CLASSIFICATION	8.68874130752419E-9	DEFECT
// convert only fields of the same type as parent	WITHOUT_CLASSIFICATION	0.9999914654212019	WITHOUT_CLASSIFICATION	8.534578798068674E-6	DEFECT
// set arguments and body	WITHOUT_CLASSIFICATION	0.999999958830682	WITHOUT_CLASSIFICATION	4.1169317885840015E-8	DEFECT
// move annotations	WITHOUT_CLASSIFICATION	0.9999990952810321	WITHOUT_CLASSIFICATION	9.04718967860615E-7	DEFECT
// unable to set arguments or body	WITHOUT_CLASSIFICATION	0.9999999765884426	WITHOUT_CLASSIFICATION	2.341155740272137E-8	DEFECT
// update the wrapped object	WITHOUT_CLASSIFICATION	0.9999994526231303	WITHOUT_CLASSIFICATION	5.473768696741353E-7	DEFECT
// move annotations	WITHOUT_CLASSIFICATION	0.9999990952810321	WITHOUT_CLASSIFICATION	9.04718967860615E-7	DEFECT
// convert enum constants and add to list of converted constants	WITHOUT_CLASSIFICATION	0.9999999918278494	WITHOUT_CLASSIFICATION	8.17215062654045E-9	DEFECT
// move the node	WITHOUT_CLASSIFICATION	0.999998614379079	WITHOUT_CLASSIFICATION	1.385620920929758E-6	DEFECT
// insert nodeToInsert after targetNode	WITHOUT_CLASSIFICATION	0.9999999817772391	WITHOUT_CLASSIFICATION	1.8222760856546828E-8	DEFECT
// replace type by enum	WITHOUT_CLASSIFICATION	0.9999997120410755	WITHOUT_CLASSIFICATION	2.879589244748883E-7	DEFECT
// create field declaration with 1 variable declaration fragment	WITHOUT_CLASSIFICATION	0.9999999983501859	WITHOUT_CLASSIFICATION	1.649814030697939E-9	DEFECT
// set the type to create	WITHOUT_CLASSIFICATION	0.9999999584197421	WITHOUT_CLASSIFICATION	4.1580257906272914E-8	DEFECT
// set arguments	WITHOUT_CLASSIFICATION	0.9999999970155062	WITHOUT_CLASSIFICATION	2.9844938822219434E-9	DEFECT
// replace some arguments by another field names (constants)	WITHOUT_CLASSIFICATION	0.9999999668872476	WITHOUT_CLASSIFICATION	3.311275240158338E-8	DEFECT
// update last field that is used	WITHOUT_CLASSIFICATION	0.9999997843551536	WITHOUT_CLASSIFICATION	2.1564484656021776E-7	DEFECT
// set the arguments to the constructor	WITHOUT_CLASSIFICATION	0.9999999970957685	WITHOUT_CLASSIFICATION	2.9042314180350438E-9	DEFECT
// set the body	WITHOUT_CLASSIFICATION	0.9999986771482385	WITHOUT_CLASSIFICATION	1.3228517615191339E-6	DEFECT
// set the whole initializer	WITHOUT_CLASSIFICATION	0.9999999811396199	WITHOUT_CLASSIFICATION	1.886038010871379E-8	DEFECT
// return the whole declaration contents (not just variableDeclarationFragment)	WITHOUT_CLASSIFICATION	0.9999999998624244	WITHOUT_CLASSIFICATION	1.3757560152982543E-10	DEFECT
// check number of fragments	WITHOUT_CLASSIFICATION	0.9999999950323988	WITHOUT_CLASSIFICATION	4.9676011999044E-9	DEFECT
// create a copy of declaration	WITHOUT_CLASSIFICATION	0.9999992610482022	WITHOUT_CLASSIFICATION	7.389517977665048E-7	DEFECT
// new declaration will not have fragments until performSplit() is called	WITHOUT_CLASSIFICATION	0.9999979684792929	WITHOUT_CLASSIFICATION	2.031520707032609E-6	DEFECT
// set rewritten node to be the original	WITHOUT_CLASSIFICATION	0.9999994387879235	WITHOUT_CLASSIFICATION	5.612120764957821E-7	DEFECT
// perform split if there is more than 1 fragment	WITHOUT_CLASSIFICATION	0.9999999621909292	WITHOUT_CLASSIFICATION	3.7809070824183843E-8	DEFECT
// set javadoc	WITHOUT_CLASSIFICATION	0.999999974282385	WITHOUT_CLASSIFICATION	2.571761511105521E-8	DEFECT
// set initializer	WITHOUT_CLASSIFICATION	0.9999999770612019	WITHOUT_CLASSIFICATION	2.2938798136022423E-8	DEFECT
// set annotations contents	WITHOUT_CLASSIFICATION	0.9999998460127127	WITHOUT_CLASSIFICATION	1.5398728723846148E-7	DEFECT
// }	WITHOUT_CLASSIFICATION	0.9999968737632579	WITHOUT_CLASSIFICATION	3.1262367422214507E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.999999826515885	WITHOUT_CLASSIFICATION	1.7348411491497847E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.999999826515885	WITHOUT_CLASSIFICATION	1.7348411491497847E-7	DEFECT
// }	WITHOUT_CLASSIFICATION	0.9999968737632579	WITHOUT_CLASSIFICATION	3.1262367422214507E-6	DEFECT
// generateColor();	WITHOUT_CLASSIFICATION	0.9999990831823814	WITHOUT_CLASSIFICATION	9.168176186913331E-7	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999998254076871	WITHOUT_CLASSIFICATION	1.7459231293011581E-7	DEFECT
// container specification group	WITHOUT_CLASSIFICATION	0.9999999403116739	WITHOUT_CLASSIFICATION	5.968832608256899E-8	DEFECT
// New Template Container Label	WITHOUT_CLASSIFICATION	0.999999997725258	WITHOUT_CLASSIFICATION	2.2747418486558072E-9	DEFECT
// New Template Container Label	WITHOUT_CLASSIFICATION	0.999999997725258	WITHOUT_CLASSIFICATION	2.2747418486558072E-9	DEFECT
// New Template Container Entryfield	WITHOUT_CLASSIFICATION	0.9999999969447758	WITHOUT_CLASSIFICATION	3.0552242172350064E-9	DEFECT
// jetNature.setTemplateContainers(newTemplateContainers);	WITHOUT_CLASSIFICATION	0.9999999988489339	WITHOUT_CLASSIFICATION	1.1510661876959838E-9	DEFECT
// jetNature.setJavaSourceContainer(newJavaSourceContainer);	WITHOUT_CLASSIFICATION	0.9999999989539756	WITHOUT_CLASSIFICATION	1.0460244170931419E-9	DEFECT
// will point at the character after 0 to 3 octal digits	WITHOUT_CLASSIFICATION	0.9999999777270704	WITHOUT_CLASSIFICATION	2.227292953714656E-8	DEFECT
/*   * @since 2.4   */	WITHOUT_CLASSIFICATION	0.9999998562533123	WITHOUT_CLASSIFICATION	1.4374668767598933E-7	DEFECT
// the for loop's condition finds the separator 	WITHOUT_CLASSIFICATION	0.9999729311506906	WITHOUT_CLASSIFICATION	2.706884930933812E-5	DEFECT
// Assume that we aren't running.	WITHOUT_CLASSIFICATION	0.9999972386991691	WITHOUT_CLASSIFICATION	2.7613008309410976E-6	DEFECT
// Assume that it's not available.	WITHOUT_CLASSIFICATION	0.9999992428690442	WITHOUT_CLASSIFICATION	7.571309557844564E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999476785159	WITHOUT_CLASSIFICATION	5.232148409313304E-8	DEFECT
/*     * Javadoc copied from interface.     */	WITHOUT_CLASSIFICATION	0.9999999608670076	WITHOUT_CLASSIFICATION	3.913299230410666E-8	DEFECT
/*     * Javadoc copied from interface.     */	WITHOUT_CLASSIFICATION	0.9999999608670076	WITHOUT_CLASSIFICATION	3.913299230410666E-8	DEFECT
// System.err.println("Logged throwable: --------------------"); // throwable.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999994600052569	WITHOUT_CLASSIFICATION	5.399947430803702E-7	DEFECT
// System.err.println("Logged throwable: --------------------"); // throwable.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999994600052569	WITHOUT_CLASSIFICATION	5.399947430803702E-7	DEFECT
// Trim off the segments corresponding to the package nesting. //	WITHOUT_CLASSIFICATION	0.9999862357555964	WITHOUT_CLASSIFICATION	1.3764244403628536E-5	DEFECT
// For an archive URI, check for the path in the archive. //	WITHOUT_CLASSIFICATION	0.9999998961666218	WITHOUT_CLASSIFICATION	1.0383337821783248E-7	DEFECT
// Just print an error message.	WITHOUT_CLASSIFICATION	0.9999994460592475	WITHOUT_CLASSIFICATION	5.539407526219196E-7	DEFECT
// Assume the class is not available.	WITHOUT_CLASSIFICATION	0.9999919944911171	WITHOUT_CLASSIFICATION	8.005508882835205E-6	DEFECT
// Just return the default.	WITHOUT_CLASSIFICATION	0.9999999831430842	WITHOUT_CLASSIFICATION	1.6856915722113302E-8	DEFECT
// Ignore the exception and return the original URI.	WITHOUT_CLASSIFICATION	0.9999999844571734	WITHOUT_CLASSIFICATION	1.5542826537470254E-8	DEFECT
// Continue with the unresolved URI.	WITHOUT_CLASSIFICATION	0.9999985565446665	WITHOUT_CLASSIFICATION	1.4434553334528963E-6	DEFECT
// Return the original URI.	WITHOUT_CLASSIFICATION	0.9999975401255883	WITHOUT_CLASSIFICATION	2.459874411638172E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999476785159	WITHOUT_CLASSIFICATION	5.232148409313304E-8	DEFECT
// If we can open  an input stream, then the path is there, and we have a good URL. //	WITHOUT_CLASSIFICATION	0.9999837189890414	WITHOUT_CLASSIFICATION	1.6281010958636693E-5	DEFECT
// If we didn't find the path in the usual place nor in the archive... //	WITHOUT_CLASSIFICATION	0.9999971544217502	WITHOUT_CLASSIFICATION	2.8455782498785283E-6	DEFECT
// Continue processing if the file doesn't exist so that we try create a new empty one.	WITHOUT_CLASSIFICATION	0.9999999569667338	WITHOUT_CLASSIFICATION	4.303326615677015E-8	DEFECT
// This is just a marker interface.	WITHOUT_CLASSIFICATION	0.9999999700788926	WITHOUT_CLASSIFICATION	2.9921107353865125E-8	DEFECT
// This is just a marker interface.	WITHOUT_CLASSIFICATION	0.9999999700788926	WITHOUT_CLASSIFICATION	2.9921107353865125E-8	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999999184455309	WITHOUT_CLASSIFICATION	8.155446905564088E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999476785159	WITHOUT_CLASSIFICATION	5.232148409313304E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999476785159	WITHOUT_CLASSIFICATION	5.232148409313304E-8	DEFECT
/*   * @deprecated   */	WITHOUT_CLASSIFICATION	0.9999999552851375	WITHOUT_CLASSIFICATION	4.4714862530014584E-8	DEFECT
/*   * @deprecated   */	WITHOUT_CLASSIFICATION	0.9999999552851375	WITHOUT_CLASSIFICATION	4.4714862530014584E-8	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999999184455309	WITHOUT_CLASSIFICATION	8.155446905564088E-8	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999997905852969	WITHOUT_CLASSIFICATION	2.0941470312362812E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999997905852969	WITHOUT_CLASSIFICATION	2.0941470312362812E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999997905852969	WITHOUT_CLASSIFICATION	2.0941470312362812E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999997905852969	WITHOUT_CLASSIFICATION	2.0941470312362812E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999997905852969	WITHOUT_CLASSIFICATION	2.0941470312362812E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999997905852969	WITHOUT_CLASSIFICATION	2.0941470312362812E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.999999826515885	WITHOUT_CLASSIFICATION	1.7348411491497847E-7	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999996077057991	WITHOUT_CLASSIFICATION	3.922942009714717E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999476785159	WITHOUT_CLASSIFICATION	5.232148409313304E-8	DEFECT
// Create a title bar.	WITHOUT_CLASSIFICATION	0.9999996623669242	WITHOUT_CLASSIFICATION	3.3763307583854284E-7	DEFECT
// When the pane or any child gains focus, notify the workbench.	WITHOUT_CLASSIFICATION	0.9999350647407893	WITHOUT_CLASSIFICATION	6.493525921072076E-5	DEFECT
// Only do this once.	WITHOUT_CLASSIFICATION	0.9999959741523103	WITHOUT_CLASSIFICATION	4.025847689640551E-6	DEFECT
// Title.  	WITHOUT_CLASSIFICATION	0.9999874780275825	WITHOUT_CLASSIFICATION	1.2521972417611314E-5	DEFECT
// Action bar.	WITHOUT_CLASSIFICATION	0.9999962549498984	WITHOUT_CLASSIFICATION	3.7450501015563627E-6	DEFECT
// System bar.  	WITHOUT_CLASSIFICATION	0.9999989463325427	WITHOUT_CLASSIFICATION	1.0536674573206263E-6	DEFECT
// Define gradient (blue to widget background color)	WITHOUT_CLASSIFICATION	0.9999999612883352	WITHOUT_CLASSIFICATION	3.871166484372616E-8	DEFECT
// colorMap.put(CLR_GRAD_START, clr1);	WITHOUT_CLASSIFICATION	0.9999999377411476	WITHOUT_CLASSIFICATION	6.225885241317586E-8	DEFECT
// colorMap.put(CLR_GRAD_START, clr1);	WITHOUT_CLASSIFICATION	0.9999999377411476	WITHOUT_CLASSIFICATION	6.225885241317586E-8	DEFECT
// Preload.	WITHOUT_CLASSIFICATION	0.9999997012205423	WITHOUT_CLASSIFICATION	2.9877945769166193E-7	DEFECT
// Preload.	WITHOUT_CLASSIFICATION	0.9999997012205423	WITHOUT_CLASSIFICATION	2.9877945769166193E-7	DEFECT
// was the details button pressed?	WITHOUT_CLASSIFICATION	0.9999975881397914	WITHOUT_CLASSIFICATION	2.4118602085241184E-6	DEFECT
// create OK and Details buttons	WITHOUT_CLASSIFICATION	0.9999993085282516	WITHOUT_CLASSIFICATION	6.914717483595898E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999997905852969	WITHOUT_CLASSIFICATION	2.0941470312362812E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999997905852969	WITHOUT_CLASSIFICATION	2.0941470312362812E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.999999826515885	WITHOUT_CLASSIFICATION	1.7348411491497847E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.999999826515885	WITHOUT_CLASSIFICATION	1.7348411491497847E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.999999826515885	WITHOUT_CLASSIFICATION	1.7348411491497847E-7	DEFECT
// Empty block	WITHOUT_CLASSIFICATION	0.9999971973533346	WITHOUT_CLASSIFICATION	2.8026466653270325E-6	DEFECT
// Empty block	WITHOUT_CLASSIFICATION	0.9999971973533346	WITHOUT_CLASSIFICATION	2.8026466653270325E-6	DEFECT
// Empty block	WITHOUT_CLASSIFICATION	0.9999971973533346	WITHOUT_CLASSIFICATION	2.8026466653270325E-6	DEFECT
// create a composite with standard margins and spacing	WITHOUT_CLASSIFICATION	0.9999997484063285	WITHOUT_CLASSIFICATION	2.5159367147079396E-7	DEFECT
//Create a label if there are no children to force a smaller layout	WITHOUT_CLASSIFICATION	0.9999999027605727	WITHOUT_CLASSIFICATION	9.723942731486863E-8	DEFECT
//If it was not a warning or an diagnostic then return the diagnostic image	WITHOUT_CLASSIFICATION	0.9999998794719062	WITHOUT_CLASSIFICATION	1.2052809372557186E-7	DEFECT
// Closing the detail area	WITHOUT_CLASSIFICATION	0.9999999660451089	WITHOUT_CLASSIFICATION	3.3954891238901226E-8	DEFECT
// Opening the detail area	WITHOUT_CLASSIFICATION	0.9999999185204497	WITHOUT_CLASSIFICATION	8.147955038985006E-8	DEFECT
//Only one example per wizard	WITHOUT_CLASSIFICATION	0.9999471745211954	WITHOUT_CLASSIFICATION	5.282547880462182E-5	DEFECT
// null -> relative URI reference	WITHOUT_CLASSIFICATION	0.9999999405123843	WITHOUT_CLASSIFICATION	5.9487615599920736E-8	DEFECT
// Applicable only to a hierarchical URI.	WITHOUT_CLASSIFICATION	0.9999998201287579	WITHOUT_CLASSIFICATION	1.798712421629391E-7	DEFECT
// empty last segment -> trailing separator	WITHOUT_CLASSIFICATION	0.9999998947475844	WITHOUT_CLASSIFICATION	1.0525241550177331E-7	DEFECT
// Identifies a file-type absolute URI.	WITHOUT_CLASSIFICATION	0.9999996959885442	WITHOUT_CLASSIFICATION	3.040114557416559E-7	DEFECT
// Separators for parsing a URI string.	WITHOUT_CLASSIFICATION	0.999994003634347	WITHOUT_CLASSIFICATION	5.9963656529983065E-6	DEFECT
// Characters to use in escaping.	WITHOUT_CLASSIFICATION	0.9999999292804166	WITHOUT_CLASSIFICATION	7.07195834960631E-8	DEFECT
// | ucschar | escaped	WITHOUT_CLASSIFICATION	0.9999999929752702	WITHOUT_CLASSIFICATION	7.024729775988959E-9	DEFECT
// Static initializer for archiveSchemes.	WITHOUT_CLASSIFICATION	0.9999999978252786	WITHOUT_CLASSIFICATION	2.1747214912369646E-9	DEFECT
// Returns the lower half bitmask for the given ASCII character.	WITHOUT_CLASSIFICATION	0.9999999647989736	WITHOUT_CLASSIFICATION	3.520102654573768E-8	DEFECT
// Returns the upper half bitmask for the given ACSII character.	WITHOUT_CLASSIFICATION	0.9999997150191072	WITHOUT_CLASSIFICATION	2.8498089285140994E-7	DEFECT
// Debugging method: converts the given long to a string of binary digits.	WITHOUT_CLASSIFICATION	0.9999877987970567	WITHOUT_CLASSIFICATION	1.2201202943324544E-5	DEFECT
// String-parsing implementation.	WITHOUT_CLASSIFICATION	0.9999304023222475	WITHOUT_CLASSIFICATION	6.959767775252826E-5	DEFECT
// && uri.charAt(i) == FRAGMENT_SEPARATOR (implied)	WITHOUT_CLASSIFICATION	0.9999999976726477	WITHOUT_CLASSIFICATION	2.3273523733212367E-9	DEFECT
// Private constructor for use of platform factory methods.	WITHOUT_CLASSIFICATION	0.9999999998094989	WITHOUT_CLASSIFICATION	1.905010694017123E-10	DEFECT
// Private constructor for use of static factory methods.	WITHOUT_CLASSIFICATION	0.9999999990859028	WITHOUT_CLASSIFICATION	9.140971307222112E-10	DEFECT
//iri = iri || containsNonASCII(authority);	WITHOUT_CLASSIFICATION	0.9999996075960692	WITHOUT_CLASSIFICATION	3.924039308137874E-7	DEFECT
//iri = iri || containsNonASCII(device);	WITHOUT_CLASSIFICATION	0.9999994255469916	WITHOUT_CLASSIFICATION	5.744530083810259E-7	DEFECT
//iri = iri || containsNonASCII(query);	WITHOUT_CLASSIFICATION	0.9999983204675927	WITHOUT_CLASSIFICATION	1.6795324072557528E-6	DEFECT
//iri = iri || containsNonASCII(fragment);	WITHOUT_CLASSIFICATION	0.9999996323713259	WITHOUT_CLASSIFICATION	3.676286739696122E-7	DEFECT
//this.iri = iri;	WITHOUT_CLASSIFICATION	0.9999999112122814	WITHOUT_CLASSIFICATION	8.878771850406412E-8	DEFECT
//return value == null || validate(value, SEGMENT_CHAR_HI, SEGMENT_CHAR_LO, true, true);	WITHOUT_CLASSIFICATION	0.9999970685527393	WITHOUT_CLASSIFICATION	2.9314472605667327E-6	DEFECT
// Ignore the exception and return false.	WITHOUT_CLASSIFICATION	0.9999999940495523	WITHOUT_CLASSIFICATION	5.950447684304893E-9	DEFECT
//return value != null && validate(value, SEGMENT_CHAR_HI, SEGMENT_CHAR_LO, true, true);	WITHOUT_CLASSIFICATION	0.9999877923034847	WITHOUT_CLASSIFICATION	1.2207696515329096E-5	DEFECT
//return value == null || validate(value, URIC_HI, URIC_LO, true, true);	WITHOUT_CLASSIFICATION	0.9999941228052556	WITHOUT_CLASSIFICATION	5.877194744476818E-6	DEFECT
// <p>A valid fragment may be null or contain any allowed URI characters.	WITHOUT_CLASSIFICATION	0.9999999915217638	WITHOUT_CLASSIFICATION	8.478236285267557E-9	DEFECT
// note: hierarchical -> authority != null	WITHOUT_CLASSIFICATION	0.9999961911019326	WITHOUT_CLASSIFICATION	3.8088980674466493E-6	DEFECT
// note: device != null -> hierarchical	WITHOUT_CLASSIFICATION	0.9999995619470937	WITHOUT_CLASSIFICATION	4.3805290635472383E-7	DEFECT
// note: absolutePath -> hierarchical	WITHOUT_CLASSIFICATION	0.9999998497897472	WITHOUT_CLASSIFICATION	1.5021025286419524E-7	DEFECT
// note: query != null -> hierarchical	WITHOUT_CLASSIFICATION	0.9999864601262463	WITHOUT_CLASSIFICATION	1.3539873753770288E-5	DEFECT
// an absolute URI needs no resolving	WITHOUT_CLASSIFICATION	0.9999998818047212	WITHOUT_CLASSIFICATION	1.1819527881190098E-7	DEFECT
// note: isRelative() -> hierarchical	WITHOUT_CLASSIFICATION	0.9999999065703115	WITHOUT_CLASSIFICATION	9.342968853313621E-8	DEFECT
// no authority: use base's	WITHOUT_CLASSIFICATION	0.9999999478317544	WITHOUT_CLASSIFICATION	5.2168245544988783E-8	DEFECT
// no device: use base's	WITHOUT_CLASSIFICATION	0.9999999834398042	WITHOUT_CLASSIFICATION	1.656019579601499E-8	DEFECT
// else keep device, path, and query	WITHOUT_CLASSIFICATION	0.9999999944689067	WITHOUT_CLASSIFICATION	5.531093242894316E-9	DEFECT
// else absolute path: keep it and query	WITHOUT_CLASSIFICATION	0.9999977984238949	WITHOUT_CLASSIFICATION	2.2015761050470026E-6	DEFECT
// else keep authority, device, path, and query	WITHOUT_CLASSIFICATION	0.9999999949844974	WITHOUT_CLASSIFICATION	5.015502632919193E-9	DEFECT
// return a correctly sized result	WITHOUT_CLASSIFICATION	0.9995187784013647	WITHOUT_CLASSIFICATION	4.8122159863524613E-4	DEFECT
// skip empty segments and self references; push everything else	WITHOUT_CLASSIFICATION	0.9999999965105512	WITHOUT_CLASSIFICATION	3.4894487930664065E-9	DEFECT
// different scheme: need complete, absolute URI	WITHOUT_CLASSIFICATION	0.999997168355665	WITHOUT_CLASSIFICATION	2.8316443350119153E-6	DEFECT
// matching authorities and no device or path removal	WITHOUT_CLASSIFICATION	0.9999999472429697	WITHOUT_CLASSIFICATION	5.2757030258115023E-8	DEFECT
// matching devices and no path removal	WITHOUT_CLASSIFICATION	0.9999998374695827	WITHOUT_CLASSIFICATION	1.6253041724344697E-7	DEFECT
// user rejects a relative path: keep absolute or no path	WITHOUT_CLASSIFICATION	0.9999997835533796	WITHOUT_CLASSIFICATION	2.1644662032558412E-7	DEFECT
// current document reference: keep no path or query	WITHOUT_CLASSIFICATION	0.9999973296567585	WITHOUT_CLASSIFICATION	2.670343241573009E-6	DEFECT
// no paths: keep query only	WITHOUT_CLASSIFICATION	0.9999949292363413	WITHOUT_CLASSIFICATION	5.070763658752829E-6	DEFECT
// keep query and select relative or absolute path based on length	WITHOUT_CLASSIFICATION	0.999996054203064	WITHOUT_CLASSIFICATION	3.945796936009184E-6	DEFECT
// user demands a relative path or the absolute path is longer	WITHOUT_CLASSIFICATION	0.9999999778161104	WITHOUT_CLASSIFICATION	2.2183889675842688E-8	DEFECT
// else keep shorter absolute path	WITHOUT_CLASSIFICATION	0.999999988378811	WITHOUT_CLASSIFICATION	1.1621189047752092E-8	DEFECT
// treat an empty base path as the root absolute path	WITHOUT_CLASSIFICATION	0.9999987611369213	WITHOUT_CLASSIFICATION	1.2388630786729893E-6	DEFECT
// drop last segment from base, as in resolving	WITHOUT_CLASSIFICATION	0.9999959475486617	WITHOUT_CLASSIFICATION	4.052451338260194E-6	DEFECT
// index of first segment that is different between endPath and startPath	WITHOUT_CLASSIFICATION	0.9999676566532825	WITHOUT_CLASSIFICATION	3.2343346717506375E-5	DEFECT
// return a correctly sized result	WITHOUT_CLASSIFICATION	0.9995187784013647	WITHOUT_CLASSIFICATION	4.8122159863524613E-4	DEFECT
// return a correctly sized result	WITHOUT_CLASSIFICATION	0.9995187784013647	WITHOUT_CLASSIFICATION	4.8122159863524613E-4	DEFECT
// Empty statement.	WITHOUT_CLASSIFICATION	0.9999997310637725	WITHOUT_CLASSIFICATION	2.689362274750198E-7	DEFECT
// use a stack to accumulate segments	WITHOUT_CLASSIFICATION	0.9999991839067366	WITHOUT_CLASSIFICATION	8.160932632857388E-7	DEFECT
// absolute path or no path -> absolute path	WITHOUT_CLASSIFICATION	0.9999999944949299	WITHOUT_CLASSIFICATION	5.50507003228734E-9	DEFECT
// note: segments.length > 0 -> hierarchical	WITHOUT_CLASSIFICATION	0.9999999372199413	WITHOUT_CLASSIFICATION	6.278005879264733E-8	DEFECT
// note: segments.length > 0 -> hierarchical	WITHOUT_CLASSIFICATION	0.9999999372199413	WITHOUT_CLASSIFICATION	6.278005879264733E-8	DEFECT
// Get what's left of the segments after trimming the prefix.	WITHOUT_CLASSIFICATION	0.9999999952075942	WITHOUT_CLASSIFICATION	4.792405878804477E-9	DEFECT
// no validation needed since all components are from existing URIs	WITHOUT_CLASSIFICATION	0.9999999953183999	WITHOUT_CLASSIFICATION	4.681600044514977E-9	DEFECT
// Otherwise, the path needs only the remaining segments.	WITHOUT_CLASSIFICATION	0.9999999769044332	WITHOUT_CLASSIFICATION	2.3095566852086833E-8	DEFECT
// Returns the int value of the given hex digit.	WITHOUT_CLASSIFICATION	0.999798740860668	WITHOUT_CLASSIFICATION	2.012591393320865E-4	DEFECT
// Fill 6 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 62 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 6 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 11 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999525086746203	WITHOUT_CLASSIFICATION	4.749132537966795E-5	DEFECT
/*   * If this is an {@link #isIRI IRI}, converts it to a strict ASCII URI,   * using the procedure described in Section 3.1 of the   * <a href="http://www.w3.org/International/iri-edit/draft-duerst-iri-09.txt">IRI   * Draft RFC</a>.  Otherwise, this URI, itself, is returned.   *   * This unused code is included for possible future use...   */	WITHOUT_CLASSIFICATION	0.9999999996571383	WITHOUT_CLASSIFICATION	3.428616452835352E-10	DEFECT
// Continue with the established base URL.	WITHOUT_CLASSIFICATION	0.9999999370790891	WITHOUT_CLASSIFICATION	6.292091095101319E-8	DEFECT
// Ignore the exception since we will throw one when all else fails.	WITHOUT_CLASSIFICATION	0.9999990123411406	WITHOUT_CLASSIFICATION	9.876588593343498E-7	DEFECT
// We'll rethrow the original exception, not this one.	WITHOUT_CLASSIFICATION	0.9999579651852676	WITHOUT_CLASSIFICATION	4.2034814732483794E-5	DEFECT
// Ignore this since we will throw an exception when all else fails.	WITHOUT_CLASSIFICATION	0.9999796394206963	WITHOUT_CLASSIFICATION	2.036057930372897E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999476785159	WITHOUT_CLASSIFICATION	5.232148409313304E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999476785159	WITHOUT_CLASSIFICATION	5.232148409313304E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999476785159	WITHOUT_CLASSIFICATION	5.232148409313304E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999476785159	WITHOUT_CLASSIFICATION	5.232148409313304E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999476785159	WITHOUT_CLASSIFICATION	5.232148409313304E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999476785159	WITHOUT_CLASSIFICATION	5.232148409313304E-8	DEFECT
/*   * Javadoc copied from source.   */	WITHOUT_CLASSIFICATION	0.9999999942072094	WITHOUT_CLASSIFICATION	5.792790543598439E-9	DEFECT
// Suppress default constructor for noninstantiability.	WITHOUT_CLASSIFICATION	0.9999999977454205	WITHOUT_CLASSIFICATION	2.2545795506817893E-9	DEFECT
// Fill 6 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 62 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 6 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 11 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999525086746203	WITHOUT_CLASSIFICATION	4.749132537966795E-5	DEFECT
/*    * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999608670076	WITHOUT_CLASSIFICATION	3.913299230410666E-8	DEFECT
/*    * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999608670076	WITHOUT_CLASSIFICATION	3.913299230410666E-8	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999996077057991	WITHOUT_CLASSIFICATION	3.922942009714717E-7	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.999999600561112	WITHOUT_CLASSIFICATION	3.994388879112048E-7	DEFECT
//EParameter	WITHOUT_CLASSIFICATION	0.9999991791778637	WITHOUT_CLASSIFICATION	8.208221363329269E-7	DEFECT
// Subclasses may overrride 	WITHOUT_CLASSIFICATION	0.9999981201921418	WITHOUT_CLASSIFICATION	1.879807858143009E-6	DEFECT
// WizardContainer variables	WITHOUT_CLASSIFICATION	0.999999963180798	WITHOUT_CLASSIFICATION	3.681920206381947E-8	DEFECT
// Sorting only the genModels	WITHOUT_CLASSIFICATION	0.9999981839121009	WITHOUT_CLASSIFICATION	1.8160878990059029E-6	DEFECT
//EOperation	WITHOUT_CLASSIFICATION	0.9999960211361812	WITHOUT_CLASSIFICATION	3.978863818824089E-6	DEFECT
// This is only at avoid needing an @SuppressWarnings("unchecked") on the EMFObservableList	WITHOUT_CLASSIFICATION	0.9999966748562167	WITHOUT_CLASSIFICATION	3.325143783369635E-6	DEFECT
// This is only at avoid needing an @SuppressWarnings("unchecked") on the EMFObservableList	WITHOUT_CLASSIFICATION	0.9999966748562167	WITHOUT_CLASSIFICATION	3.325143783369635E-6	DEFECT
// Fill 230 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 10 of value (byte) 33 // Fill 39 of value (byte) -19 // Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999631669948218	WITHOUT_CLASSIFICATION	3.6833005178285E-5	DEFECT
//ETypedElement	WITHOUT_CLASSIFICATION	0.9999840616731387	WITHOUT_CLASSIFICATION	1.593832686126809E-5	DEFECT
// ETypeParameter	WITHOUT_CLASSIFICATION	0.9999997337758068	WITHOUT_CLASSIFICATION	2.662241933034061E-7	DEFECT
//EDataType	WITHOUT_CLASSIFICATION	0.9999894435651335	WITHOUT_CLASSIFICATION	1.0556434866462937E-5	DEFECT
//EcoreFactory	WITHOUT_CLASSIFICATION	0.9999907032742507	WITHOUT_CLASSIFICATION	9.296725749343155E-6	DEFECT
// EAnnotation	WITHOUT_CLASSIFICATION	0.9999814468304045	WITHOUT_CLASSIFICATION	1.8553169595503636E-5	DEFECT
// EGenericType	WITHOUT_CLASSIFICATION	0.9999981424641006	WITHOUT_CLASSIFICATION	1.8575358995373006E-6	DEFECT
//EcorePackage	WITHOUT_CLASSIFICATION	0.9999914078544471	WITHOUT_CLASSIFICATION	8.592145552855701E-6	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.9999999772821485	WITHOUT_CLASSIFICATION	2.2717851443933376E-8	DEFECT
// Initialize simple dependencies	WITHOUT_CLASSIFICATION	0.9999998628457445	WITHOUT_CLASSIFICATION	1.3715425542933645E-7	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.9999995366025851	WITHOUT_CLASSIFICATION	4.6339741494588786E-7	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.999999830336471	WITHOUT_CLASSIFICATION	1.6966352898701455E-7	DEFECT
// Mark meta-data to indicate it can't be changed	WITHOUT_CLASSIFICATION	0.99999860427837	WITHOUT_CLASSIFICATION	1.3957216301158224E-6	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.999999891557245	WITHOUT_CLASSIFICATION	1.0844275502500757E-7	DEFECT
// Create enums	WITHOUT_CLASSIFICATION	0.9999999279906351	WITHOUT_CLASSIFICATION	7.200936492899245E-8	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.999999382397121	WITHOUT_CLASSIFICATION	6.176028789009124E-7	DEFECT
// Obtain other dependent packages	WITHOUT_CLASSIFICATION	0.9999999973950333	WITHOUT_CLASSIFICATION	2.6049666313332696E-9	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.9999993290912625	WITHOUT_CLASSIFICATION	6.709087374268461E-7	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.9999978849235671	WITHOUT_CLASSIFICATION	2.1150764329847075E-6	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.9999996570524105	WITHOUT_CLASSIFICATION	3.429475895124151E-7	DEFECT
// Initialize enums and add enum literals	WITHOUT_CLASSIFICATION	0.9999994618759017	WITHOUT_CLASSIFICATION	5.381240982525359E-7	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.9999999647879461	WITHOUT_CLASSIFICATION	3.5212053998147653E-8	DEFECT
// ListChange	WITHOUT_CLASSIFICATION	0.9999999881492511	WITHOUT_CLASSIFICATION	1.1850748795228694E-8	DEFECT
// FeatureMapEntry	WITHOUT_CLASSIFICATION	0.9999999593548216	WITHOUT_CLASSIFICATION	4.064517855874074E-8	DEFECT
// FeatureChange	WITHOUT_CLASSIFICATION	0.9999999876748419	WITHOUT_CLASSIFICATION	1.2325158017424523E-8	DEFECT
// ChangeDescription	WITHOUT_CLASSIFICATION	0.999999860626686	WITHOUT_CLASSIFICATION	1.393733140116607E-7	DEFECT
//ChangeFactory	WITHOUT_CLASSIFICATION	0.9999992597420269	WITHOUT_CLASSIFICATION	7.402579732305298E-7	DEFECT
//ChangePackage	WITHOUT_CLASSIFICATION	0.9999994235420039	WITHOUT_CLASSIFICATION	5.764579960856331E-7	DEFECT
// ResourceChange	WITHOUT_CLASSIFICATION	0.9999999807643057	WITHOUT_CLASSIFICATION	1.9235694279781596E-8	DEFECT
//ChangePackageImpl	WITHOUT_CLASSIFICATION	0.9999985776438498	WITHOUT_CLASSIFICATION	1.4223561502352506E-6	DEFECT
//EObjectToChangesMapEntryImpl	WITHOUT_CLASSIFICATION	0.9999999097023426	WITHOUT_CLASSIFICATION	9.029765724101274E-8	DEFECT
//ListChangeImpl	WITHOUT_CLASSIFICATION	0.9999994583688194	WITHOUT_CLASSIFICATION	5.416311805482088E-7	DEFECT
// cache result	WITHOUT_CLASSIFICATION	0.9999988037161563	WITHOUT_CLASSIFICATION	1.1962838436509946E-6	DEFECT
// cache result	WITHOUT_CLASSIFICATION	0.9999988037161563	WITHOUT_CLASSIFICATION	1.1962838436509946E-6	DEFECT
//ResourceChangeImpl	WITHOUT_CLASSIFICATION	0.9999998911773652	WITHOUT_CLASSIFICATION	1.0882263479888113E-7	DEFECT
// feature is instance of EAttribute	WITHOUT_CLASSIFICATION	0.999999932759336	WITHOUT_CLASSIFICATION	6.724066397271668E-8	DEFECT
// cached already?	WITHOUT_CLASSIFICATION	0.9999990897971867	WITHOUT_CLASSIFICATION	9.1020281324879E-7	DEFECT
//FeatureChangeImpl	WITHOUT_CLASSIFICATION	0.999999726561254	WITHOUT_CLASSIFICATION	2.734387459654599E-7	DEFECT
//FeatureChangeImpl	WITHOUT_CLASSIFICATION	0.999999726561254	WITHOUT_CLASSIFICATION	2.734387459654599E-7	DEFECT
// Isolating the new objects	WITHOUT_CLASSIFICATION	0.9999997058490961	WITHOUT_CLASSIFICATION	2.941509038214971E-7	DEFECT
// getObjectsToDetachGen() should be changed only if required	WITHOUT_CLASSIFICATION	0.9999988624794881	WITHOUT_CLASSIFICATION	1.1375205118171065E-6	DEFECT
// caches the list value.	WITHOUT_CLASSIFICATION	0.9999999290180049	WITHOUT_CLASSIFICATION	7.098199510622512E-8	DEFECT
//ChangeDescriptionImpl	WITHOUT_CLASSIFICATION	0.9999986218281789	WITHOUT_CLASSIFICATION	1.3781718211236926E-6	DEFECT
//ChangeFactoryImpl	WITHOUT_CLASSIFICATION	0.9999989898481391	WITHOUT_CLASSIFICATION	1.0101518609028234E-6	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.999999830336471	WITHOUT_CLASSIFICATION	1.6966352898701455E-7	DEFECT
// Register package validator	WITHOUT_CLASSIFICATION	0.9999998201482084	WITHOUT_CLASSIFICATION	1.7985179165065879E-7	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.999999891557245	WITHOUT_CLASSIFICATION	1.0844275502500757E-7	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.999999382397121	WITHOUT_CLASSIFICATION	6.176028789009124E-7	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.9999978849235671	WITHOUT_CLASSIFICATION	2.1150764329847075E-6	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.9999996570524105	WITHOUT_CLASSIFICATION	3.429475895124151E-7	DEFECT
// Initialize classes and features; add operations and parameters	WITHOUT_CLASSIFICATION	0.999997918294812	WITHOUT_CLASSIFICATION	2.0817051879083706E-6	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.9999999647879461	WITHOUT_CLASSIFICATION	3.5212053998147653E-8	DEFECT
/**   * The switch that delegates to the <code>createXXX</code> methods.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9999999008203482	WITHOUT_CLASSIFICATION	9.917965187179749E-8	DEFECT
/*   * @deprecated   */	WITHOUT_CLASSIFICATION	0.9999999552851375	WITHOUT_CLASSIFICATION	4.4714862530014584E-8	DEFECT
//ChangeSwitch	WITHOUT_CLASSIFICATION	0.9999994090739925	WITHOUT_CLASSIFICATION	5.909260073836403E-7	DEFECT
//ChangeAdapterFactory	WITHOUT_CLASSIFICATION	0.9999988851719404	WITHOUT_CLASSIFICATION	1.1148280596839109E-6	DEFECT
// Make sure that all the old values are cached.	WITHOUT_CLASSIFICATION	0.9999994083318248	WITHOUT_CLASSIFICATION	5.91668175253001E-7	DEFECT
//case Notification.REMOVE:	WITHOUT_CLASSIFICATION	0.9999996727655984	WITHOUT_CLASSIFICATION	3.272344016847531E-7	DEFECT
//case Notification.REMOVE_MANY:	WITHOUT_CLASSIFICATION	0.9999996020178221	WITHOUT_CLASSIFICATION	3.9798217787803237E-7	DEFECT
// Continue with no instanceClass. 	WITHOUT_CLASSIFICATION	0.9999998497923441	WITHOUT_CLASSIFICATION	1.5020765593091775E-7	DEFECT
//EGenericTypeImpl	WITHOUT_CLASSIFICATION	0.9999744137327451	WITHOUT_CLASSIFICATION	2.5586267254889096E-5	DEFECT
//EParameterImpl	WITHOUT_CLASSIFICATION	0.9999977482585634	WITHOUT_CLASSIFICATION	2.2517414366733352E-6	DEFECT
// Create data types	WITHOUT_CLASSIFICATION	0.9999998808506556	WITHOUT_CLASSIFICATION	1.1914934437901255E-7	DEFECT
// Initialize data types	WITHOUT_CLASSIFICATION	0.9999992808116903	WITHOUT_CLASSIFICATION	7.191883096660009E-7	DEFECT
//return eContainer;	WITHOUT_CLASSIFICATION	0.9999993567828488	WITHOUT_CLASSIFICATION	6.432171512979823E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999997905852969	WITHOUT_CLASSIFICATION	2.0941470312362812E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999476785159	WITHOUT_CLASSIFICATION	5.232148409313304E-8	DEFECT
//ETypeParameterImpl	WITHOUT_CLASSIFICATION	0.9999932488034601	WITHOUT_CLASSIFICATION	6.751196539980162E-6	DEFECT
//EStringToStringMapEntryImpl	WITHOUT_CLASSIFICATION	0.9999973146264204	WITHOUT_CLASSIFICATION	2.6853735796380442E-6	DEFECT
// Don't really unset it.	WITHOUT_CLASSIFICATION	0.9999870720306866	WITHOUT_CLASSIFICATION	1.2927969313271872E-5	DEFECT
// create containment one.	WITHOUT_CLASSIFICATION	0.9999999132210621	WITHOUT_CLASSIFICATION	8.677893804126781E-8	DEFECT
//getList(entry).clear();	WITHOUT_CLASSIFICATION	0.9999992828537143	WITHOUT_CLASSIFICATION	7.171462857557773E-7	DEFECT
//ETypedElementImpl	WITHOUT_CLASSIFICATION	0.9999739226584636	WITHOUT_CLASSIFICATION	2.607734153648087E-5	DEFECT
// Keep trying until all else has failed.	WITHOUT_CLASSIFICATION	0.9999990394920003	WITHOUT_CLASSIFICATION	9.605079996714293E-7	DEFECT
// Continue to try a different approach.	WITHOUT_CLASSIFICATION	0.9999812645443537	WITHOUT_CLASSIFICATION	1.8735455646373706E-5	DEFECT
// Continue to try a different approach.	WITHOUT_CLASSIFICATION	0.9999812645443537	WITHOUT_CLASSIFICATION	1.8735455646373706E-5	DEFECT
// Keep trying until all else false.	WITHOUT_CLASSIFICATION	0.9999999517436032	WITHOUT_CLASSIFICATION	4.8256396743047714E-8	DEFECT
//EcoreFactoryImpl	WITHOUT_CLASSIFICATION	0.9999873137799811	WITHOUT_CLASSIFICATION	1.2686220018979105E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999997905852969	WITHOUT_CLASSIFICATION	2.0941470312362812E-7	DEFECT
/* backward compatibility with old generated overrides */	WITHOUT_CLASSIFICATION	0.9999988939696577	WITHOUT_CLASSIFICATION	1.1060303422486555E-6	DEFECT
/* backward compatibility with old generated overrides */	WITHOUT_CLASSIFICATION	0.9999988939696577	WITHOUT_CLASSIFICATION	1.1060303422486555E-6	DEFECT
// Subclasses MUST override this function	WITHOUT_CLASSIFICATION	0.9999997540057922	WITHOUT_CLASSIFICATION	2.459942078223796E-7	DEFECT
// return eVirtualIndexBits[offset];	WITHOUT_CLASSIFICATION	0.9999996266308374	WITHOUT_CLASSIFICATION	3.7336916256697177E-7	DEFECT
// eVirtualIndexBits[offset] = newIndexBits;	WITHOUT_CLASSIFICATION	0.9999998542393116	WITHOUT_CLASSIFICATION	1.4576068841045307E-7	DEFECT
// Continue to compute the offset.	WITHOUT_CLASSIFICATION	0.9999999872317196	WITHOUT_CLASSIFICATION	1.2768280458547489E-8	DEFECT
// return eVirtualValues;	WITHOUT_CLASSIFICATION	0.9999999494757331	WITHOUT_CLASSIFICATION	5.0524267005897274E-8	DEFECT
// eVirtualValues = newValues;	WITHOUT_CLASSIFICATION	0.9999999397940152	WITHOUT_CLASSIFICATION	6.020598472334566E-8	DEFECT
// return minimumCapacity;	WITHOUT_CLASSIFICATION	0.999999946055611	WITHOUT_CLASSIFICATION	5.3944388993373084E-8	DEFECT
// Ignore exceptions.	WITHOUT_CLASSIFICATION	0.9999999596802397	WITHOUT_CLASSIFICATION	4.0319760276583345E-8	DEFECT
// Continue and return null.	WITHOUT_CLASSIFICATION	0.9999988378054501	WITHOUT_CLASSIFICATION	1.1621945499468453E-6	DEFECT
// Ensure that cached ePackage is forgotten.	WITHOUT_CLASSIFICATION	0.9999997159066797	WITHOUT_CLASSIFICATION	2.840933202696721E-7	DEFECT
//EAnnotationImpl	WITHOUT_CLASSIFICATION	0.9999377179491006	WITHOUT_CLASSIFICATION	6.228205089943707E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999997905852969	WITHOUT_CLASSIFICATION	2.0941470312362812E-7	DEFECT
// Don't really unset it.	WITHOUT_CLASSIFICATION	0.9999870720306866	WITHOUT_CLASSIFICATION	1.2927969313271872E-5	DEFECT
// Force this to be initialized as well.	WITHOUT_CLASSIFICATION	0.9999999561404329	WITHOUT_CLASSIFICATION	4.385956705677515E-8	DEFECT
//)	WITHOUT_CLASSIFICATION	0.9999724231512007	WITHOUT_CLASSIFICATION	2.757684879929304E-5	DEFECT
// (	WITHOUT_CLASSIFICATION	0.999998070673608	WITHOUT_CLASSIFICATION	1.9293263920463364E-6	DEFECT
// We can also optimize single valued reverse.  //	WITHOUT_CLASSIFICATION	0.9999999908242929	WITHOUT_CLASSIFICATION	9.175707088624632E-9	DEFECT
// all implementations of Java 1.5 should support AES	WITHOUT_CLASSIFICATION	0.999937351044999	WITHOUT_CLASSIFICATION	6.264895500103263E-5	DEFECT
// generate the key	WITHOUT_CLASSIFICATION	0.9999995671219033	WITHOUT_CLASSIFICATION	4.32878096716646E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999476785159	WITHOUT_CLASSIFICATION	5.232148409313304E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999476785159	WITHOUT_CLASSIFICATION	5.232148409313304E-8	DEFECT
// Continue and try to close.	WITHOUT_CLASSIFICATION	0.9999999881982214	WITHOUT_CLASSIFICATION	1.1801778497961328E-8	DEFECT
// Fill 3078 of value (byte) 33 // Fill 156 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 90 of value (byte) -19 // Fill 6 of value (byte) 33 // Fill 22 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9997933706565248	WITHOUT_CLASSIFICATION	2.0662934347505973E-4	DEFECT
// Fill 3078 of value (byte) 33 // Fill 156 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 90 of value (byte) -19 // Fill 6 of value (byte) 33 // Fill 22 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9997933706565248	WITHOUT_CLASSIFICATION	2.0662934347505973E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.999999600561112	WITHOUT_CLASSIFICATION	3.994388879112048E-7	DEFECT
// ...	WITHOUT_CLASSIFICATION	0.9999778061681318	WITHOUT_CLASSIFICATION	2.2193831868253175E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999476785159	WITHOUT_CLASSIFICATION	5.232148409313304E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999476785159	WITHOUT_CLASSIFICATION	5.232148409313304E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999476785159	WITHOUT_CLASSIFICATION	5.232148409313304E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999476785159	WITHOUT_CLASSIFICATION	5.232148409313304E-8	DEFECT
// Ignore exceptions.	WITHOUT_CLASSIFICATION	0.9999999596802397	WITHOUT_CLASSIFICATION	4.0319760276583345E-8	DEFECT
// Ignore exceptions.	WITHOUT_CLASSIFICATION	0.9999999596802397	WITHOUT_CLASSIFICATION	4.0319760276583345E-8	DEFECT
// encrypt the input	WITHOUT_CLASSIFICATION	0.9999994871853204	WITHOUT_CLASSIFICATION	5.128146796834156E-7	DEFECT
// this is the key we will use to encrypt the data 	WITHOUT_CLASSIFICATION	0.999677118117183	WITHOUT_CLASSIFICATION	3.2288188281701953E-4	DEFECT
// create the IV for the password generation algorithm	WITHOUT_CLASSIFICATION	0.9999992503243293	WITHOUT_CLASSIFICATION	7.496756706800198E-7	DEFECT
// generate the IV for encryption	WITHOUT_CLASSIFICATION	0.9999977085092426	WITHOUT_CLASSIFICATION	2.2914907573683774E-6	DEFECT
// turn the password into an AES key	WITHOUT_CLASSIFICATION	0.9999994545442344	WITHOUT_CLASSIFICATION	5.45455765521105E-7	DEFECT
// now create the encryption cipher 	WITHOUT_CLASSIFICATION	0.9999993418612217	WITHOUT_CLASSIFICATION	6.581387782685028E-7	DEFECT
// Read the header of the encrypted file.	WITHOUT_CLASSIFICATION	0.9999864248733805	WITHOUT_CLASSIFICATION	1.3575126619535714E-5	DEFECT
// Decrypt the key bytes	WITHOUT_CLASSIFICATION	0.9999998336482493	WITHOUT_CLASSIFICATION	1.663517506804239E-7	DEFECT
// Create the key from the key bytes	WITHOUT_CLASSIFICATION	0.9999999089013667	WITHOUT_CLASSIFICATION	9.109863326566505E-8	DEFECT
// If we haven't yet generated a key, just use this one	WITHOUT_CLASSIFICATION	0.9999989949155413	WITHOUT_CLASSIFICATION	1.00508445866111E-6	DEFECT
// now create the decrypt cipher	WITHOUT_CLASSIFICATION	0.9999999814463791	WITHOUT_CLASSIFICATION	1.855362088421576E-8	DEFECT
// Ignore any exceptions and assume the class isn't available.	WITHOUT_CLASSIFICATION	0.9999968563600569	WITHOUT_CLASSIFICATION	3.143639943205048E-6	DEFECT
// Ignore any exceptions and assume the class isn't available.	WITHOUT_CLASSIFICATION	0.9999968563600569	WITHOUT_CLASSIFICATION	3.143639943205048E-6	DEFECT
// No methods added.	WITHOUT_CLASSIFICATION	0.9999999439898516	WITHOUT_CLASSIFICATION	5.6010148509952345E-8	DEFECT
// ECLIPSE-DEPEND-BEGIN	WITHOUT_CLASSIFICATION	0.9999992021414331	WITHOUT_CLASSIFICATION	7.97858566816584E-7	DEFECT
// ECLIPSE-DEPEND-BEGIN	WITHOUT_CLASSIFICATION	0.9999992021414331	WITHOUT_CLASSIFICATION	7.97858566816584E-7	DEFECT
// ECLIPSE-DEPEND-END	WITHOUT_CLASSIFICATION	0.9999993513685745	WITHOUT_CLASSIFICATION	6.486314254640252E-7	DEFECT
// ECLIPSE-DEPEND-END	WITHOUT_CLASSIFICATION	0.9999993513685745	WITHOUT_CLASSIFICATION	6.486314254640252E-7	DEFECT
// We can't update any properties via just a URL connection.	WITHOUT_CLASSIFICATION	0.9999887412851681	WITHOUT_CLASSIFICATION	1.1258714831930099E-5	DEFECT
// Ignore the bound if the value is too big.	WITHOUT_CLASSIFICATION	0.9999999972633771	WITHOUT_CLASSIFICATION	2.7366228075091647E-9	DEFECT
// Ignore the bound if the value is too big.	WITHOUT_CLASSIFICATION	0.9999999972633771	WITHOUT_CLASSIFICATION	2.7366228075091647E-9	DEFECT
// Ignore features from the first super type. //	WITHOUT_CLASSIFICATION	0.9999999409059209	WITHOUT_CLASSIFICATION	5.909407911356606E-8	DEFECT
// Match against every other operation but this one. //	WITHOUT_CLASSIFICATION	0.9999998509260812	WITHOUT_CLASSIFICATION	1.490739188117089E-7	DEFECT
/**   * Calls <code>validateXXX</code> for the corresponding classifier of the model.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9999638723482505	WITHOUT_CLASSIFICATION	3.6127651749576896E-5	DEFECT
// The CipherOutputStream shoudln't close the underlying stream //	WITHOUT_CLASSIFICATION	0.9999983303173731	WITHOUT_CLASSIFICATION	1.6696826269598166E-6	DEFECT
// List subList(EStructuralFeature feature, int from, int to); // EList list(EStructuralFeature feature);	WITHOUT_CLASSIFICATION	0.9999999544287449	WITHOUT_CLASSIFICATION	4.5571255001428624E-8	DEFECT
// Ensure that the class loader for this class will be used downstream. //	WITHOUT_CLASSIFICATION	0.9999994375602995	WITHOUT_CLASSIFICATION	5.624397005040423E-7	DEFECT
// We do not want to diagnose any errors that have already been diagnosed by a super type. // Although we ignore all the first super's features, there may be mixin classes that still would result in duplicates. //	WITHOUT_CLASSIFICATION	0.9996767492723458	WITHOUT_CLASSIFICATION	3.232507276542272E-4	DEFECT
//EcoreSwitch	WITHOUT_CLASSIFICATION	0.9999915710385481	WITHOUT_CLASSIFICATION	8.428961451914116E-6	DEFECT
// A document root can have multiple ID attributes because there can be multiple global element or attribute declarations of type ID  // and these will be the ID in the complex types that reference them, // i.e., they aren't really the ID of the document root. //	WITHOUT_CLASSIFICATION	0.9999994589462847	WITHOUT_CLASSIFICATION	5.410537153615726E-7	DEFECT
// For performance, skip matching all the features of the first super type. //	WITHOUT_CLASSIFICATION	0.9999998724176692	WITHOUT_CLASSIFICATION	1.2758233070373646E-7	DEFECT
// Don't bother complaining about things with no name, // since there are constraints for that problem. //	WITHOUT_CLASSIFICATION	0.9999998824379543	WITHOUT_CLASSIFICATION	1.1756204554658338E-7	DEFECT
// Drop the _ separators and normalize the case. //	WITHOUT_CLASSIFICATION	0.999999989186645	WITHOUT_CLASSIFICATION	1.0813354908314541E-8	DEFECT
// Fill 31 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 53 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999656461775205	WITHOUT_CLASSIFICATION	3.435382247944368E-5	DEFECT
// Match against every other operation but this one. //	WITHOUT_CLASSIFICATION	0.9999998509260812	WITHOUT_CLASSIFICATION	1.490739188117089E-7	DEFECT
// Produce different levels of diagnostic depending whether the names are exactly the same or only matching. //	WITHOUT_CLASSIFICATION	0.9999999152596846	WITHOUT_CLASSIFICATION	8.474031544715108E-8	DEFECT
// There is no match if the types are different // and they don't each specify the same non-null instance class name. //	WITHOUT_CLASSIFICATION	0.999999994805162	WITHOUT_CLASSIFICATION	5.194838044048842E-9	DEFECT
// Iterate over all the operations but skip all the operations in the first super. //	WITHOUT_CLASSIFICATION	0.9999999583751455	WITHOUT_CLASSIFICATION	4.162485453881752E-8	DEFECT
// We do not want to diagnose any error that have already been diagnosed by a super type. //	WITHOUT_CLASSIFICATION	0.9999861181929549	WITHOUT_CLASSIFICATION	1.3881807045183337E-5	DEFECT
// Maintain a list of classifiers for looking up conflicts. //	WITHOUT_CLASSIFICATION	0.9999999973749724	WITHOUT_CLASSIFICATION	2.6250276422953586E-9	DEFECT
// Look for duplicates among the generic super types. //	WITHOUT_CLASSIFICATION	0.9999990109879683	WITHOUT_CLASSIFICATION	9.89012031683301E-7	DEFECT
// Ignore it if it isn't a class. Not being a class is diagnosed for the generic type itself. //	WITHOUT_CLASSIFICATION	0.9999960977662646	WITHOUT_CLASSIFICATION	3.902233735362192E-6	DEFECT
// The string must contain inappropriate whitespace, so find the index for the first difference. //	WITHOUT_CLASSIFICATION	0.9999999927387222	WITHOUT_CLASSIFICATION	7.261277761467423E-9	DEFECT
// Don't complain about the literals if they are the same as the names and the names collide. //	WITHOUT_CLASSIFICATION	0.9999999186913994	WITHOUT_CLASSIFICATION	8.130860067556927E-8	DEFECT
// Can't have both a classifier and a type parameter. //	WITHOUT_CLASSIFICATION	0.9999968889027021	WITHOUT_CLASSIFICATION	3.1110972978299385E-6	DEFECT
// The referencing generic type must be contained to be in scope //	WITHOUT_CLASSIFICATION	0.9999990952418063	WITHOUT_CLASSIFICATION	9.047581937879236E-7	DEFECT
// The type parameter must be in scope and must not be a forward reference. //	WITHOUT_CLASSIFICATION	0.9999855966448256	WITHOUT_CLASSIFICATION	1.4403355174399658E-5	DEFECT
// When used as a generic super type, there must be a classifier that refers to a class. //	WITHOUT_CLASSIFICATION	0.9999999130113971	WITHOUT_CLASSIFICATION	8.698860283494778E-8	DEFECT
// The type arguments of a generic super type must not be a wildcard. //	WITHOUT_CLASSIFICATION	0.9999532488478369	WITHOUT_CLASSIFICATION	4.675115216311516E-5	DEFECT
// Wildcards are only allowed in type arguments. //	WITHOUT_CLASSIFICATION	0.9999997885362447	WITHOUT_CLASSIFICATION	2.114637551684564E-7	DEFECT
// The classifier of an attribute's generic type must be a data type. //	WITHOUT_CLASSIFICATION	0.9999989432176138	WITHOUT_CLASSIFICATION	1.0567823861291014E-6	DEFECT
// Can't have both an upper and lower bound. //	WITHOUT_CLASSIFICATION	0.9999992341396762	WITHOUT_CLASSIFICATION	7.658603239052741E-7	DEFECT
// Can't have a classifier or a type parameter as well as bounds. //	WITHOUT_CLASSIFICATION	0.9999996469675289	WITHOUT_CLASSIFICATION	3.530324710570993E-7	DEFECT
// Can only have bounds when used as a type argument. //	WITHOUT_CLASSIFICATION	0.9999999652555336	WITHOUT_CLASSIFICATION	3.474446645306222E-8	DEFECT
// Can't have type arguments unless there is a classifier //	WITHOUT_CLASSIFICATION	0.9999996929299663	WITHOUT_CLASSIFICATION	3.0707003372534324E-7	DEFECT
// Have no arguments when they are allowed is only a warning. //	WITHOUT_CLASSIFICATION	0.9999999599695631	WITHOUT_CLASSIFICATION	4.003043683099506E-8	DEFECT
// Incorrect number of type arguments. //	WITHOUT_CLASSIFICATION	0.9999743507041656	WITHOUT_CLASSIFICATION	2.56492958343561E-5	DEFECT
// Check if the bound specifies a classifier... //	WITHOUT_CLASSIFICATION	0.9999996175345855	WITHOUT_CLASSIFICATION	3.8246541449125264E-7	DEFECT
// If the type also specifies a classifier... //	WITHOUT_CLASSIFICATION	0.9999920431349424	WITHOUT_CLASSIFICATION	7.95686505768929E-6	DEFECT
// If the are the same then it is bounded properly... //	WITHOUT_CLASSIFICATION	0.994425691592503	WITHOUT_CLASSIFICATION	0.005574308407496977	DEFECT
// We test their relationship either via them both being classes... //	WITHOUT_CLASSIFICATION	0.9999999836176884	WITHOUT_CLASSIFICATION	1.6382311700510002E-8	DEFECT
// namespace context	WITHOUT_CLASSIFICATION	0.999998706533484	WITHOUT_CLASSIFICATION	1.2934665160330405E-6	DEFECT
// Determine if there is a bounding generic super type. //	WITHOUT_CLASSIFICATION	0.9999993122739748	WITHOUT_CLASSIFICATION	6.8772602522369E-7	DEFECT
// Set up the substitutions of any type parameters this class has with respect to the type arguments for them. //	WITHOUT_CLASSIFICATION	0.9999905327545726	WITHOUT_CLASSIFICATION	9.467245427358027E-6	DEFECT
// Test if there are type parameters that might require substitution. //	WITHOUT_CLASSIFICATION	0.9994742331309759	WITHOUT_CLASSIFICATION	5.257668690240809E-4	DEFECT
// If none of the generic super types are bounded, then we've failed. //	WITHOUT_CLASSIFICATION	0.9999742776884791	WITHOUT_CLASSIFICATION	2.572231152080794E-5	DEFECT
// If neither approach finds a contradiction, we must assume they are okay and then check all the arguments. //	WITHOUT_CLASSIFICATION	0.9999996872618515	WITHOUT_CLASSIFICATION	3.127381485142593E-7	DEFECT
// If there is a type parameter, one of its bounds must be bounded by the bound. //	WITHOUT_CLASSIFICATION	0.9999999182232713	WITHOUT_CLASSIFICATION	8.177672870118851E-8	DEFECT
// If there is a upper bound, the bound must bound it. //	WITHOUT_CLASSIFICATION	0.9999999519671721	WITHOUT_CLASSIFICATION	4.803282788534023E-8	DEFECT
// Failing all those cases, there must be an lower bound that bounds it. //	WITHOUT_CLASSIFICATION	0.999998776878697	WITHOUT_CLASSIFICATION	1.2231213031004404E-6	DEFECT
// If the generic type is a wildcard, it can't be bounded by another wildcard. //	WITHOUT_CLASSIFICATION	0.9998941844987596	WITHOUT_CLASSIFICATION	1.0581550124036442E-4	DEFECT
// If there is an lower bound, the type argument must bound it. //	WITHOUT_CLASSIFICATION	0.9999999611651034	WITHOUT_CLASSIFICATION	3.883489651701618E-8	DEFECT
// If the type also specifies a classifier... //	WITHOUT_CLASSIFICATION	0.9999920431349424	WITHOUT_CLASSIFICATION	7.95686505768929E-6	DEFECT
// If they are the same classifier, they are of course equal. //	WITHOUT_CLASSIFICATION	0.9999999765492061	WITHOUT_CLASSIFICATION	2.3450793870186374E-8	DEFECT
// Consider the instance type names they wrap  // to see if they are non-null and equal. //	WITHOUT_CLASSIFICATION	0.9999999834507413	WITHOUT_CLASSIFICATION	1.65492587244743E-8	DEFECT
// Consider the instance type names they wrap  // to see if they are non-null and equal. //	WITHOUT_CLASSIFICATION	0.9999999834507413	WITHOUT_CLASSIFICATION	1.65492587244743E-8	DEFECT
// I.e., the classifiers are considered equal if they wrap the same non-null type. //	WITHOUT_CLASSIFICATION	0.9999998338135581	WITHOUT_CLASSIFICATION	1.6618644200789728E-7	DEFECT
// I.e., the classifiers are considered equal if they wrap the same non-null type. //	WITHOUT_CLASSIFICATION	0.9999998338135581	WITHOUT_CLASSIFICATION	1.6618644200789728E-7	DEFECT
// If the generic type is a different wildcard, it doesn't match. //	WITHOUT_CLASSIFICATION	0.9995275049378716	WITHOUT_CLASSIFICATION	4.724950621284618E-4	DEFECT
// Reverse the test. //	WITHOUT_CLASSIFICATION	0.9999999552019452	WITHOUT_CLASSIFICATION	4.479805481028012E-8	DEFECT
// If they are the same instance they are equal. //	WITHOUT_CLASSIFICATION	0.9999998863847752	WITHOUT_CLASSIFICATION	1.1361522479385219E-7	DEFECT
// If one is null (but the other is not) then they are not equal. //	WITHOUT_CLASSIFICATION	0.9999987932603227	WITHOUT_CLASSIFICATION	1.2067396772548164E-6	DEFECT
// Consider the classifiers in a special way  // to take into account the fact they they often acts as wrappers for instance type names // and that two classifiers that wrap the same instance type name should be considered equal. //	WITHOUT_CLASSIFICATION	0.9999943143803977	WITHOUT_CLASSIFICATION	5.6856196022933216E-6	DEFECT
// If they both aren't null... //	WITHOUT_CLASSIFICATION	0.9996964047676409	WITHOUT_CLASSIFICATION	3.03595232359228E-4	DEFECT
// If one is null (but the other is not) then they can't be equal. //	WITHOUT_CLASSIFICATION	0.999955689101498	WITHOUT_CLASSIFICATION	4.431089850199425E-5	DEFECT
// The arguments, type parameters, lower bounds and upper bounds must be equal type arguments. //	WITHOUT_CLASSIFICATION	0.9999998652793437	WITHOUT_CLASSIFICATION	1.3472065636219997E-7	DEFECT
// Ignore leading whitespace	WITHOUT_CLASSIFICATION	0.9999999883108978	WITHOUT_CLASSIFICATION	1.1689102279830707E-8	DEFECT
// Ignore trailing whitespace	WITHOUT_CLASSIFICATION	0.9999999951103373	WITHOUT_CLASSIFICATION	4.889662705267515E-9	DEFECT
//EcoreValidator	WITHOUT_CLASSIFICATION	0.9999931592705626	WITHOUT_CLASSIFICATION	6.840729437342194E-6	DEFECT
//  Public	WITHOUT_CLASSIFICATION	0.9999989827860739	WITHOUT_CLASSIFICATION	1.0172139260294686E-6	DEFECT
// --entryCursor;	WITHOUT_CLASSIFICATION	0.9999999518793692	WITHOUT_CLASSIFICATION	4.812063076774114E-8	DEFECT
//lastCursor = -1; //prepared = 0;	WITHOUT_CLASSIFICATION	0.9999998800419684	WITHOUT_CLASSIFICATION	1.1995803166899393E-7	DEFECT
/*    public List subList(int from, int to)    {      return featureMap.subList(getEStructuralFeature(), from, to);    }*/	WITHOUT_CLASSIFICATION	0.9999999249865158	WITHOUT_CLASSIFICATION	7.501348425404287E-8	DEFECT
// Don't cache this one as it will cause leaks because to dynamic demand created document roots and demand created EClasses. //	WITHOUT_CLASSIFICATION	0.9999872464035542	WITHOUT_CLASSIFICATION	1.2753596445855524E-5	DEFECT
// For the extended meta data to be created. //	WITHOUT_CLASSIFICATION	0.9999998876240089	WITHOUT_CLASSIFICATION	1.1237599101249427E-7	DEFECT
// We can also optimize single valued reverse.  //	WITHOUT_CLASSIFICATION	0.9999999908242929	WITHOUT_CLASSIFICATION	9.175707088624632E-9	DEFECT
// This forces the feature ids to be assigned. //	WITHOUT_CLASSIFICATION	0.999999656537915	WITHOUT_CLASSIFICATION	3.434620850901344E-7	DEFECT
// We can use == for EObjects and EnumLiterals. //	WITHOUT_CLASSIFICATION	0.9999999614690458	WITHOUT_CLASSIFICATION	3.853095423740919E-8	DEFECT
/**   * The switch that delegates to the <code>createXXX</code> methods.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9999999008203482	WITHOUT_CLASSIFICATION	9.917965187179749E-8	DEFECT
// We can use == for EObjects and EnumLiterals. //	WITHOUT_CLASSIFICATION	0.9999999614690458	WITHOUT_CLASSIFICATION	3.853095423740919E-8	DEFECT
// This should be the same as the logic in ResourceImpl.getEObject(String). //	WITHOUT_CLASSIFICATION	0.9999964275622111	WITHOUT_CLASSIFICATION	3.572437788844025E-6	DEFECT
//EcoreAdapterFactory	WITHOUT_CLASSIFICATION	0.9999859541592913	WITHOUT_CLASSIFICATION	1.4045840708754117E-5	DEFECT
// We need to be careful that the proxy may be resolved while we are attaching this adapter. // We need to avoid attaching the adapter during the resolve  // and also attaching it again as we walk the eContents() later. // Checking here avoids having to check during addAdapter. //	WITHOUT_CLASSIFICATION	0.9997386808906591	WITHOUT_CLASSIFICATION	2.6131910934087173E-4	DEFECT
/*  public List subList(EStructuralFeature feature, int from, int to)  {    return null;  }*/	WITHOUT_CLASSIFICATION	0.999999957495828	WITHOUT_CLASSIFICATION	4.2504171894229484E-8	DEFECT
// Validate now since the call we make after will skip validating.	WITHOUT_CLASSIFICATION	0.9999998939928159	WITHOUT_CLASSIFICATION	1.0600718412301814E-7	DEFECT
// Index should be -1.	WITHOUT_CLASSIFICATION	0.9999561751744311	WITHOUT_CLASSIFICATION	4.382482556879885E-5	DEFECT
// Index should be -1.	WITHOUT_CLASSIFICATION	0.9999561751744311	WITHOUT_CLASSIFICATION	4.382482556879885E-5	DEFECT
// This may be called directly on an EObject for the case of a containment. //	WITHOUT_CLASSIFICATION	0.9999964672674468	WITHOUT_CLASSIFICATION	3.5327325531482527E-6	DEFECT
// demandDocumentRoot(ePackage);	WITHOUT_CLASSIFICATION	0.9999959939986963	WITHOUT_CLASSIFICATION	4.006001303680614E-6	DEFECT
// For demand created created packages we allow the list of classifiers to grow  // so this should handle those additional instances. //	WITHOUT_CLASSIFICATION	0.9999999979825325	WITHOUT_CLASSIFICATION	2.017467528814209E-9	DEFECT
// No new methods.	WITHOUT_CLASSIFICATION	0.9999999721620046	WITHOUT_CLASSIFICATION	2.7837995343525573E-8	DEFECT
// Undo the preparation for previous and continue.	WITHOUT_CLASSIFICATION	0.9999999546904096	WITHOUT_CLASSIFICATION	4.5309590417327834E-8	DEFECT
// Undo the preparation for next and continue.	WITHOUT_CLASSIFICATION	0.9999967842153726	WITHOUT_CLASSIFICATION	3.2157846275113318E-6	DEFECT
// Validate now since the call we make after will skip validating.	WITHOUT_CLASSIFICATION	0.9999998939928159	WITHOUT_CLASSIFICATION	1.0600718412301814E-7	DEFECT
// Index should be -1.	WITHOUT_CLASSIFICATION	0.9999561751744311	WITHOUT_CLASSIFICATION	4.382482556879885E-5	DEFECT
// Index should be -1.	WITHOUT_CLASSIFICATION	0.9999561751744311	WITHOUT_CLASSIFICATION	4.382482556879885E-5	DEFECT
// This may be called directly on an EObject for the case of a containment. //	WITHOUT_CLASSIFICATION	0.9999964672674468	WITHOUT_CLASSIFICATION	3.5327325531482527E-6	DEFECT
/*  List theList = new java.util.ArrayList();  protected List delegateList()  {    return theList;  }*/	WITHOUT_CLASSIFICATION	0.9999999969646252	WITHOUT_CLASSIFICATION	3.035374868326892E-9	DEFECT
//   // Suppress default constructor for noninstantiability. //   private EcoreUtil() //   { //   }	WITHOUT_CLASSIFICATION	0.999999972677569	WITHOUT_CLASSIFICATION	2.7322431052184456E-8	DEFECT
// Failure to resolve is ignored.	WITHOUT_CLASSIFICATION	0.9999997598478794	WITHOUT_CLASSIFICATION	2.4015212063559315E-7	DEFECT
// The loop resolves the cross references by visiting them.	WITHOUT_CLASSIFICATION	0.9999993989561011	WITHOUT_CLASSIFICATION	6.010438988481779E-7	DEFECT
// We don't create an iterator stack until the root mapping itself has been returned by next once. // After that the stack should be non-empty and the top iterator should yield true for hasNext. //	WITHOUT_CLASSIFICATION	0.9999897522015647	WITHOUT_CLASSIFICATION	1.0247798435251392E-5	DEFECT
// If we are on the special resource set iterator, and there isn't really a next object at this point... //	WITHOUT_CLASSIFICATION	0.9998945554135863	WITHOUT_CLASSIFICATION	1.0544458641369114E-4	DEFECT
// Skip the dummy null object and test again. //	WITHOUT_CLASSIFICATION	0.9999999055476779	WITHOUT_CLASSIFICATION	9.445232203225158E-8	DEFECT
// {	WITHOUT_CLASSIFICATION	0.9999959047794463	WITHOUT_CLASSIFICATION	4.095220553703183E-6	DEFECT
// {	WITHOUT_CLASSIFICATION	0.9999959047794463	WITHOUT_CLASSIFICATION	4.095220553703183E-6	DEFECT
// If the first object is null, the second object must be null. //	WITHOUT_CLASSIFICATION	0.9999779550882305	WITHOUT_CLASSIFICATION	2.2044911769571974E-5	DEFECT
// We know the first object isn't null, so if the second one is, it can't be equal. //	WITHOUT_CLASSIFICATION	0.9999987935302664	WITHOUT_CLASSIFICATION	1.2064697335626397E-6	DEFECT
// Then eObject2 must be that previous match. //	WITHOUT_CLASSIFICATION	0.9999992711062985	WITHOUT_CLASSIFICATION	7.288937015337392E-7	DEFECT
// If eObject2 has been compared already... //	WITHOUT_CLASSIFICATION	0.9943422504293755	WITHOUT_CLASSIFICATION	0.005657749570624443	DEFECT
// Then eObject1 must be that match. //	WITHOUT_CLASSIFICATION	0.999999375988362	WITHOUT_CLASSIFICATION	6.240116380216307E-7	DEFECT
// Neither eObject1 nor eObject2 have been compared yet.	WITHOUT_CLASSIFICATION	0.9999802952500271	WITHOUT_CLASSIFICATION	1.9704749972891982E-5	DEFECT
// If eObject1 and eObject2 are the same instance... //	WITHOUT_CLASSIFICATION	0.9999601368004504	WITHOUT_CLASSIFICATION	3.9863199549634555E-5	DEFECT
// Match them and return true. //	WITHOUT_CLASSIFICATION	0.9999998657164927	WITHOUT_CLASSIFICATION	1.3428350733940332E-7	DEFECT
// If they don't have the same class, they can't be equal. //	WITHOUT_CLASSIFICATION	0.9987144824345477	WITHOUT_CLASSIFICATION	0.001285517565452274	DEFECT
// Assume from now on that they match. //	WITHOUT_CLASSIFICATION	0.999991551825632	WITHOUT_CLASSIFICATION	8.448174367850646E-6	DEFECT
// Check all the values. //	WITHOUT_CLASSIFICATION	0.9999998007568738	WITHOUT_CLASSIFICATION	1.9924312609514836E-7	DEFECT
// If the first value is null, the second value must be null. //	WITHOUT_CLASSIFICATION	0.9999852197077517	WITHOUT_CLASSIFICATION	1.4780292248245673E-5	DEFECT
// Since the first value isn't null, if the second one is, they aren't equal. //	WITHOUT_CLASSIFICATION	0.9999994605131941	WITHOUT_CLASSIFICATION	5.394868058611971E-7	DEFECT
// If this is a feature map... //	WITHOUT_CLASSIFICATION	0.9986783493220155	WITHOUT_CLASSIFICATION	0.0013216506779845452	DEFECT
// The feature maps must be equal. //	WITHOUT_CLASSIFICATION	0.9999997368010629	WITHOUT_CLASSIFICATION	2.631989370796071E-7	DEFECT
// The values must be Java equal. //	WITHOUT_CLASSIFICATION	0.9999995108288927	WITHOUT_CLASSIFICATION	4.891711072836714E-7	DEFECT
// If they don't have the same size, the feature maps aren't equal. //	WITHOUT_CLASSIFICATION	0.9997202423994719	WITHOUT_CLASSIFICATION	2.7975760052815845E-4	DEFECT
// Compare entries in order. //	WITHOUT_CLASSIFICATION	0.9999987486175438	WITHOUT_CLASSIFICATION	1.2513824562399071E-6	DEFECT
// There is no reason they aren't equals. //	WITHOUT_CLASSIFICATION	0.9999965373808408	WITHOUT_CLASSIFICATION	3.462619159057307E-6	DEFECT
// If the referenced EObjects aren't equal, the feature maps aren't equal. //	WITHOUT_CLASSIFICATION	0.9999982704694643	WITHOUT_CLASSIFICATION	1.7295305356912634E-6	DEFECT
// If the values aren't Java equal, the feature maps aren't equal. //	WITHOUT_CLASSIFICATION	0.9999837298927897	WITHOUT_CLASSIFICATION	1.627010721028388E-5	DEFECT
// EqualityHelper	WITHOUT_CLASSIFICATION	0.9999999145963872	WITHOUT_CLASSIFICATION	8.540361278740306E-8	DEFECT
// If it's a proxy, use that. //	WITHOUT_CLASSIFICATION	0.9999988373312795	WITHOUT_CLASSIFICATION	1.1626687205195164E-6	DEFECT
// If it is in a resource, form the URI relative to that resource. //	WITHOUT_CLASSIFICATION	0.9999966641542449	WITHOUT_CLASSIFICATION	3.3358457551482824E-6	DEFECT
// Keys that will be used to record visibility for the accessors. //	WITHOUT_CLASSIFICATION	0.9999999253784267	WITHOUT_CLASSIFICATION	7.462157320090586E-8	DEFECT
// Value used to suppress visibility. //	WITHOUT_CLASSIFICATION	0.9999998115657617	WITHOUT_CLASSIFICATION	1.884342383643687E-7	DEFECT
// Handle the last byte at the end. //	WITHOUT_CLASSIFICATION	0.999999914834494	WITHOUT_CLASSIFICATION	8.516550604064923E-8	DEFECT
// Generate a 48 bit node identifier;  // This is an alternative to the IEEE 802 host address, which is not available in Java. //	WITHOUT_CLASSIFICATION	0.9999931737569048	WITHOUT_CLASSIFICATION	6.826243095128884E-6	DEFECT
// Set the most significant bit of the first octet to 1 so as to distinguish it from IEEE node addresses //	WITHOUT_CLASSIFICATION	0.9999999956199374	WITHOUT_CLASSIFICATION	4.38006263339826E-9	DEFECT
// The node identifier is already in network byte order,  // so there is no need to do any byte order reversing. //	WITHOUT_CLASSIFICATION	0.9999999797281346	WITHOUT_CLASSIFICATION	2.027186541169088E-8	DEFECT
// clockseq_hi	WITHOUT_CLASSIFICATION	0.9999996986002126	WITHOUT_CLASSIFICATION	3.0139978736436415E-7	DEFECT
// clockseq_low	WITHOUT_CLASSIFICATION	0.9999994769161249	WITHOUT_CLASSIFICATION	5.230838750206286E-7	DEFECT
// The system clock has been rewound so the clock sequence must be incremented  // to ensure that a duplicate UUID is not generated. //	WITHOUT_CLASSIFICATION	0.9999993015001077	WITHOUT_CLASSIFICATION	6.984998922980873E-7	DEFECT
// Wait so that the clock can catch up and the time adjustment won't overflow.	WITHOUT_CLASSIFICATION	0.9999998808296288	WITHOUT_CLASSIFICATION	1.1917037123320607E-7	DEFECT
// We just woke up.	WITHOUT_CLASSIFICATION	0.9999994894860592	WITHOUT_CLASSIFICATION	5.105139407885408E-7	DEFECT
// We just woke up.	WITHOUT_CLASSIFICATION	0.9999994894860592	WITHOUT_CLASSIFICATION	5.105139407885408E-7	DEFECT
// Place the time into the byte array in network byte order. //	WITHOUT_CLASSIFICATION	0.9999968875463765	WITHOUT_CLASSIFICATION	3.1124536235210877E-6	DEFECT
// time_low //	WITHOUT_CLASSIFICATION	0.9999984747008263	WITHOUT_CLASSIFICATION	1.525299173836602E-6	DEFECT
// time_mid //	WITHOUT_CLASSIFICATION	0.9999986818665383	WITHOUT_CLASSIFICATION	1.318133461626909E-6	DEFECT
// time_hi //	WITHOUT_CLASSIFICATION	0.9999993689227086	WITHOUT_CLASSIFICATION	6.310772914814374E-7	DEFECT
// Ignore if we can't freeze.	WITHOUT_CLASSIFICATION	0.9999991563605547	WITHOUT_CLASSIFICATION	8.436394453750662E-7	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999999184455309	WITHOUT_CLASSIFICATION	8.155446905564088E-8	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999995972496601	WITHOUT_CLASSIFICATION	4.0275033974482523E-7	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.DOMHelper#getValue(org.w3c.dom.Node)   */	WITHOUT_CLASSIFICATION	0.9999999947980112	WITHOUT_CLASSIFICATION	5.201988769851837E-9	DEFECT
// fall through	WITHOUT_CLASSIFICATION	0.9999880236362572	WITHOUT_CLASSIFICATION	1.1976363742806764E-5	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.999999600561112	WITHOUT_CLASSIFICATION	3.994388879112048E-7	DEFECT
// Fill 3 of value (byte) 33 // Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999853402267836	WITHOUT_CLASSIFICATION	1.465977321643742E-5	DEFECT
//fall through...	WITHOUT_CLASSIFICATION	0.999611311025533	WITHOUT_CLASSIFICATION	3.8868897446699005E-4	DEFECT
// Deresolve all the URI against the current base URI. //	WITHOUT_CLASSIFICATION	0.9999995747741116	WITHOUT_CLASSIFICATION	4.2522588847794164E-7	DEFECT
// System.err.println("add = ["+newString+"]");	WITHOUT_CLASSIFICATION	0.9999999900683322	WITHOUT_CLASSIFICATION	9.931667781768591E-9	DEFECT
// If there is a temporary file... //	WITHOUT_CLASSIFICATION	0.9999512201215421	WITHOUT_CLASSIFICATION	4.877987845788865E-5	DEFECT
// This is the cheapest and most common case. //	WITHOUT_CLASSIFICATION	0.9999401842586884	WITHOUT_CLASSIFICATION	5.9815741311659745E-5	DEFECT
// The first case is the most common case. // It is slightly cheaper to call add without an index since an index will be range checked. //  	WITHOUT_CLASSIFICATION	0.9999041911900001	WITHOUT_CLASSIFICATION	9.580880999996413E-5	DEFECT
// This case can only happen if we are reset to a mark and we've got lots of XMLNS attributes to write. //	WITHOUT_CLASSIFICATION	0.9016580311708245	WITHOUT_CLASSIFICATION	0.09834196882917542	DEFECT
// If we can't create one, too bad.	WITHOUT_CLASSIFICATION	0.9999817850435085	WITHOUT_CLASSIFICATION	1.8214956491442574E-5	DEFECT
// SAXXMIHandler	WITHOUT_CLASSIFICATION	0.9999988937786929	WITHOUT_CLASSIFICATION	1.1062213070441872E-6	DEFECT
// EMOF.isReadOnly = !Ecore.changeable	WITHOUT_CLASSIFICATION	0.9999998392413021	WITHOUT_CLASSIFICATION	1.6075869796305338E-7	DEFECT
// Ecore.changeable = !EMOF.isReadOnly	WITHOUT_CLASSIFICATION	0.9999998010002188	WITHOUT_CLASSIFICATION	1.9899978126285833E-7	DEFECT
// Ignore it if we've already set generic versions of these //	WITHOUT_CLASSIFICATION	0.9999998666791039	WITHOUT_CLASSIFICATION	1.333208960814467E-7	DEFECT
// Ignore whatever was set before. //	WITHOUT_CLASSIFICATION	0.9999999902851063	WITHOUT_CLASSIFICATION	9.71489369410201E-9	DEFECT
// external schema locations should only be processed once, i.e. in the subsequent parse // there is no need to process those again.	WITHOUT_CLASSIFICATION	0.999999904299382	WITHOUT_CLASSIFICATION	9.570061797033415E-8	DEFECT
// throws SAXException	WITHOUT_CLASSIFICATION	0.9999630702333507	WITHOUT_CLASSIFICATION	3.6929766649156686E-5	DEFECT
// The entity handler is the best place to resolve and deresolve URIs since it can do it there just once to produce the entity. // So most often the entity handler will be a URI handler as well and when used as a URI handler will be an identity handler. //	WITHOUT_CLASSIFICATION	0.999999999497593	WITHOUT_CLASSIFICATION	5.024070115206929E-10	DEFECT
// // Overwrite DefaultHandler methods //	WITHOUT_CLASSIFICATION	0.9999999993092757	WITHOUT_CLASSIFICATION	6.907242829344595E-10	DEFECT
// // Implement LexicalHandler methods //	WITHOUT_CLASSIFICATION	0.9999997733591287	WITHOUT_CLASSIFICATION	2.2664087123168205E-7	DEFECT
// // Implement DTDHandler methods //	WITHOUT_CLASSIFICATION	0.9999999434491044	WITHOUT_CLASSIFICATION	5.655089564186867E-8	DEFECT
// // Implement EntityResolver methods //	WITHOUT_CLASSIFICATION	0.999999396800532	WITHOUT_CLASSIFICATION	6.031994679386116E-7	DEFECT
// And find the one that holds this proxy. //	WITHOUT_CLASSIFICATION	0.9999835319176098	WITHOUT_CLASSIFICATION	1.6468082390153394E-5	DEFECT
// Try to resolve the proxy locally. //	WITHOUT_CLASSIFICATION	0.999986750253927	WITHOUT_CLASSIFICATION	1.3249746072949388E-5	DEFECT
// We won't need to process this again later. //	WITHOUT_CLASSIFICATION	0.9999933984835951	WITHOUT_CLASSIFICATION	6.601516404935696E-6	DEFECT
// Compute the holder of the proxy //	WITHOUT_CLASSIFICATION	0.9999990015175897	WITHOUT_CLASSIFICATION	9.984824102546024E-7	DEFECT
// If the proxy holder can hold many values, // it may contain a duplicate that resulted when the other end was processed as an IDREF // and hence did both sides of the bidirectional relation. //	WITHOUT_CLASSIFICATION	0.9999995702717939	WITHOUT_CLASSIFICATION	4.2972820619197184E-7	DEFECT
// Move the resolved object to the right place, remove the proxy, and we're done. //	WITHOUT_CLASSIFICATION	0.9999971656219848	WITHOUT_CLASSIFICATION	2.8343780152290537E-6	DEFECT
// If the resolved object doesn't contain a reference to the proxy holder as it should. //	WITHOUT_CLASSIFICATION	0.9997165244497609	WITHOUT_CLASSIFICATION	2.834755502391542E-4	DEFECT
// The proxy needs to be replaced in a way that updates both ends of the reference. //	WITHOUT_CLASSIFICATION	0.9999976330779665	WITHOUT_CLASSIFICATION	2.3669220335145856E-6	DEFECT
// We won't need to process this again later.	WITHOUT_CLASSIFICATION	0.9999947868449105	WITHOUT_CLASSIFICATION	5.213155089574506E-6	DEFECT
// At least set the references that we were able to resolve, if any. //	WITHOUT_CLASSIFICATION	0.9999985514419925	WITHOUT_CLASSIFICATION	1.4485580075038364E-6	DEFECT
// Pretend there is an xmlns="" because we really need to ensure that the null prefix  // isn't used to denote something other than the null namespace. //	WITHOUT_CLASSIFICATION	0.9999999880512083	WITHOUT_CLASSIFICATION	1.1948791763700034E-8	DEFECT
// EATM temporary for debug purposes only. //	WITHOUT_CLASSIFICATION	0.9999550678244498	WITHOUT_CLASSIFICATION	4.493217555021172E-5	DEFECT
// check for simple feature	WITHOUT_CLASSIFICATION	0.9999999927801603	WITHOUT_CLASSIFICATION	7.2198396196857625E-9	DEFECT
// Set up a deferred extent so the document root we create definitely will not be added to the resource. //	WITHOUT_CLASSIFICATION	0.9999999945081933	WITHOUT_CLASSIFICATION	5.491806653602439E-9	DEFECT
// Remove the document root's information from the top of the stacks. //	WITHOUT_CLASSIFICATION	0.9999998732541391	WITHOUT_CLASSIFICATION	1.2674586100987157E-7	DEFECT
// Process the new root object if any. //	WITHOUT_CLASSIFICATION	0.9999996724988148	WITHOUT_CLASSIFICATION	3.2750118519143506E-7	DEFECT
// There's an EObject on the stack already. //	WITHOUT_CLASSIFICATION	0.9999738671343883	WITHOUT_CLASSIFICATION	2.6132865611631367E-5	DEFECT
// Excise the new root from the document root. //	WITHOUT_CLASSIFICATION	0.9999999578038341	WITHOUT_CLASSIFICATION	4.2196165961188166E-8	DEFECT
// handler.ignorableWhitespace(ch, start, length);	WITHOUT_CLASSIFICATION	0.9999999998066872	WITHOUT_CLASSIFICATION	1.9331283629958175E-10	DEFECT
// Excise the new root from the document root. //	WITHOUT_CLASSIFICATION	0.9999999578038341	WITHOUT_CLASSIFICATION	4.2196165961188166E-8	DEFECT
//}	WITHOUT_CLASSIFICATION	0.9999852486471593	WITHOUT_CLASSIFICATION	1.4751352840608896E-5	DEFECT
// The new root object is the actual new object since all sign of the document root will now have disappeared. //	WITHOUT_CLASSIFICATION	0.9991834858345731	WITHOUT_CLASSIFICATION	8.165141654269428E-4	DEFECT
// Ignore a whitespace only text entry at the beginning. //	WITHOUT_CLASSIFICATION	0.9999999959707182	WITHOUT_CLASSIFICATION	4.0292818105927365E-9	DEFECT
// Handle namespaces	WITHOUT_CLASSIFICATION	0.9999999689127236	WITHOUT_CLASSIFICATION	3.108727641959847E-8	DEFECT
// If processSchemaLocations is specified, treat these as XML Schema locations	WITHOUT_CLASSIFICATION	0.999999560837422	WITHOUT_CLASSIFICATION	4.3916257786153886E-7	DEFECT
// If externalSchemaLocations are specified, process these ones as well	WITHOUT_CLASSIFICATION	0.9999999997667489	WITHOUT_CLASSIFICATION	2.3325107086030724E-10	DEFECT
// Ensure that anything can be handled, even if it's not recognized. //	WITHOUT_CLASSIFICATION	0.9999997934568855	WITHOUT_CLASSIFICATION	2.0654311458320398E-7	DEFECT
// This happens when processing an element with simple content that has elements content even though it shouldn't. //	WITHOUT_CLASSIFICATION	0.9998540480434202	WITHOUT_CLASSIFICATION	1.4595195657991794E-4	DEFECT
// Try to get a general-content feature. // Use a pattern that's not possible any other way. //	WITHOUT_CLASSIFICATION	0.9999675097669057	WITHOUT_CLASSIFICATION	3.249023309423569E-5	DEFECT
// This is for the case for a local unqualified element that has been bound. //	WITHOUT_CLASSIFICATION	0.9999996790531438	WITHOUT_CLASSIFICATION	3.209468562425588E-7	DEFECT
// This handles the case of a substitution group. //	WITHOUT_CLASSIFICATION	0.9999997188962518	WITHOUT_CLASSIFICATION	2.811037481982211E-7	DEFECT
// This check is redundant -- see handleFeature method (EL)	WITHOUT_CLASSIFICATION	0.9999998111522852	WITHOUT_CLASSIFICATION	1.8884771482224929E-7	DEFECT
// processing unknown feature with xsi:type (xmi:type)	WITHOUT_CLASSIFICATION	0.9999983792662577	WITHOUT_CLASSIFICATION	1.620733742226968E-6	DEFECT
// This only works for old globally registered things.	WITHOUT_CLASSIFICATION	0.997851626457813	WITHOUT_CLASSIFICATION	0.0021483735421870412	DEFECT
// Ignore it if we can't find it since we'll fail anyway.	WITHOUT_CLASSIFICATION	0.99998001304381	WITHOUT_CLASSIFICATION	1.9986956190083328E-5	DEFECT
// Continue with a different approach.	WITHOUT_CLASSIFICATION	0.9999826391125721	WITHOUT_CLASSIFICATION	1.7360887427854048E-5	DEFECT
// We use null here instead of "" because an attribute without a prefix is considered to have the null target namespace...	WITHOUT_CLASSIFICATION	0.9999745536206852	WITHOUT_CLASSIFICATION	2.544637931480418E-5	DEFECT
// Create a proxy in the correct way and pop it. //	WITHOUT_CLASSIFICATION	0.9996830428367033	WITHOUT_CLASSIFICATION	3.169571632966368E-4	DEFECT
// Test for a same document reference that would usually be handled as an IDREF. //	WITHOUT_CLASSIFICATION	0.9999996910961956	WITHOUT_CLASSIFICATION	3.089038044442069E-7	DEFECT
// EATM Demand create metadata.	WITHOUT_CLASSIFICATION	0.9999991094588042	WITHOUT_CLASSIFICATION	8.9054119579317E-7	DEFECT
/*   * Javadoc copied from interface   */	WITHOUT_CLASSIFICATION	0.9999999179949001	WITHOUT_CLASSIFICATION	8.200510000830236E-8	DEFECT
// add the key/value pairs to the output string	WITHOUT_CLASSIFICATION	0.9999992203925918	WITHOUT_CLASSIFICATION	7.796074082326664E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999999243570483	WITHOUT_CLASSIFICATION	7.564295163489141E-8	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.999999600561112	WITHOUT_CLASSIFICATION	3.994388879112048E-7	DEFECT
// Ensure that anything can be handled, even if it's not recognized. //	WITHOUT_CLASSIFICATION	0.9999997934568855	WITHOUT_CLASSIFICATION	2.0654311458320398E-7	DEFECT
// xmlResource.getResourceSet().getResources().addAll(generatedResources);	WITHOUT_CLASSIFICATION	0.9999997979957297	WITHOUT_CLASSIFICATION	2.0200427041128088E-7	DEFECT
// use the pool to retrieve the parser	WITHOUT_CLASSIFICATION	0.9999997978354416	WITHOUT_CLASSIFICATION	2.0216455843500864E-7	DEFECT
// use the pool to retrieve the parser	WITHOUT_CLASSIFICATION	0.9999997978354416	WITHOUT_CLASSIFICATION	2.0216455843500864E-7	DEFECT
// set features and properties	WITHOUT_CLASSIFICATION	0.9999999430029466	WITHOUT_CLASSIFICATION	5.6997053411786806E-8	DEFECT
// set lexical handler	WITHOUT_CLASSIFICATION	0.9999999131852889	WITHOUT_CLASSIFICATION	8.68147110605556E-8	DEFECT
// set lexical handler	WITHOUT_CLASSIFICATION	0.9999999131852889	WITHOUT_CLASSIFICATION	8.68147110605556E-8	DEFECT
// release parser back to the pool	WITHOUT_CLASSIFICATION	0.9999914315923851	WITHOUT_CLASSIFICATION	8.568407614875492E-6	DEFECT
// release parser back to the pool	WITHOUT_CLASSIFICATION	0.9999914315923851	WITHOUT_CLASSIFICATION	8.568407614875492E-6	DEFECT
// Don't read encoding - rely on XML parser to provide one via Locator2	WITHOUT_CLASSIFICATION	0.9644467048409059	WITHOUT_CLASSIFICATION	0.03555329515909401	DEFECT
// record node's attributes	WITHOUT_CLASSIFICATION	0.9999999394115632	WITHOUT_CLASSIFICATION	6.058843683819884E-8	DEFECT
// Include only non-duplicate namespace declarations. //	WITHOUT_CLASSIFICATION	0.9999999990684565	WITHOUT_CLASSIFICATION	9.315435759934855E-10	DEFECT
// record namespaces in scope //	WITHOUT_CLASSIFICATION	0.9999988219516038	WITHOUT_CLASSIFICATION	1.1780483962300963E-6	DEFECT
// traverse element node	WITHOUT_CLASSIFICATION	0.999999916083904	WITHOUT_CLASSIFICATION	8.391609597037059E-8	DEFECT
// class AttributesProxy	WITHOUT_CLASSIFICATION	0.9999980275805979	WITHOUT_CLASSIFICATION	1.9724194022150763E-6	DEFECT
// XMLLoad	WITHOUT_CLASSIFICATION	0.9999189432973414	WITHOUT_CLASSIFICATION	8.105670265850468E-5	DEFECT
// Ignore close since we don't want to let the parser close the stream when it's done.	WITHOUT_CLASSIFICATION	0.9999986781074077	WITHOUT_CLASSIFICATION	1.3218925923422034E-6	DEFECT
// Ignore since we expect this to fail because of early termination // and if there is some other kind of failure, then we'll simply not be able to match the content type.	WITHOUT_CLASSIFICATION	0.9999999959153262	WITHOUT_CLASSIFICATION	4.0846737770081245E-9	DEFECT
// handler.skippedEntity(name);	WITHOUT_CLASSIFICATION	0.999999825800427	WITHOUT_CLASSIFICATION	1.7419957306035046E-7	DEFECT
// handler.resolveEntity(publicId, systemId);	WITHOUT_CLASSIFICATION	0.9999999913300337	WITHOUT_CLASSIFICATION	8.669966291163572E-9	DEFECT
// Skips '-'	WITHOUT_CLASSIFICATION	0.999998793956158	WITHOUT_CLASSIFICATION	1.206043842006124E-6	DEFECT
// We need to be careful that we don't end up requiring the no namespace package  // just because the feature is unqualified. //	WITHOUT_CLASSIFICATION	0.9999999991247901	WITHOUT_CLASSIFICATION	8.752098772575504E-10	DEFECT
// handler.notationDecl(name, publicId, systemId);	WITHOUT_CLASSIFICATION	0.9999999815798037	WITHOUT_CLASSIFICATION	1.8420196233659907E-8	DEFECT
// handler.unparsedEntityDecl(name, publicId, systemId, notationName);	WITHOUT_CLASSIFICATION	0.9999997514365556	WITHOUT_CLASSIFICATION	2.4856344437841694E-7	DEFECT
// SAXXMLHandler	WITHOUT_CLASSIFICATION	0.9999988981946298	WITHOUT_CLASSIFICATION	1.1018053701816805E-6	DEFECT
// true if seen xmlns="" declaration	WITHOUT_CLASSIFICATION	0.999999715912666	WITHOUT_CLASSIFICATION	2.8408733404974875E-7	DEFECT
// There really must be a package. //	WITHOUT_CLASSIFICATION	0.999999616586191	WITHOUT_CLASSIFICATION	3.834138090139651E-7	DEFECT
// There really must be a package. //	WITHOUT_CLASSIFICATION	0.999999616586191	WITHOUT_CLASSIFICATION	3.834138090139651E-7	DEFECT
// We must have a qualifier for an attribute that needs qualified. //	WITHOUT_CLASSIFICATION	0.9999999828972151	WITHOUT_CLASSIFICATION	1.7102784900117546E-8	DEFECT
// for any content prefix to URI mapping could be in namespace context	WITHOUT_CLASSIFICATION	0.9986228506228167	WITHOUT_CLASSIFICATION	0.0013771493771832155	DEFECT
// Once we see a lookup of an element in the null namespace, we should behave as if there has been an explicit xmlns="" //	WITHOUT_CLASSIFICATION	0.9999999846135342	WITHOUT_CLASSIFICATION	1.5386465759433196E-8	DEFECT
// Only if the feature kind is unspecified should we return a match. // Otherwise, we might return an attribute feature when an element is required,  // or vice versa. This also can be controlled by XMLResource.OPTION_LAX_FEATURE_PROCESSING. //	WITHOUT_CLASSIFICATION	0.9999977576894308	WITHOUT_CLASSIFICATION	2.242310569291904E-6	DEFECT
// Sort and eliminate duplicates caused by having both a regular package and a demanded package for the same nsURI. //	WITHOUT_CLASSIFICATION	0.9999998852522327	WITHOUT_CLASSIFICATION	1.1474776732970391E-7	DEFECT
// If we are substituting an EAttribute for an EReference... //	WITHOUT_CLASSIFICATION	0.9999928083873924	WITHOUT_CLASSIFICATION	7.191612607647995E-6	DEFECT
// Create an simple any type wrapper for the attribute value and use that with the EReference. //	WITHOUT_CLASSIFICATION	0.9999989901641699	WITHOUT_CLASSIFICATION	1.0098358300455672E-6	DEFECT
// Make sure that the list will appear to be set to be empty. //	WITHOUT_CLASSIFICATION	0.9999994037720085	WITHOUT_CLASSIFICATION	5.962279915170491E-7	DEFECT
// xmlns="" declaration // Example #1: <a><q-name>q</q-name><b xmlns="abc"/></a> // Example #2: <a xmlns="abc"><b xmlns=""/><c xmlns="abc2"/></a> // Example #3: <a xmlns:a="abc"><b xmlns:a="abc2"/></a>	WITHOUT_CLASSIFICATION	0.9999996738441518	WITHOUT_CLASSIFICATION	3.2615584825765506E-7	DEFECT
// since xmlns="" is default declaration, remove ""->empty_URI mapping	WITHOUT_CLASSIFICATION	0.9999997194136759	WITHOUT_CLASSIFICATION	2.8058632399785267E-7	DEFECT
// record default ns declaration as duplicate if seen QName (#1) or seen xmlns="" (#2)	WITHOUT_CLASSIFICATION	0.9999999999764596	WITHOUT_CLASSIFICATION	2.354043314453375E-11	DEFECT
// record duplicate declaration for a given prefix (#3)	WITHOUT_CLASSIFICATION	0.9999998956946785	WITHOUT_CLASSIFICATION	1.0430532152547913E-7	DEFECT
// recording a first declaration for a given prefix	WITHOUT_CLASSIFICATION	0.9999998275225812	WITHOUT_CLASSIFICATION	1.724774188361418E-7	DEFECT
// extend the array, if necessary	WITHOUT_CLASSIFICATION	0.9999999764432276	WITHOUT_CLASSIFICATION	2.3556772470312196E-8	DEFECT
// push context	WITHOUT_CLASSIFICATION	0.9999993772242337	WITHOUT_CLASSIFICATION	6.227757663657333E-7	DEFECT
// resize array, if needed	WITHOUT_CLASSIFICATION	0.9999998282688063	WITHOUT_CLASSIFICATION	1.7173119367085166E-7	DEFECT
// bind prefix to uri in current context	WITHOUT_CLASSIFICATION	0.9999865701348452	WITHOUT_CLASSIFICATION	1.3429865154948954E-5	DEFECT
// find prefix in current context	WITHOUT_CLASSIFICATION	0.9999734001424376	WITHOUT_CLASSIFICATION	2.6599857562358047E-5	DEFECT
// prefix not found	WITHOUT_CLASSIFICATION	0.9999671173329875	WITHOUT_CLASSIFICATION	3.288266701253218E-5	DEFECT
// find uri in current context	WITHOUT_CLASSIFICATION	0.9999938270732911	WITHOUT_CLASSIFICATION	6.172926708823972E-6	DEFECT
// uri not found	WITHOUT_CLASSIFICATION	0.9999966736040338	WITHOUT_CLASSIFICATION	3.3263959662576196E-6	DEFECT
// getDeclaredPrefixAt(int):String	WITHOUT_CLASSIFICATION	0.99999846689262	WITHOUT_CLASSIFICATION	1.5331073801624538E-6	DEFECT
/*     *  Convert attribute values:     *  & to &amp;     *  < to &lt;     *  " to &quot;     *  \t to &#x9;     *  \n to &#xA;     *  \r to &#xD;     */	WITHOUT_CLASSIFICATION	0.9999956093207325	WITHOUT_CLASSIFICATION	4.3906792675136505E-6	DEFECT
// Look for a matching element in the specified packages if there are any. //	WITHOUT_CLASSIFICATION	0.9999998718646916	WITHOUT_CLASSIFICATION	1.2813530840969637E-7	DEFECT
// Look for a substitution group feature in the feature's containing class' containing package. //	WITHOUT_CLASSIFICATION	0.9999999955809212	WITHOUT_CLASSIFICATION	4.41907883815683E-9	DEFECT
// Look for a substitution group feature in the classifier's containing package. //	WITHOUT_CLASSIFICATION	0.9999999988668313	WITHOUT_CLASSIFICATION	1.1331686360882158E-9	DEFECT
// Look for a substitution group feature in the additional packages. //	WITHOUT_CLASSIFICATION	0.9999999273320757	WITHOUT_CLASSIFICATION	7.266792437209108E-8	DEFECT
// Process the super types if that's been specified. //	WITHOUT_CLASSIFICATION	0.9999999967943233	WITHOUT_CLASSIFICATION	3.205676680555275E-9	DEFECT
// XMIHandler	WITHOUT_CLASSIFICATION	0.9999968219774762	WITHOUT_CLASSIFICATION	3.1780225238090575E-6	DEFECT
// xsi:nil // xsi:type // xmlns:xsi // xsi:schemaLocation // xsi:noNamespaceSchemaLocation	WITHOUT_CLASSIFICATION	0.9999917750968955	WITHOUT_CLASSIFICATION	8.224903104435564E-6	DEFECT
// set serialization options	WITHOUT_CLASSIFICATION	0.9999997182819141	WITHOUT_CLASSIFICATION	2.817180858420869E-7	DEFECT
// If we can't create a temp file then we have to ignore the option.	WITHOUT_CLASSIFICATION	0.9999998795175165	WITHOUT_CLASSIFICATION	1.204824836320593E-7	DEFECT
// DOM serialization	WITHOUT_CLASSIFICATION	0.9999837911464544	WITHOUT_CLASSIFICATION	1.620885354564541E-5	DEFECT
// caching turned on by the user	WITHOUT_CLASSIFICATION	0.9999984974618166	WITHOUT_CLASSIFICATION	1.5025381834192524E-6	DEFECT
//no caching	WITHOUT_CLASSIFICATION	0.9999964607245923	WITHOUT_CLASSIFICATION	3.539275407601525E-6	DEFECT
// If there is no field, then we can't do this.	WITHOUT_CLASSIFICATION	0.9999934123848903	WITHOUT_CLASSIFICATION	6.587615109737964E-6	DEFECT
// Entities aren't supported for DOM.	WITHOUT_CLASSIFICATION	0.9997495193013072	WITHOUT_CLASSIFICATION	2.504806986928679E-4	DEFECT
// this is a root element	WITHOUT_CLASSIFICATION	0.9999885161777294	WITHOUT_CLASSIFICATION	1.1483822270632065E-5	DEFECT
// Process XML attributes	WITHOUT_CLASSIFICATION	0.9999997275202929	WITHOUT_CLASSIFICATION	2.7247970715541383E-7	DEFECT
// it's intentional to keep going	WITHOUT_CLASSIFICATION	0.9999999031473213	WITHOUT_CLASSIFICATION	9.685267862194098E-8	DEFECT
// It's intentional to keep going.	WITHOUT_CLASSIFICATION	0.9999996526200492	WITHOUT_CLASSIFICATION	3.4737995086178075E-7	DEFECT
// Process XML elements	WITHOUT_CLASSIFICATION	0.999999872620717	WITHOUT_CLASSIFICATION	1.2737928302422926E-7	DEFECT
// for performance reasons saveNil and saveElement are not used	WITHOUT_CLASSIFICATION	0.9999999811172466	WITHOUT_CLASSIFICATION	1.888275339952758E-8	DEFECT
// value[outputPos];	WITHOUT_CLASSIFICATION	0.9999998512776277	WITHOUT_CLASSIFICATION	1.4872237226599693E-7	DEFECT
// Every codepoint is supported! 	WITHOUT_CLASSIFICATION	0.9985410706117662	WITHOUT_CLASSIFICATION	0.0014589293882336634	DEFECT
// Produce the supplemental character as an entity	WITHOUT_CLASSIFICATION	0.9999999208567099	WITHOUT_CLASSIFICATION	7.914329022147417E-8	DEFECT
// Normal (BMP) unicode code point. See if we know for a fact that the encoding supports it:	WITHOUT_CLASSIFICATION	0.9999993203389418	WITHOUT_CLASSIFICATION	6.796610581687531E-7	DEFECT
// value[outputPos];	WITHOUT_CLASSIFICATION	0.9999998512776277	WITHOUT_CLASSIFICATION	1.4872237226599693E-7	DEFECT
// Go back and add all the XMLNS stuff. //	WITHOUT_CLASSIFICATION	0.9999717432518619	WITHOUT_CLASSIFICATION	2.8256748138121212E-5	DEFECT
// First try to see if this package's implementation class has an eInstance. //	WITHOUT_CLASSIFICATION	0.9999989071287513	WITHOUT_CLASSIFICATION	1.092871248640635E-6	DEFECT
// Check if it's an anonymous type. //	WITHOUT_CLASSIFICATION	0.9999997946575863	WITHOUT_CLASSIFICATION	2.0534241379551265E-7	DEFECT
// We only get here if we should do this. //	WITHOUT_CLASSIFICATION	0.9999740969119846	WITHOUT_CLASSIFICATION	2.5903088015471616E-5	DEFECT
// 2^N // 2^N-1    	WITHOUT_CLASSIFICATION	0.9999986801939807	WITHOUT_CLASSIFICATION	1.3198060191911698E-6	DEFECT
// Every codepoint is supported! 	WITHOUT_CLASSIFICATION	0.9985410706117662	WITHOUT_CLASSIFICATION	0.0014589293882336634	DEFECT
// Normal (BMP) unicode code point. See if we know for a fact that the encoding supports it:	WITHOUT_CLASSIFICATION	0.9999993203389418	WITHOUT_CLASSIFICATION	6.796610581687531E-7	DEFECT
/*     *  Convert element values:     *  & to &amp;     *  < to &lt;     *  " to &quot;     *  \n to line separator     *  \r should be escaped to &xD;     */	WITHOUT_CLASSIFICATION	0.9999987004667992	WITHOUT_CLASSIFICATION	1.2995332008133098E-6	DEFECT
// We not sure the encoding supports this code point, so we write it as a character entity reference.	WITHOUT_CLASSIFICATION	0.9999999176511761	WITHOUT_CLASSIFICATION	8.234882389248383E-8	DEFECT
/*     *  Convert:     *  \n to line separator     */	WITHOUT_CLASSIFICATION	0.9999986009887535	WITHOUT_CLASSIFICATION	1.3990112465827462E-6	DEFECT
// continue with default processing	WITHOUT_CLASSIFICATION	0.99999998410207	WITHOUT_CLASSIFICATION	1.5897930006328314E-8	DEFECT
// Fill 7 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 4 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 13 of value (byte) -19 // Fill 5 of value (byte) 33 // Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9998563615642012	WITHOUT_CLASSIFICATION	1.436384357988632E-4	DEFECT
// write doctype	WITHOUT_CLASSIFICATION	0.9999912554745896	WITHOUT_CLASSIFICATION	8.744525410500043E-6	DEFECT
// Avoid a function call... //	WITHOUT_CLASSIFICATION	0.998874418886997	WITHOUT_CLASSIFICATION	0.0011255811130029254	DEFECT
// create dummy documentElement	WITHOUT_CLASSIFICATION	0.9999998757129589	WITHOUT_CLASSIFICATION	1.2428704110737715E-7	DEFECT
// no property	WITHOUT_CLASSIFICATION	0.9999979052195528	WITHOUT_CLASSIFICATION	2.09478044714917E-6	DEFECT
// no property	WITHOUT_CLASSIFICATION	0.9999979052195528	WITHOUT_CLASSIFICATION	2.09478044714917E-6	DEFECT
// boolean not	WITHOUT_CLASSIFICATION	0.999999892854082	WITHOUT_CLASSIFICATION	1.071459180684751E-7	DEFECT
// ownedProperty???	WITHOUT_CLASSIFICATION	0.9999873713318566	WITHOUT_CLASSIFICATION	1.2628668143442877E-5	DEFECT
// We will use an xmi:Extension element for these	WITHOUT_CLASSIFICATION	0.999999819618818	WITHOUT_CLASSIFICATION	1.8038118195559846E-7	DEFECT
// set parser features and properties	WITHOUT_CLASSIFICATION	0.9999976537650282	WITHOUT_CLASSIFICATION	2.3462349718024794E-6	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.9999999772821485	WITHOUT_CLASSIFICATION	2.2717851443933376E-8	DEFECT
// Initialize simple dependencies	WITHOUT_CLASSIFICATION	0.9999998628457445	WITHOUT_CLASSIFICATION	1.3715425542933645E-7	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.9999995366025851	WITHOUT_CLASSIFICATION	4.6339741494588786E-7	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.9999995366025851	WITHOUT_CLASSIFICATION	4.6339741494588786E-7	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.999999830336471	WITHOUT_CLASSIFICATION	1.6966352898701455E-7	DEFECT
// Register package validator	WITHOUT_CLASSIFICATION	0.9999998201482084	WITHOUT_CLASSIFICATION	1.7985179165065879E-7	DEFECT
// Register package validator	WITHOUT_CLASSIFICATION	0.9999998201482084	WITHOUT_CLASSIFICATION	1.7985179165065879E-7	DEFECT
// Mark meta-data to indicate it can't be changed	WITHOUT_CLASSIFICATION	0.99999860427837	WITHOUT_CLASSIFICATION	1.3957216301158224E-6	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.999999891557245	WITHOUT_CLASSIFICATION	1.0844275502500757E-7	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.999999891557245	WITHOUT_CLASSIFICATION	1.0844275502500757E-7	DEFECT
// Create enums	WITHOUT_CLASSIFICATION	0.9999999279906351	WITHOUT_CLASSIFICATION	7.200936492899245E-8	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.999999382397121	WITHOUT_CLASSIFICATION	6.176028789009124E-7	DEFECT
// Obtain other dependent packages	WITHOUT_CLASSIFICATION	0.9999999973950333	WITHOUT_CLASSIFICATION	2.6049666313332696E-9	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.9999993290912625	WITHOUT_CLASSIFICATION	6.709087374268461E-7	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.9999978849235671	WITHOUT_CLASSIFICATION	2.1150764329847075E-6	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.9999996570524105	WITHOUT_CLASSIFICATION	3.429475895124151E-7	DEFECT
// Initialize enums and add enum literals	WITHOUT_CLASSIFICATION	0.9999994618759017	WITHOUT_CLASSIFICATION	5.381240982525359E-7	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.9999999647879461	WITHOUT_CLASSIFICATION	3.5212053998147653E-8	DEFECT
// Create data types	WITHOUT_CLASSIFICATION	0.9999998808506556	WITHOUT_CLASSIFICATION	1.1914934437901255E-7	DEFECT
// Initialize data types	WITHOUT_CLASSIFICATION	0.9999992808116903	WITHOUT_CLASSIFICATION	7.191883096660009E-7	DEFECT
// Ensure correct indentation for a top level attribute. // // elementNames.add("mark");	WITHOUT_CLASSIFICATION	0.9999980514230459	WITHOUT_CLASSIFICATION	1.9485769540954766E-6	DEFECT
// xmi:id // xmi:XMI // xmi:type // xmi:version // xmlns:xmi	WITHOUT_CLASSIFICATION	0.9999009190385469	WITHOUT_CLASSIFICATION	9.908096145307008E-5	DEFECT
// no property // no property // no property	WITHOUT_CLASSIFICATION	0.999993760738778	WITHOUT_CLASSIFICATION	6.239261222004229E-6	DEFECT
// no property // no property	WITHOUT_CLASSIFICATION	0.9999963567362977	WITHOUT_CLASSIFICATION	3.6432637023436914E-6	DEFECT
//  Interpret the body of a nested ownedComment as a comment-type and assign it as the EAnnotation.source of the parent. //	WITHOUT_CLASSIFICATION	0.9999807635706646	WITHOUT_CLASSIFICATION	1.9236429335493823E-5	DEFECT
// EAnnotations denoting specific EMOF elements are serialized as their EMOF elements.  // Other EAnnotations are serialized as xmi:Extensions. //	WITHOUT_CLASSIFICATION	0.9999999878209531	WITHOUT_CLASSIFICATION	1.2179046792896827E-8	DEFECT
// register default options	WITHOUT_CLASSIFICATION	0.9999999995555159	WITHOUT_CLASSIFICATION	4.444840159768832E-10	DEFECT
/*   * Create an XML processor that is aware of XML Schema specified.   * @param schemaURIs - a URI {@link org.eclipse.common.util.URI} which point to an XML Schema   */	WITHOUT_CLASSIFICATION	0.9999999999133313	WITHOUT_CLASSIFICATION	8.666858222626187E-11	DEFECT
// Assume the class isn't available.	WITHOUT_CLASSIFICATION	0.9999963148449659	WITHOUT_CLASSIFICATION	3.6851550342361727E-6	DEFECT
//XMLNamespaceFactory	WITHOUT_CLASSIFICATION	0.9999942618164358	WITHOUT_CLASSIFICATION	5.738183564137557E-6	DEFECT
// DocumentRoot	WITHOUT_CLASSIFICATION	0.9999997581567381	WITHOUT_CLASSIFICATION	2.418432618735196E-7	DEFECT
//XMLNamespacePackage	WITHOUT_CLASSIFICATION	0.9999950863181998	WITHOUT_CLASSIFICATION	4.913681800280994E-6	DEFECT
//SpaceType	WITHOUT_CLASSIFICATION	0.9999927951460353	WITHOUT_CLASSIFICATION	7.204853964708518E-6	DEFECT
// http:///org/eclipse/emf/ecore/util/ExtendedMetaData	WITHOUT_CLASSIFICATION	0.9999997689993355	WITHOUT_CLASSIFICATION	2.3100066455731117E-7	DEFECT
//XMLNamespacePackageImpl	WITHOUT_CLASSIFICATION	0.9999790452390122	WITHOUT_CLASSIFICATION	2.0954760987908176E-5	DEFECT
//XMLNamespaceDocumentRootImpl	WITHOUT_CLASSIFICATION	0.999992583632575	WITHOUT_CLASSIFICATION	7.416367424977798E-6	DEFECT
//XMLNamespaceFactoryImpl	WITHOUT_CLASSIFICATION	0.9999864663064678	WITHOUT_CLASSIFICATION	1.3533693532154842E-5	DEFECT
//XMLNamespaceValidator	WITHOUT_CLASSIFICATION	0.9999953543738497	WITHOUT_CLASSIFICATION	4.645626150290872E-6	DEFECT
// AnyType	WITHOUT_CLASSIFICATION	0.9999946117764111	WITHOUT_CLASSIFICATION	5.388223588841409E-6	DEFECT
// SimpleAnyType	WITHOUT_CLASSIFICATION	0.9999954874543497	WITHOUT_CLASSIFICATION	4.512545650287597E-6	DEFECT
// ProcessingInstructionType	WITHOUT_CLASSIFICATION	0.9999999533723752	WITHOUT_CLASSIFICATION	4.6627624660121567E-8	DEFECT
//XMLTypeFactory	WITHOUT_CLASSIFICATION	0.999979386436293	WITHOUT_CLASSIFICATION	2.0613563707014932E-5	DEFECT
//XMLTypePackage	WITHOUT_CLASSIFICATION	0.9999438920823672	WITHOUT_CLASSIFICATION	5.610791763266772E-5	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.999999382397121	WITHOUT_CLASSIFICATION	6.176028789009124E-7	DEFECT
// Obtain other dependent packages	WITHOUT_CLASSIFICATION	0.9999999973950333	WITHOUT_CLASSIFICATION	2.6049666313332696E-9	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.9999993290912625	WITHOUT_CLASSIFICATION	6.709087374268461E-7	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.9999996570524105	WITHOUT_CLASSIFICATION	3.429475895124151E-7	DEFECT
// Initialize classes and features; add operations and parameters	WITHOUT_CLASSIFICATION	0.999997918294812	WITHOUT_CLASSIFICATION	2.0817051879083706E-6	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.9999999647879461	WITHOUT_CLASSIFICATION	3.5212053998147653E-8	DEFECT
// Create data types	WITHOUT_CLASSIFICATION	0.9999998808506556	WITHOUT_CLASSIFICATION	1.1914934437901255E-7	DEFECT
// Initialize data types	WITHOUT_CLASSIFICATION	0.9999992808116903	WITHOUT_CLASSIFICATION	7.191883096660009E-7	DEFECT
// {	WITHOUT_CLASSIFICATION	0.9999959047794463	WITHOUT_CLASSIFICATION	4.095220553703183E-6	DEFECT
// Create annotations // http://www.w3.org/XML/1998/namespace	WITHOUT_CLASSIFICATION	0.9999456475154089	WITHOUT_CLASSIFICATION	5.4352484591021414E-5	DEFECT
// Don't create anything.	WITHOUT_CLASSIFICATION	0.999992202886129	WITHOUT_CLASSIFICATION	7.797113870893865E-6	DEFECT
//XMLTypePackageImpl	WITHOUT_CLASSIFICATION	0.9998273103431023	WITHOUT_CLASSIFICATION	1.726896568977515E-4	DEFECT
//AnyTypeImpl	WITHOUT_CLASSIFICATION	0.9999263369797198	WITHOUT_CLASSIFICATION	7.366302028026305E-5	DEFECT
//ProcessingInstructionTypeImpl	WITHOUT_CLASSIFICATION	0.999998275521076	WITHOUT_CLASSIFICATION	1.7244789240200816E-6	DEFECT
// do not validate on load. Check validity using Diagnostician.	WITHOUT_CLASSIFICATION	0.999999851252158	WITHOUT_CLASSIFICATION	1.4874784206480203E-7	DEFECT
// do not validate on load. Check validity using Diagnostician.	WITHOUT_CLASSIFICATION	0.999999851252158	WITHOUT_CLASSIFICATION	1.4874784206480203E-7	DEFECT
//XMLTypeFactoryImpl	WITHOUT_CLASSIFICATION	0.9999649084750584	WITHOUT_CLASSIFICATION	3.5091524941623664E-5	DEFECT
//DocumentRootImpl	WITHOUT_CLASSIFICATION	0.9999860715377042	WITHOUT_CLASSIFICATION	1.3928462295686252E-5	DEFECT
//SimpleAnyTypeImpl	WITHOUT_CLASSIFICATION	0.999942247617926	WITHOUT_CLASSIFICATION	5.7752382074048E-5	DEFECT
//System.err.println("Starts at "+index);	WITHOUT_CLASSIFICATION	0.9999998341261714	WITHOUT_CLASSIFICATION	1.6587382868594664E-7	DEFECT
//System.err.println("Starts at "+index);	WITHOUT_CLASSIFICATION	0.9999998341261714	WITHOUT_CLASSIFICATION	1.6587382868594664E-7	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9999982582005741	WITHOUT_CLASSIFICATION	1.7417994259537E-6	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9999982582005741	WITHOUT_CLASSIFICATION	1.7417994259537E-6	DEFECT
// Skips a white space.	WITHOUT_CLASSIFICATION	0.999999907047289	WITHOUT_CLASSIFICATION	9.295271099559298E-8	DEFECT
// Skips characters between '#' and a line end.	WITHOUT_CLASSIFICATION	0.9999999181658227	WITHOUT_CLASSIFICATION	8.183417729641942E-8	DEFECT
// Strips an escaped white space.	WITHOUT_CLASSIFICATION	0.9999999818727877	WITHOUT_CLASSIFICATION	1.8127212259937814E-8	DEFECT
// Other escaped character.	WITHOUT_CLASSIFICATION	0.9999999991221443	WITHOUT_CLASSIFICATION	8.778556487116214E-10	DEFECT
// As is.	WITHOUT_CLASSIFICATION	0.9999922097534888	WITHOUT_CLASSIFICATION	7.790246511210938E-6	DEFECT
// ret.next is null.	WITHOUT_CLASSIFICATION	0.9999864723824088	WITHOUT_CLASSIFICATION	1.3527617591167901E-5	DEFECT
// {n}	WITHOUT_CLASSIFICATION	0.9999943868171923	WITHOUT_CLASSIFICATION	5.613182807637664E-6	DEFECT
// X{2,6} -> XX(X(X(XX?)?)?)?	WITHOUT_CLASSIFICATION	0.9999630773434837	WITHOUT_CLASSIFICATION	3.692265651640479E-5	DEFECT
// Token.CLOSURE	WITHOUT_CLASSIFICATION	0.9999969699826535	WITHOUT_CLASSIFICATION	3.0300173464408305E-6	DEFECT
//System.err.println("DEBUG: matchEnd="+matchEnd);	WITHOUT_CLASSIFICATION	0.9999935653892824	WITHOUT_CLASSIFICATION	6.434610717681252E-6	DEFECT
//System.err.println("DEBUG: matchEnd="+matchEnd);	WITHOUT_CLASSIFICATION	0.9999935653892824	WITHOUT_CLASSIFICATION	6.434610717681252E-6	DEFECT
/*           * The pattern has only fixed string.           * The engine uses Boyer-Moore.           */	WITHOUT_CLASSIFICATION	0.9815349329471214	WITHOUT_CLASSIFICATION	0.01846506705287862	DEFECT
//System.err.println("DEBUG: fixed-only: "+this.fixedString);	WITHOUT_CLASSIFICATION	0.9999569432525447	WITHOUT_CLASSIFICATION	4.305674745527536E-5	DEFECT
//System.err.println("DEBUG: fixed-only: "+this.fixedString);	WITHOUT_CLASSIFICATION	0.9999569432525447	WITHOUT_CLASSIFICATION	4.305674745527536E-5	DEFECT
//System.err.println("DEBUG: fixed-only: "+this.fixedString);	WITHOUT_CLASSIFICATION	0.9999569432525447	WITHOUT_CLASSIFICATION	4.305674745527536E-5	DEFECT
/*           * The pattern contains a fixed string.           * The engine checks with Boyer-Moore whether the text contains the fixed string or not.           * If not, it return with false.           */	WITHOUT_CLASSIFICATION	0.9995412016039756	WITHOUT_CLASSIFICATION	4.5879839602445965E-4	DEFECT
/*           * The pattern contains a fixed string.           * The engine checks with Boyer-Moore whether the text contains the fixed string or not.           * If not, it return with false.           */	WITHOUT_CLASSIFICATION	0.9995412016039756	WITHOUT_CLASSIFICATION	4.5879839602445965E-4	DEFECT
//System.err.println("Non-match in fixed-string search.");	WITHOUT_CLASSIFICATION	0.9999995316323714	WITHOUT_CLASSIFICATION	4.6836762865821694E-7	DEFECT
//System.err.println("Non-match in fixed-string search.");	WITHOUT_CLASSIFICATION	0.9999995316323714	WITHOUT_CLASSIFICATION	4.6836762865821694E-7	DEFECT
//System.err.println("Non-match in fixed-string search.");	WITHOUT_CLASSIFICATION	0.9999995316323714	WITHOUT_CLASSIFICATION	4.6836762865821694E-7	DEFECT
/*           * Checks whether the expression starts with ".*".           */	WITHOUT_CLASSIFICATION	0.9999984454804483	WITHOUT_CLASSIFICATION	1.5545195516719862E-6	DEFECT
/*           * Checks whether the expression starts with ".*".           */	WITHOUT_CLASSIFICATION	0.9999984454804483	WITHOUT_CLASSIFICATION	1.5545195516719862E-6	DEFECT
/*           * Checks whether the expression starts with ".*".           */	WITHOUT_CLASSIFICATION	0.9999984454804483	WITHOUT_CLASSIFICATION	1.5545195516719862E-6	DEFECT
/*           * Optimization against the first character.           */	WITHOUT_CLASSIFICATION	0.9999999986938514	WITHOUT_CLASSIFICATION	1.3061485490587338E-9	DEFECT
/*           * Optimization against the first character.           */	WITHOUT_CLASSIFICATION	0.9999999986938514	WITHOUT_CLASSIFICATION	1.3061485490587338E-9	DEFECT
//System.err.println("DEBUG: with firstchar-matching: "+this.firstChar);	WITHOUT_CLASSIFICATION	0.9999992700202747	WITHOUT_CLASSIFICATION	7.299797252390774E-7	DEFECT
//System.err.println("DEBUG: with firstchar-matching: "+this.firstChar);	WITHOUT_CLASSIFICATION	0.9999992700202747	WITHOUT_CLASSIFICATION	7.299797252390774E-7	DEFECT
/*           * Straightforward matching.           */	WITHOUT_CLASSIFICATION	0.9999997906179385	WITHOUT_CLASSIFICATION	2.093820614953221E-7	DEFECT
/*           * Straightforward matching.           */	WITHOUT_CLASSIFICATION	0.9999997906179385	WITHOUT_CLASSIFICATION	2.093820614953221E-7	DEFECT
// Internal use only. // The @ always matches line beginnings.	WITHOUT_CLASSIFICATION	0.9999999886068885	WITHOUT_CLASSIFICATION	1.1393111377997302E-8	DEFECT
// Internal use only. // The @ always matches line beginnings.	WITHOUT_CLASSIFICATION	0.9999999886068885	WITHOUT_CLASSIFICATION	1.1393111377997302E-8	DEFECT
// switch anchor type	WITHOUT_CLASSIFICATION	0.9999999312724079	WITHOUT_CLASSIFICATION	6.87275920458522E-8	DEFECT
// switch anchor type	WITHOUT_CLASSIFICATION	0.9999999312724079	WITHOUT_CLASSIFICATION	6.87275920458522E-8	DEFECT
// ********	WITHOUT_CLASSIFICATION	0.9999868235104444	WITHOUT_CLASSIFICATION	1.3176489555557063E-5	DEFECT
// ********	WITHOUT_CLASSIFICATION	0.9999868235104444	WITHOUT_CLASSIFICATION	1.3176489555557063E-5	DEFECT
/*                       * Saves current position to avoid                       * zero-width repeats.                       */	WITHOUT_CLASSIFICATION	0.9999994460771732	WITHOUT_CLASSIFICATION	5.53922826839083E-7	DEFECT
/*                       * Saves current position to avoid                       * zero-width repeats.                       */	WITHOUT_CLASSIFICATION	0.9999994460771732	WITHOUT_CLASSIFICATION	5.53922826839083E-7	DEFECT
/*           * Optimization against the first character.           */	WITHOUT_CLASSIFICATION	0.9999999986938514	WITHOUT_CLASSIFICATION	1.3061485490587338E-9	DEFECT
//System.err.println("DEBUG: with firstchar-matching: "+this.firstChar);	WITHOUT_CLASSIFICATION	0.9999992700202747	WITHOUT_CLASSIFICATION	7.299797252390774E-7	DEFECT
/*           * Straightforward matching.           */	WITHOUT_CLASSIFICATION	0.9999997906179385	WITHOUT_CLASSIFICATION	2.093820614953221E-7	DEFECT
// switch anchor type	WITHOUT_CLASSIFICATION	0.9999999312724079	WITHOUT_CLASSIFICATION	6.87275920458522E-8	DEFECT
// ********	WITHOUT_CLASSIFICATION	0.9999868235104444	WITHOUT_CLASSIFICATION	1.3176489555557063E-5	DEFECT
/*                       * Saves current position to avoid                       * zero-width repeats.                       */	WITHOUT_CLASSIFICATION	0.9999994460771732	WITHOUT_CLASSIFICATION	5.53922826839083E-7	DEFECT
// "w"	WITHOUT_CLASSIFICATION	0.9999984923739211	WITHOUT_CLASSIFICATION	1.5076260788718401E-6	DEFECT
// Op.CHAR	WITHOUT_CLASSIFICATION	0.9999990464328128	WITHOUT_CLASSIFICATION	9.535671871089943E-7	DEFECT
//+this.fixedString	WITHOUT_CLASSIFICATION	0.9999977679295514	WITHOUT_CLASSIFICATION	2.2320704486317533E-6	DEFECT
// This pattern has a fixed string of which length is more than one.	WITHOUT_CLASSIFICATION	0.9992023194507011	WITHOUT_CLASSIFICATION	7.976805492988441E-4	DEFECT
// Cf // Mn // Mc	WITHOUT_CLASSIFICATION	0.9999981482571382	WITHOUT_CLASSIFICATION	1.8517428619149558E-6	DEFECT
// "u"	WITHOUT_CLASSIFICATION	0.9999990308391499	WITHOUT_CLASSIFICATION	9.69160850129467E-7	DEFECT
/*    public ParseException(String mes) {        this(mes, -1);    }    */	WITHOUT_CLASSIFICATION	0.9999997510787281	WITHOUT_CLASSIFICATION	2.4892127195981844E-7	DEFECT
// L // L // L // L // L // N // N // N // Mc	WITHOUT_CLASSIFICATION	0.999999532905702	WITHOUT_CLASSIFICATION	4.670942979774192E-7	DEFECT
// Single character // [a-zA-Z] // [^a-zA-Z] // ^ $ ... // literal String  // X* // X*? // X? // X?? // X|Y // ( and ) // \1 \2 ... // (?=...) // (?!...) // (?<=...) // (?<!...) // (?>...) // (?ims-ims:...) // (?(..)yes|no)	WITHOUT_CLASSIFICATION	0.9999928627895236	WITHOUT_CLASSIFICATION	7.137210476370496E-6	DEFECT
// Legacy word characters	WITHOUT_CLASSIFICATION	0.9999999372447563	WITHOUT_CLASSIFICATION	6.275524368116767E-8	DEFECT
// for UNION	WITHOUT_CLASSIFICATION	0.9999998029750903	WITHOUT_CLASSIFICATION	1.9702490970316469E-7	DEFECT
//System.err.println("Creates UnionOp");	WITHOUT_CLASSIFICATION	0.999999951553368	WITHOUT_CLASSIFICATION	4.844663213025355E-8	DEFECT
// ModifierOp	WITHOUT_CLASSIFICATION	0.999999585498145	WITHOUT_CLASSIFICATION	4.145018549597816E-7	DEFECT
// for CLOSURE, QUESTION	WITHOUT_CLASSIFICATION	0.9999999629198083	WITHOUT_CLASSIFICATION	3.708019165934342E-8	DEFECT
// for UNIoN	WITHOUT_CLASSIFICATION	0.9999997134623598	WITHOUT_CLASSIFICATION	2.865376402463697E-7	DEFECT
// STRING	WITHOUT_CLASSIFICATION	0.9999990351328565	WITHOUT_CLASSIFICATION	9.648671435313E-7	DEFECT
// RANGE, NRANGE	WITHOUT_CLASSIFICATION	0.9999972843044779	WITHOUT_CLASSIFICATION	2.7156955220963125E-6	DEFECT
//case 0x0b:  ret = "\\v";  break;	WITHOUT_CLASSIFICATION	0.9999962987326162	WITHOUT_CLASSIFICATION	3.7012673838109942E-6	DEFECT
// for RANGE or NRANGE	WITHOUT_CLASSIFICATION	0.9999995089093593	WITHOUT_CLASSIFICATION	4.910906407690306E-7	DEFECT
//System.err.println("Token#addRange(): "+start+" "+end);	WITHOUT_CLASSIFICATION	0.9999901283797676	WITHOUT_CLASSIFICATION	9.871620232325078E-6	DEFECT
//System.err.println("Do sorting: "+this.ranges.length);	WITHOUT_CLASSIFICATION	0.999999982898481	WITHOUT_CLASSIFICATION	1.7101519049252222E-8	DEFECT
// Index of writing point // Index of processing point	WITHOUT_CLASSIFICATION	0.9999986815555858	WITHOUT_CLASSIFICATION	1.3184444142735918E-6	DEFECT
//System.err.println("Token#substractRanges(): Entry: "+this.ranges.length+", "+tok.ranges.length);	WITHOUT_CLASSIFICATION	0.9999999396465632	WITHOUT_CLASSIFICATION	6.035343680925449E-8	DEFECT
// Not overlapped // src: o-----o // sub:         o-----o // res: o-----o // Reuse sub	WITHOUT_CLASSIFICATION	0.9999993724583941	WITHOUT_CLASSIFICATION	6.275416059988707E-7	DEFECT
// src:    o--------o // sub:  o------------o // res: empty // Reuse sub	WITHOUT_CLASSIFICATION	0.9999927722839957	WITHOUT_CLASSIFICATION	7.227716004294816E-6	DEFECT
// src:    o--------o // sub:  o----o // res:       o-----o // Reuse src(=res)	WITHOUT_CLASSIFICATION	0.9999919267396745	WITHOUT_CLASSIFICATION	8.073260325440848E-6	DEFECT
// src:    o--------o // sub:          o----o // res:    o-----o // Reuse sub	WITHOUT_CLASSIFICATION	0.9999928713349546	WITHOUT_CLASSIFICATION	7.128665045421615E-6	DEFECT
// Not overlapped // src:          o-----o // sub: o----o	WITHOUT_CLASSIFICATION	0.9999998918815154	WITHOUT_CLASSIFICATION	1.0811848460264775E-7	DEFECT
// this.ranges is sorted and compacted.	WITHOUT_CLASSIFICATION	0.999997311607178	WITHOUT_CLASSIFICATION	2.6883928220918594E-6	DEFECT
// Not overlapped // src1: o-----o // src2:         o-----o // res:  empty // Reuse src2	WITHOUT_CLASSIFICATION	0.9999988510055564	WITHOUT_CLASSIFICATION	1.1489944436001135E-6	DEFECT
// Overlapped // src1:    o--------o // src2:  o----o // src2:      o----o // src2:          o----o // src2:  o------------o	WITHOUT_CLASSIFICATION	0.999999590586331	WITHOUT_CLASSIFICATION	4.0941366894167784E-7	DEFECT
// src1:    o--------o // src2:  o------------o // res:     o--------o // Reuse src2	WITHOUT_CLASSIFICATION	0.9999857027603103	WITHOUT_CLASSIFICATION	1.429723968962241E-5	DEFECT
// src1:    o--------o // src2:  o----o // res:     o--o // Reuse the rest of src1	WITHOUT_CLASSIFICATION	0.999998686183641	WITHOUT_CLASSIFICATION	1.3138163589871354E-6	DEFECT
// src1:    o--------o // src2:      o----o // res:       o----o // Reuse the rest of src1	WITHOUT_CLASSIFICATION	0.999998686183641	WITHOUT_CLASSIFICATION	1.3138163589871354E-6	DEFECT
// Not overlapped // src1:          o-----o // src2: o----o	WITHOUT_CLASSIFICATION	0.9999997435032691	WITHOUT_CLASSIFICATION	2.56496730946417E-7	DEFECT
// 32 is the number of bits in `int'.	WITHOUT_CLASSIFICATION	0.99999901729885	WITHOUT_CLASSIFICATION	9.827011500105876E-7	DEFECT
// s&0x1f : 0-31	WITHOUT_CLASSIFICATION	0.9999921751356627	WITHOUT_CLASSIFICATION	7.82486433722552E-6	DEFECT
// '|' // '*' // '+' // '?' // '(' // ')' // '.' // '[' // '\' // '^' // '$' // '(?:' // '(?=' // '(?!' // '(?<=' // '(?<!' // '(?>' // '(?[' // '[:' in a character class // '(?#' // '(?' [\-,a-z,A-Z] // '(?(' // '-[' in a character class	WITHOUT_CLASSIFICATION	0.9999990980031248	WITHOUT_CLASSIFICATION	9.019968752033379E-7	DEFECT
//this.setLocale(Locale.getDefault());	WITHOUT_CLASSIFICATION	0.9999999959350093	WITHOUT_CLASSIFICATION	4.064990648866222E-9	DEFECT
//this.setLocale(locale);	WITHOUT_CLASSIFICATION	0.9999999481136509	WITHOUT_CLASSIFICATION	5.188634910058339E-8	DEFECT
// In a character class, this.chardata has one character, that is to say, // a pair of surrogates is composed and stored to this.chardata.	WITHOUT_CLASSIFICATION	0.9999985491073947	WITHOUT_CLASSIFICATION	1.4508926052780018E-6	DEFECT
// Through down	WITHOUT_CLASSIFICATION	0.9999459843016741	WITHOUT_CLASSIFICATION	5.401569832585329E-5	DEFECT
// Options	WITHOUT_CLASSIFICATION	0.9999995202485827	WITHOUT_CLASSIFICATION	4.7975141732045E-7	DEFECT
// conditional // this.offsets points the next of '('.	WITHOUT_CLASSIFICATION	0.9999926897062564	WITHOUT_CLASSIFICATION	7.310293743542614E-6	DEFECT
// '|'	WITHOUT_CLASSIFICATION	0.9999974370436497	WITHOUT_CLASSIFICATION	2.5629563501939156E-6	DEFECT
//tok = Token.createConcat(tok, this.parseFactor());	WITHOUT_CLASSIFICATION	0.9999996143116108	WITHOUT_CLASSIFICATION	3.856883892266865E-7	DEFECT
// ----------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999985581838235	WITHOUT_CLASSIFICATION	1.4418161764275235E-6	DEFECT
// ----------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999985581838235	WITHOUT_CLASSIFICATION	1.4418161764275235E-6	DEFECT
// ')'	WITHOUT_CLASSIFICATION	0.9999972311618645	WITHOUT_CLASSIFICATION	2.768838135482574E-6	DEFECT
// ')'	WITHOUT_CLASSIFICATION	0.9999972311618645	WITHOUT_CLASSIFICATION	2.768838135482574E-6	DEFECT
// ')'	WITHOUT_CLASSIFICATION	0.9999972311618645	WITHOUT_CLASSIFICATION	2.768838135482574E-6	DEFECT
// X+ -> XX*	WITHOUT_CLASSIFICATION	0.9999710958234895	WITHOUT_CLASSIFICATION	2.890417651049184E-5	DEFECT
// X? -> X|	WITHOUT_CLASSIFICATION	0.9999958853555043	WITHOUT_CLASSIFICATION	4.114644495720078E-6	DEFECT
// Skips ')'	WITHOUT_CLASSIFICATION	0.9999986399636023	WITHOUT_CLASSIFICATION	1.3600363976793866E-6	DEFECT
// Skips ')'	WITHOUT_CLASSIFICATION	0.9999986399636023	WITHOUT_CLASSIFICATION	1.3600363976793866E-6	DEFECT
// this.offset points the next of '('	WITHOUT_CLASSIFICATION	0.9999994999023205	WITHOUT_CLASSIFICATION	5.00097679451434E-7	DEFECT
// Parses a condition.	WITHOUT_CLASSIFICATION	0.9999090773784914	WITHOUT_CLASSIFICATION	9.092262150850961E-5	DEFECT
// Points '('.	WITHOUT_CLASSIFICATION	0.9999998070144529	WITHOUT_CLASSIFICATION	1.9298554699836417E-7	DEFECT
// Parses yes/no-patterns.	WITHOUT_CLASSIFICATION	0.9999842278743767	WITHOUT_CLASSIFICATION	1.577212562331786E-5	DEFECT
// this.offset points the next of '?'. // modifiers ::= [imsw]* ('-' [imsw]*)? ':'	WITHOUT_CLASSIFICATION	0.9999998786166666	WITHOUT_CLASSIFICATION	1.2138333332937126E-7	DEFECT
// '-' or ':'?	WITHOUT_CLASSIFICATION	0.9999974080121614	WITHOUT_CLASSIFICATION	2.591987838629574E-6	DEFECT
// ':'?	WITHOUT_CLASSIFICATION	0.9999945021011227	WITHOUT_CLASSIFICATION	5.497898877281034E-6	DEFECT
// such as (?-i)	WITHOUT_CLASSIFICATION	0.9999999830025351	WITHOUT_CLASSIFICATION	1.699746484132033E-8	DEFECT
// Must be in 0x0040-0x005f	WITHOUT_CLASSIFICATION	0.9999998209994914	WITHOUT_CLASSIFICATION	1.7900050875622608E-7	DEFECT
// through down	WITHOUT_CLASSIFICATION	0.9999255618394263	WITHOUT_CLASSIFICATION	7.4438160573713E-5	DEFECT
// this.offset -> next of '{'	WITHOUT_CLASSIFICATION	0.9999998373758294	WITHOUT_CLASSIFICATION	1.6262417066604765E-7	DEFECT
// {min,max}	WITHOUT_CLASSIFICATION	0.9999988618252733	WITHOUT_CLASSIFICATION	1.1381747267860836E-6	DEFECT
// assume {min,}	WITHOUT_CLASSIFICATION	0.9999999638568252	WITHOUT_CLASSIFICATION	3.6143174812062554E-8	DEFECT
//System.err.println("CLOSURE: "+min+", "+max);	WITHOUT_CLASSIFICATION	0.9999991626868351	WITHOUT_CLASSIFICATION	8.373131650647E-7	DEFECT
// '(?:' // '(?(' // (?modifiers ... )	WITHOUT_CLASSIFICATION	0.9999963057145468	WITHOUT_CLASSIFICATION	3.694285453268684E-6	DEFECT
// Skips '.'	WITHOUT_CLASSIFICATION	0.9999988683789388	WITHOUT_CLASSIFICATION	1.131621061213374E-6	DEFECT
// handle category escape	WITHOUT_CLASSIFICATION	0.9999999831843019	WITHOUT_CLASSIFICATION	1.681569804996026E-8	DEFECT
// '['	WITHOUT_CLASSIFICATION	0.9999979150689803	WITHOUT_CLASSIFICATION	2.0849310197536185E-6	DEFECT
// '^'	WITHOUT_CLASSIFICATION	0.9999974251567753	WITHOUT_CLASSIFICATION	2.5748432248059027E-6	DEFECT
// Literal char // . // XY // X|Y|Z // X* // [a-zA-Z] etc. // [^a-zA-Z] etc. // (X) or (?:X) // // ^ $ \b \B \< \> \A \Z \z // *? +? // strings // back references // (?=...) // (?!...) // (?<=...) // (?<!...) // (?>...) // (?ims-ims:...) // (?(...)yes|no)	WITHOUT_CLASSIFICATION	0.9999667117638166	WITHOUT_CLASSIFICATION	3.328823618339643E-5	DEFECT
// if not shorthands... // Here is no '-'.	WITHOUT_CLASSIFICATION	0.999994019370379	WITHOUT_CLASSIFICATION	5.9806296209687866E-6	DEFECT
//tok.dumpRanges();	WITHOUT_CLASSIFICATION	0.999999367849869	WITHOUT_CLASSIFICATION	6.321501309814845E-7	DEFECT
// *** It is not a bug.	WITHOUT_CLASSIFICATION	0.9941460592829712	WITHOUT_CLASSIFICATION	0.005853940717028785	DEFECT
// for CLOSURE	WITHOUT_CLASSIFICATION	0.9999998958995642	WITHOUT_CLASSIFICATION	1.0410043574318651E-7	DEFECT
// for CLOSURE	WITHOUT_CLASSIFICATION	0.9999998958995642	WITHOUT_CLASSIFICATION	1.0410043574318651E-7	DEFECT
// for CLOSURE	WITHOUT_CLASSIFICATION	0.9999998958995642	WITHOUT_CLASSIFICATION	1.0410043574318651E-7	DEFECT
// for STRING	WITHOUT_CLASSIFICATION	0.9999998239407397	WITHOUT_CLASSIFICATION	1.7605926028012213E-7	DEFECT
// for STRING	WITHOUT_CLASSIFICATION	0.9999998239407397	WITHOUT_CLASSIFICATION	1.7605926028012213E-7	DEFECT
// *******	WITHOUT_CLASSIFICATION	0.999979617535366	WITHOUT_CLASSIFICATION	2.038246463399153E-5	DEFECT
// ***** Really?	WITHOUT_CLASSIFICATION	0.9998256460278988	WITHOUT_CLASSIFICATION	1.7435397210115755E-4	DEFECT
// ***** Really?	WITHOUT_CLASSIFICATION	0.9998256460278988	WITHOUT_CLASSIFICATION	1.7435397210115755E-4	DEFECT
// infinity	WITHOUT_CLASSIFICATION	0.9999981576625692	WITHOUT_CLASSIFICATION	1.8423374309438975E-6	DEFECT
// When this.child.getMaxLength() < 0, // this returns minus value	WITHOUT_CLASSIFICATION	0.9999981913710346	WITHOUT_CLASSIFICATION	1.8086289652723315E-6	DEFECT
// ******	WITHOUT_CLASSIFICATION	0.999979617535366	WITHOUT_CLASSIFICATION	2.038246463399153E-5	DEFECT
/*               *  a|b|c -> FC_TERMINAL               *  a|.|c -> FC_ANY               *  a|b|  -> FC_CONTINUE               */	WITHOUT_CLASSIFICATION	0.999999986385792	WITHOUT_CLASSIFICATION	1.3614207974336919E-8	DEFECT
// ****	WITHOUT_CLASSIFICATION	0.999979617535366	WITHOUT_CLASSIFICATION	2.038246463399153E-5	DEFECT
// **** We can not optimize.	WITHOUT_CLASSIFICATION	0.9999981431692594	WITHOUT_CLASSIFICATION	1.8568307406261537E-6	DEFECT
// **** We can not optimize.	WITHOUT_CLASSIFICATION	0.9999981431692594	WITHOUT_CLASSIFICATION	1.8568307406261537E-6	DEFECT
// ------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999985581838235	WITHOUT_CLASSIFICATION	1.4418161764275235E-6	DEFECT
//blockNames in UNICODE 3.1 that supported by XML Schema REC             	WITHOUT_CLASSIFICATION	0.9998562227086131	WITHOUT_CLASSIFICATION	1.43777291386898E-4	DEFECT
/*0000..007F;*/	WITHOUT_CLASSIFICATION	0.9996117682839823	WITHOUT_CLASSIFICATION	3.882317160177224E-4	DEFECT
/*0080..00FF;*/	WITHOUT_CLASSIFICATION	0.9993274142108619	WITHOUT_CLASSIFICATION	6.725857891381635E-4	DEFECT
/*0100..017F;*/	WITHOUT_CLASSIFICATION	0.9994017287361311	WITHOUT_CLASSIFICATION	5.982712638689477E-4	DEFECT
/*0180..024F;*/	WITHOUT_CLASSIFICATION	0.9997159041784847	WITHOUT_CLASSIFICATION	2.840958215153439E-4	DEFECT
/*0250..02AF;*/	WITHOUT_CLASSIFICATION	0.9988771072610636	WITHOUT_CLASSIFICATION	0.0011228927389363927	DEFECT
/*02B0..02FF;*/	WITHOUT_CLASSIFICATION	0.9991139618139202	WITHOUT_CLASSIFICATION	8.860381860798612E-4	DEFECT
/*0300..036F;*/	WITHOUT_CLASSIFICATION	0.999377492510028	WITHOUT_CLASSIFICATION	6.225074899718962E-4	DEFECT
/*0370..03FF;*/	WITHOUT_CLASSIFICATION	0.9993769589670025	WITHOUT_CLASSIFICATION	6.230410329975831E-4	DEFECT
/*0400..04FF;*/	WITHOUT_CLASSIFICATION	0.9994924213799462	WITHOUT_CLASSIFICATION	5.075786200537933E-4	DEFECT
/*0530..058F;*/	WITHOUT_CLASSIFICATION	0.9996159953664397	WITHOUT_CLASSIFICATION	3.8400463356026926E-4	DEFECT
/*0600..06FF;*/	WITHOUT_CLASSIFICATION	0.9994503915577898	WITHOUT_CLASSIFICATION	5.496084422102727E-4	DEFECT
/*0700..074F;*/	WITHOUT_CLASSIFICATION	0.9994887576491325	WITHOUT_CLASSIFICATION	5.112423508675741E-4	DEFECT
/*0780..07BF;*/	WITHOUT_CLASSIFICATION	0.9993399121475054	WITHOUT_CLASSIFICATION	6.600878524945796E-4	DEFECT
/*0900..097F;*/	WITHOUT_CLASSIFICATION	0.9990769788039722	WITHOUT_CLASSIFICATION	9.230211960279054E-4	DEFECT
/*0980..09FF;*/	WITHOUT_CLASSIFICATION	0.999515307572134	WITHOUT_CLASSIFICATION	4.846924278659494E-4	DEFECT
/*0A80..0AFF;*/	WITHOUT_CLASSIFICATION	0.9994278125331666	WITHOUT_CLASSIFICATION	5.721874668333092E-4	DEFECT
/*0B00..0B7F;*/	WITHOUT_CLASSIFICATION	0.998840702974562	WITHOUT_CLASSIFICATION	0.0011592970254380433	DEFECT
/*0B80..0BFF;*/	WITHOUT_CLASSIFICATION	0.9992595981633515	WITHOUT_CLASSIFICATION	7.40401836648374E-4	DEFECT
/*0C00..0C7F;*/	WITHOUT_CLASSIFICATION	0.9995992575623744	WITHOUT_CLASSIFICATION	4.007424376255538E-4	DEFECT
/*0C80..0CFF;*/	WITHOUT_CLASSIFICATION	0.9997462051101867	WITHOUT_CLASSIFICATION	2.537948898132741E-4	DEFECT
/*0D80..0DFF;*/	WITHOUT_CLASSIFICATION	0.9994975641629564	WITHOUT_CLASSIFICATION	5.024358370435441E-4	DEFECT
/*0E00..0E7F;*/	WITHOUT_CLASSIFICATION	0.999526536200295	WITHOUT_CLASSIFICATION	4.7346379970512116E-4	DEFECT
/*0E80..0EFF;*/	WITHOUT_CLASSIFICATION	0.9996949779323688	WITHOUT_CLASSIFICATION	3.050220676311498E-4	DEFECT
/*0F00..0FFF;*/	WITHOUT_CLASSIFICATION	0.9994725567617065	WITHOUT_CLASSIFICATION	5.274432382934501E-4	DEFECT
/*1000..109F;*/	WITHOUT_CLASSIFICATION	0.9993143839766554	WITHOUT_CLASSIFICATION	6.856160233446554E-4	DEFECT
/*1100..11FF;*/	WITHOUT_CLASSIFICATION	0.9996838649889038	WITHOUT_CLASSIFICATION	3.161350110961601E-4	DEFECT
/*1200..137F;*/	WITHOUT_CLASSIFICATION	0.9988286647741521	WITHOUT_CLASSIFICATION	0.0011713352258479537	DEFECT
/*13A0..13FF;*/	WITHOUT_CLASSIFICATION	0.9995954248630787	WITHOUT_CLASSIFICATION	4.045751369211763E-4	DEFECT
/*1400..167F;*/	WITHOUT_CLASSIFICATION	0.9994574074379188	WITHOUT_CLASSIFICATION	5.425925620813006E-4	DEFECT
/*1680..169F;*/	WITHOUT_CLASSIFICATION	0.9996423804145921	WITHOUT_CLASSIFICATION	3.576195854080031E-4	DEFECT
/*1780..17FF;*/	WITHOUT_CLASSIFICATION	0.9994876376539243	WITHOUT_CLASSIFICATION	5.123623460756418E-4	DEFECT
/*1800..18AF;*/	WITHOUT_CLASSIFICATION	0.999420749221513	WITHOUT_CLASSIFICATION	5.792507784869609E-4	DEFECT
/*1E00..1EFF;*/	WITHOUT_CLASSIFICATION	0.9996200869570528	WITHOUT_CLASSIFICATION	3.799130429472468E-4	DEFECT
/*1F00..1FFF;*/	WITHOUT_CLASSIFICATION	0.9995326176166041	WITHOUT_CLASSIFICATION	4.6738238339596484E-4	DEFECT
/*2070..209F;*/	WITHOUT_CLASSIFICATION	0.9992772560300544	WITHOUT_CLASSIFICATION	7.227439699456705E-4	DEFECT
/*20A0..20CF;*/	WITHOUT_CLASSIFICATION	0.999505840329138	WITHOUT_CLASSIFICATION	4.941596708619263E-4	DEFECT
/*20D0..20FF;*/	WITHOUT_CLASSIFICATION	0.9991944189566593	WITHOUT_CLASSIFICATION	8.055810433406508E-4	DEFECT
/*2100..214F;*/	WITHOUT_CLASSIFICATION	0.9994731170585395	WITHOUT_CLASSIFICATION	5.268829414606019E-4	DEFECT
/*2150..218F;*/	WITHOUT_CLASSIFICATION	0.9995060036525212	WITHOUT_CLASSIFICATION	4.939963474788647E-4	DEFECT
/*2200..22FF;*/	WITHOUT_CLASSIFICATION	0.9989419329428649	WITHOUT_CLASSIFICATION	0.0010580670571350126	DEFECT
/*2300..23FF;*/	WITHOUT_CLASSIFICATION	0.9993770630234312	WITHOUT_CLASSIFICATION	6.229369765687504E-4	DEFECT
/*2400..243F;*/	WITHOUT_CLASSIFICATION	0.999351673944106	WITHOUT_CLASSIFICATION	6.483260558940191E-4	DEFECT
/*2440..245F;*/	WITHOUT_CLASSIFICATION	0.9993433881573751	WITHOUT_CLASSIFICATION	6.566118426248452E-4	DEFECT
/*2460..24FF;*/	WITHOUT_CLASSIFICATION	0.9995474903789703	WITHOUT_CLASSIFICATION	4.5250962102975505E-4	DEFECT
/*2580..259F;*/	WITHOUT_CLASSIFICATION	0.9990958723389953	WITHOUT_CLASSIFICATION	9.041276610047299E-4	DEFECT
/*25A0..25FF;*/	WITHOUT_CLASSIFICATION	0.9991021061451965	WITHOUT_CLASSIFICATION	8.978938548035283E-4	DEFECT
/*2600..26FF;*/	WITHOUT_CLASSIFICATION	0.9993046739681125	WITHOUT_CLASSIFICATION	6.953260318874521E-4	DEFECT
/*2700..27BF;*/	WITHOUT_CLASSIFICATION	0.9983340761460429	WITHOUT_CLASSIFICATION	0.0016659238539572328	DEFECT
/*2800..28FF;*/	WITHOUT_CLASSIFICATION	0.9993182940738813	WITHOUT_CLASSIFICATION	6.817059261186098E-4	DEFECT
/*2E80..2EFF;*/	WITHOUT_CLASSIFICATION	0.9996211644737407	WITHOUT_CLASSIFICATION	3.788355262592285E-4	DEFECT
/*2F00..2FDF;*/	WITHOUT_CLASSIFICATION	0.9992419935584359	WITHOUT_CLASSIFICATION	7.580064415640167E-4	DEFECT
/*3000..303F;*/	WITHOUT_CLASSIFICATION	0.9992536184019336	WITHOUT_CLASSIFICATION	7.463815980663817E-4	DEFECT
/*3040..309F;*/	WITHOUT_CLASSIFICATION	0.999530398208832	WITHOUT_CLASSIFICATION	4.69601791167875E-4	DEFECT
/*30A0..30FF;*/	WITHOUT_CLASSIFICATION	0.9995344363938347	WITHOUT_CLASSIFICATION	4.6556360616539376E-4	DEFECT
/*3100..312F;*/	WITHOUT_CLASSIFICATION	0.9994069058814369	WITHOUT_CLASSIFICATION	5.930941185632538E-4	DEFECT
/*3130..318F;*/	WITHOUT_CLASSIFICATION	0.9997451799056939	WITHOUT_CLASSIFICATION	2.548200943061347E-4	DEFECT
/*31A0..31BF;*/	WITHOUT_CLASSIFICATION	0.9991519468052579	WITHOUT_CLASSIFICATION	8.480531947422539E-4	DEFECT
/*3200..32FF;*/	WITHOUT_CLASSIFICATION	0.9987696026763448	WITHOUT_CLASSIFICATION	0.0012303973236551385	DEFECT
/*3300..33FF;*/	WITHOUT_CLASSIFICATION	0.9994905591058648	WITHOUT_CLASSIFICATION	5.09440894135158E-4	DEFECT
/*3400..4DB5;*/	WITHOUT_CLASSIFICATION	0.9979400567008465	WITHOUT_CLASSIFICATION	0.0020599432991533742	DEFECT
/*4E00..9FFF;*/	WITHOUT_CLASSIFICATION	0.9995260102978323	WITHOUT_CLASSIFICATION	4.739897021677034E-4	DEFECT
/*A490..A4CF;*/	WITHOUT_CLASSIFICATION	0.9996585274947695	WITHOUT_CLASSIFICATION	3.414725052305651E-4	DEFECT
/*AC00..D7A3;*/	WITHOUT_CLASSIFICATION	0.9993421959885799	WITHOUT_CLASSIFICATION	6.578040114202095E-4	DEFECT
/*E000..F8FF;*/	WITHOUT_CLASSIFICATION	0.9995400729121929	WITHOUT_CLASSIFICATION	4.5992708780712095E-4	DEFECT
/*F900..FAFF;*/	WITHOUT_CLASSIFICATION	0.9989295215294635	WITHOUT_CLASSIFICATION	0.001070478470536463	DEFECT
/*FB00..FB4F;*/	WITHOUT_CLASSIFICATION	0.9990302399000197	WITHOUT_CLASSIFICATION	9.69760099980269E-4	DEFECT
/*FE20..FE2F;*/	WITHOUT_CLASSIFICATION	0.9995488801532857	WITHOUT_CLASSIFICATION	4.51119846714307E-4	DEFECT
/*FE30..FE4F;*/	WITHOUT_CLASSIFICATION	0.9997360183056001	WITHOUT_CLASSIFICATION	2.639816943999102E-4	DEFECT
/*FE50..FE6F;*/	WITHOUT_CLASSIFICATION	0.9995333184918783	WITHOUT_CLASSIFICATION	4.666815081217572E-4	DEFECT
/*FE70..FEFE;*/	WITHOUT_CLASSIFICATION	0.99965462034031	WITHOUT_CLASSIFICATION	3.4537965968994025E-4	DEFECT
/*FEFF..FEFF;*/	WITHOUT_CLASSIFICATION	0.9997336074090061	WITHOUT_CLASSIFICATION	2.6639259099397767E-4	DEFECT
/*10300..1032F;*/	WITHOUT_CLASSIFICATION	0.9993251786662201	WITHOUT_CLASSIFICATION	6.748213337799028E-4	DEFECT
/*10330..1034F;*/	WITHOUT_CLASSIFICATION	0.9995925462968864	WITHOUT_CLASSIFICATION	4.0745370311362646E-4	DEFECT
/*10400..1044F;*/	WITHOUT_CLASSIFICATION	0.999581396234626	WITHOUT_CLASSIFICATION	4.18603765373941E-4	DEFECT
/*1D000..1D0FF;*/	WITHOUT_CLASSIFICATION	0.9992864196461897	WITHOUT_CLASSIFICATION	7.135803538103501E-4	DEFECT
/*1D100..1D1FF;*/	WITHOUT_CLASSIFICATION	0.9994206769174492	WITHOUT_CLASSIFICATION	5.793230825508138E-4	DEFECT
/*20000..2A6D6;*/	WITHOUT_CLASSIFICATION	0.998053533428912	WITHOUT_CLASSIFICATION	0.0019464665710878914	DEFECT
/*2F800..2FA1F;*/	WITHOUT_CLASSIFICATION	0.9992279988943764	WITHOUT_CLASSIFICATION	7.720011056236073E-4	DEFECT
/*E0000..E007F;*/	WITHOUT_CLASSIFICATION	0.9996989846095974	WITHOUT_CLASSIFICATION	3.0101539040256354E-4	DEFECT
//missing 2 private use add manually	WITHOUT_CLASSIFICATION	0.9999819004477664	WITHOUT_CLASSIFICATION	1.809955223367893E-5	DEFECT
// 84	WITHOUT_CLASSIFICATION	0.9999974639275538	WITHOUT_CLASSIFICATION	2.536072446238647E-6	DEFECT
//build table of Pi values	WITHOUT_CLASSIFICATION	0.9999998830012715	WITHOUT_CLASSIFICATION	1.1699872854757322E-7	DEFECT
//build table of Pf values	WITHOUT_CLASSIFICATION	0.999999882733682	WITHOUT_CLASSIFICATION	1.1726631802147828E-7	DEFECT
// for all characters	WITHOUT_CLASSIFICATION	0.9999999932751114	WITHOUT_CLASSIFICATION	6.724888607942524E-9	DEFECT
// Unassigned	WITHOUT_CLASSIFICATION	0.9999999400226902	WITHOUT_CLASSIFICATION	5.997730984162675E-8	DEFECT
// TR#18 1.2	WITHOUT_CLASSIFICATION	0.999996968845064	WITHOUT_CLASSIFICATION	3.0311549359669177E-6	DEFECT
// Z	WITHOUT_CLASSIFICATION	0.9999972880494404	WITHOUT_CLASSIFICATION	2.711950559562971E-6	DEFECT
// Lu Ll Lo Nd	WITHOUT_CLASSIFICATION	0.9999992624040828	WITHOUT_CLASSIFICATION	7.37595917246036E-7	DEFECT
// Perl extension	WITHOUT_CLASSIFICATION	0.9999970899264065	WITHOUT_CLASSIFICATION	2.910073593538229E-6	DEFECT
//this.setLocale(locale);	WITHOUT_CLASSIFICATION	0.9999999481136509	WITHOUT_CLASSIFICATION	5.188634910058339E-8	DEFECT
// X+ -> XX*	WITHOUT_CLASSIFICATION	0.9999710958234895	WITHOUT_CLASSIFICATION	2.890417651049184E-5	DEFECT
// X? -> X|	WITHOUT_CLASSIFICATION	0.9999958853555043	WITHOUT_CLASSIFICATION	4.114644495720078E-6	DEFECT
// Skips ')'	WITHOUT_CLASSIFICATION	0.9999986399636023	WITHOUT_CLASSIFICATION	1.3600363976793866E-6	DEFECT
// '['	WITHOUT_CLASSIFICATION	0.9999979150689803	WITHOUT_CLASSIFICATION	2.0849310197536185E-6	DEFECT
// '^'	WITHOUT_CLASSIFICATION	0.9999974251567753	WITHOUT_CLASSIFICATION	2.5748432248059027E-6	DEFECT
// Skips ']'	WITHOUT_CLASSIFICATION	0.9999990185392975	WITHOUT_CLASSIFICATION	9.814607025175867E-7	DEFECT
// for STRING	WITHOUT_CLASSIFICATION	0.9999998239407397	WITHOUT_CLASSIFICATION	1.7605926028012213E-7	DEFECT
// ------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999985581838235	WITHOUT_CLASSIFICATION	1.4418161764275235E-6	DEFECT
// \pM* // \PM + \pM*	WITHOUT_CLASSIFICATION	0.9999932800242932	WITHOUT_CLASSIFICATION	6.719975706827241E-6	DEFECT
// Lu // Ll // Lo	WITHOUT_CLASSIFICATION	0.9999979974292371	WITHOUT_CLASSIFICATION	2.0025707629721445E-6	DEFECT
// Lu Ll Lo // Nd	WITHOUT_CLASSIFICATION	0.999999425605346	WITHOUT_CLASSIFICATION	5.743946540734068E-7	DEFECT
// synchronized // if null	WITHOUT_CLASSIFICATION	0.9999984224301774	WITHOUT_CLASSIFICATION	1.5775698224555965E-6	DEFECT
//DEBUG //System.err.println("isRegisterNonXS: "+name);	WITHOUT_CLASSIFICATION	0.9999776767793931	WITHOUT_CLASSIFICATION	2.2323220606951966E-5	DEFECT
// [{ASSIGNED}]-[{M},{C}]	WITHOUT_CLASSIFICATION	0.999999436760836	WITHOUT_CLASSIFICATION	5.632391639453757E-7	DEFECT
// hangul_medial and hangul_final // extras	WITHOUT_CLASSIFICATION	0.9999999505356099	WITHOUT_CLASSIFICATION	4.94643900197143E-8	DEFECT
// base_char?	WITHOUT_CLASSIFICATION	0.9999999896499524	WITHOUT_CLASSIFICATION	1.0350047540612601E-8	DEFECT
//case 0x0b:  ret = "\\v";  break;	WITHOUT_CLASSIFICATION	0.9999962987326162	WITHOUT_CLASSIFICATION	3.7012673838109942E-6	DEFECT
// This is CONCAT, and new child is CONCAT.	WITHOUT_CLASSIFICATION	0.9999984537324562	WITHOUT_CLASSIFICATION	1.5462675438524457E-6	DEFECT
// Recursion	WITHOUT_CLASSIFICATION	0.9999985723202541	WITHOUT_CLASSIFICATION	1.4276797459330902E-6	DEFECT
//System.err.println("Merge '"+previous+"' and '"+tok+"'.");	WITHOUT_CLASSIFICATION	0.9999999740864876	WITHOUT_CLASSIFICATION	2.5913512433467946E-8	DEFECT
// Replace previous token by STRING	WITHOUT_CLASSIFICATION	0.9999863798395274	WITHOUT_CLASSIFICATION	1.3620160472665585E-5	DEFECT
// Subraction	WITHOUT_CLASSIFICATION	0.9999976980382524	WITHOUT_CLASSIFICATION	2.301961747538498E-6	DEFECT
// Exit this loop	WITHOUT_CLASSIFICATION	0.999998456199524	WITHOUT_CLASSIFICATION	1.5438004759444624E-6	DEFECT
// if not shorthands...	WITHOUT_CLASSIFICATION	0.9999975549933854	WITHOUT_CLASSIFICATION	2.4450066145738474E-6	DEFECT
// Here is no '-'.	WITHOUT_CLASSIFICATION	0.9999997538346945	WITHOUT_CLASSIFICATION	2.4616530548725586E-7	DEFECT
// c '-' ']' -> '-' is a single-range.	WITHOUT_CLASSIFICATION	0.9999999702506298	WITHOUT_CLASSIFICATION	2.974937012935672E-8	DEFECT
// if - is at the last position of the group	WITHOUT_CLASSIFICATION	0.9999934591342986	WITHOUT_CLASSIFICATION	6.540865701378984E-6	DEFECT
// LINE FEED U+000A	WITHOUT_CLASSIFICATION	0.9999973089637468	WITHOUT_CLASSIFICATION	2.6910362531185984E-6	DEFECT
// CRRIAGE RETURN U+000D	WITHOUT_CLASSIFICATION	0.9999994440328819	WITHOUT_CLASSIFICATION	5.559671181365373E-7	DEFECT
// HORIZONTAL TABULATION U+0009	WITHOUT_CLASSIFICATION	0.9999973196035222	WITHOUT_CLASSIFICATION	2.680396477740209E-6	DEFECT
// return actucal char	WITHOUT_CLASSIFICATION	0.999999920140015	WITHOUT_CLASSIFICATION	7.985998493942109E-8	DEFECT
// \ + c // backsolidus	WITHOUT_CLASSIFICATION	0.9999998760192876	WITHOUT_CLASSIFICATION	1.239807122892957E-7	DEFECT
// Found '-' // Is this '-' is a from-to token?? // Skips '-'	WITHOUT_CLASSIFICATION	0.9999926669846364	WITHOUT_CLASSIFICATION	7.3330153635815684E-6	DEFECT
// getIANA2JavaMapping(String):String	WITHOUT_CLASSIFICATION	0.9999986343773156	WITHOUT_CLASSIFICATION	1.3656226843185918E-6	DEFECT
// This implementation was changed to not introduce multi line content.	WITHOUT_CLASSIFICATION	0.9999259355946403	WITHOUT_CLASSIFICATION	7.406440535972199E-5	DEFECT
// form integral number of 6-bit groups	WITHOUT_CLASSIFICATION	0.9999999754102604	WITHOUT_CLASSIFICATION	2.4589739561989916E-8	DEFECT
//encodedData[encodedIndex] = 0xa;	WITHOUT_CLASSIFICATION	0.9999924117935542	WITHOUT_CLASSIFICATION	7.58820644578409E-6	DEFECT
// remove white spaces	WITHOUT_CLASSIFICATION	0.9999998540418646	WITHOUT_CLASSIFICATION	1.4595813537797943E-7	DEFECT
//should be divisible by four	WITHOUT_CLASSIFICATION	0.9999995657114362	WITHOUT_CLASSIFICATION	4.342885638516875E-7	DEFECT
//if found "no data" just return null	WITHOUT_CLASSIFICATION	0.9999999876238551	WITHOUT_CLASSIFICATION	1.2376144767763131E-8	DEFECT
//if found "no data" just return null	WITHOUT_CLASSIFICATION	0.9999999876238551	WITHOUT_CLASSIFICATION	1.2376144767763131E-8	DEFECT
//Check if they are PAD characters //Two PAD e.g. 3c[Pad][Pad] //last 4 bits should be zero	WITHOUT_CLASSIFICATION	0.9999999861799949	WITHOUT_CLASSIFICATION	1.3820005192339913E-8	DEFECT
//One PAD  e.g. 3cQ[Pad]	WITHOUT_CLASSIFICATION	0.9999988540736638	WITHOUT_CLASSIFICATION	1.1459263361178656E-6	DEFECT
//last 2 bits should be zero	WITHOUT_CLASSIFICATION	0.9999987864935411	WITHOUT_CLASSIFICATION	1.2135064588941164E-6	DEFECT
//an error  like "3c[Pad]r", "3cdX", "3cXd", "3cXX" where X is non data	WITHOUT_CLASSIFICATION	0.9988339732132011	WITHOUT_CLASSIFICATION	0.0011660267867988497	DEFECT
//No PAD e.g 3cQl	WITHOUT_CLASSIFICATION	0.999994376013211	WITHOUT_CLASSIFICATION	5.6239867890520986E-6	DEFECT
// count characters that's not whitespace	WITHOUT_CLASSIFICATION	0.9999999397009303	WITHOUT_CLASSIFICATION	6.029906974990201E-8	DEFECT
/* * format validation * * This class encodes/decodes hexadecimal data * @author Jeffrey Rodriguez */	WITHOUT_CLASSIFICATION	0.9997488799807214	WITHOUT_CLASSIFICATION	2.5112001927866105E-4	DEFECT
// add IANA to Java encoding mappings.	WITHOUT_CLASSIFICATION	0.999998690964243	WITHOUT_CLASSIFICATION	1.3090357569514772E-6	DEFECT
// proposed addition (see above for details):	WITHOUT_CLASSIFICATION	0.9999641710322544	WITHOUT_CLASSIFICATION	3.582896774564852E-5	DEFECT
// Add support for Cp1252 and its friends	WITHOUT_CLASSIFICATION	0.9999993728270063	WITHOUT_CLASSIFICATION	6.271729936323356E-7	DEFECT
// <clinit>()	WITHOUT_CLASSIFICATION	0.9999994544160197	WITHOUT_CLASSIFICATION	5.455839802756676E-7	DEFECT
// added since this encoding only differs w.r.t. presentation 	WITHOUT_CLASSIFICATION	0.9999997088840828	WITHOUT_CLASSIFICATION	2.911159171704917E-7	DEFECT
// removeIANA2JavaMapping(String):String	WITHOUT_CLASSIFICATION	0.9999963957506222	WITHOUT_CLASSIFICATION	3.604249377872029E-6	DEFECT
// putIANA2JavaMapping(String,String)	WITHOUT_CLASSIFICATION	0.9999996859645353	WITHOUT_CLASSIFICATION	3.1403546478678983E-7	DEFECT
// putJava2IANAMapping(String,String)	WITHOUT_CLASSIFICATION	0.9999997236444834	WITHOUT_CLASSIFICATION	2.7635551654577055E-7	DEFECT
// getJava2IANAMapping(String):String	WITHOUT_CLASSIFICATION	0.9999990969980361	WITHOUT_CLASSIFICATION	9.030019638334211E-7	DEFECT
// Adding new aliases as proposed in // http://lists.w3.org/Archives/Public/ietf-charset/2002JulSep/0058.html	WITHOUT_CLASSIFICATION	0.9999992795041216	WITHOUT_CLASSIFICATION	7.204958783621693E-7	DEFECT
// REVISIT: //   j:CNS11643 -> EUC-TW? //   ISO-2022-CN? ISO-2022-CN-EXT?	WITHOUT_CLASSIFICATION	0.9999875721897759	WITHOUT_CLASSIFICATION	1.2427810224190089E-5	DEFECT
// add Java to IANA encoding mappings //fJava2IANAMap.put("8859_1",    "US-ASCII"); // ?	WITHOUT_CLASSIFICATION	0.9999979440716018	WITHOUT_CLASSIFICATION	2.0559283981876423E-6	DEFECT
// // Public static methods //	WITHOUT_CLASSIFICATION	0.9999999876712176	WITHOUT_CLASSIFICATION	1.2328782507875913E-8	DEFECT
// removeJava2IANAMapping	WITHOUT_CLASSIFICATION	0.9999987626811205	WITHOUT_CLASSIFICATION	1.2373188794869078E-6	DEFECT
// class EncodingMap	WITHOUT_CLASSIFICATION	0.999995849043199	WITHOUT_CLASSIFICATION	4.1509568008735965E-6	DEFECT
//RFC 2732 added '[' and ']' as reserved characters	WITHOUT_CLASSIFICATION	0.9999999760230837	WITHOUT_CLASSIFICATION	2.3976916364009865E-8	DEFECT
// Add ASCII Digits and ASCII Hex Numbers	WITHOUT_CLASSIFICATION	0.9999999626452782	WITHOUT_CLASSIFICATION	3.735472175885169E-8	DEFECT
// Add ASCII Letters and ASCII Hex Numbers	WITHOUT_CLASSIFICATION	0.9999998811962609	WITHOUT_CLASSIFICATION	1.1880373908079787E-7	DEFECT
// Add ASCII Letters	WITHOUT_CLASSIFICATION	0.9999998577034858	WITHOUT_CLASSIFICATION	1.422965142282251E-7	DEFECT
// Add Reserved Characters	WITHOUT_CLASSIFICATION	0.9999999974690585	WITHOUT_CLASSIFICATION	2.530941376622528E-9	DEFECT
// Add Mark Characters	WITHOUT_CLASSIFICATION	0.9999999965052846	WITHOUT_CLASSIFICATION	3.494715393915163E-9	DEFECT
// Add Scheme Characters	WITHOUT_CLASSIFICATION	0.9999999986790467	WITHOUT_CLASSIFICATION	1.3209533363627202E-9	DEFECT
// Add Path Characters	WITHOUT_CLASSIFICATION	0.9999999944521959	WITHOUT_CLASSIFICATION	5.547804028027099E-9	DEFECT
// Just use null.	WITHOUT_CLASSIFICATION	0.9999988149131148	WITHOUT_CLASSIFICATION	1.1850868852041414E-6	DEFECT
// just make a copy of the base if spec is empty	WITHOUT_CLASSIFICATION	0.9999999920701572	WITHOUT_CLASSIFICATION	7.92984284303771E-9	DEFECT
// search backwards starting from character before ':'.	WITHOUT_CLASSIFICATION	0.9999999751014299	WITHOUT_CLASSIFICATION	2.489857009719515E-8	DEFECT
// Neither 'scheme:' or 'scheme:#fragment' are valid URIs.	WITHOUT_CLASSIFICATION	0.9999999970695395	WITHOUT_CLASSIFICATION	2.930460541441041E-9	DEFECT
// Authority will be everything up to path, query or fragment	WITHOUT_CLASSIFICATION	0.9999934934674699	WITHOUT_CLASSIFICATION	6.506532530147463E-6	DEFECT
// Attempt to parse authority. If the section is an empty string // this is a valid server based authority, so set the host to this // value.	WITHOUT_CLASSIFICATION	0.9999996926479703	WITHOUT_CLASSIFICATION	3.073520297531811E-7	DEFECT
// Resolve relative URI to base URI - see RFC 2396 Section 5.2 // In some cases, it might make more sense to throw an exception // (when scheme is specified is the string spec and the base URI // is also specified, for example), but we're just following the // RFC specifications	WITHOUT_CLASSIFICATION	0.9999969875979179	WITHOUT_CLASSIFICATION	3.0124020821095005E-6	DEFECT
// check for absolute path - RFC 2396 5.2 #5	WITHOUT_CLASSIFICATION	0.999999821185773	WITHOUT_CLASSIFICATION	1.7881422692480931E-7	DEFECT
// 6a - get all but the last segment of the base URI path	WITHOUT_CLASSIFICATION	0.9999987654299561	WITHOUT_CLASSIFICATION	1.234570043796919E-6	DEFECT
// check for scheme - RFC 2396 5.2 #3 // if we found a scheme, it means absolute URI, so we're done	WITHOUT_CLASSIFICATION	0.9999999977693815	WITHOUT_CLASSIFICATION	2.2306184262981345E-9	DEFECT
// check for authority - RFC 2396 5.2 #4 // if we found a host, then we've got a network path, so we're done	WITHOUT_CLASSIFICATION	0.999995477656408	WITHOUT_CLASSIFICATION	4.522343592050168E-6	DEFECT
// if we get to this point, we need to resolve relative path // RFC 2396 5.2 #6	WITHOUT_CLASSIFICATION	0.9999964852348381	WITHOUT_CLASSIFICATION	3.514765162024307E-6	DEFECT
// 6b - append the relative URI path	WITHOUT_CLASSIFICATION	0.9999974793130074	WITHOUT_CLASSIFICATION	2.5206869926983775E-6	DEFECT
// 6c - remove all "./" where "." is a complete path segment	WITHOUT_CLASSIFICATION	0.9999534993132829	WITHOUT_CLASSIFICATION	4.6500686717111986E-5	DEFECT
// 6d - remove "." if path ends with "." as a complete path segment	WITHOUT_CLASSIFICATION	0.9999842855404663	WITHOUT_CLASSIFICATION	1.571445953374052E-5	DEFECT
// 6f - remove ending "<segment>/.." where "<segment>" is a // complete path segment	WITHOUT_CLASSIFICATION	0.9995350428370924	WITHOUT_CLASSIFICATION	4.649571629075941E-4	DEFECT
// userinfo is everything up to @	WITHOUT_CLASSIFICATION	0.9999995896762164	WITHOUT_CLASSIFICATION	4.103237836062301E-7	DEFECT
// host is everything up to last ':', or up to  // and including ']' if followed by ':'.	WITHOUT_CLASSIFICATION	0.9999999834921235	WITHOUT_CLASSIFICATION	1.6507876475114496E-8	DEFECT
// port	WITHOUT_CLASSIFICATION	0.999995308869699	WITHOUT_CLASSIFICATION	4.691130301060869E-6	DEFECT
// Check if the host is well formed.	WITHOUT_CLASSIFICATION	0.9999999499777797	WITHOUT_CLASSIFICATION	5.0022220161849706E-8	DEFECT
// Check that port is well formed if it exists. // REVISIT: There's no restriction on port value ranges, but // perform the same check as in setPort to be consistent. Pass // in a string to this method instead of an integer.	WITHOUT_CLASSIFICATION	0.9999996260239762	WITHOUT_CLASSIFICATION	3.739760237608843E-7	DEFECT
// Check that userinfo is well formed if it exists.	WITHOUT_CLASSIFICATION	0.9999999684092686	WITHOUT_CLASSIFICATION	3.159073124991458E-8	DEFECT
// Userinfo can contain alphanumerics, mark characters, escaped // and ';',':','&','=','+','$',','	WITHOUT_CLASSIFICATION	0.9999999884621941	WITHOUT_CLASSIFICATION	1.15378059744929E-8	DEFECT
// check for valid escape sequence	WITHOUT_CLASSIFICATION	0.9999999901484843	WITHOUT_CLASSIFICATION	9.851515626688806E-9	DEFECT
// can check against path characters because the set // is the same except for '/' which we've already excluded.	WITHOUT_CLASSIFICATION	0.9999999984471032	WITHOUT_CLASSIFICATION	1.5528967058462984E-9	DEFECT
// path - everything up to query string or fragment	WITHOUT_CLASSIFICATION	0.9999999183565347	WITHOUT_CLASSIFICATION	8.164346533546404E-8	DEFECT
// RFC 2732 only allows '[' and ']' to appear in the opaque part.	WITHOUT_CLASSIFICATION	0.9996651019423065	WITHOUT_CLASSIFICATION	3.348980576934678E-4	DEFECT
// Scan path. // abs_path = "/"  path_segments // rel_path = rel_segment [ abs_path ]	WITHOUT_CLASSIFICATION	0.9999999867175188	WITHOUT_CLASSIFICATION	1.328248134245348E-8	DEFECT
// Path segments cannot contain '[' or ']' since pchar // production was not changed by RFC 2732.	WITHOUT_CLASSIFICATION	0.9999972974631138	WITHOUT_CLASSIFICATION	2.7025368862375353E-6	DEFECT
// Scan opaque part. // opaque_part = uric_no_slash *uric	WITHOUT_CLASSIFICATION	0.9999999601645742	WITHOUT_CLASSIFICATION	3.983542576104953E-8	DEFECT
// query - starts with ? and up to fragment or end	WITHOUT_CLASSIFICATION	0.9999982952643381	WITHOUT_CLASSIFICATION	1.7047356619360365E-6	DEFECT
// fragment - starts with #	WITHOUT_CLASSIFICATION	0.9999998236471537	WITHOUT_CLASSIFICATION	1.7635284621541495E-7	DEFECT
// Server based authority.	WITHOUT_CLASSIFICATION	0.9999999799733107	WITHOUT_CLASSIFICATION	2.0026689318475075E-8	DEFECT
// the second hex character if a character needs to be escaped	WITHOUT_CLASSIFICATION	0.9999984766244236	WITHOUT_CLASSIFICATION	1.5233755764272136E-6	DEFECT
// Registry based authority.	WITHOUT_CLASSIFICATION	0.9999999311342154	WITHOUT_CLASSIFICATION	6.886578472146391E-8	DEFECT
// reg_name = 1*( unreserved | escaped | "$" | "," |  //            ";" | ":" | "@" | "&" | "=" | "+" )	WITHOUT_CLASSIFICATION	0.9999998810304809	WITHOUT_CLASSIFICATION	1.1896951912481191E-7	DEFECT
// presence of the host (whether valid or empty) means // double-slashes which means generic uri	WITHOUT_CLASSIFICATION	0.9999999868733754	WITHOUT_CLASSIFICATION	1.3126624440734208E-8	DEFECT
// Check if the host is a valid IPv6reference.	WITHOUT_CLASSIFICATION	0.9999997011812269	WITHOUT_CLASSIFICATION	2.9881877307067015E-7	DEFECT
// Cannot start with a '.', '-', or end with a '-'.	WITHOUT_CLASSIFICATION	0.999998438959744	WITHOUT_CLASSIFICATION	1.5610402559538624E-6	DEFECT
// rightmost domain label starting with digit indicates IP address // since top level domain label can only start with an alpha // see RFC 2396 Section 3.2.2	WITHOUT_CLASSIFICATION	0.9999999437944052	WITHOUT_CLASSIFICATION	5.620559495427171E-8	DEFECT
// hostname      = *( domainlabel "." ) toplabel [ "." ] // domainlabel   = alphanum | alphanum *( alphanum | "-" ) alphanum // toplabel      = alpha | alpha *( alphanum | "-" ) alphanum	WITHOUT_CLASSIFICATION	0.9999999969243925	WITHOUT_CLASSIFICATION	3.0756076676585843E-9	DEFECT
// RFC 2396 states that hostnames take the form described in  // RFC 1034 (Section 3) and RFC 1123 (Section 2.1). According // to RFC 1034, hostnames are limited to 255 characters.	WITHOUT_CLASSIFICATION	0.999996509792737	WITHOUT_CLASSIFICATION	3.4902072629470044E-6	DEFECT
// domain labels can contain alphanumerics and '-" // but must start and end with an alphanumeric	WITHOUT_CLASSIFICATION	0.999991315801341	WITHOUT_CLASSIFICATION	8.684198658937343E-6	DEFECT
// RFC 1034: Labels must be 63 characters or less.	WITHOUT_CLASSIFICATION	0.9999997981584762	WITHOUT_CLASSIFICATION	2.0184152388919264E-7	DEFECT
// Check that that there are no more than three digits // in this segment.	WITHOUT_CLASSIFICATION	0.9999971831209177	WITHOUT_CLASSIFICATION	2.8168790823616706E-6	DEFECT
// Check that this segment is not greater than 255.	WITHOUT_CLASSIFICATION	0.9995696540653585	WITHOUT_CLASSIFICATION	4.303459346416201E-4	DEFECT
// Check if string is a potential match for IPv6reference.	WITHOUT_CLASSIFICATION	0.9999996019971501	WITHOUT_CLASSIFICATION	3.9800284991823396E-7	DEFECT
// Counter for the number of 16-bit sections read in the address.	WITHOUT_CLASSIFICATION	0.9999997683765549	WITHOUT_CLASSIFICATION	2.3162344510923102E-7	DEFECT
// Scan hex sequence before possible '::' or IPv4 address.	WITHOUT_CLASSIFICATION	0.9999454033975403	WITHOUT_CLASSIFICATION	5.459660245964669E-5	DEFECT
// Address must contain 128-bits of information.	WITHOUT_CLASSIFICATION	0.9999999024467334	WITHOUT_CLASSIFICATION	9.755326666603067E-8	DEFECT
// '::' represents at least one 16-bit group of zeros.	WITHOUT_CLASSIFICATION	0.999999981265642	WITHOUT_CLASSIFICATION	1.8734357937409376E-8	DEFECT
// Trailing zeros will fill out the rest of the address.	WITHOUT_CLASSIFICATION	0.9999997068086339	WITHOUT_CLASSIFICATION	2.9319136607920115E-7	DEFECT
// If the second character wasn't ':', in order to be valid, // the remainder of the string must match IPv4Address,  // and we must have read exactly 6 16-bit groups.	WITHOUT_CLASSIFICATION	0.9999971842229406	WITHOUT_CLASSIFICATION	2.8157770592925323E-6	DEFECT
// 3. Scan hex sequence after '::'.	WITHOUT_CLASSIFICATION	0.9999974189839261	WITHOUT_CLASSIFICATION	2.5810160739527195E-6	DEFECT
// We've either reached the end of the string, the address ends in // an IPv4 address, or it is invalid. scanHexSequence has already  // made sure that we have the right number of bits. 	WITHOUT_CLASSIFICATION	0.9999999796858052	WITHOUT_CLASSIFICATION	2.0314194777864258E-8	DEFECT
// IPv6 addresses are 128-bit, so there can be at most eight sections.	WITHOUT_CLASSIFICATION	0.9999750394506256	WITHOUT_CLASSIFICATION	2.496054937438627E-5	DEFECT
// This could be '::'.	WITHOUT_CLASSIFICATION	0.999982070928201	WITHOUT_CLASSIFICATION	1.792907179889503E-5	DEFECT
// There can be at most 4 hex digits per group.	WITHOUT_CLASSIFICATION	0.999933796719566	WITHOUT_CLASSIFICATION	6.620328043405287E-5	DEFECT
// which ASCII characters need to be escaped	WITHOUT_CLASSIFICATION	0.9999999923116621	WITHOUT_CLASSIFICATION	7.688337888195363E-9	DEFECT
// // Static initialization //	WITHOUT_CLASSIFICATION	0.9999992104642361	WITHOUT_CLASSIFICATION	7.895357638243768E-7	DEFECT
// we saw some non-ascii character	WITHOUT_CLASSIFICATION	0.9999999959379342	WITHOUT_CLASSIFICATION	4.062065731319957E-9	DEFECT
// for each byte	WITHOUT_CLASSIFICATION	0.9999999100941949	WITHOUT_CLASSIFICATION	8.990580517125244E-8	DEFECT
// for non-ascii character: make it positive, then escape	WITHOUT_CLASSIFICATION	0.9999987182896339	WITHOUT_CLASSIFICATION	1.2817103661065047E-6	DEFECT
// should never happen	WITHOUT_CLASSIFICATION	0.9999998660541312	WITHOUT_CLASSIFICATION	1.3394586880759006E-7	DEFECT
// isValidName(String):boolean	WITHOUT_CLASSIFICATION	0.9999999798847082	WITHOUT_CLASSIFICATION	2.0115291811287772E-8	DEFECT
// // XML Schema anyURI specific information //	WITHOUT_CLASSIFICATION	0.9999993770714934	WITHOUT_CLASSIFICATION	6.229285065316238E-7	DEFECT
// To encode special characters in anyURI, by using %HH to represent // special ASCII characters: 0x00~0x1F, 0x7F, ' ', '<', '>', etc. // and non-ASCII characters (whose value >= 128).	WITHOUT_CLASSIFICATION	0.9999995248036337	WITHOUT_CLASSIFICATION	4.751963662939811E-7	DEFECT
// for each character in the anyURI	WITHOUT_CLASSIFICATION	0.9999998783633366	WITHOUT_CLASSIFICATION	1.2163666335556605E-7	DEFECT
// If encoding happened, create a new string; // otherwise, return the orginal one.	WITHOUT_CLASSIFICATION	0.9999998431685868	WITHOUT_CLASSIFICATION	1.568314131071192E-7	DEFECT
// // Constants //	WITHOUT_CLASSIFICATION	0.9999997872778327	WITHOUT_CLASSIFICATION	2.1272216729993756E-7	DEFECT
// Initializing the Character Flag Array // Code generated by: XMLCharGenerator.	WITHOUT_CLASSIFICATION	0.9998174025856201	WITHOUT_CLASSIFICATION	1.8259741437979255E-4	DEFECT
// Fill 3 of value (byte) 49	WITHOUT_CLASSIFICATION	0.9999939573910905	WITHOUT_CLASSIFICATION	6.042608909418139E-6	DEFECT
// Fill 6 of value (byte) 49 // Fill 2 of value (byte) -71	WITHOUT_CLASSIFICATION	0.999922171818957	WITHOUT_CLASSIFICATION	7.782818104297193E-5	DEFECT
// Fill 10 of value (byte) -71	WITHOUT_CLASSIFICATION	0.9999921798752459	WITHOUT_CLASSIFICATION	7.820124754078947E-6	DEFECT
// Fill 26 of value (byte) -3 // Fill 60 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999639928233158	WITHOUT_CLASSIFICATION	3.6007176684117636E-5	DEFECT
// Fill 8 of value (byte) 33 // Fill 23 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999804898179937	WITHOUT_CLASSIFICATION	1.951018200621749E-5	DEFECT
// Fill 31 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999923825241761	WITHOUT_CLASSIFICATION	7.6174758239328835E-6	DEFECT
// Fill 58 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 11 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999537800810717	WITHOUT_CLASSIFICATION	4.621991892818696E-5	DEFECT
// Fill 53 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999856287374259	WITHOUT_CLASSIFICATION	1.4371262574007024E-5	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999992645961811	WITHOUT_CLASSIFICATION	7.354038188959613E-6	DEFECT
// Fill 20 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999979053352173	WITHOUT_CLASSIFICATION	2.094664782709169E-5	DEFECT
// Fill 44 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999895449542896	WITHOUT_CLASSIFICATION	1.0455045710396474E-5	DEFECT
// Fill 7 of value (byte) -19 // Fill 3 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999773718844398	WITHOUT_CLASSIFICATION	2.262811556019273E-5	DEFECT
// Fill 18 of value (byte) -19 // Fill 13 of value (byte) 33 // Fill 12 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999471342133955	WITHOUT_CLASSIFICATION	5.2865786604461556E-5	DEFECT
// Fill 66 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999804746782659	WITHOUT_CLASSIFICATION	1.9525321734070673E-5	DEFECT
// Fill 12 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999774226737901	WITHOUT_CLASSIFICATION	2.2577326209889878E-5	DEFECT
// Fill 36 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999887713528549	WITHOUT_CLASSIFICATION	1.1228647144981125E-5	DEFECT
// Fill 7 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 10 of value (byte) 33 // Fill 17 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999587647858257	WITHOUT_CLASSIFICATION	4.123521417426097E-5	DEFECT
// Fill 23 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999914058459203	WITHOUT_CLASSIFICATION	8.59415407970234E-6	DEFECT
// Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999925250968589	WITHOUT_CLASSIFICATION	7.474903141117851E-6	DEFECT
// Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999865342765859	WITHOUT_CLASSIFICATION	1.3465723414008254E-5	DEFECT
// Fill 11 of value (byte) 33 // Fill 27 of value (byte) -19 // Fill 5 of value (byte) 33 // Fill 3 of value (byte) -19 // Fill 46 of value (byte) 33 // Fill 26 of value (byte) -19 // Fill 5 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999532331044538	WITHOUT_CLASSIFICATION	4.6766895546060824E-5	DEFECT
// Fill 10 of value (byte) -19 // Fill 8 of value (byte) -87 // Fill 13 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 6 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999226639255074	WITHOUT_CLASSIFICATION	7.733607449250417E-5	DEFECT
// Fill 71 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 5 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999600110251786	WITHOUT_CLASSIFICATION	3.9988974821463694E-5	DEFECT
// Fill 15 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999847030437587	WITHOUT_CLASSIFICATION	1.5296956241239333E-5	DEFECT
// Fill 4 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999898005066338	WITHOUT_CLASSIFICATION	1.0199493366248514E-5	DEFECT
// Fill 15 of value (byte) -87 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999433957972929	WITHOUT_CLASSIFICATION	5.660420270716843E-5	DEFECT
// Fill 53 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999484745906762	WITHOUT_CLASSIFICATION	5.152540932374651E-5	DEFECT
// Fill 8 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 22 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999715410320319	WITHOUT_CLASSIFICATION	2.8458967968031264E-5	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999897051715839	WITHOUT_CLASSIFICATION	1.0294828416031132E-5	DEFECT
// Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999925250968589	WITHOUT_CLASSIFICATION	7.474903141117851E-6	DEFECT
// Fill 8 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 22 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999715410320319	WITHOUT_CLASSIFICATION	2.8458967968031264E-5	DEFECT
// Fill 16 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 4 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 10 of value (byte) -19 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 17 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999537780634393	WITHOUT_CLASSIFICATION	4.6221936560702876E-5	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999897051715839	WITHOUT_CLASSIFICATION	1.0294828416031132E-5	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999897051715839	WITHOUT_CLASSIFICATION	1.0294828416031132E-5	DEFECT
// Fill 3 of value (byte) 33 // Fill 4 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999684616085559	WITHOUT_CLASSIFICATION	3.1538391444115696E-5	DEFECT
// Fill 7 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87 // Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999608302383178	WITHOUT_CLASSIFICATION	3.916976168216594E-5	DEFECT
// Fill 4 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999748212646811	WITHOUT_CLASSIFICATION	2.5178735318925725E-5	DEFECT
// Fill 3 of value (byte) -19 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 2 of value (byte) -19 // Fill 16 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999702491841824	WITHOUT_CLASSIFICATION	2.9750815817486545E-5	DEFECT
// Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 22 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999317240507664	WITHOUT_CLASSIFICATION	6.827594923361644E-5	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999867520084271	WITHOUT_CLASSIFICATION	1.3247991572831958E-5	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999867520084271	WITHOUT_CLASSIFICATION	1.3247991572831958E-5	DEFECT
// Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999653012729811	WITHOUT_CLASSIFICATION	3.469872701886648E-5	DEFECT
// Fill 5 of value (byte) -87 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87 // Fill 11 of value (byte) 33 // Fill 4 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999667102474858	WITHOUT_CLASSIFICATION	3.328975251407433E-5	DEFECT
// Fill 7 of value (byte) 33 // Fill 12 of value (byte) -87 // Fill 3 of value (byte) -19 // Fill 12 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999581762964328	WITHOUT_CLASSIFICATION	4.182370356722648E-5	DEFECT
// Fill 22 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999867207874256	WITHOUT_CLASSIFICATION	1.3279212574484505E-5	DEFECT
// Fill 5 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.999937123591352	WITHOUT_CLASSIFICATION	6.287640864794899E-5	DEFECT
// Fill 8 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999883035926864	WITHOUT_CLASSIFICATION	1.1696407313570648E-5	DEFECT
// Fill 3 of value (byte) -87 // Fill 18 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999773530171607	WITHOUT_CLASSIFICATION	2.264698283931797E-5	DEFECT
// Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999925250968589	WITHOUT_CLASSIFICATION	7.474903141117851E-6	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999897051715839	WITHOUT_CLASSIFICATION	1.0294828416031132E-5	DEFECT
// Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 4 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999661917594272	WITHOUT_CLASSIFICATION	3.380824057264421E-5	DEFECT
// Fill 3 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 18 of value (byte) 33 // Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999588233266111	WITHOUT_CLASSIFICATION	4.117667338889702E-5	DEFECT
// Fill 6 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999572470211362	WITHOUT_CLASSIFICATION	4.27529788638851E-5	DEFECT
// Fill 4 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999751940478369	WITHOUT_CLASSIFICATION	2.4805952163193286E-5	DEFECT
// Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 3 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999714481753978	WITHOUT_CLASSIFICATION	2.8551824602150734E-5	DEFECT
// Fill 3 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 5 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999643688639985	WITHOUT_CLASSIFICATION	3.563113600152162E-5	DEFECT
// Fill 4 of value (byte) -87 // Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999616514922893	WITHOUT_CLASSIFICATION	3.834850771065776E-5	DEFECT
// Fill 15 of value (byte) 33 // Fill 9 of value (byte) -87 // Fill 17 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999397613155941	WITHOUT_CLASSIFICATION	6.023868440578256E-5	DEFECT
// Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999882602858358	WITHOUT_CLASSIFICATION	1.1739714164162484E-5	DEFECT
// Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999882602858358	WITHOUT_CLASSIFICATION	1.1739714164162484E-5	DEFECT
// Fill 23 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999915448083735	WITHOUT_CLASSIFICATION	8.455191626509024E-6	DEFECT
// Fill 23 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999915448083735	WITHOUT_CLASSIFICATION	8.455191626509024E-6	DEFECT
// Fill 10 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999902024540713	WITHOUT_CLASSIFICATION	9.797545928579068E-6	DEFECT
// Fill 5 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 7 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999605003532998	WITHOUT_CLASSIFICATION	3.949964670030589E-5	DEFECT
// Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999925250968589	WITHOUT_CLASSIFICATION	7.474903141117851E-6	DEFECT
// Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999865342765859	WITHOUT_CLASSIFICATION	1.3465723414008254E-5	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999897051715839	WITHOUT_CLASSIFICATION	1.0294828416031132E-5	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999867520084271	WITHOUT_CLASSIFICATION	1.3247991572831958E-5	DEFECT
// Fill 4 of value (byte) -87 // Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999616514922893	WITHOUT_CLASSIFICATION	3.834850771065776E-5	DEFECT
// Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999882602858358	WITHOUT_CLASSIFICATION	1.1739714164162484E-5	DEFECT
// Fill 23 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999915448083735	WITHOUT_CLASSIFICATION	8.455191626509024E-6	DEFECT
// Fill 5 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 7 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999605003532998	WITHOUT_CLASSIFICATION	3.949964670030589E-5	DEFECT
// Fill 4 of value (byte) -87 // Fill 7 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 7 of value (byte) 33	WITHOUT_CLASSIFICATION	0.999973514785794	WITHOUT_CLASSIFICATION	2.6485214206018006E-5	DEFECT
// Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 18 of value (byte) 33 // Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999558598314477	WITHOUT_CLASSIFICATION	4.4140168552196615E-5	DEFECT
// Fill 16 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 6 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999469861902863	WITHOUT_CLASSIFICATION	5.301380971359672E-5	DEFECT
// Fill 8 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 145 of value (byte) 33 // Fill 46 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999107893103419	WITHOUT_CLASSIFICATION	8.92106896581474E-5	DEFECT
// Fill 2 of value (byte) -19 // Fill 7 of value (byte) -87 // Fill 5 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 9 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9998263184754275	WITHOUT_CLASSIFICATION	1.7368152457249993E-4	DEFECT
// Fill 10 of value (byte) -87 // Fill 39 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999972324383063	WITHOUT_CLASSIFICATION	2.767561693688409E-5	DEFECT
// Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999892836949444	WITHOUT_CLASSIFICATION	1.071630505551448E-5	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999867520084271	WITHOUT_CLASSIFICATION	1.3247991572831958E-5	DEFECT
// Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999773296732647	WITHOUT_CLASSIFICATION	2.2670326735227874E-5	DEFECT
// Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999892836949444	WITHOUT_CLASSIFICATION	1.071630505551448E-5	DEFECT
// Fill 6 of value (byte) 33 // Fill 4 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999518030661255	WITHOUT_CLASSIFICATION	4.819693387459872E-5	DEFECT
// Fill 2 of value (byte) -19 // Fill 6 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9998969592240593	WITHOUT_CLASSIFICATION	1.0304077594078614E-4	DEFECT
// Fill 2 of value (byte) 33 // Fill 5 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999589194539839	WITHOUT_CLASSIFICATION	4.1080546016118956E-5	DEFECT
// Fill 4 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999966441193709	WITHOUT_CLASSIFICATION	3.35588062908932E-5	DEFECT
// Fill 33 of value (byte) -19 // Fill 7 of value (byte) 33 // Fill 20 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999552558065966	WITHOUT_CLASSIFICATION	4.474419340336574E-5	DEFECT
// Fill 6 of value (byte) -87 // Fill 4 of value (byte) 33 // Fill 6 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999553871753626	WITHOUT_CLASSIFICATION	4.4612824637343395E-5	DEFECT
// Fill 21 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 7 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999888075233818	WITHOUT_CLASSIFICATION	1.119247661814514E-5	DEFECT
// Fill 230 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 10 of value (byte) 33 // Fill 39 of value (byte) -19 // Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999631669948218	WITHOUT_CLASSIFICATION	3.6833005178285E-5	DEFECT
// Fill 5 of value (byte) -19 // Fill 41 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999602461211352	WITHOUT_CLASSIFICATION	3.975387886487253E-5	DEFECT
// Fill 11 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999950025045945	WITHOUT_CLASSIFICATION	4.997495405578267E-6	DEFECT
// Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999716035740995	WITHOUT_CLASSIFICATION	2.8396425900425584E-5	DEFECT
// Fill 5 of value (byte) 33 // Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999734350804461	WITHOUT_CLASSIFICATION	2.656491955389587E-5	DEFECT
// Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999776653190675	WITHOUT_CLASSIFICATION	2.2334680932517156E-5	DEFECT
// Fill 40 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999896079134049	WITHOUT_CLASSIFICATION	1.0392086595171905E-5	DEFECT
// Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999869199850843	WITHOUT_CLASSIFICATION	1.3080014915780674E-5	DEFECT
// Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 7 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999731601805874	WITHOUT_CLASSIFICATION	2.6839819412745296E-5	DEFECT
// Fill 7 of value (byte) -19 // Fill 40 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999622786215797	WITHOUT_CLASSIFICATION	3.772137842018306E-5	DEFECT
// Fill 4 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999917496310254	WITHOUT_CLASSIFICATION	8.250368974620697E-6	DEFECT
// Fill 8 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999905037438095	WITHOUT_CLASSIFICATION	9.496256190553913E-6	DEFECT
// Fill 68 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999868143374622	WITHOUT_CLASSIFICATION	1.3185662537728356E-5	DEFECT
// // Public static methods //	WITHOUT_CLASSIFICATION	0.9999999876712176	WITHOUT_CLASSIFICATION	1.2328782507875913E-8	DEFECT
// Fill 31 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 53 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999656461775205	WITHOUT_CLASSIFICATION	3.435382247944368E-5	DEFECT
// Fill 7 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 4 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 13 of value (byte) -19 // Fill 5 of value (byte) 33 // Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9998563615642012	WITHOUT_CLASSIFICATION	1.436384357988632E-4	DEFECT
// Fill 7 of value (byte) -19 // Fill 211 of value (byte) 33 // Fill 13 of value (byte) -87 // Fill 4 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999814842951584	WITHOUT_CLASSIFICATION	1.8515704841527515E-5	DEFECT
// Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999716035740995	WITHOUT_CLASSIFICATION	2.8396425900425584E-5	DEFECT
// Fill 81 of value (byte) 33 // Fill 3 of value (byte) -19 // Fill 3714 of value (byte) 33	WITHOUT_CLASSIFICATION	0.999975170921839	WITHOUT_CLASSIFICATION	2.4829078161034898E-5	DEFECT
// Fill 25 of value (byte) 33 // Fill 9 of value (byte) -19 // Fill 6 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9998674257174999	WITHOUT_CLASSIFICATION	1.3257428250013783E-4	DEFECT
// Fill 5 of value (byte) -87 // Fill 11 of value (byte) 33 // Fill 84 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 90 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999429467497545	WITHOUT_CLASSIFICATION	5.705325024550361E-5	DEFECT
// isValid(int):boolean	WITHOUT_CLASSIFICATION	0.9999999518706905	WITHOUT_CLASSIFICATION	4.812930944488273E-8	DEFECT
// isInvalid(int):boolean	WITHOUT_CLASSIFICATION	0.9999999686231535	WITHOUT_CLASSIFICATION	3.137684649310971E-8	DEFECT
// isContent(int):boolean	WITHOUT_CLASSIFICATION	0.9999999279841217	WITHOUT_CLASSIFICATION	7.201587831125981E-8	DEFECT
// isMarkup(int):boolean	WITHOUT_CLASSIFICATION	0.9999999744472453	WITHOUT_CLASSIFICATION	2.555275466285633E-8	DEFECT
// isSpace(int):boolean	WITHOUT_CLASSIFICATION	0.9999999754695589	WITHOUT_CLASSIFICATION	2.4530441158641334E-8	DEFECT
// isNameStart(int):boolean	WITHOUT_CLASSIFICATION	0.9999999928938041	WITHOUT_CLASSIFICATION	7.106195855917807E-9	DEFECT
// isName(int):boolean	WITHOUT_CLASSIFICATION	0.9999999509410912	WITHOUT_CLASSIFICATION	4.9058908701421756E-8	DEFECT
// isNCNameStart(int):boolean	WITHOUT_CLASSIFICATION	0.9999999947597625	WITHOUT_CLASSIFICATION	5.240237573291423E-9	DEFECT
// isNCName(int):boolean	WITHOUT_CLASSIFICATION	0.9999999638230714	WITHOUT_CLASSIFICATION	3.617692851791842E-8	DEFECT
// isPubid(int):boolean	WITHOUT_CLASSIFICATION	0.9999999380663659	WITHOUT_CLASSIFICATION	6.193363418774316E-8	DEFECT
/*      * [5] Name ::= (Letter | '_' | ':') (NameChar)*      */	WITHOUT_CLASSIFICATION	0.9999998709167278	WITHOUT_CLASSIFICATION	1.290832722641383E-7	DEFECT
// isValidName(String):boolean	WITHOUT_CLASSIFICATION	0.9999999798847082	WITHOUT_CLASSIFICATION	2.0115291811287772E-8	DEFECT
/*      * from the namespace rec      * [4] NCName ::= (Letter | '_') (NCNameChar)*      */	WITHOUT_CLASSIFICATION	0.9999998531721326	WITHOUT_CLASSIFICATION	1.4682786739556769E-7	DEFECT
// isValidNCName(String):boolean	WITHOUT_CLASSIFICATION	0.9999999703657032	WITHOUT_CLASSIFICATION	2.9634296856389562E-8	DEFECT
/*      * [7] Nmtoken ::= (NameChar)+      */	WITHOUT_CLASSIFICATION	0.9999972807534755	WITHOUT_CLASSIFICATION	2.7192465244848475E-6	DEFECT
// encodings	WITHOUT_CLASSIFICATION	0.9999988387133627	WITHOUT_CLASSIFICATION	1.1612866372085481E-6	DEFECT
// isValidIANAEncoding(String):boolean	WITHOUT_CLASSIFICATION	0.9999999508709689	WITHOUT_CLASSIFICATION	4.9129031082930014E-8	DEFECT
// class XMLChar	WITHOUT_CLASSIFICATION	0.9999986447771602	WITHOUT_CLASSIFICATION	1.355222839844099E-6	DEFECT
//order constants	WITHOUT_CLASSIFICATION	0.9999995498911691	WITHOUT_CLASSIFICATION	4.501088307930175E-7	DEFECT
// check whether the character is in the range 0x30 ~ 0x39	WITHOUT_CLASSIFICATION	0.9999999535349546	WITHOUT_CLASSIFICATION	4.6465045446336855E-8	DEFECT
// interface TypeValidator	WITHOUT_CLASSIFICATION	0.9999998375560798	WITHOUT_CLASSIFICATION	1.6244392024878546E-7	DEFECT
// This implementation was changed to not introduce multi line content.	WITHOUT_CLASSIFICATION	0.9999259355946403	WITHOUT_CLASSIFICATION	7.406440535972199E-5	DEFECT
// form integral number of 6-bit groups	WITHOUT_CLASSIFICATION	0.9999999754102604	WITHOUT_CLASSIFICATION	2.4589739561989916E-8	DEFECT
//encodedData[encodedIndex] = 0xa;	WITHOUT_CLASSIFICATION	0.9999924117935542	WITHOUT_CLASSIFICATION	7.58820644578409E-6	DEFECT
// remove white spaces	WITHOUT_CLASSIFICATION	0.9999998540418646	WITHOUT_CLASSIFICATION	1.4595813537797943E-7	DEFECT
//should be divisible by four	WITHOUT_CLASSIFICATION	0.9999995657114362	WITHOUT_CLASSIFICATION	4.342885638516875E-7	DEFECT
//if found "no data" just return null	WITHOUT_CLASSIFICATION	0.9999999876238551	WITHOUT_CLASSIFICATION	1.2376144767763131E-8	DEFECT
//One PAD  e.g. 3cQ[Pad]	WITHOUT_CLASSIFICATION	0.9999988540736638	WITHOUT_CLASSIFICATION	1.1459263361178656E-6	DEFECT
//last 2 bits should be zero	WITHOUT_CLASSIFICATION	0.9999987864935411	WITHOUT_CLASSIFICATION	1.2135064588941164E-6	DEFECT
//an error  like "3c[Pad]r", "3cdX", "3cXd", "3cXX" where X is non data	WITHOUT_CLASSIFICATION	0.9988339732132011	WITHOUT_CLASSIFICATION	0.0011660267867988497	DEFECT
//No PAD e.g 3cQl	WITHOUT_CLASSIFICATION	0.999994376013211	WITHOUT_CLASSIFICATION	5.6239867890520986E-6	DEFECT
// count characters that's not whitespace	WITHOUT_CLASSIFICATION	0.9999999397009303	WITHOUT_CLASSIFICATION	6.029906974990201E-8	DEFECT
// // Data //	WITHOUT_CLASSIFICATION	0.9999997387757592	WITHOUT_CLASSIFICATION	2.612242407954309E-7	DEFECT
// // Static initialization //	WITHOUT_CLASSIFICATION	0.9999992104642361	WITHOUT_CLASSIFICATION	7.895357638243768E-7	DEFECT
// Add support for Cp1252 and its friends	WITHOUT_CLASSIFICATION	0.9999993728270063	WITHOUT_CLASSIFICATION	6.271729936323356E-7	DEFECT
// added since this encoding only differs w.r.t. presentation 	WITHOUT_CLASSIFICATION	0.9999997088840828	WITHOUT_CLASSIFICATION	2.911159171704917E-7	DEFECT
// Adding new aliases as proposed in // http://lists.w3.org/Archives/Public/ietf-charset/2002JulSep/0058.html	WITHOUT_CLASSIFICATION	0.9999992795041216	WITHOUT_CLASSIFICATION	7.204958783621693E-7	DEFECT
// REVISIT: //   j:CNS11643 -> EUC-TW? //   ISO-2022-CN? ISO-2022-CN-EXT?	WITHOUT_CLASSIFICATION	0.9999875721897759	WITHOUT_CLASSIFICATION	1.2427810224190089E-5	DEFECT
// add Java to IANA encoding mappings //fJava2IANAMap.put("8859_1",    "US-ASCII"); // ?	WITHOUT_CLASSIFICATION	0.9999979440716018	WITHOUT_CLASSIFICATION	2.0559283981876423E-6	DEFECT
// proposed addition (see above for details):	WITHOUT_CLASSIFICATION	0.9999641710322544	WITHOUT_CLASSIFICATION	3.582896774564852E-5	DEFECT
// <clinit>()	WITHOUT_CLASSIFICATION	0.9999994544160197	WITHOUT_CLASSIFICATION	5.455839802756676E-7	DEFECT
// // Public static methods //	WITHOUT_CLASSIFICATION	0.9999999876712176	WITHOUT_CLASSIFICATION	1.2328782507875913E-8	DEFECT
// putIANA2JavaMapping(String,String)	WITHOUT_CLASSIFICATION	0.9999996859645353	WITHOUT_CLASSIFICATION	3.1403546478678983E-7	DEFECT
// getIANA2JavaMapping(String):String	WITHOUT_CLASSIFICATION	0.9999986343773156	WITHOUT_CLASSIFICATION	1.3656226843185918E-6	DEFECT
// removeIANA2JavaMapping(String):String	WITHOUT_CLASSIFICATION	0.9999963957506222	WITHOUT_CLASSIFICATION	3.604249377872029E-6	DEFECT
//RFC 2732 added '[' and ']' as reserved characters	WITHOUT_CLASSIFICATION	0.9999999760230837	WITHOUT_CLASSIFICATION	2.3976916364009865E-8	DEFECT
// Add ASCII Digits and ASCII Hex Numbers	WITHOUT_CLASSIFICATION	0.9999999626452782	WITHOUT_CLASSIFICATION	3.735472175885169E-8	DEFECT
// Add ASCII Letters and ASCII Hex Numbers	WITHOUT_CLASSIFICATION	0.9999998811962609	WITHOUT_CLASSIFICATION	1.1880373908079787E-7	DEFECT
// isValidName(String):boolean	WITHOUT_CLASSIFICATION	0.9999999798847082	WITHOUT_CLASSIFICATION	2.0115291811287772E-8	DEFECT
// Fill 3 of value (byte) -87 // Fill 6 of value (byte) 33 // Fill 40 of value (byte) -19 // Fill 7379 of value (byte) 33 // Fill 20902 of value (byte) -19 // Fill 3162 of value (byte) 33 // Fill 11172 of value (byte) -19 // Fill 92 of value (byte) 33 // Fill 8190 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9995513755732977	WITHOUT_CLASSIFICATION	4.4862442670234745E-4	DEFECT
// if the character is in the range 0x30 ~ 0x39, return its int value (0~9), // otherwise, return -1	WITHOUT_CLASSIFICATION	0.9999999998838646	WITHOUT_CLASSIFICATION	1.1613546031192955E-10	DEFECT
// Add Reserved Characters	WITHOUT_CLASSIFICATION	0.9999999974690585	WITHOUT_CLASSIFICATION	2.530941376622528E-9	DEFECT
// Add Scheme Characters	WITHOUT_CLASSIFICATION	0.9999999986790467	WITHOUT_CLASSIFICATION	1.3209533363627202E-9	DEFECT
// Add Userinfo Characters	WITHOUT_CLASSIFICATION	0.9999999976490109	WITHOUT_CLASSIFICATION	2.3509890354250917E-9	DEFECT
// Add Path Characters	WITHOUT_CLASSIFICATION	0.9999999944521959	WITHOUT_CLASSIFICATION	5.547804028027099E-9	DEFECT
// Just use null.	WITHOUT_CLASSIFICATION	0.9999988149131148	WITHOUT_CLASSIFICATION	1.1850868852041414E-6	DEFECT
// search backwards starting from character before ':'.	WITHOUT_CLASSIFICATION	0.9999999751014299	WITHOUT_CLASSIFICATION	2.489857009719515E-8	DEFECT
// A standalone base is a valid URI according to spec	WITHOUT_CLASSIFICATION	0.9999983624452478	WITHOUT_CLASSIFICATION	1.6375547521911027E-6	DEFECT
// Neither 'scheme:' or 'scheme:#fragment' are valid URIs.	WITHOUT_CLASSIFICATION	0.9999999970695395	WITHOUT_CLASSIFICATION	2.930460541441041E-9	DEFECT
// Authority will be everything up to path, query or fragment	WITHOUT_CLASSIFICATION	0.9999934934674699	WITHOUT_CLASSIFICATION	6.506532530147463E-6	DEFECT
// Attempt to parse authority. If the section is an empty string // this is a valid server based authority, so set the host to this // value.	WITHOUT_CLASSIFICATION	0.9999996926479703	WITHOUT_CLASSIFICATION	3.073520297531811E-7	DEFECT
// If we didn't find authority we need to back up. Attempt to // match against abs_path next.	WITHOUT_CLASSIFICATION	0.9999857689776387	WITHOUT_CLASSIFICATION	1.4231022361348719E-5	DEFECT
// Resolve relative URI to base URI - see RFC 2396 Section 5.2 // In some cases, it might make more sense to throw an exception // (when scheme is specified is the string spec and the base URI // is also specified, for example), but we're just following the // RFC specifications	WITHOUT_CLASSIFICATION	0.9999969875979179	WITHOUT_CLASSIFICATION	3.0124020821095005E-6	DEFECT
// check to see if this is the current doc - RFC 2396 5.2 #2 // note that this is slightly different from the RFC spec in that // we don't include the check for query string being null // - this handles cases where the urispec is just a query // string or a fragment (e.g. "?y" or "#s") - // see <http://www.ics.uci.edu/~fielding/url/test1.html> which // identified this as a bug in the RFC	WITHOUT_CLASSIFICATION	0.9999999515560863	WITHOUT_CLASSIFICATION	4.844391376501507E-8	DEFECT
// check for authority - RFC 2396 5.2 #4 // if we found a host, then we've got a network path, so we're done	WITHOUT_CLASSIFICATION	0.999995477656408	WITHOUT_CLASSIFICATION	4.522343592050168E-6	DEFECT
// check for absolute path - RFC 2396 5.2 #5	WITHOUT_CLASSIFICATION	0.999999821185773	WITHOUT_CLASSIFICATION	1.7881422692480931E-7	DEFECT
// 6a - get all but the last segment of the base URI path	WITHOUT_CLASSIFICATION	0.9999987654299561	WITHOUT_CLASSIFICATION	1.234570043796919E-6	DEFECT
// 6b - append the relative URI path	WITHOUT_CLASSIFICATION	0.9999974793130074	WITHOUT_CLASSIFICATION	2.5206869926983775E-6	DEFECT
// 6c - remove all "./" where "." is a complete path segment	WITHOUT_CLASSIFICATION	0.9999534993132829	WITHOUT_CLASSIFICATION	4.6500686717111986E-5	DEFECT
// 6d - remove "." if path ends with "." as a complete path segment	WITHOUT_CLASSIFICATION	0.9999842855404663	WITHOUT_CLASSIFICATION	1.571445953374052E-5	DEFECT
// 6e - remove all "<segment>/../" where "<segment>" is a complete // path segment not equal to ".."	WITHOUT_CLASSIFICATION	0.9999246749946497	WITHOUT_CLASSIFICATION	7.532500535036504E-5	DEFECT
// 6f - remove ending "<segment>/.." where "<segment>" is a // complete path segment	WITHOUT_CLASSIFICATION	0.9995350428370924	WITHOUT_CLASSIFICATION	4.649571629075941E-4	DEFECT
// userinfo is everything up to @	WITHOUT_CLASSIFICATION	0.9999995896762164	WITHOUT_CLASSIFICATION	4.103237836062301E-7	DEFECT
// host is everything up to last ':', or up to  // and including ']' if followed by ':'.	WITHOUT_CLASSIFICATION	0.9999999834921235	WITHOUT_CLASSIFICATION	1.6507876475114496E-8	DEFECT
// port	WITHOUT_CLASSIFICATION	0.999995308869699	WITHOUT_CLASSIFICATION	4.691130301060869E-6	DEFECT
// Check if the host is well formed.	WITHOUT_CLASSIFICATION	0.9999999499777797	WITHOUT_CLASSIFICATION	5.0022220161849706E-8	DEFECT
// Check that port is well formed if it exists. // REVISIT: There's no restriction on port value ranges, but // perform the same check as in setPort to be consistent. Pass // in a string to this method instead of an integer.	WITHOUT_CLASSIFICATION	0.9999996260239762	WITHOUT_CLASSIFICATION	3.739760237608843E-7	DEFECT
// Check that userinfo is well formed if it exists.	WITHOUT_CLASSIFICATION	0.9999999684092686	WITHOUT_CLASSIFICATION	3.159073124991458E-8	DEFECT
// Userinfo can contain alphanumerics, mark characters, escaped // and ';',':','&','=','+','$',','	WITHOUT_CLASSIFICATION	0.9999999884621941	WITHOUT_CLASSIFICATION	1.15378059744929E-8	DEFECT
// check for valid escape sequence	WITHOUT_CLASSIFICATION	0.9999999901484843	WITHOUT_CLASSIFICATION	9.851515626688806E-9	DEFECT
// check for valid escape sequence	WITHOUT_CLASSIFICATION	0.9999999901484843	WITHOUT_CLASSIFICATION	9.851515626688806E-9	DEFECT
// can check against path characters because the set // is the same except for '/' which we've already excluded.	WITHOUT_CLASSIFICATION	0.9999999984471032	WITHOUT_CLASSIFICATION	1.5528967058462984E-9	DEFECT
// path - everything up to query string or fragment	WITHOUT_CLASSIFICATION	0.9999999183565347	WITHOUT_CLASSIFICATION	8.164346533546404E-8	DEFECT
// RFC 2732 only allows '[' and ']' to appear in the opaque part.	WITHOUT_CLASSIFICATION	0.9996651019423065	WITHOUT_CLASSIFICATION	3.348980576934678E-4	DEFECT
// Scan path. // abs_path = "/"  path_segments // rel_path = rel_segment [ abs_path ]	WITHOUT_CLASSIFICATION	0.9999999867175188	WITHOUT_CLASSIFICATION	1.328248134245348E-8	DEFECT
// Scan opaque part. // opaque_part = uric_no_slash *uric	WITHOUT_CLASSIFICATION	0.9999999601645742	WITHOUT_CLASSIFICATION	3.983542576104953E-8	DEFECT
// query - starts with ? and up to fragment or end	WITHOUT_CLASSIFICATION	0.9999982952643381	WITHOUT_CLASSIFICATION	1.7047356619360365E-6	DEFECT
// fragment - starts with #	WITHOUT_CLASSIFICATION	0.9999998236471537	WITHOUT_CLASSIFICATION	1.7635284621541495E-7	DEFECT
// Server based authority.	WITHOUT_CLASSIFICATION	0.9999999799733107	WITHOUT_CLASSIFICATION	2.0026689318475075E-8	DEFECT
// Registry based authority.	WITHOUT_CLASSIFICATION	0.9999999311342154	WITHOUT_CLASSIFICATION	6.886578472146391E-8	DEFECT
// userinfo can contain alphanumerics, mark characters, escaped // and ';',':','&','=','+','$',','	WITHOUT_CLASSIFICATION	0.9999999850582582	WITHOUT_CLASSIFICATION	1.494174178420088E-8	DEFECT
// reg_name = 1*( unreserved | escaped | "$" | "," |  //            ";" | ":" | "@" | "&" | "=" | "+" )	WITHOUT_CLASSIFICATION	0.9999998810304809	WITHOUT_CLASSIFICATION	1.1896951912481191E-7	DEFECT
// presence of the host (whether valid or empty) means // double-slashes which means generic uri	WITHOUT_CLASSIFICATION	0.9999999868733754	WITHOUT_CLASSIFICATION	1.3126624440734208E-8	DEFECT
// Check if the host is a valid IPv6reference.	WITHOUT_CLASSIFICATION	0.9999997011812269	WITHOUT_CLASSIFICATION	2.9881877307067015E-7	DEFECT
// Cannot start with a '.', '-', or end with a '-'.	WITHOUT_CLASSIFICATION	0.999998438959744	WITHOUT_CLASSIFICATION	1.5610402559538624E-6	DEFECT
// rightmost domain label starting with digit indicates IP address // since top level domain label can only start with an alpha // see RFC 2396 Section 3.2.2	WITHOUT_CLASSIFICATION	0.9999999437944052	WITHOUT_CLASSIFICATION	5.620559495427171E-8	DEFECT
// RFC 2396 states that hostnames take the form described in  // RFC 1034 (Section 3) and RFC 1123 (Section 2.1). According // to RFC 1034, hostnames are limited to 255 characters.	WITHOUT_CLASSIFICATION	0.999996509792737	WITHOUT_CLASSIFICATION	3.4902072629470044E-6	DEFECT
// domain labels can contain alphanumerics and '-" // but must start and end with an alphanumeric	WITHOUT_CLASSIFICATION	0.999991315801341	WITHOUT_CLASSIFICATION	8.684198658937343E-6	DEFECT
// RFC 1034: Labels must be 63 characters or less.	WITHOUT_CLASSIFICATION	0.9999997981584762	WITHOUT_CLASSIFICATION	2.0184152388919264E-7	DEFECT
// Check that that there are no more than three digits // in this segment.	WITHOUT_CLASSIFICATION	0.9999971831209177	WITHOUT_CLASSIFICATION	2.8168790823616706E-6	DEFECT
// Check that this segment is not greater than 255.	WITHOUT_CLASSIFICATION	0.9995696540653585	WITHOUT_CLASSIFICATION	4.303459346416201E-4	DEFECT
// Check if string is a potential match for IPv6reference.	WITHOUT_CLASSIFICATION	0.9999996019971501	WITHOUT_CLASSIFICATION	3.9800284991823396E-7	DEFECT
// Counter for the number of 16-bit sections read in the address.	WITHOUT_CLASSIFICATION	0.9999997683765549	WITHOUT_CLASSIFICATION	2.3162344510923102E-7	DEFECT
// Scan hex sequence before possible '::' or IPv4 address.	WITHOUT_CLASSIFICATION	0.9999454033975403	WITHOUT_CLASSIFICATION	5.459660245964669E-5	DEFECT
// Address must contain 128-bits of information.	WITHOUT_CLASSIFICATION	0.9999999024467334	WITHOUT_CLASSIFICATION	9.755326666603067E-8	DEFECT
// '::' represents at least one 16-bit group of zeros.	WITHOUT_CLASSIFICATION	0.999999981265642	WITHOUT_CLASSIFICATION	1.8734357937409376E-8	DEFECT
// Trailing zeros will fill out the rest of the address.	WITHOUT_CLASSIFICATION	0.9999997068086339	WITHOUT_CLASSIFICATION	2.9319136607920115E-7	DEFECT
// 3. Scan hex sequence after '::'.	WITHOUT_CLASSIFICATION	0.9999974189839261	WITHOUT_CLASSIFICATION	2.5810160739527195E-6	DEFECT
// IPv6 addresses are 128-bit, so there can be at most eight sections.	WITHOUT_CLASSIFICATION	0.9999750394506256	WITHOUT_CLASSIFICATION	2.496054937438627E-5	DEFECT
// This could be '::'.	WITHOUT_CLASSIFICATION	0.999982070928201	WITHOUT_CLASSIFICATION	1.792907179889503E-5	DEFECT
// There can be at most 4 hex digits per group.	WITHOUT_CLASSIFICATION	0.999933796719566	WITHOUT_CLASSIFICATION	6.620328043405287E-5	DEFECT
// which ASCII characters need to be escaped	WITHOUT_CLASSIFICATION	0.9999999923116621	WITHOUT_CLASSIFICATION	7.688337888195363E-9	DEFECT
// Trying to match the following productions: // hexseq = hex4 *( ":" hex4) // hex4   = 1*4HEXDIG	WITHOUT_CLASSIFICATION	0.9999723335567708	WITHOUT_CLASSIFICATION	2.766644322907391E-5	DEFECT
// initialize the above 3 arrays	WITHOUT_CLASSIFICATION	0.9999997269183989	WITHOUT_CLASSIFICATION	2.730816011514451E-7	DEFECT
// if it's not an ASCII character, break here, and use UTF-8 encoding	WITHOUT_CLASSIFICATION	0.999999905893251	WITHOUT_CLASSIFICATION	9.41067488818985E-8	DEFECT
// we saw some non-ascii character	WITHOUT_CLASSIFICATION	0.9999999959379342	WITHOUT_CLASSIFICATION	4.062065731319957E-9	DEFECT
// get UTF-8 bytes for the remaining sub-string	WITHOUT_CLASSIFICATION	0.9999999958664636	WITHOUT_CLASSIFICATION	4.133536329985219E-9	DEFECT
// for each byte	WITHOUT_CLASSIFICATION	0.9999999100941949	WITHOUT_CLASSIFICATION	8.990580517125244E-8	DEFECT
// for non-ascii character: make it positive, then escape	WITHOUT_CLASSIFICATION	0.9999987182896339	WITHOUT_CLASSIFICATION	1.2817103661065047E-6	DEFECT
// should never happen	WITHOUT_CLASSIFICATION	0.9999998660541312	WITHOUT_CLASSIFICATION	1.3394586880759006E-7	DEFECT
// This might be invalid or an IPv4address. If it's potentially an IPv4address, // backup to just after the last valid character that matches hexseq.	WITHOUT_CLASSIFICATION	0.9999999750861642	WITHOUT_CLASSIFICATION	2.4913835710231158E-8	DEFECT
// // XML Schema anyURI specific information //	WITHOUT_CLASSIFICATION	0.9999993770714934	WITHOUT_CLASSIFICATION	6.229285065316238E-7	DEFECT
// To encode special characters in anyURI, by using %HH to represent // special ASCII characters: 0x00~0x1F, 0x7F, ' ', '<', '>', etc. // and non-ASCII characters (whose value >= 128).	WITHOUT_CLASSIFICATION	0.9999995248036337	WITHOUT_CLASSIFICATION	4.751963662939811E-7	DEFECT
// for each character in the anyURI	WITHOUT_CLASSIFICATION	0.9999998783633366	WITHOUT_CLASSIFICATION	1.2163666335556605E-7	DEFECT
// If encoding happened, create a new string; // otherwise, return the orginal one.	WITHOUT_CLASSIFICATION	0.9999998431685868	WITHOUT_CLASSIFICATION	1.568314131071192E-7	DEFECT
// // Constants //	WITHOUT_CLASSIFICATION	0.9999997872778327	WITHOUT_CLASSIFICATION	2.1272216729993756E-7	DEFECT
// Initializing the Character Flag Array // Code generated by: XMLCharGenerator.	WITHOUT_CLASSIFICATION	0.9998174025856201	WITHOUT_CLASSIFICATION	1.8259741437979255E-4	DEFECT
// Fill 3 of value (byte) 49	WITHOUT_CLASSIFICATION	0.9999939573910905	WITHOUT_CLASSIFICATION	6.042608909418139E-6	DEFECT
// Fill 6 of value (byte) 49 // Fill 2 of value (byte) -71	WITHOUT_CLASSIFICATION	0.999922171818957	WITHOUT_CLASSIFICATION	7.782818104297193E-5	DEFECT
// Fill 10 of value (byte) -71	WITHOUT_CLASSIFICATION	0.9999921798752459	WITHOUT_CLASSIFICATION	7.820124754078947E-6	DEFECT
// Fill 8 of value (byte) 33 // Fill 23 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999804898179937	WITHOUT_CLASSIFICATION	1.951018200621749E-5	DEFECT
// Fill 31 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999923825241761	WITHOUT_CLASSIFICATION	7.6174758239328835E-6	DEFECT
// Fill 58 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 11 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999537800810717	WITHOUT_CLASSIFICATION	4.621991892818696E-5	DEFECT
// Fill 53 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999856287374259	WITHOUT_CLASSIFICATION	1.4371262574007024E-5	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999992645961811	WITHOUT_CLASSIFICATION	7.354038188959613E-6	DEFECT
// Fill 20 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999979053352173	WITHOUT_CLASSIFICATION	2.094664782709169E-5	DEFECT
// Fill 44 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999895449542896	WITHOUT_CLASSIFICATION	1.0455045710396474E-5	DEFECT
// Fill 7 of value (byte) -19 // Fill 3 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999773718844398	WITHOUT_CLASSIFICATION	2.262811556019273E-5	DEFECT
// Fill 18 of value (byte) -19 // Fill 13 of value (byte) 33 // Fill 12 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999471342133955	WITHOUT_CLASSIFICATION	5.2865786604461556E-5	DEFECT
// Fill 66 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999804746782659	WITHOUT_CLASSIFICATION	1.9525321734070673E-5	DEFECT
// Fill 12 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999774226737901	WITHOUT_CLASSIFICATION	2.2577326209889878E-5	DEFECT
// Fill 36 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999887713528549	WITHOUT_CLASSIFICATION	1.1228647144981125E-5	DEFECT
// Fill 4 of value (byte) -87 // Fill 9 of value (byte) 33 // Fill 53 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 28 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 8 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 55 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999096863880215	WITHOUT_CLASSIFICATION	9.031361197855632E-5	DEFECT
// Fill 23 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999914058459203	WITHOUT_CLASSIFICATION	8.59415407970234E-6	DEFECT
// Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999925250968589	WITHOUT_CLASSIFICATION	7.474903141117851E-6	DEFECT
// Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999865342765859	WITHOUT_CLASSIFICATION	1.3465723414008254E-5	DEFECT
// Fill 10 of value (byte) -19 // Fill 8 of value (byte) -87 // Fill 13 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 6 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999226639255074	WITHOUT_CLASSIFICATION	7.733607449250417E-5	DEFECT
// Fill 71 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 5 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999600110251786	WITHOUT_CLASSIFICATION	3.9988974821463694E-5	DEFECT
// Fill 15 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999847030437587	WITHOUT_CLASSIFICATION	1.5296956241239333E-5	DEFECT
// Fill 4 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999898005066338	WITHOUT_CLASSIFICATION	1.0199493366248514E-5	DEFECT
// Fill 15 of value (byte) -87 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999433957972929	WITHOUT_CLASSIFICATION	5.660420270716843E-5	DEFECT
// Fill 4 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 519 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999513772247157	WITHOUT_CLASSIFICATION	4.8622775284178764E-5	DEFECT
// Fill 53 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999484745906762	WITHOUT_CLASSIFICATION	5.152540932374651E-5	DEFECT
// Fill 8 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 22 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999715410320319	WITHOUT_CLASSIFICATION	2.8458967968031264E-5	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999897051715839	WITHOUT_CLASSIFICATION	1.0294828416031132E-5	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999897051715839	WITHOUT_CLASSIFICATION	1.0294828416031132E-5	DEFECT
// Fill 3 of value (byte) 33 // Fill 4 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999684616085559	WITHOUT_CLASSIFICATION	3.1538391444115696E-5	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999867520084271	WITHOUT_CLASSIFICATION	1.3247991572831958E-5	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999867520084271	WITHOUT_CLASSIFICATION	1.3247991572831958E-5	DEFECT
// Fill 5 of value (byte) -87 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87 // Fill 11 of value (byte) 33 // Fill 4 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999667102474858	WITHOUT_CLASSIFICATION	3.328975251407433E-5	DEFECT
// Fill 8 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 22 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999715410320319	WITHOUT_CLASSIFICATION	2.8458967968031264E-5	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999897051715839	WITHOUT_CLASSIFICATION	1.0294828416031132E-5	DEFECT
// Fill 7 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87 // Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999608302383178	WITHOUT_CLASSIFICATION	3.916976168216594E-5	DEFECT
// Fill 4 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999748212646811	WITHOUT_CLASSIFICATION	2.5178735318925725E-5	DEFECT
// Fill 3 of value (byte) -19 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 2 of value (byte) -19 // Fill 16 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999702491841824	WITHOUT_CLASSIFICATION	2.9750815817486545E-5	DEFECT
// Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 22 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999317240507664	WITHOUT_CLASSIFICATION	6.827594923361644E-5	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999867520084271	WITHOUT_CLASSIFICATION	1.3247991572831958E-5	DEFECT
// Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999653012729811	WITHOUT_CLASSIFICATION	3.469872701886648E-5	DEFECT
// Fill 7 of value (byte) 33 // Fill 12 of value (byte) -87 // Fill 3 of value (byte) -19 // Fill 12 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999581762964328	WITHOUT_CLASSIFICATION	4.182370356722648E-5	DEFECT
// Fill 22 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999867207874256	WITHOUT_CLASSIFICATION	1.3279212574484505E-5	DEFECT
// Fill 5 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.999937123591352	WITHOUT_CLASSIFICATION	6.287640864794899E-5	DEFECT
// Fill 8 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999883035926864	WITHOUT_CLASSIFICATION	1.1696407313570648E-5	DEFECT
// Fill 3 of value (byte) -87 // Fill 18 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999773530171607	WITHOUT_CLASSIFICATION	2.264698283931797E-5	DEFECT
// Fill 5 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 17 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999602930501871	WITHOUT_CLASSIFICATION	3.9706949812937254E-5	DEFECT
// Fill 6 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87 // Fill 8 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999135539800625	WITHOUT_CLASSIFICATION	8.644601993743384E-5	DEFECT
// Fill 3 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 18 of value (byte) 33 // Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999588233266111	WITHOUT_CLASSIFICATION	4.117667338889702E-5	DEFECT
// Fill 6 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999572470211362	WITHOUT_CLASSIFICATION	4.27529788638851E-5	DEFECT
// Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 3 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999714481753978	WITHOUT_CLASSIFICATION	2.8551824602150734E-5	DEFECT
// Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999925250968589	WITHOUT_CLASSIFICATION	7.474903141117851E-6	DEFECT
// Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999925250968589	WITHOUT_CLASSIFICATION	7.474903141117851E-6	DEFECT
// Fill 4 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999751940478369	WITHOUT_CLASSIFICATION	2.4805952163193286E-5	DEFECT
// Fill 3 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 5 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999643688639985	WITHOUT_CLASSIFICATION	3.563113600152162E-5	DEFECT
// Fill 4 of value (byte) -87 // Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999616514922893	WITHOUT_CLASSIFICATION	3.834850771065776E-5	DEFECT
// Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999882602858358	WITHOUT_CLASSIFICATION	1.1739714164162484E-5	DEFECT
// Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999882602858358	WITHOUT_CLASSIFICATION	1.1739714164162484E-5	DEFECT
// Fill 23 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999915448083735	WITHOUT_CLASSIFICATION	8.455191626509024E-6	DEFECT
// Fill 23 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999915448083735	WITHOUT_CLASSIFICATION	8.455191626509024E-6	DEFECT
// Fill 10 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999902024540713	WITHOUT_CLASSIFICATION	9.797545928579068E-6	DEFECT
// Fill 10 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999902024540713	WITHOUT_CLASSIFICATION	9.797545928579068E-6	DEFECT
// Fill 5 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 7 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999605003532998	WITHOUT_CLASSIFICATION	3.949964670030589E-5	DEFECT
// Fill 4 of value (byte) -87 // Fill 7 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 7 of value (byte) 33	WITHOUT_CLASSIFICATION	0.999973514785794	WITHOUT_CLASSIFICATION	2.6485214206018006E-5	DEFECT
// Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999865342765859	WITHOUT_CLASSIFICATION	1.3465723414008254E-5	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999897051715839	WITHOUT_CLASSIFICATION	1.0294828416031132E-5	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999867520084271	WITHOUT_CLASSIFICATION	1.3247991572831958E-5	DEFECT
// Fill 4 of value (byte) -87 // Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999616514922893	WITHOUT_CLASSIFICATION	3.834850771065776E-5	DEFECT
// Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999882602858358	WITHOUT_CLASSIFICATION	1.1739714164162484E-5	DEFECT
// Fill 23 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999915448083735	WITHOUT_CLASSIFICATION	8.455191626509024E-6	DEFECT
// Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 18 of value (byte) 33 // Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999558598314477	WITHOUT_CLASSIFICATION	4.4140168552196615E-5	DEFECT
// Fill 16 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 6 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999469861902863	WITHOUT_CLASSIFICATION	5.301380971359672E-5	DEFECT
// Fill 8 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 145 of value (byte) 33 // Fill 46 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999107893103419	WITHOUT_CLASSIFICATION	8.92106896581474E-5	DEFECT
// Fill 2 of value (byte) -19 // Fill 7 of value (byte) -87 // Fill 5 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 9 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9998263184754275	WITHOUT_CLASSIFICATION	1.7368152457249993E-4	DEFECT
// Fill 10 of value (byte) -87 // Fill 39 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999972324383063	WITHOUT_CLASSIFICATION	2.767561693688409E-5	DEFECT
// Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999773296732647	WITHOUT_CLASSIFICATION	2.2670326735227874E-5	DEFECT
// Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999773296732647	WITHOUT_CLASSIFICATION	2.2670326735227874E-5	DEFECT
// Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999892836949444	WITHOUT_CLASSIFICATION	1.071630505551448E-5	DEFECT
// Fill 6 of value (byte) 33 // Fill 4 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999518030661255	WITHOUT_CLASSIFICATION	4.819693387459872E-5	DEFECT
// Fill 2 of value (byte) -19 // Fill 6 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9998969592240593	WITHOUT_CLASSIFICATION	1.0304077594078614E-4	DEFECT
// Fill 2 of value (byte) 33 // Fill 5 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999589194539839	WITHOUT_CLASSIFICATION	4.1080546016118956E-5	DEFECT
// Fill 4 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999966441193709	WITHOUT_CLASSIFICATION	3.35588062908932E-5	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999897051715839	WITHOUT_CLASSIFICATION	1.0294828416031132E-5	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999867520084271	WITHOUT_CLASSIFICATION	1.3247991572831958E-5	DEFECT
// Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999892836949444	WITHOUT_CLASSIFICATION	1.071630505551448E-5	DEFECT
// Fill 33 of value (byte) -19 // Fill 7 of value (byte) 33 // Fill 20 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999552558065966	WITHOUT_CLASSIFICATION	4.474419340336574E-5	DEFECT
// Fill 6 of value (byte) -87 // Fill 4 of value (byte) 33 // Fill 6 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999553871753626	WITHOUT_CLASSIFICATION	4.4612824637343395E-5	DEFECT
// Fill 21 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 7 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999888075233818	WITHOUT_CLASSIFICATION	1.119247661814514E-5	DEFECT
// Fill 5 of value (byte) -19 // Fill 41 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999602461211352	WITHOUT_CLASSIFICATION	3.975387886487253E-5	DEFECT
// Fill 11 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999950025045945	WITHOUT_CLASSIFICATION	4.997495405578267E-6	DEFECT
// Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999716035740995	WITHOUT_CLASSIFICATION	2.8396425900425584E-5	DEFECT
// Fill 5 of value (byte) 33 // Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999734350804461	WITHOUT_CLASSIFICATION	2.656491955389587E-5	DEFECT
// Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999776653190675	WITHOUT_CLASSIFICATION	2.2334680932517156E-5	DEFECT
// Fill 40 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999896079134049	WITHOUT_CLASSIFICATION	1.0392086595171905E-5	DEFECT
// Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999869199850843	WITHOUT_CLASSIFICATION	1.3080014915780674E-5	DEFECT
// Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 7 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999731601805874	WITHOUT_CLASSIFICATION	2.6839819412745296E-5	DEFECT
// Fill 7 of value (byte) -19 // Fill 40 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999622786215797	WITHOUT_CLASSIFICATION	3.772137842018306E-5	DEFECT
// Fill 4 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999917496310254	WITHOUT_CLASSIFICATION	8.250368974620697E-6	DEFECT
// Fill 8 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999905037438095	WITHOUT_CLASSIFICATION	9.496256190553913E-6	DEFECT
// Fill 68 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999868143374622	WITHOUT_CLASSIFICATION	1.3185662537728356E-5	DEFECT
// Fill 3 of value (byte) 33 // Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999853402267836	WITHOUT_CLASSIFICATION	1.465977321643742E-5	DEFECT
// Fill 7 of value (byte) -19 // Fill 211 of value (byte) 33 // Fill 13 of value (byte) -87 // Fill 4 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999814842951584	WITHOUT_CLASSIFICATION	1.8515704841527515E-5	DEFECT
// Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999716035740995	WITHOUT_CLASSIFICATION	2.8396425900425584E-5	DEFECT
// Fill 81 of value (byte) 33 // Fill 3 of value (byte) -19 // Fill 3714 of value (byte) 33	WITHOUT_CLASSIFICATION	0.999975170921839	WITHOUT_CLASSIFICATION	2.4829078161034898E-5	DEFECT
// Fill 25 of value (byte) 33 // Fill 9 of value (byte) -19 // Fill 6 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9998674257174999	WITHOUT_CLASSIFICATION	1.3257428250013783E-4	DEFECT
// Fill 5 of value (byte) -87 // Fill 11 of value (byte) 33 // Fill 84 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 90 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999429467497545	WITHOUT_CLASSIFICATION	5.705325024550361E-5	DEFECT
// Fill 3 of value (byte) -87 // Fill 6 of value (byte) 33 // Fill 40 of value (byte) -19 // Fill 7379 of value (byte) 33 // Fill 20902 of value (byte) -19 // Fill 3162 of value (byte) 33 // Fill 11172 of value (byte) -19 // Fill 92 of value (byte) 33 // Fill 8190 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9995513755732977	WITHOUT_CLASSIFICATION	4.4862442670234745E-4	DEFECT
// isValid(int):boolean	WITHOUT_CLASSIFICATION	0.9999999518706905	WITHOUT_CLASSIFICATION	4.812930944488273E-8	DEFECT
// isInvalid(int):boolean	WITHOUT_CLASSIFICATION	0.9999999686231535	WITHOUT_CLASSIFICATION	3.137684649310971E-8	DEFECT
// isContent(int):boolean	WITHOUT_CLASSIFICATION	0.9999999279841217	WITHOUT_CLASSIFICATION	7.201587831125981E-8	DEFECT
// isMarkup(int):boolean	WITHOUT_CLASSIFICATION	0.9999999744472453	WITHOUT_CLASSIFICATION	2.555275466285633E-8	DEFECT
// isSpace(int):boolean	WITHOUT_CLASSIFICATION	0.9999999754695589	WITHOUT_CLASSIFICATION	2.4530441158641334E-8	DEFECT
// isNameStart(int):boolean	WITHOUT_CLASSIFICATION	0.9999999928938041	WITHOUT_CLASSIFICATION	7.106195855917807E-9	DEFECT
// isName(int):boolean	WITHOUT_CLASSIFICATION	0.9999999509410912	WITHOUT_CLASSIFICATION	4.9058908701421756E-8	DEFECT
// isNCNameStart(int):boolean	WITHOUT_CLASSIFICATION	0.9999999947597625	WITHOUT_CLASSIFICATION	5.240237573291423E-9	DEFECT
// isNCName(int):boolean	WITHOUT_CLASSIFICATION	0.9999999638230714	WITHOUT_CLASSIFICATION	3.617692851791842E-8	DEFECT
// isPubid(int):boolean	WITHOUT_CLASSIFICATION	0.9999999380663659	WITHOUT_CLASSIFICATION	6.193363418774316E-8	DEFECT
/*      * [5] Name ::= (Letter | '_' | ':') (NameChar)*      */	WITHOUT_CLASSIFICATION	0.9999998709167278	WITHOUT_CLASSIFICATION	1.290832722641383E-7	DEFECT
// isValidName(String):boolean	WITHOUT_CLASSIFICATION	0.9999999798847082	WITHOUT_CLASSIFICATION	2.0115291811287772E-8	DEFECT
/*      * from the namespace rec      * [4] NCName ::= (Letter | '_') (NCNameChar)*      */	WITHOUT_CLASSIFICATION	0.9999998531721326	WITHOUT_CLASSIFICATION	1.4682786739556769E-7	DEFECT
// isValidNCName(String):boolean	WITHOUT_CLASSIFICATION	0.9999999703657032	WITHOUT_CLASSIFICATION	2.9634296856389562E-8	DEFECT
/*      * [7] Nmtoken ::= (NameChar)+      */	WITHOUT_CLASSIFICATION	0.9999972807534755	WITHOUT_CLASSIFICATION	2.7192465244848475E-6	DEFECT
// encodings	WITHOUT_CLASSIFICATION	0.9999988387133627	WITHOUT_CLASSIFICATION	1.1612866372085481E-6	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999995972496601	WITHOUT_CLASSIFICATION	4.0275033974482523E-7	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.999999600561112	WITHOUT_CLASSIFICATION	3.994388879112048E-7	DEFECT
// // Public static methods //	WITHOUT_CLASSIFICATION	0.9999999876712176	WITHOUT_CLASSIFICATION	1.2328782507875913E-8	DEFECT
// isValidIANAEncoding(String):boolean	WITHOUT_CLASSIFICATION	0.9999999508709689	WITHOUT_CLASSIFICATION	4.9129031082930014E-8	DEFECT
// isValidIANAEncoding(String):boolean	WITHOUT_CLASSIFICATION	0.9999999508709689	WITHOUT_CLASSIFICATION	4.9129031082930014E-8	DEFECT
//order constants	WITHOUT_CLASSIFICATION	0.9999995498911691	WITHOUT_CLASSIFICATION	4.501088307930175E-7	DEFECT
// check whether the character is in the range 0x30 ~ 0x39	WITHOUT_CLASSIFICATION	0.9999999535349546	WITHOUT_CLASSIFICATION	4.6465045446336855E-8	DEFECT
// if the character is in the range 0x30 ~ 0x39, return its int value (0~9), // otherwise, return -1	WITHOUT_CLASSIFICATION	0.9999999998838646	WITHOUT_CLASSIFICATION	1.1613546031192955E-10	DEFECT
// There are attributes to handle.	WITHOUT_CLASSIFICATION	0.9999992061096078	WITHOUT_CLASSIFICATION	7.938903923394674E-7	DEFECT
// There are attributes to handle.	WITHOUT_CLASSIFICATION	0.9999992061096078	WITHOUT_CLASSIFICATION	7.938903923394674E-7	DEFECT
//XMLTypeResourceImpl	WITHOUT_CLASSIFICATION	0.9999819721320875	WITHOUT_CLASSIFICATION	1.8027867912505288E-5	DEFECT
//XMLTypeValidator	WITHOUT_CLASSIFICATION	0.9999590014548824	WITHOUT_CLASSIFICATION	4.0998545117697295E-5	DEFECT
// If the feature is a bidirectional reference with a multiplicity-many reverse, a composite reverse, // or a multiplicity-1 reverse that is already set (on value), then we'll switch things around and  // execute this command a little differently, because otherwise it's not undoable. //	WITHOUT_CLASSIFICATION	0.9999999728277559	WITHOUT_CLASSIFICATION	2.7172244121777277E-8	DEFECT
// We never directly set a multiplicity-many feature to a list directly.  Instead, we remove the old values // values, move the values that remain, and insert the new values.  If all old values are removed, we'll still // set it to an empty list, or unset it, as appropriate.  //	WITHOUT_CLASSIFICATION	0.9999841830488656	WITHOUT_CLASSIFICATION	1.5816951134428395E-5	DEFECT
// If we aren't simply removing all the old values... //	WITHOUT_CLASSIFICATION	0.985109424488678	WITHOUT_CLASSIFICATION	0.014890575511322019	DEFECT
// If there are values to remove, append a command for them. //	WITHOUT_CLASSIFICATION	0.99999183548372	WITHOUT_CLASSIFICATION	8.164516280120353E-6	DEFECT
// Determine the values that will remain and move them into the right order, if necessary. //	WITHOUT_CLASSIFICATION	0.9999996554776239	WITHOUT_CLASSIFICATION	3.445223760843588E-7	DEFECT
// end setting whole list	WITHOUT_CLASSIFICATION	0.999999970036326	WITHOUT_CLASSIFICATION	2.9963673902101234E-8	DEFECT
// For a 1-to-many association, doing the set as a remove and add from the other end will make it undoable. // In particular, if there is an existing non-null value, we first need to remove it from the other end, so // that it will be reinserted at the correct index on undo.  //	WITHOUT_CLASSIFICATION	0.9992509229026881	WITHOUT_CLASSIFICATION	7.49077097311991E-4	DEFECT
// (value == null) && (oldValue == null) // A simple set/unset will suffice. //	WITHOUT_CLASSIFICATION	0.9999874424782081	WITHOUT_CLASSIFICATION	1.2557521791843691E-5	DEFECT
// (value == null) && (oldValue != null) // Remove owner from the old value and unset if necessary. //	WITHOUT_CLASSIFICATION	0.9999515311934274	WITHOUT_CLASSIFICATION	4.846880657251325E-5	DEFECT
// ((value != null) 	WITHOUT_CLASSIFICATION	0.9999923214880406	WITHOUT_CLASSIFICATION	7.678511959276688E-6	DEFECT
// (value != null) && (oldValue == null) // Add owner to new value. //	WITHOUT_CLASSIFICATION	0.999992148733479	WITHOUT_CLASSIFICATION	7.851266520984127E-6	DEFECT
// ((value != null) && (oldValue != null)) // Need a compound command to remove owner from old value and add it to new value. //	WITHOUT_CLASSIFICATION	0.9999236746807852	WITHOUT_CLASSIFICATION	7.632531921479666E-5	DEFECT
// For consistency, we always set 1-1 container relations from the container end. //	WITHOUT_CLASSIFICATION	0.9999986247823519	WITHOUT_CLASSIFICATION	1.3752176481306343E-6	DEFECT
// For a many-to-1 or 1-to-1 association, if the opposite reference on the new value is already set to // something, we need a compound command that first explicitly removes that reference, so that it will be // restored in the undo. //	WITHOUT_CLASSIFICATION	0.9999999842810953	WITHOUT_CLASSIFICATION	1.5718904800252614E-8	DEFECT
// For a many-to-1, we use SetCommand.create() to create the command to remove the opposite reference; // a RemoveCommand on its opposite will actually result. //	WITHOUT_CLASSIFICATION	0.9995778069125352	WITHOUT_CLASSIFICATION	4.2219308746477144E-4	DEFECT
// For a 1-to-1, we can directly create a SetCommand. //	WITHOUT_CLASSIFICATION	0.9999400605183959	WITHOUT_CLASSIFICATION	5.9939481604153086E-5	DEFECT
// Initialize all the fields from the command parameter. //	WITHOUT_CLASSIFICATION	0.9999874414914772	WITHOUT_CLASSIFICATION	1.2558508522719326E-5	DEFECT
// If there is an owner. //	WITHOUT_CLASSIFICATION	0.999998701127453	WITHOUT_CLASSIFICATION	1.2988725469546242E-6	DEFECT
// Get the owner's meta object. //	WITHOUT_CLASSIFICATION	0.9999998973046297	WITHOUT_CLASSIFICATION	1.0269537035283459E-7	DEFECT
// Is the feature an attribute of the owner... //	WITHOUT_CLASSIFICATION	0.9999812924826019	WITHOUT_CLASSIFICATION	1.8707517398016723E-5	DEFECT
// If must be of this type then. //	WITHOUT_CLASSIFICATION	0.999997207746865	WITHOUT_CLASSIFICATION	2.7922531350941353E-6	DEFECT
// Setting at an index. Make sure the index is valid, the type is valid, and the value isn't already in a // unique feature. Record the old value. //	WITHOUT_CLASSIFICATION	0.999960128295972	WITHOUT_CLASSIFICATION	3.9871704027923814E-5	DEFECT
// If the attribute is set, record it's old value. //	WITHOUT_CLASSIFICATION	0.9999944339274739	WITHOUT_CLASSIFICATION	5.566072526074596E-6	DEFECT
// oldValue = owner.eGet(feature);	WITHOUT_CLASSIFICATION	0.9999963541225317	WITHOUT_CLASSIFICATION	3.645877468160421E-6	DEFECT
// Make sure the container is not being put into a contained object. //	WITHOUT_CLASSIFICATION	0.9999989251837104	WITHOUT_CLASSIFICATION	1.0748162896171202E-6	DEFECT
// If the other end is a many, then we should remove the owner from the old value's opposite feature so that undo will put it back. //	WITHOUT_CLASSIFICATION	0.9993591093547011	WITHOUT_CLASSIFICATION	6.408906452988373E-4	DEFECT
// If the other end is single, then we should unset the owner from the old value's opposite feature so that undo will put it back. //	WITHOUT_CLASSIFICATION	0.9999805011769107	WITHOUT_CLASSIFICATION	1.949882308927966E-5	DEFECT
// Either set or unset the feature. //	WITHOUT_CLASSIFICATION	0.9999996362501855	WITHOUT_CLASSIFICATION	3.637498145678701E-7	DEFECT
// Either set or unset the feature. //	WITHOUT_CLASSIFICATION	0.9999996362501855	WITHOUT_CLASSIFICATION	3.637498145678701E-7	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9999999583012655	WITHOUT_CLASSIFICATION	4.1698734448853985E-8	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9999999583012655	WITHOUT_CLASSIFICATION	4.1698734448853985E-8	DEFECT
// Either set or unset the old value. //	WITHOUT_CLASSIFICATION	0.999998378883026	WITHOUT_CLASSIFICATION	1.6211169740780196E-6	DEFECT
// If there is no list to add to, no collection or an empty collection from which to add, or the index is out of range... //	WITHOUT_CLASSIFICATION	0.9999998161388461	WITHOUT_CLASSIFICATION	1.8386115385431503E-7	DEFECT
// If it's a feature map, we'll need to validate the entry feature and enforce its multiplicity restraints. //	WITHOUT_CLASSIFICATION	0.999999980529356	WITHOUT_CLASSIFICATION	1.9470643976472143E-8	DEFECT
// Keep track of all the entry features that are already in the feature map and that will be added, excluding // XML text, CDATA, and comments (if we're in a mixed type). //	WITHOUT_CLASSIFICATION	0.9995760472205986	WITHOUT_CLASSIFICATION	4.239527794014415E-4	DEFECT
// Check each object...  //	WITHOUT_CLASSIFICATION	0.999987629627909	WITHOUT_CLASSIFICATION	1.2370372091000904E-5	DEFECT
// Check type of object. //	WITHOUT_CLASSIFICATION	0.9999924301020111	WITHOUT_CLASSIFICATION	7.569897988895668E-6	DEFECT
// Check that the object isn't already in a unique list. //	WITHOUT_CLASSIFICATION	0.999973090689662	WITHOUT_CLASSIFICATION	2.690931033799956E-5	DEFECT
// For feature maps, test that the entry feature is a valid type, that the entry value is an instance of it, // that there is not already something in a document root, and that there is not already something in a // single-valued entry feature. //	WITHOUT_CLASSIFICATION	0.9999747868131296	WITHOUT_CLASSIFICATION	2.5213186870359536E-5	DEFECT
// Check to see if a container is being put into a contained object. //	WITHOUT_CLASSIFICATION	0.9999998528096227	WITHOUT_CLASSIFICATION	1.4719037728080312E-7	DEFECT
// Simply add the collection to the list. //	WITHOUT_CLASSIFICATION	0.9999996003711713	WITHOUT_CLASSIFICATION	3.996288286420515E-7	DEFECT
// Simply add the collection to the list. //	WITHOUT_CLASSIFICATION	0.9999996003711713	WITHOUT_CLASSIFICATION	3.996288286420515E-7	DEFECT
// We'd like the collection of things added to be selected after this command completes. //	WITHOUT_CLASSIFICATION	0.9999220371142106	WITHOUT_CLASSIFICATION	7.796288578948009E-5	DEFECT
// We'd like the collection of things added to be selected after this command completes. //	WITHOUT_CLASSIFICATION	0.9999220371142106	WITHOUT_CLASSIFICATION	7.796288578948009E-5	DEFECT
// Remove the collection from the list by index. //	WITHOUT_CLASSIFICATION	0.9999710647806251	WITHOUT_CLASSIFICATION	2.893521937486999E-5	DEFECT
// We'd like the owner selected after this undo completes. //	WITHOUT_CLASSIFICATION	0.9999989591447791	WITHOUT_CLASSIFICATION	1.0408552209719136E-6	DEFECT
// It must be an unsettable feature to be null and considered set. //	WITHOUT_CLASSIFICATION	0.9999998794281166	WITHOUT_CLASSIFICATION	1.205718833375357E-7	DEFECT
// It must be an unsettable feature to be empty and considered set. //	WITHOUT_CLASSIFICATION	0.9999998793331423	WITHOUT_CLASSIFICATION	1.2066685763264188E-7	DEFECT
// if one is null, they'll all be null	WITHOUT_CLASSIFICATION	0.9999996908362913	WITHOUT_CLASSIFICATION	3.091637086774432E-7	DEFECT
// Possible scope for the ChangeRecorder	WITHOUT_CLASSIFICATION	0.9999999700548395	WITHOUT_CLASSIFICATION	2.994516054193267E-8	DEFECT
// Create commands to create copies of the children. //	WITHOUT_CLASSIFICATION	0.9999983622390205	WITHOUT_CLASSIFICATION	1.6377609794997423E-6	DEFECT
// We'll default to this. //	WITHOUT_CLASSIFICATION	0.9999999567536417	WITHOUT_CLASSIFICATION	4.3246358321653255E-8	DEFECT
// If there isn't something obviously wrong with the arguments... //	WITHOUT_CLASSIFICATION	0.9998092710579594	WITHOUT_CLASSIFICATION	1.9072894204061894E-4	DEFECT
// If the location is near the boundary, we'll start by trying to do a drop insert. //	WITHOUT_CLASSIFICATION	0.9999999567466903	WITHOUT_CLASSIFICATION	4.325330965960049E-8	DEFECT
// If we could do a drop insert operation... //	WITHOUT_CLASSIFICATION	0.9999841229264972	WITHOUT_CLASSIFICATION	1.5877073502811968E-5	DEFECT
// Set the bounds so that we re-check when we are closer to the middle. //	WITHOUT_CLASSIFICATION	0.9999999263343441	WITHOUT_CLASSIFICATION	7.3665655888562E-8	DEFECT
// We can try to do a drop on instead. //	WITHOUT_CLASSIFICATION	0.9999886794949076	WITHOUT_CLASSIFICATION	1.1320505092365322E-5	DEFECT
// Set the bounds so that we re-check when we get near the other end. //	WITHOUT_CLASSIFICATION	0.9999997467858209	WITHOUT_CLASSIFICATION	2.5321417911231656E-7	DEFECT
// We are near the middle, so we'll start by trying to do a drop on. //	WITHOUT_CLASSIFICATION	0.9999999919953677	WITHOUT_CLASSIFICATION	8.004632391958524E-9	DEFECT
// If we can do a drop on operation. //	WITHOUT_CLASSIFICATION	0.9999803996653074	WITHOUT_CLASSIFICATION	1.9600334692596167E-5	DEFECT
// Set the range so that we re-check when we get aren't in the middle. //	WITHOUT_CLASSIFICATION	0.9999738103428116	WITHOUT_CLASSIFICATION	2.618965718843418E-5	DEFECT
// We can reset and try a drop insert instead. //	WITHOUT_CLASSIFICATION	0.9999704690792746	WITHOUT_CLASSIFICATION	2.95309207253535E-5	DEFECT
// We'll always be wrong for these arguments, so don't bother re-checking. //	WITHOUT_CLASSIFICATION	0.9999916767284304	WITHOUT_CLASSIFICATION	8.323271569592057E-6	DEFECT
// This will be the default return value. //	WITHOUT_CLASSIFICATION	0.9999996285492168	WITHOUT_CLASSIFICATION	3.714507832494802E-7	DEFECT
// The feedback is set based on which half we are in. // If the command isn't executable, these values won't be used. //	WITHOUT_CLASSIFICATION	0.999676416162611	WITHOUT_CLASSIFICATION	3.235838373889909E-4	DEFECT
// If we can't determine the parent. //	WITHOUT_CLASSIFICATION	0.9999752435062632	WITHOUT_CLASSIFICATION	2.4756493736758202E-5	DEFECT
// Iterate over the children to find the owner. //	WITHOUT_CLASSIFICATION	0.9999999456363498	WITHOUT_CLASSIFICATION	5.4363650264787096E-8	DEFECT
// When we match the owner, we're done. //	WITHOUT_CLASSIFICATION	0.9999994646544003	WITHOUT_CLASSIFICATION	5.353455997614073E-7	DEFECT
// Try to create a specific command based on the current desired operation. //	WITHOUT_CLASSIFICATION	0.9999999940667134	WITHOUT_CLASSIFICATION	5.93328661460748E-9	DEFECT
// If there isn't an executable command we should maybe try a copy operation, but only if we're allowed and not doing a link. //	WITHOUT_CLASSIFICATION	0.9998171103098727	WITHOUT_CLASSIFICATION	1.8288969012720955E-4	DEFECT
// Try again. //	WITHOUT_CLASSIFICATION	0.9999979305354721	WITHOUT_CLASSIFICATION	2.069464527912023E-6	DEFECT
// We've switch the operation! //	WITHOUT_CLASSIFICATION	0.9999993047253435	WITHOUT_CLASSIFICATION	6.952746564499239E-7	DEFECT
// We've switch the operation! //	WITHOUT_CLASSIFICATION	0.9999993047253435	WITHOUT_CLASSIFICATION	6.952746564499239E-7	DEFECT
// We don't want to move insert an object before or after itself... //	WITHOUT_CLASSIFICATION	0.9999756425168019	WITHOUT_CLASSIFICATION	2.435748319810125E-5	DEFECT
// If the dragged objects share a parent... //	WITHOUT_CLASSIFICATION	0.99995315947951	WITHOUT_CLASSIFICATION	4.684052048993826E-5	DEFECT
// Just remove the objects and add them. //	WITHOUT_CLASSIFICATION	0.9999993099978879	WITHOUT_CLASSIFICATION	6.900021121992343E-7	DEFECT
// We don't want to copy insert an object before or after itself... //	WITHOUT_CLASSIFICATION	0.9999171836710867	WITHOUT_CLASSIFICATION	8.281632891320078E-5	DEFECT
// Copy the collection //	WITHOUT_CLASSIFICATION	0.9999971390718663	WITHOUT_CLASSIFICATION	2.8609281336657873E-6	DEFECT
// And add the copy. //	WITHOUT_CLASSIFICATION	0.9999766226265924	WITHOUT_CLASSIFICATION	2.3377373407655287E-5	DEFECT
// if optimize // if collection	WITHOUT_CLASSIFICATION	0.9999997830761718	WITHOUT_CLASSIFICATION	2.1692382819376247E-7	DEFECT
// We don't want to insert an object before or after itself... //	WITHOUT_CLASSIFICATION	0.9999467359550422	WITHOUT_CLASSIFICATION	5.326404495770643E-5	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9999999583012655	WITHOUT_CLASSIFICATION	4.1698734448853985E-8	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9999999583012655	WITHOUT_CLASSIFICATION	4.1698734448853985E-8	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9999999583012655	WITHOUT_CLASSIFICATION	4.1698734448853985E-8	DEFECT
// If there isn't an executable command we should maybe try a copy operation, but only if we're allowed and not doing a link. //	WITHOUT_CLASSIFICATION	0.9998171103098727	WITHOUT_CLASSIFICATION	1.8288969012720955E-4	DEFECT
// If there isn't an executable command we should maybe try a link operation, but only if we're allowed and not doing a link. //	WITHOUT_CLASSIFICATION	0.9999218404828932	WITHOUT_CLASSIFICATION	7.815951710673068E-5	DEFECT
// Add the collection //	WITHOUT_CLASSIFICATION	0.9999972235262001	WITHOUT_CLASSIFICATION	2.776473799906381E-6	DEFECT
// This is the default return value. //	WITHOUT_CLASSIFICATION	0.9999989880533753	WITHOUT_CLASSIFICATION	1.011946624665171E-6	DEFECT
// This is the feedback we use to indicate drop on; it will only be used if the command is executable. //	WITHOUT_CLASSIFICATION	0.999991911346333	WITHOUT_CLASSIFICATION	8.088653666933606E-6	DEFECT
// Prepare the right type of operation. //	WITHOUT_CLASSIFICATION	0.9999943533161986	WITHOUT_CLASSIFICATION	5.646683801489871E-6	DEFECT
// If we can't set the collection, try setting use the single value of the collection. //	WITHOUT_CLASSIFICATION	0.9999810688005537	WITHOUT_CLASSIFICATION	1.893119944633784E-5	DEFECT
// We'll assume that the copy command can execute and that adding a copy of the clipboard // is the same test as adding the clipboard contents itself. //	WITHOUT_CLASSIFICATION	0.9999999805422775	WITHOUT_CLASSIFICATION	1.9457722477617896E-8	DEFECT
// Reset as in the constructor. //	WITHOUT_CLASSIFICATION	0.9999999565757668	WITHOUT_CLASSIFICATION	4.342423313538946E-8	DEFECT
// If the operation has changed significantly... //	WITHOUT_CLASSIFICATION	0.9999254569517136	WITHOUT_CLASSIFICATION	7.454304828633787E-5	DEFECT
// Clean it up. //	WITHOUT_CLASSIFICATION	0.9999998391293174	WITHOUT_CLASSIFICATION	1.6087068250182705E-7	DEFECT
// Set the arguments again. //	WITHOUT_CLASSIFICATION	0.9999999789682537	WITHOUT_CLASSIFICATION	2.103174625592409E-8	DEFECT
// Determine if the operation is executable. //	WITHOUT_CLASSIFICATION	0.9999999961462674	WITHOUT_CLASSIFICATION	3.853732524358229E-9	DEFECT
// Just return the cached result. //	WITHOUT_CLASSIFICATION	0.9999979602993608	WITHOUT_CLASSIFICATION	2.039700639204676E-6	DEFECT
// Only return the operation for an executable command. //	WITHOUT_CLASSIFICATION	0.999999862291793	WITHOUT_CLASSIFICATION	1.3770820696078003E-7	DEFECT
// Thread.dumpStack();	WITHOUT_CLASSIFICATION	0.9999995689171615	WITHOUT_CLASSIFICATION	4.3108283845835906E-7	DEFECT
// This can't execute if there is no owner list  // or the owner list doesn't contain the value being replaced or  // there are not replacements. //	WITHOUT_CLASSIFICATION	0.9999992681915063	WITHOUT_CLASSIFICATION	7.318084937896624E-7	DEFECT
// An extent allows anything to be added. //	WITHOUT_CLASSIFICATION	0.9999201726649962	WITHOUT_CLASSIFICATION	7.982733500379481E-5	DEFECT
// Make sure each object conforms to the type of the feature. //	WITHOUT_CLASSIFICATION	0.9999996139787896	WITHOUT_CLASSIFICATION	3.860212105166527E-7	DEFECT
// Record the position of the value in the owner list. //	WITHOUT_CLASSIFICATION	0.9999939264310866	WITHOUT_CLASSIFICATION	6.073568913324697E-6	DEFECT
// Simply remove the object from the owner list. //	WITHOUT_CLASSIFICATION	0.9999963305776812	WITHOUT_CLASSIFICATION	3.669422318839048E-6	DEFECT
// Insert the collection at the right place. //	WITHOUT_CLASSIFICATION	0.9999884929748525	WITHOUT_CLASSIFICATION	1.1507025147612681E-5	DEFECT
// We'd like the collection of replacements selected after this replace completes. //	WITHOUT_CLASSIFICATION	0.999996483716631	WITHOUT_CLASSIFICATION	3.5162833689031187E-6	DEFECT
// Remove the collection of replacements. //	WITHOUT_CLASSIFICATION	0.9999988159715507	WITHOUT_CLASSIFICATION	1.1840284492666938E-6	DEFECT
// Add the value back in the right place. //	WITHOUT_CLASSIFICATION	0.9999808808936883	WITHOUT_CLASSIFICATION	1.9119106311727126E-5	DEFECT
// We'd like the replaced selected after this undo replace completes. //	WITHOUT_CLASSIFICATION	0.9999989587003054	WITHOUT_CLASSIFICATION	1.0412996946201753E-6	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9999999583012655	WITHOUT_CLASSIFICATION	4.1698734448853985E-8	DEFECT
// We'll assume that the copy command can execute and that adding a copy of the clipboard // is the same test as adding the clipboard contents itself. //	WITHOUT_CLASSIFICATION	0.9999999805422775	WITHOUT_CLASSIFICATION	1.9457722477617896E-8	DEFECT
// Thread.dumpStack();	WITHOUT_CLASSIFICATION	0.9999995689171615	WITHOUT_CLASSIFICATION	4.3108283845835906E-7	DEFECT
// Create a strict compound command to do a copy and then add the result //	WITHOUT_CLASSIFICATION	0.999999737770944	WITHOUT_CLASSIFICATION	2.622290559945547E-7	DEFECT
// Create a command to copy the clipboard. //	WITHOUT_CLASSIFICATION	0.9999998765925282	WITHOUT_CLASSIFICATION	1.234074718073502E-7	DEFECT
// Create a proxy that will create an add command. //	WITHOUT_CLASSIFICATION	0.9999901334561453	WITHOUT_CLASSIFICATION	9.866543854723219E-6	DEFECT
// Use the original to do the add, but only if it's of the same type as the copy. // This ensures that if there is conversion being done as part of the copy, // as would be the case for a cross domain copy in the mapping framework, // that we do actually use the converted instance. //	WITHOUT_CLASSIFICATION	0.9999646748500193	WITHOUT_CLASSIFICATION	3.5325149980607704E-5	DEFECT
// This will determine canExecute as efficiently as possible. //	WITHOUT_CLASSIFICATION	0.9999950155537233	WITHOUT_CLASSIFICATION	4.984446276753411E-6	DEFECT
// This will actually execute the copy command in order to check if the add can execute. //	WITHOUT_CLASSIFICATION	0.9999382948185557	WITHOUT_CLASSIFICATION	6.170518144432555E-5	DEFECT
// We need to check canExecute() here in case prepare() went down the "optimize" path. //	WITHOUT_CLASSIFICATION	0.9999998811721842	WITHOUT_CLASSIFICATION	1.1882781572921556E-7	DEFECT
// This can execute if there is an owner list and a collection and the owner list contains all the objects of the collection. //	WITHOUT_CLASSIFICATION	0.9999930850988954	WITHOUT_CLASSIFICATION	6.9149011046590165E-6	DEFECT
// If this owned object is one from the collection... //	WITHOUT_CLASSIFICATION	0.9974759005384398	WITHOUT_CLASSIFICATION	0.0025240994615601505	DEFECT
// Remove the object from the collection and add it to the identity list. //	WITHOUT_CLASSIFICATION	0.9999744484774901	WITHOUT_CLASSIFICATION	2.5551522509865632E-5	DEFECT
// Record the index. //	WITHOUT_CLASSIFICATION	0.9999761045211674	WITHOUT_CLASSIFICATION	2.3895478832697943E-5	DEFECT
// Record the index. //	WITHOUT_CLASSIFICATION	0.9999761045211674	WITHOUT_CLASSIFICATION	2.3895478832697943E-5	DEFECT
// Second pass: match by value equality. //	WITHOUT_CLASSIFICATION	0.9999592345204557	WITHOUT_CLASSIFICATION	4.07654795444085E-5	DEFECT
// If this owned object is equal to one from the collection... //	WITHOUT_CLASSIFICATION	0.9999423220043916	WITHOUT_CLASSIFICATION	5.7677995608394295E-5	DEFECT
// Remove the object from the collection and add it to the equality list.  //	WITHOUT_CLASSIFICATION	0.9999982321739681	WITHOUT_CLASSIFICATION	1.7678260319033165E-6	DEFECT
// Merge the lists. //	WITHOUT_CLASSIFICATION	0.9999999686714162	WITHOUT_CLASSIFICATION	3.132858383097327E-8	DEFECT
// Remove objects from the owner list by index, starting from the end. //	WITHOUT_CLASSIFICATION	0.9999639307535305	WITHOUT_CLASSIFICATION	3.6069246469525266E-5	DEFECT
// We'd like the owner selected after this remove completes. //	WITHOUT_CLASSIFICATION	0.9999575814418207	WITHOUT_CLASSIFICATION	4.2418558179211544E-5	DEFECT
// If either list is empty, the result is simply the other. //	WITHOUT_CLASSIFICATION	0.9999984021448189	WITHOUT_CLASSIFICATION	1.5978551811395895E-6	DEFECT
// Allocate list and array for objects and indices. //	WITHOUT_CLASSIFICATION	0.9999987947075096	WITHOUT_CLASSIFICATION	1.205292490358857E-6	DEFECT
// Index counters into indices1, indices2, and indices.  //	WITHOUT_CLASSIFICATION	0.9999965341452344	WITHOUT_CLASSIFICATION	3.465854765598426E-6	DEFECT
// Object iterators. //	WITHOUT_CLASSIFICATION	0.9999999734590757	WITHOUT_CLASSIFICATION	2.654092440581621E-8	DEFECT
// Repeatedly select the lower index and corresponding object, and advance past the selected pair. //	WITHOUT_CLASSIFICATION	0.9999925381561445	WITHOUT_CLASSIFICATION	7.4618438555381774E-6	DEFECT
// We'd like the collection of things added to be selected after this command completes. //	WITHOUT_CLASSIFICATION	0.9999220371142106	WITHOUT_CLASSIFICATION	7.796288578948009E-5	DEFECT
// Create commands to create copies of the children. //	WITHOUT_CLASSIFICATION	0.9999983622390205	WITHOUT_CLASSIFICATION	1.6377609794997423E-6	DEFECT
// Thread.dumpStack();	WITHOUT_CLASSIFICATION	0.9999995689171615	WITHOUT_CLASSIFICATION	4.3108283845835906E-7	DEFECT
// Remove objects from the owner list by index, starting from the end. //	WITHOUT_CLASSIFICATION	0.9999639307535305	WITHOUT_CLASSIFICATION	3.6069246469525266E-5	DEFECT
// We'd like the owner selected after this remove completes. //	WITHOUT_CLASSIFICATION	0.9999575814418207	WITHOUT_CLASSIFICATION	4.2418558179211544E-5	DEFECT
// Create commands to create the copy object(s). //	WITHOUT_CLASSIFICATION	0.9999743710732768	WITHOUT_CLASSIFICATION	2.562892672318411E-5	DEFECT
// Create an initialize copy command for each of the created objects. //	WITHOUT_CLASSIFICATION	0.9999998676257502	WITHOUT_CLASSIFICATION	1.323742498016577E-7	DEFECT
// Record it for execution. //	WITHOUT_CLASSIFICATION	0.9998028728324291	WITHOUT_CLASSIFICATION	1.9712716757092877E-4	DEFECT
// This ensures that the CreateCopyCommand will be executed by StrictCompoundCommand.prepare(). //	WITHOUT_CLASSIFICATION	0.9999614683934899	WITHOUT_CLASSIFICATION	3.8531606510196105E-5	DEFECT
// This will execute the CreateCopyCommand's and then call canExecute on the InitializeCopyCommand's. //	WITHOUT_CLASSIFICATION	0.9999669370291554	WITHOUT_CLASSIFICATION	3.306297084453427E-5	DEFECT
// We'll assume that all the CreateCopyCommand's and InitializeCopyCommand's can execute. //	WITHOUT_CLASSIFICATION	0.9999994944208458	WITHOUT_CLASSIFICATION	5.055791541694903E-7	DEFECT
// This will call prepare() which will partially execute the command. //	WITHOUT_CLASSIFICATION	0.9989577375297718	WITHOUT_CLASSIFICATION	0.0010422624702281955	DEFECT
// We need to check canExecute() in case optimize is true. //	WITHOUT_CLASSIFICATION	0.9999999739632236	WITHOUT_CLASSIFICATION	2.60367763220507E-8	DEFECT
// Create a command to create a copy of the object. //	WITHOUT_CLASSIFICATION	0.9999984463745649	WITHOUT_CLASSIFICATION	1.553625435044867E-6	DEFECT
// This handles IStructuredSelection. //	WITHOUT_CLASSIFICATION	0.9999999507499069	WITHOUT_CLASSIFICATION	4.925009309350973E-8	DEFECT
// setResourceFactoryRegister(new ExtensibleContextResourceFactoryRegister()); //EATM setResourceFactoryRegister(new ContextResourceFactoryRegister());	WITHOUT_CLASSIFICATION	0.9999999796528777	WITHOUT_CLASSIFICATION	2.034712230644749E-8	DEFECT
// If the owner parameter is set, we delegate to the owner's adapter //	WITHOUT_CLASSIFICATION	0.9999998855232547	WITHOUT_CLASSIFICATION	1.1447674535372925E-7	DEFECT
// If there is an adapter of the correct type... //	WITHOUT_CLASSIFICATION	0.9941786530149719	WITHOUT_CLASSIFICATION	0.005821346985028048	DEFECT
// If command has no owner specified //	WITHOUT_CLASSIFICATION	0.9999999269533062	WITHOUT_CLASSIFICATION	7.304669382424117E-8	DEFECT
// For RemoveCommand, we will find the owner by calling EditingDomain.getParent() on the object(s) being removed. //	WITHOUT_CLASSIFICATION	0.9999150646544548	WITHOUT_CLASSIFICATION	8.493534554517774E-5	DEFECT
// If there is a column object, just convert it to a string. //	WITHOUT_CLASSIFICATION	0.9999999890292105	WITHOUT_CLASSIFICATION	1.0970789601705025E-8	DEFECT
// If there is an adapter of the correct type... //	WITHOUT_CLASSIFICATION	0.9941786530149719	WITHOUT_CLASSIFICATION	0.005821346985028048	DEFECT
// If there is an adapter of the correct type... //	WITHOUT_CLASSIFICATION	0.9941786530149719	WITHOUT_CLASSIFICATION	0.005821346985028048	DEFECT
// If there is an adapter of the correct type... //	WITHOUT_CLASSIFICATION	0.9941786530149719	WITHOUT_CLASSIFICATION	0.005821346985028048	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999998143591847	WITHOUT_CLASSIFICATION	1.8564081520207088E-7	DEFECT
// We will iterate over the whole collection, removing some as we go. //	WITHOUT_CLASSIFICATION	0.9999993279032477	WITHOUT_CLASSIFICATION	6.720967523594165E-7	DEFECT
// Take the first object, and remove it. //	WITHOUT_CLASSIFICATION	0.9999991445474452	WITHOUT_CLASSIFICATION	8.554525547569985E-7	DEFECT
// Determine the object's parent. //	WITHOUT_CLASSIFICATION	0.9999999035986752	WITHOUT_CLASSIFICATION	9.640132476021283E-8	DEFECT
// Now we want to find all the other objects with this same parent. // So we can collection siblings together and give the parent control over their removal. //	WITHOUT_CLASSIFICATION	0.9999968895428627	WITHOUT_CLASSIFICATION	3.110457137199819E-6	DEFECT
// Get the next object and check if it has the same parent. //	WITHOUT_CLASSIFICATION	0.9999956923778474	WITHOUT_CLASSIFICATION	4.307622152652952E-6	DEFECT
// Remove the object and add it as a sibling. //	WITHOUT_CLASSIFICATION	0.9997536663484272	WITHOUT_CLASSIFICATION	2.4633365157287E-4	DEFECT
// We will now create a command with this implied parent //	WITHOUT_CLASSIFICATION	0.9999915590052663	WITHOUT_CLASSIFICATION	8.440994733808935E-6	DEFECT
// The parent is null, which implies a top-level removal, so create a self-removing command. //	WITHOUT_CLASSIFICATION	0.9999990137464495	WITHOUT_CLASSIFICATION	9.862535505022673E-7	DEFECT
// If no object is specified, but an existing sibling is, the object is // its parent. //	WITHOUT_CLASSIFICATION	0.9999992364820741	WITHOUT_CLASSIFICATION	7.635179259607218E-7	DEFECT
// protected Object labelProvider;	WITHOUT_CLASSIFICATION	0.9999985234887039	WITHOUT_CLASSIFICATION	1.4765112961579457E-6	DEFECT
//return getDefaultValue(attribute.getEType());	WITHOUT_CLASSIFICATION	0.999998569836267	WITHOUT_CLASSIFICATION	1.430163732966725E-6	DEFECT
// If any children were added or removed, reset the indices.	WITHOUT_CLASSIFICATION	0.9999807753776686	WITHOUT_CLASSIFICATION	1.9224622331303343E-5	DEFECT
// Get the URI of the model file. //	WITHOUT_CLASSIFICATION	0.9999995321347683	WITHOUT_CLASSIFICATION	4.6786523159738616E-7	DEFECT
// isValidIANAEncoding(String):boolean	WITHOUT_CLASSIFICATION	0.9999999508709689	WITHOUT_CLASSIFICATION	4.9129031082930014E-8	DEFECT
// Wrap any new children and add them to the map. Remove each current child from the set of old children. //	WITHOUT_CLASSIFICATION	0.9999751650981723	WITHOUT_CLASSIFICATION	2.483490182766905E-5	DEFECT
// Remove and dispose any wrappers for remaining old children. //	WITHOUT_CLASSIFICATION	0.9997084257155686	WITHOUT_CLASSIFICATION	2.915742844314193E-4	DEFECT
// A SetCommand needs to go through SetCommand.create() to ensure it can execute and undo. //	WITHOUT_CLASSIFICATION	0.9999977110273839	WITHOUT_CLASSIFICATION	2.288972616121263E-6	DEFECT
/*  protected Command createSetCommand(EditingDomain domain, Object owner, Object feature, Object value)   {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, SetCommand.class, new CommandParameter(owner, feature, value));  }  protected Command createCopyCommand(EditingDomain domain, Object owner, CopyCommand.Helper helper)  {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, CopyCommand.class, new CommandParameter(owner, null, helper));  }  protected Command createCreateCopyCommand(EditingDomain domain, Object owner, CopyCommand.Helper helper)   {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, CreateCopyCommand.class, new CommandParameter(owner, null, helper));  }  protected Command createInitializeCopyCommand(EditingDomain domain, Object owner, CopyCommand.Helper helper)   {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, InitializeCopyCommand.class, new CommandParameter(owner, null, helper));  }  protected Command createRemoveCommand(EditingDomain domain, Object owner, Object feature, Collection collection)   {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, RemoveCommand.class, new CommandParameter(owner, feature, collection));  }  protected Command createReplaceCommand(EditingDomain domain, Object owner, Object feature, Object value, Collection collection)   {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, ReplaceCommand.class, new CommandParameter(owner, feature, value, collection));  }  protected Command createAddCommand(EditingDomain domain, Object owner, Object feature, Collection collection, int index)   {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, ReplaceCommand.class, new CommandParameter(owner, feature, collection, index));  }  protected Command createMoveCommand(EditingDomain domain, Object owner, Object feature, Object value, int index)   {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, ReplaceCommand.class, new CommandParameter(owner, feature, value, index));  }  protected Command createDragAndDropCommand    (EditingDomain domain, Object owner, float location, int operations, int operation, Collection collection)  {    DragAndDropCommand.Detail detail = new DragAndDropCommand.Detail(location, operations, operation);    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, DragAndDropCommand.class, new CommandParameter(owner, detail, collection));  }*/	WITHOUT_CLASSIFICATION	0.9999993680962785	WITHOUT_CLASSIFICATION	6.319037214667187E-7	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999998143591847	WITHOUT_CLASSIFICATION	1.8564081520207088E-7	DEFECT
// Now we could check that the adapter implements interface ITableItemLabelProvider. //	WITHOUT_CLASSIFICATION	0.9999998936812908	WITHOUT_CLASSIFICATION	1.063187091334655E-7	DEFECT
// Now we could check that the adapter implements interface ITableItemLabelProvider. //	WITHOUT_CLASSIFICATION	0.9999998936812908	WITHOUT_CLASSIFICATION	1.063187091334655E-7	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999994472408071	WITHOUT_CLASSIFICATION	5.527591928519591E-7	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999994472408071	WITHOUT_CLASSIFICATION	5.527591928519591E-7	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999994472408071	WITHOUT_CLASSIFICATION	5.527591928519591E-7	DEFECT
// Otherwise, we could check that the adapter implements interface IItemLabelProvider. //	WITHOUT_CLASSIFICATION	0.9999999379504696	WITHOUT_CLASSIFICATION	6.204953041108827E-8	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999998143591847	WITHOUT_CLASSIFICATION	1.8564081520207088E-7	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999994472408071	WITHOUT_CLASSIFICATION	5.527591928519591E-7	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9999989903431339	WITHOUT_CLASSIFICATION	1.0096568660966294E-6	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999994472408071	WITHOUT_CLASSIFICATION	5.527591928519591E-7	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999994472408071	WITHOUT_CLASSIFICATION	5.527591928519591E-7	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999994472408071	WITHOUT_CLASSIFICATION	5.527591928519591E-7	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999994472408071	WITHOUT_CLASSIFICATION	5.527591928519591E-7	DEFECT
// Otherwise, we could check that the adapter implements interface IItemLabelProvider. //	WITHOUT_CLASSIFICATION	0.9999999379504696	WITHOUT_CLASSIFICATION	6.204953041108827E-8	DEFECT
// Now we could check that the adapter implements interface ITableItemFontProvider. //	WITHOUT_CLASSIFICATION	0.9999997495208274	WITHOUT_CLASSIFICATION	2.504791725926604E-7	DEFECT
// No font is a good default. //	WITHOUT_CLASSIFICATION	0.9999993833825839	WITHOUT_CLASSIFICATION	6.166174162264686E-7	DEFECT
// Otherwise, we could check that the adapter implements interface IItemFontProvider. //	WITHOUT_CLASSIFICATION	0.9999997824092963	WITHOUT_CLASSIFICATION	2.1759070372780836E-7	DEFECT
// No color is a good default. //	WITHOUT_CLASSIFICATION	0.9999999094917905	WITHOUT_CLASSIFICATION	9.050820948799675E-8	DEFECT
// No color is a good default. //	WITHOUT_CLASSIFICATION	0.9999999094917905	WITHOUT_CLASSIFICATION	9.050820948799675E-8	DEFECT
// Now we could check that the adapter implements interface ITableItemColorProvider. //	WITHOUT_CLASSIFICATION	0.9999998528403024	WITHOUT_CLASSIFICATION	1.4715969759555124E-7	DEFECT
// Now we could check that the adapter implements interface ITableItemColorProvider. //	WITHOUT_CLASSIFICATION	0.9999998528403024	WITHOUT_CLASSIFICATION	1.4715969759555124E-7	DEFECT
// Otherwise, we could check that the adapter implements interface IItemColorProvider. //	WITHOUT_CLASSIFICATION	0.9999998721626976	WITHOUT_CLASSIFICATION	1.2783730237670088E-7	DEFECT
// Otherwise, we could check that the adapter implements interface IItemColorProvider. //	WITHOUT_CLASSIFICATION	0.9999998721626976	WITHOUT_CLASSIFICATION	1.2783730237670088E-7	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999999217409675	WITHOUT_CLASSIFICATION	7.825903249904723E-8	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999999217409675	WITHOUT_CLASSIFICATION	7.825903249904723E-8	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999999217409675	WITHOUT_CLASSIFICATION	7.825903249904723E-8	DEFECT
//public String getUpdateableText(Object object)	WITHOUT_CLASSIFICATION	0.9999997978023073	WITHOUT_CLASSIFICATION	2.0219769265619483E-7	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999999217409675	WITHOUT_CLASSIFICATION	7.825903249904723E-8	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999999217409675	WITHOUT_CLASSIFICATION	7.825903249904723E-8	DEFECT
// When the value is changed, the property sheet page doesn't update the property sheet viewer input // before refreshing, and this gets called on the obsolete wrapper. So, we need to read directly from the // model object. // //return needsEncoding(feature) ? encode((String)getEntryValue()) : getEntryValue();	WITHOUT_CLASSIFICATION	0.9999999807164366	WITHOUT_CLASSIFICATION	1.9283563499827553E-8	DEFECT
// Check that the value is type compatible with the entry feature. //	WITHOUT_CLASSIFICATION	0.9999946356286612	WITHOUT_CLASSIFICATION	5.364371338821605E-6	DEFECT
// When the value is changed, the property sheet page doesn't update the property sheet viewer input // before refreshing, and this gets called on the obsolete wrapper. So, we need to read directly from the // model object. // //return value;	WITHOUT_CLASSIFICATION	0.9999998001206111	WITHOUT_CLASSIFICATION	1.998793889055122E-7	DEFECT
// If the last object was deleted and the selection was in the property sheet view, the obsolete wrapper will // reference past the end of the list. //	WITHOUT_CLASSIFICATION	0.9999510086080228	WITHOUT_CLASSIFICATION	4.899139197729186E-5	DEFECT
// Either the IEditingDomainItemProvider or ITreeItemContentProvider item provider interface can give us // the children. //	WITHOUT_CLASSIFICATION	0.9999978588923993	WITHOUT_CLASSIFICATION	2.141107600608264E-6	DEFECT
// Use an existing getReferenceValue() override. //	WITHOUT_CLASSIFICATION	0.9999999751257563	WITHOUT_CLASSIFICATION	2.487424371999201E-8	DEFECT
// First, try an existing implementation of getChildReference().  This provides backwards compatibility if that // method, now deprecated, was overridden. //	WITHOUT_CLASSIFICATION	0.9999942074533792	WITHOUT_CLASSIFICATION	5.792546620699108E-6	DEFECT
// Iterate over all the child references to factor each child to the right reference. //	WITHOUT_CLASSIFICATION	0.9999997134306354	WITHOUT_CLASSIFICATION	2.8656936461933135E-7	DEFECT
// If this object is compatible with this reference... //	WITHOUT_CLASSIFICATION	0.9997143181450601	WITHOUT_CLASSIFICATION	2.8568185493986687E-4	DEFECT
// Iterate over all the set feature to factor each child to the right reference. //	WITHOUT_CLASSIFICATION	0.9999999973054361	WITHOUT_CLASSIFICATION	2.694563921888464E-9	DEFECT
// Build the collection of new child descriptors. //	WITHOUT_CLASSIFICATION	0.9999661990625057	WITHOUT_CLASSIFICATION	3.380093749425448E-5	DEFECT
// Add child descriptors contributed by extenders. //	WITHOUT_CLASSIFICATION	0.999999432259146	WITHOUT_CLASSIFICATION	5.677408540167004E-7	DEFECT
// If a sibling has been specified, add the best index possible to each CommandParameter. //	WITHOUT_CLASSIFICATION	0.999998867392165	WITHOUT_CLASSIFICATION	1.1326078349372686E-6	DEFECT
// Find the index of a feature containing the sibling, or an equivalent value, in the collection of children // features. //	WITHOUT_CLASSIFICATION	0.9999998571458131	WITHOUT_CLASSIFICATION	1.4285418702681048E-7	DEFECT
// For each CommandParameter with a non-null, multi-valued structural feature... //	WITHOUT_CLASSIFICATION	0.9999971344653558	WITHOUT_CLASSIFICATION	2.865534644162425E-6	DEFECT
// Look for the sibling value or an equivalent in the new child's feature. If it is found, the child should // immediately follow it. //	WITHOUT_CLASSIFICATION	0.9999998280244257	WITHOUT_CLASSIFICATION	1.7197557423165776E-7	DEFECT
// Otherwise, if a sibling feature was found, iterate through the children features to find the index of // the child feature...  //	WITHOUT_CLASSIFICATION	0.9999998564627075	WITHOUT_CLASSIFICATION	1.4353729257736952E-7	DEFECT
// If the child feature follows the sibling feature, the child should be first in its feature. //	WITHOUT_CLASSIFICATION	0.9999985405387773	WITHOUT_CLASSIFICATION	1.4594612226238693E-6	DEFECT
// Subclasses may override to add descriptors.	WITHOUT_CLASSIFICATION	0.9999997064444412	WITHOUT_CLASSIFICATION	2.9355555873963094E-7	DEFECT
// If necessary, get a command that replaces unwrapped values by their wrappers in the result and affected objects. //	WITHOUT_CLASSIFICATION	0.9999982788753106	WITHOUT_CLASSIFICATION	1.7211246894407917E-6	DEFECT
// Iterator over all the child references to factor each child to the right reference. //	WITHOUT_CLASSIFICATION	0.9999997790496175	WITHOUT_CLASSIFICATION	2.209503826294434E-7	DEFECT
// If it is a list type value... // 	WITHOUT_CLASSIFICATION	0.9961462204971172	WITHOUT_CLASSIFICATION	0.003853779502882831	DEFECT
// If it is a list type value... // 	WITHOUT_CLASSIFICATION	0.9961462204971172	WITHOUT_CLASSIFICATION	0.003853779502882831	DEFECT
// Is this object in this feature... //	WITHOUT_CLASSIFICATION	0.9971057581275408	WITHOUT_CLASSIFICATION	0.0028942418724592725	DEFECT
// Is this object in this feature... //	WITHOUT_CLASSIFICATION	0.9971057581275408	WITHOUT_CLASSIFICATION	0.0028942418724592725	DEFECT
// Add it to the list and remove it from the other list. //	WITHOUT_CLASSIFICATION	0.9999998029012154	WITHOUT_CLASSIFICATION	1.9709878459457972E-7	DEFECT
// If we have children to remove for this feature, create a command for it. //	WITHOUT_CLASSIFICATION	0.9999965957288909	WITHOUT_CLASSIFICATION	3.404271109075575E-6	DEFECT
// It's just a single value //	WITHOUT_CLASSIFICATION	0.9999999832248234	WITHOUT_CLASSIFICATION	1.677517659642526E-8	DEFECT
// Create a command to set this to null and remove the object from the other list. //	WITHOUT_CLASSIFICATION	0.9999998708235478	WITHOUT_CLASSIFICATION	1.2917645216943882E-7	DEFECT
// If all the objects are used up by the above, then we can't do the command. //	WITHOUT_CLASSIFICATION	0.9999969340236373	WITHOUT_CLASSIFICATION	3.0659763626769894E-6	DEFECT
// Correct the index, if necessary. //	WITHOUT_CLASSIFICATION	0.9999954250213329	WITHOUT_CLASSIFICATION	4.574978667059157E-6	DEFECT
// Consume the rest of the appropriate children. //	WITHOUT_CLASSIFICATION	0.9999998068603492	WITHOUT_CLASSIFICATION	1.931396507375968E-7	DEFECT
// Is this child in this feature... //	WITHOUT_CLASSIFICATION	0.9978857943654418	WITHOUT_CLASSIFICATION	0.002114205634558166	DEFECT
// Create a command for this feature,  //	WITHOUT_CLASSIFICATION	0.9999997208271667	WITHOUT_CLASSIFICATION	2.7917283322888237E-7	DEFECT
// If all the objects aren't used up by the above, then we can't do the command. //	WITHOUT_CLASSIFICATION	0.9999953360985321	WITHOUT_CLASSIFICATION	4.663901467861851E-6	DEFECT
// Compute the relative index as best as possible. //	WITHOUT_CLASSIFICATION	0.999999924358055	WITHOUT_CLASSIFICATION	7.564194500628747E-8	DEFECT
// Create a command for this feature, //	WITHOUT_CLASSIFICATION	0.9999998116956851	WITHOUT_CLASSIFICATION	1.88304314839306E-7	DEFECT
// continue to next case	WITHOUT_CLASSIFICATION	0.9999993768494982	WITHOUT_CLASSIFICATION	6.231505017862482E-7	DEFECT
// All this logic is so that we only create a list if the adapter is set to more than one target. //	WITHOUT_CLASSIFICATION	0.999999999793753	WITHOUT_CLASSIFICATION	2.0624701828607593E-10	DEFECT
// Dispose the child wrappers. //	WITHOUT_CLASSIFICATION	0.9999997585374524	WITHOUT_CLASSIFICATION	2.414625476651511E-7	DEFECT
// Ignore the unset notification for an isMany feature; the value is boolean in this case. //	WITHOUT_CLASSIFICATION	0.999999300008231	WITHOUT_CLASSIFICATION	6.999917690575116E-7	DEFECT
// No index specified when removing all elements. //	WITHOUT_CLASSIFICATION	0.9999999859763512	WITHOUT_CLASSIFICATION	1.4023648870711827E-8	DEFECT
// We need the wrapper, not the item provider, to handle a DragAndDropCommand; the move, add, remove, etc. commands // that implement it will have their values unwrapped as usual. //	WITHOUT_CLASSIFICATION	0.9999023196827435	WITHOUT_CLASSIFICATION	9.76803172565369E-5	DEFECT
// Unwrap collection. //	WITHOUT_CLASSIFICATION	0.9999990573343077	WITHOUT_CLASSIFICATION	9.426656923158555E-7	DEFECT
// If the first wrapped value is found... //	WITHOUT_CLASSIFICATION	0.999903635522974	WITHOUT_CLASSIFICATION	9.636447702592646E-5	DEFECT
// Allocate the new collection, and populate it up to this point. //	WITHOUT_CLASSIFICATION	0.9999999921586454	WITHOUT_CLASSIFICATION	7.841354537224154E-9	DEFECT
// If a new collection was allocated, continue to populate it. //	WITHOUT_CLASSIFICATION	0.9999990064483317	WITHOUT_CLASSIFICATION	9.935516682279473E-7	DEFECT
// Unwrap value. //	WITHOUT_CLASSIFICATION	0.999999825991555	WITHOUT_CLASSIFICATION	1.74008445007162E-7	DEFECT
// Wrappers from the old command parameter must be considered in order for cut and paste to work. //	WITHOUT_CLASSIFICATION	0.9986179308651166	WITHOUT_CLASSIFICATION	0.0013820691348834285	DEFECT
// If the adapter factory is composeable, we'll adapt using the root. //	WITHOUT_CLASSIFICATION	0.9999995789828853	WITHOUT_CLASSIFICATION	4.210171147427967E-7	DEFECT
// Build list of wrapped children from the appropriate adapters. //	WITHOUT_CLASSIFICATION	0.9999895232779573	WITHOUT_CLASSIFICATION	1.0476722042739232E-5	DEFECT
// Add in additional wrappers to search. //	WITHOUT_CLASSIFICATION	0.999977758679297	WITHOUT_CLASSIFICATION	2.224132070308837E-5	DEFECT
/*   * Returns the help context id for this property.   */	WITHOUT_CLASSIFICATION	0.9999386259346932	WITHOUT_CLASSIFICATION	6.137406530679299E-5	DEFECT
/*      ResourceSet resourceSet = (ResourceSet)object;      childrenFeatures.add(ResourcePackage.eINSTANCE.getResourceSet_Resources());*/	WITHOUT_CLASSIFICATION	0.9999999572089755	WITHOUT_CLASSIFICATION	4.279102460005445E-8	DEFECT
// Does this part provide an editing domain? //	WITHOUT_CLASSIFICATION	0.9999757199263388	WITHOUT_CLASSIFICATION	2.4280073661261662E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999997905852969	WITHOUT_CLASSIFICATION	2.0941470312362812E-7	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999999184455309	WITHOUT_CLASSIFICATION	8.155446905564088E-8	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.9999999772821485	WITHOUT_CLASSIFICATION	2.2717851443933376E-8	DEFECT
// Initialize simple dependencies	WITHOUT_CLASSIFICATION	0.9999998628457445	WITHOUT_CLASSIFICATION	1.3715425542933645E-7	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.9999995366025851	WITHOUT_CLASSIFICATION	4.6339741494588786E-7	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.999999830336471	WITHOUT_CLASSIFICATION	1.6966352898701455E-7	DEFECT
// Mark meta-data to indicate it can't be changed	WITHOUT_CLASSIFICATION	0.99999860427837	WITHOUT_CLASSIFICATION	1.3957216301158224E-6	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.999999891557245	WITHOUT_CLASSIFICATION	1.0844275502500757E-7	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.999999382397121	WITHOUT_CLASSIFICATION	6.176028789009124E-7	DEFECT
// Obtain other dependent packages	WITHOUT_CLASSIFICATION	0.9999999973950333	WITHOUT_CLASSIFICATION	2.6049666313332696E-9	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.9999993290912625	WITHOUT_CLASSIFICATION	6.709087374268461E-7	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.9999978849235671	WITHOUT_CLASSIFICATION	2.1150764329847075E-6	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.9999996570524105	WITHOUT_CLASSIFICATION	3.429475895124151E-7	DEFECT
// Initialize classes and features; add operations and parameters	WITHOUT_CLASSIFICATION	0.999997918294812	WITHOUT_CLASSIFICATION	2.0817051879083706E-6	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.9999999647879461	WITHOUT_CLASSIFICATION	3.5212053998147653E-8	DEFECT
/**   * The switch that delegates to the <code>createXXX</code> methods.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9999999008203482	WITHOUT_CLASSIFICATION	9.917965187179749E-8	DEFECT
// There are attributes to handle.	WITHOUT_CLASSIFICATION	0.9999992061096078	WITHOUT_CLASSIFICATION	7.938903923394674E-7	DEFECT
// This ensure that this package itself is traversed even if the reference type is EObject... //	WITHOUT_CLASSIFICATION	0.9999976362934221	WITHOUT_CLASSIFICATION	2.3637065780302385E-6	DEFECT
// Look for each unwrapped object as a value of a wrapper, replacing it with the first one found. //	WITHOUT_CLASSIFICATION	0.9999999810272615	WITHOUT_CLASSIFICATION	1.8972738449376214E-8	DEFECT
// Is this a containment reference child? //	WITHOUT_CLASSIFICATION	0.9999976327556774	WITHOUT_CLASSIFICATION	2.3672443225174757E-6	DEFECT
// Is this the label feature? //	WITHOUT_CLASSIFICATION	0.9999992579945095	WITHOUT_CLASSIFICATION	7.42005490548995E-7	DEFECT
// Or a feature map child? //	WITHOUT_CLASSIFICATION	0.999999937512152	WITHOUT_CLASSIFICATION	6.248784800100793E-8	DEFECT
// Don't include controlled children here, they'll show up under their container. //	WITHOUT_CLASSIFICATION	0.9999804012415259	WITHOUT_CLASSIFICATION	1.959875847417073E-5	DEFECT
// Resource resource = (Resource)object; // childrenFeatures.add(ResourcePackage.eINSTANCE.getResource_Contents());	WITHOUT_CLASSIFICATION	0.9999999905538599	WITHOUT_CLASSIFICATION	9.446139981427961E-9	DEFECT
// Overlay if the resource is the target for any controlled objects.  //	WITHOUT_CLASSIFICATION	0.9999999970840538	WITHOUT_CLASSIFICATION	2.9159460270121636E-9	DEFECT
// case Resource.RESOURCE__IS_MODIFIED: // case Resource.RESOURCE__IS_LOADED: // case Resource.RESOURCE__IS_TRACKING_MODIFICATION: // case Resource.RESOURCE__RESOURCE_SET:	WITHOUT_CLASSIFICATION	0.9999998229625345	WITHOUT_CLASSIFICATION	1.770374655060098E-7	DEFECT
// TreeNode	WITHOUT_CLASSIFICATION	0.999997825164552	WITHOUT_CLASSIFICATION	2.1748354479905786E-6	DEFECT
//TreeFactory	WITHOUT_CLASSIFICATION	0.999995802260594	WITHOUT_CLASSIFICATION	4.197739405967467E-6	DEFECT
//TreePackage	WITHOUT_CLASSIFICATION	0.9999979570398869	WITHOUT_CLASSIFICATION	2.0429601131067704E-6	DEFECT
//TreeFactoryImpl	WITHOUT_CLASSIFICATION	0.9999942717956705	WITHOUT_CLASSIFICATION	5.728204329529078E-6	DEFECT
//TreeNodeImpl	WITHOUT_CLASSIFICATION	0.9999814573268782	WITHOUT_CLASSIFICATION	1.854267312179618E-5	DEFECT
//TreePackageImpl	WITHOUT_CLASSIFICATION	0.9999949591979848	WITHOUT_CLASSIFICATION	5.040802015269346E-6	DEFECT
/*    super.collectNewChildDescriptors(newChildDescriptors, object);*/	WITHOUT_CLASSIFICATION	0.999999619595129	WITHOUT_CLASSIFICATION	3.8040487107511894E-7	DEFECT
//TreeAdapterFactory	WITHOUT_CLASSIFICATION	0.99999424047977	WITHOUT_CLASSIFICATION	5.759520229952783E-6	DEFECT
//TreeSwitch	WITHOUT_CLASSIFICATION	0.9999976596743849	WITHOUT_CLASSIFICATION	2.3403256150576547E-6	DEFECT
// This is for backwards compatibility, since the constructor may have been overridden before it was expected // to set actionDelegate. //	WITHOUT_CLASSIFICATION	0.9999999993690779	WITHOUT_CLASSIFICATION	6.309220721976937E-10	DEFECT
// If there is a new one... //	WITHOUT_CLASSIFICATION	0.9999577441499135	WITHOUT_CLASSIFICATION	4.225585008649628E-5	DEFECT
// This guard is for extra security, but should not be necessary. //	WITHOUT_CLASSIFICATION	0.9970227984704464	WITHOUT_CLASSIFICATION	0.00297720152955366	DEFECT
// Use up the command. // Note that notification will cause a new command to be created. //	WITHOUT_CLASSIFICATION	0.9999997877170997	WITHOUT_CLASSIFICATION	2.1228290031318543E-7	DEFECT
// We will only deal with structured selections. //	WITHOUT_CLASSIFICATION	0.9999999904607618	WITHOUT_CLASSIFICATION	9.539238077943504E-9	DEFECT
// If we aren't getting the domain from the workbench part... // This happens when this action is used for a global popup action. // We try to get the editing domain from one of the objects in the selection. // //DMS editingDomain == null) ?	WITHOUT_CLASSIFICATION	0.7589430605876887	DEFECT	0.2410569394123112	WITHOUT_CLASSIFICATION
// If we have a good editing domain... //	WITHOUT_CLASSIFICATION	0.9991967627251036	WITHOUT_CLASSIFICATION	8.032372748964429E-4	DEFECT
// Delegate the action for this object to the editing domain. //	WITHOUT_CLASSIFICATION	0.9999984312951243	WITHOUT_CLASSIFICATION	1.5687048756379167E-6	DEFECT
// We can enable the action as indicated by the command, // and we can set all the other values from the command. //	WITHOUT_CLASSIFICATION	0.9999999892530123	WITHOUT_CLASSIFICATION	1.0746987682278557E-8	DEFECT
// Nothing more to do and we don't want to do the default stuff below. //	WITHOUT_CLASSIFICATION	0.9999999842250811	WITHOUT_CLASSIFICATION	1.57749189117849E-8	DEFECT
// We just can't do it. //	WITHOUT_CLASSIFICATION	0.9999997644926566	WITHOUT_CLASSIFICATION	2.355073434069606E-7	DEFECT
// No point in keeping garbage. //	WITHOUT_CLASSIFICATION	0.9999996613142064	WITHOUT_CLASSIFICATION	3.3868579368217123E-7	DEFECT
// Show the colourless image. //	WITHOUT_CLASSIFICATION	0.9999992665739132	WITHOUT_CLASSIFICATION	7.334260866509159E-7	DEFECT
// try to get editing domain from workbench part	WITHOUT_CLASSIFICATION	0.9999371887897738	WITHOUT_CLASSIFICATION	6.281121022627442E-5	DEFECT
// only handle structured selections	WITHOUT_CLASSIFICATION	0.9999999877045139	WITHOUT_CLASSIFICATION	1.2295486007292057E-8	DEFECT
// convert the selection to a collection of the selected objects	WITHOUT_CLASSIFICATION	0.9999999823557272	WITHOUT_CLASSIFICATION	1.7644272868291816E-8	DEFECT
// if the editing domain wasn't given by the workbench part, try to get // it from the selection	WITHOUT_CLASSIFICATION	0.9999757578260484	WITHOUT_CLASSIFICATION	2.4242173951614736E-5	DEFECT
// if we found an editing domain, create command	WITHOUT_CLASSIFICATION	0.9999994940227467	WITHOUT_CLASSIFICATION	5.059772533004693E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.999999826515885	WITHOUT_CLASSIFICATION	1.7348411491497847E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.999999826515885	WITHOUT_CLASSIFICATION	1.7348411491497847E-7	DEFECT
// use up the command	WITHOUT_CLASSIFICATION	0.9999993788459977	WITHOUT_CLASSIFICATION	6.211540022892495E-7	DEFECT
// Add our standard marker. //	WITHOUT_CLASSIFICATION	0.9999998193764217	WITHOUT_CLASSIFICATION	1.8062357842429635E-7	DEFECT
// Add the edit menu actions. //	WITHOUT_CLASSIFICATION	0.9999894005505219	WITHOUT_CLASSIFICATION	1.05994494780454E-5	DEFECT
// Add our other standard marker. //	WITHOUT_CLASSIFICATION	0.9999999281620453	WITHOUT_CLASSIFICATION	7.183795464715148E-8	DEFECT
// For the control case, we need a dialog to ask for the URI and obtain the resource, then we create the command. //	WITHOUT_CLASSIFICATION	0.9999998131847274	WITHOUT_CLASSIFICATION	1.8681527255548834E-7	DEFECT
// Ensure that all proxies are resolved so that references into the controlled object will be saved to reference the new resource. //	WITHOUT_CLASSIFICATION	0.9999997204123214	WITHOUT_CLASSIFICATION	2.7958767858926046E-7	DEFECT
// grabHorizontal = true;	WITHOUT_CLASSIFICATION	0.999999620389216	WITHOUT_CLASSIFICATION	3.7961078402196873E-7	DEFECT
// We use multi even for a single line because we want to respond to the enter key. //	WITHOUT_CLASSIFICATION	0.9999983527457996	WITHOUT_CLASSIFICATION	1.6472542004394E-6	DEFECT
// event is null when choiceTableViewer is double clicked	WITHOUT_CLASSIFICATION	0.9999999737944889	WITHOUT_CLASSIFICATION	2.620551104288511E-8	DEFECT
// event is null when featureTableViewer is double clicked 	WITHOUT_CLASSIFICATION	0.9999999581881633	WITHOUT_CLASSIFICATION	4.1811836722741276E-8	DEFECT
// In column 0, the drop-down is indented past the collapse/expand icon. //	WITHOUT_CLASSIFICATION	0.9999855430596314	WITHOUT_CLASSIFICATION	1.4456940368591113E-5	DEFECT
// dropDown.addListener(SWT.Paint, dropDownListener);	WITHOUT_CLASSIFICATION	0.9999998909364566	WITHOUT_CLASSIFICATION	1.0906354348719289E-7	DEFECT
// This should be consistent with paintControl(). // 	WITHOUT_CLASSIFICATION	0.999372206997122	WITHOUT_CLASSIFICATION	6.277930028779919E-4	DEFECT
// setEditor(null, null, -1);	WITHOUT_CLASSIFICATION	0.999998742666877	WITHOUT_CLASSIFICATION	1.2573331228905477E-6	DEFECT
// Fill with background. //	WITHOUT_CLASSIFICATION	0.999991090261344	WITHOUT_CLASSIFICATION	8.909738656021955E-6	DEFECT
// Draw the icons. //	WITHOUT_CLASSIFICATION	0.99999954399343	WITHOUT_CLASSIFICATION	4.56006569946936E-7	DEFECT
// Draw the text. //	WITHOUT_CLASSIFICATION	0.9999997926673853	WITHOUT_CLASSIFICATION	2.0733261479189443E-7	DEFECT
// EATM Color startColor = display.getSystemColor(SWT.COLOR_LIST_SELECTION);	WITHOUT_CLASSIFICATION	0.9999999562707642	WITHOUT_CLASSIFICATION	4.3729235780455E-8	DEFECT
// Remember the requested operation.	WITHOUT_CLASSIFICATION	0.9999993233960134	WITHOUT_CLASSIFICATION	6.766039864896791E-7	DEFECT
// Remember the requested operation.	WITHOUT_CLASSIFICATION	0.9999993233960134	WITHOUT_CLASSIFICATION	6.766039864896791E-7	DEFECT
/*     * (non-Javadoc)     *      * @see org.eclipse.jface.window.Window#configureShell(org.eclipse.swt.widgets.Shell)     */	WITHOUT_CLASSIFICATION	0.999999999993006	WITHOUT_CLASSIFICATION	6.9940081999906605E-12	DEFECT
// Draw background of right-side button. //	WITHOUT_CLASSIFICATION	0.999997774889314	WITHOUT_CLASSIFICATION	2.2251106860442512E-6	DEFECT
// Draw down arrow, offset if dropped. //	WITHOUT_CLASSIFICATION	0.9999998221880037	WITHOUT_CLASSIFICATION	1.7781199631121885E-7	DEFECT
// Draw ellipses, offset if down. //	WITHOUT_CLASSIFICATION	0.9999999551233345	WITHOUT_CLASSIFICATION	4.487666559089642E-8	DEFECT
// Draw outline. //	WITHOUT_CLASSIFICATION	0.9999998662885463	WITHOUT_CLASSIFICATION	1.337114537361744E-7	DEFECT
// Draw 3D effect on right-side button. //	WITHOUT_CLASSIFICATION	0.9999874326221413	WITHOUT_CLASSIFICATION	1.2567377858776176E-5	DEFECT
// Remember the viewer and listen to SWT.DragDetect to alert the start of the drag operation. //	WITHOUT_CLASSIFICATION	0.9999999920071778	WITHOUT_CLASSIFICATION	7.99282220866811E-9	DEFECT
// Clear the source data.  We won't need this again, since, if it was // available, it's already in the command. //	WITHOUT_CLASSIFICATION	0.9999999153297359	WITHOUT_CLASSIFICATION	8.467026412922846E-8	DEFECT
// A command was created if the source was available early, and the // information used to create it was cached... //	WITHOUT_CLASSIFICATION	0.9999999553493913	WITHOUT_CLASSIFICATION	4.46506086399632E-8	DEFECT
// Recreate the command. //	WITHOUT_CLASSIFICATION	0.9999937777664192	WITHOUT_CLASSIFICATION	6.222233580867539E-6	DEFECT
// Otherwise, the source should be available now as event.data, and we // can create the command. //	WITHOUT_CLASSIFICATION	0.9999999888811164	WITHOUT_CLASSIFICATION	1.1118883627746896E-8	DEFECT
// If the command can execute... //	WITHOUT_CLASSIFICATION	0.9989097394497585	WITHOUT_CLASSIFICATION	0.0010902605502415377	DEFECT
// Execute it. //	WITHOUT_CLASSIFICATION	0.9999981988216594	WITHOUT_CLASSIFICATION	1.8011783405533209E-6	DEFECT
// Otherwise, let's call the whole thing off. //	WITHOUT_CLASSIFICATION	0.9999986862056138	WITHOUT_CLASSIFICATION	1.3137943862812677E-6	DEFECT
// Clean up the state. //	WITHOUT_CLASSIFICATION	0.9999999845244247	WITHOUT_CLASSIFICATION	1.5475575266192547E-8	DEFECT
// If we can't do anything else, we'll provide the default select feedback // and enable auto-scroll and auto-expand effects.	WITHOUT_CLASSIFICATION	0.9997548952939098	WITHOUT_CLASSIFICATION	2.451047060901152E-4	DEFECT
// Clear out any old information from a previous drag. //	WITHOUT_CLASSIFICATION	0.9999983501664869	WITHOUT_CLASSIFICATION	1.6498335131853983E-6	DEFECT
// Get the target object from the item widget and the mouse location in it. //	WITHOUT_CLASSIFICATION	0.9999999990050519	WITHOUT_CLASSIFICATION	9.949481206087061E-10	DEFECT
// Determine if we can create a valid command at the current location. //	WITHOUT_CLASSIFICATION	0.9999953136209228	WITHOUT_CLASSIFICATION	4.68637907721478E-6	DEFECT
// If we don't have a previous cached command... //	WITHOUT_CLASSIFICATION	0.9993537674055627	WITHOUT_CLASSIFICATION	6.462325944372499E-4	DEFECT
// Remember the target; create the command and test if it is executable. //	WITHOUT_CLASSIFICATION	0.9999999002238334	WITHOUT_CLASSIFICATION	9.97761665732396E-8	DEFECT
// Keep track of any changes to the command information.	WITHOUT_CLASSIFICATION	0.999998702613295	WITHOUT_CLASSIFICATION	1.297386704999369E-6	DEFECT
/*     * (non-Javadoc) Method declared on Dialog.     */	WITHOUT_CLASSIFICATION	0.9999999700901319	WITHOUT_CLASSIFICATION	2.990986814878482E-8	DEFECT
// create OK and Cancel buttons by default	WITHOUT_CLASSIFICATION	0.9999999901844128	WITHOUT_CLASSIFICATION	9.815587169490903E-9	DEFECT
// create composite	WITHOUT_CLASSIFICATION	0.9999999593409504	WITHOUT_CLASSIFICATION	4.0659049512512584E-8	DEFECT
// generateColor();	WITHOUT_CLASSIFICATION	0.9999990831823814	WITHOUT_CLASSIFICATION	9.168176186913331E-7	DEFECT
// }}	WITHOUT_CLASSIFICATION	0.9999980439100117	WITHOUT_CLASSIFICATION	1.9560899883061235E-6	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999999217409675	WITHOUT_CLASSIFICATION	7.825903249904723E-8	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999999217409675	WITHOUT_CLASSIFICATION	7.825903249904723E-8	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999999217409675	WITHOUT_CLASSIFICATION	7.825903249904723E-8	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999999217409675	WITHOUT_CLASSIFICATION	7.825903249904723E-8	DEFECT
// Check if the cached command can provide DND feedback/revalidation. //	WITHOUT_CLASSIFICATION	0.9999656309968844	WITHOUT_CLASSIFICATION	3.436900311551029E-5	DEFECT
// If so, revalidate the command. //	WITHOUT_CLASSIFICATION	0.999991838540437	WITHOUT_CLASSIFICATION	8.161459562893215E-6	DEFECT
// If not, dispose the current command and create a new one. //	WITHOUT_CLASSIFICATION	0.9999988358920168	WITHOUT_CLASSIFICATION	1.164107983187369E-6	DEFECT
// If this command can provide detailed drag and drop feedback... //	WITHOUT_CLASSIFICATION	0.9994936837262567	WITHOUT_CLASSIFICATION	5.063162737432415E-4	DEFECT
// Use it for the operation and drag under effect. //	WITHOUT_CLASSIFICATION	0.9999996566362064	WITHOUT_CLASSIFICATION	3.4336379369459266E-7	DEFECT
// There is no executable command, so we'd better nix the whole deal. //	WITHOUT_CLASSIFICATION	0.9999982140587004	WITHOUT_CLASSIFICATION	1.7859412996922147E-6	DEFECT
// Check whether the current data type can be transfered locally. //	WITHOUT_CLASSIFICATION	0.999998509794547	WITHOUT_CLASSIFICATION	1.4902054529970124E-6	DEFECT
// Iterate over the data types to see if there is a data type that supports a local transfer. //	WITHOUT_CLASSIFICATION	0.9999999990887475	WITHOUT_CLASSIFICATION	9.112526240086321E-10	DEFECT
// If the local transfer supports this data type, switch to that data type //	WITHOUT_CLASSIFICATION	0.9999998408494823	WITHOUT_CLASSIFICATION	1.5915051767619573E-7	DEFECT
// Transfer the data and, if non-null, extract it. //	WITHOUT_CLASSIFICATION	0.9999994249788895	WITHOUT_CLASSIFICATION	5.750211104799265E-7	DEFECT
// Transfer the data and convert the structured selection to a collection of objects. //	WITHOUT_CLASSIFICATION	0.9999999995655936	WITHOUT_CLASSIFICATION	4.344063803681E-10	DEFECT
//do this here because setting the text will set enablement on the OK // button	WITHOUT_CLASSIFICATION	0.9999997868086969	WITHOUT_CLASSIFICATION	2.131913030281381E-7	DEFECT
/* | GridData.GRAB_VERTICAL */	WITHOUT_CLASSIFICATION	0.9999993531048619	WITHOUT_CLASSIFICATION	6.468951380915768E-7	DEFECT
// Set the error message text // See https://bugs.eclipse.org/bugs/show_bug.cgi?id=66292	WITHOUT_CLASSIFICATION	0.9999961628696907	WITHOUT_CLASSIFICATION	3.83713030928454E-6	DEFECT
// If there was no old input, then we must be providing content for this part for the first time... //	WITHOUT_CLASSIFICATION	0.9999977865638163	WITHOUT_CLASSIFICATION	2.2134361837266055E-6	DEFECT
// If the notification is an IViewerNotification, it specifies how ViewerRefresh should behave.  Otherwise fall // back to NotifyChangedToViewerRefresh, which determines how to refresh the viewer directly from the model // notification. //	WITHOUT_CLASSIFICATION	0.9999995388437566	WITHOUT_CLASSIFICATION	4.6115624341241527E-7	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999998143591847	WITHOUT_CLASSIFICATION	1.8564081520207088E-7	DEFECT
// Now we could check that the adapter implements interface ITableItemLabelProvider. //	WITHOUT_CLASSIFICATION	0.9999998936812908	WITHOUT_CLASSIFICATION	1.063187091334655E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.999999826515885	WITHOUT_CLASSIFICATION	1.7348411491497847E-7	DEFECT
// Now we could check that the adapter implements interface ITableItemLabelProvider. //	WITHOUT_CLASSIFICATION	0.9999998936812908	WITHOUT_CLASSIFICATION	1.063187091334655E-7	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999994472408071	WITHOUT_CLASSIFICATION	5.527591928519591E-7	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999994472408071	WITHOUT_CLASSIFICATION	5.527591928519591E-7	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999994472408071	WITHOUT_CLASSIFICATION	5.527591928519591E-7	DEFECT
// Otherwise, we could check that the adapter implements interface IItemLabelProvider. //	WITHOUT_CLASSIFICATION	0.9999999379504696	WITHOUT_CLASSIFICATION	6.204953041108827E-8	DEFECT
// Otherwise, we could check that the adapter implements interface IItemLabelProvider. //	WITHOUT_CLASSIFICATION	0.9999999379504696	WITHOUT_CLASSIFICATION	6.204953041108827E-8	DEFECT
// No image is a good default. //	WITHOUT_CLASSIFICATION	0.9999998542276872	WITHOUT_CLASSIFICATION	1.4577231272726284E-7	DEFECT
// This implements the following order of preference: //   1. full refresh and update //   2. full refresh (add update if necessary) //   3. refresh element with update //   4. refresh element (if necessary) //   5. update element // 	WITHOUT_CLASSIFICATION	0.9999719574125239	WITHOUT_CLASSIFICATION	2.804258747614768E-5	DEFECT
// n2.isLabelUpdate()	WITHOUT_CLASSIFICATION	0.9999999204873624	WITHOUT_CLASSIFICATION	7.951263757301228E-8	DEFECT
// Previously, we never updated the viewer on a resolve.  Now we post and merge it as appropriate. //	WITHOUT_CLASSIFICATION	0.9999976356739736	WITHOUT_CLASSIFICATION	2.364326026403762E-6	DEFECT
// ???	WITHOUT_CLASSIFICATION	0.9999977528360218	WITHOUT_CLASSIFICATION	2.2471639781811696E-6	DEFECT
//    case Notification.TOUCH:	WITHOUT_CLASSIFICATION	0.999999743327719	WITHOUT_CLASSIFICATION	2.5667228096811275E-7	DEFECT
// We ignore non-changes for now. //	WITHOUT_CLASSIFICATION	0.999999966992367	WITHOUT_CLASSIFICATION	3.300763297789927E-8	DEFECT
// fireLabelProviderChanged();	WITHOUT_CLASSIFICATION	0.9999999745025582	WITHOUT_CLASSIFICATION	2.5497441895959967E-8	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999995972496601	WITHOUT_CLASSIFICATION	4.0275033974482523E-7	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999995972496601	WITHOUT_CLASSIFICATION	4.0275033974482523E-7	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999996077057991	WITHOUT_CLASSIFICATION	3.922942009714717E-7	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999996077057991	WITHOUT_CLASSIFICATION	3.922942009714717E-7	DEFECT
// Empty extension to limit the effect of suppressing the deprecation warning.	WITHOUT_CLASSIFICATION	0.9999951632862839	WITHOUT_CLASSIFICATION	4.836713716099347E-6	DEFECT
// Empty extension to limit the effect of suppressing the deprecation warning.	WITHOUT_CLASSIFICATION	0.9999951632862839	WITHOUT_CLASSIFICATION	4.836713716099347E-6	DEFECT
// Ignore any exceptions and assume the class isn't available.	WITHOUT_CLASSIFICATION	0.9999968563600569	WITHOUT_CLASSIFICATION	3.143639943205048E-6	DEFECT
// Ignore any exceptions and assume the class isn't available.	WITHOUT_CLASSIFICATION	0.9999968563600569	WITHOUT_CLASSIFICATION	3.143639943205048E-6	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999998143591847	WITHOUT_CLASSIFICATION	1.8564081520207088E-7	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999998143591847	WITHOUT_CLASSIFICATION	1.8564081520207088E-7	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999998143591847	WITHOUT_CLASSIFICATION	1.8564081520207088E-7	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999994472408071	WITHOUT_CLASSIFICATION	5.527591928519591E-7	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999994472408071	WITHOUT_CLASSIFICATION	5.527591928519591E-7	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999994472408071	WITHOUT_CLASSIFICATION	5.527591928519591E-7	DEFECT
// If there is a column object, just convert it to a string. //	WITHOUT_CLASSIFICATION	0.9999999890292105	WITHOUT_CLASSIFICATION	1.0970789601705025E-8	DEFECT
// No font is a good default. //	WITHOUT_CLASSIFICATION	0.9999993833825839	WITHOUT_CLASSIFICATION	6.166174162264686E-7	DEFECT
// Now we could check that the adapter implements interface ITableItemFontProvider. //	WITHOUT_CLASSIFICATION	0.9999997495208274	WITHOUT_CLASSIFICATION	2.504791725926604E-7	DEFECT
// Otherwise, we could check that the adapter implements interface IItemFontProvider. //	WITHOUT_CLASSIFICATION	0.9999997824092963	WITHOUT_CLASSIFICATION	2.1759070372780836E-7	DEFECT
// No color is a good default. //	WITHOUT_CLASSIFICATION	0.9999999094917905	WITHOUT_CLASSIFICATION	9.050820948799675E-8	DEFECT
// No color is a good default. //	WITHOUT_CLASSIFICATION	0.9999999094917905	WITHOUT_CLASSIFICATION	9.050820948799675E-8	DEFECT
// Now we could check that the adapter implements interface ITableItemColorProvider. //	WITHOUT_CLASSIFICATION	0.9999998528403024	WITHOUT_CLASSIFICATION	1.4715969759555124E-7	DEFECT
// Now we could check that the adapter implements interface ITableItemColorProvider. //	WITHOUT_CLASSIFICATION	0.9999998528403024	WITHOUT_CLASSIFICATION	1.4715969759555124E-7	DEFECT
// Otherwise, we could check that the adapter implements interface IItemColorProvider. //	WITHOUT_CLASSIFICATION	0.9999998721626976	WITHOUT_CLASSIFICATION	1.2783730237670088E-7	DEFECT
// Otherwise, we could check that the adapter implements interface IItemColorProvider. //	WITHOUT_CLASSIFICATION	0.9999998721626976	WITHOUT_CLASSIFICATION	1.2783730237670088E-7	DEFECT
// The class is not available.	WITHOUT_CLASSIFICATION	0.9999644932962227	WITHOUT_CLASSIFICATION	3.55067037771837E-5	DEFECT
// Nested GenAnnotations	WITHOUT_CLASSIFICATION	0.9999999621503044	WITHOUT_CLASSIFICATION	3.784969549416966E-8	DEFECT
/*   * For debugging purposes.  May be removed in the future.   */	WITHOUT_CLASSIFICATION	0.9999956921063599	WITHOUT_CLASSIFICATION	4.307893640133005E-6	DEFECT
// We don't need to encode here because the only platform resource URIs in the map are for projects // whose names are the same as corresponding plug-in IDs, and hence never need to be encoded // (see EcorePlugin.computePlatformResourceToPlatformPluginMap()). //	WITHOUT_CLASSIFICATION	0.9999927873521208	WITHOUT_CLASSIFICATION	7.2126478791653645E-6	DEFECT
// Create resources for all the root EPackages. //	WITHOUT_CLASSIFICATION	0.9999986236137853	WITHOUT_CLASSIFICATION	1.37638621459941E-6	DEFECT
// removing the first space	WITHOUT_CLASSIFICATION	0.9999999251933422	WITHOUT_CLASSIFICATION	7.48066577481834E-8	DEFECT
// Subclasses may overwrite	WITHOUT_CLASSIFICATION	0.9999998375983771	WITHOUT_CLASSIFICATION	1.624016228392098E-7	DEFECT
// Create resources for all the referenced EPackages // The referencedEPackage is a "local" instance of the realEPackage.  We  // will add the former to a resource that has the same URI of the later.	WITHOUT_CLASSIFICATION	0.9999994953777692	WITHOUT_CLASSIFICATION	5.046222307962241E-7	DEFECT
// Initialize the GenModel with all the computed data. //	WITHOUT_CLASSIFICATION	0.9999998119892549	WITHOUT_CLASSIFICATION	1.8801074506153025E-7	DEFECT
// Restore all configured settings from the original. //	WITHOUT_CLASSIFICATION	0.9999922810621519	WITHOUT_CLASSIFICATION	7.718937848083215E-6	DEFECT
// Handle application genmodel stub //	WITHOUT_CLASSIFICATION	0.9999999745553572	WITHOUT_CLASSIFICATION	2.5444642856057626E-8	DEFECT
// Determine which projects will need to be referenced. //	WITHOUT_CLASSIFICATION	0.9999940453300749	WITHOUT_CLASSIFICATION	5.954669925092185E-6	DEFECT
// Create the model project. //	WITHOUT_CLASSIFICATION	0.9999984207705828	WITHOUT_CLASSIFICATION	1.5792294172676693E-6	DEFECT
// Add a dummy GenModel for referenced packages. //	WITHOUT_CLASSIFICATION	0.9999999501399846	WITHOUT_CLASSIFICATION	4.9860015406611767E-8	DEFECT
// Special case for a reference to Ecore to ensure that flag settings are respected and are set only for Ecore itself. //	WITHOUT_CLASSIFICATION	0.9999995284380873	WITHOUT_CLASSIFICATION	4.715619126782137E-7	DEFECT
// Walk the project looking for .java files to analyze. //	WITHOUT_CLASSIFICATION	0.999974910600491	WITHOUT_CLASSIFICATION	2.5089399509031183E-5	DEFECT
// If we have resolved to an EClass but we have an EAttribute, we can change it to be an EReference. //	WITHOUT_CLASSIFICATION	0.9999881233769782	WITHOUT_CLASSIFICATION	1.1876623021764715E-5	DEFECT
// Now we need to hook up opposites by finding the named feature in the type. //	WITHOUT_CLASSIFICATION	0.9999995561257222	WITHOUT_CLASSIFICATION	4.438742778158262E-7	DEFECT
// Containers are transient by default unless explicitly annotated otherwise. //	WITHOUT_CLASSIFICATION	0.9999999999465697	WITHOUT_CLASSIFICATION	5.3430189540111965E-11	DEFECT
// Now we need to hook up keys by finding the named feature in the type. //	WITHOUT_CLASSIFICATION	0.9999974014099204	WITHOUT_CLASSIFICATION	2.5985900795300907E-6	DEFECT
// Clean up the temporary container annotations for holding map entry classes until they are for sure needed. //	WITHOUT_CLASSIFICATION	0.9999995573053664	WITHOUT_CLASSIFICATION	4.4269463363293364E-7	DEFECT
// Now we should sort. //	WITHOUT_CLASSIFICATION	0.9999968516731464	WITHOUT_CLASSIFICATION	3.1483268535390754E-6	DEFECT
// Find the fragment root so that we can generate to the right location (by default). //	WITHOUT_CLASSIFICATION	0.9999972424960654	WITHOUT_CLASSIFICATION	2.757503934535492E-6	DEFECT
// Iterate over all projects to look at the manifests. //	WITHOUT_CLASSIFICATION	0.999999651470729	WITHOUT_CLASSIFICATION	3.4852927099901703E-7	DEFECT
// Determine the required plugins. //	WITHOUT_CLASSIFICATION	0.9999777170090329	WITHOUT_CLASSIFICATION	2.228299096713793E-5	DEFECT
// Iterate over all the plugin IDs to determine the dependency closure. // The list grows as the plugins are visited. //	WITHOUT_CLASSIFICATION	0.9999999937844715	WITHOUT_CLASSIFICATION	6.215528562067313E-9	DEFECT
// Also add each required plugin for consideration in the loop. //	WITHOUT_CLASSIFICATION	0.999823986757841	WITHOUT_CLASSIFICATION	1.7601324215911504E-4	DEFECT
// If it's a platform plugin URI, include it in the map. //	WITHOUT_CLASSIFICATION	0.9999734809342418	WITHOUT_CLASSIFICATION	2.6519065758184747E-5	DEFECT
// Keep only the plugins that have GenModels for consideration. //	WITHOUT_CLASSIFICATION	0.9973264024416052	WITHOUT_CLASSIFICATION	0.002673597558394798	DEFECT
// Consider each GenModel location URI for each required plugin. //	WITHOUT_CLASSIFICATION	0.9999637555276826	WITHOUT_CLASSIFICATION	3.624447231752831E-5	DEFECT
// Compute the closure. //	WITHOUT_CLASSIFICATION	0.9999999917583566	WITHOUT_CLASSIFICATION	8.241643334814999E-9	DEFECT
// use no encoding	WITHOUT_CLASSIFICATION	0.9999998738184973	WITHOUT_CLASSIFICATION	1.2618150279039906E-7	DEFECT
// Walk the fields. //	WITHOUT_CLASSIFICATION	0.9999963726256921	WITHOUT_CLASSIFICATION	3.6273743078632857E-6	DEFECT
// Create the EPackage on demand. //	WITHOUT_CLASSIFICATION	0.9999991703931969	WITHOUT_CLASSIFICATION	8.296068031494974E-7	DEFECT
// Check whether this has @model annotation contents. // If not, it might be a package interface, for backwards compatibility. //	WITHOUT_CLASSIFICATION	0.9999991967382188	WITHOUT_CLASSIFICATION	8.032617813255611E-7	DEFECT
// Get the package name and see if there's an EPackage for it. //	WITHOUT_CLASSIFICATION	0.9999999962946997	WITHOUT_CLASSIFICATION	3.7053003916447116E-9	DEFECT
// If it's an interface, then it will be treated as an EClass //	WITHOUT_CLASSIFICATION	0.9999998812094023	WITHOUT_CLASSIFICATION	1.1879059776724495E-7	DEFECT
// Create a generic super type with an EClass as the classifier for each super interface in the Java representation. //	WITHOUT_CLASSIFICATION	0.9999998861031903	WITHOUT_CLASSIFICATION	1.138968097330984E-7	DEFECT
// Create a generic super type with an EClass as the classifier for each super interface in the @model representation //	WITHOUT_CLASSIFICATION	0.9999999869587428	WITHOUT_CLASSIFICATION	1.3041257074366096E-8	DEFECT
// Match them and accumulate the appropriate result. //	WITHOUT_CLASSIFICATION	0.9999984393497641	WITHOUT_CLASSIFICATION	1.5606502359269888E-6	DEFECT
// Walk the methods. //	WITHOUT_CLASSIFICATION	0.9999865588597028	WITHOUT_CLASSIFICATION	1.3441140297313301E-5	DEFECT
// Additional attributes and references may be defined directly on the interface in order to allow the // get accessor method to have suppressed visibility. //	WITHOUT_CLASSIFICATION	0.999999721844576	WITHOUT_CLASSIFICATION	2.781554239779392E-7	DEFECT
// Otherwise it's treated as an EEnum //	WITHOUT_CLASSIFICATION	0.9999999972762316	WITHOUT_CLASSIFICATION	2.723768377745832E-9	DEFECT
// Find Packages and Factories	WITHOUT_CLASSIFICATION	0.9999998214154944	WITHOUT_CLASSIFICATION	1.785845055338639E-7	DEFECT
// It's definitely a package if it was declared as such. //	WITHOUT_CLASSIFICATION	0.9999999973417705	WITHOUT_CLASSIFICATION	2.6582294342861943E-9	DEFECT
// It's definitely a package if expected constants eNAME, eNS_PREFIX, or eNS_URI appear. //	WITHOUT_CLASSIFICATION	0.9999992818270876	WITHOUT_CLASSIFICATION	7.181729124042496E-7	DEFECT
// This will catch inherited features, or additional things we don't want to worry about.	WITHOUT_CLASSIFICATION	0.9870410461492125	WITHOUT_CLASSIFICATION	0.01295895385078754	DEFECT
// Check whether this has @model annotation contents. //	WITHOUT_CLASSIFICATION	0.9999997525502704	WITHOUT_CLASSIFICATION	2.4744972968183344E-7	DEFECT
// An operation is declared via the kind property or, for backwards compatibility, by specifying parameters // (though attribute or reference kind takes precedence). //	WITHOUT_CLASSIFICATION	0.9999978119535063	WITHOUT_CLASSIFICATION	2.188046493743012E-6	DEFECT
// Map to an EEnum.	WITHOUT_CLASSIFICATION	0.9999998637705217	WITHOUT_CLASSIFICATION	1.3622947823750717E-7	DEFECT
// The feature name is extracted lower cased. //	WITHOUT_CLASSIFICATION	0.9999999266197351	WITHOUT_CLASSIFICATION	7.338026481109479E-8	DEFECT
// The name is extracted and lower cased. //	WITHOUT_CLASSIFICATION	0.9999996462523099	WITHOUT_CLASSIFICATION	3.537476900610656E-7	DEFECT
// Each token in parameters will specify a dataType for the corresponding parameter, but can be overridden by a // parameter-name-prefixed dataType property. //	WITHOUT_CLASSIFICATION	0.9994012468777558	WITHOUT_CLASSIFICATION	5.987531222441909E-4	DEFECT
// Each token in exceptions will specify a data type for the corresponding exception. //	WITHOUT_CLASSIFICATION	0.9948167595279735	WITHOUT_CLASSIFICATION	0.005183240472026357	DEFECT
// If we aren't doing an operation... //	WITHOUT_CLASSIFICATION	0.9996482992217266	WITHOUT_CLASSIFICATION	3.517007782732836E-4	DEFECT
// We'll create one of these. //	WITHOUT_CLASSIFICATION	0.9999999911699434	WITHOUT_CLASSIFICATION	8.830056444118361E-9	DEFECT
// If any of these attributes appear, this must be a reference. //	WITHOUT_CLASSIFICATION	0.9999216848661384	WITHOUT_CLASSIFICATION	7.831513386151974E-5	DEFECT
// Set the EReference attributes. //	WITHOUT_CLASSIFICATION	0.9999994989748837	WITHOUT_CLASSIFICATION	5.010251162745329E-7	DEFECT
// Defer the handling of the opposite. //	WITHOUT_CLASSIFICATION	0.9999999944904505	WITHOUT_CLASSIFICATION	5.5095495497278226E-9	DEFECT
// Set the visibility annotations for the EstructuralFeature. //	WITHOUT_CLASSIFICATION	0.9999999511086882	WITHOUT_CLASSIFICATION	4.889131174090554E-8	DEFECT
// Set the EAttribute attributes. //	WITHOUT_CLASSIFICATION	0.999999662693573	WITHOUT_CLASSIFICATION	3.373064269572453E-7	DEFECT
// Handle the type, multiplicity and other ETypedElement attributes. //	WITHOUT_CLASSIFICATION	0.9999999998795503	WITHOUT_CLASSIFICATION	1.2044968166480216E-10	DEFECT
// Set the EStructuralFeature attributes. //	WITHOUT_CLASSIFICATION	0.9999999635207744	WITHOUT_CLASSIFICATION	3.64792255303615E-8	DEFECT
// Process the annotations. //	WITHOUT_CLASSIFICATION	0.9999998245799196	WITHOUT_CLASSIFICATION	1.7542008041631457E-7	DEFECT
// For lists, maps, and feature maps, the default is many-valued, which can be overridden by an upper-bound declaration. //	WITHOUT_CLASSIFICATION	0.9999998215671391	WITHOUT_CLASSIFICATION	1.7843286089169148E-7	DEFECT
// The type can be augmented by specifying the it explicitly in the annotation. // This mostly makes sense only for many-valued typed elements, where the Java // type is a list and the item type needs to be specified. //	WITHOUT_CLASSIFICATION	0.9999833503846483	WITHOUT_CLASSIFICATION	1.6649615351687255E-5	DEFECT
// Allow the value to be defined by an annotation or by the field's initializer //	WITHOUT_CLASSIFICATION	0.9999999793024558	WITHOUT_CLASSIFICATION	2.0697544256878694E-8	DEFECT
// Allow a distinct literal value to be provided, too. //	WITHOUT_CLASSIFICATION	0.9999995719872642	WITHOUT_CLASSIFICATION	4.2801273591791626E-7	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.999999891557245	WITHOUT_CLASSIFICATION	1.0844275502500757E-7	DEFECT
// Allow a mixed case version of the name to be provided. //	WITHOUT_CLASSIFICATION	0.9999953254716074	WITHOUT_CLASSIFICATION	4.6745283925657794E-6	DEFECT
// But, if name doesn't expand into field name, ignore it. //	WITHOUT_CLASSIFICATION	0.9999998536296626	WITHOUT_CLASSIFICATION	1.4637033747237634E-7	DEFECT
// If there is no Ecore representation or it's invalid, e.g., when - is used to omit a specification, then just use the Java representation. //	WITHOUT_CLASSIFICATION	0.9999999995821955	WITHOUT_CLASSIFICATION	4.178044433652408E-10	DEFECT
// We want to resolve to this. //	WITHOUT_CLASSIFICATION	0.9999985539673973	WITHOUT_CLASSIFICATION	1.4460326026694138E-6	DEFECT
// Check if it is exactly the name of a type parameter that's in scope. //	WITHOUT_CLASSIFICATION	0.9999998801293487	WITHOUT_CLASSIFICATION	1.1987065121117792E-7	DEFECT
// Check if the name is qualified //	WITHOUT_CLASSIFICATION	0.9999999954713836	WITHOUT_CLASSIFICATION	4.528616353156058E-9	DEFECT
// For arrays, consider the element type. //	WITHOUT_CLASSIFICATION	0.9999880584367543	WITHOUT_CLASSIFICATION	1.194156324566477E-5	DEFECT
// Find an explicit import or the first wildcard import. //	WITHOUT_CLASSIFICATION	0.9999999544093413	WITHOUT_CLASSIFICATION	4.559065872478014E-8	DEFECT
// Find the modeled package for the import and look up the name there. //	WITHOUT_CLASSIFICATION	0.9999996718509926	WITHOUT_CLASSIFICATION	3.281490074017965E-7	DEFECT
// If we can't find it, try the simple name in the package... //	WITHOUT_CLASSIFICATION	0.9982123933047308	WITHOUT_CLASSIFICATION	0.0017876066952691749	DEFECT
// Find the modeled package for the name and look up the name there. //	WITHOUT_CLASSIFICATION	0.999999913313773	WITHOUT_CLASSIFICATION	8.66862270116116E-8	DEFECT
// If we still don't have one, we'll have to settle for an EDataType or EClass with an instance class name. //	WITHOUT_CLASSIFICATION	0.9999661081658797	WITHOUT_CLASSIFICATION	3.3891834120305146E-5	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999995972496601	WITHOUT_CLASSIFICATION	4.0275033974482523E-7	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.999999382397121	WITHOUT_CLASSIFICATION	6.176028789009124E-7	DEFECT
// See if we already have the EDataType. //	WITHOUT_CLASSIFICATION	0.9999991152466992	WITHOUT_CLASSIFICATION	8.847533007501239E-7	DEFECT
// Just to be helpful, we'll recognize a type of org.eclipse.emf.ecore.util.FeatureMap and convert it to EFeatureMapEntry. // This way a dataType need not be specified. But, we won't do this if recordDemandCreateEDataType is false, so we don't // change the instanceClass of a new EDataType that's implicitly being defined for FeatureMap. //	WITHOUT_CLASSIFICATION	0.9999999999999907	WITHOUT_CLASSIFICATION	9.33995007196534E-15	DEFECT
// If we don't have one yet, maybe it's one of the special types... //	WITHOUT_CLASSIFICATION	0.9986539265017593	WITHOUT_CLASSIFICATION	0.0013460734982407327	DEFECT
// If we still don't have one, we'll have to settle for a demand created EDataType or EClass, // so create a new EClassifier with a nice unique name. //	WITHOUT_CLASSIFICATION	0.9999999433071889	WITHOUT_CLASSIFICATION	5.669281113310916E-8	DEFECT
// If the name isn't qualified, it might be a primitive or from java.lang. Otherwise, assume it's in the current // package and use the nsPrefix for the qualified package name. //	WITHOUT_CLASSIFICATION	0.9999999796644043	WITHOUT_CLASSIFICATION	2.033559564580612E-8	DEFECT
// Even primitives should be represented by a data type with a conventional (i.e. capitalized) name. //	WITHOUT_CLASSIFICATION	0.9997358681817547	WITHOUT_CLASSIFICATION	2.641318182451933E-4	DEFECT
// Make array names legal. //	WITHOUT_CLASSIFICATION	0.9999925656151765	WITHOUT_CLASSIFICATION	7.434384823499182E-6	DEFECT
// Avoid classifier name collisions. //	WITHOUT_CLASSIFICATION	0.9999997185650144	WITHOUT_CLASSIFICATION	2.814349855930226E-7	DEFECT
// For the model information. //	WITHOUT_CLASSIFICATION	0.9999946666331349	WITHOUT_CLASSIFICATION	5.333366865191824E-6	DEFECT
// This is package,  // so check the package information if this is in cat file. // If it is, then load the .cat file into the tree thereby traversing it; // otherwise, just traverse the tree. //	WITHOUT_CLASSIFICATION	0.9999999996069201	WITHOUT_CLASSIFICATION	3.9307982672564977E-10	DEFECT
// The package is in a .cat file. //	WITHOUT_CLASSIFICATION	0.999997285933152	WITHOUT_CLASSIFICATION	2.714066847951807E-6	DEFECT
// The package not in a .cat file. //	WITHOUT_CLASSIFICATION	0.9998141660314532	WITHOUT_CLASSIFICATION	1.858339685468453E-4	DEFECT
// This could potentially map every created model element to its corresponding Rose node. // However, for now we're only using it as needed. //	WITHOUT_CLASSIFICATION	0.9999981811208216	WITHOUT_CLASSIFICATION	1.818879178265206E-6	DEFECT
// Get the parent object. //	WITHOUT_CLASSIFICATION	0.9999993999913254	WITHOUT_CLASSIFICATION	6.000086746156059E-7	DEFECT
// Map to an EPackage. //	WITHOUT_CLASSIFICATION	0.9999995525544314	WITHOUT_CLASSIFICATION	4.474455685528097E-7	DEFECT
// Add to package. //	WITHOUT_CLASSIFICATION	0.999998880164481	WITHOUT_CLASSIFICATION	1.1198355190086605E-6	DEFECT
// Map to an EClass. //	WITHOUT_CLASSIFICATION	0.9999998928652744	WITHOUT_CLASSIFICATION	1.0713472561115961E-7	DEFECT
//do nothing	WITHOUT_CLASSIFICATION	0.9999985155734507	WITHOUT_CLASSIFICATION	1.4844265493075962E-6	DEFECT
// Map to an EDataType. //	WITHOUT_CLASSIFICATION	0.9999990566716536	WITHOUT_CLASSIFICATION	9.433283464806475E-7	DEFECT
// Map to an EDataType. //	WITHOUT_CLASSIFICATION	0.9999990566716536	WITHOUT_CLASSIFICATION	9.433283464806475E-7	DEFECT
// Map to an eClass. //	WITHOUT_CLASSIFICATION	0.9999998577493732	WITHOUT_CLASSIFICATION	1.422506269629702E-7	DEFECT
// Map to an EOperation.	WITHOUT_CLASSIFICATION	0.9999999098601035	WITHOUT_CLASSIFICATION	9.01398964601048E-8	DEFECT
// Add to an EClass //	WITHOUT_CLASSIFICATION	0.9999998384619343	WITHOUT_CLASSIFICATION	1.615380656871503E-7	DEFECT
// Map to an EParameter as input parameter for operation. //	WITHOUT_CLASSIFICATION	0.9999999244391454	WITHOUT_CLASSIFICATION	7.556085451064442E-8	DEFECT
// Do this first for better error message during setEParameterProperties. //	WITHOUT_CLASSIFICATION	0.99999999189132	WITHOUT_CLASSIFICATION	8.108679900823171E-9	DEFECT
// Map to EAttribute, or EEnumLiteral. //	WITHOUT_CLASSIFICATION	0.9999999474689529	WITHOUT_CLASSIFICATION	5.253104709673455E-8	DEFECT
// We will need to check the containment if we have to convert the EAttribute to an EReference later.  //	WITHOUT_CLASSIFICATION	0.9999991772444723	WITHOUT_CLASSIFICATION	8.227555277135311E-7	DEFECT
// Convert to an EReference. //	WITHOUT_CLASSIFICATION	0.9999996096554862	WITHOUT_CLASSIFICATION	3.9034451380094255E-7	DEFECT
// map to EReference when is navigable //	WITHOUT_CLASSIFICATION	0.9999992229525384	WITHOUT_CLASSIFICATION	7.770474616731026E-7	DEFECT
// eReference.setNavigable(roseNode.isNavigable());	WITHOUT_CLASSIFICATION	0.9999999376872255	WITHOUT_CLASSIFICATION	6.231277445067551E-8	DEFECT
/*        eClass.getESuperTypes().addAll(extend);        eClass.getESuperTypes().addAll(unspecified);        eClass.getESuperTypes().addAll(mixin);        eClass.getESuperTypes().addAll(nonClass);        */	WITHOUT_CLASSIFICATION	0.9999999599018254	WITHOUT_CLASSIFICATION	4.009817459318187E-8	DEFECT
// try to retrieve the fully qualified name of the specified type...	WITHOUT_CLASSIFICATION	0.999999999460007	WITHOUT_CLASSIFICATION	5.39992998446547E-10	DEFECT
// convert to dot-separated format if necessary...	WITHOUT_CLASSIFICATION	0.9999993217742833	WITHOUT_CLASSIFICATION	6.782257167516548E-7	DEFECT
// remove garbage characters...	WITHOUT_CLASSIFICATION	0.9999994620044322	WITHOUT_CLASSIFICATION	5.379955677470239E-7	DEFECT
// qualify type name if not already qualified...	WITHOUT_CLASSIFICATION	0.9999992712146305	WITHOUT_CLASSIFICATION	7.287853694580835E-7	DEFECT
// default value //	WITHOUT_CLASSIFICATION	0.9999997787172917	WITHOUT_CLASSIFICATION	2.2128270829522572E-7	DEFECT
// Order first by number of features (descending) and then alphabetically (ascending) //	WITHOUT_CLASSIFICATION	0.9999997037241832	WITHOUT_CLASSIFICATION	2.96275816722748E-7	DEFECT
// Temporary WAS/WSAD migration option. //	WITHOUT_CLASSIFICATION	0.9999898680257882	WITHOUT_CLASSIFICATION	1.0131974211745483E-5	DEFECT
// A container must be transient. //	WITHOUT_CLASSIFICATION	0.9999999463467558	WITHOUT_CLASSIFICATION	5.365324413232617E-8	DEFECT
// setup attribute and parameter type //	WITHOUT_CLASSIFICATION	0.9999994973116484	WITHOUT_CLASSIFICATION	5.02688351506288E-7	DEFECT
// Convert attributes of with EClass type to references. //	WITHOUT_CLASSIFICATION	0.9999997615914169	WITHOUT_CLASSIFICATION	2.384085831873184E-7	DEFECT
// It was not found in the model class so check if primitive type. //	WITHOUT_CLASSIFICATION	0.9999845076159659	WITHOUT_CLASSIFICATION	1.5492384034078145E-5	DEFECT
// Convert reference to attribute if its type is an EDataType...  //	WITHOUT_CLASSIFICATION	0.9999988478476968	WITHOUT_CLASSIFICATION	1.1521523031495416E-6	DEFECT
// Store the base name for relative .cat file references. //	WITHOUT_CLASSIFICATION	0.9999999928441714	WITHOUT_CLASSIFICATION	7.1558285432027505E-9	DEFECT
// read mdl file...	WITHOUT_CLASSIFICATION	0.9999993265604371	WITHOUT_CLASSIFICATION	6.734395629076281E-7	DEFECT
// special case, traverse cat file or mdl file //	WITHOUT_CLASSIFICATION	0.9999999803568962	WITHOUT_CLASSIFICATION	1.9643103752359402E-8	DEFECT
// file is a mdl file // // get model name	WITHOUT_CLASSIFICATION	0.9999996655150752	WITHOUT_CLASSIFICATION	3.3448492475063227E-7	DEFECT
// cat(unit) file referenced by mdl file	WITHOUT_CLASSIFICATION	0.9999996666269322	WITHOUT_CLASSIFICATION	3.333730678274735E-7	DEFECT
// Process the children of the UnitTreeNode recursively. //	WITHOUT_CLASSIFICATION	0.9999998109723898	WITHOUT_CLASSIFICATION	1.8902761026488235E-7	DEFECT
//directoryName.length() > 0 && directoryName.charAt(0) == '$') 	WITHOUT_CLASSIFICATION	0.9999997558447153	WITHOUT_CLASSIFICATION	2.441552846606446E-7	DEFECT
// map properties even when isTreeOnly == true	WITHOUT_CLASSIFICATION	0.9999987379224864	WITHOUT_CLASSIFICATION	1.2620775136495385E-6	DEFECT
//    top++;	WITHOUT_CLASSIFICATION	0.9999983613774441	WITHOUT_CLASSIFICATION	1.6386225559344813E-6	DEFECT
// 7 is the size of (object	WITHOUT_CLASSIFICATION	0.9999779777991202	WITHOUT_CLASSIFICATION	2.202220087982114E-5	DEFECT
// 5 is the size of (list	WITHOUT_CLASSIFICATION	0.9999952948466103	WITHOUT_CLASSIFICATION	4.705153389656955E-6	DEFECT
// 6 is the size of (value	WITHOUT_CLASSIFICATION	0.999994133292876	WITHOUT_CLASSIFICATION	5.866707123910104E-6	DEFECT
// size should be 1	WITHOUT_CLASSIFICATION	0.9999934730908261	WITHOUT_CLASSIFICATION	6.52690917399921E-6	DEFECT
// could this happen?	WITHOUT_CLASSIFICATION	0.9999936728348985	WITHOUT_CLASSIFICATION	6.32716510149659E-6	DEFECT
// Process the children of the UnitTreeNode recursively. //	WITHOUT_CLASSIFICATION	0.9999998109723898	WITHOUT_CLASSIFICATION	1.8902761026488235E-7	DEFECT
// Process the contents of the extent //	WITHOUT_CLASSIFICATION	0.9999999588694685	WITHOUT_CLASSIFICATION	4.113053159784256E-8	DEFECT
// Load the Rose .mdl or .cat file, and create mappings for the objects. //	WITHOUT_CLASSIFICATION	0.9999996616984678	WITHOUT_CLASSIFICATION	3.3830153227782803E-7	DEFECT
// This sets the parent so that the nodes can traverse to the root to find default eCore settings. //	WITHOUT_CLASSIFICATION	0.9999995217152566	WITHOUT_CLASSIFICATION	4.78284743358261E-7	DEFECT
// Start second traverse to create mapping objects in memory. //	WITHOUT_CLASSIFICATION	0.9999226498314852	WITHOUT_CLASSIFICATION	7.735016851477808E-5	DEFECT
// Only one open quote. //	WITHOUT_CLASSIFICATION	0.9999906141405343	WITHOUT_CLASSIFICATION	9.385859465745434E-6	DEFECT
// This will not add duplicates. //	WITHOUT_CLASSIFICATION	0.9999983231891569	WITHOUT_CLASSIFICATION	1.6768108430483474E-6	DEFECT
// No additional features // MappingStrategy	WITHOUT_CLASSIFICATION	0.9999991579905317	WITHOUT_CLASSIFICATION	8.420094683097843E-7	DEFECT
//MappingPackage	WITHOUT_CLASSIFICATION	0.999993406379708	WITHOUT_CLASSIFICATION	6.593620292040081E-6	DEFECT
// ComplexTypeConverter	WITHOUT_CLASSIFICATION	0.9999992607466583	WITHOUT_CLASSIFICATION	7.392533415340041E-7	DEFECT
// No additional features // TypeConverter	WITHOUT_CLASSIFICATION	0.9999997265954824	WITHOUT_CLASSIFICATION	2.7340451758363304E-7	DEFECT
// MappingRoot	WITHOUT_CLASSIFICATION	0.9999987036901489	WITHOUT_CLASSIFICATION	1.2963098511867841E-6	DEFECT
// FunctionNamePair	WITHOUT_CLASSIFICATION	0.999999768180688	WITHOUT_CLASSIFICATION	2.3181931206657283E-7	DEFECT
// MappingHelper	WITHOUT_CLASSIFICATION	0.9999997517354926	WITHOUT_CLASSIFICATION	2.4826450729218266E-7	DEFECT
//MappingFactory	WITHOUT_CLASSIFICATION	0.9999804662548204	WITHOUT_CLASSIFICATION	1.9533745179614928E-5	DEFECT
// FunctionPair	WITHOUT_CLASSIFICATION	0.9999995885082756	WITHOUT_CLASSIFICATION	4.1149172432789677E-7	DEFECT
//mappingRoot.ePackageMapping().getMapping_Outputs() : //mappingRoot.ePackageMapping().getMapping_Inputs(),	WITHOUT_CLASSIFICATION	0.9998983498421945	WITHOUT_CLASSIFICATION	1.0165015780547022E-4	DEFECT
//mappingRoot.ePackageMapping().getMapping_Inputs() : //mappingRoot.ePackageMapping().getMapping_Outputs(),	WITHOUT_CLASSIFICATION	0.9998983498421945	WITHOUT_CLASSIFICATION	1.0165015780547022E-4	DEFECT
// This will deal with all the subcommands to modifying the root mapping tree. //	WITHOUT_CLASSIFICATION	0.9984111213228111	WITHOUT_CLASSIFICATION	0.0015888786771889526	DEFECT
// For each mapping being removed... //	WITHOUT_CLASSIFICATION	0.9999237886543243	WITHOUT_CLASSIFICATION	7.621134567570756E-5	DEFECT
// Make sure the back pointers to this mapping from the mapped objects is set. //	WITHOUT_CLASSIFICATION	0.9999924867243121	WITHOUT_CLASSIFICATION	7.513275688055271E-6	DEFECT
//subcommands.appendAndExecute(new RemoveCommand(domain, mapping, mapping.ePackageMapping().getMapping_Nested(), nestedMappings)); //subcommands.appendAndExecute(new AddCommand(domain, parentMapping, parentMapping.ePackageMapping().getMapping_Nested(), nestedMappings));	WITHOUT_CLASSIFICATION	0.9999769786916093	WITHOUT_CLASSIFICATION	2.302130839073034E-5	DEFECT
// Since input objects are read-only, we don't need to make a copy of them for the clipboard. // We can just put a pointer to the original object(s) on the clipboard. //	WITHOUT_CLASSIFICATION	0.9999999892204376	WITHOUT_CLASSIFICATION	1.077956240148884E-8	DEFECT
// Do we also have some non-input objects to copy? //	WITHOUT_CLASSIFICATION	0.9999993268884934	WITHOUT_CLASSIFICATION	6.731115066949962E-7	DEFECT
// Just remember it; it's encoded later during execution, which is more efficient. //	WITHOUT_CLASSIFICATION	0.9999991505412175	WITHOUT_CLASSIFICATION	8.494587825339333E-7	DEFECT
// Do the encoding. //	WITHOUT_CLASSIFICATION	0.9999949140593326	WITHOUT_CLASSIFICATION	5.085940667374322E-6	DEFECT
// Record the records for the executed commands on the stack. //	WITHOUT_CLASSIFICATION	0.9999056971715055	WITHOUT_CLASSIFICATION	9.430282849456393E-5	DEFECT
// If there is more than one exact match, we must get an index number; //	WITHOUT_CLASSIFICATION	0.9999995895669906	WITHOUT_CLASSIFICATION	4.104330093243439E-7	DEFECT
// Iterate over the whole tree to do this. //	WITHOUT_CLASSIFICATION	0.9999998658752303	WITHOUT_CLASSIFICATION	1.3412476974746513E-7	DEFECT
//Resource resource = EcoreUtil.getURI(refObject).; FIX:::	WITHOUT_CLASSIFICATION	0.9992343761525634	WITHOUT_CLASSIFICATION	7.656238474365847E-4	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.mapping.action.AddRootTopAction#getTopsToAdd()   */	WITHOUT_CLASSIFICATION	0.99999999998044	WITHOUT_CLASSIFICATION	1.956003628464443E-11	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9999989903431339	WITHOUT_CLASSIFICATION	1.0096568660966294E-6	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9999989903431339	WITHOUT_CLASSIFICATION	1.0096568660966294E-6	DEFECT
// Make sure the back pointers to this mapping from the mapped objects is set. //	WITHOUT_CLASSIFICATION	0.9999924867243121	WITHOUT_CLASSIFICATION	7.513275688055271E-6	DEFECT
// Iterate over the whole tree to do this. //	WITHOUT_CLASSIFICATION	0.9999998658752303	WITHOUT_CLASSIFICATION	1.3412476974746513E-7	DEFECT
// This is tricky and is done for each object here rather than once for the owner of the addCommnd. // We want to make sure the object is really part of the conceptual tree induced by the domain. //	WITHOUT_CLASSIFICATION	0.9999979962500167	WITHOUT_CLASSIFICATION	2.003749983290636E-6	DEFECT
// For each mapping being added... //	WITHOUT_CLASSIFICATION	0.9999446195304534	WITHOUT_CLASSIFICATION	5.538046954657863E-5	DEFECT
// Check all the siblings to see which if any should now be nested under this new mapping. // The are accumulated into a list so that they can be removed as a single command with a single notification. //	WITHOUT_CLASSIFICATION	0.9991872209406515	WITHOUT_CLASSIFICATION	8.127790593485784E-4	DEFECT
// If there are siblings that need to be reparented. //	WITHOUT_CLASSIFICATION	0.9999772537386747	WITHOUT_CLASSIFICATION	2.2746261325305944E-5	DEFECT
// Create commands to do parentMapping.getNested().removeAll(siblingsToReparent). //	WITHOUT_CLASSIFICATION	0.9998244214505086	WITHOUT_CLASSIFICATION	1.7557854949138598E-4	DEFECT
//(new RemoveCommand(domain, parentMapping, parentMapping.ePackageMapping().getMapping_Nested(), siblingsToReparent));	WITHOUT_CLASSIFICATION	0.9999966370559182	WITHOUT_CLASSIFICATION	3.3629440818013242E-6	DEFECT
// Create commands to do mapping.getNested().addAll(siblingsToReparent). //	WITHOUT_CLASSIFICATION	0.9998864777803383	WITHOUT_CLASSIFICATION	1.1352221966155598E-4	DEFECT
// return false if iteration should continue.	WITHOUT_CLASSIFICATION	0.999999968296741	WITHOUT_CLASSIFICATION	3.1703258939323724E-8	DEFECT
// Now we'll do recursive MatchMapping. // (We need to iterate over a copy, since we modify the underlying list in the loop.)	WITHOUT_CLASSIFICATION	0.999999999793764	WITHOUT_CLASSIFICATION	2.062359234321383E-10	DEFECT
//(RemoveCommand.create(mappingDomain, mapping, mapping.ePackageMapping().getMapping_Outputs(), object)));	WITHOUT_CLASSIFICATION	0.9999992033817591	WITHOUT_CLASSIFICATION	7.966182408570226E-7	DEFECT
// Get the corresponding type. //	WITHOUT_CLASSIFICATION	0.9999215197185221	WITHOUT_CLASSIFICATION	7.848028147788632E-5	DEFECT
// Create the copy from this corresponding type. //	WITHOUT_CLASSIFICATION	0.9996950609078252	WITHOUT_CLASSIFICATION	3.049390921747794E-4	DEFECT
// This is done to ensure that this new copy is treated as an output by the domain. // The CreateMappingCommand will rely on this setting. //	WITHOUT_CLASSIFICATION	0.9999966363861003	WITHOUT_CLASSIFICATION	3.3636138997459396E-6	DEFECT
// Type matching never matches inputs that are already mapped	WITHOUT_CLASSIFICATION	0.9999922506745285	WITHOUT_CLASSIFICATION	7.749325471570342E-6	DEFECT
//commandList.add(RemoveCommand.create(mappingDomain, mapping, mapping.ePackageMapping().getMapping_Outputs(), object));	WITHOUT_CLASSIFICATION	0.9999991730826824	WITHOUT_CLASSIFICATION	8.269173175525263E-7	DEFECT
// Copy the children references  //	WITHOUT_CLASSIFICATION	0.9999981181781935	WITHOUT_CLASSIFICATION	1.8818218064799806E-6	DEFECT
// this will create the mapping as well	WITHOUT_CLASSIFICATION	0.9999984169610225	WITHOUT_CLASSIFICATION	1.5830389774400783E-6	DEFECT
// Copy the name //	WITHOUT_CLASSIFICATION	0.9999997934209539	WITHOUT_CLASSIFICATION	2.0657904617325357E-7	DEFECT
// Copy the type //	WITHOUT_CLASSIFICATION	0.9999988677941946	WITHOUT_CLASSIFICATION	1.1322058054366043E-6	DEFECT
// We have done our preparation. Now ask the super to validate. //	WITHOUT_CLASSIFICATION	0.9999999668553805	WITHOUT_CLASSIFICATION	3.314461957621327E-8	DEFECT
// Remove all the mappings from the root. //	WITHOUT_CLASSIFICATION	0.9966497446629955	WITHOUT_CLASSIFICATION	0.0033502553370044594	DEFECT
//removeCommand = RemoveCommand.create(domain, mappingRoot, mappingRoot.ePackageMapping().getMapping_Nested(), mappingRoot.getNested());	WITHOUT_CLASSIFICATION	0.9999996025735088	WITHOUT_CLASSIFICATION	3.974264911391244E-7	DEFECT
// This is the tricky part where we set the encoding  // that we'd like to have decoded as a series of commands to execute after this command has completed. //	WITHOUT_CLASSIFICATION	0.9815928799040918	WITHOUT_CLASSIFICATION	0.01840712009590826	DEFECT
//domain.getMappingRoot().removeMapping(newMapping);	WITHOUT_CLASSIFICATION	0.9999967332627067	WITHOUT_CLASSIFICATION	3.2667372933081756E-6	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.mapping.action.AddRootBottomAction#getBottomsToAdd()   */	WITHOUT_CLASSIFICATION	0.9999999999356742	WITHOUT_CLASSIFICATION	6.432581401170082E-11	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999999243570483	WITHOUT_CLASSIFICATION	7.564295163489141E-8	DEFECT
// If eCore, return the ENamedElement name //	WITHOUT_CLASSIFICATION	0.9999998122243932	WITHOUT_CLASSIFICATION	1.8777560690416344E-7	DEFECT
// If there is an adapter of the correct type, return the item label //	WITHOUT_CLASSIFICATION	0.999995669922042	WITHOUT_CLASSIFICATION	4.330077957964954E-6	DEFECT
// If eCore, set the ENamedElement name //	WITHOUT_CLASSIFICATION	0.9999999759433298	WITHOUT_CLASSIFICATION	2.4056670174670587E-8	DEFECT
// This turns a featureless set command into an operation to create a mapping. // This is invoked during drag and drop. //	WITHOUT_CLASSIFICATION	0.999999812005391	WITHOUT_CLASSIFICATION	1.8799460891174716E-7	DEFECT
// If this is a RemoveCommand for a root input object, direct it to the MappingRoot. //	WITHOUT_CLASSIFICATION	0.999869666564488	WITHOUT_CLASSIFICATION	1.3033343551203084E-4	DEFECT
// If the owner and the copy are of the same type, we can proceed with the command, i.e. no override. // If not, we will skip this command by returning a do-nothing override. //	WITHOUT_CLASSIFICATION	0.999999233171163	WITHOUT_CLASSIFICATION	7.668288369583556E-7	DEFECT
// remove all sourceSeparator characters	WITHOUT_CLASSIFICATION	0.999999990488641	WITHOUT_CLASSIFICATION	9.511359103936108E-9	DEFECT
// sourceSeparator == LABEL_NO_SEPARATOR	WITHOUT_CLASSIFICATION	0.9999999963801424	WITHOUT_CLASSIFICATION	3.619857621950464E-9	DEFECT
// add a targetSeparator in front of every upper case character	WITHOUT_CLASSIFICATION	0.9999999951042652	WITHOUT_CLASSIFICATION	4.895734782052173E-9	DEFECT
// type-mappings	WITHOUT_CLASSIFICATION	0.9999890881742406	WITHOUT_CLASSIFICATION	1.0911825759421471E-5	DEFECT
// top-label-separator	WITHOUT_CLASSIFICATION	0.9999999835183349	WITHOUT_CLASSIFICATION	1.648166520771008E-8	DEFECT
// bottom-label-separator	WITHOUT_CLASSIFICATION	0.9999999976611674	WITHOUT_CLASSIFICATION	2.3388325277121646E-9	DEFECT
// top-label-case	WITHOUT_CLASSIFICATION	0.9999999709627726	WITHOUT_CLASSIFICATION	2.9037227368362373E-8	DEFECT
// bottom-label-case	WITHOUT_CLASSIFICATION	0.999999994859505	WITHOUT_CLASSIFICATION	5.140495039913783E-9	DEFECT
// top-label-forms	WITHOUT_CLASSIFICATION	0.9999999761150493	WITHOUT_CLASSIFICATION	2.3884950705019955E-8	DEFECT
// bottom-label-forms	WITHOUT_CLASSIFICATION	0.9999999935681608	WITHOUT_CLASSIFICATION	6.431839216664064E-9	DEFECT
//if // for // for	WITHOUT_CLASSIFICATION	0.9999991087961706	WITHOUT_CLASSIFICATION	8.912038292888639E-7	DEFECT
/*     * The type string must be qualified by its package uri, e.g. DTD.xmi:DTDElement.     * The package uri is used to look up the package by calling RefRegister.getPackage(uri).     */	WITHOUT_CLASSIFICATION	0.9999999971025061	WITHOUT_CLASSIFICATION	2.8974938049286697E-9	DEFECT
//Ecore2EcorePackage	WITHOUT_CLASSIFICATION	0.9999890203198555	WITHOUT_CLASSIFICATION	1.0979680144464132E-5	DEFECT
// Ecore2EcoreMappingRoot	WITHOUT_CLASSIFICATION	0.9999963100434239	WITHOUT_CLASSIFICATION	3.689956576026902E-6	DEFECT
//Ecore2EcoreFactory	WITHOUT_CLASSIFICATION	0.999988119957407	WITHOUT_CLASSIFICATION	1.188004259306017E-5	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999995972496601	WITHOUT_CLASSIFICATION	4.0275033974482523E-7	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999995972496601	WITHOUT_CLASSIFICATION	4.0275033974482523E-7	DEFECT
// Obtain other dependent packages	WITHOUT_CLASSIFICATION	0.9999999973950333	WITHOUT_CLASSIFICATION	2.6049666313332696E-9	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.9999993290912625	WITHOUT_CLASSIFICATION	6.709087374268461E-7	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.9999978849235671	WITHOUT_CLASSIFICATION	2.1150764329847075E-6	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.9999996570524105	WITHOUT_CLASSIFICATION	3.429475895124151E-7	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.mapping.ecore2ecore.Ecore2EcoreMapping#getInputEPackage()   */	WITHOUT_CLASSIFICATION	0.9999999962201925	WITHOUT_CLASSIFICATION	3.7798074330444655E-9	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.mapping.ecore2ecore.Ecore2EcoreMapping#getOutputEPackage()   */	WITHOUT_CLASSIFICATION	0.999999997015914	WITHOUT_CLASSIFICATION	2.9840859283657075E-9	DEFECT
// Initialize classes and features; add operations and parameters	WITHOUT_CLASSIFICATION	0.999997918294812	WITHOUT_CLASSIFICATION	2.0817051879083706E-6	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.9999999647879461	WITHOUT_CLASSIFICATION	3.5212053998147653E-8	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9990389862656467	WITHOUT_CLASSIFICATION	9.610137343533806E-4	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999929610569948	WITHOUT_CLASSIFICATION	7.0389430052846595E-6	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9990389862656467	WITHOUT_CLASSIFICATION	9.610137343533806E-4	DEFECT
/**   * The switch that delegates to the <code>createXXX</code> methods.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9999999008203482	WITHOUT_CLASSIFICATION	9.917965187179749E-8	DEFECT
// Open an editor on the new file. //	WITHOUT_CLASSIFICATION	0.9999987406468108	WITHOUT_CLASSIFICATION	1.2593531891924936E-6	DEFECT
// Remember the file. //	WITHOUT_CLASSIFICATION	0.99999666420128	WITHOUT_CLASSIFICATION	3.335798720007904E-6	DEFECT
// Do the work within an operation. //	WITHOUT_CLASSIFICATION	0.9999687702507611	WITHOUT_CLASSIFICATION	3.1229749238905735E-5	DEFECT
// Create a resource set //	WITHOUT_CLASSIFICATION	0.9999999933269911	WITHOUT_CLASSIFICATION	6.6730089600617695E-9	DEFECT
// Get the URI of the model file. //	WITHOUT_CLASSIFICATION	0.9999995321347683	WITHOUT_CLASSIFICATION	4.6786523159738616E-7	DEFECT
// Create a resource for this file. //	WITHOUT_CLASSIFICATION	0.9999998043025027	WITHOUT_CLASSIFICATION	1.9569749731170499E-7	DEFECT
// Add the initial model object to the contents. //	WITHOUT_CLASSIFICATION	0.9999999940977274	WITHOUT_CLASSIFICATION	5.902272575517009E-9	DEFECT
// Save the contents of the resource to the file system. //	WITHOUT_CLASSIFICATION	0.9999994542933036	WITHOUT_CLASSIFICATION	5.457066963858113E-7	DEFECT
// Select the new file resource in the current view. //	WITHOUT_CLASSIFICATION	0.999999308325589	WITHOUT_CLASSIFICATION	6.916744109176111E-7	DEFECT
// Determine the values to be added and add them at the right position. //	WITHOUT_CLASSIFICATION	0.9999620944385981	WITHOUT_CLASSIFICATION	3.790556140189613E-5	DEFECT
//Ecore2EcorePackageImpl	WITHOUT_CLASSIFICATION	0.9999702563822601	WITHOUT_CLASSIFICATION	2.9743617739896064E-5	DEFECT
//Ecore2EcoreFactoryImpl	WITHOUT_CLASSIFICATION	0.9999822012166915	WITHOUT_CLASSIFICATION	1.779878330849561E-5	DEFECT
//Ecore2EcoreMappingRootImpl	WITHOUT_CLASSIFICATION	0.9999624402305355	WITHOUT_CLASSIFICATION	3.7559769464435606E-5	DEFECT
//Ecore2EcoreResourceFactoryImpl	WITHOUT_CLASSIFICATION	0.9999977366807171	WITHOUT_CLASSIFICATION	2.263319282883227E-6	DEFECT
//Ecore2EcoreResourceFactoryImpl	WITHOUT_CLASSIFICATION	0.9999977366807171	WITHOUT_CLASSIFICATION	2.263319282883227E-6	DEFECT
//Ecore2EcoreAdapterFactory	WITHOUT_CLASSIFICATION	0.9999820512113438	WITHOUT_CLASSIFICATION	1.7948788656148998E-5	DEFECT
//Ecore2EcoreSwitch	WITHOUT_CLASSIFICATION	0.999989228848101	WITHOUT_CLASSIFICATION	1.0771151899054537E-5	DEFECT
//$NON-NLS-1$ 	WITHOUT_CLASSIFICATION	0.9999927227823949	WITHOUT_CLASSIFICATION	7.2772176051435625E-6	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9999920843219914	WITHOUT_CLASSIFICATION	7.915678008665397E-6	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9999920843219914	WITHOUT_CLASSIFICATION	7.915678008665397E-6	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9999920843219914	WITHOUT_CLASSIFICATION	7.915678008665397E-6	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999879455067044	WITHOUT_CLASSIFICATION	1.2054493295575295E-5	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.9999999772821485	WITHOUT_CLASSIFICATION	2.2717851443933376E-8	DEFECT
// Initialize simple dependencies	WITHOUT_CLASSIFICATION	0.9999998628457445	WITHOUT_CLASSIFICATION	1.3715425542933645E-7	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.9999995366025851	WITHOUT_CLASSIFICATION	4.6339741494588786E-7	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.999999830336471	WITHOUT_CLASSIFICATION	1.6966352898701455E-7	DEFECT
// Mark meta-data to indicate it can't be changed	WITHOUT_CLASSIFICATION	0.99999860427837	WITHOUT_CLASSIFICATION	1.3957216301158224E-6	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.ui.IActionDelegate#run(org.eclipse.jface.action.IAction)   */	WITHOUT_CLASSIFICATION	0.9999999999955598	WITHOUT_CLASSIFICATION	4.440160390376161E-12	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999999243570483	WITHOUT_CLASSIFICATION	7.564295163489141E-8	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.999999891557245	WITHOUT_CLASSIFICATION	1.0844275502500757E-7	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.999999382397121	WITHOUT_CLASSIFICATION	6.176028789009124E-7	DEFECT
// Obtain other dependent packages	WITHOUT_CLASSIFICATION	0.9999999973950333	WITHOUT_CLASSIFICATION	2.6049666313332696E-9	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.9999993290912625	WITHOUT_CLASSIFICATION	6.709087374268461E-7	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.9999978849235671	WITHOUT_CLASSIFICATION	2.1150764329847075E-6	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.9999996570524105	WITHOUT_CLASSIFICATION	3.429475895124151E-7	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.9999999647879461	WITHOUT_CLASSIFICATION	3.5212053998147653E-8	DEFECT
// Remember the file. //	WITHOUT_CLASSIFICATION	0.99999666420128	WITHOUT_CLASSIFICATION	3.335798720007904E-6	DEFECT
// Do the work within an operation. //	WITHOUT_CLASSIFICATION	0.9999687702507611	WITHOUT_CLASSIFICATION	3.1229749238905735E-5	DEFECT
// Create a resource set //	WITHOUT_CLASSIFICATION	0.9999999933269911	WITHOUT_CLASSIFICATION	6.6730089600617695E-9	DEFECT
// Create a page, set the title, and the initial model file name. //	WITHOUT_CLASSIFICATION	0.9999999835852913	WITHOUT_CLASSIFICATION	1.6414708744470973E-8	DEFECT
// Try and get the resource selection to determine a current directory for the file dialog. //	WITHOUT_CLASSIFICATION	0.9999999847047633	WITHOUT_CLASSIFICATION	1.529523673530326E-8	DEFECT
// Get the resource... //	WITHOUT_CLASSIFICATION	0.9999977963906652	WITHOUT_CLASSIFICATION	2.203609334759539E-6	DEFECT
// Get the resource parent, if its a file. //	WITHOUT_CLASSIFICATION	0.9999999092318093	WITHOUT_CLASSIFICATION	9.076819071260528E-8	DEFECT
// This gives us a directory... //	WITHOUT_CLASSIFICATION	0.999947719918437	WITHOUT_CLASSIFICATION	5.2280081563124474E-5	DEFECT
// Set this for the container. //	WITHOUT_CLASSIFICATION	0.999997005764308	WITHOUT_CLASSIFICATION	2.994235691999589E-6	DEFECT
// Make up a unique new name here. //	WITHOUT_CLASSIFICATION	0.9999886970380123	WITHOUT_CLASSIFICATION	1.130296198766988E-5	DEFECT
// For a many-to-many association, the command can only be undoable if the value or owner is last in its // respective list, since the undo will include an inverse add.  So, if the value is last, but the owner is // not, we create an undoable compound command that removes from the opposite end and then inserts the new // value. //	WITHOUT_CLASSIFICATION	0.9999996424092894	WITHOUT_CLASSIFICATION	3.5759071053965993E-7	DEFECT
//Ecore2XMLPackage	WITHOUT_CLASSIFICATION	0.9999476652787032	WITHOUT_CLASSIFICATION	5.2334721296752473E-5	DEFECT
//Ecore2XMLFactory	WITHOUT_CLASSIFICATION	0.9999170830233411	WITHOUT_CLASSIFICATION	8.29169766588429E-5	DEFECT
// XMLInfo	WITHOUT_CLASSIFICATION	0.9998427637328527	WITHOUT_CLASSIFICATION	1.5723626714719176E-4	DEFECT
// XMLMap	WITHOUT_CLASSIFICATION	0.9999578028333073	WITHOUT_CLASSIFICATION	4.2197166692726336E-5	DEFECT
// missing attribute	WITHOUT_CLASSIFICATION	0.9999998347223922	WITHOUT_CLASSIFICATION	1.6527760785094868E-7	DEFECT
// invalid element	WITHOUT_CLASSIFICATION	0.9999999594072702	WITHOUT_CLASSIFICATION	4.059272984240614E-8	DEFECT
//XMLMapImpl	WITHOUT_CLASSIFICATION	0.9999488316687746	WITHOUT_CLASSIFICATION	5.1168331225319764E-5	DEFECT
//ENamedElementToXMLInfoMapEntryImpl	WITHOUT_CLASSIFICATION	0.9999883073915016	WITHOUT_CLASSIFICATION	1.1692608498385386E-5	DEFECT
//Ecore2XMLFactoryImpl	WITHOUT_CLASSIFICATION	0.9998757774596599	WITHOUT_CLASSIFICATION	1.242225403401304E-4	DEFECT
//Ecore2XMLPackageImpl	WITHOUT_CLASSIFICATION	0.9998582368596133	WITHOUT_CLASSIFICATION	1.417631403867671E-4	DEFECT
//XMLInfoImpl	WITHOUT_CLASSIFICATION	0.9998158632725698	WITHOUT_CLASSIFICATION	1.8413672743024739E-4	DEFECT
// Switch to the new selection provider. //	WITHOUT_CLASSIFICATION	0.9999969226012472	WITHOUT_CLASSIFICATION	3.0773987526923322E-6	DEFECT
// Fake a selection changed event to update the menus. //	WITHOUT_CLASSIFICATION	0.9999994256721726	WITHOUT_CLASSIFICATION	5.743278273912887E-7	DEFECT
// Open an editor on the new file. //	WITHOUT_CLASSIFICATION	0.9999987406468108	WITHOUT_CLASSIFICATION	1.2593531891924936E-6	DEFECT
// Add the initial model object to the contents. //	WITHOUT_CLASSIFICATION	0.9999999940977274	WITHOUT_CLASSIFICATION	5.902272575517009E-9	DEFECT
// Save the contents of the resource to the file system. //	WITHOUT_CLASSIFICATION	0.9999994542933036	WITHOUT_CLASSIFICATION	5.457066963858113E-7	DEFECT
// Select the new file resource in the current view. //	WITHOUT_CLASSIFICATION	0.999999308325589	WITHOUT_CLASSIFICATION	6.916744109176111E-7	DEFECT
// Try and get the resource selection to determine a current directory for the file dialog. //	WITHOUT_CLASSIFICATION	0.9999999847047633	WITHOUT_CLASSIFICATION	1.529523673530326E-8	DEFECT
// Get the resource... //	WITHOUT_CLASSIFICATION	0.9999977963906652	WITHOUT_CLASSIFICATION	2.203609334759539E-6	DEFECT
// Get the resource parent, if its a file. //	WITHOUT_CLASSIFICATION	0.9999999092318093	WITHOUT_CLASSIFICATION	9.076819071260528E-8	DEFECT
// This gives us a directory... //	WITHOUT_CLASSIFICATION	0.999947719918437	WITHOUT_CLASSIFICATION	5.2280081563124474E-5	DEFECT
// Set this for the container. //	WITHOUT_CLASSIFICATION	0.999997005764308	WITHOUT_CLASSIFICATION	2.994235691999589E-6	DEFECT
// Force an update because Eclipse hides empty menus now. //	WITHOUT_CLASSIFICATION	0.9999999952943627	WITHOUT_CLASSIFICATION	4.705637370748137E-9	DEFECT
// Remove any menu items for old selection. //	WITHOUT_CLASSIFICATION	0.9976675862871083	WITHOUT_CLASSIFICATION	0.0023324137128917727	DEFECT
// Query the new selection for appropriate new child/sibling descriptors //	WITHOUT_CLASSIFICATION	0.9999971552817841	WITHOUT_CLASSIFICATION	2.8447182159059214E-6	DEFECT
// Initialize all the fields from the command parameter. //	WITHOUT_CLASSIFICATION	0.9999874414914772	WITHOUT_CLASSIFICATION	1.2558508522719326E-5	DEFECT
// Initialize all the fields from the command parameter. //	WITHOUT_CLASSIFICATION	0.9999874414914772	WITHOUT_CLASSIFICATION	1.2558508522719326E-5	DEFECT
// Initialize all the fields from the command parameter. //	WITHOUT_CLASSIFICATION	0.9999874414914772	WITHOUT_CLASSIFICATION	1.2558508522719326E-5	DEFECT
// Initialize all the fields from the command parameter. //	WITHOUT_CLASSIFICATION	0.9999874414914772	WITHOUT_CLASSIFICATION	1.2558508522719326E-5	DEFECT
// Initialize all the fields from the command parameter. //	WITHOUT_CLASSIFICATION	0.9999874414914772	WITHOUT_CLASSIFICATION	1.2558508522719326E-5	DEFECT
// If the attribute is set, record it's old value. //	WITHOUT_CLASSIFICATION	0.9999944339274739	WITHOUT_CLASSIFICATION	5.566072526074596E-6	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9999999583012655	WITHOUT_CLASSIFICATION	4.1698734448853985E-8	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9999999583012655	WITHOUT_CLASSIFICATION	4.1698734448853985E-8	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9999999583012655	WITHOUT_CLASSIFICATION	4.1698734448853985E-8	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9999999583012655	WITHOUT_CLASSIFICATION	4.1698734448853985E-8	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9999999583012655	WITHOUT_CLASSIFICATION	4.1698734448853985E-8	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9999999583012655	WITHOUT_CLASSIFICATION	4.1698734448853985E-8	DEFECT
// Create the copy //	WITHOUT_CLASSIFICATION	0.9999997096992386	WITHOUT_CLASSIFICATION	2.903007614003293E-7	DEFECT
// EATM Leave this disabled for now. //	WITHOUT_CLASSIFICATION	0.9999898414863391	WITHOUT_CLASSIFICATION	1.0158513661025777E-5	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999999184455309	WITHOUT_CLASSIFICATION	8.155446905564088E-8	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999999184455309	WITHOUT_CLASSIFICATION	8.155446905564088E-8	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999999184455309	WITHOUT_CLASSIFICATION	8.155446905564088E-8	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999999184455309	WITHOUT_CLASSIFICATION	8.155446905564088E-8	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999999184455309	WITHOUT_CLASSIFICATION	8.155446905564088E-8	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999999184455309	WITHOUT_CLASSIFICATION	8.155446905564088E-8	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999999184455309	WITHOUT_CLASSIFICATION	8.155446905564088E-8	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999999184455309	WITHOUT_CLASSIFICATION	8.155446905564088E-8	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999995972496601	WITHOUT_CLASSIFICATION	4.0275033974482523E-7	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999995972496601	WITHOUT_CLASSIFICATION	4.0275033974482523E-7	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999995972496601	WITHOUT_CLASSIFICATION	4.0275033974482523E-7	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999995972496601	WITHOUT_CLASSIFICATION	4.0275033974482523E-7	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999995972496601	WITHOUT_CLASSIFICATION	4.0275033974482523E-7	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999995972496601	WITHOUT_CLASSIFICATION	4.0275033974482523E-7	DEFECT
// Set the range so that we re-check when we get into the other half. //	WITHOUT_CLASSIFICATION	0.9999998186192296	WITHOUT_CLASSIFICATION	1.8138077034359904E-7	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999996077057991	WITHOUT_CLASSIFICATION	3.922942009714717E-7	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999996077057991	WITHOUT_CLASSIFICATION	3.922942009714717E-7	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999996077057991	WITHOUT_CLASSIFICATION	3.922942009714717E-7	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999996077057991	WITHOUT_CLASSIFICATION	3.922942009714717E-7	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999996077057991	WITHOUT_CLASSIFICATION	3.922942009714717E-7	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999996077057991	WITHOUT_CLASSIFICATION	3.922942009714717E-7	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999996077057991	WITHOUT_CLASSIFICATION	3.922942009714717E-7	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999996077057991	WITHOUT_CLASSIFICATION	3.922942009714717E-7	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999996077057991	WITHOUT_CLASSIFICATION	3.922942009714717E-7	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999996077057991	WITHOUT_CLASSIFICATION	3.922942009714717E-7	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999996077057991	WITHOUT_CLASSIFICATION	3.922942009714717E-7	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999996077057991	WITHOUT_CLASSIFICATION	3.922942009714717E-7	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999996077057991	WITHOUT_CLASSIFICATION	3.922942009714717E-7	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999996077057991	WITHOUT_CLASSIFICATION	3.922942009714717E-7	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999996077057991	WITHOUT_CLASSIFICATION	3.922942009714717E-7	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999996077057991	WITHOUT_CLASSIFICATION	3.922942009714717E-7	DEFECT
// If the location indicates after, add one more. //	WITHOUT_CLASSIFICATION	0.9999967770104953	WITHOUT_CLASSIFICATION	3.2229895047796955E-6	DEFECT
// Empty extension to limit the effect of suppressing the deprecation warning.	WITHOUT_CLASSIFICATION	0.9999951632862839	WITHOUT_CLASSIFICATION	4.836713716099347E-6	DEFECT
// Empty extension to limit the effect of suppressing the deprecation warning.	WITHOUT_CLASSIFICATION	0.9999951632862839	WITHOUT_CLASSIFICATION	4.836713716099347E-6	DEFECT
// Empty extension to limit the effect of suppressing the deprecation warning.	WITHOUT_CLASSIFICATION	0.9999951632862839	WITHOUT_CLASSIFICATION	4.836713716099347E-6	DEFECT
// Try again. //	WITHOUT_CLASSIFICATION	0.9999979305354721	WITHOUT_CLASSIFICATION	2.069464527912023E-6	DEFECT
// This is the name of the model. //	WITHOUT_CLASSIFICATION	0.9999733537590358	WITHOUT_CLASSIFICATION	2.664624096410795E-5	DEFECT
// Create move commands for all the objects in the collection. //	WITHOUT_CLASSIFICATION	0.9999658934294436	WITHOUT_CLASSIFICATION	3.410657055632358E-5	DEFECT
// Apply a redirection pattern, if specified. //	WITHOUT_CLASSIFICATION	0.9999412603846947	WITHOUT_CLASSIFICATION	5.873961530543664E-5	DEFECT
// Apply a redirection pattern, if specified. //	WITHOUT_CLASSIFICATION	0.9999412603846947	WITHOUT_CLASSIFICATION	5.873961530543664E-5	DEFECT
// Thread.dumpStack();	WITHOUT_CLASSIFICATION	0.9999995689171615	WITHOUT_CLASSIFICATION	4.3108283845835906E-7	DEFECT
// Apply a redirection pattern, if specified. //	WITHOUT_CLASSIFICATION	0.9999412603846947	WITHOUT_CLASSIFICATION	5.873961530543664E-5	DEFECT
// Simply remove the object from the owner list. //	WITHOUT_CLASSIFICATION	0.9999963305776812	WITHOUT_CLASSIFICATION	3.669422318839048E-6	DEFECT
// Insert the collection at the right place. //	WITHOUT_CLASSIFICATION	0.9999884929748525	WITHOUT_CLASSIFICATION	1.1507025147612681E-5	DEFECT
// We'd like the collection of replacements selected after this replace completes. //	WITHOUT_CLASSIFICATION	0.999996483716631	WITHOUT_CLASSIFICATION	3.5162833689031187E-6	DEFECT
/*   * All Eclipse-dependent operations are delegated to this class. This pattern avoids any runtime failure due to   * missing dependencies in the stand-alone case.   */	WITHOUT_CLASSIFICATION	0.9999973768698903	WITHOUT_CLASSIFICATION	2.623130109715159E-6	DEFECT
/*   * All Eclipse-dependent operations are delegated to this class. This pattern avoids any runtime failure due to   * missing dependencies in the stand-alone case.   */	WITHOUT_CLASSIFICATION	0.9999973768698903	WITHOUT_CLASSIFICATION	2.623130109715159E-6	DEFECT
// Initialization is deferred until adapters are attached to all the objects of interest and we're // about to ask them to generate. //	WITHOUT_CLASSIFICATION	0.9999990930042849	WITHOUT_CLASSIFICATION	9.069957150750227E-7	DEFECT
// Invoke generator adapters for each object. //	WITHOUT_CLASSIFICATION	0.999996490265399	WITHOUT_CLASSIFICATION	3.5097346009109757E-6	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.9999891348511906	WITHOUT_CLASSIFICATION	1.0865148809466358E-5	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.9999891348511906	WITHOUT_CLASSIFICATION	1.0865148809466358E-5	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.9999891348511906	WITHOUT_CLASSIFICATION	1.0865148809466358E-5	DEFECT
// Iterate over the owner list twice, first matching objects from the collection by identity (==), then matching // objects by value equality (.equals()). The positions of matched objects in the owner list are recorded, and // the objects are stored in the same order. The lists are then merged to form a final, in-order list of objects // and corresponding indices in ownerList. This is very important for undo to interpret the indices correctly. // Also, this yields exactly one object removed for each object in the collection, with preference given to // identity over value equality. //	WITHOUT_CLASSIFICATION	0.9998093040413242	WITHOUT_CLASSIFICATION	1.9069595867584772E-4	DEFECT
// callers that plan to use this name without appending a suffix should call f.safeName(f.getName()) to make sure its not a keyword // this is a safe guaranteed uncapitalized form of the name // the safe name and cast to EObject, if necessary.	WITHOUT_CLASSIFICATION	0.999977978415706	WITHOUT_CLASSIFICATION	2.202158429398098E-5	DEFECT
// Add any remaining object-index pairs from either set. //	WITHOUT_CLASSIFICATION	0.9999987159157623	WITHOUT_CLASSIFICATION	1.284084237806501E-6	DEFECT
// For CreateChildCommand, we will find the owner by calling EditingDomain.getParent() on the first selected object	WITHOUT_CLASSIFICATION	0.9999993380357564	WITHOUT_CLASSIFICATION	6.619642437044458E-7	DEFECT
// This guards the switch. //	WITHOUT_CLASSIFICATION	0.9999986783477445	WITHOUT_CLASSIFICATION	1.3216522555442118E-6	DEFECT
// A set command without a feature sets the value of this wrapper, hence replacing it with a new wrapper. So, // we need a special command wrapper that selects this new wrapper as the affected object. //	WITHOUT_CLASSIFICATION	0.9999993567633594	WITHOUT_CLASSIFICATION	6.432366406047497E-7	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999998143591847	WITHOUT_CLASSIFICATION	1.8564081520207088E-7	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999998143591847	WITHOUT_CLASSIFICATION	1.8564081520207088E-7	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999998143591847	WITHOUT_CLASSIFICATION	1.8564081520207088E-7	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999998143591847	WITHOUT_CLASSIFICATION	1.8564081520207088E-7	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999998143591847	WITHOUT_CLASSIFICATION	1.8564081520207088E-7	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999998143591847	WITHOUT_CLASSIFICATION	1.8564081520207088E-7	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999998143591847	WITHOUT_CLASSIFICATION	1.8564081520207088E-7	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999998143591847	WITHOUT_CLASSIFICATION	1.8564081520207088E-7	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999998143591847	WITHOUT_CLASSIFICATION	1.8564081520207088E-7	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999998143591847	WITHOUT_CLASSIFICATION	1.8564081520207088E-7	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999998143591847	WITHOUT_CLASSIFICATION	1.8564081520207088E-7	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999998143591847	WITHOUT_CLASSIFICATION	1.8564081520207088E-7	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999998143591847	WITHOUT_CLASSIFICATION	1.8564081520207088E-7	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999998143591847	WITHOUT_CLASSIFICATION	1.8564081520207088E-7	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999998143591847	WITHOUT_CLASSIFICATION	1.8564081520207088E-7	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999998143591847	WITHOUT_CLASSIFICATION	1.8564081520207088E-7	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999998143591847	WITHOUT_CLASSIFICATION	1.8564081520207088E-7	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$	WITHOUT_CLASSIFICATION	0.9999877952066473	WITHOUT_CLASSIFICATION	1.2204793352697597E-5	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999998143591847	WITHOUT_CLASSIFICATION	1.8564081520207088E-7	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999994472408071	WITHOUT_CLASSIFICATION	5.527591928519591E-7	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999994472408071	WITHOUT_CLASSIFICATION	5.527591928519591E-7	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$	WITHOUT_CLASSIFICATION	0.9999877952066473	WITHOUT_CLASSIFICATION	1.2204793352697597E-5	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999879455067044	WITHOUT_CLASSIFICATION	1.2054493295575295E-5	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9999920843219914	WITHOUT_CLASSIFICATION	7.915678008665397E-6	DEFECT
// Create a page, set the title, and the initial model file name. // //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.999999980515828	WITHOUT_CLASSIFICATION	1.948417209884735E-8	DEFECT
// Prepare for CreateChild item addition or removal. // //$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999949603511771	WITHOUT_CLASSIFICATION	5.039648822934391E-6	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999868610285303	WITHOUT_CLASSIFICATION	1.313897146968343E-5	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999994472408071	WITHOUT_CLASSIFICATION	5.527591928519591E-7	DEFECT
// Make up a unique new name here. // //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999922057660711	WITHOUT_CLASSIFICATION	7.794233928879475E-6	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999879455067044	WITHOUT_CLASSIFICATION	1.2054493295575295E-5	DEFECT
// Prepare for CreateSibling item addition or removal. // //$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999886820668917	WITHOUT_CLASSIFICATION	1.1317933108310786E-5	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999994472408071	WITHOUT_CLASSIFICATION	5.527591928519591E-7	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999994472408071	WITHOUT_CLASSIFICATION	5.527591928519591E-7	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999994472408071	WITHOUT_CLASSIFICATION	5.527591928519591E-7	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999999217409675	WITHOUT_CLASSIFICATION	7.825903249904723E-8	DEFECT
// Either the IEditingDomainItemProvider or ITreeItemContentProvider item provider interface can give us // the children. //	WITHOUT_CLASSIFICATION	0.9999978588923993	WITHOUT_CLASSIFICATION	2.141107600608264E-6	DEFECT
// These will be the children belonging to this feature. //	WITHOUT_CLASSIFICATION	0.9999912861427374	WITHOUT_CLASSIFICATION	8.713857262685961E-6	DEFECT
// These will be the children belonging to this feature. //	WITHOUT_CLASSIFICATION	0.9999912861427374	WITHOUT_CLASSIFICATION	8.713857262685961E-6	DEFECT
// The try/catch provides backwards compatibility with the old resource // key, "_UI_CreateChild_label", and should be removed at the next // release, when we can expect users to regenerate. //	WITHOUT_CLASSIFICATION	0.9999988392446226	WITHOUT_CLASSIFICATION	1.1607553774000816E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999997500428611	WITHOUT_CLASSIFICATION	2.499571388153945E-7	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.ecore.util.ExtendedMetaData#getName(org.eclipse.emf.ecore.EClassifier)   */	WITHOUT_CLASSIFICATION	0.9999999999988983	WITHOUT_CLASSIFICATION	1.1016081357293029E-12	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.ecore.util.ExtendedMetaData#getName(org.eclipse.emf.ecore.EStructuralFeature)   */	WITHOUT_CLASSIFICATION	0.9999999999979795	WITHOUT_CLASSIFICATION	2.0205288595412733E-12	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.ecore.util.ExtendedMetaData#getNamespace(org.eclipse.emf.ecore.EPackage)   */	WITHOUT_CLASSIFICATION	0.9999999999622073	WITHOUT_CLASSIFICATION	3.7792596761585047E-11	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.ecore.util.ExtendedMetaData#getType(org.eclipse.emf.ecore.EPackage,   *      java.lang.String)   */	WITHOUT_CLASSIFICATION	0.9999999999859538	WITHOUT_CLASSIFICATION	1.4046189241568343E-11	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.ecore.util.ExtendedMetaData#getFeatureKind(org.eclipse.emf.ecore.EStructuralFeature)   */	WITHOUT_CLASSIFICATION	0.9999999999981398	WITHOUT_CLASSIFICATION	1.860143836538173E-12	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.ecore.util.BasicExtendedMetaData#isFeatureKindSpecific()   */	WITHOUT_CLASSIFICATION	0.99999999999688	WITHOUT_CLASSIFICATION	3.119908499782685E-12	DEFECT
/** * <!-- begin-user-doc --> * The <b>Adapter Factory</b> for the model. * It provides an adapter <code>createXXX</code> method for each class of the model. * <!-- end-user-doc --> * @see org.eclipse.emf.mapping.ecore2xml.Ecore2XMLPackage * @generated */	WITHOUT_CLASSIFICATION	0.9999993783952685	WITHOUT_CLASSIFICATION	6.216047314599274E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999997500428611	WITHOUT_CLASSIFICATION	2.499571388153945E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999997500428611	WITHOUT_CLASSIFICATION	2.499571388153945E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999997500428611	WITHOUT_CLASSIFICATION	2.499571388153945E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999997500428611	WITHOUT_CLASSIFICATION	2.499571388153945E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999997500428611	WITHOUT_CLASSIFICATION	2.499571388153945E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999997500428611	WITHOUT_CLASSIFICATION	2.499571388153945E-7	DEFECT
/** * <!-- begin-user-doc --> * The <b>Switch</b> for the model's inheritance hierarchy. * It supports the call {@link #doSwitch(EObject) doSwitch(object)} * to invoke the <code>caseXXX</code> method for each class of the model, * starting with the actual class of the object * and proceeding up the inheritance hierarchy * until a non-null result is returned, * which is the result of the switch. * <!-- end-user-doc --> * @see org.eclipse.emf.mapping.ecore2xml.Ecore2XMLPackage * @generated */	WITHOUT_CLASSIFICATION	0.9999998580378886	WITHOUT_CLASSIFICATION	1.4196211129232313E-7	DEFECT
/** * <!-- begin-user-doc --> * The <b>Adapter Factory</b> for the model. * It provides an adapter <code>createXXX</code> method for each class of the model. * <!-- end-user-doc --> * @see org.eclipse.emf.mapping.MappingPackage * @generated */	WITHOUT_CLASSIFICATION	0.9999998559720669	WITHOUT_CLASSIFICATION	1.440279330750792E-7	DEFECT
/** * <!-- begin-user-doc --> * The <b>Switch</b> for the model's inheritance hierarchy. * It supports the call {@link #doSwitch(EObject) doSwitch(object)}  * to invoke the <code>caseXXX</code> method for each class of the model, * starting with the actual class of the object  * and proceeding up the inheritance hierarchy * until a non-null result is returned,  * which is the result of the switch. * <!-- end-user-doc --> * @see org.eclipse.emf.mapping.MappingPackage * @generated */	WITHOUT_CLASSIFICATION	0.9999999812498679	WITHOUT_CLASSIFICATION	1.8750132013204507E-8	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.XMLResource#load(org.w3c.dom.Node, java.util.Map)   */	WITHOUT_CLASSIFICATION	0.999999999943545	WITHOUT_CLASSIFICATION	5.6455026242564875E-11	DEFECT
/** * <!-- begin-user-doc --> * The <b>Switch</b> for the model's inheritance hierarchy. * It supports the call {@link #doSwitch(EObject) doSwitch(object)}  * to invoke the <code>caseXXX</code> method for each class of the model, * starting with the actual class of the object  * and proceeding up the inheritance hierarchy * until a non-null result is returned,  * which is the result of the switch. * <!-- end-user-doc --> * @see org.eclipse.emf.codegen.ecore.genmodel.GenModelPackage * @generated */	WITHOUT_CLASSIFICATION	0.9999999897451449	WITHOUT_CLASSIFICATION	1.0254855116228981E-8	DEFECT
/** * <!-- begin-user-doc --> * The <b>Adapter Factory</b> for the model. * It provides an adapter <code>createXXX</code> method for each class of the model. * <!-- end-user-doc --> * @see org.eclipse.emf.codegen.ecore.genmodel.GenModelPackage * @generated */	WITHOUT_CLASSIFICATION	0.9999999450278761	WITHOUT_CLASSIFICATION	5.497212371129309E-8	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode#insertSibling(org.eclipse.emf.codegen.merge.java.facade.JNode, org.eclipse.emf.codegen.merge.java.facade.JNode, boolean)   */	WITHOUT_CLASSIFICATION	0.999999999999571	WITHOUT_CLASSIFICATION	4.2904247484552495E-13	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJAbstractType#insertSibling(org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode, org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode, boolean)   */	WITHOUT_CLASSIFICATION	0.9999999999993949	WITHOUT_CLASSIFICATION	6.05098049326864E-13	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJAbstractType#addChild(org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode)   */	WITHOUT_CLASSIFICATION	0.9999999999713084	WITHOUT_CLASSIFICATION	2.8691636808862463E-11	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJAbstractType#remove(org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode)   */	WITHOUT_CLASSIFICATION	0.9999999998735917	WITHOUT_CLASSIFICATION	1.2640829477177196E-10	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJAbstractType#getChildren()   */	WITHOUT_CLASSIFICATION	0.9999999999015087	WITHOUT_CLASSIFICATION	9.849136119044477E-11	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.AbstractJNode#computeQualifiedName()   */	WITHOUT_CLASSIFICATION	0.9999999999994316	WITHOUT_CLASSIFICATION	5.685357174437476E-13	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode#addChild(org.eclipse.emf.codegen.merge.java.facade.JNode)   */	WITHOUT_CLASSIFICATION	0.9999999999730679	WITHOUT_CLASSIFICATION	2.693202625001227E-11	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode#insertSibling(org.eclipse.emf.codegen.merge.java.facade.JNode, org.eclipse.emf.codegen.merge.java.facade.JNode, boolean)   */	WITHOUT_CLASSIFICATION	0.999999999999571	WITHOUT_CLASSIFICATION	4.2904247484552495E-13	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode#remove(org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode)   */	WITHOUT_CLASSIFICATION	0.9999999998799063	WITHOUT_CLASSIFICATION	1.2009368419140352E-10	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode#insertSibling(org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode, org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode, boolean)   */	WITHOUT_CLASSIFICATION	0.9999999999995658	WITHOUT_CLASSIFICATION	4.3424135393031965E-13	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode#addChild(org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode)   */	WITHOUT_CLASSIFICATION	0.9999999999727416	WITHOUT_CLASSIFICATION	2.7258372372337357E-11	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.AbstractJNode#getChildren()   */	WITHOUT_CLASSIFICATION	0.9999999999775206	WITHOUT_CLASSIFICATION	2.2479364255489192E-11	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.FacadeHelper#createCompilationUnit(java.lang.String, java.lang.String)   */	WITHOUT_CLASSIFICATION	0.9999999999953799	WITHOUT_CLASSIFICATION	4.620157641635729E-12	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.FacadeHelper#getContext(org.eclipse.emf.codegen.merge.java.facade.JNode)   */	WITHOUT_CLASSIFICATION	0.9999999999353908	WITHOUT_CLASSIFICATION	6.460922462139843E-11	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.FacadeHelper#doConvertToNode(java.lang.Object)   */	WITHOUT_CLASSIFICATION	0.999999999987266	WITHOUT_CLASSIFICATION	1.2734054217299194E-11	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.FacadeHelper#addChild(org.eclipse.emf.codegen.merge.java.facade.JNode, org.eclipse.emf.codegen.merge.java.facade.JNode)   */	WITHOUT_CLASSIFICATION	0.9999999999856467	WITHOUT_CLASSIFICATION	1.4353377881835274E-11	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.FacadeHelper#insertSibling(org.eclipse.emf.codegen.merge.java.facade.JNode, org.eclipse.emf.codegen.merge.java.facade.JNode, boolean)   */	WITHOUT_CLASSIFICATION	0.9999999999994826	WITHOUT_CLASSIFICATION	5.174111504013609E-13	DEFECT
// append [] if it is variable arity parameter (@see JLS3 8.4.1, http://java.sun.com/docs/books/jls/third_edition/html/classes.html#300870)	WITHOUT_CLASSIFICATION	0.999996528301262	WITHOUT_CLASSIFICATION	3.4716987381299976E-6	DEFECT
// append [] if it is variable arity parameter (@see JLS3 8.4.1, http://java.sun.com/docs/books/jls/third_edition/html/classes.html#300870)	WITHOUT_CLASSIFICATION	0.999996528301262	WITHOUT_CLASSIFICATION	3.4716987381299976E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.AbstractJNode#computeQualifiedName()   */	WITHOUT_CLASSIFICATION	0.9999999999994316	WITHOUT_CLASSIFICATION	5.685357174437476E-13	DEFECT
/* (non-Javadoc)   * @see org.eclipse.ui.IWorkbenchWindowActionDelegate#init(org.eclipse.ui.IWorkbenchWindow)   */	WITHOUT_CLASSIFICATION	0.9999999999910735	WITHOUT_CLASSIFICATION	8.926474078879465E-12	DEFECT
/* (non-Javadoc)   * @see org.eclipse.ui.IActionDelegate#selectionChanged(org.eclipse.jface.action.IAction, org.eclipse.jface.viewers.ISelection)   */	WITHOUT_CLASSIFICATION	0.9999999999998399	WITHOUT_CLASSIFICATION	1.600785365602939E-13	DEFECT
/* (non-Javadoc)   * @see org.eclipse.ui.IWorkbenchWindowActionDelegate#dispose()   */	WITHOUT_CLASSIFICATION	0.9999999999815673	WITHOUT_CLASSIFICATION	1.8432640814142366E-11	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.jface.window.Window#close()   */	WITHOUT_CLASSIFICATION	0.9999999999850491	WITHOUT_CLASSIFICATION	1.495089607111707E-11	DEFECT
/** * <!-- begin-user-doc --> * The <b>Switch</b> for the model's inheritance hierarchy. * It supports the call {@link #doSwitch(EObject) doSwitch(object)} * to invoke the <code>caseXXX</code> method for each class of the model, * starting with the actual class of the object * and proceeding up the inheritance hierarchy * until a non-null result is returned, * which is the result of the switch. * <!-- end-user-doc --> * @see org.eclipse.emf.ecore.change.ChangePackage * @generated */	WITHOUT_CLASSIFICATION	0.999999998159787	WITHOUT_CLASSIFICATION	1.8402128732504614E-9	DEFECT
/** * <!-- begin-user-doc --> * The <b>Adapter Factory</b> for the model. * It provides an adapter <code>createXXX</code> method for each class of the model. * <!-- end-user-doc --> * @see org.eclipse.emf.ecore.change.ChangePackage * @generated */	WITHOUT_CLASSIFICATION	0.9999999920241903	WITHOUT_CLASSIFICATION	7.97580975564299E-9	DEFECT
/*    * @see org.eclipse.emf.ecore.EObject#eIsProxy()   */	WITHOUT_CLASSIFICATION	0.9999999550726797	WITHOUT_CLASSIFICATION	4.4927320399038755E-8	DEFECT
/*    * @see org.eclipse.emf.ecore.InternalEObject#eSetProxyURI(org.eclipse.emf.common.util.URI)   */	WITHOUT_CLASSIFICATION	0.9999999944136756	WITHOUT_CLASSIFICATION	5.5863244535854354E-9	DEFECT
/** * <!-- begin-user-doc --> * The <b>Switch</b> for the model's inheritance hierarchy. * It supports the call {@link #doSwitch(EObject) doSwitch(object)}  * to invoke the <code>caseXXX</code> method for each class of the model, * starting with the actual class of the object  * and proceeding up the inheritance hierarchy * until a non-null result is returned,  * which is the result of the switch. * <!-- end-user-doc --> * @see org.eclipse.emf.ecore.EcorePackage * @generated */	WITHOUT_CLASSIFICATION	0.9999999851156789	WITHOUT_CLASSIFICATION	1.4884321078574705E-8	DEFECT
/** * <!-- begin-user-doc --> * The <b>Adapter Factory</b> for the model. * It provides an adapter <code>createXXX</code> method for each class of the model. * <!-- end-user-doc --> * @see org.eclipse.emf.ecore.EcorePackage * @generated */	WITHOUT_CLASSIFICATION	0.9999999347634242	WITHOUT_CLASSIFICATION	6.523657586255128E-8	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.XMLLoad#load(org.eclipse.emf.ecore.xmi.XMLResource, org.w3c.dom.Node, java.util.Map)   */	WITHOUT_CLASSIFICATION	0.9999999999601868	WITHOUT_CLASSIFICATION	3.981307245043353E-11	DEFECT
/** * <!-- begin-user-doc --> * The <b>Adapter Factory</b> for the model. * It provides an adapter <code>createXXX</code> method for each class of the model. * <!-- end-user-doc --> * @see org.eclipse.emf.edit.tree.TreePackage * @generated */	WITHOUT_CLASSIFICATION	0.9999998560767562	WITHOUT_CLASSIFICATION	1.4392324384563277E-7	DEFECT
/** * <!-- begin-user-doc --> * The <b>Switch</b> for the model's inheritance hierarchy. * It supports the call {@link #doSwitch(EObject) doSwitch(object)}  * to invoke the <code>caseXXX</code> method for each class of the model, * starting with the actual class of the object  * and proceeding up the inheritance hierarchy * until a non-null result is returned,  * which is the result of the switch. * <!-- end-user-doc --> * @see org.eclipse.emf.edit.tree.TreePackage * @generated */	WITHOUT_CLASSIFICATION	0.9999999874864363	WITHOUT_CLASSIFICATION	1.2513563851738818E-8	DEFECT
/*     * (non-Javadoc)     *      * @see org.eclipse.jface.dialogs.Dialog#createButtonsForButtonBar(org.eclipse.swt.widgets.Composite)     */	WITHOUT_CLASSIFICATION	0.9999999999953333	WITHOUT_CLASSIFICATION	4.666687036202022E-12	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.ui.IActionDelegate#run(org.eclipse.jface.action.IAction)   */	WITHOUT_CLASSIFICATION	0.9999999999955598	WITHOUT_CLASSIFICATION	4.440160390376161E-12	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.ui.IActionDelegate#selectionChanged(org.eclipse.jface.action.IAction,   *      org.eclipse.jface.viewers.ISelection)   */	WITHOUT_CLASSIFICATION	0.9999999999999462	WITHOUT_CLASSIFICATION	5.38836548423323E-14	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.mapping.MappingRoot#canCreateMapping(java.util.Collection, java.util.Collection, org.eclipse.emf.mapping.Mapping)   */	WITHOUT_CLASSIFICATION	0.999999999983211	WITHOUT_CLASSIFICATION	1.6788908420750618E-11	DEFECT
/** * <!-- begin-user-doc --> * The <b>Adapter Factory</b> for the model. * It provides an adapter <code>createXXX</code> method for each class of the model. * <!-- end-user-doc --> * @see org.eclipse.emf.mapping.ecore2ecore.Ecore2EcorePackage * @generated */	WITHOUT_CLASSIFICATION	0.99999954607463	WITHOUT_CLASSIFICATION	4.539253699142229E-7	DEFECT
/** * <!-- begin-user-doc --> * The <b>Switch</b> for the model's inheritance hierarchy. * It supports the call {@link #doSwitch(EObject) doSwitch(object)} * to invoke the <code>caseXXX</code> method for each class of the model, * starting with the actual class of the object * and proceeding up the inheritance hierarchy * until a non-null result is returned, * which is the result of the switch. * <!-- end-user-doc --> * @see org.eclipse.emf.mapping.ecore2ecore.Ecore2EcorePackage * @generated */	WITHOUT_CLASSIFICATION	0.9999999007825693	WITHOUT_CLASSIFICATION	9.921743079850244E-8	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.ui.IActionDelegate#selectionChanged(org.eclipse.jface.action.IAction,   *      org.eclipse.jface.viewers.ISelection)   */	WITHOUT_CLASSIFICATION	0.9999999999999462	WITHOUT_CLASSIFICATION	5.38836548423323E-14	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.XMLResource.XMLMap#add(org.eclipse.emf.ecore.ENamedElement, org.eclipse.emf.ecore.xmi.XMLResource.XMLInfo)   */	WITHOUT_CLASSIFICATION	0.9999999997428789	WITHOUT_CLASSIFICATION	2.571211375214758E-10	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.XMLResource.XMLMap#getClassifier(java.lang.String, java.lang.String)   */	WITHOUT_CLASSIFICATION	0.9999999999725729	WITHOUT_CLASSIFICATION	2.742706922097044E-11	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.XMLResource.XMLMap#getFeature(org.eclipse.emf.ecore.EClass, java.lang.String, java.lang.String)   */	WITHOUT_CLASSIFICATION	0.9999999999548327	WITHOUT_CLASSIFICATION	4.516730248306878E-11	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.XMLResource.XMLMap#getFeatures(org.eclipse.emf.ecore.EClass)   */	WITHOUT_CLASSIFICATION	0.9999999997345936	WITHOUT_CLASSIFICATION	2.6540628645039587E-10	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.XMLResource.XMLMap#getInfo(org.eclipse.emf.ecore.ENamedElement)   */	WITHOUT_CLASSIFICATION	0.9999999995670182	WITHOUT_CLASSIFICATION	4.3298186049569853E-10	DEFECT
//	WITHOUT_CLASSIFICATION	0.999986168788491	WITHOUT_CLASSIFICATION	1.3831211508944887E-5	DEFECT
//	WITHOUT_CLASSIFICATION	0.999986168788491	WITHOUT_CLASSIFICATION	1.3831211508944887E-5	DEFECT
//	WITHOUT_CLASSIFICATION	0.999986168788491	WITHOUT_CLASSIFICATION	1.3831211508944887E-5	DEFECT
//	WITHOUT_CLASSIFICATION	0.999986168788491	WITHOUT_CLASSIFICATION	1.3831211508944887E-5	DEFECT
//	WITHOUT_CLASSIFICATION	0.999986168788491	WITHOUT_CLASSIFICATION	1.3831211508944887E-5	DEFECT
//	WITHOUT_CLASSIFICATION	0.999986168788491	WITHOUT_CLASSIFICATION	1.3831211508944887E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999997905852969	WITHOUT_CLASSIFICATION	2.0941470312362812E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999997905852969	WITHOUT_CLASSIFICATION	2.0941470312362812E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999997905852969	WITHOUT_CLASSIFICATION	2.0941470312362812E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999997905852969	WITHOUT_CLASSIFICATION	2.0941470312362812E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999997905852969	WITHOUT_CLASSIFICATION	2.0941470312362812E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999997905852969	WITHOUT_CLASSIFICATION	2.0941470312362812E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999997905852969	WITHOUT_CLASSIFICATION	2.0941470312362812E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999997905852969	WITHOUT_CLASSIFICATION	2.0941470312362812E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999997905852969	WITHOUT_CLASSIFICATION	2.0941470312362812E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999997905852969	WITHOUT_CLASSIFICATION	2.0941470312362812E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999997905852969	WITHOUT_CLASSIFICATION	2.0941470312362812E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999997905852969	WITHOUT_CLASSIFICATION	2.0941470312362812E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999997905852969	WITHOUT_CLASSIFICATION	2.0941470312362812E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999997905852969	WITHOUT_CLASSIFICATION	2.0941470312362812E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999997905852969	WITHOUT_CLASSIFICATION	2.0941470312362812E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999997905852969	WITHOUT_CLASSIFICATION	2.0941470312362812E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999997905852969	WITHOUT_CLASSIFICATION	2.0941470312362812E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999997905852969	WITHOUT_CLASSIFICATION	2.0941470312362812E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999997905852969	WITHOUT_CLASSIFICATION	2.0941470312362812E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999997905852969	WITHOUT_CLASSIFICATION	2.0941470312362812E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999997905852969	WITHOUT_CLASSIFICATION	2.0941470312362812E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999997905852969	WITHOUT_CLASSIFICATION	2.0941470312362812E-7	DEFECT
// Attribute	WITHOUT_CLASSIFICATION	0.9999994802134785	WITHOUT_CLASSIFICATION	5.197865213781664E-7	DEFECT
// If the workbench part changes... //	WITHOUT_CLASSIFICATION	0.9999564472262088	WITHOUT_CLASSIFICATION	4.3552773791260165E-5	DEFECT
// Discard the old editing domain. //	WITHOUT_CLASSIFICATION	0.999998419049968	WITHOUT_CLASSIFICATION	1.580950031904834E-6	DEFECT
// Convert the selection to a collection of the selected objects. //	WITHOUT_CLASSIFICATION	0.9999999939530625	WITHOUT_CLASSIFICATION	6.046937605114047E-9	DEFECT
// This returns a name like employeeNumber formatted like 'Employee Number' // This returns the same as getCapName unless it starts with "is" in which case the "is" is stripped  // This returns the name to be used in accessor method names; it's the same as getCapName, unless this is the key or value of a map entry, for which "Typed" is prepended // This returns the name of the get array-based accessor method for the list feature. // This returns the name of the get accessor method for the feature, i.e., either "is" or "get" is prefixed to getAccessorName	WITHOUT_CLASSIFICATION	0.9999990618691297	WITHOUT_CLASSIFICATION	9.381308702688131E-7	DEFECT
// This is for backwards compatibility, since the constructor may have been overridden before it was expected // to set actionDelegate. //	WITHOUT_CLASSIFICATION	0.9999999993690779	WITHOUT_CLASSIFICATION	6.309220721976937E-10	DEFECT
// this returns either "EAttribute" or "EReference"	WITHOUT_CLASSIFICATION	0.9999986662977092	WITHOUT_CLASSIFICATION	1.3337022908118303E-6	DEFECT
// this guard is for extra security, but should not be necessary	WITHOUT_CLASSIFICATION	0.996825264579839	WITHOUT_CLASSIFICATION	0.003174735420160923	DEFECT
// // EMF.Edit generation //	WITHOUT_CLASSIFICATION	0.9999903094368354	WITHOUT_CLASSIFICATION	9.690563164566312E-6	DEFECT
// We can create the RemoveCommand for an uncontrol, but we must defer creating an AddCommand // to control until run(), when the user specifies a target resource. //	WITHOUT_CLASSIFICATION	0.9999999765569835	WITHOUT_CLASSIFICATION	2.3443016477891405E-8	DEFECT
//  Remove any non-Java dependencies from being added. //	WITHOUT_CLASSIFICATION	0.9999811085456207	WITHOUT_CLASSIFICATION	1.8891454379267236E-5	DEFECT
// Get extra icon and bounds for first column of ExtendedTableTreeItem. //	WITHOUT_CLASSIFICATION	0.9999999959046537	WITHOUT_CLASSIFICATION	4.0953462935997975E-9	DEFECT
/*   * Computes the default path for the given GenModel. This was previously the implementation of getTemplatePath().   */	WITHOUT_CLASSIFICATION	0.9999997761851595	WITHOUT_CLASSIFICATION	2.2381484054736987E-7	DEFECT
// Clean up the command if there is one.  If we need it again in drop, // we'll recreate it from dragAndDropCommandInformation. //	WITHOUT_CLASSIFICATION	0.9999999889131116	WITHOUT_CLASSIFICATION	1.108688833320834E-8	DEFECT
// Compute a map of resource location URIs to logical namespace URIs // so that cross references will be resolved via package registry when deserialized.  //	WITHOUT_CLASSIFICATION	0.9999989644066836	WITHOUT_CLASSIFICATION	1.035593316433198E-6	DEFECT
// We'll need to keep track of the information we use to create the // command, so that we can recreate it in drop.	WITHOUT_CLASSIFICATION	0.9999997399083216	WITHOUT_CLASSIFICATION	2.6009167842084805E-7	DEFECT
// Do allow an existing MANIFEST.MF to be overwritten, since it may have been created as part of an empty EMF project. // Use the existence of a plugin.xml as a guard against overwriting in a project that has already been generated. //	WITHOUT_CLASSIFICATION	0.9999999466132733	WITHOUT_CLASSIFICATION	5.338672669219684E-8	DEFECT
// Do allow an existing MANIFEST.MF to be overwritten, since it may have been created as part of an empty EMF project. // Use the existence of a plugin.xml as a guard against overwriting in a project that has already been generated. //	WITHOUT_CLASSIFICATION	0.9999999466132733	WITHOUT_CLASSIFICATION	5.338672669219684E-8	DEFECT
// Do allow an existing MANIFEST.MF to be overwritten, since it may have been created as part of an empty EMF project. // Use the existence of a plugin.xml as a guard against overwriting in a project that has already been generated. //	WITHOUT_CLASSIFICATION	0.9999999466132733	WITHOUT_CLASSIFICATION	5.338672669219684E-8	DEFECT
/*     * (non-Javadoc) Method declared on Dialog.     */	WITHOUT_CLASSIFICATION	0.9999999700901319	WITHOUT_CLASSIFICATION	2.990986814878482E-8	DEFECT
// Do allow an existing build.properties to be overwritten, since it may have been created as part of an empty EMF project. // Use the existence of a plugin.xml as a guard against overwriting in a project that has already been generated. //	WITHOUT_CLASSIFICATION	0.9999997495111235	WITHOUT_CLASSIFICATION	2.504888766342679E-7	DEFECT
/*        text = new Text(composite, SWT.SINGLE | SWT.BORDER);        text.setLayoutData(new GridData(GridData.GRAB_HORIZONTAL                | GridData.HORIZONTAL_ALIGN_FILL));*/	WITHOUT_CLASSIFICATION	0.9999999341887226	WITHOUT_CLASSIFICATION	6.581127753166617E-8	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.9999999772821485	WITHOUT_CLASSIFICATION	2.2717851443933376E-8	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.9999999772821485	WITHOUT_CLASSIFICATION	2.2717851443933376E-8	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.9999999772821485	WITHOUT_CLASSIFICATION	2.2717851443933376E-8	DEFECT
// CellEditor.setValue() calls isCorrect() to validate the value that is about to be set. We are doing conversion // between the value and a corresponding string, and we would usually like to validate the string. Because // setValue() is final, we cannot do that conversion there, so we need to record what we're trying to validate and // work around the problem in isCorrect(). // 	WITHOUT_CLASSIFICATION	0.9852461999479819	WITHOUT_CLASSIFICATION	0.014753800052018226	DEFECT
// Initialize simple dependencies	WITHOUT_CLASSIFICATION	0.9999998628457445	WITHOUT_CLASSIFICATION	1.3715425542933645E-7	DEFECT
// The referencedEPackages list is used to track the packages for // which is necessary to create the stub GenModel.  So if the ePackage // is referenced by an existing GenPackage, it doesn't need to be added to // referencedEPackages.	WITHOUT_CLASSIFICATION	0.9999999999554767	WITHOUT_CLASSIFICATION	4.4523190483756146E-11	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.9999995366025851	WITHOUT_CLASSIFICATION	4.6339741494588786E-7	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.9999995366025851	WITHOUT_CLASSIFICATION	4.6339741494588786E-7	DEFECT
// Determine the required plugins. //	WITHOUT_CLASSIFICATION	0.9999777170090329	WITHOUT_CLASSIFICATION	2.228299096713793E-5	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.999999830336471	WITHOUT_CLASSIFICATION	1.6966352898701455E-7	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.999999830336471	WITHOUT_CLASSIFICATION	1.6966352898701455E-7	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.999999830336471	WITHOUT_CLASSIFICATION	1.6966352898701455E-7	DEFECT
// Include each required plugin of the starting project and the exported ones of all the required projects. //	WITHOUT_CLASSIFICATION	0.9997751142991961	WITHOUT_CLASSIFICATION	2.2488570080405392E-4	DEFECT
// Register package validator	WITHOUT_CLASSIFICATION	0.9999998201482084	WITHOUT_CLASSIFICATION	1.7985179165065879E-7	DEFECT
// Determine the inverse map from plugin IDs to their registered GenModel locations. //	WITHOUT_CLASSIFICATION	0.9999999685801052	WITHOUT_CLASSIFICATION	3.1419894692465255E-8	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$	WITHOUT_CLASSIFICATION	0.9999877952066473	WITHOUT_CLASSIFICATION	1.2204793352697597E-5	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$	WITHOUT_CLASSIFICATION	0.9999877952066473	WITHOUT_CLASSIFICATION	1.2204793352697597E-5	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.99998644406869	WITHOUT_CLASSIFICATION	1.3555931310101503E-5	DEFECT
// Mark meta-data to indicate it can't be changed	WITHOUT_CLASSIFICATION	0.99999860427837	WITHOUT_CLASSIFICATION	1.3957216301158224E-6	DEFECT
// Mark meta-data to indicate it can't be changed	WITHOUT_CLASSIFICATION	0.99999860427837	WITHOUT_CLASSIFICATION	1.3957216301158224E-6	DEFECT
// Walk the fields. //	WITHOUT_CLASSIFICATION	0.9999963726256921	WITHOUT_CLASSIFICATION	3.6273743078632857E-6	DEFECT
// Obtain other dependent packages	WITHOUT_CLASSIFICATION	0.9999999973950333	WITHOUT_CLASSIFICATION	2.6049666313332696E-9	DEFECT
// Obtain other dependent packages	WITHOUT_CLASSIFICATION	0.9999999973950333	WITHOUT_CLASSIFICATION	2.6049666313332696E-9	DEFECT
// Filter out explicit EObject from super types, except in the Ecore package itself, or if it appears in the @model superTypes. //	WITHOUT_CLASSIFICATION	0.9996948301522416	WITHOUT_CLASSIFICATION	3.05169847758434E-4	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.9999993290912625	WITHOUT_CLASSIFICATION	6.709087374268461E-7	DEFECT
// We will create an EAttribute, EReference, or an EOperation. //	WITHOUT_CLASSIFICATION	0.9999983034566275	WITHOUT_CLASSIFICATION	1.696543372484745E-6	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.9999978849235671	WITHOUT_CLASSIFICATION	2.1150764329847075E-6	DEFECT
// Check whether there are parameters; the special attribute and reference rules only apply for the case of no arguments. //	WITHOUT_CLASSIFICATION	0.9999999735020972	WITHOUT_CLASSIFICATION	2.6497902820917762E-8	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$	WITHOUT_CLASSIFICATION	0.9999877952066473	WITHOUT_CLASSIFICATION	1.2204793352697597E-5	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9999920843219914	WITHOUT_CLASSIFICATION	7.915678008665397E-6	DEFECT
// Initialize classes and features; add operations and parameters	WITHOUT_CLASSIFICATION	0.999997918294812	WITHOUT_CLASSIFICATION	2.0817051879083706E-6	DEFECT
// Initialize classes and features; add operations and parameters	WITHOUT_CLASSIFICATION	0.999997918294812	WITHOUT_CLASSIFICATION	2.0817051879083706E-6	DEFECT
// Initialize classes and features; add operations and parameters	WITHOUT_CLASSIFICATION	0.999997918294812	WITHOUT_CLASSIFICATION	2.0817051879083706E-6	DEFECT
// The method is not a structural feature, so it's modeled as an operation. //	WITHOUT_CLASSIFICATION	0.999999967535841	WITHOUT_CLASSIFICATION	3.2464158990241585E-8	DEFECT
// Initialize classes and features; add operations and parameters //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9999975752969654	WITHOUT_CLASSIFICATION	2.424703034534878E-6	DEFECT
// Create annotations // http://www.eclipse.org/emf/2002/Ecore	WITHOUT_CLASSIFICATION	0.9999992627986178	WITHOUT_CLASSIFICATION	7.372013821196981E-7	DEFECT
// Don't overwrite exising file	WITHOUT_CLASSIFICATION	0.9999997702399593	WITHOUT_CLASSIFICATION	2.297600407401389E-7	DEFECT
// Don't overwrite exising file	WITHOUT_CLASSIFICATION	0.9999997702399593	WITHOUT_CLASSIFICATION	2.297600407401389E-7	DEFECT
// Look through the imports of the containing compilation unit. //	WITHOUT_CLASSIFICATION	0.9999995168784617	WITHOUT_CLASSIFICATION	4.831215383641444E-7	DEFECT
// Use an alternate if we can't write to this one. //	WITHOUT_CLASSIFICATION	0.9999699387130936	WITHOUT_CLASSIFICATION	3.0061286906332624E-5	DEFECT
// Map to EClass, EEnum or EInerface. // Note that we do not map structure and primitive type class. //	WITHOUT_CLASSIFICATION	0.9999999876610086	WITHOUT_CLASSIFICATION	1.233899145769515E-8	DEFECT
//purpose: using charset from 'targetFile' to encode in-memory  //         'newContents' object into bytes //modifer: Wu Zhi Qiang //date:    Aug 25, 2004 //action:  first get the charset from 'targetFile', then use it  //         to encode the 'newContents' object into bytes	WITHOUT_CLASSIFICATION	0.9999986558573477	WITHOUT_CLASSIFICATION	1.3441426523214281E-6	DEFECT
// Map to an EClass. //	WITHOUT_CLASSIFICATION	0.9999998928652744	WITHOUT_CLASSIFICATION	1.0713472561115961E-7	DEFECT
// Map to an EClass. //	WITHOUT_CLASSIFICATION	0.9999998928652744	WITHOUT_CLASSIFICATION	1.0713472561115961E-7	DEFECT
//FB TBD different objects for ecore model!	WITHOUT_CLASSIFICATION	0.9997636120529548	WITHOUT_CLASSIFICATION	2.363879470453277E-4	DEFECT
//FB TBD different objects for ecore model!	WITHOUT_CLASSIFICATION	0.9997636120529548	WITHOUT_CLASSIFICATION	2.363879470453277E-4	DEFECT
// Map to an eClass. //	WITHOUT_CLASSIFICATION	0.9999998577493732	WITHOUT_CLASSIFICATION	1.422506269629702E-7	DEFECT
// generateColor();	WITHOUT_CLASSIFICATION	0.9999990831823814	WITHOUT_CLASSIFICATION	9.168176186913331E-7	DEFECT
// This handles Rose 2003 format, e.g., // Logical View::JavaException[40722F9D0294] //	WITHOUT_CLASSIFICATION	0.9999992569980468	WITHOUT_CLASSIFICATION	7.430019531719944E-7	DEFECT
// Strip off the array indices if any. //	WITHOUT_CLASSIFICATION	0.9999982042866042	WITHOUT_CLASSIFICATION	1.7957133958368328E-6	DEFECT
// process eStructuralFeatures for association end(Role) //	WITHOUT_CLASSIFICATION	0.999999850107041	WITHOUT_CLASSIFICATION	1.4989295902279055E-7	DEFECT
// If we find a match, make this generic type be for this type parameter, // and then stop the whole process.	WITHOUT_CLASSIFICATION	0.9999979049589729	WITHOUT_CLASSIFICATION	2.09504102705478E-6	DEFECT
// If we find a match, make this generic type be for this type parameter, // and then stop the whole process.	WITHOUT_CLASSIFICATION	0.9999979049589729	WITHOUT_CLASSIFICATION	2.09504102705478E-6	DEFECT
// ...or if it's a wildcard or group feature.  Also, make it FeatureMap-typed. //	WITHOUT_CLASSIFICATION	0.9997407649090182	WITHOUT_CLASSIFICATION	2.592350909818258E-4	DEFECT
// We don't want keyType and valueType on a map type specification in a package interface. // But, we also use qualified model information when defining a feature with suppressed get accessor // on the interface, and we do want to include these properties in that case. //	WITHOUT_CLASSIFICATION	0.9999999996890137	WITHOUT_CLASSIFICATION	3.109863575596138E-10	DEFECT
// starting traverse file and build unit tree and table info	WITHOUT_CLASSIFICATION	0.9999999901656705	WITHOUT_CLASSIFICATION	9.834329418342722E-9	DEFECT
/*  public String getImportedInstanceClassName()  {    return getGenModel().getImportedName("org.eclipse.emf.ecore.EEnumLiteral");   }*/	WITHOUT_CLASSIFICATION	0.9999999976019798	WITHOUT_CLASSIFICATION	2.398020275832096E-9	DEFECT
// Process the children of the UnitTreeNode recursively. //	WITHOUT_CLASSIFICATION	0.9999998109723898	WITHOUT_CLASSIFICATION	1.8902761026488235E-7	DEFECT
// If the flag will straddle two fields, bump it to the next one. //	WITHOUT_CLASSIFICATION	0.9999991617220052	WITHOUT_CLASSIFICATION	8.382779948287759E-7	DEFECT
//************************************************************************ //*    class RoseToken                                                   * //************************************************************************	WITHOUT_CLASSIFICATION	0.9982238247851493	WITHOUT_CLASSIFICATION	0.0017761752148507015	DEFECT
// If there is a provider base class from outside this class that has already been generated, get the create // child references from it. We'll check for any type-compatible classes introduced in this package. //	WITHOUT_CLASSIFICATION	0.9999999889126832	WITHOUT_CLASSIFICATION	1.108731696468935E-8	DEFECT
// This will deal with all the subcommands to modifying the root mapping tree. //	WITHOUT_CLASSIFICATION	0.9984111213228111	WITHOUT_CLASSIFICATION	0.0015888786771889526	DEFECT
// Like isStringType(), but still returns true even if multiplicity-many. //	WITHOUT_CLASSIFICATION	0.9999917791234225	WITHOUT_CLASSIFICATION	8.220876577574374E-6	DEFECT
// Create a command to do parentMapping.getNested().remove(mapping). // //subcommands.appendAndExecute(new RemoveCommand(domain, parentMapping, parentMapping.ePackageMapping().getMapping_Nested(), mapping));	WITHOUT_CLASSIFICATION	0.999997936044086	WITHOUT_CLASSIFICATION	2.063955913950919E-6	DEFECT
// EDate is far too often overridden to provide a different mapping, and therefor the default is somewhat obscure. // So, it's best to delegate to the factory. //	WITHOUT_CLASSIFICATION	0.9999999983282393	WITHOUT_CLASSIFICATION	1.6717607618663028E-9	DEFECT
// Find the appropriate parent mapping, which at the very least, should be the mapping root itself. //	WITHOUT_CLASSIFICATION	0.9960539262157261	WITHOUT_CLASSIFICATION	0.003946073784273951	DEFECT
// }	WITHOUT_CLASSIFICATION	0.9999968737632579	WITHOUT_CLASSIFICATION	3.1262367422214507E-6	DEFECT
// }	WITHOUT_CLASSIFICATION	0.9999968737632579	WITHOUT_CLASSIFICATION	3.1262367422214507E-6	DEFECT
// }	WITHOUT_CLASSIFICATION	0.9999968737632579	WITHOUT_CLASSIFICATION	3.1262367422214507E-6	DEFECT
// If the type isn't Object, we need to cast. If it's a primitive, we need to unbox. //	WITHOUT_CLASSIFICATION	0.9999950938972103	WITHOUT_CLASSIFICATION	4.906102789727938E-6	DEFECT
//(new AddCommand(domain, mapping, mapping.ePackageMapping().getMapping_Nested(), siblingsToReparent));	WITHOUT_CLASSIFICATION	0.9999988654437819	WITHOUT_CLASSIFICATION	1.1345562180937648E-6	DEFECT
// Suppress default constructor for non-instantiability.	WITHOUT_CLASSIFICATION	0.9999999944722782	WITHOUT_CLASSIFICATION	5.52772182327703E-9	DEFECT
// This is tricky and is done for each object here rather than once for the owner of the addCommnd. // We want to make sure the object is really part of the conceptual tree induced by the domain. //	WITHOUT_CLASSIFICATION	0.9999979962500167	WITHOUT_CLASSIFICATION	2.003749983290636E-6	DEFECT
// See java.lang.Class.getName() javadoc for explanation of array encoding.	WITHOUT_CLASSIFICATION	0.9999989821440667	WITHOUT_CLASSIFICATION	1.0178559333186412E-6	DEFECT
// We'll try adding a shallow copy of the clipboard contents, instead of a full copy. // Note: we can't just try adding the clipboard contents itself, because the copy may be a //       different type then what's on the clipboard (e.g. EJB Field -> RDB Column). //	WITHOUT_CLASSIFICATION	0.9999992492813204	WITHOUT_CLASSIFICATION	7.507186796610431E-7	DEFECT
// We'll try adding a shallow copy of the clipboard contents, instead of a full copy. // Note: we can't just try adding the clipboard contents itself, because the copy may be a //       different type then what's on the clipboard (e.g. EJB Field -> RDB Column). //	WITHOUT_CLASSIFICATION	0.9999992492813204	WITHOUT_CLASSIFICATION	7.507186796610431E-7	DEFECT
// We can't blindly cache the genModel, since we need to support moving the GenPackage to another container, // but the cast is expensive, so we'd like to do it no more than absolutely necessary. //	WITHOUT_CLASSIFICATION	0.9999998276661266	WITHOUT_CLASSIFICATION	1.7233387336413902E-7	DEFECT
//FB The following method is copied from com.ibm.etools.b2b.util.StringUtility //FB because the mapping framework cannot have a dependency on b2b. What we really //FB need to do is get methods like this moved to vabase so that everyone can //FB use them. // change all occurrences of oldPat to newPat	WITHOUT_CLASSIFICATION	0.9989683761569355	WITHOUT_CLASSIFICATION	0.001031623843064469	DEFECT
// Ignore this soft dependency when it's not satisfied.	WITHOUT_CLASSIFICATION	0.99999920786072	WITHOUT_CLASSIFICATION	7.921392799687895E-7	DEFECT
// If it's the selection viewer, then we want it to select the same selection as this selection. //	WITHOUT_CLASSIFICATION	0.9999968716998704	WITHOUT_CLASSIFICATION	3.1283001296442034E-6	DEFECT
// Set URIs of EPackage-containing resources: output resource to desired target URI, and others to package // namespace URIs (so cross-references will be resolved via package registry when deserialized).  //	WITHOUT_CLASSIFICATION	0.9999998279226389	WITHOUT_CLASSIFICATION	1.7207736115130798E-7	DEFECT
//MappingPackageImpl	WITHOUT_CLASSIFICATION	0.999979703984062	WITHOUT_CLASSIFICATION	2.0296015937978114E-5	DEFECT
// Iterate over the mappings in the tree. //	WITHOUT_CLASSIFICATION	0.9999826341832614	WITHOUT_CLASSIFICATION	1.736581673861208E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999915400640049	WITHOUT_CLASSIFICATION	8.459935995032677E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999915400640049	WITHOUT_CLASSIFICATION	8.459935995032677E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999915400640049	WITHOUT_CLASSIFICATION	8.459935995032677E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999915400640049	WITHOUT_CLASSIFICATION	8.459935995032677E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999915400640049	WITHOUT_CLASSIFICATION	8.459935995032677E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999915400640049	WITHOUT_CLASSIFICATION	8.459935995032677E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999915400640049	WITHOUT_CLASSIFICATION	8.459935995032677E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999915400640049	WITHOUT_CLASSIFICATION	8.459935995032677E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999915400640049	WITHOUT_CLASSIFICATION	8.459935995032677E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999915400640049	WITHOUT_CLASSIFICATION	8.459935995032677E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999915400640049	WITHOUT_CLASSIFICATION	8.459935995032677E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999915400640049	WITHOUT_CLASSIFICATION	8.459935995032677E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999915400640049	WITHOUT_CLASSIFICATION	8.459935995032677E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999915400640049	WITHOUT_CLASSIFICATION	8.459935995032677E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999915400640049	WITHOUT_CLASSIFICATION	8.459935995032677E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999915400640049	WITHOUT_CLASSIFICATION	8.459935995032677E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999915400640049	WITHOUT_CLASSIFICATION	8.459935995032677E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999915400640049	WITHOUT_CLASSIFICATION	8.459935995032677E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999915400640049	WITHOUT_CLASSIFICATION	8.459935995032677E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999915400640049	WITHOUT_CLASSIFICATION	8.459935995032677E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999915400640049	WITHOUT_CLASSIFICATION	8.459935995032677E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999915400640049	WITHOUT_CLASSIFICATION	8.459935995032677E-6	DEFECT
//   public String getExtendedItemProviderClassName() //   { //     return getPrefixedName("ItemProviderAdapter"); //   }	WITHOUT_CLASSIFICATION	0.9999998329723933	WITHOUT_CLASSIFICATION	1.6702760674331454E-7	DEFECT
// Check to make sure that every object in the collection has an ancestor that is contained in this mapping. //	WITHOUT_CLASSIFICATION	0.999997576226103	WITHOUT_CLASSIFICATION	2.423773897009267E-6	DEFECT
// It belongs to this package if the delegate feature is from this package, // or the class is from this package and either there is no delegate feature or the delegate feature is from some used package. //	WITHOUT_CLASSIFICATION	0.999999996986455	WITHOUT_CLASSIFICATION	3.0135449558222756E-9	DEFECT
// Ensure that this is a touch notification so to resource aren't marked as dirty. //	WITHOUT_CLASSIFICATION	0.9999823986545275	WITHOUT_CLASSIFICATION	1.7601345472477645E-5	DEFECT
// Force the project to be setup properly. //	WITHOUT_CLASSIFICATION	0.9999981922733506	WITHOUT_CLASSIFICATION	1.8077266493065428E-6	DEFECT
/* EATM getDecoratedAdapterFactory().*/	WITHOUT_CLASSIFICATION	0.9999928611411714	WITHOUT_CLASSIFICATION	7.1388588286203615E-6	DEFECT
// This case happens when the IDE is brought up with the editor already open //	WITHOUT_CLASSIFICATION	0.7854073358572186	WITHOUT_CLASSIFICATION	0.21459266414278158	DEFECT
// We need to filer out duplicates in the unlikely event that we have two // features with the same class-qualified name. We'll only generate one property // string in that case and let the user add the second one manually, if necessary. //	WITHOUT_CLASSIFICATION	0.9999980223703441	WITHOUT_CLASSIFICATION	1.9776296558957056E-6	DEFECT
//MappingPackage ePackage = ((ComplexTypeConverter)msg.getNotifier()).ePackageMapping();	WITHOUT_CLASSIFICATION	0.9999996358546972	WITHOUT_CLASSIFICATION	3.641453027442833E-7	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.999999600561112	WITHOUT_CLASSIFICATION	3.994388879112048E-7	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.999999600561112	WITHOUT_CLASSIFICATION	3.994388879112048E-7	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.999999600561112	WITHOUT_CLASSIFICATION	3.994388879112048E-7	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.999999600561112	WITHOUT_CLASSIFICATION	3.994388879112048E-7	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.999999600561112	WITHOUT_CLASSIFICATION	3.994388879112048E-7	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.999999600561112	WITHOUT_CLASSIFICATION	3.994388879112048E-7	DEFECT
// while	WITHOUT_CLASSIFICATION	0.9999994361461138	WITHOUT_CLASSIFICATION	5.638538863266129E-7	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.999999600561112	WITHOUT_CLASSIFICATION	3.994388879112048E-7	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.999999600561112	WITHOUT_CLASSIFICATION	3.994388879112048E-7	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.999999600561112	WITHOUT_CLASSIFICATION	3.994388879112048E-7	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.999999600561112	WITHOUT_CLASSIFICATION	3.994388879112048E-7	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.999999600561112	WITHOUT_CLASSIFICATION	3.994388879112048E-7	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.999999600561112	WITHOUT_CLASSIFICATION	3.994388879112048E-7	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.999999600561112	WITHOUT_CLASSIFICATION	3.994388879112048E-7	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.999999600561112	WITHOUT_CLASSIFICATION	3.994388879112048E-7	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.999999600561112	WITHOUT_CLASSIFICATION	3.994388879112048E-7	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.999999600561112	WITHOUT_CLASSIFICATION	3.994388879112048E-7	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.999999600561112	WITHOUT_CLASSIFICATION	3.994388879112048E-7	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.999999600561112	WITHOUT_CLASSIFICATION	3.994388879112048E-7	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.999999600561112	WITHOUT_CLASSIFICATION	3.994388879112048E-7	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.999999600561112	WITHOUT_CLASSIFICATION	3.994388879112048E-7	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.999999600561112	WITHOUT_CLASSIFICATION	3.994388879112048E-7	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.999999600561112	WITHOUT_CLASSIFICATION	3.994388879112048E-7	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.999999600561112	WITHOUT_CLASSIFICATION	3.994388879112048E-7	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.999999600561112	WITHOUT_CLASSIFICATION	3.994388879112048E-7	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.999999600561112	WITHOUT_CLASSIFICATION	3.994388879112048E-7	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.999999600561112	WITHOUT_CLASSIFICATION	3.994388879112048E-7	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.999999600561112	WITHOUT_CLASSIFICATION	3.994388879112048E-7	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.999999600561112	WITHOUT_CLASSIFICATION	3.994388879112048E-7	DEFECT
// Empty	WITHOUT_CLASSIFICATION	0.9999908557944834	WITHOUT_CLASSIFICATION	9.144205516559578E-6	DEFECT
// Empty	WITHOUT_CLASSIFICATION	0.9999908557944834	WITHOUT_CLASSIFICATION	9.144205516559578E-6	DEFECT
// Empty	WITHOUT_CLASSIFICATION	0.9999908557944834	WITHOUT_CLASSIFICATION	9.144205516559578E-6	DEFECT
// Empty	WITHOUT_CLASSIFICATION	0.9999908557944834	WITHOUT_CLASSIFICATION	9.144205516559578E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.999999826515885	WITHOUT_CLASSIFICATION	1.7348411491497847E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.999999826515885	WITHOUT_CLASSIFICATION	1.7348411491497847E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.999999826515885	WITHOUT_CLASSIFICATION	1.7348411491497847E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.999999826515885	WITHOUT_CLASSIFICATION	1.7348411491497847E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.999999826515885	WITHOUT_CLASSIFICATION	1.7348411491497847E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.999999826515885	WITHOUT_CLASSIFICATION	1.7348411491497847E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.999999826515885	WITHOUT_CLASSIFICATION	1.7348411491497847E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.999999826515885	WITHOUT_CLASSIFICATION	1.7348411491497847E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.999999826515885	WITHOUT_CLASSIFICATION	1.7348411491497847E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.999999826515885	WITHOUT_CLASSIFICATION	1.7348411491497847E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.999999826515885	WITHOUT_CLASSIFICATION	1.7348411491497847E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.999999826515885	WITHOUT_CLASSIFICATION	1.7348411491497847E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.999999826515885	WITHOUT_CLASSIFICATION	1.7348411491497847E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.999999826515885	WITHOUT_CLASSIFICATION	1.7348411491497847E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.999999826515885	WITHOUT_CLASSIFICATION	1.7348411491497847E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.999999826515885	WITHOUT_CLASSIFICATION	1.7348411491497847E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.999999826515885	WITHOUT_CLASSIFICATION	1.7348411491497847E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.999999826515885	WITHOUT_CLASSIFICATION	1.7348411491497847E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.999999826515885	WITHOUT_CLASSIFICATION	1.7348411491497847E-7	DEFECT
// the first hex character if a character needs to be escaped	WITHOUT_CLASSIFICATION	0.9999998708155989	WITHOUT_CLASSIFICATION	1.291844011565346E-7	DEFECT
// the first hex character if a character needs to be escaped	WITHOUT_CLASSIFICATION	0.9999998708155989	WITHOUT_CLASSIFICATION	1.291844011565346E-7	DEFECT
// the second hex character if a character needs to be escaped	WITHOUT_CLASSIFICATION	0.9999984766244236	WITHOUT_CLASSIFICATION	1.5233755764272136E-6	DEFECT
// initialize the above 3 arrays	WITHOUT_CLASSIFICATION	0.9999997269183989	WITHOUT_CLASSIFICATION	2.730816011514451E-7	DEFECT
// if it's not an ASCII character, break here, and use UTF-8 encoding	WITHOUT_CLASSIFICATION	0.999999905893251	WITHOUT_CLASSIFICATION	9.41067488818985E-8	DEFECT
// get UTF-8 bytes for the remaining sub-string	WITHOUT_CLASSIFICATION	0.9999999958664636	WITHOUT_CLASSIFICATION	4.133536329985219E-9	DEFECT
//MappingPackage ePackage = ((MappingRoot)object).ePackageMapping();	WITHOUT_CLASSIFICATION	0.9999976993204974	WITHOUT_CLASSIFICATION	2.300679502583597E-6	DEFECT
// Try to select the affected objects. //	WITHOUT_CLASSIFICATION	0.9999998986030357	WITHOUT_CLASSIFICATION	1.0139696431559008E-7	DEFECT
// this should never happen	WITHOUT_CLASSIFICATION	0.9999902427376153	WITHOUT_CLASSIFICATION	9.757262384747071E-6	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9999989903431339	WITHOUT_CLASSIFICATION	1.0096568660966294E-6	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9999989903431339	WITHOUT_CLASSIFICATION	1.0096568660966294E-6	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9999989903431339	WITHOUT_CLASSIFICATION	1.0096568660966294E-6	DEFECT
// && commandParameter instanceof MappingCommandParameter)	WITHOUT_CLASSIFICATION	0.9999994167519478	WITHOUT_CLASSIFICATION	5.832480522523543E-7	DEFECT
// Creates the model from the editor input //	WITHOUT_CLASSIFICATION	0.9999998676483121	WITHOUT_CLASSIFICATION	1.3235168798688526E-7	DEFECT
// Returning null here causes RemoveCommand.create(domain, mappedObjectItemProvider) to be delegated //  to MappedObjectItemProvider.createCommand() and there we return a command to remove mappedObject instead. // // return null;	WITHOUT_CLASSIFICATION	0.9998256018173977	WITHOUT_CLASSIFICATION	1.743981826023077E-4	DEFECT
// Only creates the other pages if there is something that can be edited //	WITHOUT_CLASSIFICATION	0.9999998685067744	WITHOUT_CLASSIFICATION	1.3149322558870412E-7	DEFECT
// Only creates the other pages if there is something that can be edited //	WITHOUT_CLASSIFICATION	0.9999998685067744	WITHOUT_CLASSIFICATION	1.3149322558870412E-7	DEFECT
//hgd::fireNotifyChanged(msg.getNotifier(), msg.getEventType(), msg.getFeature(), substituteOldValue, substituteNewValue, msg.getPosition());	WITHOUT_CLASSIFICATION	0.9999999979669683	WITHOUT_CLASSIFICATION	2.0330318499720174E-9	DEFECT
// The content outline is just a tree. //	WITHOUT_CLASSIFICATION	0.9999999499798639	WITHOUT_CLASSIFICATION	5.002013609169084E-8	DEFECT
// Set up the tree viewer. //	WITHOUT_CLASSIFICATION	0.9999993964656559	WITHOUT_CLASSIFICATION	6.035343441100287E-7	DEFECT
// Select the root object in the view. //	WITHOUT_CLASSIFICATION	0.9999806077227303	WITHOUT_CLASSIFICATION	1.9392277269556154E-5	DEFECT
// This ensures that we handle selections correctly. //	WITHOUT_CLASSIFICATION	0.9993812724027106	WITHOUT_CLASSIFICATION	6.187275972893944E-4	DEFECT
// Get the first selected element. //	WITHOUT_CLASSIFICATION	0.9999999858083467	WITHOUT_CLASSIFICATION	1.4191653331381248E-8	DEFECT
// Do the work within an operation because this is a long running activity that modifies the workbench. //	WITHOUT_CLASSIFICATION	0.9999975758091426	WITHOUT_CLASSIFICATION	2.4241908573637416E-6	DEFECT
// generateMenuManager.add(new Separator("schema-actions")); // generateMenuManager.add(generateSchemaAction);    	WITHOUT_CLASSIFICATION	0.9999999916649328	WITHOUT_CLASSIFICATION	8.335067131974403E-9	DEFECT
// generateSchemaAction.setEnabled(generateSchemaAction.isEnabled());	WITHOUT_CLASSIFICATION	0.9999999964011758	WITHOUT_CLASSIFICATION	3.598824194583273E-9	DEFECT
// menuManager.insertBefore("additions", new Separator("schema-actions")); // menuManager.insertAfter("schema-actions", generateSchemaAction);	WITHOUT_CLASSIFICATION	0.9999999296783606	WITHOUT_CLASSIFICATION	7.03216393479547E-8	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999827188826	WITHOUT_CLASSIFICATION	1.7281117422851505E-8	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999827188826	WITHOUT_CLASSIFICATION	1.7281117422851505E-8	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999827188826	WITHOUT_CLASSIFICATION	1.7281117422851505E-8	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999827188826	WITHOUT_CLASSIFICATION	1.7281117422851505E-8	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999827188826	WITHOUT_CLASSIFICATION	1.7281117422851505E-8	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999827188826	WITHOUT_CLASSIFICATION	1.7281117422851505E-8	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999827188826	WITHOUT_CLASSIFICATION	1.7281117422851505E-8	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999827188826	WITHOUT_CLASSIFICATION	1.7281117422851505E-8	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999827188826	WITHOUT_CLASSIFICATION	1.7281117422851505E-8	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999827188826	WITHOUT_CLASSIFICATION	1.7281117422851505E-8	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999827188826	WITHOUT_CLASSIFICATION	1.7281117422851505E-8	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999827188826	WITHOUT_CLASSIFICATION	1.7281117422851505E-8	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999827188826	WITHOUT_CLASSIFICATION	1.7281117422851505E-8	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999827188826	WITHOUT_CLASSIFICATION	1.7281117422851505E-8	DEFECT
//)	WITHOUT_CLASSIFICATION	0.9999724231512007	WITHOUT_CLASSIFICATION	2.757684879929304E-5	DEFECT
//)	WITHOUT_CLASSIFICATION	0.9999724231512007	WITHOUT_CLASSIFICATION	2.757684879929304E-5	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9990389862656467	WITHOUT_CLASSIFICATION	9.610137343533806E-4	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9990389862656467	WITHOUT_CLASSIFICATION	9.610137343533806E-4	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9990389862656467	WITHOUT_CLASSIFICATION	9.610137343533806E-4	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9990389862656467	WITHOUT_CLASSIFICATION	9.610137343533806E-4	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9990389862656467	WITHOUT_CLASSIFICATION	9.610137343533806E-4	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9990389862656467	WITHOUT_CLASSIFICATION	9.610137343533806E-4	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9990389862656467	WITHOUT_CLASSIFICATION	9.610137343533806E-4	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9990389862656467	WITHOUT_CLASSIFICATION	9.610137343533806E-4	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9990389862656467	WITHOUT_CLASSIFICATION	9.610137343533806E-4	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9990389862656467	WITHOUT_CLASSIFICATION	9.610137343533806E-4	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9990389862656467	WITHOUT_CLASSIFICATION	9.610137343533806E-4	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9990389862656467	WITHOUT_CLASSIFICATION	9.610137343533806E-4	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9990389862656467	WITHOUT_CLASSIFICATION	9.610137343533806E-4	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9990389862656467	WITHOUT_CLASSIFICATION	9.610137343533806E-4	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9990389862656467	WITHOUT_CLASSIFICATION	9.610137343533806E-4	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9990389862656467	WITHOUT_CLASSIFICATION	9.610137343533806E-4	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9990389862656467	WITHOUT_CLASSIFICATION	9.610137343533806E-4	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9990389862656467	WITHOUT_CLASSIFICATION	9.610137343533806E-4	DEFECT
/**   * Calls <code>validateXXX</code> for the corresponding classifier of the model.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9999638723482505	WITHOUT_CLASSIFICATION	3.6127651749576896E-5	DEFECT
/**   * Calls <code>validateXXX</code> for the corresponding classifier of the model.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9999638723482505	WITHOUT_CLASSIFICATION	3.6127651749576896E-5	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9999974839082467	WITHOUT_CLASSIFICATION	2.5160917533349325E-6	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9999974839082467	WITHOUT_CLASSIFICATION	2.5160917533349325E-6	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9999974839082467	WITHOUT_CLASSIFICATION	2.5160917533349325E-6	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9999974839082467	WITHOUT_CLASSIFICATION	2.5160917533349325E-6	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9999974839082467	WITHOUT_CLASSIFICATION	2.5160917533349325E-6	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9999974839082467	WITHOUT_CLASSIFICATION	2.5160917533349325E-6	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9999974839082467	WITHOUT_CLASSIFICATION	2.5160917533349325E-6	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9999974839082467	WITHOUT_CLASSIFICATION	2.5160917533349325E-6	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9999974839082467	WITHOUT_CLASSIFICATION	2.5160917533349325E-6	DEFECT
// // Constructors //	WITHOUT_CLASSIFICATION	0.9999999885771913	WITHOUT_CLASSIFICATION	1.1422808676956089E-8	DEFECT
// // Constructors //	WITHOUT_CLASSIFICATION	0.9999999885771913	WITHOUT_CLASSIFICATION	1.1422808676956089E-8	DEFECT
//TestCase/isSetGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999999962927338	WITHOUT_CLASSIFICATION	3.7072662096832275E-9	DEFECT
// Avoid unnecessary out.write("") statements...	WITHOUT_CLASSIFICATION	0.9999994691108923	WITHOUT_CLASSIFICATION	5.308891076105011E-7	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999915400640049	WITHOUT_CLASSIFICATION	8.459935995032677E-6	DEFECT
// For any entry that doesn't correspond to a plugin in the running JVM, compute a URL for the classes. //	WITHOUT_CLASSIFICATION	0.9997570477315415	WITHOUT_CLASSIFICATION	2.4295226845849098E-4	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999929610569948	WITHOUT_CLASSIFICATION	7.0389430052846595E-6	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999929610569948	WITHOUT_CLASSIFICATION	7.0389430052846595E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999915400640049	WITHOUT_CLASSIFICATION	8.459935995032677E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999915400640049	WITHOUT_CLASSIFICATION	8.459935995032677E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999915400640049	WITHOUT_CLASSIFICATION	8.459935995032677E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999915400640049	WITHOUT_CLASSIFICATION	8.459935995032677E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999915400640049	WITHOUT_CLASSIFICATION	8.459935995032677E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999915400640049	WITHOUT_CLASSIFICATION	8.459935995032677E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999915400640049	WITHOUT_CLASSIFICATION	8.459935995032677E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999915400640049	WITHOUT_CLASSIFICATION	8.459935995032677E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999915400640049	WITHOUT_CLASSIFICATION	8.459935995032677E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999915400640049	WITHOUT_CLASSIFICATION	8.459935995032677E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999915400640049	WITHOUT_CLASSIFICATION	8.459935995032677E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999915400640049	WITHOUT_CLASSIFICATION	8.459935995032677E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999915400640049	WITHOUT_CLASSIFICATION	8.459935995032677E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999915400640049	WITHOUT_CLASSIFICATION	8.459935995032677E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999915400640049	WITHOUT_CLASSIFICATION	8.459935995032677E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999915400640049	WITHOUT_CLASSIFICATION	8.459935995032677E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999915400640049	WITHOUT_CLASSIFICATION	8.459935995032677E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999915400640049	WITHOUT_CLASSIFICATION	8.459935995032677E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999915400640049	WITHOUT_CLASSIFICATION	8.459935995032677E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999915400640049	WITHOUT_CLASSIFICATION	8.459935995032677E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999915400640049	WITHOUT_CLASSIFICATION	8.459935995032677E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999915400640049	WITHOUT_CLASSIFICATION	8.459935995032677E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999915400640049	WITHOUT_CLASSIFICATION	8.459935995032677E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999915400640049	WITHOUT_CLASSIFICATION	8.459935995032677E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999915400640049	WITHOUT_CLASSIFICATION	8.459935995032677E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999915400640049	WITHOUT_CLASSIFICATION	8.459935995032677E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999915400640049	WITHOUT_CLASSIFICATION	8.459935995032677E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999915400640049	WITHOUT_CLASSIFICATION	8.459935995032677E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999915400640049	WITHOUT_CLASSIFICATION	8.459935995032677E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999915400640049	WITHOUT_CLASSIFICATION	8.459935995032677E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999915400640049	WITHOUT_CLASSIFICATION	8.459935995032677E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999915400640049	WITHOUT_CLASSIFICATION	8.459935995032677E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999915400640049	WITHOUT_CLASSIFICATION	8.459935995032677E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999915400640049	WITHOUT_CLASSIFICATION	8.459935995032677E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999915400640049	WITHOUT_CLASSIFICATION	8.459935995032677E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999915400640049	WITHOUT_CLASSIFICATION	8.459935995032677E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999915400640049	WITHOUT_CLASSIFICATION	8.459935995032677E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999915400640049	WITHOUT_CLASSIFICATION	8.459935995032677E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999915400640049	WITHOUT_CLASSIFICATION	8.459935995032677E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999915400640049	WITHOUT_CLASSIFICATION	8.459935995032677E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999915400640049	WITHOUT_CLASSIFICATION	8.459935995032677E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999915400640049	WITHOUT_CLASSIFICATION	8.459935995032677E-6	DEFECT
// Define a class loader that looks up classes using the URLs or the parent class loader, // and failing those, tries to look up the class in each bundle in the running JVM. //	WITHOUT_CLASSIFICATION	0.9999999691173379	WITHOUT_CLASSIFICATION	3.088266207524244E-8	DEFECT
// EATM in JDK 1.4 there will be an indexOf on StringBuffer. //	DEFECT	0.9998854633787875	WITHOUT_CLASSIFICATION	1.1453662121255033E-4	DEFECT
// line comments at the end of annotations are not a part of the range of annotation // TODO is not including line comments at the end of annotations a bug?	DEFECT	0.9218907718612886	DEFECT	0.07810922813871134	WITHOUT_CLASSIFICATION
// EATM must fix isSet bits.	DEFECT	0.9999996871422716	WITHOUT_CLASSIFICATION	3.1285772840738703E-7	DEFECT
// EATM must fix isSet bits.	DEFECT	0.9999996871422716	WITHOUT_CLASSIFICATION	3.1285772840738703E-7	DEFECT
// Bug 124306: we should rely on XMLCalendar to normalize Dave value, to ensure that all Date value // fields are taken into account.	DEFECT	0.9994301710636913	DEFECT	5.698289363087824E-4	WITHOUT_CLASSIFICATION
// is this an error???	DEFECT	0.9999946582211953	WITHOUT_CLASSIFICATION	5.341778804734695E-6	DEFECT
// is this an error???	DEFECT	0.9999946582211953	WITHOUT_CLASSIFICATION	5.341778804734695E-6	DEFECT
//FB Won't compile with VAJ or NO_JIKES  //FB Object adapter = adapterFactory.adapt(mapping);	DEFECT	0.9999111518796093	WITHOUT_CLASSIFICATION	8.884812039062767E-5	DEFECT
