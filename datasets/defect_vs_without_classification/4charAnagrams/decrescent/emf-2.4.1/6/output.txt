// Delete the ActionContributionItems with matching action. //	WITHOUT_CLASSIFICATION	0.9999985955142616	WITHOUT_CLASSIFICATION	1.404485738342238E-6	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.999974171561369	WITHOUT_CLASSIFICATION	2.5828438630977826E-5	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999989374002828	WITHOUT_CLASSIFICATION	1.0625997173036432E-6	DEFECT
// Recompute the read only state. //	WITHOUT_CLASSIFICATION	0.9999984141477123	WITHOUT_CLASSIFICATION	1.5858522877140642E-6	DEFECT
// Refresh any actions that may become enabled or disabled. //	WITHOUT_CLASSIFICATION	0.9969423211307605	WITHOUT_CLASSIFICATION	0.0030576788692393856	DEFECT
// Create the command stack that will notify this editor as commands are executed. //	WITHOUT_CLASSIFICATION	0.9996513038088302	WITHOUT_CLASSIFICATION	3.4869619116980255E-4	DEFECT
// Add a listener to set the most recent command's affected objects to be the selection of the viewer with focus. //	WITHOUT_CLASSIFICATION	0.9999999270769817	WITHOUT_CLASSIFICATION	7.292301823527085E-8	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999915452101419	WITHOUT_CLASSIFICATION	8.454789858137396E-6	DEFECT
// Try to select the affected objects. //	WITHOUT_CLASSIFICATION	0.99999993727935	WITHOUT_CLASSIFICATION	6.272064995867918E-8	DEFECT
// Create the editing domain with a special command stack. //	WITHOUT_CLASSIFICATION	0.9999366891983547	WITHOUT_CLASSIFICATION	6.33108016453388E-5	DEFECT
// Make sure it's okay. //	WITHOUT_CLASSIFICATION	0.999990232211429	WITHOUT_CLASSIFICATION	9.767788570897222E-6	DEFECT
// Create an adapter factory that yields item providers. //	WITHOUT_CLASSIFICATION	0.9999956950234048	WITHOUT_CLASSIFICATION	4.304976595195095E-6	DEFECT
// Try to select the items in the current content viewer of the editor. //	WITHOUT_CLASSIFICATION	0.9999983866450993	WITHOUT_CLASSIFICATION	1.613354900611949E-6	DEFECT
// If it is changing... //	WITHOUT_CLASSIFICATION	0.9996682763358424	WITHOUT_CLASSIFICATION	3.3172366415751335E-4	DEFECT
// Create the listener on demand. //	WITHOUT_CLASSIFICATION	0.9999991108676913	WITHOUT_CLASSIFICATION	8.891323086442798E-7	DEFECT
// Stop listening to the old one. //	WITHOUT_CLASSIFICATION	0.9999993830150699	WITHOUT_CLASSIFICATION	6.169849301134148E-7	DEFECT
// Start listening to the new one. //	WITHOUT_CLASSIFICATION	0.9999995827580975	WITHOUT_CLASSIFICATION	4.17241902540673E-7	DEFECT
// Remember it. //	WITHOUT_CLASSIFICATION	0.9999924173737395	WITHOUT_CLASSIFICATION	7.582626260562482E-6	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999915452101419	WITHOUT_CLASSIFICATION	8.454789858137396E-6	DEFECT
// Set the editors selection based on the current viewer's selection. //	WITHOUT_CLASSIFICATION	0.999952859762794	WITHOUT_CLASSIFICATION	4.7140237205942496E-5	DEFECT
// Load the resource through the editing domain. //	WITHOUT_CLASSIFICATION	0.999996120429101	WITHOUT_CLASSIFICATION	3.879570898986815E-6	DEFECT
// Create a page for the selection tree view. //	WITHOUT_CLASSIFICATION	0.9999962470667619	WITHOUT_CLASSIFICATION	3.752933238022538E-6	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9999894881046154	WITHOUT_CLASSIFICATION	1.0511895384633356E-5	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9999894881046154	WITHOUT_CLASSIFICATION	1.0511895384633356E-5	DEFECT
// Ensures that this editor will only display the page's tab // area if there are more than one page //	WITHOUT_CLASSIFICATION	0.9999983097631826	WITHOUT_CLASSIFICATION	1.6902368173782775E-6	DEFECT
// The content outline is just a tree. //	WITHOUT_CLASSIFICATION	0.9999998753384842	WITHOUT_CLASSIFICATION	1.2466151579040114E-7	DEFECT
// This is the page for the list viewer //	WITHOUT_CLASSIFICATION	0.9999970116494147	WITHOUT_CLASSIFICATION	2.988350585404644E-6	DEFECT
// This is the page for the tree viewer //	WITHOUT_CLASSIFICATION	0.9999520437022996	WITHOUT_CLASSIFICATION	4.7956297700512814E-5	DEFECT
// This is the page for the table viewer. //	WITHOUT_CLASSIFICATION	0.9999967290963107	WITHOUT_CLASSIFICATION	3.270903689351336E-6	DEFECT
// This is the page for the table tree viewer. //	WITHOUT_CLASSIFICATION	0.9999928929272484	WITHOUT_CLASSIFICATION	7.1070727515620394E-6	DEFECT
// Make sure our popups work. //	WITHOUT_CLASSIFICATION	0.9997906627920294	WITHOUT_CLASSIFICATION	2.093372079704637E-4	DEFECT
// Select the root object in the view. //	WITHOUT_CLASSIFICATION	0.9999047751717217	WITHOUT_CLASSIFICATION	9.522482827820044E-5	DEFECT
// Listen to selection so that we can handle it is a special way. //	WITHOUT_CLASSIFICATION	0.9999993346997945	WITHOUT_CLASSIFICATION	6.653002054060245E-7	DEFECT
// This ensures that we handle selections correctly. //	WITHOUT_CLASSIFICATION	0.9990124714797155	WITHOUT_CLASSIFICATION	9.875285202844328E-4	DEFECT
// Set the selection to the widget. //	WITHOUT_CLASSIFICATION	0.999948194433829	WITHOUT_CLASSIFICATION	5.180556617089397E-5	DEFECT
// Save only resources that have actually changed. //	WITHOUT_CLASSIFICATION	0.9999867728494876	WITHOUT_CLASSIFICATION	1.32271505124688E-5	DEFECT
// Do the work within an operation because this is a long running activity that modifies the workbench. //	WITHOUT_CLASSIFICATION	0.9999926175549257	WITHOUT_CLASSIFICATION	7.382445074256502E-6	DEFECT
// Set the input to the widget. //	WITHOUT_CLASSIFICATION	0.9999857136924172	WITHOUT_CLASSIFICATION	1.428630758286727E-5	DEFECT
// Save the resources to the file system. //	WITHOUT_CLASSIFICATION	0.999991520970153	WITHOUT_CLASSIFICATION	8.479029846996282E-6	DEFECT
// This runs the options, and shows progress. //	WITHOUT_CLASSIFICATION	0.9999837056647809	WITHOUT_CLASSIFICATION	1.629433521918323E-5	DEFECT
// Refresh the necessary state. //	WITHOUT_CLASSIFICATION	0.9999980493729441	WITHOUT_CLASSIFICATION	1.9506270558937E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999995614747719	WITHOUT_CLASSIFICATION	4.385252280605921E-7	DEFECT
// Create a default .jetsettings file file	WITHOUT_CLASSIFICATION	0.9999999678936237	WITHOUT_CLASSIFICATION	3.2106376326389684E-8	DEFECT
// Something went wrong that shouldn't. //	WITHOUT_CLASSIFICATION	0.9985472413057587	WITHOUT_CLASSIFICATION	0.0014527586942412842	DEFECT
// Set the new variables. //	WITHOUT_CLASSIFICATION	0.9999999285221582	WITHOUT_CLASSIFICATION	7.147784171652278E-8	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.ecore.util.ExtendedMetaData#getPackage(java.lang.String)   */	WITHOUT_CLASSIFICATION	0.9999999999580217	WITHOUT_CLASSIFICATION	4.1978365197383796E-11	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9999718831292177	WITHOUT_CLASSIFICATION	2.811687078229608E-5	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999986414502402	WITHOUT_CLASSIFICATION	1.3585497598851668E-6	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999946923429	WITHOUT_CLASSIFICATION	5.307657104793272E-9	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$	WITHOUT_CLASSIFICATION	0.9999744017220922	WITHOUT_CLASSIFICATION	2.5598277907838138E-5	DEFECT
//Ecore2XMLResourceFactoryImpl	WITHOUT_CLASSIFICATION	0.9999888733425241	WITHOUT_CLASSIFICATION	1.1126657475854357E-5	DEFECT
/**   * The switch that delegates to the <code>createXXX</code> methods.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9999999314227829	WITHOUT_CLASSIFICATION	6.857721708148531E-8	DEFECT
//Ecore2XMLAdapterFactory	WITHOUT_CLASSIFICATION	0.9998784339639761	WITHOUT_CLASSIFICATION	1.2156603602384684E-4	DEFECT
//Ecore2XMLSwitch	WITHOUT_CLASSIFICATION	0.9998682047091645	WITHOUT_CLASSIFICATION	1.3179529083561553E-4	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.9999999766383213	WITHOUT_CLASSIFICATION	2.3361678751851995E-8	DEFECT
//Ecore2XMLResourceFactoryImpl	WITHOUT_CLASSIFICATION	0.9999888733425241	WITHOUT_CLASSIFICATION	1.1126657475854357E-5	DEFECT
//FunctionNamePairImpl	WITHOUT_CLASSIFICATION	0.9999971631192283	WITHOUT_CLASSIFICATION	2.8368807716312794E-6	DEFECT
//MappingFactoryImpl	WITHOUT_CLASSIFICATION	0.9999662681443474	WITHOUT_CLASSIFICATION	3.3731855652637746E-5	DEFECT
//ComplexTypeConverterImpl	WITHOUT_CLASSIFICATION	0.9999913027120545	WITHOUT_CLASSIFICATION	8.697287945500925E-6	DEFECT
//MappingHelperImpl	WITHOUT_CLASSIFICATION	0.9999862288643719	WITHOUT_CLASSIFICATION	1.3771135628006002E-5	DEFECT
//MappingStrategyImpl	WITHOUT_CLASSIFICATION	0.9999909836240171	WITHOUT_CLASSIFICATION	9.016375982932776E-6	DEFECT
//FunctionPairImpl	WITHOUT_CLASSIFICATION	0.9999929735719485	WITHOUT_CLASSIFICATION	7.0264280514132026E-6	DEFECT
// Initialize simple dependencies	WITHOUT_CLASSIFICATION	0.9999998627377243	WITHOUT_CLASSIFICATION	1.372622756233283E-7	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.9999990161470182	WITHOUT_CLASSIFICATION	9.83852981794225E-7	DEFECT
// Mark meta-data to indicate it can't be changed	WITHOUT_CLASSIFICATION	0.999996839412632	WITHOUT_CLASSIFICATION	3.1605873680022317E-6	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.9999998937081113	WITHOUT_CLASSIFICATION	1.0629188876058995E-7	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.9999998481815032	WITHOUT_CLASSIFICATION	1.518184968271126E-7	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.9999993338928099	WITHOUT_CLASSIFICATION	6.661071901337388E-7	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.9999921779007461	WITHOUT_CLASSIFICATION	7.822099253932902E-6	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.9999998165471937	WITHOUT_CLASSIFICATION	1.834528063299559E-7	DEFECT
// Initialize classes and features; add operations and parameters	WITHOUT_CLASSIFICATION	0.9999993621167168	WITHOUT_CLASSIFICATION	6.378832832154119E-7	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.999999913714059	WITHOUT_CLASSIFICATION	8.628594096543401E-8	DEFECT
//MappingImpl	WITHOUT_CLASSIFICATION	0.9999602410007866	WITHOUT_CLASSIFICATION	3.975899921334598E-5	DEFECT
// Remove zero width non-breaking space, which may be used as a byte order marker,  // and may be ignored according to the Unicode FAQ: http://www.unicode.org/unicode/faq/utf_bom.html#38 //	WITHOUT_CLASSIFICATION	0.9999991826703377	WITHOUT_CLASSIFICATION	8.173296622866262E-7	DEFECT
//TypeConverterImpl	WITHOUT_CLASSIFICATION	0.9999947537621664	WITHOUT_CLASSIFICATION	5.246237833611307E-6	DEFECT
// Barring a better result, this will be the result. //	WITHOUT_CLASSIFICATION	0.9864698539840056	WITHOUT_CLASSIFICATION	0.013530146015994579	DEFECT
// If the intersection is empty, i.e., no ancestor is in the mapping... //	WITHOUT_CLASSIFICATION	0.9999971544519235	WITHOUT_CLASSIFICATION	2.845548076413732E-6	DEFECT
// If this mapping isn't a parent, it's children definitely won't be either. //	WITHOUT_CLASSIFICATION	0.9912590509334425	WITHOUT_CLASSIFICATION	0.0087409490665576	DEFECT
// Make sure the collections aren't identical... //	WITHOUT_CLASSIFICATION	0.998762922897031	WITHOUT_CLASSIFICATION	0.0012370771029690775	DEFECT
//FB used to check for parent != null. // Need to find the top most model object not including the resource. // parent instanceof Eobject only checks for trees in model object space.	WITHOUT_CLASSIFICATION	0.9999933761334396	WITHOUT_CLASSIFICATION	6.6238665602843964E-6	DEFECT
// printAdapters();	WITHOUT_CLASSIFICATION	0.9999999560513696	WITHOUT_CLASSIFICATION	4.394863046649991E-8	DEFECT
//MappingRootImpl	WITHOUT_CLASSIFICATION	0.9999398676770999	WITHOUT_CLASSIFICATION	6.013232290021036E-5	DEFECT
// TODO	WITHOUT_CLASSIFICATION	0.9993460055949276	WITHOUT_CLASSIFICATION	6.539944050723063E-4	DEFECT
// Try to select the items in the current content viewer of the editor. //	WITHOUT_CLASSIFICATION	0.9999983866450993	WITHOUT_CLASSIFICATION	1.613354900611949E-6	DEFECT
// If it is changing... //	WITHOUT_CLASSIFICATION	0.9996682763358424	WITHOUT_CLASSIFICATION	3.3172366415751335E-4	DEFECT
// Create the listener on demand. //	WITHOUT_CLASSIFICATION	0.9999991108676913	WITHOUT_CLASSIFICATION	8.891323086442798E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999995614747719	WITHOUT_CLASSIFICATION	4.385252280605921E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999995614747719	WITHOUT_CLASSIFICATION	4.385252280605921E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999995614747719	WITHOUT_CLASSIFICATION	4.385252280605921E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999995614747719	WITHOUT_CLASSIFICATION	4.385252280605921E-7	DEFECT
// VAJ kludge //	WITHOUT_CLASSIFICATION	0.9999896506692381	WITHOUT_CLASSIFICATION	1.0349330761957857E-5	DEFECT
// This just notifies those things that are affected by the selection. //	WITHOUT_CLASSIFICATION	0.999997585592174	WITHOUT_CLASSIFICATION	2.414407825894538E-6	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999986414502402	WITHOUT_CLASSIFICATION	1.3585497598851668E-6	DEFECT
// Stop listening to the old one. //	WITHOUT_CLASSIFICATION	0.9999993830150699	WITHOUT_CLASSIFICATION	6.169849301134148E-7	DEFECT
// Start listening to the new one. //	WITHOUT_CLASSIFICATION	0.9999995827580975	WITHOUT_CLASSIFICATION	4.17241902540673E-7	DEFECT
// Remember it. //	WITHOUT_CLASSIFICATION	0.9999924173737395	WITHOUT_CLASSIFICATION	7.582626260562482E-6	DEFECT
/* EATM getDecoratedAdapterFactory().*/	WITHOUT_CLASSIFICATION	0.9999947264767549	WITHOUT_CLASSIFICATION	5.2735232451283195E-6	DEFECT
/* EATM getDecoratedAdapterFactory().*/	WITHOUT_CLASSIFICATION	0.9999947264767549	WITHOUT_CLASSIFICATION	5.2735232451283195E-6	DEFECT
/* EATM getDecoratedAdapterFactory().*/	WITHOUT_CLASSIFICATION	0.9999947264767549	WITHOUT_CLASSIFICATION	5.2735232451283195E-6	DEFECT
// Add a listener to set the most recent command's affected objects to be the selection of the viewer with focus. //	WITHOUT_CLASSIFICATION	0.9999999270769817	WITHOUT_CLASSIFICATION	7.292301823527085E-8	DEFECT
// I assume that the editorInput is a file object. //	WITHOUT_CLASSIFICATION	0.9999973452138279	WITHOUT_CLASSIFICATION	2.6547861720612504E-6	DEFECT
// Handle the creation of the model from the modelFile. //	WITHOUT_CLASSIFICATION	0.9999999378611856	WITHOUT_CLASSIFICATION	6.21388145051908E-8	DEFECT
// Restore the persistent command stack, if need be. //	WITHOUT_CLASSIFICATION	0.9999971243332123	WITHOUT_CLASSIFICATION	2.8756667875883116E-6	DEFECT
// Create a page for the selection tree view. //	WITHOUT_CLASSIFICATION	0.9999962470667619	WITHOUT_CLASSIFICATION	3.752933238022538E-6	DEFECT
// Set up the tree viewer. //	WITHOUT_CLASSIFICATION	0.9999983994774432	WITHOUT_CLASSIFICATION	1.6005225568662645E-6	DEFECT
// Make sure our popups work. //	WITHOUT_CLASSIFICATION	0.9997906627920294	WITHOUT_CLASSIFICATION	2.093372079704637E-4	DEFECT
// Select the root object in the view. //	WITHOUT_CLASSIFICATION	0.9999047751717217	WITHOUT_CLASSIFICATION	9.522482827820044E-5	DEFECT
// This ensures that we handle selections correctly. //	WITHOUT_CLASSIFICATION	0.9990124714797155	WITHOUT_CLASSIFICATION	9.875285202844328E-4	DEFECT
// Do the work within an operation because this is a long running activity that modifies the workbench. //	WITHOUT_CLASSIFICATION	0.9999926175549257	WITHOUT_CLASSIFICATION	7.382445074256502E-6	DEFECT
// Load the resource through the editing domain. // This will create a context and associate it with the resource set. //	WITHOUT_CLASSIFICATION	0.9999261961335323	WITHOUT_CLASSIFICATION	7.38038664676976E-5	DEFECT
// The one object in the resource's extent should be the root object. //	WITHOUT_CLASSIFICATION	0.9999710562571946	WITHOUT_CLASSIFICATION	2.8943742805458744E-5	DEFECT
// Save the resource to the file system. //	WITHOUT_CLASSIFICATION	0.9999982487244918	WITHOUT_CLASSIFICATION	1.7512755082437894E-6	DEFECT
// Update the workbench's knowledge of the file's contents. //	WITHOUT_CLASSIFICATION	0.9999986294822598	WITHOUT_CLASSIFICATION	1.370517740162274E-6	DEFECT
// Add the binding to the provided hash table: //	WITHOUT_CLASSIFICATION	0.9999837265601296	WITHOUT_CLASSIFICATION	1.627343987046314E-5	DEFECT
// Refresh the necessary state. //	WITHOUT_CLASSIFICATION	0.9999980493729441	WITHOUT_CLASSIFICATION	1.9506270558937E-6	DEFECT
// Something went wrong that shouldn't. //	WITHOUT_CLASSIFICATION	0.9985472413057587	WITHOUT_CLASSIFICATION	0.0014527586942412842	DEFECT
// Parse as an attribute=value:	WITHOUT_CLASSIFICATION	0.9999997105585536	WITHOUT_CLASSIFICATION	2.894414462920182E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999996496589197	WITHOUT_CLASSIFICATION	3.5034108028605753E-7	DEFECT
// Create the mapping domain with a special command stack. // 	WITHOUT_CLASSIFICATION	0.9993726576313711	WITHOUT_CLASSIFICATION	6.273423686289422E-4	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999996061833671	WITHOUT_CLASSIFICATION	3.938166328746333E-7	DEFECT
// Doing this just makes focus go to the default control, not the control that last has focus. // // super.setFocus();	WITHOUT_CLASSIFICATION	0.999999839276354	WITHOUT_CLASSIFICATION	1.607236459101382E-7	DEFECT
// If the object is an input or output object, then use it. //	WITHOUT_CLASSIFICATION	0.9999996738822147	WITHOUT_CLASSIFICATION	3.2611778539486894E-7	DEFECT
// Process the children recursively. //	WITHOUT_CLASSIFICATION	0.999996819992479	WITHOUT_CLASSIFICATION	3.180007521000074E-6	DEFECT
// Look for a single-char work delimiter: //	WITHOUT_CLASSIFICATION	0.999976483588621	WITHOUT_CLASSIFICATION	2.3516411379080045E-5	DEFECT
// oldWidth = table.getClientArea().width;	WITHOUT_CLASSIFICATION	0.9999989043194956	WITHOUT_CLASSIFICATION	1.0956805044216498E-6	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999986414502402	WITHOUT_CLASSIFICATION	1.3585497598851668E-6	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999946923429	WITHOUT_CLASSIFICATION	5.307657104793272E-9	DEFECT
//MappingPackage ePackage = ((ComplexTypeConverter)object).ePackageMapping();	WITHOUT_CLASSIFICATION	0.999998049234916	WITHOUT_CLASSIFICATION	1.9507650839780144E-6	DEFECT
// This is for the in2out feature. //	WITHOUT_CLASSIFICATION	0.9999848277603712	WITHOUT_CLASSIFICATION	1.5172239628808498E-5	DEFECT
// This is for the out2in feature. //	WITHOUT_CLASSIFICATION	0.9999591723229658	WITHOUT_CLASSIFICATION	4.082767703419563E-5	DEFECT
// HGD::fireNotifyChanged(msg.getNotifier(), msg.getEventType(), msg.getFeature(), msg.getOldValue(), msg.getNewValue(), msg.getPosition());	WITHOUT_CLASSIFICATION	0.9999998947490694	WITHOUT_CLASSIFICATION	1.0525093069517482E-7	DEFECT
// This is for the in2out feature. //	WITHOUT_CLASSIFICATION	0.9999848277603712	WITHOUT_CLASSIFICATION	1.5172239628808498E-5	DEFECT
// This is for the topDown feature. //	WITHOUT_CLASSIFICATION	0.9999409519081198	WITHOUT_CLASSIFICATION	5.904809188011719E-5	DEFECT
//MappingPackage ePackage = ((MappingRoot)msg.getNotifier()).ePackageMapping();	WITHOUT_CLASSIFICATION	0.9999997443574299	WITHOUT_CLASSIFICATION	2.556425700405606E-7	DEFECT
//hgd::fireNotifyChanged(msg.getNotifier(), msg.getEventType(), msg.getStructuralFeature(), msg.getOldValue(), msg.getNewValue(), msg.getPosition());	WITHOUT_CLASSIFICATION	0.9999999601446492	WITHOUT_CLASSIFICATION	3.985535072726006E-8	DEFECT
//MappingPackage ePackage = ((FunctionNamePair)object).ePackageMapping();	WITHOUT_CLASSIFICATION	0.9999994579497076	WITHOUT_CLASSIFICATION	5.420502923298615E-7	DEFECT
// This is for the in2out feature. //	WITHOUT_CLASSIFICATION	0.9999848277603712	WITHOUT_CLASSIFICATION	1.5172239628808498E-5	DEFECT
// This is for the out2in feature. //	WITHOUT_CLASSIFICATION	0.9999591723229658	WITHOUT_CLASSIFICATION	4.082767703419563E-5	DEFECT
//MappingPackage ePackage = ((FunctionNamePair)msg.getNotifier()).ePackageMapping();	WITHOUT_CLASSIFICATION	0.999999784657707	WITHOUT_CLASSIFICATION	2.153422930024279E-7	DEFECT
// HGD::fireNotifyChanged(msg.getNotifier(), msg.getEventType(), msg.getStructuralFeature(), msg.getOldValue(), msg.getNewValue(), msg.getPosition());	WITHOUT_CLASSIFICATION	0.9999999821969804	WITHOUT_CLASSIFICATION	1.7803019601098847E-8	DEFECT
//MappingPackage ePackage = ((FunctionPair)object).ePackageMapping();	WITHOUT_CLASSIFICATION	0.9999989396729246	WITHOUT_CLASSIFICATION	1.0603270753682775E-6	DEFECT
//MappingPackage ePackage = ((FunctionPair)msg.getNotifier()).ePackageMapping();	WITHOUT_CLASSIFICATION	0.999999787526203	WITHOUT_CLASSIFICATION	2.124737970640532E-7	DEFECT
//HGD::fireNotifyChanged(msg.getNotifier(), msg.getEventType(), msg.getStructuralFeature(), msg.getOldValue(), msg.getNewValue(), msg.getPosition());	WITHOUT_CLASSIFICATION	0.9999999506354041	WITHOUT_CLASSIFICATION	4.9364595830842196E-8	DEFECT
// This is here only to support deprecated adapt(object) rather than adapt(object, Interface.class). // // supportedTypes.add(null);	WITHOUT_CLASSIFICATION	0.9999834814302585	WITHOUT_CLASSIFICATION	1.6518569741452757E-5	DEFECT
// supportedTypes.add(IUpdateableItemText.class);	WITHOUT_CLASSIFICATION	0.9999992403324014	WITHOUT_CLASSIFICATION	7.596675987003795E-7	DEFECT
//FB ????? 	WITHOUT_CLASSIFICATION	0.9999672620110356	WITHOUT_CLASSIFICATION	3.2737988964354245E-5	DEFECT
// This is for the helper feature. //	WITHOUT_CLASSIFICATION	0.9999014269623262	WITHOUT_CLASSIFICATION	9.857303767378828E-5	DEFECT
// This is for the typeMapping feature. //	WITHOUT_CLASSIFICATION	0.9997536289845691	WITHOUT_CLASSIFICATION	2.4637101543093344E-4	DEFECT
//FIX:::	WITHOUT_CLASSIFICATION	0.9943797539445923	WITHOUT_CLASSIFICATION	0.005620246055407784	DEFECT
//hgd::fireNotifyChanged(msg.getNotifier(), msg.getEventType(), msg.getFeature(), msg.getOldValue(), msg.getNewValue(), msg.getPosition());	WITHOUT_CLASSIFICATION	0.9999997643763588	WITHOUT_CLASSIFICATION	2.3562364120433033E-7	DEFECT
//fireNotifyChanged(msg.getNotifier(), msg.getEventType(), msg.getFeature(), msg.getOldValue(), msg.getNewValue(), msg.getPosition());	WITHOUT_CLASSIFICATION	0.9999999099848843	WITHOUT_CLASSIFICATION	9.001511568345042E-8	DEFECT
/**   * The switch that delegates to the <code>createXXX</code> methods.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9999999314227829	WITHOUT_CLASSIFICATION	6.857721708148531E-8	DEFECT
// Create a resource set and load the model file into it. //	WITHOUT_CLASSIFICATION	0.9999999713464256	WITHOUT_CLASSIFICATION	2.8653574323769625E-8	DEFECT
// This is the path of the target directory. //	WITHOUT_CLASSIFICATION	0.9999973303321845	WITHOUT_CLASSIFICATION	2.669667815362829E-6	DEFECT
// Break the cycle. //	WITHOUT_CLASSIFICATION	0.9998974486256946	WITHOUT_CLASSIFICATION	1.0255137430537532E-4	DEFECT
//MappingAdapterFactory	WITHOUT_CLASSIFICATION	0.9999824933832063	WITHOUT_CLASSIFICATION	1.750661679365579E-5	DEFECT
// This ensures that we are dealing with actual MOF objects. //	WITHOUT_CLASSIFICATION	0.9999987426348603	WITHOUT_CLASSIFICATION	1.2573651396427624E-6	DEFECT
//MappingSwitch	WITHOUT_CLASSIFICATION	0.9999828044565182	WITHOUT_CLASSIFICATION	1.7195543481817825E-5	DEFECT
// This is the name of the model. //	WITHOUT_CLASSIFICATION	0.9999567711113105	WITHOUT_CLASSIFICATION	4.3228888689404015E-5	DEFECT
// Create a resource set and load the model file into it. //	WITHOUT_CLASSIFICATION	0.9999999713464256	WITHOUT_CLASSIFICATION	2.8653574323769625E-8	DEFECT
// This is the path of the target directory. //	WITHOUT_CLASSIFICATION	0.9999973303321845	WITHOUT_CLASSIFICATION	2.669667815362829E-6	DEFECT
// This is to handle a genmodel produced by rose2genmodel. //	WITHOUT_CLASSIFICATION	0.9999598537749763	WITHOUT_CLASSIFICATION	4.014622502379299E-5	DEFECT
// This is to handle a genmodel produced by rose2genmodel. //	WITHOUT_CLASSIFICATION	0.9999598537749763	WITHOUT_CLASSIFICATION	4.014622502379299E-5	DEFECT
// Clean up any old project information. //	WITHOUT_CLASSIFICATION	0.9999830138381082	WITHOUT_CLASSIFICATION	1.6986161891773482E-5	DEFECT
// Remove variables since the plugin.xml should provide the complete path information. //	WITHOUT_CLASSIFICATION	0.9190489763429325	WITHOUT_CLASSIFICATION	0.08095102365706748	DEFECT
// Look for a likely plugin name. //	WITHOUT_CLASSIFICATION	0.9996889247646026	WITHOUT_CLASSIFICATION	3.1107523539741414E-4	DEFECT
// Clean up any old project information. //	WITHOUT_CLASSIFICATION	0.9999830138381082	WITHOUT_CLASSIFICATION	1.6986161891773482E-5	DEFECT
// Remove variables since the plugin.xml should provide the complete path information. //	WITHOUT_CLASSIFICATION	0.9190489763429325	WITHOUT_CLASSIFICATION	0.08095102365706748	DEFECT
// Consult the generator option for backwards compatibility. //	WITHOUT_CLASSIFICATION	0.9999982383677233	WITHOUT_CLASSIFICATION	1.7616322766139161E-6	DEFECT
// Apply a redirection pattern, if specified. //	WITHOUT_CLASSIFICATION	0.9999338909157177	WITHOUT_CLASSIFICATION	6.610908428226026E-5	DEFECT
// If the target is read-only, we can ask the platform to release it. //	WITHOUT_CLASSIFICATION	0.9999999969462176	WITHOUT_CLASSIFICATION	3.053782366003166E-9	DEFECT
// Multiple jet directives.	WITHOUT_CLASSIFICATION	0.9999999696252	WITHOUT_CLASSIFICATION	3.0374800106193654E-8	DEFECT
// If the target is read-only, we can ask the platform to release it. //	WITHOUT_CLASSIFICATION	0.9999999969462176	WITHOUT_CLASSIFICATION	3.053782366003166E-9	DEFECT
// Merge with an existing file. //	WITHOUT_CLASSIFICATION	0.9999998367568158	WITHOUT_CLASSIFICATION	1.6324318424290545E-7	DEFECT
// If the target is read-only, we can ask the platform to release it, and it may be updated in the process. //	WITHOUT_CLASSIFICATION	0.9999999997855465	WITHOUT_CLASSIFICATION	2.144534412739574E-10	DEFECT
// If the target is read-only, we can ask the platform to release it, and it may be updated in the process. //	WITHOUT_CLASSIFICATION	0.9999999997855465	WITHOUT_CLASSIFICATION	2.144534412739574E-10	DEFECT
// Create a code formatter for this compilation unit, if needed. //	WITHOUT_CLASSIFICATION	0.999999456481001	WITHOUT_CLASSIFICATION	5.435189990944244E-7	DEFECT
// If a newline from the previous character data remains, add a generator for it. //	WITHOUT_CLASSIFICATION	0.9999995704393542	WITHOUT_CLASSIFICATION	4.2956064586411845E-7	DEFECT
// If we can't determine it by reading the file, // look at the preferences instead.	WITHOUT_CLASSIFICATION	0.9999585352577546	WITHOUT_CLASSIFICATION	4.146474224535681E-5	DEFECT
// Since we're invoking plugged-in code, we must be defensive against cycles. //	WITHOUT_CLASSIFICATION	0.9999999923025081	WITHOUT_CLASSIFICATION	7.69749180146828E-9	DEFECT
// Compute the GeneratorData for the given object and its children, then for the parents of the given object. //	WITHOUT_CLASSIFICATION	0.9999993732934002	WITHOUT_CLASSIFICATION	6.267065998154206E-7	DEFECT
// Combine the two lists. //	WITHOUT_CLASSIFICATION	0.9999994696693645	WITHOUT_CLASSIFICATION	5.303306354936574E-7	DEFECT
// Give all generator adapters the chance to do setup work. //	WITHOUT_CLASSIFICATION	0.9999977099031108	WITHOUT_CLASSIFICATION	2.2900968893303716E-6	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999998407458563	WITHOUT_CLASSIFICATION	1.5925414364133287E-7	DEFECT
// Give all generator adapters the chance to do tear down. //	WITHOUT_CLASSIFICATION	0.9999992296460122	WITHOUT_CLASSIFICATION	7.703539878296505E-7	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.9999940348137776	WITHOUT_CLASSIFICATION	5.9651862224537796E-6	DEFECT
// returns the package in which this enum literal is defined // returns the name of the enum literal get method in the package interface	WITHOUT_CLASSIFICATION	0.9999999998905718	WITHOUT_CLASSIFICATION	1.0942826819258608E-10	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999998407458563	WITHOUT_CLASSIFICATION	1.5925414364133287E-7	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.9999940348137776	WITHOUT_CLASSIFICATION	5.9651862224537796E-6	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999998407458563	WITHOUT_CLASSIFICATION	1.5925414364133287E-7	DEFECT
// String getCapPackageID(); // Includes features in other packages that delegate to those in this one.	WITHOUT_CLASSIFICATION	0.9999995902054084	WITHOUT_CLASSIFICATION	4.09794591586419E-7	DEFECT
// returns the package in which this feature is defined // returns the name of the feature get method in the package interface (e.g. Company_Name) // returns the name of the feature get method in the package interface (e.g. Xyz.eINSTANCE.getCompany_Name)	WITHOUT_CLASSIFICATION	0.9999999764084723	WITHOUT_CLASSIFICATION	2.359152774566395E-8	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999998407458563	WITHOUT_CLASSIFICATION	1.5925414364133287E-7	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999998407458563	WITHOUT_CLASSIFICATION	1.5925414364133287E-7	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999998407458563	WITHOUT_CLASSIFICATION	1.5925414364133287E-7	DEFECT
// // EMF.Editor generation //	WITHOUT_CLASSIFICATION	0.9999960146365123	WITHOUT_CLASSIFICATION	3.985363487609098E-6	DEFECT
// // Tests generation //	WITHOUT_CLASSIFICATION	0.9999998197833244	WITHOUT_CLASSIFICATION	1.8021667558061252E-7	DEFECT
// boolean isGenerateEditPlugin(); // boolean isGenerateEditorPlugin();	WITHOUT_CLASSIFICATION	0.999999515662172	WITHOUT_CLASSIFICATION	4.843378278967153E-7	DEFECT
//  Remove any non-Java dependencies from being added. //	WITHOUT_CLASSIFICATION	0.9999240820637249	WITHOUT_CLASSIFICATION	7.591793627514697E-5	DEFECT
// This URI handler redirect the URI based on the mapping. //	WITHOUT_CLASSIFICATION	0.9998692287654469	WITHOUT_CLASSIFICATION	1.307712345530897E-4	DEFECT
// There must be at least one match. //	WITHOUT_CLASSIFICATION	0.9999982317914305	WITHOUT_CLASSIFICATION	1.7682085693747474E-6	DEFECT
// Ignore if there is not substantial change. //	WITHOUT_CLASSIFICATION	0.9999998985060509	WITHOUT_CLASSIFICATION	1.0149394910007952E-7	DEFECT
// Do allow an existing build.properties to be overwritten, since it may have been created as part of an empty EMF project. // Use the existence of a plugin.xml as a guard against overwriting in a project that has already been generated. //	WITHOUT_CLASSIFICATION	0.9999998759228416	WITHOUT_CLASSIFICATION	1.240771584661691E-7	DEFECT
// Do allow an existing build.properties to be overwritten, since it may have been created as part of an empty EMF project. // Use the existence of a plugin.xml as a guard against overwriting in a project that has already been generated. //	WITHOUT_CLASSIFICATION	0.9999998759228416	WITHOUT_CLASSIFICATION	1.240771584661691E-7	DEFECT
// Do not allow an existing MANIFEST.MF to be overwritten, as the tests project is originally generated from scratch. //	WITHOUT_CLASSIFICATION	0.9999999021457028	WITHOUT_CLASSIFICATION	9.785429721195222E-8	DEFECT
// Do not allow an existing build.properties to be overwritten, as the tests project is originally generated from scratch. //	WITHOUT_CLASSIFICATION	0.9999998401356563	WITHOUT_CLASSIFICATION	1.598643436356901E-7	DEFECT
//We are not generating the manifest file if the plugin.xml exists. //	WITHOUT_CLASSIFICATION	0.9999838542867138	WITHOUT_CLASSIFICATION	1.614571328621929E-5	DEFECT
// Use an alternate if we can't write to this one. //	WITHOUT_CLASSIFICATION	0.9999879037525576	WITHOUT_CLASSIFICATION	1.2096247442449023E-5	DEFECT
// J9 2.2 has problems assigning null to a Class variable. // 	WITHOUT_CLASSIFICATION	0.9999889851606704	WITHOUT_CLASSIFICATION	1.101483932970615E-5	DEFECT
// Create the options model. //	WITHOUT_CLASSIFICATION	0.999999752015483	WITHOUT_CLASSIFICATION	2.4798451705107577E-7	DEFECT
//  Remove any non-Java dependencies from being added. //	WITHOUT_CLASSIFICATION	0.9999240820637249	WITHOUT_CLASSIFICATION	7.591793627514697E-5	DEFECT
// Escape a string that will terminate the comment in which this will all be nested. //	WITHOUT_CLASSIFICATION	0.9997669861389757	WITHOUT_CLASSIFICATION	2.3301386102419445E-4	DEFECT
// If it is an unqualified name, we will assume it refers to a type parameter, since we don't support default package. //	WITHOUT_CLASSIFICATION	0.999999808026147	WITHOUT_CLASSIFICATION	1.9197385314308945E-7	DEFECT
// Search the local scope for a resolution of the type parameter name. //	WITHOUT_CLASSIFICATION	0.9999873898612776	WITHOUT_CLASSIFICATION	1.2610138722399895E-5	DEFECT
// Check if we found a resolution for it. //	WITHOUT_CLASSIFICATION	0.9999997721807045	WITHOUT_CLASSIFICATION	2.2781929552804738E-7	DEFECT
// If not we'll erase it to java.lang.Object. //	WITHOUT_CLASSIFICATION	0.9999949541933224	WITHOUT_CLASSIFICATION	5.045806677583047E-6	DEFECT
// Otherwise, recursively call ourselves to substitute it in context if necessary. //	WITHOUT_CLASSIFICATION	0.9999999500367347	WITHOUT_CLASSIFICATION	4.9963265358796086E-8	DEFECT
// Add back in the array indices if there are any. //	WITHOUT_CLASSIFICATION	0.999905035863621	WITHOUT_CLASSIFICATION	9.49641363789283E-5	DEFECT
// Just import the name or use it directly. //	WITHOUT_CLASSIFICATION	0.9999137576408311	WITHOUT_CLASSIFICATION	8.624235916897088E-5	DEFECT
// We treat the feature as volatile if it is volatile itself or if it is  // a reference whose opposite end is volatile,  // unless that opposite volatile reference delegates to a feature map, // in which case, a full implementation of the references can be generated. //	WITHOUT_CLASSIFICATION	0.9999998921777975	WITHOUT_CLASSIFICATION	1.078222024571733E-7	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.9999940348137776	WITHOUT_CLASSIFICATION	5.9651862224537796E-6	DEFECT
/////////////////////////////////  HEADLESS INVOCATION  /////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999988969006942	WITHOUT_CLASSIFICATION	1.1030993057030335E-6	DEFECT
// for Ecore or something that explicitly extends it, we need to exclude // EObject, which is already handled by the default case	WITHOUT_CLASSIFICATION	0.999999999679445	WITHOUT_CLASSIFICATION	3.2055512935368563E-10	DEFECT
// We assume that the rootExtendsClass already implements it. //	WITHOUT_CLASSIFICATION	0.9999985282095863	WITHOUT_CLASSIFICATION	1.471790413621191E-6	DEFECT
// We assume that the rootExtendsClass already implements it. //	WITHOUT_CLASSIFICATION	0.9999985282095863	WITHOUT_CLASSIFICATION	1.471790413621191E-6	DEFECT
// If the flag will straddle two fields, bump it to the next one. //	WITHOUT_CLASSIFICATION	0.9999973957910043	WITHOUT_CLASSIFICATION	2.6042089956457276E-6	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.9999940348137776	WITHOUT_CLASSIFICATION	5.9651862224537796E-6	DEFECT
// Ignore the exception.	WITHOUT_CLASSIFICATION	0.9999999387376062	WITHOUT_CLASSIFICATION	6.126239386892702E-8	DEFECT
// An interface should be abstract, but this makes sure of that fact. //	WITHOUT_CLASSIFICATION	0.9999673449091868	WITHOUT_CLASSIFICATION	3.265509081310899E-5	DEFECT
// Simple cases: no mix-ins for no inheritance or for a single base class. //	WITHOUT_CLASSIFICATION	0.9811503559040172	WITHOUT_CLASSIFICATION	0.01884964409598278	DEFECT
// If extending an interface, its mix-ins must be included, since there is no implementation to handle them. //	WITHOUT_CLASSIFICATION	0.9999999385815795	WITHOUT_CLASSIFICATION	6.141842039906416E-8	DEFECT
// Mix-ins are everything after the base class. //	WITHOUT_CLASSIFICATION	0.9999628564616643	WITHOUT_CLASSIFICATION	3.714353833567704E-5	DEFECT
// If this is class has mixed content, the mixed feature should always be included, even if inherited, and come first. //	WITHOUT_CLASSIFICATION	0.9995675085307681	WITHOUT_CLASSIFICATION	4.324914692317653E-4	DEFECT
// Add all other create child features that this item provider is responsible for. //	WITHOUT_CLASSIFICATION	0.9999990368589967	WITHOUT_CLASSIFICATION	9.63141003196467E-7	DEFECT
// Many inherited methods must be overridden to handle this case. //	WITHOUT_CLASSIFICATION	0.9999999411366772	WITHOUT_CLASSIFICATION	5.886332281515639E-8	DEFECT
// If this looks like a feature getter, a kind property will allow it to be recognized properly. //	WITHOUT_CLASSIFICATION	0.9994623380253672	WITHOUT_CLASSIFICATION	5.37661974632756E-4	DEFECT
// Since we only use this right on an operation, we always want to include the keyType and valueType, and we never // want to qualify the property names. //	WITHOUT_CLASSIFICATION	0.999999995632126	WITHOUT_CLASSIFICATION	4.367873974863823E-9	DEFECT
// Type parameter casts can't be checked. //	WITHOUT_CLASSIFICATION	0.9999976470432056	WITHOUT_CLASSIFICATION	2.352956794420086E-6	DEFECT
// If there are any arguments and they are not unbounded wildcards, casts can't be checked. //	WITHOUT_CLASSIFICATION	0.9999988294769601	WITHOUT_CLASSIFICATION	1.1705230398942255E-6	DEFECT
// Optimize the performance of applying the import regular  // expressions locating the last import line //      	WITHOUT_CLASSIFICATION	0.9999995622166782	WITHOUT_CLASSIFICATION	4.377833218616241E-7	DEFECT
// Some XML types declare nebulous Object mappings. // They actually map to internal types that shouldn't be generated into code. //	WITHOUT_CLASSIFICATION	0.9973997178656192	WITHOUT_CLASSIFICATION	0.002600282134380774	DEFECT
// If there is a base XML or Ecore type, use one of the two corresponding built-in factories to create a value from the literal string. //	WITHOUT_CLASSIFICATION	0.9999251202303423	WITHOUT_CLASSIFICATION	7.487976965764808E-5	DEFECT
// Get the Java literal expression for the value. //	WITHOUT_CLASSIFICATION	0.9999996810716673	WITHOUT_CLASSIFICATION	3.189283328568642E-7	DEFECT
// Otherwise, produce an expression that uses the appropriate factory to create a value from the literal. //	WITHOUT_CLASSIFICATION	0.9999998115124614	WITHOUT_CLASSIFICATION	1.884875386831796E-7	DEFECT
// If the base package isn't set but there is a parent package, us it's information instead. //	WITHOUT_CLASSIFICATION	0.9999985652557639	WITHOUT_CLASSIFICATION	1.4347442361070626E-6	DEFECT
// Add all classes from this package first, to guarantee they get the // simple names	WITHOUT_CLASSIFICATION	0.9999999942342876	WITHOUT_CLASSIFICATION	5.765712375247965E-9	DEFECT
// Do this here because getExtendedMetaData() is used during initialization  // and the mappings are are populated the first time it's fetched // which will miss the packages we add as we initialize the tree. //	WITHOUT_CLASSIFICATION	0.9999996843025959	WITHOUT_CLASSIFICATION	3.1569740417653946E-7	DEFECT
// Set the mapper to build an XSD2EcoreMappingRoot, if available. //	WITHOUT_CLASSIFICATION	0.9995114161827293	WITHOUT_CLASSIFICATION	4.885838172706641E-4	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.9999940348137776	WITHOUT_CLASSIFICATION	5.9651862224537796E-6	DEFECT
// if there are no groups defined or matched, but the whole pattern matches, // then markup nodes with pattern name //	WITHOUT_CLASSIFICATION	0.9999999789611711	WITHOUT_CLASSIFICATION	2.1038828870124543E-8	DEFECT
// Restore original resource URI values. //	WITHOUT_CLASSIFICATION	0.9999879406943039	WITHOUT_CLASSIFICATION	1.2059305696233927E-5	DEFECT
// The "suffix" can actually be a substitution pattern for the package name. //	WITHOUT_CLASSIFICATION	0.9999947008463828	WITHOUT_CLASSIFICATION	5.299153617331617E-6	DEFECT
// Walk up the superpackages, collecting the package names. // Because empty packages are ommitted from the GenModel, we need to walk up the EPackages. //	WITHOUT_CLASSIFICATION	0.9999988392542576	WITHOUT_CLASSIFICATION	1.1607457423976213E-6	DEFECT
// Any features that delegate to features in this package. //	WITHOUT_CLASSIFICATION	0.9999930242374568	WITHOUT_CLASSIFICATION	6.975762543082096E-6	DEFECT
// If there are delegated features, add only those that aren't already in this package to the end of the list. //	WITHOUT_CLASSIFICATION	0.9999993299979097	WITHOUT_CLASSIFICATION	6.700020901663125E-7	DEFECT
// We need to screen out duplicates in the unlikely event that we have two //  features with the same class-qualified name. We'll only generate one property //  string in that case and let the user add the second one manually, if necessary. //	WITHOUT_CLASSIFICATION	0.9998856882661481	WITHOUT_CLASSIFICATION	1.1431173385189926E-4	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.9999940348137776	WITHOUT_CLASSIFICATION	5.9651862224537796E-6	DEFECT
// source method return type is array (getExceptions), target is not array (i.e. addException)	WITHOUT_CLASSIFICATION	0.9999995248711666	WITHOUT_CLASSIFICATION	4.751288334520753E-7	DEFECT
// We also need to set it on any GenModels holding any used or static packages that may be refered to. //	WITHOUT_CLASSIFICATION	0.9999997074784761	WITHOUT_CLASSIFICATION	2.925215239059416E-7	DEFECT
// We also need to set it on any GenModels holding any used or static packages that may be refered to. //	WITHOUT_CLASSIFICATION	0.9999997074784761	WITHOUT_CLASSIFICATION	2.925215239059416E-7	DEFECT
// And we need to set it on any cached GenModels holding the special Ecore and XML packages. //	WITHOUT_CLASSIFICATION	0.999986672770916	WITHOUT_CLASSIFICATION	1.3327229083913632E-5	DEFECT
// And we need to set it on any cached GenModels holding the special Ecore and XML packages. //	WITHOUT_CLASSIFICATION	0.999986672770916	WITHOUT_CLASSIFICATION	1.3327229083913632E-5	DEFECT
// It's okay for there not be a precompiled template, so fail quietly. // exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999998666259234	WITHOUT_CLASSIFICATION	1.3337407650786637E-7	DEFECT
// If there are any warnings other than raw type warnings, include all the warnings. //	WITHOUT_CLASSIFICATION	0.9998975848354407	WITHOUT_CLASSIFICATION	1.0241516455936634E-4	DEFECT
// Force the project to be setup properly. //	WITHOUT_CLASSIFICATION	0.9999961437302978	WITHOUT_CLASSIFICATION	3.856269702208005E-6	DEFECT
// Force the project to be setup properly. //	WITHOUT_CLASSIFICATION	0.9999961437302978	WITHOUT_CLASSIFICATION	3.856269702208005E-6	DEFECT
// node is not marked up by now, but keep checking other rules 	WITHOUT_CLASSIFICATION	0.9999997865502988	WITHOUT_CLASSIFICATION	2.1344970120772276E-7	DEFECT
// Subclasses may override this method	WITHOUT_CLASSIFICATION	0.9999984299171717	WITHOUT_CLASSIFICATION	1.5700828282573078E-6	DEFECT
// // Tests generation //	WITHOUT_CLASSIFICATION	0.9999998197833244	WITHOUT_CLASSIFICATION	1.8021667558061252E-7	DEFECT
// If we change to pattern defaults, will have to specify plain suffix in no main package case. //	WITHOUT_CLASSIFICATION	0.9999995840211258	WITHOUT_CLASSIFICATION	4.159788741502097E-7	DEFECT
// If we change to pattern defaults, will have to specify plain suffix in no main package case. //	WITHOUT_CLASSIFICATION	0.9999995840211258	WITHOUT_CLASSIFICATION	4.159788741502097E-7	DEFECT
// If we change to pattern defaults, will have to specify plain suffix in no main package case. //	WITHOUT_CLASSIFICATION	0.9999995840211258	WITHOUT_CLASSIFICATION	4.159788741502097E-7	DEFECT
// Subclasses may override this method	WITHOUT_CLASSIFICATION	0.9999984299171717	WITHOUT_CLASSIFICATION	1.5700828282573078E-6	DEFECT
// See if a GenModel is registered for the package's URI, and if so, try to load it. //	WITHOUT_CLASSIFICATION	0.9999998863719436	WITHOUT_CLASSIFICATION	1.1362805647582029E-7	DEFECT
// If that didn't work, just synthesize one. //	WITHOUT_CLASSIFICATION	0.9999878585459436	WITHOUT_CLASSIFICATION	1.2141454056298534E-5	DEFECT
// Different than the Edit and Editor projects, this method is invoked while  // generating the model plugin xml.	WITHOUT_CLASSIFICATION	0.9996154212183213	WITHOUT_CLASSIFICATION	3.845787816786699E-4	DEFECT
// EATM  // Foreign Model	WITHOUT_CLASSIFICATION	0.9999936426964996	WITHOUT_CLASSIFICATION	6.357303500394923E-6	DEFECT
// Any features from one package that delegate to features in another. //	WITHOUT_CLASSIFICATION	0.9999985901813433	WITHOUT_CLASSIFICATION	1.4098186566760218E-6	DEFECT
// If there are features delegating across packages, add only those that aren't already being generated. //	WITHOUT_CLASSIFICATION	0.999999945253457	WITHOUT_CLASSIFICATION	5.474654286955052E-8	DEFECT
// Recompute the read only state. //	WITHOUT_CLASSIFICATION	0.9999984141477123	WITHOUT_CLASSIFICATION	1.5858522877140642E-6	DEFECT
// Refresh any actions that may become enabled or disabled. //	WITHOUT_CLASSIFICATION	0.9969423211307605	WITHOUT_CLASSIFICATION	0.0030576788692393856	DEFECT
// Create the command stack that will notify this editor as commands are executed. //	WITHOUT_CLASSIFICATION	0.9996513038088302	WITHOUT_CLASSIFICATION	3.4869619116980255E-4	DEFECT
// Add a listener to set the most recent command's affected objects to be the selection of the viewer with focus. //	WITHOUT_CLASSIFICATION	0.9999999270769817	WITHOUT_CLASSIFICATION	7.292301823527085E-8	DEFECT
// Try to select the affected objects. //	WITHOUT_CLASSIFICATION	0.99999993727935	WITHOUT_CLASSIFICATION	6.272064995867918E-8	DEFECT
// Create the editing domain with a special command stack. //	WITHOUT_CLASSIFICATION	0.9999366891983547	WITHOUT_CLASSIFICATION	6.33108016453388E-5	DEFECT
// Make sure it's okay. //	WITHOUT_CLASSIFICATION	0.999990232211429	WITHOUT_CLASSIFICATION	9.767788570897222E-6	DEFECT
// Try to select the items in the current content viewer of the editor. //	WITHOUT_CLASSIFICATION	0.9999983866450993	WITHOUT_CLASSIFICATION	1.613354900611949E-6	DEFECT
// If it is changing... //	WITHOUT_CLASSIFICATION	0.9996682763358424	WITHOUT_CLASSIFICATION	3.3172366415751335E-4	DEFECT
// Create the listener on demand. //	WITHOUT_CLASSIFICATION	0.9999991108676913	WITHOUT_CLASSIFICATION	8.891323086442798E-7	DEFECT
// This just notifies those things that are affected by the section. //	WITHOUT_CLASSIFICATION	0.999995700237801	WITHOUT_CLASSIFICATION	4.299762198921304E-6	DEFECT
// Stop listening to the old one. //	WITHOUT_CLASSIFICATION	0.9999993830150699	WITHOUT_CLASSIFICATION	6.169849301134148E-7	DEFECT
// Start listening to the new one. //	WITHOUT_CLASSIFICATION	0.9999995827580975	WITHOUT_CLASSIFICATION	4.17241902540673E-7	DEFECT
// Remember it. //	WITHOUT_CLASSIFICATION	0.9999924173737395	WITHOUT_CLASSIFICATION	7.582626260562482E-6	DEFECT
// Set the editors selection based on the current viewer's selection. //	WITHOUT_CLASSIFICATION	0.999952859762794	WITHOUT_CLASSIFICATION	4.7140237205942496E-5	DEFECT
// Load the resource through the editing domain. //	WITHOUT_CLASSIFICATION	0.999996120429101	WITHOUT_CLASSIFICATION	3.879570898986815E-6	DEFECT
// Creates the model from the editor input //	WITHOUT_CLASSIFICATION	0.9999996360956815	WITHOUT_CLASSIFICATION	3.6390431850621036E-7	DEFECT
// Only creates the other pages if there is something that can be edited //	WITHOUT_CLASSIFICATION	0.999999782712914	WITHOUT_CLASSIFICATION	2.1728708601037875E-7	DEFECT
// Create a page for the selection tree view. //	WITHOUT_CLASSIFICATION	0.9999962470667619	WITHOUT_CLASSIFICATION	3.752933238022538E-6	DEFECT
// Ensures that this editor will only display the page's tab // area if there are more than one page //	WITHOUT_CLASSIFICATION	0.9999983097631826	WITHOUT_CLASSIFICATION	1.6902368173782775E-6	DEFECT
// The content outline is just a tree. //	WITHOUT_CLASSIFICATION	0.9999998753384842	WITHOUT_CLASSIFICATION	1.2466151579040114E-7	DEFECT
// Set up the tree viewer. //	WITHOUT_CLASSIFICATION	0.9999983994774432	WITHOUT_CLASSIFICATION	1.6005225568662645E-6	DEFECT
// Make sure our popups work. //	WITHOUT_CLASSIFICATION	0.9997906627920294	WITHOUT_CLASSIFICATION	2.093372079704637E-4	DEFECT
// Select the root object in the view. //	WITHOUT_CLASSIFICATION	0.9999047751717217	WITHOUT_CLASSIFICATION	9.522482827820044E-5	DEFECT
// Listen to selection so that we can handle it is a special way. //	WITHOUT_CLASSIFICATION	0.9999993346997945	WITHOUT_CLASSIFICATION	6.653002054060245E-7	DEFECT
// This ensures that we handle selections correctly. //	WITHOUT_CLASSIFICATION	0.9990124714797155	WITHOUT_CLASSIFICATION	9.875285202844328E-4	DEFECT
// Get the first selected element. //	WITHOUT_CLASSIFICATION	0.9999999820409388	WITHOUT_CLASSIFICATION	1.7959061185449528E-8	DEFECT
// log the error, ignore the change and continue	WITHOUT_CLASSIFICATION	0.9999999599429958	WITHOUT_CLASSIFICATION	4.005700416391787E-8	DEFECT
// Save the resources to the file system. //	WITHOUT_CLASSIFICATION	0.999991520970153	WITHOUT_CLASSIFICATION	8.479029846996282E-6	DEFECT
// Set the selection to the widget. //	WITHOUT_CLASSIFICATION	0.999948194433829	WITHOUT_CLASSIFICATION	5.180556617089397E-5	DEFECT
// Do the work within an operation because this is a long running activity that modifies the workbench. //	WITHOUT_CLASSIFICATION	0.9999926175549257	WITHOUT_CLASSIFICATION	7.382445074256502E-6	DEFECT
// Save only resources that have actually changed. //	WITHOUT_CLASSIFICATION	0.9999867728494876	WITHOUT_CLASSIFICATION	1.32271505124688E-5	DEFECT
// This is the method that gets invoked when the operation runs. //	WITHOUT_CLASSIFICATION	0.9999991627927581	WITHOUT_CLASSIFICATION	8.372072419409931E-7	DEFECT
// loop for all commented out nodes	WITHOUT_CLASSIFICATION	0.9999976425637874	WITHOUT_CLASSIFICATION	2.3574362125446466E-6	DEFECT
// Do the work within an operation because this is a long running activity that modifies the workbench. //	WITHOUT_CLASSIFICATION	0.9999926175549257	WITHOUT_CLASSIFICATION	7.382445074256502E-6	DEFECT
// Refresh the necessary state. //	WITHOUT_CLASSIFICATION	0.9999980493729441	WITHOUT_CLASSIFICATION	1.9506270558937E-6	DEFECT
// This runs the options, and shows progress. //	WITHOUT_CLASSIFICATION	0.9999837056647809	WITHOUT_CLASSIFICATION	1.629433521918323E-5	DEFECT
// insert line break and comment out the first line if needed // note that first line might move backward beyond node start (e.g. if a comma of the previous enum constant has been commented out)	WITHOUT_CLASSIFICATION	0.9999986157029013	WITHOUT_CLASSIFICATION	1.3842970987081791E-6	DEFECT
// Something went wrong that shouldn't. //	WITHOUT_CLASSIFICATION	0.9985472413057587	WITHOUT_CLASSIFICATION	0.0014527586942412842	DEFECT
// Nothing to do	WITHOUT_CLASSIFICATION	0.9999980023596465	WITHOUT_CLASSIFICATION	1.9976403534201532E-6	DEFECT
// This is the method that gets invoked when the operation runs. //	WITHOUT_CLASSIFICATION	0.9999991627927581	WITHOUT_CLASSIFICATION	8.372072419409931E-7	DEFECT
// Something went wrong that shouldn't. //	WITHOUT_CLASSIFICATION	0.9985472413057587	WITHOUT_CLASSIFICATION	0.0014527586942412842	DEFECT
// Stop only on cancel. //	WITHOUT_CLASSIFICATION	0.9999920042625099	WITHOUT_CLASSIFICATION	7.995737490025102E-6	DEFECT
// insert line break at the first line if there is something before the node start and the beginning of the line	WITHOUT_CLASSIFICATION	0.9999999947703847	WITHOUT_CLASSIFICATION	5.229615379944169E-9	DEFECT
// Switch to the new selection provider. //	WITHOUT_CLASSIFICATION	0.9999860197404127	WITHOUT_CLASSIFICATION	1.398025958735914E-5	DEFECT
// Fake a selection changed event to update the menus. //	WITHOUT_CLASSIFICATION	0.9999974341564656	WITHOUT_CLASSIFICATION	2.5658435344230097E-6	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999946923429	WITHOUT_CLASSIFICATION	5.307657104793272E-9	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999986414502402	WITHOUT_CLASSIFICATION	1.3585497598851668E-6	DEFECT
//Class/genFeature.override.javajetinc //for	WITHOUT_CLASSIFICATION	0.9999999562509626	WITHOUT_CLASSIFICATION	4.374903728290774E-8	DEFECT
// Kick of a Java build if not already in a build. //	WITHOUT_CLASSIFICATION	0.9998927532740384	WITHOUT_CLASSIFICATION	1.0724672596172016E-4	DEFECT
//Class/implementedGenOperation.override.javajetinc //for	WITHOUT_CLASSIFICATION	0.9999999886402458	WITHOUT_CLASSIFICATION	1.1359754292730432E-8	DEFECT
// do not add a new line if there is one	WITHOUT_CLASSIFICATION	0.9999990225110028	WITHOUT_CLASSIFICATION	9.774889971698716E-7	DEFECT
// This call should get the files checked out from version control if the project is a 'team' project. //	WITHOUT_CLASSIFICATION	0.9999942617958405	WITHOUT_CLASSIFICATION	5.738204159548508E-6	DEFECT
// there is only whitespace on this line - no need for line break	WITHOUT_CLASSIFICATION	0.9999814808213218	WITHOUT_CLASSIFICATION	1.85191786782288E-5	DEFECT
// Check which directive it is. //	WITHOUT_CLASSIFICATION	0.9999997783858824	WITHOUT_CLASSIFICATION	2.2161411760893224E-7	DEFECT
//reader.reset(start); //return false;	WITHOUT_CLASSIFICATION	0.9999997540736068	WITHOUT_CLASSIFICATION	2.4592639328487367E-7	DEFECT
// Parse the attr-val pairs. //	WITHOUT_CLASSIFICATION	0.9999996826040101	WITHOUT_CLASSIFICATION	3.1739598991380205E-7	DEFECT
// If the template path points at a project with a JET Nature,  // then we will assume that the templates we want to use are already compiled in this plugin Java project. // 	WITHOUT_CLASSIFICATION	0.9999985732571159	WITHOUT_CLASSIFICATION	1.426742884014917E-6	DEFECT
// Compute the URL for where the classes for this project will be located. //	WITHOUT_CLASSIFICATION	0.9999972343408278	WITHOUT_CLASSIFICATION	2.7656591721666357E-6	DEFECT
// Compute the URLs for all the output folder of all the project dependencies. //	WITHOUT_CLASSIFICATION	0.9999974354585136	WITHOUT_CLASSIFICATION	2.5645414863210607E-6	DEFECT
// Define a class loader that will look in the URLs first,  // and if it doesn't find the class there, uses the emitter's loader. //	WITHOUT_CLASSIFICATION	0.9999831532866273	WITHOUT_CLASSIFICATION	1.6846713372641027E-5	DEFECT
// Define a class loader that will look up the class in the bundle, // and if it doesn't find it there, will look in the parent. //	WITHOUT_CLASSIFICATION	0.9999739535648448	WITHOUT_CLASSIFICATION	2.6046435155237403E-5	DEFECT
// Strip off the trailing "_" and load that class. //	WITHOUT_CLASSIFICATION	0.9999999419205212	WITHOUT_CLASSIFICATION	5.8079478711251965E-8	DEFECT
// Check that the class is actually different from the one that's directly visible to the JETEmitter. //	WITHOUT_CLASSIFICATION	0.9999972417287118	WITHOUT_CLASSIFICATION	2.758271288232835E-6	DEFECT
// Don't do any of the other normally dynamic JETEmitter project processing. //	WITHOUT_CLASSIFICATION	0.9999971118469253	WITHOUT_CLASSIFICATION	2.8881530747164467E-6	DEFECT
// Get the existing classpath and remove the project root if necessary. // Any new non-duplicate entries will be added to this. //	WITHOUT_CLASSIFICATION	0.9999991594207157	WITHOUT_CLASSIFICATION	8.405792842102663E-7	DEFECT
// Add the new entries, including source, JRE container, and added variables and classpath containers.  //	WITHOUT_CLASSIFICATION	0.9999999934485367	WITHOUT_CLASSIFICATION	6.551463274100332E-9	DEFECT
// Construct a proper URL for relative lookup. //	WITHOUT_CLASSIFICATION	0.9999983793733837	WITHOUT_CLASSIFICATION	1.6206266163497981E-6	DEFECT
// Determine all the bundles that this project depends on. //	WITHOUT_CLASSIFICATION	0.9999833834926731	WITHOUT_CLASSIFICATION	1.661650732691386E-5	DEFECT
// If it doesn't correspond to a bundle, then try to process it as a project in the workspace. //	WITHOUT_CLASSIFICATION	0.935153849185122	WITHOUT_CLASSIFICATION	0.06484615081487805	DEFECT
// Add JETBuilder //	WITHOUT_CLASSIFICATION	0.9999989667661127	WITHOUT_CLASSIFICATION	1.0332338873022047E-6	DEFECT
// Create .jetproperties file //	WITHOUT_CLASSIFICATION	0.9999998094860448	WITHOUT_CLASSIFICATION	1.9051395519599927E-7	DEFECT
// clone includeStack without cloning contents //	WITHOUT_CLASSIFICATION	0.9999999598727585	WITHOUT_CLASSIFICATION	4.01272414314915E-8	DEFECT
// Store the current state in stack. //	WITHOUT_CLASSIFICATION	0.9999980802150401	WITHOUT_CLASSIFICATION	1.9197849599444553E-6	DEFECT
// Set the new variables. //	WITHOUT_CLASSIFICATION	0.9999999285221582	WITHOUT_CLASSIFICATION	7.147784171652278E-8	DEFECT
// Make sure we have something to pop. //	WITHOUT_CLASSIFICATION	0.9999962539756605	WITHOUT_CLASSIFICATION	3.746024339475526E-6	DEFECT
// Get previous state in stack. //	WITHOUT_CLASSIFICATION	0.9999996040116725	WITHOUT_CLASSIFICATION	3.959883274945797E-7	DEFECT
// Until the encoding can be specified within the template  // we need to assume an encoding capable of working with any character set.	WITHOUT_CLASSIFICATION	0.99999989204847	WITHOUT_CLASSIFICATION	1.0795153009967803E-7	DEFECT
// Register the file, and read its content: //	WITHOUT_CLASSIFICATION	0.9999735210135593	WITHOUT_CLASSIFICATION	2.647898644066839E-5	DEFECT
// Is stack created ? (will happen if the JET file we're looking at is missing. //	WITHOUT_CLASSIFICATION	0.9999807195152741	WITHOUT_CLASSIFICATION	1.9280484725982658E-5	DEFECT
// Restore parser state: //	WITHOUT_CLASSIFICATION	0.9997353091564237	WITHOUT_CLASSIFICATION	2.646908435763166E-4	DEFECT
// Consume the open quote: //	WITHOUT_CLASSIFICATION	0.9999979046918122	WITHOUT_CLASSIFICATION	2.0953081878636892E-6	DEFECT
// Check end of quote, skip closing quote: //	WITHOUT_CLASSIFICATION	0.9999997900717233	WITHOUT_CLASSIFICATION	2.099282766371262E-7	DEFECT
// Get the attribute name: //	WITHOUT_CLASSIFICATION	0.9999994887047058	WITHOUT_CLASSIFICATION	5.112952941574784E-7	DEFECT
// Check for an equal sign: //	WITHOUT_CLASSIFICATION	0.9999986589041207	WITHOUT_CLASSIFICATION	1.3410958794076045E-6	DEFECT
// Get the attribute value: //	WITHOUT_CLASSIFICATION	0.999998876573821	WITHOUT_CLASSIFICATION	1.123426178942578E-6	DEFECT
// insert line break if there is non-whitespace before end of the line	WITHOUT_CLASSIFICATION	0.9999998208753922	WITHOUT_CLASSIFICATION	1.7912460789427612E-7	DEFECT
// End of the useBean tag. //	WITHOUT_CLASSIFICATION	0.9999939677410317	WITHOUT_CLASSIFICATION	6.03225896837705E-6	DEFECT
// XMLesque Close tags //	WITHOUT_CLASSIFICATION	0.9999600966663399	WITHOUT_CLASSIFICATION	3.9903333660121824E-5	DEFECT
// Parse as an attribute=value: //	WITHOUT_CLASSIFICATION	0.9999983008367023	WITHOUT_CLASSIFICATION	1.6991632977011111E-6	DEFECT
// Reached EOF: //	WITHOUT_CLASSIFICATION	0.9999762989908827	WITHOUT_CLASSIFICATION	2.370100911738063E-5	DEFECT
// Look for an end-of-comment or end-of-tag: //	WITHOUT_CLASSIFICATION	0.9999647673069828	WITHOUT_CLASSIFICATION	3.523269301715274E-5	DEFECT
// The include succeeded, so if there is an alternative and we're not skipping, we need to start. //	WITHOUT_CLASSIFICATION	0.9999999973127166	WITHOUT_CLASSIFICATION	2.687283320063334E-9	DEFECT
// If a newline from the previous character data remains, leave it around to be processed as if it appeared in the included file. //	WITHOUT_CLASSIFICATION	0.9999999378721766	WITHOUT_CLASSIFICATION	6.212782340225745E-8	DEFECT
// The include failed, so if there is an alternative, we don't skip it. //	WITHOUT_CLASSIFICATION	0.9999999630617342	WITHOUT_CLASSIFICATION	3.693826578960702E-8	DEFECT
// A section is not allowed without a preceding include with alternative. //	WITHOUT_CLASSIFICATION	0.9994458779023767	WITHOUT_CLASSIFICATION	5.541220976232266E-4	DEFECT
// This pop is safe because a section couldn't have been started without an include that pushed. //	WITHOUT_CLASSIFICATION	0.9993822416168819	WITHOUT_CLASSIFICATION	6.177583831180029E-4	DEFECT
// Process this first. //	WITHOUT_CLASSIFICATION	0.9999993712303872	WITHOUT_CLASSIFICATION	6.287696128199214E-7	DEFECT
// Ignore this now //	WITHOUT_CLASSIFICATION	0.9999995930742276	WITHOUT_CLASSIFICATION	4.0692577233719E-7	DEFECT
// If a newline from the previous character data remains, add a generator for it. //	WITHOUT_CLASSIFICATION	0.9999995704393542	WITHOUT_CLASSIFICATION	4.2956064586411845E-7	DEFECT
// An expression with more that 931 "+" will break Sun and IBM javac compilers. //	WITHOUT_CLASSIFICATION	0.9999726432490748	WITHOUT_CLASSIFICATION	2.7356750925125934E-5	DEFECT
// Register our directive. //	WITHOUT_CLASSIFICATION	0.9999987407805847	WITHOUT_CLASSIFICATION	1.2592194153094518E-6	DEFECT
// Ignore it if there are multiple comments. //	WITHOUT_CLASSIFICATION	0.9999999700901673	WITHOUT_CLASSIFICATION	2.990983276629004E-8	DEFECT
// Three arguments are expected: the .xml jControlModel URI, the source java URI, and the target java URI. //	WITHOUT_CLASSIFICATION	0.9999998513959364	WITHOUT_CLASSIFICATION	1.4860406350690109E-7	DEFECT
// Create the source and target JDOMs. //	WITHOUT_CLASSIFICATION	0.99999997325425	WITHOUT_CLASSIFICATION	2.6745749947794957E-8	DEFECT
// Create a pattern dictionary for each. //	WITHOUT_CLASSIFICATION	0.9999454439231723	WITHOUT_CLASSIFICATION	5.455607682765566E-5	DEFECT
//  We expect this failure when running stand-alone //	WITHOUT_CLASSIFICATION	0.9997087687235005	WITHOUT_CLASSIFICATION	2.9123127649952475E-4	DEFECT
// JControlModel.class is used with classNames that were not found //	WITHOUT_CLASSIFICATION	0.9999983745637108	WITHOUT_CLASSIFICATION	1.6254362893234336E-6	DEFECT
// Ignore the further-most javadoc //	WITHOUT_CLASSIFICATION	0.9999999984938309	WITHOUT_CLASSIFICATION	1.5061690688601236E-9	DEFECT
// retrieve source node corresponding to target //	WITHOUT_CLASSIFICATION	0.9999997690839079	WITHOUT_CLASSIFICATION	2.3091609213573106E-7	DEFECT
// convert the target node to a compatible node //	WITHOUT_CLASSIFICATION	0.9999999978767037	WITHOUT_CLASSIFICATION	2.123296305751705E-9	DEFECT
// There must be at least one match. //	WITHOUT_CLASSIFICATION	0.9999982317914305	WITHOUT_CLASSIFICATION	1.7682085693747474E-6	DEFECT
// Ignore if there is not substantial change. //	WITHOUT_CLASSIFICATION	0.9999998985060509	WITHOUT_CLASSIFICATION	1.0149394910007952E-7	DEFECT
// Create the options model. //	WITHOUT_CLASSIFICATION	0.999999752015483	WITHOUT_CLASSIFICATION	2.4798451705107577E-7	DEFECT
// Create a pattern dictionary for each. //	WITHOUT_CLASSIFICATION	0.9999454439231723	WITHOUT_CLASSIFICATION	5.455607682765566E-5	DEFECT
// retrieve source node corresponding to target //	WITHOUT_CLASSIFICATION	0.9999997690839079	WITHOUT_CLASSIFICATION	2.3091609213573106E-7	DEFECT
// convert the target node to a compatible node //	WITHOUT_CLASSIFICATION	0.9999999978767037	WITHOUT_CLASSIFICATION	2.123296305751705E-9	DEFECT
// Method created to increase the performance of regular expressions // by reducing the length of the string that is matched. //	WITHOUT_CLASSIFICATION	0.9999999323851373	WITHOUT_CLASSIFICATION	6.761486279636734E-8	DEFECT
// Skip if there's an equality filter and the values aren't equal. //	WITHOUT_CLASSIFICATION	0.9999971931290037	WITHOUT_CLASSIFICATION	2.8068709963369827E-6	DEFECT
// The methods were matched by a process that doesn't consider the // parameters	WITHOUT_CLASSIFICATION	0.9999776570213645	WITHOUT_CLASSIFICATION	2.2342978635448666E-5	DEFECT
// Don't push method annotations into redirected methods. //	WITHOUT_CLASSIFICATION	0.9999914460850716	WITHOUT_CLASSIFICATION	8.553914928396684E-6	DEFECT
// Three arguments are expected: the .xml getControlModel() URI, the source java URI, and the target java URI. //	WITHOUT_CLASSIFICATION	0.9999995976412339	WITHOUT_CLASSIFICATION	4.0235876608036446E-7	DEFECT
// Create the source and target JCompilationUnit. //	WITHOUT_CLASSIFICATION	0.9999999980243417	WITHOUT_CLASSIFICATION	1.975658277103317E-9	DEFECT
// apply changes using ASTRewrite //	WITHOUT_CLASSIFICATION	0.9999999953070541	WITHOUT_CLASSIFICATION	4.6929459357668235E-9	DEFECT
// apply additional edits like replacing or commenting out nodes //	WITHOUT_CLASSIFICATION	0.9999193028548019	WITHOUT_CLASSIFICATION	8.06971451981553E-5	DEFECT
// if the node is less than 1 line long, but its contents is replaced by multiple lines, // comment out each line in it	WITHOUT_CLASSIFICATION	0.9999999837896835	WITHOUT_CLASSIFICATION	1.6210316565007308E-8	DEFECT
// replace existing InsertEdit at this position // (case when previous node ends at the same position that current node starts at)	WITHOUT_CLASSIFICATION	0.9999110533315166	WITHOUT_CLASSIFICATION	8.89466684833549E-5	DEFECT
// create and try to add dummy edit to find the ReplaceEdit // this should be faster than lookup since underneath of addChild() binary search is used	WITHOUT_CLASSIFICATION	0.9999822252079612	WITHOUT_CLASSIFICATION	1.7774792038751564E-5	DEFECT
// caching parser does not parse 2nd file in the same way (javadoc of package for example) // hence, new parser is created every time this method is called	WITHOUT_CLASSIFICATION	0.9999458050811806	WITHOUT_CLASSIFICATION	5.419491881938935E-5	DEFECT
// adding 'at' allows distinguish annotations from other members // (i.e. inner class verses annotation of a class) //	WITHOUT_CLASSIFICATION	0.9999987924209995	WITHOUT_CLASSIFICATION	1.207579000476358E-6	DEFECT
// find insertion point from returned result (-(insertion point) - 1) // commentIndex is the index of the first element with end position > rangeEndPos	WITHOUT_CLASSIFICATION	0.999999816840205	WITHOUT_CLASSIFICATION	1.8315979501819478E-7	DEFECT
// find insertion point from returned result (-(insertion point) - 1) // commentIndex is an index of the first element that has start position > rangeStartPos 	WITHOUT_CLASSIFICATION	0.9999996110268503	WITHOUT_CLASSIFICATION	3.8897314967804157E-7	DEFECT
// extend to include the comment at the same line as the position  // if there is nothing between the position and the comment	WITHOUT_CLASSIFICATION	0.9999999596089655	WITHOUT_CLASSIFICATION	4.0391034608037696E-8	DEFECT
// there is anything else but comma after constant - insert line break	WITHOUT_CLASSIFICATION	0.9998039748914687	WITHOUT_CLASSIFICATION	1.9602510853136302E-4	DEFECT
// we don't want to include the line comments immediately before an import in the  // returned range	WITHOUT_CLASSIFICATION	0.9999996114769139	WITHOUT_CLASSIFICATION	3.8852308607168536E-7	DEFECT
// since enum constants are separated by commas, they should always have the default range // we can not extend their range or reduce it	WITHOUT_CLASSIFICATION	0.9999999388635191	WITHOUT_CLASSIFICATION	6.113648087419882E-8	DEFECT
// check if given node should use the default range (i.e. node removed), // or extended range (i.e. surrounding nodes removed)	WITHOUT_CLASSIFICATION	0.9999984584212256	WITHOUT_CLASSIFICATION	1.5415787744470643E-6	DEFECT
// replace arguments that match the name of the fields with the initializer value of the field //	WITHOUT_CLASSIFICATION	0.9999999956961875	WITHOUT_CLASSIFICATION	4.303812485539277E-9	DEFECT
// move all children to the type, converting enum constants to fields // // fields that are created by conversion from enum constants must be inserted after // the last final field that is used in constructors for initializers	WITHOUT_CLASSIFICATION	0.9999999998935225	WITHOUT_CLASSIFICATION	1.0647744698252727E-10	DEFECT
// Three arguments are expected: the .xml jControlModel URI, the source java URI, and the target java URI. //	WITHOUT_CLASSIFICATION	0.9999998513959364	WITHOUT_CLASSIFICATION	1.4860406350690109E-7	DEFECT
// Create the source and target JDOMs. //	WITHOUT_CLASSIFICATION	0.99999997325425	WITHOUT_CLASSIFICATION	2.6745749947794957E-8	DEFECT
// indicate that initializer has been changed // (required to not overwrite initializer if variables are split later)	WITHOUT_CLASSIFICATION	0.999999990455776	WITHOUT_CLASSIFICATION	9.544224092750827E-9	DEFECT
// lower all except the last upper case character if there are // more than one upper case characters in the beginning. // e.g. XSDElementContent -> xsdElementContent // However if the whole string is upper case, the whole string // is turned into lower case. // e.g. CPU -> cpu	WITHOUT_CLASSIFICATION	0.9999999999155992	WITHOUT_CLASSIFICATION	8.440080972464106E-11	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999986414502402	WITHOUT_CLASSIFICATION	1.3585497598851668E-6	DEFECT
// Don't do replacement if we just did one, or if previous line // ended with a semicolon. //	WITHOUT_CLASSIFICATION	0.9999999532730363	WITHOUT_CLASSIFICATION	4.672696380910315E-8	DEFECT
// Don't do replacement if previous line ended with a comment. //	WITHOUT_CLASSIFICATION	0.9999992479093066	WITHOUT_CLASSIFICATION	7.520906933870801E-7	DEFECT
// If the path isn't within the root of the archive,  // create a new URI for the folder location of the archive,  // so we can look in the folder that contains it. //	WITHOUT_CLASSIFICATION	0.9999809490145517	WITHOUT_CLASSIFICATION	1.9050985448382112E-5	DEFECT
// Trim off the "bin" or "runtime" segment. //	WITHOUT_CLASSIFICATION	0.9999972864949697	WITHOUT_CLASSIFICATION	2.713505030407067E-6	DEFECT
// Platform.resolve() doesn't work if the project is encoded. //	WITHOUT_CLASSIFICATION	0.9997752378998361	WITHOUT_CLASSIFICATION	2.2476210016386067E-4	DEFECT
// There needs to be another URL protocol right after the archive protocol, and not a "/". //	WITHOUT_CLASSIFICATION	0.9998399787815493	WITHOUT_CLASSIFICATION	1.6002121845069465E-4	DEFECT
// There must be at least one archive path. //	WITHOUT_CLASSIFICATION	0.9999990533076116	WITHOUT_CLASSIFICATION	9.466923884878584E-7	DEFECT
// There must be at least one archive path. //	WITHOUT_CLASSIFICATION	0.9999990533076116	WITHOUT_CLASSIFICATION	9.466923884878584E-7	DEFECT
// Parse to count the archive paths that must will be delegated to the nested URL based on the number of schemes at the start. //	WITHOUT_CLASSIFICATION	0.9999881422481952	WITHOUT_CLASSIFICATION	1.185775180483301E-5	DEFECT
// There should be at least one archive separator per scheme. //	WITHOUT_CLASSIFICATION	0.9999961744475879	WITHOUT_CLASSIFICATION	3.825552412128772E-6	DEFECT
// Parse to extract the archives that will be delegated to the nested URL based on the number of schemes at the start. //	WITHOUT_CLASSIFICATION	0.999983461715331	WITHOUT_CLASSIFICATION	1.653828466890931E-5	DEFECT
// Skip a scheme for the archive accessor to be handled directly here. //	WITHOUT_CLASSIFICATION	0.999997433836028	WITHOUT_CLASSIFICATION	2.5661639719709077E-6	DEFECT
// Skip an archive accessor to be handled by delegation to the scheme in nested URL. //	WITHOUT_CLASSIFICATION	0.999999979260493	WITHOUT_CLASSIFICATION	2.073950704739101E-8	DEFECT
// Create the delegate URL. //	WITHOUT_CLASSIFICATION	0.9999999232214887	WITHOUT_CLASSIFICATION	7.677851142138403E-8	DEFECT
// The cutoff point to the next archive. //	WITHOUT_CLASSIFICATION	0.9999994698758494	WITHOUT_CLASSIFICATION	5.301241506150982E-7	DEFECT
// The cutoff point to the next archive. //	WITHOUT_CLASSIFICATION	0.9999994698758494	WITHOUT_CLASSIFICATION	5.301241506150982E-7	DEFECT
// Construct the input stream in a special efficient way for case of a file scheme. //	WITHOUT_CLASSIFICATION	0.9999999474749673	WITHOUT_CLASSIFICATION	5.252503267959399E-8	DEFECT
// Just get the stream from the URL. //	WITHOUT_CLASSIFICATION	0.9999951134931431	WITHOUT_CLASSIFICATION	4.8865068569803754E-6	DEFECT
// The name to be used for the entry. //	WITHOUT_CLASSIFICATION	0.9999996356275035	WITHOUT_CLASSIFICATION	3.6437249644797765E-7	DEFECT
// Skip over this archive path to the next one, since we are handling this one special. //	WITHOUT_CLASSIFICATION	0.9999997487626466	WITHOUT_CLASSIFICATION	2.512373532913002E-7	DEFECT
// Loop over the archive paths. //	WITHOUT_CLASSIFICATION	0.9999999675703276	WITHOUT_CLASSIFICATION	3.242967234829145E-8	DEFECT
// The entry name to be matched. //	WITHOUT_CLASSIFICATION	0.999993455376525	WITHOUT_CLASSIFICATION	6.544623475098581E-6	DEFECT
// Wrap the input stream as a zip stream to scan it's contents for a match. //	WITHOUT_CLASSIFICATION	0.9999999407786742	WITHOUT_CLASSIFICATION	5.922132591682751E-8	DEFECT
// Skip to the next archive path and continue the loop. //	WITHOUT_CLASSIFICATION	0.9999977324848462	WITHOUT_CLASSIFICATION	2.267515153741111E-6	DEFECT
// Create the delegate URL //	WITHOUT_CLASSIFICATION	0.9999999693910725	WITHOUT_CLASSIFICATION	3.060892753997565E-8	DEFECT
// Create a temporary file where the existing contents of the archive can be written  // before the new contents are added. //	WITHOUT_CLASSIFICATION	0.9999999926048295	WITHOUT_CLASSIFICATION	7.395170405667352E-9	DEFECT
// Record the input and output streams for closing in case of failure so that handles are not left open. //	WITHOUT_CLASSIFICATION	0.9996225022549796	WITHOUT_CLASSIFICATION	3.7749774502035955E-4	DEFECT
// Create the output stream to the temporary file and the input stream for the delegate URL. //	WITHOUT_CLASSIFICATION	0.9999999977212839	WITHOUT_CLASSIFICATION	2.2787161999141095E-9	DEFECT
// The most deeply nested output stream that will be returned wrapped as the result. //	WITHOUT_CLASSIFICATION	0.9999907752425194	WITHOUT_CLASSIFICATION	9.224757480500987E-6	DEFECT
// A buffer for transferring archive contents. //	WITHOUT_CLASSIFICATION	0.9999998493043053	WITHOUT_CLASSIFICATION	1.5069569460377685E-7	DEFECT
// We expect there to be at least one archive path. //	WITHOUT_CLASSIFICATION	0.9999905014968271	WITHOUT_CLASSIFICATION	9.498503172885676E-6	DEFECT
// The name that will be used as the archive entry. //	WITHOUT_CLASSIFICATION	0.9999985771188616	WITHOUT_CLASSIFICATION	1.4228811383782387E-6	DEFECT
// Wrap the current result as a zip stream, and record it for loop-based recursion. //	WITHOUT_CLASSIFICATION	0.9999960984795714	WITHOUT_CLASSIFICATION	3.901520428682016E-6	DEFECT
// Wrap the current input as a zip stream, and record it for loop-based recursion. //	WITHOUT_CLASSIFICATION	0.9999981098095323	WITHOUT_CLASSIFICATION	1.8901904676586377E-6	DEFECT
// Loop over the entries in the zip stream. //	WITHOUT_CLASSIFICATION	0.9999998509451226	WITHOUT_CLASSIFICATION	1.4905487748593485E-7	DEFECT
// Transfer the entry and its contents. //	WITHOUT_CLASSIFICATION	0.9999992601924533	WITHOUT_CLASSIFICATION	7.398075466582262E-7	DEFECT
// Find the next archive path and continue "recursively" if there is one. //	WITHOUT_CLASSIFICATION	0.9999990693148734	WITHOUT_CLASSIFICATION	9.306851266610285E-7	DEFECT
// Create no entry since we are deleting and return immediately. //	WITHOUT_CLASSIFICATION	0.9999999656935995	WITHOUT_CLASSIFICATION	3.4306400477461174E-8	DEFECT
// Create a new or replaced entry and continue processing the remaining archives. //	WITHOUT_CLASSIFICATION	0.9999999479242477	WITHOUT_CLASSIFICATION	5.2075752302484144E-8	DEFECT
// Ensure that it won't be closed in the finally block. //	WITHOUT_CLASSIFICATION	0.9999917277165848	WITHOUT_CLASSIFICATION	8.27228341523271E-6	DEFECT
// Wrap the deepest result so that on close, the results are finally transferred. //	WITHOUT_CLASSIFICATION	0.9999998921755259	WITHOUT_CLASSIFICATION	1.0782447411808804E-7	DEFECT
// Make sure we close only once. //	WITHOUT_CLASSIFICATION	0.9999991309500005	WITHOUT_CLASSIFICATION	8.690499994248828E-7	DEFECT
// Close for real so that the temporary file is ready to be read. //	WITHOUT_CLASSIFICATION	0.9999998570388368	WITHOUT_CLASSIFICATION	1.429611632009657E-7	DEFECT
// Make sure they are closed no matter what bad thing happens. //	WITHOUT_CLASSIFICATION	0.9999995422712307	WITHOUT_CLASSIFICATION	4.5772876932297127E-7	DEFECT
// Close in case of failure to complete. //	WITHOUT_CLASSIFICATION	0.9999977121595538	WITHOUT_CLASSIFICATION	2.28784044628639E-6	DEFECT
// Close if we created this. //	WITHOUT_CLASSIFICATION	0.999999989103547	WITHOUT_CLASSIFICATION	1.0896452861709741E-8	DEFECT
// Go through the commands of the list. //	WITHOUT_CLASSIFICATION	0.9999952905424683	WITHOUT_CLASSIFICATION	4.709457531765224E-6	DEFECT
// If there are some... //	WITHOUT_CLASSIFICATION	0.999980959953387	WITHOUT_CLASSIFICATION	1.9040046613032516E-5	DEFECT
// The termination guard is in the body. //	WITHOUT_CLASSIFICATION	0.9999929993354493	WITHOUT_CLASSIFICATION	7.000664550845722E-6	DEFECT
// We can't undo it, so we'd better give up. //	WITHOUT_CLASSIFICATION	0.9999976232921083	WITHOUT_CLASSIFICATION	2.3767078916407008E-6	DEFECT
// Now is the best time to record isUndoable because later we would have to do all the executes again! // This makes canUndo very simple! //	WITHOUT_CLASSIFICATION	0.99974789742927	WITHOUT_CLASSIFICATION	2.521025707299546E-4	DEFECT
// If we can't execute this one, we just can't do it at all. //	WITHOUT_CLASSIFICATION	0.9999936226779128	WITHOUT_CLASSIFICATION	6.3773220871611684E-6	DEFECT
// If we are pessimistic, then we need to undo all the commands that we have executed so far. //	WITHOUT_CLASSIFICATION	0.9996910536810609	WITHOUT_CLASSIFICATION	3.089463189390719E-4	DEFECT
// The most recently processed command will never have been executed. //	WITHOUT_CLASSIFICATION	0.9999767136848152	WITHOUT_CLASSIFICATION	2.328631518481441E-5	DEFECT
// We want to unroll all the effects of the previous commands. //	WITHOUT_CLASSIFICATION	0.99995882153708	WITHOUT_CLASSIFICATION	4.117846292004769E-5	DEFECT
// Skip over the command that threw the exception. //	WITHOUT_CLASSIFICATION	0.9999569496707004	WITHOUT_CLASSIFICATION	4.305032929962525E-5	DEFECT
// Iterate back over the executed commands to undo them. //	WITHOUT_CLASSIFICATION	0.9999976567515654	WITHOUT_CLASSIFICATION	2.3432484345265623E-6	DEFECT
// If the command is executable, record and execute it. //	WITHOUT_CLASSIFICATION	0.9997052065165278	WITHOUT_CLASSIFICATION	2.947934834721813E-4	DEFECT
// Clear the list past the top. //	WITHOUT_CLASSIFICATION	0.999999824275151	WITHOUT_CLASSIFICATION	1.7572484891859434E-7	DEFECT
// Record the successfully executed command. //	WITHOUT_CLASSIFICATION	0.9999767744611464	WITHOUT_CLASSIFICATION	2.3225538853654536E-5	DEFECT
// note that string place holder adjusts indentation // to correct this trackAndReplace method is used below	WITHOUT_CLASSIFICATION	0.9999964199057219	WITHOUT_CLASSIFICATION	3.5800942781555555E-6	DEFECT
// Iterate back over the executed commands to undo them. //	WITHOUT_CLASSIFICATION	0.9999976567515654	WITHOUT_CLASSIFICATION	2.3432484345265623E-6	DEFECT
// Clear the list past the top. //	WITHOUT_CLASSIFICATION	0.999999824275151	WITHOUT_CLASSIFICATION	1.7572484891859434E-7	DEFECT
// This forces isSaveNeded to always be true. //	WITHOUT_CLASSIFICATION	0.9999956518908169	WITHOUT_CLASSIFICATION	4.348109183098283E-6	DEFECT
// Clear the list. //	WITHOUT_CLASSIFICATION	0.9999999688889997	WITHOUT_CLASSIFICATION	3.1111000320180075E-8	DEFECT
//  Remember where we are now. //	WITHOUT_CLASSIFICATION	0.9999984277514294	WITHOUT_CLASSIFICATION	1.5722485705508642E-6	DEFECT
// Only if we are at the remembered index do we NOT need to save. // //return top != saveIndex;	WITHOUT_CLASSIFICATION	0.9999999871138293	WITHOUT_CLASSIFICATION	1.2886170735824724E-8	DEFECT
// Skip over the command that threw the exception. //	WITHOUT_CLASSIFICATION	0.9999569496707004	WITHOUT_CLASSIFICATION	4.305032929962525E-5	DEFECT
// Skip over the command that threw the exception. //	WITHOUT_CLASSIFICATION	0.9999569496707004	WITHOUT_CLASSIFICATION	4.305032929962525E-5	DEFECT
// Iterate back over the executed commands to undo them. //	WITHOUT_CLASSIFICATION	0.9999976567515654	WITHOUT_CLASSIFICATION	2.3432484345265623E-6	DEFECT
// Iterate forward over the undone commands to redo them. //	WITHOUT_CLASSIFICATION	0.9999995428582371	WITHOUT_CLASSIFICATION	4.5714176297642423E-7	DEFECT
// This ensures that these useless state variables at least reflect the right value. //	WITHOUT_CLASSIFICATION	0.9999911319332094	WITHOUT_CLASSIFICATION	8.86806679042933E-6	DEFECT
// Copy to a list and allocate positions. //	WITHOUT_CLASSIFICATION	0.9999979795197379	WITHOUT_CLASSIFICATION	2.020480262026861E-6	DEFECT
// Copy to a list and allocate positions. //	WITHOUT_CLASSIFICATION	0.9999979795197379	WITHOUT_CLASSIFICATION	2.020480262026861E-6	DEFECT
// Count up the objects that will be removed. // The objects are exchanged to produce this list's order //	WITHOUT_CLASSIFICATION	0.9999999673922548	WITHOUT_CLASSIFICATION	3.260774514901263E-8	DEFECT
// If any objects are matched. //	WITHOUT_CLASSIFICATION	0.9999957964552687	WITHOUT_CLASSIFICATION	4.203544731260009E-6	DEFECT
// Remove from by position in reverse order. //	WITHOUT_CLASSIFICATION	0.9999252436653682	WITHOUT_CLASSIFICATION	7.475633463177977E-5	DEFECT
// Remove from by position in reverse order. //	WITHOUT_CLASSIFICATION	0.9999252436653682	WITHOUT_CLASSIFICATION	7.475633463177977E-5	DEFECT
// Compact the results to remove unmatched objects //	WITHOUT_CLASSIFICATION	0.999999284696037	WITHOUT_CLASSIFICATION	7.153039628458403E-7	DEFECT
// If any objects are matched. //	WITHOUT_CLASSIFICATION	0.9999957964552687	WITHOUT_CLASSIFICATION	4.203544731260009E-6	DEFECT
// Remove from by position in reverse order. //	WITHOUT_CLASSIFICATION	0.9999252436653682	WITHOUT_CLASSIFICATION	7.475633463177977E-5	DEFECT
// Compact the results to remove unmatched objects //	WITHOUT_CLASSIFICATION	0.999999284696037	WITHOUT_CLASSIFICATION	7.153039628458403E-7	DEFECT
// Create view form.     //control = new ViewForm(parent, getStyle());	WITHOUT_CLASSIFICATION	0.9999978400184424	WITHOUT_CLASSIFICATION	2.1599815577393683E-6	DEFECT
// Listen to title changes. // getViewPart().addPropertyListener(this);	WITHOUT_CLASSIFICATION	0.999999821585766	WITHOUT_CLASSIFICATION	1.7841423396228011E-7	DEFECT
//titleLabel.setBackground(WorkbenchColors.getActiveGradient(), WorkbenchColors.getActiveGradientPercents()); // titleLabel.setForeground(titleLabel.getDisplay().getSystemColor(SWT.COLOR_TITLE_FOREGROUND));	WITHOUT_CLASSIFICATION	0.9999999890138982	WITHOUT_CLASSIFICATION	1.0986101821305932E-8	DEFECT
//actionBar.setBackground(WorkbenchColors.getActiveGradientEnd()); //systemBar.setBackground(WorkbenchColors.getActiveGradientEnd());	WITHOUT_CLASSIFICATION	0.9999975671476977	WITHOUT_CLASSIFICATION	2.4328523021773696E-6	DEFECT
//titleLabel.setBackground(null, null); // titleLabel.setForeground(null);	WITHOUT_CLASSIFICATION	0.9999737744378338	WITHOUT_CLASSIFICATION	2.6225562166266677E-5	DEFECT
// IViewPart view = getViewPart(); // titleLabel.setText(view.getTitle()); // titleLabel.setImage(view.getTitleImage());	WITHOUT_CLASSIFICATION	0.9999999357517636	WITHOUT_CLASSIFICATION	6.424823628735699E-8	DEFECT
// If there are objects to populate... //	WITHOUT_CLASSIFICATION	0.9999695978411938	WITHOUT_CLASSIFICATION	3.040215880622221E-5	DEFECT
// Create a new array. //	WITHOUT_CLASSIFICATION	0.9999986839638185	WITHOUT_CLASSIFICATION	1.3160361814189673E-6	DEFECT
// Fill in the result array with labels and re-populate the original list in order. //	WITHOUT_CLASSIFICATION	0.9996871891542003	WITHOUT_CLASSIFICATION	3.1281084579974156E-4	DEFECT
// Fill in the array with labels. //	WITHOUT_CLASSIFICATION	0.9999266601497069	WITHOUT_CLASSIFICATION	7.333985029304661E-5	DEFECT
// Get the index into the list via this call to super. //	WITHOUT_CLASSIFICATION	0.9999989038623286	WITHOUT_CLASSIFICATION	1.0961376713281572E-6	DEFECT
// Set the index of the object value in the list via this call to super. //	WITHOUT_CLASSIFICATION	0.9999945460461157	WITHOUT_CLASSIFICATION	5.453953884343531E-6	DEFECT
// Ensure there are no extraneous style bits. //	WITHOUT_CLASSIFICATION	0.9999999916904952	WITHOUT_CLASSIFICATION	8.309504647909933E-9	DEFECT
// Assign default style bits, if necessary, and ensure none conflict. //	WITHOUT_CLASSIFICATION	0.9999999537680234	WITHOUT_CLASSIFICATION	4.623197646922916E-8	DEFECT
// Paint over the selected padding spaces with the // background colour.  On GTK, the whole item, not just // the text, is selected, so we don't do this. //	WITHOUT_CLASSIFICATION	0.9999999999935607	WITHOUT_CLASSIFICATION	6.439306260845513E-12	DEFECT
// On Motif, selection color may be set as background. //	WITHOUT_CLASSIFICATION	0.9999923740918856	WITHOUT_CLASSIFICATION	7.625908114368821E-6	DEFECT
// Draw the extra first-column image. //	WITHOUT_CLASSIFICATION	0.9999998510316719	WITHOUT_CLASSIFICATION	1.489683281099792E-7	DEFECT
// Stop if the next item will be out the event bounds. // The event bounds values are also misaligned on GTK. //	WITHOUT_CLASSIFICATION	0.9999998053178577	WITHOUT_CLASSIFICATION	1.9468214237140948E-7	DEFECT
// If the table is indenting, draw tree lines. //	WITHOUT_CLASSIFICATION	0.999999836395388	WITHOUT_CLASSIFICATION	1.636046120484652E-7	DEFECT
//private final boolean iri; //private URI cachedASCIIURI;	WITHOUT_CLASSIFICATION	0.999996919923577	WITHOUT_CLASSIFICATION	3.0800764231088883E-6	DEFECT
// Additional useful character classes, including characters valid in certain // URI components and separators used in parsing them out of a string.  // // | ucschar | escaped	WITHOUT_CLASSIFICATION	0.9999999999380954	WITHOUT_CLASSIFICATION	6.190456857741564E-11	DEFECT
//  private static final long SCHEME_CHAR_HI = ALPHANUM_HI | highBitmask("+-."); //  private static final long SCHEME_CHAR_LO = ALPHANUM_LO | lowBitmask("+-.");	WITHOUT_CLASSIFICATION	0.9999989843901455	WITHOUT_CLASSIFICATION	1.0156098544731325E-6	DEFECT
// Returns the lower half bitmask for all ASCII characters between the two // given characters, inclusive.	WITHOUT_CLASSIFICATION	0.9999999765332658	WITHOUT_CLASSIFICATION	2.3466734169196187E-8	DEFECT
// Returns the upper half bitmask for all AsCII characters between the two // given characters, inclusive.	WITHOUT_CLASSIFICATION	0.9999999051723324	WITHOUT_CLASSIFICATION	9.482766761000065E-8	DEFECT
// Returns the lower half bitmask for all the ASCII characters in the given // string.	WITHOUT_CLASSIFICATION	0.9999998286108106	WITHOUT_CLASSIFICATION	1.713891894189563E-7	DEFECT
// Returns whether the given character is in the set specified by the given // bitmask.	WITHOUT_CLASSIFICATION	0.9999999757114975	WITHOUT_CLASSIFICATION	2.428850252119501E-8	DEFECT
// Converts null to length-zero array, and clones array to ensure // immutability.	WITHOUT_CLASSIFICATION	0.9999999866982199	WITHOUT_CLASSIFICATION	1.3301780080853007E-8	DEFECT
// Checks whether the string contains any more segments after the one that // starts at position i.	WITHOUT_CLASSIFICATION	0.9999998875946673	WITHOUT_CLASSIFICATION	1.1240533267764582E-7	DEFECT
// Validates all of the URI components.  Factory methods should call this // before using the constructor, though they must ensure that the // inter-component requirements described in their own Javadocs are all // satisfied, themselves.  If a new URI is being constructed out of // an existing URI, this need not be called.  Instead, just the new // components may be validated individually.	WITHOUT_CLASSIFICATION	0.9999999745235774	WITHOUT_CLASSIFICATION	2.547642255375251E-8	DEFECT
// Alternate, stricter implementations of the following validation methods // are provided, commented out, for possible future use...	WITHOUT_CLASSIFICATION	0.9993886940697768	WITHOUT_CLASSIFICATION	6.113059302232176E-4	DEFECT
// <p>A valid scheme may be null, or consist of a single letter followed // by any number of letters, numbers, and the following characters: // <code>+ - .</code>	WITHOUT_CLASSIFICATION	0.9999993145727462	WITHOUT_CLASSIFICATION	6.85427253715766E-7	DEFECT
// <p>A valid opaque part must be non-null and non-empty. It may contain // any allowed URI characters, but its first character may not be // <code>/</code> 	WITHOUT_CLASSIFICATION	0.9999999947544944	WITHOUT_CLASSIFICATION	5.245505608889752E-9	DEFECT
//return value != null && value.length() != 0 && //  value.charAt(0) != SEGMENT_SEPARATOR && //  validate(value, URIC_HI, URIC_LO, true, true);	WITHOUT_CLASSIFICATION	0.9999965471173348	WITHOUT_CLASSIFICATION	3.4528826652015876E-6	DEFECT
// A valid authority may be null or contain any allowed URI characters except // for the following: <code>/ ?</code>	WITHOUT_CLASSIFICATION	0.9999999477667214	WITHOUT_CLASSIFICATION	5.223327848978797E-8	DEFECT
// <p>A valid path segment must be non-null and may contain any allowed URI // characters except for the following: <code>/ ?</code> 	WITHOUT_CLASSIFICATION	0.9999999417582244	WITHOUT_CLASSIFICATION	5.824177568556537E-8	DEFECT
// Returns null if the specified value is null or would be a valid path // segment array of a URI; otherwise, the value of the first invalid // segment. 	WITHOUT_CLASSIFICATION	0.9999983263188518	WITHOUT_CLASSIFICATION	1.6736811482468173E-6	DEFECT
// Searches the specified string for any characters in the set represented // by the 128-bit bitmask.  Returns true if any occur, or false otherwise.	WITHOUT_CLASSIFICATION	0.9999999998464054	WITHOUT_CLASSIFICATION	1.5359466863441872E-10	DEFECT
// note: (absolutePath || authority == null) -> hierarchical // (authority == null && device == null && !absolutePath) -> scheme == null	WITHOUT_CLASSIFICATION	0.9999986830665176	WITHOUT_CLASSIFICATION	1.3169334823181013E-6	DEFECT
// note: authority == null -> hierarchical // (authority == null && device == null && !absolutePath) -> scheme == null	WITHOUT_CLASSIFICATION	0.9999986577165382	WITHOUT_CLASSIFICATION	1.3422834619023644E-6	DEFECT
// note: authority == null -> hierarchical // (authority == null && device == null && !absolutePath) -> scheme == null	WITHOUT_CLASSIFICATION	0.9999986577165382	WITHOUT_CLASSIFICATION	1.3422834619023644E-6	DEFECT
// note: authority == null -> hierarchical // (authority == null && device == null && !absolutePath) -> scheme == null	WITHOUT_CLASSIFICATION	0.9999986577165382	WITHOUT_CLASSIFICATION	1.3422834619023644E-6	DEFECT
// Returns true if the given value is an archive scheme, as defined by // the org.eclipse.emf.common.util.URI.archiveSchemes system property. // By default, "jar", "zip", and "archive" are considered archives.	WITHOUT_CLASSIFICATION	0.9999986534472377	WITHOUT_CLASSIFICATION	1.3465527622932836E-6	DEFECT
// Tests whether this URI's path segment array is equal to that of the // given uri.	WITHOUT_CLASSIFICATION	0.9999993823532854	WITHOUT_CLASSIFICATION	6.176467145286697E-7	DEFECT
// Tests two objects for equality, tolerating nulls; null is considered // to be a valid value that is only equal to itself.	WITHOUT_CLASSIFICATION	0.9999986543510615	WITHOUT_CLASSIFICATION	1.345648938452507E-6	DEFECT
// Tests two strings for equality, tolerating nulls and optionally // ignoring case.	WITHOUT_CLASSIFICATION	0.9999999918975058	WITHOUT_CLASSIFICATION	8.102494209006459E-9	DEFECT
// note: it's okay for two URIs to share a segments array, since // neither will ever modify it	WITHOUT_CLASSIFICATION	0.9999391760234491	WITHOUT_CLASSIFICATION	6.0823976550905174E-5	DEFECT
// relative path: merge with base and keep query (note: if the // base has no path and this a non-empty relative path, there is // an implied root in the resulting path) 	WITHOUT_CLASSIFICATION	0.9999977444814945	WITHOUT_CLASSIFICATION	2.255518505576011E-6	DEFECT
// always keep fragment, even if null, and use scheme from base; // no validation needed since all components are from existing URIs	WITHOUT_CLASSIFICATION	0.9999999973934462	WITHOUT_CLASSIFICATION	2.606553800274903E-9	DEFECT
// use a stack to accumulate segments of base, except for the last // (i.e. skip trailing separator and anything following it), and of // relative path	WITHOUT_CLASSIFICATION	0.9999945168839935	WITHOUT_CLASSIFICATION	5.483116006477594E-6	DEFECT
// Adds a segment to a stack, skipping empty segments and self references, // and interpreting parent references.	WITHOUT_CLASSIFICATION	0.9999997072860489	WITHOUT_CLASSIFICATION	2.9271395109483896E-7	DEFECT
// special care must be taken for a root's parent reference: it is // either ignored or the symbolic reference itself is pushed	WITHOUT_CLASSIFICATION	0.999998101299499	WITHOUT_CLASSIFICATION	1.8987005010661466E-6	DEFECT
// unless we're already accumulating root parent references, // parent references simply pop the last segment descended	WITHOUT_CLASSIFICATION	0.9999954843332459	WITHOUT_CLASSIFICATION	4.515666754117681E-6	DEFECT
// note: these assertions imply that neither this nor the base URI has a // relative path; thus, both have either an absolute path or no path	WITHOUT_CLASSIFICATION	0.9999516111989254	WITHOUT_CLASSIFICATION	4.838880107468527E-5	DEFECT
// Returns the shortest relative path between the the non-relative path of // the given base and this absolute path.  If the base has no path, it is // treated as the root absolute path.	WITHOUT_CLASSIFICATION	0.9999983911204265	WITHOUT_CLASSIFICATION	1.6088795734581907E-6	DEFECT
// note that the copied tree should not be modified by wrapped ASTJField // // the copied tree will have source ranges for all nodes in the source file, // hence, the get methods in the new ASTJField will not return the right contents	WITHOUT_CLASSIFICATION	0.9999274471120032	WITHOUT_CLASSIFICATION	7.255288799688638E-5	DEFECT
// a single separator, possibly preceded by some parent reference // segments, is redundant	WITHOUT_CLASSIFICATION	0.9999302199315138	WITHOUT_CLASSIFICATION	6.978006848620417E-5	DEFECT
// an empty path needs to be replaced by a single "." if there is no // query, to distinguish it from a current document reference	WITHOUT_CLASSIFICATION	0.9999999581896379	WITHOUT_CLASSIFICATION	4.1810362014236796E-8	DEFECT
// Collapses non-ending empty segments, parent references, and self // references in a non-relative path, returning the same path that would // be produced from the base hierarchical URI as part of a resolve.	WITHOUT_CLASSIFICATION	0.9999998176930838	WITHOUT_CLASSIFICATION	1.8230691627287302E-7	DEFECT
// if the path is non-empty and originally ended in an empty segment, a // parent reference, or a self reference, add a trailing separator	WITHOUT_CLASSIFICATION	0.9999967646403373	WITHOUT_CLASSIFICATION	3.2353596626957583E-6	DEFECT
// Returns a string representation of this URI for debugging, explicitly // showing each of the components.	WITHOUT_CLASSIFICATION	0.9999824186065868	WITHOUT_CLASSIFICATION	1.758139341322702E-5	DEFECT
// If the new prefix has segments, it is not the root absolute path, // and we need to drop the trailing empty segment and append the tail // segments.	WITHOUT_CLASSIFICATION	0.99998984467788	WITHOUT_CLASSIFICATION	1.015532212001117E-5	DEFECT
// If this is a hierarchical URI reference and prefix is a prefix of it, // returns the portion of the path remaining after that prefix has been // trimmed; null otherwise.	WITHOUT_CLASSIFICATION	0.9999743738576201	WITHOUT_CLASSIFICATION	2.562614237995742E-5	DEFECT
// Don't even consider it unless this is hierarchical and has scheme, // authority, device and path absoluteness equal to those of the prefix.	WITHOUT_CLASSIFICATION	0.9999994301685655	WITHOUT_CLASSIFICATION	5.698314345786606E-7	DEFECT
// If the prefix has no segments, then it is the root absolute path, and // we know this is an absolute path, too.	WITHOUT_CLASSIFICATION	0.9999686109463637	WITHOUT_CLASSIFICATION	3.138905363628967E-5	DEFECT
// This must have no fewer segments than the prefix.  Since the prefix // is not the root absolute path, its last segment is empty; all others // must match.	WITHOUT_CLASSIFICATION	0.9999998648616634	WITHOUT_CLASSIFICATION	1.3513833656047157E-7	DEFECT
// create new field and replace it all by original contents	WITHOUT_CLASSIFICATION	0.9999969246631603	WITHOUT_CLASSIFICATION	3.0753368398469935E-6	DEFECT
// The prefix really is a prefix of this.  If this has just one more, // empty segment, the paths are the same.	WITHOUT_CLASSIFICATION	0.999999330458766	WITHOUT_CLASSIFICATION	6.695412340628547E-7	DEFECT
// Encodes a complete URI, optionally leaving % characters unescaped when // beginning a valid three-character escape sequence.  We can either treat // the first or # as a fragment separator, or encode them all.	WITHOUT_CLASSIFICATION	0.999999998304897	WITHOUT_CLASSIFICATION	1.6951028990407542E-9	DEFECT
// range to look for comments	WITHOUT_CLASSIFICATION	0.9999995411134062	WITHOUT_CLASSIFICATION	4.588865939545447E-7	DEFECT
// Encodes the given string, replacing each ASCII character that is not in // the set specified by the 128-bit bitmask and each non-ASCII character // below 0xA0 by an escape sequence of % followed by two hex digits.  If // % is not in the set but ignoreEscaped is true, then % will not be encoded // iff it already begins a valid escape sequence.	WITHOUT_CLASSIFICATION	0.9999999543785145	WITHOUT_CLASSIFICATION	4.562148546411742E-8	DEFECT
// Tests whether an escape occurs in the given string, starting at index i. // An escape sequence is a % followed by two hex digits.	WITHOUT_CLASSIFICATION	0.9999822698621341	WITHOUT_CLASSIFICATION	1.773013786583607E-5	DEFECT
// find start position of farthest preceding comment	WITHOUT_CLASSIFICATION	0.9999972201291153	WITHOUT_CLASSIFICATION	2.7798708846962777E-6	DEFECT
// The byte is automatically widened into an int, with sign extension, // for shifting.  This can introduce 1's to the left of the byte, which // must be cleared by masking before looking up the hex digit. //	WITHOUT_CLASSIFICATION	0.9999994202363169	WITHOUT_CLASSIFICATION	5.79763683042873E-7	DEFECT
// Returns the character encoded by % followed by the two given hex digits, // which is always 0xFF or less, so can safely be casted to a byte.  If // either character is not a hex digit, a bogus result will be returned.	WITHOUT_CLASSIFICATION	0.999529113483721	WITHOUT_CLASSIFICATION	4.708865162789611E-4	DEFECT
// Determine the base URL by looking for the plugin.properties file in the standard way. //	WITHOUT_CLASSIFICATION	0.9998924786423262	WITHOUT_CLASSIFICATION	1.0752135767370974E-4	DEFECT
// add leading hanging comments to the previous node, // hence, only comments immediately preceding the node will be in the range for removal	WITHOUT_CLASSIFICATION	0.9999807255693898	WITHOUT_CLASSIFICATION	1.9274430610209544E-5	DEFECT
// for enum constants use special range	WITHOUT_CLASSIFICATION	0.9999999653960976	WITHOUT_CLASSIFICATION	3.460390241632926E-8	DEFECT
//  /** //   * Simpler implementation that sets the range of any node to be the node and all preceding comments //   */ //  public SourceRange computeSourceRange(ASTNode node) //  { //    SourceRange range = new SourceRange(node.getStartPosition(), node.getLength()); // //    range = extendRangeBackward(findLeadingComment(node, getPreviousNode(node), false), range); // //    return range; //  }	WITHOUT_CLASSIFICATION	0.9999999407685356	WITHOUT_CLASSIFICATION	5.9231464478917165E-8	DEFECT
// default implementation does nothing	WITHOUT_CLASSIFICATION	0.9999887421090998	WITHOUT_CLASSIFICATION	1.1257890900274894E-5	DEFECT
// clear old values	WITHOUT_CLASSIFICATION	0.9999993443854461	WITHOUT_CLASSIFICATION	6.556145537931221E-7	DEFECT
// Trim off the segments corresponding to the package nesting. //	WITHOUT_CLASSIFICATION	0.9999916944795657	WITHOUT_CLASSIFICATION	8.305520434185338E-6	DEFECT
// For an archive URI, check for the plugin.properties in the archive. //	WITHOUT_CLASSIFICATION	0.9999978702226153	WITHOUT_CLASSIFICATION	2.1297773846195475E-6	DEFECT
// append extra dimensions since they are not stored in Type object	WITHOUT_CLASSIFICATION	0.9999956969935109	WITHOUT_CLASSIFICATION	4.303006489106566E-6	DEFECT
// Trim off the "bin" or "runtime" segment. //	WITHOUT_CLASSIFICATION	0.9999972864949697	WITHOUT_CLASSIFICATION	2.713505030407067E-6	DEFECT
// If the plugin.properties isn't within the root of the archive, // create a new URI for the folder location of the archive, // so we can look in the folder that contains it. //	WITHOUT_CLASSIFICATION	0.9997643094012767	WITHOUT_CLASSIFICATION	2.3569059872337441E-4	DEFECT
// If we didn't find the plugin.properties in the usual place nor in the archive... //	WITHOUT_CLASSIFICATION	0.9998317310991529	WITHOUT_CLASSIFICATION	1.6826890084710813E-4	DEFECT
// If we can open  an input stream, then the plugin.properties is in the folder, and we have a good base URL. //	WITHOUT_CLASSIFICATION	0.9994454422492682	WITHOUT_CLASSIFICATION	5.545577507316987E-4	DEFECT
// If we still don't have a good base URL, complain about it. //	WITHOUT_CLASSIFICATION	0.9993696515746251	WITHOUT_CLASSIFICATION	6.303484253749872E-4	DEFECT
// We don't create an iterator stack until the root mapping itself has been returned by next once. // After that the stack should be non-empty and the top iterator should yield true for hasNext.	WITHOUT_CLASSIFICATION	0.9999874091403915	WITHOUT_CLASSIFICATION	1.259085960849985E-5	DEFECT
// If we are still on the root mapping itself... //	WITHOUT_CLASSIFICATION	0.9959018796521335	WITHOUT_CLASSIFICATION	0.004098120347866481	DEFECT
// Yield that mapping, create a stack, record it as the next one to prune, and add it to the stack. //	WITHOUT_CLASSIFICATION	0.9999384204577805	WITHOUT_CLASSIFICATION	6.157954221946133E-5	DEFECT
// Get the top iterator, retrieve it's result, and record it as the one to which remove will be delegated. //	WITHOUT_CLASSIFICATION	0.9999999997434652	WITHOUT_CLASSIFICATION	2.56534880885263E-10	DEFECT
// If the result about to be returned has children... //	WITHOUT_CLASSIFICATION	0.9999729516884971	WITHOUT_CLASSIFICATION	2.7048311503034948E-5	DEFECT
// Record the iterator as the next one to prune, and add it to the stack. //	WITHOUT_CLASSIFICATION	0.999993400817369	WITHOUT_CLASSIFICATION	6.599182631050319E-6	DEFECT
// There will be no iterator to prune. //	WITHOUT_CLASSIFICATION	0.9999997907368423	WITHOUT_CLASSIFICATION	2.092631577017166E-7	DEFECT
// While the current iterator has no next... //	WITHOUT_CLASSIFICATION	0.999994319426255	WITHOUT_CLASSIFICATION	5.6805737449307595E-6	DEFECT
// Pop it from the stack. //	WITHOUT_CLASSIFICATION	0.9999989245618743	WITHOUT_CLASSIFICATION	1.0754381256057353E-6	DEFECT
// If the stack is empty, we're done. //	WITHOUT_CLASSIFICATION	0.9999986697336722	WITHOUT_CLASSIFICATION	1.3302663277789755E-6	DEFECT
// if the given class is subclass of enum and node is of subclass of type	WITHOUT_CLASSIFICATION	0.9999752544277201	WITHOUT_CLASSIFICATION	2.4745572280008448E-5	DEFECT
// Pop it off the stack. //	WITHOUT_CLASSIFICATION	0.9999997866057152	WITHOUT_CLASSIFICATION	2.1339428475028488E-7	DEFECT
// Get the next one down and then test it for has next. //	WITHOUT_CLASSIFICATION	0.9999990963834027	WITHOUT_CLASSIFICATION	9.036165972728506E-7	DEFECT
// If there is an iterator to prune. //	WITHOUT_CLASSIFICATION	0.9999999701247207	WITHOUT_CLASSIFICATION	2.98752791730183E-8	DEFECT
// You can only prune once. //	WITHOUT_CLASSIFICATION	0.9999973282003676	WITHOUT_CLASSIFICATION	2.671799632419617E-6	DEFECT
// If that iterator is still at the top of the stack... //	WITHOUT_CLASSIFICATION	0.9999563828513547	WITHOUT_CLASSIFICATION	4.3617148645185434E-5	DEFECT
// Allow for a bit-shift of growth. //	WITHOUT_CLASSIFICATION	0.9999966877927328	WITHOUT_CLASSIFICATION	3.312207267353654E-6	DEFECT
// Keep popping the stack until an iterator that has a next is at the top. //	WITHOUT_CLASSIFICATION	0.9999429669823258	WITHOUT_CLASSIFICATION	5.703301767426437E-5	DEFECT
// Conditionally create the data. //	WITHOUT_CLASSIFICATION	0.9999745445607507	WITHOUT_CLASSIFICATION	2.545543924934974E-5	DEFECT
//  ++modCount //	WITHOUT_CLASSIFICATION	0.9999948611805033	WITHOUT_CLASSIFICATION	5.138819496659443E-6	DEFECT
// Guard for no data. //	WITHOUT_CLASSIFICATION	0.9999997811596459	WITHOUT_CLASSIFICATION	2.1884035405016098E-7	DEFECT
// Guard for no data. //	WITHOUT_CLASSIFICATION	0.9999997811596459	WITHOUT_CLASSIFICATION	2.1884035405016098E-7	DEFECT
// ++modCount //	WITHOUT_CLASSIFICATION	0.9999969842716718	WITHOUT_CLASSIFICATION	3.0157283280338098E-6	DEFECT
// ++modCount //	WITHOUT_CLASSIFICATION	0.9999969842716718	WITHOUT_CLASSIFICATION	3.0157283280338098E-6	DEFECT
// Conditionally create the data. //	WITHOUT_CLASSIFICATION	0.9999745445607507	WITHOUT_CLASSIFICATION	2.545543924934974E-5	DEFECT
// ++modCount //	WITHOUT_CLASSIFICATION	0.9999969842716718	WITHOUT_CLASSIFICATION	3.0157283280338098E-6	DEFECT
// Don't hold onto a duplicate reference to the last object. //	WITHOUT_CLASSIFICATION	0.9999986280867785	WITHOUT_CLASSIFICATION	1.371913221376017E-6	DEFECT
// Give it all back to the garbage collector. //	WITHOUT_CLASSIFICATION	0.9999973093344633	WITHOUT_CLASSIFICATION	2.690665536833025E-6	DEFECT
// Give it all back to the garbage collector. //	WITHOUT_CLASSIFICATION	0.9999973093344633	WITHOUT_CLASSIFICATION	2.690665536833025E-6	DEFECT
// Write the capacity. //	WITHOUT_CLASSIFICATION	0.99999760645048	WITHOUT_CLASSIFICATION	2.3935495200064786E-6	DEFECT
// create map of public static final field initializers to fields	WITHOUT_CLASSIFICATION	0.999999943666783	WITHOUT_CLASSIFICATION	5.6333216987099515E-8	DEFECT
// This seems to be a pretty sweet formula that supports good growth. // Adding an object to a list will create a list of capacity 4,  // which is just about the average list size. //	WITHOUT_CLASSIFICATION	0.9999999921527836	WITHOUT_CLASSIFICATION	7.847216362602567E-9	DEFECT
// This should be transparent. //	WITHOUT_CLASSIFICATION	0.9998069005983107	WITHOUT_CLASSIFICATION	1.9309940168933695E-4	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999986414502402	WITHOUT_CLASSIFICATION	1.3585497598851668E-6	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999986414502402	WITHOUT_CLASSIFICATION	1.3585497598851668E-6	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999986414502402	WITHOUT_CLASSIFICATION	1.3585497598851668E-6	DEFECT
// Write all the entryData; there will be size of them. //	WITHOUT_CLASSIFICATION	0.9999464150033378	WITHOUT_CLASSIFICATION	5.358499666209891E-5	DEFECT
// Restore the capacity, if there was any. //	WITHOUT_CLASSIFICATION	0.9999948628794003	WITHOUT_CLASSIFICATION	5.137120599787971E-6	DEFECT
// Read all size number of entryData. //	WITHOUT_CLASSIFICATION	0.9999780027677783	WITHOUT_CLASSIFICATION	2.199723222182947E-5	DEFECT
//0000 0000 0001 //0000 0000 0010 //0000 0000 0100 //0000 0000 1000 //0001 0000 0000 //0010 0000 0000 //0100 0000 0000 //1000 0000 0000	WITHOUT_CLASSIFICATION	0.9999844508123327	WITHOUT_CLASSIFICATION	1.5549187667417613E-5	DEFECT
//0000 0000 1111 //1111 0000 0000	WITHOUT_CLASSIFICATION	0.9999838983188212	WITHOUT_CLASSIFICATION	1.6101681178869188E-5	DEFECT
// This just represents going back to the unset state, but that doesn't affect the contents of the list. //	WITHOUT_CLASSIFICATION	0.9999990748651318	WITHOUT_CLASSIFICATION	9.25134868141032E-7	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999986414502402	WITHOUT_CLASSIFICATION	1.3585497598851668E-6	DEFECT
// add all converted fields after the last final field  // that is used in initializers of the converted fields	WITHOUT_CLASSIFICATION	0.999999993376801	WITHOUT_CLASSIFICATION	6.6231990352674655E-9	DEFECT
// Internal bootstrap uses Literals constants, so we must force initialization this inner interface first. //	WITHOUT_CLASSIFICATION	0.9999999996426627	WITHOUT_CLASSIFICATION	3.573372050197672E-10	DEFECT
// Open an editor on the new file. //	WITHOUT_CLASSIFICATION	0.999996639357416	WITHOUT_CLASSIFICATION	3.3606425840097315E-6	DEFECT
// create field initializer from enum constant's arguments and body	WITHOUT_CLASSIFICATION	0.9999999843116771	WITHOUT_CLASSIFICATION	1.568832286670483E-8	DEFECT
// Apply the change. //	WITHOUT_CLASSIFICATION	0.9999962686409031	WITHOUT_CLASSIFICATION	3.731359096906301E-6	DEFECT
// Delete the change information because it is invalid now that the objects have been changed. //	WITHOUT_CLASSIFICATION	0.9999999996799315	WITHOUT_CLASSIFICATION	3.200686245929251E-10	DEFECT
// Apply the change and reverse the change information. //	WITHOUT_CLASSIFICATION	0.9999997384998844	WITHOUT_CLASSIFICATION	2.615001156020875E-7	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999986414502402	WITHOUT_CLASSIFICATION	1.3585497598851668E-6	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999946923429	WITHOUT_CLASSIFICATION	5.307657104793272E-9	DEFECT
// set original node of annotations (to allow get methods to work correctly)	WITHOUT_CLASSIFICATION	0.9772770479555996	WITHOUT_CLASSIFICATION	0.022722952044400356	DEFECT
// The next line leaves objectsBeforeApply with all the objects that were // added during the last recording.	WITHOUT_CLASSIFICATION	0.9994428778045205	WITHOUT_CLASSIFICATION	5.571221954796228E-4	DEFECT
// Reverse the objects to attach and detach lists. //	WITHOUT_CLASSIFICATION	0.9999996366466012	WITHOUT_CLASSIFICATION	3.633533987957176E-7	DEFECT
// Make sure the changed values of bidirectional reference lists are cached before we //  start to apply the change. //	WITHOUT_CLASSIFICATION	0.9999999976279894	WITHOUT_CLASSIFICATION	2.3720106095821815E-9	DEFECT
// This case will be handled special during apply //	WITHOUT_CLASSIFICATION	0.9999961778339906	WITHOUT_CLASSIFICATION	3.822166009295667E-6	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999946923429	WITHOUT_CLASSIFICATION	5.307657104793272E-9	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999946923429	WITHOUT_CLASSIFICATION	5.307657104793272E-9	DEFECT
// New Template Container Entryfield	WITHOUT_CLASSIFICATION	0.9999999948008601	WITHOUT_CLASSIFICATION	5.199139853734194E-9	DEFECT
// If there's no position, the list is being cleared. //	WITHOUT_CLASSIFICATION	0.9999985999514717	WITHOUT_CLASSIFICATION	1.4000485282759161E-6	DEFECT
// If there's no position, the list is being cleared. //	WITHOUT_CLASSIFICATION	0.9999985999514717	WITHOUT_CLASSIFICATION	1.4000485282759161E-6	DEFECT
// EEnumImpl overrides this to do nothing. // The only case that is special is when a more specific instance of AbstractEnumerator is generated/reused. //	WITHOUT_CLASSIFICATION	0.9999999305779443	WITHOUT_CLASSIFICATION	6.942205565330252E-8	DEFECT
// When we attached we have to recompute the erasure of the type parameter. //	WITHOUT_CLASSIFICATION	0.9999993250514524	WITHOUT_CLASSIFICATION	6.749485475656088E-7	DEFECT
// Interprets escaped characters within the string according to Java // literal rules, with two exceptions: an unescaped " does not terminate // the string, and a \ not followed by b, t, n, f, r, ", ', u, or an octal // digit is taken literally, not as an error	WITHOUT_CLASSIFICATION	0.9999929692838305	WITHOUT_CLASSIFICATION	7.030716169581071E-6	DEFECT
// Create annotations // http:///org/eclipse/emf/ecore/util/ExtendedMetaData	WITHOUT_CLASSIFICATION	0.9999935235405992	WITHOUT_CLASSIFICATION	6.476459400702345E-6	DEFECT
// This is needed for internal bootstrapping of EGenericType's default value for eRawType. // It's simply not available before Ecore is constructed so we make it available and then patch what's missing. //	WITHOUT_CLASSIFICATION	0.9999996734549903	WITHOUT_CLASSIFICATION	3.2654500968705243E-7	DEFECT
// Create a key set that supports add. //	WITHOUT_CLASSIFICATION	0.9999991754436254	WITHOUT_CLASSIFICATION	8.245563746820098E-7	DEFECT
// Skip derived features. //	WITHOUT_CLASSIFICATION	0.9999998996579518	WITHOUT_CLASSIFICATION	1.0034204825551653E-7	DEFECT
// Include derived relations only if they won't also come from mixed or a group. //	WITHOUT_CLASSIFICATION	0.9991857738684412	WITHOUT_CLASSIFICATION	8.142261315587395E-4	DEFECT
// If this is just a proxy being resolved... //	WITHOUT_CLASSIFICATION	0.9998046836348645	WITHOUT_CLASSIFICATION	1.9531636513550656E-4	DEFECT
// Force the raw type to be resolved so we don't resolve this endlessly. //	WITHOUT_CLASSIFICATION	0.9999811577947999	WITHOUT_CLASSIFICATION	1.8842205200185328E-5	DEFECT
// Update the classifier and hence the raw type as normal. //	WITHOUT_CLASSIFICATION	0.999999341002543	WITHOUT_CLASSIFICATION	6.589974569551478E-7	DEFECT
// The notification for this list is being thrown by the // delegating list //	WITHOUT_CLASSIFICATION	0.9999788853865433	WITHOUT_CLASSIFICATION	2.111461345660102E-5	DEFECT
// At development time, the real factory may not be available. Just return null. //	WITHOUT_CLASSIFICATION	0.9999998668977893	WITHOUT_CLASSIFICATION	1.3310221067597665E-7	DEFECT
// Interprets escaped characters according to Java literal rules, with one // exception: a single \ is taken literally, not as an error.	WITHOUT_CLASSIFICATION	0.9999987571059554	WITHOUT_CLASSIFICATION	1.2428940444973388E-6	DEFECT
// protected static final EStructuralFeature CONTAINING_FEATURE = new EReferenceImpl(); // protected static final EStructuralFeature CONTAINER = new EReferenceImpl();	WITHOUT_CLASSIFICATION	0.9999999999131632	WITHOUT_CLASSIFICATION	8.683666327991027E-11	DEFECT
// Entry entry = new Entry(eObject, CONTAINER); // return (InternalEObject)map.get(entry);	WITHOUT_CLASSIFICATION	0.9999998985432698	WITHOUT_CLASSIFICATION	1.0145673024981157E-7	DEFECT
// This should never be called. //	WITHOUT_CLASSIFICATION	0.9999986791940974	WITHOUT_CLASSIFICATION	1.3208059026485506E-6	DEFECT
// Entry entry = new Entry(eObject, CONTAINING_FEATURE); // return (EStructuralFeature)map.get(entry);	WITHOUT_CLASSIFICATION	0.9999999970965424	WITHOUT_CLASSIFICATION	2.9034577049821584E-9	DEFECT
// eContainer = newContainer; // eContainerFeatureID = newContainerFeatureID;	WITHOUT_CLASSIFICATION	0.999999883034578	WITHOUT_CLASSIFICATION	1.1696542203148828E-7	DEFECT
// Since the cycle is detected by checking if we hit "this" again, after many iterations we'll call this method recursively  // in case we started with something that wasn't part of a cycle but later traversed up to a cycle. //	WITHOUT_CLASSIFICATION	0.9999999138751614	WITHOUT_CLASSIFICATION	8.612483860615525E-8	DEFECT
// When setting the resource to null we assume that detach has already been called in the resource implementation //	WITHOUT_CLASSIFICATION	0.9999996601530508	WITHOUT_CLASSIFICATION	3.398469492755901E-7	DEFECT
/**   * Performs escape encoding on the given string so that it can be represented using 1-byte characters.   * Any characters higher than 0xFF are replaced with an escape of the form \\uXXXX, where XXXX is the   * four-digit hex representation of the Unicode code point.   */	WITHOUT_CLASSIFICATION	0.9999952688552336	WITHOUT_CLASSIFICATION	4.73114476644895E-6	DEFECT
// Compute the offset in the sequence of bit patterns for this feature ID // and then get the bit pattern at that index. //	WITHOUT_CLASSIFICATION	0.9999876247842153	WITHOUT_CLASSIFICATION	1.2375215784757007E-5	DEFECT
// Compute the index within that bit pattern for this feature ID // and fetch that bit at that index. //	WITHOUT_CLASSIFICATION	0.9999903947834344	WITHOUT_CLASSIFICATION	9.60521656551055E-6	DEFECT
// For isSet, we only need to check the bit and return -1 when the bit is 0. //	WITHOUT_CLASSIFICATION	0.9999997042480635	WITHOUT_CLASSIFICATION	2.957519365220166E-7	DEFECT
// If the value index set, there's no index to return. //	WITHOUT_CLASSIFICATION	0.9999972341660538	WITHOUT_CLASSIFICATION	2.7658339461708067E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999375071796	WITHOUT_CLASSIFICATION	6.24928203174307E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999375071796	WITHOUT_CLASSIFICATION	6.24928203174307E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999375071796	WITHOUT_CLASSIFICATION	6.24928203174307E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999375071796	WITHOUT_CLASSIFICATION	6.24928203174307E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999375071796	WITHOUT_CLASSIFICATION	6.24928203174307E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999375071796	WITHOUT_CLASSIFICATION	6.24928203174307E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999375071796	WITHOUT_CLASSIFICATION	6.24928203174307E-8	DEFECT
// Count just the bits up to this one. // Note that shifting 32 bits is a no op. //	WITHOUT_CLASSIFICATION	0.9999999998256976	WITHOUT_CLASSIFICATION	1.7430239476990674E-10	DEFECT
// Count all the bits in the bit patterns up to this one in the sequence of bit patterns. //	WITHOUT_CLASSIFICATION	0.999999706695417	WITHOUT_CLASSIFICATION	2.933045829448777E-7	DEFECT
// Determine the index for the feature and return the value at that index, if an index is assigned. //	WITHOUT_CLASSIFICATION	0.9999998966927258	WITHOUT_CLASSIFICATION	1.0330727419264855E-7	DEFECT
// Determine if an index is assigned. //	WITHOUT_CLASSIFICATION	0.9999999285025382	WITHOUT_CLASSIFICATION	7.149746183396155E-8	DEFECT
// Determine the index. //	WITHOUT_CLASSIFICATION	0.9999992414427719	WITHOUT_CLASSIFICATION	7.585572281720863E-7	DEFECT
// If it's newly allocated, add a new value, and indicate there was no previous value. //	WITHOUT_CLASSIFICATION	0.9999998356152043	WITHOUT_CLASSIFICATION	1.6438479568515285E-7	DEFECT
// Set the value at the previously allocated index and return the previous value there. //	WITHOUT_CLASSIFICATION	0.9999667789404899	WITHOUT_CLASSIFICATION	3.322105951011917E-5	DEFECT
// Forward the interned value. //	WITHOUT_CLASSIFICATION	0.9999995083534112	WITHOUT_CLASSIFICATION	4.91646588879128E-7	DEFECT
// If it's a parameterized type... //	WITHOUT_CLASSIFICATION	0.9993380384377937	WITHOUT_CLASSIFICATION	6.619615622063867E-4	DEFECT
// The instance class name is the erasure. //	WITHOUT_CLASSIFICATION	0.9999993750596936	WITHOUT_CLASSIFICATION	6.249403063903821E-7	DEFECT
// If the name isn't a qualified name and isn't a primitive type, it's assumed to denote some arbitrary type parameter. //	WITHOUT_CLASSIFICATION	0.9999999084536831	WITHOUT_CLASSIFICATION	9.15463169527751E-8	DEFECT
// Be sure to pick up any trailing [] brackets. //	WITHOUT_CLASSIFICATION	0.9999979324396105	WITHOUT_CLASSIFICATION	2.067560389526363E-6	DEFECT
// If there is a cached result, return it. // We expect that if the package is set to be a proxy,  // the code in EPackageImpl.eSetProxyURI override will have cleared this value. //	WITHOUT_CLASSIFICATION	0.999976927052755	WITHOUT_CLASSIFICATION	2.307294724491756E-5	DEFECT
// If the result is not a proxy, cache it. //	WITHOUT_CLASSIFICATION	0.9998171180901894	WITHOUT_CLASSIFICATION	1.82881909810702E-4	DEFECT
// If we turn the package into a proxy, ensure that the child classifiers clear their cached container. //	WITHOUT_CLASSIFICATION	0.9999999963854774	WITHOUT_CLASSIFICATION	3.614522579411966E-9	DEFECT
// Is the first character a special character, i.e., something other than '@'? //	WITHOUT_CLASSIFICATION	0.9999999950137733	WITHOUT_CLASSIFICATION	4.986226610388216E-9	DEFECT
// Is it the start of a source URI of an annotation? //	WITHOUT_CLASSIFICATION	0.9999993483161526	WITHOUT_CLASSIFICATION	6.516838473210461E-7	DEFECT
// Recompute the read only state. //	WITHOUT_CLASSIFICATION	0.9999984141477123	WITHOUT_CLASSIFICATION	1.5858522877140642E-6	DEFECT
// Refresh any actions that may become enabled or disabled. //	WITHOUT_CLASSIFICATION	0.9969423211307605	WITHOUT_CLASSIFICATION	0.0030576788692393856	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999375071796	WITHOUT_CLASSIFICATION	6.24928203174307E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999375071796	WITHOUT_CLASSIFICATION	6.24928203174307E-8	DEFECT
// If this is just a proxy being resolved... //	WITHOUT_CLASSIFICATION	0.9998046836348645	WITHOUT_CLASSIFICATION	1.9531636513550656E-4	DEFECT
// Force the raw type to be resolved so we don't resolve this endlessly. //	WITHOUT_CLASSIFICATION	0.9999811577947999	WITHOUT_CLASSIFICATION	1.8842205200185328E-5	DEFECT
// Update the classifier and hence the raw type as normal. //	WITHOUT_CLASSIFICATION	0.999999341002543	WITHOUT_CLASSIFICATION	6.589974569551478E-7	DEFECT
// Find the closing '%' //	WITHOUT_CLASSIFICATION	0.9999996001131417	WITHOUT_CLASSIFICATION	3.998868582624849E-7	DEFECT
// Decode all encoded characters. //	WITHOUT_CLASSIFICATION	0.9999999694738037	WITHOUT_CLASSIFICATION	3.052619631387842E-8	DEFECT
// Check for a count, i.e., a '.' followed by a number. //	WITHOUT_CLASSIFICATION	0.9999998272999427	WITHOUT_CLASSIFICATION	1.7270005722128167E-7	DEFECT
// Look for the annotation with the matching source. //	WITHOUT_CLASSIFICATION	0.9999985930626468	WITHOUT_CLASSIFICATION	1.4069373531403306E-6	DEFECT
// Look for trailing count. //	WITHOUT_CLASSIFICATION	0.9999991557789171	WITHOUT_CLASSIFICATION	8.442210829331835E-7	DEFECT
// Look for a matching named element. //	WITHOUT_CLASSIFICATION	0.9999984255331722	WITHOUT_CLASSIFICATION	1.5744668278604347E-6	DEFECT
// Find the uppermost class loader in the hierarchy that can load the class. //	WITHOUT_CLASSIFICATION	0.9999996005817594	WITHOUT_CLASSIFICATION	3.994182406547451E-7	DEFECT
// We can't find the class, so we don't want this class loader, // but instead want the last result that was able to load the class. //	WITHOUT_CLASSIFICATION	0.9999938632265623	WITHOUT_CLASSIFICATION	6.136773437852412E-6	DEFECT
// Register with the upper most class loader that's able to load the class. //	WITHOUT_CLASSIFICATION	0.9999999183804293	WITHOUT_CLASSIFICATION	8.161957057567315E-8	DEFECT
// This let's us test whether the string exists as a file. // If not, we try as a URI. //	WITHOUT_CLASSIFICATION	0.999999893994749	WITHOUT_CLASSIFICATION	1.0600525100281323E-7	DEFECT
// First try to see if this class has an eInstance  //	WITHOUT_CLASSIFICATION	0.9999980392759568	WITHOUT_CLASSIFICATION	1.960724043284401E-6	DEFECT
// First try to see if this class has an eInstance  //	WITHOUT_CLASSIFICATION	0.9999980392759568	WITHOUT_CLASSIFICATION	1.960724043284401E-6	DEFECT
// Remember the file. //	WITHOUT_CLASSIFICATION	0.9999960871588464	WITHOUT_CLASSIFICATION	3.912841153660608E-6	DEFECT
// Do the work within an operation. //	WITHOUT_CLASSIFICATION	0.999981969513421	WITHOUT_CLASSIFICATION	1.8030486578983338E-5	DEFECT
// Create a resource set //	WITHOUT_CLASSIFICATION	0.9999999807836839	WITHOUT_CLASSIFICATION	1.921631604816211E-8	DEFECT
// Get the URI of the model file. //	WITHOUT_CLASSIFICATION	0.9999987247539358	WITHOUT_CLASSIFICATION	1.2752460641814765E-6	DEFECT
// Create a resource for this file. //	WITHOUT_CLASSIFICATION	0.9999994131322223	WITHOUT_CLASSIFICATION	5.8686777773251E-7	DEFECT
// Add the initial model object to the contents. //	WITHOUT_CLASSIFICATION	0.9999999931296989	WITHOUT_CLASSIFICATION	6.870301124202072E-9	DEFECT
// Save the contents of the resource to the file system. //	WITHOUT_CLASSIFICATION	0.9999988720733909	WITHOUT_CLASSIFICATION	1.1279266091547636E-6	DEFECT
// Select the new file resource in the current view. //	WITHOUT_CLASSIFICATION	0.9999979185043191	WITHOUT_CLASSIFICATION	2.081495680967081E-6	DEFECT
// Make sure the file ends in ".ecore". //	WITHOUT_CLASSIFICATION	0.9999877298193365	WITHOUT_CLASSIFICATION	1.2270180663468861E-5	DEFECT
// Create a page, set the title, and the initial model file name. //	WITHOUT_CLASSIFICATION	0.9999999758975076	WITHOUT_CLASSIFICATION	2.410249242625252E-8	DEFECT
// Try and get the resource selection to determine a current directory for the file dialog. //	WITHOUT_CLASSIFICATION	0.9999999251646056	WITHOUT_CLASSIFICATION	7.483539440227245E-8	DEFECT
// Get the resource... //	WITHOUT_CLASSIFICATION	0.9999905510539585	WITHOUT_CLASSIFICATION	9.448946041486797E-6	DEFECT
// Get the resource parent, if its a file. //	WITHOUT_CLASSIFICATION	0.999999763815627	WITHOUT_CLASSIFICATION	2.361843729735805E-7	DEFECT
// This gives us a directory... //	WITHOUT_CLASSIFICATION	0.999869268301826	WITHOUT_CLASSIFICATION	1.307316981739351E-4	DEFECT
// Set this for the container. //	WITHOUT_CLASSIFICATION	0.9999970110488752	WITHOUT_CLASSIFICATION	2.9889511248633513E-6	DEFECT
// Make up a unique new name here. //	WITHOUT_CLASSIFICATION	0.9999507198729867	WITHOUT_CLASSIFICATION	4.9280127013261314E-5	DEFECT
// Create an adapter factory that yields item providers. //	WITHOUT_CLASSIFICATION	0.9999956950234048	WITHOUT_CLASSIFICATION	4.304976595195095E-6	DEFECT
// Create the command stack that will notify this editor as commands are executed. //	WITHOUT_CLASSIFICATION	0.9996513038088302	WITHOUT_CLASSIFICATION	3.4869619116980255E-4	DEFECT
// Add a listener to set the most recent command's affected objects to be the selection of the viewer with focus. //	WITHOUT_CLASSIFICATION	0.9999999270769817	WITHOUT_CLASSIFICATION	7.292301823527085E-8	DEFECT
// Try to select the affected objects. //	WITHOUT_CLASSIFICATION	0.99999993727935	WITHOUT_CLASSIFICATION	6.272064995867918E-8	DEFECT
// Create the editing domain with a special command stack. //	WITHOUT_CLASSIFICATION	0.9999366891983547	WITHOUT_CLASSIFICATION	6.33108016453388E-5	DEFECT
// Make sure it's okay. //	WITHOUT_CLASSIFICATION	0.999990232211429	WITHOUT_CLASSIFICATION	9.767788570897222E-6	DEFECT
// Try to select the items in the current content viewer of the editor. //	WITHOUT_CLASSIFICATION	0.9999983866450993	WITHOUT_CLASSIFICATION	1.613354900611949E-6	DEFECT
// If it is changing... //	WITHOUT_CLASSIFICATION	0.9996682763358424	WITHOUT_CLASSIFICATION	3.3172366415751335E-4	DEFECT
// Create the listener on demand. //	WITHOUT_CLASSIFICATION	0.9999991108676913	WITHOUT_CLASSIFICATION	8.891323086442798E-7	DEFECT
// This just notifies those things that are affected by the section. //	WITHOUT_CLASSIFICATION	0.999995700237801	WITHOUT_CLASSIFICATION	4.299762198921304E-6	DEFECT
// Stop listening to the old one. //	WITHOUT_CLASSIFICATION	0.9999993830150699	WITHOUT_CLASSIFICATION	6.169849301134148E-7	DEFECT
// Start listening to the new one. //	WITHOUT_CLASSIFICATION	0.9999995827580975	WITHOUT_CLASSIFICATION	4.17241902540673E-7	DEFECT
// Remember it. //	WITHOUT_CLASSIFICATION	0.9999924173737395	WITHOUT_CLASSIFICATION	7.582626260562482E-6	DEFECT
// Set the editors selection based on the current viewer's selection. //	WITHOUT_CLASSIFICATION	0.999952859762794	WITHOUT_CLASSIFICATION	4.7140237205942496E-5	DEFECT
// Load the resource through the editing domain. //	WITHOUT_CLASSIFICATION	0.999996120429101	WITHOUT_CLASSIFICATION	3.879570898986815E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999375071796	WITHOUT_CLASSIFICATION	6.24928203174307E-8	DEFECT
// Create a page for the selection tree view. //	WITHOUT_CLASSIFICATION	0.9999962470667619	WITHOUT_CLASSIFICATION	3.752933238022538E-6	DEFECT
// Ensures that this editor will only display the page's tab // area if there are more than one page //	WITHOUT_CLASSIFICATION	0.9999983097631826	WITHOUT_CLASSIFICATION	1.6902368173782775E-6	DEFECT
// The content outline is just a tree. //	WITHOUT_CLASSIFICATION	0.9999998753384842	WITHOUT_CLASSIFICATION	1.2466151579040114E-7	DEFECT
// Set up the tree viewer. //	WITHOUT_CLASSIFICATION	0.9999983994774432	WITHOUT_CLASSIFICATION	1.6005225568662645E-6	DEFECT
// Make sure our popups work. //	WITHOUT_CLASSIFICATION	0.9997906627920294	WITHOUT_CLASSIFICATION	2.093372079704637E-4	DEFECT
// Select the root object in the view. //	WITHOUT_CLASSIFICATION	0.9999047751717217	WITHOUT_CLASSIFICATION	9.522482827820044E-5	DEFECT
// Listen to selection so that we can handle it is a special way. //	WITHOUT_CLASSIFICATION	0.9999993346997945	WITHOUT_CLASSIFICATION	6.653002054060245E-7	DEFECT
// Get the first selected element. //	WITHOUT_CLASSIFICATION	0.9999999820409388	WITHOUT_CLASSIFICATION	1.7959061185449528E-8	DEFECT
// Set the selection to the widget. //	WITHOUT_CLASSIFICATION	0.999948194433829	WITHOUT_CLASSIFICATION	5.180556617089397E-5	DEFECT
// Save only resources that have actually changed. //	WITHOUT_CLASSIFICATION	0.9999867728494876	WITHOUT_CLASSIFICATION	1.32271505124688E-5	DEFECT
// This is the method that gets invoked when the operation runs. //	WITHOUT_CLASSIFICATION	0.9999991627927581	WITHOUT_CLASSIFICATION	8.372072419409931E-7	DEFECT
// Save the resources to the file system. //	WITHOUT_CLASSIFICATION	0.999991520970153	WITHOUT_CLASSIFICATION	8.479029846996282E-6	DEFECT
// This runs the options, and shows progress. //	WITHOUT_CLASSIFICATION	0.9999837056647809	WITHOUT_CLASSIFICATION	1.629433521918323E-5	DEFECT
// Refresh the necessary state. //	WITHOUT_CLASSIFICATION	0.9999980493729441	WITHOUT_CLASSIFICATION	1.9506270558937E-6	DEFECT
// Something went wrong that shouldn't. //	WITHOUT_CLASSIFICATION	0.9985472413057587	WITHOUT_CLASSIFICATION	0.0014527586942412842	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999375071796	WITHOUT_CLASSIFICATION	6.24928203174307E-8	DEFECT
// Remember the file. //	WITHOUT_CLASSIFICATION	0.9999960871588464	WITHOUT_CLASSIFICATION	3.912841153660608E-6	DEFECT
// Do the work within an operation. //	WITHOUT_CLASSIFICATION	0.999981969513421	WITHOUT_CLASSIFICATION	1.8030486578983338E-5	DEFECT
// Create a resource set //	WITHOUT_CLASSIFICATION	0.9999999807836839	WITHOUT_CLASSIFICATION	1.921631604816211E-8	DEFECT
// Get the URI of the model file. //	WITHOUT_CLASSIFICATION	0.9999987247539358	WITHOUT_CLASSIFICATION	1.2752460641814765E-6	DEFECT
// Save the contents of the resource to the file system. //	WITHOUT_CLASSIFICATION	0.9999988720733909	WITHOUT_CLASSIFICATION	1.1279266091547636E-6	DEFECT
// Select the new file resource in the current view. //	WITHOUT_CLASSIFICATION	0.9999979185043191	WITHOUT_CLASSIFICATION	2.081495680967081E-6	DEFECT
// We can't have a null name, in case we're using EMOF serialization. //	WITHOUT_CLASSIFICATION	0.9999542113276556	WITHOUT_CLASSIFICATION	4.578867234437912E-5	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999986414502402	WITHOUT_CLASSIFICATION	1.3585497598851668E-6	DEFECT
// Switch to the new selection provider. //	WITHOUT_CLASSIFICATION	0.9999860197404127	WITHOUT_CLASSIFICATION	1.398025958735914E-5	DEFECT
// Fake a selection changed event to update the menus. //	WITHOUT_CLASSIFICATION	0.9999974341564656	WITHOUT_CLASSIFICATION	2.5658435344230097E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999375071796	WITHOUT_CLASSIFICATION	6.24928203174307E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999375071796	WITHOUT_CLASSIFICATION	6.24928203174307E-8	DEFECT
// Try and get the resource selection to determine a current directory for the file dialog. //	WITHOUT_CLASSIFICATION	0.9999999251646056	WITHOUT_CLASSIFICATION	7.483539440227245E-8	DEFECT
// Get the resource... //	WITHOUT_CLASSIFICATION	0.9999905510539585	WITHOUT_CLASSIFICATION	9.448946041486797E-6	DEFECT
// Get the resource parent, if its a file. //	WITHOUT_CLASSIFICATION	0.999999763815627	WITHOUT_CLASSIFICATION	2.361843729735805E-7	DEFECT
// This gives us a directory... //	WITHOUT_CLASSIFICATION	0.999869268301826	WITHOUT_CLASSIFICATION	1.307316981739351E-4	DEFECT
// Make up a unique new name here. //	WITHOUT_CLASSIFICATION	0.9999507198729867	WITHOUT_CLASSIFICATION	4.9280127013261314E-5	DEFECT
// Prepare for CreateChild item addition or removal. //	WITHOUT_CLASSIFICATION	0.9999867236477985	WITHOUT_CLASSIFICATION	1.3276352201542563E-5	DEFECT
// Prepare for CreateSibling item addition or removal. //	WITHOUT_CLASSIFICATION	0.9999558853038598	WITHOUT_CLASSIFICATION	4.41146961400934E-5	DEFECT
// Force an update because Eclipse hides empty menus now. //	WITHOUT_CLASSIFICATION	0.9999999833317251	WITHOUT_CLASSIFICATION	1.66682748835605E-8	DEFECT
// Remove any menu items for old selection. //	WITHOUT_CLASSIFICATION	0.993650042419181	WITHOUT_CLASSIFICATION	0.006349957580818987	DEFECT
// Query the new selection for appropriate new child/sibling descriptors //	WITHOUT_CLASSIFICATION	0.9999785343443163	WITHOUT_CLASSIFICATION	2.1465655683705155E-5	DEFECT
// Generate actions for selection; populate and redraw the menus. //	WITHOUT_CLASSIFICATION	0.9999976485122509	WITHOUT_CLASSIFICATION	2.3514877490711937E-6	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999946923429	WITHOUT_CLASSIFICATION	5.307657104793272E-9	DEFECT
// Look into SubContributionItems //	WITHOUT_CLASSIFICATION	0.9999998561996893	WITHOUT_CLASSIFICATION	1.438003106477349E-7	DEFECT
// Delete the ActionContributionItems with matching action. //	WITHOUT_CLASSIFICATION	0.9999985955142616	WITHOUT_CLASSIFICATION	1.404485738342238E-6	DEFECT
// If it's really a contained child, return the feature for it. //	WITHOUT_CLASSIFICATION	0.9999995607571711	WITHOUT_CLASSIFICATION	4.392428288146304E-7	DEFECT
// Changes to the parameters should also update the label. //	WITHOUT_CLASSIFICATION	0.9999964559627882	WITHOUT_CLASSIFICATION	3.5440372117136747E-6	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999986414502402	WITHOUT_CLASSIFICATION	1.3585497598851668E-6	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999946923429	WITHOUT_CLASSIFICATION	5.307657104793272E-9	DEFECT
// If it's really a contained child, return the feature for it. //	WITHOUT_CLASSIFICATION	0.9999995607571711	WITHOUT_CLASSIFICATION	4.392428288146304E-7	DEFECT
// Set the instance type name instead, since that will also set the instance class name  // but this way will make undo restore the current instance type name correctly //	WITHOUT_CLASSIFICATION	0.9222575280892277	WITHOUT_CLASSIFICATION	0.07774247191077228	DEFECT
// Changes to parameter types should also update the operation's label. //	WITHOUT_CLASSIFICATION	0.9999965005118966	WITHOUT_CLASSIFICATION	3.499488103413607E-6	DEFECT
// Filter out types that aren't permitted. //	WITHOUT_CLASSIFICATION	0.9999310976783934	WITHOUT_CLASSIFICATION	6.890232160663752E-5	DEFECT
// Filter out types that aren't permitted. //	WITHOUT_CLASSIFICATION	0.9999310976783934	WITHOUT_CLASSIFICATION	6.890232160663752E-5	DEFECT
// Avoid allowing choices that will lead to duplicates. //	WITHOUT_CLASSIFICATION	0.9999952340833548	WITHOUT_CLASSIFICATION	4.765916645205081E-6	DEFECT
//  Avoid allowing a choice that will lead to duplicates. //	WITHOUT_CLASSIFICATION	0.9999981888330896	WITHOUT_CLASSIFICATION	1.8111669104645162E-6	DEFECT
// Ensure that there are enough type arguments to match the number of type parameters. //	WITHOUT_CLASSIFICATION	0.999999627105934	WITHOUT_CLASSIFICATION	3.7289406590182574E-7	DEFECT
// You can only add type arguments if there are type parameters not yet used up. //	WITHOUT_CLASSIFICATION	0.9999979384264402	WITHOUT_CLASSIFICATION	2.0615735597266833E-6	DEFECT
// You cannot add any children for a type parameter. //	WITHOUT_CLASSIFICATION	0.9979320754249755	WITHOUT_CLASSIFICATION	0.0020679245750245775	DEFECT
// Only if you are contained by a generic type can you have bounds, // and only if there is no classifier or type parameter // and in that case the lower bound is returned only if that's the one that's set. //	WITHOUT_CLASSIFICATION	0.9999999990913072	WITHOUT_CLASSIFICATION	9.086927131609571E-10	DEFECT
// Otherwise you can't make it a child. //	WITHOUT_CLASSIFICATION	0.999981500749769	WITHOUT_CLASSIFICATION	1.849925023102483E-5	DEFECT
// Let them choose type parameters as well. //	WITHOUT_CLASSIFICATION	0.9999999672115928	WITHOUT_CLASSIFICATION	3.278840728757979E-8	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999946923429	WITHOUT_CLASSIFICATION	5.307657104793272E-9	DEFECT
// Handle eOpposite specially. //	WITHOUT_CLASSIFICATION	0.9999989544053345	WITHOUT_CLASSIFICATION	1.0455946655080809E-6	DEFECT
// Don't use the normal reference copying for eOpposite. //	WITHOUT_CLASSIFICATION	0.9999997107547811	WITHOUT_CLASSIFICATION	2.8924521893198097E-7	DEFECT
// Write a signature that will be obviously corrupt // if the binary contents end up being UTF-8 encoded // or altered by line feed or carriage return changes. //	WITHOUT_CLASSIFICATION	0.9999996832596494	WITHOUT_CLASSIFICATION	3.167403505880709E-7	DEFECT
// Filter out classes that aren't permitted. //	WITHOUT_CLASSIFICATION	0.9999829140216063	WITHOUT_CLASSIFICATION	1.708597839367738E-5	DEFECT
// Read all the values into an array. //	WITHOUT_CLASSIFICATION	0.9998695112201662	WITHOUT_CLASSIFICATION	1.30488779833725E-4	DEFECT
// Read all the values into an array. //	WITHOUT_CLASSIFICATION	0.9998695112201662	WITHOUT_CLASSIFICATION	1.30488779833725E-4	DEFECT
// If the list is empty, we need to add all the objects, // otherwise, the reference is bidirectional and the list is at least partially populated. //	WITHOUT_CLASSIFICATION	0.9999997317513134	WITHOUT_CLASSIFICATION	2.68248686614176E-7	DEFECT
// If an input stream can't be created, ensure that the resource is still considered loaded after the failure, // and do all the same processing we'd do if we actually were able to create a valid input stream. //	WITHOUT_CLASSIFICATION	0.9999974712461959	WITHOUT_CLASSIFICATION	2.528753804159491E-6	DEFECT
// This guard is needed to ensure that clear doesn't make the resource become loaded. //	WITHOUT_CLASSIFICATION	0.9999963216470298	WITHOUT_CLASSIFICATION	3.6783529702406595E-6	DEFECT
// If we haven't yet encrypted or decrypted, generate a key. This key will  // only be used for encryption. Decryption keys are always derived from // the header of the input stream itself.	WITHOUT_CLASSIFICATION	0.9999951860955306	WITHOUT_CLASSIFICATION	4.813904469341966E-6	DEFECT
// write the header to the output stream. this has the format  // (delimeters are not written): // PBE IV|ENCRYPTION IV|ENCRYPTED KEY LENGTH|ENCRYPTED KEY	WITHOUT_CLASSIFICATION	0.9999997329802274	WITHOUT_CLASSIFICATION	2.670197725896178E-7	DEFECT
// The CipherOutputStream shoudln't close the underlying stream //	WITHOUT_CLASSIFICATION	0.9999982914870128	WITHOUT_CLASSIFICATION	1.708512987128515E-6	DEFECT
// Build a list of the keys //	WITHOUT_CLASSIFICATION	0.9999958681817515	WITHOUT_CLASSIFICATION	4.131818248594305E-6	DEFECT
// The classifier of an references's generic type must be a class. //	WITHOUT_CLASSIFICATION	0.9999994879290465	WITHOUT_CLASSIFICATION	5.120709536038376E-7	DEFECT
// If they are the same classifier, they are of course equal. //	WITHOUT_CLASSIFICATION	0.9999999502885317	WITHOUT_CLASSIFICATION	4.971146817892208E-8	DEFECT
// Ignore derived features. //	WITHOUT_CLASSIFICATION	0.9999999601928288	WITHOUT_CLASSIFICATION	3.9807171124464436E-8	DEFECT
// Don't set the type if it's already set. //	WITHOUT_CLASSIFICATION	0.9999919466628521	WITHOUT_CLASSIFICATION	8.0533371479645E-6	DEFECT
// Look through all the references... //	WITHOUT_CLASSIFICATION	0.9995096114265232	WITHOUT_CLASSIFICATION	4.903885734768817E-4	DEFECT
// Do the extent processing that should have been done for the root but was actualljy done for the document root. //	WITHOUT_CLASSIFICATION	0.9999968187981721	WITHOUT_CLASSIFICATION	3.1812018278364845E-6	DEFECT
// Ensure that the map for Ecore is not repeatedly populated and that Property maps to EReference rather than EAttribute. //	WITHOUT_CLASSIFICATION	0.9981042705545732	WITHOUT_CLASSIFICATION	0.0018957294454267479	DEFECT
// Create annotations // http:///org/eclipse/emf/ecore/util/ExtendedMetaData	WITHOUT_CLASSIFICATION	0.9999935235405992	WITHOUT_CLASSIFICATION	6.476459400702345E-6	DEFECT
// Internal use only. // The @ always matches line beginnings.	WITHOUT_CLASSIFICATION	0.9999999804733117	WITHOUT_CLASSIFICATION	1.9526688268238116E-8	DEFECT
// Reserve a place to insert xmlns declarations after we know what they all are. //	WITHOUT_CLASSIFICATION	0.999999229365803	WITHOUT_CLASSIFICATION	7.706341971049665E-7	DEFECT
// result = new XMLResource.XMLInfoImpl(); // result.setXMLRepresentation(XMLResource.XMLInfo.UNSPECIFIED);	WITHOUT_CLASSIFICATION	0.9999998009132097	WITHOUT_CLASSIFICATION	1.9908679034661726E-7	DEFECT
// Need not to call setSource() because // a caller can not access this match instance.	WITHOUT_CLASSIFICATION	0.9999999659565832	WITHOUT_CLASSIFICATION	3.4043416825852084E-8	DEFECT
// src:    o--------o // sub:      o----o // res:    o-o    o-o // Reuse src(=right res)	WITHOUT_CLASSIFICATION	0.9998690267433402	WITHOUT_CLASSIFICATION	1.3097325665976193E-4	DEFECT
// Ignore CHAR tokens. // ** // **	WITHOUT_CLASSIFICATION	0.9999782234515602	WITHOUT_CLASSIFICATION	2.1776548439870263E-5	DEFECT
//missing Specials add manually // 84	WITHOUT_CLASSIFICATION	0.9999907765495915	WITHOUT_CLASSIFICATION	9.223450408518E-6	DEFECT
//Check if they are PAD characters //Two PAD e.g. 3c[Pad][Pad] //last 4 bits should be zero	WITHOUT_CLASSIFICATION	0.9999999967207915	WITHOUT_CLASSIFICATION	3.279208499723183E-9	DEFECT
// Path segments cannot contain '[' or ']' since pchar // production was not changed by RFC 2732.	WITHOUT_CLASSIFICATION	0.9999964476378836	WITHOUT_CLASSIFICATION	3.5523621163957743E-6	DEFECT
// // Data //	WITHOUT_CLASSIFICATION	0.9999993075544766	WITHOUT_CLASSIFICATION	6.92445523340779E-7	DEFECT
// Check for scheme, which must be before '/', '?' or '#'. Also handle // names with DOS drive letters ('D:'), so 1-character schemes are not // allowed.	WITHOUT_CLASSIFICATION	0.9999999985529913	WITHOUT_CLASSIFICATION	1.447008792297454E-9	DEFECT
// Check for scheme, which must be before '/', '?' or '#'. Also handle // names with DOS drive letters ('D:'), so 1-character schemes are not // allowed.	WITHOUT_CLASSIFICATION	0.9999999985529913	WITHOUT_CLASSIFICATION	1.447008792297454E-9	DEFECT
// 6e - remove all "<segment>/../" where "<segment>" is a complete // path segment not equal to ".."	WITHOUT_CLASSIFICATION	0.9996286540251293	WITHOUT_CLASSIFICATION	3.7134597487068296E-4	DEFECT
// If the second character wasn't ':', in order to be valid, // the remainder of the string must match IPv4Address,  // and we must have read exactly 6 16-bit groups.	WITHOUT_CLASSIFICATION	0.9999937343304031	WITHOUT_CLASSIFICATION	6.265669596904028E-6	DEFECT
// userinfo can contain alphanumerics, mark characters, escaped // and ';',':','&','=','+','$',','	WITHOUT_CLASSIFICATION	0.9999999986183534	WITHOUT_CLASSIFICATION	1.3816465417767347E-9	DEFECT
// Fill 2 of value (byte) 49 // Fill 26 of value (byte) -3 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999248644826114	WITHOUT_CLASSIFICATION	7.513551738856945E-5	DEFECT
// Trying to match the following productions: // hexseq = hex4 *( ":" hex4) // hex4   = 1*4HEXDIG	WITHOUT_CLASSIFICATION	0.9999763553518206	WITHOUT_CLASSIFICATION	2.364464817928376E-5	DEFECT
// Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999389023564254	WITHOUT_CLASSIFICATION	6.109764357464507E-5	DEFECT
// Check whether there is an opposite that needs attention. //	WITHOUT_CLASSIFICATION	0.9999985614645682	WITHOUT_CLASSIFICATION	1.4385354317618606E-6	DEFECT
// Return whether there is a list, the value is in the list, and index is in range... //	WITHOUT_CLASSIFICATION	0.9992510490236072	WITHOUT_CLASSIFICATION	7.489509763929209E-4	DEFECT
// If we're creating a child under an object in a feature map, the selection will be the feature map entry. // We want to replace it with the model object. //	WITHOUT_CLASSIFICATION	0.9999989960969493	WITHOUT_CLASSIFICATION	1.0039030506838365E-6	DEFECT
// If there isn't an executable command we should maybe try a link operation, but only if we're allowed and not doing a link. //	WITHOUT_CLASSIFICATION	0.999134585494416	WITHOUT_CLASSIFICATION	8.654145055839324E-4	DEFECT
// Only return the feedback for an executable command. //	WITHOUT_CLASSIFICATION	0.9999564632369278	WITHOUT_CLASSIFICATION	4.353676307235602E-5	DEFECT
// No image is a good default. //	WITHOUT_CLASSIFICATION	0.9999998936267991	WITHOUT_CLASSIFICATION	1.0637320091407167E-7	DEFECT
// Add it to the list and remove it from the other list. //	WITHOUT_CLASSIFICATION	0.9999989108605047	WITHOUT_CLASSIFICATION	1.0891394953499846E-6	DEFECT
// Commands should operate on the values, not their wrappers.  If the command's values needed to be unwrapped, // we'll back get a new CommandParameter. //	WITHOUT_CLASSIFICATION	0.9999599577068288	WITHOUT_CLASSIFICATION	4.004229317122081E-5	DEFECT
// When an object is controlled, the only change will be in the new resource's contents, so it must // refresh the whole viewer to hit the object's label. //	WITHOUT_CLASSIFICATION	0.9999999851635804	WITHOUT_CLASSIFICATION	1.483641973645768E-8	DEFECT
// Record the part. //	WITHOUT_CLASSIFICATION	0.9999950616124984	WITHOUT_CLASSIFICATION	4.938387501562876E-6	DEFECT
// give up if we couldn't create the command; otherwise, use a // CommandActionDelegate to set the action's text, tool-tip, icon, // etc. or just use the default icon	WITHOUT_CLASSIFICATION	0.9999999998440381	WITHOUT_CLASSIFICATION	1.559619998771347E-10	DEFECT
// This came from trial and error, yielding decent results on all // platforms.  It should be consistent with activate(). //	WITHOUT_CLASSIFICATION	0.9993041810288809	WITHOUT_CLASSIFICATION	6.958189711191138E-4	DEFECT
// If we don't already have it, try to get the source early. We can't give // feedback if it's not available yet (this is platform-dependent). //	WITHOUT_CLASSIFICATION	0.99970060406203	WITHOUT_CLASSIFICATION	2.993959379700762E-4	DEFECT
// Load the model and if it's not one already considered, e.g., a local version in the workspace, process its GenPackages. //	WITHOUT_CLASSIFICATION	0.9999987856842408	WITHOUT_CLASSIFICATION	1.2143157591614843E-6	DEFECT
// If we've found thing with type parameters, search them for a match. //	WITHOUT_CLASSIFICATION	0.9999993773621287	WITHOUT_CLASSIFICATION	6.226378713576172E-7	DEFECT
// process documentation info and create eEnumLiteral for each line //	WITHOUT_CLASSIFICATION	0.9999999847206043	WITHOUT_CLASSIFICATION	1.527939580177788E-8	DEFECT
// This just notifies those things that are affected by the section. //	WITHOUT_CLASSIFICATION	0.999995700237801	WITHOUT_CLASSIFICATION	4.299762198921304E-6	DEFECT
// Creates the model from the editor input //	WITHOUT_CLASSIFICATION	0.9999996360956815	WITHOUT_CLASSIFICATION	3.6390431850621036E-7	DEFECT
// This is the method that gets invoked when the operation runs. //	WITHOUT_CLASSIFICATION	0.9999991627927581	WITHOUT_CLASSIFICATION	8.372072419409931E-7	DEFECT
// Generate actions for selection; populate and redraw the menus. //	WITHOUT_CLASSIFICATION	0.9999976485122509	WITHOUT_CLASSIFICATION	2.3514877490711937E-6	DEFECT
// this is the case that starting process rose file by passing cat file name // this is a special case. // normally, user should pass mdl file instead of cat file //  // file is a cat file // modelTree did contain quid info	WITHOUT_CLASSIFICATION	0.9999999615568653	WITHOUT_CLASSIFICATION	3.844313473149875E-8	DEFECT
// Create a page for the parent tree view. //	WITHOUT_CLASSIFICATION	0.9999841953023256	WITHOUT_CLASSIFICATION	1.5804697674284708E-5	DEFECT
// Make sure it's okay. //	WITHOUT_CLASSIFICATION	0.999990232211429	WITHOUT_CLASSIFICATION	9.767788570897222E-6	DEFECT
// We either remove the root mapping or we use the iterator that returned the most recent next mapping. //	WITHOUT_CLASSIFICATION	0.9999995586989204	WITHOUT_CLASSIFICATION	4.4130107959541166E-7	DEFECT
// Cache the tree path for each object. //	WITHOUT_CLASSIFICATION	0.9999948031718626	WITHOUT_CLASSIFICATION	5.196828137315945E-6	DEFECT
// Set the editor's selection based on the current viewer's selection. //	WITHOUT_CLASSIFICATION	0.9999362657724558	WITHOUT_CLASSIFICATION	6.373422754417096E-5	DEFECT
// The helper part assumes that the summary is likely based on the helper and will change when the helper is set. //	WITHOUT_CLASSIFICATION	0.9998104137796576	WITHOUT_CLASSIFICATION	1.8958622034246782E-4	DEFECT
// This is the method that gets invoked when the operation runs. //	WITHOUT_CLASSIFICATION	0.9999991627927581	WITHOUT_CLASSIFICATION	8.372072419409931E-7	DEFECT
// This is for the out2in feature. //	WITHOUT_CLASSIFICATION	0.9999591723229658	WITHOUT_CLASSIFICATION	4.082767703419563E-5	DEFECT
// This is for the topDown feature. //	WITHOUT_CLASSIFICATION	0.9999409519081198	WITHOUT_CLASSIFICATION	5.904809188011719E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999375071796	WITHOUT_CLASSIFICATION	6.24928203174307E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999375071796	WITHOUT_CLASSIFICATION	6.24928203174307E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999375071796	WITHOUT_CLASSIFICATION	6.24928203174307E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999375071796	WITHOUT_CLASSIFICATION	6.24928203174307E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999375071796	WITHOUT_CLASSIFICATION	6.24928203174307E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999375071796	WITHOUT_CLASSIFICATION	6.24928203174307E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999375071796	WITHOUT_CLASSIFICATION	6.24928203174307E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999375071796	WITHOUT_CLASSIFICATION	6.24928203174307E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999375071796	WITHOUT_CLASSIFICATION	6.24928203174307E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999375071796	WITHOUT_CLASSIFICATION	6.24928203174307E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999375071796	WITHOUT_CLASSIFICATION	6.24928203174307E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999375071796	WITHOUT_CLASSIFICATION	6.24928203174307E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999375071796	WITHOUT_CLASSIFICATION	6.24928203174307E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999375071796	WITHOUT_CLASSIFICATION	6.24928203174307E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999375071796	WITHOUT_CLASSIFICATION	6.24928203174307E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999375071796	WITHOUT_CLASSIFICATION	6.24928203174307E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999375071796	WITHOUT_CLASSIFICATION	6.24928203174307E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999375071796	WITHOUT_CLASSIFICATION	6.24928203174307E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999375071796	WITHOUT_CLASSIFICATION	6.24928203174307E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999375071796	WITHOUT_CLASSIFICATION	6.24928203174307E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999375071796	WITHOUT_CLASSIFICATION	6.24928203174307E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999375071796	WITHOUT_CLASSIFICATION	6.24928203174307E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999375071796	WITHOUT_CLASSIFICATION	6.24928203174307E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999375071796	WITHOUT_CLASSIFICATION	6.24928203174307E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999375071796	WITHOUT_CLASSIFICATION	6.24928203174307E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999375071796	WITHOUT_CLASSIFICATION	6.24928203174307E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999375071796	WITHOUT_CLASSIFICATION	6.24928203174307E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999375071796	WITHOUT_CLASSIFICATION	6.24928203174307E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999375071796	WITHOUT_CLASSIFICATION	6.24928203174307E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999375071796	WITHOUT_CLASSIFICATION	6.24928203174307E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999375071796	WITHOUT_CLASSIFICATION	6.24928203174307E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999375071796	WITHOUT_CLASSIFICATION	6.24928203174307E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999375071796	WITHOUT_CLASSIFICATION	6.24928203174307E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999375071796	WITHOUT_CLASSIFICATION	6.24928203174307E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999375071796	WITHOUT_CLASSIFICATION	6.24928203174307E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999375071796	WITHOUT_CLASSIFICATION	6.24928203174307E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999375071796	WITHOUT_CLASSIFICATION	6.24928203174307E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999375071796	WITHOUT_CLASSIFICATION	6.24928203174307E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999375071796	WITHOUT_CLASSIFICATION	6.24928203174307E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999375071796	WITHOUT_CLASSIFICATION	6.24928203174307E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999375071796	WITHOUT_CLASSIFICATION	6.24928203174307E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999375071796	WITHOUT_CLASSIFICATION	6.24928203174307E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999375071796	WITHOUT_CLASSIFICATION	6.24928203174307E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999375071796	WITHOUT_CLASSIFICATION	6.24928203174307E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999375071796	WITHOUT_CLASSIFICATION	6.24928203174307E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999375071796	WITHOUT_CLASSIFICATION	6.24928203174307E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999375071796	WITHOUT_CLASSIFICATION	6.24928203174307E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999375071796	WITHOUT_CLASSIFICATION	6.24928203174307E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999375071796	WITHOUT_CLASSIFICATION	6.24928203174307E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999375071796	WITHOUT_CLASSIFICATION	6.24928203174307E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999375071796	WITHOUT_CLASSIFICATION	6.24928203174307E-8	DEFECT
// There needs to be another URL protocol right after the archive protocol, and not a "/". //	WITHOUT_CLASSIFICATION	0.9998399787815493	WITHOUT_CLASSIFICATION	1.6002121845069465E-4	DEFECT
// Go directly to the right entry in the zip file,  // get the stream,  // and wrap it so that closing it closes the zip file. //	WITHOUT_CLASSIFICATION	0.9999996588755133	WITHOUT_CLASSIFICATION	3.411244866914058E-7	DEFECT
// Record them as generic streams to record state during the loop that emulates recursion. //	WITHOUT_CLASSIFICATION	0.9999994409154728	WITHOUT_CLASSIFICATION	5.590845272510983E-7	DEFECT
// If this entry isn't the end marker  // and isn't the matching one that we are replacing... //	WITHOUT_CLASSIFICATION	0.998978509118781	WITHOUT_CLASSIFICATION	0.001021490881218931	DEFECT
// Try to transfer it by reading the contents of the temporary file  // and writing them to the output stream of the delegate. //	WITHOUT_CLASSIFICATION	0.999999997828445	WITHOUT_CLASSIFICATION	2.1715550449111637E-9	DEFECT
// Either execute or redo the command, as appropriate. //	WITHOUT_CLASSIFICATION	0.9999855435212792	WITHOUT_CLASSIFICATION	1.4456478720851082E-5	DEFECT
// Skip over the command that threw the exception. //	WITHOUT_CLASSIFICATION	0.9999569496707004	WITHOUT_CLASSIFICATION	4.305032929962525E-5	DEFECT
// This is kind of tricky. // If the saveIndex was in the redo part of the command list which has now been wiped out, // then we can never reach a point where a save is not necessary, not even if we undo all the way back to the beginning. //	WITHOUT_CLASSIFICATION	0.9999964053162033	WITHOUT_CLASSIFICATION	3.5946837967208205E-6	DEFECT
// Count up the objects that will be removed. // The objects are exchanged to produce this list's order //	WITHOUT_CLASSIFICATION	0.9999999673922548	WITHOUT_CLASSIFICATION	3.260774514901263E-8	DEFECT
// Count up the objects that will be removed. // The objects are exchanged to produce this list's order //	WITHOUT_CLASSIFICATION	0.9999999673922548	WITHOUT_CLASSIFICATION	3.260774514901263E-8	DEFECT
// Count up the objects that will be removed. // The objects are exchanged to produce this list's order //	WITHOUT_CLASSIFICATION	0.9999999673922548	WITHOUT_CLASSIFICATION	3.260774514901263E-8	DEFECT
// Remove from by position in reverse order. //	WITHOUT_CLASSIFICATION	0.9999252436653682	WITHOUT_CLASSIFICATION	7.475633463177977E-5	DEFECT
// remove/add the action bar from the view so to avoid // having an empty action bar participating in the view's // layout calculation (and maybe causing an empty bar to appear)	WITHOUT_CLASSIFICATION	0.9991489683413044	WITHOUT_CLASSIFICATION	8.510316586955568E-4	DEFECT
//actionBar.setBackground(WorkbenchColors.getSystemColor(SWT.COLOR_WIDGET_BACKGROUND)); //systemBar.setBackground(WorkbenchColors.getSystemColor(SWT.COLOR_WIDGET_BACKGROUND));	WITHOUT_CLASSIFICATION	0.9999989751864615	WITHOUT_CLASSIFICATION	1.0248135384949145E-6	DEFECT
// Define gradient (blue to widget background color)	WITHOUT_CLASSIFICATION	0.9999997912143074	WITHOUT_CLASSIFICATION	2.0878569264133337E-7	DEFECT
// Create a new array. //	WITHOUT_CLASSIFICATION	0.9999986839638185	WITHOUT_CLASSIFICATION	1.3160361814189673E-6	DEFECT
// buttonComposite has to be the first child of composite because subclasses are expecting this.	WITHOUT_CLASSIFICATION	0.9999999959280159	WITHOUT_CLASSIFICATION	4.071984058465637E-9	DEFECT
// Common to all URI types.	WITHOUT_CLASSIFICATION	0.9999979808757385	WITHOUT_CLASSIFICATION	2.019124261415869E-6	DEFECT
// A cache of URIs, keyed by the strings from which they were created. // The fragment of any URI is removed before caching it here, to minimize // the size of the cache in the usual case where most URIs only differ by // the fragment.	WITHOUT_CLASSIFICATION	0.999997403577954	WITHOUT_CLASSIFICATION	2.596422046078485E-6	DEFECT
// The lower-cased schemes that will be used to identify archive URIs.	WITHOUT_CLASSIFICATION	0.9999979475946036	WITHOUT_CLASSIFICATION	2.0524053963755085E-6	DEFECT
// Special segment values interpreted at resolve and resolve time.	WITHOUT_CLASSIFICATION	0.9999961610452611	WITHOUT_CLASSIFICATION	3.8389547388617475E-6	DEFECT
// Some character classes, as defined in RFC 2396's BNF for URI. // These are 128-bit bitmasks, stored as two longs, where the Nth bit is set // iff the ASCII character with value N is included in the set.  These are // created with the highBitmask() and lowBitmask() methods defined below, // and a character is tested against them using matches(). //	WITHOUT_CLASSIFICATION	0.9999999999929093	WITHOUT_CLASSIFICATION	7.090657753620786E-12	DEFECT
// | ucschar | escaped	WITHOUT_CLASSIFICATION	0.9999999896183965	WITHOUT_CLASSIFICATION	1.0381603479729409E-8	DEFECT
// We can't want to do encoding of platform resource URIs by default yet.    //	WITHOUT_CLASSIFICATION	0.9999985572782725	WITHOUT_CLASSIFICATION	1.4427217274555063E-6	DEFECT
// Returns the upper half bitmask for all the ASCII characters in the given // string.	WITHOUT_CLASSIFICATION	0.9999993166499137	WITHOUT_CLASSIFICATION	6.833500862844542E-7	DEFECT
// Uses a cache to speed up creation of a URI from a string.  The cache // is consulted to see if the URI, less any fragment, has already been // created.  If needed, the fragment is re-appended to the cached URI, // which is considerably more efficient than creating the whole URI from // scratch.  If the URI wasn't found in the cache, it is created using // parseIntoURI() and then cached.  This method should always be used // by string-parsing factory methods, instead of parseIntoURI() directly.	WITHOUT_CLASSIFICATION	0.9999658093189896	WITHOUT_CLASSIFICATION	3.419068101034887E-5	DEFECT
// Finds the next occurrence of one of the characters in the set represented // by the given bitmask in the given string, beginning at index i. The index // of the first found character, or s.length() if there is none, is // returned.  Before searching, i is limited to the range [0, s.length()]. //	WITHOUT_CLASSIFICATION	0.9999999999940872	WITHOUT_CLASSIFICATION	5.91292529871482E-12	DEFECT
//boolean iri = false;	WITHOUT_CLASSIFICATION	0.9999996267329112	WITHOUT_CLASSIFICATION	3.73267088706214E-7	DEFECT
//iri = iri || containsNonASCII(segments[i]);	WITHOUT_CLASSIFICATION	0.9999997230860993	WITHOUT_CLASSIFICATION	2.76913900705187E-7	DEFECT
// <p>A valid query may be null or contain any allowed URI characters.	WITHOUT_CLASSIFICATION	0.9999999705132419	WITHOUT_CLASSIFICATION	2.948675809921606E-8	DEFECT
//return value == null || validate(value, URIC_HI, URIC_LO, true, true);	WITHOUT_CLASSIFICATION	0.9999964506415108	WITHOUT_CLASSIFICATION	3.5493584891254705E-6	DEFECT
// Tests the non-null string value to see if it contains only ASCII // characters in the set represented by the specified 128-bit bitmask, // as well as, optionally, non-ASCII characters 0xA0 and above, and, // also optionally, escape sequences of % followed by two hex digits. // This method is used for the new, strict URI validation that is not // not currently in place.	WITHOUT_CLASSIFICATION	0.9999999999988805	WITHOUT_CLASSIFICATION	1.1195388175851805E-12	DEFECT
// note: authority == null -> hierarchical // (authority == null && device == null && !absolutePath) -> scheme == null	WITHOUT_CLASSIFICATION	0.9999986577165382	WITHOUT_CLASSIFICATION	1.3422834619023644E-6	DEFECT
// current document reference: use base path and query	WITHOUT_CLASSIFICATION	0.9999955520875268	WITHOUT_CLASSIFICATION	4.447912473154679E-6	DEFECT
// else keep device, path, and query	WITHOUT_CLASSIFICATION	0.9999999886145962	WITHOUT_CLASSIFICATION	1.1385403802743457E-8	DEFECT
// else keep authority, device, path, and query	WITHOUT_CLASSIFICATION	0.9999999781157155	WITHOUT_CLASSIFICATION	2.1884284528252733E-8	DEFECT
// Merges this URI's relative path with the base non-relative path.  If // base has no path, treat it as the root absolute path, unless this has // no path either.	WITHOUT_CLASSIFICATION	0.9999999661652821	WITHOUT_CLASSIFICATION	3.3834717901810764E-8	DEFECT
// if the relative path is empty or ends in an empty segment, a parent  // reference, or a self reference, add a trailing separator to a // non-empty path	WITHOUT_CLASSIFICATION	0.9999999158481804	WITHOUT_CLASSIFICATION	8.415181957493501E-8	DEFECT
// since base must be hierarchical, and since a non-hierarchical URI // must have both scheme and opaque part, the complete absolute URI is // needed to resolve to a non-hierarchical URI	WITHOUT_CLASSIFICATION	0.9999999876537786	WITHOUT_CLASSIFICATION	1.2346221337947865E-8	DEFECT
// path form demands an absolute path: keep it and query	WITHOUT_CLASSIFICATION	0.9999806530554832	WITHOUT_CLASSIFICATION	1.934694451673868E-5	DEFECT
// always include fragment, even if null; // no validation needed since all components are from existing URIs	WITHOUT_CLASSIFICATION	0.9999999979931488	WITHOUT_CLASSIFICATION	2.0068513264949676E-9	DEFECT
// Returns true if the non-relative path includes segments that would be // collapsed when resolving; false otherwise.  If preserveRootParents is // true, collapsible segments include any empty segments, except for the // last segment, as well as and parent and self references.  If // preserveRootsParents is false, parent references are not collapsible if // they are the first segment or preceded only by other parent // references.	WITHOUT_CLASSIFICATION	0.9999999205639143	WITHOUT_CLASSIFICATION	7.943608574182002E-8	DEFECT
// if endPath is shorter than startPath, the last segment of endPath may // not be compared: because startPath has been collapsed and had its // last segment removed, all preceding segments can be considered non- // empty and followed by a separator, while the last segment of endPath // will either be non-empty and not followed by a separator, or just empty	WITHOUT_CLASSIFICATION	0.9999596948358257	WITHOUT_CLASSIFICATION	4.030516417425866E-5	DEFECT
// absolute path or no path -> absolute path	WITHOUT_CLASSIFICATION	0.9999999479466815	WITHOUT_CLASSIFICATION	5.2053318524328646E-8	DEFECT
// Computes a three-character escape sequence for the byte, appending // it to the StringBuffer.  Only characters up to 0xFF should be escaped; // all but the least significant byte will be ignored.	WITHOUT_CLASSIFICATION	0.9999999948663464	WITHOUT_CLASSIFICATION	5.133653578199839E-9	DEFECT
/*   * Returns <code>true</code> if this URI contains non-ASCII characters;   * <code>false</code> otherwise.   *   * This unused code is included for possible future use...    */	WITHOUT_CLASSIFICATION	0.9999999990296834	WITHOUT_CLASSIFICATION	9.703165721666276E-10	DEFECT
// If that fails, determine the URL for the class itself. // The URL will be of one of the following forms, // so there are a few good places to consider looking for the plugin.properties. // // For a plugin.xml with runtime="common.jar": // jar:file:/D:/sandbox/unpackage1-3.1M7/eclipse/plugins/org.eclipse.emf.common/common.jar!/org/eclipse/common/CommonPlugin.class // // For a plugin.xml with runtime="runtime/common.jar": // jar:file:/D:/sandbox/unpackage1-3.1M7/eclipse/plugins/org.eclipse.emf.common/runtime/common.jar!/org/eclipse/common/CommonPlugin.class // // For a plugin.xml with runtime="." where the plugin is jarred: // jar:file:/D:/sandbox/unpackage1-3.1M7/eclipse/plugins/org.eclipse.emf.common.jar!/org/eclipse/common/CommonPlugin.class // // For a plugin.xml with runtime="." where the plugin is not jarred. // file:/D:/sandbox/unpackage1-3.1M7/eclipse/plugins/org.eclipse.emf.common/org/eclipse/emf/common/CommonPlugin.class // // Running in PDE with bin on classpath: // file:/D:/sandbox/unpackage1-3.1M7/eclipse/plugins/org.eclipse.emf.common/bin/org/eclipse/emf/common/CommonPlugin.class //	WITHOUT_CLASSIFICATION	0.9999905818273331	WITHOUT_CLASSIFICATION	9.418172666898962E-6	DEFECT
// If we can open  an input stream, then the plugin.properties is there, and we have a good base URL. //	WITHOUT_CLASSIFICATION	0.9988823961013396	WITHOUT_CLASSIFICATION	0.0011176038986604746	DEFECT
// If the bundle can't be found the normal way, try to find it as the base URL. // If that also doesn't work, rethrow the original exception. //	WITHOUT_CLASSIFICATION	0.9997840233489688	WITHOUT_CLASSIFICATION	2.159766510312971E-4	DEFECT
// ++modCount //	WITHOUT_CLASSIFICATION	0.9999969842716718	WITHOUT_CLASSIFICATION	3.0157283280338098E-6	DEFECT
// ++modCount //	WITHOUT_CLASSIFICATION	0.9999969842716718	WITHOUT_CLASSIFICATION	3.0157283280338098E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999996496589197	WITHOUT_CLASSIFICATION	3.5034108028605753E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999996496589197	WITHOUT_CLASSIFICATION	3.5034108028605753E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999996496589197	WITHOUT_CLASSIFICATION	3.5034108028605753E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999996496589197	WITHOUT_CLASSIFICATION	3.5034108028605753E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999996496589197	WITHOUT_CLASSIFICATION	3.5034108028605753E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999996496589197	WITHOUT_CLASSIFICATION	3.5034108028605753E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999996496589197	WITHOUT_CLASSIFICATION	3.5034108028605753E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999996496589197	WITHOUT_CLASSIFICATION	3.5034108028605753E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999996496589197	WITHOUT_CLASSIFICATION	3.5034108028605753E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999996496589197	WITHOUT_CLASSIFICATION	3.5034108028605753E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999996496589197	WITHOUT_CLASSIFICATION	3.5034108028605753E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999996496589197	WITHOUT_CLASSIFICATION	3.5034108028605753E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999996496589197	WITHOUT_CLASSIFICATION	3.5034108028605753E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999996496589197	WITHOUT_CLASSIFICATION	3.5034108028605753E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999996496589197	WITHOUT_CLASSIFICATION	3.5034108028605753E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999996496589197	WITHOUT_CLASSIFICATION	3.5034108028605753E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999996496589197	WITHOUT_CLASSIFICATION	3.5034108028605753E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999996496589197	WITHOUT_CLASSIFICATION	3.5034108028605753E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999996496589197	WITHOUT_CLASSIFICATION	3.5034108028605753E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999996496589197	WITHOUT_CLASSIFICATION	3.5034108028605753E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999996496589197	WITHOUT_CLASSIFICATION	3.5034108028605753E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999996496589197	WITHOUT_CLASSIFICATION	3.5034108028605753E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999996496589197	WITHOUT_CLASSIFICATION	3.5034108028605753E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999996496589197	WITHOUT_CLASSIFICATION	3.5034108028605753E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999996496589197	WITHOUT_CLASSIFICATION	3.5034108028605753E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999996496589197	WITHOUT_CLASSIFICATION	3.5034108028605753E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999996496589197	WITHOUT_CLASSIFICATION	3.5034108028605753E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999996496589197	WITHOUT_CLASSIFICATION	3.5034108028605753E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999996496589197	WITHOUT_CLASSIFICATION	3.5034108028605753E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999996496589197	WITHOUT_CLASSIFICATION	3.5034108028605753E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999996496589197	WITHOUT_CLASSIFICATION	3.5034108028605753E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999996496589197	WITHOUT_CLASSIFICATION	3.5034108028605753E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999996496589197	WITHOUT_CLASSIFICATION	3.5034108028605753E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999996496589197	WITHOUT_CLASSIFICATION	3.5034108028605753E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999996496589197	WITHOUT_CLASSIFICATION	3.5034108028605753E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999996496589197	WITHOUT_CLASSIFICATION	3.5034108028605753E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999996496589197	WITHOUT_CLASSIFICATION	3.5034108028605753E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999996496589197	WITHOUT_CLASSIFICATION	3.5034108028605753E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999996496589197	WITHOUT_CLASSIFICATION	3.5034108028605753E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999996496589197	WITHOUT_CLASSIFICATION	3.5034108028605753E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999996496589197	WITHOUT_CLASSIFICATION	3.5034108028605753E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999996496589197	WITHOUT_CLASSIFICATION	3.5034108028605753E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999996496589197	WITHOUT_CLASSIFICATION	3.5034108028605753E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999996496589197	WITHOUT_CLASSIFICATION	3.5034108028605753E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999996496589197	WITHOUT_CLASSIFICATION	3.5034108028605753E-7	DEFECT
// Open an editor on the new file. //	WITHOUT_CLASSIFICATION	0.999996639357416	WITHOUT_CLASSIFICATION	3.3606425840097315E-6	DEFECT
// Open an editor on the new file. //	WITHOUT_CLASSIFICATION	0.999996639357416	WITHOUT_CLASSIFICATION	3.3606425840097315E-6	DEFECT
// feature is instance of EAttribute	WITHOUT_CLASSIFICATION	0.9999998100889458	WITHOUT_CLASSIFICATION	1.8991105428129106E-7	DEFECT
// Create a proper feature map entry. //	WITHOUT_CLASSIFICATION	0.9999493171138756	WITHOUT_CLASSIFICATION	5.0682886124526966E-5	DEFECT
// Bidirectional references need to use this less efficient approach because some //  or all of the changes may already have been made from the other end. //	WITHOUT_CLASSIFICATION	0.9999996076592719	WITHOUT_CLASSIFICATION	3.923407280583393E-7	DEFECT
// caches the list value.	WITHOUT_CLASSIFICATION	0.9999998200394052	WITHOUT_CLASSIFICATION	1.7996059485239844E-7	DEFECT
// caches the list value.	WITHOUT_CLASSIFICATION	0.9999998200394052	WITHOUT_CLASSIFICATION	1.7996059485239844E-7	DEFECT
// caches the list value.	WITHOUT_CLASSIFICATION	0.9999998200394052	WITHOUT_CLASSIFICATION	1.7996059485239844E-7	DEFECT
// Maintain a (weak hash) set on the type parameter of all referencing generic types. //	WITHOUT_CLASSIFICATION	0.9999799846857585	WITHOUT_CLASSIFICATION	2.001531424137441E-5	DEFECT
// The algorithm for the order of the features in this list should never change. // Also, the fact that a new list is created whenever the contents change  // is something else that should never change. // There are clients who rely on both these behaviors,  // and they will need to agree to any change, // so that they can adjust their own code. //	WITHOUT_CLASSIFICATION	0.9999999955270495	WITHOUT_CLASSIFICATION	4.472950427559647E-9	DEFECT
// The notification for this list is being thrown by the // delegating list //	WITHOUT_CLASSIFICATION	0.9999788853865433	WITHOUT_CLASSIFICATION	2.111461345660102E-5	DEFECT
// Keep trying until all else has failed.	WITHOUT_CLASSIFICATION	0.9999973063321805	WITHOUT_CLASSIFICATION	2.693667819602583E-6	DEFECT
// return eContainerFeatureID;	WITHOUT_CLASSIFICATION	0.9999999212040873	WITHOUT_CLASSIFICATION	7.879591260799476E-8	DEFECT
// If we're not setting a new resource, attach it to the old container's resource.	WITHOUT_CLASSIFICATION	0.9999997890567015	WITHOUT_CLASSIFICATION	2.1094329842671242E-7	DEFECT
// If we didn't detach it from an old resource already, detach it from the old container's resource. //	WITHOUT_CLASSIFICATION	0.9999995912456291	WITHOUT_CLASSIFICATION	4.0875437089955865E-7	DEFECT
/* backward compatibility with old generated overrides */	WITHOUT_CLASSIFICATION	0.9999996778777493	WITHOUT_CLASSIFICATION	3.2212225073162093E-7	DEFECT
/* backward compatibility with old generated overrides */	WITHOUT_CLASSIFICATION	0.9999996778777493	WITHOUT_CLASSIFICATION	3.2212225073162093E-7	DEFECT
// Depending on the action and the current state, we'll toggle the state. // i.e., for unset, we need to turn it off if it's on,  // and for set we need to turn it on if it's off. //	WITHOUT_CLASSIFICATION	0.9999999994519466	WITHOUT_CLASSIFICATION	5.48053506254455E-10	DEFECT
// If the index was previously assigned, return it. // Otherwise, return a negative result that encodes the newly assigned index. //	WITHOUT_CLASSIFICATION	0.9999997256407865	WITHOUT_CLASSIFICATION	2.7435921347750575E-7	DEFECT
// We set it and get back the interned string. // This way, when instanceClassName == instanceTypeName we know we should serialize only the class name. //	WITHOUT_CLASSIFICATION	0.9999999512808823	WITHOUT_CLASSIFICATION	4.871911780132746E-8	DEFECT
// The container class must be null for the open content features of the document root // to ensure that they are looked up in the actual eClass()  // rather than assumed to be a feature with a feature ID relative to the actual class. // Otherwise, it's good to have this optimization. //	WITHOUT_CLASSIFICATION	0.9999999979976141	WITHOUT_CLASSIFICATION	2.002386045211504E-9	DEFECT
// Interpret it as part of the name. //	WITHOUT_CLASSIFICATION	0.9999999857561468	WITHOUT_CLASSIFICATION	1.4243853288314194E-8	DEFECT
// The class address was not equal, so we don't want this class loader, // but instead want the last result that was able to load the class. //	WITHOUT_CLASSIFICATION	0.9999962679214885	WITHOUT_CLASSIFICATION	3.732078511480225E-6	DEFECT
//Platform.getBundle(element.getNamespaceIdentifier()).loadClass(contributorClassName);	WITHOUT_CLASSIFICATION	0.9999999616393687	WITHOUT_CLASSIFICATION	3.8360631322120886E-8	DEFECT
// First try to see if this class has an eInstance  //	WITHOUT_CLASSIFICATION	0.9999980392759568	WITHOUT_CLASSIFICATION	1.960724043284401E-6	DEFECT
// Create a resource for this file. //	WITHOUT_CLASSIFICATION	0.9999994131322223	WITHOUT_CLASSIFICATION	5.8686777773251E-7	DEFECT
// Add the initial model object to the contents. //	WITHOUT_CLASSIFICATION	0.9999999931296989	WITHOUT_CLASSIFICATION	6.870301124202072E-9	DEFECT
// Create a page, set the title, and the initial model file name. //	WITHOUT_CLASSIFICATION	0.9999999758975076	WITHOUT_CLASSIFICATION	2.410249242625252E-8	DEFECT
// Set this for the container. //	WITHOUT_CLASSIFICATION	0.9999970110488752	WITHOUT_CLASSIFICATION	2.9889511248633513E-6	DEFECT
// Load the schema and packages that were used to load the instance into this resource set. //	WITHOUT_CLASSIFICATION	0.9999998475741931	WITHOUT_CLASSIFICATION	1.5242580690230037E-7	DEFECT
// Create a resource for this file. Don't specify a content type, as it could be Ecore or EMOF. //	WITHOUT_CLASSIFICATION	0.9999996338729927	WITHOUT_CLASSIFICATION	3.6612700724580256E-7	DEFECT
// Put all static package in the package registry. //	WITHOUT_CLASSIFICATION	0.9999997622849557	WITHOUT_CLASSIFICATION	2.377150442689045E-7	DEFECT
// Look into SubContributionItems //	WITHOUT_CLASSIFICATION	0.9999998561996893	WITHOUT_CLASSIFICATION	1.438003106477349E-7	DEFECT
//return;	WITHOUT_CLASSIFICATION	0.9999949757391536	WITHOUT_CLASSIFICATION	5.024260846413532E-6	DEFECT
// super.collectNewChildDescriptors(newChildDescriptors, object);	WITHOUT_CLASSIFICATION	0.9999999548310526	WITHOUT_CLASSIFICATION	4.5168947347836964E-8	DEFECT
// If the list is empty, we need to add all the objects, // otherwise, the reference is bidirectional and the list is at least partially populated. //	WITHOUT_CLASSIFICATION	0.9999997317513134	WITHOUT_CLASSIFICATION	2.68248686614176E-7	DEFECT
// List subList(EStructuralFeature feature, int from, int to); // EList list(EStructuralFeature feature);	WITHOUT_CLASSIFICATION	0.9999999166762481	WITHOUT_CLASSIFICATION	8.332375191478199E-8	DEFECT
// We do not want to diagnose any errors that have already been diagnosed by a super type. // Although we ignore all the first super's features, there may be mixin classes that still would result in duplicates. //	WITHOUT_CLASSIFICATION	0.9997916323483348	WITHOUT_CLASSIFICATION	2.0836765166514076E-4	DEFECT
// There is no match if the types are different // and they don't each specify the same non-null instance class name. //	WITHOUT_CLASSIFICATION	0.9999999763690328	WITHOUT_CLASSIFICATION	2.3630967215561336E-8	DEFECT
// We need to be conservative and diagnose a problem only if we are quite sure that type is built-in  // and hence that the lack of a default value really represents a problem with being unable to convert the literal to a value. // 	WITHOUT_CLASSIFICATION	0.9999998334148065	WITHOUT_CLASSIFICATION	1.665851935799141E-7	DEFECT
// And even if it is contained, it must not be a forward reference. // eTypeParameterIndex == index is allowed when the type parameter is  // the type argument of the bound, though //	WITHOUT_CLASSIFICATION	0.9999998852849771	WITHOUT_CLASSIFICATION	1.147150228590803E-7	DEFECT
// A primitive type can only be used as the generic type of a typed element. //	WITHOUT_CLASSIFICATION	0.999996941250019	WITHOUT_CLASSIFICATION	3.0587499809958233E-6	DEFECT
// Check if the bound specifies a classifier... //	WITHOUT_CLASSIFICATION	0.9999997278768541	WITHOUT_CLASSIFICATION	2.721231458936074E-7	DEFECT
// Since we will do the processing recursively, we need to ensure we don't stack overflow if there is a circular super type. //	WITHOUT_CLASSIFICATION	0.9999997525426734	WITHOUT_CLASSIFICATION	2.4745732654262996E-7	DEFECT
// Or we test their relationship via their instance classes, if they have them. //	WITHOUT_CLASSIFICATION	0.9999999991662893	WITHOUT_CLASSIFICATION	8.33710729727661E-10	DEFECT
// The bound is a wildcard with no constraints. //	WITHOUT_CLASSIFICATION	0.9999999925239204	WITHOUT_CLASSIFICATION	7.476079626800477E-9	DEFECT
// The bound is a wildcard with no constraints. //	WITHOUT_CLASSIFICATION	0.9999999925239204	WITHOUT_CLASSIFICATION	7.476079626800477E-9	DEFECT
/*        featureMap.add(eStructuralFeature, cursor++, o);        expectedModCount = featureMap.getModCount();        ++entryCursor;        ++lastCursor;        // lastCursor = -1;        // prepared = 0;*/	WITHOUT_CLASSIFICATION	0.9999999967649406	WITHOUT_CLASSIFICATION	3.2350594114057983E-9	DEFECT
// Don't remove the adapter if the object is in a different resource  // and that resource (and hence all its contents) are being cross referenced. //	WITHOUT_CLASSIFICATION	0.9999725274491228	WITHOUT_CLASSIFICATION	2.7472550877199804E-5	DEFECT
/*  public List subList(EStructuralFeature feature, int from, int to)  {    return null;  }*/	WITHOUT_CLASSIFICATION	0.9999999583835658	WITHOUT_CLASSIFICATION	4.161643425579331E-8	DEFECT
// Mark the bound as unspecified so that it won't be considered many // but can nevertheless be recognized as being unspecified and perhaps still be treat as many. //	WITHOUT_CLASSIFICATION	0.999993138134677	WITHOUT_CLASSIFICATION	6.861865322987702E-6	DEFECT
// Mark the bound as unspecified so that it won't be considered many // but can nevertheless be recognized as being unspecified and perhaps still be treat as many. //	WITHOUT_CLASSIFICATION	0.999993138134677	WITHOUT_CLASSIFICATION	6.861865322987702E-6	DEFECT
// If we can't add it, it must already be in the list so find it and move it to the end. //	WITHOUT_CLASSIFICATION	0.9999921817522751	WITHOUT_CLASSIFICATION	7.818247724966398E-6	DEFECT
// Both eObject1 and eObject2 are not null. // If eObject1 has been compared already... //	WITHOUT_CLASSIFICATION	0.9046577903514854	WITHOUT_CLASSIFICATION	0.09534220964851463	DEFECT
// There's no reason they aren't equal, so they are. //	WITHOUT_CLASSIFICATION	0.9999998201296909	WITHOUT_CLASSIFICATION	1.7987030906939367E-7	DEFECT
// If the set states are the same, and the values of the feature are the structurally equal, they are equal. //	WITHOUT_CLASSIFICATION	0.9999999860878523	WITHOUT_CLASSIFICATION	1.3912147661037684E-8	DEFECT
// If entries don't have the same feature, the feature maps aren't equal. //	WITHOUT_CLASSIFICATION	0.9999397085740602	WITHOUT_CLASSIFICATION	6.029142593978995E-5	DEFECT
// Do a base 64 conversion by turning every 3 bytes into 4 base 64 characters //	WITHOUT_CLASSIFICATION	0.9999999957271224	WITHOUT_CLASSIFICATION	4.272877507866713E-9	DEFECT
// Get the current time in milliseconds since the epoch  // and adjust it to match the epoch required by the specification. //	WITHOUT_CLASSIFICATION	0.9999999672123513	WITHOUT_CLASSIFICATION	3.278764879784102E-8	DEFECT
// The system time hasn't changed so add some increment of 100s of nanoseconds to guarantee uniqueness. //	WITHOUT_CLASSIFICATION	0.9999977499086818	WITHOUT_CLASSIFICATION	2.250091318106114E-6	DEFECT
// Since the granularity of time in Java is only milliseconds,  // add an adjustment so that the time is represented in 100s of nanoseconds. // The version number (1) is multiplexed into the most significant hex digit. //	WITHOUT_CLASSIFICATION	0.9999996288289188	WITHOUT_CLASSIFICATION	3.7117108122136064E-7	DEFECT
// Cc	WITHOUT_CLASSIFICATION	0.9999971711509567	WITHOUT_CLASSIFICATION	2.828849043459298E-6	DEFECT
// The entity handler is the best place to resolve and deresolve URIs since it can do it there just once to produce the entity. // So most often the entity handler will be a URI handler as well and when used as a URI handler will be an identity handler. //	WITHOUT_CLASSIFICATION	0.999999999566117	WITHOUT_CLASSIFICATION	4.3388307240524754E-10	DEFECT
// Handle the same document proxies, which may have problems resulting from the // other end of a bidirectional reference being handled as an IDREF rather than as a proxy. // When we are done with these, we know that funny proxies are now resolved as if they were handled as IDREFs. //	WITHOUT_CLASSIFICATION	0.9999999287885123	WITHOUT_CLASSIFICATION	7.121148766498045E-8	DEFECT
// So if the resolved object is also present... //	WITHOUT_CLASSIFICATION	0.9998746359588564	WITHOUT_CLASSIFICATION	1.2536404114355177E-4	DEFECT
// If there is no root object, we're dealing with an EAttribute feature instead of an EReference feature. // So create an instance of simple any type and prepare it to handle the text content. //	WITHOUT_CLASSIFICATION	0.9999999997539851	WITHOUT_CLASSIFICATION	2.460147839619469E-10	DEFECT
// Continue with a different approach.	WITHOUT_CLASSIFICATION	0.9999447924387189	WITHOUT_CLASSIFICATION	5.520756128095586E-5	DEFECT
// Look for the first non-XMI element. //	WITHOUT_CLASSIFICATION	0.9999999368754893	WITHOUT_CLASSIFICATION	6.312451076593137E-8	DEFECT
// set features and properties	WITHOUT_CLASSIFICATION	0.9999998896226626	WITHOUT_CLASSIFICATION	1.1037733746057807E-7	DEFECT
// Include only non-duplicate namespace declarations. //	WITHOUT_CLASSIFICATION	0.9999999973701236	WITHOUT_CLASSIFICATION	2.629876543516319E-9	DEFECT
// We need to be careful that we don't end up requiring the no namespace package  // just because the feature is unqualified. //	WITHOUT_CLASSIFICATION	0.9999999973001168	WITHOUT_CLASSIFICATION	2.699883196470613E-9	DEFECT
// We must have a qualifier for an attribute that needs qualified. //	WITHOUT_CLASSIFICATION	0.9999999492312653	WITHOUT_CLASSIFICATION	5.0768734767708356E-8	DEFECT
// see if prefix already exists in current context	WITHOUT_CLASSIFICATION	0.9999995938849372	WITHOUT_CLASSIFICATION	4.0611506282961305E-7	DEFECT
// Walk up the super types until we reach a root. //	WITHOUT_CLASSIFICATION	0.9998946465721661	WITHOUT_CLASSIFICATION	1.0535342783397793E-4	DEFECT
// Look for a matching element in the classifier's package but don't bother with the XML type package's document root. //	WITHOUT_CLASSIFICATION	0.9999878607663016	WITHOUT_CLASSIFICATION	1.2139233698330227E-5	DEFECT
/*   * INTERNAL: this is a specialized method to add attributes for a top/root element   */	WITHOUT_CLASSIFICATION	0.9999925123020253	WITHOUT_CLASSIFICATION	7.487697974670256E-6	DEFECT
// it's intentional to keep going	WITHOUT_CLASSIFICATION	0.9999996630122373	WITHOUT_CLASSIFICATION	3.3698776270185937E-7	DEFECT
// it's intentional to keep going	WITHOUT_CLASSIFICATION	0.9999996630122373	WITHOUT_CLASSIFICATION	3.3698776270185937E-7	DEFECT
// it's intentional to keep going	WITHOUT_CLASSIFICATION	0.9999996630122373	WITHOUT_CLASSIFICATION	3.3698776270185937E-7	DEFECT
// it's intentional to keep going	WITHOUT_CLASSIFICATION	0.9999996630122373	WITHOUT_CLASSIFICATION	3.3698776270185937E-7	DEFECT
// Produce the supplemental character as an entity	WITHOUT_CLASSIFICATION	0.9999998742481032	WITHOUT_CLASSIFICATION	1.2575189676668324E-7	DEFECT
// We not sure the encoding supports this code point, so we write it as a character entity reference.	WITHOUT_CLASSIFICATION	0.9999999056916576	WITHOUT_CLASSIFICATION	9.430834235855436E-8	DEFECT
// no property	WITHOUT_CLASSIFICATION	0.999998105206485	WITHOUT_CLASSIFICATION	1.8947935149532384E-6	DEFECT
// no property	WITHOUT_CLASSIFICATION	0.999998105206485	WITHOUT_CLASSIFICATION	1.8947935149532384E-6	DEFECT
// no property	WITHOUT_CLASSIFICATION	0.999998105206485	WITHOUT_CLASSIFICATION	1.8947935149532384E-6	DEFECT
// Only handle classifiers from this package. //	WITHOUT_CLASSIFICATION	0.9999998985697581	WITHOUT_CLASSIFICATION	1.0143024185044751E-7	DEFECT
// We effectively passed null, "" to look up the general-content feature. //	WITHOUT_CLASSIFICATION	0.9999891584556724	WITHOUT_CLASSIFICATION	1.084154432758712E-5	DEFECT
// DocumentRoot	WITHOUT_CLASSIFICATION	0.999999519692664	WITHOUT_CLASSIFICATION	4.803073360061607E-7	DEFECT
// Keep trying other member types until all have failed.	WITHOUT_CLASSIFICATION	0.9999928461230413	WITHOUT_CLASSIFICATION	7.153876958709389E-6	DEFECT
// Keep trying other member types until all have failed.	WITHOUT_CLASSIFICATION	0.9999928461230413	WITHOUT_CLASSIFICATION	7.153876958709389E-6	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9999944090873375	WITHOUT_CLASSIFICATION	5.590912662404696E-6	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9999944090873375	WITHOUT_CLASSIFICATION	5.590912662404696E-6	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9999944090873375	WITHOUT_CLASSIFICATION	5.590912662404696E-6	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9999944090873375	WITHOUT_CLASSIFICATION	5.590912662404696E-6	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9999944090873375	WITHOUT_CLASSIFICATION	5.590912662404696E-6	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9999944090873375	WITHOUT_CLASSIFICATION	5.590912662404696E-6	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9999944090873375	WITHOUT_CLASSIFICATION	5.590912662404696E-6	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9999944090873375	WITHOUT_CLASSIFICATION	5.590912662404696E-6	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9999944090873375	WITHOUT_CLASSIFICATION	5.590912662404696E-6	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9999944090873375	WITHOUT_CLASSIFICATION	5.590912662404696E-6	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9999944090873375	WITHOUT_CLASSIFICATION	5.590912662404696E-6	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9999944090873375	WITHOUT_CLASSIFICATION	5.590912662404696E-6	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9999944090873375	WITHOUT_CLASSIFICATION	5.590912662404696E-6	DEFECT
// Need not to call setSource() because // a caller can not access this match instance.	WITHOUT_CLASSIFICATION	0.9999999659565832	WITHOUT_CLASSIFICATION	3.4043416825852084E-8	DEFECT
// Need not to call setSource() because // a caller can not access this match instance.	WITHOUT_CLASSIFICATION	0.9999999659565832	WITHOUT_CLASSIFICATION	3.4043416825852084E-8	DEFECT
/*           * The pattern has only fixed string.           * The engine uses Boyer-Moore.           */	WITHOUT_CLASSIFICATION	0.9968493138406292	WITHOUT_CLASSIFICATION	0.003150686159370655	DEFECT
/*           * The pattern has only fixed string.           * The engine uses Boyer-Moore.           */	WITHOUT_CLASSIFICATION	0.9968493138406292	WITHOUT_CLASSIFICATION	0.003150686159370655	DEFECT
/*           * The pattern contains a fixed string.           * The engine checks with Boyer-Moore whether the text contains the fixed string or not.           * If not, it return with false.           */	WITHOUT_CLASSIFICATION	0.9999804160719046	WITHOUT_CLASSIFICATION	1.958392809544524E-5	DEFECT
// ModifierOp // CharOp  for CHAR, BACKREFERENCE, CAPTURE, ANCHOR, 	WITHOUT_CLASSIFICATION	0.9999996928381644	WITHOUT_CLASSIFICATION	3.071618356259872E-7	DEFECT
// STRING	WITHOUT_CLASSIFICATION	0.999997271647818	WITHOUT_CLASSIFICATION	2.728352182033305E-6	DEFECT
// for RANGE or NRANGE	WITHOUT_CLASSIFICATION	0.9999986340274941	WITHOUT_CLASSIFICATION	1.365972505809057E-6	DEFECT
// Overlapped // src:    o--------o // sub:  o----o // sub:      o----o // sub:          o----o // sub:  o------------o	WITHOUT_CLASSIFICATION	0.9999999160742558	WITHOUT_CLASSIFICATION	8.392574424914523E-8	DEFECT
// this.ranges is sorted and compacted.	WITHOUT_CLASSIFICATION	0.9999794298369038	WITHOUT_CLASSIFICATION	2.0570163096205484E-5	DEFECT
// src1:    o--------o // src2:          o----o // res:           o--o // Reuse src2	WITHOUT_CLASSIFICATION	0.9999670272920461	WITHOUT_CLASSIFICATION	3.2972707953836425E-5	DEFECT
//this.setLocale(Locale.getDefault());	WITHOUT_CLASSIFICATION	0.9999999673101667	WITHOUT_CLASSIFICATION	3.268983331541224E-8	DEFECT
/*      public RegularExpression createRegex(String regex, int options) throws ParseException {          Token tok = this.parse(regex, options);          return new RegularExpression(regex, tok, this.parennumber, this.hasBackReferences, options);      }      */	WITHOUT_CLASSIFICATION	0.9999998883622943	WITHOUT_CLASSIFICATION	1.1163770579806703E-7	DEFECT
// ')'	WITHOUT_CLASSIFICATION	0.9999905979867351	WITHOUT_CLASSIFICATION	9.402013264860678E-6	DEFECT
// Skips ')'	WITHOUT_CLASSIFICATION	0.9999972083357034	WITHOUT_CLASSIFICATION	2.791664296709088E-6	DEFECT
// off -> next of '}'	WITHOUT_CLASSIFICATION	0.9999962402142062	WITHOUT_CLASSIFICATION	3.7597857937279617E-6	DEFECT
// \ + c // backsolidus // POSIX Character class such as [:alnum:]	WITHOUT_CLASSIFICATION	0.999999970820316	WITHOUT_CLASSIFICATION	2.9179683973130278E-8	DEFECT
//tok.dumpRanges();	WITHOUT_CLASSIFICATION	0.9999979707944174	WITHOUT_CLASSIFICATION	2.0292055825657406E-6	DEFECT
// Skips ']'	WITHOUT_CLASSIFICATION	0.9999981109044663	WITHOUT_CLASSIFICATION	1.8890955336389987E-6	DEFECT
// ESCAPE U+001B // FORM FEED U+000C // LINE FEED U+000A // CRRIAGE RETURN U+000D // HORIZONTAL TABULATION U+0009 //case 'v':  c = 0x0b;  break; // VERTICAL TABULATION U+000B	WITHOUT_CLASSIFICATION	0.9999960926733891	WITHOUT_CLASSIFICATION	3.90732661100196E-6	DEFECT
// for CLOSURE	WITHOUT_CLASSIFICATION	0.9999996792762971	WITHOUT_CLASSIFICATION	3.2072370295592534E-7	DEFECT
// for STRING	WITHOUT_CLASSIFICATION	0.9999994024260118	WITHOUT_CLASSIFICATION	5.975739881527572E-7	DEFECT
// ****	WITHOUT_CLASSIFICATION	0.9999609567874157	WITHOUT_CLASSIFICATION	3.904321258420474E-5	DEFECT
/*                  result.addRange(0, RegularExpression.LINE_FEED-1);                  result.addRange(RegularExpression.LINE_FEED+1, RegularExpression.CARRIAGE_RETURN-1);                  result.addRange(RegularExpression.CARRIAGE_RETURN+1,                                  RegularExpression.LINE_SEPARATOR-1);                  result.addRange(RegularExpression.PARAGRAPH_SEPARATOR+1, UTF16_MAX);                  return 1;                  */	WITHOUT_CLASSIFICATION	0.9999995736642422	WITHOUT_CLASSIFICATION	4.26335757758065E-7	DEFECT
// ------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999933504980093	WITHOUT_CLASSIFICATION	6.649501990647554E-6	DEFECT
// ------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999933504980093	WITHOUT_CLASSIFICATION	6.649501990647554E-6	DEFECT
// 28 // 29, 30 // 31-37	WITHOUT_CLASSIFICATION	0.9999943008763201	WITHOUT_CLASSIFICATION	5.6991236798161936E-6	DEFECT
// Schema Rec. {Datatypes} - Punctuation  // Pi - initial quote // Pf - final quote	WITHOUT_CLASSIFICATION	0.999992849203735	WITHOUT_CLASSIFICATION	7.150796265081651E-6	DEFECT
/*0590..05FF;*/	WITHOUT_CLASSIFICATION	0.9990862367493832	WITHOUT_CLASSIFICATION	9.137632506168315E-4	DEFECT
/*0A00..0A7F;*/	WITHOUT_CLASSIFICATION	0.998863302635626	WITHOUT_CLASSIFICATION	0.0011366973643739866	DEFECT
/*0D00..0D7F;*/	WITHOUT_CLASSIFICATION	0.9987317829032617	WITHOUT_CLASSIFICATION	0.0012682170967382987	DEFECT
/*10A0..10FF;*/	WITHOUT_CLASSIFICATION	0.9992980940496604	WITHOUT_CLASSIFICATION	7.019059503396649E-4	DEFECT
/*16A0..16FF;*/	WITHOUT_CLASSIFICATION	0.9993681944330328	WITHOUT_CLASSIFICATION	6.318055669671527E-4	DEFECT
/*2000..206F;*/	WITHOUT_CLASSIFICATION	0.997747817793275	WITHOUT_CLASSIFICATION	0.002252182206724933	DEFECT
/*2190..21FF;*/	WITHOUT_CLASSIFICATION	0.999082745887456	WITHOUT_CLASSIFICATION	9.172541125439231E-4	DEFECT
/*2500..257F;*/	WITHOUT_CLASSIFICATION	0.9976593037569614	WITHOUT_CLASSIFICATION	0.0023406962430385612	DEFECT
/*2FF0..2FFF;*/	WITHOUT_CLASSIFICATION	0.99920206311226	WITHOUT_CLASSIFICATION	7.979368877400414E-4	DEFECT
/*3190..319F;*/	WITHOUT_CLASSIFICATION	0.9992802236872187	WITHOUT_CLASSIFICATION	7.197763127812506E-4	DEFECT
/*A000..A48F;*/	WITHOUT_CLASSIFICATION	0.9988358206198806	WITHOUT_CLASSIFICATION	0.0011641793801193611	DEFECT
/*FB50..FDFF;*/	WITHOUT_CLASSIFICATION	0.9973049972200335	WITHOUT_CLASSIFICATION	0.002695002779966506	DEFECT
/*FF00..FFEF;*/	WITHOUT_CLASSIFICATION	0.9992267559759609	WITHOUT_CLASSIFICATION	7.732440240392155E-4	DEFECT
/*1D400..1D7FF;*/	WITHOUT_CLASSIFICATION	0.9986995545550521	WITHOUT_CLASSIFICATION	0.001300445444947815	DEFECT
//ADD THOSE MANUALLY //F0000..FFFFD; "Private Use", //100000..10FFFD; "Private Use" //FFF0..FFFD; "Specials", 	WITHOUT_CLASSIFICATION	0.9999981125007774	WITHOUT_CLASSIFICATION	1.8874992225640886E-6	DEFECT
// ;DEVANAGARI SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;BENGALI SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;GURMUKHI SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;GUJARATI SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;ORIYA SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;TAMIL SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;TELUGU SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;KANNADA SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;MALAYALAM SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;THAI CHARACTER PHINTHU;Mn;9;ON;;;;;N;THAI VOWEL SIGN PHINTHU;;;; //;TIBETAN MARK HALANTA;Mn;9;ON;;;;;N;TIBETAN VIRAMA;;;;	WITHOUT_CLASSIFICATION	0.9999951442032362	WITHOUT_CLASSIFICATION	4.855796763728955E-6	DEFECT
// Don't use 'cotinue' for this loop. // single-range | from-to-range | subtraction	WITHOUT_CLASSIFICATION	0.9999982552373554	WITHOUT_CLASSIFICATION	1.7447626446889809E-6	DEFECT
// both prefix (if any) a localpart must be valid NCName	WITHOUT_CLASSIFICATION	0.9999999989549055	WITHOUT_CLASSIFICATION	1.0450944805588321E-9	DEFECT
// Empty.	WITHOUT_CLASSIFICATION	0.9999922613165306	WITHOUT_CLASSIFICATION	7.73868346930523E-6	DEFECT
// Empty.	WITHOUT_CLASSIFICATION	0.9999922613165306	WITHOUT_CLASSIFICATION	7.73868346930523E-6	DEFECT
// Empty.	WITHOUT_CLASSIFICATION	0.9999922613165306	WITHOUT_CLASSIFICATION	7.73868346930523E-6	DEFECT
// Empty.	WITHOUT_CLASSIFICATION	0.9999922613165306	WITHOUT_CLASSIFICATION	7.73868346930523E-6	DEFECT
/* * This class provides encode/decode for RFC 2045 Base64 as * defined by RFC 2045, N. Freed and N. Borenstein. * RFC 2045: Multipurpose Internet Mail Extensions (MIME) * Part One: Format of Internet Message Bodies. Reference * 1996 Available at: http://www.ietf.org/rfc/rfc2045.txt * This class is used by XML Schema binary format validation * * This implementation does not encode/decode streaming * data. You need the data that you will encode/decode * already on a byte array. * * @author Jeffrey Rodriguez * @author Sandy Gao */	WITHOUT_CLASSIFICATION	0.9995309651573554	WITHOUT_CLASSIFICATION	4.690348426445918E-4	DEFECT
//if found "no data" just return null	WITHOUT_CLASSIFICATION	0.9999999939172622	WITHOUT_CLASSIFICATION	6.082737771093998E-9	DEFECT
/* * EncodingMap is a convenience class which handles conversions between  * IANA encoding names and Java encoding names, and vice versa. The * encoding names used in XML instance documents <strong>must</strong> * be the IANA encoding names specified or one of the aliases for those names * which IANA defines. * <p> * <TABLE BORDER="0" WIDTH="100%"> *  <TR> *      <TD WIDTH="33%"> *          <P ALIGN="CENTER"><B>Common Name</B> *      </TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER"><B>Use this name in XML files</B> *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER"><B>Name Type</B> *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER"><B>Xerces converts to this Java Encoder Name</B> *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">8 bit Unicode</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">UTF-8 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">UTF8 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin 1</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-1 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-1 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin 2</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-2 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-2 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin 3</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-3 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-3 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin 4</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-4 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-4 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin Cyrillic</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-5 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-5 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin Arabic</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-6 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-6 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin Greek</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-7 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-7 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin Hebrew</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-8 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-8 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin 5</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-9 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-9 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: US</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-us *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp037 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Canada</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-ca *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp037 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Netherlands</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-nl *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp037 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Denmark</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-dk *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp277 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Norway</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-no *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp277 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Finland</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-fi *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp278 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Sweden</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-se *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp278 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Italy</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-it *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp280 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Spain, Latin America</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-es *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp284 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Great Britain</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-gb *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp285 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: France</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-fr *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp297 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Arabic</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-ar1 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp420 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Hebrew</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-he *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp424 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Switzerland</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-ch *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp500 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Roece</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-roece *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp870 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Yugoslavia</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-yu *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp870 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Iceland</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-is *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp871 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Urdu</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-ar2 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp918 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">Chinese for PRC, mixed 1/2 byte</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">gb2312 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">GB2312 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">Extended Unix Code, packed for Japanese</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">euc-jp *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">eucjis *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">Japanese: iso-2022-jp</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">iso-2020-jp *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">JIS *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">Japanese: Shift JIS</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">Shift_JIS *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">SJIS *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">Chinese: Big5</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">Big5 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">Big5 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">Extended Unix Code, packed for Korean</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">euc-kr *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">iso2022kr *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">Cyrillic</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">koi8-r *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">koi8-r *      </TD> *  </TR> * </TABLE> *  * @author TAMURA Kent, IBM * @author Andy Clark, IBM */	WITHOUT_CLASSIFICATION	0.9999999999998983	WITHOUT_CLASSIFICATION	1.016255043400914E-13	DEFECT
// // Static initialization //	WITHOUT_CLASSIFICATION	0.9999992001234044	WITHOUT_CLASSIFICATION	7.99876595551373E-7	DEFECT
// // Static initialization //	WITHOUT_CLASSIFICATION	0.9999992001234044	WITHOUT_CLASSIFICATION	7.99876595551373E-7	DEFECT
// add IANA to Java encoding mappings.	WITHOUT_CLASSIFICATION	0.9999960984282966	WITHOUT_CLASSIFICATION	3.901571703413817E-6	DEFECT
// support for 1047, as proposed to be added to the  // IANA registry in  // http://lists.w3.org/Archives/Public/ietf-charset/2002JulSep/0049.html	WITHOUT_CLASSIFICATION	0.999999005603162	WITHOUT_CLASSIFICATION	9.943968379903228E-7	DEFECT
// support for 1047, as proposed to be added to the  // IANA registry in  // http://lists.w3.org/Archives/Public/ietf-charset/2002JulSep/0049.html	WITHOUT_CLASSIFICATION	0.999999005603162	WITHOUT_CLASSIFICATION	9.943968379903228E-7	DEFECT
// <clinit>()	WITHOUT_CLASSIFICATION	0.9999987335944928	WITHOUT_CLASSIFICATION	1.2664055072292825E-6	DEFECT
// <clinit>()	WITHOUT_CLASSIFICATION	0.9999987335944928	WITHOUT_CLASSIFICATION	1.2664055072292825E-6	DEFECT
// putJava2IANAMapping(String,String)	WITHOUT_CLASSIFICATION	0.9999986828575029	WITHOUT_CLASSIFICATION	1.3171424970871933E-6	DEFECT
// getJava2IANAMapping(String):String	WITHOUT_CLASSIFICATION	0.9999943199996646	WITHOUT_CLASSIFICATION	5.6800003354848195E-6	DEFECT
// removeJava2IANAMapping	WITHOUT_CLASSIFICATION	0.9999959810419567	WITHOUT_CLASSIFICATION	4.018958043255414E-6	DEFECT
// Add ASCII Letters	WITHOUT_CLASSIFICATION	0.9999998851259321	WITHOUT_CLASSIFICATION	1.1487406793862658E-7	DEFECT
// Add Mark Characters	WITHOUT_CLASSIFICATION	0.9999999965284493	WITHOUT_CLASSIFICATION	3.4715505961883594E-9	DEFECT
// Add Userinfo Characters	WITHOUT_CLASSIFICATION	0.9999999986984835	WITHOUT_CLASSIFICATION	1.3015164674148681E-9	DEFECT
// just make a copy of the base if spec is empty	WITHOUT_CLASSIFICATION	0.9999999763753438	WITHOUT_CLASSIFICATION	2.3624656312046366E-8	DEFECT
// A standalone base is a valid URI according to spec	WITHOUT_CLASSIFICATION	0.9999956166965642	WITHOUT_CLASSIFICATION	4.383303435749631E-6	DEFECT
// Two slashes means we may have authority, but definitely means we're either // matching net_path or abs_path. These two productions are ambiguous in that // every net_path (except those containing an IPv6Reference) is an abs_path.  // RFC 2396 resolves this ambiguity by applying a greedy left most matching rule.  // Try matching net_path first, and if that fails we don't have authority so  // then attempt to match abs_path. // // net_path = "//" authority [ abs_path ] // abs_path = "/"  path_segments	WITHOUT_CLASSIFICATION	0.9997977786425646	WITHOUT_CLASSIFICATION	2.0222135743546812E-4	DEFECT
// Two slashes means we may have authority, but definitely means we're either // matching net_path or abs_path. These two productions are ambiguous in that // every net_path (except those containing an IPv6Reference) is an abs_path.  // RFC 2396 resolves this ambiguity by applying a greedy left most matching rule.  // Try matching net_path first, and if that fails we don't have authority so  // then attempt to match abs_path. // // net_path = "//" authority [ abs_path ] // abs_path = "/"  path_segments	WITHOUT_CLASSIFICATION	0.9997977786425646	WITHOUT_CLASSIFICATION	2.0222135743546812E-4	DEFECT
// If we didn't find authority we need to back up. Attempt to // match against abs_path next.	WITHOUT_CLASSIFICATION	0.9999922156424941	WITHOUT_CLASSIFICATION	7.784357505891419E-6	DEFECT
// create message	WITHOUT_CLASSIFICATION	0.9999998163988458	WITHOUT_CLASSIFICATION	1.8360115414992415E-7	DEFECT
// check to see if this is the current doc - RFC 2396 5.2 #2 // note that this is slightly different from the RFC spec in that // we don't include the check for query string being null // - this handles cases where the urispec is just a query // string or a fragment (e.g. "?y" or "#s") - // see <http://www.ics.uci.edu/~fielding/url/test1.html> which // identified this as a bug in the RFC	WITHOUT_CLASSIFICATION	0.9999998877360378	WITHOUT_CLASSIFICATION	1.1226396223431153E-7	DEFECT
// check for scheme - RFC 2396 5.2 #3 // if we found a scheme, it means absolute URI, so we're done	WITHOUT_CLASSIFICATION	0.9999999958484614	WITHOUT_CLASSIFICATION	4.151538557880183E-9	DEFECT
// if we get to this point, we need to resolve relative path // RFC 2396 5.2 #6	WITHOUT_CLASSIFICATION	0.9999941045051444	WITHOUT_CLASSIFICATION	5.895494855645644E-6	DEFECT
// check for valid escape sequence	WITHOUT_CLASSIFICATION	0.9999999755599709	WITHOUT_CLASSIFICATION	2.4440029108050625E-8	DEFECT
// check for valid escape sequence	WITHOUT_CLASSIFICATION	0.9999999755599709	WITHOUT_CLASSIFICATION	2.4440029108050625E-8	DEFECT
// check for valid escape sequence	WITHOUT_CLASSIFICATION	0.9999999755599709	WITHOUT_CLASSIFICATION	2.4440029108050625E-8	DEFECT
// If the scheme specific part is opaque, it can contain '[' // and ']'. uric_no_slash wasn't modified by RFC 2732, which // I've interpreted as an error in the spec, since the  // production should be equivalent to (uric - '/'), and uric // contains '[' and ']'. - mrglavas	WITHOUT_CLASSIFICATION	0.999999999513237	WITHOUT_CLASSIFICATION	4.867630755333554E-10	DEFECT
// If the scheme specific part is opaque, it can contain '[' // and ']'. uric_no_slash wasn't modified by RFC 2732, which // I've interpreted as an error in the spec, since the  // production should be equivalent to (uric - '/'), and uric // contains '[' and ']'. - mrglavas	WITHOUT_CLASSIFICATION	0.999999999513237	WITHOUT_CLASSIFICATION	4.867630755333554E-10	DEFECT
// hostname      = *( domainlabel "." ) toplabel [ "." ] // domainlabel   = alphanum | alphanum *( alphanum | "-" ) alphanum // toplabel      = alpha | alpha *( alphanum | "-" ) alphanum	WITHOUT_CLASSIFICATION	0.999999993549752	WITHOUT_CLASSIFICATION	6.45024796902569E-9	DEFECT
// make sure that 1) we see only digits and dot separators, 2) that // any dot separator is preceded and followed by a digit and // 3) that we find 3 dots // // RFC 2732 amended RFC 2396 by replacing the definition  // of IPv4address with the one defined by RFC 2373. - mrglavas // // IPv4address = 1*3DIGIT "." 1*3DIGIT "." 1*3DIGIT "." 1*3DIGIT // // One to three digits must be in each segment.	WITHOUT_CLASSIFICATION	0.9999999961602798	WITHOUT_CLASSIFICATION	3.83972025243457E-9	DEFECT
// make sure that 1) we see only digits and dot separators, 2) that // any dot separator is preceded and followed by a digit and // 3) that we find 3 dots // // RFC 2732 amended RFC 2396 by replacing the definition  // of IPv4address with the one defined by RFC 2373. - mrglavas // // IPv4address = 1*3DIGIT "." 1*3DIGIT "." 1*3DIGIT "." 1*3DIGIT // // One to three digits must be in each segment.	WITHOUT_CLASSIFICATION	0.9999999961602798	WITHOUT_CLASSIFICATION	3.83972025243457E-9	DEFECT
// We've either reached the end of the string, the address ends in // an IPv4 address, or it is invalid. scanHexSequence has already  // made sure that we have the right number of bits. 	WITHOUT_CLASSIFICATION	0.9999999887371127	WITHOUT_CLASSIFICATION	1.1262887242969502E-8	DEFECT
// This might be invalid or an IPv4address. If it's potentially an IPv4address, // backup to just after the last valid character that matches hexseq.	WITHOUT_CLASSIFICATION	0.999999967848362	WITHOUT_CLASSIFICATION	3.21516379899603E-8	DEFECT
// Fill 2 of value (byte) 49 // Fill 26 of value (byte) -3 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999248644826114	WITHOUT_CLASSIFICATION	7.513551738856945E-5	DEFECT
// Fill 26 of value (byte) -3 // Fill 60 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999546679118763	WITHOUT_CLASSIFICATION	4.533208812380104E-5	DEFECT
// Fill 68 of value (byte) -19 // Fill 9 of value (byte) 33 // Fill 36 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 30 of value (byte) -19 // Fill 56 of value (byte) 33 // Fill 89 of value (byte) -19 // Fill 18 of value (byte) 33 // Fill 7 of value (byte) -19 // Fill 14 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 46 of value (byte) 33 // Fill 70 of value (byte) -87 // Fill 26 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 36 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9995170754350327	WITHOUT_CLASSIFICATION	4.829245649674656E-4	DEFECT
// Fill 68 of value (byte) -19 // Fill 9 of value (byte) 33 // Fill 36 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 30 of value (byte) -19 // Fill 56 of value (byte) 33 // Fill 89 of value (byte) -19 // Fill 18 of value (byte) 33 // Fill 7 of value (byte) -19 // Fill 14 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 46 of value (byte) 33 // Fill 70 of value (byte) -87 // Fill 26 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 36 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9995170754350327	WITHOUT_CLASSIFICATION	4.829245649674656E-4	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999875080579317	WITHOUT_CLASSIFICATION	1.2491942068327596E-5	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999875080579317	WITHOUT_CLASSIFICATION	1.2491942068327596E-5	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999875080579317	WITHOUT_CLASSIFICATION	1.2491942068327596E-5	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999875080579317	WITHOUT_CLASSIFICATION	1.2491942068327596E-5	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999875080579317	WITHOUT_CLASSIFICATION	1.2491942068327596E-5	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999875080579317	WITHOUT_CLASSIFICATION	1.2491942068327596E-5	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999875080579317	WITHOUT_CLASSIFICATION	1.2491942068327596E-5	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999875080579317	WITHOUT_CLASSIFICATION	1.2491942068327596E-5	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999875080579317	WITHOUT_CLASSIFICATION	1.2491942068327596E-5	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999875080579317	WITHOUT_CLASSIFICATION	1.2491942068327596E-5	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999875080579317	WITHOUT_CLASSIFICATION	1.2491942068327596E-5	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999875080579317	WITHOUT_CLASSIFICATION	1.2491942068327596E-5	DEFECT
// Fill 4 of value (byte) -87 // Fill 9 of value (byte) 33 // Fill 53 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 28 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 8 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 55 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9997843026652808	WITHOUT_CLASSIFICATION	2.1569733471907913E-4	DEFECT
// Fill 7 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 10 of value (byte) 33 // Fill 17 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999182395180113	WITHOUT_CLASSIFICATION	8.176048198875264E-5	DEFECT
// Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999873239619267	WITHOUT_CLASSIFICATION	1.2676038073246877E-5	DEFECT
// Fill 11 of value (byte) 33 // Fill 27 of value (byte) -19 // Fill 5 of value (byte) 33 // Fill 3 of value (byte) -19 // Fill 46 of value (byte) 33 // Fill 26 of value (byte) -19 // Fill 5 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999181143791883	WITHOUT_CLASSIFICATION	8.188562081178973E-5	DEFECT
// Fill 4 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 519 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9998956759780065	WITHOUT_CLASSIFICATION	1.0432402199343775E-4	DEFECT
// Fill 16 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 4 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 10 of value (byte) -19 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 17 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9998992973153811	WITHOUT_CLASSIFICATION	1.0070268461895738E-4	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999856188495275	WITHOUT_CLASSIFICATION	1.4381150472410528E-5	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999856188495275	WITHOUT_CLASSIFICATION	1.4381150472410528E-5	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999856188495275	WITHOUT_CLASSIFICATION	1.4381150472410528E-5	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999856188495275	WITHOUT_CLASSIFICATION	1.4381150472410528E-5	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999765541910196	WITHOUT_CLASSIFICATION	2.344580898035263E-5	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999765541910196	WITHOUT_CLASSIFICATION	2.344580898035263E-5	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999765541910196	WITHOUT_CLASSIFICATION	2.344580898035263E-5	DEFECT
// Fill 5 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 17 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999222826326454	WITHOUT_CLASSIFICATION	7.771736735467839E-5	DEFECT
// Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 4 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.999916550439882	WITHOUT_CLASSIFICATION	8.344956011796787E-5	DEFECT
// }	WITHOUT_CLASSIFICATION	0.9999906610274247	WITHOUT_CLASSIFICATION	9.338972575288432E-6	DEFECT
// }	WITHOUT_CLASSIFICATION	0.9999906610274247	WITHOUT_CLASSIFICATION	9.338972575288432E-6	DEFECT
// }}	WITHOUT_CLASSIFICATION	0.9999947867527336	WITHOUT_CLASSIFICATION	5.213247266406766E-6	DEFECT
// Fill 6 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87 // Fill 8 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9998120235283022	WITHOUT_CLASSIFICATION	1.8797647169771593E-4	DEFECT
// Fill 15 of value (byte) 33 // Fill 9 of value (byte) -87 // Fill 17 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9998822684050294	WITHOUT_CLASSIFICATION	1.1773159497065319E-4	DEFECT
// Fill 10 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999882867020731	WITHOUT_CLASSIFICATION	1.1713297926942302E-5	DEFECT
// Fill 5 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 7 of value (byte) -87	WITHOUT_CLASSIFICATION	0.999921025632808	WITHOUT_CLASSIFICATION	7.897436719190524E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999995614747719	WITHOUT_CLASSIFICATION	4.385252280605921E-7	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.999999933406692	WITHOUT_CLASSIFICATION	6.659330800494975E-8	DEFECT
// cause a syntax error	WITHOUT_CLASSIFICATION	0.9999950834219812	WITHOUT_CLASSIFICATION	4.916578018873985E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999995614747719	WITHOUT_CLASSIFICATION	4.385252280605921E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999995614747719	WITHOUT_CLASSIFICATION	4.385252280605921E-7	DEFECT
// Look for a likely plugin name. //	WITHOUT_CLASSIFICATION	0.9996889247646026	WITHOUT_CLASSIFICATION	3.1107523539741414E-4	DEFECT
/*   * Returns the dynamic template path, an ordered list of URIs corresponding to locations under which to find   * templates.   */	WITHOUT_CLASSIFICATION	0.999998524451303	WITHOUT_CLASSIFICATION	1.4755486971065237E-6	DEFECT
/*   * Returns the base portion of the dynamic template path.   */	WITHOUT_CLASSIFICATION	0.9999888373409062	WITHOUT_CLASSIFICATION	1.1162659093779295E-5	DEFECT
// It's okay for there not be a precompiled template, so fail quietly.	WITHOUT_CLASSIFICATION	0.9999990694928953	WITHOUT_CLASSIFICATION	9.305071046529647E-7	DEFECT
// Returns whether this class implements any of the given features.	WITHOUT_CLASSIFICATION	0.9867126684453589	WITHOUT_CLASSIFICATION	0.01328733155464116	DEFECT
// GenTypedElement	WITHOUT_CLASSIFICATION	0.9999995315740695	WITHOUT_CLASSIFICATION	4.6842593056785314E-7	DEFECT
// GenTypeParameter	WITHOUT_CLASSIFICATION	0.9999998500766448	WITHOUT_CLASSIFICATION	1.4992335510081728E-7	DEFECT
//GenRuntimeVersion	WITHOUT_CLASSIFICATION	0.9999911896678485	WITHOUT_CLASSIFICATION	8.81033215153231E-6	DEFECT
//GenModelPackage	WITHOUT_CLASSIFICATION	0.9999907342562963	WITHOUT_CLASSIFICATION	9.26574370381063E-6	DEFECT
// String getPackageID();	WITHOUT_CLASSIFICATION	0.9999991025432196	WITHOUT_CLASSIFICATION	8.974567805445162E-7	DEFECT
// getFirstFileExtension?	WITHOUT_CLASSIFICATION	0.9999992427059524	WITHOUT_CLASSIFICATION	7.572940474998903E-7	DEFECT
// this returns either "attribute", "attribute list", "reference", or "reference list"	WITHOUT_CLASSIFICATION	0.9999989047143982	WITHOUT_CLASSIFICATION	1.095285601719258E-6	DEFECT
// add variable fragment to new declaration	WITHOUT_CLASSIFICATION	0.9999999892393958	WITHOUT_CLASSIFICATION	1.0760604069909842E-8	DEFECT
// Filtered for property keys to remove duplicates.	WITHOUT_CLASSIFICATION	0.9999979978841856	WITHOUT_CLASSIFICATION	2.002115814303421E-6	DEFECT
//GenModelFactory	WITHOUT_CLASSIFICATION	0.999992429292449	WITHOUT_CLASSIFICATION	7.570707550961738E-6	DEFECT
// GenAnnotation	WITHOUT_CLASSIFICATION	0.9999957693024091	WITHOUT_CLASSIFICATION	4.230697590999456E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999995614747719	WITHOUT_CLASSIFICATION	4.385252280605921E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999995614747719	WITHOUT_CLASSIFICATION	4.385252280605921E-7	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999989374002828	WITHOUT_CLASSIFICATION	1.0625997173036432E-6	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.999999933406692	WITHOUT_CLASSIFICATION	6.659330800494975E-8	DEFECT
// add added super interfaces to the array	WITHOUT_CLASSIFICATION	0.999998573608754	WITHOUT_CLASSIFICATION	1.4263912460746613E-6	DEFECT
// always returns original value	WITHOUT_CLASSIFICATION	0.999997480892918	WITHOUT_CLASSIFICATION	2.5191070819191005E-6	DEFECT
// only 1 fragment left - revert the changes	WITHOUT_CLASSIFICATION	0.9999997233103912	WITHOUT_CLASSIFICATION	2.7668960881222363E-7	DEFECT
// split is performed	WITHOUT_CLASSIFICATION	0.9999998123606073	WITHOUT_CLASSIFICATION	1.8763939265162665E-7	DEFECT
// name already contains ".*" - unset on demand property	WITHOUT_CLASSIFICATION	0.9999944119407762	WITHOUT_CLASSIFICATION	5.588059223787767E-6	DEFECT
// not supported in JDOM	WITHOUT_CLASSIFICATION	0.9999481654730537	WITHOUT_CLASSIFICATION	5.183452694625844E-5	DEFECT
// not supported in JDOM    	WITHOUT_CLASSIFICATION	0.9999482572855287	WITHOUT_CLASSIFICATION	5.1742714471153295E-5	DEFECT
//The shared instance.	WITHOUT_CLASSIFICATION	0.9999997516760634	WITHOUT_CLASSIFICATION	2.4832393669443464E-7	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999986414502402	WITHOUT_CLASSIFICATION	1.3585497598851668E-6	DEFECT
// Empty extension to limit the effect of suppressing the deprecation warning.	WITHOUT_CLASSIFICATION	0.9999971928070777	WITHOUT_CLASSIFICATION	2.807192922309153E-6	DEFECT
//GenAnnotationImpl	WITHOUT_CLASSIFICATION	0.9999513995064114	WITHOUT_CLASSIFICATION	4.8600493588516544E-5	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.9999999766383213	WITHOUT_CLASSIFICATION	2.3361678751851995E-8	DEFECT
// Initialize simple dependencies	WITHOUT_CLASSIFICATION	0.9999998627377243	WITHOUT_CLASSIFICATION	1.372622756233283E-7	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.9999990161470182	WITHOUT_CLASSIFICATION	9.83852981794225E-7	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.9999998510045144	WITHOUT_CLASSIFICATION	1.4899548560704843E-7	DEFECT
// Mark meta-data to indicate it can't be changed	WITHOUT_CLASSIFICATION	0.999996839412632	WITHOUT_CLASSIFICATION	3.1605873680022317E-6	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.9999998937081113	WITHOUT_CLASSIFICATION	1.0629188876058995E-7	DEFECT
// Create enums	WITHOUT_CLASSIFICATION	0.9999998601966097	WITHOUT_CLASSIFICATION	1.3980339026541646E-7	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.9999998481815032	WITHOUT_CLASSIFICATION	1.518184968271126E-7	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.9999993338928099	WITHOUT_CLASSIFICATION	6.661071901337388E-7	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.9999921779007461	WITHOUT_CLASSIFICATION	7.822099253932902E-6	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.9999998165471937	WITHOUT_CLASSIFICATION	1.834528063299559E-7	DEFECT
// Initialize enums and add enum literals	WITHOUT_CLASSIFICATION	0.9999995251788815	WITHOUT_CLASSIFICATION	4.7482111857343865E-7	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.999999913714059	WITHOUT_CLASSIFICATION	8.628594096543401E-8	DEFECT
//GenModelPackageImpl	WITHOUT_CLASSIFICATION	0.9999849957003868	WITHOUT_CLASSIFICATION	1.5004299613199057E-5	DEFECT
// Does nothing	WITHOUT_CLASSIFICATION	0.9999983849218088	WITHOUT_CLASSIFICATION	1.6150781911538036E-6	DEFECT
// Create an import manager for this compilation unit	WITHOUT_CLASSIFICATION	0.9999982039430552	WITHOUT_CLASSIFICATION	1.7960569449093832E-6	DEFECT
// Create a code formatter for this compilation unit, if needed	WITHOUT_CLASSIFICATION	0.9999995941700612	WITHOUT_CLASSIFICATION	4.0582993874482356E-7	DEFECT
// InputStream contents = new ByteArrayInputStream(bytes);	WITHOUT_CLASSIFICATION	0.9999940840711393	WITHOUT_CLASSIFICATION	5.915928860581314E-6	DEFECT
// Clear the import manager	WITHOUT_CLASSIFICATION	0.9999997266678168	WITHOUT_CLASSIFICATION	2.7333218328986045E-7	DEFECT
//FB TBD different objects for ecore model!	WITHOUT_CLASSIFICATION	0.9995229299048816	WITHOUT_CLASSIFICATION	4.770700951183857E-4	DEFECT
// BasicEMap.this.removeEntry(index, j);	WITHOUT_CLASSIFICATION	0.9999909102060404	WITHOUT_CLASSIFICATION	9.089793959601152E-6	DEFECT
//FB TBD different objects for ecore model!	WITHOUT_CLASSIFICATION	0.9995229299048816	WITHOUT_CLASSIFICATION	4.770700951183857E-4	DEFECT
//(eType instanceof EDataType)	WITHOUT_CLASSIFICATION	0.9999991685010154	WITHOUT_CLASSIFICATION	8.314989846008009E-7	DEFECT
// order genPackages by putting firstGenPackage (if non-null) first	WITHOUT_CLASSIFICATION	0.9999998937670471	WITHOUT_CLASSIFICATION	1.0623295292363591E-7	DEFECT
// generateColor();	WITHOUT_CLASSIFICATION	0.9999987739540627	WITHOUT_CLASSIFICATION	1.2260459374215112E-6	DEFECT
// If the value is null, the key is a referenced object	WITHOUT_CLASSIFICATION	0.9999891818908195	WITHOUT_CLASSIFICATION	1.081810918048168E-5	DEFECT
// If we've found thing with type parameters, search them for a match.	WITHOUT_CLASSIFICATION	0.999999821684221	WITHOUT_CLASSIFICATION	1.7831577895511126E-7	DEFECT
/*   * Set from {@link #isChildren children} if unset, and return value.   */	WITHOUT_CLASSIFICATION	0.9999999031248902	WITHOUT_CLASSIFICATION	9.68751097988667E-8	DEFECT
//  && eReverseFeature.isNavigable();	WITHOUT_CLASSIFICATION	0.999999995072427	WITHOUT_CLASSIFICATION	4.927573066098678E-9	DEFECT
//GenFeatureImpl	WITHOUT_CLASSIFICATION	0.9999986878768864	WITHOUT_CLASSIFICATION	1.312123113563165E-6	DEFECT
// Returns whether this class implements any of the given features.	WITHOUT_CLASSIFICATION	0.9867126684453589	WITHOUT_CLASSIFICATION	0.01328733155464116	DEFECT
//GenEnumImpl	WITHOUT_CLASSIFICATION	0.9999902174893023	WITHOUT_CLASSIFICATION	9.782510697810405E-6	DEFECT
//GenModelFactoryImpl	WITHOUT_CLASSIFICATION	0.9999937088999119	WITHOUT_CLASSIFICATION	6.2911000880094945E-6	DEFECT
// build mapping from classes to list of features that use them	WITHOUT_CLASSIFICATION	0.9999998979993481	WITHOUT_CLASSIFICATION	1.0200065195655876E-7	DEFECT
// scan feature lists for those with multiple elements and return them	WITHOUT_CLASSIFICATION	0.9999999913523574	WITHOUT_CLASSIFICATION	8.647642487224076E-9	DEFECT
//data type	WITHOUT_CLASSIFICATION	0.9999953301758522	WITHOUT_CLASSIFICATION	4.6698241479130475E-6	DEFECT
//GenTypeParameterImpl	WITHOUT_CLASSIFICATION	0.9999937235922605	WITHOUT_CLASSIFICATION	6.2764077396297825E-6	DEFECT
//GenTypedElementImpl	WITHOUT_CLASSIFICATION	0.9999866167911906	WITHOUT_CLASSIFICATION	1.3383208809426437E-5	DEFECT
// escaped unicode form	WITHOUT_CLASSIFICATION	0.9999999647472022	WITHOUT_CLASSIFICATION	3.5252797678641325E-8	DEFECT
// EObject is handled by default case	WITHOUT_CLASSIFICATION	0.9999999638781737	WITHOUT_CLASSIFICATION	3.612182624416606E-8	DEFECT
// Go through class super types to catch any from other packages	WITHOUT_CLASSIFICATION	0.9999982607482643	WITHOUT_CLASSIFICATION	1.7392517357147333E-6	DEFECT
// Go through class super types to catch constraints from other packages	WITHOUT_CLASSIFICATION	0.9999999837009884	WITHOUT_CLASSIFICATION	1.6299011478870682E-8	DEFECT
// Create helpers to cache and supply information for unique naming	WITHOUT_CLASSIFICATION	0.9999746855587394	WITHOUT_CLASSIFICATION	2.531444126067723E-5	DEFECT
// Ignore this soft dependency when it's not satisfied.	WITHOUT_CLASSIFICATION	0.9999960407260348	WITHOUT_CLASSIFICATION	3.9592739652339885E-6	DEFECT
// return getPrefixedName("EditPlugin");	WITHOUT_CLASSIFICATION	0.9999919908326278	WITHOUT_CLASSIFICATION	8.009167372158038E-6	DEFECT
// return getProviderPackageName() + "." + getEditPluginClassName();	WITHOUT_CLASSIFICATION	0.999998832876603	WITHOUT_CLASSIFICATION	1.1671233969854046E-6	DEFECT
// return getPrefixedName("EditorPlugin");	WITHOUT_CLASSIFICATION	0.9999914295258249	WITHOUT_CLASSIFICATION	8.5704741750849E-6	DEFECT
// return getPresentationPackageName() + "." + getEditorPluginClassName();	WITHOUT_CLASSIFICATION	0.9999998770193861	WITHOUT_CLASSIFICATION	1.229806139566075E-7	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9999958427508975	WITHOUT_CLASSIFICATION	4.157249102503447E-6	DEFECT
//TBD 	WITHOUT_CLASSIFICATION	0.9999434659308445	WITHOUT_CLASSIFICATION	5.6534069155615856E-5	DEFECT
//TBD 	WITHOUT_CLASSIFICATION	0.9999434659308445	WITHOUT_CLASSIFICATION	5.6534069155615856E-5	DEFECT
//GenPackageImpl	WITHOUT_CLASSIFICATION	0.9999920298213929	WITHOUT_CLASSIFICATION	7.97017860702793E-6	DEFECT
// Don't care about plugin class; we can generate a model without one.	WITHOUT_CLASSIFICATION	0.9996951711808734	WITHOUT_CLASSIFICATION	3.048288191266306E-4	DEFECT
// genPackage can be a broken proxy	WITHOUT_CLASSIFICATION	0.9904869313268797	WITHOUT_CLASSIFICATION	0.009513068673120286	DEFECT
//   protected JETEmitter extendedItemProviderEmitter = null;	WITHOUT_CLASSIFICATION	0.9999599980761994	WITHOUT_CLASSIFICATION	4.000192380065793E-5	DEFECT
//ItemProvider/newChildDescriptorsAttributeDelegatedFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999999487551237	WITHOUT_CLASSIFICATION	5.124487634409348E-8	DEFECT
//GenModelImpl	WITHOUT_CLASSIFICATION	0.9999718820511767	WITHOUT_CLASSIFICATION	2.8117948823215426E-5	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999989374002828	WITHOUT_CLASSIFICATION	1.0625997173036432E-6	DEFECT
// TODO	WITHOUT_CLASSIFICATION	0.9993460055949276	WITHOUT_CLASSIFICATION	6.539944050723063E-4	DEFECT
//ItemProvider/newChildDescriptorsReferenceFeature.override.javajetinc 	WITHOUT_CLASSIFICATION	0.9999998994773238	WITHOUT_CLASSIFICATION	1.0052267614296157E-7	DEFECT
//ItemProvider/newChildDescriptorsAttributeFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999998511659886	WITHOUT_CLASSIFICATION	1.488340114814632E-7	DEFECT
/**   * Calls <code>validateXXX</code> for the corresponding classifier of the model.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9999944076877221	WITHOUT_CLASSIFICATION	5.592312277941683E-6	DEFECT
//)	WITHOUT_CLASSIFICATION	0.999937144375453	WITHOUT_CLASSIFICATION	6.285562454695064E-5	DEFECT
// (	WITHOUT_CLASSIFICATION	0.9999946234996067	WITHOUT_CLASSIFICATION	5.376500393234812E-6	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9999897795145728	WITHOUT_CLASSIFICATION	1.0220485427274058E-5	DEFECT
//GenModelSwitch	WITHOUT_CLASSIFICATION	0.9999821556334688	WITHOUT_CLASSIFICATION	1.7844366531190406E-5	DEFECT
//GenModelAdapterFactory	WITHOUT_CLASSIFICATION	0.999994452446302	WITHOUT_CLASSIFICATION	5.547553697980083E-6	DEFECT
/**   * The switch that delegates to the <code>createXXX</code> methods.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9999999314227829	WITHOUT_CLASSIFICATION	6.857721708148531E-8	DEFECT
//GenModelValidator	WITHOUT_CLASSIFICATION	0.9999950999154534	WITHOUT_CLASSIFICATION	4.9000845465436185E-6	DEFECT
//ItemProvider/newChildDescriptorsReferenceDelegatedFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999999329836253	WITHOUT_CLASSIFICATION	6.701637468903858E-8	DEFECT
//ItemProvider/getText.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999967396222311	WITHOUT_CLASSIFICATION	3.2603777690305227E-6	DEFECT
//ItemProvider/addPropertyDescriptor.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999984172724682	WITHOUT_CLASSIFICATION	1.5827275317797314E-6	DEFECT
//ItemProvider/newChildDescriptorsAttributeDelegatedFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999999487551237	WITHOUT_CLASSIFICATION	5.124487634409348E-8	DEFECT
//ItemProvider/newChildDescriptorsReferenceDelegatedFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999999329836253	WITHOUT_CLASSIFICATION	6.701637468903858E-8	DEFECT
//ItemProvider/newChildDescriptorsReferenceFeature.override.javajetinc 	WITHOUT_CLASSIFICATION	0.9999998994773238	WITHOUT_CLASSIFICATION	1.0052267614296157E-7	DEFECT
//ItemProvider/newChildDescriptorsAttributeFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999998511659886	WITHOUT_CLASSIFICATION	1.488340114814632E-7	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9999958427508975	WITHOUT_CLASSIFICATION	4.157249102503447E-6	DEFECT
// return eProperties;	WITHOUT_CLASSIFICATION	0.9999998373828666	WITHOUT_CLASSIFICATION	1.626171334324009E-7	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9999958427508975	WITHOUT_CLASSIFICATION	4.157249102503447E-6	DEFECT
//Class/reflectiveDelegation.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999997433465059	WITHOUT_CLASSIFICATION	2.566534941350002E-7	DEFECT
//Editor/addItemproviderFactories.override.javajetinc"	WITHOUT_CLASSIFICATION	0.9999994382505677	WITHOUT_CLASSIFICATION	5.61749432281247E-7	DEFECT
//ResourceFactoryClass/createResource.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999999726503495	WITHOUT_CLASSIFICATION	2.734965049697499E-8	DEFECT
//Class/declaredFieldGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999999924379739	WITHOUT_CLASSIFICATION	7.562026128161058E-9	DEFECT
///////////////////////	WITHOUT_CLASSIFICATION	0.9999911041397068	WITHOUT_CLASSIFICATION	8.895860293199971E-6	DEFECT
///////////////////////	WITHOUT_CLASSIFICATION	0.9999911041397068	WITHOUT_CLASSIFICATION	8.895860293199971E-6	DEFECT
//volatile	WITHOUT_CLASSIFICATION	0.9999955459007249	WITHOUT_CLASSIFICATION	4.454099275098418E-6	DEFECT
//Class/getGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9999997674494888	WITHOUT_CLASSIFICATION	2.3255051116079057E-7	DEFECT
//Class/getGenFeature.javadoc.override.javajetinc	WITHOUT_CLASSIFICATION	0.999999968787409	WITHOUT_CLASSIFICATION	3.121259096139091E-8	DEFECT
//Class/getGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999999227798335	WITHOUT_CLASSIFICATION	7.722016658816379E-8	DEFECT
//Class/getGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999999501719261	WITHOUT_CLASSIFICATION	4.982807395334705E-8	DEFECT
//Class/basicGetGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9999998415368229	WITHOUT_CLASSIFICATION	1.5846317710780317E-7	DEFECT
//Class/basicGetGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999999660464541	WITHOUT_CLASSIFICATION	3.395354587161961E-8	DEFECT
//Class/basicGetGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999999473810989	WITHOUT_CLASSIFICATION	5.261890101954907E-8	DEFECT
//Class/basicSetGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9999998384412561	WITHOUT_CLASSIFICATION	1.6155874398101322E-7	DEFECT
//Class/basicSetGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999999653831739	WITHOUT_CLASSIFICATION	3.46168260549962E-8	DEFECT
//Class/basicSetGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999999463531923	WITHOUT_CLASSIFICATION	5.364680761243093E-8	DEFECT
//Class/setGenFeature.javadoc.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999999864801277	WITHOUT_CLASSIFICATION	1.3519872339731032E-8	DEFECT
//Class/setGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9999998670391573	WITHOUT_CLASSIFICATION	1.3296084268160226E-7	DEFECT
//Class/setGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999999784167483	WITHOUT_CLASSIFICATION	2.158325166679903E-8	DEFECT
//Class/setGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999999665517412	WITHOUT_CLASSIFICATION	3.3448258840254386E-8	DEFECT
//Class/basicUnsetGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9999999223032099	WITHOUT_CLASSIFICATION	7.769679017060012E-8	DEFECT
//Class/basicUnsetGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999999841111451	WITHOUT_CLASSIFICATION	1.5888854929145417E-8	DEFECT
//Class.basicUnsetGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.999999983864305	WITHOUT_CLASSIFICATION	1.6135695023916685E-8	DEFECT
//Class/unsetGenFeature.javadoc.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999999781514078	WITHOUT_CLASSIFICATION	2.1848592238878132E-8	DEFECT
//Class/unsetGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9999998294396075	WITHOUT_CLASSIFICATION	1.7056039254176514E-7	DEFECT
//Class/unsetGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999999651207016	WITHOUT_CLASSIFICATION	3.4879298462662055E-8	DEFECT
//Class/unsetGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999999459464304	WITHOUT_CLASSIFICATION	5.405356952830595E-8	DEFECT
//Class/isSetGenFeature.javadoc.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999999824517536	WITHOUT_CLASSIFICATION	1.754824646329936E-8	DEFECT
//Class/isSetGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9999998692561585	WITHOUT_CLASSIFICATION	1.3074384147601595E-7	DEFECT
//Class/isSetGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.999999971985814	WITHOUT_CLASSIFICATION	2.8014186029361254E-8	DEFECT
//Class/isSetGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999999565855157	WITHOUT_CLASSIFICATION	4.3414484372521923E-8	DEFECT
//Class/genOperation.javadoc.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999999547673126	WITHOUT_CLASSIFICATION	4.52326873420408E-8	DEFECT
//Class/genOperation.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9999997200568056	WITHOUT_CLASSIFICATION	2.799431943925922E-7	DEFECT
//Class/implementedGenOperation.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999999737795175	WITHOUT_CLASSIFICATION	2.6220482363164923E-8	DEFECT
//Class/eUnset.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999998859211848	WITHOUT_CLASSIFICATION	1.1407881525039357E-7	DEFECT
//datatype	WITHOUT_CLASSIFICATION	0.9999775682375179	WITHOUT_CLASSIFICATION	2.2431762481954622E-5	DEFECT
//Class/eIsSet.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999997091037737	WITHOUT_CLASSIFICATION	2.908962262612901E-7	DEFECT
//TestCase/getGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9999999372609987	WITHOUT_CLASSIFICATION	6.273900130804244E-8	DEFECT
//TestCase/getGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999999898157115	WITHOUT_CLASSIFICATION	1.018428845359392E-8	DEFECT
//TestCase/getGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999999842170808	WITHOUT_CLASSIFICATION	1.578291926041216E-8	DEFECT
//TestCase/setGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.999999964611074	WITHOUT_CLASSIFICATION	3.538892610112445E-8	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999989374002828	WITHOUT_CLASSIFICATION	1.0625997173036432E-6	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9999958427508975	WITHOUT_CLASSIFICATION	4.157249102503447E-6	DEFECT
//TestCase/setGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999999942553911	WITHOUT_CLASSIFICATION	5.744608866979395E-9	DEFECT
//TestCase/setGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999999910973949	WITHOUT_CLASSIFICATION	8.902605082780439E-9	DEFECT
//TestCase/unsetGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9999999539514384	WITHOUT_CLASSIFICATION	4.604856161778679E-8	DEFECT
//TestCase/unsetGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999999905831515	WITHOUT_CLASSIFICATION	9.416848433685703E-9	DEFECT
//TestCase/unsetGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999999854064072	WITHOUT_CLASSIFICATION	1.4593592793088525E-8	DEFECT
//TestCase/isSetGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9999999652982943	WITHOUT_CLASSIFICATION	3.470170564937322E-8	DEFECT
//TestCase/isSetGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999999943669462	WITHOUT_CLASSIFICATION	5.63305383408078E-9	DEFECT
//TestCase/implementedGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999999896778363	WITHOUT_CLASSIFICATION	1.0322163768768715E-8	DEFECT
//TestCase/genOperation.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9999999244750873	WITHOUT_CLASSIFICATION	7.552491267087348E-8	DEFECT
//TestCase/implementedGenOperation.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999999938953233	WITHOUT_CLASSIFICATION	6.1046767123083055E-9	DEFECT
//TestCase/implementedGenOperation.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999999907752246	WITHOUT_CLASSIFICATION	9.224775407297205E-9	DEFECT
/*   * Char buffer for HTML data   */	WITHOUT_CLASSIFICATION	0.9999998896394737	WITHOUT_CLASSIFICATION	1.1036052632235535E-7	DEFECT
// Match close.	WITHOUT_CLASSIFICATION	0.9999999663107252	WITHOUT_CLASSIFICATION	3.368927484552071E-8	DEFECT
// Continue processing dynamically as normal.	WITHOUT_CLASSIFICATION	0.9999968739530932	WITHOUT_CLASSIFICATION	3.1260469069085016E-6	DEFECT
// Ignore because we'll rethrow the original exception eventually.	WITHOUT_CLASSIFICATION	0.9999999647866102	WITHOUT_CLASSIFICATION	3.5213389835514524E-8	DEFECT
// pure obfuscated genius!	WITHOUT_CLASSIFICATION	0.9999999650531964	WITHOUT_CLASSIFICATION	3.4946803530328243E-8	DEFECT
// Read value until delimiter is found:	WITHOUT_CLASSIFICATION	0.9998705580733547	WITHOUT_CLASSIFICATION	1.2944192664529196E-4	DEFECT
// Take care of the quoting here.	WITHOUT_CLASSIFICATION	0.9999774295544238	WITHOUT_CLASSIFICATION	2.25704455762689E-5	DEFECT
// }	WITHOUT_CLASSIFICATION	0.9999906610274247	WITHOUT_CLASSIFICATION	9.338972575288432E-6	DEFECT
// (	WITHOUT_CLASSIFICATION	0.9999946234996067	WITHOUT_CLASSIFICATION	5.376500393234812E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999995614747719	WITHOUT_CLASSIFICATION	4.385252280605921E-7	DEFECT
// Close NCSA like attributes "->"	WITHOUT_CLASSIFICATION	0.999999755420752	WITHOUT_CLASSIFICATION	2.445792480490002E-7	DEFECT
// Close variable like attributes "%>"	WITHOUT_CLASSIFICATION	0.9999999800877223	WITHOUT_CLASSIFICATION	1.9912277764492226E-8	DEFECT
// XMLesque Close tags	WITHOUT_CLASSIFICATION	0.9999896621294815	WITHOUT_CLASSIFICATION	1.0337870518477394E-5	DEFECT
// Reached EOF:	WITHOUT_CLASSIFICATION	0.9999967519946938	WITHOUT_CLASSIFICATION	3.2480053061475477E-6	DEFECT
// Ignore the version	WITHOUT_CLASSIFICATION	0.9999999149384207	WITHOUT_CLASSIFICATION	8.506157924342063E-8	DEFECT
//dumpNodeContents(node);	WITHOUT_CLASSIFICATION	0.999998863681714	WITHOUT_CLASSIFICATION	1.1363182860620431E-6	DEFECT
// dumpNodeContents(node);	WITHOUT_CLASSIFICATION	0.9999996764063304	WITHOUT_CLASSIFICATION	3.235936696418437E-7	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999998407458563	WITHOUT_CLASSIFICATION	1.5925414364133287E-7	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999998407458563	WITHOUT_CLASSIFICATION	1.5925414364133287E-7	DEFECT
//)	WITHOUT_CLASSIFICATION	0.999937144375453	WITHOUT_CLASSIFICATION	6.285562454695064E-5	DEFECT
/////////////////////////////////  PULL  /////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999941237813201	WITHOUT_CLASSIFICATION	5.8762186798648E-6	DEFECT
/*    // PULL Name    //    targetPackage.setName(sourcePackage.getName());*/	WITHOUT_CLASSIFICATION	0.9999999974865216	WITHOUT_CLASSIFICATION	2.513478456732389E-9	DEFECT
/////////////////////////////////  PUSH  /////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999954199052695	WITHOUT_CLASSIFICATION	4.580094730467342E-6	DEFECT
/////////////////////////////////  SWEEP  /////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999953507979743	WITHOUT_CLASSIFICATION	4.6492020256753465E-6	DEFECT
/////////////////////////////////  SORT  /////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999967225333847	WITHOUT_CLASSIFICATION	3.2774666153111373E-6	DEFECT
/////////////////////////////////  CLONE AND MAP  /////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999978319208607	WITHOUT_CLASSIFICATION	2.16807913936392E-6	DEFECT
// System.err.println("Warning: Cannot clone '" + sourceNode.getContents() + "'");	WITHOUT_CLASSIFICATION	0.9999999313029898	WITHOUT_CLASSIFICATION	6.86970102243153E-8	DEFECT
// apply target parent pattern first	WITHOUT_CLASSIFICATION	0.9999998843092085	WITHOUT_CLASSIFICATION	1.1569079144898416E-7	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999998407458563	WITHOUT_CLASSIFICATION	1.5925414364133287E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999995614747719	WITHOUT_CLASSIFICATION	4.385252280605921E-7	DEFECT
/////////////////////////////////  HEADLESS INVOCATION  /////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999988969006942	WITHOUT_CLASSIFICATION	1.1030993057030335E-6	DEFECT
// Ignore the exception.	WITHOUT_CLASSIFICATION	0.9999999387376062	WITHOUT_CLASSIFICATION	6.126239386892702E-8	DEFECT
// use new node from now on	WITHOUT_CLASSIFICATION	0.9999988760286294	WITHOUT_CLASSIFICATION	1.1239713707403787E-6	DEFECT
// redo the markup since nodes changed now	WITHOUT_CLASSIFICATION	0.9999998803052073	WITHOUT_CLASSIFICATION	1.196947927035883E-7	DEFECT
// super is called on converted node	WITHOUT_CLASSIFICATION	0.9999958148348403	WITHOUT_CLASSIFICATION	4.185165159741696E-6	DEFECT
// Back up over the whitespace.	WITHOUT_CLASSIFICATION	0.9999997436180582	WITHOUT_CLASSIFICATION	2.5638194175651157E-7	DEFECT
// target method is NOT addSuperInterface	WITHOUT_CLASSIFICATION	0.9999999928501411	WITHOUT_CLASSIFICATION	7.149858921375751E-9	DEFECT
// if the parent is not in target, there is no point on checking the child	WITHOUT_CLASSIFICATION	0.9999991471421968	WITHOUT_CLASSIFICATION	8.528578031319354E-7	DEFECT
// by default nodes are marked up	WITHOUT_CLASSIFICATION	0.9999995898051857	WITHOUT_CLASSIFICATION	4.101948142895449E-7	DEFECT
// ignore rules for nodes of different class	WITHOUT_CLASSIFICATION	0.9999913300944526	WITHOUT_CLASSIFICATION	8.669905547361745E-6	DEFECT
//)	WITHOUT_CLASSIFICATION	0.999937144375453	WITHOUT_CLASSIFICATION	6.285562454695064E-5	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999998407458563	WITHOUT_CLASSIFICATION	1.5925414364133287E-7	DEFECT
// use new node from now on	WITHOUT_CLASSIFICATION	0.9999988760286294	WITHOUT_CLASSIFICATION	1.1239713707403787E-6	DEFECT
// redo the markup since nodes changed now	WITHOUT_CLASSIFICATION	0.9999998803052073	WITHOUT_CLASSIFICATION	1.196947927035883E-7	DEFECT
// super is called on converted node	WITHOUT_CLASSIFICATION	0.9999958148348403	WITHOUT_CLASSIFICATION	4.185165159741696E-6	DEFECT
// Command line execution methods	WITHOUT_CLASSIFICATION	0.9999925937739252	WITHOUT_CLASSIFICATION	7.4062260747540675E-6	DEFECT
// do not crash when control model is not set	WITHOUT_CLASSIFICATION	0.9999892332375251	WITHOUT_CLASSIFICATION	1.0766762474861466E-5	DEFECT
// Subclasses may override this method	WITHOUT_CLASSIFICATION	0.9999984299171717	WITHOUT_CLASSIFICATION	1.5700828282573078E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode#addChild(org.eclipse.emf.codegen.merge.java.facade.JNode)   */	WITHOUT_CLASSIFICATION	0.9999999999753372	WITHOUT_CLASSIFICATION	2.466280198948653E-11	DEFECT
// Empty	WITHOUT_CLASSIFICATION	0.9999926798126116	WITHOUT_CLASSIFICATION	7.3201873884175265E-6	DEFECT
// Empty	WITHOUT_CLASSIFICATION	0.9999926798126116	WITHOUT_CLASSIFICATION	7.3201873884175265E-6	DEFECT
// Empty	WITHOUT_CLASSIFICATION	0.9999926798126116	WITHOUT_CLASSIFICATION	7.3201873884175265E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999995614747719	WITHOUT_CLASSIFICATION	4.385252280605921E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999995614747719	WITHOUT_CLASSIFICATION	4.385252280605921E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999995614747719	WITHOUT_CLASSIFICATION	4.385252280605921E-7	DEFECT
// Not instantiable	WITHOUT_CLASSIFICATION	0.9999988775205987	WITHOUT_CLASSIFICATION	1.1224794013068216E-6	DEFECT
// replace or append	WITHOUT_CLASSIFICATION	0.9999962143903259	WITHOUT_CLASSIFICATION	3.7856096739667514E-6	DEFECT
// enable tracking for nodes that have string content	WITHOUT_CLASSIFICATION	0.9999976033607314	WITHOUT_CLASSIFICATION	2.3966392686918398E-6	DEFECT
// enable tracking for commented out nodes	WITHOUT_CLASSIFICATION	0.9999993374956369	WITHOUT_CLASSIFICATION	6.625043631726553E-7	DEFECT
// apply header	WITHOUT_CLASSIFICATION	0.9999992402386596	WITHOUT_CLASSIFICATION	7.59761340332488E-7	DEFECT
// skip whitespace, up to the end of the line	WITHOUT_CLASSIFICATION	0.9999999893728713	WITHOUT_CLASSIFICATION	1.062712882997798E-8	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999995614747719	WITHOUT_CLASSIFICATION	4.385252280605921E-7	DEFECT
// this should never happen	WITHOUT_CLASSIFICATION	0.9999772043049603	WITHOUT_CLASSIFICATION	2.2795695039751733E-5	DEFECT
// revert all current edits for this node	WITHOUT_CLASSIFICATION	0.9999972734928522	WITHOUT_CLASSIFICATION	2.7265071478384773E-6	DEFECT
// log the error, ignore the change and continue	WITHOUT_CLASSIFICATION	0.9999999599429958	WITHOUT_CLASSIFICATION	4.005700416391787E-8	DEFECT
// comment out all lines of the node itself, from firstLine to last line	WITHOUT_CLASSIFICATION	0.9999998093330146	WITHOUT_CLASSIFICATION	1.90666985487949E-7	DEFECT
// if there is anything after the node on the same line, insert line break	WITHOUT_CLASSIFICATION	0.9999940691761652	WITHOUT_CLASSIFICATION	5.930823834815226E-6	DEFECT
// reset text edits; since this node is processed successfully, there is no need to revert these changes	WITHOUT_CLASSIFICATION	0.9999999851708192	WITHOUT_CLASSIFICATION	1.4829180891956012E-8	DEFECT
// this line has been commented out, return next line number	WITHOUT_CLASSIFICATION	0.9999322298041368	WITHOUT_CLASSIFICATION	6.77701958632901E-5	DEFECT
// return the line number of the start of the node	WITHOUT_CLASSIFICATION	0.9999999870511221	WITHOUT_CLASSIFICATION	1.294887777828815E-8	DEFECT
// handle the case when there is a replace edit that covers these lines	WITHOUT_CLASSIFICATION	0.9999998423848823	WITHOUT_CLASSIFICATION	1.5761511771761677E-7	DEFECT
// skip all lines that replace edit covers	WITHOUT_CLASSIFICATION	0.9999971395294721	WITHOUT_CLASSIFICATION	2.860470527918679E-6	DEFECT
// should not happen, re-throw exception	WITHOUT_CLASSIFICATION	0.9993869008800043	WITHOUT_CLASSIFICATION	6.130991199957062E-4	DEFECT
// make sure that dummy edit is not in the tree	WITHOUT_CLASSIFICATION	0.997322990750405	WITHOUT_CLASSIFICATION	0.0026770092495950895	DEFECT
// assume length will grow by 10% (average line length is 20 characters)	WITHOUT_CLASSIFICATION	0.9999985070942713	WITHOUT_CLASSIFICATION	1.4929057286679375E-6	DEFECT
// next position is checked as well	WITHOUT_CLASSIFICATION	0.9999983241971601	WITHOUT_CLASSIFICATION	1.675802839926908E-6	DEFECT
// char at currentPos is copied as well	WITHOUT_CLASSIFICATION	0.9999998381572225	WITHOUT_CLASSIFICATION	1.6184277753000986E-7	DEFECT
// lastPos, currentPos points at the next chars that will be copied later	WITHOUT_CLASSIFICATION	0.9999896825409929	WITHOUT_CLASSIFICATION	1.0317459007117908E-5	DEFECT
// copy last piece if any	WITHOUT_CLASSIFICATION	0.9999971311957645	WITHOUT_CLASSIFICATION	2.8688042354647252E-6	DEFECT
// if needed, comment out a comma of the previous enum constant	WITHOUT_CLASSIFICATION	0.9999999840570677	WITHOUT_CLASSIFICATION	1.594293225979132E-8	DEFECT
// if there is anything before the node on the same line, create line break and comment out the first line of the node	WITHOUT_CLASSIFICATION	0.9999999430451337	WITHOUT_CLASSIFICATION	5.69548661810197E-8	DEFECT
// there is only whitespace on this line - no need for line break	WITHOUT_CLASSIFICATION	0.9999814808213218	WITHOUT_CLASSIFICATION	1.85191786782288E-5	DEFECT
// for enum constants, insert line break after the comma if there is anything after the comma	WITHOUT_CLASSIFICATION	0.9999828411217961	WITHOUT_CLASSIFICATION	1.7158878203834368E-5	DEFECT
// if there is any content after the node on the same line, insert line break (to prevent commenting out extra content)	WITHOUT_CLASSIFICATION	0.9999987687179644	WITHOUT_CLASSIFICATION	1.2312820356072448E-6	DEFECT
// if previous node is not commented out, but all the following nodes are, comment out a comma (constant separator)	WITHOUT_CLASSIFICATION	0.9999994790662997	WITHOUT_CLASSIFICATION	5.209337002701641E-7	DEFECT
// if previous node is not commented out, but all following are	WITHOUT_CLASSIFICATION	0.999998109251368	WITHOUT_CLASSIFICATION	1.890748632049413E-6	DEFECT
// insert new line at the end of previous constant	WITHOUT_CLASSIFICATION	0.9999988838198604	WITHOUT_CLASSIFICATION	1.1161801396749612E-6	DEFECT
// if comma is on a line by itself, comment it out but do not insert the line break	WITHOUT_CLASSIFICATION	0.9999970695042908	WITHOUT_CLASSIFICATION	2.9304957091175827E-6	DEFECT
// delete variable fragment from old declaration	WITHOUT_CLASSIFICATION	0.9999999756338278	WITHOUT_CLASSIFICATION	2.436617212424525E-8	DEFECT
// do not insert line break if there is only whitespace after comma	WITHOUT_CLASSIFICATION	0.9999595325688695	WITHOUT_CLASSIFICATION	4.046743113055848E-5	DEFECT
// there is only whitespace after enum constant on the same line - do not add line breaks	WITHOUT_CLASSIFICATION	0.9999752019975903	WITHOUT_CLASSIFICATION	2.47980024097391E-5	DEFECT
//listRewrite.remove((ASTNode)modifier, null);	WITHOUT_CLASSIFICATION	0.9999997779832005	WITHOUT_CLASSIFICATION	2.220167995752948E-7	DEFECT
// add added super interfaces to the array	WITHOUT_CLASSIFICATION	0.999998573608754	WITHOUT_CLASSIFICATION	1.4263912460746613E-6	DEFECT
// this could be method body, for example	WITHOUT_CLASSIFICATION	0.9998320249782778	WITHOUT_CLASSIFICATION	1.6797502172202577E-4	DEFECT
// for field declarations use variable declaration fragments instead	WITHOUT_CLASSIFICATION	0.9999999997142752	WITHOUT_CLASSIFICATION	2.8572475333742586E-10	DEFECT
// for all nodes but some use default extended range	WITHOUT_CLASSIFICATION	0.9999991709570061	WITHOUT_CLASSIFICATION	8.290429939533253E-7	DEFECT
// remove all existing modifiers	WITHOUT_CLASSIFICATION	0.9999982826146743	WITHOUT_CLASSIFICATION	1.7173853257663138E-6	DEFECT
// Fill 4 of value (byte) -87 // Fill 7 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 9 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 18 of value (byte) 33 // Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9998679642306164	WITHOUT_CLASSIFICATION	1.3203576938360505E-4	DEFECT
// append extra dimensions if any	WITHOUT_CLASSIFICATION	0.9998870967247322	WITHOUT_CLASSIFICATION	1.1290327526788672E-4	DEFECT
// Fill 4 of value (byte) -87 // Fill 7 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 9 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 18 of value (byte) 33 // Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9998679642306164	WITHOUT_CLASSIFICATION	1.3203576938360505E-4	DEFECT
// create new modifiers and add to rewrite	WITHOUT_CLASSIFICATION	0.9999998655038707	WITHOUT_CLASSIFICATION	1.3449612932724343E-7	DEFECT
// parse	WITHOUT_CLASSIFICATION	0.9999990738885218	WITHOUT_CLASSIFICATION	9.261114781897153E-7	DEFECT
//	WITHOUT_CLASSIFICATION	0.999972177117672	WITHOUT_CLASSIFICATION	2.7822882328083235E-5	DEFECT
// specify the exact parent of annotations	WITHOUT_CLASSIFICATION	0.9999995160036173	WITHOUT_CLASSIFICATION	4.839963826983317E-7	DEFECT
// set source	WITHOUT_CLASSIFICATION	0.999999946677844	WITHOUT_CLASSIFICATION	5.332215597050628E-8	DEFECT
// create rewriter to record changes	WITHOUT_CLASSIFICATION	0.9999998915673407	WITHOUT_CLASSIFICATION	1.0843265933297176E-7	DEFECT
// keep comments between nodes when removing or moving nodes	WITHOUT_CLASSIFICATION	0.9999952466104249	WITHOUT_CLASSIFICATION	4.753389575071467E-6	DEFECT
// set properties	WITHOUT_CLASSIFICATION	0.9999998229813613	WITHOUT_CLASSIFICATION	1.7701863880828843E-7	DEFECT
// create JNode and set properties	WITHOUT_CLASSIFICATION	0.999999633996754	WITHOUT_CLASSIFICATION	3.660032460443523E-7	DEFECT
// Set of options that we want to copy from the current definition        	WITHOUT_CLASSIFICATION	0.9999997160275511	WITHOUT_CLASSIFICATION	2.8397244896143836E-7	DEFECT
// Set of options that we want to control	WITHOUT_CLASSIFICATION	0.9999999268730568	WITHOUT_CLASSIFICATION	7.312694319483147E-8	DEFECT
// separate fields with an empty line	WITHOUT_CLASSIFICATION	0.9999993802543349	WITHOUT_CLASSIFICATION	6.197456649940242E-7	DEFECT
// make all enum constants to be on separate lines	WITHOUT_CLASSIFICATION	0.9999985835066737	WITHOUT_CLASSIFICATION	1.4164933262341668E-6	DEFECT
// handle field declarations separately	WITHOUT_CLASSIFICATION	0.9999999807930581	WITHOUT_CLASSIFICATION	1.920694198025211E-8	DEFECT
// create new node and replace it all by original contents	WITHOUT_CLASSIFICATION	0.9999939047860884	WITHOUT_CLASSIFICATION	6.095213911514786E-6	DEFECT
// set rewriter on the new node	WITHOUT_CLASSIFICATION	0.9999962340850352	WITHOUT_CLASSIFICATION	3.7659149648342265E-6	DEFECT
// if there are multiple variables in the same field declaration, create declaration with only 1 variable	WITHOUT_CLASSIFICATION	0.9999999953383738	WITHOUT_CLASSIFICATION	4.6616261891118785E-9	DEFECT
// rewriter is required for set methods	WITHOUT_CLASSIFICATION	0.9999897735370301	WITHOUT_CLASSIFICATION	1.0226462969927391E-5	DEFECT
// set comment and initializer as strings	WITHOUT_CLASSIFICATION	0.9999998766286647	WITHOUT_CLASSIFICATION	1.2337133528891963E-7	DEFECT
// set annotation contents	WITHOUT_CLASSIFICATION	0.9999998722208745	WITHOUT_CLASSIFICATION	1.2777912551198644E-7	DEFECT
// skip nodes in hierarchy that can not be converted to JNode (i.e. VariableDeclarationFragment)	WITHOUT_CLASSIFICATION	0.9999999854246453	WITHOUT_CLASSIFICATION	1.4575354826047326E-8	DEFECT
// get rewriter	WITHOUT_CLASSIFICATION	0.9999990805018889	WITHOUT_CLASSIFICATION	9.194981111193978E-7	DEFECT
// update the wrapped object map	WITHOUT_CLASSIFICATION	0.99999889028329	WITHOUT_CLASSIFICATION	1.109716709926856E-6	DEFECT
// range to look for comments	WITHOUT_CLASSIFICATION	0.9999995411134062	WITHOUT_CLASSIFICATION	4.588865939545447E-7	DEFECT
// get the end position of the range for the previous node	WITHOUT_CLASSIFICATION	0.9999990248317161	WITHOUT_CLASSIFICATION	9.751682839878437E-7	DEFECT
//previousNode.getStartPosition() + previousNode.getLength();	WITHOUT_CLASSIFICATION	0.9999997547906385	WITHOUT_CLASSIFICATION	2.452093614923759E-7	DEFECT
// if there is an element with end position <= rangeEndPos	WITHOUT_CLASSIFICATION	0.9999999116836397	WITHOUT_CLASSIFICATION	8.831636025049854E-8	DEFECT
// the previous element must have end position <= rangeEndPos	WITHOUT_CLASSIFICATION	0.999998825084755	WITHOUT_CLASSIFICATION	1.1749152449768731E-6	DEFECT
// else - there is a comment that ends exactly at rangeEndPos    	WITHOUT_CLASSIFICATION	0.9999286787876646	WITHOUT_CLASSIFICATION	7.132121233548008E-5	DEFECT
// if there is a comment with start position > rangeStartPos	WITHOUT_CLASSIFICATION	0.9999997664763332	WITHOUT_CLASSIFICATION	2.335236668004551E-7	DEFECT
// else - there is a comment that starts exactly at rangeStartPos	WITHOUT_CLASSIFICATION	0.9999893584929502	WITHOUT_CLASSIFICATION	1.064150704973268E-5	DEFECT
// find start position of farthest preceding comment	WITHOUT_CLASSIFICATION	0.9999972201291153	WITHOUT_CLASSIFICATION	2.7798708846962777E-6	DEFECT
// check if there is just whitespace between position and start of the comment	WITHOUT_CLASSIFICATION	0.9999999998092594	WITHOUT_CLASSIFICATION	1.907406376342083E-10	DEFECT
// extend to include the comment at the same line as the position 	WITHOUT_CLASSIFICATION	0.9999699165769129	WITHOUT_CLASSIFICATION	3.0083423087120263E-5	DEFECT
// extend range backward	WITHOUT_CLASSIFICATION	0.9999991689030083	WITHOUT_CLASSIFICATION	8.310969917078771E-7	DEFECT
// extend range forward	WITHOUT_CLASSIFICATION	0.9999994379745508	WITHOUT_CLASSIFICATION	5.620254492988384E-7	DEFECT
// add trailing whitespace	WITHOUT_CLASSIFICATION	0.9999999934256347	WITHOUT_CLASSIFICATION	6.5743652268935554E-9	DEFECT
// increments the position to add the white spaces	WITHOUT_CLASSIFICATION	0.999999362887276	WITHOUT_CLASSIFICATION	6.371127240790073E-7	DEFECT
// for all nodes but some use default extended range	WITHOUT_CLASSIFICATION	0.9999991709570061	WITHOUT_CLASSIFICATION	8.290429939533253E-7	DEFECT
// include line comments following end of the nodes into the range	WITHOUT_CLASSIFICATION	0.9999995713101885	WITHOUT_CLASSIFICATION	4.2868981151786E-7	DEFECT
// add leading comments	WITHOUT_CLASSIFICATION	0.9999995306263386	WITHOUT_CLASSIFICATION	4.6937366131192715E-7	DEFECT
// add trailing comments if necessary	WITHOUT_CLASSIFICATION	0.9999994336321122	WITHOUT_CLASSIFICATION	5.663678876848934E-7	DEFECT
// insert new declaration before this one	WITHOUT_CLASSIFICATION	0.9999998998690992	WITHOUT_CLASSIFICATION	1.0013090082375745E-7	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999989374002828	WITHOUT_CLASSIFICATION	1.0625997173036432E-6	DEFECT
// append extra dimensions if any	WITHOUT_CLASSIFICATION	0.9998870967247322	WITHOUT_CLASSIFICATION	1.1290327526788672E-4	DEFECT
// default implementation does nothing	WITHOUT_CLASSIFICATION	0.9999887421090998	WITHOUT_CLASSIFICATION	1.1257890900274894E-5	DEFECT
// disable commenting out	WITHOUT_CLASSIFICATION	0.9999927014811039	WITHOUT_CLASSIFICATION	7.29851889613572E-6	DEFECT
// enable commenting out	WITHOUT_CLASSIFICATION	0.9999991139003702	WITHOUT_CLASSIFICATION	8.860996297415208E-7	DEFECT
// mark the node as moved if node has been removed      	WITHOUT_CLASSIFICATION	0.9999949558337756	WITHOUT_CLASSIFICATION	5.0441662243545055E-6	DEFECT
// if are dealing with original, not cloned node	WITHOUT_CLASSIFICATION	0.9999999750523524	WITHOUT_CLASSIFICATION	2.4947647688324754E-8	DEFECT
// mark the node to be removed	WITHOUT_CLASSIFICATION	0.9999947988056943	WITHOUT_CLASSIFICATION	5.201194305685227E-6	DEFECT
// assume that the node is being moved (to allow insertion after)	WITHOUT_CLASSIFICATION	0.9999997250093238	WITHOUT_CLASSIFICATION	2.749906762013374E-7	DEFECT
// remove the node	WITHOUT_CLASSIFICATION	0.9999954913296306	WITHOUT_CLASSIFICATION	4.50867036940078E-6	DEFECT
// insert new values	WITHOUT_CLASSIFICATION	0.9999999191435271	WITHOUT_CLASSIFICATION	8.085647277392918E-8	DEFECT
// stringValue not null, nodeValue is null	WITHOUT_CLASSIFICATION	0.999962535906586	WITHOUT_CLASSIFICATION	3.7464093414113656E-5	DEFECT
// always returns original value	WITHOUT_CLASSIFICATION	0.999997480892918	WITHOUT_CLASSIFICATION	2.5191070819191005E-6	DEFECT
// append extra dimensions since they are not stored in Type object	WITHOUT_CLASSIFICATION	0.9999956969935109	WITHOUT_CLASSIFICATION	4.303006489106566E-6	DEFECT
// create map of field names to fields	WITHOUT_CLASSIFICATION	0.9999982844722146	WITHOUT_CLASSIFICATION	1.7155277854852794E-6	DEFECT
// move all children to the enum, converting some fields to constants	WITHOUT_CLASSIFICATION	0.9999990817011454	WITHOUT_CLASSIFICATION	9.18298854653006E-7	DEFECT
// remove type, insert enum	WITHOUT_CLASSIFICATION	0.9999913809813228	WITHOUT_CLASSIFICATION	8.61901867720031E-6	DEFECT
// convert only public static final fields	WITHOUT_CLASSIFICATION	0.9999999761231341	WITHOUT_CLASSIFICATION	2.3876865829737344E-8	DEFECT
// convert only fields of the same type as parent	WITHOUT_CLASSIFICATION	0.9999921193417557	WITHOUT_CLASSIFICATION	7.88065824429916E-6	DEFECT
// set arguments and body	WITHOUT_CLASSIFICATION	0.9999999317187571	WITHOUT_CLASSIFICATION	6.828124277651037E-8	DEFECT
// move annotations	WITHOUT_CLASSIFICATION	0.9999979801974199	WITHOUT_CLASSIFICATION	2.019802580003573E-6	DEFECT
// unable to set arguments or body	WITHOUT_CLASSIFICATION	0.9999999406143459	WITHOUT_CLASSIFICATION	5.9385654211233356E-8	DEFECT
// update the wrapped object	WITHOUT_CLASSIFICATION	0.9999997859620059	WITHOUT_CLASSIFICATION	2.1403799418235916E-7	DEFECT
// move annotations	WITHOUT_CLASSIFICATION	0.9999979801974199	WITHOUT_CLASSIFICATION	2.019802580003573E-6	DEFECT
// convert enum constants and add to list of converted constants	WITHOUT_CLASSIFICATION	0.9999999787080921	WITHOUT_CLASSIFICATION	2.129190791295977E-8	DEFECT
// move the node	WITHOUT_CLASSIFICATION	0.999997282803072	WITHOUT_CLASSIFICATION	2.7171969279775412E-6	DEFECT
// insert nodeToInsert after targetNode	WITHOUT_CLASSIFICATION	0.9999999673384592	WITHOUT_CLASSIFICATION	3.2661540794880206E-8	DEFECT
// replace type by enum	WITHOUT_CLASSIFICATION	0.9999995803476391	WITHOUT_CLASSIFICATION	4.196523608674756E-7	DEFECT
// create field declaration with 1 variable declaration fragment	WITHOUT_CLASSIFICATION	0.9999999970661196	WITHOUT_CLASSIFICATION	2.933880304020429E-9	DEFECT
// set the type to create	WITHOUT_CLASSIFICATION	0.9999999457724978	WITHOUT_CLASSIFICATION	5.422750220954446E-8	DEFECT
// set arguments	WITHOUT_CLASSIFICATION	0.9999999898689071	WITHOUT_CLASSIFICATION	1.0131092887200147E-8	DEFECT
// replace some arguments by another field names (constants)	WITHOUT_CLASSIFICATION	0.9999998789342073	WITHOUT_CLASSIFICATION	1.2106579277372857E-7	DEFECT
// update last field that is used	WITHOUT_CLASSIFICATION	0.999999639459695	WITHOUT_CLASSIFICATION	3.605403050818198E-7	DEFECT
// set the arguments to the constructor	WITHOUT_CLASSIFICATION	0.9999999930719343	WITHOUT_CLASSIFICATION	6.928065718530344E-9	DEFECT
// set the body	WITHOUT_CLASSIFICATION	0.9999980807514476	WITHOUT_CLASSIFICATION	1.9192485525096247E-6	DEFECT
// set the whole initializer	WITHOUT_CLASSIFICATION	0.9999999900138817	WITHOUT_CLASSIFICATION	9.98611827561631E-9	DEFECT
// return the whole declaration contents (not just variableDeclarationFragment)	WITHOUT_CLASSIFICATION	0.9999999998277445	WITHOUT_CLASSIFICATION	1.722555358372893E-10	DEFECT
// check number of fragments	WITHOUT_CLASSIFICATION	0.9999999953847681	WITHOUT_CLASSIFICATION	4.615231906520652E-9	DEFECT
// create a copy of declaration	WITHOUT_CLASSIFICATION	0.9999988445426916	WITHOUT_CLASSIFICATION	1.1554573083577263E-6	DEFECT
// new declaration will not have fragments until performSplit() is called	WITHOUT_CLASSIFICATION	0.9999921380280513	WITHOUT_CLASSIFICATION	7.861971948687978E-6	DEFECT
// set rewritten node to be the original	WITHOUT_CLASSIFICATION	0.9999987996801579	WITHOUT_CLASSIFICATION	1.2003198421483379E-6	DEFECT
// perform split if there is more than 1 fragment	WITHOUT_CLASSIFICATION	0.9999999543805252	WITHOUT_CLASSIFICATION	4.561947477167043E-8	DEFECT
// set javadoc	WITHOUT_CLASSIFICATION	0.999999966268967	WITHOUT_CLASSIFICATION	3.373103289763443E-8	DEFECT
// set initializer	WITHOUT_CLASSIFICATION	0.9999999818142925	WITHOUT_CLASSIFICATION	1.8185707532052934E-8	DEFECT
// set annotations contents	WITHOUT_CLASSIFICATION	0.9999996686827373	WITHOUT_CLASSIFICATION	3.313172627631499E-7	DEFECT
// }	WITHOUT_CLASSIFICATION	0.9999906610274247	WITHOUT_CLASSIFICATION	9.338972575288432E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999995614747719	WITHOUT_CLASSIFICATION	4.385252280605921E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999995614747719	WITHOUT_CLASSIFICATION	4.385252280605921E-7	DEFECT
// }	WITHOUT_CLASSIFICATION	0.9999906610274247	WITHOUT_CLASSIFICATION	9.338972575288432E-6	DEFECT
// generateColor();	WITHOUT_CLASSIFICATION	0.9999987739540627	WITHOUT_CLASSIFICATION	1.2260459374215112E-6	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999998407458563	WITHOUT_CLASSIFICATION	1.5925414364133287E-7	DEFECT
// container specification group	WITHOUT_CLASSIFICATION	0.9999997426248022	WITHOUT_CLASSIFICATION	2.5737519789125647E-7	DEFECT
// New Template Container Label	WITHOUT_CLASSIFICATION	0.9999999949767332	WITHOUT_CLASSIFICATION	5.023266749995878E-9	DEFECT
// New Template Container Label	WITHOUT_CLASSIFICATION	0.9999999949767332	WITHOUT_CLASSIFICATION	5.023266749995878E-9	DEFECT
// New Template Container Entryfield	WITHOUT_CLASSIFICATION	0.9999999948008601	WITHOUT_CLASSIFICATION	5.199139853734194E-9	DEFECT
// jetNature.setTemplateContainers(newTemplateContainers);	WITHOUT_CLASSIFICATION	0.999999996500719	WITHOUT_CLASSIFICATION	3.4992809730228277E-9	DEFECT
// jetNature.setJavaSourceContainer(newJavaSourceContainer);	WITHOUT_CLASSIFICATION	0.999999995643332	WITHOUT_CLASSIFICATION	4.356668088147642E-9	DEFECT
// will point at the character after 0 to 3 octal digits	WITHOUT_CLASSIFICATION	0.9999998149321685	WITHOUT_CLASSIFICATION	1.8506783146336426E-7	DEFECT
/*   * @since 2.4   */	WITHOUT_CLASSIFICATION	0.9999998290263284	WITHOUT_CLASSIFICATION	1.70973671510069E-7	DEFECT
// the for loop's condition finds the separator 	WITHOUT_CLASSIFICATION	0.9999176157636823	WITHOUT_CLASSIFICATION	8.238423631775386E-5	DEFECT
// Assume that we aren't running.	WITHOUT_CLASSIFICATION	0.9999988808746558	WITHOUT_CLASSIFICATION	1.119125344137312E-6	DEFECT
// Assume that it's not available.	WITHOUT_CLASSIFICATION	0.9999959295382302	WITHOUT_CLASSIFICATION	4.070461769764407E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999375071796	WITHOUT_CLASSIFICATION	6.24928203174307E-8	DEFECT
/*     * Javadoc copied from interface.     */	WITHOUT_CLASSIFICATION	0.9999999502067728	WITHOUT_CLASSIFICATION	4.9793227265725E-8	DEFECT
/*     * Javadoc copied from interface.     */	WITHOUT_CLASSIFICATION	0.9999999502067728	WITHOUT_CLASSIFICATION	4.9793227265725E-8	DEFECT
// System.err.println("Logged throwable: --------------------"); // throwable.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999987184042244	WITHOUT_CLASSIFICATION	1.2815957756800463E-6	DEFECT
// System.err.println("Logged throwable: --------------------"); // throwable.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999987184042244	WITHOUT_CLASSIFICATION	1.2815957756800463E-6	DEFECT
// Trim off the segments corresponding to the package nesting. //	WITHOUT_CLASSIFICATION	0.9999916944795657	WITHOUT_CLASSIFICATION	8.305520434185338E-6	DEFECT
// For an archive URI, check for the path in the archive. //	WITHOUT_CLASSIFICATION	0.9999997980623743	WITHOUT_CLASSIFICATION	2.0193762563722993E-7	DEFECT
// Just print an error message.	WITHOUT_CLASSIFICATION	0.9999986340865588	WITHOUT_CLASSIFICATION	1.3659134413396472E-6	DEFECT
// Assume the class is not available.	WITHOUT_CLASSIFICATION	0.9999660883040753	WITHOUT_CLASSIFICATION	3.391169592471169E-5	DEFECT
// Just return the default.	WITHOUT_CLASSIFICATION	0.9999999913703942	WITHOUT_CLASSIFICATION	8.629605907856029E-9	DEFECT
// Ignore the exception and return the original URI.	WITHOUT_CLASSIFICATION	0.9999999769600094	WITHOUT_CLASSIFICATION	2.303999056329838E-8	DEFECT
// Continue with the unresolved URI.	WITHOUT_CLASSIFICATION	0.9999965602254974	WITHOUT_CLASSIFICATION	3.4397745024515475E-6	DEFECT
// Return the original URI.	WITHOUT_CLASSIFICATION	0.999995221082447	WITHOUT_CLASSIFICATION	4.778917552948665E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999375071796	WITHOUT_CLASSIFICATION	6.24928203174307E-8	DEFECT
// If we can open  an input stream, then the path is there, and we have a good URL. //	WITHOUT_CLASSIFICATION	0.9999518573959933	WITHOUT_CLASSIFICATION	4.814260400656107E-5	DEFECT
// If we didn't find the path in the usual place nor in the archive... //	WITHOUT_CLASSIFICATION	0.9999935246074199	WITHOUT_CLASSIFICATION	6.4753925801007135E-6	DEFECT
// Continue processing if the file doesn't exist so that we try create a new empty one.	WITHOUT_CLASSIFICATION	0.9999999330215148	WITHOUT_CLASSIFICATION	6.697848525898655E-8	DEFECT
// This is just a marker interface.	WITHOUT_CLASSIFICATION	0.9999999303627353	WITHOUT_CLASSIFICATION	6.963726478001625E-8	DEFECT
// This is just a marker interface.	WITHOUT_CLASSIFICATION	0.9999999303627353	WITHOUT_CLASSIFICATION	6.963726478001625E-8	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.999999933406692	WITHOUT_CLASSIFICATION	6.659330800494975E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999375071796	WITHOUT_CLASSIFICATION	6.24928203174307E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999375071796	WITHOUT_CLASSIFICATION	6.24928203174307E-8	DEFECT
/*   * @deprecated   */	WITHOUT_CLASSIFICATION	0.9999999728570622	WITHOUT_CLASSIFICATION	2.7142937707918658E-8	DEFECT
/*   * @deprecated   */	WITHOUT_CLASSIFICATION	0.9999999728570622	WITHOUT_CLASSIFICATION	2.7142937707918658E-8	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.999999933406692	WITHOUT_CLASSIFICATION	6.659330800494975E-8	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999996061833671	WITHOUT_CLASSIFICATION	3.938166328746333E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999996061833671	WITHOUT_CLASSIFICATION	3.938166328746333E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999996061833671	WITHOUT_CLASSIFICATION	3.938166328746333E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999996061833671	WITHOUT_CLASSIFICATION	3.938166328746333E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999996061833671	WITHOUT_CLASSIFICATION	3.938166328746333E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999996061833671	WITHOUT_CLASSIFICATION	3.938166328746333E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999995614747719	WITHOUT_CLASSIFICATION	4.385252280605921E-7	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999998063493674	WITHOUT_CLASSIFICATION	1.9365063276327167E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999375071796	WITHOUT_CLASSIFICATION	6.24928203174307E-8	DEFECT
// Create a title bar.	WITHOUT_CLASSIFICATION	0.9999993648839539	WITHOUT_CLASSIFICATION	6.351160460420973E-7	DEFECT
// When the pane or any child gains focus, notify the workbench.	WITHOUT_CLASSIFICATION	0.9998769014587817	WITHOUT_CLASSIFICATION	1.2309854121828257E-4	DEFECT
// Only do this once.	WITHOUT_CLASSIFICATION	0.9999980882974749	WITHOUT_CLASSIFICATION	1.91170252504206E-6	DEFECT
// Title.  	WITHOUT_CLASSIFICATION	0.9999928697898053	WITHOUT_CLASSIFICATION	7.130210194709384E-6	DEFECT
// Action bar.	WITHOUT_CLASSIFICATION	0.9999930097451996	WITHOUT_CLASSIFICATION	6.990254800499071E-6	DEFECT
// System bar.  	WITHOUT_CLASSIFICATION	0.9999988140371892	WITHOUT_CLASSIFICATION	1.1859628107983558E-6	DEFECT
// Define gradient (blue to widget background color)	WITHOUT_CLASSIFICATION	0.9999997912143074	WITHOUT_CLASSIFICATION	2.0878569264133337E-7	DEFECT
// colorMap.put(CLR_GRAD_START, clr1);	WITHOUT_CLASSIFICATION	0.9999997131013462	WITHOUT_CLASSIFICATION	2.868986537879992E-7	DEFECT
// colorMap.put(CLR_GRAD_START, clr1);	WITHOUT_CLASSIFICATION	0.9999997131013462	WITHOUT_CLASSIFICATION	2.868986537879992E-7	DEFECT
// Preload.	WITHOUT_CLASSIFICATION	0.9999993830966126	WITHOUT_CLASSIFICATION	6.169033874332024E-7	DEFECT
// Preload.	WITHOUT_CLASSIFICATION	0.9999993830966126	WITHOUT_CLASSIFICATION	6.169033874332024E-7	DEFECT
// was the details button pressed?	WITHOUT_CLASSIFICATION	0.9999924607020755	WITHOUT_CLASSIFICATION	7.539297924593288E-6	DEFECT
// create OK and Details buttons	WITHOUT_CLASSIFICATION	0.9999986706592373	WITHOUT_CLASSIFICATION	1.3293407627157786E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999996061833671	WITHOUT_CLASSIFICATION	3.938166328746333E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999996061833671	WITHOUT_CLASSIFICATION	3.938166328746333E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999995614747719	WITHOUT_CLASSIFICATION	4.385252280605921E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999995614747719	WITHOUT_CLASSIFICATION	4.385252280605921E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999995614747719	WITHOUT_CLASSIFICATION	4.385252280605921E-7	DEFECT
// Empty block	WITHOUT_CLASSIFICATION	0.9999983709759511	WITHOUT_CLASSIFICATION	1.6290240489400028E-6	DEFECT
// Empty block	WITHOUT_CLASSIFICATION	0.9999983709759511	WITHOUT_CLASSIFICATION	1.6290240489400028E-6	DEFECT
// Empty block	WITHOUT_CLASSIFICATION	0.9999983709759511	WITHOUT_CLASSIFICATION	1.6290240489400028E-6	DEFECT
// create a composite with standard margins and spacing	WITHOUT_CLASSIFICATION	0.9999992092164521	WITHOUT_CLASSIFICATION	7.907835479324222E-7	DEFECT
//Create a label if there are no children to force a smaller layout	WITHOUT_CLASSIFICATION	0.9999998363683529	WITHOUT_CLASSIFICATION	1.636316471319164E-7	DEFECT
//If it was not a warning or an diagnostic then return the diagnostic image	WITHOUT_CLASSIFICATION	0.999999418445825	WITHOUT_CLASSIFICATION	5.815541750472341E-7	DEFECT
// Closing the detail area	WITHOUT_CLASSIFICATION	0.9999999183616638	WITHOUT_CLASSIFICATION	8.163833629265912E-8	DEFECT
// Opening the detail area	WITHOUT_CLASSIFICATION	0.9999998844767225	WITHOUT_CLASSIFICATION	1.1552327745644282E-7	DEFECT
//Only one example per wizard	WITHOUT_CLASSIFICATION	0.9999229495606005	WITHOUT_CLASSIFICATION	7.705043939958852E-5	DEFECT
// null -> relative URI reference	WITHOUT_CLASSIFICATION	0.9999998553082604	WITHOUT_CLASSIFICATION	1.446917395825651E-7	DEFECT
// Applicable only to a hierarchical URI.	WITHOUT_CLASSIFICATION	0.9999993867837423	WITHOUT_CLASSIFICATION	6.132162576548228E-7	DEFECT
// empty last segment -> trailing separator	WITHOUT_CLASSIFICATION	0.9999996120104663	WITHOUT_CLASSIFICATION	3.87989533667225E-7	DEFECT
// Identifies a file-type absolute URI.	WITHOUT_CLASSIFICATION	0.9999993942892029	WITHOUT_CLASSIFICATION	6.057107970816897E-7	DEFECT
// Separators for parsing a URI string.	WITHOUT_CLASSIFICATION	0.9999876949271589	WITHOUT_CLASSIFICATION	1.2305072841095573E-5	DEFECT
// Characters to use in escaping.	WITHOUT_CLASSIFICATION	0.9999999421080088	WITHOUT_CLASSIFICATION	5.7891991249024795E-8	DEFECT
// | ucschar | escaped	WITHOUT_CLASSIFICATION	0.9999999896183965	WITHOUT_CLASSIFICATION	1.0381603479729409E-8	DEFECT
// Static initializer for archiveSchemes.	WITHOUT_CLASSIFICATION	0.9999999974148515	WITHOUT_CLASSIFICATION	2.585148564617652E-9	DEFECT
// Returns the lower half bitmask for the given ASCII character.	WITHOUT_CLASSIFICATION	0.9999998624117894	WITHOUT_CLASSIFICATION	1.3758821069943936E-7	DEFECT
// Returns the upper half bitmask for the given ACSII character.	WITHOUT_CLASSIFICATION	0.9999994062293185	WITHOUT_CLASSIFICATION	5.937706814303252E-7	DEFECT
// Debugging method: converts the given long to a string of binary digits.	WITHOUT_CLASSIFICATION	0.9999739035104757	WITHOUT_CLASSIFICATION	2.6096489524311067E-5	DEFECT
// String-parsing implementation.	WITHOUT_CLASSIFICATION	0.9998981210637612	WITHOUT_CLASSIFICATION	1.0187893623875006E-4	DEFECT
// && uri.charAt(i) == FRAGMENT_SEPARATOR (implied)	WITHOUT_CLASSIFICATION	0.9999999959087412	WITHOUT_CLASSIFICATION	4.091258784200077E-9	DEFECT
// Private constructor for use of platform factory methods.	WITHOUT_CLASSIFICATION	0.9999999987815184	WITHOUT_CLASSIFICATION	1.218481593994705E-9	DEFECT
// Private constructor for use of static factory methods.	WITHOUT_CLASSIFICATION	0.9999999955512316	WITHOUT_CLASSIFICATION	4.4487683522043904E-9	DEFECT
//iri = iri || containsNonASCII(authority);	WITHOUT_CLASSIFICATION	0.9999993889146006	WITHOUT_CLASSIFICATION	6.110853994713995E-7	DEFECT
//iri = iri || containsNonASCII(device);	WITHOUT_CLASSIFICATION	0.9999995244214648	WITHOUT_CLASSIFICATION	4.755785352241366E-7	DEFECT
//iri = iri || containsNonASCII(query);	WITHOUT_CLASSIFICATION	0.999999062985355	WITHOUT_CLASSIFICATION	9.370146449268688E-7	DEFECT
//iri = iri || containsNonASCII(fragment);	WITHOUT_CLASSIFICATION	0.9999997195404334	WITHOUT_CLASSIFICATION	2.804595665911208E-7	DEFECT
//this.iri = iri;	WITHOUT_CLASSIFICATION	0.9999996647845043	WITHOUT_CLASSIFICATION	3.3521549568261143E-7	DEFECT
//return value == null || validate(value, SEGMENT_CHAR_HI, SEGMENT_CHAR_LO, true, true);	WITHOUT_CLASSIFICATION	0.9999986300599112	WITHOUT_CLASSIFICATION	1.369940088863607E-6	DEFECT
// Ignore the exception and return false.	WITHOUT_CLASSIFICATION	0.9999999919694532	WITHOUT_CLASSIFICATION	8.030546764617963E-9	DEFECT
//return value != null && validate(value, SEGMENT_CHAR_HI, SEGMENT_CHAR_LO, true, true);	WITHOUT_CLASSIFICATION	0.9999944360667576	WITHOUT_CLASSIFICATION	5.563933242347142E-6	DEFECT
//return value == null || validate(value, URIC_HI, URIC_LO, true, true);	WITHOUT_CLASSIFICATION	0.9999964506415108	WITHOUT_CLASSIFICATION	3.5493584891254705E-6	DEFECT
// <p>A valid fragment may be null or contain any allowed URI characters.	WITHOUT_CLASSIFICATION	0.999999993117259	WITHOUT_CLASSIFICATION	6.8827410082468845E-9	DEFECT
// note: hierarchical -> authority != null	WITHOUT_CLASSIFICATION	0.9999945606458861	WITHOUT_CLASSIFICATION	5.4393541139133826E-6	DEFECT
// note: device != null -> hierarchical	WITHOUT_CLASSIFICATION	0.9999983877704256	WITHOUT_CLASSIFICATION	1.6122295743925501E-6	DEFECT
// note: absolutePath -> hierarchical	WITHOUT_CLASSIFICATION	0.999999147986379	WITHOUT_CLASSIFICATION	8.520136209613966E-7	DEFECT
// note: query != null -> hierarchical	WITHOUT_CLASSIFICATION	0.9999709677585925	WITHOUT_CLASSIFICATION	2.903224140756324E-5	DEFECT
// an absolute URI needs no resolving	WITHOUT_CLASSIFICATION	0.9999993650285348	WITHOUT_CLASSIFICATION	6.34971465170509E-7	DEFECT
// note: isRelative() -> hierarchical	WITHOUT_CLASSIFICATION	0.9999997483246715	WITHOUT_CLASSIFICATION	2.5167532853069667E-7	DEFECT
// no authority: use base's	WITHOUT_CLASSIFICATION	0.9999998538121967	WITHOUT_CLASSIFICATION	1.461878032235855E-7	DEFECT
// no device: use base's	WITHOUT_CLASSIFICATION	0.9999999512359383	WITHOUT_CLASSIFICATION	4.8764061618862205E-8	DEFECT
// else keep device, path, and query	WITHOUT_CLASSIFICATION	0.9999999886145962	WITHOUT_CLASSIFICATION	1.1385403802743457E-8	DEFECT
// else absolute path: keep it and query	WITHOUT_CLASSIFICATION	0.9999968520846325	WITHOUT_CLASSIFICATION	3.147915367424286E-6	DEFECT
// else keep authority, device, path, and query	WITHOUT_CLASSIFICATION	0.9999999781157155	WITHOUT_CLASSIFICATION	2.1884284528252733E-8	DEFECT
// return a correctly sized result	WITHOUT_CLASSIFICATION	0.9999269791163421	WITHOUT_CLASSIFICATION	7.302088365783769E-5	DEFECT
// skip empty segments and self references; push everything else	WITHOUT_CLASSIFICATION	0.999999991342454	WITHOUT_CLASSIFICATION	8.657545973815538E-9	DEFECT
// different scheme: need complete, absolute URI	WITHOUT_CLASSIFICATION	0.9999880160167978	WITHOUT_CLASSIFICATION	1.1983983202218634E-5	DEFECT
// matching authorities and no device or path removal	WITHOUT_CLASSIFICATION	0.9999996604179073	WITHOUT_CLASSIFICATION	3.3958209266161727E-7	DEFECT
// matching devices and no path removal	WITHOUT_CLASSIFICATION	0.9999994589442559	WITHOUT_CLASSIFICATION	5.41055744156488E-7	DEFECT
// user rejects a relative path: keep absolute or no path	WITHOUT_CLASSIFICATION	0.9999998781681382	WITHOUT_CLASSIFICATION	1.218318617570981E-7	DEFECT
// current document reference: keep no path or query	WITHOUT_CLASSIFICATION	0.9999966173689804	WITHOUT_CLASSIFICATION	3.3826310196692212E-6	DEFECT
// no paths: keep query only	WITHOUT_CLASSIFICATION	0.9999979028250457	WITHOUT_CLASSIFICATION	2.097174954369006E-6	DEFECT
// keep query and select relative or absolute path based on length	WITHOUT_CLASSIFICATION	0.9999862221515536	WITHOUT_CLASSIFICATION	1.3777848446282353E-5	DEFECT
// user demands a relative path or the absolute path is longer	WITHOUT_CLASSIFICATION	0.9999997287044411	WITHOUT_CLASSIFICATION	2.7129555892657425E-7	DEFECT
// else keep shorter absolute path	WITHOUT_CLASSIFICATION	0.9999999604191443	WITHOUT_CLASSIFICATION	3.958085567230961E-8	DEFECT
// treat an empty base path as the root absolute path	WITHOUT_CLASSIFICATION	0.9999899433764576	WITHOUT_CLASSIFICATION	1.0056623542332219E-5	DEFECT
// drop last segment from base, as in resolving	WITHOUT_CLASSIFICATION	0.9999877947182998	WITHOUT_CLASSIFICATION	1.2205281700322642E-5	DEFECT
// index of first segment that is different between endPath and startPath	WITHOUT_CLASSIFICATION	0.9999484689906559	WITHOUT_CLASSIFICATION	5.153100934401149E-5	DEFECT
// return a correctly sized result	WITHOUT_CLASSIFICATION	0.9999269791163421	WITHOUT_CLASSIFICATION	7.302088365783769E-5	DEFECT
// return a correctly sized result	WITHOUT_CLASSIFICATION	0.9999269791163421	WITHOUT_CLASSIFICATION	7.302088365783769E-5	DEFECT
// Empty statement.	WITHOUT_CLASSIFICATION	0.9999998365328461	WITHOUT_CLASSIFICATION	1.6346715382027464E-7	DEFECT
// use a stack to accumulate segments	WITHOUT_CLASSIFICATION	0.9999973710768328	WITHOUT_CLASSIFICATION	2.628923167141441E-6	DEFECT
// absolute path or no path -> absolute path	WITHOUT_CLASSIFICATION	0.9999999479466815	WITHOUT_CLASSIFICATION	5.2053318524328646E-8	DEFECT
// note: segments.length > 0 -> hierarchical	WITHOUT_CLASSIFICATION	0.9999997327984044	WITHOUT_CLASSIFICATION	2.672015955979156E-7	DEFECT
// note: segments.length > 0 -> hierarchical	WITHOUT_CLASSIFICATION	0.9999997327984044	WITHOUT_CLASSIFICATION	2.672015955979156E-7	DEFECT
// Get what's left of the segments after trimming the prefix.	WITHOUT_CLASSIFICATION	0.9999999817544667	WITHOUT_CLASSIFICATION	1.8245533346704988E-8	DEFECT
// no validation needed since all components are from existing URIs	WITHOUT_CLASSIFICATION	0.9999999671895977	WITHOUT_CLASSIFICATION	3.281040220060419E-8	DEFECT
// Otherwise, the path needs only the remaining segments.	WITHOUT_CLASSIFICATION	0.9999997794258845	WITHOUT_CLASSIFICATION	2.2057411559295048E-7	DEFECT
// Returns the int value of the given hex digit.	WITHOUT_CLASSIFICATION	0.9991418386936772	WITHOUT_CLASSIFICATION	8.581613063227304E-4	DEFECT
// Fill 6 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 62 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 6 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 11 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999061213710867	WITHOUT_CLASSIFICATION	9.387862891340928E-5	DEFECT
/*   * If this is an {@link #isIRI IRI}, converts it to a strict ASCII URI,   * using the procedure described in Section 3.1 of the   * <a href="http://www.w3.org/International/iri-edit/draft-duerst-iri-09.txt">IRI   * Draft RFC</a>.  Otherwise, this URI, itself, is returned.   *   * This unused code is included for possible future use...   */	WITHOUT_CLASSIFICATION	0.9999999994234399	WITHOUT_CLASSIFICATION	5.765601789969827E-10	DEFECT
// Continue with the established base URL.	WITHOUT_CLASSIFICATION	0.9999997582465492	WITHOUT_CLASSIFICATION	2.4175345079763396E-7	DEFECT
// Ignore the exception since we will throw one when all else fails.	WITHOUT_CLASSIFICATION	0.999998594064566	WITHOUT_CLASSIFICATION	1.4059354338994948E-6	DEFECT
// We'll rethrow the original exception, not this one.	WITHOUT_CLASSIFICATION	0.9999586654967744	WITHOUT_CLASSIFICATION	4.133450322573111E-5	DEFECT
// Ignore this since we will throw an exception when all else fails.	WITHOUT_CLASSIFICATION	0.9999587107631617	WITHOUT_CLASSIFICATION	4.128923683835075E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999375071796	WITHOUT_CLASSIFICATION	6.24928203174307E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999375071796	WITHOUT_CLASSIFICATION	6.24928203174307E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999375071796	WITHOUT_CLASSIFICATION	6.24928203174307E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999375071796	WITHOUT_CLASSIFICATION	6.24928203174307E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999375071796	WITHOUT_CLASSIFICATION	6.24928203174307E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999375071796	WITHOUT_CLASSIFICATION	6.24928203174307E-8	DEFECT
/*   * Javadoc copied from source.   */	WITHOUT_CLASSIFICATION	0.9999999922974814	WITHOUT_CLASSIFICATION	7.702518588681451E-9	DEFECT
// Suppress default constructor for noninstantiability.	WITHOUT_CLASSIFICATION	0.9999999919619093	WITHOUT_CLASSIFICATION	8.038090666073207E-9	DEFECT
// Fill 6 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 62 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 6 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 11 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999061213710867	WITHOUT_CLASSIFICATION	9.387862891340928E-5	DEFECT
/*    * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999502067728	WITHOUT_CLASSIFICATION	4.9793227265725E-8	DEFECT
/*    * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999502067728	WITHOUT_CLASSIFICATION	4.9793227265725E-8	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999998063493674	WITHOUT_CLASSIFICATION	1.9365063276327167E-7	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999989374002828	WITHOUT_CLASSIFICATION	1.0625997173036432E-6	DEFECT
//EParameter	WITHOUT_CLASSIFICATION	0.999998945798341	WITHOUT_CLASSIFICATION	1.0542016590138778E-6	DEFECT
// Subclasses may overrride 	WITHOUT_CLASSIFICATION	0.9999993195550921	WITHOUT_CLASSIFICATION	6.804449078740612E-7	DEFECT
// WizardContainer variables	WITHOUT_CLASSIFICATION	0.9999999769716477	WITHOUT_CLASSIFICATION	2.302835235896765E-8	DEFECT
// Sorting only the genModels	WITHOUT_CLASSIFICATION	0.9999939526443479	WITHOUT_CLASSIFICATION	6.047355652063413E-6	DEFECT
//EOperation	WITHOUT_CLASSIFICATION	0.9999983533527955	WITHOUT_CLASSIFICATION	1.646647204446083E-6	DEFECT
// This is only at avoid needing an @SuppressWarnings("unchecked") on the EMFObservableList	WITHOUT_CLASSIFICATION	0.999998873572102	WITHOUT_CLASSIFICATION	1.126427897966379E-6	DEFECT
// This is only at avoid needing an @SuppressWarnings("unchecked") on the EMFObservableList	WITHOUT_CLASSIFICATION	0.999998873572102	WITHOUT_CLASSIFICATION	1.126427897966379E-6	DEFECT
// Fill 230 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 10 of value (byte) 33 // Fill 39 of value (byte) -19 // Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999227604448315	WITHOUT_CLASSIFICATION	7.72395551684235E-5	DEFECT
//ETypedElement	WITHOUT_CLASSIFICATION	0.9999907124530522	WITHOUT_CLASSIFICATION	9.287546947737743E-6	DEFECT
// ETypeParameter	WITHOUT_CLASSIFICATION	0.9999997147237554	WITHOUT_CLASSIFICATION	2.8527624470422087E-7	DEFECT
//EDataType	WITHOUT_CLASSIFICATION	0.9999925467366859	WITHOUT_CLASSIFICATION	7.453263314068495E-6	DEFECT
//EcoreFactory	WITHOUT_CLASSIFICATION	0.999989884818608	WITHOUT_CLASSIFICATION	1.0115181392099851E-5	DEFECT
// EAnnotation	WITHOUT_CLASSIFICATION	0.99998063172465	WITHOUT_CLASSIFICATION	1.9368275349928535E-5	DEFECT
// EGenericType	WITHOUT_CLASSIFICATION	0.999999362582502	WITHOUT_CLASSIFICATION	6.374174979433753E-7	DEFECT
//EcorePackage	WITHOUT_CLASSIFICATION	0.9999900467417906	WITHOUT_CLASSIFICATION	9.953258209434446E-6	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.9999999766383213	WITHOUT_CLASSIFICATION	2.3361678751851995E-8	DEFECT
// Initialize simple dependencies	WITHOUT_CLASSIFICATION	0.9999998627377243	WITHOUT_CLASSIFICATION	1.372622756233283E-7	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.9999990161470182	WITHOUT_CLASSIFICATION	9.83852981794225E-7	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.9999998510045144	WITHOUT_CLASSIFICATION	1.4899548560704843E-7	DEFECT
// Mark meta-data to indicate it can't be changed	WITHOUT_CLASSIFICATION	0.999996839412632	WITHOUT_CLASSIFICATION	3.1605873680022317E-6	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.9999998937081113	WITHOUT_CLASSIFICATION	1.0629188876058995E-7	DEFECT
// Create enums	WITHOUT_CLASSIFICATION	0.9999998601966097	WITHOUT_CLASSIFICATION	1.3980339026541646E-7	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.9999998481815032	WITHOUT_CLASSIFICATION	1.518184968271126E-7	DEFECT
// Obtain other dependent packages	WITHOUT_CLASSIFICATION	0.9999999926807401	WITHOUT_CLASSIFICATION	7.319259834361146E-9	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.9999993338928099	WITHOUT_CLASSIFICATION	6.661071901337388E-7	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.9999921779007461	WITHOUT_CLASSIFICATION	7.822099253932902E-6	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.9999998165471937	WITHOUT_CLASSIFICATION	1.834528063299559E-7	DEFECT
// Initialize enums and add enum literals	WITHOUT_CLASSIFICATION	0.9999995251788815	WITHOUT_CLASSIFICATION	4.7482111857343865E-7	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.999999913714059	WITHOUT_CLASSIFICATION	8.628594096543401E-8	DEFECT
// ListChange	WITHOUT_CLASSIFICATION	0.9999999694710723	WITHOUT_CLASSIFICATION	3.052892773209144E-8	DEFECT
// FeatureMapEntry	WITHOUT_CLASSIFICATION	0.9999998860702467	WITHOUT_CLASSIFICATION	1.1392975323088348E-7	DEFECT
// FeatureChange	WITHOUT_CLASSIFICATION	0.9999999557015137	WITHOUT_CLASSIFICATION	4.4298486360519715E-8	DEFECT
// ChangeDescription	WITHOUT_CLASSIFICATION	0.9999997757906797	WITHOUT_CLASSIFICATION	2.242093202450761E-7	DEFECT
//ChangeFactory	WITHOUT_CLASSIFICATION	0.9999984746661194	WITHOUT_CLASSIFICATION	1.5253338805923461E-6	DEFECT
//ChangePackage	WITHOUT_CLASSIFICATION	0.9999990048637386	WITHOUT_CLASSIFICATION	9.951362614433308E-7	DEFECT
// ResourceChange	WITHOUT_CLASSIFICATION	0.9999998899314945	WITHOUT_CLASSIFICATION	1.1006850558595412E-7	DEFECT
//ChangePackageImpl	WITHOUT_CLASSIFICATION	0.9999978063261336	WITHOUT_CLASSIFICATION	2.1936738664857252E-6	DEFECT
//EObjectToChangesMapEntryImpl	WITHOUT_CLASSIFICATION	0.9999998914122574	WITHOUT_CLASSIFICATION	1.0858774263183599E-7	DEFECT
//ListChangeImpl	WITHOUT_CLASSIFICATION	0.999999069960982	WITHOUT_CLASSIFICATION	9.300390180966694E-7	DEFECT
// cache result	WITHOUT_CLASSIFICATION	0.9999989559637257	WITHOUT_CLASSIFICATION	1.044036274306684E-6	DEFECT
// cache result	WITHOUT_CLASSIFICATION	0.9999989559637257	WITHOUT_CLASSIFICATION	1.044036274306684E-6	DEFECT
//ResourceChangeImpl	WITHOUT_CLASSIFICATION	0.9999995973936984	WITHOUT_CLASSIFICATION	4.026063017000967E-7	DEFECT
// feature is instance of EAttribute	WITHOUT_CLASSIFICATION	0.9999998100889458	WITHOUT_CLASSIFICATION	1.8991105428129106E-7	DEFECT
// cached already?	WITHOUT_CLASSIFICATION	0.9999989256793972	WITHOUT_CLASSIFICATION	1.0743206028447523E-6	DEFECT
//FeatureChangeImpl	WITHOUT_CLASSIFICATION	0.9999992791596815	WITHOUT_CLASSIFICATION	7.208403185523521E-7	DEFECT
//FeatureChangeImpl	WITHOUT_CLASSIFICATION	0.9999992791596815	WITHOUT_CLASSIFICATION	7.208403185523521E-7	DEFECT
// Isolating the new objects	WITHOUT_CLASSIFICATION	0.9999992754559047	WITHOUT_CLASSIFICATION	7.245440952719315E-7	DEFECT
// getObjectsToDetachGen() should be changed only if required	WITHOUT_CLASSIFICATION	0.9999824792898914	WITHOUT_CLASSIFICATION	1.7520710108630695E-5	DEFECT
// caches the list value.	WITHOUT_CLASSIFICATION	0.9999998200394052	WITHOUT_CLASSIFICATION	1.7996059485239844E-7	DEFECT
//ChangeDescriptionImpl	WITHOUT_CLASSIFICATION	0.9999983365416772	WITHOUT_CLASSIFICATION	1.6634583227820455E-6	DEFECT
//ChangeFactoryImpl	WITHOUT_CLASSIFICATION	0.9999982745336574	WITHOUT_CLASSIFICATION	1.725466342553195E-6	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.9999998510045144	WITHOUT_CLASSIFICATION	1.4899548560704843E-7	DEFECT
// Register package validator	WITHOUT_CLASSIFICATION	0.9999997793676317	WITHOUT_CLASSIFICATION	2.206323681470119E-7	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.9999998937081113	WITHOUT_CLASSIFICATION	1.0629188876058995E-7	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.9999998481815032	WITHOUT_CLASSIFICATION	1.518184968271126E-7	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.9999921779007461	WITHOUT_CLASSIFICATION	7.822099253932902E-6	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.9999998165471937	WITHOUT_CLASSIFICATION	1.834528063299559E-7	DEFECT
// Initialize classes and features; add operations and parameters	WITHOUT_CLASSIFICATION	0.9999993621167168	WITHOUT_CLASSIFICATION	6.378832832154119E-7	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.999999913714059	WITHOUT_CLASSIFICATION	8.628594096543401E-8	DEFECT
/**   * The switch that delegates to the <code>createXXX</code> methods.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9999999314227829	WITHOUT_CLASSIFICATION	6.857721708148531E-8	DEFECT
/*   * @deprecated   */	WITHOUT_CLASSIFICATION	0.9999999728570622	WITHOUT_CLASSIFICATION	2.7142937707918658E-8	DEFECT
//ChangeSwitch	WITHOUT_CLASSIFICATION	0.9999984069285109	WITHOUT_CLASSIFICATION	1.5930714890937603E-6	DEFECT
//ChangeAdapterFactory	WITHOUT_CLASSIFICATION	0.9999980714618603	WITHOUT_CLASSIFICATION	1.928538139747699E-6	DEFECT
// Make sure that all the old values are cached.	WITHOUT_CLASSIFICATION	0.9999987543641884	WITHOUT_CLASSIFICATION	1.2456358115795774E-6	DEFECT
//case Notification.REMOVE:	WITHOUT_CLASSIFICATION	0.9999991820240021	WITHOUT_CLASSIFICATION	8.179759978173451E-7	DEFECT
//case Notification.REMOVE_MANY:	WITHOUT_CLASSIFICATION	0.9999991469989945	WITHOUT_CLASSIFICATION	8.530010055393586E-7	DEFECT
// Continue with no instanceClass. 	WITHOUT_CLASSIFICATION	0.9999996571672417	WITHOUT_CLASSIFICATION	3.428327582765372E-7	DEFECT
//EGenericTypeImpl	WITHOUT_CLASSIFICATION	0.999991329637339	WITHOUT_CLASSIFICATION	8.670362660905674E-6	DEFECT
//EParameterImpl	WITHOUT_CLASSIFICATION	0.99999760843188	WITHOUT_CLASSIFICATION	2.391568119927909E-6	DEFECT
// Create data types	WITHOUT_CLASSIFICATION	0.9999998388095538	WITHOUT_CLASSIFICATION	1.6119044628207778E-7	DEFECT
// Initialize data types	WITHOUT_CLASSIFICATION	0.9999997777312488	WITHOUT_CLASSIFICATION	2.2226875126977868E-7	DEFECT
//return eContainer;	WITHOUT_CLASSIFICATION	0.999999796734334	WITHOUT_CLASSIFICATION	2.032656660213089E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999996061833671	WITHOUT_CLASSIFICATION	3.938166328746333E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999375071796	WITHOUT_CLASSIFICATION	6.24928203174307E-8	DEFECT
//ETypeParameterImpl	WITHOUT_CLASSIFICATION	0.9999951972015192	WITHOUT_CLASSIFICATION	4.8027984807883475E-6	DEFECT
//EStringToStringMapEntryImpl	WITHOUT_CLASSIFICATION	0.9999966366574361	WITHOUT_CLASSIFICATION	3.363342563968086E-6	DEFECT
// Don't really unset it.	WITHOUT_CLASSIFICATION	0.9999879866813469	WITHOUT_CLASSIFICATION	1.2013318653018367E-5	DEFECT
// create containment one.	WITHOUT_CLASSIFICATION	0.9999998811904708	WITHOUT_CLASSIFICATION	1.1880952917651354E-7	DEFECT
//getList(entry).clear();	WITHOUT_CLASSIFICATION	0.9999993791068273	WITHOUT_CLASSIFICATION	6.208931726778301E-7	DEFECT
//ETypedElementImpl	WITHOUT_CLASSIFICATION	0.9999824645334338	WITHOUT_CLASSIFICATION	1.7535466566262768E-5	DEFECT
// Keep trying until all else has failed.	WITHOUT_CLASSIFICATION	0.9999973063321805	WITHOUT_CLASSIFICATION	2.693667819602583E-6	DEFECT
// Continue to try a different approach.	WITHOUT_CLASSIFICATION	0.999910645194554	WITHOUT_CLASSIFICATION	8.935480544598135E-5	DEFECT
// Continue to try a different approach.	WITHOUT_CLASSIFICATION	0.999910645194554	WITHOUT_CLASSIFICATION	8.935480544598135E-5	DEFECT
// Keep trying until all else false.	WITHOUT_CLASSIFICATION	0.9999997835405233	WITHOUT_CLASSIFICATION	2.1645947658832812E-7	DEFECT
//EcoreFactoryImpl	WITHOUT_CLASSIFICATION	0.9999885576622978	WITHOUT_CLASSIFICATION	1.1442337702139154E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999996061833671	WITHOUT_CLASSIFICATION	3.938166328746333E-7	DEFECT
/* backward compatibility with old generated overrides */	WITHOUT_CLASSIFICATION	0.9999996778777493	WITHOUT_CLASSIFICATION	3.2212225073162093E-7	DEFECT
/* backward compatibility with old generated overrides */	WITHOUT_CLASSIFICATION	0.9999996778777493	WITHOUT_CLASSIFICATION	3.2212225073162093E-7	DEFECT
// Subclasses MUST override this function	WITHOUT_CLASSIFICATION	0.9999999031464577	WITHOUT_CLASSIFICATION	9.685354229394244E-8	DEFECT
// return eVirtualIndexBits[offset];	WITHOUT_CLASSIFICATION	0.9999984602840519	WITHOUT_CLASSIFICATION	1.539715948011242E-6	DEFECT
// eVirtualIndexBits[offset] = newIndexBits;	WITHOUT_CLASSIFICATION	0.9999993664984399	WITHOUT_CLASSIFICATION	6.335015601785164E-7	DEFECT
// Continue to compute the offset.	WITHOUT_CLASSIFICATION	0.9999999673834249	WITHOUT_CLASSIFICATION	3.2616575005541727E-8	DEFECT
// return eVirtualValues;	WITHOUT_CLASSIFICATION	0.9999999361396193	WITHOUT_CLASSIFICATION	6.386038060939729E-8	DEFECT
// eVirtualValues = newValues;	WITHOUT_CLASSIFICATION	0.9999999391014667	WITHOUT_CLASSIFICATION	6.089853339754759E-8	DEFECT
// return minimumCapacity;	WITHOUT_CLASSIFICATION	0.999999953860056	WITHOUT_CLASSIFICATION	4.61399440486228E-8	DEFECT
// Ignore exceptions.	WITHOUT_CLASSIFICATION	0.9999999532562515	WITHOUT_CLASSIFICATION	4.674374848209274E-8	DEFECT
// Continue and return null.	WITHOUT_CLASSIFICATION	0.9999992918037568	WITHOUT_CLASSIFICATION	7.081962432202525E-7	DEFECT
// Ensure that cached ePackage is forgotten.	WITHOUT_CLASSIFICATION	0.9999997647200054	WITHOUT_CLASSIFICATION	2.3527999469209596E-7	DEFECT
//EAnnotationImpl	WITHOUT_CLASSIFICATION	0.9999215628724153	WITHOUT_CLASSIFICATION	7.84371275846131E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999996061833671	WITHOUT_CLASSIFICATION	3.938166328746333E-7	DEFECT
// Don't really unset it.	WITHOUT_CLASSIFICATION	0.9999879866813469	WITHOUT_CLASSIFICATION	1.2013318653018367E-5	DEFECT
// Force this to be initialized as well.	WITHOUT_CLASSIFICATION	0.9999999919984931	WITHOUT_CLASSIFICATION	8.00150681951086E-9	DEFECT
//)	WITHOUT_CLASSIFICATION	0.999937144375453	WITHOUT_CLASSIFICATION	6.285562454695064E-5	DEFECT
// (	WITHOUT_CLASSIFICATION	0.9999946234996067	WITHOUT_CLASSIFICATION	5.376500393234812E-6	DEFECT
// We can also optimize single valued reverse.  //	WITHOUT_CLASSIFICATION	0.999999967328521	WITHOUT_CLASSIFICATION	3.267147898792375E-8	DEFECT
// all implementations of Java 1.5 should support AES	WITHOUT_CLASSIFICATION	0.9997323807029018	WITHOUT_CLASSIFICATION	2.6761929709815166E-4	DEFECT
// generate the key	WITHOUT_CLASSIFICATION	0.9999997256718789	WITHOUT_CLASSIFICATION	2.7432812104841435E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999375071796	WITHOUT_CLASSIFICATION	6.24928203174307E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999375071796	WITHOUT_CLASSIFICATION	6.24928203174307E-8	DEFECT
// Continue and try to close.	WITHOUT_CLASSIFICATION	0.9999999639294532	WITHOUT_CLASSIFICATION	3.607054671459983E-8	DEFECT
// Fill 3078 of value (byte) 33 // Fill 156 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 90 of value (byte) -19 // Fill 6 of value (byte) 33 // Fill 22 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9997345358251395	WITHOUT_CLASSIFICATION	2.6546417486044945E-4	DEFECT
// Fill 3078 of value (byte) 33 // Fill 156 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 90 of value (byte) -19 // Fill 6 of value (byte) 33 // Fill 22 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9997345358251395	WITHOUT_CLASSIFICATION	2.6546417486044945E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999989374002828	WITHOUT_CLASSIFICATION	1.0625997173036432E-6	DEFECT
// ...	WITHOUT_CLASSIFICATION	0.999927216080713	WITHOUT_CLASSIFICATION	7.278391928698707E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999375071796	WITHOUT_CLASSIFICATION	6.24928203174307E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999375071796	WITHOUT_CLASSIFICATION	6.24928203174307E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999375071796	WITHOUT_CLASSIFICATION	6.24928203174307E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999375071796	WITHOUT_CLASSIFICATION	6.24928203174307E-8	DEFECT
// Ignore exceptions.	WITHOUT_CLASSIFICATION	0.9999999532562515	WITHOUT_CLASSIFICATION	4.674374848209274E-8	DEFECT
// Ignore exceptions.	WITHOUT_CLASSIFICATION	0.9999999532562515	WITHOUT_CLASSIFICATION	4.674374848209274E-8	DEFECT
// encrypt the input	WITHOUT_CLASSIFICATION	0.9999992081938963	WITHOUT_CLASSIFICATION	7.918061036025807E-7	DEFECT
// this is the key we will use to encrypt the data 	WITHOUT_CLASSIFICATION	0.9998915156799395	WITHOUT_CLASSIFICATION	1.0848432006048132E-4	DEFECT
// create the IV for the password generation algorithm	WITHOUT_CLASSIFICATION	0.9999967867335096	WITHOUT_CLASSIFICATION	3.2132664903862394E-6	DEFECT
// generate the IV for encryption	WITHOUT_CLASSIFICATION	0.9999971924275821	WITHOUT_CLASSIFICATION	2.8075724179581503E-6	DEFECT
// turn the password into an AES key	WITHOUT_CLASSIFICATION	0.9999989439044381	WITHOUT_CLASSIFICATION	1.0560955619157462E-6	DEFECT
// now create the encryption cipher 	WITHOUT_CLASSIFICATION	0.9999971651296263	WITHOUT_CLASSIFICATION	2.834870373541062E-6	DEFECT
// Read the header of the encrypted file.	WITHOUT_CLASSIFICATION	0.9999840433553538	WITHOUT_CLASSIFICATION	1.5956644646135688E-5	DEFECT
// Decrypt the key bytes	WITHOUT_CLASSIFICATION	0.9999999448472335	WITHOUT_CLASSIFICATION	5.515276638302206E-8	DEFECT
// Create the key from the key bytes	WITHOUT_CLASSIFICATION	0.9999999283174985	WITHOUT_CLASSIFICATION	7.168250146043545E-8	DEFECT
// If we haven't yet generated a key, just use this one	WITHOUT_CLASSIFICATION	0.999999888128683	WITHOUT_CLASSIFICATION	1.1187131709791613E-7	DEFECT
// now create the decrypt cipher	WITHOUT_CLASSIFICATION	0.999999937537183	WITHOUT_CLASSIFICATION	6.246281702521839E-8	DEFECT
// Ignore any exceptions and assume the class isn't available.	WITHOUT_CLASSIFICATION	0.9999827183483915	WITHOUT_CLASSIFICATION	1.7281651608597723E-5	DEFECT
// Ignore any exceptions and assume the class isn't available.	WITHOUT_CLASSIFICATION	0.9999827183483915	WITHOUT_CLASSIFICATION	1.7281651608597723E-5	DEFECT
// No methods added.	WITHOUT_CLASSIFICATION	0.9999999359549371	WITHOUT_CLASSIFICATION	6.404506289675503E-8	DEFECT
// ECLIPSE-DEPEND-BEGIN	WITHOUT_CLASSIFICATION	0.9999978820305166	WITHOUT_CLASSIFICATION	2.117969483432136E-6	DEFECT
// ECLIPSE-DEPEND-BEGIN	WITHOUT_CLASSIFICATION	0.9999978820305166	WITHOUT_CLASSIFICATION	2.117969483432136E-6	DEFECT
// ECLIPSE-DEPEND-END	WITHOUT_CLASSIFICATION	0.9999986654911799	WITHOUT_CLASSIFICATION	1.3345088201960095E-6	DEFECT
// ECLIPSE-DEPEND-END	WITHOUT_CLASSIFICATION	0.9999986654911799	WITHOUT_CLASSIFICATION	1.3345088201960095E-6	DEFECT
// We can't update any properties via just a URL connection.	WITHOUT_CLASSIFICATION	0.9999956920653102	WITHOUT_CLASSIFICATION	4.307934689839769E-6	DEFECT
// Ignore the bound if the value is too big.	WITHOUT_CLASSIFICATION	0.9999999880664181	WITHOUT_CLASSIFICATION	1.1933581921859868E-8	DEFECT
// Ignore the bound if the value is too big.	WITHOUT_CLASSIFICATION	0.9999999880664181	WITHOUT_CLASSIFICATION	1.1933581921859868E-8	DEFECT
// Ignore features from the first super type. //	WITHOUT_CLASSIFICATION	0.9999998850997526	WITHOUT_CLASSIFICATION	1.1490024749254832E-7	DEFECT
// Match against every other operation but this one. //	WITHOUT_CLASSIFICATION	0.9999997016408727	WITHOUT_CLASSIFICATION	2.983591272691757E-7	DEFECT
/**   * Calls <code>validateXXX</code> for the corresponding classifier of the model.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9999944076877221	WITHOUT_CLASSIFICATION	5.592312277941683E-6	DEFECT
// The CipherOutputStream shoudln't close the underlying stream //	WITHOUT_CLASSIFICATION	0.9999982914870128	WITHOUT_CLASSIFICATION	1.708512987128515E-6	DEFECT
// List subList(EStructuralFeature feature, int from, int to); // EList list(EStructuralFeature feature);	WITHOUT_CLASSIFICATION	0.9999999166762481	WITHOUT_CLASSIFICATION	8.332375191478199E-8	DEFECT
// Ensure that the class loader for this class will be used downstream. //	WITHOUT_CLASSIFICATION	0.9999955190799462	WITHOUT_CLASSIFICATION	4.480920053772994E-6	DEFECT
// We do not want to diagnose any errors that have already been diagnosed by a super type. // Although we ignore all the first super's features, there may be mixin classes that still would result in duplicates. //	WITHOUT_CLASSIFICATION	0.9997916323483348	WITHOUT_CLASSIFICATION	2.0836765166514076E-4	DEFECT
//EcoreSwitch	WITHOUT_CLASSIFICATION	0.9999849019643172	WITHOUT_CLASSIFICATION	1.5098035682760866E-5	DEFECT
// A document root can have multiple ID attributes because there can be multiple global element or attribute declarations of type ID  // and these will be the ID in the complex types that reference them, // i.e., they aren't really the ID of the document root. //	WITHOUT_CLASSIFICATION	0.9999997743936175	WITHOUT_CLASSIFICATION	2.2560638254471675E-7	DEFECT
// For performance, skip matching all the features of the first super type. //	WITHOUT_CLASSIFICATION	0.9999998434638914	WITHOUT_CLASSIFICATION	1.565361086010163E-7	DEFECT
// Don't bother complaining about things with no name, // since there are constraints for that problem. //	WITHOUT_CLASSIFICATION	0.9999992039296141	WITHOUT_CLASSIFICATION	7.960703859403828E-7	DEFECT
// Drop the _ separators and normalize the case. //	WITHOUT_CLASSIFICATION	0.9999999937897838	WITHOUT_CLASSIFICATION	6.21021624915419E-9	DEFECT
// Fill 31 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 53 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999068452371891	WITHOUT_CLASSIFICATION	9.315476281095279E-5	DEFECT
// Match against every other operation but this one. //	WITHOUT_CLASSIFICATION	0.9999997016408727	WITHOUT_CLASSIFICATION	2.983591272691757E-7	DEFECT
// Produce different levels of diagnostic depending whether the names are exactly the same or only matching. //	WITHOUT_CLASSIFICATION	0.9999996436272419	WITHOUT_CLASSIFICATION	3.563727580470833E-7	DEFECT
// There is no match if the types are different // and they don't each specify the same non-null instance class name. //	WITHOUT_CLASSIFICATION	0.9999999763690328	WITHOUT_CLASSIFICATION	2.3630967215561336E-8	DEFECT
// Iterate over all the operations but skip all the operations in the first super. //	WITHOUT_CLASSIFICATION	0.9999999534039761	WITHOUT_CLASSIFICATION	4.659602401998356E-8	DEFECT
// We do not want to diagnose any error that have already been diagnosed by a super type. //	WITHOUT_CLASSIFICATION	0.9999795434256941	WITHOUT_CLASSIFICATION	2.0456574305829257E-5	DEFECT
// Maintain a list of classifiers for looking up conflicts. //	WITHOUT_CLASSIFICATION	0.9999999954216641	WITHOUT_CLASSIFICATION	4.578335912876532E-9	DEFECT
// Look for duplicates among the generic super types. //	WITHOUT_CLASSIFICATION	0.9999967758258262	WITHOUT_CLASSIFICATION	3.2241741738571573E-6	DEFECT
// Ignore it if it isn't a class. Not being a class is diagnosed for the generic type itself. //	WITHOUT_CLASSIFICATION	0.999998057291481	WITHOUT_CLASSIFICATION	1.942708518980151E-6	DEFECT
// The string must contain inappropriate whitespace, so find the index for the first difference. //	WITHOUT_CLASSIFICATION	0.9999999957760036	WITHOUT_CLASSIFICATION	4.22399635140121E-9	DEFECT
// Don't complain about the literals if they are the same as the names and the names collide. //	WITHOUT_CLASSIFICATION	0.9999998620844968	WITHOUT_CLASSIFICATION	1.379155033309624E-7	DEFECT
// Can't have both a classifier and a type parameter. //	WITHOUT_CLASSIFICATION	0.9999956367985557	WITHOUT_CLASSIFICATION	4.363201444171844E-6	DEFECT
// The referencing generic type must be contained to be in scope //	WITHOUT_CLASSIFICATION	0.9999998818130896	WITHOUT_CLASSIFICATION	1.1818691027058984E-7	DEFECT
// The type parameter must be in scope and must not be a forward reference. //	WITHOUT_CLASSIFICATION	0.9999898156509406	WITHOUT_CLASSIFICATION	1.0184349059458077E-5	DEFECT
// When used as a generic super type, there must be a classifier that refers to a class. //	WITHOUT_CLASSIFICATION	0.999999935218734	WITHOUT_CLASSIFICATION	6.478126593009219E-8	DEFECT
// The type arguments of a generic super type must not be a wildcard. //	WITHOUT_CLASSIFICATION	0.9999814532016836	WITHOUT_CLASSIFICATION	1.8546798316336646E-5	DEFECT
// Wildcards are only allowed in type arguments. //	WITHOUT_CLASSIFICATION	0.9999993974401072	WITHOUT_CLASSIFICATION	6.025598928154918E-7	DEFECT
// The classifier of an attribute's generic type must be a data type. //	WITHOUT_CLASSIFICATION	0.9999997284024619	WITHOUT_CLASSIFICATION	2.7159753819527454E-7	DEFECT
// Can't have both an upper and lower bound. //	WITHOUT_CLASSIFICATION	0.999995170642977	WITHOUT_CLASSIFICATION	4.829357022984696E-6	DEFECT
// Can't have a classifier or a type parameter as well as bounds. //	WITHOUT_CLASSIFICATION	0.9999994778965671	WITHOUT_CLASSIFICATION	5.221034330298022E-7	DEFECT
// Can only have bounds when used as a type argument. //	WITHOUT_CLASSIFICATION	0.9999998045382357	WITHOUT_CLASSIFICATION	1.9546176427537205E-7	DEFECT
// Can't have type arguments unless there is a classifier //	WITHOUT_CLASSIFICATION	0.9999995474291425	WITHOUT_CLASSIFICATION	4.5257085738310937E-7	DEFECT
// Have no arguments when they are allowed is only a warning. //	WITHOUT_CLASSIFICATION	0.9999999272370982	WITHOUT_CLASSIFICATION	7.276290188854009E-8	DEFECT
// Incorrect number of type arguments. //	WITHOUT_CLASSIFICATION	0.999970328630864	WITHOUT_CLASSIFICATION	2.967136913594222E-5	DEFECT
// Check if the bound specifies a classifier... //	WITHOUT_CLASSIFICATION	0.9999997278768541	WITHOUT_CLASSIFICATION	2.721231458936074E-7	DEFECT
// If the type also specifies a classifier... //	WITHOUT_CLASSIFICATION	0.9999828816814408	WITHOUT_CLASSIFICATION	1.711831855918013E-5	DEFECT
// If the are the same then it is bounded properly... //	WITHOUT_CLASSIFICATION	0.9802641021341152	WITHOUT_CLASSIFICATION	0.01973589786588481	DEFECT
// We test their relationship either via them both being classes... //	WITHOUT_CLASSIFICATION	0.9999999558148823	WITHOUT_CLASSIFICATION	4.4185117617679026E-8	DEFECT
// namespace context	WITHOUT_CLASSIFICATION	0.9999990966991242	WITHOUT_CLASSIFICATION	9.033008758422475E-7	DEFECT
// Determine if there is a bounding generic super type. //	WITHOUT_CLASSIFICATION	0.9999987866031145	WITHOUT_CLASSIFICATION	1.2133968855680645E-6	DEFECT
// Set up the substitutions of any type parameters this class has with respect to the type arguments for them. //	WITHOUT_CLASSIFICATION	0.9999550540732142	WITHOUT_CLASSIFICATION	4.4945926785879734E-5	DEFECT
// Test if there are type parameters that might require substitution. //	WITHOUT_CLASSIFICATION	0.998710203988332	WITHOUT_CLASSIFICATION	0.0012897960116679621	DEFECT
// If none of the generic super types are bounded, then we've failed. //	WITHOUT_CLASSIFICATION	0.9999952045832349	WITHOUT_CLASSIFICATION	4.795416765161687E-6	DEFECT
// If neither approach finds a contradiction, we must assume they are okay and then check all the arguments. //	WITHOUT_CLASSIFICATION	0.9999999349259248	WITHOUT_CLASSIFICATION	6.507407526768973E-8	DEFECT
// If there is a type parameter, one of its bounds must be bounded by the bound. //	WITHOUT_CLASSIFICATION	0.999999692283254	WITHOUT_CLASSIFICATION	3.07716745893259E-7	DEFECT
// If there is a upper bound, the bound must bound it. //	WITHOUT_CLASSIFICATION	0.9999997892494842	WITHOUT_CLASSIFICATION	2.1075051594357053E-7	DEFECT
// Failing all those cases, there must be an lower bound that bounds it. //	WITHOUT_CLASSIFICATION	0.9999819027831526	WITHOUT_CLASSIFICATION	1.8097216847441512E-5	DEFECT
// If the generic type is a wildcard, it can't be bounded by another wildcard. //	WITHOUT_CLASSIFICATION	0.9999563134069555	WITHOUT_CLASSIFICATION	4.3686593044607564E-5	DEFECT
// If there is an lower bound, the type argument must bound it. //	WITHOUT_CLASSIFICATION	0.9999996117283946	WITHOUT_CLASSIFICATION	3.8827160541805837E-7	DEFECT
// If the type also specifies a classifier... //	WITHOUT_CLASSIFICATION	0.9999828816814408	WITHOUT_CLASSIFICATION	1.711831855918013E-5	DEFECT
// If they are the same classifier, they are of course equal. //	WITHOUT_CLASSIFICATION	0.9999999502885317	WITHOUT_CLASSIFICATION	4.971146817892208E-8	DEFECT
// Consider the instance type names they wrap  // to see if they are non-null and equal. //	WITHOUT_CLASSIFICATION	0.9999999902783502	WITHOUT_CLASSIFICATION	9.721649720892599E-9	DEFECT
// Consider the instance type names they wrap  // to see if they are non-null and equal. //	WITHOUT_CLASSIFICATION	0.9999999902783502	WITHOUT_CLASSIFICATION	9.721649720892599E-9	DEFECT
// I.e., the classifiers are considered equal if they wrap the same non-null type. //	WITHOUT_CLASSIFICATION	0.9999999623355281	WITHOUT_CLASSIFICATION	3.766447183994417E-8	DEFECT
// I.e., the classifiers are considered equal if they wrap the same non-null type. //	WITHOUT_CLASSIFICATION	0.9999999623355281	WITHOUT_CLASSIFICATION	3.766447183994417E-8	DEFECT
// If the generic type is a different wildcard, it doesn't match. //	WITHOUT_CLASSIFICATION	0.9995474815344855	WITHOUT_CLASSIFICATION	4.5251846551440936E-4	DEFECT
// Reverse the test. //	WITHOUT_CLASSIFICATION	0.9999999380356953	WITHOUT_CLASSIFICATION	6.196430461375788E-8	DEFECT
// If they are the same instance they are equal. //	WITHOUT_CLASSIFICATION	0.9999998262809491	WITHOUT_CLASSIFICATION	1.7371905094872425E-7	DEFECT
// If one is null (but the other is not) then they are not equal. //	WITHOUT_CLASSIFICATION	0.9999993174050686	WITHOUT_CLASSIFICATION	6.825949313873261E-7	DEFECT
// Consider the classifiers in a special way  // to take into account the fact they they often acts as wrappers for instance type names // and that two classifiers that wrap the same instance type name should be considered equal. //	WITHOUT_CLASSIFICATION	0.999993989011106	WITHOUT_CLASSIFICATION	6.010988893987588E-6	DEFECT
// If they both aren't null... //	WITHOUT_CLASSIFICATION	0.9999113915426607	WITHOUT_CLASSIFICATION	8.860845733923925E-5	DEFECT
// If one is null (but the other is not) then they can't be equal. //	WITHOUT_CLASSIFICATION	0.9999966036992894	WITHOUT_CLASSIFICATION	3.3963007106470246E-6	DEFECT
// The arguments, type parameters, lower bounds and upper bounds must be equal type arguments. //	WITHOUT_CLASSIFICATION	0.999999690381149	WITHOUT_CLASSIFICATION	3.0961885092597827E-7	DEFECT
// Ignore leading whitespace	WITHOUT_CLASSIFICATION	0.9999999933934601	WITHOUT_CLASSIFICATION	6.606539812704519E-9	DEFECT
// Ignore trailing whitespace	WITHOUT_CLASSIFICATION	0.999999997093892	WITHOUT_CLASSIFICATION	2.9061080187986176E-9	DEFECT
//EcoreValidator	WITHOUT_CLASSIFICATION	0.999991332962128	WITHOUT_CLASSIFICATION	8.667037871895715E-6	DEFECT
//  Public	WITHOUT_CLASSIFICATION	0.9999968571314193	WITHOUT_CLASSIFICATION	3.142868580668127E-6	DEFECT
// --entryCursor;	WITHOUT_CLASSIFICATION	0.999999709412265	WITHOUT_CLASSIFICATION	2.905877349208946E-7	DEFECT
//lastCursor = -1; //prepared = 0;	WITHOUT_CLASSIFICATION	0.9999996725693734	WITHOUT_CLASSIFICATION	3.274306266495614E-7	DEFECT
/*    public List subList(int from, int to)    {      return featureMap.subList(getEStructuralFeature(), from, to);    }*/	WITHOUT_CLASSIFICATION	0.999999799943283	WITHOUT_CLASSIFICATION	2.0005671703299567E-7	DEFECT
// Don't cache this one as it will cause leaks because to dynamic demand created document roots and demand created EClasses. //	WITHOUT_CLASSIFICATION	0.9999921228891397	WITHOUT_CLASSIFICATION	7.877110860196973E-6	DEFECT
// For the extended meta data to be created. //	WITHOUT_CLASSIFICATION	0.9999992240721571	WITHOUT_CLASSIFICATION	7.759278429609672E-7	DEFECT
// We can also optimize single valued reverse.  //	WITHOUT_CLASSIFICATION	0.999999967328521	WITHOUT_CLASSIFICATION	3.267147898792375E-8	DEFECT
// This forces the feature ids to be assigned. //	WITHOUT_CLASSIFICATION	0.9999993048142676	WITHOUT_CLASSIFICATION	6.951857323635424E-7	DEFECT
// We can use == for EObjects and EnumLiterals. //	WITHOUT_CLASSIFICATION	0.9999999098399165	WITHOUT_CLASSIFICATION	9.016008351185208E-8	DEFECT
/**   * The switch that delegates to the <code>createXXX</code> methods.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9999999314227829	WITHOUT_CLASSIFICATION	6.857721708148531E-8	DEFECT
// We can use == for EObjects and EnumLiterals. //	WITHOUT_CLASSIFICATION	0.9999999098399165	WITHOUT_CLASSIFICATION	9.016008351185208E-8	DEFECT
// This should be the same as the logic in ResourceImpl.getEObject(String). //	WITHOUT_CLASSIFICATION	0.9999757523449468	WITHOUT_CLASSIFICATION	2.424765505315007E-5	DEFECT
//EcoreAdapterFactory	WITHOUT_CLASSIFICATION	0.9999871363087818	WITHOUT_CLASSIFICATION	1.2863691218299832E-5	DEFECT
// We need to be careful that the proxy may be resolved while we are attaching this adapter. // We need to avoid attaching the adapter during the resolve  // and also attaching it again as we walk the eContents() later. // Checking here avoids having to check during addAdapter. //	WITHOUT_CLASSIFICATION	0.999806320716115	WITHOUT_CLASSIFICATION	1.9367928388511218E-4	DEFECT
/*  public List subList(EStructuralFeature feature, int from, int to)  {    return null;  }*/	WITHOUT_CLASSIFICATION	0.9999999583835658	WITHOUT_CLASSIFICATION	4.161643425579331E-8	DEFECT
// Validate now since the call we make after will skip validating.	WITHOUT_CLASSIFICATION	0.9999993812981315	WITHOUT_CLASSIFICATION	6.187018686015394E-7	DEFECT
// Index should be -1.	WITHOUT_CLASSIFICATION	0.9998954205036379	WITHOUT_CLASSIFICATION	1.0457949636208627E-4	DEFECT
// Index should be -1.	WITHOUT_CLASSIFICATION	0.9998954205036379	WITHOUT_CLASSIFICATION	1.0457949636208627E-4	DEFECT
// This may be called directly on an EObject for the case of a containment. //	WITHOUT_CLASSIFICATION	0.999998272555093	WITHOUT_CLASSIFICATION	1.7274449069573256E-6	DEFECT
// demandDocumentRoot(ePackage);	WITHOUT_CLASSIFICATION	0.9999788842857072	WITHOUT_CLASSIFICATION	2.1115714292708908E-5	DEFECT
// For demand created created packages we allow the list of classifiers to grow  // so this should handle those additional instances. //	WITHOUT_CLASSIFICATION	0.9999999936568047	WITHOUT_CLASSIFICATION	6.343195196793559E-9	DEFECT
// No new methods.	WITHOUT_CLASSIFICATION	0.9999999468539855	WITHOUT_CLASSIFICATION	5.314601441502931E-8	DEFECT
// Undo the preparation for previous and continue.	WITHOUT_CLASSIFICATION	0.999999946945708	WITHOUT_CLASSIFICATION	5.3054291891195826E-8	DEFECT
// Undo the preparation for next and continue.	WITHOUT_CLASSIFICATION	0.9999956177463056	WITHOUT_CLASSIFICATION	4.382253694366402E-6	DEFECT
// Validate now since the call we make after will skip validating.	WITHOUT_CLASSIFICATION	0.9999993812981315	WITHOUT_CLASSIFICATION	6.187018686015394E-7	DEFECT
// Index should be -1.	WITHOUT_CLASSIFICATION	0.9998954205036379	WITHOUT_CLASSIFICATION	1.0457949636208627E-4	DEFECT
// Index should be -1.	WITHOUT_CLASSIFICATION	0.9998954205036379	WITHOUT_CLASSIFICATION	1.0457949636208627E-4	DEFECT
// This may be called directly on an EObject for the case of a containment. //	WITHOUT_CLASSIFICATION	0.999998272555093	WITHOUT_CLASSIFICATION	1.7274449069573256E-6	DEFECT
/*  List theList = new java.util.ArrayList();  protected List delegateList()  {    return theList;  }*/	WITHOUT_CLASSIFICATION	0.9999999921521168	WITHOUT_CLASSIFICATION	7.84788318394185E-9	DEFECT
//   // Suppress default constructor for noninstantiability. //   private EcoreUtil() //   { //   }	WITHOUT_CLASSIFICATION	0.9999999033981707	WITHOUT_CLASSIFICATION	9.660182921401931E-8	DEFECT
// Failure to resolve is ignored.	WITHOUT_CLASSIFICATION	0.9999993051369833	WITHOUT_CLASSIFICATION	6.948630168011995E-7	DEFECT
// The loop resolves the cross references by visiting them.	WITHOUT_CLASSIFICATION	0.9999962223266323	WITHOUT_CLASSIFICATION	3.777673367730277E-6	DEFECT
// We don't create an iterator stack until the root mapping itself has been returned by next once. // After that the stack should be non-empty and the top iterator should yield true for hasNext. //	WITHOUT_CLASSIFICATION	0.9999923651943586	WITHOUT_CLASSIFICATION	7.634805641362726E-6	DEFECT
// If we are on the special resource set iterator, and there isn't really a next object at this point... //	WITHOUT_CLASSIFICATION	0.9997212851705545	WITHOUT_CLASSIFICATION	2.7871482944556296E-4	DEFECT
// Skip the dummy null object and test again. //	WITHOUT_CLASSIFICATION	0.9999999106289803	WITHOUT_CLASSIFICATION	8.9371019592309E-8	DEFECT
// {	WITHOUT_CLASSIFICATION	0.99998747667699	WITHOUT_CLASSIFICATION	1.2523323009927967E-5	DEFECT
// {	WITHOUT_CLASSIFICATION	0.99998747667699	WITHOUT_CLASSIFICATION	1.2523323009927967E-5	DEFECT
// If the first object is null, the second object must be null. //	WITHOUT_CLASSIFICATION	0.9999957604181617	WITHOUT_CLASSIFICATION	4.239581838238958E-6	DEFECT
// We know the first object isn't null, so if the second one is, it can't be equal. //	WITHOUT_CLASSIFICATION	0.9999998424593755	WITHOUT_CLASSIFICATION	1.575406245375711E-7	DEFECT
// Then eObject2 must be that previous match. //	WITHOUT_CLASSIFICATION	0.9999993561345292	WITHOUT_CLASSIFICATION	6.438654709216646E-7	DEFECT
// If eObject2 has been compared already... //	WITHOUT_CLASSIFICATION	0.9949516930831773	WITHOUT_CLASSIFICATION	0.005048306916822683	DEFECT
// Then eObject1 must be that match. //	WITHOUT_CLASSIFICATION	0.9999995541814698	WITHOUT_CLASSIFICATION	4.458185301374625E-7	DEFECT
// Neither eObject1 nor eObject2 have been compared yet.	WITHOUT_CLASSIFICATION	0.9999961796889245	WITHOUT_CLASSIFICATION	3.820311075515211E-6	DEFECT
// If eObject1 and eObject2 are the same instance... //	WITHOUT_CLASSIFICATION	0.9998629618879482	WITHOUT_CLASSIFICATION	1.3703811205181368E-4	DEFECT
// Match them and return true. //	WITHOUT_CLASSIFICATION	0.9999997811973135	WITHOUT_CLASSIFICATION	2.188026864007496E-7	DEFECT
// If they don't have the same class, they can't be equal. //	WITHOUT_CLASSIFICATION	0.9996994266712286	WITHOUT_CLASSIFICATION	3.005733287714406E-4	DEFECT
// Assume from now on that they match. //	WITHOUT_CLASSIFICATION	0.9999804592750183	WITHOUT_CLASSIFICATION	1.954072498164998E-5	DEFECT
// Check all the values. //	WITHOUT_CLASSIFICATION	0.999999926337158	WITHOUT_CLASSIFICATION	7.366284199806414E-8	DEFECT
// If the first value is null, the second value must be null. //	WITHOUT_CLASSIFICATION	0.999995304848331	WITHOUT_CLASSIFICATION	4.695151669066999E-6	DEFECT
// Since the first value isn't null, if the second one is, they aren't equal. //	WITHOUT_CLASSIFICATION	0.9999997843409474	WITHOUT_CLASSIFICATION	2.1565905270328377E-7	DEFECT
// If this is a feature map... //	WITHOUT_CLASSIFICATION	0.9968779584650164	WITHOUT_CLASSIFICATION	0.0031220415349837256	DEFECT
// The feature maps must be equal. //	WITHOUT_CLASSIFICATION	0.999999746418283	WITHOUT_CLASSIFICATION	2.535817169741198E-7	DEFECT
// The values must be Java equal. //	WITHOUT_CLASSIFICATION	0.9999996427580214	WITHOUT_CLASSIFICATION	3.5724197848096555E-7	DEFECT
// If they don't have the same size, the feature maps aren't equal. //	WITHOUT_CLASSIFICATION	0.9997771522934362	WITHOUT_CLASSIFICATION	2.228477065636907E-4	DEFECT
// Compare entries in order. //	WITHOUT_CLASSIFICATION	0.9999974108647414	WITHOUT_CLASSIFICATION	2.5891352586114923E-6	DEFECT
// There is no reason they aren't equals. //	WITHOUT_CLASSIFICATION	0.9999976165284716	WITHOUT_CLASSIFICATION	2.383471528317426E-6	DEFECT
// If the referenced EObjects aren't equal, the feature maps aren't equal. //	WITHOUT_CLASSIFICATION	0.9999993581232214	WITHOUT_CLASSIFICATION	6.418767785729798E-7	DEFECT
// If the values aren't Java equal, the feature maps aren't equal. //	WITHOUT_CLASSIFICATION	0.9999899995036905	WITHOUT_CLASSIFICATION	1.0000496309434708E-5	DEFECT
// EqualityHelper	WITHOUT_CLASSIFICATION	0.9999998791337986	WITHOUT_CLASSIFICATION	1.2086620131913425E-7	DEFECT
// If it's a proxy, use that. //	WITHOUT_CLASSIFICATION	0.9999970935715137	WITHOUT_CLASSIFICATION	2.9064284863811026E-6	DEFECT
// If it is in a resource, form the URI relative to that resource. //	WITHOUT_CLASSIFICATION	0.9999966749503062	WITHOUT_CLASSIFICATION	3.325049693912619E-6	DEFECT
// Keys that will be used to record visibility for the accessors. //	WITHOUT_CLASSIFICATION	0.9999990394079736	WITHOUT_CLASSIFICATION	9.6059202637443E-7	DEFECT
// Value used to suppress visibility. //	WITHOUT_CLASSIFICATION	0.9999990834866403	WITHOUT_CLASSIFICATION	9.165133596575623E-7	DEFECT
// Handle the last byte at the end. //	WITHOUT_CLASSIFICATION	0.9999996748574201	WITHOUT_CLASSIFICATION	3.251425798454856E-7	DEFECT
// Generate a 48 bit node identifier;  // This is an alternative to the IEEE 802 host address, which is not available in Java. //	WITHOUT_CLASSIFICATION	0.9999983314895715	WITHOUT_CLASSIFICATION	1.6685104284677654E-6	DEFECT
// Set the most significant bit of the first octet to 1 so as to distinguish it from IEEE node addresses //	WITHOUT_CLASSIFICATION	0.9999999960230072	WITHOUT_CLASSIFICATION	3.97699282567443E-9	DEFECT
// The node identifier is already in network byte order,  // so there is no need to do any byte order reversing. //	WITHOUT_CLASSIFICATION	0.9999999651594031	WITHOUT_CLASSIFICATION	3.484059690569789E-8	DEFECT
// clockseq_hi	WITHOUT_CLASSIFICATION	0.9999991000331143	WITHOUT_CLASSIFICATION	8.999668856868544E-7	DEFECT
// clockseq_low	WITHOUT_CLASSIFICATION	0.9999980686614672	WITHOUT_CLASSIFICATION	1.9313385327807506E-6	DEFECT
// The system clock has been rewound so the clock sequence must be incremented  // to ensure that a duplicate UUID is not generated. //	WITHOUT_CLASSIFICATION	0.9999980452176197	WITHOUT_CLASSIFICATION	1.954782380357966E-6	DEFECT
// Wait so that the clock can catch up and the time adjustment won't overflow.	WITHOUT_CLASSIFICATION	0.9999997637628196	WITHOUT_CLASSIFICATION	2.3623718028398203E-7	DEFECT
// We just woke up.	WITHOUT_CLASSIFICATION	0.9999985834183399	WITHOUT_CLASSIFICATION	1.4165816599793712E-6	DEFECT
// We just woke up.	WITHOUT_CLASSIFICATION	0.9999985834183399	WITHOUT_CLASSIFICATION	1.4165816599793712E-6	DEFECT
// Place the time into the byte array in network byte order. //	WITHOUT_CLASSIFICATION	0.999997577987945	WITHOUT_CLASSIFICATION	2.4220120549699804E-6	DEFECT
// time_low //	WITHOUT_CLASSIFICATION	0.9999975207070211	WITHOUT_CLASSIFICATION	2.479292978953348E-6	DEFECT
// time_mid //	WITHOUT_CLASSIFICATION	0.999999210734016	WITHOUT_CLASSIFICATION	7.89265983937339E-7	DEFECT
// time_hi //	WITHOUT_CLASSIFICATION	0.9999990553832456	WITHOUT_CLASSIFICATION	9.446167542412453E-7	DEFECT
// Ignore if we can't freeze.	WITHOUT_CLASSIFICATION	0.9999997182848676	WITHOUT_CLASSIFICATION	2.8171513254928597E-7	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.999999933406692	WITHOUT_CLASSIFICATION	6.659330800494975E-8	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999986414502402	WITHOUT_CLASSIFICATION	1.3585497598851668E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.DOMHelper#getValue(org.w3c.dom.Node)   */	WITHOUT_CLASSIFICATION	0.9999999838337209	WITHOUT_CLASSIFICATION	1.6166279022872692E-8	DEFECT
// fall through	WITHOUT_CLASSIFICATION	0.9999713716323626	WITHOUT_CLASSIFICATION	2.8628367637442303E-5	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999989374002828	WITHOUT_CLASSIFICATION	1.0625997173036432E-6	DEFECT
// Fill 3 of value (byte) 33 // Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999667126489626	WITHOUT_CLASSIFICATION	3.328735103745549E-5	DEFECT
//fall through...	WITHOUT_CLASSIFICATION	0.9990418799372401	WITHOUT_CLASSIFICATION	9.581200627599454E-4	DEFECT
// Deresolve all the URI against the current base URI. //	WITHOUT_CLASSIFICATION	0.9999990555259949	WITHOUT_CLASSIFICATION	9.444740051182723E-7	DEFECT
// System.err.println("add = ["+newString+"]");	WITHOUT_CLASSIFICATION	0.9999999389242177	WITHOUT_CLASSIFICATION	6.107578238966597E-8	DEFECT
// If there is a temporary file... //	WITHOUT_CLASSIFICATION	0.9999402477989785	WITHOUT_CLASSIFICATION	5.9752201021476286E-5	DEFECT
// This is the cheapest and most common case. //	WITHOUT_CLASSIFICATION	0.9999360907532431	WITHOUT_CLASSIFICATION	6.39092467569416E-5	DEFECT
// The first case is the most common case. // It is slightly cheaper to call add without an index since an index will be range checked. //  	WITHOUT_CLASSIFICATION	0.9997512317592778	WITHOUT_CLASSIFICATION	2.487682407221845E-4	DEFECT
// This case can only happen if we are reset to a mark and we've got lots of XMLNS attributes to write. //	WITHOUT_CLASSIFICATION	0.9730689438820797	WITHOUT_CLASSIFICATION	0.02693105611792027	DEFECT
// If we can't create one, too bad.	WITHOUT_CLASSIFICATION	0.9999935778701304	WITHOUT_CLASSIFICATION	6.422129869561098E-6	DEFECT
// SAXXMIHandler	WITHOUT_CLASSIFICATION	0.9999984383531177	WITHOUT_CLASSIFICATION	1.5616468822662451E-6	DEFECT
// EMOF.isReadOnly = !Ecore.changeable	WITHOUT_CLASSIFICATION	0.9999993117981062	WITHOUT_CLASSIFICATION	6.882018937852692E-7	DEFECT
// Ecore.changeable = !EMOF.isReadOnly	WITHOUT_CLASSIFICATION	0.9999993246829979	WITHOUT_CLASSIFICATION	6.753170020696096E-7	DEFECT
// Ignore it if we've already set generic versions of these //	WITHOUT_CLASSIFICATION	0.9999999898257977	WITHOUT_CLASSIFICATION	1.0174202196377524E-8	DEFECT
// Ignore whatever was set before. //	WITHOUT_CLASSIFICATION	0.9999999875238537	WITHOUT_CLASSIFICATION	1.2476146249976637E-8	DEFECT
// external schema locations should only be processed once, i.e. in the subsequent parse // there is no need to process those again.	WITHOUT_CLASSIFICATION	0.9999996118745434	WITHOUT_CLASSIFICATION	3.881254564649051E-7	DEFECT
// throws SAXException	WITHOUT_CLASSIFICATION	0.9999760626112817	WITHOUT_CLASSIFICATION	2.3937388718252083E-5	DEFECT
// The entity handler is the best place to resolve and deresolve URIs since it can do it there just once to produce the entity. // So most often the entity handler will be a URI handler as well and when used as a URI handler will be an identity handler. //	WITHOUT_CLASSIFICATION	0.999999999566117	WITHOUT_CLASSIFICATION	4.3388307240524754E-10	DEFECT
// // Overwrite DefaultHandler methods //	WITHOUT_CLASSIFICATION	0.9999999975629513	WITHOUT_CLASSIFICATION	2.437048703498979E-9	DEFECT
// // Implement LexicalHandler methods //	WITHOUT_CLASSIFICATION	0.9999991896185391	WITHOUT_CLASSIFICATION	8.103814609321442E-7	DEFECT
// // Implement DTDHandler methods //	WITHOUT_CLASSIFICATION	0.9999998874454024	WITHOUT_CLASSIFICATION	1.125545976511838E-7	DEFECT
// // Implement EntityResolver methods //	WITHOUT_CLASSIFICATION	0.9999983955092608	WITHOUT_CLASSIFICATION	1.6044907392159428E-6	DEFECT
// And find the one that holds this proxy. //	WITHOUT_CLASSIFICATION	0.9999810968930742	WITHOUT_CLASSIFICATION	1.8903106925816032E-5	DEFECT
// Try to resolve the proxy locally. //	WITHOUT_CLASSIFICATION	0.9999659795063657	WITHOUT_CLASSIFICATION	3.40204936343127E-5	DEFECT
// We won't need to process this again later. //	WITHOUT_CLASSIFICATION	0.9999814000395642	WITHOUT_CLASSIFICATION	1.8599960435823648E-5	DEFECT
// Compute the holder of the proxy //	WITHOUT_CLASSIFICATION	0.999998334337531	WITHOUT_CLASSIFICATION	1.6656624689413488E-6	DEFECT
// If the proxy holder can hold many values, // it may contain a duplicate that resulted when the other end was processed as an IDREF // and hence did both sides of the bidirectional relation. //	WITHOUT_CLASSIFICATION	0.9999998944134902	WITHOUT_CLASSIFICATION	1.0558650978153077E-7	DEFECT
// Move the resolved object to the right place, remove the proxy, and we're done. //	WITHOUT_CLASSIFICATION	0.9999945536560253	WITHOUT_CLASSIFICATION	5.44634397468769E-6	DEFECT
// If the resolved object doesn't contain a reference to the proxy holder as it should. //	WITHOUT_CLASSIFICATION	0.9998547100939994	WITHOUT_CLASSIFICATION	1.4528990600047692E-4	DEFECT
// The proxy needs to be replaced in a way that updates both ends of the reference. //	WITHOUT_CLASSIFICATION	0.9999896445737928	WITHOUT_CLASSIFICATION	1.0355426207151615E-5	DEFECT
// We won't need to process this again later.	WITHOUT_CLASSIFICATION	0.9999893424647479	WITHOUT_CLASSIFICATION	1.065753525200678E-5	DEFECT
// At least set the references that we were able to resolve, if any. //	WITHOUT_CLASSIFICATION	0.9999957084814636	WITHOUT_CLASSIFICATION	4.291518536445375E-6	DEFECT
// Pretend there is an xmlns="" because we really need to ensure that the null prefix  // isn't used to denote something other than the null namespace. //	WITHOUT_CLASSIFICATION	0.9999999702022963	WITHOUT_CLASSIFICATION	2.9797703804514654E-8	DEFECT
// EATM temporary for debug purposes only. //	WITHOUT_CLASSIFICATION	0.9999407899938266	WITHOUT_CLASSIFICATION	5.9210006173521645E-5	DEFECT
// check for simple feature	WITHOUT_CLASSIFICATION	0.9999999935212931	WITHOUT_CLASSIFICATION	6.478706860745958E-9	DEFECT
// Set up a deferred extent so the document root we create definitely will not be added to the resource. //	WITHOUT_CLASSIFICATION	0.9999999883976899	WITHOUT_CLASSIFICATION	1.1602310153516643E-8	DEFECT
// Remove the document root's information from the top of the stacks. //	WITHOUT_CLASSIFICATION	0.9999997350488905	WITHOUT_CLASSIFICATION	2.649511094929722E-7	DEFECT
// Process the new root object if any. //	WITHOUT_CLASSIFICATION	0.9999981855586593	WITHOUT_CLASSIFICATION	1.8144413406433664E-6	DEFECT
// There's an EObject on the stack already. //	WITHOUT_CLASSIFICATION	0.9999870163587379	WITHOUT_CLASSIFICATION	1.2983641262156085E-5	DEFECT
// Excise the new root from the document root. //	WITHOUT_CLASSIFICATION	0.9999998585088278	WITHOUT_CLASSIFICATION	1.4149117220833336E-7	DEFECT
// handler.ignorableWhitespace(ch, start, length);	WITHOUT_CLASSIFICATION	0.9999999994109499	WITHOUT_CLASSIFICATION	5.890501760325372E-10	DEFECT
// Excise the new root from the document root. //	WITHOUT_CLASSIFICATION	0.9999998585088278	WITHOUT_CLASSIFICATION	1.4149117220833336E-7	DEFECT
//}	WITHOUT_CLASSIFICATION	0.9999752278075275	WITHOUT_CLASSIFICATION	2.4772192472541173E-5	DEFECT
// The new root object is the actual new object since all sign of the document root will now have disappeared. //	WITHOUT_CLASSIFICATION	0.9973511604364453	WITHOUT_CLASSIFICATION	0.002648839563554747	DEFECT
// Ignore a whitespace only text entry at the beginning. //	WITHOUT_CLASSIFICATION	0.9999999801153886	WITHOUT_CLASSIFICATION	1.9884611432855E-8	DEFECT
// Handle namespaces	WITHOUT_CLASSIFICATION	0.9999999737234397	WITHOUT_CLASSIFICATION	2.627656016467505E-8	DEFECT
// If processSchemaLocations is specified, treat these as XML Schema locations	WITHOUT_CLASSIFICATION	0.9999980577521113	WITHOUT_CLASSIFICATION	1.9422478887883254E-6	DEFECT
// If externalSchemaLocations are specified, process these ones as well	WITHOUT_CLASSIFICATION	0.9999999998665408	WITHOUT_CLASSIFICATION	1.3345921267098886E-10	DEFECT
// Ensure that anything can be handled, even if it's not recognized. //	WITHOUT_CLASSIFICATION	0.9999985186021452	WITHOUT_CLASSIFICATION	1.4813978548667834E-6	DEFECT
// This happens when processing an element with simple content that has elements content even though it shouldn't. //	WITHOUT_CLASSIFICATION	0.9998660517201099	WITHOUT_CLASSIFICATION	1.3394827989014153E-4	DEFECT
// Try to get a general-content feature. // Use a pattern that's not possible any other way. //	WITHOUT_CLASSIFICATION	0.9999019990485146	WITHOUT_CLASSIFICATION	9.800095148527941E-5	DEFECT
// This is for the case for a local unqualified element that has been bound. //	WITHOUT_CLASSIFICATION	0.9999978751687744	WITHOUT_CLASSIFICATION	2.1248312257283506E-6	DEFECT
// This handles the case of a substitution group. //	WITHOUT_CLASSIFICATION	0.999998527041285	WITHOUT_CLASSIFICATION	1.472958715055165E-6	DEFECT
// This check is redundant -- see handleFeature method (EL)	WITHOUT_CLASSIFICATION	0.9999998634219112	WITHOUT_CLASSIFICATION	1.3657808883235664E-7	DEFECT
// processing unknown feature with xsi:type (xmi:type)	WITHOUT_CLASSIFICATION	0.9999952173744743	WITHOUT_CLASSIFICATION	4.78262552577555E-6	DEFECT
// This only works for old globally registered things.	WITHOUT_CLASSIFICATION	0.9989827680163673	WITHOUT_CLASSIFICATION	0.0010172319836326174	DEFECT
// Ignore it if we can't find it since we'll fail anyway.	WITHOUT_CLASSIFICATION	0.9999867400544469	WITHOUT_CLASSIFICATION	1.3259945553101349E-5	DEFECT
// Continue with a different approach.	WITHOUT_CLASSIFICATION	0.9999447924387189	WITHOUT_CLASSIFICATION	5.520756128095586E-5	DEFECT
// We use null here instead of "" because an attribute without a prefix is considered to have the null target namespace...	WITHOUT_CLASSIFICATION	0.999974968394845	WITHOUT_CLASSIFICATION	2.5031605155031112E-5	DEFECT
// Create a proxy in the correct way and pop it. //	WITHOUT_CLASSIFICATION	0.9992169246194158	WITHOUT_CLASSIFICATION	7.83075380584096E-4	DEFECT
// Test for a same document reference that would usually be handled as an IDREF. //	WITHOUT_CLASSIFICATION	0.9999992360504294	WITHOUT_CLASSIFICATION	7.639495706629419E-7	DEFECT
// EATM Demand create metadata.	WITHOUT_CLASSIFICATION	0.9999982460457083	WITHOUT_CLASSIFICATION	1.7539542916891472E-6	DEFECT
/*   * Javadoc copied from interface   */	WITHOUT_CLASSIFICATION	0.9999998896725255	WITHOUT_CLASSIFICATION	1.1032747454339611E-7	DEFECT
// add the key/value pairs to the output string	WITHOUT_CLASSIFICATION	0.9999993287355062	WITHOUT_CLASSIFICATION	6.712644937019744E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.999999726172474	WITHOUT_CLASSIFICATION	2.738275259538914E-7	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999989374002828	WITHOUT_CLASSIFICATION	1.0625997173036432E-6	DEFECT
// Ensure that anything can be handled, even if it's not recognized. //	WITHOUT_CLASSIFICATION	0.9999985186021452	WITHOUT_CLASSIFICATION	1.4813978548667834E-6	DEFECT
// xmlResource.getResourceSet().getResources().addAll(generatedResources);	WITHOUT_CLASSIFICATION	0.9999996847764577	WITHOUT_CLASSIFICATION	3.152235422686059E-7	DEFECT
// use the pool to retrieve the parser	WITHOUT_CLASSIFICATION	0.9999998127068207	WITHOUT_CLASSIFICATION	1.8729317939634686E-7	DEFECT
// use the pool to retrieve the parser	WITHOUT_CLASSIFICATION	0.9999998127068207	WITHOUT_CLASSIFICATION	1.8729317939634686E-7	DEFECT
// set features and properties	WITHOUT_CLASSIFICATION	0.9999998896226626	WITHOUT_CLASSIFICATION	1.1037733746057807E-7	DEFECT
// set lexical handler	WITHOUT_CLASSIFICATION	0.9999998172441871	WITHOUT_CLASSIFICATION	1.8275581286732662E-7	DEFECT
// set lexical handler	WITHOUT_CLASSIFICATION	0.9999998172441871	WITHOUT_CLASSIFICATION	1.8275581286732662E-7	DEFECT
// release parser back to the pool	WITHOUT_CLASSIFICATION	0.9999953677208439	WITHOUT_CLASSIFICATION	4.632279156114062E-6	DEFECT
// release parser back to the pool	WITHOUT_CLASSIFICATION	0.9999953677208439	WITHOUT_CLASSIFICATION	4.632279156114062E-6	DEFECT
// Don't read encoding - rely on XML parser to provide one via Locator2	WITHOUT_CLASSIFICATION	0.938124491341138	WITHOUT_CLASSIFICATION	0.06187550865886206	DEFECT
// record node's attributes	WITHOUT_CLASSIFICATION	0.9999999551793491	WITHOUT_CLASSIFICATION	4.482065086829778E-8	DEFECT
// Include only non-duplicate namespace declarations. //	WITHOUT_CLASSIFICATION	0.9999999973701236	WITHOUT_CLASSIFICATION	2.629876543516319E-9	DEFECT
// record namespaces in scope //	WITHOUT_CLASSIFICATION	0.9999985201054127	WITHOUT_CLASSIFICATION	1.4798945873591608E-6	DEFECT
// traverse element node	WITHOUT_CLASSIFICATION	0.9999999213787297	WITHOUT_CLASSIFICATION	7.86212702133244E-8	DEFECT
// class AttributesProxy	WITHOUT_CLASSIFICATION	0.9999978288590098	WITHOUT_CLASSIFICATION	2.1711409902575367E-6	DEFECT
// XMLLoad	WITHOUT_CLASSIFICATION	0.9997635249115975	WITHOUT_CLASSIFICATION	2.364750884025526E-4	DEFECT
// Ignore close since we don't want to let the parser close the stream when it's done.	WITHOUT_CLASSIFICATION	0.9999989298474775	WITHOUT_CLASSIFICATION	1.0701525224284924E-6	DEFECT
// Ignore since we expect this to fail because of early termination // and if there is some other kind of failure, then we'll simply not be able to match the content type.	WITHOUT_CLASSIFICATION	0.9999999865430488	WITHOUT_CLASSIFICATION	1.3456951265171724E-8	DEFECT
// handler.skippedEntity(name);	WITHOUT_CLASSIFICATION	0.9999995405252234	WITHOUT_CLASSIFICATION	4.594747765321374E-7	DEFECT
// handler.resolveEntity(publicId, systemId);	WITHOUT_CLASSIFICATION	0.9999999295275307	WITHOUT_CLASSIFICATION	7.047246925816053E-8	DEFECT
// Skips '-'	WITHOUT_CLASSIFICATION	0.9999974673865102	WITHOUT_CLASSIFICATION	2.5326134898561735E-6	DEFECT
// We need to be careful that we don't end up requiring the no namespace package  // just because the feature is unqualified. //	WITHOUT_CLASSIFICATION	0.9999999973001168	WITHOUT_CLASSIFICATION	2.699883196470613E-9	DEFECT
// handler.notationDecl(name, publicId, systemId);	WITHOUT_CLASSIFICATION	0.999999861276377	WITHOUT_CLASSIFICATION	1.3872362292995316E-7	DEFECT
// handler.unparsedEntityDecl(name, publicId, systemId, notationName);	WITHOUT_CLASSIFICATION	0.9999993546173194	WITHOUT_CLASSIFICATION	6.453826805370751E-7	DEFECT
// SAXXMLHandler	WITHOUT_CLASSIFICATION	0.999998464411202	WITHOUT_CLASSIFICATION	1.5355887980488604E-6	DEFECT
// true if seen xmlns="" declaration	WITHOUT_CLASSIFICATION	0.9999993033020909	WITHOUT_CLASSIFICATION	6.966979091131953E-7	DEFECT
// There really must be a package. //	WITHOUT_CLASSIFICATION	0.9999997047953585	WITHOUT_CLASSIFICATION	2.95204641514724E-7	DEFECT
// There really must be a package. //	WITHOUT_CLASSIFICATION	0.9999997047953585	WITHOUT_CLASSIFICATION	2.95204641514724E-7	DEFECT
// We must have a qualifier for an attribute that needs qualified. //	WITHOUT_CLASSIFICATION	0.9999999492312653	WITHOUT_CLASSIFICATION	5.0768734767708356E-8	DEFECT
// for any content prefix to URI mapping could be in namespace context	WITHOUT_CLASSIFICATION	0.9993830634912845	WITHOUT_CLASSIFICATION	6.169365087154705E-4	DEFECT
// Once we see a lookup of an element in the null namespace, we should behave as if there has been an explicit xmlns="" //	WITHOUT_CLASSIFICATION	0.9999999634912734	WITHOUT_CLASSIFICATION	3.6508726648122815E-8	DEFECT
// Only if the feature kind is unspecified should we return a match. // Otherwise, we might return an attribute feature when an element is required,  // or vice versa. This also can be controlled by XMLResource.OPTION_LAX_FEATURE_PROCESSING. //	WITHOUT_CLASSIFICATION	0.9999975656782502	WITHOUT_CLASSIFICATION	2.4343217498280117E-6	DEFECT
// Sort and eliminate duplicates caused by having both a regular package and a demanded package for the same nsURI. //	WITHOUT_CLASSIFICATION	0.9999961116386197	WITHOUT_CLASSIFICATION	3.888361380361736E-6	DEFECT
// If we are substituting an EAttribute for an EReference... //	WITHOUT_CLASSIFICATION	0.9999814850327715	WITHOUT_CLASSIFICATION	1.8514967228484818E-5	DEFECT
// Create an simple any type wrapper for the attribute value and use that with the EReference. //	WITHOUT_CLASSIFICATION	0.9999984014495353	WITHOUT_CLASSIFICATION	1.5985504647080066E-6	DEFECT
// Make sure that the list will appear to be set to be empty. //	WITHOUT_CLASSIFICATION	0.9999940237529702	WITHOUT_CLASSIFICATION	5.976247029797198E-6	DEFECT
// xmlns="" declaration // Example #1: <a><q-name>q</q-name><b xmlns="abc"/></a> // Example #2: <a xmlns="abc"><b xmlns=""/><c xmlns="abc2"/></a> // Example #3: <a xmlns:a="abc"><b xmlns:a="abc2"/></a>	WITHOUT_CLASSIFICATION	0.9999989119686338	WITHOUT_CLASSIFICATION	1.0880313661655143E-6	DEFECT
// since xmlns="" is default declaration, remove ""->empty_URI mapping	WITHOUT_CLASSIFICATION	0.9999956845432869	WITHOUT_CLASSIFICATION	4.315456713134258E-6	DEFECT
// record default ns declaration as duplicate if seen QName (#1) or seen xmlns="" (#2)	WITHOUT_CLASSIFICATION	0.9999999998134051	WITHOUT_CLASSIFICATION	1.865949759502823E-10	DEFECT
// record duplicate declaration for a given prefix (#3)	WITHOUT_CLASSIFICATION	0.9999996391674827	WITHOUT_CLASSIFICATION	3.6083251737440006E-7	DEFECT
// recording a first declaration for a given prefix	WITHOUT_CLASSIFICATION	0.9999996091337873	WITHOUT_CLASSIFICATION	3.908662127496981E-7	DEFECT
// extend the array, if necessary	WITHOUT_CLASSIFICATION	0.9999999442186908	WITHOUT_CLASSIFICATION	5.5781309246988135E-8	DEFECT
// push context	WITHOUT_CLASSIFICATION	0.9999993290276352	WITHOUT_CLASSIFICATION	6.709723648403764E-7	DEFECT
// resize array, if needed	WITHOUT_CLASSIFICATION	0.9999998038439165	WITHOUT_CLASSIFICATION	1.9615608356468734E-7	DEFECT
// bind prefix to uri in current context	WITHOUT_CLASSIFICATION	0.9999948153058744	WITHOUT_CLASSIFICATION	5.184694125483835E-6	DEFECT
// find prefix in current context	WITHOUT_CLASSIFICATION	0.9999760458749272	WITHOUT_CLASSIFICATION	2.3954125072806636E-5	DEFECT
// prefix not found	WITHOUT_CLASSIFICATION	0.9999789102700375	WITHOUT_CLASSIFICATION	2.1089729962491675E-5	DEFECT
// find uri in current context	WITHOUT_CLASSIFICATION	0.9999928722817354	WITHOUT_CLASSIFICATION	7.127718264635996E-6	DEFECT
// uri not found	WITHOUT_CLASSIFICATION	0.9999905300377371	WITHOUT_CLASSIFICATION	9.469962263030558E-6	DEFECT
// getDeclaredPrefixAt(int):String	WITHOUT_CLASSIFICATION	0.9999935002592549	WITHOUT_CLASSIFICATION	6.499740745126531E-6	DEFECT
/*     *  Convert attribute values:     *  & to &amp;     *  < to &lt;     *  " to &quot;     *  \t to &#x9;     *  \n to &#xA;     *  \r to &#xD;     */	WITHOUT_CLASSIFICATION	0.999994327431549	WITHOUT_CLASSIFICATION	5.672568450924745E-6	DEFECT
// Look for a matching element in the specified packages if there are any. //	WITHOUT_CLASSIFICATION	0.9999995038531355	WITHOUT_CLASSIFICATION	4.961468644991275E-7	DEFECT
// Look for a substitution group feature in the feature's containing class' containing package. //	WITHOUT_CLASSIFICATION	0.9999999931736371	WITHOUT_CLASSIFICATION	6.826362879858742E-9	DEFECT
// Look for a substitution group feature in the classifier's containing package. //	WITHOUT_CLASSIFICATION	0.9999999973162412	WITHOUT_CLASSIFICATION	2.6837587839634775E-9	DEFECT
// Look for a substitution group feature in the additional packages. //	WITHOUT_CLASSIFICATION	0.9999997002957602	WITHOUT_CLASSIFICATION	2.997042397934664E-7	DEFECT
// Process the super types if that's been specified. //	WITHOUT_CLASSIFICATION	0.9999999843646386	WITHOUT_CLASSIFICATION	1.5635361463845363E-8	DEFECT
// XMIHandler	WITHOUT_CLASSIFICATION	0.9999952986622708	WITHOUT_CLASSIFICATION	4.7013377292283E-6	DEFECT
// xsi:nil // xsi:type // xmlns:xsi // xsi:schemaLocation // xsi:noNamespaceSchemaLocation	WITHOUT_CLASSIFICATION	0.999994971681495	WITHOUT_CLASSIFICATION	5.028318505032363E-6	DEFECT
// set serialization options	WITHOUT_CLASSIFICATION	0.9999999796894246	WITHOUT_CLASSIFICATION	2.031057541836702E-8	DEFECT
// If we can't create a temp file then we have to ignore the option.	WITHOUT_CLASSIFICATION	0.9999999608195187	WITHOUT_CLASSIFICATION	3.918048135839624E-8	DEFECT
// DOM serialization	WITHOUT_CLASSIFICATION	0.9999992996347885	WITHOUT_CLASSIFICATION	7.003652116237959E-7	DEFECT
// caching turned on by the user	WITHOUT_CLASSIFICATION	0.9999986392511029	WITHOUT_CLASSIFICATION	1.3607488970817607E-6	DEFECT
//no caching	WITHOUT_CLASSIFICATION	0.9999938797128451	WITHOUT_CLASSIFICATION	6.120287154858409E-6	DEFECT
// If there is no field, then we can't do this.	WITHOUT_CLASSIFICATION	0.9999961063716446	WITHOUT_CLASSIFICATION	3.893628355484869E-6	DEFECT
// Entities aren't supported for DOM.	WITHOUT_CLASSIFICATION	0.9998805735351369	WITHOUT_CLASSIFICATION	1.1942646486306475E-4	DEFECT
// this is a root element	WITHOUT_CLASSIFICATION	0.9999817578983765	WITHOUT_CLASSIFICATION	1.8242101623532508E-5	DEFECT
// Process XML attributes	WITHOUT_CLASSIFICATION	0.9999997816376774	WITHOUT_CLASSIFICATION	2.18362322514861E-7	DEFECT
// it's intentional to keep going	WITHOUT_CLASSIFICATION	0.9999996630122373	WITHOUT_CLASSIFICATION	3.3698776270185937E-7	DEFECT
// It's intentional to keep going.	WITHOUT_CLASSIFICATION	0.9999993945551325	WITHOUT_CLASSIFICATION	6.054448673898905E-7	DEFECT
// Process XML elements	WITHOUT_CLASSIFICATION	0.9999998204713523	WITHOUT_CLASSIFICATION	1.7952864773271363E-7	DEFECT
// for performance reasons saveNil and saveElement are not used	WITHOUT_CLASSIFICATION	0.9999999604131102	WITHOUT_CLASSIFICATION	3.958688975283131E-8	DEFECT
// value[outputPos];	WITHOUT_CLASSIFICATION	0.9999992011843502	WITHOUT_CLASSIFICATION	7.988156496976117E-7	DEFECT
// Every codepoint is supported! 	WITHOUT_CLASSIFICATION	0.999204739911788	WITHOUT_CLASSIFICATION	7.952600882118845E-4	DEFECT
// Produce the supplemental character as an entity	WITHOUT_CLASSIFICATION	0.9999998742481032	WITHOUT_CLASSIFICATION	1.2575189676668324E-7	DEFECT
// Normal (BMP) unicode code point. See if we know for a fact that the encoding supports it:	WITHOUT_CLASSIFICATION	0.9999974241904154	WITHOUT_CLASSIFICATION	2.5758095845118324E-6	DEFECT
// value[outputPos];	WITHOUT_CLASSIFICATION	0.9999992011843502	WITHOUT_CLASSIFICATION	7.988156496976117E-7	DEFECT
// Go back and add all the XMLNS stuff. //	WITHOUT_CLASSIFICATION	0.9999350412739524	WITHOUT_CLASSIFICATION	6.495872604769925E-5	DEFECT
// First try to see if this package's implementation class has an eInstance. //	WITHOUT_CLASSIFICATION	0.9999980981821992	WITHOUT_CLASSIFICATION	1.9018178008263771E-6	DEFECT
// Check if it's an anonymous type. //	WITHOUT_CLASSIFICATION	0.9999999083259633	WITHOUT_CLASSIFICATION	9.167403669158884E-8	DEFECT
// We only get here if we should do this. //	WITHOUT_CLASSIFICATION	0.9999587754446702	WITHOUT_CLASSIFICATION	4.122455532990977E-5	DEFECT
// 2^N // 2^N-1    	WITHOUT_CLASSIFICATION	0.999997084203338	WITHOUT_CLASSIFICATION	2.915796662018177E-6	DEFECT
// Every codepoint is supported! 	WITHOUT_CLASSIFICATION	0.999204739911788	WITHOUT_CLASSIFICATION	7.952600882118845E-4	DEFECT
// Normal (BMP) unicode code point. See if we know for a fact that the encoding supports it:	WITHOUT_CLASSIFICATION	0.9999974241904154	WITHOUT_CLASSIFICATION	2.5758095845118324E-6	DEFECT
/*     *  Convert element values:     *  & to &amp;     *  < to &lt;     *  " to &quot;     *  \n to line separator     *  \r should be escaped to &xD;     */	WITHOUT_CLASSIFICATION	0.9999976824669853	WITHOUT_CLASSIFICATION	2.317533014796217E-6	DEFECT
// We not sure the encoding supports this code point, so we write it as a character entity reference.	WITHOUT_CLASSIFICATION	0.9999999056916576	WITHOUT_CLASSIFICATION	9.430834235855436E-8	DEFECT
/*     *  Convert:     *  \n to line separator     */	WITHOUT_CLASSIFICATION	0.9999989506124254	WITHOUT_CLASSIFICATION	1.0493875746213477E-6	DEFECT
// continue with default processing	WITHOUT_CLASSIFICATION	0.9999999342492005	WITHOUT_CLASSIFICATION	6.575079943076377E-8	DEFECT
// Fill 7 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 4 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 13 of value (byte) -19 // Fill 5 of value (byte) 33 // Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9997442577660843	WITHOUT_CLASSIFICATION	2.5574223391569675E-4	DEFECT
// write doctype	WITHOUT_CLASSIFICATION	0.9999987789243066	WITHOUT_CLASSIFICATION	1.2210756934458469E-6	DEFECT
// Avoid a function call... //	WITHOUT_CLASSIFICATION	0.9976692173977432	WITHOUT_CLASSIFICATION	0.002330782602256868	DEFECT
// create dummy documentElement	WITHOUT_CLASSIFICATION	0.9999996982350497	WITHOUT_CLASSIFICATION	3.017649502634724E-7	DEFECT
// no property	WITHOUT_CLASSIFICATION	0.999998105206485	WITHOUT_CLASSIFICATION	1.8947935149532384E-6	DEFECT
// no property	WITHOUT_CLASSIFICATION	0.999998105206485	WITHOUT_CLASSIFICATION	1.8947935149532384E-6	DEFECT
// boolean not	WITHOUT_CLASSIFICATION	0.9999996589276223	WITHOUT_CLASSIFICATION	3.410723776846074E-7	DEFECT
// ownedProperty???	WITHOUT_CLASSIFICATION	0.9999919381135993	WITHOUT_CLASSIFICATION	8.061886400723821E-6	DEFECT
// We will use an xmi:Extension element for these	WITHOUT_CLASSIFICATION	0.9999986971490149	WITHOUT_CLASSIFICATION	1.3028509850858648E-6	DEFECT
// set parser features and properties	WITHOUT_CLASSIFICATION	0.9999968467792735	WITHOUT_CLASSIFICATION	3.1532207266089216E-6	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.9999999766383213	WITHOUT_CLASSIFICATION	2.3361678751851995E-8	DEFECT
// Initialize simple dependencies	WITHOUT_CLASSIFICATION	0.9999998627377243	WITHOUT_CLASSIFICATION	1.372622756233283E-7	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.9999990161470182	WITHOUT_CLASSIFICATION	9.83852981794225E-7	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.9999990161470182	WITHOUT_CLASSIFICATION	9.83852981794225E-7	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.9999998510045144	WITHOUT_CLASSIFICATION	1.4899548560704843E-7	DEFECT
// Register package validator	WITHOUT_CLASSIFICATION	0.9999997793676317	WITHOUT_CLASSIFICATION	2.206323681470119E-7	DEFECT
// Register package validator	WITHOUT_CLASSIFICATION	0.9999997793676317	WITHOUT_CLASSIFICATION	2.206323681470119E-7	DEFECT
// Mark meta-data to indicate it can't be changed	WITHOUT_CLASSIFICATION	0.999996839412632	WITHOUT_CLASSIFICATION	3.1605873680022317E-6	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.9999998937081113	WITHOUT_CLASSIFICATION	1.0629188876058995E-7	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.9999998937081113	WITHOUT_CLASSIFICATION	1.0629188876058995E-7	DEFECT
// Create enums	WITHOUT_CLASSIFICATION	0.9999998601966097	WITHOUT_CLASSIFICATION	1.3980339026541646E-7	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.9999998481815032	WITHOUT_CLASSIFICATION	1.518184968271126E-7	DEFECT
// Obtain other dependent packages	WITHOUT_CLASSIFICATION	0.9999999926807401	WITHOUT_CLASSIFICATION	7.319259834361146E-9	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.9999993338928099	WITHOUT_CLASSIFICATION	6.661071901337388E-7	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.9999921779007461	WITHOUT_CLASSIFICATION	7.822099253932902E-6	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.9999998165471937	WITHOUT_CLASSIFICATION	1.834528063299559E-7	DEFECT
// Initialize enums and add enum literals	WITHOUT_CLASSIFICATION	0.9999995251788815	WITHOUT_CLASSIFICATION	4.7482111857343865E-7	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.999999913714059	WITHOUT_CLASSIFICATION	8.628594096543401E-8	DEFECT
// Create data types	WITHOUT_CLASSIFICATION	0.9999998388095538	WITHOUT_CLASSIFICATION	1.6119044628207778E-7	DEFECT
// Initialize data types	WITHOUT_CLASSIFICATION	0.9999997777312488	WITHOUT_CLASSIFICATION	2.2226875126977868E-7	DEFECT
// Ensure correct indentation for a top level attribute. // // elementNames.add("mark");	WITHOUT_CLASSIFICATION	0.9999964211824992	WITHOUT_CLASSIFICATION	3.57881750085279E-6	DEFECT
// xmi:id // xmi:XMI // xmi:type // xmi:version // xmlns:xmi	WITHOUT_CLASSIFICATION	0.9999344168404558	WITHOUT_CLASSIFICATION	6.558315954411357E-5	DEFECT
// no property // no property // no property	WITHOUT_CLASSIFICATION	0.9999944206766525	WITHOUT_CLASSIFICATION	5.579323347465061E-6	DEFECT
// no property // no property	WITHOUT_CLASSIFICATION	0.9999979141193857	WITHOUT_CLASSIFICATION	2.085880614360902E-6	DEFECT
//  Interpret the body of a nested ownedComment as a comment-type and assign it as the EAnnotation.source of the parent. //	WITHOUT_CLASSIFICATION	0.9999918419546124	WITHOUT_CLASSIFICATION	8.15804538756865E-6	DEFECT
// EAnnotations denoting specific EMOF elements are serialized as their EMOF elements.  // Other EAnnotations are serialized as xmi:Extensions. //	WITHOUT_CLASSIFICATION	0.9999999994494324	WITHOUT_CLASSIFICATION	5.5056754947513E-10	DEFECT
// register default options	WITHOUT_CLASSIFICATION	0.9999999983760927	WITHOUT_CLASSIFICATION	1.6239073757969408E-9	DEFECT
/*   * Create an XML processor that is aware of XML Schema specified.   * @param schemaURIs - a URI {@link org.eclipse.common.util.URI} which point to an XML Schema   */	WITHOUT_CLASSIFICATION	0.9999999994124471	WITHOUT_CLASSIFICATION	5.875529967615286E-10	DEFECT
// Assume the class isn't available.	WITHOUT_CLASSIFICATION	0.999982434204477	WITHOUT_CLASSIFICATION	1.7565795522969455E-5	DEFECT
//XMLNamespaceFactory	WITHOUT_CLASSIFICATION	0.9999981404903548	WITHOUT_CLASSIFICATION	1.8595096452731597E-6	DEFECT
// DocumentRoot	WITHOUT_CLASSIFICATION	0.999999519692664	WITHOUT_CLASSIFICATION	4.803073360061607E-7	DEFECT
//XMLNamespacePackage	WITHOUT_CLASSIFICATION	0.9999983121532547	WITHOUT_CLASSIFICATION	1.6878467452202385E-6	DEFECT
//SpaceType	WITHOUT_CLASSIFICATION	0.9999971814203572	WITHOUT_CLASSIFICATION	2.8185796427157755E-6	DEFECT
// http:///org/eclipse/emf/ecore/util/ExtendedMetaData	WITHOUT_CLASSIFICATION	0.9999987344288362	WITHOUT_CLASSIFICATION	1.2655711638198338E-6	DEFECT
//XMLNamespacePackageImpl	WITHOUT_CLASSIFICATION	0.9999936364512007	WITHOUT_CLASSIFICATION	6.363548799377003E-6	DEFECT
//XMLNamespaceDocumentRootImpl	WITHOUT_CLASSIFICATION	0.9999956074560156	WITHOUT_CLASSIFICATION	4.3925439844151725E-6	DEFECT
//XMLNamespaceFactoryImpl	WITHOUT_CLASSIFICATION	0.9999964023599327	WITHOUT_CLASSIFICATION	3.5976400674112725E-6	DEFECT
//XMLNamespaceValidator	WITHOUT_CLASSIFICATION	0.9999981572736772	WITHOUT_CLASSIFICATION	1.8427263226788515E-6	DEFECT
// AnyType	WITHOUT_CLASSIFICATION	0.9999943021104003	WITHOUT_CLASSIFICATION	5.697889599654921E-6	DEFECT
// SimpleAnyType	WITHOUT_CLASSIFICATION	0.9999969087395008	WITHOUT_CLASSIFICATION	3.0912604992207723E-6	DEFECT
// ProcessingInstructionType	WITHOUT_CLASSIFICATION	0.9999999637190565	WITHOUT_CLASSIFICATION	3.6280943515760834E-8	DEFECT
//XMLTypeFactory	WITHOUT_CLASSIFICATION	0.9999833905092912	WITHOUT_CLASSIFICATION	1.6609490708754348E-5	DEFECT
//XMLTypePackage	WITHOUT_CLASSIFICATION	0.9999609975461831	WITHOUT_CLASSIFICATION	3.9002453817066436E-5	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.9999998481815032	WITHOUT_CLASSIFICATION	1.518184968271126E-7	DEFECT
// Obtain other dependent packages	WITHOUT_CLASSIFICATION	0.9999999926807401	WITHOUT_CLASSIFICATION	7.319259834361146E-9	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.9999993338928099	WITHOUT_CLASSIFICATION	6.661071901337388E-7	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.9999998165471937	WITHOUT_CLASSIFICATION	1.834528063299559E-7	DEFECT
// Initialize classes and features; add operations and parameters	WITHOUT_CLASSIFICATION	0.9999993621167168	WITHOUT_CLASSIFICATION	6.378832832154119E-7	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.999999913714059	WITHOUT_CLASSIFICATION	8.628594096543401E-8	DEFECT
// Create data types	WITHOUT_CLASSIFICATION	0.9999998388095538	WITHOUT_CLASSIFICATION	1.6119044628207778E-7	DEFECT
// Initialize data types	WITHOUT_CLASSIFICATION	0.9999997777312488	WITHOUT_CLASSIFICATION	2.2226875126977868E-7	DEFECT
// {	WITHOUT_CLASSIFICATION	0.99998747667699	WITHOUT_CLASSIFICATION	1.2523323009927967E-5	DEFECT
// Create annotations // http://www.w3.org/XML/1998/namespace	WITHOUT_CLASSIFICATION	0.9999128037552433	WITHOUT_CLASSIFICATION	8.71962447567757E-5	DEFECT
// Don't create anything.	WITHOUT_CLASSIFICATION	0.9999943110440784	WITHOUT_CLASSIFICATION	5.6889559216238615E-6	DEFECT
//XMLTypePackageImpl	WITHOUT_CLASSIFICATION	0.9998951585078654	WITHOUT_CLASSIFICATION	1.0484149213468642E-4	DEFECT
//AnyTypeImpl	WITHOUT_CLASSIFICATION	0.9999491451435756	WITHOUT_CLASSIFICATION	5.085485642435606E-5	DEFECT
//ProcessingInstructionTypeImpl	WITHOUT_CLASSIFICATION	0.999998212668184	WITHOUT_CLASSIFICATION	1.7873318158839942E-6	DEFECT
// do not validate on load. Check validity using Diagnostician.	WITHOUT_CLASSIFICATION	0.99999989922885	WITHOUT_CLASSIFICATION	1.0077115000078303E-7	DEFECT
// do not validate on load. Check validity using Diagnostician.	WITHOUT_CLASSIFICATION	0.99999989922885	WITHOUT_CLASSIFICATION	1.0077115000078303E-7	DEFECT
//XMLTypeFactoryImpl	WITHOUT_CLASSIFICATION	0.999977087363349	WITHOUT_CLASSIFICATION	2.291263665101931E-5	DEFECT
//DocumentRootImpl	WITHOUT_CLASSIFICATION	0.9999777728959706	WITHOUT_CLASSIFICATION	2.222710402945489E-5	DEFECT
//SimpleAnyTypeImpl	WITHOUT_CLASSIFICATION	0.9999616639820167	WITHOUT_CLASSIFICATION	3.833601798327572E-5	DEFECT
//System.err.println("Starts at "+index);	WITHOUT_CLASSIFICATION	0.9999994372713034	WITHOUT_CLASSIFICATION	5.627286966972244E-7	DEFECT
//System.err.println("Starts at "+index);	WITHOUT_CLASSIFICATION	0.9999994372713034	WITHOUT_CLASSIFICATION	5.627286966972244E-7	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9999944090873375	WITHOUT_CLASSIFICATION	5.590912662404696E-6	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9999944090873375	WITHOUT_CLASSIFICATION	5.590912662404696E-6	DEFECT
// Skips a white space.	WITHOUT_CLASSIFICATION	0.9999999278140059	WITHOUT_CLASSIFICATION	7.218599409998001E-8	DEFECT
// Skips characters between '#' and a line end.	WITHOUT_CLASSIFICATION	0.9999999393858848	WITHOUT_CLASSIFICATION	6.06141151491771E-8	DEFECT
// Strips an escaped white space.	WITHOUT_CLASSIFICATION	0.9999999568432114	WITHOUT_CLASSIFICATION	4.3156788598507895E-8	DEFECT
// Other escaped character.	WITHOUT_CLASSIFICATION	0.9999999994812845	WITHOUT_CLASSIFICATION	5.187155124192432E-10	DEFECT
// As is.	WITHOUT_CLASSIFICATION	0.9999784112877078	WITHOUT_CLASSIFICATION	2.15887122921645E-5	DEFECT
// ret.next is null.	WITHOUT_CLASSIFICATION	0.9999831163510753	WITHOUT_CLASSIFICATION	1.688364892474129E-5	DEFECT
// {n}	WITHOUT_CLASSIFICATION	0.9999835341674577	WITHOUT_CLASSIFICATION	1.6465832542367758E-5	DEFECT
// X{2,6} -> XX(X(X(XX?)?)?)?	WITHOUT_CLASSIFICATION	0.9998747424033729	WITHOUT_CLASSIFICATION	1.2525759662704783E-4	DEFECT
// Token.CLOSURE	WITHOUT_CLASSIFICATION	0.999996246884634	WITHOUT_CLASSIFICATION	3.753115365982028E-6	DEFECT
//System.err.println("DEBUG: matchEnd="+matchEnd);	WITHOUT_CLASSIFICATION	0.999976236688348	WITHOUT_CLASSIFICATION	2.3763311652005607E-5	DEFECT
//System.err.println("DEBUG: matchEnd="+matchEnd);	WITHOUT_CLASSIFICATION	0.999976236688348	WITHOUT_CLASSIFICATION	2.3763311652005607E-5	DEFECT
/*           * The pattern has only fixed string.           * The engine uses Boyer-Moore.           */	WITHOUT_CLASSIFICATION	0.9968493138406292	WITHOUT_CLASSIFICATION	0.003150686159370655	DEFECT
//System.err.println("DEBUG: fixed-only: "+this.fixedString);	WITHOUT_CLASSIFICATION	0.9998393937245824	WITHOUT_CLASSIFICATION	1.6060627541757166E-4	DEFECT
//System.err.println("DEBUG: fixed-only: "+this.fixedString);	WITHOUT_CLASSIFICATION	0.9998393937245824	WITHOUT_CLASSIFICATION	1.6060627541757166E-4	DEFECT
//System.err.println("DEBUG: fixed-only: "+this.fixedString);	WITHOUT_CLASSIFICATION	0.9998393937245824	WITHOUT_CLASSIFICATION	1.6060627541757166E-4	DEFECT
/*           * The pattern contains a fixed string.           * The engine checks with Boyer-Moore whether the text contains the fixed string or not.           * If not, it return with false.           */	WITHOUT_CLASSIFICATION	0.9999804160719046	WITHOUT_CLASSIFICATION	1.958392809544524E-5	DEFECT
/*           * The pattern contains a fixed string.           * The engine checks with Boyer-Moore whether the text contains the fixed string or not.           * If not, it return with false.           */	WITHOUT_CLASSIFICATION	0.9999804160719046	WITHOUT_CLASSIFICATION	1.958392809544524E-5	DEFECT
//System.err.println("Non-match in fixed-string search.");	WITHOUT_CLASSIFICATION	0.999999056176791	WITHOUT_CLASSIFICATION	9.438232091530836E-7	DEFECT
//System.err.println("Non-match in fixed-string search.");	WITHOUT_CLASSIFICATION	0.999999056176791	WITHOUT_CLASSIFICATION	9.438232091530836E-7	DEFECT
//System.err.println("Non-match in fixed-string search.");	WITHOUT_CLASSIFICATION	0.999999056176791	WITHOUT_CLASSIFICATION	9.438232091530836E-7	DEFECT
/*           * Checks whether the expression starts with ".*".           */	WITHOUT_CLASSIFICATION	0.9999990322407042	WITHOUT_CLASSIFICATION	9.677592958137066E-7	DEFECT
/*           * Checks whether the expression starts with ".*".           */	WITHOUT_CLASSIFICATION	0.9999990322407042	WITHOUT_CLASSIFICATION	9.677592958137066E-7	DEFECT
/*           * Checks whether the expression starts with ".*".           */	WITHOUT_CLASSIFICATION	0.9999990322407042	WITHOUT_CLASSIFICATION	9.677592958137066E-7	DEFECT
/*           * Optimization against the first character.           */	WITHOUT_CLASSIFICATION	0.9999999995405904	WITHOUT_CLASSIFICATION	4.5940956599690757E-10	DEFECT
/*           * Optimization against the first character.           */	WITHOUT_CLASSIFICATION	0.9999999995405904	WITHOUT_CLASSIFICATION	4.5940956599690757E-10	DEFECT
//System.err.println("DEBUG: with firstchar-matching: "+this.firstChar);	WITHOUT_CLASSIFICATION	0.9999985751409946	WITHOUT_CLASSIFICATION	1.4248590054182456E-6	DEFECT
//System.err.println("DEBUG: with firstchar-matching: "+this.firstChar);	WITHOUT_CLASSIFICATION	0.9999985751409946	WITHOUT_CLASSIFICATION	1.4248590054182456E-6	DEFECT
/*           * Straightforward matching.           */	WITHOUT_CLASSIFICATION	0.9999993663413532	WITHOUT_CLASSIFICATION	6.336586468530075E-7	DEFECT
/*           * Straightforward matching.           */	WITHOUT_CLASSIFICATION	0.9999993663413532	WITHOUT_CLASSIFICATION	6.336586468530075E-7	DEFECT
// Internal use only. // The @ always matches line beginnings.	WITHOUT_CLASSIFICATION	0.9999999804733117	WITHOUT_CLASSIFICATION	1.9526688268238116E-8	DEFECT
// Internal use only. // The @ always matches line beginnings.	WITHOUT_CLASSIFICATION	0.9999999804733117	WITHOUT_CLASSIFICATION	1.9526688268238116E-8	DEFECT
// switch anchor type	WITHOUT_CLASSIFICATION	0.9999999068913012	WITHOUT_CLASSIFICATION	9.310869876504492E-8	DEFECT
// switch anchor type	WITHOUT_CLASSIFICATION	0.9999999068913012	WITHOUT_CLASSIFICATION	9.310869876504492E-8	DEFECT
// ********	WITHOUT_CLASSIFICATION	0.9999791424156649	WITHOUT_CLASSIFICATION	2.0857584335117674E-5	DEFECT
// ********	WITHOUT_CLASSIFICATION	0.9999791424156649	WITHOUT_CLASSIFICATION	2.0857584335117674E-5	DEFECT
/*                       * Saves current position to avoid                       * zero-width repeats.                       */	WITHOUT_CLASSIFICATION	0.999998602719025	WITHOUT_CLASSIFICATION	1.3972809750300899E-6	DEFECT
/*                       * Saves current position to avoid                       * zero-width repeats.                       */	WITHOUT_CLASSIFICATION	0.999998602719025	WITHOUT_CLASSIFICATION	1.3972809750300899E-6	DEFECT
/*           * Optimization against the first character.           */	WITHOUT_CLASSIFICATION	0.9999999995405904	WITHOUT_CLASSIFICATION	4.5940956599690757E-10	DEFECT
//System.err.println("DEBUG: with firstchar-matching: "+this.firstChar);	WITHOUT_CLASSIFICATION	0.9999985751409946	WITHOUT_CLASSIFICATION	1.4248590054182456E-6	DEFECT
/*           * Straightforward matching.           */	WITHOUT_CLASSIFICATION	0.9999993663413532	WITHOUT_CLASSIFICATION	6.336586468530075E-7	DEFECT
// switch anchor type	WITHOUT_CLASSIFICATION	0.9999999068913012	WITHOUT_CLASSIFICATION	9.310869876504492E-8	DEFECT
// ********	WITHOUT_CLASSIFICATION	0.9999791424156649	WITHOUT_CLASSIFICATION	2.0857584335117674E-5	DEFECT
/*                       * Saves current position to avoid                       * zero-width repeats.                       */	WITHOUT_CLASSIFICATION	0.999998602719025	WITHOUT_CLASSIFICATION	1.3972809750300899E-6	DEFECT
// "w"	WITHOUT_CLASSIFICATION	0.9999934592593605	WITHOUT_CLASSIFICATION	6.540740639528649E-6	DEFECT
// Op.CHAR	WITHOUT_CLASSIFICATION	0.9999982477665017	WITHOUT_CLASSIFICATION	1.7522334982895276E-6	DEFECT
//+this.fixedString	WITHOUT_CLASSIFICATION	0.9999962993015081	WITHOUT_CLASSIFICATION	3.7006984917588485E-6	DEFECT
// This pattern has a fixed string of which length is more than one.	WITHOUT_CLASSIFICATION	0.9998720841741487	WITHOUT_CLASSIFICATION	1.2791582585120224E-4	DEFECT
// Cf // Mn // Mc	WITHOUT_CLASSIFICATION	0.9999966652959055	WITHOUT_CLASSIFICATION	3.3347040946334975E-6	DEFECT
// "u"	WITHOUT_CLASSIFICATION	0.9999960958357662	WITHOUT_CLASSIFICATION	3.904164233791814E-6	DEFECT
/*    public ParseException(String mes) {        this(mes, -1);    }    */	WITHOUT_CLASSIFICATION	0.9999995735597078	WITHOUT_CLASSIFICATION	4.2644029218267277E-7	DEFECT
// L // L // L // L // L // N // N // N // Mc	WITHOUT_CLASSIFICATION	0.9999991209724208	WITHOUT_CLASSIFICATION	8.7902757912315E-7	DEFECT
// Single character // [a-zA-Z] // [^a-zA-Z] // ^ $ ... // literal String  // X* // X*? // X? // X?? // X|Y // ( and ) // \1 \2 ... // (?=...) // (?!...) // (?<=...) // (?<!...) // (?>...) // (?ims-ims:...) // (?(..)yes|no)	WITHOUT_CLASSIFICATION	0.9999729356463797	WITHOUT_CLASSIFICATION	2.7064353620254054E-5	DEFECT
// Legacy word characters	WITHOUT_CLASSIFICATION	0.9999999188203652	WITHOUT_CLASSIFICATION	8.117963470422111E-8	DEFECT
// for UNION	WITHOUT_CLASSIFICATION	0.9999993530986679	WITHOUT_CLASSIFICATION	6.469013320108799E-7	DEFECT
//System.err.println("Creates UnionOp");	WITHOUT_CLASSIFICATION	0.9999998710458922	WITHOUT_CLASSIFICATION	1.289541077736245E-7	DEFECT
// ModifierOp	WITHOUT_CLASSIFICATION	0.9999991961413566	WITHOUT_CLASSIFICATION	8.038586434496471E-7	DEFECT
// for CLOSURE, QUESTION	WITHOUT_CLASSIFICATION	0.9999999386012645	WITHOUT_CLASSIFICATION	6.139873559427457E-8	DEFECT
// for UNIoN	WITHOUT_CLASSIFICATION	0.9999989273426544	WITHOUT_CLASSIFICATION	1.072657345683087E-6	DEFECT
// STRING	WITHOUT_CLASSIFICATION	0.999997271647818	WITHOUT_CLASSIFICATION	2.728352182033305E-6	DEFECT
// RANGE, NRANGE	WITHOUT_CLASSIFICATION	0.9999911724297004	WITHOUT_CLASSIFICATION	8.827570299571884E-6	DEFECT
//case 0x0b:  ret = "\\v";  break;	WITHOUT_CLASSIFICATION	0.9999870034134793	WITHOUT_CLASSIFICATION	1.2996586520767964E-5	DEFECT
// for RANGE or NRANGE	WITHOUT_CLASSIFICATION	0.9999986340274941	WITHOUT_CLASSIFICATION	1.365972505809057E-6	DEFECT
//System.err.println("Token#addRange(): "+start+" "+end);	WITHOUT_CLASSIFICATION	0.9999517339864235	WITHOUT_CLASSIFICATION	4.826601357666335E-5	DEFECT
//System.err.println("Do sorting: "+this.ranges.length);	WITHOUT_CLASSIFICATION	0.9999998696840166	WITHOUT_CLASSIFICATION	1.3031598350229684E-7	DEFECT
// Index of writing point // Index of processing point	WITHOUT_CLASSIFICATION	0.9999979500389234	WITHOUT_CLASSIFICATION	2.049961076539815E-6	DEFECT
//System.err.println("Token#substractRanges(): Entry: "+this.ranges.length+", "+tok.ranges.length);	WITHOUT_CLASSIFICATION	0.9999995569704656	WITHOUT_CLASSIFICATION	4.4302953428756723E-7	DEFECT
// Not overlapped // src: o-----o // sub:         o-----o // res: o-----o // Reuse sub	WITHOUT_CLASSIFICATION	0.9999994506306955	WITHOUT_CLASSIFICATION	5.493693045352254E-7	DEFECT
// src:    o--------o // sub:  o------------o // res: empty // Reuse sub	WITHOUT_CLASSIFICATION	0.9999897102368209	WITHOUT_CLASSIFICATION	1.0289763178972214E-5	DEFECT
// src:    o--------o // sub:  o----o // res:       o-----o // Reuse src(=res)	WITHOUT_CLASSIFICATION	0.9999844387727136	WITHOUT_CLASSIFICATION	1.55612272863736E-5	DEFECT
// src:    o--------o // sub:          o----o // res:    o-----o // Reuse sub	WITHOUT_CLASSIFICATION	0.9999840320242386	WITHOUT_CLASSIFICATION	1.5967975761358213E-5	DEFECT
// Not overlapped // src:          o-----o // sub: o----o	WITHOUT_CLASSIFICATION	0.9999999102629199	WITHOUT_CLASSIFICATION	8.973708002818618E-8	DEFECT
// this.ranges is sorted and compacted.	WITHOUT_CLASSIFICATION	0.9999794298369038	WITHOUT_CLASSIFICATION	2.0570163096205484E-5	DEFECT
// Not overlapped // src1: o-----o // src2:         o-----o // res:  empty // Reuse src2	WITHOUT_CLASSIFICATION	0.9999992858873256	WITHOUT_CLASSIFICATION	7.14112674454418E-7	DEFECT
// Overlapped // src1:    o--------o // src2:  o----o // src2:      o----o // src2:          o----o // src2:  o------------o	WITHOUT_CLASSIFICATION	0.9999998095269618	WITHOUT_CLASSIFICATION	1.904730382196162E-7	DEFECT
// src1:    o--------o // src2:  o------------o // res:     o--------o // Reuse src2	WITHOUT_CLASSIFICATION	0.9999670272920461	WITHOUT_CLASSIFICATION	3.2972707953836425E-5	DEFECT
// src1:    o--------o // src2:  o----o // res:     o--o // Reuse the rest of src1	WITHOUT_CLASSIFICATION	0.9999963020725936	WITHOUT_CLASSIFICATION	3.697927406337484E-6	DEFECT
// src1:    o--------o // src2:      o----o // res:       o----o // Reuse the rest of src1	WITHOUT_CLASSIFICATION	0.9999963020725936	WITHOUT_CLASSIFICATION	3.697927406337484E-6	DEFECT
// Not overlapped // src1:          o-----o // src2: o----o	WITHOUT_CLASSIFICATION	0.99999979633789	WITHOUT_CLASSIFICATION	2.036621098894289E-7	DEFECT
// 32 is the number of bits in `int'.	WITHOUT_CLASSIFICATION	0.9999964738008058	WITHOUT_CLASSIFICATION	3.5261991941244656E-6	DEFECT
// s&0x1f : 0-31	WITHOUT_CLASSIFICATION	0.9999781152058965	WITHOUT_CLASSIFICATION	2.1884794103483904E-5	DEFECT
// '|' // '*' // '+' // '?' // '(' // ')' // '.' // '[' // '\' // '^' // '$' // '(?:' // '(?=' // '(?!' // '(?<=' // '(?<!' // '(?>' // '(?[' // '[:' in a character class // '(?#' // '(?' [\-,a-z,A-Z] // '(?(' // '-[' in a character class	WITHOUT_CLASSIFICATION	0.999998546831878	WITHOUT_CLASSIFICATION	1.4531681219412071E-6	DEFECT
//this.setLocale(Locale.getDefault());	WITHOUT_CLASSIFICATION	0.9999999673101667	WITHOUT_CLASSIFICATION	3.268983331541224E-8	DEFECT
//this.setLocale(locale);	WITHOUT_CLASSIFICATION	0.9999997458944297	WITHOUT_CLASSIFICATION	2.54105570214818E-7	DEFECT
// In a character class, this.chardata has one character, that is to say, // a pair of surrogates is composed and stored to this.chardata.	WITHOUT_CLASSIFICATION	0.9999981862469394	WITHOUT_CLASSIFICATION	1.8137530606152615E-6	DEFECT
// Through down	WITHOUT_CLASSIFICATION	0.9999536909213681	WITHOUT_CLASSIFICATION	4.630907863184928E-5	DEFECT
// Options	WITHOUT_CLASSIFICATION	0.9999990982622571	WITHOUT_CLASSIFICATION	9.017377429331102E-7	DEFECT
// conditional // this.offsets points the next of '('.	WITHOUT_CLASSIFICATION	0.9999750451778906	WITHOUT_CLASSIFICATION	2.4954822109352276E-5	DEFECT
// '|'	WITHOUT_CLASSIFICATION	0.9999918262131742	WITHOUT_CLASSIFICATION	8.17378682593181E-6	DEFECT
//tok = Token.createConcat(tok, this.parseFactor());	WITHOUT_CLASSIFICATION	0.9999997487044381	WITHOUT_CLASSIFICATION	2.512955619165996E-7	DEFECT
// ----------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999933504980093	WITHOUT_CLASSIFICATION	6.649501990647554E-6	DEFECT
// ----------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999933504980093	WITHOUT_CLASSIFICATION	6.649501990647554E-6	DEFECT
// ')'	WITHOUT_CLASSIFICATION	0.9999905979867351	WITHOUT_CLASSIFICATION	9.402013264860678E-6	DEFECT
// ')'	WITHOUT_CLASSIFICATION	0.9999905979867351	WITHOUT_CLASSIFICATION	9.402013264860678E-6	DEFECT
// ')'	WITHOUT_CLASSIFICATION	0.9999905979867351	WITHOUT_CLASSIFICATION	9.402013264860678E-6	DEFECT
// X+ -> XX*	WITHOUT_CLASSIFICATION	0.9998820887660441	WITHOUT_CLASSIFICATION	1.1791123395589053E-4	DEFECT
// X? -> X|	WITHOUT_CLASSIFICATION	0.9999789219540056	WITHOUT_CLASSIFICATION	2.1078045994364805E-5	DEFECT
// Skips ')'	WITHOUT_CLASSIFICATION	0.9999972083357034	WITHOUT_CLASSIFICATION	2.791664296709088E-6	DEFECT
// Skips ')'	WITHOUT_CLASSIFICATION	0.9999972083357034	WITHOUT_CLASSIFICATION	2.791664296709088E-6	DEFECT
// this.offset points the next of '('	WITHOUT_CLASSIFICATION	0.999996507260094	WITHOUT_CLASSIFICATION	3.4927399059527743E-6	DEFECT
// Parses a condition.	WITHOUT_CLASSIFICATION	0.9999875907237067	WITHOUT_CLASSIFICATION	1.2409276293271686E-5	DEFECT
// Points '('.	WITHOUT_CLASSIFICATION	0.9999994833870934	WITHOUT_CLASSIFICATION	5.166129065390924E-7	DEFECT
// Parses yes/no-patterns.	WITHOUT_CLASSIFICATION	0.9999985311245874	WITHOUT_CLASSIFICATION	1.4688754127096165E-6	DEFECT
// this.offset points the next of '?'. // modifiers ::= [imsw]* ('-' [imsw]*)? ':'	WITHOUT_CLASSIFICATION	0.9999990414235315	WITHOUT_CLASSIFICATION	9.585764686019855E-7	DEFECT
// '-' or ':'?	WITHOUT_CLASSIFICATION	0.9999879529654622	WITHOUT_CLASSIFICATION	1.2047034537735968E-5	DEFECT
// ':'?	WITHOUT_CLASSIFICATION	0.9999767323802917	WITHOUT_CLASSIFICATION	2.3267619708337495E-5	DEFECT
// such as (?-i)	WITHOUT_CLASSIFICATION	0.999999921662758	WITHOUT_CLASSIFICATION	7.833724203631314E-8	DEFECT
// Must be in 0x0040-0x005f	WITHOUT_CLASSIFICATION	0.9999998101554617	WITHOUT_CLASSIFICATION	1.8984453836099118E-7	DEFECT
// through down	WITHOUT_CLASSIFICATION	0.999806348678815	WITHOUT_CLASSIFICATION	1.936513211850758E-4	DEFECT
// this.offset -> next of '{'	WITHOUT_CLASSIFICATION	0.9999989985109692	WITHOUT_CLASSIFICATION	1.0014890307807351E-6	DEFECT
// {min,max}	WITHOUT_CLASSIFICATION	0.99999763550137	WITHOUT_CLASSIFICATION	2.3644986300843233E-6	DEFECT
// assume {min,}	WITHOUT_CLASSIFICATION	0.9999999038251589	WITHOUT_CLASSIFICATION	9.617484108126628E-8	DEFECT
//System.err.println("CLOSURE: "+min+", "+max);	WITHOUT_CLASSIFICATION	0.9999979943322235	WITHOUT_CLASSIFICATION	2.0056677765526696E-6	DEFECT
// '(?:' // '(?(' // (?modifiers ... )	WITHOUT_CLASSIFICATION	0.9999875259444618	WITHOUT_CLASSIFICATION	1.247405553811334E-5	DEFECT
// Skips '.'	WITHOUT_CLASSIFICATION	0.9999977835960964	WITHOUT_CLASSIFICATION	2.2164039036066E-6	DEFECT
// handle category escape	WITHOUT_CLASSIFICATION	0.9999999405125701	WITHOUT_CLASSIFICATION	5.94874299019324E-8	DEFECT
// '['	WITHOUT_CLASSIFICATION	0.9999933893273237	WITHOUT_CLASSIFICATION	6.610672676304341E-6	DEFECT
// '^'	WITHOUT_CLASSIFICATION	0.9999918385876289	WITHOUT_CLASSIFICATION	8.161412371098E-6	DEFECT
// Literal char // . // XY // X|Y|Z // X* // [a-zA-Z] etc. // [^a-zA-Z] etc. // (X) or (?:X) // // ^ $ \b \B \< \> \A \Z \z // *? +? // strings // back references // (?=...) // (?!...) // (?<=...) // (?<!...) // (?>...) // (?ims-ims:...) // (?(...)yes|no)	WITHOUT_CLASSIFICATION	0.9999637210557935	WITHOUT_CLASSIFICATION	3.627894420653834E-5	DEFECT
// if not shorthands... // Here is no '-'.	WITHOUT_CLASSIFICATION	0.9999811717369087	WITHOUT_CLASSIFICATION	1.8828263091244655E-5	DEFECT
//tok.dumpRanges();	WITHOUT_CLASSIFICATION	0.9999979707944174	WITHOUT_CLASSIFICATION	2.0292055825657406E-6	DEFECT
// *** It is not a bug.	WITHOUT_CLASSIFICATION	0.9943658840889166	WITHOUT_CLASSIFICATION	0.0056341159110833506	DEFECT
// for CLOSURE	WITHOUT_CLASSIFICATION	0.9999996792762971	WITHOUT_CLASSIFICATION	3.2072370295592534E-7	DEFECT
// for CLOSURE	WITHOUT_CLASSIFICATION	0.9999996792762971	WITHOUT_CLASSIFICATION	3.2072370295592534E-7	DEFECT
// for CLOSURE	WITHOUT_CLASSIFICATION	0.9999996792762971	WITHOUT_CLASSIFICATION	3.2072370295592534E-7	DEFECT
// for STRING	WITHOUT_CLASSIFICATION	0.9999994024260118	WITHOUT_CLASSIFICATION	5.975739881527572E-7	DEFECT
// for STRING	WITHOUT_CLASSIFICATION	0.9999994024260118	WITHOUT_CLASSIFICATION	5.975739881527572E-7	DEFECT
// *******	WITHOUT_CLASSIFICATION	0.9999609567874157	WITHOUT_CLASSIFICATION	3.904321258420474E-5	DEFECT
// ***** Really?	WITHOUT_CLASSIFICATION	0.9998449346752759	WITHOUT_CLASSIFICATION	1.5506532472411196E-4	DEFECT
// ***** Really?	WITHOUT_CLASSIFICATION	0.9998449346752759	WITHOUT_CLASSIFICATION	1.5506532472411196E-4	DEFECT
// infinity	WITHOUT_CLASSIFICATION	0.9999966360893598	WITHOUT_CLASSIFICATION	3.363910640210946E-6	DEFECT
// When this.child.getMaxLength() < 0, // this returns minus value	WITHOUT_CLASSIFICATION	0.9999980356510055	WITHOUT_CLASSIFICATION	1.9643489944499147E-6	DEFECT
// ******	WITHOUT_CLASSIFICATION	0.9999609567874157	WITHOUT_CLASSIFICATION	3.904321258420474E-5	DEFECT
/*               *  a|b|c -> FC_TERMINAL               *  a|.|c -> FC_ANY               *  a|b|  -> FC_CONTINUE               */	WITHOUT_CLASSIFICATION	0.9999999648963518	WITHOUT_CLASSIFICATION	3.510364814461474E-8	DEFECT
// ****	WITHOUT_CLASSIFICATION	0.9999609567874157	WITHOUT_CLASSIFICATION	3.904321258420474E-5	DEFECT
// **** We can not optimize.	WITHOUT_CLASSIFICATION	0.9999985294891967	WITHOUT_CLASSIFICATION	1.4705108034190275E-6	DEFECT
// **** We can not optimize.	WITHOUT_CLASSIFICATION	0.9999985294891967	WITHOUT_CLASSIFICATION	1.4705108034190275E-6	DEFECT
// ------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999933504980093	WITHOUT_CLASSIFICATION	6.649501990647554E-6	DEFECT
//blockNames in UNICODE 3.1 that supported by XML Schema REC             	WITHOUT_CLASSIFICATION	0.9998543783102283	WITHOUT_CLASSIFICATION	1.4562168977165987E-4	DEFECT
/*0000..007F;*/	WITHOUT_CLASSIFICATION	0.9993632089923019	WITHOUT_CLASSIFICATION	6.367910076979945E-4	DEFECT
/*0080..00FF;*/	WITHOUT_CLASSIFICATION	0.9988728061732632	WITHOUT_CLASSIFICATION	0.0011271938267367737	DEFECT
/*0100..017F;*/	WITHOUT_CLASSIFICATION	0.9989159554728636	WITHOUT_CLASSIFICATION	0.001084044527136351	DEFECT
/*0180..024F;*/	WITHOUT_CLASSIFICATION	0.9994187631961425	WITHOUT_CLASSIFICATION	5.812368038575095E-4	DEFECT
/*0250..02AF;*/	WITHOUT_CLASSIFICATION	0.9982458507384463	WITHOUT_CLASSIFICATION	0.0017541492615537604	DEFECT
/*02B0..02FF;*/	WITHOUT_CLASSIFICATION	0.998190480248988	WITHOUT_CLASSIFICATION	0.0018095197510119379	DEFECT
/*0300..036F;*/	WITHOUT_CLASSIFICATION	0.9990012410339242	WITHOUT_CLASSIFICATION	9.987589660758174E-4	DEFECT
/*0370..03FF;*/	WITHOUT_CLASSIFICATION	0.9990057582644248	WITHOUT_CLASSIFICATION	9.942417355751523E-4	DEFECT
/*0400..04FF;*/	WITHOUT_CLASSIFICATION	0.9991527853119081	WITHOUT_CLASSIFICATION	8.4721468809187E-4	DEFECT
/*0530..058F;*/	WITHOUT_CLASSIFICATION	0.9993015097814446	WITHOUT_CLASSIFICATION	6.984902185554464E-4	DEFECT
/*0600..06FF;*/	WITHOUT_CLASSIFICATION	0.9992488640595707	WITHOUT_CLASSIFICATION	7.511359404294164E-4	DEFECT
/*0700..074F;*/	WITHOUT_CLASSIFICATION	0.9992520810296066	WITHOUT_CLASSIFICATION	7.47918970393431E-4	DEFECT
/*0780..07BF;*/	WITHOUT_CLASSIFICATION	0.9986294798969644	WITHOUT_CLASSIFICATION	0.001370520103035722	DEFECT
/*0900..097F;*/	WITHOUT_CLASSIFICATION	0.998823037820092	WITHOUT_CLASSIFICATION	0.0011769621799080712	DEFECT
/*0980..09FF;*/	WITHOUT_CLASSIFICATION	0.9991674546793459	WITHOUT_CLASSIFICATION	8.325453206541906E-4	DEFECT
/*0A80..0AFF;*/	WITHOUT_CLASSIFICATION	0.9990349843980663	WITHOUT_CLASSIFICATION	9.650156019338333E-4	DEFECT
/*0B00..0B7F;*/	WITHOUT_CLASSIFICATION	0.9978830861786713	WITHOUT_CLASSIFICATION	0.002116913821328739	DEFECT
/*0B80..0BFF;*/	WITHOUT_CLASSIFICATION	0.9984267812469767	WITHOUT_CLASSIFICATION	0.0015732187530233027	DEFECT
/*0C00..0C7F;*/	WITHOUT_CLASSIFICATION	0.9994359484422248	WITHOUT_CLASSIFICATION	5.640515577751669E-4	DEFECT
/*0C80..0CFF;*/	WITHOUT_CLASSIFICATION	0.9995864252559169	WITHOUT_CLASSIFICATION	4.1357474408312334E-4	DEFECT
/*0D80..0DFF;*/	WITHOUT_CLASSIFICATION	0.9990596822414669	WITHOUT_CLASSIFICATION	9.403177585332236E-4	DEFECT
/*0E00..0E7F;*/	WITHOUT_CLASSIFICATION	0.9992115871088647	WITHOUT_CLASSIFICATION	7.884128911353481E-4	DEFECT
/*0E80..0EFF;*/	WITHOUT_CLASSIFICATION	0.9993981416799593	WITHOUT_CLASSIFICATION	6.018583200407573E-4	DEFECT
/*0F00..0FFF;*/	WITHOUT_CLASSIFICATION	0.9991473445982589	WITHOUT_CLASSIFICATION	8.526554017410538E-4	DEFECT
/*1000..109F;*/	WITHOUT_CLASSIFICATION	0.9987007814933672	WITHOUT_CLASSIFICATION	0.001299218506632856	DEFECT
/*1100..11FF;*/	WITHOUT_CLASSIFICATION	0.9993854680574045	WITHOUT_CLASSIFICATION	6.14531942595552E-4	DEFECT
/*1200..137F;*/	WITHOUT_CLASSIFICATION	0.9980964915848582	WITHOUT_CLASSIFICATION	0.0019035084151417581	DEFECT
/*13A0..13FF;*/	WITHOUT_CLASSIFICATION	0.9992521034713834	WITHOUT_CLASSIFICATION	7.478965286166537E-4	DEFECT
/*1400..167F;*/	WITHOUT_CLASSIFICATION	0.9991578164918242	WITHOUT_CLASSIFICATION	8.421835081757695E-4	DEFECT
/*1680..169F;*/	WITHOUT_CLASSIFICATION	0.9993707604901758	WITHOUT_CLASSIFICATION	6.292395098241058E-4	DEFECT
/*1780..17FF;*/	WITHOUT_CLASSIFICATION	0.9990217122105353	WITHOUT_CLASSIFICATION	9.782877894647856E-4	DEFECT
/*1800..18AF;*/	WITHOUT_CLASSIFICATION	0.9989102076130293	WITHOUT_CLASSIFICATION	0.0010897923869706734	DEFECT
/*1E00..1EFF;*/	WITHOUT_CLASSIFICATION	0.9992774536904446	WITHOUT_CLASSIFICATION	7.225463095553436E-4	DEFECT
/*1F00..1FFF;*/	WITHOUT_CLASSIFICATION	0.9991878904962442	WITHOUT_CLASSIFICATION	8.121095037558745E-4	DEFECT
/*2070..209F;*/	WITHOUT_CLASSIFICATION	0.9989172959371205	WITHOUT_CLASSIFICATION	0.0010827040628794739	DEFECT
/*20A0..20CF;*/	WITHOUT_CLASSIFICATION	0.9992457240908874	WITHOUT_CLASSIFICATION	7.542759091125614E-4	DEFECT
/*20D0..20FF;*/	WITHOUT_CLASSIFICATION	0.9985817153915406	WITHOUT_CLASSIFICATION	0.0014182846084594086	DEFECT
/*2100..214F;*/	WITHOUT_CLASSIFICATION	0.998950630842525	WITHOUT_CLASSIFICATION	0.0010493691574749672	DEFECT
/*2150..218F;*/	WITHOUT_CLASSIFICATION	0.9989753751310384	WITHOUT_CLASSIFICATION	0.0010246248689615837	DEFECT
/*2200..22FF;*/	WITHOUT_CLASSIFICATION	0.9982910490483242	WITHOUT_CLASSIFICATION	0.0017089509516757843	DEFECT
/*2300..23FF;*/	WITHOUT_CLASSIFICATION	0.9988584379884208	WITHOUT_CLASSIFICATION	0.0011415620115792936	DEFECT
/*2400..243F;*/	WITHOUT_CLASSIFICATION	0.9988195544605916	WITHOUT_CLASSIFICATION	0.0011804455394084827	DEFECT
/*2440..245F;*/	WITHOUT_CLASSIFICATION	0.9988528317482743	WITHOUT_CLASSIFICATION	0.0011471682517257057	DEFECT
/*2460..24FF;*/	WITHOUT_CLASSIFICATION	0.9993683549660706	WITHOUT_CLASSIFICATION	6.316450339294167E-4	DEFECT
/*2580..259F;*/	WITHOUT_CLASSIFICATION	0.9983902462529212	WITHOUT_CLASSIFICATION	0.0016097537470788283	DEFECT
/*25A0..25FF;*/	WITHOUT_CLASSIFICATION	0.998513036691768	WITHOUT_CLASSIFICATION	0.001486963308231918	DEFECT
/*2600..26FF;*/	WITHOUT_CLASSIFICATION	0.9990213510368688	WITHOUT_CLASSIFICATION	9.786489631312004E-4	DEFECT
/*2700..27BF;*/	WITHOUT_CLASSIFICATION	0.9968381095862485	WITHOUT_CLASSIFICATION	0.0031618904137515253	DEFECT
/*2800..28FF;*/	WITHOUT_CLASSIFICATION	0.9987108809524584	WITHOUT_CLASSIFICATION	0.001289119047541645	DEFECT
/*2E80..2EFF;*/	WITHOUT_CLASSIFICATION	0.9992066342344649	WITHOUT_CLASSIFICATION	7.933657655351462E-4	DEFECT
/*2F00..2FDF;*/	WITHOUT_CLASSIFICATION	0.9985875477434353	WITHOUT_CLASSIFICATION	0.001412452256564728	DEFECT
/*3000..303F;*/	WITHOUT_CLASSIFICATION	0.9987377931150265	WITHOUT_CLASSIFICATION	0.0012622068849735225	DEFECT
/*3040..309F;*/	WITHOUT_CLASSIFICATION	0.999242940509496	WITHOUT_CLASSIFICATION	7.570594905039912E-4	DEFECT
/*30A0..30FF;*/	WITHOUT_CLASSIFICATION	0.9992428612998567	WITHOUT_CLASSIFICATION	7.571387001432707E-4	DEFECT
/*3100..312F;*/	WITHOUT_CLASSIFICATION	0.9988291810612016	WITHOUT_CLASSIFICATION	0.0011708189387984952	DEFECT
/*3130..318F;*/	WITHOUT_CLASSIFICATION	0.9994561638893473	WITHOUT_CLASSIFICATION	5.438361106527238E-4	DEFECT
/*31A0..31BF;*/	WITHOUT_CLASSIFICATION	0.9982374058605906	WITHOUT_CLASSIFICATION	0.0017625941394093265	DEFECT
/*3200..32FF;*/	WITHOUT_CLASSIFICATION	0.9981747980092175	WITHOUT_CLASSIFICATION	0.0018252019907825353	DEFECT
/*3300..33FF;*/	WITHOUT_CLASSIFICATION	0.9991730612013239	WITHOUT_CLASSIFICATION	8.269387986761417E-4	DEFECT
/*3400..4DB5;*/	WITHOUT_CLASSIFICATION	0.9966763947410038	WITHOUT_CLASSIFICATION	0.0033236052589961673	DEFECT
/*4E00..9FFF;*/	WITHOUT_CLASSIFICATION	0.9993123249972163	WITHOUT_CLASSIFICATION	6.876750027835952E-4	DEFECT
/*A490..A4CF;*/	WITHOUT_CLASSIFICATION	0.9995535103354599	WITHOUT_CLASSIFICATION	4.464896645401329E-4	DEFECT
/*AC00..D7A3;*/	WITHOUT_CLASSIFICATION	0.9990870531307625	WITHOUT_CLASSIFICATION	9.129468692374612E-4	DEFECT
/*E000..F8FF;*/	WITHOUT_CLASSIFICATION	0.9991417705957494	WITHOUT_CLASSIFICATION	8.582294042505033E-4	DEFECT
/*F900..FAFF;*/	WITHOUT_CLASSIFICATION	0.9985574838136646	WITHOUT_CLASSIFICATION	0.0014425161863354304	DEFECT
/*FB00..FB4F;*/	WITHOUT_CLASSIFICATION	0.9982127122798566	WITHOUT_CLASSIFICATION	0.001787287720143373	DEFECT
/*FE20..FE2F;*/	WITHOUT_CLASSIFICATION	0.999202667143677	WITHOUT_CLASSIFICATION	7.973328563229406E-4	DEFECT
/*FE30..FE4F;*/	WITHOUT_CLASSIFICATION	0.9995252818714708	WITHOUT_CLASSIFICATION	4.747181285291047E-4	DEFECT
/*FE50..FE6F;*/	WITHOUT_CLASSIFICATION	0.9992647428537608	WITHOUT_CLASSIFICATION	7.352571462392654E-4	DEFECT
/*FE70..FEFE;*/	WITHOUT_CLASSIFICATION	0.9994058216521642	WITHOUT_CLASSIFICATION	5.941783478357973E-4	DEFECT
/*FEFF..FEFF;*/	WITHOUT_CLASSIFICATION	0.9994778004479983	WITHOUT_CLASSIFICATION	5.221995520017348E-4	DEFECT
/*10300..1032F;*/	WITHOUT_CLASSIFICATION	0.9986261736360801	WITHOUT_CLASSIFICATION	0.0013738263639199672	DEFECT
/*10330..1034F;*/	WITHOUT_CLASSIFICATION	0.9992295123120657	WITHOUT_CLASSIFICATION	7.704876879341816E-4	DEFECT
/*10400..1044F;*/	WITHOUT_CLASSIFICATION	0.9991937964697767	WITHOUT_CLASSIFICATION	8.062035302233059E-4	DEFECT
/*1D000..1D0FF;*/	WITHOUT_CLASSIFICATION	0.9986901849087985	WITHOUT_CLASSIFICATION	0.0013098150912015736	DEFECT
/*1D100..1D1FF;*/	WITHOUT_CLASSIFICATION	0.9988923305900115	WITHOUT_CLASSIFICATION	0.001107669409988591	DEFECT
/*20000..2A6D6;*/	WITHOUT_CLASSIFICATION	0.997050201003035	WITHOUT_CLASSIFICATION	0.0029497989969650344	DEFECT
/*2F800..2FA1F;*/	WITHOUT_CLASSIFICATION	0.9984586990091853	WITHOUT_CLASSIFICATION	0.0015413009908147974	DEFECT
/*E0000..E007F;*/	WITHOUT_CLASSIFICATION	0.9994965634390534	WITHOUT_CLASSIFICATION	5.034365609466189E-4	DEFECT
//missing 2 private use add manually	WITHOUT_CLASSIFICATION	0.9999728525654813	WITHOUT_CLASSIFICATION	2.7147434518762733E-5	DEFECT
// 84	WITHOUT_CLASSIFICATION	0.9999928425896313	WITHOUT_CLASSIFICATION	7.157410368718145E-6	DEFECT
//build table of Pi values	WITHOUT_CLASSIFICATION	0.99999974917917	WITHOUT_CLASSIFICATION	2.5082082993981043E-7	DEFECT
//build table of Pf values	WITHOUT_CLASSIFICATION	0.9999997461427452	WITHOUT_CLASSIFICATION	2.5385725481787375E-7	DEFECT
// for all characters	WITHOUT_CLASSIFICATION	0.999999990025285	WITHOUT_CLASSIFICATION	9.974715044627906E-9	DEFECT
// Unassigned	WITHOUT_CLASSIFICATION	0.9999998781563351	WITHOUT_CLASSIFICATION	1.2184366489210253E-7	DEFECT
// TR#18 1.2	WITHOUT_CLASSIFICATION	0.9999939528735374	WITHOUT_CLASSIFICATION	6.047126462548211E-6	DEFECT
// Z	WITHOUT_CLASSIFICATION	0.9999917440288693	WITHOUT_CLASSIFICATION	8.255971130692848E-6	DEFECT
// Lu Ll Lo Nd	WITHOUT_CLASSIFICATION	0.9999983017148913	WITHOUT_CLASSIFICATION	1.6982851086435277E-6	DEFECT
// Perl extension	WITHOUT_CLASSIFICATION	0.999996736061023	WITHOUT_CLASSIFICATION	3.2639389770404645E-6	DEFECT
//this.setLocale(locale);	WITHOUT_CLASSIFICATION	0.9999997458944297	WITHOUT_CLASSIFICATION	2.54105570214818E-7	DEFECT
// X+ -> XX*	WITHOUT_CLASSIFICATION	0.9998820887660441	WITHOUT_CLASSIFICATION	1.1791123395589053E-4	DEFECT
// X? -> X|	WITHOUT_CLASSIFICATION	0.9999789219540056	WITHOUT_CLASSIFICATION	2.1078045994364805E-5	DEFECT
// Skips ')'	WITHOUT_CLASSIFICATION	0.9999972083357034	WITHOUT_CLASSIFICATION	2.791664296709088E-6	DEFECT
// '['	WITHOUT_CLASSIFICATION	0.9999933893273237	WITHOUT_CLASSIFICATION	6.610672676304341E-6	DEFECT
// '^'	WITHOUT_CLASSIFICATION	0.9999918385876289	WITHOUT_CLASSIFICATION	8.161412371098E-6	DEFECT
// Skips ']'	WITHOUT_CLASSIFICATION	0.9999981109044663	WITHOUT_CLASSIFICATION	1.8890955336389987E-6	DEFECT
// for STRING	WITHOUT_CLASSIFICATION	0.9999994024260118	WITHOUT_CLASSIFICATION	5.975739881527572E-7	DEFECT
// ------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999933504980093	WITHOUT_CLASSIFICATION	6.649501990647554E-6	DEFECT
// \pM* // \PM + \pM*	WITHOUT_CLASSIFICATION	0.9999883456046256	WITHOUT_CLASSIFICATION	1.1654395374424905E-5	DEFECT
// Lu // Ll // Lo	WITHOUT_CLASSIFICATION	0.9999951517699788	WITHOUT_CLASSIFICATION	4.8482300212333304E-6	DEFECT
// Lu Ll Lo // Nd	WITHOUT_CLASSIFICATION	0.9999988801185798	WITHOUT_CLASSIFICATION	1.1198814202446735E-6	DEFECT
// synchronized // if null	WITHOUT_CLASSIFICATION	0.9999998306538492	WITHOUT_CLASSIFICATION	1.6934615075555898E-7	DEFECT
//DEBUG //System.err.println("isRegisterNonXS: "+name);	WITHOUT_CLASSIFICATION	0.9998887895014449	WITHOUT_CLASSIFICATION	1.1121049855503509E-4	DEFECT
// [{ASSIGNED}]-[{M},{C}]	WITHOUT_CLASSIFICATION	0.9999989854029693	WITHOUT_CLASSIFICATION	1.014597030682176E-6	DEFECT
// hangul_medial and hangul_final // extras	WITHOUT_CLASSIFICATION	0.9999999227193442	WITHOUT_CLASSIFICATION	7.728065575859467E-8	DEFECT
// base_char?	WITHOUT_CLASSIFICATION	0.9999999813409659	WITHOUT_CLASSIFICATION	1.865903402374364E-8	DEFECT
//case 0x0b:  ret = "\\v";  break;	WITHOUT_CLASSIFICATION	0.9999870034134793	WITHOUT_CLASSIFICATION	1.2996586520767964E-5	DEFECT
// This is CONCAT, and new child is CONCAT.	WITHOUT_CLASSIFICATION	0.9999988540361077	WITHOUT_CLASSIFICATION	1.1459638923112008E-6	DEFECT
// Recursion	WITHOUT_CLASSIFICATION	0.999997951338307	WITHOUT_CLASSIFICATION	2.0486616929663485E-6	DEFECT
//System.err.println("Merge '"+previous+"' and '"+tok+"'.");	WITHOUT_CLASSIFICATION	0.9999998514941378	WITHOUT_CLASSIFICATION	1.4850586211339568E-7	DEFECT
// Replace previous token by STRING	WITHOUT_CLASSIFICATION	0.9999724294179247	WITHOUT_CLASSIFICATION	2.7570582075170885E-5	DEFECT
// Subraction	WITHOUT_CLASSIFICATION	0.999998043181351	WITHOUT_CLASSIFICATION	1.9568186489250095E-6	DEFECT
// Exit this loop	WITHOUT_CLASSIFICATION	0.9999936564210471	WITHOUT_CLASSIFICATION	6.34357895291544E-6	DEFECT
// if not shorthands...	WITHOUT_CLASSIFICATION	0.9999952194479064	WITHOUT_CLASSIFICATION	4.780552093555547E-6	DEFECT
// Here is no '-'.	WITHOUT_CLASSIFICATION	0.9999993087927855	WITHOUT_CLASSIFICATION	6.912072144914E-7	DEFECT
// c '-' ']' -> '-' is a single-range.	WITHOUT_CLASSIFICATION	0.9999996994410231	WITHOUT_CLASSIFICATION	3.0055897700232546E-7	DEFECT
// if - is at the last position of the group	WITHOUT_CLASSIFICATION	0.9999673316724497	WITHOUT_CLASSIFICATION	3.266832755030874E-5	DEFECT
// LINE FEED U+000A	WITHOUT_CLASSIFICATION	0.9999953769417721	WITHOUT_CLASSIFICATION	4.623058227918257E-6	DEFECT
// CRRIAGE RETURN U+000D	WITHOUT_CLASSIFICATION	0.9999989887161459	WITHOUT_CLASSIFICATION	1.0112838540535175E-6	DEFECT
// HORIZONTAL TABULATION U+0009	WITHOUT_CLASSIFICATION	0.9999928901916031	WITHOUT_CLASSIFICATION	7.109808397025599E-6	DEFECT
// return actucal char	WITHOUT_CLASSIFICATION	0.9999998905491995	WITHOUT_CLASSIFICATION	1.0945080061484493E-7	DEFECT
// \ + c // backsolidus	WITHOUT_CLASSIFICATION	0.9999998129102603	WITHOUT_CLASSIFICATION	1.8708973962394204E-7	DEFECT
// Found '-' // Is this '-' is a from-to token?? // Skips '-'	WITHOUT_CLASSIFICATION	0.9999881872836188	WITHOUT_CLASSIFICATION	1.1812716381290812E-5	DEFECT
// getIANA2JavaMapping(String):String	WITHOUT_CLASSIFICATION	0.9999913319130214	WITHOUT_CLASSIFICATION	8.668086978676549E-6	DEFECT
// This implementation was changed to not introduce multi line content.	WITHOUT_CLASSIFICATION	0.9999080823580919	WITHOUT_CLASSIFICATION	9.191764190812336E-5	DEFECT
// form integral number of 6-bit groups	WITHOUT_CLASSIFICATION	0.9999999185216861	WITHOUT_CLASSIFICATION	8.147831386099977E-8	DEFECT
//encodedData[encodedIndex] = 0xa;	WITHOUT_CLASSIFICATION	0.9999682212260299	WITHOUT_CLASSIFICATION	3.177877397006125E-5	DEFECT
// remove white spaces	WITHOUT_CLASSIFICATION	0.9999998090249954	WITHOUT_CLASSIFICATION	1.9097500463092315E-7	DEFECT
//should be divisible by four	WITHOUT_CLASSIFICATION	0.9999982680159292	WITHOUT_CLASSIFICATION	1.7319840709033135E-6	DEFECT
//if found "no data" just return null	WITHOUT_CLASSIFICATION	0.9999999939172622	WITHOUT_CLASSIFICATION	6.082737771093998E-9	DEFECT
//if found "no data" just return null	WITHOUT_CLASSIFICATION	0.9999999939172622	WITHOUT_CLASSIFICATION	6.082737771093998E-9	DEFECT
//Check if they are PAD characters //Two PAD e.g. 3c[Pad][Pad] //last 4 bits should be zero	WITHOUT_CLASSIFICATION	0.9999999967207915	WITHOUT_CLASSIFICATION	3.279208499723183E-9	DEFECT
//One PAD  e.g. 3cQ[Pad]	WITHOUT_CLASSIFICATION	0.9999989916423511	WITHOUT_CLASSIFICATION	1.0083576489732837E-6	DEFECT
//last 2 bits should be zero	WITHOUT_CLASSIFICATION	0.9999969444570269	WITHOUT_CLASSIFICATION	3.05554297307575E-6	DEFECT
//an error  like "3c[Pad]r", "3cdX", "3cXd", "3cXX" where X is non data	WITHOUT_CLASSIFICATION	0.9937403888446363	WITHOUT_CLASSIFICATION	0.006259611155363665	DEFECT
//No PAD e.g 3cQl	WITHOUT_CLASSIFICATION	0.9999908488026671	WITHOUT_CLASSIFICATION	9.15119733297196E-6	DEFECT
// count characters that's not whitespace	WITHOUT_CLASSIFICATION	0.9999999527505319	WITHOUT_CLASSIFICATION	4.724946811653196E-8	DEFECT
/* * format validation * * This class encodes/decodes hexadecimal data * @author Jeffrey Rodriguez */	WITHOUT_CLASSIFICATION	0.999393101897054	WITHOUT_CLASSIFICATION	6.068981029460183E-4	DEFECT
// add IANA to Java encoding mappings.	WITHOUT_CLASSIFICATION	0.9999960984282966	WITHOUT_CLASSIFICATION	3.901571703413817E-6	DEFECT
// proposed addition (see above for details):	WITHOUT_CLASSIFICATION	0.999937966037081	WITHOUT_CLASSIFICATION	6.2033962919043E-5	DEFECT
// Add support for Cp1252 and its friends	WITHOUT_CLASSIFICATION	0.9999957595352076	WITHOUT_CLASSIFICATION	4.240464792415564E-6	DEFECT
// <clinit>()	WITHOUT_CLASSIFICATION	0.9999987335944928	WITHOUT_CLASSIFICATION	1.2664055072292825E-6	DEFECT
// added since this encoding only differs w.r.t. presentation 	WITHOUT_CLASSIFICATION	0.9999992030340655	WITHOUT_CLASSIFICATION	7.969659343984502E-7	DEFECT
// removeIANA2JavaMapping(String):String	WITHOUT_CLASSIFICATION	0.999975008299757	WITHOUT_CLASSIFICATION	2.4991700243061495E-5	DEFECT
// putIANA2JavaMapping(String,String)	WITHOUT_CLASSIFICATION	0.9999985213306075	WITHOUT_CLASSIFICATION	1.4786693925327688E-6	DEFECT
// putJava2IANAMapping(String,String)	WITHOUT_CLASSIFICATION	0.9999986828575029	WITHOUT_CLASSIFICATION	1.3171424970871933E-6	DEFECT
// getJava2IANAMapping(String):String	WITHOUT_CLASSIFICATION	0.9999943199996646	WITHOUT_CLASSIFICATION	5.6800003354848195E-6	DEFECT
// Adding new aliases as proposed in // http://lists.w3.org/Archives/Public/ietf-charset/2002JulSep/0058.html	WITHOUT_CLASSIFICATION	0.9999995898712678	WITHOUT_CLASSIFICATION	4.1012873219047573E-7	DEFECT
// REVISIT: //   j:CNS11643 -> EUC-TW? //   ISO-2022-CN? ISO-2022-CN-EXT?	WITHOUT_CLASSIFICATION	0.9999572044167656	WITHOUT_CLASSIFICATION	4.279558323438403E-5	DEFECT
// add Java to IANA encoding mappings //fJava2IANAMap.put("8859_1",    "US-ASCII"); // ?	WITHOUT_CLASSIFICATION	0.9999952595336274	WITHOUT_CLASSIFICATION	4.740466372506487E-6	DEFECT
// // Public static methods //	WITHOUT_CLASSIFICATION	0.9999999719765144	WITHOUT_CLASSIFICATION	2.8023485748291568E-8	DEFECT
// removeJava2IANAMapping	WITHOUT_CLASSIFICATION	0.9999959810419567	WITHOUT_CLASSIFICATION	4.018958043255414E-6	DEFECT
// class EncodingMap	WITHOUT_CLASSIFICATION	0.9999890957856091	WITHOUT_CLASSIFICATION	1.0904214390952524E-5	DEFECT
//RFC 2732 added '[' and ']' as reserved characters	WITHOUT_CLASSIFICATION	0.9999999841557053	WITHOUT_CLASSIFICATION	1.5844294657127476E-8	DEFECT
// Add ASCII Digits and ASCII Hex Numbers	WITHOUT_CLASSIFICATION	0.9999999076081274	WITHOUT_CLASSIFICATION	9.239187255791324E-8	DEFECT
// Add ASCII Letters and ASCII Hex Numbers	WITHOUT_CLASSIFICATION	0.9999999223561997	WITHOUT_CLASSIFICATION	7.764380023853464E-8	DEFECT
// Add ASCII Letters	WITHOUT_CLASSIFICATION	0.9999998851259321	WITHOUT_CLASSIFICATION	1.1487406793862658E-7	DEFECT
// Add Reserved Characters	WITHOUT_CLASSIFICATION	0.9999999983508778	WITHOUT_CLASSIFICATION	1.6491222283647247E-9	DEFECT
// Add Mark Characters	WITHOUT_CLASSIFICATION	0.9999999965284493	WITHOUT_CLASSIFICATION	3.4715505961883594E-9	DEFECT
// Add Scheme Characters	WITHOUT_CLASSIFICATION	0.9999999990638744	WITHOUT_CLASSIFICATION	9.361255719837483E-10	DEFECT
// Add Path Characters	WITHOUT_CLASSIFICATION	0.9999999943626711	WITHOUT_CLASSIFICATION	5.637328887727678E-9	DEFECT
// Just use null.	WITHOUT_CLASSIFICATION	0.9999993856463578	WITHOUT_CLASSIFICATION	6.143536422486028E-7	DEFECT
// just make a copy of the base if spec is empty	WITHOUT_CLASSIFICATION	0.9999999763753438	WITHOUT_CLASSIFICATION	2.3624656312046366E-8	DEFECT
// search backwards starting from character before ':'.	WITHOUT_CLASSIFICATION	0.9999998561476363	WITHOUT_CLASSIFICATION	1.4385236379759855E-7	DEFECT
// Neither 'scheme:' or 'scheme:#fragment' are valid URIs.	WITHOUT_CLASSIFICATION	0.9999999887375892	WITHOUT_CLASSIFICATION	1.1262410691519374E-8	DEFECT
// Authority will be everything up to path, query or fragment	WITHOUT_CLASSIFICATION	0.9999820350110038	WITHOUT_CLASSIFICATION	1.79649889962765E-5	DEFECT
// Attempt to parse authority. If the section is an empty string // this is a valid server based authority, so set the host to this // value.	WITHOUT_CLASSIFICATION	0.9999991821507159	WITHOUT_CLASSIFICATION	8.178492841324539E-7	DEFECT
// Resolve relative URI to base URI - see RFC 2396 Section 5.2 // In some cases, it might make more sense to throw an exception // (when scheme is specified is the string spec and the base URI // is also specified, for example), but we're just following the // RFC specifications	WITHOUT_CLASSIFICATION	0.9999931114609545	WITHOUT_CLASSIFICATION	6.888539045564885E-6	DEFECT
// check for absolute path - RFC 2396 5.2 #5	WITHOUT_CLASSIFICATION	0.9999995376226849	WITHOUT_CLASSIFICATION	4.6237731522406985E-7	DEFECT
// 6a - get all but the last segment of the base URI path	WITHOUT_CLASSIFICATION	0.9999861297091934	WITHOUT_CLASSIFICATION	1.387029080655582E-5	DEFECT
// check for scheme - RFC 2396 5.2 #3 // if we found a scheme, it means absolute URI, so we're done	WITHOUT_CLASSIFICATION	0.9999999958484614	WITHOUT_CLASSIFICATION	4.151538557880183E-9	DEFECT
// check for authority - RFC 2396 5.2 #4 // if we found a host, then we've got a network path, so we're done	WITHOUT_CLASSIFICATION	0.9999974113477048	WITHOUT_CLASSIFICATION	2.588652295046272E-6	DEFECT
// if we get to this point, we need to resolve relative path // RFC 2396 5.2 #6	WITHOUT_CLASSIFICATION	0.9999941045051444	WITHOUT_CLASSIFICATION	5.895494855645644E-6	DEFECT
// 6b - append the relative URI path	WITHOUT_CLASSIFICATION	0.9999941194261668	WITHOUT_CLASSIFICATION	5.880573833224196E-6	DEFECT
// 6c - remove all "./" where "." is a complete path segment	WITHOUT_CLASSIFICATION	0.9997392414847199	WITHOUT_CLASSIFICATION	2.6075851527999406E-4	DEFECT
// 6d - remove "." if path ends with "." as a complete path segment	WITHOUT_CLASSIFICATION	0.9999432392885363	WITHOUT_CLASSIFICATION	5.676071146365057E-5	DEFECT
// 6f - remove ending "<segment>/.." where "<segment>" is a // complete path segment	WITHOUT_CLASSIFICATION	0.9977417099362855	WITHOUT_CLASSIFICATION	0.0022582900637144435	DEFECT
// userinfo is everything up to @	WITHOUT_CLASSIFICATION	0.9999993526226595	WITHOUT_CLASSIFICATION	6.473773405435013E-7	DEFECT
// host is everything up to last ':', or up to  // and including ']' if followed by ':'.	WITHOUT_CLASSIFICATION	0.999999979104053	WITHOUT_CLASSIFICATION	2.0895947021238356E-8	DEFECT
// port	WITHOUT_CLASSIFICATION	0.9999928003613459	WITHOUT_CLASSIFICATION	7.199638654165393E-6	DEFECT
// Check if the host is well formed.	WITHOUT_CLASSIFICATION	0.9999999956713069	WITHOUT_CLASSIFICATION	4.328693071256383E-9	DEFECT
// Check that port is well formed if it exists. // REVISIT: There's no restriction on port value ranges, but // perform the same check as in setPort to be consistent. Pass // in a string to this method instead of an integer.	WITHOUT_CLASSIFICATION	0.9999999529558504	WITHOUT_CLASSIFICATION	4.7044149542782774E-8	DEFECT
// Check that userinfo is well formed if it exists.	WITHOUT_CLASSIFICATION	0.9999999967199895	WITHOUT_CLASSIFICATION	3.280010536303851E-9	DEFECT
// Userinfo can contain alphanumerics, mark characters, escaped // and ';',':','&','=','+','$',','	WITHOUT_CLASSIFICATION	0.9999999988115108	WITHOUT_CLASSIFICATION	1.1884891719367852E-9	DEFECT
// check for valid escape sequence	WITHOUT_CLASSIFICATION	0.9999999755599709	WITHOUT_CLASSIFICATION	2.4440029108050625E-8	DEFECT
// can check against path characters because the set // is the same except for '/' which we've already excluded.	WITHOUT_CLASSIFICATION	0.9999999999270742	WITHOUT_CLASSIFICATION	7.292576215109963E-11	DEFECT
// path - everything up to query string or fragment	WITHOUT_CLASSIFICATION	0.9999998464989617	WITHOUT_CLASSIFICATION	1.5350103837151717E-7	DEFECT
// RFC 2732 only allows '[' and ']' to appear in the opaque part.	WITHOUT_CLASSIFICATION	0.999543915168569	WITHOUT_CLASSIFICATION	4.56084831431113E-4	DEFECT
// Scan path. // abs_path = "/"  path_segments // rel_path = rel_segment [ abs_path ]	WITHOUT_CLASSIFICATION	0.9999999575713868	WITHOUT_CLASSIFICATION	4.2428613245746984E-8	DEFECT
// Path segments cannot contain '[' or ']' since pchar // production was not changed by RFC 2732.	WITHOUT_CLASSIFICATION	0.9999964476378836	WITHOUT_CLASSIFICATION	3.5523621163957743E-6	DEFECT
// Scan opaque part. // opaque_part = uric_no_slash *uric	WITHOUT_CLASSIFICATION	0.9999999473425923	WITHOUT_CLASSIFICATION	5.2657407730723154E-8	DEFECT
// query - starts with ? and up to fragment or end	WITHOUT_CLASSIFICATION	0.9999923340998804	WITHOUT_CLASSIFICATION	7.66590011956555E-6	DEFECT
// fragment - starts with #	WITHOUT_CLASSIFICATION	0.999999634530693	WITHOUT_CLASSIFICATION	3.654693069474087E-7	DEFECT
// Server based authority.	WITHOUT_CLASSIFICATION	0.9999999099968021	WITHOUT_CLASSIFICATION	9.000319792204055E-8	DEFECT
// the second hex character if a character needs to be escaped	WITHOUT_CLASSIFICATION	0.9999939963216649	WITHOUT_CLASSIFICATION	6.0036783351670295E-6	DEFECT
// Registry based authority.	WITHOUT_CLASSIFICATION	0.9999994971627135	WITHOUT_CLASSIFICATION	5.028372864293056E-7	DEFECT
// reg_name = 1*( unreserved | escaped | "$" | "," |  //            ";" | ":" | "@" | "&" | "=" | "+" )	WITHOUT_CLASSIFICATION	0.9999996001224936	WITHOUT_CLASSIFICATION	3.9987750646152E-7	DEFECT
// presence of the host (whether valid or empty) means // double-slashes which means generic uri	WITHOUT_CLASSIFICATION	0.9999999889527009	WITHOUT_CLASSIFICATION	1.1047299002196792E-8	DEFECT
// Check if the host is a valid IPv6reference.	WITHOUT_CLASSIFICATION	0.9999999620512772	WITHOUT_CLASSIFICATION	3.794872285665122E-8	DEFECT
// Cannot start with a '.', '-', or end with a '-'.	WITHOUT_CLASSIFICATION	0.9999970870290275	WITHOUT_CLASSIFICATION	2.912970972541829E-6	DEFECT
// rightmost domain label starting with digit indicates IP address // since top level domain label can only start with an alpha // see RFC 2396 Section 3.2.2	WITHOUT_CLASSIFICATION	0.9999986345283093	WITHOUT_CLASSIFICATION	1.3654716907088225E-6	DEFECT
// hostname      = *( domainlabel "." ) toplabel [ "." ] // domainlabel   = alphanum | alphanum *( alphanum | "-" ) alphanum // toplabel      = alpha | alpha *( alphanum | "-" ) alphanum	WITHOUT_CLASSIFICATION	0.999999993549752	WITHOUT_CLASSIFICATION	6.45024796902569E-9	DEFECT
// RFC 2396 states that hostnames take the form described in  // RFC 1034 (Section 3) and RFC 1123 (Section 2.1). According // to RFC 1034, hostnames are limited to 255 characters.	WITHOUT_CLASSIFICATION	0.9999992445749525	WITHOUT_CLASSIFICATION	7.554250474472866E-7	DEFECT
// domain labels can contain alphanumerics and '-" // but must start and end with an alphanumeric	WITHOUT_CLASSIFICATION	0.9999970270368795	WITHOUT_CLASSIFICATION	2.9729631205849387E-6	DEFECT
// RFC 1034: Labels must be 63 characters or less.	WITHOUT_CLASSIFICATION	0.9999998884886159	WITHOUT_CLASSIFICATION	1.1151138415390838E-7	DEFECT
// Check that that there are no more than three digits // in this segment.	WITHOUT_CLASSIFICATION	0.9999994034232901	WITHOUT_CLASSIFICATION	5.965767099397145E-7	DEFECT
// Check that this segment is not greater than 255.	WITHOUT_CLASSIFICATION	0.9997537622332107	WITHOUT_CLASSIFICATION	2.462377667893359E-4	DEFECT
// Check if string is a potential match for IPv6reference.	WITHOUT_CLASSIFICATION	0.9999998861916234	WITHOUT_CLASSIFICATION	1.13808376539554E-7	DEFECT
// Counter for the number of 16-bit sections read in the address.	WITHOUT_CLASSIFICATION	0.9999996198863735	WITHOUT_CLASSIFICATION	3.801136264573039E-7	DEFECT
// Scan hex sequence before possible '::' or IPv4 address.	WITHOUT_CLASSIFICATION	0.9996631468407078	WITHOUT_CLASSIFICATION	3.3685315929222353E-4	DEFECT
// Address must contain 128-bits of information.	WITHOUT_CLASSIFICATION	0.9999999731514132	WITHOUT_CLASSIFICATION	2.6848586771746453E-8	DEFECT
// '::' represents at least one 16-bit group of zeros.	WITHOUT_CLASSIFICATION	0.9999999123517012	WITHOUT_CLASSIFICATION	8.764829889162312E-8	DEFECT
// Trailing zeros will fill out the rest of the address.	WITHOUT_CLASSIFICATION	0.9999990600776647	WITHOUT_CLASSIFICATION	9.399223352865391E-7	DEFECT
// If the second character wasn't ':', in order to be valid, // the remainder of the string must match IPv4Address,  // and we must have read exactly 6 16-bit groups.	WITHOUT_CLASSIFICATION	0.9999937343304031	WITHOUT_CLASSIFICATION	6.265669596904028E-6	DEFECT
// 3. Scan hex sequence after '::'.	WITHOUT_CLASSIFICATION	0.9999921722051045	WITHOUT_CLASSIFICATION	7.827794895438402E-6	DEFECT
// We've either reached the end of the string, the address ends in // an IPv4 address, or it is invalid. scanHexSequence has already  // made sure that we have the right number of bits. 	WITHOUT_CLASSIFICATION	0.9999999887371127	WITHOUT_CLASSIFICATION	1.1262887242969502E-8	DEFECT
// IPv6 addresses are 128-bit, so there can be at most eight sections.	WITHOUT_CLASSIFICATION	0.9999910343425901	WITHOUT_CLASSIFICATION	8.965657410027437E-6	DEFECT
// This could be '::'.	WITHOUT_CLASSIFICATION	0.9999657009234173	WITHOUT_CLASSIFICATION	3.4299076582731216E-5	DEFECT
// There can be at most 4 hex digits per group.	WITHOUT_CLASSIFICATION	0.9998594302344527	WITHOUT_CLASSIFICATION	1.4056976554739986E-4	DEFECT
// which ASCII characters need to be escaped	WITHOUT_CLASSIFICATION	0.999999979816641	WITHOUT_CLASSIFICATION	2.01833590366302E-8	DEFECT
// // Static initialization //	WITHOUT_CLASSIFICATION	0.9999992001234044	WITHOUT_CLASSIFICATION	7.99876595551373E-7	DEFECT
// we saw some non-ascii character	WITHOUT_CLASSIFICATION	0.999999993253627	WITHOUT_CLASSIFICATION	6.746372962014577E-9	DEFECT
// for each byte	WITHOUT_CLASSIFICATION	0.9999997812719656	WITHOUT_CLASSIFICATION	2.187280342760379E-7	DEFECT
// for non-ascii character: make it positive, then escape	WITHOUT_CLASSIFICATION	0.999997765354388	WITHOUT_CLASSIFICATION	2.2346456119428084E-6	DEFECT
// should never happen	WITHOUT_CLASSIFICATION	0.9999997490003434	WITHOUT_CLASSIFICATION	2.5099965662737484E-7	DEFECT
// isValidName(String):boolean	WITHOUT_CLASSIFICATION	0.9999999102681445	WITHOUT_CLASSIFICATION	8.973185550217301E-8	DEFECT
// // XML Schema anyURI specific information //	WITHOUT_CLASSIFICATION	0.9999986386218422	WITHOUT_CLASSIFICATION	1.3613781577334895E-6	DEFECT
// To encode special characters in anyURI, by using %HH to represent // special ASCII characters: 0x00~0x1F, 0x7F, ' ', '<', '>', etc. // and non-ASCII characters (whose value >= 128).	WITHOUT_CLASSIFICATION	0.9999993946679763	WITHOUT_CLASSIFICATION	6.05332023774684E-7	DEFECT
// for each character in the anyURI	WITHOUT_CLASSIFICATION	0.9999994810621455	WITHOUT_CLASSIFICATION	5.189378543999133E-7	DEFECT
// If encoding happened, create a new string; // otherwise, return the orginal one.	WITHOUT_CLASSIFICATION	0.9999998885743169	WITHOUT_CLASSIFICATION	1.1142568307245093E-7	DEFECT
// // Constants //	WITHOUT_CLASSIFICATION	0.9999993836199673	WITHOUT_CLASSIFICATION	6.163800325752728E-7	DEFECT
// Initializing the Character Flag Array // Code generated by: XMLCharGenerator.	WITHOUT_CLASSIFICATION	0.9999679355144422	WITHOUT_CLASSIFICATION	3.206448555784709E-5	DEFECT
// Fill 3 of value (byte) 49	WITHOUT_CLASSIFICATION	0.9999929310746147	WITHOUT_CLASSIFICATION	7.068925385380691E-6	DEFECT
// Fill 6 of value (byte) 49 // Fill 2 of value (byte) -71	WITHOUT_CLASSIFICATION	0.999870107059614	WITHOUT_CLASSIFICATION	1.2989294038607887E-4	DEFECT
// Fill 10 of value (byte) -71	WITHOUT_CLASSIFICATION	0.9999904380922049	WITHOUT_CLASSIFICATION	9.561907795103234E-6	DEFECT
// Fill 26 of value (byte) -3 // Fill 60 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999546679118763	WITHOUT_CLASSIFICATION	4.533208812380104E-5	DEFECT
// Fill 8 of value (byte) 33 // Fill 23 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999475949800033	WITHOUT_CLASSIFICATION	5.2405019996767125E-5	DEFECT
// Fill 31 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999873638903855	WITHOUT_CLASSIFICATION	1.2636109614594698E-5	DEFECT
// Fill 58 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 11 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9998747886150001	WITHOUT_CLASSIFICATION	1.2521138499985068E-4	DEFECT
// Fill 53 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999794809493778	WITHOUT_CLASSIFICATION	2.0519050622241568E-5	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999875080579317	WITHOUT_CLASSIFICATION	1.2491942068327596E-5	DEFECT
// Fill 20 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999747581200751	WITHOUT_CLASSIFICATION	2.5241879925013625E-5	DEFECT
// Fill 44 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999855858448088	WITHOUT_CLASSIFICATION	1.4414155191216197E-5	DEFECT
// Fill 7 of value (byte) -19 // Fill 3 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999530739838196	WITHOUT_CLASSIFICATION	4.692601618030782E-5	DEFECT
// Fill 18 of value (byte) -19 // Fill 13 of value (byte) 33 // Fill 12 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9998670843525381	WITHOUT_CLASSIFICATION	1.3291564746182986E-4	DEFECT
// Fill 66 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999760781019204	WITHOUT_CLASSIFICATION	2.392189807957453E-5	DEFECT
// Fill 12 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999966731793676	WITHOUT_CLASSIFICATION	3.326820632400219E-5	DEFECT
// Fill 36 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999849908225531	WITHOUT_CLASSIFICATION	1.5009177446819476E-5	DEFECT
// Fill 7 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 10 of value (byte) 33 // Fill 17 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999182395180113	WITHOUT_CLASSIFICATION	8.176048198875264E-5	DEFECT
// Fill 23 of value (byte) -87	WITHOUT_CLASSIFICATION	0.999984390781226	WITHOUT_CLASSIFICATION	1.5609218773968948E-5	DEFECT
// Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999873239619267	WITHOUT_CLASSIFICATION	1.2676038073246877E-5	DEFECT
// Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999762086697417	WITHOUT_CLASSIFICATION	2.3791330258345756E-5	DEFECT
// Fill 11 of value (byte) 33 // Fill 27 of value (byte) -19 // Fill 5 of value (byte) 33 // Fill 3 of value (byte) -19 // Fill 46 of value (byte) 33 // Fill 26 of value (byte) -19 // Fill 5 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999181143791883	WITHOUT_CLASSIFICATION	8.188562081178973E-5	DEFECT
// Fill 10 of value (byte) -19 // Fill 8 of value (byte) -87 // Fill 13 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 6 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9998897129244522	WITHOUT_CLASSIFICATION	1.1028707554782625E-4	DEFECT
// Fill 71 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 5 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999033723768882	WITHOUT_CLASSIFICATION	9.662762311180133E-5	DEFECT
// Fill 15 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999825061240111	WITHOUT_CLASSIFICATION	1.7493875988920195E-5	DEFECT
// Fill 4 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999858470987042	WITHOUT_CLASSIFICATION	1.4152901295868392E-5	DEFECT
// Fill 15 of value (byte) -87 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9998867663815477	WITHOUT_CLASSIFICATION	1.132336184522456E-4	DEFECT
// Fill 53 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9998800273607517	WITHOUT_CLASSIFICATION	1.1997263924840328E-4	DEFECT
// Fill 8 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 22 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999154640896187	WITHOUT_CLASSIFICATION	8.453591038131629E-5	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999856188495275	WITHOUT_CLASSIFICATION	1.4381150472410528E-5	DEFECT
// Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999873239619267	WITHOUT_CLASSIFICATION	1.2676038073246877E-5	DEFECT
// Fill 8 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 22 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999154640896187	WITHOUT_CLASSIFICATION	8.453591038131629E-5	DEFECT
// Fill 16 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 4 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 10 of value (byte) -19 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 17 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9998992973153811	WITHOUT_CLASSIFICATION	1.0070268461895738E-4	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999856188495275	WITHOUT_CLASSIFICATION	1.4381150472410528E-5	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999856188495275	WITHOUT_CLASSIFICATION	1.4381150472410528E-5	DEFECT
// Fill 3 of value (byte) 33 // Fill 4 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999197398795823	WITHOUT_CLASSIFICATION	8.026012041768504E-5	DEFECT
// Fill 7 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87 // Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999004355690454	WITHOUT_CLASSIFICATION	9.956443095463513E-5	DEFECT
// Fill 4 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999348925611533	WITHOUT_CLASSIFICATION	6.51074388466372E-5	DEFECT
// Fill 3 of value (byte) -19 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 2 of value (byte) -19 // Fill 16 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999403955115325	WITHOUT_CLASSIFICATION	5.960448846745324E-5	DEFECT
// Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 22 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9998531029340771	WITHOUT_CLASSIFICATION	1.4689706592279175E-4	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999765541910196	WITHOUT_CLASSIFICATION	2.344580898035263E-5	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999765541910196	WITHOUT_CLASSIFICATION	2.344580898035263E-5	DEFECT
// Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.999916583013144	WITHOUT_CLASSIFICATION	8.341698685596538E-5	DEFECT
// Fill 5 of value (byte) -87 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87 // Fill 11 of value (byte) 33 // Fill 4 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999183726377525	WITHOUT_CLASSIFICATION	8.16273622475746E-5	DEFECT
// Fill 7 of value (byte) 33 // Fill 12 of value (byte) -87 // Fill 3 of value (byte) -19 // Fill 12 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9998938157485763	WITHOUT_CLASSIFICATION	1.061842514236676E-4	DEFECT
// Fill 22 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999764810941731	WITHOUT_CLASSIFICATION	2.3518905826905083E-5	DEFECT
// Fill 5 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9998654895049868	WITHOUT_CLASSIFICATION	1.3451049501323983E-4	DEFECT
// Fill 8 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999832607997506	WITHOUT_CLASSIFICATION	1.6739200249393222E-5	DEFECT
// Fill 3 of value (byte) -87 // Fill 18 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999490552121698	WITHOUT_CLASSIFICATION	5.0944787830143746E-5	DEFECT
// Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999873239619267	WITHOUT_CLASSIFICATION	1.2676038073246877E-5	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999856188495275	WITHOUT_CLASSIFICATION	1.4381150472410528E-5	DEFECT
// Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 4 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.999916550439882	WITHOUT_CLASSIFICATION	8.344956011796787E-5	DEFECT
// Fill 3 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 18 of value (byte) 33 // Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9998993462387605	WITHOUT_CLASSIFICATION	1.0065376123941403E-4	DEFECT
// Fill 6 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999207950055007	WITHOUT_CLASSIFICATION	7.920499449936884E-5	DEFECT
// Fill 4 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999317666485285	WITHOUT_CLASSIFICATION	6.82333514715665E-5	DEFECT
// Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 3 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999914258649206	WITHOUT_CLASSIFICATION	8.574135079407184E-5	DEFECT
// Fill 3 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 5 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999249941129593	WITHOUT_CLASSIFICATION	7.500588704078354E-5	DEFECT
// Fill 4 of value (byte) -87 // Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.999931459398562	WITHOUT_CLASSIFICATION	6.854060143805035E-5	DEFECT
// Fill 15 of value (byte) 33 // Fill 9 of value (byte) -87 // Fill 17 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9998822684050294	WITHOUT_CLASSIFICATION	1.1773159497065319E-4	DEFECT
// Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999822153581942	WITHOUT_CLASSIFICATION	1.778464180579718E-5	DEFECT
// Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999822153581942	WITHOUT_CLASSIFICATION	1.778464180579718E-5	DEFECT
// Fill 23 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999846174755995	WITHOUT_CLASSIFICATION	1.5382524400448774E-5	DEFECT
// Fill 23 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999846174755995	WITHOUT_CLASSIFICATION	1.5382524400448774E-5	DEFECT
// Fill 10 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999882867020731	WITHOUT_CLASSIFICATION	1.1713297926942302E-5	DEFECT
// Fill 5 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 7 of value (byte) -87	WITHOUT_CLASSIFICATION	0.999921025632808	WITHOUT_CLASSIFICATION	7.897436719190524E-5	DEFECT
// Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999873239619267	WITHOUT_CLASSIFICATION	1.2676038073246877E-5	DEFECT
// Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999762086697417	WITHOUT_CLASSIFICATION	2.3791330258345756E-5	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999856188495275	WITHOUT_CLASSIFICATION	1.4381150472410528E-5	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999765541910196	WITHOUT_CLASSIFICATION	2.344580898035263E-5	DEFECT
// Fill 4 of value (byte) -87 // Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.999931459398562	WITHOUT_CLASSIFICATION	6.854060143805035E-5	DEFECT
// Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999822153581942	WITHOUT_CLASSIFICATION	1.778464180579718E-5	DEFECT
// Fill 23 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999846174755995	WITHOUT_CLASSIFICATION	1.5382524400448774E-5	DEFECT
// Fill 5 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 7 of value (byte) -87	WITHOUT_CLASSIFICATION	0.999921025632808	WITHOUT_CLASSIFICATION	7.897436719190524E-5	DEFECT
// Fill 4 of value (byte) -87 // Fill 7 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 7 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999325557604091	WITHOUT_CLASSIFICATION	6.74442395909413E-5	DEFECT
// Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 18 of value (byte) 33 // Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9998953464653645	WITHOUT_CLASSIFICATION	1.046535346355681E-4	DEFECT
// Fill 16 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 6 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9998819818963566	WITHOUT_CLASSIFICATION	1.1801810364341904E-4	DEFECT
// Fill 8 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 145 of value (byte) 33 // Fill 46 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999832233027845	WITHOUT_CLASSIFICATION	1.6776697215500205E-4	DEFECT
// Fill 2 of value (byte) -19 // Fill 7 of value (byte) -87 // Fill 5 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 9 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9996441454254479	WITHOUT_CLASSIFICATION	3.558545745521883E-4	DEFECT
// Fill 10 of value (byte) -87 // Fill 39 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999338415377038	WITHOUT_CLASSIFICATION	6.615846229615459E-5	DEFECT
// Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999847839050927	WITHOUT_CLASSIFICATION	1.5216094907152463E-5	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999765541910196	WITHOUT_CLASSIFICATION	2.344580898035263E-5	DEFECT
// Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999389023564254	WITHOUT_CLASSIFICATION	6.109764357464507E-5	DEFECT
// Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999847839050927	WITHOUT_CLASSIFICATION	1.5216094907152463E-5	DEFECT
// Fill 6 of value (byte) 33 // Fill 4 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999194635591087	WITHOUT_CLASSIFICATION	8.053644089137498E-5	DEFECT
// Fill 2 of value (byte) -19 // Fill 6 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9998067830170475	WITHOUT_CLASSIFICATION	1.9321698295254812E-4	DEFECT
// Fill 2 of value (byte) 33 // Fill 5 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999014782605787	WITHOUT_CLASSIFICATION	9.852173942121553E-5	DEFECT
// Fill 4 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999910489971094	WITHOUT_CLASSIFICATION	8.951002890605335E-5	DEFECT
// Fill 33 of value (byte) -19 // Fill 7 of value (byte) 33 // Fill 20 of value (byte) -87	WITHOUT_CLASSIFICATION	0.999912658972413	WITHOUT_CLASSIFICATION	8.734102758707125E-5	DEFECT
// Fill 6 of value (byte) -87 // Fill 4 of value (byte) 33 // Fill 6 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999206051712378	WITHOUT_CLASSIFICATION	7.939482876226699E-5	DEFECT
// Fill 21 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 7 of value (byte) -87	WITHOUT_CLASSIFICATION	0.99996556542663	WITHOUT_CLASSIFICATION	3.443457337003793E-5	DEFECT
// Fill 230 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 10 of value (byte) 33 // Fill 39 of value (byte) -19 // Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999227604448315	WITHOUT_CLASSIFICATION	7.72395551684235E-5	DEFECT
// Fill 5 of value (byte) -19 // Fill 41 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999320833580274	WITHOUT_CLASSIFICATION	6.791664197262811E-5	DEFECT
// Fill 11 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999938891887994	WITHOUT_CLASSIFICATION	6.110811200549037E-6	DEFECT
// Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999246828182169	WITHOUT_CLASSIFICATION	7.5317181783093E-5	DEFECT
// Fill 5 of value (byte) 33 // Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999463222572439	WITHOUT_CLASSIFICATION	5.3677742756102135E-5	DEFECT
// Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999359689481786	WITHOUT_CLASSIFICATION	6.4031051821405E-5	DEFECT
// Fill 40 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999905910587195	WITHOUT_CLASSIFICATION	9.408941280510518E-6	DEFECT
// Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.999985901307205	WITHOUT_CLASSIFICATION	1.409869279487958E-5	DEFECT
// Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 7 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999279110150457	WITHOUT_CLASSIFICATION	7.20889849542999E-5	DEFECT
// Fill 7 of value (byte) -19 // Fill 40 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999441455677618	WITHOUT_CLASSIFICATION	5.585443223823641E-5	DEFECT
// Fill 4 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999908149389498	WITHOUT_CLASSIFICATION	9.185061050298347E-6	DEFECT
// Fill 8 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999884579687534	WITHOUT_CLASSIFICATION	1.1542031246612327E-5	DEFECT
// Fill 68 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999858692235272	WITHOUT_CLASSIFICATION	1.413077647279149E-5	DEFECT
// // Public static methods //	WITHOUT_CLASSIFICATION	0.9999999719765144	WITHOUT_CLASSIFICATION	2.8023485748291568E-8	DEFECT
// Fill 31 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 53 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999068452371891	WITHOUT_CLASSIFICATION	9.315476281095279E-5	DEFECT
// Fill 7 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 4 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 13 of value (byte) -19 // Fill 5 of value (byte) 33 // Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9997442577660843	WITHOUT_CLASSIFICATION	2.5574223391569675E-4	DEFECT
// Fill 7 of value (byte) -19 // Fill 211 of value (byte) 33 // Fill 13 of value (byte) -87 // Fill 4 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999550861394779	WITHOUT_CLASSIFICATION	4.491386052210666E-5	DEFECT
// Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999246828182169	WITHOUT_CLASSIFICATION	7.5317181783093E-5	DEFECT
// Fill 81 of value (byte) 33 // Fill 3 of value (byte) -19 // Fill 3714 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999454699863077	WITHOUT_CLASSIFICATION	5.4530013692207065E-5	DEFECT
// Fill 25 of value (byte) 33 // Fill 9 of value (byte) -19 // Fill 6 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9997559742319404	WITHOUT_CLASSIFICATION	2.4402576805956347E-4	DEFECT
// Fill 5 of value (byte) -87 // Fill 11 of value (byte) 33 // Fill 84 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 90 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9998860122030917	WITHOUT_CLASSIFICATION	1.1398779690824894E-4	DEFECT
// isValid(int):boolean	WITHOUT_CLASSIFICATION	0.9999997469317483	WITHOUT_CLASSIFICATION	2.530682517493857E-7	DEFECT
// isInvalid(int):boolean	WITHOUT_CLASSIFICATION	0.9999997808558944	WITHOUT_CLASSIFICATION	2.1914410560380326E-7	DEFECT
// isContent(int):boolean	WITHOUT_CLASSIFICATION	0.9999995725421716	WITHOUT_CLASSIFICATION	4.2745782829070287E-7	DEFECT
// isMarkup(int):boolean	WITHOUT_CLASSIFICATION	0.9999998360524731	WITHOUT_CLASSIFICATION	1.6394752689699946E-7	DEFECT
// isSpace(int):boolean	WITHOUT_CLASSIFICATION	0.9999998855385436	WITHOUT_CLASSIFICATION	1.1446145639667152E-7	DEFECT
// isNameStart(int):boolean	WITHOUT_CLASSIFICATION	0.9999999669268669	WITHOUT_CLASSIFICATION	3.307313310985043E-8	DEFECT
// isName(int):boolean	WITHOUT_CLASSIFICATION	0.9999998341088288	WITHOUT_CLASSIFICATION	1.6589117113944732E-7	DEFECT
// isNCNameStart(int):boolean	WITHOUT_CLASSIFICATION	0.9999999787015685	WITHOUT_CLASSIFICATION	2.1298431551903387E-8	DEFECT
// isNCName(int):boolean	WITHOUT_CLASSIFICATION	0.9999998931694223	WITHOUT_CLASSIFICATION	1.0683057782626197E-7	DEFECT
// isPubid(int):boolean	WITHOUT_CLASSIFICATION	0.9999996532173768	WITHOUT_CLASSIFICATION	3.4678262316739745E-7	DEFECT
/*      * [5] Name ::= (Letter | '_' | ':') (NameChar)*      */	WITHOUT_CLASSIFICATION	0.9999999199614561	WITHOUT_CLASSIFICATION	8.003854398705455E-8	DEFECT
// isValidName(String):boolean	WITHOUT_CLASSIFICATION	0.9999999102681445	WITHOUT_CLASSIFICATION	8.973185550217301E-8	DEFECT
/*      * from the namespace rec      * [4] NCName ::= (Letter | '_') (NCNameChar)*      */	WITHOUT_CLASSIFICATION	0.9999999295361663	WITHOUT_CLASSIFICATION	7.046383358501148E-8	DEFECT
// isValidNCName(String):boolean	WITHOUT_CLASSIFICATION	0.9999998219673414	WITHOUT_CLASSIFICATION	1.7803265850973958E-7	DEFECT
/*      * [7] Nmtoken ::= (NameChar)+      */	WITHOUT_CLASSIFICATION	0.9999944764408241	WITHOUT_CLASSIFICATION	5.52355917592414E-6	DEFECT
// encodings	WITHOUT_CLASSIFICATION	0.9999970804589656	WITHOUT_CLASSIFICATION	2.9195410344851374E-6	DEFECT
// isValidIANAEncoding(String):boolean	WITHOUT_CLASSIFICATION	0.9999995901013206	WITHOUT_CLASSIFICATION	4.0989867937430715E-7	DEFECT
// class XMLChar	WITHOUT_CLASSIFICATION	0.999996386849941	WITHOUT_CLASSIFICATION	3.6131500590030923E-6	DEFECT
//order constants	WITHOUT_CLASSIFICATION	0.9999994795673017	WITHOUT_CLASSIFICATION	5.204326982568701E-7	DEFECT
// check whether the character is in the range 0x30 ~ 0x39	WITHOUT_CLASSIFICATION	0.9999998876380549	WITHOUT_CLASSIFICATION	1.1236194498986273E-7	DEFECT
// interface TypeValidator	WITHOUT_CLASSIFICATION	0.999999840852875	WITHOUT_CLASSIFICATION	1.5914712502379177E-7	DEFECT
// This implementation was changed to not introduce multi line content.	WITHOUT_CLASSIFICATION	0.9999080823580919	WITHOUT_CLASSIFICATION	9.191764190812336E-5	DEFECT
// form integral number of 6-bit groups	WITHOUT_CLASSIFICATION	0.9999999185216861	WITHOUT_CLASSIFICATION	8.147831386099977E-8	DEFECT
//encodedData[encodedIndex] = 0xa;	WITHOUT_CLASSIFICATION	0.9999682212260299	WITHOUT_CLASSIFICATION	3.177877397006125E-5	DEFECT
// remove white spaces	WITHOUT_CLASSIFICATION	0.9999998090249954	WITHOUT_CLASSIFICATION	1.9097500463092315E-7	DEFECT
//should be divisible by four	WITHOUT_CLASSIFICATION	0.9999982680159292	WITHOUT_CLASSIFICATION	1.7319840709033135E-6	DEFECT
//if found "no data" just return null	WITHOUT_CLASSIFICATION	0.9999999939172622	WITHOUT_CLASSIFICATION	6.082737771093998E-9	DEFECT
//One PAD  e.g. 3cQ[Pad]	WITHOUT_CLASSIFICATION	0.9999989916423511	WITHOUT_CLASSIFICATION	1.0083576489732837E-6	DEFECT
//last 2 bits should be zero	WITHOUT_CLASSIFICATION	0.9999969444570269	WITHOUT_CLASSIFICATION	3.05554297307575E-6	DEFECT
//an error  like "3c[Pad]r", "3cdX", "3cXd", "3cXX" where X is non data	WITHOUT_CLASSIFICATION	0.9937403888446363	WITHOUT_CLASSIFICATION	0.006259611155363665	DEFECT
//No PAD e.g 3cQl	WITHOUT_CLASSIFICATION	0.9999908488026671	WITHOUT_CLASSIFICATION	9.15119733297196E-6	DEFECT
// count characters that's not whitespace	WITHOUT_CLASSIFICATION	0.9999999527505319	WITHOUT_CLASSIFICATION	4.724946811653196E-8	DEFECT
// // Data //	WITHOUT_CLASSIFICATION	0.9999993075544766	WITHOUT_CLASSIFICATION	6.92445523340779E-7	DEFECT
// // Static initialization //	WITHOUT_CLASSIFICATION	0.9999992001234044	WITHOUT_CLASSIFICATION	7.99876595551373E-7	DEFECT
// Add support for Cp1252 and its friends	WITHOUT_CLASSIFICATION	0.9999957595352076	WITHOUT_CLASSIFICATION	4.240464792415564E-6	DEFECT
// added since this encoding only differs w.r.t. presentation 	WITHOUT_CLASSIFICATION	0.9999992030340655	WITHOUT_CLASSIFICATION	7.969659343984502E-7	DEFECT
// Adding new aliases as proposed in // http://lists.w3.org/Archives/Public/ietf-charset/2002JulSep/0058.html	WITHOUT_CLASSIFICATION	0.9999995898712678	WITHOUT_CLASSIFICATION	4.1012873219047573E-7	DEFECT
// REVISIT: //   j:CNS11643 -> EUC-TW? //   ISO-2022-CN? ISO-2022-CN-EXT?	WITHOUT_CLASSIFICATION	0.9999572044167656	WITHOUT_CLASSIFICATION	4.279558323438403E-5	DEFECT
// add Java to IANA encoding mappings //fJava2IANAMap.put("8859_1",    "US-ASCII"); // ?	WITHOUT_CLASSIFICATION	0.9999952595336274	WITHOUT_CLASSIFICATION	4.740466372506487E-6	DEFECT
// proposed addition (see above for details):	WITHOUT_CLASSIFICATION	0.999937966037081	WITHOUT_CLASSIFICATION	6.2033962919043E-5	DEFECT
// <clinit>()	WITHOUT_CLASSIFICATION	0.9999987335944928	WITHOUT_CLASSIFICATION	1.2664055072292825E-6	DEFECT
// // Public static methods //	WITHOUT_CLASSIFICATION	0.9999999719765144	WITHOUT_CLASSIFICATION	2.8023485748291568E-8	DEFECT
// putIANA2JavaMapping(String,String)	WITHOUT_CLASSIFICATION	0.9999985213306075	WITHOUT_CLASSIFICATION	1.4786693925327688E-6	DEFECT
// getIANA2JavaMapping(String):String	WITHOUT_CLASSIFICATION	0.9999913319130214	WITHOUT_CLASSIFICATION	8.668086978676549E-6	DEFECT
// removeIANA2JavaMapping(String):String	WITHOUT_CLASSIFICATION	0.999975008299757	WITHOUT_CLASSIFICATION	2.4991700243061495E-5	DEFECT
//RFC 2732 added '[' and ']' as reserved characters	WITHOUT_CLASSIFICATION	0.9999999841557053	WITHOUT_CLASSIFICATION	1.5844294657127476E-8	DEFECT
// Add ASCII Digits and ASCII Hex Numbers	WITHOUT_CLASSIFICATION	0.9999999076081274	WITHOUT_CLASSIFICATION	9.239187255791324E-8	DEFECT
// Add ASCII Letters and ASCII Hex Numbers	WITHOUT_CLASSIFICATION	0.9999999223561997	WITHOUT_CLASSIFICATION	7.764380023853464E-8	DEFECT
// isValidName(String):boolean	WITHOUT_CLASSIFICATION	0.9999999102681445	WITHOUT_CLASSIFICATION	8.973185550217301E-8	DEFECT
// Fill 3 of value (byte) -87 // Fill 6 of value (byte) 33 // Fill 40 of value (byte) -19 // Fill 7379 of value (byte) 33 // Fill 20902 of value (byte) -19 // Fill 3162 of value (byte) 33 // Fill 11172 of value (byte) -19 // Fill 92 of value (byte) 33 // Fill 8190 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9992974885318592	WITHOUT_CLASSIFICATION	7.025114681408691E-4	DEFECT
// if the character is in the range 0x30 ~ 0x39, return its int value (0~9), // otherwise, return -1	WITHOUT_CLASSIFICATION	0.9999999983964256	WITHOUT_CLASSIFICATION	1.6035743693422091E-9	DEFECT
// Add Reserved Characters	WITHOUT_CLASSIFICATION	0.9999999983508778	WITHOUT_CLASSIFICATION	1.6491222283647247E-9	DEFECT
// Add Scheme Characters	WITHOUT_CLASSIFICATION	0.9999999990638744	WITHOUT_CLASSIFICATION	9.361255719837483E-10	DEFECT
// Add Userinfo Characters	WITHOUT_CLASSIFICATION	0.9999999986984835	WITHOUT_CLASSIFICATION	1.3015164674148681E-9	DEFECT
// Add Path Characters	WITHOUT_CLASSIFICATION	0.9999999943626711	WITHOUT_CLASSIFICATION	5.637328887727678E-9	DEFECT
// Just use null.	WITHOUT_CLASSIFICATION	0.9999993856463578	WITHOUT_CLASSIFICATION	6.143536422486028E-7	DEFECT
// search backwards starting from character before ':'.	WITHOUT_CLASSIFICATION	0.9999998561476363	WITHOUT_CLASSIFICATION	1.4385236379759855E-7	DEFECT
// A standalone base is a valid URI according to spec	WITHOUT_CLASSIFICATION	0.9999956166965642	WITHOUT_CLASSIFICATION	4.383303435749631E-6	DEFECT
// Neither 'scheme:' or 'scheme:#fragment' are valid URIs.	WITHOUT_CLASSIFICATION	0.9999999887375892	WITHOUT_CLASSIFICATION	1.1262410691519374E-8	DEFECT
// Authority will be everything up to path, query or fragment	WITHOUT_CLASSIFICATION	0.9999820350110038	WITHOUT_CLASSIFICATION	1.79649889962765E-5	DEFECT
// Attempt to parse authority. If the section is an empty string // this is a valid server based authority, so set the host to this // value.	WITHOUT_CLASSIFICATION	0.9999991821507159	WITHOUT_CLASSIFICATION	8.178492841324539E-7	DEFECT
// If we didn't find authority we need to back up. Attempt to // match against abs_path next.	WITHOUT_CLASSIFICATION	0.9999922156424941	WITHOUT_CLASSIFICATION	7.784357505891419E-6	DEFECT
// Resolve relative URI to base URI - see RFC 2396 Section 5.2 // In some cases, it might make more sense to throw an exception // (when scheme is specified is the string spec and the base URI // is also specified, for example), but we're just following the // RFC specifications	WITHOUT_CLASSIFICATION	0.9999931114609545	WITHOUT_CLASSIFICATION	6.888539045564885E-6	DEFECT
// check to see if this is the current doc - RFC 2396 5.2 #2 // note that this is slightly different from the RFC spec in that // we don't include the check for query string being null // - this handles cases where the urispec is just a query // string or a fragment (e.g. "?y" or "#s") - // see <http://www.ics.uci.edu/~fielding/url/test1.html> which // identified this as a bug in the RFC	WITHOUT_CLASSIFICATION	0.9999998877360378	WITHOUT_CLASSIFICATION	1.1226396223431153E-7	DEFECT
// check for authority - RFC 2396 5.2 #4 // if we found a host, then we've got a network path, so we're done	WITHOUT_CLASSIFICATION	0.9999974113477048	WITHOUT_CLASSIFICATION	2.588652295046272E-6	DEFECT
// check for absolute path - RFC 2396 5.2 #5	WITHOUT_CLASSIFICATION	0.9999995376226849	WITHOUT_CLASSIFICATION	4.6237731522406985E-7	DEFECT
// 6a - get all but the last segment of the base URI path	WITHOUT_CLASSIFICATION	0.9999861297091934	WITHOUT_CLASSIFICATION	1.387029080655582E-5	DEFECT
// 6b - append the relative URI path	WITHOUT_CLASSIFICATION	0.9999941194261668	WITHOUT_CLASSIFICATION	5.880573833224196E-6	DEFECT
// 6c - remove all "./" where "." is a complete path segment	WITHOUT_CLASSIFICATION	0.9997392414847199	WITHOUT_CLASSIFICATION	2.6075851527999406E-4	DEFECT
// 6d - remove "." if path ends with "." as a complete path segment	WITHOUT_CLASSIFICATION	0.9999432392885363	WITHOUT_CLASSIFICATION	5.676071146365057E-5	DEFECT
// 6e - remove all "<segment>/../" where "<segment>" is a complete // path segment not equal to ".."	WITHOUT_CLASSIFICATION	0.9996286540251293	WITHOUT_CLASSIFICATION	3.7134597487068296E-4	DEFECT
// 6f - remove ending "<segment>/.." where "<segment>" is a // complete path segment	WITHOUT_CLASSIFICATION	0.9977417099362855	WITHOUT_CLASSIFICATION	0.0022582900637144435	DEFECT
// userinfo is everything up to @	WITHOUT_CLASSIFICATION	0.9999993526226595	WITHOUT_CLASSIFICATION	6.473773405435013E-7	DEFECT
// host is everything up to last ':', or up to  // and including ']' if followed by ':'.	WITHOUT_CLASSIFICATION	0.999999979104053	WITHOUT_CLASSIFICATION	2.0895947021238356E-8	DEFECT
// port	WITHOUT_CLASSIFICATION	0.9999928003613459	WITHOUT_CLASSIFICATION	7.199638654165393E-6	DEFECT
// Check if the host is well formed.	WITHOUT_CLASSIFICATION	0.9999999956713069	WITHOUT_CLASSIFICATION	4.328693071256383E-9	DEFECT
// Check that port is well formed if it exists. // REVISIT: There's no restriction on port value ranges, but // perform the same check as in setPort to be consistent. Pass // in a string to this method instead of an integer.	WITHOUT_CLASSIFICATION	0.9999999529558504	WITHOUT_CLASSIFICATION	4.7044149542782774E-8	DEFECT
// Check that userinfo is well formed if it exists.	WITHOUT_CLASSIFICATION	0.9999999967199895	WITHOUT_CLASSIFICATION	3.280010536303851E-9	DEFECT
// Userinfo can contain alphanumerics, mark characters, escaped // and ';',':','&','=','+','$',','	WITHOUT_CLASSIFICATION	0.9999999988115108	WITHOUT_CLASSIFICATION	1.1884891719367852E-9	DEFECT
// check for valid escape sequence	WITHOUT_CLASSIFICATION	0.9999999755599709	WITHOUT_CLASSIFICATION	2.4440029108050625E-8	DEFECT
// check for valid escape sequence	WITHOUT_CLASSIFICATION	0.9999999755599709	WITHOUT_CLASSIFICATION	2.4440029108050625E-8	DEFECT
// can check against path characters because the set // is the same except for '/' which we've already excluded.	WITHOUT_CLASSIFICATION	0.9999999999270742	WITHOUT_CLASSIFICATION	7.292576215109963E-11	DEFECT
// path - everything up to query string or fragment	WITHOUT_CLASSIFICATION	0.9999998464989617	WITHOUT_CLASSIFICATION	1.5350103837151717E-7	DEFECT
// RFC 2732 only allows '[' and ']' to appear in the opaque part.	WITHOUT_CLASSIFICATION	0.999543915168569	WITHOUT_CLASSIFICATION	4.56084831431113E-4	DEFECT
// Scan path. // abs_path = "/"  path_segments // rel_path = rel_segment [ abs_path ]	WITHOUT_CLASSIFICATION	0.9999999575713868	WITHOUT_CLASSIFICATION	4.2428613245746984E-8	DEFECT
// Scan opaque part. // opaque_part = uric_no_slash *uric	WITHOUT_CLASSIFICATION	0.9999999473425923	WITHOUT_CLASSIFICATION	5.2657407730723154E-8	DEFECT
// query - starts with ? and up to fragment or end	WITHOUT_CLASSIFICATION	0.9999923340998804	WITHOUT_CLASSIFICATION	7.66590011956555E-6	DEFECT
// fragment - starts with #	WITHOUT_CLASSIFICATION	0.999999634530693	WITHOUT_CLASSIFICATION	3.654693069474087E-7	DEFECT
// Server based authority.	WITHOUT_CLASSIFICATION	0.9999999099968021	WITHOUT_CLASSIFICATION	9.000319792204055E-8	DEFECT
// Registry based authority.	WITHOUT_CLASSIFICATION	0.9999994971627135	WITHOUT_CLASSIFICATION	5.028372864293056E-7	DEFECT
// userinfo can contain alphanumerics, mark characters, escaped // and ';',':','&','=','+','$',','	WITHOUT_CLASSIFICATION	0.9999999986183534	WITHOUT_CLASSIFICATION	1.3816465417767347E-9	DEFECT
// reg_name = 1*( unreserved | escaped | "$" | "," |  //            ";" | ":" | "@" | "&" | "=" | "+" )	WITHOUT_CLASSIFICATION	0.9999996001224936	WITHOUT_CLASSIFICATION	3.9987750646152E-7	DEFECT
// presence of the host (whether valid or empty) means // double-slashes which means generic uri	WITHOUT_CLASSIFICATION	0.9999999889527009	WITHOUT_CLASSIFICATION	1.1047299002196792E-8	DEFECT
// Check if the host is a valid IPv6reference.	WITHOUT_CLASSIFICATION	0.9999999620512772	WITHOUT_CLASSIFICATION	3.794872285665122E-8	DEFECT
// Cannot start with a '.', '-', or end with a '-'.	WITHOUT_CLASSIFICATION	0.9999970870290275	WITHOUT_CLASSIFICATION	2.912970972541829E-6	DEFECT
// rightmost domain label starting with digit indicates IP address // since top level domain label can only start with an alpha // see RFC 2396 Section 3.2.2	WITHOUT_CLASSIFICATION	0.9999986345283093	WITHOUT_CLASSIFICATION	1.3654716907088225E-6	DEFECT
// RFC 2396 states that hostnames take the form described in  // RFC 1034 (Section 3) and RFC 1123 (Section 2.1). According // to RFC 1034, hostnames are limited to 255 characters.	WITHOUT_CLASSIFICATION	0.9999992445749525	WITHOUT_CLASSIFICATION	7.554250474472866E-7	DEFECT
// domain labels can contain alphanumerics and '-" // but must start and end with an alphanumeric	WITHOUT_CLASSIFICATION	0.9999970270368795	WITHOUT_CLASSIFICATION	2.9729631205849387E-6	DEFECT
// RFC 1034: Labels must be 63 characters or less.	WITHOUT_CLASSIFICATION	0.9999998884886159	WITHOUT_CLASSIFICATION	1.1151138415390838E-7	DEFECT
// Check that that there are no more than three digits // in this segment.	WITHOUT_CLASSIFICATION	0.9999994034232901	WITHOUT_CLASSIFICATION	5.965767099397145E-7	DEFECT
// Check that this segment is not greater than 255.	WITHOUT_CLASSIFICATION	0.9997537622332107	WITHOUT_CLASSIFICATION	2.462377667893359E-4	DEFECT
// Check if string is a potential match for IPv6reference.	WITHOUT_CLASSIFICATION	0.9999998861916234	WITHOUT_CLASSIFICATION	1.13808376539554E-7	DEFECT
// Counter for the number of 16-bit sections read in the address.	WITHOUT_CLASSIFICATION	0.9999996198863735	WITHOUT_CLASSIFICATION	3.801136264573039E-7	DEFECT
// Scan hex sequence before possible '::' or IPv4 address.	WITHOUT_CLASSIFICATION	0.9996631468407078	WITHOUT_CLASSIFICATION	3.3685315929222353E-4	DEFECT
// Address must contain 128-bits of information.	WITHOUT_CLASSIFICATION	0.9999999731514132	WITHOUT_CLASSIFICATION	2.6848586771746453E-8	DEFECT
// '::' represents at least one 16-bit group of zeros.	WITHOUT_CLASSIFICATION	0.9999999123517012	WITHOUT_CLASSIFICATION	8.764829889162312E-8	DEFECT
// Trailing zeros will fill out the rest of the address.	WITHOUT_CLASSIFICATION	0.9999990600776647	WITHOUT_CLASSIFICATION	9.399223352865391E-7	DEFECT
// 3. Scan hex sequence after '::'.	WITHOUT_CLASSIFICATION	0.9999921722051045	WITHOUT_CLASSIFICATION	7.827794895438402E-6	DEFECT
// IPv6 addresses are 128-bit, so there can be at most eight sections.	WITHOUT_CLASSIFICATION	0.9999910343425901	WITHOUT_CLASSIFICATION	8.965657410027437E-6	DEFECT
// This could be '::'.	WITHOUT_CLASSIFICATION	0.9999657009234173	WITHOUT_CLASSIFICATION	3.4299076582731216E-5	DEFECT
// There can be at most 4 hex digits per group.	WITHOUT_CLASSIFICATION	0.9998594302344527	WITHOUT_CLASSIFICATION	1.4056976554739986E-4	DEFECT
// which ASCII characters need to be escaped	WITHOUT_CLASSIFICATION	0.999999979816641	WITHOUT_CLASSIFICATION	2.01833590366302E-8	DEFECT
// Trying to match the following productions: // hexseq = hex4 *( ":" hex4) // hex4   = 1*4HEXDIG	WITHOUT_CLASSIFICATION	0.9999763553518206	WITHOUT_CLASSIFICATION	2.364464817928376E-5	DEFECT
// initialize the above 3 arrays	WITHOUT_CLASSIFICATION	0.9999997967065091	WITHOUT_CLASSIFICATION	2.0329349095645912E-7	DEFECT
// if it's not an ASCII character, break here, and use UTF-8 encoding	WITHOUT_CLASSIFICATION	0.9999995713457575	WITHOUT_CLASSIFICATION	4.286542425981289E-7	DEFECT
// we saw some non-ascii character	WITHOUT_CLASSIFICATION	0.999999993253627	WITHOUT_CLASSIFICATION	6.746372962014577E-9	DEFECT
// get UTF-8 bytes for the remaining sub-string	WITHOUT_CLASSIFICATION	0.9999999722283783	WITHOUT_CLASSIFICATION	2.7771621632515415E-8	DEFECT
// for each byte	WITHOUT_CLASSIFICATION	0.9999997812719656	WITHOUT_CLASSIFICATION	2.187280342760379E-7	DEFECT
// for non-ascii character: make it positive, then escape	WITHOUT_CLASSIFICATION	0.999997765354388	WITHOUT_CLASSIFICATION	2.2346456119428084E-6	DEFECT
// should never happen	WITHOUT_CLASSIFICATION	0.9999997490003434	WITHOUT_CLASSIFICATION	2.5099965662737484E-7	DEFECT
// This might be invalid or an IPv4address. If it's potentially an IPv4address, // backup to just after the last valid character that matches hexseq.	WITHOUT_CLASSIFICATION	0.999999967848362	WITHOUT_CLASSIFICATION	3.21516379899603E-8	DEFECT
// // XML Schema anyURI specific information //	WITHOUT_CLASSIFICATION	0.9999986386218422	WITHOUT_CLASSIFICATION	1.3613781577334895E-6	DEFECT
// To encode special characters in anyURI, by using %HH to represent // special ASCII characters: 0x00~0x1F, 0x7F, ' ', '<', '>', etc. // and non-ASCII characters (whose value >= 128).	WITHOUT_CLASSIFICATION	0.9999993946679763	WITHOUT_CLASSIFICATION	6.05332023774684E-7	DEFECT
// for each character in the anyURI	WITHOUT_CLASSIFICATION	0.9999994810621455	WITHOUT_CLASSIFICATION	5.189378543999133E-7	DEFECT
// If encoding happened, create a new string; // otherwise, return the orginal one.	WITHOUT_CLASSIFICATION	0.9999998885743169	WITHOUT_CLASSIFICATION	1.1142568307245093E-7	DEFECT
// // Constants //	WITHOUT_CLASSIFICATION	0.9999993836199673	WITHOUT_CLASSIFICATION	6.163800325752728E-7	DEFECT
// Initializing the Character Flag Array // Code generated by: XMLCharGenerator.	WITHOUT_CLASSIFICATION	0.9999679355144422	WITHOUT_CLASSIFICATION	3.206448555784709E-5	DEFECT
// Fill 3 of value (byte) 49	WITHOUT_CLASSIFICATION	0.9999929310746147	WITHOUT_CLASSIFICATION	7.068925385380691E-6	DEFECT
// Fill 6 of value (byte) 49 // Fill 2 of value (byte) -71	WITHOUT_CLASSIFICATION	0.999870107059614	WITHOUT_CLASSIFICATION	1.2989294038607887E-4	DEFECT
// Fill 10 of value (byte) -71	WITHOUT_CLASSIFICATION	0.9999904380922049	WITHOUT_CLASSIFICATION	9.561907795103234E-6	DEFECT
// Fill 8 of value (byte) 33 // Fill 23 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999475949800033	WITHOUT_CLASSIFICATION	5.2405019996767125E-5	DEFECT
// Fill 31 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999873638903855	WITHOUT_CLASSIFICATION	1.2636109614594698E-5	DEFECT
// Fill 58 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 11 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9998747886150001	WITHOUT_CLASSIFICATION	1.2521138499985068E-4	DEFECT
// Fill 53 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999794809493778	WITHOUT_CLASSIFICATION	2.0519050622241568E-5	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999875080579317	WITHOUT_CLASSIFICATION	1.2491942068327596E-5	DEFECT
// Fill 20 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999747581200751	WITHOUT_CLASSIFICATION	2.5241879925013625E-5	DEFECT
// Fill 44 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999855858448088	WITHOUT_CLASSIFICATION	1.4414155191216197E-5	DEFECT
// Fill 7 of value (byte) -19 // Fill 3 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999530739838196	WITHOUT_CLASSIFICATION	4.692601618030782E-5	DEFECT
// Fill 18 of value (byte) -19 // Fill 13 of value (byte) 33 // Fill 12 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9998670843525381	WITHOUT_CLASSIFICATION	1.3291564746182986E-4	DEFECT
// Fill 66 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999760781019204	WITHOUT_CLASSIFICATION	2.392189807957453E-5	DEFECT
// Fill 12 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999966731793676	WITHOUT_CLASSIFICATION	3.326820632400219E-5	DEFECT
// Fill 36 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999849908225531	WITHOUT_CLASSIFICATION	1.5009177446819476E-5	DEFECT
// Fill 4 of value (byte) -87 // Fill 9 of value (byte) 33 // Fill 53 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 28 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 8 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 55 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9997843026652808	WITHOUT_CLASSIFICATION	2.1569733471907913E-4	DEFECT
// Fill 23 of value (byte) -87	WITHOUT_CLASSIFICATION	0.999984390781226	WITHOUT_CLASSIFICATION	1.5609218773968948E-5	DEFECT
// Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999873239619267	WITHOUT_CLASSIFICATION	1.2676038073246877E-5	DEFECT
// Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999762086697417	WITHOUT_CLASSIFICATION	2.3791330258345756E-5	DEFECT
// Fill 10 of value (byte) -19 // Fill 8 of value (byte) -87 // Fill 13 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 6 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9998897129244522	WITHOUT_CLASSIFICATION	1.1028707554782625E-4	DEFECT
// Fill 71 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 5 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999033723768882	WITHOUT_CLASSIFICATION	9.662762311180133E-5	DEFECT
// Fill 15 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999825061240111	WITHOUT_CLASSIFICATION	1.7493875988920195E-5	DEFECT
// Fill 4 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999858470987042	WITHOUT_CLASSIFICATION	1.4152901295868392E-5	DEFECT
// Fill 15 of value (byte) -87 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9998867663815477	WITHOUT_CLASSIFICATION	1.132336184522456E-4	DEFECT
// Fill 4 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 519 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9998956759780065	WITHOUT_CLASSIFICATION	1.0432402199343775E-4	DEFECT
// Fill 53 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9998800273607517	WITHOUT_CLASSIFICATION	1.1997263924840328E-4	DEFECT
// Fill 8 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 22 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999154640896187	WITHOUT_CLASSIFICATION	8.453591038131629E-5	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999856188495275	WITHOUT_CLASSIFICATION	1.4381150472410528E-5	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999856188495275	WITHOUT_CLASSIFICATION	1.4381150472410528E-5	DEFECT
// Fill 3 of value (byte) 33 // Fill 4 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999197398795823	WITHOUT_CLASSIFICATION	8.026012041768504E-5	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999765541910196	WITHOUT_CLASSIFICATION	2.344580898035263E-5	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999765541910196	WITHOUT_CLASSIFICATION	2.344580898035263E-5	DEFECT
// Fill 5 of value (byte) -87 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87 // Fill 11 of value (byte) 33 // Fill 4 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999183726377525	WITHOUT_CLASSIFICATION	8.16273622475746E-5	DEFECT
// Fill 8 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 22 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999154640896187	WITHOUT_CLASSIFICATION	8.453591038131629E-5	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999856188495275	WITHOUT_CLASSIFICATION	1.4381150472410528E-5	DEFECT
// Fill 7 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87 // Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999004355690454	WITHOUT_CLASSIFICATION	9.956443095463513E-5	DEFECT
// Fill 4 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999348925611533	WITHOUT_CLASSIFICATION	6.51074388466372E-5	DEFECT
// Fill 3 of value (byte) -19 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 2 of value (byte) -19 // Fill 16 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999403955115325	WITHOUT_CLASSIFICATION	5.960448846745324E-5	DEFECT
// Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 22 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9998531029340771	WITHOUT_CLASSIFICATION	1.4689706592279175E-4	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999765541910196	WITHOUT_CLASSIFICATION	2.344580898035263E-5	DEFECT
// Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.999916583013144	WITHOUT_CLASSIFICATION	8.341698685596538E-5	DEFECT
// Fill 7 of value (byte) 33 // Fill 12 of value (byte) -87 // Fill 3 of value (byte) -19 // Fill 12 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9998938157485763	WITHOUT_CLASSIFICATION	1.061842514236676E-4	DEFECT
// Fill 22 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999764810941731	WITHOUT_CLASSIFICATION	2.3518905826905083E-5	DEFECT
// Fill 5 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9998654895049868	WITHOUT_CLASSIFICATION	1.3451049501323983E-4	DEFECT
// Fill 8 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999832607997506	WITHOUT_CLASSIFICATION	1.6739200249393222E-5	DEFECT
// Fill 3 of value (byte) -87 // Fill 18 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999490552121698	WITHOUT_CLASSIFICATION	5.0944787830143746E-5	DEFECT
// Fill 5 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 17 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999222826326454	WITHOUT_CLASSIFICATION	7.771736735467839E-5	DEFECT
// Fill 6 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87 // Fill 8 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9998120235283022	WITHOUT_CLASSIFICATION	1.8797647169771593E-4	DEFECT
// Fill 3 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 18 of value (byte) 33 // Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9998993462387605	WITHOUT_CLASSIFICATION	1.0065376123941403E-4	DEFECT
// Fill 6 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999207950055007	WITHOUT_CLASSIFICATION	7.920499449936884E-5	DEFECT
// Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 3 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999914258649206	WITHOUT_CLASSIFICATION	8.574135079407184E-5	DEFECT
// Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999873239619267	WITHOUT_CLASSIFICATION	1.2676038073246877E-5	DEFECT
// Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999873239619267	WITHOUT_CLASSIFICATION	1.2676038073246877E-5	DEFECT
// Fill 4 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999317666485285	WITHOUT_CLASSIFICATION	6.82333514715665E-5	DEFECT
// Fill 3 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 5 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999249941129593	WITHOUT_CLASSIFICATION	7.500588704078354E-5	DEFECT
// Fill 4 of value (byte) -87 // Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.999931459398562	WITHOUT_CLASSIFICATION	6.854060143805035E-5	DEFECT
// Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999822153581942	WITHOUT_CLASSIFICATION	1.778464180579718E-5	DEFECT
// Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999822153581942	WITHOUT_CLASSIFICATION	1.778464180579718E-5	DEFECT
// Fill 23 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999846174755995	WITHOUT_CLASSIFICATION	1.5382524400448774E-5	DEFECT
// Fill 23 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999846174755995	WITHOUT_CLASSIFICATION	1.5382524400448774E-5	DEFECT
// Fill 10 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999882867020731	WITHOUT_CLASSIFICATION	1.1713297926942302E-5	DEFECT
// Fill 10 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999882867020731	WITHOUT_CLASSIFICATION	1.1713297926942302E-5	DEFECT
// Fill 5 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 7 of value (byte) -87	WITHOUT_CLASSIFICATION	0.999921025632808	WITHOUT_CLASSIFICATION	7.897436719190524E-5	DEFECT
// Fill 4 of value (byte) -87 // Fill 7 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 7 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999325557604091	WITHOUT_CLASSIFICATION	6.74442395909413E-5	DEFECT
// Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999762086697417	WITHOUT_CLASSIFICATION	2.3791330258345756E-5	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999856188495275	WITHOUT_CLASSIFICATION	1.4381150472410528E-5	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999765541910196	WITHOUT_CLASSIFICATION	2.344580898035263E-5	DEFECT
// Fill 4 of value (byte) -87 // Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.999931459398562	WITHOUT_CLASSIFICATION	6.854060143805035E-5	DEFECT
// Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999822153581942	WITHOUT_CLASSIFICATION	1.778464180579718E-5	DEFECT
// Fill 23 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999846174755995	WITHOUT_CLASSIFICATION	1.5382524400448774E-5	DEFECT
// Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 18 of value (byte) 33 // Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9998953464653645	WITHOUT_CLASSIFICATION	1.046535346355681E-4	DEFECT
// Fill 16 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 6 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9998819818963566	WITHOUT_CLASSIFICATION	1.1801810364341904E-4	DEFECT
// Fill 8 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 145 of value (byte) 33 // Fill 46 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999832233027845	WITHOUT_CLASSIFICATION	1.6776697215500205E-4	DEFECT
// Fill 2 of value (byte) -19 // Fill 7 of value (byte) -87 // Fill 5 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 9 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9996441454254479	WITHOUT_CLASSIFICATION	3.558545745521883E-4	DEFECT
// Fill 10 of value (byte) -87 // Fill 39 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999338415377038	WITHOUT_CLASSIFICATION	6.615846229615459E-5	DEFECT
// Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999389023564254	WITHOUT_CLASSIFICATION	6.109764357464507E-5	DEFECT
// Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999389023564254	WITHOUT_CLASSIFICATION	6.109764357464507E-5	DEFECT
// Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999847839050927	WITHOUT_CLASSIFICATION	1.5216094907152463E-5	DEFECT
// Fill 6 of value (byte) 33 // Fill 4 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999194635591087	WITHOUT_CLASSIFICATION	8.053644089137498E-5	DEFECT
// Fill 2 of value (byte) -19 // Fill 6 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9998067830170475	WITHOUT_CLASSIFICATION	1.9321698295254812E-4	DEFECT
// Fill 2 of value (byte) 33 // Fill 5 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999014782605787	WITHOUT_CLASSIFICATION	9.852173942121553E-5	DEFECT
// Fill 4 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999910489971094	WITHOUT_CLASSIFICATION	8.951002890605335E-5	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999856188495275	WITHOUT_CLASSIFICATION	1.4381150472410528E-5	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999765541910196	WITHOUT_CLASSIFICATION	2.344580898035263E-5	DEFECT
// Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999847839050927	WITHOUT_CLASSIFICATION	1.5216094907152463E-5	DEFECT
// Fill 33 of value (byte) -19 // Fill 7 of value (byte) 33 // Fill 20 of value (byte) -87	WITHOUT_CLASSIFICATION	0.999912658972413	WITHOUT_CLASSIFICATION	8.734102758707125E-5	DEFECT
// Fill 6 of value (byte) -87 // Fill 4 of value (byte) 33 // Fill 6 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999206051712378	WITHOUT_CLASSIFICATION	7.939482876226699E-5	DEFECT
// Fill 21 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 7 of value (byte) -87	WITHOUT_CLASSIFICATION	0.99996556542663	WITHOUT_CLASSIFICATION	3.443457337003793E-5	DEFECT
// Fill 5 of value (byte) -19 // Fill 41 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999320833580274	WITHOUT_CLASSIFICATION	6.791664197262811E-5	DEFECT
// Fill 11 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999938891887994	WITHOUT_CLASSIFICATION	6.110811200549037E-6	DEFECT
// Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999246828182169	WITHOUT_CLASSIFICATION	7.5317181783093E-5	DEFECT
// Fill 5 of value (byte) 33 // Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999463222572439	WITHOUT_CLASSIFICATION	5.3677742756102135E-5	DEFECT
// Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999359689481786	WITHOUT_CLASSIFICATION	6.4031051821405E-5	DEFECT
// Fill 40 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999905910587195	WITHOUT_CLASSIFICATION	9.408941280510518E-6	DEFECT
// Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.999985901307205	WITHOUT_CLASSIFICATION	1.409869279487958E-5	DEFECT
// Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 7 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999279110150457	WITHOUT_CLASSIFICATION	7.20889849542999E-5	DEFECT
// Fill 7 of value (byte) -19 // Fill 40 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999441455677618	WITHOUT_CLASSIFICATION	5.585443223823641E-5	DEFECT
// Fill 4 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999908149389498	WITHOUT_CLASSIFICATION	9.185061050298347E-6	DEFECT
// Fill 8 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999884579687534	WITHOUT_CLASSIFICATION	1.1542031246612327E-5	DEFECT
// Fill 68 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999858692235272	WITHOUT_CLASSIFICATION	1.413077647279149E-5	DEFECT
// Fill 3 of value (byte) 33 // Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999667126489626	WITHOUT_CLASSIFICATION	3.328735103745549E-5	DEFECT
// Fill 7 of value (byte) -19 // Fill 211 of value (byte) 33 // Fill 13 of value (byte) -87 // Fill 4 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999550861394779	WITHOUT_CLASSIFICATION	4.491386052210666E-5	DEFECT
// Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999246828182169	WITHOUT_CLASSIFICATION	7.5317181783093E-5	DEFECT
// Fill 81 of value (byte) 33 // Fill 3 of value (byte) -19 // Fill 3714 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999454699863077	WITHOUT_CLASSIFICATION	5.4530013692207065E-5	DEFECT
// Fill 25 of value (byte) 33 // Fill 9 of value (byte) -19 // Fill 6 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9997559742319404	WITHOUT_CLASSIFICATION	2.4402576805956347E-4	DEFECT
// Fill 5 of value (byte) -87 // Fill 11 of value (byte) 33 // Fill 84 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 90 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9998860122030917	WITHOUT_CLASSIFICATION	1.1398779690824894E-4	DEFECT
// Fill 3 of value (byte) -87 // Fill 6 of value (byte) 33 // Fill 40 of value (byte) -19 // Fill 7379 of value (byte) 33 // Fill 20902 of value (byte) -19 // Fill 3162 of value (byte) 33 // Fill 11172 of value (byte) -19 // Fill 92 of value (byte) 33 // Fill 8190 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9992974885318592	WITHOUT_CLASSIFICATION	7.025114681408691E-4	DEFECT
// isValid(int):boolean	WITHOUT_CLASSIFICATION	0.9999997469317483	WITHOUT_CLASSIFICATION	2.530682517493857E-7	DEFECT
// isInvalid(int):boolean	WITHOUT_CLASSIFICATION	0.9999997808558944	WITHOUT_CLASSIFICATION	2.1914410560380326E-7	DEFECT
// isContent(int):boolean	WITHOUT_CLASSIFICATION	0.9999995725421716	WITHOUT_CLASSIFICATION	4.2745782829070287E-7	DEFECT
// isMarkup(int):boolean	WITHOUT_CLASSIFICATION	0.9999998360524731	WITHOUT_CLASSIFICATION	1.6394752689699946E-7	DEFECT
// isSpace(int):boolean	WITHOUT_CLASSIFICATION	0.9999998855385436	WITHOUT_CLASSIFICATION	1.1446145639667152E-7	DEFECT
// isNameStart(int):boolean	WITHOUT_CLASSIFICATION	0.9999999669268669	WITHOUT_CLASSIFICATION	3.307313310985043E-8	DEFECT
// isName(int):boolean	WITHOUT_CLASSIFICATION	0.9999998341088288	WITHOUT_CLASSIFICATION	1.6589117113944732E-7	DEFECT
// isNCNameStart(int):boolean	WITHOUT_CLASSIFICATION	0.9999999787015685	WITHOUT_CLASSIFICATION	2.1298431551903387E-8	DEFECT
// isNCName(int):boolean	WITHOUT_CLASSIFICATION	0.9999998931694223	WITHOUT_CLASSIFICATION	1.0683057782626197E-7	DEFECT
// isPubid(int):boolean	WITHOUT_CLASSIFICATION	0.9999996532173768	WITHOUT_CLASSIFICATION	3.4678262316739745E-7	DEFECT
/*      * [5] Name ::= (Letter | '_' | ':') (NameChar)*      */	WITHOUT_CLASSIFICATION	0.9999999199614561	WITHOUT_CLASSIFICATION	8.003854398705455E-8	DEFECT
// isValidName(String):boolean	WITHOUT_CLASSIFICATION	0.9999999102681445	WITHOUT_CLASSIFICATION	8.973185550217301E-8	DEFECT
/*      * from the namespace rec      * [4] NCName ::= (Letter | '_') (NCNameChar)*      */	WITHOUT_CLASSIFICATION	0.9999999295361663	WITHOUT_CLASSIFICATION	7.046383358501148E-8	DEFECT
// isValidNCName(String):boolean	WITHOUT_CLASSIFICATION	0.9999998219673414	WITHOUT_CLASSIFICATION	1.7803265850973958E-7	DEFECT
/*      * [7] Nmtoken ::= (NameChar)+      */	WITHOUT_CLASSIFICATION	0.9999944764408241	WITHOUT_CLASSIFICATION	5.52355917592414E-6	DEFECT
// encodings	WITHOUT_CLASSIFICATION	0.9999970804589656	WITHOUT_CLASSIFICATION	2.9195410344851374E-6	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999986414502402	WITHOUT_CLASSIFICATION	1.3585497598851668E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999989374002828	WITHOUT_CLASSIFICATION	1.0625997173036432E-6	DEFECT
// // Public static methods //	WITHOUT_CLASSIFICATION	0.9999999719765144	WITHOUT_CLASSIFICATION	2.8023485748291568E-8	DEFECT
// isValidIANAEncoding(String):boolean	WITHOUT_CLASSIFICATION	0.9999995901013206	WITHOUT_CLASSIFICATION	4.0989867937430715E-7	DEFECT
// isValidIANAEncoding(String):boolean	WITHOUT_CLASSIFICATION	0.9999995901013206	WITHOUT_CLASSIFICATION	4.0989867937430715E-7	DEFECT
//order constants	WITHOUT_CLASSIFICATION	0.9999994795673017	WITHOUT_CLASSIFICATION	5.204326982568701E-7	DEFECT
// check whether the character is in the range 0x30 ~ 0x39	WITHOUT_CLASSIFICATION	0.9999998876380549	WITHOUT_CLASSIFICATION	1.1236194498986273E-7	DEFECT
// if the character is in the range 0x30 ~ 0x39, return its int value (0~9), // otherwise, return -1	WITHOUT_CLASSIFICATION	0.9999999983964256	WITHOUT_CLASSIFICATION	1.6035743693422091E-9	DEFECT
// There are attributes to handle.	WITHOUT_CLASSIFICATION	0.9999989352383523	WITHOUT_CLASSIFICATION	1.0647616476486481E-6	DEFECT
// There are attributes to handle.	WITHOUT_CLASSIFICATION	0.9999989352383523	WITHOUT_CLASSIFICATION	1.0647616476486481E-6	DEFECT
//XMLTypeResourceImpl	WITHOUT_CLASSIFICATION	0.9999824051382462	WITHOUT_CLASSIFICATION	1.759486175376601E-5	DEFECT
//XMLTypeValidator	WITHOUT_CLASSIFICATION	0.9999643811472974	WITHOUT_CLASSIFICATION	3.5618852702604154E-5	DEFECT
// If the feature is a bidirectional reference with a multiplicity-many reverse, a composite reverse, // or a multiplicity-1 reverse that is already set (on value), then we'll switch things around and  // execute this command a little differently, because otherwise it's not undoable. //	WITHOUT_CLASSIFICATION	0.9999994040288216	WITHOUT_CLASSIFICATION	5.959711783355673E-7	DEFECT
// We never directly set a multiplicity-many feature to a list directly.  Instead, we remove the old values // values, move the values that remain, and insert the new values.  If all old values are removed, we'll still // set it to an empty list, or unset it, as appropriate.  //	WITHOUT_CLASSIFICATION	0.9999937039407913	WITHOUT_CLASSIFICATION	6.296059208641833E-6	DEFECT
// If we aren't simply removing all the old values... //	WITHOUT_CLASSIFICATION	0.9751759662835867	WITHOUT_CLASSIFICATION	0.024824033716413303	DEFECT
// If there are values to remove, append a command for them. //	WITHOUT_CLASSIFICATION	0.9999582426767307	WITHOUT_CLASSIFICATION	4.1757323269216666E-5	DEFECT
// Determine the values that will remain and move them into the right order, if necessary. //	WITHOUT_CLASSIFICATION	0.9999951679711431	WITHOUT_CLASSIFICATION	4.832028856938421E-6	DEFECT
// end setting whole list	WITHOUT_CLASSIFICATION	0.9999999144415905	WITHOUT_CLASSIFICATION	8.55584095661484E-8	DEFECT
// For a 1-to-many association, doing the set as a remove and add from the other end will make it undoable. // In particular, if there is an existing non-null value, we first need to remove it from the other end, so // that it will be reinserted at the correct index on undo.  //	WITHOUT_CLASSIFICATION	0.9954816977818187	WITHOUT_CLASSIFICATION	0.004518302218181272	DEFECT
// (value == null) && (oldValue == null) // A simple set/unset will suffice. //	WITHOUT_CLASSIFICATION	0.9999893607475814	WITHOUT_CLASSIFICATION	1.0639252418514587E-5	DEFECT
// (value == null) && (oldValue != null) // Remove owner from the old value and unset if necessary. //	WITHOUT_CLASSIFICATION	0.9999218428489836	WITHOUT_CLASSIFICATION	7.815715101645981E-5	DEFECT
// ((value != null) 	WITHOUT_CLASSIFICATION	0.9999923336215731	WITHOUT_CLASSIFICATION	7.666378426778058E-6	DEFECT
// (value != null) && (oldValue == null) // Add owner to new value. //	WITHOUT_CLASSIFICATION	0.9999911961464283	WITHOUT_CLASSIFICATION	8.8038535717547E-6	DEFECT
// ((value != null) && (oldValue != null)) // Need a compound command to remove owner from old value and add it to new value. //	WITHOUT_CLASSIFICATION	0.9997470990371384	WITHOUT_CLASSIFICATION	2.5290096286151797E-4	DEFECT
// For consistency, we always set 1-1 container relations from the container end. //	WITHOUT_CLASSIFICATION	0.9999983378667824	WITHOUT_CLASSIFICATION	1.6621332176572235E-6	DEFECT
// For a many-to-1 or 1-to-1 association, if the opposite reference on the new value is already set to // something, we need a compound command that first explicitly removes that reference, so that it will be // restored in the undo. //	WITHOUT_CLASSIFICATION	0.9999999142953135	WITHOUT_CLASSIFICATION	8.570468648567025E-8	DEFECT
// For a many-to-1, we use SetCommand.create() to create the command to remove the opposite reference; // a RemoveCommand on its opposite will actually result. //	WITHOUT_CLASSIFICATION	0.9998569081644869	WITHOUT_CLASSIFICATION	1.4309183551309589E-4	DEFECT
// For a 1-to-1, we can directly create a SetCommand. //	WITHOUT_CLASSIFICATION	0.9997518109754405	WITHOUT_CLASSIFICATION	2.4818902455938795E-4	DEFECT
// Initialize all the fields from the command parameter. //	WITHOUT_CLASSIFICATION	0.9999890971627066	WITHOUT_CLASSIFICATION	1.090283729344374E-5	DEFECT
// If there is an owner. //	WITHOUT_CLASSIFICATION	0.9999984575065182	WITHOUT_CLASSIFICATION	1.5424934819270147E-6	DEFECT
// Get the owner's meta object. //	WITHOUT_CLASSIFICATION	0.9999997737896998	WITHOUT_CLASSIFICATION	2.2621030022887054E-7	DEFECT
// Is the feature an attribute of the owner... //	WITHOUT_CLASSIFICATION	0.9999706672993964	WITHOUT_CLASSIFICATION	2.9332700603592813E-5	DEFECT
// If must be of this type then. //	WITHOUT_CLASSIFICATION	0.9999974448654321	WITHOUT_CLASSIFICATION	2.555134567935849E-6	DEFECT
// Setting at an index. Make sure the index is valid, the type is valid, and the value isn't already in a // unique feature. Record the old value. //	WITHOUT_CLASSIFICATION	0.9998277504103306	WITHOUT_CLASSIFICATION	1.7224958966942535E-4	DEFECT
// If the attribute is set, record it's old value. //	WITHOUT_CLASSIFICATION	0.9999877634058217	WITHOUT_CLASSIFICATION	1.2236594178260661E-5	DEFECT
// oldValue = owner.eGet(feature);	WITHOUT_CLASSIFICATION	0.9999939705474945	WITHOUT_CLASSIFICATION	6.029452505477531E-6	DEFECT
// Make sure the container is not being put into a contained object. //	WITHOUT_CLASSIFICATION	0.9999990857818749	WITHOUT_CLASSIFICATION	9.142181251557217E-7	DEFECT
// If the other end is a many, then we should remove the owner from the old value's opposite feature so that undo will put it back. //	WITHOUT_CLASSIFICATION	0.9996989524120733	WITHOUT_CLASSIFICATION	3.010475879267402E-4	DEFECT
// If the other end is single, then we should unset the owner from the old value's opposite feature so that undo will put it back. //	WITHOUT_CLASSIFICATION	0.9999708149636237	WITHOUT_CLASSIFICATION	2.9185036376292484E-5	DEFECT
// Either set or unset the feature. //	WITHOUT_CLASSIFICATION	0.9999990343452717	WITHOUT_CLASSIFICATION	9.656547282825001E-7	DEFECT
// Either set or unset the feature. //	WITHOUT_CLASSIFICATION	0.9999990343452717	WITHOUT_CLASSIFICATION	9.656547282825001E-7	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9999998760061326	WITHOUT_CLASSIFICATION	1.239938674237769E-7	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9999998760061326	WITHOUT_CLASSIFICATION	1.239938674237769E-7	DEFECT
// Either set or unset the old value. //	WITHOUT_CLASSIFICATION	0.9999970366175465	WITHOUT_CLASSIFICATION	2.9633824535856217E-6	DEFECT
// If there is no list to add to, no collection or an empty collection from which to add, or the index is out of range... //	WITHOUT_CLASSIFICATION	0.9999979983399409	WITHOUT_CLASSIFICATION	2.001660059216738E-6	DEFECT
// If it's a feature map, we'll need to validate the entry feature and enforce its multiplicity restraints. //	WITHOUT_CLASSIFICATION	0.9999999110894419	WITHOUT_CLASSIFICATION	8.891055808039209E-8	DEFECT
// Keep track of all the entry features that are already in the feature map and that will be added, excluding // XML text, CDATA, and comments (if we're in a mixed type). //	WITHOUT_CLASSIFICATION	0.9996758755382211	WITHOUT_CLASSIFICATION	3.241244617789002E-4	DEFECT
// Check each object...  //	WITHOUT_CLASSIFICATION	0.9999965983846646	WITHOUT_CLASSIFICATION	3.401615335369261E-6	DEFECT
// Check type of object. //	WITHOUT_CLASSIFICATION	0.9999988976324992	WITHOUT_CLASSIFICATION	1.1023675007930673E-6	DEFECT
// Check that the object isn't already in a unique list. //	WITHOUT_CLASSIFICATION	0.9999958749887918	WITHOUT_CLASSIFICATION	4.125011208232074E-6	DEFECT
// For feature maps, test that the entry feature is a valid type, that the entry value is an instance of it, // that there is not already something in a document root, and that there is not already something in a // single-valued entry feature. //	WITHOUT_CLASSIFICATION	0.9999067891782836	WITHOUT_CLASSIFICATION	9.321082171635397E-5	DEFECT
// Check to see if a container is being put into a contained object. //	WITHOUT_CLASSIFICATION	0.9999999918780329	WITHOUT_CLASSIFICATION	8.121967204422767E-9	DEFECT
// Simply add the collection to the list. //	WITHOUT_CLASSIFICATION	0.9999986549050324	WITHOUT_CLASSIFICATION	1.3450949676179881E-6	DEFECT
// Simply add the collection to the list. //	WITHOUT_CLASSIFICATION	0.9999986549050324	WITHOUT_CLASSIFICATION	1.3450949676179881E-6	DEFECT
// We'd like the collection of things added to be selected after this command completes. //	WITHOUT_CLASSIFICATION	0.9996895729626432	WITHOUT_CLASSIFICATION	3.10427037356753E-4	DEFECT
// We'd like the collection of things added to be selected after this command completes. //	WITHOUT_CLASSIFICATION	0.9996895729626432	WITHOUT_CLASSIFICATION	3.10427037356753E-4	DEFECT
// Remove the collection from the list by index. //	WITHOUT_CLASSIFICATION	0.9998729253552677	WITHOUT_CLASSIFICATION	1.270746447323093E-4	DEFECT
// We'd like the owner selected after this undo completes. //	WITHOUT_CLASSIFICATION	0.9999973140114689	WITHOUT_CLASSIFICATION	2.6859885311249486E-6	DEFECT
// It must be an unsettable feature to be null and considered set. //	WITHOUT_CLASSIFICATION	0.9999998985680154	WITHOUT_CLASSIFICATION	1.0143198455538178E-7	DEFECT
// It must be an unsettable feature to be empty and considered set. //	WITHOUT_CLASSIFICATION	0.9999997879358218	WITHOUT_CLASSIFICATION	2.1206417834413418E-7	DEFECT
// if one is null, they'll all be null	WITHOUT_CLASSIFICATION	0.9999998607667161	WITHOUT_CLASSIFICATION	1.3923328383211027E-7	DEFECT
// Possible scope for the ChangeRecorder	WITHOUT_CLASSIFICATION	0.9999998437414942	WITHOUT_CLASSIFICATION	1.5625850585806336E-7	DEFECT
// Create commands to create copies of the children. //	WITHOUT_CLASSIFICATION	0.9999954544149263	WITHOUT_CLASSIFICATION	4.545585073721999E-6	DEFECT
// We'll default to this. //	WITHOUT_CLASSIFICATION	0.9999998832229352	WITHOUT_CLASSIFICATION	1.167770648416215E-7	DEFECT
// If there isn't something obviously wrong with the arguments... //	WITHOUT_CLASSIFICATION	0.9986843534734323	WITHOUT_CLASSIFICATION	0.0013156465265677295	DEFECT
// If the location is near the boundary, we'll start by trying to do a drop insert. //	WITHOUT_CLASSIFICATION	0.9999997266154852	WITHOUT_CLASSIFICATION	2.733845148771712E-7	DEFECT
// If we could do a drop insert operation... //	WITHOUT_CLASSIFICATION	0.9999921725760866	WITHOUT_CLASSIFICATION	7.827423913418894E-6	DEFECT
// Set the bounds so that we re-check when we are closer to the middle. //	WITHOUT_CLASSIFICATION	0.9999998935087657	WITHOUT_CLASSIFICATION	1.0649123428540022E-7	DEFECT
// We can try to do a drop on instead. //	WITHOUT_CLASSIFICATION	0.9999622391205584	WITHOUT_CLASSIFICATION	3.776087944172774E-5	DEFECT
// Set the bounds so that we re-check when we get near the other end. //	WITHOUT_CLASSIFICATION	0.9999994789411861	WITHOUT_CLASSIFICATION	5.210588138111209E-7	DEFECT
// We are near the middle, so we'll start by trying to do a drop on. //	WITHOUT_CLASSIFICATION	0.9999999689775635	WITHOUT_CLASSIFICATION	3.102243647963037E-8	DEFECT
// If we can do a drop on operation. //	WITHOUT_CLASSIFICATION	0.9999913995731284	WITHOUT_CLASSIFICATION	8.600426871553214E-6	DEFECT
// Set the range so that we re-check when we get aren't in the middle. //	WITHOUT_CLASSIFICATION	0.9999915667283695	WITHOUT_CLASSIFICATION	8.43327163054805E-6	DEFECT
// We can reset and try a drop insert instead. //	WITHOUT_CLASSIFICATION	0.9998832108939991	WITHOUT_CLASSIFICATION	1.1678910600093567E-4	DEFECT
// We'll always be wrong for these arguments, so don't bother re-checking. //	WITHOUT_CLASSIFICATION	0.9999899388244416	WITHOUT_CLASSIFICATION	1.0061175558244045E-5	DEFECT
// This will be the default return value. //	WITHOUT_CLASSIFICATION	0.9999988096199067	WITHOUT_CLASSIFICATION	1.190380093252399E-6	DEFECT
// The feedback is set based on which half we are in. // If the command isn't executable, these values won't be used. //	WITHOUT_CLASSIFICATION	0.9987607930270309	WITHOUT_CLASSIFICATION	0.0012392069729690737	DEFECT
// If we can't determine the parent. //	WITHOUT_CLASSIFICATION	0.9999879901566051	WITHOUT_CLASSIFICATION	1.2009843394870176E-5	DEFECT
// Iterate over the children to find the owner. //	WITHOUT_CLASSIFICATION	0.9999999126360457	WITHOUT_CLASSIFICATION	8.736395425567455E-8	DEFECT
// When we match the owner, we're done. //	WITHOUT_CLASSIFICATION	0.9999992953902788	WITHOUT_CLASSIFICATION	7.046097210944626E-7	DEFECT
// Try to create a specific command based on the current desired operation. //	WITHOUT_CLASSIFICATION	0.9999999651556143	WITHOUT_CLASSIFICATION	3.484438577507356E-8	DEFECT
// If there isn't an executable command we should maybe try a copy operation, but only if we're allowed and not doing a link. //	WITHOUT_CLASSIFICATION	0.9983744032100283	WITHOUT_CLASSIFICATION	0.0016255967899716668	DEFECT
// Try again. //	WITHOUT_CLASSIFICATION	0.999997060148579	WITHOUT_CLASSIFICATION	2.939851420942649E-6	DEFECT
// We've switch the operation! //	WITHOUT_CLASSIFICATION	0.9999997681658405	WITHOUT_CLASSIFICATION	2.3183415964715147E-7	DEFECT
// We've switch the operation! //	WITHOUT_CLASSIFICATION	0.9999997681658405	WITHOUT_CLASSIFICATION	2.3183415964715147E-7	DEFECT
// We don't want to move insert an object before or after itself... //	WITHOUT_CLASSIFICATION	0.9999683830472025	WITHOUT_CLASSIFICATION	3.161695279758383E-5	DEFECT
// If the dragged objects share a parent... //	WITHOUT_CLASSIFICATION	0.9999224249339985	WITHOUT_CLASSIFICATION	7.757506600153897E-5	DEFECT
// Just remove the objects and add them. //	WITHOUT_CLASSIFICATION	0.9999988209280487	WITHOUT_CLASSIFICATION	1.1790719513312814E-6	DEFECT
// We don't want to copy insert an object before or after itself... //	WITHOUT_CLASSIFICATION	0.9997880050301	WITHOUT_CLASSIFICATION	2.119949699000204E-4	DEFECT
// Copy the collection //	WITHOUT_CLASSIFICATION	0.9999960201918554	WITHOUT_CLASSIFICATION	3.97980814451143E-6	DEFECT
// And add the copy. //	WITHOUT_CLASSIFICATION	0.999941345023018	WITHOUT_CLASSIFICATION	5.8654976981945286E-5	DEFECT
// if optimize // if collection	WITHOUT_CLASSIFICATION	0.9999997482423643	WITHOUT_CLASSIFICATION	2.5175763576510974E-7	DEFECT
// We don't want to insert an object before or after itself... //	WITHOUT_CLASSIFICATION	0.9998820663788573	WITHOUT_CLASSIFICATION	1.1793362114260619E-4	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9999998760061326	WITHOUT_CLASSIFICATION	1.239938674237769E-7	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9999998760061326	WITHOUT_CLASSIFICATION	1.239938674237769E-7	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9999998760061326	WITHOUT_CLASSIFICATION	1.239938674237769E-7	DEFECT
// If there isn't an executable command we should maybe try a copy operation, but only if we're allowed and not doing a link. //	WITHOUT_CLASSIFICATION	0.9983744032100283	WITHOUT_CLASSIFICATION	0.0016255967899716668	DEFECT
// If there isn't an executable command we should maybe try a link operation, but only if we're allowed and not doing a link. //	WITHOUT_CLASSIFICATION	0.999134585494416	WITHOUT_CLASSIFICATION	8.654145055839324E-4	DEFECT
// Add the collection //	WITHOUT_CLASSIFICATION	0.9999964729722473	WITHOUT_CLASSIFICATION	3.5270277527481234E-6	DEFECT
// This is the default return value. //	WITHOUT_CLASSIFICATION	0.9999978261690763	WITHOUT_CLASSIFICATION	2.1738309236637455E-6	DEFECT
// This is the feedback we use to indicate drop on; it will only be used if the command is executable. //	WITHOUT_CLASSIFICATION	0.999967528478912	WITHOUT_CLASSIFICATION	3.2471521087891215E-5	DEFECT
// Prepare the right type of operation. //	WITHOUT_CLASSIFICATION	0.999986911152297	WITHOUT_CLASSIFICATION	1.3088847702909062E-5	DEFECT
// If we can't set the collection, try setting use the single value of the collection. //	WITHOUT_CLASSIFICATION	0.9999823686777679	WITHOUT_CLASSIFICATION	1.763132223208466E-5	DEFECT
// We'll assume that the copy command can execute and that adding a copy of the clipboard // is the same test as adding the clipboard contents itself. //	WITHOUT_CLASSIFICATION	0.9999998918390738	WITHOUT_CLASSIFICATION	1.0816092622829924E-7	DEFECT
// Reset as in the constructor. //	WITHOUT_CLASSIFICATION	0.9999998966541722	WITHOUT_CLASSIFICATION	1.0334582778683308E-7	DEFECT
// If the operation has changed significantly... //	WITHOUT_CLASSIFICATION	0.9995849856935288	WITHOUT_CLASSIFICATION	4.150143064711666E-4	DEFECT
// Clean it up. //	WITHOUT_CLASSIFICATION	0.999999605089521	WITHOUT_CLASSIFICATION	3.9491047888555656E-7	DEFECT
// Set the arguments again. //	WITHOUT_CLASSIFICATION	0.9999999715439607	WITHOUT_CLASSIFICATION	2.8456039262873985E-8	DEFECT
// Determine if the operation is executable. //	WITHOUT_CLASSIFICATION	0.9999999860457439	WITHOUT_CLASSIFICATION	1.395425611727522E-8	DEFECT
// Just return the cached result. //	WITHOUT_CLASSIFICATION	0.9999997310903119	WITHOUT_CLASSIFICATION	2.6890968808928545E-7	DEFECT
// Only return the operation for an executable command. //	WITHOUT_CLASSIFICATION	0.9999989194664316	WITHOUT_CLASSIFICATION	1.0805335683754953E-6	DEFECT
// Thread.dumpStack();	WITHOUT_CLASSIFICATION	0.9999997470508564	WITHOUT_CLASSIFICATION	2.529491436082816E-7	DEFECT
// This can't execute if there is no owner list  // or the owner list doesn't contain the value being replaced or  // there are not replacements. //	WITHOUT_CLASSIFICATION	0.9999982907269321	WITHOUT_CLASSIFICATION	1.7092730678257514E-6	DEFECT
// An extent allows anything to be added. //	WITHOUT_CLASSIFICATION	0.9997568577968104	WITHOUT_CLASSIFICATION	2.431422031896484E-4	DEFECT
// Make sure each object conforms to the type of the feature. //	WITHOUT_CLASSIFICATION	0.9999992270284351	WITHOUT_CLASSIFICATION	7.729715648111923E-7	DEFECT
// Record the position of the value in the owner list. //	WITHOUT_CLASSIFICATION	0.9999931643940513	WITHOUT_CLASSIFICATION	6.835605948789995E-6	DEFECT
// Simply remove the object from the owner list. //	WITHOUT_CLASSIFICATION	0.9999960814757057	WITHOUT_CLASSIFICATION	3.918524294288321E-6	DEFECT
// Insert the collection at the right place. //	WITHOUT_CLASSIFICATION	0.9999579757009461	WITHOUT_CLASSIFICATION	4.202429905377026E-5	DEFECT
// We'd like the collection of replacements selected after this replace completes. //	WITHOUT_CLASSIFICATION	0.999989463904376	WITHOUT_CLASSIFICATION	1.0536095624008922E-5	DEFECT
// Remove the collection of replacements. //	WITHOUT_CLASSIFICATION	0.9999967917326862	WITHOUT_CLASSIFICATION	3.2082673137529498E-6	DEFECT
// Add the value back in the right place. //	WITHOUT_CLASSIFICATION	0.9999395885522898	WITHOUT_CLASSIFICATION	6.0411447710169585E-5	DEFECT
// We'd like the replaced selected after this undo replace completes. //	WITHOUT_CLASSIFICATION	0.9999938304843811	WITHOUT_CLASSIFICATION	6.169515618901192E-6	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9999998760061326	WITHOUT_CLASSIFICATION	1.239938674237769E-7	DEFECT
// We'll assume that the copy command can execute and that adding a copy of the clipboard // is the same test as adding the clipboard contents itself. //	WITHOUT_CLASSIFICATION	0.9999998918390738	WITHOUT_CLASSIFICATION	1.0816092622829924E-7	DEFECT
// Thread.dumpStack();	WITHOUT_CLASSIFICATION	0.9999997470508564	WITHOUT_CLASSIFICATION	2.529491436082816E-7	DEFECT
// Create a strict compound command to do a copy and then add the result //	WITHOUT_CLASSIFICATION	0.9999996619014151	WITHOUT_CLASSIFICATION	3.3809858501540773E-7	DEFECT
// Create a command to copy the clipboard. //	WITHOUT_CLASSIFICATION	0.9999994510254522	WITHOUT_CLASSIFICATION	5.489745477218102E-7	DEFECT
// Create a proxy that will create an add command. //	WITHOUT_CLASSIFICATION	0.9999156158231115	WITHOUT_CLASSIFICATION	8.43841768884367E-5	DEFECT
// Use the original to do the add, but only if it's of the same type as the copy. // This ensures that if there is conversion being done as part of the copy, // as would be the case for a cross domain copy in the mapping framework, // that we do actually use the converted instance. //	WITHOUT_CLASSIFICATION	0.999749897375007	WITHOUT_CLASSIFICATION	2.50102624992963E-4	DEFECT
// This will determine canExecute as efficiently as possible. //	WITHOUT_CLASSIFICATION	0.9999669354856909	WITHOUT_CLASSIFICATION	3.306451430908798E-5	DEFECT
// This will actually execute the copy command in order to check if the add can execute. //	WITHOUT_CLASSIFICATION	0.999963926819088	WITHOUT_CLASSIFICATION	3.6073180912107504E-5	DEFECT
// We need to check canExecute() here in case prepare() went down the "optimize" path. //	WITHOUT_CLASSIFICATION	0.999999806060749	WITHOUT_CLASSIFICATION	1.9393925100093535E-7	DEFECT
// This can execute if there is an owner list and a collection and the owner list contains all the objects of the collection. //	WITHOUT_CLASSIFICATION	0.9999823410113508	WITHOUT_CLASSIFICATION	1.7658988649282916E-5	DEFECT
// If this owned object is one from the collection... //	WITHOUT_CLASSIFICATION	0.9992545749792837	WITHOUT_CLASSIFICATION	7.454250207162601E-4	DEFECT
// Remove the object from the collection and add it to the identity list. //	WITHOUT_CLASSIFICATION	0.9999802117209241	WITHOUT_CLASSIFICATION	1.9788279075872567E-5	DEFECT
// Record the index. //	WITHOUT_CLASSIFICATION	0.9999548974268981	WITHOUT_CLASSIFICATION	4.510257310193074E-5	DEFECT
// Record the index. //	WITHOUT_CLASSIFICATION	0.9999548974268981	WITHOUT_CLASSIFICATION	4.510257310193074E-5	DEFECT
// Second pass: match by value equality. //	WITHOUT_CLASSIFICATION	0.9997503203973493	WITHOUT_CLASSIFICATION	2.496796026506853E-4	DEFECT
// If this owned object is equal to one from the collection... //	WITHOUT_CLASSIFICATION	0.9999830533486729	WITHOUT_CLASSIFICATION	1.6946651327119073E-5	DEFECT
// Remove the object from the collection and add it to the equality list.  //	WITHOUT_CLASSIFICATION	0.9999978888465381	WITHOUT_CLASSIFICATION	2.1111534619082402E-6	DEFECT
// Merge the lists. //	WITHOUT_CLASSIFICATION	0.9999999540787116	WITHOUT_CLASSIFICATION	4.592128840798785E-8	DEFECT
// Remove objects from the owner list by index, starting from the end. //	WITHOUT_CLASSIFICATION	0.9998472899690661	WITHOUT_CLASSIFICATION	1.527100309338355E-4	DEFECT
// We'd like the owner selected after this remove completes. //	WITHOUT_CLASSIFICATION	0.9999326388347203	WITHOUT_CLASSIFICATION	6.736116527972801E-5	DEFECT
// If either list is empty, the result is simply the other. //	WITHOUT_CLASSIFICATION	0.9999960252033226	WITHOUT_CLASSIFICATION	3.9747966772669485E-6	DEFECT
// Allocate list and array for objects and indices. //	WITHOUT_CLASSIFICATION	0.9999980869459048	WITHOUT_CLASSIFICATION	1.91305409527854E-6	DEFECT
// Index counters into indices1, indices2, and indices.  //	WITHOUT_CLASSIFICATION	0.9999965605996637	WITHOUT_CLASSIFICATION	3.4394003363301387E-6	DEFECT
// Object iterators. //	WITHOUT_CLASSIFICATION	0.9999999859543137	WITHOUT_CLASSIFICATION	1.404568633059009E-8	DEFECT
// Repeatedly select the lower index and corresponding object, and advance past the selected pair. //	WITHOUT_CLASSIFICATION	0.9999685957699554	WITHOUT_CLASSIFICATION	3.140423004452636E-5	DEFECT
// We'd like the collection of things added to be selected after this command completes. //	WITHOUT_CLASSIFICATION	0.9996895729626432	WITHOUT_CLASSIFICATION	3.10427037356753E-4	DEFECT
// Create commands to create copies of the children. //	WITHOUT_CLASSIFICATION	0.9999954544149263	WITHOUT_CLASSIFICATION	4.545585073721999E-6	DEFECT
// Thread.dumpStack();	WITHOUT_CLASSIFICATION	0.9999997470508564	WITHOUT_CLASSIFICATION	2.529491436082816E-7	DEFECT
// Remove objects from the owner list by index, starting from the end. //	WITHOUT_CLASSIFICATION	0.9998472899690661	WITHOUT_CLASSIFICATION	1.527100309338355E-4	DEFECT
// We'd like the owner selected after this remove completes. //	WITHOUT_CLASSIFICATION	0.9999326388347203	WITHOUT_CLASSIFICATION	6.736116527972801E-5	DEFECT
// Create commands to create the copy object(s). //	WITHOUT_CLASSIFICATION	0.9999505092138141	WITHOUT_CLASSIFICATION	4.949078618600398E-5	DEFECT
// Create an initialize copy command for each of the created objects. //	WITHOUT_CLASSIFICATION	0.9999996679272013	WITHOUT_CLASSIFICATION	3.320727987512061E-7	DEFECT
// Record it for execution. //	WITHOUT_CLASSIFICATION	0.9995685757824245	WITHOUT_CLASSIFICATION	4.314242175754939E-4	DEFECT
// This ensures that the CreateCopyCommand will be executed by StrictCompoundCommand.prepare(). //	WITHOUT_CLASSIFICATION	0.9998147511835184	WITHOUT_CLASSIFICATION	1.8524881648167418E-4	DEFECT
// This will execute the CreateCopyCommand's and then call canExecute on the InitializeCopyCommand's. //	WITHOUT_CLASSIFICATION	0.9999522406770549	WITHOUT_CLASSIFICATION	4.7759322945049407E-5	DEFECT
// We'll assume that all the CreateCopyCommand's and InitializeCopyCommand's can execute. //	WITHOUT_CLASSIFICATION	0.9999982479678157	WITHOUT_CLASSIFICATION	1.75203218432571E-6	DEFECT
// This will call prepare() which will partially execute the command. //	WITHOUT_CLASSIFICATION	0.9987431681139058	WITHOUT_CLASSIFICATION	0.0012568318860942344	DEFECT
// We need to check canExecute() in case optimize is true. //	WITHOUT_CLASSIFICATION	0.9999999633338444	WITHOUT_CLASSIFICATION	3.666615546143183E-8	DEFECT
// Create a command to create a copy of the object. //	WITHOUT_CLASSIFICATION	0.9999955866451931	WITHOUT_CLASSIFICATION	4.413354806968905E-6	DEFECT
// This handles IStructuredSelection. //	WITHOUT_CLASSIFICATION	0.9999998671737941	WITHOUT_CLASSIFICATION	1.3282620585381083E-7	DEFECT
// setResourceFactoryRegister(new ExtensibleContextResourceFactoryRegister()); //EATM setResourceFactoryRegister(new ContextResourceFactoryRegister());	WITHOUT_CLASSIFICATION	0.9999999694930798	WITHOUT_CLASSIFICATION	3.050692032767942E-8	DEFECT
// If the owner parameter is set, we delegate to the owner's adapter //	WITHOUT_CLASSIFICATION	0.9999996745543874	WITHOUT_CLASSIFICATION	3.2544561258216925E-7	DEFECT
// If there is an adapter of the correct type... //	WITHOUT_CLASSIFICATION	0.9883969205249259	WITHOUT_CLASSIFICATION	0.011603079475074125	DEFECT
// If command has no owner specified //	WITHOUT_CLASSIFICATION	0.9999999282192266	WITHOUT_CLASSIFICATION	7.17807734166007E-8	DEFECT
// For RemoveCommand, we will find the owner by calling EditingDomain.getParent() on the object(s) being removed. //	WITHOUT_CLASSIFICATION	0.9999690311012576	WITHOUT_CLASSIFICATION	3.096889874236318E-5	DEFECT
// If there is a column object, just convert it to a string. //	WITHOUT_CLASSIFICATION	0.9999999969162132	WITHOUT_CLASSIFICATION	3.0837867146632834E-9	DEFECT
// If there is an adapter of the correct type... //	WITHOUT_CLASSIFICATION	0.9883969205249259	WITHOUT_CLASSIFICATION	0.011603079475074125	DEFECT
// If there is an adapter of the correct type... //	WITHOUT_CLASSIFICATION	0.9883969205249259	WITHOUT_CLASSIFICATION	0.011603079475074125	DEFECT
// If there is an adapter of the correct type... //	WITHOUT_CLASSIFICATION	0.9883969205249259	WITHOUT_CLASSIFICATION	0.011603079475074125	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999993619953522	WITHOUT_CLASSIFICATION	6.380046476645285E-7	DEFECT
// We will iterate over the whole collection, removing some as we go. //	WITHOUT_CLASSIFICATION	0.9999958242356598	WITHOUT_CLASSIFICATION	4.175764340138758E-6	DEFECT
// Take the first object, and remove it. //	WITHOUT_CLASSIFICATION	0.9999993183133401	WITHOUT_CLASSIFICATION	6.816866598954897E-7	DEFECT
// Determine the object's parent. //	WITHOUT_CLASSIFICATION	0.9999998492013848	WITHOUT_CLASSIFICATION	1.50798615193304E-7	DEFECT
// Now we want to find all the other objects with this same parent. // So we can collection siblings together and give the parent control over their removal. //	WITHOUT_CLASSIFICATION	0.999996297566847	WITHOUT_CLASSIFICATION	3.702433152936788E-6	DEFECT
// Get the next object and check if it has the same parent. //	WITHOUT_CLASSIFICATION	0.9999959150757242	WITHOUT_CLASSIFICATION	4.084924275869186E-6	DEFECT
// Remove the object and add it as a sibling. //	WITHOUT_CLASSIFICATION	0.9995856433548099	WITHOUT_CLASSIFICATION	4.143566451901065E-4	DEFECT
// We will now create a command with this implied parent //	WITHOUT_CLASSIFICATION	0.99998960125463	WITHOUT_CLASSIFICATION	1.0398745369951147E-5	DEFECT
// The parent is null, which implies a top-level removal, so create a self-removing command. //	WITHOUT_CLASSIFICATION	0.999998662211513	WITHOUT_CLASSIFICATION	1.3377884869171735E-6	DEFECT
// If no object is specified, but an existing sibling is, the object is // its parent. //	WITHOUT_CLASSIFICATION	0.9999965850576463	WITHOUT_CLASSIFICATION	3.4149423537380324E-6	DEFECT
// protected Object labelProvider;	WITHOUT_CLASSIFICATION	0.9999978284532949	WITHOUT_CLASSIFICATION	2.1715467050223754E-6	DEFECT
//return getDefaultValue(attribute.getEType());	WITHOUT_CLASSIFICATION	0.999999441705751	WITHOUT_CLASSIFICATION	5.58294249143518E-7	DEFECT
// If any children were added or removed, reset the indices.	WITHOUT_CLASSIFICATION	0.9999793656787773	WITHOUT_CLASSIFICATION	2.0634321222737E-5	DEFECT
// Get the URI of the model file. //	WITHOUT_CLASSIFICATION	0.9999987247539358	WITHOUT_CLASSIFICATION	1.2752460641814765E-6	DEFECT
// isValidIANAEncoding(String):boolean	WITHOUT_CLASSIFICATION	0.9999995901013206	WITHOUT_CLASSIFICATION	4.0989867937430715E-7	DEFECT
// Wrap any new children and add them to the map. Remove each current child from the set of old children. //	WITHOUT_CLASSIFICATION	0.9999474602331356	WITHOUT_CLASSIFICATION	5.253976686439514E-5	DEFECT
// Remove and dispose any wrappers for remaining old children. //	WITHOUT_CLASSIFICATION	0.9993912724587941	WITHOUT_CLASSIFICATION	6.087275412058492E-4	DEFECT
// A SetCommand needs to go through SetCommand.create() to ensure it can execute and undo. //	WITHOUT_CLASSIFICATION	0.9999715262274913	WITHOUT_CLASSIFICATION	2.847377250858168E-5	DEFECT
/*  protected Command createSetCommand(EditingDomain domain, Object owner, Object feature, Object value)   {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, SetCommand.class, new CommandParameter(owner, feature, value));  }  protected Command createCopyCommand(EditingDomain domain, Object owner, CopyCommand.Helper helper)  {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, CopyCommand.class, new CommandParameter(owner, null, helper));  }  protected Command createCreateCopyCommand(EditingDomain domain, Object owner, CopyCommand.Helper helper)   {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, CreateCopyCommand.class, new CommandParameter(owner, null, helper));  }  protected Command createInitializeCopyCommand(EditingDomain domain, Object owner, CopyCommand.Helper helper)   {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, InitializeCopyCommand.class, new CommandParameter(owner, null, helper));  }  protected Command createRemoveCommand(EditingDomain domain, Object owner, Object feature, Collection collection)   {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, RemoveCommand.class, new CommandParameter(owner, feature, collection));  }  protected Command createReplaceCommand(EditingDomain domain, Object owner, Object feature, Object value, Collection collection)   {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, ReplaceCommand.class, new CommandParameter(owner, feature, value, collection));  }  protected Command createAddCommand(EditingDomain domain, Object owner, Object feature, Collection collection, int index)   {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, ReplaceCommand.class, new CommandParameter(owner, feature, collection, index));  }  protected Command createMoveCommand(EditingDomain domain, Object owner, Object feature, Object value, int index)   {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, ReplaceCommand.class, new CommandParameter(owner, feature, value, index));  }  protected Command createDragAndDropCommand    (EditingDomain domain, Object owner, float location, int operations, int operation, Collection collection)  {    DragAndDropCommand.Detail detail = new DragAndDropCommand.Detail(location, operations, operation);    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, DragAndDropCommand.class, new CommandParameter(owner, detail, collection));  }*/	WITHOUT_CLASSIFICATION	0.9999921358409735	WITHOUT_CLASSIFICATION	7.864159026520574E-6	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999993619953522	WITHOUT_CLASSIFICATION	6.380046476645285E-7	DEFECT
// Now we could check that the adapter implements interface ITableItemLabelProvider. //	WITHOUT_CLASSIFICATION	0.9999997920873804	WITHOUT_CLASSIFICATION	2.07912619563526E-7	DEFECT
// Now we could check that the adapter implements interface ITableItemLabelProvider. //	WITHOUT_CLASSIFICATION	0.9999997920873804	WITHOUT_CLASSIFICATION	2.07912619563526E-7	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.999998313303692	WITHOUT_CLASSIFICATION	1.6866963079793905E-6	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.999998313303692	WITHOUT_CLASSIFICATION	1.6866963079793905E-6	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.999998313303692	WITHOUT_CLASSIFICATION	1.6866963079793905E-6	DEFECT
// Otherwise, we could check that the adapter implements interface IItemLabelProvider. //	WITHOUT_CLASSIFICATION	0.9999998499280944	WITHOUT_CLASSIFICATION	1.5007190554889804E-7	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999993619953522	WITHOUT_CLASSIFICATION	6.380046476645285E-7	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.999998313303692	WITHOUT_CLASSIFICATION	1.6866963079793905E-6	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9999958962280804	WITHOUT_CLASSIFICATION	4.10377191956407E-6	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.999998313303692	WITHOUT_CLASSIFICATION	1.6866963079793905E-6	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.999998313303692	WITHOUT_CLASSIFICATION	1.6866963079793905E-6	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.999998313303692	WITHOUT_CLASSIFICATION	1.6866963079793905E-6	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.999998313303692	WITHOUT_CLASSIFICATION	1.6866963079793905E-6	DEFECT
// Otherwise, we could check that the adapter implements interface IItemLabelProvider. //	WITHOUT_CLASSIFICATION	0.9999998499280944	WITHOUT_CLASSIFICATION	1.5007190554889804E-7	DEFECT
// Now we could check that the adapter implements interface ITableItemFontProvider. //	WITHOUT_CLASSIFICATION	0.9999996530819405	WITHOUT_CLASSIFICATION	3.469180594989722E-7	DEFECT
// No font is a good default. //	WITHOUT_CLASSIFICATION	0.9999995909080437	WITHOUT_CLASSIFICATION	4.0909195630915E-7	DEFECT
// Otherwise, we could check that the adapter implements interface IItemFontProvider. //	WITHOUT_CLASSIFICATION	0.9999996426513593	WITHOUT_CLASSIFICATION	3.573486406413122E-7	DEFECT
// No color is a good default. //	WITHOUT_CLASSIFICATION	0.9999998881139335	WITHOUT_CLASSIFICATION	1.1188606651088884E-7	DEFECT
// No color is a good default. //	WITHOUT_CLASSIFICATION	0.9999998881139335	WITHOUT_CLASSIFICATION	1.1188606651088884E-7	DEFECT
// Now we could check that the adapter implements interface ITableItemColorProvider. //	WITHOUT_CLASSIFICATION	0.9999997550271225	WITHOUT_CLASSIFICATION	2.449728775724826E-7	DEFECT
// Now we could check that the adapter implements interface ITableItemColorProvider. //	WITHOUT_CLASSIFICATION	0.9999997550271225	WITHOUT_CLASSIFICATION	2.449728775724826E-7	DEFECT
// Otherwise, we could check that the adapter implements interface IItemColorProvider. //	WITHOUT_CLASSIFICATION	0.9999997476616663	WITHOUT_CLASSIFICATION	2.5233833369548254E-7	DEFECT
// Otherwise, we could check that the adapter implements interface IItemColorProvider. //	WITHOUT_CLASSIFICATION	0.9999997476616663	WITHOUT_CLASSIFICATION	2.5233833369548254E-7	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999997038033935	WITHOUT_CLASSIFICATION	2.961966065547326E-7	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999997038033935	WITHOUT_CLASSIFICATION	2.961966065547326E-7	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999997038033935	WITHOUT_CLASSIFICATION	2.961966065547326E-7	DEFECT
//public String getUpdateableText(Object object)	WITHOUT_CLASSIFICATION	0.9999995062415701	WITHOUT_CLASSIFICATION	4.93758429852968E-7	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999997038033935	WITHOUT_CLASSIFICATION	2.961966065547326E-7	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999997038033935	WITHOUT_CLASSIFICATION	2.961966065547326E-7	DEFECT
// When the value is changed, the property sheet page doesn't update the property sheet viewer input // before refreshing, and this gets called on the obsolete wrapper. So, we need to read directly from the // model object. // //return needsEncoding(feature) ? encode((String)getEntryValue()) : getEntryValue();	WITHOUT_CLASSIFICATION	0.9999996039303319	WITHOUT_CLASSIFICATION	3.960696680798887E-7	DEFECT
// Check that the value is type compatible with the entry feature. //	WITHOUT_CLASSIFICATION	0.9999968249061182	WITHOUT_CLASSIFICATION	3.175093881845887E-6	DEFECT
// When the value is changed, the property sheet page doesn't update the property sheet viewer input // before refreshing, and this gets called on the obsolete wrapper. So, we need to read directly from the // model object. // //return value;	WITHOUT_CLASSIFICATION	0.9999984709057026	WITHOUT_CLASSIFICATION	1.5290942973340222E-6	DEFECT
// If the last object was deleted and the selection was in the property sheet view, the obsolete wrapper will // reference past the end of the list. //	WITHOUT_CLASSIFICATION	0.9998789934461314	WITHOUT_CLASSIFICATION	1.2100655386857543E-4	DEFECT
// Either the IEditingDomainItemProvider or ITreeItemContentProvider item provider interface can give us // the children. //	WITHOUT_CLASSIFICATION	0.9999913788574214	WITHOUT_CLASSIFICATION	8.621142578664147E-6	DEFECT
// Use an existing getReferenceValue() override. //	WITHOUT_CLASSIFICATION	0.999999819092529	WITHOUT_CLASSIFICATION	1.8090747098137614E-7	DEFECT
// First, try an existing implementation of getChildReference().  This provides backwards compatibility if that // method, now deprecated, was overridden. //	WITHOUT_CLASSIFICATION	0.9999877246591606	WITHOUT_CLASSIFICATION	1.2275340839336437E-5	DEFECT
// Iterate over all the child references to factor each child to the right reference. //	WITHOUT_CLASSIFICATION	0.9999975750953984	WITHOUT_CLASSIFICATION	2.4249046015880284E-6	DEFECT
// If this object is compatible with this reference... //	WITHOUT_CLASSIFICATION	0.9995573203883392	WITHOUT_CLASSIFICATION	4.426796116607963E-4	DEFECT
// Iterate over all the set feature to factor each child to the right reference. //	WITHOUT_CLASSIFICATION	0.9999999482499263	WITHOUT_CLASSIFICATION	5.175007381963203E-8	DEFECT
// Build the collection of new child descriptors. //	WITHOUT_CLASSIFICATION	0.9999372337370211	WITHOUT_CLASSIFICATION	6.276626297885727E-5	DEFECT
// Add child descriptors contributed by extenders. //	WITHOUT_CLASSIFICATION	0.9999992745856311	WITHOUT_CLASSIFICATION	7.254143688653538E-7	DEFECT
// If a sibling has been specified, add the best index possible to each CommandParameter. //	WITHOUT_CLASSIFICATION	0.9999902895764096	WITHOUT_CLASSIFICATION	9.71042359037511E-6	DEFECT
// Find the index of a feature containing the sibling, or an equivalent value, in the collection of children // features. //	WITHOUT_CLASSIFICATION	0.9999995777343785	WITHOUT_CLASSIFICATION	4.222656215118831E-7	DEFECT
// For each CommandParameter with a non-null, multi-valued structural feature... //	WITHOUT_CLASSIFICATION	0.999981756163211	WITHOUT_CLASSIFICATION	1.8243836789005364E-5	DEFECT
// Look for the sibling value or an equivalent in the new child's feature. If it is found, the child should // immediately follow it. //	WITHOUT_CLASSIFICATION	0.9999966777437291	WITHOUT_CLASSIFICATION	3.3222562707559955E-6	DEFECT
// Otherwise, if a sibling feature was found, iterate through the children features to find the index of // the child feature...  //	WITHOUT_CLASSIFICATION	0.9999995929613401	WITHOUT_CLASSIFICATION	4.0703865990451343E-7	DEFECT
// If the child feature follows the sibling feature, the child should be first in its feature. //	WITHOUT_CLASSIFICATION	0.9999927315053122	WITHOUT_CLASSIFICATION	7.268494687876407E-6	DEFECT
// Subclasses may override to add descriptors.	WITHOUT_CLASSIFICATION	0.9999997991832804	WITHOUT_CLASSIFICATION	2.00816719557366E-7	DEFECT
// If necessary, get a command that replaces unwrapped values by their wrappers in the result and affected objects. //	WITHOUT_CLASSIFICATION	0.9999977721327096	WITHOUT_CLASSIFICATION	2.2278672904173666E-6	DEFECT
// Iterator over all the child references to factor each child to the right reference. //	WITHOUT_CLASSIFICATION	0.9999980620170401	WITHOUT_CLASSIFICATION	1.93798295990712E-6	DEFECT
// If it is a list type value... // 	WITHOUT_CLASSIFICATION	0.9965288819054963	WITHOUT_CLASSIFICATION	0.003471118094503828	DEFECT
// If it is a list type value... // 	WITHOUT_CLASSIFICATION	0.9965288819054963	WITHOUT_CLASSIFICATION	0.003471118094503828	DEFECT
// Is this object in this feature... //	WITHOUT_CLASSIFICATION	0.996444568205022	WITHOUT_CLASSIFICATION	0.003555431794977849	DEFECT
// Is this object in this feature... //	WITHOUT_CLASSIFICATION	0.996444568205022	WITHOUT_CLASSIFICATION	0.003555431794977849	DEFECT
// Add it to the list and remove it from the other list. //	WITHOUT_CLASSIFICATION	0.9999989108605047	WITHOUT_CLASSIFICATION	1.0891394953499846E-6	DEFECT
// If we have children to remove for this feature, create a command for it. //	WITHOUT_CLASSIFICATION	0.9999914057509034	WITHOUT_CLASSIFICATION	8.594249096629458E-6	DEFECT
// It's just a single value //	WITHOUT_CLASSIFICATION	0.9999999675097805	WITHOUT_CLASSIFICATION	3.249021950001817E-8	DEFECT
// Create a command to set this to null and remove the object from the other list. //	WITHOUT_CLASSIFICATION	0.9999998453227947	WITHOUT_CLASSIFICATION	1.546772053525772E-7	DEFECT
// If all the objects are used up by the above, then we can't do the command. //	WITHOUT_CLASSIFICATION	0.9999975256096553	WITHOUT_CLASSIFICATION	2.4743903448004217E-6	DEFECT
// Correct the index, if necessary. //	WITHOUT_CLASSIFICATION	0.999991724381893	WITHOUT_CLASSIFICATION	8.275618107012655E-6	DEFECT
// Consume the rest of the appropriate children. //	WITHOUT_CLASSIFICATION	0.9999996022178423	WITHOUT_CLASSIFICATION	3.9778215762812787E-7	DEFECT
// Is this child in this feature... //	WITHOUT_CLASSIFICATION	0.9975111385795558	WITHOUT_CLASSIFICATION	0.002488861420444149	DEFECT
// Create a command for this feature,  //	WITHOUT_CLASSIFICATION	0.9999991424421645	WITHOUT_CLASSIFICATION	8.575578355266852E-7	DEFECT
// If all the objects aren't used up by the above, then we can't do the command. //	WITHOUT_CLASSIFICATION	0.9999982076665219	WITHOUT_CLASSIFICATION	1.7923334779884624E-6	DEFECT
// Compute the relative index as best as possible. //	WITHOUT_CLASSIFICATION	0.9999997498125229	WITHOUT_CLASSIFICATION	2.50187477053043E-7	DEFECT
// Create a command for this feature, //	WITHOUT_CLASSIFICATION	0.9999992273230077	WITHOUT_CLASSIFICATION	7.726769922776142E-7	DEFECT
// continue to next case	WITHOUT_CLASSIFICATION	0.9999990556159402	WITHOUT_CLASSIFICATION	9.443840597695644E-7	DEFECT
// All this logic is so that we only create a list if the adapter is set to more than one target. //	WITHOUT_CLASSIFICATION	0.9999999994778088	WITHOUT_CLASSIFICATION	5.221911333032508E-10	DEFECT
// Dispose the child wrappers. //	WITHOUT_CLASSIFICATION	0.9999997511929045	WITHOUT_CLASSIFICATION	2.488070954776001E-7	DEFECT
// Ignore the unset notification for an isMany feature; the value is boolean in this case. //	WITHOUT_CLASSIFICATION	0.9999810430740256	WITHOUT_CLASSIFICATION	1.895692597441197E-5	DEFECT
// No index specified when removing all elements. //	WITHOUT_CLASSIFICATION	0.9999998585524202	WITHOUT_CLASSIFICATION	1.4144757974904205E-7	DEFECT
// We need the wrapper, not the item provider, to handle a DragAndDropCommand; the move, add, remove, etc. commands // that implement it will have their values unwrapped as usual. //	WITHOUT_CLASSIFICATION	0.9993412184360257	WITHOUT_CLASSIFICATION	6.587815639742418E-4	DEFECT
// Unwrap collection. //	WITHOUT_CLASSIFICATION	0.9999991829753749	WITHOUT_CLASSIFICATION	8.170246251626132E-7	DEFECT
// If the first wrapped value is found... //	WITHOUT_CLASSIFICATION	0.9998530411687855	WITHOUT_CLASSIFICATION	1.4695883121443966E-4	DEFECT
// Allocate the new collection, and populate it up to this point. //	WITHOUT_CLASSIFICATION	0.9999999288070999	WITHOUT_CLASSIFICATION	7.119290011754538E-8	DEFECT
// If a new collection was allocated, continue to populate it. //	WITHOUT_CLASSIFICATION	0.9999971556916828	WITHOUT_CLASSIFICATION	2.8443083171642965E-6	DEFECT
// Unwrap value. //	WITHOUT_CLASSIFICATION	0.999999657733723	WITHOUT_CLASSIFICATION	3.422662769518231E-7	DEFECT
// Wrappers from the old command parameter must be considered in order for cut and paste to work. //	WITHOUT_CLASSIFICATION	0.9976318350881977	WITHOUT_CLASSIFICATION	0.0023681649118023618	DEFECT
// If the adapter factory is composeable, we'll adapt using the root. //	WITHOUT_CLASSIFICATION	0.9999966537120135	WITHOUT_CLASSIFICATION	3.3462879865695194E-6	DEFECT
// Build list of wrapped children from the appropriate adapters. //	WITHOUT_CLASSIFICATION	0.999992836666383	WITHOUT_CLASSIFICATION	7.163333616981368E-6	DEFECT
// Add in additional wrappers to search. //	WITHOUT_CLASSIFICATION	0.9999810592719045	WITHOUT_CLASSIFICATION	1.8940728095484326E-5	DEFECT
/*   * Returns the help context id for this property.   */	WITHOUT_CLASSIFICATION	0.9999556859774327	WITHOUT_CLASSIFICATION	4.4314022567353615E-5	DEFECT
/*      ResourceSet resourceSet = (ResourceSet)object;      childrenFeatures.add(ResourcePackage.eINSTANCE.getResourceSet_Resources());*/	WITHOUT_CLASSIFICATION	0.9999999068603616	WITHOUT_CLASSIFICATION	9.313963856328932E-8	DEFECT
// Does this part provide an editing domain? //	WITHOUT_CLASSIFICATION	0.9999489091164084	WITHOUT_CLASSIFICATION	5.1090883591537936E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999996061833671	WITHOUT_CLASSIFICATION	3.938166328746333E-7	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.999999933406692	WITHOUT_CLASSIFICATION	6.659330800494975E-8	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.9999999766383213	WITHOUT_CLASSIFICATION	2.3361678751851995E-8	DEFECT
// Initialize simple dependencies	WITHOUT_CLASSIFICATION	0.9999998627377243	WITHOUT_CLASSIFICATION	1.372622756233283E-7	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.9999990161470182	WITHOUT_CLASSIFICATION	9.83852981794225E-7	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.9999998510045144	WITHOUT_CLASSIFICATION	1.4899548560704843E-7	DEFECT
// Mark meta-data to indicate it can't be changed	WITHOUT_CLASSIFICATION	0.999996839412632	WITHOUT_CLASSIFICATION	3.1605873680022317E-6	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.9999998937081113	WITHOUT_CLASSIFICATION	1.0629188876058995E-7	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.9999998481815032	WITHOUT_CLASSIFICATION	1.518184968271126E-7	DEFECT
// Obtain other dependent packages	WITHOUT_CLASSIFICATION	0.9999999926807401	WITHOUT_CLASSIFICATION	7.319259834361146E-9	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.9999993338928099	WITHOUT_CLASSIFICATION	6.661071901337388E-7	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.9999921779007461	WITHOUT_CLASSIFICATION	7.822099253932902E-6	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.9999998165471937	WITHOUT_CLASSIFICATION	1.834528063299559E-7	DEFECT
// Initialize classes and features; add operations and parameters	WITHOUT_CLASSIFICATION	0.9999993621167168	WITHOUT_CLASSIFICATION	6.378832832154119E-7	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.999999913714059	WITHOUT_CLASSIFICATION	8.628594096543401E-8	DEFECT
/**   * The switch that delegates to the <code>createXXX</code> methods.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9999999314227829	WITHOUT_CLASSIFICATION	6.857721708148531E-8	DEFECT
// There are attributes to handle.	WITHOUT_CLASSIFICATION	0.9999989352383523	WITHOUT_CLASSIFICATION	1.0647616476486481E-6	DEFECT
// This ensure that this package itself is traversed even if the reference type is EObject... //	WITHOUT_CLASSIFICATION	0.9999971157928496	WITHOUT_CLASSIFICATION	2.88420715044055E-6	DEFECT
// Look for each unwrapped object as a value of a wrapper, replacing it with the first one found. //	WITHOUT_CLASSIFICATION	0.9999999251153698	WITHOUT_CLASSIFICATION	7.488463018822963E-8	DEFECT
// Is this a containment reference child? //	WITHOUT_CLASSIFICATION	0.9999992327696641	WITHOUT_CLASSIFICATION	7.672303358236893E-7	DEFECT
// Is this the label feature? //	WITHOUT_CLASSIFICATION	0.9999980197292971	WITHOUT_CLASSIFICATION	1.980270702846291E-6	DEFECT
// Or a feature map child? //	WITHOUT_CLASSIFICATION	0.9999998828712678	WITHOUT_CLASSIFICATION	1.1712873212151563E-7	DEFECT
// Don't include controlled children here, they'll show up under their container. //	WITHOUT_CLASSIFICATION	0.9999858839646474	WITHOUT_CLASSIFICATION	1.4116035352724139E-5	DEFECT
// Resource resource = (Resource)object; // childrenFeatures.add(ResourcePackage.eINSTANCE.getResource_Contents());	WITHOUT_CLASSIFICATION	0.9999999801959759	WITHOUT_CLASSIFICATION	1.9804024102784934E-8	DEFECT
// Overlay if the resource is the target for any controlled objects.  //	WITHOUT_CLASSIFICATION	0.9999999983798543	WITHOUT_CLASSIFICATION	1.6201456053833724E-9	DEFECT
// case Resource.RESOURCE__IS_MODIFIED: // case Resource.RESOURCE__IS_LOADED: // case Resource.RESOURCE__IS_TRACKING_MODIFICATION: // case Resource.RESOURCE__RESOURCE_SET:	WITHOUT_CLASSIFICATION	0.9999988901918591	WITHOUT_CLASSIFICATION	1.1098081409345654E-6	DEFECT
// TreeNode	WITHOUT_CLASSIFICATION	0.999997311141239	WITHOUT_CLASSIFICATION	2.688858760914456E-6	DEFECT
//TreeFactory	WITHOUT_CLASSIFICATION	0.9999964300455191	WITHOUT_CLASSIFICATION	3.569954480806151E-6	DEFECT
//TreePackage	WITHOUT_CLASSIFICATION	0.9999982399977001	WITHOUT_CLASSIFICATION	1.7600022999108671E-6	DEFECT
//TreeFactoryImpl	WITHOUT_CLASSIFICATION	0.9999959616483138	WITHOUT_CLASSIFICATION	4.03835168613066E-6	DEFECT
//TreeNodeImpl	WITHOUT_CLASSIFICATION	0.9999820871297916	WITHOUT_CLASSIFICATION	1.7912870208344396E-5	DEFECT
//TreePackageImpl	WITHOUT_CLASSIFICATION	0.9999961202624774	WITHOUT_CLASSIFICATION	3.879737522608433E-6	DEFECT
/*    super.collectNewChildDescriptors(newChildDescriptors, object);*/	WITHOUT_CLASSIFICATION	0.9999994534295894	WITHOUT_CLASSIFICATION	5.465704105426918E-7	DEFECT
//TreeAdapterFactory	WITHOUT_CLASSIFICATION	0.9999947008975112	WITHOUT_CLASSIFICATION	5.299102488767394E-6	DEFECT
//TreeSwitch	WITHOUT_CLASSIFICATION	0.9999969618595346	WITHOUT_CLASSIFICATION	3.0381404655150853E-6	DEFECT
// This is for backwards compatibility, since the constructor may have been overridden before it was expected // to set actionDelegate. //	WITHOUT_CLASSIFICATION	0.9999999973518532	WITHOUT_CLASSIFICATION	2.6481467731840933E-9	DEFECT
// If there is a new one... //	WITHOUT_CLASSIFICATION	0.9999429082985873	WITHOUT_CLASSIFICATION	5.709170141263972E-5	DEFECT
// This guard is for extra security, but should not be necessary. //	WITHOUT_CLASSIFICATION	0.9985587968054722	WITHOUT_CLASSIFICATION	0.0014412031945277922	DEFECT
// Use up the command. // Note that notification will cause a new command to be created. //	WITHOUT_CLASSIFICATION	0.9999990192479045	WITHOUT_CLASSIFICATION	9.8075209548752E-7	DEFECT
// We will only deal with structured selections. //	WITHOUT_CLASSIFICATION	0.9999999250688192	WITHOUT_CLASSIFICATION	7.493118082012978E-8	DEFECT
// If we aren't getting the domain from the workbench part... // This happens when this action is used for a global popup action. // We try to get the editing domain from one of the objects in the selection. // //DMS editingDomain == null) ?	WITHOUT_CLASSIFICATION	0.6869477578343774	WITHOUT_CLASSIFICATION	0.31305224216562255	DEFECT
// If we have a good editing domain... //	WITHOUT_CLASSIFICATION	0.9988637758666639	WITHOUT_CLASSIFICATION	0.0011362241333361964	DEFECT
// Delegate the action for this object to the editing domain. //	WITHOUT_CLASSIFICATION	0.9999964071375548	WITHOUT_CLASSIFICATION	3.5928624452805284E-6	DEFECT
// We can enable the action as indicated by the command, // and we can set all the other values from the command. //	WITHOUT_CLASSIFICATION	0.9999999024635188	WITHOUT_CLASSIFICATION	9.753648122881009E-8	DEFECT
// Nothing more to do and we don't want to do the default stuff below. //	WITHOUT_CLASSIFICATION	0.9999999910931407	WITHOUT_CLASSIFICATION	8.906859356347388E-9	DEFECT
// We just can't do it. //	WITHOUT_CLASSIFICATION	0.9999998687067639	WITHOUT_CLASSIFICATION	1.3129323610572694E-7	DEFECT
// No point in keeping garbage. //	WITHOUT_CLASSIFICATION	0.9999993863332751	WITHOUT_CLASSIFICATION	6.136667247735552E-7	DEFECT
// Show the colourless image. //	WITHOUT_CLASSIFICATION	0.9999973733307447	WITHOUT_CLASSIFICATION	2.6266692553843867E-6	DEFECT
// try to get editing domain from workbench part	WITHOUT_CLASSIFICATION	0.9997598548193468	WITHOUT_CLASSIFICATION	2.4014518065328068E-4	DEFECT
// only handle structured selections	WITHOUT_CLASSIFICATION	0.99999995251406	WITHOUT_CLASSIFICATION	4.748594004720314E-8	DEFECT
// convert the selection to a collection of the selected objects	WITHOUT_CLASSIFICATION	0.9999999688937398	WITHOUT_CLASSIFICATION	3.110626011980974E-8	DEFECT
// if the editing domain wasn't given by the workbench part, try to get // it from the selection	WITHOUT_CLASSIFICATION	0.9999633492592946	WITHOUT_CLASSIFICATION	3.665074070544752E-5	DEFECT
// if we found an editing domain, create command	WITHOUT_CLASSIFICATION	0.9999982970412774	WITHOUT_CLASSIFICATION	1.702958722643992E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999995614747719	WITHOUT_CLASSIFICATION	4.385252280605921E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999995614747719	WITHOUT_CLASSIFICATION	4.385252280605921E-7	DEFECT
// use up the command	WITHOUT_CLASSIFICATION	0.9999986103055915	WITHOUT_CLASSIFICATION	1.3896944085648143E-6	DEFECT
// Add our standard marker. //	WITHOUT_CLASSIFICATION	0.9999992664870027	WITHOUT_CLASSIFICATION	7.335129973358689E-7	DEFECT
// Add the edit menu actions. //	WITHOUT_CLASSIFICATION	0.999982545454588	WITHOUT_CLASSIFICATION	1.745454541197346E-5	DEFECT
// Add our other standard marker. //	WITHOUT_CLASSIFICATION	0.9999992948712285	WITHOUT_CLASSIFICATION	7.051287714885089E-7	DEFECT
// For the control case, we need a dialog to ask for the URI and obtain the resource, then we create the command. //	WITHOUT_CLASSIFICATION	0.9999982243487281	WITHOUT_CLASSIFICATION	1.7756512719209145E-6	DEFECT
// Ensure that all proxies are resolved so that references into the controlled object will be saved to reference the new resource. //	WITHOUT_CLASSIFICATION	0.9999988301902553	WITHOUT_CLASSIFICATION	1.1698097447067948E-6	DEFECT
// grabHorizontal = true;	WITHOUT_CLASSIFICATION	0.9999993205176386	WITHOUT_CLASSIFICATION	6.794823614835117E-7	DEFECT
// We use multi even for a single line because we want to respond to the enter key. //	WITHOUT_CLASSIFICATION	0.999995746730139	WITHOUT_CLASSIFICATION	4.2532698609552684E-6	DEFECT
// event is null when choiceTableViewer is double clicked	WITHOUT_CLASSIFICATION	0.9999999169816776	WITHOUT_CLASSIFICATION	8.301832242880122E-8	DEFECT
// event is null when featureTableViewer is double clicked 	WITHOUT_CLASSIFICATION	0.9999998123561079	WITHOUT_CLASSIFICATION	1.8764389221365637E-7	DEFECT
// In column 0, the drop-down is indented past the collapse/expand icon. //	WITHOUT_CLASSIFICATION	0.9999709690433275	WITHOUT_CLASSIFICATION	2.9030956672469696E-5	DEFECT
// dropDown.addListener(SWT.Paint, dropDownListener);	WITHOUT_CLASSIFICATION	0.999999756672221	WITHOUT_CLASSIFICATION	2.433277790901628E-7	DEFECT
// This should be consistent with paintControl(). // 	WITHOUT_CLASSIFICATION	0.9995267598823391	WITHOUT_CLASSIFICATION	4.732401176608711E-4	DEFECT
// setEditor(null, null, -1);	WITHOUT_CLASSIFICATION	0.9999985785308955	WITHOUT_CLASSIFICATION	1.4214691045107242E-6	DEFECT
// Fill with background. //	WITHOUT_CLASSIFICATION	0.9999580342017685	WITHOUT_CLASSIFICATION	4.196579823142116E-5	DEFECT
// Draw the icons. //	WITHOUT_CLASSIFICATION	0.9999996483153967	WITHOUT_CLASSIFICATION	3.516846033473847E-7	DEFECT
// Draw the text. //	WITHOUT_CLASSIFICATION	0.9999996615658571	WITHOUT_CLASSIFICATION	3.3843414290496686E-7	DEFECT
// EATM Color startColor = display.getSystemColor(SWT.COLOR_LIST_SELECTION);	WITHOUT_CLASSIFICATION	0.9999997269233846	WITHOUT_CLASSIFICATION	2.7307661540581784E-7	DEFECT
// Remember the requested operation.	WITHOUT_CLASSIFICATION	0.9999993361407373	WITHOUT_CLASSIFICATION	6.638592627251793E-7	DEFECT
// Remember the requested operation.	WITHOUT_CLASSIFICATION	0.9999993361407373	WITHOUT_CLASSIFICATION	6.638592627251793E-7	DEFECT
/*     * (non-Javadoc)     *      * @see org.eclipse.jface.window.Window#configureShell(org.eclipse.swt.widgets.Shell)     */	WITHOUT_CLASSIFICATION	0.9999999999718561	WITHOUT_CLASSIFICATION	2.8143931487303686E-11	DEFECT
// Draw background of right-side button. //	WITHOUT_CLASSIFICATION	0.9999894215910388	WITHOUT_CLASSIFICATION	1.0578408961195135E-5	DEFECT
// Draw down arrow, offset if dropped. //	WITHOUT_CLASSIFICATION	0.9999997370678488	WITHOUT_CLASSIFICATION	2.6293215118336554E-7	DEFECT
// Draw ellipses, offset if down. //	WITHOUT_CLASSIFICATION	0.9999999359795227	WITHOUT_CLASSIFICATION	6.402047729328026E-8	DEFECT
// Draw outline. //	WITHOUT_CLASSIFICATION	0.9999995823181964	WITHOUT_CLASSIFICATION	4.176818034820742E-7	DEFECT
// Draw 3D effect on right-side button. //	WITHOUT_CLASSIFICATION	0.9999514680716062	WITHOUT_CLASSIFICATION	4.8531928393879115E-5	DEFECT
// Remember the viewer and listen to SWT.DragDetect to alert the start of the drag operation. //	WITHOUT_CLASSIFICATION	0.9999999572403927	WITHOUT_CLASSIFICATION	4.2759607311387765E-8	DEFECT
// Clear the source data.  We won't need this again, since, if it was // available, it's already in the command. //	WITHOUT_CLASSIFICATION	0.999998950820234	WITHOUT_CLASSIFICATION	1.049179765996561E-6	DEFECT
// A command was created if the source was available early, and the // information used to create it was cached... //	WITHOUT_CLASSIFICATION	0.9999998063629559	WITHOUT_CLASSIFICATION	1.9363704406158938E-7	DEFECT
// Recreate the command. //	WITHOUT_CLASSIFICATION	0.9999800378544682	WITHOUT_CLASSIFICATION	1.9962145531861132E-5	DEFECT
// Otherwise, the source should be available now as event.data, and we // can create the command. //	WITHOUT_CLASSIFICATION	0.9999999498231235	WITHOUT_CLASSIFICATION	5.017687663511732E-8	DEFECT
// If the command can execute... //	WITHOUT_CLASSIFICATION	0.9915998944037315	WITHOUT_CLASSIFICATION	0.00840010559626854	DEFECT
// Execute it. //	WITHOUT_CLASSIFICATION	0.9999952372824066	WITHOUT_CLASSIFICATION	4.762717593496854E-6	DEFECT
// Otherwise, let's call the whole thing off. //	WITHOUT_CLASSIFICATION	0.9999959415729662	WITHOUT_CLASSIFICATION	4.058427033855701E-6	DEFECT
// Clean up the state. //	WITHOUT_CLASSIFICATION	0.999999968325116	WITHOUT_CLASSIFICATION	3.1674884160520314E-8	DEFECT
// If we can't do anything else, we'll provide the default select feedback // and enable auto-scroll and auto-expand effects.	WITHOUT_CLASSIFICATION	0.9998089255884465	WITHOUT_CLASSIFICATION	1.910744115536241E-4	DEFECT
// Clear out any old information from a previous drag. //	WITHOUT_CLASSIFICATION	0.9999962359895836	WITHOUT_CLASSIFICATION	3.764010416473882E-6	DEFECT
// Get the target object from the item widget and the mouse location in it. //	WITHOUT_CLASSIFICATION	0.9999999942737291	WITHOUT_CLASSIFICATION	5.726270903531991E-9	DEFECT
// Determine if we can create a valid command at the current location. //	WITHOUT_CLASSIFICATION	0.9999882226371559	WITHOUT_CLASSIFICATION	1.1777362843989659E-5	DEFECT
// If we don't have a previous cached command... //	WITHOUT_CLASSIFICATION	0.9984632781396823	WITHOUT_CLASSIFICATION	0.001536721860317743	DEFECT
// Remember the target; create the command and test if it is executable. //	WITHOUT_CLASSIFICATION	0.9999985264034684	WITHOUT_CLASSIFICATION	1.4735965316121473E-6	DEFECT
// Keep track of any changes to the command information.	WITHOUT_CLASSIFICATION	0.9999986721902181	WITHOUT_CLASSIFICATION	1.3278097819752714E-6	DEFECT
/*     * (non-Javadoc) Method declared on Dialog.     */	WITHOUT_CLASSIFICATION	0.9999999679868935	WITHOUT_CLASSIFICATION	3.201310644380439E-8	DEFECT
// create OK and Cancel buttons by default	WITHOUT_CLASSIFICATION	0.9999999730245621	WITHOUT_CLASSIFICATION	2.6975437925125714E-8	DEFECT
// create composite	WITHOUT_CLASSIFICATION	0.9999999053482611	WITHOUT_CLASSIFICATION	9.465173886504106E-8	DEFECT
// generateColor();	WITHOUT_CLASSIFICATION	0.9999987739540627	WITHOUT_CLASSIFICATION	1.2260459374215112E-6	DEFECT
// }}	WITHOUT_CLASSIFICATION	0.9999947867527336	WITHOUT_CLASSIFICATION	5.213247266406766E-6	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999997038033935	WITHOUT_CLASSIFICATION	2.961966065547326E-7	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999997038033935	WITHOUT_CLASSIFICATION	2.961966065547326E-7	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999997038033935	WITHOUT_CLASSIFICATION	2.961966065547326E-7	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999997038033935	WITHOUT_CLASSIFICATION	2.961966065547326E-7	DEFECT
// Check if the cached command can provide DND feedback/revalidation. //	WITHOUT_CLASSIFICATION	0.9999913692127134	WITHOUT_CLASSIFICATION	8.630787286655448E-6	DEFECT
// If so, revalidate the command. //	WITHOUT_CLASSIFICATION	0.9999726267373864	WITHOUT_CLASSIFICATION	2.7373262613533327E-5	DEFECT
// If not, dispose the current command and create a new one. //	WITHOUT_CLASSIFICATION	0.9999941837106248	WITHOUT_CLASSIFICATION	5.8162893752904084E-6	DEFECT
// If this command can provide detailed drag and drop feedback... //	WITHOUT_CLASSIFICATION	0.9977885539735739	WITHOUT_CLASSIFICATION	0.00221144602642609	DEFECT
// Use it for the operation and drag under effect. //	WITHOUT_CLASSIFICATION	0.9999991503058403	WITHOUT_CLASSIFICATION	8.496941596390741E-7	DEFECT
// There is no executable command, so we'd better nix the whole deal. //	WITHOUT_CLASSIFICATION	0.9999933051673366	WITHOUT_CLASSIFICATION	6.6948326633124055E-6	DEFECT
// Check whether the current data type can be transfered locally. //	WITHOUT_CLASSIFICATION	0.999997162933352	WITHOUT_CLASSIFICATION	2.8370666480434948E-6	DEFECT
// Iterate over the data types to see if there is a data type that supports a local transfer. //	WITHOUT_CLASSIFICATION	0.9999999964075327	WITHOUT_CLASSIFICATION	3.592467271165827E-9	DEFECT
// If the local transfer supports this data type, switch to that data type //	WITHOUT_CLASSIFICATION	0.9999990781248622	WITHOUT_CLASSIFICATION	9.218751378499254E-7	DEFECT
// Transfer the data and, if non-null, extract it. //	WITHOUT_CLASSIFICATION	0.9999993084786677	WITHOUT_CLASSIFICATION	6.915213322704377E-7	DEFECT
// Transfer the data and convert the structured selection to a collection of objects. //	WITHOUT_CLASSIFICATION	0.9999999995862349	WITHOUT_CLASSIFICATION	4.137651047255871E-10	DEFECT
//do this here because setting the text will set enablement on the OK // button	WITHOUT_CLASSIFICATION	0.999998393878929	WITHOUT_CLASSIFICATION	1.6061210709866627E-6	DEFECT
/* | GridData.GRAB_VERTICAL */	WITHOUT_CLASSIFICATION	0.9999989549627079	WITHOUT_CLASSIFICATION	1.0450372920450928E-6	DEFECT
// Set the error message text // See https://bugs.eclipse.org/bugs/show_bug.cgi?id=66292	WITHOUT_CLASSIFICATION	0.9999923129588929	WITHOUT_CLASSIFICATION	7.687041107211432E-6	DEFECT
// If there was no old input, then we must be providing content for this part for the first time... //	WITHOUT_CLASSIFICATION	0.9999989623186436	WITHOUT_CLASSIFICATION	1.0376813563776322E-6	DEFECT
// If the notification is an IViewerNotification, it specifies how ViewerRefresh should behave.  Otherwise fall // back to NotifyChangedToViewerRefresh, which determines how to refresh the viewer directly from the model // notification. //	WITHOUT_CLASSIFICATION	0.9999980070357171	WITHOUT_CLASSIFICATION	1.9929642829949046E-6	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999993619953522	WITHOUT_CLASSIFICATION	6.380046476645285E-7	DEFECT
// Now we could check that the adapter implements interface ITableItemLabelProvider. //	WITHOUT_CLASSIFICATION	0.9999997920873804	WITHOUT_CLASSIFICATION	2.07912619563526E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999995614747719	WITHOUT_CLASSIFICATION	4.385252280605921E-7	DEFECT
// Now we could check that the adapter implements interface ITableItemLabelProvider. //	WITHOUT_CLASSIFICATION	0.9999997920873804	WITHOUT_CLASSIFICATION	2.07912619563526E-7	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.999998313303692	WITHOUT_CLASSIFICATION	1.6866963079793905E-6	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.999998313303692	WITHOUT_CLASSIFICATION	1.6866963079793905E-6	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.999998313303692	WITHOUT_CLASSIFICATION	1.6866963079793905E-6	DEFECT
// Otherwise, we could check that the adapter implements interface IItemLabelProvider. //	WITHOUT_CLASSIFICATION	0.9999998499280944	WITHOUT_CLASSIFICATION	1.5007190554889804E-7	DEFECT
// Otherwise, we could check that the adapter implements interface IItemLabelProvider. //	WITHOUT_CLASSIFICATION	0.9999998499280944	WITHOUT_CLASSIFICATION	1.5007190554889804E-7	DEFECT
// No image is a good default. //	WITHOUT_CLASSIFICATION	0.9999998936267991	WITHOUT_CLASSIFICATION	1.0637320091407167E-7	DEFECT
// This implements the following order of preference: //   1. full refresh and update //   2. full refresh (add update if necessary) //   3. refresh element with update //   4. refresh element (if necessary) //   5. update element // 	WITHOUT_CLASSIFICATION	0.9998559006189577	WITHOUT_CLASSIFICATION	1.440993810423104E-4	DEFECT
// n2.isLabelUpdate()	WITHOUT_CLASSIFICATION	0.9999998622542141	WITHOUT_CLASSIFICATION	1.3774578594819317E-7	DEFECT
// Previously, we never updated the viewer on a resolve.  Now we post and merge it as appropriate. //	WITHOUT_CLASSIFICATION	0.9999939998511129	WITHOUT_CLASSIFICATION	6.000148887109006E-6	DEFECT
// ???	WITHOUT_CLASSIFICATION	0.9999943268446373	WITHOUT_CLASSIFICATION	5.6731553627271615E-6	DEFECT
//    case Notification.TOUCH:	WITHOUT_CLASSIFICATION	0.9999996531509922	WITHOUT_CLASSIFICATION	3.4684900790989736E-7	DEFECT
// We ignore non-changes for now. //	WITHOUT_CLASSIFICATION	0.9999996654970575	WITHOUT_CLASSIFICATION	3.345029424018955E-7	DEFECT
// fireLabelProviderChanged();	WITHOUT_CLASSIFICATION	0.9999998900754992	WITHOUT_CLASSIFICATION	1.0992450084839232E-7	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999986414502402	WITHOUT_CLASSIFICATION	1.3585497598851668E-6	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999986414502402	WITHOUT_CLASSIFICATION	1.3585497598851668E-6	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999998063493674	WITHOUT_CLASSIFICATION	1.9365063276327167E-7	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999998063493674	WITHOUT_CLASSIFICATION	1.9365063276327167E-7	DEFECT
// Empty extension to limit the effect of suppressing the deprecation warning.	WITHOUT_CLASSIFICATION	0.9999971928070777	WITHOUT_CLASSIFICATION	2.807192922309153E-6	DEFECT
// Empty extension to limit the effect of suppressing the deprecation warning.	WITHOUT_CLASSIFICATION	0.9999971928070777	WITHOUT_CLASSIFICATION	2.807192922309153E-6	DEFECT
// Ignore any exceptions and assume the class isn't available.	WITHOUT_CLASSIFICATION	0.9999827183483915	WITHOUT_CLASSIFICATION	1.7281651608597723E-5	DEFECT
// Ignore any exceptions and assume the class isn't available.	WITHOUT_CLASSIFICATION	0.9999827183483915	WITHOUT_CLASSIFICATION	1.7281651608597723E-5	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999993619953522	WITHOUT_CLASSIFICATION	6.380046476645285E-7	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999993619953522	WITHOUT_CLASSIFICATION	6.380046476645285E-7	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999993619953522	WITHOUT_CLASSIFICATION	6.380046476645285E-7	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.999998313303692	WITHOUT_CLASSIFICATION	1.6866963079793905E-6	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.999998313303692	WITHOUT_CLASSIFICATION	1.6866963079793905E-6	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.999998313303692	WITHOUT_CLASSIFICATION	1.6866963079793905E-6	DEFECT
// If there is a column object, just convert it to a string. //	WITHOUT_CLASSIFICATION	0.9999999969162132	WITHOUT_CLASSIFICATION	3.0837867146632834E-9	DEFECT
// No font is a good default. //	WITHOUT_CLASSIFICATION	0.9999995909080437	WITHOUT_CLASSIFICATION	4.0909195630915E-7	DEFECT
// Now we could check that the adapter implements interface ITableItemFontProvider. //	WITHOUT_CLASSIFICATION	0.9999996530819405	WITHOUT_CLASSIFICATION	3.469180594989722E-7	DEFECT
// Otherwise, we could check that the adapter implements interface IItemFontProvider. //	WITHOUT_CLASSIFICATION	0.9999996426513593	WITHOUT_CLASSIFICATION	3.573486406413122E-7	DEFECT
// No color is a good default. //	WITHOUT_CLASSIFICATION	0.9999998881139335	WITHOUT_CLASSIFICATION	1.1188606651088884E-7	DEFECT
// No color is a good default. //	WITHOUT_CLASSIFICATION	0.9999998881139335	WITHOUT_CLASSIFICATION	1.1188606651088884E-7	DEFECT
// Now we could check that the adapter implements interface ITableItemColorProvider. //	WITHOUT_CLASSIFICATION	0.9999997550271225	WITHOUT_CLASSIFICATION	2.449728775724826E-7	DEFECT
// Now we could check that the adapter implements interface ITableItemColorProvider. //	WITHOUT_CLASSIFICATION	0.9999997550271225	WITHOUT_CLASSIFICATION	2.449728775724826E-7	DEFECT
// Otherwise, we could check that the adapter implements interface IItemColorProvider. //	WITHOUT_CLASSIFICATION	0.9999997476616663	WITHOUT_CLASSIFICATION	2.5233833369548254E-7	DEFECT
// Otherwise, we could check that the adapter implements interface IItemColorProvider. //	WITHOUT_CLASSIFICATION	0.9999997476616663	WITHOUT_CLASSIFICATION	2.5233833369548254E-7	DEFECT
// The class is not available.	WITHOUT_CLASSIFICATION	0.9999480635204656	WITHOUT_CLASSIFICATION	5.193647953428238E-5	DEFECT
// Nested GenAnnotations	WITHOUT_CLASSIFICATION	0.9999999448772982	WITHOUT_CLASSIFICATION	5.5122701825775673E-8	DEFECT
/*   * For debugging purposes.  May be removed in the future.   */	WITHOUT_CLASSIFICATION	0.9999934188556259	WITHOUT_CLASSIFICATION	6.581144374132383E-6	DEFECT
// We don't need to encode here because the only platform resource URIs in the map are for projects // whose names are the same as corresponding plug-in IDs, and hence never need to be encoded // (see EcorePlugin.computePlatformResourceToPlatformPluginMap()). //	WITHOUT_CLASSIFICATION	0.9998141046861345	WITHOUT_CLASSIFICATION	1.858953138656039E-4	DEFECT
// Create resources for all the root EPackages. //	WITHOUT_CLASSIFICATION	0.9999940718862694	WITHOUT_CLASSIFICATION	5.92811373049145E-6	DEFECT
// removing the first space	WITHOUT_CLASSIFICATION	0.9999998918264407	WITHOUT_CLASSIFICATION	1.0817355935541949E-7	DEFECT
// Subclasses may overwrite	WITHOUT_CLASSIFICATION	0.9999998870361039	WITHOUT_CLASSIFICATION	1.1296389603093875E-7	DEFECT
// Create resources for all the referenced EPackages // The referencedEPackage is a "local" instance of the realEPackage.  We  // will add the former to a resource that has the same URI of the later.	WITHOUT_CLASSIFICATION	0.999992362905145	WITHOUT_CLASSIFICATION	7.637094854961469E-6	DEFECT
// Initialize the GenModel with all the computed data. //	WITHOUT_CLASSIFICATION	0.999999607747016	WITHOUT_CLASSIFICATION	3.9225298394381044E-7	DEFECT
// Restore all configured settings from the original. //	WITHOUT_CLASSIFICATION	0.9999778785769154	WITHOUT_CLASSIFICATION	2.2121423084597603E-5	DEFECT
// Handle application genmodel stub //	WITHOUT_CLASSIFICATION	0.999999937558284	WITHOUT_CLASSIFICATION	6.244171600750986E-8	DEFECT
// Determine which projects will need to be referenced. //	WITHOUT_CLASSIFICATION	0.999984556524788	WITHOUT_CLASSIFICATION	1.544347521198654E-5	DEFECT
// Create the model project. //	WITHOUT_CLASSIFICATION	0.9999970461490492	WITHOUT_CLASSIFICATION	2.9538509507342695E-6	DEFECT
// Add a dummy GenModel for referenced packages. //	WITHOUT_CLASSIFICATION	0.9999998165617742	WITHOUT_CLASSIFICATION	1.8343822582908464E-7	DEFECT
// Special case for a reference to Ecore to ensure that flag settings are respected and are set only for Ecore itself. //	WITHOUT_CLASSIFICATION	0.9999963745475319	WITHOUT_CLASSIFICATION	3.6254524680362075E-6	DEFECT
// Walk the project looking for .java files to analyze. //	WITHOUT_CLASSIFICATION	0.9999623604915328	WITHOUT_CLASSIFICATION	3.763950846717347E-5	DEFECT
// If we have resolved to an EClass but we have an EAttribute, we can change it to be an EReference. //	WITHOUT_CLASSIFICATION	0.9999906867875942	WITHOUT_CLASSIFICATION	9.3132124057261E-6	DEFECT
// Now we need to hook up opposites by finding the named feature in the type. //	WITHOUT_CLASSIFICATION	0.9999991591077213	WITHOUT_CLASSIFICATION	8.408922787156154E-7	DEFECT
// Containers are transient by default unless explicitly annotated otherwise. //	WITHOUT_CLASSIFICATION	0.9999999998574977	WITHOUT_CLASSIFICATION	1.4250237293094052E-10	DEFECT
// Now we need to hook up keys by finding the named feature in the type. //	WITHOUT_CLASSIFICATION	0.9999969624968831	WITHOUT_CLASSIFICATION	3.037503116900551E-6	DEFECT
// Clean up the temporary container annotations for holding map entry classes until they are for sure needed. //	WITHOUT_CLASSIFICATION	0.9999997154586809	WITHOUT_CLASSIFICATION	2.845413190527895E-7	DEFECT
// Now we should sort. //	WITHOUT_CLASSIFICATION	0.9999975676091084	WITHOUT_CLASSIFICATION	2.4323908915215625E-6	DEFECT
// Find the fragment root so that we can generate to the right location (by default). //	WITHOUT_CLASSIFICATION	0.9999946957708703	WITHOUT_CLASSIFICATION	5.304229129694353E-6	DEFECT
// Iterate over all projects to look at the manifests. //	WITHOUT_CLASSIFICATION	0.9999991448896168	WITHOUT_CLASSIFICATION	8.551103831972474E-7	DEFECT
// Determine the required plugins. //	WITHOUT_CLASSIFICATION	0.999916999052145	WITHOUT_CLASSIFICATION	8.300094785507463E-5	DEFECT
// Iterate over all the plugin IDs to determine the dependency closure. // The list grows as the plugins are visited. //	WITHOUT_CLASSIFICATION	0.9999999678283349	WITHOUT_CLASSIFICATION	3.217166505073657E-8	DEFECT
// Also add each required plugin for consideration in the loop. //	WITHOUT_CLASSIFICATION	0.9991019673886825	WITHOUT_CLASSIFICATION	8.980326113175551E-4	DEFECT
// If it's a platform plugin URI, include it in the map. //	WITHOUT_CLASSIFICATION	0.9998963103990194	WITHOUT_CLASSIFICATION	1.0368960098052945E-4	DEFECT
// Keep only the plugins that have GenModels for consideration. //	WITHOUT_CLASSIFICATION	0.9965464688456238	WITHOUT_CLASSIFICATION	0.003453531154376093	DEFECT
// Consider each GenModel location URI for each required plugin. //	WITHOUT_CLASSIFICATION	0.999381812362772	WITHOUT_CLASSIFICATION	6.18187637228046E-4	DEFECT
// Compute the closure. //	WITHOUT_CLASSIFICATION	0.9999999747608003	WITHOUT_CLASSIFICATION	2.5239199739028913E-8	DEFECT
// use no encoding	WITHOUT_CLASSIFICATION	0.9999998246484789	WITHOUT_CLASSIFICATION	1.7535152098353985E-7	DEFECT
// Walk the fields. //	WITHOUT_CLASSIFICATION	0.9999979993771827	WITHOUT_CLASSIFICATION	2.0006228172853582E-6	DEFECT
// Create the EPackage on demand. //	WITHOUT_CLASSIFICATION	0.9999982670791017	WITHOUT_CLASSIFICATION	1.7329208982497885E-6	DEFECT
// Check whether this has @model annotation contents. // If not, it might be a package interface, for backwards compatibility. //	WITHOUT_CLASSIFICATION	0.9999995907624292	WITHOUT_CLASSIFICATION	4.09237570810016E-7	DEFECT
// Get the package name and see if there's an EPackage for it. //	WITHOUT_CLASSIFICATION	0.9999999860403488	WITHOUT_CLASSIFICATION	1.3959651314612238E-8	DEFECT
// If it's an interface, then it will be treated as an EClass //	WITHOUT_CLASSIFICATION	0.9999994289057116	WITHOUT_CLASSIFICATION	5.710942884473174E-7	DEFECT
// Create a generic super type with an EClass as the classifier for each super interface in the Java representation. //	WITHOUT_CLASSIFICATION	0.9999997274766962	WITHOUT_CLASSIFICATION	2.725233038950389E-7	DEFECT
// Create a generic super type with an EClass as the classifier for each super interface in the @model representation //	WITHOUT_CLASSIFICATION	0.9999999775209023	WITHOUT_CLASSIFICATION	2.2479097737278987E-8	DEFECT
// Match them and accumulate the appropriate result. //	WITHOUT_CLASSIFICATION	0.9999977399458273	WITHOUT_CLASSIFICATION	2.260054172682539E-6	DEFECT
// Walk the methods. //	WITHOUT_CLASSIFICATION	0.9999867104227685	WITHOUT_CLASSIFICATION	1.3289577231561968E-5	DEFECT
// Additional attributes and references may be defined directly on the interface in order to allow the // get accessor method to have suppressed visibility. //	WITHOUT_CLASSIFICATION	0.9999974350969121	WITHOUT_CLASSIFICATION	2.5649030879120208E-6	DEFECT
// Otherwise it's treated as an EEnum //	WITHOUT_CLASSIFICATION	0.9999999931578802	WITHOUT_CLASSIFICATION	6.842119688187899E-9	DEFECT
// Find Packages and Factories	WITHOUT_CLASSIFICATION	0.9999998162284082	WITHOUT_CLASSIFICATION	1.8377159179265162E-7	DEFECT
// It's definitely a package if it was declared as such. //	WITHOUT_CLASSIFICATION	0.9999999809729011	WITHOUT_CLASSIFICATION	1.9027098871620382E-8	DEFECT
// It's definitely a package if expected constants eNAME, eNS_PREFIX, or eNS_URI appear. //	WITHOUT_CLASSIFICATION	0.9999957284733583	WITHOUT_CLASSIFICATION	4.271526641675094E-6	DEFECT
// This will catch inherited features, or additional things we don't want to worry about.	WITHOUT_CLASSIFICATION	0.985346589552788	WITHOUT_CLASSIFICATION	0.014653410447211997	DEFECT
// Check whether this has @model annotation contents. //	WITHOUT_CLASSIFICATION	0.9999998391403385	WITHOUT_CLASSIFICATION	1.6085966144713047E-7	DEFECT
// An operation is declared via the kind property or, for backwards compatibility, by specifying parameters // (though attribute or reference kind takes precedence). //	WITHOUT_CLASSIFICATION	0.9999951962405853	WITHOUT_CLASSIFICATION	4.8037594147417315E-6	DEFECT
// Map to an EEnum.	WITHOUT_CLASSIFICATION	0.9999996571187146	WITHOUT_CLASSIFICATION	3.4288128531348257E-7	DEFECT
// The feature name is extracted lower cased. //	WITHOUT_CLASSIFICATION	0.9999995622872471	WITHOUT_CLASSIFICATION	4.3771275297858224E-7	DEFECT
// The name is extracted and lower cased. //	WITHOUT_CLASSIFICATION	0.9999977124354135	WITHOUT_CLASSIFICATION	2.2875645864998396E-6	DEFECT
// Each token in parameters will specify a dataType for the corresponding parameter, but can be overridden by a // parameter-name-prefixed dataType property. //	WITHOUT_CLASSIFICATION	0.9977213602980506	WITHOUT_CLASSIFICATION	0.0022786397019495088	DEFECT
// Each token in exceptions will specify a data type for the corresponding exception. //	WITHOUT_CLASSIFICATION	0.9697197712486207	WITHOUT_CLASSIFICATION	0.03028022875137919	DEFECT
// If we aren't doing an operation... //	WITHOUT_CLASSIFICATION	0.9998451457842997	WITHOUT_CLASSIFICATION	1.548542157002526E-4	DEFECT
// We'll create one of these. //	WITHOUT_CLASSIFICATION	0.9999999730169915	WITHOUT_CLASSIFICATION	2.6983008470892638E-8	DEFECT
// If any of these attributes appear, this must be a reference. //	WITHOUT_CLASSIFICATION	0.9999508918618111	WITHOUT_CLASSIFICATION	4.910813818900819E-5	DEFECT
// Set the EReference attributes. //	WITHOUT_CLASSIFICATION	0.9999994700524111	WITHOUT_CLASSIFICATION	5.299475888869651E-7	DEFECT
// Defer the handling of the opposite. //	WITHOUT_CLASSIFICATION	0.9999999816814622	WITHOUT_CLASSIFICATION	1.8318537840799627E-8	DEFECT
// Set the visibility annotations for the EstructuralFeature. //	WITHOUT_CLASSIFICATION	0.9999998622642785	WITHOUT_CLASSIFICATION	1.3773572151078305E-7	DEFECT
// Set the EAttribute attributes. //	WITHOUT_CLASSIFICATION	0.999999693671322	WITHOUT_CLASSIFICATION	3.063286780231149E-7	DEFECT
// Handle the type, multiplicity and other ETypedElement attributes. //	WITHOUT_CLASSIFICATION	0.9999999997756519	WITHOUT_CLASSIFICATION	2.2434810369518074E-10	DEFECT
// Set the EStructuralFeature attributes. //	WITHOUT_CLASSIFICATION	0.9999999608894746	WITHOUT_CLASSIFICATION	3.9110525451585553E-8	DEFECT
// Process the annotations. //	WITHOUT_CLASSIFICATION	0.9999996989191334	WITHOUT_CLASSIFICATION	3.0108086651582645E-7	DEFECT
// For lists, maps, and feature maps, the default is many-valued, which can be overridden by an upper-bound declaration. //	WITHOUT_CLASSIFICATION	0.9999988619736221	WITHOUT_CLASSIFICATION	1.1380263778386687E-6	DEFECT
// The type can be augmented by specifying the it explicitly in the annotation. // This mostly makes sense only for many-valued typed elements, where the Java // type is a list and the item type needs to be specified. //	WITHOUT_CLASSIFICATION	0.9992930940583143	WITHOUT_CLASSIFICATION	7.069059416855778E-4	DEFECT
// Allow the value to be defined by an annotation or by the field's initializer //	WITHOUT_CLASSIFICATION	0.9999999798112201	WITHOUT_CLASSIFICATION	2.018877987976632E-8	DEFECT
// Allow a distinct literal value to be provided, too. //	WITHOUT_CLASSIFICATION	0.9999975564907435	WITHOUT_CLASSIFICATION	2.4435092564638205E-6	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.9999998937081113	WITHOUT_CLASSIFICATION	1.0629188876058995E-7	DEFECT
// Allow a mixed case version of the name to be provided. //	WITHOUT_CLASSIFICATION	0.999976280920684	WITHOUT_CLASSIFICATION	2.371907931595008E-5	DEFECT
// But, if name doesn't expand into field name, ignore it. //	WITHOUT_CLASSIFICATION	0.9999983867803812	WITHOUT_CLASSIFICATION	1.6132196187722504E-6	DEFECT
// If there is no Ecore representation or it's invalid, e.g., when - is used to omit a specification, then just use the Java representation. //	WITHOUT_CLASSIFICATION	0.9999999944341637	WITHOUT_CLASSIFICATION	5.565836310968493E-9	DEFECT
// We want to resolve to this. //	WITHOUT_CLASSIFICATION	0.999997955414492	WITHOUT_CLASSIFICATION	2.0445855080625845E-6	DEFECT
// Check if it is exactly the name of a type parameter that's in scope. //	WITHOUT_CLASSIFICATION	0.9999998727579514	WITHOUT_CLASSIFICATION	1.272420485502941E-7	DEFECT
// Check if the name is qualified //	WITHOUT_CLASSIFICATION	0.9999999994250489	WITHOUT_CLASSIFICATION	5.749510844803992E-10	DEFECT
// For arrays, consider the element type. //	WITHOUT_CLASSIFICATION	0.9999906009587719	WITHOUT_CLASSIFICATION	9.399041228043876E-6	DEFECT
// Find an explicit import or the first wildcard import. //	WITHOUT_CLASSIFICATION	0.9999997759436882	WITHOUT_CLASSIFICATION	2.2405631170525236E-7	DEFECT
// Find the modeled package for the import and look up the name there. //	WITHOUT_CLASSIFICATION	0.9999993858819841	WITHOUT_CLASSIFICATION	6.141180158856252E-7	DEFECT
// If we can't find it, try the simple name in the package... //	WITHOUT_CLASSIFICATION	0.9995568648045525	WITHOUT_CLASSIFICATION	4.431351954473609E-4	DEFECT
// Find the modeled package for the name and look up the name there. //	WITHOUT_CLASSIFICATION	0.9999998014831487	WITHOUT_CLASSIFICATION	1.9851685123857516E-7	DEFECT
// If we still don't have one, we'll have to settle for an EDataType or EClass with an instance class name. //	WITHOUT_CLASSIFICATION	0.999977332669845	WITHOUT_CLASSIFICATION	2.266733015498239E-5	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999986414502402	WITHOUT_CLASSIFICATION	1.3585497598851668E-6	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.9999998481815032	WITHOUT_CLASSIFICATION	1.518184968271126E-7	DEFECT
// See if we already have the EDataType. //	WITHOUT_CLASSIFICATION	0.9999993757505088	WITHOUT_CLASSIFICATION	6.242494912410176E-7	DEFECT
// Just to be helpful, we'll recognize a type of org.eclipse.emf.ecore.util.FeatureMap and convert it to EFeatureMapEntry. // This way a dataType need not be specified. But, we won't do this if recordDemandCreateEDataType is false, so we don't // change the instanceClass of a new EDataType that's implicitly being defined for FeatureMap. //	WITHOUT_CLASSIFICATION	0.9999999999998861	WITHOUT_CLASSIFICATION	1.138430393924002E-13	DEFECT
// If we don't have one yet, maybe it's one of the special types... //	WITHOUT_CLASSIFICATION	0.9991476751037931	WITHOUT_CLASSIFICATION	8.523248962068582E-4	DEFECT
// If we still don't have one, we'll have to settle for a demand created EDataType or EClass, // so create a new EClassifier with a nice unique name. //	WITHOUT_CLASSIFICATION	0.999999953349196	WITHOUT_CLASSIFICATION	4.665080390344349E-8	DEFECT
// If the name isn't qualified, it might be a primitive or from java.lang. Otherwise, assume it's in the current // package and use the nsPrefix for the qualified package name. //	WITHOUT_CLASSIFICATION	0.9999999287735025	WITHOUT_CLASSIFICATION	7.122649747332484E-8	DEFECT
// Even primitives should be represented by a data type with a conventional (i.e. capitalized) name. //	WITHOUT_CLASSIFICATION	0.9998454233345964	WITHOUT_CLASSIFICATION	1.5457666540360485E-4	DEFECT
// Make array names legal. //	WITHOUT_CLASSIFICATION	0.999992457961629	WITHOUT_CLASSIFICATION	7.5420383708962185E-6	DEFECT
// Avoid classifier name collisions. //	WITHOUT_CLASSIFICATION	0.9999995870993811	WITHOUT_CLASSIFICATION	4.129006188740831E-7	DEFECT
// For the model information. //	WITHOUT_CLASSIFICATION	0.9999928175282224	WITHOUT_CLASSIFICATION	7.182471777487157E-6	DEFECT
// This is package,  // so check the package information if this is in cat file. // If it is, then load the .cat file into the tree thereby traversing it; // otherwise, just traverse the tree. //	WITHOUT_CLASSIFICATION	0.9999999999592466	WITHOUT_CLASSIFICATION	4.075334913019004E-11	DEFECT
// The package is in a .cat file. //	WITHOUT_CLASSIFICATION	0.9999981242646552	WITHOUT_CLASSIFICATION	1.8757353447776067E-6	DEFECT
// The package not in a .cat file. //	WITHOUT_CLASSIFICATION	0.9998714568403542	WITHOUT_CLASSIFICATION	1.2854315964589685E-4	DEFECT
// This could potentially map every created model element to its corresponding Rose node. // However, for now we're only using it as needed. //	WITHOUT_CLASSIFICATION	0.9999851826797206	WITHOUT_CLASSIFICATION	1.481732027953202E-5	DEFECT
// Get the parent object. //	WITHOUT_CLASSIFICATION	0.9999992121967215	WITHOUT_CLASSIFICATION	7.878032785198634E-7	DEFECT
// Map to an EPackage. //	WITHOUT_CLASSIFICATION	0.9999993958307286	WITHOUT_CLASSIFICATION	6.041692713722534E-7	DEFECT
// Add to package. //	WITHOUT_CLASSIFICATION	0.9999988741853107	WITHOUT_CLASSIFICATION	1.125814689264725E-6	DEFECT
// Map to an EClass. //	WITHOUT_CLASSIFICATION	0.9999997927955423	WITHOUT_CLASSIFICATION	2.0720445764736388E-7	DEFECT
//do nothing	WITHOUT_CLASSIFICATION	0.9999972636667517	WITHOUT_CLASSIFICATION	2.7363332482667327E-6	DEFECT
// Map to an EDataType. //	WITHOUT_CLASSIFICATION	0.9999985895878126	WITHOUT_CLASSIFICATION	1.4104121873686924E-6	DEFECT
// Map to an EDataType. //	WITHOUT_CLASSIFICATION	0.9999985895878126	WITHOUT_CLASSIFICATION	1.4104121873686924E-6	DEFECT
// Map to an eClass. //	WITHOUT_CLASSIFICATION	0.9999997376873565	WITHOUT_CLASSIFICATION	2.6231264354116663E-7	DEFECT
// Map to an EOperation.	WITHOUT_CLASSIFICATION	0.9999999647005348	WITHOUT_CLASSIFICATION	3.529946524766378E-8	DEFECT
// Add to an EClass //	WITHOUT_CLASSIFICATION	0.999999719823206	WITHOUT_CLASSIFICATION	2.8017679388274203E-7	DEFECT
// Map to an EParameter as input parameter for operation. //	WITHOUT_CLASSIFICATION	0.9999998064292476	WITHOUT_CLASSIFICATION	1.935707524429877E-7	DEFECT
// Do this first for better error message during setEParameterProperties. //	WITHOUT_CLASSIFICATION	0.9999999909883499	WITHOUT_CLASSIFICATION	9.011650206806579E-9	DEFECT
// Map to EAttribute, or EEnumLiteral. //	WITHOUT_CLASSIFICATION	0.9999999176327204	WITHOUT_CLASSIFICATION	8.236727956008856E-8	DEFECT
// We will need to check the containment if we have to convert the EAttribute to an EReference later.  //	WITHOUT_CLASSIFICATION	0.9999998772839623	WITHOUT_CLASSIFICATION	1.2271603756783787E-7	DEFECT
// Convert to an EReference. //	WITHOUT_CLASSIFICATION	0.9999992659395541	WITHOUT_CLASSIFICATION	7.340604459514069E-7	DEFECT
// map to EReference when is navigable //	WITHOUT_CLASSIFICATION	0.9999955854218241	WITHOUT_CLASSIFICATION	4.414578175872211E-6	DEFECT
// eReference.setNavigable(roseNode.isNavigable());	WITHOUT_CLASSIFICATION	0.999999545741018	WITHOUT_CLASSIFICATION	4.5425898203766195E-7	DEFECT
/*        eClass.getESuperTypes().addAll(extend);        eClass.getESuperTypes().addAll(unspecified);        eClass.getESuperTypes().addAll(mixin);        eClass.getESuperTypes().addAll(nonClass);        */	WITHOUT_CLASSIFICATION	0.9999999520428063	WITHOUT_CLASSIFICATION	4.795719374355703E-8	DEFECT
// try to retrieve the fully qualified name of the specified type...	WITHOUT_CLASSIFICATION	0.999999996553318	WITHOUT_CLASSIFICATION	3.4466819471924027E-9	DEFECT
// convert to dot-separated format if necessary...	WITHOUT_CLASSIFICATION	0.9999994744630145	WITHOUT_CLASSIFICATION	5.255369854173519E-7	DEFECT
// remove garbage characters...	WITHOUT_CLASSIFICATION	0.999998333730507	WITHOUT_CLASSIFICATION	1.6662694929789233E-6	DEFECT
// qualify type name if not already qualified...	WITHOUT_CLASSIFICATION	0.9999984082326528	WITHOUT_CLASSIFICATION	1.5917673471175696E-6	DEFECT
// default value //	WITHOUT_CLASSIFICATION	0.9999992442618605	WITHOUT_CLASSIFICATION	7.557381395427712E-7	DEFECT
// Order first by number of features (descending) and then alphabetically (ascending) //	WITHOUT_CLASSIFICATION	0.9999998167242263	WITHOUT_CLASSIFICATION	1.832757735890527E-7	DEFECT
// Temporary WAS/WSAD migration option. //	WITHOUT_CLASSIFICATION	0.9999914895383946	WITHOUT_CLASSIFICATION	8.510461605369595E-6	DEFECT
// A container must be transient. //	WITHOUT_CLASSIFICATION	0.9999999725782523	WITHOUT_CLASSIFICATION	2.742174766615604E-8	DEFECT
// setup attribute and parameter type //	WITHOUT_CLASSIFICATION	0.9999993047647653	WITHOUT_CLASSIFICATION	6.952352345820656E-7	DEFECT
// Convert attributes of with EClass type to references. //	WITHOUT_CLASSIFICATION	0.9999997305635541	WITHOUT_CLASSIFICATION	2.694364459526434E-7	DEFECT
// It was not found in the model class so check if primitive type. //	WITHOUT_CLASSIFICATION	0.9999966491067231	WITHOUT_CLASSIFICATION	3.350893276773981E-6	DEFECT
// Convert reference to attribute if its type is an EDataType...  //	WITHOUT_CLASSIFICATION	0.9999986835304493	WITHOUT_CLASSIFICATION	1.3164695506535197E-6	DEFECT
// Store the base name for relative .cat file references. //	WITHOUT_CLASSIFICATION	0.9999999876558312	WITHOUT_CLASSIFICATION	1.2344168732728533E-8	DEFECT
// read mdl file...	WITHOUT_CLASSIFICATION	0.9999986670763662	WITHOUT_CLASSIFICATION	1.3329236338636884E-6	DEFECT
// special case, traverse cat file or mdl file //	WITHOUT_CLASSIFICATION	0.9999999700255311	WITHOUT_CLASSIFICATION	2.9974468914100643E-8	DEFECT
// file is a mdl file // // get model name	WITHOUT_CLASSIFICATION	0.9999995399152782	WITHOUT_CLASSIFICATION	4.600847217990631E-7	DEFECT
// cat(unit) file referenced by mdl file	WITHOUT_CLASSIFICATION	0.9999994147870738	WITHOUT_CLASSIFICATION	5.852129262027484E-7	DEFECT
// Process the children of the UnitTreeNode recursively. //	WITHOUT_CLASSIFICATION	0.9999996843260426	WITHOUT_CLASSIFICATION	3.1567395740469315E-7	DEFECT
//directoryName.length() > 0 && directoryName.charAt(0) == '$') 	WITHOUT_CLASSIFICATION	0.9999996811851621	WITHOUT_CLASSIFICATION	3.1881483791580594E-7	DEFECT
// map properties even when isTreeOnly == true	WITHOUT_CLASSIFICATION	0.9999975497331729	WITHOUT_CLASSIFICATION	2.4502668270871327E-6	DEFECT
//    top++;	WITHOUT_CLASSIFICATION	0.9999955139326027	WITHOUT_CLASSIFICATION	4.486067397307598E-6	DEFECT
// 7 is the size of (object	WITHOUT_CLASSIFICATION	0.9999830779887399	WITHOUT_CLASSIFICATION	1.6922011260065673E-5	DEFECT
// 5 is the size of (list	WITHOUT_CLASSIFICATION	0.9999960085854431	WITHOUT_CLASSIFICATION	3.991414556897589E-6	DEFECT
// 6 is the size of (value	WITHOUT_CLASSIFICATION	0.9999938018539988	WITHOUT_CLASSIFICATION	6.198146001172789E-6	DEFECT
// size should be 1	WITHOUT_CLASSIFICATION	0.9999852037601963	WITHOUT_CLASSIFICATION	1.479623980377067E-5	DEFECT
// could this happen?	WITHOUT_CLASSIFICATION	0.9999821612608356	WITHOUT_CLASSIFICATION	1.783873916439874E-5	DEFECT
// Process the children of the UnitTreeNode recursively. //	WITHOUT_CLASSIFICATION	0.9999996843260426	WITHOUT_CLASSIFICATION	3.1567395740469315E-7	DEFECT
// Process the contents of the extent //	WITHOUT_CLASSIFICATION	0.9999998997435966	WITHOUT_CLASSIFICATION	1.0025640337683085E-7	DEFECT
// Load the Rose .mdl or .cat file, and create mappings for the objects. //	WITHOUT_CLASSIFICATION	0.9999989945077571	WITHOUT_CLASSIFICATION	1.0054922429443966E-6	DEFECT
// This sets the parent so that the nodes can traverse to the root to find default eCore settings. //	WITHOUT_CLASSIFICATION	0.9999970352098211	WITHOUT_CLASSIFICATION	2.9647901789077814E-6	DEFECT
// Start second traverse to create mapping objects in memory. //	WITHOUT_CLASSIFICATION	0.9998567281626878	WITHOUT_CLASSIFICATION	1.432718373122541E-4	DEFECT
// Only one open quote. //	WITHOUT_CLASSIFICATION	0.9999883876674159	WITHOUT_CLASSIFICATION	1.1612332584073566E-5	DEFECT
// This will not add duplicates. //	WITHOUT_CLASSIFICATION	0.9999955872025315	WITHOUT_CLASSIFICATION	4.412797468506673E-6	DEFECT
// No additional features // MappingStrategy	WITHOUT_CLASSIFICATION	0.9999988651881649	WITHOUT_CLASSIFICATION	1.1348118349898256E-6	DEFECT
//MappingPackage	WITHOUT_CLASSIFICATION	0.9999942622246621	WITHOUT_CLASSIFICATION	5.737775337818262E-6	DEFECT
// ComplexTypeConverter	WITHOUT_CLASSIFICATION	0.9999995449767575	WITHOUT_CLASSIFICATION	4.550232424808439E-7	DEFECT
// No additional features // TypeConverter	WITHOUT_CLASSIFICATION	0.9999998934998419	WITHOUT_CLASSIFICATION	1.065001580530681E-7	DEFECT
// MappingRoot	WITHOUT_CLASSIFICATION	0.999996424815061	WITHOUT_CLASSIFICATION	3.57518493886432E-6	DEFECT
// FunctionNamePair	WITHOUT_CLASSIFICATION	0.9999998047816231	WITHOUT_CLASSIFICATION	1.9521837686418815E-7	DEFECT
// MappingHelper	WITHOUT_CLASSIFICATION	0.9999992703600936	WITHOUT_CLASSIFICATION	7.296399063226491E-7	DEFECT
//MappingFactory	WITHOUT_CLASSIFICATION	0.9999755475278047	WITHOUT_CLASSIFICATION	2.4452472195250327E-5	DEFECT
// FunctionPair	WITHOUT_CLASSIFICATION	0.9999994232090741	WITHOUT_CLASSIFICATION	5.76790925933698E-7	DEFECT
//mappingRoot.ePackageMapping().getMapping_Outputs() : //mappingRoot.ePackageMapping().getMapping_Inputs(),	WITHOUT_CLASSIFICATION	0.9999141373519856	WITHOUT_CLASSIFICATION	8.586264801428507E-5	DEFECT
//mappingRoot.ePackageMapping().getMapping_Inputs() : //mappingRoot.ePackageMapping().getMapping_Outputs(),	WITHOUT_CLASSIFICATION	0.9999141373519856	WITHOUT_CLASSIFICATION	8.586264801428507E-5	DEFECT
// This will deal with all the subcommands to modifying the root mapping tree. //	WITHOUT_CLASSIFICATION	0.9884011240894589	WITHOUT_CLASSIFICATION	0.011598875910541066	DEFECT
// For each mapping being removed... //	WITHOUT_CLASSIFICATION	0.9988947155314053	WITHOUT_CLASSIFICATION	0.001105284468594752	DEFECT
// Make sure the back pointers to this mapping from the mapped objects is set. //	WITHOUT_CLASSIFICATION	0.9999724917166017	WITHOUT_CLASSIFICATION	2.750828339835683E-5	DEFECT
//subcommands.appendAndExecute(new RemoveCommand(domain, mapping, mapping.ePackageMapping().getMapping_Nested(), nestedMappings)); //subcommands.appendAndExecute(new AddCommand(domain, parentMapping, parentMapping.ePackageMapping().getMapping_Nested(), nestedMappings));	WITHOUT_CLASSIFICATION	0.9999730503459431	WITHOUT_CLASSIFICATION	2.69496540569664E-5	DEFECT
// Since input objects are read-only, we don't need to make a copy of them for the clipboard. // We can just put a pointer to the original object(s) on the clipboard. //	WITHOUT_CLASSIFICATION	0.9999999947231462	WITHOUT_CLASSIFICATION	5.276853927724515E-9	DEFECT
// Do we also have some non-input objects to copy? //	WITHOUT_CLASSIFICATION	0.9999982650952395	WITHOUT_CLASSIFICATION	1.7349047605023289E-6	DEFECT
// Just remember it; it's encoded later during execution, which is more efficient. //	WITHOUT_CLASSIFICATION	0.9999912803233775	WITHOUT_CLASSIFICATION	8.719676622587944E-6	DEFECT
// Do the encoding. //	WITHOUT_CLASSIFICATION	0.9999944851492586	WITHOUT_CLASSIFICATION	5.514850741298508E-6	DEFECT
// Record the records for the executed commands on the stack. //	WITHOUT_CLASSIFICATION	0.9989229984585458	WITHOUT_CLASSIFICATION	0.0010770015414542247	DEFECT
// If there is more than one exact match, we must get an index number; //	WITHOUT_CLASSIFICATION	0.999999531435584	WITHOUT_CLASSIFICATION	4.685644159662601E-7	DEFECT
// Iterate over the whole tree to do this. //	WITHOUT_CLASSIFICATION	0.9999997821493678	WITHOUT_CLASSIFICATION	2.1785063220837598E-7	DEFECT
//Resource resource = EcoreUtil.getURI(refObject).; FIX:::	WITHOUT_CLASSIFICATION	0.9979052936936951	WITHOUT_CLASSIFICATION	0.0020947063063049766	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.mapping.action.AddRootTopAction#getTopsToAdd()   */	WITHOUT_CLASSIFICATION	0.9999999999852283	WITHOUT_CLASSIFICATION	1.477173306649404E-11	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9999958962280804	WITHOUT_CLASSIFICATION	4.10377191956407E-6	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9999958962280804	WITHOUT_CLASSIFICATION	4.10377191956407E-6	DEFECT
// Make sure the back pointers to this mapping from the mapped objects is set. //	WITHOUT_CLASSIFICATION	0.9999724917166017	WITHOUT_CLASSIFICATION	2.750828339835683E-5	DEFECT
// Iterate over the whole tree to do this. //	WITHOUT_CLASSIFICATION	0.9999997821493678	WITHOUT_CLASSIFICATION	2.1785063220837598E-7	DEFECT
// This is tricky and is done for each object here rather than once for the owner of the addCommnd. // We want to make sure the object is really part of the conceptual tree induced by the domain. //	WITHOUT_CLASSIFICATION	0.9999991147333723	WITHOUT_CLASSIFICATION	8.852666278043216E-7	DEFECT
// For each mapping being added... //	WITHOUT_CLASSIFICATION	0.9996889522673603	WITHOUT_CLASSIFICATION	3.110477326396373E-4	DEFECT
// Check all the siblings to see which if any should now be nested under this new mapping. // The are accumulated into a list so that they can be removed as a single command with a single notification. //	WITHOUT_CLASSIFICATION	0.9995633484672981	WITHOUT_CLASSIFICATION	4.366515327018476E-4	DEFECT
// If there are siblings that need to be reparented. //	WITHOUT_CLASSIFICATION	0.9998832699138726	WITHOUT_CLASSIFICATION	1.1673008612740138E-4	DEFECT
// Create commands to do parentMapping.getNested().removeAll(siblingsToReparent). //	WITHOUT_CLASSIFICATION	0.9998051652924914	WITHOUT_CLASSIFICATION	1.9483470750864893E-4	DEFECT
//(new RemoveCommand(domain, parentMapping, parentMapping.ePackageMapping().getMapping_Nested(), siblingsToReparent));	WITHOUT_CLASSIFICATION	0.999998433739537	WITHOUT_CLASSIFICATION	1.5662604630883237E-6	DEFECT
// Create commands to do mapping.getNested().addAll(siblingsToReparent). //	WITHOUT_CLASSIFICATION	0.9999032040005529	WITHOUT_CLASSIFICATION	9.679599944716862E-5	DEFECT
// return false if iteration should continue.	WITHOUT_CLASSIFICATION	0.9999999694869661	WITHOUT_CLASSIFICATION	3.051303387446726E-8	DEFECT
// Now we'll do recursive MatchMapping. // (We need to iterate over a copy, since we modify the underlying list in the loop.)	WITHOUT_CLASSIFICATION	0.9999999987822404	WITHOUT_CLASSIFICATION	1.2177595387766817E-9	DEFECT
//(RemoveCommand.create(mappingDomain, mapping, mapping.ePackageMapping().getMapping_Outputs(), object)));	WITHOUT_CLASSIFICATION	0.9999987927601839	WITHOUT_CLASSIFICATION	1.2072398161371104E-6	DEFECT
// Get the corresponding type. //	WITHOUT_CLASSIFICATION	0.9998572901795671	WITHOUT_CLASSIFICATION	1.4270982043287583E-4	DEFECT
// Create the copy from this corresponding type. //	WITHOUT_CLASSIFICATION	0.9993022610362572	WITHOUT_CLASSIFICATION	6.977389637428256E-4	DEFECT
// This is done to ensure that this new copy is treated as an output by the domain. // The CreateMappingCommand will rely on this setting. //	WITHOUT_CLASSIFICATION	0.9999872237306039	WITHOUT_CLASSIFICATION	1.277626939597072E-5	DEFECT
// Type matching never matches inputs that are already mapped	WITHOUT_CLASSIFICATION	0.9999962261366384	WITHOUT_CLASSIFICATION	3.7738633615640388E-6	DEFECT
//commandList.add(RemoveCommand.create(mappingDomain, mapping, mapping.ePackageMapping().getMapping_Outputs(), object));	WITHOUT_CLASSIFICATION	0.9999990808914069	WITHOUT_CLASSIFICATION	9.191085931307948E-7	DEFECT
// Copy the children references  //	WITHOUT_CLASSIFICATION	0.9999971356339655	WITHOUT_CLASSIFICATION	2.8643660343974197E-6	DEFECT
// this will create the mapping as well	WITHOUT_CLASSIFICATION	0.9999959086421449	WITHOUT_CLASSIFICATION	4.0913578549900995E-6	DEFECT
// Copy the name //	WITHOUT_CLASSIFICATION	0.9999994061183909	WITHOUT_CLASSIFICATION	5.938816091035395E-7	DEFECT
// Copy the type //	WITHOUT_CLASSIFICATION	0.9999973815450502	WITHOUT_CLASSIFICATION	2.6184549496624877E-6	DEFECT
// We have done our preparation. Now ask the super to validate. //	WITHOUT_CLASSIFICATION	0.9999998485011508	WITHOUT_CLASSIFICATION	1.5149884914663414E-7	DEFECT
// Remove all the mappings from the root. //	WITHOUT_CLASSIFICATION	0.9846080774541576	WITHOUT_CLASSIFICATION	0.01539192254584239	DEFECT
//removeCommand = RemoveCommand.create(domain, mappingRoot, mappingRoot.ePackageMapping().getMapping_Nested(), mappingRoot.getNested());	WITHOUT_CLASSIFICATION	0.9999996768084206	WITHOUT_CLASSIFICATION	3.2319157936917336E-7	DEFECT
// This is the tricky part where we set the encoding  // that we'd like to have decoded as a series of commands to execute after this command has completed. //	WITHOUT_CLASSIFICATION	0.9900292353864056	WITHOUT_CLASSIFICATION	0.009970764613594404	DEFECT
//domain.getMappingRoot().removeMapping(newMapping);	WITHOUT_CLASSIFICATION	0.9999943829460387	WITHOUT_CLASSIFICATION	5.617053961299378E-6	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.mapping.action.AddRootBottomAction#getBottomsToAdd()   */	WITHOUT_CLASSIFICATION	0.9999999999306657	WITHOUT_CLASSIFICATION	6.933429431168113E-11	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.999999726172474	WITHOUT_CLASSIFICATION	2.738275259538914E-7	DEFECT
// If eCore, return the ENamedElement name //	WITHOUT_CLASSIFICATION	0.9999998690379516	WITHOUT_CLASSIFICATION	1.3096204855059018E-7	DEFECT
// If there is an adapter of the correct type, return the item label //	WITHOUT_CLASSIFICATION	0.9999857371176208	WITHOUT_CLASSIFICATION	1.42628823791487E-5	DEFECT
// If eCore, set the ENamedElement name //	WITHOUT_CLASSIFICATION	0.9999999806468628	WITHOUT_CLASSIFICATION	1.9353137186959043E-8	DEFECT
// This turns a featureless set command into an operation to create a mapping. // This is invoked during drag and drop. //	WITHOUT_CLASSIFICATION	0.999999819716848	WITHOUT_CLASSIFICATION	1.8028315192455742E-7	DEFECT
// If this is a RemoveCommand for a root input object, direct it to the MappingRoot. //	WITHOUT_CLASSIFICATION	0.9995243745824728	WITHOUT_CLASSIFICATION	4.7562541752715367E-4	DEFECT
// If the owner and the copy are of the same type, we can proceed with the command, i.e. no override. // If not, we will skip this command by returning a do-nothing override. //	WITHOUT_CLASSIFICATION	0.9999987148193891	WITHOUT_CLASSIFICATION	1.2851806109042585E-6	DEFECT
// remove all sourceSeparator characters	WITHOUT_CLASSIFICATION	0.9999999580651974	WITHOUT_CLASSIFICATION	4.193480271154708E-8	DEFECT
// sourceSeparator == LABEL_NO_SEPARATOR	WITHOUT_CLASSIFICATION	0.9999999872908131	WITHOUT_CLASSIFICATION	1.2709186909023932E-8	DEFECT
// add a targetSeparator in front of every upper case character	WITHOUT_CLASSIFICATION	0.9999999742861483	WITHOUT_CLASSIFICATION	2.5713851715162213E-8	DEFECT
// type-mappings	WITHOUT_CLASSIFICATION	0.9999808884884829	WITHOUT_CLASSIFICATION	1.9111511517080314E-5	DEFECT
// top-label-separator	WITHOUT_CLASSIFICATION	0.9999999709404069	WITHOUT_CLASSIFICATION	2.9059593098281755E-8	DEFECT
// bottom-label-separator	WITHOUT_CLASSIFICATION	0.9999999956602448	WITHOUT_CLASSIFICATION	4.33975524716809E-9	DEFECT
// top-label-case	WITHOUT_CLASSIFICATION	0.9999999250187537	WITHOUT_CLASSIFICATION	7.498124625188422E-8	DEFECT
// bottom-label-case	WITHOUT_CLASSIFICATION	0.9999999863444811	WITHOUT_CLASSIFICATION	1.3655518838958932E-8	DEFECT
// top-label-forms	WITHOUT_CLASSIFICATION	0.9999999524194206	WITHOUT_CLASSIFICATION	4.7580579407745556E-8	DEFECT
// bottom-label-forms	WITHOUT_CLASSIFICATION	0.9999999896631594	WITHOUT_CLASSIFICATION	1.033684050624542E-8	DEFECT
//if // for // for	WITHOUT_CLASSIFICATION	0.9999980682937993	WITHOUT_CLASSIFICATION	1.9317062006663897E-6	DEFECT
/*     * The type string must be qualified by its package uri, e.g. DTD.xmi:DTDElement.     * The package uri is used to look up the package by calling RefRegister.getPackage(uri).     */	WITHOUT_CLASSIFICATION	0.9999999980219044	WITHOUT_CLASSIFICATION	1.978095534740245E-9	DEFECT
//Ecore2EcorePackage	WITHOUT_CLASSIFICATION	0.9999870514133316	WITHOUT_CLASSIFICATION	1.2948586668351156E-5	DEFECT
// Ecore2EcoreMappingRoot	WITHOUT_CLASSIFICATION	0.999995228336319	WITHOUT_CLASSIFICATION	4.771663681057196E-6	DEFECT
//Ecore2EcoreFactory	WITHOUT_CLASSIFICATION	0.99998684076171	WITHOUT_CLASSIFICATION	1.3159238289938173E-5	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999986414502402	WITHOUT_CLASSIFICATION	1.3585497598851668E-6	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999986414502402	WITHOUT_CLASSIFICATION	1.3585497598851668E-6	DEFECT
// Obtain other dependent packages	WITHOUT_CLASSIFICATION	0.9999999926807401	WITHOUT_CLASSIFICATION	7.319259834361146E-9	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.9999993338928099	WITHOUT_CLASSIFICATION	6.661071901337388E-7	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.9999921779007461	WITHOUT_CLASSIFICATION	7.822099253932902E-6	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.9999998165471937	WITHOUT_CLASSIFICATION	1.834528063299559E-7	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.mapping.ecore2ecore.Ecore2EcoreMapping#getInputEPackage()   */	WITHOUT_CLASSIFICATION	0.9999999963961264	WITHOUT_CLASSIFICATION	3.6038736606071494E-9	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.mapping.ecore2ecore.Ecore2EcoreMapping#getOutputEPackage()   */	WITHOUT_CLASSIFICATION	0.9999999983170074	WITHOUT_CLASSIFICATION	1.6829925418809913E-9	DEFECT
// Initialize classes and features; add operations and parameters	WITHOUT_CLASSIFICATION	0.9999993621167168	WITHOUT_CLASSIFICATION	6.378832832154119E-7	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.999999913714059	WITHOUT_CLASSIFICATION	8.628594096543401E-8	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9999897795145728	WITHOUT_CLASSIFICATION	1.0220485427274058E-5	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999915452101419	WITHOUT_CLASSIFICATION	8.454789858137396E-6	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9999897795145728	WITHOUT_CLASSIFICATION	1.0220485427274058E-5	DEFECT
/**   * The switch that delegates to the <code>createXXX</code> methods.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9999999314227829	WITHOUT_CLASSIFICATION	6.857721708148531E-8	DEFECT
// Open an editor on the new file. //	WITHOUT_CLASSIFICATION	0.999996639357416	WITHOUT_CLASSIFICATION	3.3606425840097315E-6	DEFECT
// Remember the file. //	WITHOUT_CLASSIFICATION	0.9999960871588464	WITHOUT_CLASSIFICATION	3.912841153660608E-6	DEFECT
// Do the work within an operation. //	WITHOUT_CLASSIFICATION	0.999981969513421	WITHOUT_CLASSIFICATION	1.8030486578983338E-5	DEFECT
// Create a resource set //	WITHOUT_CLASSIFICATION	0.9999999807836839	WITHOUT_CLASSIFICATION	1.921631604816211E-8	DEFECT
// Get the URI of the model file. //	WITHOUT_CLASSIFICATION	0.9999987247539358	WITHOUT_CLASSIFICATION	1.2752460641814765E-6	DEFECT
// Create a resource for this file. //	WITHOUT_CLASSIFICATION	0.9999994131322223	WITHOUT_CLASSIFICATION	5.8686777773251E-7	DEFECT
// Add the initial model object to the contents. //	WITHOUT_CLASSIFICATION	0.9999999931296989	WITHOUT_CLASSIFICATION	6.870301124202072E-9	DEFECT
// Save the contents of the resource to the file system. //	WITHOUT_CLASSIFICATION	0.9999988720733909	WITHOUT_CLASSIFICATION	1.1279266091547636E-6	DEFECT
// Select the new file resource in the current view. //	WITHOUT_CLASSIFICATION	0.9999979185043191	WITHOUT_CLASSIFICATION	2.081495680967081E-6	DEFECT
// Determine the values to be added and add them at the right position. //	WITHOUT_CLASSIFICATION	0.9998965806402202	WITHOUT_CLASSIFICATION	1.034193597797156E-4	DEFECT
//Ecore2EcorePackageImpl	WITHOUT_CLASSIFICATION	0.9999757220795034	WITHOUT_CLASSIFICATION	2.4277920496593755E-5	DEFECT
//Ecore2EcoreFactoryImpl	WITHOUT_CLASSIFICATION	0.9999873387484663	WITHOUT_CLASSIFICATION	1.2661251533628296E-5	DEFECT
//Ecore2EcoreMappingRootImpl	WITHOUT_CLASSIFICATION	0.9999582807242723	WITHOUT_CLASSIFICATION	4.171927572778207E-5	DEFECT
//Ecore2EcoreResourceFactoryImpl	WITHOUT_CLASSIFICATION	0.9999951234907103	WITHOUT_CLASSIFICATION	4.876509289640402E-6	DEFECT
//Ecore2EcoreResourceFactoryImpl	WITHOUT_CLASSIFICATION	0.9999951234907103	WITHOUT_CLASSIFICATION	4.876509289640402E-6	DEFECT
//Ecore2EcoreAdapterFactory	WITHOUT_CLASSIFICATION	0.9999832651307523	WITHOUT_CLASSIFICATION	1.6734869247751448E-5	DEFECT
//Ecore2EcoreSwitch	WITHOUT_CLASSIFICATION	0.9999803583995551	WITHOUT_CLASSIFICATION	1.964160044485167E-5	DEFECT
//$NON-NLS-1$ 	WITHOUT_CLASSIFICATION	0.9999901926142966	WITHOUT_CLASSIFICATION	9.807385703514632E-6	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9999894881046154	WITHOUT_CLASSIFICATION	1.0511895384633356E-5	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9999894881046154	WITHOUT_CLASSIFICATION	1.0511895384633356E-5	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9999894881046154	WITHOUT_CLASSIFICATION	1.0511895384633356E-5	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999773853292637	WITHOUT_CLASSIFICATION	2.261467073633039E-5	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.9999999766383213	WITHOUT_CLASSIFICATION	2.3361678751851995E-8	DEFECT
// Initialize simple dependencies	WITHOUT_CLASSIFICATION	0.9999998627377243	WITHOUT_CLASSIFICATION	1.372622756233283E-7	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.9999990161470182	WITHOUT_CLASSIFICATION	9.83852981794225E-7	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.9999998510045144	WITHOUT_CLASSIFICATION	1.4899548560704843E-7	DEFECT
// Mark meta-data to indicate it can't be changed	WITHOUT_CLASSIFICATION	0.999996839412632	WITHOUT_CLASSIFICATION	3.1605873680022317E-6	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.ui.IActionDelegate#run(org.eclipse.jface.action.IAction)   */	WITHOUT_CLASSIFICATION	0.9999999999882139	WITHOUT_CLASSIFICATION	1.1786173734409206E-11	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.999999726172474	WITHOUT_CLASSIFICATION	2.738275259538914E-7	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.9999998937081113	WITHOUT_CLASSIFICATION	1.0629188876058995E-7	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.9999998481815032	WITHOUT_CLASSIFICATION	1.518184968271126E-7	DEFECT
// Obtain other dependent packages	WITHOUT_CLASSIFICATION	0.9999999926807401	WITHOUT_CLASSIFICATION	7.319259834361146E-9	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.9999993338928099	WITHOUT_CLASSIFICATION	6.661071901337388E-7	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.9999921779007461	WITHOUT_CLASSIFICATION	7.822099253932902E-6	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.9999998165471937	WITHOUT_CLASSIFICATION	1.834528063299559E-7	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.999999913714059	WITHOUT_CLASSIFICATION	8.628594096543401E-8	DEFECT
// Remember the file. //	WITHOUT_CLASSIFICATION	0.9999960871588464	WITHOUT_CLASSIFICATION	3.912841153660608E-6	DEFECT
// Do the work within an operation. //	WITHOUT_CLASSIFICATION	0.999981969513421	WITHOUT_CLASSIFICATION	1.8030486578983338E-5	DEFECT
// Create a resource set //	WITHOUT_CLASSIFICATION	0.9999999807836839	WITHOUT_CLASSIFICATION	1.921631604816211E-8	DEFECT
// Create a page, set the title, and the initial model file name. //	WITHOUT_CLASSIFICATION	0.9999999758975076	WITHOUT_CLASSIFICATION	2.410249242625252E-8	DEFECT
// Try and get the resource selection to determine a current directory for the file dialog. //	WITHOUT_CLASSIFICATION	0.9999999251646056	WITHOUT_CLASSIFICATION	7.483539440227245E-8	DEFECT
// Get the resource... //	WITHOUT_CLASSIFICATION	0.9999905510539585	WITHOUT_CLASSIFICATION	9.448946041486797E-6	DEFECT
// Get the resource parent, if its a file. //	WITHOUT_CLASSIFICATION	0.999999763815627	WITHOUT_CLASSIFICATION	2.361843729735805E-7	DEFECT
// This gives us a directory... //	WITHOUT_CLASSIFICATION	0.999869268301826	WITHOUT_CLASSIFICATION	1.307316981739351E-4	DEFECT
// Set this for the container. //	WITHOUT_CLASSIFICATION	0.9999970110488752	WITHOUT_CLASSIFICATION	2.9889511248633513E-6	DEFECT
// Make up a unique new name here. //	WITHOUT_CLASSIFICATION	0.9999507198729867	WITHOUT_CLASSIFICATION	4.9280127013261314E-5	DEFECT
// For a many-to-many association, the command can only be undoable if the value or owner is last in its // respective list, since the undo will include an inverse add.  So, if the value is last, but the owner is // not, we create an undoable compound command that removes from the opposite end and then inserts the new // value. //	WITHOUT_CLASSIFICATION	0.9999966506554665	WITHOUT_CLASSIFICATION	3.3493445334940454E-6	DEFECT
//Ecore2XMLPackage	WITHOUT_CLASSIFICATION	0.9999350759073946	WITHOUT_CLASSIFICATION	6.492409260536361E-5	DEFECT
//Ecore2XMLFactory	WITHOUT_CLASSIFICATION	0.9998997725489843	WITHOUT_CLASSIFICATION	1.00227451015626E-4	DEFECT
// XMLInfo	WITHOUT_CLASSIFICATION	0.9994304672539404	WITHOUT_CLASSIFICATION	5.695327460596101E-4	DEFECT
// XMLMap	WITHOUT_CLASSIFICATION	0.9998764270554699	WITHOUT_CLASSIFICATION	1.2357294453008025E-4	DEFECT
// missing attribute	WITHOUT_CLASSIFICATION	0.9999996935965799	WITHOUT_CLASSIFICATION	3.064034200417298E-7	DEFECT
// invalid element	WITHOUT_CLASSIFICATION	0.9999999503072492	WITHOUT_CLASSIFICATION	4.969275073213469E-8	DEFECT
//XMLMapImpl	WITHOUT_CLASSIFICATION	0.9999183473159914	WITHOUT_CLASSIFICATION	8.165268400865267E-5	DEFECT
//ENamedElementToXMLInfoMapEntryImpl	WITHOUT_CLASSIFICATION	0.9999883945415393	WITHOUT_CLASSIFICATION	1.1605458460815045E-5	DEFECT
//Ecore2XMLFactoryImpl	WITHOUT_CLASSIFICATION	0.9999035651516236	WITHOUT_CLASSIFICATION	9.643484837640722E-5	DEFECT
//Ecore2XMLPackageImpl	WITHOUT_CLASSIFICATION	0.9998782762689652	WITHOUT_CLASSIFICATION	1.2172373103487452E-4	DEFECT
//XMLInfoImpl	WITHOUT_CLASSIFICATION	0.9996452646704388	WITHOUT_CLASSIFICATION	3.547353295612949E-4	DEFECT
// Switch to the new selection provider. //	WITHOUT_CLASSIFICATION	0.9999860197404127	WITHOUT_CLASSIFICATION	1.398025958735914E-5	DEFECT
// Fake a selection changed event to update the menus. //	WITHOUT_CLASSIFICATION	0.9999974341564656	WITHOUT_CLASSIFICATION	2.5658435344230097E-6	DEFECT
// Open an editor on the new file. //	WITHOUT_CLASSIFICATION	0.999996639357416	WITHOUT_CLASSIFICATION	3.3606425840097315E-6	DEFECT
// Add the initial model object to the contents. //	WITHOUT_CLASSIFICATION	0.9999999931296989	WITHOUT_CLASSIFICATION	6.870301124202072E-9	DEFECT
// Save the contents of the resource to the file system. //	WITHOUT_CLASSIFICATION	0.9999988720733909	WITHOUT_CLASSIFICATION	1.1279266091547636E-6	DEFECT
// Select the new file resource in the current view. //	WITHOUT_CLASSIFICATION	0.9999979185043191	WITHOUT_CLASSIFICATION	2.081495680967081E-6	DEFECT
// Try and get the resource selection to determine a current directory for the file dialog. //	WITHOUT_CLASSIFICATION	0.9999999251646056	WITHOUT_CLASSIFICATION	7.483539440227245E-8	DEFECT
// Get the resource... //	WITHOUT_CLASSIFICATION	0.9999905510539585	WITHOUT_CLASSIFICATION	9.448946041486797E-6	DEFECT
// Get the resource parent, if its a file. //	WITHOUT_CLASSIFICATION	0.999999763815627	WITHOUT_CLASSIFICATION	2.361843729735805E-7	DEFECT
// This gives us a directory... //	WITHOUT_CLASSIFICATION	0.999869268301826	WITHOUT_CLASSIFICATION	1.307316981739351E-4	DEFECT
// Set this for the container. //	WITHOUT_CLASSIFICATION	0.9999970110488752	WITHOUT_CLASSIFICATION	2.9889511248633513E-6	DEFECT
// Force an update because Eclipse hides empty menus now. //	WITHOUT_CLASSIFICATION	0.9999999833317251	WITHOUT_CLASSIFICATION	1.66682748835605E-8	DEFECT
// Remove any menu items for old selection. //	WITHOUT_CLASSIFICATION	0.993650042419181	WITHOUT_CLASSIFICATION	0.006349957580818987	DEFECT
// Query the new selection for appropriate new child/sibling descriptors //	WITHOUT_CLASSIFICATION	0.9999785343443163	WITHOUT_CLASSIFICATION	2.1465655683705155E-5	DEFECT
// Initialize all the fields from the command parameter. //	WITHOUT_CLASSIFICATION	0.9999890971627066	WITHOUT_CLASSIFICATION	1.090283729344374E-5	DEFECT
// Initialize all the fields from the command parameter. //	WITHOUT_CLASSIFICATION	0.9999890971627066	WITHOUT_CLASSIFICATION	1.090283729344374E-5	DEFECT
// Initialize all the fields from the command parameter. //	WITHOUT_CLASSIFICATION	0.9999890971627066	WITHOUT_CLASSIFICATION	1.090283729344374E-5	DEFECT
// Initialize all the fields from the command parameter. //	WITHOUT_CLASSIFICATION	0.9999890971627066	WITHOUT_CLASSIFICATION	1.090283729344374E-5	DEFECT
// Initialize all the fields from the command parameter. //	WITHOUT_CLASSIFICATION	0.9999890971627066	WITHOUT_CLASSIFICATION	1.090283729344374E-5	DEFECT
// If the attribute is set, record it's old value. //	WITHOUT_CLASSIFICATION	0.9999877634058217	WITHOUT_CLASSIFICATION	1.2236594178260661E-5	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9999998760061326	WITHOUT_CLASSIFICATION	1.239938674237769E-7	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9999998760061326	WITHOUT_CLASSIFICATION	1.239938674237769E-7	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9999998760061326	WITHOUT_CLASSIFICATION	1.239938674237769E-7	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9999998760061326	WITHOUT_CLASSIFICATION	1.239938674237769E-7	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9999998760061326	WITHOUT_CLASSIFICATION	1.239938674237769E-7	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9999998760061326	WITHOUT_CLASSIFICATION	1.239938674237769E-7	DEFECT
// Create the copy //	WITHOUT_CLASSIFICATION	0.999999588621746	WITHOUT_CLASSIFICATION	4.113782539946156E-7	DEFECT
// EATM Leave this disabled for now. //	WITHOUT_CLASSIFICATION	0.9999818520964564	WITHOUT_CLASSIFICATION	1.8147903543683948E-5	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.999999933406692	WITHOUT_CLASSIFICATION	6.659330800494975E-8	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.999999933406692	WITHOUT_CLASSIFICATION	6.659330800494975E-8	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.999999933406692	WITHOUT_CLASSIFICATION	6.659330800494975E-8	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.999999933406692	WITHOUT_CLASSIFICATION	6.659330800494975E-8	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.999999933406692	WITHOUT_CLASSIFICATION	6.659330800494975E-8	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.999999933406692	WITHOUT_CLASSIFICATION	6.659330800494975E-8	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.999999933406692	WITHOUT_CLASSIFICATION	6.659330800494975E-8	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.999999933406692	WITHOUT_CLASSIFICATION	6.659330800494975E-8	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999986414502402	WITHOUT_CLASSIFICATION	1.3585497598851668E-6	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999986414502402	WITHOUT_CLASSIFICATION	1.3585497598851668E-6	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999986414502402	WITHOUT_CLASSIFICATION	1.3585497598851668E-6	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999986414502402	WITHOUT_CLASSIFICATION	1.3585497598851668E-6	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999986414502402	WITHOUT_CLASSIFICATION	1.3585497598851668E-6	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999986414502402	WITHOUT_CLASSIFICATION	1.3585497598851668E-6	DEFECT
// Set the range so that we re-check when we get into the other half. //	WITHOUT_CLASSIFICATION	0.9999990668960801	WITHOUT_CLASSIFICATION	9.33103920017867E-7	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999998063493674	WITHOUT_CLASSIFICATION	1.9365063276327167E-7	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999998063493674	WITHOUT_CLASSIFICATION	1.9365063276327167E-7	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999998063493674	WITHOUT_CLASSIFICATION	1.9365063276327167E-7	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999998063493674	WITHOUT_CLASSIFICATION	1.9365063276327167E-7	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999998063493674	WITHOUT_CLASSIFICATION	1.9365063276327167E-7	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999998063493674	WITHOUT_CLASSIFICATION	1.9365063276327167E-7	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999998063493674	WITHOUT_CLASSIFICATION	1.9365063276327167E-7	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999998063493674	WITHOUT_CLASSIFICATION	1.9365063276327167E-7	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999998063493674	WITHOUT_CLASSIFICATION	1.9365063276327167E-7	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999998063493674	WITHOUT_CLASSIFICATION	1.9365063276327167E-7	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999998063493674	WITHOUT_CLASSIFICATION	1.9365063276327167E-7	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999998063493674	WITHOUT_CLASSIFICATION	1.9365063276327167E-7	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999998063493674	WITHOUT_CLASSIFICATION	1.9365063276327167E-7	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999998063493674	WITHOUT_CLASSIFICATION	1.9365063276327167E-7	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999998063493674	WITHOUT_CLASSIFICATION	1.9365063276327167E-7	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999998063493674	WITHOUT_CLASSIFICATION	1.9365063276327167E-7	DEFECT
// If the location indicates after, add one more. //	WITHOUT_CLASSIFICATION	0.9999942596129121	WITHOUT_CLASSIFICATION	5.740387087796768E-6	DEFECT
// Empty extension to limit the effect of suppressing the deprecation warning.	WITHOUT_CLASSIFICATION	0.9999971928070777	WITHOUT_CLASSIFICATION	2.807192922309153E-6	DEFECT
// Empty extension to limit the effect of suppressing the deprecation warning.	WITHOUT_CLASSIFICATION	0.9999971928070777	WITHOUT_CLASSIFICATION	2.807192922309153E-6	DEFECT
// Empty extension to limit the effect of suppressing the deprecation warning.	WITHOUT_CLASSIFICATION	0.9999971928070777	WITHOUT_CLASSIFICATION	2.807192922309153E-6	DEFECT
// Try again. //	WITHOUT_CLASSIFICATION	0.999997060148579	WITHOUT_CLASSIFICATION	2.939851420942649E-6	DEFECT
// This is the name of the model. //	WITHOUT_CLASSIFICATION	0.9999567711113105	WITHOUT_CLASSIFICATION	4.3228888689404015E-5	DEFECT
// Create move commands for all the objects in the collection. //	WITHOUT_CLASSIFICATION	0.9998981312483904	WITHOUT_CLASSIFICATION	1.0186875160946712E-4	DEFECT
// Apply a redirection pattern, if specified. //	WITHOUT_CLASSIFICATION	0.9999338909157177	WITHOUT_CLASSIFICATION	6.610908428226026E-5	DEFECT
// Apply a redirection pattern, if specified. //	WITHOUT_CLASSIFICATION	0.9999338909157177	WITHOUT_CLASSIFICATION	6.610908428226026E-5	DEFECT
// Thread.dumpStack();	WITHOUT_CLASSIFICATION	0.9999997470508564	WITHOUT_CLASSIFICATION	2.529491436082816E-7	DEFECT
// Apply a redirection pattern, if specified. //	WITHOUT_CLASSIFICATION	0.9999338909157177	WITHOUT_CLASSIFICATION	6.610908428226026E-5	DEFECT
// Simply remove the object from the owner list. //	WITHOUT_CLASSIFICATION	0.9999960814757057	WITHOUT_CLASSIFICATION	3.918524294288321E-6	DEFECT
// Insert the collection at the right place. //	WITHOUT_CLASSIFICATION	0.9999579757009461	WITHOUT_CLASSIFICATION	4.202429905377026E-5	DEFECT
// We'd like the collection of replacements selected after this replace completes. //	WITHOUT_CLASSIFICATION	0.999989463904376	WITHOUT_CLASSIFICATION	1.0536095624008922E-5	DEFECT
/*   * All Eclipse-dependent operations are delegated to this class. This pattern avoids any runtime failure due to   * missing dependencies in the stand-alone case.   */	WITHOUT_CLASSIFICATION	0.9999986100663125	WITHOUT_CLASSIFICATION	1.3899336875009627E-6	DEFECT
/*   * All Eclipse-dependent operations are delegated to this class. This pattern avoids any runtime failure due to   * missing dependencies in the stand-alone case.   */	WITHOUT_CLASSIFICATION	0.9999986100663125	WITHOUT_CLASSIFICATION	1.3899336875009627E-6	DEFECT
// Initialization is deferred until adapters are attached to all the objects of interest and we're // about to ask them to generate. //	WITHOUT_CLASSIFICATION	0.9999998164773138	WITHOUT_CLASSIFICATION	1.835226862098337E-7	DEFECT
// Invoke generator adapters for each object. //	WITHOUT_CLASSIFICATION	0.9999947200962516	WITHOUT_CLASSIFICATION	5.279903748428107E-6	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.9999940348137776	WITHOUT_CLASSIFICATION	5.9651862224537796E-6	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.9999940348137776	WITHOUT_CLASSIFICATION	5.9651862224537796E-6	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.9999940348137776	WITHOUT_CLASSIFICATION	5.9651862224537796E-6	DEFECT
// Iterate over the owner list twice, first matching objects from the collection by identity (==), then matching // objects by value equality (.equals()). The positions of matched objects in the owner list are recorded, and // the objects are stored in the same order. The lists are then merged to form a final, in-order list of objects // and corresponding indices in ownerList. This is very important for undo to interpret the indices correctly. // Also, this yields exactly one object removed for each object in the collection, with preference given to // identity over value equality. //	WITHOUT_CLASSIFICATION	0.999756955901473	WITHOUT_CLASSIFICATION	2.430440985269317E-4	DEFECT
// callers that plan to use this name without appending a suffix should call f.safeName(f.getName()) to make sure its not a keyword // this is a safe guaranteed uncapitalized form of the name // the safe name and cast to EObject, if necessary.	WITHOUT_CLASSIFICATION	0.9999948696529456	WITHOUT_CLASSIFICATION	5.130347054342654E-6	DEFECT
// Add any remaining object-index pairs from either set. //	WITHOUT_CLASSIFICATION	0.9999938913741986	WITHOUT_CLASSIFICATION	6.1086258013908745E-6	DEFECT
// For CreateChildCommand, we will find the owner by calling EditingDomain.getParent() on the first selected object	WITHOUT_CLASSIFICATION	0.999999906794296	WITHOUT_CLASSIFICATION	9.320570401415042E-8	DEFECT
// This guards the switch. //	WITHOUT_CLASSIFICATION	0.9999984123356699	WITHOUT_CLASSIFICATION	1.5876643300747615E-6	DEFECT
// A set command without a feature sets the value of this wrapper, hence replacing it with a new wrapper. So, // we need a special command wrapper that selects this new wrapper as the affected object. //	WITHOUT_CLASSIFICATION	0.9999862917125658	WITHOUT_CLASSIFICATION	1.370828743425054E-5	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999993619953522	WITHOUT_CLASSIFICATION	6.380046476645285E-7	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999993619953522	WITHOUT_CLASSIFICATION	6.380046476645285E-7	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999993619953522	WITHOUT_CLASSIFICATION	6.380046476645285E-7	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999993619953522	WITHOUT_CLASSIFICATION	6.380046476645285E-7	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999993619953522	WITHOUT_CLASSIFICATION	6.380046476645285E-7	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999993619953522	WITHOUT_CLASSIFICATION	6.380046476645285E-7	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999993619953522	WITHOUT_CLASSIFICATION	6.380046476645285E-7	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999993619953522	WITHOUT_CLASSIFICATION	6.380046476645285E-7	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999993619953522	WITHOUT_CLASSIFICATION	6.380046476645285E-7	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999993619953522	WITHOUT_CLASSIFICATION	6.380046476645285E-7	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999993619953522	WITHOUT_CLASSIFICATION	6.380046476645285E-7	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999993619953522	WITHOUT_CLASSIFICATION	6.380046476645285E-7	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999993619953522	WITHOUT_CLASSIFICATION	6.380046476645285E-7	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999993619953522	WITHOUT_CLASSIFICATION	6.380046476645285E-7	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999993619953522	WITHOUT_CLASSIFICATION	6.380046476645285E-7	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999993619953522	WITHOUT_CLASSIFICATION	6.380046476645285E-7	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999993619953522	WITHOUT_CLASSIFICATION	6.380046476645285E-7	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$	WITHOUT_CLASSIFICATION	0.9999744017220922	WITHOUT_CLASSIFICATION	2.5598277907838138E-5	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999993619953522	WITHOUT_CLASSIFICATION	6.380046476645285E-7	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.999998313303692	WITHOUT_CLASSIFICATION	1.6866963079793905E-6	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.999998313303692	WITHOUT_CLASSIFICATION	1.6866963079793905E-6	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$	WITHOUT_CLASSIFICATION	0.9999744017220922	WITHOUT_CLASSIFICATION	2.5598277907838138E-5	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999773853292637	WITHOUT_CLASSIFICATION	2.261467073633039E-5	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9999894881046154	WITHOUT_CLASSIFICATION	1.0511895384633356E-5	DEFECT
// Create a page, set the title, and the initial model file name. // //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9999999705797878	WITHOUT_CLASSIFICATION	2.942021207151225E-8	DEFECT
// Prepare for CreateChild item addition or removal. // //$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999869658231068	WITHOUT_CLASSIFICATION	1.303417689321902E-5	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.999974171561369	WITHOUT_CLASSIFICATION	2.5828438630977826E-5	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.999998313303692	WITHOUT_CLASSIFICATION	1.6866963079793905E-6	DEFECT
// Make up a unique new name here. // //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999705804219744	WITHOUT_CLASSIFICATION	2.941957802547772E-5	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999773853292637	WITHOUT_CLASSIFICATION	2.261467073633039E-5	DEFECT
// Prepare for CreateSibling item addition or removal. // //$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.99994872319241	WITHOUT_CLASSIFICATION	5.127680758999989E-5	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.999998313303692	WITHOUT_CLASSIFICATION	1.6866963079793905E-6	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.999998313303692	WITHOUT_CLASSIFICATION	1.6866963079793905E-6	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.999998313303692	WITHOUT_CLASSIFICATION	1.6866963079793905E-6	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999997038033935	WITHOUT_CLASSIFICATION	2.961966065547326E-7	DEFECT
// Either the IEditingDomainItemProvider or ITreeItemContentProvider item provider interface can give us // the children. //	WITHOUT_CLASSIFICATION	0.9999913788574214	WITHOUT_CLASSIFICATION	8.621142578664147E-6	DEFECT
// These will be the children belonging to this feature. //	WITHOUT_CLASSIFICATION	0.9999820580612924	WITHOUT_CLASSIFICATION	1.794193870759322E-5	DEFECT
// These will be the children belonging to this feature. //	WITHOUT_CLASSIFICATION	0.9999820580612924	WITHOUT_CLASSIFICATION	1.794193870759322E-5	DEFECT
// The try/catch provides backwards compatibility with the old resource // key, "_UI_CreateChild_label", and should be removed at the next // release, when we can expect users to regenerate. //	WITHOUT_CLASSIFICATION	0.9999987964927023	WITHOUT_CLASSIFICATION	1.2035072977662786E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999996496589197	WITHOUT_CLASSIFICATION	3.5034108028605753E-7	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.ecore.util.ExtendedMetaData#getName(org.eclipse.emf.ecore.EClassifier)   */	WITHOUT_CLASSIFICATION	0.9999999999970551	WITHOUT_CLASSIFICATION	2.9447542986299373E-12	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.ecore.util.ExtendedMetaData#getName(org.eclipse.emf.ecore.EStructuralFeature)   */	WITHOUT_CLASSIFICATION	0.999999999991977	WITHOUT_CLASSIFICATION	8.023071759132749E-12	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.ecore.util.ExtendedMetaData#getNamespace(org.eclipse.emf.ecore.EPackage)   */	WITHOUT_CLASSIFICATION	0.9999999999447404	WITHOUT_CLASSIFICATION	5.5259681603043536E-11	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.ecore.util.ExtendedMetaData#getType(org.eclipse.emf.ecore.EPackage,   *      java.lang.String)   */	WITHOUT_CLASSIFICATION	0.9999999999528045	WITHOUT_CLASSIFICATION	4.719543442279741E-11	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.ecore.util.ExtendedMetaData#getFeatureKind(org.eclipse.emf.ecore.EStructuralFeature)   */	WITHOUT_CLASSIFICATION	0.9999999999897822	WITHOUT_CLASSIFICATION	1.0217920692430596E-11	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.ecore.util.BasicExtendedMetaData#isFeatureKindSpecific()   */	WITHOUT_CLASSIFICATION	0.9999999999760528	WITHOUT_CLASSIFICATION	2.394721462612377E-11	DEFECT
/** * <!-- begin-user-doc --> * The <b>Adapter Factory</b> for the model. * It provides an adapter <code>createXXX</code> method for each class of the model. * <!-- end-user-doc --> * @see org.eclipse.emf.mapping.ecore2xml.Ecore2XMLPackage * @generated */	WITHOUT_CLASSIFICATION	0.9999996121025775	WITHOUT_CLASSIFICATION	3.8789742253131655E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999996496589197	WITHOUT_CLASSIFICATION	3.5034108028605753E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999996496589197	WITHOUT_CLASSIFICATION	3.5034108028605753E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999996496589197	WITHOUT_CLASSIFICATION	3.5034108028605753E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999996496589197	WITHOUT_CLASSIFICATION	3.5034108028605753E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999996496589197	WITHOUT_CLASSIFICATION	3.5034108028605753E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999996496589197	WITHOUT_CLASSIFICATION	3.5034108028605753E-7	DEFECT
/** * <!-- begin-user-doc --> * The <b>Switch</b> for the model's inheritance hierarchy. * It supports the call {@link #doSwitch(EObject) doSwitch(object)} * to invoke the <code>caseXXX</code> method for each class of the model, * starting with the actual class of the object * and proceeding up the inheritance hierarchy * until a non-null result is returned, * which is the result of the switch. * <!-- end-user-doc --> * @see org.eclipse.emf.mapping.ecore2xml.Ecore2XMLPackage * @generated */	WITHOUT_CLASSIFICATION	0.9999999964919754	WITHOUT_CLASSIFICATION	3.5080245761623665E-9	DEFECT
/** * <!-- begin-user-doc --> * The <b>Adapter Factory</b> for the model. * It provides an adapter <code>createXXX</code> method for each class of the model. * <!-- end-user-doc --> * @see org.eclipse.emf.mapping.MappingPackage * @generated */	WITHOUT_CLASSIFICATION	0.9999999425128256	WITHOUT_CLASSIFICATION	5.7487174333437914E-8	DEFECT
/** * <!-- begin-user-doc --> * The <b>Switch</b> for the model's inheritance hierarchy. * It supports the call {@link #doSwitch(EObject) doSwitch(object)}  * to invoke the <code>caseXXX</code> method for each class of the model, * starting with the actual class of the object  * and proceeding up the inheritance hierarchy * until a non-null result is returned,  * which is the result of the switch. * <!-- end-user-doc --> * @see org.eclipse.emf.mapping.MappingPackage * @generated */	WITHOUT_CLASSIFICATION	0.999999999702618	WITHOUT_CLASSIFICATION	2.973819379496435E-10	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.XMLResource#load(org.w3c.dom.Node, java.util.Map)   */	WITHOUT_CLASSIFICATION	0.9999999992435672	WITHOUT_CLASSIFICATION	7.564328002186215E-10	DEFECT
/** * <!-- begin-user-doc --> * The <b>Switch</b> for the model's inheritance hierarchy. * It supports the call {@link #doSwitch(EObject) doSwitch(object)}  * to invoke the <code>caseXXX</code> method for each class of the model, * starting with the actual class of the object  * and proceeding up the inheritance hierarchy * until a non-null result is returned,  * which is the result of the switch. * <!-- end-user-doc --> * @see org.eclipse.emf.codegen.ecore.genmodel.GenModelPackage * @generated */	WITHOUT_CLASSIFICATION	0.9999999997671596	WITHOUT_CLASSIFICATION	2.3284032706172224E-10	DEFECT
/** * <!-- begin-user-doc --> * The <b>Adapter Factory</b> for the model. * It provides an adapter <code>createXXX</code> method for each class of the model. * <!-- end-user-doc --> * @see org.eclipse.emf.codegen.ecore.genmodel.GenModelPackage * @generated */	WITHOUT_CLASSIFICATION	0.9999999622582617	WITHOUT_CLASSIFICATION	3.774173837211797E-8	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode#insertSibling(org.eclipse.emf.codegen.merge.java.facade.JNode, org.eclipse.emf.codegen.merge.java.facade.JNode, boolean)   */	WITHOUT_CLASSIFICATION	0.9999999999954321	WITHOUT_CLASSIFICATION	4.567910471835266E-12	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJAbstractType#insertSibling(org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode, org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode, boolean)   */	WITHOUT_CLASSIFICATION	0.9999999999954146	WITHOUT_CLASSIFICATION	4.585423743221743E-12	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJAbstractType#addChild(org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode)   */	WITHOUT_CLASSIFICATION	0.9999999999812129	WITHOUT_CLASSIFICATION	1.878701414208997E-11	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJAbstractType#remove(org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode)   */	WITHOUT_CLASSIFICATION	0.9999999998926429	WITHOUT_CLASSIFICATION	1.0735709101553003E-10	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJAbstractType#getChildren()   */	WITHOUT_CLASSIFICATION	0.999999999975728	WITHOUT_CLASSIFICATION	2.427198063211779E-11	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.AbstractJNode#computeQualifiedName()   */	WITHOUT_CLASSIFICATION	0.9999999999995594	WITHOUT_CLASSIFICATION	4.4064440569121955E-13	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode#addChild(org.eclipse.emf.codegen.merge.java.facade.JNode)   */	WITHOUT_CLASSIFICATION	0.9999999999753372	WITHOUT_CLASSIFICATION	2.466280198948653E-11	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode#insertSibling(org.eclipse.emf.codegen.merge.java.facade.JNode, org.eclipse.emf.codegen.merge.java.facade.JNode, boolean)   */	WITHOUT_CLASSIFICATION	0.9999999999954321	WITHOUT_CLASSIFICATION	4.567910471835266E-12	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode#remove(org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode)   */	WITHOUT_CLASSIFICATION	0.9999999998574433	WITHOUT_CLASSIFICATION	1.4255672002539984E-10	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode#insertSibling(org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode, org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode, boolean)   */	WITHOUT_CLASSIFICATION	0.9999999999953795	WITHOUT_CLASSIFICATION	4.620509727438271E-12	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode#addChild(org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode)   */	WITHOUT_CLASSIFICATION	0.9999999999750532	WITHOUT_CLASSIFICATION	2.4946792893796865E-11	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.AbstractJNode#getChildren()   */	WITHOUT_CLASSIFICATION	0.9999999999864589	WITHOUT_CLASSIFICATION	1.3541043288547882E-11	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.FacadeHelper#createCompilationUnit(java.lang.String, java.lang.String)   */	WITHOUT_CLASSIFICATION	0.999999999988522	WITHOUT_CLASSIFICATION	1.1478117295260981E-11	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.FacadeHelper#getContext(org.eclipse.emf.codegen.merge.java.facade.JNode)   */	WITHOUT_CLASSIFICATION	0.9999999998463809	WITHOUT_CLASSIFICATION	1.5361913303118038E-10	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.FacadeHelper#doConvertToNode(java.lang.Object)   */	WITHOUT_CLASSIFICATION	0.9999999999815815	WITHOUT_CLASSIFICATION	1.8418481609398997E-11	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.FacadeHelper#addChild(org.eclipse.emf.codegen.merge.java.facade.JNode, org.eclipse.emf.codegen.merge.java.facade.JNode)   */	WITHOUT_CLASSIFICATION	0.9999999999424858	WITHOUT_CLASSIFICATION	5.751414156315276E-11	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.FacadeHelper#insertSibling(org.eclipse.emf.codegen.merge.java.facade.JNode, org.eclipse.emf.codegen.merge.java.facade.JNode, boolean)   */	WITHOUT_CLASSIFICATION	0.9999999999839517	WITHOUT_CLASSIFICATION	1.604829436705968E-11	DEFECT
// append [] if it is variable arity parameter (@see JLS3 8.4.1, http://java.sun.com/docs/books/jls/third_edition/html/classes.html#300870)	WITHOUT_CLASSIFICATION	0.9999981816998458	WITHOUT_CLASSIFICATION	1.8183001541833502E-6	DEFECT
// append [] if it is variable arity parameter (@see JLS3 8.4.1, http://java.sun.com/docs/books/jls/third_edition/html/classes.html#300870)	WITHOUT_CLASSIFICATION	0.9999981816998458	WITHOUT_CLASSIFICATION	1.8183001541833502E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.AbstractJNode#computeQualifiedName()   */	WITHOUT_CLASSIFICATION	0.9999999999995594	WITHOUT_CLASSIFICATION	4.4064440569121955E-13	DEFECT
/* (non-Javadoc)   * @see org.eclipse.ui.IWorkbenchWindowActionDelegate#init(org.eclipse.ui.IWorkbenchWindow)   */	WITHOUT_CLASSIFICATION	0.9999999999313298	WITHOUT_CLASSIFICATION	6.867015390306542E-11	DEFECT
/* (non-Javadoc)   * @see org.eclipse.ui.IActionDelegate#selectionChanged(org.eclipse.jface.action.IAction, org.eclipse.jface.viewers.ISelection)   */	WITHOUT_CLASSIFICATION	0.9999999999987064	WITHOUT_CLASSIFICATION	1.293732016626532E-12	DEFECT
/* (non-Javadoc)   * @see org.eclipse.ui.IWorkbenchWindowActionDelegate#dispose()   */	WITHOUT_CLASSIFICATION	0.9999999998421274	WITHOUT_CLASSIFICATION	1.5787256514119107E-10	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.jface.window.Window#close()   */	WITHOUT_CLASSIFICATION	0.9999999999082051	WITHOUT_CLASSIFICATION	9.179478461914395E-11	DEFECT
/** * <!-- begin-user-doc --> * The <b>Switch</b> for the model's inheritance hierarchy. * It supports the call {@link #doSwitch(EObject) doSwitch(object)} * to invoke the <code>caseXXX</code> method for each class of the model, * starting with the actual class of the object * and proceeding up the inheritance hierarchy * until a non-null result is returned, * which is the result of the switch. * <!-- end-user-doc --> * @see org.eclipse.emf.ecore.change.ChangePackage * @generated */	WITHOUT_CLASSIFICATION	0.9999999999341155	WITHOUT_CLASSIFICATION	6.588457758287279E-11	DEFECT
/** * <!-- begin-user-doc --> * The <b>Adapter Factory</b> for the model. * It provides an adapter <code>createXXX</code> method for each class of the model. * <!-- end-user-doc --> * @see org.eclipse.emf.ecore.change.ChangePackage * @generated */	WITHOUT_CLASSIFICATION	0.9999999919142049	WITHOUT_CLASSIFICATION	8.085795029248458E-9	DEFECT
/*    * @see org.eclipse.emf.ecore.EObject#eIsProxy()   */	WITHOUT_CLASSIFICATION	0.9999999254281595	WITHOUT_CLASSIFICATION	7.457184049942696E-8	DEFECT
/*    * @see org.eclipse.emf.ecore.InternalEObject#eSetProxyURI(org.eclipse.emf.common.util.URI)   */	WITHOUT_CLASSIFICATION	0.9999999775475122	WITHOUT_CLASSIFICATION	2.2452487664473E-8	DEFECT
/** * <!-- begin-user-doc --> * The <b>Switch</b> for the model's inheritance hierarchy. * It supports the call {@link #doSwitch(EObject) doSwitch(object)}  * to invoke the <code>caseXXX</code> method for each class of the model, * starting with the actual class of the object  * and proceeding up the inheritance hierarchy * until a non-null result is returned,  * which is the result of the switch. * <!-- end-user-doc --> * @see org.eclipse.emf.ecore.EcorePackage * @generated */	WITHOUT_CLASSIFICATION	0.9999999996375648	WITHOUT_CLASSIFICATION	3.624351410611519E-10	DEFECT
/** * <!-- begin-user-doc --> * The <b>Adapter Factory</b> for the model. * It provides an adapter <code>createXXX</code> method for each class of the model. * <!-- end-user-doc --> * @see org.eclipse.emf.ecore.EcorePackage * @generated */	WITHOUT_CLASSIFICATION	0.9999999512645251	WITHOUT_CLASSIFICATION	4.873547493183114E-8	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.XMLLoad#load(org.eclipse.emf.ecore.xmi.XMLResource, org.w3c.dom.Node, java.util.Map)   */	WITHOUT_CLASSIFICATION	0.9999999993924508	WITHOUT_CLASSIFICATION	6.075492251836952E-10	DEFECT
/** * <!-- begin-user-doc --> * The <b>Adapter Factory</b> for the model. * It provides an adapter <code>createXXX</code> method for each class of the model. * <!-- end-user-doc --> * @see org.eclipse.emf.edit.tree.TreePackage * @generated */	WITHOUT_CLASSIFICATION	0.9999999225127566	WITHOUT_CLASSIFICATION	7.748724334955847E-8	DEFECT
/** * <!-- begin-user-doc --> * The <b>Switch</b> for the model's inheritance hierarchy. * It supports the call {@link #doSwitch(EObject) doSwitch(object)}  * to invoke the <code>caseXXX</code> method for each class of the model, * starting with the actual class of the object  * and proceeding up the inheritance hierarchy * until a non-null result is returned,  * which is the result of the switch. * <!-- end-user-doc --> * @see org.eclipse.emf.edit.tree.TreePackage * @generated */	WITHOUT_CLASSIFICATION	0.9999999997137355	WITHOUT_CLASSIFICATION	2.8626441798526446E-10	DEFECT
/*     * (non-Javadoc)     *      * @see org.eclipse.jface.dialogs.Dialog#createButtonsForButtonBar(org.eclipse.swt.widgets.Composite)     */	WITHOUT_CLASSIFICATION	0.9999999999934797	WITHOUT_CLASSIFICATION	6.520335687677464E-12	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.ui.IActionDelegate#run(org.eclipse.jface.action.IAction)   */	WITHOUT_CLASSIFICATION	0.9999999999882139	WITHOUT_CLASSIFICATION	1.1786173734409206E-11	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.ui.IActionDelegate#selectionChanged(org.eclipse.jface.action.IAction,   *      org.eclipse.jface.viewers.ISelection)   */	WITHOUT_CLASSIFICATION	0.9999999999995203	WITHOUT_CLASSIFICATION	4.797673863162221E-13	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.mapping.MappingRoot#canCreateMapping(java.util.Collection, java.util.Collection, org.eclipse.emf.mapping.Mapping)   */	WITHOUT_CLASSIFICATION	0.9999999999501107	WITHOUT_CLASSIFICATION	4.988927053451415E-11	DEFECT
/** * <!-- begin-user-doc --> * The <b>Adapter Factory</b> for the model. * It provides an adapter <code>createXXX</code> method for each class of the model. * <!-- end-user-doc --> * @see org.eclipse.emf.mapping.ecore2ecore.Ecore2EcorePackage * @generated */	WITHOUT_CLASSIFICATION	0.9999997996668157	WITHOUT_CLASSIFICATION	2.0033318424323073E-7	DEFECT
/** * <!-- begin-user-doc --> * The <b>Switch</b> for the model's inheritance hierarchy. * It supports the call {@link #doSwitch(EObject) doSwitch(object)} * to invoke the <code>caseXXX</code> method for each class of the model, * starting with the actual class of the object * and proceeding up the inheritance hierarchy * until a non-null result is returned, * which is the result of the switch. * <!-- end-user-doc --> * @see org.eclipse.emf.mapping.ecore2ecore.Ecore2EcorePackage * @generated */	WITHOUT_CLASSIFICATION	0.9999999981424355	WITHOUT_CLASSIFICATION	1.8575645871092518E-9	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.ui.IActionDelegate#selectionChanged(org.eclipse.jface.action.IAction,   *      org.eclipse.jface.viewers.ISelection)   */	WITHOUT_CLASSIFICATION	0.9999999999995203	WITHOUT_CLASSIFICATION	4.797673863162221E-13	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.XMLResource.XMLMap#add(org.eclipse.emf.ecore.ENamedElement, org.eclipse.emf.ecore.xmi.XMLResource.XMLInfo)   */	WITHOUT_CLASSIFICATION	0.9999999986814856	WITHOUT_CLASSIFICATION	1.3185144194654946E-9	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.XMLResource.XMLMap#getClassifier(java.lang.String, java.lang.String)   */	WITHOUT_CLASSIFICATION	0.999999999840622	WITHOUT_CLASSIFICATION	1.5937784262849507E-10	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.XMLResource.XMLMap#getFeature(org.eclipse.emf.ecore.EClass, java.lang.String, java.lang.String)   */	WITHOUT_CLASSIFICATION	0.9999999997185731	WITHOUT_CLASSIFICATION	2.814267892442782E-10	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.XMLResource.XMLMap#getFeatures(org.eclipse.emf.ecore.EClass)   */	WITHOUT_CLASSIFICATION	0.999999998925757	WITHOUT_CLASSIFICATION	1.0742430334842984E-9	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.XMLResource.XMLMap#getInfo(org.eclipse.emf.ecore.ENamedElement)   */	WITHOUT_CLASSIFICATION	0.999999998192283	WITHOUT_CLASSIFICATION	1.8077169889676702E-9	DEFECT
//	WITHOUT_CLASSIFICATION	0.999972177117672	WITHOUT_CLASSIFICATION	2.7822882328083235E-5	DEFECT
//	WITHOUT_CLASSIFICATION	0.999972177117672	WITHOUT_CLASSIFICATION	2.7822882328083235E-5	DEFECT
//	WITHOUT_CLASSIFICATION	0.999972177117672	WITHOUT_CLASSIFICATION	2.7822882328083235E-5	DEFECT
//	WITHOUT_CLASSIFICATION	0.999972177117672	WITHOUT_CLASSIFICATION	2.7822882328083235E-5	DEFECT
//	WITHOUT_CLASSIFICATION	0.999972177117672	WITHOUT_CLASSIFICATION	2.7822882328083235E-5	DEFECT
//	WITHOUT_CLASSIFICATION	0.999972177117672	WITHOUT_CLASSIFICATION	2.7822882328083235E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999996061833671	WITHOUT_CLASSIFICATION	3.938166328746333E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999996061833671	WITHOUT_CLASSIFICATION	3.938166328746333E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999996061833671	WITHOUT_CLASSIFICATION	3.938166328746333E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999996061833671	WITHOUT_CLASSIFICATION	3.938166328746333E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999996061833671	WITHOUT_CLASSIFICATION	3.938166328746333E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999996061833671	WITHOUT_CLASSIFICATION	3.938166328746333E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999996061833671	WITHOUT_CLASSIFICATION	3.938166328746333E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999996061833671	WITHOUT_CLASSIFICATION	3.938166328746333E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999996061833671	WITHOUT_CLASSIFICATION	3.938166328746333E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999996061833671	WITHOUT_CLASSIFICATION	3.938166328746333E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999996061833671	WITHOUT_CLASSIFICATION	3.938166328746333E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999996061833671	WITHOUT_CLASSIFICATION	3.938166328746333E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999996061833671	WITHOUT_CLASSIFICATION	3.938166328746333E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999996061833671	WITHOUT_CLASSIFICATION	3.938166328746333E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999996061833671	WITHOUT_CLASSIFICATION	3.938166328746333E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999996061833671	WITHOUT_CLASSIFICATION	3.938166328746333E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999996061833671	WITHOUT_CLASSIFICATION	3.938166328746333E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999996061833671	WITHOUT_CLASSIFICATION	3.938166328746333E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999996061833671	WITHOUT_CLASSIFICATION	3.938166328746333E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999996061833671	WITHOUT_CLASSIFICATION	3.938166328746333E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999996061833671	WITHOUT_CLASSIFICATION	3.938166328746333E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999996061833671	WITHOUT_CLASSIFICATION	3.938166328746333E-7	DEFECT
// Attribute	WITHOUT_CLASSIFICATION	0.9999994188949178	WITHOUT_CLASSIFICATION	5.811050821126364E-7	DEFECT
// If the workbench part changes... //	WITHOUT_CLASSIFICATION	0.9998548807935409	WITHOUT_CLASSIFICATION	1.4511920645905268E-4	DEFECT
// Discard the old editing domain. //	WITHOUT_CLASSIFICATION	0.9999983678164017	WITHOUT_CLASSIFICATION	1.6321835983340419E-6	DEFECT
// Convert the selection to a collection of the selected objects. //	WITHOUT_CLASSIFICATION	0.999999992904352	WITHOUT_CLASSIFICATION	7.09564797102218E-9	DEFECT
// This returns a name like employeeNumber formatted like 'Employee Number' // This returns the same as getCapName unless it starts with "is" in which case the "is" is stripped  // This returns the name to be used in accessor method names; it's the same as getCapName, unless this is the key or value of a map entry, for which "Typed" is prepended // This returns the name of the get array-based accessor method for the list feature. // This returns the name of the get accessor method for the feature, i.e., either "is" or "get" is prefixed to getAccessorName	WITHOUT_CLASSIFICATION	0.9999993714510896	WITHOUT_CLASSIFICATION	6.285489102952364E-7	DEFECT
// This is for backwards compatibility, since the constructor may have been overridden before it was expected // to set actionDelegate. //	WITHOUT_CLASSIFICATION	0.9999999973518532	WITHOUT_CLASSIFICATION	2.6481467731840933E-9	DEFECT
// this returns either "EAttribute" or "EReference"	WITHOUT_CLASSIFICATION	0.9999971305743743	WITHOUT_CLASSIFICATION	2.8694256255800584E-6	DEFECT
// this guard is for extra security, but should not be necessary	WITHOUT_CLASSIFICATION	0.9980849569152729	WITHOUT_CLASSIFICATION	0.0019150430847270693	DEFECT
// // EMF.Edit generation //	WITHOUT_CLASSIFICATION	0.9999944529760217	WITHOUT_CLASSIFICATION	5.547023978248416E-6	DEFECT
// We can create the RemoveCommand for an uncontrol, but we must defer creating an AddCommand // to control until run(), when the user specifies a target resource. //	WITHOUT_CLASSIFICATION	0.9999999523108436	WITHOUT_CLASSIFICATION	4.76891563850023E-8	DEFECT
//  Remove any non-Java dependencies from being added. //	WITHOUT_CLASSIFICATION	0.9999240820637249	WITHOUT_CLASSIFICATION	7.591793627514697E-5	DEFECT
// Get extra icon and bounds for first column of ExtendedTableTreeItem. //	WITHOUT_CLASSIFICATION	0.9999999849319264	WITHOUT_CLASSIFICATION	1.5068073564207852E-8	DEFECT
/*   * Computes the default path for the given GenModel. This was previously the implementation of getTemplatePath().   */	WITHOUT_CLASSIFICATION	0.9999989893842819	WITHOUT_CLASSIFICATION	1.010615718125838E-6	DEFECT
// Clean up the command if there is one.  If we need it again in drop, // we'll recreate it from dragAndDropCommandInformation. //	WITHOUT_CLASSIFICATION	0.9999999620901515	WITHOUT_CLASSIFICATION	3.790984841347038E-8	DEFECT
// Compute a map of resource location URIs to logical namespace URIs // so that cross references will be resolved via package registry when deserialized.  //	WITHOUT_CLASSIFICATION	0.9999997896745859	WITHOUT_CLASSIFICATION	2.103254140299611E-7	DEFECT
// We'll need to keep track of the information we use to create the // command, so that we can recreate it in drop.	WITHOUT_CLASSIFICATION	0.9999997478297049	WITHOUT_CLASSIFICATION	2.521702950485335E-7	DEFECT
// Do allow an existing MANIFEST.MF to be overwritten, since it may have been created as part of an empty EMF project. // Use the existence of a plugin.xml as a guard against overwriting in a project that has already been generated. //	WITHOUT_CLASSIFICATION	0.9999999734799023	WITHOUT_CLASSIFICATION	2.65200977050381E-8	DEFECT
// Do allow an existing MANIFEST.MF to be overwritten, since it may have been created as part of an empty EMF project. // Use the existence of a plugin.xml as a guard against overwriting in a project that has already been generated. //	WITHOUT_CLASSIFICATION	0.9999999734799023	WITHOUT_CLASSIFICATION	2.65200977050381E-8	DEFECT
// Do allow an existing MANIFEST.MF to be overwritten, since it may have been created as part of an empty EMF project. // Use the existence of a plugin.xml as a guard against overwriting in a project that has already been generated. //	WITHOUT_CLASSIFICATION	0.9999999734799023	WITHOUT_CLASSIFICATION	2.65200977050381E-8	DEFECT
/*     * (non-Javadoc) Method declared on Dialog.     */	WITHOUT_CLASSIFICATION	0.9999999679868935	WITHOUT_CLASSIFICATION	3.201310644380439E-8	DEFECT
// Do allow an existing build.properties to be overwritten, since it may have been created as part of an empty EMF project. // Use the existence of a plugin.xml as a guard against overwriting in a project that has already been generated. //	WITHOUT_CLASSIFICATION	0.9999998759228416	WITHOUT_CLASSIFICATION	1.240771584661691E-7	DEFECT
/*        text = new Text(composite, SWT.SINGLE | SWT.BORDER);        text.setLayoutData(new GridData(GridData.GRAB_HORIZONTAL                | GridData.HORIZONTAL_ALIGN_FILL));*/	WITHOUT_CLASSIFICATION	0.9999998467475785	WITHOUT_CLASSIFICATION	1.5325242147953129E-7	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.9999999766383213	WITHOUT_CLASSIFICATION	2.3361678751851995E-8	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.9999999766383213	WITHOUT_CLASSIFICATION	2.3361678751851995E-8	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.9999999766383213	WITHOUT_CLASSIFICATION	2.3361678751851995E-8	DEFECT
// CellEditor.setValue() calls isCorrect() to validate the value that is about to be set. We are doing conversion // between the value and a corresponding string, and we would usually like to validate the string. Because // setValue() is final, we cannot do that conversion there, so we need to record what we're trying to validate and // work around the problem in isCorrect(). // 	WITHOUT_CLASSIFICATION	0.9777964416022562	WITHOUT_CLASSIFICATION	0.022203558397743843	DEFECT
// Initialize simple dependencies	WITHOUT_CLASSIFICATION	0.9999998627377243	WITHOUT_CLASSIFICATION	1.372622756233283E-7	DEFECT
// The referencedEPackages list is used to track the packages for // which is necessary to create the stub GenModel.  So if the ePackage // is referenced by an existing GenPackage, it doesn't need to be added to // referencedEPackages.	WITHOUT_CLASSIFICATION	0.9999999985991782	WITHOUT_CLASSIFICATION	1.4008218101666191E-9	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.9999990161470182	WITHOUT_CLASSIFICATION	9.83852981794225E-7	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.9999990161470182	WITHOUT_CLASSIFICATION	9.83852981794225E-7	DEFECT
// Determine the required plugins. //	WITHOUT_CLASSIFICATION	0.999916999052145	WITHOUT_CLASSIFICATION	8.300094785507463E-5	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.9999998510045144	WITHOUT_CLASSIFICATION	1.4899548560704843E-7	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.9999998510045144	WITHOUT_CLASSIFICATION	1.4899548560704843E-7	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.9999998510045144	WITHOUT_CLASSIFICATION	1.4899548560704843E-7	DEFECT
// Include each required plugin of the starting project and the exported ones of all the required projects. //	WITHOUT_CLASSIFICATION	0.9983753994326601	WITHOUT_CLASSIFICATION	0.0016246005673399798	DEFECT
// Register package validator	WITHOUT_CLASSIFICATION	0.9999997793676317	WITHOUT_CLASSIFICATION	2.206323681470119E-7	DEFECT
// Determine the inverse map from plugin IDs to their registered GenModel locations. //	WITHOUT_CLASSIFICATION	0.9999998910989947	WITHOUT_CLASSIFICATION	1.0890100528832903E-7	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$	WITHOUT_CLASSIFICATION	0.9999744017220922	WITHOUT_CLASSIFICATION	2.5598277907838138E-5	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$	WITHOUT_CLASSIFICATION	0.9999744017220922	WITHOUT_CLASSIFICATION	2.5598277907838138E-5	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9999718831292177	WITHOUT_CLASSIFICATION	2.811687078229608E-5	DEFECT
// Mark meta-data to indicate it can't be changed	WITHOUT_CLASSIFICATION	0.999996839412632	WITHOUT_CLASSIFICATION	3.1605873680022317E-6	DEFECT
// Mark meta-data to indicate it can't be changed	WITHOUT_CLASSIFICATION	0.999996839412632	WITHOUT_CLASSIFICATION	3.1605873680022317E-6	DEFECT
// Walk the fields. //	WITHOUT_CLASSIFICATION	0.9999979993771827	WITHOUT_CLASSIFICATION	2.0006228172853582E-6	DEFECT
// Obtain other dependent packages	WITHOUT_CLASSIFICATION	0.9999999926807401	WITHOUT_CLASSIFICATION	7.319259834361146E-9	DEFECT
// Obtain other dependent packages	WITHOUT_CLASSIFICATION	0.9999999926807401	WITHOUT_CLASSIFICATION	7.319259834361146E-9	DEFECT
// Filter out explicit EObject from super types, except in the Ecore package itself, or if it appears in the @model superTypes. //	WITHOUT_CLASSIFICATION	0.9996848486729244	WITHOUT_CLASSIFICATION	3.151513270755918E-4	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.9999993338928099	WITHOUT_CLASSIFICATION	6.661071901337388E-7	DEFECT
// We will create an EAttribute, EReference, or an EOperation. //	WITHOUT_CLASSIFICATION	0.999995450557654	WITHOUT_CLASSIFICATION	4.5494423458969645E-6	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.9999921779007461	WITHOUT_CLASSIFICATION	7.822099253932902E-6	DEFECT
// Check whether there are parameters; the special attribute and reference rules only apply for the case of no arguments. //	WITHOUT_CLASSIFICATION	0.9999999681600326	WITHOUT_CLASSIFICATION	3.183996746066205E-8	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$	WITHOUT_CLASSIFICATION	0.9999744017220922	WITHOUT_CLASSIFICATION	2.5598277907838138E-5	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9999894881046154	WITHOUT_CLASSIFICATION	1.0511895384633356E-5	DEFECT
// Initialize classes and features; add operations and parameters	WITHOUT_CLASSIFICATION	0.9999993621167168	WITHOUT_CLASSIFICATION	6.378832832154119E-7	DEFECT
// Initialize classes and features; add operations and parameters	WITHOUT_CLASSIFICATION	0.9999993621167168	WITHOUT_CLASSIFICATION	6.378832832154119E-7	DEFECT
// Initialize classes and features; add operations and parameters	WITHOUT_CLASSIFICATION	0.9999993621167168	WITHOUT_CLASSIFICATION	6.378832832154119E-7	DEFECT
// The method is not a structural feature, so it's modeled as an operation. //	WITHOUT_CLASSIFICATION	0.9999999642611046	WITHOUT_CLASSIFICATION	3.573889538733882E-8	DEFECT
// Initialize classes and features; add operations and parameters //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9999994103784552	WITHOUT_CLASSIFICATION	5.896215447414509E-7	DEFECT
// Create annotations // http://www.eclipse.org/emf/2002/Ecore	WITHOUT_CLASSIFICATION	0.9999973589406604	WITHOUT_CLASSIFICATION	2.64105933950812E-6	DEFECT
// Don't overwrite exising file	WITHOUT_CLASSIFICATION	0.9999988854714936	WITHOUT_CLASSIFICATION	1.1145285063789811E-6	DEFECT
// Don't overwrite exising file	WITHOUT_CLASSIFICATION	0.9999988854714936	WITHOUT_CLASSIFICATION	1.1145285063789811E-6	DEFECT
// Look through the imports of the containing compilation unit. //	WITHOUT_CLASSIFICATION	0.9999996360096782	WITHOUT_CLASSIFICATION	3.6399032181471686E-7	DEFECT
// Use an alternate if we can't write to this one. //	WITHOUT_CLASSIFICATION	0.9999879037525576	WITHOUT_CLASSIFICATION	1.2096247442449023E-5	DEFECT
// Map to EClass, EEnum or EInerface. // Note that we do not map structure and primitive type class. //	WITHOUT_CLASSIFICATION	0.9999999910665239	WITHOUT_CLASSIFICATION	8.933476007254029E-9	DEFECT
//purpose: using charset from 'targetFile' to encode in-memory  //         'newContents' object into bytes //modifer: Wu Zhi Qiang //date:    Aug 25, 2004 //action:  first get the charset from 'targetFile', then use it  //         to encode the 'newContents' object into bytes	WITHOUT_CLASSIFICATION	0.9999966480109718	WITHOUT_CLASSIFICATION	3.351989028343429E-6	DEFECT
// Map to an EClass. //	WITHOUT_CLASSIFICATION	0.9999997927955423	WITHOUT_CLASSIFICATION	2.0720445764736388E-7	DEFECT
// Map to an EClass. //	WITHOUT_CLASSIFICATION	0.9999997927955423	WITHOUT_CLASSIFICATION	2.0720445764736388E-7	DEFECT
//FB TBD different objects for ecore model!	WITHOUT_CLASSIFICATION	0.9995229299048816	WITHOUT_CLASSIFICATION	4.770700951183857E-4	DEFECT
//FB TBD different objects for ecore model!	WITHOUT_CLASSIFICATION	0.9995229299048816	WITHOUT_CLASSIFICATION	4.770700951183857E-4	DEFECT
// Map to an eClass. //	WITHOUT_CLASSIFICATION	0.9999997376873565	WITHOUT_CLASSIFICATION	2.6231264354116663E-7	DEFECT
// generateColor();	WITHOUT_CLASSIFICATION	0.9999987739540627	WITHOUT_CLASSIFICATION	1.2260459374215112E-6	DEFECT
// This handles Rose 2003 format, e.g., // Logical View::JavaException[40722F9D0294] //	WITHOUT_CLASSIFICATION	0.9999991142388781	WITHOUT_CLASSIFICATION	8.857611219220679E-7	DEFECT
// Strip off the array indices if any. //	WITHOUT_CLASSIFICATION	0.9999927841608043	WITHOUT_CLASSIFICATION	7.2158391957306485E-6	DEFECT
// process eStructuralFeatures for association end(Role) //	WITHOUT_CLASSIFICATION	0.9999996798753167	WITHOUT_CLASSIFICATION	3.201246832983756E-7	DEFECT
// If we find a match, make this generic type be for this type parameter, // and then stop the whole process.	WITHOUT_CLASSIFICATION	0.9999993350077171	WITHOUT_CLASSIFICATION	6.649922828376027E-7	DEFECT
// If we find a match, make this generic type be for this type parameter, // and then stop the whole process.	WITHOUT_CLASSIFICATION	0.9999993350077171	WITHOUT_CLASSIFICATION	6.649922828376027E-7	DEFECT
// ...or if it's a wildcard or group feature.  Also, make it FeatureMap-typed. //	WITHOUT_CLASSIFICATION	0.9994637569618811	WITHOUT_CLASSIFICATION	5.362430381189136E-4	DEFECT
// We don't want keyType and valueType on a map type specification in a package interface. // But, we also use qualified model information when defining a feature with suppressed get accessor // on the interface, and we do want to include these properties in that case. //	WITHOUT_CLASSIFICATION	0.9999999979806484	WITHOUT_CLASSIFICATION	2.019351599237209E-9	DEFECT
// starting traverse file and build unit tree and table info	WITHOUT_CLASSIFICATION	0.9999999751241797	WITHOUT_CLASSIFICATION	2.48758203266613E-8	DEFECT
/*  public String getImportedInstanceClassName()  {    return getGenModel().getImportedName("org.eclipse.emf.ecore.EEnumLiteral");   }*/	WITHOUT_CLASSIFICATION	0.999999990774636	WITHOUT_CLASSIFICATION	9.225363955517825E-9	DEFECT
// Process the children of the UnitTreeNode recursively. //	WITHOUT_CLASSIFICATION	0.9999996843260426	WITHOUT_CLASSIFICATION	3.1567395740469315E-7	DEFECT
// If the flag will straddle two fields, bump it to the next one. //	WITHOUT_CLASSIFICATION	0.9999973957910043	WITHOUT_CLASSIFICATION	2.6042089956457276E-6	DEFECT
//************************************************************************ //*    class RoseToken                                                   * //************************************************************************	WITHOUT_CLASSIFICATION	0.9979912428619129	WITHOUT_CLASSIFICATION	0.002008757138087096	DEFECT
// If there is a provider base class from outside this class that has already been generated, get the create // child references from it. We'll check for any type-compatible classes introduced in this package. //	WITHOUT_CLASSIFICATION	0.999999994408968	WITHOUT_CLASSIFICATION	5.5910319495185475E-9	DEFECT
// This will deal with all the subcommands to modifying the root mapping tree. //	WITHOUT_CLASSIFICATION	0.9884011240894589	WITHOUT_CLASSIFICATION	0.011598875910541066	DEFECT
// Like isStringType(), but still returns true even if multiplicity-many. //	WITHOUT_CLASSIFICATION	0.9999888184617555	WITHOUT_CLASSIFICATION	1.1181538244597776E-5	DEFECT
// Create a command to do parentMapping.getNested().remove(mapping). // //subcommands.appendAndExecute(new RemoveCommand(domain, parentMapping, parentMapping.ePackageMapping().getMapping_Nested(), mapping));	WITHOUT_CLASSIFICATION	0.9999927961104079	WITHOUT_CLASSIFICATION	7.203889592093318E-6	DEFECT
// EDate is far too often overridden to provide a different mapping, and therefor the default is somewhat obscure. // So, it's best to delegate to the factory. //	WITHOUT_CLASSIFICATION	0.9999999807847076	WITHOUT_CLASSIFICATION	1.9215292263893747E-8	DEFECT
// Find the appropriate parent mapping, which at the very least, should be the mapping root itself. //	WITHOUT_CLASSIFICATION	0.9813709095819271	WITHOUT_CLASSIFICATION	0.018629090418072917	DEFECT
// }	WITHOUT_CLASSIFICATION	0.9999906610274247	WITHOUT_CLASSIFICATION	9.338972575288432E-6	DEFECT
// }	WITHOUT_CLASSIFICATION	0.9999906610274247	WITHOUT_CLASSIFICATION	9.338972575288432E-6	DEFECT
// }	WITHOUT_CLASSIFICATION	0.9999906610274247	WITHOUT_CLASSIFICATION	9.338972575288432E-6	DEFECT
// If the type isn't Object, we need to cast. If it's a primitive, we need to unbox. //	WITHOUT_CLASSIFICATION	0.9999908863773409	WITHOUT_CLASSIFICATION	9.11362265916509E-6	DEFECT
//(new AddCommand(domain, mapping, mapping.ePackageMapping().getMapping_Nested(), siblingsToReparent));	WITHOUT_CLASSIFICATION	0.9999991583889652	WITHOUT_CLASSIFICATION	8.416110347954903E-7	DEFECT
// Suppress default constructor for non-instantiability.	WITHOUT_CLASSIFICATION	0.9999999813084829	WITHOUT_CLASSIFICATION	1.8691517067907903E-8	DEFECT
// This is tricky and is done for each object here rather than once for the owner of the addCommnd. // We want to make sure the object is really part of the conceptual tree induced by the domain. //	WITHOUT_CLASSIFICATION	0.9999991147333723	WITHOUT_CLASSIFICATION	8.852666278043216E-7	DEFECT
// See java.lang.Class.getName() javadoc for explanation of array encoding.	WITHOUT_CLASSIFICATION	0.999999756590929	WITHOUT_CLASSIFICATION	2.4340907101172066E-7	DEFECT
// We'll try adding a shallow copy of the clipboard contents, instead of a full copy. // Note: we can't just try adding the clipboard contents itself, because the copy may be a //       different type then what's on the clipboard (e.g. EJB Field -> RDB Column). //	WITHOUT_CLASSIFICATION	0.9999985948101039	WITHOUT_CLASSIFICATION	1.4051898962149785E-6	DEFECT
// We'll try adding a shallow copy of the clipboard contents, instead of a full copy. // Note: we can't just try adding the clipboard contents itself, because the copy may be a //       different type then what's on the clipboard (e.g. EJB Field -> RDB Column). //	WITHOUT_CLASSIFICATION	0.9999985948101039	WITHOUT_CLASSIFICATION	1.4051898962149785E-6	DEFECT
// We can't blindly cache the genModel, since we need to support moving the GenPackage to another container, // but the cast is expensive, so we'd like to do it no more than absolutely necessary. //	WITHOUT_CLASSIFICATION	0.9999996901432735	WITHOUT_CLASSIFICATION	3.0985672639320427E-7	DEFECT
//FB The following method is copied from com.ibm.etools.b2b.util.StringUtility //FB because the mapping framework cannot have a dependency on b2b. What we really //FB need to do is get methods like this moved to vabase so that everyone can //FB use them. // change all occurrences of oldPat to newPat	WITHOUT_CLASSIFICATION	0.9283242552369865	WITHOUT_CLASSIFICATION	0.07167574476301351	DEFECT
// Ignore this soft dependency when it's not satisfied.	WITHOUT_CLASSIFICATION	0.9999960407260348	WITHOUT_CLASSIFICATION	3.9592739652339885E-6	DEFECT
// If it's the selection viewer, then we want it to select the same selection as this selection. //	WITHOUT_CLASSIFICATION	0.9999937419145924	WITHOUT_CLASSIFICATION	6.258085407494906E-6	DEFECT
// Set URIs of EPackage-containing resources: output resource to desired target URI, and others to package // namespace URIs (so cross-references will be resolved via package registry when deserialized).  //	WITHOUT_CLASSIFICATION	0.9999999274971106	WITHOUT_CLASSIFICATION	7.250288941547826E-8	DEFECT
//MappingPackageImpl	WITHOUT_CLASSIFICATION	0.9999845755676461	WITHOUT_CLASSIFICATION	1.542443235396839E-5	DEFECT
// Iterate over the mappings in the tree. //	WITHOUT_CLASSIFICATION	0.9999616752164295	WITHOUT_CLASSIFICATION	3.83247835705239E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999894057930029	WITHOUT_CLASSIFICATION	1.059420699713679E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999894057930029	WITHOUT_CLASSIFICATION	1.059420699713679E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999894057930029	WITHOUT_CLASSIFICATION	1.059420699713679E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999894057930029	WITHOUT_CLASSIFICATION	1.059420699713679E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999894057930029	WITHOUT_CLASSIFICATION	1.059420699713679E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999894057930029	WITHOUT_CLASSIFICATION	1.059420699713679E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999894057930029	WITHOUT_CLASSIFICATION	1.059420699713679E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999894057930029	WITHOUT_CLASSIFICATION	1.059420699713679E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999894057930029	WITHOUT_CLASSIFICATION	1.059420699713679E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999894057930029	WITHOUT_CLASSIFICATION	1.059420699713679E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999894057930029	WITHOUT_CLASSIFICATION	1.059420699713679E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999894057930029	WITHOUT_CLASSIFICATION	1.059420699713679E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999894057930029	WITHOUT_CLASSIFICATION	1.059420699713679E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999894057930029	WITHOUT_CLASSIFICATION	1.059420699713679E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999894057930029	WITHOUT_CLASSIFICATION	1.059420699713679E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999894057930029	WITHOUT_CLASSIFICATION	1.059420699713679E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999894057930029	WITHOUT_CLASSIFICATION	1.059420699713679E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999894057930029	WITHOUT_CLASSIFICATION	1.059420699713679E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999894057930029	WITHOUT_CLASSIFICATION	1.059420699713679E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999894057930029	WITHOUT_CLASSIFICATION	1.059420699713679E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999894057930029	WITHOUT_CLASSIFICATION	1.059420699713679E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999894057930029	WITHOUT_CLASSIFICATION	1.059420699713679E-5	DEFECT
//   public String getExtendedItemProviderClassName() //   { //     return getPrefixedName("ItemProviderAdapter"); //   }	WITHOUT_CLASSIFICATION	0.9999994693212425	WITHOUT_CLASSIFICATION	5.306787574837863E-7	DEFECT
// Check to make sure that every object in the collection has an ancestor that is contained in this mapping. //	WITHOUT_CLASSIFICATION	0.999999423107354	WITHOUT_CLASSIFICATION	5.768926459782479E-7	DEFECT
// It belongs to this package if the delegate feature is from this package, // or the class is from this package and either there is no delegate feature or the delegate feature is from some used package. //	WITHOUT_CLASSIFICATION	0.9999999776413407	WITHOUT_CLASSIFICATION	2.2358659212588722E-8	DEFECT
// Ensure that this is a touch notification so to resource aren't marked as dirty. //	WITHOUT_CLASSIFICATION	0.9999663154456476	WITHOUT_CLASSIFICATION	3.3684554352373336E-5	DEFECT
// Force the project to be setup properly. //	WITHOUT_CLASSIFICATION	0.9999961437302978	WITHOUT_CLASSIFICATION	3.856269702208005E-6	DEFECT
/* EATM getDecoratedAdapterFactory().*/	WITHOUT_CLASSIFICATION	0.9999947264767549	WITHOUT_CLASSIFICATION	5.2735232451283195E-6	DEFECT
// This case happens when the IDE is brought up with the editor already open //	WITHOUT_CLASSIFICATION	0.8836429470363201	WITHOUT_CLASSIFICATION	0.11635705296368	DEFECT
// We need to filer out duplicates in the unlikely event that we have two // features with the same class-qualified name. We'll only generate one property // string in that case and let the user add the second one manually, if necessary. //	WITHOUT_CLASSIFICATION	0.9999754396710142	WITHOUT_CLASSIFICATION	2.456032898570766E-5	DEFECT
//MappingPackage ePackage = ((ComplexTypeConverter)msg.getNotifier()).ePackageMapping();	WITHOUT_CLASSIFICATION	0.9999996830814222	WITHOUT_CLASSIFICATION	3.1691857783261765E-7	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999989374002828	WITHOUT_CLASSIFICATION	1.0625997173036432E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999989374002828	WITHOUT_CLASSIFICATION	1.0625997173036432E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999989374002828	WITHOUT_CLASSIFICATION	1.0625997173036432E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999989374002828	WITHOUT_CLASSIFICATION	1.0625997173036432E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999989374002828	WITHOUT_CLASSIFICATION	1.0625997173036432E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999989374002828	WITHOUT_CLASSIFICATION	1.0625997173036432E-6	DEFECT
// while	WITHOUT_CLASSIFICATION	0.999998446248347	WITHOUT_CLASSIFICATION	1.5537516529543957E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999989374002828	WITHOUT_CLASSIFICATION	1.0625997173036432E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999989374002828	WITHOUT_CLASSIFICATION	1.0625997173036432E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999989374002828	WITHOUT_CLASSIFICATION	1.0625997173036432E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999989374002828	WITHOUT_CLASSIFICATION	1.0625997173036432E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999989374002828	WITHOUT_CLASSIFICATION	1.0625997173036432E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999989374002828	WITHOUT_CLASSIFICATION	1.0625997173036432E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999989374002828	WITHOUT_CLASSIFICATION	1.0625997173036432E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999989374002828	WITHOUT_CLASSIFICATION	1.0625997173036432E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999989374002828	WITHOUT_CLASSIFICATION	1.0625997173036432E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999989374002828	WITHOUT_CLASSIFICATION	1.0625997173036432E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999989374002828	WITHOUT_CLASSIFICATION	1.0625997173036432E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999989374002828	WITHOUT_CLASSIFICATION	1.0625997173036432E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999989374002828	WITHOUT_CLASSIFICATION	1.0625997173036432E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999989374002828	WITHOUT_CLASSIFICATION	1.0625997173036432E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999989374002828	WITHOUT_CLASSIFICATION	1.0625997173036432E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999989374002828	WITHOUT_CLASSIFICATION	1.0625997173036432E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999989374002828	WITHOUT_CLASSIFICATION	1.0625997173036432E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999989374002828	WITHOUT_CLASSIFICATION	1.0625997173036432E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999989374002828	WITHOUT_CLASSIFICATION	1.0625997173036432E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999989374002828	WITHOUT_CLASSIFICATION	1.0625997173036432E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999989374002828	WITHOUT_CLASSIFICATION	1.0625997173036432E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999989374002828	WITHOUT_CLASSIFICATION	1.0625997173036432E-6	DEFECT
// Empty	WITHOUT_CLASSIFICATION	0.9999926798126116	WITHOUT_CLASSIFICATION	7.3201873884175265E-6	DEFECT
// Empty	WITHOUT_CLASSIFICATION	0.9999926798126116	WITHOUT_CLASSIFICATION	7.3201873884175265E-6	DEFECT
// Empty	WITHOUT_CLASSIFICATION	0.9999926798126116	WITHOUT_CLASSIFICATION	7.3201873884175265E-6	DEFECT
// Empty	WITHOUT_CLASSIFICATION	0.9999926798126116	WITHOUT_CLASSIFICATION	7.3201873884175265E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999995614747719	WITHOUT_CLASSIFICATION	4.385252280605921E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999995614747719	WITHOUT_CLASSIFICATION	4.385252280605921E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999995614747719	WITHOUT_CLASSIFICATION	4.385252280605921E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999995614747719	WITHOUT_CLASSIFICATION	4.385252280605921E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999995614747719	WITHOUT_CLASSIFICATION	4.385252280605921E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999995614747719	WITHOUT_CLASSIFICATION	4.385252280605921E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999995614747719	WITHOUT_CLASSIFICATION	4.385252280605921E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999995614747719	WITHOUT_CLASSIFICATION	4.385252280605921E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999995614747719	WITHOUT_CLASSIFICATION	4.385252280605921E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999995614747719	WITHOUT_CLASSIFICATION	4.385252280605921E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999995614747719	WITHOUT_CLASSIFICATION	4.385252280605921E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999995614747719	WITHOUT_CLASSIFICATION	4.385252280605921E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999995614747719	WITHOUT_CLASSIFICATION	4.385252280605921E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999995614747719	WITHOUT_CLASSIFICATION	4.385252280605921E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999995614747719	WITHOUT_CLASSIFICATION	4.385252280605921E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999995614747719	WITHOUT_CLASSIFICATION	4.385252280605921E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999995614747719	WITHOUT_CLASSIFICATION	4.385252280605921E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999995614747719	WITHOUT_CLASSIFICATION	4.385252280605921E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999995614747719	WITHOUT_CLASSIFICATION	4.385252280605921E-7	DEFECT
// the first hex character if a character needs to be escaped	WITHOUT_CLASSIFICATION	0.9999996879653188	WITHOUT_CLASSIFICATION	3.1203468122002857E-7	DEFECT
// the first hex character if a character needs to be escaped	WITHOUT_CLASSIFICATION	0.9999996879653188	WITHOUT_CLASSIFICATION	3.1203468122002857E-7	DEFECT
// the second hex character if a character needs to be escaped	WITHOUT_CLASSIFICATION	0.9999939963216649	WITHOUT_CLASSIFICATION	6.0036783351670295E-6	DEFECT
// initialize the above 3 arrays	WITHOUT_CLASSIFICATION	0.9999997967065091	WITHOUT_CLASSIFICATION	2.0329349095645912E-7	DEFECT
// if it's not an ASCII character, break here, and use UTF-8 encoding	WITHOUT_CLASSIFICATION	0.9999995713457575	WITHOUT_CLASSIFICATION	4.286542425981289E-7	DEFECT
// get UTF-8 bytes for the remaining sub-string	WITHOUT_CLASSIFICATION	0.9999999722283783	WITHOUT_CLASSIFICATION	2.7771621632515415E-8	DEFECT
//MappingPackage ePackage = ((MappingRoot)object).ePackageMapping();	WITHOUT_CLASSIFICATION	0.9999946014695775	WITHOUT_CLASSIFICATION	5.398530422497345E-6	DEFECT
// Try to select the affected objects. //	WITHOUT_CLASSIFICATION	0.99999993727935	WITHOUT_CLASSIFICATION	6.272064995867918E-8	DEFECT
// this should never happen	WITHOUT_CLASSIFICATION	0.9999772043049603	WITHOUT_CLASSIFICATION	2.2795695039751733E-5	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9999958962280804	WITHOUT_CLASSIFICATION	4.10377191956407E-6	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9999958962280804	WITHOUT_CLASSIFICATION	4.10377191956407E-6	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9999958962280804	WITHOUT_CLASSIFICATION	4.10377191956407E-6	DEFECT
// && commandParameter instanceof MappingCommandParameter)	WITHOUT_CLASSIFICATION	0.9999970171991162	WITHOUT_CLASSIFICATION	2.982800883868179E-6	DEFECT
// Creates the model from the editor input //	WITHOUT_CLASSIFICATION	0.9999996360956815	WITHOUT_CLASSIFICATION	3.6390431850621036E-7	DEFECT
// Returning null here causes RemoveCommand.create(domain, mappedObjectItemProvider) to be delegated //  to MappedObjectItemProvider.createCommand() and there we return a command to remove mappedObject instead. // // return null;	WITHOUT_CLASSIFICATION	0.9999052021758834	WITHOUT_CLASSIFICATION	9.479782411649212E-5	DEFECT
// Only creates the other pages if there is something that can be edited //	WITHOUT_CLASSIFICATION	0.999999782712914	WITHOUT_CLASSIFICATION	2.1728708601037875E-7	DEFECT
// Only creates the other pages if there is something that can be edited //	WITHOUT_CLASSIFICATION	0.999999782712914	WITHOUT_CLASSIFICATION	2.1728708601037875E-7	DEFECT
//hgd::fireNotifyChanged(msg.getNotifier(), msg.getEventType(), msg.getFeature(), substituteOldValue, substituteNewValue, msg.getPosition());	WITHOUT_CLASSIFICATION	0.9999999831476712	WITHOUT_CLASSIFICATION	1.6852328768102082E-8	DEFECT
// The content outline is just a tree. //	WITHOUT_CLASSIFICATION	0.9999998753384842	WITHOUT_CLASSIFICATION	1.2466151579040114E-7	DEFECT
// Set up the tree viewer. //	WITHOUT_CLASSIFICATION	0.9999983994774432	WITHOUT_CLASSIFICATION	1.6005225568662645E-6	DEFECT
// Select the root object in the view. //	WITHOUT_CLASSIFICATION	0.9999047751717217	WITHOUT_CLASSIFICATION	9.522482827820044E-5	DEFECT
// This ensures that we handle selections correctly. //	WITHOUT_CLASSIFICATION	0.9990124714797155	WITHOUT_CLASSIFICATION	9.875285202844328E-4	DEFECT
// Get the first selected element. //	WITHOUT_CLASSIFICATION	0.9999999820409388	WITHOUT_CLASSIFICATION	1.7959061185449528E-8	DEFECT
// Do the work within an operation because this is a long running activity that modifies the workbench. //	WITHOUT_CLASSIFICATION	0.9999926175549257	WITHOUT_CLASSIFICATION	7.382445074256502E-6	DEFECT
// generateMenuManager.add(new Separator("schema-actions")); // generateMenuManager.add(generateSchemaAction);    	WITHOUT_CLASSIFICATION	0.9999999858556086	WITHOUT_CLASSIFICATION	1.4144391516853132E-8	DEFECT
// generateSchemaAction.setEnabled(generateSchemaAction.isEnabled());	WITHOUT_CLASSIFICATION	0.9999999925688089	WITHOUT_CLASSIFICATION	7.431191086881564E-9	DEFECT
// menuManager.insertBefore("additions", new Separator("schema-actions")); // menuManager.insertAfter("schema-actions", generateSchemaAction);	WITHOUT_CLASSIFICATION	0.9999998082816571	WITHOUT_CLASSIFICATION	1.9171834277984578E-7	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999946923429	WITHOUT_CLASSIFICATION	5.307657104793272E-9	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999946923429	WITHOUT_CLASSIFICATION	5.307657104793272E-9	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999946923429	WITHOUT_CLASSIFICATION	5.307657104793272E-9	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999946923429	WITHOUT_CLASSIFICATION	5.307657104793272E-9	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999946923429	WITHOUT_CLASSIFICATION	5.307657104793272E-9	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999946923429	WITHOUT_CLASSIFICATION	5.307657104793272E-9	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999946923429	WITHOUT_CLASSIFICATION	5.307657104793272E-9	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999946923429	WITHOUT_CLASSIFICATION	5.307657104793272E-9	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999946923429	WITHOUT_CLASSIFICATION	5.307657104793272E-9	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999946923429	WITHOUT_CLASSIFICATION	5.307657104793272E-9	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999946923429	WITHOUT_CLASSIFICATION	5.307657104793272E-9	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999946923429	WITHOUT_CLASSIFICATION	5.307657104793272E-9	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999946923429	WITHOUT_CLASSIFICATION	5.307657104793272E-9	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999946923429	WITHOUT_CLASSIFICATION	5.307657104793272E-9	DEFECT
//)	WITHOUT_CLASSIFICATION	0.999937144375453	WITHOUT_CLASSIFICATION	6.285562454695064E-5	DEFECT
//)	WITHOUT_CLASSIFICATION	0.999937144375453	WITHOUT_CLASSIFICATION	6.285562454695064E-5	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9999897795145728	WITHOUT_CLASSIFICATION	1.0220485427274058E-5	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9999897795145728	WITHOUT_CLASSIFICATION	1.0220485427274058E-5	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9999897795145728	WITHOUT_CLASSIFICATION	1.0220485427274058E-5	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9999897795145728	WITHOUT_CLASSIFICATION	1.0220485427274058E-5	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9999897795145728	WITHOUT_CLASSIFICATION	1.0220485427274058E-5	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9999897795145728	WITHOUT_CLASSIFICATION	1.0220485427274058E-5	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9999897795145728	WITHOUT_CLASSIFICATION	1.0220485427274058E-5	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9999897795145728	WITHOUT_CLASSIFICATION	1.0220485427274058E-5	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9999897795145728	WITHOUT_CLASSIFICATION	1.0220485427274058E-5	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9999897795145728	WITHOUT_CLASSIFICATION	1.0220485427274058E-5	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9999897795145728	WITHOUT_CLASSIFICATION	1.0220485427274058E-5	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9999897795145728	WITHOUT_CLASSIFICATION	1.0220485427274058E-5	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9999897795145728	WITHOUT_CLASSIFICATION	1.0220485427274058E-5	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9999897795145728	WITHOUT_CLASSIFICATION	1.0220485427274058E-5	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9999897795145728	WITHOUT_CLASSIFICATION	1.0220485427274058E-5	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9999897795145728	WITHOUT_CLASSIFICATION	1.0220485427274058E-5	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9999897795145728	WITHOUT_CLASSIFICATION	1.0220485427274058E-5	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9999897795145728	WITHOUT_CLASSIFICATION	1.0220485427274058E-5	DEFECT
/**   * Calls <code>validateXXX</code> for the corresponding classifier of the model.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9999944076877221	WITHOUT_CLASSIFICATION	5.592312277941683E-6	DEFECT
/**   * Calls <code>validateXXX</code> for the corresponding classifier of the model.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9999944076877221	WITHOUT_CLASSIFICATION	5.592312277941683E-6	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9999958427508975	WITHOUT_CLASSIFICATION	4.157249102503447E-6	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9999958427508975	WITHOUT_CLASSIFICATION	4.157249102503447E-6	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9999958427508975	WITHOUT_CLASSIFICATION	4.157249102503447E-6	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9999958427508975	WITHOUT_CLASSIFICATION	4.157249102503447E-6	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9999958427508975	WITHOUT_CLASSIFICATION	4.157249102503447E-6	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9999958427508975	WITHOUT_CLASSIFICATION	4.157249102503447E-6	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9999958427508975	WITHOUT_CLASSIFICATION	4.157249102503447E-6	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9999958427508975	WITHOUT_CLASSIFICATION	4.157249102503447E-6	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9999958427508975	WITHOUT_CLASSIFICATION	4.157249102503447E-6	DEFECT
// // Constructors //	WITHOUT_CLASSIFICATION	0.9999999804188356	WITHOUT_CLASSIFICATION	1.958116429723147E-8	DEFECT
// // Constructors //	WITHOUT_CLASSIFICATION	0.9999999804188356	WITHOUT_CLASSIFICATION	1.958116429723147E-8	DEFECT
//TestCase/isSetGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999999912702754	WITHOUT_CLASSIFICATION	8.729724661708417E-9	DEFECT
// Avoid unnecessary out.write("") statements...	WITHOUT_CLASSIFICATION	0.9999974497677896	WITHOUT_CLASSIFICATION	2.5502322103539534E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999894057930029	WITHOUT_CLASSIFICATION	1.059420699713679E-5	DEFECT
// For any entry that doesn't correspond to a plugin in the running JVM, compute a URL for the classes. //	WITHOUT_CLASSIFICATION	0.9979262669293123	WITHOUT_CLASSIFICATION	0.002073733070687729	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999915452101419	WITHOUT_CLASSIFICATION	8.454789858137396E-6	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999915452101419	WITHOUT_CLASSIFICATION	8.454789858137396E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999894057930029	WITHOUT_CLASSIFICATION	1.059420699713679E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999894057930029	WITHOUT_CLASSIFICATION	1.059420699713679E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999894057930029	WITHOUT_CLASSIFICATION	1.059420699713679E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999894057930029	WITHOUT_CLASSIFICATION	1.059420699713679E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999894057930029	WITHOUT_CLASSIFICATION	1.059420699713679E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999894057930029	WITHOUT_CLASSIFICATION	1.059420699713679E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999894057930029	WITHOUT_CLASSIFICATION	1.059420699713679E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999894057930029	WITHOUT_CLASSIFICATION	1.059420699713679E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999894057930029	WITHOUT_CLASSIFICATION	1.059420699713679E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999894057930029	WITHOUT_CLASSIFICATION	1.059420699713679E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999894057930029	WITHOUT_CLASSIFICATION	1.059420699713679E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999894057930029	WITHOUT_CLASSIFICATION	1.059420699713679E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999894057930029	WITHOUT_CLASSIFICATION	1.059420699713679E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999894057930029	WITHOUT_CLASSIFICATION	1.059420699713679E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999894057930029	WITHOUT_CLASSIFICATION	1.059420699713679E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999894057930029	WITHOUT_CLASSIFICATION	1.059420699713679E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999894057930029	WITHOUT_CLASSIFICATION	1.059420699713679E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999894057930029	WITHOUT_CLASSIFICATION	1.059420699713679E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999894057930029	WITHOUT_CLASSIFICATION	1.059420699713679E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999894057930029	WITHOUT_CLASSIFICATION	1.059420699713679E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999894057930029	WITHOUT_CLASSIFICATION	1.059420699713679E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999894057930029	WITHOUT_CLASSIFICATION	1.059420699713679E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999894057930029	WITHOUT_CLASSIFICATION	1.059420699713679E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999894057930029	WITHOUT_CLASSIFICATION	1.059420699713679E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999894057930029	WITHOUT_CLASSIFICATION	1.059420699713679E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999894057930029	WITHOUT_CLASSIFICATION	1.059420699713679E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999894057930029	WITHOUT_CLASSIFICATION	1.059420699713679E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999894057930029	WITHOUT_CLASSIFICATION	1.059420699713679E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999894057930029	WITHOUT_CLASSIFICATION	1.059420699713679E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999894057930029	WITHOUT_CLASSIFICATION	1.059420699713679E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999894057930029	WITHOUT_CLASSIFICATION	1.059420699713679E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999894057930029	WITHOUT_CLASSIFICATION	1.059420699713679E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999894057930029	WITHOUT_CLASSIFICATION	1.059420699713679E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999894057930029	WITHOUT_CLASSIFICATION	1.059420699713679E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999894057930029	WITHOUT_CLASSIFICATION	1.059420699713679E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999894057930029	WITHOUT_CLASSIFICATION	1.059420699713679E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999894057930029	WITHOUT_CLASSIFICATION	1.059420699713679E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999894057930029	WITHOUT_CLASSIFICATION	1.059420699713679E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999894057930029	WITHOUT_CLASSIFICATION	1.059420699713679E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999894057930029	WITHOUT_CLASSIFICATION	1.059420699713679E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999894057930029	WITHOUT_CLASSIFICATION	1.059420699713679E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999894057930029	WITHOUT_CLASSIFICATION	1.059420699713679E-5	DEFECT
// Define a class loader that looks up classes using the URLs or the parent class loader, // and failing those, tries to look up the class in each bundle in the running JVM. //	WITHOUT_CLASSIFICATION	0.9999999321435524	WITHOUT_CLASSIFICATION	6.785644757505841E-8	DEFECT
// EATM in JDK 1.4 there will be an indexOf on StringBuffer. //	DEFECT	0.9996487792251076	WITHOUT_CLASSIFICATION	3.512207748924136E-4	DEFECT
// line comments at the end of annotations are not a part of the range of annotation // TODO is not including line comments at the end of annotations a bug?	DEFECT	0.9492498243237212	DEFECT	0.05075017567627889	WITHOUT_CLASSIFICATION
// EATM must fix isSet bits.	DEFECT	0.9999998763247394	WITHOUT_CLASSIFICATION	1.2367526052308868E-7	DEFECT
// EATM must fix isSet bits.	DEFECT	0.9999998763247394	WITHOUT_CLASSIFICATION	1.2367526052308868E-7	DEFECT
// Bug 124306: we should rely on XMLCalendar to normalize Dave value, to ensure that all Date value // fields are taken into account.	DEFECT	0.9991186585632261	DEFECT	8.813414367738494E-4	WITHOUT_CLASSIFICATION
// is this an error???	DEFECT	0.9999960134645756	WITHOUT_CLASSIFICATION	3.986535424506934E-6	DEFECT
// is this an error???	DEFECT	0.9999960134645756	WITHOUT_CLASSIFICATION	3.986535424506934E-6	DEFECT
//FB Won't compile with VAJ or NO_JIKES  //FB Object adapter = adapterFactory.adapt(mapping);	DEFECT	0.9999404896273025	WITHOUT_CLASSIFICATION	5.9510372697516875E-5	DEFECT
