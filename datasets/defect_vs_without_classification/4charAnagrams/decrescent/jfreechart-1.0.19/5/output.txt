// TBLRC // 01011 - bottom, right and center	WITHOUT_CLASSIFICATION	0.9999988416283374	WITHOUT_CLASSIFICATION	1.1583716626290788E-6	DEFECT
// TBLRC // 01100	WITHOUT_CLASSIFICATION	0.9999958768456818	WITHOUT_CLASSIFICATION	4.123154318166448E-6	DEFECT
// TBLRC // 01101 - bottom, left and center	WITHOUT_CLASSIFICATION	0.9999998404121536	WITHOUT_CLASSIFICATION	1.5958784637419818E-7	DEFECT
// TBLRC // 01110 - bottom. left and right	WITHOUT_CLASSIFICATION	0.9999949345975412	WITHOUT_CLASSIFICATION	5.065402458732275E-6	DEFECT
// TBLRC // 01111	WITHOUT_CLASSIFICATION	0.9999959781126998	WITHOUT_CLASSIFICATION	4.021887300212477E-6	DEFECT
// TBLRC // 10000 - top item only	WITHOUT_CLASSIFICATION	0.9999644131904732	WITHOUT_CLASSIFICATION	3.558680952675624E-5	DEFECT
// TBLRC // 10001 - top and center only	WITHOUT_CLASSIFICATION	0.999990872463677	WITHOUT_CLASSIFICATION	9.12753632294629E-6	DEFECT
// TBLRC // 10010 - right and top only	WITHOUT_CLASSIFICATION	0.9997784432067939	WITHOUT_CLASSIFICATION	2.2155679320610389E-4	DEFECT
// TBLRC // 10011 - top, right and center	WITHOUT_CLASSIFICATION	0.9999865231535512	WITHOUT_CLASSIFICATION	1.3476846448763653E-5	DEFECT
// TBLRC // 10100 - top and left only	WITHOUT_CLASSIFICATION	0.9999823070591657	WITHOUT_CLASSIFICATION	1.769294083432986E-5	DEFECT
// range	WITHOUT_CLASSIFICATION	0.9999989166243016	WITHOUT_CLASSIFICATION	1.0833756984192928E-6	DEFECT
// units	WITHOUT_CLASSIFICATION	0.9999969593491409	WITHOUT_CLASSIFICATION	3.0406508590931377E-6	DEFECT
// interval	WITHOUT_CLASSIFICATION	0.999999778715033	WITHOUT_CLASSIFICATION	2.2128496698434196E-7	DEFECT
// dial outline paint	WITHOUT_CLASSIFICATION	0.9999993041785462	WITHOUT_CLASSIFICATION	6.958214538341325E-7	DEFECT
// dial shape	WITHOUT_CLASSIFICATION	0.9999974063618818	WITHOUT_CLASSIFICATION	2.5936381181164577E-6	DEFECT
// dial background paint	WITHOUT_CLASSIFICATION	0.9999940286939186	WITHOUT_CLASSIFICATION	5.97130608139921E-6	DEFECT
// seriesPaint	WITHOUT_CLASSIFICATION	0.999999859646132	WITHOUT_CLASSIFICATION	1.403538680210567E-7	DEFECT
// seriesPaintList	WITHOUT_CLASSIFICATION	0.9999999337573572	WITHOUT_CLASSIFICATION	6.624264280757063E-8	DEFECT
// baseSeriesPaint	WITHOUT_CLASSIFICATION	0.999999941696869	WITHOUT_CLASSIFICATION	5.8303130919342507E-8	DEFECT
// seriesOutlinePaint	WITHOUT_CLASSIFICATION	0.999999956423747	WITHOUT_CLASSIFICATION	4.3576253020542737E-8	DEFECT
// seriesOutlinePaintList	WITHOUT_CLASSIFICATION	0.9999999794333704	WITHOUT_CLASSIFICATION	2.0566629597902054E-8	DEFECT
// baseSeriesOutlinePaint	WITHOUT_CLASSIFICATION	0.9999999818983838	WITHOUT_CLASSIFICATION	1.8101616128676043E-8	DEFECT
// seriesOutlineStroke	WITHOUT_CLASSIFICATION	0.9999926893898876	WITHOUT_CLASSIFICATION	7.310610112294159E-6	DEFECT
// seriesOutlineStrokeList	WITHOUT_CLASSIFICATION	0.9999952830758492	WITHOUT_CLASSIFICATION	4.716924150828892E-6	DEFECT
// add an empty series	WITHOUT_CLASSIFICATION	0.9999998415868648	WITHOUT_CLASSIFICATION	1.58413135226546E-7	DEFECT
// correct outcome	WITHOUT_CLASSIFICATION	0.9998925601314292	WITHOUT_CLASSIFICATION	1.0743986857079202E-4	DEFECT
// high	WITHOUT_CLASSIFICATION	0.9999889263150115	WITHOUT_CLASSIFICATION	1.1073684988565397E-5	DEFECT
// low	WITHOUT_CLASSIFICATION	0.9999340797082912	WITHOUT_CLASSIFICATION	6.592029170880138E-5	DEFECT
// close	WITHOUT_CLASSIFICATION	0.9999990979671647	WITHOUT_CLASSIFICATION	9.020328353689126E-7	DEFECT
/* XYSeries s = */	WITHOUT_CLASSIFICATION	0.9999847899096022	WITHOUT_CLASSIFICATION	1.5210090397787487E-5	DEFECT
// there should be no change event when clearing an empty series	WITHOUT_CLASSIFICATION	0.9999974570749829	WITHOUT_CLASSIFICATION	2.542925017095108E-6	DEFECT
// clean up	WITHOUT_CLASSIFICATION	0.9999989525233824	WITHOUT_CLASSIFICATION	1.047476617579184E-6	DEFECT
// shape	WITHOUT_CLASSIFICATION	0.9999993607229558	WITHOUT_CLASSIFICATION	6.392770442365946E-7	DEFECT
// stroke	WITHOUT_CLASSIFICATION	0.9999643721325285	WITHOUT_CLASSIFICATION	3.5627867471412034E-5	DEFECT
// labelFont	WITHOUT_CLASSIFICATION	0.9999968310946454	WITHOUT_CLASSIFICATION	3.168905354639804E-6	DEFECT
// labelPaint	WITHOUT_CLASSIFICATION	0.9999992827391619	WITHOUT_CLASSIFICATION	7.172608381114132E-7	DEFECT
// upperBound	WITHOUT_CLASSIFICATION	0.9999846042190097	WITHOUT_CLASSIFICATION	1.5395780990262737E-5	DEFECT
// paint	WITHOUT_CLASSIFICATION	0.9999979187961054	WITHOUT_CLASSIFICATION	2.0812038945755348E-6	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999712098698399	WITHOUT_CLASSIFICATION	2.8790130160057927E-5	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999712098698399	WITHOUT_CLASSIFICATION	2.8790130160057927E-5	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999712098698399	WITHOUT_CLASSIFICATION	2.8790130160057927E-5	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999712098698399	WITHOUT_CLASSIFICATION	2.8790130160057927E-5	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999712098698399	WITHOUT_CLASSIFICATION	2.8790130160057927E-5	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999712098698399	WITHOUT_CLASSIFICATION	2.8790130160057927E-5	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999712098698399	WITHOUT_CLASSIFICATION	2.8790130160057927E-5	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999712098698399	WITHOUT_CLASSIFICATION	2.8790130160057927E-5	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999712098698399	WITHOUT_CLASSIFICATION	2.8790130160057927E-5	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999712098698399	WITHOUT_CLASSIFICATION	2.8790130160057927E-5	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999712098698399	WITHOUT_CLASSIFICATION	2.8790130160057927E-5	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999712098698399	WITHOUT_CLASSIFICATION	2.8790130160057927E-5	DEFECT
// super.drawSecondaryPass(g2, plot, dataset, pass, series, item, // domainAxis, dataArea, rangeAxis, crosshairState, entities);	WITHOUT_CLASSIFICATION	0.9999965389920363	WITHOUT_CLASSIFICATION	3.461007963653533E-6	DEFECT
// properties // save // print // zoom // tooltips	WITHOUT_CLASSIFICATION	0.9999998771759805	WITHOUT_CLASSIFICATION	1.2282401955961543E-7	DEFECT
// properties // save // print // zoom // tooltips	WITHOUT_CLASSIFICATION	0.9999998771759805	WITHOUT_CLASSIFICATION	1.2282401955961543E-7	DEFECT
// properties // save // print // zoom // tooltips	WITHOUT_CLASSIFICATION	0.9999998771759805	WITHOUT_CLASSIFICATION	1.2282401955961543E-7	DEFECT
// do we need to redraw the buffer?	WITHOUT_CLASSIFICATION	0.9999979782165819	WITHOUT_CLASSIFICATION	2.0217834180877798E-6	DEFECT
// get the origin of the zoom selection in the Java2D space used for // drawing the chart (that is, before any scaling to fit the panel)	WITHOUT_CLASSIFICATION	0.9999999303809715	WITHOUT_CLASSIFICATION	6.961902850193999E-8	DEFECT
// suppresses compiler warning	WITHOUT_CLASSIFICATION	0.999999743950822	WITHOUT_CLASSIFICATION	2.560491779675365E-7	DEFECT
// create the chart...	WITHOUT_CLASSIFICATION	0.9999985738987163	WITHOUT_CLASSIFICATION	1.4261012838123405E-6	DEFECT
/* shape visible = */	WITHOUT_CLASSIFICATION	0.9999997124524997	WITHOUT_CLASSIFICATION	2.8754750025294287E-7	DEFECT
/* shape visible = */	WITHOUT_CLASSIFICATION	0.9999997124524997	WITHOUT_CLASSIFICATION	2.8754750025294287E-7	DEFECT
/* shape visible = */	WITHOUT_CLASSIFICATION	0.9999997124524997	WITHOUT_CLASSIFICATION	2.8754750025294287E-7	DEFECT
// we clone the chart because presumably there can be some delay // between putting this instance on the system clipboard and // actually having the getTransferData() method called...	WITHOUT_CLASSIFICATION	0.9999999999096466	WITHOUT_CLASSIFICATION	9.035331650203246E-11	DEFECT
// for efficiency, we just use the first, last and middle items to // compute a hashCode...	WITHOUT_CLASSIFICATION	0.9999998905927505	WITHOUT_CLASSIFICATION	1.0940724937977663E-7	DEFECT
// create a legend, if requested...	WITHOUT_CLASSIFICATION	0.9999885723716234	WITHOUT_CLASSIFICATION	1.1427628376650136E-5	DEFECT
// pass the click on to the plot... // rely on the plot to post a plot change event and redraw the chart...	WITHOUT_CLASSIFICATION	0.9852206878066407	WITHOUT_CLASSIFICATION	0.014779312193359264	DEFECT
// don't zoom unless the mouse pointer is in the plot's data area	WITHOUT_CLASSIFICATION	0.9999761772835982	WITHOUT_CLASSIFICATION	2.382271640178793E-5	DEFECT
// draw the label	WITHOUT_CLASSIFICATION	0.9999989137923284	WITHOUT_CLASSIFICATION	1.0862076716070919E-6	DEFECT
// now try to reject equality...	WITHOUT_CLASSIFICATION	0.9999939075911611	WITHOUT_CLASSIFICATION	6.092408838818505E-6	DEFECT
// no plot, no data	WITHOUT_CLASSIFICATION	0.9999983679629575	WITHOUT_CLASSIFICATION	1.6320370425117493E-6	DEFECT
// no plot, no data	WITHOUT_CLASSIFICATION	0.9999983679629575	WITHOUT_CLASSIFICATION	1.6320370425117493E-6	DEFECT
// if fixed auto range, then derive lower bound...	WITHOUT_CLASSIFICATION	0.9999533137761547	WITHOUT_CLASSIFICATION	4.668622384525112E-5	DEFECT
// if the axis is not visible, don't draw it...	WITHOUT_CLASSIFICATION	0.9990829177948999	WITHOUT_CLASSIFICATION	9.170822051000825E-4	DEFECT
// if the axis is not visible, don't draw it...	WITHOUT_CLASSIFICATION	0.9990829177948999	WITHOUT_CLASSIFICATION	9.170822051000825E-4	DEFECT
// if the axis is not visible, don't draw it...	WITHOUT_CLASSIFICATION	0.9990829177948999	WITHOUT_CLASSIFICATION	9.170822051000825E-4	DEFECT
// if the axis is not visible, don't draw it...	WITHOUT_CLASSIFICATION	0.9990829177948999	WITHOUT_CLASSIFICATION	9.170822051000825E-4	DEFECT
// add minor ticks (for gridlines)	WITHOUT_CLASSIFICATION	0.9999996122389233	WITHOUT_CLASSIFICATION	3.87761076636382E-7	DEFECT
// select a tick unit that is the next one bigger than the current // (log) range divided by 50	WITHOUT_CLASSIFICATION	0.9999651520220417	WITHOUT_CLASSIFICATION	3.484797795832878E-5	DEFECT
// look at lower and upper bounds...	WITHOUT_CLASSIFICATION	0.9998966354644968	WITHOUT_CLASSIFICATION	1.0336453550314615E-4	DEFECT
// it is unlikely that 'state' will be null, but check anyway...	WITHOUT_CLASSIFICATION	0.99995474598097	WITHOUT_CLASSIFICATION	4.525401902997575E-5	DEFECT
// create a new space object if one wasn't supplied...	WITHOUT_CLASSIFICATION	0.9999969196523569	WITHOUT_CLASSIFICATION	3.080347642974771E-6	DEFECT
// work out the number of periods to skip for labelling	WITHOUT_CLASSIFICATION	0.9996798323307312	WITHOUT_CLASSIFICATION	3.2016766926883827E-4	DEFECT
// draw the arrow...	WITHOUT_CLASSIFICATION	0.9999758127427211	WITHOUT_CLASSIFICATION	2.4187257278930447E-5	DEFECT
// set flag true if negative values not allowed and the // lower bound is between 0 and 10:	WITHOUT_CLASSIFICATION	0.9999889397472118	WITHOUT_CLASSIFICATION	1.1060252788231947E-5	DEFECT
//parameter value is < -10 //calculate log using positive value:	WITHOUT_CLASSIFICATION	0.9999988845325265	WITHOUT_CLASSIFICATION	1.1154674735143858E-6	DEFECT
//calculate power using positive value; then negate	WITHOUT_CLASSIFICATION	0.999999487061615	WITHOUT_CLASSIFICATION	5.129383849057474E-7	DEFECT
//parameter value is <= 0 //use as-is	WITHOUT_CLASSIFICATION	0.9999986815865605	WITHOUT_CLASSIFICATION	1.3184134394956861E-6	DEFECT
//if less than 1.0 then make it 1.0 //subtract out margin and get exponential value:	WITHOUT_CLASSIFICATION	0.9999991560119065	WITHOUT_CLASSIFICATION	8.439880936267255E-7	DEFECT
//negatives not allowed and lower range bound is zero //use data range bound instead	WITHOUT_CLASSIFICATION	0.9999816626344318	WITHOUT_CLASSIFICATION	1.8337365568179942E-5	DEFECT
//get positive exponent //create multiplier value //multiply, round up, and divide for bound value:	WITHOUT_CLASSIFICATION	0.9999994557059232	WITHOUT_CLASSIFICATION	5.442940768049364E-7	DEFECT
//negatives allowed or upper bound not between 0 & 1 //if flag then change to log version of highest value to // make range begin at a 10^n value; else use nearest int	WITHOUT_CLASSIFICATION	0.9999978323255738	WITHOUT_CLASSIFICATION	2.167674426239329E-6	DEFECT
//get log10 version of lower bound and round to integer:	WITHOUT_CLASSIFICATION	0.999993128359204	WITHOUT_CLASSIFICATION	6.8716407960243435E-6	DEFECT
//first tick of series, or not too small a value and // one of first 3 ticks, or last tick to be displayed // set exact number of fractional digits to be shown // (no effect if showing "1e#"-style ticks):	WITHOUT_CLASSIFICATION	0.9994015825808371	WITHOUT_CLASSIFICATION	5.984174191628606E-4	DEFECT
//did zero tick last iteration //clear flag //create tick label string: //show tick label if "1e#"-style and it's one // of the first two, if it's the first or last // in the set, or if it's 1-5; beyond that // show fewer as the values get larger:	WITHOUT_CLASSIFICATION	0.9999999916506777	WITHOUT_CLASSIFICATION	8.349322401875622E-9	DEFECT
// as far as I know, the Locale for the calendar only affects week // number calculations, and since DateTickUnit doesn't do week // arithmetic, the default locale (whatever it is) should be fine // here...	WITHOUT_CLASSIFICATION	0.9999737516918961	WITHOUT_CLASSIFICATION	2.624830810391912E-5	DEFECT
// as far as I know, the Locale for the calendar only affects week // number calculations, and since DateTickUnit doesn't do week // arithmetic, the default locale (whatever it is) should be fine // here...	WITHOUT_CLASSIFICATION	0.9999737516918961	WITHOUT_CLASSIFICATION	2.624830810391912E-5	DEFECT
// start with the current tick unit...	WITHOUT_CLASSIFICATION	0.9999065614177961	WITHOUT_CLASSIFICATION	9.343858220387746E-5	DEFECT
// all tick labels have the same width (equal to the height of // the font)...	WITHOUT_CLASSIFICATION	0.9999719488055273	WITHOUT_CLASSIFICATION	2.8051194472754807E-5	DEFECT
// draw the tick marks and labels...	WITHOUT_CLASSIFICATION	0.9999827245199777	WITHOUT_CLASSIFICATION	1.7275480022219273E-5	DEFECT
// we call refresh ticks just to get the maximum width or height	WITHOUT_CLASSIFICATION	0.9999970032637477	WITHOUT_CLASSIFICATION	2.9967362523149483E-6	DEFECT
// calculate midnight of first monday after 1/1/1900 relative to // current locale	WITHOUT_CLASSIFICATION	0.9999987532294168	WITHOUT_CLASSIFICATION	1.2467705832112182E-6	DEFECT
// cycle through all the segments contained in the BaseTimeline // exception segment	WITHOUT_CLASSIFICATION	0.999999812389218	WITHOUT_CLASSIFICATION	1.8761078207118102E-7	DEFECT
// this is not one of our included segment, skip it	WITHOUT_CLASSIFICATION	0.9999127251245801	WITHOUT_CLASSIFICATION	8.727487541995375E-5	DEFECT
// first test for equality (contains or contained)	WITHOUT_CLASSIFICATION	0.999999974439557	WITHOUT_CLASSIFICATION	2.556044298309257E-8	DEFECT
// key not found	WITHOUT_CLASSIFICATION	0.9999710096420941	WITHOUT_CLASSIFICATION	2.8990357905997355E-5	DEFECT
// Compute number of labels	WITHOUT_CLASSIFICATION	0.9999998398561988	WITHOUT_CLASSIFICATION	1.601438011995821E-7	DEFECT
// TOP	WITHOUT_CLASSIFICATION	0.9999628286990022	WITHOUT_CLASSIFICATION	3.717130099776235E-5	DEFECT
// RIGHT	WITHOUT_CLASSIFICATION	0.9999455410432807	WITHOUT_CLASSIFICATION	5.4458956719407126E-5	DEFECT
// argument checking delegated...	WITHOUT_CLASSIFICATION	0.9999999658737975	WITHOUT_CLASSIFICATION	3.412620247568581E-8	DEFECT
//gets the outline stroke width of the plot	WITHOUT_CLASSIFICATION	0.9996622755669523	WITHOUT_CLASSIFICATION	3.377244330476655E-4	DEFECT
// first arrange without constraints, and see if this fits within // the required ranges...	WITHOUT_CLASSIFICATION	0.9999937731672064	WITHOUT_CLASSIFICATION	6.226832793510777E-6	DEFECT
// first arrange without constraints, and see if this fits within // the required ranges...	WITHOUT_CLASSIFICATION	0.9999937731672064	WITHOUT_CLASSIFICATION	6.226832793510777E-6	DEFECT
// set a theme using the new shadow generator feature available in // 1.0.14 - for backwards compatibility it is not enabled by default	WITHOUT_CLASSIFICATION	0.9999996004123101	WITHOUT_CLASSIFICATION	3.9958768990957503E-7	DEFECT
// ****************************************************************** //  More than 150 demo applications are included with the JFreeChart //  Developer Guide...for more information, see: // //  >   http://www.object-refinery.com/jfreechart/guide.html // // ******************************************************************	WITHOUT_CLASSIFICATION	0.9999898133574376	WITHOUT_CLASSIFICATION	1.0186642562375218E-5	DEFECT
//dmo: added this panel for colorbar control. (start dmo additions)	WITHOUT_CLASSIFICATION	0.9999767234462922	WITHOUT_CLASSIFICATION	2.3276553707811398E-5	DEFECT
//dmo: (end dmo additions)	WITHOUT_CLASSIFICATION	0.9999444378913976	WITHOUT_CLASSIFICATION	5.556210860246798E-5	DEFECT
//  No op	WITHOUT_CLASSIFICATION	0.9999887246807468	WITHOUT_CLASSIFICATION	1.1275319253054358E-5	DEFECT
// defer argument checks...	WITHOUT_CLASSIFICATION	0.9999999675137969	WITHOUT_CLASSIFICATION	3.248620304091013E-8	DEFECT
// defer argument checks...	WITHOUT_CLASSIFICATION	0.9999999675137969	WITHOUT_CLASSIFICATION	3.248620304091013E-8	DEFECT
// defer argument checks...	WITHOUT_CLASSIFICATION	0.9999999675137969	WITHOUT_CLASSIFICATION	3.248620304091013E-8	DEFECT
// defer argument checks...	WITHOUT_CLASSIFICATION	0.9999999675137969	WITHOUT_CLASSIFICATION	3.248620304091013E-8	DEFECT
// defer argument checks...	WITHOUT_CLASSIFICATION	0.9999999675137969	WITHOUT_CLASSIFICATION	3.248620304091013E-8	DEFECT
// defer argument checks...	WITHOUT_CLASSIFICATION	0.9999999675137969	WITHOUT_CLASSIFICATION	3.248620304091013E-8	DEFECT
// defer argument checks...	WITHOUT_CLASSIFICATION	0.9999999675137969	WITHOUT_CLASSIFICATION	3.248620304091013E-8	DEFECT
// defer argument checks...	WITHOUT_CLASSIFICATION	0.9999999675137969	WITHOUT_CLASSIFICATION	3.248620304091013E-8	DEFECT
// defer argument checks...	WITHOUT_CLASSIFICATION	0.9999999675137969	WITHOUT_CLASSIFICATION	3.248620304091013E-8	DEFECT
// pass on the event to the auxiliary handlers	WITHOUT_CLASSIFICATION	0.9999895699562299	WITHOUT_CLASSIFICATION	1.043004377008668E-5	DEFECT
// pass on the event to the auxiliary handlers	WITHOUT_CLASSIFICATION	0.9999895699562299	WITHOUT_CLASSIFICATION	1.043004377008668E-5	DEFECT
// does nothing unless overridden	WITHOUT_CLASSIFICATION	0.999998185478518	WITHOUT_CLASSIFICATION	1.814521481956255E-6	DEFECT
// does nothing unless overridden	WITHOUT_CLASSIFICATION	0.999998185478518	WITHOUT_CLASSIFICATION	1.814521481956255E-6	DEFECT
//no initial zoom rectangle exists but the handler is set //as life handler unregister	WITHOUT_CLASSIFICATION	0.999999866684993	WITHOUT_CLASSIFICATION	1.3331500699902647E-7	DEFECT
//float midX = (float) (minX + (plotArea.getWidth() * getRotateX())); //float midY = (float) (minY + (plotArea.getHeight() * getRotateY()));	WITHOUT_CLASSIFICATION	0.999989344865305	WITHOUT_CLASSIFICATION	1.065513469504164E-5	DEFECT
/// we have rotation	WITHOUT_CLASSIFICATION	0.9999827675172992	WITHOUT_CLASSIFICATION	1.7232482700878072E-5	DEFECT
// store the plot and its weight	WITHOUT_CLASSIFICATION	0.9999941043702782	WITHOUT_CLASSIFICATION	5.89562972168895E-6	DEFECT
// store the plot and its weight	WITHOUT_CLASSIFICATION	0.9999941043702782	WITHOUT_CLASSIFICATION	5.89562972168895E-6	DEFECT
// work out the space required by the domain axis...	WITHOUT_CLASSIFICATION	0.998950240833266	WITHOUT_CLASSIFICATION	0.0010497591667340562	DEFECT
// work out the maximum height or width of the non-shared axes...	WITHOUT_CLASSIFICATION	0.9980727164740572	WITHOUT_CLASSIFICATION	0.0019272835259427782	DEFECT
// calculate plotAreas of all sub-plots, maximum vertical/horizontal // axis width/height	WITHOUT_CLASSIFICATION	0.999975282295726	WITHOUT_CLASSIFICATION	2.471770427404967E-5	DEFECT
// set up info collection...	WITHOUT_CLASSIFICATION	0.999999177166589	WITHOUT_CLASSIFICATION	8.228334109975627E-7	DEFECT
// set up info collection...	WITHOUT_CLASSIFICATION	0.999999177166589	WITHOUT_CLASSIFICATION	8.228334109975627E-7	DEFECT
// adjust the drawing area for plot insets (if any)...	WITHOUT_CLASSIFICATION	0.9999847718992008	WITHOUT_CLASSIFICATION	1.522810079927431E-5	DEFECT
// adjust the drawing area for plot insets (if any)...	WITHOUT_CLASSIFICATION	0.9999847718992008	WITHOUT_CLASSIFICATION	1.522810079927431E-5	DEFECT
// after setting up all the subplots, the shared range axis may need // reconfiguring	WITHOUT_CLASSIFICATION	0.9999999136435709	WITHOUT_CLASSIFICATION	8.635642916162131E-8	DEFECT
// adjust the plot area by the interior spacing value	WITHOUT_CLASSIFICATION	0.9999999516857786	WITHOUT_CLASSIFICATION	4.831422138678697E-8	DEFECT
// if we are drawing a perfect circle, we need to readjust the top left // coordinates of the drawing area for the arcs to arrive at this // effect.	WITHOUT_CLASSIFICATION	0.9999999970915427	WITHOUT_CLASSIFICATION	2.9084572378900114E-9	DEFECT
// establish the coordinates of the top left corner of the drawing area	WITHOUT_CLASSIFICATION	0.9999999919486882	WITHOUT_CLASSIFICATION	8.051311808574138E-9	DEFECT
// draw the sections at the top of the pie (and set up tooltips)...	WITHOUT_CLASSIFICATION	0.9999978576244025	WITHOUT_CLASSIFICATION	2.1423755974844612E-6	DEFECT
// the pie sections are arranged ANTICLOCKWISE	WITHOUT_CLASSIFICATION	0.9999991881759532	WITHOUT_CLASSIFICATION	8.118240467676271E-7	DEFECT
// starts at the back and finishes at the front // (wrapping the left side)	WITHOUT_CLASSIFICATION	0.9999771114573698	WITHOUT_CLASSIFICATION	2.2888542630234506E-5	DEFECT
// if the plot area is too small, just return...	WITHOUT_CLASSIFICATION	0.9999997776316624	WITHOUT_CLASSIFICATION	2.2236833756438954E-7	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9999955225021957	WITHOUT_CLASSIFICATION	4.4774978043964495E-6	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9999955225021957	WITHOUT_CLASSIFICATION	4.4774978043964495E-6	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9999955225021957	WITHOUT_CLASSIFICATION	4.4774978043964495E-6	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9999955225021957	WITHOUT_CLASSIFICATION	4.4774978043964495E-6	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9999955225021957	WITHOUT_CLASSIFICATION	4.4774978043964495E-6	DEFECT
//turn off anti-aliasing when filling rectangles	WITHOUT_CLASSIFICATION	0.9999996397335433	WITHOUT_CLASSIFICATION	3.602664566583304E-7	DEFECT
// add an entity for the item...	WITHOUT_CLASSIFICATION	0.9999495881493805	WITHOUT_CLASSIFICATION	5.0411850619468914E-5	DEFECT
// add an entity for the item...	WITHOUT_CLASSIFICATION	0.9999495881493805	WITHOUT_CLASSIFICATION	5.0411850619468914E-5	DEFECT
// delegate 'info' and 'source' argument checks...	WITHOUT_CLASSIFICATION	0.9999999826380311	WITHOUT_CLASSIFICATION	1.736196888246569E-8	DEFECT
// if the source point doesn't fall within a subplot, we do the // zoom on all subplots...	WITHOUT_CLASSIFICATION	0.9999990592454204	WITHOUT_CLASSIFICATION	9.407545795278481E-7	DEFECT
// if the source point doesn't fall within a subplot, we do the // zoom on all subplots...	WITHOUT_CLASSIFICATION	0.9999990592454204	WITHOUT_CLASSIFICATION	9.407545795278481E-7	DEFECT
// is there an override?	WITHOUT_CLASSIFICATION	0.9999995817340949	WITHOUT_CLASSIFICATION	4.182659051451533E-7	DEFECT
// is there an override?	WITHOUT_CLASSIFICATION	0.9999995817340949	WITHOUT_CLASSIFICATION	4.182659051451533E-7	DEFECT
// nothing defined - do we autoPopulate?	WITHOUT_CLASSIFICATION	0.9999999858772188	WITHOUT_CLASSIFICATION	1.4122781173131764E-8	DEFECT
// null argument check delegated...	WITHOUT_CLASSIFICATION	0.9999999942359507	WITHOUT_CLASSIFICATION	5.764049387839238E-9	DEFECT
// null argument check delegated...	WITHOUT_CLASSIFICATION	0.9999999942359507	WITHOUT_CLASSIFICATION	5.764049387839238E-9	DEFECT
// null argument check delegated...	WITHOUT_CLASSIFICATION	0.9999999942359507	WITHOUT_CLASSIFICATION	5.764049387839238E-9	DEFECT
// the explode area defines the max circle/ellipse for the exploded // pie sections.  it is defined by shrinking the linkArea by the // linkMargin factor.	WITHOUT_CLASSIFICATION	0.9999994063235267	WITHOUT_CLASSIFICATION	5.93676473357226E-7	DEFECT
// work out the mid angle (0 - 90 and 270 - 360) = right, // otherwise left	WITHOUT_CLASSIFICATION	0.9996633127294757	WITHOUT_CLASSIFICATION	3.366872705242994E-4	DEFECT
// delegate...	WITHOUT_CLASSIFICATION	0.999987187642393	WITHOUT_CLASSIFICATION	1.2812357606936273E-5	DEFECT
// delegate...	WITHOUT_CLASSIFICATION	0.999987187642393	WITHOUT_CLASSIFICATION	1.2812357606936273E-5	DEFECT
// delegate...	WITHOUT_CLASSIFICATION	0.999987187642393	WITHOUT_CLASSIFICATION	1.2812357606936273E-5	DEFECT
// delegate...	WITHOUT_CLASSIFICATION	0.999987187642393	WITHOUT_CLASSIFICATION	1.2812357606936273E-5	DEFECT
// delegate...	WITHOUT_CLASSIFICATION	0.999987187642393	WITHOUT_CLASSIFICATION	1.2812357606936273E-5	DEFECT
// no axis, no gridlines...	WITHOUT_CLASSIFICATION	0.9999998258663302	WITHOUT_CLASSIFICATION	1.741336697702991E-7	DEFECT
// can't zoom domain axis	WITHOUT_CLASSIFICATION	0.9999980816457217	WITHOUT_CLASSIFICATION	1.9183542782800067E-6	DEFECT
// can't zoom domain axis	WITHOUT_CLASSIFICATION	0.9999980816457217	WITHOUT_CLASSIFICATION	1.9183542782800067E-6	DEFECT
// the above should cover all the options...	WITHOUT_CLASSIFICATION	0.9999964889369996	WITHOUT_CLASSIFICATION	3.5110630003170946E-6	DEFECT
// get the source coordinate - this plot has always a VERTICAL // orientation	WITHOUT_CLASSIFICATION	0.9999179266095366	WITHOUT_CLASSIFICATION	8.207339046341078E-5	DEFECT
// get the source coordinate - this plot has always a VERTICAL // orientation	WITHOUT_CLASSIFICATION	0.9999179266095366	WITHOUT_CLASSIFICATION	8.207339046341078E-5	DEFECT
// return the override, if there is one...	WITHOUT_CLASSIFICATION	0.9999980814852791	WITHOUT_CLASSIFICATION	1.9185147208106884E-6	DEFECT
// PlotOrientation.VERTICAL	WITHOUT_CLASSIFICATION	0.9999989555550252	WITHOUT_CLASSIFICATION	1.0444449748168398E-6	DEFECT
// PlotOrientation.VERTICAL	WITHOUT_CLASSIFICATION	0.9999989555550252	WITHOUT_CLASSIFICATION	1.0444449748168398E-6	DEFECT
// PlotOrientation.VERTICAL	WITHOUT_CLASSIFICATION	0.9999989555550252	WITHOUT_CLASSIFICATION	1.0444449748168398E-6	DEFECT
// no domain axis to zoom	WITHOUT_CLASSIFICATION	0.9999999295311732	WITHOUT_CLASSIFICATION	7.046882675520553E-8	DEFECT
// no domain axis to zoom	WITHOUT_CLASSIFICATION	0.9999999295311732	WITHOUT_CLASSIFICATION	7.046882675520553E-8	DEFECT
// the indicator bounds is calculated from the templateValue (which // determines the minimum size), the maxTemplateValue (which, if // specified, provides a maximum size) and the actual value	WITHOUT_CLASSIFICATION	0.999999684385049	WITHOUT_CLASSIFICATION	3.1561495093869437E-7	DEFECT
// startAngle	WITHOUT_CLASSIFICATION	0.9999994489136231	WITHOUT_CLASSIFICATION	5.510863768147779E-7	DEFECT
// startAngle	WITHOUT_CLASSIFICATION	0.9999994489136231	WITHOUT_CLASSIFICATION	5.510863768147779E-7	DEFECT
// extent	WITHOUT_CLASSIFICATION	0.9999908967099197	WITHOUT_CLASSIFICATION	9.103290080330083E-6	DEFECT
// majorTickIncrement // majorTickLength // majorTickPaint // majorTickStroke // minorTickCount // minorTickLength // minorTickPaint // minorTickStroke // tickLabelOffset // tickLabelFont // tickLabelsVisible // tickLabelFormatter // firstTickLabelsVisible	WITHOUT_CLASSIFICATION	0.9999995086037748	WITHOUT_CLASSIFICATION	4.913962251709377E-7	DEFECT
// SERIES VISIBLE IN LEGEND (not yet respected by all renderers)	WITHOUT_CLASSIFICATION	0.9999055486859818	WITHOUT_CLASSIFICATION	9.445131401821938E-5	DEFECT
// PAINT	WITHOUT_CLASSIFICATION	0.9999936428427052	WITHOUT_CLASSIFICATION	6.357157294860465E-6	DEFECT
// STROKE	WITHOUT_CLASSIFICATION	0.9999973929955459	WITHOUT_CLASSIFICATION	2.6070044539984906E-6	DEFECT
// itemLabelFontList // baseItemLabelFont // itemLabelPaintList // baseItemLabelPaint // positiveItemLabelPositionList // basePositiveItemLabelPosition // negativeItemLabelPositionList // baseNegativeItemLabelPosition // itemLabelAnchorOffset // createEntityList // baseCreateEntities	WITHOUT_CLASSIFICATION	0.9999999936458852	WITHOUT_CLASSIFICATION	6.354114881008569E-9	DEFECT
// for value in bounds, do the lookup...	WITHOUT_CLASSIFICATION	0.9999922448199278	WITHOUT_CLASSIFICATION	7.755180072288777E-6	DEFECT
// for data in ascending order by x-value, we are (broadly) looking // for the index of the highest x-value that is less than xLow	WITHOUT_CLASSIFICATION	0.9999997820712375	WITHOUT_CLASSIFICATION	2.1792876248320533E-7	DEFECT
// we don't know anything about the ordering of the x-values, // but we can still skip any trailing values that fall outside the // range...	WITHOUT_CLASSIFICATION	0.9999651861730471	WITHOUT_CLASSIFICATION	3.481382695298173E-5	DEFECT
// leave the y values (y1, y0) untranslated as it is going to be be // stacked up later by previous series values, after this it will be // translated.	WITHOUT_CLASSIFICATION	0.9999692421521514	WITHOUT_CLASSIFICATION	3.075784784857583E-5	DEFECT
// get the previous point and the next point so we can calculate a // "hot spot" for the area (used by the chart entity)...	WITHOUT_CLASSIFICATION	0.9999997095795383	WITHOUT_CLASSIFICATION	2.9042046157722834E-7	DEFECT
// FIXME: calculate xx0	WITHOUT_CLASSIFICATION	0.7775984197137424	WITHOUT_CLASSIFICATION	0.22240158028625762	DEFECT
// LEFT POLYGON	WITHOUT_CLASSIFICATION	0.9999990896755366	WITHOUT_CLASSIFICATION	9.103244634419692E-7	DEFECT
// calculate the bar width	WITHOUT_CLASSIFICATION	0.9999979748607623	WITHOUT_CLASSIFICATION	2.0251392377710886E-6	DEFECT
// wait till we are at the last item for the row then draw the // whole stack at once	WITHOUT_CLASSIFICATION	0.9999969874342969	WITHOUT_CLASSIFICATION	3.012565703029613E-6	DEFECT
// a list to store the series index and bar region, so we can draw // all the labels at the end...	WITHOUT_CLASSIFICATION	0.9999902444775742	WITHOUT_CLASSIFICATION	9.75552242581029E-6	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9999994668407179	WITHOUT_CLASSIFICATION	5.331592820674533E-7	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9999994668407179	WITHOUT_CLASSIFICATION	5.331592820674533E-7	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9999994668407179	WITHOUT_CLASSIFICATION	5.331592820674533E-7	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9999994668407179	WITHOUT_CLASSIFICATION	5.331592820674533E-7	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9999994668407179	WITHOUT_CLASSIFICATION	5.331592820674533E-7	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9999994668407179	WITHOUT_CLASSIFICATION	5.331592820674533E-7	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9999994668407179	WITHOUT_CLASSIFICATION	5.331592820674533E-7	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9999994668407179	WITHOUT_CLASSIFICATION	5.331592820674533E-7	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9999994668407179	WITHOUT_CLASSIFICATION	5.331592820674533E-7	DEFECT
// do nothing if item is not visible	WITHOUT_CLASSIFICATION	0.9999895885803238	WITHOUT_CLASSIFICATION	1.0411419676251798E-5	DEFECT
// current data point...	WITHOUT_CLASSIFICATION	0.9998921698130596	WITHOUT_CLASSIFICATION	1.078301869403892E-4	DEFECT
// clip left and right bounds to data area	WITHOUT_CLASSIFICATION	0.9999907251965197	WITHOUT_CLASSIFICATION	9.274803480312802E-6	DEFECT
// clip left and right bounds to data area	WITHOUT_CLASSIFICATION	0.9999907251965197	WITHOUT_CLASSIFICATION	9.274803480312802E-6	DEFECT
// PlotOrientation.HORIZONTAL	WITHOUT_CLASSIFICATION	0.999999168461065	WITHOUT_CLASSIFICATION	8.315389349878581E-7	DEFECT
// bar is not visible	WITHOUT_CLASSIFICATION	0.9999848089935964	WITHOUT_CLASSIFICATION	1.5191006403549358E-5	DEFECT
// bar is not visible	WITHOUT_CLASSIFICATION	0.9999848089935964	WITHOUT_CLASSIFICATION	1.5191006403549358E-5	DEFECT
// bar is not visible	WITHOUT_CLASSIFICATION	0.9999848089935964	WITHOUT_CLASSIFICATION	1.5191006403549358E-5	DEFECT
// draw the outline...	WITHOUT_CLASSIFICATION	0.9999940291563242	WITHOUT_CLASSIFICATION	5.970843675737413E-6	DEFECT
// collect entity and tool tip information...	WITHOUT_CLASSIFICATION	0.9999429938483338	WITHOUT_CLASSIFICATION	5.700615166615229E-5	DEFECT
// collect entity and tool tip information...	WITHOUT_CLASSIFICATION	0.9999429938483338	WITHOUT_CLASSIFICATION	5.700615166615229E-5	DEFECT
// collect entity and tool tip information...	WITHOUT_CLASSIFICATION	0.9999429938483338	WITHOUT_CLASSIFICATION	5.700615166615229E-5	DEFECT
// collect entity and tool tip information...	WITHOUT_CLASSIFICATION	0.9999429938483338	WITHOUT_CLASSIFICATION	5.700615166615229E-5	DEFECT
// collect entity and tool tip information...	WITHOUT_CLASSIFICATION	0.9999429938483338	WITHOUT_CLASSIFICATION	5.700615166615229E-5	DEFECT
// collect entity and tool tip information...	WITHOUT_CLASSIFICATION	0.9999429938483338	WITHOUT_CLASSIFICATION	5.700615166615229E-5	DEFECT
// calculate bar width...	WITHOUT_CLASSIFICATION	0.9999818151805079	WITHOUT_CLASSIFICATION	1.818481949214974E-5	DEFECT
// FIXME: add setBaseItemLabelGenerator(CategoryItemLabelGenerator, //            boolean) ?	WITHOUT_CLASSIFICATION	0.9823742113249453	WITHOUT_CLASSIFICATION	0.0176257886750547	DEFECT
//// ITEM LABEL PAINT  /////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999869855713901	WITHOUT_CLASSIFICATION	1.301442860992164E-5	DEFECT
// last series, so we are ready to draw the min and max	WITHOUT_CLASSIFICATION	0.9999999654108906	WITHOUT_CLASSIFICATION	3.458910932376876E-8	DEFECT
// draw mean - SPECIAL AIMS REQUIREMENT...	WITHOUT_CLASSIFICATION	0.9999818474947247	WITHOUT_CLASSIFICATION	1.8152505275217593E-5	DEFECT
// From outlier array sort out which are outliers and put these into a // list If there are any farouts, set the flag on the // OutlierListCollection	WITHOUT_CLASSIFICATION	0.9999999016269733	WITHOUT_CLASSIFICATION	9.837302682619189E-8	DEFECT
// avoid possible sun.dc.pr.PRException: endPath: bad path	WITHOUT_CLASSIFICATION	0.9998151185732986	WITHOUT_CLASSIFICATION	1.8488142670137464E-4	DEFECT
// avoid possible sun.dc.pr.PRException: endPath: bad path	WITHOUT_CLASSIFICATION	0.9998151185732986	WITHOUT_CLASSIFICATION	1.8488142670137464E-4	DEFECT
// Add the last point (x,0)	WITHOUT_CLASSIFICATION	0.999999299044934	WITHOUT_CLASSIFICATION	7.009550659835248E-7	DEFECT
// Add the last point (x,0)	WITHOUT_CLASSIFICATION	0.999999299044934	WITHOUT_CLASSIFICATION	7.009550659835248E-7	DEFECT
// check if initial polygon needs to be clipped	WITHOUT_CLASSIFICATION	0.9999941794597981	WITHOUT_CLASSIFICATION	5.820540201948224E-6	DEFECT
// never updated the subtrahend if it is implied to be zero	WITHOUT_CLASSIFICATION	0.9999992731786269	WITHOUT_CLASSIFICATION	7.268213731681516E-7	DEFECT
// check if line segments are colinear	WITHOUT_CLASSIFICATION	0.9999998355527263	WITHOUT_CLASSIFICATION	1.6444727372370066E-7	DEFECT
// clear the point vectors	WITHOUT_CLASSIFICATION	0.9999997552645318	WITHOUT_CLASSIFICATION	2.447354681686553E-7	DEFECT
//// ITEM LABELS VISIBLE //////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999860096749252	WITHOUT_CLASSIFICATION	1.3990325074873822E-5	DEFECT
// we don't need the sign	WITHOUT_CLASSIFICATION	0.9998826087868488	WITHOUT_CLASSIFICATION	1.1739121315120306E-4	DEFECT
// fillType == TO_UPPER_BOUND	WITHOUT_CLASSIFICATION	0.999996052233915	WITHOUT_CLASSIFICATION	3.947766085036125E-6	DEFECT
/*      solve linear system with tridiagonal n by n matrix a        using Gaussian elimination *without* pivoting        where   a(i,i-1) = sub[i]  for 2<=i<=n        a(i,i)   = diag[i] for 1<=i<=n        a(i,i+1) = sup[i]  for 1<=i<=n-1        (the values sub[1], sup[n] are ignored)        right hand side vector b[1:n] is overwritten with solution        NOTE: 1...n is used in all arrays, 0 is unused */	WITHOUT_CLASSIFICATION	0.999999607657993	WITHOUT_CLASSIFICATION	3.923420069089131E-7	DEFECT
// this represents the situation // for drawing a horizontal bar.	WITHOUT_CLASSIFICATION	0.9999864118593663	WITHOUT_CLASSIFICATION	1.3588140633760131E-5	DEFECT
// draw median	WITHOUT_CLASSIFICATION	0.9999991055730098	WITHOUT_CLASSIFICATION	8.94426990234256E-7	DEFECT
//  Check that the graph being served was created by the current user //  or that it begins with "public"	WITHOUT_CLASSIFICATION	0.9999977526042447	WITHOUT_CLASSIFICATION	2.247395755299985E-6	DEFECT
// the textAlignment and the horizontalAlignment are separate things, // but it makes sense for the default textAlignment to match the // title's horizontal alignment...	WITHOUT_CLASSIFICATION	0.999999269713681	WITHOUT_CLASSIFICATION	7.302863189577712E-7	DEFECT
// we don't use the calendar or numberFormat fields, but equals(Object) // is failing without them being non-null	WITHOUT_CLASSIFICATION	0.9999035867195343	WITHOUT_CLASSIFICATION	9.641328046578146E-5	DEFECT
/**/	WITHOUT_CLASSIFICATION	0.9977822159022475	WITHOUT_CLASSIFICATION	0.0022177840977525994	DEFECT
/**/	WITHOUT_CLASSIFICATION	0.9977822159022475	WITHOUT_CLASSIFICATION	0.0022177840977525994	DEFECT
// adjust text bounds to match string position	WITHOUT_CLASSIFICATION	0.9999999433126986	WITHOUT_CLASSIFICATION	5.668730140831589E-8	DEFECT
// now fetch the row data - need to bear in mind that the row // structure may not have an entry for the column key, but that we // have already checked that the key is valid for the 2D structure	WITHOUT_CLASSIFICATION	0.9999997927463503	WITHOUT_CLASSIFICATION	2.0725364968021966E-7	DEFECT
// defer null argument check	WITHOUT_CLASSIFICATION	0.9999999962274889	WITHOUT_CLASSIFICATION	3.772511030685319E-9	DEFECT
// defer null argument check	WITHOUT_CLASSIFICATION	0.9999999962274889	WITHOUT_CLASSIFICATION	3.772511030685319E-9	DEFECT
// set up the series names...	WITHOUT_CLASSIFICATION	0.9999989897050062	WITHOUT_CLASSIFICATION	1.0102949937348337E-6	DEFECT
// is the category valid?	WITHOUT_CLASSIFICATION	0.999999457083359	WITHOUT_CLASSIFICATION	5.429166408868481E-7	DEFECT
//create a temporary vector // set x to some arbitary value (used below)	WITHOUT_CLASSIFICATION	0.9999999552476294	WITHOUT_CLASSIFICATION	4.475237055642413E-8	DEFECT
// look for any keys that we don't already know about...	WITHOUT_CLASSIFICATION	0.99660720650313	WITHOUT_CLASSIFICATION	0.003392793496870109	DEFECT
//  Iterate and find all keys below threshold percentThreshold	WITHOUT_CLASSIFICATION	0.9999848350491016	WITHOUT_CLASSIFICATION	1.5164950898333084E-5	DEFECT
// handle special case of BoxAndWhiskerDataset	WITHOUT_CLASSIFICATION	0.9999975903731049	WITHOUT_CLASSIFICATION	2.409626895201444E-6	DEFECT
// standard case - plain XYDataset	WITHOUT_CLASSIFICATION	0.9999987547950342	WITHOUT_CLASSIFICATION	1.2452049657972762E-6	DEFECT
// hasn't implemented RangeInfo, so we'll have to iterate...	WITHOUT_CLASSIFICATION	0.9999571240725297	WITHOUT_CLASSIFICATION	4.287592747032135E-5	DEFECT
// hasn't implemented RangeInfo, so we'll have to iterate...	WITHOUT_CLASSIFICATION	0.9999571240725297	WITHOUT_CLASSIFICATION	4.287592747032135E-5	DEFECT
// CASE 1 : Comparing to another Second object // -------------------------------------------	WITHOUT_CLASSIFICATION	0.9999577213444552	WITHOUT_CLASSIFICATION	4.2278655544826665E-5	DEFECT
// CASE 2 : Comparing to another TimePeriod object // -----------------------------------------------	WITHOUT_CLASSIFICATION	0.999992685827598	WITHOUT_CLASSIFICATION	7.314172402003271E-6	DEFECT
// CASE 2 : Comparing to another TimePeriod object // -----------------------------------------------	WITHOUT_CLASSIFICATION	0.999992685827598	WITHOUT_CLASSIFICATION	7.314172402003271E-6	DEFECT
// CASE 2 : Comparing to another TimePeriod object // -----------------------------------------------	WITHOUT_CLASSIFICATION	0.999992685827598	WITHOUT_CLASSIFICATION	7.314172402003271E-6	DEFECT
// CASE 2 : Comparing to another TimePeriod object // -----------------------------------------------	WITHOUT_CLASSIFICATION	0.999992685827598	WITHOUT_CLASSIFICATION	7.314172402003271E-6	DEFECT
// remove old items if necessary, but // don't notify anyone, because that // happens next anyway...	WITHOUT_CLASSIFICATION	0.9172843759715561	WITHOUT_CLASSIFICATION	0.0827156240284439	DEFECT
// get the current data item...	WITHOUT_CLASSIFICATION	0.9999816855451865	WITHOUT_CLASSIFICATION	1.8314454813480247E-5	DEFECT
// get the current data item...	WITHOUT_CLASSIFICATION	0.9999816855451865	WITHOUT_CLASSIFICATION	1.8314454813480247E-5	DEFECT
// The next 3 functions override the base-class implementation of // the DomainInfo interface.  Using saved limits (updated by // each updateTime() call), improves performance. //	WITHOUT_CLASSIFICATION	0.9986645313872132	WITHOUT_CLASSIFICATION	0.001335468612786744	DEFECT
// deregister the collection as a change listener to each series in the // collection	WITHOUT_CLASSIFICATION	0.9999998232038733	WITHOUT_CLASSIFICATION	1.7679612675472242E-7	DEFECT
// alternatively, sometimes the first few days of the year are // considered to fall in the *last* week of the previous year...	WITHOUT_CLASSIFICATION	0.9999993204872585	WITHOUT_CLASSIFICATION	6.79512741544456E-7	DEFECT
// Unregister the collection as a change listener to each series in // the collection.	WITHOUT_CLASSIFICATION	0.9999999858280536	WITHOUT_CLASSIFICATION	1.4171946446305072E-8	DEFECT
// if the series is sorted, the negative index is a result from // Collections.binarySearch() and tells us where to insert the // new item...otherwise it will be just -1 and we should just // append the value to the list...	WITHOUT_CLASSIFICATION	0.999996514576818	WITHOUT_CLASSIFICATION	3.4854231818863194E-6	DEFECT
// pass mouse move event if some ChartMouseListener are listening	WITHOUT_CLASSIFICATION	0.9999999132813809	WITHOUT_CLASSIFICATION	8.67186191455361E-8	DEFECT
// row keys...	WITHOUT_CLASSIFICATION	0.9998993299656588	WITHOUT_CLASSIFICATION	1.0067003434111492E-4	DEFECT
// row keys...	WITHOUT_CLASSIFICATION	0.9998993299656588	WITHOUT_CLASSIFICATION	1.0067003434111492E-4	DEFECT
// row keys...	WITHOUT_CLASSIFICATION	0.9998993299656588	WITHOUT_CLASSIFICATION	1.0067003434111492E-4	DEFECT
// chart title // domain axis label // range axis label // data // orientation // include legend // tooltips? // URLs?	WITHOUT_CLASSIFICATION	0.9999999985614412	WITHOUT_CLASSIFICATION	1.4385588423084275E-9	DEFECT
// the SWTGraphics2D class doesn't handle GradientPaint well, so // replace the gradient painter from the default theme with a // standard painter...	WITHOUT_CLASSIFICATION	0.9999998720468007	WITHOUT_CLASSIFICATION	1.2795319928912584E-7	DEFECT
// Dispose of any fonts we have created	WITHOUT_CLASSIFICATION	0.9999998824892248	WITHOUT_CLASSIFICATION	1.1751077516465605E-7	DEFECT
// Create the new font and set it into the title // label	WITHOUT_CLASSIFICATION	0.9999997203732585	WITHOUT_CLASSIFICATION	2.7962674155377665E-7	DEFECT
// create the new color and set it to the // SwtPaintCanvas	WITHOUT_CLASSIFICATION	0.9999999687185097	WITHOUT_CLASSIFICATION	3.1281490223874154E-8	DEFECT
// row 2: outline color	WITHOUT_CLASSIFICATION	0.9998976746728858	WITHOUT_CLASSIFICATION	1.023253271141396E-4	DEFECT
// Use a SwtPaintCanvas to show the color, note that we must set the // heightHint.	WITHOUT_CLASSIFICATION	0.9999999732760647	WITHOUT_CLASSIFICATION	2.6723935360219866E-8	DEFECT
// backgroundPaint	WITHOUT_CLASSIFICATION	0.9999977954667321	WITHOUT_CLASSIFICATION	2.2045332678924995E-6	DEFECT
// backgroundPaint	WITHOUT_CLASSIFICATION	0.9999977954667321	WITHOUT_CLASSIFICATION	2.2045332678924995E-6	DEFECT
// backgroundPaint	WITHOUT_CLASSIFICATION	0.9999977954667321	WITHOUT_CLASSIFICATION	2.2045332678924995E-6	DEFECT
// now create a new title and replace the existing title, several // things should happen: // (1) Adding the new title should trigger an immediate //     ChartChangeEvent; // (2) Modifying the new title should trigger a ChartChangeEvent; // (3) Modifying the old title should NOT trigger a ChartChangeEvent	WITHOUT_CLASSIFICATION	0.9999326691413127	WITHOUT_CLASSIFICATION	6.733085868724725E-5	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999995722400108	WITHOUT_CLASSIFICATION	4.2775998929434456E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999995722400108	WITHOUT_CLASSIFICATION	4.2775998929434456E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999995722400108	WITHOUT_CLASSIFICATION	4.2775998929434456E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999995722400108	WITHOUT_CLASSIFICATION	4.2775998929434456E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999995722400108	WITHOUT_CLASSIFICATION	4.2775998929434456E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999995722400108	WITHOUT_CLASSIFICATION	4.2775998929434456E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999995722400108	WITHOUT_CLASSIFICATION	4.2775998929434456E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999995722400108	WITHOUT_CLASSIFICATION	4.2775998929434456E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999995722400108	WITHOUT_CLASSIFICATION	4.2775998929434456E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999995722400108	WITHOUT_CLASSIFICATION	4.2775998929434456E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999995722400108	WITHOUT_CLASSIFICATION	4.2775998929434456E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999995722400108	WITHOUT_CLASSIFICATION	4.2775998929434456E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999995722400108	WITHOUT_CLASSIFICATION	4.2775998929434456E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999995722400108	WITHOUT_CLASSIFICATION	4.2775998929434456E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999995722400108	WITHOUT_CLASSIFICATION	4.2775998929434456E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999995722400108	WITHOUT_CLASSIFICATION	4.2775998929434456E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999995722400108	WITHOUT_CLASSIFICATION	4.2775998929434456E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999995722400108	WITHOUT_CLASSIFICATION	4.2775998929434456E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999995722400108	WITHOUT_CLASSIFICATION	4.2775998929434456E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999995722400108	WITHOUT_CLASSIFICATION	4.2775998929434456E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999995722400108	WITHOUT_CLASSIFICATION	4.2775998929434456E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999995722400108	WITHOUT_CLASSIFICATION	4.2775998929434456E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999995722400108	WITHOUT_CLASSIFICATION	4.2775998929434456E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999995722400108	WITHOUT_CLASSIFICATION	4.2775998929434456E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999995722400108	WITHOUT_CLASSIFICATION	4.2775998929434456E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999995722400108	WITHOUT_CLASSIFICATION	4.2775998929434456E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999995722400108	WITHOUT_CLASSIFICATION	4.2775998929434456E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999995722400108	WITHOUT_CLASSIFICATION	4.2775998929434456E-7	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.9999926007577067	WITHOUT_CLASSIFICATION	7.399242293329548E-6	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.9999926007577067	WITHOUT_CLASSIFICATION	7.399242293329548E-6	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.9999926007577067	WITHOUT_CLASSIFICATION	7.399242293329548E-6	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.9999926007577067	WITHOUT_CLASSIFICATION	7.399242293329548E-6	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.9999926007577067	WITHOUT_CLASSIFICATION	7.399242293329548E-6	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.9999926007577067	WITHOUT_CLASSIFICATION	7.399242293329548E-6	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.9999926007577067	WITHOUT_CLASSIFICATION	7.399242293329548E-6	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.9999926007577067	WITHOUT_CLASSIFICATION	7.399242293329548E-6	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.9999926007577067	WITHOUT_CLASSIFICATION	7.399242293329548E-6	DEFECT
// labelFont	WITHOUT_CLASSIFICATION	0.9999968310946454	WITHOUT_CLASSIFICATION	3.168905354639804E-6	DEFECT
// fillPaint	WITHOUT_CLASSIFICATION	0.9999986187250867	WITHOUT_CLASSIFICATION	1.3812749133949998E-6	DEFECT
// fillPaint	WITHOUT_CLASSIFICATION	0.9999986187250867	WITHOUT_CLASSIFICATION	1.3812749133949998E-6	DEFECT
// fillPaint	WITHOUT_CLASSIFICATION	0.9999986187250867	WITHOUT_CLASSIFICATION	1.3812749133949998E-6	DEFECT
// outlinePaint	WITHOUT_CLASSIFICATION	0.9999991928013184	WITHOUT_CLASSIFICATION	8.071986816482716E-7	DEFECT
// a null key should throw an IllegalArgumentException	WITHOUT_CLASSIFICATION	0.9999870705574941	WITHOUT_CLASSIFICATION	1.2929442505774955E-5	DEFECT
// a null key should throw an IllegalArgumentException	WITHOUT_CLASSIFICATION	0.9999870705574941	WITHOUT_CLASSIFICATION	1.2929442505774955E-5	DEFECT
//gridBandPaint	WITHOUT_CLASSIFICATION	0.9999711735601545	WITHOUT_CLASSIFICATION	2.882643984550842E-5	DEFECT
//private double angle;	WITHOUT_CLASSIFICATION	0.999999480526339	WITHOUT_CLASSIFICATION	5.194736609677286E-7	DEFECT
//private double baseRadius;	WITHOUT_CLASSIFICATION	0.9999999031990058	WITHOUT_CLASSIFICATION	9.680099424491688E-8	DEFECT
//private double arrowWidth;	WITHOUT_CLASSIFICATION	0.9999997914945709	WITHOUT_CLASSIFICATION	2.0850542911318596E-7	DEFECT
//private double labelOffset;	WITHOUT_CLASSIFICATION	0.9999999036108956	WITHOUT_CLASSIFICATION	9.638910428131039E-8	DEFECT
// font	WITHOUT_CLASSIFICATION	0.9999909359043392	WITHOUT_CLASSIFICATION	9.064095660756724E-6	DEFECT
// paint	WITHOUT_CLASSIFICATION	0.9999979187961054	WITHOUT_CLASSIFICATION	2.0812038945755348E-6	DEFECT
// paint	WITHOUT_CLASSIFICATION	0.9999979187961054	WITHOUT_CLASSIFICATION	2.0812038945755348E-6	DEFECT
// paint	WITHOUT_CLASSIFICATION	0.9999979187961054	WITHOUT_CLASSIFICATION	2.0812038945755348E-6	DEFECT
// ok, exception is expected	WITHOUT_CLASSIFICATION	0.9999968677579704	WITHOUT_CLASSIFICATION	3.132242029592534E-6	DEFECT
// stroke	WITHOUT_CLASSIFICATION	0.9999643721325285	WITHOUT_CLASSIFICATION	3.5627867471412034E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999898643226841	WITHOUT_CLASSIFICATION	1.0135677315940674E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999898643226841	WITHOUT_CLASSIFICATION	1.0135677315940674E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999898643226841	WITHOUT_CLASSIFICATION	1.0135677315940674E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999898643226841	WITHOUT_CLASSIFICATION	1.0135677315940674E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999898643226841	WITHOUT_CLASSIFICATION	1.0135677315940674E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999898643226841	WITHOUT_CLASSIFICATION	1.0135677315940674E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999898643226841	WITHOUT_CLASSIFICATION	1.0135677315940674E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999898643226841	WITHOUT_CLASSIFICATION	1.0135677315940674E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999898643226841	WITHOUT_CLASSIFICATION	1.0135677315940674E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999898643226841	WITHOUT_CLASSIFICATION	1.0135677315940674E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999898643226841	WITHOUT_CLASSIFICATION	1.0135677315940674E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999898643226841	WITHOUT_CLASSIFICATION	1.0135677315940674E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999898643226841	WITHOUT_CLASSIFICATION	1.0135677315940674E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999898643226841	WITHOUT_CLASSIFICATION	1.0135677315940674E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999898643226841	WITHOUT_CLASSIFICATION	1.0135677315940674E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999898643226841	WITHOUT_CLASSIFICATION	1.0135677315940674E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999898643226841	WITHOUT_CLASSIFICATION	1.0135677315940674E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999898643226841	WITHOUT_CLASSIFICATION	1.0135677315940674E-5	DEFECT
// dateFormatOverride	WITHOUT_CLASSIFICATION	0.9999993811114586	WITHOUT_CLASSIFICATION	6.18888541396338E-7	DEFECT
// range	WITHOUT_CLASSIFICATION	0.9999989166243016	WITHOUT_CLASSIFICATION	1.0833756984192928E-6	DEFECT
// check that setting the max date to something on or before the // current min date works...	WITHOUT_CLASSIFICATION	0.9999453281104789	WITHOUT_CLASSIFICATION	5.467188952105233E-5	DEFECT
// five dates to check...	WITHOUT_CLASSIFICATION	0.9999994518687175	WITHOUT_CLASSIFICATION	5.48131282440594E-7	DEFECT
// five dates to check...	WITHOUT_CLASSIFICATION	0.9999994518687175	WITHOUT_CLASSIFICATION	5.48131282440594E-7	DEFECT
// five dates to check...	WITHOUT_CLASSIFICATION	0.9999994518687175	WITHOUT_CLASSIFICATION	5.48131282440594E-7	DEFECT
// five dates to check...	WITHOUT_CLASSIFICATION	0.9999994518687175	WITHOUT_CLASSIFICATION	5.48131282440594E-7	DEFECT
// five dates to check...	WITHOUT_CLASSIFICATION	0.9999994518687175	WITHOUT_CLASSIFICATION	5.48131282440594E-7	DEFECT
// five dates to check...	WITHOUT_CLASSIFICATION	0.9999994518687175	WITHOUT_CLASSIFICATION	5.48131282440594E-7	DEFECT
// five dates to check...	WITHOUT_CLASSIFICATION	0.9999994518687175	WITHOUT_CLASSIFICATION	5.48131282440594E-7	DEFECT
// five dates to check...	WITHOUT_CLASSIFICATION	0.9999994518687175	WITHOUT_CLASSIFICATION	5.48131282440594E-7	DEFECT
// five dates to check...	WITHOUT_CLASSIFICATION	0.9999994518687175	WITHOUT_CLASSIFICATION	5.48131282440594E-7	DEFECT
// START: check d0 and d1	WITHOUT_CLASSIFICATION	0.9999992671706989	WITHOUT_CLASSIFICATION	7.328293012410588E-7	DEFECT
// START: check d0 and d1	WITHOUT_CLASSIFICATION	0.9999992671706989	WITHOUT_CLASSIFICATION	7.328293012410588E-7	DEFECT
// MIDDLE: check d1, d2 and d3	WITHOUT_CLASSIFICATION	0.9999959961090639	WITHOUT_CLASSIFICATION	4.003890936196718E-6	DEFECT
// MIDDLE: check d1, d2 and d3	WITHOUT_CLASSIFICATION	0.9999959961090639	WITHOUT_CLASSIFICATION	4.003890936196718E-6	DEFECT
// END: check d3 and d4	WITHOUT_CLASSIFICATION	0.9999988331011711	WITHOUT_CLASSIFICATION	1.1668988289953933E-6	DEFECT
// END: check d3 and d4	WITHOUT_CLASSIFICATION	0.9999988331011711	WITHOUT_CLASSIFICATION	1.1668988289953933E-6	DEFECT
//private boolean autoRangeStickyZero;	WITHOUT_CLASSIFICATION	0.999998173779771	WITHOUT_CLASSIFICATION	1.8262202290237944E-6	DEFECT
// now replacing the dataset should update the axis range...	WITHOUT_CLASSIFICATION	0.9999938620520795	WITHOUT_CLASSIFICATION	6.1379479205706955E-6	DEFECT
// now replacing the dataset should update the axis range...	WITHOUT_CLASSIFICATION	0.9999938620520795	WITHOUT_CLASSIFICATION	6.1379479205706955E-6	DEFECT
// set axis bounds to be both greater than 1	WITHOUT_CLASSIFICATION	0.999997883389598	WITHOUT_CLASSIFICATION	2.1166104019898128E-6	DEFECT
// check for bounds interval that includes 1	WITHOUT_CLASSIFICATION	0.9999999058696237	WITHOUT_CLASSIFICATION	9.413037620064413E-8	DEFECT
// check for bounds interval that includes 1	WITHOUT_CLASSIFICATION	0.9999999058696237	WITHOUT_CLASSIFICATION	9.413037620064413E-8	DEFECT
// tickLabelFont	WITHOUT_CLASSIFICATION	0.9999962987110259	WITHOUT_CLASSIFICATION	3.7012889740663105E-6	DEFECT
// advance line Paint	WITHOUT_CLASSIFICATION	0.9999999574820281	WITHOUT_CLASSIFICATION	4.25179719436122E-8	DEFECT
// Add exception in included segments	WITHOUT_CLASSIFICATION	0.999998109709337	WITHOUT_CLASSIFICATION	1.8902906629807809E-6	DEFECT
// Saturday and Sundays are non business hours	WITHOUT_CLASSIFICATION	0.9999989710872859	WITHOUT_CLASSIFICATION	1.028912714045959E-6	DEFECT
/** These constants control test cycles in the validateXXXX methods. */	WITHOUT_CLASSIFICATION	0.9999832381894045	WITHOUT_CLASSIFICATION	1.6761810595600284E-5	DEFECT
/** These constants control test cycles in the validateXXXX methods. */	WITHOUT_CLASSIFICATION	0.9999832381894045	WITHOUT_CLASSIFICATION	1.6761810595600284E-5	DEFECT
// 1-ms test timeline using 5 included and 2 excluded segments. // // timeline start time = 0 //   | //   v //   0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 .. // +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+.. // |  |  |  |  |  |EE|EE|  |  |  |  |  |EE|EE|  |  |  |  |  |  |EE|EE|    <-- msTimeline // +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+.. //  \_________  ________/            \_/ //            \/                      | //       segment group         segment size = 1 ms //	WITHOUT_CLASSIFICATION	0.9999982094962662	WITHOUT_CLASSIFICATION	1.790503733802252E-6	DEFECT
// 1-ms test timeline (with a baseTimeline) using 2 included and 2 // excluded segments centered inside each base segment // // The ms2Timeline without a base would look like this: // //    timeline start time = 1 //      | //      v //   0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 ... // +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+... // |EE|  |  |EE|EE|  |  |EE|EE|  |  |EE|EE|  |  |EE|EE|  |  |EE|    <-- ms2Timeline // +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+... //    \____  _____/            \_/ //         \/                   | //    segment group      segment size = 1 ms // // With the base timeline some originally included segments are now // removed (see "xx" below): // //   0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 ... // +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+... // |EE|  |  |EE|EE|xx|xx|EE|EE|  |  |EE|EE|xx|xx|EE|EE|  |  |EE|    <-- ms2Timeline // +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+... // |  |  |  |  |EE|EE|EE|EE|  |  |  |  |EE|EE|EE|EE|  |  |  |  |    <-- ms2BaseTimeline // +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+... //	WITHOUT_CLASSIFICATION	0.898099829125963	WITHOUT_CLASSIFICATION	0.10190017087403701	DEFECT
// test monday though friday timeline	WITHOUT_CLASSIFICATION	0.9999995798311151	WITHOUT_CLASSIFICATION	4.2016888484000396E-7	DEFECT
// find first Monday after 2001-01-01	WITHOUT_CLASSIFICATION	0.9999865773609667	WITHOUT_CLASSIFICATION	1.3422639033205393E-5	DEFECT
////////////////////////////////////////////////////////////////////////// // test construction process //////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999999852939779	WITHOUT_CLASSIFICATION	1.4706021982579834E-8	DEFECT
// verify attributes set during object construction	WITHOUT_CLASSIFICATION	0.9999998780830077	WITHOUT_CLASSIFICATION	1.219169922404502E-7	DEFECT
////////////////////////////////////////////////////////////////////////// // main include and excluded segments //////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999979648811195	WITHOUT_CLASSIFICATION	2.035118880547958E-6	DEFECT
////////////////////////////////////////////////////////////////////////// // test timeline translations //////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.999999986698625	WITHOUT_CLASSIFICATION	1.3301374973581453E-8	DEFECT
// verify all timeline segments included in the // baseTimeline.segment are now exceptions	WITHOUT_CLASSIFICATION	0.999999965527576	WITHOUT_CLASSIFICATION	3.447242412085898E-8	DEFECT
// 1-Jan-2000	WITHOUT_CLASSIFICATION	0.9999859089153607	WITHOUT_CLASSIFICATION	1.4091084639329373E-5	DEFECT
// tick label insets...	WITHOUT_CLASSIFICATION	0.9999915831963985	WITHOUT_CLASSIFICATION	8.416803601518991E-6	DEFECT
// tick mark paint...	WITHOUT_CLASSIFICATION	0.9999561667556489	WITHOUT_CLASSIFICATION	4.383324435113175E-5	DEFECT
// negativeArrowVisible;	WITHOUT_CLASSIFICATION	0.9999991772273479	WITHOUT_CLASSIFICATION	8.227726520636856E-7	DEFECT
// axisLinePaint	WITHOUT_CLASSIFICATION	0.9999999490708877	WITHOUT_CLASSIFICATION	5.092911227151843E-8	DEFECT
// autoRange	WITHOUT_CLASSIFICATION	0.9999994147181653	WITHOUT_CLASSIFICATION	5.852818347244881E-7	DEFECT
// autoRangeMinimumSize	WITHOUT_CLASSIFICATION	0.9999999273787098	WITHOUT_CLASSIFICATION	7.26212901575478E-8	DEFECT
//private double fixedAutoRange;	WITHOUT_CLASSIFICATION	0.9999950320472893	WITHOUT_CLASSIFICATION	4.9679527106139865E-6	DEFECT
//private boolean autoTickUnitSelection;	WITHOUT_CLASSIFICATION	0.999999903163932	WITHOUT_CLASSIFICATION	9.683606801614296E-8	DEFECT
//private int autoTickIndex; //protected double reservedForTickLabels; //protected double reservedForAxisLabel;	WITHOUT_CLASSIFICATION	0.9999942606329755	WITHOUT_CLASSIFICATION	5.73936702449346E-6	DEFECT
// TBLRC // 00001 - center item only	WITHOUT_CLASSIFICATION	0.9999918462031364	WITHOUT_CLASSIFICATION	8.153796863616084E-6	DEFECT
// TBLRC // 00001 - center item only	WITHOUT_CLASSIFICATION	0.9999918462031364	WITHOUT_CLASSIFICATION	8.153796863616084E-6	DEFECT
// TBLRC // 00100 - left item only	WITHOUT_CLASSIFICATION	0.9999669053773198	WITHOUT_CLASSIFICATION	3.309462268022859E-5	DEFECT
// TBLRC // 10101 - top, left and center	WITHOUT_CLASSIFICATION	0.9999981940098941	WITHOUT_CLASSIFICATION	1.8059901059355292E-6	DEFECT
// TBLRC // 10110 - top, left and right	WITHOUT_CLASSIFICATION	0.9999657866864725	WITHOUT_CLASSIFICATION	3.42133135275798E-5	DEFECT
// TBLRC // 11000 - top and bottom only	WITHOUT_CLASSIFICATION	0.9999841237407681	WITHOUT_CLASSIFICATION	1.5876259231891922E-5	DEFECT
// TBLRC // 11011	WITHOUT_CLASSIFICATION	0.9999941231788698	WITHOUT_CLASSIFICATION	5.8768211301272426E-6	DEFECT
// TBLRC // 11111 - all	WITHOUT_CLASSIFICATION	0.9999934849413288	WITHOUT_CLASSIFICATION	6.5150586711207405E-6	DEFECT
// standard test	WITHOUT_CLASSIFICATION	0.9999995082562215	WITHOUT_CLASSIFICATION	4.917437784429787E-7	DEFECT
// Y format	WITHOUT_CLASSIFICATION	0.9999994120048366	WITHOUT_CLASSIFICATION	5.879951634623391E-7	DEFECT
// some setup...	WITHOUT_CLASSIFICATION	0.9999967449076134	WITHOUT_CLASSIFICATION	3.2550923865706542E-6	DEFECT
// some setup...	WITHOUT_CLASSIFICATION	0.9999967449076134	WITHOUT_CLASSIFICATION	3.2550923865706542E-6	DEFECT
// parent plot...	WITHOUT_CLASSIFICATION	0.9986369395358082	WITHOUT_CLASSIFICATION	0.0013630604641917247	DEFECT
// innerSeparatorExtension	WITHOUT_CLASSIFICATION	0.9999999377372766	WITHOUT_CLASSIFICATION	6.226272340728594E-8	DEFECT
// domainAxis - no longer a separate field but test anyway...	WITHOUT_CLASSIFICATION	0.9997105534443795	WITHOUT_CLASSIFICATION	2.894465556205224E-4	DEFECT
// rangeAxis - no longer a separate field but test anyway...	WITHOUT_CLASSIFICATION	0.9994946570166144	WITHOUT_CLASSIFICATION	5.053429833855152E-4	DEFECT
// renderer - no longer a separate field but test anyway...	WITHOUT_CLASSIFICATION	0.9988981894714715	WITHOUT_CLASSIFICATION	0.0011018105285285937	DEFECT
// domainGridlinesVisible	WITHOUT_CLASSIFICATION	0.9999999525833587	WITHOUT_CLASSIFICATION	4.7416641276219874E-8	DEFECT
// domainGridlinePosition	WITHOUT_CLASSIFICATION	0.9999998488739126	WITHOUT_CLASSIFICATION	1.5112608752055198E-7	DEFECT
// rangeGridlinePaint	WITHOUT_CLASSIFICATION	0.9999998867490412	WITHOUT_CLASSIFICATION	1.1325095881767253E-7	DEFECT
// anchorValue	WITHOUT_CLASSIFICATION	0.9999998388526852	WITHOUT_CLASSIFICATION	1.6114731487765208E-7	DEFECT
// rangeCrosshairPaint	WITHOUT_CLASSIFICATION	0.9999997948652561	WITHOUT_CLASSIFICATION	2.0513474400192696E-7	DEFECT
// rangeCrosshairPaint	WITHOUT_CLASSIFICATION	0.9999997948652561	WITHOUT_CLASSIFICATION	2.0513474400192696E-7	DEFECT
// range markers - no longer separate fields but test anyway...	WITHOUT_CLASSIFICATION	0.9997321818946456	WITHOUT_CLASSIFICATION	2.6781810535437227E-4	DEFECT
// fixed legend items	WITHOUT_CLASSIFICATION	0.9999959067672793	WITHOUT_CLASSIFICATION	4.093232720625773E-6	DEFECT
// domainCrosshairPaint	WITHOUT_CLASSIFICATION	0.9999989922159532	WITHOUT_CLASSIFICATION	1.0077840467428808E-6	DEFECT
// check for independence	WITHOUT_CLASSIFICATION	0.9999998701982871	WITHOUT_CLASSIFICATION	1.2980171294730802E-7	DEFECT
// check for independence	WITHOUT_CLASSIFICATION	0.9999998701982871	WITHOUT_CLASSIFICATION	1.2980171294730802E-7	DEFECT
// now check that the chart is usable...	WITHOUT_CLASSIFICATION	0.9999995785066433	WITHOUT_CLASSIFICATION	4.2149335671049875E-7	DEFECT
// now check that the chart is usable...	WITHOUT_CLASSIFICATION	0.9999995785066433	WITHOUT_CLASSIFICATION	4.2149335671049875E-7	DEFECT
// now make a change to the renderer and see if it triggers a plot // change event...	WITHOUT_CLASSIFICATION	0.9998719788573524	WITHOUT_CLASSIFICATION	1.2802114264763933E-4	DEFECT
// should get IllegalArgumentException for negative index	WITHOUT_CLASSIFICATION	0.9999870073682688	WITHOUT_CLASSIFICATION	1.2992631731166289E-5	DEFECT
// if multiple axes are mapped, the first in the list should be // returned...	WITHOUT_CLASSIFICATION	0.9999981963405633	WITHOUT_CLASSIFICATION	1.80365943672459E-6	DEFECT
// if multiple axes are mapped, the first in the list should be // returned...	WITHOUT_CLASSIFICATION	0.9999981963405633	WITHOUT_CLASSIFICATION	1.80365943672459E-6	DEFECT
// add a second dataset	WITHOUT_CLASSIFICATION	0.9999976881898113	WITHOUT_CLASSIFICATION	2.3118101887114036E-6	DEFECT
// units	WITHOUT_CLASSIFICATION	0.9999969593491409	WITHOUT_CLASSIFICATION	3.0406508590931377E-6	DEFECT
// tick labels visible	WITHOUT_CLASSIFICATION	0.99999842507968	WITHOUT_CLASSIFICATION	1.5749203200161277E-6	DEFECT
// tick size	WITHOUT_CLASSIFICATION	0.9999966862123231	WITHOUT_CLASSIFICATION	3.313787676836273E-6	DEFECT
// the clone and the original share a reference to the SAME dataset	WITHOUT_CLASSIFICATION	0.9999979183023201	WITHOUT_CLASSIFICATION	2.0816976800139713E-6	DEFECT
// check null argument...	WITHOUT_CLASSIFICATION	0.9999995168038847	WITHOUT_CLASSIFICATION	4.831961154293764E-7	DEFECT
// check null argument...	WITHOUT_CLASSIFICATION	0.9999995168038847	WITHOUT_CLASSIFICATION	4.831961154293764E-7	DEFECT
// check null argument...	WITHOUT_CLASSIFICATION	0.9999995168038847	WITHOUT_CLASSIFICATION	4.831961154293764E-7	DEFECT
// check null argument...	WITHOUT_CLASSIFICATION	0.9999995168038847	WITHOUT_CLASSIFICATION	4.831961154293764E-7	DEFECT
// check null argument...	WITHOUT_CLASSIFICATION	0.9999995168038847	WITHOUT_CLASSIFICATION	4.831961154293764E-7	DEFECT
// check null argument...	WITHOUT_CLASSIFICATION	0.9999995168038847	WITHOUT_CLASSIFICATION	4.831961154293764E-7	DEFECT
// check null argument...	WITHOUT_CLASSIFICATION	0.9999995168038847	WITHOUT_CLASSIFICATION	4.831961154293764E-7	DEFECT
// check null argument...	WITHOUT_CLASSIFICATION	0.9999995168038847	WITHOUT_CLASSIFICATION	4.831961154293764E-7	DEFECT
// check null argument...	WITHOUT_CLASSIFICATION	0.9999995168038847	WITHOUT_CLASSIFICATION	4.831961154293764E-7	DEFECT
// check null argument...	WITHOUT_CLASSIFICATION	0.9999995168038847	WITHOUT_CLASSIFICATION	4.831961154293764E-7	DEFECT
// check null argument...	WITHOUT_CLASSIFICATION	0.9999995168038847	WITHOUT_CLASSIFICATION	4.831961154293764E-7	DEFECT
// labelType...	WITHOUT_CLASSIFICATION	0.9999572836998458	WITHOUT_CLASSIFICATION	4.271630015417669E-5	DEFECT
// pieIndex...	WITHOUT_CLASSIFICATION	0.9998170186680118	WITHOUT_CLASSIFICATION	1.829813319881321E-4	DEFECT
// ignoreZeroValues	WITHOUT_CLASSIFICATION	0.9999998632372932	WITHOUT_CLASSIFICATION	1.367627068640492E-7	DEFECT
// sectionOutlinesVisible	WITHOUT_CLASSIFICATION	0.9999997510552562	WITHOUT_CLASSIFICATION	2.489447438132296E-7	DEFECT
// sectionOutlineStroke	WITHOUT_CLASSIFICATION	0.9999845524050988	WITHOUT_CLASSIFICATION	1.5447594901222044E-5	DEFECT
// labelBackgroundPaint	WITHOUT_CLASSIFICATION	0.9999971088292002	WITHOUT_CLASSIFICATION	2.8911707998489993E-6	DEFECT
// labelGenerator	WITHOUT_CLASSIFICATION	0.9999996534534688	WITHOUT_CLASSIFICATION	3.465465311600439E-7	DEFECT
// we use ValueMarker for the tests, because we need a concrete // subclass...	WITHOUT_CLASSIFICATION	0.999998842193714	WITHOUT_CLASSIFICATION	1.1578062858566504E-6	DEFECT
// we use ValueMarker for the tests, because we need a concrete // subclass...	WITHOUT_CLASSIFICATION	0.999998842193714	WITHOUT_CLASSIFICATION	1.1578062858566504E-6	DEFECT
// we use ValueMarker for the tests, because we need a concrete // subclass...	WITHOUT_CLASSIFICATION	0.999998842193714	WITHOUT_CLASSIFICATION	1.1578062858566504E-6	DEFECT
// we use ValueMarker for the tests, because we need a concrete // subclass...	WITHOUT_CLASSIFICATION	0.999998842193714	WITHOUT_CLASSIFICATION	1.1578062858566504E-6	DEFECT
// we use ValueMarker for the tests, because we need a concrete // subclass...	WITHOUT_CLASSIFICATION	0.999998842193714	WITHOUT_CLASSIFICATION	1.1578062858566504E-6	DEFECT
// we use ValueMarker for the tests, because we need a concrete // subclass...	WITHOUT_CLASSIFICATION	0.999998842193714	WITHOUT_CLASSIFICATION	1.1578062858566504E-6	DEFECT
// we use ValueMarker for the tests, because we need a concrete // subclass...	WITHOUT_CLASSIFICATION	0.999998842193714	WITHOUT_CLASSIFICATION	1.1578062858566504E-6	DEFECT
// we use ValueMarker for the tests, because we need a concrete // subclass...	WITHOUT_CLASSIFICATION	0.999998842193714	WITHOUT_CLASSIFICATION	1.1578062858566504E-6	DEFECT
// we use ValueMarker for the tests, because we need a concrete // subclass...	WITHOUT_CLASSIFICATION	0.999998842193714	WITHOUT_CLASSIFICATION	1.1578062858566504E-6	DEFECT
// we use ValueMarker for the tests, because we need a concrete // subclass...	WITHOUT_CLASSIFICATION	0.999998842193714	WITHOUT_CLASSIFICATION	1.1578062858566504E-6	DEFECT
// verify independence of fixed legend item collection	WITHOUT_CLASSIFICATION	0.999969740555342	WITHOUT_CLASSIFICATION	3.025944465803803E-5	DEFECT
// stroke sequence	WITHOUT_CLASSIFICATION	0.9999869628316982	WITHOUT_CLASSIFICATION	1.3037168301848609E-5	DEFECT
// stroke index	WITHOUT_CLASSIFICATION	0.9996772024229387	WITHOUT_CLASSIFICATION	3.227975770613511E-4	DEFECT
// check an inherited attribute	WITHOUT_CLASSIFICATION	0.9999998967563453	WITHOUT_CLASSIFICATION	1.032436548199532E-7	DEFECT
// check an inherited attribute	WITHOUT_CLASSIFICATION	0.9999998967563453	WITHOUT_CLASSIFICATION	1.032436548199532E-7	DEFECT
// check an inherited attribute	WITHOUT_CLASSIFICATION	0.9999998967563453	WITHOUT_CLASSIFICATION	1.032436548199532E-7	DEFECT
// check an inherited attribute	WITHOUT_CLASSIFICATION	0.9999998967563453	WITHOUT_CLASSIFICATION	1.032436548199532E-7	DEFECT
// check an inherited attribute	WITHOUT_CLASSIFICATION	0.9999998967563453	WITHOUT_CLASSIFICATION	1.032436548199532E-7	DEFECT
// check an inherited attribute	WITHOUT_CLASSIFICATION	0.9999998967563453	WITHOUT_CLASSIFICATION	1.032436548199532E-7	DEFECT
// check an inherited attribute	WITHOUT_CLASSIFICATION	0.9999998967563453	WITHOUT_CLASSIFICATION	1.032436548199532E-7	DEFECT
// check that the listener lists are independent	WITHOUT_CLASSIFICATION	0.9999999801529776	WITHOUT_CLASSIFICATION	1.9847022258769872E-8	DEFECT
// check that the listener lists are independent	WITHOUT_CLASSIFICATION	0.9999999801529776	WITHOUT_CLASSIFICATION	1.9847022258769872E-8	DEFECT
// check that the listener lists are independent	WITHOUT_CLASSIFICATION	0.9999999801529776	WITHOUT_CLASSIFICATION	1.9847022258769872E-8	DEFECT
// check that the listener lists are independent	WITHOUT_CLASSIFICATION	0.9999999801529776	WITHOUT_CLASSIFICATION	1.9847022258769872E-8	DEFECT
// check that the listener lists are independent	WITHOUT_CLASSIFICATION	0.9999999801529776	WITHOUT_CLASSIFICATION	1.9847022258769872E-8	DEFECT
// minorTickCount	WITHOUT_CLASSIFICATION	0.9999989809782469	WITHOUT_CLASSIFICATION	1.0190217531254707E-6	DEFECT
// try a default instance	WITHOUT_CLASSIFICATION	0.9999996537721741	WITHOUT_CLASSIFICATION	3.4622782575618697E-7	DEFECT
// try a customised instance	WITHOUT_CLASSIFICATION	0.9999998891802415	WITHOUT_CLASSIFICATION	1.108197584532607E-7	DEFECT
// seriesVisibleInLegend	WITHOUT_CLASSIFICATION	0.9999976377143819	WITHOUT_CLASSIFICATION	2.3622856180118847E-6	DEFECT
//upper bound and margin OK; get log10 of upper bound	WITHOUT_CLASSIFICATION	0.9999988504433374	WITHOUT_CLASSIFICATION	1.1495566626533336E-6	DEFECT
// fillPaintList	WITHOUT_CLASSIFICATION	0.9999997308029704	WITHOUT_CLASSIFICATION	2.6919702962125454E-7	DEFECT
//apply upper margin by increasing upper bound:	WITHOUT_CLASSIFICATION	0.999990456247865	WITHOUT_CLASSIFICATION	9.543752135091976E-6	DEFECT
// baseStroke	WITHOUT_CLASSIFICATION	0.9999933869500482	WITHOUT_CLASSIFICATION	6.613049951742856E-6	DEFECT
// Reference: http://www.antigrain.com/research/bezier_interpolation/	WITHOUT_CLASSIFICATION	0.9999979018535193	WITHOUT_CLASSIFICATION	2.098146480714049E-6	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999712098698399	WITHOUT_CLASSIFICATION	2.8790130160057927E-5	DEFECT
// initialize ChartPanel-specific tool tip delays with // values the from ToolTipManager.sharedInstance()	WITHOUT_CLASSIFICATION	0.9999999997702723	WITHOUT_CLASSIFICATION	2.2972774041763357E-10	DEFECT
// only draw if we have good values	WITHOUT_CLASSIFICATION	0.9999960346860223	WITHOUT_CLASSIFICATION	3.9653139776752896E-6	DEFECT
// properties // save // print // zoom // tooltips	WITHOUT_CLASSIFICATION	0.9999998771759805	WITHOUT_CLASSIFICATION	1.2282401955961543E-7	DEFECT
// properties // save // print // zoom // tooltips	WITHOUT_CLASSIFICATION	0.9999998771759805	WITHOUT_CLASSIFICATION	1.2282401955961543E-7	DEFECT
// stop listening for changes to the existing chart	WITHOUT_CLASSIFICATION	0.9999999965730939	WITHOUT_CLASSIFICATION	3.426906019795093E-9	DEFECT
// set up popup menu...	WITHOUT_CLASSIFICATION	0.9999974593459579	WITHOUT_CLASSIFICATION	2.5406540421754316E-6	DEFECT
// itemLabelsVisible	WITHOUT_CLASSIFICATION	0.9999999357845211	WITHOUT_CLASSIFICATION	6.421547890594174E-8	DEFECT
// make the background of the buffer clear and transparent	WITHOUT_CLASSIFICATION	0.9999969558833027	WITHOUT_CLASSIFICATION	3.0441166972908437E-6	DEFECT
// for MacOSX we can't use the CTRL key for mouse drags, see: // http://developer.apple.com/qa/qa2004/qa1362.html	WITHOUT_CLASSIFICATION	0.9999986803546854	WITHOUT_CLASSIFICATION	1.3196453146480597E-6	DEFECT
// add the new chart	WITHOUT_CLASSIFICATION	0.9999999460868042	WITHOUT_CLASSIFICATION	5.391319589359285E-8	DEFECT
// work out if scaling is required...	WITHOUT_CLASSIFICATION	0.8383505211289437	WITHOUT_CLASSIFICATION	0.16164947887105632	DEFECT
// first determine the size of the chart rendering area...	WITHOUT_CLASSIFICATION	0.999999933003675	WITHOUT_CLASSIFICATION	6.699632501213007E-8	DEFECT
// do we need to resize the buffer?	WITHOUT_CLASSIFICATION	0.9999975084449403	WITHOUT_CLASSIFICATION	2.491555059651409E-6	DEFECT
// are we using the chart buffer?	WITHOUT_CLASSIFICATION	0.9999999494222873	WITHOUT_CLASSIFICATION	5.057771263615852E-8	DEFECT
// clear the flag	WITHOUT_CLASSIFICATION	0.9999964208632116	WITHOUT_CLASSIFICATION	3.579136788484239E-6	DEFECT
// do we need to redraw the buffer?	WITHOUT_CLASSIFICATION	0.9999979782165819	WITHOUT_CLASSIFICATION	2.0217834180877798E-6	DEFECT
// redraw the zoom rectangle (if present) - if useBuffer is false, // we use XOR so we can XOR the rectangle away again without redrawing // the chart	WITHOUT_CLASSIFICATION	0.9999997944822736	WITHOUT_CLASSIFICATION	2.055177262645792E-7	DEFECT
// redrawing the chart every time...	WITHOUT_CLASSIFICATION	0.9999983864908194	WITHOUT_CLASSIFICATION	1.6135091805472889E-6	DEFECT
// zap the buffer onto the panel...	WITHOUT_CLASSIFICATION	0.9999866700393074	WITHOUT_CLASSIFICATION	1.3329960692665797E-5	DEFECT
// does nothing - override if necessary	WITHOUT_CLASSIFICATION	0.999998238066903	WITHOUT_CLASSIFICATION	1.7619330969095076E-6	DEFECT
// many of the zoom methods need a screen location - all we have is // the zoomPoint, but it might be null.  Here we grab the x and y // coordinates, or use defaults...	WITHOUT_CLASSIFICATION	0.998286397091614	WITHOUT_CLASSIFICATION	0.0017136029083858564	DEFECT
// itemLabelFontList	WITHOUT_CLASSIFICATION	0.999999950824099	WITHOUT_CLASSIFICATION	4.917590089143038E-8	DEFECT
// restore original tooltip dealys	WITHOUT_CLASSIFICATION	0.9999976660998492	WITHOUT_CLASSIFICATION	2.3339001507509825E-6	DEFECT
// can we pan this plot?	WITHOUT_CLASSIFICATION	0.9999983268687077	WITHOUT_CLASSIFICATION	1.6731312922738207E-6	DEFECT
// the actual panning occurs later in the mouseDragged()  // method	WITHOUT_CLASSIFICATION	0.9999998678470347	WITHOUT_CLASSIFICATION	1.3215296541597932E-7	DEFECT
// if the popup menu has already been triggered, then ignore dragging...	WITHOUT_CLASSIFICATION	0.9999999710301403	WITHOUT_CLASSIFICATION	2.8969859682373357E-8	DEFECT
// handle panning if we have a start point	WITHOUT_CLASSIFICATION	0.9999998370280416	WITHOUT_CLASSIFICATION	1.6297195835685002E-7	DEFECT
// if no initial zoom point was set, ignore dragging...	WITHOUT_CLASSIFICATION	0.9999999951268104	WITHOUT_CLASSIFICATION	4.873189582078726E-9	DEFECT
// erase the previous zoom rectangle (if any).  We only need to do // this is we are using XOR mode, which we do when we're not using // the buffer (if there is a buffer, then at the end of this method we // just trigger a repaint)	WITHOUT_CLASSIFICATION	0.9999999800953998	WITHOUT_CLASSIFICATION	1.9904600152049574E-8	DEFECT
// selected rectangle shouldn't extend outside the data area...	WITHOUT_CLASSIFICATION	0.9999474929198232	WITHOUT_CLASSIFICATION	5.2507080176903274E-5	DEFECT
// Draw the new zoom rectangle...	WITHOUT_CLASSIFICATION	0.9999768211747196	WITHOUT_CLASSIFICATION	2.317882528031273E-5	DEFECT
// with no buffer, we use XOR to draw the rectangle "over" the // chart...	WITHOUT_CLASSIFICATION	0.999993821589173	WITHOUT_CLASSIFICATION	6.1784108268599274E-6	DEFECT
// if we've been panning, we need to reset now that the mouse is  // released...	WITHOUT_CLASSIFICATION	0.9999999667641926	WITHOUT_CLASSIFICATION	3.323580742770021E-8	DEFECT
// for mouseReleased event, (horizontalZoom || verticalZoom) // will be true, so we can just test for either being false; // otherwise both are true	WITHOUT_CLASSIFICATION	0.9999999999668214	WITHOUT_CLASSIFICATION	3.317866667990318E-11	DEFECT
// erase the zoom rectangle	WITHOUT_CLASSIFICATION	0.9999999506664445	WITHOUT_CLASSIFICATION	4.9333555534853625E-8	DEFECT
// force a redraw // new entity code...	WITHOUT_CLASSIFICATION	0.9999650571674754	WITHOUT_CLASSIFICATION	3.4942832524648367E-5	DEFECT
// we need to guard against this.zoomPoint being null	WITHOUT_CLASSIFICATION	0.9999999962778625	WITHOUT_CLASSIFICATION	3.722137558762242E-9	DEFECT
// we need to guard against this.zoomPoint being null	WITHOUT_CLASSIFICATION	0.9999999962778625	WITHOUT_CLASSIFICATION	3.722137558762242E-9	DEFECT
// Set XOR mode to draw the zoom rectangle	WITHOUT_CLASSIFICATION	0.9999942418068346	WITHOUT_CLASSIFICATION	5.758193165395036E-6	DEFECT
// null will be returned	WITHOUT_CLASSIFICATION	0.9999994164151293	WITHOUT_CLASSIFICATION	5.835848707594132E-7	DEFECT
// get the origin of the zoom selection in the Java2D space used for // drawing the chart (that is, before any scaling to fit the panel)	WITHOUT_CLASSIFICATION	0.9999999303809715	WITHOUT_CLASSIFICATION	6.961902850193999E-8	DEFECT
// get the origin of the zoom selection in the Java2D space used for // drawing the chart (that is, before any scaling to fit the panel)	WITHOUT_CLASSIFICATION	0.9999999303809715	WITHOUT_CLASSIFICATION	6.961902850193999E-8	DEFECT
// use reflection to get the SVG string	WITHOUT_CLASSIFICATION	0.9999986914876653	WITHOUT_CLASSIFICATION	1.3085123346607023E-6	DEFECT
// Reset to the default 'overwrite' mode	WITHOUT_CLASSIFICATION	0.9999999455335972	WITHOUT_CLASSIFICATION	5.446640285061917E-8	DEFECT
// Reset to the default 'overwrite' mode	WITHOUT_CLASSIFICATION	0.9999999455335972	WITHOUT_CLASSIFICATION	5.446640285061917E-8	DEFECT
// Reset to the default 'overwrite' mode	WITHOUT_CLASSIFICATION	0.9999999455335972	WITHOUT_CLASSIFICATION	5.446640285061917E-8	DEFECT
// null will be returned	WITHOUT_CLASSIFICATION	0.9999994164151293	WITHOUT_CLASSIFICATION	5.835848707594132E-7	DEFECT
// we suppress shadow generation, because SVG is a vector format and // the shadow effect is applied via bitmap effects...	WITHOUT_CLASSIFICATION	0.9999948172937373	WITHOUT_CLASSIFICATION	5.182706262773801E-6	DEFECT
// pdfDocument class will be null so the function will return false	WITHOUT_CLASSIFICATION	0.9999997687604574	WITHOUT_CLASSIFICATION	2.312395427163295E-7	DEFECT
// null will be returned	WITHOUT_CLASSIFICATION	0.9999994164151293	WITHOUT_CLASSIFICATION	5.835848707594132E-7	DEFECT
// null will be returned	WITHOUT_CLASSIFICATION	0.9999994164151293	WITHOUT_CLASSIFICATION	5.835848707594132E-7	DEFECT
// null will be returned	WITHOUT_CLASSIFICATION	0.9999994164151293	WITHOUT_CLASSIFICATION	5.835848707594132E-7	DEFECT
// fetch listeners from local storage	WITHOUT_CLASSIFICATION	0.9999999934865811	WITHOUT_CLASSIFICATION	6.513418858953218E-9	DEFECT
// here we need to update the UI for the popup menu, if the panel // has one...	WITHOUT_CLASSIFICATION	0.9999936931725366	WITHOUT_CLASSIFICATION	6.306827463424879E-6	DEFECT
// we suppress shadow generation, because PDF is a vector format and // the shadow effect is applied via bitmap effects...	WITHOUT_CLASSIFICATION	0.9999793817839592	WITHOUT_CLASSIFICATION	2.061821604079325E-5	DEFECT
// register as a listener with sub-components...	WITHOUT_CLASSIFICATION	0.9999997450836241	WITHOUT_CLASSIFICATION	2.5491637586462507E-7	DEFECT
// go through each zoom menu item and decide whether or not to // enable it...	WITHOUT_CLASSIFICATION	0.9996617668712514	WITHOUT_CLASSIFICATION	3.3823312874868176E-4	DEFECT
// suppresses compiler warning	WITHOUT_CLASSIFICATION	0.999999743950822	WITHOUT_CLASSIFICATION	2.560491779675365E-7	DEFECT
// we create a new but empty chartMouseListeners list	WITHOUT_CLASSIFICATION	0.9999999992988673	WITHOUT_CLASSIFICATION	7.011326380042965E-10	DEFECT
// suppresses compiler warning	WITHOUT_CLASSIFICATION	0.999999743950822	WITHOUT_CLASSIFICATION	2.560491779675365E-7	DEFECT
/* =========================================================== * JFreeChart : a free chart library for the Java(tm) platform * =========================================================== * * (C) Copyright 2000-2014, by Object Refinery Limited and Contributors. * * Project Info:  http://www.jfree.org/jfreechart/index.html * * This library is free software; you can redistribute it and/or modify it * under the terms of the GNU Lesser General Public License as published by * the Free Software Foundation; either version 2.1 of the License, or * (at your option) any later version. * * This library is distributed in the hope that it will be useful, but * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public * License for more details. * * You should have received a copy of the GNU Lesser General Public * License along with this library; if not, write to the Free Software * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, * USA. * * [Oracle and Java are registered trademarks of Oracle and/or its affiliates.  * Other names may be trademarks of their respective owners.] * * ----------------- * ChartFactory.java * ----------------- * (C) Copyright 2001-2014, by Object Refinery Limited and Contributors. * * Original Author:  David Gilbert (for Object Refinery Limited); * Contributor(s):   Serge V. Grachov; *                   Joao Guilherme Del Valle; *                   Bill Kelemen; *                   Jon Iles; *                   Jelai Wang; *                   Richard Atkinson; *                   David Browning (for Australian Institute of Marine *                       Science); *                   Benoit Xhenseval; * * Changes * ------- * 19-Oct-2001 : Version 1, most methods transferred from JFreeChart.java (DG); * 22-Oct-2001 : Added methods to create stacked bar charts (DG); *               Renamed DataSource.java --> Dataset.java etc. (DG); * 31-Oct-2001 : Added 3D-effect vertical bar and stacked-bar charts, *               contributed by Serge V. Grachov (DG); * 07-Nov-2001 : Added a flag to control whether or not a legend is added to *               the chart (DG); * 17-Nov-2001 : For pie chart, changed dataset from CategoryDataset to *               PieDataset (DG); * 30-Nov-2001 : Removed try/catch handlers from chart creation, as the *               exception are now RuntimeExceptions, as suggested by Joao *               Guilherme Del Valle (DG); * 06-Dec-2001 : Added createCombinableXXXXXCharts methods (BK); * 12-Dec-2001 : Added createCandlestickChart() method (DG); * 13-Dec-2001 : Updated methods for charts with new renderers (DG); * 08-Jan-2002 : Added import for *               com.jrefinery.chart.combination.CombinedChart (DG); * 31-Jan-2002 : Changed the createCombinableVerticalXYBarChart() method to use *               renderer (DG); * 06-Feb-2002 : Added new method createWindPlot() (DG); * 23-Apr-2002 : Updates to the chart and plot constructor API (DG); * 21-May-2002 : Added new method createAreaChart() (JI); * 06-Jun-2002 : Added new method createGanttChart() (DG); * 11-Jun-2002 : Renamed createHorizontalStackedBarChart() *               --> createStackedHorizontalBarChart() for consistency (DG); * 06-Aug-2002 : Updated Javadoc comments (DG); * 21-Aug-2002 : Added createPieChart(CategoryDataset) method (DG); * 02-Oct-2002 : Fixed errors reported by Checkstyle (DG); * 09-Oct-2002 : Added methods including tooltips and URL flags (DG); * 06-Nov-2002 : Moved renderers into a separate package (DG); * 18-Nov-2002 : Changed CategoryDataset to TableDataset (DG); * 21-Mar-2003 : Incorporated HorizontalCategoryAxis3D, see bug id 685501 (DG); * 13-May-2003 : Merged some horizontal and vertical methods (DG); * 24-May-2003 : Added support for timeline in createHighLowChart (BK); * 07-Jul-2003 : Added createHistogram() method contributed by Jelai Wang (DG); * 27-Jul-2003 : Added createStackedAreaXYChart() method (RA); * 05-Aug-2003 : added new method createBoxAndWhiskerChart (DB); * 08-Sep-2003 : Changed ValueAxis API (DG); * 07-Oct-2003 : Added stepped area XY chart contributed by Matthias Rose (DG); * 06-Nov-2003 : Added createWaterfallChart() method (DG); * 20-Nov-2003 : Set rendering order for 3D bar charts to fix overlapping *               problems (DG); * 25-Nov-2003 : Added createWaferMapChart() method (DG); * 23-Dec-2003 : Renamed createPie3DChart() --> createPieChart3D for *               consistency (DG); * 20-Jan-2004 : Added createPolarChart() method (DG); * 28-Jan-2004 : Fixed bug (882890) with axis range in *               createStackedXYAreaChart() method (DG); * 25-Feb-2004 : Renamed XYToolTipGenerator --> XYItemLabelGenerator (DG); * 11-Mar-2004 : Updated for pie chart changes (DG); * 27-Apr-2004 : Added new createPieChart() method contributed by Benoit *               Xhenseval (see RFE 942195) (DG); * 11-May-2004 : Split StandardCategoryItemLabelGenerator *               --> StandardCategoryToolTipGenerator and *               StandardCategoryLabelGenerator (DG); * 06-Jan-2005 : Removed deprecated methods (DG); * 27-Jan-2005 : Added new constructor to LineAndShapeRenderer (DG); * 28-Feb-2005 : Added docs to createBubbleChart() method (DG); * 17-Mar-2005 : Added createRingPlot() method (DG); * 21-Apr-2005 : Replaced Insets with RectangleInsets (DG); * 29-Nov-2005 : Removed signal chart (DG); * ------------- JFREECHART 1.0.x --------------------------------------------- * 26-Jan-2006 : Corrected API docs for createScatterPlot() (DG); * 23-Aug-2006 : Modified createStackedXYAreaChart() to use *               StackedXYAreaRenderer2, because StackedXYAreaRenderer doesn't *               handle negative values (DG); * 27-Sep-2006 : Update createPieChart() method for deprecated code (DG); * 29-Nov-2006 : Update createXYBarChart() to use a time based tool tip *               generator is a DateAxis is requested (DG); * 17-Jan-2007 : Added createBoxAndWhiskerChart() method from patch 1603937 *               submitted by Darren Jung (DG); * 10-Jul-2007 : Added new methods to create pie charts with locale for *               section label and tool tip formatting (DG); * 14-Aug-2008 : Added ChartTheme facility (DG); * 23-Oct-2008 : Check for legacy theme in setChartTheme() and reset default *               bar painters (DG); * 20-Dec-2008 : In createStackedAreaChart(), set category margin to 0.0 (DG); * 02-Jul-2013 : Use ParamChecks class (DG); *  */	WITHOUT_CLASSIFICATION	0.971973796935622	WITHOUT_CLASSIFICATION	0.028026203064378002	DEFECT
//get absolute value of log10 value	WITHOUT_CLASSIFICATION	0.9999999308807865	WITHOUT_CLASSIFICATION	6.911921352599887E-8	DEFECT
// suppresses compiler warning	WITHOUT_CLASSIFICATION	0.999999743950822	WITHOUT_CLASSIFICATION	2.560491779675365E-7	DEFECT
// suppresses compiler warning	WITHOUT_CLASSIFICATION	0.999999743950822	WITHOUT_CLASSIFICATION	2.560491779675365E-7	DEFECT
// create the renderer...	WITHOUT_CLASSIFICATION	0.9999884691986121	WITHOUT_CLASSIFICATION	1.1530801387918997E-5	DEFECT
// create the plot...	WITHOUT_CLASSIFICATION	0.9999769234274587	WITHOUT_CLASSIFICATION	2.3076572541227286E-5	DEFECT
// create the chart...	WITHOUT_CLASSIFICATION	0.9999985738987163	WITHOUT_CLASSIFICATION	1.4261012838123405E-6	DEFECT
// forces recalculation of the axis range	WITHOUT_CLASSIFICATION	0.999999830991671	WITHOUT_CLASSIFICATION	1.6900832909622895E-7	DEFECT
// reduce the default margins	WITHOUT_CLASSIFICATION	0.9999999882377714	WITHOUT_CLASSIFICATION	1.1762228645442631E-8	DEFECT
// override default	WITHOUT_CLASSIFICATION	0.9999999415326296	WITHOUT_CLASSIFICATION	5.846737041131874E-8	DEFECT
// get desired width and height from somewhere then...	WITHOUT_CLASSIFICATION	0.9999985884762075	WITHOUT_CLASSIFICATION	1.4115237924744397E-6	DEFECT
// change rendering order to ensure that bar overlapping is the // right way around	WITHOUT_CLASSIFICATION	0.999957920942276	WITHOUT_CLASSIFICATION	4.207905772405033E-5	DEFECT
// change rendering order to ensure that bar overlapping is the // right way around	WITHOUT_CLASSIFICATION	0.999957920942276	WITHOUT_CLASSIFICATION	4.207905772405033E-5	DEFECT
// no need to instantiate this    	WITHOUT_CLASSIFICATION	0.9999991047361084	WITHOUT_CLASSIFICATION	8.95263891558889E-7	DEFECT
// seems to be the same...	WITHOUT_CLASSIFICATION	0.9999910688738429	WITHOUT_CLASSIFICATION	8.931126157115656E-6	DEFECT
/* =========================================================== * JFreeChart : a free chart library for the Java(tm) platform * =========================================================== * * (C) Copyright 2000-2013, by Object Refinery Limited and Contributors. * * Project Info:  http://www.jfree.org/jfreechart/index.html * * This library is free software; you can redistribute it and/or modify it * under the terms of the GNU Lesser General Public License as published by * the Free Software Foundation; either version 2.1 of the License, or * (at your option) any later version. * * This library is distributed in the hope that it will be useful, but * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public * License for more details. * * You should have received a copy of the GNU Lesser General Public * License along with this library; if not, write to the Free Software * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, * USA. * * [Oracle and Java are registered trademarks of Oracle and/or its affiliates.  * Other names may be trademarks of their respective owners.] * * ------------------- * ChartUtilities.java * ------------------- * (C) Copyright 2001-2013, by Object Refinery Limited and Contributors. * * Original Author:  David Gilbert (for Object Refinery Limited); * Contributor(s):   Wolfgang Irler; *                   Richard Atkinson; *                   Xavier Poinsard; * * Changes * ------- * 11-Dec-2001 : Version 1.  The JPEG method comes from Wolfgang Irler's *               JFreeChartServletDemo class (DG); * 23-Jan-2002 : Changed saveChartAsXXX() methods to pass IOExceptions back to *               caller (DG); * 26-Jun-2002 : Added image map methods (DG); * 05-Aug-2002 : Added writeBufferedImage methods *               Modified writeImageMap method to support flexible image *               maps (RA); * 26-Aug-2002 : Added saveChartAsJPEG and writeChartAsJPEG methods with info *               objects (RA); * 05-Sep-2002 : Added writeImageMap() method to support OverLIB *               - http://www.bosrup.com/web/overlib (RA); * 26-Sep-2002 : Fixed errors reported by Checkstyle (DG); * 17-Oct-2002 : Exposed JPEG quality setting and PNG compression level as *               parameters (DG); * 25-Oct-2002 : Fixed writeChartAsJPEG() empty method bug (DG); * 13-Mar-2003 : Updated writeImageMap method as suggested by Xavier Poinsard *               (see Feature Request 688079) (DG); * 12-Aug-2003 : Added support for custom image maps using *               ToolTipTagFragmentGenerator and URLTagFragmentGenerator (RA); * 02-Sep-2003 : Separated PNG encoding from writing chart to an *               OutputStream (RA); * 04-Dec-2003 : Chart draw() method modified to include anchor point (DG); * 20-Feb-2004 : Edited Javadocs and added argument checking (DG); * 05-Apr-2004 : Fixed problem with buffered image type (DG); * 01-Aug-2004 : Modified to use EncoderUtil for all image encoding (RA); * 02-Aug-2004 : Delegated image map related functionality to ImageMapUtil (RA); * 13-Jan-2005 : Renamed ImageMapUtil --> ImageMapUtilities, removed method *               writeImageMap(PrintWriter, String, ChartRenderingInfo) which *               exists in ImageMapUtilities (DG); * ------------- JFREECHART 1.0.x --------------------------------------------- * 06-Feb-2006 : API doc update (DG); * 19-Mar-2007 : Use try-finally to close output stream in saveChartAsXXX() *               methods (DG); * 10-Jan-2008 : Fix bug 1868251 - don't create image with transparency when *               saving to JPEG format (DG); * 02-Jul-2013 : Use ParamChecks class (DG); * */	WITHOUT_CLASSIFICATION	0.9877134941313552	WITHOUT_CLASSIFICATION	0.012286505868644762	DEFECT
/* shape filled = */	WITHOUT_CLASSIFICATION	0.9999995961636198	WITHOUT_CLASSIFICATION	4.038363802370274E-7	DEFECT
/* shape visible = */	WITHOUT_CLASSIFICATION	0.9999997124524997	WITHOUT_CLASSIFICATION	2.8754750025294287E-7	DEFECT
/* shape visible = */	WITHOUT_CLASSIFICATION	0.9999997124524997	WITHOUT_CLASSIFICATION	2.8754750025294287E-7	DEFECT
/* shape visible = */	WITHOUT_CLASSIFICATION	0.9999997124524997	WITHOUT_CLASSIFICATION	2.8754750025294287E-7	DEFECT
/* shape filled = */	WITHOUT_CLASSIFICATION	0.9999995961636198	WITHOUT_CLASSIFICATION	4.038363802370274E-7	DEFECT
/* shape filled = */	WITHOUT_CLASSIFICATION	0.9999995961636198	WITHOUT_CLASSIFICATION	4.038363802370274E-7	DEFECT
/* shape filled = */	WITHOUT_CLASSIFICATION	0.9999995961636198	WITHOUT_CLASSIFICATION	4.038363802370274E-7	DEFECT
/* shape filled = */	WITHOUT_CLASSIFICATION	0.9999995961636198	WITHOUT_CLASSIFICATION	4.038363802370274E-7	DEFECT
/* shape filled = */	WITHOUT_CLASSIFICATION	0.9999995961636198	WITHOUT_CLASSIFICATION	4.038363802370274E-7	DEFECT
/* shape outlined */	WITHOUT_CLASSIFICATION	0.999999639271406	WITHOUT_CLASSIFICATION	3.6072859396726965E-7	DEFECT
/* shape outlined = */	WITHOUT_CLASSIFICATION	0.9999998411404627	WITHOUT_CLASSIFICATION	1.5885953725701658E-7	DEFECT
/* line visible */	WITHOUT_CLASSIFICATION	0.9999995231454744	WITHOUT_CLASSIFICATION	4.768545256587096E-7	DEFECT
/* line visible */	WITHOUT_CLASSIFICATION	0.9999995231454744	WITHOUT_CLASSIFICATION	4.768545256587096E-7	DEFECT
/* shape outlined = */	WITHOUT_CLASSIFICATION	0.9999998411404627	WITHOUT_CLASSIFICATION	1.5885953725701658E-7	DEFECT
/* shape outlined = */	WITHOUT_CLASSIFICATION	0.9999998411404627	WITHOUT_CLASSIFICATION	1.5885953725701658E-7	DEFECT
/* shape outlined = */	WITHOUT_CLASSIFICATION	0.9999998411404627	WITHOUT_CLASSIFICATION	1.5885953725701658E-7	DEFECT
/* line visible = */	WITHOUT_CLASSIFICATION	0.9999994352957221	WITHOUT_CLASSIFICATION	5.647042779230747E-7	DEFECT
/* line visible = */	WITHOUT_CLASSIFICATION	0.9999994352957221	WITHOUT_CLASSIFICATION	5.647042779230747E-7	DEFECT
/* line visible = */	WITHOUT_CLASSIFICATION	0.9999994352957221	WITHOUT_CLASSIFICATION	5.647042779230747E-7	DEFECT
// positiveItemLabelPosition;	WITHOUT_CLASSIFICATION	0.9999999043770107	WITHOUT_CLASSIFICATION	9.562298925101963E-8	DEFECT
// work out if scaling is required...	WITHOUT_CLASSIFICATION	0.8383505211289437	WITHOUT_CLASSIFICATION	0.16164947887105632	DEFECT
/* shape outlined = */	WITHOUT_CLASSIFICATION	0.9999998411404627	WITHOUT_CLASSIFICATION	1.5885953725701658E-7	DEFECT
/* line visible = */	WITHOUT_CLASSIFICATION	0.9999994352957221	WITHOUT_CLASSIFICATION	5.647042779230747E-7	DEFECT
// negativeItemLabelPositionList;	WITHOUT_CLASSIFICATION	0.9999998054453926	WITHOUT_CLASSIFICATION	1.9455460737546823E-7	DEFECT
// ----------------- // --- Constants --- // -----------------	WITHOUT_CLASSIFICATION	0.9999954493031931	WITHOUT_CLASSIFICATION	4.5506968068610005E-6	DEFECT
// ------------------------ // --- Member Variables --- // ------------------------	WITHOUT_CLASSIFICATION	0.999997330537071	WITHOUT_CLASSIFICATION	2.669462929057262E-6	DEFECT
// -------------------- // --- Constructors --- // --------------------	WITHOUT_CLASSIFICATION	0.9999997247411869	WITHOUT_CLASSIFICATION	2.7525881310957464E-7	DEFECT
// -------------------------- // --- ChartPanel Methods --- // --------------------------	WITHOUT_CLASSIFICATION	0.9999998666942689	WITHOUT_CLASSIFICATION	1.3330573121164404E-7	DEFECT
// ---------------------- // --- Public Methods --- // ----------------------	WITHOUT_CLASSIFICATION	0.9999991494369379	WITHOUT_CLASSIFICATION	8.505630620567701E-7	DEFECT
// ----------------------- // --- Private Methods --- // -----------------------	WITHOUT_CLASSIFICATION	0.9999978215030738	WITHOUT_CLASSIFICATION	2.178496926124861E-6	DEFECT
// do nothing at all	WITHOUT_CLASSIFICATION	0.9999954405407309	WITHOUT_CLASSIFICATION	4.55945926907301E-6	DEFECT
// now process the plot if there is one	WITHOUT_CLASSIFICATION	0.9999968991440767	WITHOUT_CLASSIFICATION	3.1008559231954216E-6	DEFECT
// process all domain axes	WITHOUT_CLASSIFICATION	0.9999999648757112	WITHOUT_CLASSIFICATION	3.51242887411E-8	DEFECT
// process all domain axes	WITHOUT_CLASSIFICATION	0.9999999648757112	WITHOUT_CLASSIFICATION	3.51242887411E-8	DEFECT
// process all range axes	WITHOUT_CLASSIFICATION	0.9999999067487441	WITHOUT_CLASSIFICATION	9.325125591238726E-8	DEFECT
// process all range axes	WITHOUT_CLASSIFICATION	0.9999999067487441	WITHOUT_CLASSIFICATION	9.325125591238726E-8	DEFECT
// process all renderers	WITHOUT_CLASSIFICATION	0.9999996467323906	WITHOUT_CLASSIFICATION	3.532676093410872E-7	DEFECT
// process all renderers	WITHOUT_CLASSIFICATION	0.9999996467323906	WITHOUT_CLASSIFICATION	3.532676093410872E-7	DEFECT
// process all annotations	WITHOUT_CLASSIFICATION	0.9999998613154272	WITHOUT_CLASSIFICATION	1.3868457281663864E-7	DEFECT
// BarRenderer	WITHOUT_CLASSIFICATION	0.9999659680763723	WITHOUT_CLASSIFICATION	3.403192362768347E-5	DEFECT
// BarRenderer3D	WITHOUT_CLASSIFICATION	0.9999256099870159	WITHOUT_CLASSIFICATION	7.439001298411899E-5	DEFECT
// LineRenderer3D	WITHOUT_CLASSIFICATION	0.999994323795355	WITHOUT_CLASSIFICATION	5.6762046449062756E-6	DEFECT
//  StatisticalBarRenderer	WITHOUT_CLASSIFICATION	0.9999982061519639	WITHOUT_CLASSIFICATION	1.7938480360970702E-6	DEFECT
// MinMaxCategoryRenderer	WITHOUT_CLASSIFICATION	0.9999968403055584	WITHOUT_CLASSIFICATION	3.1596944417309526E-6	DEFECT
// handle GradientPaint as a special case	WITHOUT_CLASSIFICATION	0.9999999919493099	WITHOUT_CLASSIFICATION	8.05069015160481E-9	DEFECT
// create storage for listeners...	WITHOUT_CLASSIFICATION	0.999999241634392	WITHOUT_CLASSIFICATION	7.583656079897892E-7	DEFECT
// add the chart title, if one has been specified...	WITHOUT_CLASSIFICATION	0.9999998500882176	WITHOUT_CLASSIFICATION	1.4991178238128958E-7	DEFECT
// this fires a ChartChangeEvent	WITHOUT_CLASSIFICATION	0.9999865633350584	WITHOUT_CLASSIFICATION	1.343666494158396E-5	DEFECT
// if the flag is being set to true, there may be queued up changes...	WITHOUT_CLASSIFICATION	0.9999996247256766	WITHOUT_CLASSIFICATION	3.752743234465844E-7	DEFECT
// register as a listener with sub-components...	WITHOUT_CLASSIFICATION	0.9999997450836241	WITHOUT_CLASSIFICATION	2.5491637586462507E-7	DEFECT
// seem to be the same...	WITHOUT_CLASSIFICATION	0.9999971899817603	WITHOUT_CLASSIFICATION	2.8100182397354833E-6	DEFECT
// draw the label	WITHOUT_CLASSIFICATION	0.9999989137923284	WITHOUT_CLASSIFICATION	1.0862076716070919E-6	DEFECT
// clear the section attributes so that the theme's DrawingSupplier // will be used	WITHOUT_CLASSIFICATION	0.9999998714591264	WITHOUT_CLASSIFICATION	1.2854087374405693E-7	DEFECT
// for efficiency, we just use the first, last and middle items to // compute a hashCode...	WITHOUT_CLASSIFICATION	0.9999998905927505	WITHOUT_CLASSIFICATION	1.0940724937977663E-7	DEFECT
// for efficiency, we just use the first, last and middle items to // compute a hashCode...	WITHOUT_CLASSIFICATION	0.9999998905927505	WITHOUT_CLASSIFICATION	1.0940724937977663E-7	DEFECT
// default is to notify listeners when the // chart changes	WITHOUT_CLASSIFICATION	0.9999999312160701	WITHOUT_CLASSIFICATION	6.878392984460666E-8	DEFECT
// added the following hint because of  // http://stackoverflow.com/questions/7785082/	WITHOUT_CLASSIFICATION	0.9999996814904074	WITHOUT_CLASSIFICATION	3.185095926365525E-7	DEFECT
// record the chart area, if info is requested...	WITHOUT_CLASSIFICATION	0.999999018987758	WITHOUT_CLASSIFICATION	9.810122419930505E-7	DEFECT
// ensure no drawing occurs outside chart area...	WITHOUT_CLASSIFICATION	0.9999998903074471	WITHOUT_CLASSIFICATION	1.0969255291915511E-7	DEFECT
// draw the chart background...	WITHOUT_CLASSIFICATION	0.9999915544752872	WITHOUT_CLASSIFICATION	8.445524712718312E-6	DEFECT
// draw the title and subtitles...	WITHOUT_CLASSIFICATION	0.9999675371943382	WITHOUT_CLASSIFICATION	3.2462805661786175E-5	DEFECT
// draw the plot (axes and data visualisation)	WITHOUT_CLASSIFICATION	0.9999961747769287	WITHOUT_CLASSIFICATION	3.825223071364634E-6	DEFECT
// private boolean borderVisible; // private transient Stroke borderStroke; // private transient Paint borderPaint;	WITHOUT_CLASSIFICATION	0.9999979396780257	WITHOUT_CLASSIFICATION	2.0603219742790485E-6	DEFECT
// get a locale-specific resource bundle...	WITHOUT_CLASSIFICATION	0.9999992373681177	WITHOUT_CLASSIFICATION	7.626318823639948E-7	DEFECT
// load only when required	WITHOUT_CLASSIFICATION	0.9998777924289965	WITHOUT_CLASSIFICATION	1.2220757100341688E-4	DEFECT
// use ImageIcon because it waits for the image to load...	WITHOUT_CLASSIFICATION	0.9999801781436145	WITHOUT_CLASSIFICATION	1.9821856385450197E-5	DEFECT
// don't zoom unless the mouse pointer is in the plot's data area	WITHOUT_CLASSIFICATION	0.9999761772835982	WITHOUT_CLASSIFICATION	2.382271640178793E-5	DEFECT
// do not notify while zooming each axis	WITHOUT_CLASSIFICATION	0.9999890451610339	WITHOUT_CLASSIFICATION	1.0954838966123506E-5	DEFECT
// this generates the change event too	WITHOUT_CLASSIFICATION	0.999999465870365	WITHOUT_CLASSIFICATION	5.341296349426386E-7	DEFECT
// if we don't have at least 2 (x, y) coordinates, just return	WITHOUT_CLASSIFICATION	0.9999997548242148	WITHOUT_CLASSIFICATION	2.4517578525022924E-7	DEFECT
// now try to reject equality	WITHOUT_CLASSIFICATION	0.9999999195935826	WITHOUT_CLASSIFICATION	8.040641741302104E-8	DEFECT
// now try to reject equality	WITHOUT_CLASSIFICATION	0.9999999195935826	WITHOUT_CLASSIFICATION	8.040641741302104E-8	DEFECT
// seem to be the same	WITHOUT_CLASSIFICATION	0.9999998225865189	WITHOUT_CLASSIFICATION	1.7741348114670198E-7	DEFECT
// seem to be the same	WITHOUT_CLASSIFICATION	0.9999998225865189	WITHOUT_CLASSIFICATION	1.7741348114670198E-7	DEFECT
// now try to reject equality...	WITHOUT_CLASSIFICATION	0.9999939075911611	WITHOUT_CLASSIFICATION	6.092408838818505E-6	DEFECT
// now try to reject equality...	WITHOUT_CLASSIFICATION	0.9999939075911611	WITHOUT_CLASSIFICATION	6.092408838818505E-6	DEFECT
/* Rectangle2D hotspot = */	WITHOUT_CLASSIFICATION	0.9999940930245702	WITHOUT_CLASSIFICATION	5.906975429833132E-6	DEFECT
// seems to be the same...	WITHOUT_CLASSIFICATION	0.9999910688738429	WITHOUT_CLASSIFICATION	8.931126157115656E-6	DEFECT
// FIXME //SerialUtilities.writeImage(this.image, stream);	WITHOUT_CLASSIFICATION	0.9998927453090564	WITHOUT_CLASSIFICATION	1.0725469094366189E-4	DEFECT
// FIXME //this.image = SerialUtilities.readImage(stream);	WITHOUT_CLASSIFICATION	0.9998542489428559	WITHOUT_CLASSIFICATION	1.457510571440668E-4	DEFECT
// simple case	WITHOUT_CLASSIFICATION	0.9999998763221748	WITHOUT_CLASSIFICATION	1.2367782514679592E-7	DEFECT
// by default the outline and background won't be visible	WITHOUT_CLASSIFICATION	0.9999961855020719	WITHOUT_CLASSIFICATION	3.814497928037048E-6	DEFECT
// now try to reject equality	WITHOUT_CLASSIFICATION	0.9999999195935826	WITHOUT_CLASSIFICATION	8.040641741302104E-8	DEFECT
// create plot ...	WITHOUT_CLASSIFICATION	0.999971314311513	WITHOUT_CLASSIFICATION	2.8685688487015545E-5	DEFECT
// add a second dataset and renderer...	WITHOUT_CLASSIFICATION	0.9995666003031418	WITHOUT_CLASSIFICATION	4.333996968581113E-4	DEFECT
// return a new chart containing the overlaid plot...	WITHOUT_CLASSIFICATION	0.9999999809434388	WITHOUT_CLASSIFICATION	1.905656118432397E-8	DEFECT
// create dataset 1...	WITHOUT_CLASSIFICATION	0.9999992694119223	WITHOUT_CLASSIFICATION	7.30588077701257E-7	DEFECT
// seem to be the same	WITHOUT_CLASSIFICATION	0.9999998225865189	WITHOUT_CLASSIFICATION	1.7741348114670198E-7	DEFECT
// now try to reject equality...	WITHOUT_CLASSIFICATION	0.9999939075911611	WITHOUT_CLASSIFICATION	6.092408838818505E-6	DEFECT
// seems to be the same...	WITHOUT_CLASSIFICATION	0.9999910688738429	WITHOUT_CLASSIFICATION	8.931126157115656E-6	DEFECT
// baseNegativeItemLabelPosition;	WITHOUT_CLASSIFICATION	0.9999998329358039	WITHOUT_CLASSIFICATION	1.6706419612324244E-7	DEFECT
// here we change the AffineTransform so we can draw the annotation // to a larger area and scale it down into the display area // afterwards, the original transform is restored	WITHOUT_CLASSIFICATION	0.9999999993166525	WITHOUT_CLASSIFICATION	6.833474667859485E-10	DEFECT
// compute transform matrix elements via sample points. Assume no // rotation or shear.	WITHOUT_CLASSIFICATION	0.9999915556450586	WITHOUT_CLASSIFICATION	8.444354941354305E-6	DEFECT
//  create transform & transform shape	WITHOUT_CLASSIFICATION	0.9999999230616574	WITHOUT_CLASSIFICATION	7.69383426454928E-8	DEFECT
//SerialUtilities.writeImage(this.image, stream);	WITHOUT_CLASSIFICATION	0.9999999633658269	WITHOUT_CLASSIFICATION	3.663417321947725E-8	DEFECT
//this.image = SerialUtilities.readImage(stream);	WITHOUT_CLASSIFICATION	0.9999999544239531	WITHOUT_CLASSIFICATION	4.557604692509547E-8	DEFECT
// if the axis is not visible, don't draw it...	WITHOUT_CLASSIFICATION	0.9990829177948999	WITHOUT_CLASSIFICATION	9.170822051000825E-4	DEFECT
// ensure the autorange is at least <minRange> in size...	WITHOUT_CLASSIFICATION	0.9999940981913933	WITHOUT_CLASSIFICATION	5.901808606692699E-6	DEFECT
// apply the margins - these should apply to the exponent range	WITHOUT_CLASSIFICATION	0.9999450726580635	WITHOUT_CLASSIFICATION	5.4927341936600865E-5	DEFECT
// even though the axis is not visible, we need ticks for the // gridlines...	WITHOUT_CLASSIFICATION	0.9992901989314753	WITHOUT_CLASSIFICATION	7.09801068524786E-4	DEFECT
// add minor ticks (for gridlines)	WITHOUT_CLASSIFICATION	0.9999996122389233	WITHOUT_CLASSIFICATION	3.87761076636382E-7	DEFECT
// select a tick unit that is the next one bigger than the current // (log) range divided by 50	WITHOUT_CLASSIFICATION	0.9999651520220417	WITHOUT_CLASSIFICATION	3.484797795832878E-5	DEFECT
// while the tick labels overlap and there are more tick sizes available, // choose the next bigger label	WITHOUT_CLASSIFICATION	0.9999986186021024	WITHOUT_CLASSIFICATION	1.38139789765335E-6	DEFECT
// while the tick labels overlap and there are more tick sizes available, // choose the next bigger label	WITHOUT_CLASSIFICATION	0.9999986186021024	WITHOUT_CLASSIFICATION	1.38139789765335E-6	DEFECT
// what is the available space for one unit?	WITHOUT_CLASSIFICATION	0.9999995532959352	WITHOUT_CLASSIFICATION	4.467040648274381E-7	DEFECT
// what is the available space for one unit?	WITHOUT_CLASSIFICATION	0.9999995532959352	WITHOUT_CLASSIFICATION	4.467040648274381E-7	DEFECT
// there are no more candidates	WITHOUT_CLASSIFICATION	0.9999994595208814	WITHOUT_CLASSIFICATION	5.404791186157764E-7	DEFECT
// there are no more candidates	WITHOUT_CLASSIFICATION	0.9999994595208814	WITHOUT_CLASSIFICATION	5.404791186157764E-7	DEFECT
// all tick labels have the same width (equal to the height of the // font)...	WITHOUT_CLASSIFICATION	0.9999856209630993	WITHOUT_CLASSIFICATION	1.43790369008464E-5	DEFECT
// look at lower and upper bounds...	WITHOUT_CLASSIFICATION	0.9998966354644968	WITHOUT_CLASSIFICATION	1.0336453550314615E-4	DEFECT
// no need to create entity if we can't save it anyways...	WITHOUT_CLASSIFICATION	0.9997715545180678	WITHOUT_CLASSIFICATION	2.284454819323582E-4	DEFECT
// it is unlikely that 'state' will be null, but check anyway...	WITHOUT_CLASSIFICATION	0.99995474598097	WITHOUT_CLASSIFICATION	4.525401902997575E-5	DEFECT
// It's up to the plot which clones up to restore the correct references	WITHOUT_CLASSIFICATION	0.9999818480285803	WITHOUT_CLASSIFICATION	1.815197141969519E-5	DEFECT
// draw the category labels and axis label	WITHOUT_CLASSIFICATION	0.9999930006684612	WITHOUT_CLASSIFICATION	6.99933153875365E-6	DEFECT
// regular number axis	WITHOUT_CLASSIFICATION	0.9999993849404925	WITHOUT_CLASSIFICATION	6.150595075647395E-7	DEFECT
// regular number axis	WITHOUT_CLASSIFICATION	0.9999993849404925	WITHOUT_CLASSIFICATION	6.150595075647395E-7	DEFECT
// displayStart > displayEnd, need to handle split	WITHOUT_CLASSIFICATION	0.9999998220551082	WITHOUT_CLASSIFICATION	1.7794489179894561E-7	DEFECT
// displayStart > displayEnd, need to handle split	WITHOUT_CLASSIFICATION	0.9999998220551082	WITHOUT_CLASSIFICATION	1.7794489179894561E-7	DEFECT
// create a new space object if one wasn't supplied...	WITHOUT_CLASSIFICATION	0.9999969196523569	WITHOUT_CLASSIFICATION	3.080347642974771E-6	DEFECT
// if the axis is not visible, no additional space is required...	WITHOUT_CLASSIFICATION	0.9994332521963418	WITHOUT_CLASSIFICATION	5.667478036580778E-4	DEFECT
// if the axis has a fixed dimension, return it...	WITHOUT_CLASSIFICATION	0.9999711996433378	WITHOUT_CLASSIFICATION	2.880035666215083E-5	DEFECT
// get the axis label size and update the space object...	WITHOUT_CLASSIFICATION	0.9999574295023317	WITHOUT_CLASSIFICATION	4.2570497668256425E-5	DEFECT
//negative values not allowed	WITHOUT_CLASSIFICATION	0.9999827231756379	WITHOUT_CLASSIFICATION	1.727682436213822E-5	DEFECT
// no plot, no data.	WITHOUT_CLASSIFICATION	0.9999985703172577	WITHOUT_CLASSIFICATION	1.4296827422919266E-6	DEFECT
// no plot, no data	WITHOUT_CLASSIFICATION	0.9999983679629575	WITHOUT_CLASSIFICATION	1.6320370425117493E-6	DEFECT
// if the axis is not visible, no additional space is required...	WITHOUT_CLASSIFICATION	0.9994332521963418	WITHOUT_CLASSIFICATION	5.667478036580778E-4	DEFECT
// if the axis has a fixed dimension, return it...	WITHOUT_CLASSIFICATION	0.9999711996433378	WITHOUT_CLASSIFICATION	2.880035666215083E-5	DEFECT
// get the axis label size and update the space object...	WITHOUT_CLASSIFICATION	0.9999574295023317	WITHOUT_CLASSIFICATION	4.2570497668256425E-5	DEFECT
// baseCreateEntities;	WITHOUT_CLASSIFICATION	0.9999999400981291	WITHOUT_CLASSIFICATION	5.990187082630117E-8	DEFECT
// add space for the outer tick labels, if any...	WITHOUT_CLASSIFICATION	0.9999838195035575	WITHOUT_CLASSIFICATION	1.6180496442480062E-5	DEFECT
// draw minor tick marks	WITHOUT_CLASSIFICATION	0.9999997056435562	WITHOUT_CLASSIFICATION	2.9435644375978804E-7	DEFECT
// work out the initial gap	WITHOUT_CLASSIFICATION	0.9999686256331123	WITHOUT_CLASSIFICATION	3.137436688760116E-5	DEFECT
// this is the last period, but it is only partially visible // so check that the label will fit before displaying it...	WITHOUT_CLASSIFICATION	0.9993900873485909	WITHOUT_CLASSIFICATION	6.099126514091801E-4	DEFECT
// this is the first period, but it is only partially visible // so check that the label will fit before displaying it...	WITHOUT_CLASSIFICATION	0.999863225241755	WITHOUT_CLASSIFICATION	1.3677475824491083E-4	DEFECT
// work out the trailing gap	WITHOUT_CLASSIFICATION	0.999935737466096	WITHOUT_CLASSIFICATION	6.426253390399755E-5	DEFECT
// draw the arrow...	WITHOUT_CLASSIFICATION	0.9999758127427211	WITHOUT_CLASSIFICATION	2.4187257278930447E-5	DEFECT
// need to work out the space used by the tick labels... // so we can update the cursor...	WITHOUT_CLASSIFICATION	0.9999272002024802	WITHOUT_CLASSIFICATION	7.27997975198543E-5	DEFECT
// calculate the max size of the tick labels (if visible)...	WITHOUT_CLASSIFICATION	0.9999807173859935	WITHOUT_CLASSIFICATION	1.9282614006494234E-5	DEFECT
// if autoRange is true, then the current range is irrelevant	WITHOUT_CLASSIFICATION	0.999999926651494	WITHOUT_CLASSIFICATION	7.334850598827172E-8	DEFECT
//setup number formatter obj	WITHOUT_CLASSIFICATION	0.9999999560726482	WITHOUT_CLASSIFICATION	4.3927351695719554E-8	DEFECT
//setup number formatter obj	WITHOUT_CLASSIFICATION	0.9999999560726482	WITHOUT_CLASSIFICATION	4.3927351695719554E-8	DEFECT
// if negative then set flag and make positive	WITHOUT_CLASSIFICATION	0.99999959949875	WITHOUT_CLASSIFICATION	4.005012500455454E-7	DEFECT
// if negative then set flag and make positive	WITHOUT_CLASSIFICATION	0.99999959949875	WITHOUT_CLASSIFICATION	4.005012500455454E-7	DEFECT
//return value; negate if original value was negative:	WITHOUT_CLASSIFICATION	0.9999987723737642	WITHOUT_CLASSIFICATION	1.2276262358078256E-6	DEFECT
//invert adjustLog10	WITHOUT_CLASSIFICATION	0.999999970258382	WITHOUT_CLASSIFICATION	2.974161798060579E-8	DEFECT
//calculate floor using negative value:	WITHOUT_CLASSIFICATION	0.9999986587177473	WITHOUT_CLASSIFICATION	1.3412822527482975E-6	DEFECT
//calculate power using positive value; then negate	WITHOUT_CLASSIFICATION	0.999999487061615	WITHOUT_CLASSIFICATION	5.129383849057474E-7	DEFECT
//negative values are allowed	WITHOUT_CLASSIFICATION	0.9999973424172925	WITHOUT_CLASSIFICATION	2.657582707378296E-6	DEFECT
//calculate ceil using negative value:	WITHOUT_CLASSIFICATION	0.9999994969394586	WITHOUT_CLASSIFICATION	5.03060541538454E-7	DEFECT
// ensure the autorange is at least <minRange> in size...	WITHOUT_CLASSIFICATION	0.9999940981913933	WITHOUT_CLASSIFICATION	5.901808606692699E-6	DEFECT
// legendTextPaint	WITHOUT_CLASSIFICATION	0.9999976390882506	WITHOUT_CLASSIFICATION	2.3609117494136205E-6	DEFECT
//setup for "1e#"-style tick labels or regular // numeric tick labels, depending on flag:	WITHOUT_CLASSIFICATION	0.9999949167628581	WITHOUT_CLASSIFICATION	5.083237141922689E-6	DEFECT
// if < 10 then //increase so 0 translates to 0	WITHOUT_CLASSIFICATION	0.999999836966982	WITHOUT_CLASSIFICATION	1.6303301796653859E-7	DEFECT
//negative values are allowed //parameter value is > 10 // The Math.log() function is based on e not 10.	WITHOUT_CLASSIFICATION	0.999833507500816	WITHOUT_CLASSIFICATION	1.6649249918397447E-4	DEFECT
//parameter value is < -10 //calculate log using positive value:	WITHOUT_CLASSIFICATION	0.9999988845325265	WITHOUT_CLASSIFICATION	1.1154674735143858E-6	DEFECT
//parameter value is -10 > val < 10 //use as-is	WITHOUT_CLASSIFICATION	0.999998230589899	WITHOUT_CLASSIFICATION	1.7694101010384454E-6	DEFECT
//parameter value is -10 > val < 10 //use as-is	WITHOUT_CLASSIFICATION	0.999998230589899	WITHOUT_CLASSIFICATION	1.7694101010384454E-6	DEFECT
//negative values not allowed //parameter value is > 0 // The Math.log() function is based on e not 10.	WITHOUT_CLASSIFICATION	0.9999155379774279	WITHOUT_CLASSIFICATION	8.4462022571992E-5	DEFECT
//parameter value is <= 0 //use as-is	WITHOUT_CLASSIFICATION	0.9999986815865605	WITHOUT_CLASSIFICATION	1.3184134394956861E-6	DEFECT
//parameter value is > 10 // The Math.log() function is based on e not 10.	WITHOUT_CLASSIFICATION	0.999883970565289	WITHOUT_CLASSIFICATION	1.1602943471105414E-4	DEFECT
//parameter value is > 0 // The Math.log() function is based on e not 10.	WITHOUT_CLASSIFICATION	0.9999053786169748	WITHOUT_CLASSIFICATION	9.462138302510114E-5	DEFECT
//no real data present	WITHOUT_CLASSIFICATION	0.999999600963989	WITHOUT_CLASSIFICATION	3.990360109532636E-7	DEFECT
//get lower bound value	WITHOUT_CLASSIFICATION	0.9999991891140593	WITHOUT_CLASSIFICATION	8.108859407825678E-7	DEFECT
//actual data is present //get lower bound value	WITHOUT_CLASSIFICATION	0.999996099744886	WITHOUT_CLASSIFICATION	3.900255113975951E-6	DEFECT
//strict flag set, allow-negatives not set and values <= 0	WITHOUT_CLASSIFICATION	0.9999965834919217	WITHOUT_CLASSIFICATION	3.416508078267501E-6	DEFECT
//apply lower margin by decreasing lower bound:	WITHOUT_CLASSIFICATION	0.9999921338516963	WITHOUT_CLASSIFICATION	7.866148303724479E-6	DEFECT
//lower bound and margin OK; get log10 of lower bound	WITHOUT_CLASSIFICATION	0.9999995218528711	WITHOUT_CLASSIFICATION	4.781471288315319E-7	DEFECT
//get absolute value of log10 value	WITHOUT_CLASSIFICATION	0.9999999308807865	WITHOUT_CLASSIFICATION	6.911921352599887E-8	DEFECT
//need to account for case where upper==0.0	WITHOUT_CLASSIFICATION	0.9999775938766016	WITHOUT_CLASSIFICATION	2.240612339844582E-5	DEFECT
//setup flag based on bounds values	WITHOUT_CLASSIFICATION	0.999995598116258	WITHOUT_CLASSIFICATION	4.401883741961322E-6	DEFECT
//get lower bound value:	WITHOUT_CLASSIFICATION	0.9999976152499706	WITHOUT_CLASSIFICATION	2.384750029440419E-6	DEFECT
//get upper bound value	WITHOUT_CLASSIFICATION	0.9999992283202438	WITHOUT_CLASSIFICATION	7.716797560948722E-7	DEFECT
//get log10 version of upper bound and round to integer:	WITHOUT_CLASSIFICATION	0.99998556691041	WITHOUT_CLASSIFICATION	1.4433089590085553E-5	DEFECT
//for each power of 10 value; create ten ticks	WITHOUT_CLASSIFICATION	0.9999974469044729	WITHOUT_CLASSIFICATION	2.5530955270513257E-6	DEFECT
//for each tick to be displayed	WITHOUT_CLASSIFICATION	0.9999969415981436	WITHOUT_CLASSIFICATION	3.0584018563754425E-6	DEFECT
//small log values in use; create numeric value for tick	WITHOUT_CLASSIFICATION	0.9999990174139839	WITHOUT_CLASSIFICATION	9.825860160827437E-7	DEFECT
//create tick label (force use of fmt obj):	WITHOUT_CLASSIFICATION	0.9999995004021	WITHOUT_CLASSIFICATION	4.995978999428858E-7	DEFECT
//no tick label to be shown	WITHOUT_CLASSIFICATION	0.9999955037269734	WITHOUT_CLASSIFICATION	4.4962730265276895E-6	DEFECT
//create tick label:	WITHOUT_CLASSIFICATION	0.9999959959229864	WITHOUT_CLASSIFICATION	4.004077013684951E-6	DEFECT
//get lower bound value:	WITHOUT_CLASSIFICATION	0.9999976152499706	WITHOUT_CLASSIFICATION	2.384750029440419E-6	DEFECT
//if autorange still below minimum then adjust by 1% // (can be needed when minRange is very small):	WITHOUT_CLASSIFICATION	0.9999995989655952	WITHOUT_CLASSIFICATION	4.010344047907682E-7	DEFECT
//get upper bound value	WITHOUT_CLASSIFICATION	0.9999992283202438	WITHOUT_CLASSIFICATION	7.716797560948722E-7	DEFECT
//if small log values and lower bound value too small // then set to a small value (don't allow <= 0):	WITHOUT_CLASSIFICATION	0.9999495114286338	WITHOUT_CLASSIFICATION	5.048857136620879E-5	DEFECT
//get log10 version of lower bound and round to integer:	WITHOUT_CLASSIFICATION	0.999993128359204	WITHOUT_CLASSIFICATION	6.8716407960243435E-6	DEFECT
//get log10 version of upper bound and round to integer:	WITHOUT_CLASSIFICATION	0.99998556691041	WITHOUT_CLASSIFICATION	1.4433089590085553E-5	DEFECT
//for each tick to be displayed	WITHOUT_CLASSIFICATION	0.9999969415981436	WITHOUT_CLASSIFICATION	3.0584018563754425E-6	DEFECT
//only 1 power of 10 value, it's > 0 and its resulting // tick value will be larger than lower bound of data //decrement to generate more ticks	WITHOUT_CLASSIFICATION	0.9999983450917727	WITHOUT_CLASSIFICATION	1.6549082274179889E-6	DEFECT
//showing "1e#"-style ticks or negative exponent // generating tick value between 0 & 1; show fewer	WITHOUT_CLASSIFICATION	0.9999971160998028	WITHOUT_CLASSIFICATION	2.8839001972260886E-6	DEFECT
//tick value not between 0 & 1 //show tick label if it's the first or last in // the set, or if it's 1-5; beyond that show // fewer as the values get larger:	WITHOUT_CLASSIFICATION	0.9999997279881953	WITHOUT_CLASSIFICATION	2.720118048013757E-7	DEFECT
//not small log values in use; allow for values <= 0 //if did zero tick last iter then //decrement to do 1.0 tick now //calculate power-of-ten value for tick:	WITHOUT_CLASSIFICATION	0.9999989197081893	WITHOUT_CLASSIFICATION	1.0802918106008674E-6	DEFECT
// did not do zero tick last iteration	WITHOUT_CLASSIFICATION	0.9999923332307049	WITHOUT_CLASSIFICATION	7.666769295032839E-6	DEFECT
//tick value is 1.0 and 0.0 is within data range //set tick value to zero //indicate zero tick	WITHOUT_CLASSIFICATION	0.9999927138526697	WITHOUT_CLASSIFICATION	7.2861473302854365E-6	DEFECT
// if past highest data value then exit // method	WITHOUT_CLASSIFICATION	0.9999996581040183	WITHOUT_CLASSIFICATION	3.4189598168047243E-7	DEFECT
//tick value not below lowest data value	WITHOUT_CLASSIFICATION	0.9999984632493942	WITHOUT_CLASSIFICATION	1.536750605815917E-6	DEFECT
//for each tick with a label to be displayed	WITHOUT_CLASSIFICATION	0.9999969178920806	WITHOUT_CLASSIFICATION	3.082107919380994E-6	DEFECT
//small log values in use	WITHOUT_CLASSIFICATION	0.999998030122347	WITHOUT_CLASSIFICATION	1.9698776530447476E-6	DEFECT
//first tick of group; create label text	WITHOUT_CLASSIFICATION	0.9999994984293944	WITHOUT_CLASSIFICATION	5.01570605575544E-7	DEFECT
//not "log10"-type label	WITHOUT_CLASSIFICATION	0.9999693830787326	WITHOUT_CLASSIFICATION	3.061692126740751E-5	DEFECT
//if small log values and lower bound value too small // then set to a small value (don't allow <= 0):	WITHOUT_CLASSIFICATION	0.9999495114286338	WITHOUT_CLASSIFICATION	5.048857136620879E-5	DEFECT
//only 1 power of 10 value, it's > 0 and its resulting // tick value will be larger than lower bound of data //decrement to generate more ticks	WITHOUT_CLASSIFICATION	0.9999983450917727	WITHOUT_CLASSIFICATION	1.6549082274179889E-6	DEFECT
//tick value not below lowest data value	WITHOUT_CLASSIFICATION	0.9999984632493942	WITHOUT_CLASSIFICATION	1.536750605815917E-6	DEFECT
// ITEM_LABEL_PAINT	WITHOUT_CLASSIFICATION	0.9999936939065076	WITHOUT_CLASSIFICATION	6.306093492425832E-6	DEFECT
//if flag then //create "log10"-type label	WITHOUT_CLASSIFICATION	0.999977813763953	WITHOUT_CLASSIFICATION	2.2186236046932967E-5	DEFECT
//if flag then //create "1e#"-type label	WITHOUT_CLASSIFICATION	0.9999732416559688	WITHOUT_CLASSIFICATION	2.6758344031162123E-5	DEFECT
//not "1e#"-type label // if positive exponent then // make integer	WITHOUT_CLASSIFICATION	0.999992264204678	WITHOUT_CLASSIFICATION	7.735795321991444E-6	DEFECT
//negative exponent; create fractional value //set exact number of fractional digits to // be shown:	WITHOUT_CLASSIFICATION	0.9999813841815571	WITHOUT_CLASSIFICATION	1.8615818442788433E-5	DEFECT
//not small log values in use; allow for values <= 0 //if did zero tick last iter then	WITHOUT_CLASSIFICATION	0.9999981287458347	WITHOUT_CLASSIFICATION	1.8712541652316532E-6	DEFECT
//decrement to do 1.0 tick now	WITHOUT_CLASSIFICATION	0.9999885275220294	WITHOUT_CLASSIFICATION	1.1472477970716269E-5	DEFECT
//first tick of group // did not do zero tick last // iteration	WITHOUT_CLASSIFICATION	0.9999997654148784	WITHOUT_CLASSIFICATION	2.3458512163506522E-7	DEFECT
// not first or last tick on graph and value // is 1.0 //change value to 0.0 //indicate zero tick //create label for tick	WITHOUT_CLASSIFICATION	0.9999997826452368	WITHOUT_CLASSIFICATION	2.17354763272572E-7	DEFECT
//first or last tick on graph or value is 1.0 //create label for tick:	WITHOUT_CLASSIFICATION	0.9999977230096068	WITHOUT_CLASSIFICATION	2.2769903932852444E-6	DEFECT
//create "log10"-type label	WITHOUT_CLASSIFICATION	0.999998387603497	WITHOUT_CLASSIFICATION	1.6123965030350887E-6	DEFECT
//create "1e#"-type label	WITHOUT_CLASSIFICATION	0.9999986585421484	WITHOUT_CLASSIFICATION	1.341457851498885E-6	DEFECT
// did zero tick last iteration //no label //clear flag	WITHOUT_CLASSIFICATION	0.9999951198216055	WITHOUT_CLASSIFICATION	4.880178394469884E-6	DEFECT
// not first tick of group //no label //make sure flag cleared	WITHOUT_CLASSIFICATION	0.9999994622047429	WITHOUT_CLASSIFICATION	5.377952570825248E-7	DEFECT
//if past highest data value then exit method	WITHOUT_CLASSIFICATION	0.9999978387378596	WITHOUT_CLASSIFICATION	2.161262140384336E-6	DEFECT
//create tick object and add to list:	WITHOUT_CLASSIFICATION	0.9999937829839239	WITHOUT_CLASSIFICATION	6.21701607595933E-6	DEFECT
//using exponents or force-formatter flag is set // (convert 'E' to lower-case 'e'):	WITHOUT_CLASSIFICATION	0.9999996337760357	WITHOUT_CLASSIFICATION	3.6622396428022056E-7	DEFECT
// populate deprecated fields	WITHOUT_CLASSIFICATION	0.9999999649982192	WITHOUT_CLASSIFICATION	3.5001780804536604E-8	DEFECT
// usually the range will be a DateRange, but if it isn't do a // conversion...	WITHOUT_CLASSIFICATION	0.9998883227814097	WITHOUT_CLASSIFICATION	1.1167721859038603E-4	DEFECT
// check the new minimum date relative to the current maximum date	WITHOUT_CLASSIFICATION	0.999999925854999	WITHOUT_CLASSIFICATION	7.414500102961948E-8	DEFECT
// check the new maximum date relative to the current minimum date	WITHOUT_CLASSIFICATION	0.9999999345207097	WITHOUT_CLASSIFICATION	6.547929041735098E-8	DEFECT
// long result = calendar.getTimeInMillis(); // won't work with JDK 1.3	WITHOUT_CLASSIFICATION	0.9338220286975315	WITHOUT_CLASSIFICATION	0.06617797130246833	DEFECT
// date formatters	WITHOUT_CLASSIFICATION	0.9999986511575709	WITHOUT_CLASSIFICATION	1.3488424290631569E-6	DEFECT
// milliseconds	WITHOUT_CLASSIFICATION	0.9999892411077669	WITHOUT_CLASSIFICATION	1.0758892233141817E-5	DEFECT
// look at lower and upper bounds...	WITHOUT_CLASSIFICATION	0.9998966354644968	WITHOUT_CLASSIFICATION	1.0336453550314615E-4	DEFECT
// create a new space object if one wasn't supplied...	WITHOUT_CLASSIFICATION	0.9999969196523569	WITHOUT_CLASSIFICATION	3.080347642974771E-6	DEFECT
// if the axis is not visible, no additional space is required...	WITHOUT_CLASSIFICATION	0.9994332521963418	WITHOUT_CLASSIFICATION	5.667478036580778E-4	DEFECT
// seconds	WITHOUT_CLASSIFICATION	0.9999813175206453	WITHOUT_CLASSIFICATION	1.8682479354645606E-5	DEFECT
// minutes	WITHOUT_CLASSIFICATION	0.9999995128235066	WITHOUT_CLASSIFICATION	4.871764933339926E-7	DEFECT
// hours	WITHOUT_CLASSIFICATION	0.9999978935786573	WITHOUT_CLASSIFICATION	2.1064213427041694E-6	DEFECT
// days	WITHOUT_CLASSIFICATION	0.9999721824047783	WITHOUT_CLASSIFICATION	2.7817595221713207E-5	DEFECT
// months	WITHOUT_CLASSIFICATION	0.9999983131566846	WITHOUT_CLASSIFICATION	1.6868433153571864E-6	DEFECT
// years	WITHOUT_CLASSIFICATION	0.9999805568619472	WITHOUT_CLASSIFICATION	1.9443138052772254E-5	DEFECT
//Timeline hasn't method getStartTime()	WITHOUT_CLASSIFICATION	0.9999997160402793	WITHOUT_CLASSIFICATION	2.839597207189628E-7	DEFECT
// start with the current tick unit...	WITHOUT_CLASSIFICATION	0.9999065614177961	WITHOUT_CLASSIFICATION	9.343858220387746E-5	DEFECT
// then extrapolate...	WITHOUT_CLASSIFICATION	0.9999303881785186	WITHOUT_CLASSIFICATION	6.961182148135358E-5	DEFECT
// start with a unit that is at least 1/10th of the axis length	WITHOUT_CLASSIFICATION	0.9999682433241344	WITHOUT_CLASSIFICATION	3.1756675865553104E-5	DEFECT
// now extrapolate based on label height and unit height...	WITHOUT_CLASSIFICATION	0.999423538786247	WITHOUT_CLASSIFICATION	5.76461213752981E-4	DEFECT
// make final selection...	WITHOUT_CLASSIFICATION	0.999979163976612	WITHOUT_CLASSIFICATION	2.0836023387976026E-5	DEFECT
// all tick labels have the same width (equal to the height of // the font)...	WITHOUT_CLASSIFICATION	0.9999719488055273	WITHOUT_CLASSIFICATION	2.8051194472754807E-5	DEFECT
// could add a flag to make the following correction optional...	WITHOUT_CLASSIFICATION	0.9982602531147934	WITHOUT_CLASSIFICATION	0.0017397468852066948	DEFECT
// could add a flag to make the following correction optional...	WITHOUT_CLASSIFICATION	0.9982602531147934	WITHOUT_CLASSIFICATION	0.0017397468852066948	DEFECT
// work out the value, label and position	WITHOUT_CLASSIFICATION	0.999915393545508	WITHOUT_CLASSIFICATION	8.460645449208292E-5	DEFECT
// work out the value, label and position	WITHOUT_CLASSIFICATION	0.999915393545508	WITHOUT_CLASSIFICATION	8.460645449208292E-5	DEFECT
// even though the axis is not visible, we need to refresh ticks in // case the grid is being drawn...	WITHOUT_CLASSIFICATION	0.9970315791643655	WITHOUT_CLASSIFICATION	0.002968420835634472	DEFECT
// draw the tick marks and labels...	WITHOUT_CLASSIFICATION	0.9999827245199777	WITHOUT_CLASSIFICATION	1.7275480022219273E-5	DEFECT
// draw the axis label (note that 'state' is passed in *and* // returned)...	WITHOUT_CLASSIFICATION	0.9999998106761395	WITHOUT_CLASSIFICATION	1.8932386032777894E-7	DEFECT
// when zooming to sub-millisecond ranges, it can be the case that // adjEnd == adjStart...and we can't have an axis with zero length // so we apply this instead:	WITHOUT_CLASSIFICATION	0.9999973825381634	WITHOUT_CLASSIFICATION	2.6174618365796267E-6	DEFECT
// 'dateTickUnit' is immutable : no need to clone	WITHOUT_CLASSIFICATION	0.9999916394806689	WITHOUT_CLASSIFICATION	8.36051933102001E-6	DEFECT
// 'tickMarkPosition' is immutable : no need to clone	WITHOUT_CLASSIFICATION	0.9999547651533083	WITHOUT_CLASSIFICATION	4.523484669164432E-5	DEFECT
// if there is no specific font, use the general one...	WITHOUT_CLASSIFICATION	0.99999990997901	WITHOUT_CLASSIFICATION	9.002099003633594E-8	DEFECT
// if there is no specific paint, use the general one...	WITHOUT_CLASSIFICATION	0.9999999317749995	WITHOUT_CLASSIFICATION	6.822500060927442E-8	DEFECT
// find first excluded base segment starting fromDomainValue	WITHOUT_CLASSIFICATION	0.9999997599092947	WITHOUT_CLASSIFICATION	2.4009070536197163E-7	DEFECT
// draw the category labels and axis label	WITHOUT_CLASSIFICATION	0.9999930006684612	WITHOUT_CLASSIFICATION	6.99933153875365E-6	DEFECT
// get the axis label size and update the space object...	WITHOUT_CLASSIFICATION	0.9999574295023317	WITHOUT_CLASSIFICATION	4.2570497668256425E-5	DEFECT
// calculate the max size of the tick labels (if visible)...	WITHOUT_CLASSIFICATION	0.9999807173859935	WITHOUT_CLASSIFICATION	1.9282614006494234E-5	DEFECT
// nothing required	WITHOUT_CLASSIFICATION	0.9999897516574573	WITHOUT_CLASSIFICATION	1.0248342542798284E-5	DEFECT
// sanity check for data area...	WITHOUT_CLASSIFICATION	0.9999984756237744	WITHOUT_CLASSIFICATION	1.524376225558787E-6	DEFECT
// step down in size until the current size is too small or there are  // no more units	WITHOUT_CLASSIFICATION	0.9999996569838567	WITHOUT_CLASSIFICATION	3.430161433129719E-7	DEFECT
//////////////////////////////////////////////////////////////////////////// // predetermined segments sizes ////////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999996465961241	WITHOUT_CLASSIFICATION	3.534038759676561E-7	DEFECT
//////////////////////////////////////////////////////////////////////////// // other constants ////////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999998557480659	WITHOUT_CLASSIFICATION	1.4425193399702362E-7	DEFECT
//////////////////////////////////////////////////////////////////////////// // private attributes ////////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999998231733377	WITHOUT_CLASSIFICATION	1.7682666237390945E-7	DEFECT
//////////////////////////////////////////////////////////////////////////// // static block ////////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999995650032796	WITHOUT_CLASSIFICATION	4.3499672044745143E-7	DEFECT
// make a time zone with no DST for our Calendar calculations	WITHOUT_CLASSIFICATION	0.9999999523617854	WITHOUT_CLASSIFICATION	4.76382146456122E-8	DEFECT
// calculate midnight of first monday after 1/1/1900 relative to // current locale	WITHOUT_CLASSIFICATION	0.9999987532294168	WITHOUT_CLASSIFICATION	1.2467705832112182E-6	DEFECT
//////////////////////////////////////////////////////////////////////////// // constructors and factory methods ////////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999999697221555	WITHOUT_CLASSIFICATION	3.027784437436643E-8	DEFECT
//////////////////////////////////////////////////////////////////////////// // operations ////////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999997906357269	WITHOUT_CLASSIFICATION	2.093642730532664E-7	DEFECT
// verify that baseTimeline is compatible with us	WITHOUT_CLASSIFICATION	0.9999999010322937	WITHOUT_CLASSIFICATION	9.896770621729163E-8	DEFECT
// - partialTimeInException;	WITHOUT_CLASSIFICATION	0.9999994075626829	WITHOUT_CLASSIFICATION	5.924373171330355E-7	DEFECT
// - partialTimeInException;	WITHOUT_CLASSIFICATION	0.9999994075626829	WITHOUT_CLASSIFICATION	5.924373171330355E-7	DEFECT
//return toTimelineValue(dateDomainValue.getTime());	WITHOUT_CLASSIFICATION	0.9999999190442347	WITHOUT_CLASSIFICATION	8.095576538005854E-8	DEFECT
// calculate the result as if no exceptions	WITHOUT_CLASSIFICATION	0.9999998488463742	WITHOUT_CLASSIFICATION	1.5115362593624666E-7	DEFECT
// adjust result for any exceptions in the result calculated	WITHOUT_CLASSIFICATION	0.9999993890027338	WITHOUT_CLASSIFICATION	6.109972662664301E-7	DEFECT
// skip all whole exception segments in the range	WITHOUT_CLASSIFICATION	0.9999996603962915	WITHOUT_CLASSIFICATION	3.396037085302103E-7	DEFECT
// skip exception or excluded segments we may fall on	WITHOUT_CLASSIFICATION	0.9999799112045846	WITHOUT_CLASSIFICATION	2.008879541541629E-5	DEFECT
//addException(exceptionDate.getTime());	WITHOUT_CLASSIFICATION	0.9999973957412602	WITHOUT_CLASSIFICATION	2.6042587396779247E-6	DEFECT
// find all consecutive included segments	WITHOUT_CLASSIFICATION	0.9999992949856378	WITHOUT_CLASSIFICATION	7.050143622431174E-7	DEFECT
// add the interval as an exception	WITHOUT_CLASSIFICATION	0.999999973771615	WITHOUT_CLASSIFICATION	2.6228385046524425E-8	DEFECT
// find all consecutive included segments	WITHOUT_CLASSIFICATION	0.9999992949856378	WITHOUT_CLASSIFICATION	7.050143622431174E-7	DEFECT
// move forward exceptionSegmentCount segments skipping // excluded segments	WITHOUT_CLASSIFICATION	0.9999983304374533	WITHOUT_CLASSIFICATION	1.6695625466338798E-6	DEFECT
// empty	WITHOUT_CLASSIFICATION	0.9999962941923679	WITHOUT_CLASSIFICATION	3.7058076320617287E-6	DEFECT
// add the interval as an exception	WITHOUT_CLASSIFICATION	0.999999973771615	WITHOUT_CLASSIFICATION	2.6228385046524425E-8	DEFECT
// this is not one of our included segment, skip it	WITHOUT_CLASSIFICATION	0.9999127251245801	WITHOUT_CLASSIFICATION	8.727487541995375E-5	DEFECT
// first check that autoPopulate==false works as expected	WITHOUT_CLASSIFICATION	0.9999999856634664	WITHOUT_CLASSIFICATION	1.4336533643072603E-8	DEFECT
// cycle over all the base segments groups in the range	WITHOUT_CLASSIFICATION	0.9999996421712842	WITHOUT_CLASSIFICATION	3.5782871568016975E-7	DEFECT
// cycle through all the segments contained in the base exclusion // area	WITHOUT_CLASSIFICATION	0.9999983679986851	WITHOUT_CLASSIFICATION	1.6320013148518694E-6	DEFECT
// go to next base segment group	WITHOUT_CLASSIFICATION	0.9999902088805256	WITHOUT_CLASSIFICATION	9.791119474419127E-6	DEFECT
// key not found	WITHOUT_CLASSIFICATION	0.9999710096420941	WITHOUT_CLASSIFICATION	2.8990357905997355E-5	DEFECT
// Segment fromSegment = getSegment(from); // fromSegment.inc(); // Segment toSegment = getSegment(to); // toSegment.dec();	WITHOUT_CLASSIFICATION	0.9999967530194378	WITHOUT_CLASSIFICATION	3.2469805622369532E-6	DEFECT
// long start = Math.max( //     fromSegment.getSegmentStart(), this.segmentStart // ); // long end = Math.min(toSegment.getSegmentEnd(), this.segmentEnd);	WITHOUT_CLASSIFICATION	0.9999977979887505	WITHOUT_CLASSIFICATION	2.202011249370814E-6	DEFECT
// Compute number of labels	WITHOUT_CLASSIFICATION	0.9999998398561988	WITHOUT_CLASSIFICATION	1.601438011995821E-7	DEFECT
// Cycle when necessary	WITHOUT_CLASSIFICATION	0.9999999456953579	WITHOUT_CLASSIFICATION	5.4304642182860736E-8	DEFECT
// Cycle when necessary	WITHOUT_CLASSIFICATION	0.9999999456953579	WITHOUT_CLASSIFICATION	5.4304642182860736E-8	DEFECT
// If tick overlap when cycling, update last tick too	WITHOUT_CLASSIFICATION	0.9999992440235271	WITHOUT_CLASSIFICATION	7.559764729079209E-7	DEFECT
// continue and separate the labels only if necessary	WITHOUT_CLASSIFICATION	0.999999414228646	WITHOUT_CLASSIFICATION	5.857713539096283E-7	DEFECT
// TOP	WITHOUT_CLASSIFICATION	0.9999628286990022	WITHOUT_CLASSIFICATION	3.717130099776235E-5	DEFECT
// TOP	WITHOUT_CLASSIFICATION	0.9999628286990022	WITHOUT_CLASSIFICATION	3.717130099776235E-5	DEFECT
// TOP	WITHOUT_CLASSIFICATION	0.9999628286990022	WITHOUT_CLASSIFICATION	3.717130099776235E-5	DEFECT
// BOTTOM	WITHOUT_CLASSIFICATION	0.9999487075444959	WITHOUT_CLASSIFICATION	5.129245550408474E-5	DEFECT
// BOTTOM	WITHOUT_CLASSIFICATION	0.9999487075444959	WITHOUT_CLASSIFICATION	5.129245550408474E-5	DEFECT
// BOTTOM	WITHOUT_CLASSIFICATION	0.9999487075444959	WITHOUT_CLASSIFICATION	5.129245550408474E-5	DEFECT
// LEFT	WITHOUT_CLASSIFICATION	0.9999950611017026	WITHOUT_CLASSIFICATION	4.938898297497209E-6	DEFECT
// LEFT	WITHOUT_CLASSIFICATION	0.9999950611017026	WITHOUT_CLASSIFICATION	4.938898297497209E-6	DEFECT
// LEFT	WITHOUT_CLASSIFICATION	0.9999950611017026	WITHOUT_CLASSIFICATION	4.938898297497209E-6	DEFECT
// RIGHT	WITHOUT_CLASSIFICATION	0.9999455410432807	WITHOUT_CLASSIFICATION	5.4458956719407126E-5	DEFECT
// RIGHT	WITHOUT_CLASSIFICATION	0.9999455410432807	WITHOUT_CLASSIFICATION	5.4458956719407126E-5	DEFECT
// no plot, no data	WITHOUT_CLASSIFICATION	0.9999983679629575	WITHOUT_CLASSIFICATION	1.6320370425117493E-6	DEFECT
// no plot, no data	WITHOUT_CLASSIFICATION	0.9999983679629575	WITHOUT_CLASSIFICATION	1.6320370425117493E-6	DEFECT
// if fixed auto range, then derive lower bound...	WITHOUT_CLASSIFICATION	0.9999533137761547	WITHOUT_CLASSIFICATION	4.668622384525112E-5	DEFECT
// ensure the autorange is at least <minRange> in size...	WITHOUT_CLASSIFICATION	0.9999940981913933	WITHOUT_CLASSIFICATION	5.901808606692699E-6	DEFECT
// ensure the autorange is at least <minRange> in size...	WITHOUT_CLASSIFICATION	0.9999940981913933	WITHOUT_CLASSIFICATION	5.901808606692699E-6	DEFECT
// if the axis is not visible, don't draw it...	WITHOUT_CLASSIFICATION	0.9990829177948999	WITHOUT_CLASSIFICATION	9.170822051000825E-4	DEFECT
// even though the axis is not visible, we need ticks for the // gridlines...	WITHOUT_CLASSIFICATION	0.9992901989314753	WITHOUT_CLASSIFICATION	7.09801068524786E-4	DEFECT
// look at lower and upper bounds...	WITHOUT_CLASSIFICATION	0.9998966354644968	WITHOUT_CLASSIFICATION	1.0336453550314615E-4	DEFECT
// draw the tick marks and labels...	WITHOUT_CLASSIFICATION	0.9999827245199777	WITHOUT_CLASSIFICATION	1.7275480022219273E-5	DEFECT
// TOP	WITHOUT_CLASSIFICATION	0.9999628286990022	WITHOUT_CLASSIFICATION	3.717130099776235E-5	DEFECT
// BOTTOM	WITHOUT_CLASSIFICATION	0.9999487075444959	WITHOUT_CLASSIFICATION	5.129245550408474E-5	DEFECT
// BOTTOM	WITHOUT_CLASSIFICATION	0.9999487075444959	WITHOUT_CLASSIFICATION	5.129245550408474E-5	DEFECT
// LEFT	WITHOUT_CLASSIFICATION	0.9999950611017026	WITHOUT_CLASSIFICATION	4.938898297497209E-6	DEFECT
// LEFT	WITHOUT_CLASSIFICATION	0.9999950611017026	WITHOUT_CLASSIFICATION	4.938898297497209E-6	DEFECT
// RIGHT	WITHOUT_CLASSIFICATION	0.9999455410432807	WITHOUT_CLASSIFICATION	5.4458956719407126E-5	DEFECT
// RIGHT	WITHOUT_CLASSIFICATION	0.9999455410432807	WITHOUT_CLASSIFICATION	5.4458956719407126E-5	DEFECT
// first check that autoPopulate==false works as expected	WITHOUT_CLASSIFICATION	0.9999999856634664	WITHOUT_CLASSIFICATION	1.4336533643072603E-8	DEFECT
// default make height of plotArea	WITHOUT_CLASSIFICATION	0.9999740571963053	WITHOUT_CLASSIFICATION	2.594280369473872E-5	DEFECT
// allow fixed thickness	WITHOUT_CLASSIFICATION	0.9999960349489244	WITHOUT_CLASSIFICATION	3.965051075661807E-6	DEFECT
// update, but dont draw tick marks (needed for stepped colors)	WITHOUT_CLASSIFICATION	0.9999997953041303	WITHOUT_CLASSIFICATION	2.046958698033319E-7	DEFECT
// suppresses compiler warnings	WITHOUT_CLASSIFICATION	0.9999980874969608	WITHOUT_CLASSIFICATION	1.9125030390461557E-6	DEFECT
// setTickValues was missing from ColorPalette v. 0.96 //colorPalette.setTickValues(this.axis.getTicks());	WITHOUT_CLASSIFICATION	0.9999997513581683	WITHOUT_CLASSIFICATION	2.486418316856176E-7	DEFECT
// calculate the adjusted data area taking into account the 3D effect...	WITHOUT_CLASSIFICATION	0.993608125468087	WITHOUT_CLASSIFICATION	0.006391874531913028	DEFECT
// argument checking delegated...	WITHOUT_CLASSIFICATION	0.9999999658737975	WITHOUT_CLASSIFICATION	3.412620247568581E-8	DEFECT
// transparent	WITHOUT_CLASSIFICATION	0.9999977097614157	WITHOUT_CLASSIFICATION	2.290238584460976E-6	DEFECT
//gets the outline stroke width of the plot	WITHOUT_CLASSIFICATION	0.9996622755669523	WITHOUT_CLASSIFICATION	3.377244330476655E-4	DEFECT
// ensure that all the symbols are displayed	WITHOUT_CLASSIFICATION	0.9999997552227937	WITHOUT_CLASSIFICATION	2.4477720630092765E-7	DEFECT
// this ensure that the grid bands will be displayed correctly.	WITHOUT_CLASSIFICATION	0.9815683982698136	WITHOUT_CLASSIFICATION	0.018431601730186382	DEFECT
// avoid to draw overlapping tick labels	WITHOUT_CLASSIFICATION	0.9999994728392881	WITHOUT_CLASSIFICATION	5.27160711858888E-7	DEFECT
// avoid to draw overlapping tick labels	WITHOUT_CLASSIFICATION	0.9999994728392881	WITHOUT_CLASSIFICATION	5.27160711858888E-7	DEFECT
// don't draw this tick label	WITHOUT_CLASSIFICATION	0.9999919585295688	WITHOUT_CLASSIFICATION	8.04147043115189E-6	DEFECT
// don't draw this tick label	WITHOUT_CLASSIFICATION	0.9999919585295688	WITHOUT_CLASSIFICATION	8.04147043115189E-6	DEFECT
// remember these values for next comparison	WITHOUT_CLASSIFICATION	0.9999591758498914	WITHOUT_CLASSIFICATION	4.082415010866743E-5	DEFECT
// remember these values for next comparison	WITHOUT_CLASSIFICATION	0.9999591758498914	WITHOUT_CLASSIFICATION	4.082415010866743E-5	DEFECT
// first check that autoPopulate==false works as expected	WITHOUT_CLASSIFICATION	0.9999999856634664	WITHOUT_CLASSIFICATION	1.4336533643072603E-8	DEFECT
// if the axis is not visible, don't draw it...	WITHOUT_CLASSIFICATION	0.9990829177948999	WITHOUT_CLASSIFICATION	9.170822051000825E-4	DEFECT
// even though the axis is not visible, we need ticks for the // gridlines...	WITHOUT_CLASSIFICATION	0.9992901989314753	WITHOUT_CLASSIFICATION	7.09801068524786E-4	DEFECT
// all tick labels have the same width (equal to the height of the // font)...	WITHOUT_CLASSIFICATION	0.9999856209630993	WITHOUT_CLASSIFICATION	1.43790369008464E-5	DEFECT
// draw the category labels and axis label	WITHOUT_CLASSIFICATION	0.9999930006684612	WITHOUT_CLASSIFICATION	6.99933153875365E-6	DEFECT
// create a new space object if one wasn't supplied...	WITHOUT_CLASSIFICATION	0.9999969196523569	WITHOUT_CLASSIFICATION	3.080347642974771E-6	DEFECT
// if the axis is not visible, no additional space is required...	WITHOUT_CLASSIFICATION	0.9994332521963418	WITHOUT_CLASSIFICATION	5.667478036580778E-4	DEFECT
// start with the current tick unit...	WITHOUT_CLASSIFICATION	0.9999065614177961	WITHOUT_CLASSIFICATION	9.343858220387746E-5	DEFECT
// start with the current tick unit...	WITHOUT_CLASSIFICATION	0.9999065614177961	WITHOUT_CLASSIFICATION	9.343858220387746E-5	DEFECT
// then extrapolate...	WITHOUT_CLASSIFICATION	0.9999303881785186	WITHOUT_CLASSIFICATION	6.961182148135358E-5	DEFECT
// then extrapolate...	WITHOUT_CLASSIFICATION	0.9999303881785186	WITHOUT_CLASSIFICATION	6.961182148135358E-5	DEFECT
// check a series with no items	WITHOUT_CLASSIFICATION	0.9999998459704802	WITHOUT_CLASSIFICATION	1.5402951989120406E-7	DEFECT
// must be top or bottom	WITHOUT_CLASSIFICATION	0.9999999920763621	WITHOUT_CLASSIFICATION	7.923637933880321E-9	DEFECT
// catches null also	WITHOUT_CLASSIFICATION	0.9999998734056429	WITHOUT_CLASSIFICATION	1.2659435717634723E-7	DEFECT
// no action required.	WITHOUT_CLASSIFICATION	0.9999954262895127	WITHOUT_CLASSIFICATION	4.5737104873616055E-6	DEFECT
// no action required.	WITHOUT_CLASSIFICATION	0.9999954262895127	WITHOUT_CLASSIFICATION	4.5737104873616055E-6	DEFECT
// check if we need to collect chart entities from the container	WITHOUT_CLASSIFICATION	0.9999998877106585	WITHOUT_CLASSIFICATION	1.1228934154230469E-7	DEFECT
// place in this row (truncated) anyway	WITHOUT_CLASSIFICATION	0.9999931973975209	WITHOUT_CLASSIFICATION	6.802602479060418E-6	DEFECT
// start new row	WITHOUT_CLASSIFICATION	0.9999992528703905	WITHOUT_CLASSIFICATION	7.471296094870425E-7	DEFECT
//Block b = (Block) blocks.get(i);	WITHOUT_CLASSIFICATION	0.9999928600078657	WITHOUT_CLASSIFICATION	7.139992134326588E-6	DEFECT
// can safely ignore	WITHOUT_CLASSIFICATION	0.9999978422732954	WITHOUT_CLASSIFICATION	2.1577267045824038E-6	DEFECT
// find optimum height, then map to range	WITHOUT_CLASSIFICATION	0.999999210238596	WITHOUT_CLASSIFICATION	7.897614040748159E-7	DEFECT
// find optimum height	WITHOUT_CLASSIFICATION	0.9999996311970937	WITHOUT_CLASSIFICATION	3.6880290639281357E-7	DEFECT
// find optimum height	WITHOUT_CLASSIFICATION	0.9999996311970937	WITHOUT_CLASSIFICATION	3.6880290639281357E-7	DEFECT
// find optimum height and map to range	WITHOUT_CLASSIFICATION	0.999999207948802	WITHOUT_CLASSIFICATION	7.920511979532944E-7	DEFECT
// find optimum width and map to range	WITHOUT_CLASSIFICATION	0.9999999047486893	WITHOUT_CLASSIFICATION	9.525131083939591E-8	DEFECT
// check a series with no items	WITHOUT_CLASSIFICATION	0.9999998459704802	WITHOUT_CLASSIFICATION	1.5402951989120406E-7	DEFECT
// check a series with no items	WITHOUT_CLASSIFICATION	0.9999998459704802	WITHOUT_CLASSIFICATION	1.5402951989120406E-7	DEFECT
// since the flow layout is relatively straightforward, // no information needs to be recorded here	WITHOUT_CLASSIFICATION	0.999993461430775	WITHOUT_CLASSIFICATION	6.538569224905482E-6	DEFECT
// no action required.	WITHOUT_CLASSIFICATION	0.9999954262895127	WITHOUT_CLASSIFICATION	4.5737104873616055E-6	DEFECT
// first arrange without constraints, and see if this fits within // the required ranges...	WITHOUT_CLASSIFICATION	0.9999937731672064	WITHOUT_CLASSIFICATION	6.226832793510777E-6	DEFECT
// first arrange without constraints, then see if the width fits // within the required range...if not, call arrangeFN() at max width	WITHOUT_CLASSIFICATION	0.999998814678658	WITHOUT_CLASSIFICATION	1.185321341967124E-6	DEFECT
// first arrange without constraints, then see if the width fits // within the required range...if not, call arrangeFN() at max width	WITHOUT_CLASSIFICATION	0.999998814678658	WITHOUT_CLASSIFICATION	1.185321341967124E-6	DEFECT
// check if we need to collect chart entities from the container	WITHOUT_CLASSIFICATION	0.9999998877106585	WITHOUT_CLASSIFICATION	1.1228934154230469E-7	DEFECT
//Block b = (Block) blocks.get(i);	WITHOUT_CLASSIFICATION	0.9999928600078657	WITHOUT_CLASSIFICATION	7.139992134326588E-6	DEFECT
// this default implementation will just fill the available // border space with a single color	WITHOUT_CLASSIFICATION	0.9999993769370524	WITHOUT_CLASSIFICATION	6.230629475805737E-7	DEFECT
// backgroundImage	WITHOUT_CLASSIFICATION	0.9999989551071872	WITHOUT_CLASSIFICATION	1.0448928127566375E-6	DEFECT
// fixed width	WITHOUT_CLASSIFICATION	0.9999885079925631	WITHOUT_CLASSIFICATION	1.1492007436760181E-5	DEFECT
// width is OK, but height must be constrained	WITHOUT_CLASSIFICATION	0.9999999159557703	WITHOUT_CLASSIFICATION	8.404422959821406E-8	DEFECT
// height is OK, but width must be constrained	WITHOUT_CLASSIFICATION	0.9999998557840082	WITHOUT_CLASSIFICATION	1.4421599179799238E-7	DEFECT
// nothing to clear	WITHOUT_CLASSIFICATION	0.9999993439971968	WITHOUT_CLASSIFICATION	6.560028031354711E-7	DEFECT
// if the area has zero height or width, we shouldn't draw anything	WITHOUT_CLASSIFICATION	0.9997636984432107	WITHOUT_CLASSIFICATION	2.3630155678937783E-4	DEFECT
// since the flow layout is relatively straightforward, no information // needs to be recorded here	WITHOUT_CLASSIFICATION	0.9999845790656797	WITHOUT_CLASSIFICATION	1.5420934320303225E-5	DEFECT
// place in this column (truncated) anyway	WITHOUT_CLASSIFICATION	0.9999985852823613	WITHOUT_CLASSIFICATION	1.4147176386941833E-6	DEFECT
// start new column	WITHOUT_CLASSIFICATION	0.9999999381414006	WITHOUT_CLASSIFICATION	6.185859936576324E-8	DEFECT
// set a theme using the new shadow generator feature available in // 1.0.14 - for backwards compatibility it is not enabled by default	WITHOUT_CLASSIFICATION	0.9999996004123101	WITHOUT_CLASSIFICATION	3.9958768990957503E-7	DEFECT
/* x-axis label*/	WITHOUT_CLASSIFICATION	0.9999899557865518	WITHOUT_CLASSIFICATION	1.0044213448201506E-5	DEFECT
/* y-axis label */	WITHOUT_CLASSIFICATION	0.9999973581278204	WITHOUT_CLASSIFICATION	2.641872179540474E-6	DEFECT
// chart title // data // no legend // tooltips // no URL generation	WITHOUT_CLASSIFICATION	0.9999999540107216	WITHOUT_CLASSIFICATION	4.598927848678598E-8	DEFECT
// check a series with one item	WITHOUT_CLASSIFICATION	0.9999997586067224	WITHOUT_CLASSIFICATION	2.4139327762008603E-7	DEFECT
// ****************************************************************** //  More than 150 demo applications are included with the JFreeChart //  Developer Guide...for more information, see: // //  >   http://www.object-refinery.com/jfreechart/guide.html // // ******************************************************************	WITHOUT_CLASSIFICATION	0.9999898133574376	WITHOUT_CLASSIFICATION	1.0186642562375218E-5	DEFECT
// title // x-axis label // y-axis label // data // create legend? // generate tooltips? // generate URLs?	WITHOUT_CLASSIFICATION	0.9999996470212329	WITHOUT_CLASSIFICATION	3.529787671257477E-7	DEFECT
// set a custom background for the chart	WITHOUT_CLASSIFICATION	0.9999999808314952	WITHOUT_CLASSIFICATION	1.916850483603016E-8	DEFECT
// customise the title position and font	WITHOUT_CLASSIFICATION	0.9999994434071977	WITHOUT_CLASSIFICATION	5.565928022494207E-7	DEFECT
// use gradients and white borders for the section colours	WITHOUT_CLASSIFICATION	0.9999999893123018	WITHOUT_CLASSIFICATION	1.068769819161774E-8	DEFECT
// customise the section label appearance	WITHOUT_CLASSIFICATION	0.9999990479385418	WITHOUT_CLASSIFICATION	9.520614580791363E-7	DEFECT
// add a subtitle giving the data source	WITHOUT_CLASSIFICATION	0.9999972643526391	WITHOUT_CLASSIFICATION	2.7356473608851185E-6	DEFECT
// pass to the super-class for handling	WITHOUT_CLASSIFICATION	0.9999904370456824	WITHOUT_CLASSIFICATION	9.562954317589319E-6	DEFECT
// pass to the super-class for handling	WITHOUT_CLASSIFICATION	0.9999904370456824	WITHOUT_CLASSIFICATION	9.562954317589319E-6	DEFECT
// pass to the super-class for handling	WITHOUT_CLASSIFICATION	0.9999904370456824	WITHOUT_CLASSIFICATION	9.562954317589319E-6	DEFECT
// don't need to do anything	WITHOUT_CLASSIFICATION	0.9998485784394786	WITHOUT_CLASSIFICATION	1.5142156052142824E-4	DEFECT
// don't need to do anything	WITHOUT_CLASSIFICATION	0.9998485784394786	WITHOUT_CLASSIFICATION	1.5142156052142824E-4	DEFECT
//    /** Insets text field. */ //    private InsetsTextField tickLabelInsetsTextField; // //    /** Label insets text field. */ //    private InsetsTextField labelInsetsTextField;	WITHOUT_CLASSIFICATION	0.9999995074357723	WITHOUT_CLASSIFICATION	4.925642277297075E-7	DEFECT
// figure out what type of axis we have and instantiate the // appropriate panel	WITHOUT_CLASSIFICATION	0.9999974403566282	WITHOUT_CLASSIFICATION	2.559643371783713E-6	DEFECT
// Insets values	WITHOUT_CLASSIFICATION	0.9999985467944089	WITHOUT_CLASSIFICATION	1.453205591077649E-6	DEFECT
// axis.setTickMarkStroke(getTickMarkStroke());	WITHOUT_CLASSIFICATION	0.9999963834982109	WITHOUT_CLASSIFICATION	3.616501789205965E-6	DEFECT
// create a panel for the settings...	WITHOUT_CLASSIFICATION	0.9999992159233903	WITHOUT_CLASSIFICATION	7.84076609876113E-7	DEFECT
//dmo: added this panel for colorbar control. (start dmo additions)	WITHOUT_CLASSIFICATION	0.9999767234462922	WITHOUT_CLASSIFICATION	2.3276553707811398E-5	DEFECT
//      end fix by rfuller	WITHOUT_CLASSIFICATION	0.9999557615676967	WITHOUT_CLASSIFICATION	4.423843230340527E-5	DEFECT
//dmo: (end dmo additions)	WITHOUT_CLASSIFICATION	0.9999444378913976	WITHOUT_CLASSIFICATION	5.556210860246798E-5	DEFECT
// set the plot properties...	WITHOUT_CLASSIFICATION	0.9999731524028226	WITHOUT_CLASSIFICATION	2.68475971774166E-5	DEFECT
// then the axis properties...	WITHOUT_CLASSIFICATION	0.9999628597265334	WITHOUT_CLASSIFICATION	3.714027346665139E-5	DEFECT
// pass to super-class for handling	WITHOUT_CLASSIFICATION	0.9999935336620931	WITHOUT_CLASSIFICATION	6.466337906896573E-6	DEFECT
//  No op	WITHOUT_CLASSIFICATION	0.9999887246807468	WITHOUT_CLASSIFICATION	1.1275319253054358E-5	DEFECT
//  No op	WITHOUT_CLASSIFICATION	0.9999887246807468	WITHOUT_CLASSIFICATION	1.1275319253054358E-5	DEFECT
// defer argument checks...	WITHOUT_CLASSIFICATION	0.9999999675137969	WITHOUT_CLASSIFICATION	3.248620304091013E-8	DEFECT
//      fix by rfuller	WITHOUT_CLASSIFICATION	0.999982986871334	WITHOUT_CLASSIFICATION	1.7013128666046023E-5	DEFECT
// populate the deprecated fields	WITHOUT_CLASSIFICATION	0.9999999511360204	WITHOUT_CLASSIFICATION	4.886397952331677E-8	DEFECT
//same as for ChartEntity!	WITHOUT_CLASSIFICATION	0.9999994789713501	WITHOUT_CLASSIFICATION	5.210286498384254E-7	DEFECT
//same as for ChartEntity!	WITHOUT_CLASSIFICATION	0.9999994789713501	WITHOUT_CLASSIFICATION	5.210286498384254E-7	DEFECT
//same as for ChartEntity!	WITHOUT_CLASSIFICATION	0.9999994789713501	WITHOUT_CLASSIFICATION	5.210286498384254E-7	DEFECT
// update the deprecated field	WITHOUT_CLASSIFICATION	0.9999999917409028	WITHOUT_CLASSIFICATION	8.259097110416744E-9	DEFECT
// update the deprecated fields	WITHOUT_CLASSIFICATION	0.9999999764026875	WITHOUT_CLASSIFICATION	2.359731256876553E-8	DEFECT
// check the deprecated fields	WITHOUT_CLASSIFICATION	0.999999995236025	WITHOUT_CLASSIFICATION	4.763975069410284E-9	DEFECT
// try the parent plot	WITHOUT_CLASSIFICATION	0.9999910329917752	WITHOUT_CLASSIFICATION	8.96700822477263E-6	DEFECT
// do not notify while zooming each axis	WITHOUT_CLASSIFICATION	0.9999890451610339	WITHOUT_CLASSIFICATION	1.0954838966123506E-5	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.999993660111925	WITHOUT_CLASSIFICATION	6.339888074945912E-6	DEFECT
// this generates the change event too	WITHOUT_CLASSIFICATION	0.999999465870365	WITHOUT_CLASSIFICATION	5.341296349426386E-7	DEFECT
/* x-axis label*/	WITHOUT_CLASSIFICATION	0.9999899557865518	WITHOUT_CLASSIFICATION	1.0044213448201506E-5	DEFECT
/* y-axis label */	WITHOUT_CLASSIFICATION	0.9999973581278204	WITHOUT_CLASSIFICATION	2.641872179540474E-6	DEFECT
// set a custom background for the chart	WITHOUT_CLASSIFICATION	0.9999999808314952	WITHOUT_CLASSIFICATION	1.916850483603016E-8	DEFECT
// customise the title position and font	WITHOUT_CLASSIFICATION	0.9999994434071977	WITHOUT_CLASSIFICATION	5.565928022494207E-7	DEFECT
// use gradients and white borders for the section colours	WITHOUT_CLASSIFICATION	0.9999999893123018	WITHOUT_CLASSIFICATION	1.068769819161774E-8	DEFECT
// customise the section label appearance	WITHOUT_CLASSIFICATION	0.9999990479385418	WITHOUT_CLASSIFICATION	9.520614580791363E-7	DEFECT
// add a subtitle giving the data source	WITHOUT_CLASSIFICATION	0.9999972643526391	WITHOUT_CLASSIFICATION	2.7356473608851185E-6	DEFECT
//same as for ChartEntity!	WITHOUT_CLASSIFICATION	0.9999994789713501	WITHOUT_CLASSIFICATION	5.210286498384254E-7	DEFECT
//dmo added //dmo added	WITHOUT_CLASSIFICATION	0.9999995129188355	WITHOUT_CLASSIFICATION	4.870811645223447E-7	DEFECT
// if there is a tool tip, we expect it to generate the title and // alt values, so we only add an empty alt if there is no tooltip	WITHOUT_CLASSIFICATION	0.9999999904061586	WITHOUT_CLASSIFICATION	9.593841362964873E-9	DEFECT
// check a series with two items	WITHOUT_CLASSIFICATION	0.9999985346379426	WITHOUT_CLASSIFICATION	1.4653620574056999E-6	DEFECT
// FIXME	WITHOUT_CLASSIFICATION	0.9668908991224359	WITHOUT_CLASSIFICATION	0.03310910087756403	DEFECT
// this is a paint we don't recognise	WITHOUT_CLASSIFICATION	0.999907867241237	WITHOUT_CLASSIFICATION	9.213275876295477E-5	DEFECT
// null is handled fine here...	WITHOUT_CLASSIFICATION	0.999933435913546	WITHOUT_CLASSIFICATION	6.656408645401957E-5	DEFECT
// we can't do anything	WITHOUT_CLASSIFICATION	0.9999949331849923	WITHOUT_CLASSIFICATION	5.066815007583959E-6	DEFECT
// force a redraw	WITHOUT_CLASSIFICATION	0.9999997955868392	WITHOUT_CLASSIFICATION	2.044131607581165E-7	DEFECT
// pass on the event to the auxiliary handlers	WITHOUT_CLASSIFICATION	0.9999895699562299	WITHOUT_CLASSIFICATION	1.043004377008668E-5	DEFECT
// pass on the event to the auxiliary handlers	WITHOUT_CLASSIFICATION	0.9999895699562299	WITHOUT_CLASSIFICATION	1.043004377008668E-5	DEFECT
// relay the event from the canvas to our registered listeners	WITHOUT_CLASSIFICATION	0.9999999679883502	WITHOUT_CLASSIFICATION	3.2011649659964695E-8	DEFECT
// relay the event from the canvas to our registered listeners	WITHOUT_CLASSIFICATION	0.9999999679883502	WITHOUT_CLASSIFICATION	3.2011649659964695E-8	DEFECT
// set the default stroke for all series	WITHOUT_CLASSIFICATION	0.999998547611345	WITHOUT_CLASSIFICATION	1.4523886549052622E-6	DEFECT
//this.chartPanel.isDomainZoomable()) {	WITHOUT_CLASSIFICATION	0.9999999908777948	WITHOUT_CLASSIFICATION	9.122205169329001E-9	DEFECT
//this.chartPanel.isRangeZoomable()) {	WITHOUT_CLASSIFICATION	0.9999999747313411	WITHOUT_CLASSIFICATION	2.526865902068504E-8	DEFECT
// does nothing unless overridden	WITHOUT_CLASSIFICATION	0.999998185478518	WITHOUT_CLASSIFICATION	1.814521481956255E-6	DEFECT
// does nothing unless overridden	WITHOUT_CLASSIFICATION	0.999998185478518	WITHOUT_CLASSIFICATION	1.814521481956255E-6	DEFECT
// does nothing unless overridden        	WITHOUT_CLASSIFICATION	0.9999949327488326	WITHOUT_CLASSIFICATION	5.067251167361233E-6	DEFECT
// selected rectangle shouldn't extend outside the data area...	WITHOUT_CLASSIFICATION	0.9999474929198232	WITHOUT_CLASSIFICATION	5.2507080176903274E-5	DEFECT
// for mouseReleased event, (horizontalZoom || verticalZoom) // will be true, so we can just test for either being false; // otherwise both are true	WITHOUT_CLASSIFICATION	0.9999999999668214	WITHOUT_CLASSIFICATION	3.317866667990318E-11	DEFECT
// chart title // data // no legend // tooltips // no URL generation	WITHOUT_CLASSIFICATION	0.9999999540107216	WITHOUT_CLASSIFICATION	4.598927848678598E-8	DEFECT
// does nothing unless overridden	WITHOUT_CLASSIFICATION	0.999998185478518	WITHOUT_CLASSIFICATION	1.814521481956255E-6	DEFECT
// special case - if the underlying rectangle uses ints we // need to create one that uses doubles	WITHOUT_CLASSIFICATION	0.9999994981953765	WITHOUT_CLASSIFICATION	5.018046236294598E-7	DEFECT
// title // x-axis label // y-axis label	WITHOUT_CLASSIFICATION	0.9999921084877285	WITHOUT_CLASSIFICATION	7.891512271576996E-6	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.999993660111925	WITHOUT_CLASSIFICATION	6.339888074945912E-6	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.999993660111925	WITHOUT_CLASSIFICATION	6.339888074945912E-6	DEFECT
// check a series with four items	WITHOUT_CLASSIFICATION	0.9999997254628011	WITHOUT_CLASSIFICATION	2.745371988426625E-7	DEFECT
// the actual panning occurs later in the mouseDragged() method	WITHOUT_CLASSIFICATION	0.9999999216171669	WITHOUT_CLASSIFICATION	7.838283306419378E-8	DEFECT
//handle panning if we have a start point else unregister	WITHOUT_CLASSIFICATION	0.9999999194765364	WITHOUT_CLASSIFICATION	8.05234636036358E-8	DEFECT
//if we have been panning reset the cursor //unregister in any case	WITHOUT_CLASSIFICATION	0.9999999554040889	WITHOUT_CLASSIFICATION	4.459591110099834E-8	DEFECT
// the URL text should already have been escaped by the URL generator	WITHOUT_CLASSIFICATION	0.9999988063673051	WITHOUT_CLASSIFICATION	1.1936326949373242E-6	DEFECT
// no fields to test	WITHOUT_CLASSIFICATION	0.9999990602260307	WITHOUT_CLASSIFICATION	9.397739693699566E-7	DEFECT
/// we have rotation huston, please spin me	WITHOUT_CLASSIFICATION	0.9999958404210393	WITHOUT_CLASSIFICATION	4.1595789607049955E-6	DEFECT
/// we have rotation huston, please spin me	WITHOUT_CLASSIFICATION	0.9999958404210393	WITHOUT_CLASSIFICATION	4.1595789607049955E-6	DEFECT
/// we have rotation	WITHOUT_CLASSIFICATION	0.9999827675172992	WITHOUT_CLASSIFICATION	1.7232482700878072E-5	DEFECT
/// we have rotation	WITHOUT_CLASSIFICATION	0.9999827675172992	WITHOUT_CLASSIFICATION	1.7232482700878072E-5	DEFECT
/// we have rotation	WITHOUT_CLASSIFICATION	0.9999827675172992	WITHOUT_CLASSIFICATION	1.7232482700878072E-5	DEFECT
// isArrowAtTop	WITHOUT_CLASSIFICATION	0.9999942322908882	WITHOUT_CLASSIFICATION	5.767709111751348E-6	DEFECT
//int maxX = (int) (plotArea.getMaxX());	WITHOUT_CLASSIFICATION	0.9999888648107944	WITHOUT_CLASSIFICATION	1.1135189205615762E-5	DEFECT
//int maxX = (int) (plotArea.getMaxX());	WITHOUT_CLASSIFICATION	0.9999888648107944	WITHOUT_CLASSIFICATION	1.1135189205615762E-5	DEFECT
//int midY = (int) (plotArea.getMinY() + (plotArea.getHeight() / 2));	WITHOUT_CLASSIFICATION	0.999997689904043	WITHOUT_CLASSIFICATION	2.3100959568774697E-6	DEFECT
//int midY = (int) (plotArea.getMinY() + (plotArea.getHeight() / 2));	WITHOUT_CLASSIFICATION	0.999997689904043	WITHOUT_CLASSIFICATION	2.3100959568774697E-6	DEFECT
/// we have rotation houston, please spin me	WITHOUT_CLASSIFICATION	0.999994863082545	WITHOUT_CLASSIFICATION	5.1369174550082105E-6	DEFECT
// horizontal	WITHOUT_CLASSIFICATION	0.999996552038973	WITHOUT_CLASSIFICATION	3.4479610269353164E-6	DEFECT
// store the plot and its weight	WITHOUT_CLASSIFICATION	0.9999941043702782	WITHOUT_CLASSIFICATION	5.89562972168895E-6	DEFECT
// configure the range axis...	WITHOUT_CLASSIFICATION	0.9999982795434594	WITHOUT_CLASSIFICATION	1.7204565405717904E-6	DEFECT
// work out the space required by the domain axis...	WITHOUT_CLASSIFICATION	0.998950240833266	WITHOUT_CLASSIFICATION	0.0010497591667340562	DEFECT
// work out the maximum height or width of the non-shared axes...	WITHOUT_CLASSIFICATION	0.9980727164740572	WITHOUT_CLASSIFICATION	0.0019272835259427782	DEFECT
// we expect the line to be vertical or horizontal // vertical	WITHOUT_CLASSIFICATION	0.9999952212814376	WITHOUT_CLASSIFICATION	4.778718562463635E-6	DEFECT
// calculate plotAreas of all sub-plots, maximum vertical/horizontal // axis width/height	WITHOUT_CLASSIFICATION	0.999975282295726	WITHOUT_CLASSIFICATION	2.471770427404967E-5	DEFECT
// calculate sub-plot area	WITHOUT_CLASSIFICATION	0.9999995992008043	WITHOUT_CLASSIFICATION	4.0079919572735284E-7	DEFECT
// adjust the drawing area for plot insets (if any)...	WITHOUT_CLASSIFICATION	0.9999847718992008	WITHOUT_CLASSIFICATION	1.522810079927431E-5	DEFECT
// calculate the data area...	WITHOUT_CLASSIFICATION	0.9999964175632622	WITHOUT_CLASSIFICATION	3.5824367377960182E-6	DEFECT
// set the width and height of non-shared axis of all sub-plots	WITHOUT_CLASSIFICATION	0.9999966393786673	WITHOUT_CLASSIFICATION	3.3606213326883205E-6	DEFECT
// draw the shared axis	WITHOUT_CLASSIFICATION	0.9999993631949523	WITHOUT_CLASSIFICATION	6.36805047671745E-7	DEFECT
// draw all the charts	WITHOUT_CLASSIFICATION	0.9999999730156313	WITHOUT_CLASSIFICATION	2.6984368660606786E-8	DEFECT
// the range axis is deserialized before the subplots, so its value // range is likely to be incorrect...	WITHOUT_CLASSIFICATION	0.9971796399021398	WITHOUT_CLASSIFICATION	0.0028203600978601888	DEFECT
// default preserves previous // behaviour	WITHOUT_CLASSIFICATION	0.9999999638176189	WITHOUT_CLASSIFICATION	3.6182381152862387E-8	DEFECT
// adjust for insets...	WITHOUT_CLASSIFICATION	0.999999853071116	WITHOUT_CLASSIFICATION	1.469288839529468E-7	DEFECT
// make the link area a square if the pie chart is to be circular... // is circular?	WITHOUT_CLASSIFICATION	0.999998804180647	WITHOUT_CLASSIFICATION	1.1958193529580582E-6	DEFECT
// the link area defines the dog leg points for the linking lines to // the labels	WITHOUT_CLASSIFICATION	0.9999998543751566	WITHOUT_CLASSIFICATION	1.4562484340778537E-7	DEFECT
// the explode area defines the max circle/ellipse for the exploded pie // sections. // it is defined by shrinking the linkArea by the linkMargin factor.	WITHOUT_CLASSIFICATION	0.9999996316880174	WITHOUT_CLASSIFICATION	3.683119825404077E-7	DEFECT
// the pie area defines the circle/ellipse for regular pie sections. // it is defined by shrinking the explodeArea by the explodeMargin // factor.	WITHOUT_CLASSIFICATION	0.9999990838404852	WITHOUT_CLASSIFICATION	9.161595148495812E-7	DEFECT
// the link area defines the dog-leg point for the linking lines to // the labels	WITHOUT_CLASSIFICATION	0.9999998660776103	WITHOUT_CLASSIFICATION	1.3392238965234873E-7	DEFECT
// get the data source - return if null;	WITHOUT_CLASSIFICATION	0.9999992666212715	WITHOUT_CLASSIFICATION	7.333787284622888E-7	DEFECT
// if too any elements	WITHOUT_CLASSIFICATION	0.9999999419005943	WITHOUT_CLASSIFICATION	5.8099405744327214E-8	DEFECT
// get a list of keys...	WITHOUT_CLASSIFICATION	0.9999990051974005	WITHOUT_CLASSIFICATION	9.948025994216354E-7	DEFECT
// do nothing by default.	WITHOUT_CLASSIFICATION	0.9999999196815513	WITHOUT_CLASSIFICATION	8.031844859749138E-8	DEFECT
//g2.clip(clipArea);	WITHOUT_CLASSIFICATION	0.9999934084513744	WITHOUT_CLASSIFICATION	6.591548625589686E-6	DEFECT
// if depth is negative don't draw anything	WITHOUT_CLASSIFICATION	0.9999982183355349	WITHOUT_CLASSIFICATION	1.7816644651780446E-6	DEFECT
// draw the bottom circle	WITHOUT_CLASSIFICATION	0.9999999369827682	WITHOUT_CLASSIFICATION	6.301723179684039E-8	DEFECT
// draw the height	WITHOUT_CLASSIFICATION	0.9999933138518643	WITHOUT_CLASSIFICATION	6.686148135626532E-6	DEFECT
// cycle through once drawing only the sides at the back...	WITHOUT_CLASSIFICATION	0.9999499345624345	WITHOUT_CLASSIFICATION	5.0065437565459644E-5	DEFECT
// cycle through again drawing only the sides at the front...	WITHOUT_CLASSIFICATION	0.9998855987505749	WITHOUT_CLASSIFICATION	1.1440124942501445E-4	DEFECT
// add a tooltip for the section...	WITHOUT_CLASSIFICATION	0.9999978810705447	WITHOUT_CLASSIFICATION	2.1189294552170877E-6	DEFECT
// @mgs: using the method's return value was missing	WITHOUT_CLASSIFICATION	0.9999933214883449	WITHOUT_CLASSIFICATION	6.678511655155408E-6	DEFECT
// for CLOCKWISE charts, the extent will be negative...	WITHOUT_CLASSIFICATION	0.9999913029497447	WITHOUT_CLASSIFICATION	8.697050255348221E-6	DEFECT
// start at front	WITHOUT_CLASSIFICATION	0.9999980137579488	WITHOUT_CLASSIFICATION	1.9862420511923293E-6	DEFECT
// the segment starts at the front, and wraps all // the way around // the back and finishes at the front again	WITHOUT_CLASSIFICATION	0.9999977959216495	WITHOUT_CLASSIFICATION	2.204078350453043E-6	DEFECT
// starts at the front, finishes at the back (going // around the left side)	WITHOUT_CLASSIFICATION	0.9999941042255764	WITHOUT_CLASSIFICATION	5.895774423595429E-6	DEFECT
// the segment starts at the back (still extending // CLOCKWISE)	WITHOUT_CLASSIFICATION	0.9999954227848372	WITHOUT_CLASSIFICATION	4.57721516277527E-6	DEFECT
// whole segment stays at the back	WITHOUT_CLASSIFICATION	0.9999108299606679	WITHOUT_CLASSIFICATION	8.917003933212961E-5	DEFECT
// starts at the back, wraps around front, and // finishes at back again	WITHOUT_CLASSIFICATION	0.9999999612185985	WITHOUT_CLASSIFICATION	3.878140160996662E-8	DEFECT
// starts at back, finishes at front (CLOCKWISE)	WITHOUT_CLASSIFICATION	0.999999674566646	WITHOUT_CLASSIFICATION	3.2543335413936764E-7	DEFECT
// segment starts at the front	WITHOUT_CLASSIFICATION	0.9999981809261813	WITHOUT_CLASSIFICATION	1.8190738186200203E-6	DEFECT
// and finishes at the front	WITHOUT_CLASSIFICATION	0.9999988938927582	WITHOUT_CLASSIFICATION	1.1061072417986659E-6	DEFECT
// segment only occupies the front	WITHOUT_CLASSIFICATION	0.9997700453756755	WITHOUT_CLASSIFICATION	2.2995462432449077E-4	DEFECT
// segments wraps right around the back...	WITHOUT_CLASSIFICATION	0.9998995386952549	WITHOUT_CLASSIFICATION	1.0046130474505514E-4	DEFECT
// segments starts at front and finishes at back...	WITHOUT_CLASSIFICATION	0.9999517240989683	WITHOUT_CLASSIFICATION	4.8275901031779496E-5	DEFECT
// segment starts at back	WITHOUT_CLASSIFICATION	0.9999996622575565	WITHOUT_CLASSIFICATION	3.377424435041337E-7	DEFECT
// and finishes at back	WITHOUT_CLASSIFICATION	0.9999994532502169	WITHOUT_CLASSIFICATION	5.467497831548113E-7	DEFECT
//dmo //zero when the parameter is not set	WITHOUT_CLASSIFICATION	0.999281562107832	WITHOUT_CLASSIFICATION	7.184378921678704E-4	DEFECT
// if there is an existing dataset, remove the plot from the list of // change listeners...	WITHOUT_CLASSIFICATION	0.9999998772794557	WITHOUT_CLASSIFICATION	1.227205443099434E-7	DEFECT
// set the new dataset, and register the chart as a change listener...	WITHOUT_CLASSIFICATION	0.9999999645272238	WITHOUT_CLASSIFICATION	3.547277625999833E-8	DEFECT
// send a dataset change event to self...	WITHOUT_CLASSIFICATION	0.999999406626121	WITHOUT_CLASSIFICATION	5.933738790429579E-7	DEFECT
// plot is likely registered as a listener with the existing axis...	WITHOUT_CLASSIFICATION	0.999811216718071	WITHOUT_CLASSIFICATION	1.8878328192894453E-4	DEFECT
// plot is likely registered as a listener with the existing axis...	WITHOUT_CLASSIFICATION	0.999811216718071	WITHOUT_CLASSIFICATION	1.8878328192894453E-4	DEFECT
// if the plot area is too small, just return...	WITHOUT_CLASSIFICATION	0.9999997776316624	WITHOUT_CLASSIFICATION	2.2236833756438954E-7	DEFECT
// record the plot area...	WITHOUT_CLASSIFICATION	0.9999859111658889	WITHOUT_CLASSIFICATION	1.4088834111140217E-5	DEFECT
// additional dataArea modifications //check whether modification is	WITHOUT_CLASSIFICATION	0.9999865793206417	WITHOUT_CLASSIFICATION	1.3420679358334655E-5	DEFECT
// ratio represents pixels	WITHOUT_CLASSIFICATION	0.9999998798904198	WITHOUT_CLASSIFICATION	1.2010958016497483E-7	DEFECT
// ratio represents axis units	WITHOUT_CLASSIFICATION	0.9999999944638585	WITHOUT_CLASSIFICATION	5.536141583263748E-9	DEFECT
// draw the plot background...	WITHOUT_CLASSIFICATION	0.9999319290327621	WITHOUT_CLASSIFICATION	6.807096723788048E-5	DEFECT
// draw vertical crosshair if required...	WITHOUT_CLASSIFICATION	0.9995701649514299	WITHOUT_CLASSIFICATION	4.2983504857004506E-4	DEFECT
// draw horizontal crosshair if required...	WITHOUT_CLASSIFICATION	0.9995133942884713	WITHOUT_CLASSIFICATION	4.8660571152868296E-4	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9999955225021957	WITHOUT_CLASSIFICATION	4.4774978043964495E-6	DEFECT
// delegate 'info' and 'source' argument checks...	WITHOUT_CLASSIFICATION	0.9999999826380311	WITHOUT_CLASSIFICATION	1.736196888246569E-8	DEFECT
// work out the space required by the domain axis...	WITHOUT_CLASSIFICATION	0.998950240833266	WITHOUT_CLASSIFICATION	0.0010497591667340562	DEFECT
// delegate 'info' and 'source' argument checks...	WITHOUT_CLASSIFICATION	0.9999999826380311	WITHOUT_CLASSIFICATION	1.736196888246569E-8	DEFECT
// now get the data and plot it (the visual representation will depend // on the renderer that has been set)...	WITHOUT_CLASSIFICATION	0.9989474601841962	WITHOUT_CLASSIFICATION	0.0010525398158038254	DEFECT
// get the data points	WITHOUT_CLASSIFICATION	0.9999998812537673	WITHOUT_CLASSIFICATION	1.1874623272073792E-7	DEFECT
// this is a new column	WITHOUT_CLASSIFICATION	0.9999962032591434	WITHOUT_CLASSIFICATION	3.796740856627419E-6	DEFECT
// end of column	WITHOUT_CLASSIFICATION	0.9999977824637213	WITHOUT_CLASSIFICATION	2.2175362787668177E-6	DEFECT
// add an entity for the item...	WITHOUT_CLASSIFICATION	0.9999495881493805	WITHOUT_CLASSIFICATION	5.0411850619468914E-5	DEFECT
//              }	WITHOUT_CLASSIFICATION	0.9999909443290192	WITHOUT_CLASSIFICATION	9.055670980707767E-6	DEFECT
// both axes	WITHOUT_CLASSIFICATION	0.9999999552187651	WITHOUT_CLASSIFICATION	4.478123484323296E-8	DEFECT
// just the horizontal axis...	WITHOUT_CLASSIFICATION	0.9999999285466754	WITHOUT_CLASSIFICATION	7.145332460044238E-8	DEFECT
// just the vertical axis...	WITHOUT_CLASSIFICATION	0.9999999431619331	WITHOUT_CLASSIFICATION	5.6838066833128965E-8	DEFECT
// check a series with repeating items	WITHOUT_CLASSIFICATION	0.9999986882122113	WITHOUT_CLASSIFICATION	1.3117877887470172E-6	DEFECT
// adjust for insets...	WITHOUT_CLASSIFICATION	0.999999853071116	WITHOUT_CLASSIFICATION	1.469288839529468E-7	DEFECT
// adjust the plot area by the interior spacing value	WITHOUT_CLASSIFICATION	0.9999999516857786	WITHOUT_CLASSIFICATION	4.831422138678697E-8	DEFECT
// set the new dataset, and register the chart as a change listener...	WITHOUT_CLASSIFICATION	0.9999999645272238	WITHOUT_CLASSIFICATION	3.547277625999833E-8	DEFECT
// send a dataset change event to self...	WITHOUT_CLASSIFICATION	0.999999406626121	WITHOUT_CLASSIFICATION	5.933738790429579E-7	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9999955225021957	WITHOUT_CLASSIFICATION	4.4774978043964495E-6	DEFECT
//turn off anti-aliasing when filling rectangles	WITHOUT_CLASSIFICATION	0.9999996397335433	WITHOUT_CLASSIFICATION	3.602664566583304E-7	DEFECT
// add an entity for the item...	WITHOUT_CLASSIFICATION	0.9999495881493805	WITHOUT_CLASSIFICATION	5.0411850619468914E-5	DEFECT
// both axes	WITHOUT_CLASSIFICATION	0.9999999552187651	WITHOUT_CLASSIFICATION	4.478123484323296E-8	DEFECT
// just the horizontal axis...	WITHOUT_CLASSIFICATION	0.9999999285466754	WITHOUT_CLASSIFICATION	7.145332460044238E-8	DEFECT
// just the vertical axis...	WITHOUT_CLASSIFICATION	0.9999999431619331	WITHOUT_CLASSIFICATION	5.6838066833128965E-8	DEFECT
// draw the background	WITHOUT_CLASSIFICATION	0.9999983486366993	WITHOUT_CLASSIFICATION	1.6513633006272737E-6	DEFECT
//Object oldValue = this.toolTipGenerator;	WITHOUT_CLASSIFICATION	0.9999999011537786	WITHOUT_CLASSIFICATION	9.884622145732147E-8	DEFECT
//Object oldValue = this.urlGenerator;	WITHOUT_CLASSIFICATION	0.9999997593302454	WITHOUT_CLASSIFICATION	2.406697545934956E-7	DEFECT
// plot the data (unless the dataset is null)...	WITHOUT_CLASSIFICATION	0.9999106881195767	WITHOUT_CLASSIFICATION	8.931188042329715E-5	DEFECT
// the following relies on the fact that the intervals are immutable	WITHOUT_CLASSIFICATION	0.9999996755094261	WITHOUT_CLASSIFICATION	3.2449057383382154E-7	DEFECT
// intentionally blank	WITHOUT_CLASSIFICATION	0.9999974835945652	WITHOUT_CLASSIFICATION	2.516405434857067E-6	DEFECT
// can't find any difference	WITHOUT_CLASSIFICATION	0.999903771754945	WITHOUT_CLASSIFICATION	9.62282450550092E-5	DEFECT
// we're doing this for testing only, and make sure that we // only add data in descending order by x-value	WITHOUT_CLASSIFICATION	0.9999998569810228	WITHOUT_CLASSIFICATION	1.4301897715578933E-7	DEFECT
// work out the maximum height or width of the non-shared axes...	WITHOUT_CLASSIFICATION	0.9980727164740572	WITHOUT_CLASSIFICATION	0.0019272835259427782	DEFECT
// calculate sub-plot area	WITHOUT_CLASSIFICATION	0.9999995992008043	WITHOUT_CLASSIFICATION	4.0079919572735284E-7	DEFECT
// calculate sub-plot area	WITHOUT_CLASSIFICATION	0.9999995992008043	WITHOUT_CLASSIFICATION	4.0079919572735284E-7	DEFECT
// set up info collection...	WITHOUT_CLASSIFICATION	0.999999177166589	WITHOUT_CLASSIFICATION	8.228334109975627E-7	DEFECT
// adjust the drawing area for plot insets (if any)...	WITHOUT_CLASSIFICATION	0.9999847718992008	WITHOUT_CLASSIFICATION	1.522810079927431E-5	DEFECT
// calculate the data area...	WITHOUT_CLASSIFICATION	0.9999964175632622	WITHOUT_CLASSIFICATION	3.5824367377960182E-6	DEFECT
// set the width and height of non-shared axis of all sub-plots	WITHOUT_CLASSIFICATION	0.9999966393786673	WITHOUT_CLASSIFICATION	3.3606213326883205E-6	DEFECT
// draw the shared axis	WITHOUT_CLASSIFICATION	0.9999993631949523	WITHOUT_CLASSIFICATION	6.36805047671745E-7	DEFECT
// if there is an existing dataset, remove the plot from the list of // change listeners...	WITHOUT_CLASSIFICATION	0.9999998772794557	WITHOUT_CLASSIFICATION	1.227205443099434E-7	DEFECT
// set the new dataset, and register the chart as a change listener...	WITHOUT_CLASSIFICATION	0.9999999645272238	WITHOUT_CLASSIFICATION	3.547277625999833E-8	DEFECT
// record the plot area...	WITHOUT_CLASSIFICATION	0.9999859111658889	WITHOUT_CLASSIFICATION	1.4088834111140217E-5	DEFECT
//  range = this.rangeAxis.getRange().getLength(); //  scaledRange = range * percent; //   rangeAxis.setAnchoredRange(scaledRange);	WITHOUT_CLASSIFICATION	0.9999993153120622	WITHOUT_CLASSIFICATION	6.846879378993803E-7	DEFECT
// if the source point doesn't fall within a subplot, we do the // zoom on all subplots...	WITHOUT_CLASSIFICATION	0.9999990592454204	WITHOUT_CLASSIFICATION	9.407545795278481E-7	DEFECT
// draw all the subplots	WITHOUT_CLASSIFICATION	0.9999998022000003	WITHOUT_CLASSIFICATION	1.9779999974702886E-7	DEFECT
// override is only for documentation purposes	WITHOUT_CLASSIFICATION	0.9999982472469151	WITHOUT_CLASSIFICATION	1.7527530848864279E-6	DEFECT
// send a dataset change event to self to trigger plot change event	WITHOUT_CLASSIFICATION	0.999999879382391	WITHOUT_CLASSIFICATION	1.2061760901902736E-7	DEFECT
// adjust the drawing area for the plot insets (if any)...	WITHOUT_CLASSIFICATION	0.9999917023896029	WITHOUT_CLASSIFICATION	8.297610397074538E-6	DEFECT
// y is minor	WITHOUT_CLASSIFICATION	0.9999908314180089	WITHOUT_CLASSIFICATION	9.168581991031252E-6	DEFECT
// y is minor	WITHOUT_CLASSIFICATION	0.9999908314180089	WITHOUT_CLASSIFICATION	9.168581991031252E-6	DEFECT
//get major dimension	WITHOUT_CLASSIFICATION	0.9999965836755117	WITHOUT_CLASSIFICATION	3.4163244882426695E-6	DEFECT
//ellipse diameter is the minor dimension	WITHOUT_CLASSIFICATION	0.9999979926662217	WITHOUT_CLASSIFICATION	2.0073337782581974E-6	DEFECT
// draw the wafer	WITHOUT_CLASSIFICATION	0.9999992197363379	WITHOUT_CLASSIFICATION	7.802636622786754E-7	DEFECT
// no data in the parent plot	WITHOUT_CLASSIFICATION	0.9999884829185419	WITHOUT_CLASSIFICATION	1.1517081458041652E-5	DEFECT
// set up info collection...	WITHOUT_CLASSIFICATION	0.999999177166589	WITHOUT_CLASSIFICATION	8.228334109975627E-7	DEFECT
// set the width and height of non-shared axis of all sub-plots	WITHOUT_CLASSIFICATION	0.9999966393786673	WITHOUT_CLASSIFICATION	3.3606213326883205E-6	DEFECT
// draw the shared axis	WITHOUT_CLASSIFICATION	0.9999993631949523	WITHOUT_CLASSIFICATION	6.36805047671745E-7	DEFECT
// draw all the charts	WITHOUT_CLASSIFICATION	0.9999999730156313	WITHOUT_CLASSIFICATION	2.6984368660606786E-8	DEFECT
// adjust for insets...	WITHOUT_CLASSIFICATION	0.999999853071116	WITHOUT_CLASSIFICATION	1.469288839529468E-7	DEFECT
// if there is an existing dataset, remove the plot from the list of // change listeners...	WITHOUT_CLASSIFICATION	0.9999998772794557	WITHOUT_CLASSIFICATION	1.227205443099434E-7	DEFECT
// set the new dataset, and register the chart as a change listener...	WITHOUT_CLASSIFICATION	0.9999999645272238	WITHOUT_CLASSIFICATION	3.547277625999833E-8	DEFECT
// send a dataset change event to self...	WITHOUT_CLASSIFICATION	0.999999406626121	WITHOUT_CLASSIFICATION	5.933738790429579E-7	DEFECT
// delegate 'info' and 'source' argument checks...	WITHOUT_CLASSIFICATION	0.9999999826380311	WITHOUT_CLASSIFICATION	1.736196888246569E-8	DEFECT
// if the source point doesn't fall within a subplot, we do the // zoom on all subplots...	WITHOUT_CLASSIFICATION	0.9999990592454204	WITHOUT_CLASSIFICATION	9.407545795278481E-7	DEFECT
//set upperLeft point // x is minor	WITHOUT_CLASSIFICATION	0.9999975350979354	WITHOUT_CLASSIFICATION	2.464902064603512E-6	DEFECT
//set upperLeft point // x is minor	WITHOUT_CLASSIFICATION	0.9999975350979354	WITHOUT_CLASSIFICATION	2.464902064603512E-6	DEFECT
// calculate and draw the notch // horizontal orientation is considered notch right // vertical orientation is considered notch down	WITHOUT_CLASSIFICATION	0.9996097784582715	WITHOUT_CLASSIFICATION	3.9022154172849437E-4	DEFECT
//this.axisOffset.trim(dataArea);	WITHOUT_CLASSIFICATION	0.9999983721631174	WITHOUT_CLASSIFICATION	1.6278368826194617E-6	DEFECT
//// SECTION PAINT ////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.999998902946744	WITHOUT_CLASSIFICATION	1.0970532560127048E-6	DEFECT
// is there an override?	WITHOUT_CLASSIFICATION	0.9999995817340949	WITHOUT_CLASSIFICATION	4.182659051451533E-7	DEFECT
// if not, check if there is a paint defined for the specified key	WITHOUT_CLASSIFICATION	0.9999999997262958	WITHOUT_CLASSIFICATION	2.7370414013300794E-10	DEFECT
// if not, check if there is a paint defined for the specified key	WITHOUT_CLASSIFICATION	0.9999999997262958	WITHOUT_CLASSIFICATION	2.7370414013300794E-10	DEFECT
// nothing defined - do we autoPopulate?	WITHOUT_CLASSIFICATION	0.9999999858772188	WITHOUT_CLASSIFICATION	1.4122781173131764E-8	DEFECT
// nothing defined - do we autoPopulate?	WITHOUT_CLASSIFICATION	0.9999999858772188	WITHOUT_CLASSIFICATION	1.4122781173131764E-8	DEFECT
// null argument check delegated...	WITHOUT_CLASSIFICATION	0.9999999942359507	WITHOUT_CLASSIFICATION	5.764049387839238E-9	DEFECT
// null argument check delegated...	WITHOUT_CLASSIFICATION	0.9999999942359507	WITHOUT_CLASSIFICATION	5.764049387839238E-9	DEFECT
// null argument check delegated...	WITHOUT_CLASSIFICATION	0.9999999942359507	WITHOUT_CLASSIFICATION	5.764049387839238E-9	DEFECT
//// SECTION OUTLINE PAINT ////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999995572627232	WITHOUT_CLASSIFICATION	4.4273727683434606E-7	DEFECT
//// SECTION OUTLINE STROKE ///////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.999999781459216	WITHOUT_CLASSIFICATION	2.185407839565948E-7	DEFECT
// if not, check if there is a stroke defined for the specified key	WITHOUT_CLASSIFICATION	0.9999999899670905	WITHOUT_CLASSIFICATION	1.0032909491669969E-8	DEFECT
// adjust the plot area for interior spacing and labels...	WITHOUT_CLASSIFICATION	0.9999990830902384	WITHOUT_CLASSIFICATION	9.169097616121912E-7	DEFECT
// make the link area a square if the pie chart is to be circular...	WITHOUT_CLASSIFICATION	0.9999996930715163	WITHOUT_CLASSIFICATION	3.069284836516762E-7	DEFECT
// work out the space required by the domain axis...	WITHOUT_CLASSIFICATION	0.998950240833266	WITHOUT_CLASSIFICATION	0.0010497591667340562	DEFECT
// work out the maximum height or width of the non-shared axes...	WITHOUT_CLASSIFICATION	0.9980727164740572	WITHOUT_CLASSIFICATION	0.0019272835259427782	DEFECT
// calculate sub-plot area	WITHOUT_CLASSIFICATION	0.9999995992008043	WITHOUT_CLASSIFICATION	4.0079919572735284E-7	DEFECT
// adjust the drawing area for plot insets (if any)...	WITHOUT_CLASSIFICATION	0.9999847718992008	WITHOUT_CLASSIFICATION	1.522810079927431E-5	DEFECT
// the pie area defines the circle/ellipse for regular pie sections. // it is defined by shrinking the explodeArea by the explodeMargin // factor.	WITHOUT_CLASSIFICATION	0.9999990838404852	WITHOUT_CLASSIFICATION	9.161595148495812E-7	DEFECT
// if there is an existing dataset, remove the plot from the list of // change listeners...	WITHOUT_CLASSIFICATION	0.9999998772794557	WITHOUT_CLASSIFICATION	1.227205443099434E-7	DEFECT
// plot the data (unless the dataset is null)...	WITHOUT_CLASSIFICATION	0.9999106881195767	WITHOUT_CLASSIFICATION	8.931188042329715E-5	DEFECT
// no data in the parent plot	WITHOUT_CLASSIFICATION	0.9999884829185419	WITHOUT_CLASSIFICATION	1.1517081458041652E-5	DEFECT
// update the linking line target for later // add an entity for the pie section	WITHOUT_CLASSIFICATION	0.9999992703001247	WITHOUT_CLASSIFICATION	7.296998752374035E-7	DEFECT
// work out the mid angle (0 - 90 and 270 - 360) = right, // otherwise left	WITHOUT_CLASSIFICATION	0.9996633127294757	WITHOUT_CLASSIFICATION	3.366872705242994E-4	DEFECT
// classify the keys according to which side the label will appear...	WITHOUT_CLASSIFICATION	0.9988699564982264	WITHOUT_CLASSIFICATION	0.0011300435017735872	DEFECT
// calculate the max label width from the plot dimensions, because // a circular pie can leave a lot more room for labels...	WITHOUT_CLASSIFICATION	0.9999473374809973	WITHOUT_CLASSIFICATION	5.2662519002733055E-5	DEFECT
// draw the labels...	WITHOUT_CLASSIFICATION	0.9999942951507386	WITHOUT_CLASSIFICATION	5.704849261378606E-6	DEFECT
// draw the right labels...	WITHOUT_CLASSIFICATION	0.9998786230253018	WITHOUT_CLASSIFICATION	1.213769746981015E-4	DEFECT
//hh * getInteriorGap();	WITHOUT_CLASSIFICATION	0.9999990408807149	WITHOUT_CLASSIFICATION	9.591192850848975E-7	DEFECT
// line not visible	WITHOUT_CLASSIFICATION	0.9999984440349989	WITHOUT_CLASSIFICATION	1.5559650010405428E-6	DEFECT
// for a RadialGradientPaint we adjust the center and radius to match // the current pie segment...	WITHOUT_CLASSIFICATION	0.9999845167072718	WITHOUT_CLASSIFICATION	1.5483292728173316E-5	DEFECT
// can't find any difference...	WITHOUT_CLASSIFICATION	0.9932551047439037	WITHOUT_CLASSIFICATION	0.006744895256096406	DEFECT
// DEPRECATED FIELDS AND METHODS...	WITHOUT_CLASSIFICATION	0.999900578795814	WITHOUT_CLASSIFICATION	9.942120418612117E-5	DEFECT
// no range axis // no renderer	WITHOUT_CLASSIFICATION	0.9999986377633661	WITHOUT_CLASSIFICATION	1.362236633940695E-6	DEFECT
// backgroundImage	WITHOUT_CLASSIFICATION	0.9999989551071872	WITHOUT_CLASSIFICATION	1.0448928127566375E-6	DEFECT
// set the width and height of non-shared axis of all sub-plots	WITHOUT_CLASSIFICATION	0.9999966393786673	WITHOUT_CLASSIFICATION	3.3606213326883205E-6	DEFECT
// draw the shared axis	WITHOUT_CLASSIFICATION	0.9999993631949523	WITHOUT_CLASSIFICATION	6.36805047671745E-7	DEFECT
// if there is an existing dataset, remove the plot from the list of // change listeners...	WITHOUT_CLASSIFICATION	0.9999998772794557	WITHOUT_CLASSIFICATION	1.227205443099434E-7	DEFECT
// set the new dataset, and register the chart as a change listener...	WITHOUT_CLASSIFICATION	0.9999999645272238	WITHOUT_CLASSIFICATION	3.547277625999833E-8	DEFECT
// delegate 'info' and 'source' argument checks...	WITHOUT_CLASSIFICATION	0.9999999826380311	WITHOUT_CLASSIFICATION	1.736196888246569E-8	DEFECT
// if the source point doesn't fall within a subplot, we do the // zoom on all subplots...	WITHOUT_CLASSIFICATION	0.9999990592454204	WITHOUT_CLASSIFICATION	9.407545795278481E-7	DEFECT
// draw all the subplots	WITHOUT_CLASSIFICATION	0.9999998022000003	WITHOUT_CLASSIFICATION	1.9779999974702886E-7	DEFECT
// send a dataset change event to self to trigger plot change event	WITHOUT_CLASSIFICATION	0.999999879382391	WITHOUT_CLASSIFICATION	1.2061760901902736E-7	DEFECT
// adjust the drawing area for the plot insets (if any)...	WITHOUT_CLASSIFICATION	0.9999917023896029	WITHOUT_CLASSIFICATION	8.297610397074538E-6	DEFECT
// delegate 'state' and 'source' argument checks...	WITHOUT_CLASSIFICATION	0.9999999745479974	WITHOUT_CLASSIFICATION	2.5452002619763558E-8	DEFECT
// after setting up all the subplots, the shared domain axis may need // reconfiguring	WITHOUT_CLASSIFICATION	0.9999999552377353	WITHOUT_CLASSIFICATION	4.47622646524273E-8	DEFECT
// 20% // 20% // 20%	WITHOUT_CLASSIFICATION	0.9999688729614298	WITHOUT_CLASSIFICATION	3.112703857026965E-5	DEFECT
// create the bounds for the inner arc	WITHOUT_CLASSIFICATION	0.999999888369498	WITHOUT_CLASSIFICATION	1.1163050201964535E-7	DEFECT
// calculate inner arc in reverse direction, for later // GeneralPath construction	WITHOUT_CLASSIFICATION	0.9999999506483036	WITHOUT_CLASSIFICATION	4.9351696367524485E-8	DEFECT
// add an entity for the pie section	WITHOUT_CLASSIFICATION	0.9999820572799388	WITHOUT_CLASSIFICATION	1.7942720061096187E-5	DEFECT
// check that there is some data to display...	WITHOUT_CLASSIFICATION	0.9996983293701899	WITHOUT_CLASSIFICATION	3.016706298100722E-4	DEFECT
// the columns variable is always >= rows	WITHOUT_CLASSIFICATION	0.9999991617927663	WITHOUT_CLASSIFICATION	8.382072338356929E-7	DEFECT
// swap rows and columns to match plotArea shape	WITHOUT_CLASSIFICATION	0.9999970101163629	WITHOUT_CLASSIFICATION	2.9898836371857007E-6	DEFECT
// update the section colors to match the global colors...	WITHOUT_CLASSIFICATION	0.9999782185770157	WITHOUT_CLASSIFICATION	2.178142298432611E-5	DEFECT
// pre-fetch the colors for each key...this is because the subplots // may not display every key, but we need the coloring to be // consistent...	WITHOUT_CLASSIFICATION	0.9598418758337498	WITHOUT_CLASSIFICATION	0.04015812416625023	DEFECT
// column keys provide potential keys for individual pies	WITHOUT_CLASSIFICATION	0.9998097239598256	WITHOUT_CLASSIFICATION	1.9027604017435583E-4	DEFECT
// row keys provide potential keys for individual pies	WITHOUT_CLASSIFICATION	0.9996520074117856	WITHOUT_CLASSIFICATION	3.4799258821430337E-4	DEFECT
/* =========================================================== * JFreeChart : a free chart library for the Java(tm) platform * =========================================================== * * (C) Copyright 2000-2014, by Object Refinery Limited and Contributors. * * Project Info:  http://www.jfree.org/jfreechart/index.html * * This library is free software; you can redistribute it and/or modify it * under the terms of the GNU Lesser General Public License as published by * the Free Software Foundation; either version 2.1 of the License, or * (at your option) any later version. * * This library is distributed in the hope that it will be useful, but * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public * License for more details. * * You should have received a copy of the GNU Lesser General Public * License along with this library; if not, write to the Free Software * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, * USA. * * [Oracle and Java are registered trademarks of Oracle and/or its affiliates. * Other names may be trademarks of their respective owners.] * * ----------------- * CategoryPlot.java * ----------------- * (C) Copyright 2000-2014, by Object Refinery Limited and Contributors. * * Original Author:  David Gilbert (for Object Refinery Limited); * Contributor(s):   Jeremy Bowman; *                   Arnaud Lelievre; *                   Richard West, Advanced Micro Devices, Inc.; *                   Ulrich Voigt - patch 2686040; *                   Peter Kolb - patches 2603321 and 2809117; * * Changes * ------- * 21-Jun-2001 : Removed redundant JFreeChart parameter from constructors (DG); * 21-Aug-2001 : Added standard header. Fixed DOS encoding problem (DG); * 18-Sep-2001 : Updated header (DG); * 15-Oct-2001 : Data source classes moved to com.jrefinery.data.* (DG); * 22-Oct-2001 : Renamed DataSource.java --> Dataset.java etc. (DG); * 23-Oct-2001 : Changed intro and trail gaps on bar plots to use percentage of *               available space rather than a fixed number of units (DG); * 12-Dec-2001 : Changed constructors to protected (DG); * 13-Dec-2001 : Added tooltips (DG); * 16-Jan-2002 : Increased maximum intro and trail gap percents, plus added *               some argument checking code.  Thanks to Taoufik Romdhane for *               suggesting this (DG); * 05-Feb-2002 : Added accessor methods for the tooltip generator, incorporated *               alpha-transparency for Plot and subclasses (DG); * 06-Mar-2002 : Updated import statements (DG); * 14-Mar-2002 : Renamed BarPlot.java --> CategoryPlot.java, and changed code *               to use the CategoryItemRenderer interface (DG); * 22-Mar-2002 : Dropped the getCategories() method (DG); * 23-Apr-2002 : Moved the dataset from the JFreeChart class to the Plot *               class (DG); * 29-Apr-2002 : New methods to support printing values at the end of bars, *               contributed by Jeremy Bowman (DG); * 11-May-2002 : New methods for label visibility and overlaid plot support, *               contributed by Jeremy Bowman (DG); * 06-Jun-2002 : Removed the tooltip generator, this is now stored with the *               renderer.  Moved constants into the CategoryPlotConstants *               interface.  Updated Javadoc comments (DG); * 10-Jun-2002 : Overridden datasetChanged() method to update the upper and *               lower bound on the range axis (if necessary), updated *               Javadocs (DG); * 25-Jun-2002 : Removed redundant imports (DG); * 20-Aug-2002 : Changed the constructor for Marker (DG); * 28-Aug-2002 : Added listener notification to setDomainAxis() and *               setRangeAxis() (DG); * 23-Sep-2002 : Added getLegendItems() method and fixed errors reported by *               Checkstyle (DG); * 28-Oct-2002 : Changes to the CategoryDataset interface (DG); * 05-Nov-2002 : Base dataset is now TableDataset not CategoryDataset (DG); * 07-Nov-2002 : Renamed labelXXX as valueLabelXXX (DG); * 18-Nov-2002 : Added grid settings for both domain and range axis (previously *               these were set in the axes) (DG); * 19-Nov-2002 : Added axis location parameters to constructor (DG); * 17-Jan-2003 : Moved to com.jrefinery.chart.plot package (DG); * 14-Feb-2003 : Fixed bug in auto-range calculation for secondary axis (DG); * 26-Mar-2003 : Implemented Serializable (DG); * 02-May-2003 : Moved render() method up from subclasses. Added secondary *               range markers. Added an attribute to control the dataset *               rendering order.  Added a drawAnnotations() method.  Changed *               the axis location from an int to an AxisLocation (DG); * 07-May-2003 : Merged HorizontalCategoryPlot and VerticalCategoryPlot into *               this class (DG); * 02-Jun-2003 : Removed check for range axis compatibility (DG); * 04-Jul-2003 : Added a domain gridline position attribute (DG); * 21-Jul-2003 : Moved DrawingSupplier to Plot superclass (DG); * 19-Aug-2003 : Added equals() method and implemented Cloneable (DG); * 01-Sep-2003 : Fixed bug 797466 (no change event when secondary dataset *               changes) (DG); * 02-Sep-2003 : Fixed bug 795209 (wrong dataset checked in render2 method) and *               790407 (initialise method) (DG); * 08-Sep-2003 : Added internationalization via use of properties *               resourceBundle (RFE 690236) (AL); * 08-Sep-2003 : Fixed bug (wrong secondary range axis being used).  Changed *               ValueAxis API (DG); * 10-Sep-2003 : Fixed bug in setRangeAxis() method (DG); * 15-Sep-2003 : Fixed two bugs in serialization, implemented *               PublicCloneable (DG); * 23-Oct-2003 : Added event notification for changes to renderer (DG); * 26-Nov-2003 : Fixed bug (849645) in clearRangeMarkers() method (DG); * 03-Dec-2003 : Modified draw method to accept anchor (DG); * 21-Jan-2004 : Update for renamed method in ValueAxis (DG); * 10-Mar-2004 : Fixed bug in axis range calculation when secondary renderer is *               stacked (DG); * 12-May-2004 : Added fixed legend items (DG); * 19-May-2004 : Added check for null legend item from renderer (DG); * 02-Jun-2004 : Updated the DatasetRenderingOrder class (DG); * 05-Nov-2004 : Renamed getDatasetsMappedToRangeAxis() *               --> datasetsMappedToRangeAxis(), and ensured that returned *               list doesn't contain null datasets (DG); * 12-Nov-2004 : Implemented new Zoomable interface (DG); * 07-Jan-2005 : Renamed getRangeExtent() --> findRangeBounds() in *               CategoryItemRenderer (DG); * 04-May-2005 : Fixed serialization of range markers (DG); * 05-May-2005 : Updated draw() method parameters (DG); * 20-May-2005 : Added setDomainAxes() and setRangeAxes() methods, as per *               RFE 1183100 (DG); * 01-Jun-2005 : Upon deserialization, register plot as a listener with its *               axes, dataset(s) and renderer(s) - see patch 1209475 (DG); * 02-Jun-2005 : Added support for domain markers (DG); * 06-Jun-2005 : Fixed equals() method for use with GradientPaint (DG); * 09-Jun-2005 : Added setRenderers(), as per RFE 1183100 (DG); * 16-Jun-2005 : Added getDomainAxisCount() and getRangeAxisCount() methods, to *               match XYPlot (see RFE 1220495) (DG); * ------------- JFREECHART 1.0.x --------------------------------------------- * 11-Jan-2006 : Added configureRangeAxes() to rendererChanged(), since the *               renderer might influence the axis range (DG); * 27-Jan-2006 : Added various null argument checks (DG); * 18-Aug-2006 : Added getDatasetCount() method, plus a fix for bug drawing *               category labels, thanks to Adriaan Joubert (1277726) (DG); * 05-Sep-2006 : Added MarkerChangeEvent support (DG); * 30-Oct-2006 : Added getDomainAxisIndex(), datasetsMappedToDomainAxis() and *               getCategoriesForAxis() methods (DG); * 22-Nov-2006 : Fire PlotChangeEvent from setColumnRenderingOrder() and *               setRowRenderingOrder() (DG); * 29-Nov-2006 : Fix for bug 1605207 (IntervalMarker exceeds bounds of data *               area) (DG); * 26-Feb-2007 : Fix for bug 1669218 (setDomainAxisLocation() notify argument *               ignored) (DG); * 13-Mar-2007 : Added null argument checks for setRangeCrosshairPaint() and *               setRangeCrosshairStroke(), fixed clipping for *               annotations (DG); * 07-Jun-2007 : Override drawBackground() for new GradientPaint handling (DG); * 10-Jul-2007 : Added getRangeAxisIndex(ValueAxis) method (DG); * 24-Sep-2007 : Implemented new zoom methods (DG); * 25-Oct-2007 : Added some argument checks (DG); * 05-Nov-2007 : Applied patch 1823697, by Richard West, for removal of domain *               and range markers (DG); * 14-Nov-2007 : Added missing event notifications (DG); * 25-Mar-2008 : Added new methods with optional notification - see patch *               1913751 (DG); * 07-Apr-2008 : Fixed NPE in removeDomainMarker() and *               removeRangeMarker() (DG); * 23-Apr-2008 : Fixed equals() and clone() methods (DG); * 26-Jun-2008 : Fixed crosshair support (DG); * 10-Jul-2008 : Fixed outline visibility for 3D renderers (DG); * 12-Aug-2008 : Added rendererCount() method (DG); * 25-Nov-2008 : Added facility to map datasets to multiples axes (DG); * 15-Dec-2008 : Cleaned up grid drawing methods (DG); * 18-Dec-2008 : Use ResourceBundleWrapper - see patch 1607918 by *               Jess Thrysoee (DG); * 21-Jan-2009 : Added rangeMinorGridlinesVisible flag (DG); * 18-Mar-2009 : Modified anchored zoom behaviour (DG); * 19-Mar-2009 : Implemented Pannable interface - see patch 2686040 (DG); * 19-Mar-2009 : Added entity support - see patch 2603321 by Peter Kolb (DG); * 24-Jun-2009 : Implemented AnnotationChangeListener (see patch 2809117 by *               PK) (DG); * 06-Jul-2009 : Fix for cloning of renderers - see bug 2817504 (DG) * 10-Jul-2009 : Added optional drop shadow generator (DG); * 27-Sep-2011 : Fixed annotation import (DG); * 18-Oct-2011 : Fixed tooltip offset with shadow generator (DG); * 20-Nov-2011 : Initialise shadow generator as null (DG); * 02-Jul-2013 : Use ParamChecks (DG); * 12-Sep-2013 : Check for KEY_SUPPRESS_SHADOW_GENERATION rendering hint (DG); * 10-Mar-2014 : Updated Javadocs for issue #1123 (DG); * 09-Apr-2014 : Remove use of ObjectList (DG); *  */	WITHOUT_CLASSIFICATION	0.7818239737065835	WITHOUT_CLASSIFICATION	0.21817602629341654	DEFECT
// allocate storage for dataset, axes and renderers	WITHOUT_CLASSIFICATION	0.9999991933844723	WITHOUT_CLASSIFICATION	8.066155277600522E-7	DEFECT
// delegate...	WITHOUT_CLASSIFICATION	0.999987187642393	WITHOUT_CLASSIFICATION	1.2812357606936273E-5	DEFECT
// delegate...	WITHOUT_CLASSIFICATION	0.999987187642393	WITHOUT_CLASSIFICATION	1.2812357606936273E-5	DEFECT
// calculate the data area...	WITHOUT_CLASSIFICATION	0.9999964175632622	WITHOUT_CLASSIFICATION	3.5824367377960182E-6	DEFECT
// send a dataset change event to self...	WITHOUT_CLASSIFICATION	0.999999406626121	WITHOUT_CLASSIFICATION	5.933738790429579E-7	DEFECT
// if the plot area is too small, just return...	WITHOUT_CLASSIFICATION	0.9999997776316624	WITHOUT_CLASSIFICATION	2.2236833756438954E-7	DEFECT
// record the plot area...	WITHOUT_CLASSIFICATION	0.9999859111658889	WITHOUT_CLASSIFICATION	1.4088834111140217E-5	DEFECT
// adjust the drawing area for the plot insets (if any)...	WITHOUT_CLASSIFICATION	0.9999917023896029	WITHOUT_CLASSIFICATION	8.297610397074538E-6	DEFECT
// set the anchor value for the range axis...	WITHOUT_CLASSIFICATION	0.9999983915013716	WITHOUT_CLASSIFICATION	1.6084986283979975E-6	DEFECT
// OK	WITHOUT_CLASSIFICATION	0.9999959252826889	WITHOUT_CLASSIFICATION	4.074717311095198E-6	DEFECT
// fake a dataset change event to update axes...	WITHOUT_CLASSIFICATION	0.9999950819751173	WITHOUT_CLASSIFICATION	4.9180248826846555E-6	DEFECT
// fake a dataset change event to update axes...	WITHOUT_CLASSIFICATION	0.9999950819751173	WITHOUT_CLASSIFICATION	4.9180248826846555E-6	DEFECT
// the first axis in the list is used for data <--> Java2D	WITHOUT_CLASSIFICATION	0.9999999168490866	WITHOUT_CLASSIFICATION	8.315091338595553E-8	DEFECT
// the first axis in the list is used for data <--> Java2D	WITHOUT_CLASSIFICATION	0.9999999168490866	WITHOUT_CLASSIFICATION	8.315091338595553E-8	DEFECT
// get the legend items for the datasets...	WITHOUT_CLASSIFICATION	0.9999934893619917	WITHOUT_CLASSIFICATION	6.5106380083588665E-6	DEFECT
// this should never happen with the existing code, but throw // an exception in case future changes make it possible...	WITHOUT_CLASSIFICATION	0.6504532501675865	WITHOUT_CLASSIFICATION	0.3495467498324135	DEFECT
// should be equal...	WITHOUT_CLASSIFICATION	0.99998183185329	WITHOUT_CLASSIFICATION	1.8168146709938312E-5	DEFECT
// reserve some space for the domain axis...	WITHOUT_CLASSIFICATION	0.9999996973781656	WITHOUT_CLASSIFICATION	3.026218344655341E-7	DEFECT
// reserve space for the primary domain axis...	WITHOUT_CLASSIFICATION	0.9999985050687189	WITHOUT_CLASSIFICATION	1.4949312810921122E-6	DEFECT
// reserve space for any domain axes...	WITHOUT_CLASSIFICATION	0.999975093928809	WITHOUT_CLASSIFICATION	2.4906071190989388E-5	DEFECT
// reserve some space for the range axis...	WITHOUT_CLASSIFICATION	0.9999979900574564	WITHOUT_CLASSIFICATION	2.009942543692725E-6	DEFECT
// reserve space for the range axes (if any)...	WITHOUT_CLASSIFICATION	0.9999612353321566	WITHOUT_CLASSIFICATION	3.876466784343132E-5	DEFECT
// if the incoming state is null, no information will be passed // back to the caller - but we create a temporary state to record // the plot area, since that is used later by the axes	WITHOUT_CLASSIFICATION	0.9999999672496757	WITHOUT_CLASSIFICATION	3.2750324352003463E-8	DEFECT
// if there is a renderer, it draws the background, otherwise use the // default background...	WITHOUT_CLASSIFICATION	0.9999996079199712	WITHOUT_CLASSIFICATION	3.920800287454351E-7	DEFECT
// the anchor point is typically the point where the mouse last // clicked - the crosshairs will be driven off this point...	WITHOUT_CLASSIFICATION	0.9900539548720958	WITHOUT_CLASSIFICATION	0.009946045127904202	DEFECT
// specify the anchor X and Y coordinates in Java2D space, for the // cases where these are not updated during rendering (i.e. no lock // on data)	WITHOUT_CLASSIFICATION	0.9999927504098337	WITHOUT_CLASSIFICATION	7.249590166233408E-6	DEFECT
// don't let anyone draw outside the data area	WITHOUT_CLASSIFICATION	0.9999594840504005	WITHOUT_CLASSIFICATION	4.051594959942802E-5	DEFECT
// draw the markers...	WITHOUT_CLASSIFICATION	0.9999945019528849	WITHOUT_CLASSIFICATION	5.498047115164245E-6	DEFECT
// now render data items...	WITHOUT_CLASSIFICATION	0.9999824710613944	WITHOUT_CLASSIFICATION	1.7528938605714692E-5	DEFECT
// set up the alpha-transparency...	WITHOUT_CLASSIFICATION	0.9999917286215284	WITHOUT_CLASSIFICATION	8.271378471489314E-6	DEFECT
// if the flag is being set to true, there may be queued up changes...	WITHOUT_CLASSIFICATION	0.9999996247256766	WITHOUT_CLASSIFICATION	3.752743234465844E-7	DEFECT
// an empty dataset should return a null range	WITHOUT_CLASSIFICATION	0.9999999240175969	WITHOUT_CLASSIFICATION	7.598240316677676E-8	DEFECT
// draw the foreground markers...	WITHOUT_CLASSIFICATION	0.9999825873387369	WITHOUT_CLASSIFICATION	1.741266126306174E-5	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.999993660111925	WITHOUT_CLASSIFICATION	6.339888074945912E-6	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.999993660111925	WITHOUT_CLASSIFICATION	6.339888074945912E-6	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.999993660111925	WITHOUT_CLASSIFICATION	6.339888074945912E-6	DEFECT
// draw the annotations (if any)...	WITHOUT_CLASSIFICATION	0.9995531591867461	WITHOUT_CLASSIFICATION	4.468408132538873E-4	DEFECT
// draw domain crosshair if required...	WITHOUT_CLASSIFICATION	0.9999523877929121	WITHOUT_CLASSIFICATION	4.761220708795619E-5	DEFECT
// draw range crosshair if required...	WITHOUT_CLASSIFICATION	0.9998079043950441	WITHOUT_CLASSIFICATION	1.9209560495595782E-4	DEFECT
// draw an outline around the plot area...	WITHOUT_CLASSIFICATION	0.9999505300021552	WITHOUT_CLASSIFICATION	4.946999784476462E-5	DEFECT
// add domain axes to lists...	WITHOUT_CLASSIFICATION	0.9999985135641839	WITHOUT_CLASSIFICATION	1.486435816063904E-6	DEFECT
// add range axes to lists...	WITHOUT_CLASSIFICATION	0.9999921392676966	WITHOUT_CLASSIFICATION	7.860732303413978E-6	DEFECT
// draw the top axes	WITHOUT_CLASSIFICATION	0.9999999140803281	WITHOUT_CLASSIFICATION	8.591967190190654E-8	DEFECT
// draw the bottom axes	WITHOUT_CLASSIFICATION	0.9999999619811354	WITHOUT_CLASSIFICATION	3.8018864573462925E-8	DEFECT
// draw the left axes	WITHOUT_CLASSIFICATION	0.9999997875356922	WITHOUT_CLASSIFICATION	2.124643078905775E-7	DEFECT
// draw the right axes	WITHOUT_CLASSIFICATION	0.9999969247644737	WITHOUT_CLASSIFICATION	3.0752355262923946E-6	DEFECT
// draw the range grid lines, if any...	WITHOUT_CLASSIFICATION	0.9999220317463174	WITHOUT_CLASSIFICATION	7.796825368261118E-5	DEFECT
// no renderer, no gridlines...	WITHOUT_CLASSIFICATION	0.9999936852699381	WITHOUT_CLASSIFICATION	6.314730061912175E-6	DEFECT
// iterate through the datasets that map to the axis and get the union // of the ranges.	WITHOUT_CLASSIFICATION	0.9999994269845653	WITHOUT_CLASSIFICATION	5.730154345402605E-7	DEFECT
// add the unique categories from this dataset	WITHOUT_CLASSIFICATION	0.9999964645325836	WITHOUT_CLASSIFICATION	3.5354674164330746E-6	DEFECT
// do nothing, because the plot is not pannable along the domain axes	WITHOUT_CLASSIFICATION	0.999997059601364	WITHOUT_CLASSIFICATION	2.940398635975181E-6	DEFECT
// can't zoom domain axis	WITHOUT_CLASSIFICATION	0.9999980816457217	WITHOUT_CLASSIFICATION	1.9183542782800067E-6	DEFECT
// delegate to other method	WITHOUT_CLASSIFICATION	0.9999999576094825	WITHOUT_CLASSIFICATION	4.239051758785541E-8	DEFECT
// perform the zoom on each range axis	WITHOUT_CLASSIFICATION	0.9999995395447037	WITHOUT_CLASSIFICATION	4.6045529636904645E-7	DEFECT
// get the relevant source coordinate given the plot orientation	WITHOUT_CLASSIFICATION	0.9999928511262979	WITHOUT_CLASSIFICATION	7.148873702137465E-6	DEFECT
// AxisLocation is immutable, so we can just copy the maps	WITHOUT_CLASSIFICATION	0.9999997718002357	WITHOUT_CLASSIFICATION	2.2819976436871477E-7	DEFECT
// not currently serialized	WITHOUT_CLASSIFICATION	0.9999902981074471	WITHOUT_CLASSIFICATION	9.70189255290867E-6	DEFECT
// some subclasses override this method completely, so don't put // anything here that *must* be done	WITHOUT_CLASSIFICATION	0.9999994998861172	WITHOUT_CLASSIFICATION	5.00113882740679E-7	DEFECT
// provides a 'no action' default	WITHOUT_CLASSIFICATION	0.999995632991437	WITHOUT_CLASSIFICATION	4.367008563053854E-6	DEFECT
// an empty dataset should return a null range	WITHOUT_CLASSIFICATION	0.9999999240175969	WITHOUT_CLASSIFICATION	7.598240316677676E-8	DEFECT
// send a dataset change event to self...	WITHOUT_CLASSIFICATION	0.999999406626121	WITHOUT_CLASSIFICATION	5.933738790429579E-7	DEFECT
// if the plot area is too small, just return...	WITHOUT_CLASSIFICATION	0.9999997776316624	WITHOUT_CLASSIFICATION	2.2236833756438954E-7	DEFECT
// record the plot area...	WITHOUT_CLASSIFICATION	0.9999859111658889	WITHOUT_CLASSIFICATION	1.4088834111140217E-5	DEFECT
// OK	WITHOUT_CLASSIFICATION	0.9999959252826889	WITHOUT_CLASSIFICATION	4.074717311095198E-6	DEFECT
// adjust the drawing area for the plot insets (if any)...	WITHOUT_CLASSIFICATION	0.9999917023896029	WITHOUT_CLASSIFICATION	8.297610397074538E-6	DEFECT
// delegate...	WITHOUT_CLASSIFICATION	0.999987187642393	WITHOUT_CLASSIFICATION	1.2812357606936273E-5	DEFECT
// delegate...	WITHOUT_CLASSIFICATION	0.999987187642393	WITHOUT_CLASSIFICATION	1.2812357606936273E-5	DEFECT
// try the parent plot	WITHOUT_CLASSIFICATION	0.9999910329917752	WITHOUT_CLASSIFICATION	8.96700822477263E-6	DEFECT
// fake a dataset change event to update axes...	WITHOUT_CLASSIFICATION	0.9999950819751173	WITHOUT_CLASSIFICATION	4.9180248826846555E-6	DEFECT
// axisIndices can be: // 1.  null; // 2.  non-empty, containing only Integer objects that are unique.	WITHOUT_CLASSIFICATION	0.9999765387326971	WITHOUT_CLASSIFICATION	2.3461267303014847E-5	DEFECT
// the first axis in the list is used for data <--> Java2D	WITHOUT_CLASSIFICATION	0.9999999168490866	WITHOUT_CLASSIFICATION	8.315091338595553E-8	DEFECT
// no renderer, no gridlines...	WITHOUT_CLASSIFICATION	0.9999936852699381	WITHOUT_CLASSIFICATION	6.314730061912175E-6	DEFECT
// iterate through the datasets that map to the axis and get the union // of the ranges.	WITHOUT_CLASSIFICATION	0.9999994269845653	WITHOUT_CLASSIFICATION	5.730154345402605E-7	DEFECT
// create the dataset...	WITHOUT_CLASSIFICATION	0.9999982592583395	WITHOUT_CLASSIFICATION	1.7407416604092391E-6	DEFECT
// the above should cover all the options...	WITHOUT_CLASSIFICATION	0.9999964889369996	WITHOUT_CLASSIFICATION	3.5110630003170946E-6	DEFECT
// define the default locations for up to 8 axes...	WITHOUT_CLASSIFICATION	0.9999993757289183	WITHOUT_CLASSIFICATION	6.242710817708444E-7	DEFECT
// normalize angle	WITHOUT_CLASSIFICATION	0.9999998585662837	WITHOUT_CLASSIFICATION	1.4143371632664777E-7	DEFECT
// draw the plot background and axes...	WITHOUT_CLASSIFICATION	0.9998462501942659	WITHOUT_CLASSIFICATION	1.5374980573412475E-4	DEFECT
// now for each dataset, get the renderer and the appropriate axis // and render the dataset...	WITHOUT_CLASSIFICATION	0.9997605918321306	WITHOUT_CLASSIFICATION	2.394081678692711E-4	DEFECT
// now get the data and plot it (the visual representation will depend // on the m_Renderer that has been set)...	WITHOUT_CLASSIFICATION	0.9995674426000054	WITHOUT_CLASSIFICATION	4.325573999946155E-4	DEFECT
// draw the domain grid lines, if any...	WITHOUT_CLASSIFICATION	0.9999882871678966	WITHOUT_CLASSIFICATION	1.1712832103321878E-5	DEFECT
// draw the radius grid lines, if any...	WITHOUT_CLASSIFICATION	0.9999549644677342	WITHOUT_CLASSIFICATION	4.503553226579971E-5	DEFECT
// the datasets are not cloned, but listeners need to be added...	WITHOUT_CLASSIFICATION	0.9999980699777407	WITHOUT_CLASSIFICATION	1.9300222593866368E-6	DEFECT
// square	WITHOUT_CLASSIFICATION	0.9999997085356845	WITHOUT_CLASSIFICATION	2.914643154701324E-7	DEFECT
// circle	WITHOUT_CLASSIFICATION	0.9999956446903393	WITHOUT_CLASSIFICATION	4.355309660674831E-6	DEFECT
// up-pointing triangle	WITHOUT_CLASSIFICATION	0.9999998351874635	WITHOUT_CLASSIFICATION	1.6481253645575867E-7	DEFECT
// diamond	WITHOUT_CLASSIFICATION	0.99995130376535	WITHOUT_CLASSIFICATION	4.869623465006332E-5	DEFECT
// horizontal rectangle	WITHOUT_CLASSIFICATION	0.9999987044096327	WITHOUT_CLASSIFICATION	1.2955903673944114E-6	DEFECT
// down-pointing triangle	WITHOUT_CLASSIFICATION	0.9999967520425332	WITHOUT_CLASSIFICATION	3.2479574667449042E-6	DEFECT
// horizontal ellipse	WITHOUT_CLASSIFICATION	0.9999999709800083	WITHOUT_CLASSIFICATION	2.901999170221385E-8	DEFECT
// right-pointing triangle	WITHOUT_CLASSIFICATION	0.9999991465697858	WITHOUT_CLASSIFICATION	8.534302141162067E-7	DEFECT
// vertical rectangle	WITHOUT_CLASSIFICATION	0.9999966399321744	WITHOUT_CLASSIFICATION	3.360067825680177E-6	DEFECT
// left-pointing triangle	WITHOUT_CLASSIFICATION	0.9999994108463243	WITHOUT_CLASSIFICATION	5.891536756646096E-7	DEFECT
// an empty dataset should return a null range	WITHOUT_CLASSIFICATION	0.9999999240175969	WITHOUT_CLASSIFICATION	7.598240316677676E-8	DEFECT
// adjust for insets...	WITHOUT_CLASSIFICATION	0.999999853071116	WITHOUT_CLASSIFICATION	1.469288839529468E-7	DEFECT
// adjust the plot area by the interior spacing value	WITHOUT_CLASSIFICATION	0.9999999516857786	WITHOUT_CLASSIFICATION	4.831422138678697E-8	DEFECT
// set the new dataset, and register the chart as a change listener...	WITHOUT_CLASSIFICATION	0.9999999645272238	WITHOUT_CLASSIFICATION	3.547277625999833E-8	DEFECT
// send a dataset change event to self to trigger plot change event	WITHOUT_CLASSIFICATION	0.999999879382391	WITHOUT_CLASSIFICATION	1.2061760901902736E-7	DEFECT
// return the override, if there is one...	WITHOUT_CLASSIFICATION	0.9999980814852791	WITHOUT_CLASSIFICATION	1.9185147208106884E-6	DEFECT
//// SERIES PAINT /////////////////////////	WITHOUT_CLASSIFICATION	0.9999916761533945	WITHOUT_CLASSIFICATION	8.323846605478133E-6	DEFECT
// otherwise look up the paint list	WITHOUT_CLASSIFICATION	0.9999999569822965	WITHOUT_CLASSIFICATION	4.301770345614012E-8	DEFECT
// return the override, if there is one...	WITHOUT_CLASSIFICATION	0.9999980814852791	WITHOUT_CLASSIFICATION	1.9185147208106884E-6	DEFECT
// return the override, if there is one...	WITHOUT_CLASSIFICATION	0.9999980814852791	WITHOUT_CLASSIFICATION	1.9185147208106884E-6	DEFECT
//// SERIES OUTLINE PAINT ////////////////////////////	WITHOUT_CLASSIFICATION	0.9999975101172592	WITHOUT_CLASSIFICATION	2.489882740778804E-6	DEFECT
// otherwise look up the paint list	WITHOUT_CLASSIFICATION	0.9999999569822965	WITHOUT_CLASSIFICATION	4.301770345614012E-8	DEFECT
// otherwise look up the paint list	WITHOUT_CLASSIFICATION	0.9999999569822965	WITHOUT_CLASSIFICATION	4.301770345614012E-8	DEFECT
// an empty dataset should return a null range	WITHOUT_CLASSIFICATION	0.9999999240175969	WITHOUT_CLASSIFICATION	7.598240316677676E-8	DEFECT
// ensure we have a maximum value to use on the axes	WITHOUT_CLASSIFICATION	0.9999992819014125	WITHOUT_CLASSIFICATION	7.180985875002136E-7	DEFECT
//// SERIES OUTLINE STROKE /////////////////////	WITHOUT_CLASSIFICATION	0.9999986737080048	WITHOUT_CLASSIFICATION	1.3262919952053729E-6	DEFECT
// Next, setup the plot area	WITHOUT_CLASSIFICATION	0.9999998631202655	WITHOUT_CLASSIFICATION	1.368797345797424E-7	DEFECT
// make the chart area a square	WITHOUT_CLASSIFICATION	0.9999999021707494	WITHOUT_CLASSIFICATION	9.782925061262716E-8	DEFECT
// draw the axis and category label	WITHOUT_CLASSIFICATION	0.9999955029338561	WITHOUT_CLASSIFICATION	4.497066143877256E-6	DEFECT
// 1 = end of axis	WITHOUT_CLASSIFICATION	0.9999977762022703	WITHOUT_CLASSIFICATION	2.2237977296728774E-6	DEFECT
// Now actually plot each of the series polygons..	WITHOUT_CLASSIFICATION	0.9999281729437836	WITHOUT_CLASSIFICATION	7.18270562164224E-5	DEFECT
// plot the data...	WITHOUT_CLASSIFICATION	0.9999666444763459	WITHOUT_CLASSIFICATION	3.335552365414566E-5	DEFECT
// draw the polygon series...	WITHOUT_CLASSIFICATION	0.999917344522502	WITHOUT_CLASSIFICATION	8.265547749788204E-5	DEFECT
// Finds our starting angle from the centre for this axis	WITHOUT_CLASSIFICATION	0.9999997766153177	WITHOUT_CLASSIFICATION	2.2338468227036042E-7	DEFECT
// The following angle calc will ensure there isn't a top // vertical axis - this may be useful if you don't want any // given criteria to 'appear' move important than the // others.. //  + (getDirection().getFactor() //        * (cat + 0.5) * 360 / catCount);	WITHOUT_CLASSIFICATION	0.5783525393329251	DEFECT	0.42164746066707504	WITHOUT_CLASSIFICATION
// find the point at the appropriate distance end point // along the axis/angle identified above and add it to the // polygon	WITHOUT_CLASSIFICATION	0.9999976898591537	WITHOUT_CLASSIFICATION	2.3101408462665522E-6	DEFECT
// put an elipse at the point being plotted..	WITHOUT_CLASSIFICATION	0.9999995486734379	WITHOUT_CLASSIFICATION	4.5132656205002987E-7	DEFECT
// Plot the polygon	WITHOUT_CLASSIFICATION	0.9999220845467053	WITHOUT_CLASSIFICATION	7.791545329465478E-5	DEFECT
// set the anchor value for the horizontal axis...	WITHOUT_CLASSIFICATION	0.9999988640596484	WITHOUT_CLASSIFICATION	1.1359403516112316E-6	DEFECT
/* shapeFilled=*/	WITHOUT_CLASSIFICATION	0.9999939641592996	WITHOUT_CLASSIFICATION	6.035840700320505E-6	DEFECT
// an empty dataset should return a null range	WITHOUT_CLASSIFICATION	0.9999999240175969	WITHOUT_CLASSIFICATION	7.598240316677676E-8	DEFECT
// adjust for insets...	WITHOUT_CLASSIFICATION	0.999999853071116	WITHOUT_CLASSIFICATION	1.469288839529468E-7	DEFECT
// send a dataset change event to self...	WITHOUT_CLASSIFICATION	0.999999406626121	WITHOUT_CLASSIFICATION	5.933738790429579E-7	DEFECT
// plot is likely registered as a listener with the existing axis...	WITHOUT_CLASSIFICATION	0.999811216718071	WITHOUT_CLASSIFICATION	1.8878328192894453E-4	DEFECT
// if the plot area is too small, just return...	WITHOUT_CLASSIFICATION	0.9999997776316624	WITHOUT_CLASSIFICATION	2.2236833756438954E-7	DEFECT
// record the plot area...	WITHOUT_CLASSIFICATION	0.9999859111658889	WITHOUT_CLASSIFICATION	1.4088834111140217E-5	DEFECT
// OK	WITHOUT_CLASSIFICATION	0.9999959252826889	WITHOUT_CLASSIFICATION	4.074717311095198E-6	DEFECT
// draw the background	WITHOUT_CLASSIFICATION	0.9999983486366993	WITHOUT_CLASSIFICATION	1.6513633006272737E-6	DEFECT
// plot the data (unless the dataset is null)...	WITHOUT_CLASSIFICATION	0.9999106881195767	WITHOUT_CLASSIFICATION	8.931188042329715E-5	DEFECT
// adjust the drawing area for the plot insets (if any)...	WITHOUT_CLASSIFICATION	0.9999917023896029	WITHOUT_CLASSIFICATION	8.297610397074538E-6	DEFECT
// delegate...	WITHOUT_CLASSIFICATION	0.999987187642393	WITHOUT_CLASSIFICATION	1.2812357606936273E-5	DEFECT
// delegate...	WITHOUT_CLASSIFICATION	0.999987187642393	WITHOUT_CLASSIFICATION	1.2812357606936273E-5	DEFECT
// delegate...	WITHOUT_CLASSIFICATION	0.999987187642393	WITHOUT_CLASSIFICATION	1.2812357606936273E-5	DEFECT
// fake a dataset change event to update axes...	WITHOUT_CLASSIFICATION	0.9999950819751173	WITHOUT_CLASSIFICATION	4.9180248826846555E-6	DEFECT
// fake a dataset change event to update axes...	WITHOUT_CLASSIFICATION	0.9999950819751173	WITHOUT_CLASSIFICATION	4.9180248826846555E-6	DEFECT
// axisIndices can be: // 1.  null; // 2.  non-empty, containing only Integer objects that are unique.	WITHOUT_CLASSIFICATION	0.9999765387326971	WITHOUT_CLASSIFICATION	2.3461267303014847E-5	DEFECT
// reserve some space for the domain axis...	WITHOUT_CLASSIFICATION	0.9999996973781656	WITHOUT_CLASSIFICATION	3.026218344655341E-7	DEFECT
// reserve some space for the range axis...	WITHOUT_CLASSIFICATION	0.9999979900574564	WITHOUT_CLASSIFICATION	2.009942543692725E-6	DEFECT
// draw the plot background and axes...	WITHOUT_CLASSIFICATION	0.9998462501942659	WITHOUT_CLASSIFICATION	1.5374980573412475E-4	DEFECT
// check that a null dataset returns null bounds	WITHOUT_CLASSIFICATION	0.9999998801338524	WITHOUT_CLASSIFICATION	1.198661476370465E-7	DEFECT
// Lastly, fill the web polygon if this is required	WITHOUT_CLASSIFICATION	0.9995562725202307	WITHOUT_CLASSIFICATION	4.4372747976927784E-4	DEFECT
// if series are in rows, then the categories are the column keys	WITHOUT_CLASSIFICATION	0.9999993911988986	WITHOUT_CLASSIFICATION	6.088011014160252E-7	DEFECT
// if series are in columns, then the categories are the row keys	WITHOUT_CLASSIFICATION	0.9999991462523353	WITHOUT_CLASSIFICATION	8.537476646907021E-7	DEFECT
//          negatives = true;	WITHOUT_CLASSIFICATION	0.9999994642824854	WITHOUT_CLASSIFICATION	5.357175144730112E-7	DEFECT
//  value = Math.pow(10,value);	WITHOUT_CLASSIFICATION	0.9999793366149241	WITHOUT_CLASSIFICATION	2.0663385075938443E-5	DEFECT
//  izV = steps*numSteps*(int)((value/minZ)/(maxZlog-minZlog)) + 2;	WITHOUT_CLASSIFICATION	0.9999996632838143	WITHOUT_CLASSIFICATION	3.367161857650264E-7	DEFECT
// super.setSeriesPaint(series, paint);	WITHOUT_CLASSIFICATION	0.9999998919086321	WITHOUT_CLASSIFICATION	1.0809136783347217E-7	DEFECT
/// Squares	WITHOUT_CLASSIFICATION	0.9999996908457582	WITHOUT_CLASSIFICATION	3.0915424177222217E-7	DEFECT
/// Draw N, S, E, W	WITHOUT_CLASSIFICATION	0.9999996317127265	WITHOUT_CLASSIFICATION	3.682872733551076E-7	DEFECT
// no zooming possible	WITHOUT_CLASSIFICATION	0.9999997930331462	WITHOUT_CLASSIFICATION	2.0696685367681143E-7	DEFECT
// clone share data sets => add the clone as listener to the dataset	WITHOUT_CLASSIFICATION	0.999999941977096	WITHOUT_CLASSIFICATION	5.8022903943359554E-8	DEFECT
// only relevant when this is a subplot	WITHOUT_CLASSIFICATION	0.9999519461483838	WITHOUT_CLASSIFICATION	4.805385161614003E-5	DEFECT
// allocate storage for datasets, axes and renderers (all optional)	WITHOUT_CLASSIFICATION	0.999999952055175	WITHOUT_CLASSIFICATION	4.7944825027071E-8	DEFECT
// reserve space for the domain axes...	WITHOUT_CLASSIFICATION	0.9999990118037222	WITHOUT_CLASSIFICATION	9.881962777911998E-7	DEFECT
// reserve space for the range axes...	WITHOUT_CLASSIFICATION	0.9999923519233537	WITHOUT_CLASSIFICATION	7.648076646331716E-6	DEFECT
// the first axis in the list is used for data <--> Java2D	WITHOUT_CLASSIFICATION	0.9999999168490866	WITHOUT_CLASSIFICATION	8.315091338595553E-8	DEFECT
// the first axis in the list is used for data <--> Java2D	WITHOUT_CLASSIFICATION	0.9999999168490866	WITHOUT_CLASSIFICATION	8.315091338595553E-8	DEFECT
// draw domain crosshair if required...	WITHOUT_CLASSIFICATION	0.9999523877929121	WITHOUT_CLASSIFICATION	4.761220708795619E-5	DEFECT
// draw range crosshair if required...	WITHOUT_CLASSIFICATION	0.9998079043950441	WITHOUT_CLASSIFICATION	1.9209560495595782E-4	DEFECT
// add domain axes to lists...	WITHOUT_CLASSIFICATION	0.9999985135641839	WITHOUT_CLASSIFICATION	1.486435816063904E-6	DEFECT
// add range axes to lists...	WITHOUT_CLASSIFICATION	0.9999921392676966	WITHOUT_CLASSIFICATION	7.860732303413978E-6	DEFECT
// draw the top axes	WITHOUT_CLASSIFICATION	0.9999999140803281	WITHOUT_CLASSIFICATION	8.591967190190654E-8	DEFECT
// draw the bottom axes	WITHOUT_CLASSIFICATION	0.9999999619811354	WITHOUT_CLASSIFICATION	3.8018864573462925E-8	DEFECT
// draw the left axes	WITHOUT_CLASSIFICATION	0.9999997875356922	WITHOUT_CLASSIFICATION	2.124643078905775E-7	DEFECT
// draw the right axes	WITHOUT_CLASSIFICATION	0.9999969247644737	WITHOUT_CLASSIFICATION	3.0752355262923946E-6	DEFECT
// draw the range grid lines, if any...	WITHOUT_CLASSIFICATION	0.9999220317463174	WITHOUT_CLASSIFICATION	7.796825368261118E-5	DEFECT
// no renderer, no gridlines...	WITHOUT_CLASSIFICATION	0.9999936852699381	WITHOUT_CLASSIFICATION	6.314730061912175E-6	DEFECT
// no renderer, no gridlines...	WITHOUT_CLASSIFICATION	0.9999936852699381	WITHOUT_CLASSIFICATION	6.314730061912175E-6	DEFECT
// draw the domain grid lines, if any...	WITHOUT_CLASSIFICATION	0.9999882871678966	WITHOUT_CLASSIFICATION	1.1712832103321878E-5	DEFECT
// draw the markers that are associated with a specific dataset...	WITHOUT_CLASSIFICATION	0.9999335736173111	WITHOUT_CLASSIFICATION	6.642638268903174E-5	DEFECT
// now draw annotations and render data items...	WITHOUT_CLASSIFICATION	0.9999190261465497	WITHOUT_CLASSIFICATION	8.097385345030907E-5	DEFECT
// draw background annotations	WITHOUT_CLASSIFICATION	0.9999951062273204	WITHOUT_CLASSIFICATION	4.893772679634209E-6	DEFECT
// render data items...	WITHOUT_CLASSIFICATION	0.9999800293859413	WITHOUT_CLASSIFICATION	1.9970614058666552E-5	DEFECT
// draw foreground annotations	WITHOUT_CLASSIFICATION	0.9999973509199641	WITHOUT_CLASSIFICATION	2.6490800359070777E-6	DEFECT
//  0 | 1 //  --+-- //  2 | 3	WITHOUT_CLASSIFICATION	0.9999864377089422	WITHOUT_CLASSIFICATION	1.3562291057739801E-5	DEFECT
// we can't draw quadrants without a valid x-axis	WITHOUT_CLASSIFICATION	0.9999996276612169	WITHOUT_CLASSIFICATION	3.723387830395241E-7	DEFECT
// we can't draw quadrants without a valid y-axis	WITHOUT_CLASSIFICATION	0.9999992967611256	WITHOUT_CLASSIFICATION	7.032388743102642E-7	DEFECT
// PlotOrientation.VERTICAL	WITHOUT_CLASSIFICATION	0.9999989555550252	WITHOUT_CLASSIFICATION	1.0444449748168398E-6	DEFECT
// can't render anything without axes	WITHOUT_CLASSIFICATION	0.9990171579673222	WITHOUT_CLASSIFICATION	9.82842032677781E-4	DEFECT
// no default renderer available	WITHOUT_CLASSIFICATION	0.9999998503465433	WITHOUT_CLASSIFICATION	1.496534566382352E-7	DEFECT
//render series in reverse order	WITHOUT_CLASSIFICATION	0.9999809855930892	WITHOUT_CLASSIFICATION	1.9014406910747404E-5	DEFECT
//render series in forward order	WITHOUT_CLASSIFICATION	0.9999731201223971	WITHOUT_CLASSIFICATION	2.68798776028187E-5	DEFECT
// use the TextTitle class because it is a concrete subclass	WITHOUT_CLASSIFICATION	0.9999975459437922	WITHOUT_CLASSIFICATION	2.4540562076816963E-6	DEFECT
// set up info collection...	WITHOUT_CLASSIFICATION	0.999999177166589	WITHOUT_CLASSIFICATION	8.228334109975627E-7	DEFECT
// adjust the drawing area for plot insets (if any)...	WITHOUT_CLASSIFICATION	0.9999847718992008	WITHOUT_CLASSIFICATION	1.522810079927431E-5	DEFECT
// try the parent plot	WITHOUT_CLASSIFICATION	0.9999910329917752	WITHOUT_CLASSIFICATION	8.96700822477263E-6	DEFECT
// try the parent plot	WITHOUT_CLASSIFICATION	0.9999910329917752	WITHOUT_CLASSIFICATION	8.96700822477263E-6	DEFECT
// iterate through the datasets that map to the axis and get the union // of the ranges.	WITHOUT_CLASSIFICATION	0.9999994269845653	WITHOUT_CLASSIFICATION	5.730154345402605E-7	DEFECT
// delegate to other method	WITHOUT_CLASSIFICATION	0.9999999576094825	WITHOUT_CLASSIFICATION	4.239051758785541E-8	DEFECT
// delegate to other method	WITHOUT_CLASSIFICATION	0.9999999576094825	WITHOUT_CLASSIFICATION	4.239051758785541E-8	DEFECT
// perform the zoom on each range axis	WITHOUT_CLASSIFICATION	0.9999995395447037	WITHOUT_CLASSIFICATION	4.6045529636904645E-7	DEFECT
// get the relevant source coordinate given the plot orientation	WITHOUT_CLASSIFICATION	0.9999928511262979	WITHOUT_CLASSIFICATION	7.148873702137465E-6	DEFECT
// get the relevant source coordinate given the plot orientation	WITHOUT_CLASSIFICATION	0.9999928511262979	WITHOUT_CLASSIFICATION	7.148873702137465E-6	DEFECT
// draw the plot background and axes...	WITHOUT_CLASSIFICATION	0.9998462501942659	WITHOUT_CLASSIFICATION	1.5374980573412475E-4	DEFECT
// the datasets are not cloned, but listeners need to be added...	WITHOUT_CLASSIFICATION	0.9999980699777407	WITHOUT_CLASSIFICATION	1.9300222593866368E-6	DEFECT
// if the event was caused by a change to series visibility, then // the axis ranges might need updating...	WITHOUT_CLASSIFICATION	0.9999911079784324	WITHOUT_CLASSIFICATION	8.892021567658831E-6	DEFECT
// check that the renderer has a corresponding dataset (it doesn't // matter if the dataset is null)	WITHOUT_CLASSIFICATION	0.9985282787088356	WITHOUT_CLASSIFICATION	0.0014717212911643485	DEFECT
// check that the renderer has a corresponding dataset (it doesn't // matter if the dataset is null)	WITHOUT_CLASSIFICATION	0.9985282787088356	WITHOUT_CLASSIFICATION	0.0014717212911643485	DEFECT
// set the anchor value for the vertical axis...	WITHOUT_CLASSIFICATION	0.9999986656971602	WITHOUT_CLASSIFICATION	1.3343028398477166E-6	DEFECT
// grab the plot's annotations	WITHOUT_CLASSIFICATION	0.999999825529649	WITHOUT_CLASSIFICATION	1.7447035115906927E-7	DEFECT
// is it a domain axis?	WITHOUT_CLASSIFICATION	0.9999994244568748	WITHOUT_CLASSIFICATION	5.755431250786491E-7	DEFECT
// or is it a range axis?	WITHOUT_CLASSIFICATION	0.999997013314991	WITHOUT_CLASSIFICATION	2.986685008995258E-6	DEFECT
// if the axes use a linear scale, you can uncomment the code below and // switch to the alternative transX/transY calculation inside the loop // that follows - it is a little bit faster then. // // int xx = (int) dataArea.getMinX(); // int ww = (int) dataArea.getWidth(); // int yy = (int) dataArea.getMaxY(); // int hh = (int) dataArea.getHeight(); // double domainMin = this.domainAxis.getLowerBound(); // double domainLength = this.domainAxis.getUpperBound() - domainMin; // double rangeMin = this.rangeAxis.getLowerBound(); // double rangeLength = this.rangeAxis.getUpperBound() - rangeMin;	WITHOUT_CLASSIFICATION	0.9999998904792616	WITHOUT_CLASSIFICATION	1.0952073845807561E-7	DEFECT
// register the plot as a listener with its axes, datasets, and // renderers...	WITHOUT_CLASSIFICATION	0.9999922443689144	WITHOUT_CLASSIFICATION	7.755631085643764E-6	DEFECT
// perform the zoom on each domain axis	WITHOUT_CLASSIFICATION	0.9999999346351951	WITHOUT_CLASSIFICATION	6.536480489660186E-8	DEFECT
// lineVisible	WITHOUT_CLASSIFICATION	0.9999994235454126	WITHOUT_CLASSIFICATION	5.764545874648287E-7	DEFECT
// adjust for insets...	WITHOUT_CLASSIFICATION	0.999999853071116	WITHOUT_CLASSIFICATION	1.469288839529468E-7	DEFECT
// set the new dataset, and register the chart as a change listener...	WITHOUT_CLASSIFICATION	0.9999999645272238	WITHOUT_CLASSIFICATION	3.547277625999833E-8	DEFECT
// send a dataset change event to self...	WITHOUT_CLASSIFICATION	0.999999406626121	WITHOUT_CLASSIFICATION	5.933738790429579E-7	DEFECT
// draw the background	WITHOUT_CLASSIFICATION	0.9999983486366993	WITHOUT_CLASSIFICATION	1.6513633006272737E-6	DEFECT
// intentionally blank	WITHOUT_CLASSIFICATION	0.9999974835945652	WITHOUT_CLASSIFICATION	2.516405434857067E-6	DEFECT
// get the source coordinate - this plot has always a VERTICAL // orientation	WITHOUT_CLASSIFICATION	0.9999179266095366	WITHOUT_CLASSIFICATION	8.207339046341078E-5	DEFECT
// images considered equal only if they're the SAME object // TODO: is there a way to do a better test?	WITHOUT_CLASSIFICATION	0.9993490202215164	WITHOUT_CLASSIFICATION	6.509797784837059E-4	DEFECT
//int transX = (int) (xx + ww * (x - domainMin) / domainLength); //int transY = (int) (yy - hh * (y - rangeMin) / rangeLength);	WITHOUT_CLASSIFICATION	0.9999981994545705	WITHOUT_CLASSIFICATION	1.8005454295381455E-6	DEFECT
// if there is an existing dataset, remove the plot from the list // of change listeners...	WITHOUT_CLASSIFICATION	0.9999998520705945	WITHOUT_CLASSIFICATION	1.479294053952066E-7	DEFECT
// plot is registered as a listener with the existing axis...	WITHOUT_CLASSIFICATION	0.9999262046991251	WITHOUT_CLASSIFICATION	7.379530087484874E-5	DEFECT
// adjust for padding...	WITHOUT_CLASSIFICATION	0.9999983762651106	WITHOUT_CLASSIFICATION	1.6237348894114137E-6	DEFECT
// already calculated // already calculated	WITHOUT_CLASSIFICATION	0.9999999520671433	WITHOUT_CLASSIFICATION	4.793285669251414E-8	DEFECT
// draw range indicators...	WITHOUT_CLASSIFICATION	0.9999918277276614	WITHOUT_CLASSIFICATION	8.172272338711438E-6	DEFECT
// draw start of normal range	WITHOUT_CLASSIFICATION	0.9999999699559637	WITHOUT_CLASSIFICATION	3.004403628929934E-8	DEFECT
// draw start of warning range	WITHOUT_CLASSIFICATION	0.9999999789275177	WITHOUT_CLASSIFICATION	2.1072482285326837E-8	DEFECT
// draw start of critical range	WITHOUT_CLASSIFICATION	0.9999995108867332	WITHOUT_CLASSIFICATION	4.891132668397223E-7	DEFECT
// draw the axis...	WITHOUT_CLASSIFICATION	0.9999957584253869	WITHOUT_CLASSIFICATION	4.241574613096449E-6	DEFECT
//cursor = midX - COLUMN_RADIUS - AXIS_GAP;	WITHOUT_CLASSIFICATION	0.9999939246654783	WITHOUT_CLASSIFICATION	6.0753345217349445E-6	DEFECT
// draw text value on screen	WITHOUT_CLASSIFICATION	0.9999992132933907	WITHOUT_CLASSIFICATION	7.86706609293864E-7	DEFECT
//  draw units indicator	WITHOUT_CLASSIFICATION	0.9999987621567337	WITHOUT_CLASSIFICATION	1.2378432663495005E-6	DEFECT
// draw thermometer outline	WITHOUT_CLASSIFICATION	0.9999997686913054	WITHOUT_CLASSIFICATION	2.3130869474190533E-7	DEFECT
// no domain axis to zoom	WITHOUT_CLASSIFICATION	0.9999999295311732	WITHOUT_CLASSIFICATION	7.046882675520553E-8	DEFECT
// work out the anchor point	WITHOUT_CLASSIFICATION	0.9999705523146684	WITHOUT_CLASSIFICATION	2.9447685331681648E-5	DEFECT
// calculate the bounds of the template value	WITHOUT_CLASSIFICATION	0.9999996958002307	WITHOUT_CLASSIFICATION	3.0419976926466137E-7	DEFECT
// align this rectangle to the frameAnchor	WITHOUT_CLASSIFICATION	0.9999989831517763	WITHOUT_CLASSIFICATION	1.0168482237421278E-6	DEFECT
// add the insets	WITHOUT_CLASSIFICATION	0.9999998185020901	WITHOUT_CLASSIFICATION	1.8149791002759852E-7	DEFECT
// draw the border	WITHOUT_CLASSIFICATION	0.9999997519891044	WITHOUT_CLASSIFICATION	2.480108956084501E-7	DEFECT
// now find the text anchor point	WITHOUT_CLASSIFICATION	0.9999992960770802	WITHOUT_CLASSIFICATION	7.039229199290489E-7	DEFECT
/* lineVisible= */	WITHOUT_CLASSIFICATION	0.9999985928944706	WITHOUT_CLASSIFICATION	1.4071055294614331E-6	DEFECT
// send a dataset change event to self...	WITHOUT_CLASSIFICATION	0.999999406626121	WITHOUT_CLASSIFICATION	5.933738790429579E-7	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9999955225021957	WITHOUT_CLASSIFICATION	4.4774978043964495E-6	DEFECT
// return the override, if there is one...	WITHOUT_CLASSIFICATION	0.9999980814852791	WITHOUT_CLASSIFICATION	1.9185147208106884E-6	DEFECT
// return the override, if there is one...	WITHOUT_CLASSIFICATION	0.9999980814852791	WITHOUT_CLASSIFICATION	1.9185147208106884E-6	DEFECT
// otherwise look up the paint list	WITHOUT_CLASSIFICATION	0.9999999569822965	WITHOUT_CLASSIFICATION	4.301770345614012E-8	DEFECT
// work out the anchor point	WITHOUT_CLASSIFICATION	0.9999705523146684	WITHOUT_CLASSIFICATION	2.9447685331681648E-5	DEFECT
// urlText	WITHOUT_CLASSIFICATION	0.9999982530032427	WITHOUT_CLASSIFICATION	1.7469967572448547E-6	DEFECT
// first, expand the viewing area into a drawing frame	WITHOUT_CLASSIFICATION	0.9999993293185035	WITHOUT_CLASSIFICATION	6.706814963788576E-7	DEFECT
// draw the background if there is one...	WITHOUT_CLASSIFICATION	0.9999519399416019	WITHOUT_CLASSIFICATION	4.8060058398098624E-5	DEFECT
// draw the pointers	WITHOUT_CLASSIFICATION	0.9999997804441555	WITHOUT_CLASSIFICATION	2.1955584435281453E-7	DEFECT
// draw the cap if there is one...	WITHOUT_CLASSIFICATION	0.9999765727099279	WITHOUT_CLASSIFICATION	2.342729007212525E-5	DEFECT
// now do the minor tick marks	WITHOUT_CLASSIFICATION	0.9999999626110961	WITHOUT_CLASSIFICATION	3.738890378634855E-8	DEFECT
// lowerBound	WITHOUT_CLASSIFICATION	0.9999589962174126	WITHOUT_CLASSIFICATION	4.1003782587537105E-5	DEFECT
// upperBound	WITHOUT_CLASSIFICATION	0.9999846042190097	WITHOUT_CLASSIFICATION	1.5395780990262737E-5	DEFECT
// startAngle	WITHOUT_CLASSIFICATION	0.9999994489136231	WITHOUT_CLASSIFICATION	5.510863768147779E-7	DEFECT
// extent	WITHOUT_CLASSIFICATION	0.9999908967099197	WITHOUT_CLASSIFICATION	9.103290080330083E-6	DEFECT
// tickRadius	WITHOUT_CLASSIFICATION	0.9999951390369005	WITHOUT_CLASSIFICATION	4.860963099498316E-6	DEFECT
// we don't clone the listeners	WITHOUT_CLASSIFICATION	0.9999999387210166	WITHOUT_CLASSIFICATION	6.127898339683289E-8	DEFECT
// use item paint for fills by default	WITHOUT_CLASSIFICATION	0.9999998643999072	WITHOUT_CLASSIFICATION	1.3560009275556775E-7	DEFECT
// draw the outline of the filled polygon	WITHOUT_CLASSIFICATION	0.9999992250280771	WITHOUT_CLASSIFICATION	7.749719228157557E-7	DEFECT
// just the lines, no filling	WITHOUT_CLASSIFICATION	0.9999999959481376	WITHOUT_CLASSIFICATION	4.051862466565847E-9	DEFECT
// draw the item shapes	WITHOUT_CLASSIFICATION	0.9999998561534903	WITHOUT_CLASSIFICATION	1.4384650964356179E-7	DEFECT
// SERIES VISIBLE (not yet respected by all renderers)	WITHOUT_CLASSIFICATION	0.9999050662432991	WITHOUT_CLASSIFICATION	9.493375670090344E-5	DEFECT
// SERIES VISIBLE IN LEGEND (not yet respected by all renderers)	WITHOUT_CLASSIFICATION	0.9999055486859818	WITHOUT_CLASSIFICATION	9.445131401821938E-5	DEFECT
// PAINT	WITHOUT_CLASSIFICATION	0.9999936428427052	WITHOUT_CLASSIFICATION	6.357157294860465E-6	DEFECT
//// FILL PAINT //////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999762263401603	WITHOUT_CLASSIFICATION	2.3773659839752608E-5	DEFECT
// otherwise look up the paint table	WITHOUT_CLASSIFICATION	0.9999999799461856	WITHOUT_CLASSIFICATION	2.005381441121944E-8	DEFECT
// return the override, if there is one...	WITHOUT_CLASSIFICATION	0.9999980814852791	WITHOUT_CLASSIFICATION	1.9185147208106884E-6	DEFECT
// return the override, if there is one...	WITHOUT_CLASSIFICATION	0.9999980814852791	WITHOUT_CLASSIFICATION	1.9185147208106884E-6	DEFECT
// return the override, if there is one...	WITHOUT_CLASSIFICATION	0.9999980814852791	WITHOUT_CLASSIFICATION	1.9185147208106884E-6	DEFECT
// return the override, if there is one...	WITHOUT_CLASSIFICATION	0.9999980814852791	WITHOUT_CLASSIFICATION	1.9185147208106884E-6	DEFECT
// return the override, if there is one...	WITHOUT_CLASSIFICATION	0.9999980814852791	WITHOUT_CLASSIFICATION	1.9185147208106884E-6	DEFECT
// return the override, if there is one...	WITHOUT_CLASSIFICATION	0.9999980814852791	WITHOUT_CLASSIFICATION	1.9185147208106884E-6	DEFECT
// we create an event with a special flag set...the purpose of // this is to communicate to the plot (the default receiver of // the event) that series visibility has changed so the axis // ranges might need updating...	WITHOUT_CLASSIFICATION	0.9999733199469963	WITHOUT_CLASSIFICATION	2.668005300371262E-5	DEFECT
// otherwise look up the paint table	WITHOUT_CLASSIFICATION	0.9999999799461856	WITHOUT_CLASSIFICATION	2.005381441121944E-8	DEFECT
// otherwise look up the paint table	WITHOUT_CLASSIFICATION	0.9999999799461856	WITHOUT_CLASSIFICATION	2.005381441121944E-8	DEFECT
// OUTLINE PAINT //////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999987659421318	WITHOUT_CLASSIFICATION	1.2340578682985527E-6	DEFECT
// STROKE	WITHOUT_CLASSIFICATION	0.9999973929955459	WITHOUT_CLASSIFICATION	2.6070044539984906E-6	DEFECT
// OUTLINE STROKE	WITHOUT_CLASSIFICATION	0.9999996381073741	WITHOUT_CLASSIFICATION	3.618926259409675E-7	DEFECT
// otherwise look up the stroke table	WITHOUT_CLASSIFICATION	0.9999993061938083	WITHOUT_CLASSIFICATION	6.938061917325211E-7	DEFECT
// SHAPE	WITHOUT_CLASSIFICATION	0.9999864481909325	WITHOUT_CLASSIFICATION	1.3551809067601868E-5	DEFECT
// otherwise look up the shape list	WITHOUT_CLASSIFICATION	0.9999998887638936	WITHOUT_CLASSIFICATION	1.1123610648100246E-7	DEFECT
// ITEM LABEL VISIBILITY...	WITHOUT_CLASSIFICATION	0.9999391995899711	WITHOUT_CLASSIFICATION	6.080041002873376E-5	DEFECT
// otherwise look up the boolean table	WITHOUT_CLASSIFICATION	0.9999999663335994	WITHOUT_CLASSIFICATION	3.366640050391109E-8	DEFECT
// this should have been defined as a boolean primitive, because // allowing null values is a nuisance...but it is part of the final // API now, so we'll have to support it.	WITHOUT_CLASSIFICATION	0.9999956900465449	WITHOUT_CLASSIFICATION	4.309953455118714E-6	DEFECT
//// ITEM LABEL FONT //////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999931884408197	WITHOUT_CLASSIFICATION	6.811559180244226E-6	DEFECT
//// ITEM LABEL PAINT  ////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999869855713901	WITHOUT_CLASSIFICATION	1.301442860992164E-5	DEFECT
// POSITIVE ITEM LABEL POSITION...	WITHOUT_CLASSIFICATION	0.9999145761209597	WITHOUT_CLASSIFICATION	8.542387904030684E-5	DEFECT
// otherwise look up the position table	WITHOUT_CLASSIFICATION	0.9999996920476717	WITHOUT_CLASSIFICATION	3.079523282979855E-7	DEFECT
// NEGATIVE ITEM LABEL POSITION...	WITHOUT_CLASSIFICATION	0.9999599131350231	WITHOUT_CLASSIFICATION	4.008686497681189E-5	DEFECT
// otherwise look up the position list	WITHOUT_CLASSIFICATION	0.999999327700619	WITHOUT_CLASSIFICATION	6.722993810358823E-7	DEFECT
// the commented out code would be better, but only if // RendererChangeEvent is immutable, which it isn't.  See if there is // a way to fix this...	WITHOUT_CLASSIFICATION	0.949935197735743	WITHOUT_CLASSIFICATION	0.05006480226425693	DEFECT
// 'paint' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999986884123401	WITHOUT_CLASSIFICATION	1.311587659967311E-6	DEFECT
// 'basePaint' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999994190314995	WITHOUT_CLASSIFICATION	5.809685005258356E-7	DEFECT
// 'outlinePaint' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999976555139711	WITHOUT_CLASSIFICATION	2.3444860288233684E-6	DEFECT
// 'baseOutlinePaint' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999995786230342	WITHOUT_CLASSIFICATION	4.213769657583035E-7	DEFECT
// 'stroke' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999654689626734	WITHOUT_CLASSIFICATION	3.4531037326656325E-5	DEFECT
// 'baseStroke' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.999925991420696	WITHOUT_CLASSIFICATION	7.400857930400348E-5	DEFECT
// we create an event with a special flag set...the purpose of // this is to communicate to the plot (the default receiver of // the event) that series visibility has changed so the axis // ranges might need updating...	WITHOUT_CLASSIFICATION	0.9999733199469963	WITHOUT_CLASSIFICATION	2.668005300371262E-5	DEFECT
// 'basePaint' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999994190314995	WITHOUT_CLASSIFICATION	5.809685005258356E-7	DEFECT
// shapeList // baseShape	WITHOUT_CLASSIFICATION	0.9999999742200787	WITHOUT_CLASSIFICATION	2.5779921273539577E-8	DEFECT
// 'outlineStroke' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9997815319952649	WITHOUT_CLASSIFICATION	2.184680047350843E-4	DEFECT
// 'baseOutlineStroke' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.999960727551101	WITHOUT_CLASSIFICATION	3.927244889896561E-5	DEFECT
// 'itemLabelsVisible' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999983161002362	WITHOUT_CLASSIFICATION	1.6838997639101701E-6	DEFECT
// 'itemLabelFont' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999984319649587	WITHOUT_CLASSIFICATION	1.5680350413388562E-6	DEFECT
// 'baseItemLabelFont' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999992639783271	WITHOUT_CLASSIFICATION	7.360216728473637E-7	DEFECT
// 'itemLabelPaint' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999994777829692	WITHOUT_CLASSIFICATION	5.222170307450747E-7	DEFECT
// 'baseItemLabelPaint' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999997548761163	WITHOUT_CLASSIFICATION	2.4512388379987276E-7	DEFECT
// 'postiveItemLabelAnchor' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999996145283733	WITHOUT_CLASSIFICATION	3.8547162672413264E-7	DEFECT
// 'baseItemLabelAnchor' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999991233768419	WITHOUT_CLASSIFICATION	8.766231581158488E-7	DEFECT
// 'negativeItemLabelAnchor' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999983105200159	WITHOUT_CLASSIFICATION	1.6894799840697505E-6	DEFECT
// 'baseNegativeItemLabelAnchor' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999995930286947	WITHOUT_CLASSIFICATION	4.069713052168417E-7	DEFECT
// listeners are not restored automatically, but storage must be // provided...	WITHOUT_CLASSIFICATION	0.9999737612813443	WITHOUT_CLASSIFICATION	2.6238718655669555E-5	DEFECT
// === DEPRECATED CODE ===	WITHOUT_CLASSIFICATION	0.9999995181680887	WITHOUT_CLASSIFICATION	4.818319112725654E-7	DEFECT
// The following alternative is only supported in JDK 1.4 - we support // JDK 1.3.1 onwards // setItemLabelsVisible(Boolean.valueOf(visible));	WITHOUT_CLASSIFICATION	0.9999159397043674	WITHOUT_CLASSIFICATION	8.406029563267443E-5	DEFECT
//System.err.print(" creating new outlier list ");	WITHOUT_CLASSIFICATION	0.9999999488174444	WITHOUT_CLASSIFICATION	5.1182555676390956E-8	DEFECT
//// TOOL TIP GENERATOR ///////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999864562978492	WITHOUT_CLASSIFICATION	1.3543702150918138E-5	DEFECT
//// URL GENERATOR ////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999978583916981	WITHOUT_CLASSIFICATION	2.1416083018351744E-6	DEFECT
// handle value outside bounds...	WITHOUT_CLASSIFICATION	0.9999993247514075	WITHOUT_CLASSIFICATION	6.752485924674755E-7	DEFECT
// handle special case where value is less that item zero	WITHOUT_CLASSIFICATION	0.9999996349775852	WITHOUT_CLASSIFICATION	3.6502241486349704E-7	DEFECT
// special case where the lowest x-value is >= xLow	WITHOUT_CLASSIFICATION	0.9999992193136621	WITHOUT_CLASSIFICATION	7.806863377679138E-7	DEFECT
// special case where the highest x-value is < xLow	WITHOUT_CLASSIFICATION	0.999997623765688	WITHOUT_CLASSIFICATION	2.3762343120810976E-6	DEFECT
// skip any items that don't need including...	WITHOUT_CLASSIFICATION	0.9999396326746557	WITHOUT_CLASSIFICATION	6.0367325344229665E-5	DEFECT
// skip any items that don't need including...	WITHOUT_CLASSIFICATION	0.9999396326746557	WITHOUT_CLASSIFICATION	6.0367325344229665E-5	DEFECT
// assign a color for each unique value	WITHOUT_CLASSIFICATION	0.9999998909810295	WITHOUT_CLASSIFICATION	1.0901897048006593E-7	DEFECT
// assign a color for each unique value	WITHOUT_CLASSIFICATION	0.9999998909810295	WITHOUT_CLASSIFICATION	1.0901897048006593E-7	DEFECT
// in this case, every color has a unique value	WITHOUT_CLASSIFICATION	0.9999502075494776	WITHOUT_CLASSIFICATION	4.979245052226895E-5	DEFECT
// in this case, every color has a range of values	WITHOUT_CLASSIFICATION	0.9999820763335882	WITHOUT_CLASSIFICATION	1.7923666411829475E-5	DEFECT
// end class wafermaprenderer	WITHOUT_CLASSIFICATION	0.9999947547297722	WITHOUT_CLASSIFICATION	5.245270227815919E-6	DEFECT
// if there is no plot, there is no dataset to access...	WITHOUT_CLASSIFICATION	0.999993772576076	WITHOUT_CLASSIFICATION	6.227423923894967E-6	DEFECT
// we don't know anything about the ordering of the x-values, // but we can still skip any initial values that fall outside the // range...	WITHOUT_CLASSIFICATION	0.9999286101820147	WITHOUT_CLASSIFICATION	7.13898179852632E-5	DEFECT
// when the x-values are descending, the upper bound is found by // comparing against xLow	WITHOUT_CLASSIFICATION	0.9999568467375656	WITHOUT_CLASSIFICATION	4.315326243444108E-5	DEFECT
// more values than paints so map // multiple values to the same color	WITHOUT_CLASSIFICATION	0.999999692616825	WITHOUT_CLASSIFICATION	3.073831750777174E-7	DEFECT
// end foreach map entry // end else	WITHOUT_CLASSIFICATION	0.9999990084563813	WITHOUT_CLASSIFICATION	9.91543618646769E-7	DEFECT
// get the previous point and the next point so we can calculate a // "hot spot" for the area (used by the chart entity)...	WITHOUT_CLASSIFICATION	0.9999997095795383	WITHOUT_CLASSIFICATION	2.9042046157722834E-7	DEFECT
// FIXME: calculate xxLeft and xxRight	WITHOUT_CLASSIFICATION	0.7863908982358624	DEFECT	0.2136091017641376	WITHOUT_CLASSIFICATION
// handle positive value	WITHOUT_CLASSIFICATION	0.999999961908288	WITHOUT_CLASSIFICATION	3.809171194953694E-8	DEFECT
// LEFT POLYGON	WITHOUT_CLASSIFICATION	0.9999990896755366	WITHOUT_CLASSIFICATION	9.103244634419692E-7	DEFECT
// LEFT POLYGON	WITHOUT_CLASSIFICATION	0.9999990896755366	WITHOUT_CLASSIFICATION	9.103244634419692E-7	DEFECT
// RIGHT POLYGON	WITHOUT_CLASSIFICATION	0.9999894157315298	WITHOUT_CLASSIFICATION	1.0584268470239533E-5	DEFECT
// RIGHT POLYGON	WITHOUT_CLASSIFICATION	0.9999894157315298	WITHOUT_CLASSIFICATION	1.0584268470239533E-5	DEFECT
// handle negative value	WITHOUT_CLASSIFICATION	0.9999999439382032	WITHOUT_CLASSIFICATION	5.60617968711807E-8	DEFECT
// calculate the bar width	WITHOUT_CLASSIFICATION	0.9999979748607623	WITHOUT_CLASSIFICATION	2.0251392377710886E-6	DEFECT
// '+' because v is negative	WITHOUT_CLASSIFICATION	0.9999997802105655	WITHOUT_CLASSIFICATION	2.1978943451815618E-7	DEFECT
// handle rendering separately for the two plot orientations...	WITHOUT_CLASSIFICATION	0.9999869178810878	WITHOUT_CLASSIFICATION	1.3082118912089271E-5	DEFECT
// draw the blocks	WITHOUT_CLASSIFICATION	0.999999304049174	WITHOUT_CLASSIFICATION	6.959508260197434E-7	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9999994668407179	WITHOUT_CLASSIFICATION	5.331592820674533E-7	DEFECT
// SHAPES VISIBLE	WITHOUT_CLASSIFICATION	0.9999810246883253	WITHOUT_CLASSIFICATION	1.897531167468567E-5	DEFECT
// SHAPES FILLED	WITHOUT_CLASSIFICATION	0.9999218148929939	WITHOUT_CLASSIFICATION	7.818510700613556E-5	DEFECT
// otherwise look up the paint table	WITHOUT_CLASSIFICATION	0.9999999799461856	WITHOUT_CLASSIFICATION	2.005381441121944E-8	DEFECT
// a list to store the series index and bar region, so we can draw // all the labels at the end...	WITHOUT_CLASSIFICATION	0.9999902444775742	WITHOUT_CLASSIFICATION	9.75552242581029E-6	DEFECT
// draw the blocks	WITHOUT_CLASSIFICATION	0.999999304049174	WITHOUT_CLASSIFICATION	6.959508260197434E-7	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9999994668407179	WITHOUT_CLASSIFICATION	5.331592820674533E-7	DEFECT
// LINES VISIBLE	WITHOUT_CLASSIFICATION	0.9999892447804413	WITHOUT_CLASSIFICATION	1.07552195587748E-5	DEFECT
// preserves old behaviour	WITHOUT_CLASSIFICATION	0.9999996307240665	WITHOUT_CLASSIFICATION	3.692759335898921E-7	DEFECT
// contained titles	WITHOUT_CLASSIFICATION	0.9999995223192623	WITHOUT_CLASSIFICATION	4.776807377183943E-7	DEFECT
// SHAPES FILLED	WITHOUT_CLASSIFICATION	0.9999218148929939	WITHOUT_CLASSIFICATION	7.818510700613556E-5	DEFECT
// return the overall setting, if there is one...	WITHOUT_CLASSIFICATION	0.9999997314690883	WITHOUT_CLASSIFICATION	2.685309117607736E-7	DEFECT
// delegate	WITHOUT_CLASSIFICATION	0.9999992050750921	WITHOUT_CLASSIFICATION	7.949249079689808E-7	DEFECT
// do nothing if item is not visible	WITHOUT_CLASSIFICATION	0.9999895885803238	WITHOUT_CLASSIFICATION	1.0411419676251798E-5	DEFECT
// do nothing if item is not visible	WITHOUT_CLASSIFICATION	0.9999895885803238	WITHOUT_CLASSIFICATION	1.0411419676251798E-5	DEFECT
// do nothing if both the line and shape are not visible	WITHOUT_CLASSIFICATION	0.9999993913307714	WITHOUT_CLASSIFICATION	6.086692286466835E-7	DEFECT
// nothing is drawn for null...	WITHOUT_CLASSIFICATION	0.9997859433474016	WITHOUT_CLASSIFICATION	2.1405665259835452E-4	DEFECT
// current data point...	WITHOUT_CLASSIFICATION	0.9998921698130596	WITHOUT_CLASSIFICATION	1.078301869403892E-4	DEFECT
// current data point...	WITHOUT_CLASSIFICATION	0.9998921698130596	WITHOUT_CLASSIFICATION	1.078301869403892E-4	DEFECT
// previous data point...	WITHOUT_CLASSIFICATION	0.9999965474867919	WITHOUT_CLASSIFICATION	3.4525132081407375E-6	DEFECT
// draw the item label if there is one...	WITHOUT_CLASSIFICATION	0.9999930235229004	WITHOUT_CLASSIFICATION	6.976477099506655E-6	DEFECT
// submit the current data point as a crosshair candidate	WITHOUT_CLASSIFICATION	0.999996649487863	WITHOUT_CLASSIFICATION	3.350512136913302E-6	DEFECT
// set the default item label positions	WITHOUT_CLASSIFICATION	0.9999999858379411	WITHOUT_CLASSIFICATION	1.4162058910177988E-8	DEFECT
// fill background...	WITHOUT_CLASSIFICATION	0.999857045285386	WITHOUT_CLASSIFICATION	1.429547146139846E-4	DEFECT
// highlight the background corners...	WITHOUT_CLASSIFICATION	0.9997963011875084	WITHOUT_CLASSIFICATION	2.0369881249153815E-4	DEFECT
// draw background image, if there is one...	WITHOUT_CLASSIFICATION	0.9999912133750767	WITHOUT_CLASSIFICATION	8.7866249233802E-6	DEFECT
// both axes	WITHOUT_CLASSIFICATION	0.9999999552187651	WITHOUT_CLASSIFICATION	4.478123484323296E-8	DEFECT
// === DEPRECATED CODE ===	WITHOUT_CLASSIFICATION	0.9999995181680887	WITHOUT_CLASSIFICATION	4.818319112725654E-7	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9999994668407179	WITHOUT_CLASSIFICATION	5.331592820674533E-7	DEFECT
// cases 5, 6, 7 and 8	WITHOUT_CLASSIFICATION	0.9999921190525619	WITHOUT_CLASSIFICATION	7.88094743804699E-6	DEFECT
// put an outline around the data area...	WITHOUT_CLASSIFICATION	0.9999789144696689	WITHOUT_CLASSIFICATION	2.108553033105071E-5	DEFECT
// check the value we are plotting...	WITHOUT_CLASSIFICATION	0.9999895722118779	WITHOUT_CLASSIFICATION	1.0427788122119343E-5	DEFECT
// the bar is not visible	WITHOUT_CLASSIFICATION	0.9999556116687701	WITHOUT_CLASSIFICATION	4.438833122986809E-5	DEFECT
// draw the bar...	WITHOUT_CLASSIFICATION	0.9999835878572156	WITHOUT_CLASSIFICATION	1.6412142784338916E-5	DEFECT
// ITEM LABEL GENERATOR	WITHOUT_CLASSIFICATION	0.9999935856259347	WITHOUT_CLASSIFICATION	6.414374065247617E-6	DEFECT
// return the generator for ALL series, if there is one...	WITHOUT_CLASSIFICATION	0.9999937148183518	WITHOUT_CLASSIFICATION	6.28518164825397E-6	DEFECT
// return the generator for ALL series, if there is one...	WITHOUT_CLASSIFICATION	0.9999937148183518	WITHOUT_CLASSIFICATION	6.28518164825397E-6	DEFECT
// otherwise look up the generator table	WITHOUT_CLASSIFICATION	0.999999954690885	WITHOUT_CLASSIFICATION	4.530911507672241E-8	DEFECT
// otherwise look up the generator table	WITHOUT_CLASSIFICATION	0.999999954690885	WITHOUT_CLASSIFICATION	4.530911507672241E-8	DEFECT
// TOOL TIP GENERATOR	WITHOUT_CLASSIFICATION	0.9999850651858317	WITHOUT_CLASSIFICATION	1.4934814168335474E-5	DEFECT
// URL GENERATOR	WITHOUT_CLASSIFICATION	0.9999975170231041	WITHOUT_CLASSIFICATION	2.4829768958554765E-6	DEFECT
// clip left and right bounds to data area	WITHOUT_CLASSIFICATION	0.9999907251965197	WITHOUT_CLASSIFICATION	9.274803480312802E-6	DEFECT
// clip top and bottom bounds to data area	WITHOUT_CLASSIFICATION	0.9999992684871248	WITHOUT_CLASSIFICATION	7.315128752111344E-7	DEFECT
// now draw the outlines, if visible...	WITHOUT_CLASSIFICATION	0.9999998016660085	WITHOUT_CLASSIFICATION	1.9833399137470498E-7	DEFECT
// PlotOrientation.HORIZONTAL	WITHOUT_CLASSIFICATION	0.999999168461065	WITHOUT_CLASSIFICATION	8.315389349878581E-7	DEFECT
// check that a legend item needs to be displayed...	WITHOUT_CLASSIFICATION	0.9999949335936409	WITHOUT_CLASSIFICATION	5.066406359209926E-6	DEFECT
// defensive check	WITHOUT_CLASSIFICATION	0.9999998327247329	WITHOUT_CLASSIFICATION	1.6727526718517888E-7	DEFECT
// BAR Y	WITHOUT_CLASSIFICATION	0.9999511338317209	WITHOUT_CLASSIFICATION	4.886616827904772E-5	DEFECT
// BAR X	WITHOUT_CLASSIFICATION	0.9997795804497506	WITHOUT_CLASSIFICATION	2.204195502495075E-4	DEFECT
// cases 1, 2, 3 and 4	WITHOUT_CLASSIFICATION	0.9999974781685427	WITHOUT_CLASSIFICATION	2.521831457282383E-6	DEFECT
// you can add a null list - it would have been better if this // required EMPTY_LIST	WITHOUT_CLASSIFICATION	0.9997559361915201	WITHOUT_CLASSIFICATION	2.4406380847999558E-4	DEFECT
// BAR Y	WITHOUT_CLASSIFICATION	0.9999511338317209	WITHOUT_CLASSIFICATION	4.886616827904772E-5	DEFECT
// BAR X	WITHOUT_CLASSIFICATION	0.9997795804497506	WITHOUT_CLASSIFICATION	2.204195502495075E-4	DEFECT
// cases 1, 2, 3 and 4	WITHOUT_CLASSIFICATION	0.9999974781685427	WITHOUT_CLASSIFICATION	2.521831457282383E-6	DEFECT
// let the superclass handle it...	WITHOUT_CLASSIFICATION	0.9999759362826404	WITHOUT_CLASSIFICATION	2.406371735969964E-5	DEFECT
// bar is not visible	WITHOUT_CLASSIFICATION	0.9999848089935964	WITHOUT_CLASSIFICATION	1.5191006403549358E-5	DEFECT
// bar is not visible	WITHOUT_CLASSIFICATION	0.9999848089935964	WITHOUT_CLASSIFICATION	1.5191006403549358E-5	DEFECT
// cases 5, 6, 7 and 8	WITHOUT_CLASSIFICATION	0.9999921190525619	WITHOUT_CLASSIFICATION	7.88094743804699E-6	DEFECT
// cases 5, 6, 7 and 8	WITHOUT_CLASSIFICATION	0.9999921190525619	WITHOUT_CLASSIFICATION	7.88094743804699E-6	DEFECT
// cases 9, 10, 11 and 12	WITHOUT_CLASSIFICATION	0.9999948249245044	WITHOUT_CLASSIFICATION	5.175075495598328E-6	DEFECT
// cases 9, 10, 11 and 12	WITHOUT_CLASSIFICATION	0.9999948249245044	WITHOUT_CLASSIFICATION	5.175075495598328E-6	DEFECT
// draw the outline...	WITHOUT_CLASSIFICATION	0.9999940291563242	WITHOUT_CLASSIFICATION	5.970843675737413E-6	DEFECT
// draw the outline...	WITHOUT_CLASSIFICATION	0.9999940291563242	WITHOUT_CLASSIFICATION	5.970843675737413E-6	DEFECT
// standard deviation lines	WITHOUT_CLASSIFICATION	0.9999997881713486	WITHOUT_CLASSIFICATION	2.118286512601761E-7	DEFECT
// standard deviation lines	WITHOUT_CLASSIFICATION	0.9999997881713486	WITHOUT_CLASSIFICATION	2.118286512601761E-7	DEFECT
// no new methods	WITHOUT_CLASSIFICATION	0.9999999676599545	WITHOUT_CLASSIFICATION	3.234004548363538E-8	DEFECT
// value 0	WITHOUT_CLASSIFICATION	0.9999974853488527	WITHOUT_CLASSIFICATION	2.514651147206911E-6	DEFECT
// get the clipping values...	WITHOUT_CLASSIFICATION	0.9999987281714419	WITHOUT_CLASSIFICATION	1.2718285581150435E-6	DEFECT
// submit the current data point as a crosshair candidate	WITHOUT_CLASSIFICATION	0.999996649487863	WITHOUT_CLASSIFICATION	3.350512136913302E-6	DEFECT
// submit the current data point as a crosshair candidate	WITHOUT_CLASSIFICATION	0.999996649487863	WITHOUT_CLASSIFICATION	3.350512136913302E-6	DEFECT
// draw the bar...	WITHOUT_CLASSIFICATION	0.9999835878572156	WITHOUT_CLASSIFICATION	1.6412142784338916E-5	DEFECT
// cases 1, 2, 3 and 4	WITHOUT_CLASSIFICATION	0.9999974781685427	WITHOUT_CLASSIFICATION	2.521831457282383E-6	DEFECT
// bar is not visible	WITHOUT_CLASSIFICATION	0.9999848089935964	WITHOUT_CLASSIFICATION	1.5191006403549358E-5	DEFECT
// bar is not visible	WITHOUT_CLASSIFICATION	0.9999848089935964	WITHOUT_CLASSIFICATION	1.5191006403549358E-5	DEFECT
// cases 5, 6, 7 and 8	WITHOUT_CLASSIFICATION	0.9999921190525619	WITHOUT_CLASSIFICATION	7.88094743804699E-6	DEFECT
// cases 9, 10, 11 and 12	WITHOUT_CLASSIFICATION	0.9999948249245044	WITHOUT_CLASSIFICATION	5.175075495598328E-6	DEFECT
// draw the outline...	WITHOUT_CLASSIFICATION	0.9999940291563242	WITHOUT_CLASSIFICATION	5.970843675737413E-6	DEFECT
// if we modify the original list, it's best if the URL generator is // not affected	WITHOUT_CLASSIFICATION	0.9999999753215704	WITHOUT_CLASSIFICATION	2.4678429625349905E-8	DEFECT
// value 1	WITHOUT_CLASSIFICATION	0.9999954545979812	WITHOUT_CLASSIFICATION	4.545402018838705E-6	DEFECT
// DRAW THE BARS...	WITHOUT_CLASSIFICATION	0.9999117628315071	WITHOUT_CLASSIFICATION	8.823716849294428E-5	DEFECT
// collect entity and tool tip information...	WITHOUT_CLASSIFICATION	0.9999429938483338	WITHOUT_CLASSIFICATION	5.700615166615229E-5	DEFECT
// Y0	WITHOUT_CLASSIFICATION	0.9999918907865277	WITHOUT_CLASSIFICATION	8.109213472222285E-6	DEFECT
// Y1	WITHOUT_CLASSIFICATION	0.999990988662338	WITHOUT_CLASSIFICATION	9.011337662038072E-6	DEFECT
// nothing is drawn for null values...	WITHOUT_CLASSIFICATION	0.999936976104139	WITHOUT_CLASSIFICATION	6.30238958610049E-5	DEFECT
// X	WITHOUT_CLASSIFICATION	0.999838742666489	WITHOUT_CLASSIFICATION	1.6125733351098854E-4	DEFECT
// Y	WITHOUT_CLASSIFICATION	0.9999903725045057	WITHOUT_CLASSIFICATION	9.627495494307063E-6	DEFECT
// subtitle 1 is the legend	WITHOUT_CLASSIFICATION	0.9999856740506663	WITHOUT_CLASSIFICATION	1.4325949333550767E-5	DEFECT
// calculate the bar width	WITHOUT_CLASSIFICATION	0.9999979748607623	WITHOUT_CLASSIFICATION	2.0251392377710886E-6	DEFECT
// draw the bar...	WITHOUT_CLASSIFICATION	0.9999835878572156	WITHOUT_CLASSIFICATION	1.6412142784338916E-5	DEFECT
// BAR Y	WITHOUT_CLASSIFICATION	0.9999511338317209	WITHOUT_CLASSIFICATION	4.886616827904772E-5	DEFECT
// BAR X	WITHOUT_CLASSIFICATION	0.9997795804497506	WITHOUT_CLASSIFICATION	2.204195502495075E-4	DEFECT
// cases 1, 2, 3 and 4	WITHOUT_CLASSIFICATION	0.9999974781685427	WITHOUT_CLASSIFICATION	2.521831457282383E-6	DEFECT
// bar is not visible	WITHOUT_CLASSIFICATION	0.9999848089935964	WITHOUT_CLASSIFICATION	1.5191006403549358E-5	DEFECT
// cases 9, 10, 11 and 12	WITHOUT_CLASSIFICATION	0.9999948249245044	WITHOUT_CLASSIFICATION	5.175075495598328E-6	DEFECT
// draw the outline...	WITHOUT_CLASSIFICATION	0.9999940291563242	WITHOUT_CLASSIFICATION	5.970843675737413E-6	DEFECT
// draw the outline...	WITHOUT_CLASSIFICATION	0.9999940291563242	WITHOUT_CLASSIFICATION	5.970843675737413E-6	DEFECT
// collect entity and tool tip information...	WITHOUT_CLASSIFICATION	0.9999429938483338	WITHOUT_CLASSIFICATION	5.700615166615229E-5	DEFECT
// collect entity and tool tip information...	WITHOUT_CLASSIFICATION	0.9999429938483338	WITHOUT_CLASSIFICATION	5.700615166615229E-5	DEFECT
// nothing is drawn for null values...	WITHOUT_CLASSIFICATION	0.999936976104139	WITHOUT_CLASSIFICATION	6.30238958610049E-5	DEFECT
// nothing is drawn for null values...	WITHOUT_CLASSIFICATION	0.999936976104139	WITHOUT_CLASSIFICATION	6.30238958610049E-5	DEFECT
// the clone contains a reference to a CLONE of the original object	WITHOUT_CLASSIFICATION	0.9999991925108412	WITHOUT_CLASSIFICATION	8.07489158784959E-7	DEFECT
// draw the item labels if there are any...	WITHOUT_CLASSIFICATION	0.9998199421944264	WITHOUT_CLASSIFICATION	1.8005780557352975E-4	DEFECT
// calculate bar width...	WITHOUT_CLASSIFICATION	0.9999818151805079	WITHOUT_CLASSIFICATION	1.818481949214974E-5	DEFECT
// && state.getBarWidth() > BAR_OUTLINE_WIDTH_THRESHOLD) {	WITHOUT_CLASSIFICATION	0.9999996860508858	WITHOUT_CLASSIFICATION	3.1394911409402435E-7	DEFECT
// no fields to compute...	WITHOUT_CLASSIFICATION	0.9999879579463845	WITHOUT_CLASSIFICATION	1.204205361556088E-5	DEFECT
//plotBackgroundPaint;	WITHOUT_CLASSIFICATION	0.9999539579946906	WITHOUT_CLASSIFICATION	4.6042005309536784E-5	DEFECT
// PlotOrientation.VERTICAL	WITHOUT_CLASSIFICATION	0.9999989555550252	WITHOUT_CLASSIFICATION	1.0444449748168398E-6	DEFECT
// calculate the bar width	WITHOUT_CLASSIFICATION	0.9999979748607623	WITHOUT_CLASSIFICATION	2.0251392377710886E-6	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9999994668407179	WITHOUT_CLASSIFICATION	5.331592820674533E-7	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9999994668407179	WITHOUT_CLASSIFICATION	5.331592820674533E-7	DEFECT
// submit the current data point as a crosshair candidate	WITHOUT_CLASSIFICATION	0.999996649487863	WITHOUT_CLASSIFICATION	3.350512136913302E-6	DEFECT
// submit the current data point as a crosshair candidate	WITHOUT_CLASSIFICATION	0.999996649487863	WITHOUT_CLASSIFICATION	3.350512136913302E-6	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.999993660111925	WITHOUT_CLASSIFICATION	6.339888074945912E-6	DEFECT
// the bar is not visible	WITHOUT_CLASSIFICATION	0.9999556116687701	WITHOUT_CLASSIFICATION	4.438833122986809E-5	DEFECT
// draw the bar...	WITHOUT_CLASSIFICATION	0.9999835878572156	WITHOUT_CLASSIFICATION	1.6412142784338916E-5	DEFECT
// check that a legend item needs to be displayed...	WITHOUT_CLASSIFICATION	0.9999949335936409	WITHOUT_CLASSIFICATION	5.066406359209926E-6	DEFECT
// check that a legend item needs to be displayed...	WITHOUT_CLASSIFICATION	0.9999949335936409	WITHOUT_CLASSIFICATION	5.066406359209926E-6	DEFECT
// check that a legend item needs to be displayed...	WITHOUT_CLASSIFICATION	0.9999949335936409	WITHOUT_CLASSIFICATION	5.066406359209926E-6	DEFECT
// bar is not visible	WITHOUT_CLASSIFICATION	0.9999848089935964	WITHOUT_CLASSIFICATION	1.5191006403549358E-5	DEFECT
// bar is not visible	WITHOUT_CLASSIFICATION	0.9999848089935964	WITHOUT_CLASSIFICATION	1.5191006403549358E-5	DEFECT
// nothing is drawn for null values...	WITHOUT_CLASSIFICATION	0.999936976104139	WITHOUT_CLASSIFICATION	6.30238958610049E-5	DEFECT
// draw the item labels if there are any...	WITHOUT_CLASSIFICATION	0.9998199421944264	WITHOUT_CLASSIFICATION	1.8005780557352975E-4	DEFECT
// calculate bar width...	WITHOUT_CLASSIFICATION	0.9999818151805079	WITHOUT_CLASSIFICATION	1.818481949214974E-5	DEFECT
// check that clone is independent of the original	WITHOUT_CLASSIFICATION	0.9999999648840809	WITHOUT_CLASSIFICATION	3.511591901700239E-8	DEFECT
// do nothing if item is not visible or null	WITHOUT_CLASSIFICATION	0.9999944414225297	WITHOUT_CLASSIFICATION	5.558577470310587E-6	DEFECT
// 100 percent, so it will not apply unless changed	WITHOUT_CLASSIFICATION	0.9999911904701279	WITHOUT_CLASSIFICATION	8.80952987214361E-6	DEFECT
// work out the label anchor point...	WITHOUT_CLASSIFICATION	0.9986264139876465	WITHOUT_CLASSIFICATION	0.001373586012353582	DEFECT
// FIXME: add setSeriesOutlinePaint(int, Paint, boolean)?	WITHOUT_CLASSIFICATION	0.9830535817335073	WITHOUT_CLASSIFICATION	0.016946418266492708	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9999994668407179	WITHOUT_CLASSIFICATION	5.331592820674533E-7	DEFECT
// do nothing if item is not visible	WITHOUT_CLASSIFICATION	0.9999895885803238	WITHOUT_CLASSIFICATION	1.0411419676251798E-5	DEFECT
// current data point...	WITHOUT_CLASSIFICATION	0.9998921698130596	WITHOUT_CLASSIFICATION	1.078301869403892E-4	DEFECT
// current data point...	WITHOUT_CLASSIFICATION	0.9998921698130596	WITHOUT_CLASSIFICATION	1.078301869403892E-4	DEFECT
// previous data point...	WITHOUT_CLASSIFICATION	0.9999965474867919	WITHOUT_CLASSIFICATION	3.4525132081407375E-6	DEFECT
// draw the item labels if there are any...	WITHOUT_CLASSIFICATION	0.9998199421944264	WITHOUT_CLASSIFICATION	1.8005780557352975E-4	DEFECT
// check key order	WITHOUT_CLASSIFICATION	0.9999996843814871	WITHOUT_CLASSIFICATION	3.156185129084676E-7	DEFECT
// in the following code, barL0 is (in Java2D coordinates) the LEFT // end of the bar for a horizontal bar chart, and the TOP end of the // bar for a vertical bar chart.  Whether this is the BASE of the bar // or not depends also on (a) whether the data value is 'negative' // relative to the base value and (b) whether or not the range axis is // inverted.  This only matters if/when we apply the minimumBarLength // attribute, because we should extend the non-base end of the bar	WITHOUT_CLASSIFICATION	0.9999750538169634	WITHOUT_CLASSIFICATION	2.4946183036570785E-5	DEFECT
// switch x and y	WITHOUT_CLASSIFICATION	0.9999982423569045	WITHOUT_CLASSIFICATION	1.7576430954713004E-6	DEFECT
// or: x1s + 2*(x1-x1s)	WITHOUT_CLASSIFICATION	0.9998211718776038	WITHOUT_CLASSIFICATION	1.7882812239622203E-4	DEFECT
// or: x0s + 2*(x0-x0s)	WITHOUT_CLASSIFICATION	0.9998109673280642	WITHOUT_CLASSIFICATION	1.8903267193571034E-4	DEFECT
// extend x0's flat bar	WITHOUT_CLASSIFICATION	0.9999963266512905	WITHOUT_CLASSIFICATION	3.673348709682482E-6	DEFECT
// upright bar	WITHOUT_CLASSIFICATION	0.999996979365551	WITHOUT_CLASSIFICATION	3.0206344489808328E-6	DEFECT
// x1's flat bar	WITHOUT_CLASSIFICATION	0.9999884121829274	WITHOUT_CLASSIFICATION	1.1587817072565744E-5	DEFECT
//standard deviation lines	WITHOUT_CLASSIFICATION	0.9999996582224494	WITHOUT_CLASSIFICATION	3.4177755062230096E-7	DEFECT
//// OUTLINE PAINT /////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999984998490189	WITHOUT_CLASSIFICATION	1.5001509811595418E-6	DEFECT
//plotOutlinePaint;	WITHOUT_CLASSIFICATION	0.999997241700501	WITHOUT_CLASSIFICATION	2.7582994991194794E-6	DEFECT
// check key order	WITHOUT_CLASSIFICATION	0.9999996843814871	WITHOUT_CLASSIFICATION	3.156185129084676E-7	DEFECT
// check key order	WITHOUT_CLASSIFICATION	0.9999996843814871	WITHOUT_CLASSIFICATION	3.156185129084676E-7	DEFECT
// previous data point...	WITHOUT_CLASSIFICATION	0.9999965474867919	WITHOUT_CLASSIFICATION	3.4525132081407375E-6	DEFECT
// draw the item label if there is one...	WITHOUT_CLASSIFICATION	0.9999930235229004	WITHOUT_CLASSIFICATION	6.976477099506655E-6	DEFECT
// BAR Y	WITHOUT_CLASSIFICATION	0.9999511338317209	WITHOUT_CLASSIFICATION	4.886616827904772E-5	DEFECT
// BAR X	WITHOUT_CLASSIFICATION	0.9997795804497506	WITHOUT_CLASSIFICATION	2.204195502495075E-4	DEFECT
// Y0	WITHOUT_CLASSIFICATION	0.9999918907865277	WITHOUT_CLASSIFICATION	8.109213472222285E-6	DEFECT
// Y1	WITHOUT_CLASSIFICATION	0.999990988662338	WITHOUT_CLASSIFICATION	9.011337662038072E-6	DEFECT
// draw the standard deviation lines *before* the shapes (if they're // visible) - it looks better if the shape fill colour is different to // the line colour	WITHOUT_CLASSIFICATION	0.9999786591495411	WITHOUT_CLASSIFICATION	2.134085045887451E-5	DEFECT
// BAR WIDTH	WITHOUT_CLASSIFICATION	0.999959526792392	WITHOUT_CLASSIFICATION	4.047320760808445E-5	DEFECT
// BAR HEIGHT	WITHOUT_CLASSIFICATION	0.9999641926287253	WITHOUT_CLASSIFICATION	3.5807371274677693E-5	DEFECT
// there are no fields to check	WITHOUT_CLASSIFICATION	0.9999996887623613	WITHOUT_CLASSIFICATION	3.11237638645648E-7	DEFECT
/* =========================================================== * JFreeChart : a free chart library for the Java(tm) platform * =========================================================== * * (C) Copyright 2000-2013, by Object Refinery Limited and Contributors. * * Project Info:  http://www.jfree.org/jfreechart/index.html * * This library is free software; you can redistribute it and/or modify it * under the terms of the GNU Lesser General Public License as published by * the Free Software Foundation; either version 2.1 of the License, or * (at your option) any later version. * * This library is distributed in the hope that it will be useful, but * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public * License for more details. * * You should have received a copy of the GNU Lesser General Public * License along with this library; if not, write to the Free Software * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, * USA. * * [Oracle and Java are registered trademarks of Oracle and/or its affiliates.  * Other names may be trademarks of their respective owners.] * * ------------------------- * CategoryItemRenderer.java * ------------------------- * * (C) Copyright 2001-2011, by Object Refinery Limited and Contributors. * * Original Author:  David Gilbert (for Object Refinery Limited); * Contributor(s):   Mark Watson (www.markwatson.com); * * Changes * ------- * 23-Oct-2001 : Version 1 (DG); * 16-Jan-2002 : Renamed HorizontalCategoryItemRenderer.java *               --> CategoryItemRenderer.java (DG); * 05-Feb-2002 : Changed return type of the drawCategoryItem method from void *               to Shape, as part of the tooltips implementation (DG) * *               NOTE (30-May-2002) : this has subsequently been changed back *               to void, tooltips are now collected along with entities in *               ChartRenderingInfo (DG); * * 14-Mar-2002 : Added the initialise method, and changed all bar plots to use *               this renderer (DG); * 23-May-2002 : Added ChartRenderingInfo to the initialise method (DG); * 29-May-2002 : Added the getAxisArea(Rectangle2D) method (DG); * 06-Jun-2002 : Updated Javadoc comments (DG); * 26-Jun-2002 : Added range axis to the initialise method (DG); * 24-Sep-2002 : Added getLegendItem() method (DG); * 23-Oct-2002 : Added methods to get/setToolTipGenerator (DG); * 05-Nov-2002 : Replaced references to CategoryDataset with TableDataset (DG); * 06-Nov-2002 : Added the domain axis to the drawCategoryItem method.  Renamed *               drawCategoryItem() --> drawItem() (DG); * 20-Nov-2002 : Changed signature of drawItem() method to reflect use of *               TableDataset (DG); * 26-Nov-2002 : Replaced the isStacked() method with the getRangeType() *               method (DG); * 08-Jan-2003 : Changed getSeriesCount() --> getRowCount() and *               getCategoryCount() --> getColumnCount() (DG); * 09-Jan-2003 : Changed name of grid-line methods (DG); * 21-Jan-2003 : Merged TableDataset with CategoryDataset (DG); * 10-Apr-2003 : Changed CategoryDataset to KeyedValues2DDataset in *               drawItem() method (DG); * 29-Apr-2003 : Eliminated Renderer interface (DG); * 02-Sep-2003 : Fix for bug 790407 (DG); * 16-Sep-2003 : Changed ChartRenderingInfo --> PlotRenderingInfo (DG); * 20-Oct-2003 : Added setOutlinePaint() method (DG); * 06-Feb-2004 : Added missing methods, and moved deprecated methods (DG); * 19-Feb-2004 : Added extra setXXXLabelsVisible() methods (DG); * 29-Apr-2004 : Changed Integer --> int in initialise() method (DG); * 18-May-2004 : Added methods for item label paint (DG); * 05-Nov-2004 : Added getPassCount() method and 'pass' parameter to drawItem() *               method (DG); * 07-Jan-2005 : Renamed getRangeExtent() --> findRangeBounds (DG); * 11-Jan-2005 : Removed deprecated code in preparation for 1.0.0 release (DG); * 23-Feb-2005 : Now extends LegendItemSource (DG); * 20-Apr-2005 : Renamed CategoryLabelGenerator *               --> CategoryItemLabelGenerator (DG); * 20-May-2005 : Added drawDomainMarker() method (DG); * ------------- JFREECHART 1.0.x --------------------------------------------- * 20-Feb-2007 : Updated API docs (DG); * 19-Apr-2007 : Deprecated seriesVisible and seriesVisibleInLegend flags (DG); * 20-Apr-2007 : Deprecated paint, fillPaint, outlinePaint, stroke, *               outlineStroke, shape, itemLabelsVisible, itemLabelFont, *               itemLabelPaint, positiveItemLabelPosition, *               negativeItemLabelPosition and createEntities override *               fields (DG); * 26-Jun-2008 : Added new method required for crosshair support - THIS CHANGES *               THE API as of version 1.0.11 (DG); * */	WITHOUT_CLASSIFICATION	0.9999496000191632	WITHOUT_CLASSIFICATION	5.039998083672611E-5	DEFECT
//// PAINT /////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999948903451986	WITHOUT_CLASSIFICATION	5.1096548013561505E-6	DEFECT
// FIXME: add setSeriesPaint(int, Paint, boolean)?	WITHOUT_CLASSIFICATION	0.9526459851838126	WITHOUT_CLASSIFICATION	0.047354014816187506	DEFECT
// FIXME: add setBasePaint(int, Paint, boolean)?	WITHOUT_CLASSIFICATION	0.8050873572062931	WITHOUT_CLASSIFICATION	0.19491264279370699	DEFECT
//// FILL PAINT /////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999762263401603	WITHOUT_CLASSIFICATION	2.3773659839752608E-5	DEFECT
// POSITIVE ITEM LABEL POSITION...	WITHOUT_CLASSIFICATION	0.9999145761209597	WITHOUT_CLASSIFICATION	8.542387904030684E-5	DEFECT
// NEGATIVE ITEM LABEL POSITION...	WITHOUT_CLASSIFICATION	0.9999599131350231	WITHOUT_CLASSIFICATION	4.008686497681189E-5	DEFECT
// ITEM LABEL GENERATOR	WITHOUT_CLASSIFICATION	0.9999935856259347	WITHOUT_CLASSIFICATION	6.414374065247617E-6	DEFECT
// TOOL TIP GENERATOR	WITHOUT_CLASSIFICATION	0.9999850651858317	WITHOUT_CLASSIFICATION	1.4934814168335474E-5	DEFECT
// draw the outline...	WITHOUT_CLASSIFICATION	0.9999940291563242	WITHOUT_CLASSIFICATION	5.970843675737413E-6	DEFECT
// FIXME: add setSeriesPaint(int, Paint, boolean)?	WITHOUT_CLASSIFICATION	0.9526459851838126	WITHOUT_CLASSIFICATION	0.047354014816187506	DEFECT
// ITEM LABELS VISIBLE	WITHOUT_CLASSIFICATION	0.9999921309694282	WITHOUT_CLASSIFICATION	7.869030571710945E-6	DEFECT
// FIXME: add setBaseOutlinePaint(Paint, boolean)?	WITHOUT_CLASSIFICATION	0.9374356208825769	WITHOUT_CLASSIFICATION	0.06256437911742316	DEFECT
//// STROKE ////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999978873399046	WITHOUT_CLASSIFICATION	2.112660095413457E-6	DEFECT
// FIXME: add setSeriesStroke(int, Stroke, boolean) ?	WITHOUT_CLASSIFICATION	0.5970997672636708	DEFECT	0.40290023273632913	WITHOUT_CLASSIFICATION
// FIXME: add setBaseStroke(Stroke, boolean) ?	WITHOUT_CLASSIFICATION	0.9200497443277844	DEFECT	0.07995025567221561	WITHOUT_CLASSIFICATION
//// OUTLINE STROKE ////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.999999475176999	WITHOUT_CLASSIFICATION	5.248230010190545E-7	DEFECT
// FIXME: add setSeriesOutlineStroke(int, Stroke, boolean) ?	WITHOUT_CLASSIFICATION	0.5575510582097575	WITHOUT_CLASSIFICATION	0.4424489417902425	DEFECT
// FIXME: add setBaseOutlineStroke(Stroke, boolean) ?	WITHOUT_CLASSIFICATION	0.7891889129668843	DEFECT	0.21081108703311574	WITHOUT_CLASSIFICATION
//// SHAPE /////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999891543020212	WITHOUT_CLASSIFICATION	1.0845697978676985E-5	DEFECT
// FIXME: add setSeriesShape(int, Shape, boolean) ?	WITHOUT_CLASSIFICATION	0.9794853272104578	WITHOUT_CLASSIFICATION	0.020514672789542245	DEFECT
// FIXME: add setBaseShape(Shape, boolean) ?	WITHOUT_CLASSIFICATION	0.7985939922393559	WITHOUT_CLASSIFICATION	0.20140600776064405	DEFECT
// check retrieve value by key	WITHOUT_CLASSIFICATION	0.9999999830509825	WITHOUT_CLASSIFICATION	1.694901746926687E-8	DEFECT
// FIXME: add setSeriesItemLabelGenerator(int, CategoryItemLabelGenerator, //            boolean)	WITHOUT_CLASSIFICATION	0.9957314642320291	WITHOUT_CLASSIFICATION	0.004268535767970838	DEFECT
// FIXME: add setBaseToolTipGenerator(CategoryToolTipGenerator, boolean) ?	WITHOUT_CLASSIFICATION	0.9823197128389956	WITHOUT_CLASSIFICATION	0.017680287161004383	DEFECT
//// ITEM LABEL FONT  //////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999910852879322	WITHOUT_CLASSIFICATION	8.91471206777749E-6	DEFECT
// FIXME: add setSeriesItemLabelFont(int, Font, boolean) ?	WITHOUT_CLASSIFICATION	0.9916060514454295	WITHOUT_CLASSIFICATION	0.008393948554570641	DEFECT
// FIXME: add setBaseItemLabelFont(Font, boolean) ?	WITHOUT_CLASSIFICATION	0.9512970422964007	WITHOUT_CLASSIFICATION	0.04870295770359941	DEFECT
//// ITEM LABEL PAINT  /////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999869855713901	WITHOUT_CLASSIFICATION	1.301442860992164E-5	DEFECT
// FIXME: add setSeriesItemLabelPaint(int, Paint, boolean) ?	WITHOUT_CLASSIFICATION	0.9953848994150308	WITHOUT_CLASSIFICATION	0.004615100584969065	DEFECT
// FIXME: add setBaseItemLabelPaint(Paint, boolean) ?	WITHOUT_CLASSIFICATION	0.9804420482227234	WITHOUT_CLASSIFICATION	0.019557951777276532	DEFECT
// ITEM URL GENERATOR	WITHOUT_CLASSIFICATION	0.9999979299625283	WITHOUT_CLASSIFICATION	2.0700374716880992E-6	DEFECT
// as a special case, if the bar colour has alpha == 0, we draw // nothing.	WITHOUT_CLASSIFICATION	0.9999999860616949	WITHOUT_CLASSIFICATION	1.3938304980974772E-8	DEFECT
/*&& state.getBarWidth() > renderer.BAR_OUTLINE_WIDTH_THRESHOLD*/	WITHOUT_CLASSIFICATION	0.9999916262518906	WITHOUT_CLASSIFICATION	8.373748109484384E-6	DEFECT
// standard ResourceBundle behaviour	WITHOUT_CLASSIFICATION	0.9999997600257168	WITHOUT_CLASSIFICATION	2.399742832859752E-7	DEFECT
// check retrieve value by key	WITHOUT_CLASSIFICATION	0.9999999830509825	WITHOUT_CLASSIFICATION	1.694901746926687E-8	DEFECT
// nothing is drawn for null...	WITHOUT_CLASSIFICATION	0.9997859433474016	WITHOUT_CLASSIFICATION	2.1405665259835452E-4	DEFECT
// current data point...	WITHOUT_CLASSIFICATION	0.9998921698130596	WITHOUT_CLASSIFICATION	1.078301869403892E-4	DEFECT
// previous data point...	WITHOUT_CLASSIFICATION	0.9999965474867919	WITHOUT_CLASSIFICATION	3.4525132081407375E-6	DEFECT
// previous data point...	WITHOUT_CLASSIFICATION	0.9999965474867919	WITHOUT_CLASSIFICATION	3.4525132081407375E-6	DEFECT
// draw the item label if there is one...	WITHOUT_CLASSIFICATION	0.9999930235229004	WITHOUT_CLASSIFICATION	6.976477099506655E-6	DEFECT
// submit the current data point as a crosshair candidate	WITHOUT_CLASSIFICATION	0.999996649487863	WITHOUT_CLASSIFICATION	3.350512136913302E-6	DEFECT
// fill background...	WITHOUT_CLASSIFICATION	0.999857045285386	WITHOUT_CLASSIFICATION	1.429547146139846E-4	DEFECT
// draw background image, if there is one...	WITHOUT_CLASSIFICATION	0.9999912133750767	WITHOUT_CLASSIFICATION	8.7866249233802E-6	DEFECT
// put an outline around the data area...	WITHOUT_CLASSIFICATION	0.9999789144696689	WITHOUT_CLASSIFICATION	2.108553033105071E-5	DEFECT
// draw the bar...	WITHOUT_CLASSIFICATION	0.9999835878572156	WITHOUT_CLASSIFICATION	1.6412142784338916E-5	DEFECT
// collect entity and tool tip information...	WITHOUT_CLASSIFICATION	0.9999429938483338	WITHOUT_CLASSIFICATION	5.700615166615229E-5	DEFECT
// nothing is drawn for null values...	WITHOUT_CLASSIFICATION	0.999936976104139	WITHOUT_CLASSIFICATION	6.30238958610049E-5	DEFECT
// handle a special case - if the bar colour has alpha == 0, it is // invisible so we shouldn't draw any shadow	WITHOUT_CLASSIFICATION	0.9999999747529905	WITHOUT_CLASSIFICATION	2.5247009485136784E-8	DEFECT
// 100 percent, so it will not apply unless // changed	WITHOUT_CLASSIFICATION	0.9999924612452475	WITHOUT_CLASSIFICATION	7.538754752344758E-6	DEFECT
// set the outline paint to fully transparent, then the legend shape // will just have the same colour as the lines drawn by the renderer	WITHOUT_CLASSIFICATION	0.9999999614496803	WITHOUT_CLASSIFICATION	3.8550319602155574E-8	DEFECT
// first check the number we are plotting...	WITHOUT_CLASSIFICATION	0.9999998798712822	WITHOUT_CLASSIFICATION	1.2012871779205088E-7	DEFECT
// reset the min and max	WITHOUT_CLASSIFICATION	0.9999998042068016	WITHOUT_CLASSIFICATION	1.9579319847090727E-7	DEFECT
// connect to the previous point	WITHOUT_CLASSIFICATION	0.9999979125318974	WITHOUT_CLASSIFICATION	2.0874681026011237E-6	DEFECT
// create a line renderer only	WITHOUT_CLASSIFICATION	0.9999883165121086	WITHOUT_CLASSIFICATION	1.1683487891303963E-5	DEFECT
// higlight the background corners...	WITHOUT_CLASSIFICATION	0.9998176636881824	WITHOUT_CLASSIFICATION	1.8233631181762932E-4	DEFECT
// do nothing if item is not visible	WITHOUT_CLASSIFICATION	0.9999895885803238	WITHOUT_CLASSIFICATION	1.0411419676251798E-5	DEFECT
// check that a legend item needs to be displayed...	WITHOUT_CLASSIFICATION	0.9999949335936409	WITHOUT_CLASSIFICATION	5.066406359209926E-6	DEFECT
// draw the outline...	WITHOUT_CLASSIFICATION	0.9999940291563242	WITHOUT_CLASSIFICATION	5.970843675737413E-6	DEFECT
// Y0	WITHOUT_CLASSIFICATION	0.9999918907865277	WITHOUT_CLASSIFICATION	8.109213472222285E-6	DEFECT
// Y1	WITHOUT_CLASSIFICATION	0.999990988662338	WITHOUT_CLASSIFICATION	9.011337662038072E-6	DEFECT
// nothing is drawn for null values...	WITHOUT_CLASSIFICATION	0.999936976104139	WITHOUT_CLASSIFICATION	6.30238958610049E-5	DEFECT
// BAR WIDTH	WITHOUT_CLASSIFICATION	0.999959526792392	WITHOUT_CLASSIFICATION	4.047320760808445E-5	DEFECT
// BAR HEIGHT	WITHOUT_CLASSIFICATION	0.9999641926287253	WITHOUT_CLASSIFICATION	3.5807371274677693E-5	DEFECT
// we'll set this to false if there is at // least one non-null data item...	WITHOUT_CLASSIFICATION	0.9999998600951537	WITHOUT_CLASSIFICATION	1.3990484625124964E-7	DEFECT
// set the default item label positions, which will only be used if // the user requests visible item labels...	WITHOUT_CLASSIFICATION	0.9999995658131156	WITHOUT_CLASSIFICATION	4.3418688440064073E-7	DEFECT
// treat the last column value as an absolute	WITHOUT_CLASSIFICATION	0.9999999727833528	WITHOUT_CLASSIFICATION	2.7216647184412024E-8	DEFECT
// only needed if calculating percentages	WITHOUT_CLASSIFICATION	0.999999737893921	WITHOUT_CLASSIFICATION	2.6210607895988126E-7	DEFECT
// calculate the box width	WITHOUT_CLASSIFICATION	0.9999995133518449	WITHOUT_CLASSIFICATION	4.866481551694764E-7	DEFECT
// offset the start of the boxes if the total width used is smaller // than the category width	WITHOUT_CLASSIFICATION	0.9999974421460962	WITHOUT_CLASSIFICATION	2.5578539037751007E-6	DEFECT
// offset the start of the box if the box width is smaller than // the category width	WITHOUT_CLASSIFICATION	0.9999602775781208	WITHOUT_CLASSIFICATION	3.97224218792272E-5	DEFECT
// draw the box...	WITHOUT_CLASSIFICATION	0.9999955000150625	WITHOUT_CLASSIFICATION	4.4999849374380575E-6	DEFECT
// draw the upper shadow...	WITHOUT_CLASSIFICATION	0.999961185256913	WITHOUT_CLASSIFICATION	3.8814743086870646E-5	DEFECT
// draw the lower shadow...	WITHOUT_CLASSIFICATION	0.9999892781276611	WITHOUT_CLASSIFICATION	1.0721872338911467E-5	DEFECT
// FIXME: add setBasePaint(int, Paint, boolean)?	WITHOUT_CLASSIFICATION	0.8050873572062931	WITHOUT_CLASSIFICATION	0.19491264279370699	DEFECT
// offset the start of the boxes if the total width used is smaller // than the category width	WITHOUT_CLASSIFICATION	0.9999974421460962	WITHOUT_CLASSIFICATION	2.5578539037751007E-6	DEFECT
// draw the upper shadow...	WITHOUT_CLASSIFICATION	0.999961185256913	WITHOUT_CLASSIFICATION	3.8814743086870646E-5	DEFECT
// draw the lower shadow...	WITHOUT_CLASSIFICATION	0.9999892781276611	WITHOUT_CLASSIFICATION	1.0721872338911467E-5	DEFECT
// here we check that the average marker will in fact be // visible before drawing it...	WITHOUT_CLASSIFICATION	0.9999813565069559	WITHOUT_CLASSIFICATION	1.864349304405302E-5	DEFECT
// draw mean - SPECIAL AIMS REQUIREMENT...	WITHOUT_CLASSIFICATION	0.9999818474947247	WITHOUT_CLASSIFICATION	1.8152505275217593E-5	DEFECT
// average radius	WITHOUT_CLASSIFICATION	0.9999999386216836	WITHOUT_CLASSIFICATION	6.137831635236387E-8	DEFECT
// average radius	WITHOUT_CLASSIFICATION	0.9999999386216836	WITHOUT_CLASSIFICATION	6.137831635236387E-8	DEFECT
// check retrieve value by index	WITHOUT_CLASSIFICATION	0.9999974678476009	WITHOUT_CLASSIFICATION	2.5321523991501873E-6	DEFECT
// draw median...	WITHOUT_CLASSIFICATION	0.9999934797812877	WITHOUT_CLASSIFICATION	6.5202187123580814E-6	DEFECT
// draw median...	WITHOUT_CLASSIFICATION	0.9999934797812877	WITHOUT_CLASSIFICATION	6.5202187123580814E-6	DEFECT
// offset the start of the box if the box width is smaller than the // category width	WITHOUT_CLASSIFICATION	0.9999581101356182	WITHOUT_CLASSIFICATION	4.188986438185405E-5	DEFECT
// draw the body...	WITHOUT_CLASSIFICATION	0.9999511233158717	WITHOUT_CLASSIFICATION	4.887668412843119E-5	DEFECT
// draw yOutliers...	WITHOUT_CLASSIFICATION	0.9999968165451383	WITHOUT_CLASSIFICATION	3.183454861607077E-6	DEFECT
// draw farout indicators	WITHOUT_CLASSIFICATION	0.99998560691401	WITHOUT_CLASSIFICATION	1.439308599011371E-5	DEFECT
// start from Y = rangeBase	WITHOUT_CLASSIFICATION	0.9999999466418477	WITHOUT_CLASSIFICATION	5.33581522235731E-8	DEFECT
// Process outliers. Each outlier is either added to the // appropriate outlier list or a new outlier list is made	WITHOUT_CLASSIFICATION	0.9999999849523271	WITHOUT_CLASSIFICATION	1.5047672872624924E-8	DEFECT
// disable visible items optimisation - it doesn't work for this // renderer...	WITHOUT_CLASSIFICATION	0.9562554101432129	WITHOUT_CLASSIFICATION	0.04374458985678709	DEFECT
// Get the item count for the series, so that we can know which is the // end of the series.	WITHOUT_CLASSIFICATION	0.9999999897808294	WITHOUT_CLASSIFICATION	1.021917063691339E-8	DEFECT
// avoid possible sun.dc.pr.PRException: endPath: bad path	WITHOUT_CLASSIFICATION	0.9998151185732986	WITHOUT_CLASSIFICATION	1.8488142670137464E-4	DEFECT
// Create a new Area for the series	WITHOUT_CLASSIFICATION	0.9999998573071243	WITHOUT_CLASSIFICATION	1.4269287580139906E-7	DEFECT
// The first point is (x, this.baseYValue)	WITHOUT_CLASSIFICATION	0.9999964259943718	WITHOUT_CLASSIFICATION	3.574005628190353E-6	DEFECT
// get the previous data point...	WITHOUT_CLASSIFICATION	0.9999762225359872	WITHOUT_CLASSIFICATION	2.377746401282216E-5	DEFECT
// not just a horizontal bar but need to perform a 'step'.	WITHOUT_CLASSIFICATION	0.9999999327275952	WITHOUT_CLASSIFICATION	6.72724047750052E-8	DEFECT
// add an entity for the item...	WITHOUT_CLASSIFICATION	0.9999495881493805	WITHOUT_CLASSIFICATION	5.0411850619468914E-5	DEFECT
// collect entity and tool tip information...	WITHOUT_CLASSIFICATION	0.9999429938483338	WITHOUT_CLASSIFICATION	5.700615166615229E-5	DEFECT
// avoid possible sun.dc.pr.PRException: endPath: bad path	WITHOUT_CLASSIFICATION	0.9998151185732986	WITHOUT_CLASSIFICATION	1.8488142670137464E-4	DEFECT
// retrieve an item	WITHOUT_CLASSIFICATION	0.9999998907562869	WITHOUT_CLASSIFICATION	1.0924371303620932E-7	DEFECT
// Add each point to Area (x, y)	WITHOUT_CLASSIFICATION	0.9999953182904104	WITHOUT_CLASSIFICATION	4.681709589589093E-6	DEFECT
// Check if the item is the last item for the series or if it // is a NULL value and number of items > 0.  We can't draw an area for // a single point.	WITHOUT_CLASSIFICATION	0.999999996379694	WITHOUT_CLASSIFICATION	3.620306040785985E-9	DEFECT
// Add the last point (x,0)	WITHOUT_CLASSIFICATION	0.999999299044934	WITHOUT_CLASSIFICATION	7.009550659835248E-7	DEFECT
// fill the polygon	WITHOUT_CLASSIFICATION	0.9999475451686799	WITHOUT_CLASSIFICATION	5.245483132003694E-5	DEFECT
// draw an outline around the Area.	WITHOUT_CLASSIFICATION	0.9999974491225304	WITHOUT_CLASSIFICATION	2.5508774695768077E-6	DEFECT
// start new area when needed (see above)	WITHOUT_CLASSIFICATION	0.9999998792300417	WITHOUT_CLASSIFICATION	1.2076995824636077E-7	DEFECT
// do nothing...this is just a hook for subclasses	WITHOUT_CLASSIFICATION	0.999998460528654	WITHOUT_CLASSIFICATION	1.5394713459527566E-6	DEFECT
// TODO getSeriesShape(n).getBounds().width / 2;	WITHOUT_CLASSIFICATION	0.9984085838658451	WITHOUT_CLASSIFICATION	0.0015914161341549831	DEFECT
// TODO getSeriesShape(n).getBounds().height / 2;	WITHOUT_CLASSIFICATION	0.9940019378015552	WITHOUT_CLASSIFICATION	0.005998062198444779	DEFECT
// can't draw anything	WITHOUT_CLASSIFICATION	0.9999871267237651	WITHOUT_CLASSIFICATION	1.2873276234886484E-5	DEFECT
// draw optional guide lines	WITHOUT_CLASSIFICATION	0.9999999774261051	WITHOUT_CLASSIFICATION	2.257389494285305E-8	DEFECT
// calculate the arrow head and draw it...	WITHOUT_CLASSIFICATION	0.999801984522144	WITHOUT_CLASSIFICATION	1.9801547785596008E-4	DEFECT
// orientation is HORIZONTAL	WITHOUT_CLASSIFICATION	0.9999930572792293	WITHOUT_CLASSIFICATION	6.9427207706412135E-6	DEFECT
//labelLinkStyle;	WITHOUT_CLASSIFICATION	0.9999958023391916	WITHOUT_CLASSIFICATION	4.197660808388093E-6	DEFECT
// request width index == itemCount	WITHOUT_CLASSIFICATION	0.9999972016816967	WITHOUT_CLASSIFICATION	2.798318303376891E-6	DEFECT
// check if either series is a degenerate case (i.e. less than 2 points)	WITHOUT_CLASSIFICATION	0.9999993003151741	WITHOUT_CLASSIFICATION	6.996848257664006E-7	DEFECT
// check if series are disjoint (i.e. domain-spans do not overlap)	WITHOUT_CLASSIFICATION	0.9999999666579981	WITHOUT_CLASSIFICATION	3.3342001918072666E-8	DEFECT
// polygon definitions	WITHOUT_CLASSIFICATION	0.9999974820762277	WITHOUT_CLASSIFICATION	2.517923772256189E-6	DEFECT
// state	WITHOUT_CLASSIFICATION	0.9999994857981572	WITHOUT_CLASSIFICATION	5.142018427465297E-7	DEFECT
// actual value set below	WITHOUT_CLASSIFICATION	0.999999936788897	WITHOUT_CLASSIFICATION	6.321110303699972E-8	DEFECT
// if a subtrahend is not specified, assume it is zero	WITHOUT_CLASSIFICATION	0.9999996609609296	WITHOUT_CLASSIFICATION	3.390390702898018E-7	DEFECT
// fast-forward through leading tails	WITHOUT_CLASSIFICATION	0.9999734094120826	WITHOUT_CLASSIFICATION	2.6590587917526665E-5	DEFECT
// get the x and y coordinates	WITHOUT_CLASSIFICATION	0.9999997965257716	WITHOUT_CLASSIFICATION	2.0347422828677062E-7	DEFECT
// minuend needs to be fast forwarded	WITHOUT_CLASSIFICATION	0.9999976189332624	WITHOUT_CLASSIFICATION	2.3810667376400692E-6	DEFECT
// subtrahend needs to be fast forwarded	WITHOUT_CLASSIFICATION	0.9999966863240037	WITHOUT_CLASSIFICATION	3.3136759963283946E-6	DEFECT
// project onto subtrahend	WITHOUT_CLASSIFICATION	0.9999999195247922	WITHOUT_CLASSIFICATION	8.047520790479135E-8	DEFECT
// project onto minuend	WITHOUT_CLASSIFICATION	0.9999994872498856	WITHOUT_CLASSIFICATION	5.127501143539211E-7	DEFECT
// start of algorithm	WITHOUT_CLASSIFICATION	0.9999994805813486	WITHOUT_CLASSIFICATION	5.194186515189461E-7	DEFECT
// this won't happen :)	WITHOUT_CLASSIFICATION	0.9827201715637258	WITHOUT_CLASSIFICATION	0.017279828436274153	DEFECT
// deassert b_*FastForward (only matters for 1st time through loop)	WITHOUT_CLASSIFICATION	0.9999925173680325	WITHOUT_CLASSIFICATION	7.48263196751256E-6	DEFECT
// check for intersect	WITHOUT_CLASSIFICATION	0.9999999651865822	WITHOUT_CLASSIFICATION	3.4813417751540775E-8	DEFECT
// check if line segments are colinear	WITHOUT_CLASSIFICATION	0.9999998355527263	WITHOUT_CLASSIFICATION	1.6444727372370066E-7	DEFECT
// compute common denominator	WITHOUT_CLASSIFICATION	0.9999979179214928	WITHOUT_CLASSIFICATION	2.082078507117319E-6	DEFECT
// compute common deltas	WITHOUT_CLASSIFICATION	0.9999982570313228	WITHOUT_CLASSIFICATION	1.7429686771049962E-6	DEFECT
// compute numerators	WITHOUT_CLASSIFICATION	0.9999999636532485	WITHOUT_CLASSIFICATION	3.634675146716246E-8	DEFECT
// check if previously colinear	WITHOUT_CLASSIFICATION	0.999999944827641	WITHOUT_CLASSIFICATION	5.517235894445176E-8	DEFECT
// clear colinear points and flag	WITHOUT_CLASSIFICATION	0.9999992984422282	WITHOUT_CLASSIFICATION	7.01557771812302E-7	DEFECT
// set new starting point for the polygon	WITHOUT_CLASSIFICATION	0.9999997111635842	WITHOUT_CLASSIFICATION	2.888364157495498E-7	DEFECT
// compute slope components	WITHOUT_CLASSIFICATION	0.9999979856589124	WITHOUT_CLASSIFICATION	2.014341087640624E-6	DEFECT
// test if both grahphs have a vertical rise at the same x-value	WITHOUT_CLASSIFICATION	0.9999996979941791	WITHOUT_CLASSIFICATION	3.020058209655983E-7	DEFECT
// check if the line segments intersect	WITHOUT_CLASSIFICATION	0.9999997801485175	WITHOUT_CLASSIFICATION	2.1985148246249577E-7	DEFECT
// compute the point of intersection	WITHOUT_CLASSIFICATION	0.9999985376234736	WITHOUT_CLASSIFICATION	1.4623765264082484E-6	DEFECT
// advance minuend and subtrahend to intesect	WITHOUT_CLASSIFICATION	0.9999995782292571	WITHOUT_CLASSIFICATION	4.217707428476037E-7	DEFECT
// add intersection point to the polygon	WITHOUT_CLASSIFICATION	0.9999964846785476	WITHOUT_CLASSIFICATION	3.515321452379529E-6	DEFECT
// add the subtrahend's points to the polygon in reverse	WITHOUT_CLASSIFICATION	0.9999990727333264	WITHOUT_CLASSIFICATION	9.272666735543804E-7	DEFECT
// create an actual polygon	WITHOUT_CLASSIFICATION	0.9999958648309673	WITHOUT_CLASSIFICATION	4.135169032794349E-6	DEFECT
// add an entity for the item...	WITHOUT_CLASSIFICATION	0.9999495881493805	WITHOUT_CLASSIFICATION	5.0411850619468914E-5	DEFECT
// SERIES VISIBLE IN LEGEND (not yet respected by all renderers)	WITHOUT_CLASSIFICATION	0.9999055486859818	WITHOUT_CLASSIFICATION	9.445131401821938E-5	DEFECT
// draw the item label if there is one...	WITHOUT_CLASSIFICATION	0.9999930235229004	WITHOUT_CLASSIFICATION	6.976477099506655E-6	DEFECT
// draw an outline around the Area.	WITHOUT_CLASSIFICATION	0.9999974491225304	WITHOUT_CLASSIFICATION	2.5508774695768077E-6	DEFECT
// project onto subtrahend	WITHOUT_CLASSIFICATION	0.9999999195247922	WITHOUT_CLASSIFICATION	8.047520790479135E-8	DEFECT
// project onto minuend	WITHOUT_CLASSIFICATION	0.9999994872498856	WITHOUT_CLASSIFICATION	5.127501143539211E-7	DEFECT
// add the subtrahend's points to the polygon in reverse	WITHOUT_CLASSIFICATION	0.9999990727333264	WITHOUT_CLASSIFICATION	9.272666735543804E-7	DEFECT
// create an actual polygon	WITHOUT_CLASSIFICATION	0.9999958648309673	WITHOUT_CLASSIFICATION	4.135169032794349E-6	DEFECT
// set the maxY and minY values to intersect y-value	WITHOUT_CLASSIFICATION	0.9999988874439019	WITHOUT_CLASSIFICATION	1.112556098209459E-6	DEFECT
// add interection point to new polygon	WITHOUT_CLASSIFICATION	0.9999658609707756	WITHOUT_CLASSIFICATION	3.4139029224405684E-5	DEFECT
// advance the minuend if needed	WITHOUT_CLASSIFICATION	0.9999999675524894	WITHOUT_CLASSIFICATION	3.2447510593017596E-8	DEFECT
// advance the subtrahend if needed	WITHOUT_CLASSIFICATION	0.9999999812062957	WITHOUT_CLASSIFICATION	1.8793704207903192E-8	DEFECT
// check if the final polygon needs to be clipped	WITHOUT_CLASSIFICATION	0.9999938430276114	WITHOUT_CLASSIFICATION	6.156972388610638E-6	DEFECT
// consider last point of minuend and subtrahend for determining // positivity	WITHOUT_CLASSIFICATION	0.99999859162766	WITHOUT_CLASSIFICATION	1.4083723399562713E-6	DEFECT
// add the last point of the minuned and subtrahend	WITHOUT_CLASSIFICATION	0.9999998724083575	WITHOUT_CLASSIFICATION	1.275916425907188E-7	DEFECT
// vertical orientation	WITHOUT_CLASSIFICATION	0.9999955338389548	WITHOUT_CLASSIFICATION	4.466161045146375E-6	DEFECT
//// VISIBLE //////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999826135934194	WITHOUT_CLASSIFICATION	1.7386406580590043E-5	DEFECT
//// PAINT ////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999948903451986	WITHOUT_CLASSIFICATION	5.1096548013561505E-6	DEFECT
// get the previous point and the next point so we can calculate a // "hot spot" for the area (used by the chart entity)...	WITHOUT_CLASSIFICATION	0.9999997095795383	WITHOUT_CLASSIFICATION	2.9042046157722834E-7	DEFECT
// FIXME: add setSeriesOutlinePaint(int, Paint, boolean)?	WITHOUT_CLASSIFICATION	0.9830535817335073	WITHOUT_CLASSIFICATION	0.016946418266492708	DEFECT
// FIXME: add setBaseOutlinePaint(Paint, boolean)?	WITHOUT_CLASSIFICATION	0.9374356208825769	WITHOUT_CLASSIFICATION	0.06256437911742316	DEFECT
// create the polygon // add the minuend's points to polygon	WITHOUT_CLASSIFICATION	0.9999982037826598	WITHOUT_CLASSIFICATION	1.796217340154986E-6	DEFECT
// Check if the item is the last item for the series. // and number of items > 0.  We can't draw an area for a single point.	WITHOUT_CLASSIFICATION	0.9999999774415745	WITHOUT_CLASSIFICATION	2.255842548448562E-8	DEFECT
//// OUTLINE PAINT ////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999984998490189	WITHOUT_CLASSIFICATION	1.5001509811595418E-6	DEFECT
// bad axisNumber	WITHOUT_CLASSIFICATION	0.9999996813312138	WITHOUT_CLASSIFICATION	3.18668786289969E-7	DEFECT
// a Range object cannot be equal to a different object type	WITHOUT_CLASSIFICATION	0.9999873025463414	WITHOUT_CLASSIFICATION	1.269745365862363E-5	DEFECT
// POSITIVE ITEM LABEL POSITION...	WITHOUT_CLASSIFICATION	0.9999145761209597	WITHOUT_CLASSIFICATION	8.542387904030684E-5	DEFECT
// NEGATIVE ITEM LABEL POSITION...	WITHOUT_CLASSIFICATION	0.9999599131350231	WITHOUT_CLASSIFICATION	4.008686497681189E-5	DEFECT
//// TOOL TIP GENERATOR ///////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999864562978492	WITHOUT_CLASSIFICATION	1.3543702150918138E-5	DEFECT
//// URL GENERATOR ////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999978583916981	WITHOUT_CLASSIFICATION	2.1416083018351744E-6	DEFECT
// FIXME: add setSeriesStroke(int, Stroke, boolean) ?	WITHOUT_CLASSIFICATION	0.5970997672636708	DEFECT	0.40290023273632913	WITHOUT_CLASSIFICATION
// FIXME: add setBaseStroke(Stroke, boolean) ?	WITHOUT_CLASSIFICATION	0.9200497443277844	DEFECT	0.07995025567221561	WITHOUT_CLASSIFICATION
// FIXME: add setSeriesOutlineStroke(int, Stroke, boolean) ?	WITHOUT_CLASSIFICATION	0.5575510582097575	WITHOUT_CLASSIFICATION	0.4424489417902425	DEFECT
// FIXME: add setBaseOutlineStroke(Stroke, boolean) ?	WITHOUT_CLASSIFICATION	0.7891889129668843	DEFECT	0.21081108703311574	WITHOUT_CLASSIFICATION
// FIXME: add setSeriesShape(int, Shape, boolean) ?	WITHOUT_CLASSIFICATION	0.9794853272104578	WITHOUT_CLASSIFICATION	0.020514672789542245	DEFECT
// FIXME: add setBaseShape(Shape, boolean) ?	WITHOUT_CLASSIFICATION	0.7985939922393559	WITHOUT_CLASSIFICATION	0.20140600776064405	DEFECT
// allowDuplicateXValues	WITHOUT_CLASSIFICATION	0.9999999213991076	WITHOUT_CLASSIFICATION	7.860089227733141E-8	DEFECT
//// STROKE ///////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999978873399046	WITHOUT_CLASSIFICATION	2.112660095413457E-6	DEFECT
//// OUTLINE STROKE ///////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.999999475176999	WITHOUT_CLASSIFICATION	5.248230010190545E-7	DEFECT
//// SHAPE ////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999891543020212	WITHOUT_CLASSIFICATION	1.0845697978676985E-5	DEFECT
//// LEGEND ITEMS /////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999955930813557	WITHOUT_CLASSIFICATION	4.40691864436578E-6	DEFECT
//// LEGEND ITEM LABEL GENERATOR //////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999943353832426	WITHOUT_CLASSIFICATION	5.664616757480894E-6	DEFECT
//// ITEM LABEL GENERATOR /////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999933364731861	WITHOUT_CLASSIFICATION	6.6635268138650345E-6	DEFECT
// FIXME:	WITHOUT_CLASSIFICATION	0.8096508585514506	WITHOUT_CLASSIFICATION	0.19034914144854928	DEFECT
//// ITEM LABEL FONT ///////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999931884408197	WITHOUT_CLASSIFICATION	6.811559180244226E-6	DEFECT
//// ANNOTATIONS //////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999978755057161	WITHOUT_CLASSIFICATION	2.1244942839749365E-6	DEFECT
//// DRAWING //////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.999991923790941	WITHOUT_CLASSIFICATION	8.076209058961034E-6	DEFECT
// DEPRECATED METHODS	WITHOUT_CLASSIFICATION	0.9999992543646424	WITHOUT_CLASSIFICATION	7.456353576784579E-7	DEFECT
// need to handle cluster centering as a special case	WITHOUT_CLASSIFICATION	0.9999999518845206	WITHOUT_CLASSIFICATION	4.8115479431235996E-8	DEFECT
// may be negative	WITHOUT_CLASSIFICATION	0.9999987498188891	WITHOUT_CLASSIFICATION	1.2501811109303312E-6	DEFECT
/*             * Legacy? Just return the original Paint.             * (this corresponds EXACTLY to how Paints used to be darkened)             */	WITHOUT_CLASSIFICATION	0.9999992384422824	WITHOUT_CLASSIFICATION	7.615577175225812E-7	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999712098698399	WITHOUT_CLASSIFICATION	2.8790130160057927E-5	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9999955225021957	WITHOUT_CLASSIFICATION	4.4774978043964495E-6	DEFECT
// add an entity for the item...	WITHOUT_CLASSIFICATION	0.9999495881493805	WITHOUT_CLASSIFICATION	5.0411850619468914E-5	DEFECT
// do nothing if item is not visible	WITHOUT_CLASSIFICATION	0.9999895885803238	WITHOUT_CLASSIFICATION	1.0411419676251798E-5	DEFECT
// Create a new Area for the series	WITHOUT_CLASSIFICATION	0.9999998573071243	WITHOUT_CLASSIFICATION	1.4269287580139906E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999994848348538	WITHOUT_CLASSIFICATION	5.151651463210354E-7	DEFECT
// add a value	WITHOUT_CLASSIFICATION	0.9999993962359933	WITHOUT_CLASSIFICATION	6.037640066513258E-7	DEFECT
// first pass draws the shading	WITHOUT_CLASSIFICATION	0.9999969833764039	WITHOUT_CLASSIFICATION	3.0166235961157052E-6	DEFECT
// last item in series, draw the lot... // set up the alpha-transparency...	WITHOUT_CLASSIFICATION	0.999968559459229	WITHOUT_CLASSIFICATION	3.144054077099376E-5	DEFECT
// second pass adds shapes where the items are ..	WITHOUT_CLASSIFICATION	0.9999627232049271	WITHOUT_CLASSIFICATION	3.7276795072957186E-5	DEFECT
// return straight away if the item is not visible	WITHOUT_CLASSIFICATION	0.9999996625834348	WITHOUT_CLASSIFICATION	3.374165652113365E-7	DEFECT
// add an entity if this info is being collected	WITHOUT_CLASSIFICATION	0.9999941985943234	WITHOUT_CLASSIFICATION	5.80140567663812E-6	DEFECT
//  Get height adjustment based on stack and translate to Java2D values	WITHOUT_CLASSIFICATION	0.9999992560309453	WITHOUT_CLASSIFICATION	7.439690545889396E-7	DEFECT
//  Get series Paint and Stroke	WITHOUT_CLASSIFICATION	0.9999728019511642	WITHOUT_CLASSIFICATION	2.719804883570719E-5	DEFECT
//  On first pass render the areas, line and outlines	WITHOUT_CLASSIFICATION	0.9999767947748177	WITHOUT_CLASSIFICATION	2.3205225182294458E-5	DEFECT
// start from previous height (ph1)	WITHOUT_CLASSIFICATION	0.9999994261794088	WITHOUT_CLASSIFICATION	5.73820591103408E-7	DEFECT
// should not get here	WITHOUT_CLASSIFICATION	0.9999145191986234	WITHOUT_CLASSIFICATION	8.548080137660966E-5	DEFECT
// use item paint for fills by default	WITHOUT_CLASSIFICATION	0.9999998643999072	WITHOUT_CLASSIFICATION	1.3560009275556775E-7	DEFECT
// === DEPRECATED CODE ===	WITHOUT_CLASSIFICATION	0.9999995181680887	WITHOUT_CLASSIFICATION	4.818319112725654E-7	DEFECT
// LINES VISIBLE	WITHOUT_CLASSIFICATION	0.9999892447804413	WITHOUT_CLASSIFICATION	1.07552195587748E-5	DEFECT
// SHAPES VISIBLE	WITHOUT_CLASSIFICATION	0.9999810246883253	WITHOUT_CLASSIFICATION	1.897531167468567E-5	DEFECT
// SHAPES FILLED	WITHOUT_CLASSIFICATION	0.9999218148929939	WITHOUT_CLASSIFICATION	7.818510700613556E-5	DEFECT
// do nothing if item is not visible	WITHOUT_CLASSIFICATION	0.9999895885803238	WITHOUT_CLASSIFICATION	1.0411419676251798E-5	DEFECT
// collect entity and tool tip information...	WITHOUT_CLASSIFICATION	0.9999429938483338	WITHOUT_CLASSIFICATION	5.700615166615229E-5	DEFECT
// Get the item count for the series, so that we can know which is the // end of the series.	WITHOUT_CLASSIFICATION	0.9999999897808294	WITHOUT_CLASSIFICATION	1.021917063691339E-8	DEFECT
// get the previous data point...	WITHOUT_CLASSIFICATION	0.9999762225359872	WITHOUT_CLASSIFICATION	2.377746401282216E-5	DEFECT
// Add each point to Area (x, y)	WITHOUT_CLASSIFICATION	0.9999953182904104	WITHOUT_CLASSIFICATION	4.681709589589093E-6	DEFECT
// Add the last point (x,0)	WITHOUT_CLASSIFICATION	0.999999299044934	WITHOUT_CLASSIFICATION	7.009550659835248E-7	DEFECT
// Add the last point (x,0)	WITHOUT_CLASSIFICATION	0.999999299044934	WITHOUT_CLASSIFICATION	7.009550659835248E-7	DEFECT
// add another value	WITHOUT_CLASSIFICATION	0.9999996545114539	WITHOUT_CLASSIFICATION	3.454885461400232E-7	DEFECT
// in the rendering process, there is special handling for item // zero, so we can't support processing of visible data items only	WITHOUT_CLASSIFICATION	0.9999997887252456	WITHOUT_CLASSIFICATION	2.112747543825539E-7	DEFECT
// The first point is (x, 0)	WITHOUT_CLASSIFICATION	0.9999980538003164	WITHOUT_CLASSIFICATION	1.946199683715308E-6	DEFECT
//  Fill the polygon	WITHOUT_CLASSIFICATION	0.9997048740057495	WITHOUT_CLASSIFICATION	2.951259942505657E-4	DEFECT
//  Draw an outline around the Area.	WITHOUT_CLASSIFICATION	0.9999952053887026	WITHOUT_CLASSIFICATION	4.794611297365381E-6	DEFECT
// first pass draws the background (lines, for instance)	WITHOUT_CLASSIFICATION	0.9999980779808922	WITHOUT_CLASSIFICATION	1.9220191076791798E-6	DEFECT
//labelLinkPaint;	WITHOUT_CLASSIFICATION	0.9999987370586106	WITHOUT_CLASSIFICATION	1.262941389264191E-6	DEFECT
// only draw if we have good values	WITHOUT_CLASSIFICATION	0.9999960346860223	WITHOUT_CLASSIFICATION	3.9653139776752896E-6	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9999955225021957	WITHOUT_CLASSIFICATION	4.4774978043964495E-6	DEFECT
// get the data points	WITHOUT_CLASSIFICATION	0.9999998812537673	WITHOUT_CLASSIFICATION	1.1874623272073792E-7	DEFECT
// draw the item label if there is one...	WITHOUT_CLASSIFICATION	0.9999930235229004	WITHOUT_CLASSIFICATION	6.976477099506655E-6	DEFECT
// second pass adds shapes where the items are ..	WITHOUT_CLASSIFICATION	0.9999627232049271	WITHOUT_CLASSIFICATION	3.7276795072957186E-5	DEFECT
// Add points from last series to complete the base of the // polygon	WITHOUT_CLASSIFICATION	0.9999987589065421	WITHOUT_CLASSIFICATION	1.2410934578204867E-6	DEFECT
// On second pass render shapes and collect entity and tooltip // information	WITHOUT_CLASSIFICATION	0.9999573885093662	WITHOUT_CLASSIFICATION	4.26114906337487E-5	DEFECT
// update path to reflect latest point	WITHOUT_CLASSIFICATION	0.9999983100589219	WITHOUT_CLASSIFICATION	1.6899410780465653E-6	DEFECT
// if this is the last item, draw the path ...	WITHOUT_CLASSIFICATION	0.999998727312099	WITHOUT_CLASSIFICATION	1.27268790102518E-6	DEFECT
// draw path	WITHOUT_CLASSIFICATION	0.9999988362271542	WITHOUT_CLASSIFICATION	1.163772845737779E-6	DEFECT
// Collect points	WITHOUT_CLASSIFICATION	0.9999994087519275	WITHOUT_CLASSIFICATION	5.912480725646403E-7	DEFECT
// construct path	WITHOUT_CLASSIFICATION	0.9999998140250833	WITHOUT_CLASSIFICATION	1.8597491658318195E-7	DEFECT
// we need at least two points to draw something	WITHOUT_CLASSIFICATION	0.9999994336992872	WITHOUT_CLASSIFICATION	5.663007127708312E-7	DEFECT
// we need at least 3 points to spline. Draw simple line // for two points	WITHOUT_CLASSIFICATION	0.9999998967214221	WITHOUT_CLASSIFICATION	1.0327857794701053E-7	DEFECT
// construct spline // number of points // Newton form coefficients // x-coordinates of nodes	WITHOUT_CLASSIFICATION	0.9999999965209009	WITHOUT_CLASSIFICATION	3.479099017520818E-9	DEFECT
// note that a[0]=a[np-1]=0	WITHOUT_CLASSIFICATION	0.9999998647066535	WITHOUT_CLASSIFICATION	1.352933465506501E-7	DEFECT
// loop over intervals between nodes	WITHOUT_CLASSIFICATION	0.999999565971521	WITHOUT_CLASSIFICATION	4.3402847908842676E-7	DEFECT
// we're running on JRE 1.3.1 so this is the best we have...	WITHOUT_CLASSIFICATION	0.9999957011523123	WITHOUT_CLASSIFICATION	4.298847687730763E-6	DEFECT
// both axes	WITHOUT_CLASSIFICATION	0.9999999552187651	WITHOUT_CLASSIFICATION	4.478123484323296E-8	DEFECT
// ITEM LABEL GENERATOR	WITHOUT_CLASSIFICATION	0.9999935856259347	WITHOUT_CLASSIFICATION	6.414374065247617E-6	DEFECT
// return the generator for ALL series, if there is one...	WITHOUT_CLASSIFICATION	0.9999937148183518	WITHOUT_CLASSIFICATION	6.28518164825397E-6	DEFECT
// return the generator for ALL series, if there is one...	WITHOUT_CLASSIFICATION	0.9999937148183518	WITHOUT_CLASSIFICATION	6.28518164825397E-6	DEFECT
// otherwise look up the generator table	WITHOUT_CLASSIFICATION	0.999999954690885	WITHOUT_CLASSIFICATION	4.530911507672241E-8	DEFECT
// otherwise look up the generator table	WITHOUT_CLASSIFICATION	0.999999954690885	WITHOUT_CLASSIFICATION	4.530911507672241E-8	DEFECT
// TOOL TIP GENERATOR	WITHOUT_CLASSIFICATION	0.9999850651858317	WITHOUT_CLASSIFICATION	1.4934814168335474E-5	DEFECT
// URL GENERATOR	WITHOUT_CLASSIFICATION	0.9999975170231041	WITHOUT_CLASSIFICATION	2.4829768958554765E-6	DEFECT
// clip top and bottom bounds to data area	WITHOUT_CLASSIFICATION	0.9999992684871248	WITHOUT_CLASSIFICATION	7.315128752111344E-7	DEFECT
// clip top and bottom bounds to data area	WITHOUT_CLASSIFICATION	0.9999992684871248	WITHOUT_CLASSIFICATION	7.315128752111344E-7	DEFECT
// now draw the outlines, if visible...	WITHOUT_CLASSIFICATION	0.9999998016660085	WITHOUT_CLASSIFICATION	1.9833399137470498E-7	DEFECT
// now draw the outlines, if visible...	WITHOUT_CLASSIFICATION	0.9999998016660085	WITHOUT_CLASSIFICATION	1.9833399137470498E-7	DEFECT
// PlotOrientation.HORIZONTAL	WITHOUT_CLASSIFICATION	0.999999168461065	WITHOUT_CLASSIFICATION	8.315389349878581E-7	DEFECT
// PlotOrientation.HORIZONTAL	WITHOUT_CLASSIFICATION	0.999999168461065	WITHOUT_CLASSIFICATION	8.315389349878581E-7	DEFECT
// work out the label anchor point...	WITHOUT_CLASSIFICATION	0.9986264139876465	WITHOUT_CLASSIFICATION	0.001373586012353582	DEFECT
// map a key to the default group	WITHOUT_CLASSIFICATION	0.9999993038772794	WITHOUT_CLASSIFICATION	6.961227205930516E-7	DEFECT
// Add last point @ y=0 for fillPath and close path	WITHOUT_CLASSIFICATION	0.9999997070606854	WITHOUT_CLASSIFICATION	2.9293931466218E-7	DEFECT
// fill under the curve...	WITHOUT_CLASSIFICATION	0.9999402700103458	WITHOUT_CLASSIFICATION	5.972998965423443E-5	DEFECT
// then draw the line...	WITHOUT_CLASSIFICATION	0.9999875665155847	WITHOUT_CLASSIFICATION	1.2433484415130087E-5	DEFECT
// reset points vector	WITHOUT_CLASSIFICATION	0.9999997009133399	WITHOUT_CLASSIFICATION	2.9908666008620473E-7	DEFECT
/*      factorization and forward substitution */	WITHOUT_CLASSIFICATION	0.9999998365200092	WITHOUT_CLASSIFICATION	1.63479990791077E-7	DEFECT
// now draw the real shape	WITHOUT_CLASSIFICATION	0.9999998804524493	WITHOUT_CLASSIFICATION	1.195475507289807E-7	DEFECT
// should never get here	WITHOUT_CLASSIFICATION	0.9999866032218988	WITHOUT_CLASSIFICATION	1.3396778101250351E-5	DEFECT
// 'plot' : just retain reference, not a deep copy	WITHOUT_CLASSIFICATION	0.9999996492547796	WITHOUT_CLASSIFICATION	3.507452203508337E-7	DEFECT
// just the domain axis...	WITHOUT_CLASSIFICATION	0.9999999890288843	WITHOUT_CLASSIFICATION	1.0971115547588418E-8	DEFECT
// just the range axis...	WITHOUT_CLASSIFICATION	0.9999999254166593	WITHOUT_CLASSIFICATION	7.458334067226348E-8	DEFECT
// get the label position..	WITHOUT_CLASSIFICATION	0.999998474841703	WITHOUT_CLASSIFICATION	1.5251582970653505E-6	DEFECT
// do nothing if item is not visible	WITHOUT_CLASSIFICATION	0.9999895885803238	WITHOUT_CLASSIFICATION	1.0411419676251798E-5	DEFECT
// draw the item label if there is one...	WITHOUT_CLASSIFICATION	0.9999930235229004	WITHOUT_CLASSIFICATION	6.976477099506655E-6	DEFECT
// collect entity and tool tip information...	WITHOUT_CLASSIFICATION	0.9999429938483338	WITHOUT_CLASSIFICATION	5.700615166615229E-5	DEFECT
// get the previous data point...	WITHOUT_CLASSIFICATION	0.9999762225359872	WITHOUT_CLASSIFICATION	2.377746401282216E-5	DEFECT
// Add each point to Area (x, y)	WITHOUT_CLASSIFICATION	0.9999953182904104	WITHOUT_CLASSIFICATION	4.681709589589093E-6	DEFECT
// vertical orientation	WITHOUT_CLASSIFICATION	0.9999955338389548	WITHOUT_CLASSIFICATION	4.466161045146375E-6	DEFECT
// in the rendering process, there is special handling for item // zero, so we can't support processing of visible data items only	WITHOUT_CLASSIFICATION	0.9999997887252456	WITHOUT_CLASSIFICATION	2.112747543825539E-7	DEFECT
// this represents the situation // for drawing a horizontal bar.	WITHOUT_CLASSIFICATION	0.9999864118593663	WITHOUT_CLASSIFICATION	1.3588140633760131E-5	DEFECT
//this handles the need to perform a 'step'.	WITHOUT_CLASSIFICATION	0.9999999611119504	WITHOUT_CLASSIFICATION	3.8888049535278914E-8	DEFECT
// calculate the step point	WITHOUT_CLASSIFICATION	0.9999999296606457	WITHOUT_CLASSIFICATION	7.033935440751114E-8	DEFECT
//this handles the need to perform a 'step'. // calculate the step point	WITHOUT_CLASSIFICATION	0.9999999887948522	WITHOUT_CLASSIFICATION	1.1205147737034268E-8	DEFECT
// submit this data item as a candidate for the crosshair point	WITHOUT_CLASSIFICATION	0.9999987763655139	WITHOUT_CLASSIFICATION	1.2236344860486336E-6	DEFECT
// create a new area polygon for the series	WITHOUT_CLASSIFICATION	0.9999973902486147	WITHOUT_CLASSIFICATION	2.609751385267692E-6	DEFECT
// the first point is (x, 0)	WITHOUT_CLASSIFICATION	0.9999975183095937	WITHOUT_CLASSIFICATION	2.48169040625133E-6	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9999955225021957	WITHOUT_CLASSIFICATION	4.4774978043964495E-6	DEFECT
// otherwise look up the paint table	WITHOUT_CLASSIFICATION	0.9999999799461856	WITHOUT_CLASSIFICATION	2.005381441121944E-8	DEFECT
// SHAPES FILLED	WITHOUT_CLASSIFICATION	0.9999218148929939	WITHOUT_CLASSIFICATION	7.818510700613556E-5	DEFECT
// return the overall setting, if there is one...	WITHOUT_CLASSIFICATION	0.9999997314690883	WITHOUT_CLASSIFICATION	2.685309117607736E-7	DEFECT
// draw the outline...	WITHOUT_CLASSIFICATION	0.9999940291563242	WITHOUT_CLASSIFICATION	5.970843675737413E-6	DEFECT
// && state.getBarWidth() > BAR_OUTLINE_WIDTH_THRESHOLD) {	WITHOUT_CLASSIFICATION	0.9999996860508858	WITHOUT_CLASSIFICATION	3.1394911409402435E-7	DEFECT
// no fields to compute...	WITHOUT_CLASSIFICATION	0.9999879579463845	WITHOUT_CLASSIFICATION	1.204205361556088E-5	DEFECT
// Add the last point (x,0)	WITHOUT_CLASSIFICATION	0.999999299044934	WITHOUT_CLASSIFICATION	7.009550659835248E-7	DEFECT
// draw an outline around the Area.	WITHOUT_CLASSIFICATION	0.9999974491225304	WITHOUT_CLASSIFICATION	2.5508774695768077E-6	DEFECT
// Check if the item is the last item for the series. // and number of items > 0.  We can't draw an area for a single point.	WITHOUT_CLASSIFICATION	0.9999999774415745	WITHOUT_CLASSIFICATION	2.255842548448562E-8	DEFECT
// a new map always has 1 group (the default group)	WITHOUT_CLASSIFICATION	0.9999997807578889	WITHOUT_CLASSIFICATION	2.1924211111677673E-7	DEFECT
// we make the clip region slightly larger than the // dataArea so that the clipped edges don't show lines // on the chart	WITHOUT_CLASSIFICATION	0.9995724667085746	WITHOUT_CLASSIFICATION	4.275332914254434E-4	DEFECT
// no change	WITHOUT_CLASSIFICATION	0.99999998321964	WITHOUT_CLASSIFICATION	1.6780360000021647E-8	DEFECT
// here we use BooleanUtilities to remain compatible with JDKs < 1.4	WITHOUT_CLASSIFICATION	0.9999972306232107	WITHOUT_CLASSIFICATION	2.76937678940867E-6	DEFECT
// need to make sure we are adding *after* any duplicates	WITHOUT_CLASSIFICATION	0.9999997392855272	WITHOUT_CLASSIFICATION	2.6071447276134607E-7	DEFECT
// update the max value	WITHOUT_CLASSIFICATION	0.9999997076173779	WITHOUT_CLASSIFICATION	2.9238262215030733E-7	DEFECT
// only draw if we have good values	WITHOUT_CLASSIFICATION	0.9999960346860223	WITHOUT_CLASSIFICATION	3.9653139776752896E-6	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9999955225021957	WITHOUT_CLASSIFICATION	4.4774978043964495E-6	DEFECT
// draw the item label if there is one...	WITHOUT_CLASSIFICATION	0.9999930235229004	WITHOUT_CLASSIFICATION	6.976477099506655E-6	DEFECT
// handle a special case - if the bar colour has alpha == 0, it is // invisible so we shouldn't draw any shadow	WITHOUT_CLASSIFICATION	0.9999999747529905	WITHOUT_CLASSIFICATION	2.5247009485136784E-8	DEFECT
// get the previous data point...	WITHOUT_CLASSIFICATION	0.9999762225359872	WITHOUT_CLASSIFICATION	2.377746401282216E-5	DEFECT
// update path to reflect latest point	WITHOUT_CLASSIFICATION	0.9999983100589219	WITHOUT_CLASSIFICATION	1.6899410780465653E-6	DEFECT
// draw path	WITHOUT_CLASSIFICATION	0.9999988362271542	WITHOUT_CLASSIFICATION	1.163772845737779E-6	DEFECT
// we are starting a new series path	WITHOUT_CLASSIFICATION	0.9999990948720247	WITHOUT_CLASSIFICATION	9.051279754318545E-7	DEFECT
// only draw a line if the gap between the current and // previous data point is within the threshold	WITHOUT_CLASSIFICATION	0.9999998034210379	WITHOUT_CLASSIFICATION	1.965789620738731E-7	DEFECT
// we needed to get this far even for invisible items, to ensure that // seriesPath updates happened, but now there is nothing more we need // to do for non-visible items...	WITHOUT_CLASSIFICATION	0.9999846581735822	WITHOUT_CLASSIFICATION	1.5341826417864237E-5	DEFECT
// this method must be overridden if you want to display images	WITHOUT_CLASSIFICATION	0.9999999633919666	WITHOUT_CLASSIFICATION	3.660803338536009E-8	DEFECT
// draw the upper shadow	WITHOUT_CLASSIFICATION	0.9999953216578249	WITHOUT_CLASSIFICATION	4.678342175076004E-6	DEFECT
// draw the lower shadow	WITHOUT_CLASSIFICATION	0.9999987077243273	WITHOUT_CLASSIFICATION	1.292275672667628E-6	DEFECT
// draw the body	WITHOUT_CLASSIFICATION	0.9999976061902422	WITHOUT_CLASSIFICATION	2.3938097577470322E-6	DEFECT
// add an entity for the item...	WITHOUT_CLASSIFICATION	0.9999495881493805	WITHOUT_CLASSIFICATION	5.0411850619468914E-5	DEFECT
// add an entity for the item...	WITHOUT_CLASSIFICATION	0.9999495881493805	WITHOUT_CLASSIFICATION	5.0411850619468914E-5	DEFECT
// draw the upper shadow	WITHOUT_CLASSIFICATION	0.9999953216578249	WITHOUT_CLASSIFICATION	4.678342175076004E-6	DEFECT
//////////////////////////////////////////////////////////////////////////// // PROTECTED METHODS // These provide the opportunity to subclass the standard renderer and // create custom effects. ////////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999924952783729	WITHOUT_CLASSIFICATION	7.504721627163257E-6	DEFECT
// draw the lower shadow	WITHOUT_CLASSIFICATION	0.9999987077243273	WITHOUT_CLASSIFICATION	1.292275672667628E-6	DEFECT
// draw the body	WITHOUT_CLASSIFICATION	0.9999976061902422	WITHOUT_CLASSIFICATION	2.3938097577470322E-6	DEFECT
// draw median	WITHOUT_CLASSIFICATION	0.9999991055730098	WITHOUT_CLASSIFICATION	8.94426990234256E-7	DEFECT
// draw average - SPECIAL AIMS REQUIREMENT	WITHOUT_CLASSIFICATION	0.9999995390219621	WITHOUT_CLASSIFICATION	4.6097803779797064E-7	DEFECT
// draw average - SPECIAL AIMS REQUIREMENT	WITHOUT_CLASSIFICATION	0.9999995390219621	WITHOUT_CLASSIFICATION	4.6097803779797064E-7	DEFECT
// here we check that the average marker will in fact be visible // before drawing it...	WITHOUT_CLASSIFICATION	0.9999884171694822	WITHOUT_CLASSIFICATION	1.1582830517827464E-5	DEFECT
// yOutliers can be null, but we'd prefer it to be an empty list in // that case...	WITHOUT_CLASSIFICATION	0.9999968263019403	WITHOUT_CLASSIFICATION	3.1736980597195787E-6	DEFECT
/* From outlier array sort out which are outliers and put these into         * an arraylist. If there are any farouts, set the flag on the         * OutlierListCollection         */	WITHOUT_CLASSIFICATION	0.9999999696097276	WITHOUT_CLASSIFICATION	3.039027237776415E-8	DEFECT
// draw yOutliers	WITHOUT_CLASSIFICATION	0.9999997585473754	WITHOUT_CLASSIFICATION	2.4145262454486276E-7	DEFECT
// draw outliers	WITHOUT_CLASSIFICATION	0.9999997417224226	WITHOUT_CLASSIFICATION	2.582775774278247E-7	DEFECT
// draw farout	WITHOUT_CLASSIFICATION	0.9999929017227751	WITHOUT_CLASSIFICATION	7.0982772248759335E-6	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999712098698399	WITHOUT_CLASSIFICATION	2.8790130160057927E-5	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999712098698399	WITHOUT_CLASSIFICATION	2.8790130160057927E-5	DEFECT
// add an entity for the item...	WITHOUT_CLASSIFICATION	0.9999495881493805	WITHOUT_CLASSIFICATION	5.0411850619468914E-5	DEFECT
// get the previous data point...	WITHOUT_CLASSIFICATION	0.9999762225359872	WITHOUT_CLASSIFICATION	2.377746401282216E-5	DEFECT
// here we check that the average marker will in fact be visible // before drawing it...	WITHOUT_CLASSIFICATION	0.9999884171694822	WITHOUT_CLASSIFICATION	1.1582830517827464E-5	DEFECT
/* Number n = */	WITHOUT_CLASSIFICATION	0.9999966825110397	WITHOUT_CLASSIFICATION	3.317488960373301E-6	DEFECT
// Process outliers. Each outlier is either added to the appropriate // outlier list or a new outlier list is made	WITHOUT_CLASSIFICATION	0.9999999569436953	WITHOUT_CLASSIFICATION	4.3056304756748046E-8	DEFECT
// for item labels, we have a special case because there is the // possibility to draw (a) the regular item label near to just the // upper y-value, or (b) the regular item label near the upper y-value // PLUS an additional item label near the lower y-value.	WITHOUT_CLASSIFICATION	0.9999999981320326	WITHOUT_CLASSIFICATION	1.8679674271551807E-9	DEFECT
// If null, don't draw line => then delegate to parent	WITHOUT_CLASSIFICATION	0.9999688306754324	WITHOUT_CLASSIFICATION	3.1169324567590366E-5	DEFECT
// If null, don't draw line at all	WITHOUT_CLASSIFICATION	0.9999653963475786	WITHOUT_CLASSIFICATION	3.460365242129698E-5	DEFECT
// Now split the segment as needed	WITHOUT_CLASSIFICATION	0.9999998517309652	WITHOUT_CLASSIFICATION	1.4826903490512726E-7	DEFECT
// If the segment must be splitted, insert a new point // Strict test forces to have real segments (not 2 equal points) // and avoids division by 0	WITHOUT_CLASSIFICATION	0.9999999554047404	WITHOUT_CLASSIFICATION	4.459525948804272E-8	DEFECT
// If the line is not wrapping, then parent is OK	WITHOUT_CLASSIFICATION	0.9993829109907665	WITHOUT_CLASSIFICATION	6.170890092335922E-4	DEFECT
// calculate the highest volume in the dataset...	WITHOUT_CLASSIFICATION	0.9999928492715434	WITHOUT_CLASSIFICATION	7.150728456616346E-6	DEFECT
/* Number n = */	WITHOUT_CLASSIFICATION	0.9999966825110397	WITHOUT_CLASSIFICATION	3.317488960373301E-6	DEFECT
/* Number n = */	WITHOUT_CLASSIFICATION	0.9999966825110397	WITHOUT_CLASSIFICATION	3.317488960373301E-6	DEFECT
/* Number n = */	WITHOUT_CLASSIFICATION	0.9999966825110397	WITHOUT_CLASSIFICATION	3.317488960373301E-6	DEFECT
/* Number n = */	WITHOUT_CLASSIFICATION	0.9999966825110397	WITHOUT_CLASSIFICATION	3.317488960373301E-6	DEFECT
// do nothing if item is not visible	WITHOUT_CLASSIFICATION	0.9999895885803238	WITHOUT_CLASSIFICATION	1.0411419676251798E-5	DEFECT
// PlotOrientation.HORIZONTAL	WITHOUT_CLASSIFICATION	0.999999168461065	WITHOUT_CLASSIFICATION	8.315389349878581E-7	DEFECT
// draw the outline...	WITHOUT_CLASSIFICATION	0.9999940291563242	WITHOUT_CLASSIFICATION	5.970843675737413E-6	DEFECT
// as a special case, if the bar colour has alpha == 0, we draw // nothing.	WITHOUT_CLASSIFICATION	0.9999999860616949	WITHOUT_CLASSIFICATION	1.3938304980974772E-8	DEFECT
// update path to reflect latest point	WITHOUT_CLASSIFICATION	0.9999983100589219	WITHOUT_CLASSIFICATION	1.6899410780465653E-6	DEFECT
// if this is the last item, draw the path ...	WITHOUT_CLASSIFICATION	0.999998727312099	WITHOUT_CLASSIFICATION	1.27268790102518E-6	DEFECT
// draw path	WITHOUT_CLASSIFICATION	0.9999988362271542	WITHOUT_CLASSIFICATION	1.163772845737779E-6	DEFECT
// transpose the dimensions, because the title is rotated	WITHOUT_CLASSIFICATION	0.9999993369447695	WITHOUT_CLASSIFICATION	6.63055230615777E-7	DEFECT
// The split may occur in either x splitted segments, if any, but // not in both	WITHOUT_CLASSIFICATION	0.9999714910346252	WITHOUT_CLASSIFICATION	2.8508965374717125E-5	DEFECT
// the x value is not within the axis range	WITHOUT_CLASSIFICATION	0.9996751761366797	WITHOUT_CLASSIFICATION	3.248238633203394E-4	DEFECT
// not a HighLowDataset, so just draw a line connecting this point // with the previous point...	WITHOUT_CLASSIFICATION	0.9999978123813561	WITHOUT_CLASSIFICATION	2.187618643937632E-6	DEFECT
// include the interval if there is one	WITHOUT_CLASSIFICATION	0.9999999945546604	WITHOUT_CLASSIFICATION	5.445339617270914E-9	DEFECT
// include the interval if there is one	WITHOUT_CLASSIFICATION	0.9999999945546604	WITHOUT_CLASSIFICATION	5.445339617270914E-9	DEFECT
// draw the error bar for the x-interval	WITHOUT_CLASSIFICATION	0.9999968341694885	WITHOUT_CLASSIFICATION	3.165830511564006E-6	DEFECT
// draw the error bar for the y-interval	WITHOUT_CLASSIFICATION	0.9999955697619803	WITHOUT_CLASSIFICATION	4.430238019630622E-6	DEFECT
//domainGridlinePaint;	WITHOUT_CLASSIFICATION	0.9999992744747193	WITHOUT_CLASSIFICATION	7.255252807808869E-7	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9999955225021957	WITHOUT_CLASSIFICATION	4.4774978043964495E-6	DEFECT
// add an entity for the item...	WITHOUT_CLASSIFICATION	0.9999495881493805	WITHOUT_CLASSIFICATION	5.0411850619468914E-5	DEFECT
// get the previous point and the next point so we can calculate a // "hot spot" for the area (used by the chart entity)...	WITHOUT_CLASSIFICATION	0.9999997095795383	WITHOUT_CLASSIFICATION	2.9042046157722834E-7	DEFECT
// do nothing if item is not visible	WITHOUT_CLASSIFICATION	0.9999895885803238	WITHOUT_CLASSIFICATION	1.0411419676251798E-5	DEFECT
// no new methods	WITHOUT_CLASSIFICATION	0.9999999676599545	WITHOUT_CLASSIFICATION	3.234004548363538E-8	DEFECT
// set the default item label positions, which will only be used if // the user requests visible item labels...	WITHOUT_CLASSIFICATION	0.9999995658131156	WITHOUT_CLASSIFICATION	4.3418688440064073E-7	DEFECT
// handle item label drawing, now that we know all the bars have // been drawn...	WITHOUT_CLASSIFICATION	0.9999975307945332	WITHOUT_CLASSIFICATION	2.469205466804045E-6	DEFECT
// if the renderer isn't assigned to a plot, then we don't have a // dataset...	WITHOUT_CLASSIFICATION	0.9995236964675617	WITHOUT_CLASSIFICATION	4.76303532438337E-4	DEFECT
//initalize xValues, yValues, and zValues arrays.	WITHOUT_CLASSIFICATION	0.9999986095179324	WITHOUT_CLASSIFICATION	1.3904820675320272E-6	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9999955225021957	WITHOUT_CLASSIFICATION	4.4774978043964495E-6	DEFECT
// add an entity for the item...	WITHOUT_CLASSIFICATION	0.9999495881493805	WITHOUT_CLASSIFICATION	5.0411850619468914E-5	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.999993660111925	WITHOUT_CLASSIFICATION	6.339888074945912E-6	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.999993660111925	WITHOUT_CLASSIFICATION	6.339888074945912E-6	DEFECT
// handle positive value	WITHOUT_CLASSIFICATION	0.999999961908288	WITHOUT_CLASSIFICATION	3.809171194953694E-8	DEFECT
// LEFT POLYGON	WITHOUT_CLASSIFICATION	0.9999990896755366	WITHOUT_CLASSIFICATION	9.103244634419692E-7	DEFECT
// RIGHT POLYGON	WITHOUT_CLASSIFICATION	0.9999894157315298	WITHOUT_CLASSIFICATION	1.0584268470239533E-5	DEFECT
// RIGHT POLYGON	WITHOUT_CLASSIFICATION	0.9999894157315298	WITHOUT_CLASSIFICATION	1.0584268470239533E-5	DEFECT
// handle negative value	WITHOUT_CLASSIFICATION	0.9999999439382032	WITHOUT_CLASSIFICATION	5.60617968711807E-8	DEFECT
// clip left and right bounds to data area	WITHOUT_CLASSIFICATION	0.9999907251965197	WITHOUT_CLASSIFICATION	9.274803480312802E-6	DEFECT
// clip top and bottom bounds to data area	WITHOUT_CLASSIFICATION	0.9999992684871248	WITHOUT_CLASSIFICATION	7.315128752111344E-7	DEFECT
// work out the label anchor point...	WITHOUT_CLASSIFICATION	0.9986264139876465	WITHOUT_CLASSIFICATION	0.001373586012353582	DEFECT
//  Get series Paint and Stroke	WITHOUT_CLASSIFICATION	0.9999728019511642	WITHOUT_CLASSIFICATION	2.719804883570719E-5	DEFECT
/* Number n = */	WITHOUT_CLASSIFICATION	0.9999966825110397	WITHOUT_CLASSIFICATION	3.317488960373301E-6	DEFECT
// is there an alignment adjustment to be made?	WITHOUT_CLASSIFICATION	0.9999995031983812	WITHOUT_CLASSIFICATION	4.968016188958382E-7	DEFECT
// update the crosshair point	WITHOUT_CLASSIFICATION	0.999999858920509	WITHOUT_CLASSIFICATION	1.41079491008145E-7	DEFECT
// calculate the maximum allowed candle width from the axis...	WITHOUT_CLASSIFICATION	0.9999996835513656	WITHOUT_CLASSIFICATION	3.164486343899328E-7	DEFECT
// Absolute value, since the relative x // positions are reversed for horizontal orientation	WITHOUT_CLASSIFICATION	0.9999999884007046	WITHOUT_CLASSIFICATION	1.1599295363077298E-8	DEFECT
/* Number n = */	WITHOUT_CLASSIFICATION	0.9999966825110397	WITHOUT_CLASSIFICATION	3.317488960373301E-6	DEFECT
// pdfDocument class will be null so the function will return false	WITHOUT_CLASSIFICATION	0.9999997687604574	WITHOUT_CLASSIFICATION	2.312395427163295E-7	DEFECT
// add an entity for the item...	WITHOUT_CLASSIFICATION	0.9999495881493805	WITHOUT_CLASSIFICATION	5.0411850619468914E-5	DEFECT
// draw the upper shadow	WITHOUT_CLASSIFICATION	0.9999953216578249	WITHOUT_CLASSIFICATION	4.678342175076004E-6	DEFECT
// draw the lower shadow	WITHOUT_CLASSIFICATION	0.9999987077243273	WITHOUT_CLASSIFICATION	1.292275672667628E-6	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.999993660111925	WITHOUT_CLASSIFICATION	6.339888074945912E-6	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.999993660111925	WITHOUT_CLASSIFICATION	6.339888074945912E-6	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.999993660111925	WITHOUT_CLASSIFICATION	6.339888074945912E-6	DEFECT
// draw the body	WITHOUT_CLASSIFICATION	0.9999976061902422	WITHOUT_CLASSIFICATION	2.3938097577470322E-6	DEFECT
// this won't happen :)	WITHOUT_CLASSIFICATION	0.9827201715637258	WITHOUT_CLASSIFICATION	0.017279828436274153	DEFECT
// --- DEPRECATED CODE ----------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999958279584533	WITHOUT_CLASSIFICATION	4.172041546660842E-6	DEFECT
// create the temporary directory if it doesn't exist	WITHOUT_CLASSIFICATION	0.9999994077589378	WITHOUT_CLASSIFICATION	5.922410622201077E-7	DEFECT
//  Add chart to deletion list in session	WITHOUT_CLASSIFICATION	0.999999972528208	WITHOUT_CLASSIFICATION	2.7471791920883562E-8	DEFECT
//  Set HTTP headers	WITHOUT_CLASSIFICATION	0.9999994139979734	WITHOUT_CLASSIFICATION	5.860020266350008E-7	DEFECT
//  Replace ".." with "" //  This is to prevent access to the rest of the file system	WITHOUT_CLASSIFICATION	0.9999770974288428	WITHOUT_CLASSIFICATION	2.2902571157166957E-5	DEFECT
//  Check the file exists	WITHOUT_CLASSIFICATION	0.9999996388950592	WITHOUT_CLASSIFICATION	3.611049408535905E-7	DEFECT
//  Serve it up	WITHOUT_CLASSIFICATION	0.9999977507081703	WITHOUT_CLASSIFICATION	2.2492918297164257E-6	DEFECT
// draw the block without collecting entities	WITHOUT_CLASSIFICATION	0.999996627226514	WITHOUT_CLASSIFICATION	3.3727734860189162E-6	DEFECT
// RectangleInsets is immutable => same reference in clone OK	WITHOUT_CLASSIFICATION	0.9999876529637467	WITHOUT_CLASSIFICATION	1.2347036253280025E-5	DEFECT
// suppress compiler warning	WITHOUT_CLASSIFICATION	0.9999997307580195	WITHOUT_CLASSIFICATION	2.6924198041272075E-7	DEFECT
// suppress compiler warning	WITHOUT_CLASSIFICATION	0.9999997307580195	WITHOUT_CLASSIFICATION	2.6924198041272075E-7	DEFECT
// determine the space required for the axis	WITHOUT_CLASSIFICATION	0.999998728940927	WITHOUT_CLASSIFICATION	1.2710590729817613E-6	DEFECT
// transpose the dimensions, because the title is rotated	WITHOUT_CLASSIFICATION	0.9999993369447695	WITHOUT_CLASSIFICATION	6.63055230615777E-7	DEFECT
// basic check for independence	WITHOUT_CLASSIFICATION	0.9999999919902651	WITHOUT_CLASSIFICATION	8.009734868512009E-9	DEFECT
// don't bother with parsing	WITHOUT_CLASSIFICATION	0.9999681417919811	WITHOUT_CLASSIFICATION	3.185820801879642E-5	DEFECT
// don't bother with parsing	WITHOUT_CLASSIFICATION	0.9999681417919811	WITHOUT_CLASSIFICATION	3.185820801879642E-5	DEFECT
// no need to instantiate this class   	WITHOUT_CLASSIFICATION	0.9999887728091982	WITHOUT_CLASSIFICATION	1.1227190801842544E-5	DEFECT
//yAdj = -descent - leading + (float) bounds.getHeight();	WITHOUT_CLASSIFICATION	0.9999981513069779	WITHOUT_CLASSIFICATION	1.8486930220431676E-6	DEFECT
// svgClass will be null so the function will return false	WITHOUT_CLASSIFICATION	0.9999998066442104	WITHOUT_CLASSIFICATION	1.9335578959902485E-7	DEFECT
// basic check for independence	WITHOUT_CLASSIFICATION	0.9999999919902651	WITHOUT_CLASSIFICATION	8.009734868512009E-9	DEFECT
// basic check for independence	WITHOUT_CLASSIFICATION	0.9999999919902651	WITHOUT_CLASSIFICATION	8.009734868512009E-9	DEFECT
// basic check for independence	WITHOUT_CLASSIFICATION	0.9999999919902651	WITHOUT_CLASSIFICATION	8.009734868512009E-9	DEFECT
// argument checking delegated...	WITHOUT_CLASSIFICATION	0.9999999658737975	WITHOUT_CLASSIFICATION	3.412620247568581E-8	DEFECT
// don't bother with parsing	WITHOUT_CLASSIFICATION	0.9999681417919811	WITHOUT_CLASSIFICATION	3.185820801879642E-5	DEFECT
// standard ResourceBundle behaviour	WITHOUT_CLASSIFICATION	0.9999997600257168	WITHOUT_CLASSIFICATION	2.399742832859752E-7	DEFECT
// update (x1, y1), (x2, y2) and f1 and f2 using intersections // then recheck	WITHOUT_CLASSIFICATION	0.9999613415503311	WITHOUT_CLASSIFICATION	3.8658449668943724E-5	DEFECT
// first point is outside, so we update it against one of the // four sides then continue	WITHOUT_CLASSIFICATION	0.9999999688690734	WITHOUT_CLASSIFICATION	3.1130926557357604E-8	DEFECT
// second point is outside, so we update it against one of the // four sides then continue	WITHOUT_CLASSIFICATION	0.9999999045456195	WITHOUT_CLASSIFICATION	9.545438045000917E-8	DEFECT
// the line is visible - if it wasn't, we'd have // returned false from within the while loop above	WITHOUT_CLASSIFICATION	0.9999999954550741	WITHOUT_CLASSIFICATION	4.5449259362277645E-9	DEFECT
/*                 * Lots can go wrong while fiddling with Images, Color Models                 * & such!  If anything at all goes awry, just return the original                 * TexturePaint.  (TexturePaint's are immutable anyway, so no harm                 * done)                 */	WITHOUT_CLASSIFICATION	0.9999999929344681	WITHOUT_CLASSIFICATION	7.065531911619039E-9	DEFECT
/* Placeholder */	WITHOUT_CLASSIFICATION	0.9999950185439149	WITHOUT_CLASSIFICATION	4.981456085135187E-6	DEFECT
/**/	WITHOUT_CLASSIFICATION	0.9977822159022475	WITHOUT_CLASSIFICATION	0.0022177840977525994	DEFECT
/**/	WITHOUT_CLASSIFICATION	0.9977822159022475	WITHOUT_CLASSIFICATION	0.0022177840977525994	DEFECT
/**/	WITHOUT_CLASSIFICATION	0.9977822159022475	WITHOUT_CLASSIFICATION	0.0022177840977525994	DEFECT
/* (pix-buffer is large enough for all pixels of one row) */	WITHOUT_CLASSIFICATION	0.9998241768640398	WITHOUT_CLASSIFICATION	1.7582313596026337E-4	DEFECT
// RGB (+ optional Alpha which we leave // unchanged)	WITHOUT_CLASSIFICATION	0.999999257397693	WITHOUT_CLASSIFICATION	7.426023069566131E-7	DEFECT
// Red // Green // Blue. Now map computed colour to // nearest in Palette...	WITHOUT_CLASSIFICATION	0.9997981587819581	WITHOUT_CLASSIFICATION	2.0184121804198938E-4	DEFECT
// Red // Green // Blue	WITHOUT_CLASSIFICATION	0.9999784756275326	WITHOUT_CLASSIFICATION	2.152437246739373E-5	DEFECT
/* Ignore alpha-channel -> */	WITHOUT_CLASSIFICATION	0.9999999894593286	WITHOUT_CLASSIFICATION	1.054067145950803E-8	DEFECT
// <- this is the code that actually COPIES the pixels	WITHOUT_CLASSIFICATION	0.9991740685471497	WITHOUT_CLASSIFICATION	8.259314528502197E-4	DEFECT
/*         * Buffered Images may have properties, but NEVER disclose them!         * Nevertheless, just in case someone implements getPropertyNames()         * one day...         */	WITHOUT_CLASSIFICATION	0.9999937277059575	WITHOUT_CLASSIFICATION	6.27229404253736E-6	DEFECT
// ALWAYS null	WITHOUT_CLASSIFICATION	0.9999885231176279	WITHOUT_CLASSIFICATION	1.1476882372111505E-5	DEFECT
// all methods are static, no need to instantiate	WITHOUT_CLASSIFICATION	0.9999999033094767	WITHOUT_CLASSIFICATION	9.669052334388258E-8	DEFECT
// substitute the filtered URL list	WITHOUT_CLASSIFICATION	0.999999976776587	WITHOUT_CLASSIFICATION	2.3223413052656592E-8	DEFECT
// adjust text bounds to match string position	WITHOUT_CLASSIFICATION	0.9999999433126986	WITHOUT_CLASSIFICATION	5.668730140831589E-8	DEFECT
// horizontal pass	WITHOUT_CLASSIFICATION	0.9999860312949775	WITHOUT_CLASSIFICATION	1.396870502244033E-5	DEFECT
// substract the oldest pixel from the sum	WITHOUT_CLASSIFICATION	0.9999999630859002	WITHOUT_CLASSIFICATION	3.691409980755564E-8	DEFECT
// substract the oldest pixel from the sum	WITHOUT_CLASSIFICATION	0.9999999630859002	WITHOUT_CLASSIFICATION	3.691409980755564E-8	DEFECT
// get the lastest pixel	WITHOUT_CLASSIFICATION	0.9999996042466116	WITHOUT_CLASSIFICATION	3.9575338844782864E-7	DEFECT
// get the lastest pixel	WITHOUT_CLASSIFICATION	0.9999996042466116	WITHOUT_CLASSIFICATION	3.9575338844782864E-7	DEFECT
// vertical pass	WITHOUT_CLASSIFICATION	0.9999878573262633	WITHOUT_CLASSIFICATION	1.2142673736814248E-5	DEFECT
//get the coordinates of the original GradientPaint	WITHOUT_CLASSIFICATION	0.9999998550257698	WITHOUT_CLASSIFICATION	1.4497423017751116E-7	DEFECT
//get the coordinates of the shape that is to be filled	WITHOUT_CLASSIFICATION	0.9999991958652241	WITHOUT_CLASSIFICATION	8.041347758489935E-7	DEFECT
//reserve variables to store the coordinates of the resulting GradientPaint	WITHOUT_CLASSIFICATION	0.9999999879039596	WITHOUT_CLASSIFICATION	1.2096040467036324E-8	DEFECT
//start point is upper left corner	WITHOUT_CLASSIFICATION	0.999975486347733	WITHOUT_CLASSIFICATION	2.4513652267054107E-5	DEFECT
//end point is lower right corner --> diagonal gradient	WITHOUT_CLASSIFICATION	0.9999556184891233	WITHOUT_CLASSIFICATION	4.43815108766714E-5	DEFECT
//start point is lower left right corner --> diagonal gradient	WITHOUT_CLASSIFICATION	0.9999793472530069	WITHOUT_CLASSIFICATION	2.0652746993062748E-5	DEFECT
// delegate argument checking to XYDataItem...	WITHOUT_CLASSIFICATION	0.9999984136120428	WITHOUT_CLASSIFICATION	1.5863879572170355E-6	DEFECT
//end point is either lower left corner --> vertical gradient //or end point is upper right corner --> horizontal gradient	WITHOUT_CLASSIFICATION	0.9998904442956389	WITHOUT_CLASSIFICATION	1.0955570436107042E-4	DEFECT
// can't allow duplicate values, so we need to check whether // there is an item with the given x-value already	WITHOUT_CLASSIFICATION	0.9999997423027334	WITHOUT_CLASSIFICATION	2.5769726670757265E-7	DEFECT
// it is too slow to look at every data item, so let's just look at // the first, middle and last items...	WITHOUT_CLASSIFICATION	0.9999999575923868	WITHOUT_CLASSIFICATION	4.240761326767808E-8	DEFECT
// CASE 1 : Comparing to another ComparableObjectItem object // ---------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999976659908828	WITHOUT_CLASSIFICATION	2.3340091172861865E-6	DEFECT
// CASE 2 : Comparing to a general object // ---------------------------------------------	WITHOUT_CLASSIFICATION	0.9999226886804394	WITHOUT_CLASSIFICATION	7.731131956056085E-5	DEFECT
// consider these to be ordered after general objects	WITHOUT_CLASSIFICATION	0.9999938726798022	WITHOUT_CLASSIFICATION	6.1273201977568E-6	DEFECT
// the row may not have an entry for this key, in which case the // return value is null	WITHOUT_CLASSIFICATION	0.9999785840432757	WITHOUT_CLASSIFICATION	2.1415956724275843E-5	DEFECT
// check that the column key is defined in the 2D structure	WITHOUT_CLASSIFICATION	0.9999999943730372	WITHOUT_CLASSIFICATION	5.626962712506478E-9	DEFECT
// 1. check whether the row is now empty.	WITHOUT_CLASSIFICATION	0.9999962664410535	WITHOUT_CLASSIFICATION	3.7335589464502112E-6	DEFECT
// 1. check whether the row is now empty.	WITHOUT_CLASSIFICATION	0.9999962664410535	WITHOUT_CLASSIFICATION	3.7335589464502112E-6	DEFECT
// 2. check whether the column is now empty.	WITHOUT_CLASSIFICATION	0.9999984170542848	WITHOUT_CLASSIFICATION	1.5829457151664225E-6	DEFECT
// 2. check whether the column is now empty.	WITHOUT_CLASSIFICATION	0.9999984170542848	WITHOUT_CLASSIFICATION	1.5829457151664225E-6	DEFECT
//int columnIndex = getColumnIndex(columnKey);	WITHOUT_CLASSIFICATION	0.999968060969503	WITHOUT_CLASSIFICATION	3.19390304970916E-5	DEFECT
// for the keys, a shallow copy should be fine because keys // should be immutable...	WITHOUT_CLASSIFICATION	0.9999761359479499	WITHOUT_CLASSIFICATION	2.386405205014048E-5	DEFECT
// but the row data requires a deep copy	WITHOUT_CLASSIFICATION	0.999946561256692	WITHOUT_CLASSIFICATION	5.343874330803398E-5	DEFECT
// already know 'a' isn't null	WITHOUT_CLASSIFICATION	0.999998475938851	WITHOUT_CLASSIFICATION	1.5240611489871765E-6	DEFECT
// defer null argument check	WITHOUT_CLASSIFICATION	0.9999999962274889	WITHOUT_CLASSIFICATION	3.772511030685319E-9	DEFECT
// defer null argument check	WITHOUT_CLASSIFICATION	0.9999999962274889	WITHOUT_CLASSIFICATION	3.772511030685319E-9	DEFECT
// this will include the case where the underlying dataset is null	WITHOUT_CLASSIFICATION	0.999774142094032	WITHOUT_CLASSIFICATION	2.2585790596791488E-4	DEFECT
// this includes the case where the underlying dataset is null	WITHOUT_CLASSIFICATION	0.9999446454430903	WITHOUT_CLASSIFICATION	5.535455690977452E-5	DEFECT
// we didn't find the key	WITHOUT_CLASSIFICATION	0.9999985959229573	WITHOUT_CLASSIFICATION	1.4040770427033848E-6	DEFECT
// set up the category names...	WITHOUT_CLASSIFICATION	0.9999983033713793	WITHOUT_CLASSIFICATION	1.696628620722633E-6	DEFECT
// check arguments...	WITHOUT_CLASSIFICATION	0.9999999254985517	WITHOUT_CLASSIFICATION	7.450144835911272E-8	DEFECT
// fetch the value...	WITHOUT_CLASSIFICATION	0.9999959452989091	WITHOUT_CLASSIFICATION	4.054701090927699E-6	DEFECT
// does the series exist?	WITHOUT_CLASSIFICATION	0.9999887747165829	WITHOUT_CLASSIFICATION	1.1225283417139167E-5	DEFECT
// does the series exist?	WITHOUT_CLASSIFICATION	0.9999887747165829	WITHOUT_CLASSIFICATION	1.1225283417139167E-5	DEFECT
// is the category valid?	WITHOUT_CLASSIFICATION	0.999999457083359	WITHOUT_CLASSIFICATION	5.429166408868481E-7	DEFECT
// update the data...	WITHOUT_CLASSIFICATION	0.9999987680612731	WITHOUT_CLASSIFICATION	1.231938726876057E-6	DEFECT
// update the data...	WITHOUT_CLASSIFICATION	0.9999987680612731	WITHOUT_CLASSIFICATION	1.231938726876057E-6	DEFECT
// no additional methods required	WITHOUT_CLASSIFICATION	0.9999984994804144	WITHOUT_CLASSIFICATION	1.5005195856450093E-6	DEFECT
// Find min, max for the x and y axes	WITHOUT_CLASSIFICATION	0.9999961487065192	WITHOUT_CLASSIFICATION	3.851293480762195E-6	DEFECT
// Determine the cell size	WITHOUT_CLASSIFICATION	0.9999999955922567	WITHOUT_CLASSIFICATION	4.407743210019284E-9	DEFECT
// Generate the grid	WITHOUT_CLASSIFICATION	0.9999997640155021	WITHOUT_CLASSIFICATION	2.3598449787640546E-7	DEFECT
// Map the nongrid data into the new regular grid	WITHOUT_CLASSIFICATION	0.9999972163447156	WITHOUT_CLASSIFICATION	2.7836552844493613E-6	DEFECT
// scale by the inverse of distance^power	WITHOUT_CLASSIFICATION	0.9999999852985028	WITHOUT_CLASSIFICATION	1.4701497183742563E-8	DEFECT
//remove distance of the sum	WITHOUT_CLASSIFICATION	0.9999997333555403	WITHOUT_CLASSIFICATION	2.6664445974950487E-7	DEFECT
// defer null argument check	WITHOUT_CLASSIFICATION	0.9999999962274889	WITHOUT_CLASSIFICATION	3.772511030685319E-9	DEFECT
// we didn't find the key	WITHOUT_CLASSIFICATION	0.9999985959229573	WITHOUT_CLASSIFICATION	1.4040770427033848E-6	DEFECT
// handle the special case where the dataset has y-intervals that // we want to measure	WITHOUT_CLASSIFICATION	0.9999999966491231	WITHOUT_CLASSIFICATION	3.350876974990493E-9	DEFECT
// the CategoryDataset interface expects a list of categories, but // we've stored them in an array...	WITHOUT_CLASSIFICATION	0.9999990705007336	WITHOUT_CLASSIFICATION	9.294992664694414E-7	DEFECT
// the CategoryDataset interface expects a list of series, but // we've stored them in an array...	WITHOUT_CLASSIFICATION	0.9999983194400663	WITHOUT_CLASSIFICATION	1.6805599337477574E-6	DEFECT
// if d is real small set the inverse to a large number // to avoid INF	WITHOUT_CLASSIFICATION	0.9999999199035962	WITHOUT_CLASSIFICATION	8.00964038579339E-8	DEFECT
//store data as Long	WITHOUT_CLASSIFICATION	0.9999977390306525	WITHOUT_CLASSIFICATION	2.2609693475797486E-6	DEFECT
// store Number as Double	WITHOUT_CLASSIFICATION	0.9999999511882663	WITHOUT_CLASSIFICATION	4.881173363718256E-8	DEFECT
// check if starting new column	WITHOUT_CLASSIFICATION	0.9999999447986744	WITHOUT_CLASSIFICATION	5.520132569307004E-8	DEFECT
//store index where new //column starts	WITHOUT_CLASSIFICATION	0.9999982426244169	WITHOUT_CLASSIFICATION	1.757375583054784E-6	DEFECT
// set x to most recent value	WITHOUT_CLASSIFICATION	0.9999999235894007	WITHOUT_CLASSIFICATION	7.641059934454956E-8	DEFECT
// create array xIndex to hold // new column indices	WITHOUT_CLASSIFICATION	0.9999816164426599	WITHOUT_CLASSIFICATION	1.8383557340093852E-5	DEFECT
// store y and z axes // as Doubles	WITHOUT_CLASSIFICATION	0.999998650237666	WITHOUT_CLASSIFICATION	1.349762334052401E-6	DEFECT
// calculate constant values	WITHOUT_CLASSIFICATION	0.999999481664008	WITHOUT_CLASSIFICATION	5.183359919035104E-7	DEFECT
// look for any keys that we don't already know about...	WITHOUT_CLASSIFICATION	0.99660720650313	WITHOUT_CLASSIFICATION	0.003392793496870109	DEFECT
// fetch the series, remove the change listener, then remove the series.	WITHOUT_CLASSIFICATION	0.9999999437849422	WITHOUT_CLASSIFICATION	5.6215057907669256E-8	DEFECT
// remove all the series from the collection and notify listeners.	WITHOUT_CLASSIFICATION	0.999995236912611	WITHOUT_CLASSIFICATION	4.763087389000621E-6	DEFECT
//step through all the values and add them to the hash	WITHOUT_CLASSIFICATION	0.9999891892127112	WITHOUT_CLASSIFICATION	1.0810787288875202E-5	DEFECT
// no new methods required	WITHOUT_CLASSIFICATION	0.9999997398468684	WITHOUT_CLASSIFICATION	2.6015313154888014E-7	DEFECT
// can't find any differences	WITHOUT_CLASSIFICATION	0.9999496003656639	WITHOUT_CLASSIFICATION	5.039963433614781E-5	DEFECT
// now try to instantiate this ;-)	WITHOUT_CLASSIFICATION	0.9999986303002307	WITHOUT_CLASSIFICATION	1.3696997692581383E-6	DEFECT
//  Create new dataset with keys above threshold percentThreshold	WITHOUT_CLASSIFICATION	0.9999997364458667	WITHOUT_CLASSIFICATION	2.635541332659354E-7	DEFECT
//  Do not add key to dataset	WITHOUT_CLASSIFICATION	0.9999979841493781	WITHOUT_CLASSIFICATION	2.0158506218816317E-6	DEFECT
//  Add key to dataset	WITHOUT_CLASSIFICATION	0.999999570020669	WITHOUT_CLASSIFICATION	4.2997933102470165E-7	DEFECT
//  Add other category if applicable	WITHOUT_CLASSIFICATION	0.9999999048606341	WITHOUT_CLASSIFICATION	9.513936594438091E-8	DEFECT
// now do the work...	WITHOUT_CLASSIFICATION	0.9996675733229099	WITHOUT_CLASSIFICATION	3.324266770901958E-4	DEFECT
// if the dataset implements DomainInfo, life is easier	WITHOUT_CLASSIFICATION	0.9999999524566809	WITHOUT_CLASSIFICATION	4.7543318983737335E-8	DEFECT
// handle the standard case (plain CategoryDataset)	WITHOUT_CLASSIFICATION	0.9999999786232819	WITHOUT_CLASSIFICATION	2.1376718154789183E-8	DEFECT
// update the min value	WITHOUT_CLASSIFICATION	0.9999998606436868	WITHOUT_CLASSIFICATION	1.393563131033242E-7	DEFECT
// handle the standard case (plain CategoryDataset)	WITHOUT_CLASSIFICATION	0.9999999786232819	WITHOUT_CLASSIFICATION	2.1376718154789183E-8	DEFECT
/////////////////////////////////////////////////////////////////////////// // From SeriesDataset ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999999043650042	WITHOUT_CLASSIFICATION	9.563499578033795E-8	DEFECT
/////////////////////////////////////////////////////////////////////////// // From XYDataset ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999995806761629	WITHOUT_CLASSIFICATION	4.1932383709075023E-7	DEFECT
/////////////////////////////////////////////////////////////////////////// // From HighLowDataset ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999996292567963	WITHOUT_CLASSIFICATION	3.707432037355932E-7	DEFECT
/////////////////////////////////////////////////////////////////////////// // From IntervalXYDataset ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999998702090588	WITHOUT_CLASSIFICATION	1.2979094124701048E-7	DEFECT
/////////////////////////////////////////////////////////////////////////// // New methods from CombinationDataset ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999998912550541	WITHOUT_CLASSIFICATION	1.0874494597036111E-7	DEFECT
/////////////////////////////////////////////////////////////////////////// // New Methods ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999994133977609	WITHOUT_CLASSIFICATION	5.866022391590174E-7	DEFECT
/////////////////////////////////////////////////////////////////////////// // Private ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999993880813336	WITHOUT_CLASSIFICATION	6.11918666331098E-7	DEFECT
// handle the special case where the dataset has y-intervals that // we want to measure	WITHOUT_CLASSIFICATION	0.9999999966491231	WITHOUT_CLASSIFICATION	3.350876974990493E-9	DEFECT
// handle three cases by dataset type	WITHOUT_CLASSIFICATION	0.9999992362509273	WITHOUT_CLASSIFICATION	7.637490725834815E-7	DEFECT
// handle three cases by dataset type	WITHOUT_CLASSIFICATION	0.9999992362509273	WITHOUT_CLASSIFICATION	7.637490725834815E-7	DEFECT
// handle special case of IntervalXYDataset	WITHOUT_CLASSIFICATION	0.9999999090527292	WITHOUT_CLASSIFICATION	9.094727085319555E-8	DEFECT
// handle special case of IntervalXYDataset	WITHOUT_CLASSIFICATION	0.9999999090527292	WITHOUT_CLASSIFICATION	9.094727085319555E-8	DEFECT
// handle special case of IntervalXYDataset	WITHOUT_CLASSIFICATION	0.9999999090527292	WITHOUT_CLASSIFICATION	9.094727085319555E-8	DEFECT
// handle special case of OHLCDataset	WITHOUT_CLASSIFICATION	0.9999999479052959	WITHOUT_CLASSIFICATION	5.209470404466748E-8	DEFECT
// handle special case of OHLCDataset	WITHOUT_CLASSIFICATION	0.9999999479052959	WITHOUT_CLASSIFICATION	5.209470404466748E-8	DEFECT
// standard case - plain XYDataset	WITHOUT_CLASSIFICATION	0.9999987547950342	WITHOUT_CLASSIFICATION	1.2452049657972762E-6	DEFECT
// standard case - plain XYDataset	WITHOUT_CLASSIFICATION	0.9999987547950342	WITHOUT_CLASSIFICATION	1.2452049657972762E-6	DEFECT
// handle special case of BoxAndWhiskerXYDataset	WITHOUT_CLASSIFICATION	0.999996200926021	WITHOUT_CLASSIFICATION	3.7990739790083936E-6	DEFECT
// if the dataset implements DomainInfo, life is easy	WITHOUT_CLASSIFICATION	0.9999996784318136	WITHOUT_CLASSIFICATION	3.2156818642179824E-7	DEFECT
// if the dataset implements DomainInfo, life is easy	WITHOUT_CLASSIFICATION	0.9999996784318136	WITHOUT_CLASSIFICATION	3.2156818642179824E-7	DEFECT
// hasn't implemented DomainInfo, so iterate...	WITHOUT_CLASSIFICATION	0.9999960881596356	WITHOUT_CLASSIFICATION	3.911840364496084E-6	DEFECT
// hasn't implemented RangeInfo, so we'll have to iterate...	WITHOUT_CLASSIFICATION	0.9999571240725297	WITHOUT_CLASSIFICATION	4.287592747032135E-5	DEFECT
// hasn't implemented RangeInfo, so we'll have to iterate...	WITHOUT_CLASSIFICATION	0.9999571240725297	WITHOUT_CLASSIFICATION	4.287592747032135E-5	DEFECT
// work out the minimum value...	WITHOUT_CLASSIFICATION	0.9993172962926593	WITHOUT_CLASSIFICATION	6.827037073407084E-4	DEFECT
// work out the minimum value...	WITHOUT_CLASSIFICATION	0.9993172962926593	WITHOUT_CLASSIFICATION	6.827037073407084E-4	DEFECT
// work out the minimum value...	WITHOUT_CLASSIFICATION	0.9993172962926593	WITHOUT_CLASSIFICATION	6.827037073407084E-4	DEFECT
// '+', remember value is negative	WITHOUT_CLASSIFICATION	0.9999950287957773	WITHOUT_CLASSIFICATION	4.971204222693122E-6	DEFECT
// create an array holding the group indices for each series...	WITHOUT_CLASSIFICATION	0.9979884981219974	WITHOUT_CLASSIFICATION	0.002011501878002604	DEFECT
// minimum and maximum for each group...	WITHOUT_CLASSIFICATION	0.99999260329784	WITHOUT_CLASSIFICATION	7.3967021600250544E-6	DEFECT
// no new methods	WITHOUT_CLASSIFICATION	0.9999999676599545	WITHOUT_CLASSIFICATION	3.234004548363538E-8	DEFECT
// no new methods	WITHOUT_CLASSIFICATION	0.9999999676599545	WITHOUT_CLASSIFICATION	3.234004548363538E-8	DEFECT
// we'll set this to false if there is at // least one non-null data item...	WITHOUT_CLASSIFICATION	0.9999998600951537	WITHOUT_CLASSIFICATION	1.3990484625124964E-7	DEFECT
// no additional methods required	WITHOUT_CLASSIFICATION	0.9999984994804144	WITHOUT_CLASSIFICATION	1.5005195856450093E-6	DEFECT
// no new methods required	WITHOUT_CLASSIFICATION	0.9999997398468684	WITHOUT_CLASSIFICATION	2.6015313154888014E-7	DEFECT
// no new methods required	WITHOUT_CLASSIFICATION	0.9999997398468684	WITHOUT_CLASSIFICATION	2.6015313154888014E-7	DEFECT
/////////////////////////////////////////////////////////////////////////// // From XYDataset ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999995806761629	WITHOUT_CLASSIFICATION	4.1932383709075023E-7	DEFECT
// handle the special case where the dataset has y-intervals that // we want to measure	WITHOUT_CLASSIFICATION	0.9999999966491231	WITHOUT_CLASSIFICATION	3.350876974990493E-9	DEFECT
// '+', remember value is negative	WITHOUT_CLASSIFICATION	0.9999950287957773	WITHOUT_CLASSIFICATION	4.971204222693122E-6	DEFECT
// '+', remember value is negative	WITHOUT_CLASSIFICATION	0.9999950287957773	WITHOUT_CLASSIFICATION	4.971204222693122E-6	DEFECT
// we don't know anything about the ordering of the x-values, // so we iterate until we find the first crossing of x (if any) // we know there are at least 2 items in the series at this point	WITHOUT_CLASSIFICATION	0.9999508355464073	WITHOUT_CLASSIFICATION	4.9164453592651374E-5	DEFECT
// delegate null check on dataset	WITHOUT_CLASSIFICATION	0.9999999217043178	WITHOUT_CLASSIFICATION	7.829568217590174E-8	DEFECT
// exact match on first item	WITHOUT_CLASSIFICATION	0.9999999622938692	WITHOUT_CLASSIFICATION	3.7706130823066986E-8	DEFECT
// no crossing of x	WITHOUT_CLASSIFICATION	0.9999979668149952	WITHOUT_CLASSIFICATION	2.033185004752013E-6	DEFECT
// spanning match	WITHOUT_CLASSIFICATION	0.9999999400980835	WITHOUT_CLASSIFICATION	5.990191658753133E-8	DEFECT
// exact match	WITHOUT_CLASSIFICATION	0.9999992381461998	WITHOUT_CLASSIFICATION	7.618538000701951E-7	DEFECT
// maps our series into our parent's	WITHOUT_CLASSIFICATION	0.9999752844726983	WITHOUT_CLASSIFICATION	2.4715527301695634E-5	DEFECT
// prior to 1.0.14, we just fired a PropertyChange - so we need to // keep doing this	WITHOUT_CLASSIFICATION	0.9999999987762062	WITHOUT_CLASSIFICATION	1.2237938491302946E-9	DEFECT
// no new methods added.	WITHOUT_CLASSIFICATION	0.9999999906006068	WITHOUT_CLASSIFICATION	9.399393155857467E-9	DEFECT
// first line contains column keys	WITHOUT_CLASSIFICATION	0.9999977776095571	WITHOUT_CLASSIFICATION	2.2223904429085343E-6	DEFECT
// remaining lines contain a row key and data values	WITHOUT_CLASSIFICATION	0.9999988836049134	WITHOUT_CLASSIFICATION	1.1163950865635515E-6	DEFECT
// first field contains the row key	WITHOUT_CLASSIFICATION	0.999998523532118	WITHOUT_CLASSIFICATION	1.4764678819385983E-6	DEFECT
// update the max value	WITHOUT_CLASSIFICATION	0.9999997076173779	WITHOUT_CLASSIFICATION	2.9238262215030733E-7	DEFECT
// remaining fields contain values	WITHOUT_CLASSIFICATION	0.9999987504291538	WITHOUT_CLASSIFICATION	1.2495708462135632E-6	DEFECT
// Remove any previous old data	WITHOUT_CLASSIFICATION	0.9999431102740088	WITHOUT_CLASSIFICATION	5.688972599110015E-5	DEFECT
// first column contains the row key...	WITHOUT_CLASSIFICATION	0.9999894046949256	WITHOUT_CLASSIFICATION	1.0595305074355126E-5	DEFECT
// suppress (value defaults to null)	WITHOUT_CLASSIFICATION	0.9999991400737472	WITHOUT_CLASSIFICATION	8.599262528648065E-7	DEFECT
// not a value, can't use it (defaults to null)	WITHOUT_CLASSIFICATION	0.9999397166176344	WITHOUT_CLASSIFICATION	6.0283382365504715E-5	DEFECT
/// First column is X data	WITHOUT_CLASSIFICATION	0.9999955428797307	WITHOUT_CLASSIFICATION	4.457120269228477E-6	DEFECT
/// Get the column names and cache them.	WITHOUT_CLASSIFICATION	0.9999999035015072	WITHOUT_CLASSIFICATION	9.649849268376321E-8	DEFECT
// Might need to add, to free memory from any previous result sets	WITHOUT_CLASSIFICATION	0.9998436786069987	WITHOUT_CLASSIFICATION	1.5632139300135315E-4	DEFECT
// Are we working with a time series.	WITHOUT_CLASSIFICATION	0.9999743332725562	WITHOUT_CLASSIFICATION	2.56667274437489E-5	DEFECT
// defer null argument check	WITHOUT_CLASSIFICATION	0.9999999962274889	WITHOUT_CLASSIFICATION	3.772511030685319E-9	DEFECT
// defer null argument check	WITHOUT_CLASSIFICATION	0.9999999962274889	WITHOUT_CLASSIFICATION	3.772511030685319E-9	DEFECT
// check arguments...	WITHOUT_CLASSIFICATION	0.9999999254985517	WITHOUT_CLASSIFICATION	7.450144835911272E-8	DEFECT
/////////////////////////////////////////////////////////////////////////// // From SeriesDataset ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999999043650042	WITHOUT_CLASSIFICATION	9.563499578033795E-8	DEFECT
/////////////////////////////////////////////////////////////////////////// // From IntervalXYDataset ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999998702090588	WITHOUT_CLASSIFICATION	1.2979094124701048E-7	DEFECT
/////////////////////////////////////////////////////////////////////////// // New methods from CombinationDataset ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999998912550541	WITHOUT_CLASSIFICATION	1.0874494597036111E-7	DEFECT
/////////////////////////////////////////////////////////////////////////// // New methods from CombinationDataset ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999998912550541	WITHOUT_CLASSIFICATION	1.0874494597036111E-7	DEFECT
// if this series belongs to a dataset, the dataset might veto the // change if it results in two series within the dataset having the // same key	WITHOUT_CLASSIFICATION	0.9998322354815086	WITHOUT_CLASSIFICATION	1.6776451849142489E-4	DEFECT
// see comments about priority of // 10 in validateObject()	WITHOUT_CLASSIFICATION	0.9999927810154933	WITHOUT_CLASSIFICATION	7.218984506671707E-6	DEFECT
// first field is ignored, since // column 0 is for row keys	WITHOUT_CLASSIFICATION	0.9999997485588683	WITHOUT_CLASSIFICATION	2.514411316780665E-7	DEFECT
// Get all rows. // rows = new ArrayList();	WITHOUT_CLASSIFICATION	0.9999996057872956	WITHOUT_CLASSIFICATION	3.942127043246735E-7	DEFECT
/// Determine max and min values.	WITHOUT_CLASSIFICATION	0.9999998209765909	WITHOUT_CLASSIFICATION	1.7902340912694078E-7	DEFECT
// Tell the listeners a new table has arrived.	WITHOUT_CLASSIFICATION	0.9999999964465742	WITHOUT_CLASSIFICATION	3.5534258245180595E-9	DEFECT
// fill the bins	WITHOUT_CLASSIFICATION	0.9999985662385307	WITHOUT_CLASSIFICATION	1.4337614692584018E-6	DEFECT
// generic map for each series	WITHOUT_CLASSIFICATION	0.9999992381848225	WITHOUT_CLASSIFICATION	7.618151774968999E-7	DEFECT
// pretty sure this shouldn't ever happen	WITHOUT_CLASSIFICATION	0.999808084975385	WITHOUT_CLASSIFICATION	1.9191502461515483E-4	DEFECT
// lower bounds are the same	WITHOUT_CLASSIFICATION	0.9999994646499083	WITHOUT_CLASSIFICATION	5.353500918255487E-7	DEFECT
// overridden to make public	WITHOUT_CLASSIFICATION	0.9999996812838324	WITHOUT_CLASSIFICATION	3.187161676402939E-7	DEFECT
// update the cached range values...	WITHOUT_CLASSIFICATION	0.999999279266692	WITHOUT_CLASSIFICATION	7.207333081083085E-7	DEFECT
// check that the new bin doesn't overlap with any existing bin	WITHOUT_CLASSIFICATION	0.9999990052805883	WITHOUT_CLASSIFICATION	9.947194116708742E-7	DEFECT
// pass values to other constructor	WITHOUT_CLASSIFICATION	0.9999997713259235	WITHOUT_CLASSIFICATION	2.2867407638621887E-7	DEFECT
// update cached min and max values	WITHOUT_CLASSIFICATION	0.9999999535257971	WITHOUT_CLASSIFICATION	4.6474202975805786E-8	DEFECT
// defer null argument checks	WITHOUT_CLASSIFICATION	0.9999999979552608	WITHOUT_CLASSIFICATION	2.04473919928484E-9	DEFECT
// check for zero pivot element	WITHOUT_CLASSIFICATION	0.9999992049410723	WITHOUT_CLASSIFICATION	7.950589276706349E-7	DEFECT
// treat nulls the same as NaNs	WITHOUT_CLASSIFICATION	0.9999982125165398	WITHOUT_CLASSIFICATION	1.7874834602566933E-6	DEFECT
// calculate the sum and count	WITHOUT_CLASSIFICATION	0.9999998532677764	WITHOUT_CLASSIFICATION	1.4673222362864992E-7	DEFECT
// intercept	WITHOUT_CLASSIFICATION	0.9999998202360604	WITHOUT_CLASSIFICATION	1.7976393954655233E-7	DEFECT
// sum of x, x^2, x * y, y	WITHOUT_CLASSIFICATION	0.9999986326535335	WITHOUT_CLASSIFICATION	1.3673464665170054E-6	DEFECT
// holds the moving average sum	WITHOUT_CLASSIFICATION	0.9999987528684632	WITHOUT_CLASSIFICATION	1.2471315367708554E-6	DEFECT
// defer null argument checks	WITHOUT_CLASSIFICATION	0.9999999979552608	WITHOUT_CLASSIFICATION	2.04473919928484E-9	DEFECT
// make sure bins[bins.length]'s upper boundary ends at maximum // to avoid the rounding issue. the bins[0] lower boundary is // guaranteed start from min	WITHOUT_CLASSIFICATION	0.9999801092760023	WITHOUT_CLASSIFICATION	1.9890723997598843E-5	DEFECT
// iterate over all data items and update mins and maxes	WITHOUT_CLASSIFICATION	0.9999995101781282	WITHOUT_CLASSIFICATION	4.898218718288658E-7	DEFECT
// if this cell held a maximum and/or minimum value, we'll need to // update the cached bounds...	WITHOUT_CLASSIFICATION	0.9999997061955787	WITHOUT_CLASSIFICATION	2.9380442132676265E-7	DEFECT
// ********* stat function for linear slope ******** // y = a + bx // a = ybar - b * xbar //     sum(x * y) - (sum (x) * sum(y)) / n // b = ------------------------------------ //     sum (x^2) - (sum(x)^2 / n // *************************************************	WITHOUT_CLASSIFICATION	0.9999356995325416	WITHOUT_CLASSIFICATION	6.430046745840208E-5	DEFECT
// update cached range values	WITHOUT_CLASSIFICATION	0.9999999708854649	WITHOUT_CLASSIFICATION	2.9114535139829602E-8	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.999993660111925	WITHOUT_CLASSIFICATION	6.339888074945912E-6	DEFECT
// update the min value	WITHOUT_CLASSIFICATION	0.9999998606436868	WITHOUT_CLASSIFICATION	1.393563131033242E-7	DEFECT
// iterate over all data items and update mins and maxes	WITHOUT_CLASSIFICATION	0.9999995101781282	WITHOUT_CLASSIFICATION	4.898218718288658E-7	DEFECT
// CASE 2 : Comparing to another TimePeriod object // -----------------------------------------------	WITHOUT_CLASSIFICATION	0.999992685827598	WITHOUT_CLASSIFICATION	7.314172402003271E-6	DEFECT
// CASE 3 : Comparing to a non-TimePeriod object // ---------------------------------------------	WITHOUT_CLASSIFICATION	0.9999948425605711	WITHOUT_CLASSIFICATION	5.1574394289065966E-6	DEFECT
// consider time periods to be ordered after general objects	WITHOUT_CLASSIFICATION	0.9999501981954738	WITHOUT_CLASSIFICATION	4.980180452616506E-5	DEFECT
// consider time periods to be ordered after general objects	WITHOUT_CLASSIFICATION	0.9999501981954738	WITHOUT_CLASSIFICATION	4.980180452616506E-5	DEFECT
// we are at the last minute in the hour...	WITHOUT_CLASSIFICATION	0.9999895342180315	WITHOUT_CLASSIFICATION	1.0465781968511873E-5	DEFECT
// CASE 1 : Comparing to another Minute object // -------------------------------------------	WITHOUT_CLASSIFICATION	0.9999955749877701	WITHOUT_CLASSIFICATION	4.425012229873831E-6	DEFECT
// more difficult case - evaluate later...	WITHOUT_CLASSIFICATION	0.9999954160171579	WITHOUT_CLASSIFICATION	4.583982842071728E-6	DEFECT
// won't get here...	WITHOUT_CLASSIFICATION	0.9516238179069468	WITHOUT_CLASSIFICATION	0.048376182093053215	DEFECT
// remove old items and notify if necessary	WITHOUT_CLASSIFICATION	0.9999986023987429	WITHOUT_CLASSIFICATION	1.3976012569806118E-6	DEFECT
// make the change (if it's not a duplicate time period)...	WITHOUT_CLASSIFICATION	0.9999941530673491	WITHOUT_CLASSIFICATION	5.846932650876699E-6	DEFECT
// check if this addition will exceed the maximum item count...	WITHOUT_CLASSIFICATION	0.9998341349088113	WITHOUT_CLASSIFICATION	1.6586509118876993E-4	DEFECT
// check if this addition will exceed the maximum item count...	WITHOUT_CLASSIFICATION	0.9998341349088113	WITHOUT_CLASSIFICATION	1.6586509118876993E-4	DEFECT
// find the serial index of the period specified by 'latest'	WITHOUT_CLASSIFICATION	0.9999999054699255	WITHOUT_CLASSIFICATION	9.453007449211956E-8	DEFECT
// it is too slow to look at every data item, so let's just look at // the first, middle and last items...	WITHOUT_CLASSIFICATION	0.9999999575923868	WITHOUT_CLASSIFICATION	4.240761326767808E-8	DEFECT
// CASE 2 : Comparing to another TimePeriod object // -----------------------------------------------	WITHOUT_CLASSIFICATION	0.999992685827598	WITHOUT_CLASSIFICATION	7.314172402003271E-6	DEFECT
// CASE 2 : Comparing to another TimePeriod object // -----------------------------------------------	WITHOUT_CLASSIFICATION	0.999992685827598	WITHOUT_CLASSIFICATION	7.314172402003271E-6	DEFECT
// CASE 3 : Comparing to a non-TimePeriod object // ---------------------------------------------	WITHOUT_CLASSIFICATION	0.9999948425605711	WITHOUT_CLASSIFICATION	5.1574394289065966E-6	DEFECT
// consider time periods to be ordered after general objects	WITHOUT_CLASSIFICATION	0.9999501981954738	WITHOUT_CLASSIFICATION	4.980180452616506E-5	DEFECT
// consider time periods to be ordered after general objects	WITHOUT_CLASSIFICATION	0.9999501981954738	WITHOUT_CLASSIFICATION	4.980180452616506E-5	DEFECT
// more difficult case - evaluate later...	WITHOUT_CLASSIFICATION	0.9999954160171579	WITHOUT_CLASSIFICATION	4.583982842071728E-6	DEFECT
// more difficult case - evaluate later...	WITHOUT_CLASSIFICATION	0.9999954160171579	WITHOUT_CLASSIFICATION	4.583982842071728E-6	DEFECT
// since the items are ordered, we could be more clever here and avoid // iterating over all the data	WITHOUT_CLASSIFICATION	0.999999987404779	WITHOUT_CLASSIFICATION	1.2595221041528612E-8	DEFECT
// remove old items if necessary, but // don't notify anyone, because that // happens next anyway...	WITHOUT_CLASSIFICATION	0.9172843759715561	WITHOUT_CLASSIFICATION	0.0827156240284439	DEFECT
// figure out if we need to iterate through all the y-values // to find the revised minY / maxY	WITHOUT_CLASSIFICATION	0.9999999420414475	WITHOUT_CLASSIFICATION	5.795855254610529E-8	DEFECT
// check if there are any values earlier than specified by the history // count...	WITHOUT_CLASSIFICATION	0.999995675692699	WITHOUT_CLASSIFICATION	4.324307301045859E-6	DEFECT
// check if there are any values earlier than specified by the history // count...	WITHOUT_CLASSIFICATION	0.999995675692699	WITHOUT_CLASSIFICATION	4.324307301045859E-6	DEFECT
// start is after last data item	WITHOUT_CLASSIFICATION	0.9999993982849464	WITHOUT_CLASSIFICATION	6.017150536337788E-7	DEFECT
// update the time series appropriately	WITHOUT_CLASSIFICATION	0.9999982234331656	WITHOUT_CLASSIFICATION	1.7765668344919665E-6	DEFECT
// we are at the first hour in the day...	WITHOUT_CLASSIFICATION	0.9999811085989709	WITHOUT_CLASSIFICATION	1.8891401029104123E-5	DEFECT
// we are at the last hour in the day...	WITHOUT_CLASSIFICATION	0.9998237148583915	WITHOUT_CLASSIFICATION	1.7628514160846333E-4	DEFECT
// CASE 1 : Comparing to another Hour object // -----------------------------------------	WITHOUT_CLASSIFICATION	0.9999856863354301	WITHOUT_CLASSIFICATION	1.4313664570076438E-5	DEFECT
// if the hour is 0 - 23 then create an hour	WITHOUT_CLASSIFICATION	0.999998010495946	WITHOUT_CLASSIFICATION	1.989504053990535E-6	DEFECT
// parse the string...	WITHOUT_CLASSIFICATION	0.9999835837720208	WITHOUT_CLASSIFICATION	1.641622797926603E-5	DEFECT
// create the year...	WITHOUT_CLASSIFICATION	0.9999954814403548	WITHOUT_CLASSIFICATION	4.518559645186681E-6	DEFECT
// get the current data item...	WITHOUT_CLASSIFICATION	0.9999816855451865	WITHOUT_CLASSIFICATION	1.8314454813480247E-5	DEFECT
// work out the average for the earlier values...	WITHOUT_CLASSIFICATION	0.9999350999068822	WITHOUT_CLASSIFICATION	6.49000931177059E-5	DEFECT
// work out the average for the earlier values...	WITHOUT_CLASSIFICATION	0.9999350999068822	WITHOUT_CLASSIFICATION	6.49000931177059E-5	DEFECT
// remove the point i-periodCount out of the rolling sum.	WITHOUT_CLASSIFICATION	0.9999769935730511	WITHOUT_CLASSIFICATION	2.300642694890331E-5	DEFECT
// an arbitrary safe default value	WITHOUT_CLASSIFICATION	0.9999999692430332	WITHOUT_CLASSIFICATION	3.075696680397914E-8	DEFECT
// default value;	WITHOUT_CLASSIFICATION	0.9999996412286564	WITHOUT_CLASSIFICATION	3.58771343653494E-7	DEFECT
// as a class variable, initializes == 0	WITHOUT_CLASSIFICATION	0.9999999886263777	WITHOUT_CLASSIFICATION	1.1373622198467193E-8	DEFECT
// cached values used for interface DomainInfo:	WITHOUT_CLASSIFICATION	0.9999993721239361	WITHOUT_CLASSIFICATION	6.278760639462568E-7	DEFECT
//rangeGridlinePaint;	WITHOUT_CLASSIFICATION	0.9999995127374787	WITHOUT_CLASSIFICATION	4.872625213489787E-7	DEFECT
// CASE 2 : Comparing to another TimePeriod object // -----------------------------------------------	WITHOUT_CLASSIFICATION	0.999992685827598	WITHOUT_CLASSIFICATION	7.314172402003271E-6	DEFECT
// CASE 3 : Comparing to a non-TimePeriod object // ---------------------------------------------	WITHOUT_CLASSIFICATION	0.9999948425605711	WITHOUT_CLASSIFICATION	5.1574394289065966E-6	DEFECT
// CASE 3 : Comparing to a non-TimePeriod object // ---------------------------------------------	WITHOUT_CLASSIFICATION	0.9999948425605711	WITHOUT_CLASSIFICATION	5.1574394289065966E-6	DEFECT
// autoinit's to null.	WITHOUT_CLASSIFICATION	0.999999326025245	WITHOUT_CLASSIFICATION	6.739747549200542E-7	DEFECT
// CASE 1 : Comparing to another Year object // -----------------------------------------	WITHOUT_CLASSIFICATION	0.9999880034697874	WITHOUT_CLASSIFICATION	1.1996530212436998E-5	DEFECT
// if the initial averaging period is to be excluded, then // calculate the lowest x-value to have an average calculated...	WITHOUT_CLASSIFICATION	0.9999999064088158	WITHOUT_CLASSIFICATION	9.359118426904416E-8	DEFECT
//}	WITHOUT_CLASSIFICATION	0.999969639944854	WITHOUT_CLASSIFICATION	3.036005514602533E-5	DEFECT
//}	WITHOUT_CLASSIFICATION	0.999969639944854	WITHOUT_CLASSIFICATION	3.036005514602533E-5	DEFECT
// if the initial averaging period is to be excluded, then // calculate the index of the // first data item to have an average calculated...	WITHOUT_CLASSIFICATION	0.9999999679293926	WITHOUT_CLASSIFICATION	3.207060742845128E-8	DEFECT
// Cached values used for interface RangeInfo: (note minValue pinned at 0) //   A single set of extrema covers the entire SeriesCollection	WITHOUT_CLASSIFICATION	0.9999454972611055	WITHOUT_CLASSIFICATION	5.450273889449207E-5	DEFECT
///  .. etc....	WITHOUT_CLASSIFICATION	0.9998466639555745	WITHOUT_CLASSIFICATION	1.5333604442536948E-4	DEFECT
/// Expand the following for all defined TimePeriods:	WITHOUT_CLASSIFICATION	0.9999998150106331	WITHOUT_CLASSIFICATION	1.8498936695860867E-7	DEFECT
// initialize the members of "seriesNames" array so they won't be null:	WITHOUT_CLASSIFICATION	0.999999951373182	WITHOUT_CLASSIFICATION	4.862681805297071E-8	DEFECT
//{ // deep copy from values[], caller // can safely discard that array	WITHOUT_CLASSIFICATION	0.999988339238854	WITHOUT_CLASSIFICATION	1.1660761145945058E-5	DEFECT
// Avoid IndexOutOfBoundsException:	WITHOUT_CLASSIFICATION	0.999906794196453	WITHOUT_CLASSIFICATION	9.320580354695062E-5	DEFECT
// But if that series array already exists, just overwrite its contents	WITHOUT_CLASSIFICATION	0.999999964532406	WITHOUT_CLASSIFICATION	3.546759402843388E-8	DEFECT
// But if that series array already exists, just overwrite its contents //synchronized(this) //{	WITHOUT_CLASSIFICATION	0.999999901034923	WITHOUT_CLASSIFICATION	9.896507693377836E-8	DEFECT
// all arrays equal length, // so ignore argument:	WITHOUT_CLASSIFICATION	0.9999999571248863	WITHOUT_CLASSIFICATION	4.2875113655500115E-8	DEFECT
// Methods for managing the FIFO's:	WITHOUT_CLASSIFICATION	0.9999746949592093	WITHOUT_CLASSIFICATION	2.530504079065944E-5	DEFECT
// no translation needed	WITHOUT_CLASSIFICATION	0.9999999619018538	WITHOUT_CLASSIFICATION	3.8098146183030924E-8	DEFECT
// else  [implicit here]	WITHOUT_CLASSIFICATION	0.9999998069212921	WITHOUT_CLASSIFICATION	1.9307870787920098E-7	DEFECT
// newestAt takes value previously held // by oldestAT	WITHOUT_CLASSIFICATION	0.9999931783796233	WITHOUT_CLASSIFICATION	6.821620376646127E-6	DEFECT
// if the oldest data contained a maximum Y-value, invalidate the stored //   Y-max and Y-range data:	WITHOUT_CLASSIFICATION	0.9999999998736869	WITHOUT_CLASSIFICATION	1.263130706434558E-10	DEFECT
// deregister the collection as a change listener to each series in the // collection	WITHOUT_CLASSIFICATION	0.9999998232038733	WITHOUT_CLASSIFICATION	1.7679612675472242E-7	DEFECT
//  wipe the next (about to be used) set of data slots	WITHOUT_CLASSIFICATION	0.999959892085187	WITHOUT_CLASSIFICATION	4.0107914813078704E-5	DEFECT
// Update the array of TimePeriods:	WITHOUT_CLASSIFICATION	0.9999971633132391	WITHOUT_CLASSIFICATION	2.836686760964268E-6	DEFECT
// Now advance "oldestAt", wrapping at end of the array	WITHOUT_CLASSIFICATION	0.9999971405539819	WITHOUT_CLASSIFICATION	2.8594460180787706E-6	DEFECT
// Update the domain limits: //(time is kept in msec)	WITHOUT_CLASSIFICATION	0.9999757478550524	WITHOUT_CLASSIFICATION	2.42521449475273E-5	DEFECT
//  If data can be < 0, the next 2 methods should be modified	WITHOUT_CLASSIFICATION	0.999794678890806	WITHOUT_CLASSIFICATION	2.053211091939489E-4	DEFECT
// index to select the "series"	WITHOUT_CLASSIFICATION	0.9999976729811204	WITHOUT_CLASSIFICATION	2.3270188795365237E-6	DEFECT
/* // "Extras" found useful when analyzing/verifying class behavior:    public Number getUntranslatedXValue(int series, int item)    {      return super.getXValue(series, item);    }    public float getUntranslatedY(int series, int item)    {      return super.getY(series, item);    }  */	WITHOUT_CLASSIFICATION	0.9999999946894957	WITHOUT_CLASSIFICATION	5.310504357690821E-9	DEFECT
// a Long kept updated by advanceTime()	WITHOUT_CLASSIFICATION	0.9999991650745185	WITHOUT_CLASSIFICATION	8.349254815572096E-7	DEFECT
// a Long kept updated by advanceTime()	WITHOUT_CLASSIFICATION	0.9999991650745185	WITHOUT_CLASSIFICATION	8.349254815572096E-7	DEFECT
// try a dataset with some content...	WITHOUT_CLASSIFICATION	0.9998186013503234	WITHOUT_CLASSIFICATION	1.8139864967664358E-4	DEFECT
// try a null argument	WITHOUT_CLASSIFICATION	0.9999994526864852	WITHOUT_CLASSIFICATION	5.473135149305699E-7	DEFECT
// try a dataset with some content...	WITHOUT_CLASSIFICATION	0.9998186013503234	WITHOUT_CLASSIFICATION	1.8139864967664358E-4	DEFECT
// try a dataset with some content...	WITHOUT_CLASSIFICATION	0.9998186013503234	WITHOUT_CLASSIFICATION	1.8139864967664358E-4	DEFECT
// remove all the series from the collection and notify listeners.	WITHOUT_CLASSIFICATION	0.999995236912611	WITHOUT_CLASSIFICATION	4.763087389000621E-6	DEFECT
// CASE 2 : Comparing to another TimePeriod object // -----------------------------------------------	WITHOUT_CLASSIFICATION	0.999992685827598	WITHOUT_CLASSIFICATION	7.314172402003271E-6	DEFECT
// CASE 3 : Comparing to a non-TimePeriod object // ---------------------------------------------	WITHOUT_CLASSIFICATION	0.9999948425605711	WITHOUT_CLASSIFICATION	5.1574394289065966E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999994848348538	WITHOUT_CLASSIFICATION	5.151651463210354E-7	DEFECT
// CASE 3 : Comparing to a non-TimePeriod object // ---------------------------------------------	WITHOUT_CLASSIFICATION	0.9999948425605711	WITHOUT_CLASSIFICATION	5.1574394289065966E-6	DEFECT
// consider time periods to be ordered after general objects	WITHOUT_CLASSIFICATION	0.9999501981954738	WITHOUT_CLASSIFICATION	4.980180452616506E-5	DEFECT
// consider time periods to be ordered after general objects	WITHOUT_CLASSIFICATION	0.9999501981954738	WITHOUT_CLASSIFICATION	4.980180452616506E-5	DEFECT
// more difficult case - evaluate later...	WITHOUT_CLASSIFICATION	0.9999954160171579	WITHOUT_CLASSIFICATION	4.583982842071728E-6	DEFECT
// more difficult case - evaluate later...	WITHOUT_CLASSIFICATION	0.9999954160171579	WITHOUT_CLASSIFICATION	4.583982842071728E-6	DEFECT
// parse the string...	WITHOUT_CLASSIFICATION	0.9999835837720208	WITHOUT_CLASSIFICATION	1.641622797926603E-5	DEFECT
// check an empty dataset	WITHOUT_CLASSIFICATION	0.99999998226837	WITHOUT_CLASSIFICATION	1.773163010175953E-8	DEFECT
// appendData() writes new data at the index position given by newestAt/ // When adding new data dynamically, use advanceTime(), followed by this:	WITHOUT_CLASSIFICATION	0.9995234637293072	WITHOUT_CLASSIFICATION	4.7653627069274107E-4	DEFECT
// check whether the "valueHistory" array member exists; if not, // create them:	WITHOUT_CLASSIFICATION	0.9999998118934265	WITHOUT_CLASSIFICATION	1.8810657353951802E-7	DEFECT
// getXxx() ftns can ignore the "series" argument: // Don't synchronize this!! Instead, synchronize the loop that calls it.	WITHOUT_CLASSIFICATION	0.9725797001501498	WITHOUT_CLASSIFICATION	0.027420299849850137	DEFECT
// Don't synchronize this!! // Instead, synchronize the loop that calls it.	WITHOUT_CLASSIFICATION	0.9907611741781832	WITHOUT_CLASSIFICATION	0.009238825821816848	DEFECT
// The next 3 functions implement the RangeInfo interface. // Using saved limits (updated by each updateTime() call) significantly // improves performance.  WARNING: this code makes the simplifying // assumption that data is never negative.  Expand as needed for the // general case.	WITHOUT_CLASSIFICATION	0.9907798141456194	DEFECT	0.009220185854380565	WITHOUT_CLASSIFICATION
// CASE 1 : Comparing to another Quarter object // --------------------------------------------	WITHOUT_CLASSIFICATION	0.9999974273616218	WITHOUT_CLASSIFICATION	2.5726383782029388E-6	DEFECT
// find the Q and the integer following it (remove both from the // string)...	WITHOUT_CLASSIFICATION	0.9999984413524219	WITHOUT_CLASSIFICATION	1.5586475781016505E-6	DEFECT
// replace any / , or - with a space	WITHOUT_CLASSIFICATION	0.9999810114542417	WITHOUT_CLASSIFICATION	1.898854575827477E-5	DEFECT
// do nothing, so null is returned	WITHOUT_CLASSIFICATION	0.9999997628093612	WITHOUT_CLASSIFICATION	2.371906388469664E-7	DEFECT
//////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.999963326898637	WITHOUT_CLASSIFICATION	3.6673101362948525E-5	DEFECT
// CASE 1 : Comparing to another Day object // ----------------------------------------	WITHOUT_CLASSIFICATION	0.9999376591380702	WITHOUT_CLASSIFICATION	6.234086192983308E-5	DEFECT
// check arguments...delegated // fetch the series name...	WITHOUT_CLASSIFICATION	0.9999999508616106	WITHOUT_CLASSIFICATION	4.913838927799103E-8	DEFECT
// deregister the collection as a change listener to each series in the // collection	WITHOUT_CLASSIFICATION	0.9999998232038733	WITHOUT_CLASSIFICATION	1.7679612675472242E-7	DEFECT
// if it is not the series name, then we have no interest	WITHOUT_CLASSIFICATION	0.999994264402606	WITHOUT_CLASSIFICATION	5.735597394083245E-6	DEFECT
// to be defensive, let's check that the source series does in fact // belong to this collection	WITHOUT_CLASSIFICATION	0.9999996280708371	WITHOUT_CLASSIFICATION	3.719291628352671E-7	DEFECT
// check if the new series name already exists for another series	WITHOUT_CLASSIFICATION	0.9999979255768245	WITHOUT_CLASSIFICATION	2.0744231754524307E-6	DEFECT
// we need to work out if the previous year has 52 or 53 weeks...	WITHOUT_CLASSIFICATION	0.9980056664695649	WITHOUT_CLASSIFICATION	0.0019943335304351446	DEFECT
// check an empty dataset	WITHOUT_CLASSIFICATION	0.99999998226837	WITHOUT_CLASSIFICATION	1.773163010175953E-8	DEFECT
// check an empty dataset	WITHOUT_CLASSIFICATION	0.99999998226837	WITHOUT_CLASSIFICATION	1.773163010175953E-8	DEFECT
// CASE 2 : Comparing to a general object // ---------------------------------------------	WITHOUT_CLASSIFICATION	0.9999226886804394	WITHOUT_CLASSIFICATION	7.731131956056085E-5	DEFECT
// remove all the series from the collection and notify listeners.	WITHOUT_CLASSIFICATION	0.999995236912611	WITHOUT_CLASSIFICATION	4.763087389000621E-6	DEFECT
// CASE 1 : Comparing to another Second object // -------------------------------------------	WITHOUT_CLASSIFICATION	0.9999577213444552	WITHOUT_CLASSIFICATION	4.2278655544826665E-5	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.999993660111925	WITHOUT_CLASSIFICATION	6.339888074945912E-6	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.999993660111925	WITHOUT_CLASSIFICATION	6.339888074945912E-6	DEFECT
// CASE 2 : Comparing to another TimePeriod object // -----------------------------------------------	WITHOUT_CLASSIFICATION	0.999992685827598	WITHOUT_CLASSIFICATION	7.314172402003271E-6	DEFECT
// CASE 3 : Comparing to a non-TimePeriod object // ---------------------------------------------	WITHOUT_CLASSIFICATION	0.9999948425605711	WITHOUT_CLASSIFICATION	5.1574394289065966E-6	DEFECT
// CASE 3 : Comparing to a non-TimePeriod object // ---------------------------------------------	WITHOUT_CLASSIFICATION	0.9999948425605711	WITHOUT_CLASSIFICATION	5.1574394289065966E-6	DEFECT
// CASE 3 : Comparing to a non-TimePeriod object // ---------------------------------------------	WITHOUT_CLASSIFICATION	0.9999948425605711	WITHOUT_CLASSIFICATION	5.1574394289065966E-6	DEFECT
// consider time periods to be ordered after general objects	WITHOUT_CLASSIFICATION	0.9999501981954738	WITHOUT_CLASSIFICATION	4.980180452616506E-5	DEFECT
// consider time periods to be ordered after general objects	WITHOUT_CLASSIFICATION	0.9999501981954738	WITHOUT_CLASSIFICATION	4.980180452616506E-5	DEFECT
// consider time periods to be ordered after general objects	WITHOUT_CLASSIFICATION	0.9999501981954738	WITHOUT_CLASSIFICATION	4.980180452616506E-5	DEFECT
// consider time periods to be ordered after general objects	WITHOUT_CLASSIFICATION	0.9999501981954738	WITHOUT_CLASSIFICATION	4.980180452616506E-5	DEFECT
// consider time periods to be ordered after general objects	WITHOUT_CLASSIFICATION	0.9999501981954738	WITHOUT_CLASSIFICATION	4.980180452616506E-5	DEFECT
// more difficult case - evaluate later...	WITHOUT_CLASSIFICATION	0.9999954160171579	WITHOUT_CLASSIFICATION	4.583982842071728E-6	DEFECT
// more difficult case - evaluate later...	WITHOUT_CLASSIFICATION	0.9999954160171579	WITHOUT_CLASSIFICATION	4.583982842071728E-6	DEFECT
// more difficult case - evaluate later...	WITHOUT_CLASSIFICATION	0.9999954160171579	WITHOUT_CLASSIFICATION	4.583982842071728E-6	DEFECT
// more difficult case - evaluate later...	WITHOUT_CLASSIFICATION	0.9999954160171579	WITHOUT_CLASSIFICATION	4.583982842071728E-6	DEFECT
// won't get here...	WITHOUT_CLASSIFICATION	0.9516238179069468	WITHOUT_CLASSIFICATION	0.048376182093053215	DEFECT
// check an empty dataset	WITHOUT_CLASSIFICATION	0.99999998226837	WITHOUT_CLASSIFICATION	1.773163010175953E-8	DEFECT
// sometimes the last few days of the year are considered to fall in // the *first* week of the following year.  Refer to the Javadocs for // GregorianCalendar.	WITHOUT_CLASSIFICATION	0.9999996229578594	WITHOUT_CLASSIFICATION	3.7704214058284467E-7	DEFECT
// CASE 1 : Comparing to another Week object // --------------------------------------------	WITHOUT_CLASSIFICATION	0.9999857172334528	WITHOUT_CLASSIFICATION	1.4282766547245499E-5	DEFECT
// trim whitespace from either end of the string	WITHOUT_CLASSIFICATION	0.9999989299694637	WITHOUT_CLASSIFICATION	1.0700305363462776E-6	DEFECT
// trim whitespace from either end of the string	WITHOUT_CLASSIFICATION	0.9999989299694637	WITHOUT_CLASSIFICATION	1.0700305363462776E-6	DEFECT
// suppress	WITHOUT_CLASSIFICATION	0.9999985893151656	WITHOUT_CLASSIFICATION	1.410684834370842E-6	DEFECT
// suppress	WITHOUT_CLASSIFICATION	0.9999985893151656	WITHOUT_CLASSIFICATION	1.410684834370842E-6	DEFECT
// suppress	WITHOUT_CLASSIFICATION	0.9999985893151656	WITHOUT_CLASSIFICATION	1.410684834370842E-6	DEFECT
// CASE 1 : Comparing to another Month object // --------------------------------------------	WITHOUT_CLASSIFICATION	0.9999824942357247	WITHOUT_CLASSIFICATION	1.7505764275244873E-5	DEFECT
// if there is no separator, we assume the first four characters // are YYYY	WITHOUT_CLASSIFICATION	0.9999999999972491	WITHOUT_CLASSIFICATION	2.7509815546734894E-12	DEFECT
// now it is trickier to determine if the month or year is first	WITHOUT_CLASSIFICATION	0.999999879267548	WITHOUT_CLASSIFICATION	1.207324520392684E-7	DEFECT
// --- DEPRECATED METHODS -------------------------------------------------	WITHOUT_CLASSIFICATION	0.999990382883119	WITHOUT_CLASSIFICATION	9.61711688097871E-6	DEFECT
// CASE 1 : Comparing to another TimeSeriesDataItem object // -------------------------------------------------------	WITHOUT_CLASSIFICATION	0.999999066468068	WITHOUT_CLASSIFICATION	9.335319320066529E-7	DEFECT
//private Comparable key;	WITHOUT_CLASSIFICATION	0.9999998761152245	WITHOUT_CLASSIFICATION	1.2388477543780227E-7	DEFECT
//this.key = null;	WITHOUT_CLASSIFICATION	0.9999993784923791	WITHOUT_CLASSIFICATION	6.215076208809852E-7	DEFECT
// no attributes to read	WITHOUT_CLASSIFICATION	0.9999999671933161	WITHOUT_CLASSIFICATION	3.280668402520392E-8	DEFECT
//axisOffset;	WITHOUT_CLASSIFICATION	0.9999956035488564	WITHOUT_CLASSIFICATION	4.396451143601448E-6	DEFECT
// check arguments...	WITHOUT_CLASSIFICATION	0.9999999254985517	WITHOUT_CLASSIFICATION	7.450144835911272E-8	DEFECT
// fetch the series, remove the change listener, then remove the series.	WITHOUT_CLASSIFICATION	0.9999999437849422	WITHOUT_CLASSIFICATION	5.6215057907669256E-8	DEFECT
// remove all the series from the collection and notify listeners.	WITHOUT_CLASSIFICATION	0.999995236912611	WITHOUT_CLASSIFICATION	4.763087389000621E-6	DEFECT
// if it is not the series name, then we have no interest	WITHOUT_CLASSIFICATION	0.999994264402606	WITHOUT_CLASSIFICATION	5.735597394083245E-6	DEFECT
// check if the new series name already exists for another series	WITHOUT_CLASSIFICATION	0.9999979255768245	WITHOUT_CLASSIFICATION	2.0744231754524307E-6	DEFECT
// Remove all the series from the collection and notify listeners.	WITHOUT_CLASSIFICATION	0.9999900252301835	WITHOUT_CLASSIFICATION	9.974769816522914E-6	DEFECT
// XYDataset only provides methods for reading a dataset...	WITHOUT_CLASSIFICATION	0.9752257163792606	WITHOUT_CLASSIFICATION	0.024774283620739378	DEFECT
// check arguments...delegated	WITHOUT_CLASSIFICATION	0.9999999962483059	WITHOUT_CLASSIFICATION	3.751694099487977E-9	DEFECT
// check arguments...delegated	WITHOUT_CLASSIFICATION	0.9999999962483059	WITHOUT_CLASSIFICATION	3.751694099487977E-9	DEFECT
// Remove all the series from the collection and notify listeners.	WITHOUT_CLASSIFICATION	0.9999900252301835	WITHOUT_CLASSIFICATION	9.974769816522914E-6	DEFECT
// Unregister the collection as a change listener to each series in // the collection.	WITHOUT_CLASSIFICATION	0.9999999858280536	WITHOUT_CLASSIFICATION	1.4171946446305072E-8	DEFECT
// check an empty dataset	WITHOUT_CLASSIFICATION	0.99999998226837	WITHOUT_CLASSIFICATION	1.773163010175953E-8	DEFECT
// add a new series	WITHOUT_CLASSIFICATION	0.9999996293421813	WITHOUT_CLASSIFICATION	3.706578186095255E-7	DEFECT
// need to configure the intervalDelegate to match the original	WITHOUT_CLASSIFICATION	0.9999999771690715	WITHOUT_CLASSIFICATION	2.2830928509330336E-8	DEFECT
// check an empty dataset	WITHOUT_CLASSIFICATION	0.99999998226837	WITHOUT_CLASSIFICATION	1.773163010175953E-8	DEFECT
// we can't be sure of the order	WITHOUT_CLASSIFICATION	0.9999997925972139	WITHOUT_CLASSIFICATION	2.074027859617482E-7	DEFECT
// replace an existing series	WITHOUT_CLASSIFICATION	0.9999997790830314	WITHOUT_CLASSIFICATION	2.2091696861595993E-7	DEFECT
// check an empty dataset	WITHOUT_CLASSIFICATION	0.99999998226837	WITHOUT_CLASSIFICATION	1.773163010175953E-8	DEFECT
// either autoWidth is off or autoIntervalWidth was not set.	WITHOUT_CLASSIFICATION	0.9999965462850798	WITHOUT_CLASSIFICATION	3.4537149202035403E-6	DEFECT
// check an empty dataset	WITHOUT_CLASSIFICATION	0.99999998226837	WITHOUT_CLASSIFICATION	1.773163010175953E-8	DEFECT
// check an empty dataset	WITHOUT_CLASSIFICATION	0.99999998226837	WITHOUT_CLASSIFICATION	1.773163010175953E-8	DEFECT
// check an empty dataset	WITHOUT_CLASSIFICATION	0.99999998226837	WITHOUT_CLASSIFICATION	1.773163010175953E-8	DEFECT
// argument checking delegated...	WITHOUT_CLASSIFICATION	0.9999999658737975	WITHOUT_CLASSIFICATION	3.412620247568581E-8	DEFECT
// argument checking delegated...	WITHOUT_CLASSIFICATION	0.9999999658737975	WITHOUT_CLASSIFICATION	3.412620247568581E-8	DEFECT
// delegate argument checking to XYDataItem...	WITHOUT_CLASSIFICATION	0.9999984136120428	WITHOUT_CLASSIFICATION	1.5863879572170355E-6	DEFECT
// need to make sure we are adding *after* any duplicates	WITHOUT_CLASSIFICATION	0.9999997392855272	WITHOUT_CLASSIFICATION	2.6071447276134607E-7	DEFECT
// can't allow duplicate values, so we need to check whether // there is an item with the given x-value already	WITHOUT_CLASSIFICATION	0.9999997423027334	WITHOUT_CLASSIFICATION	2.5769726670757265E-7	DEFECT
// CASE 2 : Comparing to a general object // ---------------------------------------------	WITHOUT_CLASSIFICATION	0.9999226886804394	WITHOUT_CLASSIFICATION	7.731131956056085E-5	DEFECT
// check arguments...	WITHOUT_CLASSIFICATION	0.9999999254985517	WITHOUT_CLASSIFICATION	7.450144835911272E-8	DEFECT
// consider time periods to be ordered after general objects	WITHOUT_CLASSIFICATION	0.9999501981954738	WITHOUT_CLASSIFICATION	4.980180452616506E-5	DEFECT
// won't get here...	WITHOUT_CLASSIFICATION	0.9516238179069468	WITHOUT_CLASSIFICATION	0.048376182093053215	DEFECT
// check if this addition will exceed the maximum item count...	WITHOUT_CLASSIFICATION	0.9998341349088113	WITHOUT_CLASSIFICATION	1.6586509118876993E-4	DEFECT
// to be defensive, let's check that the source series does in fact // belong to this collection	WITHOUT_CLASSIFICATION	0.9999996280708371	WITHOUT_CLASSIFICATION	3.719291628352671E-7	DEFECT
// Unregister the collection as a change listener to each series in // the collection.	WITHOUT_CLASSIFICATION	0.9999999858280536	WITHOUT_CLASSIFICATION	1.4171946446305072E-8	DEFECT
// Unregister the collection as a change listener to each series in // the collection.	WITHOUT_CLASSIFICATION	0.9999999858280536	WITHOUT_CLASSIFICATION	1.4171946446305072E-8	DEFECT
// Remove all the series from the collection and notify listeners.	WITHOUT_CLASSIFICATION	0.9999900252301835	WITHOUT_CLASSIFICATION	9.974769816522914E-6	DEFECT
// need to configure the intervalDelegate to match the original	WITHOUT_CLASSIFICATION	0.9999999771690715	WITHOUT_CLASSIFICATION	2.2830928509330336E-8	DEFECT
// add a new series	WITHOUT_CLASSIFICATION	0.9999996293421813	WITHOUT_CLASSIFICATION	3.706578186095255E-7	DEFECT
// add a new series	WITHOUT_CLASSIFICATION	0.9999996293421813	WITHOUT_CLASSIFICATION	3.706578186095255E-7	DEFECT
// replace an existing series	WITHOUT_CLASSIFICATION	0.9999997790830314	WITHOUT_CLASSIFICATION	2.2091696861595993E-7	DEFECT
// replace an existing series	WITHOUT_CLASSIFICATION	0.9999997790830314	WITHOUT_CLASSIFICATION	2.2091696861595993E-7	DEFECT
// null is ignored	WITHOUT_CLASSIFICATION	0.99999912566809	WITHOUT_CLASSIFICATION	8.743319099110005E-7	DEFECT
// everything is fine: autoWidth is on, and an autoIntervalWidth // was set.	WITHOUT_CLASSIFICATION	0.9998897881371945	WITHOUT_CLASSIFICATION	1.1021186280550631E-4	DEFECT
// first get the range without the interval, then expand it for the // interval width	WITHOUT_CLASSIFICATION	0.9999999661633583	WITHOUT_CLASSIFICATION	3.383664173547021E-8	DEFECT
// all series have the same number of items in // this dataset	WITHOUT_CLASSIFICATION	0.9999923248718264	WITHOUT_CLASSIFICATION	7.675128173623428E-6	DEFECT
// this.x is not allowed to be null...	WITHOUT_CLASSIFICATION	0.9988402772563721	WITHOUT_CLASSIFICATION	0.001159722743627802	DEFECT
// CASE 1 : Comparing to another TimeSeriesDataPair object // -------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999992666031555	WITHOUT_CLASSIFICATION	7.33396844452585E-7	DEFECT
// In version 0.9.12, in response to several developer requests, I changed // the 'data' attribute from 'private' to 'protected', so that others can // make subclasses that work directly with the underlying data structure.	WITHOUT_CLASSIFICATION	0.9999705281189486	WITHOUT_CLASSIFICATION	2.947188105133266E-5	DEFECT
// figure out if we need to iterate through all the y-values	WITHOUT_CLASSIFICATION	0.9999998207517234	WITHOUT_CLASSIFICATION	1.7924827665428847E-7	DEFECT
// figure out if we need to iterate through all the y-values	WITHOUT_CLASSIFICATION	0.9999998207517234	WITHOUT_CLASSIFICATION	1.7924827665428847E-7	DEFECT
// if we get to here, we know that duplicate X values are not permitted	WITHOUT_CLASSIFICATION	0.9999658675663684	WITHOUT_CLASSIFICATION	3.4132433631577034E-5	DEFECT
/*         * we assum super is always initialized to all-zero matrix, so the         * total sum should be 0 upon initialization. However, we set it to         * Double.MIN_VALUE to get the same effect and yet avoid division by 0         * upon initialization.         */	WITHOUT_CLASSIFICATION	0.9998441432768514	WITHOUT_CLASSIFICATION	1.5585672314852016E-4	DEFECT
// add the series...	WITHOUT_CLASSIFICATION	0.9999973441366626	WITHOUT_CLASSIFICATION	2.655863337439356E-6	DEFECT
// try a class that isn't a listener	WITHOUT_CLASSIFICATION	0.999986873925281	WITHOUT_CLASSIFICATION	1.3126074719016926E-5	DEFECT
// set up popup menu...	WITHOUT_CLASSIFICATION	0.9999974593459579	WITHOUT_CLASSIFICATION	2.5406540421754316E-6	DEFECT
// stop listening for changes to the existing chart	WITHOUT_CLASSIFICATION	0.9999999965730939	WITHOUT_CLASSIFICATION	3.426906019795093E-9	DEFECT
// add the new chart	WITHOUT_CLASSIFICATION	0.9999999460868042	WITHOUT_CLASSIFICATION	5.391319589359285E-8	DEFECT
// work out if scaling is required...	WITHOUT_CLASSIFICATION	0.8383505211289437	WITHOUT_CLASSIFICATION	0.16164947887105632	DEFECT
// are we using the chart buffer?	WITHOUT_CLASSIFICATION	0.9999999494222873	WITHOUT_CLASSIFICATION	5.057771263615852E-8	DEFECT
// does nothing - override if necessary	WITHOUT_CLASSIFICATION	0.999998238066903	WITHOUT_CLASSIFICATION	1.7619330969095076E-6	DEFECT
// selected rectangle shouldn't extend outside the data area...	WITHOUT_CLASSIFICATION	0.9999474929198232	WITHOUT_CLASSIFICATION	5.2507080176903274E-5	DEFECT
// we need to guard against this.zoomPoint being null	WITHOUT_CLASSIFICATION	0.9999999962778625	WITHOUT_CLASSIFICATION	3.722137558762242E-9	DEFECT
// we need to guard against this.zoomPoint being null	WITHOUT_CLASSIFICATION	0.9999999962778625	WITHOUT_CLASSIFICATION	3.722137558762242E-9	DEFECT
// force a redraw	WITHOUT_CLASSIFICATION	0.9999997955868392	WITHOUT_CLASSIFICATION	2.044131607581165E-7	DEFECT
// it is too slow to look at every data item, so let's just look at // the first, middle and last items...	WITHOUT_CLASSIFICATION	0.9999999575923868	WITHOUT_CLASSIFICATION	4.240761326767808E-8	DEFECT
// fetch the series, remove the change listener, then remove the series.	WITHOUT_CLASSIFICATION	0.9999999437849422	WITHOUT_CLASSIFICATION	5.6215057907669256E-8	DEFECT
// Unregister the collection as a change listener to each series in // the collection.	WITHOUT_CLASSIFICATION	0.9999999858280536	WITHOUT_CLASSIFICATION	1.4171946446305072E-8	DEFECT
// Unregister the collection as a change listener to each series in // the collection.	WITHOUT_CLASSIFICATION	0.9999999858280536	WITHOUT_CLASSIFICATION	1.4171946446305072E-8	DEFECT
// check that minItem limit is observed	WITHOUT_CLASSIFICATION	0.999999849291067	WITHOUT_CLASSIFICATION	1.507089328991304E-7	DEFECT
//assert itemIndex >= 0 && itemIndex < getItemCount();	WITHOUT_CLASSIFICATION	0.9999995638854628	WITHOUT_CLASSIFICATION	4.3611453712387513E-7	DEFECT
//assert itemIndex >= 0 && itemIndex < getItemCount();	WITHOUT_CLASSIFICATION	0.9999995638854628	WITHOUT_CLASSIFICATION	4.3611453712387513E-7	DEFECT
//TODO private boolean fillZoomRectangle = true;	WITHOUT_CLASSIFICATION	0.9999331062218162	WITHOUT_CLASSIFICATION	6.689377818377036E-5	DEFECT
// create the canvas and add the required listeners	WITHOUT_CLASSIFICATION	0.9999993050453085	WITHOUT_CLASSIFICATION	6.949546913635676E-7	DEFECT
//ChartEditorManager.getChartEditor(canvas.getDisplay(), this.chart);	WITHOUT_CLASSIFICATION	0.9999996768007677	WITHOUT_CLASSIFICATION	3.231992323336967E-7	DEFECT
/* in the next zoomPoint.x and y replace by e.x and y for now.         * this helps to handle the mouse events and besides,         * those values are unused AFAIK. */	WITHOUT_CLASSIFICATION	0.9999997661813568	WITHOUT_CLASSIFICATION	2.338186431802813E-7	DEFECT
// do nothing, override if necessary	WITHOUT_CLASSIFICATION	0.9999999786873464	WITHOUT_CLASSIFICATION	2.131265358543969E-8	DEFECT
// new entity code	WITHOUT_CLASSIFICATION	0.9999647618548279	WITHOUT_CLASSIFICATION	3.523814517208971E-5	DEFECT
// new entity code	WITHOUT_CLASSIFICATION	0.9999647618548279	WITHOUT_CLASSIFICATION	3.523814517208971E-5	DEFECT
// pass mouse down event if some ChartMouseListener are listening	WITHOUT_CLASSIFICATION	0.9999998419584069	WITHOUT_CLASSIFICATION	1.5804159309949158E-7	DEFECT
// if the box has been drawn backwards, restore the auto bounds	WITHOUT_CLASSIFICATION	0.9999992832127652	WITHOUT_CLASSIFICATION	7.167872346990795E-7	DEFECT
// handle axis trace	WITHOUT_CLASSIFICATION	0.9999999571894307	WITHOUT_CLASSIFICATION	4.281056941513197E-8	DEFECT
// handle tool tips in a simple way	WITHOUT_CLASSIFICATION	0.9999999218652104	WITHOUT_CLASSIFICATION	7.813478970762392E-8	DEFECT
// handle zoom box	WITHOUT_CLASSIFICATION	0.999999950487242	WITHOUT_CLASSIFICATION	4.9512758075436566E-8	DEFECT
// skip if chart is null	WITHOUT_CLASSIFICATION	0.9999999398886699	WITHOUT_CLASSIFICATION	6.011133011913471E-8	DEFECT
//axisLabelPaint;	WITHOUT_CLASSIFICATION	0.9999991281501259	WITHOUT_CLASSIFICATION	8.718498739984395E-7	DEFECT
// get the origin of the zoom selection in the Java2D space used for // drawing the chart (that is, before any scaling to fit the panel)	WITHOUT_CLASSIFICATION	0.9999999303809715	WITHOUT_CLASSIFICATION	6.961902850193999E-8	DEFECT
// go through each zoom menu item and decide whether or not to // enable it...	WITHOUT_CLASSIFICATION	0.9996617668712514	WITHOUT_CLASSIFICATION	3.3823312874868176E-4	DEFECT
// create the chart...	WITHOUT_CLASSIFICATION	0.9999985738987163	WITHOUT_CLASSIFICATION	1.4261012838123405E-6	DEFECT
// title // x-axis label // y-axis label // data // create legend? // generate tooltips? // generate URLs?	WITHOUT_CLASSIFICATION	0.9999996470212329	WITHOUT_CLASSIFICATION	3.529787671257477E-7	DEFECT
// check that minItem limit is observed	WITHOUT_CLASSIFICATION	0.999999849291067	WITHOUT_CLASSIFICATION	1.507089328991304E-7	DEFECT
//SwtGraphics2D sg2 = new SwtGraphics2D(e.gc);	WITHOUT_CLASSIFICATION	0.999998857969425	WITHOUT_CLASSIFICATION	1.1420305749829815E-6	DEFECT
// do we need to fill the buffer?	WITHOUT_CLASSIFICATION	0.9999861259804939	WITHOUT_CLASSIFICATION	1.3874019506230118E-5	DEFECT
// Performs the actual drawing here ...	WITHOUT_CLASSIFICATION	0.9999648957954306	WITHOUT_CLASSIFICATION	3.510420456937481E-5	DEFECT
// anti-aliasing	WITHOUT_CLASSIFICATION	0.9999997075530248	WITHOUT_CLASSIFICATION	2.9244697526194186E-7	DEFECT
// zap the buffer onto the canvas...	WITHOUT_CLASSIFICATION	0.9999947344479444	WITHOUT_CLASSIFICATION	5.2655520556320495E-6	DEFECT
// or redrawing the chart every time...	WITHOUT_CLASSIFICATION	0.9999935525070706	WITHOUT_CLASSIFICATION	6.447492929397982E-6	DEFECT
// de-register the composite as a listener for the chart.	WITHOUT_CLASSIFICATION	0.9999999860553431	WITHOUT_CLASSIFICATION	1.3944656823437544E-8	DEFECT
// AXIS 2	WITHOUT_CLASSIFICATION	0.9998875545532127	WITHOUT_CLASSIFICATION	1.1244544678732732E-4	DEFECT
// AXIS 3	WITHOUT_CLASSIFICATION	0.9999194864031723	WITHOUT_CLASSIFICATION	8.051359682769495E-5	DEFECT
//axis3.setPositiveArrowVisible(true);	WITHOUT_CLASSIFICATION	0.9999249355013341	WITHOUT_CLASSIFICATION	7.50644986658742E-5	DEFECT
// AXIS 4	WITHOUT_CLASSIFICATION	0.9999474864761304	WITHOUT_CLASSIFICATION	5.251352386961244E-5	DEFECT
// column keys...	WITHOUT_CLASSIFICATION	0.9999643578818157	WITHOUT_CLASSIFICATION	3.564211818427571E-5	DEFECT
// create the dataset...	WITHOUT_CLASSIFICATION	0.9999982592583395	WITHOUT_CLASSIFICATION	1.7407416604092391E-6	DEFECT
// NOW DO SOME OPTIONAL CUSTOMISATION OF THE CHART...	WITHOUT_CLASSIFICATION	0.9999832432502826	WITHOUT_CLASSIFICATION	1.675674971737532E-5	DEFECT
// get a reference to the plot for further customisation...	WITHOUT_CLASSIFICATION	0.9999975106790444	WITHOUT_CLASSIFICATION	2.4893209556272003E-6	DEFECT
// set the range axis to display integers only...	WITHOUT_CLASSIFICATION	0.9999595011914106	WITHOUT_CLASSIFICATION	4.049880858926238E-5	DEFECT
// disable bar outlines...	WITHOUT_CLASSIFICATION	0.9999816792812959	WITHOUT_CLASSIFICATION	1.832071870412052E-5	DEFECT
// OPTIONAL CUSTOMISATION COMPLETED.	WITHOUT_CLASSIFICATION	0.9999995182336199	WITHOUT_CLASSIFICATION	4.817663801342896E-7	DEFECT
// chart title // data // include legend	WITHOUT_CLASSIFICATION	0.9999992009741576	WITHOUT_CLASSIFICATION	7.990258422655607E-7	DEFECT
//frame.setDisplayToolTips(false);	WITHOUT_CLASSIFICATION	0.9999987244957268	WITHOUT_CLASSIFICATION	1.2755042731440424E-6	DEFECT
// row 1: antialiasing	WITHOUT_CLASSIFICATION	0.9999882043130452	WITHOUT_CLASSIFICATION	1.1795686954755433E-5	DEFECT
//row 2: background paint for the chart	WITHOUT_CLASSIFICATION	0.999991796569948	WITHOUT_CLASSIFICATION	8.203430052140525E-6	DEFECT
// row 1	WITHOUT_CLASSIFICATION	0.9999673683567991	WITHOUT_CLASSIFICATION	3.2631643200872385E-5	DEFECT
//empty cell // row 2	WITHOUT_CLASSIFICATION	0.9999955378729306	WITHOUT_CLASSIFICATION	4.4621270694373755E-6	DEFECT
// Create the color-change dialog	WITHOUT_CLASSIFICATION	0.9999998529159435	WITHOUT_CLASSIFICATION	1.4708405647328145E-7	DEFECT
// Dispose of any fonts we have created	WITHOUT_CLASSIFICATION	0.9999998824892248	WITHOUT_CLASSIFICATION	1.1751077516465605E-7	DEFECT
// build second tab	WITHOUT_CLASSIFICATION	0.9999944409789769	WITHOUT_CLASSIFICATION	5.5590210230564854E-6	DEFECT
// don't need to do anything	WITHOUT_CLASSIFICATION	0.9998485784394786	WITHOUT_CLASSIFICATION	1.5142156052142824E-4	DEFECT
// set the plot properties...	WITHOUT_CLASSIFICATION	0.9999731524028226	WITHOUT_CLASSIFICATION	2.68475971774166E-5	DEFECT
// row 1	WITHOUT_CLASSIFICATION	0.9999673683567991	WITHOUT_CLASSIFICATION	3.2631643200872385E-5	DEFECT
// Create the color-change dialog	WITHOUT_CLASSIFICATION	0.9999998529159435	WITHOUT_CLASSIFICATION	1.4708405647328145E-7	DEFECT
// Create the color-change dialog	WITHOUT_CLASSIFICATION	0.9999998529159435	WITHOUT_CLASSIFICATION	1.4708405647328145E-7	DEFECT
// Dispose of any fonts we have created	WITHOUT_CLASSIFICATION	0.9999998824892248	WITHOUT_CLASSIFICATION	1.1751077516465605E-7	DEFECT
// check a regular value	WITHOUT_CLASSIFICATION	0.999999935673726	WITHOUT_CLASSIFICATION	6.432627388220689E-8	DEFECT
// Create the new font and set it into the title // label	WITHOUT_CLASSIFICATION	0.9999997203732585	WITHOUT_CLASSIFICATION	2.7962674155377665E-7	DEFECT
// Create the new font and set it into the title // label	WITHOUT_CLASSIFICATION	0.9999997203732585	WITHOUT_CLASSIFICATION	2.7962674155377665E-7	DEFECT
//label.setFont(font);	WITHOUT_CLASSIFICATION	0.9999982976119645	WITHOUT_CLASSIFICATION	1.7023880355386277E-6	DEFECT
// row 3	WITHOUT_CLASSIFICATION	0.9999616869371396	WITHOUT_CLASSIFICATION	3.8313062860369664E-5	DEFECT
// row 3	WITHOUT_CLASSIFICATION	0.9999616869371396	WITHOUT_CLASSIFICATION	3.8313062860369664E-5	DEFECT
// Use a colored text field to show the color	WITHOUT_CLASSIFICATION	0.9999994219682247	WITHOUT_CLASSIFICATION	5.780317753178796E-7	DEFECT
//tickLabelFontField.setFont(SwtUtils.toSwtFontData(getDisplay(), // axis.getTickLabelFont()));	WITHOUT_CLASSIFICATION	0.9999998371155691	WITHOUT_CLASSIFICATION	1.628844308706982E-7	DEFECT
// Create the font-change dialog	WITHOUT_CLASSIFICATION	0.9999999402515738	WITHOUT_CLASSIFICATION	5.974842618912836E-8	DEFECT
// Create the font-change dialog	WITHOUT_CLASSIFICATION	0.9999999402515738	WITHOUT_CLASSIFICATION	5.974842618912836E-8	DEFECT
//tickLabelFontField.setFont(font);	WITHOUT_CLASSIFICATION	0.9999950578657718	WITHOUT_CLASSIFICATION	4.9421342282603506E-6	DEFECT
// return the appropriate axis editor	WITHOUT_CLASSIFICATION	0.999998821522248	WITHOUT_CLASSIFICATION	1.1784777519542174E-6	DEFECT
//this.minimumRangeValue.addModifyListener(this); //this.minimumRangeValue.addVerifyListener(this);	WITHOUT_CLASSIFICATION	0.9999998648698758	WITHOUT_CLASSIFICATION	1.3513012413151795E-7	DEFECT
//this.maximumRangeValue.addModifyListener(this); //this.maximumRangeValue.addVerifyListener(this);	WITHOUT_CLASSIFICATION	0.9999995800571654	WITHOUT_CLASSIFICATION	4.199428347141791E-7	DEFECT
// verify min value	WITHOUT_CLASSIFICATION	0.9999974394895859	WITHOUT_CLASSIFICATION	2.560510414138156E-6	DEFECT
// verify max value	WITHOUT_CLASSIFICATION	0.9999947692874617	WITHOUT_CLASSIFICATION	5.230712538269889E-6	DEFECT
//deal with domain axis	WITHOUT_CLASSIFICATION	0.9999996235029358	WITHOUT_CLASSIFICATION	3.764970641890143E-7	DEFECT
//deal with range axis	WITHOUT_CLASSIFICATION	0.9999985975292177	WITHOUT_CLASSIFICATION	1.402470782328837E-6	DEFECT
//deal with plot appearance	WITHOUT_CLASSIFICATION	0.9999927427325458	WITHOUT_CLASSIFICATION	7.257267454140559E-6	DEFECT
// set the axis properties	WITHOUT_CLASSIFICATION	0.9999996768521725	WITHOUT_CLASSIFICATION	3.2314782743469417E-7	DEFECT
// row 1: stroke	WITHOUT_CLASSIFICATION	0.9993575201879589	WITHOUT_CLASSIFICATION	6.42479812041174E-4	DEFECT
// row 3: background paint	WITHOUT_CLASSIFICATION	0.9999452925031636	WITHOUT_CLASSIFICATION	5.470749683652137E-5	DEFECT
// row 4: orientation	WITHOUT_CLASSIFICATION	0.999901282820458	WITHOUT_CLASSIFICATION	9.871717954193135E-5	DEFECT
// row 2	WITHOUT_CLASSIFICATION	0.9999465918788143	WITHOUT_CLASSIFICATION	5.340812118577973E-5	DEFECT
//titleField.setFont(font);	WITHOUT_CLASSIFICATION	0.9999939887010854	WITHOUT_CLASSIFICATION	6.011298914646765E-6	DEFECT
// row 4	WITHOUT_CLASSIFICATION	0.9999749003551205	WITHOUT_CLASSIFICATION	2.5099644879512344E-5	DEFECT
// build first tab	WITHOUT_CLASSIFICATION	0.99999977161791	WITHOUT_CLASSIFICATION	2.2838208994716647E-7	DEFECT
// we can't do anything	WITHOUT_CLASSIFICATION	0.9999949331849923	WITHOUT_CLASSIFICATION	5.066815007583959E-6	DEFECT
// backgroundImage	WITHOUT_CLASSIFICATION	0.9999989551071872	WITHOUT_CLASSIFICATION	1.0448928127566375E-6	DEFECT
// row keys...	WITHOUT_CLASSIFICATION	0.9998993299656588	WITHOUT_CLASSIFICATION	1.0067003434111492E-4	DEFECT
// column keys...	WITHOUT_CLASSIFICATION	0.9999643578818157	WITHOUT_CLASSIFICATION	3.564211818427571E-5	DEFECT
// since this is only used by clearRect(), we don't update the GC yet	WITHOUT_CLASSIFICATION	0.9999939260312184	WITHOUT_CLASSIFICATION	6.07396878167438E-6	DEFECT
// build the third tab	WITHOUT_CLASSIFICATION	0.9999998445866182	WITHOUT_CLASSIFICATION	1.5541338181383807E-7	DEFECT
// ok and cancel buttons	WITHOUT_CLASSIFICATION	0.9999998941096935	WITHOUT_CLASSIFICATION	1.0589030658577645E-7	DEFECT
// to be consistent with other Graphics2D implementations	WITHOUT_CLASSIFICATION	0.9999833104901311	WITHOUT_CLASSIFICATION	1.668950986889368E-5	DEFECT
// padding	WITHOUT_CLASSIFICATION	0.9999803844662634	WITHOUT_CLASSIFICATION	1.9615533736577654E-5	DEFECT
// apply dash style if any	WITHOUT_CLASSIFICATION	0.9999996962748281	WITHOUT_CLASSIFICATION	3.0372517183708866E-7	DEFECT
// handle transparency and compositing.	WITHOUT_CLASSIFICATION	0.99999994685532	WITHOUT_CLASSIFICATION	5.314467999231312E-8	DEFECT
// we can't use the following valueOf() method, because it // won't compile with JDK1.4 // this.colorsPool.get(Integer.valueOf(awtColor.getRGB()));	WITHOUT_CLASSIFICATION	0.9999995510957553	WITHOUT_CLASSIFICATION	4.489042447681491E-7	DEFECT
// set the line style to solid by default	WITHOUT_CLASSIFICATION	0.9999999851712018	WITHOUT_CLASSIFICATION	1.4828798085545383E-8	DEFECT
// retrieve the swt font description in an os indept way	WITHOUT_CLASSIFICATION	0.9999982363988548	WITHOUT_CLASSIFICATION	1.7636011453003115E-6	DEFECT
// Note that for consistency with the AWT implementation, it is // necessary to switch temporarily the foreground and background // colours	WITHOUT_CLASSIFICATION	0.9999994418536761	WITHOUT_CLASSIFICATION	5.581463239046457E-7	DEFECT
// for now we simply want to extract the chars from the iterator // and call an unstyled text renderer	WITHOUT_CLASSIFICATION	0.9999989057654092	WITHOUT_CLASSIFICATION	1.0942345907643705E-6	DEFECT
// create a new awt font with the appropiate data	WITHOUT_CLASSIFICATION	0.9999940136479532	WITHOUT_CLASSIFICATION	5.986352046730716E-6	DEFECT
// we dispose resources we own but user must dispose gc	WITHOUT_CLASSIFICATION	0.9999932472733494	WITHOUT_CLASSIFICATION	6.7527266506095965E-6	DEFECT
// see comment above //this.colorsPool.put(Integer.valueOf(awtColor.getRGB()), swtColor);	WITHOUT_CLASSIFICATION	0.9999999973769581	WITHOUT_CLASSIFICATION	2.623041868511931E-9	DEFECT
// SWT and AWT share the same style constants.	WITHOUT_CLASSIFICATION	0.9999977378680176	WITHOUT_CLASSIFICATION	2.26213198246997E-6	DEFECT
// convert the font size (in pt for awt) to height in pixels for swt	WITHOUT_CLASSIFICATION	0.9997639976449252	WITHOUT_CLASSIFICATION	2.3600235507486713E-4	DEFECT
//this.myColor = new Color(getDisplay(), color.getRGB());	WITHOUT_CLASSIFICATION	0.9999998435031021	WITHOUT_CLASSIFICATION	1.564968978959303E-7	DEFECT
// renderingHints	WITHOUT_CLASSIFICATION	0.9999963741126289	WITHOUT_CLASSIFICATION	3.6258873711236807E-6	DEFECT
// borderStroke	WITHOUT_CLASSIFICATION	0.9999738281548072	WITHOUT_CLASSIFICATION	2.6171845192777796E-5	DEFECT
// borderVisible	WITHOUT_CLASSIFICATION	0.9999997498381382	WITHOUT_CLASSIFICATION	2.5016186169928037E-7	DEFECT
// borderPaint	WITHOUT_CLASSIFICATION	0.9999998993920687	WITHOUT_CLASSIFICATION	1.006079313402384E-7	DEFECT
// title	WITHOUT_CLASSIFICATION	0.9999785180322625	WITHOUT_CLASSIFICATION	2.148196773758713E-5	DEFECT
// subtitles	WITHOUT_CLASSIFICATION	0.9999978234766097	WITHOUT_CLASSIFICATION	2.1765233902811465E-6	DEFECT
// plot	WITHOUT_CLASSIFICATION	0.9999837271775369	WITHOUT_CLASSIFICATION	1.627282246305522E-5	DEFECT
// backgroundPaint	WITHOUT_CLASSIFICATION	0.9999977954667321	WITHOUT_CLASSIFICATION	2.2045332678924995E-6	DEFECT
// backgroundImageAlignment	WITHOUT_CLASSIFICATION	0.9999990229157311	WITHOUT_CLASSIFICATION	9.770842690221177E-7	DEFECT
// backgroundImageAlpha	WITHOUT_CLASSIFICATION	0.9999988170595587	WITHOUT_CLASSIFICATION	1.1829404412875886E-6	DEFECT
// no event is generated if the dataset is already empty	WITHOUT_CLASSIFICATION	0.999999996794946	WITHOUT_CLASSIFICATION	3.2050538728862833E-9	DEFECT
// create the chart...	WITHOUT_CLASSIFICATION	0.9999985738987163	WITHOUT_CLASSIFICATION	1.4261012838123405E-6	DEFECT
// create the chart...	WITHOUT_CLASSIFICATION	0.9999985738987163	WITHOUT_CLASSIFICATION	1.4261012838123405E-6	DEFECT
// try a Double.POSITIVE_INFINITY	WITHOUT_CLASSIFICATION	0.9999942082331679	WITHOUT_CLASSIFICATION	5.791766832210481E-6	DEFECT
// adding something to the returned list should NOT change the chart	WITHOUT_CLASSIFICATION	0.9999999999410489	WITHOUT_CLASSIFICATION	5.895108460084926E-11	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999995722400108	WITHOUT_CLASSIFICATION	4.2775998929434456E-7	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.9999926007577067	WITHOUT_CLASSIFICATION	7.399242293329548E-6	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.9999926007577067	WITHOUT_CLASSIFICATION	7.399242293329548E-6	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.9999926007577067	WITHOUT_CLASSIFICATION	7.399242293329548E-6	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.9999926007577067	WITHOUT_CLASSIFICATION	7.399242293329548E-6	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.9999926007577067	WITHOUT_CLASSIFICATION	7.399242293329548E-6	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.9999926007577067	WITHOUT_CLASSIFICATION	7.399242293329548E-6	DEFECT
// fillPaintTransformer	WITHOUT_CLASSIFICATION	0.9999999938628875	WITHOUT_CLASSIFICATION	6.1371125290464796E-9	DEFECT
// outlinePaint	WITHOUT_CLASSIFICATION	0.9999991928013184	WITHOUT_CLASSIFICATION	8.071986816482716E-7	DEFECT
// labelFont	WITHOUT_CLASSIFICATION	0.9999968310946454	WITHOUT_CLASSIFICATION	3.168905354639804E-6	DEFECT
// chart title	WITHOUT_CLASSIFICATION	0.999999593287837	WITHOUT_CLASSIFICATION	4.067121629922216E-7	DEFECT
// labelPaint	WITHOUT_CLASSIFICATION	0.9999992827391619	WITHOUT_CLASSIFICATION	7.172608381114132E-7	DEFECT
// linePaint	WITHOUT_CLASSIFICATION	0.9999992202740612	WITHOUT_CLASSIFICATION	7.797259387003413E-7	DEFECT
// fillPaint	WITHOUT_CLASSIFICATION	0.9999986187250867	WITHOUT_CLASSIFICATION	1.3812749133949998E-6	DEFECT
// chart title	WITHOUT_CLASSIFICATION	0.999999593287837	WITHOUT_CLASSIFICATION	4.067121629922216E-7	DEFECT
// the clone references the same dataset as the original	WITHOUT_CLASSIFICATION	0.9999990828166232	WITHOUT_CLASSIFICATION	9.171833767693168E-7	DEFECT
// chart title	WITHOUT_CLASSIFICATION	0.999999593287837	WITHOUT_CLASSIFICATION	4.067121629922216E-7	DEFECT
// chart title	WITHOUT_CLASSIFICATION	0.999999593287837	WITHOUT_CLASSIFICATION	4.067121629922216E-7	DEFECT
// chart title	WITHOUT_CLASSIFICATION	0.999999593287837	WITHOUT_CLASSIFICATION	4.067121629922216E-7	DEFECT
// data // include legend // tooltips // urls	WITHOUT_CLASSIFICATION	0.9999998056562032	WITHOUT_CLASSIFICATION	1.943437967742159E-7	DEFECT
// include legend	WITHOUT_CLASSIFICATION	0.9999988779893182	WITHOUT_CLASSIFICATION	1.1220106818485543E-6	DEFECT
// a null key should throw an IllegalArgumentException	WITHOUT_CLASSIFICATION	0.9999870705574941	WITHOUT_CLASSIFICATION	1.2929442505774955E-5	DEFECT
// a null key should throw an IllegalArgumentException	WITHOUT_CLASSIFICATION	0.9999870705574941	WITHOUT_CLASSIFICATION	1.2929442505774955E-5	DEFECT
// include legend	WITHOUT_CLASSIFICATION	0.9999988779893182	WITHOUT_CLASSIFICATION	1.1220106818485543E-6	DEFECT
// include legend	WITHOUT_CLASSIFICATION	0.9999988779893182	WITHOUT_CLASSIFICATION	1.1220106818485543E-6	DEFECT
// include legend	WITHOUT_CLASSIFICATION	0.9999988779893182	WITHOUT_CLASSIFICATION	1.1220106818485543E-6	DEFECT
// include legend	WITHOUT_CLASSIFICATION	0.9999988779893182	WITHOUT_CLASSIFICATION	1.1220106818485543E-6	DEFECT
// include legend	WITHOUT_CLASSIFICATION	0.9999988779893182	WITHOUT_CLASSIFICATION	1.1220106818485543E-6	DEFECT
// data	WITHOUT_CLASSIFICATION	0.9999801625427902	WITHOUT_CLASSIFICATION	1.9837457209854713E-5	DEFECT
// data	WITHOUT_CLASSIFICATION	0.9999801625427902	WITHOUT_CLASSIFICATION	1.9837457209854713E-5	DEFECT
// data	WITHOUT_CLASSIFICATION	0.9999801625427902	WITHOUT_CLASSIFICATION	1.9837457209854713E-5	DEFECT
// data	WITHOUT_CLASSIFICATION	0.9999801625427902	WITHOUT_CLASSIFICATION	1.9837457209854713E-5	DEFECT
/* BufferedImage img =*/	WITHOUT_CLASSIFICATION	0.9999547601043574	WITHOUT_CLASSIFICATION	4.5239895642611296E-5	DEFECT
// try a listener type that isn't registered	WITHOUT_CLASSIFICATION	0.9999938834898981	WITHOUT_CLASSIFICATION	6.116510101792018E-6	DEFECT
// name	WITHOUT_CLASSIFICATION	0.9999987110704353	WITHOUT_CLASSIFICATION	1.2889295647555643E-6	DEFECT
//extraLargeFont	WITHOUT_CLASSIFICATION	0.999994948233405	WITHOUT_CLASSIFICATION	5.0517665951382406E-6	DEFECT
//largeFont	WITHOUT_CLASSIFICATION	0.9999958501810193	WITHOUT_CLASSIFICATION	4.14981898068553E-6	DEFECT
//regularFont;	WITHOUT_CLASSIFICATION	0.999990231489804	WITHOUT_CLASSIFICATION	9.768510195830853E-6	DEFECT
//titlePaint;	WITHOUT_CLASSIFICATION	0.999996017853098	WITHOUT_CLASSIFICATION	3.982146901982499E-6	DEFECT
//subtitlePaint;	WITHOUT_CLASSIFICATION	0.9999976683052092	WITHOUT_CLASSIFICATION	2.3316947907151084E-6	DEFECT
//chartBackgroundPaint;	WITHOUT_CLASSIFICATION	0.9999931776872236	WITHOUT_CLASSIFICATION	6.822312776422499E-6	DEFECT
//legendBackgroundPaint;	WITHOUT_CLASSIFICATION	0.9999865164298465	WITHOUT_CLASSIFICATION	1.3483570153472975E-5	DEFECT
//legendItemPaint;	WITHOUT_CLASSIFICATION	0.9999960745322177	WITHOUT_CLASSIFICATION	3.925467782205751E-6	DEFECT
//drawingSupplier;	WITHOUT_CLASSIFICATION	0.9999977247134477	WITHOUT_CLASSIFICATION	2.275286552234113E-6	DEFECT
// value 1	WITHOUT_CLASSIFICATION	0.9999954545979812	WITHOUT_CLASSIFICATION	4.545402018838705E-6	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.9999926007577067	WITHOUT_CLASSIFICATION	7.399242293329548E-6	DEFECT
// test independence	WITHOUT_CLASSIFICATION	0.9999983753556984	WITHOUT_CLASSIFICATION	1.6246443016250042E-6	DEFECT
//tickLabelPaint;	WITHOUT_CLASSIFICATION	0.9999989389878023	WITHOUT_CLASSIFICATION	1.06101219766807E-6	DEFECT
//itemLabelPaint;	WITHOUT_CLASSIFICATION	0.9999996005125915	WITHOUT_CLASSIFICATION	3.9948740846286296E-7	DEFECT
//shadowVisible;	WITHOUT_CLASSIFICATION	0.9999932461377767	WITHOUT_CLASSIFICATION	6.753862223247765E-6	DEFECT
//shadowPaint;	WITHOUT_CLASSIFICATION	0.9999958858678448	WITHOUT_CLASSIFICATION	4.1141321551353965E-6	DEFECT
//barPainter;	WITHOUT_CLASSIFICATION	0.9999978386503366	WITHOUT_CLASSIFICATION	2.1613496634285633E-6	DEFECT
//xyBarPainter;	WITHOUT_CLASSIFICATION	0.9999927476842566	WITHOUT_CLASSIFICATION	7.252315743444222E-6	DEFECT
//thermometerPaint;	WITHOUT_CLASSIFICATION	0.9999996633610267	WITHOUT_CLASSIFICATION	3.36638973242005E-7	DEFECT
//wallPaint;	WITHOUT_CLASSIFICATION	0.999976705237508	WITHOUT_CLASSIFICATION	2.329476249193013E-5	DEFECT
//errorIndicatorPaint;	WITHOUT_CLASSIFICATION	0.9999851237563736	WITHOUT_CLASSIFICATION	1.4876243626341602E-5	DEFECT
//gridBandAlternatePaint	WITHOUT_CLASSIFICATION	0.9999508507878356	WITHOUT_CLASSIFICATION	4.9149212164410626E-5	DEFECT
//private double angle;	WITHOUT_CLASSIFICATION	0.999999480526339	WITHOUT_CLASSIFICATION	5.194736609677286E-7	DEFECT
//private double tipRadius;	WITHOUT_CLASSIFICATION	0.9999999453007884	WITHOUT_CLASSIFICATION	5.469921149233379E-8	DEFECT
//private double tipRadius;	WITHOUT_CLASSIFICATION	0.9999999453007884	WITHOUT_CLASSIFICATION	5.469921149233379E-8	DEFECT
//private double baseRadius;	WITHOUT_CLASSIFICATION	0.9999999031990058	WITHOUT_CLASSIFICATION	9.680099424491688E-8	DEFECT
//private double arrowLength;	WITHOUT_CLASSIFICATION	0.9999994460025153	WITHOUT_CLASSIFICATION	5.539974847391582E-7	DEFECT
//private double arrowLength;	WITHOUT_CLASSIFICATION	0.9999994460025153	WITHOUT_CLASSIFICATION	5.539974847391582E-7	DEFECT
//private double arrowWidth;	WITHOUT_CLASSIFICATION	0.9999997914945709	WITHOUT_CLASSIFICATION	2.0850542911318596E-7	DEFECT
//private Stroke arrowStroke;	WITHOUT_CLASSIFICATION	0.9999271544796264	WITHOUT_CLASSIFICATION	7.284552037355112E-5	DEFECT
//private Stroke arrowStroke;	WITHOUT_CLASSIFICATION	0.9999271544796264	WITHOUT_CLASSIFICATION	7.284552037355112E-5	DEFECT
//private Paint arrowPaint;	WITHOUT_CLASSIFICATION	0.9999992007036858	WITHOUT_CLASSIFICATION	7.992963143631612E-7	DEFECT
//private Paint arrowPaint;	WITHOUT_CLASSIFICATION	0.9999992007036858	WITHOUT_CLASSIFICATION	7.992963143631612E-7	DEFECT
//private double labelOffset;	WITHOUT_CLASSIFICATION	0.9999999036108956	WITHOUT_CLASSIFICATION	9.638910428131039E-8	DEFECT
// text	WITHOUT_CLASSIFICATION	0.9999800084477466	WITHOUT_CLASSIFICATION	1.9991552253410935E-5	DEFECT
// text	WITHOUT_CLASSIFICATION	0.9999800084477466	WITHOUT_CLASSIFICATION	1.9991552253410935E-5	DEFECT
// x	WITHOUT_CLASSIFICATION	0.9999752829084022	WITHOUT_CLASSIFICATION	2.4717091597762782E-5	DEFECT
// y	WITHOUT_CLASSIFICATION	0.9999750051039826	WITHOUT_CLASSIFICATION	2.4994896017342443E-5	DEFECT
// font	WITHOUT_CLASSIFICATION	0.9999909359043392	WITHOUT_CLASSIFICATION	9.064095660756724E-6	DEFECT
// paint	WITHOUT_CLASSIFICATION	0.9999979187961054	WITHOUT_CLASSIFICATION	2.0812038945755348E-6	DEFECT
// paint	WITHOUT_CLASSIFICATION	0.9999979187961054	WITHOUT_CLASSIFICATION	2.0812038945755348E-6	DEFECT
// rotation anchor	WITHOUT_CLASSIFICATION	0.9999971156304854	WITHOUT_CLASSIFICATION	2.8843695145375445E-6	DEFECT
// rotation angle	WITHOUT_CLASSIFICATION	0.9999953301702015	WITHOUT_CLASSIFICATION	4.669829798587316E-6	DEFECT
// text anchor	WITHOUT_CLASSIFICATION	0.9999982380145664	WITHOUT_CLASSIFICATION	1.7619854335281534E-6	DEFECT
// textAnchor	WITHOUT_CLASSIFICATION	0.999994449101062	WITHOUT_CLASSIFICATION	5.550898937997763E-6	DEFECT
// rotationAnchor	WITHOUT_CLASSIFICATION	0.999993238487023	WITHOUT_CLASSIFICATION	6.761512976862891E-6	DEFECT
// rotationAngle	WITHOUT_CLASSIFICATION	0.9999884884889425	WITHOUT_CLASSIFICATION	1.1511511057511287E-5	DEFECT
// category 1	WITHOUT_CLASSIFICATION	0.9999937247769486	WITHOUT_CLASSIFICATION	6.275223051394569E-6	DEFECT
// category 2	WITHOUT_CLASSIFICATION	0.9999906039063599	WITHOUT_CLASSIFICATION	9.396093640032742E-6	DEFECT
// value 2	WITHOUT_CLASSIFICATION	0.9999929510441149	WITHOUT_CLASSIFICATION	7.048955885138382E-6	DEFECT
// stroke	WITHOUT_CLASSIFICATION	0.9999643721325285	WITHOUT_CLASSIFICATION	3.5627867471412034E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999898643226841	WITHOUT_CLASSIFICATION	1.0135677315940674E-5	DEFECT
// outlinePaint	WITHOUT_CLASSIFICATION	0.9999991928013184	WITHOUT_CLASSIFICATION	8.071986816482716E-7	DEFECT
// stroke	WITHOUT_CLASSIFICATION	0.9999643721325285	WITHOUT_CLASSIFICATION	3.5627867471412034E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999898643226841	WITHOUT_CLASSIFICATION	1.0135677315940674E-5	DEFECT
// category	WITHOUT_CLASSIFICATION	0.999996153836675	WITHOUT_CLASSIFICATION	3.846163325100077E-6	DEFECT
// categoryAnchor	WITHOUT_CLASSIFICATION	0.9999977875549195	WITHOUT_CLASSIFICATION	2.212445080423739E-6	DEFECT
// value	WITHOUT_CLASSIFICATION	0.9999978812404903	WITHOUT_CLASSIFICATION	2.118759509797528E-6	DEFECT
// x0	WITHOUT_CLASSIFICATION	0.9999853467416404	WITHOUT_CLASSIFICATION	1.4653258359683306E-5	DEFECT
// tickUnit	WITHOUT_CLASSIFICATION	0.9999863129858239	WITHOUT_CLASSIFICATION	1.3687014176147824E-5	DEFECT
// tickMarkPosition	WITHOUT_CLASSIFICATION	0.999994346409309	WITHOUT_CLASSIFICATION	5.653590691037518E-6	DEFECT
// timeline	WITHOUT_CLASSIFICATION	0.9999992243626994	WITHOUT_CLASSIFICATION	7.756373006366729E-7	DEFECT
// range	WITHOUT_CLASSIFICATION	0.9999989166243016	WITHOUT_CLASSIFICATION	1.0833756984192928E-6	DEFECT
// check that setting the min date to something on or after the // current min date works...	WITHOUT_CLASSIFICATION	0.9999582922410065	WITHOUT_CLASSIFICATION	4.17077589934116E-5	DEFECT
// five dates to check...	WITHOUT_CLASSIFICATION	0.9999994518687175	WITHOUT_CLASSIFICATION	5.48131282440594E-7	DEFECT
// START: check d0 and d1	WITHOUT_CLASSIFICATION	0.9999992671706989	WITHOUT_CLASSIFICATION	7.328293012410588E-7	DEFECT
// START: check d0 and d1	WITHOUT_CLASSIFICATION	0.9999992671706989	WITHOUT_CLASSIFICATION	7.328293012410588E-7	DEFECT
// START: check d0 and d1	WITHOUT_CLASSIFICATION	0.9999992671706989	WITHOUT_CLASSIFICATION	7.328293012410588E-7	DEFECT
// START: check d0 and d1	WITHOUT_CLASSIFICATION	0.9999992671706989	WITHOUT_CLASSIFICATION	7.328293012410588E-7	DEFECT
// START: check d0 and d1	WITHOUT_CLASSIFICATION	0.9999992671706989	WITHOUT_CLASSIFICATION	7.328293012410588E-7	DEFECT
// START: check d0 and d1	WITHOUT_CLASSIFICATION	0.9999992671706989	WITHOUT_CLASSIFICATION	7.328293012410588E-7	DEFECT
// START: check d0 and d1	WITHOUT_CLASSIFICATION	0.9999992671706989	WITHOUT_CLASSIFICATION	7.328293012410588E-7	DEFECT
// START: check d0 and d1	WITHOUT_CLASSIFICATION	0.9999992671706989	WITHOUT_CLASSIFICATION	7.328293012410588E-7	DEFECT
// MIDDLE: check d1, d2 and d3	WITHOUT_CLASSIFICATION	0.9999959961090639	WITHOUT_CLASSIFICATION	4.003890936196718E-6	DEFECT
// MIDDLE: check d1, d2 and d3	WITHOUT_CLASSIFICATION	0.9999959961090639	WITHOUT_CLASSIFICATION	4.003890936196718E-6	DEFECT
// MIDDLE: check d1, d2 and d3	WITHOUT_CLASSIFICATION	0.9999959961090639	WITHOUT_CLASSIFICATION	4.003890936196718E-6	DEFECT
// MIDDLE: check d1, d2 and d3	WITHOUT_CLASSIFICATION	0.9999959961090639	WITHOUT_CLASSIFICATION	4.003890936196718E-6	DEFECT
// MIDDLE: check d1, d2 and d3	WITHOUT_CLASSIFICATION	0.9999959961090639	WITHOUT_CLASSIFICATION	4.003890936196718E-6	DEFECT
// MIDDLE: check d1, d2 and d3	WITHOUT_CLASSIFICATION	0.9999959961090639	WITHOUT_CLASSIFICATION	4.003890936196718E-6	DEFECT
// MIDDLE: check d1, d2 and d3	WITHOUT_CLASSIFICATION	0.9999959961090639	WITHOUT_CLASSIFICATION	4.003890936196718E-6	DEFECT
// MIDDLE: check d1, d2 and d3	WITHOUT_CLASSIFICATION	0.9999959961090639	WITHOUT_CLASSIFICATION	4.003890936196718E-6	DEFECT
// END: check d3 and d4	WITHOUT_CLASSIFICATION	0.9999988331011711	WITHOUT_CLASSIFICATION	1.1668988289953933E-6	DEFECT
// END: check d3 and d4	WITHOUT_CLASSIFICATION	0.9999988331011711	WITHOUT_CLASSIFICATION	1.1668988289953933E-6	DEFECT
// END: check d3 and d4	WITHOUT_CLASSIFICATION	0.9999988331011711	WITHOUT_CLASSIFICATION	1.1668988289953933E-6	DEFECT
// END: check d3 and d4	WITHOUT_CLASSIFICATION	0.9999988331011711	WITHOUT_CLASSIFICATION	1.1668988289953933E-6	DEFECT
// END: check d3 and d4	WITHOUT_CLASSIFICATION	0.9999988331011711	WITHOUT_CLASSIFICATION	1.1668988289953933E-6	DEFECT
// END: check d3 and d4	WITHOUT_CLASSIFICATION	0.9999988331011711	WITHOUT_CLASSIFICATION	1.1668988289953933E-6	DEFECT
// END: check d3 and d4	WITHOUT_CLASSIFICATION	0.9999988331011711	WITHOUT_CLASSIFICATION	1.1668988289953933E-6	DEFECT
// END: check d3 and d4	WITHOUT_CLASSIFICATION	0.9999988331011711	WITHOUT_CLASSIFICATION	1.1668988289953933E-6	DEFECT
// START: check d0	WITHOUT_CLASSIFICATION	0.9999968281649737	WITHOUT_CLASSIFICATION	3.1718350262610497E-6	DEFECT
// START: check d0	WITHOUT_CLASSIFICATION	0.9999968281649737	WITHOUT_CLASSIFICATION	3.1718350262610497E-6	DEFECT
// END: check d0	WITHOUT_CLASSIFICATION	0.999993978447042	WITHOUT_CLASSIFICATION	6.02155295795446E-6	DEFECT
// MIDDLE: check d0	WITHOUT_CLASSIFICATION	0.9999926698415667	WITHOUT_CLASSIFICATION	7.330158433355868E-6	DEFECT
// MIDDLE: check d0	WITHOUT_CLASSIFICATION	0.9999926698415667	WITHOUT_CLASSIFICATION	7.330158433355868E-6	DEFECT
// END: check d0	WITHOUT_CLASSIFICATION	0.999993978447042	WITHOUT_CLASSIFICATION	6.02155295795446E-6	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999995722400108	WITHOUT_CLASSIFICATION	4.2775998929434456E-7	DEFECT
// test independence	WITHOUT_CLASSIFICATION	0.9999983753556984	WITHOUT_CLASSIFICATION	1.6246443016250042E-6	DEFECT
// now repeat for a vertical axis	WITHOUT_CLASSIFICATION	0.999994192241872	WITHOUT_CLASSIFICATION	5.807758128045804E-6	DEFECT
// set start and end date	WITHOUT_CLASSIFICATION	0.9999997429063711	WITHOUT_CLASSIFICATION	2.5709362893577337E-7	DEFECT
// if the bug is still present, this leads to an endless loop	WITHOUT_CLASSIFICATION	0.9998874274646766	WITHOUT_CLASSIFICATION	1.1257253532328615E-4	DEFECT
//private boolean autoRangeIncludesZero;	WITHOUT_CLASSIFICATION	0.9999996048909477	WITHOUT_CLASSIFICATION	3.951090523250068E-7	DEFECT
//private NumberTickUnit tickUnit;	WITHOUT_CLASSIFICATION	0.9999993695667232	WITHOUT_CLASSIFICATION	6.304332768425125E-7	DEFECT
//private NumberFormat numberFormatOverride;	WITHOUT_CLASSIFICATION	0.9999991710630773	WITHOUT_CLASSIFICATION	8.28936922656664E-7	DEFECT
// now replacing the dataset should update the axis range...	WITHOUT_CLASSIFICATION	0.9999938620520795	WITHOUT_CLASSIFICATION	6.1379479205706955E-6	DEFECT
//axis.setRangeType(RangeType.POSITIVE); //axis.setLowerBound(-5.0); //assertEquals(0.0, axis.getLowerBound(), EPSILON);	WITHOUT_CLASSIFICATION	0.9999975293277089	WITHOUT_CLASSIFICATION	2.470672291203886E-6	DEFECT
// check that changing a tick label font in a1 doesn't change a2	WITHOUT_CLASSIFICATION	0.9999993764762743	WITHOUT_CLASSIFICATION	6.235237255598324E-7	DEFECT
// check that changing a tick label paint in a1 doesn't change a2	WITHOUT_CLASSIFICATION	0.9999997200508953	WITHOUT_CLASSIFICATION	2.7994910466371347E-7	DEFECT
// check that changing a category label tooltip in a1 doesn't change a2	WITHOUT_CLASSIFICATION	0.9999998882744888	WITHOUT_CLASSIFICATION	1.1172551112597956E-7	DEFECT
// set axis bounds to be both greater than 1	WITHOUT_CLASSIFICATION	0.999997883389598	WITHOUT_CLASSIFICATION	2.1166104019898128E-6	DEFECT
// check for bounds interval that includes 1	WITHOUT_CLASSIFICATION	0.9999999058696237	WITHOUT_CLASSIFICATION	9.413037620064413E-8	DEFECT
// check for bounds interval that includes 1	WITHOUT_CLASSIFICATION	0.9999999058696237	WITHOUT_CLASSIFICATION	9.413037620064413E-8	DEFECT
// check for both bounds smaller than 1	WITHOUT_CLASSIFICATION	0.9999985849999324	WITHOUT_CLASSIFICATION	1.4150000676618027E-6	DEFECT
// check for both bounds smaller than 1	WITHOUT_CLASSIFICATION	0.9999985849999324	WITHOUT_CLASSIFICATION	1.4150000676618027E-6	DEFECT
// lowerMargin	WITHOUT_CLASSIFICATION	0.9999962868059941	WITHOUT_CLASSIFICATION	3.713194005991062E-6	DEFECT
// upperMargin	WITHOUT_CLASSIFICATION	0.9999992332814693	WITHOUT_CLASSIFICATION	7.667185307119694E-7	DEFECT
// categoryMargin	WITHOUT_CLASSIFICATION	0.9999979125355578	WITHOUT_CLASSIFICATION	2.0874644421934288E-6	DEFECT
// maxCategoryLabelWidthRatio	WITHOUT_CLASSIFICATION	0.9999996591653081	WITHOUT_CLASSIFICATION	3.4083469190626134E-7	DEFECT
// categoryLabelPositionOffset	WITHOUT_CLASSIFICATION	0.9999997017383817	WITHOUT_CLASSIFICATION	2.9826161836030835E-7	DEFECT
// categoryLabelPositions	WITHOUT_CLASSIFICATION	0.9999997308713248	WITHOUT_CLASSIFICATION	2.6912867519699677E-7	DEFECT
// check that changing a tick label font in a1 doesn't change a2	WITHOUT_CLASSIFICATION	0.9999993764762743	WITHOUT_CLASSIFICATION	6.235237255598324E-7	DEFECT
// check that changing a tick label paint in a1 doesn't change a2	WITHOUT_CLASSIFICATION	0.9999997200508953	WITHOUT_CLASSIFICATION	2.7994910466371347E-7	DEFECT
// check that changing a category label tooltip in a1 doesn't change a2	WITHOUT_CLASSIFICATION	0.9999998882744888	WITHOUT_CLASSIFICATION	1.1172551112597956E-7	DEFECT
// 4-ms test base timeline for ms2Timeline using 1 included and 1 // excluded segments // // timeline start time = 0 //   | //   v //   0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 ... // +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+... // |  |  |  |  |EE|EE|EE|EE|  |  |  |  |EE|EE|EE|EE|  |  |  |  |    <-- ms2BaseTimeline // +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+... //  \__________  _________/            \____  _____/ //             \/                           \/ //        segment group              segment size = 4 ms //	WITHOUT_CLASSIFICATION	0.9999981438425006	WITHOUT_CLASSIFICATION	1.8561574993945213E-6	DEFECT
// categoryLabelToolTips	WITHOUT_CLASSIFICATION	0.9999998919102858	WITHOUT_CLASSIFICATION	1.080897141339294E-7	DEFECT
// categoryLabelURLs	WITHOUT_CLASSIFICATION	0.9999993996279289	WITHOUT_CLASSIFICATION	6.003720710451102E-7	DEFECT
// tickLabelPaint	WITHOUT_CLASSIFICATION	0.9999992720183477	WITHOUT_CLASSIFICATION	7.27981652362036E-7	DEFECT
// tickLabelPaint2	WITHOUT_CLASSIFICATION	0.9999988826260996	WITHOUT_CLASSIFICATION	1.117373900425276E-6	DEFECT
// period	WITHOUT_CLASSIFICATION	0.9999941563062175	WITHOUT_CLASSIFICATION	5.843693782551462E-6	DEFECT
// offset	WITHOUT_CLASSIFICATION	0.9999966176213125	WITHOUT_CLASSIFICATION	3.3823786874990154E-6	DEFECT
// advance line Stroke	WITHOUT_CLASSIFICATION	0.9999978155211953	WITHOUT_CLASSIFICATION	2.1844788047853056E-6	DEFECT
// advance line Visible	WITHOUT_CLASSIFICATION	0.999999978268686	WITHOUT_CLASSIFICATION	2.1731314002881985E-8	DEFECT
// cycle bound mapping	WITHOUT_CLASSIFICATION	0.9999958345189358	WITHOUT_CLASSIFICATION	4.165481064131078E-6	DEFECT
// Create a segmented time line (segment size : 15 minutes)	WITHOUT_CLASSIFICATION	0.9999854584594952	WITHOUT_CLASSIFICATION	1.4541540504747102E-5	DEFECT
// Set start time	WITHOUT_CLASSIFICATION	0.9999997945889273	WITHOUT_CLASSIFICATION	2.0541107266886802E-7	DEFECT
/* PUT exclusions in test */	WITHOUT_CLASSIFICATION	0.999998053225605	WITHOUT_CLASSIFICATION	1.9467743949982887E-6	DEFECT
/** These constants control test cycles in the validateXXXX methods. */	WITHOUT_CLASSIFICATION	0.9999832381894045	WITHOUT_CLASSIFICATION	1.6761810595600284E-5	DEFECT
// test 9am-4pm Monday through Friday timeline	WITHOUT_CLASSIFICATION	0.9999980564370574	WITHOUT_CLASSIFICATION	1.9435629425994524E-6	DEFECT
// calculate 9am on the first Monday after 2001-01-01	WITHOUT_CLASSIFICATION	0.9999362751028443	WITHOUT_CLASSIFICATION	6.372489715570089E-5	DEFECT
// verify attributes set during object construction	WITHOUT_CLASSIFICATION	0.9999998780830077	WITHOUT_CLASSIFICATION	1.219169922404502E-7	DEFECT
// verify attributes set during object construction	WITHOUT_CLASSIFICATION	0.9999998780830077	WITHOUT_CLASSIFICATION	1.219169922404502E-7	DEFECT
////////////////////////////////////////////////////////////////////////// // test one-segment and adjacent segments //////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.999999024487498	WITHOUT_CLASSIFICATION	9.75512501998718E-7	DEFECT
// get two consecutive segments for various tests	WITHOUT_CLASSIFICATION	0.9999994383212755	WITHOUT_CLASSIFICATION	5.616787245849577E-7	DEFECT
// verify segments are consecutive and correct	WITHOUT_CLASSIFICATION	0.9994721241358427	WITHOUT_CLASSIFICATION	5.278758641572833E-4	DEFECT
// verify various indices inside a segment are the same segment	WITHOUT_CLASSIFICATION	0.9999184446642265	WITHOUT_CLASSIFICATION	8.155533577351438E-5	DEFECT
// try next segment	WITHOUT_CLASSIFICATION	0.9999566000006368	WITHOUT_CLASSIFICATION	4.3399999363085086E-5	DEFECT
////////////////////////////////////////////////////////////////////////// // test inc methods //////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999997886659384	WITHOUT_CLASSIFICATION	2.1133406154070816E-7	DEFECT
// test inc() method	WITHOUT_CLASSIFICATION	0.9999998391787346	WITHOUT_CLASSIFICATION	1.6082126546117338E-7	DEFECT
// logically consecutive segments non-physically consecutive // (with non-contained time in between)	WITHOUT_CLASSIFICATION	0.9999994782186068	WITHOUT_CLASSIFICATION	5.217813932267511E-7	DEFECT
// physically consecutive	WITHOUT_CLASSIFICATION	0.9999980447042741	WITHOUT_CLASSIFICATION	1.9552957258599915E-6	DEFECT
// test inc(n) method	WITHOUT_CLASSIFICATION	0.9999999118946397	WITHOUT_CLASSIFICATION	8.810536031831246E-8	DEFECT
// go to another segment to continue test	WITHOUT_CLASSIFICATION	0.9999998453269189	WITHOUT_CLASSIFICATION	1.546730810272742E-7	DEFECT
// clear any exceptions in this timeline	WITHOUT_CLASSIFICATION	0.999995989295247	WITHOUT_CLASSIFICATION	4.010704752911751E-6	DEFECT
// test some included and excluded segments	WITHOUT_CLASSIFICATION	0.9999990765541177	WITHOUT_CLASSIFICATION	9.234458822545479E-7	DEFECT
// should be an included segment	WITHOUT_CLASSIFICATION	0.999990784530053	WITHOUT_CLASSIFICATION	9.215469946959664E-6	DEFECT
// should be an excluded segment	WITHOUT_CLASSIFICATION	0.999970274682796	WITHOUT_CLASSIFICATION	2.9725317203951498E-5	DEFECT
// fill in the exceptions	WITHOUT_CLASSIFICATION	0.9999989428843165	WITHOUT_CLASSIFICATION	1.0571156835252598E-6	DEFECT
// verify list of exceptions	WITHOUT_CLASSIFICATION	0.9999998031410873	WITHOUT_CLASSIFICATION	1.9685891273887976E-7	DEFECT
// include current exception and last one	WITHOUT_CLASSIFICATION	0.9999999485887449	WITHOUT_CLASSIFICATION	5.1411255128576996E-8	DEFECT
// exclude current exception and last one	WITHOUT_CLASSIFICATION	0.9999998185864591	WITHOUT_CLASSIFICATION	1.8141354078200293E-7	DEFECT
// make sure there are no exceptions	WITHOUT_CLASSIFICATION	0.9999999567980213	WITHOUT_CLASSIFICATION	4.32019786078069E-8	DEFECT
// add our exceptions and store locally in ArrayList of Longs	WITHOUT_CLASSIFICATION	0.9999959787713528	WITHOUT_CLASSIFICATION	4.021228647141613E-6	DEFECT
// only add an exception if it is currently an included segment	WITHOUT_CLASSIFICATION	0.9997233614265029	WITHOUT_CLASSIFICATION	2.7663857349710685E-4	DEFECT
// make array of exceptions	WITHOUT_CLASSIFICATION	0.9999986342630564	WITHOUT_CLASSIFICATION	1.365736943725532E-6	DEFECT
// add the base timeline exclusions as timeline's esceptions	WITHOUT_CLASSIFICATION	0.9999999982130693	WITHOUT_CLASSIFICATION	1.7869307471949443E-9	DEFECT
// validate base timeline exclusions added as timeline's esceptions	WITHOUT_CLASSIFICATION	0.9999999839891174	WITHOUT_CLASSIFICATION	1.6010882573457517E-8	DEFECT
// start time...	WITHOUT_CLASSIFICATION	0.9999975284992051	WITHOUT_CLASSIFICATION	2.4715007949557116E-6	DEFECT
// 1-Jan-2000	WITHOUT_CLASSIFICATION	0.9999859089153607	WITHOUT_CLASSIFICATION	1.4091084639329373E-5	DEFECT
//long v = stl.toTimelineValue(946684800020L);	WITHOUT_CLASSIFICATION	0.999998368200984	WITHOUT_CLASSIFICATION	1.6317990160728321E-6	DEFECT
// tick labels visible flag...	WITHOUT_CLASSIFICATION	0.9999659411854591	WITHOUT_CLASSIFICATION	3.405881454078884E-5	DEFECT
// lowerMargin	WITHOUT_CLASSIFICATION	0.9999962868059941	WITHOUT_CLASSIFICATION	3.713194005991062E-6	DEFECT
// upperMargin	WITHOUT_CLASSIFICATION	0.9999992332814693	WITHOUT_CLASSIFICATION	7.667185307119694E-7	DEFECT
// the reverse transformed value will be in the start of the // next non-excluded and non-exception segment	WITHOUT_CLASSIFICATION	0.9999999224266338	WITHOUT_CLASSIFICATION	7.757336615324967E-8	DEFECT
////////////////////////////////////////////////////////////////////////// // test serialization //////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999992154672159	WITHOUT_CLASSIFICATION	7.845327840510787E-7	DEFECT
// verify all timeline segments included in the // baseTimeline.segment are now exceptions	WITHOUT_CLASSIFICATION	0.999999965527576	WITHOUT_CLASSIFICATION	3.447242412085898E-8	DEFECT
////////////////////////////////////////////////////////////////////////// // utility methods //////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999995606503249	WITHOUT_CLASSIFICATION	4.3934967505949333E-7	DEFECT
// subcategories	WITHOUT_CLASSIFICATION	0.9999998665725299	WITHOUT_CLASSIFICATION	1.334274701237047E-7	DEFECT
// subLabelFont	WITHOUT_CLASSIFICATION	0.9999996488831863	WITHOUT_CLASSIFICATION	3.51116813658252E-7	DEFECT
// subLabelPaint	WITHOUT_CLASSIFICATION	0.999999920527197	WITHOUT_CLASSIFICATION	7.94728030150139E-8	DEFECT
// some checks that the clone is independent of the original	WITHOUT_CLASSIFICATION	0.9999999145681032	WITHOUT_CLASSIFICATION	8.54318968652113E-8	DEFECT
// visible flag...	WITHOUT_CLASSIFICATION	0.9999945098860317	WITHOUT_CLASSIFICATION	5.49011396832861E-6	DEFECT
// label...	WITHOUT_CLASSIFICATION	0.9999765804761789	WITHOUT_CLASSIFICATION	2.3419523821174896E-5	DEFECT
// label font...	WITHOUT_CLASSIFICATION	0.9999170160141609	WITHOUT_CLASSIFICATION	8.29839858390175E-5	DEFECT
// label paint...	WITHOUT_CLASSIFICATION	0.9999745299693147	WITHOUT_CLASSIFICATION	2.5470030685282964E-5	DEFECT
// attributed label...	WITHOUT_CLASSIFICATION	0.9999982012698408	WITHOUT_CLASSIFICATION	1.798730159143743E-6	DEFECT
// label insets...	WITHOUT_CLASSIFICATION	0.999991708251238	WITHOUT_CLASSIFICATION	8.291748762076725E-6	DEFECT
// label angle...	WITHOUT_CLASSIFICATION	0.9999811774127269	WITHOUT_CLASSIFICATION	1.882258727312568E-5	DEFECT
// label location...	WITHOUT_CLASSIFICATION	0.9999862716874283	WITHOUT_CLASSIFICATION	1.3728312571617594E-5	DEFECT
// axis line visible...	WITHOUT_CLASSIFICATION	0.9999990250958117	WITHOUT_CLASSIFICATION	9.74904188354276E-7	DEFECT
// axis line stroke...	WITHOUT_CLASSIFICATION	0.9999359195542659	WITHOUT_CLASSIFICATION	6.40804457341774E-5	DEFECT
// axis line paint...	WITHOUT_CLASSIFICATION	0.9999974791139933	WITHOUT_CLASSIFICATION	2.5208860066705178E-6	DEFECT
// tick label font...	WITHOUT_CLASSIFICATION	0.9999030629094205	WITHOUT_CLASSIFICATION	9.693709057938763E-5	DEFECT
// tick label paint...	WITHOUT_CLASSIFICATION	0.9999741458410507	WITHOUT_CLASSIFICATION	2.5854158949206556E-5	DEFECT
// tick marks visible flag...	WITHOUT_CLASSIFICATION	0.9999901789048133	WITHOUT_CLASSIFICATION	9.821095186667989E-6	DEFECT
// tick mark inside length...	WITHOUT_CLASSIFICATION	0.999970366738693	WITHOUT_CLASSIFICATION	2.963326130699243E-5	DEFECT
// tick mark outside length...	WITHOUT_CLASSIFICATION	0.9999899351169126	WITHOUT_CLASSIFICATION	1.0064883087334056E-5	DEFECT
// tick mark stroke...	WITHOUT_CLASSIFICATION	0.9997609106506565	WITHOUT_CLASSIFICATION	2.3908934934360689E-4	DEFECT
// fixed dimension...	WITHOUT_CLASSIFICATION	0.9999147796160127	WITHOUT_CLASSIFICATION	8.522038398726435E-5	DEFECT
// axis line visible flag...	WITHOUT_CLASSIFICATION	0.9999991560430243	WITHOUT_CLASSIFICATION	8.439569757339317E-7	DEFECT
// positiveArrowVisible;	WITHOUT_CLASSIFICATION	0.9999986606550655	WITHOUT_CLASSIFICATION	1.339344934436182E-6	DEFECT
//private Shape upArrow;	WITHOUT_CLASSIFICATION	0.9999990725793506	WITHOUT_CLASSIFICATION	9.274206494262721E-7	DEFECT
//private Shape downArrow;	WITHOUT_CLASSIFICATION	0.999998321099782	WITHOUT_CLASSIFICATION	1.6789002179026423E-6	DEFECT
//private Shape leftArrow;	WITHOUT_CLASSIFICATION	0.9999982008952695	WITHOUT_CLASSIFICATION	1.7991047304695483E-6	DEFECT
//private Shape rightArrow;	WITHOUT_CLASSIFICATION	0.999987891515935	WITHOUT_CLASSIFICATION	1.2108484064953064E-5	DEFECT
// axisLineStroke	WITHOUT_CLASSIFICATION	0.9999971695672887	WITHOUT_CLASSIFICATION	2.83043271137238E-6	DEFECT
// inverted	WITHOUT_CLASSIFICATION	0.9999996956298884	WITHOUT_CLASSIFICATION	3.043701114663637E-7	DEFECT
//private TickUnits standardTickUnits;	WITHOUT_CLASSIFICATION	0.99999798557168	WITHOUT_CLASSIFICATION	2.014428320029779E-6	DEFECT
// verticalTickLabels	WITHOUT_CLASSIFICATION	0.9999995330276749	WITHOUT_CLASSIFICATION	4.669723252444873E-7	DEFECT
// time zone	WITHOUT_CLASSIFICATION	0.9999973728467483	WITHOUT_CLASSIFICATION	2.627153251795174E-6	DEFECT
// locale	WITHOUT_CLASSIFICATION	0.999997769426838	WITHOUT_CLASSIFICATION	2.2305731619123983E-6	DEFECT
// chars	WITHOUT_CLASSIFICATION	0.9999986673482595	WITHOUT_CLASSIFICATION	1.332651740581232E-6	DEFECT
// showYear[]	WITHOUT_CLASSIFICATION	0.99999927284653	WITHOUT_CLASSIFICATION	7.271534701096287E-7	DEFECT
// yearFormatter	WITHOUT_CLASSIFICATION	0.9999939298772454	WITHOUT_CLASSIFICATION	6.07012275459605E-6	DEFECT
// NONE / NONE	WITHOUT_CLASSIFICATION	0.9999992585045485	WITHOUT_CLASSIFICATION	7.414954515932913E-7	DEFECT
// NONE / RANGE	WITHOUT_CLASSIFICATION	0.9999980318555782	WITHOUT_CLASSIFICATION	1.968144421881232E-6	DEFECT
// NONE / FIXED	WITHOUT_CLASSIFICATION	0.9999377513293121	WITHOUT_CLASSIFICATION	6.224867068793042E-5	DEFECT
// RANGE / NONE	WITHOUT_CLASSIFICATION	0.9999923953996274	WITHOUT_CLASSIFICATION	7.604600372632392E-6	DEFECT
// paint	WITHOUT_CLASSIFICATION	0.9999979187961054	WITHOUT_CLASSIFICATION	2.0812038945755348E-6	DEFECT
// RANGE / RANGE	WITHOUT_CLASSIFICATION	0.9999574802747146	WITHOUT_CLASSIFICATION	4.251972528532925E-5	DEFECT
// RANGE / FIXED	WITHOUT_CLASSIFICATION	0.9964437849652437	WITHOUT_CLASSIFICATION	0.003556215034756197	DEFECT
// FIXED / NONE	WITHOUT_CLASSIFICATION	0.9999317088920167	WITHOUT_CLASSIFICATION	6.829110798327243E-5	DEFECT
// FIXED / RANGE	WITHOUT_CLASSIFICATION	0.9989876978199985	WITHOUT_CLASSIFICATION	0.0010123021800015064	DEFECT
// FIXED / FIXED	WITHOUT_CLASSIFICATION	0.9994854760338676	WITHOUT_CLASSIFICATION	5.145239661324076E-4	DEFECT
// TBLRC // 00010 - right item only	WITHOUT_CLASSIFICATION	0.9997968368892326	WITHOUT_CLASSIFICATION	2.03163110767301E-4	DEFECT
// TBLRC // 00010 - right item only	WITHOUT_CLASSIFICATION	0.9997968368892326	WITHOUT_CLASSIFICATION	2.03163110767301E-4	DEFECT
// TBLRC // 00011 - right and center items	WITHOUT_CLASSIFICATION	0.9999970552043428	WITHOUT_CLASSIFICATION	2.9447956572243553E-6	DEFECT
// TBLRC // 00011 - right and center items	WITHOUT_CLASSIFICATION	0.9999970552043428	WITHOUT_CLASSIFICATION	2.9447956572243553E-6	DEFECT
// try case where right item is shorter than center item	WITHOUT_CLASSIFICATION	0.9995956909540226	WITHOUT_CLASSIFICATION	4.043090459774712E-4	DEFECT
// TBLRC // 00100 - left item only	WITHOUT_CLASSIFICATION	0.9999669053773198	WITHOUT_CLASSIFICATION	3.309462268022859E-5	DEFECT
// TBLRC // 00101 - left and center items	WITHOUT_CLASSIFICATION	0.9999994434588512	WITHOUT_CLASSIFICATION	5.565411489009824E-7	DEFECT
// TBLRC // 00101 - left and center items	WITHOUT_CLASSIFICATION	0.9999994434588512	WITHOUT_CLASSIFICATION	5.565411489009824E-7	DEFECT
// try case where left item is shorter than center item	WITHOUT_CLASSIFICATION	0.9999522580359845	WITHOUT_CLASSIFICATION	4.774196401560619E-5	DEFECT
// TBLRC // 00110 - left and right items	WITHOUT_CLASSIFICATION	0.9999896780659903	WITHOUT_CLASSIFICATION	1.0321934009668037E-5	DEFECT
// TBLRC // 00111 - left, right and center items	WITHOUT_CLASSIFICATION	0.9999971653474603	WITHOUT_CLASSIFICATION	2.834652539728466E-6	DEFECT
// TBLRC // 01000 - bottom item only	WITHOUT_CLASSIFICATION	0.9999797010348994	WITHOUT_CLASSIFICATION	2.02989651004869E-5	DEFECT
// TBLRC // 01001 - bottom and center only	WITHOUT_CLASSIFICATION	0.9999988264924969	WITHOUT_CLASSIFICATION	1.1735075030278999E-6	DEFECT
// TBLRC // 01010 - bottom and right only	WITHOUT_CLASSIFICATION	0.9999758840205217	WITHOUT_CLASSIFICATION	2.4115979478348714E-5	DEFECT
// TBLRC // 10110 - top, left and right	WITHOUT_CLASSIFICATION	0.9999657866864725	WITHOUT_CLASSIFICATION	3.42133135275798E-5	DEFECT
// TBLRC // 10111	WITHOUT_CLASSIFICATION	0.999993042162326	WITHOUT_CLASSIFICATION	6.957837673962738E-6	DEFECT
// TBLRC // 11000 - top and bottom only	WITHOUT_CLASSIFICATION	0.9999841237407681	WITHOUT_CLASSIFICATION	1.5876259231891922E-5	DEFECT
// TBLRC // 11001	WITHOUT_CLASSIFICATION	0.9999891874711093	WITHOUT_CLASSIFICATION	1.0812528890694931E-5	DEFECT
// TBLRC // 11010 - top, bottom and right	WITHOUT_CLASSIFICATION	0.9999887659770856	WITHOUT_CLASSIFICATION	1.1234022914420711E-5	DEFECT
// TBLRC // 11100	WITHOUT_CLASSIFICATION	0.9999895014933027	WITHOUT_CLASSIFICATION	1.049850669738624E-5	DEFECT
// TBLRC // 11101	WITHOUT_CLASSIFICATION	0.9999932184703507	WITHOUT_CLASSIFICATION	6.78152964923012E-6	DEFECT
// TBLRC // 11110	WITHOUT_CLASSIFICATION	0.9999947990606671	WITHOUT_CLASSIFICATION	5.200939332888993E-6	DEFECT
// TBLRC // 11111 - all	WITHOUT_CLASSIFICATION	0.9999934849413288	WITHOUT_CLASSIFICATION	6.5150586711207405E-6	DEFECT
// create dataset 1...	WITHOUT_CLASSIFICATION	0.9999992694119223	WITHOUT_CLASSIFICATION	7.30588077701257E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999995722400108	WITHOUT_CLASSIFICATION	4.2775998929434456E-7	DEFECT
// TBLRC // 00110 - left and right items	WITHOUT_CLASSIFICATION	0.9999896780659903	WITHOUT_CLASSIFICATION	1.0321934009668037E-5	DEFECT
// TBLRC // 00111 - left, right and center items	WITHOUT_CLASSIFICATION	0.9999971653474603	WITHOUT_CLASSIFICATION	2.834652539728466E-6	DEFECT
// TBLRC // 01000 - bottom item only	WITHOUT_CLASSIFICATION	0.9999797010348994	WITHOUT_CLASSIFICATION	2.02989651004869E-5	DEFECT
// TBLRC // 01001 - bottom and center only	WITHOUT_CLASSIFICATION	0.9999988264924969	WITHOUT_CLASSIFICATION	1.1735075030278999E-6	DEFECT
// TBLRC // 01010 - bottom and right only	WITHOUT_CLASSIFICATION	0.9999758840205217	WITHOUT_CLASSIFICATION	2.4115979478348714E-5	DEFECT
// TBLRC // 01011 - bottom, right and center	WITHOUT_CLASSIFICATION	0.9999988416283374	WITHOUT_CLASSIFICATION	1.1583716626290788E-6	DEFECT
// TBLRC // 01100	WITHOUT_CLASSIFICATION	0.9999958768456818	WITHOUT_CLASSIFICATION	4.123154318166448E-6	DEFECT
// TBLRC // 01101 - bottom, left and center	WITHOUT_CLASSIFICATION	0.9999998404121536	WITHOUT_CLASSIFICATION	1.5958784637419818E-7	DEFECT
// TBLRC // 01110 - bottom. left and right	WITHOUT_CLASSIFICATION	0.9999949345975412	WITHOUT_CLASSIFICATION	5.065402458732275E-6	DEFECT
// TBLRC // 01111	WITHOUT_CLASSIFICATION	0.9999959781126998	WITHOUT_CLASSIFICATION	4.021887300212477E-6	DEFECT
// TBLRC // 10000 - top item only	WITHOUT_CLASSIFICATION	0.9999644131904732	WITHOUT_CLASSIFICATION	3.558680952675624E-5	DEFECT
// TBLRC // 10001 - top and center only	WITHOUT_CLASSIFICATION	0.999990872463677	WITHOUT_CLASSIFICATION	9.12753632294629E-6	DEFECT
// TBLRC // 10010 - right and top only	WITHOUT_CLASSIFICATION	0.9997784432067939	WITHOUT_CLASSIFICATION	2.2155679320610389E-4	DEFECT
// TBLRC // 10011 - top, right and center	WITHOUT_CLASSIFICATION	0.9999865231535512	WITHOUT_CLASSIFICATION	1.3476846448763653E-5	DEFECT
// TBLRC // 10100 - top and left only	WITHOUT_CLASSIFICATION	0.9999823070591657	WITHOUT_CLASSIFICATION	1.769294083432986E-5	DEFECT
// TBLRC // 10101 - top, left and center	WITHOUT_CLASSIFICATION	0.9999981940098941	WITHOUT_CLASSIFICATION	1.8059901059355292E-6	DEFECT
// TBLRC // 10111	WITHOUT_CLASSIFICATION	0.999993042162326	WITHOUT_CLASSIFICATION	6.957837673962738E-6	DEFECT
// standard test	WITHOUT_CLASSIFICATION	0.9999995082562215	WITHOUT_CLASSIFICATION	4.917437784429787E-7	DEFECT
// tooltip format	WITHOUT_CLASSIFICATION	0.999999674268993	WITHOUT_CLASSIFICATION	3.257310068639355E-7	DEFECT
// tooltip format	WITHOUT_CLASSIFICATION	0.999999674268993	WITHOUT_CLASSIFICATION	3.257310068639355E-7	DEFECT
// date format	WITHOUT_CLASSIFICATION	0.9999985764717072	WITHOUT_CLASSIFICATION	1.4235282929163475E-6	DEFECT
// Y format	WITHOUT_CLASSIFICATION	0.9999994120048366	WITHOUT_CLASSIFICATION	5.879951634623391E-7	DEFECT
// some setup...	WITHOUT_CLASSIFICATION	0.9999967449076134	WITHOUT_CLASSIFICATION	3.2550923865706542E-6	DEFECT
// some setup...	WITHOUT_CLASSIFICATION	0.9999967449076134	WITHOUT_CLASSIFICATION	3.2550923865706542E-6	DEFECT
// another test...	WITHOUT_CLASSIFICATION	0.9999948152039123	WITHOUT_CLASSIFICATION	5.184796087587241E-6	DEFECT
// try a null value	WITHOUT_CLASSIFICATION	0.9999986310530561	WITHOUT_CLASSIFICATION	1.3689469438418206E-6	DEFECT
// format string...	WITHOUT_CLASSIFICATION	0.9999961586183225	WITHOUT_CLASSIFICATION	3.8413816774872605E-6	DEFECT
// x number format	WITHOUT_CLASSIFICATION	0.999999586284908	WITHOUT_CLASSIFICATION	4.137150918670988E-7	DEFECT
// y number format	WITHOUT_CLASSIFICATION	0.9999994831822795	WITHOUT_CLASSIFICATION	5.168177204156768E-7	DEFECT
// z number format	WITHOUT_CLASSIFICATION	0.9999997497799593	WITHOUT_CLASSIFICATION	2.5022004069553614E-7	DEFECT
// x date format	WITHOUT_CLASSIFICATION	0.9999989839821736	WITHOUT_CLASSIFICATION	1.0160178265079406E-6	DEFECT
// y date format	WITHOUT_CLASSIFICATION	0.9999989041859618	WITHOUT_CLASSIFICATION	1.0958140382469921E-6	DEFECT
// z date format	WITHOUT_CLASSIFICATION	0.9999993873552829	WITHOUT_CLASSIFICATION	6.126447170726606E-7	DEFECT
// remove plot2, but plot1 is removed instead	WITHOUT_CLASSIFICATION	0.9998680820155983	WITHOUT_CLASSIFICATION	1.3191798440175396E-4	DEFECT
// create subplot 1...	WITHOUT_CLASSIFICATION	0.9999967348625237	WITHOUT_CLASSIFICATION	3.2651374761876986E-6	DEFECT
// create subplot 2...	WITHOUT_CLASSIFICATION	0.999995216665634	WITHOUT_CLASSIFICATION	4.783334365969262E-6	DEFECT
// add the subplots...	WITHOUT_CLASSIFICATION	0.9999977142617941	WITHOUT_CLASSIFICATION	2.2857382059537235E-6	DEFECT
// separatorsVisible	WITHOUT_CLASSIFICATION	0.9999999674991531	WITHOUT_CLASSIFICATION	3.2500846801843863E-8	DEFECT
// separatorStroke	WITHOUT_CLASSIFICATION	0.9999983570072042	WITHOUT_CLASSIFICATION	1.6429927958565642E-6	DEFECT
// separatorPaint	WITHOUT_CLASSIFICATION	0.9999999828410898	WITHOUT_CLASSIFICATION	1.7158910174817568E-8	DEFECT
// outerSeparatorExtension	WITHOUT_CLASSIFICATION	0.9999997915561598	WITHOUT_CLASSIFICATION	2.0844384021410718E-7	DEFECT
// sectionDepth	WITHOUT_CLASSIFICATION	0.9999991232314488	WITHOUT_CLASSIFICATION	8.767685512942414E-7	DEFECT
// orientation...	WITHOUT_CLASSIFICATION	0.9999631845405502	WITHOUT_CLASSIFICATION	3.6815459449797915E-5	DEFECT
// axisOffset...	WITHOUT_CLASSIFICATION	0.9999905867417793	WITHOUT_CLASSIFICATION	9.413258220750773E-6	DEFECT
// domainAxes...	WITHOUT_CLASSIFICATION	0.9999783108953455	WITHOUT_CLASSIFICATION	2.168910465453291E-5	DEFECT
// TBLRC // 00000 - no items	WITHOUT_CLASSIFICATION	0.9999995101799294	WITHOUT_CLASSIFICATION	4.898200706197548E-7	DEFECT
// TBLRC // 11001	WITHOUT_CLASSIFICATION	0.9999891874711093	WITHOUT_CLASSIFICATION	1.0812528890694931E-5	DEFECT
// TBLRC // 11010 - top, bottom and right	WITHOUT_CLASSIFICATION	0.9999887659770856	WITHOUT_CLASSIFICATION	1.1234022914420711E-5	DEFECT
// TBLRC // 11011	WITHOUT_CLASSIFICATION	0.9999941231788698	WITHOUT_CLASSIFICATION	5.8768211301272426E-6	DEFECT
// TBLRC // 11100	WITHOUT_CLASSIFICATION	0.9999895014933027	WITHOUT_CLASSIFICATION	1.049850669738624E-5	DEFECT
// TBLRC // 11101	WITHOUT_CLASSIFICATION	0.9999932184703507	WITHOUT_CLASSIFICATION	6.78152964923012E-6	DEFECT
// TBLRC // 11110	WITHOUT_CLASSIFICATION	0.9999947990606671	WITHOUT_CLASSIFICATION	5.200939332888993E-6	DEFECT
// check handling when the dataset is a regular XYDataset, not an // XYZDataset...	WITHOUT_CLASSIFICATION	0.9990385990252492	WITHOUT_CLASSIFICATION	9.61400974750865E-4	DEFECT
// domainAxisLocation - no longer a separate field but test anyway...	WITHOUT_CLASSIFICATION	0.9999529384766908	WITHOUT_CLASSIFICATION	4.706152330910325E-5	DEFECT
// domainAxisLocations...	WITHOUT_CLASSIFICATION	0.9999955235095578	WITHOUT_CLASSIFICATION	4.476490442141168E-6	DEFECT
// draw shared domain axis...	WITHOUT_CLASSIFICATION	0.9999996258122931	WITHOUT_CLASSIFICATION	3.7418770682366694E-7	DEFECT
// rangeAxes...	WITHOUT_CLASSIFICATION	0.9999899175585268	WITHOUT_CLASSIFICATION	1.0082441473181718E-5	DEFECT
// rangeAxisLocation - no longer a separate field but test anyway...	WITHOUT_CLASSIFICATION	0.9999178207105172	WITHOUT_CLASSIFICATION	8.217928948288929E-5	DEFECT
// rangeAxisLocations...	WITHOUT_CLASSIFICATION	0.9999983180612655	WITHOUT_CLASSIFICATION	1.6819387344906841E-6	DEFECT
// datasetToDomainAxisMap...	WITHOUT_CLASSIFICATION	0.9999978098793711	WITHOUT_CLASSIFICATION	2.1901206288858193E-6	DEFECT
// datasetToRangeAxisMap...	WITHOUT_CLASSIFICATION	0.9999886478425922	WITHOUT_CLASSIFICATION	1.1352157407691173E-5	DEFECT
// renderers...	WITHOUT_CLASSIFICATION	0.9999012302837514	WITHOUT_CLASSIFICATION	9.876971624848949E-5	DEFECT
// rendering order...	WITHOUT_CLASSIFICATION	0.9999371335151767	WITHOUT_CLASSIFICATION	6.286648482342756E-5	DEFECT
// columnRenderingOrder...	WITHOUT_CLASSIFICATION	0.9999809436708391	WITHOUT_CLASSIFICATION	1.9056329160850925E-5	DEFECT
// rowRenderingOrder...	WITHOUT_CLASSIFICATION	0.999893325872215	WITHOUT_CLASSIFICATION	1.0667412778490827E-4	DEFECT
// domainGridlinesVisible	WITHOUT_CLASSIFICATION	0.9999999525833587	WITHOUT_CLASSIFICATION	4.7416641276219874E-8	DEFECT
// domainGridlineStroke	WITHOUT_CLASSIFICATION	0.9999908133052643	WITHOUT_CLASSIFICATION	9.18669473566347E-6	DEFECT
// domainGridlinePaint	WITHOUT_CLASSIFICATION	0.9999996908312813	WITHOUT_CLASSIFICATION	3.091687187496183E-7	DEFECT
// rangeGridlinesVisible	WITHOUT_CLASSIFICATION	0.9999999670056756	WITHOUT_CLASSIFICATION	3.299432448398236E-8	DEFECT
// rangeGridlineStroke	WITHOUT_CLASSIFICATION	0.9999916307338615	WITHOUT_CLASSIFICATION	8.369266138383745E-6	DEFECT
// rangeGridlinePaint	WITHOUT_CLASSIFICATION	0.9999998867490412	WITHOUT_CLASSIFICATION	1.1325095881767253E-7	DEFECT
// rangeCrosshairVisible	WITHOUT_CLASSIFICATION	0.9999996798011997	WITHOUT_CLASSIFICATION	3.201988003187009E-7	DEFECT
// rangeCrosshairValue	WITHOUT_CLASSIFICATION	0.9999995892365302	WITHOUT_CLASSIFICATION	4.1076346988787666E-7	DEFECT
// rangeCrosshairStroke	WITHOUT_CLASSIFICATION	0.9999913983642391	WITHOUT_CLASSIFICATION	8.601635760935216E-6	DEFECT
// rangeCrosshairLockedOnData	WITHOUT_CLASSIFICATION	0.999999518131107	WITHOUT_CLASSIFICATION	4.818688930967042E-7	DEFECT
// foreground domain markers	WITHOUT_CLASSIFICATION	0.999999719501726	WITHOUT_CLASSIFICATION	2.804982740426812E-7	DEFECT
// background domain markers	WITHOUT_CLASSIFICATION	0.999999843004734	WITHOUT_CLASSIFICATION	1.5699526613977346E-7	DEFECT
// foreground range markers...	WITHOUT_CLASSIFICATION	0.9999916803232297	WITHOUT_CLASSIFICATION	8.319676770379915E-6	DEFECT
// background range markers...	WITHOUT_CLASSIFICATION	0.9999953434490942	WITHOUT_CLASSIFICATION	4.656550905839286E-6	DEFECT
// annotations	WITHOUT_CLASSIFICATION	0.9999979504612468	WITHOUT_CLASSIFICATION	2.0495387532670893E-6	DEFECT
// weight	WITHOUT_CLASSIFICATION	0.9999915916973664	WITHOUT_CLASSIFICATION	8.408302633568108E-6	DEFECT
// fixed domain axis space...	WITHOUT_CLASSIFICATION	0.999993758719895	WITHOUT_CLASSIFICATION	6.241280104991123E-6	DEFECT
// fixed range axis space...	WITHOUT_CLASSIFICATION	0.9999710189029617	WITHOUT_CLASSIFICATION	2.8981097038412342E-5	DEFECT
// crosshairDatasetIndex	WITHOUT_CLASSIFICATION	0.9999748823178827	WITHOUT_CLASSIFICATION	2.5117682117347056E-5	DEFECT
// domainCrosshairColumnKey	WITHOUT_CLASSIFICATION	0.9999989129371898	WITHOUT_CLASSIFICATION	1.0870628102465824E-6	DEFECT
// domainCrosshairRowKey	WITHOUT_CLASSIFICATION	0.9999986297404397	WITHOUT_CLASSIFICATION	1.3702595602132705E-6	DEFECT
// domainCrosshairVisible	WITHOUT_CLASSIFICATION	0.9999996094711723	WITHOUT_CLASSIFICATION	3.9052882768626395E-7	DEFECT
// domainCrosshairStroke	WITHOUT_CLASSIFICATION	0.9999895090780593	WITHOUT_CLASSIFICATION	1.0490921940652167E-5	DEFECT
// shadowGenerator	WITHOUT_CLASSIFICATION	0.9999998477595834	WITHOUT_CLASSIFICATION	1.522404166155132E-7	DEFECT
// check for independence	WITHOUT_CLASSIFICATION	0.9999998701982871	WITHOUT_CLASSIFICATION	1.2980171294730802E-7	DEFECT
// we didn't get an exception so all is good	WITHOUT_CLASSIFICATION	0.9999968492825372	WITHOUT_CLASSIFICATION	3.150717462895042E-6	DEFECT
// should get IllegalArgumentException for negative index	WITHOUT_CLASSIFICATION	0.9999870073682688	WITHOUT_CLASSIFICATION	1.2992631731166289E-5	DEFECT
// should get IllegalArgumentException for negative index	WITHOUT_CLASSIFICATION	0.9999870073682688	WITHOUT_CLASSIFICATION	1.2992631731166289E-5	DEFECT
// we should be able to give a dataset an arbitrary index	WITHOUT_CLASSIFICATION	0.9999936154658535	WITHOUT_CLASSIFICATION	6.3845341465307225E-6	DEFECT
// labelFont	WITHOUT_CLASSIFICATION	0.9999968310946454	WITHOUT_CLASSIFICATION	3.168905354639804E-6	DEFECT
// labelPaint	WITHOUT_CLASSIFICATION	0.9999992827391619	WITHOUT_CLASSIFICATION	7.172608381114132E-7	DEFECT
// dial outline paint	WITHOUT_CLASSIFICATION	0.9999993041785462	WITHOUT_CLASSIFICATION	6.958214538341325E-7	DEFECT
// if multiple axes are mapped, the first in the list should be // returned...	WITHOUT_CLASSIFICATION	0.9999981963405633	WITHOUT_CLASSIFICATION	1.80365943672459E-6	DEFECT
// we should be able to give a renderer an arbitrary index	WITHOUT_CLASSIFICATION	0.9999310798559565	WITHOUT_CLASSIFICATION	6.892014404341675E-5	DEFECT
// add a second dataset	WITHOUT_CLASSIFICATION	0.9999976881898113	WITHOUT_CLASSIFICATION	2.3118101887114036E-6	DEFECT
// add a second dataset	WITHOUT_CLASSIFICATION	0.9999976881898113	WITHOUT_CLASSIFICATION	2.3118101887114036E-6	DEFECT
// add a second dataset	WITHOUT_CLASSIFICATION	0.9999976881898113	WITHOUT_CLASSIFICATION	2.3118101887114036E-6	DEFECT
// by default, the renderer with index 0 is used	WITHOUT_CLASSIFICATION	0.9999884428413652	WITHOUT_CLASSIFICATION	1.1557158634705193E-5	DEFECT
// add a second renderer with the same index as dataset2, now it will // be used	WITHOUT_CLASSIFICATION	0.9999457932465192	WITHOUT_CLASSIFICATION	5.4206753480769655E-5	DEFECT
// now map the dataset to the second xAxis	WITHOUT_CLASSIFICATION	0.9999938794137918	WITHOUT_CLASSIFICATION	6.120586208250513E-6	DEFECT
// now map the dataset to the second xAxis	WITHOUT_CLASSIFICATION	0.9999938794137918	WITHOUT_CLASSIFICATION	6.120586208250513E-6	DEFECT
// add a second dataset, plotted against a second x axis	WITHOUT_CLASSIFICATION	0.9999974818503286	WITHOUT_CLASSIFICATION	2.5181496714788984E-6	DEFECT
// add a second dataset, plotted against a second axis	WITHOUT_CLASSIFICATION	0.9999969592602009	WITHOUT_CLASSIFICATION	3.0407397990379344E-6	DEFECT
// needle paint	WITHOUT_CLASSIFICATION	0.9999997762665302	WITHOUT_CLASSIFICATION	2.237334697555986E-7	DEFECT
// value font	WITHOUT_CLASSIFICATION	0.9999976373736865	WITHOUT_CLASSIFICATION	2.3626263134939986E-6	DEFECT
// value paint	WITHOUT_CLASSIFICATION	0.9999989856201853	WITHOUT_CLASSIFICATION	1.0143798147646666E-6	DEFECT
// tick label font	WITHOUT_CLASSIFICATION	0.9999963832088143	WITHOUT_CLASSIFICATION	3.616791185684473E-6	DEFECT
// tick label paint	WITHOUT_CLASSIFICATION	0.9999990399534677	WITHOUT_CLASSIFICATION	9.600465323069014E-7	DEFECT
// tick label format	WITHOUT_CLASSIFICATION	0.9999993235699562	WITHOUT_CLASSIFICATION	6.764300436868205E-7	DEFECT
// tick paint	WITHOUT_CLASSIFICATION	0.999997343541019	WITHOUT_CLASSIFICATION	2.656458980910506E-6	DEFECT
// draw border	WITHOUT_CLASSIFICATION	0.9999997267040343	WITHOUT_CLASSIFICATION	2.7329596566969995E-7	DEFECT
// meter angle	WITHOUT_CLASSIFICATION	0.9999993786545002	WITHOUT_CLASSIFICATION	6.21345499802384E-7	DEFECT
//key	WITHOUT_CLASSIFICATION	0.9998432513743675	WITHOUT_CLASSIFICATION	1.5674862563243947E-4	DEFECT
//paint	WITHOUT_CLASSIFICATION	0.9999908820634873	WITHOUT_CLASSIFICATION	9.117936512607289E-6	DEFECT
//stroke	WITHOUT_CLASSIFICATION	0.999846348508362	WITHOUT_CLASSIFICATION	1.5365149163810057E-4	DEFECT
//outlinePaint	WITHOUT_CLASSIFICATION	0.9999948913378615	WITHOUT_CLASSIFICATION	5.108662138627941E-6	DEFECT
//outlineStroke	WITHOUT_CLASSIFICATION	0.9995079354138051	WITHOUT_CLASSIFICATION	4.920645861949932E-4	DEFECT
//alpha	WITHOUT_CLASSIFICATION	0.9999705065990098	WITHOUT_CLASSIFICATION	2.9493400990290557E-5	DEFECT
// check null argument...	WITHOUT_CLASSIFICATION	0.9999995168038847	WITHOUT_CLASSIFICATION	4.831961154293764E-7	DEFECT
// drawBorder	WITHOUT_CLASSIFICATION	0.9999982769183949	WITHOUT_CLASSIFICATION	1.7230816050924479E-6	DEFECT
// rosePaint	WITHOUT_CLASSIFICATION	0.9999994566897753	WITHOUT_CLASSIFICATION	5.433102247910344E-7	DEFECT
// roseCenterPaint	WITHOUT_CLASSIFICATION	0.9999997283169807	WITHOUT_CLASSIFICATION	2.716830193826595E-7	DEFECT
// roseHighlightPaint	WITHOUT_CLASSIFICATION	0.99999951259811	WITHOUT_CLASSIFICATION	4.874018899927107E-7	DEFECT
// interiorGap...	WITHOUT_CLASSIFICATION	0.999995515080174	WITHOUT_CLASSIFICATION	4.484919825982672E-6	DEFECT
// circular	WITHOUT_CLASSIFICATION	0.999998754510674	WITHOUT_CLASSIFICATION	1.2454893260874015E-6	DEFECT
// direction	WITHOUT_CLASSIFICATION	0.9999715683962372	WITHOUT_CLASSIFICATION	2.8431603762815486E-5	DEFECT
// ignoreNullValues	WITHOUT_CLASSIFICATION	0.9999999265742422	WITHOUT_CLASSIFICATION	7.342575779829477E-8	DEFECT
// sectionPaint	WITHOUT_CLASSIFICATION	0.9999996809318917	WITHOUT_CLASSIFICATION	3.1906810833582345E-7	DEFECT
// sectionPaintMap	WITHOUT_CLASSIFICATION	0.9999997127760661	WITHOUT_CLASSIFICATION	2.872239338662733E-7	DEFECT
// baseSectionPaint	WITHOUT_CLASSIFICATION	0.9999998660505691	WITHOUT_CLASSIFICATION	1.3394943085645156E-7	DEFECT
// sectionOutlinePaint	WITHOUT_CLASSIFICATION	0.9999998396972223	WITHOUT_CLASSIFICATION	1.6030277771369018E-7	DEFECT
// sectionOutlinePaintList	WITHOUT_CLASSIFICATION	0.999999924342094	WITHOUT_CLASSIFICATION	7.565790602516075E-8	DEFECT
// baseSectionOutlinePaint	WITHOUT_CLASSIFICATION	0.9999999327025695	WITHOUT_CLASSIFICATION	6.729743055033289E-8	DEFECT
// sectionOutlineStrokeList	WITHOUT_CLASSIFICATION	0.9999900329325874	WITHOUT_CLASSIFICATION	9.967067412553414E-6	DEFECT
// baseSectionOutlineStroke	WITHOUT_CLASSIFICATION	0.9999967908129879	WITHOUT_CLASSIFICATION	3.2091870121159567E-6	DEFECT
// shadowPaint	WITHOUT_CLASSIFICATION	0.9999992120547476	WITHOUT_CLASSIFICATION	7.879452524396662E-7	DEFECT
// shadowXOffset	WITHOUT_CLASSIFICATION	0.9999980742383162	WITHOUT_CLASSIFICATION	1.9257616838042915E-6	DEFECT
// shadowYOffset	WITHOUT_CLASSIFICATION	0.9999993318499115	WITHOUT_CLASSIFICATION	6.681500884863967E-7	DEFECT
// labelOutlinePaint	WITHOUT_CLASSIFICATION	0.9999996834122123	WITHOUT_CLASSIFICATION	3.1658778758082216E-7	DEFECT
// labelOutlineStroke	WITHOUT_CLASSIFICATION	0.9999887162860847	WITHOUT_CLASSIFICATION	1.1283713915364182E-5	DEFECT
// labelShadowPaint	WITHOUT_CLASSIFICATION	0.9999990008031673	WITHOUT_CLASSIFICATION	9.99196832657625E-7	DEFECT
// explodePercentages	WITHOUT_CLASSIFICATION	0.9999994426872127	WITHOUT_CLASSIFICATION	5.573127872470932E-7	DEFECT
// backgroundImage	WITHOUT_CLASSIFICATION	0.9999989551071872	WITHOUT_CLASSIFICATION	1.0448928127566375E-6	DEFECT
// startAngle	WITHOUT_CLASSIFICATION	0.9999994489136231	WITHOUT_CLASSIFICATION	5.510863768147779E-7	DEFECT
// backgroundImageAlignment	WITHOUT_CLASSIFICATION	0.9999990229157311	WITHOUT_CLASSIFICATION	9.770842690221177E-7	DEFECT
// backgroundImageAlpha	WITHOUT_CLASSIFICATION	0.9999988170595587	WITHOUT_CLASSIFICATION	1.1829404412875886E-6	DEFECT
// outlinePaint	WITHOUT_CLASSIFICATION	0.9999991928013184	WITHOUT_CLASSIFICATION	8.071986816482716E-7	DEFECT
// shadowGenerator	WITHOUT_CLASSIFICATION	0.9999998477595834	WITHOUT_CLASSIFICATION	1.522404166155132E-7	DEFECT
// direction	WITHOUT_CLASSIFICATION	0.9999715683962372	WITHOUT_CLASSIFICATION	2.8431603762815486E-5	DEFECT
// labelLinkPaint	WITHOUT_CLASSIFICATION	0.9999994190318449	WITHOUT_CLASSIFICATION	5.809681551314558E-7	DEFECT
// maximumLabelWidth	WITHOUT_CLASSIFICATION	0.9999997280257348	WITHOUT_CLASSIFICATION	2.7197426529479053E-7	DEFECT
// links visible	WITHOUT_CLASSIFICATION	0.9999996484260277	WITHOUT_CLASSIFICATION	3.5157397223424953E-7	DEFECT
// labelGap	WITHOUT_CLASSIFICATION	0.9999978616817016	WITHOUT_CLASSIFICATION	2.138318298507371E-6	DEFECT
// toolTipGenerator	WITHOUT_CLASSIFICATION	0.99999977752758	WITHOUT_CLASSIFICATION	2.2247242003721566E-7	DEFECT
// linkMargin	WITHOUT_CLASSIFICATION	0.9999963220913156	WITHOUT_CLASSIFICATION	3.677908684383161E-6	DEFECT
// legendItemShape	WITHOUT_CLASSIFICATION	0.9999980380621128	WITHOUT_CLASSIFICATION	1.9619378872055547E-6	DEFECT
// labelLinkStroke	WITHOUT_CLASSIFICATION	0.9999801913359125	WITHOUT_CLASSIFICATION	1.9808664087501015E-5	DEFECT
// minimumArcAngleToDraw	WITHOUT_CLASSIFICATION	0.9999999304504864	WITHOUT_CLASSIFICATION	6.954951368742749E-8	DEFECT
// urlGenerator	WITHOUT_CLASSIFICATION	0.9999998830949359	WITHOUT_CLASSIFICATION	1.1690506394781504E-7	DEFECT
// legendLabelGenerator	WITHOUT_CLASSIFICATION	0.9999997118857984	WITHOUT_CLASSIFICATION	2.8811420157343955E-7	DEFECT
// legendItemShape	WITHOUT_CLASSIFICATION	0.9999980380621128	WITHOUT_CLASSIFICATION	1.9619378872055547E-6	DEFECT
// legendLabelToolTipGenerator	WITHOUT_CLASSIFICATION	0.9999999343175723	WITHOUT_CLASSIFICATION	6.568242776288918E-8	DEFECT
// legendLabelURLGenerator	WITHOUT_CLASSIFICATION	0.9999998405956958	WITHOUT_CLASSIFICATION	1.5940430431719415E-7	DEFECT
// autoPopulateSectionPaint	WITHOUT_CLASSIFICATION	0.999999951109129	WITHOUT_CLASSIFICATION	4.8890870955037975E-8	DEFECT
// autoPopulateSectionOutlinePaint	WITHOUT_CLASSIFICATION	0.9999998607148595	WITHOUT_CLASSIFICATION	1.392851404976248E-7	DEFECT
// we use ValueMarker for the tests, because we need a concrete // subclass...	WITHOUT_CLASSIFICATION	0.999998842193714	WITHOUT_CLASSIFICATION	1.1578062858566504E-6	DEFECT
// autoPopulateSectionOutlineStroke	WITHOUT_CLASSIFICATION	0.9999936589757589	WITHOUT_CLASSIFICATION	6.341024241183907E-6	DEFECT
// check that the URL generator has been cloned	WITHOUT_CLASSIFICATION	0.9999995261611359	WITHOUT_CLASSIFICATION	4.738388640220875E-7	DEFECT
// check that the URL generator has been cloned	WITHOUT_CLASSIFICATION	0.9999995261611359	WITHOUT_CLASSIFICATION	4.738388640220875E-7	DEFECT
// change the shape and make sure it only affects p1	WITHOUT_CLASSIFICATION	0.9999753962559619	WITHOUT_CLASSIFICATION	2.460374403806945E-5	DEFECT
// change the generator and make sure it only affects p1	WITHOUT_CLASSIFICATION	0.9999817428963031	WITHOUT_CLASSIFICATION	1.825710369689874E-5	DEFECT
// change the generator and make sure it only affects p1	WITHOUT_CLASSIFICATION	0.9999817428963031	WITHOUT_CLASSIFICATION	1.825710369689874E-5	DEFECT
// check that null items are ignored if requested	WITHOUT_CLASSIFICATION	0.9999999984100707	WITHOUT_CLASSIFICATION	1.5899293778757518E-9	DEFECT
// check that zero items are ignored if requested	WITHOUT_CLASSIFICATION	0.9999999986032192	WITHOUT_CLASSIFICATION	1.3967807435613953E-9	DEFECT
// check that negative items are always ignored	WITHOUT_CLASSIFICATION	0.9999999794478731	WITHOUT_CLASSIFICATION	2.055212688843883E-8	DEFECT
// noDataMessage	WITHOUT_CLASSIFICATION	0.9999997498565132	WITHOUT_CLASSIFICATION	2.5014348684651735E-7	DEFECT
// noDataMessageFont	WITHOUT_CLASSIFICATION	0.99999963320284	WITHOUT_CLASSIFICATION	3.667971598769543E-7	DEFECT
// noDataMessagePaint	WITHOUT_CLASSIFICATION	0.9999999136052002	WITHOUT_CLASSIFICATION	8.639479969419378E-8	DEFECT
// outlineVisible	WITHOUT_CLASSIFICATION	0.9999994213888334	WITHOUT_CLASSIFICATION	5.786111665760017E-7	DEFECT
// outlineStroke	WITHOUT_CLASSIFICATION	0.9999222190081912	WITHOUT_CLASSIFICATION	7.778099180866795E-5	DEFECT
// foregroundAlpha	WITHOUT_CLASSIFICATION	0.9999936220055452	WITHOUT_CLASSIFICATION	6.377994454817628E-6	DEFECT
// backgroundAlpha	WITHOUT_CLASSIFICATION	0.9999890059723959	WITHOUT_CLASSIFICATION	1.0994027604049224E-5	DEFECT
// drawingSupplier	WITHOUT_CLASSIFICATION	0.9999994808760635	WITHOUT_CLASSIFICATION	5.191239364357711E-7	DEFECT
// try a null collection	WITHOUT_CLASSIFICATION	0.9999987456229409	WITHOUT_CLASSIFICATION	1.2543770591174603E-6	DEFECT
// dataExtractOrder	WITHOUT_CLASSIFICATION	0.9999986235078184	WITHOUT_CLASSIFICATION	1.3764921814883693E-6	DEFECT
// headPercent	WITHOUT_CLASSIFICATION	0.9999990456358313	WITHOUT_CLASSIFICATION	9.543641687137305E-7	DEFECT
// interiorGap	WITHOUT_CLASSIFICATION	0.9999996000128879	WITHOUT_CLASSIFICATION	3.9998711211644334E-7	DEFECT
// maxValue	WITHOUT_CLASSIFICATION	0.9999987755266844	WITHOUT_CLASSIFICATION	1.2244733156499777E-6	DEFECT
// secondary renderers	WITHOUT_CLASSIFICATION	0.9999880135151048	WITHOUT_CLASSIFICATION	1.198648489530924E-5	DEFECT
// row keys...	WITHOUT_CLASSIFICATION	0.9998993299656588	WITHOUT_CLASSIFICATION	1.0067003434111492E-4	DEFECT
// row keys...	WITHOUT_CLASSIFICATION	0.9998993299656588	WITHOUT_CLASSIFICATION	1.0067003434111492E-4	DEFECT
// column keys...	WITHOUT_CLASSIFICATION	0.9999643578818157	WITHOUT_CLASSIFICATION	3.564211818427571E-5	DEFECT
// padding	WITHOUT_CLASSIFICATION	0.9999803844662634	WITHOUT_CLASSIFICATION	1.9615533736577654E-5	DEFECT
// column keys...	WITHOUT_CLASSIFICATION	0.9999643578818157	WITHOUT_CLASSIFICATION	3.564211818427571E-5	DEFECT
// column keys...	WITHOUT_CLASSIFICATION	0.9999643578818157	WITHOUT_CLASSIFICATION	3.564211818427571E-5	DEFECT
// column keys...	WITHOUT_CLASSIFICATION	0.9999643578818157	WITHOUT_CLASSIFICATION	3.564211818427571E-5	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999995722400108	WITHOUT_CLASSIFICATION	4.2775998929434456E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999995722400108	WITHOUT_CLASSIFICATION	4.2775998929434456E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999995722400108	WITHOUT_CLASSIFICATION	4.2775998929434456E-7	DEFECT
// labelFont	WITHOUT_CLASSIFICATION	0.9999968310946454	WITHOUT_CLASSIFICATION	3.168905354639804E-6	DEFECT
// labelPaint	WITHOUT_CLASSIFICATION	0.9999992827391619	WITHOUT_CLASSIFICATION	7.172608381114132E-7	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999898643226841	WITHOUT_CLASSIFICATION	1.0135677315940674E-5	DEFECT
// axisLinePaint	WITHOUT_CLASSIFICATION	0.9999999490708877	WITHOUT_CLASSIFICATION	5.092911227151843E-8	DEFECT
// axisLineStroke	WITHOUT_CLASSIFICATION	0.9999971695672887	WITHOUT_CLASSIFICATION	2.83043271137238E-6	DEFECT
// remove plot2, but plot1 is removed instead	WITHOUT_CLASSIFICATION	0.9998680820155983	WITHOUT_CLASSIFICATION	1.3191798440175396E-4	DEFECT
// orientation...	WITHOUT_CLASSIFICATION	0.9999631845405502	WITHOUT_CLASSIFICATION	3.6815459449797915E-5	DEFECT
// axisOffset...	WITHOUT_CLASSIFICATION	0.9999905867417793	WITHOUT_CLASSIFICATION	9.413258220750773E-6	DEFECT
// labelGenerator	WITHOUT_CLASSIFICATION	0.9999996534534688	WITHOUT_CLASSIFICATION	3.465465311600439E-7	DEFECT
// toolTipGenerator	WITHOUT_CLASSIFICATION	0.99999977752758	WITHOUT_CLASSIFICATION	2.2247242003721566E-7	DEFECT
// urlGenerator	WITHOUT_CLASSIFICATION	0.9999998830949359	WITHOUT_CLASSIFICATION	1.1690506394781504E-7	DEFECT
// change a series paint	WITHOUT_CLASSIFICATION	0.999999890914303	WITHOUT_CLASSIFICATION	1.0908569698155319E-7	DEFECT
// baseSeriesOutlineStroke	WITHOUT_CLASSIFICATION	0.9999984972212509	WITHOUT_CLASSIFICATION	1.5027787490796155E-6	DEFECT
// valueFont	WITHOUT_CLASSIFICATION	0.9999975149351271	WITHOUT_CLASSIFICATION	2.485064872850406E-6	DEFECT
// webFilled	WITHOUT_CLASSIFICATION	0.9999989758542406	WITHOUT_CLASSIFICATION	1.0241457594682734E-6	DEFECT
// change a series outline paint	WITHOUT_CLASSIFICATION	0.9999995795248202	WITHOUT_CLASSIFICATION	4.2047517976360364E-7	DEFECT
// axisLabelGap	WITHOUT_CLASSIFICATION	0.999999836348652	WITHOUT_CLASSIFICATION	1.6365134799827558E-7	DEFECT
// thermometerPaint	WITHOUT_CLASSIFICATION	0.9999996171278455	WITHOUT_CLASSIFICATION	3.828721544789895E-7	DEFECT
// change the legendItemShape	WITHOUT_CLASSIFICATION	0.9999998896920901	WITHOUT_CLASSIFICATION	1.103079099166045E-7	DEFECT
// secondary DomainAxisLocations...	WITHOUT_CLASSIFICATION	0.9999725855138025	WITHOUT_CLASSIFICATION	2.7414486197467224E-5	DEFECT
// change a series outline stroke	WITHOUT_CLASSIFICATION	0.9999846154774863	WITHOUT_CLASSIFICATION	1.538452251373802E-5	DEFECT
// valueLocation	WITHOUT_CLASSIFICATION	0.9999988959844337	WITHOUT_CLASSIFICATION	1.1040155663858246E-6	DEFECT
// thermometerStroke	WITHOUT_CLASSIFICATION	0.9999000388398094	WITHOUT_CLASSIFICATION	9.996116019056132E-5	DEFECT
// valuePaint	WITHOUT_CLASSIFICATION	0.999999302656145	WITHOUT_CLASSIFICATION	6.973438549954354E-7	DEFECT
// axisLocation	WITHOUT_CLASSIFICATION	0.9999996719502806	WITHOUT_CLASSIFICATION	3.2804971944175983E-7	DEFECT
// showValueLines	WITHOUT_CLASSIFICATION	0.9999996821435537	WITHOUT_CLASSIFICATION	3.1785644627662554E-7	DEFECT
// domainAxisLocation...	WITHOUT_CLASSIFICATION	0.999995269996673	WITHOUT_CLASSIFICATION	4.730003327021167E-6	DEFECT
// valueFormat	WITHOUT_CLASSIFICATION	0.9999989992701024	WITHOUT_CLASSIFICATION	1.0007298976510928E-6	DEFECT
// this doesn't work	WITHOUT_CLASSIFICATION	0.9704733477865372	WITHOUT_CLASSIFICATION	0.02952665221346289	DEFECT
// mercuryPaint	WITHOUT_CLASSIFICATION	0.9999998391323783	WITHOUT_CLASSIFICATION	1.608676216205225E-7	DEFECT
// rangeAxisLocation...	WITHOUT_CLASSIFICATION	0.9999982228093253	WITHOUT_CLASSIFICATION	1.7771906746764917E-6	DEFECT
// domainAxis...	WITHOUT_CLASSIFICATION	0.9999759822274997	WITHOUT_CLASSIFICATION	2.401777250032073E-5	DEFECT
// secondary DomainAxes...	WITHOUT_CLASSIFICATION	0.9999539591675634	WITHOUT_CLASSIFICATION	4.604083243660925E-5	DEFECT
// secondary RangeAxisLocations...	WITHOUT_CLASSIFICATION	0.999704838292716	WITHOUT_CLASSIFICATION	2.951617072839871E-4	DEFECT
// rangeAxis...	WITHOUT_CLASSIFICATION	0.9999931072556566	WITHOUT_CLASSIFICATION	6.892744343455824E-6	DEFECT
// renderer	WITHOUT_CLASSIFICATION	0.9999809864655267	WITHOUT_CLASSIFICATION	1.9013534473343464E-5	DEFECT
// secondary RangeAxes...	WITHOUT_CLASSIFICATION	0.9995693032059304	WITHOUT_CLASSIFICATION	4.3069679406961995E-4	DEFECT
// secondaryDatasetRangeAxisMap...	WITHOUT_CLASSIFICATION	0.9996516172953623	WITHOUT_CLASSIFICATION	3.4838270463767514E-4	DEFECT
// secondary DatasetDomainAxisMap...	WITHOUT_CLASSIFICATION	0.9999275738710309	WITHOUT_CLASSIFICATION	7.242612896915815E-5	DEFECT
// try a collection with a single number plus a null	WITHOUT_CLASSIFICATION	0.9999950850008115	WITHOUT_CLASSIFICATION	4.914999188526968E-6	DEFECT
// create dataset 1...	WITHOUT_CLASSIFICATION	0.9999992694119223	WITHOUT_CLASSIFICATION	7.30588077701257E-7	DEFECT
// create dataset 1...	WITHOUT_CLASSIFICATION	0.9999992694119223	WITHOUT_CLASSIFICATION	7.30588077701257E-7	DEFECT
// lowerBound	WITHOUT_CLASSIFICATION	0.9999589962174126	WITHOUT_CLASSIFICATION	4.1003782587537105E-5	DEFECT
// remove plot2, but plot1 is removed instead	WITHOUT_CLASSIFICATION	0.9998680820155983	WITHOUT_CLASSIFICATION	1.3191798440175396E-4	DEFECT
// create subplot 1...	WITHOUT_CLASSIFICATION	0.9999967348625237	WITHOUT_CLASSIFICATION	3.2651374761876986E-6	DEFECT
// create subplot 2...	WITHOUT_CLASSIFICATION	0.999995216665634	WITHOUT_CLASSIFICATION	4.783334365969262E-6	DEFECT
// parent plot...	WITHOUT_CLASSIFICATION	0.9986369395358082	WITHOUT_CLASSIFICATION	0.0013630604641917247	DEFECT
// add the subplots...	WITHOUT_CLASSIFICATION	0.9999977142617941	WITHOUT_CLASSIFICATION	2.2857382059537235E-6	DEFECT
// domainGridlineStroke	WITHOUT_CLASSIFICATION	0.9999908133052643	WITHOUT_CLASSIFICATION	9.18669473566347E-6	DEFECT
// domainGridlinePaint	WITHOUT_CLASSIFICATION	0.9999996908312813	WITHOUT_CLASSIFICATION	3.091687187496183E-7	DEFECT
// rangeGridlinesVisible	WITHOUT_CLASSIFICATION	0.9999999670056756	WITHOUT_CLASSIFICATION	3.299432448398236E-8	DEFECT
// rangeGridlineStroke	WITHOUT_CLASSIFICATION	0.9999916307338615	WITHOUT_CLASSIFICATION	8.369266138383745E-6	DEFECT
// rangeCrosshairVisible	WITHOUT_CLASSIFICATION	0.9999996798011997	WITHOUT_CLASSIFICATION	3.201988003187009E-7	DEFECT
// rangeCrosshairValue	WITHOUT_CLASSIFICATION	0.9999995892365302	WITHOUT_CLASSIFICATION	4.1076346988787666E-7	DEFECT
// rangeCrosshairStroke	WITHOUT_CLASSIFICATION	0.9999913983642391	WITHOUT_CLASSIFICATION	8.601635760935216E-6	DEFECT
// rangeCrosshairLockedOnData	WITHOUT_CLASSIFICATION	0.999999518131107	WITHOUT_CLASSIFICATION	4.818688930967042E-7	DEFECT
// weight	WITHOUT_CLASSIFICATION	0.9999915916973664	WITHOUT_CLASSIFICATION	8.408302633568108E-6	DEFECT
// fixed legend items	WITHOUT_CLASSIFICATION	0.9999959067672793	WITHOUT_CLASSIFICATION	4.093232720625773E-6	DEFECT
// shadowGenerator	WITHOUT_CLASSIFICATION	0.9999998477595834	WITHOUT_CLASSIFICATION	1.522404166155132E-7	DEFECT
// should get IllegalArgumentException for negative index	WITHOUT_CLASSIFICATION	0.9999870073682688	WITHOUT_CLASSIFICATION	1.2992631731166289E-5	DEFECT
// we should be able to give a dataset an arbitrary index	WITHOUT_CLASSIFICATION	0.9999936154658535	WITHOUT_CLASSIFICATION	6.3845341465307225E-6	DEFECT
// we should be able to give a renderer an arbitrary index	WITHOUT_CLASSIFICATION	0.9999310798559565	WITHOUT_CLASSIFICATION	6.892014404341675E-5	DEFECT
// add a second dataset	WITHOUT_CLASSIFICATION	0.9999976881898113	WITHOUT_CLASSIFICATION	2.3118101887114036E-6	DEFECT
// add a second dataset	WITHOUT_CLASSIFICATION	0.9999976881898113	WITHOUT_CLASSIFICATION	2.3118101887114036E-6	DEFECT
// by default, the renderer with index 0 is used	WITHOUT_CLASSIFICATION	0.9999884428413652	WITHOUT_CLASSIFICATION	1.1557158634705193E-5	DEFECT
// now map the dataset to the second xAxis	WITHOUT_CLASSIFICATION	0.9999938794137918	WITHOUT_CLASSIFICATION	6.120586208250513E-6	DEFECT
// now map the dataset to the second xAxis	WITHOUT_CLASSIFICATION	0.9999938794137918	WITHOUT_CLASSIFICATION	6.120586208250513E-6	DEFECT
// add a second dataset, plotted against a second x axis	WITHOUT_CLASSIFICATION	0.9999974818503286	WITHOUT_CLASSIFICATION	2.5181496714788984E-6	DEFECT
// add a second dataset, plotted against a second axis	WITHOUT_CLASSIFICATION	0.9999969592602009	WITHOUT_CLASSIFICATION	3.0407397990379344E-6	DEFECT
// rangeZeroBaselineVisible	WITHOUT_CLASSIFICATION	0.9999998846573053	WITHOUT_CLASSIFICATION	1.1534269473117311E-7	DEFECT
// rangeZeroBaselineStroke	WITHOUT_CLASSIFICATION	0.9999962858437209	WITHOUT_CLASSIFICATION	3.714156279147516E-6	DEFECT
// rangeZeroBaselinePaint	WITHOUT_CLASSIFICATION	0.9999998537481753	WITHOUT_CLASSIFICATION	1.4625182454275312E-7	DEFECT
// range markers	WITHOUT_CLASSIFICATION	0.9999994499442035	WITHOUT_CLASSIFICATION	5.500557965230749E-7	DEFECT
// secondary range markers	WITHOUT_CLASSIFICATION	0.9999953760219651	WITHOUT_CLASSIFICATION	4.623978034932231E-6	DEFECT
// quadrant origin	WITHOUT_CLASSIFICATION	0.9999992833452965	WITHOUT_CLASSIFICATION	7.166547034626231E-7	DEFECT
// quadrant paint	WITHOUT_CLASSIFICATION	0.9999997009178078	WITHOUT_CLASSIFICATION	2.990821922587113E-7	DEFECT
// verify that the plot is listening to the cloned renderer	WITHOUT_CLASSIFICATION	0.9999963810737813	WITHOUT_CLASSIFICATION	3.6189262187467445E-6	DEFECT
// no renderer 1	WITHOUT_CLASSIFICATION	0.9999945704956967	WITHOUT_CLASSIFICATION	5.4295043032393185E-6	DEFECT
// actually removes a1	WITHOUT_CLASSIFICATION	0.9999951561632411	WITHOUT_CLASSIFICATION	4.843836758873102E-6	DEFECT
// set up some objects...	WITHOUT_CLASSIFICATION	0.9999998315942593	WITHOUT_CLASSIFICATION	1.6840574073291941E-7	DEFECT
// paint sequence	WITHOUT_CLASSIFICATION	0.999999914365327	WITHOUT_CLASSIFICATION	8.563467295672886E-8	DEFECT
// outline paint sequence	WITHOUT_CLASSIFICATION	0.9999999072014686	WITHOUT_CLASSIFICATION	9.27985314108802E-8	DEFECT
// outline stroke sequence	WITHOUT_CLASSIFICATION	0.9999874550735024	WITHOUT_CLASSIFICATION	1.2544926497625074E-5	DEFECT
// shape sequence	WITHOUT_CLASSIFICATION	0.9999998756660035	WITHOUT_CLASSIFICATION	1.2433399650816494E-7	DEFECT
// paint index	WITHOUT_CLASSIFICATION	0.999973810522294	WITHOUT_CLASSIFICATION	2.6189477706006906E-5	DEFECT
// outline paint index	WITHOUT_CLASSIFICATION	0.999979565667797	WITHOUT_CLASSIFICATION	2.043433220293996E-5	DEFECT
// outline stroke index	WITHOUT_CLASSIFICATION	0.9996609719757137	WITHOUT_CLASSIFICATION	3.390280242862807E-4	DEFECT
// shape index	WITHOUT_CLASSIFICATION	0.9999963952416799	WITHOUT_CLASSIFICATION	3.604758320177201E-6	DEFECT
// create dataset 2...	WITHOUT_CLASSIFICATION	0.9999989278305603	WITHOUT_CLASSIFICATION	1.0721694396908054E-6	DEFECT
// lowerBound	WITHOUT_CLASSIFICATION	0.9999589962174126	WITHOUT_CLASSIFICATION	4.1003782587537105E-5	DEFECT
// upperBound	WITHOUT_CLASSIFICATION	0.9999846042190097	WITHOUT_CLASSIFICATION	1.5395780990262737E-5	DEFECT
// startAngle	WITHOUT_CLASSIFICATION	0.9999994489136231	WITHOUT_CLASSIFICATION	5.510863768147779E-7	DEFECT
// extent	WITHOUT_CLASSIFICATION	0.9999908967099197	WITHOUT_CLASSIFICATION	9.103290080330083E-6	DEFECT
// tickRadius	WITHOUT_CLASSIFICATION	0.9999951390369005	WITHOUT_CLASSIFICATION	4.860963099498316E-6	DEFECT
// backgroundPaint	WITHOUT_CLASSIFICATION	0.9999977954667321	WITHOUT_CLASSIFICATION	2.2045332678924995E-6	DEFECT
// outlinePaint	WITHOUT_CLASSIFICATION	0.9999991928013184	WITHOUT_CLASSIFICATION	8.071986816482716E-7	DEFECT
// font	WITHOUT_CLASSIFICATION	0.9999909359043392	WITHOUT_CLASSIFICATION	9.064095660756724E-6	DEFECT
// paint	WITHOUT_CLASSIFICATION	0.9999979187961054	WITHOUT_CLASSIFICATION	2.0812038945755348E-6	DEFECT
// textAnchor	WITHOUT_CLASSIFICATION	0.999994449101062	WITHOUT_CLASSIFICATION	5.550898937997763E-6	DEFECT
// stroke	WITHOUT_CLASSIFICATION	0.9999643721325285	WITHOUT_CLASSIFICATION	3.5627867471412034E-5	DEFECT
// now make a change to the renderer and see if it triggers a plot // change event...	WITHOUT_CLASSIFICATION	0.9998719788573524	WITHOUT_CLASSIFICATION	1.2802114264763933E-4	DEFECT
// if multiple axes are mapped, the first in the list should be // returned...	WITHOUT_CLASSIFICATION	0.9999981963405633	WITHOUT_CLASSIFICATION	1.80365943672459E-6	DEFECT
// add a second renderer with the same index as dataset2, now it will // be used	WITHOUT_CLASSIFICATION	0.9999457932465192	WITHOUT_CLASSIFICATION	5.4206753480769655E-5	DEFECT
// outlineStroke	WITHOUT_CLASSIFICATION	0.9999222190081912	WITHOUT_CLASSIFICATION	7.778099180866795E-5	DEFECT
// check the case where there is a secondary dataset that doesn't // have a renderer (i.e. falls back to renderer 0)	WITHOUT_CLASSIFICATION	0.9956888060225889	WITHOUT_CLASSIFICATION	0.004311193977411152	DEFECT
// now remove a3, but since a3.equals(a1), this will in fact remove // a1...	WITHOUT_CLASSIFICATION	0.992702341984447	WITHOUT_CLASSIFICATION	0.00729765801555305	DEFECT
// check an inherited attribute	WITHOUT_CLASSIFICATION	0.9999998967563453	WITHOUT_CLASSIFICATION	1.032436548199532E-7	DEFECT
// check that the listener lists are independent	WITHOUT_CLASSIFICATION	0.9999999801529776	WITHOUT_CLASSIFICATION	1.9847022258769872E-8	DEFECT
// check that the listener lists are independent	WITHOUT_CLASSIFICATION	0.9999999801529776	WITHOUT_CLASSIFICATION	1.9847022258769872E-8	DEFECT
// check that the listener lists are independent	WITHOUT_CLASSIFICATION	0.9999999801529776	WITHOUT_CLASSIFICATION	1.9847022258769872E-8	DEFECT
// check that the listener lists are independent	WITHOUT_CLASSIFICATION	0.9999999801529776	WITHOUT_CLASSIFICATION	1.9847022258769872E-8	DEFECT
// visible	WITHOUT_CLASSIFICATION	0.9999989823673532	WITHOUT_CLASSIFICATION	1.0176326468950297E-6	DEFECT
// radius	WITHOUT_CLASSIFICATION	0.9999989245740003	WITHOUT_CLASSIFICATION	1.075425999733632E-6	DEFECT
// test a default instance	WITHOUT_CLASSIFICATION	0.9999999324229982	WITHOUT_CLASSIFICATION	6.757700171585026E-8	DEFECT
// test a default instance	WITHOUT_CLASSIFICATION	0.9999999324229982	WITHOUT_CLASSIFICATION	6.757700171585026E-8	DEFECT
// test a default instance	WITHOUT_CLASSIFICATION	0.9999999324229982	WITHOUT_CLASSIFICATION	6.757700171585026E-8	DEFECT
// test a default instance	WITHOUT_CLASSIFICATION	0.9999999324229982	WITHOUT_CLASSIFICATION	6.757700171585026E-8	DEFECT
// test a default instance	WITHOUT_CLASSIFICATION	0.9999999324229982	WITHOUT_CLASSIFICATION	6.757700171585026E-8	DEFECT
// test a default instance	WITHOUT_CLASSIFICATION	0.9999999324229982	WITHOUT_CLASSIFICATION	6.757700171585026E-8	DEFECT
// radius	WITHOUT_CLASSIFICATION	0.9999989245740003	WITHOUT_CLASSIFICATION	1.075425999733632E-6	DEFECT
// radius	WITHOUT_CLASSIFICATION	0.9999989245740003	WITHOUT_CLASSIFICATION	1.075425999733632E-6	DEFECT
// foregroundPaint	WITHOUT_CLASSIFICATION	0.9999987210829757	WITHOUT_CLASSIFICATION	1.278917024307356E-6	DEFECT
// background paint	WITHOUT_CLASSIFICATION	0.9999983631967748	WITHOUT_CLASSIFICATION	1.6368032251376546E-6	DEFECT
// foreground paint	WITHOUT_CLASSIFICATION	0.9999990504407252	WITHOUT_CLASSIFICATION	9.495592747739688E-7	DEFECT
// inner radius	WITHOUT_CLASSIFICATION	0.9999996987597302	WITHOUT_CLASSIFICATION	3.012402698837749E-7	DEFECT
// outer radius	WITHOUT_CLASSIFICATION	0.9999986142942315	WITHOUT_CLASSIFICATION	1.385705768432781E-6	DEFECT
// dataset index	WITHOUT_CLASSIFICATION	0.999972622193352	WITHOUT_CLASSIFICATION	2.7377806647927764E-5	DEFECT
// dataset index	WITHOUT_CLASSIFICATION	0.999972622193352	WITHOUT_CLASSIFICATION	2.7377806647927764E-5	DEFECT
// angle	WITHOUT_CLASSIFICATION	0.9999988145005486	WITHOUT_CLASSIFICATION	1.1854994513490516E-6	DEFECT
// frameAnchor	WITHOUT_CLASSIFICATION	0.9999997224825037	WITHOUT_CLASSIFICATION	2.775174963581187E-7	DEFECT
// templateValue	WITHOUT_CLASSIFICATION	0.9999995093175719	WITHOUT_CLASSIFICATION	4.906824281156803E-7	DEFECT
// valueAnchor	WITHOUT_CLASSIFICATION	0.9999990334530701	WITHOUT_CLASSIFICATION	9.665469299545905E-7	DEFECT
// fill paint	WITHOUT_CLASSIFICATION	0.9999987182492279	WITHOUT_CLASSIFICATION	1.2817507721231038E-6	DEFECT
// outline paint	WITHOUT_CLASSIFICATION	0.9999991554187594	WITHOUT_CLASSIFICATION	8.445812405931443E-7	DEFECT
// outline stroke	WITHOUT_CLASSIFICATION	0.9999703605454929	WITHOUT_CLASSIFICATION	2.9639454507029796E-5	DEFECT
// test a customised instance	WITHOUT_CLASSIFICATION	0.9999999779016882	WITHOUT_CLASSIFICATION	2.209831184349903E-8	DEFECT
// test a custom instance	WITHOUT_CLASSIFICATION	0.9999999340414439	WITHOUT_CLASSIFICATION	6.595855611085735E-8	DEFECT
// background	WITHOUT_CLASSIFICATION	0.9999943084749701	WITHOUT_CLASSIFICATION	5.691525029883146E-6	DEFECT
// dial cap	WITHOUT_CLASSIFICATION	0.9999562213352375	WITHOUT_CLASSIFICATION	4.377866476251343E-5	DEFECT
// frame	WITHOUT_CLASSIFICATION	0.9999995330799797	WITHOUT_CLASSIFICATION	4.6692002028898913E-7	DEFECT
// view	WITHOUT_CLASSIFICATION	0.9999787323666186	WITHOUT_CLASSIFICATION	2.126763338133874E-5	DEFECT
// layer	WITHOUT_CLASSIFICATION	0.9999892508080261	WITHOUT_CLASSIFICATION	1.0749191973744493E-5	DEFECT
// outlinePaint	WITHOUT_CLASSIFICATION	0.9999991928013184	WITHOUT_CLASSIFICATION	8.071986816482716E-7	DEFECT
// font	WITHOUT_CLASSIFICATION	0.9999909359043392	WITHOUT_CLASSIFICATION	9.064095660756724E-6	DEFECT
// paint	WITHOUT_CLASSIFICATION	0.9999979187961054	WITHOUT_CLASSIFICATION	2.0812038945755348E-6	DEFECT
// stroke	WITHOUT_CLASSIFICATION	0.9999643721325285	WITHOUT_CLASSIFICATION	3.5627867471412034E-5	DEFECT
// shape	WITHOUT_CLASSIFICATION	0.9999993607229558	WITHOUT_CLASSIFICATION	6.392770442365946E-7	DEFECT
// tickLabelFont	WITHOUT_CLASSIFICATION	0.9999962987110259	WITHOUT_CLASSIFICATION	3.7012889740663105E-6	DEFECT
// tickLabelPaint	WITHOUT_CLASSIFICATION	0.9999992720183477	WITHOUT_CLASSIFICATION	7.27981652362036E-7	DEFECT
// outlineStroke	WITHOUT_CLASSIFICATION	0.9999222190081912	WITHOUT_CLASSIFICATION	7.778099180866795E-5	DEFECT
// check an inherited attribute	WITHOUT_CLASSIFICATION	0.9999998967563453	WITHOUT_CLASSIFICATION	1.032436548199532E-7	DEFECT
// check that the listener lists are independent	WITHOUT_CLASSIFICATION	0.9999999801529776	WITHOUT_CLASSIFICATION	1.9847022258769872E-8	DEFECT
// check that the listener lists are independent	WITHOUT_CLASSIFICATION	0.9999999801529776	WITHOUT_CLASSIFICATION	1.9847022258769872E-8	DEFECT
// test a default instance	WITHOUT_CLASSIFICATION	0.9999999324229982	WITHOUT_CLASSIFICATION	6.757700171585026E-8	DEFECT
// test a default instance	WITHOUT_CLASSIFICATION	0.9999999324229982	WITHOUT_CLASSIFICATION	6.757700171585026E-8	DEFECT
// test a default instance	WITHOUT_CLASSIFICATION	0.9999999324229982	WITHOUT_CLASSIFICATION	6.757700171585026E-8	DEFECT
// radius	WITHOUT_CLASSIFICATION	0.9999989245740003	WITHOUT_CLASSIFICATION	1.075425999733632E-6	DEFECT
// angle	WITHOUT_CLASSIFICATION	0.9999988145005486	WITHOUT_CLASSIFICATION	1.1854994513490516E-6	DEFECT
// test a customised instance	WITHOUT_CLASSIFICATION	0.9999999779016882	WITHOUT_CLASSIFICATION	2.209831184349903E-8	DEFECT
// test a customised instance	WITHOUT_CLASSIFICATION	0.9999999779016882	WITHOUT_CLASSIFICATION	2.209831184349903E-8	DEFECT
// test a custom instance	WITHOUT_CLASSIFICATION	0.9999999340414439	WITHOUT_CLASSIFICATION	6.595855611085735E-8	DEFECT
// majorTickIncrement	WITHOUT_CLASSIFICATION	0.9999962261212011	WITHOUT_CLASSIFICATION	3.773878798951792E-6	DEFECT
// majorTickLength	WITHOUT_CLASSIFICATION	0.9999986191598061	WITHOUT_CLASSIFICATION	1.3808401938063946E-6	DEFECT
// majorTickPaint	WITHOUT_CLASSIFICATION	0.9999991561452547	WITHOUT_CLASSIFICATION	8.438547452469032E-7	DEFECT
// majorTickStroke	WITHOUT_CLASSIFICATION	0.9999769151906662	WITHOUT_CLASSIFICATION	2.3084809333772632E-5	DEFECT
// minorTickLength	WITHOUT_CLASSIFICATION	0.999999152520089	WITHOUT_CLASSIFICATION	8.474799109976489E-7	DEFECT
// tickLabelOffset	WITHOUT_CLASSIFICATION	0.9999993353757037	WITHOUT_CLASSIFICATION	6.646242962506837E-7	DEFECT
// try a default instance	WITHOUT_CLASSIFICATION	0.9999996537721741	WITHOUT_CLASSIFICATION	3.4622782575618697E-7	DEFECT
// try a customised instance	WITHOUT_CLASSIFICATION	0.9999998891802415	WITHOUT_CLASSIFICATION	1.108197584532607E-7	DEFECT
// label	WITHOUT_CLASSIFICATION	0.9999963296424966	WITHOUT_CLASSIFICATION	3.6703575034724256E-6	DEFECT
// gradient paint transformer	WITHOUT_CLASSIFICATION	0.9999999466437892	WITHOUT_CLASSIFICATION	5.335621080684838E-8	DEFECT
// test default instance	WITHOUT_CLASSIFICATION	0.9999999185014586	WITHOUT_CLASSIFICATION	8.149854139094987E-8	DEFECT
// have to use a concrete subclass...	WITHOUT_CLASSIFICATION	0.9999955895875949	WITHOUT_CLASSIFICATION	4.410412404991912E-6	DEFECT
// seriesVisible	WITHOUT_CLASSIFICATION	0.9999994681028586	WITHOUT_CLASSIFICATION	5.318971415315745E-7	DEFECT
// seriesVisibleList	WITHOUT_CLASSIFICATION	0.9999995662017159	WITHOUT_CLASSIFICATION	4.3379828405679097E-7	DEFECT
// baseSeriesVisible	WITHOUT_CLASSIFICATION	0.9999998578265015	WITHOUT_CLASSIFICATION	1.421734985081457E-7	DEFECT
// seriesVisibleInLegendList	WITHOUT_CLASSIFICATION	0.9999982247248412	WITHOUT_CLASSIFICATION	1.7752751586634604E-6	DEFECT
// baseSeriesVisibleInLegend	WITHOUT_CLASSIFICATION	0.9999993685717877	WITHOUT_CLASSIFICATION	6.314282123193304E-7	DEFECT
// paintList	WITHOUT_CLASSIFICATION	0.9999997478014162	WITHOUT_CLASSIFICATION	2.5219858377287144E-7	DEFECT
// basePaint	WITHOUT_CLASSIFICATION	0.9999998921120888	WITHOUT_CLASSIFICATION	1.078879111343693E-7	DEFECT
// baseFillPaint	WITHOUT_CLASSIFICATION	0.9999997803009556	WITHOUT_CLASSIFICATION	2.196990443669695E-7	DEFECT
// outlinePaintList	WITHOUT_CLASSIFICATION	0.9999998426849102	WITHOUT_CLASSIFICATION	1.5731508975789748E-7	DEFECT
// baseOutlinePaint	WITHOUT_CLASSIFICATION	0.9999999418069924	WITHOUT_CLASSIFICATION	5.8193007685670606E-8	DEFECT
// strokeList	WITHOUT_CLASSIFICATION	0.9999766916617739	WITHOUT_CLASSIFICATION	2.3308338226080208E-5	DEFECT
// outlineStrokeList	WITHOUT_CLASSIFICATION	0.9999792757499126	WITHOUT_CLASSIFICATION	2.0724250087401624E-5	DEFECT
// baseOutlineStroke	WITHOUT_CLASSIFICATION	0.9999967658708372	WITHOUT_CLASSIFICATION	3.2341291627349533E-6	DEFECT
// shapeList	WITHOUT_CLASSIFICATION	0.9999997261644304	WITHOUT_CLASSIFICATION	2.7383556951577206E-7	DEFECT
// baseShape	WITHOUT_CLASSIFICATION	0.9999998701079688	WITHOUT_CLASSIFICATION	1.2989203127661633E-7	DEFECT
// itemLabelsVisibleList	WITHOUT_CLASSIFICATION	0.9999999633298585	WITHOUT_CLASSIFICATION	3.667014151354106E-8	DEFECT
// baseItemLabelsVisible	WITHOUT_CLASSIFICATION	0.9999999328285428	WITHOUT_CLASSIFICATION	6.717145717625631E-8	DEFECT
// itemLabelFont	WITHOUT_CLASSIFICATION	0.999999759563639	WITHOUT_CLASSIFICATION	2.404363610215422E-7	DEFECT
// baseItemLabelFont	WITHOUT_CLASSIFICATION	0.9999998592830917	WITHOUT_CLASSIFICATION	1.4071690847018088E-7	DEFECT
// itemLabelPaint	WITHOUT_CLASSIFICATION	0.9999999527103196	WITHOUT_CLASSIFICATION	4.728968043017535E-8	DEFECT
// itemLabelPaintList	WITHOUT_CLASSIFICATION	0.9999999937432038	WITHOUT_CLASSIFICATION	6.2567961951546355E-9	DEFECT
// baseItemLabelPaint	WITHOUT_CLASSIFICATION	0.9999999795737868	WITHOUT_CLASSIFICATION	2.042621315973783E-8	DEFECT
// positiveItemLabelPositionList;	WITHOUT_CLASSIFICATION	0.9999998213303861	WITHOUT_CLASSIFICATION	1.786696138679278E-7	DEFECT
// basePositiveItemLabelPosition;	WITHOUT_CLASSIFICATION	0.9999997686493051	WITHOUT_CLASSIFICATION	2.3135069499100032E-7	DEFECT
// negativeItemLabelPosition;	WITHOUT_CLASSIFICATION	0.9999998958754492	WITHOUT_CLASSIFICATION	1.0412455069675888E-7	DEFECT
// OUTLINE STROKE	WITHOUT_CLASSIFICATION	0.9999996381073741	WITHOUT_CLASSIFICATION	3.618926259409675E-7	DEFECT
// SHAPE	WITHOUT_CLASSIFICATION	0.9999864481909325	WITHOUT_CLASSIFICATION	1.3551809067601868E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999898643226841	WITHOUT_CLASSIFICATION	1.0135677315940674E-5	DEFECT
// baseOutlinePaint	WITHOUT_CLASSIFICATION	0.9999999418069924	WITHOUT_CLASSIFICATION	5.8193007685670606E-8	DEFECT
// itemLabelAnchorOffset	WITHOUT_CLASSIFICATION	0.9999999853683244	WITHOUT_CLASSIFICATION	1.4631675669584308E-8	DEFECT
// createEntities;	WITHOUT_CLASSIFICATION	0.9999997100476529	WITHOUT_CLASSIFICATION	2.8995234708429086E-7	DEFECT
// createEntitiesList;	WITHOUT_CLASSIFICATION	0.9999998947989058	WITHOUT_CLASSIFICATION	1.0520109423731314E-7	DEFECT
// legendShape	WITHOUT_CLASSIFICATION	0.9999946601235348	WITHOUT_CLASSIFICATION	5.339876465211659E-6	DEFECT
// baseLegendShape	WITHOUT_CLASSIFICATION	0.9999995577471433	WITHOUT_CLASSIFICATION	4.42252856638115E-7	DEFECT
// legendTextFont	WITHOUT_CLASSIFICATION	0.9999692290468547	WITHOUT_CLASSIFICATION	3.077095314529751E-5	DEFECT
// baseLegendTextFont	WITHOUT_CLASSIFICATION	0.9999992800402334	WITHOUT_CLASSIFICATION	7.199597665553307E-7	DEFECT
// OUTLINE PAINT	WITHOUT_CLASSIFICATION	0.9999987971538676	WITHOUT_CLASSIFICATION	1.2028461323065078E-6	DEFECT
// ITEM_LABELS_VISIBLE	WITHOUT_CLASSIFICATION	0.9999977916360434	WITHOUT_CLASSIFICATION	2.208363956644559E-6	DEFECT
// ITEM_LABEL_FONT	WITHOUT_CLASSIFICATION	0.9999958109048802	WITHOUT_CLASSIFICATION	4.189095119780602E-6	DEFECT
// POSITIVE ITEM LABEL POSITION	WITHOUT_CLASSIFICATION	0.9999919759582032	WITHOUT_CLASSIFICATION	8.024041796766399E-6	DEFECT
// NEGATIVE ITEM LABEL ANCHOR	WITHOUT_CLASSIFICATION	0.9999993163708418	WITHOUT_CLASSIFICATION	6.836291582469796E-7	DEFECT
// failed	WITHOUT_CLASSIFICATION	0.9999960007475251	WITHOUT_CLASSIFICATION	3.999252474923167E-6	DEFECT
// now check autoPopulate==true	WITHOUT_CLASSIFICATION	0.9999999958262362	WITHOUT_CLASSIFICATION	4.17376378430478E-9	DEFECT
// now check autoPopulate==true	WITHOUT_CLASSIFICATION	0.9999999958262362	WITHOUT_CLASSIFICATION	4.17376378430478E-9	DEFECT
// now check autoPopulate==true	WITHOUT_CLASSIFICATION	0.9999999958262362	WITHOUT_CLASSIFICATION	4.17376378430478E-9	DEFECT
/*CategoryPlot plot =*/	WITHOUT_CLASSIFICATION	0.9999681136049288	WITHOUT_CLASSIFICATION	3.1886395071297047E-5	DEFECT
/*CategoryPlot plot =*/	WITHOUT_CLASSIFICATION	0.9999681136049288	WITHOUT_CLASSIFICATION	3.1886395071297047E-5	DEFECT
/*CategoryPlot plot =*/	WITHOUT_CLASSIFICATION	0.9999681136049288	WITHOUT_CLASSIFICATION	3.1886395071297047E-5	DEFECT
// check a series with no items	WITHOUT_CLASSIFICATION	0.9999998459704802	WITHOUT_CLASSIFICATION	1.5402951989120406E-7	DEFECT
// check a series with no items	WITHOUT_CLASSIFICATION	0.9999998459704802	WITHOUT_CLASSIFICATION	1.5402951989120406E-7	DEFECT
// check a series with one item	WITHOUT_CLASSIFICATION	0.9999997586067224	WITHOUT_CLASSIFICATION	2.4139327762008603E-7	DEFECT
// check a series with one item	WITHOUT_CLASSIFICATION	0.9999997586067224	WITHOUT_CLASSIFICATION	2.4139327762008603E-7	DEFECT
// check a series with one item	WITHOUT_CLASSIFICATION	0.9999997586067224	WITHOUT_CLASSIFICATION	2.4139327762008603E-7	DEFECT
// check a series with one item	WITHOUT_CLASSIFICATION	0.9999997586067224	WITHOUT_CLASSIFICATION	2.4139327762008603E-7	DEFECT
// check a series with two items	WITHOUT_CLASSIFICATION	0.9999985346379426	WITHOUT_CLASSIFICATION	1.4653620574056999E-6	DEFECT
// check a series with two items	WITHOUT_CLASSIFICATION	0.9999985346379426	WITHOUT_CLASSIFICATION	1.4653620574056999E-6	DEFECT
// check a series with two items	WITHOUT_CLASSIFICATION	0.9999985346379426	WITHOUT_CLASSIFICATION	1.4653620574056999E-6	DEFECT
// check a series with two items	WITHOUT_CLASSIFICATION	0.9999985346379426	WITHOUT_CLASSIFICATION	1.4653620574056999E-6	DEFECT
// check a series with three items	WITHOUT_CLASSIFICATION	0.9999958022905633	WITHOUT_CLASSIFICATION	4.197709436678508E-6	DEFECT
// check a series with three items	WITHOUT_CLASSIFICATION	0.9999958022905633	WITHOUT_CLASSIFICATION	4.197709436678508E-6	DEFECT
// check a series with three items	WITHOUT_CLASSIFICATION	0.9999958022905633	WITHOUT_CLASSIFICATION	4.197709436678508E-6	DEFECT
// check a series with three items	WITHOUT_CLASSIFICATION	0.9999958022905633	WITHOUT_CLASSIFICATION	4.197709436678508E-6	DEFECT
// check a series with three items	WITHOUT_CLASSIFICATION	0.9999958022905633	WITHOUT_CLASSIFICATION	4.197709436678508E-6	DEFECT
// check a series with four items	WITHOUT_CLASSIFICATION	0.9999997254628011	WITHOUT_CLASSIFICATION	2.745371988426625E-7	DEFECT
// check a series with four items	WITHOUT_CLASSIFICATION	0.9999997254628011	WITHOUT_CLASSIFICATION	2.745371988426625E-7	DEFECT
// check a series with four items	WITHOUT_CLASSIFICATION	0.9999997254628011	WITHOUT_CLASSIFICATION	2.745371988426625E-7	DEFECT
// check a series with four items	WITHOUT_CLASSIFICATION	0.9999997254628011	WITHOUT_CLASSIFICATION	2.745371988426625E-7	DEFECT
// check a series with repeating items	WITHOUT_CLASSIFICATION	0.9999986882122113	WITHOUT_CLASSIFICATION	1.3117877887470172E-6	DEFECT
// check a series with repeating items	WITHOUT_CLASSIFICATION	0.9999986882122113	WITHOUT_CLASSIFICATION	1.3117877887470172E-6	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999898643226841	WITHOUT_CLASSIFICATION	1.0135677315940674E-5	DEFECT
// check a series with no items	WITHOUT_CLASSIFICATION	0.9999998459704802	WITHOUT_CLASSIFICATION	1.5402951989120406E-7	DEFECT
// check a series with one item	WITHOUT_CLASSIFICATION	0.9999997586067224	WITHOUT_CLASSIFICATION	2.4139327762008603E-7	DEFECT
// check a series with two items	WITHOUT_CLASSIFICATION	0.9999985346379426	WITHOUT_CLASSIFICATION	1.4653620574056999E-6	DEFECT
// check a series with three items	WITHOUT_CLASSIFICATION	0.9999958022905633	WITHOUT_CLASSIFICATION	4.197709436678508E-6	DEFECT
// check a series with four items	WITHOUT_CLASSIFICATION	0.9999997254628011	WITHOUT_CLASSIFICATION	2.745371988426625E-7	DEFECT
// check a series with repeating items	WITHOUT_CLASSIFICATION	0.9999986882122113	WITHOUT_CLASSIFICATION	1.3117877887470172E-6	DEFECT
// we're doing this for testing only, and make sure that we // only add data in ascending order by x-value	WITHOUT_CLASSIFICATION	0.9999999649580238	WITHOUT_CLASSIFICATION	3.504197625462127E-8	DEFECT
// we're doing this for testing only, and make sure that we // only add data in descending order by x-value	WITHOUT_CLASSIFICATION	0.9999998569810228	WITHOUT_CLASSIFICATION	1.4301897715578933E-7	DEFECT
// try with gradient paint	WITHOUT_CLASSIFICATION	0.9999986047254497	WITHOUT_CLASSIFICATION	1.3952745503240458E-6	DEFECT
// should be equal...	WITHOUT_CLASSIFICATION	0.99998183185329	WITHOUT_CLASSIFICATION	1.8168146709938312E-5	DEFECT
// should be equal...	WITHOUT_CLASSIFICATION	0.99998183185329	WITHOUT_CLASSIFICATION	1.8168146709938312E-5	DEFECT
// and independent...	WITHOUT_CLASSIFICATION	0.9999806484011275	WITHOUT_CLASSIFICATION	1.9351598872418874E-5	DEFECT
// and independent...	WITHOUT_CLASSIFICATION	0.9999806484011275	WITHOUT_CLASSIFICATION	1.9351598872418874E-5	DEFECT
// and independent...	WITHOUT_CLASSIFICATION	0.9999806484011275	WITHOUT_CLASSIFICATION	1.9351598872418874E-5	DEFECT
// an empty dataset should return a null range	WITHOUT_CLASSIFICATION	0.9999999240175969	WITHOUT_CLASSIFICATION	7.598240316677676E-8	DEFECT
// an empty dataset should return a null range	WITHOUT_CLASSIFICATION	0.9999999240175969	WITHOUT_CLASSIFICATION	7.598240316677676E-8	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9999998112270786	WITHOUT_CLASSIFICATION	1.8877292133902954E-7	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9999998112270786	WITHOUT_CLASSIFICATION	1.8877292133902954E-7	DEFECT
// the renderer should not be equal to a BarRenderer	WITHOUT_CLASSIFICATION	0.999352538121038	WITHOUT_CLASSIFICATION	6.474618789620715E-4	DEFECT
// firstBarPaint;	WITHOUT_CLASSIFICATION	0.9999998645524092	WITHOUT_CLASSIFICATION	1.3544759070948817E-7	DEFECT
// lastBarPaint;	WITHOUT_CLASSIFICATION	0.9999983231909122	WITHOUT_CLASSIFICATION	1.6768090878158037E-6	DEFECT
// positiveBarPaint;	WITHOUT_CLASSIFICATION	0.9999997969152796	WITHOUT_CLASSIFICATION	2.0308472045166498E-7	DEFECT
//private Paint negativeBarPaint;	WITHOUT_CLASSIFICATION	0.9999984224805315	WITHOUT_CLASSIFICATION	1.5775194684072658E-6	DEFECT
// quick check for independence	WITHOUT_CLASSIFICATION	0.9999995975377621	WITHOUT_CLASSIFICATION	4.0246223788689816E-7	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999898643226841	WITHOUT_CLASSIFICATION	1.0135677315940674E-5	DEFECT
// shadowXOffset	WITHOUT_CLASSIFICATION	0.9999980742383162	WITHOUT_CLASSIFICATION	1.9257616838042915E-6	DEFECT
// shadowYOffset	WITHOUT_CLASSIFICATION	0.9999993318499115	WITHOUT_CLASSIFICATION	6.681500884863967E-7	DEFECT
// toolTipGenerator	WITHOUT_CLASSIFICATION	0.99999977752758	WITHOUT_CLASSIFICATION	2.2247242003721566E-7	DEFECT
// urlGenerator	WITHOUT_CLASSIFICATION	0.9999998830949359	WITHOUT_CLASSIFICATION	1.1690506394781504E-7	DEFECT
// should be equal...	WITHOUT_CLASSIFICATION	0.99998183185329	WITHOUT_CLASSIFICATION	1.8168146709938312E-5	DEFECT
// and independent...	WITHOUT_CLASSIFICATION	0.9999806484011275	WITHOUT_CLASSIFICATION	1.9351598872418874E-5	DEFECT
// an empty dataset should return a null range	WITHOUT_CLASSIFICATION	0.9999999240175969	WITHOUT_CLASSIFICATION	7.598240316677676E-8	DEFECT
// an empty dataset should return a null range	WITHOUT_CLASSIFICATION	0.9999999240175969	WITHOUT_CLASSIFICATION	7.598240316677676E-8	DEFECT
// an empty dataset should return a null range	WITHOUT_CLASSIFICATION	0.9999999240175969	WITHOUT_CLASSIFICATION	7.598240316677676E-8	DEFECT
// an empty dataset should return a null range	WITHOUT_CLASSIFICATION	0.9999999240175969	WITHOUT_CLASSIFICATION	7.598240316677676E-8	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9999998112270786	WITHOUT_CLASSIFICATION	1.8877292133902954E-7	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9999998112270786	WITHOUT_CLASSIFICATION	1.8877292133902954E-7	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9999998112270786	WITHOUT_CLASSIFICATION	1.8877292133902954E-7	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9999998112270786	WITHOUT_CLASSIFICATION	1.8877292133902954E-7	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9999998112270786	WITHOUT_CLASSIFICATION	1.8877292133902954E-7	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9999998112270786	WITHOUT_CLASSIFICATION	1.8877292133902954E-7	DEFECT
// check that the series visible flag is observed	WITHOUT_CLASSIFICATION	0.999999645701342	WITHOUT_CLASSIFICATION	3.542986579438085E-7	DEFECT
// map	WITHOUT_CLASSIFICATION	0.999988789145402	WITHOUT_CLASSIFICATION	1.121085459795674E-5	DEFECT
// toolTipGeneratorList	WITHOUT_CLASSIFICATION	0.9999999715759863	WITHOUT_CLASSIFICATION	2.842401377767459E-8	DEFECT
// baseToolTipGenerator	WITHOUT_CLASSIFICATION	0.9999999906200894	WITHOUT_CLASSIFICATION	9.379910698766674E-9	DEFECT
// itemLabelGenerator	WITHOUT_CLASSIFICATION	0.9999999831373417	WITHOUT_CLASSIFICATION	1.686265836828695E-8	DEFECT
// itemLabelGeneratorList	WITHOUT_CLASSIFICATION	0.9999999964438369	WITHOUT_CLASSIFICATION	3.5561631084006288E-9	DEFECT
// baseItemLabelGenerator	WITHOUT_CLASSIFICATION	0.9999999901310229	WITHOUT_CLASSIFICATION	9.868977071800541E-9	DEFECT
// urlGeneratorList	WITHOUT_CLASSIFICATION	0.9999999731979258	WITHOUT_CLASSIFICATION	2.6802074239036438E-8	DEFECT
// baseItemURLGenerator	WITHOUT_CLASSIFICATION	0.9999999943842406	WITHOUT_CLASSIFICATION	5.615759502066737E-9	DEFECT
// legendItemLabelGenerator	WITHOUT_CLASSIFICATION	0.9999998808594935	WITHOUT_CLASSIFICATION	1.191405064143704E-7	DEFECT
// legendItemToolTipGenerator	WITHOUT_CLASSIFICATION	0.9999999211171916	WITHOUT_CLASSIFICATION	7.888280841546233E-8	DEFECT
// legendItemURLGenerator	WITHOUT_CLASSIFICATION	0.9999998617541088	WITHOUT_CLASSIFICATION	1.3824589116451988E-7	DEFECT
// check that the generator has been cloned	WITHOUT_CLASSIFICATION	0.9999973677445106	WITHOUT_CLASSIFICATION	2.6322554893696947E-6	DEFECT
// check that the generator has been cloned	WITHOUT_CLASSIFICATION	0.9999973677445106	WITHOUT_CLASSIFICATION	2.6322554893696947E-6	DEFECT
// check that the generator has been cloned	WITHOUT_CLASSIFICATION	0.9999973677445106	WITHOUT_CLASSIFICATION	2.6322554893696947E-6	DEFECT
// base value	WITHOUT_CLASSIFICATION	0.9999998380734624	WITHOUT_CLASSIFICATION	1.6192653775809743E-7	DEFECT
// itemMargin	WITHOUT_CLASSIFICATION	0.999999827448427	WITHOUT_CLASSIFICATION	1.7255157294159275E-7	DEFECT
// drawBarOutline	WITHOUT_CLASSIFICATION	0.9999992368521291	WITHOUT_CLASSIFICATION	7.631478709445056E-7	DEFECT
// maximumBarWidth	WITHOUT_CLASSIFICATION	0.9999985285197267	WITHOUT_CLASSIFICATION	1.4714802733328015E-6	DEFECT
// minimumBarLength	WITHOUT_CLASSIFICATION	0.9999996509686723	WITHOUT_CLASSIFICATION	3.490313277402156E-7	DEFECT
// gradientPaintTransformer	WITHOUT_CLASSIFICATION	0.9999999907254096	WITHOUT_CLASSIFICATION	9.274590557809662E-9	DEFECT
// positiveItemLabelPositionFallback	WITHOUT_CLASSIFICATION	0.9999971615634934	WITHOUT_CLASSIFICATION	2.838436506523395E-6	DEFECT
// negativeItemLabelPositionFallback	WITHOUT_CLASSIFICATION	0.999996909207125	WITHOUT_CLASSIFICATION	3.090792874875008E-6	DEFECT
// barPainter	WITHOUT_CLASSIFICATION	0.9999998090678861	WITHOUT_CLASSIFICATION	1.9093211398353603E-7	DEFECT
// shadowsVisible	WITHOUT_CLASSIFICATION	0.9999987914732844	WITHOUT_CLASSIFICATION	1.208526715662676E-6	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999995722400108	WITHOUT_CLASSIFICATION	4.2775998929434456E-7	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999898643226841	WITHOUT_CLASSIFICATION	1.0135677315940674E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999898643226841	WITHOUT_CLASSIFICATION	1.0135677315940674E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999898643226841	WITHOUT_CLASSIFICATION	1.0135677315940674E-5	DEFECT
// shadowXOffset	WITHOUT_CLASSIFICATION	0.9999980742383162	WITHOUT_CLASSIFICATION	1.9257616838042915E-6	DEFECT
// shadowYOffset	WITHOUT_CLASSIFICATION	0.9999993318499115	WITHOUT_CLASSIFICATION	6.681500884863967E-7	DEFECT
// an empty dataset should return a null range	WITHOUT_CLASSIFICATION	0.9999999240175969	WITHOUT_CLASSIFICATION	7.598240316677676E-8	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9999998112270786	WITHOUT_CLASSIFICATION	1.8877292133902954E-7	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9999998112270786	WITHOUT_CLASSIFICATION	1.8877292133902954E-7	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9999998112270786	WITHOUT_CLASSIFICATION	1.8877292133902954E-7	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9999998112270786	WITHOUT_CLASSIFICATION	1.8877292133902954E-7	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9999998112270786	WITHOUT_CLASSIFICATION	1.8877292133902954E-7	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9999998112270786	WITHOUT_CLASSIFICATION	1.8877292133902954E-7	DEFECT
// check that the series visible flag is observed	WITHOUT_CLASSIFICATION	0.999999645701342	WITHOUT_CLASSIFICATION	3.542986579438085E-7	DEFECT
// barPainter	WITHOUT_CLASSIFICATION	0.9999998090678861	WITHOUT_CLASSIFICATION	1.9093211398353603E-7	DEFECT
// shadowsVisible	WITHOUT_CLASSIFICATION	0.9999987914732844	WITHOUT_CLASSIFICATION	1.208526715662676E-6	DEFECT
// try null argument	WITHOUT_CLASSIFICATION	0.9999994343068485	WITHOUT_CLASSIFICATION	5.656931515142066E-7	DEFECT
// default instances	WITHOUT_CLASSIFICATION	0.9999995238502002	WITHOUT_CLASSIFICATION	4.76149799844827E-7	DEFECT
// default instances	WITHOUT_CLASSIFICATION	0.9999995238502002	WITHOUT_CLASSIFICATION	4.76149799844827E-7	DEFECT
// check that super class fields are being looked at...	WITHOUT_CLASSIFICATION	0.9996020765587624	WITHOUT_CLASSIFICATION	3.9792344123760944E-4	DEFECT
// setUseYInterval	WITHOUT_CLASSIFICATION	0.9999999479260274	WITHOUT_CLASSIFICATION	5.207397257406519E-8	DEFECT
// setBase()	WITHOUT_CLASSIFICATION	0.9999983802088296	WITHOUT_CLASSIFICATION	1.6197911704633614E-6	DEFECT
// try empty dataset	WITHOUT_CLASSIFICATION	0.9999997719022753	WITHOUT_CLASSIFICATION	2.2809772465461926E-7	DEFECT
// setGradientPaintTransformer()	WITHOUT_CLASSIFICATION	0.9999999542341816	WITHOUT_CLASSIFICATION	4.576581833293808E-8	DEFECT
// setDrawBarOutline()	WITHOUT_CLASSIFICATION	0.9999998151219633	WITHOUT_CLASSIFICATION	1.8487803667030246E-7	DEFECT
// setMargin()	WITHOUT_CLASSIFICATION	0.9999996330835907	WITHOUT_CLASSIFICATION	3.669164091565632E-7	DEFECT
// legendBar	WITHOUT_CLASSIFICATION	0.9999890608588752	WITHOUT_CLASSIFICATION	1.0939141124902695E-5	DEFECT
// positiveItemLabelFallbackPosition	WITHOUT_CLASSIFICATION	0.999996623998251	WITHOUT_CLASSIFICATION	3.3760017490733122E-6	DEFECT
// negativeItemLabelFallbackPosition	WITHOUT_CLASSIFICATION	0.9999963238488412	WITHOUT_CLASSIFICATION	3.6761511588931485E-6	DEFECT
// check a list containing a non-Number object	WITHOUT_CLASSIFICATION	0.9999999987166392	WITHOUT_CLASSIFICATION	1.2833608244075987E-9	DEFECT
// try something from the base class	WITHOUT_CLASSIFICATION	0.9999966256656503	WITHOUT_CLASSIFICATION	3.374334349749029E-6	DEFECT
// positive paint	WITHOUT_CLASSIFICATION	0.9999997656745853	WITHOUT_CLASSIFICATION	2.3432541476185978E-7	DEFECT
// negative paint	WITHOUT_CLASSIFICATION	0.9999995291061421	WITHOUT_CLASSIFICATION	4.7089385791893103E-7	DEFECT
// shapesVisible	WITHOUT_CLASSIFICATION	0.9999997097985467	WITHOUT_CLASSIFICATION	2.9020145327369246E-7	DEFECT
// legendLine	WITHOUT_CLASSIFICATION	0.9999937050676686	WITHOUT_CLASSIFICATION	6.294932331334606E-6	DEFECT
// roundXCoordinates	WITHOUT_CLASSIFICATION	0.9999995018579008	WITHOUT_CLASSIFICATION	4.981420992896327E-7	DEFECT
// drawOpenTicks	WITHOUT_CLASSIFICATION	0.9999993935533742	WITHOUT_CLASSIFICATION	6.064466258267818E-7	DEFECT
// drawCloseTicks	WITHOUT_CLASSIFICATION	0.999999734234488	WITHOUT_CLASSIFICATION	2.657655120787037E-7	DEFECT
// openTickPaint	WITHOUT_CLASSIFICATION	0.9999996194388506	WITHOUT_CLASSIFICATION	3.8056114935436926E-7	DEFECT
// closeTickPaint	WITHOUT_CLASSIFICATION	0.9999998633737309	WITHOUT_CLASSIFICATION	1.3662626900543328E-7	DEFECT
// tickLength	WITHOUT_CLASSIFICATION	0.9999896736117733	WITHOUT_CLASSIFICATION	1.0326388226756421E-5	DEFECT
// try an empty dataset - should return a null range	WITHOUT_CLASSIFICATION	0.9999994792015136	WITHOUT_CLASSIFICATION	5.20798486453469E-7	DEFECT
// try a null dataset - should return a null range	WITHOUT_CLASSIFICATION	0.9999968617939814	WITHOUT_CLASSIFICATION	3.1382060186078976E-6	DEFECT
// drawXError	WITHOUT_CLASSIFICATION	0.9999726612052888	WITHOUT_CLASSIFICATION	2.7338794711099077E-5	DEFECT
// drawYError	WITHOUT_CLASSIFICATION	0.9999898006457225	WITHOUT_CLASSIFICATION	1.0199354277405559E-5	DEFECT
// capLength	WITHOUT_CLASSIFICATION	0.9999975191895317	WITHOUT_CLASSIFICATION	2.4808104682335938E-6	DEFECT
// errorPaint	WITHOUT_CLASSIFICATION	0.9999989084170767	WITHOUT_CLASSIFICATION	1.0915829233043218E-6	DEFECT
// errorStroke	WITHOUT_CLASSIFICATION	0.9998943418992752	WITHOUT_CLASSIFICATION	1.0565810072483734E-4	DEFECT
// check boxPaint null also	WITHOUT_CLASSIFICATION	0.9999999986171573	WITHOUT_CLASSIFICATION	1.3828427477304118E-9	DEFECT
// upPaint	WITHOUT_CLASSIFICATION	0.9999995685320003	WITHOUT_CLASSIFICATION	4.3146799966332387E-7	DEFECT
// downPaint	WITHOUT_CLASSIFICATION	0.9999920889105284	WITHOUT_CLASSIFICATION	7.91108947171755E-6	DEFECT
// drawVolume	WITHOUT_CLASSIFICATION	0.9999993936341476	WITHOUT_CLASSIFICATION	6.063658524844909E-7	DEFECT
// candleWidth	WITHOUT_CLASSIFICATION	0.9999994812931012	WITHOUT_CLASSIFICATION	5.187068987272138E-7	DEFECT
// maxCandleWidthInMilliseconds	WITHOUT_CLASSIFICATION	0.999999138367041	WITHOUT_CLASSIFICATION	8.616329591125904E-7	DEFECT
// autoWidthMethod	WITHOUT_CLASSIFICATION	0.9999998474572607	WITHOUT_CLASSIFICATION	1.52542739418099E-7	DEFECT
// autoWidthFactor	WITHOUT_CLASSIFICATION	0.9999996307115635	WITHOUT_CLASSIFICATION	3.6928843649615245E-7	DEFECT
// backgroundPaint	WITHOUT_CLASSIFICATION	0.9999977954667321	WITHOUT_CLASSIFICATION	2.2045332678924995E-6	DEFECT
// padding	WITHOUT_CLASSIFICATION	0.9999803844662634	WITHOUT_CLASSIFICATION	1.9615533736577654E-5	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999995722400108	WITHOUT_CLASSIFICATION	4.2775998929434456E-7	DEFECT
// fillPaintTransformer	WITHOUT_CLASSIFICATION	0.9999999938628875	WITHOUT_CLASSIFICATION	6.1371125290464796E-9	DEFECT
// fillPaint	WITHOUT_CLASSIFICATION	0.9999986187250867	WITHOUT_CLASSIFICATION	1.3812749133949998E-6	DEFECT
// outlinePaint	WITHOUT_CLASSIFICATION	0.9999991928013184	WITHOUT_CLASSIFICATION	8.071986816482716E-7	DEFECT
// linePaint	WITHOUT_CLASSIFICATION	0.9999992202740612	WITHOUT_CLASSIFICATION	7.797259387003413E-7	DEFECT
// paint	WITHOUT_CLASSIFICATION	0.9999979187961054	WITHOUT_CLASSIFICATION	2.0812038945755348E-6	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999898643226841	WITHOUT_CLASSIFICATION	1.0135677315940674E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999898643226841	WITHOUT_CLASSIFICATION	1.0135677315940674E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999898643226841	WITHOUT_CLASSIFICATION	1.0135677315940674E-5	DEFECT
// shape	WITHOUT_CLASSIFICATION	0.9999993607229558	WITHOUT_CLASSIFICATION	6.392770442365946E-7	DEFECT
// outlineStroke	WITHOUT_CLASSIFICATION	0.9999222190081912	WITHOUT_CLASSIFICATION	7.778099180866795E-5	DEFECT
// axisLocation	WITHOUT_CLASSIFICATION	0.9999996719502806	WITHOUT_CLASSIFICATION	3.2804971944175983E-7	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9999998112270786	WITHOUT_CLASSIFICATION	1.8877292133902954E-7	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9999998112270786	WITHOUT_CLASSIFICATION	1.8877292133902954E-7	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9999998112270786	WITHOUT_CLASSIFICATION	1.8877292133902954E-7	DEFECT
// check that the generator has been cloned	WITHOUT_CLASSIFICATION	0.9999973677445106	WITHOUT_CLASSIFICATION	2.6322554893696947E-6	DEFECT
// check that the generator has been cloned	WITHOUT_CLASSIFICATION	0.9999973677445106	WITHOUT_CLASSIFICATION	2.6322554893696947E-6	DEFECT
// check that the generator has been cloned	WITHOUT_CLASSIFICATION	0.9999973677445106	WITHOUT_CLASSIFICATION	2.6322554893696947E-6	DEFECT
// default instances	WITHOUT_CLASSIFICATION	0.9999995238502002	WITHOUT_CLASSIFICATION	4.76149799844827E-7	DEFECT
// default instances	WITHOUT_CLASSIFICATION	0.9999995238502002	WITHOUT_CLASSIFICATION	4.76149799844827E-7	DEFECT
// default instances	WITHOUT_CLASSIFICATION	0.9999995238502002	WITHOUT_CLASSIFICATION	4.76149799844827E-7	DEFECT
// try an empty dataset - should return a null range	WITHOUT_CLASSIFICATION	0.9999994792015136	WITHOUT_CLASSIFICATION	5.20798486453469E-7	DEFECT
// try a null dataset - should return a null range	WITHOUT_CLASSIFICATION	0.9999968617939814	WITHOUT_CLASSIFICATION	3.1382060186078976E-6	DEFECT
// locale shouldn't matter here	WITHOUT_CLASSIFICATION	0.9992444603768822	WITHOUT_CLASSIFICATION	7.555396231178924E-4	DEFECT
// autoWidthGap	WITHOUT_CLASSIFICATION	0.9999993758148814	WITHOUT_CLASSIFICATION	6.241851185227631E-7	DEFECT
// check that a null dataset returns null bounds	WITHOUT_CLASSIFICATION	0.9999998801338524	WITHOUT_CLASSIFICATION	1.198661476370465E-7	DEFECT
// check that a null dataset returns null bounds	WITHOUT_CLASSIFICATION	0.9999998801338524	WITHOUT_CLASSIFICATION	1.198661476370465E-7	DEFECT
// check the bounds of a simple dataset	WITHOUT_CLASSIFICATION	0.9999998501791524	WITHOUT_CLASSIFICATION	1.4982084765245572E-7	DEFECT
// test findDomainBounds as well	WITHOUT_CLASSIFICATION	0.9999988546868972	WITHOUT_CLASSIFICATION	1.1453131027999078E-6	DEFECT
// blockHeight	WITHOUT_CLASSIFICATION	0.9999959621404267	WITHOUT_CLASSIFICATION	4.03785957325763E-6	DEFECT
// blockWidth	WITHOUT_CLASSIFICATION	0.9999980349030048	WITHOUT_CLASSIFICATION	1.9650969953052802E-6	DEFECT
// paintScale	WITHOUT_CLASSIFICATION	0.999999808493853	WITHOUT_CLASSIFICATION	1.915061470459896E-7	DEFECT
// paintScale	WITHOUT_CLASSIFICATION	0.999999808493853	WITHOUT_CLASSIFICATION	1.915061470459896E-7	DEFECT
// the following fields are inherited from the AbstractXYItemRenderer	WITHOUT_CLASSIFICATION	0.9999993273455925	WITHOUT_CLASSIFICATION	6.726544074192808E-7	DEFECT
// axis	WITHOUT_CLASSIFICATION	0.9999979991318211	WITHOUT_CLASSIFICATION	2.0008681789538906E-6	DEFECT
// axisOffset	WITHOUT_CLASSIFICATION	0.9999997880446063	WITHOUT_CLASSIFICATION	2.1195539357028385E-7	DEFECT
// stripWidth	WITHOUT_CLASSIFICATION	0.9999995792780492	WITHOUT_CLASSIFICATION	4.207219508480996E-7	DEFECT
// stripOutlineVisible	WITHOUT_CLASSIFICATION	0.999999958135787	WITHOUT_CLASSIFICATION	4.186421303174105E-8	DEFECT
// stripOutlinePaint	WITHOUT_CLASSIFICATION	0.9999999623956269	WITHOUT_CLASSIFICATION	3.760437314632676E-8	DEFECT
// stripOutlineStroke	WITHOUT_CLASSIFICATION	0.999994579371123	WITHOUT_CLASSIFICATION	5.420628877033878E-6	DEFECT
// shapeVisible	WITHOUT_CLASSIFICATION	0.999999695412934	WITHOUT_CLASSIFICATION	3.0458706604084483E-7	DEFECT
// shapeFilled	WITHOUT_CLASSIFICATION	0.9999997223770344	WITHOUT_CLASSIFICATION	2.776229656379151E-7	DEFECT
// shapeOutlineVisible	WITHOUT_CLASSIFICATION	0.9999999429094898	WITHOUT_CLASSIFICATION	5.7090510272852315E-8	DEFECT
// shapeAnchor	WITHOUT_CLASSIFICATION	0.9999995588112973	WITHOUT_CLASSIFICATION	4.4118870260325385E-7	DEFECT
// shapeLocation	WITHOUT_CLASSIFICATION	0.9999996658273769	WITHOUT_CLASSIFICATION	3.341726231179074E-7	DEFECT
// line	WITHOUT_CLASSIFICATION	0.9999954854961611	WITHOUT_CLASSIFICATION	4.51450383892095E-6	DEFECT
// lineStroke	WITHOUT_CLASSIFICATION	0.9999016339226824	WITHOUT_CLASSIFICATION	9.83660773177099E-5	DEFECT
// maximumLinesToDisplay	WITHOUT_CLASSIFICATION	0.999999958112688	WITHOUT_CLASSIFICATION	4.1887311968100074E-8	DEFECT
// toolTipText	WITHOUT_CLASSIFICATION	0.9999947350947208	WITHOUT_CLASSIFICATION	5.264905279205984E-6	DEFECT
// expandToFitSpace	WITHOUT_CLASSIFICATION	0.999998129210241	WITHOUT_CLASSIFICATION	1.8707897590142638E-6	DEFECT
// margin	WITHOUT_CLASSIFICATION	0.9999973590406744	WITHOUT_CLASSIFICATION	2.6409593254739504E-6	DEFECT
// border	WITHOUT_CLASSIFICATION	0.9999990718852217	WITHOUT_CLASSIFICATION	9.281147783265361E-7	DEFECT
// is the clone independent	WITHOUT_CLASSIFICATION	0.9999998580502351	WITHOUT_CLASSIFICATION	1.4194976496262088E-7	DEFECT
// case 1 - object is mutable but not PublicCloneable	WITHOUT_CLASSIFICATION	0.9999870512431637	WITHOUT_CLASSIFICATION	1.2948756836411056E-5	DEFECT
// simple case	WITHOUT_CLASSIFICATION	0.9999998763221748	WITHOUT_CLASSIFICATION	1.2367782514679592E-7	DEFECT
// try a null value	WITHOUT_CLASSIFICATION	0.9999986310530561	WITHOUT_CLASSIFICATION	1.3689469438418206E-6	DEFECT
// try null argument	WITHOUT_CLASSIFICATION	0.9999994343068485	WITHOUT_CLASSIFICATION	5.656931515142066E-7	DEFECT
// you can add a null list - it would have been better if this // required EMPTY_LIST	WITHOUT_CLASSIFICATION	0.9997559361915201	WITHOUT_CLASSIFICATION	2.4406380847999558E-4	DEFECT
// case 1 - object is mutable but not PublicCloneable	WITHOUT_CLASSIFICATION	0.9999870512431637	WITHOUT_CLASSIFICATION	1.2948756836411056E-5	DEFECT
// if we modify the original list, it's best if the URL generator is // not affected	WITHOUT_CLASSIFICATION	0.9999999753215704	WITHOUT_CLASSIFICATION	2.4678429625349905E-8	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999926864176587	WITHOUT_CLASSIFICATION	7.313582341231582E-6	DEFECT
// the clone contains a reference to the original object	WITHOUT_CLASSIFICATION	0.9999956750695295	WITHOUT_CLASSIFICATION	4.324930470495423E-6	DEFECT
// the clone contains a reference to the original object	WITHOUT_CLASSIFICATION	0.9999956750695295	WITHOUT_CLASSIFICATION	4.324930470495423E-6	DEFECT
// CASE 2 - object is mutable AND PublicCloneable	WITHOUT_CLASSIFICATION	0.9999991139731914	WITHOUT_CLASSIFICATION	8.860268086550522E-7	DEFECT
// CASE 2 - object is mutable AND PublicCloneable	WITHOUT_CLASSIFICATION	0.9999991139731914	WITHOUT_CLASSIFICATION	8.860268086550522E-7	DEFECT
// the clone contains a reference to a CLONE of the original object	WITHOUT_CLASSIFICATION	0.9999991925108412	WITHOUT_CLASSIFICATION	8.07489158784959E-7	DEFECT
// check that clone is independent of the original	WITHOUT_CLASSIFICATION	0.9999999648840809	WITHOUT_CLASSIFICATION	3.511591901700239E-8	DEFECT
// check sorted rows	WITHOUT_CLASSIFICATION	0.999999664739172	WITHOUT_CLASSIFICATION	3.352608279147004E-7	DEFECT
// check for unknown column	WITHOUT_CLASSIFICATION	0.9999994723316572	WITHOUT_CLASSIFICATION	5.276683427710419E-7	DEFECT
// try null key	WITHOUT_CLASSIFICATION	0.9999966703305484	WITHOUT_CLASSIFICATION	3.329669451720502E-6	DEFECT
// try null key	WITHOUT_CLASSIFICATION	0.9999966703305484	WITHOUT_CLASSIFICATION	3.329669451720502E-6	DEFECT
/*v =*/	WITHOUT_CLASSIFICATION	0.9999078452736397	WITHOUT_CLASSIFICATION	9.21547263601601E-5	DEFECT
// confirm that the clone is independent of the original	WITHOUT_CLASSIFICATION	0.9999997617442132	WITHOUT_CLASSIFICATION	2.3825578670926058E-7	DEFECT
// check null argument 1	WITHOUT_CLASSIFICATION	0.9999999925088171	WITHOUT_CLASSIFICATION	7.49118293348681E-9	DEFECT
/* ComparableObjectItem item1 = */	WITHOUT_CLASSIFICATION	0.9999995382465728	WITHOUT_CLASSIFICATION	4.617534270929338E-7	DEFECT
// check key order	WITHOUT_CLASSIFICATION	0.9999996843814871	WITHOUT_CLASSIFICATION	3.156185129084676E-7	DEFECT
// check retrieve value by index	WITHOUT_CLASSIFICATION	0.9999974678476009	WITHOUT_CLASSIFICATION	2.5321523991501873E-6	DEFECT
// retrieve an item	WITHOUT_CLASSIFICATION	0.9999998907562869	WITHOUT_CLASSIFICATION	1.0924371303620932E-7	DEFECT
// request with a negative index	WITHOUT_CLASSIFICATION	0.9999876041041394	WITHOUT_CLASSIFICATION	1.2395895860640917E-5	DEFECT
// request with a negative index	WITHOUT_CLASSIFICATION	0.9999876041041394	WITHOUT_CLASSIFICATION	1.2395895860640917E-5	DEFECT
// request width index == itemCount	WITHOUT_CLASSIFICATION	0.9999972016816967	WITHOUT_CLASSIFICATION	2.798318303376891E-6	DEFECT
// check null argument	WITHOUT_CLASSIFICATION	0.9999999886919926	WITHOUT_CLASSIFICATION	1.1308007477985743E-8	DEFECT
// replace an existing value	WITHOUT_CLASSIFICATION	0.9999998511066572	WITHOUT_CLASSIFICATION	1.488933428036345E-7	DEFECT
// try a null key - should throw an exception	WITHOUT_CLASSIFICATION	0.9998217790237323	WITHOUT_CLASSIFICATION	1.7822097626781394E-4	DEFECT
// try unknown key	WITHOUT_CLASSIFICATION	0.9999766212789302	WITHOUT_CLASSIFICATION	2.3378721069755814E-5	DEFECT
// try negative key index	WITHOUT_CLASSIFICATION	0.9999854562571422	WITHOUT_CLASSIFICATION	1.4543742857716233E-5	DEFECT
// try key index == itemCount	WITHOUT_CLASSIFICATION	0.9999981545481921	WITHOUT_CLASSIFICATION	1.8454518079785729E-6	DEFECT
/*Range r2 =*/	WITHOUT_CLASSIFICATION	0.9999475814155034	WITHOUT_CLASSIFICATION	5.2418584496653286E-5	DEFECT
// Expand by 0% does not change the range	WITHOUT_CLASSIFICATION	0.9999903195519373	WITHOUT_CLASSIFICATION	9.680448062716604E-6	DEFECT
// Lower > upper: mid point is used	WITHOUT_CLASSIFICATION	0.9999893759155198	WITHOUT_CLASSIFICATION	1.0624084480061105E-5	DEFECT
// Shifting with a delta of 0 does not change the range	WITHOUT_CLASSIFICATION	0.9999998126549662	WITHOUT_CLASSIFICATION	1.8734503384900026E-7	DEFECT
// Scaling with a factor of 1 does not change the range	WITHOUT_CLASSIFICATION	0.9999988552353477	WITHOUT_CLASSIFICATION	1.1447646522459186E-6	DEFECT
/*s1 = */	WITHOUT_CLASSIFICATION	0.9999927581993884	WITHOUT_CLASSIFICATION	7.241800611664814E-6	DEFECT
// key	WITHOUT_CLASSIFICATION	0.9999911385033268	WITHOUT_CLASSIFICATION	8.861496673360714E-6	DEFECT
// autoSort	WITHOUT_CLASSIFICATION	0.9999993153046761	WITHOUT_CLASSIFICATION	6.846953239005424E-7	DEFECT
// add a value	WITHOUT_CLASSIFICATION	0.9999993962359933	WITHOUT_CLASSIFICATION	6.037640066513258E-7	DEFECT
// add another value	WITHOUT_CLASSIFICATION	0.9999996545114539	WITHOUT_CLASSIFICATION	3.454885461400232E-7	DEFECT
// remove an item	WITHOUT_CLASSIFICATION	0.9999981941036461	WITHOUT_CLASSIFICATION	1.8058963539294532E-6	DEFECT
// map a key to a new group	WITHOUT_CLASSIFICATION	0.9999980438670856	WITHOUT_CLASSIFICATION	1.9561329143563205E-6	DEFECT
// clear a mapping	WITHOUT_CLASSIFICATION	0.9999683465380574	WITHOUT_CLASSIFICATION	3.1653461942440114E-5	DEFECT
// check handling of null key	WITHOUT_CLASSIFICATION	0.999999911346767	WITHOUT_CLASSIFICATION	8.865323300027431E-8	DEFECT
// a new map always has 1 group (the default group)	WITHOUT_CLASSIFICATION	0.9999997807578889	WITHOUT_CLASSIFICATION	2.1924211111677673E-7	DEFECT
// now overwrite group "G2"...	WITHOUT_CLASSIFICATION	0.9999975000367283	WITHOUT_CLASSIFICATION	2.499963271642496E-6	DEFECT
// if there is an explicit mapping to the default group, it is counted	WITHOUT_CLASSIFICATION	0.9999999068809087	WITHOUT_CLASSIFICATION	9.31190912839769E-8	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999995722400108	WITHOUT_CLASSIFICATION	4.2775998929434456E-7	DEFECT
// confirm that the clone is independent of the original	WITHOUT_CLASSIFICATION	0.9999997617442132	WITHOUT_CLASSIFICATION	2.3825578670926058E-7	DEFECT
// check key order	WITHOUT_CLASSIFICATION	0.9999996843814871	WITHOUT_CLASSIFICATION	3.156185129084676E-7	DEFECT
// check key order	WITHOUT_CLASSIFICATION	0.9999996843814871	WITHOUT_CLASSIFICATION	3.156185129084676E-7	DEFECT
// check retrieve value by key	WITHOUT_CLASSIFICATION	0.9999999830509825	WITHOUT_CLASSIFICATION	1.694901746926687E-8	DEFECT
// check retrieve value by key	WITHOUT_CLASSIFICATION	0.9999999830509825	WITHOUT_CLASSIFICATION	1.694901746926687E-8	DEFECT
// check retrieve value by key	WITHOUT_CLASSIFICATION	0.9999999830509825	WITHOUT_CLASSIFICATION	1.694901746926687E-8	DEFECT
// check retrieve value by key	WITHOUT_CLASSIFICATION	0.9999999830509825	WITHOUT_CLASSIFICATION	1.694901746926687E-8	DEFECT
// check retrieve value by index	WITHOUT_CLASSIFICATION	0.9999974678476009	WITHOUT_CLASSIFICATION	2.5321523991501873E-6	DEFECT
// check retrieve value by index	WITHOUT_CLASSIFICATION	0.9999974678476009	WITHOUT_CLASSIFICATION	2.5321523991501873E-6	DEFECT
// check retrieve value by index	WITHOUT_CLASSIFICATION	0.9999974678476009	WITHOUT_CLASSIFICATION	2.5321523991501873E-6	DEFECT
// check retrieve value by index	WITHOUT_CLASSIFICATION	0.9999974678476009	WITHOUT_CLASSIFICATION	2.5321523991501873E-6	DEFECT
// now overwrite group "G2"...	WITHOUT_CLASSIFICATION	0.9999975000367283	WITHOUT_CLASSIFICATION	2.499963271642496E-6	DEFECT
// if the default group is not mapped to, it should still count towards // the group count...	WITHOUT_CLASSIFICATION	0.997054829189847	WITHOUT_CLASSIFICATION	0.002945170810153036	DEFECT
// now when the default group is mapped to, it shouldn't increase the // group count...	WITHOUT_CLASSIFICATION	0.9993164575992827	WITHOUT_CLASSIFICATION	6.835424007172622E-4	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999926864176587	WITHOUT_CLASSIFICATION	7.313582341231582E-6	DEFECT
// the default group is always at index 0	WITHOUT_CLASSIFICATION	0.9999856523859636	WITHOUT_CLASSIFICATION	1.4347614036390766E-5	DEFECT
// a non-existent group should return -1	WITHOUT_CLASSIFICATION	0.9999990172608315	WITHOUT_CLASSIFICATION	9.827391684472604E-7	DEFECT
// indices are assigned in the order that groups are originally mapped	WITHOUT_CLASSIFICATION	0.9999620189328999	WITHOUT_CLASSIFICATION	3.7981067099987575E-5	DEFECT
// a key that hasn't been mapped should return the default group	WITHOUT_CLASSIFICATION	0.9999949409403281	WITHOUT_CLASSIFICATION	5.05905967190907E-6	DEFECT
// a null argument should throw an exception	WITHOUT_CLASSIFICATION	0.9999888430936565	WITHOUT_CLASSIFICATION	1.1156906343459147E-5	DEFECT
// a small check for independence	WITHOUT_CLASSIFICATION	0.9999997644123371	WITHOUT_CLASSIFICATION	2.3558766293428734E-7	DEFECT
// check invalid indices	WITHOUT_CLASSIFICATION	0.9999998984667071	WITHOUT_CLASSIFICATION	1.015332928280473E-7	DEFECT
// check invalid indices	WITHOUT_CLASSIFICATION	0.9999998984667071	WITHOUT_CLASSIFICATION	1.015332928280473E-7	DEFECT
// confirm overwriting an existing value	WITHOUT_CLASSIFICATION	0.9999997570371918	WITHOUT_CLASSIFICATION	2.4296280826851333E-7	DEFECT
// try null keys	WITHOUT_CLASSIFICATION	0.9999975743762216	WITHOUT_CLASSIFICATION	2.425623778392226E-6	DEFECT
// try negative row index	WITHOUT_CLASSIFICATION	0.9999026320120282	WITHOUT_CLASSIFICATION	9.736798797178781E-5	DEFECT
// try row index too high	WITHOUT_CLASSIFICATION	0.9999601456071727	WITHOUT_CLASSIFICATION	3.9854392827321536E-5	DEFECT
// try negative column index	WITHOUT_CLASSIFICATION	0.9999838619103918	WITHOUT_CLASSIFICATION	1.6138089608212896E-5	DEFECT
// try column index too high	WITHOUT_CLASSIFICATION	0.9999909743410988	WITHOUT_CLASSIFICATION	9.02565890105014E-6	DEFECT
// try unknown row key	WITHOUT_CLASSIFICATION	0.9999747480343126	WITHOUT_CLASSIFICATION	2.525196568735197E-5	DEFECT
// try null row key	WITHOUT_CLASSIFICATION	0.9999901983633274	WITHOUT_CLASSIFICATION	9.80163667271758E-6	DEFECT
// try unknown column key	WITHOUT_CLASSIFICATION	0.999996184816361	WITHOUT_CLASSIFICATION	3.815183638983103E-6	DEFECT
// try null column key	WITHOUT_CLASSIFICATION	0.999999102881597	WITHOUT_CLASSIFICATION	8.971184030829016E-7	DEFECT
/* Comparable k = */	WITHOUT_CLASSIFICATION	0.9999998212726919	WITHOUT_CLASSIFICATION	1.7872730800021617E-7	DEFECT
/* Comparable k = */	WITHOUT_CLASSIFICATION	0.9999998212726919	WITHOUT_CLASSIFICATION	1.7872730800021617E-7	DEFECT
// try null	WITHOUT_CLASSIFICATION	0.9999879615219981	WITHOUT_CLASSIFICATION	1.2038478001829942E-5	DEFECT
// it's OK to use an index equal to the size of the list	WITHOUT_CLASSIFICATION	0.9999999814567662	WITHOUT_CLASSIFICATION	1.8543233738295676E-8	DEFECT
// try replacing an existing value	WITHOUT_CLASSIFICATION	0.9999995304598771	WITHOUT_CLASSIFICATION	4.6954012289908527E-7	DEFECT
// basic check for independence	WITHOUT_CLASSIFICATION	0.9999999919902651	WITHOUT_CLASSIFICATION	8.009734868512009E-9	DEFECT
// basic check for independence	WITHOUT_CLASSIFICATION	0.9999999919902651	WITHOUT_CLASSIFICATION	8.009734868512009E-9	DEFECT
// try a null source	WITHOUT_CLASSIFICATION	0.9999995145489414	WITHOUT_CLASSIFICATION	4.854510586840362E-7	DEFECT
// check negative index throws exception	WITHOUT_CLASSIFICATION	0.9999963879682053	WITHOUT_CLASSIFICATION	3.6120317946077824E-6	DEFECT
// check negative index throws exception	WITHOUT_CLASSIFICATION	0.9999963879682053	WITHOUT_CLASSIFICATION	3.6120317946077824E-6	DEFECT
// this is expected	WITHOUT_CLASSIFICATION	0.999978440153568	WITHOUT_CLASSIFICATION	2.1559846432030844E-5	DEFECT
// this is expected	WITHOUT_CLASSIFICATION	0.999978440153568	WITHOUT_CLASSIFICATION	2.1559846432030844E-5	DEFECT
// this is expected	WITHOUT_CLASSIFICATION	0.999978440153568	WITHOUT_CLASSIFICATION	2.1559846432030844E-5	DEFECT
// check index == getItemCount() throws exception	WITHOUT_CLASSIFICATION	0.9999981602866769	WITHOUT_CLASSIFICATION	1.8397133230459305E-6	DEFECT
// test null source	WITHOUT_CLASSIFICATION	0.9999997974029011	WITHOUT_CLASSIFICATION	2.0259709886478515E-7	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999926864176587	WITHOUT_CLASSIFICATION	7.313582341231582E-6	DEFECT
// an empty dataset should return a null range	WITHOUT_CLASSIFICATION	0.9999999240175969	WITHOUT_CLASSIFICATION	7.598240316677676E-8	DEFECT
/* Number n = */	WITHOUT_CLASSIFICATION	0.9999966825110397	WITHOUT_CLASSIFICATION	3.317488960373301E-6	DEFECT
/* Number n = */	WITHOUT_CLASSIFICATION	0.9999966825110397	WITHOUT_CLASSIFICATION	3.317488960373301E-6	DEFECT
// try null	WITHOUT_CLASSIFICATION	0.9999879615219981	WITHOUT_CLASSIFICATION	1.2038478001829942E-5	DEFECT
// basic check for independence	WITHOUT_CLASSIFICATION	0.9999999919902651	WITHOUT_CLASSIFICATION	8.009734868512009E-9	DEFECT
// basic check for independence	WITHOUT_CLASSIFICATION	0.9999999919902651	WITHOUT_CLASSIFICATION	8.009734868512009E-9	DEFECT
// this is expected	WITHOUT_CLASSIFICATION	0.999978440153568	WITHOUT_CLASSIFICATION	2.1559846432030844E-5	DEFECT
// this is expected	WITHOUT_CLASSIFICATION	0.999978440153568	WITHOUT_CLASSIFICATION	2.1559846432030844E-5	DEFECT
// this is expected	WITHOUT_CLASSIFICATION	0.999978440153568	WITHOUT_CLASSIFICATION	2.1559846432030844E-5	DEFECT
// check index == getItemCount() throws exception	WITHOUT_CLASSIFICATION	0.9999981602866769	WITHOUT_CLASSIFICATION	1.8397133230459305E-6	DEFECT
// test null source	WITHOUT_CLASSIFICATION	0.9999997974029011	WITHOUT_CLASSIFICATION	2.0259709886478515E-7	DEFECT
// another item	WITHOUT_CLASSIFICATION	0.9999999366275859	WITHOUT_CLASSIFICATION	6.337241405894926E-8	DEFECT
/* Number n =*/	WITHOUT_CLASSIFICATION	0.9999822480353864	WITHOUT_CLASSIFICATION	1.775196461353419E-5	DEFECT
// increment a null value	WITHOUT_CLASSIFICATION	0.9999998979351037	WITHOUT_CLASSIFICATION	1.0206489635735369E-7	DEFECT
// increment an unknown row	WITHOUT_CLASSIFICATION	0.9999950143328418	WITHOUT_CLASSIFICATION	4.985667158263878E-6	DEFECT
// increment an unknown column	WITHOUT_CLASSIFICATION	0.9999978175847403	WITHOUT_CLASSIFICATION	2.1824152596779593E-6	DEFECT
// a row of all null values is still counted...	WITHOUT_CLASSIFICATION	0.9995003626239882	WITHOUT_CLASSIFICATION	4.996373760117141E-4	DEFECT
// a column of all null values is still counted...	WITHOUT_CLASSIFICATION	0.9999278620812508	WITHOUT_CLASSIFICATION	7.213791874925636E-5	DEFECT
// try a dataset with some content...	WITHOUT_CLASSIFICATION	0.9998186013503234	WITHOUT_CLASSIFICATION	1.8139864967664358E-4	DEFECT
// check that the clone doesn't share the same underlying arrays.	WITHOUT_CLASSIFICATION	0.9999969311092062	WITHOUT_CLASSIFICATION	3.068890793712408E-6	DEFECT
// check that the clone doesn't share the same underlying arrays.	WITHOUT_CLASSIFICATION	0.9999969311092062	WITHOUT_CLASSIFICATION	3.068890793712408E-6	DEFECT
// check that two empty datasets are equal	WITHOUT_CLASSIFICATION	0.9999999454084298	WITHOUT_CLASSIFICATION	5.459157002367948E-8	DEFECT
// check an empty dataset	WITHOUT_CLASSIFICATION	0.99999998226837	WITHOUT_CLASSIFICATION	1.773163010175953E-8	DEFECT
// check an empty dataset	WITHOUT_CLASSIFICATION	0.99999998226837	WITHOUT_CLASSIFICATION	1.773163010175953E-8	DEFECT
// make sure that modifying the returned array doesn't change the // function	WITHOUT_CLASSIFICATION	0.9999998307808067	WITHOUT_CLASSIFICATION	1.6921919319258749E-7	DEFECT
// note that we don't define taskB1	WITHOUT_CLASSIFICATION	0.9999992071104082	WITHOUT_CLASSIFICATION	7.928895918789513E-7	DEFECT
// define subtasks	WITHOUT_CLASSIFICATION	0.9999994749955982	WITHOUT_CLASSIFICATION	5.250044019507736E-7	DEFECT
/* Number start = */	WITHOUT_CLASSIFICATION	0.9999996463393493	WITHOUT_CLASSIFICATION	3.536606507152931E-7	DEFECT
// test collection 3, which doesn't define all tasks in all series	WITHOUT_CLASSIFICATION	0.9999998873900824	WITHOUT_CLASSIFICATION	1.1260991760959892E-7	DEFECT
// test collection 3, which doesn't define all tasks in all series	WITHOUT_CLASSIFICATION	0.9999998873900824	WITHOUT_CLASSIFICATION	1.1260991760959892E-7	DEFECT
// test collection 3, which doesn't define all tasks in all series	WITHOUT_CLASSIFICATION	0.9999998873900824	WITHOUT_CLASSIFICATION	1.1260991760959892E-7	DEFECT
/* int count = */	WITHOUT_CLASSIFICATION	0.9999889179410817	WITHOUT_CLASSIFICATION	1.1082058918286521E-5	DEFECT
/* Number end = */	WITHOUT_CLASSIFICATION	0.9999948154529057	WITHOUT_CLASSIFICATION	5.1845470943411205E-6	DEFECT
// try a single item	WITHOUT_CLASSIFICATION	0.999999317021348	WITHOUT_CLASSIFICATION	6.82978651924698E-7	DEFECT
// simple check for independence	WITHOUT_CLASSIFICATION	0.9999999603682684	WITHOUT_CLASSIFICATION	3.963173158825829E-8	DEFECT
// what if we don't want the interval?	WITHOUT_CLASSIFICATION	0.9999984928773095	WITHOUT_CLASSIFICATION	1.507122690653861E-6	DEFECT
// an item in series 2	WITHOUT_CLASSIFICATION	0.9999999089179755	WITHOUT_CLASSIFICATION	9.108202440491758E-8	DEFECT
// another empty series	WITHOUT_CLASSIFICATION	0.999999952925321	WITHOUT_CLASSIFICATION	4.7074679146301784E-8	DEFECT
// a dataset with a single value	WITHOUT_CLASSIFICATION	0.9999991118339149	WITHOUT_CLASSIFICATION	8.881660851444647E-7	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999926864176587	WITHOUT_CLASSIFICATION	7.313582341231582E-6	DEFECT
// a dataset with a single value	WITHOUT_CLASSIFICATION	0.9999991118339149	WITHOUT_CLASSIFICATION	8.881660851444647E-7	DEFECT
// null is ignored	WITHOUT_CLASSIFICATION	0.99999912566809	WITHOUT_CLASSIFICATION	8.743319099110005E-7	DEFECT
// a Double.NaN should be ignored	WITHOUT_CLASSIFICATION	0.9999996487724527	WITHOUT_CLASSIFICATION	3.512275472770274E-7	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999926864176587	WITHOUT_CLASSIFICATION	7.313582341231582E-6	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999926864176587	WITHOUT_CLASSIFICATION	7.313582341231582E-6	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999926864176587	WITHOUT_CLASSIFICATION	7.313582341231582E-6	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999926864176587	WITHOUT_CLASSIFICATION	7.313582341231582E-6	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999926864176587	WITHOUT_CLASSIFICATION	7.313582341231582E-6	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999995722400108	WITHOUT_CLASSIFICATION	4.2775998929434456E-7	DEFECT
// try null argument	WITHOUT_CLASSIFICATION	0.9999994343068485	WITHOUT_CLASSIFICATION	5.656931515142066E-7	DEFECT
// try null argument	WITHOUT_CLASSIFICATION	0.9999994343068485	WITHOUT_CLASSIFICATION	5.656931515142066E-7	DEFECT
// check that clone is independent of the original	WITHOUT_CLASSIFICATION	0.9999999648840809	WITHOUT_CLASSIFICATION	3.511591901700239E-8	DEFECT
/* Number n =*/	WITHOUT_CLASSIFICATION	0.9999822480353864	WITHOUT_CLASSIFICATION	1.775196461353419E-5	DEFECT
// try a dataset with some content...	WITHOUT_CLASSIFICATION	0.9998186013503234	WITHOUT_CLASSIFICATION	1.8139864967664358E-4	DEFECT
// check that the clone doesn't share the same underlying arrays.	WITHOUT_CLASSIFICATION	0.9999969311092062	WITHOUT_CLASSIFICATION	3.068890793712408E-6	DEFECT
// simple check for independence	WITHOUT_CLASSIFICATION	0.9999999603682684	WITHOUT_CLASSIFICATION	3.963173158825829E-8	DEFECT
// simple check for independence	WITHOUT_CLASSIFICATION	0.9999999603682684	WITHOUT_CLASSIFICATION	3.963173158825829E-8	DEFECT
// try a single item	WITHOUT_CLASSIFICATION	0.999999317021348	WITHOUT_CLASSIFICATION	6.82978651924698E-7	DEFECT
// another item	WITHOUT_CLASSIFICATION	0.9999999366275859	WITHOUT_CLASSIFICATION	6.337241405894926E-8	DEFECT
// another empty series	WITHOUT_CLASSIFICATION	0.999999952925321	WITHOUT_CLASSIFICATION	4.7074679146301784E-8	DEFECT
// an item in series 2	WITHOUT_CLASSIFICATION	0.9999999089179755	WITHOUT_CLASSIFICATION	9.108202440491758E-8	DEFECT
// Double.NaN DOESN'T mess things up	WITHOUT_CLASSIFICATION	0.999999285838569	WITHOUT_CLASSIFICATION	7.141614309935045E-7	DEFECT
// got it!	WITHOUT_CLASSIFICATION	0.9995130858422869	WITHOUT_CLASSIFICATION	4.869141577129698E-4	DEFECT
// check that empty dataset is handled OK	WITHOUT_CLASSIFICATION	0.9999999898926851	WITHOUT_CLASSIFICATION	1.0107314873110225E-8	DEFECT
// and that simple aggregation works	WITHOUT_CLASSIFICATION	0.9999286805116161	WITHOUT_CLASSIFICATION	7.1319488383878E-5	DEFECT
// an empty dataset should return a null max	WITHOUT_CLASSIFICATION	0.9999994067505628	WITHOUT_CLASSIFICATION	5.932494371170736E-7	DEFECT
// an empty dataset should return a null max	WITHOUT_CLASSIFICATION	0.9999994067505628	WITHOUT_CLASSIFICATION	5.932494371170736E-7	DEFECT
// null dataset throws IllegalArgumentException	WITHOUT_CLASSIFICATION	0.9999985510812189	WITHOUT_CLASSIFICATION	1.448918780998827E-6	DEFECT
// null list throws IllegalArgumentException	WITHOUT_CLASSIFICATION	0.9999994119786642	WITHOUT_CLASSIFICATION	5.880213358106788E-7	DEFECT
// null range throws IllegalArgumentException	WITHOUT_CLASSIFICATION	0.9999996026460005	WITHOUT_CLASSIFICATION	3.9735399941904345E-7	DEFECT
// empty dataset returns null	WITHOUT_CLASSIFICATION	0.9999999317666146	WITHOUT_CLASSIFICATION	6.823338540437741E-8	DEFECT
// add an empty series	WITHOUT_CLASSIFICATION	0.9999998415868648	WITHOUT_CLASSIFICATION	1.58413135226546E-7	DEFECT
// check a null value	WITHOUT_CLASSIFICATION	0.9999999678134526	WITHOUT_CLASSIFICATION	3.218654749977343E-8	DEFECT
// check a NaN	WITHOUT_CLASSIFICATION	0.999999909907135	WITHOUT_CLASSIFICATION	9.009286497904295E-8	DEFECT
// check another regular value	WITHOUT_CLASSIFICATION	0.9999999436621584	WITHOUT_CLASSIFICATION	5.633784162973594E-8	DEFECT
// add a second series	WITHOUT_CLASSIFICATION	0.9999964912675533	WITHOUT_CLASSIFICATION	3.508732446710892E-6	DEFECT
// add a value to the second series	WITHOUT_CLASSIFICATION	0.9999967837123134	WITHOUT_CLASSIFICATION	3.2162876867291984E-6	DEFECT
// add a value that isn't in the xRange	WITHOUT_CLASSIFICATION	0.9999908930079576	WITHOUT_CLASSIFICATION	9.10699204248021E-6	DEFECT
// try some nulls	WITHOUT_CLASSIFICATION	0.999996616424177	WITHOUT_CLASSIFICATION	3.383575822879274E-6	DEFECT
// an empty dataset should return null for bounds	WITHOUT_CLASSIFICATION	0.9999997911376751	WITHOUT_CLASSIFICATION	2.0886232482377598E-7	DEFECT
// try a dataset with a single value	WITHOUT_CLASSIFICATION	0.9999962372535729	WITHOUT_CLASSIFICATION	3.7627464271929845E-6	DEFECT
// try a dataset with two values	WITHOUT_CLASSIFICATION	0.9999955183798485	WITHOUT_CLASSIFICATION	4.481620151488285E-6	DEFECT
// try a Double.NaN	WITHOUT_CLASSIFICATION	0.9999973276600722	WITHOUT_CLASSIFICATION	2.672339927730155E-6	DEFECT
// try a Double.NEGATIVE_INFINITY	WITHOUT_CLASSIFICATION	0.9999934579655922	WITHOUT_CLASSIFICATION	6.54203440768734E-6	DEFECT
// overwrite the value	WITHOUT_CLASSIFICATION	0.9999999203497723	WITHOUT_CLASSIFICATION	7.965022771116434E-8	DEFECT
// test independence	WITHOUT_CLASSIFICATION	0.9999983753556984	WITHOUT_CLASSIFICATION	1.6246443016250042E-6	DEFECT
// now overwrite this item with another	WITHOUT_CLASSIFICATION	0.9999997849224002	WITHOUT_CLASSIFICATION	2.150775997386088E-7	DEFECT
// try null list	WITHOUT_CLASSIFICATION	0.9999985346038882	WITHOUT_CLASSIFICATION	1.4653961118196384E-6	DEFECT
// try a list containing a single value	WITHOUT_CLASSIFICATION	0.9999999565147062	WITHOUT_CLASSIFICATION	4.3485293680781634E-8	DEFECT
// try null array	WITHOUT_CLASSIFICATION	0.999998629507472	WITHOUT_CLASSIFICATION	1.3704925280021282E-6	DEFECT
// try an array containing no items	WITHOUT_CLASSIFICATION	0.9999999686433351	WITHOUT_CLASSIFICATION	3.1356664903097005E-8	DEFECT
// try an array containing a single Number	WITHOUT_CLASSIFICATION	0.9999999087458317	WITHOUT_CLASSIFICATION	9.125416838865047E-8	DEFECT
// try an array containing a single Number and a null	WITHOUT_CLASSIFICATION	0.999999786400134	WITHOUT_CLASSIFICATION	2.1359986595846912E-7	DEFECT
// try an array containing a single Number and a NaN	WITHOUT_CLASSIFICATION	0.9999996816535957	WITHOUT_CLASSIFICATION	3.183464044062163E-7	DEFECT
// try a null argument	WITHOUT_CLASSIFICATION	0.9999994526864852	WITHOUT_CLASSIFICATION	5.473135149305699E-7	DEFECT
// OK	WITHOUT_CLASSIFICATION	0.9999959252826889	WITHOUT_CLASSIFICATION	4.074717311095198E-6	DEFECT
// try null argument	WITHOUT_CLASSIFICATION	0.9999994343068485	WITHOUT_CLASSIFICATION	5.656931515142066E-7	DEFECT
// test independence	WITHOUT_CLASSIFICATION	0.9999983753556984	WITHOUT_CLASSIFICATION	1.6246443016250042E-6	DEFECT
// try an empty collection	WITHOUT_CLASSIFICATION	0.9999988532095269	WITHOUT_CLASSIFICATION	1.1467904731682136E-6	DEFECT
// try a collection with a single number	WITHOUT_CLASSIFICATION	0.9999961101269098	WITHOUT_CLASSIFICATION	3.889873090231804E-6	DEFECT
// try a collection with a single number plus a NaN	WITHOUT_CLASSIFICATION	0.999994455618674	WITHOUT_CLASSIFICATION	5.544381326085141E-6	DEFECT
// try a collection with several numbers	WITHOUT_CLASSIFICATION	0.9999996230641364	WITHOUT_CLASSIFICATION	3.769358635478427E-7	DEFECT
// a Collection containing a NaN will return Double.NaN for the result	WITHOUT_CLASSIFICATION	0.9999999709398998	WITHOUT_CLASSIFICATION	2.906010014991068E-8	DEFECT
// check null list	WITHOUT_CLASSIFICATION	0.999999967417882	WITHOUT_CLASSIFICATION	3.258211794406361E-8	DEFECT
// check empty list	WITHOUT_CLASSIFICATION	0.9999999616916079	WITHOUT_CLASSIFICATION	3.830839215673834E-8	DEFECT
// check list containing null	WITHOUT_CLASSIFICATION	0.9999999987956695	WITHOUT_CLASSIFICATION	1.2043305154847407E-9	DEFECT
// try zero length array	WITHOUT_CLASSIFICATION	0.9999982489593106	WITHOUT_CLASSIFICATION	1.75104068937678E-6	DEFECT
// try single value	WITHOUT_CLASSIFICATION	0.9999994252260953	WITHOUT_CLASSIFICATION	5.74773904797211E-7	DEFECT
// locale shouldn't matter here	WITHOUT_CLASSIFICATION	0.9992444603768822	WITHOUT_CLASSIFICATION	7.555396231178924E-4	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999926864176587	WITHOUT_CLASSIFICATION	7.313582341231582E-6	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999926864176587	WITHOUT_CLASSIFICATION	7.313582341231582E-6	DEFECT
// try deleting a time period that doesn't exist...	WITHOUT_CLASSIFICATION	0.9998197106678159	WITHOUT_CLASSIFICATION	1.8028933218403975E-4	DEFECT
// try deleting null	WITHOUT_CLASSIFICATION	0.9999977455922505	WITHOUT_CLASSIFICATION	2.2544077495117545E-6	DEFECT
// copy a range before the start of the series data...	WITHOUT_CLASSIFICATION	0.9999890707222346	WITHOUT_CLASSIFICATION	1.0929277765316627E-5	DEFECT
// copy a range that includes only the first item in the series...	WITHOUT_CLASSIFICATION	0.9999974363753299	WITHOUT_CLASSIFICATION	2.5636246701461816E-6	DEFECT
// copy a range that begins before and ends in the middle of the // series...	WITHOUT_CLASSIFICATION	0.9995362364672394	WITHOUT_CLASSIFICATION	4.637635327606253E-4	DEFECT
// copy just the first item...	WITHOUT_CLASSIFICATION	0.999999919776832	WITHOUT_CLASSIFICATION	8.022316800634038E-8	DEFECT
// copy the first two items...	WITHOUT_CLASSIFICATION	0.9999976603101524	WITHOUT_CLASSIFICATION	2.339689847545376E-6	DEFECT
// copy the middle three items...	WITHOUT_CLASSIFICATION	0.9999776746297859	WITHOUT_CLASSIFICATION	2.2325370214092896E-5	DEFECT
// copy the last two items...	WITHOUT_CLASSIFICATION	0.9999872098105453	WITHOUT_CLASSIFICATION	1.2790189454798877E-5	DEFECT
// copy the last item...	WITHOUT_CLASSIFICATION	0.999995574208535	WITHOUT_CLASSIFICATION	4.42579146506065E-6	DEFECT
// check negative first argument	WITHOUT_CLASSIFICATION	0.9999999975396127	WITHOUT_CLASSIFICATION	2.4603872632147202E-9	DEFECT
/* TimeSeries result = */	WITHOUT_CLASSIFICATION	0.9999990975697652	WITHOUT_CLASSIFICATION	9.024302348059061E-7	DEFECT
/* TimeSeries result = */	WITHOUT_CLASSIFICATION	0.9999990975697652	WITHOUT_CLASSIFICATION	9.024302348059061E-7	DEFECT
// check second argument less than first argument	WITHOUT_CLASSIFICATION	0.9999993378380657	WITHOUT_CLASSIFICATION	6.621619343026959E-7	DEFECT
// changing the overwritten record shouldn't affect the series	WITHOUT_CLASSIFICATION	0.9999906091405176	WITHOUT_CLASSIFICATION	9.390859482348736E-6	DEFECT
// changing the item that was added should not change the series	WITHOUT_CLASSIFICATION	0.9999987374404117	WITHOUT_CLASSIFICATION	1.2625595882939106E-6	DEFECT
// can't get anything yet...just an exception	WITHOUT_CLASSIFICATION	0.9999638349670907	WITHOUT_CLASSIFICATION	3.616503290927364E-5	DEFECT
/*TimeSeriesDataItem item =*/	WITHOUT_CLASSIFICATION	0.9999995594526829	WITHOUT_CLASSIFICATION	4.4054731712167154E-7	DEFECT
/*item = */	WITHOUT_CLASSIFICATION	0.9999979197821333	WITHOUT_CLASSIFICATION	2.080217866867505E-6	DEFECT
/* TimeSeriesDataItem item = */	WITHOUT_CLASSIFICATION	0.9999998760561509	WITHOUT_CLASSIFICATION	1.2394384916544364E-7	DEFECT
// test empty series	WITHOUT_CLASSIFICATION	0.999999718983202	WITHOUT_CLASSIFICATION	2.8101679804799304E-7	DEFECT
// test series with one item	WITHOUT_CLASSIFICATION	0.9999993371905513	WITHOUT_CLASSIFICATION	6.628094486356312E-7	DEFECT
// test series with two items	WITHOUT_CLASSIFICATION	0.9999977761690666	WITHOUT_CLASSIFICATION	2.223830933440286E-6	DEFECT
// milliseconds somewhere in 2006	WITHOUT_CLASSIFICATION	0.9998287253825638	WITHOUT_CLASSIFICATION	1.712746174361249E-4	DEFECT
// test a series with 1 item	WITHOUT_CLASSIFICATION	0.9999996663785414	WITHOUT_CLASSIFICATION	3.3362145853154106E-7	DEFECT
// test a series with two items	WITHOUT_CLASSIFICATION	0.9999963652472471	WITHOUT_CLASSIFICATION	3.634752752998292E-6	DEFECT
// this line triggers the defect	WITHOUT_CLASSIFICATION	0.9999968648006143	WITHOUT_CLASSIFICATION	3.135199385683004E-6	DEFECT
// check that removing by index also works	WITHOUT_CLASSIFICATION	0.9987797632522802	WITHOUT_CLASSIFICATION	0.001220236747719719	DEFECT
// null items are ignored	WITHOUT_CLASSIFICATION	0.9999999947840653	WITHOUT_CLASSIFICATION	5.215934689923557E-9	DEFECT
// if there are only null items, we get a NaNRange	WITHOUT_CLASSIFICATION	0.9999999572767013	WITHOUT_CLASSIFICATION	4.272329869094939E-8	DEFECT
// locale should not matter here	WITHOUT_CLASSIFICATION	0.9989446553778056	WITHOUT_CLASSIFICATION	0.0010553446221943685	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999995722400108	WITHOUT_CLASSIFICATION	4.2775998929434456E-7	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999926864176587	WITHOUT_CLASSIFICATION	7.313582341231582E-6	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999926864176587	WITHOUT_CLASSIFICATION	7.313582341231582E-6	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999926864176587	WITHOUT_CLASSIFICATION	7.313582341231582E-6	DEFECT
// locale should not matter here	WITHOUT_CLASSIFICATION	0.9989446553778056	WITHOUT_CLASSIFICATION	0.0010553446221943685	DEFECT
// locale should not matter here	WITHOUT_CLASSIFICATION	0.9989446553778056	WITHOUT_CLASSIFICATION	0.0010553446221943685	DEFECT
// test 3...	WITHOUT_CLASSIFICATION	0.9999913100130321	WITHOUT_CLASSIFICATION	8.689986967808402E-6	DEFECT
// test 1...	WITHOUT_CLASSIFICATION	0.9999927243661514	WITHOUT_CLASSIFICATION	7.275633848633637E-6	DEFECT
// test 1...	WITHOUT_CLASSIFICATION	0.9999927243661514	WITHOUT_CLASSIFICATION	7.275633848633637E-6	DEFECT
// domain description - null	WITHOUT_CLASSIFICATION	0.99999928852965	WITHOUT_CLASSIFICATION	7.114703498491864E-7	DEFECT
// test 2...	WITHOUT_CLASSIFICATION	0.9999893604377172	WITHOUT_CLASSIFICATION	1.0639562282769146E-5	DEFECT
// a null item should throw an IllegalArgumentException	WITHOUT_CLASSIFICATION	0.9999890696467431	WITHOUT_CLASSIFICATION	1.0930353256894987E-5	DEFECT
/*Quarter q =*/	WITHOUT_CLASSIFICATION	0.9999968110529672	WITHOUT_CLASSIFICATION	3.1889470326859375E-6	DEFECT
/*Quarter q =*/	WITHOUT_CLASSIFICATION	0.9999968110529672	WITHOUT_CLASSIFICATION	3.1889470326859375E-6	DEFECT
// range description	WITHOUT_CLASSIFICATION	0.9999991814082977	WITHOUT_CLASSIFICATION	8.185917022163416E-7	DEFECT
// domain description	WITHOUT_CLASSIFICATION	0.9999991220426971	WITHOUT_CLASSIFICATION	8.779573030017051E-7	DEFECT
// check dataset with one time period	WITHOUT_CLASSIFICATION	0.999999926718462	WITHOUT_CLASSIFICATION	7.328153786834227E-8	DEFECT
// check empty dataset	WITHOUT_CLASSIFICATION	0.9999999857444777	WITHOUT_CLASSIFICATION	1.4255522423351322E-8	DEFECT
// range description - null	WITHOUT_CLASSIFICATION	0.9999992827083871	WITHOUT_CLASSIFICATION	7.172916128872709E-7	DEFECT
// check dataset with one time period	WITHOUT_CLASSIFICATION	0.999999926718462	WITHOUT_CLASSIFICATION	7.328153786834227E-8	DEFECT
// check empty dataset	WITHOUT_CLASSIFICATION	0.9999999857444777	WITHOUT_CLASSIFICATION	1.4255522423351322E-8	DEFECT
// add a fourth time period	WITHOUT_CLASSIFICATION	0.9999999589771661	WITHOUT_CLASSIFICATION	4.102283381848953E-8	DEFECT
// add a third time period	WITHOUT_CLASSIFICATION	0.9999998476452551	WITHOUT_CLASSIFICATION	1.5235474488518904E-7	DEFECT
// check dataset with two time periods	WITHOUT_CLASSIFICATION	0.9999997858038424	WITHOUT_CLASSIFICATION	2.1419615772435813E-7	DEFECT
// check dataset with two time periods	WITHOUT_CLASSIFICATION	0.9999997858038424	WITHOUT_CLASSIFICATION	2.1419615772435813E-7	DEFECT
// first day of week is Sunday	WITHOUT_CLASSIFICATION	0.9999970947207597	WITHOUT_CLASSIFICATION	2.9052792403087202E-6	DEFECT
// first day of week is monday	WITHOUT_CLASSIFICATION	0.9999948551631822	WITHOUT_CLASSIFICATION	5.144836817757829E-6	DEFECT
// try null zone	WITHOUT_CLASSIFICATION	0.9999962237095157	WITHOUT_CLASSIFICATION	3.776290484255145E-6	DEFECT
// add series to collection 1, should be not equal	WITHOUT_CLASSIFICATION	0.9999797227077056	WITHOUT_CLASSIFICATION	2.0277292294382463E-5	DEFECT
// newly created collections should be equal	WITHOUT_CLASSIFICATION	0.9999942794884669	WITHOUT_CLASSIFICATION	5.720511533091693E-6	DEFECT
// now add the same series to collection 2 to make them equal again...	WITHOUT_CLASSIFICATION	0.9999982320986887	WITHOUT_CLASSIFICATION	1.7679013114319364E-6	DEFECT
// now remove series 2 from collection 2	WITHOUT_CLASSIFICATION	0.9999222932017905	WITHOUT_CLASSIFICATION	7.770679820952053E-5	DEFECT
// now remove series 2 from collection 1 to make them equal again	WITHOUT_CLASSIFICATION	0.9999996551362857	WITHOUT_CLASSIFICATION	3.448637142584408E-7	DEFECT
// for a series with no data, we expect {-1, -1}...	WITHOUT_CLASSIFICATION	0.9999551366934316	WITHOUT_CLASSIFICATION	4.486330656834257E-5	DEFECT
// now test with a single value in the series...	WITHOUT_CLASSIFICATION	0.9999941279676083	WITHOUT_CLASSIFICATION	5.872032391711071E-6	DEFECT
// now add a second value to the series...	WITHOUT_CLASSIFICATION	0.9999079742908201	WITHOUT_CLASSIFICATION	9.20257091798507E-5	DEFECT
// now add a third value to the series...	WITHOUT_CLASSIFICATION	0.99999168318291	WITHOUT_CLASSIFICATION	8.316817090024364E-6	DEFECT
/* TimeSeries s = */	WITHOUT_CLASSIFICATION	0.9999991509238042	WITHOUT_CLASSIFICATION	8.490761958013177E-7	DEFECT
// correct outcome	WITHOUT_CLASSIFICATION	0.9998925601314292	WITHOUT_CLASSIFICATION	1.0743986857079202E-4	DEFECT
// wrong outcome	WITHOUT_CLASSIFICATION	0.9998150741098469	WITHOUT_CLASSIFICATION	1.849258901530524E-4	DEFECT
// store the current time zone	WITHOUT_CLASSIFICATION	0.9999999600944084	WITHOUT_CLASSIFICATION	3.990559164003889E-8	DEFECT
// restore the default time zone	WITHOUT_CLASSIFICATION	0.9999999889897888	WITHOUT_CLASSIFICATION	1.1010211187570149E-8	DEFECT
// when the dataset contains no series, we expect the range to be null	WITHOUT_CLASSIFICATION	0.9999998432406957	WITHOUT_CLASSIFICATION	1.5675930422511076E-7	DEFECT
// tests with values	WITHOUT_CLASSIFICATION	0.9999988604283632	WITHOUT_CLASSIFICATION	1.1395716368332916E-6	DEFECT
// adding a second series	WITHOUT_CLASSIFICATION	0.999992975312555	WITHOUT_CLASSIFICATION	7.024687445024173E-6	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999995722400108	WITHOUT_CLASSIFICATION	4.2775998929434456E-7	DEFECT
// x	WITHOUT_CLASSIFICATION	0.9999752829084022	WITHOUT_CLASSIFICATION	2.4717091597762782E-5	DEFECT
// y	WITHOUT_CLASSIFICATION	0.9999750051039826	WITHOUT_CLASSIFICATION	2.4994896017342443E-5	DEFECT
// period	WITHOUT_CLASSIFICATION	0.9999941563062175	WITHOUT_CLASSIFICATION	5.843693782551462E-6	DEFECT
// autoSort	WITHOUT_CLASSIFICATION	0.9999993153046761	WITHOUT_CLASSIFICATION	6.846953239005424E-7	DEFECT
// autoSort	WITHOUT_CLASSIFICATION	0.9999993153046761	WITHOUT_CLASSIFICATION	6.846953239005424E-7	DEFECT
// add a value	WITHOUT_CLASSIFICATION	0.9999993962359933	WITHOUT_CLASSIFICATION	6.037640066513258E-7	DEFECT
// add a value	WITHOUT_CLASSIFICATION	0.9999993962359933	WITHOUT_CLASSIFICATION	6.037640066513258E-7	DEFECT
// add another value	WITHOUT_CLASSIFICATION	0.9999996545114539	WITHOUT_CLASSIFICATION	3.454885461400232E-7	DEFECT
// add another value	WITHOUT_CLASSIFICATION	0.9999996545114539	WITHOUT_CLASSIFICATION	3.454885461400232E-7	DEFECT
// try a dataset with some content...	WITHOUT_CLASSIFICATION	0.9998186013503234	WITHOUT_CLASSIFICATION	1.8139864967664358E-4	DEFECT
// try a dataset with some content...	WITHOUT_CLASSIFICATION	0.9998186013503234	WITHOUT_CLASSIFICATION	1.8139864967664358E-4	DEFECT
// add an empty series	WITHOUT_CLASSIFICATION	0.9999998415868648	WITHOUT_CLASSIFICATION	1.58413135226546E-7	DEFECT
// locale shouldn't matter here	WITHOUT_CLASSIFICATION	0.9992444603768822	WITHOUT_CLASSIFICATION	7.555396231178924E-4	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999926864176587	WITHOUT_CLASSIFICATION	7.313582341231582E-6	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999926864176587	WITHOUT_CLASSIFICATION	7.313582341231582E-6	DEFECT
// locale should not matter here	WITHOUT_CLASSIFICATION	0.9989446553778056	WITHOUT_CLASSIFICATION	0.0010553446221943685	DEFECT
// locale should not matter here	WITHOUT_CLASSIFICATION	0.9989446553778056	WITHOUT_CLASSIFICATION	0.0010553446221943685	DEFECT
// test 1...	WITHOUT_CLASSIFICATION	0.9999927243661514	WITHOUT_CLASSIFICATION	7.275633848633637E-6	DEFECT
// test 1...	WITHOUT_CLASSIFICATION	0.9999927243661514	WITHOUT_CLASSIFICATION	7.275633848633637E-6	DEFECT
// test 1...	WITHOUT_CLASSIFICATION	0.9999927243661514	WITHOUT_CLASSIFICATION	7.275633848633637E-6	DEFECT
// test 2...	WITHOUT_CLASSIFICATION	0.9999893604377172	WITHOUT_CLASSIFICATION	1.0639562282769146E-5	DEFECT
// test 2...	WITHOUT_CLASSIFICATION	0.9999893604377172	WITHOUT_CLASSIFICATION	1.0639562282769146E-5	DEFECT
// test 2...	WITHOUT_CLASSIFICATION	0.9999893604377172	WITHOUT_CLASSIFICATION	1.0639562282769146E-5	DEFECT
// test 3...	WITHOUT_CLASSIFICATION	0.9999913100130321	WITHOUT_CLASSIFICATION	8.689986967808402E-6	DEFECT
// test 3...	WITHOUT_CLASSIFICATION	0.9999913100130321	WITHOUT_CLASSIFICATION	8.689986967808402E-6	DEFECT
// correct outcome	WITHOUT_CLASSIFICATION	0.9998925601314292	WITHOUT_CLASSIFICATION	1.0743986857079202E-4	DEFECT
// wrong outcome	WITHOUT_CLASSIFICATION	0.9998150741098469	WITHOUT_CLASSIFICATION	1.849258901530524E-4	DEFECT
// now test that the clone is independent of the original	WITHOUT_CLASSIFICATION	0.9999999531334455	WITHOUT_CLASSIFICATION	4.686655455811721E-8	DEFECT
// Make sure there's nothing left	WITHOUT_CLASSIFICATION	0.9999992222919011	WITHOUT_CLASSIFICATION	7.77708098871643E-7	DEFECT
// seriesKey	WITHOUT_CLASSIFICATION	0.9999986849784478	WITHOUT_CLASSIFICATION	1.3150215522808288E-6	DEFECT
// seriesKey	WITHOUT_CLASSIFICATION	0.9999986849784478	WITHOUT_CLASSIFICATION	1.3150215522808288E-6	DEFECT
// the moving average series has 7 items, the first three // days (11, 12, 13 August are skipped)	WITHOUT_CLASSIFICATION	0.999986815602906	WITHOUT_CLASSIFICATION	1.318439709402246E-5	DEFECT
// add a series	WITHOUT_CLASSIFICATION	0.999999210461475	WITHOUT_CLASSIFICATION	7.895385249747859E-7	DEFECT
// seriesKey	WITHOUT_CLASSIFICATION	0.9999986849784478	WITHOUT_CLASSIFICATION	1.3150215522808288E-6	DEFECT
/* XYSeries s = */	WITHOUT_CLASSIFICATION	0.9999847899096022	WITHOUT_CLASSIFICATION	1.5210090397787487E-5	DEFECT
// remove a value	WITHOUT_CLASSIFICATION	0.9999974348824494	WITHOUT_CLASSIFICATION	2.565117550653058E-6	DEFECT
// remove a value	WITHOUT_CLASSIFICATION	0.9999974348824494	WITHOUT_CLASSIFICATION	2.565117550653058E-6	DEFECT
// remove a value	WITHOUT_CLASSIFICATION	0.9999974348824494	WITHOUT_CLASSIFICATION	2.565117550653058E-6	DEFECT
// and check the first series too...	WITHOUT_CLASSIFICATION	0.9999997331851145	WITHOUT_CLASSIFICATION	2.668148855783886E-7	DEFECT
// now add another series	WITHOUT_CLASSIFICATION	0.9999996516702635	WITHOUT_CLASSIFICATION	3.483297364605101E-7	DEFECT
/*Comparable k =*/	WITHOUT_CLASSIFICATION	0.9999989930064759	WITHOUT_CLASSIFICATION	1.006993524104296E-6	DEFECT
// yLow	WITHOUT_CLASSIFICATION	0.9999553377065041	WITHOUT_CLASSIFICATION	4.466229349583974E-5	DEFECT
// allowDuplicateValues	WITHOUT_CLASSIFICATION	0.9999999703915486	WITHOUT_CLASSIFICATION	2.960845131312374E-8	DEFECT
// allowDuplicateValues	WITHOUT_CLASSIFICATION	0.9999999703915486	WITHOUT_CLASSIFICATION	2.960845131312374E-8	DEFECT
// check for series key out of bounds	WITHOUT_CLASSIFICATION	0.9999992090358577	WITHOUT_CLASSIFICATION	7.90964142354626E-7	DEFECT
// yHigh	WITHOUT_CLASSIFICATION	0.9999696247101632	WITHOUT_CLASSIFICATION	3.0375289836869863E-5	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999995722400108	WITHOUT_CLASSIFICATION	4.2775998929434456E-7	DEFECT
// x	WITHOUT_CLASSIFICATION	0.9999752829084022	WITHOUT_CLASSIFICATION	2.4717091597762782E-5	DEFECT
// y	WITHOUT_CLASSIFICATION	0.9999750051039826	WITHOUT_CLASSIFICATION	2.4994896017342443E-5	DEFECT
// default instances	WITHOUT_CLASSIFICATION	0.9999995238502002	WITHOUT_CLASSIFICATION	4.76149799844827E-7	DEFECT
// default instances	WITHOUT_CLASSIFICATION	0.9999995238502002	WITHOUT_CLASSIFICATION	4.76149799844827E-7	DEFECT
// autoSort	WITHOUT_CLASSIFICATION	0.9999993153046761	WITHOUT_CLASSIFICATION	6.846953239005424E-7	DEFECT
// add a value	WITHOUT_CLASSIFICATION	0.9999993962359933	WITHOUT_CLASSIFICATION	6.037640066513258E-7	DEFECT
// add another value	WITHOUT_CLASSIFICATION	0.9999996545114539	WITHOUT_CLASSIFICATION	3.454885461400232E-7	DEFECT
// try a dataset with some content...	WITHOUT_CLASSIFICATION	0.9998186013503234	WITHOUT_CLASSIFICATION	1.8139864967664358E-4	DEFECT
// try a dataset with some content...	WITHOUT_CLASSIFICATION	0.9998186013503234	WITHOUT_CLASSIFICATION	1.8139864967664358E-4	DEFECT
// try a dataset with some content...	WITHOUT_CLASSIFICATION	0.9998186013503234	WITHOUT_CLASSIFICATION	1.8139864967664358E-4	DEFECT
// check that the clone doesn't share the same underlying arrays.	WITHOUT_CLASSIFICATION	0.9999969311092062	WITHOUT_CLASSIFICATION	3.068890793712408E-6	DEFECT
// check that the clone doesn't share the same underlying arrays.	WITHOUT_CLASSIFICATION	0.9999969311092062	WITHOUT_CLASSIFICATION	3.068890793712408E-6	DEFECT
// add an empty series	WITHOUT_CLASSIFICATION	0.9999998415868648	WITHOUT_CLASSIFICATION	1.58413135226546E-7	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999926864176587	WITHOUT_CLASSIFICATION	7.313582341231582E-6	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999926864176587	WITHOUT_CLASSIFICATION	7.313582341231582E-6	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999926864176587	WITHOUT_CLASSIFICATION	7.313582341231582E-6	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999926864176587	WITHOUT_CLASSIFICATION	7.313582341231582E-6	DEFECT
// wrong outcome	WITHOUT_CLASSIFICATION	0.9998150741098469	WITHOUT_CLASSIFICATION	1.849258901530524E-4	DEFECT
// wrong outcome	WITHOUT_CLASSIFICATION	0.9998150741098469	WITHOUT_CLASSIFICATION	1.849258901530524E-4	DEFECT
// tests with values	WITHOUT_CLASSIFICATION	0.9999988604283632	WITHOUT_CLASSIFICATION	1.1395716368332916E-6	DEFECT
// seriesKey	WITHOUT_CLASSIFICATION	0.9999986849784478	WITHOUT_CLASSIFICATION	1.3150215522808288E-6	DEFECT
// remove a value	WITHOUT_CLASSIFICATION	0.9999974348824494	WITHOUT_CLASSIFICATION	2.565117550653058E-6	DEFECT
// add a series	WITHOUT_CLASSIFICATION	0.999999210461475	WITHOUT_CLASSIFICATION	7.895385249747859E-7	DEFECT
/* XYSeries s = */	WITHOUT_CLASSIFICATION	0.9999847899096022	WITHOUT_CLASSIFICATION	1.5210090397787487E-5	DEFECT
/* XYSeries s = */	WITHOUT_CLASSIFICATION	0.9999847899096022	WITHOUT_CLASSIFICATION	1.5210090397787487E-5	DEFECT
// and check the first series too...	WITHOUT_CLASSIFICATION	0.9999997331851145	WITHOUT_CLASSIFICATION	2.668148855783886E-7	DEFECT
// allowDuplicateValues	WITHOUT_CLASSIFICATION	0.9999999703915486	WITHOUT_CLASSIFICATION	2.960845131312374E-8	DEFECT
// check for series key out of bounds	WITHOUT_CLASSIFICATION	0.9999992090358577	WITHOUT_CLASSIFICATION	7.90964142354626E-7	DEFECT
/*Comparable k =*/	WITHOUT_CLASSIFICATION	0.9999989930064759	WITHOUT_CLASSIFICATION	1.006993524104296E-6	DEFECT
/*Comparable k =*/	WITHOUT_CLASSIFICATION	0.9999989930064759	WITHOUT_CLASSIFICATION	1.006993524104296E-6	DEFECT
/*Comparable k =*/	WITHOUT_CLASSIFICATION	0.9999989930064759	WITHOUT_CLASSIFICATION	1.006993524104296E-6	DEFECT
// check that adding a series will overwrite the old series	WITHOUT_CLASSIFICATION	0.999998063910446	WITHOUT_CLASSIFICATION	1.9360895539062834E-6	DEFECT
// check that adding a series will overwrite the old series	WITHOUT_CLASSIFICATION	0.999998063910446	WITHOUT_CLASSIFICATION	1.9360895539062834E-6	DEFECT
// check that adding a series will overwrite the old series	WITHOUT_CLASSIFICATION	0.999998063910446	WITHOUT_CLASSIFICATION	1.9360895539062834E-6	DEFECT
// check null key	WITHOUT_CLASSIFICATION	0.9999998318453169	WITHOUT_CLASSIFICATION	1.6815468316664645E-7	DEFECT
// check null key	WITHOUT_CLASSIFICATION	0.9999998318453169	WITHOUT_CLASSIFICATION	1.6815468316664645E-7	DEFECT
// check null key	WITHOUT_CLASSIFICATION	0.9999998318453169	WITHOUT_CLASSIFICATION	1.6815468316664645E-7	DEFECT
// try an index out of bounds	WITHOUT_CLASSIFICATION	0.9999965678047065	WITHOUT_CLASSIFICATION	3.4321952935770595E-6	DEFECT
// now add some more data	WITHOUT_CLASSIFICATION	0.9999996537310316	WITHOUT_CLASSIFICATION	3.4626896834488583E-7	DEFECT
// xLow	WITHOUT_CLASSIFICATION	0.9999682221686506	WITHOUT_CLASSIFICATION	3.177783134938073E-5	DEFECT
// xHigh	WITHOUT_CLASSIFICATION	0.9999791219093276	WITHOUT_CLASSIFICATION	2.087809067246514E-5	DEFECT
// first check that a valid renaming works	WITHOUT_CLASSIFICATION	0.9999995510479661	WITHOUT_CLASSIFICATION	4.489520338321211E-7	DEFECT
// next, check that setting a duplicate key fails	WITHOUT_CLASSIFICATION	0.99999777707557	WITHOUT_CLASSIFICATION	2.2229244299655675E-6	DEFECT
// create an array of items in reverse order	WITHOUT_CLASSIFICATION	0.9999996317058143	WITHOUT_CLASSIFICATION	3.6829418566629995E-7	DEFECT
// got the required exception	WITHOUT_CLASSIFICATION	0.9999253422124743	WITHOUT_CLASSIFICATION	7.465778752568961E-5	DEFECT
// set a theme using the new shadow generator feature available in // 1.0.14 - for backwards compatibility it is not enabled by default	WITHOUT_CLASSIFICATION	0.9999996004123101	WITHOUT_CLASSIFICATION	3.9958768990957503E-7	DEFECT
// call parent method // setup flag based on bounds values	WITHOUT_CLASSIFICATION	0.9999967908350114	WITHOUT_CLASSIFICATION	3.209164988681867E-6	DEFECT
//if flag then change to log version of lowest value // to make range begin at a 10^n value:	WITHOUT_CLASSIFICATION	0.9999999129426406	WITHOUT_CLASSIFICATION	8.705735946611902E-8	DEFECT
//if less than 1.0 then make it 1.0 //add in margin and get exponential value:	WITHOUT_CLASSIFICATION	0.9999985576038455	WITHOUT_CLASSIFICATION	1.442396154403564E-6	DEFECT
//negatives not allowed and upper bound between 0 & 1 //round up to nearest significant digit for bound: //get negative exponent:	WITHOUT_CLASSIFICATION	0.9981371063662455	WITHOUT_CLASSIFICATION	0.0018628936337544493	DEFECT
//not first tick to be displayed //no tick label	WITHOUT_CLASSIFICATION	0.9999984142247622	WITHOUT_CLASSIFICATION	1.5857752377750572E-6	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999995722400108	WITHOUT_CLASSIFICATION	4.2775998929434456E-7	DEFECT
// x	WITHOUT_CLASSIFICATION	0.9999752829084022	WITHOUT_CLASSIFICATION	2.4717091597762782E-5	DEFECT
// y	WITHOUT_CLASSIFICATION	0.9999750051039826	WITHOUT_CLASSIFICATION	2.4994896017342443E-5	DEFECT
// default instances	WITHOUT_CLASSIFICATION	0.9999995238502002	WITHOUT_CLASSIFICATION	4.76149799844827E-7	DEFECT
// TBLRC // 00000 - no items	WITHOUT_CLASSIFICATION	0.9999995101799294	WITHOUT_CLASSIFICATION	4.898200706197548E-7	DEFECT
// try a few checks to ensure that the clone is independent of the // original	WITHOUT_CLASSIFICATION	0.9999996800373107	WITHOUT_CLASSIFICATION	3.199626892710763E-7	DEFECT
// autoSort	WITHOUT_CLASSIFICATION	0.9999993153046761	WITHOUT_CLASSIFICATION	6.846953239005424E-7	DEFECT
// add a value	WITHOUT_CLASSIFICATION	0.9999993962359933	WITHOUT_CLASSIFICATION	6.037640066513258E-7	DEFECT
// add another value	WITHOUT_CLASSIFICATION	0.9999996545114539	WITHOUT_CLASSIFICATION	3.454885461400232E-7	DEFECT
// add an empty series	WITHOUT_CLASSIFICATION	0.9999998415868648	WITHOUT_CLASSIFICATION	1.58413135226546E-7	DEFECT
// now we should be allowed to change s1's key to anything but "S2"	WITHOUT_CLASSIFICATION	0.9999987424424152	WITHOUT_CLASSIFICATION	1.2575575847558692E-6	DEFECT
// after s1 is removed from the collection, we should be able to set // the key to anything we want...	WITHOUT_CLASSIFICATION	0.9998367427175009	WITHOUT_CLASSIFICATION	1.6325728249906167E-4	DEFECT
// check that removing by index also works	WITHOUT_CLASSIFICATION	0.9987797632522802	WITHOUT_CLASSIFICATION	0.001220236747719719	DEFECT
// correct outcome	WITHOUT_CLASSIFICATION	0.9998925601314292	WITHOUT_CLASSIFICATION	1.0743986857079202E-4	DEFECT
// wrong outcome	WITHOUT_CLASSIFICATION	0.9998150741098469	WITHOUT_CLASSIFICATION	1.849258901530524E-4	DEFECT
// remove a value	WITHOUT_CLASSIFICATION	0.9999974348824494	WITHOUT_CLASSIFICATION	2.565117550653058E-6	DEFECT
// add a series	WITHOUT_CLASSIFICATION	0.999999210461475	WITHOUT_CLASSIFICATION	7.895385249747859E-7	DEFECT
/* XYSeries s = */	WITHOUT_CLASSIFICATION	0.9999847899096022	WITHOUT_CLASSIFICATION	1.5210090397787487E-5	DEFECT
// yLow	WITHOUT_CLASSIFICATION	0.9999553377065041	WITHOUT_CLASSIFICATION	4.466229349583974E-5	DEFECT
// yHigh	WITHOUT_CLASSIFICATION	0.9999696247101632	WITHOUT_CLASSIFICATION	3.0375289836869863E-5	DEFECT
// xLow	WITHOUT_CLASSIFICATION	0.9999682221686506	WITHOUT_CLASSIFICATION	3.177783134938073E-5	DEFECT
// xHigh	WITHOUT_CLASSIFICATION	0.9999791219093276	WITHOUT_CLASSIFICATION	2.087809067246514E-5	DEFECT
// when the dataset contains no series, we expect the value range to  // be null	WITHOUT_CLASSIFICATION	0.9999999026022649	WITHOUT_CLASSIFICATION	9.739773518333916E-8	DEFECT
// when the dataset contains one or more series, but those series  // contain no items, we expect the value range to be null	WITHOUT_CLASSIFICATION	0.9999983120138874	WITHOUT_CLASSIFICATION	1.6879861126697972E-6	DEFECT
// the series name should not  // change because "C" is already the key for the other series in the // collection	WITHOUT_CLASSIFICATION	0.9999997915793009	WITHOUT_CLASSIFICATION	2.0842069907439086E-7	DEFECT
//  Test that there are 6 X points and some specific values	WITHOUT_CLASSIFICATION	0.9999999291355963	WITHOUT_CLASSIFICATION	7.086440358853122E-8	DEFECT
// after adding a point to a series, check that there are now 7 // items in each series	WITHOUT_CLASSIFICATION	0.9999997382946695	WITHOUT_CLASSIFICATION	2.6170533051806333E-7	DEFECT
//  Remove series 1	WITHOUT_CLASSIFICATION	0.9999836489648869	WITHOUT_CLASSIFICATION	1.635103511311445E-5	DEFECT
//  Test that there are still 7 X points	WITHOUT_CLASSIFICATION	0.9999980083346087	WITHOUT_CLASSIFICATION	1.9916653913091444E-6	DEFECT
//  Remove series 2 and add new series	WITHOUT_CLASSIFICATION	0.9999149499345628	WITHOUT_CLASSIFICATION	8.50500654372684E-5	DEFECT
//  Test that there are now 4 X points	WITHOUT_CLASSIFICATION	0.9999997493342039	WITHOUT_CLASSIFICATION	2.506657961757159E-7	DEFECT
// WITH AUTOPRUNING	WITHOUT_CLASSIFICATION	0.9999940867710516	WITHOUT_CLASSIFICATION	5.913228948454713E-6	DEFECT
// should be 2 items	WITHOUT_CLASSIFICATION	0.9999910714542096	WITHOUT_CLASSIFICATION	8.928545790436233E-6	DEFECT
// should be 2 items	WITHOUT_CLASSIFICATION	0.9999910714542096	WITHOUT_CLASSIFICATION	8.928545790436233E-6	DEFECT
// still 2	WITHOUT_CLASSIFICATION	0.9999869738784197	WITHOUT_CLASSIFICATION	1.302612158020937E-5	DEFECT
// still 2	WITHOUT_CLASSIFICATION	0.9999869738784197	WITHOUT_CLASSIFICATION	1.302612158020937E-5	DEFECT
// 1 value pruned.	WITHOUT_CLASSIFICATION	0.9999982498549287	WITHOUT_CLASSIFICATION	1.750145071381653E-6	DEFECT
// WITHOUT AUTOPRUNING	WITHOUT_CLASSIFICATION	0.9999956162377388	WITHOUT_CLASSIFICATION	4.383762261216253E-6	DEFECT
// still 2.	WITHOUT_CLASSIFICATION	0.9999929542799905	WITHOUT_CLASSIFICATION	7.04572000952847E-6	DEFECT
// ****************************************************************** //  More than 150 demo applications are included with the JFreeChart //  Developer Guide...for more information, see: // //  >   http://www.object-refinery.com/jfreechart/guide.html // // ******************************************************************	WITHOUT_CLASSIFICATION	0.9999898133574376	WITHOUT_CLASSIFICATION	1.0186642562375218E-5	DEFECT
// here we do a check to see if the user is installing the "Legacy" // theme, and reset the bar painters in that case...	WITHOUT_CLASSIFICATION	0.9999993707810947	WITHOUT_CLASSIFICATION	6.292189053463279E-7	DEFECT
// since the flow layout is relatively straightforward, // no information needs to be recorded here	WITHOUT_CLASSIFICATION	0.999993461430775	WITHOUT_CLASSIFICATION	6.538569224905482E-6	DEFECT
// nothing is drawn if the row index is not included in the list with // the indices of the visible rows...	WITHOUT_CLASSIFICATION	0.99978487124564	WITHOUT_CLASSIFICATION	2.1512875435999215E-4	DEFECT
// calculate the bar width - this calculation differs from the // BarRenderer calculation because the bars are layered on top of one // another, so there is effectively only one bar per category for // the purpose of the bar width calculation	WITHOUT_CLASSIFICATION	0.9973663388756339	WITHOUT_CLASSIFICATION	0.0026336611243660516	DEFECT
// the link area defines the dog leg points for the linking lines to // the labels	WITHOUT_CLASSIFICATION	0.9999998543751566	WITHOUT_CLASSIFICATION	1.4562484340778537E-7	DEFECT
// if the current stroke is not a BasicStroke then it is handled as // a special case	WITHOUT_CLASSIFICATION	0.9999910695499815	WITHOUT_CLASSIFICATION	8.930450018511079E-6	DEFECT
// after setting up all the subplots, the shared range axis may need // reconfiguring	WITHOUT_CLASSIFICATION	0.9999999136435709	WITHOUT_CLASSIFICATION	8.635642916162131E-8	DEFECT
// if there is an existing dataset, remove the plot from the list of // change listeners...	WITHOUT_CLASSIFICATION	0.9999998772794557	WITHOUT_CLASSIFICATION	1.227205443099434E-7	DEFECT
// the segment is entirely at the // front of the chart	WITHOUT_CLASSIFICATION	0.9999575453049082	WITHOUT_CLASSIFICATION	4.245469509184025E-5	DEFECT
// starts at back and wraps right around to the // back again	WITHOUT_CLASSIFICATION	0.9999996498198805	WITHOUT_CLASSIFICATION	3.5018011934651206E-7	DEFECT
// if the source point doesn't fall within a subplot, we do the // zoom on all subplots...	WITHOUT_CLASSIFICATION	0.9999990592454204	WITHOUT_CLASSIFICATION	9.407545795278481E-7	DEFECT
//  double range = this.domainAxis.getRange().getLength(); //  double scaledRange = range * percent; //  domainAxis.setAnchoredRange(scaledRange);	WITHOUT_CLASSIFICATION	0.9999999012120703	WITHOUT_CLASSIFICATION	9.878792964324166E-8	DEFECT
// the anchor point is typically the point where the mouse last // clicked - the crosshairs will be driven off this point...	WITHOUT_CLASSIFICATION	0.9900539548720958	WITHOUT_CLASSIFICATION	0.009946045127904202	DEFECT
// axisIndices can be: // 1.  null; // 2.  non-empty, containing only Integer objects that are unique.	WITHOUT_CLASSIFICATION	0.9999765387326971	WITHOUT_CLASSIFICATION	2.3461267303014847E-5	DEFECT
// if this cell held a maximum and/or minimum value, we'll need to // update the cached bounds...	WITHOUT_CLASSIFICATION	0.9999997061955787	WITHOUT_CLASSIFICATION	2.9380442132676265E-7	DEFECT
// if the 'notify' flag has been switched to false, we don't notify // the listeners	WITHOUT_CLASSIFICATION	0.9999997058521997	WITHOUT_CLASSIFICATION	2.941478003596515E-7	DEFECT
// private Plot parent <-- don't clone the parent plot, but take care // childs in combined plots instead	WITHOUT_CLASSIFICATION	0.999862657450216	WITHOUT_CLASSIFICATION	1.3734254978403916E-4	DEFECT
// For the case were the first tick is greater // than minZ	WITHOUT_CLASSIFICATION	0.9999997834936932	WITHOUT_CLASSIFICATION	2.1650630666048005E-7	DEFECT
// add an entity for the item, but only if it falls within the // data area...	WITHOUT_CLASSIFICATION	0.9990396801168147	WITHOUT_CLASSIFICATION	9.603198831852841E-4	DEFECT
// we create an event with a special flag set...the purpose of // this is to communicate to the plot (the default receiver of // the event) that series visibility has changed so the axis // ranges might need updating...	WITHOUT_CLASSIFICATION	0.9999733199469963	WITHOUT_CLASSIFICATION	2.668005300371262E-5	DEFECT
// when the x-values are sorted in descending order, the lower // bound is found by calculating relative to the xHigh value	WITHOUT_CLASSIFICATION	0.9999995533670692	WITHOUT_CLASSIFICATION	4.4663293074023227E-7	DEFECT
// nothing is drawn if the row index is not included in the list with // the indices of the visible rows...	WITHOUT_CLASSIFICATION	0.99978487124564	WITHOUT_CLASSIFICATION	2.1512875435999215E-4	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999926864176587	WITHOUT_CLASSIFICATION	7.313582341231582E-6	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999926864176587	WITHOUT_CLASSIFICATION	7.313582341231582E-6	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999926864176587	WITHOUT_CLASSIFICATION	7.313582341231582E-6	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999926864176587	WITHOUT_CLASSIFICATION	7.313582341231582E-6	DEFECT
// nothing is drawn if the row index is not included in the list with // the indices of the visible rows...	WITHOUT_CLASSIFICATION	0.99978487124564	WITHOUT_CLASSIFICATION	2.1512875435999215E-4	DEFECT
/////////////////////////////////////////////////////////////////////////// // From HighLowDataset ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999996292567963	WITHOUT_CLASSIFICATION	3.707432037355932E-7	DEFECT
// handle a special case - if the bar colour has alpha == 0, it is // invisible so we shouldn't draw any shadow	WITHOUT_CLASSIFICATION	0.9999999747529905	WITHOUT_CLASSIFICATION	2.5247009485136784E-8	DEFECT
// handle a special case - if the bar colour has alpha == 0, it is // invisible so we shouldn't draw any shadow	WITHOUT_CLASSIFICATION	0.9999999747529905	WITHOUT_CLASSIFICATION	2.5247009485136784E-8	DEFECT
// if the dataset is not a StatisticalCategoryDataset then just revert // to the superclass (LineAndShapeRenderer) behaviour...	WITHOUT_CLASSIFICATION	0.9999995012568611	WITHOUT_CLASSIFICATION	4.987431388532825E-7	DEFECT
// FIXME: add setSeriesToolTipGenerator(int, CategoryToolTipGenerator, //            boolean) ?	WITHOUT_CLASSIFICATION	0.9965987180953653	WITHOUT_CLASSIFICATION	0.0034012819046348153	DEFECT
// average radius // outlier radius	WITHOUT_CLASSIFICATION	0.999999478954113	WITHOUT_CLASSIFICATION	5.210458870518522E-7	DEFECT
// false preserves the old behaviour // prior to introducing this flag	WITHOUT_CLASSIFICATION	0.9999798930658942	WITHOUT_CLASSIFICATION	2.0106934105819967E-5	DEFECT
// These are deliberately not bounded to minimums/maxCandleWidth to //  retain old behaviour.	WITHOUT_CLASSIFICATION	0.9999999893964922	WITHOUT_CLASSIFICATION	1.0603507939325753E-8	DEFECT
// the noCodeBaseClassLoader is configured by a call to the // removeCodeBase() method, typically in the init() method of an // applet...	WITHOUT_CLASSIFICATION	0.9998321937516014	WITHOUT_CLASSIFICATION	1.678062483985746E-4	DEFECT
// the noCodeBaseClassLoader is configured by a call to the // removeCodeBase() method, typically in the init() method of an // applet...	WITHOUT_CLASSIFICATION	0.9998321937516014	WITHOUT_CLASSIFICATION	1.678062483985746E-4	DEFECT
// deregister the collection as a change listener to each series in // the collection.	WITHOUT_CLASSIFICATION	0.9999999232498324	WITHOUT_CLASSIFICATION	7.675016750232502E-8	DEFECT
// handle the special case where the dataset has y-intervals that // we want to measure	WITHOUT_CLASSIFICATION	0.9999999966491231	WITHOUT_CLASSIFICATION	3.350876974990493E-9	DEFECT
// CASE 3 : Comparing to a non-TimePeriod object // ---------------------------------------------	WITHOUT_CLASSIFICATION	0.9999948425605711	WITHOUT_CLASSIFICATION	5.1574394289065966E-6	DEFECT
// CASE 1 : Comparing to another Second object // -------------------------------------------	WITHOUT_CLASSIFICATION	0.9999577213444552	WITHOUT_CLASSIFICATION	4.2278655544826665E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999926864176587	WITHOUT_CLASSIFICATION	7.313582341231582E-6	DEFECT
// end period is not in original series // this is first item AFTER end period // so this is last item BEFORE end	WITHOUT_CLASSIFICATION	0.9999363837739743	WITHOUT_CLASSIFICATION	6.361622602570813E-5	DEFECT
// the first initialization must precede creation of the ValueSet array: // establishes length of each array	WITHOUT_CLASSIFICATION	0.9999993094802173	WITHOUT_CLASSIFICATION	6.905197826838379E-7	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999926864176587	WITHOUT_CLASSIFICATION	7.313582341231582E-6	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999926864176587	WITHOUT_CLASSIFICATION	7.313582341231582E-6	DEFECT
// here we check that the average marker will in fact be // visible before drawing it...	WITHOUT_CLASSIFICATION	0.9999813565069559	WITHOUT_CLASSIFICATION	1.864349304405302E-5	DEFECT
// draw outliers // outlier radius	WITHOUT_CLASSIFICATION	0.9999984519992942	WITHOUT_CLASSIFICATION	1.5480007058473112E-6	DEFECT
// NULL value -> insert point on base line // instead of 'step point'	WITHOUT_CLASSIFICATION	0.9999999446604917	WITHOUT_CLASSIFICATION	5.533950831016935E-8	DEFECT
// coordinate pairs // current minuend point // next minuend point // current subtrahend point // next subtrahend point	WITHOUT_CLASSIFICATION	0.9999858886684146	WITHOUT_CLASSIFICATION	1.4111331585367466E-5	DEFECT
// the intersect is at the next point for both the minuend // and subtrahend	WITHOUT_CLASSIFICATION	0.9999996155919051	WITHOUT_CLASSIFICATION	3.8440809483424953E-7	DEFECT
// create the polygon // add the minuend's points to polygon	WITHOUT_CLASSIFICATION	0.9999982037826598	WITHOUT_CLASSIFICATION	1.796217340154986E-6	DEFECT
// the following code handles the line for the y-values...it's // all done by code in the super class	WITHOUT_CLASSIFICATION	0.9999915005524549	WITHOUT_CLASSIFICATION	8.499447545203375E-6	DEFECT
// Check if the item is the last item for the series and number of // items > 0.  We can't draw an area for a single point.	WITHOUT_CLASSIFICATION	0.9999999865166274	WITHOUT_CLASSIFICATION	1.3483372597459312E-8	DEFECT
// use item paint for outlines by // default, not outline paint	WITHOUT_CLASSIFICATION	0.999999777742499	WITHOUT_CLASSIFICATION	2.2225750083305933E-7	DEFECT
// add an entity for the item, but only if it falls within the data // area...	WITHOUT_CLASSIFICATION	0.9997757914148427	WITHOUT_CLASSIFICATION	2.2420858515734613E-4	DEFECT
// the bounds should be calculated using just the items within // the current range of the x-axis...if there is one	WITHOUT_CLASSIFICATION	0.9999983020161289	WITHOUT_CLASSIFICATION	1.6979838709635726E-6	DEFECT
// We organise the data with the following assumption: // 1) the data are sorted by x then y // 2) that the data will be represented by a rectangle formed by //    using x[i+1], x, y[j+1], and y. // 3) we march along the y-axis at the same value of x until a new //    value x is found at which point we will flag the index //    where x[i+1]<>x[i]	WITHOUT_CLASSIFICATION	0.9999457013458168	WITHOUT_CLASSIFICATION	5.4298654183269256E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999926864176587	WITHOUT_CLASSIFICATION	7.313582341231582E-6	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999926864176587	WITHOUT_CLASSIFICATION	7.313582341231582E-6	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999926864176587	WITHOUT_CLASSIFICATION	7.313582341231582E-6	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999926864176587	WITHOUT_CLASSIFICATION	7.313582341231582E-6	DEFECT
// create the new color and set it to the // SwtPaintCanvas	WITHOUT_CLASSIFICATION	0.9999999687185097	WITHOUT_CLASSIFICATION	3.1281490223874154E-8	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999926864176587	WITHOUT_CLASSIFICATION	7.313582341231582E-6	DEFECT
// we're doing this for testing only, and make sure that we // only add data in ascending order by x-value	WITHOUT_CLASSIFICATION	0.9999999649580238	WITHOUT_CLASSIFICATION	3.504197625462127E-8	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999926864176587	WITHOUT_CLASSIFICATION	7.313582341231582E-6	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999926864176587	WITHOUT_CLASSIFICATION	7.313582341231582E-6	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999926864176587	WITHOUT_CLASSIFICATION	7.313582341231582E-6	DEFECT
// have to use a subclass of // AbstractRenderer	WITHOUT_CLASSIFICATION	0.9999949509681142	WITHOUT_CLASSIFICATION	5.04903188577337E-6	DEFECT
// include legend // tooltips // urls	WITHOUT_CLASSIFICATION	0.999999884794869	WITHOUT_CLASSIFICATION	1.1520513095438699E-7	DEFECT
// setup our test timelines // // Legend for comments below: // <spaces> = Segments included in the final timeline // EE       = Excluded segments via timeline rules // xx       = Exception segments inherited from base timeline exclusions	WITHOUT_CLASSIFICATION	0.9999999862577853	WITHOUT_CLASSIFICATION	1.374221477546342E-8	DEFECT
////////////////////////////////////////////////////////////////////////// // test exception segments //////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999994388728027	WITHOUT_CLASSIFICATION	5.611271971435929E-7	DEFECT
// we use ValueMarker for the tests, because we need a concrete // subclass...	WITHOUT_CLASSIFICATION	0.999998842193714	WITHOUT_CLASSIFICATION	1.1578062858566504E-6	DEFECT
// now check that all datasets, renderers and axes are being listened // too...	WITHOUT_CLASSIFICATION	0.9999999185587357	WITHOUT_CLASSIFICATION	8.144126428788786E-8	DEFECT
// now check that all datasets, renderers and axes are being listened // too...	WITHOUT_CLASSIFICATION	0.9999999185587357	WITHOUT_CLASSIFICATION	8.144126428788786E-8	DEFECT
// after clearing, reverts to // default group	WITHOUT_CLASSIFICATION	0.9999998269457583	WITHOUT_CLASSIFICATION	1.7305424163688744E-7	DEFECT
// regular equality for the datasets doesn't check the fields, just // the data values...so let's check some more things...	WITHOUT_CLASSIFICATION	0.9999999969361171	WITHOUT_CLASSIFICATION	3.0638829245513543E-9	DEFECT
// these methods should throw an IndexOutOfBoundsException since the // column is too high...	WITHOUT_CLASSIFICATION	0.9981195218388024	WITHOUT_CLASSIFICATION	0.0018804781611976567	DEFECT
// this replaces the entry with the current minimum value, but the new // minimum value is now in a different item	WITHOUT_CLASSIFICATION	0.9999928401812747	WITHOUT_CLASSIFICATION	7.1598187253624925E-6	DEFECT
// the dataset should prevent the addition of a series with the // same name as an existing series in the dataset	WITHOUT_CLASSIFICATION	0.9998996066494148	WITHOUT_CLASSIFICATION	1.0039335058524955E-4	DEFECT
/*item = */	WITHOUT_CLASSIFICATION	0.9999979197821333	WITHOUT_CLASSIFICATION	2.080217866867505E-6	DEFECT
// test empty series	WITHOUT_CLASSIFICATION	0.999999718983202	WITHOUT_CLASSIFICATION	2.8101679804799304E-7	DEFECT
// now we should be allowed to change s1's key to anything but "S2"	WITHOUT_CLASSIFICATION	0.9999987424424152	WITHOUT_CLASSIFICATION	1.2575575847558692E-6	DEFECT
// after s1 is removed from the collection, we should be able to set // the key to anything we want...	WITHOUT_CLASSIFICATION	0.9998367427175009	WITHOUT_CLASSIFICATION	1.6325728249906167E-4	DEFECT
// locale should not matter here	WITHOUT_CLASSIFICATION	0.9989446553778056	WITHOUT_CLASSIFICATION	0.0010553446221943685	DEFECT
// correct outcome	WITHOUT_CLASSIFICATION	0.9998925601314292	WITHOUT_CLASSIFICATION	1.0743986857079202E-4	DEFECT
// correct outcome	WITHOUT_CLASSIFICATION	0.9998925601314292	WITHOUT_CLASSIFICATION	1.0743986857079202E-4	DEFECT
// wrong outcome	WITHOUT_CLASSIFICATION	0.9998150741098469	WITHOUT_CLASSIFICATION	1.849258901530524E-4	DEFECT
// when the dataset contains one or more series, but those series // contain no items, we still expect the range to be null	WITHOUT_CLASSIFICATION	0.9999989850203373	WITHOUT_CLASSIFICATION	1.0149796626525012E-6	DEFECT
// tests with values	WITHOUT_CLASSIFICATION	0.9999988604283632	WITHOUT_CLASSIFICATION	1.1395716368332916E-6	DEFECT
// tests with values	WITHOUT_CLASSIFICATION	0.9999988604283632	WITHOUT_CLASSIFICATION	1.1395716368332916E-6	DEFECT
// seriesKey	WITHOUT_CLASSIFICATION	0.9999986849784478	WITHOUT_CLASSIFICATION	1.3150215522808288E-6	DEFECT
// open	WITHOUT_CLASSIFICATION	0.999993213253824	WITHOUT_CLASSIFICATION	6.786746176082547E-6	DEFECT
// add a series	WITHOUT_CLASSIFICATION	0.999999210461475	WITHOUT_CLASSIFICATION	7.895385249747859E-7	DEFECT
// allowDuplicateValues	WITHOUT_CLASSIFICATION	0.9999999703915486	WITHOUT_CLASSIFICATION	2.960845131312374E-8	DEFECT
// check for series key out of bounds	WITHOUT_CLASSIFICATION	0.9999992090358577	WITHOUT_CLASSIFICATION	7.90964142354626E-7	DEFECT
// check for series key out of bounds	WITHOUT_CLASSIFICATION	0.9999992090358577	WITHOUT_CLASSIFICATION	7.90964142354626E-7	DEFECT
/*Comparable k =*/	WITHOUT_CLASSIFICATION	0.9999989930064759	WITHOUT_CLASSIFICATION	1.006993524104296E-6	DEFECT
/*Comparable k =*/	WITHOUT_CLASSIFICATION	0.9999989930064759	WITHOUT_CLASSIFICATION	1.006993524104296E-6	DEFECT
/*Comparable k =*/	WITHOUT_CLASSIFICATION	0.9999989930064759	WITHOUT_CLASSIFICATION	1.006993524104296E-6	DEFECT
/*Comparable k =*/	WITHOUT_CLASSIFICATION	0.9999989930064759	WITHOUT_CLASSIFICATION	1.006993524104296E-6	DEFECT
// when the dataset contains no series, we expect the value range to  // be null	WITHOUT_CLASSIFICATION	0.9999999026022649	WITHOUT_CLASSIFICATION	9.739773518333916E-8	DEFECT
// when the dataset contains no series, we expect the value range to  // be null	WITHOUT_CLASSIFICATION	0.9999999026022649	WITHOUT_CLASSIFICATION	9.739773518333916E-8	DEFECT
// when the dataset contains one or more series, but those series  // contain no items, we expect the value range to be null	WITHOUT_CLASSIFICATION	0.9999983120138874	WITHOUT_CLASSIFICATION	1.6879861126697972E-6	DEFECT
// when the dataset contains one or more series, but those series  // contain no items, we expect the value range to be null	WITHOUT_CLASSIFICATION	0.9999983120138874	WITHOUT_CLASSIFICATION	1.6879861126697972E-6	DEFECT
// complicate things a little...	WITHOUT_CLASSIFICATION	0.9999347474117135	WITHOUT_CLASSIFICATION	6.525258828652968E-5	DEFECT
// seem to be the same...	WITHOUT_CLASSIFICATION	0.9999971899817603	WITHOUT_CLASSIFICATION	2.8100182397354833E-6	DEFECT
// what is our alignment?	WITHOUT_CLASSIFICATION	0.9999998236388441	WITHOUT_CLASSIFICATION	1.763611559242788E-7	DEFECT
// what is our alignment?	WITHOUT_CLASSIFICATION	0.9999998236388441	WITHOUT_CLASSIFICATION	1.763611559242788E-7	DEFECT
// seem to be the same...	WITHOUT_CLASSIFICATION	0.9999971899817603	WITHOUT_CLASSIFICATION	2.8100182397354833E-6	DEFECT
// slope	WITHOUT_CLASSIFICATION	0.9999967904930513	WITHOUT_CLASSIFICATION	3.209506948652182E-6	DEFECT
// complicate things a little...	WITHOUT_CLASSIFICATION	0.9999347474117135	WITHOUT_CLASSIFICATION	6.525258828652968E-5	DEFECT
// expected	WITHOUT_CLASSIFICATION	0.9999988884848775	WITHOUT_CLASSIFICATION	1.1115151224248858E-6	DEFECT
// expected	WITHOUT_CLASSIFICATION	0.9999988884848775	WITHOUT_CLASSIFICATION	1.1115151224248858E-6	DEFECT
// expected	WITHOUT_CLASSIFICATION	0.9999988884848775	WITHOUT_CLASSIFICATION	1.1115151224248858E-6	DEFECT
// expected	WITHOUT_CLASSIFICATION	0.9999988884848775	WITHOUT_CLASSIFICATION	1.1115151224248858E-6	DEFECT
// expected	WITHOUT_CLASSIFICATION	0.9999988884848775	WITHOUT_CLASSIFICATION	1.1115151224248858E-6	DEFECT
// expected	WITHOUT_CLASSIFICATION	0.9999988884848775	WITHOUT_CLASSIFICATION	1.1115151224248858E-6	DEFECT
/* (non-Javadoc)     * @see org.eclipse.swt.events.FocusListener#focusGained(     * org.eclipse.swt.events.FocusEvent)     */	WITHOUT_CLASSIFICATION	0.9999999999868847	WITHOUT_CLASSIFICATION	1.311525519685778E-11	DEFECT
/* (non-Javadoc)     * @see org.eclipse.swt.events.FocusListener#focusLost(     * org.eclipse.swt.events.FocusEvent)     */	WITHOUT_CLASSIFICATION	0.9999999999163002	WITHOUT_CLASSIFICATION	8.369976209926895E-11	DEFECT
/* (non-Javadoc)         * @see org.jfree.chart.axis.LogarithmicAxis#switchedLog10(double)         */	WITHOUT_CLASSIFICATION	0.9999999976003501	WITHOUT_CLASSIFICATION	2.399649861107309E-9	DEFECT
// expected	WITHOUT_CLASSIFICATION	0.9999988884848775	WITHOUT_CLASSIFICATION	1.1115151224248858E-6	DEFECT
// expected	WITHOUT_CLASSIFICATION	0.9999988884848775	WITHOUT_CLASSIFICATION	1.1115151224248858E-6	DEFECT
// expected	WITHOUT_CLASSIFICATION	0.9999988884848775	WITHOUT_CLASSIFICATION	1.1115151224248858E-6	DEFECT
// expected	WITHOUT_CLASSIFICATION	0.9999988884848775	WITHOUT_CLASSIFICATION	1.1115151224248858E-6	DEFECT
// expected	WITHOUT_CLASSIFICATION	0.9999988884848775	WITHOUT_CLASSIFICATION	1.1115151224248858E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999994848348538	WITHOUT_CLASSIFICATION	5.151651463210354E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999994848348538	WITHOUT_CLASSIFICATION	5.151651463210354E-7	DEFECT
// do nothing	WITHOUT_CLASSIFICATION	0.9999948044565379	WITHOUT_CLASSIFICATION	5.195543462154547E-6	DEFECT
// do nothing	WITHOUT_CLASSIFICATION	0.9999948044565379	WITHOUT_CLASSIFICATION	5.195543462154547E-6	DEFECT
// do nothing	WITHOUT_CLASSIFICATION	0.9999948044565379	WITHOUT_CLASSIFICATION	5.195543462154547E-6	DEFECT
// do nothing	WITHOUT_CLASSIFICATION	0.9999948044565379	WITHOUT_CLASSIFICATION	5.195543462154547E-6	DEFECT
//}	WITHOUT_CLASSIFICATION	0.999969639944854	WITHOUT_CLASSIFICATION	3.036005514602533E-5	DEFECT
// find out where to place the label...	WITHOUT_CLASSIFICATION	0.9999758666732457	WITHOUT_CLASSIFICATION	2.4133326754268802E-5	DEFECT
// find out where to place the label...	WITHOUT_CLASSIFICATION	0.9999758666732457	WITHOUT_CLASSIFICATION	2.4133326754268802E-5	DEFECT
// Anwender hat abgebrochen.	WITHOUT_CLASSIFICATION	0.999998211881811	WITHOUT_CLASSIFICATION	1.7881181889499712E-6	DEFECT
// insets	WITHOUT_CLASSIFICATION	0.9999986348669695	WITHOUT_CLASSIFICATION	1.3651330304481616E-6	DEFECT
// insets	WITHOUT_CLASSIFICATION	0.9999986348669695	WITHOUT_CLASSIFICATION	1.3651330304481616E-6	DEFECT
// ...but this does!	WITHOUT_CLASSIFICATION	0.9999337779578173	WITHOUT_CLASSIFICATION	6.622204218264756E-5	DEFECT
// insets	WITHOUT_CLASSIFICATION	0.9999986348669695	WITHOUT_CLASSIFICATION	1.3651330304481616E-6	DEFECT
// check defaults	WITHOUT_CLASSIFICATION	0.9999999872793459	WITHOUT_CLASSIFICATION	1.2720653987910778E-8	DEFECT
// do nothing	WITHOUT_CLASSIFICATION	0.9999948044565379	WITHOUT_CLASSIFICATION	5.195543462154547E-6	DEFECT
// do nothing	WITHOUT_CLASSIFICATION	0.9999948044565379	WITHOUT_CLASSIFICATION	5.195543462154547E-6	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.999993660111925	WITHOUT_CLASSIFICATION	6.339888074945912E-6	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.999993660111925	WITHOUT_CLASSIFICATION	6.339888074945912E-6	DEFECT
// OK	WITHOUT_CLASSIFICATION	0.9999959252826889	WITHOUT_CLASSIFICATION	4.074717311095198E-6	DEFECT
// FIXME: we've cloned the chart, but the dataset(s) aren't cloned // and we should do that	DEFECT	0.9970323910378962	WITHOUT_CLASSIFICATION	0.002967608962103804	DEFECT
// todo: not serialized yet	DEFECT	0.9995944146159704	WITHOUT_CLASSIFICATION	4.0558538402960453E-4	DEFECT
// FIRST_MONDAY_AFTER_1900 = cal.getTime().getTime(); // preceding code won't work with JDK 1.3	DEFECT	0.9721845480257911	WITHOUT_CLASSIFICATION	0.02781545197420881	DEFECT
// TODO: we didn't check the height yet	DEFECT	0.8535321352350216	WITHOUT_CLASSIFICATION	0.14646786476497836	DEFECT
// TODO: we didn't check the height yet	DEFECT	0.8535321352350216	WITHOUT_CLASSIFICATION	0.14646786476497836	DEFECT
// TODO: Check this result...	DEFECT	0.6707547926940548	WITHOUT_CLASSIFICATION	0.32924520730594525	DEFECT
// TODO: Check this result...	DEFECT	0.6707547926940548	WITHOUT_CLASSIFICATION	0.32924520730594525	DEFECT
//return cal.getTimeInMillis(); // preceding code won't work with JDK 1.3	DEFECT	0.9985476775684615	WITHOUT_CLASSIFICATION	0.0014523224315385196	DEFECT
// result = this.workingCalendar.getTimeInMillis(); // preceding code won't work with JDK 1.3	DEFECT	0.9981599206579154	WITHOUT_CLASSIFICATION	0.001840079342084568	DEFECT
