WITHOUT_CLASSIFICATION	set constants now that they're initialized
WITHOUT_CLASSIFICATION	line 335
WITHOUT_CLASSIFICATION	yyLen 542
WITHOUT_CLASSIFICATION	yyLen 542
WITHOUT_CLASSIFICATION	yyDefRed 945
WITHOUT_CLASSIFICATION	yyDefRed 945
WITHOUT_CLASSIFICATION	yyDgoto 152
WITHOUT_CLASSIFICATION	Figure end-char. '\0' is special to indicate begin=end and that no nesting?
WITHOUT_CLASSIFICATION	line 362
WITHOUT_CLASSIFICATION	line 372
WITHOUT_CLASSIFICATION	yySindex 945
WITHOUT_CLASSIFICATION	yySindex 945
WITHOUT_CLASSIFICATION	line 391
WITHOUT_CLASSIFICATION	yyRindex 945
WITHOUT_CLASSIFICATION	yyRindex 945
WITHOUT_CLASSIFICATION	^D
WITHOUT_CLASSIFICATION	^Z
WITHOUT_CLASSIFICATION	yyLen 496
WITHOUT_CLASSIFICATION	yyLen 496
WITHOUT_CLASSIFICATION	yyLen 496
WITHOUT_CLASSIFICATION	yyLen 496
WITHOUT_CLASSIFICATION	yyLen 496
WITHOUT_CLASSIFICATION	yyLen 496
WITHOUT_CLASSIFICATION	yyLen 496
WITHOUT_CLASSIFICATION	yyDefRed 889
WITHOUT_CLASSIFICATION	yyDefRed 889
WITHOUT_CLASSIFICATION	yyDefRed 889
WITHOUT_CLASSIFICATION	yyDefRed 889
WITHOUT_CLASSIFICATION	yyDefRed 889
WITHOUT_CLASSIFICATION	yyDefRed 889
WITHOUT_CLASSIFICATION	yyDefRed 889
WITHOUT_CLASSIFICATION	yyDgoto 136
WITHOUT_CLASSIFICATION	yyDgoto 136
WITHOUT_CLASSIFICATION	yyDgoto 136
WITHOUT_CLASSIFICATION	yyDgoto 136
WITHOUT_CLASSIFICATION	yyDgoto 136
WITHOUT_CLASSIFICATION	yyDgoto 136
WITHOUT_CLASSIFICATION	yySindex 889
WITHOUT_CLASSIFICATION	yySindex 889
WITHOUT_CLASSIFICATION	yySindex 889
WITHOUT_CLASSIFICATION	yySindex 889
WITHOUT_CLASSIFICATION	yySindex 889
WITHOUT_CLASSIFICATION	yySindex 889
WITHOUT_CLASSIFICATION	yyRindex 889
WITHOUT_CLASSIFICATION	yyRindex 889
WITHOUT_CLASSIFICATION	yyRindex 889
WITHOUT_CLASSIFICATION	yyRindex 889
WITHOUT_CLASSIFICATION	yyRindex 889
WITHOUT_CLASSIFICATION	yyRindex 889
WITHOUT_CLASSIFICATION	yyRindex 889
WITHOUT_CLASSIFICATION	yyGindex 136
WITHOUT_CLASSIFICATION	yyGindex 136
WITHOUT_CLASSIFICATION	yyGindex 136
WITHOUT_CLASSIFICATION	yyGindex 136
WITHOUT_CLASSIFICATION	Do nothing
WITHOUT_CLASSIFICATION	Do nothing
WITHOUT_CLASSIFICATION	switch
WITHOUT_CLASSIFICATION	switch
WITHOUT_CLASSIFICATION	switch
WITHOUT_CLASSIFICATION	switch
WITHOUT_CLASSIFICATION	switch
WITHOUT_CLASSIFICATION	switch
WITHOUT_CLASSIFICATION	switch
WITHOUT_CLASSIFICATION	switch
WITHOUT_CLASSIFICATION	switch
WITHOUT_CLASSIFICATION	switch
WITHOUT_CLASSIFICATION	switch
WITHOUT_CLASSIFICATION	switch
WITHOUT_CLASSIFICATION	switch
WITHOUT_CLASSIFICATION	switch
WITHOUT_CLASSIFICATION	switch
WITHOUT_CLASSIFICATION	switch
WITHOUT_CLASSIFICATION	switch
WITHOUT_CLASSIFICATION	switch
WITHOUT_CLASSIFICATION	switch
WITHOUT_CLASSIFICATION	switch
WITHOUT_CLASSIFICATION	switch
WITHOUT_CLASSIFICATION	switch
WITHOUT_CLASSIFICATION	switch
WITHOUT_CLASSIFICATION	switch
WITHOUT_CLASSIFICATION	switch
WITHOUT_CLASSIFICATION	switch
WITHOUT_CLASSIFICATION	switch
WITHOUT_CLASSIFICATION	switch
WITHOUT_CLASSIFICATION	switch
WITHOUT_CLASSIFICATION	switch
WITHOUT_CLASSIFICATION	switch
WITHOUT_CLASSIFICATION	switch
WITHOUT_CLASSIFICATION	switch
WITHOUT_CLASSIFICATION	switch
WITHOUT_CLASSIFICATION	switch
WITHOUT_CLASSIFICATION	switch
WITHOUT_CLASSIFICATION	return result
WITHOUT_CLASSIFICATION	name
WITHOUT_CLASSIFICATION	Define System.getProperties() in ENV_JAVA
WITHOUT_CLASSIFICATION	Accessor methods.
WITHOUT_CLASSIFICATION	MRI behavior
WITHOUT_CLASSIFICATION	MRI behavior
WITHOUT_CLASSIFICATION	MRI behavior
WITHOUT_CLASSIFICATION	MRI behavior
WITHOUT_CLASSIFICATION	call getpwent to fail early if unsupported
WITHOUT_CLASSIFICATION	fall back on env entry for USER
WITHOUT_CLASSIFICATION	try to read grent to fail fast
WITHOUT_CLASSIFICATION	define ARGV and $ for this runtime
WITHOUT_CLASSIFICATION	Version information:
WITHOUT_CLASSIFICATION	after defn of $stderr as the call may produce warnings
WITHOUT_CLASSIFICATION	ARGF, $< object
WITHOUT_CLASSIFICATION	if the environment variables can't be obtained, define an empty ENV
WITHOUT_CLASSIFICATION	On platforms without a c-library accessable through JNA, getpid will return hashCode as $$ used to. Using $$ to kill processes could take down many runtimes, but by basing $$ on getpid() where available, we have the same semantics as MRI.
WITHOUT_CLASSIFICATION	$@ returns nil if $!.backtrace is not an array
WITHOUT_CLASSIFICATION	include its parent (and in turn that module's parents)
WITHOUT_CLASSIFICATION	MRI behavior: just plain '' or '\\\\' are considered illegal on Windows.
WITHOUT_CLASSIFICATION	this _is_ legal (when removing an undef)
WITHOUT_CLASSIFICATION	What we passed to the constructor for method 'path'
WITHOUT_CLASSIFICATION	----- Ruby Class Methods ----------------------------------------------------
WITHOUT_CLASSIFICATION	CONSTANT TABLE METHODS - pass to delegate
WITHOUT_CLASSIFICATION	We get canonical path to try and flatten the path out. a dir '/subdir/..' should return as '/' cnutter: Do we want to flatten path out?
WITHOUT_CLASSIFICATION	MRI behavior
WITHOUT_CLASSIFICATION	----- Ruby Instance Methods -------------------------------------------------
WITHOUT_CLASSIFICATION	Make sure any read()s after close fail.
WITHOUT_CLASSIFICATION	----- Helper Methods --------------------------------------------------------
WITHOUT_CLASSIFICATION	try to use POSIX for this first
WITHOUT_CLASSIFICATION	otherwise fall back on the old way
WITHOUT_CLASSIFICATION	Proc class
WITHOUT_CLASSIFICATION	No passed in block, lets check next outer frame for one ('Proc.new')
WITHOUT_CLASSIFICATION	modify the block with a new backref/lastline-grabbing scope
WITHOUT_CLASSIFICATION	for future compatibility as constructors move toward not accepting metaclass?
WITHOUT_CLASSIFICATION	case RUBY_HYBRID: backtrace = ThreadContext.createRubyHybridBacktrace(getRuntime(), backtraceFrames, javaStackTrace, getRuntime().getDebug().isTrue()); break;
WITHOUT_CLASSIFICATION	This looks wrong, but it's the way MRI does it.
WITHOUT_CLASSIFICATION	rb_exc_new3
WITHOUT_CLASSIFICATION	NOTE: The indicies here match exactly the signal values; do not reorder
WITHOUT_CLASSIFICATION	registerThreadDumpSignalHandler(runtime);
WITHOUT_CLASSIFICATION	IOT is also 6
WITHOUT_CLASSIFICATION	CLD is also 20
WITHOUT_CLASSIFICATION	RubySignal
WITHOUT_CLASSIFICATION	ZStream actually isn't allocatable
WITHOUT_CLASSIFICATION	MRI behavior, enforced by tests
WITHOUT_CLASSIFICATION	it's safe since adler.update doesn't modify the array
WITHOUT_CLASSIFICATION	MRI behavior: in finished mode, we work as pass-through
WITHOUT_CLASSIFICATION	SYNC_FLUSH
WITHOUT_CLASSIFICATION	By default, NO_FLUSH
WITHOUT_CLASSIFICATION	io.finish();
WITHOUT_CLASSIFICATION	should invoke seek on realIo
WITHOUT_CLASSIFICATION	hmm...
WITHOUT_CLASSIFICATION	Called before any write to make sure the header is always written before the first bytes
WITHOUT_CLASSIFICATION	For JDK 1.4 we can use "cal.getTimeInMillis()"
WITHOUT_CLASSIFICATION	We can just use dt, since it is immutable
WITHOUT_CLASSIFICATION	float number of seconds
WITHOUT_CLASSIFICATION	modified to match how hash is calculated in 1.8.2
WITHOUT_CLASSIFICATION	dump usec, not msec
WITHOUT_CLASSIFICATION	Time class methods
WITHOUT_CLASSIFICATION	marsaling dumps usec, not msec
WITHOUT_CLASSIFICATION	MRI accepts additional wday argument which appears to be ignored.
WITHOUT_CLASSIFICATION	set up with min values and then add to allow rolling over
WITHOUT_CLASSIFICATION	the instant at which we will ask dtz what the difference between DST and standard time is
WITHOUT_CLASSIFICATION	if we might be moving this time from !DST -> DST, the offset is assumed to be the same as it was just before we last moved from DST -> !DST
WITHOUT_CLASSIFICATION	Ignores usec if 8 args (for compatibility with parsedate) or if not supplied.
WITHOUT_CLASSIFICATION	================ Utility Methods ================
WITHOUT_CLASSIFICATION	If the value will fit in a Fixnum, return one of those.
WITHOUT_CLASSIFICATION	================ Instance Methods ================
WITHOUT_CLASSIFICATION	MRI issuses warning here on (RBIGNUM(x)->len SIZEOF_BDIGITS yy > 10241024)
WITHOUT_CLASSIFICATION	num2int is also implemented
WITHOUT_CLASSIFICATION	num2int is also implemented
WITHOUT_CLASSIFICATION	no bignorm here needed
WITHOUT_CLASSIFICATION	wow, the only time we can use the java protocol ;)
WITHOUT_CLASSIFICATION	Pad with a 0
WITHOUT_CLASSIFICATION	BigInteger required a sign byte in incoming array
WITHOUT_CLASSIFICATION	This should only be called by this and RubyFile. It allows this object to be created without a IOHandler.
WITHOUT_CLASSIFICATION	We do this b/c make_tmpname might be overridden
WITHOUT_CLASSIFICATION	???
WITHOUT_CLASSIFICATION	PID
WITHOUT_CLASSIFICATION	================ Instance Methods ================
WITHOUT_CLASSIFICATION	elements and trailing nils
WITHOUT_CLASSIFICATION	Dir::tmpdir
WITHOUT_CLASSIFICATION	volatile to ensure that initial nil-fill is visible to other threads
WITHOUT_CLASSIFICATION	Ruby arrays default to holding 16 elements, so we create an ArrayList of the same size if we're not told otherwise
WITHOUT_CLASSIFICATION	rb_ary_new2 just allocates the internal array
WITHOUT_CLASSIFICATION	plain internal array assignment
WITHOUT_CLASSIFICATION	plain internal array assignment
WITHOUT_CLASSIFICATION	plain internal array assignment
WITHOUT_CLASSIFICATION	Array constructors taking the MetaClass to fulfil MRI Array subclass behaviour
WITHOUT_CLASSIFICATION	NEWOBJ and OBJSETUP equivalent fastest one, for shared arrays, optional objectspace
WITHOUT_CLASSIFICATION	Create global constants and variables
WITHOUT_CLASSIFICATION	not reached
WITHOUT_CLASSIFICATION	not reached
WITHOUT_CLASSIFICATION	Windows does not support these functions, so we won't even try This also matches Ruby behavior for JRUBY-2353.
WITHOUT_CLASSIFICATION	There are two different popular TZ formats: legacy (AST+3:00:00, GMT-3), and newer one (US/Pacific, America/Los_Angeles). This pattern is to detect the legacy TZ format in order to convert it to the newer format understood by Java API.
WITHOUT_CLASSIFICATION	not reached
WITHOUT_CLASSIFICATION	1.9 seems to just do inspect for to_s now
WITHOUT_CLASSIFICATION	possibly should not in object space
WITHOUT_CLASSIFICATION	only fill if there actually will remain trailing storage
WITHOUT_CLASSIFICATION	rb_ary_new4
WITHOUT_CLASSIFICATION	rb_ary_new4
WITHOUT_CLASSIFICATION	from DUP_SETUP
WITHOUT_CLASSIFICATION	If already inspecting, there is no need to register/unregister again.
WITHOUT_CLASSIFICATION	See [ruby-core:17483]
WITHOUT_CLASSIFICATION	See [ruby-core:17483]
WITHOUT_CLASSIFICATION	Satisfy java.util.List interface (for Java integration)
WITHOUT_CLASSIFICATION	pre-set for the sake of terminating recursive calls
WITHOUT_CLASSIFICATION	root fiber
WITHOUT_CLASSIFICATION	GMT+00:00 --> Etc/GMT, see "MRI behavior" comment below.
WITHOUT_CLASSIFICATION	See http:www.gzip.org/zlib/rfc-gzip.html
WITHOUT_CLASSIFICATION	extras flag
WITHOUT_CLASSIFICATION	Zlib::NO_FLUSH
WITHOUT_CLASSIFICATION	...nothing
WITHOUT_CLASSIFICATION	utility method
WITHOUT_CLASSIFICATION	Prepare LoadService and load path
WITHOUT_CLASSIFICATION	================ Instance Methods ================
WITHOUT_CLASSIFICATION	flags 4 bytes of modified time
WITHOUT_CLASSIFICATION	range_each_func(range, step_i, b, e, args);
WITHOUT_CLASSIFICATION	1.8 "include?"
WITHOUT_CLASSIFICATION	any BigInteger is bigger than Fixnum and we don't have FIXABLE
WITHOUT_CLASSIFICATION	beneath are rewritten coercions that reflect MRI logic, the aboves are used only by RubyBigDecimal
WITHOUT_CLASSIFICATION	MRI does it!
WITHOUT_CLASSIFICATION	won't hurt fixnums
WITHOUT_CLASSIFICATION	it won't hurt fixnums
WITHOUT_CLASSIFICATION	RubyClassPathVariable
WITHOUT_CLASSIFICATION	not to be confused with RubyObject's flags
WITHOUT_CLASSIFICATION	second argument is allowed, but ignored (MRI)
WITHOUT_CLASSIFICATION	we are presumably running a precompiled class; load directly
WITHOUT_CLASSIFICATION	terminate; tryCompile will have printed out an error and we're done
WITHOUT_CLASSIFICATION	Used for the 'redo' command
WITHOUT_CLASSIFICATION	do nothing, this iteration restarts
WITHOUT_CLASSIFICATION	recheck condition
WITHOUT_CLASSIFICATION	Get the main threadcontext (gets constructed for us)
WITHOUT_CLASSIFICATION	Construct key services
WITHOUT_CLASSIFICATION	initialize the root of the class hierarchy completely
WITHOUT_CLASSIFICATION	Construct the top-level execution frame and scope for the main thread
WITHOUT_CLASSIFICATION	Initialize all the core classes
WITHOUT_CLASSIFICATION	Initialize the "dummy" class used as a marker
WITHOUT_CLASSIFICATION	Initialize Kernel and include into Object
WITHOUT_CLASSIFICATION	Object is ready, create top self
WITHOUT_CLASSIFICATION	Pre-create all the core classes potentially referenced during startup
WITHOUT_CLASSIFICATION	Math depends on all numeric types
WITHOUT_CLASSIFICATION	depends on IO, FileTest
WITHOUT_CLASSIFICATION	initialize builtin libraries
WITHOUT_CLASSIFICATION	Require in all libraries specified on command line
WITHOUT_CLASSIFICATION	Bootstrap the top of the hierarchy
WITHOUT_CLASSIFICATION	we try to get the classloader that loaded JRuby, falling back on System
WITHOUT_CLASSIFICATION	determine spacing
WITHOUT_CLASSIFICATION	should alter global state
WITHOUT_CLASSIFICATION	For JSR 223 support: see http:scripting.java.net/
WITHOUT_CLASSIFICATION	use this for JRuby-internal finalizers
WITHOUT_CLASSIFICATION	this method is for finalizers registered via ObjectSpace
WITHOUT_CLASSIFICATION	new factory methods ------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	assert internedName == internedName.intern() : internedName + " is not interned";
WITHOUT_CLASSIFICATION	Equivalent of Data_Wrap_Struct
WITHOUT_CLASSIFICATION	default: don't retain
WITHOUT_CLASSIFICATION	ChannelDescriptors opened by sysopen are cached to avoid collection
WITHOUT_CLASSIFICATION	Default objects
WITHOUT_CLASSIFICATION	record separator var, to speed up io ops that use it
WITHOUT_CLASSIFICATION	former java.lang.System concepts now internalized for MVM
WITHOUT_CLASSIFICATION	Java support
WITHOUT_CLASSIFICATION	Parser stats
WITHOUT_CLASSIFICATION	Compilation
WITHOUT_CLASSIFICATION	can't read non-standard properties
WITHOUT_CLASSIFICATION	can't create custom classloaders
WITHOUT_CLASSIFICATION	mutex that controls modifications of user-defined finalizers
WITHOUT_CLASSIFICATION	mutex that controls modifications of internal finalizers
WITHOUT_CLASSIFICATION	A thread pool to use for executing this runtime's Ruby threads
WITHOUT_CLASSIFICATION	A global object lock for class hierarchy mutations
WITHOUT_CLASSIFICATION	initial spaces spaces before "at"
WITHOUT_CLASSIFICATION	event name filename line numbers should be 1-based
WITHOUT_CLASSIFICATION	The method is intentionally not public, since it typically should not be used outside of the core.
WITHOUT_CLASSIFICATION	Note: this field and the following static initializer must be located be in this order!
WITHOUT_CLASSIFICATION	Contains a list of all blocks (as Procs) that should be called when the runtime environment exits.
WITHOUT_CLASSIFICATION	quoted-printable
WITHOUT_CLASSIFICATION	default options
WITHOUT_CLASSIFICATION	iso-2022-jp
WITHOUT_CLASSIFICATION	iso-2022-jp
WITHOUT_CLASSIFICATION	Shift_JIS
WITHOUT_CLASSIFICATION	Shift_JIS
WITHOUT_CLASSIFICATION	EUC-JP
WITHOUT_CLASSIFICATION	EUC-JP
WITHOUT_CLASSIFICATION	UTF-8
WITHOUT_CLASSIFICATION	UTF-8
WITHOUT_CLASSIFICATION	long name option
WITHOUT_CLASSIFICATION	conversion
WITHOUT_CLASSIFICATION	================ Singleton Methods ================
WITHOUT_CLASSIFICATION	string doesn't share any resources
WITHOUT_CLASSIFICATION	string has it's own ByteList, but it's pointing to a shared buffer (byte[])
WITHOUT_CLASSIFICATION	string doesn't have it's own ByteList (values)
WITHOUT_CLASSIFICATION	ENC_CODERANGE_ASCIIONLY
WITHOUT_CLASSIFICATION	rb_enc_str_asciionly_p
WITHOUT_CLASSIFICATION	rb_enc_str_coderange
WITHOUT_CLASSIFICATION	rb_str_hash_cmp
WITHOUT_CLASSIFICATION	Deprecated String construction routines
WITHOUT_CLASSIFICATION	String construction routines by NOT byte[] buffer and NOT making the target String shared
WITHOUT_CLASSIFICATION	rb_str_subseq
WITHOUT_CLASSIFICATION	no need to assign encoding, same bytelist shared
WITHOUT_CLASSIFICATION	if len == 0 then shared empty
WITHOUT_CLASSIFICATION	rb_str_cmp_m
WITHOUT_CLASSIFICATION	we limit to int because ByteBuffer can only allocate int sizes
WITHOUT_CLASSIFICATION	rb_str_buf_append
WITHOUT_CLASSIFICATION	encoding doesn't have to be copied.
WITHOUT_CLASSIFICATION	this really needs to be inlined here
WITHOUT_CLASSIFICATION	must not reallocate
WITHOUT_CLASSIFICATION	Illegal combination
WITHOUT_CLASSIFICATION	use 1.8 impl
WITHOUT_CLASSIFICATION	RubyString aka rb_string_value
WITHOUT_CLASSIFICATION	bang: true, no match, no substitution
WITHOUT_CLASSIFICATION	out of byte range there will be no match for sure
WITHOUT_CLASSIFICATION	len + margin
WITHOUT_CLASSIFICATION	block given
WITHOUT_CLASSIFICATION	block given
WITHOUT_CLASSIFICATION	copy pre-match substr
WITHOUT_CLASSIFICATION	string given
WITHOUT_CLASSIFICATION	hash given
WITHOUT_CLASSIFICATION	This represents left most digit in a set of incremented values? Therefore leftmost numeric must be '1' and not '0' 999 -> 1000, not 999 -> 0000. whereas chars should be zzz -> aaaa and non-alnum byte values should be "\377" -> "\001\000"
WITHOUT_CLASSIFICATION	substring longer than string
WITHOUT_CLASSIFICATION	rb_str_substr
WITHOUT_CLASSIFICATION	nothing
WITHOUT_CLASSIFICATION	nothing
WITHOUT_CLASSIFICATION	rb_str_splice
WITHOUT_CLASSIFICATION	TODO: keep cr TODO: rb_str_splice_0
WITHOUT_CLASSIFICATION	keep cr ?
WITHOUT_CLASSIFICATION	keep cr ?
WITHOUT_CLASSIFICATION	wrapped to \0...\0. search next valid char.
WITHOUT_CLASSIFICATION	only this case affects backrefs
WITHOUT_CLASSIFICATION	only this case affects backrefs
WITHOUT_CLASSIFICATION	modified
WITHOUT_CLASSIFICATION	modified
WITHOUT_CLASSIFICATION	1.8
WITHOUT_CLASSIFICATION	1.8
WITHOUT_CLASSIFICATION	QTRUE
WITHOUT_CLASSIFICATION	retrieve last replacer
WITHOUT_CLASSIFICATION	Check the length every iteration, since the block can modify this string.
WITHOUT_CLASSIFICATION	long size bits in byte
WITHOUT_CLASSIFICATION	from encoding, special-casing ASCII to ASCII
WITHOUT_CLASSIFICATION	to encoding, same special-casing
WITHOUT_CLASSIFICATION	create a lightweight thunk
WITHOUT_CLASSIFICATION	decode from "from" and encode to "to"
WITHOUT_CLASSIFICATION	create a lightweight thunk
WITHOUT_CLASSIFICATION	Kernel is the only Module that doesn't need an implementor
WITHOUT_CLASSIFICATION	no binding given, use (eval)
WITHOUT_CLASSIFICATION	interned, OK for "fast" methods
WITHOUT_CLASSIFICATION	File to be loaded by autoload has already been or is being loaded.
WITHOUT_CLASSIFICATION	rb_cstr_to_dbl case
WITHOUT_CLASSIFICATION	We break if we know this sleep was explicitly woken up/interrupted
WITHOUT_CLASSIFICATION	exec process, create IO with process
WITHOUT_CLASSIFICATION	Zero sleeps forever
WITHOUT_CLASSIFICATION	file given, use it and force it into binding
WITHOUT_CLASSIFICATION	Explicit zero in MRI returns immediately
WITHOUT_CLASSIFICATION	Spurious wakeup-loop
WITHOUT_CLASSIFICATION	adjusts paths started with '/' or '\\', on windows.
WITHOUT_CLASSIFICATION	file not given
WITHOUT_CLASSIFICATION	string to eval
WITHOUT_CLASSIFICATION	binding given, use binding's file
WITHOUT_CLASSIFICATION	?g | boolean | True if file1 has the \CF{setgid} bit
WITHOUT_CLASSIFICATION	bomb out, it's not a binding or a proc
WITHOUT_CLASSIFICATION	Ordering of array traversal not important, just intuitive
WITHOUT_CLASSIFICATION	Catch active, throw for catch to handle
WITHOUT_CLASSIFICATION	No catch active for this throw
WITHOUT_CLASSIFICATION	without full tracing, many events will not fire
WITHOUT_CLASSIFICATION	ignore if it's not a global var
WITHOUT_CLASSIFICATION	MRI behavior: use first byte of string value if len > 0
WITHOUT_CLASSIFICATION	MRI behavior: now check arg count
WITHOUT_CLASSIFICATION	?A | Time | Last access time for file1
WITHOUT_CLASSIFICATION	?b | boolean | True if file1 is a block device
WITHOUT_CLASSIFICATION	?c | boolean | True if file1 is a character device
WITHOUT_CLASSIFICATION	?C | Time | Last change time for file1
WITHOUT_CLASSIFICATION	?d | boolean | True if file1 exists and is a directory
WITHOUT_CLASSIFICATION	?e | boolean | True if file1 exists
WITHOUT_CLASSIFICATION	?f | boolean | True if file1 exists and is a regular file
WITHOUT_CLASSIFICATION	?G | boolean | True if file1 exists and has a group ownership equal to the caller's group
WITHOUT_CLASSIFICATION	?k | boolean | True if file1 exists and has the sticky bit set
WITHOUT_CLASSIFICATION	?M | Time | Last modification time for file1
WITHOUT_CLASSIFICATION	?o | boolean | True if file1 exists and is owned by the caller's effective uid
WITHOUT_CLASSIFICATION	?O | boolean | True if file1 exists and is owned by the caller's real uid
WITHOUT_CLASSIFICATION	?p | boolean | True if file1 exists and is a fifo
WITHOUT_CLASSIFICATION	?r | boolean | True if file1 is readable by the effective uid/gid of the caller
WITHOUT_CLASSIFICATION	?s | int/nil | If file1 has nonzero size, return the size, otherwise nil
WITHOUT_CLASSIFICATION	?S | boolean | True if file1 exists and is a socket
WITHOUT_CLASSIFICATION	?u | boolean | True if file1 has the setuid bit set
WITHOUT_CLASSIFICATION	?x | boolean | True if file1 exists and is executable by the effective uid/gid
WITHOUT_CLASSIFICATION	?X | boolean | True if file1 exists and is executable by the real uid/gid
WITHOUT_CLASSIFICATION	?z | boolean | True if file1 exists and has a zero length
WITHOUT_CLASSIFICATION	?= | boolean | True if the modification times of file1 and file2 are equal
WITHOUT_CLASSIFICATION	?< | boolean | True if the modification time of file1 is prior to that of file2
WITHOUT_CLASSIFICATION	?> | boolean | True if the modification time of file1 is after that of file2
WITHOUT_CLASSIFICATION	?- | boolean | True if file1 and file2 are identical
WITHOUT_CLASSIFICATION	@JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)
WITHOUT_CLASSIFICATION	Error info is per-thread
WITHOUT_CLASSIFICATION	init errorInfo to nil
WITHOUT_CLASSIFICATION	if we're already aborting, we can receive no further mail
WITHOUT_CLASSIFICATION	If this thread is sleeping or stopped, wake it
WITHOUT_CLASSIFICATION	new interrupt, to hopefully wake it out of any blocking IO
WITHOUT_CLASSIFICATION	set to default thread group
WITHOUT_CLASSIFICATION	set to default thread group
WITHOUT_CLASSIFICATION	JRUBY-2380, associate future early so it shows up in Thread.list right away, in case it doesn't run immediately
WITHOUT_CLASSIFICATION	JRUBY-2380, associate thread early so it shows up in Thread.list right away, in case it doesn't run immediately
WITHOUT_CLASSIFICATION	for Thread::start, which does not call the subclass's initialize
WITHOUT_CLASSIFICATION	JRUBY-3568, inherit threadgroup or use default
WITHOUT_CLASSIFICATION	MRI behavior: value given in seconds; converted to Float; less than or equal to zero returns immediately; returns nil
WITHOUT_CLASSIFICATION	If the target thread is sleeping or stopped, wake it
WITHOUT_CLASSIFICATION	We need this loop in order to be able to "unblock" the join call without actually calling interrupt.
WITHOUT_CLASSIFICATION	attempt to decriticalize all if we're the critical thread
WITHOUT_CLASSIFICATION	not valid for "dead" state
WITHOUT_CLASSIFICATION	If the killee thread is the same as the killer thread, just die
WITHOUT_CLASSIFICATION	check for thread events, in case we've been woken up to die
WITHOUT_CLASSIFICATION	check for thread events, in case we've been woken up to die
WITHOUT_CLASSIFICATION	ignore; I don't like doing it, but it seems like we really just need to make all channels non-blocking by default and use select when implementing blocking ops, so if this remains set non-blocking, perhaps it's not such a big deal...
WITHOUT_CLASSIFICATION	can't select, just have to do a blocking call
WITHOUT_CLASSIFICATION	compensate for missing slash after drive letter on windows
WITHOUT_CLASSIFICATION	Create Constants class
WITHOUT_CLASSIFICATION	Create constants for open flags
WITHOUT_CLASSIFICATION	Strip off the O_ prefix, so they become File::RDONLY, and so on
WITHOUT_CLASSIFICATION	Create constants for flock
WITHOUT_CLASSIFICATION	File::Constants module is included in IO.
WITHOUT_CLASSIFICATION	Make sure any existing lock is released before we try and close the file
WITHOUT_CLASSIFICATION	null channel always succeeds for all locking operations
WITHOUT_CLASSIFICATION	Paths which end in "/" or "\\" must be stripped off.
WITHOUT_CLASSIFICATION	Special case for handling ACCMODE, since constantine will generate an invalid value if it is not defined by the platform.
WITHOUT_CLASSIFICATION	Return false here
WITHOUT_CLASSIFICATION	Return false here
WITHOUT_CLASSIFICATION	We're not actually a real file, so we can't flock
WITHOUT_CLASSIFICATION	Should we do anything?
WITHOUT_CLASSIFICATION	File class methods
WITHOUT_CLASSIFICATION	MRI-compatible basename handling for windows drive letter paths
WITHOUT_CLASSIFICATION	strip c: away from relative-pathed name
WITHOUT_CLASSIFICATION	C:\ is returned unchanged
WITHOUT_CLASSIFICATION	-1 no match; 0 it is dot file not extension
WITHOUT_CLASSIFICATION	trim trailing slashes
WITHOUT_CLASSIFICATION	Dot is not at beginning and not at end of filename.
WITHOUT_CLASSIFICATION	Handle ~user paths
WITHOUT_CLASSIFICATION	compensate for missing slash after drive letter on windows
WITHOUT_CLASSIFICATION	Include additional path separator (so that dirname of "C:\file.txt" is "C:\", not "C:")
WITHOUT_CLASSIFICATION	FNFException can be thrown in both cases, when the file is not found, or when permission is denied.
WITHOUT_CLASSIFICATION	No directory delimeter. Rest of string is username
WITHOUT_CLASSIFICATION	If there's a second argument, it's the path to which the first argument is relative.
WITHOUT_CLASSIFICATION	Handle ~user paths.
WITHOUT_CLASSIFICATION	If there's no second argument, simply use the working directory of the runtime.
WITHOUT_CLASSIFICATION	Find out which string to check.
WITHOUT_CLASSIFICATION	Single '~' as whole path to expand
WITHOUT_CLASSIFICATION	Count number of extra slashes in the beginning of the string.
WITHOUT_CLASSIFICATION	'~user/...' as path to expand
WITHOUT_CLASSIFICATION	'~/...' as path to expand
WITHOUT_CLASSIFICATION	Prepare a string with the same number of redundant slashes so that we easily can prepend it to the result.
WITHOUT_CLASSIFICATION	If there are N slashes, then we want N-1.
WITHOUT_CLASSIFICATION	no canonical path yet or length is zero, and we have a / followed by a dot...
WITHOUT_CLASSIFICATION	we don't have another slash after this, so replace /. with /
WITHOUT_CLASSIFICATION	we do have another slash; omit both / and . (JRUBY-1606)
WITHOUT_CLASSIFICATION	do nothing, we should not delete the drive letter
WITHOUT_CLASSIFICATION	rb: check_modifiable
WITHOUT_CLASSIFICATION	rb: readable
WITHOUT_CLASSIFICATION	rename is successful
WITHOUT_CLASSIFICATION	rename via Java API call wasn't successful, let's try some tricks, similar to MRI
WITHOUT_CLASSIFICATION	try to rename one more time
WITHOUT_CLASSIFICATION	Can we produce IOError which bypasses a close?
WITHOUT_CLASSIFICATION	Fast path since JNA stat is about 10x slower than this
WITHOUT_CLASSIFICATION	RubyContinuation
WITHOUT_CLASSIFICATION	Constructor for internal usage (mainly for Array#|, Array#&, Array#- and Array#uniq) it doesn't initialize ifNone field
WITHOUT_CLASSIFICATION	16 ?
WITHOUT_CLASSIFICATION	generation count for O(1) clears
WITHOUT_CLASSIFICATION	size + 1;
WITHOUT_CLASSIFICATION	suboptimal for large hashes (> 1073741824 + 85 entries) not very likely to happen
WITHOUT_CLASSIFICATION	------------------------------
WITHOUT_CLASSIFICATION	------------------------------
WITHOUT_CLASSIFICATION	put implementation
WITHOUT_CLASSIFICATION	get implementation
WITHOUT_CLASSIFICATION	specialized for value
WITHOUT_CLASSIFICATION	delete implementation
WITHOUT_CLASSIFICATION	n.b. we need to recompute the hash in case the key object was modified
WITHOUT_CLASSIFICATION	============================ End of hash internals ============================
WITHOUT_CLASSIFICATION	================ Instance Methods ================
WITHOUT_CLASSIFICATION	update the hash value
WITHOUT_CLASSIFICATION	other hash does not contain key
WITHOUT_CLASSIFICATION	rb_yield_values(2,...) equivalent
WITHOUT_CLASSIFICATION	Satisfy java.util.Set interface (for Java integration)
WITHOUT_CLASSIFICATION	remain where we are
WITHOUT_CLASSIFICATION	We use file test since it is faster than a stat; also euid == uid in Java always
WITHOUT_CLASSIFICATION	default: don't retain
WITHOUT_CLASSIFICATION	once hasNext has been called, we commit to next() returning the entry it found, even if it were subsequently deleted
WITHOUT_CLASSIFICATION	Not exposed by filetest, but so similiar in nature that it is stored here
WITHOUT_CLASSIFICATION	We do both writable and writable_real through the same method because in our java process effective and real userid will always be the same.
WITHOUT_CLASSIFICATION	first try as directory
WITHOUT_CLASSIFICATION	next as regular file
WITHOUT_CLASSIFICATION	We only want IO objects with valid streams (better to error now).
WITHOUT_CLASSIFICATION	NIO-based
WITHOUT_CLASSIFICATION	NIO-based
WITHOUT_CLASSIFICATION	Stream-based
WITHOUT_CLASSIFICATION	special constructor that accepts stream, not channel
WITHOUT_CLASSIFICATION	We use FILE versus IO to match T_FILE in MRI.
WITHOUT_CLASSIFICATION	Constants for seek
WITHOUT_CLASSIFICATION	confirm we're not reopening self's channel
WITHOUT_CLASSIFICATION	check if we're a stdio IO, and ensure we're not badly mutilated
WITHOUT_CLASSIFICATION	dup2 new fd into self to preserve fileno and references to it
WITHOUT_CLASSIFICATION	re-register, since fileno points at something new now
WITHOUT_CLASSIFICATION	re-register the descriptor
WITHOUT_CLASSIFICATION	since we're not actually duping the incoming channel into our handler, we need to copy the original sync behavior from the other handler
WITHOUT_CLASSIFICATION	re-register
WITHOUT_CLASSIFICATION	A potentially previously close IO is being 'reopened'.
WITHOUT_CLASSIFICATION	Ensure that separator is valid otherwise give it the default paragraph separator.
WITHOUT_CLASSIFICATION	loop until we see the nth separator char
WITHOUT_CLASSIFICATION	if we hit EOF or reached limit then we're done
WITHOUT_CLASSIFICATION	this is for a range check, near as I can tell
WITHOUT_CLASSIFICATION	IO class methods.
WITHOUT_CLASSIFICATION	use original modes
WITHOUT_CLASSIFICATION	See if we already have this descriptor open. If so then we can mostly share the handler (keep open file, but possibly change the mode).
WITHOUT_CLASSIFICATION	redundant, done above as well
WITHOUT_CLASSIFICATION	MRI behavior: swallow StandardErorrs
WITHOUT_CLASSIFICATION	-1 == don't set permissions
WITHOUT_CLASSIFICATION	isRetained=true
WITHOUT_CLASSIFICATION	This appears to be some windows-only mode. On a java platform this is a no-op
WITHOUT_CLASSIFICATION	if not sync, we switch to write buffered mode
WITHOUT_CLASSIFICATION	Throw bad file descriptor is we can not read on supplied descriptor.
WITHOUT_CLASSIFICATION	Everything written
WITHOUT_CLASSIFICATION	return len - n;
WITHOUT_CLASSIFICATION	Claims conversion is done via 'to_s' in docs.
WITHOUT_CLASSIFICATION	Of course this isn't particularly useful.
WITHOUT_CLASSIFICATION	Must be back on first line on rewind.
WITHOUT_CLASSIFICATION	Register the new descriptor
WITHOUT_CLASSIFICATION	cleanup, raising errors if any
WITHOUT_CLASSIFICATION	hmmmm
WITHOUT_CLASSIFICATION	I believe Ruby bails out with a "bug" if closing fails
WITHOUT_CLASSIFICATION	Do nothing. FD_CLOEXEC has no meaning in JVM since we cannot really exec. And why the hell does webrick pass this in as a first argument!!!!!
WITHOUT_CLASSIFICATION	Do nothing. FD_CLOEXEC has no meaning in JVM since we cannot really exec.
WITHOUT_CLASSIFICATION	Length to read
WITHOUT_CLASSIFICATION	String/Buffer to read it into
WITHOUT_CLASSIFICATION	cryptic for the uninitiated...
WITHOUT_CLASSIFICATION	select until read is ready
WITHOUT_CLASSIFICATION	ByteList buffer = null;
WITHOUT_CLASSIFICATION	buffer = str.getByteList();
WITHOUT_CLASSIFICATION	READ_CHECK from MRI io.c
WITHOUT_CLASSIFICATION	rb: writable
WITHOUT_CLASSIFICATION	READ_CHECK from MRI io.c
WITHOUT_CLASSIFICATION	All errors to sysread should be SystemCallErrors, but on a closed stream Ruby returns an IOError. Java throws same exception for all errors so we resort to this hack...
WITHOUT_CLASSIFICATION	TODO: read into buffer using all the fread logic int read = openFile.getMainStream().fread(buffer);
WITHOUT_CLASSIFICATION	truncate buffer string to zero, if provided
WITHOUT_CLASSIFICATION	TODO: READ_CHECK from MRI
WITHOUT_CLASSIFICATION	class methods for IO
WITHOUT_CLASSIFICATION	save blocking state
WITHOUT_CLASSIFICATION	write
WITHOUT_CLASSIFICATION	Java's select doesn't do anything about this, so we leave it be.
WITHOUT_CLASSIFICATION	make all sockets blocking as configured again close unregisters all channels, so we can safely reset blocking modes
WITHOUT_CLASSIFICATION	FIXME: process options
WITHOUT_CLASSIFICATION	Enebo: annotation processing forced me to do pangea method here...
WITHOUT_CLASSIFICATION	NIO based pipe
WITHOUT_CLASSIFICATION	not using remove(Object) here to avoid the equals() call
WITHOUT_CLASSIFICATION	raise will also wake the thread from selection
WITHOUT_CLASSIFICATION	may need to handle ENC_CODERANGE_BROKEN
WITHOUT_CLASSIFICATION	TODO: rb_usascii_str_new2
WITHOUT_CLASSIFICATION	If we know what method was being called, strip everything before the call. This hides the JRuby and reflection internals.
WITHOUT_CLASSIFICATION	The class of this object
WITHOUT_CLASSIFICATION	zeroed by jvm
WITHOUT_CLASSIFICATION	objectClass.defineAnnotatedMethods(BasicObjectMethods.class);
WITHOUT_CLASSIFICATION	JRUBY-4113: callers should not call setTaint on immediate objects
WITHOUT_CLASSIFICATION	rb_class_boot
WITHOUT_CLASSIFICATION	6:tags 16:addr 1:eos
WITHOUT_CLASSIFICATION	1.9 rb_check_to_integer
WITHOUT_CLASSIFICATION	for interface impls
WITHOUT_CLASSIFICATION	We're cloning ourselves, so we know the result should be a RubyObject
WITHOUT_CLASSIFICATION	Methods of the Object class (rb_obj_):
WITHOUT_CLASSIFICATION	can't use -v and stdin
WITHOUT_CLASSIFICATION	include its parent (and in turn that module's parents)
WITHOUT_CLASSIFICATION	Equivalent of Data_Get_Struct This will first check that the object in question is actually a T_DATA equivalent.
WITHOUT_CLASSIFICATION	COMMON VARIABLE METHODS
WITHOUT_CLASSIFICATION	INTERNAL VARIABLE METHODS
WITHOUT_CLASSIFICATION	INSTANCE VARIABLE API METHODS
WITHOUT_CLASSIFICATION	Struct methods
WITHOUT_CLASSIFICATION	runtime.getWarnings().warn(ID.STRUCT_CONSTANT_REDEFINED, frame.getFile(), frame.getLine(), "redefining constant Struct::" + name, name);
WITHOUT_CLASSIFICATION	define access methods.
WITHOUT_CLASSIFICATION	if we are storing a name as well, index is one too high for values
WITHOUT_CLASSIFICATION	Struct bodies should be public by default, so set block visibility to public. JRUBY-1185.
WITHOUT_CLASSIFICATION	For binding purposes on the newly created struct types
WITHOUT_CLASSIFICATION	OBJ_INFECT
WITHOUT_CLASSIFICATION	These call assume ThreadContext = receiver.getRuntime().getCurrentContext()
WITHOUT_CLASSIFICATION	Execute iterateMethod again.
WITHOUT_CLASSIFICATION	@param nv number of times to cycle or -1 to cycle indefinitely
WITHOUT_CLASSIFICATION	Atomic ?
WITHOUT_CLASSIFICATION	Atomic ?
WITHOUT_CLASSIFICATION	MUST NOT be used across threads
WITHOUT_CLASSIFICATION	superClass may be null.
WITHOUT_CLASSIFICATION	Containing class...The parent of Object is null. Object should always be last in chain.
WITHOUT_CLASSIFICATION	ClassId is the name of the class/module sans where it is located. If it is null, then it an anonymous class.
WITHOUT_CLASSIFICATION	ClassProviders return Java class/module (in #defineOrGetClassUnder and #defineOrGetModuleUnder) when class/module is opened using colon syntax.
WITHOUT_CLASSIFICATION	update superclass reference
WITHOUT_CLASSIFICATION	Make sure the module we include does not already exist
WITHOUT_CLASSIFICATION	MRI checks all types first:
WITHOUT_CLASSIFICATION	we need full traces, use default (slow) populator
WITHOUT_CLASSIFICATION	module/singleton methods are all defined public
WITHOUT_CLASSIFICATION	See if module is in chain...Cannot match against itself so start at superClass.
WITHOUT_CLASSIFICATION	We can safely reference methods here instead of doing getMethods() since if we are adding we are not using a IncludedModuleWrapper.
WITHOUT_CLASSIFICATION	we grab serial number first; the worst that will happen is we cache a later update with an earlier serial number, which would just flush anyway
WITHOUT_CLASSIFICATION	update all hierarchies into which this module has been included
WITHOUT_CLASSIFICATION	This method is intended only for defining new classes in Ruby code, so it uses the allocator of the specified superclass or default to the Object allocator. It should NOT be used to define classes that require a native allocator.
WITHOUT_CLASSIFICATION	need to skip IncludedModuleWrappers
WITHOUT_CLASSIFICATION	superClazz = null;
WITHOUT_CLASSIFICATION	reopen a java class
WITHOUT_CLASSIFICATION	This method is intended only for defining new modules in Ruby code
WITHOUT_CLASSIFICATION	reopen a java module
WITHOUT_CLASSIFICATION	FIXME warning
WITHOUT_CLASSIFICATION	FIXME warning
WITHOUT_CLASSIFICATION	a normal block passed to define_method changes to do arity checking; make it a lambda
WITHOUT_CLASSIFICATION	for zsupers in define_method (blech!) we tell the proc scope to act as the "argument" scope
WITHOUT_CLASSIFICATION	just using required is broken...but no more broken than before zsuper refactoring
WITHOUT_CLASSIFICATION	class and module bodies default to public, so make the block's visibility public. JRUBY-1185.
WITHOUT_CLASSIFICATION	Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed
WITHOUT_CLASSIFICATION	MRI error message says Class, even though Module is ok
WITHOUT_CLASSIFICATION	scan class hierarchy for module
WITHOUT_CLASSIFICATION	Module class methods
WITHOUT_CLASSIFICATION	Note: we change current frames visibility here because the methods which call this method are all "fast" (e.g. they do not created their own frame).
WITHOUT_CLASSIFICATION	next in hierarchy is an included version of the module we're attempting, so we skip including it
WITHOUT_CLASSIFICATION	if we haven't encountered a real superclass, use the found module as the new inclusion point
WITHOUT_CLASSIFICATION	build a list of all modules to consider for inclusion
WITHOUT_CLASSIFICATION	if the insertion point is a class, update subclass lists
WITHOUT_CLASSIFICATION	if there's a non-null superclass, we're including into a normal class hierarchy; update subclass relationships to avoid stale parent/child relationships
WITHOUT_CLASSIFICATION	CLASS VARIABLE RUBY METHODS
WITHOUT_CLASSIFICATION	CONSTANT RUBY METHODS
WITHOUT_CLASSIFICATION	Note: includes part of fix for JRUBY-1339
WITHOUT_CLASSIFICATION	CLASS VARIABLE API METHODS
WITHOUT_CLASSIFICATION	Wrong Parameter ?
WITHOUT_CLASSIFICATION	not actually called anywhere (all known uses call the fast version)
WITHOUT_CLASSIFICATION	Not that is loaded loop around to resolve it next pass
WITHOUT_CLASSIFICATION	if adding a module under a constant name, set that module's basename to the constant name
WITHOUT_CLASSIFICATION	Fix for JRUBY-1339 - search hierarchy for constant
WITHOUT_CLASSIFICATION	returns the stored value without processing undefs (autoloads)
WITHOUT_CLASSIFICATION	removes and returns the stored value without processing undefs (autoloads)
WITHOUT_CLASSIFICATION	we can't rename a file while it's open in windows
WITHOUT_CLASSIFICATION	reopen
WITHOUT_CLASSIFICATION	ARGF methods
WITHOUT_CLASSIFICATION	data.currentFile.callMethod(context, "lineno=", line);
WITHOUT_CLASSIFICATION	one optional, one required args
WITHOUT_CLASSIFICATION	one optional and no required args
WITHOUT_CLASSIFICATION	try to get errno value out of the class
WITHOUT_CLASSIFICATION	we got a valid errno value
WITHOUT_CLASSIFICATION	Ensure we're not running on GCJ, since it's not supported and leads to weird errors
WITHOUT_CLASSIFICATION	print out as a nice Ruby backtrace
WITHOUT_CLASSIFICATION	produce a nicer error since Rubyists aren't used to seeing this
WITHOUT_CLASSIFICATION	set thread context JRuby classloader here, for the main thread
WITHOUT_CLASSIFICATION	can't set TC classloader
WITHOUT_CLASSIFICATION	no script to run, return success below
WITHOUT_CLASSIFICATION	Skip /usr/bin/env if it's first
WITHOUT_CLASSIFICATION	Skip any assignments if /usr/bin/env is in play
WITHOUT_CLASSIFICATION	Skip any commandline args if /usr/bin/env is in play
WITHOUT_CLASSIFICATION	ignore error
WITHOUT_CLASSIFICATION	COMMON CONSTANT / CVAR METHODS
WITHOUT_CLASSIFICATION	INTERNAL MODULE VARIABLE API METHODS
WITHOUT_CLASSIFICATION	LOW-LEVEL CONSTANT INTERFACE fetch/store/list constants for this module
WITHOUT_CLASSIFICATION	odd
WITHOUT_CLASSIFICATION	JRubyClient
WITHOUT_CLASSIFICATION	x = mantissa 2 exponent Where mantissa is in the range of [.5, 1)
WITHOUT_CLASSIFICATION	Make mantissa same sign so we only have one code path.
WITHOUT_CLASSIFICATION	Increase value to hit lower range.
WITHOUT_CLASSIFICATION	r = x 2 y
WITHOUT_CLASSIFICATION	0!
WITHOUT_CLASSIFICATION	1!
WITHOUT_CLASSIFICATION	2!
WITHOUT_CLASSIFICATION	3!
WITHOUT_CLASSIFICATION	4!
WITHOUT_CLASSIFICATION	5!
WITHOUT_CLASSIFICATION	6!
WITHOUT_CLASSIFICATION	7!
WITHOUT_CLASSIFICATION	8!
WITHOUT_CLASSIFICATION	9!
WITHOUT_CLASSIFICATION	11!
WITHOUT_CLASSIFICATION	12!
WITHOUT_CLASSIFICATION	13!
WITHOUT_CLASSIFICATION	15!
WITHOUT_CLASSIFICATION	16!
WITHOUT_CLASSIFICATION	17!
WITHOUT_CLASSIFICATION	19!
WITHOUT_CLASSIFICATION	20!
WITHOUT_CLASSIFICATION	21!
WITHOUT_CLASSIFICATION	Static constants
WITHOUT_CLASSIFICATION	Clean-up string representation so that it could be understood by Java's BigDecimal. Not terribly efficient for now. 1. MRI allows d and D as exponent separators
WITHOUT_CLASSIFICATION	2. MRI allows underscores anywhere
WITHOUT_CLASSIFICATION	3. MRI ignores the trailing junk
WITHOUT_CLASSIFICATION	MRI behavior: -0 and +0 are two different things
WITHOUT_CLASSIFICATION	Java and MRI definitions of modulo are different.
WITHOUT_CLASSIFICATION	Java and MRI definitions of remainder are the same.
WITHOUT_CLASSIFICATION	Note: MRI has a very non-trivial way of calculating the precision, so we use very simple approximation here:
WITHOUT_CLASSIFICATION	Iteration variables, for the square root x and the reciprocal v initial x: x0 ~ sqrt() initial v: v0 = 1/(2x)
WITHOUT_CLASSIFICATION	it doesn't handle special cases
WITHOUT_CLASSIFICATION	TODO: why this: .setResult();
WITHOUT_CLASSIFICATION	integer division
WITHOUT_CLASSIFICATION	MRI behavior: "If digits is 0, the result is the same as the / operator."
WITHOUT_CLASSIFICATION	rounding neccessary
WITHOUT_CLASSIFICATION	rounding neccessary
WITHOUT_CLASSIFICATION	Java and MRI definitions of divmod are different.
WITHOUT_CLASSIFICATION	JRUBY-914: Java 1.4 BigDecimal does not allow a negative scale, so we have to simulate it
WITHOUT_CLASSIFICATION	shift the decimal point just to the right of the digit to be rounded to (divide by 10(abs(scale))) -1 -> 10's digit, -2 -> 100's digit, etc.
WITHOUT_CLASSIFICATION	...round to that digit
WITHOUT_CLASSIFICATION	...and shift the result back to the left (multiply by 10(abs(scale)))
WITHOUT_CLASSIFICATION	this relies on the Ruby rounding enumerations == Java ones, which they (currently) all are
WITHOUT_CLASSIFICATION	sign
WITHOUT_CLASSIFICATION	significant digits and exponent
WITHOUT_CLASSIFICATION	normalize the value
WITHOUT_CLASSIFICATION	base
WITHOUT_CLASSIFICATION	NOTE: MRI's sqrt precision is limited by 100, but we allow values more than 100.
WITHOUT_CLASSIFICATION	just in case, add a bit of extra precision
WITHOUT_CLASSIFICATION	eh?!
WITHOUT_CLASSIFICATION	Note: #fix has only no-arg form, but truncate allows optional parameter.
WITHOUT_CLASSIFICATION	General number and precision checking
WITHOUT_CLASSIFICATION	the requested precision
WITHOUT_CLASSIFICATION	Proc class
WITHOUT_CLASSIFICATION	.append(" -x[directory] strip off text before #!ruby line and perhaps cd to directory\n")
WITHOUT_CLASSIFICATION	even shift.. ..floors to 62 or 63 bit BigInteger
WITHOUT_CLASSIFICATION	5 -> 2, -5 -> -3 need half a scale more..
WITHOUT_CLASSIFICATION	..where 100 -> 10 shifts the scale
WITHOUT_CLASSIFICATION	Initial x - use double root - multiply by halfBack to unshift - set new scale
WITHOUT_CLASSIFICATION	x0 ~ sqrt()
WITHOUT_CLASSIFICATION	for prec 15 root x0 must surely be OK return small prec roots without iterations
WITHOUT_CLASSIFICATION	Initial v - the reciprocal v0 = 1/(2x)
WITHOUT_CLASSIFICATION	Collect iteration precisions beforehand
WITHOUT_CLASSIFICATION	assume nInit = 16 <= prec
WITHOUT_CLASSIFICATION	The loop of "Square Root by Coupled Newton Iteration"
WITHOUT_CLASSIFICATION	Increase precision - next iteration supplies n exact digits
WITHOUT_CLASSIFICATION	Next x e = d - x^2
WITHOUT_CLASSIFICATION	x += ev ~ sqrt()
WITHOUT_CLASSIFICATION	root x is ready!
WITHOUT_CLASSIFICATION	Next v g = 1 - 2xv
WITHOUT_CLASSIFICATION	v += gv ~ 1/2/sqrt()
WITHOUT_CLASSIFICATION	RubyBigdecimal
WITHOUT_CLASSIFICATION	c: bind_eval
WITHOUT_CLASSIFICATION	================ Module Methods ================
WITHOUT_CLASSIFICATION	from CommandlineParser
WITHOUT_CLASSIFICATION	This property is a Boolean, to allow three values, so it can match MRI's nil, false and true
WITHOUT_CLASSIFICATION	default ClassCache using jitMax as a soft upper bound
WITHOUT_CLASSIFICATION	Until we get a little more solid on 1.9 support we will only run interpreted mode
WITHOUT_CLASSIFICATION	Setting the loader needs to reset the class cache
WITHOUT_CLASSIFICATION	try the normal property first
WITHOUT_CLASSIFICATION	verify it if it's there
WITHOUT_CLASSIFICATION	verify it if it's there
WITHOUT_CLASSIFICATION	try loading from classloader resources
WITHOUT_CLASSIFICATION	otherwise fall back on system temp location
WITHOUT_CLASSIFICATION	We require the home directory to be absolute
WITHOUT_CLASSIFICATION	consume the file name
WITHOUT_CLASSIFICATION	Specify something that can't separate
WITHOUT_CLASSIFICATION	try cwd first
WITHOUT_CLASSIFICATION	ruby interpreter compatibilty Usage: ruby [switches] [--] [programfile] [arguments])
WITHOUT_CLASSIFICATION	KCode.NONE is used because KCODE does not affect parse in Ruby 1.8 if Ruby 2.0 encoding pragmas are implemented, this will need to change
WITHOUT_CLASSIFICATION	@JRubyMethod(name = "complex?")
WITHOUT_CLASSIFICATION	@JRubyMethod(name = "exact?")
WITHOUT_CLASSIFICATION	@JRubyMethod(name = "inexact?")
WITHOUT_CLASSIFICATION	symbol string must be interned
WITHOUT_CLASSIFICATION	assert internedSymbol == internedSymbol.intern() : internedSymbol + " is not interned";
WITHOUT_CLASSIFICATION	Symbol class methods.
WITHOUT_CLASSIFICATION	TODO: 1.9 rb_enc_symname_p
WITHOUT_CLASSIFICATION	This is needed to unpack stuff
WITHOUT_CLASSIFICATION	we already confirmed above that length > 0
WITHOUT_CLASSIFICATION	must be power of 2!
WITHOUT_CLASSIFICATION	note all fields are final -- rehash creates new entries when necessary. as documented in java.util.concurrent.ConcurrentHashMap.java, that will statistically affect only a small percentage (< 20%) of entries for a given rehash.
WITHOUT_CLASSIFICATION	assert internedName == internedName.intern() : internedName + " is not interned";
WITHOUT_CLASSIFICATION	try lookup again under lock
WITHOUT_CLASSIFICATION	try lookup again under lock
WITHOUT_CLASSIFICATION	write-volatile
WITHOUT_CLASSIFICATION	write-volatile
WITHOUT_CLASSIFICATION	backwards-compatibility, but threadsafe now
WITHOUT_CLASSIFICATION	Single node on list
WITHOUT_CLASSIFICATION	Reuse trailing consecutive sequence at same slot
WITHOUT_CLASSIFICATION	Clone all remaining nodes
WITHOUT_CLASSIFICATION	Check the length every iteration, since the block can modify this string.
WITHOUT_CLASSIFICATION	we set scope-aware to true to force heap-based locals
WITHOUT_CLASSIFICATION	not so backwards-compatible here, but no one should have been calling this anyway.
WITHOUT_CLASSIFICATION	Profile
WITHOUT_CLASSIFICATION	static private final String TRANSLIT = "translit";
WITHOUT_CLASSIFICATION	treat start and end as start...end for end >= 0, start..end for end < 0
WITHOUT_CLASSIFICATION	invalid ranges result in an empty string
WITHOUT_CLASSIFICATION	Methods of the Nil Class (nil_):
WITHOUT_CLASSIFICATION	Has read/write been closed or is it still open for business
WITHOUT_CLASSIFICATION	Support IO modes that this object was opened with
WITHOUT_CLASSIFICATION	must let original string know we're modifying, so shared buffers aren't damaged
WITHOUT_CLASSIFICATION	reset the state
WITHOUT_CLASSIFICATION	Tainting here if we ever want it. (secure 4)
WITHOUT_CLASSIFICATION	rb_match_busy
WITHOUT_CLASSIFICATION	str is frozen
WITHOUT_CLASSIFICATION	MRI also does a pointer comparison here
WITHOUT_CLASSIFICATION	JRubyServer
WITHOUT_CLASSIFICATION	Class.allocate object is not allocatable before it is initialized
WITHOUT_CLASSIFICATION	boot the Object class
WITHOUT_CLASSIFICATION	Methods of the Object class (rb_obj_):
WITHOUT_CLASSIFICATION	update superclass reference
WITHOUT_CLASSIFICATION	undo check
WITHOUT_CLASSIFICATION	This is a non-standard method; have we decided to start extending Ruby? classClass.defineFastMethod("subclasses", callbackFactory.getFastOptMethod("subclasses"));
WITHOUT_CLASSIFICATION	boot the Module and Class classes
WITHOUT_CLASSIFICATION	this is the only case it might be null here (in MetaClass construction)
WITHOUT_CLASSIFICATION	use parent's marshal
WITHOUT_CLASSIFICATION	use parent's marshal
WITHOUT_CLASSIFICATION	could be pulled down to RubyClass in future rb_class_boot
WITHOUT_CLASSIFICATION	remove us from old superclass's child classes
WITHOUT_CLASSIFICATION	add us to new superclass's child classes
WITHOUT_CLASSIFICATION	update all subclasses
WITHOUT_CLASSIFICATION	fields to hold Ruby and RubyClass references
WITHOUT_CLASSIFICATION	static initializing method
WITHOUT_CLASSIFICATION	standard constructor that accepts Ruby, RubyClass
WITHOUT_CLASSIFICATION	no-arg constructor using static references to Ruby and RubyClass
WITHOUT_CLASSIFICATION	non-signature signature with just IRubyObject
WITHOUT_CLASSIFICATION	indices for temp values
WITHOUT_CLASSIFICATION	self method name
WITHOUT_CLASSIFICATION	the default allocator
WITHOUT_CLASSIFICATION	Equivalent of T_DATA
WITHOUT_CLASSIFICATION	do nothing, leave empty
WITHOUT_CLASSIFICATION	Double.MAX_EXPONENT since Java 1.6
WITHOUT_CLASSIFICATION	================ Singleton Methods ================
WITHOUT_CLASSIFICATION	Ruby uses Qnil here, we use "dummy" because we need a class
WITHOUT_CLASSIFICATION	Make sure all arguments are modules before calling the callbacks
WITHOUT_CLASSIFICATION	MRI extends in order from last to first
WITHOUT_CLASSIFICATION	NOTE: Serialization is primarily supported for testing purposes, and there is no general guarantee that serialization will work correctly. Specifically, instance variables pointing at symbols, threads, modules, classes, and other unserializable types are not detected.
WITHOUT_CLASSIFICATION	write out ivar count followed by name/value pairs
WITHOUT_CLASSIFICATION	rest in ivar count followed by name/value pairs
WITHOUT_CLASSIFICATION	0x3fff_ffff -0x4000_0000
WITHOUT_CLASSIFICATION	a gotcha
WITHOUT_CLASSIFICATION	Java / and % are not the same as ruby
WITHOUT_CLASSIFICATION	A gotcha for Long.MIN_VALUE: value = -value
WITHOUT_CLASSIFICATION	Piece of mri rb_to_id
WITHOUT_CLASSIFICATION	Java Doubles are 64 bit long:
WITHOUT_CLASSIFICATION	Double.MAX_EXPONENT since Java 1.6
WITHOUT_CLASSIFICATION	don't override Numeric#div !
WITHOUT_CLASSIFICATION	Modelled after c ruby implementation (java /,% not same as ruby)
WITHOUT_CLASSIFICATION	MRI behavior:
WITHOUT_CLASSIFICATION	Numeric.equal
WITHOUT_CLASSIFICATION	provider is not available
WITHOUT_CLASSIFICATION	bouncy castle doesn't support algorithm
WITHOUT_CLASSIFICATION	fall back to system JCA providers
WITHOUT_CLASSIFICATION	RubyDigest
WITHOUT_CLASSIFICATION	ENEBO: Can these be fast?
WITHOUT_CLASSIFICATION	synchronize on the RubyThread for threadgroup updates
WITHOUT_CLASSIFICATION	we only add live threads
WITHOUT_CLASSIFICATION	use same ClassIndex as metaclass, since we're technically still of that type
WITHOUT_CLASSIFICATION	handle everything after -- as arguments to the jruby process
WITHOUT_CLASSIFICATION	JRubyService
WITHOUT_CLASSIFICATION	while
WITHOUT_CLASSIFICATION	\OOO
WITHOUT_CLASSIFICATION	CRuby uses sprintf(buf, "%.g", FLOAT_DIG, d); This pattern adjusts the output of String.pattern("%g") to mimic the C version.
WITHOUT_CLASSIFICATION	mask off "once" flag
WITHOUT_CLASSIFICATION	used only by the compiler/interpreter (will set the literal flag)
WITHOUT_CLASSIFICATION	internal usage (Complex/Rational)
WITHOUT_CLASSIFICATION	silent ?
WITHOUT_CLASSIFICATION	\xHH
WITHOUT_CLASSIFICATION	\M-X, \M-\C-X, \M-\cX
WITHOUT_CLASSIFICATION	\C-X, \C-\M-X
WITHOUT_CLASSIFICATION	\cX, \c\M-X
WITHOUT_CLASSIFICATION	\O, \OO, \OOO or backref
WITHOUT_CLASSIFICATION	MBCLEN_NEEDMORE_P
WITHOUT_CLASSIFICATION	MBCLEN_INVALID_P
WITHOUT_CLASSIFICATION	Unicode is can be only 21 bits long, int is enough
WITHOUT_CLASSIFICATION	Surrogates
WITHOUT_CLASSIFICATION	do not load the class if not used
WITHOUT_CLASSIFICATION	\0, \0O, \0OO
WITHOUT_CLASSIFICATION	\xHH
WITHOUT_CLASSIFICATION	\C-X, \C-\M-X
WITHOUT_CLASSIFICATION	\M-X, \M-\C-X, \M-\cX
WITHOUT_CLASSIFICATION	\\u{H HH HHH HHHH HHHHH HHHHHH ...}
WITHOUT_CLASSIFICATION	\\uHHHH
WITHOUT_CLASSIFICATION	\p{Hiragana}
WITHOUT_CLASSIFICATION	inner switch
WITHOUT_CLASSIFICATION	newInstance here
WITHOUT_CLASSIFICATION	rb_reg_raise
WITHOUT_CLASSIFICATION	rb_reg_desc
WITHOUT_CLASSIFICATION	rb_enc_reg_raise
WITHOUT_CLASSIFICATION	rb_enc_reg_error_desc
WITHOUT_CLASSIFICATION	rb_reg_initialize_str
WITHOUT_CLASSIFICATION	rb_reg_initialize
WITHOUT_CLASSIFICATION	JRUBY-3625: delay setting backref until the MatchData is completely initialized
WITHOUT_CLASSIFICATION	rb_reg_expr_str
WITHOUT_CLASSIFICATION	option_to_str
WITHOUT_CLASSIFICATION	Don't initialize with class Don't put in object space and don't taint
WITHOUT_CLASSIFICATION	args should be before block
WITHOUT_CLASSIFICATION	args should be at end
WITHOUT_CLASSIFICATION	minus one more for IRubyObject[]
WITHOUT_CLASSIFICATION	minus one more for IRubyObject[]
WITHOUT_CLASSIFICATION	skip anything not related to jruby
WITHOUT_CLASSIFICATION	start a new populator
WITHOUT_CLASSIFICATION	check for frame field reads or writes
WITHOUT_CLASSIFICATION	add all names for this annotation
WITHOUT_CLASSIFICATION	no annotated methods found, skip
WITHOUT_CLASSIFICATION	write out a static initializer for frame names, so it only fires once
WITHOUT_CLASSIFICATION	single method, use normal logic
WITHOUT_CLASSIFICATION	multimethod, new logic
WITHOUT_CLASSIFICATION	declared type returns the qualified name without $ for inner classes!!!
WITHOUT_CLASSIFICATION	inner class, use $ to delimit
WITHOUT_CLASSIFICATION	RubyModule singletonClass = module.getSingletonClass();
WITHOUT_CLASSIFICATION	}
WITHOUT_CLASSIFICATION	fallback on non-pregenerated logic
WITHOUT_CLASSIFICATION	refresh call adapter, since it matters if this is iter-based or not
WITHOUT_CLASSIFICATION	If we have more than one arg, make sure the array created to contain them is not ObjectSpaced
WITHOUT_CLASSIFICATION	attribute set.
WITHOUT_CLASSIFICATION	element set
WITHOUT_CLASSIFICATION	If reciever is self then we do the call the same way as vcall
WITHOUT_CLASSIFICATION	If reciever is self then we do the call the same way as vcall
WITHOUT_CLASSIFICATION	colon3
WITHOUT_CLASSIFICATION	Colon3
WITHOUT_CLASSIFICATION	array created for rescue args doesn't need to be in ObjectSpace.
WITHOUT_CLASSIFICATION	For b.foo
WITHOUT_CLASSIFICATION	instance config for the script run
WITHOUT_CLASSIFICATION	If reciever is self then we do the call the same way as vcall
WITHOUT_CLASSIFICATION	If reciever is self then we do the call the same way as vcall
WITHOUT_CLASSIFICATION	For 'b.foo()'. Args are only significant in maintaining backwards compatible AST structure
WITHOUT_CLASSIFICATION	For 'b.foo()'. Args are only significant in maintaining backwards compatible AST structure
WITHOUT_CLASSIFICATION	RubyModule module = context.getRubyClass();
WITHOUT_CLASSIFICATION	For 'b.foo'
WITHOUT_CLASSIFICATION	We define an actual list to get around bug in java integration (1387115)
WITHOUT_CLASSIFICATION	something in here is used to build up ruby stack trace...
WITHOUT_CLASSIFICATION	Ruby Grammar productions return plenty of nulls.
WITHOUT_CLASSIFICATION	Ruby Grammar productions return plenty of nulls.
WITHOUT_CLASSIFICATION	do nothing, allow loop to retry
WITHOUT_CLASSIFICATION	We can callsite cache const_missing if we want
WITHOUT_CLASSIFICATION	Store to temp so it does null out on us mid-stream
WITHOUT_CLASSIFICATION	never visited, should be fine
WITHOUT_CLASSIFICATION	For 'foo()'. Args are only significant in maintaining backwards compatible AST structure
WITHOUT_CLASSIFICATION	The name of the variable
WITHOUT_CLASSIFICATION	If we have more than one argument, then make sure the array is not ObjectSpaced.
WITHOUT_CLASSIFICATION	Only in ruby 1.9 methods
WITHOUT_CLASSIFICATION	Bind 'normal' parameter values to the local scope for this method.
WITHOUT_CLASSIFICATION	no arg grouping, just use bulk assignment methods
WITHOUT_CLASSIFICATION	optArgs and restArgs require more work, so isolate them and ArrayList creation here
WITHOUT_CLASSIFICATION	arity.checkArity(runtime, argsLength);
WITHOUT_CLASSIFICATION	no more values to stick in rest arg
WITHOUT_CLASSIFICATION	set argv from main's args
WITHOUT_CLASSIFICATION	attribute set.
WITHOUT_CLASSIFICATION	If reciever is self then we do the call the same way as vcall
WITHOUT_CLASSIFICATION	For 'b.foo()'. Args are only significant in maintaining backwards compatible AST structure
WITHOUT_CLASSIFICATION	The name of the variable
WITHOUT_CLASSIFICATION	A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits is what index in the right scope to set the value.
WITHOUT_CLASSIFICATION	A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits is what index in the right scope to set the value.
WITHOUT_CLASSIFICATION	block.yield depends on null to represent empty and nil to represent nil - [nil] vs [] assert argsNode != null : "argsNode is not null";
WITHOUT_CLASSIFICATION	assign given optional arguments to their variables
WITHOUT_CLASSIFICATION	in-frame EvalState should already have receiver set as self, continue to use it
WITHOUT_CLASSIFICATION	assign the default values, adding to the end of allArgs
WITHOUT_CLASSIFICATION	Make sure the appropriate scope has proper size. See JRUBY-2046.
WITHOUT_CLASSIFICATION	Experimental class reification support, to create real Java classes for Ruby classes after the first opening
WITHOUT_CLASSIFICATION	This should never happen past parse, but just bulletproof this just in case
WITHOUT_CLASSIFICATION	Make a nil node if no body. Notice this is not part of AST.
WITHOUT_CLASSIFICATION	'class << state.self' and 'class << obj' uses defn as opposed to defs
WITHOUT_CLASSIFICATION	now used as an interpreter event
WITHOUT_CLASSIFICATION	never visited, should be ok
WITHOUT_CLASSIFICATION	If no explicit block passed to super, then use the one passed in, unless it's explicitly cleared with nil
WITHOUT_CLASSIFICATION	JRUBY-530 until case
WITHOUT_CLASSIFICATION	element set
WITHOUT_CLASSIFICATION	For 'b.foo()'. Args are only significant in maintaining backwards compatible AST structure
WITHOUT_CLASSIFICATION	We can callsite cache const_missing if we want
WITHOUT_CLASSIFICATION	Store to temp so it does null out on us mid-stream
WITHOUT_CLASSIFICATION	Store to temp so it does null out on us mid-stream
WITHOUT_CLASSIFICATION	For 'foo()'. Args are only significant in maintaining backwards compatible AST structure
WITHOUT_CLASSIFICATION	The name of the variable
WITHOUT_CLASSIFICATION	The name of the variable
WITHOUT_CLASSIFICATION	A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits is what index in the right scope to set the value.
WITHOUT_CLASSIFICATION	Empirical Observations: null -> Some arity argsNode == this.argsNode then check for arity changes newline(splatnode) -> argspushnode
WITHOUT_CLASSIFICATION	assert !(value instanceof RubyArray) : "Not an array";
WITHOUT_CLASSIFICATION	Serialization killed our dynamic scope. We can just create an empty one since serialization cannot serialize an eval (which is the only thing which is capable of having a non-empty dynamic scope).
WITHOUT_CLASSIFICATION	Each root node has a top-level scope that we need to push
WITHOUT_CLASSIFICATION	We could probably also detect if LHS value came out of cache and avoid some of this
WITHOUT_CLASSIFICATION	assert thenBody != null : "thenBody is not null"; assert elseBody != null : "elseBody is not null";
WITHOUT_CLASSIFICATION	add in reverse order
WITHOUT_CLASSIFICATION	in order to make pragma's noops we set location to a special value
WITHOUT_CLASSIFICATION	ignore compiler pragmas
WITHOUT_CLASSIFICATION	We can callsite cache const_missing if we want
WITHOUT_CLASSIFICATION	Store to temp so it does null out on us mid-stream
WITHOUT_CLASSIFICATION	Store to temp so it does null out on us mid-stream
WITHOUT_CLASSIFICATION	For 'foo()'. Args are only significant in maintaining backwards compatible AST structure
WITHOUT_CLASSIFICATION	Make a nil node if no body. Notice this is not part of AST.
WITHOUT_CLASSIFICATION	now used as an interpreter event
WITHOUT_CLASSIFICATION	No actual test, so do 'when' if when expression is not nil
WITHOUT_CLASSIFICATION	save entering the try if there's nothing to ensure
WITHOUT_CLASSIFICATION	For 'foo'
WITHOUT_CLASSIFICATION	For 'foo'
WITHOUT_CLASSIFICATION	admittedly inefficient
WITHOUT_CLASSIFICATION	JRUBY-530, while case
WITHOUT_CLASSIFICATION	What static scoping relationship exists when it comes into being.
WITHOUT_CLASSIFICATION	let RescuedBlock continue
WITHOUT_CLASSIFICATION	just rethrow
WITHOUT_CLASSIFICATION	just rethrow
WITHOUT_CLASSIFICATION	clear exception when handled or retried
WITHOUT_CLASSIFICATION	clear exception when handled or retried
WITHOUT_CLASSIFICATION	no takers; bubble up
WITHOUT_CLASSIFICATION	no takers; bubble up
WITHOUT_CLASSIFICATION	Execute rescue block
WITHOUT_CLASSIFICATION	If no exception is thrown execute else block
WITHOUT_CLASSIFICATION	index of variable for this arg
WITHOUT_CLASSIFICATION	only a marker interface
WITHOUT_CLASSIFICATION	don't attempt to coerce to array, just wrap and return
WITHOUT_CLASSIFICATION	pragmas
WITHOUT_CLASSIFICATION	The method also needs a scope, do both
WITHOUT_CLASSIFICATION	We're doing normal framed compilation or the method needs a frame
WITHOUT_CLASSIFICATION	The method doesn't need a scope or static scope; frame only
WITHOUT_CLASSIFICATION	The method doesn't need a scope, but has static scope needs; use a dummy scope
WITHOUT_CLASSIFICATION	Proc.new needs the caller's block to instantiate a proc
WITHOUT_CLASSIFICATION	check for Proc.new, an especially magic method
WITHOUT_CLASSIFICATION	long, slow way causes disabling
WITHOUT_CLASSIFICATION	ok, we have fast paths
WITHOUT_CLASSIFICATION	ok, we have fast paths
WITHOUT_CLASSIFICATION	long, slow way causes disabling for defined
WITHOUT_CLASSIFICATION	we set scope-aware to true to force heap-based locals
WITHOUT_CLASSIFICATION	Because Regexp#=== sets backref, we have to make this backref-aware
WITHOUT_CLASSIFICATION	encountered a node we don't recognize, set everything to true to disable optz
WITHOUT_CLASSIFICATION	only arrays that are "lightweight" are being used as args arrays
WITHOUT_CLASSIFICATION	otherwise, it's a literal array
WITHOUT_CLASSIFICATION	use array as-is, it's a literal array
WITHOUT_CLASSIFICATION	unwrap newline nodes to get their actual type
WITHOUT_CLASSIFICATION	compile first node as non-expr and then second node
WITHOUT_CLASSIFICATION	last node, either !instanceof WhenNode or null, is the else
WITHOUT_CLASSIFICATION	compile first node only
WITHOUT_CLASSIFICATION	splatted when, can't do it yet
WITHOUT_CLASSIFICATION	if __send__ with a literal symbol, compile it as a direct fcall
WITHOUT_CLASSIFICATION	NOTE: Currently this optimization is limited to the following situations: All expressions must be int-ranged literal fixnums It also still emits the code for the "safe" when logic, which is rather wasteful (since it essentially doubles each code body). As such it is normally disabled, but it serves as an example of how this optimization could be done. Ideally, it should be combined with the when processing to improve code reuse before it's generally available.
WITHOUT_CLASSIFICATION	aggregate when nodes into a list, unfortunately, this is no
WITHOUT_CLASSIFICATION	one arg but it's an array, treat it as a proper array
WITHOUT_CLASSIFICATION	can't do it
WITHOUT_CLASSIFICATION	otherwise, use normal args compiler
WITHOUT_CLASSIFICATION	colon3, assign in Object
WITHOUT_CLASSIFICATION	colon3, assign in Object
WITHOUT_CLASSIFICATION	these are all simple cases that don't require the heavier defined logic
WITHOUT_CLASSIFICATION	[IRubyObject, RubyClass, Visibility] [IRubyObject, RubyClass] [IRubyObject]
WITHOUT_CLASSIFICATION	[]
WITHOUT_CLASSIFICATION	[]
WITHOUT_CLASSIFICATION	context.swapValues(); context.consumeCurrentValue();
WITHOUT_CLASSIFICATION	[RubyClass] [RubyClass, RubyClass] [RubyClass] [] [self] [RubyClass] [RubyClass, RubyClass]
WITHOUT_CLASSIFICATION	[RubyClass]
WITHOUT_CLASSIFICATION	[RubyClass] [RubyClass, RubyClass] [RubyClass] []
WITHOUT_CLASSIFICATION	if root of method is rescue, compile as a light rescue
WITHOUT_CLASSIFICATION	inspect body and args
WITHOUT_CLASSIFICATION	inspect body and args
WITHOUT_CLASSIFICATION	check args first, since body inspection can depend on args
WITHOUT_CLASSIFICATION	if root of method is rescue, compile as light rescue
WITHOUT_CLASSIFICATION	invoke run with threadcontext and topself
WITHOUT_CLASSIFICATION	[IRubyObject] [IRubyObject, IRubyObject] [IRubyObject, RubyClass] [IRubyObject, RubyClass, RubyClass] [IRubyObject, RubyClass, Visibility] [IRubyObject, RubyClass, Visibility, Visibility]
WITHOUT_CLASSIFICATION	[IRubyObject, RubyClass, Visibility] [IRubyObject, RubyClass] [IRubyObject]
WITHOUT_CLASSIFICATION	[RubyClass] []
WITHOUT_CLASSIFICATION	[String] [String, String] [String] [String, RubyClass] [String, RubyClass, RubyClass] [String, RubyClass]
WITHOUT_CLASSIFICATION	[String] [String, String] [String] [String, RubyClass] [String, RubyClass, RubyClass] [String, RubyClass]
WITHOUT_CLASSIFICATION	no args, do not pass args processor
WITHOUT_CLASSIFICATION	create the closure class and instantiate it
WITHOUT_CLASSIFICATION	create the closure class and instantiate it
WITHOUT_CLASSIFICATION	not an expression, only compile the elements
WITHOUT_CLASSIFICATION	not an expression, only compile the elements
WITHOUT_CLASSIFICATION	not an expression, only compile the elements
WITHOUT_CLASSIFICATION	create the closure class and instantiate it
WITHOUT_CLASSIFICATION	create the closure class and instantiate it
WITHOUT_CLASSIFICATION	no args, do not pass args processor
WITHOUT_CLASSIFICATION	force heap-scope behavior, since it uses parent's scope
WITHOUT_CLASSIFICATION	always false or nil
WITHOUT_CLASSIFICATION	optimizations if we know ahead of time it will always be true or false
WITHOUT_CLASSIFICATION	normal
WITHOUT_CLASSIFICATION	compile condition as non-expr and just compile "then" body
WITHOUT_CLASSIFICATION	need the array, use unoptz version
WITHOUT_CLASSIFICATION	just push nil for pragmas
WITHOUT_CLASSIFICATION	"assignment" means the value is already on the stack
WITHOUT_CLASSIFICATION	compile first node only
WITHOUT_CLASSIFICATION	create the closure class and instantiate it
WITHOUT_CLASSIFICATION	create the closure class and instantiate it
WITHOUT_CLASSIFICATION	eval new value, call operator on old value, and assign
WITHOUT_CLASSIFICATION	try optz version
WITHOUT_CLASSIFICATION	sizes must match
WITHOUT_CLASSIFICATION	expect value to be an array of nodes
WITHOUT_CLASSIFICATION	normal items at the "head" of the masgn
WITHOUT_CLASSIFICATION	head must not be null and there must be no "args" (like arg)
WITHOUT_CLASSIFICATION	"head" must have no non-trivial assigns (array groupings, basically)
WITHOUT_CLASSIFICATION	only supports simple parallel assignment of up to 10 values to the same number of assignees
WITHOUT_CLASSIFICATION	perform assignment for the next node
WITHOUT_CLASSIFICATION	if we get here, no optz cases work; fall back on unoptz.
WITHOUT_CLASSIFICATION	RedoNode redoNode = (RedoNode)node;
WITHOUT_CLASSIFICATION	done processing args
WITHOUT_CLASSIFICATION	all these types are immediately considered "defined"
WITHOUT_CLASSIFICATION	assign to appropriate variable
WITHOUT_CLASSIFICATION	if arity 1, just compile the one element to save us the array cost
WITHOUT_CLASSIFICATION	[recv]
WITHOUT_CLASSIFICATION	[recv]
WITHOUT_CLASSIFICATION	[recv]
WITHOUT_CLASSIFICATION	compile into array
WITHOUT_CLASSIFICATION	compile first node as non-expr and compile second node
WITHOUT_CLASSIFICATION	check if it's an immediate, and don't outline
WITHOUT_CLASSIFICATION	condition is always true, just compile it and not body
WITHOUT_CLASSIFICATION	force static scope to claim restarg at 0, so it only implements the [] version of __file__
WITHOUT_CLASSIFICATION	create method for toplevel of script
WITHOUT_CLASSIFICATION	it's a multiple-statement body, iterate over all elements in turn and chain if it get too long
WITHOUT_CLASSIFICATION	send it along as arity-specific, we don't need the array
WITHOUT_CLASSIFICATION	single-statement body, just compile it
WITHOUT_CLASSIFICATION	leave as a normal array
WITHOUT_CLASSIFICATION	This method has JITed already or has been abandoned. Bail out.
WITHOUT_CLASSIFICATION	The cache is full. Abandon JIT for this method and bail out.
WITHOUT_CLASSIFICATION	check args first, since body inspection can depend on args
WITHOUT_CLASSIFICATION	create the closure class and instantiate it
WITHOUT_CLASSIFICATION	create the closure class and instantiate it
WITHOUT_CLASSIFICATION	no args, do not pass args processor
WITHOUT_CLASSIFICATION	need the array, use unoptz version
WITHOUT_CLASSIFICATION	try optz version
WITHOUT_CLASSIFICATION	expect value to be an array of nodes
WITHOUT_CLASSIFICATION	head must not be null and there must be no "args" (like arg)
WITHOUT_CLASSIFICATION	sizes must match
WITHOUT_CLASSIFICATION	"head" must have no non-trivial assigns (array groupings, basically)
WITHOUT_CLASSIFICATION	if we get here, no optz cases work; fall back on unoptz.
WITHOUT_CLASSIFICATION	perform assignment for the next node
WITHOUT_CLASSIFICATION	done processing args
WITHOUT_CLASSIFICATION	Check if the method has been explicitly excluded
WITHOUT_CLASSIFICATION	class could not be found nor generated; give up on JIT and bail out
WITHOUT_CLASSIFICATION	successfully got back a jitted method
WITHOUT_CLASSIFICATION	finally, grab the script
WITHOUT_CLASSIFICATION	logEvery n methods based on configuration
WITHOUT_CLASSIFICATION	Time the compilation
WITHOUT_CLASSIFICATION	we have a body, do a full-on method
WITHOUT_CLASSIFICATION	If we don't have a body, check for required or opt args if opt args, they could have side effects if required args, need to raise errors if too few args passed otherwise, method does nothing, make it a nop
WITHOUT_CLASSIFICATION	if we haven't already decided on a do-nothing call
WITHOUT_CLASSIFICATION	only supports simple parallel assignment of up to 4 values to the same number of assignees
WITHOUT_CLASSIFICATION	normal items at the front or back of the masgn
WITHOUT_CLASSIFICATION	set up a local IRuby variable
WITHOUT_CLASSIFICATION	grab nil for local variables
WITHOUT_CLASSIFICATION	visit a label to start scoping for local vars in this method
WITHOUT_CLASSIFICATION	return last value from execution
WITHOUT_CLASSIFICATION	end of variable scope
WITHOUT_CLASSIFICATION	method is done, declare all variables
WITHOUT_CLASSIFICATION	Define the annotation for the method
WITHOUT_CLASSIFICATION	check arity in the variable-arity version
WITHOUT_CLASSIFICATION	load block from [] version of method
WITHOUT_CLASSIFICATION	normal return for method body. return jump for within a begin/rescue/ensure
WITHOUT_CLASSIFICATION	in method body with no containing loop, issue jump error load runtime and value, issue jump error
WITHOUT_CLASSIFICATION	in method body with no containing loop, issue jump error load runtime and value, issue jump error
WITHOUT_CLASSIFICATION	value is already on stack, save it for later
WITHOUT_CLASSIFICATION	receiver first, so we know which call site to use
WITHOUT_CLASSIFICATION	receiver
WITHOUT_CLASSIFICATION	receiver
WITHOUT_CLASSIFICATION	receiver
WITHOUT_CLASSIFICATION	self
WITHOUT_CLASSIFICATION	self
WITHOUT_CLASSIFICATION	self
WITHOUT_CLASSIFICATION	self
WITHOUT_CLASSIFICATION	arg0
WITHOUT_CLASSIFICATION	arg0
WITHOUT_CLASSIFICATION	arg0
WITHOUT_CLASSIFICATION	arg1
WITHOUT_CLASSIFICATION	arg1
WITHOUT_CLASSIFICATION	arg2
WITHOUT_CLASSIFICATION	args
WITHOUT_CLASSIFICATION	receiver first, so we know which call site to use
WITHOUT_CLASSIFICATION	select appropriate call site dup receiver load self
WITHOUT_CLASSIFICATION	receiver
WITHOUT_CLASSIFICATION	receiver
WITHOUT_CLASSIFICATION	self
WITHOUT_CLASSIFICATION	self
WITHOUT_CLASSIFICATION	self
WITHOUT_CLASSIFICATION	arg0
WITHOUT_CLASSIFICATION	arg0
WITHOUT_CLASSIFICATION	arg1
WITHOUT_CLASSIFICATION	args
WITHOUT_CLASSIFICATION	get call site and thread context
WITHOUT_CLASSIFICATION	get call site and thread context
WITHOUT_CLASSIFICATION	evaluate and save receiver and args
WITHOUT_CLASSIFICATION	evaluate and save receiver and args
WITHOUT_CLASSIFICATION	invoke
WITHOUT_CLASSIFICATION	invoke
WITHOUT_CLASSIFICATION	check if it's true, ending if so
WITHOUT_CLASSIFICATION	not true, eval value and assign
WITHOUT_CLASSIFICATION	not true, eval value and assign
WITHOUT_CLASSIFICATION	thread context, receiver and original args
WITHOUT_CLASSIFICATION	thread context, receiver and original args
WITHOUT_CLASSIFICATION	eval value for assignment
WITHOUT_CLASSIFICATION	call site
WITHOUT_CLASSIFICATION	call site
WITHOUT_CLASSIFICATION	depending on size of original args, call appropriate utility method
WITHOUT_CLASSIFICATION	check if it's true, ending if not
WITHOUT_CLASSIFICATION	eval value and save it
WITHOUT_CLASSIFICATION	self
WITHOUT_CLASSIFICATION	self
WITHOUT_CLASSIFICATION	depending on size of original args, call appropriate utility method
WITHOUT_CLASSIFICATION	receiver, args, result, value
WITHOUT_CLASSIFICATION	[adapter, tc]
WITHOUT_CLASSIFICATION	[adapter, tc]
WITHOUT_CLASSIFICATION	[adapter, tc]
WITHOUT_CLASSIFICATION	super uses current block if none given
WITHOUT_CLASSIFICATION	args
WITHOUT_CLASSIFICATION	block
WITHOUT_CLASSIFICATION	block
WITHOUT_CLASSIFICATION	no args, no block
WITHOUT_CLASSIFICATION	no args, with block
WITHOUT_CLASSIFICATION	with args, no block
WITHOUT_CLASSIFICATION	with args, with block
WITHOUT_CLASSIFICATION	adapter, tc, recv, args{0,1}, block{0,1}]
WITHOUT_CLASSIFICATION	pop extra attr value
WITHOUT_CLASSIFICATION	pop extra attr value
WITHOUT_CLASSIFICATION	arg and receiver already present on the stack
WITHOUT_CLASSIFICATION	arg
WITHOUT_CLASSIFICATION	arg
WITHOUT_CLASSIFICATION	self
WITHOUT_CLASSIFICATION	[adapter, tc]
WITHOUT_CLASSIFICATION	args
WITHOUT_CLASSIFICATION	block
WITHOUT_CLASSIFICATION	no args, no block
WITHOUT_CLASSIFICATION	no args, with block
WITHOUT_CLASSIFICATION	with args, no block
WITHOUT_CLASSIFICATION	with args, with block
WITHOUT_CLASSIFICATION	arg
WITHOUT_CLASSIFICATION	retrieve scope from scopes array
WITHOUT_CLASSIFICATION	use numbered access method
WITHOUT_CLASSIFICATION	retrieve call site from sites array
WITHOUT_CLASSIFICATION	add name to call site list
WITHOUT_CLASSIFICATION	module is on top of stack
WITHOUT_CLASSIFICATION	build scope names string
WITHOUT_CLASSIFICATION	build descriptor string
WITHOUT_CLASSIFICATION	build descriptor string
WITHOUT_CLASSIFICATION	generate call sites initialization code
WITHOUT_CLASSIFICATION	generate symbols initialization code
WITHOUT_CLASSIFICATION	generate fixnums initialization code
WITHOUT_CLASSIFICATION	generate constants initialization code
WITHOUT_CLASSIFICATION	generate regexps initialization code
WITHOUT_CLASSIFICATION	generate regexps initialization code
WITHOUT_CLASSIFICATION	generate variable readers initialization code
WITHOUT_CLASSIFICATION	generate variable writers initialization code
WITHOUT_CLASSIFICATION	generate block bodies initialization code
WITHOUT_CLASSIFICATION	generate block bodies initialization code
WITHOUT_CLASSIFICATION	generate bytelists initialization code
WITHOUT_CLASSIFICATION	generate method cache initialization code
WITHOUT_CLASSIFICATION	adapter, tc, recv, args{0,1}, block{0,1}]
WITHOUT_CLASSIFICATION	use IRubyObject[]
WITHOUT_CLASSIFICATION	do nothing, fall back on default compiler below
WITHOUT_CLASSIFICATION	if more than 4 locals, get the locals array too
WITHOUT_CLASSIFICATION	No point in updating number if last number was same value.
WITHOUT_CLASSIFICATION	load Object under value
WITHOUT_CLASSIFICATION	put under object array already present
WITHOUT_CLASSIFICATION	if element count is less than 6, use helper methods
WITHOUT_CLASSIFICATION	This is pretty inefficient for building an array, so just raise an error if someone's using it for a lot of elements
WITHOUT_CLASSIFICATION	if we have a specific-arity helper to construct an array for us, use that
WITHOUT_CLASSIFICATION	if we have a specific-arity helper to construct an array for us, use that
WITHOUT_CLASSIFICATION	brute force construction inline
WITHOUT_CLASSIFICATION	brute force construction inline
WITHOUT_CLASSIFICATION	use specific-arity for as much as possible
WITHOUT_CLASSIFICATION	call isTrue on the result
WITHOUT_CLASSIFICATION	call isTrue on the result
WITHOUT_CLASSIFICATION	call isTrue on the result
WITHOUT_CLASSIFICATION	EQ == 0 (i.e. false)
WITHOUT_CLASSIFICATION	dup it since we need to return appropriately if it's false
WITHOUT_CLASSIFICATION	dup it since we need to return appropriately if it's false
WITHOUT_CLASSIFICATION	clear body or next result after each successful loop
WITHOUT_CLASSIFICATION	check the condition
WITHOUT_CLASSIFICATION	NE == nonzero (i.e. true)
WITHOUT_CLASSIFICATION	skip catch block
WITHOUT_CLASSIFICATION	catch logic for flow-control: next, break
WITHOUT_CLASSIFICATION	next jump
WITHOUT_CLASSIFICATION	exceptionNext target is for a next that doesn't push a new value, like this one
WITHOUT_CLASSIFICATION	grab nil for local variables
WITHOUT_CLASSIFICATION	grab nil for local variables
WITHOUT_CLASSIFICATION	EQ == 0 (i.e. false)
WITHOUT_CLASSIFICATION	clear body or next result after each successful loop
WITHOUT_CLASSIFICATION	EQ == 0 (i.e. false) pop the extra result and replace with the send part of the AND
WITHOUT_CLASSIFICATION	check the condition
WITHOUT_CLASSIFICATION	NE == nonzero (i.e. true)
WITHOUT_CLASSIFICATION	synthetic methods always have zero arg parameters
WITHOUT_CLASSIFICATION	break jump
WITHOUT_CLASSIFICATION	Done with closure compilation
WITHOUT_CLASSIFICATION	[reg]
WITHOUT_CLASSIFICATION	for regular expressions with the /o flag
WITHOUT_CLASSIFICATION	inside a loop, jump to body
WITHOUT_CLASSIFICATION	inside a loop, jump to conditional
WITHOUT_CLASSIFICATION	synthetic methods always have zero arg parameters
WITHOUT_CLASSIFICATION	store previous exception for restoration if we rescue something
WITHOUT_CLASSIFICATION	store previous exception for restoration if we rescue something
WITHOUT_CLASSIFICATION	if more than 4 vars, get values array too
WITHOUT_CLASSIFICATION	retry handling in the rescue block
WITHOUT_CLASSIFICATION	any exceptions raised must continue to be raised, skipping $! restoration
WITHOUT_CLASSIFICATION	and remaining jump exceptions should restore $!
WITHOUT_CLASSIFICATION	restore the original exception
WITHOUT_CLASSIFICATION	Handle Flow exceptions, just propagating them
WITHOUT_CLASSIFICATION	rethrow to outer flow catcher
WITHOUT_CLASSIFICATION	Handle Ruby exceptions (RaiseException)
WITHOUT_CLASSIFICATION	inside a loop, break out of it go to end of loop, leaving break value on stack
WITHOUT_CLASSIFICATION	false zero
WITHOUT_CLASSIFICATION	load all arguments straight through
WITHOUT_CLASSIFICATION	and remaining jump exceptions should restore $!
WITHOUT_CLASSIFICATION	restore the original exception
WITHOUT_CLASSIFICATION	retry handling in the rescue blocks
WITHOUT_CLASSIFICATION	push false
WITHOUT_CLASSIFICATION	method.invokeinterface(p(IRubyObject.class), "getInstanceVariable", sig(IRubyObject.class, params(String.class)));
WITHOUT_CLASSIFICATION	method.ifnonnull(trueLabel);
WITHOUT_CLASSIFICATION	EQ == 0 (i.e. false) [C]
WITHOUT_CLASSIFICATION	[C, C] [C, C, String] [C, null|C]
WITHOUT_CLASSIFICATION	[C]
WITHOUT_CLASSIFICATION	push true
WITHOUT_CLASSIFICATION	EQ != 0 (i.e. true)
WITHOUT_CLASSIFICATION	[?, ?] [?, boolean]
WITHOUT_CLASSIFICATION	[RubyModule] [RubyModule, String]
WITHOUT_CLASSIFICATION	[boolean]
WITHOUT_CLASSIFICATION	no receiver for singleton class
WITHOUT_CLASSIFICATION	but there's a superclass passed in, use it
WITHOUT_CLASSIFICATION	we re-set self to the class, but store the old self in a temporary local variable this is to prevent it GCing in case the singleton is short-lived
WITHOUT_CLASSIFICATION	set self to the class
WITHOUT_CLASSIFICATION	CLASS BODY
WITHOUT_CLASSIFICATION	static scope
WITHOUT_CLASSIFICATION	Here starts the logic for the class definition
WITHOUT_CLASSIFICATION	new instance to invoke run against
WITHOUT_CLASSIFICATION	CLASS BODY
WITHOUT_CLASSIFICATION	static scope
WITHOUT_CLASSIFICATION	Here starts the logic for the class definition
WITHOUT_CLASSIFICATION	finally with exception
WITHOUT_CLASSIFICATION	prepare to call class definition method
WITHOUT_CLASSIFICATION	otherwise, there's a receiver, so we pass that in directly for the sclass logic
WITHOUT_CLASSIFICATION	original exception is on stack
WITHOUT_CLASSIFICATION	RaiseException is on stack, get RubyException out
WITHOUT_CLASSIFICATION	updating position for same line; skip
WITHOUT_CLASSIFICATION	callbacks to fill in method body
WITHOUT_CLASSIFICATION	prepare to call "def" utility method to handle def logic
WITHOUT_CLASSIFICATION	script object
WITHOUT_CLASSIFICATION	arities
WITHOUT_CLASSIFICATION	TODO assuming case is a fixnum
WITHOUT_CLASSIFICATION	we have an input case, prepare branching logic
WITHOUT_CLASSIFICATION	we have optimized switch cases, build a lookupswitch
WITHOUT_CLASSIFICATION	checkcast the value; if match, fast path; otherwise proceed to slow logic
WITHOUT_CLASSIFICATION	expression-based tests + bodies
WITHOUT_CLASSIFICATION	normal case, create a new label
WITHOUT_CLASSIFICATION	last conditional case, use defaultCase
WITHOUT_CLASSIFICATION	do nothing; arity check is done before call
WITHOUT_CLASSIFICATION	just confirm minimum args provided
WITHOUT_CLASSIFICATION	just confirm args length == required
WITHOUT_CLASSIFICATION	extract item from array
WITHOUT_CLASSIFICATION	index for the item
WITHOUT_CLASSIFICATION	index for the item
WITHOUT_CLASSIFICATION	prepare labels for opt logic
WITHOUT_CLASSIFICATION	prepare labels for opt logic
WITHOUT_CLASSIFICATION	next, iterate over all optional args, until no more arguments
WITHOUT_CLASSIFICATION	next, iterate over all optional args, until no more arguments
WITHOUT_CLASSIFICATION	now logic for each optional value
WITHOUT_CLASSIFICATION	otherwise no items left available, use the code for default
WITHOUT_CLASSIFICATION	pop extra failed value from first cycle and we're done
WITHOUT_CLASSIFICATION	if there's args left and we want them, assign to rest arg
WITHOUT_CLASSIFICATION	assign remaining elements as an array for rest args (or empty array)
WITHOUT_CLASSIFICATION	block argument assignment, if there's a block arg
WITHOUT_CLASSIFICATION	first, iterate over all pre args
WITHOUT_CLASSIFICATION	then optional args
WITHOUT_CLASSIFICATION	grab nil for local variables
WITHOUT_CLASSIFICATION	now logic for each optional value
WITHOUT_CLASSIFICATION	otherwise no items left available, use the code for default
WITHOUT_CLASSIFICATION	pop extra failed value from first cycle and we're done
WITHOUT_CLASSIFICATION	assign remaining elements as an array for rest args (or empty array)
WITHOUT_CLASSIFICATION	block argument assignment, if there's a block arg
WITHOUT_CLASSIFICATION	if rest args, excluding post args
WITHOUT_CLASSIFICATION	finally, post args
WITHOUT_CLASSIFICATION	not an expression, don't want result; pop it
WITHOUT_CLASSIFICATION	not an expression, don't want result; pop it
WITHOUT_CLASSIFICATION	unwrap scopes to appropriate depth
WITHOUT_CLASSIFICATION	fill in all vars with nil so compiler is happy about future accesses
WITHOUT_CLASSIFICATION	chain to the next segment of this giant method
WITHOUT_CLASSIFICATION	temp locals must start after last real local
WITHOUT_CLASSIFICATION	temp locals must start after last real local
WITHOUT_CLASSIFICATION	declare locals for Java debugging purposes
WITHOUT_CLASSIFICATION	class bodies prepare their own dynamic scope, so let it do that
WITHOUT_CLASSIFICATION	store the local vars in a local variable
WITHOUT_CLASSIFICATION	load args[0] which will be the IRubyObject representing block args
WITHOUT_CLASSIFICATION	return in a class body raises error
WITHOUT_CLASSIFICATION	visit a label to start scoping for local vars in this method
WITHOUT_CLASSIFICATION	return last value from execution
WITHOUT_CLASSIFICATION	end of variable scope
WITHOUT_CLASSIFICATION	method is done, declare all variables
WITHOUT_CLASSIFICATION	load block from [] version of method
WITHOUT_CLASSIFICATION	normal return for method body. return jump for within a begin/rescue/ensure
WITHOUT_CLASSIFICATION	declare locals for Java debugging purposes
WITHOUT_CLASSIFICATION	class bodies prepare their own dynamic scope, so let it do that
WITHOUT_CLASSIFICATION	load args[0] which will be the IRubyObject representing block args
WITHOUT_CLASSIFICATION	we force argParamCount to 1 since we always know we'll have [] args
WITHOUT_CLASSIFICATION	chain to the next segment of this giant method
WITHOUT_CLASSIFICATION	chain to the next segment of this giant method
WITHOUT_CLASSIFICATION	load all arguments straight through
WITHOUT_CLASSIFICATION	load all arguments straight through
WITHOUT_CLASSIFICATION	we append an index to ensure two identical method names will not conflict
WITHOUT_CLASSIFICATION	we append an index to ensure two identical method names will not conflict
WITHOUT_CLASSIFICATION	store the local vars in a local variable if there are any
WITHOUT_CLASSIFICATION	if more than 4 locals, get and populate the locals array too
WITHOUT_CLASSIFICATION	fill local vars with nil, to avoid checking every access.
WITHOUT_CLASSIFICATION	default for starting tempVariableIndex is ok
WITHOUT_CLASSIFICATION	store the local vars in a local variable for preparing the class (using previous scope)
WITHOUT_CLASSIFICATION	store the new local vars in a local variable
WITHOUT_CLASSIFICATION	in 1.8 mode, this will be a RubyArray containing the arguments in 1.9 mode, this will be an IRubyObject[]
WITHOUT_CLASSIFICATION	no variable initialization, because we're reusing parent's scope (flat)
WITHOUT_CLASSIFICATION	for specific-index cases, clean up non-expression values
WITHOUT_CLASSIFICATION	set up a local Ruby variable
WITHOUT_CLASSIFICATION	if that succeeds, the others should as well
WITHOUT_CLASSIFICATION	verify the class
WITHOUT_CLASSIFICATION	create dir if necessary
WITHOUT_CLASSIFICATION	Create the class with the appropriate class name and source file
WITHOUT_CLASSIFICATION	add setPosition impl, which stores filename as constant to speed updates
WITHOUT_CLASSIFICATION	thread context
WITHOUT_CLASSIFICATION	line number
WITHOUT_CLASSIFICATION	invoke __file__ with threadcontext, self, args (null), and block (null)
WITHOUT_CLASSIFICATION	load always uses IRubyObject[], so simple closure offset calculation here
WITHOUT_CLASSIFICATION	return last value from execution
WITHOUT_CLASSIFICATION	method is done, declare all variables
WITHOUT_CLASSIFICATION	in method body with no containing loop, issue jump error load runtime and value, issue jump error
WITHOUT_CLASSIFICATION	block
WITHOUT_CLASSIFICATION	block
WITHOUT_CLASSIFICATION	we force argParamCount to 1 since we always know we'll have [] args
WITHOUT_CLASSIFICATION	chain to the next segment of this giant method
WITHOUT_CLASSIFICATION	load all arguments straight through
WITHOUT_CLASSIFICATION	we append an index to ensure two identical method names will not conflict
WITHOUT_CLASSIFICATION	add Script#run impl, used for running this script with a specified threadcontext and self root method of a script is always in __file__ method
WITHOUT_CLASSIFICATION	add main impl, used for detached or command-line execution of this script with a new runtime root method of a script is always in stub0, method0
WITHOUT_CLASSIFICATION	construct static scope list of names
WITHOUT_CLASSIFICATION	JRUBY-3014: make __FILE__ dynamically determined at load time, but we provide a reasonable default here
WITHOUT_CLASSIFICATION	ignore; we won't use invokedynamic
WITHOUT_CLASSIFICATION	ignore; we won't use invokedynamic
WITHOUT_CLASSIFICATION	lazily create class init only if necessary
WITHOUT_CLASSIFICATION	boxed arg list __file__
WITHOUT_CLASSIFICATION	invoke static __file__
WITHOUT_CLASSIFICATION	exact arg list __file__
WITHOUT_CLASSIFICATION	declare the field
WITHOUT_CLASSIFICATION	declare the field
WITHOUT_CLASSIFICATION	not using a new scope, use saved one for a flat closure
WITHOUT_CLASSIFICATION	normal closure
WITHOUT_CLASSIFICATION	end of scoping for closure's vars
WITHOUT_CLASSIFICATION	we only need full-on redo exception handling if there's logic that might produce it
WITHOUT_CLASSIFICATION	handle redos by restarting the block
WITHOUT_CLASSIFICATION	jump back to the top of the main body of this closure
WITHOUT_CLASSIFICATION	Ruby name
WITHOUT_CLASSIFICATION	Accumulate call arguments
WITHOUT_CLASSIFICATION	Fix FileNameCompletor to work mid-line
WITHOUT_CLASSIFICATION	We need to ensure that the variable names generated here cannot conflict with ruby variable names! Hence the "%" tthat is appended to the beginning!
WITHOUT_CLASSIFICATION	Does this method define code? Default is yes -- which basically leads to pessimistic but safe optimizations But, for library and internal methods, this might be false.
WITHOUT_CLASSIFICATION	Map of constants defined in this scope (not valid for methods!)
WITHOUT_CLASSIFICATION	NOTE: Since we are processing ASTs, loop bodies are processed in depth-first manner with outer loops encountered before inner loops, and inner loops finished before outer ones. So, we can keep track of loops in a loop stack which keeps track of loops as they are encountered. This lets us implement next/redo/break/retry easily for the non-closure cases
WITHOUT_CLASSIFICATION	Map keep track of the next available variable index for a particular prefix
WITHOUT_CLASSIFICATION	Control flow graph for this scope
WITHOUT_CLASSIFICATION	_lexicalNestingLevel = lexicalParent == null ? 0 : ((IR_ScopeImpl)lexicalParent)._lexicalNestingLevel + 1;
WITHOUT_CLASSIFICATION	List of modules, classes, and methods defined in this scope!
WITHOUT_CLASSIFICATION	Returns the containing parent scope!
WITHOUT_CLASSIFICATION	Insert nesting level to ensure variable names don't conflict across nested scopes! i.e. definition of %v_1 in a closure shouldn't override the use of %v_1 from the parent scope! return new Variable(prefix + _lexicalNestingLevel + "_" + idx);
WITHOUT_CLASSIFICATION	get "self"
WITHOUT_CLASSIFICATION	variable is never read, variable is never live
WITHOUT_CLASSIFICATION	inline script
WITHOUT_CLASSIFICATION	inline script
WITHOUT_CLASSIFICATION	This method is called to build assignments for a multiple-assignment instruction
WITHOUT_CLASSIFICATION	Build the class body!
WITHOUT_CLASSIFICATION	unwrap newline nodes to get their actual type
WITHOUT_CLASSIFICATION	unwrap newline nodes to get their actual type
WITHOUT_CLASSIFICATION	SSS FIXME: Can this ever be null?
WITHOUT_CLASSIFICATION	Run the pass on the passed in scope!
WITHOUT_CLASSIFICATION	done done done done
WITHOUT_CLASSIFICATION	NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable
WITHOUT_CLASSIFICATION	NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable
WITHOUT_CLASSIFICATION	This method is called to build arguments for a block!
WITHOUT_CLASSIFICATION	build first node (and ignore its result) and then second node
WITHOUT_CLASSIFICATION	build first node only and return false
WITHOUT_CLASSIFICATION	Value of the last expression in the block
WITHOUT_CLASSIFICATION	If this is not a closure, the break is equivalent to jumping to the loop end label
WITHOUT_CLASSIFICATION	get the incoming case value
WITHOUT_CLASSIFICATION	the CASE instruction
WITHOUT_CLASSIFICATION	lists to aggregate variables and bodies for whens
WITHOUT_CLASSIFICATION	build each "when"
WITHOUT_CLASSIFICATION	multiple conditions for when
WITHOUT_CLASSIFICATION	build "else" if it exists
WITHOUT_CLASSIFICATION	now emit bodies
WITHOUT_CLASSIFICATION	close it out
WITHOUT_CLASSIFICATION	By default, the container for this class is 's'
WITHOUT_CLASSIFICATION	Do we have a dynamic container?
WITHOUT_CLASSIFICATION	Return a meta object corresponding to the class
WITHOUT_CLASSIFICATION	1. Load the module first (lhs of node) 2. Then load the constant from the module
WITHOUT_CLASSIFICATION	Build IR for args
WITHOUT_CLASSIFICATION	Build IR for body
WITHOUT_CLASSIFICATION	if root of method is rescue, build as a light rescue
WITHOUT_CLASSIFICATION	Instance method
WITHOUT_CLASSIFICATION	Class method
WITHOUT_CLASSIFICATION	Other args begin at index 1
WITHOUT_CLASSIFICATION	Both for fixed arity and variable arity methods
WITHOUT_CLASSIFICATION	Now for the rest
WITHOUT_CLASSIFICATION	Jump to 'l' if this arg is not null. If null, fall through and build the default value!
WITHOUT_CLASSIFICATION	This is not an expression that computes anything
WITHOUT_CLASSIFICATION	Create a new closure context
WITHOUT_CLASSIFICATION	Build args
WITHOUT_CLASSIFICATION	Build closure body and return the result of the closure
WITHOUT_CLASSIFICATION	Assign the closure to the block variable in the parent scope and return it
WITHOUT_CLASSIFICATION	By default, the container for this class is 's'
WITHOUT_CLASSIFICATION	Create a new closure context
WITHOUT_CLASSIFICATION	Build args
WITHOUT_CLASSIFICATION	Assign the closure to the block variable in the parent scope and return it
WITHOUT_CLASSIFICATION	Get the container for this new module
WITHOUT_CLASSIFICATION	Build the new module
WITHOUT_CLASSIFICATION	Build the module body
WITHOUT_CLASSIFICATION	First, build an assignment for a splat, if any, with the rest of the args!
WITHOUT_CLASSIFICATION	rest of the argument array!
WITHOUT_CLASSIFICATION	If a closure, the next is simply a return from the closure! If a regular loop, the next is simply a jump to the end of the iteration
WITHOUT_CLASSIFICATION	get attr
WITHOUT_CLASSIFICATION	call operator
WITHOUT_CLASSIFICATION	set attr
WITHOUT_CLASSIFICATION	Translate "x &&= y" --> "x = (is_true(x) ? y : false)" --> x = -- build(x) should return a variable! -- f = is_true(x) beq(f, false, L) x = -- build(y) -- L:
WITHOUT_CLASSIFICATION	This does the assignment!
WITHOUT_CLASSIFICATION	This does the assignment!
WITHOUT_CLASSIFICATION	if v1 is defined and true, we are done!
WITHOUT_CLASSIFICATION	build first node only and return true
WITHOUT_CLASSIFICATION	build first node as non-expr and build second node
WITHOUT_CLASSIFICATION	Top-level script!
WITHOUT_CLASSIFICATION	we won't enter the loop -- just build the condition node
WITHOUT_CLASSIFICATION	----------- Private Interface ------------
WITHOUT_CLASSIFICATION	What handles warnings
WITHOUT_CLASSIFICATION	Tries to load at compile-time the constant referred to by 'constRef'. This might be possible if the constant is defined and is not a forward reference to a value that will be defined later in the class.
WITHOUT_CLASSIFICATION	For closures, a redo is a jump to the beginning of the closure For non-closures, a redo is a jump to the beginning of the loop
WITHOUT_CLASSIFICATION	The "root" method of a class -- the scope in which all definitions, and class code executes, equivalent to java clinit
WITHOUT_CLASSIFICATION	Dummy top-level method for the class
WITHOUT_CLASSIFICATION	Build a dummy static method for the class -- the scope in which all definitions, and class code executes, equivalent to java clinit
WITHOUT_CLASSIFICATION	------ Define the operations below ----
WITHOUT_CLASSIFICATION	value copy and type conversion operations
WITHOUT_CLASSIFICATION	alu operations
WITHOUT_CLASSIFICATION	method handle, arg receive, return value, and call instructions
WITHOUT_CLASSIFICATION	closure instructions
WITHOUT_CLASSIFICATION	eval instructions
WITHOUT_CLASSIFICATION	def instructions
WITHOUT_CLASSIFICATION	exception instructions
WITHOUT_CLASSIFICATION	Loads
WITHOUT_CLASSIFICATION	Stores
WITHOUT_CLASSIFICATION	jump and branch operations
WITHOUT_CLASSIFICATION	others
WITHOUT_CLASSIFICATION	a case/when branch
WITHOUT_CLASSIFICATION	optimization guards
WITHOUT_CLASSIFICATION	By default, call instructions cannot be deleted even if their results aren't used by anyone unless we know more about what the call is, what it does, etc. Similarly for evals, stores, returns.
WITHOUT_CLASSIFICATION	Returns the containing parent scope -- can be a dynamic value (hence Operand)!
WITHOUT_CLASSIFICATION	scripts
WITHOUT_CLASSIFICATION	scripts and modules
WITHOUT_CLASSIFICATION	scripts, classes, and modules
WITHOUT_CLASSIFICATION	methods and closures
WITHOUT_CLASSIFICATION	create a new variable using the prefix
WITHOUT_CLASSIFICATION	create a new temporary variable
WITHOUT_CLASSIFICATION	Get a new label using a generic prefix
WITHOUT_CLASSIFICATION	Build the CFG for this scope -- supported only by methods & closures
WITHOUT_CLASSIFICATION	Get the control flow graph for this scope -- only valid for methods & closures
WITHOUT_CLASSIFICATION	While processing loops, this returns the loop that we are processing.
WITHOUT_CLASSIFICATION	Record the loop we are beginning to process
WITHOUT_CLASSIFICATION	Indicate that we are done processing the loop
WITHOUT_CLASSIFICATION	Run the passed in compiler pass on this scope!
WITHOUT_CLASSIFICATION	Should we run this pass on the current scope before running it on nested scopes?
WITHOUT_CLASSIFICATION	Readline
WITHOUT_CLASSIFICATION	If the cfg of the method is around, print the CFG!
WITHOUT_CLASSIFICATION	Optimize some core class method calls for constant values
WITHOUT_CLASSIFICATION	If 'r' is not a constant, it could actually be a compound value! Look in our value map to see if we have a simplified value for the receiver.
WITHOUT_CLASSIFICATION	Check if we can optimize this call based on the receiving method and receiver type Use the simplified receiver!
WITHOUT_CLASSIFICATION	If we got a simplified value, mark the call dead and insert a copy in its place!
WITHOUT_CLASSIFICATION	If the call has been optimized away in the previous step, it is no longer a hard boundary for opts!
WITHOUT_CLASSIFICATION	----------- Public abstract methods ----------
WITHOUT_CLASSIFICATION	----------- Public methods with a default implementation ----------
WITHOUT_CLASSIFICATION	Compute meet over all "sources" and compute "destination" basic blocks that should then be processed. sources & targets depends on direction of the data flow problem
WITHOUT_CLASSIFICATION	If the solution has changed, add "dsts" to the work list. No duplicates please which is why we have bbset.
WITHOUT_CLASSIFICATION	--------- Protected fields/methods below ---------
WITHOUT_CLASSIFICATION	Dataflow problem with which this node is associated CFG node for which this node contains info.
WITHOUT_CLASSIFICATION	-------------- Public fields and methods below ----------------
WITHOUT_CLASSIFICATION	------- Abstract methods without a default implementation -------
WITHOUT_CLASSIFICATION	------- Default implementation methods below -------
WITHOUT_CLASSIFICATION	Compute Meet Over All Paths solution for this dataflow problem on the input CFG. This implements a standard worklist algorithm.
WITHOUT_CLASSIFICATION	Individual analyses should override this
WITHOUT_CLASSIFICATION	Individual analyses should override this
WITHOUT_CLASSIFICATION	-------------- Packaged/protected fields and methods below ----------------
WITHOUT_CLASSIFICATION	We want unique ids for dataflow variables
WITHOUT_CLASSIFICATION	-------------- Protected fields and methods below ----------------
WITHOUT_CLASSIFICATION	-------------- Private fields and methods below ----------------
WITHOUT_CLASSIFICATION	Initialize all flow graph nodes
WITHOUT_CLASSIFICATION	Lattice TOP, BOTTOM, ANY values -- these will be used during dataflow analyses
WITHOUT_CLASSIFICATION	PUBLIC INTERFACE
WITHOUT_CLASSIFICATION	Unique ID assigned to this variable
WITHOUT_CLASSIFICATION	start out with a default RubyObject allocator
WITHOUT_CLASSIFICATION	switch to an allocator based on a default constructor
WITHOUT_CLASSIFICATION	----------- Public Interface ------------
WITHOUT_CLASSIFICATION	class or module
WITHOUT_CLASSIFICATION	OUT = UNION(IN(succs))
WITHOUT_CLASSIFICATION	Traverse the instructions in this basic block in reverse order!
WITHOUT_CLASSIFICATION	v is defined => It is no longer live before 'i'
WITHOUT_CLASSIFICATION	IN is the same!
WITHOUT_CLASSIFICATION	IN changed!
WITHOUT_CLASSIFICATION	---------- Protected / package fields, methods ---------
WITHOUT_CLASSIFICATION	If 'v' is not live at the instruction site, and it has no side effects, mark it dead!
WITHOUT_CLASSIFICATION	Do not mark this instruction's operands live if the instruction itself is dead!
WITHOUT_CLASSIFICATION	---------- Private fields, methods ---------
WITHOUT_CLASSIFICATION	Variables live at entry of this node Variables live at exit of node Temporary set of live variables Size of the "_in" and "_out" bit sets
WITHOUT_CLASSIFICATION	Used during optimization passes to propagate type and other information
WITHOUT_CLASSIFICATION	Does this instruction have side effects as a result of its operation This information is used in optimization phases to impact dead code elimination and other optimization passes
WITHOUT_CLASSIFICATION	--------- "Abstract"/"please-override" methods ---------
WITHOUT_CLASSIFICATION	Array of all operands for this instruction
WITHOUT_CLASSIFICATION	List of all variables used by all operands of this instruction
WITHOUT_CLASSIFICATION	This method takes as input a map of operands to their values, and outputs If the value map provides a value for any of the instruction's operands this method is expected to replace the original operands with the simplified values. It is not required that it do so -- code correctness is not compromised by failure to simplify
WITHOUT_CLASSIFICATION	By default, no simplifications!
WITHOUT_CLASSIFICATION	Can this call lead to ruby code getting modified? If we don't know what method we are calling, we assume it can (pessimistic, but safe!) If we do know the target method, we ask the method itself whether it modifies ruby code
WITHOUT_CLASSIFICATION	By default, return instructions cannot be deleted
WITHOUT_CLASSIFICATION	If true, returns the rest of the array starting at the index
WITHOUT_CLASSIFICATION	---------- These methods below are used during compile-time optimizations -------
WITHOUT_CLASSIFICATION	Map of label & basic blocks with that label
WITHOUT_CLASSIFICATION	---------- These methods below are used during compile-time optimizations -------
WITHOUT_CLASSIFICATION	You can only value-replace atomic values
WITHOUT_CLASSIFICATION	If divisor is zero, don't simplify!
WITHOUT_CLASSIFICATION	If divisor is zero, don't simplify!
WITHOUT_CLASSIFICATION	If divisor is zero, don't simplify!
WITHOUT_CLASSIFICATION	For simplification, get the target value, even if compound
WITHOUT_CLASSIFICATION	For simplification, get the target value, even if compound
WITHOUT_CLASSIFICATION	The operand that this attribute targets DEFERRED AttributeValue _val; Attribute value
WITHOUT_CLASSIFICATION	Arrays, Ranges, etc. are compound values Variables, fixnums, floats, etc. are "atomic" values
WITHOUT_CLASSIFICATION	Get the target class of this operand, if we know it!
WITHOUT_CLASSIFICATION	The following constants capture pre-known static call sites -- used to implement ruby internals
WITHOUT_CLASSIFICATION	Nothing to do by default
WITHOUT_CLASSIFICATION	Map of label & basic blocks which are waiting for a bb with that label
WITHOUT_CLASSIFICATION	Init before building basic blocks below!
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	Scope (method/closure) to which this cfg belongs Entry BB -- dummy Exit BB -- dummy The actual graph Next available basic block id
WITHOUT_CLASSIFICATION	Jump instruction bbs dont add an edge to the succeeding bb by default
WITHOUT_CLASSIFICATION	Add forward ref. edges
WITHOUT_CLASSIFICATION	currBB cannot be null!
WITHOUT_CLASSIFICATION	Add a forward reference from tgt -> currBB
WITHOUT_CLASSIFICATION	root-level logic
WITHOUT_CLASSIFICATION	root-level methods
WITHOUT_CLASSIFICATION	root-level classes
WITHOUT_CLASSIFICATION	case 4: signature = sig(Object.class, Object.class, Object.class, Object.class, Object.class); break; case 5: signature = sig(Object.class, Object.class, Object.class, Object.class, Object.class, Object.class); break;
WITHOUT_CLASSIFICATION	load receiver
WITHOUT_CLASSIFICATION	load receiver
WITHOUT_CLASSIFICATION	receiver
WITHOUT_CLASSIFICATION	load arguments
WITHOUT_CLASSIFICATION	load arguments
WITHOUT_CLASSIFICATION	case 4: case 5:
WITHOUT_CLASSIFICATION	Object[] args
WITHOUT_CLASSIFICATION	load handle
WITHOUT_CLASSIFICATION	args array
WITHOUT_CLASSIFICATION	i'th argument
WITHOUT_CLASSIFICATION	invoke specific arity version
WITHOUT_CLASSIFICATION	Object arg0
WITHOUT_CLASSIFICATION	useful for code completion inside the IRB
WITHOUT_CLASSIFICATION	No editing before startPos
WITHOUT_CLASSIFICATION	no silly ticks!
WITHOUT_CLASSIFICATION	no candidates? Fail.
WITHOUT_CLASSIFICATION	at end
WITHOUT_CLASSIFICATION	undo check
WITHOUT_CLASSIFICATION	Explicit reference to these vars as symbols...
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	\t\n\"\\'`@$><=;|&{(
WITHOUT_CLASSIFICATION	Assign the values.
WITHOUT_CLASSIFICATION	no check for ''
WITHOUT_CLASSIFICATION	no check for ''
WITHOUT_CLASSIFICATION	Binding provided for scope, use it
WITHOUT_CLASSIFICATION	this is ensured by the callers
WITHOUT_CLASSIFICATION	no binding, just eval in "current" frame (caller's frame)
WITHOUT_CLASSIFICATION	restore position
WITHOUT_CLASSIFICATION	Something like cvar_cbase() from eval.c, factored out for the benefit of all the classvar-related node evaluations
WITHOUT_CLASSIFICATION	Used by the compiler to simplify arg processing
WITHOUT_CLASSIFICATION	JRUBY-2673: if wrapping a NativeException, use the actual Java exception's trace as our Java trace
WITHOUT_CLASSIFICATION	MRI does similar thing on MacOS X with 'EditLine wrapper'.
WITHOUT_CLASSIFICATION	We lazily initialize this in case Readline.readline has been overridden in ruby (s_readline)
WITHOUT_CLASSIFICATION	JRUBY-852, ignore escape key (it causes IRB to quit if we pass it out through readline)
WITHOUT_CLASSIFICATION	not overridden, let's go
WITHOUT_CLASSIFICATION	Explicitly use UTF-8 here. c.f. history.addToHistory using line.asUTF8()
WITHOUT_CLASSIFICATION	FIXME: JRUBY-3604
WITHOUT_CLASSIFICATION	Complete using a Proc object
WITHOUT_CLASSIFICATION	clear basename so it's anonymous when raising
WITHOUT_CLASSIFICATION	These are not really used by timeout, but exposed for compatibility
WITHOUT_CLASSIFICATION	Timeout module methods
WITHOUT_CLASSIFICATION	Toplevel defines
WITHOUT_CLASSIFICATION	No seconds, just yield
WITHOUT_CLASSIFICATION	No timeout in critical section
WITHOUT_CLASSIFICATION	if it's the exception we're expecting
WITHOUT_CLASSIFICATION	and we were given a specific exception
WITHOUT_CLASSIFICATION	otherwise, rethrow
WITHOUT_CLASSIFICATION	Remove the Executor task now, to avoid cancelled tasks accumulating until an Executor thread can schedule and remove them
WITHOUT_CLASSIFICATION	If the task was scheduled, wait for it to finish before polling for the exception it would have thrown.
WITHOUT_CLASSIFICATION	NetProtocolBufferedIO
WITHOUT_CLASSIFICATION	When a length is given, read_string acts like get_bytes
WITHOUT_CLASSIFICATION	Replace memory object with one that throws an exception on any access
WITHOUT_CLASSIFICATION	ARRAY and STRUCT are only used internally
WITHOUT_CLASSIFICATION	If no release method is defined, then memory leaks will result.
WITHOUT_CLASSIFICATION	This variant of newStruct is called from StructLayoutBuilder
WITHOUT_CLASSIFICATION	This also handles unsigned int -> negative signed int conversion
WITHOUT_CLASSIFICATION	Windows is LLP64
WITHOUT_CLASSIFICATION	Older JDK on linux map 'c' to 'libc.so' which doesn't work
WITHOUT_CLASSIFICATION	Ensure room for terminating zero byte
WITHOUT_CLASSIFICATION	$blah
WITHOUT_CLASSIFICATION	Replace memory object with one that throws an exception on any access
WITHOUT_CLASSIFICATION	A specific version was requested - use as is for search
WITHOUT_CLASSIFICATION	Ensure room for terminating zero byte
WITHOUT_CLASSIFICATION	Keep a reference to the temporary memory in the cache so it does not get freed by the GC until the struct is freed
WITHOUT_CLASSIFICATION	Add Pointer::NULL as a constant
WITHOUT_CLASSIFICATION	Create the ordered list of field names from the map
WITHOUT_CLASSIFICATION	Assemble a [ :name, offset ] array
WITHOUT_CLASSIFICATION	case FLOAT:
WITHOUT_CLASSIFICATION	keep a reference to avoid the memory being freed
WITHOUT_CLASSIFICATION	keep a reference to avoid the memory being freed
WITHOUT_CLASSIFICATION	No auto cleanup needed
WITHOUT_CLASSIFICATION	Wire up Function#call(args) to use the super-fast native invokers
WITHOUT_CLASSIFICATION	Get the convention from the options hash
WITHOUT_CLASSIFICATION	Get the convention from the options hash
WITHOUT_CLASSIFICATION	If there is exactly _one_ callback argument to the function, then a block can be given and automatically subsituted for the callback parameter.
WITHOUT_CLASSIFICATION	------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	AF_INET
WITHOUT_CLASSIFICATION	AF_INET
WITHOUT_CLASSIFICATION	RubyUNIXServer
WITHOUT_CLASSIFICATION	line 321
WITHOUT_CLASSIFICATION	Set up for potentially fast-int operations
WITHOUT_CLASSIFICATION	Hook up the MemoryPointer class if its not already there
WITHOUT_CLASSIFICATION	This is a bit convoluted because (1) SocketChannel.bind is only in jdk 7 and (2) Socket.getChannel() seems to return null in some cases
WITHOUT_CLASSIFICATION	no UNIXSockets on Windows
WITHOUT_CLASSIFICATION	Sockaddr_un has different structure on different platforms. See JRUBY-2213 for more details.
WITHOUT_CLASSIFICATION	There is something valid in the sun_path component
WITHOUT_CLASSIFICATION	RubyIPSocket
WITHOUT_CLASSIFICATION	host is nil or the empty string, bind to INADDR_ANY
WITHOUT_CLASSIFICATION	host and port given
WITHOUT_CLASSIFICATION	RubyUDPSocket
WITHOUT_CLASSIFICATION	By default we always reverse lookup unless do_not_reverse_lookup set.
WITHOUT_CLASSIFICATION	make sure descriptor is registered
WITHOUT_CLASSIFICATION	continue with normal initialization
WITHOUT_CLASSIFICATION	recv returns nil on EOF
WITHOUT_CLASSIFICATION	Can't support the rest with Java
WITHOUT_CLASSIFICATION	RubyBasicSocket
WITHOUT_CLASSIFICATION	we don't have to define any that we don't support; see socket.c
WITHOUT_CLASSIFICATION	mandatory constants we haven't implemented
WITHOUT_CLASSIFICATION	constants webrick crashes without
WITHOUT_CLASSIFICATION	More constants needed by specs
WITHOUT_CLASSIFICATION	normal file descriptor..try to work with it
WITHOUT_CLASSIFICATION	AF_INET
WITHOUT_CLASSIFICATION	255.255.255.255
WITHOUT_CLASSIFICATION	0.0.0.0
WITHOUT_CLASSIFICATION	def self.getaddrinfo(host, port, family = nil, socktype = nil, protocol = nil, flags = nil)
WITHOUT_CLASSIFICATION	line 323
WITHOUT_CLASSIFICATION	can't set TC classloader
WITHOUT_CLASSIFICATION	can't set TC classloader
WITHOUT_CLASSIFICATION	ok, it's a socket...set values accordingly just using AF_INET since we can't tell from SocketChannel...
WITHOUT_CLASSIFICATION	datagram, set accordingly again, AF_INET
WITHOUT_CLASSIFICATION	IRubyObject family = args[2];
WITHOUT_CLASSIFICATION	When Socket::AI_PASSIVE and host is nil, return 'any' address.
WITHOUT_CLASSIFICATION	The value of 1 is for Socket::AI_PASSIVE.
WITHOUT_CLASSIFICATION	RubySocket
WITHOUT_CLASSIFICATION	numeric host, use it for port
WITHOUT_CLASSIFICATION	e.printStackTrace();
WITHOUT_CLASSIFICATION	we were woken up without being selected...poll for thread events and go back to sleep
WITHOUT_CLASSIFICATION	otherwise one key has been selected (ours) so we get the channel and hand it off
WITHOUT_CLASSIFICATION	no connection immediately accepted, let them try again
WITHOUT_CLASSIFICATION	do nothing, just exit
WITHOUT_CLASSIFICATION	nativeThread.setPriority(priority);
WITHOUT_CLASSIFICATION	set thread context JRuby classloader here, for Ruby-owned thread
WITHOUT_CLASSIFICATION	uber-ThreadKill catcher, since it should always just mean "be dead"
WITHOUT_CLASSIFICATION	Call the thread's code
WITHOUT_CLASSIFICATION	Someone called exit!, so we need to kill the main thread
WITHOUT_CLASSIFICATION	restore context classloader, in case we're using a thread pool
WITHOUT_CLASSIFICATION	be dead
WITHOUT_CLASSIFICATION	loop until a context is available, to clean up softrefs that might have been collected
WITHOUT_CLASSIFICATION	all threads in ruby thread group plus main thread
WITHOUT_CLASSIFICATION	thread is not alive, skip it
WITHOUT_CLASSIFICATION	future is done or cancelled, skip it
WITHOUT_CLASSIFICATION	first, check if the sender has unreceived mail
WITHOUT_CLASSIFICATION	then deliver mail to the target
WITHOUT_CLASSIFICATION	UndefinedMethod should be immutable
WITHOUT_CLASSIFICATION	Define a second version that doesn't take a block, so we have unique code paths for both cases.
WITHOUT_CLASSIFICATION	invoke pre method stuff
WITHOUT_CLASSIFICATION	main body
WITHOUT_CLASSIFICATION	return jump handling
WITHOUT_CLASSIFICATION	finally
WITHOUT_CLASSIFICATION	return result if we're still good
WITHOUT_CLASSIFICATION	redo jump handling
WITHOUT_CLASSIFICATION	clear the redo
WITHOUT_CLASSIFICATION	get runtime, create jump error, and throw it
WITHOUT_CLASSIFICATION	throw redo error if we're still good
WITHOUT_CLASSIFICATION	finally handling for abnormal exit
WITHOUT_CLASSIFICATION	call post method stuff (exception raised)
WITHOUT_CLASSIFICATION	No required specified, check actual number of required args
WITHOUT_CLASSIFICATION	actual required is less than 3, so we use specific arity
WITHOUT_CLASSIFICATION	actual required is greater than 3, raise error (we don't support actual required > 3)
WITHOUT_CLASSIFICATION	simple path, no multimethod
WITHOUT_CLASSIFICATION	in debug mode we append _DBG to class name to force it to regenerate (or use pre-generated debug version)
WITHOUT_CLASSIFICATION	in debug mode we append _DBG to class name to force it to regenerate (or use pre-generated debug version)
WITHOUT_CLASSIFICATION	normal all-rest method
WITHOUT_CLASSIFICATION	for zero, one, two, three arities, JavaMethod.JavaMethod.call(...IRubyObject[] args...) will check
WITHOUT_CLASSIFICATION	promise to implement zero to N
WITHOUT_CLASSIFICATION	return
WITHOUT_CLASSIFICATION	just confirm minimum args provided
WITHOUT_CLASSIFICATION	just confirm args length == required
WITHOUT_CLASSIFICATION	confirm minimum args provided
WITHOUT_CLASSIFICATION	confirm maximum not greater than optional
WITHOUT_CLASSIFICATION	Raise an error if arity does not match requirements
WITHOUT_CLASSIFICATION	tc
WITHOUT_CLASSIFICATION	self name
WITHOUT_CLASSIFICATION	no args
WITHOUT_CLASSIFICATION	variable args with block
WITHOUT_CLASSIFICATION	variable args no block, load null block
WITHOUT_CLASSIFICATION	zero args, no block; load NULL_BLOCK
WITHOUT_CLASSIFICATION	one arg with block
WITHOUT_CLASSIFICATION	one arg, no block; load NULL_BLOCK
WITHOUT_CLASSIFICATION	two args with block
WITHOUT_CLASSIFICATION	two args, no block; load NULL_BLOCK
WITHOUT_CLASSIFICATION	three args with block
WITHOUT_CLASSIFICATION	three args, no block; load NULL_BLOCK
WITHOUT_CLASSIFICATION	load block if it accepts block
WITHOUT_CLASSIFICATION	all other arg cases with block
WITHOUT_CLASSIFICATION	all other arg cases without block
WITHOUT_CLASSIFICATION	one arg, no block; do nothing
WITHOUT_CLASSIFICATION	two args, no block; do nothing
WITHOUT_CLASSIFICATION	three args, no block; do nothing
WITHOUT_CLASSIFICATION	load target for invocations
WITHOUT_CLASSIFICATION	load receiver as original type for virtual invocation
WITHOUT_CLASSIFICATION	static invocation
WITHOUT_CLASSIFICATION	virtual invocation
WITHOUT_CLASSIFICATION	void return type, so we need to load a nil for returning below
WITHOUT_CLASSIFICATION	normal finally and exit
WITHOUT_CLASSIFICATION	promise to implement one to N
WITHOUT_CLASSIFICATION	call post method stuff (exception raised)
WITHOUT_CLASSIFICATION	these are only needed if we have a non-noop call config
WITHOUT_CLASSIFICATION	method itself ThreadContext invoked name
WITHOUT_CLASSIFICATION	method itself ThreadContext invoked name
WITHOUT_CLASSIFICATION	singleton classes don't get their own visibility domain
WITHOUT_CLASSIFICATION	For visibility we need real meta class and not anonymous one from class << self
WITHOUT_CLASSIFICATION	SimpleInvocationMethod
WITHOUT_CLASSIFICATION	never reached
WITHOUT_CLASSIFICATION	promise to implement N with block
WITHOUT_CLASSIFICATION	promise to implement zero to N with block
WITHOUT_CLASSIFICATION	promise to implement one to N with block
WITHOUT_CLASSIFICATION	promise to implement two to N with block
WITHOUT_CLASSIFICATION	promise to implement zero to three with block
WITHOUT_CLASSIFICATION	promise to implement one to three with block
WITHOUT_CLASSIFICATION	promise to implement two to three with block
WITHOUT_CLASSIFICATION	promise to implement three with block
WITHOUT_CLASSIFICATION	promise to implement N
WITHOUT_CLASSIFICATION	DumpingInvocationMethodFactory
WITHOUT_CLASSIFICATION	We promote our box to being its own box since we're changing visibilities, and need it to be reflected on this method object independent of any other sharing the box.
WITHOUT_CLASSIFICATION	Normally we could leave these to fall back on the superclass, but since it dispatches through the [] version below, which may dispatch through the []+block version, we can save it a couple hops by overriding these here.
WITHOUT_CLASSIFICATION	promise to implement two to N
WITHOUT_CLASSIFICATION	promise to implement three to N
WITHOUT_CLASSIFICATION	promise to implement zero to three
WITHOUT_CLASSIFICATION	promise to implement one to three
WITHOUT_CLASSIFICATION	promise to implement two to three
WITHOUT_CLASSIFICATION	promise to implement three
WITHOUT_CLASSIFICATION	all other arities use "n" dispatch path
WITHOUT_CLASSIFICATION	load up object and add a few useful methods
WITHOUT_CLASSIFICATION	open up the 'to_java' and 'as' coercion methods on Ruby Objects, via Kernel
WITHOUT_CLASSIFICATION	construct the class, implementing all supertypes
WITHOUT_CLASSIFICATION	fields needed for dispatch and such
WITHOUT_CLASSIFICATION	create constructor
WITHOUT_CLASSIFICATION	wrap self and store the wrapper
WITHOUT_CLASSIFICATION	end constructor
WITHOUT_CLASSIFICATION	start setup method
WITHOUT_CLASSIFICATION	set RubyClass
WITHOUT_CLASSIFICATION	set Ruby
WITHOUT_CLASSIFICATION	all methods dispatch to the simple version by default, which is method_missing normally
WITHOUT_CLASSIFICATION	try specific name first, falling back on simple name
WITHOUT_CLASSIFICATION	get current context
WITHOUT_CLASSIFICATION	load self, class, and name
WITHOUT_CLASSIFICATION	construct the class, implementing all supertypes
WITHOUT_CLASSIFICATION	fields needed for dispatch and such
WITHOUT_CLASSIFICATION	create constructor
WITHOUT_CLASSIFICATION	end constructor
WITHOUT_CLASSIFICATION	for each simple method name, implement the complex methods, calling the simple version
WITHOUT_CLASSIFICATION	load arguments into IRubyObject[] for dispatch
WITHOUT_CLASSIFICATION	convert to IRubyObject
WITHOUT_CLASSIFICATION	load null block
WITHOUT_CLASSIFICATION	invoke method
WITHOUT_CLASSIFICATION	if we expect a return value, unwrap it
WITHOUT_CLASSIFICATION	end setup method
WITHOUT_CLASSIFICATION	end class
WITHOUT_CLASSIFICATION	create static init, for a monitor object
WITHOUT_CLASSIFICATION	store the wrapper
WITHOUT_CLASSIFICATION	prepare temp locals
WITHOUT_CLASSIFICATION	Try to look up field for simple name get field; if nonnull, go straight to dispatch
WITHOUT_CLASSIFICATION	field is null, lock class and try to populate
WITHOUT_CLASSIFICATION	try/finally block to ensure unlock
WITHOUT_CLASSIFICATION	store it
WITHOUT_CLASSIFICATION	end of try block
WITHOUT_CLASSIFICATION	finally block to release monitor
WITHOUT_CLASSIFICATION	exception handling for monitor release
WITHOUT_CLASSIFICATION	re-get, re-check method; if not null now, go to dispatch
WITHOUT_CLASSIFICATION	load self, class, and name
WITHOUT_CLASSIFICATION	load arguments into IRubyObject[] for dispatch
WITHOUT_CLASSIFICATION	convert to IRubyObject
WITHOUT_CLASSIFICATION	invoke method
WITHOUT_CLASSIFICATION	if we expect a return value, unwrap it
WITHOUT_CLASSIFICATION	end setup method
WITHOUT_CLASSIFICATION	end class
WITHOUT_CLASSIFICATION	create the class
WITHOUT_CLASSIFICATION	method still not available, call method_missing
WITHOUT_CLASSIFICATION	perform the dispatch
WITHOUT_CLASSIFICATION	try to load the specified name; only if that fails, try to define the class
WITHOUT_CLASSIFICATION	up two slots, for long's two halves
WITHOUT_CLASSIFICATION	up two slots, for long's two halves
WITHOUT_CLASSIFICATION	setup the class
WITHOUT_CLASSIFICATION	now, create a method_added that can replace the DynamicMethod fields as they're redefined
WITHOUT_CLASSIFICATION	do nothing, it's a non-impl method
WITHOUT_CLASSIFICATION	probably a primitive
WITHOUT_CLASSIFICATION	interfaces are handled as modules
WITHOUT_CLASSIFICATION	construct the mirror class and parent classes
WITHOUT_CLASSIFICATION	set the full name
WITHOUT_CLASSIFICATION	include all interfaces
WITHOUT_CLASSIFICATION	if it's an array, only add methods for aref, aset, and length
WITHOUT_CLASSIFICATION	add array construction methods
WITHOUT_CLASSIFICATION	add all public constructors (note: getConstructors only returns public ones)
WITHOUT_CLASSIFICATION	add all instance and static methods
WITHOUT_CLASSIFICATION	proxy is complete, return it
WITHOUT_CLASSIFICATION	too much array creation!
WITHOUT_CLASSIFICATION	only include static methods if specified
WITHOUT_CLASSIFICATION	add a few type-specific special methods
WITHOUT_CLASSIFICATION	add all static variables
WITHOUT_CLASSIFICATION	only public static fields that are valid constants
WITHOUT_CLASSIFICATION	looks like someone's trying to raise a Java exception. Let them.
WITHOUT_CLASSIFICATION	NOTE: The five match methods are arity-split to avoid the cost of boxing arguments when there's already a cached match. Do not condense them into a single method.
WITHOUT_CLASSIFICATION	TODO: This is where we would want to do precision checks to see if it's non-destructive to coerce a given type into the target integral primitive
WITHOUT_CLASSIFICATION	long first because it's what Fixnum claims to be
WITHOUT_CLASSIFICATION	double first because it's what float claims to be
WITHOUT_CLASSIFICATION	TODO: varargs?
WITHOUT_CLASSIFICATION	read-volatile
WITHOUT_CLASSIFICATION	initialize cache of parameter types to method
WITHOUT_CLASSIFICATION	we set all Java methods to optional, since many/most have overloads
WITHOUT_CLASSIFICATION	If we hold a Java object, we need a java_class accessor
WITHOUT_CLASSIFICATION	line 326
WITHOUT_CLASSIFICATION	read-volatile
WITHOUT_CLASSIFICATION	initialize cache of parameter types to method
WITHOUT_CLASSIFICATION	too much array creation!
WITHOUT_CLASSIFICATION	construct new array proxy (ArrayJavaProxy)
WITHOUT_CLASSIFICATION	Get map of all fields we want to define.
WITHOUT_CLASSIFICATION	Look through all mappings to find a match entry for this field
WITHOUT_CLASSIFICATION	Hit a non-java proxy class (included Modules can be a cause of this...skip)
WITHOUT_CLASSIFICATION	We could not find all of them print out first one (we could print them all?)
WITHOUT_CLASSIFICATION	dummy bodies for default impls
WITHOUT_CLASSIFICATION	initialize this if it hasn't been
WITHOUT_CLASSIFICATION	initialize these if they haven't been
WITHOUT_CLASSIFICATION	not allowed for original (non-generated) Java classes note: not allowing for any previously created class right now; this restriction might be loosened later for generated classes
WITHOUT_CLASSIFICATION	setup new, etc unless this is a ConcreteJavaProxy subclass
WITHOUT_CLASSIFICATION	First we make modifications to the class, to adapt it to being both a Ruby class and a proxy for a Java type
WITHOUT_CLASSIFICATION	list of interfaces we implement
WITHOUT_CLASSIFICATION	We capture the original "new" and make it private
WITHOUT_CLASSIFICATION	The replacement "new" allocates and inits the Ruby object as before, but also instantiates our proxified Java object by calling __jcreate!
WITHOUT_CLASSIFICATION	Next, we define a few private methods that we'll use to manipulate the Java object contained within this Ruby object
WITHOUT_CLASSIFICATION	jcreate instantiates the proxy object which implements all interfaces and which is wrapped and implemented by this object
WITHOUT_CLASSIFICATION	Now we add an "implement" and "implement_all" methods to the class
WITHOUT_CLASSIFICATION	implement all forces implementation of all interfaces we intend for this class to implement
WITHOUT_CLASSIFICATION	we've already done the above priming logic, just add another interface to the list of intentions unless we're past the point of no return or already intend to implement the given interface
WITHOUT_CLASSIFICATION	walk all superclasses aggregating interfaces
WITHOUT_CLASSIFICATION	construct the new interface impl and set it into the object
WITHOUT_CLASSIFICATION	assuming the user wants a collection of interfaces that can be included together. make it so.
WITHOUT_CLASSIFICATION	not allowed for existing Java interface modules
WITHOUT_CLASSIFICATION	To turn a module into an "interface collection" we add a class instance variable to hold the list of interfaces, and modify append_features for this module to call append_features on each of those interfaces as well
WITHOUT_CLASSIFICATION	already set up append_features, just add the interface if we haven't already
WITHOUT_CLASSIFICATION	array-of-interface-type creation/identity
WITHOUT_CLASSIFICATION	keep this variant for kind_of? testing
WITHOUT_CLASSIFICATION	array creation should use this variant
WITHOUT_CLASSIFICATION	parent.setConstant(name, proxyClass); where the name should come from ?
WITHOUT_CLASSIFICATION	including interface module so old-style interface "subclasses" will respond correctly to #kind_of?, etc.
WITHOUT_CLASSIFICATION	add reference to interface module
WITHOUT_CLASSIFICATION	Need to initialize
WITHOUT_CLASSIFICATION	Need to initialize
WITHOUT_CLASSIFICATION	proxy is complete, return it
WITHOUT_CLASSIFICATION	same as argument_types, but matches name in java.lang.reflect.Constructor/Method
WITHOUT_CLASSIFICATION	This point is only reached if there was an exception handler installed.
WITHOUT_CLASSIFICATION	weakly reserved names
WITHOUT_CLASSIFICATION	called only by initializing thread; no synchronization required
WITHOUT_CLASSIFICATION	called only by initializing thread; no synchronization required
WITHOUT_CLASSIFICATION	modified only by addMethod; no synchronization required
WITHOUT_CLASSIFICATION	if there's no constructor, we must prevent construction
WITHOUT_CLASSIFICATION	caching constructors, as they're accessed for each new instance
WITHOUT_CLASSIFICATION	proxy module for interfaces
WITHOUT_CLASSIFICATION	proxy class for concrete classes. also used for "concrete" interfaces, which is why we have two fields
WITHOUT_CLASSIFICATION	readable only by thread building proxy, so don't need to be volatile. used to handle recursive calls to getProxyClass/Module while proxy is being constructed (usually when a constant defined by a class is of the same type as that class).
WITHOUT_CLASSIFICATION	allow proxy to be read without synchronization. if proxy is under construction, only the building thread can see it.
WITHOUT_CLASSIFICATION	Now add all aliases for the static methods (fields) as appropriate
WITHOUT_CLASSIFICATION	proxy is under construction, building thread can safely read non-volatile value
WITHOUT_CLASSIFICATION	Add property name aliases
WITHOUT_CLASSIFICATION	getFoo => foo getFoo(int) => foo(int)
WITHOUT_CLASSIFICATION	setFoo(Foo) => foo=(Foo)
WITHOUT_CLASSIFICATION	isFoo() => foo, isFoo() => foo()
WITHOUT_CLASSIFICATION	Additionally add ?-postfixed aliases to any boolean methods and properties.
WITHOUT_CLASSIFICATION	is_something?, contains_thing?
WITHOUT_CLASSIFICATION	something?
WITHOUT_CLASSIFICATION	setup constants for public inner classes
WITHOUT_CLASSIFICATION	setup constants for public inner classes
WITHOUT_CLASSIFICATION	Ignore bad constant named inner classes pending JRUBY-697
WITHOUT_CLASSIFICATION	Ignore bad constant named inner classes pending JRUBY-697
WITHOUT_CLASSIFICATION	create constructorInstaller; if there are no constructors, it will disable construction
WITHOUT_CLASSIFICATION	we need to collect all methods, though we'll only install the ones that are named in this class
WITHOUT_CLASSIFICATION	Install direct java methods with mangled name so 'send' can call them directly.
WITHOUT_CLASSIFICATION	now iterate over all installers and make sure they also have appropriate aliases
WITHOUT_CLASSIFICATION	old (quasi-deprecated) interface class
WITHOUT_CLASSIFICATION	1.9 support for encodings
WITHOUT_CLASSIFICATION	double-check the cache now that we're synchronized
WITHOUT_CLASSIFICATION	setFoo(Foo) => foo=(Foo)
WITHOUT_CLASSIFICATION	isFoo() => foo, isFoo() => foo()
WITHOUT_CLASSIFICATION	is_something?, contains_thing?
WITHOUT_CLASSIFICATION	one word type name that starts lower-case...it may be a primitive type
WITHOUT_CLASSIFICATION	Java.getProxyClass deals with sync issues, so we won't duplicate the logic here
WITHOUT_CLASSIFICATION	note: intentionally returning the actual array returned from Java, rather than wrapping it in a RubyArray. wave of the future, when java_class will return the actual class, rather than a JavaClass wrapper.
WITHOUT_CLASSIFICATION	see note above re: return type
WITHOUT_CLASSIFICATION	restrictive security policy; no matter, we only want public classes anyway
WITHOUT_CLASSIFICATION	very restrictive policy (disallows Member.PUBLIC) we'd never actually get this far in that case
WITHOUT_CLASSIFICATION	one-dimensional array
WITHOUT_CLASSIFICATION	n-dimensional array
WITHOUT_CLASSIFICATION	if it's an array of arrays, recurse with the component type
WITHOUT_CLASSIFICATION	we all all superclasses, but avoid adding superclass methods with same name+signature as subclass methods see JRUBY-3130
WITHOUT_CLASSIFICATION	Proc implementing an interface, pull in the catch-all code that lets the proc get invoked no matter what method is called on the interface
WITHOUT_CLASSIFICATION	can't be converted any more, return it
WITHOUT_CLASSIFICATION	getFooBar() => fooBar?, foo_bar?()
WITHOUT_CLASSIFICATION	If not a property, but is boolean add ?-postfixed aliases.
WITHOUT_CLASSIFICATION	many cases are ok to convert to float; if not one of these, error
WITHOUT_CLASSIFICATION	for Object, default to natural wrapper type
WITHOUT_CLASSIFICATION	rubyObject is already of the required jruby class (or subclass)
WITHOUT_CLASSIFICATION	the converters handle not only primitive types but also their boxed versions, so we should check if we have a converter before checking for isPrimitive()
WITHOUT_CLASSIFICATION	it's not one of the types we convert, so just pass it out as-is without wrapping
WITHOUT_CLASSIFICATION	we've found a Java type to which we've coerced the Ruby value, wrap it
WITHOUT_CLASSIFICATION	set of utility methods for Java-based proxy objects
WITHOUT_CLASSIFICATION	the proxy (wrapper) type hierarchy
WITHOUT_CLASSIFICATION	InterfaceJavaProxy.createInterfaceJavaProxy(context);
WITHOUT_CLASSIFICATION	also create the JavaProxy classes
WITHOUT_CLASSIFICATION	The template for interface modules
WITHOUT_CLASSIFICATION	Now attach Java-related extras to core classes
WITHOUT_CLASSIFICATION	add all name-to-class mappings
WITHOUT_CLASSIFICATION	add some base Java classes everyone will need
WITHOUT_CLASSIFICATION	finally, set JavaSupport.isEnabled to true
WITHOUT_CLASSIFICATION	shouldn't happen, but if a superclass is specified, it's not ours
WITHOUT_CLASSIFICATION	include any interfaces we extend
WITHOUT_CLASSIFICATION	java.lang.Object is added at root of java proxy classes
WITHOUT_CLASSIFICATION	other java proxy classes added under their superclass' java proxy
WITHOUT_CLASSIFICATION	include interface modules into the proxy class
WITHOUT_CLASSIFICATION	JRUBY-2938 the proxy class might already exist
WITHOUT_CLASSIFICATION	add java_method for unbound use
WITHOUT_CLASSIFICATION	add alias to meta
WITHOUT_CLASSIFICATION	we'll only map conventional class names to modules
WITHOUT_CLASSIFICATION	expected
WITHOUT_CLASSIFICATION	Haven't found a class, continue on as though it were a package
WITHOUT_CLASSIFICATION	upper case name, so most likely a class
WITHOUT_CLASSIFICATION	This point is only reached if there was an exception handler installed.
WITHOUT_CLASSIFICATION	add alias to meta
WITHOUT_CLASSIFICATION	this is where we'll get connected when classes are opened using package module syntax.
WITHOUT_CLASSIFICATION	save package module as ivar in parent, and add method to parent so we don't have to come back here.
WITHOUT_CLASSIFICATION	this covers primitives and (unlikely) lower-case class names
WITHOUT_CLASSIFICATION	not primitive or lc class
WITHOUT_CLASSIFICATION	not primitive or lc class
WITHOUT_CLASSIFICATION	Is there a supplied proc argument or do we assume a block was supplied
WITHOUT_CLASSIFICATION	Create list of interfaces to proxy (and make sure they really are interfaces)
WITHOUT_CLASSIFICATION	hashcode is a combination of the interfaces and the Ruby class we're using to implement them
WITHOUT_CLASSIFICATION	if it's a singleton class and the real class is proc, we're doing closure conversion so just use Proc's hashcode
WITHOUT_CLASSIFICATION	normal new class implementing interfaces
WITHOUT_CLASSIFICATION	Initialize some components.
WITHOUT_CLASSIFICATION	not synchronizing these methods, no harm if these values get set more than once. (also note that there's no chance of getting a partially initialized class/module, as happens-before is guaranteed by volatile write/read of constants table.)
WITHOUT_CLASSIFICATION	Java reflection does not allow retrieving constructors like methods
WITHOUT_CLASSIFICATION	for zero args case we can stop searching
WITHOUT_CLASSIFICATION	for zero args case we can stop searching
WITHOUT_CLASSIFICATION	no matching ctor found
WITHOUT_CLASSIFICATION	Create Ruby proxies for any input arguments that are not primitives.
WITHOUT_CLASSIFICATION	prepare a faster handle if handles are enabled and the method and class are public
WITHOUT_CLASSIFICATION	must be a public method
WITHOUT_CLASSIFICATION	must be a public class
WITHOUT_CLASSIFICATION	must have been loaded from our known classloader hierarchy
WITHOUT_CLASSIFICATION	Special classes like Collections.EMPTY_LIST are inner classes that are private but implement public interfaces. Their methods are all public methods for the public interface. Let these public methods execute via setAccessible(true).
WITHOUT_CLASSIFICATION	search through all declared methods to find a closest match
WITHOUT_CLASSIFICATION	no matching method found
WITHOUT_CLASSIFICATION	this test really means, that this is a ruby-defined subclass of a java class
WITHOUT_CLASSIFICATION	First we need to register the JRuby engine.
WITHOUT_CLASSIFICATION	Now we create a new BSFManager.
WITHOUT_CLASSIFICATION	Initialize a simple Frame.
WITHOUT_CLASSIFICATION	e.printStackTrace();
WITHOUT_CLASSIFICATION	e.printStackTrace();
WITHOUT_CLASSIFICATION	JRUBY-530, while case
WITHOUT_CLASSIFICATION	end class
WITHOUT_CLASSIFICATION	this test really means, that this is a ruby-defined subclass of a java class
WITHOUT_CLASSIFICATION	for our purposes, Accessibles are also Members, and vice-versa, so we'll include Member methods here.
WITHOUT_CLASSIFICATION	Declare those components as beans in BSF. Then it will be possible to access those components in Ruby as global variables ($frame, $menubar, ...)
WITHOUT_CLASSIFICATION	Execute a Ruby script (add the menubar to the frame).
WITHOUT_CLASSIFICATION	Execute Ruby statements.
WITHOUT_CLASSIFICATION	Evaluates a Ruby expression and display the result.
WITHOUT_CLASSIFICATION	Populate values for the parameter names
WITHOUT_CLASSIFICATION	package scope
WITHOUT_CLASSIFICATION	This point is only reached if there was an exception handler installed.
WITHOUT_CLASSIFICATION	Ruby-level methods
WITHOUT_CLASSIFICATION	need names ordered for key generation later
WITHOUT_CLASSIFICATION	we only collect methods and interfaces for user-defined proxy classes.
WITHOUT_CLASSIFICATION	get JavaClass if this is the new proxy class; verify it matches if this is a superclass proxy.
WITHOUT_CLASSIFICATION	get any included interfaces
WITHOUT_CLASSIFICATION	lock in the overridden methods for the new class, and any as-yet uninstantiated ancestor class.
WITHOUT_CLASSIFICATION	statically initialized below
WITHOUT_CLASSIFICATION	finish class initializer
WITHOUT_CLASSIFICATION	trigger class initialization for the class
WITHOUT_CLASSIFICATION	should not happen!
WITHOUT_CLASSIFICATION	start class
WITHOUT_CLASSIFICATION	make getter for handler
WITHOUT_CLASSIFICATION	make getter for proxy class
WITHOUT_CLASSIFICATION	add (potentially) overridden names to the key. TODO: see note above re: optimizations
WITHOUT_CLASSIFICATION	We generate all constructors and let some fail during invocation later
WITHOUT_CLASSIFICATION	create static private method field
WITHOUT_CLASSIFICATION	load static empty array
WITHOUT_CLASSIFICATION	box arguments
WITHOUT_CLASSIFICATION	this is a simple rethrow handler
WITHOUT_CLASSIFICATION	construct the super-proxy method
WITHOUT_CLASSIFICATION	do a void return
WITHOUT_CLASSIFICATION	utility methods
WITHOUT_CLASSIFICATION	Is there a supplied proc argument or do we assume a block was supplied
WITHOUT_CLASSIFICATION	store call information so method_missing impl can use it
WITHOUT_CLASSIFICATION	use the same logic as in EvaluationState
WITHOUT_CLASSIFICATION	no opt, no rest, exact match
WITHOUT_CLASSIFICATION	only rest, must be at least required
WITHOUT_CLASSIFICATION	opt but no rest, must be at least required and no more than required + opt
WITHOUT_CLASSIFICATION	opt and rest, must be at least required
WITHOUT_CLASSIFICATION	No block from a nil proc
WITHOUT_CLASSIFICATION	If not already a proc then we should try and make it one.
WITHOUT_CLASSIFICATION	The current block is already associated with proc. No need to create a new one
WITHOUT_CLASSIFICATION	Has the method that is calling super received a block argument
WITHOUT_CLASSIFICATION	NUL
WITHOUT_CLASSIFICATION	Reuse trailing consecutive sequence at same slot
WITHOUT_CLASSIFICATION	Clone all remaining nodes
WITHOUT_CLASSIFICATION	'class << state.self' and 'class << obj' uses defn as opposed to defs
WITHOUT_CLASSIFICATION	Each root node has a top-level scope that we need to push
WITHOUT_CLASSIFICATION	read-volatile
WITHOUT_CLASSIFICATION	read-volatile
WITHOUT_CLASSIFICATION	classes are directly in the hierarchy, so no special logic is necessary for implementer
WITHOUT_CLASSIFICATION	must be power of 2 must be power of 2
WITHOUT_CLASSIFICATION	Find power-of-two sizes best matching arguments
WITHOUT_CLASSIFICATION	note segmentShift differs from ConcurrentHashMap's calculation due to issues with System.identityHashCode (upper n bits always 0, at least under Java 1.6 / WinXP)
WITHOUT_CLASSIFICATION	System.err.println("ObjectProxyCache " + id + " started at "+ new java.util.Date());
WITHOUT_CLASSIFICATION	protected void finalize() throws Throwable { System.err.println("ObjectProxyCache " + id + " finalized at "+ new java.util.Date()); }
WITHOUT_CLASSIFICATION	EntryRefs include hash with key to facilitate lookup by Segment#expunge after ref is removed from ReferenceQueue
WITHOUT_CLASSIFICATION	Unlike WeakHashMap, our Entry does not subclass WeakReference, but rather makes it a final field. The theory is that doing so should force a happens-before relationship WRT the WeakReference constructor, guaranteeing that the key will be visibile to other threads (unless it's been GC'ed). See JLS 17.5 (final fields) and 17.4.5 (Happens-before order) to confirm or refute my reasoning here.
WITHOUT_CLASSIFICATION	references to the Java object and its proxy will either both be weak or both be soft, since the proxy contains a strong reference to the object, so it wouldn't make sense for the reference types to differ.
WITHOUT_CLASSIFICATION	ctor used by remove/rehash
WITHOUT_CLASSIFICATION	must be called under lock
WITHOUT_CLASSIFICATION	must be called under lock
WITHOUT_CLASSIFICATION	must be called under lock
WITHOUT_CLASSIFICATION	note that we'll potentially see the refs for both the java object and proxy -- whichever we see first will cause the entry to be removed; the other will not match an entry and will be ignored.
WITHOUT_CLASSIFICATION	temp method to verify tableSize value must be called under lock
WITHOUT_CLASSIFICATION	Single node in list
WITHOUT_CLASSIFICATION	indirect read-/write- volatile
WITHOUT_CLASSIFICATION	indirect read-/write- volatile
WITHOUT_CLASSIFICATION	entry exists, proxy has been gc'ed. replace entry.
WITHOUT_CLASSIFICATION	Where we get new positions from.
WITHOUT_CLASSIFICATION	Start of string ([, (, {, <, ', ", \n)
WITHOUT_CLASSIFICATION	Number of newlines read from the reader
WITHOUT_CLASSIFICATION	How many bytes into the source are we?
WITHOUT_CLASSIFICATION	For 'list' and only populated if list is not null.
WITHOUT_CLASSIFICATION	Last full line read.
WITHOUT_CLASSIFICATION	Save sourceLine for error reporting to display line where error occurred
WITHOUT_CLASSIFICATION	Get rest of line. lineBuffer filled as side-effect...
WITHOUT_CLASSIFICATION	Expand variables, Indentation of final marker
WITHOUT_CLASSIFICATION	Expand variables, Indentation of final marker
WITHOUT_CLASSIFICATION	End of string (], ), }, >, ', ", \0)
WITHOUT_CLASSIFICATION	How many strings are nested in the current string term
WITHOUT_CLASSIFICATION	Single-quote fast path
WITHOUT_CLASSIFICATION	Regexp engine 'java'
WITHOUT_CLASSIFICATION	Was a goto in original ruby lexer
WITHOUT_CLASSIFICATION	just ignore
WITHOUT_CLASSIFICATION	octal constant
WITHOUT_CLASSIFICATION	hex constant
WITHOUT_CLASSIFICATION	PUSH(1)
WITHOUT_CLASSIFICATION	POP
WITHOUT_CLASSIFICATION	PUSH(0). If you look at original macro: stack |= (n&1) => stack |= 0 => no-change.
WITHOUT_CLASSIFICATION	LEXPOP
WITHOUT_CLASSIFICATION	SET_P
WITHOUT_CLASSIFICATION	Marker delimiting heredoc boundary
WITHOUT_CLASSIFICATION	Found end marker for this heredoc
WITHOUT_CLASSIFICATION	Put back lastLine for any elements past start of heredoc marker
WITHOUT_CLASSIFICATION	Last token read via yylex().
WITHOUT_CLASSIFICATION	Value of last token which had a value associated with it.
WITHOUT_CLASSIFICATION	Stream of data that yylex() examines.
WITHOUT_CLASSIFICATION	Used for tiny smidgen of grammar in lexer (see setParserSupport())
WITHOUT_CLASSIFICATION	Give a name to a value. Enebo: This should be used more.
WITHOUT_CLASSIFICATION	When the heredoc identifier specifies <<-EOF that indents before ident. are ok (the '-').
WITHOUT_CLASSIFICATION	Are we lexing Ruby 1.8 or 1.9+ syntax
WITHOUT_CLASSIFICATION	Count of nested parentheses (1.9 only)
WITHOUT_CLASSIFICATION	1.9 only
WITHOUT_CLASSIFICATION	Short-hand (e.g. %{,%.,%!,... versus %Q{).
WITHOUT_CLASSIFICATION	Long-hand (e.g. %Q{}).
WITHOUT_CLASSIFICATION	no mb || ismbchar(term)
WITHOUT_CLASSIFICATION	Not normally used, but is left in here since it can be useful in debugging grammar and lexing problems.
WITHOUT_CLASSIFICATION	DEBUGGING HELP
WITHOUT_CLASSIFICATION	'\v'
WITHOUT_CLASSIFICATION	end of script.
WITHOUT_CLASSIFICATION	white spaces
WITHOUT_CLASSIFICATION	'\v'
WITHOUT_CLASSIFICATION	it's a comment
WITHOUT_CLASSIFICATION	Replace a string of newlines with a single one
WITHOUT_CLASSIFICATION	$\: output record separator
WITHOUT_CLASSIFICATION	EOF (ENEBO: After default?
WITHOUT_CLASSIFICATION	documentation nodes
WITHOUT_CLASSIFICATION	In case last next was the newline.
WITHOUT_CLASSIFICATION	Just a plain bang
WITHOUT_CLASSIFICATION	$_: last read line string
WITHOUT_CLASSIFICATION	$~: match-data
WITHOUT_CLASSIFICATION	$: argv
WITHOUT_CLASSIFICATION	$$: pid
WITHOUT_CLASSIFICATION	$?: last status
WITHOUT_CLASSIFICATION	$!: error string
WITHOUT_CLASSIFICATION	$@: error position
WITHOUT_CLASSIFICATION	$/: input record separator
WITHOUT_CLASSIFICATION	$;: field separator
WITHOUT_CLASSIFICATION	$,: output field separator
WITHOUT_CLASSIFICATION	$.: last read line number
WITHOUT_CLASSIFICATION	$=: ignorecase
WITHOUT_CLASSIFICATION	$:: load path
WITHOUT_CLASSIFICATION	$<: reading filename
WITHOUT_CLASSIFICATION	$": already loaded files
WITHOUT_CLASSIFICATION	$&: last match
WITHOUT_CLASSIFICATION	$`: string before last match
WITHOUT_CLASSIFICATION	$': string after last match
WITHOUT_CLASSIFICATION	methods 'foo!' and 'foo?' are possible but if followed by '=' it is relop
WITHOUT_CLASSIFICATION	See if it is a reserved word.
WITHOUT_CLASSIFICATION	enum lex_state
WITHOUT_CLASSIFICATION	block (primary)
WITHOUT_CLASSIFICATION	block (expr)
WITHOUT_CLASSIFICATION	hash
WITHOUT_CLASSIFICATION	ENEBO: 1.9 is IS_ARG, but we need to break apart for 1.8 support.
WITHOUT_CLASSIFICATION	FIXME: peek('u') utf8 stuff for 1.9
WITHOUT_CLASSIFICATION	We don't append '+' since Java number parser gets confused
WITHOUT_CLASSIFICATION	hexadecimal
WITHOUT_CLASSIFICATION	binary
WITHOUT_CLASSIFICATION	decimal
WITHOUT_CLASSIFICATION	Octal
WITHOUT_CLASSIFICATION	'_' in number just ignored
WITHOUT_CLASSIFICATION	backslash
WITHOUT_CLASSIFICATION	newline
WITHOUT_CLASSIFICATION	horizontal tab
WITHOUT_CLASSIFICATION	form feed
WITHOUT_CLASSIFICATION	vertical tab
WITHOUT_CLASSIFICATION	alarm(bell)
WITHOUT_CLASSIFICATION	escape
WITHOUT_CLASSIFICATION	hex constant
WITHOUT_CLASSIFICATION	char hexValue = scanHex(2);
WITHOUT_CLASSIFICATION	If \r\n then just pass along \n (windows). If \r[^\n] then pass along \n (MAC).
WITHOUT_CLASSIFICATION	space
WITHOUT_CLASSIFICATION	Where we started this marker match
WITHOUT_CLASSIFICATION	Position within source must reflect the actual offset and column. Since we ate an extra character here (this accounting is normally done in read ), we should update position info.
WITHOUT_CLASSIFICATION	We use offset here to keep track of extra newlines for windows
WITHOUT_CLASSIFICATION	If \r\n then just pass along \n (windows). If \r[^\n] then pass along \n (MAC).
WITHOUT_CLASSIFICATION	FIXME: Old Mac format strings?
WITHOUT_CLASSIFICATION	FIXME: Old Mac format strings?
WITHOUT_CLASSIFICATION	Where we get our newest char's
WITHOUT_CLASSIFICATION	Our readback/pushback buffer.
WITHOUT_CLASSIFICATION	index of last character in pushback buffer
WITHOUT_CLASSIFICATION	Character read before previous read
WITHOUT_CLASSIFICATION	keep value of twoAgo around so we can restore after we unread
WITHOUT_CLASSIFICATION	NetProtocolBufferedIOLibrary
WITHOUT_CLASSIFICATION	BigDecimalLibrary
WITHOUT_CLASSIFICATION	TODO: FD_CLOEXEC is mysterious and we are not sure how constantine should include this. We did it here for now
WITHOUT_CLASSIFICATION	Ruby's designation for some platforms, minus version numbers in some cases
WITHOUT_CLASSIFICATION	that's what JDK5 produces on Windows Vista
WITHOUT_CLASSIFICATION	Rubygems is too specific on host cpu so until we have real need lets default to universal setConfig(configHash, "arch", System.getProperty("os.arch") + "-java" + System.getProperty("java.specification.version"));
WITHOUT_CLASSIFICATION	Our shell scripts pass in non-canonicalized paths, but even if we didn't anyone who did would become unhappy because Ruby apps expect no relative operators in the pathname (rubygems, for example).
WITHOUT_CLASSIFICATION	this set is only for darwin
WITHOUT_CLASSIFICATION	DigestLibrary
WITHOUT_CLASSIFICATION	all errors, just info; do not prevent loading IKVM does not support JMX, and throws an error
WITHOUT_CLASSIFICATION	all errors, just info; do not prevent unloading IKVM does not support JMX, and throws an error
WITHOUT_CLASSIFICATION	do nothing, return dummy version below
WITHOUT_CLASSIFICATION	yyLhs 496
WITHOUT_CLASSIFICATION	yyLhs 496
WITHOUT_CLASSIFICATION	yyLhs 496
WITHOUT_CLASSIFICATION	yyLhs 496
WITHOUT_CLASSIFICATION	yyLhs 496
WITHOUT_CLASSIFICATION	line 329
WITHOUT_CLASSIFICATION	new Exception().printStackTrace();
WITHOUT_CLASSIFICATION	yyGindex 152
WITHOUT_CLASSIFICATION	dynamically increase
WITHOUT_CLASSIFICATION	discarding a token does not change stack
WITHOUT_CLASSIFICATION	else [default] reduce (yyN)
WITHOUT_CLASSIFICATION	shift to yyN
WITHOUT_CLASSIFICATION	reduce (yyN)
WITHOUT_CLASSIFICATION	leave stack alone
WITHOUT_CLASSIFICATION	line 271
WITHOUT_CLASSIFICATION	line 274
WITHOUT_CLASSIFICATION	line 303
WITHOUT_CLASSIFICATION	line 311
WITHOUT_CLASSIFICATION	line 314
WITHOUT_CLASSIFICATION	line 317
WITHOUT_CLASSIFICATION	line 332
WITHOUT_CLASSIFICATION	line 338
WITHOUT_CLASSIFICATION	line 341
WITHOUT_CLASSIFICATION	line 344
WITHOUT_CLASSIFICATION	line 351
WITHOUT_CLASSIFICATION	line 358
WITHOUT_CLASSIFICATION	line 367
WITHOUT_CLASSIFICATION	line 372
WITHOUT_CLASSIFICATION	line 378
WITHOUT_CLASSIFICATION	line 382
WITHOUT_CLASSIFICATION	line 407
WITHOUT_CLASSIFICATION	line 411
WITHOUT_CLASSIFICATION	line 414
WITHOUT_CLASSIFICATION	line 417
WITHOUT_CLASSIFICATION	line 420
WITHOUT_CLASSIFICATION	line 426
WITHOUT_CLASSIFICATION	line 434
WITHOUT_CLASSIFICATION	line 443
WITHOUT_CLASSIFICATION	line 446
WITHOUT_CLASSIFICATION	line 452
WITHOUT_CLASSIFICATION	line 457
WITHOUT_CLASSIFICATION	line 464
WITHOUT_CLASSIFICATION	line 467
WITHOUT_CLASSIFICATION	line 470
WITHOUT_CLASSIFICATION	line 479
WITHOUT_CLASSIFICATION	line 484
WITHOUT_CLASSIFICATION	line 486
WITHOUT_CLASSIFICATION	line 492
WITHOUT_CLASSIFICATION	line 498
WITHOUT_CLASSIFICATION	line 501
WITHOUT_CLASSIFICATION	line 504
WITHOUT_CLASSIFICATION	line 507
WITHOUT_CLASSIFICATION	line 510
WITHOUT_CLASSIFICATION	line 519
WITHOUT_CLASSIFICATION	line 525
WITHOUT_CLASSIFICATION	yyGindex 152
WITHOUT_CLASSIFICATION	line 537
WITHOUT_CLASSIFICATION	line 540
WITHOUT_CLASSIFICATION	line 543
WITHOUT_CLASSIFICATION	line 546
WITHOUT_CLASSIFICATION	line 556
WITHOUT_CLASSIFICATION	line 559
WITHOUT_CLASSIFICATION	line 563
WITHOUT_CLASSIFICATION	line 566
WITHOUT_CLASSIFICATION	line 569
WITHOUT_CLASSIFICATION	line 575
WITHOUT_CLASSIFICATION	line 578
WITHOUT_CLASSIFICATION	line 587
WITHOUT_CLASSIFICATION	line 596
WITHOUT_CLASSIFICATION	line 604
WITHOUT_CLASSIFICATION	line 607
WITHOUT_CLASSIFICATION	line 610
WITHOUT_CLASSIFICATION	line 613
WITHOUT_CLASSIFICATION	line 616
WITHOUT_CLASSIFICATION	line 634
WITHOUT_CLASSIFICATION	line 638
WITHOUT_CLASSIFICATION	line 643
WITHOUT_CLASSIFICATION	line 646
WITHOUT_CLASSIFICATION	line 655
WITHOUT_CLASSIFICATION	line 660
WITHOUT_CLASSIFICATION	line 667
WITHOUT_CLASSIFICATION	line 670
WITHOUT_CLASSIFICATION	line 672
WITHOUT_CLASSIFICATION	line 696
WITHOUT_CLASSIFICATION	line 701
WITHOUT_CLASSIFICATION	line 717
WITHOUT_CLASSIFICATION	line 720
WITHOUT_CLASSIFICATION	line 726
WITHOUT_CLASSIFICATION	line 729
WITHOUT_CLASSIFICATION	line 732
WITHOUT_CLASSIFICATION	line 735
WITHOUT_CLASSIFICATION	line 738
WITHOUT_CLASSIFICATION	line 751
WITHOUT_CLASSIFICATION	line 754
WITHOUT_CLASSIFICATION	line 757
WITHOUT_CLASSIFICATION	line 760
WITHOUT_CLASSIFICATION	line 763
WITHOUT_CLASSIFICATION	line 769
WITHOUT_CLASSIFICATION	line 772
WITHOUT_CLASSIFICATION	line 775
WITHOUT_CLASSIFICATION	line 782
WITHOUT_CLASSIFICATION	line 788
WITHOUT_CLASSIFICATION	line 791
WITHOUT_CLASSIFICATION	line 794
WITHOUT_CLASSIFICATION	line 797
WITHOUT_CLASSIFICATION	line 803
WITHOUT_CLASSIFICATION	line 806
WITHOUT_CLASSIFICATION	line 809
WITHOUT_CLASSIFICATION	line 815
WITHOUT_CLASSIFICATION	line 818
WITHOUT_CLASSIFICATION	line 821
WITHOUT_CLASSIFICATION	line 824
WITHOUT_CLASSIFICATION	line 830
WITHOUT_CLASSIFICATION	line 833
WITHOUT_CLASSIFICATION	line 836
WITHOUT_CLASSIFICATION	line 839
WITHOUT_CLASSIFICATION	line 842
WITHOUT_CLASSIFICATION	line 848
WITHOUT_CLASSIFICATION	line 852
WITHOUT_CLASSIFICATION	line 858
WITHOUT_CLASSIFICATION	line 861
WITHOUT_CLASSIFICATION	line 868
WITHOUT_CLASSIFICATION	line 871
WITHOUT_CLASSIFICATION	line 876
WITHOUT_CLASSIFICATION	line 879
WITHOUT_CLASSIFICATION	line 883
WITHOUT_CLASSIFICATION	line 893
WITHOUT_CLASSIFICATION	line 896
WITHOUT_CLASSIFICATION	line 899
WITHOUT_CLASSIFICATION	line 903
WITHOUT_CLASSIFICATION	line 907
WITHOUT_CLASSIFICATION	line 915
WITHOUT_CLASSIFICATION	line 920
WITHOUT_CLASSIFICATION	line 923
WITHOUT_CLASSIFICATION	line 926
WITHOUT_CLASSIFICATION	line 932
WITHOUT_CLASSIFICATION	line 936
WITHOUT_CLASSIFICATION	line 940
WITHOUT_CLASSIFICATION	line 944
WITHOUT_CLASSIFICATION	line 948
WITHOUT_CLASSIFICATION	line 956
WITHOUT_CLASSIFICATION	line 960
WITHOUT_CLASSIFICATION	line 964
WITHOUT_CLASSIFICATION	line 967
WITHOUT_CLASSIFICATION	line 972
WITHOUT_CLASSIFICATION	line 978
WITHOUT_CLASSIFICATION	line 980
WITHOUT_CLASSIFICATION	line 984
WITHOUT_CLASSIFICATION	line 986
WITHOUT_CLASSIFICATION	line 996
WITHOUT_CLASSIFICATION	line 1001
WITHOUT_CLASSIFICATION	line 1004
WITHOUT_CLASSIFICATION	line 1008
WITHOUT_CLASSIFICATION	line 1014
WITHOUT_CLASSIFICATION	line 1029
WITHOUT_CLASSIFICATION	line 1032
WITHOUT_CLASSIFICATION	line 1034
WITHOUT_CLASSIFICATION	line 1045
WITHOUT_CLASSIFICATION	line 1048
WITHOUT_CLASSIFICATION	line 1051
WITHOUT_CLASSIFICATION	line 1058
WITHOUT_CLASSIFICATION	line 1070
WITHOUT_CLASSIFICATION	line 1073
WITHOUT_CLASSIFICATION	line 1076
WITHOUT_CLASSIFICATION	line 1079
WITHOUT_CLASSIFICATION	line 1082
WITHOUT_CLASSIFICATION	line 1089
WITHOUT_CLASSIFICATION	line 1097
WITHOUT_CLASSIFICATION	line 1100
WITHOUT_CLASSIFICATION	line 1103
WITHOUT_CLASSIFICATION	line 1107
WITHOUT_CLASSIFICATION	line 1111
WITHOUT_CLASSIFICATION	line 1113
WITHOUT_CLASSIFICATION	line 1115
WITHOUT_CLASSIFICATION	line 1119
WITHOUT_CLASSIFICATION	line 1130
WITHOUT_CLASSIFICATION	line 1133
WITHOUT_CLASSIFICATION	line 1135
WITHOUT_CLASSIFICATION	line 1137
WITHOUT_CLASSIFICATION	line 1140
WITHOUT_CLASSIFICATION	line 1151
WITHOUT_CLASSIFICATION	line 1154
WITHOUT_CLASSIFICATION	line 1158
WITHOUT_CLASSIFICATION	line 1164
WITHOUT_CLASSIFICATION	line 1175
WITHOUT_CLASSIFICATION	line 1178
WITHOUT_CLASSIFICATION	line 1187
WITHOUT_CLASSIFICATION	line 1189
WITHOUT_CLASSIFICATION	line 1193
WITHOUT_CLASSIFICATION	line 1204
WITHOUT_CLASSIFICATION	line 1207
WITHOUT_CLASSIFICATION	line 1210
WITHOUT_CLASSIFICATION	line 1214
WITHOUT_CLASSIFICATION	line 1234
WITHOUT_CLASSIFICATION	line 1239
WITHOUT_CLASSIFICATION	line 1243
WITHOUT_CLASSIFICATION	line 1247
WITHOUT_CLASSIFICATION	line 1251
WITHOUT_CLASSIFICATION	line 1263
WITHOUT_CLASSIFICATION	line 1269
WITHOUT_CLASSIFICATION	line 1280
WITHOUT_CLASSIFICATION	line 1283
WITHOUT_CLASSIFICATION	line 1290
WITHOUT_CLASSIFICATION	line 1296
WITHOUT_CLASSIFICATION	line 1299
WITHOUT_CLASSIFICATION	line 1302
WITHOUT_CLASSIFICATION	line 1309
WITHOUT_CLASSIFICATION	line 1313
WITHOUT_CLASSIFICATION	line 1315
WITHOUT_CLASSIFICATION	line 1320
WITHOUT_CLASSIFICATION	line 1328
WITHOUT_CLASSIFICATION	line 1335
WITHOUT_CLASSIFICATION	line 1348
WITHOUT_CLASSIFICATION	line 1352
WITHOUT_CLASSIFICATION	line 1358
WITHOUT_CLASSIFICATION	line 1374
WITHOUT_CLASSIFICATION	line 1381
WITHOUT_CLASSIFICATION	line 1387
WITHOUT_CLASSIFICATION	line 1392
WITHOUT_CLASSIFICATION	line 1415
WITHOUT_CLASSIFICATION	line 1431
WITHOUT_CLASSIFICATION	line 1434
WITHOUT_CLASSIFICATION	line 1440
WITHOUT_CLASSIFICATION	line 1443
WITHOUT_CLASSIFICATION	line 1453
WITHOUT_CLASSIFICATION	line 1456
WITHOUT_CLASSIFICATION	line 1462
WITHOUT_CLASSIFICATION	line 1465
WITHOUT_CLASSIFICATION	line 1470
WITHOUT_CLASSIFICATION	line 1477
WITHOUT_CLASSIFICATION	line 1480
WITHOUT_CLASSIFICATION	line 1485
WITHOUT_CLASSIFICATION	line 1488
WITHOUT_CLASSIFICATION	line 1496
WITHOUT_CLASSIFICATION	line 1502
WITHOUT_CLASSIFICATION	line 1510
WITHOUT_CLASSIFICATION	line 1513
WITHOUT_CLASSIFICATION	line 1516
WITHOUT_CLASSIFICATION	line 1533
WITHOUT_CLASSIFICATION	line 1550
WITHOUT_CLASSIFICATION	line 1553
WITHOUT_CLASSIFICATION	line 1556
WITHOUT_CLASSIFICATION	line 1565
WITHOUT_CLASSIFICATION	line 1568
WITHOUT_CLASSIFICATION	line 1571
WITHOUT_CLASSIFICATION	line 1574
WITHOUT_CLASSIFICATION	line 1577
WITHOUT_CLASSIFICATION	line 1587
WITHOUT_CLASSIFICATION	line 1595
WITHOUT_CLASSIFICATION	line 1598
WITHOUT_CLASSIFICATION	line 1600
WITHOUT_CLASSIFICATION	line 1609
WITHOUT_CLASSIFICATION	line 1623
WITHOUT_CLASSIFICATION	line 1626
WITHOUT_CLASSIFICATION	line 1629
WITHOUT_CLASSIFICATION	line 1632
WITHOUT_CLASSIFICATION	line 1638
WITHOUT_CLASSIFICATION	line 1641
WITHOUT_CLASSIFICATION	line 1644
WITHOUT_CLASSIFICATION	line 1649
WITHOUT_CLASSIFICATION	line 1655
WITHOUT_CLASSIFICATION	line 1658
WITHOUT_CLASSIFICATION	line 1661
WITHOUT_CLASSIFICATION	line 1672
WITHOUT_CLASSIFICATION	line 1677
WITHOUT_CLASSIFICATION	line 1687
WITHOUT_CLASSIFICATION	line 1694
WITHOUT_CLASSIFICATION	line 1705
WITHOUT_CLASSIFICATION	line 1708
WITHOUT_CLASSIFICATION	line 1725
WITHOUT_CLASSIFICATION	line 1733
WITHOUT_CLASSIFICATION	line 1742
WITHOUT_CLASSIFICATION	line 1745
WITHOUT_CLASSIFICATION	line 1749
WITHOUT_CLASSIFICATION	line 1757
WITHOUT_CLASSIFICATION	line 1769
WITHOUT_CLASSIFICATION	line 1772
WITHOUT_CLASSIFICATION	line 1775
WITHOUT_CLASSIFICATION	line 1784
WITHOUT_CLASSIFICATION	line 1808
WITHOUT_CLASSIFICATION	line 1814
WITHOUT_CLASSIFICATION	line 1818
WITHOUT_CLASSIFICATION	line 1822
WITHOUT_CLASSIFICATION	force for args
WITHOUT_CLASSIFICATION	XXX 0;
WITHOUT_CLASSIFICATION	$$ = $3;
WITHOUT_CLASSIFICATION	}
WITHOUT_CLASSIFICATION	last expression should not be void
WITHOUT_CLASSIFICATION	compstmt position includes both parens around it
WITHOUT_CLASSIFICATION	$8 == null ? NilImplicitNode.NIL : $8;
WITHOUT_CLASSIFICATION	$5 == null ? NilImplicitNode.NIL : $5;
WITHOUT_CLASSIFICATION	NOEX_PRIVATE for toplevel
WITHOUT_CLASSIFICATION	mirko: check
WITHOUT_CLASSIFICATION	Include pipes on multiple arg type
WITHOUT_CLASSIFICATION	line 529
WITHOUT_CLASSIFICATION	.setPosFrom($2);
WITHOUT_CLASSIFICATION	XXX
WITHOUT_CLASSIFICATION	zero length array
WITHOUT_CLASSIFICATION	DStrNode: :"some text #{some expression}"
WITHOUT_CLASSIFICATION	StrNode: :"some text"
WITHOUT_CLASSIFICATION	EvStrNode :"#{some expression}"
WITHOUT_CLASSIFICATION	line 1827 "DefaultRubyParser.y"
WITHOUT_CLASSIFICATION	ignore, no debugger present
WITHOUT_CLASSIFICATION	yyparse(lexer, new jay.yydebug.yyAnim("JRuby", 9));
WITHOUT_CLASSIFICATION	line 7713 "-"
WITHOUT_CLASSIFICATION	local scopes are argument scopes by default
WITHOUT_CLASSIFICATION	mark as captured if from containing scope
WITHOUT_CLASSIFICATION	mark as captured if from containing scope
WITHOUT_CLASSIFICATION	We know this is a block scope because a local scope cannot be within a local scope If topScope was itself it would have created a LocalAsgnNode above.
WITHOUT_CLASSIFICATION	ENEBO: 1.9 has CURR nodes for local/block variables. We don't. I believe we follow proper logic
WITHOUT_CLASSIFICATION	odd...but it is odd in ruby too.
WITHOUT_CLASSIFICATION	What linenumber will the source think it starts from?
WITHOUT_CLASSIFICATION	Is this inline source (aka -e "...source...")
WITHOUT_CLASSIFICATION	We parse evals more often in source so assume an eval parse.
WITHOUT_CLASSIFICATION	Should positions added extra IDE-friendly information and leave in all newline nodes
WITHOUT_CLASSIFICATION	Will parser parse Duby grammar Extensions
WITHOUT_CLASSIFICATION	Should we display extra debug information while parsing?
WITHOUT_CLASSIFICATION	__END__ marker offset (-1 means none present)
WITHOUT_CLASSIFICATION	Parser states:
WITHOUT_CLASSIFICATION	Is the parser current within a singleton (value is number of nested singletons)
WITHOUT_CLASSIFICATION	Is the parser currently within a method definition
WITHOUT_CLASSIFICATION	LOCALVAR
WITHOUT_CLASSIFICATION	CONSTANT
WITHOUT_CLASSIFICATION	INSTANCE VARIABLE
WITHOUT_CLASSIFICATION	Add real top to new top (unless this top is empty [only begin/end nodes or truly empty])
WITHOUT_CLASSIFICATION	MRI: block_append
WITHOUT_CLASSIFICATION	Reduces overhead in interp by not set position every single line we encounter.
WITHOUT_CLASSIFICATION	Assumption: tail is never a list node
WITHOUT_CLASSIFICATION	return new CallOneArgNode(firstNode.getPosition(), firstNode, operator, new ArrayNode(secondNode.getPosition(), secondNode));
WITHOUT_CLASSIFICATION	Node
WITHOUT_CLASSIFICATION	FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518
WITHOUT_CLASSIFICATION	case CONSTNODE: handleUselessWarn(node, "a constant"); return;
WITHOUT_CLASSIFICATION	FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518
WITHOUT_CLASSIFICATION	case CLASSNODE: case COLON2NODE: handleUselessWarn(node, "::"); return;
WITHOUT_CLASSIFICATION	case SELFNODE: handleUselessWarn(node, "self"); return;
WITHOUT_CLASSIFICATION	FIXME: DSTR,EVSTR,STR: warning "string literal in condition"
WITHOUT_CLASSIFICATION	MRI: range_op
WITHOUT_CLASSIFICATION	Block and block pass passed in at same time....uh oh
WITHOUT_CLASSIFICATION	foo()
WITHOUT_CLASSIFICATION	foo()
WITHOUT_CLASSIFICATION	foo()
WITHOUT_CLASSIFICATION	tail must be EvStrNode at this point
WITHOUT_CLASSIFICATION	Do not add an empty string node
WITHOUT_CLASSIFICATION	Zero-Argument declaration
WITHOUT_CLASSIFICATION	yyLhs 542
WITHOUT_CLASSIFICATION	yyLhs 542
WITHOUT_CLASSIFICATION	yyLhs 542
WITHOUT_CLASSIFICATION	yyLhs 542
WITHOUT_CLASSIFICATION	yyLhs 542
WITHOUT_CLASSIFICATION	yyLhs 542
WITHOUT_CLASSIFICATION	yyLen 542
WITHOUT_CLASSIFICATION	yyLen 542
WITHOUT_CLASSIFICATION	yyLen 542
WITHOUT_CLASSIFICATION	yyLen 542
WITHOUT_CLASSIFICATION	yyLen 542
WITHOUT_CLASSIFICATION	yyDefRed 945
WITHOUT_CLASSIFICATION	yyDefRed 945
WITHOUT_CLASSIFICATION	yyDefRed 945
WITHOUT_CLASSIFICATION	yyDefRed 945
WITHOUT_CLASSIFICATION	yyDefRed 945
WITHOUT_CLASSIFICATION	yyDgoto 152
WITHOUT_CLASSIFICATION	yyDgoto 152
WITHOUT_CLASSIFICATION	yyDgoto 152
WITHOUT_CLASSIFICATION	yyDgoto 152
WITHOUT_CLASSIFICATION	yyDgoto 152
WITHOUT_CLASSIFICATION	yyDgoto 152
WITHOUT_CLASSIFICATION	yySindex 945
WITHOUT_CLASSIFICATION	yySindex 945
WITHOUT_CLASSIFICATION	yySindex 945
WITHOUT_CLASSIFICATION	yySindex 945
WITHOUT_CLASSIFICATION	yySindex 945
WITHOUT_CLASSIFICATION	yyRindex 945
WITHOUT_CLASSIFICATION	yyRindex 945
WITHOUT_CLASSIFICATION	yyRindex 945
WITHOUT_CLASSIFICATION	yyRindex 945
WITHOUT_CLASSIFICATION	yyRindex 945
WITHOUT_CLASSIFICATION	yyGindex 152
WITHOUT_CLASSIFICATION	yyGindex 152
WITHOUT_CLASSIFICATION	yyGindex 152
WITHOUT_CLASSIFICATION	yyGindex 152
WITHOUT_CLASSIFICATION	yyGindex 152
WITHOUT_CLASSIFICATION	dynamically increase
WITHOUT_CLASSIFICATION	else [default] reduce (yyN)
WITHOUT_CLASSIFICATION	shift to yyN
WITHOUT_CLASSIFICATION	reduce (yyN)
WITHOUT_CLASSIFICATION	leave stack alone
WITHOUT_CLASSIFICATION	line 321
WITHOUT_CLASSIFICATION	line 351
WITHOUT_CLASSIFICATION	line 382
WITHOUT_CLASSIFICATION	line 417
WITHOUT_CLASSIFICATION	line 420
WITHOUT_CLASSIFICATION	line 423
WITHOUT_CLASSIFICATION	line 426
WITHOUT_CLASSIFICATION	line 280
WITHOUT_CLASSIFICATION	line 283
WITHOUT_CLASSIFICATION	line 296
WITHOUT_CLASSIFICATION	line 324
WITHOUT_CLASSIFICATION	line 327
WITHOUT_CLASSIFICATION	line 331
WITHOUT_CLASSIFICATION	line 333
WITHOUT_CLASSIFICATION	line 336
WITHOUT_CLASSIFICATION	line 342
WITHOUT_CLASSIFICATION	line 345
WITHOUT_CLASSIFICATION	line 348
WITHOUT_CLASSIFICATION	line 354
WITHOUT_CLASSIFICATION	line 368
WITHOUT_CLASSIFICATION	line 377
WITHOUT_CLASSIFICATION	line 388
WITHOUT_CLASSIFICATION	line 392
WITHOUT_CLASSIFICATION	line 397
WITHOUT_CLASSIFICATION	line 429
WITHOUT_CLASSIFICATION	line 432
WITHOUT_CLASSIFICATION	line 436
WITHOUT_CLASSIFICATION	line 445
WITHOUT_CLASSIFICATION	line 448
WITHOUT_CLASSIFICATION	line 454
WITHOUT_CLASSIFICATION	line 459
WITHOUT_CLASSIFICATION	line 466
WITHOUT_CLASSIFICATION	line 469
WITHOUT_CLASSIFICATION	line 478
WITHOUT_CLASSIFICATION	line 481
WITHOUT_CLASSIFICATION	line 488
WITHOUT_CLASSIFICATION	line 494
WITHOUT_CLASSIFICATION	line 497
WITHOUT_CLASSIFICATION	line 503
WITHOUT_CLASSIFICATION	line 506
WITHOUT_CLASSIFICATION	line 509
WITHOUT_CLASSIFICATION	line 512
WITHOUT_CLASSIFICATION	line 521
WITHOUT_CLASSIFICATION	line 526
WITHOUT_CLASSIFICATION	line 540
WITHOUT_CLASSIFICATION	line 543
WITHOUT_CLASSIFICATION	line 546
WITHOUT_CLASSIFICATION	line 566
WITHOUT_CLASSIFICATION	line 610
WITHOUT_CLASSIFICATION	line 672
WITHOUT_CLASSIFICATION	line 691
WITHOUT_CLASSIFICATION	line 696
WITHOUT_CLASSIFICATION	line 772
WITHOUT_CLASSIFICATION	line 782
WITHOUT_CLASSIFICATION	line 785
WITHOUT_CLASSIFICATION	line 788
WITHOUT_CLASSIFICATION	line 791
WITHOUT_CLASSIFICATION	line 534
WITHOUT_CLASSIFICATION	line 549
WITHOUT_CLASSIFICATION	line 552
WITHOUT_CLASSIFICATION	line 558
WITHOUT_CLASSIFICATION	line 561
WITHOUT_CLASSIFICATION	line 571
WITHOUT_CLASSIFICATION	line 574
WITHOUT_CLASSIFICATION	line 579
WITHOUT_CLASSIFICATION	line 586
WITHOUT_CLASSIFICATION	line 589
WITHOUT_CLASSIFICATION	line 592
WITHOUT_CLASSIFICATION	line 595
WITHOUT_CLASSIFICATION	line 598
WITHOUT_CLASSIFICATION	line 623
WITHOUT_CLASSIFICATION	line 627
WITHOUT_CLASSIFICATION	line 630
WITHOUT_CLASSIFICATION	line 633
WITHOUT_CLASSIFICATION	line 639
WITHOUT_CLASSIFICATION	line 648
WITHOUT_CLASSIFICATION	line 657
WITHOUT_CLASSIFICATION	line 661
WITHOUT_CLASSIFICATION	line 666
WITHOUT_CLASSIFICATION	line 678
WITHOUT_CLASSIFICATION	line 682
WITHOUT_CLASSIFICATION	line 688
WITHOUT_CLASSIFICATION	line 699
WITHOUT_CLASSIFICATION	line 706
WITHOUT_CLASSIFICATION	line 708
WITHOUT_CLASSIFICATION	line 727
WITHOUT_CLASSIFICATION	line 737
WITHOUT_CLASSIFICATION	line 753
WITHOUT_CLASSIFICATION	line 779
WITHOUT_CLASSIFICATION	line 801
WITHOUT_CLASSIFICATION	line 808
WITHOUT_CLASSIFICATION	line 811
WITHOUT_CLASSIFICATION	line 817
WITHOUT_CLASSIFICATION	line 842
WITHOUT_CLASSIFICATION	line 845
WITHOUT_CLASSIFICATION	line 848
WITHOUT_CLASSIFICATION	line 893
WITHOUT_CLASSIFICATION	line 899
WITHOUT_CLASSIFICATION	line 932
WITHOUT_CLASSIFICATION	line 944
WITHOUT_CLASSIFICATION	line 960
WITHOUT_CLASSIFICATION	line 980
WITHOUT_CLASSIFICATION	line 1004
WITHOUT_CLASSIFICATION	line 1038
WITHOUT_CLASSIFICATION	line 820
WITHOUT_CLASSIFICATION	line 826
WITHOUT_CLASSIFICATION	line 829
WITHOUT_CLASSIFICATION	line 832
WITHOUT_CLASSIFICATION	line 851
WITHOUT_CLASSIFICATION	line 857
WITHOUT_CLASSIFICATION	line 860
WITHOUT_CLASSIFICATION	line 863
WITHOUT_CLASSIFICATION	line 866
WITHOUT_CLASSIFICATION	line 869
WITHOUT_CLASSIFICATION	line 875
WITHOUT_CLASSIFICATION	line 884
WITHOUT_CLASSIFICATION	line 887
WITHOUT_CLASSIFICATION	line 890
WITHOUT_CLASSIFICATION	line 902
WITHOUT_CLASSIFICATION	line 909
WITHOUT_CLASSIFICATION	line 912
WITHOUT_CLASSIFICATION	line 916
WITHOUT_CLASSIFICATION	line 922
WITHOUT_CLASSIFICATION	line 928
WITHOUT_CLASSIFICATION	line 941
WITHOUT_CLASSIFICATION	line 947
WITHOUT_CLASSIFICATION	line 951
WITHOUT_CLASSIFICATION	line 955
WITHOUT_CLASSIFICATION	line 965
WITHOUT_CLASSIFICATION	line 969
WITHOUT_CLASSIFICATION	line 977
WITHOUT_CLASSIFICATION	line 983
WITHOUT_CLASSIFICATION	line 1013
WITHOUT_CLASSIFICATION	line 1023
WITHOUT_CLASSIFICATION	line 1035
WITHOUT_CLASSIFICATION	line 1041
WITHOUT_CLASSIFICATION	line 1043
WITHOUT_CLASSIFICATION	line 1054
WITHOUT_CLASSIFICATION	line 1057
WITHOUT_CLASSIFICATION	line 1060
WITHOUT_CLASSIFICATION	line 1069
WITHOUT_CLASSIFICATION	line 1075
WITHOUT_CLASSIFICATION	line 1105
WITHOUT_CLASSIFICATION	line 1111
WITHOUT_CLASSIFICATION	line 1122
WITHOUT_CLASSIFICATION	line 1130
WITHOUT_CLASSIFICATION	line 1140
WITHOUT_CLASSIFICATION	line 1158
WITHOUT_CLASSIFICATION	line 1204
WITHOUT_CLASSIFICATION	line 1207
WITHOUT_CLASSIFICATION	line 1247
WITHOUT_CLASSIFICATION	line 1251
WITHOUT_CLASSIFICATION	line 1261
WITHOUT_CLASSIFICATION	line 1078
WITHOUT_CLASSIFICATION	line 1084
WITHOUT_CLASSIFICATION	line 1087
WITHOUT_CLASSIFICATION	line 1090
WITHOUT_CLASSIFICATION	line 1093
WITHOUT_CLASSIFICATION	line 1114
WITHOUT_CLASSIFICATION	line 1116
WITHOUT_CLASSIFICATION	line 1118
WITHOUT_CLASSIFICATION	line 1124
WITHOUT_CLASSIFICATION	line 1126
WITHOUT_CLASSIFICATION	line 1138
WITHOUT_CLASSIFICATION	line 1144
WITHOUT_CLASSIFICATION	line 1149
WITHOUT_CLASSIFICATION	line 1155
WITHOUT_CLASSIFICATION	line 1162
WITHOUT_CLASSIFICATION	line 1173
WITHOUT_CLASSIFICATION	line 1179
WITHOUT_CLASSIFICATION	line 1182
WITHOUT_CLASSIFICATION	line 1190
WITHOUT_CLASSIFICATION	line 1196
WITHOUT_CLASSIFICATION	line 1213
WITHOUT_CLASSIFICATION	line 1217
WITHOUT_CLASSIFICATION	line 1231
WITHOUT_CLASSIFICATION	line 1236
WITHOUT_CLASSIFICATION	line 1244
WITHOUT_CLASSIFICATION	line 1254
WITHOUT_CLASSIFICATION	line 1258
WITHOUT_CLASSIFICATION	line 1264
WITHOUT_CLASSIFICATION	line 1270
WITHOUT_CLASSIFICATION	line 1273
WITHOUT_CLASSIFICATION	line 1276
WITHOUT_CLASSIFICATION	line 1279
WITHOUT_CLASSIFICATION	line 1282
WITHOUT_CLASSIFICATION	line 1289
WITHOUT_CLASSIFICATION	line 1292
WITHOUT_CLASSIFICATION	line 1295
WITHOUT_CLASSIFICATION	line 1298
WITHOUT_CLASSIFICATION	line 1305
WITHOUT_CLASSIFICATION	line 1348
WITHOUT_CLASSIFICATION	line 1387
WITHOUT_CLASSIFICATION	line 1392
WITHOUT_CLASSIFICATION	line 1448
WITHOUT_CLASSIFICATION	line 1462
WITHOUT_CLASSIFICATION	line 1470
WITHOUT_CLASSIFICATION	line 1496
WITHOUT_CLASSIFICATION	line 1502
WITHOUT_CLASSIFICATION	line 1595
WITHOUT_CLASSIFICATION	line 1598
WITHOUT_CLASSIFICATION	line 1308
WITHOUT_CLASSIFICATION	line 1311
WITHOUT_CLASSIFICATION	line 1317
WITHOUT_CLASSIFICATION	line 1323
WITHOUT_CLASSIFICATION	line 1326
WITHOUT_CLASSIFICATION	line 1329
WITHOUT_CLASSIFICATION	line 1337
WITHOUT_CLASSIFICATION	line 1342
WITHOUT_CLASSIFICATION	line 1345
WITHOUT_CLASSIFICATION	line 1354
WITHOUT_CLASSIFICATION	line 1359
WITHOUT_CLASSIFICATION	line 1366
WITHOUT_CLASSIFICATION	line 1369
WITHOUT_CLASSIFICATION	line 1373
WITHOUT_CLASSIFICATION	line 1377
WITHOUT_CLASSIFICATION	line 1383
WITHOUT_CLASSIFICATION	line 1399
WITHOUT_CLASSIFICATION	line 1401
WITHOUT_CLASSIFICATION	line 1406
WITHOUT_CLASSIFICATION	line 1417
WITHOUT_CLASSIFICATION	line 1424
WITHOUT_CLASSIFICATION	line 1427
WITHOUT_CLASSIFICATION	line 1430
WITHOUT_CLASSIFICATION	line 1433
WITHOUT_CLASSIFICATION	line 1436
WITHOUT_CLASSIFICATION	line 1442
WITHOUT_CLASSIFICATION	line 1445
WITHOUT_CLASSIFICATION	line 1458
WITHOUT_CLASSIFICATION	line 1464
WITHOUT_CLASSIFICATION	line 1489
WITHOUT_CLASSIFICATION	line 1493
WITHOUT_CLASSIFICATION	line 1507
WITHOUT_CLASSIFICATION	line 1519
WITHOUT_CLASSIFICATION	line 1532
WITHOUT_CLASSIFICATION	line 1538
WITHOUT_CLASSIFICATION	line 1542
WITHOUT_CLASSIFICATION	line 1557
WITHOUT_CLASSIFICATION	line 1573
WITHOUT_CLASSIFICATION	line 1591
WITHOUT_CLASSIFICATION	line 1615
WITHOUT_CLASSIFICATION	line 1629
WITHOUT_CLASSIFICATION	line 1632
WITHOUT_CLASSIFICATION	line 1705
WITHOUT_CLASSIFICATION	line 1716
WITHOUT_CLASSIFICATION	line 1725
WITHOUT_CLASSIFICATION	line 1742
WITHOUT_CLASSIFICATION	line 1749
WITHOUT_CLASSIFICATION	line 1818
WITHOUT_CLASSIFICATION	line 1822
WITHOUT_CLASSIFICATION	line 1607
WITHOUT_CLASSIFICATION	line 1610
WITHOUT_CLASSIFICATION	line 1622
WITHOUT_CLASSIFICATION	line 1625
WITHOUT_CLASSIFICATION	line 1636
WITHOUT_CLASSIFICATION	line 1639
WITHOUT_CLASSIFICATION	line 1647
WITHOUT_CLASSIFICATION	line 1651
WITHOUT_CLASSIFICATION	line 1657
WITHOUT_CLASSIFICATION	line 1660
WITHOUT_CLASSIFICATION	line 1663
WITHOUT_CLASSIFICATION	line 1678
WITHOUT_CLASSIFICATION	line 1702
WITHOUT_CLASSIFICATION	line 1711
WITHOUT_CLASSIFICATION	line 1719
WITHOUT_CLASSIFICATION	line 1722
WITHOUT_CLASSIFICATION	line 1731
WITHOUT_CLASSIFICATION	line 1734
WITHOUT_CLASSIFICATION	line 1738
WITHOUT_CLASSIFICATION	line 1746
WITHOUT_CLASSIFICATION	line 1756
WITHOUT_CLASSIFICATION	line 1758
WITHOUT_CLASSIFICATION	line 1761
WITHOUT_CLASSIFICATION	line 1767
WITHOUT_CLASSIFICATION	line 1776
WITHOUT_CLASSIFICATION	line 1782
WITHOUT_CLASSIFICATION	line 1785
WITHOUT_CLASSIFICATION	line 1788
WITHOUT_CLASSIFICATION	line 1791
WITHOUT_CLASSIFICATION	line 1797
WITHOUT_CLASSIFICATION	line 1800
WITHOUT_CLASSIFICATION	line 1803
WITHOUT_CLASSIFICATION	line 1806
WITHOUT_CLASSIFICATION	line 1809
WITHOUT_CLASSIFICATION	line 1815
WITHOUT_CLASSIFICATION	line 1825
WITHOUT_CLASSIFICATION	line 1828
WITHOUT_CLASSIFICATION	line 1831
WITHOUT_CLASSIFICATION	line 1847
WITHOUT_CLASSIFICATION	$8 == null ? NilImplicitNode.NIL : $8;
WITHOUT_CLASSIFICATION	$5 == null ? NilImplicitNode.NIL : $5;
WITHOUT_CLASSIFICATION	.setPosFrom($2);
WITHOUT_CLASSIFICATION	zero length array
WITHOUT_CLASSIFICATION	DStrNode: :"some text #{some expression}"
WITHOUT_CLASSIFICATION	StrNode: :"some text"
WITHOUT_CLASSIFICATION	EvStrNode :"#{some expression}"
WITHOUT_CLASSIFICATION	INSTANCE VARIABLE METHODS
WITHOUT_CLASSIFICATION	line 1854
WITHOUT_CLASSIFICATION	line 1869
WITHOUT_CLASSIFICATION	line 1872
WITHOUT_CLASSIFICATION	line 1877
WITHOUT_CLASSIFICATION	line 1886
WITHOUT_CLASSIFICATION	line 1898
WITHOUT_CLASSIFICATION	line 1902
WITHOUT_CLASSIFICATION	line 1905
WITHOUT_CLASSIFICATION	line 1911
WITHOUT_CLASSIFICATION	line 1918
WITHOUT_CLASSIFICATION	line 1935
WITHOUT_CLASSIFICATION	line 1938
WITHOUT_CLASSIFICATION	line 1942
WITHOUT_CLASSIFICATION	line 1948
WITHOUT_CLASSIFICATION	line 1960
WITHOUT_CLASSIFICATION	line 1963
WITHOUT_CLASSIFICATION	line 1968
WITHOUT_CLASSIFICATION	line 1972
WITHOUT_CLASSIFICATION	line 1982
WITHOUT_CLASSIFICATION	line 1995
WITHOUT_CLASSIFICATION	line 2000
WITHOUT_CLASSIFICATION	line 2006
WITHOUT_CLASSIFICATION	line 2010
WITHOUT_CLASSIFICATION	We may need to subtract addition offset off of first
WITHOUT_CLASSIFICATION	string fragment (we optimistically take one off in
WITHOUT_CLASSIFICATION	ParserSupport.literal_concat). Check token length
WITHOUT_CLASSIFICATION	and subtract as neeeded.
WITHOUT_CLASSIFICATION	$$ = new ArgAuxiliaryNode($1.getPosition(), (String) $1.getValue(), 1);
WITHOUT_CLASSIFICATION	ENEBO: arg surrounded by in_defined set/unset
WITHOUT_CLASSIFICATION	ignore, no debugger present
WITHOUT_CLASSIFICATION	yyparse(lexer, new jay.yydebug.yyAnim("JRuby", 9));
WITHOUT_CLASSIFICATION	mark as captured if from containing scope
WITHOUT_CLASSIFICATION	mark as captured if from containing scope
WITHOUT_CLASSIFICATION	ENEBO: Removed !compile_for_eval which probably is to reduce warnings
WITHOUT_CLASSIFICATION	was $$ = null;
WITHOUT_CLASSIFICATION	line 2019 "Ruby19Parser.y"
WITHOUT_CLASSIFICATION	line 8143 "-"
WITHOUT_CLASSIFICATION	we know variables cannot be null since localstaticscope will create a 0 length one.
WITHOUT_CLASSIFICATION	No bit math to store level since we know level is zero for this case
WITHOUT_CLASSIFICATION	Next immediate scope. Variable and constant scoping rules make use of this variable in different ways.
WITHOUT_CLASSIFICATION	Live reference to module
WITHOUT_CLASSIFICATION	Next CRef down the lexical structure
WITHOUT_CLASSIFICATION	Our name holder (offsets are assigned as variables are added
WITHOUT_CLASSIFICATION	number of variables in this scope representing required arguments
WITHOUT_CLASSIFICATION	number of variables in this scope representing optional arguments
WITHOUT_CLASSIFICATION	index of variable that represents a "rest" arg
WITHOUT_CLASSIFICATION	Note that this object equality check is intentional, to ensure the string and its interned version are the same object.
WITHOUT_CLASSIFICATION	Returns slot of variable
WITHOUT_CLASSIFICATION	Returns slot of variable
WITHOUT_CLASSIFICATION	Note: Only used by compiler until it can use getConstant again or use some other refactoring
WITHOUT_CLASSIFICATION	If we could not find the constant from cref..then try getting from inheritence hierarchy
WITHOUT_CLASSIFICATION	Try and unload the autoload specified from internedName
WITHOUT_CLASSIFICATION	We override that the logic which uses this
WITHOUT_CLASSIFICATION	This while loop is for restarting the block call in case a 'redo' fires.
WITHOUT_CLASSIFICATION	do nothing, allow loop to redo
WITHOUT_CLASSIFICATION	source extensions
WITHOUT_CLASSIFICATION	do nothing, allow loop to redo
WITHOUT_CLASSIFICATION	. Array given to rest should pass itself . Array with rest + other args should extract array . Array with multiple values and NO rest should extract args if there are more than one argument
WITHOUT_CLASSIFICATION	A 'next' is like a local return from the block, ending this call or yield.
WITHOUT_CLASSIFICATION	Is this thread currently with in a function trace?
WITHOUT_CLASSIFICATION	Is this thread currently doing an defined? defined should set things like $!
WITHOUT_CLASSIFICATION	private UnsynchronizedStack parentStack;
WITHOUT_CLASSIFICATION	private UnsynchronizedStack frameStack;
WITHOUT_CLASSIFICATION	List of active dynamic scopes. Each of these may have captured other dynamic scopes to implement closures.
WITHOUT_CLASSIFICATION	File where current executing unit is being evaluated
WITHOUT_CLASSIFICATION	Line where current executing unit is being evaluated
WITHOUT_CLASSIFICATION	In certain places, like grep, we don't use real frames for the call blocks. This has the effect of not setting the backref in the correct frame - this delta is activated to the place where the grep is running in so that the backref will be set in an appropriate place.
WITHOUT_CLASSIFICATION	TOPLEVEL self and a few others want a top-level scope. We create this one right away and then pass it into top-level parse so it ends up being the top level.
WITHOUT_CLASSIFICATION	CATCH MANAGEMENT
WITHOUT_CLASSIFICATION	FRAME MANAGEMENT
WITHOUT_CLASSIFICATION	happens with native exceptions, should not filter those out
WITHOUT_CLASSIFICATION	assert level == 0;
WITHOUT_CLASSIFICATION	assert level == 0;
WITHOUT_CLASSIFICATION	look for mangling markers for compiled Ruby in method name
WITHOUT_CLASSIFICATION	if it's not a rescue or ensure, there's a frame associated, so decrement
WITHOUT_CLASSIFICATION	look for __file__ method name for compiled roots
WITHOUT_CLASSIFICATION	All entries following removed node can stay in list, but all preceding ones need to be cloned.
WITHOUT_CLASSIFICATION	required and optional only
WITHOUT_CLASSIFICATION	do nothing, allow loop to redo
WITHOUT_CLASSIFICATION	look for mangling markers for bound, unframed methods in class name
WITHOUT_CLASSIFICATION	set the binding's frame's "previous" file and line to current, so trace will show who called the block
WITHOUT_CLASSIFICATION	framed invokers will have Ruby frames associated with them
WITHOUT_CLASSIFICATION	look for mangling markers for bound, framed methods in class name
WITHOUT_CLASSIFICATION	unframed invokers have no Ruby frames, so pull from class name but use current frame as file and line
WITHOUT_CLASSIFICATION	try to mine out a Ruby frame using our list of interpreter entry-point markers
WITHOUT_CLASSIFICATION	Frame matches one of our markers for "interpreted" calls
WITHOUT_CLASSIFICATION	Frame is extraneous runtime information, skip it unless debug
WITHOUT_CLASSIFICATION	Determine what sort of assigner should be used for the provided 'iter' (e.g. block). Assigner provides just the right logic for assigning values to local parameters of the block. This method also has a second optimization which is to set 'noargblock' in the case that the block is a block which accepts no arguments. The primary reason for this second optimization is that in the case of a yield with a RubyArray we will bypass some logic processing the RubyArray into a proper form (only to then not do anythign with it). A secondary benefit is that a simple boolean seems to optimize by hotspot much faster than the zero arg assigner.
WITHOUT_CLASSIFICATION	new scope for this invocation of the block, based on parent scope
WITHOUT_CLASSIFICATION	No argument blocks
WITHOUT_CLASSIFICATION	just push the same empty scope, since we won't use one
WITHOUT_CLASSIFICATION	Not sure if this is actually possible, but better safe than sorry
WITHOUT_CLASSIFICATION	rest arg must be splatted
WITHOUT_CLASSIFICATION	This should only be called by 1.8 (1.9 subclasses this to handle unusedBlock).
WITHOUT_CLASSIFICATION	Highest reserved id
WITHOUT_CLASSIFICATION	binary typed calls
WITHOUT_CLASSIFICATION	id must always be even
WITHOUT_CLASSIFICATION	with block pass
WITHOUT_CLASSIFICATION	no block
WITHOUT_CLASSIFICATION	with block literal (iter)
WITHOUT_CLASSIFICATION	assert false : "can this happen?";
WITHOUT_CLASSIFICATION	if we have multiple asgn with just args, need a special type for that
WITHOUT_CLASSIFICATION	&& args.getMaxArgumentsCount() != 1) {
WITHOUT_CLASSIFICATION	return warnMultiReturnNil(ruby);
WITHOUT_CLASSIFICATION	ensure zero is devoted to no method name
WITHOUT_CLASSIFICATION	predefine a few other methods we invoke directly elsewhere
WITHOUT_CLASSIFICATION	fast and safe respond_to? call site logic
WITHOUT_CLASSIFICATION	Static scoping information for this scope
WITHOUT_CLASSIFICATION	Captured dynamic scopes
WITHOUT_CLASSIFICATION	Backref for $~, $1, etc
WITHOUT_CLASSIFICATION	Lastline
WITHOUT_CLASSIFICATION	No binding scope so we should create one
WITHOUT_CLASSIFICATION	bindings scopes must always be ManyVars scopes since evals can grow them
WITHOUT_CLASSIFICATION	Helper function to give a good view of current dynamic scope with captured scopes
WITHOUT_CLASSIFICATION	try count specific args to determine required
WITHOUT_CLASSIFICATION	Some helper functions:
WITHOUT_CLASSIFICATION	silently ignore
WITHOUT_CLASSIFICATION	used by compiler
WITHOUT_CLASSIFICATION	initialize the static settings to determine which factory to use
WITHOUT_CLASSIFICATION	INSTANCE VARIABLE METHODS
WITHOUT_CLASSIFICATION	We need to guarantee that any existing reads of old Map can proceed. So we cannot yet null out each bin.
WITHOUT_CLASSIFICATION	Single node on list
WITHOUT_CLASSIFICATION	Reuse trailing consecutive sequence at same slot
WITHOUT_CLASSIFICATION	Clone all remaining nodes
WITHOUT_CLASSIFICATION	A 'next' is like a local return from the block, ending this call or yield.
WITHOUT_CLASSIFICATION	Note: In Ruby 1.9 all of this logic can go away since they will require explicit bindings for evals.
WITHOUT_CLASSIFICATION	We only define one special dynamic scope per 'logical' binding. So all bindings for the same scope should share the same dynamic scope. This allows multiple evals with different different bindings in the same scope to see the same stuff.
WITHOUT_CLASSIFICATION	If the next scope out has the same binding scope as this scope it means we are evaling within an eval and in that case we should be sharing the same binding scope.
WITHOUT_CLASSIFICATION	Populate up to shorter of calling arguments or local parameters in the block
WITHOUT_CLASSIFICATION	Populate up to shorter of calling arguments or local parameters in the block
WITHOUT_CLASSIFICATION	nil pad since we provided less values than block parms
WITHOUT_CLASSIFICATION	nil pad since we provided less values than block parms
WITHOUT_CLASSIFICATION	nil pad since we provided less values than block parms
WITHOUT_CLASSIFICATION	no extra args for rest
WITHOUT_CLASSIFICATION	no extra args for rest
WITHOUT_CLASSIFICATION	extra args for rest
WITHOUT_CLASSIFICATION	extra args for rest
WITHOUT_CLASSIFICATION	This is the proper behavior for all non-expanded assigners which have a pre > 0. The rest override this.
WITHOUT_CLASSIFICATION	This is the proper behavior for all non-expanded assigners.
WITHOUT_CLASSIFICATION	prefill ?
WITHOUT_CLASSIFICATION	prefill ?
WITHOUT_CLASSIFICATION	MUST be called from synchronized/locked block! should only be called by variableTableStore/variableTableFastStore
WITHOUT_CLASSIFICATION	retrieve method module name
WITHOUT_CLASSIFICATION	call is ok, punch it!
WITHOUT_CLASSIFICATION	if undefined, branch to method_missing
WITHOUT_CLASSIFICATION	if we're not attempting to invoke method_missing and method is not visible, branch to method_missing
WITHOUT_CLASSIFICATION	method object already present, push various args tc self klazz name
WITHOUT_CLASSIFICATION	if it's method_missing, just invoke it
WITHOUT_CLASSIFICATION	invoke callMethodMissing
WITHOUT_CLASSIFICATION	caller
WITHOUT_CLASSIFICATION	calltype block
WITHOUT_CLASSIFICATION	if no exception raised, jump to end to leave result on stack for return
WITHOUT_CLASSIFICATION	load arity for check
WITHOUT_CLASSIFICATION	throw
WITHOUT_CLASSIFICATION	load arity for error
WITHOUT_CLASSIFICATION	arity ok, continue
WITHOUT_CLASSIFICATION	InvocationCallbackFactory
WITHOUT_CLASSIFICATION	ENEBO: Perhaps slow but simple for now
WITHOUT_CLASSIFICATION	FastInvocationCallback
WITHOUT_CLASSIFICATION	InvocationCallback
WITHOUT_CLASSIFICATION	DumpingInvocationCallbackFactory
WITHOUT_CLASSIFICATION	for fast lookup: encoding entry => org.jruby.RubyEncoding
WITHOUT_CLASSIFICATION	for fast lookup: org.joni.encoding.Encoding => org.jruby.RubyEncoding
WITHOUT_CLASSIFICATION	load the encoding
WITHOUT_CLASSIFICATION	IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String
WITHOUT_CLASSIFICATION	IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String
WITHOUT_CLASSIFICATION	IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String
WITHOUT_CLASSIFICATION	IRubyObject, DynamicMethod, ThreadContext, IRubyObject, RubyModule, String, IRubyObject
WITHOUT_CLASSIFICATION	IRubyObject, DynamicMethod, ThreadContext, IRubyObject, RubyClass, String, IRubyObject
WITHOUT_CLASSIFICATION	IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject
WITHOUT_CLASSIFICATION	IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject
WITHOUT_CLASSIFICATION	IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject
WITHOUT_CLASSIFICATION	IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args
WITHOUT_CLASSIFICATION	IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args
WITHOUT_CLASSIFICATION	IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args
WITHOUT_CLASSIFICATION	IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args
WITHOUT_CLASSIFICATION	IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args
WITHOUT_CLASSIFICATION	IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args
WITHOUT_CLASSIFICATION	IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args
WITHOUT_CLASSIFICATION	IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args
WITHOUT_CLASSIFICATION	IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args
WITHOUT_CLASSIFICATION	IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args
WITHOUT_CLASSIFICATION	IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args
WITHOUT_CLASSIFICATION	IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args
WITHOUT_CLASSIFICATION	IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args
WITHOUT_CLASSIFICATION	IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args
WITHOUT_CLASSIFICATION	IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args
WITHOUT_CLASSIFICATION	If we're running in 1.9 compat mode, add Ruby 1.9 libs to path before 1.8 libs
WITHOUT_CLASSIFICATION	BreakJump, ThreadContext
WITHOUT_CLASSIFICATION	ThreadContext
WITHOUT_CLASSIFICATION	BreakJump, CacheEntry, ThreadContext, IRubyObject, IRubyObject
WITHOUT_CLASSIFICATION	Make Java class files in the jar reachable from Ruby
WITHOUT_CLASSIFICATION	RetryJump, CacheEntry, ThreadContext, IRubyObject, IRubyObject
WITHOUT_CLASSIFICATION	add all startup load paths to the list first
WITHOUT_CLASSIFICATION	if it's a compiled JRuby script, instantiate and run it
WITHOUT_CLASSIFICATION	wrap in try/catch for security exceptions in an applet
WITHOUT_CLASSIFICATION	add $RUBYLIB paths
WITHOUT_CLASSIFICATION	Empty paths do not need to be added
WITHOUT_CLASSIFICATION	"." dir is used for relative path loads from a given file, as in require '../foo/bar'
WITHOUT_CLASSIFICATION	Add 1.8 libs
WITHOUT_CLASSIFICATION	Create package name, by splitting on / and joining all but the last elements with a ".", and downcasing them.
WITHOUT_CLASSIFICATION	Library has already been loaded in some form, bail out
WITHOUT_CLASSIFICATION	We don't want a package name beginning with dots, so we remove them
WITHOUT_CLASSIFICATION	If there is a jar-file with the required name, we add this to the class path.
WITHOUT_CLASSIFICATION	quietly try to load the class
WITHOUT_CLASSIFICATION	If there was a good library before, we go back to that
WITHOUT_CLASSIFICATION	no library or extension found, try to load directly as a class
WITHOUT_CLASSIFICATION	if an extension is specified, try more targetted searches
WITHOUT_CLASSIFICATION	signed short, big-endian
WITHOUT_CLASSIFICATION	source extensions
WITHOUT_CLASSIFICATION	We don't support .so, but some stdlib require .so directly replace it with .jar to look for an extension type we do support
WITHOUT_CLASSIFICATION	This code exploits the fact that all .jar files will be found for the JarredScript feature. This is where the basic extension mechanism gets fixed
WITHOUT_CLASSIFICATION	Make the class name look nice, by splitting on _ and capitalize each segment, then joining the, together without anything separating them, and last put on "Service" at the end.
WITHOUT_CLASSIFICATION	It's _really_ expensive to check that the class actually exists in the Jar, so we don't do that now.
WITHOUT_CLASSIFICATION	trim extension to try other options
WITHOUT_CLASSIFICATION	extension extensions
WITHOUT_CLASSIFICATION	unknown extension, fall back to search with extensions
WITHOUT_CLASSIFICATION	try all extensions
WITHOUT_CLASSIFICATION	if a source extension is specified, try all source extensions
WITHOUT_CLASSIFICATION	unknown extension, fall back to exact search
WITHOUT_CLASSIFICATION	try only literal search
WITHOUT_CLASSIFICATION	attempt to load the found library
WITHOUT_CLASSIFICATION	otherwise load the library we've found
WITHOUT_CLASSIFICATION	allow MainExitException to propagate out for exec and friends
WITHOUT_CLASSIFICATION	Remove any relative prefix, e.g. "./foo/bar" becomes "foo/bar".
WITHOUT_CLASSIFICATION	check current directory; if file exists, retrieve URL and return resource
WITHOUT_CLASSIFICATION	if a jar or file URL, return load service resource directly without further searching
WITHOUT_CLASSIFICATION	end suffix iteration
WITHOUT_CLASSIFICATION	if it's a ./ baseName, use CWD logic
WITHOUT_CLASSIFICATION	if given path is absolute, just try it as-is (with extensions) and no load path
WITHOUT_CLASSIFICATION	we check length == 0 for 'load', which does not use load path
WITHOUT_CLASSIFICATION	we check length == 0 for 'load', which does not use load path
WITHOUT_CLASSIFICATION	it's an absolute path, use it as-is
WITHOUT_CLASSIFICATION	it's an absolute path, use it as-is
WITHOUT_CLASSIFICATION	prepend ./ if . is not already there, since we're loading based on CWD
WITHOUT_CLASSIFICATION	prepend ./ if . is not already there, since we're loading based on CWD
WITHOUT_CLASSIFICATION	actualPath = new File(RubyFile.expandUserPath(runtime.getCurrentContext(), reportedPath));
WITHOUT_CLASSIFICATION	handle security-sensitive case
WITHOUT_CLASSIFICATION	if entry is an empty string, skip it
WITHOUT_CLASSIFICATION	if entry starts with a slash, skip it since classloader resources never start with a /
WITHOUT_CLASSIFICATION	otherwise, try to load from classpath (Note: Jar resources always uses '/')
WITHOUT_CLASSIFICATION	Make sure this is not a directory or unavailable in some way
WITHOUT_CLASSIFICATION	signed short, native
WITHOUT_CLASSIFICATION	If we fail to find as a normal Ruby script, we try to find as an extension, checking for a builtin first.
WITHOUT_CLASSIFICATION	write `I' instance var signet if class is NOT a direct subclass of Object
WITHOUT_CLASSIFICATION	if name starts with a / we're done (classloader resources won't load with an initial /)
WITHOUT_CLASSIFICATION	Look in classpath next (we do not use File as a test since UNC names will match) Note: Jar resources must NEVER begin with an '/'. (previous code said "always begin with a /")
WITHOUT_CLASSIFICATION	Directories and unavailable resources are not able to open a stream.
WITHOUT_CLASSIFICATION	Try to load from classpath without prefix. "A/b.rb" will not load as "./A/b.rb" in a jar file.
WITHOUT_CLASSIFICATION	object has instance vars and isn't a class, get a snapshot to be marshalled and output the ivar header here
WITHOUT_CLASSIFICATION	flush afer whole dump is complete
WITHOUT_CLASSIFICATION	write('S');
WITHOUT_CLASSIFICATION	switch on the object's native type. This allows use-defined classes that have extended core native types to piggyback on their marshalling logic.
WITHOUT_CLASSIFICATION	object is a custom class that extended one of the native types other than Object
WITHOUT_CLASSIFICATION	We do not want to capture cached methods
WITHOUT_CLASSIFICATION	w_symbol
WITHOUT_CLASSIFICATION	w_unique
WITHOUT_CLASSIFICATION	call the proc, but not for symbols
WITHOUT_CLASSIFICATION	Major Minor
WITHOUT_CLASSIFICATION	any ivars, since we don't have __attached__ ivar now
WITHOUT_CLASSIFICATION	"hashdef" object, a hash with a default
WITHOUT_CLASSIFICATION	All "C" marshalled objects descend from core classes, which are all RubyObject
WITHOUT_CLASSIFICATION	sic
WITHOUT_CLASSIFICATION	if we're not the "argument scope" for zsuper, try our parent
WITHOUT_CLASSIFICATION	if we're not the "argument scope" for zsuper, try our parent
WITHOUT_CLASSIFICATION	if we're not the "argument scope" for zsuper, try our parent
WITHOUT_CLASSIFICATION	copy and splat arguments out of the scope to use for zsuper call
WITHOUT_CLASSIFICATION	copy and splat arguments out of the scope to use for zsuper call
WITHOUT_CLASSIFICATION	rest arg must be splatted
WITHOUT_CLASSIFICATION	rest arg must be splatted
WITHOUT_CLASSIFICATION	If we are setting post arguments we can assume there are no pre or others
WITHOUT_CLASSIFICATION	XXX: 0xffff0000 on BE?
WITHOUT_CLASSIFICATION	unsigned short, native
WITHOUT_CLASSIFICATION	int, native long, native
WITHOUT_CLASSIFICATION	if we're not the "argument scope" for zsuper, try our parent
WITHOUT_CLASSIFICATION	if we're not the "argument scope" for zsuper, try our parent
WITHOUT_CLASSIFICATION	if we're not the "argument scope" for zsuper, try our parent
WITHOUT_CLASSIFICATION	copy and splat arguments out of the scope to use for zsuper call
WITHOUT_CLASSIFICATION	copy and splat arguments out of the scope to use for zsuper call
WITHOUT_CLASSIFICATION	copy and splat arguments out of the scope to use for zsuper call
WITHOUT_CLASSIFICATION	rest arg must be splatted
WITHOUT_CLASSIFICATION	rest arg must be splatted
WITHOUT_CLASSIFICATION	Look for slash, starting from 'start' position, until 'end'.
WITHOUT_CLASSIFICATION	Our values holder (name of variables are kept in staticScope)
WITHOUT_CLASSIFICATION	&foo are not getting set from somewhere...I want the following assert to be true though assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];
WITHOUT_CLASSIFICATION	&foo are not getting set from somewhere...I want the following assert to be true though assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];
WITHOUT_CLASSIFICATION	&foo are not getting set from somewhere...I want the following assert to be true though assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];
WITHOUT_CLASSIFICATION	&foo are not getting set from somewhere...I want the following assert to be true though assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];
WITHOUT_CLASSIFICATION	&foo are not getting set from somewhere...I want the following assert to be true though assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];
WITHOUT_CLASSIFICATION	SunSignalFacade
WITHOUT_CLASSIFICATION	All braces pushed..
WITHOUT_CLASSIFICATION	failed : try next recursion
WITHOUT_CLASSIFICATION	leftToken made us start as nest 1
WITHOUT_CLASSIFICATION	are we at ''
WITHOUT_CLASSIFICATION	No or mismatched braces..Move along..nothing to see here
WITHOUT_CLASSIFICATION	not enough bytes
WITHOUT_CLASSIFICATION	Get index of last read byte
WITHOUT_CLASSIFICATION	skip inner braces
WITHOUT_CLASSIFICATION	Process {}'s (example: Dir.glob("{jruby,jython}/README")
WITHOUT_CLASSIFICATION	complete, according to Posix.2
WITHOUT_CLASSIFICATION	Only accept an open brace if there is a close
WITHOUT_CLASSIFICATION	brace to match it. Bracket expressions must be
WITHOUT_CLASSIFICATION	index of left-most brace index of right-most brace
WITHOUT_CLASSIFICATION	Length check is a hack. We should not be reeiving "" as a filename ever.
WITHOUT_CLASSIFICATION	NOT REACHED HERE
WITHOUT_CLASSIFICATION	NOT REACHED HERE
WITHOUT_CLASSIFICATION	NOT REACHED HERE
WITHOUT_CLASSIFICATION	Pickaxe says @ must be followed by a name character, but MRI does not require this.
WITHOUT_CLASSIFICATION	Pickaxe says @@ must be followed by a name character, but MRI does not require this.
WITHOUT_CLASSIFICATION	SimpleSampler
WITHOUT_CLASSIFICATION	convert into longs, returning unsigned 64-bit values as signed longs ( num2long raises a RangeError on values > Long.MAX_VALUE )
WITHOUT_CLASSIFICATION	b64_xtable for decoding Base 64
WITHOUT_CLASSIFICATION	single precision, little-endian
WITHOUT_CLASSIFICATION	single precision, big-endian
WITHOUT_CLASSIFICATION	single precision, native
WITHOUT_CLASSIFICATION	single precision, native single precision, native
WITHOUT_CLASSIFICATION	double precision, little-endian
WITHOUT_CLASSIFICATION	double precision, big-endian
WITHOUT_CLASSIFICATION	double precision, native
WITHOUT_CLASSIFICATION	signed short, little-endian
WITHOUT_CLASSIFICATION	signed char
WITHOUT_CLASSIFICATION	unsigned char
WITHOUT_CLASSIFICATION	long, little-endian
WITHOUT_CLASSIFICATION	long, big-endian
WITHOUT_CLASSIFICATION	unsigned int, native
WITHOUT_CLASSIFICATION	int, native
WITHOUT_CLASSIFICATION	64-bit number, native (as fixnum)
WITHOUT_CLASSIFICATION	How many occurrences of 'type' we want
WITHOUT_CLASSIFICATION	See if we have a converter for the job...
WITHOUT_CLASSIFICATION	Otherwise the unpack should be here...
WITHOUT_CLASSIFICATION	Possible Checksum Byte
WITHOUT_CLASSIFICATION	obtain a
WITHOUT_CLASSIFICATION	obtain b
WITHOUT_CLASSIFICATION	obtain c
WITHOUT_CLASSIFICATION	obtain d
WITHOUT_CLASSIFICATION	encode.limit() -
WITHOUT_CLASSIFICATION	1
WITHOUT_CLASSIFICATION	2
WITHOUT_CLASSIFICATION	3
WITHOUT_CLASSIFICATION	4
WITHOUT_CLASSIFICATION	5
WITHOUT_CLASSIFICATION	6
WITHOUT_CLASSIFICATION	7
WITHOUT_CLASSIFICATION	Skip all whitespace in pack format string
WITHOUT_CLASSIFICATION	Skip embedded comments in pack format string
WITHOUT_CLASSIFICATION	In case when the number of occurences is explicitly specified, we have to read up the remaining garbage after the '\0' to satisfy the requested pattern.
WITHOUT_CLASSIFICATION	normal exit, this should be faster than a test at each iterations for string with more than about 40 char
WITHOUT_CLASSIFICATION	We encountered '\0' when were reading the buffer above, increment the number of read bytes.
WITHOUT_CLASSIFICATION	MRI behavior: Contrary to what seems to be logical, when '' is given, MRI calculates the distance to the end, in order to go backwards.
WITHOUT_CLASSIFICATION	Determine how many of type are needed (default: 1)
WITHOUT_CLASSIFICATION	'Z' adds extra null pad (versus 'a')
WITHOUT_CLASSIFICATION	if the low bit is set set the high bit of the result
WITHOUT_CLASSIFICATION	if the index is not a multiple of 8, we are not on a byte boundary shift the byte
WITHOUT_CLASSIFICATION	if the length is not a multiple of 8 we need to pad the last byte
WITHOUT_CLASSIFICATION	if the length is not a multiple of 8 we need to pad the last byte
WITHOUT_CLASSIFICATION	do some padding, I don't understand the padding strategy
WITHOUT_CLASSIFICATION	we filled up current byte; append it and create next one
WITHOUT_CLASSIFICATION	if the index is not a multiple of 8, we are not on a byte boundary
WITHOUT_CLASSIFICATION	this test may be too lax but it is the same as in MRI
WITHOUT_CLASSIFICATION	we don't deal with negatives.
WITHOUT_CLASSIFICATION	populate commandline with NG-provided stuff
WITHOUT_CLASSIFICATION	are we recursing?
WITHOUT_CLASSIFICATION	snip off ruby or jruby command from list of arguments leave alone if the command is the name of a script
WITHOUT_CLASSIFICATION	default PidGetter
WITHOUT_CLASSIFICATION	ignore and try windows version
WITHOUT_CLASSIFICATION	ignore and use hashcode
WITHOUT_CLASSIFICATION	ignore and use hashcode
WITHOUT_CLASSIFICATION	ignore and use hashcode
WITHOUT_CLASSIFICATION	ignore and use hashcode
WITHOUT_CLASSIFICATION	try both
WITHOUT_CLASSIFICATION	just unix
WITHOUT_CLASSIFICATION	just windows
WITHOUT_CLASSIFICATION	neither
WITHOUT_CLASSIFICATION	CON: popen is a case where I think we should just always shell out.
WITHOUT_CLASSIFICATION	single string command, pass to sh to expand wildcards
WITHOUT_CLASSIFICATION	direct invocation of the command
WITHOUT_CLASSIFICATION	break out if we've dug as deep as we can
WITHOUT_CLASSIFICATION	break out if we've dug as deep as we can
WITHOUT_CLASSIFICATION	close process output See JRUBY-3405; hooking up to parent process stdin caused problems for IRB etc using stdin.
WITHOUT_CLASSIFICATION	ignore, we're on the way out
WITHOUT_CLASSIFICATION	processes seem to have some peculiar locking sequences, so we need to ensure nobody is trying to close/destroy while we are
WITHOUT_CLASSIFICATION	popen callers wants to be able to read, provide subprocess in directly
WITHOUT_CLASSIFICATION	popen callers wants to be able to read, provide subprocess in directly
WITHOUT_CLASSIFICATION	popen caller wants to be able to write, provide subprocess out directly
WITHOUT_CLASSIFICATION	no read requested, hook up read to parents output
WITHOUT_CLASSIFICATION	no read requested, hook up read to parents output
WITHOUT_CLASSIFICATION	execute command with sh -c this does shell expansion of wildcards
WITHOUT_CLASSIFICATION	We need to close the out, since some processes would just wait for the stream to be closed before they process its content, and produce the output. E.g.: "cat".
WITHOUT_CLASSIFICATION	we only close out if it's the slave stream, to avoid closing a directly-mapped stream from parent process
WITHOUT_CLASSIFICATION	The assumption here is that the 'in' stream provides proper available() support. If available() always returns 0, we'll hang!
WITHOUT_CLASSIFICATION	Force t3 to quit, just in case if it's stuck. Note: On some platforms, even interrupt might not have an effect if the thread is IO blocked.
WITHOUT_CLASSIFICATION	Check for special shell characters [<>|] at the beginning and end of each command word and don't run in process if we find them.
WITHOUT_CLASSIFICATION	Note: this method produces meaningful results only for RubyIO objects. For everything else returns 0.
WITHOUT_CLASSIFICATION	sequential
WITHOUT_CLASSIFICATION	reverse the entire area of the array selected if it's reversed.
WITHOUT_CLASSIFICATION	do median of 7 if the array is over 200 elements.
WITHOUT_CLASSIFICATION	if it's less than 200 do median of 3
WITHOUT_CLASSIFICATION	SignalFacade
WITHOUT_CLASSIFICATION	this is the order in which MRI does these two tests
WITHOUT_CLASSIFICATION	this is the order in which MRI does these tests
WITHOUT_CLASSIFICATION	basically just forcing a TypeError here to match MRI
WITHOUT_CLASSIFICATION	not saving DFS instance, as it will only be used once (at most) per call
WITHOUT_CLASSIFICATION	Args
WITHOUT_CLASSIFICATION	static methods only
WITHOUT_CLASSIFICATION	System.err.println(" calculateLength()/str=" + str);
WITHOUT_CLASSIFICATION	MRI 1.8.6 behavior: null byte after '%' leads to "%" string. Null byte in other places, like "%5\0", leads to error.
WITHOUT_CLASSIFICATION	last index (+1) accessed by next() last index (+1) accessed by get()
WITHOUT_CLASSIFICATION	Special form of sprintf that returns a RubyString and handles tainted strings correctly.
WITHOUT_CLASSIFICATION	Special form of sprintf that returns a RubyString and handles tainted strings correctly. Version for 1.9.
WITHOUT_CLASSIFICATION	MRI doesn't flag it as an error if width is given multiple times as a number (but it does for )
WITHOUT_CLASSIFICATION	let the width (if any), get processed in the next loop, so any leading 0 gets treated correctly
WITHOUT_CLASSIFICATION	MRI 1.8.5-p12 doesn't support 1-char strings, but YARV 0.4.1 does. I don't think it hurts to include this; sprintf('%c','a') is nicer than sprintf('%c','a'[0])
WITHOUT_CLASSIFICATION	'd' and 'i' are the same
WITHOUT_CLASSIFICATION	'u' with space or plus flags is same as 'd'
WITHOUT_CLASSIFICATION	We depart here from strict adherence to MRI code, as MRI uses C-sprintf, in part, to format numeric output, while we'll use Java's numeric formatting code (and our own).
WITHOUT_CLASSIFICATION	skip '-' in bytes, will add where appropriate
WITHOUT_CLASSIFICATION	..
WITHOUT_CLASSIFICATION	the 1 is for the stripped sign char
WITHOUT_CLASSIFICATION	FIXME: what is correct 'recv' argument? (this does produce the desired behavior)
WITHOUT_CLASSIFICATION	gotta have at least a zero...
WITHOUT_CLASSIFICATION	OK, we now have the significand in digits[0...nDigits] and the exponent in exponent. We're ready to format.
WITHOUT_CLASSIFICATION	intDigits isn't used here, but if it were, it would be 1
WITHOUT_CLASSIFICATION	intDigits = 1;
WITHOUT_CLASSIFICATION	System.err.println(" stringToLong/reading c=" + data[s]);
WITHOUT_CLASSIFICATION	System.err.println(" stringToLong/converted c=" + c);
WITHOUT_CLASSIFICATION	intDigits isn't used here, but if it were, it would be 1
WITHOUT_CLASSIFICATION	intDigits = 1;
WITHOUT_CLASSIFICATION	precision for G/g includes integer digits
WITHOUT_CLASSIFICATION	deal with length/width
WITHOUT_CLASSIFICATION	deal with length/width
WITHOUT_CLASSIFICATION	first digit is always printed
WITHOUT_CLASSIFICATION	MRI behavior: Be default, 2 digits in the exponent. Use 3 digits only when necessary. See comment for writeExp method for more details.
WITHOUT_CLASSIFICATION	5 -> e+nnn / e-nnn
WITHOUT_CLASSIFICATION	4 -> e+nn / e-nn
WITHOUT_CLASSIFICATION	in this mode, '.' is always printed
WITHOUT_CLASSIFICATION	MRI behavior: In this mode trailing zeroes are removed: 1.500E+05 -> 1.5E+05
WITHOUT_CLASSIFICATION	'.' is printed
WITHOUT_CLASSIFICATION	all precision numebers printed
WITHOUT_CLASSIFICATION	now some data...
WITHOUT_CLASSIFICATION	'.'
WITHOUT_CLASSIFICATION	decimal form, like (but not just like!) 'f'
WITHOUT_CLASSIFICATION	digits array shifted, update all
WITHOUT_CLASSIFICATION	will have a trailing '.' g fills trailing zeroes if #
WITHOUT_CLASSIFICATION	s/b true, since intLength > 0
WITHOUT_CLASSIFICATION	s/b true, since intLength > 0
WITHOUT_CLASSIFICATION	always need at least a 0
WITHOUT_CLASSIFICATION	always need at least a 0
WITHOUT_CLASSIFICATION	digits arr shifted, update all
WITHOUT_CLASSIFICATION	(1|intlen).prec
WITHOUT_CLASSIFICATION	(1|intlen)
WITHOUT_CLASSIFICATION	will have a trailing '.'
WITHOUT_CLASSIFICATION	fill up the rest with zeroes
WITHOUT_CLASSIFICATION	System.err.println(" main/len=" + len);
WITHOUT_CLASSIFICATION	5 -> e+nnn / e-nnn
WITHOUT_CLASSIFICATION	4 -> e+nn / e-nn
WITHOUT_CLASSIFICATION	now some data...
WITHOUT_CLASSIFICATION	'.'
WITHOUT_CLASSIFICATION	equivalent to MRI case '\0':
WITHOUT_CLASSIFICATION	'.' and all precision digits printed
WITHOUT_CLASSIFICATION	\v
WITHOUT_CLASSIFICATION	dangling '%' char
WITHOUT_CLASSIFICATION	main while loop (offset < length)
WITHOUT_CLASSIFICATION	debugging code, keeping for now
WITHOUT_CLASSIFICATION	MRI rounds up on nnn5nnn, but not nnn5 -- except for when they do
WITHOUT_CLASSIFICATION	"%.0f" % 0.99
WITHOUT_CLASSIFICATION	limit the length of negatives if possible (also faster)
WITHOUT_CLASSIFICATION	negative values
WITHOUT_CLASSIFICATION	calculation for negatives when %u specified for values >= Integer.MIN_VALUE 2, MRI uses (the equivalent of) long neg_u = (((long)Integer.MAX_VALUE + 1) << 1) + val for smaller values, BigInteger math is required to conform to MRI's result.
WITHOUT_CLASSIFICATION	relatively cheap test for 32-bit values
WITHOUT_CLASSIFICATION	no such luck...
WITHOUT_CLASSIFICATION	ok, now it gets expensive...
WITHOUT_CLASSIFICATION	go through negated powers of 32 until we find one small enough
WITHOUT_CLASSIFICATION	add to the corresponding positive power of 32 for the result. meaningful? no. conformant? yes. I just write the code...
WITHOUT_CLASSIFICATION	constant vector a
WITHOUT_CLASSIFICATION	most significant w-r bits
WITHOUT_CLASSIFICATION	least significant r bits
WITHOUT_CLASSIFICATION	state[j] &= 0xffffffffL;
WITHOUT_CLASSIFICATION	state[i] &= 0xffffffffL;
WITHOUT_CLASSIFICATION	state[i] &= 0xffffffffL;
WITHOUT_CLASSIFICATION	MSB is 1; assuring non-zero initial array
WITHOUT_CLASSIFICATION	Tempering
WITHOUT_CLASSIFICATION	MRI behavior: Week values are monotonous. So, weeks that effectively belong to previous year, will get the value of 0, not 52 or 53, as in Java.
WITHOUT_CLASSIFICATION	System.err.println("byteListToInum(" + str + ")");
WITHOUT_CLASSIFICATION	System.err.println("byteListToInum(" + str + ")");
WITHOUT_CLASSIFICATION	\v
WITHOUT_CLASSIFICATION	System.err.println("getSign()");
WITHOUT_CLASSIFICATION	System.err.println(" getSign/" + sign);
WITHOUT_CLASSIFICATION	System.err.println("figureOutBase()/base=" + base);
WITHOUT_CLASSIFICATION	System.err.println(" figureOutBase/base=" + base);
WITHOUT_CLASSIFICATION	System.err.println("calculateLength()/str=" + str);
WITHOUT_CLASSIFICATION	switch
WITHOUT_CLASSIFICATION	System.err.println(" stringToLong=" + val);
WITHOUT_CLASSIFICATION	no number
WITHOUT_CLASSIFICATION	trailing garbage
WITHOUT_CLASSIFICATION	System.err.println("ADDING CHAR: " + (char)cx + " with number: " + cx);
WITHOUT_CLASSIFICATION	it was not found at all!
WITHOUT_CLASSIFICATION	can be overridden to be informed when objects are removed
WITHOUT_CLASSIFICATION	we reached the end of a list
WITHOUT_CLASSIFICATION	goto next bucket
WITHOUT_CLASSIFICATION	we reached the end
WITHOUT_CLASSIFICATION	entry is the first element of this bucket
WITHOUT_CLASSIFICATION	states
WITHOUT_CLASSIFICATION	remove leading whitespace (includes _ for lax) get sign, if any
WITHOUT_CLASSIFICATION	optimistic pass - calculate value as digits are processed digits - lax rules decimal digits - lax rules exponent sign/digits - lax rules digits - strict rules decimal digits - strict rules exponent sign/digits - strict rules complete calculation if possible
WITHOUT_CLASSIFICATION	fields used for direct (optimistic) calculation number of significant digits, updated as parsed zeroes that may go to significand or exponent offset of decimal pt from start (-1 -> no decimal) significand, updated as parsed exponent, updated as parsed
WITHOUT_CLASSIFICATION	drop through for sign
WITHOUT_CLASSIFICATION	switch will use this if we have to go back the slow way
WITHOUT_CLASSIFICATION	drop through for non-strict digits
WITHOUT_CLASSIFICATION	first char must be digit or decimal point
WITHOUT_CLASSIFICATION	ignore leading zeroes switch
WITHOUT_CLASSIFICATION	no digits, go calc (will return +/- 0.0 for lax)
WITHOUT_CLASSIFICATION	ignore leading zeroes
WITHOUT_CLASSIFICATION	just save a count of zeroes for now; if no digit ends up following them, they'll be applied to the exponent rather than the significand (and our max length for optimistic calc).
WITHOUT_CLASSIFICATION	ok, got a non-zero, have to own up to our horded zeroes
WITHOUT_CLASSIFICATION	else catch oversize below
WITHOUT_CLASSIFICATION	else catch oversize below
WITHOUT_CLASSIFICATION	oh, well, it was worth a try. go let Double/FloatingDecimal handle it
WITHOUT_CLASSIFICATION	ignore switch
WITHOUT_CLASSIFICATION	ignore switch
WITHOUT_CLASSIFICATION	end of parseable data, go to calc
WITHOUT_CLASSIFICATION	end of parseable data, go to calc
WITHOUT_CLASSIFICATION	switch for
WITHOUT_CLASSIFICATION	first non_underscore char must be digit
WITHOUT_CLASSIFICATION	no dec digits, end of parseable data, go to calc
WITHOUT_CLASSIFICATION	switch if
WITHOUT_CLASSIFICATION	difficult case, send to Double/FloatingDecimal
WITHOUT_CLASSIFICATION	block
WITHOUT_CLASSIFICATION	block
WITHOUT_CLASSIFICATION	first char must be digit or decimal point
WITHOUT_CLASSIFICATION	first char must be digit or decimal point
WITHOUT_CLASSIFICATION	first char must be digit or decimal point
WITHOUT_CLASSIFICATION	ignore leading zeroes switch
WITHOUT_CLASSIFICATION	else catch oversize below
WITHOUT_CLASSIFICATION	else catch oversize below
WITHOUT_CLASSIFICATION	else catch oversize below
WITHOUT_CLASSIFICATION	switch for
WITHOUT_CLASSIFICATION	switch for
WITHOUT_CLASSIFICATION	switch for
WITHOUT_CLASSIFICATION	switch if
WITHOUT_CLASSIFICATION	switch if
WITHOUT_CLASSIFICATION	lax (str.to_f) allows underscores between e/E and sign
WITHOUT_CLASSIFICATION	switch for no exponent, so drop through for calculation
WITHOUT_CLASSIFICATION	switch for no more data, OK for strict to go calc
WITHOUT_CLASSIFICATION	TODO: it's not clear to me why, in FloatingDecimal, the "slop" calculation performed above for positive exponents isn't used for negative exponents as well. Will find out...
WITHOUT_CLASSIFICATION	no digits, error
WITHOUT_CLASSIFICATION	too big for us
WITHOUT_CLASSIFICATION	too big for us
WITHOUT_CLASSIFICATION	must be at least one digit for strict
WITHOUT_CLASSIFICATION	switch
WITHOUT_CLASSIFICATION	switch
WITHOUT_CLASSIFICATION	switch
WITHOUT_CLASSIFICATION	switch
WITHOUT_CLASSIFICATION	switch
WITHOUT_CLASSIFICATION	only whitespace allowed after value for strict
WITHOUT_CLASSIFICATION	only whitespace allowed after value for strict
WITHOUT_CLASSIFICATION	only whitespace allowed after value for strict
WITHOUT_CLASSIFICATION	first char must be digit
WITHOUT_CLASSIFICATION	no dec digits after '.', error for strict
WITHOUT_CLASSIFICATION	ignore leading zeroes switch
WITHOUT_CLASSIFICATION	switch for
WITHOUT_CLASSIFICATION	switch for
WITHOUT_CLASSIFICATION	switch
WITHOUT_CLASSIFICATION	switch
WITHOUT_CLASSIFICATION	only whitespace allowed after value for strict
WITHOUT_CLASSIFICATION	must be at least one digit for strict
WITHOUT_CLASSIFICATION	Copy out any buffered bytes
WITHOUT_CLASSIFICATION	switch while
WITHOUT_CLASSIFICATION	All the positive powers of 10 that can be represented exactly in double/float. (From sun.misc.FloatingDecimal.java)
WITHOUT_CLASSIFICATION	Zlib behavior: negative win_bits means no header and no checksum.
WITHOUT_CLASSIFICATION	rb_enc_mbclen
WITHOUT_CLASSIFICATION	rb_enc_precise_mbclen
WITHOUT_CLASSIFICATION	utf8 lead byte
WITHOUT_CLASSIFICATION	arg cannot be negative
WITHOUT_CLASSIFICATION	NoFunctionalitySignalFacade
WITHOUT_CLASSIFICATION	Change visibility so others can see it
WITHOUT_CLASSIFICATION	could not get canonical path, just use given path
WITHOUT_CLASSIFICATION	strip off "_dot_rb" for .rb files
WITHOUT_CLASSIFICATION	Makes sure the key is not already in the hashtable.
WITHOUT_CLASSIFICATION	Rehash the table if the threshold is exceeded
WITHOUT_CLASSIFICATION	Creates the new entry.
WITHOUT_CLASSIFICATION	next entry to return current slot current entry
WITHOUT_CLASSIFICATION	advance to first entry
WITHOUT_CLASSIFICATION	The reason why we need the stream is to be able to invoke available() on it. STDIN in Java is non-interruptible, non-selectable, and attempt to read on such stream might lead to thread being blocked without any way to unblock it. That's where available() comes it, so at least we could check whether anything is available to be read without blocking.
WITHOUT_CLASSIFICATION	package-protected
WITHOUT_CLASSIFICATION	raw file URL, just open directly
WITHOUT_CLASSIFICATION	We always open this rw since we can only open it r or rw.
WITHOUT_CLASSIFICATION	if refcount is at or below zero, we're no longer valid
WITHOUT_CLASSIFICATION	if channel is already closed, we're no longer valid
WITHOUT_CLASSIFICATION	otherwise decrement and possibly close as normal
WITHOUT_CLASSIFICATION	r/w buffer are we reading or writing?
WITHOUT_CLASSIFICATION	this constructor is used by fdopen, so we don't increment descriptor ref count
WITHOUT_CLASSIFICATION	unread back
WITHOUT_CLASSIFICATION	iterate over remainder of buffer until we find a match
WITHOUT_CLASSIFICATION	terminate and advance buffer when we find our char
WITHOUT_CLASSIFICATION	no match, append remainder of buffer and continue with next block
WITHOUT_CLASSIFICATION	found a match above, check if remaining separator characters match, appending as we go
WITHOUT_CLASSIFICATION	Check file size - special files in /proc have zero size and need to be handled by the generic read path.
WITHOUT_CLASSIFICATION	Copy any buffered data (including ungetc byte)
WITHOUT_CLASSIFICATION	Now read unbuffered directly from the file
WITHOUT_CLASSIFICATION	Copy out any buffered bytes
WITHOUT_CLASSIFICATION	Need to clamp source (buffer) size to avoid overrun
WITHOUT_CLASSIFICATION	not closing from finalize
WITHOUT_CLASSIFICATION	clear runtime so it doesn't get stuck in memory (JRUBY-2933)
WITHOUT_CLASSIFICATION	silence
WITHOUT_CLASSIFICATION	silence
WITHOUT_CLASSIFICATION	Don't bother
WITHOUT_CLASSIFICATION	Don't bother
WITHOUT_CLASSIFICATION	For Sockets, only write as much as will fit.
WITHOUT_CLASSIFICATION	Correct position for read / write buffering (we could invalidate, but expensive)
WITHOUT_CLASSIFICATION	Adjust for buffered data
WITHOUT_CLASSIFICATION	for SEEK_CUR, need to adjust for buffered data
WITHOUT_CLASSIFICATION	libc flushes writes on any read from the actual file, so we flush here
WITHOUT_CLASSIFICATION	we have read ahead, and need to back up
WITHOUT_CLASSIFICATION	128K seems to be the minimum at which the stat+seek is faster than reallocation
WITHOUT_CLASSIFICATION	limit each iteration to a max of BULK_READ_SIZE to avoid over-size allocations
WITHOUT_CLASSIFICATION	append what we read into our buffer and allow the loop to continue
WITHOUT_CLASSIFICATION	Copy what is in the buffer, if there is some buffered data
WITHOUT_CLASSIFICATION	Avoid double-copying for reads that are larger than the buffer size
WITHOUT_CLASSIFICATION	Complete the request by filling the read buffer first
WITHOUT_CLASSIFICATION	Complete the request by filling the read buffer first
WITHOUT_CLASSIFICATION	Avoid double-copying for reads that are larger than the buffer size, or the destination is a direct buffer.
WITHOUT_CLASSIFICATION	We limit reads to BULK_READ_SIZED chunks to avoid NIO allocating a huge temporary native buffer, when doing reads into a heap buffer If the dst buffer is direct, then no need to limit.
WITHOUT_CLASSIFICATION	Ruby ignores empty syswrites
WITHOUT_CLASSIFICATION	Ruby ignores empty syswrites
WITHOUT_CLASSIFICATION	Doesn't fit in buffer. Write immediately. ensure nothing left to write
WITHOUT_CLASSIFICATION	truncate can't lengthen files, so we save position, seek/write, and go back
WITHOUT_CLASSIFICATION	how far ahead we are when reading
WITHOUT_CLASSIFICATION	if the read buffer is ahead, back up
WITHOUT_CLASSIFICATION	close without removing from finalizers
WITHOUT_CLASSIFICATION	putting a bit back, so we're not at EOF anymore
WITHOUT_CLASSIFICATION	save the ungot
WITHOUT_CLASSIFICATION	otherwise, we try an unbuffered read to get whatever's available
WITHOUT_CLASSIFICATION	ignore this; select() will set the correct mode when it is finished
WITHOUT_CLASSIFICATION	flush first
WITHOUT_CLASSIFICATION	Wake up any channels that became unblocked
WITHOUT_CLASSIFICATION	Register any new blocking I/O requests
WITHOUT_CLASSIFICATION	Now clear out any previously selected channels
WITHOUT_CLASSIFICATION	Wait for I/O on any channel
WITHOUT_CLASSIFICATION	Do not open as 'rw' by default since a file with read-only permissions will fail on 'rw'
WITHOUT_CLASSIFICATION	Java requires "w" for creating a file that does not exist
WITHOUT_CLASSIFICATION	seek to force underlying buffer to flush
WITHOUT_CLASSIFICATION	seek to force read buffer to invalidate
WITHOUT_CLASSIFICATION	result = eval("arr = Array::['c', 200]; p arr"); assertEquals("[\"c\", 200]", result); result = eval("arr = Array.['d', 200]; p arr"); assertEquals("[\"d\", 200]", result);
WITHOUT_CLASSIFICATION	MRI ignores seek errors, presumably for unseekable files like serial ports (JRUBY-2979), so we shall too.
WITHOUT_CLASSIFICATION	TODO: Ruby logic is somewhat more complicated here, see comments after
WITHOUT_CLASSIFICATION	make sure the pipe stream is set to null
WITHOUT_CLASSIFICATION	make sure the main stream is set to null
WITHOUT_CLASSIFICATION	first try our custom-generated Unsafe
WITHOUT_CLASSIFICATION	then try Sun's Unsafe
WITHOUT_CLASSIFICATION	if we get here, the class and field exist; construct our Unsafe impl that calls it directly
WITHOUT_CLASSIFICATION	else leave it null
WITHOUT_CLASSIFICATION	TypeMatcher
WITHOUT_CLASSIFICATION	This is now needed, since module Java isn't in by default
WITHOUT_CLASSIFICATION	Iterate over the RubyHash keySet, simultaneously iterating over the values()
WITHOUT_CLASSIFICATION	Get the value from the map via the key
WITHOUT_CLASSIFICATION	Get the value from the map via the values iterator
WITHOUT_CLASSIFICATION	Check the 2 values obtained via different means
WITHOUT_CLASSIFICATION	Set a value in the RubyHash
WITHOUT_CLASSIFICATION	Set a value in the RubyHash
WITHOUT_CLASSIFICATION	Check the entry.setValue values come back out ok
WITHOUT_CLASSIFICATION	If we're running from within an IDE we may not have the .rb files in our classpath. Try to find them in the filesystem instead.
WITHOUT_CLASSIFICATION	assertEquals("\"foo\"\n\"bar\"", eval("$h.each {|val| p val}")); assertEquals("[\"foo\", \"bar\"]", eval("p $h.each {|val| }"));
WITHOUT_CLASSIFICATION	Init
WITHOUT_CLASSIFICATION	Block
WITHOUT_CLASSIFICATION	Copy constructor
WITHOUT_CLASSIFICATION	presumably this require should fail
WITHOUT_CLASSIFICATION	JRUBY-646 presumably this require should fail
WITHOUT_CLASSIFICATION	Test that requiring a normal Java class raises an error (JRUBY-3214
WITHOUT_CLASSIFICATION	ok
WITHOUT_CLASSIFICATION	Function not used...but it gets rid of unused warnings in Eclipse (we do call those methods from Ruby so they are not really unused).
WITHOUT_CLASSIFICATION	load should work several times in a row
WITHOUT_CLASSIFICATION	reset the $loadTestvar
WITHOUT_CLASSIFICATION	call throwException via JRuby
WITHOUT_CLASSIFICATION	Notify the calling thread that we're about to go to sleep the first time
WITHOUT_CLASSIFICATION	wait for the go signal
WITHOUT_CLASSIFICATION	run ten separate calls into Ruby, with delay and explicit GC
WITHOUT_CLASSIFICATION	wait until thread has initialized
WITHOUT_CLASSIFICATION	notify thread to proceed
WITHOUT_CLASSIFICATION	wait until thread has completed
WITHOUT_CLASSIFICATION	we do preand post load outside the "body" versions to pre-prepare and pre-push the dynamic scope we need for lastline
WITHOUT_CLASSIFICATION	out of byte range there will be no match for sure
WITHOUT_CLASSIFICATION	MRI behavior: raise ArgumentError for 'unknown command' before checking number of args.
WITHOUT_CLASSIFICATION	if any exceptions were raised, we fail
WITHOUT_CLASSIFICATION	there should only be one more thread in thread group than before we started
WITHOUT_CLASSIFICATION	construct a new cache with thread's classloader and no limit
WITHOUT_CLASSIFICATION	Class<?> script1 = ((DefaultMethod) runtime1.getObject().getMethods().get("foo")).getJITCompilerScript().getClass(); Class<?> script2 = ((DefaultMethod) runtime2.getObject().getMethods().get("foo")).getJITCompilerScript().getClass();
WITHOUT_CLASSIFICATION	assertSame(script1, script2);
WITHOUT_CLASSIFICATION	void methods should work
WITHOUT_CLASSIFICATION	methods with required = 4 or higher should bind and be callable using reflection JRUBY-3649
WITHOUT_CLASSIFICATION	Since we don't have any other error reporting mechanism, we add the error message as an always-failing test to the test suite.
WITHOUT_CLASSIFICATION	Ensure we have a new interpreter for each test. Previous we were using the same interpreter which caused problems as soon as one test failed.
WITHOUT_CLASSIFICATION	Without a flush Ant will miss some of our output
WITHOUT_CLASSIFICATION	assertTrue(rubyObject.kind_of(ruby.getClasses().getStringClass()).isFalse());
WITHOUT_CLASSIFICATION	int n = 10;
WITHOUT_CLASSIFICATION	there might be more test classes in a single file, so we iterate over them
WITHOUT_CLASSIFICATION	No ClassCastException!
WITHOUT_CLASSIFICATION	value equality
WITHOUT_CLASSIFICATION	identity equality
WITHOUT_CLASSIFICATION	bench straight-up integer fib(30)
WITHOUT_CLASSIFICATION	bench Integer fib
WITHOUT_CLASSIFICATION	bench fully-boxed fib
WITHOUT_CLASSIFICATION	bench fully-boxed fib
WITHOUT_CLASSIFICATION	bench fixnum-boxed fib
WITHOUT_CLASSIFICATION	bench straight-up long fib(30)
WITHOUT_CLASSIFICATION	bench Long fib
WITHOUT_CLASSIFICATION	skip this one, probably no 'ls' (windows)
WITHOUT_CLASSIFICATION	start off with a neutral parent
WITHOUT_CLASSIFICATION	public class Hello { public static String getMessage() { return "....."; } }
WITHOUT_CLASSIFICATION	in method body with no containing loop, issue jump error load runtime and value, issue jump error
WITHOUT_CLASSIFICATION	Note: We can't use file.exists() to check whether the symlink exists or not, because that method returns false for existing but broken symlink. So, we try without the existence check, but in the try-catch block. MRI behavior: symlink? on broken symlink should return true.
WITHOUT_CLASSIFICATION	We are creating a new IO object that shares the same IOHandler (and fileno).
WITHOUT_CLASSIFICATION	a while node could receive non-local flow control from any of these: a closure within the loop an eval within the loop a block-arg-based proc called within the loop
WITHOUT_CLASSIFICATION	[IRubyObject] [IRubyObject, IRubyObject] [IRubyObject, RubyClass] [IRubyObject, RubyClass, RubyClass] [IRubyObject, RubyClass, Visibility] [IRubyObject, RubyClass, Visibility, Visibility]
WITHOUT_CLASSIFICATION	select appropriate call site dup receiver load self
WITHOUT_CLASSIFICATION	Translate "x || y" --> "x = (is_true(x) ? x : y)" --> x = -- build(x) should return a variable! -- f = is_true(x) beq(f, true, L) x = -- build(y) -- L:
WITHOUT_CLASSIFICATION	Force the client socket to be blocking
WITHOUT_CLASSIFICATION	Additional context surrounding tokens that both the lexer and grammar use.
WITHOUT_CLASSIFICATION	Enebo: c can never be antrhign but '.' Why did I put this here?
WITHOUT_CLASSIFICATION	save package module as ivar in parent, and add method to parent so we don't have to come back here.
WITHOUT_CLASSIFICATION	[C,C] [C, boolean]
WITHOUT_CLASSIFICATION	Label for the start of the closure (used to implement redo) Label for the end of the closure (used to implement retry)
WITHOUT_CLASSIFICATION	ignore; job was cancelled FIXME: is this ok?
WITHOUT_CLASSIFICATION	check arity checkArity(mv, scope);
WITHOUT_CLASSIFICATION	rethrow exception rethrow it
WITHOUT_CLASSIFICATION	we take the first method found as our "n" method, since for any non-specific arity they'll all error the same. If an actual "n" method is created, we use that.
WITHOUT_CLASSIFICATION	Used by our duck-typification of Proc into interface types, to allow coercing a simple proc into an interface parameter.
WITHOUT_CLASSIFICATION	proxy is under construction, building thread can safely read non-volatile value
WITHOUT_CLASSIFICATION	it's either as converted as we can make it via above logic or it's not one of the types we convert, so just pass it out as-is without wrapping
WITHOUT_CLASSIFICATION	package scheme 2: separate module for each full package name, constructed from the camel-cased package segments: Java::JavaLang::Object,
WITHOUT_CLASSIFICATION	construct the proxy method
WITHOUT_CLASSIFICATION	line 159 "-" %token constants
WITHOUT_CLASSIFICATION	+++ Helper Methods
WITHOUT_CLASSIFICATION	line 152 "-" %token constants
WITHOUT_CLASSIFICATION	initial size state stack value stack current input #tokens to shift
WITHOUT_CLASSIFICATION	+++ Helper Methods
WITHOUT_CLASSIFICATION	We only need to pass in current scope if we are evaluating as a block (which is only done for evals). We need to pass this in so that we can appropriately scope down to captured scopes when we are parsing.
WITHOUT_CLASSIFICATION	let the width (if any), get processed in the next loop, so any leading 0 gets treated correctly
WITHOUT_CLASSIFICATION	A place to store that special hiding space that bindings need to implement things like: eval("a = 1", binding); eval("p a"). All binding instances must get access to this hidden shared scope. We store it here. This will be null if no binding has yet been called.
WITHOUT_CLASSIFICATION	TODO: make it 16 now ? MUST be power of 2!
WITHOUT_CLASSIFICATION	check visibility dup method
WITHOUT_CLASSIFICATION	&foo are not getting set from somewhere...I want the following assert to be true though assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];
WITHOUT_CLASSIFICATION	unsigned int, native unsigned long, native
WITHOUT_CLASSIFICATION	need padding I'm fairly sure there is a library call to create a string filled with a given char with a given length but I couldn't find it
WITHOUT_CLASSIFICATION	MRI behavior: Be default, 2 digits in the exponent. Use 3 digits only when necessary. See comment for writeExp method for more details.
WITHOUT_CLASSIFICATION	MRI ignores seek errors, presumably for unseekable files like serial ports (JRUBY-2979), so we shall too.
WITHOUT_CLASSIFICATION	switch for no more data, OK for strict to go calc
WITHOUT_CLASSIFICATION	A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits is what index in the right scope to set the value.
WITHOUT_CLASSIFICATION	Estimate the square root with the foremost 62 bits of squarD bi and scale are a tandem
WITHOUT_CLASSIFICATION	captures begin and end are used when not groups defined source string
WITHOUT_CLASSIFICATION	INSTANCE VARIABLE RUBY METHODS
WITHOUT_CLASSIFICATION	switch while
WITHOUT_CLASSIFICATION	For nodes do not have their own scope so we pass null to indicate this. 'For's are implemented as blocks in evaluation, but they have no scope so we just deal with this lack of scope throughout its lifespan. We should probably change the way this works to get rid of multiple null checks.
WITHOUT_CLASSIFICATION	This field is used during argument processing to avoid putting RubyArray instances that are purely for utility purposes into ObjectSpace.
WITHOUT_CLASSIFICATION	Parent container for this context (can be dynamic!!) If dynamic, at runtime, this will be the meta-object corresponding to a class/script/module/method/closure List of IR instructions for this method
WITHOUT_CLASSIFICATION	Translate "ret = (a && b)" --> "ret = (a ? b : false)" --> v1 = -- build(a) -- OPT: ret can be set to v1, but effectively v1 is false if we take the branch to L. while this info can be inferred by using attributes, why bother if we can do this? ret = false beq(v1, false, L) v2 = -- build(b) -- ret = v2 L:
WITHOUT_CLASSIFICATION	expected
WITHOUT_CLASSIFICATION	Do nothing
WITHOUT_CLASSIFICATION	constructor
WITHOUT_CLASSIFICATION	If a line is followed by a blank line put it back.
WITHOUT_CLASSIFICATION	$>: default output handle
WITHOUT_CLASSIFICATION	line 423
WITHOUT_CLASSIFICATION	line 486
WITHOUT_CLASSIFICATION	Signal uses sun.misc. classes, this is not allowed in the security-sensitive environments
WITHOUT_CLASSIFICATION	re-register, since fileno points at something new now
WITHOUT_CLASSIFICATION	produce a nicer error since Rubyists aren't used to seeing this
WITHOUT_CLASSIFICATION	produce a nicer error since Rubyists aren't used to seeing this
WITHOUT_CLASSIFICATION	colon3, assign in Object
WITHOUT_CLASSIFICATION	if there's no receiver, evaluate and pass in the superclass, or pass self if it no superclass
WITHOUT_CLASSIFICATION	Wire up Function#call(args) to use the super-fast native invokers
WITHOUT_CLASSIFICATION	TODO: varargs?
WITHOUT_CLASSIFICATION	TODO: varargs?
WITHOUT_CLASSIFICATION	TODO: varargs?
WITHOUT_CLASSIFICATION	TODO: varargs?
WITHOUT_CLASSIFICATION	Decrease value to hit upper range.
WITHOUT_CLASSIFICATION	assign to appropriate variable
WITHOUT_CLASSIFICATION	"else" body
WITHOUT_CLASSIFICATION	done done done Nothing to do for 1.8 done done done done done done done? done done done done done done done done done done done case DEFINEDNODE: return buildDefined(node, m); Incomplete done done done done done done done done case ENSURENODE: return buildEnsureNode(node, m); DEFERRED done done done done case FLIPNODE: return buildFlip(node, m); SSS FIXME: What code generates this AST? done done done done done done done done done done done done done done done done done done? done done done done done done -- partially case OPELEMENTASGNNODE: return buildOpElementAsgn(node, m); DEFERRED SSS FIXME: What code generates this AST? done case POSTEXENODE: return buildPostExe(node, m); DEFERRED case PREEXENODE: return buildPreExe(node, m); DEFERRED done?? done
WITHOUT_CLASSIFICATION	read-volatile
WITHOUT_CLASSIFICATION	$+: string matches last paren.
WITHOUT_CLASSIFICATION	should alter global state
WITHOUT_CLASSIFICATION	should alter global state
WITHOUT_CLASSIFICATION	Ruby code frequently uses a platform check to choose "NUL:" on windows but since that check doesn't work well on JRuby, we help it out
WITHOUT_CLASSIFICATION	10!
WITHOUT_CLASSIFICATION	case RESCUENODE: return buildRescue(node, m); DEFERRED case RETRYNODE: return buildRetry(node, m); DEFERRED done
WITHOUT_CLASSIFICATION	Is this instruction live or dead? During optimization passes, if this instruction causes no side-effects and the result of the instruction is not needed by anyone else, we can remove this instruction altogether without affecting program correctness.
WITHOUT_CLASSIFICATION	all these types are immediately considered "defined"
WITHOUT_CLASSIFICATION	first, iterate over all required args
WITHOUT_CLASSIFICATION	Determine if the parameter might be passed as a 32bit int parameter. This just applies to buffer/pointer types.
WITHOUT_CLASSIFICATION	Keyword keyword = Keyword.getKeyword(tempVal, tempVal.length());
WITHOUT_CLASSIFICATION	yyLhs 496
WITHOUT_CLASSIFICATION	yyLhs 496
WITHOUT_CLASSIFICATION	initial size state stack value stack current input #tokens to shift
WITHOUT_CLASSIFICATION	line 449
WITHOUT_CLASSIFICATION	line 495
WITHOUT_CLASSIFICATION	Management/monitoring
WITHOUT_CLASSIFICATION	if we've found the last char of the separator, and we've found at least as many characters as separator length, and the last n characters of our buffer match the separator, we're done
WITHOUT_CLASSIFICATION	14!
WITHOUT_CLASSIFICATION	Process any set of annotations No supported options
WITHOUT_CLASSIFICATION	add to the jitted methods set
WITHOUT_CLASSIFICATION	extract item from array
WITHOUT_CLASSIFICATION	extract item from array
WITHOUT_CLASSIFICATION	case SCLASSNODE: return buildSClass(node, m); DEFERRED done done done done done done done done case UNDEFNODE: return buildUndef(node, m); DEFERRED done case VALIASNODE: return buildVAlias(node, m); DEFERRED done done
WITHOUT_CLASSIFICATION	Adding a post-invoke for the cb result serves to both keep it alive until after the function returns, and allows us to clean up the native trampoline early, instead of letting them accumulate until a GC run
WITHOUT_CLASSIFICATION	The Java method doesn't care what class it is, but we need to know what to convert it to, so we use the object's own class. If that doesn't help, we use String to force a call to the object's "to_s" method.
WITHOUT_CLASSIFICATION	index for the item
WITHOUT_CLASSIFICATION	Atomic integers for symbol and method IDs
WITHOUT_CLASSIFICATION	18!
WITHOUT_CLASSIFICATION	If we have more than one arg, make sure the array created to contain them is not ObjectSpaced
WITHOUT_CLASSIFICATION	set up a local IRuby variable
WITHOUT_CLASSIFICATION	set up a local IRuby variable
WITHOUT_CLASSIFICATION	set up a local IRuby variable
WITHOUT_CLASSIFICATION	set up a local IRuby variable
WITHOUT_CLASSIFICATION	NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable
WITHOUT_CLASSIFICATION	This method takes as input a map of operands to their values, and outputs the result of this instruction. If the value map provides a value for any of the instruction's operands the expectation is that the operand will be replaced with the simplified value. It is not required that it do so -- code correctness is not compromised by failure to simplify. @param valueMap Mapping from operands to their simplified values @returns simplified result / output of this instruction
WITHOUT_CLASSIFICATION	Can't support the rest with Java
WITHOUT_CLASSIFICATION	An atomic long for generating DynamicMethod serial numbers
WITHOUT_CLASSIFICATION	MRI behavior: always check whether the file is writable or not, even if we are to write 0 bytes.
WITHOUT_CLASSIFICATION	22!
WITHOUT_CLASSIFICATION	attribute set.
WITHOUT_CLASSIFICATION	grab nil for local variables
WITHOUT_CLASSIFICATION	grab nil for local variables
WITHOUT_CLASSIFICATION	grab nil for local variables
WITHOUT_CLASSIFICATION	fill in all vars with nil so compiler is happy about future accesses
WITHOUT_CLASSIFICATION	Build a new class and add it to the current scope (could be a script / module / class)
WITHOUT_CLASSIFICATION	---------- These methods below are used during compile-time optimizations -------
WITHOUT_CLASSIFICATION	---------- These methods below are used during compile-time optimizations -------
WITHOUT_CLASSIFICATION	AF_INET
WITHOUT_CLASSIFICATION	Now we provide default impls of a number of signatures. For each arity, we first generate a non-block version of the method, which just adds NULL_BLOCK and re-calls, allowing e.g. compiled code, which always can potentially take a block, to only generate the block-receiving signature and still avoid arg boxing. We then provide default implementations of each block-accepting method that in turn call the IRubyObject[]+Block version of call. This then finally falls back on the minimum implementation requirement for dynamic method handles.
WITHOUT_CLASSIFICATION	Because we implement Java interfaces now, we need a new === that's aware of those additional "virtual" supertypes
WITHOUT_CLASSIFICATION	BASE64
WITHOUT_CLASSIFICATION	note nemes_gamma can return Double.POSITIVE_INFINITY or Double.NEGATIVE_INFINITY when value is an integer less than 1. We treat 0 as a special case to avoid Domain error.
WITHOUT_CLASSIFICATION	element set
WITHOUT_CLASSIFICATION	visit a label to start scoping for local vars in this method
WITHOUT_CLASSIFICATION	visit a label to start scoping for local vars in this method
WITHOUT_CLASSIFICATION	temp locals must start after last real local
WITHOUT_CLASSIFICATION	SSS: Looks like we receive the arg in buildBlockArgsAssignment via the IterNode We won't get here for argument receives! So, buildDasgn is called for assignments to block variables within a block. As far as the IR is concerned, this is just a simple copy
WITHOUT_CLASSIFICATION	getSimplifiedOperand returns the value of this operand, fully simplified getSimplifiedOperand returns the operand in a form that can be materialized into bytecode, if it cannot be completely optimized away The value is used during optimizations and propagated through the IR. But, it is thrown away after that. But, the operand form is used for constructing the compound objects represented by the operand. Example: a = [1], b = [3,4], c = [a,b], d = [2,c] -- getValue(c) = [1,[3,4]]; getSimplifiedOperand(c) = [1, b] -- getValue(d) = [2,[1,[3,4]]]; getSimplifiedOperand(d) = [2, c] Note that a,b,c,d are all objects, and c has a reference to objects a and b, and d has a reference to c. So, if contents of a or b is modified, the "simplified value"s of c and d also change! This difference is captured by these two methods.
WITHOUT_CLASSIFICATION	IRubyObject protocol = args[4];
WITHOUT_CLASSIFICATION	promise to implement three to N with block
WITHOUT_CLASSIFICATION	Ruby's OMG capture all source in a Hash feature Add each line to buffer when encountering newline or EOF for first time.
WITHOUT_CLASSIFICATION	carriage return
WITHOUT_CLASSIFICATION	yyDgoto 136
WITHOUT_CLASSIFICATION	discarding a token does not change stack
WITHOUT_CLASSIFICATION	String construction routines by NOT byte[] buffer and making the target String shared
WITHOUT_CLASSIFICATION	insert all nodes in sequence, hash them in the final instruction KEY
WITHOUT_CLASSIFICATION	return last value from execution
WITHOUT_CLASSIFICATION	we append an index to ensure two identical method names will not conflict
WITHOUT_CLASSIFICATION	Basic Block id CFG that this basic block belongs to All basic blocks have a starting label List of non-label instructions
WITHOUT_CLASSIFICATION	otherwise one key has been selected (ours) so we get the channel and hand it off
WITHOUT_CLASSIFICATION	For all uninitialized specific arities, we defer to the "n" method which should raise appropriate error in all cases.
WITHOUT_CLASSIFICATION	implement is called to force this class to create stubs for all methods in the given interface, so they'll show up in the list of methods and be invocable without passing through method_missing
WITHOUT_CLASSIFICATION	CASE IR instructions are dummy instructions -- all when/then clauses have been converted into if-then-else blocks
WITHOUT_CLASSIFICATION	check arity in the variable-arity version
WITHOUT_CLASSIFICATION	leave it null and fall back on our normal invocation logic
WITHOUT_CLASSIFICATION	Build closure body and return the result of the closure
WITHOUT_CLASSIFICATION	for each simple method name, implement the complex methods, calling the simple version
WITHOUT_CLASSIFICATION	Need to initialize
WITHOUT_CLASSIFICATION	Need to initialize
WITHOUT_CLASSIFICATION	Need to initialize
WITHOUT_CLASSIFICATION	Need to initialize
WITHOUT_CLASSIFICATION	Need to initialize
WITHOUT_CLASSIFICATION	Need to initialize
WITHOUT_CLASSIFICATION	Need to initialize
WITHOUT_CLASSIFICATION	Need to initialize
WITHOUT_CLASSIFICATION	Install direct java methods with mangled name so 'send' can call them directly.
WITHOUT_CLASSIFICATION	fall through
WITHOUT_CLASSIFICATION	deal with case when "other" is not a string
WITHOUT_CLASSIFICATION	All errors to sysread should be SystemCallErrors, but on a closed stream Ruby returns an IOError. Java throws same exception for all errors so we resort to this hack...
WITHOUT_CLASSIFICATION	in method body with no containing loop, issue jump error load runtime and value, issue jump error
WITHOUT_CLASSIFICATION	in method body with no containing loop, issue jump error load runtime and value, issue jump error
WITHOUT_CLASSIFICATION	store argument count information into scope
WITHOUT_CLASSIFICATION	the load method is used for loading as a top-level script, and prepares appropriate scoping around the code
WITHOUT_CLASSIFICATION	First, build assignments for specific named arguments
WITHOUT_CLASSIFICATION	public Object invoke(Object receiver, Object arg0, Object arg1, Object arg2, Object arg3) { throw fail(); } public Object invoke(Object receiver, Object arg0, Object arg1, Object arg2, Object arg3, Object arg4) { throw fail(); }
WITHOUT_CLASSIFICATION	get current context
WITHOUT_CLASSIFICATION	octal constant
WITHOUT_CLASSIFICATION	read
WITHOUT_CLASSIFICATION	this really needs to be inlined here
WITHOUT_CLASSIFICATION	it doesn't handle special cases
WITHOUT_CLASSIFICATION	If reciever is self then we do the call the same way as vcall
WITHOUT_CLASSIFICATION	If reciever is self then we do the call the same way as vcall
WITHOUT_CLASSIFICATION	If reciever is self then we do the call the same way as vcall
WITHOUT_CLASSIFICATION	receiver
WITHOUT_CLASSIFICATION	receiver
WITHOUT_CLASSIFICATION	receiver
WITHOUT_CLASSIFICATION	receiver
WITHOUT_CLASSIFICATION	receiver
WITHOUT_CLASSIFICATION	receiver
WITHOUT_CLASSIFICATION	receiver
WITHOUT_CLASSIFICATION	receiver
WITHOUT_CLASSIFICATION	receiver
WITHOUT_CLASSIFICATION	ignore; we won't use invokedynamic
WITHOUT_CLASSIFICATION	at end
WITHOUT_CLASSIFICATION	bang: true, no match, no substitution
WITHOUT_CLASSIFICATION	save blocking state
WITHOUT_CLASSIFICATION	receiver
WITHOUT_CLASSIFICATION	receiver
WITHOUT_CLASSIFICATION	receiver
WITHOUT_CLASSIFICATION	invoke static __file__
WITHOUT_CLASSIFICATION	rest of the argument array!
WITHOUT_CLASSIFICATION	fall back on empty env when security disallows environment var access (like in an applet)
WITHOUT_CLASSIFICATION	UndefinedMethod should be immutable
WITHOUT_CLASSIFICATION	UndefinedMethod should be immutable
WITHOUT_CLASSIFICATION	load null block
WITHOUT_CLASSIFICATION	This point is only reached if there was an exception handler installed.
WITHOUT_CLASSIFICATION	nothing else to here - the module version will be included in the class.
WITHOUT_CLASSIFICATION	JRUBY-1000, fail early when attempting to subclass a final Java class; solved here by adding an exception-throwing "inherited"
WITHOUT_CLASSIFICATION	block given
WITHOUT_CLASSIFICATION	block given
WITHOUT_CLASSIFICATION	Translate ret = (a || b) to ret = (a ? true : b) as follows v1 = -- build(a) -- OPT: ret can be set to v1, but effectively v1 is true if we take the branch to L. while this info can be inferred by using attributes, why bother if we can do this? ret = true beq(v1, true, L) v2 = -- build(b) -- ret = v2 L:
WITHOUT_CLASSIFICATION	Initial precision is that of double numbers 2^63/2 ~ 4E18 63-1 an even number of number bits precision seems 16 to 18 digits
WITHOUT_CLASSIFICATION	We can callsite cache const_missing if we want
WITHOUT_CLASSIFICATION	self
WITHOUT_CLASSIFICATION	self
WITHOUT_CLASSIFICATION	self
WITHOUT_CLASSIFICATION	declare the field
WITHOUT_CLASSIFICATION	Assign the values.
WITHOUT_CLASSIFICATION	Assign the values.
WITHOUT_CLASSIFICATION	check arity
WITHOUT_CLASSIFICATION	check arity
WITHOUT_CLASSIFICATION	create the class
WITHOUT_CLASSIFICATION	called only by initializing thread; no synchronization required
WITHOUT_CLASSIFICATION	No hex value after the 'x'.
WITHOUT_CLASSIFICATION	1.8
WITHOUT_CLASSIFICATION	6:tags 16:addr 1:eos
WITHOUT_CLASSIFICATION	Let m be the exact digits precision in an earlier! loop
WITHOUT_CLASSIFICATION	For 'foo()'. Args are only significant in maintaining backwards compatible AST structure
WITHOUT_CLASSIFICATION	block
WITHOUT_CLASSIFICATION	Label for the start of the method Label for the end of the method
WITHOUT_CLASSIFICATION	comparisons & checks checks if the operand is non-null and non-false EQQ a === call used only for its conditional results, as in case/when, begin/rescue, ...
WITHOUT_CLASSIFICATION	FIXME: JRUBY-3604
WITHOUT_CLASSIFICATION	invoke pre method stuff
WITHOUT_CLASSIFICATION	all done with lookup attempts, release monitor
WITHOUT_CLASSIFICATION	allow proxy to be read without synchronization. if proxy is under construction, only the building thread can see it.
WITHOUT_CLASSIFICATION	Create list of interface names to proxy (and make sure they really are interfaces) Also build a hashcode from all classes to use for retrieving previously-created impl
WITHOUT_CLASSIFICATION	Construct local variables based on parameter names passed in
WITHOUT_CLASSIFICATION	Value of "TZ" property is of a bit different format, which confuses the Java's TimeZone.getTimeZone(id) method, and so, we need to convert it.
WITHOUT_CLASSIFICATION	file given, use it and force it into binding
WITHOUT_CLASSIFICATION	ensure the object is associated with the wrapper we found it in, so that if it comes back we don't re-wrap it
WITHOUT_CLASSIFICATION	return sqrt(squarD) with precision of rootMC
WITHOUT_CLASSIFICATION	A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits is what index in the right scope to set the value.
WITHOUT_CLASSIFICATION	arg
WITHOUT_CLASSIFICATION	Get a new label using the provided label prefix
WITHOUT_CLASSIFICATION	normal exit, perform finally and return
WITHOUT_CLASSIFICATION	coerce arguments
WITHOUT_CLASSIFICATION	0.0 is ok float range inverted float range? NaN +infinity -infinity
WITHOUT_CLASSIFICATION	expected
WITHOUT_CLASSIFICATION	set this class's method names in var @__java_ovrd_methods if this is the new class; otherwise, get method names from there if this is a proxy superclass.
WITHOUT_CLASSIFICATION	ignore backslashed spaces in %w
WITHOUT_CLASSIFICATION	Invert the sign, since TZ format and Java format use opposite signs, sigh... Also, Java API requires the sign to be always present, be it "+" or "-".
WITHOUT_CLASSIFICATION	no binding given, use 0 for both
WITHOUT_CLASSIFICATION	<=> may return nil in many circumstances, e.g. 3 <=> NaN
WITHOUT_CLASSIFICATION	use numbered access method
WITHOUT_CLASSIFICATION	Always use "GMT" since that's required by Java API.
WITHOUT_CLASSIFICATION	ignore if it's not a global var
WITHOUT_CLASSIFICATION	The dataStruct is a place where custom information can be contained for core implementations that doesn't necessarily want to go to the trouble of creating a subclass of RubyObject. The OpenSSL implementation uses this heavily to save holder objects containing Java cryptography objects. Java integration uses this to store the Java object ref. protected transient Object dataStruct;
WITHOUT_CLASSIFICATION	Remaining arguments are for the script itself
WITHOUT_CLASSIFICATION	arg grouping, use slower arg walking logic
WITHOUT_CLASSIFICATION	build scope names string
WITHOUT_CLASSIFICATION	Tries to load at compile-time the constant referred to by 'constRef'. This might be possible if the constant is defined and is not a forward reference to a value that will be defined later in the class.
WITHOUT_CLASSIFICATION	Here we create an "anonymous" exception type used for unrolling the stack. MRI creates a new one for every call to timeout, which can be costly. We opt to use a single exception type for all cases to avoid this overhead.
WITHOUT_CLASSIFICATION	finally
WITHOUT_CLASSIFICATION	MRI behavior: With TZ equal to "GMT" or "UTC", Time.now is NOT considered as a proper GMT/UTC time: ENV['TZ']="GMT" Time.now.gmt? ==> false ENV['TZ']="UTC" Time.now.utc? ==> false Hence, we need to adjust for that.
WITHOUT_CLASSIFICATION	?l | boolean | True if file1 exists and is a symbolic link
WITHOUT_CLASSIFICATION	This try/catch is to allow failing over to the "commands" logic when running from within a jruby-complete jar file, which has jruby.home = a jar file URL that does not resolve correctly with JRubyFile.create.
WITHOUT_CLASSIFICATION	Each root node has a top-level scope that we need to push
WITHOUT_CLASSIFICATION	specific arity
WITHOUT_CLASSIFICATION	In the case of two arguments, MRI will discard the portion of the first argument after a decimal point (i.e., "floor"). However in the case of a single argument, any portion after the decimal point is honored.
WITHOUT_CLASSIFICATION	?w | boolean | True if file1 exists and is writable by effective uid/gid
WITHOUT_CLASSIFICATION	COMMON VARIABLE METHODS
WITHOUT_CLASSIFICATION	@JRubyMethod public IRubyObject to_proc() { return RubyProc.newProc(getRuntime(), CallBlock.newCallClosure(this, getRuntime().getSymbol(), Arity.noArguments(), new ToProcCallback(this), getRuntime().getCurrentContext()), Block.Type.PROC); }
WITHOUT_CLASSIFICATION	let RescuedBlock continue
WITHOUT_CLASSIFICATION	let RescuedBlock continue
WITHOUT_CLASSIFICATION	do nothing, fall back on default compiler below
WITHOUT_CLASSIFICATION	do nothing, fall back on default compiler below
WITHOUT_CLASSIFICATION	Should we run this pass on the current scope before running it on nested scopes?
WITHOUT_CLASSIFICATION	Should we run this pass on the current scope before running it on nested scopes?
WITHOUT_CLASSIFICATION	================ Utility Methods ================
WITHOUT_CLASSIFICATION	================ Utility Methods ================
WITHOUT_CLASSIFICATION	write-volatile
WITHOUT_CLASSIFICATION	write-volatile
WITHOUT_CLASSIFICATION	write-volatile
WITHOUT_CLASSIFICATION	write-volatile
WITHOUT_CLASSIFICATION	write-volatile
WITHOUT_CLASSIFICATION	write-volatile
WITHOUT_CLASSIFICATION	write-volatile
WITHOUT_CLASSIFICATION	write-volatile
WITHOUT_CLASSIFICATION	write-volatile
WITHOUT_CLASSIFICATION	if more than 4 locals, get the locals array too
WITHOUT_CLASSIFICATION	if more than 4 locals, get the locals array too
WITHOUT_CLASSIFICATION	if more than 4 locals, get the locals array too
WITHOUT_CLASSIFICATION	Add property name aliases
WITHOUT_CLASSIFICATION	================ Instance Methods ================
WITHOUT_CLASSIFICATION	================ Instance Methods ================
WITHOUT_CLASSIFICATION	================ Instance Methods ================
WITHOUT_CLASSIFICATION	@JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)
WITHOUT_CLASSIFICATION	@JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)
WITHOUT_CLASSIFICATION	@JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)
WITHOUT_CLASSIFICATION	INTERNAL VARIABLE METHODS
WITHOUT_CLASSIFICATION	backspace
WITHOUT_CLASSIFICATION	yySindex 889
WITHOUT_CLASSIFICATION	yyGindex 136
WITHOUT_CLASSIFICATION	yyGindex 136
WITHOUT_CLASSIFICATION	yyGindex 136
WITHOUT_CLASSIFICATION	package-private
WITHOUT_CLASSIFICATION	fall through
WITHOUT_CLASSIFICATION	fall through
WITHOUT_CLASSIFICATION	MRI issuses warning here on (RBIGNUM(x)->len SIZEOF_BDIGITS yy > 10241024)
WITHOUT_CLASSIFICATION	interrupt the target thread in case it's blocking or waiting WARNING: We no longer interrupt the target thread, since this usually means interrupting IO and with NIO that means the channel is no longer usable. We either need a new way to handle waking a target thread that's waiting on IO, or we need to accept that we can't wake such threads and must wait for them to complete their operation. threadImpl.interrupt();
WITHOUT_CLASSIFICATION	interrupt the target thread in case it's blocking or waiting WARNING: We no longer interrupt the target thread, since this usually means interrupting IO and with NIO that means the channel is no longer usable. We either need a new way to handle waking a target thread that's waiting on IO, or we need to accept that we can't wake such threads and must wait for them to complete their operation. threadImpl.interrupt();
WITHOUT_CLASSIFICATION	Nested class whose instances act as thunks reacting to to_str method called from (Exception#to_str, Exception#message) MRI equivalent: rb_cNameErrorMesg, class name: "message", construction method: "!", to_str implementation: "name_err_mesg_to_str" TODO: this class should not be lookupable
WITHOUT_CLASSIFICATION	We need to guarantee that any existing reads of old Map can proceed. So we cannot yet null out each bin.
WITHOUT_CLASSIFICATION	The name of this source (e.g. a filename: foo.rb)
WITHOUT_CLASSIFICATION	EQ == 0 (i.e. false)
WITHOUT_CLASSIFICATION	EQ == 0 (i.e. false)
WITHOUT_CLASSIFICATION	This should only be called by this and RubyFile. It allows this object to be created without a IOHandler.
WITHOUT_CLASSIFICATION	We yield here to hopefully permit the target thread to schedule MRI immediately schedules it, so this is close but not exact
WITHOUT_CLASSIFICATION	note that addMethod now does its own put, so any change made to functionality here should be made there as well
WITHOUT_CLASSIFICATION	Currently dead code, but useful when we figure out how to actually perform translit. private static boolean isTranslit(String encoding) { return encoding.toLowerCase().indexOf(TRANSLIT) != -1 ? true : false; }
WITHOUT_CLASSIFICATION	empirically it appears that to_ary coersions always return array or nil, so this should always be an array by now.
WITHOUT_CLASSIFICATION	EQ == 0 (i.e. false)
WITHOUT_CLASSIFICATION	EQ == 0 (i.e. false)
WITHOUT_CLASSIFICATION	EQ == 0 (i.e. false)
WITHOUT_CLASSIFICATION	EQ == 0 (i.e. false)
WITHOUT_CLASSIFICATION	EQ == 0 (i.e. false)
WITHOUT_CLASSIFICATION	No seconds, just yield
WITHOUT_CLASSIFICATION	finally handling for abnormal exit
WITHOUT_CLASSIFICATION	if it's an inner class and it's not public, we can't access it; skip population of declared elements
WITHOUT_CLASSIFICATION	getFoo => foo getFoo(int) => foo(int)
WITHOUT_CLASSIFICATION	not reached
WITHOUT_CLASSIFICATION	not reached
WITHOUT_CLASSIFICATION	not reached
WITHOUT_CLASSIFICATION	not reached
WITHOUT_CLASSIFICATION	not reached
WITHOUT_CLASSIFICATION	not reached
WITHOUT_CLASSIFICATION	not reached
WITHOUT_CLASSIFICATION	not reached
WITHOUT_CLASSIFICATION	not reached
WITHOUT_CLASSIFICATION	not reached
WITHOUT_CLASSIFICATION	not reached
WITHOUT_CLASSIFICATION	not reached
WITHOUT_CLASSIFICATION	not reached
WITHOUT_CLASSIFICATION	not reached
WITHOUT_CLASSIFICATION	not reached
WITHOUT_CLASSIFICATION	not reached
WITHOUT_CLASSIFICATION	not reached
WITHOUT_CLASSIFICATION	MRI behavior on Windows: it treats '/' as a root of a current drive (but only if SINGLE slash is present!): E.g., if current work directory is 'D:/home/directory', then '/' means 'D:/'. Basically, '/path' is treated as a RELATIVE path, relative to the current drive. 'path' is treated as absolute one.
WITHOUT_CLASSIFICATION	not reached
WITHOUT_CLASSIFICATION	not reached
WITHOUT_CLASSIFICATION	not reached
WITHOUT_CLASSIFICATION	not reached
WITHOUT_CLASSIFICATION	not reached
WITHOUT_CLASSIFICATION	not reached
WITHOUT_CLASSIFICATION	not reached
WITHOUT_CLASSIFICATION	not reached
WITHOUT_CLASSIFICATION	not reached
WITHOUT_CLASSIFICATION	not reached
WITHOUT_CLASSIFICATION	not reached
WITHOUT_CLASSIFICATION	This is needed when the enclosing class or module is a singleton. In that case, we generated a name such as null::Foo, which broke Marshalling, among others. The correct thing to do in this situation is to insert the generate the name of form #<Class:01xasdfasd> if it's a singleton module/class, which this code accomplishes.
WITHOUT_CLASSIFICATION	this is the only case it might be null here (in MetaClass construction)
WITHOUT_CLASSIFICATION	EQ == 0 (i.e. false) pop the extra result and replace with the send part of the AND
WITHOUT_CLASSIFICATION	get "self"
WITHOUT_CLASSIFICATION	No timeout in critical section
WITHOUT_CLASSIFICATION	rethrow exception rethrow it
WITHOUT_CLASSIFICATION	only public methods
WITHOUT_CLASSIFICATION	If already inspecting, there is no need to register/unregister again.
WITHOUT_CLASSIFICATION	First try to use drive letter from supplied dir value, then try current work dir.
WITHOUT_CLASSIFICATION	JRUBY-2435: Aliasing eval and other "special" methods should display a warning We warn because we treat certain method names as "special" for purposes of optimization. Hopefully this will be enough to convince people not to alias them.
WITHOUT_CLASSIFICATION	generate a real method signature for the method, with to/from coercions
WITHOUT_CLASSIFICATION	block argument to the method closure present class present method table mutations, def, defs, undef, alias likely call to eval makes calls that are aware of the frame makes calls that are aware of the frame's self makes calls that are aware of the frame's visibility makes calls that are aware of the frame's block makes calls that are aware of the frame's name makes calls that set or get backref makes calls that set or get lastline makes calls that are aware of the frame's class optional arguments to the method rest arg to the method makes calls that are aware of the scope makes a zero-argument super call accesses or sets constants accesses or sets class variables makes normal super call contains a retry
WITHOUT_CLASSIFICATION	Add aliases in Type::, NativeType:: and FFI::TYPE_
WITHOUT_CLASSIFICATION	Create constants for flock
WITHOUT_CLASSIFICATION	double-testing args.length here, but it avoids duplicating the proc-setup code in two places
WITHOUT_CLASSIFICATION	indices for temp values
WITHOUT_CLASSIFICATION	a while node could receive non-local flow control from any of these: a closure within the loop an eval within the loop a block-arg-based proc called within the loop
WITHOUT_CLASSIFICATION	Done with closure compilation
WITHOUT_CLASSIFICATION	Done with closure compilation
WITHOUT_CLASSIFICATION	Done with closure compilation
WITHOUT_CLASSIFICATION	Done with closure compilation
WITHOUT_CLASSIFICATION	snapshot of contents of directory current position in directory
WITHOUT_CLASSIFICATION	Exclusive locks in Java require the channel to be writable, otherwise an exception is thrown (terminating JRuby execution). But flock behavior of MRI is that it allows exclusive locks even on non-writable file. So we convert exclusive lock to shared lock if the channel is not writable, to better match the MRI behavior.
WITHOUT_CLASSIFICATION	explode array, it's an internal "args" array
WITHOUT_CLASSIFICATION	explode array, it's an internal "args" array
WITHOUT_CLASSIFICATION	set self to the class
WITHOUT_CLASSIFICATION	---------- Public fields, methods ---------
WITHOUT_CLASSIFICATION	A specific version was requested - use as is for search
WITHOUT_CLASSIFICATION	zero args, no block; do nothing
WITHOUT_CLASSIFICATION	we need to collect all methods, though we'll only install the ones that are named in this class
WITHOUT_CLASSIFICATION	Store each line into this list if not null.
WITHOUT_CLASSIFICATION	Portion of line right after beginning marker
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	If an IO exception occurs (something odd, but possible) A directory may return null.
WITHOUT_CLASSIFICATION	Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed
WITHOUT_CLASSIFICATION	Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed
WITHOUT_CLASSIFICATION	Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed
WITHOUT_CLASSIFICATION	use array as-is, it's a literal array
WITHOUT_CLASSIFICATION	finally with no exception
WITHOUT_CLASSIFICATION	Now, for all variables used by 'i' mark them live before 'i'
WITHOUT_CLASSIFICATION	TODO: varargs?
WITHOUT_CLASSIFICATION	TODO: varargs?
WITHOUT_CLASSIFICATION	The counting of slashes that follows is simply a way to adhere to Ruby's UNC (or something) compatibility. When Ruby's expand_path is called with "foobar" it will return "foo/bar". JRuby uses java.io.File, and hence returns "/foo/bar". In order to retain java.io.File in the lower layers and provide full Ruby compatibility, the number of extra slashes must be counted and prepended to the result.
WITHOUT_CLASSIFICATION	This is almost always already interned, since it will be called with a symbol in most cases but when created from Java code, we might get an argument that needs to be interned. addAccessor has as a precondition that the string MUST be interned
WITHOUT_CLASSIFICATION	not a class
WITHOUT_CLASSIFICATION	not a class
WITHOUT_CLASSIFICATION	Ruby uses Qnil here, we use "dummy" because we need a class
WITHOUT_CLASSIFICATION	Ruby uses Qnil here, we use "dummy" because we need a class
WITHOUT_CLASSIFICATION	io.available() only returns 0 after EOF is encountered so we need to differentiate between the empty string and EOF
WITHOUT_CLASSIFICATION	In the current logic, if we get here we know that module is not an IncludedModuleWrapper, so there's no need to fish out the delegate. But just in case the logic should change later, let's do it anyway
WITHOUT_CLASSIFICATION	rb_iterate((VALUE()_((VALUE)))str_step, (VALUE)args, step_i, (VALUE)iter);
WITHOUT_CLASSIFICATION	Broken symlinks considered by exists() as non-existing, so we need to check for symlinks explicitly.
WITHOUT_CLASSIFICATION	CONSTANT API METHODS
WITHOUT_CLASSIFICATION	create the default thread group
WITHOUT_CLASSIFICATION	range_each_func(range, step_i, b, e, args);
WITHOUT_CLASSIFICATION	============================ Here are hash internals (This could be extracted to a separate class but it's not too large though) ============================
WITHOUT_CLASSIFICATION	LOW-LEVEL CLASS VARIABLE INTERFACE fetch/store/list class variables for this module
WITHOUT_CLASSIFICATION	used only by the compiler/interpreter (will set the literal flag)
WITHOUT_CLASSIFICATION	used only by the compiler/interpreter (will set the literal flag)
WITHOUT_CLASSIFICATION	Used for the 'redo' command
WITHOUT_CLASSIFICATION	Used for the 'redo' command
WITHOUT_CLASSIFICATION	retuns null when not found to avoid unnecessary getRuntime().getNil() call
WITHOUT_CLASSIFICATION	returns the stored value without processing undefs (autoloads)
WITHOUT_CLASSIFICATION	\cX, \c\M-X
WITHOUT_CLASSIFICATION	new Exception().printStackTrace();
WITHOUT_CLASSIFICATION	new Exception().printStackTrace();
WITHOUT_CLASSIFICATION	new Exception().printStackTrace();
WITHOUT_CLASSIFICATION	line 286
WITHOUT_CLASSIFICATION	line 476
WITHOUT_CLASSIFICATION	line 513
WITHOUT_CLASSIFICATION	line 530
WITHOUT_CLASSIFICATION	line 533
WITHOUT_CLASSIFICATION	line 537
WITHOUT_CLASSIFICATION	line 551
WITHOUT_CLASSIFICATION	end loop
WITHOUT_CLASSIFICATION	MRI behavior: we don't print errno for actual Errno errors
WITHOUT_CLASSIFICATION	prepare to call class definition method
WITHOUT_CLASSIFICATION	Traverse the instructions in this basic block in reverse order! Mark as dead all instructions whose results are not used!
WITHOUT_CLASSIFICATION	fields should really be an immutable map as it is never modified after construction
WITHOUT_CLASSIFICATION	load self object as IRubyObject, for recv param
WITHOUT_CLASSIFICATION	TODO: varargs?
WITHOUT_CLASSIFICATION	If we define a class in Ruby, but later want to allow it to be defined in Java, the allocator needs to be updated
WITHOUT_CLASSIFICATION	We only want IO objects with valid streams (better to error now).
WITHOUT_CLASSIFICATION	produce a nicer error since Rubyists aren't used to seeing this
WITHOUT_CLASSIFICATION	value
WITHOUT_CLASSIFICATION	value
WITHOUT_CLASSIFICATION	value
WITHOUT_CLASSIFICATION	value
WITHOUT_CLASSIFICATION	value
WITHOUT_CLASSIFICATION	yyLhs 542
WITHOUT_CLASSIFICATION	value
WITHOUT_CLASSIFICATION	value
WITHOUT_CLASSIFICATION	value
WITHOUT_CLASSIFICATION	MRI has extra pointer which makes our code look a little bit more strange in comparison
WITHOUT_CLASSIFICATION	Tempory buffer to build up a potential token. Consumer takes responsibility to reset this before use.
WITHOUT_CLASSIFICATION	tmpPosition is required because getPosition()'s side effects. if the warning is generated, the getPosition() on line 954 (this line + 18) will create a wrong position if the "inclusive" flag is not set.
WITHOUT_CLASSIFICATION	What is \v in C? case '\v': c2 = 'v'; break;
WITHOUT_CLASSIFICATION	Consider Thread aspects of this
WITHOUT_CLASSIFICATION	Position within source must reflect the actual offset and column. Since we ate an extra character here (this accounting is normally done in read ), we should update position info.
WITHOUT_CLASSIFICATION	An interrupt or timeout may have caused us to miss a notify that we consumed, so do another notify in case someone else is available to pick it up.
WITHOUT_CLASSIFICATION	line 572
WITHOUT_CLASSIFICATION	line 601
WITHOUT_CLASSIFICATION	line 601
WITHOUT_CLASSIFICATION	line 625
WITHOUT_CLASSIFICATION	line 649
WITHOUT_CLASSIFICATION	line 691
WITHOUT_CLASSIFICATION	line 723
WITHOUT_CLASSIFICATION	line 732
WITHOUT_CLASSIFICATION	line 745
WITHOUT_CLASSIFICATION	line 766
WITHOUT_CLASSIFICATION	line 785
WITHOUT_CLASSIFICATION	line 794
WITHOUT_CLASSIFICATION	line 800
WITHOUT_CLASSIFICATION	line 812
WITHOUT_CLASSIFICATION	line 827
WITHOUT_CLASSIFICATION	line 839
WITHOUT_CLASSIFICATION	line 845
WITHOUT_CLASSIFICATION	line 864
WITHOUT_CLASSIFICATION	line 886
WITHOUT_CLASSIFICATION	line 896
WITHOUT_CLASSIFICATION	line 911
WITHOUT_CLASSIFICATION	line 929
WITHOUT_CLASSIFICATION	line 952
WITHOUT_CLASSIFICATION	line 970
WITHOUT_CLASSIFICATION	line 972
WITHOUT_CLASSIFICATION	line 991
WITHOUT_CLASSIFICATION	line 1011
WITHOUT_CLASSIFICATION	line 1026
WITHOUT_CLASSIFICATION	line 1038
WITHOUT_CLASSIFICATION	line 1067
WITHOUT_CLASSIFICATION	line 1085
WITHOUT_CLASSIFICATION	line 1097
WITHOUT_CLASSIFICATION	line 1105
WITHOUT_CLASSIFICATION	line 1122
WITHOUT_CLASSIFICATION	line 1133
WITHOUT_CLASSIFICATION	line 1145
WITHOUT_CLASSIFICATION	line 1169
WITHOUT_CLASSIFICATION	line 1201
WITHOUT_CLASSIFICATION	line 1210
WITHOUT_CLASSIFICATION	line 1229
WITHOUT_CLASSIFICATION	line 1261
WITHOUT_CLASSIFICATION	line 1287
WITHOUT_CLASSIFICATION	line 1293
WITHOUT_CLASSIFICATION	line 1307
WITHOUT_CLASSIFICATION	line 1320
WITHOUT_CLASSIFICATION	line 1325
WITHOUT_CLASSIFICATION	line 1363
WITHOUT_CLASSIFICATION	line 1398
WITHOUT_CLASSIFICATION	line 1448
WITHOUT_CLASSIFICATION	line 1456
WITHOUT_CLASSIFICATION	line 1473
WITHOUT_CLASSIFICATION	line 1492
WITHOUT_CLASSIFICATION	line 1513
WITHOUT_CLASSIFICATION	line 1523
WITHOUT_CLASSIFICATION	line 1562
WITHOUT_CLASSIFICATION	line 1582
WITHOUT_CLASSIFICATION	line 1603
WITHOUT_CLASSIFICATION	line 1603
WITHOUT_CLASSIFICATION	line 1615
WITHOUT_CLASSIFICATION	line 1620
WITHOUT_CLASSIFICATION	line 1635
WITHOUT_CLASSIFICATION	line 1652
WITHOUT_CLASSIFICATION	line 1681
WITHOUT_CLASSIFICATION	line 1708
WITHOUT_CLASSIFICATION	line 1716
WITHOUT_CLASSIFICATION	line 1755
WITHOUT_CLASSIFICATION	line 1772
WITHOUT_CLASSIFICATION	line 1789
WITHOUT_CLASSIFICATION	ACTIONS_END
WITHOUT_CLASSIFICATION	ACTIONS_END
WITHOUT_CLASSIFICATION	force for args
WITHOUT_CLASSIFICATION	last expression should not be void
WITHOUT_CLASSIFICATION	compstmt position includes both parens around it
WITHOUT_CLASSIFICATION	We can assign if we already have variable of that name here or we are the only scope in the chain (which Local scopes always are).
WITHOUT_CLASSIFICATION	ignore, no debugger present
WITHOUT_CLASSIFICATION	ignore, no debugger present
WITHOUT_CLASSIFICATION	ignore, no debugger present
WITHOUT_CLASSIFICATION	ignore, no debugger present
WITHOUT_CLASSIFICATION	FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518
WITHOUT_CLASSIFICATION	This method exists for us to break up multiple expression when nodes (e.g. when 1,2,3:) into individual whenNodes. The primary reason for this is to ensure lazy evaluation of the arguments (when foo,bar,gar:) to prevent side-effects. In the old code this was done using nested when statements, which was awful for interpreter and compilation. Notes: This has semantic equivalence but will not be lexically equivalent. Compiler needs to detect same bodies to simplify bytecode generated.
WITHOUT_CLASSIFICATION	line 313
WITHOUT_CLASSIFICATION	line 339
WITHOUT_CLASSIFICATION	line 361
WITHOUT_CLASSIFICATION	line 413
WITHOUT_CLASSIFICATION	line 451
WITHOUT_CLASSIFICATION	line 472
WITHOUT_CLASSIFICATION	line 500
WITHOUT_CLASSIFICATION	line 515
WITHOUT_CLASSIFICATION	line 555
WITHOUT_CLASSIFICATION	line 582
WITHOUT_CLASSIFICATION	line 619
WITHOUT_CLASSIFICATION	line 636
WITHOUT_CLASSIFICATION	line 669
WITHOUT_CLASSIFICATION	line 703
WITHOUT_CLASSIFICATION	line 776
WITHOUT_CLASSIFICATION	line 814
WITHOUT_CLASSIFICATION	line 823
WITHOUT_CLASSIFICATION	line 854
WITHOUT_CLASSIFICATION	line 872
WITHOUT_CLASSIFICATION	line 905
WITHOUT_CLASSIFICATION	line 925
WITHOUT_CLASSIFICATION	line 958
WITHOUT_CLASSIFICATION	line 992
WITHOUT_CLASSIFICATION	line 1047
WITHOUT_CLASSIFICATION	line 1072
WITHOUT_CLASSIFICATION	line 1081
WITHOUT_CLASSIFICATION	line 1108
WITHOUT_CLASSIFICATION	line 1136
WITHOUT_CLASSIFICATION	line 1168
WITHOUT_CLASSIFICATION	line 1192
WITHOUT_CLASSIFICATION	line 1241
WITHOUT_CLASSIFICATION	line 1267
WITHOUT_CLASSIFICATION	line 1286
WITHOUT_CLASSIFICATION	line 1301
WITHOUT_CLASSIFICATION	line 1314
WITHOUT_CLASSIFICATION	line 1333
WITHOUT_CLASSIFICATION	line 1362
WITHOUT_CLASSIFICATION	line 1395
WITHOUT_CLASSIFICATION	line 1420
WITHOUT_CLASSIFICATION	line 1439
WITHOUT_CLASSIFICATION	line 1476
WITHOUT_CLASSIFICATION	line 1535
WITHOUT_CLASSIFICATION	line 1588
WITHOUT_CLASSIFICATION	line 1618
WITHOUT_CLASSIFICATION	line 1643
WITHOUT_CLASSIFICATION	line 1669
WITHOUT_CLASSIFICATION	line 1728
WITHOUT_CLASSIFICATION	line 1753
WITHOUT_CLASSIFICATION	line 1779
WITHOUT_CLASSIFICATION	line 1794
WITHOUT_CLASSIFICATION	line 1812
WITHOUT_CLASSIFICATION	line 1837
WITHOUT_CLASSIFICATION	line 1895
WITHOUT_CLASSIFICATION	line 1925
WITHOUT_CLASSIFICATION	line 1950
WITHOUT_CLASSIFICATION	line 1992
WITHOUT_CLASSIFICATION	line 2014
WITHOUT_CLASSIFICATION	Whether this scope is used as the "argument scope" for e.g. zsuper
WITHOUT_CLASSIFICATION	If we could not find the constant from cref..then try getting from inheritence hierarchy
WITHOUT_CLASSIFICATION	This while loop is for restarting the block call in case a 'redo' fires.
WITHOUT_CLASSIFICATION	This while loop is for restarting the block call in case a 'redo' fires.
WITHOUT_CLASSIFICATION	This while loop is for restarting the block call in case a 'redo' fires.
WITHOUT_CLASSIFICATION	This while loop is for restarting the block call in case a 'redo' fires.
WITHOUT_CLASSIFICATION	This while loop is for restarting the block call in case a 'redo' fires.
WITHOUT_CLASSIFICATION	This while loop is for restarting the block call in case a 'redo' fires.
WITHOUT_CLASSIFICATION	This while loop is for restarting the block call in case a 'redo' fires.
WITHOUT_CLASSIFICATION	A 'next' is like a local return from the block, ending this call or yield.
WITHOUT_CLASSIFICATION	A 'next' is like a local return from the block, ending this call or yield.
WITHOUT_CLASSIFICATION	A 'next' is like a local return from the block, ending this call or yield.
WITHOUT_CLASSIFICATION	A 'next' is like a local return from the block, ending this call or yield.
WITHOUT_CLASSIFICATION	happens with native exceptions, should not filter those out
WITHOUT_CLASSIFICATION	happens with native exceptions, should not filter those out
WITHOUT_CLASSIFICATION	We create one extra dynamicScope on a binding so that when we 'eval "b=1", binding' the 'b' will get put into this new dynamic scope. The original scope does not see the new 'b' and successive evals with this binding will. I take it having the ability to have succesive binding evals be able to share same scope makes sense from a programmers perspective. One crappy outcome of this design is it requires Dynamic and Static scopes to be mutable for this one case.
WITHOUT_CLASSIFICATION	Populate up to shorter of calling arguments or local parameters in the block
WITHOUT_CLASSIFICATION	Populate up to shorter of calling arguments or local parameters in the block
WITHOUT_CLASSIFICATION	tc under method self under method name args
WITHOUT_CLASSIFICATION	allow it to bubble up
WITHOUT_CLASSIFICATION	IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args
WITHOUT_CLASSIFICATION	IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args
WITHOUT_CLASSIFICATION	IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args
WITHOUT_CLASSIFICATION	IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args
WITHOUT_CLASSIFICATION	IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args
WITHOUT_CLASSIFICATION	IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args
WITHOUT_CLASSIFICATION	IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args
WITHOUT_CLASSIFICATION	IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args
WITHOUT_CLASSIFICATION	IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args
WITHOUT_CLASSIFICATION	trim extension to try other options
WITHOUT_CLASSIFICATION	trim extension to try other options
WITHOUT_CLASSIFICATION	Check for a builtin first.
WITHOUT_CLASSIFICATION	end suffix iteration
WITHOUT_CLASSIFICATION	end suffix iteration
WITHOUT_CLASSIFICATION	Unfortunately, the number of digits in the exponent is not clearly defined in Ruby documentation. This is a platform/version-dependent behavior. On Linux/Mac/Cygwinnix, two digits are used. On Windows, 3 digits are used. It is desirable for JRuby to have consistent behavior, and the two digits behavior was selected. This is also in sync with "Java-native" sprintf behavior (java.util.Formatter). E or e
WITHOUT_CLASSIFICATION	Represents the the dynamic portion of scoping information. The variableValues are the values of assigned local or block variables. The staticScope identifies which sort of scope this is (block or local). Properties of Dynamic Scopes: 1. static and dynamic scopes have the same number of names to values 2. size of variables (and thus names) is determined during parsing. So those structured do not need to change FIXME: When creating dynamic scopes we sometimes accidentally pass in extra parents. This is harmless (other than wasting memory), but we should not do that. We can fix this in two ways: 1. Fix all callers 2. Check parent that is passed in and make if new instance is local, then its parent is not local
WITHOUT_CLASSIFICATION	This method handles '' patterns and delegates to fnmatch_helper for the main work.
WITHOUT_CLASSIFICATION	Peel onion...make subpatterns out of outer layer of glob and recall with each subpattern Example: foo{a{c},b}bar -> fooa{c}bar, foobbar
WITHOUT_CLASSIFICATION	double precision, native double precision, native
WITHOUT_CLASSIFICATION	64-bit number, native (as bignum)
WITHOUT_CLASSIFICATION	Next indicates to decode using native encoding format
WITHOUT_CLASSIFICATION	calculate based on a, b, c and d
WITHOUT_CLASSIFICATION	processes seem to have some peculiar locking sequences, so we need to ensure nobody is trying to close/destroy while we are
WITHOUT_CLASSIFICATION	MRI behavior: for 'Q', do not add trailing nils
WITHOUT_CLASSIFICATION	this test may be too lax but it is the same as in MRI
WITHOUT_CLASSIFICATION	exec needs to behave differently in-process, because it's technically supposed to replace the calling process. So if we're supposed to run in-process, we allow it to use the default streams and not use pumpers at all. See JRUBY-2156 and JRUBY-2154.
WITHOUT_CLASSIFICATION	snip off ruby or jruby command from list of arguments leave alone if the command is the name of a script
WITHOUT_CLASSIFICATION	The problem we trying to solve below: STDIN in Java is blocked and non-interruptible, so if we invoke read on it, we might never be able to interrupt such thread. So, we use in.available() to see if there is any input ready, and only then read it. But this approach can't tell whether the end of stream reached or not, so we might end up looping right at the end of the stream. Well, at least, we can improve the situation by checking if some input was ever available, and if so, not checking for available anymore, and just go to read.
WITHOUT_CLASSIFICATION	first digit is always printed
WITHOUT_CLASSIFICATION	an empirically derived rule: precision applies to significand length, irrespective of exponent
WITHOUT_CLASSIFICATION	an official rule, clarified: if the exponent <clarif>after adjusting for exponent form</clarif> is < -4, or the exponent <clarif>after adjusting for exponent form</clarif> is greater than the precision, use exponent form
WITHOUT_CLASSIFICATION	in this mode, '.' is always printed
WITHOUT_CLASSIFICATION	now some data...
WITHOUT_CLASSIFICATION	now some data...
WITHOUT_CLASSIFICATION	MRI behavior: validate only the unnumbered arguments
WITHOUT_CLASSIFICATION	else catch oversize below
WITHOUT_CLASSIFICATION	calculation for simple (and typical) case, adapted from sun.misc.FloatingDecimal
WITHOUT_CLASSIFICATION	switch
WITHOUT_CLASSIFICATION	utf8 lead byte
WITHOUT_CLASSIFICATION	utf8 lead byte
WITHOUT_CLASSIFICATION	utf8 lead byte
WITHOUT_CLASSIFICATION	could not get canonical path, just use given path
WITHOUT_CLASSIFICATION	We always open this rw since we can only open it r or rw.
WITHOUT_CLASSIFICATION	call chmod after we created the RandomAccesFile because otherwise, the file could be read-only
WITHOUT_CLASSIFICATION	attempt to set the permissions, if we have been passed a POSIX instance, and only if the file was created in this call.
WITHOUT_CLASSIFICATION	When reading into a heap buffer, the jvm allocates a temporary direct ByteBuffer of the requested size. To avoid allocating a huge direct buffer when doing ludicrous reads (e.g. 1G or more) we split the read up into chunks of no more than 1M
WITHOUT_CLASSIFICATION	If it is a file channel, then we can pre-allocate the output buffer to the total size of buffered + remaining bytes in file
WITHOUT_CLASSIFICATION	Cannot discern the total read length - allocate at least enough for the buffered data
WITHOUT_CLASSIFICATION	Copy what is in the buffer, if there is some buffered data
WITHOUT_CLASSIFICATION	append what we read into our buffer and allow the loop to continue
WITHOUT_CLASSIFICATION	already have some bytes buffered, just return those
WITHOUT_CLASSIFICATION	reset buffer
WITHOUT_CLASSIFICATION	Synchronize and re-check to avoid creating more than one Selector per provider
WITHOUT_CLASSIFICATION	TODO: Ruby logic is somewhat more complicated here, see comments after
WITHOUT_CLASSIFICATION	Is there something built into JRuby to do this?
WITHOUT_CLASSIFICATION	Note that WE CAN'T say the following, because of the on-the-fly conversion of Fixnum to Long assertTrue(value == valueViaValuesIterator);
WITHOUT_CLASSIFICATION	value equality result = eval("key = 3; arr = []; arr[key] = 'one'; arr.store(3, 'two'); puts arr[key]"); assertEquals("two", result);
WITHOUT_CLASSIFICATION	Uncomment the "puts" lines if you want to see more detail
WITHOUT_CLASSIFICATION	Since we don't have any other error reporting mechanism, we add the error message as an always-failing test to the test suite.
WITHOUT_CLASSIFICATION	change the thread context to include the class
DEFECT	FIXME: This is a system error based on errno
DEFECT	TODO: In MRI 1.9, an explicit check for negative length is added here. IndexError is raised when length is negative. See [ruby-core:12953] for more details. New note: This is actually under re-evaluation, see [ruby-core:17483].
DEFECT	TODO: make sure it's really safe to not to copy it
DEFECT	TODO: Numeric.new works in Ruby and it does here too. However trying to use that instance in a numeric operation should generate an ArgumentError. Doing this seems so pathological I do not see the need to fix this now.
DEFECT	FIXME: We can't guarantee this will always be a RubyIO...so the old code here is not safe
DEFECT	dump the trace and continue this is currently only here for Android, which seems to have bugs in its enumeration logic http:code.google.com/p/android/issues/detail?id=2812
DEFECT	FIXME: Add at_exit and finalizers to exit, then make exit_bang not call those.
DEFECT	TODO: need to isolate the "current" thread from class creation
DEFECT	FIXME: not correct exception
DEFECT	XXX actually only on windows...
DEFECT	Enebo : Should ~frogger\\foo work (it doesnt in linux ruby)?
DEFECT	FIXME can't use static; would interfere with other runtimes in the same JVM
DEFECT	TODO: anything threads attached to original fd are notified of the close... see rb_thread_fd_close
DEFECT	TODO: This is an freopen in MRI, this is close, but not quite the same
DEFECT	TODO: sys fail
DEFECT	TODO: Ruby locks the string here
DEFECT	TODO: Ruby locks the string here
DEFECT	FIXME: check how ruby 1.9 handles this
DEFECT	FIXME: MRI has special case for constants here
DEFECT	FIXME: Throw the right ArgumentError's if the class is missing or if it's a module.
DEFECT	ENEBO: Very wrong
DEFECT	ENEBO: Very wrong
DEFECT	synchronized method per JRUBY-1173 (unsafe Double-Checked Locking) FIXME: synchronization is still wrong in CP code
DEFECT	FIXME: I'm not sure this is right, but the old code returned the undef, which definitely isn't right...
DEFECT	FIXME: Errno descriptions from Constantine on Windows are not useful at the moment.
DEFECT	TODO: full-precision remainder is 1000x slower than MRI!
DEFECT	TODO: take BigDecimal.mode into account.
DEFECT	TODO: full-precision divmod is 1000x slower than MRI!
DEFECT	TODO: proper sign
DEFECT	FIXME: No argument seems to work for -K in MRI plus this should not siphon off additional args 'jruby -K ~/scripts/foo'. Also better error processing.
DEFECT	FIXME: -x flag not supported case 'x' : break;
DEFECT	FIXME: We are assuming that original string will be raw bytes. If -Ku is provided this will not be true, but that is ok for now. Deal with that when someone needs it.
DEFECT	FIXME: This is causing a verification error for some reason nilClass.dispatcher = callbackFactory.createDispatcher(nilClass);
DEFECT	FIXME: for some reason this dispatcher causes a VerifyError... classClass.dispatcher = callbackFactory.createDispatcher(classClass);
DEFECT	TODO: Rewriter and compiler assume case when empty expression. In MRI this is just a when. assert caseNode != null : "caseNode is not null";
DEFECT	TODO: This code effectively disables all inspection-based optimizations; none of them are 100% safe yet
DEFECT	TODO: don't require pop
DEFECT	TODO: don't require pop
DEFECT	FIXME: this should reset to what it was before
DEFECT	FIXME: if we terminate immediately, this appears to break while in method arguments we need to push a nil for the cases where we will never enter the body
DEFECT	SSS FIXME: Incorect!
DEFECT	SSS FIXME: There are also differences in variable scoping between 1.8 and 1.9 Ruby 1.8 is the buggy semantics if I understand correctly. The semantics of how this shadows other variables outside the block needs to be figured out during live var analysis.
DEFECT	SSS FIXME: This doesn't preserve original order of when clauses. We could consider preserving the order (or maybe not, since we would have to sort the constants first in any case) for outputing jump tables in certain situations. add body to map for emitting later
DEFECT	IMPORTANT: Receive the block argument before the opt and splat args This is so that the arg can be encoded as 'rest of the array'. This won't work if the block argument hasn't been received yet!
DEFECT	Are there are available data flow facts to run this problem? SSS FIXME: Silly optimization?
DEFECT	Are there are available data flow facts to run this problem? SSS FIXME: Silly optimization?
DEFECT	Walk up the scope tree right now as much as possible, to avoid run-time walking SSS FIXME: Any reason why this might break in the presence of ruby's dynamic resolution? What might break?
DEFECT	SSS FIXME: Verify semantics of this instruction
DEFECT	The following constants capture pre-known static call sites -- JRuby implementations of methods of ruby classes SSS FIXME: Note that compiler/impl/BaseBodyCompiler is using op_match2 for match() and and op_match for match2 ... Is this a bug there?
DEFECT	SSS FIXME: For constant arrays, we should never get here!
DEFECT	FIXME: This is wrong
DEFECT	FIXME: may need to broaden for IPV6 IP address strings
DEFECT	XXX Wrong, but will have to do for now
DEFECT	FIXME: This isn't quite right; it shouldn't evaluate the value if it's going to throw the error
DEFECT	FIXME: vulture daemon thread prevents finalization, find alternative approach. vulture.start();
DEFECT	If we outgrow our pushback stack then grow it (this should only happen in pretty pathological cases).
DEFECT	FIXME: Broken but behaving
DEFECT	TODO: We should use implicit nil for body, but problem (punt til later)
DEFECT	TODO: We should use implicit nil for body, but problem (punt til later)
DEFECT	FIXME: this seems like a good assertion, but it breaks compiled code and the code seems to run without it... assert currentModule != null : "Can't push null RubyClass";
DEFECT	Get value from current scope or one of its captured scopes. FIXME: block variables are not getting primed to nil so we need to null check those until we prime them properly. Also add assert back in. @param offset zero-indexed value that represents where variable lives @param depth how many captured scopes down this variable should be set @return the value here
DEFECT	FIXME: I got a bunch of NPEs when I didn't check for nulls here...HOW?!
DEFECT	MRI 1.8 behavior: this combination of flags is not allowed
DEFECT	FIXME: Arg may also be true, false, and nil and still be valid. Strangely enough, protocol conversion is not happening in Ruby on this arg?
DEFECT	TODO: Rubicon TestKernel dies without this line. A cursory glance implies we falsely set $! to nil and this sets it back to something valid. This should get fixed at the same time we address bug #1296484.
DEFECT	This is the result of a bug that left off all trailing arguments. E.g.: system "ls", "-1", "dir" would be seen as system "ls"
DEFECT	We are in eval with binding break out early FIXME: This is broken with the new backtrace stuff
DEFECT	Walk up the scope tree right now as much as possible, to avoid run-time walking SSS FIXME: Any reason why this might break in the presence of ruby's dynamic resolution? What might break?
DEFECT	This was a getOpt with one mandatory arg, but it did not work so I am parsing it for now.
DEFECT	FIXME: I doubt any of the constants referenced in this method are ever redefined -- should compare to the known values, rather than do an expensive constant lookup.
DEFECT	SSS FIXME: Why is the for node being built using closures and not as a "regular" loop with branches? This has implications on inlining, implementations of closures, next, break, etc. When "each" and the block it consumes are inlined together in the caller, the "loop" from the each should become a normal loop without any closures. But, in this implementation of for, we replace one closure with another!
DEFECT	TODO: full-precision remainder is 1000x slower than MRI!
DEFECT	TODO: Adding implicit nils caused multiple problems in compiler -- revist after landing assert bodyNode != null : "bodyNode is not null";
DEFECT	FIXME: It may be possible to killpg on systems which support it. POSIX library needs to tell whether a particular method works or not
DEFECT	FIXME: if we terminate immediately, this appears to break while in method arguments we need to push a nil for the cases where we will never enter the body
DEFECT	zero args with block FIXME: omit args index; subtract one from normal block index
DEFECT	TODO: don't require pop
DEFECT	TODO: don't require pop
DEFECT	TODO: don't require pop
DEFECT	TODO: don't require pop
DEFECT	TODO: don't require pop
DEFECT	TODO: don't require pop
DEFECT	TODO: don't require pop
DEFECT	TODO: don't require pop
DEFECT	TODO: don't require pop
DEFECT	TODO: don't require pop
DEFECT	TODO: don't require pop
DEFECT	TODO: don't require pop
DEFECT	TODO: don't require pop
DEFECT	TODO: don't require pop
DEFECT	TODO: don't require pop
DEFECT	TODO: don't require pop
DEFECT	TODO: don't require pop
DEFECT	TODO: don't require pop
DEFECT	TODO: don't require pop
DEFECT	TODO: don't require pop
DEFECT	TODO: don't require pop
DEFECT	TODO: don't require pop
DEFECT	TODO: don't require pop
DEFECT	TODO: don't require pop
DEFECT	TODO: don't require pop
DEFECT	TODO: don't require pop
DEFECT	TODO: don't require pop
DEFECT	TODO: don't require pop
DEFECT	TODO: don't require pop
DEFECT	TODO: don't require pop
DEFECT	TODO: don't require pop
DEFECT	TODO: don't require pop
DEFECT	TODO: don't require pop
DEFECT	TODO: don't require pop
DEFECT	TODO: don't require pop
DEFECT	TODO: don't require pop
DEFECT	TODO: don't require pop
DEFECT	TODO: don't require pop
DEFECT	TODO: don't require pop
DEFECT	TODO: don't require pop
DEFECT	TODO: don't require pop
DEFECT	TODO: don't require pop
DEFECT	TODO: don't require pop
DEFECT	TODO: don't require pop
DEFECT	TODO: don't require pop
DEFECT	TODO: don't require pop
DEFECT	TODO: don't require pop
DEFECT	TODO: don't require pop
DEFECT	TODO: don't require pop
DEFECT	TODO: don't require pop
DEFECT	TODO: don't require pop
DEFECT	TODO: don't require pop
DEFECT	TODO: don't require pop
DEFECT	TODO: don't require pop
DEFECT	TODO: don't require pop
DEFECT	TODO: don't require pop
DEFECT	TODO: don't require pop
DEFECT	TODO: don't require pop
DEFECT	TODO: don't require pop
DEFECT	TODO: don't require pop
DEFECT	TODO: don't require pop
DEFECT	TODO: don't require pop
DEFECT	TODO: don't require pop
DEFECT	TODO: don't require pop
DEFECT	TODO: don't require pop
DEFECT	TODO: don't require pop
DEFECT	FIXME: Broken but behaving
DEFECT	TODO: we loose encoding information here, fix it
DEFECT	TODO: don't require pop
DEFECT	TODO: don't require pop
DEFECT	TODO: don't require pop
DEFECT	TODO: don't require pop
DEFECT	TODO: don't require pop
DEFECT	TODO: don't require pop
DEFECT	FIXME: This isn't quite right; it shouldn't evaluate the value if it's going to throw the error
DEFECT	vulture thread will periodically expunge dead entries. entries are also expunged during 'put' operations; this is designed to cover the case where many objects are created initially, followed by limited put activity. FIXME: DISABLED (below) pending resolution of finalization issue
DEFECT	TODO: We should use implicit nil for body, but problem (punt til later)
DEFECT	TODO: We should use implicit nil for body, but problem (punt til later)
DEFECT	Get value from current scope or one of its captured scopes. FIXME: block variables are not getting primed to nil so we need to null check those until we prime them properly. Also add assert back in. @param offset zero-indexed value that represents where variable lives @param depth how many captured scopes down this variable should be set @return the value here
DEFECT	Get value from current scope or one of its captured scopes. FIXME: block variables are not getting primed to nil so we need to null check those until we prime them properly. Also add assert back in. @param offset zero-indexed value that represents where variable lives @param depth how many captured scopes down this variable should be set @return the value here
DEFECT	Get value from current scope or one of its captured scopes. FIXME: block variables are not getting primed to nil so we need to null check those until we prime them properly. Also add assert back in. @param offset zero-indexed value that represents where variable lives @param depth how many captured scopes down this variable should be set @return the value here
DEFECT	Get value from current scope or one of its captured scopes. FIXME: block variables are not getting primed to nil so we need to null check those until we prime them properly. Also add assert back in. @param offset zero-indexed value that represents where variable lives @param depth how many captured scopes down this variable should be set @return the value here
DEFECT	Get value from current scope or one of its captured scopes. FIXME: block variables are not getting primed to nil so we need to null check those until we prime them properly. Also add assert back in. @param offset zero-indexed value that represents where variable lives @param depth how many captured scopes down this variable should be set @return the value here
DEFECT	Get value from current scope or one of its captured scopes. FIXME: block variables are not getting primed to nil so we need to null check those until we prime them properly. Also add assert back in. @param offset zero-indexed value that represents where variable lives @param depth how many captured scopes down this variable should be set @return the value here
DEFECT	TODO: We overflow on large files...We could increase to long to limit this, but then the impl gets more involved since java io APIs based on int (means we have to chunk up a long into a series of int ops).
WITHOUT_CLASSIFICATION	@see java.lang.Object#hashCode()
WITHOUT_CLASSIFICATION	Is this item a copy? @see java.lang.Object#equals(java.lang.Object)
WITHOUT_CLASSIFICATION	once one criticism is found, exit
WITHOUT_CLASSIFICATION	constructor
WITHOUT_CLASSIFICATION	instance variables
WITHOUT_CLASSIFICATION	user interface
WITHOUT_CLASSIFICATION	criticism control
WITHOUT_CLASSIFICATION	issue resolutions
WITHOUT_CLASSIFICATION	criticism control
WITHOUT_CLASSIFICATION	critiquing
WITHOUT_CLASSIFICATION	design feedback
WITHOUT_CLASSIFICATION	the critiquing thread should wait if disabled.
WITHOUT_CLASSIFICATION	why?
WITHOUT_CLASSIFICATION	Performs critique asap. @see java.beans.PropertyChangeListener#propertyChange(java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	@see java.lang.Object#hashCode()
WITHOUT_CLASSIFICATION	instance variables
WITHOUT_CLASSIFICATION	critiquing
WITHOUT_CLASSIFICATION	constructor and singeton methods
WITHOUT_CLASSIFICATION	why?
WITHOUT_CLASSIFICATION	&& getAutoCritique()
WITHOUT_CLASSIFICATION	Don't clear everything here, breaks loading!
WITHOUT_CLASSIFICATION	v71
WITHOUT_CLASSIFICATION	Don't let a transient error kill the thread
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	clear out queues! @@@
WITHOUT_CLASSIFICATION	decision model listener
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	end class ChildGenDMElements
WITHOUT_CLASSIFICATION	accessors
WITHOUT_CLASSIFICATION	constants
WITHOUT_CLASSIFICATION	instance variables
WITHOUT_CLASSIFICATION	user interface
WITHOUT_CLASSIFICATION	issue resolution
WITHOUT_CLASSIFICATION	TODO: This should be the name of the designer that created the todoitem, not the current username!
WITHOUT_CLASSIFICATION	LOG.log(Level.FINE, "predicate() returned true, creating ToDoItem");
WITHOUT_CLASSIFICATION	corrective automations, wizards
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	constructor
WITHOUT_CLASSIFICATION	instance variables
WITHOUT_CLASSIFICATION	critiquing
WITHOUT_CLASSIFICATION	criticism control
WITHOUT_CLASSIFICATION	TODO: Make use of the constants defined in the ToDoItem class!
WITHOUT_CLASSIFICATION	if wizClass is not a subclass of Wizard, print a warning
WITHOUT_CLASSIFICATION	return getCriticName();
WITHOUT_CLASSIFICATION	criticism control
WITHOUT_CLASSIFICATION	design feedback
WITHOUT_CLASSIFICATION	issue resolution
WITHOUT_CLASSIFICATION	end interface Poster
WITHOUT_CLASSIFICATION	constants
WITHOUT_CLASSIFICATION	instance variables
WITHOUT_CLASSIFICATION	LOG.log(Level.FINE, "Adding resolution for: " + c.getClass() + " " + canCreate);
WITHOUT_CLASSIFICATION	Use this for fast fail instead. Sacrificed for complete fail. d00mst throw new UnresolvableException( "Unable to create ItemUID for class: " + obj.getClass());
WITHOUT_CLASSIFICATION	TODO: values
WITHOUT_CLASSIFICATION	end class Goal
WITHOUT_CLASSIFICATION	check if we are using a supported java version
WITHOUT_CLASSIFICATION	implements java.io.Serialization
WITHOUT_CLASSIFICATION	end class CurDecisionCM
WITHOUT_CLASSIFICATION	end class StandardCM
WITHOUT_CLASSIFICATION	end class CompositeCM
WITHOUT_CLASSIFICATION	end class EnabledCM
WITHOUT_CLASSIFICATION	end class NotSnoozedCM
WITHOUT_CLASSIFICATION	end class AndCM
WITHOUT_CLASSIFICATION	end class DesignGoalsCM
WITHOUT_CLASSIFICATION	end class OrCM
WITHOUT_CLASSIFICATION	Register our last chance exception handler
WITHOUT_CLASSIFICATION	Get the splash screen up as early as possible
WITHOUT_CLASSIFICATION	We have to do this to set the LAF for the splash screen
WITHOUT_CLASSIFICATION	main initialization happens here
WITHOUT_CLASSIFICATION	ToolTipManager.sharedInstance().setInitialDelay(500);
WITHOUT_CLASSIFICATION	Force the configuration to load
WITHOUT_CLASSIFICATION	Synchronize the startup directory
WITHOUT_CLASSIFICATION	then, print out some version info for debuggers...
WITHOUT_CLASSIFICATION	Set the i18n locale
WITHOUT_CLASSIFICATION	set properties for application behaviour
WITHOUT_CLASSIFICATION	now, let's print it
WITHOUT_CLASSIFICATION	nothing else to do (?)
WITHOUT_CLASSIFICATION	We MUST have a project open before continuing. Create if necessary
WITHOUT_CLASSIFICATION	initPreinitialize(); initializeSubsystems(new SimpleTimer(), null); ArgoFrame.getInstance().setVisible(true);
WITHOUT_CLASSIFICATION	Perform one command.
WITHOUT_CLASSIFICATION	Now create a new object.
WITHOUT_CLASSIFICATION	initLogging();
WITHOUT_CLASSIFICATION	On uniprocessors wait until we're sure the splash screen has been painted so that we aren't competing for resources
WITHOUT_CLASSIFICATION	make the projectbrowser
WITHOUT_CLASSIFICATION	end Class Main
WITHOUT_CLASSIFICATION	end class PostLoad
WITHOUT_CLASSIFICATION	We don't care if optional modules aren't found.
WITHOUT_CLASSIFICATION	We don't care if optional modules aren't found.
WITHOUT_CLASSIFICATION	end class LoadModules
WITHOUT_CLASSIFICATION	All tabs are added at the end, except a TabToDoTarget:
WITHOUT_CLASSIFICATION	End interface GUISettingsTabInterface
WITHOUT_CLASSIFICATION	skip pos, we know it's not a valid char from above
WITHOUT_CLASSIFICATION	accessors
WITHOUT_CLASSIFICATION	Store in the user configuration, and let gef know also.
WITHOUT_CLASSIFICATION	Use the configuration if it exists, otherwise use what gef thinks.
WITHOUT_CLASSIFICATION	constructor
WITHOUT_CLASSIFICATION	actions
WITHOUT_CLASSIFICATION	failed to clone
WITHOUT_CLASSIFICATION	Remark: The code in ProjectSettings.init() currently presumes that nobody is using this event.
WITHOUT_CLASSIFICATION	NOTE: This is package scope to force callers to use ResourceLoaderWrapper
WITHOUT_CLASSIFICATION	Strip all characters out of <var>s</var> that could not be part of a valid Java identifier. Return either the given string (if all characters were valid), or a new string with all invalid characters stripped out. This allows automatic conversion of strings containing punctuation and spaces to a resource name that can be looked up.
WITHOUT_CLASSIFICATION	end class ResourceLoader
WITHOUT_CLASSIFICATION	the validity checking thread should wait if disabled.
WITHOUT_CLASSIFICATION	If element has been deleted, it's no longer valid
WITHOUT_CLASSIFICATION	History.TheHistory.addItemResolution(item, "no longer valid"); ((ToDoItem)item).resolve("no longer valid"); notifyObservers("removeElement", item);
WITHOUT_CLASSIFICATION	Notifications and Updates
WITHOUT_CLASSIFICATION	skip any identical items already on the list
WITHOUT_CLASSIFICATION	cat.debug("Checking for inhibitors " + rc);
WITHOUT_CLASSIFICATION	History.TheHistory.addItemResolution(item, reason);
WITHOUT_CLASSIFICATION	Lazily create the event:
WITHOUT_CLASSIFICATION	Lazily create the event:
WITHOUT_CLASSIFICATION	Lazily create the event:
WITHOUT_CLASSIFICATION	Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	accessors
WITHOUT_CLASSIFICATION	Do nothing
WITHOUT_CLASSIFICATION	end class ArgoJMenu
WITHOUT_CLASSIFICATION	Block added by BobTarling 8-Jan-2002 Set the checkbox on or off according to the SELECTED value of the action. If no SELECTED value is found then this defaults to true in order to remain compatible with previous versions of this code.
WITHOUT_CLASSIFICATION	EventListenerList.add() is synchronized, so we don't need to synchronize ourselves
WITHOUT_CLASSIFICATION	End of block
WITHOUT_CLASSIFICATION	end interface Clarifier
WITHOUT_CLASSIFICATION	Set the checkbox on or off according to the SELECTED value of the action. If no SELECTED value is found then this defaults to true.
WITHOUT_CLASSIFICATION	Extra care to be taken since allOffenders can be reset while this method is running.
WITHOUT_CLASSIFICATION	these are blue in Metal Default Theme
WITHOUT_CLASSIFICATION	Cached expansions
WITHOUT_CLASSIFICATION	these are gray in Metal Default Theme
WITHOUT_CLASSIFICATION	Extra care to be taken since allPosters can be reset while this method is running.
WITHOUT_CLASSIFICATION	set the icon for this poster
WITHOUT_CLASSIFICATION	EventListenerList.remove() is synchronized, so we don't need to synchronize ourselves
WITHOUT_CLASSIFICATION	MVW
WITHOUT_CLASSIFICATION	event related stuff
WITHOUT_CLASSIFICATION	instance variables
WITHOUT_CLASSIFICATION	Process the listeners last to first, notifying those that are interested in this event
WITHOUT_CLASSIFICATION	Process the listeners last to first, notifying those that are interested in this event
WITHOUT_CLASSIFICATION	Process the listeners last to first, notifying those that are interested in this event
WITHOUT_CLASSIFICATION	static variables
WITHOUT_CLASSIFICATION	@see java.lang.Object#hashCode()
WITHOUT_CLASSIFICATION	@see java.lang.Object#equals(java.lang.Object)
WITHOUT_CLASSIFICATION	Enable buttons when selection made. @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.ListSelectionListener#valueChanged(javax.swing.event.ListSelectionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ComponentListener#componentShown(java.awt.event.ComponentEvent)
WITHOUT_CLASSIFICATION	Do nothing
WITHOUT_CLASSIFICATION	accessors
WITHOUT_CLASSIFICATION	end class CheckManager
WITHOUT_CLASSIFICATION	Now lets search
WITHOUT_CLASSIFICATION	end class TabChecklist
WITHOUT_CLASSIFICATION	We found it!
WITHOUT_CLASSIFICATION	event handling
WITHOUT_CLASSIFICATION	Enter the class to speed up the next search.
WITHOUT_CLASSIFICATION	Stop updating model when we're not visible
WITHOUT_CLASSIFICATION	Update our model with our saved target
WITHOUT_CLASSIFICATION	accessors
WITHOUT_CLASSIFICATION	instance varables
WITHOUT_CLASSIFICATION	constructor
WITHOUT_CLASSIFICATION	TableModel implemetation
WITHOUT_CLASSIFICATION	accessors
WITHOUT_CLASSIFICATION	constants
WITHOUT_CLASSIFICATION	instance variables
WITHOUT_CLASSIFICATION	criticism control
WITHOUT_CLASSIFICATION	event handlers
WITHOUT_CLASSIFICATION	static accessors
WITHOUT_CLASSIFICATION	instance varables
WITHOUT_CLASSIFICATION	constructor
WITHOUT_CLASSIFICATION	accessors
WITHOUT_CLASSIFICATION	TableModel implemetation
WITHOUT_CLASSIFICATION	in the past, 0 milliseconds after January 1, 1970, 00:00:00 GMT.
WITHOUT_CLASSIFICATION	in the past, 0 milliseconds after January 1, 1970, 00:00:00 GMT.
WITHOUT_CLASSIFICATION	by default, double the snooze interval each time
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	end class SnoozeOrder
WITHOUT_CLASSIFICATION	instance variables
WITHOUT_CLASSIFICATION	wizard actions
WITHOUT_CLASSIFICATION	This changes the complete structure of the table, so we need to set the column widths again.
WITHOUT_CLASSIFICATION	TODO: do all following steps TODO: resolve item from ToDoList
WITHOUT_CLASSIFICATION	end class ActionOpenCritics
WITHOUT_CLASSIFICATION	Dialog box to list all critics and allow editing of some of their properties. <p> TODO: supported goals, critic network.
WITHOUT_CLASSIFICATION	Set initial sorting on Critic Headline
WITHOUT_CLASSIFICATION	Critics Table
WITHOUT_CLASSIFICATION	instead of making a new list, decrement index, return when found and index == 0
WITHOUT_CLASSIFICATION	Critic Details panel
WITHOUT_CLASSIFICATION	case 2
WITHOUT_CLASSIFICATION	TableModel implemetation
WITHOUT_CLASSIFICATION	TODO:
WITHOUT_CLASSIFICATION	no maximum set, so it will stretch...
WITHOUT_CLASSIFICATION	and for advanced mode:
WITHOUT_CLASSIFICATION	@see javax.swing.tree.TreeModel#valueForPathChanged( javax.swing.tree.TreePath, java.lang.Object)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.TreeModel#addTreeModelListener(javax.swing.event.TreeModelListener)
WITHOUT_CLASSIFICATION	@see javax.swing.event.ChangeListener#stateChanged(javax.swing.event.ChangeEvent)
WITHOUT_CLASSIFICATION	instance variables
WITHOUT_CLASSIFICATION	event handlers
WITHOUT_CLASSIFICATION	Set tableSP's preferred height to 0 so that details height is used in pack()
WITHOUT_CLASSIFICATION	@see javax.swing.tree.TreeModel#isLeaf(java.lang.Object)
WITHOUT_CLASSIFICATION	c.gridy = 0; c.gridx = 0; JLabel priLabel = new JLabel("Priority:"); gb.setConstraints(priLabel, c); _mainPanel.add(priLabel);
WITHOUT_CLASSIFICATION	fireTreeNodesChanged(this, path, childIndices, children);
WITHOUT_CLASSIFICATION	c.gridy = 0; c.gridx = 1; JLabel offLabel = new JLabel("Off"); gb.setConstraints(offLabel, c); _mainPanel.add(offLabel);
WITHOUT_CLASSIFICATION	c.gridy = 0; c.gridx = 2; JLabel lowLabel = new JLabel("Low"); gb.setConstraints(lowLabel, c); _mainPanel.add(lowLabel);
WITHOUT_CLASSIFICATION	c.gridy = 0; c.gridx = 3; JLabel twoLabel = new JLabel("ad"); gb.setConstraints(twoLabel, c); _mainPanel.add(twoLabel);
WITHOUT_CLASSIFICATION	c.gridy = 0; c.gridx = 4; JLabel threeLabel = new JLabel("asd"); gb.setConstraints(threeLabel, c); _mainPanel.add(threeLabel);
WITHOUT_CLASSIFICATION	c.gridy = 0; c.gridx = 5; JLabel fourLabel = new JLabel("asd"); gb.setConstraints(fourLabel, c); _mainPanel.add(fourLabel);
WITHOUT_CLASSIFICATION	c.gridy = 0; c.gridx = 6; JLabel highLabel = new JLabel("High"); gb.setConstraints(highLabel, c); _mainPanel.add(highLabel);
WITHOUT_CLASSIFICATION	------------ other methods ------------
WITHOUT_CLASSIFICATION	@see javax.swing.tree.TreeCellRenderer#getTreeCellRendererComponent( javax.swing.JTree, java.lang.Object, boolean, boolean, boolean, int, boolean)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.TreeModel#getChild(java.lang.Object, int)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.TreeModel#getChildCount(java.lang.Object)
WITHOUT_CLASSIFICATION	ToDoListListener implementation
WITHOUT_CLASSIFICATION	fireTreeNodesChanged(this, path, childIndices, children);
WITHOUT_CLASSIFICATION	TreeModel implementation - todo specific stuff
WITHOUT_CLASSIFICATION	class variables
WITHOUT_CLASSIFICATION	general icons for poster
WITHOUT_CLASSIFICATION	specialised icons for designer
WITHOUT_CLASSIFICATION	TreeCellRenderer implementation
WITHOUT_CLASSIFICATION	end class ToDoTreeRenderer
WITHOUT_CLASSIFICATION	public static Decision decisionUNCATEGORIZED = new Decision("Uncategorized", 1);
WITHOUT_CLASSIFICATION	end class ToDoByDecision
WITHOUT_CLASSIFICATION	instance variables
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	TreeModel implementation
WITHOUT_CLASSIFICATION	instead of making a new list, decrement index, return when found and index == 0
WITHOUT_CLASSIFICATION	store wizard?
WITHOUT_CLASSIFICATION	c.gridx = 1; c.gridy = 3; c.gridheight = GridBagConstraints.REMAINDER; SpacerPanel spacer2 = new SpacerPanel(); gb.setConstraints(spacer2, c); _mainPanel.add(spacer2);
WITHOUT_CLASSIFICATION	image.setMargin(new Insets(0, 0, 0, 0));
WITHOUT_CLASSIFICATION	image.setMargin(new Insets(0, 0, 0, 0));
WITHOUT_CLASSIFICATION	image.setMargin(new Insets(0, 0, 0, 0));
WITHOUT_CLASSIFICATION	end class WizStepTextField
WITHOUT_CLASSIFICATION	store wizard?
WITHOUT_CLASSIFICATION	store wizard?
WITHOUT_CLASSIFICATION	end class WizDescription
WITHOUT_CLASSIFICATION	end class WizStepCue
WITHOUT_CLASSIFICATION	stop/start creating more critics
WITHOUT_CLASSIFICATION	end class ActionGoToCritique
WITHOUT_CLASSIFICATION	Correct lazy initialization of static field without further updates:
WITHOUT_CLASSIFICATION	does nothing
WITHOUT_CLASSIFICATION	end class ActionAutoCritique
WITHOUT_CLASSIFICATION	stop/start cleaning up invalid TodoItems.
WITHOUT_CLASSIFICATION	@see javax.swing.tree.TreeModel#isLeaf(java.lang.Object)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.TreeModel#getChildCount(java.lang.Object)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.TreeModel#getIndexOfChild( java.lang.Object, java.lang.Object)
WITHOUT_CLASSIFICATION	constants
WITHOUT_CLASSIFICATION	instance variables
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	TreeModel implementation
WITHOUT_CLASSIFICATION	ToDoListListener implementation
WITHOUT_CLASSIFICATION	fireTreeNodesChanged(this, path, childIndices, children);
WITHOUT_CLASSIFICATION	otherwise parent must be an offending design material
WITHOUT_CLASSIFICATION	end class ActionOpenGoals
WITHOUT_CLASSIFICATION	@see javax.swing.tree.TreeModel#isLeaf(java.lang.Object)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.TreeModel#isLeaf(java.lang.Object)
WITHOUT_CLASSIFICATION	? inform()
WITHOUT_CLASSIFICATION	@see java.awt.event.ComponentListener#componentShown(java.awt.event.ComponentEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ComponentListener#componentHidden(java.awt.event.ComponentEvent)
WITHOUT_CLASSIFICATION	Do nothing
WITHOUT_CLASSIFICATION	Update our model with our saved target
WITHOUT_CLASSIFICATION	Stop updating model when we're not visible
WITHOUT_CLASSIFICATION	TreeModel implementation
WITHOUT_CLASSIFICATION	instead of making a new list, decrement index, return when found and index == 0
WITHOUT_CLASSIFICATION	image.setMargin(new Insets(0, 0, 0, 0));
WITHOUT_CLASSIFICATION	store wizard?
WITHOUT_CLASSIFICATION	the target of description will always be set directly by tabtodo
WITHOUT_CLASSIFICATION	Request that we be made visible if we're not? topLevelTabbedPane.setSelectedComponent(t);
WITHOUT_CLASSIFICATION	------------- MouseListener implementation ---------------
WITHOUT_CLASSIFICATION	end class WizStepConfirm
WITHOUT_CLASSIFICATION	next line coming from projectbrowser
WITHOUT_CLASSIFICATION	------------ ItemListener implementation ----------------------
WITHOUT_CLASSIFICATION	-------------TreeSelectionListener implementation -----------
WITHOUT_CLASSIFICATION	@see javax.swing.tree.TreeModel#isLeaf(java.lang.Object)
WITHOUT_CLASSIFICATION	not needed in UML 1.x
WITHOUT_CLASSIFICATION	constructors
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.ChangeListener#stateChanged(javax.swing.event.ChangeEvent)
WITHOUT_CLASSIFICATION	Prepare for typing in rationale field when window is opened. @see java.awt.Component#setVisible(boolean)
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	event handlers
WITHOUT_CLASSIFICATION	ToDoListListener implementation
WITHOUT_CLASSIFICATION	ToDoListListener implementation
WITHOUT_CLASSIFICATION	keep nagging until the user solves the problem: This seems a nice way to nag:
WITHOUT_CLASSIFICATION	Only interrupt for one todoitem
WITHOUT_CLASSIFICATION	end class ActionOpenDecisions
WITHOUT_CLASSIFICATION	blinks?
WITHOUT_CLASSIFICATION	end class ToDoByOffender
WITHOUT_CLASSIFICATION	add the perspectives to a list for the combobox
WITHOUT_CLASSIFICATION	decSlide.setPaintLabels(true);
WITHOUT_CLASSIFICATION	constants instance variables
WITHOUT_CLASSIFICATION	fireTreeNodesChanged(this, path, childIndices, children);
WITHOUT_CLASSIFICATION	TODO: This looks O(n^2)
WITHOUT_CLASSIFICATION	TODO: make a new history item
WITHOUT_CLASSIFICATION	cat.debug("bad decision");
WITHOUT_CLASSIFICATION	cat.debug("bad goal");
WITHOUT_CLASSIFICATION	end class DismissToDoItemDialog
WITHOUT_CLASSIFICATION	constructors
WITHOUT_CLASSIFICATION	@see javax.swing.tree.TreeModel#getChild(java.lang.Object, int)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.TreeModel#getChildCount(java.lang.Object)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.TreeModel#getIndexOfChild( java.lang.Object, java.lang.Object)
WITHOUT_CLASSIFICATION	finally, apply profile configuration to the model
WITHOUT_CLASSIFICATION	@see javax.swing.tree.TreeModel#valueForPathChanged( javax.swing.tree.TreePath, java.lang.Object)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.TreeModel#addTreeModelListener(javax.swing.event.TreeModelListener)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.TreeModel#removeTreeModelListener(javax.swing.event.TreeModelListener)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.DocumentListener#insertUpdate(javax.swing.event.DocumentEvent)
WITHOUT_CLASSIFICATION	instance variables
WITHOUT_CLASSIFICATION	event handlers
WITHOUT_CLASSIFICATION	store wizard?
WITHOUT_CLASSIFICATION	TreeModel implementation
WITHOUT_CLASSIFICATION	ToDoListListener implementation
WITHOUT_CLASSIFICATION	ToDoListListener implementation
WITHOUT_CLASSIFICATION	fireTreeNodesChanged(this, path, childIndices, children);
WITHOUT_CLASSIFICATION	image.setMargin(new Insets(0, 0, 0, 0));
WITHOUT_CLASSIFICATION	otherwise parent must be an offending design material
WITHOUT_CLASSIFICATION	@see javax.swing.tree.TreeModel#isLeaf(java.lang.Object)
WITHOUT_CLASSIFICATION	end class WizStep
WITHOUT_CLASSIFICATION	accessors
WITHOUT_CLASSIFICATION	actions
WITHOUT_CLASSIFICATION	This is done for compatibility with previous version: Move the argo.user.properties written before 0.25.4 to the new location, if it exists.
WITHOUT_CLASSIFICATION	Don't allow instantiation
WITHOUT_CLASSIFICATION	ActionListener implementation
WITHOUT_CLASSIFICATION	DocumentListener implementation
WITHOUT_CLASSIFICATION	TargetListener implementation
WITHOUT_CLASSIFICATION	copy to new file and let the regular load code do the actual load
WITHOUT_CLASSIFICATION	Instance variables
WITHOUT_CLASSIFICATION	end class ConfigurationFactory
WITHOUT_CLASSIFICATION	LOG.log(Level.INFO, "Configuration saved to {0}\n", url);
WITHOUT_CLASSIFICATION	check for the older properties file and copy it over if possible
WITHOUT_CLASSIFICATION	Only allow one load
WITHOUT_CLASSIFICATION	add the first point twice
WITHOUT_CLASSIFICATION	add the first point twice
WITHOUT_CLASSIFICATION	Scale everything up
WITHOUT_CLASSIFICATION	Initialize band buffer bounds
WITHOUT_CLASSIFICATION	LOG.log(Level.FINE, "getData Rectangle = " + clip);
WITHOUT_CLASSIFICATION	LOG.log(Level.FINE, "getData returning raster = " + translatedRaster);
WITHOUT_CLASSIFICATION	Create a new graphics context so we start with fresh transforms
WITHOUT_CLASSIFICATION	Fill with our background color
WITHOUT_CLASSIFICATION	Translate & clip graphic to match region of interest
WITHOUT_CLASSIFICATION	Ask GEF to print a band of the diagram (translated & clipped)
WITHOUT_CLASSIFICATION	Make sure it isn't caching anything that should be written
WITHOUT_CLASSIFICATION	assert !initialized; GUITestActionOpenProject fails over this...
WITHOUT_CLASSIFICATION	Retain the original one:
WITHOUT_CLASSIFICATION	Retain the original one:
WITHOUT_CLASSIFICATION	Internal initialization method. Handles initialization which is common to both public methods.
WITHOUT_CLASSIFICATION	This is needed for the JUnit tests. Otherwise a "assert initialized" would suffice.
WITHOUT_CLASSIFICATION	This is needed for the JUnit tests. Otherwise a "assert initialized" would suffice.
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	Flag the command as to whether it is first in a chain
WITHOUT_CLASSIFICATION	end class DelayedChangeNotify
WITHOUT_CLASSIFICATION	Default diagram settings
WITHOUT_CLASSIFICATION	Default notation settings
WITHOUT_CLASSIFICATION	Generation preferences:
WITHOUT_CLASSIFICATION	The next one defaults to TRUE, to stay compatible with older ArgoUML versions that did not have this setting:
WITHOUT_CLASSIFICATION	The next ones defaults to TRUE, to stay compatible with older ArgoUML versions that did not have this setting:
WITHOUT_CLASSIFICATION	This Notation is not available!
WITHOUT_CLASSIFICATION	Always put the model at the top
WITHOUT_CLASSIFICATION	otherwise add the diagram at the start
WITHOUT_CLASSIFICATION	otherwise add the diagram at the start
WITHOUT_CLASSIFICATION	finally, apply profile configuration to the model
WITHOUT_CLASSIFICATION	uri = PersistenceManager.getInstance().fixUriExtension(theProjectUri);
WITHOUT_CLASSIFICATION	Register with the save action with other subsystems so that any changes in those subsystems will enable the save button/menu item etc.
WITHOUT_CLASSIFICATION	not needed in UML 1.x
WITHOUT_CLASSIFICATION	end interface DelayedVChangeListener
WITHOUT_CLASSIFICATION	a profile initially has no applied profiles, we go bottom-up
WITHOUT_CLASSIFICATION	Skip leading underscores:
WITHOUT_CLASSIFICATION	TODO: should just be the directory to write.
WITHOUT_CLASSIFICATION	The preferences with project-scope:
WITHOUT_CLASSIFICATION	The ArgoUML version with which this project was last saved:
WITHOUT_CLASSIFICATION	if diagram added successfully, add the member too
WITHOUT_CLASSIFICATION	Adding a todo member removes any existing one.
WITHOUT_CLASSIFICATION	got past the veto, add the member
WITHOUT_CLASSIFICATION	send indeterminate new value instead of making copy of vector
WITHOUT_CLASSIFICATION	Remove the dependent modelelements, such as the statemachine for a statechartdiagram:
WITHOUT_CLASSIFICATION	Hence, a diagram name was saved in the project that we are loading. So, we use this name to retrieve any matching diagram.
WITHOUT_CLASSIFICATION	Use the first diagram.
WITHOUT_CLASSIFICATION	If there was no diagram at all, then use the (first) UML model.
WITHOUT_CLASSIFICATION	we don't need this HashMap anymore so free up the memory
WITHOUT_CLASSIFICATION	Can not delete the model
WITHOUT_CLASSIFICATION	Can not delete the profile
WITHOUT_CLASSIFICATION	@see java.lang.Object#finalize()
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#getColumnCount()
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#getColumnName(int)
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#getRowCount()
WITHOUT_CLASSIFICATION	Make the topmost diagram (that is not the one being deleted) current.
WITHOUT_CLASSIFICATION	trash related methods
WITHOUT_CLASSIFICATION	Fire an event some anyone who cares about diagrams being removed can listen for it
WITHOUT_CLASSIFICATION	If we delete a FigEdge or FigNode we actually call this method with the owner not the Fig itself. However, this method is called by ActionDeleteModelElements for primitive Figs (without owner).
WITHOUT_CLASSIFICATION	there's just one ProfileConfiguration in a project and there's no other way to add another one
WITHOUT_CLASSIFICATION	Tab for the settings dialog that makes it possible to select the modules that are to be enabled. TODO: Header for the table. @author Linus Tolke
WITHOUT_CLASSIFICATION	Do nothing - these buttons are not shown.
WITHOUT_CLASSIFICATION	Access methods for program infrastructure.
WITHOUT_CLASSIFICATION	@see java.io.FileFilter#accept(java.io.File)
WITHOUT_CLASSIFICATION	The creation of the actual GUI elements is deferred until they are actually needed. Otherwize we have problems with the initialization.
WITHOUT_CLASSIFICATION	Do nothing! The next time we refresh, we will fetch the values again.
WITHOUT_CLASSIFICATION	Access methods for modules that need to query about the status of other modules.
WITHOUT_CLASSIFICATION	Access methods for the GUI that the user uses to enable and disable modules.
WITHOUT_CLASSIFICATION	Access methods for the program infrastructure
WITHOUT_CLASSIFICATION	Catch all exceptions and errors, however severe
WITHOUT_CLASSIFICATION	TODO: huntForModulesFromJavaWebStart();
WITHOUT_CLASSIFICATION	Load modules specified by a System property. Modules specified by a system property is for running modules from within Eclipse and running from Java Web Start.
WITHOUT_CLASSIFICATION	Try-catch only the JarFile instantiation so we don't accidentally mask anything in ArgoJarClassLoader or processJarFile.
WITHOUT_CLASSIFICATION	We expect all extensions to have a manifest even though we can operate without one if necessary.
WITHOUT_CLASSIFICATION	Look for our specification
WITHOUT_CLASSIFICATION	Add this to search list for I18N properties (Done for both modules & localized property file sets)
WITHOUT_CLASSIFICATION	We havn't found it. Add it.
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	Utility function to unregister all listeners registered through addElementListener. @see #addElementListener(Object, String)
WITHOUT_CLASSIFICATION	Called after the notation default property gets changed. @see java.beans.PropertyChangeListener#propertyChange(java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	e.g. for an operation: if pce.getSource() == modelElement && event.propertyName = "parameter" if event instanceof AddAssociationEvent Get the parameter instance from event.newValue Call model to add listener on parameter on change of "name", "type" else if event instanceof RemoveAssociationEvent Get the parameter instance from event.oldValue Call model to remove listener on parameter on change of "name", "type" end if end if
WITHOUT_CLASSIFICATION	The following check should have been satisfied before we instantiated the module, but double check again
WITHOUT_CLASSIFICATION	If it didn't have a loadable module class and it doesn't look like a localized property set, warn the user that something funny is in their extension directory
WITHOUT_CLASSIFICATION	Since there is no way to compare the objects as equal, we have to search through the list at this point.
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	Remark: There is also a java-like notation, which is also part of ArgoUML core distribution.
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	This Notation is not available!
WITHOUT_CLASSIFICATION	This is needed for the case when the default notation is not loaded at this point.
WITHOUT_CLASSIFICATION	class accessors
WITHOUT_CLASSIFICATION	Static workers for dealing with notation names.
WITHOUT_CLASSIFICATION	No valid field for above notationLanguage. It's valid if not null.
WITHOUT_CLASSIFICATION	We also show stereotypes
WITHOUT_CLASSIFICATION	We also show stereotypes
WITHOUT_CLASSIFICATION	We also show the type (of which e.g. the name may change)
WITHOUT_CLASSIFICATION	We also show the type (of which e.g. the name may change)
WITHOUT_CLASSIFICATION	We also show tagged values (the / for derived)
WITHOUT_CLASSIFICATION	We also show tagged values (the / for derived)
WITHOUT_CLASSIFICATION	and when the Operation is replaced:
WITHOUT_CLASSIFICATION	and when the class changes name:
WITHOUT_CLASSIFICATION	mvw: Indeed. The intention of the constructor parameter is to prove that there is a valid UML object to bind the notation to. So, the next statement should fail on a null parameter, and on anything that is not an object of which we can retrieve the multiplicity.
WITHOUT_CLASSIFICATION	We are not interested in the name.
WITHOUT_CLASSIFICATION	And the parameter names and values:
WITHOUT_CLASSIFICATION	And the arguments:
WITHOUT_CLASSIFICATION	We also show parameters
WITHOUT_CLASSIFICATION	We also show types of parameters
WITHOUT_CLASSIFICATION	Listen to the modelelement itself:
WITHOUT_CLASSIFICATION	We also show tagged values (the / for derived)
WITHOUT_CLASSIFICATION	If this fails, then there is a problem... dthompson 29/12/2008: It seems that the returned value is irrelevant here, so I assume that the purpose of this call is just to throw an exception in case of a problem.
WITHOUT_CLASSIFICATION	register for events from all modelelements that change the name and body text i.e. when the CallAction is replaced:
WITHOUT_CLASSIFICATION	and when the owner is replaced (unlikely for operations), and when the operation changes name:
WITHOUT_CLASSIFICATION	Listen to the modelelement itself:
WITHOUT_CLASSIFICATION	removed stereotype
WITHOUT_CLASSIFICATION	register for events from all modelelements that change the text i.e. when the Transition is replaced:
WITHOUT_CLASSIFICATION	new stereotype
WITHOUT_CLASSIFICATION	Listen to name changes in the path (useful for e.g. Package):
WITHOUT_CLASSIFICATION	register for the doActivity etc.
WITHOUT_CLASSIFICATION	register for internal transitions:
WITHOUT_CLASSIFICATION	return "parsing.java.help.attribute";
WITHOUT_CLASSIFICATION	TODO: The src_visibility tag doesn't appear to be created anywhere by ArgoUML currently
WITHOUT_CLASSIFICATION	return "parsing.help.fig-association-end-name";
WITHOUT_CLASSIFICATION	TODO: initial value
WITHOUT_CLASSIFICATION	skip spaces
WITHOUT_CLASSIFICATION	the name itself
WITHOUT_CLASSIFICATION	Check the name for validity:
WITHOUT_CLASSIFICATION	TODO: Check the name for validity.
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed( java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	pick out return type
WITHOUT_CLASSIFICATION	handle multiplicity here since we need the type actually the API of generator is buggy since to generate multiplicity correctly we need the attribute too
WITHOUT_CLASSIFICATION	Build the final string
WITHOUT_CLASSIFICATION	TODO: qualifiers (e.g., const) TODO: stereotypes...
WITHOUT_CLASSIFICATION	name and params
WITHOUT_CLASSIFICATION	Do nothing.
WITHOUT_CLASSIFICATION	constructor
WITHOUT_CLASSIFICATION	check for more attributes (';' separated):
WITHOUT_CLASSIFICATION	For Java notation, we also need to listen to "leaf" changes, since they are shown as "final" on the diagram.
WITHOUT_CLASSIFICATION	Remove bases that aren't there anymore
WITHOUT_CLASSIFICATION	Notation.findNotation("Java");
WITHOUT_CLASSIFICATION	Initialize the NotationUtilityUml:
WITHOUT_CLASSIFICATION	copy - can't iterate modify live collection while iterating it
WITHOUT_CLASSIFICATION	When nothing is generated: omit the space.
WITHOUT_CLASSIFICATION	Loop through all base classes, building a comma separated list
WITHOUT_CLASSIFICATION	yes, there are more:
WITHOUT_CLASSIFICATION	no text? remove attr!
WITHOUT_CLASSIFICATION	no non-whitechars in text? remove attr!
WITHOUT_CLASSIFICATION	We need to set the namespace/owner of the new attribute before parsing:
WITHOUT_CLASSIFICATION	If the 1st attribute is static, then the new ones, too.
WITHOUT_CLASSIFICATION	Do nothing
WITHOUT_CLASSIFICATION	yes, there are more:
WITHOUT_CLASSIFICATION	Generates a string representation for the provided attribute. The string representation will be of the form: visibility name [multiplicity] : type-expression = initial-value {property-string} Depending on settings in Notation, visibility, multiplicity, type-expression, initial value and properties are shown/not shown.
WITHOUT_CLASSIFICATION	Handle Derived:
WITHOUT_CLASSIFICATION	Handle Derived:
WITHOUT_CLASSIFICATION	Handle Visibility:
WITHOUT_CLASSIFICATION	fix for loading bad projects
WITHOUT_CLASSIFICATION	The "show types" defaults to TRUE, to stay compatible with older ArgoUML versions that did not have this setting:
WITHOUT_CLASSIFICATION	The element was deleted while we were processing it
WITHOUT_CLASSIFICATION	strip any trailing semi-colons
WITHOUT_CLASSIFICATION	construct bases string (comma separated)
WITHOUT_CLASSIFICATION	no text? remove op!
WITHOUT_CLASSIFICATION	no non-whitechars in text? remove op!
WITHOUT_CLASSIFICATION	check for more operations (';' separated):
WITHOUT_CLASSIFICATION	end while loop
WITHOUT_CLASSIFICATION	parameterlist is guaranteed to contain at least "("
WITHOUT_CLASSIFICATION	Don't create a stereotype for <<signal>> on a Reception but create any other parsed stereotypes as needed
WITHOUT_CLASSIFICATION	lets concatenate it to the resulting string (genStr)
WITHOUT_CLASSIFICATION	The "show types" defaults to TRUE, to stay compatible with older ArgoUML versions that did not have this setting:
WITHOUT_CLASSIFICATION	the parameters
WITHOUT_CLASSIFICATION	the returnparameters
WITHOUT_CLASSIFICATION	The model element was deleted while we were working on it
WITHOUT_CLASSIFICATION	else: we remove only the extra ","
WITHOUT_CLASSIFICATION	the query state
WITHOUT_CLASSIFICATION	Although Operation and Signal are peers in the UML type hierarchy they share the attributes isRoot, isLeaf, isAbstract, and specification. Concurrency is not shared and is specific to Operation.
WITHOUT_CLASSIFICATION	remove last ,
WITHOUT_CLASSIFICATION	end of block
WITHOUT_CLASSIFICATION	A string of the form "name:"
WITHOUT_CLASSIFICATION	this is a Message UML object
WITHOUT_CLASSIFICATION	Supported format: predecessors number ":" action The 3 parts of the string to generate:
WITHOUT_CLASSIFICATION	(MMessage)
WITHOUT_CLASSIFICATION	This may return null:
WITHOUT_CLASSIFICATION	activatorIntNo is now guaranteed not null
WITHOUT_CLASSIFICATION	List<String> args = null;
WITHOUT_CLASSIFICATION	get the ordered list of immediate successors:
WITHOUT_CLASSIFICATION	the condition or iteration expression (recurrence):
WITHOUT_CLASSIFICATION	(MMessage)
WITHOUT_CLASSIFICATION	Now apply the changes to the model:
WITHOUT_CLASSIFICATION	MMessage
WITHOUT_CLASSIFICATION	If there are more than one suitable operation, then we pick the first one.
WITHOUT_CLASSIFICATION	Disconnect the message from the call graph Make copies of returned live collections since we're modifying
WITHOUT_CLASSIFICATION	Find the preceding message, if any, on either end of the association.
WITHOUT_CLASSIFICATION	MClassifierRole
WITHOUT_CLASSIFICATION	Connect the message at a new spot
WITHOUT_CLASSIFICATION	case 3 & 4
WITHOUT_CLASSIFICATION	MMessage
WITHOUT_CLASSIFICATION	(MMessage)
WITHOUT_CLASSIFICATION	(MMessage)
WITHOUT_CLASSIFICATION	(MMessage)
WITHOUT_CLASSIFICATION	(MMessage)
WITHOUT_CLASSIFICATION	MClassifierRole
WITHOUT_CLASSIFICATION	If no variable name was given, then retain the one in the model.
WITHOUT_CLASSIFICATION	If no function-name was given, then retain the one in the model.
WITHOUT_CLASSIFICATION	Store the guard, i.e. condition or iteration expression, in the recurrence field of the Action:
WITHOUT_CLASSIFICATION	If there was no Action yet, create a CallAction:
WITHOUT_CLASSIFICATION	Things are strange if there are more than one candidate root, it has no obvious interpretation in terms of a call tree.
WITHOUT_CLASSIFICATION	MMessage
WITHOUT_CLASSIFICATION	MMessage
WITHOUT_CLASSIFICATION	Jaap Branderhorst 2002-23-09 added next lines to link parameters and operations to the figs that represent them
WITHOUT_CLASSIFICATION	We can do nothing if we don't have both the use case and extension point.
WITHOUT_CLASSIFICATION	Parse the string to creat a new extension point.
WITHOUT_CLASSIFICATION	If we got back null we interpret this as meaning delete the reference to the extension point from the use case, otherwise we set the fields of the extension point to the values in newEp.
WITHOUT_CLASSIFICATION	Build a new extension point
WITHOUT_CLASSIFICATION	The empty string. Return null
WITHOUT_CLASSIFICATION	Handle Derived:
WITHOUT_CLASSIFICATION	If we are given the null string, return immediately, so that the extensionpoint is removed.
WITHOUT_CLASSIFICATION	A string of the form "location". This will be confused by the string ":", so we pick this out as an instruction to clear both name and location.
WITHOUT_CLASSIFICATION	A string of the form "name:location". Discard the middle token (":")
WITHOUT_CLASSIFICATION	Read past the colon.
WITHOUT_CLASSIFICATION	The string to build
WITHOUT_CLASSIFICATION	Get the fields we want
WITHOUT_CLASSIFICATION	Put in the name field if it's there
WITHOUT_CLASSIFICATION	Put in the location field if it's there
WITHOUT_CLASSIFICATION	First we decode the string:
WITHOUT_CLASSIFICATION	Secondly we check the previous model structure:
WITHOUT_CLASSIFICATION	And 3rd, we adapt the model:
WITHOUT_CLASSIFICATION	Same class, other operation
WITHOUT_CLASSIFICATION	Other class
WITHOUT_CLASSIFICATION	We found the classifier, now go find the operation:
WITHOUT_CLASSIFICATION	Here we located the new classifier with its operation.
WITHOUT_CLASSIFICATION	the text was: {frozen}
WITHOUT_CLASSIFICATION	the text was: {frozen = false}
WITHOUT_CLASSIFICATION	the text was: {frozen = true}
WITHOUT_CLASSIFICATION	Copy returned parameters because it will be a live collection for MDR
WITHOUT_CLASSIFICATION	Should we be getting this from the GUI? BT 11 aug 2002
WITHOUT_CLASSIFICATION	no type defined yet
WITHOUT_CLASSIFICATION	If the current property occurs a second time in the given list of properties, then skip it:
WITHOUT_CLASSIFICATION	This automatically pulls in a TagDefinition from the profile:
WITHOUT_CLASSIFICATION	The TV existed, but maybe it was not "true":
WITHOUT_CLASSIFICATION	TODO: For UML2: Check if the type of the TV is String.
WITHOUT_CLASSIFICATION	Generate all the existing internal transitions, so that we can compare them as text with the newly entered ones.
WITHOUT_CLASSIFICATION	strip any trailing semi-colons
WITHOUT_CLASSIFICATION	This would be solution (1): Model.getExtensionMechanismsHelper().setDataValues( taggedValue, new String[] {"false"});
WITHOUT_CLASSIFICATION	There are 2 possibilities: either (1) we follow the traditional notation philosophy, and set the tagged value to false, or (2) we restore to the pristine situation and delete the taggedValue (whatever the value was). I chose the latter (mvw).
WITHOUT_CLASSIFICATION	Allow concatenation order and separator to be localized
WITHOUT_CLASSIFICATION	Parameter etc.
WITHOUT_CLASSIFICATION	"in" is the default
WITHOUT_CLASSIFICATION	"in"
WITHOUT_CLASSIFICATION	return nothing
WITHOUT_CLASSIFICATION	it can still be null if the UML element did not have a multiplicity defined.
WITHOUT_CLASSIFICATION	Let's not be picky about the brackets - just remove them:
WITHOUT_CLASSIFICATION	get the classifier
WITHOUT_CLASSIFICATION	the State of a ClassifierInState is removed, so let's reduce it to a Classifier.
WITHOUT_CLASSIFICATION	the model is changed - job done
WITHOUT_CLASSIFICATION	Strings
WITHOUT_CLASSIFICATION	Remove the states that did not match.
WITHOUT_CLASSIFICATION	Now we have to see if any state in any statemachine of classifier is named [name]. If so, then we only have to link the state to c.
WITHOUT_CLASSIFICATION	the model is changed - our job is done
WITHOUT_CLASSIFICATION	the model is changed - our job is done
WITHOUT_CLASSIFICATION	no state named s is found, so we have to reject the user's input
WITHOUT_CLASSIFICATION	Finally, do the adaptations:
WITHOUT_CLASSIFICATION	then c is a "normal" Classifier UML states
WITHOUT_CLASSIFICATION	let's create a new ClassifierInState with the correct links
WITHOUT_CLASSIFICATION	This updates the diagram - hence as last statement:
WITHOUT_CLASSIFICATION	case 2
WITHOUT_CLASSIFICATION	case 3
WITHOUT_CLASSIFICATION	We can distinguish between 4 cases: 1. A trigger is given. None exists yet. 2. The trigger was present, and it is the same type, or a different type, and its text is changed, or the same. 3. A trigger is not given. None exists yet. 4. The name of the trigger was present, but is removed. The reaction in these cases should be: 1. Find the referred trigger (issue 5988) or create a new one, and hook it to the transition. 2. Rename the trigger. 3. Nop. 4. Unhook and erase the existing trigger.
WITHOUT_CLASSIFICATION	if no classifier has been set, then entering a state is not useful, so the user's input has to be rejected.
WITHOUT_CLASSIFICATION	TODO: If the next line trows an exception, then what do we do with the remainder of the parsed/to be parsed lines?
WITHOUT_CLASSIFICATION	Add this new one, and mark it to be retained:
WITHOUT_CLASSIFICATION	Process the final list of internal transitions, and hook it to the state:
WITHOUT_CLASSIFICATION	don't forget to remove old internals!
WITHOUT_CLASSIFICATION	Make next accesses to this instance predictable:
WITHOUT_CLASSIFICATION	and hook in the new ones:
WITHOUT_CLASSIFICATION	the ActionExpression
WITHOUT_CLASSIFICATION	let's look for a TimeEvent, ChangeEvent, CallEvent or SignalEvent
WITHOUT_CLASSIFICATION	operation(paramlist)
WITHOUT_CLASSIFICATION	the part after the || is for when there's nothing between the ()
WITHOUT_CLASSIFICATION	It is safe to give a null to the next function, since a statemachine is always composed by a model anyhow.
WITHOUT_CLASSIFICATION	else the empty s will do
WITHOUT_CLASSIFICATION	case 1 and 2
WITHOUT_CLASSIFICATION	language
WITHOUT_CLASSIFICATION	Do not set the name.
WITHOUT_CLASSIFICATION	Do not set the name.
WITHOUT_CLASSIFICATION	This case is a bit different, because of the parameters. If the event already exists, the parameters are ignored.
WITHOUT_CLASSIFICATION	when(...)
WITHOUT_CLASSIFICATION	signalname
WITHOUT_CLASSIFICATION	and parse the parameter list
WITHOUT_CLASSIFICATION	And hook it to the transition immediately, so that an exception can not cause it to remain dangling:
WITHOUT_CLASSIFICATION	Do nothing.
WITHOUT_CLASSIFICATION	yes, there are more:
WITHOUT_CLASSIFICATION	strip any trailing semi-colons
WITHOUT_CLASSIFICATION	Parameter etc.
WITHOUT_CLASSIFICATION	"in" is the default
WITHOUT_CLASSIFICATION	"in"
WITHOUT_CLASSIFICATION	return nothing
WITHOUT_CLASSIFICATION	and parse the parameter list
WITHOUT_CLASSIFICATION	case 2
WITHOUT_CLASSIFICATION	Just change the time expression
WITHOUT_CLASSIFICATION	we have an event without expression
WITHOUT_CLASSIFICATION	It's a time-event now, but was of another type before!
WITHOUT_CLASSIFICATION	Just change the ChangeExpression
WITHOUT_CLASSIFICATION	Create a new expression:
WITHOUT_CLASSIFICATION	The parsed text describes a change-event, but the model contains another type!
WITHOUT_CLASSIFICATION	Just change the Name and linked operation
WITHOUT_CLASSIFICATION	TODO: Change the linked operation.
WITHOUT_CLASSIFICATION	Just change the Name and linked signal
WITHOUT_CLASSIFICATION	case 3 and 4
WITHOUT_CLASSIFICATION	case 3
WITHOUT_CLASSIFICATION	case 3
WITHOUT_CLASSIFICATION	case 4 erase it
WITHOUT_CLASSIFICATION	case 4 erase it
WITHOUT_CLASSIFICATION	Do not check if the parameters match.
WITHOUT_CLASSIFICATION	case 1
WITHOUT_CLASSIFICATION	NSUML does this (?) Model.getFacade().setGuard(trans, g);
WITHOUT_CLASSIFICATION	No text. We may remove the literal.
WITHOUT_CLASSIFICATION	No non-white chars in text? remove literal!
WITHOUT_CLASSIFICATION	Heuristic algorithm: do not show stereotypes if there is no name.
WITHOUT_CLASSIFICATION	@see javax.swing.JComponent#setVisible(boolean)
WITHOUT_CLASSIFICATION	strip any trailing semi-colons
WITHOUT_CLASSIFICATION	construct bases string (comma separated)
WITHOUT_CLASSIFICATION	Great! The class already existed - just use it.
WITHOUT_CLASSIFICATION	If no base was typed, then only set the name:
WITHOUT_CLASSIFICATION	Only set the name if the base was found:
WITHOUT_CLASSIFICATION	If the base was not changed, then only set the name:
WITHOUT_CLASSIFICATION	get the associationRole name
WITHOUT_CLASSIFICATION	Let's create a class with the given name, otherwise the user will not understand why we refuse his input!
WITHOUT_CLASSIFICATION	Only instantiate when we need it.
WITHOUT_CLASSIFICATION	If the base is already set to this assoc, then do not set it again. This check is needed, otherwise the setbase() below gives an exception.
WITHOUT_CLASSIFICATION	2002-07-31 Jaap Branderhorst from here made visibility etc. configurable
WITHOUT_CLASSIFICATION	get the base association name
WITHOUT_CLASSIFICATION	no instantiations
WITHOUT_CLASSIFICATION	The next one defaults to TRUE, to stay compatible with older ArgoUML versions that did not have this setting:
WITHOUT_CLASSIFICATION	end of OCLEvaluator
WITHOUT_CLASSIFICATION	look for associations
WITHOUT_CLASSIFICATION	look for associations
WITHOUT_CLASSIFICATION	MAssociationEnd
WITHOUT_CLASSIFICATION	MParameter
WITHOUT_CLASSIFICATION	MAssociationEnd
WITHOUT_CLASSIFICATION	The ocl toolkit does not like void return types
WITHOUT_CLASSIFICATION	MClassifiers cannot be Bag
WITHOUT_CLASSIFICATION	MClassifier
WITHOUT_CLASSIFICATION	first search for appropriate attributes
WITHOUT_CLASSIFICATION	first search for appropriate attributes
WITHOUT_CLASSIFICATION	MClassifier
WITHOUT_CLASSIFICATION	MOperation
WITHOUT_CLASSIFICATION	MOperation
WITHOUT_CLASSIFICATION	... and not incompletely imported
WITHOUT_CLASSIFICATION	Query checking added 05/21/01, sz9
WITHOUT_CLASSIFICATION	Query checking added 05/21/01, sz9
WITHOUT_CLASSIFICATION	end class OCLExpander
WITHOUT_CLASSIFICATION	skip first parameter == return type
WITHOUT_CLASSIFICATION	skip first parameter == return type
WITHOUT_CLASSIFICATION	Only look at classes...
WITHOUT_CLASSIFICATION	abstract classes are hardly ever singletons
WITHOUT_CLASSIFICATION	and not association classes
WITHOUT_CLASSIFICATION	with a name...
WITHOUT_CLASSIFICATION	If there is an attribute which is not static => no problem
WITHOUT_CLASSIFICATION	If there is an outgoing association => no problem
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	Only look at classes
WITHOUT_CLASSIFICATION	Only look at classes
WITHOUT_CLASSIFICATION	Check for Singleton stereotype, uninitialised instance variables and outgoing associations, as per JavaDoc above.
WITHOUT_CLASSIFICATION	Found no such attribute
WITHOUT_CLASSIFICATION	We only look at singletons
WITHOUT_CLASSIFICATION	We only look at singletons
WITHOUT_CLASSIFICATION	end class CrSingletonViolatedOnlyPrivateConstructors
WITHOUT_CLASSIFICATION	NOTE: For historical reasons true == hide, so we need to invert the sense of this
WITHOUT_CLASSIFICATION	end class CrEmptyPackage
WITHOUT_CLASSIFICATION	At this stage during loading, the diagrams are not created yet - so we have to store this name for later use.
WITHOUT_CLASSIFICATION	pw.close();
WITHOUT_CLASSIFICATION	Retain the previous project file even when the save operation crashes in the middle. Also create a backup file after saving.
WITHOUT_CLASSIFICATION	project.setFile(file);
WITHOUT_CLASSIFICATION	for AndroMDA profiles
WITHOUT_CLASSIFICATION	Retain the previous project file even when the save operation crashes in the middle. Also create a backup file after saving.
WITHOUT_CLASSIFICATION	Give the parser a map of model elements keyed by their UUID. This is used to allocate figs to their owner using the "href" attribute in PGML.
WITHOUT_CLASSIFICATION	if save did not raise an exception and name+"#" exists move name+"#" to name+"~" this is the correct backup file
WITHOUT_CLASSIFICATION	If we get a 2nd error, just ignore it
WITHOUT_CLASSIFICATION	frank: in case of exception delete name and mv name+"#" back to name if name+"#" exists this is the "rollback" to old file
WITHOUT_CLASSIFICATION	we have to give a message to user and set the system to unsaved!
WITHOUT_CLASSIFICATION	Do nothing.
WITHOUT_CLASSIFICATION	Should never happen - something's really wrong
WITHOUT_CLASSIFICATION	main parsing methods
WITHOUT_CLASSIFICATION	@see java.io.InputStream#close()
WITHOUT_CLASSIFICATION	@see java.io.InputStream#read()
WITHOUT_CLASSIFICATION	@see java.io.InputStream#read(byte[], int, int)
WITHOUT_CLASSIFICATION	if save did not raise an exception and name+"#" exists move name+"#" to name+"~" this is the correct backup file
WITHOUT_CLASSIFICATION	frank: in case of exception delete name and mv name+"#" back to name if name+"#" exists this is the "rollback" to old file
WITHOUT_CLASSIFICATION	we have to give a message to user and set the system to unsaved!
WITHOUT_CLASSIFICATION	boolean upgradeRequired = !checkVersion(fileVersion, releaseVersion)
WITHOUT_CLASSIFICATION	Upgrade is in the way for UML2 projects, so we turn it off in that case:
WITHOUT_CLASSIFICATION	Load .argo project descriptor
WITHOUT_CLASSIFICATION	Load the rest
WITHOUT_CLASSIFICATION	Copy the todo items after the model and diagrams so that any model elements or figs that the todo items refer to will exist before creating critics.
WITHOUT_CLASSIFICATION	first read the .argo file from Zip
WITHOUT_CLASSIFICATION	Keep reading till we hit the <argo> tag
WITHOUT_CLASSIFICATION	Get the version from the tag.
WITHOUT_CLASSIFICATION	Skip 1 lines
WITHOUT_CLASSIFICATION	Loop round loading the diagrams
WITHOUT_CLASSIFICATION	private EventListenerList listenerList = new EventListenerList();
WITHOUT_CLASSIFICATION	Skip the 2 lines <?xml version="1.0" encoding="UTF-8" ?> <!DOCTYPE todo SYSTEM "todo.dtd" >
WITHOUT_CLASSIFICATION	Keep reading till we get the left bracket of an opening tag
WITHOUT_CLASSIFICATION	Compare each following character to see that it matches the tag we want
WITHOUT_CLASSIFICATION	We also want to match with the right bracket of the tag or some other terminator
WITHOUT_CLASSIFICATION	We've found the matching tag but do we have the correct instance with matching attributes?
WITHOUT_CLASSIFICATION	Read the name of the child tag and then reset read position back to that child tag.
WITHOUT_CLASSIFICATION	Skip any whitespace till we should be on an equals sign.
WITHOUT_CLASSIFICATION	Skip any whitespace till we should be on a quote symbol.
WITHOUT_CLASSIFICATION	No other uses of string in PGMLHandler
WITHOUT_CLASSIFICATION	Handle other uses of <private> contents
WITHOUT_CLASSIFICATION	Sanity check - the returned path item placement strategy should match the one in the UML. If it doesn't, it could be that the UML was created with an older argo version, and the new argo version use a different placement strategy. If they don't match, just use the default.
WITHOUT_CLASSIFICATION	If any of the values are null, ignore the element.
WITHOUT_CLASSIFICATION	If the PathItemPlacement was unknown, leave the diagram with the default settings.
WITHOUT_CLASSIFICATION	For a match to be found, it has to have the same owner, and the same long class name.
WITHOUT_CLASSIFICATION	A list of the path item attributes for this container. The list is populated during parsing, them processed at endElement() private List<Hashtable<String, String>> pathItemAttrs = new ArrayList<Hashtable<String, String>>();
WITHOUT_CLASSIFICATION	This code has to go within the startElement block after the strings have been matched.
WITHOUT_CLASSIFICATION	Method 1: (collect data and assign later in endElement() method). Hashtable<String, String> ht = new Hashtable<String, String>(); ht.put("classname", classname); ht.put("figclassname", figclassname); ht.put("ownerhref", ownerhref); ht.put("angle", angle); ht.put("offset", offset); pathItemAttrs.add(ht);
WITHOUT_CLASSIFICATION	Create a new diagram wide settings block which is backed by the project-wide defaults that we were passed
WITHOUT_CLASSIFICATION	Ignore non-private elements within FigNode groups
WITHOUT_CLASSIFICATION	Handle ItemUID in container contents
WITHOUT_CLASSIFICATION	Discard class name, x y w h
WITHOUT_CLASSIFICATION	The owner should always have already been set in the constructor
WITHOUT_CLASSIFICATION	happens when 'is' comes from a zip file
WITHOUT_CLASSIFICATION	continue with null stream, readDiagram(...) will take care of it
WITHOUT_CLASSIFICATION	TODO: Localize these
WITHOUT_CLASSIFICATION	If the id does not look like a top-level Fig then we can assume that this is an id of a FigEdgePort inside some FigEdge. So extract the FigEdgePort from the FigEdge and return that as the FigNode.
WITHOUT_CLASSIFICATION	If there is no dot then this must be a top level Fig and can be assumed to be a FigNode.
WITHOUT_CLASSIFICATION	We are looking first to match with 3 different constructor types. We would not expect a Fig to have any mix of these. Any constructor other than these should be deprecated so we look for these first. Fig(DiagramEdgeSettings, DiagramSettings) Fig(Object, Rectangle, DiagramSettings) Fig(Rectangle, DiagramSettings)
WITHOUT_CLASSIFICATION	FigNodeModelElements should match here
WITHOUT_CLASSIFICATION	FigEdgeModelElements should match here (they have no bounds)
WITHOUT_CLASSIFICATION	Retain the previous project file even when the save operation crashes in the middle. Also create a backup file after saving.
WITHOUT_CLASSIFICATION	frank: in case of exception delete name and mv name+"#" back to name if name+"#" exists this is the "rollback" to old file
WITHOUT_CLASSIFICATION	Fall back to GEF's handling if we couldn't find an appropriate constructor
WITHOUT_CLASSIFICATION	myWriter,
WITHOUT_CLASSIFICATION	Empty constructor
WITHOUT_CLASSIFICATION	Empty constructor
WITHOUT_CLASSIFICATION	for compatibility with older format
WITHOUT_CLASSIFICATION	<model> is not used in current implementation
WITHOUT_CLASSIFICATION	<model> is not used in current implementation
WITHOUT_CLASSIFICATION	|| model == null
WITHOUT_CLASSIFICATION	|| model == null
WITHOUT_CLASSIFICATION	we have to give a message to user and set the system to unsaved!
WITHOUT_CLASSIFICATION	Write out header section
WITHOUT_CLASSIFICATION	Note we assume members are ordered correctly already
WITHOUT_CLASSIFICATION	let's initialize the progressMgr
WITHOUT_CLASSIFICATION	Run through any stylesheet upgrades
WITHOUT_CLASSIFICATION	Don't use systemId here or it will get opened in preference to inputStream.
WITHOUT_CLASSIFICATION	UML 2.x files could also contain a profile model. Try again with uml:Profile as main tag.
WITHOUT_CLASSIFICATION	let's update the progress
WITHOUT_CLASSIFICATION	If we're trying to load a file from a future version complain and refuse.
WITHOUT_CLASSIFICATION	Empty constructor
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	No more we can do here on failure
WITHOUT_CLASSIFICATION	Buffer containing characters which have been decoded from the bytes in inBB.
WITHOUT_CLASSIFICATION	RegEx pattern for XML declaration and, optionally, DOCTYPE Backslashes are doubled up - one for Java, one for Regex
WITHOUT_CLASSIFICATION	Convert from bytes back to characters
WITHOUT_CLASSIFICATION	rewind our character buffer
WITHOUT_CLASSIFICATION	Remove anything that matches our pattern
WITHOUT_CLASSIFICATION	Remove null characters at the end
WITHOUT_CLASSIFICATION	Reencode the remaining characters as bytes again
WITHOUT_CLASSIFICATION	and write them to our output stream
WITHOUT_CLASSIFICATION	Skip the <?xml... first line
WITHOUT_CLASSIFICATION	cat.debug("NOTE: TodoParser handleStartTag:" + e.getName());
WITHOUT_CLASSIFICATION	NOP
WITHOUT_CLASSIFICATION	This is expected to be safe, don't add a try block here
WITHOUT_CLASSIFICATION	cat.debug("Added ToDoItem: " + _headline);
WITHOUT_CLASSIFICATION	static variables
WITHOUT_CLASSIFICATION	@see org.xml.sax.ContentHandler#startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes)
WITHOUT_CLASSIFICATION	@see org.xml.sax.ContentHandler#endElement(java.lang.String, java.lang.String, java.lang.String)
WITHOUT_CLASSIFICATION	@see org.xml.sax.ContentHandler#characters(char[], int, int)
WITHOUT_CLASSIFICATION	accessors
WITHOUT_CLASSIFICATION	constants
WITHOUT_CLASSIFICATION	Retain the previous project file even when the save operation crashes in the middle. Also create a backup file after saving.
WITHOUT_CLASSIFICATION	These strings match the XML element names in the argo.tee exactly.
WITHOUT_CLASSIFICATION	The following is deprecated, but can never be removed to preserve backward compatibility with old project files
WITHOUT_CLASSIFICATION	protected methods
WITHOUT_CLASSIFICATION	empty constructor
WITHOUT_CLASSIFICATION	abstract methods
WITHOUT_CLASSIFICATION	non-abstract methods
WITHOUT_CLASSIFICATION	e.g:org.argouml.uml.generator.ui.ClassGenerationDialog -> poseidon.jar
WITHOUT_CLASSIFICATION	convenience methods
WITHOUT_CLASSIFICATION	end class SAXParserBase
WITHOUT_CLASSIFICATION	Stop UI interception
WITHOUT_CLASSIFICATION	Do nothing.
WITHOUT_CLASSIFICATION	constructors
WITHOUT_CLASSIFICATION	@see javax.swing.filechooser.FileFilter#getDescription()
WITHOUT_CLASSIFICATION	accessors
WITHOUT_CLASSIFICATION	instance variables
WITHOUT_CLASSIFICATION	Retain the previous project file even when the save operation crashes in the middle. Also create a backup file after saving.
WITHOUT_CLASSIFICATION	if save did not raise an exception and name+"#" exists move name+"#" to name+"~" this is the correct backup file
WITHOUT_CLASSIFICATION	frank: in case of exception delete name and mv name+"#" back to name if name+"#" exists this is the "rollback" to old file
WITHOUT_CLASSIFICATION	we have to give a message to user and set the system to unsaved!
WITHOUT_CLASSIFICATION	we have to give a message to user and set the system to unsaved!
WITHOUT_CLASSIFICATION	Make sure the file doesn't exist so the user will get prompted to choose a new name
WITHOUT_CLASSIFICATION	possibly use the following instead MemberFilePersister persister = new DiagramMemberFilePersister();
WITHOUT_CLASSIFICATION	class methods
WITHOUT_CLASSIFICATION	end class XMLTokenTableBase
WITHOUT_CLASSIFICATION	These are the file formats I know about:
WITHOUT_CLASSIFICATION	If anything goes wrong return the stack trace as a string so that we get some useful feedback.
WITHOUT_CLASSIFICATION	Return just the comment edges for a specific layer. TODO: Document: Diagram / layer? @param diagram The diagram. @return a {@link List} with the edges.
WITHOUT_CLASSIFICATION	make sure this setting exists in the configuration file to facilitate changing:
WITHOUT_CLASSIFICATION	Is row at top of screen?
WITHOUT_CLASSIFICATION	@see javax.swing.filechooser.FileFilter#getDescription()
WITHOUT_CLASSIFICATION	accessors
WITHOUT_CLASSIFICATION	Process the listeners last to first, notifying those that are interested in this event
WITHOUT_CLASSIFICATION	Lazily create the event:
WITHOUT_CLASSIFICATION	Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	instance variables
WITHOUT_CLASSIFICATION	FileFilter API
WITHOUT_CLASSIFICATION	this check for files without extension...
WITHOUT_CLASSIFICATION	}
WITHOUT_CLASSIFICATION	end class XMLElement
WITHOUT_CLASSIFICATION	for AndroMDA
WITHOUT_CLASSIFICATION	For some reason, this alleged directory is a single file This could be that there is some confusion or just the normal, that a single file was selected and is supposed to be imported.
WITHOUT_CLASSIFICATION	Get the contents of the directory
WITHOUT_CLASSIFICATION	The following test can cause trouble with links, because links are accepted as directories, even if they link files. Links could also result in infinite loops. For this reason we don't do this traversing recursively.
WITHOUT_CLASSIFICATION	If this file is a directory
WITHOUT_CLASSIFICATION	load profile name
WITHOUT_CLASSIFICATION	Yes, scroll up one row
WITHOUT_CLASSIFICATION	Testing: Works Ok.
WITHOUT_CLASSIFICATION	if there is only one package in the model, we should suppose it's the profile model, if there is more than one, we take the ones marked as <<profile>>
WITHOUT_CLASSIFICATION	load profile dependencies
WITHOUT_CLASSIFICATION	Set up the property panels for critics:
WITHOUT_CLASSIFICATION	init profiles defined in jar files
WITHOUT_CLASSIFICATION	We have our own UML2 profile, but it is not used. Instead, by the following line the build-in eclipse UML2 standard profile and primitive types implementation are used.
WITHOUT_CLASSIFICATION	Missing WFRs
WITHOUT_CLASSIFICATION	Association Class 4.5.3.2 [1]
WITHOUT_CLASSIFICATION	Testing: does not fire.
WITHOUT_CLASSIFICATION	Testing: does not fire.
WITHOUT_CLASSIFICATION	4.5.3.2 [2]
WITHOUT_CLASSIFICATION	Behavioral Feature 4.5.3.5 [2]
WITHOUT_CLASSIFICATION	TODO: Partly overlaps CrOppEndVsAttr.
WITHOUT_CLASSIFICATION	Tested with fabricated XMI - OK.
WITHOUT_CLASSIFICATION	Tested with fabricated XMI - OK.
WITHOUT_CLASSIFICATION	Tested with fabricated XMI - OK.
WITHOUT_CLASSIFICATION	4.5.3.20 [4]
WITHOUT_CLASSIFICATION	+ "a.allConnections->exists(r | r.type.oclIsKindOf(Actor)) and "
WITHOUT_CLASSIFICATION	@see tudresden.ocl.parser.analysis.DepthFirstAdapter#caseAIfExpression(tudresden.ocl.parser.node.AIfExpression)
WITHOUT_CLASSIFICATION	@see tudresden.ocl.parser.analysis.DepthFirstAdapter#caseALogicalExpressionTail(tudresden.ocl.parser.node.ALogicalExpressionTail)
WITHOUT_CLASSIFICATION	@see tudresden.ocl.parser.analysis.DepthFirstAdapter#caseARelationalExpressionTail(tudresden.ocl.parser.node.ARelationalExpressionTail)
WITHOUT_CLASSIFICATION	UseCase 4.11.3.5 [2]
WITHOUT_CLASSIFICATION	Classifier 4.5.3.8 [5]
WITHOUT_CLASSIFICATION	GeneralizableElement 4.5.3.20 [1]
WITHOUT_CLASSIFICATION	DataType 4.5.3.12 [1]
WITHOUT_CLASSIFICATION	Actor 4.11.3.1 [1]
WITHOUT_CLASSIFICATION	Namespace 4.5.3.26 [2]
WITHOUT_CLASSIFICATION	UseCase 4.11.3.5 [1]
WITHOUT_CLASSIFICATION	Actor 4.11.3.1 [2]
WITHOUT_CLASSIFICATION	Tested OK, except in some cases, depending on the sequence of the EPs. Probably the implementation of "forAll (x, y | ..." does not cover all combinations.
WITHOUT_CLASSIFICATION	UseCase 4.11.3.5 [4]
WITHOUT_CLASSIFICATION	UseCase 4.11.3.5 [3]
WITHOUT_CLASSIFICATION	ActionState 4.13.3.2 [3] Issue 715
WITHOUT_CLASSIFICATION	no default type for UML2
WITHOUT_CLASSIFICATION	the UML Profile is always present and default
WITHOUT_CLASSIFICATION	register the built-in profiles
WITHOUT_CLASSIFICATION	if an exception is raised file is unusable
WITHOUT_CLASSIFICATION	if the list does not exist add the code generation and good practices profiles as default
WITHOUT_CLASSIFICATION	this profile could have not been loaded when the default profile configuration was loaded at first, so we need to do it again
WITHOUT_CLASSIFICATION	We assume profile is contained in a single extent
WITHOUT_CLASSIFICATION	Nothing to delete if we couldn't get the packages
WITHOUT_CLASSIFICATION	If we found an old-style name, update it to the new package name
WITHOUT_CLASSIFICATION	Make sure the names didn't change again
WITHOUT_CLASSIFICATION	simply use name as it is
WITHOUT_CLASSIFICATION	if element is an AssociationEnd use the namespace of containing association
WITHOUT_CLASSIFICATION	if one side is null, compare with the equality operator
WITHOUT_CLASSIFICATION	XXX: hypotheses for AFeatureCall: fwd = op, val = head
WITHOUT_CLASSIFICATION	hypotheses no time expression (only invariants)
WITHOUT_CLASSIFICATION	For a iterator call we should provide: (a) the variables (b) the expression to be evaluated on each step (c) the lambda-evaluator to evaluate it
WITHOUT_CLASSIFICATION	XXX hypothesis: no time expression (inv)
WITHOUT_CLASSIFICATION	@see tudresden.ocl.parser.analysis.DepthFirstAdapter#caseAConstraint(tudresden.ocl.parser.node.AConstraint)
WITHOUT_CLASSIFICATION	@see tudresden.ocl.parser.analysis.DepthFirstAdapter#caseAClassifierContext(tudresden.ocl.parser.node.AClassifierContext)
WITHOUT_CLASSIFICATION	these operations are ok for lists too
WITHOUT_CLASSIFICATION	LOG.log(Level.FINE, "OCL FEATURE CALL: " + subject + ""+ type +""+ feature + "" + parameters);
WITHOUT_CLASSIFICATION	XXX this should be done in CollectionsModelInterpreter but it can't trigger another invokeFeature...
WITHOUT_CLASSIFICATION	Logger. private static final Logger LOG = Logger.getLogger(DefaultOclEvaluator.class.getName());
WITHOUT_CLASSIFICATION	LOG.log(Level.FINE, "OCL: " + ocl);
WITHOUT_CLASSIFICATION	propagate
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	if test fails this element should not be in the result set
WITHOUT_CLASSIFICATION	if test is ok this element should not be in the result set
WITHOUT_CLASSIFICATION	these operations are ok for bags too
WITHOUT_CLASSIFICATION	4.5.2.1 Abstraction
WITHOUT_CLASSIFICATION	4.5.2.3 Association
WITHOUT_CLASSIFICATION	Additional Operation 4.5.3.1 [1]
WITHOUT_CLASSIFICATION	4.5.2.5 AssociationEnd
WITHOUT_CLASSIFICATION	Additional Operation 4.5.3.3 [1]
WITHOUT_CLASSIFICATION	4.5.2.6 Attribute
WITHOUT_CLASSIFICATION	4.5.2.7 BehavioralFeature
WITHOUT_CLASSIFICATION	4.5.2.8 Binding
WITHOUT_CLASSIFICATION	4.5.2.9 Class
WITHOUT_CLASSIFICATION	4.5.2.10 Classifier
WITHOUT_CLASSIFICATION	TODO specifiedEnd??
WITHOUT_CLASSIFICATION	4.5.2.11 Comment
WITHOUT_CLASSIFICATION	4.5.2.12 Component
WITHOUT_CLASSIFICATION	Additional Operation in 4.5.3.9
WITHOUT_CLASSIFICATION	No, scroll down one row
WITHOUT_CLASSIFICATION	4.5.2.14 Dependency
WITHOUT_CLASSIFICATION	4.5.2.18 ElementOwnership
WITHOUT_CLASSIFICATION	4.5.2.19 Enumeration
WITHOUT_CLASSIFICATION	4.5.2.20 EnumerationLiteral
WITHOUT_CLASSIFICATION	4.5.2.21 Feature
WITHOUT_CLASSIFICATION	4.5.2.23 Generalizable Element
WITHOUT_CLASSIFICATION	Additional Operation in 4.5.3.20
WITHOUT_CLASSIFICATION	4.5.2.26 Method
WITHOUT_CLASSIFICATION	4.5.2.27 ModelElement
WITHOUT_CLASSIFICATION	avoiding null names
WITHOUT_CLASSIFICATION	As extended by 4.6.2.2
WITHOUT_CLASSIFICATION	Additional Operations in 4.5.3.25
WITHOUT_CLASSIFICATION	Additional Operations in 4.5.3.26
WITHOUT_CLASSIFICATION	4.5.2.29 Node
WITHOUT_CLASSIFICATION	4.5.2.30 Operation
WITHOUT_CLASSIFICATION	4.5.2.31 Parameter
WITHOUT_CLASSIFICATION	4.5.2.35 ProgrammingLanguageDataType
WITHOUT_CLASSIFICATION	Set the icon:
WITHOUT_CLASSIFICATION	@see java.lang.Object#equals(java.lang.Object)
WITHOUT_CLASSIFICATION	@see java.lang.Object#hashCode()
WITHOUT_CLASSIFICATION	@see java.awt.Component#getMinimumSize()
WITHOUT_CLASSIFICATION	ignored - we only care about open/closing
WITHOUT_CLASSIFICATION	4.5.2.37 StructuralFeature
WITHOUT_CLASSIFICATION	4.5.2.38 TemplateArgument
WITHOUT_CLASSIFICATION	4.5.2.39 TemplateParameter
WITHOUT_CLASSIFICATION	4.11.3.5 UseCase
WITHOUT_CLASSIFICATION	The operation specificationPath results in a set containing all surrounding Namespaces that are not instances of Package. specificationPath : Set(Namespace) specificationPath = self.allSurroundingNamespaces->select(n | n.oclIsKindOf(Subsystem) or n.oclIsKindOf(Class))
WITHOUT_CLASSIFICATION	4.5.3.2 AssociationClass
WITHOUT_CLASSIFICATION	The operation allConnections results in the set of all AssociationEnds of the AssociationClass, including all connections defined by its parent (transitive closure).
WITHOUT_CLASSIFICATION	4.6.2.3 Stereotype
WITHOUT_CLASSIFICATION	stereotypeConstraint ?
WITHOUT_CLASSIFICATION	4.6.2.4 TagDefinition
WITHOUT_CLASSIFICATION	4.6.2.5 TaggedValue
WITHOUT_CLASSIFICATION	add adapters that do nothing for keyboard and mouse actions
WITHOUT_CLASSIFICATION	discard the event if its source is not from the correct type
WITHOUT_CLASSIFICATION	Guard against error conditions if climb search wasn't successful
WITHOUT_CLASSIFICATION	Sets the mouse cursor to hourglass mode
WITHOUT_CLASSIFICATION	Start receiving all events and consume them if necessary
WITHOUT_CLASSIFICATION	Activate the glass pane capabilities
WITHOUT_CLASSIFICATION	Stop receiving all events
WITHOUT_CLASSIFICATION	Deactivate the glass pane capabilities
WITHOUT_CLASSIFICATION	Sets the mouse cursor back to the regular pointer
WITHOUT_CLASSIFICATION	no initialization required
WITHOUT_CLASSIFICATION	end class SpacerPanel
WITHOUT_CLASSIFICATION	@see org.argouml.ui.TabTarget#setTarget(java.lang.Object)
WITHOUT_CLASSIFICATION	@see java.awt.datatransfer.Transferable#getTransferData(java.awt.datatransfer.DataFlavor)
WITHOUT_CLASSIFICATION	@see java.awt.datatransfer.Transferable#getTransferDataFlavors()
WITHOUT_CLASSIFICATION	@see java.awt.datatransfer.Transferable#isDataFlavorSupported(java.awt.datatransfer.DataFlavor)
WITHOUT_CLASSIFICATION	@see java.lang.Runnable#run()
WITHOUT_CLASSIFICATION	@see javax.swing.event.DocumentListener#insertUpdate(javax.swing.event.DocumentEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.DocumentListener#removeUpdate(javax.swing.event.DocumentEvent)
WITHOUT_CLASSIFICATION	Called when the user has pressed Save. Performs "Save" in all Tabs.
WITHOUT_CLASSIFICATION	Climb the component hierarchy until a RootPaneContainer is found or until the very top
WITHOUT_CLASSIFICATION	end class SplashPanel
WITHOUT_CLASSIFICATION	Retrieve an existing GlassPane if old one already exist or create a new one, otherwise return null
WITHOUT_CLASSIFICATION	Add settings from the settings registry.
WITHOUT_CLASSIFICATION	keep track of the visible window associated w/the component useful during event filtering
WITHOUT_CLASSIFICATION	show a chooser dialog for the file name, only xmi is allowed
WITHOUT_CLASSIFICATION	If a toolbar was requested, create an empty one.
WITHOUT_CLASSIFICATION	Increase width to accommodate all tabs on one row.
WITHOUT_CLASSIFICATION	TODO: Localize
WITHOUT_CLASSIFICATION	TODO: Localize
WITHOUT_CLASSIFICATION	Called when the user has pressed Cancel. Performs "Cancel" in all Tabs.
WITHOUT_CLASSIFICATION	end class TabText
WITHOUT_CLASSIFICATION	If a recursive call from setVisible(), just return
WITHOUT_CLASSIFICATION	ignored - we only care about open/closing
WITHOUT_CLASSIFICATION	windowOpen state will be changed when window is activated
WITHOUT_CLASSIFICATION	ignored - we only care about open/closing
WITHOUT_CLASSIFICATION	We have to tell the settings tab in which project the settings reside:
WITHOUT_CLASSIFICATION	ignored - we only care about open/closing
WITHOUT_CLASSIFICATION	We only request focus the first time we become visible
WITHOUT_CLASSIFICATION	Use Case
WITHOUT_CLASSIFICATION	@see java.awt.event.WindowListener#windowOpened(java.awt.event.WindowEvent)
WITHOUT_CLASSIFICATION	Do nothing - these buttons are not shown.
WITHOUT_CLASSIFICATION	Handle the same as an explicit cancel
WITHOUT_CLASSIFICATION	savePosition(prpTodo, TabToDo.class); savePosition(prpProperties, TabProps.class); savePosition(prpDocumentation, TabDocumentation.class); savePosition(prpStyle, TabStyle.class); savePosition(prpSource, TabSrc.class); savePosition(prpConstraints, TabConstraints.class); savePosition(prpTaggedValues, TabTaggedValues.class);
WITHOUT_CLASSIFICATION	defer work until fetched/visible
WITHOUT_CLASSIFICATION	Actor
WITHOUT_CLASSIFICATION	@see GUISettingsTabInterface#getTabKey()
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	Do nothing - these buttons are not shown.
WITHOUT_CLASSIFICATION	loadPosition(prpTodo, TabToDo.class); loadPosition(prpProperties, TabProps.class); loadPosition(prpDocumentation, TabDocumentation.class); loadPosition(prpStyle, TabStyle.class); loadPosition(prpSource, TabSrc.class); loadPosition(prpConstraints, TabConstraints.class); loadPosition(prpTaggedValues, TabTaggedValues.class);
WITHOUT_CLASSIFICATION	------------- Rule management --------------
WITHOUT_CLASSIFICATION	----------- name -------------------------
WITHOUT_CLASSIFICATION	------ all rules ----------
WITHOUT_CLASSIFICATION	TODO: factor out @param rule the rule to be added
WITHOUT_CLASSIFICATION	Put the current pane in a scroll pane.
WITHOUT_CLASSIFICATION	end class StylePanelFigText
WITHOUT_CLASSIFICATION	NOTE: These must stay in this order to match rendering styles
WITHOUT_CLASSIFICATION	The boundary box as held in the target fig, and as listed in the boundary box style field (null if we don't have anything valid)
WITHOUT_CLASSIFICATION	Only reset the text if the two are not the same (i.e the fig has moved, rather than we've just edited the text, when setTargetBBox() will have made them the same). Note that styleBounds could be null, so we do the test this way round.
WITHOUT_CLASSIFICATION	Change the fill colour
WITHOUT_CLASSIFICATION	Change the line colour
WITHOUT_CLASSIFICATION	Can't do anything if we don't have a fig.
WITHOUT_CLASSIFICATION	Parse the boundary box text. Null is returned if it is empty or invalid, which causes no change. Otherwise we tell GEF we are making a change, make the change and tell GEF we've finished.
WITHOUT_CLASSIFICATION	Get the text in the field, and don't do anything if the field is empty.
WITHOUT_CLASSIFICATION	Parse the string as if possible
WITHOUT_CLASSIFICATION	Empty implementation - we only care about keyTyped
WITHOUT_CLASSIFICATION	Empty implementation - we only care about keyTyped
WITHOUT_CLASSIFICATION	ignored - will never be called
WITHOUT_CLASSIFICATION	add preloading progress bar?
WITHOUT_CLASSIFICATION	JasonsThemes
WITHOUT_CLASSIFICATION	TODO - lets pass in Project as a constructor argument
WITHOUT_CLASSIFICATION	Make up a default
WITHOUT_CLASSIFICATION	lafClass == null ||
WITHOUT_CLASSIFICATION	Set to the default LAF
WITHOUT_CLASSIFICATION	top, left, bottom, right
WITHOUT_CLASSIFICATION	If LAF is Metal (either set explicitly, or as the default)
WITHOUT_CLASSIFICATION	Set a custom LAF
WITHOUT_CLASSIFICATION	@see javax.swing.JTree#fireTreeCollapsed(javax.swing.tree.TreePath)
WITHOUT_CLASSIFICATION	@see javax.swing.JTree#setModel(javax.swing.tree.TreeModel)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.plaf.metal.MetalTheme#getName()
WITHOUT_CLASSIFICATION	TODO: Localize
WITHOUT_CLASSIFICATION	TODO: Localize
WITHOUT_CLASSIFICATION	It looks better if the height increases, too
WITHOUT_CLASSIFICATION	TODO: 10 and 120 were found by trial and error. Calculate them.
WITHOUT_CLASSIFICATION	pack();
WITHOUT_CLASSIFICATION	Not localized:
WITHOUT_CLASSIFICATION	Alphabetic order!
WITHOUT_CLASSIFICATION	Alphabetic order!
WITHOUT_CLASSIFICATION	end class AboutBox
WITHOUT_CLASSIFICATION	Save project at slightly lower priority to keep UI responsive
WITHOUT_CLASSIFICATION	saves the project
WITHOUT_CLASSIFICATION	MVW: We should use default font sizes as much as possible. BTW, this impacts only the width, and reduces readibility:
WITHOUT_CLASSIFICATION	setFont(LookAndFeelMgr.getInstance().getSmallFont());
WITHOUT_CLASSIFICATION	This enables tooltips for tree; this one won't be shown:
WITHOUT_CLASSIFICATION	The default (16) puts the icons too close together:
WITHOUT_CLASSIFICATION	------------ methods that override JTree methods ---------
WITHOUT_CLASSIFICATION	If the name is too long or multi-line (e.g. for comments) then we reduce to the first line or 80 chars.
WITHOUT_CLASSIFICATION	Look for stereotype
WITHOUT_CLASSIFICATION	Use default formatting for any other type of UML element
WITHOUT_CLASSIFICATION	------------- other methods ------------------
WITHOUT_CLASSIFICATION	Labels at the left ...
WITHOUT_CLASSIFICATION	... and fields at the right.
WITHOUT_CLASSIFICATION	The user's full name:
WITHOUT_CLASSIFICATION	The user's email:
WITHOUT_CLASSIFICATION	The project description:
WITHOUT_CLASSIFICATION	This non-editable field shows the version of the ArgoUML that last saved this project:
WITHOUT_CLASSIFICATION	We need to fill the whole pane, so that the description field can take all available space:
WITHOUT_CLASSIFICATION	There is no default description.
WITHOUT_CLASSIFICATION	Defer all work until we're actually needed
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	these are blue in Metal Default Theme
WITHOUT_CLASSIFICATION	these are gray in Metal Default Theme
WITHOUT_CLASSIFICATION	ActionListener implementation
WITHOUT_CLASSIFICATION	/
WITHOUT_CLASSIFICATION	@see javax.swing.plaf.metal.MetalTheme#getPrimary1()
WITHOUT_CLASSIFICATION	private JCheckBox jchbBold = null;
WITHOUT_CLASSIFICATION	find and add all subdirectories
WITHOUT_CLASSIFICATION	private JCheckBox jchbItalic = null;
WITHOUT_CLASSIFICATION	Initialize font faces list
WITHOUT_CLASSIFICATION	Most of this code originates from ActionOpenProject.
WITHOUT_CLASSIFICATION	Initialize font sizes list
WITHOUT_CLASSIFICATION	jContentPane.add(getJchbBold(), gridBagConstraints2); jContentPane.add(getJchbItalic(), gridBagConstraints3);
WITHOUT_CLASSIFICATION	Try adding the extension from the chosen filter.
WITHOUT_CLASSIFICATION	MouseListener implementation
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	@see java.lang.Runnable#run()
WITHOUT_CLASSIFICATION	these are blue in Metal Default Theme
WITHOUT_CLASSIFICATION	these are gray in Metal Default Theme
WITHOUT_CLASSIFICATION	KeyListener implementation
WITHOUT_CLASSIFICATION	ListSelectionListener implementation
WITHOUT_CLASSIFICATION	diagrams are not placed in search results
WITHOUT_CLASSIFICATION	Only return once per diagram so we don't, for example, find a class as a diagram element and also as a child of a package which is on the diagram
WITHOUT_CLASSIFICATION	no related
WITHOUT_CLASSIFICATION	TODO: tabs for class, state, usecase, help
WITHOUT_CLASSIFICATION	empty implementation - we only handle mouseClicked
WITHOUT_CLASSIFICATION	TabResults has really large preferred height, so divide in half to reduce size of dialog which will be sized based on this preferred size.
WITHOUT_CLASSIFICATION	Load project at slightly lower priority to keep UI responsive
WITHOUT_CLASSIFICATION	JTabbedPane tabs = new JTabbedPane(); mainPanel.add(tabs, BorderLayout.CENTER); tabs.addTab("All Diagrams", allDiagrams);
WITHOUT_CLASSIFICATION	The south panel always has tabs - but they are added (later) elsewhere.
WITHOUT_CLASSIFICATION	loads the project
WITHOUT_CLASSIFICATION	default tab todo
WITHOUT_CLASSIFICATION	Special case for backward compatibility
WITHOUT_CLASSIFICATION	default tab todo
WITHOUT_CLASSIFICATION	Select prop panel if current panel is not appropriate for selected target
WITHOUT_CLASSIFICATION	not visible any more - so remove as listener
WITHOUT_CLASSIFICATION	Newly selected tab may have stale target info, so generate a new set target event for it to refresh it
WITHOUT_CLASSIFICATION	update the previously selected tab
WITHOUT_CLASSIFICATION	The other tabs need to be updated depending on the selection.
WITHOUT_CLASSIFICATION	empty implementation - we only handle mouseClicked
WITHOUT_CLASSIFICATION	empty implementation - we only handle mouseClicked
WITHOUT_CLASSIFICATION	empty implementation - we only handle mouseClicked
WITHOUT_CLASSIFICATION	TODO: Quick return here for target == null? - tfm
WITHOUT_CLASSIFICATION	@see javax.swing.event.DocumentListener#insertUpdate(javax.swing.event.DocumentEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.DocumentListener#removeUpdate(javax.swing.event.DocumentEvent)
WITHOUT_CLASSIFICATION	Process the listeners last to first, notifying those that are interested in this event
WITHOUT_CLASSIFICATION	Process the listeners last to first, notifying those that are interested in this event
WITHOUT_CLASSIFICATION	Lazily create the event:
WITHOUT_CLASSIFICATION	Lazily create the event:
WITHOUT_CLASSIFICATION	Lazily create the event:
WITHOUT_CLASSIFICATION	Lazily create the event:
WITHOUT_CLASSIFICATION	Lazily create the event:
WITHOUT_CLASSIFICATION	Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	---------------- listener management ----------------
WITHOUT_CLASSIFICATION	--------------- tree nodes -------------------------
WITHOUT_CLASSIFICATION	------------- tree structure -----------------
WITHOUT_CLASSIFICATION	see getValue(), setValue()
WITHOUT_CLASSIFICATION	Create a timer.
WITHOUT_CLASSIFICATION	Mount the glasspane on the component window
WITHOUT_CLASSIFICATION	keep track of the glasspane as an instance variable
WITHOUT_CLASSIFICATION	Start interception UI interactions
WITHOUT_CLASSIFICATION	@see javax.swing.event.DocumentListener#changedUpdate(javax.swing.event.DocumentEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ItemListener#itemStateChanged(java.awt.event.ItemEvent)
WITHOUT_CLASSIFICATION	If action comes in with no modifiers, it is a pure keyboard event (e.g. spacebar), so do it. Anything else is probably a mouse event, so ignore it. Mouse events are dealt with by mousePressed() instead (see bottom of page).
WITHOUT_CLASSIFICATION	end class StylePanel
WITHOUT_CLASSIFICATION	}
WITHOUT_CLASSIFICATION	Make sure the correspondence that we depend on doesn't change
WITHOUT_CLASSIFICATION	getContentPane().add(_menuBar, BorderLayout.NORTH);
WITHOUT_CLASSIFICATION	allows me to ask "Do you want to save first?"
WITHOUT_CLASSIFICATION	Add listener for project changes
WITHOUT_CLASSIFICATION	add listener to get notified when active diagram changes
WITHOUT_CLASSIFICATION	Add a listener to focus changes. Rationale: reset the undo manager to start a new chain.
WITHOUT_CLASSIFICATION	We get many many events (why?), so let's filter:
WITHOUT_CLASSIFICATION	create the todopane
WITHOUT_CLASSIFICATION	@see java.beans.PropertyChangeListener#propertyChange(java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.JFrame#getJMenuBar()
WITHOUT_CLASSIFICATION	@see java.awt.Component#setVisible(boolean)
WITHOUT_CLASSIFICATION	There are various details panes all of which could hold different tabs pages according to users settings. Place each pane in the required border area.
WITHOUT_CLASSIFICATION	Toolbar boundary is the area between the menu and the status bar. It contains the workarea at centre and the toolbar position north, south, east or west.
WITHOUT_CLASSIFICATION	Add target listeners for details panes
WITHOUT_CLASSIFICATION	Convenience methods to return saved width and height values
WITHOUT_CLASSIFICATION	In theory there can be multiple details pane (work in progress). It must first be determined which details page contains the properties tab. Bob Tarling 7 Dec 2002
WITHOUT_CLASSIFICATION	The trySave method results in the save taking place in another thread. If that completes without error the ProjectBrowser.exit() method will be called which will actually exist the system.
WITHOUT_CLASSIFICATION	end class WindowCloser
WITHOUT_CLASSIFICATION	the project changed
WITHOUT_CLASSIFICATION	Designer.TheDesigner.getToDoList().removeAllElements();
WITHOUT_CLASSIFICATION	update all panes
WITHOUT_CLASSIFICATION	/ TargetListener methods implemented so notified when selected diagram changes. Used to update the window title.
WITHOUT_CLASSIFICATION	this method is invoked from several places, so we have to check whether if the project uri is set or not
WITHOUT_CLASSIFICATION	does the file really exists?
WITHOUT_CLASSIFICATION	project file doesn't exist. let's pop up a message dialog..
WITHOUT_CLASSIFICATION	..and let's ask the user whether he wants to save the actual project into a new file or not
WITHOUT_CLASSIFICATION	save action has been cancelled
WITHOUT_CLASSIFICATION	Attempt to save this project under a new name.
WITHOUT_CLASSIFICATION	Prompt the user for the new name.
WITHOUT_CLASSIFICATION	let's call the real save method
WITHOUT_CLASSIFICATION	Repair any errors in the project
WITHOUT_CLASSIFICATION	notification of menu bar
WITHOUT_CLASSIFICATION	Simulate some errors to repair. Replace with junits - Bob
WITHOUT_CLASSIFICATION	Change to true to enable testing
WITHOUT_CLASSIFICATION	A Fig with a null owner
WITHOUT_CLASSIFICATION	A Fig with a null layer
WITHOUT_CLASSIFICATION	A Fig with a removed model element
WITHOUT_CLASSIFICATION	Remove the old project first. It's wasteful to create a temp empty project, but too much of ArgoUML depends on having a current project
WITHOUT_CLASSIFICATION	Let's save this project in the mru list
WITHOUT_CLASSIFICATION	Do nothing - these buttons are not shown.
WITHOUT_CLASSIFICATION	ignored - we only care about open/closing
WITHOUT_CLASSIFICATION	Let's save this project as the last used one in the configuration file
WITHOUT_CLASSIFICATION	an error that can be corrected by the user, so no stack trace, but instead an explanation and a hint how to fix
WITHOUT_CLASSIFICATION	an error that can be corrected by the user, so no stack trace, but instead an explanation and a hint how to fix
WITHOUT_CLASSIFICATION	This is temporary. Load project should create a new project with its own UndoManager and so there should be no Command
WITHOUT_CLASSIFICATION	Make sure save action is always reinstated
WITHOUT_CLASSIFICATION	We clear the save-required flag on the Swing event thread in the hopes that it gets done after any other background work (listener updates) that is being done there
WITHOUT_CLASSIFICATION	adding project files icon
WITHOUT_CLASSIFICATION	end class ProjectBrowser
WITHOUT_CLASSIFICATION	Defer initialization until we're visible
WITHOUT_CLASSIFICATION	Make the result inmediately visible in case of apply:
WITHOUT_CLASSIFICATION	Disabled since it gives various problems: e.g. the toolbar icons get too wide. Also the default does not give the new java 5.0 looks. SwingUtilities.updateComponentTreeUI(SwingUtilities.getRootPane(this));
WITHOUT_CLASSIFICATION	filled in later
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	@see GUISettingsTabInterface#handleSettingsTabSave()
WITHOUT_CLASSIFICATION	@see GUISettingsTabInterface#handleSettingsTabCancel()
WITHOUT_CLASSIFICATION	@see GUISettingsTabInterface#getTabKey()
WITHOUT_CLASSIFICATION	@see GUISettingsTabInterface#getTabPanel()
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#getColumnCount()
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#getColumnName(int)
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#getRowCount()
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#getValueAt(int, int)
WITHOUT_CLASSIFICATION	Do nothing - these buttons are not shown.
WITHOUT_CLASSIFICATION	ignored - we only care about open/closing
WITHOUT_CLASSIFICATION	Create new menu item if it doesn't exist for this class.
WITHOUT_CLASSIFICATION	Make this change persistant
WITHOUT_CLASSIFICATION	If menus don't containt menu item necessary for this class, create it
WITHOUT_CLASSIFICATION	If visibility is already changed for this class, respect it.
WITHOUT_CLASSIFICATION	If there is persistant state for this toolbar, respect it, or add it to persistance data
WITHOUT_CLASSIFICATION	Queue to event thread to prevent race during close
WITHOUT_CLASSIFICATION	Add toolbar.
WITHOUT_CLASSIFICATION	Register popup menu with toolbar.
WITHOUT_CLASSIFICATION	these settings are needed to make the ProgressMonitor pop up early
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed( java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.WindowListener#windowActivated(java.awt.event.WindowEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.WindowListener#windowDeiconified(java.awt.event.WindowEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.WindowListener#windowIconified(java.awt.event.WindowEvent)
WITHOUT_CLASSIFICATION	Add settings from the settings registry.
WITHOUT_CLASSIFICATION	Increase width to accommodate all tabs on one row.
WITHOUT_CLASSIFICATION	windowOpen state will be changed when window is activated
WITHOUT_CLASSIFICATION	Called when the user has pressed Save. Performs "Save" in all Tabs.
WITHOUT_CLASSIFICATION	Called when the user has pressed Cancel. Performs "Cancel" in all Tabs.
WITHOUT_CLASSIFICATION	We only request focus the first time we become visible
WITHOUT_CLASSIFICATION	ignored - we only care about open/closing
WITHOUT_CLASSIFICATION	ignored - we only care about open/closing
WITHOUT_CLASSIFICATION	Handle the same as an explicit cancel
WITHOUT_CLASSIFICATION	File load/save gets done on a background thread, so we'll probably have to queue this to the Swing event thread
WITHOUT_CLASSIFICATION	TODO: concatenate? - tfm overwrite for now
WITHOUT_CLASSIFICATION	end class StylePanelFigRRect
WITHOUT_CLASSIFICATION	Let the parent do its refresh.
WITHOUT_CLASSIFICATION	lets redraw the box
WITHOUT_CLASSIFICATION	@see java.awt.Component#getPreferredSize()
WITHOUT_CLASSIFICATION	@see java.awt.Component#getMinimumSize()
WITHOUT_CLASSIFICATION	Called when the user selects a tab, by clicking or otherwise. @see javax.swing.event.ChangeListener#stateChanged(javax.swing.event.ChangeEvent)
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	empty implementation - we only handle mouseClicked
WITHOUT_CLASSIFICATION	empty implementation - we only handle mouseClicked
WITHOUT_CLASSIFICATION	empty implementation - we only handle mouseClicked
WITHOUT_CLASSIFICATION	empty implementation - we only handle mouseClicked
WITHOUT_CLASSIFICATION	We don't know what thread events will be delivered on, so make sure we run Swing methods on the Swing thread
WITHOUT_CLASSIFICATION	This instead of the label ??? displayPane.setBorder(new TitledBorder( Translator.localize("Display: ")));
WITHOUT_CLASSIFICATION	add in front of the others add the label in front of the "pane"
WITHOUT_CLASSIFICATION	and finally, adjust the scrollbars to show the Fig
WITHOUT_CLASSIFICATION	% thresholds for bar color changes
WITHOUT_CLASSIFICATION	making it possible to jump to the modelroots
WITHOUT_CLASSIFICATION	org.argouml.ui.TabTable TabMetrics TabJavaSrc | TabSrc TabUMLDisplay TabHash
WITHOUT_CLASSIFICATION	Timer action method. Periodically update our stats and force a repaint.
WITHOUT_CLASSIFICATION	Virtual memory (heap) stats
WITHOUT_CLASSIFICATION	Thin bar to show current allocated heap size
WITHOUT_CLASSIFICATION	Thin bar to show current used
WITHOUT_CLASSIFICATION	@see GUISettingsTabInterface#getTabPanel()
WITHOUT_CLASSIFICATION	Do nothing - these buttons are not shown.
WITHOUT_CLASSIFICATION	the introducing label
WITHOUT_CLASSIFICATION	how to handle empty target lists? probably the MultiEditorPane should only show an empty pane in that case
WITHOUT_CLASSIFICATION	private JPanel constraintsTab = new JPanel();
WITHOUT_CLASSIFICATION	The child is sometimes not found when the tree is being updated
WITHOUT_CLASSIFICATION	private JTabbedPane tabs = new JTabbedPane();
WITHOUT_CLASSIFICATION	tabs.setMinimumSize(new Dimension(300, 250));
WITHOUT_CLASSIFICATION	private JPanel modifiedTab = new JPanel();
WITHOUT_CLASSIFICATION	The ActivityGraph.
WITHOUT_CLASSIFICATION	private JPanel tagValsTab = new JPanel();
WITHOUT_CLASSIFICATION	open space at gridy = 2;
WITHOUT_CLASSIFICATION	mainPanel.add(north, BorderLayout.NORTH);
WITHOUT_CLASSIFICATION	Any type
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed( java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	TODO: Localize
WITHOUT_CLASSIFICATION	MouseListener implementation
WITHOUT_CLASSIFICATION	empty implementation - we only handle mouseClicked
WITHOUT_CLASSIFICATION	empty implementation - we only handle mouseClicked
WITHOUT_CLASSIFICATION	empty implementation - we only handle mouseClicked
WITHOUT_CLASSIFICATION	empty implementation - we only handle mouseClicked
WITHOUT_CLASSIFICATION	This text is for the developers. It doesn't need to be localized.
WITHOUT_CLASSIFICATION	These shouldn't really be <br> instead of <p> elements, but the lines all get run together when pasted into a browser window.
WITHOUT_CLASSIFICATION	JPanel north = new JPanel(); north.setLayout(new BorderLayout()); north.add(tabs, BorderLayout.CENTER);
WITHOUT_CLASSIFICATION	initConstraintsTab(); tabs.addTab(Translator.localize("tab.constraints"), constraintsTab); tabs.setEnabledAt(3, false);
WITHOUT_CLASSIFICATION	initTagValsTab(); tabs.addTab(Translator.localize("dialog.find.tab.tagged-values"), tagValsTab); tabs.setEnabledAt(2, false);
WITHOUT_CLASSIFICATION	end class FindDialog
WITHOUT_CLASSIFICATION	name += " in " + dName;
WITHOUT_CLASSIFICATION	Not in UML 2.x (or metatypes) type.addItem(PredicateMType.create( Model.getMetaTypes().getActivityGraph()));
WITHOUT_CLASSIFICATION	Set the name and icon:
WITHOUT_CLASSIFICATION	help tab is 0
WITHOUT_CLASSIFICATION	end runGC_actionPerformed()
WITHOUT_CLASSIFICATION	end class PredicateMType
WITHOUT_CLASSIFICATION	end updateInfo()
WITHOUT_CLASSIFICATION	end class NavigatorPane
WITHOUT_CLASSIFICATION	end copy_actionPerformed()
WITHOUT_CLASSIFICATION	end class ActionGotoDiagram
WITHOUT_CLASSIFICATION	end class SystemInfoDialog
WITHOUT_CLASSIFICATION	clean the history
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	main methods
WITHOUT_CLASSIFICATION	But exclude elements that enclose others, since their algorithms to calculate the minimum size does not take enclosed objects into account:
WITHOUT_CLASSIFICATION	super(Translator.localize("action.size-to-fit-contents"));
WITHOUT_CLASSIFICATION	unsupported.
WITHOUT_CLASSIFICATION	Only resize elements which the user would also be able to resize:
WITHOUT_CLASSIFICATION	if a default action was voided then we have to save it
WITHOUT_CLASSIFICATION	Set the name:
WITHOUT_CLASSIFICATION	let's load the default shortcut for every action
WITHOUT_CLASSIFICATION	end class ActionFind
WITHOUT_CLASSIFICATION	let's load the current shortcut from the configuration (as a string)
WITHOUT_CLASSIFICATION	generate menu
WITHOUT_CLASSIFICATION	it should never go here!
WITHOUT_CLASSIFICATION	view menu
WITHOUT_CLASSIFICATION	file menu
WITHOUT_CLASSIFICATION	align submenu
WITHOUT_CLASSIFICATION	edit menu
WITHOUT_CLASSIFICATION	create menu
WITHOUT_CLASSIFICATION	arrange menu
WITHOUT_CLASSIFICATION	help menu
WITHOUT_CLASSIFICATION	help menu
WITHOUT_CLASSIFICATION	This ID is used as DEFAULT_ID !
WITHOUT_CLASSIFICATION	end class ActionAboutArgoUML
WITHOUT_CLASSIFICATION	distribute submenu
WITHOUT_CLASSIFICATION	end class ActionPageSetup
WITHOUT_CLASSIFICATION	trap focus traversal keys also
WITHOUT_CLASSIFICATION	let's add the key printing logic
WITHOUT_CLASSIFICATION	Lazily create the event:
WITHOUT_CLASSIFICATION	Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	The "Close window" shortcut (ALT+F4) actually can't be registered as a shortcut, because it closes the configuration dialog!
WITHOUT_CLASSIFICATION	if a not-default current shortcut was added, then we have to save it
WITHOUT_CLASSIFICATION	if the actual is not going to be saved, then try to remove it (as it could have been cancelled)
WITHOUT_CLASSIFICATION	no modifiers - let's check if the key is valid
WITHOUT_CLASSIFICATION	middle of shortcut
WITHOUT_CLASSIFICATION	Only show actions for associations not already on diagram
WITHOUT_CLASSIFICATION	add last recently used list _before_ exit menu
WITHOUT_CLASSIFICATION	KeyStroke f7 = KeyStroke.getKeyStroke(KeyEvent.VK_F7, 0);
WITHOUT_CLASSIFICATION	and exit menu entry starting with separator.
WITHOUT_CLASSIFICATION	This used to be deferred, but it's only 30-40 msec of work.
WITHOUT_CLASSIFICATION	now, let's set up the "selected action" container
WITHOUT_CLASSIFICATION	generate.add(Actions.GenerateWeb);
WITHOUT_CLASSIFICATION	Add the help menu item.
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	Set the name and icon:
WITHOUT_CLASSIFICATION	clean the history
WITHOUT_CLASSIFICATION	Comment out when we are ready to release undo/redo JMenuItem undoItem = edit.add( ProjectActions.getInstance().getUndoAction()); setMnemonic(undoItem, "Undo"); ShortcutMgr.assignAccelerator(undoItem, ShortcutMgr.ACTION_UNDO); JMenuItem redoItem = edit.add( ProjectActions.getInstance().getRedoAction()); setMnemonic(redoItem, "Redo"); ShortcutMgr.assignAccelerator(redoItem, ShortcutMgr.ACTION_REDO); edit.addSeparator();
WITHOUT_CLASSIFICATION	JMenuItem cutItem = edit.add(ActionCut.getInstance()); setMnemonic(cutItem, "Cut"); setAccelerator(cutItem, ctrlX); JMenuItem copyItem = edit.add(ActionCopy.getInstance()); setMnemonic(copyItem, "Copy"); setAccelerator(copyItem, ctrlC); JMenuItem pasteItem = edit.add(ActionPaste.getInstance()); setMnemonic(pasteItem, "Paste"); setAccelerator(pasteItem, ctrlV); edit.addSeparator();
WITHOUT_CLASSIFICATION	Create the edit toolbar based on the Menu. All menuItems that have an Icon are presumed to be based upon an Action, and these Actions are used in the toolbar.
WITHOUT_CLASSIFICATION	setHelpMenu(help);
WITHOUT_CLASSIFICATION	Component or Action
WITHOUT_CLASSIFICATION	set maximum length of menu entry
WITHOUT_CLASSIFICATION	JMenuItem item = _fileMenu.add(new ActionReopenProject(filename));
WITHOUT_CLASSIFICATION	the text is used by the event handler for opening the project
WITHOUT_CLASSIFICATION	create all nessessary configuration keys for lru
WITHOUT_CLASSIFICATION	holds file menu
WITHOUT_CLASSIFICATION	text is short, tooltip is long
WITHOUT_CLASSIFICATION	read existing file names from configuration
WITHOUT_CLASSIFICATION	empty entry stops reading --> last line!
WITHOUT_CLASSIFICATION	this is the recent count
WITHOUT_CLASSIFICATION	delete all existing entries
WITHOUT_CLASSIFICATION	add new entry as first entry
WITHOUT_CLASSIFICATION	add other existing entries, but filter the just added one
WITHOUT_CLASSIFICATION	save count
WITHOUT_CLASSIFICATION	and store configuration props
WITHOUT_CLASSIFICATION	end class ActionExit
WITHOUT_CLASSIFICATION	box.setLocationRelativeTo(jframe);
WITHOUT_CLASSIFICATION	end class ActionHelp
WITHOUT_CLASSIFICATION	instantiation not allowed
WITHOUT_CLASSIFICATION	end class ActionPrint
WITHOUT_CLASSIFICATION	let's add the table, inside a JScrollPane
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#getColumnCount()
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#getColumnName(int)
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#getRowCount()
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#getValueAt(int, int)
WITHOUT_CLASSIFICATION	Do nothing! The next time we refresh, we will fetch the values again.
WITHOUT_CLASSIFICATION	Do nothing - these buttons are not shown.
WITHOUT_CLASSIFICATION	main methods
WITHOUT_CLASSIFICATION	init from config read number, write result as new default and prepare keys
WITHOUT_CLASSIFICATION	get already existing names from menu actions real file names, not action names !
WITHOUT_CLASSIFICATION	let's enable the radiobuttons container
WITHOUT_CLASSIFICATION	updating the radiobuttons container's title
WITHOUT_CLASSIFICATION	let's select the correct radio button
WITHOUT_CLASSIFICATION	no shortcuts --> NONE
WITHOUT_CLASSIFICATION	current shortcut == default --> DEFAULT
WITHOUT_CLASSIFICATION	customized shortcut --> CUSTOM
WITHOUT_CLASSIFICATION	let's reload the shortcuts
WITHOUT_CLASSIFICATION	conflict detected: showing a warning to the user, instead of saving shortcuts
WITHOUT_CLASSIFICATION	saving shortcuts
WITHOUT_CLASSIFICATION	if a shortcut has been select then we have to check if the actual action is in conflict with other ones
WITHOUT_CLASSIFICATION	this shortcut was already been assigned to another action; let's pop-up a message for the user
WITHOUT_CLASSIFICATION	blanking the old action's shortcut.. and now refreshing the table.
WITHOUT_CLASSIFICATION	re-selecting the old row, without changing the target - and without throwing another ListSelectionEvent!
WITHOUT_CLASSIFICATION	let's change the target
WITHOUT_CLASSIFICATION	duplicate shortcut not found; let's check for duplicates
WITHOUT_CLASSIFICATION	there's a duplicate: let's recheck if there is a conflict
WITHOUT_CLASSIFICATION	updating the shortcut field
WITHOUT_CLASSIFICATION	updating the table data
WITHOUT_CLASSIFICATION	updating the actions
WITHOUT_CLASSIFICATION	the shortcut has already been assigned to another action!
WITHOUT_CLASSIFICATION	if the given object is a KeyStroke instance, then we ca
WITHOUT_CLASSIFICATION	let's update also the actions array
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	show a chooser dialog for the file name, only xmi is allowed
WITHOUT_CLASSIFICATION	The default nr of rows is 8, but since we have 9 perspectives by default now, setting to 9 is nicer.
WITHOUT_CLASSIFICATION	Check if multiple items are selected.
WITHOUT_CLASSIFICATION	profile section: dealing with profiles in different states
WITHOUT_CLASSIFICATION	1. a noneditable applied profile
WITHOUT_CLASSIFICATION	just no item added in this case
WITHOUT_CLASSIFICATION	3. the editable unapplied profile
WITHOUT_CLASSIFICATION	end of profile section
WITHOUT_CLASSIFICATION	Can't delete last top level model
WITHOUT_CLASSIFICATION	Determine if only diagrams are in the target list.
WITHOUT_CLASSIFICATION	"x nodes and x edges"
WITHOUT_CLASSIFICATION	Check to see if all targets are classifiers before adding an option to create an association between them all
WITHOUT_CLASSIFICATION	test if this element can be contained by the target
WITHOUT_CLASSIFICATION	iterate through all possible model elements to determine which are valid to be contained by the selected target
WITHOUT_CLASSIFICATION	end class ActionAddExistingRelatedNode
WITHOUT_CLASSIFICATION	this element can be contained add a menu item that allows the user to take that action
WITHOUT_CLASSIFICATION	... otherwise we select the item below the mousepointer.
WITHOUT_CLASSIFICATION	We preserve the current (multiple) selection, if we are over part of it ...
WITHOUT_CLASSIFICATION	unimplemented - we only care about expanding
WITHOUT_CLASSIFICATION	end class ExplorerMouseListener
WITHOUT_CLASSIFICATION	does nothing.
WITHOUT_CLASSIFICATION	need to update the selection state.
WITHOUT_CLASSIFICATION	Perform recursive search of subtree rooted at 'node', selecting all nodes which have a userObject matching one of our targets.
WITHOUT_CLASSIFICATION	get the elements
WITHOUT_CLASSIFICATION	instance variables
WITHOUT_CLASSIFICATION	target may appear multiple places in the tree, so we don't stop here (but it's expensive to search the whole tree) - tfm - 20070904 targets.remove(t); break;
WITHOUT_CLASSIFICATION	scan the visible rows for duplicates of this elem and select them
WITHOUT_CLASSIFICATION	check which targetmanager method to call
WITHOUT_CLASSIFICATION	we must call the correct method on targetmanager for each added or removed target
WITHOUT_CLASSIFICATION	we can't remove the targets in one go, we have to do it one by one.
WITHOUT_CLASSIFICATION	setTargets(e.getNewTargets());
WITHOUT_CLASSIFICATION	setTargets(e.getNewTargets());
WITHOUT_CLASSIFICATION	at the top right bottom left bottom
WITHOUT_CLASSIFICATION	the dialog is modal
WITHOUT_CLASSIFICATION	sortJListModel(ruleLibraryList);
WITHOUT_CLASSIFICATION	disable the buttons for now, since no selection has been made yet
WITHOUT_CLASSIFICATION	the text will be set later
WITHOUT_CLASSIFICATION	the text will be set later
WITHOUT_CLASSIFICATION	remove the ones already selected (if a perspective is selected)
WITHOUT_CLASSIFICATION	add them
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	update the label (which shows the number of rules)
WITHOUT_CLASSIFICATION	must add an editable list of new ExplorerPerspective's to the list model so that the original ones are not changed in the case of a cancel action by the user.
WITHOUT_CLASSIFICATION	set the newly selected item in the library list
WITHOUT_CLASSIFICATION	update the label (which shows the number of rules)
WITHOUT_CLASSIFICATION	set the newly selected item in the library list
WITHOUT_CLASSIFICATION	remove the rule from the library list
WITHOUT_CLASSIFICATION	The name of the UMLDiagram represented by this node has changed.
WITHOUT_CLASSIFICATION	uml model events
WITHOUT_CLASSIFICATION	notation events
WITHOUT_CLASSIFICATION	Handle remove for non-UML elements (e.g. diagrams)
WITHOUT_CLASSIFICATION	Get the selected targets (UML ModelElements) from the TargetManager.
WITHOUT_CLASSIFICATION	project events
WITHOUT_CLASSIFICATION	show a chooser dialog for the file name, only xmi is allowed
WITHOUT_CLASSIFICATION	get one of the default profile dirs, if available (as a default value for the following save dialog)
WITHOUT_CLASSIFICATION	save profile
WITHOUT_CLASSIFICATION	register it as a user profile
WITHOUT_CLASSIFICATION	this is safe because getName always returns a string of some type
WITHOUT_CLASSIFICATION	load user perspectives
WITHOUT_CLASSIFICATION	get the perspective name
WITHOUT_CLASSIFICATION	make sure there are some rules...
WITHOUT_CLASSIFICATION	get the rules
WITHOUT_CLASSIFICATION	get the rule name
WITHOUT_CLASSIFICATION	create the rule
WITHOUT_CLASSIFICATION	rule name but no rules
WITHOUT_CLASSIFICATION	add the perspective
WITHOUT_CLASSIFICATION	no user defined perspectives
WITHOUT_CLASSIFICATION	one last check that some loaded.
WITHOUT_CLASSIFICATION	works for both statediagram as activitygraph
WITHOUT_CLASSIFICATION	Enter here go rules only relevant for UML 2 empty for now
WITHOUT_CLASSIFICATION	The drag gesture recognizer fires events in response to drag gestures in a component.
WITHOUT_CLASSIFICATION	specifies valid actions
WITHOUT_CLASSIFICATION	Eliminates right mouse clicks as valid actions
WITHOUT_CLASSIFICATION	First argument: Component to associate the target with Second argument: DropTargetListener
WITHOUT_CLASSIFICATION	Get the cell renderer (which is a JLabel) for the path being dragged.
WITHOUT_CLASSIFICATION	The layout manager would normally do this:
WITHOUT_CLASSIFICATION	Get a buffered image of the selection for dragging a ghost image
WITHOUT_CLASSIFICATION	Ask the cell renderer to paint itself into the BufferedImage. Make the image ghostlike.
WITHOUT_CLASSIFICATION	Now paint a gradient UNDER the ghosted JLabel text (but not under the icon if any).
WITHOUT_CLASSIFICATION	Make the gradient ghostlike:
WITHOUT_CLASSIFICATION	Remember the path being dragged (because if it is being moved, we will have to delete it later).
WITHOUT_CLASSIFICATION	We pass our drag image just in case it IS supported by the platform.
WITHOUT_CLASSIFICATION	If the destination is not a NameSpace, then abort:
WITHOUT_CLASSIFICATION	If the destination is a DataType, then abort:
WITHOUT_CLASSIFICATION	We are sure "dest" is a Namespace now.
WITHOUT_CLASSIFICATION	MVW: These are the WFRs for DataType: [1] A DataType can only contain Operations, which all must be queries. self.allFeatures->forAll(f | f.oclIsKindOf(Operation) and f.oclAsType(Operation).isQuery) [2] A DataType cannot contain any other ModelElements. self.allContents->isEmpty IMHO we should enforce these WFRs here. ... so it is still possible to copy or move query operations, hence we should allow this.
WITHOUT_CLASSIFICATION	Let's check all dragged elements - if one of these may be dropped, then the drag is valid. The others will be ignored when dropping.
WITHOUT_CLASSIFICATION	empty implementation - not used.
WITHOUT_CLASSIFICATION	empty implementation - not used.
WITHOUT_CLASSIFICATION	empty implementation - not used.
WITHOUT_CLASSIFICATION	Figure out which row we're on.
WITHOUT_CLASSIFICATION	If we are not on a row then ignore this autoscroll request
WITHOUT_CLASSIFICATION	We are sure "dest" is a Namespace now.
WITHOUT_CLASSIFICATION	Autoscroll Interface... The following code was borrowed from the book: Java Swing By Robert Eckstein, Marc Loy & Dave Wood Paperback - 1221 pages 1 Ed edition (September 1998) O'Reilly & Associates; ISBN: 156592455X The relevant chapter of which can be found at: http:www.oreilly.com/catalog/jswing/chapter/dnd.beta.pdf
WITHOUT_CLASSIFICATION	Now decide if the row is at the top of the screen or at the bottom. We do this to make the previous row (or the next row) visible as appropriate. If were at the absolute top or bottom, just return the first or last row respectively.
WITHOUT_CLASSIFICATION	Set up a hover timer, so that a node will be automatically expanded or collapsed if the user lingers on it for more than a short time.
WITHOUT_CLASSIFICATION	isRootPath
WITHOUT_CLASSIFICATION	Set timer to one-shot mode
WITHOUT_CLASSIFICATION	LOG.log(Level.FINE, "dragOver");
WITHOUT_CLASSIFICATION	The next condition becomes false when dragging in something from another application.
WITHOUT_CLASSIFICATION	If a drag image is not supported by the platform, then draw my own drag image.
WITHOUT_CLASSIFICATION	Rub out the last ghost image and cue line:
WITHOUT_CLASSIFICATION	And remember where we are about to draw the new ghost image:
WITHOUT_CLASSIFICATION	Just rub out the last cue line
WITHOUT_CLASSIFICATION	In any case draw (over the ghost image if necessary) a cue line indicating where a drop will occur.
WITHOUT_CLASSIFICATION	And include the cue line in the area to be rubbed out next time
WITHOUT_CLASSIFICATION	Testcase: drag something from another application into ArgoUML, and the explorer shows the drop icon, instead of the noDrop.
WITHOUT_CLASSIFICATION	to prohibit dropping onto the drag source:
WITHOUT_CLASSIFICATION	If the destination is not a NameSpace, then reject:
WITHOUT_CLASSIFICATION	If the destination is a DataType, then reject:
WITHOUT_CLASSIFICATION	Prevent hover timer from doing an unwanted expandPath or collapsePath:
WITHOUT_CLASSIFICATION	Clear the ghost image:
WITHOUT_CLASSIFICATION	get new parent node
WITHOUT_CLASSIFICATION	get the model elements that are being transfered.
WITHOUT_CLASSIFICATION	The user-DropActions are: Ctrl + Shift -> ACTION_LINK Ctrl -> ACTION_COPY Shift -> ACTION_MOVE (none) -> ACTION_MOVE
WITHOUT_CLASSIFICATION	Only accept COPY or MOVE gestures (ie LINK is not supported)
WITHOUT_CLASSIFICATION	Only accept COPY or MOVE gestures (ie LINK is not supported)
WITHOUT_CLASSIFICATION	Do this if you want to prohibit dropping onto the drag source...
WITHOUT_CLASSIFICATION	Do this if you want to prohibit dropping onto the drag source...
WITHOUT_CLASSIFICATION	end class
WITHOUT_CLASSIFICATION	remove references for gc
WITHOUT_CLASSIFICATION	This should only be helpful for old garbage collectors.
WITHOUT_CLASSIFICATION	Avoid doing this too early in the initialization process
WITHOUT_CLASSIFICATION	Avoid recursively updating the same child
WITHOUT_CLASSIFICATION	@see javax.swing.tree.DefaultTreeModel#insertNodeInto(javax.swing.tree.MutableTreeNode, javax.swing.tree.MutableTreeNode, int)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.DefaultTreeModel#removeNodeFromParent(javax.swing.tree.MutableTreeNode)
WITHOUT_CLASSIFICATION	This is somewhat inconsistent with the design of the constructor that receives the root object by argument. If this is okay then there may be no need for a constructor with that argument.
WITHOUT_CLASSIFICATION	Enumerate the current children of node to find out which now sorts in different order, since these must be moved
WITHOUT_CLASSIFICATION	Avoid our deinitialization here The node will be added back to the tree again
WITHOUT_CLASSIFICATION	For each reordered node, find it's new position among the current children and move it there
WITHOUT_CLASSIFICATION	Avoid our initialization here
WITHOUT_CLASSIFICATION	Collect the current set of objects that should be children to this node
WITHOUT_CLASSIFICATION	Handle WeakExplorerNodes
WITHOUT_CLASSIFICATION	Remove the node from removeSet
WITHOUT_CLASSIFICATION	Remove obj3 from weakNodes and newChildren
WITHOUT_CLASSIFICATION	Remember that children are not TreeNodes but UserObjects
WITHOUT_CLASSIFICATION	Add any remaining nodes
WITHOUT_CLASSIFICATION	it is the combo for "order"
WITHOUT_CLASSIFICATION	Lazily create the event:
WITHOUT_CLASSIFICATION	Order the new children, the dependencies cannot and need not be ordered
WITHOUT_CLASSIFICATION	TODO: What?
WITHOUT_CLASSIFICATION	TODO: What?
WITHOUT_CLASSIFICATION	Sequence diagrams are not shown as children of the collaboration that they show but as children of the classifier/operation the collaboration represents. Statediagrams and activitydiagrams are shown as children of the statemachine or activitygraph they belong to.
WITHOUT_CLASSIFICATION	was ""
WITHOUT_CLASSIFICATION	TODO: What?
WITHOUT_CLASSIFICATION	abstractions are represented in the Inheritance Node.
WITHOUT_CLASSIFICATION	abstractions are represented in the Inheritance Node.
WITHOUT_CLASSIFICATION	abstractions are represented in the Inheritance Node.
WITHOUT_CLASSIFICATION	abstractions are represented in the Inheritance Node.
WITHOUT_CLASSIFICATION	the name of this instance of diagram
WITHOUT_CLASSIFICATION	TODO: What?
WITHOUT_CLASSIFICATION	TODO: What?
WITHOUT_CLASSIFICATION	TODO: What?
WITHOUT_CLASSIFICATION	TODO: What?
WITHOUT_CLASSIFICATION	TODO: What?
WITHOUT_CLASSIFICATION	TODO: What?
WITHOUT_CLASSIFICATION	Also show unattached sequence diagrams:
WITHOUT_CLASSIFICATION	TODO: What?
WITHOUT_CLASSIFICATION	in UML2, we don't want to see element imports in profiles
WITHOUT_CLASSIFICATION	(MAssociationEnd)
WITHOUT_CLASSIFICATION	(MAssociationEnd)
WITHOUT_CLASSIFICATION	(MAssociationEnd)
WITHOUT_CLASSIFICATION	Rule for Project->Root (Top level) Elements. TODO: As currently implemented it returns all top level elements in the model repository, not just those in a given project. Since we only support a single project at a time currently, these are equivalent but this will need to be enhanced with additional bookkeeping in Project when we support multiple open projects - tfm. TODO: I changed it to get the roots from the project. It was showing the profiles that were loaded but were not applied to the current project - maurelio1234. @author Tom Morris <tfmorris@gmail.com>
WITHOUT_CLASSIFICATION	in UML2, some elements are not to be shown
WITHOUT_CLASSIFICATION	don't show a profile application
WITHOUT_CLASSIFICATION	don't show element imports in profiles
WITHOUT_CLASSIFICATION	don't show extensions in profiles
WITHOUT_CLASSIFICATION	&& Model.getFacade().isAProperty(o)
WITHOUT_CLASSIFICATION	don't show base_... properties in stereotypes
WITHOUT_CLASSIFICATION	"N/A" or "x nodes and x edges"
WITHOUT_CLASSIFICATION	TODO: What?
WITHOUT_CLASSIFICATION	TODO: What?
WITHOUT_CLASSIFICATION	TODO: What?
WITHOUT_CLASSIFICATION	Transition
WITHOUT_CLASSIFICATION	TODO: What?
WITHOUT_CLASSIFICATION	TODO: what?
WITHOUT_CLASSIFICATION	Todo: What?
WITHOUT_CLASSIFICATION	First get the collection of ElementResidence
WITHOUT_CLASSIFICATION	Lazily create the event:
WITHOUT_CLASSIFICATION	Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	TODO: What?
WITHOUT_CLASSIFICATION	TODO: what?
WITHOUT_CLASSIFICATION	only targets we didn't have allready count
WITHOUT_CLASSIFICATION	If nothing selected, go to last selected target
WITHOUT_CLASSIFICATION	Needed for Argo startup :-(
WITHOUT_CLASSIFICATION	Remove duplicates and take care of getOwner() and remove nulls:
WITHOUT_CLASSIFICATION	|| !targets.contains(target)
WITHOUT_CLASSIFICATION	targets.remove(target);
WITHOUT_CLASSIFICATION	Lazily create the event:
WITHOUT_CLASSIFICATION	Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	implement set-like behaviour. The same element may not be added more then once.
WITHOUT_CLASSIFICATION	we put the targets 'backwards' in the history since the first target in the addedTargets array is the first one selected.
WITHOUT_CLASSIFICATION	cannot break here since an object can be multiple times in history
WITHOUT_CLASSIFICATION	CommentEdge - the owner of a FigEdgeNote
WITHOUT_CLASSIFICATION	check if there are new elements in the list if the old and new list are of the same size set the oldTargets to the correct selection
WITHOUT_CLASSIFICATION	If not found, try the parent namespace
WITHOUT_CLASSIFICATION	Listen for the removal of diagrams from project
WITHOUT_CLASSIFICATION	give priority to standard documentation tag
WITHOUT_CLASSIFICATION	Figs on a diagram without an owning model element
WITHOUT_CLASSIFICATION	end class DocumentationManager
WITHOUT_CLASSIFICATION	TODO: Needs localization
WITHOUT_CLASSIFICATION	end class ChildGenRelated
WITHOUT_CLASSIFICATION	Convert the string (e.g. "aaa,bbb,ccc") into separate stereotype-names (e.g. "aaa", "bbb", "ccc").
WITHOUT_CLASSIFICATION	adds all stereotypes defined at the top level namespaces
WITHOUT_CLASSIFICATION	and now remove them
WITHOUT_CLASSIFICATION	collect the to be removed stereotypes
WITHOUT_CLASSIFICATION	the name of this type of diagram
WITHOUT_CLASSIFICATION	add stereotypes
WITHOUT_CLASSIFICATION	Loop through each element in the namespace, recursing.
WITHOUT_CLASSIFICATION	end class UUIDManager
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#setValueAt(java.lang.Object, int, int)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.util.ChildGenerator#gen(java.lang.Object)
WITHOUT_CLASSIFICATION	Instance
WITHOUT_CLASSIFICATION	comments
WITHOUT_CLASSIFICATION	For all other model elements, return any elements associated in any way
WITHOUT_CLASSIFICATION	adds all stereotypes defined at the profiles applied to the current namespace
WITHOUT_CLASSIFICATION	adds all stereotypes defined at the profiles applied to the current project
WITHOUT_CLASSIFICATION	TableModel implementation
WITHOUT_CLASSIFICATION	the name of this type of ModelElement
WITHOUT_CLASSIFICATION	the name of this instance of ModelElement
WITHOUT_CLASSIFICATION	the name of the parent diagram instance
WITHOUT_CLASSIFICATION	the name of this type of Object
WITHOUT_CLASSIFICATION	not safe to presume the destination is the comment
WITHOUT_CLASSIFICATION	this also sets the target as a convenient side effect
WITHOUT_CLASSIFICATION	This is the tooltip of a comment link
WITHOUT_CLASSIFICATION	Class
WITHOUT_CLASSIFICATION	end class ProjectMemberModel
WITHOUT_CLASSIFICATION	??
WITHOUT_CLASSIFICATION	??
WITHOUT_CLASSIFICATION	??
WITHOUT_CLASSIFICATION	Association
WITHOUT_CLASSIFICATION	Attribute
WITHOUT_CLASSIFICATION	State
WITHOUT_CLASSIFICATION	Operation
WITHOUT_CLASSIFICATION	Interface
WITHOUT_CLASSIFICATION	Link
WITHOUT_CLASSIFICATION	This function will, by design, contain long lists of i18n keys. It might be tempting to shorten these by constructing them from the parts but please then consider that we might loose the possibility to build tools to statically check the property files against this file.
WITHOUT_CLASSIFICATION	umlReserved.add("document");
WITHOUT_CLASSIFICATION	replace all occurances of OFFENDER with the name of the first offender
WITHOUT_CLASSIFICATION	check for all uppercase and/or mixed with underscores
WITHOUT_CLASSIFICATION	umlReserved.add("file");
WITHOUT_CLASSIFICATION	umlReserved.add("node");
WITHOUT_CLASSIFICATION	umlReserved.add("send");
WITHOUT_CLASSIFICATION	The modelelement must have been deleted - ignore this - it will pass.
WITHOUT_CLASSIFICATION	TODO: This could just work off the names in the UML profile TODO: It doesn't look like it matches what's in the UML 1.4 spec
WITHOUT_CLASSIFICATION	umlReserved.add("destroy");
WITHOUT_CLASSIFICATION	self.allConnections->forAll(ar|ar.participant <> self)
WITHOUT_CLASSIFICATION	end class CrCircularAssocClass
WITHOUT_CLASSIFICATION	(MAttribute)
WITHOUT_CLASSIFICATION	If the name is only underscores
WITHOUT_CLASSIFICATION	@see javax.swing.Icon#paintIcon(java.awt.Component, java.awt.Graphics, int, int)
WITHOUT_CLASSIFICATION	@see javax.swing.Icon#getIconWidth()
WITHOUT_CLASSIFICATION	@see javax.swing.Icon#getIconHeight()
WITHOUT_CLASSIFICATION	@see javax.swing.Icon#paintIcon(java.awt.Component, java.awt.Graphics, int, int)
WITHOUT_CLASSIFICATION	@see javax.swing.Icon#getIconWidth()
WITHOUT_CLASSIFICATION	@see javax.swing.Icon#getIconHeight()
WITHOUT_CLASSIFICATION	umlReserved.add("initial"); umlReserved.add("final"); umlReserved.add("fork"); umlReserved.add("join"); umlReserved.add("history");
WITHOUT_CLASSIFICATION	umlReserved.add("copy"); umlReserved.add("create");
WITHOUT_CLASSIFICATION	Types can probably have associations, but we should not nag at them not having any. utility is a namespace collection - also not strictly required to have associations.
WITHOUT_CLASSIFICATION	end class ClAttributeCompartment
WITHOUT_CLASSIFICATION	check whether constant, constants are often weird and thus not a problem
WITHOUT_CLASSIFICATION	why are we here?
WITHOUT_CLASSIFICATION	If the classifier does not have a name, then no problem - the model is not finished anyhow.
WITHOUT_CLASSIFICATION	added by Eric Lefevre 13 Mar 1999: we must check if the FigText for attributes is drawn before drawing things over it
WITHOUT_CLASSIFICATION	Abstract elements do not necessarily require associations
WITHOUT_CLASSIFICATION	TODO: different critic or special message for classes that inherit all ops but define none of their own.
WITHOUT_CLASSIFICATION	instance variables
WITHOUT_CLASSIFICATION	added by Eric Lefevre 13 Mar 1999: we must check if the FigText for operations is drawn before drawing things over it
WITHOUT_CLASSIFICATION	special cases for use cases Extending use cases and use case that are being included are not required to have associations.
WITHOUT_CLASSIFICATION	for use cases we need to check for extend/includes actors cannot have them, so no need to check
WITHOUT_CLASSIFICATION	Get the ends from the association (we know there are two), and the types associated with them.
WITHOUT_CLASSIFICATION	The association that triggered the critic. Its just possible the association is no longer there, in which case we return null
WITHOUT_CLASSIFICATION	end class ClOperationCompartment
WITHOUT_CLASSIFICATION	First step. Create the panel if not already done and options are available. Otherwise it retains its default value of null.
WITHOUT_CLASSIFICATION	Now create the five options
WITHOUT_CLASSIFICATION	Get the names of the two ends. If there are none (i.e they are currently anonymous), use the ArgoUML convention of "(anon)" for the names
WITHOUT_CLASSIFICATION	Default (any other step) is to return nothing
WITHOUT_CLASSIFICATION	Just completed the first step where we make our choices. First see if we have a choice. We always should, so print a rude message if we don't
WITHOUT_CLASSIFICATION	Set the appropriate aggregation on each end
WITHOUT_CLASSIFICATION	It is quite possible that the cause of the problem has by now been deleted, in which case we will throw an exception if we try to change things. Catch this tidily.
WITHOUT_CLASSIFICATION	Start is a composite aggregation of end
WITHOUT_CLASSIFICATION	Start is a shared aggregation of end
WITHOUT_CLASSIFICATION	End is a composite aggregation of start
WITHOUT_CLASSIFICATION	End is a shared aggregation of start
WITHOUT_CLASSIFICATION	No aggregation
WITHOUT_CLASSIFICATION	Someone took our association away.
WITHOUT_CLASSIFICATION	Can't finish if our parent can't
WITHOUT_CLASSIFICATION	Can finish if it's step 0
WITHOUT_CLASSIFICATION	Can finish if we're on step1 and have actually made a choice
WITHOUT_CLASSIFICATION	Otherwise we can't finish
WITHOUT_CLASSIFICATION	TODO: The WFR doesn't restrict this to Classifiers - tfm
WITHOUT_CLASSIFICATION	TODO: The WFR doesn't restrict this to Classifiers - tfm
WITHOUT_CLASSIFICATION	Model.getFacade().getModelElement(
WITHOUT_CLASSIFICATION	)
WITHOUT_CLASSIFICATION	replace all occurances of OFFENDER with the name of the first offender
WITHOUT_CLASSIFICATION	check if there is no OCL_END; if so, the critic expression is not correct and can not be expanded
WITHOUT_CLASSIFICATION	Get the Association and its connections. Iterate over all the AssociationEnds and check that each connected classifier is in the same sub-system or model
WITHOUT_CLASSIFICATION	display related methods
WITHOUT_CLASSIFICATION	end class CrInterfaceAllPublic
WITHOUT_CLASSIFICATION	return original string if no replacements made
WITHOUT_CLASSIFICATION	If we drop out there is no problem
WITHOUT_CLASSIFICATION	Only look at associations
WITHOUT_CLASSIFICATION	end class CrCrossNamespaceAssoc
WITHOUT_CLASSIFICATION	TODO: different critic for packages consisting only of references to elements of other packages?
WITHOUT_CLASSIFICATION	The next AssociationEnd, and its classifier. Check the classifier is in the namespace of the association. If not we have a problem.
WITHOUT_CLASSIFICATION	original class was not abstract
WITHOUT_CLASSIFICATION	theStereotype.setStereotype(???);
WITHOUT_CLASSIFICATION	found a concrete subclass
WITHOUT_CLASSIFICATION	Nothing to do.
WITHOUT_CLASSIFICATION	no concrete subclasses defined, this class is "useless"
WITHOUT_CLASSIFICATION	see if there is already an element with the same name
WITHOUT_CLASSIFICATION	end class CrClassMustBeAbstract
WITHOUT_CLASSIFICATION	end class CrUselessAbstract
WITHOUT_CLASSIFICATION	(MClassifier)
WITHOUT_CLASSIFICATION	Only look at classes
WITHOUT_CLASSIFICATION	TODO: different critic or special message for classes that inherit all ops but define none of their own.
WITHOUT_CLASSIFICATION	utility is a namespace collection - also not strictly required to have operations.
WITHOUT_CLASSIFICATION	end class CrTooManyAssoc
WITHOUT_CLASSIFICATION	end class CrUselessInterface
WITHOUT_CLASSIFICATION	end class CrComponentInstanceWithoutClassifier
WITHOUT_CLASSIFICATION	end class CrTooManyClasses
WITHOUT_CLASSIFICATION	We don't consider secondary stuff.
WITHOUT_CLASSIFICATION	if the object does not have a name, than no problem
WITHOUT_CLASSIFICATION	types can probably contain operations, but we should not nag at them not having any.
WITHOUT_CLASSIFICATION	Types don't need a constructor.
WITHOUT_CLASSIFICATION	Utilities usually do not require a constructor either
WITHOUT_CLASSIFICATION	Check for uninitialised instance variables and constructor.
WITHOUT_CLASSIFICATION	Get all the features (giving up if there are none). Then loop through finding all operations. Each time we find one, we compare its signature with all previous (held in collection operSeen), and then if it doesn't match add it to the collection.
WITHOUT_CLASSIFICATION	There is a constructor.
WITHOUT_CLASSIFICATION	end class CrTooManyStates
WITHOUT_CLASSIFICATION	We have found a non-static one that is not initialized.
WITHOUT_CLASSIFICATION	Compare against all earlier operations. If there's a match we've found the problem
WITHOUT_CLASSIFICATION	Check that the parameter lists match.
WITHOUT_CLASSIFICATION	Add to the collection and round to look at the next one
WITHOUT_CLASSIFICATION	yeah right...we don't have an operation (and thus no
WITHOUT_CLASSIFICATION	This pair of params where the same. Lets check the next pair.
WITHOUT_CLASSIFICATION	Only do this for classifiers
WITHOUT_CLASSIFICATION	Get the next non-return parameter. Null if non left.
WITHOUT_CLASSIFICATION	If we drop out here, there was no match and we have no problem
WITHOUT_CLASSIFICATION	Check that the names match.
WITHOUT_CLASSIFICATION	Both lists have the same length
WITHOUT_CLASSIFICATION	Both lists have the same length.
WITHOUT_CLASSIFICATION	Different lengths:
WITHOUT_CLASSIFICATION	end class CrMultiComposite
WITHOUT_CLASSIFICATION	Compare the type of the parameters. If any of the types is null, then we have a match.
WITHOUT_CLASSIFICATION	normal model elements are not allowed to have spaces, but for States we make an exception
WITHOUT_CLASSIFICATION	initialize test data
WITHOUT_CLASSIFICATION	end class CrIllegalName
WITHOUT_CLASSIFICATION	dm is a transition
WITHOUT_CLASSIFICATION	initialize new ToDoItem
WITHOUT_CLASSIFICATION	the source of the transition is a pseudostate
WITHOUT_CLASSIFICATION	the source of the transition is a choice
WITHOUT_CLASSIFICATION	end class CrTooManyAttr
WITHOUT_CLASSIFICATION	critiquing API
WITHOUT_CLASSIFICATION	end class CrZeroLengthEdge
WITHOUT_CLASSIFICATION	(MStateVertex)
WITHOUT_CLASSIFICATION	(MAssociationEnd)
WITHOUT_CLASSIFICATION	only classes with name need a constructor
WITHOUT_CLASSIFICATION	Forks have their own outgoing transitions critic
WITHOUT_CLASSIFICATION	types can probably have variables, but we should not nag at them not having any.
WITHOUT_CLASSIFICATION	code generation
WITHOUT_CLASSIFICATION	utility is a namespace collection - also not strictly required to have variables.
WITHOUT_CLASSIFICATION	If we find an instance variable that is not a constant we have succeeded
WITHOUT_CLASSIFICATION	I am only prepared to go this far.
WITHOUT_CLASSIFICATION	(Classifier)
WITHOUT_CLASSIFICATION	first element is e.g. the class, but we need to have its namespace to recompute the offenders.
WITHOUT_CLASSIFICATION	Compound critics
WITHOUT_CLASSIFICATION	warn about inherited name conflicts, different critic?
WITHOUT_CLASSIFICATION	warn about inherited name conflicts, different critic?
WITHOUT_CLASSIFICATION	(MAssociation)
WITHOUT_CLASSIFICATION	Only look at Associations
WITHOUT_CLASSIFICATION	container state / composite state
WITHOUT_CLASSIFICATION	Iterate over all the AssociationEnds. We only have a problem if 1) there is an end connected to an Interface and 2) an end other than that end is navigable.
WITHOUT_CLASSIFICATION	both ends must be classes, otherwise there is nothing to merge
WITHOUT_CLASSIFICATION	We can give up looking if we've hit both criteria
WITHOUT_CLASSIFICATION	both ends must be navigable, otherwise there is nothing to merge
WITHOUT_CLASSIFICATION	End at an Interface? Navigable other end?
WITHOUT_CLASSIFICATION	end class CrMergeClasses
WITHOUT_CLASSIFICATION	Specify design issue category and knowledge type
WITHOUT_CLASSIFICATION	If we drop out we didn't meet both criteria, and all is well.
WITHOUT_CLASSIFICATION	The next AssociationEnd
WITHOUT_CLASSIFICATION	If its an interface we have an interface end, otherwise its something else and we should see if it is navigable. We don't check that the end is a Classifier, rather than its child ClassifierRole, since we have effectively eliminated that possiblity in rejecting AssociationRoles above.
WITHOUT_CLASSIFICATION	end class CrNavFromInterface
WITHOUT_CLASSIFICATION	(MCompositeState)
WITHOUT_CLASSIFICATION	end class CrNoInitialState
WITHOUT_CLASSIFICATION	critiquing API
WITHOUT_CLASSIFICATION	end class CrInstanceWithoutClassifier
WITHOUT_CLASSIFICATION	Now we are sure dm is a Composite State.
WITHOUT_CLASSIFICATION	In DeploymentDiagrams the situation is not the same as in other diagrams only classes, interfaces and objects can intersect each other while they are not the EnclosingFig, so you have to prouve only these elements.
WITHOUT_CLASSIFICATION	Now we are sure dm is a StateVertex.
WITHOUT_CLASSIFICATION	Now we are sure dm is a State.
WITHOUT_CLASSIFICATION	If dm is the top state of the statemachine, then it is not supposed to have incoming transitions.
WITHOUT_CLASSIFICATION	(MAssociationEnd)
WITHOUT_CLASSIFICATION	(MAssociation)
WITHOUT_CLASSIFICATION	container state / composite state
WITHOUT_CLASSIFICATION	end class CrInvalidSynch
WITHOUT_CLASSIFICATION	no good trigger
WITHOUT_CLASSIFICATION	end class CrConflictingComposites
WITHOUT_CLASSIFICATION	end class CrAlreadyRealizes
WITHOUT_CLASSIFICATION	end class CrUnnavigableAssoc
WITHOUT_CLASSIFICATION	TODO: GenNavigableClasses?
WITHOUT_CLASSIFICATION	end class CrDisambigStateName
WITHOUT_CLASSIFICATION	(MAssociationEnd)
WITHOUT_CLASSIFICATION	(MAssociation)
WITHOUT_CLASSIFICATION	end class WizMEName
WITHOUT_CLASSIFICATION	Only for associations
WITHOUT_CLASSIFICATION	Get the assocations and connections. No problem (there is a separate critic) if this is not a binary association or is an association role.
WITHOUT_CLASSIFICATION	Loop through the associations, counting the ends with aggregations
WITHOUT_CLASSIFICATION	A problem if we found more than 1 aggregation
WITHOUT_CLASSIFICATION	end class CrMultipleAgg
WITHOUT_CLASSIFICATION	end class CrNameConflictAC
WITHOUT_CLASSIFICATION	end class WizNavigable
WITHOUT_CLASSIFICATION	end class CrFinalSubclassed
WITHOUT_CLASSIFICATION	no good trigger
WITHOUT_CLASSIFICATION	TODO: AssociationRole
WITHOUT_CLASSIFICATION	LOG.log(Level.FINE, "Finding children for " + o.getClass());
WITHOUT_CLASSIFICATION	argument can be an instanceof a Fig which we ignore
WITHOUT_CLASSIFICATION	no need for trigger on "specialization"
WITHOUT_CLASSIFICATION	end class CrCircularInheritance
WITHOUT_CLASSIFICATION	end class CrNonAggDataType
WITHOUT_CLASSIFICATION	test an unknown file
WITHOUT_CLASSIFICATION	container state / composite state
WITHOUT_CLASSIFICATION	no good trigger
WITHOUT_CLASSIFICATION	(MTransition)
WITHOUT_CLASSIFICATION	WFR Transitions, OMG UML 1.3
WITHOUT_CLASSIFICATION	Only work for associations
WITHOUT_CLASSIFICATION	WFR Transitions, OMG UML 1.3
WITHOUT_CLASSIFICATION	No problem if this is an association role.
WITHOUT_CLASSIFICATION	Loop through all the ends, comparing the name against those already seen (ignoring any with no name). No problem if there are no connections defined, we will fall through immediately.
WITHOUT_CLASSIFICATION	end class CrInterfaceOperOnly
WITHOUT_CLASSIFICATION	Ignore non-existent and empty names
WITHOUT_CLASSIFICATION	Is the name already in the list of those seen, if not add it and go on round.
WITHOUT_CLASSIFICATION	Only work for associatins
WITHOUT_CLASSIFICATION	If we drop out there were no clashes
WITHOUT_CLASSIFICATION	@see javax.swing.Icon#paintIcon(java.awt.Component, java.awt.Graphics, int, int)
WITHOUT_CLASSIFICATION	@see javax.swing.Icon#getIconWidth()
WITHOUT_CLASSIFICATION	@see javax.swing.Icon#getIconHeight()
WITHOUT_CLASSIFICATION	(MAssociationEnd)
WITHOUT_CLASSIFICATION	(MAssociation)
WITHOUT_CLASSIFICATION	Now we are sure dm is a StateVertex.
WITHOUT_CLASSIFICATION	Now we are sure dm is a State.
WITHOUT_CLASSIFICATION	Now we are sure dm is a Composite State.
WITHOUT_CLASSIFICATION	end class ClClassName
WITHOUT_CLASSIFICATION	If dm is the top state of the statemachine, then it is not supposed to have outgoing transitions.
WITHOUT_CLASSIFICATION	end class CrTooManyOper
WITHOUT_CLASSIFICATION	end class CrTooManyTransitions
WITHOUT_CLASSIFICATION	general
WITHOUT_CLASSIFICATION	Loop through the associations, looking for one with aggregation
WITHOUT_CLASSIFICATION	If drop out, we're OK
WITHOUT_CLASSIFICATION	end class CrNWayAgg.java
WITHOUT_CLASSIFICATION	end class CrOppEndConflict
WITHOUT_CLASSIFICATION	we could check for base class of the stereotype but the condition normally covers it all.
WITHOUT_CLASSIFICATION	intentional: if there is nonsense in the field, we return false
WITHOUT_CLASSIFICATION	intentional: if there is nonsense in the field, we do not set the value
WITHOUT_CLASSIFICATION	fireNodeRemoved(node);
WITHOUT_CLASSIFICATION	@see org.tigris.gef.base.Diagram#setName(java.lang.String)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.MutableGraphModel#containsNode(java.lang.Object)
WITHOUT_CLASSIFICATION	newEdge.setDiElement( GraphChangeAdapter.getInstance().createElement(gm, edge));
WITHOUT_CLASSIFICATION	/ End GEF methods
WITHOUT_CLASSIFICATION	not allowed
WITHOUT_CLASSIFICATION	return;
WITHOUT_CLASSIFICATION	TODO: Comments are on Element in UML 2.x
WITHOUT_CLASSIFICATION	Create a diagram. This 4-arg version is only for internal use. The 'namespace' argument is deprecated and not used in the new APIs.
WITHOUT_CLASSIFICATION	This shouldn't be possible, but just in case
WITHOUT_CLASSIFICATION	fail silently as we expect users to accidentally drop on to wrong component
WITHOUT_CLASSIFICATION	Create the UML connection of the given type between the given model elements. default aggregation (none)
WITHOUT_CLASSIFICATION	Commentlinks for comments. Iterate over all the comment links to find the comment and annotated elements.
WITHOUT_CLASSIFICATION	The connection is not valid unless both nodes are in this graph model.
WITHOUT_CLASSIFICATION	The diagram are always owned by the model in this first implementation.
WITHOUT_CLASSIFICATION	IMPORTANT - These MUST remain in order!
WITHOUT_CLASSIFICATION	singleton, no instantiation
WITHOUT_CLASSIFICATION	The special value <code>null</code> is used internally to indicate that the default value should be inherited from the next level of settings.
WITHOUT_CLASSIFICATION	Repeat until no faults are fixed
WITHOUT_CLASSIFICATION	Diagram appearance settings with project scope:
WITHOUT_CLASSIFICATION	We can not remove this and have the application manage things directly based on the font, since only the names should be bold.
WITHOUT_CLASSIFICATION	Some cached fonts based on the above settings
WITHOUT_CLASSIFICATION	Since body ever looks at the type of the diagram appearance event, we can simplify from sending every existing event to one event only. But since there is no catch-all event defined, we just use one. Rationale: reduce the number of total refreshes of the drawing.
WITHOUT_CLASSIFICATION	If we've got a local (uninherited) font name or size or if we've got no parent to inherit from recompute our cached fonts
WITHOUT_CLASSIFICATION	This class is a temporary wrapper around the GEF UndoManager. This will be changed when GEF is modified to create commands and provide an observer interface for ArgoUML to receive them. <p> TODO: How does this relate to {@link org.argouml.kernel.DefaultUndoManager}? @author Bob Tarling
WITHOUT_CLASSIFICATION	Listen for name changes so we can veto them if we don't like them
WITHOUT_CLASSIFICATION	get all the classes from the diagram
WITHOUT_CLASSIFICATION	The fix
WITHOUT_CLASSIFICATION	The report
WITHOUT_CLASSIFICATION	The report
WITHOUT_CLASSIFICATION	The fix
WITHOUT_CLASSIFICATION	The fix
WITHOUT_CLASSIFICATION	The fix
WITHOUT_CLASSIFICATION	2. Make sure that all Figs are visible
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.MutableGraphModel#canAddNode(java.lang.Object)
WITHOUT_CLASSIFICATION	Do nothing
WITHOUT_CLASSIFICATION	Do nothing
WITHOUT_CLASSIFICATION	Do nothing
WITHOUT_CLASSIFICATION	Do nothing
WITHOUT_CLASSIFICATION	TODO: These should get replaced immediately by the creating initialization code, but make sure we've got a default just in case.
WITHOUT_CLASSIFICATION	1. Make sure all Figs in the Diagrams layer refer back to that layer.
WITHOUT_CLASSIFICATION	maybe we have a modelelement that is part of some other fig
WITHOUT_CLASSIFICATION	Register for notification of any global changes that would affect our rendering
WITHOUT_CLASSIFICATION	Add the diagram as a listener to the namespace so that when the namespace is removed the diagram is deleted also.
WITHOUT_CLASSIFICATION	4. Make sure all FigNodes and FigEdges have an owner The report
WITHOUT_CLASSIFICATION	3. Make sure all FigEdges are attached to a valid FigNode The report
WITHOUT_CLASSIFICATION	5. Make sure all FigNodes and FigEdges have a valid owner The report
WITHOUT_CLASSIFICATION	4. Make sure the only FigGroups on a diagram are also FigNodes The report
WITHOUT_CLASSIFICATION	Do nothing, override in subclass.
WITHOUT_CLASSIFICATION	If we haven't succeeded in getting a namespace then abort
WITHOUT_CLASSIFICATION	This should always be true, but just in case...
WITHOUT_CLASSIFICATION	The diagram to be laid out.
WITHOUT_CLASSIFICATION	List of objects. NOTE: This methods which read/write this don't appear to be used.
WITHOUT_CLASSIFICATION	Point at which to start layout (initial state goes here). The X coordinate must be greater than half the width of the widest figure to be placed (because figures are centered on this location).
WITHOUT_CLASSIFICATION	Amount to increment Y position by for each node placed. We pack them densely on the assumption that the user is going to split them into at least two swimlanes.
WITHOUT_CLASSIFICATION	FinalState element for ActivityDiagram
WITHOUT_CLASSIFICATION	Find our Initial State
WITHOUT_CLASSIFICATION	Place all the nodes
WITHOUT_CLASSIFICATION	Place the final state last with a little separation
WITHOUT_CLASSIFICATION	@see java.lang.Object#clone()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setLineColor(java.awt.Color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getLineColor()
WITHOUT_CLASSIFICATION	_x = x; _y = y; _w = w; _h = h;
WITHOUT_CLASSIFICATION	If we're trying to set the namespace to the existing value then don't do any more work.
WITHOUT_CLASSIFICATION	Recursively place all nodes pointed to by outgoing transitions. Because of the recursive algorithm multiple outgoing transitions will end up very lopsided because one entire subgraph will be done before dealing with the other transition(s). @param seen set of nodes seen so far @param node the node to collect neighbors for
WITHOUT_CLASSIFICATION	figClone.seperator = (FigLine) it.next();
WITHOUT_CLASSIFICATION	Needed for project deletion
WITHOUT_CLASSIFICATION	we want to maintain a minimum size for the partition
WITHOUT_CLASSIFICATION	TODO: midpoints for side handles
WITHOUT_CLASSIFICATION	We removed the last partition, so now remove the pool, too:
WITHOUT_CLASSIFICATION	no action required in case of veto on setName
WITHOUT_CLASSIFICATION	This test needed for project deletion
WITHOUT_CLASSIFICATION	TODO: side handles
WITHOUT_CLASSIFICATION	Listen to activitygraph deletion, delete this diagram.
WITHOUT_CLASSIFICATION	actions for toolbar
WITHOUT_CLASSIFICATION	no action required
WITHOUT_CLASSIFICATION	The namespace of the activitygraph is changed!
WITHOUT_CLASSIFICATION	getActionSubactivityState()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.GraphNodeRenderer#getFigNodeFor( org.tigris.gef.graph.GraphModel, org.tigris.gef.base.Layer, java.lang.Object, java.util.Map)
WITHOUT_CLASSIFICATION	@see java.lang.Object#clone()
WITHOUT_CLASSIFICATION	The space between the 2 text figs is: PADDING. @see org.tigris.gef.presentation.Fig#getMinimumSize()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setLineColor(java.awt.Color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getLineColor()
WITHOUT_CLASSIFICATION	we want to maintain a minimum size for the partition
WITHOUT_CLASSIFICATION	Class to display graphics for a UML ObjectFlowState in a diagram.<p> The Fig of this modelElement may either represent the following UMLelements: <p> (1) an ObjectFlowState with a Classifier as type, or <p> (2) an ObjectFlowState with a ClassifierInState as type. <p> In both cases (1) and (2), the Fig shows the underlined name of the Classifier, and in the latter case (2), it shows also the names of the states of the ClassifierInState. <p> In the examples in the UML standard, this is written like<pre> PurchaseOrder [approved] </pre> i.e. in 2 lines. The first line is underlined, to indicate that it is an instance (object).<p> The fact that the first line is underlined, and the 2nd not, is the reason to implement them in 2 separate Figs.<p> TODO: Allow stereotypes to be shown. @author mvw
WITHOUT_CLASSIFICATION	Model.getActivityGraphsHelper() .isAddingActivityGraphAllowed(base);
WITHOUT_CLASSIFICATION	TODO: We may return the following when the relocate() has been implemented.
WITHOUT_CLASSIFICATION	TODO: We may return something useful when the relocate() has been implemented.
WITHOUT_CLASSIFICATION	register for events from the type
WITHOUT_CLASSIFICATION	Create a map of partitions keyed by x coordinate
WITHOUT_CLASSIFICATION	add Figs to the FigNode in back-to-front order
WITHOUT_CLASSIFICATION	Sort the x coordinates into order
WITHOUT_CLASSIFICATION	the state name
WITHOUT_CLASSIFICATION	Set the drop location in the case of D&D:
WITHOUT_CLASSIFICATION	If the layer is null, then most likely we are being deleted.
WITHOUT_CLASSIFICATION	Don't listen to all property names We only need to listen to its "type", and "remove".
WITHOUT_CLASSIFICATION	the height of the blank space above and below the text figs:
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setLineWidth(int)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getLineWidth()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#makeSelection()
WITHOUT_CLASSIFICATION	@see java.lang.Object#clone()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getMinimumSize()
WITHOUT_CLASSIFICATION	Override setBounds to keep shapes looking right. @see org.tigris.gef.presentation.Fig#setBoundsImpl(int, int, int, int)
WITHOUT_CLASSIFICATION	Although not generally true for GEF, for Argo we know that the layer is a LayerPerspective which knows the associated diagram
WITHOUT_CLASSIFICATION	add Figs to the FigNode in back-to-front order
WITHOUT_CLASSIFICATION	and listen to name changes of the submachine
WITHOUT_CLASSIFICATION	both have the same settings
WITHOUT_CLASSIFICATION	both have the same owner
WITHOUT_CLASSIFICATION	add them back to front
WITHOUT_CLASSIFICATION	Let our superclass sort itself out first
WITHOUT_CLASSIFICATION	add the listeners to the newOwner
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setBoundsImpl(int, int, int, int)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.base.SelectionButtons#getNewNode(int)
WITHOUT_CLASSIFICATION	_x = x; _y = y; _w = w; _h = h;
WITHOUT_CLASSIFICATION	add Figs to the FigNode in back-to-front order
WITHOUT_CLASSIFICATION	MutableGraphModel implementation
WITHOUT_CLASSIFICATION	Set up the property panels for activity diagrams:
WITHOUT_CLASSIFICATION	overrule the single-line name-fig created by the parent
WITHOUT_CLASSIFICATION	A binary association is not a node so reject.
WITHOUT_CLASSIFICATION	setBlinkPorts(false); make port invisible unless mouse enters
WITHOUT_CLASSIFICATION	TODO: Do we need to clone the stereotype(s)?
WITHOUT_CLASSIFICATION	(MGeneralization)
WITHOUT_CLASSIFICATION	The stereoDim has height=2, even if it is empty, hence the -2 below:
WITHOUT_CLASSIFICATION	the width needs to be > the height
WITHOUT_CLASSIFICATION	Both ends must be defined and nodes that are on the graph already.
WITHOUT_CLASSIFICATION	GraphModel implementation
WITHOUT_CLASSIFICATION	TODO:?
WITHOUT_CLASSIFICATION	((MClassifier)node).setNamespace(_collab.getNamespace());
WITHOUT_CLASSIFICATION	TODO: assumes public, user pref for default visibility?
WITHOUT_CLASSIFICATION	Add the given edge to the graph, if valid. @see org.tigris.gef.graph.MutableGraphModel#addEdge(java.lang.Object)
WITHOUT_CLASSIFICATION	TODO: We may return the following when the relocate() has been implemented.
WITHOUT_CLASSIFICATION	add Figs to the FigNode in back-to-front order
WITHOUT_CLASSIFICATION	The NotationProvider for the ClassifierRole. <p> The syntax is for UML is: <pre> baselist := [base] [, base] classifierRole := [name] [/ role] [: baselist] </pre></p> The <code>name</code> is the Instance name, not used currently. See ClassifierRoleNotationUml for details.<p> This syntax is compatible with the UML 1.4 specification.
WITHOUT_CLASSIFICATION	TODO: assumes public
WITHOUT_CLASSIFICATION	The stereotype. Width is the same as the cover, height is its default (since the font is not yet set). The text should be centered.
WITHOUT_CLASSIFICATION	throws PropertyVetoException
WITHOUT_CLASSIFICATION	(MElementImport)
WITHOUT_CLASSIFICATION	getStereotypeFig().setFilled(false);
WITHOUT_CLASSIFICATION	end class CollabDiagramGraphModel
WITHOUT_CLASSIFICATION	In the rather unlikely case that we have no name, we give up.
WITHOUT_CLASSIFICATION	The big port. Color of the big port is irrelevant
WITHOUT_CLASSIFICATION	The name. Width is the same as the cover, height is the default. The text of the name will be centered by default. In the same place as the stereotype, since at this stage the stereotype is not displayed. Being a classifier role it is underlined
WITHOUT_CLASSIFICATION	The cover.
WITHOUT_CLASSIFICATION	At least one stereotype is visible
WITHOUT_CLASSIFICATION	Remember where we are at present, so we can tell GEF later. Then check we are as big as the minimum size
WITHOUT_CLASSIFICATION	Set the bounds of the bigPort and cover
WITHOUT_CLASSIFICATION	Work out the padding each side, depending on whether the stereotype is displayed and set bounds accordingly
WITHOUT_CLASSIFICATION	Record the changes in the instance variables of our parent, tell GEF and trigger the edges to reconsider themselves.
WITHOUT_CLASSIFICATION	singleton
WITHOUT_CLASSIFICATION	this one behaves differently, hence seperated:
WITHOUT_CLASSIFICATION	this one behaves differently, hence seperated:
WITHOUT_CLASSIFICATION	Do nothing.
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#calcBounds()
WITHOUT_CLASSIFICATION	Although not generally true for GEF, for Argo we know that the layer is a LayerPerspective which knows the associated diagram
WITHOUT_CLASSIFICATION	TODO: We may return something useful when the relocate() has been implemented.
WITHOUT_CLASSIFICATION	GraphModel implementation
WITHOUT_CLASSIFICATION	TODO:?
WITHOUT_CLASSIFICATION	A binary association is not a node so reject.
WITHOUT_CLASSIFICATION	Both ends must be defined and nodes that are on the graph already.
WITHOUT_CLASSIFICATION	end class FigAssociationRole
WITHOUT_CLASSIFICATION	If location is non-null, convert to a rectangle that we can use
WITHOUT_CLASSIFICATION	TODO -> settings
WITHOUT_CLASSIFICATION	the figs that make up this group
WITHOUT_CLASSIFICATION	the figs that make up this group
WITHOUT_CLASSIFICATION	_x = first.getX(); _y = first.getY();
WITHOUT_CLASSIFICATION	_x = first.getX(); _y = first.getY();
WITHOUT_CLASSIFICATION	Set up the property panels for collaboration diagrams:
WITHOUT_CLASSIFICATION	this is neat...
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.MutableGraphModel#addEdge(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.MutableGraphModel#addNodeRelatedEdges(java.lang.Object)
WITHOUT_CLASSIFICATION	@see java.beans.VetoableChangeListener#vetoableChange(java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.GraphNodeRenderer#getFigNodeFor( org.tigris.gef.graph.GraphModel, org.tigris.gef.base.Layer, java.lang.Object, java.util.Map)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getClosestPoint(java.awt.Point)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.ui.PopupGenerator#getPopUpActions(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	Although not generally true for GEF, for Argo we know that the layer is a LayerPerspective which knows the associated diagram
WITHOUT_CLASSIFICATION	add Figs to the FigNode in back-to-front order
WITHOUT_CLASSIFICATION	TODO: assumes public
WITHOUT_CLASSIFICATION	Modifiers ...
WITHOUT_CLASSIFICATION	TODO: assumes public, user pref for default visibility? do I have to check the namespace here? (Toby)
WITHOUT_CLASSIFICATION	elementOrdering(figures);
WITHOUT_CLASSIFICATION	elementOrdering(figures);
WITHOUT_CLASSIFICATION	Set up the property panels for deployment diagrams:
WITHOUT_CLASSIFICATION	actions for toolbar
WITHOUT_CLASSIFICATION	Getters for plugin modules:
WITHOUT_CLASSIFICATION	so it still looks like a cube
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getMinimumSize()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.ui.PopupGenerator#getPopUpActions(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	_x = x; _y = y; _w = w; _h = h;
WITHOUT_CLASSIFICATION	add the listeners to the newOwner
WITHOUT_CLASSIFICATION	elementOrdering(figures);
WITHOUT_CLASSIFICATION	elementOrdering(figures);
WITHOUT_CLASSIFICATION	Modifiers ...
WITHOUT_CLASSIFICATION	_bigPort.setBounds(x+1, y+1, w-2, h-2);
WITHOUT_CLASSIFICATION	nothing extra to do currently
WITHOUT_CLASSIFICATION	North, South, West, East, South-West
WITHOUT_CLASSIFICATION	end class PredIsStartpackage
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.MutableGraphModel#addNode(java.lang.Object)
WITHOUT_CLASSIFICATION	accessors
WITHOUT_CLASSIFICATION	If the layer is null, then most likely we are being deleted.
WITHOUT_CLASSIFICATION	GraphModel implementation
WITHOUT_CLASSIFICATION	MutableGraphModel implementation
WITHOUT_CLASSIFICATION	Both ends must be defined and nodes that are on the graph already.
WITHOUT_CLASSIFICATION	VetoableChangeListener implementation
WITHOUT_CLASSIFICATION	throws PropertyVetoException
WITHOUT_CLASSIFICATION	singleton
WITHOUT_CLASSIFICATION	end class StateDiagramGraphModel
WITHOUT_CLASSIFICATION	Don't do it for comment.
WITHOUT_CLASSIFICATION	(MElementImport)
WITHOUT_CLASSIFICATION	(MTransition)
WITHOUT_CLASSIFICATION	prevent no changes...
WITHOUT_CLASSIFICATION	If a UML object is found, you can not remove selected elms.
WITHOUT_CLASSIFICATION	check parameter types:
WITHOUT_CLASSIFICATION	If nothing is selected, then not allowed to remove it.
WITHOUT_CLASSIFICATION	If only Figs without owner are selected, then you can remove them!
WITHOUT_CLASSIFICATION	end class PredIsFinalState
WITHOUT_CLASSIFICATION	This presumes that the layer is set after the owner:
WITHOUT_CLASSIFICATION	If it is concurrent and contains concurrent regions, the bottom region has a minimum height
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.FigEdge#setFig(org.tigris.gef.presentation.Fig)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#paint(java.awt.Graphics)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getMinimumSize()
WITHOUT_CLASSIFICATION	@see java.lang.Object#clone()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getMinimumSize()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.ui.PopupGenerator#getPopUpActions(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	accessors
WITHOUT_CLASSIFICATION	_x = x; _y = y; _w = w; _h = h;
WITHOUT_CLASSIFICATION	_x = x; _y = y; _w = w; _h = h;
WITHOUT_CLASSIFICATION	add Figs to the FigNode in back-to-front order
WITHOUT_CLASSIFICATION	The purpose of this method is not explained and it give give NPE depending on z order of figs as they are read. For now ignore if null but for future lets delete this.
WITHOUT_CLASSIFICATION	We only handle the case where a region has been removed:
WITHOUT_CLASSIFICATION	Check if multiple items are selected:
WITHOUT_CLASSIFICATION	Check if multiple items are selected:
WITHOUT_CLASSIFICATION	If it is concurrent and contains concurrent regions, the regions are resized
WITHOUT_CLASSIFICATION	None of the menu-items below apply when multiple modelelements are selected:
WITHOUT_CLASSIFICATION	do we need to
WITHOUT_CLASSIFICATION	The returned list of Figs is sorted according layout: from top to bottom.
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	This makes dragging connected edges very smooth. @see org.tigris.gef.presentation.Fig#getClosestPoint(java.awt.Point)
WITHOUT_CLASSIFICATION	@see java.lang.Object#clone()
WITHOUT_CLASSIFICATION	_x = x; _y = y; _w = w; _h = h;
WITHOUT_CLASSIFICATION	_x = x; _y = y; _w = w; _h = h;
WITHOUT_CLASSIFICATION	add Figs to the FigNode in back-to-front order
WITHOUT_CLASSIFICATION	The event source is the owner stub state
WITHOUT_CLASSIFICATION	event processing
WITHOUT_CLASSIFICATION	end class FigCompositeState
WITHOUT_CLASSIFICATION	The event source is the submachine state
WITHOUT_CLASSIFICATION	TargetManager.getInstance().addTargetListener(this);
WITHOUT_CLASSIFICATION	ignored - fixed rendering
WITHOUT_CLASSIFICATION	make port invisible unless mouse enters
WITHOUT_CLASSIFICATION	make port invisible unless mouse enters
WITHOUT_CLASSIFICATION	Event handlers
WITHOUT_CLASSIFICATION	Cmd API
WITHOUT_CLASSIFICATION	end class ActionCreatePseudostate
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	@see java.lang.Object#clone()
WITHOUT_CLASSIFICATION	_x = x; _y = y; _w = w; _h = h;
WITHOUT_CLASSIFICATION	add Figs to the FigNode in back-to-front order
WITHOUT_CLASSIFICATION	Set the drop location in the case of D&D:
WITHOUT_CLASSIFICATION	event processing
WITHOUT_CLASSIFICATION	make port invisible unless mouse enters
WITHOUT_CLASSIFICATION	make port invisible unless mouse enters
WITHOUT_CLASSIFICATION	The submachine has got a new name
WITHOUT_CLASSIFICATION	The event source is the stub state's referenced state or one of the referenced state's path.
WITHOUT_CLASSIFICATION	This indicates a change in association, not name - tfm
WITHOUT_CLASSIFICATION	All states in the new reference state's path are added as listeners
WITHOUT_CLASSIFICATION	The source was the referenced state that has got a new name.
WITHOUT_CLASSIFICATION	ignored - rendering is fixed
WITHOUT_CLASSIFICATION	The source was one of the referenced state's path which has got a new name.
WITHOUT_CLASSIFICATION	The old submachine container is deleted as listener
WITHOUT_CLASSIFICATION	The Referenced State or one of his path's states has got a new name
WITHOUT_CLASSIFICATION	The new submachine container is added as listener
WITHOUT_CLASSIFICATION	All states in the old reference state's path are deleted as listeners
WITHOUT_CLASSIFICATION	Translate any old style sequence diagrams
WITHOUT_CLASSIFICATION	Just swap order of arguments to get to new form
WITHOUT_CLASSIFICATION	Translate any sequence diagrams create with any previous svn work in progress
WITHOUT_CLASSIFICATION	Get the first existing FigNode and if it exists set the y position and height of _pers to be the same as it.
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mouseClicked(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#makeSelection()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setLineColor(java.awt.Color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getLineColor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setFillColor(java.awt.Color)
WITHOUT_CLASSIFICATION	@see java.lang.Object#clone()
WITHOUT_CLASSIFICATION	_x = x; _y = y; _w = w; _h = h;
WITHOUT_CLASSIFICATION	_x = x; _y = y; _w = w; _h = h;
WITHOUT_CLASSIFICATION	_x = x; _y = y; _w = w; _h = h;
WITHOUT_CLASSIFICATION	add Figs to the FigNode in back-to-front order
WITHOUT_CLASSIFICATION	make port invisible unless mouse enters
WITHOUT_CLASSIFICATION	ignored - rendering is fixed
WITHOUT_CLASSIFICATION	ignore mouse clicks
WITHOUT_CLASSIFICATION	ignore mouse clicks
WITHOUT_CLASSIFICATION	The Machine State has got a new name
WITHOUT_CLASSIFICATION	This assert fails for the TestPropertyPanels, file GUITestPropertyPanels.zargo:
WITHOUT_CLASSIFICATION	assert w == h;
WITHOUT_CLASSIFICATION	The Machine State has been deleted from model
WITHOUT_CLASSIFICATION	Ignore w and h from here on.
WITHOUT_CLASSIFICATION	keep d even or odd, just like the line width:
WITHOUT_CLASSIFICATION	leave some space below the "include"
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.GraphNodeRenderer#getFigNodeFor( org.tigris.gef.graph.GraphModel, org.tigris.gef.base.Layer, java.lang.Object, java.util.Map)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.GraphEdgeRenderer#getFigEdgeFor( org.tigris.gef.graph.GraphModel, org.tigris.gef.base.Layer, java.lang.Object, java.util.Map)
WITHOUT_CLASSIFICATION	@see java.lang.Object#clone()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setLineColor(java.awt.Color)
WITHOUT_CLASSIFICATION	Although not generally true for GEF, for Argo we know that the layer is a LayerPerspective which knows the associated diagram
WITHOUT_CLASSIFICATION	add Figs to the FigNode in back-to-front order
WITHOUT_CLASSIFICATION	both have the same settings
WITHOUT_CLASSIFICATION	both have the same owner
WITHOUT_CLASSIFICATION	TODO -> settings
WITHOUT_CLASSIFICATION	make port invisible unless mouse enters
WITHOUT_CLASSIFICATION	make port invisible unless mouse enters
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	There are one or more regions so find the one that the vertex was dropped in
WITHOUT_CLASSIFICATION	The vertex was dropped onto the diagram. Get the region as the first Region in the StateMachine. If there is no region in the StateMachine then create one.
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.state.ui.FigStateVertex#initNotationProviders (java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigNodeModelElement#removeFromDiagramImpl()
WITHOUT_CLASSIFICATION	_x = x; _y = y; _w = w; _h = h;
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setFillColor(java.awt.Color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getFillColor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getLineWidth()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.ui.PopupGenerator#getPopUpActions(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	_x = x; _y = y; _w = w; _h = h;
WITHOUT_CLASSIFICATION	add Figs to the FigNode in back-to-front order
WITHOUT_CLASSIFICATION	noop - fixed rendering
WITHOUT_CLASSIFICATION	There are no regions so create one and place the vertex there.
WITHOUT_CLASSIFICATION	Temporary start private static final Color[] COLOR_ARRAY = { Color.RED, Color.BLUE, Color.CYAN, Color.YELLOW, Color.GREEN}; private int nextColor = 0; Temporary end
WITHOUT_CLASSIFICATION	setBlinkPorts(false); make port invisble unless mouse enters
WITHOUT_CLASSIFICATION	there can only be one
WITHOUT_CLASSIFICATION	@see java.lang.Object#clone()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getMinimumSize()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getUseTrapRect()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getLineColor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.ui.PopupGenerator#getPopUpActions(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	_x = x; _y = y; _w = w; _h = h;
WITHOUT_CLASSIFICATION	_x = x; _y = y; _w = w; _h = h;
WITHOUT_CLASSIFICATION	_x = x; _y = y; _w = w; _h = h;
WITHOUT_CLASSIFICATION	_x = x; _y = y; _w = w; _h = h;
WITHOUT_CLASSIFICATION	add Figs to the FigNode in back-to-front order
WITHOUT_CLASSIFICATION	We aren't able to resize neither the top bound from the first region nor the bottom bound from the last region.
WITHOUT_CLASSIFICATION	The group must be resized if a text field exceed the bounds
WITHOUT_CLASSIFICATION	if curHandle.index is 0 or 2, the adjacent region is the previous region but if it is 5 or 7, the adjacent region is the next region. curHandle.index show which corner of the bound we are dragging.
WITHOUT_CLASSIFICATION	A Concurrent region cannot have incoming or outgoing transitions so incoming or outgoing transitions are redirected to its concurrent composite state container.
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	Do nothing.
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mousePressed(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mouseReleased(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseMotionListener#mouseDragged(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseMotionListener#mouseMoved(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	nothing we can do about veto, so just ignore it
WITHOUT_CLASSIFICATION	nothing we can do about veto, so just ignore it
WITHOUT_CLASSIFICATION	add Figs to the FigNode in back-to-front order
WITHOUT_CLASSIFICATION	singleton
WITHOUT_CLASSIFICATION	event processing
WITHOUT_CLASSIFICATION	make port invisible unless mouse enters
WITHOUT_CLASSIFICATION	/ event handlers - MouseListener and MouseMotionListener implementation
WITHOUT_CLASSIFICATION	or just the owner?
WITHOUT_CLASSIFICATION	Listen to machine deletion, to delete the diagram.
WITHOUT_CLASSIFICATION	this in case we are being deleted
WITHOUT_CLASSIFICATION	The namespace of the statemachine is changed!
WITHOUT_CLASSIFICATION	return;
WITHOUT_CLASSIFICATION	return;
WITHOUT_CLASSIFICATION	_x = x; _y = y; _w = w; _h = h;
WITHOUT_CLASSIFICATION	A binary association is not a node so reject.
WITHOUT_CLASSIFICATION	throws PropertyVetoException
WITHOUT_CLASSIFICATION	If location is non-null, convert to a rectangle that we can use
WITHOUT_CLASSIFICATION	prevent no changes...
WITHOUT_CLASSIFICATION	check parameter types:
WITHOUT_CLASSIFICATION	make port invisible unless mouse enters
WITHOUT_CLASSIFICATION	Model.getStateMachinesHelper() .isAddingStatemachineAllowed(base);
WITHOUT_CLASSIFICATION	Set up the property panels for statechart diagrams:
WITHOUT_CLASSIFICATION	if location is null here the position of the new figNode is set after in org.tigris.gef.base.ModePlace.mousePressed(MouseEvent e)
WITHOUT_CLASSIFICATION	MModelElement modelElement = elementImport.getModelElement();
WITHOUT_CLASSIFICATION	top of the hierarchy is ME:
WITHOUT_CLASSIFICATION	top of the hierarchy is ME:
WITHOUT_CLASSIFICATION	then Generalizable Element
WITHOUT_CLASSIFICATION	then Generalizable Element
WITHOUT_CLASSIFICATION	then Classifier & Package
WITHOUT_CLASSIFICATION	navigable.... only want incoming
WITHOUT_CLASSIFICATION	then Classifier
WITHOUT_CLASSIFICATION	MutableGraphModel implementation
WITHOUT_CLASSIFICATION	VetoableChangeListener implementation
WITHOUT_CLASSIFICATION	cast the params
WITHOUT_CLASSIFICATION	N.B. A node which is an Association is either a n-ary association or the Class part of an AssociationClass
WITHOUT_CLASSIFICATION	check param types: only some connections are legal uml connections:
WITHOUT_CLASSIFICATION	set the new end type!
WITHOUT_CLASSIFICATION	rerouting the destination:
WITHOUT_CLASSIFICATION	rerouting the source:
WITHOUT_CLASSIFICATION	empty at the moment
WITHOUT_CLASSIFICATION	move down
WITHOUT_CLASSIFICATION	empty at the moment
WITHOUT_CLASSIFICATION	empty at the moment
WITHOUT_CLASSIFICATION	move more right
WITHOUT_CLASSIFICATION	move left
WITHOUT_CLASSIFICATION	use left and right, up and down
WITHOUT_CLASSIFICATION	calculate the higher and lower Figs
WITHOUT_CLASSIFICATION	the amount of the "sidestep"
WITHOUT_CLASSIFICATION	If center points are "close enough" we just adjust the endpoints of the line a little bit. Otherwise we add a jog in the middle to deal with the offset. TODO: Epsilon is currently fixed, but could probably be computed dynamically as 10% of the width of the narrowest figure or some other value which is visually not noticeable.
WITHOUT_CLASSIFICATION	currentEdge.setBetweenNearestPoints(false);
WITHOUT_CLASSIFICATION	LOG.debug(result + " node1: " + this + ", node2 " + node);
WITHOUT_CLASSIFICATION	split = (split == null || split.isStandalone()) ? node : split;
WITHOUT_CLASSIFICATION	(xOffset - curW) / 2;
WITHOUT_CLASSIFICATION	Element is allowed, but only NamedElement can return nonempty list
WITHOUT_CLASSIFICATION	Do nothing.
WITHOUT_CLASSIFICATION	Set the drop location in the case of D&D:
WITHOUT_CLASSIFICATION	self associations are special cases. No need to let the maze runner find the way.
WITHOUT_CLASSIFICATION	Link does not exist in UML2
WITHOUT_CLASSIFICATION	now we construct the zig zag inheritance line getUnderlyingFig()
WITHOUT_CLASSIFICATION	Class to display graphics for a UML Link in a diagram. <p> The underlined association name is shown next to the middle of the path. TODO: Show more notation as described in the standard: "A rolename may be shown at each end of the link. An association name may be shown near the path. If present, it is underlined to indicate an instance. Links do not have instance names, they take their identity from the instances that they relate. Multiplicity is not shown for links because they are instances. Other association adornments (aggregation, composition, navigation) may be shown on the link ends."
WITHOUT_CLASSIFICATION	Text group to contain name & stereotype
WITHOUT_CLASSIFICATION	end class FigLink
WITHOUT_CLASSIFICATION	The next line is needed so that we have the right dimension when drawing this Fig on the diagram by pressing down the mouse button, even before releasing the mouse button:
WITHOUT_CLASSIFICATION	Stereotype covers NameFig:
WITHOUT_CLASSIFICATION	Compartments from top to bottom:
WITHOUT_CLASSIFICATION	Make all the parts match the main fig
WITHOUT_CLASSIFICATION	by default, do not show operations nor attributes:
WITHOUT_CLASSIFICATION	We're going to change the name immediately, so just use ""
WITHOUT_CLASSIFICATION	@see java.lang.Object#clone()
WITHOUT_CLASSIFICATION	actions for toolbar
WITHOUT_CLASSIFICATION	TODO: place comments near connected classes TODO: place from middle towards outer edges? (or place largest groups first)
WITHOUT_CLASSIFICATION	boolean hasPackages = false; TODO: move "package in row" to NodeRow
WITHOUT_CLASSIFICATION	Do nothing.
WITHOUT_CLASSIFICATION	This calls the getters to fetch actions even though the action variables are defined is instances of this class. This is because any number of action getters could have been overridden in a descendant and it is the action from that overridden method that should be returned in the array.
WITHOUT_CLASSIFICATION	since UML2, this must appear before the isAClass clause
WITHOUT_CLASSIFICATION	this rectangle marks the operation section; all operations are inside it
WITHOUT_CLASSIFICATION	2nd compartment, so adjust Y appropriately
WITHOUT_CLASSIFICATION	TODO: We should be able to just call renderingChanged on the child figs here instead of doing an updateOperations...
WITHOUT_CLASSIFICATION	TODO: We just need to get someone to re-render a single line of text which represents the element here, but I'm not sure how to do that. - tfm TODO: Bob replies - we shouldn't be interested in this event here. The FigFeature (or its notation) should be listen for change and the FigFeature should be update from that.
WITHOUT_CLASSIFICATION	Collect the set of model elements that we want to listen to
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#translate(int, int)
WITHOUT_CLASSIFICATION	@see java.lang.Object#clone()
WITHOUT_CLASSIFICATION	add Figs to the FigNode in back-to-front order
WITHOUT_CLASSIFICATION	add the listeners to the newOwner
WITHOUT_CLASSIFICATION	make port invisible unless mouse enters
WITHOUT_CLASSIFICATION	Make all the parts match the main fig
WITHOUT_CLASSIFICATION	check if any stereotype is defined
WITHOUT_CLASSIFICATION	and the stereotypes of its features
WITHOUT_CLASSIFICATION	and its features
WITHOUT_CLASSIFICATION	and the parameter of its operations
WITHOUT_CLASSIFICATION	Update the listeners to match the desired set using the minimal update facility
WITHOUT_CLASSIFICATION	Modifier ...
WITHOUT_CLASSIFICATION	Create a Body that reacts to double-clicks and jumps to a diagram.
WITHOUT_CLASSIFICATION	Add ...
WITHOUT_CLASSIFICATION	Visibility ...
WITHOUT_CLASSIFICATION	Set properties of the stereotype box. Initially not set to be displayed, but this will be changed when we try to render it, if we find we have a stereotype.
WITHOUT_CLASSIFICATION	There are 2 boxes showing lines: the tab and the body.
WITHOUT_CLASSIFICATION	This populates the stereotypes area:
WITHOUT_CLASSIFICATION	else nothing changed
WITHOUT_CLASSIFICATION	else nothing changed
WITHOUT_CLASSIFICATION	we got at least one stereotype
WITHOUT_CLASSIFICATION	the user wants to hide them
WITHOUT_CLASSIFICATION	Modifier ...
WITHOUT_CLASSIFICATION	Visibility ...
WITHOUT_CLASSIFICATION	The figPoly is located at the right of the name text. The nameFig size is increased, so that it fits its text, and the figPoly next to the text, all within the boundaries of the nameFig.
WITHOUT_CLASSIFICATION	If we have any number of stereotypes displayed, then allow some space for that (only width, height is included in nameFig):
WITHOUT_CLASSIFICATION	take into account the tab is not as wide as the body:
WITHOUT_CLASSIFICATION	we want at least some of the package body to be displayed
WITHOUT_CLASSIFICATION	And now aSize has the answer
WITHOUT_CLASSIFICATION	Save our old boundaries (needed later), and get minimum size info. "aSize" will be used to maintain a running calculation of our size at various points.
WITHOUT_CLASSIFICATION	The new size can not be smaller than the minimum.
WITHOUT_CLASSIFICATION	Now resize all sub-figs, including not displayed figs. Start by the name. We override the getMinimumSize if it is less than our view (21 pixels hardcoded!). Add in the shared extra, plus in this case the correction.
WITHOUT_CLASSIFICATION	Now sort out the stereotype display. If the stereotype is displayed, move the upper boundary of the name compartment up and set new bounds for the name and the stereotype compartments and the stereoLineBlinder that blanks out the line between the two
WITHOUT_CLASSIFICATION	Advance currentY to where the start of the body box is, remembering that it overlaps the next box by 1 pixel. Calculate the size of the body box, and update the Y pointer past it if it is displayed.
WITHOUT_CLASSIFICATION	-1 for 1 pixel overlap
WITHOUT_CLASSIFICATION	set bounds of big box
WITHOUT_CLASSIFICATION	The figPoly is located at the right edge of the nameFig. The nameFig size is such that it at least fits its text, and the figPoly next to the text. Making the package bigger, causes the figPoly to stick to the right edge.
WITHOUT_CLASSIFICATION	Now force calculation of the bounds of the figure, update the edges and trigger anyone who's listening to see if the "bounds" property has changed.
WITHOUT_CLASSIFICATION	Only show the menuitems if they make sense:
WITHOUT_CLASSIFICATION	save first
WITHOUT_CLASSIFICATION	while
WITHOUT_CLASSIFICATION	If we get here then we didn't get the default diagram.
WITHOUT_CLASSIFICATION	Try to create a new class diagram.
WITHOUT_CLASSIFICATION	if package
WITHOUT_CLASSIFICATION	if doubleclicks
WITHOUT_CLASSIFICATION	change prefix
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed( java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	add the listeners to the newOwner
WITHOUT_CLASSIFICATION	and its features
WITHOUT_CLASSIFICATION	end class FigPackage
WITHOUT_CLASSIFICATION	Readonly class: no generalization, no association to self
WITHOUT_CLASSIFICATION	end class StylePanelFigPackage
WITHOUT_CLASSIFICATION	In the DeploymentDiagram there are no Generalizations
WITHOUT_CLASSIFICATION	Self-association isn't draggable
WITHOUT_CLASSIFICATION	end class StylePanelFigInterface
WITHOUT_CLASSIFICATION	No Generalizations on Deployment Diagram
WITHOUT_CLASSIFICATION	and its stereotypes
WITHOUT_CLASSIFICATION	event handling
WITHOUT_CLASSIFICATION	event handling
WITHOUT_CLASSIFICATION	add Figs to the FigNode in back-to-front order
WITHOUT_CLASSIFICATION	Set the drop location in the case of D&D:
WITHOUT_CLASSIFICATION	Set the drop location in the case of D&D:
WITHOUT_CLASSIFICATION	add the listeners to the newOwner
WITHOUT_CLASSIFICATION	make port invisible unless mouse enters
WITHOUT_CLASSIFICATION	Stereotype covers NameFig:
WITHOUT_CLASSIFICATION	Compartments from top to bottom:
WITHOUT_CLASSIFICATION	Make all the parts match the main fig
WITHOUT_CLASSIFICATION	Collect the set of model elements that we want to listen to
WITHOUT_CLASSIFICATION	and its features
WITHOUT_CLASSIFICATION	and the stereotypes of its features
WITHOUT_CLASSIFICATION	and the parameter of its operations
WITHOUT_CLASSIFICATION	Use super because not fully init'd
WITHOUT_CLASSIFICATION	and its enumerationLiterals
WITHOUT_CLASSIFICATION	And now add listeners to them all:
WITHOUT_CLASSIFICATION	Put all the bits together, suppressing bounds calculations until we're all done for efficiency.
WITHOUT_CLASSIFICATION	The next line is needed so that we have the right dimension when drawing this Fig on the diagram by pressing down the mouse button, even before releasing the mouse button:
WITHOUT_CLASSIFICATION	stereotype fig covers the name fig:
WITHOUT_CLASSIFICATION	Set the bounds of the figure to the total of the above
WITHOUT_CLASSIFICATION	If moved into an Package
WITHOUT_CLASSIFICATION	If default Namespace is not already set
WITHOUT_CLASSIFICATION	The next if-clause is important for the Deployment-diagram it detects if the enclosing fig is a component, in this case the container will be set for the owning Interface
WITHOUT_CLASSIFICATION	Testing: Add a parameter to an operation on an Interface. Does the Interface Fig adapt its width?
WITHOUT_CLASSIFICATION	Set up the property panels for class diagrams:
WITHOUT_CLASSIFICATION	The figure that holds the text of the note.
WITHOUT_CLASSIFICATION	Do nothing by default.
WITHOUT_CLASSIFICATION	@see java.beans.VetoableChangeListener#vetoableChange(java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	@see java.beans.PropertyChangeListener#propertyChange(java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.KeyListener#keyPressed(java.awt.event.KeyEvent)
WITHOUT_CLASSIFICATION	constants
WITHOUT_CLASSIFICATION	Update the listeners to match the desired set using the minimal update facility
WITHOUT_CLASSIFICATION	Get the size of the text field.
WITHOUT_CLASSIFICATION	Mark this as newly created. This is to get round the problem with creating figs for loaded comments that had stereotypes. They are saved with their dimensions INCLUDING the stereotype, but since we pretend the stereotype is not visible, we add height the first time we render such a comment. This is a complete fudge, and really we ought to address how comment objects with stereotypes are saved. But that will be hard work.
WITHOUT_CLASSIFICATION	update the relative sizes and positions of internel Figs
WITHOUT_CLASSIFICATION	update any text, colors, fonts, etc.
WITHOUT_CLASSIFICATION	parse the text that was edited
WITHOUT_CLASSIFICATION	Resize the text figure
WITHOUT_CLASSIFICATION	resize the FigNode to accomodate the new text
WITHOUT_CLASSIFICATION	Not used, do nothing.
WITHOUT_CLASSIFICATION	Not used, do nothing.
WITHOUT_CLASSIFICATION	Resize the big port around the figure
WITHOUT_CLASSIFICATION	The text element has no border, so the line color doesn't matter.
WITHOUT_CLASSIFICATION	The text is always opaque.
WITHOUT_CLASSIFICATION	? 2LINE_WIDTH?
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getClosestPoint(java.awt.Point)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.GraphNodeRenderer#getFigNodeFor( org.tigris.gef.graph.GraphModel, org.tigris.gef.base.Layer, java.lang.Object, java.util.Map)
WITHOUT_CLASSIFICATION	@see java.awt.event.ItemListener#itemStateChanged(java.awt.event.ItemEvent)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.FigEdge#setFig(org.tigris.gef.presentation.Fig)
WITHOUT_CLASSIFICATION	_x = x; _y = y; _w = w; _h = h;
WITHOUT_CLASSIFICATION	Make a seamless integration of the text in the note figure.
WITHOUT_CLASSIFICATION	user interaction methods
WITHOUT_CLASSIFICATION	accessor methods
WITHOUT_CLASSIFICATION	If we have a stereotype displayed, then allow some space for that (width and height)
WITHOUT_CLASSIFICATION	And add the gaps around the textfield to get the minimum size of the note.
WITHOUT_CLASSIFICATION	Since this is a complex polygon, there's no easy way to resize it.
WITHOUT_CLASSIFICATION	Just move the corner to it's new position.
WITHOUT_CLASSIFICATION	/ Internal methods
WITHOUT_CLASSIFICATION	Remove the commentedge. If there are more then one comment-edges between the 2 objects, then delete them all.
WITHOUT_CLASSIFICATION	all connected edges
WITHOUT_CLASSIFICATION	Only adjust the stereotype height if we are not newly created. This gets round the problem of loading classes with stereotypes defined, which have the height already including the stereotype.
WITHOUT_CLASSIFICATION	Whatever happened we are no longer newly created, so clear the flag. Then set the bounds for the rectangle we have defined.
WITHOUT_CLASSIFICATION	end class StylePanelFigClass
WITHOUT_CLASSIFICATION	TODO: get tip string from comment
WITHOUT_CLASSIFICATION	This one is still usable, so let's retain it,
WITHOUT_CLASSIFICATION	the last one needs extra space below it
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#removeFromDiagram()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.FigEdge#setDestFigNode(org.tigris.gef.presentation.FigNode)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.FigEdge#setSourceFigNode(org.tigris.gef.presentation.FigNode)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setFilled(boolean)
WITHOUT_CLASSIFICATION	Although not generally true for GEF, for Argo we know that the layer is a LayerPerspective which knows the associated diagram
WITHOUT_CLASSIFICATION	Although not generally true for GEF, for Argo we know that the layer is a LayerPerspective which knows the associated diagram
WITHOUT_CLASSIFICATION	accessors
WITHOUT_CLASSIFICATION	event handling
WITHOUT_CLASSIFICATION	Set the drop location in the case of D&D:
WITHOUT_CLASSIFICATION	contructors
WITHOUT_CLASSIFICATION	Modifiers ...
WITHOUT_CLASSIFICATION	The next line is needed so that we have the right dimension when drawing this Fig on the diagram by pressing down the mouse button, even before releasing the mouse button:
WITHOUT_CLASSIFICATION	Make all the parts match the main fig
WITHOUT_CLASSIFICATION	Visibility ...
WITHOUT_CLASSIFICATION	stereotype fig covers the name fig:
WITHOUT_CLASSIFICATION	element will normally be null when called from PGML parser It will get it's source & destination set later in attachEdges
WITHOUT_CLASSIFICATION	Unfortunately the Fig and it's associated CommentEdge will not be fully initialized yet here if we're being loaded from a PGML file. The remainder of the initialization will happen when set{Dest|Source}FigNode are called from PGMLStackParser.attachEdges()
WITHOUT_CLASSIFICATION	unimplemented
WITHOUT_CLASSIFICATION	Alternatively, we could just return null here, so that you can not create a comment just linked to a comment this way - which is a bit uncommon, but not illegal, so for consistency, we better allow it.
WITHOUT_CLASSIFICATION	return null;
WITHOUT_CLASSIFICATION	Class to display a Stereotype declaration figure using Classifier box notation.<p> TODO: This is just a place-holder right now! - tfm This needs to show tags and constraints.
WITHOUT_CLASSIFICATION	Add...
WITHOUT_CLASSIFICATION	Show ...
WITHOUT_CLASSIFICATION	register for tagDefinitions:
WITHOUT_CLASSIFICATION	TODO: constraints, ...
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.AbstractAction#isEnabled()
WITHOUT_CLASSIFICATION	Set the drop location in the case of D&D:
WITHOUT_CLASSIFICATION	Make all the parts match the main fig
WITHOUT_CLASSIFICATION	Put all the bits together, suppressing bounds calculations until we're all done for efficiency.
WITHOUT_CLASSIFICATION	The next line is needed so that we have the right dimension when drawing this Fig on the diagram by pressing down the mouse button, even before releasing the mouse button:
WITHOUT_CLASSIFICATION	TODO: Need named Tags and Constraints compartments here addFig(tagsFig); addFig(constraintsFig);
WITHOUT_CLASSIFICATION	If moved into an Package
WITHOUT_CLASSIFICATION	If default Namespace is not already set
WITHOUT_CLASSIFICATION	When this is called from PGMLStackParser.attachEdges, we finished the initialization of owning pseudo element (CommentEdge)
WITHOUT_CLASSIFICATION	If the Operation/Reception is abstract, then the text will be set to italics.
WITHOUT_CLASSIFICATION	avoid GEF calcDrawingArea bug when nothing in a diagram.
WITHOUT_CLASSIFICATION	TODO: Add Tags & Constraints addMenu.add(TargetManager.getInstance().getAddAttributeAction()); addMenu.add(TargetManager.getInstance().getAddOperationAction());
WITHOUT_CLASSIFICATION	avoid GEF calcDrawingArea bug when nothing in a diagram.
WITHOUT_CLASSIFICATION	No generalizations in Deployment Diagrams
WITHOUT_CLASSIFICATION	the diagram image data
WITHOUT_CLASSIFICATION	copy the gif image to the clipboard
WITHOUT_CLASSIFICATION	the diagram image data
WITHOUT_CLASSIFICATION	hide grid, otherwise can't see anything
WITHOUT_CLASSIFICATION	bigPort.setFilled(f);
WITHOUT_CLASSIFICATION	background color.
WITHOUT_CLASSIFICATION	2 Pixel padding after compartment
WITHOUT_CLASSIFICATION	Set up hide all / show all
WITHOUT_CLASSIFICATION	Perform the action
WITHOUT_CLASSIFICATION	Only the bigPort may be filled
WITHOUT_CLASSIFICATION	?LINE_WIDTH?
WITHOUT_CLASSIFICATION	see parent
WITHOUT_CLASSIFICATION	?LINE_WIDTH?
WITHOUT_CLASSIFICATION	We remove all of them:
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.undo.UndoableAction#isEnabled()
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	?LINE_WIDTH?
WITHOUT_CLASSIFICATION	If we don't have a fig for this UML object, we'll need to add one. We set the bounds, but they will be reset later.
WITHOUT_CLASSIFICATION	but its position may have been changed:
WITHOUT_CLASSIFICATION	bounds not relevant here, but I am perfectionist...
WITHOUT_CLASSIFICATION	We need to set a new notationprovider, since the Notation language may have been changed:
WITHOUT_CLASSIFICATION	add it again (but now in the right sequence)
WITHOUT_CLASSIFICATION	Now put the text in We must handle the case where the text is null
WITHOUT_CLASSIFICATION	No longer abstract to allow subclasses to remove, so we provide a null default implementation
WITHOUT_CLASSIFICATION	If this is not overridden it will revert to the old behavior All internal subclasses have been updated, but this if for compatibility of non-ArgoUML extensions.
WITHOUT_CLASSIFICATION	Find the compartment fig for this umlObject:
WITHOUT_CLASSIFICATION	Override superclass to do nothing. Fill property cannot be changed.
WITHOUT_CLASSIFICATION	Override superclass to do nothing. Line width cannot be changed.
WITHOUT_CLASSIFICATION	Override superclass to do nothing. Line width property cannot be changed.
WITHOUT_CLASSIFICATION	aggregation
WITHOUT_CLASSIFICATION	end class ActionSrcMultOneToMany
WITHOUT_CLASSIFICATION	TODO: set font?
WITHOUT_CLASSIFICATION	to circumvent too many registered listeners
WITHOUT_CLASSIFICATION	static variables
WITHOUT_CLASSIFICATION	constructors
WITHOUT_CLASSIFICATION	@see javax.swing.event.DocumentListener#insertUpdate(javax.swing.event.DocumentEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.DocumentListener#removeUpdate(javax.swing.event.DocumentEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.DocumentListener#changedUpdate(javax.swing.event.DocumentEvent)
WITHOUT_CLASSIFICATION	@see java.beans.PropertyChangeListener#propertyChange(PropertyChangeEvent)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#hit(java.awt.Rectangle)
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	Calling connect() will add the edge to the GraphModel and any LayerPersectives on that GraphModel will get a edgeAdded event and will add an appropriate FigEdge (determined by the GraphEdgeRenderer).
WITHOUT_CLASSIFICATION	ending editing
WITHOUT_CLASSIFICATION	USED BY PGML.tee
WITHOUT_CLASSIFICATION	Actually return the FigEdge that the FigEdgePort is part of.
WITHOUT_CLASSIFICATION	throw new IllegalArgumentException();
WITHOUT_CLASSIFICATION	Do nothing.
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.DocumentListener#insertUpdate(javax.swing.event.DocumentEvent)
WITHOUT_CLASSIFICATION	Do nothing
WITHOUT_CLASSIFICATION	Do nothing
WITHOUT_CLASSIFICATION	event handling
WITHOUT_CLASSIFICATION	main methods
WITHOUT_CLASSIFICATION	If the user selects an Action that is already selected in sticky mode (double clicked) then we turn off sticky mode and make sure no action is selected.
WITHOUT_CLASSIFICATION	Here the actions to divide a region
WITHOUT_CLASSIFICATION	The 1st region has an invisible divider line (the box is always invisible):
WITHOUT_CLASSIFICATION	Throw out any previous elements that were enclosed but are not a concurrent region; let's move them onto the first region:
WITHOUT_CLASSIFICATION	linewidth?
WITHOUT_CLASSIFICATION	The divider line should be visible, so no need to change its color.
WITHOUT_CLASSIFICATION	Make the composite state 1 region higher:
WITHOUT_CLASSIFICATION	TODO: Verify this. IIUC, then this triggers the CompountStateFig to draw itself correctly. Hence, there was a reason to wait this long to make the state concurrent.
WITHOUT_CLASSIFICATION	Look for the dashed edge
WITHOUT_CLASSIFICATION	We have the dashed edge now find the opposite FigNode
WITHOUT_CLASSIFICATION	Prevent triggering too many events by setName().
WITHOUT_CLASSIFICATION	not???
WITHOUT_CLASSIFICATION	Do nothing
WITHOUT_CLASSIFICATION	Do nothing
WITHOUT_CLASSIFICATION	Consume to stop other modes from trying to take over
WITHOUT_CLASSIFICATION	marker interface only
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#removeFromDiagram()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setBoundsImpl(int, int, int, int)
WITHOUT_CLASSIFICATION	Only reset the text if the two are not the same (i.e the fig has moved, rather than we've just edited the text, when setTargetBBox() will have made them the same). Note that styleBounds could be null, so we do the test this way round.
WITHOUT_CLASSIFICATION	Can't do anything if we don't have a fig.
WITHOUT_CLASSIFICATION	2 Pixel padding after compartment
WITHOUT_CLASSIFICATION	or vice versa?
WITHOUT_CLASSIFICATION	Provide feedback to the user that their name was not accepted
WITHOUT_CLASSIFICATION	Subtract the the offset of the click, to take account of user having not initially clicked in the centre.
WITHOUT_CLASSIFICATION	super returns -1 if any of GEFs buttons was hit (but maybe one of the not-GEF-buttons)
WITHOUT_CLASSIFICATION	Do not show border line, make transparent:
WITHOUT_CLASSIFICATION	cleanup of unused FigText's
WITHOUT_CLASSIFICATION	TODO: This doesn't do anything special with keywords. They should probably go first.
WITHOUT_CLASSIFICATION	There is one fig more in the group than (stereotypes + keyword):
WITHOUT_CLASSIFICATION	The keyword fig already exists.
WITHOUT_CLASSIFICATION	This will contain the Figs that we do not need anymore:
WITHOUT_CLASSIFICATION	bounds not relevant here
WITHOUT_CLASSIFICATION	bounds not relevant here
WITHOUT_CLASSIFICATION	The stereotype fig already exists.
WITHOUT_CLASSIFICATION	The boundary box as held in the target fig, and as listed in the boundary box style field (null if we don't have anything valid)
WITHOUT_CLASSIFICATION	remove all stereotypes that have a graphical icon
WITHOUT_CLASSIFICATION	TODO: check!
WITHOUT_CLASSIFICATION	set new bounds for all included figs
WITHOUT_CLASSIFICATION	StylePanelFigClass relies on getPanelTarget() to return a FigCompartmentBox
WITHOUT_CLASSIFICATION	Get class box, because we will set it's bounding box
WITHOUT_CLASSIFICATION	Get class box, because we will set it's bounding box in text field
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	Calling connect() will add the edge to the GraphModel and any LayerPersectives on that GraphModel will get a edgeAdded event and will add an appropriate FigEdge (determined by the GraphEdgeRenderer).
WITHOUT_CLASSIFICATION	The keyword fig does not exist yet. Let's create one:
WITHOUT_CLASSIFICATION	keywords which look like a stereotype (e.g. <<interface>>) have no owner
WITHOUT_CLASSIFICATION	if there are no stereotypes, we return (0,0), preventing double lines in the class (see issue 4939)
WITHOUT_CLASSIFICATION	end class StylePanelFigAssociationClass
WITHOUT_CLASSIFICATION	/ Constructors /
WITHOUT_CLASSIFICATION	/ Main methods /
WITHOUT_CLASSIFICATION	Create the singleton if it does not exist, and then return it
WITHOUT_CLASSIFICATION	When a new target is selected, we have to check if it 's a use case. Then, the icone "add extension point" have to become enabled.
WITHOUT_CLASSIFICATION	Find the target in the project browser. We can only do anything if its a use case.
WITHOUT_CLASSIFICATION	Create a new extension point and make it the browser target. Then invoke the superclass action method.
WITHOUT_CLASSIFICATION	end class ActionAddExtensionPoint
WITHOUT_CLASSIFICATION	We have already confirmed the connection is valid
WITHOUT_CLASSIFICATION	Detach any edges (such as comment edges) already attached to the FigAssociation before the FigAssociation is removed. They'll later be re-attached to the new FigNodeAssociation
WITHOUT_CLASSIFICATION	If there are bits of an association class then remember their location and path.
WITHOUT_CLASSIFICATION	Create the new FigNodeAssociation and locate it.
WITHOUT_CLASSIFICATION	Add the association ends to the graph model
WITHOUT_CLASSIFICATION	Add the edges (such as comment edges) that were on the old FigAssociation to our new FigNodeAssociation and make sure they are positioned correctly.
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.dnd.DropTargetListener#dragEnter( java.awt.dnd.DropTargetDragEvent)
WITHOUT_CLASSIFICATION	@see java.awt.dnd.DropTargetListener#dragOver( java.awt.dnd.DropTargetDragEvent)
WITHOUT_CLASSIFICATION	@see java.awt.dnd.DropTargetListener#dropActionChanged( java.awt.dnd.DropTargetDragEvent)
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	get the model elements that are being transfered.
WITHOUT_CLASSIFICATION	multiplicity
WITHOUT_CLASSIFICATION	end class ModeCreateAssociation
WITHOUT_CLASSIFICATION	&& ((UMLDiagram) dia).doesAccept(dtde.getSource())
WITHOUT_CLASSIFICATION	Create a new FigText instance based on the given mouse down event and the state of the parent Editor.
WITHOUT_CLASSIFICATION	System.err.println("NullPointerException ignored.");
WITHOUT_CLASSIFICATION	end class SPFigEdgeModelElement
WITHOUT_CLASSIFICATION	System.err.println("NullPointerException ignored.");
WITHOUT_CLASSIFICATION	Get all our sub Figs and hit them with the big stick too
WITHOUT_CLASSIFICATION	Only show the path item when there is an owning namespace.
WITHOUT_CLASSIFICATION	Only show the path item when there is an owning namespace.
WITHOUT_CLASSIFICATION	enumerate all selected figures and update their path accordingly
WITHOUT_CLASSIFICATION	Force the line-width to 0, since the FigGroup that contains the stereotype may want to show a border, but we don't.
WITHOUT_CLASSIFICATION	compartments
WITHOUT_CLASSIFICATION	TODO: Support commentEdges. TODO: Support associations to self. @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	add
WITHOUT_CLASSIFICATION	20 = height of name fig ?
WITHOUT_CLASSIFICATION	Now force calculation of the bounds of the figure, update the edges and trigger anyone who's listening to see if the "bounds" property has changed.
WITHOUT_CLASSIFICATION	2LINE_WIDTH? or extra padding?
WITHOUT_CLASSIFICATION	Set properties of the stereotype box.
WITHOUT_CLASSIFICATION	The nameFig is transparent, since this is a box and the fill color is drawn by the bigPort.
WITHOUT_CLASSIFICATION	Use "aSize" to build up the minimum size. Start with the size of the name compartment and build up.
WITHOUT_CLASSIFICATION	Only take into account the stereotype width, not the height, since the height is included in the name fig:
WITHOUT_CLASSIFICATION	Add the height of all the compartments (if there are any), and check their minimum width:
WITHOUT_CLASSIFICATION	Save our old boundaries so it can be used in property message later
WITHOUT_CLASSIFICATION	Make sure we don't try to set things smaller than the minimum
WITHOUT_CLASSIFICATION	The box for the compartments is somewhere inside the outside bounds:
WITHOUT_CLASSIFICATION	Now the new nameFig height will include the stereotype height:
WITHOUT_CLASSIFICATION	The new height can not be less than the name height:
WITHOUT_CLASSIFICATION	Calculate the minimum needed height for all the compartments:
WITHOUT_CLASSIFICATION	Distribute the extra height over the visible compartments:
WITHOUT_CLASSIFICATION	Increase the height of the fig:
WITHOUT_CLASSIFICATION	Finally set the bounds of the big box and the border fig:
WITHOUT_CLASSIFICATION	hide compartment
WITHOUT_CLASSIFICATION	Hiding one compartment means that the Fig returns to minimal dimensions:
WITHOUT_CLASSIFICATION	@see javax.swing.JComponent#setVisible(boolean)
WITHOUT_CLASSIFICATION	@see javax.swing.Action#isEnabled()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.base.PathConv#stuffPoint(java.awt.Point)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.base.PathConv#setClosestPoint(java.awt.Point)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.base.PathConv#applyOffsetAmount(java.awt.Point, java.awt.Point, int, java.awt.Point)
WITHOUT_CLASSIFICATION	Alternatively, we could reduce the height of the Fig by the height of this one hidden compartment. But that would not be possible for the width - so we better return to minimal dimensions overall.
WITHOUT_CLASSIFICATION	show compartment
WITHOUT_CLASSIFICATION	This sets the lineWidth of all in the group:
WITHOUT_CLASSIFICATION	NameFig and StereotypeFig are handled by parent.
WITHOUT_CLASSIFICATION	forceRepaintShadow();
WITHOUT_CLASSIFICATION	Update the diagram, and other users of these settings:
WITHOUT_CLASSIFICATION	@jve:decl-index=0:visual-constraint="10,10"
WITHOUT_CLASSIFICATION	find the point offset on the line that gives a correct offset
WITHOUT_CLASSIFICATION	default angle is 90 deg.
WITHOUT_CLASSIFICATION	Boundary condition in GEF, make sure this is LESS THAN, not equal
WITHOUT_CLASSIFICATION	If we're using a fixed offset, just add it and return No collision detection is done in this case
WITHOUT_CLASSIFICATION	Check for a collision between our computed position and the edge
WITHOUT_CLASSIFICATION	increase offset by 2px at a time
WITHOUT_CLASSIFICATION	Get the points representing the poly line for our edge
WITHOUT_CLASSIFICATION	increase offset by increments until we're clear
WITHOUT_CLASSIFICATION	limit our retries in case its too hard to get free
WITHOUT_CLASSIFICATION	If we timed out, give it one more try on the other side
WITHOUT_CLASSIFICATION	count >= limit
WITHOUT_CLASSIFICATION	Force the line-width to 0, since the FigGroup that contains the stereotype may want to show a border, but we don't.
WITHOUT_CLASSIFICATION	LOG.log(Level.FINE, "Final point #" + count + " " + result + " offset of " + scaledOffset);
WITHOUT_CLASSIFICATION	segment size for computing slope
WITHOUT_CLASSIFICATION	Two points for line segment used to compute slope of path here NOTE that this is the average slope, not instantaneous, so it will give screwy results near bends in the path
WITHOUT_CLASSIFICATION	If our position was clamped, try to make it up on the other end
WITHOUT_CLASSIFICATION	Can't get the slope of a point. Just return an arbitrary point.
WITHOUT_CLASSIFICATION	Our angle theta is arctan(opposite/adjacent) Because y increases going down the screen, positive angles are clockwise rather than counterclockwise
WITHOUT_CLASSIFICATION	This shouldn't happen, because of our line segment size check
WITHOUT_CLASSIFICATION	"We're going vertical!" - Goose in "Top Gun"
WITHOUT_CLASSIFICATION	Arctan only returns -PI/2 to PI/2 Handle the other two quadrants and normalize to 0 - 2PI
WITHOUT_CLASSIFICATION	Quadrant II & III
WITHOUT_CLASSIFICATION	Quadrant IV
WITHOUT_CLASSIFICATION	Set the following for some backward compatibility with old algorithm
WITHOUT_CLASSIFICATION	Add displacement angle to slope
WITHOUT_CLASSIFICATION	Transform to 0 - 2PI range if we've gone all the way around circle
WITHOUT_CLASSIFICATION	Compute our deltas
WITHOUT_CLASSIFICATION	LOG.log(Level.FINE,result.x + ", " + result.y + " theta = " + theta 180 / Math.PI + " dx = " + dx + " dy = " + dy);
WITHOUT_CLASSIFICATION	Load the standard colour, just add an alpha channel.
WITHOUT_CLASSIFICATION	Should never get here. If we do, return the inner point.
WITHOUT_CLASSIFICATION	Called by propertyChange
WITHOUT_CLASSIFICATION	this does a calcBounds()
WITHOUT_CLASSIFICATION	NOTE: This listener needs to always be active even if this tab isn't visible
WITHOUT_CLASSIFICATION	@see org.tigris.gef.base.Diagram#getClassAndModelID()
WITHOUT_CLASSIFICATION	@see javax.swing.Action#isEnabled()
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.Action#isEnabled()
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	The clone method that should clone the JGraph with it's contents and the toolbar with it's contents. Since both JGraph as the toolbar are coming from the GEF framework, cloning them will be hard work and should actually not be placed here but in a clone method of the JGraph and the Toolbar. @see java.lang.Object#clone()
WITHOUT_CLASSIFICATION	@see java.awt.Component#setVisible(boolean)
WITHOUT_CLASSIFICATION	If location is non-null, convert to a rectangle that we can use
WITHOUT_CLASSIFICATION	The following is the default implementation for diagrams of which the owner is a namespace.
WITHOUT_CLASSIFICATION	source source position destination destination position number of objects to be copied
WITHOUT_CLASSIFICATION	"unnamed " +
WITHOUT_CLASSIFICATION	TODO: should update to size of diagram contents
WITHOUT_CLASSIFICATION	This should not be needed if the above is correct, but let's be sure:
WITHOUT_CLASSIFICATION	This should not be needed if the above is correct, but let's be sure:
WITHOUT_CLASSIFICATION	ActionPaste.getInstance().setEnabled( Globals.clipBoard != null && !Globals.clipBoard.isEmpty());
WITHOUT_CLASSIFICATION	next statement gives us a clone JGraph but not a cloned Toolbar
WITHOUT_CLASSIFICATION	@see org.tigris.gef.event.ModeChangeListener#modeChange(org.tigris.gef.event.ModeChangeEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mouseEntered(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseMotionListener#mouseMoved(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	remains selected
WITHOUT_CLASSIFICATION	the old selection
WITHOUT_CLASSIFICATION	Target might not have been initialised yet.
WITHOUT_CLASSIFICATION	add to selection
WITHOUT_CLASSIFICATION	Optimize for the normal case to minimize target changes
WITHOUT_CLASSIFICATION	}
WITHOUT_CLASSIFICATION	Assuming the target is some model element.
WITHOUT_CLASSIFICATION	how to handle empty target lists? probably the TabDiagram should only show an empty pane in that case
WITHOUT_CLASSIFICATION	Assuming the target is some model element.
WITHOUT_CLASSIFICATION	was ""
WITHOUT_CLASSIFICATION	Although we register for notification of diagrams being deleted, we currently depend on the TargetManager to assign a new target when this happens When we implement MDI and have our own list of open diagrams we can ressurect the use of this
WITHOUT_CLASSIFICATION	Any Swing work done here needs to be queued to the AWT thread since we don't know what thread our event will arrive on
WITHOUT_CLASSIFICATION	- RedrawManager.lock();
WITHOUT_CLASSIFICATION	- RedrawManager.lock();
WITHOUT_CLASSIFICATION	getLayerManager().getActiveLayer().paint(g);
WITHOUT_CLASSIFICATION	- RedrawManager.unlock(); - _redrawer.repairDamage();
WITHOUT_CLASSIFICATION	getLayerManager().getActiveLayer().paint(g);
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#deleteFromModel()
WITHOUT_CLASSIFICATION	@see javax.swing.Action#getValue(java.lang.String)
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	This makes the text not touch the text-border line:
WITHOUT_CLASSIFICATION	TODO: We don't currently have any settings that can change on a per-fig basis, so we can just use the project/diagram defaults settings = new DiagramSettings(renderSettings);
WITHOUT_CLASSIFICATION	Certain types of fixed text (e.g. a FigStereotype with a keyword) may not have an owner
WITHOUT_CLASSIFICATION	Now, we link it to the modelelements which are represented by FigNode
WITHOUT_CLASSIFICATION	update all tools' enabled status
WITHOUT_CLASSIFICATION	remember the fig for later
WITHOUT_CLASSIFICATION	Let's build the comment first, unlinked.
WITHOUT_CLASSIFICATION	Prevent e.g. AssociationClasses from being added trice:
WITHOUT_CLASSIFICATION	Select the new comment as target
WITHOUT_CLASSIFICATION	Create the Node Fig for the comment itself and draw it
WITHOUT_CLASSIFICATION	Create the comment links and draw them
WITHOUT_CLASSIFICATION	Place the comment Fig on the nicest spot on the diagram
WITHOUT_CLASSIFICATION	If we're drawing from an edge
WITHOUT_CLASSIFICATION	$NON-NLS-<n>$
WITHOUT_CLASSIFICATION	$NON-NLS-<n>$
WITHOUT_CLASSIFICATION	$NON-NLS-<n>$
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.undo.UndoableAction#isEnabled()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#paint(java.awt.Graphics)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.ui.PopupGenerator#getPopUpActions(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	Calling connect() will add the edge to the GraphModel and any LayerPersectives on that GraphModel will get a edgeAdded event and will add an appropriate FigEdge (determined by the GraphEdgeRenderer).
WITHOUT_CLASSIFICATION	user made a false start
WITHOUT_CLASSIFICATION	So, the target is a MAssociationRole
WITHOUT_CLASSIFICATION	MVW This is not the correct way, but it allows connecting a CommentEdge to it! See e.g. ActionAddNote for the correct way. Testcase: 1. Select the message. 2. Click the Comment tool.
WITHOUT_CLASSIFICATION	end class ActionAddMessage
WITHOUT_CLASSIFICATION	let's use groups to construct the different text sections at the association
WITHOUT_CLASSIFICATION	No further listeners required in this case - the rest is handled by the notationProvider and sub-Figs.
WITHOUT_CLASSIFICATION	This only happens if model-change events arrive before we are completely constructed.
WITHOUT_CLASSIFICATION	x^2 + y^2 = r^2 (equation of a circle)
WITHOUT_CLASSIFICATION	max distance is set at 100 pixels, (rSquared = 100^2)
WITHOUT_CLASSIFICATION	east
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#removeFromDiagram()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#propertyChange(java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed( java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	end class FigAssociation
WITHOUT_CLASSIFICATION	Note that "multiplicity" is what is the notation is listening for in UML1.4 "uppervalue" are listened to in UML2. It is not currently why it is not required to register for "lowerValue" also.
WITHOUT_CLASSIFICATION	no need to listen to these property changes - the notationProvider takes care of this.
WITHOUT_CLASSIFICATION	no need to listen to these property changes - the notationProvider takes care of this.
WITHOUT_CLASSIFICATION	, new String[] {"name", "visibility", "stereotype"}
WITHOUT_CLASSIFICATION	, new String[] {"name", "visibility", "stereotype"}
WITHOUT_CLASSIFICATION	These are a list of arrow types.
WITHOUT_CLASSIFICATION	Added to the arrow type for navigable
WITHOUT_CLASSIFICATION	Finished editing. Parse the text that was edited. Only the role is editable, hence:
WITHOUT_CLASSIFICATION	figEdge.showHelp(role.getParsingHelp()); role.setText();
WITHOUT_CLASSIFICATION	Pass everything else to superclass
WITHOUT_CLASSIFICATION	end class ActionNavigability
WITHOUT_CLASSIFICATION	Nothing yet. Later maybe something like:
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	putNotationArgument("showAssociationName", getSettings().isShowAssociationNames());
WITHOUT_CLASSIFICATION	The text the user has filled in the textfield is first checked to see if it's a valid multiplicity. If so then that is the multiplicity to be set. If not the input is rejected.
WITHOUT_CLASSIFICATION	Fonts and colors should get updated automatically for contained figs
WITHOUT_CLASSIFICATION	There is none...
WITHOUT_CLASSIFICATION	only initialized to prevent warning
WITHOUT_CLASSIFICATION	not supported for this target
WITHOUT_CLASSIFICATION	make space for the clarifier margin between text and border
WITHOUT_CLASSIFICATION	This next line presumes that the 1st fig with this owner is the previous port - and consequently nullifies the owner of this 1st fig.
WITHOUT_CLASSIFICATION	Add a listener for changes to any property
WITHOUT_CLASSIFICATION	Check if multiple items are selected:
WITHOUT_CLASSIFICATION	Show ...
WITHOUT_CLASSIFICATION	popupAddOffset should be equal to the number of items added here:
WITHOUT_CLASSIFICATION	TODO: The following is carried over from setOwner, but probably isn't needed renderingChanged(); It does the following (add as needed): updateNameText(); updateStereotypeText(); updateStereotypeIcon(); updateBounds(); damage();
WITHOUT_CLASSIFICATION	Be careful here since subclasses could have overridden this with the assumption that it wouldn't be called before the constructors finished
WITHOUT_CLASSIFICATION	TODO: MVW: I think this has to be: clone.nameFig = (FigSingleLineText) cloneFig; but have not the means to investigate, since this code is not yet used. Enable the menu-items for Copy/Paste to test... BTW: In some other FigNodeModelElement classes I see the same mistake.
WITHOUT_CLASSIFICATION	this rectangle marks the whole modelelement figure; everything is inside it:
WITHOUT_CLASSIFICATION	Clone this figure. After the base clone method has been called determine which child figs of the clone represent the name, stereotype and port. <p> TODO: enclosedFigs, encloser and eventSenders may also need to be cloned. @see java.lang.Object#clone() @return the cloned figure
WITHOUT_CLASSIFICATION	Idem here: clone.stereotypeFig = (FigStereotypesGroup) cloneFig;
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getEnclosingFig()
WITHOUT_CLASSIFICATION	update any text, colors, fonts, etc.
WITHOUT_CLASSIFICATION	parse the text that was edited
WITHOUT_CLASSIFICATION	add stereotype view submenu
WITHOUT_CLASSIFICATION	The node's been placed on the diagram
WITHOUT_CLASSIFICATION	Add stereotypes submenu
WITHOUT_CLASSIFICATION	Set the namespace of the enclosed model element to the namespace of the encloser.
WITHOUT_CLASSIFICATION	Find all ElementResidences between the class and the component:
WITHOUT_CLASSIFICATION	There was no ElementResidence yet, so let's create one:
WITHOUT_CLASSIFICATION	The node's been placed within some Fig
WITHOUT_CLASSIFICATION	There were 2 ElementResidences .. strange case.
WITHOUT_CLASSIFICATION	There is already a correct ElementResidence
WITHOUT_CLASSIFICATION	The owner is already linked to the component
WITHOUT_CLASSIFICATION	We are getting events we don't want. Filter them out.
WITHOUT_CLASSIFICATION	Only update the bounds if they change:
WITHOUT_CLASSIFICATION	We handle and consume editing events
WITHOUT_CLASSIFICATION	resize the FigNode to accommodate the new text
WITHOUT_CLASSIFICATION	If the source of the event is an UML object, e.g. the owner of this Fig (but not always only the owner is shown, e.g. for a class, also its attributes are shown), then the UML model has been changed.
WITHOUT_CLASSIFICATION	TODO: Should this not be an assert?
WITHOUT_CLASSIFICATION	west
WITHOUT_CLASSIFICATION	If the user double clicks on any part of this FigNode, pass it down to one of the internal Figs. This allows the user to initiate direct text editing. @see java.awt.event.MouseListener#mouseClicked(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	south
WITHOUT_CLASSIFICATION	event handlers - MouseListener implementation
WITHOUT_CLASSIFICATION	Convert null to empty string and clear help message
WITHOUT_CLASSIFICATION	it is done
WITHOUT_CLASSIFICATION	this enables direct text editing for sub figs of a FigGroup object:
WITHOUT_CLASSIFICATION	either layer or owner was null
WITHOUT_CLASSIFICATION	Default is to do nothing
WITHOUT_CLASSIFICATION	Default is to do nothing
WITHOUT_CLASSIFICATION	Default is to do nothing
WITHOUT_CLASSIFICATION	Default is to do nothing
WITHOUT_CLASSIFICATION	This test needed for a FigPool
WITHOUT_CLASSIFICATION	Get model listeners removed:
WITHOUT_CLASSIFICATION	is used as InstanceSpecification, see UMLDeploymentDiagram
WITHOUT_CLASSIFICATION	TODO: what about ObjectNode? return org.eclipse.uml2.uml.ObjectNode.class;
WITHOUT_CLASSIFICATION	@see javax.swing.Action#isEnabled()
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(ActionEvent)
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	TODO: State & Vertex are independent classes in UML 2.1
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	only initialized to prevent warning
WITHOUT_CLASSIFICATION	not supported for this target
WITHOUT_CLASSIFICATION	internal methods
WITHOUT_CLASSIFICATION	TODO assert modelElement != null???
WITHOUT_CLASSIFICATION	Default for name and stereotype is no border
WITHOUT_CLASSIFICATION	Override FigNode implementation to keep setOwner from getting called.
WITHOUT_CLASSIFICATION	TODO: Use per-project undo manager, not global
WITHOUT_CLASSIFICATION	TODO: Use per-project undo manager, not global
WITHOUT_CLASSIFICATION	TODO: Use per-project undo manager, not global
WITHOUT_CLASSIFICATION	TODO: Use per-project undo manager, not global
WITHOUT_CLASSIFICATION	Use DiagramInterface to add classes to diagram
WITHOUT_CLASSIFICATION	ActionAddAllClassesFromModel
WITHOUT_CLASSIFICATION	we have an edge (the UML modelelement!)
WITHOUT_CLASSIFICATION	situation 1
WITHOUT_CLASSIFICATION	@see javax.swing.Action#isEnabled()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.FigEdge#setFig(org.tigris.gef.presentation.Fig)
WITHOUT_CLASSIFICATION	Text group to contain name & stereotype
WITHOUT_CLASSIFICATION	computeRoute(); this recomputes the route if you reload the diagram.
WITHOUT_CLASSIFICATION	in case someone turns it on
WITHOUT_CLASSIFICATION	Do not allow fill to change. We should see through the text to the color of the main FIg background.
WITHOUT_CLASSIFICATION	Now force minimum dimensions for the text:
WITHOUT_CLASSIFICATION	Now add the areas around the text to return the complete size:
WITHOUT_CLASSIFICATION	calculate the source and dest figs for to self assoc
WITHOUT_CLASSIFICATION	reset the pointIndex
WITHOUT_CLASSIFICATION	check pre-conds
WITHOUT_CLASSIFICATION	Set-up:
WITHOUT_CLASSIFICATION	the fig that was under the mouse when it was released
WITHOUT_CLASSIFICATION	make a nice little target area:
WITHOUT_CLASSIFICATION	and find the Fig:
WITHOUT_CLASSIFICATION	last is the top fig.
WITHOUT_CLASSIFICATION	check intermediate post-condition.
WITHOUT_CLASSIFICATION	delegate the re-routing to graphmodels.
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setLineColor(java.awt.Color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getLineColor()
WITHOUT_CLASSIFICATION	_x = x; _y = y; _w = w; _h = h;
WITHOUT_CLASSIFICATION	add Figs to the FigNode in back-to-front order
WITHOUT_CLASSIFICATION	set it to an invalid number by default to make sure it is set correctly.
WITHOUT_CLASSIFICATION	figPoly.setFillColor(col);
WITHOUT_CLASSIFICATION	figClone._polygon = (Polygon) _polygon.clone();
WITHOUT_CLASSIFICATION	north
WITHOUT_CLASSIFICATION	Do nothing until code is reviewed
WITHOUT_CLASSIFICATION	Do nothing until code is reviewed
WITHOUT_CLASSIFICATION	TODO: Do nothing until code is reviewed
WITHOUT_CLASSIFICATION	Message
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	@see javax.swing.Action#isEnabled()
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	Crazy numbering scheme at work here. Here's how the handle numbers are laid out. Values 0-7 are defined by GEF and go left to right, top to bottom (ie not clockwise or counterclockwise). Values 10-14 zigzag North, South, West, East, Southwest. If you can correctly guess where 15 will go, you should buy a lottery ticket immediately. <pre> 10 0-------1-------2 | | 12 3 4 13 | | 14 5-------6-------7 11 </pre>
WITHOUT_CLASSIFICATION	ClassifierRole ClassifierRole
WITHOUT_CLASSIFICATION	Simulate a press of the mouse above the calculated point:
WITHOUT_CLASSIFICATION	Calculate the drop location, and place every n-th element at an offset proportional to n.
WITHOUT_CLASSIFICATION	super implementation found a hit
WITHOUT_CLASSIFICATION	Take canvas scrolling into account. The implementation below does place the element correctly when the canvas has been scrolled.
WITHOUT_CLASSIFICATION	Simulate a release of the mouse:
WITHOUT_CLASSIFICATION	Overridden in order to implement PathCompartmentContainer.
WITHOUT_CLASSIFICATION	do nothing by default
WITHOUT_CLASSIFICATION	Don't allow drag outside of bounds of diagram
WITHOUT_CLASSIFICATION	Overridden in order to implement PathCompartmentContainer.
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#paint(java.awt.Graphics)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#calcBounds()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#removeFromDiagram()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#deleteFromModel()
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mousePressed(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	If the user has selected ModePlace either by a diagram tool or AddToDiagram then we don't want to show the clarifiers.
WITHOUT_CLASSIFICATION	If the user has selected ModePlace either by a diagram tool or AddToDiagram then we don't want to show the toolbelt items.
WITHOUT_CLASSIFICATION	Remember what handle was clicked for the case where the drag is released over empty space
WITHOUT_CLASSIFICATION	transparent cyan
WITHOUT_CLASSIFICATION	yellow
WITHOUT_CLASSIFICATION	translucent green
WITHOUT_CLASSIFICATION	super(ModeCreatePolyEdge.class, "edgeClass", Model.getMetaTypes().getAssociation(), name);
WITHOUT_CLASSIFICATION	set this to true on to enable debugging figs
WITHOUT_CLASSIFICATION	anchor position
WITHOUT_CLASSIFICATION	The EnumerationLiteral uses a dedicated notation that supports parsing "name1;name2;name3" and stereotypes. Also supports deleting a literal by erasing text.
WITHOUT_CLASSIFICATION	TODO: The UML does not seem to define this name. Or is it?
WITHOUT_CLASSIFICATION	The serialVersionUID (generated by Eclipse)
WITHOUT_CLASSIFICATION	UML spec for Generalizations doesn't call for name
WITHOUT_CLASSIFICATION	Name & stereotypes get updated by superclass
WITHOUT_CLASSIFICATION	Update the discriminator if it changed
WITHOUT_CLASSIFICATION	show it
WITHOUT_CLASSIFICATION	fig.calcBounds();
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mouseEntered(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	we only take the filename, not the whole system path
WITHOUT_CLASSIFICATION	_x = x; _y = y; _w = w; _h = h;
WITHOUT_CLASSIFICATION	add Figs to the FigNode in back-to-front order
WITHOUT_CLASSIFICATION	make port invisible unless mouse enters
WITHOUT_CLASSIFICATION	event handlers - MouseListener implementation
WITHOUT_CLASSIFICATION	The following does not seem to work - centered the Fig instead. getNameFig().setJustificationByName("center");
WITHOUT_CLASSIFICATION	get the widest of all textfigs calculate the total height
WITHOUT_CLASSIFICATION	Create the new FigAssociation edge to replace the node
WITHOUT_CLASSIFICATION	Center the NameFig, since center justification does not seem to work.
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	Do nothing, this rect will always be transparent
WITHOUT_CLASSIFICATION	Do nothing, this rect will always be transparent
WITHOUT_CLASSIFICATION	@see java.beans.VetoableChangeListener#vetoableChange(java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	update any text, colors, fonts, etc.
WITHOUT_CLASSIFICATION	update the relative sizes and positions of internel Figs
WITHOUT_CLASSIFICATION	popupAddOffset should be equal to the number of items added here:
WITHOUT_CLASSIFICATION	Add stereotypes submenu
WITHOUT_CLASSIFICATION	We handle and consume editing events
WITHOUT_CLASSIFICATION	Detach any non-associationend edges (such as comment edges) already attached before this association node is removed. They'll later be re-attached to the new FigAssociation
WITHOUT_CLASSIFICATION	Now we can remove ourself (which will also remove the attached association ends edges)
WITHOUT_CLASSIFICATION	Add the non-associationend edges (such as comment edges) that were originally attached to this and attach them to the new FigAssociation and make sure they are positioned correctly.
WITHOUT_CLASSIFICATION	List of model element listeners we've registered.
WITHOUT_CLASSIFICATION	Added this part to load the extra menu content
WITHOUT_CLASSIFICATION	Owner related todo items:
WITHOUT_CLASSIFICATION	Fig related todo items:
WITHOUT_CLASSIFICATION	parse the text that was edited
WITHOUT_CLASSIFICATION	Pass everything except editing events to superclass
WITHOUT_CLASSIFICATION	If the source of the event is an UML object, then the UML model has been changed.
WITHOUT_CLASSIFICATION	The following is a possible future improvement of the modelChanged() function. Michiel: Propose not to do this to keep architecture stable.
WITHOUT_CLASSIFICATION	Default implementation is to do nothing
WITHOUT_CLASSIFICATION	Default implementation is to do nothing
WITHOUT_CLASSIFICATION	TODO: Update setting
WITHOUT_CLASSIFICATION	accessors
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	We moused over an object just as it was deleted transient condition - doesn't require I18N
WITHOUT_CLASSIFICATION	TODO: We don't have any settings that can change per-fig currently so we can just use the default settings; settings = new DiagramSettings(renderSettings);
WITHOUT_CLASSIFICATION	Default implementation is to do nothing
WITHOUT_CLASSIFICATION	Default implementation is to do nothing
WITHOUT_CLASSIFICATION	Default implementation is to do nothing
WITHOUT_CLASSIFICATION	Default implementation is to do nothing
WITHOUT_CLASSIFICATION	Required for MouseListener interface, but we only care about clicks
WITHOUT_CLASSIFICATION	Required for MouseListener interface, but we only care about clicks
WITHOUT_CLASSIFICATION	Required for MouseListener interface, but we only care about clicks
WITHOUT_CLASSIFICATION	Required for MouseListener interface, but we only care about clicks
WITHOUT_CLASSIFICATION	No need to update if model element went away
WITHOUT_CLASSIFICATION	Required for KeyListener interface, but not used
WITHOUT_CLASSIFICATION	Required for KeyListener interface, but not used
WITHOUT_CLASSIFICATION	Both ends must be defined and nodes that are on the graph already.
WITHOUT_CLASSIFICATION	internal methods
WITHOUT_CLASSIFICATION	If the edge is from a circle to a circle (e.g. between use cases) we have our own implementation overriding GEF. Which attempts to keep the edges perpendicular if the edge is already close to perpendicular.
WITHOUT_CLASSIFICATION	newFC = _content;
WITHOUT_CLASSIFICATION	GEF sets a different Fig than the one that we had at construction time, so we need to set its color and width
WITHOUT_CLASSIFICATION	place the edge on the layer and update the diagram
WITHOUT_CLASSIFICATION	end computeRoute
WITHOUT_CLASSIFICATION	TODO: Does this help?
WITHOUT_CLASSIFICATION	If this is not a circle to circle edge we default to let GEF calculate edge route.
WITHOUT_CLASSIFICATION	? two iterations of refinement, maybe should be a for-loop
WITHOUT_CLASSIFICATION	Give up if the assocation ends don't have a type defined
WITHOUT_CLASSIFICATION	Get the two ends of any valid edge
WITHOUT_CLASSIFICATION	Only allow binary associations
WITHOUT_CLASSIFICATION	Set the drop location in the case of D&D:
WITHOUT_CLASSIFICATION	TODO: assumes public
WITHOUT_CLASSIFICATION	(MElementImport)
WITHOUT_CLASSIFICATION	Modifiers ...
WITHOUT_CLASSIFICATION	This sets the lineWidth of all in the group:
WITHOUT_CLASSIFICATION	NameFig and StereotypeFig are handled by parent.
WITHOUT_CLASSIFICATION	If the line angle is less than 3 degrees then snap the line straight
WITHOUT_CLASSIFICATION	/ Methods that implement the MutableGraphModel interface /
WITHOUT_CLASSIFICATION	A dependency potentially has many clients and suppliers. We only consider the first of each (not clear that we should really accept the case where there is more than one of either)
WITHOUT_CLASSIFICATION	Add the node, check that it is an actor or use case and add it to the model namespace.
WITHOUT_CLASSIFICATION	Tell GEF its changed
WITHOUT_CLASSIFICATION	Add the element and place it in the namespace of the model
WITHOUT_CLASSIFICATION	Tell GEF
WITHOUT_CLASSIFICATION	Suggest that actors may not connect (see JavaDoc comment about this).
WITHOUT_CLASSIFICATION	Everything else is OK
WITHOUT_CLASSIFICATION	Remove a node
WITHOUT_CLASSIFICATION	Remove an edge
WITHOUT_CLASSIFICATION	Something was added - nothing for us to worry about
WITHOUT_CLASSIFICATION	Invoke the parent constructor first
WITHOUT_CLASSIFICATION	Invoke the parent refresh first
WITHOUT_CLASSIFICATION	end class StylePanelFigUseCase
WITHOUT_CLASSIFICATION	initialize any other Figs here
WITHOUT_CLASSIFICATION	Only the head should be filled (not the text)
WITHOUT_CLASSIFICATION	Accumulate a bounding box for all the Figs in the group.
WITHOUT_CLASSIFICATION	name updating
WITHOUT_CLASSIFICATION	Text fig to hold the <<include>> label
WITHOUT_CLASSIFICATION	The <<include>> label. It's not a true stereotype, so don't use the stereotype support
WITHOUT_CLASSIFICATION	TRY SOME ACTION ERRORS
WITHOUT_CLASSIFICATION	add Figs to the FigNode in back-to-front order
WITHOUT_CLASSIFICATION	Set the drop location in the case of D&D:
WITHOUT_CLASSIFICATION	Check if multiple items are selected:
WITHOUT_CLASSIFICATION	Make all the parts match the main fig
WITHOUT_CLASSIFICATION	If the element import is in the old owned, it means it must have been removed. Make sure the associated model element is removed.
WITHOUT_CLASSIFICATION	By default we don't show the attribute check box. Mark this object as a listener for the check box.
WITHOUT_CLASSIFICATION	These are the positions of child figs inside this fig They must be added in the constructor in this order. For now the name must not be last as this would force zero width lines (until GEF is fixed)
WITHOUT_CLASSIFICATION	add Figs to the FigNode in back-to-front order Put this rectangle behind the rest, so it goes first
WITHOUT_CLASSIFICATION	Make the line dashed
WITHOUT_CLASSIFICATION	Add an arrow with an open arrow head
WITHOUT_CLASSIFICATION	Make the edge go between nearest points
WITHOUT_CLASSIFICATION	Create a new version of the relevant fig
WITHOUT_CLASSIFICATION	The nodes at the two ends
WITHOUT_CLASSIFICATION	The figs for the two end nodes
WITHOUT_CLASSIFICATION	Link the new include relationship in to the ends
WITHOUT_CLASSIFICATION	Link the new dependency in to the ends
WITHOUT_CLASSIFICATION	Side effect: This creates the fig:
WITHOUT_CLASSIFICATION	A use case has an external separator. External means external to the compartment box. This horizontal line sticks out of the box, and touches the ellipse edge.
WITHOUT_CLASSIFICATION	by default, do not show extension points:
WITHOUT_CLASSIFICATION	Use arbitrary dimensions for now.
WITHOUT_CLASSIFICATION	Get the parent vector first
WITHOUT_CLASSIFICATION	Formula for a is described in the overall class description.
WITHOUT_CLASSIFICATION	For an ellipse, we can put the box in the middle:
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#paint(java.awt.Graphics)
WITHOUT_CLASSIFICATION	Make the edge go between nearest points
WITHOUT_CLASSIFICATION	Add menu to add an extension point or note. Placed one before last, so the "Properties" entry is always last.
WITHOUT_CLASSIFICATION	Where there is more than one supplier or client, take the first element in each case. There really ought to be a check that there are some here for safety.
WITHOUT_CLASSIFICATION	Modifier menu. Placed one before last, so the "Properties" entry is always last.
WITHOUT_CLASSIFICATION	Work out the radii of the ellipse, a and b. The top right corner of the ellipse (Cartesian coordinates, centered on the origin) will be at (x,y)
WITHOUT_CLASSIFICATION	Result as integers, rounded up. We ensure that the radii are integers for convenience.
WITHOUT_CLASSIFICATION	Use the code from the FigCircle, not the one from Fig.
WITHOUT_CLASSIFICATION	Let's register for events from all modelelements that change the name or body text:
WITHOUT_CLASSIFICATION	Register for name changes, added extensionPoints and abstract makes the text italic. All Figs need to listen to "remove", too:
WITHOUT_CLASSIFICATION	register for extension points:
WITHOUT_CLASSIFICATION	Set bounds will be called from our superclass constructor before our constructor has run, so make sure this gets set up if needed.
WITHOUT_CLASSIFICATION	Set up FigText to hold the condition.
WITHOUT_CLASSIFICATION	Join all into a group
WITHOUT_CLASSIFICATION	UML spec for Extend doesn't call for name nor stereotype
WITHOUT_CLASSIFICATION	Make sure the line is dashed
WITHOUT_CLASSIFICATION	Set up the property panels for use case diagrams:
WITHOUT_CLASSIFICATION	Actions specific to the use case diagram toolbar
WITHOUT_CLASSIFICATION	The renderer should be a singleton
WITHOUT_CLASSIFICATION	Allow all Packages and Classifiers..
WITHOUT_CLASSIFICATION	TRY THE PREDECESSORS
WITHOUT_CLASSIFICATION	If location is non-null, convert to a rectangle that we can use
WITHOUT_CLASSIFICATION	TODO: This is using the default platform character encoding specifying an encoding will produce more predictable results
WITHOUT_CLASSIFICATION	The <<extend>> label. It's not a true stereotype, so don't use the stereotype support int y = getNameFig().getBounds().height;
WITHOUT_CLASSIFICATION	Place in the middle of the line and ensure the line is dashed. Add an arrow with an open arrow head. Remember that for an extends relationship, the arrow points to the base use case, but because of the way we draw it, that is still the destination end.
WITHOUT_CLASSIFICATION	Let the group recalculate its bounds and then tell GEF we've finished.
WITHOUT_CLASSIFICATION	We accept a Package, but not a Model or a Subsystem.
WITHOUT_CLASSIFICATION	If we do not exclude a Model here, then dropping the Model on a UseCase diagram causes a package to be drawn.
WITHOUT_CLASSIFICATION	empty list
WITHOUT_CLASSIFICATION	private constructor to enforce singleton
WITHOUT_CLASSIFICATION	some convenience methods
WITHOUT_CLASSIFICATION	read until the end section is found, discard generated content
WITHOUT_CLASSIFICATION	Constructor. <p> TODO: Correct? @param nodes The UML elements, typically classifiers, to generate. @param inModel <code>true</code> if the path is in the model.
WITHOUT_CLASSIFICATION	Class Table
WITHOUT_CLASSIFICATION	Select Buttons
WITHOUT_CLASSIFICATION	Output Directory
WITHOUT_CLASSIFICATION	Compile Checkbox
WITHOUT_CLASSIFICATION	TODO: the last argument (recursive flag) should be a selectable option
WITHOUT_CLASSIFICATION	skip backup files. This is actually a workaround for the cpp generator, which always creates backup files (it's a bug).
WITHOUT_CLASSIFICATION	TODO: Should be improved so that it's recognized whether there is something selected that can actually be generated Nothing selected in the diagram
WITHOUT_CLASSIFICATION	TODO: This is using the default platform character encoding. Specifying an encoding will produce more predictable results
WITHOUT_CLASSIFICATION	TODO: Get saved default directory outputDirectoryComboBox.getModel().setSelectedItem(savedDir);
WITHOUT_CLASSIFICATION	TODO: Get default output directory from user settings Project p = ProjectManager.getManager().getCurrentProject(); p.getProjectSettings().setGenerationOutputDir(path);
WITHOUT_CLASSIFICATION	Generate Button --------------------------------------
WITHOUT_CLASSIFICATION	remove trailing /
WITHOUT_CLASSIFICATION	classify nodes by base path
WITHOUT_CLASSIFICATION	else ignore
WITHOUT_CLASSIFICATION	generate the files
WITHOUT_CLASSIFICATION	Doesn't really matter what set we use.
WITHOUT_CLASSIFICATION	Show Filechooser to select OutputDirectory
WITHOUT_CLASSIFICATION	end class ClassGenerationDialog
WITHOUT_CLASSIFICATION	end class TableModelClassChecks
WITHOUT_CLASSIFICATION	Try Changing the direction of m7
WITHOUT_CLASSIFICATION	private constructor to enforce singleton
WITHOUT_CLASSIFICATION	The diagram already exists in this project. Select it as the current target.
WITHOUT_CLASSIFICATION	TableModel implementation
WITHOUT_CLASSIFICATION	ArgoEventPump.fireEvent( new ArgoImporterEvent(ArgoEventTypes.IMPORTER_ADDED, gen));
WITHOUT_CLASSIFICATION	Check if this diagram already exists in the project
WITHOUT_CLASSIFICATION	Otherwise create a new classdiagram for the package.
WITHOUT_CLASSIFICATION	if the classifier is not in the current diagram, add it:
WITHOUT_CLASSIFICATION	The following calls are ORDER DEPENDENT. Not sure why, but the layer add must come before the model add or we'll end up with duplicate figures in the diagram. - tfm
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	the class is in the diagram so we are on a second pass, find the fig for this class can update its visible state.
WITHOUT_CLASSIFICATION	add edges for a 2-pass r.e. process we might have already added the class but not its edges
WITHOUT_CLASSIFICATION	"Java" is the default module for historical reasons, but it's not required to be there
WITHOUT_CLASSIFICATION	the previous line helps, but we better check again:
WITHOUT_CLASSIFICATION	not a SuffixFilter selected, so we take all
WITHOUT_CLASSIFICATION	filter out all unchanged files
WITHOUT_CLASSIFICATION	set the lastModified value
WITHOUT_CLASSIFICATION	return Arrays.copyOf(selectedFiles, selectedFiles.length);
WITHOUT_CLASSIFICATION	iss.setValue(countFiles + (i + 1) / 10);
WITHOUT_CLASSIFICATION	Roughly equivalent to and derived from old Import.doFile()
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.JFileChooser#approveSelection()
WITHOUT_CLASSIFICATION	@see javax.swing.JFileChooser#cancelSelection()
WITHOUT_CLASSIFICATION	New style importers don't create diagrams, so we'll do it based on the list of newElements that they created
WITHOUT_CLASSIFICATION	Do layout even if problems occurred during import
WITHOUT_CLASSIFICATION	Add messages from caught exceptions
WITHOUT_CLASSIFICATION	Select the correct diagram (implicitly creates it)
WITHOUT_CLASSIFICATION	Add the element to the diagram
WITHOUT_CLASSIFICATION	Print an exception trace to a string buffer
WITHOUT_CLASSIFICATION	TODO: Get the list of extended settings from the current language importer and add those too
WITHOUT_CLASSIFICATION	level 0 import detail
WITHOUT_CLASSIFICATION	level 1 import detail
WITHOUT_CLASSIFICATION	level 2 import detail
WITHOUT_CLASSIFICATION	build the configPanel:
WITHOUT_CLASSIFICATION	de-selects the fig minimising & layout if we are not creating diagrams
WITHOUT_CLASSIFICATION	select the level of import 0 - classifiers only 1 - classifiers plus feature specifications 2 - full import, feature detail
WITHOUT_CLASSIFICATION	cp1252 is often the default, but windows-1252 is the name listed by Charset.availableCharsets
WITHOUT_CLASSIFICATION	Get the extension panel for the configuration settings.
WITHOUT_CLASSIFICATION	ExplorerEventAdaptor.getInstance().structureChanged(); ProjectBrowser.getInstance().getStatusBar().showProgress(0);
WITHOUT_CLASSIFICATION	Create chooser for objects we are to import. Old style modules get to provide their own (although I don't believe any of them do), while new style modules get the a chooser provided by us (which matches what the abstract class FileImportSupport used to provide).
WITHOUT_CLASSIFICATION	this is because of the (senseless?) "All files" FileFilter
WITHOUT_CLASSIFICATION	Parsing file x of z.
WITHOUT_CLASSIFICATION	progress bar
WITHOUT_CLASSIFICATION	For some reason, this alleged directory is a single file This could be that there is some confusion or just the normal, that a single file was selected and is supposed to be imported.
WITHOUT_CLASSIFICATION	Get the contents of the directory
WITHOUT_CLASSIFICATION	The following test can cause trouble with links, because links are accepted as directories, even if they link files. Links could also result in infinite loops. For this reason we don't do this traversing recursively.
WITHOUT_CLASSIFICATION	If this file is a directory
WITHOUT_CLASSIFICATION	TODO: Add filename ?
WITHOUT_CLASSIFICATION	can't remove the last file
WITHOUT_CLASSIFICATION	can't remove from existing one so create new one.
WITHOUT_CLASSIFICATION	Error/warning messageArea
WITHOUT_CLASSIFICATION	gbc.gridheight = 10;
WITHOUT_CLASSIFICATION	cancel/close button
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	constructors
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	the introducing label
WITHOUT_CLASSIFICATION	User closing the progress window is interpreted as cancel request
WITHOUT_CLASSIFICATION	panel for controls
WITHOUT_CLASSIFICATION	This method can be called only if there's a valid selection so go ahead and remove whatever's selected.
WITHOUT_CLASSIFICATION	nothings left, disable firing.
WITHOUT_CLASSIFICATION	Select an index.
WITHOUT_CLASSIFICATION	removed item in last position
WITHOUT_CLASSIFICATION	Just quit
WITHOUT_CLASSIFICATION	the text box containing the problem messages
WITHOUT_CLASSIFICATION	continue and abort buttons
WITHOUT_CLASSIFICATION	listeners
WITHOUT_CLASSIFICATION	stores the action command into the UMLPlainTextDocument class which is also used for setProperty and getProperty
WITHOUT_CLASSIFICATION	TODO: this seems to be called at startup only so no check so far
WITHOUT_CLASSIFICATION	Add an invisible button to be used when everything is off
WITHOUT_CLASSIFICATION	| removed to workaround problems with autosplit OCLEditor.OPTIONMASK_AUTOSPLIT
WITHOUT_CLASSIFICATION	TabModelTarget interface methods
WITHOUT_CLASSIFICATION	@see java.awt.event.ComponentListener#componentShown(java.awt.event.ComponentEvent)
WITHOUT_CLASSIFICATION	Process the listeners last to first, notifying those that are interested in this event
WITHOUT_CLASSIFICATION	Lazily create the event:
WITHOUT_CLASSIFICATION	Lazily create the event:
WITHOUT_CLASSIFICATION	Lazily create the event:
WITHOUT_CLASSIFICATION	Lazily create the event:
WITHOUT_CLASSIFICATION	Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	Update our model with our saved target
WITHOUT_CLASSIFICATION	There is no need to test if classes is empty because the shouldBeEnabled mechanism blanks out the possibility to choose this alternative in this case.
WITHOUT_CLASSIFICATION	List classes = getCandidates(); return classes.size() > 0;
WITHOUT_CLASSIFICATION	Our first button is invisible. Selecting it deselects all visible buttons.
WITHOUT_CLASSIFICATION	Set editor's model
WITHOUT_CLASSIFICATION	check ocl parsing constraints
WITHOUT_CLASSIFICATION	do not create a constraint:
WITHOUT_CLASSIFICATION	Parse and check specified constraint.
WITHOUT_CLASSIFICATION	Ignored: Highly unlikely, and what would we do anyway? log it
WITHOUT_CLASSIFICATION	Split constraint body, if user wants us to
WITHOUT_CLASSIFICATION	the constraint _must_ be owned by a namespace
WITHOUT_CLASSIFICATION	the constraint _must_ be owned by a namespace
WITHOUT_CLASSIFICATION	Store constraint body
WITHOUT_CLASSIFICATION	New constraint, first time setData is called
WITHOUT_CLASSIFICATION	a runtime exception that occurs when some internal test fails
WITHOUT_CLASSIFICATION	Check name for consistency with spec
WITHOUT_CLASSIFICATION	Set name
WITHOUT_CLASSIFICATION	Also set name in constraint body -- Added 03/14/2001
WITHOUT_CLASSIFICATION	replace name
WITHOUT_CLASSIFICATION	OK, so that didn't work out... Just ignore any problems and don't set the name in the constraint body better had log it.
WITHOUT_CLASSIFICATION	TODO: Why is this ignored? - tfm - 20070110
WITHOUT_CLASSIFICATION	TRY PREDECESSORS
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	cmd.setObjects(run.getParams().get(0));
WITHOUT_CLASSIFICATION	@see java.awt.event.ComponentListener#componentHidden(java.awt.event.ComponentEvent)
WITHOUT_CLASSIFICATION	Process the listeners last to first, notifying those that are interested in this event
WITHOUT_CLASSIFICATION	Process the listeners last to first, notifying those that are interested in this event
WITHOUT_CLASSIFICATION	Process the listeners last to first, notifying those that are interested in this event
WITHOUT_CLASSIFICATION	We have no model event listeners, so no need to do anything
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	Do nothing by default.
WITHOUT_CLASSIFICATION	Do nothing by default.
WITHOUT_CLASSIFICATION	TODO: I18N Don't use the empty string for this or it won't show in the list
WITHOUT_CLASSIFICATION	It would be better if we didn't need the container to get the target. This constructor can have zero parameters as soon as we improve targetChanged.
WITHOUT_CLASSIFICATION	TODO: Here too?
WITHOUT_CLASSIFICATION	TODO: Here too?
WITHOUT_CLASSIFICATION	This should not be necessary, but let's be sure:
WITHOUT_CLASSIFICATION	end of interval
WITHOUT_CLASSIFICATION	start of interval
WITHOUT_CLASSIFICATION	Remove old listeners:
WITHOUT_CLASSIFICATION	in middle of interval
WITHOUT_CLASSIFICATION	Allow listening to other elements:
WITHOUT_CLASSIFICATION	Allow listening to other elements:
WITHOUT_CLASSIFICATION	Add new listeners:
WITHOUT_CLASSIFICATION	MVW: This can never happen, isn't it?
WITHOUT_CLASSIFICATION	makes sure we can select 'none'
WITHOUT_CLASSIFICATION	TODO: For large lists, this is doing a linear search of literally thousands of elements
WITHOUT_CLASSIFICATION	Don't try to test this if we're removing the element
WITHOUT_CLASSIFICATION	we tried to remove a value
WITHOUT_CLASSIFICATION	Object[] args = { newValue };
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	@see javax.swing.AbstractListModel#fireIntervalRemoved( Object, int, int)
WITHOUT_CLASSIFICATION	@see TargetListener#targetAdded(TargetEvent)
WITHOUT_CLASSIFICATION	@see TargetListener#targetRemoved(TargetEvent)
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	if one or the other is null or they are not equal
WITHOUT_CLASSIFICATION	Do not set buildingModel = false here, otherwise the action for selection is performed.
WITHOUT_CLASSIFICATION	catch callers attempting to use one without other
WITHOUT_CLASSIFICATION	as long as they aren't both null (or a really rare identical string pointer)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	TODO: this seems to be called at startup only so no check so far
WITHOUT_CLASSIFICATION	may only occur as child of the model or in a package
WITHOUT_CLASSIFICATION	to rupdate the diagram set the stimulus name again TODO: Explain that this really works also in the MDR case. Linus is a sceptic.
WITHOUT_CLASSIFICATION	if event source is unknown or the event source is the container's target then update the field
WITHOUT_CLASSIFICATION	check the possibility that this is a promiscuous event
WITHOUT_CLASSIFICATION	a deployment diagram shows something about the whole model according to the UML spec, but we rely on the caller to enforce that if desired.
WITHOUT_CLASSIFICATION	a deployment diagram shows something about the whole model according to the uml spec
WITHOUT_CLASSIFICATION	For a deployment diagram, not just any namespace will do - we need a package.
WITHOUT_CLASSIFICATION	ns is a namespace, but not a package
WITHOUT_CLASSIFICATION	ommit root package name; it's the model's root
WITHOUT_CLASSIFICATION	there is a selection
WITHOUT_CLASSIFICATION	end class ActionCopy
WITHOUT_CLASSIFICATION	Add a predicate for ArgoUML's default capabilities:
WITHOUT_CLASSIFICATION	Parser.ParseAndUpdate(modelObject, s);
WITHOUT_CLASSIFICATION	remove from the model
WITHOUT_CLASSIFICATION	It is a UML element that is not a ModelElement
WITHOUT_CLASSIFICATION	lets see if this diagram has some figs on it
WITHOUT_CLASSIFICATION	no content of diagram
WITHOUT_CLASSIFICATION	we can delete figs like figrects now too
WITHOUT_CLASSIFICATION	TODO: If a namespace with sub-classdiagrams is deleted, then { confirmStr += Translator.localize( "optionpane.remove-from-model-will-remove-subdiagram"); doAsk = true; }
WITHOUT_CLASSIFICATION	we cannot delete the last diagram
WITHOUT_CLASSIFICATION	we cannot delete the model itself
WITHOUT_CLASSIFICATION	static variables
WITHOUT_CLASSIFICATION	constructors
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.beans.PropertyChangeListener#propertyChange(java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.text.Document#remove(int, int)
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	ArgoDiagram activeDiagram = DiagramUtils.getActiveDiagram(); return (activeDiagram instanceof UMLClassDiagram);
WITHOUT_CLASSIFICATION	TODO: Probably really want to cancel editing ((FigTextEditor) focusOwner).cancelEditing();
WITHOUT_CLASSIFICATION	usage of other sureRemove method is legacy. They should be integrated.
WITHOUT_CLASSIFICATION	the diagram contains figs so lets ask the user if he/she is sure
WITHOUT_CLASSIFICATION	TODO: This catch block needs to be narrower and do something with the caught exception - tfm 20071120 Ignore
WITHOUT_CLASSIFICATION	TODO: All of the following can be broken if we have multiple targets selected
WITHOUT_CLASSIFICATION	OK Button ------------------------------------------
WITHOUT_CLASSIFICATION	Delete Button
WITHOUT_CLASSIFICATION	confirm with the user that he wants to delete, presenting the list of settings to delete
WITHOUT_CLASSIFICATION	procede with the deletion in the model
WITHOUT_CLASSIFICATION	disable the button since no row will be selected now
WITHOUT_CLASSIFICATION	end class SourcePathDialog
WITHOUT_CLASSIFICATION	Mutators hold write lock & will deadlock if use is not thread safe
WITHOUT_CLASSIFICATION	Mutators hold write lock & will deadlock if use is not thread-safe
WITHOUT_CLASSIFICATION	The user cancelled!
WITHOUT_CLASSIFICATION	Custom button text:
WITHOUT_CLASSIFICATION	0
WITHOUT_CLASSIFICATION	1
WITHOUT_CLASSIFICATION	2
WITHOUT_CLASSIFICATION	3
WITHOUT_CLASSIFICATION	TRY SOME PREDECESSOR ERRORS
WITHOUT_CLASSIFICATION	constructors
WITHOUT_CLASSIFICATION	constructors
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.beans.PropertyChangeListener#propertyChange(java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.text.Document#remove(int, int)
WITHOUT_CLASSIFICATION	Try adding the extension from the chosen filter.
WITHOUT_CLASSIFICATION	adding project files icon
WITHOUT_CLASSIFICATION	main methods
WITHOUT_CLASSIFICATION	do not use a custom Icon the titles of buttons default button title
WITHOUT_CLASSIFICATION	NOTE: This may be called from a different thread, so we need to be careful of the threading restrictions imposed by AbstractDocument for mutators to be sure we don't deadlock.
WITHOUT_CLASSIFICATION	end class ActionOpenProject
WITHOUT_CLASSIFICATION	TODO: see if the new target has a TV that we can proxy
WITHOUT_CLASSIFICATION	Try adding the default extension.
WITHOUT_CLASSIFICATION	LOG.debug("is a Base or Multiplicity");
WITHOUT_CLASSIFICATION	end class ActionSaveProjectAs
WITHOUT_CLASSIFICATION	only need to this from super()
WITHOUT_CLASSIFICATION	--------------------------------------------------------
WITHOUT_CLASSIFICATION	----- setup similar to the super() implementation -----
WITHOUT_CLASSIFICATION	This action performs the layout and triggers a redraw of the editor pane. @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	Lazily create the event:
WITHOUT_CLASSIFICATION	Lazily create the event:
WITHOUT_CLASSIFICATION	Lazily create the event:
WITHOUT_CLASSIFICATION	Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	main methods
WITHOUT_CLASSIFICATION	main methods
WITHOUT_CLASSIFICATION	/ Proxy methods for real UMLModelElementTaggedValue /
WITHOUT_CLASSIFICATION	load of the new project just reuse of the ActionOpen object
WITHOUT_CLASSIFICATION	Rearrange the diagram layout
WITHOUT_CLASSIFICATION	Leave logging commented out by default for efficiency LOG.debug("determine rendering for: " + value); LOG.debug("show icon: " + showIcon);
WITHOUT_CLASSIFICATION	targets ought to be UML objects or diagrams
WITHOUT_CLASSIFICATION	TODO: We shouldn't need this as well as the above.
WITHOUT_CLASSIFICATION	Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	end class TabProps
WITHOUT_CLASSIFICATION	If our map has any entries for this type, it's a connection type
WITHOUT_CLASSIFICATION	Get the list of valid model item pairs for the given connection type
WITHOUT_CLASSIFICATION	See if there's a pair in this list that match the given model elements
WITHOUT_CLASSIFICATION	@see TargettableModelView#getTargettableModel()
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.DocumentListener#changedUpdate(javax.swing.event.DocumentEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.DocumentListener#removeUpdate(javax.swing.event.DocumentEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.DocumentListener#insertUpdate(javax.swing.event.DocumentEvent)
WITHOUT_CLASSIFICATION	accessors
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	we tried to remove a value
WITHOUT_CLASSIFICATION	put everything together
WITHOUT_CLASSIFICATION	no title looks better
WITHOUT_CLASSIFICATION	now remove the ones already applied.
WITHOUT_CLASSIFICATION	make lists
WITHOUT_CLASSIFICATION	make buttons
WITHOUT_CLASSIFICATION	ignored this event
WITHOUT_CLASSIFICATION	make buttons layout
WITHOUT_CLASSIFICATION	make listeners
WITHOUT_CLASSIFICATION	Remove the element from Available List
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	@see javax.swing.Action#isEnabled()
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.ComboBoxEditor#setItem(java.lang.Object)
WITHOUT_CLASSIFICATION	@see javax.swing.ComboBoxEditor#getEditorComponent()
WITHOUT_CLASSIFICATION	@see javax.swing.ComboBoxEditor#addActionListener(java.awt.event.ActionListener)
WITHOUT_CLASSIFICATION	@see javax.swing.ComboBoxEditor#removeActionListener(java.awt.event.ActionListener)
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	Implements the source path controller. NOTE: If requested in the future this could be returned from the language modules. TODO: Update this to use the UML 1.4 TagDefinition mechanism instead of UML 1.3 String type tag types. The TagDefinition can be made more specific so that it just applies to Components with a <<sourceModule>> stereotype or something similar. - tfm @author euluis @since 0.17.1
WITHOUT_CLASSIFICATION	end of SourcePathControllerImpl class definition
WITHOUT_CLASSIFICATION	sb.append(Model.getFacade().getName(c));
WITHOUT_CLASSIFICATION	sb.append((String) Model.getFacade().getBody(c));
WITHOUT_CLASSIFICATION	MModelElement
WITHOUT_CLASSIFICATION	next statement is necessary to update the textfield if the selection is equal to what was allready selected
WITHOUT_CLASSIFICATION	ok
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	@see javax.swing.ComboBoxEditor#selectAll()
WITHOUT_CLASSIFICATION	@see javax.swing.ComboBoxEditor#getItem()
WITHOUT_CLASSIFICATION	@see java.awt.event.FocusListener#focusGained(java.awt.event.FocusEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.Action#isEnabled()
WITHOUT_CLASSIFICATION	ok
WITHOUT_CLASSIFICATION	necessary to create distance between the textfield and the icon.
WITHOUT_CLASSIFICATION	make new column with LabelledLayout
WITHOUT_CLASSIFICATION	Comment.name text field - editing disabled
WITHOUT_CLASSIFICATION	Comment.body text field - editing disabled
WITHOUT_CLASSIFICATION	Since there are no buttons on this panel, we have to set the size of the buttonpanel, otherwise the title would not be aligned right.
WITHOUT_CLASSIFICATION	Only change the background colour if it is supplied by the LAF. Otherwise leave look and feel to handle this itself.
WITHOUT_CLASSIFICATION	In this case, the bounds are determined by the FigEdge
WITHOUT_CLASSIFICATION	In this case, the bounds are determined by the FigEdge
WITHOUT_CLASSIFICATION	In this case, the bounds (of the box) are determined by the FigClassAssociationClass
WITHOUT_CLASSIFICATION	In this case, the bounds (of the box) are determined by the FigClassAssociationClass
WITHOUT_CLASSIFICATION	A newly created AssociationClass may not have all its parts created by the time we are called
WITHOUT_CLASSIFICATION	A newly created AssociationClass may not have all its parts created by the time we are called
WITHOUT_CLASSIFICATION	TODO: Defer most of this work if the panel isn't visible - tfm
WITHOUT_CLASSIFICATION	@see TargetListener#targetAdded(TargetEvent)
WITHOUT_CLASSIFICATION	@see TargetListener#targetRemoved(TargetEvent)
WITHOUT_CLASSIFICATION	@see TargetListener#targetSet(TargetEvent)
WITHOUT_CLASSIFICATION	Lazily create the event:
WITHOUT_CLASSIFICATION	Lazily create the event:
WITHOUT_CLASSIFICATION	Lazily create the event:
WITHOUT_CLASSIFICATION	Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	how to handle empty target lists? probably the TabProps should only show an empty pane in that case
WITHOUT_CLASSIFICATION	chooser.setSelectedFile(new File(fileName));
WITHOUT_CLASSIFICATION	So, let's do it the hard way:
WITHOUT_CLASSIFICATION	TODO: The following can be used when we drop Java 5 support or when an ImageIO GIF writer plugin is bundled cmd = new SaveGIFAction2(Translator.localize("action.save-gif"));
WITHOUT_CLASSIFICATION	If the diagram is empty, GEF won't write anything, leaving us with an empty (and invalid) file. Handle this case ourselves to prevent this from happening.
WITHOUT_CLASSIFICATION	Anything else is handled the normal way
WITHOUT_CLASSIFICATION	Create an image which will do deferred rendering of the GEF diagram on demand as data is pulled from it
WITHOUT_CLASSIFICATION	Action to save a diagram as a GIF image in a supplied OutputStream. TODO: This requires Java 6 in its current state, so don't use. @author Tom Morris <tfmorris@gmail.com>
WITHOUT_CLASSIFICATION	NOTE: GEF's GIF writer uses Jeff Poskanzer's GIF encoder, but that saves a copy of the entire image in an internal buffer before starting work, defeating the whole purpose of our incremental rendering.
WITHOUT_CLASSIFICATION	Java SE 6 has a native GIF writer, but it's not in Java 5. One is available in the JAI-ImageIO library, but we don't currently bundle that and at 6+ MB it seems like a heavyweight solution, but I don't have time to produce a stripped down version right now - tfm https:jai-imageio.dev.java.net/
WITHOUT_CLASSIFICATION	LayerPerspective layer = DiagramUtils.getActiveDiagram().getLayer();
WITHOUT_CLASSIFICATION	Anything else is handled the normal way
WITHOUT_CLASSIFICATION	Create an image which will do deferred rendering of the GEF diagram on demand as data is pulled from it
WITHOUT_CLASSIFICATION	Action to save a diagram as a GIF image in a supplied OutputStream. TODO: This requires Java 6 in its current state, so don't use. @author Tom Morris <tfmorris@gmail.com>
WITHOUT_CLASSIFICATION	we actually are computing max x & max y, not width & height
WITHOUT_CLASSIFICATION	Convert max x/y to width/height
WITHOUT_CLASSIFICATION	Get a DOMImplementation
WITHOUT_CLASSIFICATION	Create an instance of org.w3c.dom.Document
WITHOUT_CLASSIFICATION	Create an instance of the SVG Generator
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	@see javax.swing.event.DocumentListener#changedUpdate(javax.swing.event.DocumentEvent)
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	LayerPerspective layer = DiagramUtils.getActiveDiagram().getLayer();
WITHOUT_CLASSIFICATION	we actually are computing max x & max y, not width & height
WITHOUT_CLASSIFICATION	Convert max x/y to width/height
WITHOUT_CLASSIFICATION	Get a DOMImplementation
WITHOUT_CLASSIFICATION	Create an instance of org.w3c.dom.Document
WITHOUT_CLASSIFICATION	Create an instance of the SVG Generator
WITHOUT_CLASSIFICATION	make it stretch vertically
WITHOUT_CLASSIFICATION	"org.argouml.cognitive.critics",
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#getColumnCount()
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#getColumnName(int)
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#getColumnClass(int)
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	handle multivalued tagged value
WITHOUT_CLASSIFICATION	handle multivalued tagged value
WITHOUT_CLASSIFICATION	Target has been deleted
WITHOUT_CLASSIFICATION	If the row is past the end of our current collection, return an empty string so they can add a new value
WITHOUT_CLASSIFICATION	tagValue = true;
WITHOUT_CLASSIFICATION	for debugging
WITHOUT_CLASSIFICATION	Return the ith element from a Collection. @param collection collection to get element from @param index index of the element to be returned @return the object
WITHOUT_CLASSIFICATION	We really shouldn't add it until after it is set up, but we need it to have an owner for the following method calls
WITHOUT_CLASSIFICATION	Since we aren't sure of ordering, fire event for whole table
WITHOUT_CLASSIFICATION	no way, we have to give up
WITHOUT_CLASSIFICATION	Do nothing during the deprecation period, then it can be removed.
WITHOUT_CLASSIFICATION	@see javax.swing.DefaultListModel#contains(java.lang.Object)
WITHOUT_CLASSIFICATION	@see javax.swing.DefaultListModel#addElement(java.lang.Object)
WITHOUT_CLASSIFICATION	@see TargetListener#targetAdded(TargetEvent)
WITHOUT_CLASSIFICATION	@see TargetListener#targetRemoved(TargetEvent)
WITHOUT_CLASSIFICATION	@see TargetListener#targetSet(TargetEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.AbstractListModel#fireContentsChanged( Object, int, int)
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	Do nothing by default.
WITHOUT_CLASSIFICATION	Do nothing by default.
WITHOUT_CLASSIFICATION	Allow listening to other elements:
WITHOUT_CLASSIFICATION	Allow listening to other elements:
WITHOUT_CLASSIFICATION	we tried to remove a value
WITHOUT_CLASSIFICATION	get the first editable extent (which is OK unless there is more than one editable extent)
WITHOUT_CLASSIFICATION	This can throw an exception if the target has been deleted. We don't want to try locking the repository because this is called from the event delivery thread and could cause a deadlock. Instead catch the exception and leave the model empty.
WITHOUT_CLASSIFICATION	end class ActionImportFromSources
WITHOUT_CLASSIFICATION	Don't test changed element if it was deleted
WITHOUT_CLASSIFICATION	this is never downlighted...
WITHOUT_CLASSIFICATION	Only specified format are allowed.
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	@see TargetListener#targetAdded(TargetEvent)
WITHOUT_CLASSIFICATION	@see TargetListener#targetRemoved(TargetEvent)
WITHOUT_CLASSIFICATION	@see TargetListener#targetSet(TargetEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ComponentListener#componentHidden(java.awt.event.ComponentEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ComponentListener#componentShown(java.awt.event.ComponentEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ComponentListener#componentMoved(java.awt.event.ComponentEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ComponentListener#componentResized(java.awt.event.ComponentEvent)
WITHOUT_CLASSIFICATION	Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	Add stereotypes submenu
WITHOUT_CLASSIFICATION	Set up the target and its model element variant.
WITHOUT_CLASSIFICATION	Set the tooltip of the arrow to open combined tools:
WITHOUT_CLASSIFICATION	If the target has changed notify the third party listener if it exists and dispatch a new element event listener to ourself. Otherwise dispatch a target reasserted to ourself.
WITHOUT_CLASSIFICATION	Set the minimum and preferred equal, so that the size is fixed for the labelledlayout.
WITHOUT_CLASSIFICATION	This will add a new ModelElement event listener after update is complete
WITHOUT_CLASSIFICATION	We presume that the container equals this PropPanel.
WITHOUT_CLASSIFICATION	Refresh the target for all our children which weren't getting while not visible
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(ActionEvent)
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	This works - we do get an event - and now refresh the UI:
WITHOUT_CLASSIFICATION	to manage the case there are no label/component pairs but just one component
WITHOUT_CLASSIFICATION	If the component is a JLabel which has another component assigned then position/size the label and calculate the size of the registered component
WITHOUT_CLASSIFICATION	Assumes the next child is the labelled component
WITHOUT_CLASSIFICATION	Make sure the component width isn't any greater than its maximum allowed width
WITHOUT_CLASSIFICATION	If the child component is resizable then we don't know it's actual size yet. It will be calculated later as a proportion of the available left over space. For now this is flagged as zero.
WITHOUT_CLASSIFICATION	If a preferred height is not given or is the same as the minimum height then fix the height of this row.
WITHOUT_CLASSIFICATION	Project p = ProjectManager.getManager().getCurrentProject(); Collection elems = ModelManagementHelper.getHelper() .getAllModelElementsOfKind(MClassifier.class);
WITHOUT_CLASSIFICATION	Expressions are DataTypes, not independent model elements be careful not to reuse them
WITHOUT_CLASSIFICATION	Allow listening to other elements: removeOtherModelEventListeners(listTarget);
WITHOUT_CLASSIFICATION	setDoubleBuffered(true);
WITHOUT_CLASSIFICATION	TRY SOME MORE COMPLEX MOVING
WITHOUT_CLASSIFICATION	Implements backspace functionality
WITHOUT_CLASSIFICATION	constructors
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.Action#isEnabled()
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.CaretListener#caretUpdate(javax.swing.event.CaretEvent)
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	Do nothing by default.
WITHOUT_CLASSIFICATION	Do nothing by default.
WITHOUT_CLASSIFICATION	Allow listening to other elements:
WITHOUT_CLASSIFICATION	Allow listening to other elements:
WITHOUT_CLASSIFICATION	we tried to remove a value
WITHOUT_CLASSIFICATION	there is a selection
WITHOUT_CLASSIFICATION	This can throw an exception if the target has been deleted. We don't want to try locking the repository because this is called from the event delivery thread and could cause a deadlock. Instead catch the exception and leave the model empty.
WITHOUT_CLASSIFICATION	Don't test changed element if it was deleted
WITHOUT_CLASSIFICATION	end class ActionCut
WITHOUT_CLASSIFICATION	Allow listening to other elements: addOtherModelEventListeners(listTarget);
WITHOUT_CLASSIFICATION	if there is a selection on the clipboard
WITHOUT_CLASSIFICATION	get localised strings once only
WITHOUT_CLASSIFICATION	setting the icon
WITHOUT_CLASSIFICATION	setting the tooltip to type and name
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	static variables
WITHOUT_CLASSIFICATION	@see javax.swing.event.ListSelectionListener#valueChanged(javax.swing.event.ListSelectionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ComponentListener#componentShown(java.awt.event.ComponentEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ComponentListener#componentHidden(java.awt.event.ComponentEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	Update our model with our saved target
WITHOUT_CLASSIFICATION	Stop updating model when we're not visible
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	in UML2, a td is a property of a stereotype in a profile
WITHOUT_CLASSIFICATION	Only update our model if we're visible
WITHOUT_CLASSIFICATION	Most likely cause of this is that someone deleted our target with the event pump turned off so we didn't get notification. Nothing we can do about it now and we are changing targets anyway, so just log it.
WITHOUT_CLASSIFICATION	This target is a statemachine, for which no diagram exists yet, so, let's use it.
WITHOUT_CLASSIFICATION	end class TabTaggedValues
WITHOUT_CLASSIFICATION	setEnabled((Globals.clipBoard != null && !Globals.clipBoard.isEmpty()) || !isSystemClipBoardEmpty());
WITHOUT_CLASSIFICATION	end class ActionPaste
WITHOUT_CLASSIFICATION	The target is a valid context.
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(ActionEvent)
WITHOUT_CLASSIFICATION	@see java.beans.PropertyChangeListener#propertyChange(java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed( java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.Action#isEnabled()
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	Let's just build a Statemachine, and put it in a suitable namespace.
WITHOUT_CLASSIFICATION	Follow well-formedness rule for a Class [2]. Determine the owning namespace for the statemachine:
WITHOUT_CLASSIFICATION	upperPanel.setBorder(BorderFactory.createEtchedBorder());
WITHOUT_CLASSIFICATION	buttonBox.add(Box.createRigidArea(new Dimension(0, 20)));
WITHOUT_CLASSIFICATION	String title = getUI().getDialogTitle(this);
WITHOUT_CLASSIFICATION	Test if the given namespace is a valid namespace to add the diagram to. TODO: This method was created to facilitate the merge of this class with ActionAddDiagram. @param ns the namespace to check @return Returns <code>true</code> if valid.
WITHOUT_CLASSIFICATION	TODO: Since there may be multiple top level elements in a project, this should be using the default Namespace (currently undefined) or something similar
WITHOUT_CLASSIFICATION	button action:
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	Make sure it's parseable as an number
WITHOUT_CLASSIFICATION	ignored - we just skipped inserting it in our document
WITHOUT_CLASSIFICATION	select.setText(Translator.localize("action.select"));
WITHOUT_CLASSIFICATION	select.add(ActionAddEventAsDeferrableEvent.SINGLETON);
WITHOUT_CLASSIFICATION	newMenu.setText(Translator.localize("action.new"));
WITHOUT_CLASSIFICATION	(MExtend)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	main methods
WITHOUT_CLASSIFICATION	repair action for possible NP after load
WITHOUT_CLASSIFICATION	(MClassifier)
WITHOUT_CLASSIFICATION	TRY SOME MORE ERRORS
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	(MModelElement)
WITHOUT_CLASSIFICATION	to be able to remove dep's later
WITHOUT_CLASSIFICATION	to be able to remove dependencies later
WITHOUT_CLASSIFICATION	ADDONLY_COMMAND determines a changeability kind. TODO: Removed from UML 2.x. Phase out of UI - tfm - 20070529
WITHOUT_CLASSIFICATION	TODO: Removed from UML 2.x - phase out usage - tfm 20070530
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	because we're listening for stereotypes being added and removed but we're really interested in their owned tag definitions, the default implementation won't work for us
WITHOUT_CLASSIFICATION	end class ActionAddAttribute
WITHOUT_CLASSIFICATION	Ask to be notified of any changes to TagDefinitions so that we can track new ones, name changes, etc
WITHOUT_CLASSIFICATION	since UML2 it's easier: TDs only via stereotypes
WITHOUT_CLASSIFICATION	Just mark for rebuild next time since we use lazy loading
WITHOUT_CLASSIFICATION	A stereotype got applied or removed Just mark for rebuild next time since we use lazy loading
WITHOUT_CLASSIFICATION	@see Namespace#pushNamespaceElement(NamespaceElement)
WITHOUT_CLASSIFICATION	@see java.lang.Object#hashCode()
WITHOUT_CLASSIFICATION	@see org.tigris.swidgets.Dialog#nameButtons()
WITHOUT_CLASSIFICATION	All strings collate before all UML elements
WITHOUT_CLASSIFICATION	All strings collate before all UML elements
WITHOUT_CLASSIFICATION	Compare path of two elements in reverse order (inner to outer) using a primary strength text collator. This will collate e, E, �, � together, but not eliminate non-identical strings which collate in the same place. @return equivalent of list1.compareTo(list2)
WITHOUT_CLASSIFICATION	and then by their enclosing path to fully distinguish them
WITHOUT_CLASSIFICATION	Elements are collated first by name hoping for a quick solution
WITHOUT_CLASSIFICATION	Keep track of first non-equal comparison to use in case the case-insensitive comparisons all end up equal
WITHOUT_CLASSIFICATION	Add the action to the component
WITHOUT_CLASSIFICATION	It's illegal in UML to have multiple elements in a namespace with the same name, but if it happens, keep them distinct so the user has a chance of catching the error. Pick an arbitrary, but stable, collating order. We don't call them equal because otherwise one will get eliminated from the TreeSet where this comparator is used.
WITHOUT_CLASSIFICATION	If the strings differed only in non-primary characteristics at some point (case, accent, etc) pick an arbitrary, but stable, collating order.
WITHOUT_CLASSIFICATION	{transient=false, volatile=false}
WITHOUT_CLASSIFICATION	Argo customization
WITHOUT_CLASSIFICATION	prohibit instantiation
WITHOUT_CLASSIFICATION	KeyEvent.isActionKey() method
WITHOUT_CLASSIFICATION	Apparently this object had no getItemUID
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	Apparently this object had no getUUID
WITHOUT_CLASSIFICATION	Apparently it had a getItemUID, but we're not allowed to call it
WITHOUT_CLASSIFICATION	Apparently it had a getItemUID, but we're not allowed to call it
WITHOUT_CLASSIFICATION	Apparently it had a getItemUID, but we're not allowed to call it
WITHOUT_CLASSIFICATION	Apparently this object had no setItemUID
WITHOUT_CLASSIFICATION	Apparently it had a setItemUID, but we're not allowed to call it
WITHOUT_CLASSIFICATION	Apparently it had a setItemUID, but we're not allowed to call it
WITHOUT_CLASSIFICATION	class preloading, so packages are there...
WITHOUT_CLASSIFICATION	...getPackage() can return null's, so we have to cater for this:
WITHOUT_CLASSIFICATION	make this thread interruptible, if called from SwingWorker
WITHOUT_CLASSIFICATION	Switch the value back off, so that we will get notified again next time.
WITHOUT_CLASSIFICATION	Ignore any nested exceptions. We don't want infinite loop.
WITHOUT_CLASSIFICATION	Didn't work.
WITHOUT_CLASSIFICATION	Create a proxy object around this handler that can be reflectively added as an Apple ApplicationListener
WITHOUT_CLASSIFICATION	Likely a NoSuchMethodException or an IllegalAccessException loading/invoking eawt.Application methods
WITHOUT_CLASSIFICATION	All of the ApplicationListener methods are void; return null regardless of what happens
WITHOUT_CLASSIFICATION	If the target method returns a boolean, use that as a hint
WITHOUT_CLASSIFICATION	For eclipse setup
WITHOUT_CLASSIFICATION	For ant setup
WITHOUT_CLASSIFICATION	When running from maven
WITHOUT_CLASSIFICATION	If we're setting a handler, enable the About menu item by calling com.apple.eawt.Application reflectively
WITHOUT_CLASSIFICATION	If we're setting a handler, enable the Preferences menu item by calling com.apple.eawt.Application reflectively
WITHOUT_CLASSIFICATION	Override OSXAdapter.callTarget to send information on the file to be opened
WITHOUT_CLASSIFICATION	Ignore if the directory does not exist. This error will throw when running from the ant setup.
WITHOUT_CLASSIFICATION	Ignore if the directory does not exist. This error will throw when running from the Eclipse setup.
WITHOUT_CLASSIFICATION	Ignore if the directory does not exist. This error will throw when running from the Eclipse setup.
WITHOUT_CLASSIFICATION	"org.argouml.notation.providers",fails because sub-packages fail (?) "org.argouml.notation.providers.java", "org.argouml.notation.providers.uml", "org.argouml.notation",fails because sub-packages fail (?) "org.argouml.notation.ui",
WITHOUT_CLASSIFICATION	There was a comment saying that the below has no cycles, but Classycle thinks there's a cycle here too, so I believe there really is one - tfm 20070702 "org.argouml.uml.cognitive.critics",
WITHOUT_CLASSIFICATION	TODO:{"org.argouml.ui", "org.argouml.cognitive.ui"},fails due to subpackages TODO:{"org.argouml.cognitive", "org.argouml.cognitive.critics"},
WITHOUT_CLASSIFICATION	{"org.argouml.kernel", "org.argouml.uml.diagram.ui"},why does this fail?
WITHOUT_CLASSIFICATION	do nothing by design
WITHOUT_CLASSIFICATION	These 3 steps are only needed for the 2 cases indicated with a X below.
WITHOUT_CLASSIFICATION	Obey the contract ourselves!
WITHOUT_CLASSIFICATION	register all of the event listener trackers
WITHOUT_CLASSIFICATION	remove all of the listeners
WITHOUT_CLASSIFICATION	fire all of the diagram events
WITHOUT_CLASSIFICATION	fire all of the generator events
WITHOUT_CLASSIFICATION	fire all of the help events
WITHOUT_CLASSIFICATION	fire all of the notation events
WITHOUT_CLASSIFICATION	verify all events were fired correctly
WITHOUT_CLASSIFICATION	keep track of total events fired
WITHOUT_CLASSIFICATION	keep track of which events fired
WITHOUT_CLASSIFICATION	X X
WITHOUT_CLASSIFICATION	initialize the event listener trackers which verify that all of the proper events were fired
WITHOUT_CLASSIFICATION	Display events are fired on the Swing event thread. We need to wait for them to be dispatched NOTE: if more display events are added to this test, this one needs to be last
WITHOUT_CLASSIFICATION	Notation events are fired on the Swing event thread. We assume that serializing on the final call is sufficient
WITHOUT_CLASSIFICATION	counts each bit that has been fired
WITHOUT_CLASSIFICATION	ResolvedCritic(String, List)
WITHOUT_CLASSIFICATION	ResolvedCritic(Critic, ListSet)
WITHOUT_CLASSIFICATION	ResolvedCritic(Critic, ListSet, boolean)
WITHOUT_CLASSIFICATION	testmc should now have an ItemUID so we should be able to create without adding a new ItemUID
WITHOUT_CLASSIFICATION	EnabledCM isRelevant checks if the critic is enabled initialize this to true to verify isRelevant returns true
WITHOUT_CLASSIFICATION	verify isRelevant returns true
WITHOUT_CLASSIFICATION	set enabled to false and check the opposite condition
WITHOUT_CLASSIFICATION	verify isRelevant not is false
WITHOUT_CLASSIFICATION	NotSnoozedCM isRelevant checks if the critic is snoozed snooze the critic to verify isRelevant returns false
WITHOUT_CLASSIFICATION	unsnooze the critic to verify the critic is not relevant
WITHOUT_CLASSIFICATION	verify isRelevant is true
WITHOUT_CLASSIFICATION	CurDecisionCM isRelevant checks to see if the critic has any decisions that have a priority > 0 and less than the priority of the critic. By default the critic has no decisions so isRelevant should return false.
WITHOUT_CLASSIFICATION	verify isRelevant is still false
WITHOUT_CLASSIFICATION	isRelevant should now be true
WITHOUT_CLASSIFICATION	isRelevant should still be true
WITHOUT_CLASSIFICATION	initialize test data
WITHOUT_CLASSIFICATION	initialize the ToDoList
WITHOUT_CLASSIFICATION	add a ToDoItem
WITHOUT_CLASSIFICATION	redundantly add item again which should be ignored
WITHOUT_CLASSIFICATION	size should be 1 since addition of second item would have been ignored
WITHOUT_CLASSIFICATION	retrieve item
WITHOUT_CLASSIFICATION	remove item
WITHOUT_CLASSIFICATION	size should be 0 since item was removed
WITHOUT_CLASSIFICATION	initialize the GoalModel
WITHOUT_CLASSIFICATION	check that the model was initialized with the unspecified goal
WITHOUT_CLASSIFICATION	change priority of unspecified goal so we can verify it was updated
WITHOUT_CLASSIFICATION	first verify that the set goal priority did not add an extra goal
WITHOUT_CLASSIFICATION	check that the model correctly updates a goal's priority
WITHOUT_CLASSIFICATION	test the removal of a goal
WITHOUT_CLASSIFICATION	number of goals should now be 0
WITHOUT_CLASSIFICATION	start desiring a goal which should add a goal and bump the size to 1
WITHOUT_CLASSIFICATION	number of goals should now be 1
WITHOUT_CLASSIFICATION	stop desiring the goal which should remove it from the model
WITHOUT_CLASSIFICATION	UMLSequenceDiagram seqdiag = new UMLSequenceDiagram();
WITHOUT_CLASSIFICATION	initialize test data
WITHOUT_CLASSIFICATION	This test calls ToDoList.addElement which requires the Model. We are able to get away with using the Mock model.
WITHOUT_CLASSIFICATION	checkAssignIDToObject(seqdiag, true, true);
WITHOUT_CLASSIFICATION	FigEdgeNote has no UUID
WITHOUT_CLASSIFICATION	checkAssignIDToObject(figassociationrole, true, true);
WITHOUT_CLASSIFICATION	checkAssignIDToObject(fighistorystate, true, true);
WITHOUT_CLASSIFICATION	checkAssignIDToObject(figstate, true, true);
WITHOUT_CLASSIFICATION	initialize basic parameters that are different from Decision.UNSPEC
WITHOUT_CLASSIFICATION	initialize a decision object with parameters
WITHOUT_CLASSIFICATION	initialize a decision object with parameters
WITHOUT_CLASSIFICATION	verify parameters were initialized correctly by the constructor
WITHOUT_CLASSIFICATION	set the priority to a different value
WITHOUT_CLASSIFICATION	set the priority to a different value
WITHOUT_CLASSIFICATION	verify the priority was correctly updated
WITHOUT_CLASSIFICATION	verify the priority was correctly updated
WITHOUT_CLASSIFICATION	set the name to a different value
WITHOUT_CLASSIFICATION	set the name to a different value
WITHOUT_CLASSIFICATION	verify the name property was correctly updated
WITHOUT_CLASSIFICATION	following the update the priority should be equivalent to Decision.UNSPEC
WITHOUT_CLASSIFICATION	test that properties were correctly initialized by the constructor
WITHOUT_CLASSIFICATION	initialize the Checklist
WITHOUT_CLASSIFICATION	add some test data
WITHOUT_CLASSIFICATION	add some test data
WITHOUT_CLASSIFICATION	verify the size of the list
WITHOUT_CLASSIFICATION	verify the size of the list
WITHOUT_CLASSIFICATION	verify the items were correctly added
WITHOUT_CLASSIFICATION	verify the items were correctly added
WITHOUT_CLASSIFICATION	test that the category and description are correct
WITHOUT_CLASSIFICATION	create a new list to test the addAll
WITHOUT_CLASSIFICATION	create a new list to test the addAll
WITHOUT_CLASSIFICATION	add all of the test items from the first list
WITHOUT_CLASSIFICATION	add all of the test items from the first list
WITHOUT_CLASSIFICATION	verify the size of the new list
WITHOUT_CLASSIFICATION	verify the size of the new list
WITHOUT_CLASSIFICATION	initialize the ChecklistStatus
WITHOUT_CLASSIFICATION	Construct a CheckItem
WITHOUT_CLASSIFICATION	(1) test that the properties were correctly initialized
WITHOUT_CLASSIFICATION	reset the values to something different
WITHOUT_CLASSIFICATION	(2) Construct another CheckItem
WITHOUT_CLASSIFICATION	test that the properties were correctly initialized
WITHOUT_CLASSIFICATION	verify that the equivalence test works
WITHOUT_CLASSIFICATION	initialize SnoozeOrder
WITHOUT_CLASSIFICATION	snooze and verify its been enabled
WITHOUT_CLASSIFICATION	unsnooze and verify its been disabled
WITHOUT_CLASSIFICATION	maybe next test is going to change in future
WITHOUT_CLASSIFICATION	test with a class in a package
WITHOUT_CLASSIFICATION	Let's make it a bit more difficult by setting the target:
WITHOUT_CLASSIFICATION	test with a class and an inner class
WITHOUT_CLASSIFICATION	test with a class and an inner class
WITHOUT_CLASSIFICATION	test with a class and class diagram
WITHOUT_CLASSIFICATION	test with a class and class diagram
WITHOUT_CLASSIFICATION	try with Statediagram
WITHOUT_CLASSIFICATION	try with Statediagram
WITHOUT_CLASSIFICATION	try with Statediagram
WITHOUT_CLASSIFICATION	try with Statediagram
WITHOUT_CLASSIFICATION	Put the statemachine in the namespace of the class:
WITHOUT_CLASSIFICATION	test with a package and a class and activity diagram
WITHOUT_CLASSIFICATION	test with a package and a class and activity diagram
WITHOUT_CLASSIFICATION	build the Activity Diagram
WITHOUT_CLASSIFICATION	build the Activity Diagram
WITHOUT_CLASSIFICATION	In the next line, replacing makeEmptyProject by getCurrentProject fails the test, except when run in Eclipse. MVW: I have no idea why.
WITHOUT_CLASSIFICATION	We no longer send individual events, so next code is obsolete:
WITHOUT_CLASSIFICATION	We initialised Java Notation, so let's activate it:
WITHOUT_CLASSIFICATION	Needed for initialisations:
WITHOUT_CLASSIFICATION	set MetaProfile as a default profile
WITHOUT_CLASSIFICATION	create a dependency from the project's model to the MetaProfile
WITHOUT_CLASSIFICATION	remove the MetaProfile from the project's profile configuration
WITHOUT_CLASSIFICATION	save the project into a new file
WITHOUT_CLASSIFICATION	setup a user defined profile
WITHOUT_CLASSIFICATION	TRY GUARD/ITERATOR SYNTAX
WITHOUT_CLASSIFICATION	create a new project and assert that it has the MetaProfile as part of the project's profile configuration
WITHOUT_CLASSIFICATION	assert that the project's model element that had a dependency to the MetaProfile doesn't get inconsistent
WITHOUT_CLASSIFICATION	reopen the project and assert that the MetaProfile isn't part of the profile configuration, including the fact that the stereotype <<Critic>> isn't found
WITHOUT_CLASSIFICATION	assert that the project's model elements that had a dependency to the UML profile for Java are consistent
WITHOUT_CLASSIFICATION	add it to the project configuration
WITHOUT_CLASSIFICATION	add it to the project configuration
WITHOUT_CLASSIFICATION	create a dependency between the project's model and the user defined profile
WITHOUT_CLASSIFICATION	create a dependency between the project's model and the user defined profile
WITHOUT_CLASSIFICATION	save the project
WITHOUT_CLASSIFICATION	save the project
WITHOUT_CLASSIFICATION	load the project
WITHOUT_CLASSIFICATION	assert that the model element that depends on the profile is consistent
WITHOUT_CLASSIFICATION	remove the user defined profile and the directory where it is
WITHOUT_CLASSIFICATION	Success - expected exception
WITHOUT_CLASSIFICATION	Clean up after ourselves by deleting profile model
WITHOUT_CLASSIFICATION	Test both forms of addBaseClass
WITHOUT_CLASSIFICATION	Test remaining form of removeBaseClass
WITHOUT_CLASSIFICATION	by default the build already builds one default EP
WITHOUT_CLASSIFICATION	$JUnit-BEGIN$
WITHOUT_CLASSIFICATION	$JUnit-END$
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#tearDown()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	Flag to enable performance testing - off by default
WITHOUT_CLASSIFICATION	initialize the model and profile subsystems to simulate a fresh ArgoUML session
WITHOUT_CLASSIFICATION	20 sec.
WITHOUT_CLASSIFICATION	Add one child.
WITHOUT_CLASSIFICATION	Performance testing parameters
WITHOUT_CLASSIFICATION	Add grandchild.
WITHOUT_CLASSIFICATION	Create a generalizable element with an element without children.
WITHOUT_CLASSIFICATION	Check periodically to see if we've exceeded time limit
WITHOUT_CLASSIFICATION	Add another child.
WITHOUT_CLASSIFICATION	Tree is created depth first, so this should be at the bottom
WITHOUT_CLASSIFICATION	Try changing namespace of element and make sure results track
WITHOUT_CLASSIFICATION	Populate our namespace hierarchy to the requested depth. Total number of created elements is children^maxLevel, so be careful not to increase parameters too much.
WITHOUT_CLASSIFICATION	TRY SOME GUARD/ITERATOR ERRORS
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#TestCase(String)
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	Make sure we have a root model for TagDefinitions to get put in.
WITHOUT_CLASSIFICATION	create the tree of objects
WITHOUT_CLASSIFICATION	copy package p1 into p2 package
WITHOUT_CLASSIFICATION	change the structure in p1 package
WITHOUT_CLASSIFICATION	verify the copied package
WITHOUT_CLASSIFICATION	verify the copied class
WITHOUT_CLASSIFICATION	verify the copied nested package and the copied interface
WITHOUT_CLASSIFICATION	verify the copied attribute
WITHOUT_CLASSIFICATION	See if we can copy a class right off
WITHOUT_CLASSIFICATION	Change things
WITHOUT_CLASSIFICATION	Change things
WITHOUT_CLASSIFICATION	Change things
WITHOUT_CLASSIFICATION	Change things
WITHOUT_CLASSIFICATION	Assert that the copy isn't modified when the source changes
WITHOUT_CLASSIFICATION	Assert that the copy isn't modified when the source changes
WITHOUT_CLASSIFICATION	See if the other copy was just a lucky shot
WITHOUT_CLASSIFICATION	See if the other copy was just a lucky shot
WITHOUT_CLASSIFICATION	See if the other copy was just a lucky shot
WITHOUT_CLASSIFICATION	See if the other copy was just a lucky shot
WITHOUT_CLASSIFICATION	See if the other copy was just a lucky shot
WITHOUT_CLASSIFICATION	See if two copies look like copies of eachother
WITHOUT_CLASSIFICATION	See if two copies look like copies of eachother
WITHOUT_CLASSIFICATION	See if two copies look like copies of eachother
WITHOUT_CLASSIFICATION	See if we can copy a datatype right off
WITHOUT_CLASSIFICATION	See if two copies look like copies of each other
WITHOUT_CLASSIFICATION	See if two copies look like copies of each other
WITHOUT_CLASSIFICATION	See if we can copy an interface right off
WITHOUT_CLASSIFICATION	Create a new tagged value with the given type and value and add it to a ModelElement.
WITHOUT_CLASSIFICATION	Update an existing tagged value on a model element.
WITHOUT_CLASSIFICATION	See if we can copy a package right off
WITHOUT_CLASSIFICATION	See if we can copy a stereotype right off
WITHOUT_CLASSIFICATION	Expected
WITHOUT_CLASSIFICATION	"Permission",
WITHOUT_CLASSIFICATION	Check to see if association still exists
WITHOUT_CLASSIFICATION	Expected IllegalArgumentException seen
WITHOUT_CLASSIFICATION	A parameterized class can only be the client of a single binding
WITHOUT_CLASSIFICATION	exception expected - test success
WITHOUT_CLASSIFICATION	expected - test success
WITHOUT_CLASSIFICATION	expected - test success
WITHOUT_CLASSIFICATION	Create a new arg list with a different set of args (but same types)
WITHOUT_CLASSIFICATION	success
WITHOUT_CLASSIFICATION	not static
WITHOUT_CLASSIFICATION	Test passed
WITHOUT_CLASSIFICATION	Test passed
WITHOUT_CLASSIFICATION	NOT UML1.4
WITHOUT_CLASSIFICATION	non existent in UML1
WITHOUT_CLASSIFICATION	Not in UML1.4
WITHOUT_CLASSIFICATION	Not in UML1.4
WITHOUT_CLASSIFICATION	Not in UML1.4
WITHOUT_CLASSIFICATION	Not in UML1.4
WITHOUT_CLASSIFICATION	not in UML1.4
WITHOUT_CLASSIFICATION	This is not a well formed model in a strict sense. See the multiplicity in UML 1.3 Figure 2-5.
WITHOUT_CLASSIFICATION	returns List
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	Deleting the stereotype should cascade to the TagDefinition, then the TaggedValue
WITHOUT_CLASSIFICATION	TODO: constraints TODO: required tags
WITHOUT_CLASSIFICATION	Enumerate declaring class
WITHOUT_CLASSIFICATION	NOTE: Although it's not shown in the UML 1.4 spec, a TemplateArgument appears to be a datavalue (like MultiplicityRange) and can not be reused in multiple instances. The UML diagrams don't show it as a composition, but it effectively is.
WITHOUT_CLASSIFICATION	Must be called after setImplementation.
WITHOUT_CLASSIFICATION	Enumerate fields
WITHOUT_CLASSIFICATION	Enumerate constructors
WITHOUT_CLASSIFICATION	Indicate that the test was validated
WITHOUT_CLASSIFICATION	TODO: Look up class in truth table
WITHOUT_CLASSIFICATION	Check superclass. Make sure this class does not extend or reference non-ArgoUML classes
WITHOUT_CLASSIFICATION	Enumerate methods Enumerate method arguments
WITHOUT_CLASSIFICATION	Not currently present as token in Model.getFacade(). NIF: runTruthTest(Model.getFacade().isAElement(o), Model.getFacade().ELEMENT); NIF: runTruthTest(Model.getFacade().isAExpression(o), Model.getFacade().EXPRESSION); NIF: runTruthTest(Model.getFacade().isAExtensionPoint(o), Model.getFacade().EXTENSION_POINT); NIF: runTruthTest(Model.getFacade().isAFeature(o), Model.getFacade().FEATURE);
WITHOUT_CLASSIFICATION	NIF: runTruthTest(Model.getFacade().isAInteraction(o), Model.getFacade().INTERACTION);
WITHOUT_CLASSIFICATION	NIF: unTruthTest(Model.getFacade().isAMethod(o), Model.getMetaTypes().getMethod());
WITHOUT_CLASSIFICATION	runTruthTest(Model.getFacade().isARelationship(o), Model.getMetaTypes().getRelationship());
WITHOUT_CLASSIFICATION	NIF: runTruthTest(Model.getFacade().isAStructuralFeature(o), Model.getMetaTypes().getStructuralFeature()); NIF: runTruthTest(Model.getFacade().isATaggedValue(o), Model.getMetaTypes().getTaggedValue());
WITHOUT_CLASSIFICATION	Call methods that exists for all objects and that always return something meaningful
WITHOUT_CLASSIFICATION	Call methods that exists for all objects and that always return something meaningful
WITHOUT_CLASSIFICATION	Multiplicity, MultiplicityRange, and all Expression subtypes don't have 0-argument create methods, so we special case them.
WITHOUT_CLASSIFICATION	Find the create method in the offical API
WITHOUT_CLASSIFICATION	Now get the factory implementation method to be invoked
WITHOUT_CLASSIFICATION	Here it is another object sent to the test.
WITHOUT_CLASSIFICATION	Here it is another object sent to the test.
WITHOUT_CLASSIFICATION	abstract
WITHOUT_CLASSIFICATION	abstract
WITHOUT_CLASSIFICATION	abstract
WITHOUT_CLASSIFICATION	Make sure we start off clean
WITHOUT_CLASSIFICATION	Delete the model and make sure everything inside goes with it
WITHOUT_CLASSIFICATION	The association should have same namespace as from class
WITHOUT_CLASSIFICATION	Only one end should be navigable
WITHOUT_CLASSIFICATION	"UseCaseInstance", Gone in UML 2.x & unused by ArgoUML
WITHOUT_CLASSIFICATION	Set namespace so buildAssocationRole works
WITHOUT_CLASSIFICATION	Correct Exception was thrown.
WITHOUT_CLASSIFICATION	Correct Exception was thrown.
WITHOUT_CLASSIFICATION	Correct Exception was thrown.
WITHOUT_CLASSIFICATION	Correct Exception was thrown.
WITHOUT_CLASSIFICATION	Build an activity graph with a single action state the way the GUI would
WITHOUT_CLASSIFICATION	This is a private method in Model.
WITHOUT_CLASSIFICATION	Handling methods that doesn't return
WITHOUT_CLASSIFICATION	Handling the isInitiated method
WITHOUT_CLASSIFICATION	Handling the initialise method
WITHOUT_CLASSIFICATION	Handle methods which return opaque objects
WITHOUT_CLASSIFICATION	one of the expected errors, just ignore
WITHOUT_CLASSIFICATION	Could not find model.
WITHOUT_CLASSIFICATION	Could not find model.
WITHOUT_CLASSIFICATION	Handle UML 1.4 metamodel which is a MOF 1.3 model
WITHOUT_CLASSIFICATION	Get a node's name along with the name of its parent (which we'll use to find the factory to create it with.
WITHOUT_CLASSIFICATION	UML 1.4
WITHOUT_CLASSIFICATION	UML 2.x
WITHOUT_CLASSIFICATION	XMI 2.1
WITHOUT_CLASSIFICATION	XMI 1.1
WITHOUT_CLASSIFICATION	Remap specific classes
WITHOUT_CLASSIFICATION	Only remap package if we didn't remap specific class
WITHOUT_CLASSIFICATION	The following UML 1.4 elements have been removed from UML 2.x, so we don't bother testing them.
WITHOUT_CLASSIFICATION	A few of our factories are slightly different than as declared in the UML 1.4 metamodel, so we remap them here. <metamodel, argouml>
WITHOUT_CLASSIFICATION	Packages to be remapped
WITHOUT_CLASSIFICATION	For those things which we've already migrated to UML 2.x syntax we need to map them back to their UML 1.4 equivalents during the migration period.
WITHOUT_CLASSIFICATION	Subsystem has been removed from UML 2.x
WITHOUT_CLASSIFICATION	TRY THE ACTIONS
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	abstract
WITHOUT_CLASSIFICATION	abstract
WITHOUT_CLASSIFICATION	This is the XMI version used to encode the metamodel. We could parse deeper to pull out the actual UML version. The UML 1.4 version is at XMI/XMI.header/XMI.model[@xmi.version]. The UML 2.1.1 metamodel doesn't actually seem to contain its version.
WITHOUT_CLASSIFICATION	Because UML 1.4 & 2.1 metamodels are organized differently we need to traverse the hierarchy looking for our owning Package.
WITHOUT_CLASSIFICATION	Specific classes to be remapped remap.put("", "");
WITHOUT_CLASSIFICATION	Go the other way to lookup an element by path
WITHOUT_CLASSIFICATION	...
WITHOUT_CLASSIFICATION	...
WITHOUT_CLASSIFICATION	...
WITHOUT_CLASSIFICATION	ActivityGraphs
WITHOUT_CLASSIFICATION	Instance (in UML 1.4) and Classifier are abstract and not tested
WITHOUT_CLASSIFICATION	Extend, Include, UseCaseInstance & ExtensionPoint not implemented
WITHOUT_CLASSIFICATION	assertNotNull(Model.getUmlFactory().buildNode( Model.getMetaTypes().getExtend())); assertNotNull(Model.getUmlFactory().buildNode( Model.getMetaTypes().getInclude())); assertNotNull(Model.getUmlFactory().buildNode( Model.getMetaTypes().getUseCaseInstance())); assertNotNull(Model.getUmlFactory().buildNode( Model.getMetaTypes().getExtensionPoint())); ...
WITHOUT_CLASSIFICATION	State is concrete in UML 1.3, but becomes abstract in UML 1.4, so we never allow it to be created (and don't test creation)
WITHOUT_CLASSIFICATION	new InitProfileSubsystem().init();
WITHOUT_CLASSIFICATION	This should work now that they both have names
WITHOUT_CLASSIFICATION	this call could easily fall if there is e.g. no public default constructor. If it fails tweak the if/else tree above to accommodate the parameter or check if we need to test the particular method at all.
WITHOUT_CLASSIFICATION	If method not supported ignore failure
WITHOUT_CLASSIFICATION	Fine!
WITHOUT_CLASSIFICATION	Fine!
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	assertNotNull(Model.getUmlFactory().buildNode( Model.getMetaTypes().getState()));
WITHOUT_CLASSIFICATION	CommonBehaviorFactory DataTypesFactory ExtensionMechanismsFactory ModelManagementFactory
WITHOUT_CLASSIFICATION	set up all parameters. Some methods are invoked with primitives or collections, so we need to create them accordingly
WITHOUT_CLASSIFICATION	The following should fail
WITHOUT_CLASSIFICATION	and leave things unchanged
WITHOUT_CLASSIFICATION	This one should work except Java is not registered by default assertTrue(settings.setNotationLanguage("Java")); assertEquals("Java", settings.getNotationLanguage());
WITHOUT_CLASSIFICATION	NotationProviderFactory2.getInstance().addNotationProvider(1234, name, MyNP.class); NotationProvider notationProvider = NotationProviderFactory2.getInstance().getNotationProvider( 1234, new Object()); assertTrue("Test notation provider for 1234 not found", notationProvider != null);
WITHOUT_CLASSIFICATION	Constructor.
WITHOUT_CLASSIFICATION	Constructor. @param me an Object
WITHOUT_CLASSIFICATION	Everything fine...
WITHOUT_CLASSIFICATION	Everything fine...
WITHOUT_CLASSIFICATION	Everything fine...
WITHOUT_CLASSIFICATION	reuse signal event:
WITHOUT_CLASSIFICATION	reuse call event:
WITHOUT_CLASSIFICATION	reuse time event:
WITHOUT_CLASSIFICATION	reuse change event:
WITHOUT_CLASSIFICATION	try creating a string from the generated modelelements:
WITHOUT_CLASSIFICATION	try creating a TimeEvent
WITHOUT_CLASSIFICATION	try changing the triggertype to ChangeEvent
WITHOUT_CLASSIFICATION	nested class:
WITHOUT_CLASSIFICATION	nested class:
WITHOUT_CLASSIFICATION	No need to check any further if we fail the 1st part.
WITHOUT_CLASSIFICATION	START TESTING STUFF
WITHOUT_CLASSIFICATION	TRY MOVING IN A SIMPLE MANER
WITHOUT_CLASSIFICATION	TRY SOME ERRORS
WITHOUT_CLASSIFICATION	For a Transition use indirection through source StateVertex
WITHOUT_CLASSIFICATION	If we can't find a model, return the outermost containing model element
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	Everything fine...
WITHOUT_CLASSIFICATION	Everything fine...
WITHOUT_CLASSIFICATION	Everything fine...
WITHOUT_CLASSIFICATION	Everything fine...
WITHOUT_CLASSIFICATION	This swaps the direction of m3:
WITHOUT_CLASSIFICATION	This swaps the direction of m3 back: the colon is obliged, but the / not and the 2nd dot also not
WITHOUT_CLASSIFICATION	Notation allows to add or modify things, not remove. Hence, this does nothing:
WITHOUT_CLASSIFICATION	The expected exception is thrown.
WITHOUT_CLASSIFICATION	Both diagram types shall show sequence numbers when requested:
WITHOUT_CLASSIFICATION	But the collaboration diagram refuses to leave them out:
WITHOUT_CLASSIFICATION	If the message has a name, but no action, then show the name:
WITHOUT_CLASSIFICATION	If a message has a name and a named operation, then show the operation:
WITHOUT_CLASSIFICATION	If a message has a name and a named operation and a script, then show the script:
WITHOUT_CLASSIFICATION	TODO: Should there really be () here?
WITHOUT_CLASSIFICATION	If a message has a name and a named operation and an empty script, then show the operation:
WITHOUT_CLASSIFICATION	If a message has a name and a named operation and an expression with no script, then show the operation:
WITHOUT_CLASSIFICATION	If a message has a name and a named operation and a named script with parameters, then show the script:
WITHOUT_CLASSIFICATION	TODO: Why is there a space before the ( here, and not in case of the operation name?
WITHOUT_CLASSIFICATION	The action still has the argument from above.
WITHOUT_CLASSIFICATION	If a message has a name and a named operation and a script with parameters but without name, then show the operation name:
WITHOUT_CLASSIFICATION	this is not a very useful transition
WITHOUT_CLASSIFICATION	One of everything
WITHOUT_CLASSIFICATION	Upper / Lower case
WITHOUT_CLASSIFICATION	Mixed case
WITHOUT_CLASSIFICATION	A complex internal transition
WITHOUT_CLASSIFICATION	These are NOT entry/exit/do activities!
WITHOUT_CLASSIFICATION	Long list of internals
WITHOUT_CLASSIFICATION	or should the 1 be 0 ?
WITHOUT_CLASSIFICATION	deleting it all
WITHOUT_CLASSIFICATION	we want the b: Foo attribute, that is the second in the list
WITHOUT_CLASSIFICATION	If there is no script, then the language should not be maintained.
WITHOUT_CLASSIFICATION	ok
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	Success - expected exception
WITHOUT_CLASSIFICATION	Everything fine...
WITHOUT_CLASSIFICATION	Create file
WITHOUT_CLASSIFICATION	This is the normal case.
WITHOUT_CLASSIFICATION	Load a project which contains links to it
WITHOUT_CLASSIFICATION	test project readable files
WITHOUT_CLASSIFICATION	Standard UML 1.4 profile
WITHOUT_CLASSIFICATION	Create a default profile and record its contents
WITHOUT_CLASSIFICATION	Write the profile out to a temp file
WITHOUT_CLASSIFICATION	Read it back in to a new empty project
WITHOUT_CLASSIFICATION	Clean up our two models and the extent that we read profile in to
WITHOUT_CLASSIFICATION	setting up the dependent profile creation
WITHOUT_CLASSIFICATION	actual call that executes everything
WITHOUT_CLASSIFICATION	verifications
WITHOUT_CLASSIFICATION	expected
WITHOUT_CLASSIFICATION	expected
WITHOUT_CLASSIFICATION	TODO: the following cleans up left overs from previous tests, but, preferably we shouldn't have to do this...
WITHOUT_CLASSIFICATION	create profile model
WITHOUT_CLASSIFICATION	create profile model
WITHOUT_CLASSIFICATION	save the profile into a xmi file
WITHOUT_CLASSIFICATION	save the profile into a xmi file
WITHOUT_CLASSIFICATION	Called during teardown
WITHOUT_CLASSIFICATION	Called during teardown
WITHOUT_CLASSIFICATION	remove leftovers from other tests
WITHOUT_CLASSIFICATION	TODO: User defined profile support untested currently + "\t\t<userDefined>\n" + "\t\t\t<filename>\n" + "foo.profile\n" + "</filename>\n" + "\t\t\t<model>\n" + "foo.profile.package\n" + "\t\t\t</model>\n" + "\t\t</userDefined>\n"
WITHOUT_CLASSIFICATION	There seems to be cases where we don't erase the profile. Let's make sure it is deleted.
WITHOUT_CLASSIFICATION	[euluis] Using Windows style initial path, don't know if this fails in nixes.
WITHOUT_CLASSIFICATION	ensure that model subsystem implementation doesn't remember the profiles by changing their names and directories
WITHOUT_CLASSIFICATION	but, lookout, it doesn't work both ways
WITHOUT_CLASSIFICATION	assertEquals(DefaultOclEvaluator.getInstance().evaluate(vt, mi, "x.oclIsKindOf(Classifier)"), true);
WITHOUT_CLASSIFICATION	on a headless system (without display) this will crash
WITHOUT_CLASSIFICATION	private JPanel propertyPane;
WITHOUT_CLASSIFICATION	contains instances of each modelelement used for testing so that we only use each modelelement once
WITHOUT_CLASSIFICATION	propertyPane = TabProps
WITHOUT_CLASSIFICATION	theDetailsPane.getNamedTab(Translator.localize("tab.properties"));
WITHOUT_CLASSIFICATION	currently this is in this try block as it does not work _propertyPanel always has size 0,0
WITHOUT_CLASSIFICATION	ProjectBrowser exposes functionality, not components. assertNotNull(pb.getTabProps()); assertNotNull(pb.getStatusBar());
WITHOUT_CLASSIFICATION	Make sure this test happens on the AWT event thread
WITHOUT_CLASSIFICATION	JPanel docPane = pane.getTab(TabDocumentation.class);
WITHOUT_CLASSIFICATION	The target list is empty, re-emptying it again should not generate any events:
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	new target is of type object, refresh should not be called
WITHOUT_CLASSIFICATION	commented out next piece to remove failure of testcase. The testcase is probably correct but the implementation of DetailsPane is not pane.getTabs().setSelectedComponent(docPane); pane.targetSet(e); assertEquals(docPane, pane.getTabs().getSelectedComponent());
WITHOUT_CLASSIFICATION	new target is a fig, refresh should be called
WITHOUT_CLASSIFICATION	Setting one target should generate one event:
WITHOUT_CLASSIFICATION	new target is of type UMLClassDiagram, refresh should not be called
WITHOUT_CLASSIFICATION	TODO: We could check that the contents of the files differ.
WITHOUT_CLASSIFICATION	new target is a modelelement, refresh should not be called
WITHOUT_CLASSIFICATION	testing with subset of targets
WITHOUT_CLASSIFICATION	set same target again should not generate new events:
WITHOUT_CLASSIFICATION	TabProps gets selected! So, 2nd time right
WITHOUT_CLASSIFICATION	adding same targets list again should not generate new events:
WITHOUT_CLASSIFICATION	adding same target again should not generate new events:
WITHOUT_CLASSIFICATION	reverse order
WITHOUT_CLASSIFICATION	now remove one target by setting subset:
WITHOUT_CLASSIFICATION	TODO: the following fails due to the XMI writing saving all top level model elements and because even if there was no empty project, by creating a class, the undo mechanism in the project manager will force the creation of an empty project. assertEquals(1, profileModels.size());
WITHOUT_CLASSIFICATION	NOTE: we have to do this due to leftovers from other tests being causing strange errors when running in Eclipse.
WITHOUT_CLASSIFICATION	all tests should consider the threshold as inclusive value
WITHOUT_CLASSIFICATION	this test is a bit stupid, but nevertheless...
WITHOUT_CLASSIFICATION	{A, A} are offenders
WITHOUT_CLASSIFICATION	everything ok
WITHOUT_CLASSIFICATION	everything ok
WITHOUT_CLASSIFICATION	same name, same participants, two offenders
WITHOUT_CLASSIFICATION	same name, different classes, everything ok
WITHOUT_CLASSIFICATION	same name, different classes, everything ok
WITHOUT_CLASSIFICATION	same name, same participants, two offenders
WITHOUT_CLASSIFICATION	{A,A,B,B} are offenders
WITHOUT_CLASSIFICATION	{} no offenders
WITHOUT_CLASSIFICATION	simply create 3 usecases and an actor in a package with individual names
WITHOUT_CLASSIFICATION	generalizations are not required to have unique names within a namespace
WITHOUT_CLASSIFICATION	All use cases and actors require associations hence all predicates evalulate to true
WITHOUT_CLASSIFICATION	build association build association between actor and top use case.
WITHOUT_CLASSIFICATION	test for return parameters. they can ALSO fail!
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#tearDown()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	Arbitrary settings - not used used for testing
WITHOUT_CLASSIFICATION	Arbitrary settings - not used used for testing
WITHOUT_CLASSIFICATION	the graph should stay the same.
WITHOUT_CLASSIFICATION	build extend these parameters seem to be in correct order add an extend. We do not need an assoc on the extending use case
WITHOUT_CLASSIFICATION	build include it seems that the parameters for build include are just the other way round add an include: we do not need to have associtions on one
WITHOUT_CLASSIFICATION	setup
WITHOUT_CLASSIFICATION	Handle the simple cases Anything very exotic will fail, but that will be our clue that the test needs to be extended
WITHOUT_CLASSIFICATION	real test
WITHOUT_CLASSIFICATION	Some arbitrary bounds and settings - unused in test
WITHOUT_CLASSIFICATION	Make sure everything created gets deleted
WITHOUT_CLASSIFICATION	This needs to be a concrete metatype, so we can't use the general, but abstract, Classifier. Replace with its concrete subtypes.
WITHOUT_CLASSIFICATION	This needs to be a concrete metatype, so we can't use the general, but abstract, Classifier. Replace with its concrete subtypes.
WITHOUT_CLASSIFICATION	setup the Project due to its use in SourcePathTableModel ctor
WITHOUT_CLASSIFICATION	create a class model element
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#tearDown()
WITHOUT_CLASSIFICATION	@see AbstractTestActionAddDiagram#getValidNamespaceClasses()
WITHOUT_CLASSIFICATION	@see TestCase#setUp()
WITHOUT_CLASSIFICATION	@see TestCase#setUp()
WITHOUT_CLASSIFICATION	save the project
WITHOUT_CLASSIFICATION	Tests used to be coded to assume immediate event delivery. They've been modified to use flush() where needed. - tfm oldEventPolicy = MFactoryImpl.getEventPolicy(); MFactoryImpl.setEventPolicy(MFactoryImpl.EVENT_POLICY_IMMEDIATE);
WITHOUT_CLASSIFICATION	Return a package to use as the Namespace.
WITHOUT_CLASSIFICATION	restore original event policy - not supported by MDR - tfm MFactoryImpl.setEventPolicy(oldEventPolicy);
WITHOUT_CLASSIFICATION	assertNotNull(actionSupplier.getValue(Action.SMALL_ICON));
WITHOUT_CLASSIFICATION	cont.setTarget(elem);
WITHOUT_CLASSIFICATION	Testing with more than one, since it failed with a manual test I made.
WITHOUT_CLASSIFICATION	assertNotNull(actionClient.getValue(Action.SMALL_ICON));
WITHOUT_CLASSIFICATION	The following will bring up a dialog box, so can't be run headless actionSupplier.actionPerformed(new ActionEvent(this, 0, "foo"));
WITHOUT_CLASSIFICATION	The following will bring up a dialog box, so can't be run headless actionClient.actionPerformed(new ActionEvent(this, 0, "foo"));
WITHOUT_CLASSIFICATION	create a new empty project
WITHOUT_CLASSIFICATION	Inconclusive
WITHOUT_CLASSIFICATION	Inconclusive
WITHOUT_CLASSIFICATION	setup a user defined profile which isn't loaded by the model subsystem and contains a stereotype and this contains a tag definition
WITHOUT_CLASSIFICATION	add the profile stereotype to the class
WITHOUT_CLASSIFICATION	add the profile to the project configuration
WITHOUT_CLASSIFICATION	This works when running the test from within Eclipse. Apparently Eclipse runs the tests using a class-loader that has the tests Folder among the URL:s.
WITHOUT_CLASSIFICATION	create a class in the project model
WITHOUT_CLASSIFICATION	check that the tag definition is returned by {@link UMLTagDefinitionComboBoxModel#getApplicableTagDefinitions(Object)}
WITHOUT_CLASSIFICATION	accessors
WITHOUT_CLASSIFICATION	If no project was entered on the command line, try to reload the most recent project if that option is true
WITHOUT_CLASSIFICATION	Set the screen layout to what the user left it before, or to reasonable defaults.
WITHOUT_CLASSIFICATION	instance variables
WITHOUT_CLASSIFICATION	constants
WITHOUT_CLASSIFICATION	instance variables
WITHOUT_CLASSIFICATION	case 4 erase it
WITHOUT_CLASSIFICATION	event handlers
WITHOUT_CLASSIFICATION	TreeModel implementation
WITHOUT_CLASSIFICATION	TreeModel implementation
WITHOUT_CLASSIFICATION	ToDoListListener implementation
WITHOUT_CLASSIFICATION	case 1 after(...)
WITHOUT_CLASSIFICATION	initialize the model and profile subsystems to simulate a fresh ArgoUML session
WITHOUT_CLASSIFICATION	We have the path provided from the build script.
WITHOUT_CLASSIFICATION	Check the localized parts.
WITHOUT_CLASSIFICATION	Wait for all Model subsystem events to be delivered
WITHOUT_CLASSIFICATION	Wait for all AWT events to be dispatched and processed
WITHOUT_CLASSIFICATION	Check here if there are no incoming call actions if not then create an activation at the top of the lifeline
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.GraphModel#getPorts(java.lang.Object)
WITHOUT_CLASSIFICATION	if save did not raise an exception and name+"#" exists move name+"#" to name+"~" this is the correct backup file
WITHOUT_CLASSIFICATION	calcBounds();
WITHOUT_CLASSIFICATION	For classifiers
WITHOUT_CLASSIFICATION	This is null as until the first stereotype declaration is seen. After that it is non-null.
WITHOUT_CLASSIFICATION	newOp.setOwnerScope(op.getOwnerScope()); not needed in case of operation
WITHOUT_CLASSIFICATION	includes the "/" the "seq_expr" from the header javadoc the ":" is not included in "number" - it is always present
WITHOUT_CLASSIFICATION	Model.getExtensionMechanismsFactory().buildTaggedValue( tagName, new String[] {"true"}, Model.getFacade().getRoot(umlObject));
WITHOUT_CLASSIFICATION	MClassifiers cannot be Bag
WITHOUT_CLASSIFICATION	If the model repository doesn't manage a DI model then we must generate our Figs by inspecting PGML
WITHOUT_CLASSIFICATION	Read xsltStream into a temporary file Get url for temp file. openStream from url and wrap in StreamSource
WITHOUT_CLASSIFICATION	constants
WITHOUT_CLASSIFICATION	instance variables
WITHOUT_CLASSIFICATION	event handlers
WITHOUT_CLASSIFICATION	main methods
WITHOUT_CLASSIFICATION	if the object does not have a name, than no problem
WITHOUT_CLASSIFICATION	tree value isSelected(dont want a colored background) isExpanded isLeaf row(not important for rendering) hasFocus (dont want a focus rectangle)
WITHOUT_CLASSIFICATION	If we don't have it, find the trigger. If this fails it will keep its default value of null
WITHOUT_CLASSIFICATION	@Override public final void setHeadline(String s) { setupHeadAndDesc(); }
WITHOUT_CLASSIFICATION	We need to find the stereotype with the name "create" and the base class BehavioralFeature in the model. If there is none then we create one and put it there.
WITHOUT_CLASSIFICATION	first element is e.g. the class, but we need to have its namespace to recompute the offenders.
WITHOUT_CLASSIFICATION	- RedrawManager.unlock(); - _redrawer.repairDamage();
WITHOUT_CLASSIFICATION	if this composite state is not attached to a statemachine it is not the toplevel composite state.
WITHOUT_CLASSIFICATION	Get the assocations and connections. No problem (there is a separate critic) if this is a binary association or is an association role.
WITHOUT_CLASSIFICATION	If this was an association then there will be relevant information to fetch out of the mode arguments. If it not an association then these will be passed forward harmlessly as null.
WITHOUT_CLASSIFICATION	find selected rows and make a list of the model elements that are selected
WITHOUT_CLASSIFICATION	TreeCellRenderer implementation
WITHOUT_CLASSIFICATION	Build namespace hierarchy like this: g a /\ b c /\ d e f
WITHOUT_CLASSIFICATION	private PropertyprpTodo; private PropertyprpProperties; private PropertyprpDocumentation; private PropertyprpStyle; private PropertyprpSource; private PropertyprpConstraints; private PropertyprpTaggedValues;
WITHOUT_CLASSIFICATION	always fire changes in the case something has changed in the composition of the taggedValues collection.
WITHOUT_CLASSIFICATION	Build up an array list of the heights of each label/component pair. Heights of zero indicate a proportional height.
WITHOUT_CLASSIFICATION	CmdPaste cmd = new CmdPaste(); cmd.doIt();
WITHOUT_CLASSIFICATION	stereotypes applied to the target mostly control which TDs (but see below for other listeners too)
WITHOUT_CLASSIFICATION	TODO: Add referenceValue for tagged values which have a non-primitive type
WITHOUT_CLASSIFICATION	add a decision but set the critic priority to 0 so isRelevant should still be false
WITHOUT_CLASSIFICATION	TODO: We should also test that the object have been removed from their namespace. Collection c = Model.getFacade().getOwnedElements(p.getRoot());
WITHOUT_CLASSIFICATION	Because the notation events get dispatched on the Swing event thread, we need to use invokeAndWait to make sure that we don't return until they've been delivered
WITHOUT_CLASSIFICATION	Parent is Element, but it has no attributes or associations to check checkElementCopy(e1, e2);
WITHOUT_CLASSIFICATION	Extra careful now, not to keep any references to the second argument.
WITHOUT_CLASSIFICATION	Auto-create a return message for a call message
WITHOUT_CLASSIFICATION	get the source of the return message
WITHOUT_CLASSIFICATION	get the dest of the return message
WITHOUT_CLASSIFICATION	GridBagConstraints gridBagConstraints3 = new GridBagConstraints(); gridBagConstraints3.gridx = 2; gridBagConstraints3.anchor = GridBagConstraints.NORTHWEST; gridBagConstraints3.insets = new Insets(5, 5, 0, 0); gridBagConstraints3.gridy = 3; GridBagConstraints gridBagConstraints2 = new GridBagConstraints(); gridBagConstraints2.gridx = 0; gridBagConstraints2.anchor = GridBagConstraints.NORTHWEST; gridBagConstraints2.insets = new Insets(5, 5, 0, 0); gridBagConstraints2.gridy = 3;
WITHOUT_CLASSIFICATION	Fig spf = null; Fig dpf = null; FigNode sfn = null; FigNode dfn = null;
WITHOUT_CLASSIFICATION	If the event originated from the window w/glass pane, consume the event
WITHOUT_CLASSIFICATION	Add GUI-internal stuff. GUI-internal stuff is panes, tabs, menu items that are part of the GUI subsystem i.e. a class in the org.argouml.ui-package. Things that are not part of the GUI, like everything that has any knowledge about UML, Diagrams, Code Generation, Reverse Engineering, creates and registers itself when that subsystem or module is loaded.
WITHOUT_CLASSIFICATION	The workarea is all the visible space except the menu, toolbar and status bar. Workarea is laid out as a BorderSplitPane where the various components that make up the argo application can be positioned.
WITHOUT_CLASSIFICATION	iterate through the tabbed panels to determine whether they should be enabled.
WITHOUT_CLASSIFICATION	Always select properties panel if defaultToProperties is true, and if properties panel is appropriate for selected perspective
WITHOUT_CLASSIFICATION	tabs.addTab(Translator.localize("dialog.find.tab.name-and-location"), nameLocTab);
WITHOUT_CLASSIFICATION	_tableModel.setTarget(_target); _table.setModel(_tableModel);
WITHOUT_CLASSIFICATION	if the current shortcut has not been set, then the actual shortcut value is the default one
WITHOUT_CLASSIFICATION	if the user cancelled the operation, we don't have to save anything
WITHOUT_CLASSIFICATION	create the return message modelelement with the interaction and the collaboration
WITHOUT_CLASSIFICATION	Generate and register the OSXAdapter, passing the methods we wish to use as delegates for various com.apple.eawt.ApplicationListener methods
WITHOUT_CLASSIFICATION	TODO: no Links in UML 2
WITHOUT_CLASSIFICATION	nothing we can do about veto, so just ignore it
WITHOUT_CLASSIFICATION	event handling
WITHOUT_CLASSIFICATION	event handlers
WITHOUT_CLASSIFICATION	Fig accessors
WITHOUT_CLASSIFICATION	event handlers - MouseListener implementation
WITHOUT_CLASSIFICATION	the UML object wrong end of the edge
WITHOUT_CLASSIFICATION	We are going to add the ones still valid & new ones in the right sequence:
WITHOUT_CLASSIFICATION	This is perfectly normal and happens among other things within the call to setDiagram (below).
WITHOUT_CLASSIFICATION	events
WITHOUT_CLASSIFICATION	if the new edge implements the MouseListener interface it has to receive the mouseReleased() event
WITHOUT_CLASSIFICATION	user feedback
WITHOUT_CLASSIFICATION	needs to be updated for changes in Notation subsystem - tfm String nameStr = Notation.generate(this, getOwner()).trim(); getNameFig().setText(nameStr);
WITHOUT_CLASSIFICATION	GraphFactory implementation
WITHOUT_CLASSIFICATION	adapted from SelectionWButtons from line 280 calls a helper method to avoid this edge disappearing if the new source and dest are the same node.
WITHOUT_CLASSIFICATION	Give up if we are already on the graph. This is a bit inconistent with canAddNode above.
WITHOUT_CLASSIFICATION	Link the new extend relationship in to the ends. Remember we draw from the extension use case to the base use case.
WITHOUT_CLASSIFICATION	TODO: This is using the default platform character encoding specifying an encoding will produce more predictable results
WITHOUT_CLASSIFICATION	Check against "" is needed for backward compatibility. Don't remove without checking subclasses and warning downstream developers - tfm - 20081211
WITHOUT_CLASSIFICATION	next line does give user.home back but this is not compliant with how the project.uri works and therefore open and save project as give different starting directories. String directory = Globals.getLastDirectory();
WITHOUT_CLASSIFICATION	Correct the activator value
WITHOUT_CLASSIFICATION	We know this is a return action now. It must be pointing the opposite way to the activator.
WITHOUT_CLASSIFICATION	Java SE 6 has a native GIF writer, but it's not in Java 5. One is available in the JAI-ImageIO library, but we don't currently bundle that and at 6+ MB it seems like a heavyweight solution, but I don't have time to produce a stripped down version right now - tfm https:jai-imageio.dev.java.net/
WITHOUT_CLASSIFICATION	we don't want to show some nasty gray background color, now do we?
WITHOUT_CLASSIFICATION	Although we've historically written out the DOCTYPE, the DTD doesn't actually exist and this line will get stripped by the .uml file persister + "<!DOCTYPE profile SYSTEM \"profile.dtd\" >\n"
WITHOUT_CLASSIFICATION	check that the tag definition is returned by {@link UMLTagDefinitionComboBoxModel#getApplicableTagDefinitions(Object)}
WITHOUT_CLASSIFICATION	TODO real numbers not yet supported assertEquals(DefaultOclEvaluator.getInstance() .evaluate(null, null, "1.5"), 1.5);
WITHOUT_CLASSIFICATION	REMEMBER to change this if you change the number of MEs with source path settings
WITHOUT_CLASSIFICATION	put the x at the right side of the activation if needed
WITHOUT_CLASSIFICATION	Make sure there is the minimum gap above the message being drawn
WITHOUT_CLASSIFICATION	Make sure there is the minimum gap below the message being drawn
WITHOUT_CLASSIFICATION	The FigMessage that triggered this FigActivation into existence
WITHOUT_CLASSIFICATION	constructors
WITHOUT_CLASSIFICATION	This module will still register as enabled for UML1.4 but it won't actually do anything.
WITHOUT_CLASSIFICATION	Get the region as the first Region in the State. If there is no region in the StateMachine then create one.
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.MutableGraphModel#addEdge(java.lang.Object)
WITHOUT_CLASSIFICATION	Create the layer
WITHOUT_CLASSIFICATION	Create the renderer
WITHOUT_CLASSIFICATION	If we're not provided a namespace then get it from the diagram or the root
WITHOUT_CLASSIFICATION	Link the previous/next reference of the swimlanes according to the x order.
WITHOUT_CLASSIFICATION	GraphModel implementation
WITHOUT_CLASSIFICATION	make space for the clarifier for vertical symmetry margin between text and border
WITHOUT_CLASSIFICATION	MutableGraphModel implementation
WITHOUT_CLASSIFICATION	actions for toolbar
WITHOUT_CLASSIFICATION	VetoableChangeListener implementation
WITHOUT_CLASSIFICATION	contructors
WITHOUT_CLASSIFICATION	event processing
WITHOUT_CLASSIFICATION	The purpose of this method is not explained and it give give NPE depending on z order of figs as they are read. For now ignore if null but for future lets delete this.
WITHOUT_CLASSIFICATION	Fig accessors
WITHOUT_CLASSIFICATION	fig accessors
WITHOUT_CLASSIFICATION	can't have a connection between 2 interfaces: get the 'other' end type
WITHOUT_CLASSIFICATION	If there's only a single child (and we're it's only parent), set a hint for where to place it when we get to its row
WITHOUT_CLASSIFICATION	Use "aSize" to build up the minimum size. Start with the size of the name fig and build up.
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.MutableGraphModel#canAddNode(java.lang.Object)
WITHOUT_CLASSIFICATION	Both ends must be defined and nodes that are on the graph already.
WITHOUT_CLASSIFICATION	if we are the dest and is a call action, create the activation, but don't add it until the height is set.
WITHOUT_CLASSIFICATION	if we are the dest and is a call action, create the activation, but don't add it until the height is set.
WITHOUT_CLASSIFICATION	if we are the destination of a create action, create the entire activation
WITHOUT_CLASSIFICATION	if we are the target of a destroy action the figlifeline ends here and we add the activation
WITHOUT_CLASSIFICATION	if we are the source of a return action the activation ends here.
WITHOUT_CLASSIFICATION	If we have a currentAct object that means have reached the end of the lifeline with a call or a create not returned. Add the activation to the list after setting its height to end at the end of the lifeline.
WITHOUT_CLASSIFICATION	we do nothing. No call to the parent
WITHOUT_CLASSIFICATION	we don't recalculate activations, just move them
WITHOUT_CLASSIFICATION	if is a classifier role, it must return all the related messages.
WITHOUT_CLASSIFICATION	if is a message, it must return the sender and the receiver of the message.
WITHOUT_CLASSIFICATION	Comments from anywhere in the model are allowed
WITHOUT_CLASSIFICATION	All other types of elements must be in this namespace
WITHOUT_CLASSIFICATION	we initialize the coordinates.
WITHOUT_CLASSIFICATION	we do nothing
WITHOUT_CLASSIFICATION	manage if cursor x is less than lastX1
WITHOUT_CLASSIFICATION	manage if cursor x is more than lastX2
WITHOUT_CLASSIFICATION	manage changes of direction...
WITHOUT_CLASSIFICATION	I have no direction yet
WITHOUT_CLASSIFICATION	we move down or up the messages that are downward the broom
WITHOUT_CLASSIFICATION	we recalculate all the activations
WITHOUT_CLASSIFICATION	we draw a cross
WITHOUT_CLASSIFICATION	we don't let the user move the messages horizontally.
WITHOUT_CLASSIFICATION	if the edge is near the bottom of the classifier roles, we enlarge all the FigClassifierRoles in the diagram.
WITHOUT_CLASSIFICATION	super(Model.getFacade().getName(op), null);
WITHOUT_CLASSIFICATION	we need the edge to be complete
WITHOUT_CLASSIFICATION	if the added edge is a Create Message it will affect the position of the ClassifierRole so it should be repositioned
WITHOUT_CLASSIFICATION	the initial x is the left side of the activation
WITHOUT_CLASSIFICATION	the initial x is the left side of the activation
WITHOUT_CLASSIFICATION	put the x at the right side of the activation if needed
WITHOUT_CLASSIFICATION	if the y coordinate is before the classifier role y, we place the start in the corner of the fighead.
WITHOUT_CLASSIFICATION	if the y coordinate is inside the head, the x must be in the border of the headFig.
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.FigEdge#setFig(org.tigris.gef.presentation.Fig)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.state.ui.FigStateVertex#initNotationProviders (java.lang.Object)
WITHOUT_CLASSIFICATION	if the y coordinate is before the classifier role y, we place the start in the corner of the fighead.
WITHOUT_CLASSIFICATION	if the y coordinate is inside the head, the x must be in the border of the headFig.
WITHOUT_CLASSIFICATION	Use a different notation as Messages on a collaboration diagram:
WITHOUT_CLASSIFICATION	This next argument may be used to switch off the generation of sequence numbers - this is still to be implemented. They are less desired in sequence diagrams, since they do not add any information. In collaboration diagrams they are needed, and they are still optional in sequence diagrams.
WITHOUT_CLASSIFICATION	Operations ...
WITHOUT_CLASSIFICATION	TODO: add logging, but this will never happen and is handled
WITHOUT_CLASSIFICATION	If possible we determine this by checking the destination and source Figs are the same. If this is not possible because the edge is not yet connected then we check the model.
WITHOUT_CLASSIFICATION	we update the activations...
WITHOUT_CLASSIFICATION	for performance, we check if this is a selfmessage if it is, we have just updated the activations
WITHOUT_CLASSIFICATION	This call seems not very robust. Yet to determine cause.
WITHOUT_CLASSIFICATION	this constructor is needed for PGMLStackParser to load saved diagrams. It does nothing, because PGMLStackParser will call setPoints later.
WITHOUT_CLASSIFICATION	vertical resizing
WITHOUT_CLASSIFICATION	Do nothing.
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	This module will still register as enabled for UML1.4 but it won't actually do anything.
WITHOUT_CLASSIFICATION	Get the region as the first Region in the State. If there is no region in the StateMachine then create one.
WITHOUT_CLASSIFICATION	There are no regions so create one and place the vertex there.
WITHOUT_CLASSIFICATION	There are one or more regions so find the one that the vertex was dropped in
WITHOUT_CLASSIFICATION	The vertex was dropped onto the diagram. Get the region as the first Region in the StateMachine. If there is no region in the StateMachine then create one.
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigNodeModelElement#removeFromDiagramImpl()
WITHOUT_CLASSIFICATION	_x = x; _y = y; _w = w; _h = h;
WITHOUT_CLASSIFICATION	@see org.tigris.gef.ui.PopupGenerator#getPopUpActions(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	Create the layer
WITHOUT_CLASSIFICATION	nothing we can do about veto, so just ignore it
WITHOUT_CLASSIFICATION	Create the renderer
WITHOUT_CLASSIFICATION	Although not generally true for GEF, for Argo we know that the layer is a LayerPerspective which knows the associated diagram
WITHOUT_CLASSIFICATION	in this event we do nothing, only stop drawing the broom.
WITHOUT_CLASSIFICATION	There is a bug in GEF where positioning nodes can affect edge positions. We need to do 3 iterations to protect against that.
WITHOUT_CLASSIFICATION	1. Remember current message paths
WITHOUT_CLASSIFICATION	2. Reposition and resize nodes
WITHOUT_CLASSIFICATION	3. Now reposition messages based on their original position
WITHOUT_CLASSIFICATION	Compute the initial center position of the CR
WITHOUT_CLASSIFICATION	horizontal resizing
WITHOUT_CLASSIFICATION	Compute the final center position of the CR
WITHOUT_CLASSIFICATION	Self messages act differently so it is needed to move them separetly. Only self messages of selected CR should be horizontally translated.
WITHOUT_CLASSIFICATION	Create the graph model
WITHOUT_CLASSIFICATION	Y position of the new CR should match existing CRs Y position
WITHOUT_CLASSIFICATION	Init the sequence diagrams from the module
WITHOUT_CLASSIFICATION	debugging and looking at fig.headFig.figs[1]._currText I can see that it's working, but how to test it?
WITHOUT_CLASSIFICATION	Operations that work on elements:
WITHOUT_CLASSIFICATION	Operations that work on classes of objects:
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getMinimumSize()
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	Object getImportedPackage(Object element);
WITHOUT_CLASSIFICATION	Object getIncludingCase(Object handle);
WITHOUT_CLASSIFICATION	Javadoc reviewed above this point - tfm /
WITHOUT_CLASSIFICATION	Object getImportingNamespace(Object element);
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	Object createStereotype();
WITHOUT_CLASSIFICATION	Implementation Note: Unlike many of the interfaces to the model there is no control to force a single instance of an XmiReader. This is to allow work objects generated by the implementation to be garbage collected when an XmiReader instance falls out of scope.
WITHOUT_CLASSIFICATION	ADiagramElementProperty delegate methods
WITHOUT_CLASSIFICATION	@see org.omg.uml.diagraminterchange.ADiagramElementProperty#add( org.omg.uml.diagraminterchange.DiagramElement, org.omg.uml.diagraminterchange.Property)
WITHOUT_CLASSIFICATION	@see org.omg.uml.diagraminterchange.ADiagramElementProperty#exists( org.omg.uml.diagraminterchange.DiagramElement, org.omg.uml.diagraminterchange.Property)
WITHOUT_CLASSIFICATION	@see org.omg.uml.diagraminterchange.ADiagramElementProperty#getProperty( org.omg.uml.diagraminterchange.DiagramElement)
WITHOUT_CLASSIFICATION	easy interface to properties
WITHOUT_CLASSIFICATION	Here follows the interfaces that contain the enums of different kinds in the UML meta-model.
WITHOUT_CLASSIFICATION	Flow is not in UML 2.x - don't implement
WITHOUT_CLASSIFICATION	Do nothing.
WITHOUT_CLASSIFICATION	additional support for tagged values
WITHOUT_CLASSIFICATION	Do nothing.
WITHOUT_CLASSIFICATION	Do nothing.
WITHOUT_CLASSIFICATION	Do nothing.
WITHOUT_CLASSIFICATION	Here follows the interfaces that contain the enums of different kinds in the UML meta-model.
WITHOUT_CLASSIFICATION	static variables
WITHOUT_CLASSIFICATION	constructors
WITHOUT_CLASSIFICATION	public methods
WITHOUT_CLASSIFICATION	end class UUIDManager
WITHOUT_CLASSIFICATION	Write out something for us to read back in
WITHOUT_CLASSIFICATION	Now read it and check the results.
WITHOUT_CLASSIFICATION	Create an empty file and try to read it
WITHOUT_CLASSIFICATION	Depends on implementation:
WITHOUT_CLASSIFICATION	TODO:
WITHOUT_CLASSIFICATION	Construct an exception with a message and a causing exception. @param message the message @param c the cause of the exception public XmiReferenceException(String message, Throwable c) { super(message, c); }
WITHOUT_CLASSIFICATION	The netbeans SAXParser sets line number and column number to -1.
WITHOUT_CLASSIFICATION	The xerces SAXParser sets line number and column number to 1.
WITHOUT_CLASSIFICATION	Not true in general, but should be true for our test models
WITHOUT_CLASSIFICATION	This throws org.argouml.model.XmiException: Unknown element in XMI file : Model because the UML 1.3->1.4 converter can only handle XMI 1.0, not 1.1
WITHOUT_CLASSIFICATION	TODO:
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	If the region is changed to another region then we make sure that a delete event is not fired as a result. $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	In this case, either the container was not set, or it was not contained in a statemachine.
WITHOUT_CLASSIFICATION	The only way a region is set to null is if we're deleting the vertex in which case we do nothing special so that the removal of the state triggers a delete event.
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	TODO:
WITHOUT_CLASSIFICATION	In UML a message could have an Action. In UML2 it never does.
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	No body found.
WITHOUT_CLASSIFICATION	oops we already have the body
WITHOUT_CLASSIFICATION	return handle.stringValue();
WITHOUT_CLASSIFICATION	public Collection<Element> getExtendedElements(Object handle) {
WITHOUT_CLASSIFICATION	For a Transition use indirection through source StateVertex
WITHOUT_CLASSIFICATION	Gone from UML 2.x throw new NotImplementedException();
WITHOUT_CLASSIFICATION	Get all the relationships, that this model element has. and filter everything, that is not an import.
WITHOUT_CLASSIFICATION	Can't be done in the general case of federated repositories, but at least get what we can find for the current resource set
WITHOUT_CLASSIFICATION	MultiplicityElement is now an interface implemented by element types that support multiplicities - tfm
WITHOUT_CLASSIFICATION	should be Element not EObject really
WITHOUT_CLASSIFICATION	Classifier powerType =
WITHOUT_CLASSIFICATION	TODO: Signal -> Receptions association not navigable in this direction
WITHOUT_CLASSIFICATION	in UML2, the tag definition is the attribute itself
WITHOUT_CLASSIFICATION	usage differs from UML1
WITHOUT_CLASSIFICATION	usage differs from UML1
WITHOUT_CLASSIFICATION	Transitions can have multiple Triggers now
WITHOUT_CLASSIFICATION	Gone in UML 2.x
WITHOUT_CLASSIFICATION	ActionState, CallState, and SubactivityState have been replaced in UML 2.0 by explicitly modeled Actions
WITHOUT_CLASSIFICATION	TODO: Double check - tfm
WITHOUT_CLASSIFICATION	TODO: gone in UML 2
WITHOUT_CLASSIFICATION	TODO: Gone in UML 2
WITHOUT_CLASSIFICATION	TODO: Double check - tfm
WITHOUT_CLASSIFICATION	TODO: double check - tfm
WITHOUT_CLASSIFICATION	below for UML 1.4 compatibility
WITHOUT_CLASSIFICATION	TODO: double check - tfm
WITHOUT_CLASSIFICATION	TODO: Changed from UML 1.4
WITHOUT_CLASSIFICATION	TODO: gone in UML 2
WITHOUT_CLASSIFICATION	TODO: changed for UML 2.x
WITHOUT_CLASSIFICATION	TODO: gone from UML 2
WITHOUT_CLASSIFICATION	has <<subsystem>> stereotype
WITHOUT_CLASSIFICATION	TODO: Not exact, but close
WITHOUT_CLASSIFICATION	&& ((Action) handle).get
WITHOUT_CLASSIFICATION	Not in UML2
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	Even though this is not relevant for UML2 we have code calling this that expects it for UML1.4 and we must handle it gracefully.
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	return ((RedefinableElement) handle).isRoot(); TODO: One part of UML 2.1.1 spec says that this is as above, but it appears to be gone - tfm
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	lifeline.setRepresents(prop);
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	A composite state contains at least one region
WITHOUT_CLASSIFICATION	an AssociationEnd is now a Property owned by an Association
WITHOUT_CLASSIFICATION	throw new NotImplementedException( "This is not a UML2 element"); $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	TODO: Exception has been removed for UML 2.x just return Signal for now - tfm
WITHOUT_CLASSIFICATION	Gone in UML 2.x - just Classifier now
WITHOUT_CLASSIFICATION	TODO: Not really the same thing, but close
WITHOUT_CLASSIFICATION	The name of the meta type is the class name (after the last .) and before the "Impl" or end of class name.
WITHOUT_CLASSIFICATION	TODO: Gone in UML 2.x Return place holder for now
WITHOUT_CLASSIFICATION	TODO: no separate SyncState in UML 2.1 - tfm
WITHOUT_CLASSIFICATION	ActionSequence.class
WITHOUT_CLASSIFICATION	ClassifierInState.class
WITHOUT_CLASSIFICATION	Argument.class
WITHOUT_CLASSIFICATION	AttributeLink.class
WITHOUT_CLASSIFICATION	UninterpretedAction.class
WITHOUT_CLASSIFICATION	Access should be fast
WITHOUT_CLASSIFICATION	Iteration should be fast
WITHOUT_CLASSIFICATION	LiteralSpecification
WITHOUT_CLASSIFICATION	i.e. eventType == Notification.REMOVE
WITHOUT_CLASSIFICATION	implements CommandStack
WITHOUT_CLASSIFICATION	list.add("OpaqueExpression");
WITHOUT_CLASSIFICATION	LiteralSpecification list.add("LiteralNull");When other ok
WITHOUT_CLASSIFICATION	list.add("LiteralInteger");When other ok
WITHOUT_CLASSIFICATION	list.add("LiteralUnlimitedNatural");When other ok
WITHOUT_CLASSIFICATION	list.add("InstanceValue");
WITHOUT_CLASSIFICATION	TODO else => Exception !
WITHOUT_CLASSIFICATION	Can't be changed
WITHOUT_CLASSIFICATION	rewrite it after change setExpression ?
WITHOUT_CLASSIFICATION	as write in UML specification, we have size(bodies)==size(langs) we must have tabValues.length%2==0
WITHOUT_CLASSIFICATION	LiteralSpecification
WITHOUT_CLASSIFICATION	Can't be set
WITHOUT_CLASSIFICATION	rewrite it after change setExpression ?
WITHOUT_CLASSIFICATION	as write in UML specification, we have size(bodies)==size(langs) we must have tabValues.length%2==0
WITHOUT_CLASSIFICATION	A Link is an Assocation in UML2.x
WITHOUT_CLASSIFICATION	Link does not exist in UML2, a link is represented just as an association
WITHOUT_CLASSIFICATION	must not be used in UML2; we model a method as a OpaqueBehavior object that already has a body, so there is no need to have an intermediate expression object
WITHOUT_CLASSIFICATION	We need a method (operation implementation) to store the method body.
WITHOUT_CLASSIFICATION	Maybe this operation already has a method, that fits our purpose? In this case, try to reuse it, instead of creating a new implementation.
WITHOUT_CLASSIFICATION	Check, if we have to create a new implementation.
WITHOUT_CLASSIFICATION	Create a new implementation.
WITHOUT_CLASSIFICATION	And set the specification to the current operation.
WITHOUT_CLASSIFICATION	Add it to the operation's methods.
WITHOUT_CLASSIFICATION	Look, if there's already a java implementation
WITHOUT_CLASSIFICATION	Try to get the corresponding body and set it to the current body This _should_ work, if all the bodies were stored with their corresponding languages.
WITHOUT_CLASSIFICATION	Job done.
WITHOUT_CLASSIFICATION	It seems, there was no implementation of our current target language, so we just add one.
WITHOUT_CLASSIFICATION	We cannot set the body of this model element type.
WITHOUT_CLASSIFICATION	Removed from UML 2.x
WITHOUT_CLASSIFICATION	also parse 1_ or 0_N etc.
WITHOUT_CLASSIFICATION	WARNING - This has containment side effects! Eclipse UML2 will move the Property from the Classifier to the Association when the navigability is changed.
WITHOUT_CLASSIFICATION	$NON-NLS-1$$NON-NLS-2$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	for other xmi files with further namespaces:
WITHOUT_CLASSIFICATION	eclipse namespaces:
WITHOUT_CLASSIFICATION	For the .uml files in the eclipse jar files, we need this:
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	Not needed currently for UML 2
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	final Object scope,
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	The attribute 'targetScope' of an AssociationEnd in UML1.x is no longer supported in UML2.x
WITHOUT_CLASSIFICATION	Nothing to do
WITHOUT_CLASSIFICATION	@see org.argouml.model.UmlHelper#getSource(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.model.UmlHelper#getDestination(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.model.UmlHelper#move(java.lang.Object, org.argouml.model.UmlHelper.Direction)
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	in UML2, we model a method as a Behavior (initially OpaqueBehavior)
WITHOUT_CLASSIFICATION	The interface realization will be created in the client namespace (client is a namespace)
WITHOUT_CLASSIFICATION	Extent ignored for eUML2 implementation (required for NetBeans MDR)
WITHOUT_CLASSIFICATION	@see org.argouml.model.UmlHelper#move(java.lang.Object, org.argouml.model.UmlHelper.Direction)
WITHOUT_CLASSIFICATION	@see org.argouml.model.ExtensionMechanismsHelper#getCommonTaggedValueTypes()
WITHOUT_CLASSIFICATION	cmd.setObjects(run.getParams().get(0));
WITHOUT_CLASSIFICATION	maybe UML2 has these as constants somewhere
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	also apply subprofiles:
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	Sets the value of an element#s property (tagged value). This method makes sure that a Collection of values is set if and only if the property is multivalued (upper multiplicity value greater 1), so passing a collection is safe. @see org.argouml.model.ExtensionMechanismsHelper#setValueOfTag(java.lang.Object, java.lang.Object, java.lang.Object)
WITHOUT_CLASSIFICATION	commonTaggedValueTypes.add(org.eclipse.uml2.uml.resource.UMLResource.)
WITHOUT_CLASSIFICATION	remove base class by destroying the extension
WITHOUT_CLASSIFICATION	consider the property multiplicity
WITHOUT_CLASSIFICATION	or getDefaultValueFor(prop)?
WITHOUT_CLASSIFICATION	too bad, we choose to take the first value
WITHOUT_CLASSIFICATION	ready to set the value finally
WITHOUT_CLASSIFICATION	in case of a tagged value, the type shouldn't be set here
WITHOUT_CLASSIFICATION	not implementable in UML2, because property is missing
WITHOUT_CLASSIFICATION	also unapply subprofiles:
WITHOUT_CLASSIFICATION	also define subprofiles:
WITHOUT_CLASSIFICATION	{AssociationRole.class, ClassifierRole.class, },
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	{Link.class, Instance.class, }, {Transition.class, StateVertex.class, },
WITHOUT_CLASSIFICATION	{Message.class, ClassifierRole.class },
WITHOUT_CLASSIFICATION	Note for UML2 the aggregation ends are swapped
WITHOUT_CLASSIFICATION	Extend, but only between two use cases. Remember we draw from the extension port to the base port.
WITHOUT_CLASSIFICATION	in UML2 subsystem is a Component with <<subsystem>> stereotype so this must occur after the metaTypes.getComponent() case
WITHOUT_CLASSIFICATION	find the passed in container in validContainmentMap
WITHOUT_CLASSIFICATION	determine if metaType is a valid element for container
WITHOUT_CLASSIFICATION	UML 1.4.2 Spec section 4.5.3.20 [5] A GeneralizableElement may only be a child of GeneralizableElement of the same kind.
WITHOUT_CLASSIFICATION	specifies valid elements for a Region to contain
WITHOUT_CLASSIFICATION	specifies valid elements for a Region to contain
WITHOUT_CLASSIFICATION	specifies valid elements for a Region to contain
WITHOUT_CLASSIFICATION	specifies valid elements for a Package to contain
WITHOUT_CLASSIFICATION	specifies valid elements for a Package to contain
WITHOUT_CLASSIFICATION	specifies valid elements for a Package to contain
WITHOUT_CLASSIFICATION	valid elements for a Profile to contain
WITHOUT_CLASSIFICATION	specifies valid elements for a class to contain
WITHOUT_CLASSIFICATION	specifies valid elements for a classifier to contain
WITHOUT_CLASSIFICATION	specifies valid elements for an Interface to contain
WITHOUT_CLASSIFICATION	specifies valid elements for a Signal to contain
WITHOUT_CLASSIFICATION	specifies valid elements for an Actor to contain
WITHOUT_CLASSIFICATION	specifies valid elements for a Use Case to contain
WITHOUT_CLASSIFICATION	specifies valid elements for a Use Case to contain
WITHOUT_CLASSIFICATION	specifies valid elements for a Component to contain
WITHOUT_CLASSIFICATION	specifies valid elements for a Node to contain
WITHOUT_CLASSIFICATION	$NON-NLS-1$$NON-NLS-2$
WITHOUT_CLASSIFICATION	A list of valid connections between elements, the connection type first and then the elements to be connected
WITHOUT_CLASSIFICATION	If there isn't a 3rd column then this represents a connection of elements of the same type.
WITHOUT_CLASSIFICATION	If there is a 3rd column then this represents a connection of between 2 different types of element.
WITHOUT_CLASSIFICATION	If the array hasn't been flagged to indicate otherwise swap elements the elemnts and add again.
WITHOUT_CLASSIFICATION	specifies valid elements for a DataType to contain
WITHOUT_CLASSIFICATION	specifies valid elements for an Operation to contain
WITHOUT_CLASSIFICATION	valid elements for a Stereotype to contain
WITHOUT_CLASSIFICATION	valid elements for an Action to contain
WITHOUT_CLASSIFICATION	trying to get a built-in standard profile from eclipse UML2
WITHOUT_CLASSIFICATION	Removed from UML 2
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	Roll back transaction to remove any partial results read
WITHOUT_CLASSIFICATION	We shouldn't get here, but just in case... We want a wide exception catcher to make sure our transaction always gets ended
WITHOUT_CLASSIFICATION	If we can find a nested SAX exception, it will have information on the line number, etc.
WITHOUT_CLASSIFICATION	Ignore if the extent never got created or has been deleted
WITHOUT_CLASSIFICATION	InputSource xformedInput = chainedTransform(transformFiles, pIs);
WITHOUT_CLASSIFICATION	InputSource xformedInput = chainedTransform(transformFiles, pIs);
WITHOUT_CLASSIFICATION	@see org.argouml.model.XmiReader#getXMIUUIDToObjectMap()
WITHOUT_CLASSIFICATION	Set up reader to be first filter in chain
WITHOUT_CLASSIFICATION	Set up source for style sheet
WITHOUT_CLASSIFICATION	Create & set up temporary output file
WITHOUT_CLASSIFICATION	In UML2.x there is no metaclass named Method, but we use the 'method' association of BehavioralFeature
WITHOUT_CLASSIFICATION	ret.setIsLeaf(false); ret.setIsRoot(false);
WITHOUT_CLASSIFICATION	Create filter for each style sheet and chain to previous filter/reader
WITHOUT_CLASSIFICATION	Create transformer and do transformation
WITHOUT_CLASSIFICATION	Set up for next iteration
WITHOUT_CLASSIFICATION	Create & set up temporary output file
WITHOUT_CLASSIFICATION	Silently ignore anything specified by caller attempt to continue
WITHOUT_CLASSIFICATION	we presume the stream is encoded using the default char encoding
WITHOUT_CLASSIFICATION	Delete the old extent first
WITHOUT_CLASSIFICATION	LOG.log(Level.WARNING, "Unable to find extent " + extent);
WITHOUT_CLASSIFICATION	Set the storage id for our repository so that MofIds will be unique (they are composed as "storageId":"serialNumber"). NOTE: The storage manager only looks for a few property names such as the StorageFactoryClassName. Everything else needs to be prefixed with "MDRStorageProperty." which gets deleted from the property name before it and its associated value are copied to an internal property table separate from the system property table.
WITHOUT_CLASSIFICATION	Connect to the repository
WITHOUT_CLASSIFICATION	Create an extent and read in our metamodel (M2 model)
WITHOUT_CLASSIFICATION	Create and start event pump first so it's available for all others
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getDiagramInterchangeModel()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getFacade()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getModelEventPump()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getActivityGraphsFactory()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getActivityGraphsHelper()
WITHOUT_CLASSIFICATION	handles all children of relationship including extend and include which are not members of core
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	Disable event delivery during model load
WITHOUT_CLASSIFICATION	If we've got a streaming input, copy it to make sure we'll be able to rewind it if necessary
WITHOUT_CLASSIFICATION	Use a transaction to avoid the performance penalty (3x) of MDR's autocommit mode
WITHOUT_CLASSIFICATION	If a UML 1.3 file, attempt to upgrade it to UML 1.4
WITHOUT_CLASSIFICATION	Roll back transaction from first attempt & start new one
WITHOUT_CLASSIFICATION	Clear the associated ID maps & reset starting collection
WITHOUT_CLASSIFICATION	Make sure we always have a default extent. The old extent will get deleted as part of creating the new extent.
WITHOUT_CLASSIFICATION	DataTypes is next so it's available for Kinds, ModelManagement, & Extensions
WITHOUT_CLASSIFICATION	Initialize remaining factories and helpers (but defer heavyweight ones until needed)
WITHOUT_CLASSIFICATION	Create a default extent for the user UML model. This will get replaced if a new model is read in from an XMI file.
WITHOUT_CLASSIFICATION	NOTE: If we switch to a persistent repository like the b-tree repository we'll want to keep the old extent(s) around
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getCollaborationsFactory()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getCommonBehaviorHelper()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getCopyHelper()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getCoreFactory()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getCoreHelper()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getDataTypesFactory()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getDataTypesHelper()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getExtensionMechanismsFactory()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getModelManagementFactory()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getModelManagementHelper()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getStateMachinesFactory()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getStateMachinesHelper()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getUmlFactory()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getUmlHelper()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getUseCasesFactory()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getUseCasesHelper()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getChangeableKind()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getAggregationKind()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getPseudostateKind()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getScopeKind()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getConcurrencyKind()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getDirectionKind()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getOrderingKind()
WITHOUT_CLASSIFICATION	@see org.argouml.model.CommonBehaviorHelper#setNodeInstance(java.lang.Object, java.lang.Object)
WITHOUT_CLASSIFICATION	Elements created after file load won't have index entries
WITHOUT_CLASSIFICATION	Normally the extent should exist already, but in the case of making an empty project, we may not have an extent yet, so create a default extent
WITHOUT_CLASSIFICATION	Private constructor for common work needed by both public constructors.
WITHOUT_CLASSIFICATION	end our transaction
WITHOUT_CLASSIFICATION	@see org.argouml.model.ExtensionMechanismsHelper#getAllPossibleStereotypes(java.util.Collection, java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.model.ExtensionMechanismsHelper#getCommonTaggedValueTypes()
WITHOUT_CLASSIFICATION	there is nothing to do in UML1.4
WITHOUT_CLASSIFICATION	forbid instantiation
WITHOUT_CLASSIFICATION	MDR classes may have a UML or Uml prefix which should be removed.
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	@see org.argouml.model.MetaTypes#getAbstraction()
WITHOUT_CLASSIFICATION	Delete Stimulii which have this as their dispatchAction
WITHOUT_CLASSIFICATION	Delete Messages which have this as their action
WITHOUT_CLASSIFICATION	Delete LinkEnds
WITHOUT_CLASSIFICATION	Delete AttributeLinks where this is the value
WITHOUT_CLASSIFICATION	Delete Stimuli which have this as a Sender or Receiver
WITHOUT_CLASSIFICATION	binary link
WITHOUT_CLASSIFICATION	Delete all SendActions which have this as signal
WITHOUT_CLASSIFICATION	Delete all SignalEvents which have this as the signal
WITHOUT_CLASSIFICATION	@see org.argouml.model.UmlHelper#deleteCollection(java.util.Collection)
WITHOUT_CLASSIFICATION	@see org.argouml.model.UmlHelper#getSource(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.model.UmlHelper#getDestination(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.model.UmlHelper#move(java.lang.Object, org.argouml.model.UmlHelper.Direction)
WITHOUT_CLASSIFICATION	Text was stored in name in UML 1.3
WITHOUT_CLASSIFICATION	The name of the meta type is the class name (after the last .) and before the next $ or end of class name.
WITHOUT_CLASSIFICATION	Delete CollaborationInstanceSets where this is the last participatingInstance
WITHOUT_CLASSIFICATION	Delete InteractionInstanceSets where this is the last participatingStimulus
WITHOUT_CLASSIFICATION	handles all children of relationship including extend and include which are not members of core
WITHOUT_CLASSIFICATION	this doesn't support I18N or multiple states, but it's just a default
WITHOUT_CLASSIFICATION	Partitions are composite elements and will get deleted implicitly Partition contents don't need to be deleted or checked
WITHOUT_CLASSIFICATION	@see org.netbeans.api.xmi.XMIReferenceProvider#getReference(javax.jmi.reflect.RefObject)
WITHOUT_CLASSIFICATION	Look for an existing reference matching our MofID
WITHOUT_CLASSIFICATION	probably redundant - just in case
WITHOUT_CLASSIFICATION	delete Messages which have this as sender or receiver
WITHOUT_CLASSIFICATION	Helper interfaces and methods.
WITHOUT_CLASSIFICATION	CHECKSTYLE:OFF - ignore too many parameters since API is fixed by MDR
WITHOUT_CLASSIFICATION	CHECKSTYLE:ON
WITHOUT_CLASSIFICATION	Shorthand notation for convenience
WITHOUT_CLASSIFICATION	Quick exit if it's a transaction event (we get a lot of them and they are all ignored)
WITHOUT_CLASSIFICATION	The 4-arg version of this method depends on this ordering. Don't change it!
WITHOUT_CLASSIFICATION	InteractionInstanceSets will get deleted automatically because they are associated by composition
WITHOUT_CLASSIFICATION	If this is the only message contained in the Interaction we delete the Interaction
WITHOUT_CLASSIFICATION	Object from a different file, register with superclass so it can resolve all references
WITHOUT_CLASSIFICATION	@see org.netbeans.lib.jmi.xmi.XmiContext#getReference(java.lang.String, java.lang.String)
WITHOUT_CLASSIFICATION	/ Begin AndroMDA Code /
WITHOUT_CLASSIFICATION	if the model URL has a suffix of '.zip' or '.jar', get the suffix without it and store it in the urlMap
WITHOUT_CLASSIFICATION	Several tries to construct a URL that really exists.
WITHOUT_CLASSIFICATION	If systemId is publicId previously mapped from a systemId, try to use the systemId.
WITHOUT_CLASSIFICATION	Try to find suffix in module list.
WITHOUT_CLASSIFICATION	search the classpath
WITHOUT_CLASSIFICATION	Give up and let superclass deal with it.
WITHOUT_CLASSIFICATION	remove the first prefix because it may be an archive (like magicdraw)
WITHOUT_CLASSIFICATION	We've got a profile read pending - handle it ourselves now
WITHOUT_CLASSIFICATION	shouldn't happen
WITHOUT_CLASSIFICATION	Otherwise if it's not something we've already read, just punt to the super class.
WITHOUT_CLASSIFICATION	Unfortunately the MDR super implementation throws DebugException with just the message from the causing exception rather than nesting the exception itself, so we don't have all the information we'd like
WITHOUT_CLASSIFICATION	Only add MOF elements, not primitive datatypes
WITHOUT_CLASSIFICATION	Only add MOF elements, not primitive datatypes
WITHOUT_CLASSIFICATION	For Transition use indirection through target StateVertex
WITHOUT_CLASSIFICATION	Look for an existing reference matching our MofID
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	Get all (UML) metaclasses
WITHOUT_CLASSIFICATION	Object[] args = { typeName, elemName }; misc.name.element-import = Imported {0}: {1} return Translator .localize("misc.name.element-import", args);
WITHOUT_CLASSIFICATION	Although this only handles one level of package, it is OK for UML 1.4 because of clustering Get the right UML package in the extent
WITHOUT_CLASSIFICATION	Return the metatype proxy
WITHOUT_CLASSIFICATION	we must find out if the activator itself does not have message as it's activator
WITHOUT_CLASSIFICATION	An activator can't also be a predecessor of a message
WITHOUT_CLASSIFICATION	This double 'for' loop may be optimised as follows: - Use arrays in stead of a Set for bases - Have the second loop start from the element after base1 ... but I chose not to do this, since the gain is small, and this is only used for a lazily filled combo. BTW: This is also used by Notation.
WITHOUT_CLASSIFICATION	An Association can only have a single unnamed ClassifierRole, so
WITHOUT_CLASSIFICATION	if we are unnamed eliminate all classifiers which are already the base of some role
WITHOUT_CLASSIFICATION	eliminate Classifiers which already have an unnamed role
WITHOUT_CLASSIFICATION	WFR 2.10.3.3 #4
WITHOUT_CLASSIFICATION	eliminate Classifiers which already have an unnamed role
WITHOUT_CLASSIFICATION	We need to verify that ns is a Package, if not - find its parent package! Otherwise this causes an exception when creating a sequence diagram for a ClassifierRole.
WITHOUT_CLASSIFICATION	No initialization currently
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	if we are unnamed eliminate all classifiers which are already the base of some role
WITHOUT_CLASSIFICATION	|| context instanceof Collaboration || context instanceof Model
WITHOUT_CLASSIFICATION	@see org.netbeans.lib.jmi.xmi.XMIHeaderProvider#writeHeader(java.io.Writer)
WITHOUT_CLASSIFICATION	NOTE: The <XMI.header></XMI.header> is provided for us
WITHOUT_CLASSIFICATION	Not implemented in MDR
WITHOUT_CLASSIFICATION	@see org.argouml.model.AbstractModelEventPump#addModelEventListener(java.beans.PropertyChangeListener, java.lang.Object, java.lang.String[])
WITHOUT_CLASSIFICATION	@see org.argouml.model.AbstractModelEventPump#addModelEventListener(java.beans.PropertyChangeListener, java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.model.AbstractModelEventPump#removeModelEventListener(java.beans.PropertyChangeListener, java.lang.Object, java.lang.String[])
WITHOUT_CLASSIFICATION	@see org.argouml.model.AbstractModelEventPump#removeModelEventListener(java.beans.PropertyChangeListener, java.lang.Object, java.lang.String[])
WITHOUT_CLASSIFICATION	@see org.argouml.model.AbstractModelEventPump#removeModelEventListener(java.beans.PropertyChangeListener, java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.model.AbstractModelEventPump#addClassModelEventListener(java.beans.PropertyChangeListener, java.lang.Object, java.lang.String[])
WITHOUT_CLASSIFICATION	Clean up index entries
WITHOUT_CLASSIFICATION	will always be null
WITHOUT_CLASSIFICATION	Create a change event for the corresponding property
WITHOUT_CLASSIFICATION	will always be null
WITHOUT_CLASSIFICATION	Create an event for the other end of the association
WITHOUT_CLASSIFICATION	will always be null
WITHOUT_CLASSIFICATION	and a change event for that end
WITHOUT_CLASSIFICATION	will always be null
WITHOUT_CLASSIFICATION	will always be null
WITHOUT_CLASSIFICATION	Create a change event for the associated property
WITHOUT_CLASSIFICATION	will always be null
WITHOUT_CLASSIFICATION	Create an event for the other end of the association
WITHOUT_CLASSIFICATION	will always be null
WITHOUT_CLASSIFICATION	Create a change event for the associated property
WITHOUT_CLASSIFICATION	will always be null
WITHOUT_CLASSIFICATION	Cut down on debugging noise
WITHOUT_CLASSIFICATION	Unregister deleted instances after all events have been delivered
WITHOUT_CLASSIFICATION	Any given listener is only called once even if it is registered for multiple relevant matches
WITHOUT_CLASSIFICATION	This will include all subtypes registered
WITHOUT_CLASSIFICATION	(LOG.isDebugEnabled()
WITHOUT_CLASSIFICATION	For debugging you probably want either this OR the logging for every event which is fired - not both
WITHOUT_CLASSIFICATION	LOG.isDebugEnabled()
WITHOUT_CLASSIFICATION	Fetch the key before going in synchronized mode
WITHOUT_CLASSIFICATION	LOG.log(Level.FINE, " Class " + name + " has subtypes : " + names.get(name));
WITHOUT_CLASSIFICATION	convert classname to RefObject
WITHOUT_CLASSIFICATION	If we don't have a MofClass, see if we can get one from the instance
WITHOUT_CLASSIFICATION	If we still don't have a MofClass, something's wrong
WITHOUT_CLASSIFICATION	throw new IllegalArgumentException("Property '" + attribute + "' doesn't exist in metamodel");
WITHOUT_CLASSIFICATION	If there isn't a 3rd column then this represents a connection of elements of the same type.
WITHOUT_CLASSIFICATION	Save the model (current)
WITHOUT_CLASSIFICATION	@see org.argouml.model.ChangeableKind#getAddOnly()
WITHOUT_CLASSIFICATION	Lookup primary key, creating new entry if needed
WITHOUT_CLASSIFICATION	Lookup primary key, creating new entry if needed
WITHOUT_CLASSIFICATION	If there are no subkeys, register using our special value to indicate that this is a primary key only registration
WITHOUT_CLASSIFICATION	UML 2.x only
WITHOUT_CLASSIFICATION	UML 2.x only
WITHOUT_CLASSIFICATION	UML 2.x only
WITHOUT_CLASSIFICATION	Look for a TagDefinition matching the given name
WITHOUT_CLASSIFICATION	Create a new TagDefinition if none found
WITHOUT_CLASSIFICATION	only add all if there are some to add.
WITHOUT_CLASSIFICATION	Clear target so that multiple copies have no effect (other than inefficiency)
WITHOUT_CLASSIFICATION	Delete all TaggedValues with this type
WITHOUT_CLASSIFICATION	Used by the copy functions. Do not call this function directly. @param source The stereotype to copy from. @param target The object becoming a copy.
WITHOUT_CLASSIFICATION	"Element");
WITHOUT_CLASSIFICATION	Well formedness rule 4.12.3.1 CompositeState [4] There have to be at least two composite substates in a concurrent composite state. If this is broken by deletion of substate then we delete the other remaining substates.
WITHOUT_CLASSIFICATION	The effect will get deleted automatically by MDR, unlike the Guard.
WITHOUT_CLASSIFICATION	Although Usage & Permission are Dependencies, they need to be include separately because of the way lookup works
WITHOUT_CLASSIFICATION	The following is specifically for Realizations
WITHOUT_CLASSIFICATION	The next 3 restrictions for Abstraction seem to be Argo specific not something the UML spec requires - tfm - 20070215
WITHOUT_CLASSIFICATION	A list of valid connections between elements, the connection type first and then the elements to be connected
WITHOUT_CLASSIFICATION	TODO: constraints TODO: required tags
WITHOUT_CLASSIFICATION	specifies valid elements for a Model to contain
WITHOUT_CLASSIFICATION	specifies valid elements for a Model to contain
WITHOUT_CLASSIFICATION	specifies valid elements for a Package to contain
WITHOUT_CLASSIFICATION	specifies valid elements for a classifier to contain
WITHOUT_CLASSIFICATION	specifies valid elements for an Interface to contain
WITHOUT_CLASSIFICATION	specifies valid elements for a Signal to contain
WITHOUT_CLASSIFICATION	specifies valid elements for an Actor to contain
WITHOUT_CLASSIFICATION	specifies valid elements for a Use Case to contain
WITHOUT_CLASSIFICATION	specifies valid elements for a Use Case to contain
WITHOUT_CLASSIFICATION	specifies valid elements for a Node to contain
WITHOUT_CLASSIFICATION	specifies valid elements for a Enumeration to contain
WITHOUT_CLASSIFICATION	specifies valid elements for a DataType to contain
WITHOUT_CLASSIFICATION	specifies valid elements for a Operation to contain
WITHOUT_CLASSIFICATION	specifies valid elements for an Event to contain
WITHOUT_CLASSIFICATION	specifies valid elements for an AssociationRole to contain
WITHOUT_CLASSIFICATION	specifies valid elements for an AssociationRole to contain
WITHOUT_CLASSIFICATION	specifies valid elements for an AssociationRole to contain
WITHOUT_CLASSIFICATION	specifies valid elements for an AssociationRole to contain
WITHOUT_CLASSIFICATION	specifies valid elements for an AssociationRole to contain
WITHOUT_CLASSIFICATION	specifies valid elements for an AssociationRole to contain
WITHOUT_CLASSIFICATION	specifies valid elements for an AssociationRole to contain
WITHOUT_CLASSIFICATION	specifies valid elements for an AssociationRole to contain
WITHOUT_CLASSIFICATION	specifies valid elements for an AssociationRole to contain
WITHOUT_CLASSIFICATION	specifies valid elements for an AssociationRole to contain
WITHOUT_CLASSIFICATION	specifies valid elements for an State to contain
WITHOUT_CLASSIFICATION	specifies valid elements for an CallState to contain
WITHOUT_CLASSIFICATION	specifies valid elements for an SimpleState to contain
WITHOUT_CLASSIFICATION	specifies valid elements for an SubactivityState to contain
WITHOUT_CLASSIFICATION	specifies valid elements for an ActionState to contain
WITHOUT_CLASSIFICATION	specifies valid elements for an ActionState to contain
WITHOUT_CLASSIFICATION	supports implementation of some special elements not supported by buildNode
WITHOUT_CLASSIFICATION	the list of namespaces to return
WITHOUT_CLASSIFICATION	If our map has any entries for this type, it's a connection type
WITHOUT_CLASSIFICATION	Get the list of valid model item pairs for the given connection type
WITHOUT_CLASSIFICATION	See if there's a pair in this list that match the given model elements
WITHOUT_CLASSIFICATION	find the passed in container in validContainmentMap
WITHOUT_CLASSIFICATION	determine if metaType is a valid element for container
WITHOUT_CLASSIFICATION	UML 1.4.2 Spec section 4.5.3.20 [5] A GeneralizableElement may only be a child of GeneralizableElement of the same kind.
WITHOUT_CLASSIFICATION	Begin a transaction - we'll do a bunch of reads first to collect a set of elements to delete - then delete them all
WITHOUT_CLASSIFICATION	no else here to make sure Classifier with its double inheritance goes ok
WITHOUT_CLASSIFICATION	no else here to make sure AssociationClass goes ok
WITHOUT_CLASSIFICATION	no else to handle multiple inheritance of linkobject
WITHOUT_CLASSIFICATION	If we get this with the repository locked, it means our root model element was already deleted. Nothing to do...
WITHOUT_CLASSIFICATION	Our wrapped version of the same error
WITHOUT_CLASSIFICATION	end our transaction
WITHOUT_CLASSIFICATION	if there are no owned elements then return empty list
WITHOUT_CLASSIFICATION	This enforces the following well-formedness rule. <p>Well formedness rule 4.12.3.1 CompositeState [4] There have to be at least two composite substates in a concurrent composite state.<p> If this is broken by deletion of substate then we change the parent composite substate to be not concurrent.
WITHOUT_CLASSIFICATION	We don't care about the value - just want to see if it throws
WITHOUT_CLASSIFICATION	Recurse into ourself for each parent
WITHOUT_CLASSIFICATION	the following should always be true
WITHOUT_CLASSIFICATION	If we were handed a Classifier to start, this must be a Classifier
WITHOUT_CLASSIFICATION	we have to follow the arrows..
WITHOUT_CLASSIFICATION	|| ns instanceof UseCase see comment below
WITHOUT_CLASSIFICATION	NOTE: Although WFR #3 in section 2.11.3.5 UseCase of the UML 1.4 spec says "A UseCase cannot contain any Classifiers," the OCL is actually self.contents->isEmpty which would seem to imply it can't contain any elements - tfm - 20060416
WITHOUT_CLASSIFICATION	Made following changes from OCL in UML 1.4 section 2.9.3.16: CollaborationInstance -> CollaborationInstanceSet Stimuli -> Stimulus
WITHOUT_CLASSIFICATION	A Profile is a special package having the <<profile>> stereotype which can only contain the following types
WITHOUT_CLASSIFICATION	|| modelElement instanceof StateMachine
WITHOUT_CLASSIFICATION	A Profile is a special package having the <<profile>> stereotype
WITHOUT_CLASSIFICATION	There actually don't appear to be any restrictions on the namespace for a Generalization. The UML 1.4 WFR 2.5.3.20 #3 refers to GeneralizableElements, not Generalizations - tfm
WITHOUT_CLASSIFICATION	only build a namepace if needed, with
WITHOUT_CLASSIFICATION	return struc.getOwner().getNamespace().getOwnedElement().contains( struc.getType());
WITHOUT_CLASSIFICATION	self.allConnections->forAll(r | self.namespace.allContents->includes(r.participant) )
WITHOUT_CLASSIFICATION	d.supplier.oclAsType(GeneralizableElement). allParents.oclAsType(Namespace).ownedElement->select (e | e. elementOwnership.visibility = #public)->includes (r.participant) or
WITHOUT_CLASSIFICATION	d.supplier.oclAsType(Namespace).ownedElement->select (e | e.elementOwnership.visibility = #public)->includes (r.participant) or
WITHOUT_CLASSIFICATION	d.supplier.oclAsType(Package).allImportedElements->select ( e | e. elementImport.visibility = #public) ->includes (r.participant) ) )
WITHOUT_CLASSIFICATION	Get the namespace hierarchy for each element
WITHOUT_CLASSIFICATION	Traverse the lists looking for the last (innermost) match
WITHOUT_CLASSIFICATION	This is an expensive method that we should ensure is called rarely. Hence info level to track easily.
WITHOUT_CLASSIFICATION	UML 1.4 WFR 2.5.3.1 #3
WITHOUT_CLASSIFICATION	UML 1.4 WFR 2.5.3.1 #3 - no aggregation for N-ary associations
WITHOUT_CLASSIFICATION	We silently ignore requests which conflict with UML 1.4 WFR 2.5.3.1 #3 - no aggregation for n-ary associations
WITHOUT_CLASSIFICATION	If we made something aggregate, make sure the other ends conform to UML 1.4 WFR 2.5.3.1 #2 - no more than one aggregate end
WITHOUT_CLASSIFICATION	UML 1.4 WFR 2.5.3.1 #3 - no aggregation for N-ary associations
WITHOUT_CLASSIFICATION	<em>Warning: when changing the implementation of this method be warned that the sequence of the if then else tree DOES matter.</em> Most notably, do not move the setNamespace method any level up in the tree.<p>
WITHOUT_CLASSIFICATION	All text was stored in name field in UML 1.3
WITHOUT_CLASSIFICATION	Returns nothing
WITHOUT_CLASSIFICATION	Boolean, String, Integer, Long, Float, Double, etc
WITHOUT_CLASSIFICATION	This method is CPU intensive and therefore needs to be as efficient as possible.
WITHOUT_CLASSIFICATION	Because we get the metatype class stripped of its reflective proxies, we need to jump through a hoop or two to find it in the metamodel, then work from there to get its proxy.
WITHOUT_CLASSIFICATION	Remove any elements not in requested namespace
WITHOUT_CLASSIFICATION	Check whether model element is contained in given namespace/container.
WITHOUT_CLASSIFICATION	Get Classifiers in Namespace
WITHOUT_CLASSIFICATION	Get Features owned by those Classifiers
WITHOUT_CLASSIFICATION	Select those Features which are BehavioralFeatures
WITHOUT_CLASSIFICATION	Should these also be deleted?
WITHOUT_CLASSIFICATION	This is silly, but for backward compatibility
WITHOUT_CLASSIFICATION	TODO: This is the 2nd part of this method:
WITHOUT_CLASSIFICATION	For a Classifier: <pre> [10] The operation allContents returns a Set containing all ModelElements contained in the Classifier together with the contents inherited from its parents. allContents : Set(ModelElement); allContents = self.contents->union( self.parent.allContents->select(e | e.elementOwnership.visibility = #public or e.elementOwnership.visibility = #protected)) where parent is defined for GeneralizableElement as: [1] The operation parent returns a Set containing all direct parents parent : Set(GeneralizableElement); parent = self.generalization.parent </pre><p>
WITHOUT_CLASSIFICATION	For a Collaboration: <pre> [1 ] The operation allContents results in the set of all ModelElements contained in the Collaboration together with those contained in the parents except those that have been specialized. allContents : Set(ModelElement); allContents = self.contents->union ( self.parent.allContents->reject ( e | self.contents.name->include (e.name) )) parent here is the GeneralizableElement definition </pre>
WITHOUT_CLASSIFICATION	wellformednessrules and preconditions
WITHOUT_CLASSIFICATION	UML 1.4 WFR 2.5.3.1 #3 - no aggregation for N-ary associations
WITHOUT_CLASSIFICATION	equal
WITHOUT_CLASSIFICATION	greater
WITHOUT_CLASSIFICATION	less than
WITHOUT_CLASSIFICATION	binary association
WITHOUT_CLASSIFICATION	delete LinkEnds which have this as their associationEnd
WITHOUT_CLASSIFICATION	delete AttributeLinks where this is the Attribute
WITHOUT_CLASSIFICATION	delete CreateActions which have this as their instantiation
WITHOUT_CLASSIFICATION	@see org.argouml.model.ActivityGraphsHelper#findClassifierByName( java.lang.Object, java.lang.String)
WITHOUT_CLASSIFICATION	Delete dependencies where this is the only client
WITHOUT_CLASSIFICATION	Delete dependencies where this is the only supplier
WITHOUT_CLASSIFICATION	delete CallActions which have this as their operation
WITHOUT_CLASSIFICATION	delete CallEvents which have this as their operation
WITHOUT_CLASSIFICATION	TODO: All the ToDos in the doCopyFoo methods below are inherited from the NSUML implementation and do not reflect new issues. One additional thing which does need to be dealt with is the copying of any attributes which have been added since this code was implemented for UML 1.3.
WITHOUT_CLASSIFICATION	Nothing more to do.
WITHOUT_CLASSIFICATION	Used by the copy functions. Do not call this function directly. TODO: actions? instances? collaborations etc? @param source the source classifier @param target the target classifier
WITHOUT_CLASSIFICATION	Copy all the Features
WITHOUT_CLASSIFICATION	Used by the copy functions. Do not call this function directly. TODO: generalizations, specializations? @param source the source generalizable element @param target the target generalizable element
WITHOUT_CLASSIFICATION	Used by the copy functions. Do not call this function directly. TODO: template parameters, default type TODO: constraining elements TODO: flows, dependencies, comments, bindings, contexts ??? TODO: contents, residences ??? @param source the source me @param target the target me
WITHOUT_CLASSIFICATION	Nothing more to do, don't copy owned elements.
WITHOUT_CLASSIFICATION	copy raised signals:
WITHOUT_CLASSIFICATION	Set the name so that superclasses can find the newly created element in the model, if necessary.
WITHOUT_CLASSIFICATION	Note that if we're copying this element then we must also be allowed to copy other necessary objects.
WITHOUT_CLASSIFICATION	Don't explicitly check if element is null
WITHOUT_CLASSIFICATION	Return 1..1 multiplicity for empty string
WITHOUT_CLASSIFICATION	Convert "" to "0.." instead of ".."
WITHOUT_CLASSIFICATION	In this case, either the container was not set, or it was not contained in a statemachine.
WITHOUT_CLASSIFICATION	according WFR: in case of ActivityGraph only.
WITHOUT_CLASSIFICATION	For consistency with attribute and operation, give it a default name and location
WITHOUT_CLASSIFICATION	Delete Extends which have this as their only ExtensionPoint
WITHOUT_CLASSIFICATION	delete Extends where this is the base
WITHOUT_CLASSIFICATION	delete Includes where this is the addition
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	Test multipe items registered for single key set
WITHOUT_CLASSIFICATION	Remove with null item should remove all entries for key
WITHOUT_CLASSIFICATION	success
WITHOUT_CLASSIFICATION	success
WITHOUT_CLASSIFICATION	Need to copy the lists since we will be moving the elements one by one:
WITHOUT_CLASSIFICATION	Deleting "source" here would probably delete the parameters...
WITHOUT_CLASSIFICATION	Only set the name if it differs from the text.
WITHOUT_CLASSIFICATION	Need to copy the lists since we will be moving the elements:
WITHOUT_CLASSIFICATION	This is not necessarily the current diagram!
WITHOUT_CLASSIFICATION	Remove the old fig from the diagram, so we can draw the new one in its place:
WITHOUT_CLASSIFICATION	p.moveToTrash(source);
WITHOUT_CLASSIFICATION	As soon as we've created a notation and have registered it listener force an event to go to the listener so it draws for the first time.
WITHOUT_CLASSIFICATION	If there are no subkeys, register using our special value to indicate that this is a primary key only registration
WITHOUT_CLASSIFICATION	Made following change from OCL in UML 1.4 section 2.9.3.22: CollaborationInstance -> CollaborationInstanceSet
WITHOUT_CLASSIFICATION	If there is a 3rd column then this represents a connection of between 2 different types of element.
WITHOUT_CLASSIFICATION	Elements which will be deleted when their container is deleted don't get added to the list of elements to be deleted (but we still want to traverse them looking for other elements to be deleted)
WITHOUT_CLASSIFICATION	Technically this is legal, but a StructuralFeature should probably only ever have an owner instead of a namespace. - tfm
WITHOUT_CLASSIFICATION	We'll put the association in the namespace of whichever end is not navigable and is writeable. If they both are, we'll use the namepace of c1.
WITHOUT_CLASSIFICATION	EnumerationLiterals should get deleted implicitly since they are associated by composition
WITHOUT_CLASSIFICATION	Set the namespace to that of the base as first choice, or that of the addition as second choice.
WITHOUT_CLASSIFICATION	UML2 only
WITHOUT_CLASSIFICATION	Editor editor = Globals.curEditor(); GraphModel gm = editor.getGraphModel(); LayerDiagram lay = ((LayerDiagram) editor.getLayerManager().getActiveLayer());
WITHOUT_CLASSIFICATION	Have we handled UML2 here?
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	Get all classifiers in all top level packages of all profiles
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	We got passed an unmodifiable List. Copy it and sort the result
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mouseReleased( java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mousePressed(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mouseClicked(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mouseEntered(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	Set up the property panels for UML elements:
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLExpressionModel2#setExpression(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLExpressionModel2#newExpression()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	Build up an array list of the heights of each label/component pair. Heights of zero indicate a proportional height.
WITHOUT_CLASSIFICATION	Make sure the component width isn't any greater than its maximum allowed width
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.Action#isEnabled()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel#getSelectedModelElement()
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLExpressionModel2#getExpression()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLExpressionModel2#setExpression(java.lang.Object)
WITHOUT_CLASSIFICATION	If we do not set it to null first, then we get a MDR DebugException:
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLExpressionModel2#newExpression()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel#addElement(java.lang.Object)
WITHOUT_CLASSIFICATION	@see javax.swing.ComboBoxModel#setSelectedItem(java.lang.Object)
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	This can throw an exception if the target has been deleted. We don't want to try locking the repository because this is called from the event delivery thread and could cause a deadlock. Instead catch the exception and leave the model empty.
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see javax.swing.DefaultListModel#contains(java.lang.Object)
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	we tried to remove a value
WITHOUT_CLASSIFICATION	Allow listening to other elements:
WITHOUT_CLASSIFICATION	Don't test changed element if it was deleted
WITHOUT_CLASSIFICATION	@see javax.swing.AbstractListModel#fireContentsChanged( Object, int, int)
WITHOUT_CLASSIFICATION	@see javax.swing.AbstractListModel#fireIntervalAdded( Object, int, int)
WITHOUT_CLASSIFICATION	@see javax.swing.AbstractListModel#fireIntervalRemoved( Object, int, int)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel2#getSelectedModelElement()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel2#propertyChange(java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	Do nothing by design.
WITHOUT_CLASSIFICATION	Do nothing by default.
WITHOUT_CLASSIFICATION	Allow null
WITHOUT_CLASSIFICATION	This is explained by WFR 2 of a StructuralFeature: The type of a StructuralFeature must be a Class, DataType, or Interface. @see org.argouml.uml.ui.UMLComboBoxModel#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel#buildModelList()
WITHOUT_CLASSIFICATION	restricting types for tagged values
WITHOUT_CLASSIFICATION	classifier is way too much in UML 2.x
WITHOUT_CLASSIFICATION	the minimum set of standard types
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel#getSelectedModelElement()
WITHOUT_CLASSIFICATION	Do nothing by default.
WITHOUT_CLASSIFICATION	@see java.beans.PropertyChangeListener#propertyChange(java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	keep them sorted
WITHOUT_CLASSIFICATION	We got passed an unmodifiable List. Copy it and sort the result
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLExpressionModel2#getExpression()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLExpressionModel2#setExpression(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLExpressionModel2#newExpression()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel2#getSelectedModelElement()
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed( java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#addOtherModelEventListeners(java.lang.Object)
WITHOUT_CLASSIFICATION	Make a copy of the modelelements:
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLPlainTextDocument#setProperty(java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLPlainTextDocument#getProperty()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLPlainTextDocument#setProperty(java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLPlainTextDocument#getProperty()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel2#isValidElement( java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel2#getSelectedModelElement()
WITHOUT_CLASSIFICATION	Add stereotypes submenu
WITHOUT_CLASSIFICATION	the method
WITHOUT_CLASSIFICATION	the selected operation
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildPopup(javax.swing.JPopupMenu, int)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see java.beans.PropertyChangeListener#propertyChange(java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#setTarget(java.lang.Object)
WITHOUT_CLASSIFICATION	make sure we know it when a classifier is added as a base
WITHOUT_CLASSIFICATION	make sure we know it when a classifier is added as a base
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel#getSelectedModelElement()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel#isValidElement(Object)
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see java.beans.PropertyChangeListener#propertyChange(java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel#buildModelList()
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel#getSelectedModelElement()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel#removeOtherModelEventListeners(java.lang.Object)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	base is already set to this assoc...
WITHOUT_CLASSIFICATION	This check is needed, otherwise the setbase() below gives an exception.
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	Just in case the existing selected element is from elsewhere make sure it is in the list
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	The selected value may be "" to clear the represented classifier.
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	private boolean mustRefresh;
WITHOUT_CLASSIFICATION	mustRefresh = true;
WITHOUT_CLASSIFICATION	This should not happen.
WITHOUT_CLASSIFICATION	if it has no language, then we assume it is not an instance of OpaqueExpression, so we leave it null and handle elsewhere
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLPlainTextDocument#getProperty()
WITHOUT_CLASSIFICATION	/ Build the field /
WITHOUT_CLASSIFICATION	/ Add field(s) to panel /
WITHOUT_CLASSIFICATION	click on the already selected value must not call setValue
WITHOUT_CLASSIFICATION	The 2 Radios have only one information.
WITHOUT_CLASSIFICATION	Update the model, and then notify
WITHOUT_CLASSIFICATION	When call by contructor : no one is selected
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	private boolean mustRefresh;
WITHOUT_CLASSIFICATION	mustRefresh = true;
WITHOUT_CLASSIFICATION	This should not happen.
WITHOUT_CLASSIFICATION	If we do not set it to null first, then we get a MDR DebugException:
WITHOUT_CLASSIFICATION	Expressions are DataTypes, not independent model elements be careful not to reuse them
WITHOUT_CLASSIFICATION	We need to to this otherwise there is no notification and diagram isn't change
WITHOUT_CLASSIFICATION	needed for notification
WITHOUT_CLASSIFICATION	if the control is a panel, add it
WITHOUT_CLASSIFICATION	To be really sure, let's add the operation that is linked to the action in the model, too - if it is not listed yet. We need this, incase an operation is moved out of the package, or maybe with imported XMI...
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel#getSelectedModelElement()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel#isValidElement(java.lang.Object)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLExpressionModel2#getExpression()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLExpressionModel2#setExpression(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLExpressionModel2#newExpression()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLExpressionModel2#getExpression()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLExpressionModel2#setExpression(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLExpressionModel2#newExpression()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel#buildModelList()
WITHOUT_CLASSIFICATION	fill the list with items
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel#getSelectedModelElement()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	in UML2, the target is already the "expression" (Opaque...)
WITHOUT_CLASSIFICATION	reuse Opaque..., just set it's attributes
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	Expressions are DataTypes, not independent model elements be careful not to reuse them
WITHOUT_CLASSIFICATION	make it stretch vertically
WITHOUT_CLASSIFICATION	@see javax.swing.event.DocumentListener#insertUpdate(javax.swing.event. DocumentEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLExpressionModel2#getExpression()
WITHOUT_CLASSIFICATION	If we do not set it to null first, then we get a MDR DebugException:
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLExpressionModel2#newExpression()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement( java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see javax.swing.event.DocumentListener#changedUpdate(javax.swing.event.DocumentEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.DocumentListener#removeUpdate(javax.swing.event.DocumentEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.DocumentListener#insertUpdate(javax.swing.event.DocumentEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see javax.swing.event.DocumentListener#changedUpdate(javax.swing.event.DocumentEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.DocumentListener#removeUpdate(javax.swing.event.DocumentEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.DocumentListener#insertUpdate(javax.swing.event.DocumentEvent)
WITHOUT_CLASSIFICATION	make it stretch vertically
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBox#doIt(ActionEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	p = new UMLValueSpecificationPanel(model, propertyName);
WITHOUT_CLASSIFICATION	MModelElement
WITHOUT_CLASSIFICATION	if not, it is a control and must be labeled...
WITHOUT_CLASSIFICATION	only association end has an aggregation option box
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	Create it [Here, OpaqueExpression which is the first choice] Note that if we edit the Initial value in the diagram (double clic) it was replaced by an OpaqueExpression
WITHOUT_CLASSIFICATION	Destroy it
WITHOUT_CLASSIFICATION	title = "" because already done for Optional
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel#getSelectedModelElement()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel#buildModelList()
WITHOUT_CLASSIFICATION	We got passed an unmodifiable List. Copy it and sort the result
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	Force the parent to redraw
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	Do not set buildingModel = false here, otherwise the action for selection is performed.
WITHOUT_CLASSIFICATION	Add new listeners:
WITHOUT_CLASSIFICATION	makes sure we can select 'none'
WITHOUT_CLASSIFICATION	TODO: For large lists, this is doing a linear search of literally thousands of elements
WITHOUT_CLASSIFICATION	TODO: Here too?
WITHOUT_CLASSIFICATION	Check against "" is needed for backward compatibility. Don't remove without checking subclasses and warning downstream developers - tfm - 20081211
WITHOUT_CLASSIFICATION	start of interval
WITHOUT_CLASSIFICATION	end of interval
WITHOUT_CLASSIFICATION	in middle of interval
WITHOUT_CLASSIFICATION	Allow listening to other elements:
WITHOUT_CLASSIFICATION	makes sure we can select 'none'
WITHOUT_CLASSIFICATION	Add new listeners:
WITHOUT_CLASSIFICATION	Don't try to test this if we're removing the element
WITHOUT_CLASSIFICATION	we tried to remove a value
WITHOUT_CLASSIFICATION	It would be better if we didn't need the container to get the target. This constructor can have zero parameters as soon as we improve targetChanged.
WITHOUT_CLASSIFICATION	Allow listening to other elements:
WITHOUT_CLASSIFICATION	@see javax.swing.ListModel#getElementAt(int)
WITHOUT_CLASSIFICATION	@see javax.swing.ListModel#getSize()
WITHOUT_CLASSIFICATION	catch callers attempting to use one without other
WITHOUT_CLASSIFICATION	@see javax.swing.ComboBoxModel#setSelectedItem(java.lang.Object)
WITHOUT_CLASSIFICATION	@see javax.swing.ComboBoxModel#getSelectedItem()
WITHOUT_CLASSIFICATION	@see javax.swing.AbstractListModel#fireContentsChanged( Object, int, int)
WITHOUT_CLASSIFICATION	@see javax.swing.AbstractListModel#fireIntervalAdded( Object, int, int)
WITHOUT_CLASSIFICATION	@see javax.swing.AbstractListModel#fireIntervalRemoved( Object, int, int)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	Do nothing by default.
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLPlainTextDocument#setProperty(java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLPlainTextDocument#getProperty()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see java.beans.PropertyChangeListener#propertyChange(java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	Mutators hold write lock & will deadlock if use is not thread safe
WITHOUT_CLASSIFICATION	@see javax.swing.text.Document#remove(int, int)
WITHOUT_CLASSIFICATION	Mutators hold write lock & will deadlock if use is not thread-safe
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel#getSelectedModelElement()
WITHOUT_CLASSIFICATION	Do nothing by design.
WITHOUT_CLASSIFICATION	NOTE: This may be called from a different thread, so we need to be careful of the threading restrictions imposed by AbstractDocument for mutators to be sure we don't deadlock.
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel#isValidElement(Object)
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	Mutators hold write lock & will deadlock if use is not thread safe
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLCheckBox#buildModel()
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	super(new LabelledLayout());
WITHOUT_CLASSIFICATION	c.insets = new Insets(1, 1, 1, 1);
WITHOUT_CLASSIFICATION	Get the list: OpaqueExpression, LiteralString,...
WITHOUT_CLASSIFICATION	By default, the first value of the combobox is selected.
WITHOUT_CLASSIFICATION	Get current InitialValue
WITHOUT_CLASSIFICATION	Select the Current type in the combobox
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLExpressionModel2#getExpression()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLExpressionModel2#setExpression(java.lang.Object)
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	default : 0 => OpaqueExpression set to 1 for test
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLExpressionModel2#newExpression()
WITHOUT_CLASSIFICATION	If we do not set it to null first, then we get a MDR DebugException:
WITHOUT_CLASSIFICATION	@see javax.swing.event.DocumentListener#removeUpdate(javax.swing.event.DocumentEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.DocumentListener#insertUpdate(javax.swing.event.DocumentEvent)
WITHOUT_CLASSIFICATION	Create the body and language Field
WITHOUT_CLASSIFICATION	Create other panel element
WITHOUT_CLASSIFICATION	create Panel containing the previous field
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel#buildModelList()
WITHOUT_CLASSIFICATION	Our comparator will throw an InvalidElementException if the old list contains deleted elements (eg after a new project is loaded) so remove all the old contents first
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel#getSelectedModelElement()
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed( java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel#getSelectedModelElement()
WITHOUT_CLASSIFICATION	make it stretch vertically
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	There are no composite states, so this will work:
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLPlainTextDocument#getProperty()
WITHOUT_CLASSIFICATION	@see java.beans.PropertyChangeListener#propertyChange(java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	Allow null
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel#getSelectedModelElement()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLPlainTextDocument#setProperty(java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLPlainTextDocument#getProperty()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see java.beans.PropertyChangeListener#propertyChange(java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#setTarget(java.lang.Object)
WITHOUT_CLASSIFICATION	make sure we know it when a classifier is added as a base
WITHOUT_CLASSIFICATION	make sure we know it when a classifier is added as a base
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel#getSelectedModelElement()
WITHOUT_CLASSIFICATION	make it stretch vertically
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel#buildModelList()
WITHOUT_CLASSIFICATION	Get all classifiers in our model TODO: We need the property panels to have some reference to the project they belong to instead of using deprecated functionality
WITHOUT_CLASSIFICATION	Get all classifiers in all top level packages of all profiles
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel#getSelectedModelElement()
WITHOUT_CLASSIFICATION	@see javax.swing.event.DocumentListener#changedUpdate(javax.swing.event.DocumentEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.DocumentListener#removeUpdate(javax.swing.event.DocumentEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel#getSelectedModelElement()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel#isValidElement(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel#isValidElement(Object)
WITHOUT_CLASSIFICATION	The selected value may be "" to clear the represented operation.
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLPlainTextDocument#setProperty(java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLPlainTextDocument#getProperty()
WITHOUT_CLASSIFICATION	ignored - we just skipped inserting it in our document
WITHOUT_CLASSIFICATION	Allow null
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel#buildModelList()
WITHOUT_CLASSIFICATION	Make sure it's parseable as an number
WITHOUT_CLASSIFICATION	@see javax.swing.ComboBoxEditor#setItem(java.lang.Object)
WITHOUT_CLASSIFICATION	we don't want to show some nasty gray background color, now do we?
WITHOUT_CLASSIFICATION	@see javax.swing.ComboBoxEditor#getEditorComponent()
WITHOUT_CLASSIFICATION	@see javax.swing.ComboBoxEditor#addActionListener(java.awt.event.ActionListener)
WITHOUT_CLASSIFICATION	@see javax.swing.ComboBoxEditor#removeActionListener(java.awt.event.ActionListener)
WITHOUT_CLASSIFICATION	@see javax.swing.ComboBoxEditor#selectAll()
WITHOUT_CLASSIFICATION	@see javax.swing.ComboBoxEditor#getItem()
WITHOUT_CLASSIFICATION	we don't want to show some nasty gray background color, now do we?
WITHOUT_CLASSIFICATION	we don't want to show some nasty gray background color, now do we?
WITHOUT_CLASSIFICATION	necessary to create distance between the textfield and the icon.
WITHOUT_CLASSIFICATION	necessary to create distance between the textfield and the icon.
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBox2#UMLComboBox2( UMLComboBoxModel, Action)
WITHOUT_CLASSIFICATION	next statement is necessary to update the textfield if the selection is equal to what was allready selected
WITHOUT_CLASSIFICATION	@see java.awt.event.FocusListener#focusGained(java.awt.event.FocusEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.ComboBoxEditor#setItem(java.lang.Object)
WITHOUT_CLASSIFICATION	@see javax.swing.ComboBoxEditor#getEditorComponent()
WITHOUT_CLASSIFICATION	@see javax.swing.ComboBoxEditor#addActionListener(java.awt.event.ActionListener)
WITHOUT_CLASSIFICATION	@see javax.swing.ComboBoxEditor#removeActionListener(java.awt.event.ActionListener)
WITHOUT_CLASSIFICATION	@see javax.swing.ComboBoxEditor#selectAll()
WITHOUT_CLASSIFICATION	@see javax.swing.ComboBoxEditor#getItem()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	Temporary until SimpleListModel is used for all
WITHOUT_CLASSIFICATION	Temporary until SimpleListModel is used for all
WITHOUT_CLASSIFICATION	Create popup tool if we have a single row
WITHOUT_CLASSIFICATION	Create add and remove buttons if needed first
WITHOUT_CLASSIFICATION	then any new buttons
WITHOUT_CLASSIFICATION	Pushing this to the end of the AWT thread seems to be the only way to get this to update correctly
WITHOUT_CLASSIFICATION	button action:
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mouseClicked(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mouseEntered(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mouseExited(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mousePressed(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	TODO: Probably really want to cancel editing ((FigTextEditor) focusOwner).cancelEditing();
WITHOUT_CLASSIFICATION	The 5 main component : 2 label, a panel for langage , a panel with button, a textarea
WITHOUT_CLASSIFICATION	Translator.localize("button.delete")
WITHOUT_CLASSIFICATION	Copy previous element
WITHOUT_CLASSIFICATION	Copy next element
WITHOUT_CLASSIFICATION	Translator.localize("button.move-up")
WITHOUT_CLASSIFICATION	Copy in memory the current
WITHOUT_CLASSIFICATION	Copy the previous value in the current
WITHOUT_CLASSIFICATION	Copy the current in the previous
WITHOUT_CLASSIFICATION	Copy in memory the current
WITHOUT_CLASSIFICATION	Copy the next value in the current
WITHOUT_CLASSIFICATION	Copy the current in the next
WITHOUT_CLASSIFICATION	Layout
WITHOUT_CLASSIFICATION	The 2 component: a textField and a list
WITHOUT_CLASSIFICATION	Layout
WITHOUT_CLASSIFICATION	Extract the icon that is used by the tree control for the current look and feel
WITHOUT_CLASSIFICATION	Add a new entry in the list and select it. Translator.localize("button.add") +
WITHOUT_CLASSIFICATION	necessary to create distance between the textfield and the icon.
WITHOUT_CLASSIFICATION	Eclipse UML2 implementation classes often start with "UML" $NON-NLS-1$
WITHOUT_CLASSIFICATION	Eclipse UML2 implementation classes end with "Impl" $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ Make sure we have a recognized file extension $NON-NLS-1$
WITHOUT_CLASSIFICATION	If the eUML.resources system property is defined then we are in a stand alone application, else we're in an Eclipse plug in. The eUML.resource should contain the path to the org.eclipse.uml2.uml.resource jar plugin. $NON-NLS-1$
WITHOUT_CLASSIFICATION	slope of the line we're finding the normal to is slope, and the normal is the negative reciprocal slope is (p1.y - p2.y) / (p1.x - p2.x) so recip is - (p1.x - p2.x) / (p1.y - p2.y)
WITHOUT_CLASSIFICATION	UML1.4 only
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mouseExited(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLExpressionModel2#getExpression()
WITHOUT_CLASSIFICATION	Set the child components to the heights in the array list calculating the height of any proportional component on the fly.
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.ActionSetMultiplicity#setSelectedItem( java.lang.Object, java.lang.Object)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	If we have a model but no list then build the list with preferred constructor. Eventually all lists should be built this way.
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see javax.swing.DefaultListModel#addElement(java.lang.Object)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent )
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#removeOtherModelEventListeners(java.lang.Object)
WITHOUT_CLASSIFICATION	@see java.beans.PropertyChangeListener#propertyChange( java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	If the component is a JLabel which has another component assigned then position/size the label and calculate the size of the registered component
WITHOUT_CLASSIFICATION	If the child component is resizable then we don't know it's actual size yet. It will be calculated later as a proportion of the available left over space. For now this is flagged as zero.
WITHOUT_CLASSIFICATION	If a preferred height is not given or is the same as the minimum height then fix the height of this row.
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel#getSelectedModelElement()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel#getSelectedModelElement()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLPlainTextDocument#setProperty(java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see javax.swing.event.DocumentListener#removeUpdate(javax.swing.event. DocumentEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLExpressionModel2#setExpression(java.lang.Object)
WITHOUT_CLASSIFICATION	We only have this here until we have stereotypes list on property panel
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see java.beans.PropertyChangeListener#propertyChange(java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	The property value has changed so rebuild our view. @see java.beans.PropertyChangeListener#propertyChange(java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.DocumentListener#changedUpdate(javax.swing.event.DocumentEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLPlainTextDocument#setProperty(java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel#isValidElement(java.lang.Object)
WITHOUT_CLASSIFICATION	So, we found a Classifier that is not a ClassifierInState. And at least one state has been selected. Well, let's correct that:
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.DocumentListener#insertUpdate(javax.swing.event.DocumentEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel#getSelectedModelElement()
WITHOUT_CLASSIFICATION	Not in UML1.4
WITHOUT_CLASSIFICATION	Not in UML1.4
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBox#UMLComboBox( UMLComboBoxModel, Action, boolean)
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mouseReleased(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	Layout
WITHOUT_CLASSIFICATION	Language has changed
WITHOUT_CLASSIFICATION	Translator.localize("button.move-down")
WITHOUT_CLASSIFICATION	Object icon = ResourceLoaderWrapper.lookupIcon(s); putValue(Action.NAME, Translator.localize(s)); putValue(Action.SMALL_ICON, icon); Set the tooltip string: putValue(Action.SHORT_DESCRIPTION, Translator.localize(s));
WITHOUT_CLASSIFICATION	MDR has a hardcoded printStackTrace on all exceptions, even if they're caught, which is unsightly, so we handle unknown elements ourselves rather than letting MDR throw an exception for us to catch. org/netbeans/lib/jmi/util/Logger.java This can be uses to disable logging. Default output is System.err setProperty("org.netbeans.lib.jmi.Logger.fileName", "") org.netbeans.mdr.Logger The property org.netbeans.lib.jmi.Logger controls the minimum severity level for logging
WITHOUT_CLASSIFICATION	Commit our transaction
WITHOUT_CLASSIFICATION	not in UML1.4
WITHOUT_CLASSIFICATION	Ignore any error. The transaction may already have been unwound as part of exception processing by MDR
WITHOUT_CLASSIFICATION	Give the resolver.getIdToObjectMap() entries priority over entries with the same UUID from resolver.getIdToObjectMaps() because entries in resolver.getIdToObjectMaps() are historic.
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getCollaborationsHelper()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getCommonBehaviorFactory()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getExtensionMechanismsHelper()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getMetaTypes()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getMessageSort()
WITHOUT_CLASSIFICATION	@see org.argouml.model.CommonBehaviorHelper#setReceiver(java.lang.Object, java.lang.Object)
WITHOUT_CLASSIFICATION	Nothing to do - we get all events automatically
WITHOUT_CLASSIFICATION	handles all children of relationship including extend and include which are not members of core
WITHOUT_CLASSIFICATION	@see org.argouml.model.UmlHelper#move(java.lang.Object, org.argouml.model.UmlHelper.Direction)
WITHOUT_CLASSIFICATION	Remember the system id of our root document so that we can write out profiles and linked models to a different file if requested
WITHOUT_CLASSIFICATION	For now just skip registering this and ignore the request, but the real issue is that MagicDraw serializes the same object in two different composition associations, first in the referencing file and second in the referenced file
WITHOUT_CLASSIFICATION	if we've found the module model, log it and place it in the map so we don't have to find it if we need it again.
WITHOUT_CLASSIFICATION	/ End AndroMDA Code /
WITHOUT_CLASSIFICATION	returns a List
WITHOUT_CLASSIFICATION	Simulates UML2 getting the aggregation from the opposite end
WITHOUT_CLASSIFICATION	find the bases of the connected classifierroles so that we can see what associations are between them. If there are bases then the associations between those bases form the possible bases. Otherwise the bases are formed by all associations in the namespace of the collaboration
WITHOUT_CLASSIFICATION	@see org.argouml.model.AbstractModelEventPump#addModelEventListener(java.beans.PropertyChangeListener, java.lang.Object, java.lang.String[])
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#critique(java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Poster#supports(org.argouml.cognitive.Decision)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Poster#getSupportedDecisions()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#addSupportedDecision(org.argouml.cognitive.Decision)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Poster#supports(org.argouml.cognitive.Goal)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Poster#getSupportedGoals()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#addSupportedGoal(org.argouml.cognitive.Goal)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Poster#containsKnowledgeType(java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#addKnowledgeType(java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Poster#expand(java.lang.String, ListSet)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Poster#getClarifier()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#isActive()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#isEnabled()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#toDoItem(java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedMetatypes()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Poster#supports(org.argouml.cognitive.Decision)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Poster#getSupportedDecisions()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Poster#supports(org.argouml.cognitive.Goal)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Poster#getSupportedGoals()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Poster#containsKnowledgeType(java.lang.String)
WITHOUT_CLASSIFICATION	Just returns the descr param. @see org.argouml.cognitive.Poster#expand(java.lang.String, ListSet)
WITHOUT_CLASSIFICATION	Get the generic clarifier for this designer/poster. @see org.argouml.cognitive.Poster#getClarifier()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Poster#snooze()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Poster#unsnooze()
WITHOUT_CLASSIFICATION	Does not do anything. @see org.argouml.cognitive.Poster#fixIt(org.argouml.cognitive.ToDoItem, java.lang.Object)
WITHOUT_CLASSIFICATION	Just returns false. @see org.argouml.cognitive.Poster#canFixIt(org.argouml.cognitive.ToDoItem)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Poster#supports(org.argouml.cognitive.Decision)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Poster#supports(org.argouml.cognitive.Goal)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Poster#containsKnowledgeType(java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Poster#expand(java.lang.String, org.argouml.cognitive.ListSet)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Poster#getClarifier()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Poster#fixIt(org.argouml.cognitive.ToDoItem, java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.ControlMech#isRelevant(org.argouml.cognitive.critics.Critic, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.ControlMech#isRelevant(org.argouml.cognitive.critics.Critic, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.ControlMech#isRelevant(org.argouml.cognitive.critics.Critic, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.ControlMech#isRelevant(org.argouml.cognitive.critics.Critic, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.ControlMech#isRelevant(org.argouml.cognitive.critics.Critic, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.ControlMech#isRelevant(org.argouml.cognitive.critics.Critic, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.ControlMech#isRelevant(org.argouml.cognitive.critics.Critic, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.ControlMech#isRelevant(org.argouml.cognitive.critics.Critic, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.ControlMech#isRelevant(org.argouml.cognitive.critics.Critic, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.ControlMech#isRelevant(org.argouml.cognitive.critics.Critic, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.ControlMech#isRelevant(org.argouml.cognitive.critics.Critic, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.ControlMech#isRelevant(org.argouml.cognitive.critics.Critic, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.TabTarget#getTarget()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.TabTarget#refresh()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.TabTarget#shouldBeEnabled(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetAdded(org.argouml.ui.targetmanager.TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetRemoved(org.argouml.ui.targetmanager.TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetSet(org.argouml.ui.targetmanager.TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ToDoListListener#toDoItemsChanged(org.argouml.cognitive.ToDoListEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ToDoListListener#toDoItemsAdded(org.argouml.cognitive.ToDoListEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ToDoListListener#toDoItemsRemoved(org.argouml.cognitive.ToDoListEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ToDoListListener#toDoListChanged(org.argouml.cognitive.ToDoListEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ToDoListListener#toDoItemsChanged(org.argouml.cognitive.ToDoListEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ToDoListListener#toDoItemsAdded(org.argouml.cognitive.ToDoListEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ToDoListListener#toDoItemsRemoved(org.argouml.cognitive.ToDoListEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ToDoListListener#toDoListChanged(org.argouml.cognitive.ToDoListEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ui.WizStep#setTarget(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ToDoListListener#toDoItemsChanged(org.argouml.cognitive.ToDoListEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ToDoListListener#toDoItemsAdded(org.argouml.cognitive.ToDoListEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ToDoListListener#toDoItemsRemoved(org.argouml.cognitive.ToDoListEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ToDoListListener#toDoListChanged(org.argouml.cognitive.ToDoListEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetAdded( TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetRemoved( TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetSet(TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.persistence.ProjectFilePersister#doLoad(java.io.File)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ToDoListListener#toDoItemsChanged(org.argouml.cognitive.ToDoListEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ToDoListListener#toDoItemsAdded(org.argouml.cognitive.ToDoListEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ToDoListListener#toDoItemsRemoved(org.argouml.cognitive.ToDoListEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ToDoListListener#toDoListChanged(org.argouml.cognitive.ToDoListEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ToDoListListener#toDoItemsChanged(org.argouml.cognitive.ToDoListEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ToDoListListener#toDoItemsAdded(org.argouml.cognitive.ToDoListEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ToDoListListener#toDoItemsRemoved(org.argouml.cognitive.ToDoListEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ToDoListListener#toDoListChanged(org.argouml.cognitive.ToDoListEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ToDoListListener#toDoItemsChanged(org.argouml.cognitive.ToDoListEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ToDoListListener#toDoItemsAdded(org.argouml.cognitive.ToDoListEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ToDoListListener#toDoItemsRemoved(org.argouml.cognitive.ToDoListEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ToDoListListener#toDoListChanged(org.argouml.cognitive.ToDoListEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ToDoListListener#toDoItemsChanged(org.argouml.cognitive.ToDoListEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ToDoListListener#toDoItemsAdded(org.argouml.cognitive.ToDoListEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ToDoListListener#toDoItemsRemoved(org.argouml.cognitive.ToDoListEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ToDoListListener#toDoListChanged(org.argouml.cognitive.ToDoListEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetAdded(org.argouml.ui.targetmanager.TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetRemoved(org.argouml.ui.targetmanager.TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetSet(org.argouml.ui.targetmanager.TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.application.events.ArgoGeneratorEventListener#generatorChanged(org.argouml.application.events.ArgoGeneratorEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.application.events.ArgoGeneratorEventListener#generatorAdded(org.argouml.application.events.ArgoGeneratorEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.application.events.ArgoGeneratorEventListener#generatorRemoved(org.argouml.application.events.ArgoGeneratorEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.GUISettingsTabInterface#handleResetToDefault()
WITHOUT_CLASSIFICATION	@see org.argouml.notation.NotationName#getConfigurationValue()
WITHOUT_CLASSIFICATION	@see org.argouml.notation.NotationName#sameNotationAs(org.argouml.notation.NotationName)
WITHOUT_CLASSIFICATION	Add an element listener and remember the registration. @param element element to listen for changes on @see org.argouml.model.ModelEventPump#addModelEventListener(PropertyChangeListener, Object, String)
WITHOUT_CLASSIFICATION	Utility function to add a listener for a given property name and remember the registration. @param element element to listen for changes on @param property name of property to listen for changes of @see org.argouml.model.ModelEventPump#addModelEventListener(PropertyChangeListener, Object, String)
WITHOUT_CLASSIFICATION	Utility function to add a listener for an array of property names and remember the registration. @param element element to listen for changes on @param property array of property names (Strings) to listen for changes of @see org.argouml.model.ModelEventPump#addModelEventListener(PropertyChangeListener, Object, String)
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.NotationProvider#getParsingHelp()
WITHOUT_CLASSIFICATION	Utility function to remove an element listener and adapt the remembered list of registration. @param element element to listen for changes on @see org.argouml.model.ModelEventPump#addModelEventListener(PropertyChangeListener, Object, String)
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.NotationProvider#updateListener(java.beans.PropertyChangeListener, java.lang.Object, java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.NotationProvider#getParsingHelp()
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.NotationProvider#parse(java.lang.Object, java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.NotationProvider#getParsingHelp()
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.NotationProvider#parse(java.lang.Object, java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.NotationProvider#parse( java.lang.Object, java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.NotationProvider#getParsingHelp()
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.NotationProvider#parse(java.lang.Object, java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.NotationProvider#getParsingHelp()
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.NotationProvider#getParsingHelp()
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.NotationProvider#parse(java.lang.Object, java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.NotationProvider#parse(java.lang.Object, java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.NotationProvider#getParsingHelp()
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.NotationProvider#parse(java.lang.Object, java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.NotationProvider#getParsingHelp()
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.NotationProvider#getParsingHelp()
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.NotationProvider#parse(java.lang.Object, java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.NotationProvider#parse(java.lang.Object, java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.NotationProvider#getParsingHelp()
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.NotationProvider#getParsingHelp()
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.NotationProvider#parse(java.lang.Object, java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.NotationProvider#getParsingHelp()
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.NotationProvider#getParsingHelp()
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.NotationProvider#parse(java.lang.Object, java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.NotationProvider#parse(java.lang.Object, java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.NotationProvider#getParsingHelp()
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.NotationProvider#getParsingHelp()
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.NotationProvider#parse(java.lang.Object, java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.NotationProvider#parse(java.lang.Object, java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.NotationProvider#getParsingHelp()
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.NotationProvider#parse(java.lang.Object, java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.NotationProvider#getParsingHelp()
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.NotationProvider#parse(java.lang.Object, java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.notation.NotationProvider#parse(java.lang.Object, java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.notation.NotationProvider#getParsingHelp()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.notation.NotationProvider#parse(java.lang.Object, java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.notation.NotationProvider#getParsingHelp()
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.NotationProvider#getParsingHelp()
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.NotationProvider#parse(java.lang.Object, java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.NotationProvider#parse(java.lang.Object, java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.NotationProvider#getParsingHelp()
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.NotationProvider#getParsingHelp()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.GUISettingsTabInterface#handleSettingsTabRefresh()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.GUISettingsTabInterface#handleSettingsTabSave()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.GUISettingsTabInterface#handleSettingsTabCancel()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.GUISettingsTabInterface#handleResetToDefault()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.GUISettingsTabInterface#getTabKey()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.GUISettingsTabInterface#getTabPanel()
WITHOUT_CLASSIFICATION	@see org.argouml.application.events.ArgoNotationEventListener#notationChanged(org.argouml.application.events.ArgoNotationEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.application.events.ArgoNotationEventListener#notationAdded(org.argouml.application.events.ArgoNotationEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.application.events.ArgoNotationEventListener#notationRemoved(org.argouml.application.events.ArgoNotationEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.application.events.ArgoNotationEventListener#notationProviderAdded(org.argouml.application.events.ArgoNotationEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.application.events.ArgoNotationEventListener#notationProviderRemoved(org.argouml.application.events.ArgoNotationEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.persistence.SAXParserBase#handleStartElement( org.argouml.persistence.XMLElement)
WITHOUT_CLASSIFICATION	@see org.argouml.persistence.SAXParserBase#handleEndElement( org.argouml.persistence.XMLElement)
WITHOUT_CLASSIFICATION	@see org.argouml.persistence.SAXParserBase#isElementOfInterest(String)
WITHOUT_CLASSIFICATION	@see org.argouml.persistence.MemberFilePersister#getMainTag()
WITHOUT_CLASSIFICATION	@see org.argouml.persistence.AbstractFilePersister#getExtension()
WITHOUT_CLASSIFICATION	@see org.argouml.persistence.AbstractFilePersister#getDesc()
WITHOUT_CLASSIFICATION	@see org.argouml.persistence.XmiFilePersister#isSaveEnabled()
WITHOUT_CLASSIFICATION	@see org.argouml.persistence.MemberFilePersister#getMainTag()
WITHOUT_CLASSIFICATION	@see org.argouml.persistence.AbstractFilePersister#getExtension()
WITHOUT_CLASSIFICATION	@see org.argouml.persistence.AbstractFilePersister#getDesc()
WITHOUT_CLASSIFICATION	@see org.argouml.persistence.AbstractFilePersister#isSaveEnabled()
WITHOUT_CLASSIFICATION	@see org.argouml.persistence.ProjectFilePersister#doLoad(java.io.File)
WITHOUT_CLASSIFICATION	@see org.argouml.persistence.XMLTokenTableBase#setupTokens()
WITHOUT_CLASSIFICATION	@see org.argouml.persistence.MemberFilePersister#getMainTag()
WITHOUT_CLASSIFICATION	@see org.argouml.persistence.MemberFilePersister#load(org.argouml.kernel.Project, java.io.InputStream)
WITHOUT_CLASSIFICATION	@see org.argouml.persistence.MemberFilePersister#save(org.argouml.kernel.ProjectMember, java.io.OutputStream)
WITHOUT_CLASSIFICATION	@see org.argouml.persistence.AbstractFilePersister#getExtension()
WITHOUT_CLASSIFICATION	@see org.argouml.persistence.AbstractFilePersister#getDesc()
WITHOUT_CLASSIFICATION	@see org.argouml.persistence.ProjectFilePersister#doLoad(java.io.File)
WITHOUT_CLASSIFICATION	@see org.argouml.persistence.AbstractFilePersister#getExtension()
WITHOUT_CLASSIFICATION	@see org.argouml.persistence.XMLTokenTableBase#setupTokens()
WITHOUT_CLASSIFICATION	@see org.argouml.persistence.AbstractFilePersister#getExtension()
WITHOUT_CLASSIFICATION	@see org.argouml.persistence.AbstractFilePersister#getDesc()
WITHOUT_CLASSIFICATION	@see org.argouml.persistence.AbstractFilePersister#isSaveEnabled()
WITHOUT_CLASSIFICATION	@see org.argouml.persistence.AbstractFilePersister#getDesc()
WITHOUT_CLASSIFICATION	@see org.argouml.persistence.AbstractFilePersister#isSaveEnabled()
WITHOUT_CLASSIFICATION	@see org.argouml.persistence.ProjectFilePersister#doLoad(java.io.File)
WITHOUT_CLASSIFICATION	@see org.argouml.profile.ProfileManager#lookForRegisteredProfile(java.lang.String)
WITHOUT_CLASSIFICATION	@param pc @see org.argouml.profile.ProfileManager#applyConfiguration(org.argouml.kernel.ProfileConfiguration)
WITHOUT_CLASSIFICATION	@see org.argouml.profile.internal.ocl.ModelInterpreter#invokeFeature(java.util.HashMap, java.lang.Object, java.lang.String, java.lang.String, java.lang.Object[])
WITHOUT_CLASSIFICATION	@see org.argouml.profile.internal.ocl.ModelInterpreter#getBuiltInSymbol(java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Critic#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2(java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.profile.internal.ocl.OclExpressionEvaluator#evaluate(java.util.HashMap, org.argouml.profile.internal.ocl.ModelInterpreter, java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.profile.internal.ocl.ModelInterpreter#invokeFeature(java.util.HashMap, java.lang.Object, java.lang.String, java.lang.String, java.lang.Object[])
WITHOUT_CLASSIFICATION	@see org.argouml.profile.internal.ocl.ModelInterpreter#getBuiltInSymbol(java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.profile.internal.ocl.uml14.Bag#count(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.application.api.ProgressMonitor#setMaximumProgress(int)
WITHOUT_CLASSIFICATION	@see org.argouml.profile.internal.ocl.ModelInterpreter#getBuiltInSymbol(java.lang.String)
WITHOUT_CLASSIFICATION	Returns the target of this tab. @see org.argouml.ui.TabTarget#getTarget()
WITHOUT_CLASSIFICATION	Refresh the text of the tab. @see org.argouml.ui.TabTarget#refresh()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetAdded(org.argouml.ui.targetmanager.TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetRemoved(org.argouml.ui.targetmanager.TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetSet(org.argouml.ui.targetmanager.TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.GUISettingsTabInterface#handleResetToDefault()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.GUISettingsTabInterface#handleResetToDefault()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.GUISettingsTabInterface#handleSettingsTabRefresh()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.GUISettingsTabInterface#handleSettingsTabSave()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.GUISettingsTabInterface#handleSettingsTabCancel()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.GUISettingsTabInterface#handleResetToDefault()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.GUISettingsTabInterface#getTabKey()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.GUISettingsTabInterface#getTabPanel()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.AbstractArgoJPanel#spawn()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.TabTarget#setTarget(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.TabTarget#getTarget()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.TabTarget#refresh()
WITHOUT_CLASSIFICATION	Style panels only apply when a Fig is selected. @see org.argouml.ui.TabTarget#shouldBeEnabled(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetAdded( TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetRemoved( TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetSet(TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetAdded(org.argouml.ui.targetmanager.TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetRemoved(org.argouml.ui.targetmanager.TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetSet(org.argouml.ui.targetmanager.TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.GUISettingsTabInterface#handleResetToDefault()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.GUISettingsTabInterface#handleResetToDefault()
WITHOUT_CLASSIFICATION	Report a progress to the ProgressMonitor window. @see org.argouml.persistence.ProgressListener#progress(org.argouml.persistence.ProgressEvent)
WITHOUT_CLASSIFICATION	Report a progress to the ProgressMonitor window. @see org.argouml.application.api.ProgressMonitor#updateProgress(int)
WITHOUT_CLASSIFICATION	@see org.argouml.application.api.ProgressMonitor#isCanceled()
WITHOUT_CLASSIFICATION	@see org.argouml.application.api.ProgressMonitor#close()
WITHOUT_CLASSIFICATION	@see org.argouml.application.api.ProgressMonitor#notifyMessage(java.lang.String, java.lang.String, java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.application.api.ProgressMonitor#notifyNullAction()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.TabTarget#refresh()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.TabTarget#refresh()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetAdded(org.argouml.ui.targetmanager.TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetRemoved(org.argouml.ui.targetmanager.TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetSet(org.argouml.ui.targetmanager.TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetAdded( org.argouml.ui.targetmanager.TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetRemoved( org.argouml.ui.targetmanager.TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetSet( org.argouml.ui.targetmanager.TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.GUISettingsTabInterface#handleResetToDefault()
WITHOUT_CLASSIFICATION	@see org.argouml.application.api.CommandLineInterface#doCommand(java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.GUISettingsTabInterface#handleResetToDefault()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.GUISettingsTabInterface#handleSettingsTabCancel()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.GUISettingsTabInterface#handleSettingsTabRefresh()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.GUISettingsTabInterface#handleSettingsTabSave()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.PerspectiveManagerListener#addPerspective(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.PerspectiveManagerListener#removePerspective(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetAdded( org.argouml.ui.targetmanager.TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetRemoved( org.argouml.ui.targetmanager.TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetSet( org.argouml.ui.targetmanager.TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.TreeModelUMLEventListener#modelElementChanged(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.TreeModelUMLEventListener#modelElementAdded(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.TreeModelUMLEventListener#modelElementRemoved(java.lang.Object)
WITHOUT_CLASSIFICATION	the model structure has changed significantly, eg a new project. @see org.argouml.ui.explorer.TreeModelUMLEventListener#structureChanged()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.AbstractPerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.AbstractPerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.AbstractPerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.AbstractPerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren( java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies( java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren( java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies( java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.AbstractPerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.AbstractPerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	NOTE: No longer a separate type in UML 2.1
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.WeakExplorerNode#subsumes(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.WeakExplorerNode#subsumes(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren( java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies( java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.AbstractPerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.AbstractPerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.WeakExplorerNode#subsumes(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren( java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies( java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren( java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies( java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren( java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies( java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.WeakExplorerNode#subsumes(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.AbstractPerspectiveRule#getChildren( java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.AbstractPerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies( java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren( java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies( java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren( java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies( java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.WeakExplorerNode#subsumes(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.WeakExplorerNode#subsumes(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren( java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies( java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.AbstractPerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.AbstractPerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.kernel.AbstractProjectMember#getType()
WITHOUT_CLASSIFICATION	@see org.argouml.kernel.AbstractProjectMember#getZipFileExtension()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ToDoItem#deselect()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ToDoItem#select()
WITHOUT_CLASSIFICATION	@see org.argouml.kernel.AbstractProjectMember#getType()
WITHOUT_CLASSIFICATION	@see org.argouml.kernel.AbstractProjectMember#getZipFileExtension()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.checklist.CheckItem#expand(java.lang.String, java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Poster#getClarifier()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#initWizard( org.argouml.cognitive.ui.Wizard)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#getWizardClass(org.argouml.cognitive.ToDoItem)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2(java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#toDoItem( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.AbstractCrUnconventionalName#computeSuggestion(java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Poster#getClarifier()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Poster#stillValid( org.argouml.cognitive.ToDoItem, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#initWizard( org.argouml.cognitive.ui.Wizard)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#getWizardClass(org.argouml.cognitive.ToDoItem)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#toDoItem( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Poster#stillValid( org.argouml.cognitive.ToDoItem, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.Clarifier#setFig(org.tigris.gef.presentation.Fig)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.Clarifier#setToDoItem(org.argouml.cognitive.ToDoItem)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.Clarifier#hit(int, int)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.Clarifier#setFig(org.tigris.gef.presentation.Fig)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.Clarifier#setToDoItem(org.argouml.cognitive.ToDoItem)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.Clarifier#hit(int, int)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#toDoItem( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Poster#stillValid( org.argouml.cognitive.ToDoItem, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Poster#getClarifier()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#initWizard( org.argouml.cognitive.ui.Wizard)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#getWizardClass(org.argouml.cognitive.ToDoItem)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#predicate( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#toDoItem(Object, Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#toDoItem( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Poster#stillValid( org.argouml.cognitive.ToDoItem, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.UMLWizard#getNumSteps()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.WizMEName#makePanel(int)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.WizMEName#doAction(int)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#toDoItem( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Poster#stillValid( org.argouml.cognitive.ToDoItem, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Poster#getClarifier()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#initWizard( org.argouml.cognitive.ui.Wizard)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.AbstractCrUnconventionalName#computeSuggestion(java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#getWizardClass(org.argouml.cognitive.ToDoItem)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2(java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#toDoItem( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Poster#stillValid( org.argouml.cognitive.ToDoItem, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Poster#getClarifier()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#initWizard( org.argouml.cognitive.ui.Wizard)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#getWizardClass(org.argouml.cognitive.ToDoItem)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#toDoItem( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Poster#stillValid( org.argouml.cognitive.ToDoItem, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#initWizard( org.argouml.cognitive.ui.Wizard)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#getWizardClass(org.argouml.cognitive.ToDoItem)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ui.Wizard#doAction(int)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Poster#getClarifier()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#getWizardClass(org.argouml.cognitive.ToDoItem)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#initWizard( org.argouml.cognitive.ui.Wizard)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#getWizardClass(org.argouml.cognitive.ToDoItem)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Poster#getClarifier()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#initWizard( org.argouml.cognitive.ui.Wizard)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.AbstractCrUnconventionalName#computeSuggestion(java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#getWizardClass(org.argouml.cognitive.ToDoItem)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Poster#getClarifier()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2(java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedMetatypes()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#toDoItem(java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Poster#stillValid( org.argouml.cognitive.ToDoItem, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2(java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Poster#getClarifier()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#initWizard( org.argouml.cognitive.ui.Wizard)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#getWizardClass(org.argouml.cognitive.ToDoItem)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#toDoItem( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Poster#stillValid( org.argouml.cognitive.ToDoItem, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.profile.Profile#getProfileIdentifier()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Poster#getClarifier()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#initWizard( org.argouml.cognitive.ui.Wizard)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#getWizardClass(org.argouml.cognitive.ToDoItem)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#toDoItem( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Poster#stillValid( org.argouml.cognitive.ToDoItem, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#toDoItem( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Poster#stillValid( org.argouml.cognitive.ToDoItem, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#toDoItem( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Poster#stillValid( org.argouml.cognitive.ToDoItem, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#toDoItem( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Poster#stillValid( org.argouml.cognitive.ToDoItem, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#initWizard( org.argouml.cognitive.ui.Wizard)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.AbstractCrUnconventionalName#computeSuggestion(java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#getWizardClass(org.argouml.cognitive.ToDoItem)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#toDoItem(java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Poster#stillValid( org.argouml.cognitive.ToDoItem, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2(java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2(java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedMetatypes()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#getWizardClass(org.argouml.cognitive.ToDoItem)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#toDoItem( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Poster#stillValid( org.argouml.cognitive.ToDoItem, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ui.Wizard#doAction(int)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ui.Wizard#makePanel(int)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#toDoItem(java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Poster#stillValid( org.argouml.cognitive.ToDoItem, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Poster#getClarifier()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ui.Wizard#canFinish()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#toDoItem( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Poster#stillValid( org.argouml.cognitive.ToDoItem, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.UMLWizard#setSuggestion(java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ui.Wizard#doAction(int)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ui.Wizard#getNumSteps()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Poster#getClarifier()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#initWizard( org.argouml.cognitive.ui.Wizard)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#getWizardClass(org.argouml.cognitive.ToDoItem)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#toDoItem( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Poster#stillValid( org.argouml.cognitive.ToDoItem, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ui.Wizard#makePanel(int)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ui.Wizard#doAction(int)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#toDoItem(java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Poster#stillValid( org.argouml.cognitive.ToDoItem, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ui.Wizard#getNumSteps()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ui.Wizard#makePanel(int)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ui.Wizard#doAction(int)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ui.Wizard#canGoNext()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ui.Wizard#canFinish()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#toDoItem( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Poster#stillValid( org.argouml.cognitive.ToDoItem, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2(java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2(java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ui.Wizard#makePanel(int)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ui.Wizard#doAction(int)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2(java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#toDoItem(java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Poster#stillValid( org.argouml.cognitive.ToDoItem, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Poster#getClarifier()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#initWizard( org.argouml.cognitive.ui.Wizard)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#getWizardClass(org.argouml.cognitive.ToDoItem)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#toDoItem(java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Poster#stillValid( org.argouml.cognitive.ToDoItem, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#getWizardClass(org.argouml.cognitive.ToDoItem)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.Clarifier#setFig(org.tigris.gef.presentation.Fig)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.Clarifier#setToDoItem(org.argouml.cognitive.ToDoItem)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.Clarifier#hit(int, int)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#toDoItem( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Poster#stillValid( org.argouml.cognitive.ToDoItem, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2(java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ui.Wizard#doAction(int)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ui.Wizard#makePanel(int)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2(java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#toDoItem( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Poster#stillValid( org.argouml.cognitive.ToDoItem, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ui.Wizard#getNumSteps()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ui.Wizard#makePanel(int)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ui.Wizard#canFinish()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ui.Wizard#doAction(int)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#toDoItem( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Poster#stillValid( org.argouml.cognitive.ToDoItem, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Poster#getClarifier()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#initWizard( org.argouml.cognitive.ui.Wizard)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#getWizardClass(org.argouml.cognitive.ToDoItem)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.kernel.AbstractProjectMember#getType()
WITHOUT_CLASSIFICATION	@see org.argouml.kernel.AbstractProjectMember#getZipFileExtension()
WITHOUT_CLASSIFICATION	@see org.argouml.kernel.ProjectMember#repair()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.layout.Layouter#add(org.argouml.uml.diagram.layout.LayoutedObject)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.layout.Layouter#remove(org.argouml.uml.diagram.layout.LayoutedObject)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.layout.Layouter#getObjects()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.layout.Layouter#getObject(int)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.layout.Layouter#layout()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.UMLDiagram#getLabelName()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.UMLDiagram#getDependentElement()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.layout.Layouter#getMinimumDiagramSize()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.UMLDiagram#propertyChange(java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.UMLDiagram#getOwner()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.UMLDiagram#isRelocationAllowed(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.UMLDiagram#relocate(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.activity.ui.FigActionState#getNotationProviderType()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.state.ui.FigStateVertex#makeSelection()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigNodeModelElement#initNotationProviders(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigNodeModelElement#renderingChanged()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigNodeModelElement#textEdited(org.tigris.gef.presentation.FigText)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigNodeModelElement#textEditStarted(org.tigris.gef.presentation.FigText)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigNodeModelElement#modelChanged(java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigNodeModelElement#updateListeners(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigNodeModelElement#updateNameText()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigNodeModelElement#clone()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigNodeModelElement#addEnclosedFig(org.tigris.gef.presentation.Fig)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.activity.ui.SelectionActionState#getNewNodeType(int)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigNodeModelElement#modelChanged(java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.UMLDiagram#getLabelName()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.UMLDiagram#isRelocationAllowed(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.UMLDiagram#relocate(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigEdgeModelElement#getNotationProviderType()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.UMLDiagram#getUmlActions()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.UMLDiagram#getLabelName()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.UMLDiagram#isRelocationAllowed(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.UMLDiagram#relocate(java.lang.Object)
WITHOUT_CLASSIFICATION	If the new encloser is null, and the old one is a Component, then the "enclosed" Fig has been moved on the diagram. This causes the model to be adapted as follows: remove the elementResidence between the "enclosed" and the oldEncloser. @see org.argouml.ui.ArgoDiagram#changeFigEncloser(org.tigris.gef.presentation.FigNode, org.tigris.gef.presentation.FigNode, org.tigris.gef.presentation.FigNode)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigNodeModelElement#getNotationProviderType()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigNodeModelElement#updateListeners(java.lang.Object, java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.UMLMutableGraphSupport#isRemoveFromDiagramAllowed(Collection)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.state.ui.FigHistoryState#getH()
WITHOUT_CLASSIFICATION	The Transition has a name text box. It contains: <ul> <li>The event-signature <li>The guard condition between [] <li>The action expression </ul><p> The content of the text box is generated by its own notationProvider. @see org.argouml.uml.diagram.ui.FigEdgeModelElement#getNotationProviderType()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigEdgeModelElement#getDestination()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigEdgeModelElement#getSource()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.state.ui.FigState#getInitialHeight()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.state.ui.FigState#getInitialWidth()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.state.ui.FigState#getInitialX()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.state.ui.FigState#getInitialY()
WITHOUT_CLASSIFICATION	Update the text labels. @see org.argouml.uml.diagram.ui.FigNodeModelElement#modelChanged(java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	Update the text labels and listeners. @see org.argouml.uml.diagram.ui.FigNodeModelElement#modelChanged(java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigNodeModelElement#updateListeners(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.state.ui.FigState#getInitialHeight()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.state.ui.FigState#getInitialWidth()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.state.ui.FigState#getInitialX()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.state.ui.FigState#getInitialY()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.state.ui.FigStateVertex#initNotationProviders(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigNodeModelElement#removeFromDiagramImpl()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigNodeModelElement#renderingChanged()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigNodeModelElement#textEditStarted(org.tigris.gef.presentation.FigText)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigNodeModelElement#textEdited(org.tigris.gef.presentation.FigText)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigNodeModelElement#modelChanged(java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigNodeModelElement#renderingChanged()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.state.ui.FigState#getInitialHeight()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.state.ui.FigState#getInitialWidth()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.state.ui.FigState#getInitialX()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.state.ui.FigState#getInitialY()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.state.ui.FigState#getInitialHeight()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.state.ui.FigState#getInitialWidth()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.state.ui.FigState#getInitialX()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.state.ui.FigState#getInitialY()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.state.ui.FigHistoryState#getH()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.UMLDiagram#propertyChange(java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.UMLDiagram#getLabelName()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.UMLDiagram#getDependentElement()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.UMLDiagram#isRelocationAllowed(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.UMLDiagram#relocate(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.layout.LayoutedEdge#layout()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.static_structure.layout.ClassdiagramNode#getTypeOrderNumer()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.static_structure.layout.ClassdiagramNode#calculateWeight()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.static_structure.layout.ClassdiagramNode#getRank()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.static_structure.layout.ClassdiagramNode#getWeight()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.static_structure.layout.ClassdiagramNode#isStandalone()
WITHOUT_CLASSIFICATION	Nothing is editable, since a Link takes its identity from the Association. @see org.argouml.uml.diagram.ui.FigEdgeModelElement#canEdit( org.tigris.gef.presentation.Fig)
WITHOUT_CLASSIFICATION	Listen also to the association, of which the link is an instantiation, since we want to update the rendering when the association name changes. @see org.argouml.uml.diagram.ui.FigEdgeModelElement#updateListeners( java.lang.Object, java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigEdgeModelElement#getDestination()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigEdgeModelElement#getSource()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.UMLDiagram#setNamespace(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.UMLDiagram#getUmlActions()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.UMLDiagram#getLabelName()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.UMLDiagram#isRelocationAllowed(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.UMLDiagram#relocate(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigNodeModelElement#renderingChanged()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigNodeModelElement#updateStereotypeText()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigNodeModelElement#textEditStarted(org.tigris.gef.presentation.FigText)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.reveng.ImportSettings#getImportLevel()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.StereotypeContainer#isStereotypeVisible()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.StereotypeContainer#setStereotypeVisible(boolean)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.VisibilityContainer#isVisibilityVisible()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.VisibilityContainer#setVisibilityVisible(boolean)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.TabTarget#refresh()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.TabTarget#refresh()
WITHOUT_CLASSIFICATION	@see org.argouml.kernel.DelayedVChangeListener#delayedVetoableChange(java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigNodeModelElement#textEdited(org.tigris.gef.presentation.FigText)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigNodeModelElement#textEditStarted(org.tigris.gef.presentation.FigText)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigNodeModelElement#updateStereotypeText()
WITHOUT_CLASSIFICATION	Only refresh the tab if the bounds propertyChange event arrives. @see org.argouml.ui.StylePanel#refresh(java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.TabTarget#refresh()
WITHOUT_CLASSIFICATION	Listen for a RemoveAssociationEvent between the comment and the annotated element. When recieved delete the CommentEdge and this FigEdgeNote. @see org.argouml.uml.diagram.ui.FigEdgeModelElement#modelChanged(java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigSingleLineText#removeFromDiagram()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigSingleLineText#propertyChange(java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigSingleLineText#removeFromDiagram()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigSingleLineText#propertyChange(java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.AbstractActionCheckBoxMenuItem#toggleValueOfTarget(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.AbstractActionCheckBoxMenuItem#valueOfTarget(java.lang.Object)
WITHOUT_CLASSIFICATION	If we're drawing to an edge then only allow if the start is a comment @see org.argouml.uml.diagram.ui.ModeCreateGraphEdge#isConnectionValid(org.tigris.gef.presentation.Fig, org.tigris.gef.presentation.Fig)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.TabTarget#setTarget(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.TabTarget#getTarget()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.TabTarget#refresh()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.TabTarget#shouldBeEnabled(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetAdded(org.argouml.ui.targetmanager.TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetRemoved(org.argouml.ui.targetmanager.TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetSet(org.argouml.ui.targetmanager.TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigEdgeModelElement#canEdit(org.tigris.gef.presentation.Fig)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigEdgeModelElement#modelChanged(java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetAdded(org.argouml.ui.targetmanager.TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetRemoved(org.argouml.ui.targetmanager.TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetSet(org.argouml.ui.targetmanager.TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.StylePanelFig#setTargetBBox()
WITHOUT_CLASSIFICATION	Only refresh the tab if the bounds propertyChange event arrives. @see org.argouml.ui.StylePanel#refresh(java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.StylePanelFig#refresh()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.TabTarget#refresh()
WITHOUT_CLASSIFICATION	If we're drawing to an edge then only allow if the start is a comment @see org.argouml.uml.diagram.ui.ModeCreateGraphEdge#isConnectionValid(org.tigris.gef.presentation.Fig, org.tigris.gef.presentation.Fig)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigEditableCompartment#getUmlCollection()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigEditableCompartment#getNotationType()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.AbstractActionRadioMenuItem#toggleValueOfTarget(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.GUISettingsTabInterface#handleSettingsTabRefresh()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.GUISettingsTabInterface#handleSettingsTabSave()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.GUISettingsTabInterface#handleSettingsTabCancel()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.GUISettingsTabInterface#handleResetToDefault()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.GUISettingsTabInterface#getTabKey()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.GUISettingsTabInterface#getTabPanel()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.AbstractActionRadioMenuItem#toggleValueOfTarget(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.Relocatable#isRelocationAllowed(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.Relocatable#relocate(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.AbstractActionCheckBoxMenuItem#toggleValueOfTarget(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.AbstractActionCheckBoxMenuItem#valueOfTarget(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.AbstractActionNavigate#navigateTo(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.AbstractActionNavigate#navigateTo(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.TabTarget#getTarget()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.TabTarget#refresh()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.TabTarget#shouldBeEnabled(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetAdded( TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetRemoved( TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetSet( org.argouml.ui.targetmanager.TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigEditableCompartment#getUmlCollection()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigEditableCompartment#getNotationType()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigEdgeModelElement#updateListeners(java.lang.Object, java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigEdgeModelElement#getNotationProviderType()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.reveng.ImportSettings#getInputSourceEncoding()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigEdgeModelElement#textEdited(org.tigris.gef.presentation.FigText)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigEdgeModelElement#textEditStarted(org.tigris.gef.presentation.FigText)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.AbstractActionCheckBoxMenuItem#toggleValueOfTarget(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.AbstractActionCheckBoxMenuItem#valueOfTarget(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.AbstractActionRadioMenuItem#toggleValueOfTarget(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigEdgeModelElement#getNotationProviderType()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigEdgeModelElement#updateListeners(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigEdgeModelElement#textEdited(org.tigris.gef.presentation.FigText)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigEdgeModelElement#textEditStarted(org.tigris.gef.presentation.FigText)
WITHOUT_CLASSIFICATION	@see org.argouml.kernel.DelayedVChangeListener#delayedVetoableChange(java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.PathContainer#isPathVisible()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.PathContainer#setPathVisible(boolean)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.AbstractActionRadioMenuItem#toggleValueOfTarget(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigEdgeModelElement#canEdit(org.tigris.gef.presentation.Fig)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigSingleLineText#removeFromDiagram()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigNodeModelElement#getNotationProviderType()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigNodeModelElement#updateListeners( java.lang.Object, java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigNodeModelElement#renderingChanged()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigEdgeModelElement#getNameFig()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigEdgeModelElement#getNameBounds()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigEditableCompartment#getUmlCollection()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigEditableCompartment#getNotationType()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigEdgeModelElement#canEdit(org.tigris.gef.presentation.Fig)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigEdgeModelElement#modelChanged(java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigEdgeModelElement#updateListeners(java.lang.Object, java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.kernel.DelayedVChangeListener#delayedVetoableChange(java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigEdgeModelElement#updateListeners(java.lang.Object, java.lang.Object)
WITHOUT_CLASSIFICATION	The only thing we need to deal with is updating is the condition text. @see org.argouml.uml.diagram.ui.FigEdgeModelElement#modelChanged(java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.UMLDiagram#getUmlActions()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.UMLDiagram#getLabelName()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.UMLDiagram#isRelocationAllowed(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.UMLDiagram#relocate(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.reveng.ImportSettings#isCreateDiagramsSelected()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.reveng.ImportSettings#isMinimiseFigsSelected()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.reveng.ImportSettingsInternal#isDiagramLayoutSelected()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.reveng.ImportSettingsInternal#isDescendSelected()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.reveng.ImportSettingsInternal#isChangedOnlySelected()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.reveng.ImportSettings#getInputSourceEncoding()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.reveng.ImportCommon#getImportLevel()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.reveng.ImportCommon#isCreateDiagramsChecked()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.reveng.ImportCommon#isMinimiseFigsChecked()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.reveng.ImportCommon#isDiagramLayoutSelected()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.reveng.ImportCommon#isDescendSelected()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.reveng.ImportCommon#isChangedOnlySelected()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.reveng.SettingsTypes.BooleanSelection#isSelected()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.reveng.SettingsTypes.BooleanSelection#getDefaultValue()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.reveng.ImportSettingTypes.UniqueSelection#getDefaultSelection()
WITHOUT_CLASSIFICATION	We return a new List with the options instead of the options themself because we don't want the user to be able to change the options. @see org.argouml.uml.reveng.SettingsTypes.UniqueSelection#getOptions()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.reveng.ImportSettingTypes.UniqueSelection#setSelection(int)
WITHOUT_CLASSIFICATION	@see org.argouml.application.api.ProgressMonitor#close()
WITHOUT_CLASSIFICATION	@see org.argouml.application.api.ProgressMonitor#isCanceled()
WITHOUT_CLASSIFICATION	@see org.argouml.application.api.ProgressMonitor#notifyMessage(java.lang.String, java.lang.String, java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.application.api.ProgressMonitor#notifyNullAction()
WITHOUT_CLASSIFICATION	@see org.argouml.application.api.ProgressMonitor#updateMainTask(java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.application.api.ProgressMonitor#updateSubTask(java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.persistence.ProgressListener#progress(org.argouml.persistence.ProgressEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetAdded(org.argouml.ui.targetmanager.TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetRemoved(org.argouml.ui.targetmanager.TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetSet(org.argouml.ui.targetmanager.TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.TabTarget#getTarget()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetAdded( org.argouml.ui.targetmanager.TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetRemoved( org.argouml.ui.targetmanager.TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetSet( org.argouml.ui.targetmanager.TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLUserInterfaceComponent#targetChanged()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLUserInterfaceComponent#targetReasserted()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.ActionAddDiagram#createDiagram(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.ActionAddDiagram#isValidNamespace(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetAdded(org.argouml.ui.targetmanager.TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetRemoved(org.argouml.ui.targetmanager.TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetSet(org.argouml.ui.targetmanager.TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.ActionNewDiagram#createDiagram()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetAdded(org.argouml.ui.targetmanager.TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetRemoved(org.argouml.ui.targetmanager.TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetSet(org.argouml.ui.targetmanager.TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLUserInterfaceComponent#targetChanged()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLUserInterfaceComponent#targetReasserted()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.ActionAddDiagram#createDiagram(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.ActionAddDiagram#createDiagram(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.ActionAddDiagram#isValidNamespace(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.TabTarget#refresh()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetAdded(org.argouml.ui.targetmanager.TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetRemoved(org.argouml.ui.targetmanager.TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetSet(org.argouml.ui.targetmanager.TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLExpressionModel2#getExpression()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLExpressionModel2#setExpression(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLExpressionModel2#newExpression()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLUserInterfaceComponent#targetChanged()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLUserInterfaceComponent#targetReasserted()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLExpressionModel2#getExpression()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLExpressionModel2#setExpression(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLExpressionModel2#newExpression()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.PropPanel#shouldBeEnabled(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.TabTarget#setTarget(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.AbstractActionNavigate#navigateTo(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.SourcePathController#getSourcePath(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.SourcePathController#getSourcePathSettings()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.SourcePathController#setSourcePath(org.argouml.uml.ui.SourcePathTableModel)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.SourcePathController#setSourcePath( java.lang.Object, java.io.File)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.SourcePathController#deleteSourcePath(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.SourcePathController#getAllModelElementsWithSourcePath()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetAdded(org.argouml.ui.targetmanager.TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetRemoved(org.argouml.ui.targetmanager.TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetSet(org.argouml.ui.targetmanager.TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.AbstractActionNavigate#navigateTo( java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBox2#UMLComboBox2( UMLComboBoxModel2, Action, boolean)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.PropPanel#shouldBeEnabled(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.AbstractActionNavigate#navigateTo(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.TabTarget#refresh()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.TabTarget#getTarget()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.TabTarget#shouldBeEnabled(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetAdded(org.argouml.ui.targetmanager.TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.kernel.DelayedVChangeListener#delayedVetoableChange(java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLUserInterfaceComponent#targetChanged()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLUserInterfaceComponent#targetReasserted()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLExpressionModel2#getExpression()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLExpressionModel2#setExpression(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLExpressionModel2#newExpression()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLExpressionModel2#getExpression()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLExpressionModel2#setExpression(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLExpressionModel2#newExpression()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.AbstractActionNavigate#navigateTo(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.AbstractActionNavigate#navigateTo(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargettableModelView#getTargettableModel()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.AbstractActionNavigate#navigateTo(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.TabTarget#getTarget()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.TabTarget#refresh()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.TabTarget#shouldBeEnabled(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLUserInterfaceContainer#getProfile()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLUserInterfaceContainer#getModelElement()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLUserInterfaceContainer#formatElement(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLUserInterfaceContainer#formatNamespace(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLUserInterfaceContainer#formatCollection(java.util.Iterator)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.AbstractActionNavigate#navigateTo(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildPopup(javax.swing.JPopupMenu, int)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargettableModelView#getTargettableModel()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.AbstractActionNavigate#navigateTo(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetAdded(org.argouml.ui.targetmanager.TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetRemoved(org.argouml.ui.targetmanager.TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetSet(org.argouml.ui.targetmanager.TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLExpressionModel2#getExpression()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLExpressionModel2#setExpression(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLExpressionModel2#newExpression()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.AbstractActionNavigate#navigateTo(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.TabTarget#setTarget(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.TabTarget#getTarget()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.TabTarget#refresh()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.TabTarget#shouldBeEnabled(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetAdded( org.argouml.ui.targetmanager.TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetRemoved( org.argouml.ui.targetmanager.TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetSet( org.argouml.ui.targetmanager.TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.AbstractActionNavigate#navigateTo(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargettableModelView#getTargettableModel()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.ActionAddDiagram#createDiagram(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.ActionAddDiagram#createDiagram(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.ActionAddDiagram#isValidNamespace(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLCheckBox2#buildModel()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.behavior.common_behavior.ActionNewAction#createAction()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.behavior.common_behavior.ActionNewAction#createAction()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.behavior.common_behavior.ActionNewAction#createAction()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLCheckBox2#buildModel()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLPlainTextDocument#setProperty(java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLPlainTextDocument#getProperty()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.behavior.common_behavior.ActionNewAction#createAction()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.behavior.common_behavior.ActionNewAction#createAction()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.behavior.common_behavior.ActionNewAction#createAction()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.behavior.common_behavior.ActionNewAction#createAction()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.behavior.common_behavior.ActionNewAction#createAction()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.behavior.state_machines.ActionNewEvent#createEvent( java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.behavior.state_machines.ActionNewEvent#createEvent( java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.behavior.state_machines.ActionNewEvent#createEvent(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLExpressionModel2#getExpression()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLExpressionModel2#setExpression(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLExpressionModel2#newExpression()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.behavior.state_machines.ActionNewEvent#createEvent( java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLPlainTextDocument#setProperty(java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLPlainTextDocument#getProperty()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLPlainTextDocument#setProperty(java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLPlainTextDocument#getProperty()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLRadioButtonPanel#buildModel()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLCheckBox2#buildModel()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLCheckBox2#buildModel()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLRadioButtonPanel#buildModel()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLRadioButtonPanel#buildModel()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLCheckBox2#buildModel()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLCheckBox2#buildModel()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLPlainTextDocument#setProperty(java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLPlainTextDocument#getProperty()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLPlainTextDocument#setProperty(java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLPlainTextDocument#getProperty()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.AbstractActionAddModelElement#getChoices()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.AbstractActionAddModelElement#getDialogTitle()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.AbstractActionAddModelElement#getSelected()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.AbstractActionAddModelElement#getChoices()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.AbstractActionAddModelElement#getDialogTitle()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.AbstractActionAddModelElement#getSelected()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLCheckBox2#buildModel()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLCheckBox2#buildModel()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLPlainTextDocument#setProperty(java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLPlainTextDocument#getProperty()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLCheckBox2#buildModel()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLRadioButtonPanel#buildModel()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLCheckBox2#buildModel()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLCheckBox2#buildModel()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLCheckBox2#buildModel()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLRadioButtonPanel#buildModel()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel2#setSelectedItem(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel2#getSelectedModelElement()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.util.namespace.Namespace#peekNamespaceElement()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.util.namespace.Namespace#popNamespaceElement()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.util.namespace.Namespace#getBaseNamespace()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.util.namespace.Namespace#getCommonNamespace( org.argouml.uml.util.namespace.Namespace)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.util.namespace.Namespace#iterator()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.util.namespace.Namespace#isEmpty()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.util.namespace.Namespace#setDefaultScopeToken(java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.util.namespace.NamespaceElement#getNamespaceElement()
WITHOUT_CLASSIFICATION	@see org.argouml.application.api.CommandLineInterface#doCommand(java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getFacade()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getDiagramInterchangeModel()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getModelEventPump()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getActivityGraphsFactory()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getActivityGraphsHelper()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getCollaborationsFactory()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getCollaborationsHelper()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getCommonBehaviorFactory()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getCommonBehaviorHelper()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getCoreFactory()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getCoreHelper()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getDataTypesFactory()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getDataTypesHelper()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getExtensionMechanismsFactory()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getExtensionMechanismsHelper()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getModelManagementFactory()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getModelManagementHelper()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getStateMachinesFactory()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getStateMachinesHelper()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getUmlFactory()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getUmlHelper()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getUseCasesFactory()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getUseCasesHelper()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getMessageSort()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getMetaTypes()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getChangeableKind()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getAggregationKind()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getPseudostateKind()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getScopeKind()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getConcurrencyKind()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getDirectionKind()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getOrderingKind()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getVisibilityKind()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getXmiReader()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getXmiWriter(java.lang.Object, java.io.Writer, java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getCopyHelper()
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.NotationProvider#getParsingHelp()
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.NotationProvider#parse(java.lang.Object, java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.NotationProvider#getParsingHelp()
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.NotationProvider#parse(java.lang.Object, java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.TabTarget#refresh()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.AbstractTestActionAddDiagram#getAction()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.AbstractTestActionAddDiagram#getNamespace()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.AbstractTestActionAddDiagram#getAction()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.AbstractTestActionAddDiagram#getNamespace()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.AbstractTestActionAddDiagram#getAction()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.AbstractTestActionAddDiagram#getNamespace()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.AbstractTestActionAddDiagram#getAction()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.AbstractTestActionAddDiagram#getNamespace()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui. AbstractTestActionAddDiagram#getValidNamespaceClasses()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.AbstractTestActionAddDiagram#getAction()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.AbstractTestActionAddDiagram#getNamespace()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.UMLDiagram#propertyChange(java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.UMLDiagram#relocate(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.UMLDiagram#isRelocationAllowed(java.lang.Object)
WITHOUT_CLASSIFICATION	Overridden purely to keep our superclass from removing the listener that we just added. @see org.argouml.uml.diagram.ui.FigEdgeModelElement#updateListeners(java.lang.Object, java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigNodeModelElement#renderingChanged()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.UMLDiagram#propertyChange(java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.UMLDiagram#relocate(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.model.StateMachinesHelper#getSource(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.model.UseCasesHelper#getAllUseCases(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.model.UmlHelper#addListenersToModel(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.model.UmlHelper#move(java.lang.Object, org.argouml.model.UmlHelper.Direction)
WITHOUT_CLASSIFICATION	@see org.argouml.model.UmlHelper#move(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelEventPump#removeClassModelEventListener( java.beans.PropertyChangeListener, java.lang.Object, java.lang.String[])
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelEventPump#addModelEventListener( java.beans.PropertyChangeListener, java.lang.Object, java.lang.String[])
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelEventPump#addModelEventListener( java.beans.PropertyChangeListener, java.lang.Object, java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelEventPump#addModelEventListener( java.beans.PropertyChangeListener, java.lang.Object, java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelEventPump#addModelEventListener( java.beans.PropertyChangeListener, java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelEventPump#removeModelEventListener( java.beans.PropertyChangeListener, java.lang.Object, java.lang.String[])
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelEventPump#removeModelEventListener( java.beans.PropertyChangeListener, java.lang.Object, java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelEventPump#removeModelEventListener( java.beans.PropertyChangeListener, java.lang.Object, java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelEventPump#removeModelEventListener( java.beans.PropertyChangeListener, java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelEventPump#addClassModelEventListener( java.beans.PropertyChangeListener, java.lang.Object, java.lang.String[])
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelEventPump#addClassModelEventListener( java.beans.PropertyChangeListener, java.lang.Object, java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelEventPump#removeClassModelEventListener( java.beans.PropertyChangeListener, java.lang.Object, java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.model.ExtensionMechanismsHelper#getStereotypes(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.model.CoreHelper#clearStereotypes(java.lang.Object) All methods below similarly override methods in CoreHelper.
WITHOUT_CLASSIFICATION	@see org.argouml.model.CollaborationsHelper#getAllClassifierRoles(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.model.CommonBehaviorHelper#getSource(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.model.ActivityGraphsHelper#findClassifierByName(java.lang.Object, java.lang.String) all methods below similarly implement methods from ActivityGraphsHelper
WITHOUT_CLASSIFICATION	Returns the value of an element's property (tagged value). This method makes sure that a Collection of values is returned if and only if the property is multivalued (upper multiplicity value greater 1). @see org.argouml.model.Facade#getValueOfTag(java.lang.Object, java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.model.AbstractModelEventPump#removeClassModelEventListener(java.beans.PropertyChangeListener, java.lang.Object, java.lang.String[])
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelEventPump#startPumpingEvents()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelEventPump#stopPumpingEvents()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelEventPump#flushModelEvents()
WITHOUT_CLASSIFICATION	@see org.argouml.model.AggregationKind#getAggregate()
WITHOUT_CLASSIFICATION	@see org.argouml.model.PseudostateKind#getChoice()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ChangeableKind#getChangeable()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ScopeKind#getClassifier()
WITHOUT_CLASSIFICATION	@see org.argouml.model.AggregationKind#getComposite()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ConcurrencyKind#getConcurrent()
WITHOUT_CLASSIFICATION	@see org.argouml.model.PseudostateKind#getDeepHistory()
WITHOUT_CLASSIFICATION	@see org.argouml.model.PseudostateKind#getFork()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ChangeableKind#getFrozen()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ConcurrencyKind#getGuarded()
WITHOUT_CLASSIFICATION	@see org.argouml.model.DirectionKind#getInParameter()
WITHOUT_CLASSIFICATION	@see org.argouml.model.PseudostateKind#getInitial()
WITHOUT_CLASSIFICATION	@see org.argouml.model.DirectionKind#getInOutParameter()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ScopeKind#getInstance()
WITHOUT_CLASSIFICATION	@see org.argouml.model.PseudostateKind#getJoin()
WITHOUT_CLASSIFICATION	@see org.argouml.model.PseudostateKind#getJunction()
WITHOUT_CLASSIFICATION	@see org.argouml.model.AggregationKind#getNone()
WITHOUT_CLASSIFICATION	@see org.argouml.model.OrderingKind#getOrdered()
WITHOUT_CLASSIFICATION	@see org.argouml.model.DirectionKind#getOutParameter()
WITHOUT_CLASSIFICATION	@see org.argouml.model.VisibilityKind#getPackage()
WITHOUT_CLASSIFICATION	@see org.argouml.model.VisibilityKind#getPrivate()
WITHOUT_CLASSIFICATION	@see org.argouml.model.VisibilityKind#getProtected()
WITHOUT_CLASSIFICATION	@see org.argouml.model.VisibilityKind#getPublic()
WITHOUT_CLASSIFICATION	@see org.argouml.model.DirectionKind#getReturnParameter()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ConcurrencyKind#getSequential()
WITHOUT_CLASSIFICATION	@see org.argouml.model.PseudostateKind#getShallowHistory()
WITHOUT_CLASSIFICATION	@see org.argouml.model.OrderingKind#getUnordered()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ExtensionMechanismsFactory#createTaggedValue()
WITHOUT_CLASSIFICATION	@see org.argouml.model.CoreHelper#clearStereotypes(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.model.CopyHelper#copy(java.lang.Object, java.lang.Object) Make a copy of element in the given namespace.<p> This function is a dispatcher that calls the copyElement(Element,Namespace) function from XXXFactory.<p> This function may fail and return null for any of the following reasons: <ol> <li>No copy function is known for element's type. <li>The copy function fails or throws. </ol> @param anelement is the element to copy. @param ans the namespace @return a copy of element, or null. @throws IllegalArgumentException if element is null.
WITHOUT_CLASSIFICATION	Because we map both ends of an association we'll see many names twice LOG.log(Level.FINE, "Duplicate property name found - {0}:{1}", new Object[]{typeName, propertyName});
WITHOUT_CLASSIFICATION	Builds an initialized stereotype with no namespace. A stereotype must have a namespace so this method is unsafe. Use buildStereotype(String, Object). @param text is the name of the stereotype @return an initialized stereotype.
WITHOUT_CLASSIFICATION	Used by the copy functions. Do not call this function directly. @param source The stereotype to copy from. @param target The object becoming a copy.
WITHOUT_CLASSIFICATION	If the array hasn't been flagged to indicate otherwise swap elements the elements and add again.
WITHOUT_CLASSIFICATION	specifies valid elements for a class to contain
WITHOUT_CLASSIFICATION	specifies valid elements for a Component to contain
WITHOUT_CLASSIFICATION	specifies valid elements for an ObjectFlowState to contain
WITHOUT_CLASSIFICATION	specifies valid elements for an AssociationRole to contain
WITHOUT_CLASSIFICATION	specifies valid elements for an SimpleState to contain
WITHOUT_CLASSIFICATION	Extend, but only between two use cases. Remember we draw from the extension port to the base port.
WITHOUT_CLASSIFICATION	default parameter name
WITHOUT_CLASSIFICATION	build all other elements using existing buildNode
WITHOUT_CLASSIFICATION	There is a bug in the version of MDR (20050711) that we use that causes it to fail to delete aggregate elements which are single valued and where the aggregate end is listed second in the association defined in the metamodel. For the UML 1.4 metamodel, this affects a StateMachine's top StateVertex and a Transition's Guard. See issue 4948 & 5227 - tfm 20080713
WITHOUT_CLASSIFICATION	In UML 1.3, the name is the only place to store text. In UML 1.4, there is a body as well, but some tools still seem to use name.
WITHOUT_CLASSIFICATION	Although not represented in the OCL (or our Java), the English text of WFR #4 of Section 2.10.3.4 in the UML 1.4 spec is more restrictive - "[4] A Collaboration may only contain ClassifierRoles and AssociationRoles, the Generalizations and the Constraints between them, and Actions used in the Collaboration's Interactions."
WITHOUT_CLASSIFICATION	The following from the original NSUML implemenetation was attempting to implement WFR #1 from section 2.5.3.32 of the UML 1.4 spec, but if there is an owner set, no namespace is valid. The checks for this WFR, if desired, need to go in setOwner() and setType() - tfm
WITHOUT_CLASSIFICATION	or self.allConnections->forAll( r | self.namespace.allContents->excludes (r.participant) implies self.namespace.clientDependency->exists (d | d.oclIsTypeOf(Permission) and d.stereotype.name = 'access' and
WITHOUT_CLASSIFICATION	Return a list of namespaces enclosing this element. The list is ordered outer to inner. i.e. it starts at the root model.
WITHOUT_CLASSIFICATION	ScopeKind, VisibilityKind, PseudostateKind, etc Doesn't include Boolean though, despite what UML 1.4 spec says
WITHOUT_CLASSIFICATION	For a Namespace: <pre> [2] The operation allContents results in a Set containing all ModelElements contained by the Namespace. allContents : Set(ModelElement); allContents = self.contents where contents = self.ownedElement -> union(self.namespace, contents) </pre><p>
WITHOUT_CLASSIFICATION	For a Package: <pre> [3] The operation allContents results in a Set containing the ModelElements owned by or imported by the Package or one of its ancestors. allContents : Set(ModelElement); allContents = self.contents->union( self.parent.allContents->select(e | e.elementOwnership.visibility = #public or e.elementOwnership.visibility = #protected)) where the required operations are defined as : [1] The operation contents results in a Set containing the ModelElements owned by or imported by the Package. contents : Set(ModelElement) contents = self.ownedElement->union(self.importedElement) [2] The operation allImportedElements results in a Set containing the ModelElements imported by the Package or one of its parents. allImportedElements : Set(ModelElement) allImportedElements = self.importedElement->union( self.parent.oclAsType(Package).allImportedElements->select( re | re.elementImport.visibility = #public or re.elementImport.visibility = #protected)) </pre>
WITHOUT_CLASSIFICATION	Get the implementations of this operations and look for an OpaqueBehavior.
WITHOUT_CLASSIFICATION	TODO: In UML 2.0, ClassifierRole, AssociationRole, and AssociationEndRole have been replaced by the internal structure of the Collaboration
WITHOUT_CLASSIFICATION	For a Transition use indirection through source StateVertex
WITHOUT_CLASSIFICATION	TODO: unimplemented return ((Property) handle).gets
WITHOUT_CLASSIFICATION	Removed from UML 2.x and deprecated in Model API so we won't implement it throw new NotImplementedException(); we do not throw an exception because ArgoUML still uses this
WITHOUT_CLASSIFICATION	This doesn't work in UML2: both owner and property needed!
WITHOUT_CLASSIFICATION	TODO: Restructured in UML 2
WITHOUT_CLASSIFICATION	TODO: Gone in UML 2.1 It is now an InstanceSpecification with an Association as its classifier
WITHOUT_CLASSIFICATION	list.add("LiteralReal");UML 2.4 End LiteralSpecification
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	Link does not exist in UML2, a link is represented just as an association
WITHOUT_CLASSIFICATION	Search for our current target language.
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	The attribute 'targetScope' of an AssociationEnd in UML1.x is no longer supported in UML2.x
WITHOUT_CLASSIFICATION	cmd.setObjects(run.getParams().get(0));
WITHOUT_CLASSIFICATION	handles all children of relationship including extend and include which are not members of core
WITHOUT_CLASSIFICATION	Although Usage & Permission are Dependencies, they need to be include separately because of the way lookup works
WITHOUT_CLASSIFICATION	The next 3 restrictions for Abstraction seem to be Argo specific not something the UML spec requires - tfm - 20070215 There is no need for these because they arn't used by buildConnection() - b00__1 {Abstraction.class, org.eclipse.uml2.uml.Class.class, org.eclipse.uml2.uml.Class.class, null, }, {Abstraction.class, org.eclipse.uml2.uml.Package.class,org.eclipse.uml2.uml.Package.class, null, }, {Abstraction.class, Component.class, Interface.class, null, },
WITHOUT_CLASSIFICATION	specifies valid elements for a Enumeration to contain
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	Do nothing.
WITHOUT_CLASSIFICATION	@see java.lang.Object#equals(java.lang.Object)
WITHOUT_CLASSIFICATION	This module will still register as enabled for UML1.4 but it won't actually do anything.
WITHOUT_CLASSIFICATION	@see java.util.Collection#remove(java.lang.Object)
WITHOUT_CLASSIFICATION	@see java.util.Collection#contains(java.lang.Object)
WITHOUT_CLASSIFICATION	@see java.lang.Object#hashCode() This will result in rather bad performance but at least we will not violate the contract together with {@link #equals(Object)}.
WITHOUT_CLASSIFICATION	@see java.util.Collection#size()
WITHOUT_CLASSIFICATION	@see java.util.Collection#isEmpty()
WITHOUT_CLASSIFICATION	@see java.util.Collection#iterator()
WITHOUT_CLASSIFICATION	@see java.util.Collection#toArray()
WITHOUT_CLASSIFICATION	@see java.util.Collection#toArray(java.lang.Object[])
WITHOUT_CLASSIFICATION	@see java.util.Collection#add(java.lang.Object)
WITHOUT_CLASSIFICATION	@see java.util.Collection#containsAll(java.util.Collection)
WITHOUT_CLASSIFICATION	@see java.util.Collection#addAll(java.util.Collection)
WITHOUT_CLASSIFICATION	@see java.util.Collection#retainAll(java.util.Collection)
WITHOUT_CLASSIFICATION	@see java.util.Collection#removeAll(java.util.Collection)
WITHOUT_CLASSIFICATION	@see java.util.Collection#clear()
WITHOUT_CLASSIFICATION	@see java.util.List#addAll(int, java.util.Collection)
WITHOUT_CLASSIFICATION	@see java.util.List#get(int)
WITHOUT_CLASSIFICATION	@see java.util.List#set(int, java.lang.Object)
WITHOUT_CLASSIFICATION	@see java.util.List#add(int, java.lang.Object)
WITHOUT_CLASSIFICATION	@see java.util.List#remove(int)
WITHOUT_CLASSIFICATION	@see java.util.List#indexOf(java.lang.Object)
WITHOUT_CLASSIFICATION	@see java.util.List#lastIndexOf(java.lang.Object)
WITHOUT_CLASSIFICATION	@see java.util.List#listIterator()
WITHOUT_CLASSIFICATION	@see java.util.List#listIterator(int)
WITHOUT_CLASSIFICATION	@see java.util.List#subList(int, int)
WITHOUT_CLASSIFICATION	@see java.lang.Object#hashCode() This is a rather bad hash solution but with the {@link #equals(Object)} defined as below, it is not possible to do better.
WITHOUT_CLASSIFICATION	@see java.lang.Object#hashCode()
WITHOUT_CLASSIFICATION	@see java.lang.Runnable#run()
WITHOUT_CLASSIFICATION	@see java.lang.Runnable#run()
WITHOUT_CLASSIFICATION	@see java.lang.Runnable#run()
WITHOUT_CLASSIFICATION	@see java.lang.Runnable#run()
WITHOUT_CLASSIFICATION	@see org.tigris.swidgets.Orientable#setOrientation(Orientation)
WITHOUT_CLASSIFICATION	@see java.util.Observable#notifyObservers(java.lang.Object)
WITHOUT_CLASSIFICATION	@see Observable#notifyObservers()
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#getColumnClass(int)
WITHOUT_CLASSIFICATION	@see javax.swing.plaf.metal.MetalTheme#getName()
WITHOUT_CLASSIFICATION	@see javax.swing.plaf.metal.MetalTheme#getPrimary2()
WITHOUT_CLASSIFICATION	@see javax.swing.plaf.metal.MetalTheme#getPrimary3()
WITHOUT_CLASSIFICATION	@see javax.swing.plaf.metal.MetalTheme#getSecondary1()
WITHOUT_CLASSIFICATION	@see javax.swing.plaf.metal.MetalTheme#getSecondary2()
WITHOUT_CLASSIFICATION	@see javax.swing.plaf.metal.MetalTheme#getSecondary3()
WITHOUT_CLASSIFICATION	@see javax.swing.plaf.metal.MetalTheme#getControlTextFont()
WITHOUT_CLASSIFICATION	@see javax.swing.plaf.metal.MetalTheme#getSystemTextFont()
WITHOUT_CLASSIFICATION	@see javax.swing.plaf.metal.MetalTheme#getUserTextFont()
WITHOUT_CLASSIFICATION	@see javax.swing.plaf.metal.MetalTheme#getMenuTextFont()
WITHOUT_CLASSIFICATION	@see javax.swing.plaf.metal.MetalTheme#getSubTextFont()
WITHOUT_CLASSIFICATION	@see javax.swing.plaf.metal.MetalTheme#getWindowTitleFont()
WITHOUT_CLASSIFICATION	@see java.lang.Runnable#run()
WITHOUT_CLASSIFICATION	@see java.awt.event.ComponentListener#componentHidden(java.awt.event.ComponentEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#getColumnCount()
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#getColumnName(int)
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#isCellEditable(int, int)
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#getRowCount()
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#getValueAt(int, int)
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#setValueAt(java.lang.Object, int, int)
WITHOUT_CLASSIFICATION	@see java.beans.VetoableChangeListener#vetoableChange(java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	@see java.beans.PropertyChangeListener#propertyChange(java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#getColumnCount()
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#getColumnName(int)
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#getColumnClass(int)
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#isCellEditable(int, int)
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#getRowCount()
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#getValueAt(int, int)
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#setValueAt(java.lang.Object, int, int)
WITHOUT_CLASSIFICATION	@see java.beans.VetoableChangeListener#vetoableChange(java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	@see java.beans.PropertyChangeListener#propertyChange(java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.ListSelectionListener#valueChanged(javax.swing.event.ListSelectionEvent)
WITHOUT_CLASSIFICATION	Updates the button if the current row changes @see javax.swing.event.TableModelListener#tableChanged(javax.swing.event.TableModelEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.DocumentListener#insertUpdate(javax.swing.event.DocumentEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.DocumentListener#removeUpdate(javax.swing.event.DocumentEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.DocumentListener#changedUpdate(javax.swing.event.DocumentEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ItemListener#itemStateChanged(java.awt.event.ItemEvent)
WITHOUT_CLASSIFICATION	Refresh the table when a critique is enabled/disabled @see java.util.Observer#update(java.util.Observable, java.lang.Object)
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#getColumnCount()
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#getColumnName(int)
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#getColumnClass(int)
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#isCellEditable(int, int)
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#getRowCount()
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#getValueAt(int, int)
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#setValueAt(java.lang.Object, int, int)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.TreeModel#getChild(java.lang.Object, int)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.TreeModel#getChildCount(java.lang.Object)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.TreeModel#getIndexOfChild( java.lang.Object, java.lang.Object)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.TreeModel#removeTreeModelListener(javax.swing.event.TreeModelListener)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.TreeModel#getChildCount(java.lang.Object)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.TreeModel#getIndexOfChild(java.lang.Object, java.lang.Object)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.TreeModel#getIndexOfChild(java.lang.Object, java.lang.Object)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.TreeModel#valueForPathChanged( javax.swing.tree.TreePath, java.lang.Object)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.TreeModel#addTreeModelListener(javax.swing.event.TreeModelListener)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.TreeModel#removeTreeModelListener(javax.swing.event.TreeModelListener)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.TreeModel#getRoot()
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.TreeModel#getChild(java.lang.Object, int)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.TreeModel#valueForPathChanged( javax.swing.tree.TreePath, java.lang.Object)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.TreeModel#addTreeModelListener(javax.swing.event.TreeModelListener)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.TreeModel#removeTreeModelListener(javax.swing.event.TreeModelListener)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.TreeModel#getChild(java.lang.Object, int)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.TreeModel#getChildCount(java.lang.Object)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.TreeModel#getIndexOfChild(java.lang.Object, java.lang.Object)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.TreeModel#valueForPathChanged( javax.swing.tree.TreePath, java.lang.Object)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.TreeModel#addTreeModelListener(javax.swing.event.TreeModelListener)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.TreeModel#removeTreeModelListener(javax.swing.event.TreeModelListener)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.TreeModel#getChild(java.lang.Object, int)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.TreeModel#getChildCount(java.lang.Object)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.TreeModel#getIndexOfChild( java.lang.Object, java.lang.Object)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.TreeModel#valueForPathChanged( javax.swing.tree.TreePath, java.lang.Object)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.TreeModel#addTreeModelListener(javax.swing.event.TreeModelListener)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.TreeModel#removeTreeModelListener(javax.swing.event.TreeModelListener)
WITHOUT_CLASSIFICATION	@see javax.swing.event.TreeSelectionListener#valueChanged(javax.swing.event.TreeSelectionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mousePressed(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mouseReleased(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mouseEntered(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mouseExited(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mouseClicked(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.DocumentListener#removeUpdate(javax.swing.event.DocumentEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.DocumentListener#changedUpdate(javax.swing.event.DocumentEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#deleteFromModel()
WITHOUT_CLASSIFICATION	@see javax.management.NotificationEmitter#removeNotificationListener(javax.management.NotificationListener, javax.management.NotificationFilter, java.lang.Object)
WITHOUT_CLASSIFICATION	@see javax.management.NotificationBroadcaster#addNotificationListener(javax.management.NotificationListener, javax.management.NotificationFilter, java.lang.Object)
WITHOUT_CLASSIFICATION	@see javax.management.NotificationBroadcaster#getNotificationInfo()
WITHOUT_CLASSIFICATION	@see javax.management.NotificationBroadcaster#removeNotificationListener(javax.management.NotificationListener)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#deleteFromModel()
WITHOUT_CLASSIFICATION	@see javax.management.NotificationEmitter#removeNotificationListener(javax.management.NotificationListener, javax.management.NotificationFilter, java.lang.Object)
WITHOUT_CLASSIFICATION	@see javax.management.NotificationBroadcaster#addNotificationListener(javax.management.NotificationListener, javax.management.NotificationFilter, java.lang.Object)
WITHOUT_CLASSIFICATION	@see javax.management.NotificationBroadcaster#getNotificationInfo()
WITHOUT_CLASSIFICATION	@see javax.management.NotificationBroadcaster#removeNotificationListener(javax.management.NotificationListener)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.base.ModeCreateFigPoly#createNewItem(java.awt.event.MouseEvent, int, int)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#deleteFromModel()
WITHOUT_CLASSIFICATION	@see javax.management.NotificationEmitter#removeNotificationListener(javax.management.NotificationListener, javax.management.NotificationFilter, java.lang.Object)
WITHOUT_CLASSIFICATION	@see javax.management.NotificationBroadcaster#addNotificationListener(javax.management.NotificationListener, javax.management.NotificationFilter, java.lang.Object)
WITHOUT_CLASSIFICATION	@see javax.management.NotificationBroadcaster#getNotificationInfo()
WITHOUT_CLASSIFICATION	@see javax.management.NotificationBroadcaster#removeNotificationListener(javax.management.NotificationListener)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#deleteFromModel()
WITHOUT_CLASSIFICATION	@see javax.management.NotificationEmitter#removeNotificationListener(javax.management.NotificationListener, javax.management.NotificationFilter, java.lang.Object)
WITHOUT_CLASSIFICATION	@see javax.management.NotificationBroadcaster#addNotificationListener(javax.management.NotificationListener, javax.management.NotificationFilter, java.lang.Object)
WITHOUT_CLASSIFICATION	@see javax.management.NotificationBroadcaster#getNotificationInfo()
WITHOUT_CLASSIFICATION	@see javax.management.NotificationBroadcaster#removeNotificationListener(javax.management.NotificationListener)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#deleteFromModel()
WITHOUT_CLASSIFICATION	@see javax.management.NotificationEmitter#removeNotificationListener(javax.management.NotificationListener, javax.management.NotificationFilter, java.lang.Object)
WITHOUT_CLASSIFICATION	@see javax.management.NotificationBroadcaster#addNotificationListener(javax.management.NotificationListener, javax.management.NotificationFilter, java.lang.Object)
WITHOUT_CLASSIFICATION	@see javax.management.NotificationBroadcaster#getNotificationInfo()
WITHOUT_CLASSIFICATION	@see javax.management.NotificationBroadcaster#removeNotificationListener(javax.management.NotificationListener)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#deleteFromModel()
WITHOUT_CLASSIFICATION	@see javax.management.NotificationEmitter#removeNotificationListener(javax.management.NotificationListener, javax.management.NotificationFilter, java.lang.Object)
WITHOUT_CLASSIFICATION	@see javax.management.NotificationBroadcaster#addNotificationListener(javax.management.NotificationListener, javax.management.NotificationFilter, java.lang.Object)
WITHOUT_CLASSIFICATION	@see javax.management.NotificationBroadcaster#getNotificationInfo()
WITHOUT_CLASSIFICATION	@see javax.management.NotificationBroadcaster#removeNotificationListener(javax.management.NotificationListener)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#deleteFromModel()
WITHOUT_CLASSIFICATION	@see javax.management.NotificationEmitter#removeNotificationListener(javax.management.NotificationListener, javax.management.NotificationFilter, java.lang.Object)
WITHOUT_CLASSIFICATION	@see javax.management.NotificationBroadcaster#addNotificationListener(javax.management.NotificationListener, javax.management.NotificationFilter, java.lang.Object)
WITHOUT_CLASSIFICATION	@see javax.management.NotificationBroadcaster#getNotificationInfo()
WITHOUT_CLASSIFICATION	@see javax.management.NotificationBroadcaster#removeNotificationListener(javax.management.NotificationListener)
WITHOUT_CLASSIFICATION	@see java.lang.Runnable#run()
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#getValueAt(int, int)
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#setValueAt( java.lang.Object, int, int)
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#getColumnClass(int)
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#isCellEditable(int, int)
WITHOUT_CLASSIFICATION	@see GUISettingsTabInterface#handleSettingsTabRefresh()
WITHOUT_CLASSIFICATION	@see GUISettingsTabInterface#handleSettingsTabSave()
WITHOUT_CLASSIFICATION	@see GUISettingsTabInterface#handleSettingsTabCancel()
WITHOUT_CLASSIFICATION	@see GUISettingsTabInterface#getTabKey()
WITHOUT_CLASSIFICATION	@see GUISettingsTabInterface#getTabPanel()
WITHOUT_CLASSIFICATION	@see tudresden.ocl.check.types.ModelFacade#getClassifier(java.lang.String)
WITHOUT_CLASSIFICATION	@see tudresden.ocl.check.types.Type#navigateQualified( java.lang.String, tudresden.ocl.check.types.Type[])
WITHOUT_CLASSIFICATION	@see tudresden.ocl.check.types.Type2#navigateParameterizedQuery( java.lang.String, tudresden.ocl.check.types.Type[])
WITHOUT_CLASSIFICATION	@see tudresden.ocl.check.types.Type#navigateParameterized( java.lang.String, tudresden.ocl.check.types.Type[])
WITHOUT_CLASSIFICATION	@see tudresden.ocl.check.types.Type#conformsTo(tudresden.ocl.check.types.Type)
WITHOUT_CLASSIFICATION	@see java.lang.Object#equals(java.lang.Object)
WITHOUT_CLASSIFICATION	@see java.lang.Object#hashCode()
WITHOUT_CLASSIFICATION	@see tudresden.ocl.check.types.Type#navigateQualified( java.lang.String, tudresden.ocl.check.types.Type[])
WITHOUT_CLASSIFICATION	@see tudresden.ocl.check.types.Type2#navigateParameterizedQuery( java.lang.String, tudresden.ocl.check.types.Type[])
WITHOUT_CLASSIFICATION	@see tudresden.ocl.check.types.Type#navigateParameterized( java.lang.String, tudresden.ocl.check.types.Type[])
WITHOUT_CLASSIFICATION	@see tudresden.ocl.check.types.Type#conformsTo(tudresden.ocl.check.types.Type)
WITHOUT_CLASSIFICATION	@see java.lang.Object#equals(java.lang.Object)
WITHOUT_CLASSIFICATION	@see java.lang.Object#hashCode()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.persistence.pgml.HandlerFactory#getHandler( HandlerStack, Object, String, String, String, Attributes)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.persistence.pgml.PGMLStackParser#setAttrs( org.tigris.gef.presentation.Fig, org.xml.sax.Attributes)
WITHOUT_CLASSIFICATION	@see org.xml.sax.EntityResolver#resolveEntity(java.lang.String, java.lang.String)
WITHOUT_CLASSIFICATION	@see javax.swing.filechooser.FileFilter#getDescription()
WITHOUT_CLASSIFICATION	@see javax.swing.filechooser.FileFilter#accept(java.io.File)
WITHOUT_CLASSIFICATION	@see java.io.InputStream#read()
WITHOUT_CLASSIFICATION	@see java.io.InputStream#read(byte[], int, int)
WITHOUT_CLASSIFICATION	@see java.lang.Throwable#printStackTrace()
WITHOUT_CLASSIFICATION	@see tudresden.ocl.check.types.Type#hasState(java.lang.String)
WITHOUT_CLASSIFICATION	@see java.lang.Throwable#printStackTrace(java.io.PrintStream)
WITHOUT_CLASSIFICATION	@see java.lang.Throwable#printStackTrace(java.io.PrintWriter)
WITHOUT_CLASSIFICATION	@see ProfileModelLoader#loadModel(ProfileReference)
WITHOUT_CLASSIFICATION	@see java.io.FileFilter#accept(java.io.File)
WITHOUT_CLASSIFICATION	@see tudresden.ocl.parser.analysis.DepthFirstAdapter#caseAAdditiveExpressionTail(tudresden.ocl.parser.node.AAdditiveExpressionTail)
WITHOUT_CLASSIFICATION	@see tudresden.ocl.parser.analysis.DepthFirstAdapter#caseAMultiplicativeExpressionTail(tudresden.ocl.parser.node.AMultiplicativeExpressionTail)
WITHOUT_CLASSIFICATION	@see tudresden.ocl.parser.analysis.DepthFirstAdapter#caseAUnaryUnaryExpression(tudresden.ocl.parser.node.AUnaryUnaryExpression)
WITHOUT_CLASSIFICATION	@see tudresden.ocl.parser.analysis.DepthFirstAdapter#caseAPostfixExpressionTail(tudresden.ocl.parser.node.APostfixExpressionTail)
WITHOUT_CLASSIFICATION	@see tudresden.ocl.parser.analysis.DepthFirstAdapter#caseAFeaturePrimaryExpression(tudresden.ocl.parser.node.AFeaturePrimaryExpression)
WITHOUT_CLASSIFICATION	@see tudresden.ocl.parser.analysis.DepthFirstAdapter#outAEmptyFeatureCallParameters(tudresden.ocl.parser.node.AEmptyFeatureCallParameters)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see tudresden.ocl.parser.analysis.DepthFirstAdapter#caseAFeatureCallParameters(tudresden.ocl.parser.node.AFeatureCallParameters)
WITHOUT_CLASSIFICATION	@param node @see tudresden.ocl.parser.analysis.DepthFirstAdapter#caseAStandardDeclarator(tudresden.ocl.parser.node.AStandardDeclarator)
WITHOUT_CLASSIFICATION	@see tudresden.ocl.parser.analysis.DepthFirstAdapter#caseALetExpression(tudresden.ocl.parser.node.ALetExpression)
WITHOUT_CLASSIFICATION	@see tudresden.ocl.parser.analysis.DepthFirstAdapter#outAStringLiteral(tudresden.ocl.parser.node.AStringLiteral)
WITHOUT_CLASSIFICATION	@see tudresden.ocl.parser.analysis.DepthFirstAdapter#outARealLiteral(tudresden.ocl.parser.node.ARealLiteral)
WITHOUT_CLASSIFICATION	@see tudresden.ocl.parser.analysis.DepthFirstAdapter#outAIntegerLiteral(tudresden.ocl.parser.node.AIntegerLiteral)
WITHOUT_CLASSIFICATION	@see tudresden.ocl.parser.analysis.DepthFirstAdapter#outABooleanLiteral(tudresden.ocl.parser.node.ABooleanLiteral)
WITHOUT_CLASSIFICATION	@see tudresden.ocl.parser.analysis.DepthFirstAdapter#outAEnumLiteral(tudresden.ocl.parser.node.AEnumLiteral)
WITHOUT_CLASSIFICATION	@see tudresden.ocl.parser.analysis.DepthFirstAdapter#caseALiteralCollection(tudresden.ocl.parser.node.ALiteralCollection)
WITHOUT_CLASSIFICATION	@see tudresden.ocl.parser.analysis.DepthFirstAdapter#caseAExpressionListOrRange(tudresden.ocl.parser.node.AExpressionListOrRange)
WITHOUT_CLASSIFICATION	@see tudresden.ocl.parser.analysis.DepthFirstAdapter#caseAListExpressionListOrRangeTail(tudresden.ocl.parser.node.AListExpressionListOrRangeTail)
WITHOUT_CLASSIFICATION	@see java.awt.Component#getPreferredSize()
WITHOUT_CLASSIFICATION	@see java.awt.Component#getSize()
WITHOUT_CLASSIFICATION	@see javax.swing.event.DocumentListener#changedUpdate(javax.swing.event.DocumentEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed( java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.WindowListener#windowActivated(java.awt.event.WindowEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.WindowListener#windowClosed(java.awt.event.WindowEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.WindowListener#windowDeactivated(java.awt.event.WindowEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.WindowListener#windowDeiconified(java.awt.event.WindowEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.WindowListener#windowIconified(java.awt.event.WindowEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.WindowListener#windowClosing(java.awt.event.WindowEvent)
WITHOUT_CLASSIFICATION	@see GUISettingsTabInterface#handleSettingsTabCancel()
WITHOUT_CLASSIFICATION	@see GUISettingsTabInterface#getTabKey()
WITHOUT_CLASSIFICATION	@see GUISettingsTabInterface#getTabPanel()
WITHOUT_CLASSIFICATION	@see GUISettingsTabInterface#handleSettingsTabRefresh()
WITHOUT_CLASSIFICATION	@see GUISettingsTabInterface#handleSettingsTabSave()
WITHOUT_CLASSIFICATION	@see GUISettingsTabInterface#handleSettingsTabCancel()
WITHOUT_CLASSIFICATION	@see GUISettingsTabInterface#getTabPanel()
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ItemListener#itemStateChanged(java.awt.event.ItemEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ItemListener#itemStateChanged(java.awt.event.ItemEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.FocusListener#focusGained(java.awt.event.FocusEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.KeyListener#keyPressed(java.awt.event.KeyEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.KeyListener#keyReleased(java.awt.event.KeyEvent)
WITHOUT_CLASSIFICATION	Tests if enter is pressed in the _bbodField so we need to set the target bounds. @see java.awt.event.KeyListener#keyTyped(java.awt.event.KeyEvent)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.ui.IStatusBar#showStatus(java.lang.String)
WITHOUT_CLASSIFICATION	Override paint so we can set a flag the first time we're called and notify any waiting threads that the splash screen has been painted. @see java.awt.Component#paint(java.awt.Graphics)
WITHOUT_CLASSIFICATION	@see javax.swing.plaf.metal.MetalTheme#getPrimary2()
WITHOUT_CLASSIFICATION	@see javax.swing.plaf.metal.MetalTheme#getPrimary3()
WITHOUT_CLASSIFICATION	@see javax.swing.plaf.metal.MetalTheme#getSecondary1()
WITHOUT_CLASSIFICATION	@see javax.swing.plaf.metal.MetalTheme#getSecondary2()
WITHOUT_CLASSIFICATION	@see javax.swing.plaf.metal.MetalTheme#getSecondary3()
WITHOUT_CLASSIFICATION	@see javax.swing.plaf.metal.MetalTheme#getControlTextFont()
WITHOUT_CLASSIFICATION	@see javax.swing.plaf.metal.MetalTheme#getSystemTextFont()
WITHOUT_CLASSIFICATION	@see javax.swing.plaf.metal.MetalTheme#getUserTextFont()
WITHOUT_CLASSIFICATION	@see javax.swing.plaf.metal.MetalTheme#getMenuTextFont()
WITHOUT_CLASSIFICATION	@see javax.swing.plaf.metal.MetalTheme#getSubTextFont()
WITHOUT_CLASSIFICATION	@see javax.swing.plaf.metal.MetalTheme#getWindowTitleFont()
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.AbstractAction.AbstractAction()
WITHOUT_CLASSIFICATION	@see javax.swing.AbstractAction.AbstractAction(java.lang.String)
WITHOUT_CLASSIFICATION	@see javax.swing.AbstractAction.AbstractAction( java.lang.String, javax.swing.Icon)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mousePressed(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mouseReleased(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mouseClicked(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mouseEntered(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mouseExited(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.KeyListener#keyPressed(java.awt.event.KeyEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.KeyListener#keyReleased(java.awt.event.KeyEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.KeyListener#keyTyped(java.awt.event.KeyEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.ListSelectionListener#valueChanged(javax.swing.event.ListSelectionEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.plaf.metal.MetalTheme#getName()
WITHOUT_CLASSIFICATION	@see javax.swing.plaf.metal.MetalTheme#getPrimary2()
WITHOUT_CLASSIFICATION	@see javax.swing.plaf.metal.MetalTheme#getPrimary3()
WITHOUT_CLASSIFICATION	@see javax.swing.plaf.metal.MetalTheme#getSecondary1()
WITHOUT_CLASSIFICATION	@see javax.swing.plaf.metal.MetalTheme#getSecondary2()
WITHOUT_CLASSIFICATION	@see javax.swing.plaf.metal.MetalTheme#getSecondary3()
WITHOUT_CLASSIFICATION	@see javax.swing.plaf.metal.MetalTheme#getControlTextFont()
WITHOUT_CLASSIFICATION	@see javax.swing.plaf.metal.MetalTheme#getSystemTextFont()
WITHOUT_CLASSIFICATION	@see javax.swing.plaf.metal.MetalTheme#getUserTextFont()
WITHOUT_CLASSIFICATION	@see javax.swing.plaf.metal.MetalTheme#getMenuTextFont()
WITHOUT_CLASSIFICATION	@see javax.swing.plaf.metal.MetalTheme#getSubTextFont()
WITHOUT_CLASSIFICATION	@see javax.swing.plaf.metal.MetalTheme#getWindowTitleFont()
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mouseExited(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see org.tigris.swidgets.Dialog#nameButtons()
WITHOUT_CLASSIFICATION	@see java.awt.Component#getMinimumSize()
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mousePressed(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mouseReleased(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mouseEntered(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	@see org.tigris.swidgets.Orientable#setOrientation(org.tigris.swidgets.Orientation)
WITHOUT_CLASSIFICATION	@see TargetListener#targetAdded(TargetEvent)
WITHOUT_CLASSIFICATION	@see TargetListener#targetRemoved(TargetEvent)
WITHOUT_CLASSIFICATION	@see TargetListener#targetSet(TargetEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.ListSelectionListener#valueChanged(javax.swing.event.ListSelectionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.beans.PropertyChangeListener#propertyChange(java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	@see java.awt.Component#getLocale()
WITHOUT_CLASSIFICATION	@see java.awt.Window#dispose()
WITHOUT_CLASSIFICATION	@see java.awt.event.WindowListener#windowClosing(java.awt.event.WindowEvent)
WITHOUT_CLASSIFICATION	@see java.beans.PropertyChangeListener#propertyChange( java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.WindowListener#windowClosed(java.awt.event.WindowEvent)
WITHOUT_CLASSIFICATION	@see GUISettingsTabInterface#handleSettingsTabRefresh()
WITHOUT_CLASSIFICATION	@see GUISettingsTabInterface#handleSettingsTabRefresh()
WITHOUT_CLASSIFICATION	@see GUISettingsTabInterface#handleSettingsTabSave()
WITHOUT_CLASSIFICATION	@see GUISettingsTabInterface#handleSettingsTabCancel()
WITHOUT_CLASSIFICATION	@see GUISettingsTabInterface#getTabKey()
WITHOUT_CLASSIFICATION	@see GUISettingsTabInterface#getTabPanel()
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#setValueAt( java.lang.Object, int, int)
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#getColumnClass(int)
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#isCellEditable(int, int)
WITHOUT_CLASSIFICATION	@see java.awt.event.WindowListener#windowDeactivated(java.awt.event.WindowEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.ListCellRenderer#getListCellRendererComponent( javax.swing.JList, java.lang.Object, int, boolean, boolean)
WITHOUT_CLASSIFICATION	@see javax.swing.JComponent#paintComponent(java.awt.Graphics)
WITHOUT_CLASSIFICATION	@see java.awt.event.WindowListener#windowOpened(java.awt.event.WindowEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.WindowListener#windowClosing(java.awt.event.WindowEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ItemListener#itemStateChanged(java.awt.event.ItemEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mousePressed(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mouseReleased(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mouseEntered(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mouseExited(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	Catches a mouseevent and calls mySingleClick and myDoubleClick if a tab is clicked which is selected. @see java.awt.event.MouseListener#mouseClicked(MouseEvent)
WITHOUT_CLASSIFICATION	@see GUISettingsTabInterface#handleSettingsTabRefresh()
WITHOUT_CLASSIFICATION	@see GUISettingsTabInterface#handleSettingsTabSave()
WITHOUT_CLASSIFICATION	@see GUISettingsTabInterface#handleSettingsTabCancel()
WITHOUT_CLASSIFICATION	@see GUISettingsTabInterface#getTabKey()
WITHOUT_CLASSIFICATION	@see javax.swing.tree.TreeModel#getRoot()
WITHOUT_CLASSIFICATION	@see javax.swing.tree.TreeModel#getChild(java.lang.Object, int)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.TreeModel#getChildCount(java.lang.Object)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.TreeModel#getIndexOfChild(java.lang.Object, java.lang.Object)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.TreeModel#valueForPathChanged(javax.swing.tree.TreePath, java.lang.Object)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see org.tigris.swidgets.Dialog#nameButtons()
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mousePressed(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mouseReleased(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mouseEntered(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mouseExited(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mouseClicked(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	@see java.awt.Component#getMinimumSize() sets minimum size to 120,100
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.MenuListener#menuSelected(javax.swing.event.MenuEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.MenuListener#menuDeselected(javax.swing.event.MenuEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.MenuListener#menuCanceled(javax.swing.event.MenuEvent)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.base.Cmd#undoIt()
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed( java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed( java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see GUISettingsTabInterface#getTabKey()
WITHOUT_CLASSIFICATION	@see GUISettingsTabInterface#getTabPanel()
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#getColumnClass(int)
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#isCellEditable(int, int)
WITHOUT_CLASSIFICATION	Compares obj1 and obj2 sorting by user object type, then name. Diagrams are sorted first, then packages, then other types. sorts by name within type groups. Nulls are sorted first for names. @see java.util.Comparator#compare(java.lang.Object, java.lang.Object)
WITHOUT_CLASSIFICATION	@see javax.swing.event.TreeWillExpandListener#treeWillCollapse(javax.swing .event.TreeExpansionEvent)
WITHOUT_CLASSIFICATION	Updates stereotype setting, adds all children per treemodel 'build on demand' design. @see javax.swing.event.TreeWillExpandListener#treeWillExpand(javax.swing .event.TreeExpansionEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.TreeExpansionListener#treeCollapsed( javax.swing.event.TreeExpansionEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.TreeExpansionListener#treeExpanded( javax.swing.event.TreeExpansionEvent) Updates the selection state.
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.ListSelectionListener#valueChanged(javax.swing.event.ListSelectionEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.ListSelectionListener#valueChanged(javax.swing.event.ListSelectionEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.ListSelectionListener#valueChanged(javax.swing.event.ListSelectionEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.TreeNode#isLeaf()
WITHOUT_CLASSIFICATION	@see java.beans.PropertyChangeListener#propertyChange(java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	Do string compare of names of UML objects. Comparison is case insensitive using a primary strength collator in the user's locale. @see java.util.Comparator#compare(java.lang.Object, java.lang.Object)
WITHOUT_CLASSIFICATION	@see java.awt.dnd.DragSourceListener#dragDropEnd(java.awt.dnd.DragSourceDropEvent)
WITHOUT_CLASSIFICATION	@see java.awt.dnd.DragSourceListener#dragEnter(java.awt.dnd.DragSourceDragEvent)
WITHOUT_CLASSIFICATION	@see java.awt.dnd.DragSourceListener#dragExit(java.awt.dnd.DragSourceEvent)
WITHOUT_CLASSIFICATION	This is not the correct location to set the cursor. The commented out code illustrates the calculation of coordinates. @see java.awt.dnd.DragSourceListener#dragOver(java.awt.dnd.DragSourceDragEvent)
WITHOUT_CLASSIFICATION	@see java.awt.dnd.DragSourceListener#dropActionChanged(java.awt.dnd.DragSourceDragEvent)
WITHOUT_CLASSIFICATION	Ok, we've been told to scroll because the mouse cursor is in our scroll zone. @see java.awt.dnd.Autoscroll#autoscroll(java.awt.Point)
WITHOUT_CLASSIFICATION	Calculate the insets for the JTREE, not the viewport the tree is in. This makes it a bit messy. @see java.awt.dnd.Autoscroll#getAutoscrollInsets()
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.dnd.DropTargetListener#dragEnter(java.awt.dnd.DropTargetDragEvent)
WITHOUT_CLASSIFICATION	@see java.awt.dnd.DropTargetListener#dragExit(java.awt.dnd.DropTargetEvent)
WITHOUT_CLASSIFICATION	@see java.awt.dnd.DropTargetListener#dropActionChanged(java.awt.dnd.DropTargetDragEvent)
WITHOUT_CLASSIFICATION	@see java.beans.PropertyChangeListener#propertyChange(java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	@see javax.management.NotificationListener#handleNotification(javax.management.Notification, java.lang.Object)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.Action#getValue(java.lang.String)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.util.ChildGenerator#gen(java.lang.Object)
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#getColumnCount()
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#getRowCount()
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#getColumnName(int)
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#getColumnClass(int)
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#isCellEditable(int, int)
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#getValueAt(int, int)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.MutableGraphModel#canAddNode(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.MutableGraphModel#canAddEdge(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.MutableGraphModel#addNodeRelatedEdges(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.GraphListener#nodeAdded(org.tigris.gef.graph.GraphEvent)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getLineColor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.GraphListener#edgeAdded(org.tigris.gef.graph.GraphEvent)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.GraphListener#nodeRemoved(org.tigris.gef.graph.GraphEvent)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.GraphListener#edgeRemoved(org.tigris.gef.graph.GraphEvent)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.GraphListener#graphChanged(org.tigris.gef.graph.GraphEvent)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setFillColor(java.awt.Color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getFillColor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setFilled(boolean)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setLineWidth(int)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getLineWidth()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getMinimumSize()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setBoundsImpl(int, int, int, int)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.base.Diagram#initialize(java.lang.Object)
WITHOUT_CLASSIFICATION	Override setBounds to keep shapes looking right. The classifier and state Figs are nicely centered vertically, and stretched out over the full width, to allow easy selection with the mouse. The Fig can only be shrunk to half its original size - so that it is not reducible to a few pixels only. @see org.tigris.gef.presentation.Fig#setBoundsImpl(int, int, int, int)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setFillColor(java.awt.Color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getFillColor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setFilled(boolean)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setLineColor(java.awt.Color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getLineColor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setFillColor(java.awt.Color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getFillColor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setFilled(boolean)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setLineWidth(int)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getLineWidth()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setFillColor(java.awt.Color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getFillColor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setFilled(boolean)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getMinimumSize()
WITHOUT_CLASSIFICATION	@see java.lang.Object#clone()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getMinimumSize()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setBoundsImpl(int, int, int, int) Override setBounds to keep shapes looking right.
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setLineColor(java.awt.Color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getLineColor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setFillColor(java.awt.Color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getFillColor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setFilled(boolean)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setLineWidth(int)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getLineWidth()
WITHOUT_CLASSIFICATION	Return all ports on node or edge. @see org.tigris.gef.graph.GraphModel#getPorts(java.lang.Object)
WITHOUT_CLASSIFICATION	Return the node or edge that owns the given port. @see org.tigris.gef.graph.BaseGraphModel#getOwner(java.lang.Object)
WITHOUT_CLASSIFICATION	Return all edges going to given port. @see org.tigris.gef.graph.GraphModel#getInEdges(java.lang.Object)
WITHOUT_CLASSIFICATION	Return all edges going from given port. @see org.tigris.gef.graph.GraphModel#getOutEdges(java.lang.Object)
WITHOUT_CLASSIFICATION	Return true if the given object is a valid node in this graph. @see org.tigris.gef.graph.MutableGraphModel#canAddNode(java.lang.Object)
WITHOUT_CLASSIFICATION	Return true if the given object is a valid edge in this graph. @see org.tigris.gef.graph.MutableGraphModel#canAddEdge(java.lang.Object)
WITHOUT_CLASSIFICATION	Add the given node to the graph, if valid. @see org.tigris.gef.graph.MutableGraphModel#addNode(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.MutableGraphModel#addNodeRelatedEdges(java.lang.Object)
WITHOUT_CLASSIFICATION	Return true if the two given ports can be connected by a kind of edge to be determined by the ports. @see org.tigris.gef.graph.MutableGraphModel#canConnect(java.lang.Object, java.lang.Object)
WITHOUT_CLASSIFICATION	@see java.beans.VetoableChangeListener#vetoableChange(java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setLineColor(java.awt.Color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getLineColor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setFillColor(java.awt.Color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getFillColor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setFilled(boolean)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setLineWidth(int)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getLineWidth()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#makeSelection()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.GraphFactory#makeNode()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.FigGroup#addFig(Fig)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#calcBounds()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.FigGroup#addFig(Fig)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.GraphNodeRenderer#getFigNodeFor( org.tigris.gef.graph.GraphModel, org.tigris.gef.base.Layer, java.lang.Object, java.util.Map)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.GraphModel#getPorts(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.BaseGraphModel#getOwner(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.GraphModel#getInEdges(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.GraphModel#getOutEdges(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.MutableGraphModel#canAddNode(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.MutableGraphModel#canAddEdge(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.MutableGraphModel#addNode(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#makeSelection()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.GraphEdgeRenderer#getFigEdgeFor( org.tigris.gef.graph.GraphModel, org.tigris.gef.base.Layer, java.lang.Object, java.util.Map)
WITHOUT_CLASSIFICATION	@see java.lang.Object#clone()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setLineColor(java.awt.Color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getLineColor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setFillColor(java.awt.Color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getFillColor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setFilled(boolean)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setLineWidth(int)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getLineWidth()
WITHOUT_CLASSIFICATION	Override setBounds to keep shapes looking right. @see org.tigris.gef.presentation.Fig#setBounds(int, int, int, int)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setEnclosingFig(org.tigris.gef.presentation.Fig)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#makeSelection()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setEnclosingFig(org.tigris.gef.presentation.Fig)
WITHOUT_CLASSIFICATION	@see java.lang.Object#clone()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#makeSelection()
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mouseClicked(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mousePressed(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setEnclosingFig(org.tigris.gef.presentation.Fig)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.util.Predicate#predicate(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.GraphModel#getPorts(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.BaseGraphModel#getOwner(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.GraphModel#getInEdges(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.GraphModel#getOutEdges(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.MutableGraphModel#canAddNode(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.MutableGraphModel#canAddEdge(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.MutableGraphModel#addEdge(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.MutableGraphModel#addNodeRelatedEdges(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.MutableGraphModel#canConnect(java.lang.Object, java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.MutableGraphModel#connect(java.lang.Object, java.lang.Object, java.lang.Class)
WITHOUT_CLASSIFICATION	@see java.beans.VetoableChangeListener#vetoableChange(java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.util.Predicate#predicate(java.lang.Object)
WITHOUT_CLASSIFICATION	Overridden to make it possible to include a stateVertex in a composite state. @see org.tigris.gef.presentation.Fig#setEnclosingFig(org.tigris.gef.presentation.Fig)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getUseTrapRect()
WITHOUT_CLASSIFICATION	Override setBounds to keep shapes looking right. @see org.tigris.gef.presentation.Fig#setBoundsImpl(int, int, int, int)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setLineColor(java.awt.Color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getLineColor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setFillColor(java.awt.Color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getFillColor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setFilled(boolean)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setLineWidth(int)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getLineWidth()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setLineColor(java.awt.Color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getLineColor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setFillColor(java.awt.Color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getFillColor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setLineWidth(int)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getLineWidth()
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mouseClicked(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	@see java.lang.Object#clone()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#makeSelection()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setLineColor(java.awt.Color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getLineColor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setFillColor(java.awt.Color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getFillColor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setFilled(boolean)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setLineWidth(int)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getLineWidth()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setBoundsImpl(int, int, int, int)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setLineColor(java.awt.Color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setFillColor(java.awt.Color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getFillColor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setLineWidth(int)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getLineWidth()
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mouseClicked(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#makeSelection()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setLineColor(java.awt.Color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getLineColor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setFillColor(java.awt.Color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getFillColor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setFilled(boolean)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setLineWidth(int)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getLineWidth()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getFillColor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setLineWidth(int)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getLineWidth()
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mouseClicked(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getMinimumSize()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getUseTrapRect()
WITHOUT_CLASSIFICATION	Override setBounds to keep shapes looking right. @see org.tigris.gef.presentation.Fig#setBoundsImpl(int, int, int, int)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setLineColor(java.awt.Color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getLineColor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setFillColor(java.awt.Color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getFillColor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setFilled(boolean)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setLineWidth(int)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getLineWidth()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getLineColor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setFillColor(java.awt.Color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getFillColor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setFilled(boolean)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setLineWidth(int)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getLineWidth()
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mouseClicked(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	@see java.lang.Object#clone()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setBounds(int, int, int, int)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setLineColor(java.awt.Color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getLineColor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setFilled(boolean)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setLineWidth(int)
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mouseClicked(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getMinimumSize()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setLineColor(java.awt.Color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getLineColor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setFillColor(java.awt.Color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getFillColor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setFilled(boolean)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setLineWidth(int)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getLineWidth()
WITHOUT_CLASSIFICATION	This function only sets the color of the divider line (since that is the only visible part), and can be used to make the divider line invisible for the top region in a composite state. @see org.tigris.gef.presentation.Fig#setLineColor(java.awt.Color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setFillColor(java.awt.Color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getFillColor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setFilled(boolean)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setLineWidth(int)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getLineWidth()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#makeSelection()
WITHOUT_CLASSIFICATION	@see java.lang.Object#clone()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setBounds(int, int, int, int)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setLineColor(java.awt.Color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getLineColor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setFillColor(java.awt.Color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getFillColor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setLineWidth(int)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getLineWidth()
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mouseClicked(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	@see java.lang.Object#clone()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setLineColor(java.awt.Color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getLineColor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setFillColor(java.awt.Color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getFillColor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setFilled(boolean)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setLineWidth(int)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getLineWidth()
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mouseClicked(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getClosestPoint(java.awt.Point)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.GraphModel#getPorts(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.BaseGraphModel#getOwner(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.GraphModel#getOutEdges(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.MutableGraphModel#canAddNode(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.MutableGraphModel#canAddEdge(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.MutableGraphModel#addNode(java.lang.Object)
WITHOUT_CLASSIFICATION	@see java.beans.VetoableChangeListener#vetoableChange(java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setLineColor(java.awt.Color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getLineColor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getFillColor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setLineWidth(int)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getLineWidth()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getUseTrapRect()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getMinimumSize()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getClosestPoint(java.awt.Point)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed( java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed( java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed( java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getClosestPoint(java.awt.Point)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getClosestPoint(java.awt.Point)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getClosestPoint(java.awt.Point)
WITHOUT_CLASSIFICATION	@see java.awt.event.ItemListener#itemStateChanged(java.awt.event.ItemEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ItemListener#itemStateChanged(java.awt.event.ItemEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.KeyListener#keyReleased(java.awt.event.KeyEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.KeyListener#keyTyped(java.awt.event.KeyEvent)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#makeSelection()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setLineColor(java.awt.Color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getLineColor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setFillColor(java.awt.Color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getFillColor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setFilled(boolean)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setLineWidth(int)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getLineWidth()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setEnclosingFig(org.tigris.gef.presentation.Fig)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getUseTrapRect()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setBounds(int, int, int, int)
WITHOUT_CLASSIFICATION	@see java.beans.PropertyChangeListener#propertyChange(java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.FigText#setTextFilled(boolean)
WITHOUT_CLASSIFICATION	@see java.awt.datatransfer.ClipboardOwner#lostOwnership( java.awt.datatransfer.Clipboard, java.awt.datatransfer.Transferable)
WITHOUT_CLASSIFICATION	@see java.awt.datatransfer.Transferable#getTransferDataFlavors()
WITHOUT_CLASSIFICATION	@see java.awt.datatransfer.Transferable#isDataFlavorSupported( java.awt.datatransfer.DataFlavor)
WITHOUT_CLASSIFICATION	@see java.awt.datatransfer.Transferable#getTransferData( java.awt.datatransfer.DataFlavor)
WITHOUT_CLASSIFICATION	@see java.awt.datatransfer.Transferable#getTransferDataFlavors()
WITHOUT_CLASSIFICATION	@see java.awt.datatransfer.Transferable#isDataFlavorSupported( java.awt.datatransfer.DataFlavor)
WITHOUT_CLASSIFICATION	@see java.awt.datatransfer.Transferable#getTransferData( java.awt.datatransfer.DataFlavor)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#classNameAndBounds()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.FigNode#hitPort(int, int)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.FigGroup#hitFig(java.awt.Rectangle)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#isSelectable()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.FigNode#getPortFig(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.FigEdge#setFig(org.tigris.gef.presentation.Fig)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.Action#isEnabled()
WITHOUT_CLASSIFICATION	@see javax.swing.event.DocumentListener#removeUpdate(javax.swing.event.DocumentEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.DocumentListener#changedUpdate(javax.swing.event.DocumentEvent)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.base.SelectionButtons#paintButtons(Graphics)
WITHOUT_CLASSIFICATION	@see java.awt.event.ItemListener#itemStateChanged(java.awt.event.ItemEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ItemListener#itemStateChanged(java.awt.event.ItemEvent)
WITHOUT_CLASSIFICATION	@see java.awt.dnd.DropTargetListener#dragExit( java.awt.dnd.DropTargetEvent)
WITHOUT_CLASSIFICATION	@see java.awt.dnd.DropTargetListener#drop( java.awt.dnd.DropTargetDropEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#translate(int, int)
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mouseClicked(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	Overridden to set Argo-specific RenderingHints to determine whether or not antialiasing should be turned on. @see org.tigris.gef.base.Editor#paint(java.awt.Graphics)
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mouseEntered(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseMotionListener#mouseMoved(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	Overridden to set Argo-specific RenderingHints to determine whether or not antialiasing should be turned on. @see org.tigris.gef.base.Editor#paint(java.awt.Graphics)
WITHOUT_CLASSIFICATION	@see javax.management.NotificationEmitter#removeNotificationListener(javax.management.NotificationListener, javax.management.NotificationFilter, java.lang.Object)
WITHOUT_CLASSIFICATION	@see javax.management.NotificationBroadcaster#addNotificationListener(javax.management.NotificationListener, javax.management.NotificationFilter, java.lang.Object)
WITHOUT_CLASSIFICATION	@see javax.management.NotificationBroadcaster#getNotificationInfo()
WITHOUT_CLASSIFICATION	@see javax.management.NotificationBroadcaster#removeNotificationListener(javax.management.NotificationListener)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mousePressed(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.base.ModeCreatePolyEdge#mouseReleased(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	Updates the modelelement container if the fig is moved in or out another fig. If this fig doesn't have an enclosing fig anymore, the namespace of the diagram will be the owning modelelement. If this fig is moved inside another FigNodeModelElement the owner of that fignodemodelelement will be the owning modelelement. @see org.tigris.gef.presentation.FigNode#setEnclosingFig(org.tigris.gef.presentation.Fig)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getEnclosedFigs()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#makeSelection()
WITHOUT_CLASSIFICATION	@see java.beans.VetoableChangeListener#vetoableChange(java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	@see java.beans.PropertyChangeListener#propertyChange(java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.KeyListener#keyPressed(java.awt.event.KeyEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.KeyListener#keyReleased(java.awt.event.KeyEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.KeyListener#keyTyped(java.awt.event.KeyEvent)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#deleteFromModel()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#classNameAndBounds()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#calcBounds()
WITHOUT_CLASSIFICATION	Necessary since GEF contains some errors regarding the hit subject. @see org.tigris.gef.presentation.Fig#hit(Rectangle)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#removeFromDiagram()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.FigNode#isDragConnectable()
WITHOUT_CLASSIFICATION	Need to 'arm' the rerouting capability with mouseDragged(). <p> Don't arm if the edtior's current mode is a figedge create mode, because once a new edge has been created it is not deselected, therefore on the next create an unwanted reroute is performed. @see java.awt.event.MouseMotionListener#mouseDragged(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setFillColor(java.awt.Color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getFillColor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setFilled(boolean)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setLineWidth(int)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getLineWidth()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getMinimumSize()
WITHOUT_CLASSIFICATION	Override setBounds to keep shapes looking right. @see org.tigris.gef.presentation.Fig#setBounds(int, int, int, int)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.base.Command#execute()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.GraphFactory#makeGraphModel()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.GraphFactory#makeEdge()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.GraphFactory#makeNode()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.base.SelectionButtons#paint(java.awt.Graphics)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.base.SelectionButtons#paintButtons(Graphics)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.base.SelectionButtons#getNewNode(int)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.base.Selection#dragHandle(int, int, int, int, org.tigris.gef.presentation.Handle)
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mouseReleased(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mouseExited(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	@see java.lang.Object#clone()
WITHOUT_CLASSIFICATION	Makes sure that the edges stick to the outline of the fig. @see org.tigris.gef.presentation.Fig#getGravityPoints()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setLineColor(java.awt.Color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getLineColor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setFillColor(java.awt.Color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getFillColor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setFilled(boolean)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setLineWidth(int)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getLineWidth()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#damage()
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mousePressed(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mouseReleased(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mouseEntered(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mouseExited(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	If the user double clicks on any part of this FigNode, pass it down to one of the internal Figs. This allows the user to initiate direct text editing. @see java.awt.event.MouseListener#mouseClicked(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.KeyListener#keyPressed(java.awt.event.KeyEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.KeyListener#keyReleased(java.awt.event.KeyEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.KeyListener#keyTyped(java.awt.event.KeyEvent)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setLayer(org.tigris.gef.base.Layer)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#deleteFromModel()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#hit(java.awt.Rectangle)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#removeFromDiagram()
WITHOUT_CLASSIFICATION	Makes sure that the edges stick to the outline of the fig. @see org.tigris.gef.presentation.Fig#getGravityPoints()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#paint(java.awt.Graphics)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event. ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event. ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event. ActionEvent)
WITHOUT_CLASSIFICATION	@see org.tigris.swidgets.Dialog#nameButtons()
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#getColumnCount()
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#getColumnName(int)
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#getColumnClass(int)
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#isCellEditable(int, int)
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#getRowCount()
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#getValueAt(int, int)
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#setValueAt( java.lang.Object, int, int)
WITHOUT_CLASSIFICATION	@see java.beans.PropertyChangeListener#propertyChange(java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.Action#isEnabled()
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.ListModel#getElementAt(int)
WITHOUT_CLASSIFICATION	@see javax.swing.ListModel#getSize()
WITHOUT_CLASSIFICATION	@see javax.swing.ComboBoxModel#setSelectedItem(java.lang.Object)
WITHOUT_CLASSIFICATION	@see javax.swing.ComboBoxModel#getSelectedItem()
WITHOUT_CLASSIFICATION	@see javax.swing.AbstractListModel#fireContentsChanged( Object, int, int)
WITHOUT_CLASSIFICATION	@see javax.swing.AbstractListModel#fireIntervalAdded( Object, int, int)
WITHOUT_CLASSIFICATION	@see TargetListener#targetSet(TargetEvent)
WITHOUT_CLASSIFICATION	expected
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	The property value has changed so rebuild our view. @see java.beans.PropertyChangeListener#propertyChange(java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	@see TargetListener#targetAdded(TargetEvent)
WITHOUT_CLASSIFICATION	@see TargetListener#targetRemoved(TargetEvent)
WITHOUT_CLASSIFICATION	@see TargetListener#targetSet(TargetEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.Action#isEnabled()
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mouseClicked( java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mouseEntered(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mouseExited(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mousePressed(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mouseReleased( java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.DocumentListener#changedUpdate(javax.swing.event.DocumentEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.DocumentListener#removeUpdate(javax.swing.event.DocumentEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.DocumentListener#insertUpdate(javax.swing.event.DocumentEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.CaretListener#caretUpdate(javax.swing.event.CaretEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ItemListener#itemStateChanged(java.awt.event.ItemEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(ActionEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.ListCellRenderer#getListCellRendererComponent( javax.swing.JList, java.lang.Object, int, boolean, boolean)
WITHOUT_CLASSIFICATION	@see javax.swing.text.Document#getDefaultRootElement()
WITHOUT_CLASSIFICATION	@see javax.swing.text.Document#getLength()
WITHOUT_CLASSIFICATION	@see javax.swing.text.Document#render(Runnable r)
WITHOUT_CLASSIFICATION	@see javax.swing.text.Document#getText(int, int)
WITHOUT_CLASSIFICATION	@see javax.swing.ListCellRenderer#getListCellRendererComponent(javax.swing.JList, java.lang.Object, int, boolean, boolean)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed( java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.ListSelectionListener#valueChanged(javax.swing.event.ListSelectionEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.ListSelectionListener#valueChanged(javax.swing.event.ListSelectionEvent)
WITHOUT_CLASSIFICATION	@see java.beans.PropertyChangeListener#propertyChange(java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	@see java.lang.Runnable#run()
WITHOUT_CLASSIFICATION	@see javax.swing.event.DocumentListener#removeUpdate(javax.swing.event.DocumentEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.DocumentListener#insertUpdate(javax.swing.event.DocumentEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#isCellEditable(int, int)
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#getRowCount()
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#getValueAt(int, int)
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#setValueAt(java.lang.Object, int, int)
WITHOUT_CLASSIFICATION	@see java.beans.PropertyChangeListener#propertyChange(java.beans. PropertyChangeEvent)
WITHOUT_CLASSIFICATION	@see java.beans.VetoableChangeListener#vetoableChange(java.beans. PropertyChangeEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.kernel.DelayedVChangeListener#delayedVetoableChange(java. beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(ActionEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.AbstractListModel#fireIntervalAdded( Object, int, int)
WITHOUT_CLASSIFICATION	@see javax.swing.AbstractListModel#fireIntervalRemoved( Object, int, int)
WITHOUT_CLASSIFICATION	@see AbstractAction#actionPerformed(ActionEvent)
WITHOUT_CLASSIFICATION	@see java.beans.PropertyChangeListener#propertyChange(java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see org.tigris.swidgets.Orientable#setOrientation(org.tigris.swidgets.Orientation)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.DefaultListModel#contains(java.lang.Object)
WITHOUT_CLASSIFICATION	@see javax.swing.DefaultListModel#addElement(java.lang.Object)
WITHOUT_CLASSIFICATION	@see TargetListener#targetAdded(TargetEvent)
WITHOUT_CLASSIFICATION	@see TargetListener#targetRemoved(TargetEvent)
WITHOUT_CLASSIFICATION	@see TargetListener#targetSet(TargetEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.AbstractListModel#fireContentsChanged( Object, int, int)
WITHOUT_CLASSIFICATION	@see javax.swing.AbstractListModel#fireIntervalAdded( Object, int, int)
WITHOUT_CLASSIFICATION	@see javax.swing.AbstractListModel#fireIntervalRemoved( Object, int, int)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.TreeCellRenderer#getTreeCellRendererComponent( javax.swing.JTree, java.lang.Object, boolean, boolean, boolean, int, boolean)
WITHOUT_CLASSIFICATION	@see java.awt.event.FocusListener#focusLost(java.awt.event.FocusEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.CaretListener#caretUpdate(javax.swing.event.CaretEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.FocusListener#focusGained(java.awt.event.FocusEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed( java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	expected
WITHOUT_CLASSIFICATION	@see javax.swing.filechooser.FileFilter#accept(java.io.File)
WITHOUT_CLASSIFICATION	@see javax.swing.filechooser.FileFilter#getDescription()
WITHOUT_CLASSIFICATION	@see java.beans.PropertyChangeListener#propertyChange( java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	@see java.util.Enumeration#hasMoreElements()
WITHOUT_CLASSIFICATION	@see java.util.Enumeration#nextElement()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see PropertyChangeListener#propertyChange(PropertyChangeEvent)
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#tearDown()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see TestCase#tearDown()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	Here we are actually violating the test independance since we keep the DetailsPane from test to test. The reason to do this is to make it possible to run the tests with less memory requirements. Hopefully someone might eventually fix the DetailsPane so that it is garbage collected properly and this is no longer needed. @see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#runTest()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see TargetListener#targetAdded(TargetEvent)
WITHOUT_CLASSIFICATION	@see TargetListener#targetRemoved(TargetEvent)
WITHOUT_CLASSIFICATION	@see TargetListener#targetSet(TargetEvent)
WITHOUT_CLASSIFICATION	@see TargetListener#targetAdded(TargetEvent)
WITHOUT_CLASSIFICATION	@see TargetListener#targetRemoved(TargetEvent)
WITHOUT_CLASSIFICATION	@see TargetListener#targetSet(TargetEvent)
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#tearDown()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see AbstractTestActionAddDiagram#getValidNamespaceClasses()
WITHOUT_CLASSIFICATION	@see AbstractTestActionAddDiagram#getValidNamespaceClasses()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see AbstractTestActionAddDiagram#getValidNamespaceClasses()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#tearDown()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#tearDown()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#tearDown()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.MutableGraphModel#canAddEdge(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.MutableGraphModel#addNode(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.MutableGraphModel#addEdge(java.lang.Object)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	This method is overridden in order to ignore change of the y coordinate during dragging. @see org.tigris.gef.presentation.FigNode#superTranslate(int, int)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.GraphFactory#makeNode()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.GraphNodeRenderer#getFigNodeFor( org.tigris.gef.graph.GraphModel, org.tigris.gef.base.Layer, java.lang.Object, java.util.Map)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.GraphEdgeRenderer#getFigEdgeFor( org.tigris.gef.graph.GraphModel, org.tigris.gef.base.Layer, java.lang.Object, java.util.Map)
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	expected
WITHOUT_CLASSIFICATION	accessors
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	Although not generally true for GEF, for Argo we know that the layer is a LayerPerspective which knows the associated diagram
WITHOUT_CLASSIFICATION	Do nothing
WITHOUT_CLASSIFICATION	end class StartCritics
WITHOUT_CLASSIFICATION	initialized in static initializer block below
WITHOUT_CLASSIFICATION	Needs to happen after initialization is done & modules loaded
WITHOUT_CLASSIFICATION	create an anonymous class as a kind of adaptor for the cognitive System to provide proper translation/i18n.
WITHOUT_CLASSIFICATION	The reason the gui is initialized before the commands are run is that some of the commands will use the projectbrowser.
WITHOUT_CLASSIFICATION	Initialize the module loader. At least the plug-ins that provide profiles need to be initialized before the project is loaded, because some of these profile may have been set as default profiles and need to be applied to the project as soon as it has been created or loaded. The first instance of a Project is needed during the GUI initialization.
WITHOUT_CLASSIFICATION	The string <code>log4j.configuration</code> is the same string found in {@link org.apache.log4j.Configuration.DEFAULT_CONFIGURATION_FILE} but if we use the reference, then log4j configures itself and clears the system property and we never know if it was set. If it is set, then we let the static initializer in {@link Argo} perform the initialization.
WITHOUT_CLASSIFICATION	A subclass of JPanel that can act as a tab in the DetailsPane or MultiEditorPane. Added functionality:<p> Spawning: When the tab is double-clicked, this JPanel will generate a separate window of the same size and with the same contents. This is almost like "tearing off" a tab.<p> TODO: Spawning of windows disabled in spawn()<p> Title: This JPanel keeps track of its own title.<p> Icon: This JPanel keeps track of its own icon; i.e. an arrow pointing to the panel that it gives details of.<p> Orientation: This JPanel is Orientable.<p> Cloning: This JPanel may be cloned.<p> This class used to be named TabSpawnable. Renamed since it is not a Tab, but a Panel, and being spawnable is not any more its main purpose.
WITHOUT_CLASSIFICATION	accessors
WITHOUT_CLASSIFICATION	accessors
WITHOUT_CLASSIFICATION	accessors
WITHOUT_CLASSIFICATION	accessors
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	Notation events are likely to cause GEF/Swing operations, so we dispatch them on the Swing event thread as a convenience so that the receiving notationChanged() methods don't need to deal with it
WITHOUT_CLASSIFICATION	@param item the todo item @param reason the reason TODO: Use it! @return <code>true</code> if the argument was a component of this list; <code>false</code> otherwise @throws UnresolvableException unable to resolve
WITHOUT_CLASSIFICATION	Process the listeners last to first, notifying those that are interested in this event
WITHOUT_CLASSIFICATION	Process the listeners last to first, notifying those that are interested in this event
WITHOUT_CLASSIFICATION	Process the listeners last to first, notifying those that are interested in this event
WITHOUT_CLASSIFICATION	Process the listeners last to first, notifying those that are interested in this event
WITHOUT_CLASSIFICATION	issue resolution
WITHOUT_CLASSIFICATION	Lazily create the event:
WITHOUT_CLASSIFICATION	Lazily create the event:
WITHOUT_CLASSIFICATION	Lazily create the event:
WITHOUT_CLASSIFICATION	constants
WITHOUT_CLASSIFICATION	constants
WITHOUT_CLASSIFICATION	static accessors
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	@see javax.swing.tree.TreeModel#isLeaf(java.lang.Object)
WITHOUT_CLASSIFICATION	This needs to iterate to fill entire output raster if implemented return image.copyData(outRaster);
WITHOUT_CLASSIFICATION	Catch all exceptions and errors, however severe
WITHOUT_CLASSIFICATION	Notify the user that the modules in the list that are selected but not enabled were not possible to enable and that are not selected that we cannot disable. Currently we just log this. TODO: We could eventually pop up some warning window.
WITHOUT_CLASSIFICATION	if we have only one return value and without type, the return param string is ": ,", we remove it
WITHOUT_CLASSIFICATION	If the script of the Action is empty, (or only specifies arguments and no method name) then we generate a string based on a different model element:
WITHOUT_CLASSIFICATION	MMessage
WITHOUT_CLASSIFICATION	MMessage
WITHOUT_CLASSIFICATION	MMessage
WITHOUT_CLASSIFICATION	MMessage
WITHOUT_CLASSIFICATION	(MMessage)
WITHOUT_CLASSIFICATION	(MMessage)
WITHOUT_CLASSIFICATION	(MMessage)
WITHOUT_CLASSIFICATION	no state with the given name is found, so we have to reject the complete user's input
WITHOUT_CLASSIFICATION	Now let's check if the new line is already present in the old list of internal transitions; if it is, then mark the old one to be retained (i.e. do not create a new one), if it isn't, continue with parsing:
WITHOUT_CLASSIFICATION	case 1
WITHOUT_CLASSIFICATION	check for more literals (';' separated):
WITHOUT_CLASSIFICATION	@see tudresden.ocl.check.types.Type#hasState(java.lang.String)
WITHOUT_CLASSIFICATION	if save did not raise an exception and name+"#" exists move name+"#" to name+"~" this is the correct backup file
WITHOUT_CLASSIFICATION	frank: in case of exception delete name and mv name+"#" back to name if name+"#" exists this is the "rollback" to old file
WITHOUT_CLASSIFICATION	Skip the 2 lines <?xml version="1.0" encoding="UTF-8" ?> <!DOCTYPE pgml SYSTEM "pgml.dtd">
WITHOUT_CLASSIFICATION	Search all attributes found to those expected. If any don't match then turn off the found flag so that we search for the next matching tag.
WITHOUT_CLASSIFICATION	Now we're into processing each specific path item strategy. At the moment, we only know PathItemPlacement
WITHOUT_CLASSIFICATION	for compatibility with older format
WITHOUT_CLASSIFICATION	If we're about to upgrade the file lets take an archive of it first.
WITHOUT_CLASSIFICATION	No more we can do here on failure
WITHOUT_CLASSIFICATION	Write any left over bytes in the input buffer (perhaps from a partially decoded character)
WITHOUT_CLASSIFICATION	NOP
WITHOUT_CLASSIFICATION	To persist to and from zargo (zipped file) storage containing seperate xmi, argo, plgml and todo zip entries. @author Bob Tarling TODO: Review use of this against ZargoFilePersister - Bob
WITHOUT_CLASSIFICATION	Add the path of the model to the search path, so we can read dependent models
WITHOUT_CLASSIFICATION	we only need to add the classloader once and if and only if there is at least a profile in the JAR
WITHOUT_CLASSIFICATION	Testing: does not fire.
WITHOUT_CLASSIFICATION	Testing: does not fire.
WITHOUT_CLASSIFICATION	Testing: does not fire.
WITHOUT_CLASSIFICATION	Testing: does not fire.
WITHOUT_CLASSIFICATION	Testing: does not fire.
WITHOUT_CLASSIFICATION	Testing: does not fire.
WITHOUT_CLASSIFICATION	@see tudresden.ocl.parser.analysis.DepthFirstAdapter#caseAFeatureCall(tudresden.ocl.parser.node.AFeatureCall)
WITHOUT_CLASSIFICATION	@see org.argouml.profile.internal.ocl.ModelInterpreter#invokeFeature(java.util.Map, java.lang.Object, java.lang.String, java.lang.String, java.lang.Object[])
WITHOUT_CLASSIFICATION	@see org.argouml.profile.internal.ocl.ModelInterpreter#invokeFeature(java.util.Map, java.lang.Object, java.lang.String, java.lang.String, java.lang.Object[])
WITHOUT_CLASSIFICATION	TODO: isStatic in UML 2.x
WITHOUT_CLASSIFICATION	Additional Operations in 4.5.3.8
WITHOUT_CLASSIFICATION	4.5.2.13 Constraint
WITHOUT_CLASSIFICATION	4.5.2.24 Generalization
WITHOUT_CLASSIFICATION	4.5.2.28 Namespace
WITHOUT_CLASSIFICATION	Do not set buildingModel = false here, otherwise the action for selection is performed.
WITHOUT_CLASSIFICATION	prpTodo = createProperty("label.todo-pane", positions, TabToDo.class); prpProperties = createProperty("label.properties-pane", positions, TabProps.class); prpDocumentation = createProperty("label.documentation-pane", positions, TabDocumentation.class); prpStyle = createProperty("label.style-pane", positions, TabStyle.class); prpSource = createProperty("label.source-pane", positions, TabSrc.class); prpConstraints = createProperty("label.constraints-pane", positions, TabConstraints.class); prpTaggedValues = createProperty("label.tagged-values-pane", positions, TabTaggedValues.class); Property[] propertyList = new Property[] { prpTodo, prpProperties, prpDocumentation, prpStyle, prpSource, prpConstraints, prpTaggedValues, }; Arrays.sort(propertyList); top.add(new JScrollPane(new PropertyTable( propertyList, paneColumnHeader, positionColumnHeader)), BorderLayout.CENTER);
WITHOUT_CLASSIFICATION	Parse the boundary box text. Null is returned if it is empty or invalid, which causes no change. Otherwise we tell GEF we are making a change, make the change and tell GEF we've finished.
WITHOUT_CLASSIFICATION	TODO: Add double click listener
WITHOUT_CLASSIFICATION	@see javax.swing.plaf.metal.MetalTheme#getPrimary1()
WITHOUT_CLASSIFICATION	@see javax.swing.plaf.metal.MetalTheme#getPrimary1()
WITHOUT_CLASSIFICATION	if the current shortcut has been set but is void, then the current shortcut is not set --> then the default value does not change
WITHOUT_CLASSIFICATION	Only show actions for associations not already on diagram
WITHOUT_CLASSIFICATION	Only show actions for associations not already on diagram
WITHOUT_CLASSIFICATION	Only show actions for associations not already on diagram
WITHOUT_CLASSIFICATION	Only show actions for associations not already on diagram
WITHOUT_CLASSIFICATION	Only show actions for associations not already on diagram
WITHOUT_CLASSIFICATION	Only show actions for associations not already on diagram
WITHOUT_CLASSIFICATION	2. the profile configuration, holding noneditable applied profiles
WITHOUT_CLASSIFICATION	the text will be set later
WITHOUT_CLASSIFICATION	private static final StereotypeView[] stereotypeViewMap; static { stereotypeViewMap = new StereotypeView[3]; StereotypeView. stereotypeViewMap[DiagramAppearance.STEREOTYPE_VIEW_TEXTUAL] = StereotypeView.TEXTUAL; stereotypeViewMap[DiagramAppearance.STEREOTYPE_VIEW_BIG_ICON] = StereotypeView.BIG_ICON; stereotypeViewMap[DiagramAppearance.STEREOTYPE_VIEW_SMALL_ICON] = StereotypeView.SMALL_ICON; }
WITHOUT_CLASSIFICATION	This class represents all Diagrams within ArgoUML. It is based upon the GEF Diagram.<p> It adds a namespace, and the capability to delete itself when its namespace is deleted. <p> TODO: MVW: I am not sure of the following:<p> The "namespace" of the diagram is e.g. used when creating new elements that are shown on the diagram; they will have their namespace set according this. It is NOT necessarily equal to the "owner". <p> MVW: I doubt all following: The "namespace" of the diagram is e.g. used to register a listener to the UML model, to be notified if this element is removed; which will imply that this diagram has to be deleted, too. <p> Hence the namespace of e.g. a collaboration diagram should be the represented classifier or, in case of a represented operation, the classifier that owns this operation. And the namespace of the statechart diagram should be the namespace of its statemachine.
WITHOUT_CLASSIFICATION	The fix
WITHOUT_CLASSIFICATION	A binary association is not a node so reject.
WITHOUT_CLASSIFICATION	Make all the parts match the main fig
WITHOUT_CLASSIFICATION	and the stereotypes of its features
WITHOUT_CLASSIFICATION	stereotype fig covers the name fig:
WITHOUT_CLASSIFICATION	Notation settings are different since, we know that, at a minimum, the isShowPath() setting can change because with implement PathContainer, so we make sure that we have a private copy of the notation settings.
WITHOUT_CLASSIFICATION	null elements represent new constraints, which will be added to the target the first time any actual editing takes place. This is done to ensure syntactical correctness of constraints stored with the target.
WITHOUT_CLASSIFICATION	Mutators hold write lock & will deadlock if use is not thread safe
WITHOUT_CLASSIFICATION	test with a class and class diagram
WITHOUT_CLASSIFICATION	Constructor for a {@link FigClass} during file load.<p> Parent {@link org.argouml.uml.diagram.ui.FigNodeModelElement} will have created the main box {@link #getBigPort()} and its name {@link #getNameFig()} and stereotype (@link #getStereotypeFig()}. This constructor creates a box for the attributes and operations.<p> The properties of all these graphic elements are adjusted appropriately. The main boxes are all filled and have outlines. TODO: which is wrong, since the bigPort is filled, too. @param element model element to be represented by this fig. @param bounds rectangle describing bounds @param settings rendering settings
WITHOUT_CLASSIFICATION	When this is called from PGMLStackParser.attachEdges, we finished the initialization of owning pseudo element (CommentEdge)
WITHOUT_CLASSIFICATION	Do nothing by default.
WITHOUT_CLASSIFICATION	Override superclass to do nothing. Fill property cannot be changed.
WITHOUT_CLASSIFICATION	Override superclass to do nothing. Fill property cannot be changed.
WITHOUT_CLASSIFICATION	A Fig designed to be the child of some FigNode or FigEdge to display the stereotypes of the model element represented by the parent Fig. Currently, multiple stereotypes are shown stacked one on top of the other, each enclosed by guillemets.<p> The minimum width of this fig is the largest minimum width of its child figs. The minimum height of this fig is the total minimum height of its child figs.<p> The owner of this Fig is the UML element that is extended with the stereotypes. We are listening to changes to the model: addition and removal of stereotypes. <p> This fig supports showing one keyword as the first "stereotype" in the list. <p> There is no way to remove a keyword fig, once added. <p> TODO: Allow for UML2 style display where all stereotypes are displayed in the same guillemet pair and are delimited by commas. The style should be changeable by calling getOrientation(Orientation). The swidget Orientation class can be used for this. @author Bob Tarling
WITHOUT_CLASSIFICATION	The source of an association end should not be the classifier. If it is the user has drawn the wrong way round so we swap here.
WITHOUT_CLASSIFICATION	We want to maintain a minimum width for the fig. Also, add the border dimensions to the minimum space required for its contents:
WITHOUT_CLASSIFICATION	Make sure we don't try to set things smaller than the minimum
WITHOUT_CLASSIFICATION	If requested height equals needed height then do nothing; it fits exactly.
WITHOUT_CLASSIFICATION	LOG.log(Level.FINE, "Slope = " + theta / Math.PI + "PI " + theta / Math.PI 180.0);
WITHOUT_CLASSIFICATION	Test-case for the above code: Draw a class. Create a stereotype for it by clicking on the prop-panel tool, and name it. Remove the class from the diagram. Drag the class from the explorer on the diagram. Select the stereotype in the explorer, and change its name in the prop-panel to something longer. The longer name does not make the class Fig wider unless the above code is added.
WITHOUT_CLASSIFICATION	If we have no source and dest connector then we assume this is load of an old UML1.4 diagram from before this data was saved in PGML. For UML1.4 we can assume the source is first connection and destination is last connection stored in repository for this association.
WITHOUT_CLASSIFICATION	Note that "multiplicity" is what is the notation is listening for in UML1.4 "uppervalue" are listened to in UML2. It is not currently why it is not required to register for "lowerValue" also.
WITHOUT_CLASSIFICATION	Some subclasses will try to use this
WITHOUT_CLASSIFICATION	FigClass calls setBoundsImpl before we set the stereotypeFigProfileIcon
WITHOUT_CLASSIFICATION	TODO: Use per-project undo manager, not global
WITHOUT_CLASSIFICATION	TODO: Use per-project undo manager, not global
WITHOUT_CLASSIFICATION	TODO: Use per-project undo manager, not global
WITHOUT_CLASSIFICATION	Perhaps something like the following would workd. If not, then traverse up the component hierarchy to a MultEditorPane Rectangle drawingArea = Globals.curEditor().getJComponent().getVisibleRect();
WITHOUT_CLASSIFICATION	Default implementation is to do nothing
WITHOUT_CLASSIFICATION	/ Methods that implement the GraphModel itself /
WITHOUT_CLASSIFICATION	/ Methods that implement the VetoableChangeListener interface /
WITHOUT_CLASSIFICATION	Only interested in the "ownedElement" property. Either something has been added to the namespace for this model, or removed. In the latter case the "something" will be in the old value of the property, which is the collection of owned elements, and the new value will be the element import describing the model element and the model from which it was removed
WITHOUT_CLASSIFICATION	The figs for the two end nodes
WITHOUT_CLASSIFICATION	The figs for the two end nodes
WITHOUT_CLASSIFICATION	Private utility routine to work out the (positive) x coordinate of a point on an oval, given the radii and y coordinate.<p> TODO: Use this to calculate the separator lines! @param a radius in X direction @param b radius in Y direction @param y Y coordinate @return Positive X coordinate for the given Y coordinate
WITHOUT_CLASSIFICATION	the responsibility of determining if the given target is a correct one for this tab has been moved from the DetailsPane to the member tabs of the details pane. Reason for this is that the details pane is configurable and cannot know what's the correct target for some tab.
WITHOUT_CLASSIFICATION	If the diagram is empty, GEF won't write anything, leaving us with an empty (and invalid) file. Handle this case ourselves to prevent this from happening.
WITHOUT_CLASSIFICATION	NOTE: GEF's GIF writer uses Jeff Poskanzer's GIF encoder, but that saves a copy of the entire image in an internal buffer before starting work, defeating the whole purpose of our incremental rendering.
WITHOUT_CLASSIFICATION	Expressions are DataTypes, not independent model elements be careful not to reuse them
WITHOUT_CLASSIFICATION	TODO: The next text was copied - to adapt. Sets the target. If the old target is an UML Element, it also removes the model from the element listener list of the target. If the new target is an UML Element, the model is added as element listener to the new target. <p> This function is called when the user changes the target. Hence, this shall not result in any UML model changes.<p> This function looks a lot like the one in UMLComboBoxModel2. <p> As a possible future extension, we could allow listening to other model elements. @param theNewTarget the new target
WITHOUT_CLASSIFICATION	fire all of the status events
WITHOUT_CLASSIFICATION	fire all of the profile events
WITHOUT_CLASSIFICATION	verify isRelevant returns true
WITHOUT_CLASSIFICATION	DesignGoalsCM checks if the critic isRelevantToGoals of the Designer this value is always true for the Critic base class so DesignerGoal should always return true in this condition
WITHOUT_CLASSIFICATION	update the priority of the critic to be the same priority as the decision
WITHOUT_CLASSIFICATION	check that the model was initialized with one goal
WITHOUT_CLASSIFICATION	number of goals should now be 0
WITHOUT_CLASSIFICATION	Arbitrary settings - not used used for testing
WITHOUT_CLASSIFICATION	FigAssociationRole figassociationrole = new FigAssociationRole();
WITHOUT_CLASSIFICATION	initialize basic parameters that are different from Decision.UNSPEC
WITHOUT_CLASSIFICATION	verify parameters were initialized correctly by the constructor
WITHOUT_CLASSIFICATION	verify the name property was correctly updated
WITHOUT_CLASSIFICATION	following the update the priority should be equivalent to Decision.UNSPEC
WITHOUT_CLASSIFICATION	test that the category and description are correct
WITHOUT_CLASSIFICATION	update the values
WITHOUT_CLASSIFICATION	verify SnoozeOrder starts off not snoozed
WITHOUT_CLASSIFICATION	snooze and verify its been enabled
WITHOUT_CLASSIFICATION	snooze and verify its been enabled
WITHOUT_CLASSIFICATION	test with a class and class diagram
WITHOUT_CLASSIFICATION	test with a class and class diagram
WITHOUT_CLASSIFICATION	test with a class and class diagram
WITHOUT_CLASSIFICATION	pce = (PropertyChangeEvent) rxdEvent.getSource(); assertTrue("Wrong event name", pce.getPropertyName().equals( DiagramAppearance.KEY_DEFAULT_SHADOW_WIDTH.getKey())); String value = (String) pce.getOldValue(); int i = Integer.parseInt(value); assertTrue("Wrong old event value", i == 4); assertTrue("Wrong new event value", ((String) pce.getNewValue()).equals("2"));
WITHOUT_CLASSIFICATION	Change things
WITHOUT_CLASSIFICATION	Assert that the copy isn't modified when the source changes
WITHOUT_CLASSIFICATION	Assert that the copy isn't modified when the source changes
WITHOUT_CLASSIFICATION	Assert that the copy isn't modified when the source changes
WITHOUT_CLASSIFICATION	Create a different client to bind to the same supplier
WITHOUT_CLASSIFICATION	success
WITHOUT_CLASSIFICATION	success
WITHOUT_CLASSIFICATION	success
WITHOUT_CLASSIFICATION	success
WITHOUT_CLASSIFICATION	This comment was included in a previous version (before 1/2005) of the test which had this assertion commented out: ------ Interaction should not be removed when removing ClassifierRole... maybe if the last message is removed from the interaction but even then it's doubtfull since it will probably lead to backward compatibility problems in save formats. ------ but my reading of the UML 1.4 specification is that an Interaction without at least one message is definitely illegal, so MDR is doing the right thing by removing it in this case where we only have a single message, which then gets deleted. - tfm
WITHOUT_CLASSIFICATION	Get a list of UML metaclass names from the XMI document. <p> Though some of the DOM methods such as getAttributes may return null values under other conditions, in the context of this test and assuming a valid XMI file none should occur. <p> Hence there is no special checking for those abnormal cases, allowing the test to fail simply with a NullPointerException, with this comment indicating that either the input data is incorrect or the test needs to be improved.
WITHOUT_CLASSIFICATION	Test creating modelelements from a given notation, and then re-generate the notation-string again, and check if they are equal. Some of these tests are not very usefulll, since they may fail on white space differences. TODO: White space should best be ignored.
WITHOUT_CLASSIFICATION	changing the sequence only
WITHOUT_CLASSIFICATION	ok
WITHOUT_CLASSIFICATION	ok
WITHOUT_CLASSIFICATION	ok
WITHOUT_CLASSIFICATION	ok
WITHOUT_CLASSIFICATION	Make sure the contents match what we expect
WITHOUT_CLASSIFICATION	Make sure we got what we started with
WITHOUT_CLASSIFICATION	Clean up our model and the extent that we read profile in to
WITHOUT_CLASSIFICATION	expected
WITHOUT_CLASSIFICATION	TODO: the following fails due to the XMI writing saving all top level model elements and because even if there was no empty project, by creating a class, the undo mechanism in the project manager will force the creation of an empty project. assertEquals(1, profileModels.size());
WITHOUT_CLASSIFICATION	we recalculate all the activations
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
DEFECT	TODO: Huge side effect. Hoist out of parse - tfm let's load the project
DEFECT	TODO: This should only be building list up to 'index'
DEFECT	FIXME: Boundary condition at end of image for non-integral multiples of BUFFER_HEIGHT
DEFECT	TODO: We don't really want to do the following, but I'm not sure what depends on it - tfm - 20070725
DEFECT	TODO: We can't have a global "current" language NotationProviderFactory2.setCurrentLanguage(oldLanguage);
DEFECT	TODO: Use Model.getModelManagementHelper().getPathList(modelElement); TODO: This will fail with nested Models
DEFECT	TODO: We should have all the information that is required in the NotationSettings object
DEFECT	TODO: This whole block can be deleted when issue 6266 is resolved
DEFECT	Dirty fix for issue 1758 (Needs to be amended when we start supporting parameters):
DEFECT	TODO: This does not work! (MVW) Model.getFacade().setBody(expr,guard); Model.getFacade().setExpression(g,expr);
DEFECT	TODO: In this case, the properties panel is not updated with the changed expression!
DEFECT	WARNING: the OutputStream version of this doesn't work! - tfm
DEFECT	WARNING: The GEF implementation of the OutputStream version of this method doesn't work - tfm - 20070531
DEFECT	TODO: Not implemented by eUML
DEFECT	TODO: The below is not strictly correct, but should cover the case we deal with. Using a real XML parser would be better. Look for XML document has just a single root element
DEFECT	This will have problems if the smallest possible data segment is smaller than the size of the buffer needed for regex matching
DEFECT	TODO: Why is this throwing a generic runtime exception?!?!
DEFECT	TODO: This exception will be thrown during autoscrolling when the edge of the canvas is reached causing either the width or height to be "adjusted" to a negative value
DEFECT	TODO: This exception will be thrown during autoscrolling when the edge of the canvas is reached causing either the width or height to be "adjusted" to a negative value
DEFECT	Disabled since it gives various problems: e.g. the toolbar icons get too wide. Also the default does not give the new java 5.0 looks. Component tree = ProjectBrowser.getInstance(); SwingUtilities.updateComponentTreeUI(SwingUtilities.getRootPane(tree));
DEFECT	TODO: This error needs to be reported!
DEFECT	TODO: - should save and restore the last positions of the toolbars
DEFECT	TODO: Does anyone use command line? If so, localization is needed - tfm
DEFECT	TODO: We should be giving the user more direct feedback
DEFECT	TODO: Allow adding models to a diagram - issue 4172.
DEFECT	TODO: The following can be removed if selectAll gets fixed
DEFECT	TODO: Update the old and new node above this! This is issue 5079. The old and new UML namespaces are in the event, but how do we know which nodes to refresh? And how to refresh? Not necessarily the namespaces, depending on the perspective.
DEFECT	Many many of these events .. this slows things down:
DEFECT	TODO: The following rather than the above is probably the correct way to search stereo = findStereotype(obj, null, name);
DEFECT	Really ought to have a CriticException to throw here.
DEFECT	Really ought to have a CriticException to throw here.
DEFECT	TODO: This is only checking immediate siblings when it needs to be checking all imported elements both here and by our parents and also taking into account visibility
DEFECT	There is a possibility that the next step forward takes another path in this wizard. To allow for this we must destroy the path already traveled by. <p> TODO: I (Linus) would say that this is really a problem with the Wizard implementation since I believe it should be possible to explore a path in the wizard and then go back. {@inheritDoc}
DEFECT	TODO: {name} is not expanded for diagram objects
DEFECT	TODO: {name} is not expanded for diagram objects
DEFECT	TODO: algorithm is n^2 in number of nodes
DEFECT	A critic to detect when a classifier has to many operations). <p> TODO: exclude getter and setter operations from count
DEFECT	TODO: This is never executed as Ludos DI work was never finished.
DEFECT	Offset in x & y for depth perspective lines of cube. TODO: This is the same value as the member 'D'in {@link org.tigris.gef.presentation.FigCube}, but there is nothing enforcing that correspondence. Things will probably break if they don't match.
DEFECT	Class to display graphics for a UML SynchState in a diagram. <p> TODO: If the font increases, the circle should grow, too. @author pepargouml@yahoo.es
DEFECT	TODO: This is probably an undesirable side effect unless the user confirms it. Placing an element on a second diagram is going to potentially change its namespace. - tfm 20061208
DEFECT	TODO: assumes public TODO: This is probably an undesirable side effect unless the user confirms it. Placing an element on a second diagram is going to potentially change its namespace. - tfm 20061208
DEFECT	Rank the nodes depending on their level (position in hierarchy) and set their weight to achieve a proper node-sequence for the layout. Rows exceeding the maximum row width are split, if standalone nodes are available. <p> Weight the other nodes to determine their columns. <p> TODO: Weighting doesn't appear to be working as intended because multiple groups of children/specializations get intermixed in name order rather than being grouped by their parent/generalization. - tfm - 20070314
DEFECT	Status as of Nov. 2008 - Figs created, property panels exist, more work required on explorer and assumptions about models not being nested - tfm
DEFECT	TODO: This code doesn't look like it will get reached because any abstraction/realization is going to take the isAAbstraction leg of the if before it gets to this more general case. - tfm 20080508
DEFECT	TODO: make setBounds, calcBounds and updateBounds consistent
DEFECT	A Mode to interpret user input while creating a permission edge. The permission can connect any model elements including those represented by edges as well as nodes. <p> TODO: In UML 2.x, Permission becomes PackageImport and the class hierarchy has changed so that it is no longer a subtype of Dependency, so this may need to be refactored to work correctly.
DEFECT	TODO: The size of text figs, which is what we care about most, isn't computed correctly by GEF. If we got ambitious, we could recompute a proper size ourselves.
DEFECT	TODO: Why isn't this calculation for location working?
DEFECT	TODO: This should probably only update the project when the user presses Return or focus is lost
DEFECT	TODO: If ActionCopy is no longer a singleton, how shall this work?
DEFECT	TODO: Support navigability. The code below causes and exception in FigAssociationEndAnnotation.
DEFECT	TODO: We currently don't support per-fig settings for most stuff, so we can just use the defaults that we were given. settings = new DiagramSettings(renderSettings);
DEFECT	Utility function to localize the given string with help text, and show it in the status bar of the ArgoUML window. This function is used in favour of the inline call to enable later improvements; e.g. it would be possible to show a help-balloon. <p> TODO: Work this out. One matter to possibly improve: show multiple lines. @param s the given string to be localized and shown
DEFECT	TODO: Why is this clearing the name?!?! - tfm
DEFECT	TODO: The code implementing this method is from 2003 (see issue 2171) - mechanically integrated by tfmorris in May 2007. Needs to be reviewed/updated. @author Decki,Endi,Yayan, Politechnic of Bandung. Computer Departement method for changing text of Message
DEFECT	TODO: The code implementing this method is from 2003 (see issue 2171) - mechanically integrated by tfmorris in May 2007. Needs to be reviewed/updated. @author Decki,Endi,Yayan, Politechnic of Bandung. Computer Departement method for changing text of Message @param newOwner @param parameter
DEFECT	TODO: We should warn the user we have removed something - tfm
DEFECT	TODO: We don't really want this to be filled, but if it's not then the user can't double click in the compartment to add a new literal Apparently GEF thinks unfilled figs are only selectable by border setFilled(false);
DEFECT	Update attached node figures TODO: Presumably this should only happen on a add or remove event
DEFECT	TODO: Shouldn't we throw an exception here?!?!
DEFECT	TODO: Not yet working for UML2
DEFECT	TODO: Monitor is getting dismissed before layout is complete
DEFECT	TODO: This appears to expect that the UML 1.3 tag name will appear as a property name in an event, but with the UML 1.4 switch to TagDefinitions, this won't work
DEFECT	This does not work (anymore/yet?), since we never have a FigText here:
DEFECT	The next line does not work:
DEFECT	TODO: This does not work - no event arrives.
DEFECT	TODO: If this is an ordered list, then you have to add in the right location!
DEFECT	TODO: Considering all delete events to be valid like below is going to cause lots of unecessary work and some problems
DEFECT	Set the child components to the heights in the array list calculating the height of any proportional component on the fly. FIXME - This assumes that the JLabel and the component it labels have been added to the parent component consecutively.
DEFECT	TODO: The above statement also refreshes when we are not shown (to be verified) - hence not entirely correct.
DEFECT	TODO: If this is an ordered list, then you have to add in the right location!
DEFECT	TODO: Considering all delete events to be valid like below is going to cause lots of unecessary work and some problems
DEFECT	TODO: This is a tagged value name which will never trigger an event
DEFECT	TODO: correctly implement next function in the model subsystem for issue 1942:
DEFECT	Tests CopyHelper without using stereotypes. <p> The test is using the tree of objects: <pre> model / \ p1 p2 / \ class_ nestedPackage \ interface_ \ attribute </pre> TODO: This test doesn't match the MDR implementation because it expects the contents of a namespace to be copied. It is disabled until it can be fixed to run with both MDR and eUML. - tfm 20070820 @author Bogdan
DEFECT	TODO: This doesn't work, but should Collection elements = Model.getFacade().getRootElements(); Model.getUmlHelper().deleteCollection(elements); elements = Model.getFacade().getRootElements(); assertTrue("Failed to create clean environment", elements.isEmpty());
DEFECT	TODO: Except this won't work because the names are different which will cause a test in CheckUMLModelHelper to fail remap.put("Core:Permission", "Core:PackageImport");
DEFECT	TODO: Why does the next part not work?
DEFECT	FIXME: fails here. The current behavior appears intentional (ie the test is wrong) - tfm assertNull("The profile stereotype named \"" + ProfileMother.STEREOTYPE_NAME_ST + "\" shouldn't be found.", findModelElementFromNamespace( StereotypeUtility.getAvailableStereotypes(aClass), ProfileMother.STEREOTYPE_NAME_ST, profileModel));
DEFECT	FIXME: the following throws: org.argouml.model.InvalidElementException: javax.jmi.reflect.InvalidObjectException: Object with MOFID 127-0-1-1-(...)000E75 no longer exists. applicableTagDefs = tagDefCBModel.getApplicableTagDefinitions(aClass); assertNotNull("Tag Definition wasn't found in return value of " + "tagDefCBModel.getApplicableTagDefinitions(aClass), " + "after loading the project.", TestStereotypeUtility.findModelElementNamed( ProfileMother.TAG_DEFINITION_NAME_TD, applicableTagDefs));
DEFECT	TODO: Something might go wrong during processing. We don't really want to create the model element until the user releases the mouse in the place expected.
DEFECT	TODO: We can't have a global "current" language NotationProviderFactory2.setCurrentLanguage(newLanguage);
DEFECT	TODO: This works for 90 degree angles, but is suboptimal for other angles. It should reflect the angle, rather than just using a negative offset along the same vector
DEFECT	If we are not visible most likely we're being deleted. TODO: This indicates a more fundamental problem that should be investigated - tfm - 20061230
DEFECT	TODO i18n: GEF needs to pass us back the description of what is being done.
DEFECT	TODO: synchronized is required here as there can be some concurrent modification problems when drawing a call message and having that automatically draw the reply. Maybe fixing the TODO below will resolve this and the synch can go.
DEFECT	TODO: Is this next line safe? What happens if there is just one comment edge or a comment edge and a single message?
DEFECT	else if the y coordinate is outside of the classifier role, we fix the y in the max y of the classifier role. FIXME: We should increase the height of the classifier role, don't???
DEFECT	TODO: not in UML 2
DEFECT	TODO: Only occurrence of isConcurrent in UML 2.1.1 is in index it's not on the page that is indexed
DEFECT	TODO: map UML2 names to UML1.x names $NON-NLS-1$ $NON-NLS-1$
DEFECT	TODO: In UML2.x Event has no parameters. TODO: Treat ObjectFlowState (this doesn't exist anymore in UML2) and Classifier
DEFECT	Appears to be gone from UML 2.x
DEFECT	This doesn't work in UML2: both owner and property needed!
DEFECT	This triggers some warnings (in logs) because some elements are created without an owner (and eResource is null) TODO: fix this The warning log (if we would not add the EObject to a resource) would looks like this: "...WARN [AWT-EventQueue-0] Encountered deleted object during delete of..."
DEFECT	FIXME: depends on internal behavior of XmiReaderImpl. Needed for solving issue 5017.
DEFECT	TODO: This looks backwards. Left over from issue 2034?
DEFECT	if this is a feature get the owner of that feature TODO: Does anything actually make use of this? It can cause unexpected behaviour.
DEFECT	TODO: This should be using internalGetAllRealizedInterfaces()
DEFECT	TODO: Issue 6144. It is proposed to allow any paclage to return as a potential namespace. Commenting out until this is reviewed and clearly accepted by all.
DEFECT	Strange, but the Link.getConnection() returns a Collection, not a List! This is a bug, compared to the UML standard (IMHO, mvw). Hence, the LinkEnd is added to the end instead...
DEFECT	TODO: uncomment the following to get the failure. assertLoadModel(ISSUE5946_BASE_DIR + "zipped-uml14" + "/andromda-profile-datatype/3.3/andromda-profile-datatype-3.3.xml.zip", null, "testReadCompressedAndroMDAProfileFileIssue5946");
DEFECT	if we have anything or multiple elements selected, we don't do anything TODO: We need to support multiple selection. See issue 2552: http:argouml.tigris.org/issues/show_bug.cgi?id=2552
DEFECT	These next lines for the case that the current namespace is not a valid one... Which of course should not happen, but it does - see the project attached to issue 3772.
DEFECT	make it stretch vertically TODO: The curBody must notify modification
DEFECT	TODO: Removed from UML2 $NON-NLS-1$
DEFECT	TODO: Considering all delete events to be valid like below is going to cause lots of unecessary work and some problems
DEFECT	TODO: When the attribute isn't in the diagram , for exemple: select attribut by Explorer Then, the refresh isn't auto: we had to click !!
DEFECT	Builds a message within some interaction related to some assocationrole. The message is added as the last in the interaction sequence. Furthermore, the message is added as the last to the list of messages already attached to the role. Effectively, the already attached messages become predecessors of this message. TODO: This sets the activator as a side effect. However it is impossible to determine the activator at this stage as we don't yet know what the action will be of the message we're creating. See issue 5692. @param inter The Interaction. @param role The Association Role. @return The newly created Message.
DEFECT	XXX this seems to be a bug of the parser, it always requires a context
DEFECT	If we are not visible most likely we're being deleted. TODO: This indicates a more fundamental problem that should be investigated - tfm - 20061230
DEFECT	TODO: This brute force approach of updating listeners on each and every event, without checking the event type or any other information is going to cause lots of InvalidElementExceptions in subclasses implementations of updateListeners (and they won't have the event information to make their own decisions)
DEFECT	else if the y coordinate is outside of the classifier role, we fix the y in the max y of the classifier role. FIXME: We should increase the height of the classifier role, don't???
DEFECT	TODO: This doesn't perform well enough with large models to have it enabled by default. If the performance can't be improved, perhaps we can introduce a manual "find in explorer tree" action. selectAll(targets);
DEFECT	TODO: This only works if the item is visible (all its parents are expanded) getExpandedDescendants, makeVisible
DEFECT	TODO: Make the tree refresh and expand really work in all cases!
DEFECT	TODO: The code implementing this method is from 2003 (see issue 2171) - mechanically integrated by tfmorris in May 2007. Needs to be reviewed/updated. @author Decki,Endi,Yayan, Politechnic of Bandung. Computer Departement method for changing text of Message @param newOwner model element which should now be listened to
DEFECT	TODO do tests for allInstances (8.5.11), even though it is not yet supported
DEFECT	TODO: not in UML 2
DEFECT	TODO: not in UML 2
DEFECT	TODO: not in UML 2
DEFECT	TODO: not in UML 2
DEFECT	TODO: not in UML 2
DEFECT	TODO: not in UML 2
DEFECT	TODO: not in UML 2
DEFECT	Parse a transition description line of the form:<pre> "event-signature [guard-condition] / action-expression". </pre> A ";" is not interpreted as having any special meaning. <p> The "event-signature" may be one of the 4 formats:<ul> <li> ChangeEvent: "when(condition)" <li> TimeEvent: "after(duration)" <li> CallEvent: "a(parameter-list)". <li> SignalEvent: any string without (). </ul> Remark: The UML standard does not make a distinction between the syntax of a CallEvent and SignalEvent: both may have parameters between (). For simplicity and user-friendliness, we chose for this distinction. If a user wants parameters for a SignalEvent, then he may add them in the properties panels, but not on the diagram. <p> An alternative solution would be to create a CallEvent by default, and when editing an existing event, do not change the type.<p> TODO: This function fails when the event-signature contains a "[" or a "/". See issue 5983 for other cases that were a problem in the past. @param trans the transition object to which this string applies @param s the string to be parsed @return the transition object @throws ParseException when no matching [] are found
