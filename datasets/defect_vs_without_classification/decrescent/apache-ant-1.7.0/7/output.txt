/* BuildListener stuff */	WITHOUT_CLASSIFICATION	0.9999828644505694	WITHOUT_CLASSIFICATION	1.7135549430552363E-5	DEFECT
// we don't expect to find this	WITHOUT_CLASSIFICATION	0.9999871437781479	WITHOUT_CLASSIFICATION	1.2856221852246133E-5	DEFECT
// ignore expected	WITHOUT_CLASSIFICATION	0.999999903129564	WITHOUT_CLASSIFICATION	9.687043589581347E-8	DEFECT
// ignore expected	WITHOUT_CLASSIFICATION	0.999999903129564	WITHOUT_CLASSIFICATION	9.687043589581347E-8	DEFECT
// tell the build it is finished	WITHOUT_CLASSIFICATION	0.9999965210540976	WITHOUT_CLASSIFICATION	3.47894590228212E-6	DEFECT
//end class	WITHOUT_CLASSIFICATION	0.9999919120995884	WITHOUT_CLASSIFICATION	8.087900411710938E-6	DEFECT
// keep track of what operating systems are supported here.	WITHOUT_CLASSIFICATION	0.9999957050931699	WITHOUT_CLASSIFICATION	4.294906830057066E-6	DEFECT
// father and child pattern test	WITHOUT_CLASSIFICATION	0.9999995308231914	WITHOUT_CLASSIFICATION	4.6917680872467664E-7	DEFECT
// redo the test, but the 2 include patterns are inverted	WITHOUT_CLASSIFICATION	0.9999999037513327	WITHOUT_CLASSIFICATION	9.624866720577183E-8	DEFECT
// add conditions and more commands as soon as the need arises	WITHOUT_CLASSIFICATION	0.9999858097531034	WITHOUT_CLASSIFICATION	1.4190246896630205E-5	DEFECT
// give ourselves some time for the system call // to execute... tweak if you have a really over // loaded system.	WITHOUT_CLASSIFICATION	0.9997930954107012	WITHOUT_CLASSIFICATION	2.0690458929876622E-4	DEFECT
// followLinks should be true by default, but if this ever // changes we will need this line.	WITHOUT_CLASSIFICATION	0.9999999336703258	WITHOUT_CLASSIFICATION	6.632967417613473E-8	DEFECT
//testing drive letter search from root:	WITHOUT_CLASSIFICATION	0.9999979453033914	WITHOUT_CLASSIFICATION	2.054696608571868E-6	DEFECT
//if this is our context we assume there must be something here:	WITHOUT_CLASSIFICATION	0.9999977777072653	WITHOUT_CLASSIFICATION	2.2222927346760072E-6	DEFECT
// This path should contain the class files for these testcases:	WITHOUT_CLASSIFICATION	0.9999937226587715	WITHOUT_CLASSIFICATION	6.27734122847068E-6	DEFECT
// A special parent loader which is not the system class loader:	WITHOUT_CLASSIFICATION	0.9995071237294504	WITHOUT_CLASSIFICATION	4.928762705496835E-4	DEFECT
// A special parent loader which is not the system class loader:	WITHOUT_CLASSIFICATION	0.9995071237294504	WITHOUT_CLASSIFICATION	4.928762705496835E-4	DEFECT
// An AntClassLoader which is supposed to delegate to // the parent and then to the disk path:	WITHOUT_CLASSIFICATION	0.9999900182122946	WITHOUT_CLASSIFICATION	9.981787705387962E-6	DEFECT
// The intended result URLs:	WITHOUT_CLASSIFICATION	0.999998449530114	WITHOUT_CLASSIFICATION	1.5504698860749318E-6	DEFECT
// JDK 1.4: return Collections.list(e);	WITHOUT_CLASSIFICATION	0.999998084378107	WITHOUT_CLASSIFICATION	1.9156218929682206E-6	DEFECT
// override allowed on <available>	WITHOUT_CLASSIFICATION	0.9999994450690958	WITHOUT_CLASSIFICATION	5.549309042246426E-7	DEFECT
// ensure <tstamp>'s new prefix attribute is working	WITHOUT_CLASSIFICATION	0.9999754775725688	WITHOUT_CLASSIFICATION	2.4522427431229594E-5	DEFECT
// ensure <tstamp> follows the immutability rule	WITHOUT_CLASSIFICATION	0.9999999257542497	WITHOUT_CLASSIFICATION	7.424575033937019E-8	DEFECT
// ensure <condition> follows the immutability rule	WITHOUT_CLASSIFICATION	0.9999978163333145	WITHOUT_CLASSIFICATION	2.183666685425347E-6	DEFECT
// ensure <checksum> follows the immutability rule	WITHOUT_CLASSIFICATION	0.9999999780286445	WITHOUT_CLASSIFICATION	2.197135551320676E-8	DEFECT
// ensure <exec> follows the immutability rule	WITHOUT_CLASSIFICATION	0.9999997337821637	WITHOUT_CLASSIFICATION	2.662178363670249E-7	DEFECT
// ensure <pathconvert> follows the immutability rule	WITHOUT_CLASSIFICATION	0.9999999781075417	WITHOUT_CLASSIFICATION	2.1892458332663867E-8	DEFECT
/*             * throw in drive letters             */	WITHOUT_CLASSIFICATION	0.9999734451356124	WITHOUT_CLASSIFICATION	2.6554864387563263E-5	DEFECT
/*             * promised to eliminate consecutive slashes after drive letter.             */	WITHOUT_CLASSIFICATION	0.9999999053949811	WITHOUT_CLASSIFICATION	9.460501886289607E-8	DEFECT
/*             * Start with simple absolute file names.             */	WITHOUT_CLASSIFICATION	0.9999999819293384	WITHOUT_CLASSIFICATION	1.8070661615821786E-8	DEFECT
/*             * drive letters are not used, just to be considered as normal             * part of a name             */	WITHOUT_CLASSIFICATION	0.9999999954556821	WITHOUT_CLASSIFICATION	4.544317877342963E-9	DEFECT
/*         * Now test some relative file name magic.         */	WITHOUT_CLASSIFICATION	0.9999996892300231	WITHOUT_CLASSIFICATION	3.107699768363048E-7	DEFECT
// fail, because buildfile contains two targets with the same name	WITHOUT_CLASSIFICATION	0.9999982842503009	WITHOUT_CLASSIFICATION	1.71574969900956E-6	DEFECT
// overriding target from imported buildfile is allowed	WITHOUT_CLASSIFICATION	0.9999999728437555	WITHOUT_CLASSIFICATION	2.7156244468346894E-8	DEFECT
// the buildfile to use	WITHOUT_CLASSIFICATION	0.9999998276856612	WITHOUT_CLASSIFICATION	1.7231433871672198E-7	DEFECT
// call a target	WITHOUT_CLASSIFICATION	0.9999996337058862	WITHOUT_CLASSIFICATION	3.662941137908673E-7	DEFECT
//class-BFT	WITHOUT_CLASSIFICATION	0.9999941585398932	WITHOUT_CLASSIFICATION	5.841460106888792E-6	DEFECT
// override allowed on <available>	WITHOUT_CLASSIFICATION	0.9999994450690958	WITHOUT_CLASSIFICATION	5.549309042246426E-7	DEFECT
// ignore event	WITHOUT_CLASSIFICATION	0.9999996674631604	WITHOUT_CLASSIFICATION	3.325368396167084E-7	DEFECT
// Check it's a read-only map.	WITHOUT_CLASSIFICATION	0.9999994872773241	WITHOUT_CLASSIFICATION	5.127226757747529E-7	DEFECT
// Check it's a read-only map.	WITHOUT_CLASSIFICATION	0.9999994872773241	WITHOUT_CLASSIFICATION	5.127226757747529E-7	DEFECT
/*         * JUnit 3.7 adds a getName method to TestCase - so we now         * have a name attribute in IntrospectionHelperTest if we run         * under JUnit 3.7 but not in earlier versions.         *         * Simply add it here and remove it after the tests.         */	WITHOUT_CLASSIFICATION	0.9999876842973805	WITHOUT_CLASSIFICATION	1.2315702619545568E-5	DEFECT
// addConfigured(Hashtable) should come before addConfigured(Map)	WITHOUT_CLASSIFICATION	0.9999991555578861	WITHOUT_CLASSIFICATION	8.444421138749857E-7	DEFECT
// INVALID extension point	WITHOUT_CLASSIFICATION	0.9999976508010674	WITHOUT_CLASSIFICATION	2.3491989326064157E-6	DEFECT
// INVALID extension point	WITHOUT_CLASSIFICATION	0.9999976508010674	WITHOUT_CLASSIFICATION	2.3491989326064157E-6	DEFECT
// Valid extension point	WITHOUT_CLASSIFICATION	0.9999989353402786	WITHOUT_CLASSIFICATION	1.064659721457169E-6	DEFECT
// Valid extension point, more derived than Map above, but *after* it!	WITHOUT_CLASSIFICATION	0.9999959512802884	WITHOUT_CLASSIFICATION	4.048719711669658E-6	DEFECT
// IntrospectionHelperTest	WITHOUT_CLASSIFICATION	0.9999998026079002	WITHOUT_CLASSIFICATION	1.9739209989398744E-7	DEFECT
// make sure we do not get a NPE	WITHOUT_CLASSIFICATION	0.999999726499879	WITHOUT_CLASSIFICATION	2.735001209700353E-7	DEFECT
// use an anonymous subclass since ProjectComponent is abstract	WITHOUT_CLASSIFICATION	0.9999999067842467	WITHOUT_CLASSIFICATION	9.321575331847949E-8	DEFECT
// ------------------------------------------------------ //   Helper methods // -----------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999963600884786	WITHOUT_CLASSIFICATION	3.6399115215408655E-6	DEFECT
/* I wrote the testcases in one java file because I want also to test the * combined behaviour (see end of the class).*/	WITHOUT_CLASSIFICATION	0.9999968596010896	WITHOUT_CLASSIFICATION	3.1403989104422474E-6	DEFECT
// check defaults	WITHOUT_CLASSIFICATION	0.9999999907273911	WITHOUT_CLASSIFICATION	9.27260878714976E-9	DEFECT
// check defaults	WITHOUT_CLASSIFICATION	0.9999999907273911	WITHOUT_CLASSIFICATION	9.27260878714976E-9	DEFECT
// check build.compiler provides defaults	WITHOUT_CLASSIFICATION	0.9999998868050162	WITHOUT_CLASSIFICATION	1.1319498374672752E-7	DEFECT
// setUserProperty to override system properties	WITHOUT_CLASSIFICATION	0.999999837843624	WITHOUT_CLASSIFICATION	1.6215637596778218E-7	DEFECT
// check attribute overrides build.compiler	WITHOUT_CLASSIFICATION	0.9999999943222082	WITHOUT_CLASSIFICATION	5.677791718529933E-9	DEFECT
// check attribute overrides build.compiler	WITHOUT_CLASSIFICATION	0.9999999943222082	WITHOUT_CLASSIFICATION	5.677791718529933E-9	DEFECT
// some database keys, see #getProperties(int)	WITHOUT_CLASSIFICATION	0.9999999013357845	WITHOUT_CLASSIFICATION	9.866421541234893E-8	DEFECT
// keys used in properties.	WITHOUT_CLASSIFICATION	0.9999996114888915	WITHOUT_CLASSIFICATION	3.885111084226592E-7	DEFECT
//neither	WITHOUT_CLASSIFICATION	0.9999942458318493	WITHOUT_CLASSIFICATION	5.754168150651638E-6	DEFECT
/*     * PR 11100     */	WITHOUT_CLASSIFICATION	0.999998240081704	WITHOUT_CLASSIFICATION	1.7599182960065134E-6	DEFECT
// simple test to ensure that the caching does work...	WITHOUT_CLASSIFICATION	0.9999338548891092	WITHOUT_CLASSIFICATION	6.614511089084502E-5	DEFECT
// 2nd run..	WITHOUT_CLASSIFICATION	0.9999949683413228	WITHOUT_CLASSIFICATION	5.031658677163253E-6	DEFECT
// the driver must still be cached.	WITHOUT_CLASSIFICATION	0.9999999575214111	WITHOUT_CLASSIFICATION	4.24785889285651E-8	DEFECT
// look for the driver path...	WITHOUT_CLASSIFICATION	0.9999958044019888	WITHOUT_CLASSIFICATION	4.195598011247105E-6	DEFECT
//file time checks for java1.2+	WITHOUT_CLASSIFICATION	0.9999995048318058	WITHOUT_CLASSIFICATION	4.951681941669157E-7	DEFECT
//only test on java1.5+	WITHOUT_CLASSIFICATION	0.9999992326588912	WITHOUT_CLASSIFICATION	7.673411087484601E-7	DEFECT
// AntLikeTasksAtTopLevelTest	WITHOUT_CLASSIFICATION	0.9999999415201222	WITHOUT_CLASSIFICATION	5.847987794105313E-8	DEFECT
//file length checks rely on touch generating a zero byte file	WITHOUT_CLASSIFICATION	0.9999987168111796	WITHOUT_CLASSIFICATION	1.283188820403978E-6	DEFECT
// no-op: not a real business error	WITHOUT_CLASSIFICATION	0.999949275503041	WITHOUT_CLASSIFICATION	5.072449695909538E-5	DEFECT
//dont look for much text here as it is vendor and version dependent	WITHOUT_CLASSIFICATION	0.9999928855723491	WITHOUT_CLASSIFICATION	7.114427650921979E-6	DEFECT
// end of try-catch	WITHOUT_CLASSIFICATION	0.9999997124096464	WITHOUT_CLASSIFICATION	2.875903536478853E-7	DEFECT
// end of try-catch	WITHOUT_CLASSIFICATION	0.9999997124096464	WITHOUT_CLASSIFICATION	2.875903536478853E-7	DEFECT
/*     * PR 11100     */	WITHOUT_CLASSIFICATION	0.999998240081704	WITHOUT_CLASSIFICATION	1.7599182960065134E-6	DEFECT
/*     * PR 38973     */	WITHOUT_CLASSIFICATION	0.9999979473164402	WITHOUT_CLASSIFICATION	2.052683559741925E-6	DEFECT
/*     * PR 11100     */	WITHOUT_CLASSIFICATION	0.999998240081704	WITHOUT_CLASSIFICATION	1.7599182960065134E-6	DEFECT
/*     * PR 16213     */	WITHOUT_CLASSIFICATION	0.999998456153811	WITHOUT_CLASSIFICATION	1.5438461889303964E-6	DEFECT
/*     * PR 38973     */	WITHOUT_CLASSIFICATION	0.9999979473164402	WITHOUT_CLASSIFICATION	2.052683559741925E-6	DEFECT
/*     * PR 21996     */	WITHOUT_CLASSIFICATION	0.9999972841705678	WITHOUT_CLASSIFICATION	2.7158294321958822E-6	DEFECT
/*     * PR 10504     */	WITHOUT_CLASSIFICATION	0.9999974585159368	WITHOUT_CLASSIFICATION	2.5414840632515684E-6	DEFECT
/*     * PR 20969     */	WITHOUT_CLASSIFICATION	0.9999944046259753	WITHOUT_CLASSIFICATION	5.5953740246758955E-6	DEFECT
// can't access the booleans in MyPrinter here (even if they // were static) since the MyPrinter instance that was used in // the test has likely been loaded via a different classloader // than this class.  Therefore we make the printer assert its // state and only check for the tail invocation.	WITHOUT_CLASSIFICATION	0.9999999996912637	WITHOUT_CLASSIFICATION	3.087362303927531E-10	DEFECT
// should get no output at all	WITHOUT_CLASSIFICATION	0.9999992566580088	WITHOUT_CLASSIFICATION	7.433419911102274E-7	DEFECT
// should get no output at all	WITHOUT_CLASSIFICATION	0.9999992566580088	WITHOUT_CLASSIFICATION	7.433419911102274E-7	DEFECT
// should get no output at all	WITHOUT_CLASSIFICATION	0.9999992566580088	WITHOUT_CLASSIFICATION	7.433419911102274E-7	DEFECT
// should get no output at all	WITHOUT_CLASSIFICATION	0.9999992566580088	WITHOUT_CLASSIFICATION	7.433419911102274E-7	DEFECT
//this call should succeed as unless overrides if	WITHOUT_CLASSIFICATION	0.9999985482781422	WITHOUT_CLASSIFICATION	1.451721857774395E-6	DEFECT
// test that the watchdog ends the process	WITHOUT_CLASSIFICATION	0.9999983750419081	WITHOUT_CLASSIFICATION	1.624958091847132E-6	DEFECT
// test that the watchdog ends the process	WITHOUT_CLASSIFICATION	0.9999983750419081	WITHOUT_CLASSIFICATION	1.624958091847132E-6	DEFECT
// and a little shorter	WITHOUT_CLASSIFICATION	0.999999633355862	WITHOUT_CLASSIFICATION	3.666441380539625E-7	DEFECT
// test that the watchdog ends the process	WITHOUT_CLASSIFICATION	0.9999983750419081	WITHOUT_CLASSIFICATION	1.624958091847132E-6	DEFECT
// target must be specified	WITHOUT_CLASSIFICATION	0.9999999997629869	WITHOUT_CLASSIFICATION	2.370130226142482E-10	DEFECT
// Should fail since a recursion will occur...	WITHOUT_CLASSIFICATION	0.999706202346158	WITHOUT_CLASSIFICATION	2.937976538419164E-4	DEFECT
// a rather convoluted equals() test	WITHOUT_CLASSIFICATION	0.9999999902915171	WITHOUT_CLASSIFICATION	9.70848284985756E-9	DEFECT
// <path> swallows the basedir, it seems //assertTrue(!getProject().resolveFile("A").exists());	WITHOUT_CLASSIFICATION	0.9999994775403979	WITHOUT_CLASSIFICATION	5.224596021534804E-7	DEFECT
// allow this as imported in targets are only tested when a target is run	WITHOUT_CLASSIFICATION	0.9999999880467396	WITHOUT_CLASSIFICATION	1.1953260424804883E-8	DEFECT
// deactivate this test as imports within targets are not allowed	WITHOUT_CLASSIFICATION	0.9999999846266148	WITHOUT_CLASSIFICATION	1.537338524967868E-8	DEFECT
// Running on Windows or something, so skip it.	WITHOUT_CLASSIFICATION	0.9999970936784112	WITHOUT_CLASSIFICATION	2.906321588720537E-6	DEFECT
// remove log file from testSpawn	WITHOUT_CLASSIFICATION	0.9999990113371746	WITHOUT_CLASSIFICATION	9.886628253665187E-7	DEFECT
// this is guaranteed by FileUtils#createTempFile	WITHOUT_CLASSIFICATION	0.999999541446441	WITHOUT_CLASSIFICATION	4.585535590719139E-7	DEFECT
// let's be nice with the next generation of developers	WITHOUT_CLASSIFICATION	0.9999988575571713	WITHOUT_CLASSIFICATION	1.1424428286895466E-6	DEFECT
//executeTarget("setup"); //commented out for performance while target is empty	WITHOUT_CLASSIFICATION	0.9999999667331504	WITHOUT_CLASSIFICATION	3.326684956256406E-8	DEFECT
// target // file // exptected string	WITHOUT_CLASSIFICATION	0.9999999972538233	WITHOUT_CLASSIFICATION	2.746176769513811E-9	DEFECT
// END class ManifestClassPathTest	WITHOUT_CLASSIFICATION	0.999999473588724	WITHOUT_CLASSIFICATION	5.264112759070385E-7	DEFECT
//      assertTrue("return code is invalid: " + retCode, retCode!=0);	WITHOUT_CLASSIFICATION	0.999999839257958	WITHOUT_CLASSIFICATION	1.607420419535721E-7	DEFECT
// test a process that runs and failed	WITHOUT_CLASSIFICATION	0.9999997485859656	WITHOUT_CLASSIFICATION	2.514140343788691E-7	DEFECT
// process should abort	WITHOUT_CLASSIFICATION	0.999999781779423	WITHOUT_CLASSIFICATION	2.1822057703915397E-7	DEFECT
// I assume that starting this takes less than TIME_OUT/2 ms...	WITHOUT_CLASSIFICATION	0.9999939191473414	WITHOUT_CLASSIFICATION	6.080852658573057E-6	DEFECT
// wait for TIME_OUT/2, there should be about TIME_OUT/2 ms remaining before timeout	WITHOUT_CLASSIFICATION	0.9999928003351165	WITHOUT_CLASSIFICATION	7.199664883470702E-6	DEFECT
// now stop the watchdog.	WITHOUT_CLASSIFICATION	0.9999999683257554	WITHOUT_CLASSIFICATION	3.167424444555887E-8	DEFECT
// wait for the thread to die, should be the end of the process	WITHOUT_CLASSIFICATION	0.9999885137848551	WITHOUT_CLASSIFICATION	1.1486215144932673E-5	DEFECT
// process should be dead and well finished	WITHOUT_CLASSIFICATION	0.9999999875349211	WITHOUT_CLASSIFICATION	1.2465078964381745E-8	DEFECT
// We have to compare the decompressed content instead:	WITHOUT_CLASSIFICATION	0.9999996961668731	WITHOUT_CLASSIFICATION	3.038331268623162E-7	DEFECT
//no point in setting a message	WITHOUT_CLASSIFICATION	0.9999988750181524	WITHOUT_CLASSIFICATION	1.1249818474907907E-6	DEFECT
// this is guaranteed by FileUtils#createTempFile	WITHOUT_CLASSIFICATION	0.999999541446441	WITHOUT_CLASSIFICATION	4.585535590719139E-7	DEFECT
// make the spawned process run 4 seconds	WITHOUT_CLASSIFICATION	0.9999993623928879	WITHOUT_CLASSIFICATION	6.376071121169836E-7	DEFECT
// this loop runs parallel to the build	WITHOUT_CLASSIFICATION	0.9999982859622903	WITHOUT_CLASSIFICATION	1.7140377096330946E-6	DEFECT
// security	WITHOUT_CLASSIFICATION	0.9999996221384082	WITHOUT_CLASSIFICATION	3.7786159182926084E-7	DEFECT
// time of the build in milli seconds	WITHOUT_CLASSIFICATION	0.9999923041336825	WITHOUT_CLASSIFICATION	7.695866317507673E-6	DEFECT
// Nothing specified -> Fail	WITHOUT_CLASSIFICATION	0.9999999983942216	WITHOUT_CLASSIFICATION	1.6057783507365103E-9	DEFECT
// Only property specified -> Fail	WITHOUT_CLASSIFICATION	0.999999862198836	WITHOUT_CLASSIFICATION	1.3780116414034448E-7	DEFECT
// Only file specified -> Fail	WITHOUT_CLASSIFICATION	0.999999955415198	WITHOUT_CLASSIFICATION	4.458480190929821E-8	DEFECT
// file does exist -> property 'test' == 'true'	WITHOUT_CLASSIFICATION	0.9999988320466715	WITHOUT_CLASSIFICATION	1.1679533285067861E-6	DEFECT
// resource doesn't exist -> property 'test' == null	WITHOUT_CLASSIFICATION	0.9999914625074358	WITHOUT_CLASSIFICATION	8.53749256416094E-6	DEFECT
// resource does exist -> property 'test' == 'true'	WITHOUT_CLASSIFICATION	0.9999978634324844	WITHOUT_CLASSIFICATION	2.1365675154893386E-6	DEFECT
// class doesn't exist -> property 'test' == null	WITHOUT_CLASSIFICATION	0.9999222717135402	WITHOUT_CLASSIFICATION	7.772828645982721E-5	DEFECT
// class does exist -> property 'test' == 'true'	WITHOUT_CLASSIFICATION	0.9999889566664069	WITHOUT_CLASSIFICATION	1.1043333593169394E-5	DEFECT
// All three specified but class missing -> null	WITHOUT_CLASSIFICATION	0.9999995156253721	WITHOUT_CLASSIFICATION	4.84374627901794E-7	DEFECT
// Specified property-name is "" -> true	WITHOUT_CLASSIFICATION	0.9999998964683777	WITHOUT_CLASSIFICATION	1.0353162226251172E-7	DEFECT
// Specified file is "" -> invalid files do not exist	WITHOUT_CLASSIFICATION	0.9999999777013219	WITHOUT_CLASSIFICATION	2.2298678160524073E-8	DEFECT
// Specified file is "" actually a directory, so it should pass	WITHOUT_CLASSIFICATION	0.999998398650272	WITHOUT_CLASSIFICATION	1.6013497279660899E-6	DEFECT
// Specified resource is "" -> can such a thing exist?	WITHOUT_CLASSIFICATION	0.9999999463593435	WITHOUT_CLASSIFICATION	5.364065647315711E-8	DEFECT
/*     * returns non null IBM JDK 1.3 Linux     */	WITHOUT_CLASSIFICATION	0.9999752858318626	WITHOUT_CLASSIFICATION	2.471416813754117E-5	DEFECT
// Specified dir is "" -> this is the current directory and should // always exist	WITHOUT_CLASSIFICATION	0.9999995267718275	WITHOUT_CLASSIFICATION	4.732281725783266E-7	DEFECT
// Specified dir is "../taskdefs" -> should exist since it's the // location of the buildfile used...	WITHOUT_CLASSIFICATION	0.9999998196280219	WITHOUT_CLASSIFICATION	1.8037197802117034E-7	DEFECT
// Specified dir is "../this_dir_should_never_exist" -> null	WITHOUT_CLASSIFICATION	0.9999997269469539	WITHOUT_CLASSIFICATION	2.7305304600393374E-7	DEFECT
// Invalid type specified	WITHOUT_CLASSIFICATION	0.9999999258796973	WITHOUT_CLASSIFICATION	7.412030278456288E-8	DEFECT
// Core class that exists in system classpath is ignored	WITHOUT_CLASSIFICATION	0.9999973190814019	WITHOUT_CLASSIFICATION	2.680918598042209E-6	DEFECT
// Core class that exists in system classpath is not ignored with ignoresystemclass="false"	WITHOUT_CLASSIFICATION	0.9998931412079689	WITHOUT_CLASSIFICATION	1.0685879203109109E-4	DEFECT
// Core class that exists in system classpath is not ignored with default ignoresystemclasses value	WITHOUT_CLASSIFICATION	0.9999835857617234	WITHOUT_CLASSIFICATION	1.6414238276588722E-5	DEFECT
// Class is found in specified classpath	WITHOUT_CLASSIFICATION	0.9999996693796301	WITHOUT_CLASSIFICATION	3.3062036982435205E-7	DEFECT
// File is not found in specified filepath	WITHOUT_CLASSIFICATION	0.9999995876998129	WITHOUT_CLASSIFICATION	4.123001871243917E-7	DEFECT
// test when file begins with basedir twice	WITHOUT_CLASSIFICATION	0.9999941439703237	WITHOUT_CLASSIFICATION	5.856029676190084E-6	DEFECT
// test for searching parents	WITHOUT_CLASSIFICATION	0.999999804385954	WITHOUT_CLASSIFICATION	1.956140459318625E-7	DEFECT
// test for not searching parents	WITHOUT_CLASSIFICATION	0.9999959589411169	WITHOUT_CLASSIFICATION	4.0410588830763085E-6	DEFECT
// Output the default excludes	WITHOUT_CLASSIFICATION	0.9999999825622575	WITHOUT_CLASSIFICATION	1.743774247293206E-8	DEFECT
// adding something to the excludes'	WITHOUT_CLASSIFICATION	0.9999991898027564	WITHOUT_CLASSIFICATION	8.101972437480905E-7	DEFECT
// removing something from the defaults	WITHOUT_CLASSIFICATION	0.9999999453014823	WITHOUT_CLASSIFICATION	5.469851772290266E-8	DEFECT
//CVS missing	WITHOUT_CLASSIFICATION	0.9999977230466698	WITHOUT_CLASSIFICATION	2.2769533302604765E-6	DEFECT
// target must be specified	WITHOUT_CLASSIFICATION	0.9999999997629869	WITHOUT_CLASSIFICATION	2.370130226142482E-10	DEFECT
// We try to delete the directory created in CopydirTest	WITHOUT_CLASSIFICATION	0.9999999993555829	WITHOUT_CLASSIFICATION	6.444170823145054E-10	DEFECT
// check that both arrays have the same size	WITHOUT_CLASSIFICATION	0.9999997905780194	WITHOUT_CLASSIFICATION	2.0942198066762516E-7	DEFECT
//instance variable to allow cleanup	WITHOUT_CLASSIFICATION	0.9999999406298075	WITHOUT_CLASSIFICATION	5.93701924242937E-8	DEFECT
//ignored	WITHOUT_CLASSIFICATION	0.9999974858493598	WITHOUT_CLASSIFICATION	2.5141506402286677E-6	DEFECT
// What's the working directory?  If local, then its the // folder of the input file.  Otherwise, its the "current" dir..	WITHOUT_CLASSIFICATION	0.9999896773982568	WITHOUT_CLASSIFICATION	1.0322601743243865E-5	DEFECT
// Set a property on the project to make sure that loading // a property with the same name from an xml file will // *not* change it.	WITHOUT_CLASSIFICATION	0.9999973923072663	WITHOUT_CLASSIFICATION	2.6076927336407053E-6	DEFECT
//printProperties(p.getProperties());	WITHOUT_CLASSIFICATION	0.9999976869861891	WITHOUT_CLASSIFICATION	2.3130138108962477E-6	DEFECT
// Every key identified by the Properties must have been loaded.	WITHOUT_CLASSIFICATION	0.9999997608761453	WITHOUT_CLASSIFICATION	2.39123854672534E-7	DEFECT
// The property is the name of a file.  We are testing // a location attribute, so we need to resolve the given // file name in the provided folder.	WITHOUT_CLASSIFICATION	0.9999999308042384	WITHOUT_CLASSIFICATION	6.919576157505047E-8	DEFECT
// Substitute .xml with .properties	WITHOUT_CLASSIFICATION	0.9999999182706341	WITHOUT_CLASSIFICATION	8.172936594439629E-8	DEFECT
// basedir of subant/subant-test1/subant.xml is .. // therefore we expect here the subant/subant-test1 subdirectory	WITHOUT_CLASSIFICATION	0.9999950929371064	WITHOUT_CLASSIFICATION	4.907062893564411E-6	DEFECT
// Output an empty String	WITHOUT_CLASSIFICATION	0.9999998057496692	WITHOUT_CLASSIFICATION	1.942503308569615E-7	DEFECT
// Output 'OUTPUT OF ECHO'	WITHOUT_CLASSIFICATION	0.9999999038606623	WITHOUT_CLASSIFICATION	9.613933777057158E-8	DEFECT
/*          * @param message         */	WITHOUT_CLASSIFICATION	0.9999998869719491	WITHOUT_CLASSIFICATION	1.1302805092422025E-7	DEFECT
// make sure that the parsing does not break	WITHOUT_CLASSIFICATION	0.9996246976521588	WITHOUT_CLASSIFICATION	3.753023478411663E-4	DEFECT
// where the name contains <>	WITHOUT_CLASSIFICATION	0.9999995329784901	WITHOUT_CLASSIFICATION	4.6702150997127963E-7	DEFECT
// where only an address is supplied	WITHOUT_CLASSIFICATION	0.9999987735364068	WITHOUT_CLASSIFICATION	1.2264635932387839E-6	DEFECT
// Tests property element, using XML schema properties as an example.	WITHOUT_CLASSIFICATION	0.999999272619022	WITHOUT_CLASSIFICATION	7.273809779553337E-7	DEFECT
// should print "panic: Cannot find importVocab file 'JavaTokenTypes.txt'" // since it needs to run java.g first before java.tree.g	WITHOUT_CLASSIFICATION	0.9999891703391343	WITHOUT_CLASSIFICATION	1.0829660865773656E-5	DEFECT
// execute	WITHOUT_CLASSIFICATION	0.9999977565093217	WITHOUT_CLASSIFICATION	2.2434906784164718E-6	DEFECT
// override some of the code so we can test the handling of the // return code only.	WITHOUT_CLASSIFICATION	0.9999999738149193	WITHOUT_CLASSIFICATION	2.6185080680047686E-8	DEFECT
// ask ant to update the properties...	WITHOUT_CLASSIFICATION	0.9999994706993734	WITHOUT_CLASSIFICATION	5.293006265227189E-7	DEFECT
// to override	WITHOUT_CLASSIFICATION	0.999999513606421	WITHOUT_CLASSIFICATION	4.863935790051767E-7	DEFECT
// just to be sure	WITHOUT_CLASSIFICATION	0.9999999945616512	WITHOUT_CLASSIFICATION	5.438348732182053E-9	DEFECT
// just to be sure	WITHOUT_CLASSIFICATION	0.9999999945616512	WITHOUT_CLASSIFICATION	5.438348732182053E-9	DEFECT
// read in the file	WITHOUT_CLASSIFICATION	0.9999995500533442	WITHOUT_CLASSIFICATION	4.4994665580191967E-7	DEFECT
// found the property we set - it's good.	WITHOUT_CLASSIFICATION	0.9999565678425673	WITHOUT_CLASSIFICATION	4.343215743267668E-5	DEFECT
// else	WITHOUT_CLASSIFICATION	0.9999998372033579	WITHOUT_CLASSIFICATION	1.6279664198054553E-7	DEFECT
// else	WITHOUT_CLASSIFICATION	0.9999998372033579	WITHOUT_CLASSIFICATION	1.6279664198054553E-7	DEFECT
// ReplaceRegExpTest	WITHOUT_CLASSIFICATION	0.9999998730974743	WITHOUT_CLASSIFICATION	1.269025257351872E-7	DEFECT
// test for 10 consecutives transform	WITHOUT_CLASSIFICATION	0.9999999676663917	WITHOUT_CLASSIFICATION	3.233360846339487E-8	DEFECT
//java keywords are not special	WITHOUT_CLASSIFICATION	0.9999939172805119	WITHOUT_CLASSIFICATION	6.082719488169248E-6	DEFECT
//underscores go in front of invalid start chars	WITHOUT_CLASSIFICATION	0.9999982550999579	WITHOUT_CLASSIFICATION	1.7449000421194096E-6	DEFECT
//underscores at the front get an underscore too	WITHOUT_CLASSIFICATION	0.9999204433347599	WITHOUT_CLASSIFICATION	7.955666524010165E-5	DEFECT
//non java char at start => underscore then the the _hex value	WITHOUT_CLASSIFICATION	0.9999989288316592	WITHOUT_CLASSIFICATION	1.0711683407543099E-6	DEFECT
//and paths are stripped	WITHOUT_CLASSIFICATION	0.9999994735499227	WITHOUT_CLASSIFICATION	5.26450077376862E-7	DEFECT
/** * Tests the {@link XSLTProcess} task. * XXX merge with {@link StyleTest}? * @since Ant 1.5 */	WITHOUT_CLASSIFICATION	0.9999854503721278	WITHOUT_CLASSIFICATION	1.4549627872192888E-5	DEFECT
// byte - byte compare	WITHOUT_CLASSIFICATION	0.9999972978996687	WITHOUT_CLASSIFICATION	2.7021003313431745E-6	DEFECT
// avoid endless loop	WITHOUT_CLASSIFICATION	0.9999999165867016	WITHOUT_CLASSIFICATION	8.341329834015045E-8	DEFECT
// those would fail because of the way BuildFileTest captures output	WITHOUT_CLASSIFICATION	0.9999944629188021	WITHOUT_CLASSIFICATION	5.537081197797607E-6	DEFECT
//To change body of implemented methods use File | Settings | File Templates.	WITHOUT_CLASSIFICATION	0.999999844643045	WITHOUT_CLASSIFICATION	1.5535695502844276E-7	DEFECT
// tests one the file object	WITHOUT_CLASSIFICATION	0.999999928262391	WITHOUT_CLASSIFICATION	7.173760904685302E-8	DEFECT
// father and child pattern test	WITHOUT_CLASSIFICATION	0.9999995308231914	WITHOUT_CLASSIFICATION	4.6917680872467664E-7	DEFECT
// redo the test, but the 2 include patterns are inverted	WITHOUT_CLASSIFICATION	0.9999999037513327	WITHOUT_CLASSIFICATION	9.624866720577183E-8	DEFECT
// end of try-catch	WITHOUT_CLASSIFICATION	0.9999997124096464	WITHOUT_CLASSIFICATION	2.875903536478853E-7	DEFECT
// tests one the file object	WITHOUT_CLASSIFICATION	0.999999928262391	WITHOUT_CLASSIFICATION	7.173760904685302E-8	DEFECT
// On junit3 this is a FAILURE, on junit4 this is an ERROR	WITHOUT_CLASSIFICATION	0.9999935404103397	WITHOUT_CLASSIFICATION	6.4595896602972045E-6	DEFECT
// conversion to URL via FileUtils like in XMLResultAggregator, not as suggested in the bug report	WITHOUT_CLASSIFICATION	0.9998771710336626	WITHOUT_CLASSIFICATION	1.2282896633740816E-4	DEFECT
// conversion to URL via FileUtils like in XMLResultAggregator, not as suggested in the bug report	WITHOUT_CLASSIFICATION	0.9998771710336626	WITHOUT_CLASSIFICATION	1.2282896633740816E-4	DEFECT
// conversion to URL via FileUtils like in XMLResultAggregator, not as suggested in the bug report	WITHOUT_CLASSIFICATION	0.9998771710336626	WITHOUT_CLASSIFICATION	1.2282896633740816E-4	DEFECT
// mandatory constructor	WITHOUT_CLASSIFICATION	0.9999996423320047	WITHOUT_CLASSIFICATION	3.5766799533613717E-7	DEFECT
// check that a suite generates no errors	WITHOUT_CLASSIFICATION	0.9999998332631127	WITHOUT_CLASSIFICATION	1.6673688728127937E-7	DEFECT
// check that having no suite generates no errors	WITHOUT_CLASSIFICATION	0.9999999067023572	WITHOUT_CLASSIFICATION	9.32976427951425E-8	DEFECT
// check that something which is not a testcase generates no errors // at first even though this is incorrect.	WITHOUT_CLASSIFICATION	0.999978524066057	WITHOUT_CLASSIFICATION	2.147593394295502E-5	DEFECT
// check that an invalid suite generates an error.	WITHOUT_CLASSIFICATION	0.9999997340006331	WITHOUT_CLASSIFICATION	2.6599936684037374E-7	DEFECT
// JUnit3 test //assertEquals(runner.getFormatter().getError(), JUnitTestRunner.FAILURES, runner.getRetCode());	WITHOUT_CLASSIFICATION	0.9999986518018993	WITHOUT_CLASSIFICATION	1.3481981007445163E-6	DEFECT
// On junit3 this is a FAILURE, on junit4 this is an ERROR	WITHOUT_CLASSIFICATION	0.9999935404103397	WITHOUT_CLASSIFICATION	6.4595896602972045E-6	DEFECT
/*          * @param event the build event that is being logged.         */	WITHOUT_CLASSIFICATION	0.9999986769530091	WITHOUT_CLASSIFICATION	1.3230469908250546E-6	DEFECT
// check that an exception in the constructor is noticed	WITHOUT_CLASSIFICATION	0.9999999071458396	WITHOUT_CLASSIFICATION	9.285416036061414E-8	DEFECT
// the test runner that wrap the dummy formatter that interests us	WITHOUT_CLASSIFICATION	0.9999983039666972	WITHOUT_CLASSIFICATION	1.6960333027843214E-6	DEFECT
// use the classloader that loaded this class otherwise // it will not be able to run inner classes if this test // is ran in non-forked mode.	WITHOUT_CLASSIFICATION	0.9999999588967996	WITHOUT_CLASSIFICATION	4.1103200337707654E-8	DEFECT
// dummy formatter just to catch the error	WITHOUT_CLASSIFICATION	0.999999963385714	WITHOUT_CLASSIFICATION	3.661428604473892E-8	DEFECT
// end of try-catch	WITHOUT_CLASSIFICATION	0.9999997124096464	WITHOUT_CLASSIFICATION	2.875903536478853E-7	DEFECT
// end of try-catch	WITHOUT_CLASSIFICATION	0.9999997124096464	WITHOUT_CLASSIFICATION	2.875903536478853E-7	DEFECT
// byte - byte compare	WITHOUT_CLASSIFICATION	0.9999972978996687	WITHOUT_CLASSIFICATION	2.7021003313431745E-6	DEFECT
/*          * @param event the build event that is being logged.         */	WITHOUT_CLASSIFICATION	0.9999986769530091	WITHOUT_CLASSIFICATION	1.3230469908250546E-6	DEFECT
// get the fileset and its basedir	WITHOUT_CLASSIFICATION	0.9999991863410365	WITHOUT_CLASSIFICATION	8.136589635943959E-7	DEFECT
// get the fileset and its basedir	WITHOUT_CLASSIFICATION	0.9999991863410365	WITHOUT_CLASSIFICATION	8.136589635943959E-7	DEFECT
// get the fileset and its basedir	WITHOUT_CLASSIFICATION	0.9999991863410365	WITHOUT_CLASSIFICATION	8.136589635943959E-7	DEFECT
// Set up a SOSGet task	WITHOUT_CLASSIFICATION	0.9999999376453101	WITHOUT_CLASSIFICATION	6.235468986150662E-8	DEFECT
// Set up a SOSGet task	WITHOUT_CLASSIFICATION	0.9999999376453101	WITHOUT_CLASSIFICATION	6.235468986150662E-8	DEFECT
// Set up a SOSCheckin task	WITHOUT_CLASSIFICATION	0.9999999814387053	WITHOUT_CLASSIFICATION	1.856129467049101E-8	DEFECT
// Set up a SOSCheckin task	WITHOUT_CLASSIFICATION	0.9999999814387053	WITHOUT_CLASSIFICATION	1.856129467049101E-8	DEFECT
// Set up a SOSCheckout task	WITHOUT_CLASSIFICATION	0.9999999884312105	WITHOUT_CLASSIFICATION	1.1568789486210762E-8	DEFECT
// Set up a sosCheckout task	WITHOUT_CLASSIFICATION	0.9999999765799239	WITHOUT_CLASSIFICATION	2.3420076157700556E-8	DEFECT
// Set up a sosCheckout task	WITHOUT_CLASSIFICATION	0.9999999765799239	WITHOUT_CLASSIFICATION	2.3420076157700556E-8	DEFECT
// We have extra elements	WITHOUT_CLASSIFICATION	0.9999999036725726	WITHOUT_CLASSIFICATION	9.632742736707099E-8	DEFECT
// give it some time to display	WITHOUT_CLASSIFICATION	0.9999436801029892	WITHOUT_CLASSIFICATION	5.631989701075655E-5	DEFECT
// Set up a VSSGet task	WITHOUT_CLASSIFICATION	0.9999999218954597	WITHOUT_CLASSIFICATION	7.810454024404525E-8	DEFECT
// Set up a VSSLabel task	WITHOUT_CLASSIFICATION	0.999999957546594	WITHOUT_CLASSIFICATION	4.24534061090918E-8	DEFECT
// Set up a VSSLabel task	WITHOUT_CLASSIFICATION	0.999999957546594	WITHOUT_CLASSIFICATION	4.24534061090918E-8	DEFECT
// Set up a VSSHistory task	WITHOUT_CLASSIFICATION	0.9999999558266608	WITHOUT_CLASSIFICATION	4.4173339131384114E-8	DEFECT
// Set up a VSSHistory task	WITHOUT_CLASSIFICATION	0.9999999558266608	WITHOUT_CLASSIFICATION	4.4173339131384114E-8	DEFECT
// Set up a Timestamp	WITHOUT_CLASSIFICATION	0.9999999698722214	WITHOUT_CLASSIFICATION	3.01277785877944E-8	DEFECT
// Get today's date	WITHOUT_CLASSIFICATION	0.9999993502488584	WITHOUT_CLASSIFICATION	6.497511416472767E-7	DEFECT
// Set up a VSSCheckIn task	WITHOUT_CLASSIFICATION	0.999999934298489	WITHOUT_CLASSIFICATION	6.570151093501952E-8	DEFECT
// Set up a VSSCheckOut task	WITHOUT_CLASSIFICATION	0.9999999932128438	WITHOUT_CLASSIFICATION	6.7871561166007935E-9	DEFECT
// Set up a VSSAdd task	WITHOUT_CLASSIFICATION	0.9999999468522408	WITHOUT_CLASSIFICATION	5.314775932637621E-8	DEFECT
// Set up a VSSCp task	WITHOUT_CLASSIFICATION	0.9999999119675844	WITHOUT_CLASSIFICATION	8.803241554803982E-8	DEFECT
// Set up a VSSCreate task	WITHOUT_CLASSIFICATION	0.9999999858026157	WITHOUT_CLASSIFICATION	1.419738427065559E-8	DEFECT
// Count the number of empty strings	WITHOUT_CLASSIFICATION	0.9999998204750508	WITHOUT_CLASSIFICATION	1.7952494923195033E-7	DEFECT
// ran Ant tests with -ea and this would fail spuriously	WITHOUT_CLASSIFICATION	0.9999294169578383	WITHOUT_CLASSIFICATION	7.05830421617881E-5	DEFECT
// now to the expected failures	WITHOUT_CLASSIFICATION	0.9999994083417032	WITHOUT_CLASSIFICATION	5.916582967215104E-7	DEFECT
// catalog <--> catalog	WITHOUT_CLASSIFICATION	0.9999992144911677	WITHOUT_CLASSIFICATION	7.855088323087453E-7	DEFECT
// catalog1 --> catalog2 --> catalog3 --> catalog1	WITHOUT_CLASSIFICATION	0.9999983884666035	WITHOUT_CLASSIFICATION	1.6115333964351947E-6	DEFECT
// catalog2 --> catalog1 --> catalog	WITHOUT_CLASSIFICATION	0.9999980377777037	WITHOUT_CLASSIFICATION	1.962222296220366E-6	DEFECT
//check that dir and src are incompatible	WITHOUT_CLASSIFICATION	0.9999999498803789	WITHOUT_CLASSIFICATION	5.011962112341045E-8	DEFECT
//check that fullpath and prefix are incompatible	WITHOUT_CLASSIFICATION	0.9999976691121261	WITHOUT_CLASSIFICATION	2.330887873899772E-6	DEFECT
// check that reference zipfilesets cannot have specific attributes	WITHOUT_CLASSIFICATION	0.999999810247695	WITHOUT_CLASSIFICATION	1.8975230498114183E-7	DEFECT
// check that a reference zipfileset gets the same attributes as the original	WITHOUT_CLASSIFICATION	0.9999999772763756	WITHOUT_CLASSIFICATION	2.272362440736493E-8	DEFECT
//check that dir and src are incompatible	WITHOUT_CLASSIFICATION	0.9999999498803789	WITHOUT_CLASSIFICATION	5.011962112341045E-8	DEFECT
// // These shenanigans are necessary b/c Norm Walsh's resolver // has a different idea of how file URLs are created on windoze // ie file://c:/foo instead of file:///c:/foo //	WITHOUT_CLASSIFICATION	0.9999944369523749	WITHOUT_CLASSIFICATION	5.563047625128465E-6	DEFECT
//check that dir and src are incompatible	WITHOUT_CLASSIFICATION	0.9999999498803789	WITHOUT_CLASSIFICATION	5.011962112341045E-8	DEFECT
//check that fullpath and prefix are incompatible	WITHOUT_CLASSIFICATION	0.9999976691121261	WITHOUT_CLASSIFICATION	2.330887873899772E-6	DEFECT
// try a netware-volume length path, see how it is handled	WITHOUT_CLASSIFICATION	0.9999995832826867	WITHOUT_CLASSIFICATION	4.1671731327882676E-7	DEFECT
// actually tests constructor as well as setPath	WITHOUT_CLASSIFICATION	0.9999999995599689	WITHOUT_CLASSIFICATION	4.40031154647515E-10	DEFECT
// check that reference tarfilesets cannot have specific attributes	WITHOUT_CLASSIFICATION	0.9999999206177336	WITHOUT_CLASSIFICATION	7.938226641866628E-8	DEFECT
// try a multi-part netware-volume length path w/forward slash, see how it is handled	WITHOUT_CLASSIFICATION	0.9999998525311644	WITHOUT_CLASSIFICATION	1.4746883560970728E-7	DEFECT
// try a multi-part netware-volume length path, see how it is handled	WITHOUT_CLASSIFICATION	0.9999998192900006	WITHOUT_CLASSIFICATION	1.807099993668955E-7	DEFECT
// dummy1 --> dummy2 --> dummy3 --> dummy1	WITHOUT_CLASSIFICATION	0.9999948345146294	WITHOUT_CLASSIFICATION	5.165485370459235E-6	DEFECT
// try a netware-volume length path w/forward slash, see how it is handled	WITHOUT_CLASSIFICATION	0.9999996599368056	WITHOUT_CLASSIFICATION	3.4006319434884484E-7	DEFECT
// try a multi-part netware-volume length path with UNIX // separator (this testcase if from an actual bug that was // found, in AvailableTest, which uses PathTokenizer)	WITHOUT_CLASSIFICATION	0.999891033271713	WITHOUT_CLASSIFICATION	1.0896672828686929E-4	DEFECT
// dummy1 --> dummy2 --> dummy3 --> dummy1	WITHOUT_CLASSIFICATION	0.9999948345146294	WITHOUT_CLASSIFICATION	5.165485370459235E-6	DEFECT
// dummy1 --> dummy2 --> dummy3 --> dummy1	WITHOUT_CLASSIFICATION	0.9999948345146294	WITHOUT_CLASSIFICATION	5.165485370459235E-6	DEFECT
// dummy1 --> dummy2 --> dummy3 --> dummy1	WITHOUT_CLASSIFICATION	0.9999948345146294	WITHOUT_CLASSIFICATION	5.165485370459235E-6	DEFECT
// dummy1 --> dummy2 --> dummy3 --> dummy1	WITHOUT_CLASSIFICATION	0.9999948345146294	WITHOUT_CLASSIFICATION	5.165485370459235E-6	DEFECT
// dummy1 --> dummy2 --> dummy3 (with Path "/a")	WITHOUT_CLASSIFICATION	0.9999971767852401	WITHOUT_CLASSIFICATION	2.8232147599009726E-6	DEFECT
// This class acts as a custom Ant task also // and uses these variables/methods in that mode	WITHOUT_CLASSIFICATION	0.9999991463802314	WITHOUT_CLASSIFICATION	8.536197685011613E-7	DEFECT
// dummy1 --> dummy2 --> dummy3 // (which has the Project's basedir as root).	WITHOUT_CLASSIFICATION	0.9999995615220478	WITHOUT_CLASSIFICATION	4.384779521713781E-7	DEFECT
// dummy1 --> dummy2 --> dummy3 // (which has the Project's basedir as root).	WITHOUT_CLASSIFICATION	0.9999995615220478	WITHOUT_CLASSIFICATION	4.384779521713781E-7	DEFECT
// Grant extra permissions to read and write the user.* properties and read to the // java.home property	WITHOUT_CLASSIFICATION	0.9999989466638353	WITHOUT_CLASSIFICATION	1.0533361647704856E-6	DEFECT
// dummy1 --> dummy2 --> dummy3 // (which holds patterns "include" and "exclude")	WITHOUT_CLASSIFICATION	0.9999995388228888	WITHOUT_CLASSIFICATION	4.6117711117207576E-7	DEFECT
// check that a reference tarfileset gets the same attributes as the original	WITHOUT_CLASSIFICATION	0.9999999880031936	WITHOUT_CLASSIFICATION	1.199680643754191E-8	DEFECT
// was expected	WITHOUT_CLASSIFICATION	0.9999996344001829	WITHOUT_CLASSIFICATION	3.655998170251083E-7	DEFECT
// Revoke permission to write user.home (granted above via user.*), still able to read though. // and the default granted permission to read os.name.	WITHOUT_CLASSIFICATION	0.9999995766268999	WITHOUT_CLASSIFICATION	4.2337310011812127E-7	DEFECT
// Was expected, test passes	WITHOUT_CLASSIFICATION	0.9999994187000252	WITHOUT_CLASSIFICATION	5.812999748641917E-7	DEFECT
// Was expected, test passes	WITHOUT_CLASSIFICATION	0.9999994187000252	WITHOUT_CLASSIFICATION	5.812999748641917E-7	DEFECT
// Was expected, test passes	WITHOUT_CLASSIFICATION	0.9999994187000252	WITHOUT_CLASSIFICATION	5.812999748641917E-7	DEFECT
/*         * After changing CommandlineJava to search for the java         * executable, I don't know, how to tests the value returned         * here without using the same logic as applied in the class         * itself.         *         * assertTrue("no classpath", "java", s[0]);         */	WITHOUT_CLASSIFICATION	0.9999999999502388	WITHOUT_CLASSIFICATION	4.976127332391908E-11	DEFECT
//        assertEquals("with classpath", "java", s[0]);	WITHOUT_CLASSIFICATION	0.999999993664181	WITHOUT_CLASSIFICATION	6.3358190388270554E-9	DEFECT
// only the second iteration would pass because of PR 27218	WITHOUT_CLASSIFICATION	0.999991072097796	WITHOUT_CLASSIFICATION	8.927902203970665E-6	DEFECT
//mix element types	WITHOUT_CLASSIFICATION	0.9999932061781903	WITHOUT_CLASSIFICATION	6.793821809653146E-6	DEFECT
//implicit composite	WITHOUT_CLASSIFICATION	0.9999997697809268	WITHOUT_CLASSIFICATION	2.3021907322879088E-7	DEFECT
// a --> b --> c --- def //               \-- ghi	WITHOUT_CLASSIFICATION	0.9999999159405061	WITHOUT_CLASSIFICATION	8.405949390948851E-8	DEFECT
// // Ensure that an external entity resolves as expected Using an // XMLCatalog: // // Transform an XML file that refers to the entity into a text // file, entity is listed in the XMLCatalog pointing to a // different file.  Stuff result into property: val2 //	WITHOUT_CLASSIFICATION	0.9999999443440377	WITHOUT_CLASSIFICATION	5.565596235624346E-8	DEFECT
// // Ensure that an external entity resolves as expected with NO // XMLCatalog involvement: // // Transform an XML file that refers to the entity into a text // file, stuff result into property: val1 //	WITHOUT_CLASSIFICATION	0.9999997923332007	WITHOUT_CLASSIFICATION	2.0766679924627077E-7	DEFECT
// this actually relies on the first manifest being found on // the classpath (probably rt.jar's) being valid	WITHOUT_CLASSIFICATION	0.9999990877026878	WITHOUT_CLASSIFICATION	9.122973123354522E-7	DEFECT
// // Ensure that an external entity resolves as expected with NO // XMLCatalog involvement: // // Transform an XML file that contains a reference to a _second_ XML file // via the document() function.  The _second_ XML file refers to an entity. // Stuff result into the property: val3 //	WITHOUT_CLASSIFICATION	0.9999960200180373	WITHOUT_CLASSIFICATION	3.979981962634846E-6	DEFECT
// // Ensure that an external entity resolves as expected Using an // XMLCatalog: // // Transform an XML file that contains a reference to a _second_ XML file // via the document() function.  The _second_ XML file refers to an entity. // The entity is listed in the XMLCatalog pointing to a different file. // Stuff result into the property: val4 //	WITHOUT_CLASSIFICATION	0.9999999579841925	WITHOUT_CLASSIFICATION	4.20158073856736E-8	DEFECT
// The following will be used as types and tasks	WITHOUT_CLASSIFICATION	0.9999971020361347	WITHOUT_CLASSIFICATION	2.89796386531787E-6	DEFECT
// share the setup for testing the depend task	WITHOUT_CLASSIFICATION	0.999999999465774	WITHOUT_CLASSIFICATION	5.342260315227977E-10	DEFECT
// Test for path relative to project base directory	WITHOUT_CLASSIFICATION	0.999999946391129	WITHOUT_CLASSIFICATION	5.360887105683125E-8	DEFECT
//class-MockCache	WITHOUT_CLASSIFICATION	0.9999961209676018	WITHOUT_CLASSIFICATION	3.879032398283239E-6	DEFECT
//  =====================  attributes  =====================	WITHOUT_CLASSIFICATION	0.9999998388189474	WITHOUT_CLASSIFICATION	1.6118105250566244E-7	DEFECT
//class-MockCache	WITHOUT_CLASSIFICATION	0.9999961209676018	WITHOUT_CLASSIFICATION	3.879032398283239E-6	DEFECT
//  =====================  constructors, factories  =====================	WITHOUT_CLASSIFICATION	0.9999999426315793	WITHOUT_CLASSIFICATION	5.736842066452042E-8	DEFECT
//  =====================  JUnit stuff  =====================	WITHOUT_CLASSIFICATION	0.9999989738852085	WITHOUT_CLASSIFICATION	1.0261147915297698E-6	DEFECT
// project reference is set in super.setUp()	WITHOUT_CLASSIFICATION	0.9999946664844263	WITHOUT_CLASSIFICATION	5.333515573774791E-6	DEFECT
// init the testclasses path object	WITHOUT_CLASSIFICATION	0.9999997364201837	WITHOUT_CLASSIFICATION	2.635798162492799E-7	DEFECT
/* * /    // for test only - ignore tests where we arent work at the moment    public static junit.framework.Test suite() {        junit.framework.TestSuite suite= new junit.framework.TestSuite();        suite.addTest(new ModifiedSelectorTest("testValidateWrongCache"));        return suite;    }    /* */	WITHOUT_CLASSIFICATION	0.9999999998721522	WITHOUT_CLASSIFICATION	1.2784777497436112E-10	DEFECT
// =======  testcases for the attributes and nested elements of the selector  =====	WITHOUT_CLASSIFICATION	0.9999999940291145	WITHOUT_CLASSIFICATION	5.9708854425811495E-9	DEFECT
// do the actions	WITHOUT_CLASSIFICATION	0.9999984612852237	WITHOUT_CLASSIFICATION	1.538714776244291E-6	DEFECT
// do the checks - the buildfile stores the fileset as property	WITHOUT_CLASSIFICATION	0.999999215560184	WITHOUT_CLASSIFICATION	7.844398159722038E-7	DEFECT
// must be empty according to the Mock* implementations	WITHOUT_CLASSIFICATION	0.9999940542620698	WITHOUT_CLASSIFICATION	5.945737930324929E-6	DEFECT
// don't catch the JUnit exceptions	WITHOUT_CLASSIFICATION	0.9999988976426912	WITHOUT_CLASSIFICATION	1.102357308734176E-6	DEFECT
// no check for 1<=kind<=3 - only internal use therefore check it // while development	WITHOUT_CLASSIFICATION	0.9999999998670871	WITHOUT_CLASSIFICATION	1.3291300553777545E-10	DEFECT
// readable form of parameter kind	WITHOUT_CLASSIFICATION	0.9999989224594245	WITHOUT_CLASSIFICATION	1.0775405755501335E-6	DEFECT
// setup the "Ant project"	WITHOUT_CLASSIFICATION	0.9999997558667523	WITHOUT_CLASSIFICATION	2.441332477680928E-7	DEFECT
// setup the selector	WITHOUT_CLASSIFICATION	0.9999999854422753	WITHOUT_CLASSIFICATION	1.4557724713171612E-8	DEFECT
// get the cache, so we can check our things	WITHOUT_CLASSIFICATION	0.9999999689048352	WITHOUT_CLASSIFICATION	3.10951646773762E-8	DEFECT
// the test	WITHOUT_CLASSIFICATION	0.9999996626286449	WITHOUT_CLASSIFICATION	3.373713550172914E-7	DEFECT
// MockCache doesnt create a file - therefore no cleanup needed	WITHOUT_CLASSIFICATION	0.9999999994430153	WITHOUT_CLASSIFICATION	5.569846939076921E-10	DEFECT
// add the test classes to its classpath	WITHOUT_CLASSIFICATION	0.9999998918689085	WITHOUT_CLASSIFICATION	1.0813109153356355E-7	DEFECT
// let the selector do its checks	WITHOUT_CLASSIFICATION	0.9999997790456856	WITHOUT_CLASSIFICATION	2.2095431437224537E-7	DEFECT
// extract the algorithm name (and config) from the selectors output	WITHOUT_CLASSIFICATION	0.9999973865444086	WITHOUT_CLASSIFICATION	2.613455591368402E-6	DEFECT
// '<' and '>' are only used if the algorithm has properties	WITHOUT_CLASSIFICATION	0.9999997109131685	WITHOUT_CLASSIFICATION	2.8908683138592E-7	DEFECT
// return the clean value	WITHOUT_CLASSIFICATION	0.9999998664652362	WITHOUT_CLASSIFICATION	1.3353476385536648E-7	DEFECT
// initialize test environment (called "bed")	WITHOUT_CLASSIFICATION	0.9999999972473125	WITHOUT_CLASSIFICATION	2.7526875378094923E-9	DEFECT
// initialize test environment (called "bed")	WITHOUT_CLASSIFICATION	0.9999999972473125	WITHOUT_CLASSIFICATION	2.7526875378094923E-9	DEFECT
// Configure the selector	WITHOUT_CLASSIFICATION	0.9999999882033396	WITHOUT_CLASSIFICATION	1.179666037807517E-8	DEFECT
// Configure the selector	WITHOUT_CLASSIFICATION	0.9999999882033396	WITHOUT_CLASSIFICATION	1.179666037807517E-8	DEFECT
// does the selection	WITHOUT_CLASSIFICATION	0.9999707064065915	WITHOUT_CLASSIFICATION	2.9293593408603474E-5	DEFECT
// evaluate correctness	WITHOUT_CLASSIFICATION	0.9999969769257525	WITHOUT_CLASSIFICATION	3.023074247527448E-6	DEFECT
// evaluate correctness	WITHOUT_CLASSIFICATION	0.9999969769257525	WITHOUT_CLASSIFICATION	3.023074247527448E-6	DEFECT
// same logic as on algorithm, no testcases created	WITHOUT_CLASSIFICATION	0.9999999174672888	WITHOUT_CLASSIFICATION	8.253271112234353E-8	DEFECT
// same logic as on algorithm, no testcases created	WITHOUT_CLASSIFICATION	0.9999999174672888	WITHOUT_CLASSIFICATION	8.253271112234353E-8	DEFECT
// given cache must be empty	WITHOUT_CLASSIFICATION	0.9999984936026521	WITHOUT_CLASSIFICATION	1.5063973478332395E-6	DEFECT
// cache must return a stored value	WITHOUT_CLASSIFICATION	0.9999998922754443	WITHOUT_CLASSIFICATION	1.0772455573804422E-7	DEFECT
// test the iterator	WITHOUT_CLASSIFICATION	0.9999999937004148	WITHOUT_CLASSIFICATION	6.299585201084123E-9	DEFECT
// clear the cache	WITHOUT_CLASSIFICATION	0.9999997466180547	WITHOUT_CLASSIFICATION	2.533819452824482E-7	DEFECT
// must not be a directory	WITHOUT_CLASSIFICATION	0.9999998376217328	WITHOUT_CLASSIFICATION	1.6237826709640838E-7	DEFECT
// get the Hashvalues	WITHOUT_CLASSIFICATION	0.999999861904605	WITHOUT_CLASSIFICATION	1.3809539495596723E-7	DEFECT
// Assert !=null and equality	WITHOUT_CLASSIFICATION	0.9999999468261269	WITHOUT_CLASSIFICATION	5.317387304833395E-8	DEFECT
//if-isFile //for	WITHOUT_CLASSIFICATION	0.9999995203401169	WITHOUT_CLASSIFICATION	4.796598831070039E-7	DEFECT
// ==============  testcases for the comparator implementations  ==============	WITHOUT_CLASSIFICATION	0.9999989456906825	WITHOUT_CLASSIFICATION	1.0543093174719528E-6	DEFECT
//not yet supported see note in selector	WITHOUT_CLASSIFICATION	0.9999938418850923	WITHOUT_CLASSIFICATION	6.158114907632277E-6	DEFECT
//new File("src/etc/testcases/types/resources/selectors/cache.properties").delete();	WITHOUT_CLASSIFICATION	0.9999999928487499	WITHOUT_CLASSIFICATION	7.1512500674059895E-9	DEFECT
// really "2"	WITHOUT_CLASSIFICATION	0.9999978099919611	WITHOUT_CLASSIFICATION	2.1900080388430336E-6	DEFECT
// Configure the selector - only defaults are used	WITHOUT_CLASSIFICATION	0.9999999972268491	WITHOUT_CLASSIFICATION	2.7731510251443802E-9	DEFECT
//                     + "  <emptyElement></emptyElement>"	WITHOUT_CLASSIFICATION	0.9999991787988846	WITHOUT_CLASSIFICATION	8.212011154755834E-7	DEFECT
/* ============ ResourceFactory interface ====================== */	WITHOUT_CLASSIFICATION	0.9999994959561888	WITHOUT_CLASSIFICATION	5.040438112843353E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999998677448649	WITHOUT_CLASSIFICATION	1.3225513505480113E-7	DEFECT
//class-BFT	WITHOUT_CLASSIFICATION	0.9999941585398932	WITHOUT_CLASSIFICATION	5.841460106888792E-6	DEFECT
// do the actions	WITHOUT_CLASSIFICATION	0.9999984612852237	WITHOUT_CLASSIFICATION	1.538714776244291E-6	DEFECT
// don't catch the JUnit exceptions	WITHOUT_CLASSIFICATION	0.9999988976426912	WITHOUT_CLASSIFICATION	1.102357308734176E-6	DEFECT
// // *****  First Run  ***** // the first call should get all files, because nothing is in // the cache //	WITHOUT_CLASSIFICATION	0.999994692875936	WITHOUT_CLASSIFICATION	5.307124063937217E-6	DEFECT
// // *****  Second Run  ***** // the second call should get no files, because no content // has changed //	WITHOUT_CLASSIFICATION	0.999999514068346	WITHOUT_CLASSIFICATION	4.859316541240807E-7	DEFECT
// // *****  make some files dirty  ***** //	WITHOUT_CLASSIFICATION	0.9998800685864905	WITHOUT_CLASSIFICATION	1.199314135096347E-4	DEFECT
// these files are made dirty --> 3+4 with different content	WITHOUT_CLASSIFICATION	0.999999017169972	WITHOUT_CLASSIFICATION	9.828300280156705E-7	DEFECT
// AccessObject to the test-Ant-environment	WITHOUT_CLASSIFICATION	0.9999998409859077	WITHOUT_CLASSIFICATION	1.5901409225471923E-7	DEFECT
// give some values (via property file) to that environment	WITHOUT_CLASSIFICATION	0.9999555342118154	WITHOUT_CLASSIFICATION	4.446578818467971E-5	DEFECT
// call the target for making the files dirty	WITHOUT_CLASSIFICATION	0.9999970496589238	WITHOUT_CLASSIFICATION	2.9503410762554315E-6	DEFECT
// // *****  Third Run  ***** // third call should get only those files, which CONTENT changed // (no timestamp changes required!)	WITHOUT_CLASSIFICATION	0.9999997987116694	WITHOUT_CLASSIFICATION	2.0128833057332293E-7	DEFECT
// // *****  Check the result  ***** //	WITHOUT_CLASSIFICATION	0.9999997070038765	WITHOUT_CLASSIFICATION	2.929961235162844E-7	DEFECT
// Mark all files which should be selected as (T)rue and all others // as (F)alse. Directories are always selected so they always are // (T)rue.	WITHOUT_CLASSIFICATION	0.9999999998603607	WITHOUT_CLASSIFICATION	1.3963924772513616E-10	DEFECT
// f2name shouldn't be selected: only timestamp has changed!	WITHOUT_CLASSIFICATION	0.9999520883604385	WITHOUT_CLASSIFICATION	4.7911639561562993E-5	DEFECT
// info text // list of files // expected result // result	WITHOUT_CLASSIFICATION	0.9999998976022202	WITHOUT_CLASSIFICATION	1.0239777992039419E-7	DEFECT
// cleanup the environment	WITHOUT_CLASSIFICATION	0.9999994080082261	WITHOUT_CLASSIFICATION	5.919917738209233E-7	DEFECT
// cleanup the environment	WITHOUT_CLASSIFICATION	0.9999994080082261	WITHOUT_CLASSIFICATION	5.919917738209233E-7	DEFECT
// RuleBasedCollator not yet supported - see Selector:375 note	WITHOUT_CLASSIFICATION	0.9997936489803645	WITHOUT_CLASSIFICATION	2.0635101963555432E-4	DEFECT
//s.addParam(createParam("algorithm.provider","---")); // i don't know any valid	WITHOUT_CLASSIFICATION	0.9999356112028653	WITHOUT_CLASSIFICATION	6.438879713475963E-5	DEFECT
// first and second run	WITHOUT_CLASSIFICATION	0.9999992571298236	WITHOUT_CLASSIFICATION	7.428701763186875E-7	DEFECT
// make dirty	WITHOUT_CLASSIFICATION	0.9999936766572118	WITHOUT_CLASSIFICATION	6.323342788141252E-6	DEFECT
// third run	WITHOUT_CLASSIFICATION	0.999995045165941	WITHOUT_CLASSIFICATION	4.954834058986438E-6	DEFECT
// the directories to check	WITHOUT_CLASSIFICATION	0.9999998539643861	WITHOUT_CLASSIFICATION	1.4603561398229145E-7	DEFECT
// do the checks	WITHOUT_CLASSIFICATION	0.9999995925397211	WITHOUT_CLASSIFICATION	4.074602788868671E-7	DEFECT
//class-MockProject	WITHOUT_CLASSIFICATION	0.9999775161885648	WITHOUT_CLASSIFICATION	2.2483811435228357E-5	DEFECT
//class-ModifiedSelectorTest	WITHOUT_CLASSIFICATION	0.9999999749359135	WITHOUT_CLASSIFICATION	2.5064086420239984E-8	DEFECT
// First read in zero bytes	WITHOUT_CLASSIFICATION	0.9999995611401793	WITHOUT_CLASSIFICATION	4.388598206952752E-7	DEFECT
// Now read in the string	WITHOUT_CLASSIFICATION	0.9999996948793402	WITHOUT_CLASSIFICATION	3.0512065982262826E-7	DEFECT
// Make sure that the counts are the same	WITHOUT_CLASSIFICATION	0.9999997547247121	WITHOUT_CLASSIFICATION	2.452752879163201E-7	DEFECT
// LineOrientedOutputStreamTest	WITHOUT_CLASSIFICATION	0.999999983685521	WITHOUT_CLASSIFICATION	1.631447899967171E-8	DEFECT
// make sure that elapsed time in set via date works	WITHOUT_CLASSIFICATION	0.999999815016896	WITHOUT_CLASSIFICATION	1.849831038934623E-7	DEFECT
// make sure that elapsed time in ms works	WITHOUT_CLASSIFICATION	0.9999967710628253	WITHOUT_CLASSIFICATION	3.2289371747521497E-6	DEFECT
// should be new moon	WITHOUT_CLASSIFICATION	0.9999949669554826	WITHOUT_CLASSIFICATION	5.0330445173614564E-6	DEFECT
// Try a silly case	WITHOUT_CLASSIFICATION	0.9999937696466622	WITHOUT_CLASSIFICATION	6.2303533377673595E-6	DEFECT
// and a little longer	WITHOUT_CLASSIFICATION	0.9999995340999326	WITHOUT_CLASSIFICATION	4.659000674321337E-7	DEFECT
/*             * throw in drive letters             */	WITHOUT_CLASSIFICATION	0.9999734451356124	WITHOUT_CLASSIFICATION	2.6554864387563263E-5	DEFECT
/*             * promised to eliminate consecutive slashes after drive letter.             */	WITHOUT_CLASSIFICATION	0.9999999053949811	WITHOUT_CLASSIFICATION	9.460501886289607E-8	DEFECT
/*             * Start with simple absolute file names.             */	WITHOUT_CLASSIFICATION	0.9999999819293384	WITHOUT_CLASSIFICATION	1.8070661615821786E-8	DEFECT
/*             * Start with simple absolute file names.             */	WITHOUT_CLASSIFICATION	0.9999999819293384	WITHOUT_CLASSIFICATION	1.8070661615821786E-8	DEFECT
/*         * Now test some relative file name magic.         */	WITHOUT_CLASSIFICATION	0.9999996892300231	WITHOUT_CLASSIFICATION	3.107699768363048E-7	DEFECT
/*         * Now test some relative file name magic.         */	WITHOUT_CLASSIFICATION	0.9999996892300231	WITHOUT_CLASSIFICATION	3.107699768363048E-7	DEFECT
// implies lastModified == 0	WITHOUT_CLASSIFICATION	0.9999999815987987	WITHOUT_CLASSIFICATION	1.8401201381272884E-8	DEFECT
/* ============ FileNameMapper interface ======================= */	WITHOUT_CLASSIFICATION	0.9999978452521063	WITHOUT_CLASSIFICATION	2.1547478936864095E-6	DEFECT
// Windows adds the drive letter in uppercase, unless you run Cygwin	WITHOUT_CLASSIFICATION	0.9998311573509331	WITHOUT_CLASSIFICATION	1.6884264906686985E-4	DEFECT
/*         * Sleep for some time to make sure a touched file would get a         * more recent timestamp according to the file system's         * granularity (should be > 2s to account for Windows FAT).         */	WITHOUT_CLASSIFICATION	0.9999579755452126	WITHOUT_CLASSIFICATION	4.202445478739916E-5	DEFECT
// number of milliseconds in a day	WITHOUT_CLASSIFICATION	0.9999581915222937	WITHOUT_CLASSIFICATION	4.180847770623125E-5	DEFECT
// in a previous version, the date of the file was set to 123456 // milliseconds since 01.01.1970 // it did not work on a computer running JDK 1.4.1_02 + Windows 2000	WITHOUT_CLASSIFICATION	0.9994659529099201	WITHOUT_CLASSIFICATION	5.340470900798483E-4	DEFECT
/*         * I would love to compare this with 123456, but depending on         * the filesystems granularity it can take an arbitrary value.         *         * Just assert the time has changed.         */	WITHOUT_CLASSIFICATION	0.9999610518528192	WITHOUT_CLASSIFICATION	3.8948147180805826E-5	DEFECT
/*             * throw in NetWare volume names             */	WITHOUT_CLASSIFICATION	0.9999981730330973	WITHOUT_CLASSIFICATION	1.8269669026863627E-6	DEFECT
/*             * throw in NetWare volume names             */	WITHOUT_CLASSIFICATION	0.9999981730330973	WITHOUT_CLASSIFICATION	1.8269669026863627E-6	DEFECT
/*             * drive letters must be considered just normal filenames.             */	WITHOUT_CLASSIFICATION	0.9999999880605112	WITHOUT_CLASSIFICATION	1.1939488786338999E-8	DEFECT
// Passed test 	WITHOUT_CLASSIFICATION	0.9999999603993195	WITHOUT_CLASSIFICATION	3.960068044771259E-8	DEFECT
// Expected exception caught	WITHOUT_CLASSIFICATION	0.9999907810343184	WITHOUT_CLASSIFICATION	9.218965681593752E-6	DEFECT
// Expected exception caught	WITHOUT_CLASSIFICATION	0.9999907810343184	WITHOUT_CLASSIFICATION	9.218965681593752E-6	DEFECT
// null parent dir	WITHOUT_CLASSIFICATION	0.999994554925694	WITHOUT_CLASSIFICATION	5.445074306071179E-6	DEFECT
//preserve case on Cygwin when using 1.4 toURI:	WITHOUT_CLASSIFICATION	0.9999993292469995	WITHOUT_CLASSIFICATION	6.707530004005486E-7	DEFECT
// OK, Java 1.3.	WITHOUT_CLASSIFICATION	0.9999995674518795	WITHOUT_CLASSIFICATION	4.3254812047544754E-7	DEFECT
//get a time	WITHOUT_CLASSIFICATION	0.9999983316907288	WITHOUT_CLASSIFICATION	1.6683092710882526E-6	DEFECT
//add some time. We assume no OS has a granularity this bad	WITHOUT_CLASSIFICATION	0.9999912962415696	WITHOUT_CLASSIFICATION	8.703758430473524E-6	DEFECT
/*        assertTrue("same timestamp is up to date",                fu.isUpToDate(firstTime, firstTime));                */	WITHOUT_CLASSIFICATION	0.9999999583733087	WITHOUT_CLASSIFICATION	4.162669120595148E-8	DEFECT
//check that older is up to date with a newer dest	WITHOUT_CLASSIFICATION	0.9999998367395355	WITHOUT_CLASSIFICATION	1.6326046453031564E-7	DEFECT
//check that older is up to date with a newer dest	WITHOUT_CLASSIFICATION	0.9999998367395355	WITHOUT_CLASSIFICATION	1.6326046453031564E-7	DEFECT
// This just tests that the function does not blow up	WITHOUT_CLASSIFICATION	0.9999994935784821	WITHOUT_CLASSIFICATION	5.064215180429386E-7	DEFECT
// java.home is bogus	WITHOUT_CLASSIFICATION	0.999999382103876	WITHOUT_CLASSIFICATION	6.178961239687592E-7	DEFECT
// could still be OS/2	WITHOUT_CLASSIFICATION	0.9999926128418631	WITHOUT_CLASSIFICATION	7.387158136849954E-6	DEFECT
// 27224 = magic (a random port which is unlikely to be in use)	WITHOUT_CLASSIFICATION	0.9999949252949022	WITHOUT_CLASSIFICATION	5.074705097742774E-6	DEFECT
// order of headers cannot be guaranteed	WITHOUT_CLASSIFICATION	0.9999972936085362	WITHOUT_CLASSIFICATION	2.7063914638298603E-6	DEFECT
// state engine: false=envelope, true=message	WITHOUT_CLASSIFICATION	0.9999991558431355	WITHOUT_CLASSIFICATION	8.441568645514397E-7	DEFECT
// make sure there are no issues concerning line separator interpretation // a line separator for regex (perl) is always a unix line (ie \n)	WITHOUT_CLASSIFICATION	0.9999992561632052	WITHOUT_CLASSIFICATION	7.438367948784196E-7	DEFECT
// sb.append( response + "\r\n" );	WITHOUT_CLASSIFICATION	0.9999992370214997	WITHOUT_CLASSIFICATION	7.629785002439476E-7	DEFECT
// 60s // a further 30s	WITHOUT_CLASSIFICATION	0.9999999182523078	WITHOUT_CLASSIFICATION	8.174769223067138E-8	DEFECT
// 60s // a further 30s	WITHOUT_CLASSIFICATION	0.9999999182523078	WITHOUT_CLASSIFICATION	8.174769223067138E-8	DEFECT
// 60s // a further 30s	WITHOUT_CLASSIFICATION	0.9999999182523078	WITHOUT_CLASSIFICATION	8.174769223067138E-8	DEFECT
// 60s // a further 30s	WITHOUT_CLASSIFICATION	0.9999999182523078	WITHOUT_CLASSIFICATION	8.174769223067138E-8	DEFECT
// wait for connection	WITHOUT_CLASSIFICATION	0.9999797798817674	WITHOUT_CLASSIFICATION	2.0220118232604042E-5	DEFECT
//throw new IllegalStateException("Command unrecognized: " //    + response);	WITHOUT_CLASSIFICATION	0.9999993816810002	WITHOUT_CLASSIFICATION	6.183189997563103E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999734784456	WITHOUT_CLASSIFICATION	2.6521554394295955E-8	DEFECT
// while	WITHOUT_CLASSIFICATION	0.9999988388429336	WITHOUT_CLASSIFICATION	1.1611570663970184E-6	DEFECT
// CRC manually calculated, sorry // CRC // mode // link length // uid, gid	WITHOUT_CLASSIFICATION	0.9999954942132774	WITHOUT_CLASSIFICATION	4.505786722593232E-6	DEFECT
// CRC manually calculated, sorry // CRC // mode // link length // uid, gid	WITHOUT_CLASSIFICATION	0.9999954942132774	WITHOUT_CLASSIFICATION	4.505786722593232E-6	DEFECT
// CRC // mode // link length // uid, gid	WITHOUT_CLASSIFICATION	0.999993363451651	WITHOUT_CLASSIFICATION	6.636548349070619E-6	DEFECT
// CRC // mode // link length // uid, gid	WITHOUT_CLASSIFICATION	0.999993363451651	WITHOUT_CLASSIFICATION	6.636548349070619E-6	DEFECT
// CRC // mode // link // uid, gid	WITHOUT_CLASSIFICATION	0.9999846032717419	WITHOUT_CLASSIFICATION	1.5396728258082527E-5	DEFECT
// bad CRC // mode // link // uid, gid	WITHOUT_CLASSIFICATION	0.9999840137997343	WITHOUT_CLASSIFICATION	1.5986200265624345E-5	DEFECT
//if we got here, all was well	WITHOUT_CLASSIFICATION	0.9999984855566553	WITHOUT_CLASSIFICATION	1.5144433447163692E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999920118448	WITHOUT_CLASSIFICATION	7.988155193624096E-8	DEFECT
// CheckStyle:ConstantNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9999996970710566	WITHOUT_CLASSIFICATION	3.029289433627634E-7	DEFECT
// CheckStyle:ConstantNameCheck ON	WITHOUT_CLASSIFICATION	0.9999998120296367	WITHOUT_CLASSIFICATION	1.8797036325918576E-7	DEFECT
// Filter out messages based on priority	WITHOUT_CLASSIFICATION	0.9999895435649973	WITHOUT_CLASSIFICATION	1.0456435002704743E-5	DEFECT
// Print out the name of the task if we're in one	WITHOUT_CLASSIFICATION	0.9999999951707388	WITHOUT_CLASSIFICATION	4.829261189255975E-9	DEFECT
// shouldn't be possible	WITHOUT_CLASSIFICATION	0.9999284323141178	WITHOUT_CLASSIFICATION	7.156768588225246E-5	DEFECT
// Set up PRIMITIVE_TYPE_MAP	WITHOUT_CLASSIFICATION	0.9999998792399921	WITHOUT_CLASSIFICATION	1.2076000792096807E-7	DEFECT
// check of add[Configured](Class) pattern	WITHOUT_CLASSIFICATION	0.9999999571047303	WITHOUT_CLASSIFICATION	4.2895269557483176E-8	DEFECT
// not really user settable properties on tasks/project components	WITHOUT_CLASSIFICATION	0.9999973877551159	WITHOUT_CLASSIFICATION	2.6122448840492274E-6	DEFECT
// hide addTask for TaskContainers	WITHOUT_CLASSIFICATION	0.9999999813854676	WITHOUT_CLASSIFICATION	1.861453229081331E-8	DEFECT
// use wrappers for primitive classes, e.g. int and // Integer are treated identically	WITHOUT_CLASSIFICATION	0.9999970077063859	WITHOUT_CLASSIFICATION	2.9922936140375075E-6	DEFECT
// Check if a create of this property is already present // add takes preference over create for CB purposes	WITHOUT_CLASSIFICATION	0.9999999914120346	WITHOUT_CLASSIFICATION	8.587965524307537E-9	DEFECT
/*                         *  Ignore this method as there is an addConfigured                         *  form of this method that has a higher                         *  priority                         */	WITHOUT_CLASSIFICATION	0.9999999877198341	WITHOUT_CLASSIFICATION	1.2280165765001584E-8	DEFECT
// If a helper cannot be found, or if the helper is for another // classloader, create a new IH	WITHOUT_CLASSIFICATION	0.9999758253989661	WITHOUT_CLASSIFICATION	2.4174601033887555E-5	DEFECT
// Ignore attribute from unknown uri's	WITHOUT_CLASSIFICATION	0.9999996190344799	WITHOUT_CLASSIFICATION	3.809655201950985E-7	DEFECT
// impossible as getMethods should only return public methods	WITHOUT_CLASSIFICATION	0.9999984867533561	WITHOUT_CLASSIFICATION	1.5132466438726477E-6	DEFECT
// impossible as getMethods should only return public methods	WITHOUT_CLASSIFICATION	0.9999984867533561	WITHOUT_CLASSIFICATION	1.5132466438726477E-6	DEFECT
// impossible as getMethods should only return public methods	WITHOUT_CLASSIFICATION	0.9999984867533561	WITHOUT_CLASSIFICATION	1.5132466438726477E-6	DEFECT
// Element doesn't handle text content	WITHOUT_CLASSIFICATION	0.9999998494705599	WITHOUT_CLASSIFICATION	1.5052944024378822E-7	DEFECT
// Not whitespace - fail	WITHOUT_CLASSIFICATION	0.9999901278712384	WITHOUT_CLASSIFICATION	9.872128761604064E-6	DEFECT
// Only whitespace - ignore	WITHOUT_CLASSIFICATION	0.9999999859026246	WITHOUT_CLASSIFICATION	1.4097375450073553E-8	DEFECT
// Class doesn't have a String constructor but a decent factory method	WITHOUT_CLASSIFICATION	0.999999141957149	WITHOUT_CLASSIFICATION	8.580428510046422E-7	DEFECT
// char and Character get special treatment - take the first character	WITHOUT_CLASSIFICATION	0.9999999976476661	WITHOUT_CLASSIFICATION	2.352333845023456E-9	DEFECT
// simplest case - setAttribute expects String	WITHOUT_CLASSIFICATION	0.9999994963525192	WITHOUT_CLASSIFICATION	5.036474808466029E-7	DEFECT
// First try with Project.	WITHOUT_CLASSIFICATION	0.9999959157134733	WITHOUT_CLASSIFICATION	4.084286526720467E-6	DEFECT
// EnumeratedAttributes have their own helper class	WITHOUT_CLASSIFICATION	0.9999985122249744	WITHOUT_CLASSIFICATION	1.487775025612143E-6	DEFECT
// resolve relative paths through Project	WITHOUT_CLASSIFICATION	0.999992708367066	WITHOUT_CLASSIFICATION	7.291632934050201E-6	DEFECT
/** Version to use for addXXX and addConfiguredXXX */	WITHOUT_CLASSIFICATION	0.9980762191421293	WITHOUT_CLASSIFICATION	0.0019237808578706078	DEFECT
// Well, no matching constructor.	WITHOUT_CLASSIFICATION	0.9999999985689592	WITHOUT_CLASSIFICATION	1.431040796385008E-9	DEFECT
// OK, try without.	WITHOUT_CLASSIFICATION	0.9999953556327049	WITHOUT_CLASSIFICATION	4.644367294974287E-6	DEFECT
// the method called to add/create the nested element	WITHOUT_CLASSIFICATION	0.9999996169349326	WITHOUT_CLASSIFICATION	3.830650674972523E-7	DEFECT
// DO NOTHING	WITHOUT_CLASSIFICATION	0.9999975841352411	WITHOUT_CLASSIFICATION	2.4158647589270046E-6	DEFECT
// ADD or ADD_CONFIGURED	WITHOUT_CLASSIFICATION	0.9999996881585124	WITHOUT_CLASSIFICATION	3.118414876015624E-7	DEFECT
// the method called to set the attribute	WITHOUT_CLASSIFICATION	0.9999997645956281	WITHOUT_CLASSIFICATION	2.354043717784755E-7	DEFECT
// add configured replaces the add method	WITHOUT_CLASSIFICATION	0.9999998383393366	WITHOUT_CLASSIFICATION	1.6166066339147634E-7	DEFECT
// maintain a sorted list of targets	WITHOUT_CLASSIFICATION	0.9999999958480056	WITHOUT_CLASSIFICATION	4.1519944531910895E-9	DEFECT
// worst case. look for a public String constructor and use it // also supports new Whatever(Project, String) as for Path or Reference // This is used (deliberately) for all primitives/wrappers other than // char and boolean	WITHOUT_CLASSIFICATION	0.999999999801148	WITHOUT_CLASSIFICATION	1.9885204884012773E-10	DEFECT
// Already present	WITHOUT_CLASSIFICATION	0.9999996312528178	WITHOUT_CLASSIFICATION	3.68747182251325E-7	DEFECT
// higher derived	WITHOUT_CLASSIFICATION	0.9999994220682472	WITHOUT_CLASSIFICATION	5.779317528605677E-7	DEFECT
// print the stacktrace in the build file it is always useful... // better have too much info than not enough.	WITHOUT_CLASSIFICATION	0.9999751780669133	WITHOUT_CLASSIFICATION	2.4821933086707477E-5	DEFECT
// specify output in UTF8 otherwise accented characters will blow // up everything	WITHOUT_CLASSIFICATION	0.9999999996205023	WITHOUT_CLASSIFICATION	3.7949772325773195E-10	DEFECT
/* For debugging purposes uncomment:        org.w3c.dom.Comment s = doc.createComment("stack=" + threadStack);        buildElement.element.appendChild(s);         */	WITHOUT_CLASSIFICATION	0.9999979514095096	WITHOUT_CLASSIFICATION	2.0485904903861896E-6	DEFECT
// -------------------------------------------------- BuildLogger interface	WITHOUT_CLASSIFICATION	0.9999914341075179	WITHOUT_CLASSIFICATION	8.56589248205378E-6	DEFECT
// Shouldn't happen	WITHOUT_CLASSIFICATION	0.9998509739043813	WITHOUT_CLASSIFICATION	1.490260956186817E-4	DEFECT
// LF is always end of line (i.e. CRLF or single LF)	WITHOUT_CLASSIFICATION	0.9999968093980994	WITHOUT_CLASSIFICATION	3.1906019006775985E-6	DEFECT
// CR without LF - send buffer then add char	WITHOUT_CLASSIFICATION	0.9999996045001235	WITHOUT_CLASSIFICATION	3.9549987646169547E-7	DEFECT
// add into buffer	WITHOUT_CLASSIFICATION	0.9999995513308946	WITHOUT_CLASSIFICATION	4.486691054482767E-7	DEFECT
// either end of buffer or a line separator char	WITHOUT_CLASSIFICATION	0.999999956050992	WITHOUT_CLASSIFICATION	4.3949008054914563E-8	DEFECT
// check adapter	WITHOUT_CLASSIFICATION	0.9999999740094463	WITHOUT_CLASSIFICATION	2.599055360908594E-8	DEFECT
//can throw the same exception, if there is no this(Project) ctor.	WITHOUT_CLASSIFICATION	0.999997620747906	WITHOUT_CLASSIFICATION	2.379252093987243E-6	DEFECT
//now we instantiate	WITHOUT_CLASSIFICATION	0.9999994422109272	WITHOUT_CLASSIFICATION	5.577890727683924E-7	DEFECT
//set up project references.	WITHOUT_CLASSIFICATION	0.9999998456394409	WITHOUT_CLASSIFICATION	1.543605591537236E-7	DEFECT
/** Our current message output status. Follows Project.MSG_XXX. */	WITHOUT_CLASSIFICATION	0.9999403416374222	WITHOUT_CLASSIFICATION	5.965836257785367E-5	DEFECT
/* null */	WITHOUT_CLASSIFICATION	0.9999728272670144	WITHOUT_CLASSIFICATION	2.717273298554243E-5	DEFECT
// expect the worst	WITHOUT_CLASSIFICATION	0.9999968731854013	WITHOUT_CLASSIFICATION	3.126814598579775E-6	DEFECT
//this is the list of lu	WITHOUT_CLASSIFICATION	0.9999986350950993	WITHOUT_CLASSIFICATION	1.364904900662337E-6	DEFECT
// cycle through given args	WITHOUT_CLASSIFICATION	0.9999987992242831	WITHOUT_CLASSIFICATION	1.2007757168656791E-6	DEFECT
// set the flag to display the targets and quit	WITHOUT_CLASSIFICATION	0.9999997267313139	WITHOUT_CLASSIFICATION	2.7326868619132707E-7	DEFECT
// eat up next arg if present, default to build.xml	WITHOUT_CLASSIFICATION	0.9999996699242764	WITHOUT_CLASSIFICATION	3.3007572365148957E-7	DEFECT
// we don't have any more args to recognize!	WITHOUT_CLASSIFICATION	0.999537709635683	WITHOUT_CLASSIFICATION	4.6229036431705826E-4	DEFECT
// if it's no other arg, it may be the target	WITHOUT_CLASSIFICATION	0.9999999926966207	WITHOUT_CLASSIFICATION	7.303379453322881E-9	DEFECT
// if buildFile was not specified on the command line,	WITHOUT_CLASSIFICATION	0.9999976021788408	WITHOUT_CLASSIFICATION	2.3978211591177676E-6	DEFECT
// but -find then search for it	WITHOUT_CLASSIFICATION	0.9999998778536979	WITHOUT_CLASSIFICATION	1.2214630216514585E-7	DEFECT
// make sure buildfile exists	WITHOUT_CLASSIFICATION	0.9999995660858304	WITHOUT_CLASSIFICATION	4.33914169627669E-7	DEFECT
// make sure it's not a directory (this falls into the ultra // paranoid lets check everything category	WITHOUT_CLASSIFICATION	0.9999969757314304	WITHOUT_CLASSIFICATION	3.0242685695519875E-6	DEFECT
// Load the property files specified by -propertyfile	WITHOUT_CLASSIFICATION	0.9999995312442449	WITHOUT_CLASSIFICATION	4.6875575516233167E-7	DEFECT
// ensure that -D properties take precedence	WITHOUT_CLASSIFICATION	0.999999353943916	WITHOUT_CLASSIFICATION	6.460560838633827E-7	DEFECT
// check if the target file exists in the current directory	WITHOUT_CLASSIFICATION	0.9999999852985034	WITHOUT_CLASSIFICATION	1.4701496631892231E-8	DEFECT
// change to parent directory	WITHOUT_CLASSIFICATION	0.9999990114623497	WITHOUT_CLASSIFICATION	9.88537650370845E-7	DEFECT
// refresh our file handle	WITHOUT_CLASSIFICATION	0.9999999604869299	WITHOUT_CLASSIFICATION	3.951307012670841E-8	DEFECT
// use a system manager that prevents from System.exit()	WITHOUT_CLASSIFICATION	0.9999949830620133	WITHOUT_CLASSIFICATION	5.0169379867192865E-6	DEFECT
//SecurityManager can not be installed here for backwards //compatibility reasons (PD). Needs to be loaded prior to //ant class if we are going to implement it. //System.setSecurityManager(new NoExitSecurityManager());	WITHOUT_CLASSIFICATION	0.999999866615838	WITHOUT_CLASSIFICATION	1.3338416211252912E-7	DEFECT
// set the thread priorities	WITHOUT_CLASSIFICATION	0.999999911782361	WITHOUT_CLASSIFICATION	8.821763896463546E-8	DEFECT
//we cannot set the priority here.	WITHOUT_CLASSIFICATION	0.9994021499329626	WITHOUT_CLASSIFICATION	5.978500670374651E-4	DEFECT
// set user-define properties	WITHOUT_CLASSIFICATION	0.9999999815639542	WITHOUT_CLASSIFICATION	1.8436045837916975E-8	DEFECT
//proxy setup if enabled	WITHOUT_CLASSIFICATION	0.9999999116869939	WITHOUT_CLASSIFICATION	8.831300606977295E-8	DEFECT
// make sure that we have a target to execute	WITHOUT_CLASSIFICATION	0.9999998560024005	WITHOUT_CLASSIFICATION	1.4399759942083476E-7	DEFECT
// Add the default listener	WITHOUT_CLASSIFICATION	0.9999999969218724	WITHOUT_CLASSIFICATION	3.07812769193389E-9	DEFECT
// find the target with the longest name	WITHOUT_CLASSIFICATION	0.9999999889325129	WITHOUT_CLASSIFICATION	1.1067487086048446E-8	DEFECT
// split the targets in top-level and sub-targets depending // on the presence of a description	WITHOUT_CLASSIFICATION	0.9999999736597853	WITHOUT_CLASSIFICATION	2.634021473070603E-8	DEFECT
// shouldn't need to check but...	WITHOUT_CLASSIFICATION	0.9992507527063834	WITHOUT_CLASSIFICATION	7.492472936165508E-4	DEFECT
// now, start printing the targets and their descriptions	WITHOUT_CLASSIFICATION	0.999999997079499	WITHOUT_CLASSIFICATION	2.9205010235697203E-9	DEFECT
// got a bit annoyed that I couldn't find a pad function	WITHOUT_CLASSIFICATION	0.999730607846844	WITHOUT_CLASSIFICATION	2.693921531560156E-4	DEFECT
/*<String,String>*/	WITHOUT_CLASSIFICATION	0.9999361184918889	WITHOUT_CLASSIFICATION	6.388150811108198E-5	DEFECT
//At least one constructor is guaranteed to be there, but check anyway.	WITHOUT_CLASSIFICATION	0.9999997515121357	WITHOUT_CLASSIFICATION	2.4848786426126785E-7	DEFECT
// is the zip file in the cache	WITHOUT_CLASSIFICATION	0.9999998996679766	WITHOUT_CLASSIFICATION	1.0033202337596074E-7	DEFECT
// store the token just read for next time	WITHOUT_CLASSIFICATION	0.9999984659816981	WITHOUT_CLASSIFICATION	1.534018301879732E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999998677448649	WITHOUT_CLASSIFICATION	1.3225513505480113E-7	DEFECT
// add the types of the parent project	WITHOUT_CLASSIFICATION	0.9999773994307661	WITHOUT_CLASSIFICATION	2.260056923398484E-5	DEFECT
// ignore path elements which are not valid relative to the // project	WITHOUT_CLASSIFICATION	0.9999999614887166	WITHOUT_CLASSIFICATION	3.85112833224217E-8	DEFECT
// Expecting an exception to be thrown by this call: // IllegalArgumentException: wrong number of Arguments	WITHOUT_CLASSIFICATION	0.9955124055733163	WITHOUT_CLASSIFICATION	0.0044875944266837015	DEFECT
// we need to search the components of the path to see if we can // find the class we want.	WITHOUT_CLASSIFICATION	0.9999999622306259	WITHOUT_CLASSIFICATION	3.7769373996565095E-8	DEFECT
// default to the global setting and then see // if this class belongs to a package which has been // designated to use a specific loader first // (this one or the parent one)	WITHOUT_CLASSIFICATION	0.9999999999294096	WITHOUT_CLASSIFICATION	7.059041603499449E-11	DEFECT
// we need to search the components of the path to see if // we can find the class we want.	WITHOUT_CLASSIFICATION	0.9999999642892907	WITHOUT_CLASSIFICATION	3.571070924857852E-8	DEFECT
// try and load from this loader if the parent either didn't find // it or wasn't consulted.	WITHOUT_CLASSIFICATION	0.9999998069271017	WITHOUT_CLASSIFICATION	1.9307289835208399E-7	DEFECT
// this loader was first but it didn't find it - try the parent	WITHOUT_CLASSIFICATION	0.9999748414648817	WITHOUT_CLASSIFICATION	2.515853511828563E-5	DEFECT
/*<URL>*/	WITHOUT_CLASSIFICATION	0.9998110579615301	WITHOUT_CLASSIFICATION	1.8894203846988745E-4	DEFECT
/*<URL>*/	WITHOUT_CLASSIFICATION	0.9998110579615301	WITHOUT_CLASSIFICATION	1.8894203846988745E-4	DEFECT
/*<URL>*/	WITHOUT_CLASSIFICATION	0.9998110579615301	WITHOUT_CLASSIFICATION	1.8894203846988745E-4	DEFECT
// Delegate to the parent:	WITHOUT_CLASSIFICATION	0.9999990462793089	WITHOUT_CLASSIFICATION	9.537206911212137E-7	DEFECT
// Note: could cause overlaps in case ClassLoader.this.parent has matches.	WITHOUT_CLASSIFICATION	0.9999999265793342	WITHOUT_CLASSIFICATION	7.342066574556522E-8	DEFECT
// ClassLoader.this.parent is already delegated to from // ClassLoader.getResources, no need:	WITHOUT_CLASSIFICATION	0.9999999948554842	WITHOUT_CLASSIFICATION	5.144515777765504E-9	DEFECT
// Normal case.	WITHOUT_CLASSIFICATION	0.9999999066717563	WITHOUT_CLASSIFICATION	9.332824361705225E-8	DEFECT
// Inverted.	WITHOUT_CLASSIFICATION	0.9999991116622169	WITHOUT_CLASSIFICATION	8.883377830194102E-7	DEFECT
// already defined	WITHOUT_CLASSIFICATION	0.9999999868279695	WITHOUT_CLASSIFICATION	1.3172030428897432E-8	DEFECT
// define the package now	WITHOUT_CLASSIFICATION	0.9999998916228674	WITHOUT_CLASSIFICATION	1.0837713261650358E-7	DEFECT
// ioe.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999999478886559	WITHOUT_CLASSIFICATION	5.2111344149591034E-8	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9999971163476059	WITHOUT_CLASSIFICATION	2.8836523940921245E-6	DEFECT
// Not significant for the class loader.	WITHOUT_CLASSIFICATION	0.999999494793521	WITHOUT_CLASSIFICATION	5.052064789418833E-7	DEFECT
// Not significant for the class loader.	WITHOUT_CLASSIFICATION	0.999999494793521	WITHOUT_CLASSIFICATION	5.052064789418833E-7	DEFECT
// {tasks, types}	WITHOUT_CLASSIFICATION	0.9999977011524237	WITHOUT_CLASSIFICATION	2.298847576320386E-6	DEFECT
// add the parsed namespaces of the parent project	WITHOUT_CLASSIFICATION	0.9999971772743981	WITHOUT_CLASSIFICATION	2.822725601913015E-6	DEFECT
// we need to search the components of the path to see if // we can find the class we want.	WITHOUT_CLASSIFICATION	0.9999999642892907	WITHOUT_CLASSIFICATION	3.571070924857852E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999734784456	WITHOUT_CLASSIFICATION	2.6521554394295955E-8	DEFECT
// don't have to check for public, since // getConstructor finds public constructors only.	WITHOUT_CLASSIFICATION	0.9999998626817306	WITHOUT_CLASSIFICATION	1.3731826939123045E-7	DEFECT
// set default value, can be changed by the user	WITHOUT_CLASSIFICATION	0.9999999968441848	WITHOUT_CLASSIFICATION	3.155815158085836E-9	DEFECT
//too bad	WITHOUT_CLASSIFICATION	0.999990042382799	WITHOUT_CLASSIFICATION	9.957617200943575E-6	DEFECT
//must have same validity; then if they are valid they must also be the same:	WITHOUT_CLASSIFICATION	0.9999989296032432	WITHOUT_CLASSIFICATION	1.0703967568802852E-6	DEFECT
// namespace that does not contain antlib	WITHOUT_CLASSIFICATION	0.9999971969317807	WITHOUT_CLASSIFICATION	2.8030682193360725E-6	DEFECT
// Already processed	WITHOUT_CLASSIFICATION	0.9999999362867612	WITHOUT_CLASSIFICATION	6.371323877483112E-8	DEFECT
//there to stop error messages being "null"	WITHOUT_CLASSIFICATION	0.9999998769630251	WITHOUT_CLASSIFICATION	1.2303697495899332E-7	DEFECT
//if this is left out, bad things happen. like all build files break //on the first element encountered.	WITHOUT_CLASSIFICATION	0.9992284473857972	WITHOUT_CLASSIFICATION	7.715526142027458E-4	DEFECT
// a fishing expedition :- ignore errors if antlib not present	WITHOUT_CLASSIFICATION	0.9999630191807624	WITHOUT_CLASSIFICATION	3.6980819237677827E-5	DEFECT
//class of problem	WITHOUT_CLASSIFICATION	0.9999931455154236	WITHOUT_CLASSIFICATION	6.854484576456112E-6	DEFECT
//running under an IDE that doesn't set ANT_HOME	WITHOUT_CLASSIFICATION	0.9999975774536802	WITHOUT_CLASSIFICATION	2.422546319771626E-6	DEFECT
//look up the name	WITHOUT_CLASSIFICATION	0.9999986073067662	WITHOUT_CLASSIFICATION	1.3926932337635868E-6	DEFECT
//we are defined, so it is an instantiation problem	WITHOUT_CLASSIFICATION	0.9999998754494203	WITHOUT_CLASSIFICATION	1.24550579742018E-7	DEFECT
//start with instantiating the class.	WITHOUT_CLASSIFICATION	0.9999973026758152	WITHOUT_CLASSIFICATION	2.6973241848805776E-6	DEFECT
//here we successfully loaded the class or failed.	WITHOUT_CLASSIFICATION	0.9999950787023906	WITHOUT_CLASSIFICATION	4.921297609421622E-6	DEFECT
//success: proceed with more steps	WITHOUT_CLASSIFICATION	0.999996208179517	WITHOUT_CLASSIFICATION	3.7918204830827887E-6	DEFECT
//hey, there is nothing wrong with us	WITHOUT_CLASSIFICATION	0.9998496981952344	WITHOUT_CLASSIFICATION	1.5030180476556656E-4	DEFECT
/*<Thread,Task>*/	WITHOUT_CLASSIFICATION	0.9999931894881553	WITHOUT_CLASSIFICATION	6.810511844798811E-6	DEFECT
/*<ThreadGroup,Task>*/	WITHOUT_CLASSIFICATION	0.9999966460209601	WITHOUT_CLASSIFICATION	3.3539790400038483E-6	DEFECT
// If the listeners already has this listener, do nothing	WITHOUT_CLASSIFICATION	0.9999999711222108	WITHOUT_CLASSIFICATION	2.8877789227546535E-8	DEFECT
// we need to build the hashtable dynamically	WITHOUT_CLASSIFICATION	0.999991496241725	WITHOUT_CLASSIFICATION	8.5037582749774E-6	DEFECT
// sanity check	WITHOUT_CLASSIFICATION	0.9999998212085349	WITHOUT_CLASSIFICATION	1.7879146505518475E-7	DEFECT
//try the current classloader	WITHOUT_CLASSIFICATION	0.9999996025615556	WITHOUT_CLASSIFICATION	3.974384444706245E-7	DEFECT
// throw further	WITHOUT_CLASSIFICATION	0.999994325759916	WITHOUT_CLASSIFICATION	5.674240083955786E-6	DEFECT
// only the first build exception is reported	WITHOUT_CLASSIFICATION	0.9999947058220926	WITHOUT_CLASSIFICATION	5.294177907434907E-6	DEFECT
// Make sure we exist	WITHOUT_CLASSIFICATION	0.9999998425529384	WITHOUT_CLASSIFICATION	1.574470617360539E-7	DEFECT
// Currently visiting this node, so have a cycle	WITHOUT_CLASSIFICATION	0.9999963939364	WITHOUT_CLASSIFICATION	3.6060635999607385E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999734784456	WITHOUT_CLASSIFICATION	2.6521554394295955E-8	DEFECT
// create a new Vector to avoid ConcurrentModificationExc when // the listeners get added/removed while we are in fire	WITHOUT_CLASSIFICATION	0.9999999982957063	WITHOUT_CLASSIFICATION	1.7042937739990588E-9	DEFECT
// sanity check ourselves, if we've been asked to build nothing // then we should complain	WITHOUT_CLASSIFICATION	0.9999999989693262	WITHOUT_CLASSIFICATION	1.0306737284484104E-9	DEFECT
// Sort and run the dependency tree. // Sorting checks if all the targets (and dependencies) // exist, and if there is any cycle in the dependency // graph.	WITHOUT_CLASSIFICATION	0.9999999855236406	WITHOUT_CLASSIFICATION	1.4476359524764046E-8	DEFECT
// We first run a DFS based sort using each root as a starting node. // This creates the minimum sequence of Targets to the root node(s). // We then do a sort on any remaining unVISITED targets. // This is unnecessary for doing our build, but it catches // circular dependencies or missing Targets on the entire // dependency tree, not just on the Targets that depend on the // build Target.	WITHOUT_CLASSIFICATION	0.9999999999983655	WITHOUT_CLASSIFICATION	1.6344019045149974E-12	DEFECT
// no warning, this is not changing anything	WITHOUT_CLASSIFICATION	0.9999762495650221	WITHOUT_CLASSIFICATION	2.3750434977857774E-5	DEFECT
// Check for old id behaviour	WITHOUT_CLASSIFICATION	0.9999998906730018	WITHOUT_CLASSIFICATION	1.0932699825478393E-7	DEFECT
// Inform IH to clear the cache	WITHOUT_CLASSIFICATION	0.9999997562363786	WITHOUT_CLASSIFICATION	2.437636214708358E-7	DEFECT
// register this as the current task on the current thread.	WITHOUT_CLASSIFICATION	0.9999965494857298	WITHOUT_CLASSIFICATION	3.450514270217865E-6	DEFECT
// Make sure that	WITHOUT_CLASSIFICATION	0.9999999652022027	WITHOUT_CLASSIFICATION	3.4797797341594355E-8	DEFECT
// ignore this if the object does not have // a set project method or the method // is private/protected.	WITHOUT_CLASSIFICATION	0.9999997029851717	WITHOUT_CLASSIFICATION	2.970148283384598E-7	DEFECT
//override facility for subclasses to put custom hashtables in	WITHOUT_CLASSIFICATION	0.9999977856209825	WITHOUT_CLASSIFICATION	2.2143790174761235E-6	DEFECT
// --------------------  Hook management  --------------------	WITHOUT_CLASSIFICATION	0.9999870549868929	WITHOUT_CLASSIFICATION	1.2945013107066926E-5	DEFECT
// --------------------  Methods to override  --------------------	WITHOUT_CLASSIFICATION	0.9999987981506918	WITHOUT_CLASSIFICATION	1.2018493081171097E-6	DEFECT
// If next has handled the property	WITHOUT_CLASSIFICATION	0.9999954136018044	WITHOUT_CLASSIFICATION	4.58639819557128E-6	DEFECT
// try to get it from the project or keys // Backward compatibility	WITHOUT_CLASSIFICATION	0.999998841119448	WITHOUT_CLASSIFICATION	1.1588805519429299E-6	DEFECT
// -------------------- Default implementation  -------------------- // Methods used to support the default behavior and provide backward // compatibility. Some will be deprecated, you should avoid calling them.	WITHOUT_CLASSIFICATION	0.9998781339094346	WITHOUT_CLASSIFICATION	1.2186609056537497E-4	DEFECT
// user (CLI) properties take precedence	WITHOUT_CLASSIFICATION	0.999996782513283	WITHOUT_CLASSIFICATION	3.217486717058124E-6	DEFECT
// -------------------- Getting properties  --------------------	WITHOUT_CLASSIFICATION	0.999999317912587	WITHOUT_CLASSIFICATION	6.820874129918736E-7	DEFECT
// -------------------- Property parsing  -------------------- // Moved from ProjectHelper. You can override the static method - // this is used for backward compatibility (for code that calls // the parse method in ProjectHelper).	WITHOUT_CLASSIFICATION	0.9999696764552187	WITHOUT_CLASSIFICATION	3.0323544781253733E-5	DEFECT
//search for the next instance of $ from the 'prev' position	WITHOUT_CLASSIFICATION	0.9999989246336682	WITHOUT_CLASSIFICATION	1.0753663317562853E-6	DEFECT
//if we are at the end of the string, we tack on a $ //then move past it	WITHOUT_CLASSIFICATION	0.9999636915786021	WITHOUT_CLASSIFICATION	3.6308421397884745E-5	DEFECT
//peek ahead to see if the next char is a property or not //not a property: insert the char as a literal	WITHOUT_CLASSIFICATION	0.9999950823842658	WITHOUT_CLASSIFICATION	4.91761573419557E-6	DEFECT
//backwards compatibility two $ map to one mode	WITHOUT_CLASSIFICATION	0.9999840423879025	WITHOUT_CLASSIFICATION	1.595761209748859E-5	DEFECT
//new behaviour: $X maps to $X for all values of X!='$'	WITHOUT_CLASSIFICATION	0.9991353057221463	WITHOUT_CLASSIFICATION	8.646942778536851E-4	DEFECT
//property found, extract its name or bail on a typo	WITHOUT_CLASSIFICATION	0.9998126987276005	WITHOUT_CLASSIFICATION	1.8730127239945376E-4	DEFECT
//no more $ signs found //if there is any tail to the file, append it	WITHOUT_CLASSIFICATION	0.9999725788658135	WITHOUT_CLASSIFICATION	2.742113418660585E-5	DEFECT
//empty	WITHOUT_CLASSIFICATION	0.9999522382740956	WITHOUT_CLASSIFICATION	4.7761725904433276E-5	DEFECT
// The children are added to after this cloning	WITHOUT_CLASSIFICATION	0.9999996253184087	WITHOUT_CLASSIFICATION	3.7468159132129126E-7	DEFECT
// Make sure the dependency is not empty string	WITHOUT_CLASSIFICATION	0.9999993257928809	WITHOUT_CLASSIFICATION	6.742071191866348E-7	DEFECT
// Make sure that depends attribute does not // end in a ,	WITHOUT_CLASSIFICATION	0.9999951707297124	WITHOUT_CLASSIFICATION	4.8292702874971685E-6	DEFECT
// A project helper may process multiple files. We'll keep track // of them - to avoid loops and to allow caching. The caching will // probably accelerate things like <antCall>. // The key is the absolute file, the value is a processed tree. // Since the tree is composed of UE and RC - it can be reused ! // protected Hashtable processedFiles=new Hashtable();	WITHOUT_CLASSIFICATION	0.9999999456421731	WITHOUT_CLASSIFICATION	5.4357827013992935E-8	DEFECT
//    public Hashtable getProcessedFiles() { //        return processedFiles; //    }	WITHOUT_CLASSIFICATION	0.9999999960637685	WITHOUT_CLASSIFICATION	3.936231544441038E-9	DEFECT
// --------------------  Parse method  --------------------	WITHOUT_CLASSIFICATION	0.9999985966762525	WITHOUT_CLASSIFICATION	1.403323747581351E-6	DEFECT
// Identify the class loader we will be using. Ant may be // in a webapp or embedded in a different app	WITHOUT_CLASSIFICATION	0.999991624725733	WITHOUT_CLASSIFICATION	8.375274266897037E-6	DEFECT
// First, try the system property	WITHOUT_CLASSIFICATION	0.9999865813853612	WITHOUT_CLASSIFICATION	1.34186146387532E-5	DEFECT
// A JDK1.3 'service' ( like in JAXP ). That will plug a helper // automatically if in CLASSPATH, with the right META-INF/services.	WITHOUT_CLASSIFICATION	0.9776848150762556	WITHOUT_CLASSIFICATION	0.022315184923744374	DEFECT
// This code is needed by EBCDIC and other strange systems. // It's a fix for bugs reported in xerces	WITHOUT_CLASSIFICATION	0.9780154434201872	WITHOUT_CLASSIFICATION	0.02198455657981278	DEFECT
// try next method	WITHOUT_CLASSIFICATION	0.999909902502315	WITHOUT_CLASSIFICATION	9.009749768496482E-5	DEFECT
// -------------------- Static utils, used by most helpers ----------------	WITHOUT_CLASSIFICATION	0.9999999948672331	WITHOUT_CLASSIFICATION	5.132766881120292E-9	DEFECT
// reflect these into the target	WITHOUT_CLASSIFICATION	0.9999999835497608	WITHOUT_CLASSIFICATION	1.645023911702852E-8	DEFECT
// id attribute must be set externally	WITHOUT_CLASSIFICATION	0.999999824092202	WITHOUT_CLASSIFICATION	1.75907798064873E-7	DEFECT
// needed since project properties are not accessible	WITHOUT_CLASSIFICATION	0.9999969528699221	WITHOUT_CLASSIFICATION	3.047130077917635E-6	DEFECT
/*<UnknownElement>*/	WITHOUT_CLASSIFICATION	0.9998965288683874	WITHOUT_CLASSIFICATION	1.0347113161254314E-4	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999998677448649	WITHOUT_CLASSIFICATION	1.3225513505480113E-7	DEFECT
/*<String,String>*/	WITHOUT_CLASSIFICATION	0.9999361184918889	WITHOUT_CLASSIFICATION	6.388150811108198E-5	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9999971163476059	WITHOUT_CLASSIFICATION	2.8836523940921245E-6	DEFECT
// reflect these into the target	WITHOUT_CLASSIFICATION	0.9999999835497608	WITHOUT_CLASSIFICATION	1.645023911702852E-8	DEFECT
// id attribute must be set externally	WITHOUT_CLASSIFICATION	0.999999824092202	WITHOUT_CLASSIFICATION	1.75907798064873E-7	DEFECT
// Attributes	WITHOUT_CLASSIFICATION	0.9999998797904756	WITHOUT_CLASSIFICATION	1.2020952449440314E-7	DEFECT
// configure attributes of the object and it's children. If it is // a task container, defer the configuration till the task container // attempts to use the task	WITHOUT_CLASSIFICATION	0.9999999218918899	WITHOUT_CLASSIFICATION	7.810811002702877E-8	DEFECT
// plain impossible to get here, maybeConfigure should // have thrown an exception.	WITHOUT_CLASSIFICATION	0.9999995627556646	WITHOUT_CLASSIFICATION	4.372443354036102E-7	DEFECT
// Finished executing the task, null it to allow // GC do its job // If this UE is used again, a new "realthing" will be made	WITHOUT_CLASSIFICATION	0.9999999944497777	WITHOUT_CLASSIFICATION	5.5502222442736195E-9	DEFECT
// Do the runtime	WITHOUT_CLASSIFICATION	0.999999180452483	WITHOUT_CLASSIFICATION	8.19547516856005E-7	DEFECT
// UnknownElement always has an associated target	WITHOUT_CLASSIFICATION	0.9999999259640261	WITHOUT_CLASSIFICATION	7.403597397003064E-8	DEFECT
//return elementName;	WITHOUT_CLASSIFICATION	0.9999998748800426	WITHOUT_CLASSIFICATION	1.2511995738449398E-7	DEFECT
// Are the names the same ?	WITHOUT_CLASSIFICATION	0.9999997250434628	WITHOUT_CLASSIFICATION	2.7495653713296544E-7	DEFECT
// Are attributes the same ?	WITHOUT_CLASSIFICATION	0.9999998003543414	WITHOUT_CLASSIFICATION	1.9964565856763346E-7	DEFECT
// Are the sub elements the same ?	WITHOUT_CLASSIFICATION	0.9999999413485963	WITHOUT_CLASSIFICATION	5.8651403800610367E-8	DEFECT
// hidden constructor	WITHOUT_CLASSIFICATION	0.9999999663485873	WITHOUT_CLASSIFICATION	3.365141272580971E-8	DEFECT
//create the file	WITHOUT_CLASSIFICATION	0.9999998979395798	WITHOUT_CLASSIFICATION	1.0206042024931543E-7	DEFECT
//do some writing to it	WITHOUT_CLASSIFICATION	0.9999921134996922	WITHOUT_CLASSIFICATION	7.886500307900515E-6	DEFECT
//calendar stuff.	WITHOUT_CLASSIFICATION	0.9999992615901644	WITHOUT_CLASSIFICATION	7.384098355799902E-7	DEFECT
//not included, do nothing	WITHOUT_CLASSIFICATION	0.9999924600269243	WITHOUT_CLASSIFICATION	7.539973075639509E-6	DEFECT
// not included, to nothing	WITHOUT_CLASSIFICATION	0.9999973163531157	WITHOUT_CLASSIFICATION	2.6836468843258797E-6	DEFECT
/*<RuntimeConfigurable>*/	WITHOUT_CLASSIFICATION	0.9999950673181077	WITHOUT_CLASSIFICATION	4.932681892245055E-6	DEFECT
/*<String>*/	WITHOUT_CLASSIFICATION	0.9999223502898495	WITHOUT_CLASSIFICATION	7.764971015042127E-5	DEFECT
// Configure the object	WITHOUT_CLASSIFICATION	0.9999998739873281	WITHOUT_CLASSIFICATION	1.2601267185278536E-7	DEFECT
// Most likely an UnknownElement	WITHOUT_CLASSIFICATION	0.9999920347110259	WITHOUT_CLASSIFICATION	7.96528897399087E-6	DEFECT
// Children (this is a shadow of UnknownElement#children)	WITHOUT_CLASSIFICATION	0.9999978964019944	WITHOUT_CLASSIFICATION	2.103598005619912E-6	DEFECT
// poly type	WITHOUT_CLASSIFICATION	0.9999936990072215	WITHOUT_CLASSIFICATION	6.300992778499625E-6	DEFECT
// Text	WITHOUT_CLASSIFICATION	0.999992101079336	WITHOUT_CLASSIFICATION	7.898920664093356E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999920118448	WITHOUT_CLASSIFICATION	7.988155193624096E-8	DEFECT
// store the token just read for next time	WITHOUT_CLASSIFICATION	0.9999984659816981	WITHOUT_CLASSIFICATION	1.534018301879732E-6	DEFECT
// a task container - anything could happen - just add the // child to the container	WITHOUT_CLASSIFICATION	0.9999995961814898	WITHOUT_CLASSIFICATION	4.0381851011938524E-7	DEFECT
// Is the text the same? //   Need to use equals on the string and not //   on the stringbuffer as equals on the string buffer //   does not compare the contents.	WITHOUT_CLASSIFICATION	0.9999993336095852	WITHOUT_CLASSIFICATION	6.663904147164838E-7	DEFECT
// Assume that this is an not supported attribute type // thrown for example by a dymanic attribute task // Do nothing	WITHOUT_CLASSIFICATION	0.9996773507526331	WITHOUT_CLASSIFICATION	3.2264924736691265E-4	DEFECT
// on Windows and Unix, we can ignore delimiters and still have // enough information to tokenize correctly.	WITHOUT_CLASSIFICATION	0.9990593642556832	WITHOUT_CLASSIFICATION	9.40635744316925E-4	DEFECT
// we are on a dos style system so this path could be a drive // spec. We look at the next token	WITHOUT_CLASSIFICATION	0.9999136670506998	WITHOUT_CLASSIFICATION	8.633294930015256E-5	DEFECT
// we know we are on a DOS style platform and the next path // starts with a slash or backslash, so we know this is a // drive spec	WITHOUT_CLASSIFICATION	0.9999874179434552	WITHOUT_CLASSIFICATION	1.2582056544820993E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999734784456	WITHOUT_CLASSIFICATION	2.6521554394295955E-8	DEFECT
// ignore ";" and get the next token	WITHOUT_CLASSIFICATION	0.9999980723434921	WITHOUT_CLASSIFICATION	1.9276565078574545E-6	DEFECT
// this path could be a drive spec, so look at the next token	WITHOUT_CLASSIFICATION	0.9999526467883607	WITHOUT_CLASSIFICATION	4.7353211639188886E-5	DEFECT
// it indeed is a drive spec, get the next bit	WITHOUT_CLASSIFICATION	0.9999991761713555	WITHOUT_CLASSIFICATION	8.238286444925671E-7	DEFECT
// implicit else: ignore the ':' since we have either a // UNIX or a relative path	WITHOUT_CLASSIFICATION	0.9999998758907347	WITHOUT_CLASSIFICATION	1.2410926537744958E-7	DEFECT
// Miscellaneous typical temporary files	WITHOUT_CLASSIFICATION	0.9999999635142494	WITHOUT_CLASSIFICATION	3.6485750696681244E-8	DEFECT
// CVS	WITHOUT_CLASSIFICATION	0.9999978564059719	WITHOUT_CLASSIFICATION	2.143594028133216E-6	DEFECT
// SCCS	WITHOUT_CLASSIFICATION	0.9999958138402014	WITHOUT_CLASSIFICATION	4.186159798497488E-6	DEFECT
// Visual SourceSafe	WITHOUT_CLASSIFICATION	0.9999999443071835	WITHOUT_CLASSIFICATION	5.569281656501993E-8	DEFECT
// Subversion	WITHOUT_CLASSIFICATION	0.9999996782869023	WITHOUT_CLASSIFICATION	3.217130977183205E-7	DEFECT
// set in/excludes to reasonable defaults if needed:	WITHOUT_CLASSIFICATION	0.9999999805788348	WITHOUT_CLASSIFICATION	1.9421165261333707E-8	DEFECT
// if no basedir and no includes, nothing to do:	WITHOUT_CLASSIFICATION	0.9999999777233085	WITHOUT_CLASSIFICATION	2.22766914735214E-8	DEFECT
//skip abs. paths not under basedir, if set:	WITHOUT_CLASSIFICATION	0.9999965661749065	WITHOUT_CLASSIFICATION	3.4338250934302016E-6	DEFECT
//skip non-abs. paths if basedir == null:	WITHOUT_CLASSIFICATION	0.9999996357887947	WITHOUT_CLASSIFICATION	3.6421120534561616E-7	DEFECT
// we are going to scan everything anyway	WITHOUT_CLASSIFICATION	0.9999968777491979	WITHOUT_CLASSIFICATION	3.122250802134644E-6	DEFECT
// Empty	WITHOUT_CLASSIFICATION	0.9999937506290293	WITHOUT_CLASSIFICATION	6.249370970705334E-6	DEFECT
// will be caught and redirected to Ant's logging system	WITHOUT_CLASSIFICATION	0.9999860063291335	WITHOUT_CLASSIFICATION	1.3993670866511592E-5	DEFECT
// will be caught and redirected to Ant's logging system	WITHOUT_CLASSIFICATION	0.9999860063291335	WITHOUT_CLASSIFICATION	1.3993670866511592E-5	DEFECT
//removing base from path yields no change; path not child of base	WITHOUT_CLASSIFICATION	0.999999421949913	WITHOUT_CLASSIFICATION	5.780500870292131E-7	DEFECT
/* package-private */	WITHOUT_CLASSIFICATION	0.999999085712848	WITHOUT_CLASSIFICATION	9.142871521129037E-7	DEFECT
// do the "singleton" initialization	WITHOUT_CLASSIFICATION	0.9999991930851075	WITHOUT_CLASSIFICATION	8.069148925445146E-7	DEFECT
// Add the explicit resource collections to the archive.	WITHOUT_CLASSIFICATION	0.9999998583575325	WITHOUT_CLASSIFICATION	1.4164246757230738E-7	DEFECT
// EOL was "\r\n"	WITHOUT_CLASSIFICATION	0.9999997869379988	WITHOUT_CLASSIFICATION	2.1306200104892506E-7	DEFECT
// don't have to check for interface, since then // taskClass would be abstract too.	WITHOUT_CLASSIFICATION	0.9999995914372225	WITHOUT_CLASSIFICATION	4.0856277740339914E-7	DEFECT
// ignore this if the class being used as a task does not have // a set location method.	WITHOUT_CLASSIFICATION	0.9999993816531908	WITHOUT_CLASSIFICATION	6.183468093014145E-7	DEFECT
// ignore this if the class being used as a task does not have // a set project method.	WITHOUT_CLASSIFICATION	0.9999987241281821	WITHOUT_CLASSIFICATION	1.2758718178561693E-6	DEFECT
// put in the newroots map the include patterns without // wildcard tokens	WITHOUT_CLASSIFICATION	0.9999559984843699	WITHOUT_CLASSIFICATION	4.400151563003795E-5	DEFECT
// only scan directories that can include matched files or // directories	WITHOUT_CLASSIFICATION	0.9999988895897663	WITHOUT_CLASSIFICATION	1.1104102336809806E-6	DEFECT
// may be on a case insensitive file system.  We want // the results to show what's really on the disk, so // we need to double check.	WITHOUT_CLASSIFICATION	0.9999996882065953	WITHOUT_CLASSIFICATION	3.11793404688287E-7	DEFECT
// adapt currentelement to the case we've // actually found	WITHOUT_CLASSIFICATION	0.9999991222171959	WITHOUT_CLASSIFICATION	8.777828040974171E-7	DEFECT
// I am the only one so I have to close the reader	WITHOUT_CLASSIFICATION	0.9999993962367626	WITHOUT_CLASSIFICATION	6.037632374200238E-7	DEFECT
// I am the only one so I have to close the reader	WITHOUT_CLASSIFICATION	0.9999993962367626	WITHOUT_CLASSIFICATION	6.037632374200238E-7	DEFECT
// get parameters	WITHOUT_CLASSIFICATION	0.9999998815930121	WITHOUT_CLASSIFICATION	1.1840698784469892E-7	DEFECT
// Calculate the EOL string per the current config	WITHOUT_CLASSIFICATION	0.9999999232947582	WITHOUT_CLASSIFICATION	7.6705241892458E-8	DEFECT
// assume (eol == CrLf.LF || eol == CrLf.UNIX)	WITHOUT_CLASSIFICATION	0.9999999654060564	WITHOUT_CLASSIFICATION	3.4593943646142226E-8	DEFECT
// Add/Remove tabs	WITHOUT_CLASSIFICATION	0.999999210883661	WITHOUT_CLASSIFICATION	7.891163390901298E-7	DEFECT
// Add missing EOF character	WITHOUT_CLASSIFICATION	0.9999999982649235	WITHOUT_CLASSIFICATION	1.7350764113810466E-9	DEFECT
// Mask, block from being edited, all characters in constants.	WITHOUT_CLASSIFICATION	0.9999999881463684	WITHOUT_CLASSIFICATION	1.185363161113839E-8	DEFECT
// The current character is always emitted.	WITHOUT_CLASSIFICATION	0.9999997051830666	WITHOUT_CLASSIFICATION	2.9481693346192993E-7	DEFECT
// Fall tru	WITHOUT_CLASSIFICATION	0.9999954293494907	WITHOUT_CLASSIFICATION	4.5706505093096635E-6	DEFECT
// Fall tru	WITHOUT_CLASSIFICATION	0.9999954293494907	WITHOUT_CLASSIFICATION	4.5706505093096635E-6	DEFECT
// Fall tru	WITHOUT_CLASSIFICATION	0.9999954293494907	WITHOUT_CLASSIFICATION	4.5706505093096635E-6	DEFECT
// Fall tru	WITHOUT_CLASSIFICATION	0.9999954293494907	WITHOUT_CLASSIFICATION	4.5706505093096635E-6	DEFECT
// Fall tru	WITHOUT_CLASSIFICATION	0.9999954293494907	WITHOUT_CLASSIFICATION	4.5706505093096635E-6	DEFECT
// EOL	WITHOUT_CLASSIFICATION	0.9999938330368789	WITHOUT_CLASSIFICATION	6.16696312103179E-6	DEFECT
// EOL was "\n"	WITHOUT_CLASSIFICATION	0.99999955399595	WITHOUT_CLASSIFICATION	4.460040499816545E-7	DEFECT
// EOL was "\r\r\n"	WITHOUT_CLASSIFICATION	0.9999997869664459	WITHOUT_CLASSIFICATION	2.1303355417405473E-7	DEFECT
// EOL was "\r"	WITHOUT_CLASSIFICATION	0.9999997620675569	WITHOUT_CLASSIFICATION	2.3793244319248168E-7	DEFECT
// If source at EOF and lookAhead is ctrl-z, return EOF (NOT ctrl-z)	WITHOUT_CLASSIFICATION	0.9999933161431255	WITHOUT_CLASSIFICATION	6.683856874461448E-6	DEFECT
// if source is EOF but last character was NOT ctrl-z, return ctrl-z	WITHOUT_CLASSIFICATION	0.999999998443668	WITHOUT_CLASSIFICATION	1.556332005422739E-9	DEFECT
// Return current look-ahead	WITHOUT_CLASSIFICATION	0.9999830443840139	WITHOUT_CLASSIFICATION	1.6955615986138585E-5	DEFECT
// EOL was "\r\r" - handle as two consecutive "\r" and // "\r"	WITHOUT_CLASSIFICATION	0.9999999204535249	WITHOUT_CLASSIFICATION	7.95464749940728E-8	DEFECT
// Instance initializer: Executes just after the super() call in this // class's constructor.	WITHOUT_CLASSIFICATION	0.9999999712467762	WITHOUT_CLASSIFICATION	2.8753223896307872E-8	DEFECT
// Return copy so that the call must call setEof() to change the state // of fixCRLF	WITHOUT_CLASSIFICATION	0.9999999314252589	WITHOUT_CLASSIFICATION	6.857474113207595E-8	DEFECT
// Return copy so that the call must call setEol() to change the state // of fixCRLF	WITHOUT_CLASSIFICATION	0.9999999355955642	WITHOUT_CLASSIFICATION	6.440443579952049E-8	DEFECT
// Return copy so that the caller must call setTab() to change the state // of fixCRLF.	WITHOUT_CLASSIFICATION	0.9999999806414652	WITHOUT_CLASSIFICATION	1.9358534822648323E-8	DEFECT
// If I'm removing an EOF character, do so first so that the other // filters don't see that character.	WITHOUT_CLASSIFICATION	0.999999998692711	WITHOUT_CLASSIFICATION	1.307289135951082E-9	DEFECT
// Change all EOL characters to match the calculated EOL string. If // configured to do so, append a trailing EOL so that the file ends on // a EOL.	WITHOUT_CLASSIFICATION	0.9999999733175535	WITHOUT_CLASSIFICATION	2.6682446464682943E-8	DEFECT
// If filtering Java source, prevent changes to whitespace in // character and string literals.	WITHOUT_CLASSIFICATION	0.9999999493200669	WITHOUT_CLASSIFICATION	5.067993316857212E-8	DEFECT
// Works like clone() but doesn't show up in the Javadocs	WITHOUT_CLASSIFICATION	0.9999395530562076	WITHOUT_CLASSIFICATION	6.044694379231382E-5	DEFECT
// getConstants is a static method, no need to // pass in the object	WITHOUT_CLASSIFICATION	0.9999994831869926	WITHOUT_CLASSIFICATION	5.168130074051088E-7	DEFECT
//this field will hold unnnn right after reading a non latin character //afterwards it will be truncated of one char every call to read	WITHOUT_CLASSIFICATION	0.9997212085786372	WITHOUT_CLASSIFICATION	2.7879142136279965E-4	DEFECT
//replace the last 0s by the chars contained in s	WITHOUT_CLASSIFICATION	0.9999999402017448	WITHOUT_CLASSIFICATION	5.97982553073027E-8	DEFECT
// line started with comment	WITHOUT_CLASSIFICATION	0.9999996256340676	WITHOUT_CLASSIFICATION	3.743659324408797E-7	DEFECT
// ----------------------------------------- //  Predefined tokenizers // -----------------------------------------	WITHOUT_CLASSIFICATION	0.9999995842402373	WITHOUT_CLASSIFICATION	4.1575976268606746E-7	DEFECT
// write everything up to the from	WITHOUT_CLASSIFICATION	0.9999992683766284	WITHOUT_CLASSIFICATION	7.316233716125836E-7	DEFECT
// write the replacement to	WITHOUT_CLASSIFICATION	0.999999927985268	WITHOUT_CLASSIFICATION	7.201473199087667E-8	DEFECT
// search again	WITHOUT_CLASSIFICATION	0.999999985960934	WITHOUT_CLASSIFICATION	1.4039065991154075E-8	DEFECT
// write the remaining characters	WITHOUT_CLASSIFICATION	0.999999998524364	WITHOUT_CLASSIFICATION	1.4756358674952281E-9	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999734784456	WITHOUT_CLASSIFICATION	2.6521554394295955E-8	DEFECT
// -------------------------------------------- // //      Tokenizer Classes (impls moved to oata.util) // // --------------------------------------------	WITHOUT_CLASSIFICATION	0.9999997435867017	WITHOUT_CLASSIFICATION	2.5641329821666944E-7	DEFECT
// -------------------------------------------------------- //  static utility methods - could be placed somewhere else // --------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999999917545584	WITHOUT_CLASSIFICATION	8.245441571833667E-9	DEFECT
//Remove start and end quotes if field is a String	WITHOUT_CLASSIFICATION	0.9999745138208987	WITHOUT_CLASSIFICATION	2.5486179101206094E-5	DEFECT
// default buffer size	WITHOUT_CLASSIFICATION	0.9999997440487458	WITHOUT_CLASSIFICATION	2.5595125411172185E-7	DEFECT
/* Stateless */	WITHOUT_CLASSIFICATION	0.9999998313627624	WITHOUT_CLASSIFICATION	1.686372376567477E-7	DEFECT
// singletons - since all state is in the context	WITHOUT_CLASSIFICATION	0.9999958772855072	WITHOUT_CLASSIFICATION	4.122714492852335E-6	DEFECT
// we are in an imported file.	WITHOUT_CLASSIFICATION	0.9999997981307404	WITHOUT_CLASSIFICATION	2.0186925968237644E-7	DEFECT
// top level file	WITHOUT_CLASSIFICATION	0.9999999030092963	WITHOUT_CLASSIFICATION	9.699070365957296E-8	DEFECT
// ?? OK ??	WITHOUT_CLASSIFICATION	0.9999996400651808	WITHOUT_CLASSIFICATION	3.5993481919647684E-7	DEFECT
// use default if not file or file not found	WITHOUT_CLASSIFICATION	0.9999999718570101	WITHOUT_CLASSIFICATION	2.8142990030631656E-8	DEFECT
// Set the location of the implicit target associated with the project tag	WITHOUT_CLASSIFICATION	0.9999999430909217	WITHOUT_CLASSIFICATION	5.690907838305823E-8	DEFECT
// Ignore attributes from unknown uris	WITHOUT_CLASSIFICATION	0.9999989863714089	WITHOUT_CLASSIFICATION	1.0136285910294441E-6	DEFECT
// Ignore attributes from unknown uris	WITHOUT_CLASSIFICATION	0.9999989863714089	WITHOUT_CLASSIFICATION	1.0136285910294441E-6	DEFECT
// What's the difference between id and name ?	WITHOUT_CLASSIFICATION	0.9999999367779919	WITHOUT_CLASSIFICATION	6.32220080406991E-8	DEFECT
// no further processing	WITHOUT_CLASSIFICATION	0.9999999968673067	WITHOUT_CLASSIFICATION	3.132693320100426E-9	DEFECT
// set explicitly before starting ?	WITHOUT_CLASSIFICATION	0.9999999120666689	WITHOUT_CLASSIFICATION	8.793333105217878E-8	DEFECT
// Default for baseDir is the location of the build file.	WITHOUT_CLASSIFICATION	0.9999999532375066	WITHOUT_CLASSIFICATION	4.6762493467074674E-8	DEFECT
// check whether the user has specified an absolute path	WITHOUT_CLASSIFICATION	0.9999999756961312	WITHOUT_CLASSIFICATION	2.4303868808227954E-8	DEFECT
// Check if this target is in the current build file	WITHOUT_CLASSIFICATION	0.9999999919048445	WITHOUT_CLASSIFICATION	8.095155612502629E-9	DEFECT
// If the name has not already been defined define it	WITHOUT_CLASSIFICATION	0.9999997414791595	WITHOUT_CLASSIFICATION	2.585208404922036E-7	DEFECT
// In an impored file (and not completely // ignoring the project tag)	WITHOUT_CLASSIFICATION	0.9999832088592006	WITHOUT_CLASSIFICATION	1.6791140799496586E-5	DEFECT
/* UnknownElement is used for tasks and data types - with               delayed eval */	WITHOUT_CLASSIFICATION	0.9999999440270724	WITHOUT_CLASSIFICATION	5.5972927525195355E-8	DEFECT
// Nested element	WITHOUT_CLASSIFICATION	0.9999999637382437	WITHOUT_CLASSIFICATION	3.626175627072049E-8	DEFECT
// Task included in a target ( including the default one ).	WITHOUT_CLASSIFICATION	0.9999999969215967	WITHOUT_CLASSIFICATION	3.0784032847274197E-9	DEFECT
// container.addTask(task); // This is a nop in UE: task.init();	WITHOUT_CLASSIFICATION	0.9999981552580275	WITHOUT_CLASSIFICATION	1.844741972482345E-6	DEFECT
// **   simple name specified   == path in list + name	WITHOUT_CLASSIFICATION	0.9999999557899502	WITHOUT_CLASSIFICATION	4.421004990879605E-8	DEFECT
// if the suffix does not starts with a '.' and the // char preceding the suffix is a '.', we assume the user // wants to remove the '.' as well (see docs)	WITHOUT_CLASSIFICATION	0.9999994606950099	WITHOUT_CLASSIFICATION	5.393049900386399E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999920118448	WITHOUT_CLASSIFICATION	7.988155193624096E-8	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999920118448	WITHOUT_CLASSIFICATION	7.988155193624096E-8	DEFECT
// use default if not file or file not found	WITHOUT_CLASSIFICATION	0.9999999718570101	WITHOUT_CLASSIFICATION	2.8142990030631656E-8	DEFECT
// check whether the user has specified an absolute path	WITHOUT_CLASSIFICATION	0.9999999756961312	WITHOUT_CLASSIFICATION	2.4303868808227954E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999734784456	WITHOUT_CLASSIFICATION	2.6521554394295955E-8	DEFECT
// Start handling SAX events	WITHOUT_CLASSIFICATION	0.9999999608212182	WITHOUT_CLASSIFICATION	3.917878172021923E-8	DEFECT
// Let parent resume handling SAX events	WITHOUT_CLASSIFICATION	0.9999993022349806	WITHOUT_CLASSIFICATION	6.977650194861467E-7	DEFECT
// implicit target must be first on dependency list	WITHOUT_CLASSIFICATION	0.9999999949971291	WITHOUT_CLASSIFICATION	5.002870795229379E-9	DEFECT
// take care of dependencies	WITHOUT_CLASSIFICATION	0.9999986183906954	WITHOUT_CLASSIFICATION	1.3816093045780874E-6	DEFECT
// swallow here, will be thrown again in // UnknownElement.maybeConfigure if the problem persists.	WITHOUT_CLASSIFICATION	0.9999994488398357	WITHOUT_CLASSIFICATION	5.511601642767223E-7	DEFECT
//XXX task.setTaskType(tag);	WITHOUT_CLASSIFICATION	0.9999915817953082	WITHOUT_CLASSIFICATION	8.418204691767084E-6	DEFECT
// task can contain other tasks - no other nested elements possible	WITHOUT_CLASSIFICATION	0.9999999562426851	WITHOUT_CLASSIFICATION	4.375731498107432E-8	DEFECT
// taskcontainer nested element can contain other tasks - no other // nested elements possible	WITHOUT_CLASSIFICATION	0.9999999665059086	WITHOUT_CLASSIFICATION	3.3494091284281536E-8	DEFECT
// Should not happen	WITHOUT_CLASSIFICATION	0.9999671410849831	WITHOUT_CLASSIFICATION	3.285891501694987E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999997703627461	WITHOUT_CLASSIFICATION	2.296372539220789E-7	DEFECT
// the first hex character if a character needs to be escaped	WITHOUT_CLASSIFICATION	0.9999996456102116	WITHOUT_CLASSIFICATION	3.543897884852381E-7	DEFECT
// the second hex character if a character needs to be escaped	WITHOUT_CLASSIFICATION	0.9999951100217064	WITHOUT_CLASSIFICATION	4.889978293594483E-6	DEFECT
// initialize the above 3 arrays	WITHOUT_CLASSIFICATION	0.9999998894282994	WITHOUT_CLASSIFICATION	1.1057170052655924E-7	DEFECT
// #8031: first try Java 1.4.	WITHOUT_CLASSIFICATION	0.9999940964654737	WITHOUT_CLASSIFICATION	5.9035345264236024E-6	DEFECT
// Fine, Java 1.3 or earlier, do it by hand.	WITHOUT_CLASSIFICATION	0.9999975224995535	WITHOUT_CLASSIFICATION	2.4775004465209466E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999734784456	WITHOUT_CLASSIFICATION	2.6521554394295955E-8	DEFECT
// Bad URI, pass this on.	WITHOUT_CLASSIFICATION	0.9998203730231514	WITHOUT_CLASSIFICATION	1.7962697684861044E-4	DEFECT
// Unexpected target exception? Should not happen.	WITHOUT_CLASSIFICATION	0.9999997757423275	WITHOUT_CLASSIFICATION	2.2425767246692998E-7	DEFECT
// Reflection problems? Should not happen, debug.	WITHOUT_CLASSIFICATION	0.9940637043606935	WITHOUT_CLASSIFICATION	0.005936295639306558	DEFECT
// Fallback method for Java 1.3 or earlier.	WITHOUT_CLASSIFICATION	0.999985462357465	WITHOUT_CLASSIFICATION	1.4537642534955541E-5	DEFECT
// Ignore malformed exception	WITHOUT_CLASSIFICATION	0.99999952417737	WITHOUT_CLASSIFICATION	4.758226299892914E-7	DEFECT
// if it's not an ASCII character, break here, and use UTF-8 encoding	WITHOUT_CLASSIFICATION	0.9999998769004531	WITHOUT_CLASSIFICATION	1.230995468567256E-7	DEFECT
// record the fact that it's escaped	WITHOUT_CLASSIFICATION	0.9999991808964258	WITHOUT_CLASSIFICATION	8.191035743077781E-7	DEFECT
// we saw some non-ascii character	WITHOUT_CLASSIFICATION	0.9999999915701288	WITHOUT_CLASSIFICATION	8.42987123770782E-9	DEFECT
// get UTF-8 bytes for the remaining sub-string	WITHOUT_CLASSIFICATION	0.999999987577976	WITHOUT_CLASSIFICATION	1.2422023941752507E-8	DEFECT
// for each byte	WITHOUT_CLASSIFICATION	0.9999998029391577	WITHOUT_CLASSIFICATION	1.9706084241911638E-7	DEFECT
// for non-ascii character: make it positive, then escape	WITHOUT_CLASSIFICATION	0.9999985897118198	WITHOUT_CLASSIFICATION	1.410288180222134E-6	DEFECT
// firstly check if the tools jar is already in the classpath	WITHOUT_CLASSIFICATION	0.9999999630857004	WITHOUT_CLASSIFICATION	3.691429956119774E-8	DEFECT
// just check whether this throws an exception	WITHOUT_CLASSIFICATION	0.9999999676912202	WITHOUT_CLASSIFICATION	3.230877979171203E-8	DEFECT
// couldn't find compiler - try to find tools.jar // based on java.home setting	WITHOUT_CLASSIFICATION	0.9999996059130329	WITHOUT_CLASSIFICATION	3.940869669599319E-7	DEFECT
// Found in java.home as given	WITHOUT_CLASSIFICATION	0.9999981905094231	WITHOUT_CLASSIFICATION	1.8094905768500407E-6	DEFECT
// add any jars in the directory	WITHOUT_CLASSIFICATION	0.9999979270907576	WITHOUT_CLASSIFICATION	2.0729092423374774E-6	DEFECT
// now update the class.path property	WITHOUT_CLASSIFICATION	0.9999985382568006	WITHOUT_CLASSIFICATION	1.4617431993424849E-6	DEFECT
// overlay specified properties file (if any), which overrides project // settings	WITHOUT_CLASSIFICATION	0.999999991653282	WITHOUT_CLASSIFICATION	8.346717931490532E-9	DEFECT
// ignore because properties file is not required	WITHOUT_CLASSIFICATION	0.9999974922589977	WITHOUT_CLASSIFICATION	2.507741002305785E-6	DEFECT
// private static final int ATTR_NORMAL = 0; // private static final int ATTR_BRIGHT = 1;	WITHOUT_CLASSIFICATION	0.9999999840747004	WITHOUT_CLASSIFICATION	1.592529964189135E-8	DEFECT
// private static final int ATTR_UNDERLINE = 3; // private static final int ATTR_BLINK = 5; // private static final int ATTR_REVERSE = 7; // private static final int ATTR_HIDDEN = 8;	WITHOUT_CLASSIFICATION	0.9999999739147636	WITHOUT_CLASSIFICATION	2.6085236494903352E-8	DEFECT
// private static final int FG_BLACK = 30;	WITHOUT_CLASSIFICATION	0.9999999662012871	WITHOUT_CLASSIFICATION	3.379871301881267E-8	DEFECT
// private static final int FG_YELLOW = 33;	WITHOUT_CLASSIFICATION	0.9999999904601665	WITHOUT_CLASSIFICATION	9.539833422862004E-9	DEFECT
// private static final int FG_WHITE = 37;	WITHOUT_CLASSIFICATION	0.999999985202968	WITHOUT_CLASSIFICATION	1.479703202137007E-8	DEFECT
//Ignore - we will use the defaults.	WITHOUT_CLASSIFICATION	0.9999999500609901	WITHOUT_CLASSIFICATION	4.9939009985277586E-8	DEFECT
//Ignore - We do not want this to stop the build.	WITHOUT_CLASSIFICATION	0.9999968555697879	WITHOUT_CLASSIFICATION	3.144430212152123E-6	DEFECT
// Fall through	WITHOUT_CLASSIFICATION	0.99995807837967	WITHOUT_CLASSIFICATION	4.192162033010797E-5	DEFECT
// Whether or not an actual update is required - // we don't need to update if the original file doesn't exist	WITHOUT_CLASSIFICATION	0.9996461879522838	WITHOUT_CLASSIFICATION	3.5381204771618013E-4	DEFECT
// Use the logger config	WITHOUT_CLASSIFICATION	0.9999999178240336	WITHOUT_CLASSIFICATION	8.217596627327088E-8	DEFECT
// Since task log category includes target, we don't really // need this message	WITHOUT_CLASSIFICATION	0.9999999103131794	WITHOUT_CLASSIFICATION	8.96868205273382E-8	DEFECT
// Driver doesn't understand the URL	WITHOUT_CLASSIFICATION	0.9999988293051256	WITHOUT_CLASSIFICATION	1.170694874346471E-6	DEFECT
// It's a task - append the target	WITHOUT_CLASSIFICATION	0.9999998549107973	WITHOUT_CLASSIFICATION	1.4508920267906856E-7	DEFECT
// finally, lets execute the compiler!!	WITHOUT_CLASSIFICATION	0.9999957916711524	WITHOUT_CLASSIFICATION	4.208328847592932E-6	DEFECT
// Doesn't make sense for c-l. Use the logger config	WITHOUT_CLASSIFICATION	0.9999975478276761	WITHOUT_CLASSIFICATION	2.4521723239343774E-6	DEFECT
// Could not get the required information	WITHOUT_CLASSIFICATION	0.9999810345981666	WITHOUT_CLASSIFICATION	1.896540183346089E-5	DEFECT
// Create a ZipFileSet for this file, and pass it up.	WITHOUT_CLASSIFICATION	0.9999988881452692	WITHOUT_CLASSIFICATION	1.1118547308622186E-6	DEFECT
// now we need to populate the compiler adapter	WITHOUT_CLASSIFICATION	0.9999997847934561	WITHOUT_CLASSIFICATION	2.152065439566699E-7	DEFECT
// If no webxml file is specified, it's an error.	WITHOUT_CLASSIFICATION	0.99999996458702	WITHOUT_CLASSIFICATION	3.541298004530391E-8	DEFECT
// One cannot RMIC an interface for "classic" RMI (JRMP)	WITHOUT_CLASSIFICATION	0.9999992117530125	WITHOUT_CLASSIFICATION	7.882469875770011E-7	DEFECT
// otherwise perform a timestamp comparison - at least	WITHOUT_CLASSIFICATION	0.999999178004082	WITHOUT_CLASSIFICATION	8.219959180621435E-7	DEFECT
// don't know how to handle that - a IDL file doesn't // have a corresponding Java source for example.	WITHOUT_CLASSIFICATION	0.9999471182572489	WITHOUT_CLASSIFICATION	5.28817427511172E-5	DEFECT
/*             * Move the generated source file to the base directory.  If             * base directory and sourcebase are the same, the generated             * sources are already in place.             */	WITHOUT_CLASSIFICATION	0.9999999507204119	WITHOUT_CLASSIFICATION	4.9279588164749393E-8	DEFECT
// no source file generated, nothing to move	WITHOUT_CLASSIFICATION	0.9999999983419943	WITHOUT_CLASSIFICATION	1.6580058114348752E-9	DEFECT
// not the requested type	WITHOUT_CLASSIFICATION	0.9999957754835553	WITHOUT_CLASSIFICATION	4.224516444658413E-6	DEFECT
// **   full-pathname specified == path in list // **   simple name specified   == path in list	WITHOUT_CLASSIFICATION	0.9999999397210504	WITHOUT_CLASSIFICATION	6.027894957157895E-8	DEFECT
// we only get here if an exception has been thrown	WITHOUT_CLASSIFICATION	0.9999849296229315	WITHOUT_CLASSIFICATION	1.5070377068508932E-5	DEFECT
// **   full-pathname specified == parent dir of path in list	WITHOUT_CLASSIFICATION	0.999999757426368	WITHOUT_CLASSIFICATION	2.42573631926497E-7	DEFECT
// not the requested type	WITHOUT_CLASSIFICATION	0.9999957754835553	WITHOUT_CLASSIFICATION	4.224516444658413E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999734784456	WITHOUT_CLASSIFICATION	2.6521554394295955E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999734784456	WITHOUT_CLASSIFICATION	2.6521554394295955E-8	DEFECT
//the rest of the method treats single jar like //a nested path with one file	WITHOUT_CLASSIFICATION	0.999991316879733	WITHOUT_CLASSIFICATION	8.68312026712591E-6	DEFECT
// Check for \r, \r\n and \r\r\n // Regard \r\r not followed by \n as two lines	WITHOUT_CLASSIFICATION	0.999999023065954	WITHOUT_CLASSIFICATION	9.769340459524204E-7	DEFECT
// scan base dirs to build up compile lists only if a // specific classname is not given	WITHOUT_CLASSIFICATION	0.9999973825561218	WITHOUT_CLASSIFICATION	2.6174438781911396E-6	DEFECT
// **   simple name specified   == parent dir + name	WITHOUT_CLASSIFICATION	0.999999870732122	WITHOUT_CLASSIFICATION	1.2926787789429476E-7	DEFECT
// class found but restricted name; this is // actually the case we're looking for in JDK 1.3+, // so catch the exception and return	WITHOUT_CLASSIFICATION	0.9999996645352571	WITHOUT_CLASSIFICATION	3.354647428335196E-7	DEFECT
// Can return null to represent the bootstrap class loader. // see API docs of Class.getClassLoader.	WITHOUT_CLASSIFICATION	0.9999999958228987	WITHOUT_CLASSIFICATION	4.177101328541886E-9	DEFECT
// must be "add"	WITHOUT_CLASSIFICATION	0.9999999513326975	WITHOUT_CLASSIFICATION	4.866730257971979E-8	DEFECT
// first off, make sure that we've got a srcdir and destdir	WITHOUT_CLASSIFICATION	0.9999999245664105	WITHOUT_CLASSIFICATION	7.543358951035922E-8	DEFECT
// log options used	WITHOUT_CLASSIFICATION	0.9999997411098492	WITHOUT_CLASSIFICATION	2.588901507156465E-7	DEFECT
//patch file into the fileset	WITHOUT_CLASSIFICATION	0.9999999713692684	WITHOUT_CLASSIFICATION	2.863073159129706E-8	DEFECT
//set our parent dir	WITHOUT_CLASSIFICATION	0.9999991578407066	WITHOUT_CLASSIFICATION	8.421592933509287E-7	DEFECT
// Compare the destination with the temp file	WITHOUT_CLASSIFICATION	0.9999999827502175	WITHOUT_CLASSIFICATION	1.7249782460903547E-8	DEFECT
// Eof has been reached	WITHOUT_CLASSIFICATION	0.9999988423709935	WITHOUT_CLASSIFICATION	1.1576290064819462E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999734784456	WITHOUT_CLASSIFICATION	2.6521554394295955E-8	DEFECT
// don't reposition when we've reached the end // of the stream	WITHOUT_CLASSIFICATION	0.9999982642001484	WITHOUT_CLASSIFICATION	1.7357998516772562E-6	DEFECT
// if at eolcount == 0 and trailing characters of string // are CTRL-Zs, set eofStr	WITHOUT_CLASSIFICATION	0.9999999999503746	WITHOUT_CLASSIFICATION	4.962541743477206E-11	DEFECT
// keep searching for the first ^Z	WITHOUT_CLASSIFICATION	0.9999999887682932	WITHOUT_CLASSIFICATION	1.1231706781835337E-8	DEFECT
// Trailing characters are ^Zs // Construct new line and eofStr	WITHOUT_CLASSIFICATION	0.9999999985293427	WITHOUT_CLASSIFICATION	1.4706572365553876E-9	DEFECT
// permissible values for compression attribute	WITHOUT_CLASSIFICATION	0.9999914858725029	WITHOUT_CLASSIFICATION	8.514127497124375E-6	DEFECT
//default	WITHOUT_CLASSIFICATION	0.9999935834424488	WITHOUT_CLASSIFICATION	6.416557551124537E-6	DEFECT
// shadow of the above if the value is altered in execute	WITHOUT_CLASSIFICATION	0.9999987048423105	WITHOUT_CLASSIFICATION	1.2951576895570657E-6	DEFECT
// For directories:	WITHOUT_CLASSIFICATION	0.9999985686246793	WITHOUT_CLASSIFICATION	1.4313753208000137E-6	DEFECT
// Renamed version of original file, if it exists	WITHOUT_CLASSIFICATION	0.9999762557658474	WITHOUT_CLASSIFICATION	2.3744234152623823E-5	DEFECT
// Add the files found in groupfileset to fileset	WITHOUT_CLASSIFICATION	0.9999992180122195	WITHOUT_CLASSIFICATION	7.819877805144469E-7	DEFECT
// can also handle empty archives	WITHOUT_CLASSIFICATION	0.9999999497592359	WITHOUT_CLASSIFICATION	5.0240764126128795E-8	DEFECT
// quick exit if the target is up to date	WITHOUT_CLASSIFICATION	0.9999999635893554	WITHOUT_CLASSIFICATION	3.641064461713841E-8	DEFECT
// Close the output stream.	WITHOUT_CLASSIFICATION	0.9999999936458774	WITHOUT_CLASSIFICATION	6.3541225786866E-9	DEFECT
// we are recreating the archive, need all resources	WITHOUT_CLASSIFICATION	0.9999999679878773	WITHOUT_CLASSIFICATION	3.2012122706899586E-8	DEFECT
// delete a bogus ZIP file (but only if it's not the original one)	WITHOUT_CLASSIFICATION	0.999999235425034	WITHOUT_CLASSIFICATION	7.645749658619332E-7	DEFECT
// In this case using java.util.zip will not work // because it does not permit a zero-entry archive. // Must create it manually.	WITHOUT_CLASSIFICATION	0.963735065440779	WITHOUT_CLASSIFICATION	0.03626493455922104	DEFECT
// Cf. PKZIP specification.	WITHOUT_CLASSIFICATION	0.9999999509367044	WITHOUT_CLASSIFICATION	4.906329566583553E-8	DEFECT
// P // K	WITHOUT_CLASSIFICATION	0.999995330740358	WITHOUT_CLASSIFICATION	4.669259642109534E-6	DEFECT
// remainder zeros	WITHOUT_CLASSIFICATION	0.9999990518094822	WITHOUT_CLASSIFICATION	9.481905177225987E-7	DEFECT
// Create.	WITHOUT_CLASSIFICATION	0.9999998484692034	WITHOUT_CLASSIFICATION	1.515307965845248E-7	DEFECT
// we are recreating the archive, need all resources	WITHOUT_CLASSIFICATION	0.9999999679878773	WITHOUT_CLASSIFICATION	3.2012122706899586E-8	DEFECT
// initialResources is not empty	WITHOUT_CLASSIFICATION	0.9999974873850145	WITHOUT_CLASSIFICATION	2.5126149854766254E-6	DEFECT
// initialResources is not empty	WITHOUT_CLASSIFICATION	0.9999974873850145	WITHOUT_CLASSIFICATION	2.5126149854766254E-6	DEFECT
// in this case all files from origin map to // the fullPath attribute of the zipfileset at // destination	WITHOUT_CLASSIFICATION	0.9999892525532571	WITHOUT_CLASSIFICATION	1.0747446742810634E-5	DEFECT
// we are recreating the archive, need all resources	WITHOUT_CLASSIFICATION	0.9999999679878773	WITHOUT_CLASSIFICATION	3.2012122706899586E-8	DEFECT
// we are recreating the archive, need all resources	WITHOUT_CLASSIFICATION	0.9999999679878773	WITHOUT_CLASSIFICATION	3.2012122706899586E-8	DEFECT
// no emptyBehavior handling since the FileSet version // will take care of it.	WITHOUT_CLASSIFICATION	0.9999996143774252	WITHOUT_CLASSIFICATION	3.8562257475484E-7	DEFECT
/*         * Backwards compatibility forces us to repeat the logic of         * getResourcesToAdd(FileSet[], ...) here once again.         */	WITHOUT_CLASSIFICATION	0.9999999601508401	WITHOUT_CLASSIFICATION	3.984915986363685E-8	DEFECT
// we will return initialResources anyway, no reason // to scan further.	WITHOUT_CLASSIFICATION	0.9999999482424384	WITHOUT_CLASSIFICATION	5.175756144175066E-8	DEFECT
// we will return initialResources anyway, no reason // to scan further.	WITHOUT_CLASSIFICATION	0.9999999482424384	WITHOUT_CLASSIFICATION	5.175756144175066E-8	DEFECT
// ZIPs store time with a granularity of 2 seconds, round up	WITHOUT_CLASSIFICATION	0.9999636811599789	WITHOUT_CLASSIFICATION	3.6318840021189727E-5	DEFECT
// don't add directories we've already added. // no warning if we try, it is harmless in and of itself	WITHOUT_CLASSIFICATION	0.9999999892164024	WITHOUT_CLASSIFICATION	1.0783597656615851E-8	DEFECT
// A "refid" attribute for a node within a Path object.	WITHOUT_CLASSIFICATION	0.9999981868250647	WITHOUT_CLASSIFICATION	1.8131749352627328E-6	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9999971163476059	WITHOUT_CLASSIFICATION	2.8836523940921245E-6	DEFECT
//default	WITHOUT_CLASSIFICATION	0.9999935834424488	WITHOUT_CLASSIFICATION	6.416557551124537E-6	DEFECT
//default	WITHOUT_CLASSIFICATION	0.9999935834424488	WITHOUT_CLASSIFICATION	6.416557551124537E-6	DEFECT
// ZIPs store time with a granularity of 2 seconds, round up	WITHOUT_CLASSIFICATION	0.9999636811599789	WITHOUT_CLASSIFICATION	3.6318840021189727E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999734784456	WITHOUT_CLASSIFICATION	2.6521554394295955E-8	DEFECT
// duplicate equal to add, so we continue	WITHOUT_CLASSIFICATION	0.9999999846034944	WITHOUT_CLASSIFICATION	1.539650567487469E-8	DEFECT
// Store data into a byte[]	WITHOUT_CLASSIFICATION	0.9999989209894493	WITHOUT_CLASSIFICATION	1.0790105506382917E-6	DEFECT
// may be altered in validate	WITHOUT_CLASSIFICATION	0.9999989692358492	WITHOUT_CLASSIFICATION	1.030764150819715E-6	DEFECT
// set user-defined properties	WITHOUT_CLASSIFICATION	0.9999999983688205	WITHOUT_CLASSIFICATION	1.6311795483504472E-9	DEFECT
// set Java built-in properties separately, // b/c we won't inherit them.	WITHOUT_CLASSIFICATION	0.9999938776918862	WITHOUT_CLASSIFICATION	6.1223081137372515E-6	DEFECT
// set all properties from calling project	WITHOUT_CLASSIFICATION	0.9999984512179831	WITHOUT_CLASSIFICATION	1.548782016927179E-6	DEFECT
// has been set explicitly	WITHOUT_CLASSIFICATION	0.9999995376343118	WITHOUT_CLASSIFICATION	4.623656881107638E-7	DEFECT
// Are we trying to call the target in which we are defined (or // the build file if this is a top level task)?	WITHOUT_CLASSIFICATION	0.9999999968365393	WITHOUT_CLASSIFICATION	3.1634606428514067E-9	DEFECT
// help the gc	WITHOUT_CLASSIFICATION	0.9999953568019975	WITHOUT_CLASSIFICATION	4.643198002527996E-6	DEFECT
// remove duplicate properties - last property wins // Needed for backward compatibility	WITHOUT_CLASSIFICATION	0.9999990493084818	WITHOUT_CLASSIFICATION	9.506915182816657E-7	DEFECT
// Now add all references that are not defined in the // subproject, if inheritRefs is true	WITHOUT_CLASSIFICATION	0.9999990830042279	WITHOUT_CLASSIFICATION	9.169957721390315E-7	DEFECT
// not Clonable	WITHOUT_CLASSIFICATION	0.9999996554555226	WITHOUT_CLASSIFICATION	3.445444773641489E-7	DEFECT
// ignore this if the class being referenced does not have // a set project method.	WITHOUT_CLASSIFICATION	0.9999836324627073	WITHOUT_CLASSIFICATION	1.6367537292698872E-5	DEFECT
// basedir and ant.file get special treatment in execute()	WITHOUT_CLASSIFICATION	0.9999989682795277	WITHOUT_CLASSIFICATION	1.0317204722408101E-6	DEFECT
// don't re-set user properties, avoid the warning message	WITHOUT_CLASSIFICATION	0.9999992177765304	WITHOUT_CLASSIFICATION	7.82223469649756E-7	DEFECT
// no user property	WITHOUT_CLASSIFICATION	0.9999995982106928	WITHOUT_CLASSIFICATION	4.01789307142619E-7	DEFECT
// @note: it is a string and not a file to handle relative/absolute // otherwise a relative file will be resolved based on the current // basedir.	WITHOUT_CLASSIFICATION	0.9999989200179561	WITHOUT_CLASSIFICATION	1.0799820438475482E-6	DEFECT
/*     * Get the (sub)-Project instance currently in use.     * @return Project     * @since Ant 1.7     */	WITHOUT_CLASSIFICATION	0.9999990958545711	WITHOUT_CLASSIFICATION	9.041454288532147E-7	DEFECT
// check to make sure that the given dir isn't a symlink // the comparison of absolute path and canonical path // catches this	WITHOUT_CLASSIFICATION	0.9980544574457233	WITHOUT_CLASSIFICATION	0.0019455425542767634	DEFECT
//validation logic	WITHOUT_CLASSIFICATION	0.9999898118927584	WITHOUT_CLASSIFICATION	1.0188107241634052E-5	DEFECT
//this isnt strictly needed, but by being fussy now, //we can change implementation details later	WITHOUT_CLASSIFICATION	0.9999906831876721	WITHOUT_CLASSIFICATION	9.316812327727344E-6	DEFECT
//special case single jar handling with signedjar attribute set	WITHOUT_CLASSIFICATION	0.999999990178138	WITHOUT_CLASSIFICATION	9.821862096458219E-9	DEFECT
// single jar processing	WITHOUT_CLASSIFICATION	0.999999986600312	WITHOUT_CLASSIFICATION	1.3399688002358844E-8	DEFECT
//return here.	WITHOUT_CLASSIFICATION	0.9999805621573199	WITHOUT_CLASSIFICATION	1.9437842680129422E-5	DEFECT
//set up our mapping policy	WITHOUT_CLASSIFICATION	0.9999998028716257	WITHOUT_CLASSIFICATION	1.971283742357306E-7	DEFECT
//no mapper? use the identity policy	WITHOUT_CLASSIFICATION	0.9999972387362622	WITHOUT_CLASSIFICATION	2.7612637377037474E-6	DEFECT
//determine the destination filename via the mapper	WITHOUT_CLASSIFICATION	0.9999998852310377	WITHOUT_CLASSIFICATION	1.1476896228573037E-7	DEFECT
//we only like simple mappers.	WITHOUT_CLASSIFICATION	0.999936564790081	WITHOUT_CLASSIFICATION	6.343520991897943E-5	DEFECT
//DO NOT SET THE -signedjar OPTION if source==dest //unless you like fielding hotspot crash reports	WITHOUT_CLASSIFICATION	0.9999996850250806	WITHOUT_CLASSIFICATION	3.1497491938814647E-7	DEFECT
//add -tsa operations if declared	WITHOUT_CLASSIFICATION	0.9999998459773597	WITHOUT_CLASSIFICATION	1.5402264033040775E-7	DEFECT
//JAR source is required	WITHOUT_CLASSIFICATION	0.9999648463686351	WITHOUT_CLASSIFICATION	3.515363136487719E-5	DEFECT
//alias is required for signing	WITHOUT_CLASSIFICATION	0.9997804620938646	WITHOUT_CLASSIFICATION	2.1953790613533133E-4	DEFECT
// restore the lastModified attribute	WITHOUT_CLASSIFICATION	0.9999998989059917	WITHOUT_CLASSIFICATION	1.0109400818643056E-7	DEFECT
//we normally compare destination with source	WITHOUT_CLASSIFICATION	0.999998804179298	WITHOUT_CLASSIFICATION	1.1958207020335916E-6	DEFECT
//but if no dest is specified, compare source to source	WITHOUT_CLASSIFICATION	0.9999999742033316	WITHOUT_CLASSIFICATION	2.5796668345132464E-8	DEFECT
//if, by any means, the destfile and source match,	WITHOUT_CLASSIFICATION	0.9999993804384907	WITHOUT_CLASSIFICATION	6.19561509361185E-7	DEFECT
//we check the presence of signatures on lazy signing	WITHOUT_CLASSIFICATION	0.9999984998096793	WITHOUT_CLASSIFICATION	1.5001903206646635E-6	DEFECT
//unsigned or non-lazy self signings are always false	WITHOUT_CLASSIFICATION	0.9999862134201714	WITHOUT_CLASSIFICATION	1.378657982862781E-5	DEFECT
//if they are different, the timestamps are used	WITHOUT_CLASSIFICATION	0.9999999375411064	WITHOUT_CLASSIFICATION	6.245889361340098E-8	DEFECT
//just log this	WITHOUT_CLASSIFICATION	0.9999927570820065	WITHOUT_CLASSIFICATION	7.242917993440083E-6	DEFECT
// fileutils	WITHOUT_CLASSIFICATION	0.9999998230126782	WITHOUT_CLASSIFICATION	1.769873217508774E-7	DEFECT
// --- Fields --	WITHOUT_CLASSIFICATION	0.9999984065599686	WITHOUT_CLASSIFICATION	1.593440031433304E-6	DEFECT
// Keep a hashtable of attributes added by this task. // This task is allow to override its own properties // but not other properties.  So we need to keep track // of which properties we've added.	WITHOUT_CLASSIFICATION	0.9999999753438602	WITHOUT_CLASSIFICATION	2.465613967727863E-8	DEFECT
// Error generated during parsing	WITHOUT_CLASSIFICATION	0.9999947364566599	WITHOUT_CLASSIFICATION	5.263543340134376E-6	DEFECT
// Parser with specified options can't be built	WITHOUT_CLASSIFICATION	0.9999957777497068	WITHOUT_CLASSIFICATION	4.222250293184777E-6	DEFECT
// I/O error	WITHOUT_CLASSIFICATION	0.999997802118219	WITHOUT_CLASSIFICATION	2.19788178101375E-6	DEFECT
// Set the prefix for this node to include its tag name.	WITHOUT_CLASSIFICATION	0.9999868819488071	WITHOUT_CLASSIFICATION	1.3118051192988075E-5	DEFECT
// Pass the container to the processing of this node,	WITHOUT_CLASSIFICATION	0.9999997950037083	WITHOUT_CLASSIFICATION	2.0499629169998034E-7	DEFECT
// now, iterate through children.	WITHOUT_CLASSIFICATION	0.9999994942357769	WITHOUT_CLASSIFICATION	5.057642231118824E-7	DEFECT
// For each child, pass the object added by // processNode to its children -- in other word, each // object can pass information along to its children.	WITHOUT_CLASSIFICATION	0.9999977603620195	WITHOUT_CLASSIFICATION	2.239637980588385E-6	DEFECT
// The value of an id attribute of this node.	WITHOUT_CLASSIFICATION	0.9999964582597218	WITHOUT_CLASSIFICATION	3.5417402781556365E-6	DEFECT
// Is there an id attribute?	WITHOUT_CLASSIFICATION	0.9999982295948926	WITHOUT_CLASSIFICATION	1.7704051074286427E-6	DEFECT
// Now, iterate through the attributes adding them.	WITHOUT_CLASSIFICATION	0.9999998145905417	WITHOUT_CLASSIFICATION	1.854094583286796E-7	DEFECT
/*                     * The main conditional logic -- if the attribute                     * is somehow "special" (i.e., it has known                     * semantic meaning) then deal with it                     * appropriately.                     */	WITHOUT_CLASSIFICATION	0.999992379365269	WITHOUT_CLASSIFICATION	7.620634731021223E-6	DEFECT
// ID has already been found above.	WITHOUT_CLASSIFICATION	0.9999993579849389	WITHOUT_CLASSIFICATION	6.420150611707745E-7	DEFECT
// A "path" attribute for a node within a Path object.	WITHOUT_CLASSIFICATION	0.9999970496612088	WITHOUT_CLASSIFICATION	2.9503387910595855E-6	DEFECT
// A node identifying a new path	WITHOUT_CLASSIFICATION	0.9999924608471442	WITHOUT_CLASSIFICATION	7.539152855780531E-6	DEFECT
// For the text node, add a property.	WITHOUT_CLASSIFICATION	0.9999922843648704	WITHOUT_CLASSIFICATION	7.715635129669067E-6	DEFECT
// If the containing object was a String, then use it as the ID.	WITHOUT_CLASSIFICATION	0.9999998204613717	WITHOUT_CLASSIFICATION	1.7953862835397388E-7	DEFECT
// If this attribute was added by this task, then // we append this value to the existing value. // We use the setProperty method which will // forcibly override the property if it already exists. // We need to put these properties into the project // when we read them, though (instead of keeping them // outside of the project and batch adding them at the end) // to allow other properties to reference them.	WITHOUT_CLASSIFICATION	0.9999993619029288	WITHOUT_CLASSIFICATION	6.380970712642988E-7	DEFECT
// Never include the "refid" attribute as part of the // attribute name.	WITHOUT_CLASSIFICATION	0.9999999999672272	WITHOUT_CLASSIFICATION	3.2772717608038643E-11	DEFECT
// Otherwise, return it appended unless property to hide it is set.	WITHOUT_CLASSIFICATION	0.9999943892120792	WITHOUT_CLASSIFICATION	5.610787920828709E-6	DEFECT
/* Expose members for extensibility */	WITHOUT_CLASSIFICATION	0.9999875694147526	WITHOUT_CLASSIFICATION	1.2430585247328406E-5	DEFECT
// delegate this way around to support subclasses that // overwrite getFile	WITHOUT_CLASSIFICATION	0.9999998578629148	WITHOUT_CLASSIFICATION	1.4213708516694444E-7	DEFECT
//we arent fully defined yet. this is an error unless //we are in an antlib, in which case the resource name is determined //automatically. //NB: URIs in the ant core package will be "" at this point.	WITHOUT_CLASSIFICATION	0.9999351049640482	WITHOUT_CLASSIFICATION	6.489503595174297E-5	DEFECT
//convert the URI to a resource	WITHOUT_CLASSIFICATION	0.9999997207677778	WITHOUT_CLASSIFICATION	2.7923222223995925E-7	DEFECT
//handle new style full paths to an antlib, in which //all but the forward slashes are allowed.	WITHOUT_CLASSIFICATION	0.9999999117316003	WITHOUT_CLASSIFICATION	8.826839970062302E-8	DEFECT
//if we haven't already named an XML file, it gets antlib.xml	WITHOUT_CLASSIFICATION	0.9999378607879498	WITHOUT_CLASSIFICATION	6.213921205022049E-5	DEFECT
//convert from a package to a path	WITHOUT_CLASSIFICATION	0.999999648073238	WITHOUT_CLASSIFICATION	3.5192676191805105E-7	DEFECT
// Here if there is an error	WITHOUT_CLASSIFICATION	0.9999998693567299	WITHOUT_CLASSIFICATION	1.3064327014835032E-7	DEFECT
// Fall Through	WITHOUT_CLASSIFICATION	0.9999853385161575	WITHOUT_CLASSIFICATION	1.4661483842536138E-5	DEFECT
// log at a lower level	WITHOUT_CLASSIFICATION	0.9999990541834304	WITHOUT_CLASSIFICATION	9.458165695924126E-7	DEFECT
// Ignore the problem	WITHOUT_CLASSIFICATION	0.9999992380275066	WITHOUT_CLASSIFICATION	7.61972493506465E-7	DEFECT
//trick to evoke "basedir not set" if null:	WITHOUT_CLASSIFICATION	0.9999857423258003	WITHOUT_CLASSIFICATION	1.4257674199619472E-5	DEFECT
//no sources = nothing to compare; no targets = nothing to delete:	WITHOUT_CLASSIFICATION	0.9999999773026306	WITHOUT_CLASSIFICATION	2.269736945751252E-8	DEFECT
// Members	WITHOUT_CLASSIFICATION	0.99999985432463	WITHOUT_CLASSIFICATION	1.4567536998658443E-7	DEFECT
// Members	WITHOUT_CLASSIFICATION	0.99999985432463	WITHOUT_CLASSIFICATION	1.4567536998658443E-7	DEFECT
// If we are a reference, create a Path from the reference	WITHOUT_CLASSIFICATION	0.9999975573296258	WITHOUT_CLASSIFICATION	2.4426703742692733E-6	DEFECT
// for NetWare and OS/2, piggy-back on Windows, since here and // in the apply code, the same assumptions can be made as with // windows - that \\ is an OK separator, and do comparisons // case-insensitive.	WITHOUT_CLASSIFICATION	0.9996114110727009	WITHOUT_CLASSIFICATION	3.8858892729911205E-4	DEFECT
// If the element starts with the configured prefix, then // convert the prefix to the configured 'to' value.	WITHOUT_CLASSIFICATION	0.9999980930379151	WITHOUT_CLASSIFICATION	1.9069620849390682E-6	DEFECT
// Currently, we deal with only two path formats: Unix and Windows // And Unix is everything that is not Windows	WITHOUT_CLASSIFICATION	0.9974734583741048	WITHOUT_CLASSIFICATION	0.0025265416258951883	DEFECT
// may be altered in validateSetup // may be altered in validateSetup	WITHOUT_CLASSIFICATION	0.9999988809708902	WITHOUT_CLASSIFICATION	1.1190291098854355E-6	DEFECT
// validate our setup	WITHOUT_CLASSIFICATION	0.9999999121507605	WITHOUT_CLASSIFICATION	8.784923956192716E-8	DEFECT
// Currently, we deal with only two path formats: Unix and Windows // And Unix is everything that is not Windows // (with the exception for NetWare and OS/2 below)	WITHOUT_CLASSIFICATION	0.9995042591689928	WITHOUT_CLASSIFICATION	4.957408310072801E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999734784456	WITHOUT_CLASSIFICATION	2.6521554394295955E-8	DEFECT
// Get the list of path components in canonical form	WITHOUT_CLASSIFICATION	0.999999988728298	WITHOUT_CLASSIFICATION	1.1271701988486495E-8	DEFECT
// Apply the path prefix map	WITHOUT_CLASSIFICATION	0.9997693924307364	WITHOUT_CLASSIFICATION	2.306075692635112E-4	DEFECT
// Now convert the path and file separator characters from the // current os to the target os.	WITHOUT_CLASSIFICATION	0.9999999996073051	WITHOUT_CLASSIFICATION	3.926948349145308E-10	DEFECT
// Place the result into the specified property, // unless setonempty == false	WITHOUT_CLASSIFICATION	0.9999999933139059	WITHOUT_CLASSIFICATION	6.686094106284254E-9	DEFECT
// Iterate over the map entries and apply each one. // Stop when one of the entries actually changes the element.	WITHOUT_CLASSIFICATION	0.9999998723245156	WITHOUT_CLASSIFICATION	1.276754843722429E-7	DEFECT
// Note I'm using "!=" to see if we got a new object back from // the apply method.	WITHOUT_CLASSIFICATION	0.9999998854014835	WITHOUT_CLASSIFICATION	1.1459851650538721E-7	DEFECT
// We applied one, so we're done	WITHOUT_CLASSIFICATION	0.9999999993619945	WITHOUT_CLASSIFICATION	6.380055486377475E-10	DEFECT
// Determine the separator strings.  The dirsep and pathsep attributes // override the targetOS settings.	WITHOUT_CLASSIFICATION	0.9999999999937668	WITHOUT_CLASSIFICATION	6.233198786737269E-12	DEFECT
// override with pathsep=	WITHOUT_CLASSIFICATION	0.9999999658550462	WITHOUT_CLASSIFICATION	3.414495376955928E-8	DEFECT
// override with dirsep=	WITHOUT_CLASSIFICATION	0.9999999488199769	WITHOUT_CLASSIFICATION	5.118002310457533E-8	DEFECT
// Check if used by attributes	WITHOUT_CLASSIFICATION	0.9999999988694324	WITHOUT_CLASSIFICATION	1.130567688612028E-9	DEFECT
// ? is there an xml api for this ?	WITHOUT_CLASSIFICATION	0.9999982710047647	WITHOUT_CLASSIFICATION	1.728995235290572E-6	DEFECT
////////////////////////////////////////////////////////////////////// // ATTRIBUTES	WITHOUT_CLASSIFICATION	0.9999961224717929	WITHOUT_CLASSIFICATION	3.8775282070168315E-6	DEFECT
////////////////////////////////////////////////////////////////////// // CONSTRUCTORS / INITIALIZERS	WITHOUT_CLASSIFICATION	0.9999987186985023	WITHOUT_CLASSIFICATION	1.2813014977672953E-6	DEFECT
////////////////////////////////////////////////////////////////////// // ACCESSOR METHODS	WITHOUT_CLASSIFICATION	0.9999942112782759	WITHOUT_CLASSIFICATION	5.788721724150239E-6	DEFECT
//Validate mandatory attributes	WITHOUT_CLASSIFICATION	0.9999834235243985	WITHOUT_CLASSIFICATION	1.657647560148162E-5	DEFECT
//the property attribute must have access to a property file	WITHOUT_CLASSIFICATION	0.9999980021198351	WITHOUT_CLASSIFICATION	1.9978801649481907E-6	DEFECT
//Make sure property exists in property file	WITHOUT_CLASSIFICATION	0.999662039545697	WITHOUT_CLASSIFICATION	3.379604543030827E-4	DEFECT
//Default is empty string	WITHOUT_CLASSIFICATION	0.9999998137240368	WITHOUT_CLASSIFICATION	1.8627596317648486E-7	DEFECT
// Avoid runtime problem on pre 1.4 when compiling post 1.4	WITHOUT_CLASSIFICATION	0.9998405088301292	WITHOUT_CLASSIFICATION	1.5949116987080953E-4	DEFECT
// end of finally	WITHOUT_CLASSIFICATION	0.999982716043168	WITHOUT_CLASSIFICATION	1.7283956832013504E-5	DEFECT
//look for and print warnings	WITHOUT_CLASSIFICATION	0.9999994764934034	WITHOUT_CLASSIFICATION	5.235065965724226E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999920118448	WITHOUT_CLASSIFICATION	7.988155193624096E-8	DEFECT
////////////////////////////////////////////////////////////////////// // ATTRIBUTES	WITHOUT_CLASSIFICATION	0.9999961224717929	WITHOUT_CLASSIFICATION	3.8775282070168315E-6	DEFECT
////////////////////////////////////////////////////////////////////// // ACCESSOR METHODS	WITHOUT_CLASSIFICATION	0.9999942112782759	WITHOUT_CLASSIFICATION	5.788721724150239E-6	DEFECT
// line separators in values and tokens are "\n" // in order to compare with the file contents, replace them // as needed	WITHOUT_CLASSIFICATION	0.9999999779902152	WITHOUT_CLASSIFICATION	2.200978485693071E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999734784456	WITHOUT_CLASSIFICATION	2.6521554394295955E-8	DEFECT
// Ignore Exception	WITHOUT_CLASSIFICATION	0.999999691665249	WITHOUT_CLASSIFICATION	3.08334750927462E-7	DEFECT
// no errors so far	WITHOUT_CLASSIFICATION	0.9999999294204731	WITHOUT_CLASSIFICATION	7.057952686963E-8	DEFECT
// If we don't know the type of the line // and we are in emacs mode, it will be // an error, because in this mode, jikes won't // always print "error", but sometimes other // keywords like "Syntax". We should look for // all those keywords.	WITHOUT_CLASSIFICATION	0.999999449965709	WITHOUT_CLASSIFICATION	5.500342910587679E-7	DEFECT
// plain impossible	WITHOUT_CLASSIFICATION	0.9999998789954668	WITHOUT_CLASSIFICATION	1.2100453317130653E-7	DEFECT
// We must check if the process was not stopped // before being here	WITHOUT_CLASSIFICATION	0.9999999017948968	WITHOUT_CLASSIFICATION	9.820510312975199E-8	DEFECT
// the process is not terminated, if this is really // a timeout and not a manual stop then kill it.	WITHOUT_CLASSIFICATION	0.9999862794224061	WITHOUT_CLASSIFICATION	1.3720577593932687E-5	DEFECT
////////////////////////////////////////////////////////////////////// // CORE / MAIN BODY	WITHOUT_CLASSIFICATION	0.9999721145322021	WITHOUT_CLASSIFICATION	2.788546779774009E-5	DEFECT
// get the recorder entry	WITHOUT_CLASSIFICATION	0.999991694156794	WITHOUT_CLASSIFICATION	8.305843205928524E-6	DEFECT
// set the values on the recorder	WITHOUT_CLASSIFICATION	0.9999965029719541	WITHOUT_CLASSIFICATION	3.4970280458511835E-6	DEFECT
////////////////////////////////////////////////////////////////////// // INNER CLASSES	WITHOUT_CLASSIFICATION	0.9999970570982067	WITHOUT_CLASSIFICATION	2.9429017932266184E-6	DEFECT
// create a recorder entry	WITHOUT_CLASSIFICATION	0.9999987851400078	WITHOUT_CLASSIFICATION	1.214859992182392E-6	DEFECT
// Use '/' to calculate digest based on file name. // This is required in order to get the same result // on different platforms.	WITHOUT_CLASSIFICATION	0.9999974624187719	WITHOUT_CLASSIFICATION	2.537581228151023E-6	DEFECT
// Read the checksum from disk.	WITHOUT_CLASSIFICATION	0.9999989233835542	WITHOUT_CLASSIFICATION	1.0766164458289293E-6	DEFECT
// A separate directory was explicitly declared	WITHOUT_CLASSIFICATION	0.9999998264829582	WITHOUT_CLASSIFICATION	1.7351704193520232E-7	DEFECT
// Empty statement	WITHOUT_CLASSIFICATION	0.9999998534101552	WITHOUT_CLASSIFICATION	1.46589844800606E-7	DEFECT
//can either be a property name string or a file	WITHOUT_CLASSIFICATION	0.9999986723916232	WITHOUT_CLASSIFICATION	1.3276083768589845E-6	DEFECT
// file is on wrong format, swallow	WITHOUT_CLASSIFICATION	0.9999759091190371	WITHOUT_CLASSIFICATION	2.4090880962826304E-5	DEFECT
// try to be smart, not to be fooled by a weird directory name	WITHOUT_CLASSIFICATION	0.9999996073365476	WITHOUT_CLASSIFICATION	3.9266345239485584E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999920118448	WITHOUT_CLASSIFICATION	7.988155193624096E-8	DEFECT
// Close the output stream.	WITHOUT_CLASSIFICATION	0.9999999936458774	WITHOUT_CLASSIFICATION	6.3541225786866E-9	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999734784456	WITHOUT_CLASSIFICATION	2.6521554394295955E-8	DEFECT
// File is Comparable, so sorting is trivial	WITHOUT_CLASSIFICATION	0.9999998806873096	WITHOUT_CLASSIFICATION	1.1931269043522026E-7	DEFECT
// Loop over the checksums and generate a total hash.	WITHOUT_CLASSIFICATION	0.9999999948481471	WITHOUT_CLASSIFICATION	5.151852959293353E-9	DEFECT
// Add the digest for the file content	WITHOUT_CLASSIFICATION	0.999999976267933	WITHOUT_CLASSIFICATION	2.373206702207091E-8	DEFECT
// Add the file path	WITHOUT_CLASSIFICATION	0.9999997341399428	WITHOUT_CLASSIFICATION	2.658600572128189E-7	DEFECT
// two characters form the hex value.	WITHOUT_CLASSIFICATION	0.9999998397639173	WITHOUT_CLASSIFICATION	1.6023608276183746E-7	DEFECT
// We just set the prefix for this fileset, and pass it up.	WITHOUT_CLASSIFICATION	0.9999933638937348	WITHOUT_CLASSIFICATION	6.636106265182413E-6	DEFECT
// Check if the service is configured correctly	WITHOUT_CLASSIFICATION	0.9999959888877028	WITHOUT_CLASSIFICATION	4.0111122970869425E-6	DEFECT
// if we haven't got the manifest yet, attempt to // get it now and have manifest be the final merge	WITHOUT_CLASSIFICATION	0.9999992875186547	WITHOUT_CLASSIFICATION	7.124813452938552E-7	DEFECT
// time to write the manifest	WITHOUT_CLASSIFICATION	0.9999998664454464	WITHOUT_CLASSIFICATION	1.335545535894727E-7	DEFECT
// encoding must be UTF8 as specified in the specs.	WITHOUT_CLASSIFICATION	0.9999999974445772	WITHOUT_CLASSIFICATION	2.5554228198859934E-9	DEFECT
// version-info blankline	WITHOUT_CLASSIFICATION	0.9999999304476623	WITHOUT_CLASSIFICATION	6.955233768498347E-8	DEFECT
// header newline	WITHOUT_CLASSIFICATION	0.9999990170809009	WITHOUT_CLASSIFICATION	9.82919099045496E-7	DEFECT
// If this is the same name specified in 'manifest', this // is the manifest to use	WITHOUT_CLASSIFICATION	0.9999996952259785	WITHOUT_CLASSIFICATION	3.047740214806967E-7	DEFECT
// we add this to our group of fileset manifests	WITHOUT_CLASSIFICATION	0.9999996251702405	WITHOUT_CLASSIFICATION	3.7482975949249413E-7	DEFECT
// assuming 'skip' otherwise // don't warn if skip has been requested explicitly, warn if user // didn't set the attribute	WITHOUT_CLASSIFICATION	0.9999974465347024	WITHOUT_CLASSIFICATION	2.5534652975736344E-6	DEFECT
// Hide warning also as it makes no sense since // the filesetmanifest attribute itself has been // hidden	WITHOUT_CLASSIFICATION	0.9999999209022769	WITHOUT_CLASSIFICATION	7.909772317269296E-8	DEFECT
// need to handle manifest as a special check	WITHOUT_CLASSIFICATION	0.9999999278616668	WITHOUT_CLASSIFICATION	7.213833321044479E-8	DEFECT
// if it doesn't exist, it will get created anyway, don't // bother with any up-to-date checks.	WITHOUT_CLASSIFICATION	0.9999999232042014	WITHOUT_CLASSIFICATION	7.679579857837559E-8	DEFECT
// no existing archive	WITHOUT_CLASSIFICATION	0.9999999959102521	WITHOUT_CLASSIFICATION	4.089747820729018E-9	DEFECT
// Ignore close exception	WITHOUT_CLASSIFICATION	0.9999998960663569	WITHOUT_CLASSIFICATION	1.0393364302947816E-7	DEFECT
// we want to save this info if we are going to make another pass	WITHOUT_CLASSIFICATION	0.9999894723553938	WITHOUT_CLASSIFICATION	1.05276446060934E-5	DEFECT
// couldn't find it - must be on path	WITHOUT_CLASSIFICATION	0.9999972771605852	WITHOUT_CLASSIFICATION	2.722839414751435E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999920118448	WITHOUT_CLASSIFICATION	7.988155193624096E-8	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999920118448	WITHOUT_CLASSIFICATION	7.988155193624096E-8	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9999971163476059	WITHOUT_CLASSIFICATION	2.8836523940921245E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999734784456	WITHOUT_CLASSIFICATION	2.6521554394295955E-8	DEFECT
// looks like nothing from META-INF should be added // and the check is not case insensitive. // see sun.misc.JarIndex	WITHOUT_CLASSIFICATION	0.9999985253187021	WITHOUT_CLASSIFICATION	1.474681297962624E-6	DEFECT
// name newline	WITHOUT_CLASSIFICATION	0.9999990073481133	WITHOUT_CLASSIFICATION	9.926518866481663E-7	DEFECT
// longest match comes first	WITHOUT_CLASSIFICATION	0.999999410730893	WITHOUT_CLASSIFICATION	5.892691068980122E-7	DEFECT
// META-INF would be skipped anyway, avoid index for // manifest-only jars.	WITHOUT_CLASSIFICATION	0.9981548709560091	WITHOUT_CLASSIFICATION	0.0018451290439908405	DEFECT
// a file, not in the root // since the jar may be one without directory // entries, add the parent dir of this file as // well.	WITHOUT_CLASSIFICATION	0.9999998445791354	WITHOUT_CLASSIFICATION	1.5542086466798396E-7	DEFECT
/*protected*/	WITHOUT_CLASSIFICATION	0.9999323368791078	WITHOUT_CLASSIFICATION	6.766312089224553E-5	DEFECT
// if the target file is not there, then it can't be up-to-date	WITHOUT_CLASSIFICATION	0.9999998854475811	WITHOUT_CLASSIFICATION	1.1455241892400753E-7	DEFECT
// if the source file isn't there, throw an exception	WITHOUT_CLASSIFICATION	0.9999989499325659	WITHOUT_CLASSIFICATION	1.0500674341379007E-6	DEFECT
// by default, messages are always displayed	WITHOUT_CLASSIFICATION	0.9999997208137842	WITHOUT_CLASSIFICATION	2.7918621580988863E-7	DEFECT
// need to keep the package private version for backwards compatibility	WITHOUT_CLASSIFICATION	0.9999995778339453	WITHOUT_CLASSIFICATION	4.2216605459968504E-7	DEFECT
// we must keep two lists since other classes may modify the // filesets Vector (it is package private) without us noticing	WITHOUT_CLASSIFICATION	0.9999999510788936	WITHOUT_CLASSIFICATION	4.8921106395002214E-8	DEFECT
// add the main fileset to the list of filesets to process.	WITHOUT_CLASSIFICATION	0.9999999952265938	WITHOUT_CLASSIFICATION	4.773406142865843E-9	DEFECT
// check if tar is out of date with respect to each // fileset	WITHOUT_CLASSIFICATION	0.9999999772308753	WITHOUT_CLASSIFICATION	2.2769124695208565E-8	DEFECT
// warn or GNU	WITHOUT_CLASSIFICATION	0.9999978438859125	WITHOUT_CLASSIFICATION	2.156114087434969E-6	DEFECT
// don't add "" to the archive	WITHOUT_CLASSIFICATION	0.9999983480514372	WITHOUT_CLASSIFICATION	1.6519485627750353E-6	DEFECT
// '/' is appended for compatibility with the zip task.	WITHOUT_CLASSIFICATION	0.9999992848014898	WITHOUT_CLASSIFICATION	7.151985101021368E-7	DEFECT
// we would end up adding "" to the archive	WITHOUT_CLASSIFICATION	0.9999992413159496	WITHOUT_CLASSIFICATION	7.586840504594252E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999734784456	WITHOUT_CLASSIFICATION	2.6521554394295955E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999734784456	WITHOUT_CLASSIFICATION	2.6521554394295955E-8	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999920118448	WITHOUT_CLASSIFICATION	7.988155193624096E-8	DEFECT
// permissible values for compression attribute	WITHOUT_CLASSIFICATION	0.9999914858725029	WITHOUT_CLASSIFICATION	8.514127497124375E-6	DEFECT
// override permissions if set explicitly	WITHOUT_CLASSIFICATION	0.9999954369434456	WITHOUT_CLASSIFICATION	4.563056554434267E-6	DEFECT
// only override permissions if set explicitly	WITHOUT_CLASSIFICATION	0.9999803433940513	WITHOUT_CLASSIFICATION	1.9656605948800105E-5	DEFECT
// non-file resources	WITHOUT_CLASSIFICATION	0.9999999460707656	WITHOUT_CLASSIFICATION	5.392923434541455E-8	DEFECT
// non-file resources	WITHOUT_CLASSIFICATION	0.9999999460707656	WITHOUT_CLASSIFICATION	5.392923434541455E-8	DEFECT
//extend Comparison; retain for BC only	WITHOUT_CLASSIFICATION	0.9999833380114083	WITHOUT_CLASSIFICATION	1.6661988591652112E-5	DEFECT
//when writing to the log, we'll see what's happening:	WITHOUT_CLASSIFICATION	0.9999997326278011	WITHOUT_CLASSIFICATION	2.67372198983743E-7	DEFECT
/*         * The initial version used DateFormat.SHORT for the         * time format, which ignores seconds.  If we want         * seconds as well, we need DateFormat.MEDIUM, which         * in turn would break all old build files.         *         * First try to parse with DateFormat.SHORT and if         * that fails with MEDIUM - throw an exception if both         * fail.         */	WITHOUT_CLASSIFICATION	0.9999999988306355	WITHOUT_CLASSIFICATION	1.1693645836850587E-9	DEFECT
//only set if successful to this point:	WITHOUT_CLASSIFICATION	0.9999983153803467	WITHOUT_CLASSIFICATION	1.684619653251128E-6	DEFECT
// deal with the resource collections	WITHOUT_CLASSIFICATION	0.9999991824970718	WITHOUT_CLASSIFICATION	8.175029281037375E-7	DEFECT
// deal with filesets in a special way since the task // originally also used the directories and Union won't return // them.	WITHOUT_CLASSIFICATION	0.9999997843878878	WITHOUT_CLASSIFICATION	2.1561211217904714E-7	DEFECT
// use this to create file and deal with non-writable files	WITHOUT_CLASSIFICATION	0.999999992698467	WITHOUT_CLASSIFICATION	7.301533019060724E-9	DEFECT
// When we leave this block we can be sure all data is really // stored in main memory before the new threads start, the new // threads will for sure load the data from main memory. // // This probably is slightly paranoid.	WITHOUT_CLASSIFICATION	0.9990923368528956	WITHOUT_CLASSIFICATION	9.076631471044059E-4	DEFECT
// start any daemon threads	WITHOUT_CLASSIFICATION	0.9999796298700692	WITHOUT_CLASSIFICATION	2.037012993082272E-5	DEFECT
// now run main threads in limited numbers... // start initial batch of threads	WITHOUT_CLASSIFICATION	0.9999975149078001	WITHOUT_CLASSIFICATION	2.485092199871244E-6	DEFECT
// start the timeout thread	WITHOUT_CLASSIFICATION	0.9999998839288339	WITHOUT_CLASSIFICATION	1.1607116614854607E-7	DEFECT
// now find available running slots for the remaining threads	WITHOUT_CLASSIFICATION	0.9999998860433441	WITHOUT_CLASSIFICATION	1.1395665584510485E-7	DEFECT
// continue on outer while loop to get another // available slot	WITHOUT_CLASSIFICATION	0.999999938750395	WITHOUT_CLASSIFICATION	6.124960499629433E-8	DEFECT
// if we got here all slots in use, so sleep until // something happens	WITHOUT_CLASSIFICATION	0.9999985634145002	WITHOUT_CLASSIFICATION	1.4365854997543004E-6	DEFECT
// doesn't java know interruptions are rude? // just pretend it didn't happen and go about out business. // sheesh!	WITHOUT_CLASSIFICATION	0.999999493879545	WITHOUT_CLASSIFICATION	5.061204549083717E-7	DEFECT
// are all threads finished	WITHOUT_CLASSIFICATION	0.9999987884192562	WITHOUT_CLASSIFICATION	1.211580743851109E-6	DEFECT
// who would interrupt me at a time like this?	WITHOUT_CLASSIFICATION	0.9999971573916077	WITHOUT_CLASSIFICATION	2.8426083923529053E-6	DEFECT
// now did any of the threads throw an exception	WITHOUT_CLASSIFICATION	0.9999140661870641	WITHOUT_CLASSIFICATION	8.593381293585174E-5	DEFECT
// return a bogus number	WITHOUT_CLASSIFICATION	0.999999908151134	WITHOUT_CLASSIFICATION	9.184886603690318E-8	DEFECT
// Should be safe to parse	WITHOUT_CLASSIFICATION	0.9999601817613509	WITHOUT_CLASSIFICATION	3.9818238649078205E-5	DEFECT
// Check name is "antlib"	WITHOUT_CLASSIFICATION	0.9999999637543965	WITHOUT_CLASSIFICATION	3.624560344095153E-8	DEFECT
//include locally for screening purposes	WITHOUT_CLASSIFICATION	0.9999988043809162	WITHOUT_CLASSIFICATION	1.1956190839030266E-6	DEFECT
// try to find the executable	WITHOUT_CLASSIFICATION	0.9999997999379562	WITHOUT_CLASSIFICATION	2.0006204377285732E-7	DEFECT
// now try to resolve against the dir if given	WITHOUT_CLASSIFICATION	0.9999999180168846	WITHOUT_CLASSIFICATION	8.198311537499363E-8	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999920118448	WITHOUT_CLASSIFICATION	7.988155193624096E-8	DEFECT
// throw further	WITHOUT_CLASSIFICATION	0.999994325759916	WITHOUT_CLASSIFICATION	5.674240083955786E-6	DEFECT
// only the first build exception is reported	WITHOUT_CLASSIFICATION	0.9999947058220926	WITHOUT_CLASSIFICATION	5.294177907434907E-6	DEFECT
//include locally for screening purposes	WITHOUT_CLASSIFICATION	0.9999988043809162	WITHOUT_CLASSIFICATION	1.1956190839030266E-6	DEFECT
// mustSearchPath is false, or no PATH or not found - keep our // fingers crossed.	WITHOUT_CLASSIFICATION	0.9999990597932285	WITHOUT_CLASSIFICATION	9.402067714547432E-7	DEFECT
// Quick fail if this is not a valid OS for the command	WITHOUT_CLASSIFICATION	0.9995202290048528	WITHOUT_CLASSIFICATION	4.797709951471449E-4	DEFECT
// possibly altered in prepareExec	WITHOUT_CLASSIFICATION	0.9999971494924904	WITHOUT_CLASSIFICATION	2.8505075095445097E-6	DEFECT
//hand osfamily off to Os class, if set	WITHOUT_CLASSIFICATION	0.999982101800933	WITHOUT_CLASSIFICATION	1.789819906699211E-5	DEFECT
// this command will be executed only on the specified OS	WITHOUT_CLASSIFICATION	0.9969167692891724	WITHOUT_CLASSIFICATION	0.003083230710827614	DEFECT
// default directory to the project's base directory	WITHOUT_CLASSIFICATION	0.999999762538329	WITHOUT_CLASSIFICATION	2.3746167095194865E-7	DEFECT
// assume the worst	WITHOUT_CLASSIFICATION	0.9999999337323068	WITHOUT_CLASSIFICATION	6.62676932518318E-8	DEFECT
//test for and handle a forced process death	WITHOUT_CLASSIFICATION	0.9999999983737627	WITHOUT_CLASSIFICATION	1.6262372895919968E-9	DEFECT
// show the command	WITHOUT_CLASSIFICATION	0.9999860099025503	WITHOUT_CLASSIFICATION	1.3990097449687852E-5	DEFECT
// close the output file if required	WITHOUT_CLASSIFICATION	0.9999998789291844	WITHOUT_CLASSIFICATION	1.2107081552060601E-7	DEFECT
// Same as regular <copy> task... see at end-of-file!	WITHOUT_CLASSIFICATION	0.9999743641253895	WITHOUT_CLASSIFICATION	2.563587461053046E-5	DEFECT
// Override Task#init	WITHOUT_CLASSIFICATION	0.9999999915869122	WITHOUT_CLASSIFICATION	8.413087777909553E-9	DEFECT
// Instantiate it	WITHOUT_CLASSIFICATION	0.9999987394776163	WITHOUT_CLASSIFICATION	1.260522383622281E-6	DEFECT
// Default config of <mycopy> for our purposes.	WITHOUT_CLASSIFICATION	0.9999999785183868	WITHOUT_CLASSIFICATION	2.1481613091802614E-8	DEFECT
// Override Task#execute	WITHOUT_CLASSIFICATION	0.999999990430257	WITHOUT_CLASSIFICATION	9.569743033149776E-9	DEFECT
// The destination of the files to copy	WITHOUT_CLASSIFICATION	0.9999989695137352	WITHOUT_CLASSIFICATION	1.03048626476545E-6	DEFECT
// The complete list of files to copy	WITHOUT_CLASSIFICATION	0.99999332141379	WITHOUT_CLASSIFICATION	6.678586209937366E-6	DEFECT
// Copy all the necessary out-of-date files	WITHOUT_CLASSIFICATION	0.9999998609827035	WITHOUT_CLASSIFICATION	1.3901729649714814E-7	DEFECT
// Do we need to perform further processing?	WITHOUT_CLASSIFICATION	0.999999983308949	WITHOUT_CLASSIFICATION	1.6691050963426543E-8	DEFECT
// nope ;-)	WITHOUT_CLASSIFICATION	0.9999984914903922	WITHOUT_CLASSIFICATION	1.5085096077814602E-6	DEFECT
// Get rid of all files not listed in the source filesets.	WITHOUT_CLASSIFICATION	0.9999998330939605	WITHOUT_CLASSIFICATION	1.669060396688551E-7	DEFECT
// Get rid of empty directories on the destination side	WITHOUT_CLASSIFICATION	0.9999999746035014	WITHOUT_CLASSIFICATION	2.539649857292397E-8	DEFECT
// want to keep toDir itself	WITHOUT_CLASSIFICATION	0.9999999621327114	WITHOUT_CLASSIFICATION	3.786728861059711E-8	DEFECT
// ds returns the directories in lexicographic order. // iterating through the array backwards means we are deleting // leaves before their parent nodes - thus making sure (well, // more likely) that the directories are empty when we try to // delete them.	WITHOUT_CLASSIFICATION	0.9999999944987727	WITHOUT_CLASSIFICATION	5.501227223314573E-9	DEFECT
// Test here again to avoid method call for non-directories!	WITHOUT_CLASSIFICATION	0.9999990633863799	WITHOUT_CLASSIFICATION	9.366136202305624E-7	DEFECT
// must match the default value of Ant#inheritAll	WITHOUT_CLASSIFICATION	0.9999999791734143	WITHOUT_CLASSIFICATION	2.0826585678548203E-8	DEFECT
// must match the default value of Ant#inheritRefs	WITHOUT_CLASSIFICATION	0.9999999933935564	WITHOUT_CLASSIFICATION	6.606443697122564E-9	DEFECT
/*<TargetElement>*/	WITHOUT_CLASSIFICATION	0.9999989280461783	WITHOUT_CLASSIFICATION	1.0719538217028033E-6	DEFECT
// check if one of the builds failed in keep going mode	WITHOUT_CLASSIFICATION	0.999999667760625	WITHOUT_CLASSIFICATION	3.322393749197722E-7	DEFECT
//     REVISIT: Defaults to the target name that contains this task if not specified.	WITHOUT_CLASSIFICATION	0.9999999784793936	WITHOUT_CLASSIFICATION	2.152060638909347E-8	DEFECT
// END class SubAnt	WITHOUT_CLASSIFICATION	0.999998317349596	WITHOUT_CLASSIFICATION	1.6826504040018413E-6	DEFECT
// Child elements.	WITHOUT_CLASSIFICATION	0.9999999781402897	WITHOUT_CLASSIFICATION	2.1859710260625747E-8	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999998677448649	WITHOUT_CLASSIFICATION	1.3225513505480113E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999920118448	WITHOUT_CLASSIFICATION	7.988155193624096E-8	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9999971163476059	WITHOUT_CLASSIFICATION	2.8836523940921245E-6	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9999971163476059	WITHOUT_CLASSIFICATION	2.8836523940921245E-6	DEFECT
// Empty	WITHOUT_CLASSIFICATION	0.9999937506290293	WITHOUT_CLASSIFICATION	6.249370970705334E-6	DEFECT
// this command will be executed only on the specified OS	WITHOUT_CLASSIFICATION	0.9969167692891724	WITHOUT_CLASSIFICATION	0.003083230710827614	DEFECT
// default directory to the project's base directory	WITHOUT_CLASSIFICATION	0.999999762538329	WITHOUT_CLASSIFICATION	2.3746167095194865E-7	DEFECT
// assume the worst	WITHOUT_CLASSIFICATION	0.9999999337323068	WITHOUT_CLASSIFICATION	6.62676932518318E-8	DEFECT
// show the command	WITHOUT_CLASSIFICATION	0.9999860099025503	WITHOUT_CLASSIFICATION	1.3990097449687852E-5	DEFECT
// close the output file if required	WITHOUT_CLASSIFICATION	0.9999998789291844	WITHOUT_CLASSIFICATION	1.2107081552060601E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999734784456	WITHOUT_CLASSIFICATION	2.6521554394295955E-8	DEFECT
// This directory may have become empty... // We need to re-query its children list!	WITHOUT_CLASSIFICATION	0.977269310373123	WITHOUT_CLASSIFICATION	0.02273068962687697	DEFECT
// // Various copy attributes/subelements of <copy> passed thru to <mycopy> //	WITHOUT_CLASSIFICATION	0.9999999930089036	WITHOUT_CLASSIFICATION	6.991096320563156E-9	DEFECT
// List of files that must be copied, irrelevant from the // fact that they are newer or not than the destination.	WITHOUT_CLASSIFICATION	0.9999999964447293	WITHOUT_CLASSIFICATION	3.555270874978161E-9	DEFECT
// cf. NB #47191	WITHOUT_CLASSIFICATION	0.9999970430163502	WITHOUT_CLASSIFICATION	2.9569836498699982E-6	DEFECT
// Should work whether or not redirector.inputStream == null:	WITHOUT_CLASSIFICATION	0.9991543558497811	WITHOUT_CLASSIFICATION	8.45644150218905E-4	DEFECT
// #24918: send standard input to the process by default.	WITHOUT_CLASSIFICATION	0.9999976171761771	WITHOUT_CLASSIFICATION	2.3828238228991544E-6	DEFECT
// test if os match	WITHOUT_CLASSIFICATION	0.9999999300397848	WITHOUT_CLASSIFICATION	6.996021516349463E-8	DEFECT
// exec command on system runtime	WITHOUT_CLASSIFICATION	0.9999028802973609	WITHOUT_CLASSIFICATION	9.711970263916817E-5	DEFECT
// copy input and error to the output stream	WITHOUT_CLASSIFICATION	0.9999985569716574	WITHOUT_CLASSIFICATION	1.443028342628578E-6	DEFECT
// starts pumping away the generated output/error	WITHOUT_CLASSIFICATION	0.9999998867302692	WITHOUT_CLASSIFICATION	1.132697308028898E-7	DEFECT
// Wait for everything to finish	WITHOUT_CLASSIFICATION	0.999999256719986	WITHOUT_CLASSIFICATION	7.432800139797079E-7	DEFECT
// check its exit value	WITHOUT_CLASSIFICATION	0.9999998584414211	WITHOUT_CLASSIFICATION	1.4155857890415985E-7	DEFECT
// Inner class for continually pumping the input stream during // Process's runtime.	WITHOUT_CLASSIFICATION	0.9999780227489878	WITHOUT_CLASSIFICATION	2.1977251012077382E-5	DEFECT
// The size of buffers to be used	WITHOUT_CLASSIFICATION	0.9999944002953685	WITHOUT_CLASSIFICATION	5.599704631590279E-6	DEFECT
// Attributes.	WITHOUT_CLASSIFICATION	0.999999898013266	WITHOUT_CLASSIFICATION	1.0198673403557178E-7	DEFECT
// Attribute setters.	WITHOUT_CLASSIFICATION	0.999999848914814	WITHOUT_CLASSIFICATION	1.5108518603357405E-7	DEFECT
// Nested element creators.	WITHOUT_CLASSIFICATION	0.9999999987957323	WITHOUT_CLASSIFICATION	1.2042676278801696E-9	DEFECT
// treat empty nested text as no text	WITHOUT_CLASSIFICATION	0.9999998870711231	WITHOUT_CLASSIFICATION	1.1292887684661848E-7	DEFECT
// if binary check if incompatible attributes are used	WITHOUT_CLASSIFICATION	0.9999999976561488	WITHOUT_CLASSIFICATION	2.343851213668837E-9	DEFECT
// Sanity check our inputs.	WITHOUT_CLASSIFICATION	0.9999999868612058	WITHOUT_CLASSIFICATION	1.3138794062937425E-8	DEFECT
// Nothing to concatenate!	WITHOUT_CLASSIFICATION	0.9999998598839226	WITHOUT_CLASSIFICATION	1.401160773407946E-7	DEFECT
// no need to do anything	WITHOUT_CLASSIFICATION	0.999999063963505	WITHOUT_CLASSIFICATION	9.360364950089701E-7	DEFECT
// Log using WARN so it displays in 'quiet' mode.	WITHOUT_CLASSIFICATION	0.9999869465301415	WITHOUT_CLASSIFICATION	1.3053469858449115E-5	DEFECT
// ensure that the parent dir of dest file exists	WITHOUT_CLASSIFICATION	0.9999996678017385	WITHOUT_CLASSIFICATION	3.321982613693818E-7	DEFECT
// non-existing files are not allowed	WITHOUT_CLASSIFICATION	0.9999987212601672	WITHOUT_CLASSIFICATION	1.278739832716284E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999920118448	WITHOUT_CLASSIFICATION	7.988155193624096E-8	DEFECT
// Create a ZipFileSet for this file, and pass it up.	WITHOUT_CLASSIFICATION	0.9999988881452692	WITHOUT_CLASSIFICATION	1.1118547308622186E-6	DEFECT
// We just set the prefix for this fileset, and pass it up.	WITHOUT_CLASSIFICATION	0.9999933638937348	WITHOUT_CLASSIFICATION	6.636106265182413E-6	DEFECT
// by default, messages are always displayed	WITHOUT_CLASSIFICATION	0.9999997208137842	WITHOUT_CLASSIFICATION	2.7918621580988863E-7	DEFECT
// close the output file if required	WITHOUT_CLASSIFICATION	0.9999998789291844	WITHOUT_CLASSIFICATION	1.2107081552060601E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999734784456	WITHOUT_CLASSIFICATION	2.6521554394295955E-8	DEFECT
// Initialize to the size of the first text fragment, with // the hopes that it's the only one.	WITHOUT_CLASSIFICATION	0.9999998467543234	WITHOUT_CLASSIFICATION	1.5324567660412098E-7	DEFECT
// Append the fragment -- we defer property replacement until // later just in case we get a partial property in a fragment.	WITHOUT_CLASSIFICATION	0.9999472427481546	WITHOUT_CLASSIFICATION	5.275725184540994E-5	DEFECT
// If using resources, disallow inline text. This is similar to // using GNU 'cat' with file arguments -- stdin is simply // ignored.	WITHOUT_CLASSIFICATION	0.9999999992628252	WITHOUT_CLASSIFICATION	7.371747015723833E-10	DEFECT
/*package*/	WITHOUT_CLASSIFICATION	0.9999784294931996	WITHOUT_CLASSIFICATION	2.157050680048253E-5	DEFECT
/*package*/	WITHOUT_CLASSIFICATION	0.9999784294931996	WITHOUT_CLASSIFICATION	2.157050680048253E-5	DEFECT
// If the file being added is WEB-INF/web.xml, we warn if it's // not the one specified in the "webxml" attribute - or if // it's being added twice, meaning the same file is specified // by the "webxml" attribute and in a <fileset> element.	WITHOUT_CLASSIFICATION	0.9999999925833202	WITHOUT_CLASSIFICATION	7.416679772715738E-9	DEFECT
//by default, we add the file.	WITHOUT_CLASSIFICATION	0.9999995715066831	WITHOUT_CLASSIFICATION	4.2849331692650185E-7	DEFECT
//a web.xml file was found. See if it is a duplicate or not	WITHOUT_CLASSIFICATION	0.9999999421920436	WITHOUT_CLASSIFICATION	5.780795629773935E-8	DEFECT
//a second web.xml file, so skip it	WITHOUT_CLASSIFICATION	0.9999990914191977	WITHOUT_CLASSIFICATION	9.08580802171039E-7	DEFECT
//check to see if we warn or not	WITHOUT_CLASSIFICATION	0.9999996405416243	WITHOUT_CLASSIFICATION	3.594583756833543E-7	DEFECT
//no added file, yet	WITHOUT_CLASSIFICATION	0.9999918622978937	WITHOUT_CLASSIFICATION	8.137702106302552E-6	DEFECT
//there is no web.xml file, so add it	WITHOUT_CLASSIFICATION	0.9999999347607623	WITHOUT_CLASSIFICATION	6.52392375938038E-8	DEFECT
//and remember that we did	WITHOUT_CLASSIFICATION	0.9999931160505521	WITHOUT_CLASSIFICATION	6.88394944796285E-6	DEFECT
//validation	WITHOUT_CLASSIFICATION	0.999943969193706	WITHOUT_CLASSIFICATION	5.603080629399826E-5	DEFECT
//discard most of really big resources	WITHOUT_CLASSIFICATION	0.9999997469753511	WITHOUT_CLASSIFICATION	2.5302464887615796E-7	DEFECT
//open up the resource	WITHOUT_CLASSIFICATION	0.9999991453631105	WITHOUT_CLASSIFICATION	8.546368895934037E-7	DEFECT
// impossible since *our* processLine doesn't throw an IOException	WITHOUT_CLASSIFICATION	0.9999983337372125	WITHOUT_CLASSIFICATION	1.6662627875557619E-6	DEFECT
// There have been reports that 300 files could be compiled // so 250 is a conservative approach	WITHOUT_CLASSIFICATION	0.9999695173850577	WITHOUT_CLASSIFICATION	3.0482614942327603E-5	DEFECT
// We assume, that everything jikes writes goes to // standard output, not to standard error. The option // -Xstdout that is given to Jikes in Javac.doJikesCompile() // should guarantee this. At least I hope so. :)	WITHOUT_CLASSIFICATION	0.9998840639880907	WITHOUT_CLASSIFICATION	1.1593601190924269E-4	DEFECT
//if we have a RedirectorElement, return a decoy	WITHOUT_CLASSIFICATION	0.999998633530348	WITHOUT_CLASSIFICATION	1.3664696518867458E-6	DEFECT
// 0 --> srcIndex	WITHOUT_CLASSIFICATION	0.9999990352663751	WITHOUT_CLASSIFICATION	9.647336248115188E-7	DEFECT
// srcIndex --> targetIndex	WITHOUT_CLASSIFICATION	0.9999998529429751	WITHOUT_CLASSIFICATION	1.4705702485850238E-7	DEFECT
// targets are already absolute file names	WITHOUT_CLASSIFICATION	0.9999999809840855	WITHOUT_CLASSIFICATION	1.9015914519322298E-8	DEFECT
// targetIndex --> end	WITHOUT_CLASSIFICATION	0.9999992201250497	WITHOUT_CLASSIFICATION	7.798749503965662E-7	DEFECT
// 0 --> targetIndex	WITHOUT_CLASSIFICATION	0.9999992149237058	WITHOUT_CLASSIFICATION	7.850762941971481E-7	DEFECT
// 0 --> srcIndex	WITHOUT_CLASSIFICATION	0.9999990352663751	WITHOUT_CLASSIFICATION	9.647336248115188E-7	DEFECT
// contains AbstractFileSet // (both DirSet and FileSet)	WITHOUT_CLASSIFICATION	0.999999842127621	WITHOUT_CLASSIFICATION	1.578723789831682E-7	DEFECT
// need to reset the stream handler to restart // reading of pipes; // go ahead and do it always w/ nested redirectors	WITHOUT_CLASSIFICATION	0.999999954852111	WITHOUT_CLASSIFICATION	4.5147889018146876E-8	DEFECT
// need to reset the stream handler to restart // reading of pipes; // go ahead and do it always w/ nested redirectors	WITHOUT_CLASSIFICATION	0.999999954852111	WITHOUT_CLASSIFICATION	4.5147889018146876E-8	DEFECT
// targets are already absolute file names	WITHOUT_CLASSIFICATION	0.9999999809840855	WITHOUT_CLASSIFICATION	1.9015914519322298E-8	DEFECT
// targetIndex --> srcIndex	WITHOUT_CLASSIFICATION	0.999999709083389	WITHOUT_CLASSIFICATION	2.909166110135143E-7	DEFECT
// srcIndex --> end	WITHOUT_CLASSIFICATION	0.999999472480818	WITHOUT_CLASSIFICATION	5.275191820958071E-7	DEFECT
// srcIndex --> end	WITHOUT_CLASSIFICATION	0.999999472480818	WITHOUT_CLASSIFICATION	5.275191820958071E-7	DEFECT
// no targetFilePos	WITHOUT_CLASSIFICATION	0.9999999930121927	WITHOUT_CLASSIFICATION	6.987807314351861E-9	DEFECT
// fill in source file names	WITHOUT_CLASSIFICATION	0.9999999094359987	WITHOUT_CLASSIFICATION	9.056400137742754E-8	DEFECT
/* this is skipEmpty == false */	WITHOUT_CLASSIFICATION	0.9999175214867294	WITHOUT_CLASSIFICATION	8.247851327060757E-5	DEFECT
//if there is a new priority, and it is different, change it	WITHOUT_CLASSIFICATION	0.9999989245202234	WITHOUT_CLASSIFICATION	1.075479776583034E-6	DEFECT
//catch permissions denial and keep going	WITHOUT_CLASSIFICATION	0.9999999158843221	WITHOUT_CLASSIFICATION	8.411567794474056E-8	DEFECT
//-- XSLTLiaison	WITHOUT_CLASSIFICATION	0.9999964668030791	WITHOUT_CLASSIFICATION	3.533196920906871E-6	DEFECT
// Write the properties file back out	WITHOUT_CLASSIFICATION	0.9999977099774603	WITHOUT_CLASSIFICATION	2.290022539782594E-6	DEFECT
//Finally set the property	WITHOUT_CLASSIFICATION	0.9999673904443194	WITHOUT_CLASSIFICATION	3.260955568056824E-5	DEFECT
// Try parsing the line into an integer.	WITHOUT_CLASSIFICATION	0.9999981930303073	WITHOUT_CLASSIFICATION	1.8069696926698362E-6	DEFECT
//-- XSLTProcess	WITHOUT_CLASSIFICATION	0.9999984721558012	WITHOUT_CLASSIFICATION	1.5278441988559753E-6	DEFECT
// check if liaison wants to log errors using us as logger	WITHOUT_CLASSIFICATION	0.9999999989828753	WITHOUT_CLASSIFICATION	1.017124727058067E-9	DEFECT
// If we enter here, it means that the stylesheet is supplied // via style attribute	WITHOUT_CLASSIFICATION	0.9999984828538189	WITHOUT_CLASSIFICATION	1.5171461811154084E-6	DEFECT
/*                     * shouldn't throw out deprecation warnings before we know,                     * the wrong version has been used.                     */	WITHOUT_CLASSIFICATION	0.99971865574474	WITHOUT_CLASSIFICATION	2.813442552600598E-4	DEFECT
// if we have an in file and out then process them	WITHOUT_CLASSIFICATION	0.9999999880976954	WITHOUT_CLASSIFICATION	1.1902304630216996E-8	DEFECT
//-- make sure destination directory exists...	WITHOUT_CLASSIFICATION	0.9999659548705532	WITHOUT_CLASSIFICATION	3.404512944682506E-5	DEFECT
// Process all the files marked for styling	WITHOUT_CLASSIFICATION	0.9999998629616822	WITHOUT_CLASSIFICATION	1.3703831775930145E-7	DEFECT
// Process all the directories marked for styling	WITHOUT_CLASSIFICATION	0.999999962069033	WITHOUT_CLASSIFICATION	3.793096703513382E-8	DEFECT
// only resource collections, there better be some	WITHOUT_CLASSIFICATION	0.9999976370499831	WITHOUT_CLASSIFICATION	2.3629500167675656E-6	DEFECT
//anything else is a classname	WITHOUT_CLASSIFICATION	0.9999793497379608	WITHOUT_CLASSIFICATION	2.0650262039260482E-5	DEFECT
//-- processXML	WITHOUT_CLASSIFICATION	0.999996061303258	WITHOUT_CLASSIFICATION	3.9386967420575435E-6	DEFECT
// Param	WITHOUT_CLASSIFICATION	0.9999997510692703	WITHOUT_CLASSIFICATION	2.489307297227673E-7	DEFECT
// New env var...append the previous one if we have it.	WITHOUT_CLASSIFICATION	0.9999998814358979	WITHOUT_CLASSIFICATION	1.1856410199972487E-7	DEFECT
// Mac	WITHOUT_CLASSIFICATION	0.9999989365684113	WITHOUT_CLASSIFICATION	1.0634315886956037E-6	DEFECT
//validation	WITHOUT_CLASSIFICATION	0.999943969193706	WITHOUT_CLASSIFICATION	5.603080629399826E-5	DEFECT
// If failed to process document, must delete target document, // or it will not attempt to process it the second time	WITHOUT_CLASSIFICATION	0.9999996928581016	WITHOUT_CLASSIFICATION	3.0714189843505855E-7	DEFECT
// if processor wasn't specified, see if TraX is available.  If not, // default it to xalan, depending on which is in the classpath	WITHOUT_CLASSIFICATION	0.9999999881357405	WITHOUT_CLASSIFICATION	1.1864259471537681E-8	DEFECT
// We call liason.configure() and then liaison.setStylesheet() // so that the internal variables of liaison can be set up	WITHOUT_CLASSIFICATION	0.9999999310080119	WITHOUT_CLASSIFICATION	6.89919881326682E-8	DEFECT
// If we are here we can set the stylesheet as a // resource	WITHOUT_CLASSIFICATION	0.9999973178501543	WITHOUT_CLASSIFICATION	2.6821498456472297E-6	DEFECT
// If we are here we cannot set the stylesheet as // a resource, but we can set it as a file. So, // we make an attempt to get it as a file	WITHOUT_CLASSIFICATION	0.9999546727165504	WITHOUT_CLASSIFICATION	4.5327283449565036E-5	DEFECT
// Give always a slash as file separator, so the stylesheet could be sure about that // Use '.' so a dir+"/"+name would not result in an absolute path	WITHOUT_CLASSIFICATION	0.99999968359838	WITHOUT_CLASSIFICATION	3.164016199934278E-7	DEFECT
// only 'name' and 'value' exist.	WITHOUT_CLASSIFICATION	0.9999909843628181	WITHOUT_CLASSIFICATION	9.015637182006577E-6	DEFECT
// a value must be of a given type // say boolean|integer|string that are mostly used.	WITHOUT_CLASSIFICATION	0.9999999269138408	WITHOUT_CLASSIFICATION	7.308615922430533E-8	DEFECT
// -- class Attribute	WITHOUT_CLASSIFICATION	0.9999997372407724	WITHOUT_CLASSIFICATION	2.6275922758478504E-7	DEFECT
// -- class Factory	WITHOUT_CLASSIFICATION	0.999998154327114	WITHOUT_CLASSIFICATION	1.845672886026231E-6	DEFECT
// error message strings	WITHOUT_CLASSIFICATION	0.9999996364656637	WITHOUT_CLASSIFICATION	3.6353433629228903E-7	DEFECT
//at this point there is one trailing space to remove, if the list is not empty.	WITHOUT_CLASSIFICATION	0.9999992352431183	WITHOUT_CLASSIFICATION	7.647568817490212E-7	DEFECT
//now exit here if the property is already set	WITHOUT_CLASSIFICATION	0.9999900414061826	WITHOUT_CLASSIFICATION	9.958593817441408E-6	DEFECT
//and add any files if also defined	WITHOUT_CLASSIFICATION	0.9999767580967583	WITHOUT_CLASSIFICATION	2.3241903241757603E-5	DEFECT
//add path URLs	WITHOUT_CLASSIFICATION	0.9999988059977761	WITHOUT_CLASSIFICATION	1.1940022238126466E-6	DEFECT
//create the URL //ant equivalent of  fileToConvert.toURI().toURL().toExternalForm();	WITHOUT_CLASSIFICATION	0.9999999750078727	WITHOUT_CLASSIFICATION	2.499212724704357E-8	DEFECT
// if we run into a timeout, the run-away thread shall not // make the VM run forever - if no timeout occurs, Ant's // main thread will still be there to let the new thread // finish	WITHOUT_CLASSIFICATION	0.9999999935578486	WITHOUT_CLASSIFICATION	6.442151355648202E-9	DEFECT
//Use the VM launcher instead of shell launcher on VMS	WITHOUT_CLASSIFICATION	0.9999879637634195	WITHOUT_CLASSIFICATION	1.2036236580483304E-5	DEFECT
/*     * Builds a command launcher for the OS and JVM we are running under.     */	WITHOUT_CLASSIFICATION	0.9999540498380091	WITHOUT_CLASSIFICATION	4.595016199105339E-5	DEFECT
// Try using a JDK 1.3 launcher	WITHOUT_CLASSIFICATION	0.9999993669075453	WITHOUT_CLASSIFICATION	6.330924546064954E-7	DEFECT
// Ignore and keep trying	WITHOUT_CLASSIFICATION	0.9999998635540822	WITHOUT_CLASSIFICATION	1.3644591789315335E-7	DEFECT
// OS/2	WITHOUT_CLASSIFICATION	0.9999957515977475	WITHOUT_CLASSIFICATION	4.248402252482146E-6	DEFECT
// Windows XP/2000/NT	WITHOUT_CLASSIFICATION	0.9996955107292856	WITHOUT_CLASSIFICATION	3.0448927071441634E-4	DEFECT
// Windows 98/95 - need to use an auxiliary script	WITHOUT_CLASSIFICATION	0.9999275466230523	WITHOUT_CLASSIFICATION	7.245337694764765E-5	DEFECT
// OpenVMS	WITHOUT_CLASSIFICATION	0.9999971660541466	WITHOUT_CLASSIFICATION	2.8339458534506858E-6	DEFECT
// Generic	WITHOUT_CLASSIFICATION	0.9999996139189269	WITHOUT_CLASSIFICATION	3.860810729933897E-7	DEFECT
// Make sure we do not recurse forever	WITHOUT_CLASSIFICATION	0.9999999764087139	WITHOUT_CLASSIFICATION	2.3591286125332283E-8	DEFECT
// Just try to use what we got	WITHOUT_CLASSIFICATION	0.9999996277996159	WITHOUT_CLASSIFICATION	3.7220038410665773E-7	DEFECT
// Since we "look ahead" before adding, there's one last env var.	WITHOUT_CLASSIFICATION	0.9999997977907684	WITHOUT_CLASSIFICATION	2.022092315253502E-7	DEFECT
// Just try to see how much we got	WITHOUT_CLASSIFICATION	0.9999990413023842	WITHOUT_CLASSIFICATION	9.586976159485396E-7	DEFECT
// OS/2 - use same mechanism as Windows 2000	WITHOUT_CLASSIFICATION	0.9999795480794051	WITHOUT_CLASSIFICATION	2.0451920594835407E-5	DEFECT
// Determine if we're running under XP/2000/NT or 98/95	WITHOUT_CLASSIFICATION	0.9999992208707281	WITHOUT_CLASSIFICATION	7.791292718743281E-7	DEFECT
// Windows 98/95	WITHOUT_CLASSIFICATION	0.9999031991694094	WITHOUT_CLASSIFICATION	9.680083059071304E-5	DEFECT
// Windows XP/2000/NT/2003	WITHOUT_CLASSIFICATION	0.9993664677579127	WITHOUT_CLASSIFICATION	6.335322420872276E-4	DEFECT
// On most systems one could use: /bin/sh -c env	WITHOUT_CLASSIFICATION	0.9999485233870243	WITHOUT_CLASSIFICATION	5.14766129756421E-5	DEFECT
// Some systems have /bin/env, others /usr/bin/env, just try	WITHOUT_CLASSIFICATION	0.9999998947153598	WITHOUT_CLASSIFICATION	1.0528464026416673E-7	DEFECT
// rely on PATH	WITHOUT_CLASSIFICATION	0.9999672087370325	WITHOUT_CLASSIFICATION	3.279126296756857E-5	DEFECT
// rely on PATH	WITHOUT_CLASSIFICATION	0.9999672087370325	WITHOUT_CLASSIFICATION	3.279126296756857E-5	DEFECT
//noop default encoding used	WITHOUT_CLASSIFICATION	0.9999999915813883	WITHOUT_CLASSIFICATION	8.418611660450676E-9	DEFECT
//By default, use the shell launcher for VMS //	WITHOUT_CLASSIFICATION	0.999997375146327	WITHOUT_CLASSIFICATION	2.6248536730449555E-6	DEFECT
// add the process to the list of those to destroy if the VM exits //	WITHOUT_CLASSIFICATION	0.999999995250785	WITHOUT_CLASSIFICATION	4.749214995322683E-9	DEFECT
// #31928: forcibly kill it before continuing.	WITHOUT_CLASSIFICATION	0.9991946046521704	WITHOUT_CLASSIFICATION	8.053953478294934E-4	DEFECT
// remove the process to the list of those to destroy if // the VM exits //	WITHOUT_CLASSIFICATION	0.999999950455027	WITHOUT_CLASSIFICATION	4.9544972929431064E-8	DEFECT
//on openvms even exit value signals failure; // for other platforms nonzero exit value signals failure	WITHOUT_CLASSIFICATION	0.9999974636169396	WITHOUT_CLASSIFICATION	2.5363830603703384E-6	DEFECT
// Get key including "="	WITHOUT_CLASSIFICATION	0.9999990417263022	WITHOUT_CLASSIFICATION	9.58273697850197E-7	DEFECT
// Nb: using default locale as key is a env name	WITHOUT_CLASSIFICATION	0.9999969878187716	WITHOUT_CLASSIFICATION	3.01218122834447E-6	DEFECT
// Find the key in the current enviroment copy // and remove it.	WITHOUT_CLASSIFICATION	0.9999665853212701	WITHOUT_CLASSIFICATION	3.341467872976471E-5	DEFECT
// Use the original casiness of the key	WITHOUT_CLASSIFICATION	0.9999993565215674	WITHOUT_CLASSIFICATION	6.434784325660825E-7	DEFECT
// Add the key to the enviromnent copy	WITHOUT_CLASSIFICATION	0.9999995389943418	WITHOUT_CLASSIFICATION	4.610056582583331E-7	DEFECT
// parse the VMS logicals into required format ("VAR=VAL[,VAL2]")	WITHOUT_CLASSIFICATION	0.9999764811094034	WITHOUT_CLASSIFICATION	2.3518890596646097E-5	DEFECT
// further equivalence name of previous logical	WITHOUT_CLASSIFICATION	0.9999999837299097	WITHOUT_CLASSIFICATION	1.6270090265604884E-8	DEFECT
// new logical?	WITHOUT_CLASSIFICATION	0.9999974182775072	WITHOUT_CLASSIFICATION	2.5817224927168373E-6	DEFECT
// already got this logical from a higher order table	WITHOUT_CLASSIFICATION	0.9999999223946497	WITHOUT_CLASSIFICATION	7.760535028658245E-8	DEFECT
/* the arguments: */	WITHOUT_CLASSIFICATION	0.9999991446610624	WITHOUT_CLASSIFICATION	8.553389374778831E-7	DEFECT
// IllegalAccess, IllegalArgument, ClassCast	WITHOUT_CLASSIFICATION	0.9999999828613	WITHOUT_CLASSIFICATION	1.7138699925835965E-8	DEFECT
// Locate the auxiliary script	WITHOUT_CLASSIFICATION	0.999999965354071	WITHOUT_CLASSIFICATION	3.4645929093924187E-8	DEFECT
// Build the command	WITHOUT_CLASSIFICATION	0.9996458287886709	WITHOUT_CLASSIFICATION	3.541712113290856E-4	DEFECT
// add the environment as logicals to the DCL script	WITHOUT_CLASSIFICATION	0.9999990380191216	WITHOUT_CLASSIFICATION	9.619808783566396E-7	DEFECT
//empty	WITHOUT_CLASSIFICATION	0.9999522382740956	WITHOUT_CLASSIFICATION	4.7761725904433276E-5	DEFECT
//empty	WITHOUT_CLASSIFICATION	0.9999522382740956	WITHOUT_CLASSIFICATION	4.7761725904433276E-5	DEFECT
// Locate method Runtime.exec(String[] cmdarray, //                            String[] envp, File dir)	WITHOUT_CLASSIFICATION	0.9999997611032326	WITHOUT_CLASSIFICATION	2.3889676727933773E-7	DEFECT
// Use cmd.exe to change to the specified drive and // directory before running the command	WITHOUT_CLASSIFICATION	0.9999999973026618	WITHOUT_CLASSIFICATION	2.6973381488824566E-9	DEFECT
// Use cmd.exe to change to the specified directory before running // the command	WITHOUT_CLASSIFICATION	0.9999999973789738	WITHOUT_CLASSIFICATION	2.6210260483546645E-9	DEFECT
// need to set the project on unknown element	WITHOUT_CLASSIFICATION	0.9999985363849412	WITHOUT_CLASSIFICATION	1.4636150588535316E-6	DEFECT
//************************************************************************ //  protected and private methods //************************************************************************	WITHOUT_CLASSIFICATION	0.9998609781775386	WITHOUT_CLASSIFICATION	1.3902182246137287E-4	DEFECT
//Attempt complete directory renames, if any, first.	WITHOUT_CLASSIFICATION	0.9999975152259634	WITHOUT_CLASSIFICATION	2.4847740365933175E-6	DEFECT
// files to move	WITHOUT_CLASSIFICATION	0.9999992355486774	WITHOUT_CLASSIFICATION	7.644513225914476E-7	DEFECT
//Is this file still available to be moved?	WITHOUT_CLASSIFICATION	0.9999589613224955	WITHOUT_CLASSIFICATION	4.103867750456721E-5	DEFECT
// if this is the last time through the loop then // move will not occur, but that's what we want	WITHOUT_CLASSIFICATION	0.9999988057076996	WITHOUT_CLASSIFICATION	1.1942923003487867E-6	DEFECT
// maybe io error?	WITHOUT_CLASSIFICATION	0.9999862693877353	WITHOUT_CLASSIFICATION	1.3730612264698541E-5	DEFECT
// found a file	WITHOUT_CLASSIFICATION	0.9999997951624694	WITHOUT_CLASSIFICATION	2.0483753056602645E-7	DEFECT
// on an io error list() can return null	WITHOUT_CLASSIFICATION	0.9999971130221915	WITHOUT_CLASSIFICATION	2.8869778084288964E-6	DEFECT
// Whether *this VM* is 1.4+ (but also check executable != null).	WITHOUT_CLASSIFICATION	0.9999991063082109	WITHOUT_CLASSIFICATION	8.93691789030022E-7	DEFECT
// ------------------------------------------ general Javadoc arguments	WITHOUT_CLASSIFICATION	0.9999999929417257	WITHOUT_CLASSIFICATION	7.058274204877334E-9	DEFECT
// ---------------------------- javadoc2 arguments for default doclet	WITHOUT_CLASSIFICATION	0.9999999766170204	WITHOUT_CLASSIFICATION	2.338297952099616E-8	DEFECT
// add the links arguments	WITHOUT_CLASSIFICATION	0.9999999977917476	WITHOUT_CLASSIFICATION	2.2082523911012568E-9	DEFECT
// should be impossible	WITHOUT_CLASSIFICATION	0.9999928889503483	WITHOUT_CLASSIFICATION	7.111049651664366E-6	DEFECT
// is the href a valid URL	WITHOUT_CLASSIFICATION	0.9999993114573195	WITHOUT_CLASSIFICATION	6.885426805928951E-7	DEFECT
// ok - just skip	WITHOUT_CLASSIFICATION	0.999999847646155	WITHOUT_CLASSIFICATION	1.5235384497843132E-7	DEFECT
//return	WITHOUT_CLASSIFICATION	0.9999945127437542	WITHOUT_CLASSIFICATION	5.487256245889032E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999920118448	WITHOUT_CLASSIFICATION	7.988155193624096E-8	DEFECT
//validation logic	WITHOUT_CLASSIFICATION	0.9999898118927584	WITHOUT_CLASSIFICATION	1.0188107241634052E-5	DEFECT
// Ignore Exception	WITHOUT_CLASSIFICATION	0.999999691665249	WITHOUT_CLASSIFICATION	3.08334750927462E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999734784456	WITHOUT_CLASSIFICATION	2.6521554394295955E-8	DEFECT
// Only try to move if this is the last mapped file // and one of the mappings isn't to itself	WITHOUT_CLASSIFICATION	0.9999940423799006	WITHOUT_CLASSIFICATION	5.957620099376708E-6	DEFECT
// createArgument(true) is necessary to make sure -locale // is the first argument (required in 1.3+).	WITHOUT_CLASSIFICATION	0.999999987244721	WITHOUT_CLASSIFICATION	1.2755279168641386E-8	DEFECT
// Go through the tokens one at a time, updating the // elements array and issuing warnings where appropriate.	WITHOUT_CLASSIFICATION	0.9999809165368622	WITHOUT_CLASSIFICATION	1.908346313778871E-5	DEFECT
// Ant javadoc task rules for group attribute: //   Args are comma-delimited. //   Each arg is 2 space-delimited strings. //   E.g., group="XSLT_Packages org.apache.xalan.xslt*, //                XPath_Packages org.apache.xalan.xpath*"	WITHOUT_CLASSIFICATION	0.9999992389036587	WITHOUT_CLASSIFICATION	7.610963412012156E-7	DEFECT
// add the group arguments	WITHOUT_CLASSIFICATION	0.9999999893803059	WITHOUT_CLASSIFICATION	1.061969414320763E-8	DEFECT
// Javadoc 1.4 parameters	WITHOUT_CLASSIFICATION	0.9999999594784896	WITHOUT_CLASSIFICATION	4.0521510339797127E-8	DEFECT
// The tag element is not used as a fileset, // but specifies the tag directly.	WITHOUT_CLASSIFICATION	0.9999989111602678	WITHOUT_CLASSIFICATION	1.0888397320748408E-6	DEFECT
// The tag element is used as a // fileset. Parse all the files and create // -tag arguments.	WITHOUT_CLASSIFICATION	0.9999999990844036	WITHOUT_CLASSIFICATION	9.155963132289641E-10	DEFECT
// Not 1.4+.	WITHOUT_CLASSIFICATION	0.999998618942543	WITHOUT_CLASSIFICATION	1.3810574569338894E-6	DEFECT
// Javadoc 1.2/1.3 parameters:	WITHOUT_CLASSIFICATION	0.9999996981458605	WITHOUT_CLASSIFICATION	3.018541395110793E-7	DEFECT
// If using an external file, write the command line options to it	WITHOUT_CLASSIFICATION	0.9999988764682411	WITHOUT_CLASSIFICATION	1.123531758915545E-6	DEFECT
// If using an external file, write the command line options to it	WITHOUT_CLASSIFICATION	0.9999988764682411	WITHOUT_CLASSIFICATION	1.123531758915545E-6	DEFECT
/*         * No reason to change the working directory as all filenames and         * path components have been resolved already.         *         * Avoid problems with command line length in some environments.         */	WITHOUT_CLASSIFICATION	0.9997359653892145	WITHOUT_CLASSIFICATION	2.640346107855411E-4	DEFECT
// are there any java files in this directory?	WITHOUT_CLASSIFICATION	0.9999955567828269	WITHOUT_CLASSIFICATION	4.443217173072094E-6	DEFECT
// We don't need to care for duplicates here, // Path.list does it for us.	WITHOUT_CLASSIFICATION	0.9999999574477711	WITHOUT_CLASSIFICATION	4.255222876115279E-8	DEFECT
// CheckStyle:MethodNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9999985649503456	WITHOUT_CLASSIFICATION	1.4350496544650922E-6	DEFECT
/* Methods below all add specific selectors */	WITHOUT_CLASSIFICATION	0.9999999554586554	WITHOUT_CLASSIFICATION	4.454134459379394E-8	DEFECT
//convert a class name into a resource	WITHOUT_CLASSIFICATION	0.9999998971947608	WITHOUT_CLASSIFICATION	1.028052391490356E-7	DEFECT
//set the property	WITHOUT_CLASSIFICATION	0.999991694914451	WITHOUT_CLASSIFICATION	8.305085549037329E-6	DEFECT
// line feed	WITHOUT_CLASSIFICATION	0.9999937750723815	WITHOUT_CLASSIFICATION	6.224927618477868E-6	DEFECT
// by default, remove matching empty dirs	WITHOUT_CLASSIFICATION	0.9999984180068004	WITHOUT_CLASSIFICATION	1.581993199516877E-6	DEFECT
// delete the single file	WITHOUT_CLASSIFICATION	0.9999998822839279	WITHOUT_CLASSIFICATION	1.1771607204067789E-7	DEFECT
// delete the directory	WITHOUT_CLASSIFICATION	0.9999999204767747	WITHOUT_CLASSIFICATION	7.952322540222285E-8	DEFECT
//add the files from the default fileset:	WITHOUT_CLASSIFICATION	0.999999867551763	WITHOUT_CLASSIFICATION	1.3244823702874974E-7	DEFECT
// sort first to files, then dirs	WITHOUT_CLASSIFICATION	0.9999999012720899	WITHOUT_CLASSIFICATION	9.872791011698757E-8	DEFECT
/*                 * Plain impossible with UTF8, see                 * http://java.sun.com/j2se/1.5.0/docs/guide/intl/encoding.doc.html                 *                 * fallback to platform specific anyway.                 */	WITHOUT_CLASSIFICATION	0.999999565993445	WITHOUT_CLASSIFICATION	4.340065550232586E-7	DEFECT
//patch the redirector to save output to a file	WITHOUT_CLASSIFICATION	0.9999999970393831	WITHOUT_CLASSIFICATION	2.960616948992908E-9	DEFECT
//verify special operations	WITHOUT_CLASSIFICATION	0.9999999893636359	WITHOUT_CLASSIFICATION	1.0636364099283184E-8	DEFECT
//JAR  is required	WITHOUT_CLASSIFICATION	0.9998912280502772	WITHOUT_CLASSIFICATION	1.0877194972273555E-4	DEFECT
//deal with jdk1.4.2 bug:	WITHOUT_CLASSIFICATION	0.9996631168827824	WITHOUT_CLASSIFICATION	3.3688311721760347E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999734784456	WITHOUT_CLASSIFICATION	2.6521554394295955E-8	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999920118448	WITHOUT_CLASSIFICATION	7.988155193624096E-8	DEFECT
// now we need to populate the compiler adapter	WITHOUT_CLASSIFICATION	0.9999997847934561	WITHOUT_CLASSIFICATION	2.152065439566699E-7	DEFECT
// finally, lets execute the compiler!!	WITHOUT_CLASSIFICATION	0.9999957916711524	WITHOUT_CLASSIFICATION	4.208328847592932E-6	DEFECT
//validation	WITHOUT_CLASSIFICATION	0.999943969193706	WITHOUT_CLASSIFICATION	5.603080629399826E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999734784456	WITHOUT_CLASSIFICATION	2.6521554394295955E-8	DEFECT
// nonexistent resources could only occur if we already // deleted something from a fileset:	WITHOUT_CLASSIFICATION	0.9999998864322123	WITHOUT_CLASSIFICATION	1.1356778769222028E-7	DEFECT
//cache	WITHOUT_CLASSIFICATION	0.9999956697465552	WITHOUT_CLASSIFICATION	4.330253444822704E-6	DEFECT
// no include pattern implicitly means includes="**"	WITHOUT_CLASSIFICATION	0.9999977187266874	WITHOUT_CLASSIFICATION	2.2812733126772776E-6	DEFECT
//Do not process this file	WITHOUT_CLASSIFICATION	0.9999923099008818	WITHOUT_CLASSIFICATION	7.69009911814806E-6	DEFECT
// make sure facade knows about magic properties and fork setting	WITHOUT_CLASSIFICATION	0.9999985461974144	WITHOUT_CLASSIFICATION	1.4538025856227798E-6	DEFECT
// deal with the resources	WITHOUT_CLASSIFICATION	0.9999997049831258	WITHOUT_CLASSIFICATION	2.9501687419971236E-7	DEFECT
// Make a transaction for each resource	WITHOUT_CLASSIFICATION	0.9999984505604308	WITHOUT_CLASSIFICATION	1.549439569291367E-6	DEFECT
// Make a transaction group for the outer command	WITHOUT_CLASSIFICATION	0.9999963666992618	WITHOUT_CLASSIFICATION	3.6333007381099033E-6	DEFECT
// Process all transactions	WITHOUT_CLASSIFICATION	0.9999999069198559	WITHOUT_CLASSIFICATION	9.308014414764019E-8	DEFECT
// Catch any statements not followed by ;	WITHOUT_CLASSIFICATION	0.9999978929778289	WITHOUT_CLASSIFICATION	2.1070221711408285E-6	DEFECT
// Check and ignore empty statements	WITHOUT_CLASSIFICATION	0.9999999985760464	WITHOUT_CLASSIFICATION	1.4239536585985643E-9	DEFECT
/*     * Closes an unused connection after an error and doesn't rethrow     * a possible SQLException     * @since Ant 1.7     */	WITHOUT_CLASSIFICATION	0.9999998880663273	WITHOUT_CLASSIFICATION	1.1193367259709362E-7	DEFECT
// dreaded backwards compatibility	WITHOUT_CLASSIFICATION	0.9999996241636093	WITHOUT_CLASSIFICATION	3.7583639063708857E-7	DEFECT
/*Throw an exception if cvs exited with error. (Iulian)*/	WITHOUT_CLASSIFICATION	0.9999991955580052	WITHOUT_CLASSIFICATION	8.044419948347185E-7	DEFECT
// re-implement legacy behaviour:	WITHOUT_CLASSIFICATION	0.9999778503378394	WITHOUT_CLASSIFICATION	2.2149662160606698E-5	DEFECT
// Check if not real cvsroot => set it to null	WITHOUT_CLASSIFICATION	0.9999998771719001	WITHOUT_CLASSIFICATION	1.2282809996160583E-7	DEFECT
// Check if not real cvsrsh => set it to null	WITHOUT_CLASSIFICATION	0.9999998785408645	WITHOUT_CLASSIFICATION	1.214591354980413E-7	DEFECT
// Check if not real tag => set it to null	WITHOUT_CLASSIFICATION	0.9999999051408275	WITHOUT_CLASSIFICATION	9.485917251208063E-8	DEFECT
// close the output file if required	WITHOUT_CLASSIFICATION	0.9999998789291844	WITHOUT_CLASSIFICATION	1.2107081552060601E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999734784456	WITHOUT_CLASSIFICATION	2.6521554394295955E-8	DEFECT
//req // req	WITHOUT_CLASSIFICATION	0.9999970026752993	WITHOUT_CLASSIFICATION	2.9973247006858077E-6	DEFECT
// scan source directories and dest directory to build up // compile lists	WITHOUT_CLASSIFICATION	0.9999999930142391	WITHOUT_CLASSIFICATION	6.9857609325158375E-9	DEFECT
//there is no need to expand properties here as that happens when Transaction.addText is //called; to do so here would be an error.	WITHOUT_CLASSIFICATION	0.9999840643379397	WITHOUT_CLASSIFICATION	1.5935662060315207E-5	DEFECT
//there are places (in this file, and perhaps elsewhere, where it is assumed //that null is an acceptable parameter.	WITHOUT_CLASSIFICATION	0.9999999637128301	WITHOUT_CLASSIFICATION	3.628716995338404E-8	DEFECT
// We can't do it ourselves as jCVS is GPLed, a third party task // outside of jakarta repositories would be possible though (SB).	WITHOUT_CLASSIFICATION	0.9999931358524131	WITHOUT_CLASSIFICATION	6.8641475868683745E-6	DEFECT
// // Just call the getExecuteStreamHandler() and let it handle //     the semantics of instantiation or retrieval. //	WITHOUT_CLASSIFICATION	0.9999795165068698	WITHOUT_CLASSIFICATION	2.048349313027115E-5	DEFECT
// we are chmodding the given directory	WITHOUT_CLASSIFICATION	0.9999944952008615	WITHOUT_CLASSIFICATION	5.504799138466897E-6	DEFECT
// may be altered in validateAttributes	WITHOUT_CLASSIFICATION	0.9999995558789136	WITHOUT_CLASSIFICATION	4.441210863911424E-7	DEFECT
// will be removed in validateAttributes	WITHOUT_CLASSIFICATION	0.999987111701078	WITHOUT_CLASSIFICATION	1.2888298922024031E-5	DEFECT
// make sure we don't have an illegal set of options	WITHOUT_CLASSIFICATION	0.9999997846249015	WITHOUT_CLASSIFICATION	2.153750984707759E-7	DEFECT
// deal with the single file	WITHOUT_CLASSIFICATION	0.9999997033254305	WITHOUT_CLASSIFICATION	2.966745694061323E-7	DEFECT
// deal with the ResourceCollections	WITHOUT_CLASSIFICATION	0.9999996497174668	WITHOUT_CLASSIFICATION	3.502825331625253E-7	DEFECT
// Step (1) - beware of the ZipFileSet	WITHOUT_CLASSIFICATION	0.9999998208709129	WITHOUT_CLASSIFICATION	1.7912908720452877E-7	DEFECT
// not a fileset or contains non-file resources	WITHOUT_CLASSIFICATION	0.999999545508812	WITHOUT_CLASSIFICATION	4.544911879854683E-7	DEFECT
// copying of dirs is trivial and can be done // for non-file resources as well as for real // files.	WITHOUT_CLASSIFICATION	0.9999999562166929	WITHOUT_CLASSIFICATION	4.378330710827428E-8	DEFECT
// a not-directory file resource // needs special treatment	WITHOUT_CLASSIFICATION	0.9999994375481147	WITHOUT_CLASSIFICATION	5.624518852013293E-7	DEFECT
// do all the copy operations now...	WITHOUT_CLASSIFICATION	0.9999604974095979	WITHOUT_CLASSIFICATION	3.950259040196495E-5	DEFECT
// restrict to out-of-date resources	WITHOUT_CLASSIFICATION	0.9999999307539372	WITHOUT_CLASSIFICATION	6.924606275288836E-8	DEFECT
// clean up again, so this instance can be used a second // time	WITHOUT_CLASSIFICATION	0.9999998542985016	WITHOUT_CLASSIFICATION	1.4570149850947655E-7	DEFECT
// reuse the array created by the mapper	WITHOUT_CLASSIFICATION	0.9999999402022786	WITHOUT_CLASSIFICATION	5.979772139867551E-8	DEFECT
// reuse the array created by the mapper	WITHOUT_CLASSIFICATION	0.9999999402022786	WITHOUT_CLASSIFICATION	5.979772139867551E-8	DEFECT
//now patch in all system properties	WITHOUT_CLASSIFICATION	0.999990979941935	WITHOUT_CLASSIFICATION	9.020058065080122E-6	DEFECT
// is the keystore a file	WITHOUT_CLASSIFICATION	0.9999995374517638	WITHOUT_CLASSIFICATION	4.625482361024458E-7	DEFECT
// must be a URL - just pass as is	WITHOUT_CLASSIFICATION	0.9999995565540072	WITHOUT_CLASSIFICATION	4.434459928672446E-7	DEFECT
// Gump friendly - don't mess with the core loader if only classpath	WITHOUT_CLASSIFICATION	0.999988097493636	WITHOUT_CLASSIFICATION	1.1902506363866685E-5	DEFECT
// Construct a new class loader	WITHOUT_CLASSIFICATION	0.9999999154814734	WITHOUT_CLASSIFICATION	8.451852666332973E-8	DEFECT
// The param is "parentFirst"	WITHOUT_CLASSIFICATION	0.9999973982477621	WITHOUT_CLASSIFICATION	2.601752237856185E-6	DEFECT
/*public*/	WITHOUT_CLASSIFICATION	0.9999449185872507	WITHOUT_CLASSIFICATION	5.508141274939808E-5	DEFECT
//shield it from being closed by a filtering StreamPumper	WITHOUT_CLASSIFICATION	0.9999997960748324	WITHOUT_CLASSIFICATION	2.0392516766549356E-7	DEFECT
//shield it from being closed by a filtering StreamPumper	WITHOUT_CLASSIFICATION	0.9999997960748324	WITHOUT_CLASSIFICATION	2.0392516766549356E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999734784456	WITHOUT_CLASSIFICATION	2.6521554394295955E-8	DEFECT
// set read-only properties // CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999870807882	WITHOUT_CLASSIFICATION	1.2919211849309501E-8	DEFECT
// Are any other references held ? Can we 'close' the loader // so it removes the locks on jars ? // a new one will be created.	WITHOUT_CLASSIFICATION	0.9999964391812686	WITHOUT_CLASSIFICATION	3.5608187314259E-6	DEFECT
// The core loader must be reverse //reverse=true;	WITHOUT_CLASSIFICATION	0.9999999155164676	WITHOUT_CLASSIFICATION	8.448353229329964E-8	DEFECT
// This allows the core loader to load optional tasks // without delegating	WITHOUT_CLASSIFICATION	0.999999765279528	WITHOUT_CLASSIFICATION	2.347204719664885E-7	DEFECT
//wait for the StreamPumpers to finish	WITHOUT_CLASSIFICATION	0.9999992606674425	WITHOUT_CLASSIFICATION	7.393325575525436E-7	DEFECT
// Ignore exception	WITHOUT_CLASSIFICATION	0.9999991717952554	WITHOUT_CLASSIFICATION	8.282047445369054E-7	DEFECT
// Normalize the reference directory (containing the jar)	WITHOUT_CLASSIFICATION	0.9999999950862046	WITHOUT_CLASSIFICATION	4.9137953301369354E-9	DEFECT
// Normalize the current file	WITHOUT_CLASSIFICATION	0.9999999841637757	WITHOUT_CLASSIFICATION	1.5836224286450875E-8	DEFECT
// No match, so bail out!	WITHOUT_CLASSIFICATION	0.9999999674361516	WITHOUT_CLASSIFICATION	3.256384833183962E-8	DEFECT
// Finally assign the property with the manifest classpath	WITHOUT_CLASSIFICATION	0.9999817766025086	WITHOUT_CLASSIFICATION	1.8223397491335275E-5	DEFECT
// try to find a MAX_LINE_LENGTH byte section	WITHOUT_CLASSIFICATION	0.9999974774595404	WITHOUT_CLASSIFICATION	2.5225404596093037E-6	DEFECT
// continuation line	WITHOUT_CLASSIFICATION	0.9999987929979539	WITHOUT_CLASSIFICATION	1.2070020460806488E-6	DEFECT
// refresh attribute in case of multivalued attributes.	WITHOUT_CLASSIFICATION	0.9999998900356569	WITHOUT_CLASSIFICATION	1.0996434313962477E-7	DEFECT
// the merge file always wins	WITHOUT_CLASSIFICATION	0.9999951648574369	WITHOUT_CLASSIFICATION	4.835142563098138E-6	DEFECT
// the merge file *always* wins, even for Class-Path	WITHOUT_CLASSIFICATION	0.999991900236962	WITHOUT_CLASSIFICATION	8.099763037894018E-6	DEFECT
// add in the warnings	WITHOUT_CLASSIFICATION	0.9999997570233206	WITHOUT_CLASSIFICATION	2.429766794007381E-7	DEFECT
// This should be the manifest version	WITHOUT_CLASSIFICATION	0.9999401865303214	WITHOUT_CLASSIFICATION	5.981346967871801E-5	DEFECT
// add it back	WITHOUT_CLASSIFICATION	0.9999942593036748	WITHOUT_CLASSIFICATION	5.740696325273796E-6	DEFECT
// shouldn't happen - ignore	WITHOUT_CLASSIFICATION	0.9999783241001277	WITHOUT_CLASSIFICATION	2.1675899872396598E-5	DEFECT
// create a vector and add in the warnings for all the sections	WITHOUT_CLASSIFICATION	0.999974522871527	WITHOUT_CLASSIFICATION	2.5477128472936642E-5	DEFECT
//off by default	WITHOUT_CLASSIFICATION	0.99999812829043	WITHOUT_CLASSIFICATION	1.8717095700383873E-6	DEFECT
//set up logging	WITHOUT_CLASSIFICATION	0.9999999579330926	WITHOUT_CLASSIFICATION	4.206690736616645E-8	DEFECT
//execute the get	WITHOUT_CLASSIFICATION	0.9999913392422421	WITHOUT_CLASSIFICATION	8.660757757873747E-6	DEFECT
//dont do any progress, unless asked	WITHOUT_CLASSIFICATION	0.9999986598651367	WITHOUT_CLASSIFICATION	1.3401348632461586E-6	DEFECT
//set the timestamp to the file date.	WITHOUT_CLASSIFICATION	0.9999998808159619	WITHOUT_CLASSIFICATION	1.19184038123946E-7	DEFECT
//set up the URL connection	WITHOUT_CLASSIFICATION	0.9999987191758756	WITHOUT_CLASSIFICATION	1.2808241244467433E-6	DEFECT
// Create as many directory prefixes as parent levels to traverse, // in addition to the reference directory itself	WITHOUT_CLASSIFICATION	0.999998114222407	WITHOUT_CLASSIFICATION	1.885777592949273E-6	DEFECT
// Find the longest prefix shared by the current file // and the reference directory.	WITHOUT_CLASSIFICATION	0.9999999324715879	WITHOUT_CLASSIFICATION	6.75284120877522E-8	DEFECT
// We have a match! Add as many ../ as parent // directory traversed to get the relative path	WITHOUT_CLASSIFICATION	0.9999984287854544	WITHOUT_CLASSIFICATION	1.5712145456107807E-6	DEFECT
// Manifest's ClassPath: attribute always uses forward // slashes '/', and is space-separated. Ant will properly // format it on 72 columns with proper line continuation	WITHOUT_CLASSIFICATION	0.9996648776647182	WITHOUT_CLASSIFICATION	3.35122335281725E-4	DEFECT
// a continuation on the first line is a // continuation of the name - concatenate this // line and the name	WITHOUT_CLASSIFICATION	0.9999999209874613	WITHOUT_CLASSIFICATION	7.901253875613232E-8	DEFECT
// required // required	WITHOUT_CLASSIFICATION	0.9999985126384616	WITHOUT_CLASSIFICATION	1.4873615384810037E-6	DEFECT
//modify the headers //NB: things like user authentication could go in here too.	WITHOUT_CLASSIFICATION	0.9963129767510457	WITHOUT_CLASSIFICATION	0.0036870232489542598	DEFECT
// prepare Java 1.1 style credentials	WITHOUT_CLASSIFICATION	0.9999997208639239	WITHOUT_CLASSIFICATION	2.791360761127062E-7	DEFECT
//we do not use the sun impl for portability, //and always use our own implementation for consistent //testing	WITHOUT_CLASSIFICATION	0.9999995686927896	WITHOUT_CLASSIFICATION	4.313072104185039E-7	DEFECT
//connect to the remote site (may take some time)	WITHOUT_CLASSIFICATION	0.9998721258229412	WITHOUT_CLASSIFICATION	1.2787417705884295E-4	DEFECT
//next test for a 304 result (HTTP only)	WITHOUT_CLASSIFICATION	0.9999861113221948	WITHOUT_CLASSIFICATION	1.3888677805132445E-5	DEFECT
// test for 401 result (HTTP only)	WITHOUT_CLASSIFICATION	0.9999978570162952	WITHOUT_CLASSIFICATION	2.142983704797846E-6	DEFECT
//REVISIT: at this point even non HTTP connections may //support the if-modified-since behaviour -we just check //the date of the content and skip the write if it is not //newer. Some protocols (FTP) don't include dates, of //course.	WITHOUT_CLASSIFICATION	0.9999992257626261	WITHOUT_CLASSIFICATION	7.742373738752646E-7	DEFECT
//this three attempt trick is to get round quirks in different //Java implementations. Some of them take a few goes to bind //property; we ignore the first couple of such failures.	WITHOUT_CLASSIFICATION	0.9999941085699211	WITHOUT_CLASSIFICATION	5.89143007892784E-6	DEFECT
//successful download	WITHOUT_CLASSIFICATION	0.9999997358329584	WITHOUT_CLASSIFICATION	2.641670416014956E-7	DEFECT
// this happens if the projecthelper was not registered with the project.	WITHOUT_CLASSIFICATION	0.9992961072825608	WITHOUT_CLASSIFICATION	7.038927174391652E-4	DEFECT
// methods to register and unregister shutdown hooks	WITHOUT_CLASSIFICATION	0.9999880875853784	WITHOUT_CLASSIFICATION	1.191241462160582E-5	DEFECT
// check to see if the shutdown hook methods exists // (support pre-JDK 1.3 VMs)	WITHOUT_CLASSIFICATION	0.9999994769072714	WITHOUT_CLASSIFICATION	5.230927285186777E-7	DEFECT
// wait to add shutdown hook as needed	WITHOUT_CLASSIFICATION	0.9999983606428576	WITHOUT_CLASSIFICATION	1.6393571423707066E-6	DEFECT
// it just won't be added as a shutdown hook... :(	WITHOUT_CLASSIFICATION	0.9995974281381125	WITHOUT_CLASSIFICATION	4.0257186188742065E-4	DEFECT
// shutdown already is in progress	WITHOUT_CLASSIFICATION	0.9999971225157435	WITHOUT_CLASSIFICATION	2.8774842566532873E-6	DEFECT
// Ignore Exception	WITHOUT_CLASSIFICATION	0.999999691665249	WITHOUT_CLASSIFICATION	3.08334750927462E-7	DEFECT
// shutdown already is in progress	WITHOUT_CLASSIFICATION	0.9999971225157435	WITHOUT_CLASSIFICATION	2.8774842566532873E-6	DEFECT
// I don't think we can use File - different rules // for relative paths.	WITHOUT_CLASSIFICATION	0.9999895532620304	WITHOUT_CLASSIFICATION	1.0446737969648907E-5	DEFECT
// this happens if ant is used with a project // helper that doesn't set the import.	WITHOUT_CLASSIFICATION	0.9998650591842385	WITHOUT_CLASSIFICATION	1.3494081576151287E-4	DEFECT
// Paths are relative to the build file they're imported from, // *not* the current directory (same as entity includes).	WITHOUT_CLASSIFICATION	0.9999999872377583	WITHOUT_CLASSIFICATION	1.2762241764376625E-8	DEFECT
// whether or not this ProcessDestroyer has been registered as a // shutdown hook	WITHOUT_CLASSIFICATION	0.9999953598139754	WITHOUT_CLASSIFICATION	4.640186024587416E-6	DEFECT
// whether or not this ProcessDestroyer is currently running as // shutdown hook	WITHOUT_CLASSIFICATION	0.9995251009995012	WITHOUT_CLASSIFICATION	4.748990004987918E-4	DEFECT
// this should return quickly, since it basically is a NO-OP.	WITHOUT_CLASSIFICATION	0.9997039407710387	WITHOUT_CLASSIFICATION	2.960592289612929E-4	DEFECT
// the thread didn't die in time // it should not kill any processes unexpectedly	WITHOUT_CLASSIFICATION	0.9999799277594215	WITHOUT_CLASSIFICATION	2.00722405785061E-5	DEFECT
// if this list is empty, register the shutdown hook	WITHOUT_CLASSIFICATION	0.9999980136878838	WITHOUT_CLASSIFICATION	1.9863121162890147E-6	DEFECT
// need to load Task via system classloader or the new // task we want to define will never be a Task but always // be wrapped into a TaskAdapter.	WITHOUT_CLASSIFICATION	0.9999999782505568	WITHOUT_CLASSIFICATION	2.174944328355184E-8	DEFECT
// generate classpath, because kjc doesn't support sourcepath.	WITHOUT_CLASSIFICATION	0.9999987866053003	WITHOUT_CLASSIFICATION	1.2133946997183708E-6	DEFECT
// generate the clsspath	WITHOUT_CLASSIFICATION	0.9999999149170469	WITHOUT_CLASSIFICATION	8.508295304938203E-8	DEFECT
// kjc don't have bootclasspath option.	WITHOUT_CLASSIFICATION	0.9999988085988922	WITHOUT_CLASSIFICATION	1.1914011078056154E-6	DEFECT
// Process the factory class	WITHOUT_CLASSIFICATION	0.9999983407073677	WITHOUT_CLASSIFICATION	1.6592926322819301E-6	DEFECT
// Process the factory path	WITHOUT_CLASSIFICATION	0.9999995384844969	WITHOUT_CLASSIFICATION	4.6151550311399424E-7	DEFECT
// Process the processor options	WITHOUT_CLASSIFICATION	0.9999999253765197	WITHOUT_CLASSIFICATION	7.462348030094533E-8	DEFECT
//set up the javac options	WITHOUT_CLASSIFICATION	0.9999999971093697	WITHOUT_CLASSIFICATION	2.8906302846250873E-9	DEFECT
//then add the Apt options	WITHOUT_CLASSIFICATION	0.9999996356224348	WITHOUT_CLASSIFICATION	3.643775653100509E-7	DEFECT
//finally invoke APT // Use reflection to be able to build on all JDKs:	WITHOUT_CLASSIFICATION	0.9999829599533291	WITHOUT_CLASSIFICATION	1.7040046670910405E-5	DEFECT
//rethrow build exceptions	WITHOUT_CLASSIFICATION	0.9999974171680012	WITHOUT_CLASSIFICATION	2.58283199875105E-6	DEFECT
//cast everything else to a build exception	WITHOUT_CLASSIFICATION	0.9999966106028617	WITHOUT_CLASSIFICATION	3.3893971383901515E-6	DEFECT
// Call the compile() method	WITHOUT_CLASSIFICATION	0.9999973805380197	WITHOUT_CLASSIFICATION	2.61946198018638E-6	DEFECT
// jvc doesn't support bootclasspath dir (-bootclasspath) // so we'll emulate it for compatibility and convenience.	WITHOUT_CLASSIFICATION	0.9999999942887473	WITHOUT_CLASSIFICATION	5.711252725553862E-9	DEFECT
// jvc doesn't support an extension dir (-extdir) // so we'll emulate it for compatibility and convenience.	WITHOUT_CLASSIFICATION	0.9999998863906646	WITHOUT_CLASSIFICATION	1.1360933534244211E-7	DEFECT
// jvc has no option for source-path so we // will add it to classpath.	WITHOUT_CLASSIFICATION	0.9999999020427567	WITHOUT_CLASSIFICATION	9.795724337167232E-8	DEFECT
// Add the Classpath before the "internal" one.	WITHOUT_CLASSIFICATION	0.9999999934909641	WITHOUT_CLASSIFICATION	6.5090359222283395E-9	DEFECT
// Enable MS-Extensions and ...	WITHOUT_CLASSIFICATION	0.9999756002695662	WITHOUT_CLASSIFICATION	2.4399730433702775E-5	DEFECT
// ... do not display a Message about this.	WITHOUT_CLASSIFICATION	0.999417390353308	WITHOUT_CLASSIFICATION	5.826096466920956E-4	DEFECT
// Do not display Logo	WITHOUT_CLASSIFICATION	0.9999885671125254	WITHOUT_CLASSIFICATION	1.1432887474629379E-5	DEFECT
//add the files	WITHOUT_CLASSIFICATION	0.999999652664499	WITHOUT_CLASSIFICATION	3.473355010704065E-7	DEFECT
//run	WITHOUT_CLASSIFICATION	0.999971143798321	WITHOUT_CLASSIFICATION	2.8856201678956592E-5	DEFECT
//as new versions of java come out, add them to this test	WITHOUT_CLASSIFICATION	0.9999994941701796	WITHOUT_CLASSIFICATION	5.0582982042081E-7	DEFECT
//on java<=1.3 the modern falls back to classic if it is not found //but on java>=1.4 we just bail out early	WITHOUT_CLASSIFICATION	0.999989146708364	WITHOUT_CLASSIFICATION	1.0853291635889813E-5	DEFECT
// does the modern compiler exist?	WITHOUT_CLASSIFICATION	0.9996721063218791	WITHOUT_CLASSIFICATION	3.2789367812085434E-4	DEFECT
// CheckStyle:ConstantNameCheck ON // CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999912045215	WITHOUT_CLASSIFICATION	8.795478434543951E-9	DEFECT
// Combine the build classpath with the system classpath, in an // order determined by the value of build.sysclasspath	WITHOUT_CLASSIFICATION	0.9999994738249347	WITHOUT_CLASSIFICATION	5.261750652586866E-7	DEFECT
// For -sourcepath, use the "sourcepath" value if present. // Otherwise default to the "srcdir" value.	WITHOUT_CLASSIFICATION	0.999999999405294	WITHOUT_CLASSIFICATION	5.947059763286804E-10	DEFECT
// Just add "sourcepath" to classpath ( for JDK1.1 ) // as well as "bootclasspath" and "extdirs"	WITHOUT_CLASSIFICATION	0.9999999788720962	WITHOUT_CLASSIFICATION	2.1127903793936708E-8	DEFECT
// If the buildfile specifies sourcepath="", then don't // output any sourcepath.	WITHOUT_CLASSIFICATION	0.9999981726831805	WITHOUT_CLASSIFICATION	1.827316819491598E-6	DEFECT
// If the buildfile specifies sourcepath="", then don't // output any sourcepath.	WITHOUT_CLASSIFICATION	0.9999981726831805	WITHOUT_CLASSIFICATION	1.827316819491598E-6	DEFECT
// support for -source 1.1 and -source 1.2 has been // added with JDK 1.4.2 - and isn't present in 1.5.0 either	WITHOUT_CLASSIFICATION	0.9998746602206663	WITHOUT_CLASSIFICATION	1.25339779333652E-4	DEFECT
// 1.5.0 doesn't support -source 1.1	WITHOUT_CLASSIFICATION	0.9999403851630041	WITHOUT_CLASSIFICATION	5.9614836995894694E-5	DEFECT
//Use the VM launcher instead of shell launcher on VMS //for java	WITHOUT_CLASSIFICATION	0.9999619913354786	WITHOUT_CLASSIFICATION	3.8008664521351424E-5	DEFECT
// gcj doesn't support bootclasspath dir (-bootclasspath) // so we'll emulate it for compatibility and convenience.	WITHOUT_CLASSIFICATION	0.9999999850030535	WITHOUT_CLASSIFICATION	1.4996946436667975E-8	DEFECT
// gcj doesn't support an extension dir (-extdir) // so we'll emulate it for compatibility and convenience.	WITHOUT_CLASSIFICATION	0.9999997016779155	WITHOUT_CLASSIFICATION	2.983220844564144E-7	DEFECT
// Gcj has no option for source-path so we // will add it to classpath.	WITHOUT_CLASSIFICATION	0.9999999117002647	WITHOUT_CLASSIFICATION	8.829973528889825E-8	DEFECT
// Use reflection to be able to build on all JDKs >= 1.1:	WITHOUT_CLASSIFICATION	0.9999940953730144	WITHOUT_CLASSIFICATION	5.904626985572344E-6	DEFECT
// no bootclasspath, therefore, get one from the java runtime	WITHOUT_CLASSIFICATION	0.9999999847547885	WITHOUT_CLASSIFICATION	1.5245211500707995E-8	DEFECT
// if the user has set JIKESPATH we should add the contents as well	WITHOUT_CLASSIFICATION	0.9999999909527354	WITHOUT_CLASSIFICATION	9.047264627172675E-9	DEFECT
//reflection to avoid bootstrap/build problems	WITHOUT_CLASSIFICATION	0.9999978479179211	WITHOUT_CLASSIFICATION	2.1520820788850005E-6	DEFECT
//now verify that the class has an implementation	WITHOUT_CLASSIFICATION	0.9998546095729399	WITHOUT_CLASSIFICATION	1.4539042706002405E-4	DEFECT
//windows probing logic relies on the word 'windows' in //the OS	WITHOUT_CLASSIFICATION	0.9998682318570824	WITHOUT_CLASSIFICATION	1.3176814291760778E-4	DEFECT
//there are only four 9x platforms that we look for	WITHOUT_CLASSIFICATION	0.9999995879894354	WITHOUT_CLASSIFICATION	4.1201056451402457E-7	DEFECT
//wince isn't really 9x, but crippled enough to //be a muchness. Ant doesnt run on CE, anyway.	WITHOUT_CLASSIFICATION	0.9989442111154474	WITHOUT_CLASSIFICATION	0.0010557888845526267	DEFECT
// millis per second	WITHOUT_CLASSIFICATION	0.9999896110498312	WITHOUT_CLASSIFICATION	1.0388950168921405E-5	DEFECT
//get the host of a url	WITHOUT_CLASSIFICATION	0.9999999174788756	WITHOUT_CLASSIFICATION	8.252112431170212E-8	DEFECT
//Java1.5: reachable = address.isReachable(timeout * 1000);	WITHOUT_CLASSIFICATION	0.9999988902011044	WITHOUT_CLASSIFICATION	1.1097988955301724E-6	DEFECT
//utterly implausible, but catered for anyway	WITHOUT_CLASSIFICATION	0.9999612542949052	WITHOUT_CLASSIFICATION	3.8745705094699996E-5	DEFECT
// load the parser class	WITHOUT_CLASSIFICATION	0.9999716574508926	WITHOUT_CLASSIFICATION	2.8342549107423113E-5	DEFECT
// may be altered in validate	WITHOUT_CLASSIFICATION	0.9999989692358492	WITHOUT_CLASSIFICATION	1.030764150819715E-6	DEFECT
// Error messages	WITHOUT_CLASSIFICATION	0.9999995117930297	WITHOUT_CLASSIFICATION	4.882069702486206E-7	DEFECT
// plain impossible	WITHOUT_CLASSIFICATION	0.9999998789954668	WITHOUT_CLASSIFICATION	1.2100453317130653E-7	DEFECT
// support for -source 1.1 and -source 1.2 has been // added with JDK 1.4.2, Jikes doesn't like it	WITHOUT_CLASSIFICATION	0.9993674160969473	WITHOUT_CLASSIFICATION	6.325839030527585E-4	DEFECT
//assume this is an IOexception about un readability	WITHOUT_CLASSIFICATION	0.9999508382076036	WITHOUT_CLASSIFICATION	4.9161792396377544E-5	DEFECT
//any kind of fault: not reachable.	WITHOUT_CLASSIFICATION	0.9911043609702391	WITHOUT_CLASSIFICATION	0.008895639029760816	DEFECT
//java1.4 or earlier	WITHOUT_CLASSIFICATION	0.9999997528667341	WITHOUT_CLASSIFICATION	2.471332658667557E-7	DEFECT
// don't know the type, should throw exception instead?	WITHOUT_CLASSIFICATION	0.9984054280843729	WITHOUT_CLASSIFICATION	0.0015945719156270641	DEFECT
//pick a value that is good for everything	WITHOUT_CLASSIFICATION	0.9999670774574605	WITHOUT_CLASSIFICATION	3.292254253961791E-5	DEFECT
//initial state is false.	WITHOUT_CLASSIFICATION	0.9999983332226814	WITHOUT_CLASSIFICATION	1.6667773186294994E-6	DEFECT
//every condition is xored against the previous one	WITHOUT_CLASSIFICATION	0.9999796221400913	WITHOUT_CLASSIFICATION	2.0377859908712594E-5	DEFECT
//validate	WITHOUT_CLASSIFICATION	0.9999912871803426	WITHOUT_CLASSIFICATION	8.712819657361243E-6	DEFECT
//#now match the files	WITHOUT_CLASSIFICATION	0.9999998743125718	WITHOUT_CLASSIFICATION	1.256874283353503E-7	DEFECT
// Intentionally left blank	WITHOUT_CLASSIFICATION	0.9999847531841466	WITHOUT_CLASSIFICATION	1.5246815853352447E-5	DEFECT
//private static final int GET_ENTRY = 0;	WITHOUT_CLASSIFICATION	0.9999999879031501	WITHOUT_CLASSIFICATION	1.2096849890072704E-8	DEFECT
// make sure attributes are reset when // working on a 'new' file.	WITHOUT_CLASSIFICATION	0.9997871818462614	WITHOUT_CLASSIFICATION	2.1281815373855952E-4	DEFECT
//We have ended changelog for that particular file //so we can save it	WITHOUT_CLASSIFICATION	0.9999999916869116	WITHOUT_CLASSIFICATION	8.313088427140628E-9	DEFECT
//was -1	WITHOUT_CLASSIFICATION	0.9999958506336816	WITHOUT_CLASSIFICATION	4.1493663184171566E-6	DEFECT
//was -1	WITHOUT_CLASSIFICATION	0.9999958506336816	WITHOUT_CLASSIFICATION	4.1493663184171566E-6	DEFECT
//There were no revisions in this changelog //entry so lets move onto next file	WITHOUT_CLASSIFICATION	0.9999999651983212	WITHOUT_CLASSIFICATION	3.480167877553116E-8	DEFECT
//Reset comment to empty here as we can accumulate multiple lines //in the processComment method	WITHOUT_CLASSIFICATION	0.99999882125695	WITHOUT_CLASSIFICATION	1.1787430499752424E-6	DEFECT
// We want something of the form: -d ">=YYYY-MM-dd"	WITHOUT_CLASSIFICATION	0.999999629219309	WITHOUT_CLASSIFICATION	3.707806910905916E-7	DEFECT
// Check if list of files to check has been specified	WITHOUT_CLASSIFICATION	0.9999999825269635	WITHOUT_CLASSIFICATION	1.74730364851176E-8	DEFECT
//for now skip entries which are missing a date	WITHOUT_CLASSIFICATION	0.999998093556983	WITHOUT_CLASSIFICATION	1.906443017021205E-6	DEFECT
//Skip dates that are too early	WITHOUT_CLASSIFICATION	0.9999976180152859	WITHOUT_CLASSIFICATION	2.3819847141672476E-6	DEFECT
//Skip dates that are too late	WITHOUT_CLASSIFICATION	0.9999991176175012	WITHOUT_CLASSIFICATION	8.82382498933041E-7	DEFECT
// validate the input parameters	WITHOUT_CLASSIFICATION	0.9999999124892991	WITHOUT_CLASSIFICATION	8.751070086139286E-8	DEFECT
// build the rdiff command	WITHOUT_CLASSIFICATION	0.9999982110725163	WITHOUT_CLASSIFICATION	1.7889274836732828E-6	DEFECT
// if the two substrings are longer than the original, then name // contains address - so reset the name to null	WITHOUT_CLASSIFICATION	0.9999978640936472	WITHOUT_CLASSIFICATION	2.135906352738372E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999734784456	WITHOUT_CLASSIFICATION	2.6521554394295955E-8	DEFECT
// support multiple packages	WITHOUT_CLASSIFICATION	0.9999999273283982	WITHOUT_CLASSIFICATION	7.267160186840205E-8	DEFECT
// force command not to be null	WITHOUT_CLASSIFICATION	0.9998846382039617	WITHOUT_CLASSIFICATION	1.1536179603832985E-4	DEFECT
// run the cvs command	WITHOUT_CLASSIFICATION	0.999993434185645	WITHOUT_CLASSIFICATION	6.565814355080636E-6	DEFECT
// parse the rdiff	WITHOUT_CLASSIFICATION	0.9999990156326426	WITHOUT_CLASSIFICATION	9.843673573395775E-7	DEFECT
// write the tag diff	WITHOUT_CLASSIFICATION	0.99999967368902	WITHOUT_CLASSIFICATION	3.263109800340147E-7	DEFECT
// parse the output of the command	WITHOUT_CLASSIFICATION	0.9999985153282096	WITHOUT_CLASSIFICATION	1.4846717902970059E-6	DEFECT
// it is a new file // set the revision but not the prevrevision	WITHOUT_CLASSIFICATION	0.9999960389253361	WITHOUT_CLASSIFICATION	3.961074663906564E-6	DEFECT
// it is a modified file // set the revision and the prevrevision	WITHOUT_CLASSIFICATION	0.9999997225577365	WITHOUT_CLASSIFICATION	2.7744226346725173E-7	DEFECT
// it is a removed file	WITHOUT_CLASSIFICATION	0.9999992004246941	WITHOUT_CLASSIFICATION	7.99575305909988E-7	DEFECT
/* special headers */	WITHOUT_CLASSIFICATION	0.9999997469301801	WITHOUT_CLASSIFICATION	2.5306981994818277E-7	DEFECT
// prepare for the auto select mechanism	WITHOUT_CLASSIFICATION	0.9999999924265027	WITHOUT_CLASSIFICATION	7.573497275249268E-9	DEFECT
// try MIME format	WITHOUT_CLASSIFICATION	0.999991610286331	WITHOUT_CLASSIFICATION	8.389713669108251E-6	DEFECT
// SMTP auth only allowed with MIME mail	WITHOUT_CLASSIFICATION	0.9999775622009509	WITHOUT_CLASSIFICATION	2.2437799049119252E-5	DEFECT
// SSL only allowed with MIME mail	WITHOUT_CLASSIFICATION	0.9999363149221968	WITHOUT_CLASSIFICATION	6.368507780314575E-5	DEFECT
// try UU format	WITHOUT_CLASSIFICATION	0.9999986404831149	WITHOUT_CLASSIFICATION	1.3595168850082524E-6	DEFECT
// try plain format	WITHOUT_CLASSIFICATION	0.9999988910745046	WITHOUT_CLASSIFICATION	1.1089254954831414E-6	DEFECT
// a valid mailer must be present by now	WITHOUT_CLASSIFICATION	0.9999999228600573	WITHOUT_CLASSIFICATION	7.713994255254107E-8	DEFECT
// a valid message is required	WITHOUT_CLASSIFICATION	0.999997623247287	WITHOUT_CLASSIFICATION	2.3767527129024376E-6	DEFECT
// an address to send from is required	WITHOUT_CLASSIFICATION	0.9999807283186133	WITHOUT_CLASSIFICATION	1.927168138672441E-5	DEFECT
// at least one address to send to/cc/bcc is required	WITHOUT_CLASSIFICATION	0.9999955555557062	WITHOUT_CLASSIFICATION	4.444444293877118E-6	DEFECT
// set the mimetype if not done already (and required)	WITHOUT_CLASSIFICATION	0.9999934107441434	WITHOUT_CLASSIFICATION	6.589255856522364E-6	DEFECT
// set the character set if not done already (and required)	WITHOUT_CLASSIFICATION	0.9999994056942635	WITHOUT_CLASSIFICATION	5.943057365948142E-7	DEFECT
// identify which files should be attached	WITHOUT_CLASSIFICATION	0.9999783776176208	WITHOUT_CLASSIFICATION	2.1622382379164662E-5	DEFECT
// let the user know what's going to happen	WITHOUT_CLASSIFICATION	0.9999906588842274	WITHOUT_CLASSIFICATION	9.341115772601108E-6	DEFECT
// pass the params to the mailer	WITHOUT_CLASSIFICATION	0.9999965716726463	WITHOUT_CLASSIFICATION	3.428327353725309E-6	DEFECT
// send the email	WITHOUT_CLASSIFICATION	0.9999996385590693	WITHOUT_CLASSIFICATION	3.614409307074577E-7	DEFECT
// let the user know what happened	WITHOUT_CLASSIFICATION	0.9999939648641095	WITHOUT_CLASSIFICATION	6.0351358903993485E-6	DEFECT
// CheckStyle:MemberNameCheck ON	WITHOUT_CLASSIFICATION	0.9999998150419329	WITHOUT_CLASSIFICATION	1.849580672018171E-7	DEFECT
// Read message from a file	WITHOUT_CLASSIFICATION	0.9999986869552933	WITHOUT_CLASSIFICATION	1.313044706733441E-6	DEFECT
// Make a limited attempt to extract a sanitized name and email address // Algorithm based on the one found in Ant's MailMessage.java	WITHOUT_CLASSIFICATION	0.9999953042452147	WITHOUT_CLASSIFICATION	4.695754785344331E-6	DEFECT
// shortcut for "<address>"	WITHOUT_CLASSIFICATION	0.9999999508395843	WITHOUT_CLASSIFICATION	4.916041565239146E-8	DEFECT
// support "address (name)"	WITHOUT_CLASSIFICATION	0.9999994699858866	WITHOUT_CLASSIFICATION	5.300141134526632E-7	DEFECT
// support "(name) address"	WITHOUT_CLASSIFICATION	0.9999994112252278	WITHOUT_CLASSIFICATION	5.887747722601783E-7	DEFECT
// To work properly with national charsets we have to use // implementation of interface javax.activation.DataSource	WITHOUT_CLASSIFICATION	0.9995722003649864	WITHOUT_CLASSIFICATION	4.2779963501363133E-4	DEFECT
// Must be like "text/plain; charset=windows-1251"	WITHOUT_CLASSIFICATION	0.9999999663740047	WITHOUT_CLASSIFICATION	3.36259952369644E-8	DEFECT
// Aside, the JDK is clearly unaware of the Scottish // 'session', which involves excessive quantities of // alcohol :-)	WITHOUT_CLASSIFICATION	0.9999970637533642	WITHOUT_CLASSIFICATION	2.936246635804471E-6	DEFECT
// SMTP provider	WITHOUT_CLASSIFICATION	0.9999909969547641	WITHOUT_CLASSIFICATION	9.00304523595644E-6	DEFECT
//create the message	WITHOUT_CLASSIFICATION	0.999999925157464	WITHOUT_CLASSIFICATION	7.484253590783465E-8	DEFECT
//set the sender	WITHOUT_CLASSIFICATION	0.9999986770621703	WITHOUT_CLASSIFICATION	1.3229378297657838E-6	DEFECT
// set the reply to addresses	WITHOUT_CLASSIFICATION	0.9999999567921295	WITHOUT_CLASSIFICATION	4.3207870508485304E-8	DEFECT
// Choosing character set of the mail message // First: looking it from MimeType	WITHOUT_CLASSIFICATION	0.999999513204309	WITHOUT_CLASSIFICATION	4.867956909358785E-7	DEFECT
// Assign/reassign message charset from MimeType	WITHOUT_CLASSIFICATION	0.9999999191432739	WITHOUT_CLASSIFICATION	8.085672612524954E-8	DEFECT
// Next: looking if charset having explicit definition	WITHOUT_CLASSIFICATION	0.9999994836609549	WITHOUT_CLASSIFICATION	5.163390450868209E-7	DEFECT
// Using default	WITHOUT_CLASSIFICATION	0.9999998870109782	WITHOUT_CLASSIFICATION	1.1298902186470755E-7	DEFECT
// Using javax.activation.DataSource paradigm	WITHOUT_CLASSIFICATION	0.9999998683760922	WITHOUT_CLASSIFICATION	1.3162390778411602E-7	DEFECT
// Assuming mime type in form "text/XXXX; charset=XXXXXX"	WITHOUT_CLASSIFICATION	0.999999513765727	WITHOUT_CLASSIFICATION	4.862342730001169E-7	DEFECT
// Skip 'charset='	WITHOUT_CLASSIFICATION	0.9999999742690263	WITHOUT_CLASSIFICATION	2.5730973756248544E-8	DEFECT
// Scanner to find our inputs // list of files to process	WITHOUT_CLASSIFICATION	0.9999999506480973	WITHOUT_CLASSIFICATION	4.935190275991078E-8	DEFECT
// default srcDir to basedir	WITHOUT_CLASSIFICATION	0.9999999198827586	WITHOUT_CLASSIFICATION	8.011724140382276E-8	DEFECT
// Require destDir	WITHOUT_CLASSIFICATION	0.9999912190164086	WITHOUT_CLASSIFICATION	8.780983591315406E-6	DEFECT
// if src and dest dirs are the same, require the extension // to be set, so we don't stomp every file.  One could still // include a file with the same extension, but ....	WITHOUT_CLASSIFICATION	0.9999887452534498	WITHOUT_CLASSIFICATION	1.1254746550145377E-5	DEFECT
// File to convert // where to put the results	WITHOUT_CLASSIFICATION	0.9999998958597999	WITHOUT_CLASSIFICATION	1.0414020013823176E-7	DEFECT
// Build the full file names	WITHOUT_CLASSIFICATION	0.9999970762383187	WITHOUT_CLASSIFICATION	2.9237616813336104E-6	DEFECT
// Make sure we're not about to clobber something	WITHOUT_CLASSIFICATION	0.9999999423463529	WITHOUT_CLASSIFICATION	5.765364699134881E-8	DEFECT
// Make intermediate directories if needed // XXX JDK 1.1 doesn't have File.getParentFile,	WITHOUT_CLASSIFICATION	0.9999730690515489	WITHOUT_CLASSIFICATION	2.6930948451014962E-5	DEFECT
//this.fork = s;	WITHOUT_CLASSIFICATION	0.999999037421522	WITHOUT_CLASSIFICATION	9.625784780091392E-7	DEFECT
//TODO: use ANTLR to parse the grammar file to do this.	WITHOUT_CLASSIFICATION	0.9958358926713604	WITHOUT_CLASSIFICATION	0.00416410732863953	DEFECT
// if no output directory is specified, used the target's directory	WITHOUT_CLASSIFICATION	0.9999999999520693	WITHOUT_CLASSIFICATION	4.793071137019535E-11	DEFECT
// first off, make sure that we've got a from and to extension	WITHOUT_CLASSIFICATION	0.9999997149047565	WITHOUT_CLASSIFICATION	2.8509524344821885E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc // CheckStyle:MemberNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9999999789264881	WITHOUT_CLASSIFICATION	2.1073511912994355E-8	DEFECT
// CheckStyle:MemberNameCheck ON // CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999898290596	WITHOUT_CLASSIFICATION	1.0170940364798148E-8	DEFECT
// Error strings	WITHOUT_CLASSIFICATION	0.9999953766013913	WITHOUT_CLASSIFICATION	4.6233986086615316E-6	DEFECT
//validating	WITHOUT_CLASSIFICATION	0.9999942288865483	WITHOUT_CLASSIFICATION	5.771113451663286E-6	DEFECT
//set the schema source for the doc	WITHOUT_CLASSIFICATION	0.9999999379052534	WITHOUT_CLASSIFICATION	6.209474652045671E-8	DEFECT
//set the schema source for the doc	WITHOUT_CLASSIFICATION	0.9999999379052534	WITHOUT_CLASSIFICATION	6.209474652045671E-8	DEFECT
//enable XSD	WITHOUT_CLASSIFICATION	0.9999966627920672	WITHOUT_CLASSIFICATION	3.3372079327928385E-6	DEFECT
//validate the parser type	WITHOUT_CLASSIFICATION	0.9999929222678274	WITHOUT_CLASSIFICATION	7.0777321725600305E-6	DEFECT
//couldnt use the xerces or jaxp calls	WITHOUT_CLASSIFICATION	0.9999981336262601	WITHOUT_CLASSIFICATION	1.8663737399516813E-6	DEFECT
//enable schema checking	WITHOUT_CLASSIFICATION	0.9999998519116904	WITHOUT_CLASSIFICATION	1.4808830958696978E-7	DEFECT
//turn off DTDs if desired	WITHOUT_CLASSIFICATION	0.999999916746249	WITHOUT_CLASSIFICATION	8.325375095852316E-8	DEFECT
//schema declarations go in next	WITHOUT_CLASSIFICATION	0.9999934442203274	WITHOUT_CLASSIFICATION	6.555779672636821E-6	DEFECT
// first off, make sure that we've got a srcdir and destdir	WITHOUT_CLASSIFICATION	0.9999999245664105	WITHOUT_CLASSIFICATION	7.543358951035922E-8	DEFECT
//enable schema //setFeature(XmlConstants.FEATURE_VALIDATION, false);	WITHOUT_CLASSIFICATION	0.9999999579461447	WITHOUT_CLASSIFICATION	4.205385537554434E-8	DEFECT
//this is almost implausible, but required handling	WITHOUT_CLASSIFICATION	0.9999423048672272	WITHOUT_CLASSIFICATION	5.769513277267567E-5	DEFECT
//SchemaLocation	WITHOUT_CLASSIFICATION	0.9999959133152588	WITHOUT_CLASSIFICATION	4.086684741131151E-6	DEFECT
//private Path extdirs;	WITHOUT_CLASSIFICATION	0.999997076278738	WITHOUT_CLASSIFICATION	2.923721261949722E-6	DEFECT
// first off, make sure that we've got a srcdir	WITHOUT_CLASSIFICATION	0.9999998912175246	WITHOUT_CLASSIFICATION	1.0878247545433548E-7	DEFECT
// Keep jdk 1.1 compliant so others can use this	WITHOUT_CLASSIFICATION	0.9999999674718908	WITHOUT_CLASSIFICATION	3.2528109258814156E-8	DEFECT
// second CR -> EOL + possibly empty line	WITHOUT_CLASSIFICATION	0.9999996639882711	WITHOUT_CLASSIFICATION	3.3601172883418E-7	DEFECT
// first CR in this line	WITHOUT_CLASSIFICATION	0.9999999482654864	WITHOUT_CLASSIFICATION	5.17345134792815E-8	DEFECT
// LF -> EOL	WITHOUT_CLASSIFICATION	0.9999996106078084	WITHOUT_CLASSIFICATION	3.8939219167496374E-7	DEFECT
// any other char	WITHOUT_CLASSIFICATION	0.9999998674302818	WITHOUT_CLASSIFICATION	1.3256971809634527E-7	DEFECT
// Mac-style linebreak or EOF (or both)	WITHOUT_CLASSIFICATION	0.9999999516395927	WITHOUT_CLASSIFICATION	4.836040735947371E-8	DEFECT
// variables to hold arguments	WITHOUT_CLASSIFICATION	0.9999999479615698	WITHOUT_CLASSIFICATION	5.203843018258845E-8	DEFECT
// ?? Should this be the default for ant?	WITHOUT_CLASSIFICATION	0.9999999194148761	WITHOUT_CLASSIFICATION	8.05851239310876E-8	DEFECT
// constants for the messages to suppress by flags and their corresponding properties	WITHOUT_CLASSIFICATION	0.9999312804510543	WITHOUT_CLASSIFICATION	6.871954894569274E-5	DEFECT
// other implementation variables	WITHOUT_CLASSIFICATION	0.9999998577257874	WITHOUT_CLASSIFICATION	1.4227421255787228E-7	DEFECT
// classpath makes no sense	WITHOUT_CLASSIFICATION	0.9999994566515665	WITHOUT_CLASSIFICATION	5.43348433394397E-7	DEFECT
// destDir	WITHOUT_CLASSIFICATION	0.9999992588893111	WITHOUT_CLASSIFICATION	7.411106889276944E-7	DEFECT
// srcDir	WITHOUT_CLASSIFICATION	0.999999572010152	WITHOUT_CLASSIFICATION	4.2798984802972243E-7	DEFECT
// copy the source and support files	WITHOUT_CLASSIFICATION	0.999999429764457	WITHOUT_CLASSIFICATION	5.702355429801448E-7	DEFECT
// compile the source files	WITHOUT_CLASSIFICATION	0.9999999765782247	WITHOUT_CLASSIFICATION	2.342177518569787E-8	DEFECT
// create an array of strings for input to the compiler: one array // comes from the compile options, the other from the compileList	WITHOUT_CLASSIFICATION	0.9999983393655445	WITHOUT_CLASSIFICATION	1.6606344554066463E-6	DEFECT
// create a single array of arguments for the compiler	WITHOUT_CLASSIFICATION	0.999999666571907	WITHOUT_CLASSIFICATION	3.334280930939573E-7	DEFECT
// print nice output about what we are doing for the log	WITHOUT_CLASSIFICATION	0.9999999784978968	WITHOUT_CLASSIFICATION	2.150210319782133E-8	DEFECT
// need to set java.class.path property and restore it later // since the NetRexx compiler has no option for the classpath	WITHOUT_CLASSIFICATION	0.9999994580194981	WITHOUT_CLASSIFICATION	5.419805018644886E-7	DEFECT
// path is mentioned in the message	WITHOUT_CLASSIFICATION	0.9999976696141774	WITHOUT_CLASSIFICATION	2.3303858227376316E-6	DEFECT
// verbose level logging for suppressed messages	WITHOUT_CLASSIFICATION	0.9999999934334031	WITHOUT_CLASSIFICATION	6.566596977801785E-9	DEFECT
// error level logging for compiler errors	WITHOUT_CLASSIFICATION	0.9999999073842861	WITHOUT_CLASSIFICATION	9.261571385172205E-8	DEFECT
// warning for all warning messages	WITHOUT_CLASSIFICATION	0.9999998649148797	WITHOUT_CLASSIFICATION	1.3508512023012157E-7	DEFECT
// info level for the rest.	WITHOUT_CLASSIFICATION	0.9999999211372883	WITHOUT_CLASSIFICATION	7.886271177695925E-8	DEFECT
// need to reset java.class.path property // since the NetRexx compiler has no option for the classpath	WITHOUT_CLASSIFICATION	0.999999949833876	WITHOUT_CLASSIFICATION	5.016612396645267E-8	DEFECT
// add our classpath to the mix	WITHOUT_CLASSIFICATION	0.9999995453572837	WITHOUT_CLASSIFICATION	4.5464271634145593E-7	DEFECT
// add the system classpath // addExistingToClasspath(classpath,System.getProperty("java.class.path"));	WITHOUT_CLASSIFICATION	0.9999999930050141	WITHOUT_CLASSIFICATION	6.994985825376816E-9	DEFECT
// XMLReader used to validation process	WITHOUT_CLASSIFICATION	0.9999978149449527	WITHOUT_CLASSIFICATION	2.1850550473607896E-6	DEFECT
// turn validation on	WITHOUT_CLASSIFICATION	0.9999967932529091	WITHOUT_CLASSIFICATION	3.2067470908598995E-6	DEFECT
// set the feature from the attribute list	WITHOUT_CLASSIFICATION	0.9999999898716292	WITHOUT_CLASSIFICATION	1.012837092540438E-8	DEFECT
// Sets properties	WITHOUT_CLASSIFICATION	0.9999991990573293	WITHOUT_CLASSIFICATION	8.009426707538976E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999734784456	WITHOUT_CLASSIFICATION	2.6521554394295955E-8	DEFECT
// quick exit if the target is up to date	WITHOUT_CLASSIFICATION	0.9999999635893554	WITHOUT_CLASSIFICATION	3.641064461713841E-8	DEFECT
// ant task properties // defaults // CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999999969305333	WITHOUT_CLASSIFICATION	3.0694666367105675E-9	DEFECT
// to report sax parsing errors // CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999977011468405	WITHOUT_CLASSIFICATION	2.2988531595759313E-6	DEFECT
// then check it implements XMLReader	WITHOUT_CLASSIFICATION	0.999970850918421	WITHOUT_CLASSIFICATION	2.9149081579085675E-5	DEFECT
// see if it is a SAX1 Parser	WITHOUT_CLASSIFICATION	0.9999996203207044	WITHOUT_CLASSIFICATION	3.7967929548328085E-7	DEFECT
// Validates property	WITHOUT_CLASSIFICATION	0.9999971864236494	WITHOUT_CLASSIFICATION	2.813576350591049E-6	DEFECT
//for every file, we have a new instance of the validator	WITHOUT_CLASSIFICATION	0.9999873838567692	WITHOUT_CLASSIFICATION	1.2616143230796055E-5	DEFECT
// if this is not a valid file: just use the uri	WITHOUT_CLASSIFICATION	0.999999435113746	WITHOUT_CLASSIFICATION	5.648862539647822E-7	DEFECT
// Property	WITHOUT_CLASSIFICATION	0.9999937976638781	WITHOUT_CLASSIFICATION	6.20233612188981E-6	DEFECT
/*     * I'm not fond of this pattern: "sub-method expected to throw     * task-cancelling exceptions".  It feels too much like programming     * for side-effects to me...     */	WITHOUT_CLASSIFICATION	0.5988923535178597	DEFECT	0.40110764648214026	WITHOUT_CLASSIFICATION
// get files from old methods - includes and nested include	WITHOUT_CLASSIFICATION	0.9999997172347592	WITHOUT_CLASSIFICATION	2.827652408048682E-7	DEFECT
// Create the stream pumpers to forward listcab's stdout and stderr to the log // note: listcab is an interactive program, and issues prompts for every new line. //       Therefore, make it show only with verbose logging turned on.	WITHOUT_CLASSIFICATION	0.9998038648834007	WITHOUT_CLASSIFICATION	1.9613511659938545E-4	DEFECT
// Pump streams asynchronously	WITHOUT_CLASSIFICATION	0.9999999421482055	WITHOUT_CLASSIFICATION	5.785179450918595E-8	DEFECT
// A wild default for when the thread is interrupted	WITHOUT_CLASSIFICATION	0.9999997266568756	WITHOUT_CLASSIFICATION	2.733431242628175E-7	DEFECT
// Wait for the process to finish	WITHOUT_CLASSIFICATION	0.9999997851193456	WITHOUT_CLASSIFICATION	2.1488065430458677E-7	DEFECT
// Wait for the end of output and error streams	WITHOUT_CLASSIFICATION	0.9999919320225713	WITHOUT_CLASSIFICATION	8.067977428730903E-6	DEFECT
// Informative summary message in case of errors	WITHOUT_CLASSIFICATION	0.9999997626794107	WITHOUT_CLASSIFICATION	2.3732058921103368E-7	DEFECT
// die if cabarc fails	WITHOUT_CLASSIFICATION	0.9999963833085536	WITHOUT_CLASSIFICATION	3.6166914464925667E-6	DEFECT
// Use this to prepend a message to the properties file	WITHOUT_CLASSIFICATION	0.9999967604678636	WITHOUT_CLASSIFICATION	3.2395321364476956E-6	DEFECT
/* ========================================================================    *    * Constructors    */	WITHOUT_CLASSIFICATION	0.9999999781606642	WITHOUT_CLASSIFICATION	2.183933567818814E-8	DEFECT
/* ========================================================================    *    * Methods    */	WITHOUT_CLASSIFICATION	0.999997382245109	WITHOUT_CLASSIFICATION	2.6177548909659528E-6	DEFECT
// Create the PropertyFile	WITHOUT_CLASSIFICATION	0.9999998446593155	WITHOUT_CLASSIFICATION	1.5534068457160698E-7	DEFECT
// type may be null because it wasn't set	WITHOUT_CLASSIFICATION	0.9999507484835672	WITHOUT_CLASSIFICATION	4.9251516432711977E-5	DEFECT
// Default to string type // which means do nothing	WITHOUT_CLASSIFICATION	0.9999998762907883	WITHOUT_CLASSIFICATION	1.2370921153014033E-7	DEFECT
// Insert as a string by default	WITHOUT_CLASSIFICATION	0.9999997781517815	WITHOUT_CLASSIFICATION	2.2184821846138786E-7	DEFECT
// swallow	WITHOUT_CLASSIFICATION	0.9999979726191459	WITHOUT_CLASSIFICATION	2.0273808541088527E-6	DEFECT
// configure the transformer...	WITHOUT_CLASSIFICATION	0.9999994816993951	WITHOUT_CLASSIFICATION	5.183006049748082E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999998677448649	WITHOUT_CLASSIFICATION	1.3225513505480113E-7	DEFECT
// If only value is specified, the property is set to it // regardless of its previous value.	WITHOUT_CLASSIFICATION	0.9999999165677479	WITHOUT_CLASSIFICATION	8.343225212757284E-8	DEFECT
// If only default is specified and the property did not // exist in the property file, the property is set to default.	WITHOUT_CLASSIFICATION	0.9999953370029643	WITHOUT_CLASSIFICATION	4.66299703570347E-6	DEFECT
// If value and default are both specified and the property // previously existed in the property file, the property // is set to value.	WITHOUT_CLASSIFICATION	0.9999999570772197	WITHOUT_CLASSIFICATION	4.2922780312230184E-8	DEFECT
// If value and default are both specified and the property // did not exist in the property file, the property is set // to default.	WITHOUT_CLASSIFICATION	0.9999986049480181	WITHOUT_CLASSIFICATION	1.3950519819720277E-6	DEFECT
// Property type operations	WITHOUT_CLASSIFICATION	0.9999999639470012	WITHOUT_CLASSIFICATION	3.605299882926722E-8	DEFECT
// Property types	WITHOUT_CLASSIFICATION	0.9999992754928676	WITHOUT_CLASSIFICATION	7.245071324642699E-7	DEFECT
// resetting the stylesheet - reset transformer	WITHOUT_CLASSIFICATION	0.9999980016171675	WITHOUT_CLASSIFICATION	1.998382832582901E-6	DEFECT
// do we need to reset templates as well	WITHOUT_CLASSIFICATION	0.9999999048400139	WITHOUT_CLASSIFICATION	9.515998601094216E-8	DEFECT
// set parameters on each transformation, maybe something has changed //(e.g. value of file name parameter)	WITHOUT_CLASSIFICATION	0.9999999682691978	WITHOUT_CLASSIFICATION	3.173080224782244E-8	DEFECT
// end of try-catch	WITHOUT_CLASSIFICATION	0.9999997124096464	WITHOUT_CLASSIFICATION	2.875903536478853E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999920118448	WITHOUT_CLASSIFICATION	7.988155193624096E-8	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9999971163476059	WITHOUT_CLASSIFICATION	2.8836523940921245E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999734784456	WITHOUT_CLASSIFICATION	2.6521554394295955E-8	DEFECT
// WARN: Don't use the StreamSource(File) ctor. It won't work with // xalan prior to 2.2 because of systemid bugs.	WITHOUT_CLASSIFICATION	0.9065069505612617	WITHOUT_CLASSIFICATION	0.09349304943873823	DEFECT
// Use a stream so that you can close it yourself quickly // and avoid keeping the handle until the object is garbaged. // (always keep control), otherwise you won't be able to delete // the file quickly on windows.	WITHOUT_CLASSIFICATION	0.999994329805966	WITHOUT_CLASSIFICATION	5.670194034030448E-6	DEFECT
// not initialized yet, so create the factory	WITHOUT_CLASSIFICATION	0.9999999452382246	WITHOUT_CLASSIFICATION	5.476177555055304E-8	DEFECT
// specific attributes for the transformer	WITHOUT_CLASSIFICATION	0.9999999967167597	WITHOUT_CLASSIFICATION	3.2832402026914517E-9	DEFECT
// kept for backwards compatibility	WITHOUT_CLASSIFICATION	0.9999992649118377	WITHOUT_CLASSIFICATION	7.350881623699218E-7	DEFECT
// configure factory attributes	WITHOUT_CLASSIFICATION	0.9999997393215045	WITHOUT_CLASSIFICATION	2.6067849553529885E-7	DEFECT
// use XMLCatalog as the entity resolver and URI resolver	WITHOUT_CLASSIFICATION	0.9999693038023045	WITHOUT_CLASSIFICATION	3.069619769541238E-5	DEFECT
// configure output properties	WITHOUT_CLASSIFICATION	0.9999998517302382	WITHOUT_CLASSIFICATION	1.4826976183318867E-7	DEFECT
//copy the properties file	WITHOUT_CLASSIFICATION	0.9999950349489998	WITHOUT_CLASSIFICATION	4.965051000246487E-6	DEFECT
/* load properties from file if specified, otherwise        use Ant's properties */	WITHOUT_CLASSIFICATION	0.9999999986172479	WITHOUT_CLASSIFICATION	1.3827520552676996E-9	DEFECT
// add ant properties	WITHOUT_CLASSIFICATION	0.999999888257594	WITHOUT_CLASSIFICATION	1.1174240592611324E-7	DEFECT
//sort the list. Makes SCM and manual diffs easier.	WITHOUT_CLASSIFICATION	0.9999999007623571	WITHOUT_CLASSIFICATION	9.923764281189387E-8	DEFECT
// create XML document	WITHOUT_CLASSIFICATION	0.9999992966483457	WITHOUT_CLASSIFICATION	7.033516542156411E-7	DEFECT
// output properties	WITHOUT_CLASSIFICATION	0.9999997022059358	WITHOUT_CLASSIFICATION	2.977940642104816E-7	DEFECT
// build the command line from what we got the format // as specified in the CCM.EXE help	WITHOUT_CLASSIFICATION	0.9999991019489122	WITHOUT_CLASSIFICATION	8.98051087820649E-7	DEFECT
//create task ok, set this task as the default one	WITHOUT_CLASSIFICATION	0.9999999953715865	WITHOUT_CLASSIFICATION	4.6284134869160835E-9	DEFECT
// implementation of org.apache.tools.ant.taskdefs.ExecuteStreamHandler interface	WITHOUT_CLASSIFICATION	0.9999999696584374	WITHOUT_CLASSIFICATION	3.0341562584858437E-8	DEFECT
// build the command line from what we got the format is // ccm co /t .. files // as specified in the CCM.EXE help	WITHOUT_CLASSIFICATION	0.9999943817995467	WITHOUT_CLASSIFICATION	5.618200453242388E-6	DEFECT
// Default the viewpath to basedir if it is not specified	WITHOUT_CLASSIFICATION	0.9999997112381844	WITHOUT_CLASSIFICATION	2.887618156005689E-7	DEFECT
/*         * If configured to not care about whether the element is         * already checked out to the current view.         * Then check to see if it is checked out.         */	WITHOUT_CLASSIFICATION	0.9999999524851902	WITHOUT_CLASSIFICATION	4.7514809797364643E-8	DEFECT
// viewpath	WITHOUT_CLASSIFICATION	0.9999991045193062	WITHOUT_CLASSIFICATION	8.954806939133249E-7	DEFECT
// ClearCase items	WITHOUT_CLASSIFICATION	0.9999999751946179	WITHOUT_CLASSIFICATION	2.480538211714276E-8	DEFECT
// -reserved	WITHOUT_CLASSIFICATION	0.999999871160705	WITHOUT_CLASSIFICATION	1.2883929503560285E-7	DEFECT
// -unreserved	WITHOUT_CLASSIFICATION	0.9999998153091675	WITHOUT_CLASSIFICATION	1.846908325082935E-7	DEFECT
// -out	WITHOUT_CLASSIFICATION	0.9999948550215718	WITHOUT_CLASSIFICATION	5.144978428153534E-6	DEFECT
// -ndata	WITHOUT_CLASSIFICATION	0.9999928729828805	WITHOUT_CLASSIFICATION	7.127017119452887E-6	DEFECT
// -version	WITHOUT_CLASSIFICATION	0.9999996845633974	WITHOUT_CLASSIFICATION	3.1543660270199214E-7	DEFECT
// -nwarn	WITHOUT_CLASSIFICATION	0.9999972891410074	WITHOUT_CLASSIFICATION	2.7108589926432403E-6	DEFECT
// viewpath	WITHOUT_CLASSIFICATION	0.9999991045193062	WITHOUT_CLASSIFICATION	8.954806939133249E-7	DEFECT
// build the command line from what we got the format is // cleartool lsco [options...] [viewpath ...] // as specified in the CLEARTOOL.EXE help	WITHOUT_CLASSIFICATION	0.9999995147055276	WITHOUT_CLASSIFICATION	4.852944723304614E-7	DEFECT
// -version	WITHOUT_CLASSIFICATION	0.9999996845633974	WITHOUT_CLASSIFICATION	3.1543660270199214E-7	DEFECT
// -nwarn	WITHOUT_CLASSIFICATION	0.9999972891410074	WITHOUT_CLASSIFICATION	2.7108589926432403E-6	DEFECT
// type value	WITHOUT_CLASSIFICATION	0.9999942572391706	WITHOUT_CLASSIFICATION	5.7427608293750785E-6	DEFECT
// -c	WITHOUT_CLASSIFICATION	0.9999973021095986	WITHOUT_CLASSIFICATION	2.69789040142524E-6	DEFECT
// -c	WITHOUT_CLASSIFICATION	0.9999973021095986	WITHOUT_CLASSIFICATION	2.69789040142524E-6	DEFECT
// -cfile	WITHOUT_CLASSIFICATION	0.9999993699440514	WITHOUT_CLASSIFICATION	6.300559486654806E-7	DEFECT
// -cfile	WITHOUT_CLASSIFICATION	0.9999993699440514	WITHOUT_CLASSIFICATION	6.300559486654806E-7	DEFECT
// -cfile	WITHOUT_CLASSIFICATION	0.9999993699440514	WITHOUT_CLASSIFICATION	6.300559486654806E-7	DEFECT
// build the command line from what we got. the format is // cleartool checkin [options...] [viewpath ...] // as specified in the CLEARTOOL.EXE help	WITHOUT_CLASSIFICATION	0.9999998351997017	WITHOUT_CLASSIFICATION	1.648002982818729E-7	DEFECT
// -ptime	WITHOUT_CLASSIFICATION	0.9999988138974996	WITHOUT_CLASSIFICATION	1.1861025003886104E-6	DEFECT
// Throws EjbcException if unsuccessful	WITHOUT_CLASSIFICATION	0.9999981520622601	WITHOUT_CLASSIFICATION	1.8479377400515202E-6	DEFECT
// -keep	WITHOUT_CLASSIFICATION	0.9999965773897983	WITHOUT_CLASSIFICATION	3.422610201748551E-6	DEFECT
// -identical	WITHOUT_CLASSIFICATION	0.9999977260723362	WITHOUT_CLASSIFICATION	2.2739276638153162E-6	DEFECT
// Check for required attributes	WITHOUT_CLASSIFICATION	0.9999997716032927	WITHOUT_CLASSIFICATION	2.2839670737485615E-7	DEFECT
// build the command line from what we got. the format is // cleartool mkattr [options...] [viewpath ...] // as specified in the CLEARTOOL help	WITHOUT_CLASSIFICATION	0.999999734832289	WITHOUT_CLASSIFICATION	2.6516771103198295E-7	DEFECT
// -replace	WITHOUT_CLASSIFICATION	0.9999999459688447	WITHOUT_CLASSIFICATION	5.403115542614645E-8	DEFECT
// -recurse	WITHOUT_CLASSIFICATION	0.9999999754756874	WITHOUT_CLASSIFICATION	2.452431259826433E-8	DEFECT
// type	WITHOUT_CLASSIFICATION	0.9999822163565498	WITHOUT_CLASSIFICATION	1.7783643450219304E-5	DEFECT
// viewpath	WITHOUT_CLASSIFICATION	0.9999991045193062	WITHOUT_CLASSIFICATION	8.954806939133249E-7	DEFECT
// viewpath	WITHOUT_CLASSIFICATION	0.9999991045193062	WITHOUT_CLASSIFICATION	8.954806939133249E-7	DEFECT
// viewpath	WITHOUT_CLASSIFICATION	0.9999991045193062	WITHOUT_CLASSIFICATION	8.954806939133249E-7	DEFECT
// ClearCase items	WITHOUT_CLASSIFICATION	0.9999999751946179	WITHOUT_CLASSIFICATION	2.480538211714276E-8	DEFECT
// ClearCase items	WITHOUT_CLASSIFICATION	0.9999999751946179	WITHOUT_CLASSIFICATION	2.480538211714276E-8	DEFECT
// -nwarn	WITHOUT_CLASSIFICATION	0.9999972891410074	WITHOUT_CLASSIFICATION	2.7108589926432403E-6	DEFECT
// -c	WITHOUT_CLASSIFICATION	0.9999973021095986	WITHOUT_CLASSIFICATION	2.69789040142524E-6	DEFECT
// -c	WITHOUT_CLASSIFICATION	0.9999973021095986	WITHOUT_CLASSIFICATION	2.69789040142524E-6	DEFECT
// -cfile	WITHOUT_CLASSIFICATION	0.9999993699440514	WITHOUT_CLASSIFICATION	6.300559486654806E-7	DEFECT
// -ptime	WITHOUT_CLASSIFICATION	0.9999988138974996	WITHOUT_CLASSIFICATION	1.1861025003886104E-6	DEFECT
// -keep	WITHOUT_CLASSIFICATION	0.9999965773897983	WITHOUT_CLASSIFICATION	3.422610201748551E-6	DEFECT
// build the command line from what we got the format is // cleartool lock [options...] // as specified in the CLEARTOOL.EXE help	WITHOUT_CLASSIFICATION	0.9999995692311353	WITHOUT_CLASSIFICATION	4.307688648005914E-7	DEFECT
// Windows quoting of the value	WITHOUT_CLASSIFICATION	0.9999812725185052	WITHOUT_CLASSIFICATION	1.872748149475468E-5	DEFECT
// build the command line from what we got. the format is // cleartool mkelem [options...] [viewpath ...] // as specified in the CLEARTOOL.EXE help	WITHOUT_CLASSIFICATION	0.999998834068571	WITHOUT_CLASSIFICATION	1.1659314290465852E-6	DEFECT
/*         * Should choose either -ci or -nco.         */	WITHOUT_CLASSIFICATION	0.9999997367553797	WITHOUT_CLASSIFICATION	2.632446203549822E-7	DEFECT
// -nco	WITHOUT_CLASSIFICATION	0.9999916010185261	WITHOUT_CLASSIFICATION	8.39898147389778E-6	DEFECT
// -nco	WITHOUT_CLASSIFICATION	0.9999916010185261	WITHOUT_CLASSIFICATION	8.39898147389778E-6	DEFECT
// Check the command line options	WITHOUT_CLASSIFICATION	0.9999999188382316	WITHOUT_CLASSIFICATION	8.116176841424878E-8	DEFECT
// -ci	WITHOUT_CLASSIFICATION	0.9999962677006474	WITHOUT_CLASSIFICATION	3.732299352622106E-6	DEFECT
// object selector	WITHOUT_CLASSIFICATION	0.9999999035584154	WITHOUT_CLASSIFICATION	9.644158461515247E-8	DEFECT
// build the command line from what we got the format is // cleartool uncheckout [options...] [viewpath ...] // as specified in the CLEARTOOL.EXE help	WITHOUT_CLASSIFICATION	0.9999998742652927	WITHOUT_CLASSIFICATION	1.2573470727055855E-7	DEFECT
// -master	WITHOUT_CLASSIFICATION	0.9999999655780138	WITHOUT_CLASSIFICATION	3.442198612442538E-8	DEFECT
// -rm	WITHOUT_CLASSIFICATION	0.9999992862070859	WITHOUT_CLASSIFICATION	7.137929140960752E-7	DEFECT
// -eltype	WITHOUT_CLASSIFICATION	0.9999918145970403	WITHOUT_CLASSIFICATION	8.185402959614427E-6	DEFECT
// viewpath	WITHOUT_CLASSIFICATION	0.9999991045193062	WITHOUT_CLASSIFICATION	8.954806939133249E-7	DEFECT
// -version	WITHOUT_CLASSIFICATION	0.9999996845633974	WITHOUT_CLASSIFICATION	3.1543660270199214E-7	DEFECT
// -c	WITHOUT_CLASSIFICATION	0.9999973021095986	WITHOUT_CLASSIFICATION	2.69789040142524E-6	DEFECT
// -c	WITHOUT_CLASSIFICATION	0.9999973021095986	WITHOUT_CLASSIFICATION	2.69789040142524E-6	DEFECT
// -cfile	WITHOUT_CLASSIFICATION	0.9999993699440514	WITHOUT_CLASSIFICATION	6.300559486654806E-7	DEFECT
// -cfile	WITHOUT_CLASSIFICATION	0.9999993699440514	WITHOUT_CLASSIFICATION	6.300559486654806E-7	DEFECT
// -rmall -force	WITHOUT_CLASSIFICATION	0.9999998209764501	WITHOUT_CLASSIFICATION	1.7902355001042725E-7	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999959189831487	WITHOUT_CLASSIFICATION	4.081016851450244E-6	DEFECT
// build the command line from what we got. the format is // cleartool checkin [options...] [viewpath ...] // as specified in the CLEARTOOL.EXE help	WITHOUT_CLASSIFICATION	0.9999998351997017	WITHOUT_CLASSIFICATION	1.648002982818729E-7	DEFECT
// -identical	WITHOUT_CLASSIFICATION	0.9999977260723362	WITHOUT_CLASSIFICATION	2.2739276638153162E-6	DEFECT
// Check for required attributes	WITHOUT_CLASSIFICATION	0.9999997716032927	WITHOUT_CLASSIFICATION	2.2839670737485615E-7	DEFECT
// Check for required attributes	WITHOUT_CLASSIFICATION	0.9999997716032927	WITHOUT_CLASSIFICATION	2.2839670737485615E-7	DEFECT
// -replace	WITHOUT_CLASSIFICATION	0.9999999459688447	WITHOUT_CLASSIFICATION	5.403115542614645E-8	DEFECT
// -recurse	WITHOUT_CLASSIFICATION	0.9999999754756874	WITHOUT_CLASSIFICATION	2.452431259826433E-8	DEFECT
// type	WITHOUT_CLASSIFICATION	0.9999822163565498	WITHOUT_CLASSIFICATION	1.7783643450219304E-5	DEFECT
// Returns list of EJBs for processing	WITHOUT_CLASSIFICATION	0.9999996140114296	WITHOUT_CLASSIFICATION	3.8598857042365436E-7	DEFECT
// build the command line from what we got. the format is // cleartool rmtype [options...] type-selector... // as specified in the CLEARTOOL help	WITHOUT_CLASSIFICATION	0.9999995524573364	WITHOUT_CLASSIFICATION	4.4754266357526044E-7	DEFECT
// type-kind:type-name	WITHOUT_CLASSIFICATION	0.99991985234035	WITHOUT_CLASSIFICATION	8.014765965000997E-5	DEFECT
// -ignore	WITHOUT_CLASSIFICATION	0.9999997036496375	WITHOUT_CLASSIFICATION	2.9635036250521414E-7	DEFECT
// Return the type-selector	WITHOUT_CLASSIFICATION	0.9999993273272444	WITHOUT_CLASSIFICATION	6.726727556043647E-7	DEFECT
// -full	WITHOUT_CLASSIFICATION	0.9999936944017895	WITHOUT_CLASSIFICATION	6.305598210543125E-6	DEFECT
// -incremental	WITHOUT_CLASSIFICATION	0.9999987139211597	WITHOUT_CLASSIFICATION	1.286078840370303E-6	DEFECT
// -nlabel	WITHOUT_CLASSIFICATION	0.999999251052438	WITHOUT_CLASSIFICATION	7.489475618693011E-7	DEFECT
// baseline_root_name	WITHOUT_CLASSIFICATION	0.9999999484649341	WITHOUT_CLASSIFICATION	5.153506582923665E-8	DEFECT
// viewpath	WITHOUT_CLASSIFICATION	0.9999991045193062	WITHOUT_CLASSIFICATION	8.954806939133249E-7	DEFECT
// -c	WITHOUT_CLASSIFICATION	0.9999973021095986	WITHOUT_CLASSIFICATION	2.69789040142524E-6	DEFECT
// -cfile	WITHOUT_CLASSIFICATION	0.9999993699440514	WITHOUT_CLASSIFICATION	6.300559486654806E-7	DEFECT
// -ptime	WITHOUT_CLASSIFICATION	0.9999988138974996	WITHOUT_CLASSIFICATION	1.1861025003886104E-6	DEFECT
// Check for required attributes	WITHOUT_CLASSIFICATION	0.9999997716032927	WITHOUT_CLASSIFICATION	2.2839670737485615E-7	DEFECT
// -replace	WITHOUT_CLASSIFICATION	0.9999999459688447	WITHOUT_CLASSIFICATION	5.403115542614645E-8	DEFECT
// -replace	WITHOUT_CLASSIFICATION	0.9999999459688447	WITHOUT_CLASSIFICATION	5.403115542614645E-8	DEFECT
// build the command line from what we got the format is // cleartool lock [options...] // as specified in the CLEARTOOL.EXE help	WITHOUT_CLASSIFICATION	0.9999995692311353	WITHOUT_CLASSIFICATION	4.307688648005914E-7	DEFECT
// Check the command line options	WITHOUT_CLASSIFICATION	0.9999999188382316	WITHOUT_CLASSIFICATION	8.116176841424878E-8	DEFECT
// Check the command line options	WITHOUT_CLASSIFICATION	0.9999999188382316	WITHOUT_CLASSIFICATION	8.116176841424878E-8	DEFECT
// object selector	WITHOUT_CLASSIFICATION	0.9999999035584154	WITHOUT_CLASSIFICATION	9.644158461515247E-8	DEFECT
// -ordinary	WITHOUT_CLASSIFICATION	0.9999990719555997	WITHOUT_CLASSIFICATION	9.280444003983907E-7	DEFECT
// build the command line from what we got the format is // cleartool update [options...] [viewpath ...] // as specified in the CLEARTOOL.EXE help	WITHOUT_CLASSIFICATION	0.9999996921948963	WITHOUT_CLASSIFICATION	3.078051037173196E-7	DEFECT
// For debugging	WITHOUT_CLASSIFICATION	0.999996239234535	WITHOUT_CLASSIFICATION	3.760765464936565E-6	DEFECT
// -log logname	WITHOUT_CLASSIFICATION	0.9999979077535227	WITHOUT_CLASSIFICATION	2.0922464773617004E-6	DEFECT
// -graphical	WITHOUT_CLASSIFICATION	0.9999995861640429	WITHOUT_CLASSIFICATION	4.1383595703187025E-7	DEFECT
// -overwrite	WITHOUT_CLASSIFICATION	0.9999997321647958	WITHOUT_CLASSIFICATION	2.6783520418246383E-7	DEFECT
// -global	WITHOUT_CLASSIFICATION	0.9999981129245231	WITHOUT_CLASSIFICATION	1.887075476851191E-6	DEFECT
// -rename	WITHOUT_CLASSIFICATION	0.9999992114240452	WITHOUT_CLASSIFICATION	7.885759547140932E-7	DEFECT
// -obsolete	WITHOUT_CLASSIFICATION	0.9999996702501488	WITHOUT_CLASSIFICATION	3.2974985116650284E-7	DEFECT
// -noverwrite	WITHOUT_CLASSIFICATION	0.9999997207018841	WITHOUT_CLASSIFICATION	2.7929811583652525E-7	DEFECT
// build the command line from what we got. the format is // cleartool mklbtype [options...] type-selector... // as specified in the CLEARTOOL help	WITHOUT_CLASSIFICATION	0.9999989066101513	WITHOUT_CLASSIFICATION	1.0933898486376968E-6	DEFECT
// -ctime	WITHOUT_CLASSIFICATION	0.9999984530307451	WITHOUT_CLASSIFICATION	1.5469692549029408E-6	DEFECT
// -pbranch	WITHOUT_CLASSIFICATION	0.999999896246903	WITHOUT_CLASSIFICATION	1.0375309697581296E-7	DEFECT
// File[] filesInDir = directory.listFiles();	WITHOUT_CLASSIFICATION	0.9999996299370075	WITHOUT_CLASSIFICATION	3.700629924945786E-7	DEFECT
// -shared	WITHOUT_CLASSIFICATION	0.9999999353995089	WITHOUT_CLASSIFICATION	6.460049102189881E-8	DEFECT
// type-name@vob	WITHOUT_CLASSIFICATION	0.9999917744462219	WITHOUT_CLASSIFICATION	8.225553778154475E-6	DEFECT
// we have a file. create a stream for it	WITHOUT_CLASSIFICATION	0.999999841521097	WITHOUT_CLASSIFICATION	1.584789028910833E-7	DEFECT
// default directory to the project's base directory	WITHOUT_CLASSIFICATION	0.999999762538329	WITHOUT_CLASSIFICATION	2.3746167095194865E-7	DEFECT
// assume the worst	WITHOUT_CLASSIFICATION	0.9999999337323068	WITHOUT_CLASSIFICATION	6.62676932518318E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999734784456	WITHOUT_CLASSIFICATION	2.6521554394295955E-8	DEFECT
// create a data input stream from the jar // input stream	WITHOUT_CLASSIFICATION	0.9999999123534694	WITHOUT_CLASSIFICATION	8.764653054110321E-8	DEFECT
// this iterator is exhausted. Can we pop one off the stack	WITHOUT_CLASSIFICATION	0.999999946197168	WITHOUT_CLASSIFICATION	5.380283198509895E-8	DEFECT
// we get the root classes and build up a set of // classes upon which they depend	WITHOUT_CLASSIFICATION	0.9999986190337179	WITHOUT_CLASSIFICATION	1.3809662821444167E-6	DEFECT
// now recover all the dependencies collected and add to the list.	WITHOUT_CLASSIFICATION	0.9999999669095001	WITHOUT_CLASSIFICATION	3.3090499924642094E-8	DEFECT
// pick up the last round of dependencies that were determined	WITHOUT_CLASSIFICATION	0.9999999785030319	WITHOUT_CLASSIFICATION	2.1496968040419728E-8	DEFECT
// right we have a good looking class file.	WITHOUT_CLASSIFICATION	0.9998840534039327	WITHOUT_CLASSIFICATION	1.1594659606722495E-4	DEFECT
/* int minorVersion = */	WITHOUT_CLASSIFICATION	0.9999988700123209	WITHOUT_CLASSIFICATION	1.129987679052556E-6	DEFECT
/* int majorVersion = */	WITHOUT_CLASSIFICATION	0.9999986100029422	WITHOUT_CLASSIFICATION	1.389997057783898E-6	DEFECT
/* int accessFlags = */	WITHOUT_CLASSIFICATION	0.9999921351147344	WITHOUT_CLASSIFICATION	7.864885265636365E-6	DEFECT
/* int superClassIndex = */	WITHOUT_CLASSIFICATION	0.9999979447812056	WITHOUT_CLASSIFICATION	2.055218794404294E-6	DEFECT
// read the dependency cache from the disk	WITHOUT_CLASSIFICATION	0.9999984875729143	WITHOUT_CLASSIFICATION	1.5124270857236959E-6	DEFECT
// try to read the dependency info from the map if it is // not out of date	WITHOUT_CLASSIFICATION	0.9999996859661193	WITHOUT_CLASSIFICATION	3.1403388064831765E-7	DEFECT
// not cached - so need to read directly from the class file	WITHOUT_CLASSIFICATION	0.9999727948871089	WITHOUT_CLASSIFICATION	2.7205112891182094E-5	DEFECT
// This class depends on each class in the dependency list. For each // one of those, add this class into their affected classes list	WITHOUT_CLASSIFICATION	0.9999996065156996	WITHOUT_CLASSIFICATION	3.934843004017062E-7	DEFECT
// now determine which jars each class depends upon	WITHOUT_CLASSIFICATION	0.9999999292220855	WITHOUT_CLASSIFICATION	7.077791449685364E-8	DEFECT
// we need to add this jar to the list for this class.	WITHOUT_CLASSIFICATION	0.9999996615139786	WITHOUT_CLASSIFICATION	3.3848602135280397E-7	DEFECT
// write the dependency cache to the disk	WITHOUT_CLASSIFICATION	0.9999988466575237	WITHOUT_CLASSIFICATION	1.153342476345472E-6	DEFECT
// need to delete the main class	WITHOUT_CLASSIFICATION	0.9999980087320006	WITHOUT_CLASSIFICATION	1.9912679993390588E-6	DEFECT
//downgrade warnings on RMI stublike classes, as they are generated //by rmic, so there is no need to tell the user that their source is //missing.	WITHOUT_CLASSIFICATION	0.9999996868403336	WITHOUT_CLASSIFICATION	3.131596664268816E-7	DEFECT
// now check classpath file dependencies	WITHOUT_CLASSIFICATION	0.9999999497773263	WITHOUT_CLASSIFICATION	5.0222673710136585E-8	DEFECT
// if we have no info about the class - it may have been deleted already and we // are using cached info.	WITHOUT_CLASSIFICATION	0.9999999881973641	WITHOUT_CLASSIFICATION	1.1802635781542667E-8	DEFECT
// there was no class file. add this class to the list	WITHOUT_CLASSIFICATION	0.9999967802613225	WITHOUT_CLASSIFICATION	3.2197386773785838E-6	DEFECT
// break the classLocations into its components.	WITHOUT_CLASSIFICATION	0.999999902730911	WITHOUT_CLASSIFICATION	9.726908895481917E-8	DEFECT
// search the various source path entries	WITHOUT_CLASSIFICATION	0.9999999910649203	WITHOUT_CLASSIFICATION	8.935079733720986E-9	DEFECT
// create a data input stream from the jar input stream	WITHOUT_CLASSIFICATION	0.999999898981714	WITHOUT_CLASSIFICATION	1.0101828594302101E-7	DEFECT
// add null entries for any additional slots required.	WITHOUT_CLASSIFICATION	0.9998049522631661	WITHOUT_CLASSIFICATION	1.9504773683388514E-4	DEFECT
// end execute	WITHOUT_CLASSIFICATION	0.9999952767624097	WITHOUT_CLASSIFICATION	4.7232375902706644E-6	DEFECT
//in verbose mode we always log stuff	WITHOUT_CLASSIFICATION	0.9999923176571567	WITHOUT_CLASSIFICATION	7.682342843341279E-6	DEFECT
//the simple action is to send the command line in as is	WITHOUT_CLASSIFICATION	0.9999849396552213	WITHOUT_CLASSIFICATION	1.5060344778748975E-5	DEFECT
// Throws EjbcException	WITHOUT_CLASSIFICATION	0.9999944648041575	WITHOUT_CLASSIFICATION	5.535195842517916E-6	DEFECT
// VSS items	WITHOUT_CLASSIFICATION	0.9999996711915852	WITHOUT_CLASSIFICATION	3.288084147713794E-7	DEFECT
// The zero index is never present in the constant pool itself so // we add a null entry for it	WITHOUT_CLASSIFICATION	0.999993381157397	WITHOUT_CLASSIFICATION	6.618842603035921E-6	DEFECT
//but for big operations, we save all the params to a temp file //and set @tmpfile as the command -then we remember to delete the tempfile //afterwards	WITHOUT_CLASSIFICATION	0.9999998768724147	WITHOUT_CLASSIFICATION	1.2312758527540873E-7	DEFECT
//start at 1 because element 0 is the executable name	WITHOUT_CLASSIFICATION	0.9999998199279722	WITHOUT_CLASSIFICATION	1.8007202795088328E-7	DEFECT
//add to the list	WITHOUT_CLASSIFICATION	0.9999996783785998	WITHOUT_CLASSIFICATION	3.216214002641628E-7	DEFECT
//fill in args	WITHOUT_CLASSIFICATION	0.9999967047289918	WITHOUT_CLASSIFICATION	3.2952710081810528E-6	DEFECT
//fill in args	WITHOUT_CLASSIFICATION	0.9999967047289918	WITHOUT_CLASSIFICATION	3.2952710081810528E-6	DEFECT
//set source and rebuild options	WITHOUT_CLASSIFICATION	0.999999914701588	WITHOUT_CLASSIFICATION	8.529841202856302E-8	DEFECT
//rebuild unless the dest file is newer than the source file	WITHOUT_CLASSIFICATION	0.9999998782840664	WITHOUT_CLASSIFICATION	1.217159335072079E-7	DEFECT
//mark for a rebuild if the dest file is newer	WITHOUT_CLASSIFICATION	0.9999999199440649	WITHOUT_CLASSIFICATION	8.005593511941522E-8	DEFECT
// Mono 1.0's wsdl doesn't deal with absolute paths	WITHOUT_CLASSIFICATION	0.9999994114042494	WITHOUT_CLASSIFICATION	5.88595750484115E-7	DEFECT
//add in any extra files. //this is an error in mono, but we do not warn on it as they may fix that outside //the ant build cycle.	WITHOUT_CLASSIFICATION	0.9996045264707598	WITHOUT_CLASSIFICATION	3.954735292403007E-4	DEFECT
//mark for a rebuild if we are newer	WITHOUT_CLASSIFICATION	0.9999945365989009	WITHOUT_CLASSIFICATION	5.463401099159273E-6	DEFECT
//conditionally compile	WITHOUT_CLASSIFICATION	0.9998286344109542	WITHOUT_CLASSIFICATION	1.7136558904577923E-4	DEFECT
// Errors	WITHOUT_CLASSIFICATION	0.9999959244980237	WITHOUT_CLASSIFICATION	4.0755019763260795E-6	DEFECT
//bail on no references	WITHOUT_CLASSIFICATION	0.9999997378951868	WITHOUT_CLASSIFICATION	2.6210481315931466E-7	DEFECT
//bail on no references	WITHOUT_CLASSIFICATION	0.9999997378951868	WITHOUT_CLASSIFICATION	2.6210481315931466E-7	DEFECT
//demand create pathlist	WITHOUT_CLASSIFICATION	0.999999922015548	WITHOUT_CLASSIFICATION	7.798445202692733E-8	DEFECT
//bail on no references listed	WITHOUT_CLASSIFICATION	0.9999998576841326	WITHOUT_CLASSIFICATION	1.4231586741837714E-7	DEFECT
//loop through all definitions	WITHOUT_CLASSIFICATION	0.9999998522459136	WITHOUT_CLASSIFICATION	1.477540864209889E-7	DEFECT
//add those that are set, and a delimiter	WITHOUT_CLASSIFICATION	0.9999998352182885	WITHOUT_CLASSIFICATION	1.6478171151165513E-7	DEFECT
//set up response file options	WITHOUT_CLASSIFICATION	0.9999999897509075	WITHOUT_CLASSIFICATION	1.0249092461454402E-8	DEFECT
//if the refs are out of date, force a build.	WITHOUT_CLASSIFICATION	0.9999994564601022	WITHOUT_CLASSIFICATION	5.435398977616591E-7	DEFECT
//bail out early if there were no files	WITHOUT_CLASSIFICATION	0.999999979488159	WITHOUT_CLASSIFICATION	2.0511841085001455E-8	DEFECT
//now scan the hashtable and add the files	WITHOUT_CLASSIFICATION	0.9999955565717548	WITHOUT_CLASSIFICATION	4.443428245167356E-6	DEFECT
//add the source file	WITHOUT_CLASSIFICATION	0.9999999020304571	WITHOUT_CLASSIFICATION	9.796954295303591E-8	DEFECT
//now run	WITHOUT_CLASSIFICATION	0.9999661287104082	WITHOUT_CLASSIFICATION	3.3871289591716026E-5	DEFECT
//forcibly delete the output file in case of trouble	WITHOUT_CLASSIFICATION	0.9999999282848534	WITHOUT_CLASSIFICATION	7.171514660877964E-8	DEFECT
//then rethrow the exception	WITHOUT_CLASSIFICATION	0.9999231191504996	WITHOUT_CLASSIFICATION	7.688084950039407E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999734784456	WITHOUT_CLASSIFICATION	2.6521554394295955E-8	DEFECT
// CheckStyle:ConstantNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9999996970710566	WITHOUT_CLASSIFICATION	3.029289433627634E-7	DEFECT
// CheckStyle:MethodNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9999985649503456	WITHOUT_CLASSIFICATION	1.4350496544650922E-6	DEFECT
// CheckStyle:ConstantNameCheck ON // CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999912045215	WITHOUT_CLASSIFICATION	8.795478434543951E-9	DEFECT
// end execute	WITHOUT_CLASSIFICATION	0.9999952767624097	WITHOUT_CLASSIFICATION	4.7232375902706644E-6	DEFECT
//fill in args	WITHOUT_CLASSIFICATION	0.9999967047289918	WITHOUT_CLASSIFICATION	3.2952710081810528E-6	DEFECT
//fill in args	WITHOUT_CLASSIFICATION	0.9999967047289918	WITHOUT_CLASSIFICATION	3.2952710081810528E-6	DEFECT
//rebuild unless the dest file is newer than the source file	WITHOUT_CLASSIFICATION	0.9999998782840664	WITHOUT_CLASSIFICATION	1.217159335072079E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999734784456	WITHOUT_CLASSIFICATION	2.6521554394295955E-8	DEFECT
//determine directory: resourceDir if set, //the dir of the destFile if not	WITHOUT_CLASSIFICATION	0.9999998600287202	WITHOUT_CLASSIFICATION	1.399712798473585E-7	DEFECT
//Public //Private //Family //Assembly //Family and Assembly //Family or Assembly //Private Scope	WITHOUT_CLASSIFICATION	0.9999985553339701	WITHOUT_CLASSIFICATION	1.444666029942601E-6	DEFECT
//scan for an implicit fileset if there was a srcdir set //or there was no srcDir set but there was no contained classes	WITHOUT_CLASSIFICATION	0.9999999998430724	WITHOUT_CLASSIFICATION	1.569275700655023E-10	DEFECT
//if there is no src dir here, set it	WITHOUT_CLASSIFICATION	0.999999948686828	WITHOUT_CLASSIFICATION	5.1313172134331736E-8	DEFECT
//get dependencies list.	WITHOUT_CLASSIFICATION	0.9999993302418336	WITHOUT_CLASSIFICATION	6.697581664439145E-7	DEFECT
//get any included source directories	WITHOUT_CLASSIFICATION	0.9999997560071527	WITHOUT_CLASSIFICATION	2.439928473077123E-7	DEFECT
//add the files to the command	WITHOUT_CLASSIFICATION	0.9999879384951292	WITHOUT_CLASSIFICATION	1.206150487064365E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc // CheckStyle:ConstantNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9999999817763536	WITHOUT_CLASSIFICATION	1.82236463096015E-8	DEFECT
// CheckStyle:MethodNameCheck ON	WITHOUT_CLASSIFICATION	0.9999991095373134	WITHOUT_CLASSIFICATION	8.904626865344386E-7	DEFECT
/*         *  space for more argumentativeness         *  command.addArgument();         *  command.addArgument();         */	WITHOUT_CLASSIFICATION	0.9999993979636979	WITHOUT_CLASSIFICATION	6.020363021487386E-7	DEFECT
// ends with '.' or null	WITHOUT_CLASSIFICATION	0.9999843024880228	WITHOUT_CLASSIFICATION	1.5697511977092183E-5	DEFECT
/* Constants used for the "beantype" attribute */	WITHOUT_CLASSIFICATION	0.9999999458081988	WITHOUT_CLASSIFICATION	5.419180107321258E-8	DEFECT
/* Filenames of the standard EJB descriptor and the iAS-specific descriptor */	WITHOUT_CLASSIFICATION	0.9999996809859009	WITHOUT_CLASSIFICATION	3.1901409906355605E-7	DEFECT
/* Classpath used when the iAS ejbc is called */	WITHOUT_CLASSIFICATION	0.9999986123467787	WITHOUT_CLASSIFICATION	1.3876532213058506E-6	DEFECT
/* Options passed to the iAS ejbc */	WITHOUT_CLASSIFICATION	0.9999986612843215	WITHOUT_CLASSIFICATION	1.3387156784627164E-6	DEFECT
/* iAS installation directory (used if ejbc isn't on user's PATH) */	WITHOUT_CLASSIFICATION	0.9999997131462107	WITHOUT_CLASSIFICATION	2.86853789219437E-7	DEFECT
/* Parser and handler used to process both EJB descriptor files */	WITHOUT_CLASSIFICATION	0.999999974541277	WITHOUT_CLASSIFICATION	2.5458723039426284E-8	DEFECT
/* Value of the display-name element read from the standard EJB descriptor */	WITHOUT_CLASSIFICATION	0.9999954610371965	WITHOUT_CLASSIFICATION	4.53896280354437E-6	DEFECT
/*         * Parse the classpath into it's individual elements and store the         * results in the "classpathElements" instance variable.         */	WITHOUT_CLASSIFICATION	0.9999999844767907	WITHOUT_CLASSIFICATION	1.552320932978103E-8	DEFECT
/* If the -classpath flag isn't specified, use the system classpath */	WITHOUT_CLASSIFICATION	0.9999878540949539	WITHOUT_CLASSIFICATION	1.2145905046173655E-5	DEFECT
/*         * If the -d flag isn't specified, use the working directory as the         * destination directory         */	WITHOUT_CLASSIFICATION	0.9999912795704304	WITHOUT_CLASSIFICATION	8.720429569550222E-6	DEFECT
/* Construct a SAXParser used to process the descriptors */	WITHOUT_CLASSIFICATION	0.9999999609403499	WITHOUT_CLASSIFICATION	3.905964996309348E-8	DEFECT
// SAXException or ParserConfigurationException may be thrown	WITHOUT_CLASSIFICATION	0.9999977127238361	WITHOUT_CLASSIFICATION	2.2872761639646652E-6	DEFECT
/* Build and populate an instance of the ejbc utility */	WITHOUT_CLASSIFICATION	0.999997155041548	WITHOUT_CLASSIFICATION	2.8449584520023606E-6	DEFECT
/* Execute the ejbc utility -- stubs/skeletons are rebuilt, if needed */	WITHOUT_CLASSIFICATION	0.9999999789059738	WITHOUT_CLASSIFICATION	2.1094026208639007E-8	DEFECT
// Add one for the "\"	WITHOUT_CLASSIFICATION	0.9999996833882489	WITHOUT_CLASSIFICATION	3.166117511597859E-7	DEFECT
/* Concatenate all of the command line arguments into a single String */	WITHOUT_CLASSIFICATION	0.9999997920240837	WITHOUT_CLASSIFICATION	2.0797591640086943E-7	DEFECT
/* If an iAS home directory is specified, prepend it to the commmand */	WITHOUT_CLASSIFICATION	0.9999963506480695	WITHOUT_CLASSIFICATION	3.6493519304525202E-6	DEFECT
/*         * The EJB information is gathered from the standard XML EJB descriptor         * and the iAS-specific XML EJB descriptor using a SAX parser.         */	WITHOUT_CLASSIFICATION	0.99999233433291	WITHOUT_CLASSIFICATION	7.665667090003959E-6	DEFECT
/* OPTIONAL COMMAND LINE PARAMETERS */	WITHOUT_CLASSIFICATION	0.9999956594348921	WITHOUT_CLASSIFICATION	4.340565107927055E-6	DEFECT
/* No beantype flag is needed for an entity bean */	WITHOUT_CLASSIFICATION	0.9999219877074027	WITHOUT_CLASSIFICATION	7.801229259727783E-5	DEFECT
/* REQUIRED COMMAND LINE PARAMETERS */	WITHOUT_CLASSIFICATION	0.9999943097188033	WITHOUT_CLASSIFICATION	5.690281196711451E-6	DEFECT
/* Convert the List into an Array and return it */	WITHOUT_CLASSIFICATION	0.9999999238636752	WITHOUT_CLASSIFICATION	7.613632481113724E-8	DEFECT
/* Inner classes follow */	WITHOUT_CLASSIFICATION	0.9999983762963949	WITHOUT_CLASSIFICATION	1.6237036051165812E-6	DEFECT
// End of EjbcException inner class	WITHOUT_CLASSIFICATION	0.9999872511138987	WITHOUT_CLASSIFICATION	1.2748886101155276E-5	DEFECT
// Tracks current element // Tracks current text data // "session" or "entity"	WITHOUT_CLASSIFICATION	0.9999989991734715	WITHOUT_CLASSIFICATION	1.0008265285386603E-6	DEFECT
/* Search the resource Map and (if not found) file Map */	WITHOUT_CLASSIFICATION	0.9999996378179983	WITHOUT_CLASSIFICATION	3.6218200172103837E-7	DEFECT
/* A new element has started, so reset the text being captured */	WITHOUT_CLASSIFICATION	0.9999999721040868	WITHOUT_CLASSIFICATION	2.7895913252558655E-8	DEFECT
/*             * If this is a standard EJB 1.1 descriptor, we are looking for one             * set of data, while if this is an iAS-specific descriptor, we're             * looking for different set of data.  Hand the processing off to             * the appropriate method.             */	WITHOUT_CLASSIFICATION	0.9999999944039913	WITHOUT_CLASSIFICATION	5.596008707064554E-9	DEFECT
// End of EjbcHandler inner class	WITHOUT_CLASSIFICATION	0.9999996128991155	WITHOUT_CLASSIFICATION	3.8710088444283586E-7	DEFECT
/*         * Below are getter's and setter's for each of the instance variables.         * Note that (in addition to supporting setters with the same type as         * the instance variable) a setter is provided with takes a String         * argument -- this are provided so the XML document handler can set         * the EJB values using the Strings it parses.         */	WITHOUT_CLASSIFICATION	0.9990224756768686	WITHOUT_CLASSIFICATION	9.775243231313225E-4	DEFECT
/* Check that the specified instance variables are valid */	WITHOUT_CLASSIFICATION	0.9999999933126089	WITHOUT_CLASSIFICATION	6.6873911081598914E-9	DEFECT
/* Check that the EJB "source" classes all exist */	WITHOUT_CLASSIFICATION	0.9999997246115775	WITHOUT_CLASSIFICATION	2.75388422593763E-7	DEFECT
// The timestamp of the "newest" class // Timestamp for a given class // File for the remote interface class // File for the home interface class // File for the EJB implementation class // File for the EJB primary key class	WITHOUT_CLASSIFICATION	0.9953717893735415	WITHOUT_CLASSIFICATION	0.004628210626458554	DEFECT
/* Check the timestamp on the remote interface */	WITHOUT_CLASSIFICATION	0.9999997550170031	WITHOUT_CLASSIFICATION	2.4498299685712347E-7	DEFECT
/* Check the timestamp on the home interface */	WITHOUT_CLASSIFICATION	0.999999841757182	WITHOUT_CLASSIFICATION	1.5824281791586948E-7	DEFECT
/* Check the timestamp of the primary key class */	WITHOUT_CLASSIFICATION	0.9999988720591597	WITHOUT_CLASSIFICATION	1.1279408403070341E-6	DEFECT
// List of all stubs & skels // Earliest mod time // Has each been found?	WITHOUT_CLASSIFICATION	0.999999994915358	WITHOUT_CLASSIFICATION	5.084642017599392E-9	DEFECT
/*             * Loop through each stub/skeleton class that must be generated, and             * determine (if all exist) which file has the most recent timestamp             */	WITHOUT_CLASSIFICATION	0.9999986133696529	WITHOUT_CLASSIFICATION	1.3866303471493637E-6	DEFECT
/*                 * Add each stub/skeleton class to the list of EJB files.  Note                 * that each class is added even if it doesn't exist now.                 */	WITHOUT_CLASSIFICATION	0.9999987348702353	WITHOUT_CLASSIFICATION	1.26512976479724E-6	DEFECT
/* Keep track of the oldest modification timestamp */	WITHOUT_CLASSIFICATION	0.9999985503382616	WITHOUT_CLASSIFICATION	1.4496617385380772E-6	DEFECT
// End of EjbInfo inner class	WITHOUT_CLASSIFICATION	0.9999973009149775	WITHOUT_CLASSIFICATION	2.6990850223876038E-6	DEFECT
// Fully qualified name of the Java class // Name of the package for this class // Name of the class without the package	WITHOUT_CLASSIFICATION	0.9999999487577876	WITHOUT_CLASSIFICATION	5.124221229783808E-8	DEFECT
// End of Classname inner class	WITHOUT_CLASSIFICATION	0.9999988968495604	WITHOUT_CLASSIFICATION	1.1031504395965653E-6	DEFECT
// Stream to read and redirect to standard output	WITHOUT_CLASSIFICATION	0.9999994354248147	WITHOUT_CLASSIFICATION	5.645751852786016E-7	DEFECT
// End of RedirectOutput inner class	WITHOUT_CLASSIFICATION	0.9999761691134635	WITHOUT_CLASSIFICATION	2.383088653639674E-5	DEFECT
// add -file xxxxx to the commandline	WITHOUT_CLASSIFICATION	0.999999341412869	WITHOUT_CLASSIFICATION	6.585871311080456E-7	DEFECT
//clientname = ejbjarfile+client.jar	WITHOUT_CLASSIFICATION	0.999999923909136	WITHOUT_CLASSIFICATION	7.60908640798663E-8	DEFECT
// end of else	WITHOUT_CLASSIFICATION	0.9999997196371266	WITHOUT_CLASSIFICATION	2.8036287332726113E-7	DEFECT
// ejb jar file	WITHOUT_CLASSIFICATION	0.9999999729582584	WITHOUT_CLASSIFICATION	2.704174167322765E-8	DEFECT
// ejb jar file	WITHOUT_CLASSIFICATION	0.9999999729582584	WITHOUT_CLASSIFICATION	2.704174167322765E-8	DEFECT
//client jar file	WITHOUT_CLASSIFICATION	0.9999999521435692	WITHOUT_CLASSIFICATION	4.7856430789949445E-8	DEFECT
//client jar file	WITHOUT_CLASSIFICATION	0.9999999521435692	WITHOUT_CLASSIFICATION	4.7856430789949445E-8	DEFECT
// Have to catch this because of the semantics of calling main()	WITHOUT_CLASSIFICATION	0.9999959651245206	WITHOUT_CLASSIFICATION	4.034875479439638E-6	DEFECT
// Have to catch this because of the semantics of calling main()	WITHOUT_CLASSIFICATION	0.9999959651245206	WITHOUT_CLASSIFICATION	4.034875479439638E-6	DEFECT
//classpath	WITHOUT_CLASSIFICATION	0.9999974316102899	WITHOUT_CLASSIFICATION	2.5683897102628123E-6	DEFECT
/* ------------- */	WITHOUT_CLASSIFICATION	0.9999908131734059	WITHOUT_CLASSIFICATION	9.186826594068371E-6	DEFECT
/* ------------- */	WITHOUT_CLASSIFICATION	0.9999908131734059	WITHOUT_CLASSIFICATION	9.186826594068371E-6	DEFECT
/* GenIC options */	WITHOUT_CLASSIFICATION	0.9999991571107482	WITHOUT_CLASSIFICATION	8.42889251812169E-7	DEFECT
/* other options */	WITHOUT_CLASSIFICATION	0.9999997756432378	WITHOUT_CLASSIFICATION	2.2435676211902172E-7	DEFECT
/* -------------------- */	WITHOUT_CLASSIFICATION	0.9999915634382015	WITHOUT_CLASSIFICATION	8.43656179852486E-6	DEFECT
/* -------------------- */	WITHOUT_CLASSIFICATION	0.9999915634382015	WITHOUT_CLASSIFICATION	8.43656179852486E-6	DEFECT
/* GenIC options setter */	WITHOUT_CLASSIFICATION	0.9999996830948621	WITHOUT_CLASSIFICATION	3.169051379695371E-7	DEFECT
// -I- // ignore all errors // -Vd	WITHOUT_CLASSIFICATION	0.9999996066389029	WITHOUT_CLASSIFICATION	3.9336109719588863E-7	DEFECT
/* ------------- */	WITHOUT_CLASSIFICATION	0.9999908131734059	WITHOUT_CLASSIFICATION	9.186826594068371E-6	DEFECT
/* -------------------- */	WITHOUT_CLASSIFICATION	0.9999915634382015	WITHOUT_CLASSIFICATION	8.43656179852486E-6	DEFECT
/* other options setter */	WITHOUT_CLASSIFICATION	0.9999998610205477	WITHOUT_CLASSIFICATION	1.38979452218653E-7	DEFECT
/* other methods */	WITHOUT_CLASSIFICATION	0.9999993801469098	WITHOUT_CLASSIFICATION	6.198530901501654E-7	DEFECT
// the method deleteOnExit() do not work because the directory is not empty	WITHOUT_CLASSIFICATION	0.9999903553230153	WITHOUT_CLASSIFICATION	9.644676984763522E-6	DEFECT
// create the generic jar first	WITHOUT_CLASSIFICATION	0.9999999832041053	WITHOUT_CLASSIFICATION	1.6795894745940534E-8	DEFECT
// GenIC call on generic jar	WITHOUT_CLASSIFICATION	0.9999994634948295	WITHOUT_CLASSIFICATION	5.365051704566721E-7	DEFECT
// create the real jar	WITHOUT_CLASSIFICATION	0.9999999695088617	WITHOUT_CLASSIFICATION	3.049113826917406E-8	DEFECT
// JOnAS-specific descriptor deployment	WITHOUT_CLASSIFICATION	0.9999998659070557	WITHOUT_CLASSIFICATION	1.3409294430058363E-7	DEFECT
// JOnAS-specific DD // true if the JOnAS convention is used for the DD // Directory path of the EJB descriptor // EJB descriptor file name // Filename appearing before name terminator // Filename appearing after the name terminator	WITHOUT_CLASSIFICATION	0.9999995116593	WITHOUT_CLASSIFICATION	4.883407000643063E-7	DEFECT
// extract path info	WITHOUT_CLASSIFICATION	0.9999988645649561	WITHOUT_CLASSIFICATION	1.135435043897642E-6	DEFECT
// descriptorName is just a file without path	WITHOUT_CLASSIFICATION	0.9999999381064036	WITHOUT_CLASSIFICATION	6.189359627338326E-8	DEFECT
/*         * Check for the odd case where the terminator and/or filename         * extension aren't found.  These will ensure "jonas-" appears at the         * end of the name and before the '.' (if present).         */	WITHOUT_CLASSIFICATION	0.9999996927572855	WITHOUT_CLASSIFICATION	3.0724271452344983E-7	DEFECT
// no . found	WITHOUT_CLASSIFICATION	0.9999993973624528	WITHOUT_CLASSIFICATION	6.026375473028316E-7	DEFECT
// try to find JOnAS specific convention name	WITHOUT_CLASSIFICATION	0.9999998821626104	WITHOUT_CLASSIFICATION	1.1783738966755824E-7	DEFECT
// else get standard baseName	WITHOUT_CLASSIFICATION	0.9999998411920108	WITHOUT_CLASSIFICATION	1.588079891674685E-7	DEFECT
// jonasroot	WITHOUT_CLASSIFICATION	0.9999995677032201	WITHOUT_CLASSIFICATION	4.3229677980834E-7	DEFECT
// java policy file	WITHOUT_CLASSIFICATION	0.9999988845348532	WITHOUT_CLASSIFICATION	1.1154651468025408E-6	DEFECT
// outputdir	WITHOUT_CLASSIFICATION	0.9999971778799026	WITHOUT_CLASSIFICATION	2.822120097498255E-6	DEFECT
// work around a bug of GenIC 2.5	WITHOUT_CLASSIFICATION	0.769478569367791	WITHOUT_CLASSIFICATION	0.23052143063220903	DEFECT
// classpath	WITHOUT_CLASSIFICATION	0.9999995178409022	WITHOUT_CLASSIFICATION	4.82159097672025E-7	DEFECT
// try to create the classpath for the correct ORB	WITHOUT_CLASSIFICATION	0.9999827841836701	WITHOUT_CLASSIFICATION	1.721581632979861E-5	DEFECT
// keepgenerated	WITHOUT_CLASSIFICATION	0.9999998959706536	WITHOUT_CLASSIFICATION	1.0402934632865656E-7	DEFECT
// nocompil	WITHOUT_CLASSIFICATION	0.9999976748432561	WITHOUT_CLASSIFICATION	2.3251567438535412E-6	DEFECT
// novalidation	WITHOUT_CLASSIFICATION	0.9999964855798467	WITHOUT_CLASSIFICATION	3.5144201533629273E-6	DEFECT
// javac	WITHOUT_CLASSIFICATION	0.9999990159947757	WITHOUT_CLASSIFICATION	9.840052242814076E-7	DEFECT
// javacopts	WITHOUT_CLASSIFICATION	0.9999998104464053	WITHOUT_CLASSIFICATION	1.8955359471311676E-7	DEFECT
// rmicopts	WITHOUT_CLASSIFICATION	0.9999996970065738	WITHOUT_CLASSIFICATION	3.029934262282691E-7	DEFECT
// secpropag	WITHOUT_CLASSIFICATION	0.9999994517635393	WITHOUT_CLASSIFICATION	5.48236460663776E-7	DEFECT
// verbose	WITHOUT_CLASSIFICATION	0.9999996415098423	WITHOUT_CLASSIFICATION	3.5849015769465925E-7	DEFECT
// input file to process by GenIC	WITHOUT_CLASSIFICATION	0.9999999316482117	WITHOUT_CLASSIFICATION	6.835178827131758E-8	DEFECT
// calling GenIC task	WITHOUT_CLASSIFICATION	0.9999976955205786	WITHOUT_CLASSIFICATION	2.30447942141994E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999920118448	WITHOUT_CLASSIFICATION	7.988155193624096E-8	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9999971163476059	WITHOUT_CLASSIFICATION	2.8836523940921245E-6	DEFECT
// the method deleteOnExit() do not work because the directory is not empty	WITHOUT_CLASSIFICATION	0.9999903553230153	WITHOUT_CLASSIFICATION	9.644676984763522E-6	DEFECT
// baseNameTerminator not found: the descriptor use the // JOnAS naming convention, ie [Foo.xml,jonas-Foo.xml] and // not [Foo<baseNameTerminator>-ejb-jar.xml, // Foo<baseNameTerminator>-jonas-ejb-jar.xml].	WITHOUT_CLASSIFICATION	0.9999998415683486	WITHOUT_CLASSIFICATION	1.5843165140787247E-7	DEFECT
// jonasroot	WITHOUT_CLASSIFICATION	0.9999995677032201	WITHOUT_CLASSIFICATION	4.3229677980834E-7	DEFECT
// GenIC task // GenIC class (3 are supported for various // versions	WITHOUT_CLASSIFICATION	0.9999998062088666	WITHOUT_CLASSIFICATION	1.9379113345934922E-7	DEFECT
// javac	WITHOUT_CLASSIFICATION	0.9999990159947757	WITHOUT_CLASSIFICATION	9.840052242814076E-7	DEFECT
// additionalargs	WITHOUT_CLASSIFICATION	0.9999990735647101	WITHOUT_CLASSIFICATION	9.264352898972894E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999734784456	WITHOUT_CLASSIFICATION	2.6521554394295955E-8	DEFECT
// add the generated files to the ejbFiles	WITHOUT_CLASSIFICATION	0.9999997944204194	WITHOUT_CLASSIFICATION	2.055795805260006E-7	DEFECT
// orb	WITHOUT_CLASSIFICATION	0.9999958835862913	WITHOUT_CLASSIFICATION	4.116413708683653E-6	DEFECT
/* ----------------------------------------------------------------------------------- */	WITHOUT_CLASSIFICATION	0.9999809707940719	WITHOUT_CLASSIFICATION	1.9029205928086832E-5	DEFECT
/* ----------------------------------------------------------------------------------- */	WITHOUT_CLASSIFICATION	0.9999809707940719	WITHOUT_CLASSIFICATION	1.9029205928086832E-5	DEFECT
/* utilitary methods */	WITHOUT_CLASSIFICATION	0.9999995689629513	WITHOUT_CLASSIFICATION	4.3103704874245986E-7	DEFECT
// Create the parser using whatever parser the system dictates	WITHOUT_CLASSIFICATION	0.9999998574605868	WITHOUT_CLASSIFICATION	1.425394132064378E-7	DEFECT
// Loop through the files. Each file represents one deployment // descriptor, and hence one bean in our model.	WITHOUT_CLASSIFICATION	0.9999999784041202	WITHOUT_CLASSIFICATION	2.1595879829889144E-8	DEFECT
// process the deployment descriptor in each tool	WITHOUT_CLASSIFICATION	0.9999999130592798	WITHOUT_CLASSIFICATION	8.694072019516514E-8	DEFECT
// end of execute()	WITHOUT_CLASSIFICATION	0.9999957418360569	WITHOUT_CLASSIFICATION	4.2581639431065156E-6	DEFECT
// resolve relative to project basedir	WITHOUT_CLASSIFICATION	0.9999995410553632	WITHOUT_CLASSIFICATION	4.589446368442266E-7	DEFECT
// Get the filename into a String object	WITHOUT_CLASSIFICATION	0.9999999656347203	WITHOUT_CLASSIFICATION	3.43652797755067E-8	DEFECT
// Get the value of the <ejb-name> tag.  Only the first occurrence.	WITHOUT_CLASSIFICATION	0.9999999992133386	WITHOUT_CLASSIFICATION	7.866613795203371E-10	DEFECT
// Then the toplink deployment descriptor	WITHOUT_CLASSIFICATION	0.9999986692943897	WITHOUT_CLASSIFICATION	1.3307056102469379E-6	DEFECT
// Setup a naming standard here?.	WITHOUT_CLASSIFICATION	0.9999992602512984	WITHOUT_CLASSIFICATION	7.397487014951026E-7	DEFECT
// get all the files in the descriptor directory	WITHOUT_CLASSIFICATION	0.9999983746158554	WITHOUT_CLASSIFICATION	1.625384144628737E-6	DEFECT
// If we still can't find it, complain	WITHOUT_CLASSIFICATION	0.9997773215199126	WITHOUT_CLASSIFICATION	2.2267848008736163E-4	DEFECT
// OK, properties file may be absolute	WITHOUT_CLASSIFICATION	0.9999998152986705	WITHOUT_CLASSIFICATION	1.8470132950792183E-7	DEFECT
// do we need to regenerate the file	WITHOUT_CLASSIFICATION	0.9999994157338193	WITHOUT_CLASSIFICATION	5.842661807068006E-7	DEFECT
//weblogic.ejb.utils.DDCreator.main(args);	WITHOUT_CLASSIFICATION	0.999999942922862	WITHOUT_CLASSIFICATION	5.707713804628902E-8	DEFECT
// there was an exception - run with no exit to get proper error	WITHOUT_CLASSIFICATION	0.9999932892723498	WITHOUT_CLASSIFICATION	6.7107276502702155E-6	DEFECT
//weblogic.ejb.utils.DDCreator.main(newArgs);	WITHOUT_CLASSIFICATION	0.9999999791204084	WITHOUT_CLASSIFICATION	2.0879591573015103E-8	DEFECT
/* Attributes set by the Ant build file */	WITHOUT_CLASSIFICATION	0.9999997175869281	WITHOUT_CLASSIFICATION	2.824130719401207E-7	DEFECT
// Create the zip entry and add it to the jar file	WITHOUT_CLASSIFICATION	0.9999998731804002	WITHOUT_CLASSIFICATION	1.268195999023575E-7	DEFECT
//add it to list of files in jar	WITHOUT_CLASSIFICATION	0.9999988026699912	WITHOUT_CLASSIFICATION	1.1973300086974268E-6	DEFECT
// If it's a primitive wrapper then we shouldn't try and put // it into the jar, so ignore it.	WITHOUT_CLASSIFICATION	0.9999981614485798	WITHOUT_CLASSIFICATION	1.8385514202596855E-6	DEFECT
// Translate periods into path separators, add .class to the // name, create the File object and add it to the Hashtable.	WITHOUT_CLASSIFICATION	0.9999996383314201	WITHOUT_CLASSIFICATION	3.6166857991008996E-7	DEFECT
// Weblogic will throw an error if the deployment descriptor does // not match the class files.	WITHOUT_CLASSIFICATION	0.9999883556681087	WITHOUT_CLASSIFICATION	1.1644331891302156E-5	DEFECT
// Create the file input stream, and buffer everything over // to the jar output stream	WITHOUT_CLASSIFICATION	0.9999999971797373	WITHOUT_CLASSIFICATION	2.8202627690419934E-9	DEFECT
// Close up the file input stream for the class file	WITHOUT_CLASSIFICATION	0.9999999826184744	WITHOUT_CLASSIFICATION	1.7381525599405116E-8	DEFECT
// register any DTDs supplied by the user	WITHOUT_CLASSIFICATION	0.9999999673050696	WITHOUT_CLASSIFICATION	3.269493031578968E-8	DEFECT
// none to register for generic	WITHOUT_CLASSIFICATION	0.9999996509172382	WITHOUT_CLASSIFICATION	3.490827618618878E-7	DEFECT
// Retrive the files to be added to JAR from EJB descriptor	WITHOUT_CLASSIFICATION	0.9999974919422154	WITHOUT_CLASSIFICATION	2.5080577845342177E-6	DEFECT
// Add any support classes specified in the build file	WITHOUT_CLASSIFICATION	0.9999998061031178	WITHOUT_CLASSIFICATION	1.9389688216138556E-7	DEFECT
// Determine the JAR filename (without filename extension)	WITHOUT_CLASSIFICATION	0.9999998965000989	WITHOUT_CLASSIFICATION	1.034999011271298E-7	DEFECT
// First the regular deployment descriptor	WITHOUT_CLASSIFICATION	0.9999997369585589	WITHOUT_CLASSIFICATION	2.6304144107436594E-7	DEFECT
// now the vendor specific files, if any	WITHOUT_CLASSIFICATION	0.9999996508125139	WITHOUT_CLASSIFICATION	3.4918748623338013E-7	DEFECT
// add any dependent files	WITHOUT_CLASSIFICATION	0.9999996108190412	WITHOUT_CLASSIFICATION	3.8918095887121E-7	DEFECT
// Check to see if we need a build and start doing the work!	WITHOUT_CLASSIFICATION	0.9999988810852257	WITHOUT_CLASSIFICATION	1.1189147742076245E-6	DEFECT
// Log that we are going to build...	WITHOUT_CLASSIFICATION	0.9998118537879676	WITHOUT_CLASSIFICATION	1.8814621203233552E-4	DEFECT
// Use helper method to write the jarfile	WITHOUT_CLASSIFICATION	0.9999999648122814	WITHOUT_CLASSIFICATION	3.5187718623741556E-8	DEFECT
// Log that the file is up to date...	WITHOUT_CLASSIFICATION	0.9999719937852533	WITHOUT_CLASSIFICATION	2.8006214746652446E-5	DEFECT
/* Parse the ejb deployment descriptor.  While it may not             * look like much, we use a SAXParser and an inner class to             * get hold of all the classfile names for the descriptor.             */	WITHOUT_CLASSIFICATION	0.999915436691319	WITHOUT_CLASSIFICATION	8.45633086810097E-5	DEFECT
// add in support classes if any	WITHOUT_CLASSIFICATION	0.9999956003863838	WITHOUT_CLASSIFICATION	4.399613616252157E-6	DEFECT
// Work out what the base name is	WITHOUT_CLASSIFICATION	0.9999911475151908	WITHOUT_CLASSIFICATION	8.852484809270948E-6	DEFECT
// nothing to add for generic tool.	WITHOUT_CLASSIFICATION	0.9999991251998809	WITHOUT_CLASSIFICATION	8.748001190812312E-7	DEFECT
// clean the addedfiles set	WITHOUT_CLASSIFICATION	0.9999997292819043	WITHOUT_CLASSIFICATION	2.707180956770489E-7	DEFECT
// Create the streams necessary to write the jarfile	WITHOUT_CLASSIFICATION	0.9999999893764778	WITHOUT_CLASSIFICATION	1.0623522228161627E-8	DEFECT
//get and clean up innerclass name	WITHOUT_CLASSIFICATION	0.9999996915484564	WITHOUT_CLASSIFICATION	3.084515435782899E-7	DEFECT
// See if there are any inner classes for this class and add them in if there are	WITHOUT_CLASSIFICATION	0.9999862842630663	WITHOUT_CLASSIFICATION	1.3715736933511259E-5	DEFECT
// Loop through all the class files found and add them to the jar	WITHOUT_CLASSIFICATION	0.9999976459510942	WITHOUT_CLASSIFICATION	2.3540489057647374E-6	DEFECT
//assertions take up space too	WITHOUT_CLASSIFICATION	0.9999991072563799	WITHOUT_CLASSIFICATION	8.927436200208165E-7	DEFECT
// link the file	WITHOUT_CLASSIFICATION	0.9999984999242743	WITHOUT_CLASSIFICATION	1.5000757257998252E-6	DEFECT
// Have to catch this because of the semantics of calling main()	WITHOUT_CLASSIFICATION	0.9999959651245206	WITHOUT_CLASSIFICATION	4.034875479439638E-6	DEFECT
//trim the META_INF\ off of the file name	WITHOUT_CLASSIFICATION	0.9999994636737953	WITHOUT_CLASSIFICATION	5.363262047100868E-7	DEFECT
// end of writeJar	WITHOUT_CLASSIFICATION	0.9999990851260643	WITHOUT_CLASSIFICATION	9.148739356533648E-7	DEFECT
// only generate a new ClassLoader if we have a classpath	WITHOUT_CLASSIFICATION	0.999999010847845	WITHOUT_CLASSIFICATION	9.891521550012432E-7	DEFECT
// register all the known DTDs	WITHOUT_CLASSIFICATION	0.9999989916899452	WITHOUT_CLASSIFICATION	1.008310054810158E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999734784456	WITHOUT_CLASSIFICATION	2.6521554394295955E-8	DEFECT
// The the weblogic cmp deployment descriptor	WITHOUT_CLASSIFICATION	0.9999999109713471	WITHOUT_CLASSIFICATION	8.902865290521193E-8	DEFECT
// try to determine it from publicId	WITHOUT_CLASSIFICATION	0.9999990268336886	WITHOUT_CLASSIFICATION	9.731663114144587E-7	DEFECT
// try to use the compiler specified by build.compiler. // Right now we are just going to allow Jikes	WITHOUT_CLASSIFICATION	0.9999999950225783	WITHOUT_CLASSIFICATION	4.977421607008343E-9	DEFECT
// need to create a generic jar first.	WITHOUT_CLASSIFICATION	0.999999925899864	WITHOUT_CLASSIFICATION	7.410013613267502E-8	DEFECT
// Only go forward if the generic and the weblogic file both exist	WITHOUT_CLASSIFICATION	0.9999999984575768	WITHOUT_CLASSIFICATION	1.542423247024751E-9	DEFECT
//open jar files	WITHOUT_CLASSIFICATION	0.9999996278017593	WITHOUT_CLASSIFICATION	3.721982405950836E-7	DEFECT
//get the list of generic jar entries	WITHOUT_CLASSIFICATION	0.9999999862841918	WITHOUT_CLASSIFICATION	1.3715808174257718E-8	DEFECT
//get the list of weblogic jar entries	WITHOUT_CLASSIFICATION	0.9999999982809012	WITHOUT_CLASSIFICATION	1.7190987049803062E-9	DEFECT
//Cycle Through generic and make sure its in weblogic	WITHOUT_CLASSIFICATION	0.9999980267905818	WITHOUT_CLASSIFICATION	1.9732094182038483E-6	DEFECT
// File name/path match	WITHOUT_CLASSIFICATION	0.9999984626146187	WITHOUT_CLASSIFICATION	1.5373853814276018E-6	DEFECT
// Check files see if same	WITHOUT_CLASSIFICATION	0.9999999861063278	WITHOUT_CLASSIFICATION	1.3893672230000373E-8	DEFECT
//File are different see if its an object or an interface	WITHOUT_CLASSIFICATION	0.9999998975697088	WITHOUT_CLASSIFICATION	1.0243029129073904E-7	DEFECT
//Interface changed   rebuild jar.	WITHOUT_CLASSIFICATION	0.9999999408324104	WITHOUT_CLASSIFICATION	5.9167589672251155E-8	DEFECT
//Object class Changed   update it.	WITHOUT_CLASSIFICATION	0.9999997880308541	WITHOUT_CLASSIFICATION	2.1196914592041756E-7	DEFECT
// is it the manifest. If so ignore it	WITHOUT_CLASSIFICATION	0.9999997859397051	WITHOUT_CLASSIFICATION	2.1406029496597933E-7	DEFECT
//File other then class changed   rebuild	WITHOUT_CLASSIFICATION	0.9999971900723926	WITHOUT_CLASSIFICATION	2.8099276072747807E-6	DEFECT
// a file doesnt exist rebuild	WITHOUT_CLASSIFICATION	0.9999999218750864	WITHOUT_CLASSIFICATION	7.812491358167455E-8	DEFECT
//Copy files from old weblogic jar	WITHOUT_CLASSIFICATION	0.9999995352418858	WITHOUT_CLASSIFICATION	4.6475811427805437E-7	DEFECT
// Use the entry from the generic jar	WITHOUT_CLASSIFICATION	0.9999996338381488	WITHOUT_CLASSIFICATION	3.6616185117916656E-7	DEFECT
//use fle from original weblogic jar	WITHOUT_CLASSIFICATION	0.9999999528038211	WITHOUT_CLASSIFICATION	4.7196178790985656E-8	DEFECT
// need to close files and perhaps rename output	WITHOUT_CLASSIFICATION	0.9999998227950222	WITHOUT_CLASSIFICATION	1.7720497786442619E-7	DEFECT
// empty	WITHOUT_CLASSIFICATION	0.9999977239442466	WITHOUT_CLASSIFICATION	2.276055753465723E-6	DEFECT
// if the implementation classes don;t exist regenerate	WITHOUT_CLASSIFICATION	0.9999973743224283	WITHOUT_CLASSIFICATION	2.6256775717028584E-6	DEFECT
// any problems - just regenerate	WITHOUT_CLASSIFICATION	0.9999980961592753	WITHOUT_CLASSIFICATION	1.9038407248456116E-6	DEFECT
// create a Java task to do the rebuild	WITHOUT_CLASSIFICATION	0.9999998508850109	WITHOUT_CLASSIFICATION	1.4911498921565838E-7	DEFECT
//weblogic.ejbc.main(args);	WITHOUT_CLASSIFICATION	0.9999997534891023	WITHOUT_CLASSIFICATION	2.465108976337366E-7	DEFECT
/* Build and populate an instance of the ejbc utility */	WITHOUT_CLASSIFICATION	0.999997155041548	WITHOUT_CLASSIFICATION	2.8449584520023606E-6	DEFECT
// Have to catch this because of the semantics of calling main()	WITHOUT_CLASSIFICATION	0.9999959651245206	WITHOUT_CLASSIFICATION	4.034875479439638E-6	DEFECT
//classpath	WITHOUT_CLASSIFICATION	0.9999974316102899	WITHOUT_CLASSIFICATION	2.5683897102628123E-6	DEFECT
/* Attributes set by the Ant build file */	WITHOUT_CLASSIFICATION	0.9999997175869281	WITHOUT_CLASSIFICATION	2.824130719401207E-7	DEFECT
// Get the filename of vendor specific descriptor	WITHOUT_CLASSIFICATION	0.9999999905861582	WITHOUT_CLASSIFICATION	9.413841756414538E-9	DEFECT
//trim the META_INF\ off of the file name	WITHOUT_CLASSIFICATION	0.9999994636737953	WITHOUT_CLASSIFICATION	5.363262047100868E-7	DEFECT
// Is the ser file or any of the source files newer then the class files. // firstly find the oldest of the two class files.	WITHOUT_CLASSIFICATION	0.9999957024409062	WITHOUT_CLASSIFICATION	4.297559093802739E-6	DEFECT
// run with no exit for better reporting	WITHOUT_CLASSIFICATION	0.9999973120388221	WITHOUT_CLASSIFICATION	2.6879611779590895E-6	DEFECT
//weblogic.ejbc.main(newArgs);	WITHOUT_CLASSIFICATION	0.9999999098229579	WITHOUT_CLASSIFICATION	9.017704207703789E-8	DEFECT
/*     * Regardless of the name of the iAS-specific EJB descriptor file, it will     * written in the completed JAR file as "ias-ejb-jar.xml".  This is the     * naming convention implemented by iAS.     */	WITHOUT_CLASSIFICATION	0.9999989751467896	WITHOUT_CLASSIFICATION	1.0248532104059255E-6	DEFECT
/* Add CMP descriptors to the list of EJB files */	WITHOUT_CLASSIFICATION	0.999999091946286	WITHOUT_CLASSIFICATION	9.080537140268377E-7	DEFECT
/* Only calculate the descriptor name once */	WITHOUT_CLASSIFICATION	0.9999997554600486	WITHOUT_CLASSIFICATION	2.445399513682114E-7	DEFECT
// Directory path of the EJB descriptor // Filename appearing before name terminator // Filename appearing after the name terminator	WITHOUT_CLASSIFICATION	0.9999669712755069	WITHOUT_CLASSIFICATION	3.3028724493181806E-5	DEFECT
/* Find the end of the standard descriptor's relative path */	WITHOUT_CLASSIFICATION	0.9999953041317531	WITHOUT_CLASSIFICATION	4.695868246850873E-6	DEFECT
/* Check to see if the standard name is used (there's no basename) */	WITHOUT_CLASSIFICATION	0.9999999993919912	WITHOUT_CLASSIFICATION	6.080087839632217E-10	DEFECT
/*             * Check for the odd case where the terminator and/or filename             * extension aren't found.  These will ensure "ias-" appears at the             * end of the name and before the '.' (if present).             */	WITHOUT_CLASSIFICATION	0.9999996870412535	WITHOUT_CLASSIFICATION	3.1295874638481307E-7	DEFECT
//choose the right vendor DD	WITHOUT_CLASSIFICATION	0.9999632337145805	WITHOUT_CLASSIFICATION	3.676628541939477E-5	DEFECT
// ejb jar file to verify	WITHOUT_CLASSIFICATION	0.9999998670216358	WITHOUT_CLASSIFICATION	1.3297836423611645E-7	DEFECT
//debug ?	WITHOUT_CLASSIFICATION	0.9998303678573197	WITHOUT_CLASSIFICATION	1.6963214268033482E-4	DEFECT
//set the classpath	WITHOUT_CLASSIFICATION	0.9999992694931701	WITHOUT_CLASSIFICATION	7.305068298013613E-7	DEFECT
//list file	WITHOUT_CLASSIFICATION	0.9999997667167673	WITHOUT_CLASSIFICATION	2.332832325971838E-7	DEFECT
//no TIE classes	WITHOUT_CLASSIFICATION	0.9999994834242151	WITHOUT_CLASSIFICATION	5.165757848222328E-7	DEFECT
//root dir	WITHOUT_CLASSIFICATION	0.999942531582961	WITHOUT_CLASSIFICATION	5.7468417038953744E-5	DEFECT
//compiling order	WITHOUT_CLASSIFICATION	0.9999986885979164	WITHOUT_CLASSIFICATION	1.3114020836090125E-6	DEFECT
//add the home class	WITHOUT_CLASSIFICATION	0.9999601900601308	WITHOUT_CLASSIFICATION	3.980993986920035E-5	DEFECT
//build the home classes list.	WITHOUT_CLASSIFICATION	0.9999982476875217	WITHOUT_CLASSIFICATION	1.7523124782143672E-6	DEFECT
//remove .class extension	WITHOUT_CLASSIFICATION	0.9999705059118338	WITHOUT_CLASSIFICATION	2.949408816622029E-5	DEFECT
//add the gen files to the collection	WITHOUT_CLASSIFICATION	0.9996647424331849	WITHOUT_CLASSIFICATION	3.352575668150161E-4	DEFECT
//remove the .class	WITHOUT_CLASSIFICATION	0.9999963226369065	WITHOUT_CLASSIFICATION	3.677363093573161E-6	DEFECT
// Get the Extensions document	WITHOUT_CLASSIFICATION	0.9999997463190766	WITHOUT_CLASSIFICATION	2.536809233726974E-7	DEFECT
// We attempt to put in the MAP and Schema files of CMP beans	WITHOUT_CLASSIFICATION	0.9999972230499503	WITHOUT_CLASSIFICATION	2.776950049636521E-6	DEFECT
// Add the Map file	WITHOUT_CLASSIFICATION	0.999999899666648	WITHOUT_CLASSIFICATION	1.0033335201246731E-7	DEFECT
// Theres nothing else to see here...keep moving sonny	WITHOUT_CLASSIFICATION	0.9999550463960211	WITHOUT_CLASSIFICATION	4.4953603978813714E-5	DEFECT
// Set the options	WITHOUT_CLASSIFICATION	0.9999998336436824	WITHOUT_CLASSIFICATION	1.663563176848971E-7	DEFECT
// Set the JvmArgs	WITHOUT_CLASSIFICATION	0.9999994629197136	WITHOUT_CLASSIFICATION	5.370802863453851E-7	DEFECT
// Set the Environment variable	WITHOUT_CLASSIFICATION	0.9999997936114428	WITHOUT_CLASSIFICATION	2.06388557350728E-7	DEFECT
// Check if list of files to check has been specified	WITHOUT_CLASSIFICATION	0.9999999825269635	WITHOUT_CLASSIFICATION	1.74730364851176E-8	DEFECT
// Have to catch this because of the semantics of calling main()	WITHOUT_CLASSIFICATION	0.9999959651245206	WITHOUT_CLASSIFICATION	4.034875479439638E-6	DEFECT
//open jar files	WITHOUT_CLASSIFICATION	0.9999996278017593	WITHOUT_CLASSIFICATION	3.721982405950836E-7	DEFECT
//get the list of generic jar entries	WITHOUT_CLASSIFICATION	0.9999999862841918	WITHOUT_CLASSIFICATION	1.3715808174257718E-8	DEFECT
//File are different see if its an object or an interface	WITHOUT_CLASSIFICATION	0.9999998975697088	WITHOUT_CLASSIFICATION	1.0243029129073904E-7	DEFECT
//Interface changed   rebuild jar.	WITHOUT_CLASSIFICATION	0.9999999408324104	WITHOUT_CLASSIFICATION	5.9167589672251155E-8	DEFECT
//Object class Changed   update it.	WITHOUT_CLASSIFICATION	0.9999997880308541	WITHOUT_CLASSIFICATION	2.1196914592041756E-7	DEFECT
// is it the manifest. If so ignore it	WITHOUT_CLASSIFICATION	0.9999997859397051	WITHOUT_CLASSIFICATION	2.1406029496597933E-7	DEFECT
//File other then class changed   rebuild	WITHOUT_CLASSIFICATION	0.9999971900723926	WITHOUT_CLASSIFICATION	2.8099276072747807E-6	DEFECT
// Update with changed Bean class	WITHOUT_CLASSIFICATION	0.999992087676754	WITHOUT_CLASSIFICATION	7.912323246081586E-6	DEFECT
// Use the entry from the generic jar	WITHOUT_CLASSIFICATION	0.9999996338381488	WITHOUT_CLASSIFICATION	3.6616185117916656E-7	DEFECT
// register all the DTDs, both the ones that are known and // any supplied by the user	WITHOUT_CLASSIFICATION	0.9999999927463142	WITHOUT_CLASSIFICATION	7.2536856526163465E-9	DEFECT
// Set the working directory	WITHOUT_CLASSIFICATION	0.9992536797360918	WITHOUT_CLASSIFICATION	7.463202639082523E-4	DEFECT
// Set the Java class name	WITHOUT_CLASSIFICATION	0.999996332880606	WITHOUT_CLASSIFICATION	3.667119394103191E-6	DEFECT
// create the -generic.jar, if required	WITHOUT_CLASSIFICATION	0.9999994486826029	WITHOUT_CLASSIFICATION	5.513173970292885E-7	DEFECT
// create the "undeployed" output .jar, if required	WITHOUT_CLASSIFICATION	0.9999994167568501	WITHOUT_CLASSIFICATION	5.832431498565691E-7	DEFECT
// Only go forward if the generic and the websphere file both exist	WITHOUT_CLASSIFICATION	0.9999999973910682	WITHOUT_CLASSIFICATION	2.608931900847329E-9	DEFECT
//get the list of websphere jar entries	WITHOUT_CLASSIFICATION	0.999999993206809	WITHOUT_CLASSIFICATION	6.793190996727191E-9	DEFECT
//Cycle Through generic and make sure its in websphere	WITHOUT_CLASSIFICATION	0.9999956939085571	WITHOUT_CLASSIFICATION	4.306091442836161E-6	DEFECT
// File name/path match // Check files see if same	WITHOUT_CLASSIFICATION	0.9999999232685578	WITHOUT_CLASSIFICATION	7.673144216151678E-8	DEFECT
// a file doesn't exist rebuild	WITHOUT_CLASSIFICATION	0.9999991820027561	WITHOUT_CLASSIFICATION	8.179972438960619E-7	DEFECT
//Copy files from old websphere jar	WITHOUT_CLASSIFICATION	0.999998688160146	WITHOUT_CLASSIFICATION	1.3118398539984364E-6	DEFECT
//use fle from original websphere jar	WITHOUT_CLASSIFICATION	0.9999998719220731	WITHOUT_CLASSIFICATION	1.2807792686639158E-7	DEFECT
// Specification Name must match	WITHOUT_CLASSIFICATION	0.9999999523189992	WITHOUT_CLASSIFICATION	4.768100085212678E-8	DEFECT
// Available specification version must be >= required	WITHOUT_CLASSIFICATION	0.9999999359797954	WITHOUT_CLASSIFICATION	6.402020458603082E-8	DEFECT
// Implementation Vendor ID must match	WITHOUT_CLASSIFICATION	0.9999975684253342	WITHOUT_CLASSIFICATION	2.431574665747877E-6	DEFECT
// Implementation Vendor ID must match	WITHOUT_CLASSIFICATION	0.9999975684253342	WITHOUT_CLASSIFICATION	2.431574665747877E-6	DEFECT
// Implementation version must be >= required	WITHOUT_CLASSIFICATION	0.9999988911361422	WITHOUT_CLASSIFICATION	1.1088638578793157E-6	DEFECT
// This available optional package satisfies the requirements	WITHOUT_CLASSIFICATION	0.9999999093559094	WITHOUT_CLASSIFICATION	9.0644090562114E-8	DEFECT
// This available optional package satisfies the requirements	WITHOUT_CLASSIFICATION	0.9999999093559094	WITHOUT_CLASSIFICATION	9.0644090562114E-8	DEFECT
//Reset list of sections	WITHOUT_CLASSIFICATION	0.9999991651708215	WITHOUT_CLASSIFICATION	8.348291783975675E-7	DEFECT
// Extension Name must match	WITHOUT_CLASSIFICATION	0.999999835710963	WITHOUT_CLASSIFICATION	1.6428903706969196E-7	DEFECT
//Add all the dependency data to manifest for dependencies	WITHOUT_CLASSIFICATION	0.999999813154513	WITHOUT_CLASSIFICATION	1.8684548684860964E-7	DEFECT
// Check if list of files to check has been specified	WITHOUT_CLASSIFICATION	0.9999999825269635	WITHOUT_CLASSIFICATION	1.74730364851176E-8	DEFECT
// CheckStyle:MemberNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9999996003406534	WITHOUT_CLASSIFICATION	3.9965934663299273E-7	DEFECT
// CheckStyle:MemberNameCheck ON	WITHOUT_CLASSIFICATION	0.9999998150419329	WITHOUT_CLASSIFICATION	1.849580672018171E-7	DEFECT
// change this to get the objects from the other reference	WITHOUT_CLASSIFICATION	0.999999906695094	WITHOUT_CLASSIFICATION	9.330490607855882E-8	DEFECT
//Add all the dependency data to manifest for "optional" //dependencies	WITHOUT_CLASSIFICATION	0.9999999597049215	WITHOUT_CLASSIFICATION	4.029507842374347E-8	DEFECT
//add in something like //"Extension-List: javahelp java3d"	WITHOUT_CLASSIFICATION	0.9999034245805828	WITHOUT_CLASSIFICATION	9.657541941726324E-5	DEFECT
//all methods static	WITHOUT_CLASSIFICATION	0.9999988014068336	WITHOUT_CLASSIFICATION	1.1985931664562922E-6	DEFECT
/*     * Gets the destination file     */	WITHOUT_CLASSIFICATION	0.9999998917090036	WITHOUT_CLASSIFICATION	1.0829099639994946E-7	DEFECT
/*     * Validates URL     */	WITHOUT_CLASSIFICATION	0.9999994635276115	WITHOUT_CLASSIFICATION	5.364723885424137E-7	DEFECT
//Load default locale bundle files //using default file encoding scheme.	WITHOUT_CLASSIFICATION	0.9999998575301065	WITHOUT_CLASSIFICATION	1.424698935502498E-7	DEFECT
//if all resource files associated with this bundle //have been scanned for and still not able to //find a single resrouce file, throw exception	WITHOUT_CLASSIFICATION	0.9999675458250229	WITHOUT_CLASSIFICATION	3.245417497706484E-5	DEFECT
//So long as the line isn't empty and isn't a comment...	WITHOUT_CLASSIFICATION	0.9987244324065234	WITHOUT_CLASSIFICATION	0.0012755675934765327	DEFECT
//Legal Key-Value separators are :, = and white space.	WITHOUT_CLASSIFICATION	0.9999996717917419	WITHOUT_CLASSIFICATION	3.2820825806071816E-7	DEFECT
//Only if we do have a key is there going to be a value	WITHOUT_CLASSIFICATION	0.9999529382604726	WITHOUT_CLASSIFICATION	4.706173952748569E-5	DEFECT
//Handle line continuations, if any	WITHOUT_CLASSIFICATION	0.9999994611730023	WITHOUT_CLASSIFICATION	5.388269977250918E-7	DEFECT
//Has key already been loaded into resourceMap?	WITHOUT_CLASSIFICATION	0.9999999240542461	WITHOUT_CLASSIFICATION	7.594575391838158E-8	DEFECT
//Make sure parent dirs exist, else, create them.	WITHOUT_CLASSIFICATION	0.9999991605254168	WITHOUT_CLASSIFICATION	8.394745831875152E-7	DEFECT
//Check to see if dest file has to be recreated	WITHOUT_CLASSIFICATION	0.9999999776969976	WITHOUT_CLASSIFICATION	2.2303002463979094E-8	DEFECT
// is there a startToken // and there is still stuff following the startToken	WITHOUT_CLASSIFICATION	0.9999382217258581	WITHOUT_CLASSIFICATION	6.177827414187526E-5	DEFECT
// we found a starttoken, is there an endtoken following? // start at token+tokenlength because start and end // token may be indentical	WITHOUT_CLASSIFICATION	0.9998397052917811	WITHOUT_CLASSIFICATION	1.6029470821882902E-4	DEFECT
// grab the token	WITHOUT_CLASSIFICATION	0.9999979108922806	WITHOUT_CLASSIFICATION	2.0891077193021402E-6	DEFECT
// If there is a white space or = or :, then // it isn't to be treated as a valid key.	WITHOUT_CLASSIFICATION	0.9999874580577546	WITHOUT_CLASSIFICATION	1.254194224539425E-5	DEFECT
// find the replace string	WITHOUT_CLASSIFICATION	0.9999999548341213	WITHOUT_CLASSIFICATION	4.51658786817679E-8	DEFECT
// generate the new line	WITHOUT_CLASSIFICATION	0.9999997912257015	WITHOUT_CLASSIFICATION	2.0877429840579777E-7	DEFECT
// set start position for next search	WITHOUT_CLASSIFICATION	0.9999986405166604	WITHOUT_CLASSIFICATION	1.359483339522441E-6	DEFECT
// find next starttoken	WITHOUT_CLASSIFICATION	0.9999981186981632	WITHOUT_CLASSIFICATION	1.8813018368794802E-6	DEFECT
// deal with specified srcDir	WITHOUT_CLASSIFICATION	0.9999999954208674	WITHOUT_CLASSIFICATION	4.579132606024712E-9	DEFECT
// deal with the filesets	WITHOUT_CLASSIFICATION	0.9999998607958527	WITHOUT_CLASSIFICATION	1.39204147224801E-7	DEFECT
// remove any files that shouldn't be overwritten.	WITHOUT_CLASSIFICATION	0.9996037448397885	WITHOUT_CLASSIFICATION	3.962551602114392E-4	DEFECT
// check that the password has been set	WITHOUT_CLASSIFICATION	0.9999983191709059	WITHOUT_CLASSIFICATION	1.6808290941314304E-6	DEFECT
// check for missing application on deploy & update	WITHOUT_CLASSIFICATION	0.9999999511052545	WITHOUT_CLASSIFICATION	4.88947454458894E-8	DEFECT
// check for missing source on deploy & update	WITHOUT_CLASSIFICATION	0.9999999779661335	WITHOUT_CLASSIFICATION	2.2033866546287865E-8	DEFECT
// check for missing application on delete & undeploy	WITHOUT_CLASSIFICATION	0.9999999640774412	WITHOUT_CLASSIFICATION	3.5922558801561004E-8	DEFECT
// keys to optional attributes	WITHOUT_CLASSIFICATION	0.9999999158777553	WITHOUT_CLASSIFICATION	8.412224482008004E-8	DEFECT
// constructs the "-url <url> -debug <action> <password>" portion // of the commmand line	WITHOUT_CLASSIFICATION	0.9999816216595288	WITHOUT_CLASSIFICATION	1.8378340471294383E-5	DEFECT
/////////////////////////////////////////////////////////////////////////// // // Place vendor specific tool creations here. // ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999986018005154	WITHOUT_CLASSIFICATION	1.398199484639551E-6	DEFECT
/////////////////////////////////////////////////////////////////////////// // // Execute method // ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.999999403601753	WITHOUT_CLASSIFICATION	5.963982470404708E-7	DEFECT
/////////////////////////////////////////////////////////////////////////// // // Set/get methods // ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999984661235907	WITHOUT_CLASSIFICATION	1.53387640934471E-6	DEFECT
// keys to optional attributes	WITHOUT_CLASSIFICATION	0.9999999158777553	WITHOUT_CLASSIFICATION	8.412224482008004E-8	DEFECT
// convert backslashes to slashes, otherwise jjtree will // put this as comments and this seems to confuse javacc	WITHOUT_CLASSIFICATION	0.9999999084538939	WITHOUT_CLASSIFICATION	9.154610619224479E-8	DEFECT
// required attributes	WITHOUT_CLASSIFICATION	0.9999996396560112	WITHOUT_CLASSIFICATION	3.603439887327364E-7	DEFECT
// required attributes	WITHOUT_CLASSIFICATION	0.9999996396560112	WITHOUT_CLASSIFICATION	3.603439887327364E-7	DEFECT
// required attributes	WITHOUT_CLASSIFICATION	0.9999996396560112	WITHOUT_CLASSIFICATION	3.603439887327364E-7	DEFECT
// load command line with optional attributes	WITHOUT_CLASSIFICATION	0.9999999717624957	WITHOUT_CLASSIFICATION	2.8237504330428087E-8	DEFECT
// load command line with optional attributes	WITHOUT_CLASSIFICATION	0.9999999717624957	WITHOUT_CLASSIFICATION	2.8237504330428087E-8	DEFECT
// load command line with optional attributes	WITHOUT_CLASSIFICATION	0.9999999717624957	WITHOUT_CLASSIFICATION	2.8237504330428087E-8	DEFECT
// use the directory containing the target as the output directory	WITHOUT_CLASSIFICATION	0.9999999999161449	WITHOUT_CLASSIFICATION	8.385514968741877E-11	DEFECT
// use the directory containing the target as the output directory	WITHOUT_CLASSIFICATION	0.9999999999161449	WITHOUT_CLASSIFICATION	8.385514968741877E-11	DEFECT
// used by jpackage for JavaCC 3.x	WITHOUT_CLASSIFICATION	0.9999997936263759	WITHOUT_CLASSIFICATION	2.063736239814709E-7	DEFECT
// check the target is a file	WITHOUT_CLASSIFICATION	0.9999999967559585	WITHOUT_CLASSIFICATION	3.244041428520718E-9	DEFECT
// determine if the generated java file is up-to-date	WITHOUT_CLASSIFICATION	0.9999999905634387	WITHOUT_CLASSIFICATION	9.436561309467444E-9	DEFECT
// Extract file's base-name	WITHOUT_CLASSIFICATION	0.9999995065638392	WITHOUT_CLASSIFICATION	4.93436160888329E-7	DEFECT
// Replace the file's extension with '.java'	WITHOUT_CLASSIFICATION	0.9999959578347075	WITHOUT_CLASSIFICATION	4.042165292468612E-6	DEFECT
// Change the directory	WITHOUT_CLASSIFICATION	0.9999999685238891	WITHOUT_CLASSIFICATION	3.1476110896102756E-8	DEFECT
// This default has been good enough until Ant 1.6.3, so stick // with it	WITHOUT_CLASSIFICATION	0.9999941233650723	WITHOUT_CLASSIFICATION	5.8766349277567705E-6	DEFECT
// first search for the "old" javah class in 1.4.2 tools.jar	WITHOUT_CLASSIFICATION	0.99999994845243	WITHOUT_CLASSIFICATION	5.1547569998175056E-8	DEFECT
// assume older than 1.4.2 tools.jar	WITHOUT_CLASSIFICATION	0.9999999063818977	WITHOUT_CLASSIFICATION	9.361810220161343E-8	DEFECT
//private CommandlineJava commandline = new CommandlineJava();	WITHOUT_CLASSIFICATION	0.9999978754982448	WITHOUT_CLASSIFICATION	2.1245017552254296E-6	DEFECT
// required attributes // Deprecated! // Use this going forward	WITHOUT_CLASSIFICATION	0.9999996920714302	WITHOUT_CLASSIFICATION	3.0792856973297263E-7	DEFECT
// optional attributes	WITHOUT_CLASSIFICATION	0.999999992929225	WITHOUT_CLASSIFICATION	7.070775053331698E-9	DEFECT
// execute the test and get the return code	WITHOUT_CLASSIFICATION	0.999999876864764	WITHOUT_CLASSIFICATION	1.2313523602322253E-7	DEFECT
// if there is an error/failure and that it should halt, stop // everything otherwise just log a statement	WITHOUT_CLASSIFICATION	0.9999999788299034	WITHOUT_CLASSIFICATION	2.1170096621729335E-8	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999920118448	WITHOUT_CLASSIFICATION	7.988155193624096E-8	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999920118448	WITHOUT_CLASSIFICATION	7.988155193624096E-8	DEFECT
/* int accessFlags = */	WITHOUT_CLASSIFICATION	0.9999921351147344	WITHOUT_CLASSIFICATION	7.864885265636365E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999734784456	WITHOUT_CLASSIFICATION	2.6521554394295955E-8	DEFECT
// not necessary as JDepend would fail, but why loose // some time?	WITHOUT_CLASSIFICATION	0.9996566774104744	WITHOUT_CLASSIFICATION	3.433225895256556E-4	DEFECT
// This bit turns <exclude> child tags into patters to ignore	WITHOUT_CLASSIFICATION	0.9999998561730329	WITHOUT_CLASSIFICATION	1.438269670287928E-7	DEFECT
// JL: comment extracted from JUnitTask (and slightly modified)	WITHOUT_CLASSIFICATION	0.9999602218758498	WITHOUT_CLASSIFICATION	3.977812415018844E-5	DEFECT
// if not set, auto-create the ClassPath from the project	WITHOUT_CLASSIFICATION	0.9999999268290486	WITHOUT_CLASSIFICATION	7.317095143357461E-8	DEFECT
// having a space between the file and its path causes commandline // to add quotes around the argument thus making JDepend not taking // it into account. Thus we split it in two	WITHOUT_CLASSIFICATION	0.9999996502783738	WITHOUT_CLASSIFICATION	3.49721626118248E-7	DEFECT
// This is the new way - use classespath - code is the // same for now	WITHOUT_CLASSIFICATION	0.999969342376725	WITHOUT_CLASSIFICATION	3.065762327503411E-5	DEFECT
// read in all constant pool entries.	WITHOUT_CLASSIFICATION	0.999999136061421	WITHOUT_CLASSIFICATION	8.639385789274574E-7	DEFECT
// verify this is a valid class file.	WITHOUT_CLASSIFICATION	0.9999806367409579	WITHOUT_CLASSIFICATION	1.936325904208886E-5	DEFECT
/* int version = */	WITHOUT_CLASSIFICATION	0.9999976699308388	WITHOUT_CLASSIFICATION	2.330069161069741E-6	DEFECT
// read the constant pool.	WITHOUT_CLASSIFICATION	0.9999995940508214	WITHOUT_CLASSIFICATION	4.0594917866797006E-7	DEFECT
// read access flags and class index.	WITHOUT_CLASSIFICATION	0.9999441387515132	WITHOUT_CLASSIFICATION	5.5861248486708145E-5	DEFECT
//Be sure everything has been set.	WITHOUT_CLASSIFICATION	0.9999981621611843	WITHOUT_CLASSIFICATION	1.837838815669548E-6	DEFECT
//Do the merge	WITHOUT_CLASSIFICATION	0.9999963986539515	WITHOUT_CLASSIFICATION	3.601346048371103E-6	DEFECT
//Add this file to the addfiles Vector and add it //later at the top level of the output file.	WITHOUT_CLASSIFICATION	0.9999995331566194	WITHOUT_CLASSIFICATION	4.6684338065456726E-7	DEFECT
//do nothing	WITHOUT_CLASSIFICATION	0.9999979065745354	WITHOUT_CLASSIFICATION	2.0934254645997813E-6	DEFECT
// jlink output input1 ... inputN	WITHOUT_CLASSIFICATION	0.9999381735491488	WITHOUT_CLASSIFICATION	6.182645085111293E-5	DEFECT
// To maintain compatibility with the command-line version, // we will only add files to be merged.	WITHOUT_CLASSIFICATION	0.9999999095045281	WITHOUT_CLASSIFICATION	9.04954718836507E-8	DEFECT
/*     * Actually performs the merging of f into the output.     * f should be a zip or jar file.     */	WITHOUT_CLASSIFICATION	0.9999865693692989	WITHOUT_CLASSIFICATION	1.3430630701231196E-5	DEFECT
//Check to see that the file with name "name" exists.	WITHOUT_CLASSIFICATION	0.9999999672121593	WITHOUT_CLASSIFICATION	3.278784072452702E-8	DEFECT
//META-INF not found in the name of the entry. Go ahead and process it.	WITHOUT_CLASSIFICATION	0.9999995760034038	WITHOUT_CLASSIFICATION	4.2399659617442465E-7	DEFECT
//Weblogic jspc does not seem to work unless u explicitly set this... // Does not take the classpath from the env.... // Am i missing something about the Java task??	WITHOUT_CLASSIFICATION	0.7739202284076423	WITHOUT_CLASSIFICATION	0.22607977159235756	DEFECT
//do nothing	WITHOUT_CLASSIFICATION	0.9999979065745354	WITHOUT_CLASSIFICATION	2.0934254645997813E-6	DEFECT
/*     * Necessary in the case where you add a entry that     * is not compressed.     */	WITHOUT_CLASSIFICATION	0.9999996707202641	WITHOUT_CLASSIFICATION	3.292797358850405E-7	DEFECT
//Ignore manifest entries.  They're bound to cause conflicts between //files that are being merged.  User should supply their own //manifest file when doing the merge.	WITHOUT_CLASSIFICATION	0.9999999958558239	WITHOUT_CLASSIFICATION	4.144176061336763E-9	DEFECT
//It was the duplicate entry.	WITHOUT_CLASSIFICATION	0.9999997255958722	WITHOUT_CLASSIFICATION	2.7440412776930096E-7	DEFECT
/*     * Adds contents of a directory to the output.     */	WITHOUT_CLASSIFICATION	0.9999998152899293	WITHOUT_CLASSIFICATION	1.8471007069560644E-7	DEFECT
/*     * Gets the name of an entry in the file.  This is the real name     * which for a class is the name of the package with the class     * name appended.     */	WITHOUT_CLASSIFICATION	0.9999998836529375	WITHOUT_CLASSIFICATION	1.1634706252857053E-7	DEFECT
// see if the file is in fact a .class file, and determine its actual name.	WITHOUT_CLASSIFICATION	0.9999999821926855	WITHOUT_CLASSIFICATION	1.7807314544245565E-8	DEFECT
/*     * Adds a file to the output stream.     */	WITHOUT_CLASSIFICATION	0.9999998828370599	WITHOUT_CLASSIFICATION	1.1716294014293474E-7	DEFECT
//Make sure file exists	WITHOUT_CLASSIFICATION	0.999999338572368	WITHOUT_CLASSIFICATION	6.614276320538222E-7	DEFECT
/*     * A convenience method that several other methods might call.     */	WITHOUT_CLASSIFICATION	0.9999982297345413	WITHOUT_CLASSIFICATION	1.7702654585799377E-6	DEFECT
//This entry already exists. So, go with the first one.	WITHOUT_CLASSIFICATION	0.9999999149321323	WITHOUT_CLASSIFICATION	8.50678677931569E-8	DEFECT
/*     * A method that does the work on a given entry in a mergefile.     * The big deal is to set the right parameters in the ZipEntry     * on the output stream.     */	WITHOUT_CLASSIFICATION	0.9999699828458097	WITHOUT_CLASSIFICATION	3.0017154190239136E-5	DEFECT
//Note, don't need to specify size or crc for compressed files.	WITHOUT_CLASSIFICATION	0.9999996554589229	WITHOUT_CLASSIFICATION	3.4454107712489874E-7	DEFECT
//use the systemclasspath as well, to include the ant jar	WITHOUT_CLASSIFICATION	0.9999998179548402	WITHOUT_CLASSIFICATION	1.8204515992187173E-7	DEFECT
/*     * Necessary in the case where you add a entry that     * is not compressed.     */	WITHOUT_CLASSIFICATION	0.9999996707202641	WITHOUT_CLASSIFICATION	3.292797358850405E-7	DEFECT
//TODO Test on other versions of weblogic //TODO add more attributes to the task, to take care of all jspc options //TODO Test on Unix	WITHOUT_CLASSIFICATION	0.9999830792865518	WITHOUT_CLASSIFICATION	1.6920713448175098E-5	DEFECT
//private String compilerPath; //fully qualified name for the compiler executable	WITHOUT_CLASSIFICATION	0.9999995392406056	WITHOUT_CLASSIFICATION	4.6075939445228735E-7	DEFECT
// get all the files in the sourceDirectory	WITHOUT_CLASSIFICATION	0.9999992183757006	WITHOUT_CLASSIFICATION	7.816242994081498E-7	DEFECT
//Weblogic.jspc calls System.exit() ... have to fork // Therefore, takes loads of time // Can pass directories at a time (*.jsp) but easily runs out of // memory on hefty dirs (even on  a Sun)	WITHOUT_CLASSIFICATION	0.9930198740117965	WITHOUT_CLASSIFICATION	0.006980125988203598	DEFECT
// apply transformation	WITHOUT_CLASSIFICATION	0.9999998366657565	WITHOUT_CLASSIFICATION	1.6333424352420048E-7	DEFECT
//end class	WITHOUT_CLASSIFICATION	0.9999919120995884	WITHOUT_CLASSIFICATION	8.087900411710938E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999920118448	WITHOUT_CLASSIFICATION	7.988155193624096E-8	DEFECT
// CheckStyle:ConstantNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9999996970710566	WITHOUT_CLASSIFICATION	3.029289433627634E-7	DEFECT
// CheckStyle:ConstantNameCheck ON	WITHOUT_CLASSIFICATION	0.9999998120296367	WITHOUT_CLASSIFICATION	1.8797036325918576E-7	DEFECT
// now we need to populate the compiler adapter	WITHOUT_CLASSIFICATION	0.9999997847934561	WITHOUT_CLASSIFICATION	2.152065439566699E-7	DEFECT
// finally, lets execute the compiler!!	WITHOUT_CLASSIFICATION	0.9999957916711524	WITHOUT_CLASSIFICATION	4.208328847592932E-6	DEFECT
// Create an instance of the compiler, redirecting output to // the project log	WITHOUT_CLASSIFICATION	0.9999997327967383	WITHOUT_CLASSIFICATION	2.672032617355107E-7	DEFECT
// compile the source files	WITHOUT_CLASSIFICATION	0.9999999765782247	WITHOUT_CLASSIFICATION	2.342177518569787E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999734784456	WITHOUT_CLASSIFICATION	2.6521554394295955E-8	DEFECT
//demand create vector of filesets	WITHOUT_CLASSIFICATION	0.9999996508504455	WITHOUT_CLASSIFICATION	3.4914955443282986E-7	DEFECT
// make sure that we've got a destdir	WITHOUT_CLASSIFICATION	0.9999987850817404	WITHOUT_CLASSIFICATION	1.2149182595393013E-6	DEFECT
//bind to a compiler	WITHOUT_CLASSIFICATION	0.999999597626844	WITHOUT_CLASSIFICATION	4.0237315599363967E-7	DEFECT
//if we are a webapp, hand off to the compiler, which had better handle it	WITHOUT_CLASSIFICATION	0.9999999549435115	WITHOUT_CLASSIFICATION	4.5056488531934567E-8	DEFECT
// make sure that we've got a srcdir	WITHOUT_CLASSIFICATION	0.9999979614383021	WITHOUT_CLASSIFICATION	2.038561697834705E-6	DEFECT
// if the compiler does its own dependency stuff, we just call it right now	WITHOUT_CLASSIFICATION	0.9999998578523921	WITHOUT_CLASSIFICATION	1.4214760783093364E-7	DEFECT
//the remainder of this method is only for compilers that need their dependency work done	WITHOUT_CLASSIFICATION	0.9995400436087634	WITHOUT_CLASSIFICATION	4.59956391236697E-4	DEFECT
// scan source directories and dest directory to build up both copy // lists and compile lists	WITHOUT_CLASSIFICATION	0.9999999997236693	WITHOUT_CLASSIFICATION	2.763306715257575E-10	DEFECT
//        String srcFileDir=srcFile.getParent();	WITHOUT_CLASSIFICATION	0.9999999448987524	WITHOUT_CLASSIFICATION	5.510124758912631E-8	DEFECT
//end inner class	WITHOUT_CLASSIFICATION	0.9999959578622124	WITHOUT_CLASSIFICATION	4.042137787632762E-6	DEFECT
// since we don't mangle extensions like the servlet does, // we need to check for keywords as class names	WITHOUT_CLASSIFICATION	0.9999999455522965	WITHOUT_CLASSIFICATION	5.444770343551181E-8	DEFECT
// first char is more restrictive than the rest	WITHOUT_CLASSIFICATION	0.9999999807426857	WITHOUT_CLASSIFICATION	1.9257314295968763E-8	DEFECT
// this is the rest	WITHOUT_CLASSIFICATION	0.9999473605633821	WITHOUT_CLASSIFICATION	5.263943661790087E-5	DEFECT
// If the first char is not a start of Java identifier or is _ // prepend a '_'.	WITHOUT_CLASSIFICATION	0.9999999869520269	WITHOUT_CLASSIFICATION	1.3047973123348958E-8	DEFECT
//we are forking here to be sure that if JspC calls //System.exit() it doesn't halt the build	WITHOUT_CLASSIFICATION	0.9995623316804342	WITHOUT_CLASSIFICATION	4.376683195658229E-4	DEFECT
//tomcat4.0 gets the old mangler	WITHOUT_CLASSIFICATION	0.9999977689107475	WITHOUT_CLASSIFICATION	2.2310892523939386E-6	DEFECT
//tomcat4.1 gets the new one	WITHOUT_CLASSIFICATION	0.9999996045262821	WITHOUT_CLASSIFICATION	3.9547371790784866E-7	DEFECT
// for all other possibilities	WITHOUT_CLASSIFICATION	0.9999999954923557	WITHOUT_CLASSIFICATION	4.507644314788758E-9	DEFECT
// append the err and output streams to the log	WITHOUT_CLASSIFICATION	0.999999001969401	WITHOUT_CLASSIFICATION	9.980305990945235E-7	DEFECT
// acrobatic cast.	WITHOUT_CLASSIFICATION	0.999999842889168	WITHOUT_CLASSIFICATION	1.571108319046483E-7	DEFECT
// set the destination directory relative from the project if needed.	WITHOUT_CLASSIFICATION	0.9999999813184088	WITHOUT_CLASSIFICATION	1.8681591183530887E-8	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999920118448	WITHOUT_CLASSIFICATION	7.988155193624096E-8	DEFECT
// sanity check	WITHOUT_CLASSIFICATION	0.9999998212085349	WITHOUT_CLASSIFICATION	1.7879146505518475E-7	DEFECT
// plain impossible	WITHOUT_CLASSIFICATION	0.9999998789954668	WITHOUT_CLASSIFICATION	1.2100453317130653E-7	DEFECT
// Quick return - no output do nothing.	WITHOUT_CLASSIFICATION	0.9999999312526728	WITHOUT_CLASSIFICATION	6.874732719767169E-8	DEFECT
// append the err and output streams to the log	WITHOUT_CLASSIFICATION	0.999999001969401	WITHOUT_CLASSIFICATION	9.980305990945235E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999734784456	WITHOUT_CLASSIFICATION	2.6521554394295955E-8	DEFECT
// If style dir is not specified we have to retrieve // the stylesheet from the classloader	WITHOUT_CLASSIFICATION	0.9999989742096513	WITHOUT_CLASSIFICATION	1.025790348726891E-6	DEFECT
// If we are here, then the style dir is here and we // should read the stylesheet from the filesystem	WITHOUT_CLASSIFICATION	0.9999912084062311	WITHOUT_CLASSIFICATION	8.79159376883846E-6	DEFECT
// xalan 2	WITHOUT_CLASSIFICATION	0.9999896312527187	WITHOUT_CLASSIFICATION	1.0368747281384772E-5	DEFECT
// xalan xsltc	WITHOUT_CLASSIFICATION	0.9999980612056001	WITHOUT_CLASSIFICATION	1.9387943999464662E-6	DEFECT
// jdk 1.5 xsltc	WITHOUT_CLASSIFICATION	0.9999953165432869	WITHOUT_CLASSIFICATION	4.68345671308021E-6	DEFECT
// must be plain, ensured by TypeAttribute	WITHOUT_CLASSIFICATION	0.9999999964432713	WITHOUT_CLASSIFICATION	3.5567287273690105E-9	DEFECT
// pre JUnit 3.7	WITHOUT_CLASSIFICATION	0.9999993974048796	WITHOUT_CLASSIFICATION	6.025951202756011E-7	DEFECT
// can be null if an error occurred in setUp	WITHOUT_CLASSIFICATION	0.999999722649576	WITHOUT_CLASSIFICATION	2.773504238797669E-7	DEFECT
// PlainJUnitResultFormatter	WITHOUT_CLASSIFICATION	0.999999947783158	WITHOUT_CLASSIFICATION	5.2216842045908265E-8	DEFECT
// Snapshot of the system properties	WITHOUT_CLASSIFICATION	0.9999985309881148	WITHOUT_CLASSIFICATION	1.4690118852450687E-6	DEFECT
//add the timestamp	WITHOUT_CLASSIFICATION	0.9999993544170506	WITHOUT_CLASSIFICATION	6.45582949492842E-7	DEFECT
//and the hostname.	WITHOUT_CLASSIFICATION	0.9999980536972024	WITHOUT_CLASSIFICATION	1.9463027976389265E-6	DEFECT
// Output properties	WITHOUT_CLASSIFICATION	0.9999998640837373	WITHOUT_CLASSIFICATION	1.3591626271443387E-7	DEFECT
// a TestSuite can contain Tests from multiple classes, // even tests with the same name - disambiguate them.	WITHOUT_CLASSIFICATION	0.9999999269566823	WITHOUT_CLASSIFICATION	7.304331772539732E-8	DEFECT
// XMLJUnitResultFormatter	WITHOUT_CLASSIFICATION	0.9999921298635722	WITHOUT_CLASSIFICATION	7.870136427761192E-6	DEFECT
// Do we send output to the formatters ?	WITHOUT_CLASSIFICATION	0.9999999722498718	WITHOUT_CLASSIFICATION	2.7750128229789187E-8	DEFECT
//   Attributes for basetest	WITHOUT_CLASSIFICATION	0.9999997101190808	WITHOUT_CLASSIFICATION	2.8988091920100346E-7	DEFECT
// forceLoadClass is not convenient here since it would not // properly deal with inner classes of these classes.	WITHOUT_CLASSIFICATION	0.9999822700615284	WITHOUT_CLASSIFICATION	1.7729938471609874E-5	DEFECT
/* forkMode.getValue().equals(ForkMode.PER_BATCH) */	WITHOUT_CLASSIFICATION	0.9999894513788735	WITHOUT_CLASSIFICATION	1.0548621126473967E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999920118448	WITHOUT_CLASSIFICATION	7.988155193624096E-8	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999997703627461	WITHOUT_CLASSIFICATION	2.296372539220789E-7	DEFECT
// execute the test and get the return code	WITHOUT_CLASSIFICATION	0.999999876864764	WITHOUT_CLASSIFICATION	1.2313523602322253E-7	DEFECT
// execute the test and get the return code	WITHOUT_CLASSIFICATION	0.999999876864764	WITHOUT_CLASSIFICATION	1.2313523602322253E-7	DEFECT
// null watchdog means no timeout, you'd better not check with null	WITHOUT_CLASSIFICATION	0.9999978164751075	WITHOUT_CLASSIFICATION	2.18352489252514E-6	DEFECT
// if there is an error/failure and that it should halt, stop // everything otherwise just log a statement	WITHOUT_CLASSIFICATION	0.9999999788299034	WITHOUT_CLASSIFICATION	2.1170096621729335E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999734784456	WITHOUT_CLASSIFICATION	2.6521554394295955E-8	DEFECT
// set the default values if not specified //@todo should be moved to the test class instead.	WITHOUT_CLASSIFICATION	0.9999999795524552	WITHOUT_CLASSIFICATION	2.0447544744284353E-8	DEFECT
// Create a temporary file to pass the test cases to run to // the runner (one test case per line)	WITHOUT_CLASSIFICATION	0.9999975463984251	WITHOUT_CLASSIFICATION	2.4536015748918542E-6	DEFECT
// #31885	WITHOUT_CLASSIFICATION	0.9999918158888339	WITHOUT_CLASSIFICATION	8.184111166071863E-6	DEFECT
// ignored.	WITHOUT_CLASSIFICATION	0.9999999025067926	WITHOUT_CLASSIFICATION	9.749320733648377E-8	DEFECT
// in VM is not very nice since it could probably hang the // whole build. IMHO this method should be avoided and it would be best // to remove it in future versions. TBD. (SBa)	WITHOUT_CLASSIFICATION	0.8194684799541135	WITHOUT_CLASSIFICATION	0.18053152004588646	DEFECT
// make sure the test will be accepted as a TestCase	WITHOUT_CLASSIFICATION	0.9999999698368657	WITHOUT_CLASSIFICATION	3.016313437864442E-8	DEFECT
// make sure the test annotation are accepted	WITHOUT_CLASSIFICATION	0.9999997811103559	WITHOUT_CLASSIFICATION	2.1888964405002108E-7	DEFECT
// will cause trouble in JDK 1.1 if omitted	WITHOUT_CLASSIFICATION	0.9999924197234169	WITHOUT_CLASSIFICATION	7.5802765831169595E-6	DEFECT
// local copy since LogOutputStream.task is private	WITHOUT_CLASSIFICATION	0.9999741759932785	WITHOUT_CLASSIFICATION	2.5824006721524662E-5	DEFECT
// this one is here because the changes to support ResourceCollections // have broken Magic's JUnitTestTask. // // The task adds a FileSet to a BatchTest instance using the // Java API and without telling the FileSet about its project // instance.  The original code would pass in project on the // call to getDirectoryScanner - which is now hidden deep into // Resources.iterator() and not reachable.	WITHOUT_CLASSIFICATION	0.9999909870573488	WITHOUT_CLASSIFICATION	9.01294265118354E-6	DEFECT
// dummy output for the framed report // it's all done by extension...	WITHOUT_CLASSIFICATION	0.9999976213243512	WITHOUT_CLASSIFICATION	2.3786756487481537E-6	DEFECT
// conforming to NodeList interface	WITHOUT_CLASSIFICATION	0.9999998721637328	WITHOUT_CLASSIFICATION	1.2783626723039886E-7	DEFECT
// this should never happen	WITHOUT_CLASSIFICATION	0.9999890160983671	WITHOUT_CLASSIFICATION	1.0983901632902879E-5	DEFECT
// write the document	WITHOUT_CLASSIFICATION	0.9999999303221392	WITHOUT_CLASSIFICATION	6.96778607597032E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999734784456	WITHOUT_CLASSIFICATION	2.6521554394295955E-8	DEFECT
//----- from now, the methods are all related to DOM tree manipulation	WITHOUT_CLASSIFICATION	0.9999831864645928	WITHOUT_CLASSIFICATION	1.6813535407088425E-5	DEFECT
// writers do not throw exceptions, so check for them.	WITHOUT_CLASSIFICATION	0.9999999604175834	WITHOUT_CLASSIFICATION	3.958241651511238E-8	DEFECT
// create the dom tree	WITHOUT_CLASSIFICATION	0.9999999671245419	WITHOUT_CLASSIFICATION	3.287545810412289E-8	DEFECT
// get all files and add them to the document	WITHOUT_CLASSIFICATION	0.9999996394974677	WITHOUT_CLASSIFICATION	3.6050253236665945E-7	DEFECT
// make sure that this is REALLY a testsuite.	WITHOUT_CLASSIFICATION	0.999998430044574	WITHOUT_CLASSIFICATION	1.5699554260773768E-6	DEFECT
//wrong root element name // issue a warning.	WITHOUT_CLASSIFICATION	0.9997428473162258	WITHOUT_CLASSIFICATION	2.571526837742587E-4	DEFECT
// a testcase might have failed and write a zero-length document, // It has already failed, but hey.... mm. just put a warning	WITHOUT_CLASSIFICATION	0.9999987369096616	WITHOUT_CLASSIFICATION	1.263090338425655E-6	DEFECT
// a missing . might imply no package at all. Don't get fooled.	WITHOUT_CLASSIFICATION	0.9998478684482509	WITHOUT_CLASSIFICATION	1.5213155174915487E-4	DEFECT
// modify the name attribute and set the package	WITHOUT_CLASSIFICATION	0.9999998694831859	WITHOUT_CLASSIFICATION	1.3051681407064429E-7	DEFECT
// don't filter AssertionFailure	WITHOUT_CLASSIFICATION	0.9999923538066021	WITHOUT_CLASSIFICATION	7.64619339787974E-6	DEFECT
// JUnit 4 support:	WITHOUT_CLASSIFICATION	0.999997135285691	WITHOUT_CLASSIFICATION	2.864714309030556E-6	DEFECT
// check for a static suite method first, even when using // JUnit 4	WITHOUT_CLASSIFICATION	0.999999998512222	WITHOUT_CLASSIFICATION	1.487777991927786E-9	DEFECT
// check if there is a suite method	WITHOUT_CLASSIFICATION	0.9999994093749336	WITHOUT_CLASSIFICATION	5.906250664699232E-7	DEFECT
// no appropriate suite method found. We don't report any // error here since it might be perfectly normal.	WITHOUT_CLASSIFICATION	0.9989289411019397	WITHOUT_CLASSIFICATION	0.001071058898060274	DEFECT
// Check for JDK 5 first. Will *not* help on JDK 1.4 // if only junit-4.0.jar in CP because in that case // linkage of whole task will already have failed! But // will help if CP has junit-3.8.2.jar:junit-4.0.jar.	WITHOUT_CLASSIFICATION	0.9999999249723239	WITHOUT_CLASSIFICATION	7.502767596059145E-8	DEFECT
// In that case first C.fN will fail with CNFE and we // will avoid UnsupportedClassVersionError.	WITHOUT_CLASSIFICATION	0.9999955133393729	WITHOUT_CLASSIFICATION	4.486660627113373E-6	DEFECT
// OK, fall back to JUnit 3.	WITHOUT_CLASSIFICATION	0.9999938838368101	WITHOUT_CLASSIFICATION	6.116163189834415E-6	DEFECT
// Let's use it!	WITHOUT_CLASSIFICATION	0.9999990167956816	WITHOUT_CLASSIFICATION	9.832043183823479E-7	DEFECT
// Use JUnit 3.	WITHOUT_CLASSIFICATION	0.9999995108797926	WITHOUT_CLASSIFICATION	4.891202074282352E-7	DEFECT
// try to extract a test suite automatically this // will generate warnings if the class is no // suitable Test	WITHOUT_CLASSIFICATION	0.9999989378961648	WITHOUT_CLASSIFICATION	1.0621038352747159E-6	DEFECT
// had an exception constructing suite	WITHOUT_CLASSIFICATION	0.9999999848849672	WITHOUT_CLASSIFICATION	1.5115032800129977E-8	DEFECT
// Add/overlay system properties on the properties from the Ant project	WITHOUT_CLASSIFICATION	0.9999861947226532	WITHOUT_CLASSIFICATION	1.3805277346755536E-5	DEFECT
// return the stack unfiltered	WITHOUT_CLASSIFICATION	0.9999996767826933	WITHOUT_CLASSIFICATION	3.2321730663562536E-7	DEFECT
// Not strictly necessary but probably desirable. // JUnit 4-specific test GUIs will show just "failures". // But Ant's output shows "failures" vs. "errors". // We would prefer to show "failure" for things that logically are.	WITHOUT_CLASSIFICATION	0.9999999713258281	WITHOUT_CLASSIFICATION	2.867417194048922E-8	DEFECT
// To compile on pre-JDK 4 (even though this should always succeed):	WITHOUT_CLASSIFICATION	0.9999742664703057	WITHOUT_CLASSIFICATION	2.5733529694146204E-5	DEFECT
// pre-3.4	WITHOUT_CLASSIFICATION	0.9999993543486426	WITHOUT_CLASSIFICATION	6.456513573269817E-7	DEFECT
// JUnitTestRunner	WITHOUT_CLASSIFICATION	0.9999999651899304	WITHOUT_CLASSIFICATION	3.481006965272784E-8	DEFECT
//rethrow	WITHOUT_CLASSIFICATION	0.9999620923780564	WITHOUT_CLASSIFICATION	3.790762194355158E-5	DEFECT
//wrap	WITHOUT_CLASSIFICATION	0.999991092502326	WITHOUT_CLASSIFICATION	8.907497673990187E-6	DEFECT
// sorted by newest Kaffe version first	WITHOUT_CLASSIFICATION	0.9999995184187038	WITHOUT_CLASSIFICATION	4.815812961300281E-7	DEFECT
// pre Kaffe 1.1.5	WITHOUT_CLASSIFICATION	0.9999981828435921	WITHOUT_CLASSIFICATION	1.8171564078421376E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999920118448	WITHOUT_CLASSIFICATION	7.988155193624096E-8	DEFECT
// we are going to scan everything anyway	WITHOUT_CLASSIFICATION	0.9999968777491979	WITHOUT_CLASSIFICATION	3.122250802134644E-6	DEFECT
// only scan directories that can include matched files or // directories	WITHOUT_CLASSIFICATION	0.9999988895897663	WITHOUT_CLASSIFICATION	1.1104102336809806E-6	DEFECT
// avoid double scanning of directories, can only happen in fast mode	WITHOUT_CLASSIFICATION	0.9999907944444414	WITHOUT_CLASSIFICATION	9.205555558549511E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999997703627461	WITHOUT_CLASSIFICATION	2.296372539220789E-7	DEFECT
// This default has been good enough until Ant 1.6.3, so stick // with it	WITHOUT_CLASSIFICATION	0.9999941233650723	WITHOUT_CLASSIFICATION	5.8766349277567705E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999734784456	WITHOUT_CLASSIFICATION	2.6521554394295955E-8	DEFECT
// Rats. // should not happen	WITHOUT_CLASSIFICATION	0.9994755510532948	WITHOUT_CLASSIFICATION	5.24448946705135E-4	DEFECT
// otherwise ExecuteJava has thrown an exception	WITHOUT_CLASSIFICATION	0.999999290724795	WITHOUT_CLASSIFICATION	7.092752050465061E-7	DEFECT
// No includes supplied, so set it to 'matches all'	WITHOUT_CLASSIFICATION	0.9999999995830199	WITHOUT_CLASSIFICATION	4.169800293970185E-10	DEFECT
// always start from the current ftp working dir	WITHOUT_CLASSIFICATION	0.9999022522369881	WITHOUT_CLASSIFICATION	9.77477630118264E-5	DEFECT
// put in the newroots vector the include patterns without // wildcard tokens	WITHOUT_CLASSIFICATION	0.9999910560631804	WITHOUT_CLASSIFICATION	8.943936819579008E-6	DEFECT
// construct it	WITHOUT_CLASSIFICATION	0.9999997160045896	WITHOUT_CLASSIFICATION	2.839954103117499E-7	DEFECT
// cool case, //we do not need to scan all the subdirs in the relative path	WITHOUT_CLASSIFICATION	0.9999997752419488	WITHOUT_CLASSIFICATION	2.247580511798702E-7	DEFECT
//this should not happen, except if parent has been deleted by another process	WITHOUT_CLASSIFICATION	0.9991045826567548	WITHOUT_CLASSIFICATION	8.954173432452121E-4	DEFECT
// we are already in the right path, so the second parameter // is false	WITHOUT_CLASSIFICATION	0.9999679316626326	WITHOUT_CLASSIFICATION	3.206833736736578E-5	DEFECT
// hit a hidden file assume not a symlink	WITHOUT_CLASSIFICATION	0.9999898613509878	WITHOUT_CLASSIFICATION	1.0138649012212166E-5	DEFECT
// getRelativePath also finds about symlinks	WITHOUT_CLASSIFICATION	0.999996565679218	WITHOUT_CLASSIFICATION	3.4343207819618053E-6	DEFECT
// warn that selectors are not supported	WITHOUT_CLASSIFICATION	0.9999973882157117	WITHOUT_CLASSIFICATION	2.611784288224306E-6	DEFECT
// If we are doing a listing, we need the output stream created now.	WITHOUT_CLASSIFICATION	0.9999999982696881	WITHOUT_CLASSIFICATION	1.7303119155078622E-9	DEFECT
// get files from filesets	WITHOUT_CLASSIFICATION	0.9999995850882277	WITHOUT_CLASSIFICATION	4.149117722884842E-7	DEFECT
// find first non cached dir	WITHOUT_CLASSIFICATION	0.999999972303588	WITHOUT_CLASSIFICATION	2.769641206900861E-8	DEFECT
// check if dir exists by trying to change into it.	WITHOUT_CLASSIFICATION	0.9999999671750649	WITHOUT_CLASSIFICATION	3.282493512080783E-8	DEFECT
// could not change to it - try to create it	WITHOUT_CLASSIFICATION	0.9999978597216116	WITHOUT_CLASSIFICATION	2.1402783883679634E-6	DEFECT
// create a local temporary file	WITHOUT_CLASSIFICATION	0.9999997544836001	WITHOUT_CLASSIFICATION	2.4551639991982744E-7	DEFECT
// see if we should issue a chmod command	WITHOUT_CLASSIFICATION	0.9998540719352315	WITHOUT_CLASSIFICATION	1.4592806476864558E-4	DEFECT
// ignore it	WITHOUT_CLASSIFICATION	0.9999998225132426	WITHOUT_CLASSIFICATION	1.7748675740256538E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999734784456	WITHOUT_CLASSIFICATION	2.6521554394295955E-8	DEFECT
// ignore it	WITHOUT_CLASSIFICATION	0.9999998225132426	WITHOUT_CLASSIFICATION	1.7748675740256538E-7	DEFECT
// delegate the deletion of the local temp file to the delete task // because of race conditions occuring on Windows	WITHOUT_CLASSIFICATION	0.9999997238271215	WITHOUT_CLASSIFICATION	2.7617287845499235E-7	DEFECT
// For Microsoft's Ftp-Service an Array with length 0 is // returned if configured to return listings in "MS-DOS"-Format	WITHOUT_CLASSIFICATION	0.9999999830905411	WITHOUT_CLASSIFICATION	1.690945896206856E-8	DEFECT
// If we are sending files, then assume out of date. // If we are getting files, then throw an error	WITHOUT_CLASSIFICATION	0.9999992045014959	WITHOUT_CLASSIFICATION	7.954985041547545E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999734784456	WITHOUT_CLASSIFICATION	2.6521554394295955E-8	DEFECT
// codes 521, 550 and 553 can be produced by FTP Servers //  to indicate that an attempt to create a directory has //  failed because the directory already exists.	WITHOUT_CLASSIFICATION	0.9999956247757443	WITHOUT_CLASSIFICATION	4.37522425560257E-6	DEFECT
// If an initial command was configured then send it. // Some FTP servers offer different modes of operation, // E.G. switching between a UNIX file system mode and // a legacy file system.	WITHOUT_CLASSIFICATION	0.9999999617385974	WITHOUT_CLASSIFICATION	3.8261402563263917E-8	DEFECT
// For a unix ftp server you can set the default mask for all files // created.	WITHOUT_CLASSIFICATION	0.9999997708556451	WITHOUT_CLASSIFICATION	2.2914435485240074E-7	DEFECT
// If the action is MK_DIR, then the specified remote // directory is the directory to create.	WITHOUT_CLASSIFICATION	0.9999999867228845	WITHOUT_CLASSIFICATION	1.327711544919977E-8	DEFECT
// in this case we want to find how much time span there is between local // and remote	WITHOUT_CLASSIFICATION	0.9999975968535523	WITHOUT_CLASSIFICATION	2.403146447816607E-6	DEFECT
//socks	WITHOUT_CLASSIFICATION	0.9999551814095531	WITHOUT_CLASSIFICATION	4.481859044696772E-5	DEFECT
//this may be a java1.4 thingy only	WITHOUT_CLASSIFICATION	0.9999969494793183	WITHOUT_CLASSIFICATION	3.050520681634546E-6	DEFECT
// simple one-shot execution	WITHOUT_CLASSIFICATION	0.9999989343968555	WITHOUT_CLASSIFICATION	1.0656031444184417E-6	DEFECT
// need nested read/write elements	WITHOUT_CLASSIFICATION	0.9999999644796005	WITHOUT_CLASSIFICATION	3.55203996287115E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999734784456	WITHOUT_CLASSIFICATION	2.6521554394295955E-8	DEFECT
//here we'd parse the output from change -o into submit -i //in order to support default change.	WITHOUT_CLASSIFICATION	0.99999997325152	WITHOUT_CLASSIFICATION	2.6748480080412722E-8	DEFECT
// CheckStyle:VisibilityModifier OFF - bc //ToDo: If dealing with default cl need to parse out <enter description here>	WITHOUT_CLASSIFICATION	0.9999984727728638	WITHOUT_CLASSIFICATION	1.5272271361479946E-6	DEFECT
/* -n */	WITHOUT_CLASSIFICATION	0.9999659485440631	WITHOUT_CLASSIFICATION	3.4051455936924726E-5	DEFECT
//Remove any non-numerical chars - should leave the change number	WITHOUT_CLASSIFICATION	0.9996729125169039	WITHOUT_CLASSIFICATION	3.2708748309600547E-4	DEFECT
// this type of output might happen // Change 18 renamed change 20 and submitted.	WITHOUT_CLASSIFICATION	0.999809006099182	WITHOUT_CLASSIFICATION	1.9099390081799865E-4	DEFECT
//Match "//" for begining of depot filespec	WITHOUT_CLASSIFICATION	0.9999999857305069	WITHOUT_CLASSIFICATION	1.426949302091599E-8	DEFECT
// we need to escape the description in case there are /	WITHOUT_CLASSIFICATION	0.9999996942962877	WITHOUT_CLASSIFICATION	3.057037123191559E-7	DEFECT
// NOTE kirk@radik.com 04-April-2001 -- If you put in the -s, you // have to start running through regular expressions here. Much easier // to just not include the scripting information than to try to add it // and strip it later.	WITHOUT_CLASSIFICATION	0.9999965397244552	WITHOUT_CLASSIFICATION	3.46027554491293E-6	DEFECT
//EoF	WITHOUT_CLASSIFICATION	0.9999264731950653	WITHOUT_CLASSIFICATION	7.352680493470526E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc //Input //Output //Error // CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999178990768	WITHOUT_CLASSIFICATION	8.210092320823451E-8	DEFECT
/* Here we can either revert any unchanged files in a changelist         * or         * any files regardless of whether they have been changed or not         *         *         * The whole process also accepts a p4 filespec         */	WITHOUT_CLASSIFICATION	0.9999999838084678	WITHOUT_CLASSIFICATION	1.61915322180765E-8	DEFECT
/* -a */	WITHOUT_CLASSIFICATION	0.9999881356549091	WITHOUT_CLASSIFICATION	1.1864345091044342E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999734784456	WITHOUT_CLASSIFICATION	2.6521554394295955E-8	DEFECT
/* -n */	WITHOUT_CLASSIFICATION	0.9999659485440631	WITHOUT_CLASSIFICATION	3.4051455936924726E-5	DEFECT
/* -n */	WITHOUT_CLASSIFICATION	0.9999659485440631	WITHOUT_CLASSIFICATION	3.4051455936924726E-5	DEFECT
/* -f */	WITHOUT_CLASSIFICATION	0.9999837015965239	WITHOUT_CLASSIFICATION	1.6298403476091603E-5	DEFECT
/* -t */	WITHOUT_CLASSIFICATION	0.9999702420386254	WITHOUT_CLASSIFICATION	2.9757961374547184E-5	DEFECT
/* -v */	WITHOUT_CLASSIFICATION	0.9999858458114721	WITHOUT_CLASSIFICATION	1.4154188527908954E-5	DEFECT
//We have to create a unlocked label first	WITHOUT_CLASSIFICATION	0.9999999328345298	WITHOUT_CLASSIFICATION	6.71654701247229E-8	DEFECT
//Now lock if required	WITHOUT_CLASSIFICATION	0.9999359757867144	WITHOUT_CLASSIFICATION	6.402421328552202E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999734784456	WITHOUT_CLASSIFICATION	2.6521554394295955E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999734784456	WITHOUT_CLASSIFICATION	2.6521554394295955E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999734784456	WITHOUT_CLASSIFICATION	2.6521554394295955E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999734784456	WITHOUT_CLASSIFICATION	2.6521554394295955E-8	DEFECT
// CheckStyle:VisibilityModifier OFF - bc // CheckStyle:MemberNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9999999789264881	WITHOUT_CLASSIFICATION	2.1073511912994355E-8	DEFECT
// CheckStyle:MemberNameCheck ON // CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999898290596	WITHOUT_CLASSIFICATION	1.0170940364798148E-8	DEFECT
// Massage PCLI lvf output transforming '\' to '/' so get command works appropriately	WITHOUT_CLASSIFICATION	0.9999942821234241	WITHOUT_CLASSIFICATION	5.717876575843634E-6	DEFECT
//Read back the label spec from perforce, //Replace Options //Submit back to Perforce	WITHOUT_CLASSIFICATION	0.9999997006998502	WITHOUT_CLASSIFICATION	2.9930014978773143E-7	DEFECT
//when running labelsync, if view elements are in sync, //Perforce produces a line of output //looking like this one : //error: //depot/file2 - label in sync.	WITHOUT_CLASSIFICATION	0.9999931613992521	WITHOUT_CLASSIFICATION	6.83860074795323E-6	DEFECT
//sync says "error:" when a file is up-to-date	WITHOUT_CLASSIFICATION	0.9999979792688928	WITHOUT_CLASSIFICATION	2.0207311072077724E-6	DEFECT
//sometimes there's "info1:	WITHOUT_CLASSIFICATION	0.9999997265078685	WITHOUT_CLASSIFICATION	2.734921315148136E-7	DEFECT
//P4 runtime directives	WITHOUT_CLASSIFICATION	0.9999992294520994	WITHOUT_CLASSIFICATION	7.70547900651156E-7	DEFECT
// Perforce task directives	WITHOUT_CLASSIFICATION	0.9999998902600518	WITHOUT_CLASSIFICATION	1.0973994825595516E-7	DEFECT
//P4 g-opts and cmd opts (rtfm)	WITHOUT_CLASSIFICATION	0.9999998929591011	WITHOUT_CLASSIFICATION	1.070408989136821E-7	DEFECT
//Setters called by Ant	WITHOUT_CLASSIFICATION	0.9999966506877499	WITHOUT_CLASSIFICATION	3.349312250204706E-6	DEFECT
//Get default P4 settings from environment - Mark would have done something cool with //introspection here.....:-)	WITHOUT_CLASSIFICATION	0.9769064913304994	WITHOUT_CLASSIFICATION	0.02309350866950054	DEFECT
// reset error flags before executing the command	WITHOUT_CLASSIFICATION	0.9994835299235723	WITHOUT_CLASSIFICATION	5.164700764277591E-4	DEFECT
//Check API for these - it's how CVS does it...	WITHOUT_CLASSIFICATION	0.9987891685413597	WITHOUT_CLASSIFICATION	0.0012108314586403077	DEFECT
/*     * Constant for the PCLI listversionedfiles recursive i a format "get" understands     */	WITHOUT_CLASSIFICATION	0.9999999965323629	WITHOUT_CLASSIFICATION	3.4676369922182902E-9	DEFECT
// private static final String PCLI_LVF_ARGS = "lvf -z -aw";	WITHOUT_CLASSIFICATION	0.9999999635748996	WITHOUT_CLASSIFICATION	3.642510042644629E-8	DEFECT
// Check workspace exists // Launch PCLI listversionedfiles -z -aw // Capture output // build the command line from what we got the format is	WITHOUT_CLASSIFICATION	0.9999994965163335	WITHOUT_CLASSIFICATION	5.034836665849109E-7	DEFECT
// default pvcs project is "/"	WITHOUT_CLASSIFICATION	0.9999984639621575	WITHOUT_CLASSIFICATION	1.5360378424309166E-6	DEFECT
// Create folders in workspace	WITHOUT_CLASSIFICATION	0.9999937510594118	WITHOUT_CLASSIFICATION	6.248940588292908E-6	DEFECT
// Launch get on output captured from PCLI lvf	WITHOUT_CLASSIFICATION	0.9999999050024035	WITHOUT_CLASSIFICATION	9.499759640316265E-8	DEFECT
// Extract the name of the directory from the filename	WITHOUT_CLASSIFICATION	0.9999999136626246	WITHOUT_CLASSIFICATION	8.633737533535199E-8	DEFECT
// Change these through their GET and SET methods.	WITHOUT_CLASSIFICATION	0.9999999960839598	WITHOUT_CLASSIFICATION	3.916040218750686E-9	DEFECT
// These fields deal with includes and excludes	WITHOUT_CLASSIFICATION	0.9999964980355383	WITHOUT_CLASSIFICATION	3.5019644617575344E-6	DEFECT
// Check all of the properties that are required.	WITHOUT_CLASSIFICATION	0.9999990965054545	WITHOUT_CLASSIFICATION	9.034945454848814E-7	DEFECT
// Check to see if the target directory exists.	WITHOUT_CLASSIFICATION	0.9999999993948415	WITHOUT_CLASSIFICATION	6.051584522666745E-10	DEFECT
// Search the items on this server.	WITHOUT_CLASSIFICATION	0.9999976063984644	WITHOUT_CLASSIFICATION	2.393601535779233E-6	DEFECT
// Disconnect from the server.	WITHOUT_CLASSIFICATION	0.9999997485847348	WITHOUT_CLASSIFICATION	2.514152652400288E-7	DEFECT
// Tell how many files were checked out.	WITHOUT_CLASSIFICATION	0.9999990008123699	WITHOUT_CLASSIFICATION	9.991876300731526E-7	DEFECT
// Optional; logOn() connects if necessary.	WITHOUT_CLASSIFICATION	0.9999993665847653	WITHOUT_CLASSIFICATION	6.334152347982744E-7	DEFECT
// Logon using specified user name and password.	WITHOUT_CLASSIFICATION	0.999999965967903	WITHOUT_CLASSIFICATION	3.403209696194751E-8	DEFECT
// We always display the ItemID (OBJECT_ID) and primary descriptor.	WITHOUT_CLASSIFICATION	0.9999997985376061	WITHOUT_CLASSIFICATION	2.01462393981732E-7	DEFECT
//If a working directory was specified then add it to the command line	WITHOUT_CLASSIFICATION	0.9958168291267043	WITHOUT_CLASSIFICATION	0.004183170873295665	DEFECT
// Checking for "\ // or           "/ // or           "X:\...	WITHOUT_CLASSIFICATION	0.9999739156829381	WITHOUT_CLASSIFICATION	2.608431706183969E-5	DEFECT
// If we find a "file" attribute then act on a file otherwise act on a project	WITHOUT_CLASSIFICATION	0.999999949025334	WITHOUT_CLASSIFICATION	5.097466599041573E-8	DEFECT
// after you are all of the properties are ok, do your thing // with StarTeam.  If there are any kind of exceptions then // send the message to the project log.	WITHOUT_CLASSIFICATION	0.9999925277112989	WITHOUT_CLASSIFICATION	7.472288701194268E-6	DEFECT
// For performance reasons, it is important to pre-fetch all the // properties we'll need for all the items we'll be searching.	WITHOUT_CLASSIFICATION	0.999999402203796	WITHOUT_CLASSIFICATION	5.977962039787988E-7	DEFECT
// We'll need this item type's primary descriptor.	WITHOUT_CLASSIFICATION	0.9999995198792827	WITHOUT_CLASSIFICATION	4.801207174155564E-7	DEFECT
// Does this item type have a secondary descriptor? // If so, we'll need it.	WITHOUT_CLASSIFICATION	0.9999690219112327	WITHOUT_CLASSIFICATION	3.0978088767305586E-5	DEFECT
// Now, build an array of the property names.	WITHOUT_CLASSIFICATION	0.9999898893870476	WITHOUT_CLASSIFICATION	1.011061295241514E-5	DEFECT
// Pre-fetch the item properties and cache them.	WITHOUT_CLASSIFICATION	0.9999998733770471	WITHOUT_CLASSIFICATION	1.266229530298579E-7	DEFECT
// Now, search for items in the selected folder.	WITHOUT_CLASSIFICATION	0.9999999771656423	WITHOUT_CLASSIFICATION	2.2834357720492345E-8	DEFECT
// Free up the memory used by the cached items.	WITHOUT_CLASSIFICATION	0.999999893422507	WITHOUT_CLASSIFICATION	1.0657749295744683E-7	DEFECT
// convert whatever separator char is in starteam to that of the target system.	WITHOUT_CLASSIFICATION	0.9999999935907693	WITHOUT_CLASSIFICATION	6.409230813809612E-9	DEFECT
// If it ends with separator then strip it off	WITHOUT_CLASSIFICATION	0.9999997370585791	WITHOUT_CLASSIFICATION	2.6294142080531373E-7	DEFECT
// Replace the projectName in the file's absolute path to the viewName. // This makes the root target of a checkout operation equal to: // targetFolder + dirName	WITHOUT_CLASSIFICATION	0.9999999978432473	WITHOUT_CLASSIFICATION	2.156752725313579E-9	DEFECT
// only want to do this the first time	WITHOUT_CLASSIFICATION	0.9999982872370095	WITHOUT_CLASSIFICATION	1.7127629906011405E-6	DEFECT
// Process all items in this folder.	WITHOUT_CLASSIFICATION	0.9999995284955846	WITHOUT_CLASSIFICATION	4.715044154627382E-7	DEFECT
// Process all subfolders recursively if recursion is on.	WITHOUT_CLASSIFICATION	0.999999953622749	WITHOUT_CLASSIFICATION	4.637725090047639E-8	DEFECT
// Get descriptors for this item type.	WITHOUT_CLASSIFICATION	0.9999995886817179	WITHOUT_CLASSIFICATION	4.113182821399359E-7	DEFECT
// VERBOSE MODE ONLY	WITHOUT_CLASSIFICATION	0.9999939562862498	WITHOUT_CLASSIFICATION	6.043713750235018E-6	DEFECT
// Show folder only if changed.	WITHOUT_CLASSIFICATION	0.9999995960328895	WITHOUT_CLASSIFICATION	4.0396711051675726E-7	DEFECT
// Show if the file is locked.	WITHOUT_CLASSIFICATION	0.999999629891861	WITHOUT_CLASSIFICATION	3.701081390224811E-7	DEFECT
// END VERBOSE ONLY	WITHOUT_CLASSIFICATION	0.9999945886339099	WITHOUT_CLASSIFICATION	5.411366090136154E-6	DEFECT
// add -command CheckOutFile to the commandline	WITHOUT_CLASSIFICATION	0.9999999647548972	WITHOUT_CLASSIFICATION	3.524510280178805E-8	DEFECT
// Finally, show the Item properties ... // Always show the ItemID.	WITHOUT_CLASSIFICATION	0.9991809477118859	WITHOUT_CLASSIFICATION	8.190522881140892E-4	DEFECT
// Show the primary descriptor. // There should always be one.	WITHOUT_CLASSIFICATION	0.999988860350328	WITHOUT_CLASSIFICATION	1.113964967197097E-5	DEFECT
// Show the secondary descriptor, if there is one. // Some item types have one, some don't.	WITHOUT_CLASSIFICATION	0.9999980954338107	WITHOUT_CLASSIFICATION	1.904566189363718E-6	DEFECT
// Change the item to be checked out to a StarTeam File.	WITHOUT_CLASSIFICATION	0.999999999444662	WITHOUT_CLASSIFICATION	5.553379966770999E-10	DEFECT
// The local file name is simply the local target path (tgt) which has // been passed recursively down from the top of the tree, with the item's name appended.	WITHOUT_CLASSIFICATION	0.9999999994217137	WITHOUT_CLASSIFICATION	5.782863371382512E-10	DEFECT
// Begin SET and GET methods	WITHOUT_CLASSIFICATION	0.9999992155343884	WITHOUT_CLASSIFICATION	7.844656116263061E-7	DEFECT
// Begin filter getters and setters	WITHOUT_CLASSIFICATION	0.9999782799767956	WITHOUT_CLASSIFICATION	2.1720023204433555E-5	DEFECT
// Check if need to set the loader	WITHOUT_CLASSIFICATION	0.9999999902781872	WITHOUT_CLASSIFICATION	9.721812755554624E-9	DEFECT
// Now create the scriptRunner	WITHOUT_CLASSIFICATION	0.9999999757878039	WITHOUT_CLASSIFICATION	2.4212196085829556E-8	DEFECT
// find the script repository - it is stored in the project	WITHOUT_CLASSIFICATION	0.99993331671339	WITHOUT_CLASSIFICATION	6.668328660998082E-5	DEFECT
/*            // try the context classloader            ClassLoader loader                = Thread.currentThread().getContextClassLoader();            */	WITHOUT_CLASSIFICATION	0.9999996861914241	WITHOUT_CLASSIFICATION	3.138085758124365E-7	DEFECT
// If we find a "file" attribute then act on a file otherwise act on a project	WITHOUT_CLASSIFICATION	0.999999949025334	WITHOUT_CLASSIFICATION	5.097466599041573E-8	DEFECT
// add -command CheckInFile to the commandline	WITHOUT_CLASSIFICATION	0.9999999238129881	WITHOUT_CLASSIFICATION	7.618701196546551E-8	DEFECT
// add -file xxxxx to the commandline	WITHOUT_CLASSIFICATION	0.999999341412869	WITHOUT_CLASSIFICATION	6.585871311080456E-7	DEFECT
// add -file xxxxx to the commandline	WITHOUT_CLASSIFICATION	0.999999341412869	WITHOUT_CLASSIFICATION	6.585871311080456E-7	DEFECT
// add -command CheckInProject to the commandline	WITHOUT_CLASSIFICATION	0.9999997446396682	WITHOUT_CLASSIFICATION	2.5536033178680193E-7	DEFECT
// look for a recursive option	WITHOUT_CLASSIFICATION	0.9999998998866027	WITHOUT_CLASSIFICATION	1.0011339729896131E-7	DEFECT
// look for a recursive option	WITHOUT_CLASSIFICATION	0.9999998998866027	WITHOUT_CLASSIFICATION	1.0011339729896131E-7	DEFECT
// Look for a comment	WITHOUT_CLASSIFICATION	0.9999989293419032	WITHOUT_CLASSIFICATION	1.0706580968769385E-6	DEFECT
// soscmd Command options	WITHOUT_CLASSIFICATION	0.9999999502419945	WITHOUT_CLASSIFICATION	4.975800550443693E-8	DEFECT
// soscmd Option flags	WITHOUT_CLASSIFICATION	0.9999982805144944	WITHOUT_CLASSIFICATION	1.7194855057242655E-6	DEFECT
// add -command GetFile to the commandline	WITHOUT_CLASSIFICATION	0.9999998993952921	WITHOUT_CLASSIFICATION	1.0060470797247443E-7	DEFECT
// look for a version attribute	WITHOUT_CLASSIFICATION	0.9999984799411438	WITHOUT_CLASSIFICATION	1.5200588561746066E-6	DEFECT
//add -revision xxxxx to the commandline	WITHOUT_CLASSIFICATION	0.9999978477808573	WITHOUT_CLASSIFICATION	2.1522191427281405E-6	DEFECT
// add -command GetProject to the commandline	WITHOUT_CLASSIFICATION	0.9999998684936581	WITHOUT_CLASSIFICATION	1.315063419666795E-7	DEFECT
// look for a label option	WITHOUT_CLASSIFICATION	0.9999996961137908	WITHOUT_CLASSIFICATION	3.038862090953234E-7	DEFECT
// make sure localDir exists, create it if it doesn't	WITHOUT_CLASSIFICATION	0.9999854946422335	WITHOUT_CLASSIFICATION	1.4505357766609414E-5	DEFECT
// This is the exit status	WITHOUT_CLASSIFICATION	0.9999909034915975	WITHOUT_CLASSIFICATION	9.096508402503907E-6	DEFECT
// Use the OS VM launcher so we get environment variables	WITHOUT_CLASSIFICATION	0.9999999335782027	WITHOUT_CLASSIFICATION	6.642179731179253E-8	DEFECT
// Get the path to the soscmd(.exe)	WITHOUT_CLASSIFICATION	0.9999995983083217	WITHOUT_CLASSIFICATION	4.0169167826922835E-7	DEFECT
// SOS server address is required	WITHOUT_CLASSIFICATION	0.9999780077840431	WITHOUT_CLASSIFICATION	2.1992215956833364E-5	DEFECT
// VSS Info is required	WITHOUT_CLASSIFICATION	0.999907760224578	WITHOUT_CLASSIFICATION	9.223977542206473E-5	DEFECT
// VSS project is required	WITHOUT_CLASSIFICATION	0.9998953681034968	WITHOUT_CLASSIFICATION	1.0463189650319118E-4	DEFECT
// -verbose	WITHOUT_CLASSIFICATION	0.9999999468709705	WITHOUT_CLASSIFICATION	5.3129029436101204E-8	DEFECT
// Disable Compression	WITHOUT_CLASSIFICATION	0.9999998725279681	WITHOUT_CLASSIFICATION	1.2747203184251964E-7	DEFECT
// If -soshome was not specified then we can look for nocache	WITHOUT_CLASSIFICATION	0.9999986459639134	WITHOUT_CLASSIFICATION	1.3540360866068757E-6	DEFECT
// Ignore Exception	WITHOUT_CLASSIFICATION	0.999999691665249	WITHOUT_CLASSIFICATION	3.08334750927462E-7	DEFECT
// look for a recursive option	WITHOUT_CLASSIFICATION	0.9999998998866027	WITHOUT_CLASSIFICATION	1.0011339729896131E-7	DEFECT
// Look for a comment	WITHOUT_CLASSIFICATION	0.9999989293419032	WITHOUT_CLASSIFICATION	1.0706580968769385E-6	DEFECT
// -verbose	WITHOUT_CLASSIFICATION	0.9999999468709705	WITHOUT_CLASSIFICATION	5.3129029436101204E-8	DEFECT
// The SOS class knows that the SOS server needs the password flag, // even if there is no password ,so we send a " "	WITHOUT_CLASSIFICATION	0.9999897437598987	WITHOUT_CLASSIFICATION	1.0256240101323836E-5	DEFECT
// add -command CheckOutProject to the commandline	WITHOUT_CLASSIFICATION	0.999999930406193	WITHOUT_CLASSIFICATION	6.959380700831002E-8	DEFECT
// add -command AddLabel to the commandline	WITHOUT_CLASSIFICATION	0.9999998970959615	WITHOUT_CLASSIFICATION	1.0290403849486065E-7	DEFECT
// a label is required	WITHOUT_CLASSIFICATION	0.9999962625791989	WITHOUT_CLASSIFICATION	3.7374208011164733E-6	DEFECT
// get the list of files in the dir	WITHOUT_CLASSIFICATION	0.9999996183552569	WITHOUT_CLASSIFICATION	3.8164474313614463E-7	DEFECT
// get a random number between 0 and the number of files	WITHOUT_CLASSIFICATION	0.9999999476477776	WITHOUT_CLASSIFICATION	5.23522224872402E-8	DEFECT
// set the source to the file at that location	WITHOUT_CLASSIFICATION	0.9999998487277477	WITHOUT_CLASSIFICATION	1.5127225228737434E-7	DEFECT
// Empty block	WITHOUT_CLASSIFICATION	0.9999981694143465	WITHOUT_CLASSIFICATION	1.830585653545941E-6	DEFECT
//System.exit(0);	WITHOUT_CLASSIFICATION	0.9999959080298921	WITHOUT_CLASSIFICATION	4.091970107846496E-6	DEFECT
// build successfull!	WITHOUT_CLASSIFICATION	0.9999992269646131	WITHOUT_CLASSIFICATION	7.730353869929314E-7	DEFECT
/*AbstractSshMessage*/	WITHOUT_CLASSIFICATION	0.9999986569733732	WITHOUT_CLASSIFICATION	1.3430266268084706E-6	DEFECT
// dir does not exist.	WITHOUT_CLASSIFICATION	0.9999311820651641	WITHOUT_CLASSIFICATION	6.881793483597269E-5	DEFECT
// only track progress for files larger than 100kb in verbose mode	WITHOUT_CLASSIFICATION	0.9999699112408967	WITHOUT_CLASSIFICATION	3.0088759103295377E-5	DEFECT
// get I/O streams for remote scp	WITHOUT_CLASSIFICATION	0.9999850318009955	WITHOUT_CLASSIFICATION	1.4968199004372883E-5	DEFECT
// this indicates an error.	WITHOUT_CLASSIFICATION	0.999994993993302	WITHOUT_CLASSIFICATION	5.006006698012532E-6	DEFECT
// appears that the next token is not used and it's zero.	WITHOUT_CLASSIFICATION	0.9696240629833335	WITHOUT_CLASSIFICATION	0.030375937016666504	DEFECT
// read a content of lfile	WITHOUT_CLASSIFICATION	0.9999999603102538	WITHOUT_CLASSIFICATION	3.9689746120675155E-8	DEFECT
// Ignored	WITHOUT_CLASSIFICATION	0.9999997997877783	WITHOUT_CLASSIFICATION	2.0021222176779807E-7	DEFECT
// do nothing;	WITHOUT_CLASSIFICATION	0.9999973259659029	WITHOUT_CLASSIFICATION	2.6740340970997395E-6	DEFECT
// didn't receive any response	WITHOUT_CLASSIFICATION	0.999974279010406	WITHOUT_CLASSIFICATION	2.5720989593967756E-5	DEFECT
// execute the command	WITHOUT_CLASSIFICATION	0.9999951510714415	WITHOUT_CLASSIFICATION	4.848928558471253E-6	DEFECT
// wait for it to finish	WITHOUT_CLASSIFICATION	0.999999805018566	WITHOUT_CLASSIFICATION	1.949814339928838E-7	DEFECT
// ran out of time	WITHOUT_CLASSIFICATION	0.9999998332803336	WITHOUT_CLASSIFICATION	1.6671966641449923E-7	DEFECT
// completed successfully	WITHOUT_CLASSIFICATION	0.9999990352476184	WITHOUT_CLASSIFICATION	9.64752381623842E-7	DEFECT
// user:password@host:/path notation	WITHOUT_CLASSIFICATION	0.9999977647999857	WITHOUT_CLASSIFICATION	2.235200014260632E-6	DEFECT
// no password, will require passphrase	WITHOUT_CLASSIFICATION	0.9999934177356518	WITHOUT_CLASSIFICATION	6.582264348243249E-6	DEFECT
// skip	WITHOUT_CLASSIFICATION	0.9999983791889644	WITHOUT_CLASSIFICATION	1.6208110355901377E-6	DEFECT
// send "C0644 filesize filename", where filename should not include '/'	WITHOUT_CLASSIFICATION	0.9999977677309541	WITHOUT_CLASSIFICATION	2.2322690458320846E-6	DEFECT
// send a content of lfile	WITHOUT_CLASSIFICATION	0.9999999599479891	WITHOUT_CLASSIFICATION	4.0052010922865905E-8	DEFECT
// C0644 filesize filename - header for a regular file // T time 0 time 0\n - present if perserve time. // D directory - this is the header for a directory.	WITHOUT_CLASSIFICATION	0.9999994870690331	WITHOUT_CLASSIFICATION	5.129309669156493E-7	DEFECT
// swallow if there was an error before so that // original error will be passed up	WITHOUT_CLASSIFICATION	0.9999999064479064	WITHOUT_CLASSIFICATION	9.355209370285265E-8	DEFECT
// since filesize keeps on decreasing we have to store the // initial filesize	WITHOUT_CLASSIFICATION	0.9999999967093394	WITHOUT_CLASSIFICATION	3.290660661729615E-9	DEFECT
// b may be 0 for success, //          1 for error, //          2 for fatal error,	WITHOUT_CLASSIFICATION	0.999999591722015	WITHOUT_CLASSIFICATION	4.0827798496786394E-7	DEFECT
// like <exec> // like <exec> // like <exec>	WITHOUT_CLASSIFICATION	0.9999589314692222	WITHOUT_CLASSIFICATION	4.106853077782267E-5	DEFECT
//log(message, Project.MSG_DEBUG);	WITHOUT_CLASSIFICATION	0.9999977244064626	WITHOUT_CLASSIFICATION	2.275593537452736E-6	DEFECT
// we want this to have a false default, unlike for Checkin.	WITHOUT_CLASSIFICATION	0.9999999027258791	WITHOUT_CLASSIFICATION	9.727412085245357E-8	DEFECT
// If the file doesn't pass the include/exclude tests, skip it.	WITHOUT_CLASSIFICATION	0.9999995940746007	WITHOUT_CLASSIFICATION	4.0592539935988627E-7	DEFECT
// We try to update the status once to give StarTeam // another chance.	WITHOUT_CLASSIFICATION	0.9999999959300719	WITHOUT_CLASSIFICATION	4.069928082331428E-9	DEFECT
// once we find a folder that isn't in the repository, // we know we can add it.	WITHOUT_CLASSIFICATION	0.9999791420774644	WITHOUT_CLASSIFICATION	2.0857922535556706E-5	DEFECT
// once we find a folder that isn't in the repository, // we know we can add it.	WITHOUT_CLASSIFICATION	0.9999791420774644	WITHOUT_CLASSIFICATION	2.0857922535556706E-5	DEFECT
// if a label has been supplied, use it to configure the view // otherwise use current view	WITHOUT_CLASSIFICATION	0.9999999943810339	WITHOUT_CLASSIFICATION	5.618966086393021E-9	DEFECT
// if a date has been supplied use a view configured to the date.	WITHOUT_CLASSIFICATION	0.9999999913272516	WITHOUT_CLASSIFICATION	8.672748350407477E-9	DEFECT
// if a date has been supplied use a view configured to the date.	WITHOUT_CLASSIFICATION	0.9999999913272516	WITHOUT_CLASSIFICATION	8.672748350407477E-9	DEFECT
// otherwise, use this view configured as the tip.	WITHOUT_CLASSIFICATION	0.999999968296701	WITHOUT_CLASSIFICATION	3.1703299049401697E-8	DEFECT
// otherwise, use this view configured as the tip.	WITHOUT_CLASSIFICATION	0.999999968296701	WITHOUT_CLASSIFICATION	3.1703299049401697E-8	DEFECT
// For all Files in this folder, we need to check // if there have been modifications.	WITHOUT_CLASSIFICATION	0.9999999187083014	WITHOUT_CLASSIFICATION	8.129169859068586E-8	DEFECT
// Now we recursively call this method on all sub folders in this // folder unless recursive attribute is off.	WITHOUT_CLASSIFICATION	0.9999995881438404	WITHOUT_CLASSIFICATION	4.1185615974001115E-7	DEFECT
// handle the files so they appear first	WITHOUT_CLASSIFICATION	0.999999969281205	WITHOUT_CLASSIFICATION	3.071879496709087E-8	DEFECT
// now do it again for the directories so they appear last.	WITHOUT_CLASSIFICATION	0.9999996683718291	WITHOUT_CLASSIFICATION	3.3162817089814095E-7	DEFECT
// Create the new label and update the repository	WITHOUT_CLASSIFICATION	0.9999999652177592	WITHOUT_CLASSIFICATION	3.478224068701703E-8	DEFECT
// write a Properties file in each directory:	WITHOUT_CLASSIFICATION	0.9999988790270353	WITHOUT_CLASSIFICATION	1.120972964725832E-6	DEFECT
// Create an instance of the rmic, redirecting output to // the project log	WITHOUT_CLASSIFICATION	0.9999997374786751	WITHOUT_CLASSIFICATION	2.6252132493703987E-7	DEFECT
// CheckStyle:MethodNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9999985649503456	WITHOUT_CLASSIFICATION	1.4350496544650922E-6	DEFECT
// once we find a folder that isn't in the repository, // we know we can add it.	WITHOUT_CLASSIFICATION	0.9999791420774644	WITHOUT_CLASSIFICATION	2.0857922535556706E-5	DEFECT
//ATTRIBUTES settable from ant.	WITHOUT_CLASSIFICATION	0.9999997440357025	WITHOUT_CLASSIFICATION	2.5596429752582735E-7	DEFECT
// if a label has been supplied and it is a view label, use it // to configure the view	WITHOUT_CLASSIFICATION	0.9999999922847255	WITHOUT_CLASSIFICATION	7.71527453144563E-9	DEFECT
// if a label has been supplied and it is a revision label, use the raw // the view as the snapshot	WITHOUT_CLASSIFICATION	0.9999999188066558	WITHOUT_CLASSIFICATION	8.119334404987948E-8	DEFECT
// prune away any files not belonging to the revision label // this is one ugly API from Starteam SDK	WITHOUT_CLASSIFICATION	0.9989545297761492	WITHOUT_CLASSIFICATION	0.0010454702238508408	DEFECT
// PR 31965 says that it can return null	WITHOUT_CLASSIFICATION	0.99997351009517	WITHOUT_CLASSIFICATION	2.6489904830056526E-5	DEFECT
// no root local mapping has been specified.	WITHOUT_CLASSIFICATION	0.9999994544744337	WITHOUT_CLASSIFICATION	5.455255662897568E-7	DEFECT
// Inspect everything in the root folder and then recursively	WITHOUT_CLASSIFICATION	0.9999821723753493	WITHOUT_CLASSIFICATION	1.782762465081077E-5	DEFECT
// Tell user what he is doing	WITHOUT_CLASSIFICATION	0.9999991842431861	WITHOUT_CLASSIFICATION	8.157568140163586E-7	DEFECT
// set the local folder.	WITHOUT_CLASSIFICATION	0.9999999239835258	WITHOUT_CLASSIFICATION	7.601647423408554E-8	DEFECT
// set the local folder.	WITHOUT_CLASSIFICATION	0.9999999239835258	WITHOUT_CLASSIFICATION	7.601647423408554E-8	DEFECT
// ATTRIBUTES	WITHOUT_CLASSIFICATION	0.9999976856402654	WITHOUT_CLASSIFICATION	2.3143597346490264E-6	DEFECT
// create a hashtable to group them by parent directory:	WITHOUT_CLASSIFICATION	0.9999993754110967	WITHOUT_CLASSIFICATION	6.24588903264593E-7	DEFECT
// else lnk exists, do nothing	WITHOUT_CLASSIFICATION	0.9999994843307125	WITHOUT_CLASSIFICATION	5.156692875242522E-7	DEFECT
// get an Iterator of file objects representing links (canonical):	WITHOUT_CLASSIFICATION	0.9999999265961594	WITHOUT_CLASSIFICATION	7.340384058678855E-8	DEFECT
//iterate through the names, get the matching values	WITHOUT_CLASSIFICATION	0.9999983796118097	WITHOUT_CLASSIFICATION	1.6203881902787504E-6	DEFECT
/////////////////////////////////////////////////////////////// // GET/SET methods. // Setters, of course are where ant user passes in values. ///////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999998486483601	WITHOUT_CLASSIFICATION	1.5135163981506987E-7	DEFECT
/////////////////////////////////////////////////////////////// // INCLUDE-EXCLUDE processing ///////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999999195855228	WITHOUT_CLASSIFICATION	8.041447720372473E-8	DEFECT
// find the starteam folder specified to be the root of the // operation.  Throw if it can't be found.	WITHOUT_CLASSIFICATION	0.999999977549029	WITHOUT_CLASSIFICATION	2.2450970863657495E-8	DEFECT
// either use default path or root local mapping, // which is now embedded in the root folder	WITHOUT_CLASSIFICATION	0.9999998633524712	WITHOUT_CLASSIFICATION	1.3664752881217434E-7	DEFECT
///////////////////////////////////////////////////////// // GET/SET methods. // Setters, of course are where ant user passes in values. /////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999998486483601	WITHOUT_CLASSIFICATION	1.5135163981506987E-7	DEFECT
// fill up a Properties object with link and resource names:	WITHOUT_CLASSIFICATION	0.9999986390266944	WITHOUT_CLASSIFICATION	1.360973305603222E-6	DEFECT
// find the resource of the existing link:	WITHOUT_CLASSIFICATION	0.9999992405230833	WITHOUT_CLASSIFICATION	7.594769167151945E-7	DEFECT
// rename the resource, thus breaking the link:	WITHOUT_CLASSIFICATION	0.9999969474356327	WITHOUT_CLASSIFICATION	3.0525643673598046E-6	DEFECT
// delete the (now) broken link:	WITHOUT_CLASSIFICATION	0.9993636000440067	WITHOUT_CLASSIFICATION	6.363999559931949E-4	DEFECT
// return the resource to its original name:	WITHOUT_CLASSIFICATION	0.9999992410963328	WITHOUT_CLASSIFICATION	7.589036671684733E-7	DEFECT
// loop through the supplied file sets:	WITHOUT_CLASSIFICATION	0.9999997705636942	WITHOUT_CLASSIFICATION	2.2943630574833702E-7	DEFECT
// load included files as properties files:	WITHOUT_CLASSIFICATION	0.9999992820469572	WITHOUT_CLASSIFICATION	7.179530427062204E-7	DEFECT
// -GL	WITHOUT_CLASSIFICATION	0.999996096492062	WITHOUT_CLASSIFICATION	3.903507937942979E-6	DEFECT
// -GL	WITHOUT_CLASSIFICATION	0.999996096492062	WITHOUT_CLASSIFICATION	3.903507937942979E-6	DEFECT
// -I- or -I-Y or -I-N	WITHOUT_CLASSIFICATION	0.9999983118135244	WITHOUT_CLASSIFICATION	1.6881864756226249E-6	DEFECT
// -I- or -I-Y or -I-N	WITHOUT_CLASSIFICATION	0.9999983118135244	WITHOUT_CLASSIFICATION	1.6881864756226249E-6	DEFECT
// -O-	WITHOUT_CLASSIFICATION	0.9999968662212477	WITHOUT_CLASSIFICATION	3.1337787523268742E-6	DEFECT
// -R	WITHOUT_CLASSIFICATION	0.9999954843890128	WITHOUT_CLASSIFICATION	4.515610987206227E-6	DEFECT
// -R	WITHOUT_CLASSIFICATION	0.9999954843890128	WITHOUT_CLASSIFICATION	4.515610987206227E-6	DEFECT
// -V	WITHOUT_CLASSIFICATION	0.9999957340430197	WITHOUT_CLASSIFICATION	4.26595698031495E-6	DEFECT
// -W	WITHOUT_CLASSIFICATION	0.9999957250275164	WITHOUT_CLASSIFICATION	4.2749724835737166E-6	DEFECT
// -W	WITHOUT_CLASSIFICATION	0.9999957250275164	WITHOUT_CLASSIFICATION	4.2749724835737166E-6	DEFECT
// -Y	WITHOUT_CLASSIFICATION	0.999996768295783	WITHOUT_CLASSIFICATION	3.2317042170528907E-6	DEFECT
// -Y	WITHOUT_CLASSIFICATION	0.999996768295783	WITHOUT_CLASSIFICATION	3.2317042170528907E-6	DEFECT
// -G	WITHOUT_CLASSIFICATION	0.999997110711992	WITHOUT_CLASSIFICATION	2.889288007948139E-6	DEFECT
// -GWS or -GWR	WITHOUT_CLASSIFICATION	0.9999983416771051	WITHOUT_CLASSIFICATION	1.658322894926042E-6	DEFECT
//set to empty str if no local path return	WITHOUT_CLASSIFICATION	0.9999999942028907	WITHOUT_CLASSIFICATION	5.797109356210642E-9	DEFECT
//make sure m_LocalDir exists, create it if it doesn't	WITHOUT_CLASSIFICATION	0.9999746835341617	WITHOUT_CLASSIFICATION	2.531646583833902E-5	DEFECT
// Use the OS launcher so we get environment variables	WITHOUT_CLASSIFICATION	0.9999999675817247	WITHOUT_CLASSIFICATION	3.2418275266427687E-8	DEFECT
// VSS items	WITHOUT_CLASSIFICATION	0.9999996711915852	WITHOUT_CLASSIFICATION	3.288084147713794E-7	DEFECT
// VSS items	WITHOUT_CLASSIFICATION	0.9999996711915852	WITHOUT_CLASSIFICATION	3.288084147713794E-7	DEFECT
// -C	WITHOUT_CLASSIFICATION	0.9999972802708674	WITHOUT_CLASSIFICATION	2.719729132611304E-6	DEFECT
// -C	WITHOUT_CLASSIFICATION	0.9999972802708674	WITHOUT_CLASSIFICATION	2.719729132611304E-6	DEFECT
// -L Specify the new label on the command line (instead of being prompted)	WITHOUT_CLASSIFICATION	0.9999977612795868	WITHOUT_CLASSIFICATION	2.2387204131476066E-6	DEFECT
// -V Label an existing file or project version	WITHOUT_CLASSIFICATION	0.9999999147147958	WITHOUT_CLASSIFICATION	8.528520424734935E-8	DEFECT
// first off, make sure that we've got a command and a vssdir ...	WITHOUT_CLASSIFICATION	0.9999862130340462	WITHOUT_CLASSIFICATION	1.3786965953815443E-5	DEFECT
// pre Kaffe 1.1.5	WITHOUT_CLASSIFICATION	0.9999981828435921	WITHOUT_CLASSIFICATION	1.8171564078421376E-6	DEFECT
// -GL	WITHOUT_CLASSIFICATION	0.999996096492062	WITHOUT_CLASSIFICATION	3.903507937942979E-6	DEFECT
// Write the contents to our master list of links // This method assumes that all links are defined in // terms of absolute paths, or paths relative to the // working directory:	WITHOUT_CLASSIFICATION	0.9999998630382042	WITHOUT_CLASSIFICATION	1.3696179576573404E-7	DEFECT
// build the command line from what we got the format is // ss Get VSS items [-G] [-H] [-I-] [-N] [-O] [-R] [-V] [-W] [-Y] [-?] // as specified in the SS.EXE help	WITHOUT_CLASSIFICATION	0.9999999686455371	WITHOUT_CLASSIFICATION	3.1354462937740083E-8	DEFECT
// -I- or -I-Y or -I-N	WITHOUT_CLASSIFICATION	0.9999983118135244	WITHOUT_CLASSIFICATION	1.6881864756226249E-6	DEFECT
// -I- or -I-Y or -I-N	WITHOUT_CLASSIFICATION	0.9999983118135244	WITHOUT_CLASSIFICATION	1.6881864756226249E-6	DEFECT
// -O-	WITHOUT_CLASSIFICATION	0.9999968662212477	WITHOUT_CLASSIFICATION	3.1337787523268742E-6	DEFECT
// -R	WITHOUT_CLASSIFICATION	0.9999954843890128	WITHOUT_CLASSIFICATION	4.515610987206227E-6	DEFECT
// -R	WITHOUT_CLASSIFICATION	0.9999954843890128	WITHOUT_CLASSIFICATION	4.515610987206227E-6	DEFECT
// -R	WITHOUT_CLASSIFICATION	0.9999954843890128	WITHOUT_CLASSIFICATION	4.515610987206227E-6	DEFECT
// -V	WITHOUT_CLASSIFICATION	0.9999957340430197	WITHOUT_CLASSIFICATION	4.26595698031495E-6	DEFECT
// -W	WITHOUT_CLASSIFICATION	0.9999957250275164	WITHOUT_CLASSIFICATION	4.2749724835737166E-6	DEFECT
// -Y	WITHOUT_CLASSIFICATION	0.999996768295783	WITHOUT_CLASSIFICATION	3.2317042170528907E-6	DEFECT
// -Y	WITHOUT_CLASSIFICATION	0.999996768295783	WITHOUT_CLASSIFICATION	3.2317042170528907E-6	DEFECT
// -Y	WITHOUT_CLASSIFICATION	0.999996768295783	WITHOUT_CLASSIFICATION	3.2317042170528907E-6	DEFECT
// -G	WITHOUT_CLASSIFICATION	0.999997110711992	WITHOUT_CLASSIFICATION	2.889288007948139E-6	DEFECT
// -GWS or -GWR	WITHOUT_CLASSIFICATION	0.9999983416771051	WITHOUT_CLASSIFICATION	1.658322894926042E-6	DEFECT
// VSS items	WITHOUT_CLASSIFICATION	0.9999996711915852	WITHOUT_CLASSIFICATION	3.288084147713794E-7	DEFECT
// Use getShortLabel() so labels longer then 30 char are truncated // and the user is warned	WITHOUT_CLASSIFICATION	0.9999999910390382	WITHOUT_CLASSIFICATION	8.960961801402208E-9	DEFECT
// ss.exe exits with '100', when files have been skipped // so we have to ignore the failure	WITHOUT_CLASSIFICATION	0.999999952145185	WITHOUT_CLASSIFICATION	4.785481492409414E-8	DEFECT
// If location of ss.ini is specified we need to set the // environment-variable SSDIR to this value	WITHOUT_CLASSIFICATION	0.9999999471194023	WITHOUT_CLASSIFICATION	5.288059770667672E-8	DEFECT
// build the command line from what we got the format is // ss Label VSS items [-C] [-H] [-I-] [-Llabel] [-N] [-O] [-V] [-Y] [-?] // as specified in the SS.EXE help	WITHOUT_CLASSIFICATION	0.9999999315022912	WITHOUT_CLASSIFICATION	6.84977088807423E-8	DEFECT
// VSS items	WITHOUT_CLASSIFICATION	0.9999996711915852	WITHOUT_CLASSIFICATION	3.288084147713794E-7	DEFECT
// -C	WITHOUT_CLASSIFICATION	0.9999972802708674	WITHOUT_CLASSIFICATION	2.719729132611304E-6	DEFECT
// -C	WITHOUT_CLASSIFICATION	0.9999972802708674	WITHOUT_CLASSIFICATION	2.719729132611304E-6	DEFECT
// first off, make sure that we've got a command and a vssdir ...	WITHOUT_CLASSIFICATION	0.9999862130340462	WITHOUT_CLASSIFICATION	1.3786965953815443E-5	DEFECT
// first off, make sure that we've got a command and a vssdir ...	WITHOUT_CLASSIFICATION	0.9999862130340462	WITHOUT_CLASSIFICATION	1.3786965953815443E-5	DEFECT
// build the command line from what we got the format is // ss Checkin VSS items [-H] [-C] [-I-] [-N] [-O] [-R] [-W] [-Y] [-?] // as specified in the SS.EXE help	WITHOUT_CLASSIFICATION	0.9999999496073942	WITHOUT_CLASSIFICATION	5.0392605760918724E-8	DEFECT
// -VL	WITHOUT_CLASSIFICATION	0.9999941888958614	WITHOUT_CLASSIFICATION	5.811104138570627E-6	DEFECT
// -B / -D / -F-	WITHOUT_CLASSIFICATION	0.9999920677749172	WITHOUT_CLASSIFICATION	7.932225082757157E-6	DEFECT
// -O	WITHOUT_CLASSIFICATION	0.9999973950156853	WITHOUT_CLASSIFICATION	2.6049843148140437E-6	DEFECT
// first off, make sure that we've got a command and a localPath ...	WITHOUT_CLASSIFICATION	0.9999832891638643	WITHOUT_CLASSIFICATION	1.6710836135741832E-5	DEFECT
// -G-	WITHOUT_CLASSIFICATION	0.9999973095444431	WITHOUT_CLASSIFICATION	2.6904555569380145E-6	DEFECT
// first off, make sure that we've got a command and a vssdir...	WITHOUT_CLASSIFICATION	0.9999852377016654	WITHOUT_CLASSIFICATION	1.4762298334734763E-5	DEFECT
// build the command line from what we got // the format is: // ss Create VSS items [-C] [-H] [-I-] [-N] [-O] [-S] [-Y] [-?] // as specified in the SS.EXE help	WITHOUT_CLASSIFICATION	0.9999982836577962	WITHOUT_CLASSIFICATION	1.7163422039061235E-6	DEFECT
// pre Kaffe 1.1.2	WITHOUT_CLASSIFICATION	0.9999987753415828	WITHOUT_CLASSIFICATION	1.2246584172020294E-6	DEFECT
// only supported since Kaffe 1.1.2	WITHOUT_CLASSIFICATION	0.9999651563399615	WITHOUT_CLASSIFICATION	3.484366003851797E-5	DEFECT
//handle the many different stub options.	WITHOUT_CLASSIFICATION	0.9999998168077465	WITHOUT_CLASSIFICATION	1.8319225349766432E-7	DEFECT
//default is compatibility	WITHOUT_CLASSIFICATION	0.9999992014843448	WITHOUT_CLASSIFICATION	7.985156551009039E-7	DEFECT
//anything else	WITHOUT_CLASSIFICATION	0.9999978653721344	WITHOUT_CLASSIFICATION	2.134627865513402E-6	DEFECT
//do nothing with the value? or go -v+stubVersion??	WITHOUT_CLASSIFICATION	0.9999995280354771	WITHOUT_CLASSIFICATION	4.7196452302144253E-7	DEFECT
//set the non-null stubOption	WITHOUT_CLASSIFICATION	0.9999996429806112	WITHOUT_CLASSIFICATION	3.5701938881567246E-7	DEFECT
// we know that name.endsWith(".class")	WITHOUT_CLASSIFICATION	0.9999975984359187	WITHOUT_CLASSIFICATION	2.401564081344288E-6	DEFECT
// Combine the build classpath with the system classpath, in an // order determined by the value of build.sysclasspath	WITHOUT_CLASSIFICATION	0.9999994738249347	WITHOUT_CLASSIFICATION	5.261750652586866E-7	DEFECT
// swallow	WITHOUT_CLASSIFICATION	0.9999979726191459	WITHOUT_CLASSIFICATION	2.0273808541088527E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999734784456	WITHOUT_CLASSIFICATION	2.6521554394295955E-8	DEFECT
// build the command line from what we got the format is // ss CP VSS items [-H] [-I-] [-Y] [-?] // as specified in the SS.EXE help	WITHOUT_CLASSIFICATION	0.9999998236255451	WITHOUT_CLASSIFICATION	1.7637445500571885E-7	DEFECT
//for java1.5+, we generate compatible stubs, that is, unless //the caller asked for IDL or IIOP support.	WITHOUT_CLASSIFICATION	0.9999831542264269	WITHOUT_CLASSIFICATION	1.6845773573094056E-5	DEFECT
// JRMP with simple naming convention	WITHOUT_CLASSIFICATION	0.9999914578846719	WITHOUT_CLASSIFICATION	8.542115328102176E-6	DEFECT
/*                 * I know, this is not necessary, but I prefer it explicit (SB)                 */	WITHOUT_CLASSIFICATION	0.9999800542823978	WITHOUT_CLASSIFICATION	1.9945717602189164E-5	DEFECT
// no package	WITHOUT_CLASSIFICATION	0.9999998687687116	WITHOUT_CLASSIFICATION	1.3123128843079945E-7	DEFECT
// no package	WITHOUT_CLASSIFICATION	0.9999998687687116	WITHOUT_CLASSIFICATION	1.3123128843079945E-7	DEFECT
// only stub, no tie	WITHOUT_CLASSIFICATION	0.9999998138583631	WITHOUT_CLASSIFICATION	1.8614163681268653E-7	DEFECT
/*                         * stub is derived from implementation,                         * tie from interface name.                         */	WITHOUT_CLASSIFICATION	0.9999927088316407	WITHOUT_CLASSIFICATION	7.2911683593557046E-6	DEFECT
//rely on RMIC being on the path	WITHOUT_CLASSIFICATION	0.9996865671077045	WITHOUT_CLASSIFICATION	3.1343289229544797E-4	DEFECT
//set up the args	WITHOUT_CLASSIFICATION	0.999999973295094	WITHOUT_CLASSIFICATION	2.6704905995510252E-8	DEFECT
// Create an instance of the rmic	WITHOUT_CLASSIFICATION	0.9999998721701264	WITHOUT_CLASSIFICATION	1.2782987352220536E-7	DEFECT
//convert to lower case in the English locale,	WITHOUT_CLASSIFICATION	0.9999998743481243	WITHOUT_CLASSIFICATION	1.2565187560331758E-7	DEFECT
//handle default specially by choosing the sun or kaffe compiler	WITHOUT_CLASSIFICATION	0.9999998451393599	WITHOUT_CLASSIFICATION	1.5486064002058646E-7	DEFECT
//no match? ask for the non-lower-cased type	WITHOUT_CLASSIFICATION	0.9999999896407427	WITHOUT_CLASSIFICATION	1.0359257309597612E-8	DEFECT
//do the system assertions	WITHOUT_CLASSIFICATION	0.9999997192223796	WITHOUT_CLASSIFICATION	2.807776202946554E-7	DEFECT
//do the system assertions	WITHOUT_CLASSIFICATION	0.9999997192223796	WITHOUT_CLASSIFICATION	2.807776202946554E-7	DEFECT
//do the system assertions	WITHOUT_CLASSIFICATION	0.9999997192223796	WITHOUT_CLASSIFICATION	2.807776202946554E-7	DEFECT
//now any inner assertions	WITHOUT_CLASSIFICATION	0.9999993436781391	WITHOUT_CLASSIFICATION	6.563218609792881E-7	DEFECT
//now any inner assertions	WITHOUT_CLASSIFICATION	0.9999993436781391	WITHOUT_CLASSIFICATION	6.563218609792881E-7	DEFECT
//now any inner assertions	WITHOUT_CLASSIFICATION	0.9999993436781391	WITHOUT_CLASSIFICATION	6.563218609792881E-7	DEFECT
//catch invalidness	WITHOUT_CLASSIFICATION	0.9999999563708313	WITHOUT_CLASSIFICATION	4.3629168730181053E-8	DEFECT
//see if it is a package or a class	WITHOUT_CLASSIFICATION	0.9999938343815059	WITHOUT_CLASSIFICATION	6.1656184941459966E-6	DEFECT
//packages get a ... prefix	WITHOUT_CLASSIFICATION	0.9999871575450979	WITHOUT_CLASSIFICATION	1.2842454902074078E-5	DEFECT
//append the ... suffix if not there already	WITHOUT_CLASSIFICATION	0.994575005903588	WITHOUT_CLASSIFICATION	0.005424994096411982	DEFECT
//classes just get the classname	WITHOUT_CLASSIFICATION	0.999999765400223	WITHOUT_CLASSIFICATION	2.345997771325328E-7	DEFECT
//-- Fields ----------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999902566552893	WITHOUT_CLASSIFICATION	9.74334471066572E-6	DEFECT
//-- Methods ---------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999864340311029	WITHOUT_CLASSIFICATION	1.3565968897095328E-5	DEFECT
// Add all nested elements to our catalog	WITHOUT_CLASSIFICATION	0.999999925544597	WITHOUT_CLASSIFICATION	7.445540288855272E-8	DEFECT
// Ignore exception	WITHOUT_CLASSIFICATION	0.9999991717952554	WITHOUT_CLASSIFICATION	8.282047445369054E-7	DEFECT
// New behavior for delayed task creation. Description // will be evaluated in Project.getDescription()	WITHOUT_CLASSIFICATION	0.9999953670019227	WITHOUT_CLASSIFICATION	4.632998077327576E-6	DEFECT
// Append the classpath of the nested catalog	WITHOUT_CLASSIFICATION	0.999937376433072	WITHOUT_CLASSIFICATION	6.262356692791814E-5	DEFECT
// Append the catalog path of the nested catalog	WITHOUT_CLASSIFICATION	0.9999474352561042	WITHOUT_CLASSIFICATION	5.2564743895778886E-5	DEFECT
// At this point we are probably in failure mode, but // try to use the bare URI as a last gasp	WITHOUT_CLASSIFICATION	0.9999356781658109	WITHOUT_CLASSIFICATION	6.432183418923295E-5	DEFECT
// The Apache resolver is present - Need to check if it can // be seen by the catalog resolver class. Start by getting // the actual loader	WITHOUT_CLASSIFICATION	0.9999999878997172	WITHOUT_CLASSIFICATION	1.2100282820279507E-8	DEFECT
// load the base class through this loader.	WITHOUT_CLASSIFICATION	0.9999913214335661	WITHOUT_CLASSIFICATION	8.678566433875784E-6	DEFECT
// and find its actual loader	WITHOUT_CLASSIFICATION	0.9999997362339382	WITHOUT_CLASSIFICATION	2.637660617548539E-7	DEFECT
// // Success!  The xml-commons resolver library is // available, so use it. //	WITHOUT_CLASSIFICATION	0.9999993363492314	WITHOUT_CLASSIFICATION	6.636507685916295E-7	DEFECT
// // The xml-commons resolver library is not // available, so we can't use it. //	WITHOUT_CLASSIFICATION	0.9999964314854057	WITHOUT_CLASSIFICATION	3.5685145942341877E-6	DEFECT
// the following line seems to be necessary on Windows under JDK 1.2	WITHOUT_CLASSIFICATION	0.995405595451081	WITHOUT_CLASSIFICATION	0.0045944045489190065	DEFECT
// // The ResourceLocation may specify a relative path for its // location attribute.  This is resolved using the appropriate // base. //	WITHOUT_CLASSIFICATION	0.9999972880980046	WITHOUT_CLASSIFICATION	2.711901995407741E-6	DEFECT
// // for classpath lookup we ignore the base directory //	WITHOUT_CLASSIFICATION	0.9999999919228355	WITHOUT_CLASSIFICATION	8.07716449253237E-9	DEFECT
// // The ResourceLocation may specify a relative url for its // location attribute.  This is resolved using the appropriate // base. //	WITHOUT_CLASSIFICATION	0.9999990744642713	WITHOUT_CLASSIFICATION	9.255357286661118E-7	DEFECT
// // We didn't match a ResourceLocation, but since we // only support PUBLIC and URI entry types internally, // it is still possible that there is another entry in // an external catalog that will match.  We call // Apache resolver's resolveEntity method to cover // this possibility. //	WITHOUT_CLASSIFICATION	0.9800144705910039	WITHOUT_CLASSIFICATION	0.019985529408996134	DEFECT
// // Use the passed in base in preference to the base // from matchingEntry, which is either null or the // directory in which the external catalog file from // which it was obtained is located.  We make a copy // so matchingEntry's original base is untouched.  Of // course, if there is no base, no need to make a // copy... // // This is the standard behavior as per my reading of // the JAXP and XML Catalog specs.  CKS 11/7/2002 //	WITHOUT_CLASSIFICATION	0.9999999979539432	WITHOUT_CLASSIFICATION	2.046056822182701E-9	DEFECT
// Parse each catalog listed in nested <catalogpath> elements	WITHOUT_CLASSIFICATION	0.9999999745253398	WITHOUT_CLASSIFICATION	2.5474660180674453E-8	DEFECT
//-- XMLCatalog	WITHOUT_CLASSIFICATION	0.9999524842787197	WITHOUT_CLASSIFICATION	4.751572128030873E-5	DEFECT
/* Methods below all add specific selectors */	WITHOUT_CLASSIFICATION	0.9999999554586554	WITHOUT_CLASSIFICATION	4.454134459379394E-8	DEFECT
// No includes supplied, so set it to 'matches all'	WITHOUT_CLASSIFICATION	0.9999999995830199	WITHOUT_CLASSIFICATION	4.169800293970185E-10	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999734784456	WITHOUT_CLASSIFICATION	2.6521554394295955E-8	DEFECT
/* package-private for now */	WITHOUT_CLASSIFICATION	0.9999973492176897	WITHOUT_CLASSIFICATION	2.650782310190892E-6	DEFECT
/* package-private for now */	WITHOUT_CLASSIFICATION	0.9999973492176897	WITHOUT_CLASSIFICATION	2.650782310190892E-6	DEFECT
// special case in ZIPs, we do not want this thing included	WITHOUT_CLASSIFICATION	0.9999832003572298	WITHOUT_CLASSIFICATION	1.6799642770318426E-5	DEFECT
// first check if the archive needs to be scanned again	WITHOUT_CLASSIFICATION	0.9999999922352651	WITHOUT_CLASSIFICATION	7.764734744431989E-9	DEFECT
//do not use a FileResource b/c it pulls File info from the filesystem:	WITHOUT_CLASSIFICATION	0.9999995161105573	WITHOUT_CLASSIFICATION	4.838894426493808E-7	DEFECT
// spare scanning again and again	WITHOUT_CLASSIFICATION	0.9999998841160435	WITHOUT_CLASSIFICATION	1.1588395647221898E-7	DEFECT
/* cached DirectoryScanner instance for our own Project only */	WITHOUT_CLASSIFICATION	0.999997131541178	WITHOUT_CLASSIFICATION	2.8684588221151614E-6	DEFECT
// SelectorContainer methods	WITHOUT_CLASSIFICATION	0.9999999958635389	WITHOUT_CLASSIFICATION	4.1364609837108305E-9	DEFECT
// WIN9x uses a bat file for executing commands	WITHOUT_CLASSIFICATION	0.9999073763651284	WITHOUT_CLASSIFICATION	9.262363487158896E-5	DEFECT
// empty path return empty string	WITHOUT_CLASSIFICATION	0.9999999659905758	WITHOUT_CLASSIFICATION	3.400942419283029E-8	DEFECT
//no command? no string	WITHOUT_CLASSIFICATION	0.9999992623761806	WITHOUT_CLASSIFICATION	7.376238193639266E-7	DEFECT
// parse with a simple finite state machine	WITHOUT_CLASSIFICATION	0.9999979046238372	WITHOUT_CLASSIFICATION	2.09537616283184E-6	DEFECT
//inherit doc	WITHOUT_CLASSIFICATION	0.9999937179608626	WITHOUT_CLASSIFICATION	6.282039137521199E-6	DEFECT
//can't have zero-length token	WITHOUT_CLASSIFICATION	0.9996983540176979	WITHOUT_CLASSIFICATION	3.016459823021138E-4	DEFECT
// we have another token, let's parse it.	WITHOUT_CLASSIFICATION	0.9998447380817749	WITHOUT_CLASSIFICATION	1.5526191822504834E-4	DEFECT
// should always be the case...	WITHOUT_CLASSIFICATION	0.9998034491881156	WITHOUT_CLASSIFICATION	1.9655081188436343E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999920118448	WITHOUT_CLASSIFICATION	7.988155193624096E-8	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999920118448	WITHOUT_CLASSIFICATION	7.988155193624096E-8	DEFECT
// swallow	WITHOUT_CLASSIFICATION	0.9999979726191459	WITHOUT_CLASSIFICATION	2.0273808541088527E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999734784456	WITHOUT_CLASSIFICATION	2.6521554394295955E-8	DEFECT
/**     * Invoked by IntrospectionHelper for <code>setXXX(Path p)</code>     * attribute setters.     * @param p the <code>Project</code> for this path.     * @param path the <code>String</code> path definition.     */	WITHOUT_CLASSIFICATION	0.9999987745559923	WITHOUT_CLASSIFICATION	1.22544400774443E-6	DEFECT
// ignore: don't trust anyone	WITHOUT_CLASSIFICATION	0.9999938785724112	WITHOUT_CLASSIFICATION	6.121427588704857E-6	DEFECT
// last: don't trust the developer	WITHOUT_CLASSIFICATION	0.9999974322879197	WITHOUT_CLASSIFICATION	2.567712080418535E-6	DEFECT
// newer versions of Kaffe (1.1.1+) won't have this, // but this will be sorted by FileSet anyway.	WITHOUT_CLASSIFICATION	0.9716570666247579	WITHOUT_CLASSIFICATION	0.028342933375242057	DEFECT
// JDK 1.2+ seems to set java.home to the JRE directory.	WITHOUT_CLASSIFICATION	0.999999367685056	WITHOUT_CLASSIFICATION	6.323149439571402E-7	DEFECT
// Just keep the old version as well and let addExisting // sort it out.	WITHOUT_CLASSIFICATION	0.9999999981466025	WITHOUT_CLASSIFICATION	1.8533975851590177E-9	DEFECT
// Sun's and Apple's 1.4 have JCE and JSSE in separate jars.	WITHOUT_CLASSIFICATION	0.9999938952512738	WITHOUT_CLASSIFICATION	6.104748726216142E-6	DEFECT
// IBM's 1.4 has rt.jar split into 4 smaller jars and a combined // JCE/JSSE in security.jar.	WITHOUT_CLASSIFICATION	0.9999946036293793	WITHOUT_CLASSIFICATION	5.396370620662636E-6	DEFECT
// Added for MacOS X	WITHOUT_CLASSIFICATION	0.9999983916133078	WITHOUT_CLASSIFICATION	1.6083866921392248E-6	DEFECT
//remove any null elements	WITHOUT_CLASSIFICATION	0.99999748585486	WITHOUT_CLASSIFICATION	2.514145139967151E-6	DEFECT
//create the list	WITHOUT_CLASSIFICATION	0.9999999814509994	WITHOUT_CLASSIFICATION	1.8549000508576782E-8	DEFECT
//fill it	WITHOUT_CLASSIFICATION	0.9999702088232303	WITHOUT_CLASSIFICATION	2.9791176769722063E-5	DEFECT
//convert to an array	WITHOUT_CLASSIFICATION	0.9999993683704945	WITHOUT_CLASSIFICATION	6.316295054832054E-7	DEFECT
// properties are part of the vm options...	WITHOUT_CLASSIFICATION	0.9999990731018443	WITHOUT_CLASSIFICATION	9.268981556202051E-7	DEFECT
//boot classpath	WITHOUT_CLASSIFICATION	0.9999993183315545	WITHOUT_CLASSIFICATION	6.816684454184166E-7	DEFECT
//main classpath	WITHOUT_CLASSIFICATION	0.9999987532853549	WITHOUT_CLASSIFICATION	1.246714645159896E-6	DEFECT
//now any assertions are added	WITHOUT_CLASSIFICATION	0.9999977244810743	WITHOUT_CLASSIFICATION	2.275518925667543E-6	DEFECT
// this is the classname to run as well as its arguments. // in case of 'executeJar', the executable is a jar file.	WITHOUT_CLASSIFICATION	0.9999999986223974	WITHOUT_CLASSIFICATION	1.3776025713117258E-9	DEFECT
// cloned system properties	WITHOUT_CLASSIFICATION	0.9999997225301106	WITHOUT_CLASSIFICATION	2.774698893671319E-7	DEFECT
// classpath is "-classpath <classpath>" -> 2 args	WITHOUT_CLASSIFICATION	0.999999582700413	WITHOUT_CLASSIFICATION	4.1729958692585804E-7	DEFECT
// bootclasspath is "-Xbootclasspath:<classpath>" -> 1 arg	WITHOUT_CLASSIFICATION	0.9999995769343845	WITHOUT_CLASSIFICATION	4.2306561557156604E-7	DEFECT
// jar execution requires an additional -jar option	WITHOUT_CLASSIFICATION	0.9999541199576066	WITHOUT_CLASSIFICATION	4.588004239330631E-5	DEFECT
/*<? extends EnumeratedAttribute>*/	WITHOUT_CLASSIFICATION	0.9999992592276729	WITHOUT_CLASSIFICATION	7.40772327077746E-7	DEFECT
//end nested class	WITHOUT_CLASSIFICATION	0.9999976796980226	WITHOUT_CLASSIFICATION	2.320301977484619E-6	DEFECT
// Add this PropertySet's nested PropertySets' property names.	WITHOUT_CLASSIFICATION	0.9999994842673459	WITHOUT_CLASSIFICATION	5.15732654115346E-7	DEFECT
//make a copy...	WITHOUT_CLASSIFICATION	0.9991186704806269	WITHOUT_CLASSIFICATION	8.813295193730891E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999734784456	WITHOUT_CLASSIFICATION	2.6521554394295955E-8	DEFECT
// Gotta atleast put in the proper spelling :-P	WITHOUT_CLASSIFICATION	0.9999217833669818	WITHOUT_CLASSIFICATION	7.821663301830274E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999734784456	WITHOUT_CLASSIFICATION	2.6521554394295955E-8	DEFECT
// If this TransformOperation has DrawOperation children // then Rotate the first child and return.	WITHOUT_CLASSIFICATION	0.9999999873731569	WITHOUT_CLASSIFICATION	1.2626843139348878E-8	DEFECT
// If this TransformOperation has DrawOperation children // then Rotate the first child and return.	WITHOUT_CLASSIFICATION	0.9999999873731569	WITHOUT_CLASSIFICATION	1.2626843139348878E-8	DEFECT
// CheckStyle:MemberNameCheck ON	WITHOUT_CLASSIFICATION	0.9999998150419329	WITHOUT_CLASSIFICATION	1.849580672018171E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc // CheckStyle:MemberNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9999999789264881	WITHOUT_CLASSIFICATION	2.1073511912994355E-8	DEFECT
// change this to get the objects from the other reference	WITHOUT_CLASSIFICATION	0.999999906695094	WITHOUT_CLASSIFICATION	9.330490607855882E-8	DEFECT
// change this to get the objects from the other reference	WITHOUT_CLASSIFICATION	0.999999906695094	WITHOUT_CLASSIFICATION	9.330490607855882E-8	DEFECT
//-- Fields ----------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999902566552893	WITHOUT_CLASSIFICATION	9.74334471066572E-6	DEFECT
//-- Methods ---------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999864340311029	WITHOUT_CLASSIFICATION	1.3565968897095328E-5	DEFECT
// CheckStyle:VisibilityModifier OFF	WITHOUT_CLASSIFICATION	0.9999999474341253	WITHOUT_CLASSIFICATION	5.256587464546367E-8	DEFECT
// may be null if a system property has been added // after the project instance has been initialized	WITHOUT_CLASSIFICATION	0.9999829379385167	WITHOUT_CLASSIFICATION	1.706206148332311E-5	DEFECT
// Add this PropertySet's property names.	WITHOUT_CLASSIFICATION	0.9999977566202257	WITHOUT_CLASSIFICATION	2.243379774182961E-6	DEFECT
//map the names	WITHOUT_CLASSIFICATION	0.9999989507049831	WITHOUT_CLASSIFICATION	1.0492950168832832E-6	DEFECT
// Create one NameEntry in the appropriate pattern list for each // line in the file.	WITHOUT_CLASSIFICATION	0.9999999824418505	WITHOUT_CLASSIFICATION	1.7558149514600205E-8	DEFECT
// Get a FileReader	WITHOUT_CLASSIFICATION	0.9999998425046509	WITHOUT_CLASSIFICATION	1.5749534911960504E-7	DEFECT
//Ignore exception	WITHOUT_CLASSIFICATION	0.9999966976443403	WITHOUT_CLASSIFICATION	3.302355659722543E-6	DEFECT
//-- ResourceLocation	WITHOUT_CLASSIFICATION	0.9999995211289743	WITHOUT_CLASSIFICATION	4.788710256681665E-7	DEFECT
// Add base set of permissions	WITHOUT_CLASSIFICATION	0.9999999374910813	WITHOUT_CLASSIFICATION	6.250891874236826E-8	DEFECT
/*                     if the permission was not explicitly granted or revoked                     the original security manager will do its work                    */	WITHOUT_CLASSIFICATION	0.9994798903167831	WITHOUT_CLASSIFICATION	5.201096832168719E-4	DEFECT
// None of the actions revoked, so all allowed.	WITHOUT_CLASSIFICATION	0.9999999692829323	WITHOUT_CLASSIFICATION	3.0717067559579526E-8	DEFECT
//default true:	WITHOUT_CLASSIFICATION	0.9999960214992575	WITHOUT_CLASSIFICATION	3.978500742505441E-6	DEFECT
//default false:	WITHOUT_CLASSIFICATION	0.999999237980293	WITHOUT_CLASSIFICATION	7.620197071085188E-7	DEFECT
//default false:	WITHOUT_CLASSIFICATION	0.999999237980293	WITHOUT_CLASSIFICATION	7.620197071085188E-7	DEFECT
// The regular expression factory	WITHOUT_CLASSIFICATION	0.9999891015858497	WITHOUT_CLASSIFICATION	1.089841415024889E-5	DEFECT
// temporary variable	WITHOUT_CLASSIFICATION	0.999999952730714	WITHOUT_CLASSIFICATION	4.726928607501579E-8	DEFECT
// This is included	WITHOUT_CLASSIFICATION	0.9999986840171443	WITHOUT_CLASSIFICATION	1.3159828557024634E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999734784456	WITHOUT_CLASSIFICATION	2.6521554394295955E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999734784456	WITHOUT_CLASSIFICATION	2.6521554394295955E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999734784456	WITHOUT_CLASSIFICATION	2.6521554394295955E-8	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9999971163476059	WITHOUT_CLASSIFICATION	2.8836523940921245E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999734784456	WITHOUT_CLASSIFICATION	2.6521554394295955E-8	DEFECT
//- ApacheCatalog	WITHOUT_CLASSIFICATION	0.9999955578490451	WITHOUT_CLASSIFICATION	4.44215095490046E-6	DEFECT
// // If you don't do this, you get all sorts of annoying // warnings about a missing properties file.  However, it // seems to work just fine with default values.  Ultimately, // we should probably include a "CatalogManager.properties" // file in the ant jarfile with some default property // settings.  See CatalogManager.java for more details. //	WITHOUT_CLASSIFICATION	0.999999949150679	WITHOUT_CLASSIFICATION	5.0849320915810637E-8	DEFECT
// // Make sure CatalogResolver instantiates ApacheCatalog, // rather than a plain Catalog //	WITHOUT_CLASSIFICATION	0.9999999510656192	WITHOUT_CLASSIFICATION	4.893438080898773E-8	DEFECT
// debug // CatalogManager.getStaticManager().setVerbosity(4);	WITHOUT_CLASSIFICATION	0.9999966129600129	WITHOUT_CLASSIFICATION	3.3870399871635263E-6	DEFECT
// Pass in reference to ourselves so we can be called back.	WITHOUT_CLASSIFICATION	0.9999988112471383	WITHOUT_CLASSIFICATION	1.1887528616605211E-6	DEFECT
//-- ApacheCatalogResolver	WITHOUT_CLASSIFICATION	0.9999998353826687	WITHOUT_CLASSIFICATION	1.646173313158237E-7	DEFECT
//sorted bag impl. borrowed from commons-collections TreeBag:	WITHOUT_CLASSIFICATION	0.9999337921400425	WITHOUT_CLASSIFICATION	6.620785995737805E-5	DEFECT
/* now check each Resource in case the child only           lets through files from any children IT may have: */	WITHOUT_CLASSIFICATION	0.9998640541692633	WITHOUT_CLASSIFICATION	1.359458307367336E-4	DEFECT
//?	WITHOUT_CLASSIFICATION	0.9999549845747991	WITHOUT_CLASSIFICATION	4.501542520082182E-5	DEFECT
//not using the accessor in this case to avoid side effects	WITHOUT_CLASSIFICATION	0.9948010968297019	WITHOUT_CLASSIFICATION	0.005198903170298154	DEFECT
/*package-private*/	WITHOUT_CLASSIFICATION	0.9999874497728212	WITHOUT_CLASSIFICATION	1.2550227178754612E-5	DEFECT
//new oata.util.ReaderInputStream(new InputStreamReader(	WITHOUT_CLASSIFICATION	0.9999879786302032	WITHOUT_CLASSIFICATION	1.202136979685264E-5	DEFECT
//, encoding), encoding);	WITHOUT_CLASSIFICATION	0.9999857715941767	WITHOUT_CLASSIFICATION	1.4228405823316309E-5	DEFECT
//first the easy way, if all children are filesystem-only, return true:	WITHOUT_CLASSIFICATION	0.9999997356483481	WITHOUT_CLASSIFICATION	2.643516519383985E-7	DEFECT
//preserve order-encountered using a list; enforce set logic manually:	WITHOUT_CLASSIFICATION	0.9999998289867247	WITHOUT_CLASSIFICATION	1.710132752761645E-7	DEFECT
/* cached DirectoryScanner instance */	WITHOUT_CLASSIFICATION	0.9999993752183088	WITHOUT_CLASSIFICATION	6.247816910620603E-7	DEFECT
//if no nested, natural order:	WITHOUT_CLASSIFICATION	0.9999999979285815	WITHOUT_CLASSIFICATION	2.0714184827789634E-9	DEFECT
//dummy	WITHOUT_CLASSIFICATION	0.9999639926642879	WITHOUT_CLASSIFICATION	3.600733571213128E-5	DEFECT
//implement ResourceSelector; inherit doc	WITHOUT_CLASSIFICATION	0.9999995399518902	WITHOUT_CLASSIFICATION	4.600481099050016E-7	DEFECT
// First, check that all elements are correctly configured	WITHOUT_CLASSIFICATION	0.999996953870791	WITHOUT_CLASSIFICATION	3.0461292089267794E-6	DEFECT
//if either of them is missing, they are different	WITHOUT_CLASSIFICATION	0.9999909558451818	WITHOUT_CLASSIFICATION	9.044154818153547E-6	DEFECT
// different size =>different files	WITHOUT_CLASSIFICATION	0.9999960271808763	WITHOUT_CLASSIFICATION	3.972819123659294E-6	DEFECT
//same date if dest timestamp is within granularity of the srcfile	WITHOUT_CLASSIFICATION	0.9999998638243586	WITHOUT_CLASSIFICATION	1.3617564137674822E-7	DEFECT
// different dates => different files	WITHOUT_CLASSIFICATION	0.999999555531277	WITHOUT_CLASSIFICATION	4.4446872302154654E-7	DEFECT
//here do a bulk comparison	WITHOUT_CLASSIFICATION	0.9999938543060166	WITHOUT_CLASSIFICATION	6.145693983400374E-6	DEFECT
// At this point, we know we have a tie.	WITHOUT_CLASSIFICATION	0.9999941375600319	WITHOUT_CLASSIFICATION	5.862439968132892E-6	DEFECT
// throw BuildException on error	WITHOUT_CLASSIFICATION	0.9993926731280269	WITHOUT_CLASSIFICATION	6.073268719730262E-4	DEFECT
// throw BuildException on error	WITHOUT_CLASSIFICATION	0.9993926731280269	WITHOUT_CLASSIFICATION	6.073268719730262E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999734784456	WITHOUT_CLASSIFICATION	2.6521554394295955E-8	DEFECT
// throw BuildException on error	WITHOUT_CLASSIFICATION	0.9993926731280269	WITHOUT_CLASSIFICATION	6.073268719730262E-4	DEFECT
// throw BuildException on error	WITHOUT_CLASSIFICATION	0.9993926731280269	WITHOUT_CLASSIFICATION	6.073268719730262E-4	DEFECT
// throw BuildException on error	WITHOUT_CLASSIFICATION	0.9993926731280269	WITHOUT_CLASSIFICATION	6.073268719730262E-4	DEFECT
// throw BuildException on error	WITHOUT_CLASSIFICATION	0.9993926731280269	WITHOUT_CLASSIFICATION	6.073268719730262E-4	DEFECT
// If you felt daring, you could cache the basedir absolute path	WITHOUT_CLASSIFICATION	0.9999981156228993	WITHOUT_CLASSIFICATION	1.884377100772815E-6	DEFECT
// Sanity check. Ditch it if you want faster performance	WITHOUT_CLASSIFICATION	0.9999999560339013	WITHOUT_CLASSIFICATION	4.396609856401084E-8	DEFECT
// Determine file whose out-of-dateness is to be checked	WITHOUT_CLASSIFICATION	0.999999983983013	WITHOUT_CLASSIFICATION	1.601698691696619E-8	DEFECT
// If filename does not match the To attribute of the mapper // then filter it out of the files we are considering	WITHOUT_CLASSIFICATION	0.9999790324302358	WITHOUT_CLASSIFICATION	2.0967569764267377E-5	DEFECT
// If filename does not match the To attribute of the mapper // then filter it out of the files we are considering	WITHOUT_CLASSIFICATION	0.9999790324302358	WITHOUT_CLASSIFICATION	2.0967569764267377E-5	DEFECT
// Sanity check	WITHOUT_CLASSIFICATION	0.9999994566668359	WITHOUT_CLASSIFICATION	5.433331640425576E-7	DEFECT
// Sanity check	WITHOUT_CLASSIFICATION	0.9999994566668359	WITHOUT_CLASSIFICATION	5.433331640425576E-7	DEFECT
// Determine file whose existence is to be checked	WITHOUT_CLASSIFICATION	0.9999998736112871	WITHOUT_CLASSIFICATION	1.263887130091737E-7	DEFECT
/**     * When using this as a custom selector, this method will be called.     * It translates each parameter into the appropriate setXXX() call.     *     * @param parameters the complete set of parameters for this selector.     */	WITHOUT_CLASSIFICATION	0.9999985545238441	WITHOUT_CLASSIFICATION	1.4454761558511438E-6	DEFECT
// Directory size never selected for	WITHOUT_CLASSIFICATION	0.9999999141918713	WITHOUT_CLASSIFICATION	8.580812865109626E-8	DEFECT
/* You wish! */	WITHOUT_CLASSIFICATION	0.999961505172235	WITHOUT_CLASSIFICATION	3.8494827764892066E-5	DEFECT
// check millis and only set it once.	WITHOUT_CLASSIFICATION	0.999999835168373	WITHOUT_CLASSIFICATION	1.6483162704640385E-7	DEFECT
// When str starts with a File.separator, pattern has to start with a // File.separator. // When pattern starts with a File.separator, str has to start with a // File.separator.	WITHOUT_CLASSIFICATION	0.9999991807418349	WITHOUT_CLASSIFICATION	8.192581649854903E-7	DEFECT
// up to first '**'	WITHOUT_CLASSIFICATION	0.9999999273518513	WITHOUT_CLASSIFICATION	7.264814870330219E-8	DEFECT
// up to first '**'	WITHOUT_CLASSIFICATION	0.9999999273518513	WITHOUT_CLASSIFICATION	7.264814870330219E-8	DEFECT
// String is exhausted	WITHOUT_CLASSIFICATION	0.9999993381191823	WITHOUT_CLASSIFICATION	6.618808176819894E-7	DEFECT
// String is exhausted	WITHOUT_CLASSIFICATION	0.9999993381191823	WITHOUT_CLASSIFICATION	6.618808176819894E-7	DEFECT
// String is exhausted	WITHOUT_CLASSIFICATION	0.9999993381191823	WITHOUT_CLASSIFICATION	6.618808176819894E-7	DEFECT
// String not exhausted, but pattern is. Failure.	WITHOUT_CLASSIFICATION	0.9998441064579987	WITHOUT_CLASSIFICATION	1.5589354200120162E-4	DEFECT
// String not exhausted, but pattern is. Failure.	WITHOUT_CLASSIFICATION	0.9998441064579987	WITHOUT_CLASSIFICATION	1.5589354200120162E-4	DEFECT
// up to last '**'	WITHOUT_CLASSIFICATION	0.9999993181116907	WITHOUT_CLASSIFICATION	6.8188830927788E-7	DEFECT
// '**/**' situation, so skip one	WITHOUT_CLASSIFICATION	0.9999999803009005	WITHOUT_CLASSIFICATION	1.9699099469526266E-8	DEFECT
// No '*'s, so we make a shortcut	WITHOUT_CLASSIFICATION	0.9999998520399767	WITHOUT_CLASSIFICATION	1.479600233131969E-7	DEFECT
// Pattern and string do not have the same size	WITHOUT_CLASSIFICATION	0.9999883526548031	WITHOUT_CLASSIFICATION	1.1647345196799863E-5	DEFECT
// Character mismatch	WITHOUT_CLASSIFICATION	0.9999999943684044	WITHOUT_CLASSIFICATION	5.631595692418078E-9	DEFECT
// Character mismatch	WITHOUT_CLASSIFICATION	0.9999999943684044	WITHOUT_CLASSIFICATION	5.631595692418078E-9	DEFECT
// String matches against pattern	WITHOUT_CLASSIFICATION	0.9999996939928497	WITHOUT_CLASSIFICATION	3.0600715027411994E-7	DEFECT
// throw BuildException on error	WITHOUT_CLASSIFICATION	0.9993926731280269	WITHOUT_CLASSIFICATION	6.073268719730262E-4	DEFECT
// Character mismatch	WITHOUT_CLASSIFICATION	0.9999999943684044	WITHOUT_CLASSIFICATION	5.631595692418078E-9	DEFECT
// Find the pattern between padIdxStart & padIdxTmp in str between // strIdxStart & strIdxEnd	WITHOUT_CLASSIFICATION	0.9999999920079686	WITHOUT_CLASSIFICATION	7.992031410435868E-9	DEFECT
// Find the pattern between padIdxStart & padIdxTmp in str between // strIdxStart & strIdxEnd	WITHOUT_CLASSIFICATION	0.9999999920079686	WITHOUT_CLASSIFICATION	7.992031410435868E-9	DEFECT
// Character mismatch	WITHOUT_CLASSIFICATION	0.9999999943684044	WITHOUT_CLASSIFICATION	5.631595692418078E-9	DEFECT
// Character mismatch	WITHOUT_CLASSIFICATION	0.9999999943684044	WITHOUT_CLASSIFICATION	5.631595692418078E-9	DEFECT
// Character mismatch	WITHOUT_CLASSIFICATION	0.9999999943684044	WITHOUT_CLASSIFICATION	5.631595692418078E-9	DEFECT
// Pattern contains only '*', which matches anything	WITHOUT_CLASSIFICATION	0.9999849448632536	WITHOUT_CLASSIFICATION	1.5055136746401351E-5	DEFECT
// Process characters before first star	WITHOUT_CLASSIFICATION	0.9999999965535217	WITHOUT_CLASSIFICATION	3.4464782826002415E-9	DEFECT
// All characters in the string are used. Check if only '*'s are // left in the pattern. If so, we succeeded. Otherwise failure.	WITHOUT_CLASSIFICATION	0.9999999948174134	WITHOUT_CLASSIFICATION	5.182586576668454E-9	DEFECT
// All characters in the string are used. Check if only '*'s are // left in the pattern. If so, we succeeded. Otherwise failure.	WITHOUT_CLASSIFICATION	0.9999999948174134	WITHOUT_CLASSIFICATION	5.182586576668454E-9	DEFECT
// Process characters after last star	WITHOUT_CLASSIFICATION	0.9999999955631541	WITHOUT_CLASSIFICATION	4.4368458755274405E-9	DEFECT
// process pattern between stars. padIdxStart and patIdxEnd point // always to a '*'.	WITHOUT_CLASSIFICATION	0.9999998896067479	WITHOUT_CLASSIFICATION	1.1039325206148762E-7	DEFECT
// Two stars next to each other, skip the first one.	WITHOUT_CLASSIFICATION	0.9999997082883051	WITHOUT_CLASSIFICATION	2.9171169487411043E-7	DEFECT
// All characters in the string are used. Check if only '*'s are left // in the pattern. If so, we succeeded. Otherwise failure.	WITHOUT_CLASSIFICATION	0.9999999992543416	WITHOUT_CLASSIFICATION	7.456583912966015E-10	DEFECT
/*++*/	WITHOUT_CLASSIFICATION	0.9997770983683707	WITHOUT_CLASSIFICATION	2.2290163162933262E-4	DEFECT
// Creation is done here rather than in isSelected() because some // containers may do a validation pass before running isSelected(), // but we need to check for the existence of the created class.	WITHOUT_CLASSIFICATION	0.9999998293606457	WITHOUT_CLASSIFICATION	1.7063935421656977E-7	DEFECT
// We know that dynselector must be non-null if no error message	WITHOUT_CLASSIFICATION	0.9999999795585592	WITHOUT_CLASSIFICATION	2.0441440815754316E-8	DEFECT
// Deal with if and unless properties first	WITHOUT_CLASSIFICATION	0.999999839730985	WITHOUT_CLASSIFICATION	1.6026901496661427E-7	DEFECT
// -----  attributes  -----	WITHOUT_CLASSIFICATION	0.9999999280145138	WITHOUT_CLASSIFICATION	7.198548614817112E-8	DEFECT
// ----- internal member variables -----	WITHOUT_CLASSIFICATION	0.9999998840723692	WITHOUT_CLASSIFICATION	1.1592763074101338E-7	DEFECT
// -----  constructors  -----	WITHOUT_CLASSIFICATION	0.9999999715188115	WITHOUT_CLASSIFICATION	2.8481188531631596E-8	DEFECT
// ----- configuration  -----	WITHOUT_CLASSIFICATION	0.9999997096007431	WITHOUT_CLASSIFICATION	2.903992568133125E-7	DEFECT
// normal use inside Ant	WITHOUT_CLASSIFICATION	0.999999952414786	WITHOUT_CLASSIFICATION	4.7585214030232255E-8	DEFECT
// set self as a BuildListener to delay cachefile saves	WITHOUT_CLASSIFICATION	0.9999993957109956	WITHOUT_CLASSIFICATION	6.042890044334698E-7	DEFECT
// no reference to project - e.g. during normal JUnit tests	WITHOUT_CLASSIFICATION	0.999999966602163	WITHOUT_CLASSIFICATION	3.339783702250473E-8	DEFECT
// this is a *.* parameter for later use	WITHOUT_CLASSIFICATION	0.9999800330589138	WITHOUT_CLASSIFICATION	1.9966941086154644E-5	DEFECT
// specify the algorithm classname	WITHOUT_CLASSIFICATION	0.999994632138107	WITHOUT_CLASSIFICATION	5.367861893008715E-6	DEFECT
// use Algorithm defined via name	WITHOUT_CLASSIFICATION	0.9999999399467006	WITHOUT_CLASSIFICATION	6.005329947943129E-8	DEFECT
// use Algorithm specified by classname	WITHOUT_CLASSIFICATION	0.9999988609601935	WITHOUT_CLASSIFICATION	1.1390398065015468E-6	DEFECT
// nothing specified - use default	WITHOUT_CLASSIFICATION	0.9999999991069856	WITHOUT_CLASSIFICATION	8.930143429385952E-10	DEFECT
// else nothing to do	WITHOUT_CLASSIFICATION	0.9999996046682352	WITHOUT_CLASSIFICATION	3.9533176471809984E-7	DEFECT
// use Algorithm defined via name	WITHOUT_CLASSIFICATION	0.9999999399467006	WITHOUT_CLASSIFICATION	6.005329947943129E-8	DEFECT
// // -----  Set the main attributes, pattern '*'  ----- //	WITHOUT_CLASSIFICATION	0.9999996912089121	WITHOUT_CLASSIFICATION	3.087910879199522E-7	DEFECT
// use Algorithm specified by classname	WITHOUT_CLASSIFICATION	0.9999988609601935	WITHOUT_CLASSIFICATION	1.1390398065015468E-6	DEFECT
// nothing specified - use default	WITHOUT_CLASSIFICATION	0.9999999991069856	WITHOUT_CLASSIFICATION	8.930143429385952E-10	DEFECT
// specify the cache classname	WITHOUT_CLASSIFICATION	0.9999998222740054	WITHOUT_CLASSIFICATION	1.7772599454120526E-7	DEFECT
// use Cache defined via name	WITHOUT_CLASSIFICATION	0.9999999994451392	WITHOUT_CLASSIFICATION	5.548607604101443E-10	DEFECT
// use Cache specified by classname	WITHOUT_CLASSIFICATION	0.9999999132523368	WITHOUT_CLASSIFICATION	8.674766317326235E-8	DEFECT
// specify the comparator classname	WITHOUT_CLASSIFICATION	0.999999734256465	WITHOUT_CLASSIFICATION	2.6574353498318513E-7	DEFECT
// // -----  Set the special attributes, pattern '*.*'  ----- //	WITHOUT_CLASSIFICATION	0.9999998766262453	WITHOUT_CLASSIFICATION	1.2337375466270493E-7	DEFECT
// load the specified class	WITHOUT_CLASSIFICATION	0.9999997749315597	WITHOUT_CLASSIFICATION	2.250684402983374E-7	DEFECT
// -----  the selection work  -----	WITHOUT_CLASSIFICATION	0.9998230352414759	WITHOUT_CLASSIFICATION	1.7696475852424824E-4	DEFECT
// We have a 'resourced' file, so reconvert it and use // the 'old' implementation.	WITHOUT_CLASSIFICATION	0.9999996171040318	WITHOUT_CLASSIFICATION	3.828959681200536E-7	DEFECT
// You can not compute a value for a directory	WITHOUT_CLASSIFICATION	0.9999689211995058	WITHOUT_CLASSIFICATION	3.107880049424571E-5	DEFECT
// Get the values and do the comparison	WITHOUT_CLASSIFICATION	0.9999992901602045	WITHOUT_CLASSIFICATION	7.098397955501477E-7	DEFECT
// Maybe update the cache	WITHOUT_CLASSIFICATION	0.9999998075608695	WITHOUT_CLASSIFICATION	1.9243913060610048E-7	DEFECT
// -----  attribute and nested element support  -----	WITHOUT_CLASSIFICATION	0.9999996874213011	WITHOUT_CLASSIFICATION	3.125786989984248E-7	DEFECT
// the usual classloader	WITHOUT_CLASSIFICATION	0.9999990634534202	WITHOUT_CLASSIFICATION	9.365465797007901E-7	DEFECT
// additional use the provided classpath	WITHOUT_CLASSIFICATION	0.9999993754216434	WITHOUT_CLASSIFICATION	6.245783565640558E-7	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9999973739209252	WITHOUT_CLASSIFICATION	2.626079074631375E-6	DEFECT
// ----- 'beautiful' output -----	WITHOUT_CLASSIFICATION	0.9999997845920824	WITHOUT_CLASSIFICATION	2.1540791757105694E-7	DEFECT
// ----- BuildListener interface methods -----	WITHOUT_CLASSIFICATION	0.9999940091483864	WITHOUT_CLASSIFICATION	5.990851613449954E-6	DEFECT
// The EnumeratedAttributes for the three interface implementations. // Name-Classname mapping is done in the configure() method.	WITHOUT_CLASSIFICATION	0.999995815923506	WITHOUT_CLASSIFICATION	4.184076493991867E-6	DEFECT
// -----  member variables  -----	WITHOUT_CLASSIFICATION	0.9999998251665799	WITHOUT_CLASSIFICATION	1.7483342005045895E-7	DEFECT
// -----  member variables  -----	WITHOUT_CLASSIFICATION	0.9999998251665799	WITHOUT_CLASSIFICATION	1.7483342005045895E-7	DEFECT
// -----  Algorithm-Configuration  -----	WITHOUT_CLASSIFICATION	0.999997803502363	WITHOUT_CLASSIFICATION	2.1964976370359954E-6	DEFECT
// -----  Algorithm-Configuration  -----	WITHOUT_CLASSIFICATION	0.999997803502363	WITHOUT_CLASSIFICATION	2.1964976370359954E-6	DEFECT
// -----  Logic  -----	WITHOUT_CLASSIFICATION	0.9999986052184373	WITHOUT_CLASSIFICATION	1.3947815627707655E-6	DEFECT
// -----  Logic  -----	WITHOUT_CLASSIFICATION	0.9999986052184373	WITHOUT_CLASSIFICATION	1.3947815627707655E-6	DEFECT
// implementation adapted from ...taskdefs.Checksum, thanks to Magesh for hint	WITHOUT_CLASSIFICATION	0.9999998201249343	WITHOUT_CLASSIFICATION	1.7987506581556243E-7	DEFECT
// Read the file	WITHOUT_CLASSIFICATION	0.9999951217418678	WITHOUT_CLASSIFICATION	4.878258132159714E-6	DEFECT
// -----  member variables - configuration  -----	WITHOUT_CLASSIFICATION	0.9999998843125246	WITHOUT_CLASSIFICATION	1.1568747539773722E-7	DEFECT
// -----  member variables - internal use  -----	WITHOUT_CLASSIFICATION	0.999999877858242	WITHOUT_CLASSIFICATION	1.2214175808472032E-7	DEFECT
// -----  Constructors  -----	WITHOUT_CLASSIFICATION	0.9999999727221563	WITHOUT_CLASSIFICATION	2.727784370789504E-8	DEFECT
// -----  Cache-Configuration  -----	WITHOUT_CLASSIFICATION	0.9999995371965953	WITHOUT_CLASSIFICATION	4.6280340462159846E-7	DEFECT
// -----  Data Access	WITHOUT_CLASSIFICATION	0.9999995877657311	WITHOUT_CLASSIFICATION	4.1223426883369017E-7	DEFECT
// after loading the cache is up to date with the file	WITHOUT_CLASSIFICATION	0.9999998174496212	WITHOUT_CLASSIFICATION	1.825503787950752E-7	DEFECT
// -----  additional  -----	WITHOUT_CLASSIFICATION	0.9999855878371764	WITHOUT_CLASSIFICATION	1.4412162823641751E-5	DEFECT
// swallow as this simply doesn't seem to be Kaffe	WITHOUT_CLASSIFICATION	0.9998627893877754	WITHOUT_CLASSIFICATION	1.3721061222468075E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999920118448	WITHOUT_CLASSIFICATION	7.988155193624096E-8	DEFECT
// find the line breaks and pass other chars through in blocks	WITHOUT_CLASSIFICATION	0.9999947565970261	WITHOUT_CLASSIFICATION	5.243402973956091E-6	DEFECT
// either end of buffer or a line separator char	WITHOUT_CLASSIFICATION	0.999999956050992	WITHOUT_CLASSIFICATION	4.3949008054914563E-8	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9999971163476059	WITHOUT_CLASSIFICATION	2.8836523940921245E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999734784456	WITHOUT_CLASSIFICATION	2.6521554394295955E-8	DEFECT
// Because the content is only read the file will not be damaged. I tested // with JPG, ZIP and PDF as binary files.	WITHOUT_CLASSIFICATION	0.9999992728912238	WITHOUT_CLASSIFICATION	7.271087763140342E-7	DEFECT
// don't need the opposite check as the Dictionaries have the // same size, so we've also covered all keys of d2 already.	WITHOUT_CLASSIFICATION	0.9999999882659807	WITHOUT_CLASSIFICATION	1.1734019348116847E-8	DEFECT
//log uptodateness of all targets:	WITHOUT_CLASSIFICATION	0.9999999131853257	WITHOUT_CLASSIFICATION	8.681467431635637E-8	DEFECT
// CheckStyle:ParameterNumberCheck OFF - bc	WITHOUT_CLASSIFICATION	0.999999944684761	WITHOUT_CLASSIFICATION	5.531523901783986E-8	DEFECT
// this should not happen, because the lines are // returned with the end of line delimiter	WITHOUT_CLASSIFICATION	0.9999975446336752	WITHOUT_CLASSIFICATION	2.4553663249207156E-6	DEFECT
// CheckStyle:ParameterNumberCheck ON	WITHOUT_CLASSIFICATION	0.9999999744007043	WITHOUT_CLASSIFICATION	2.5599295723104776E-8	DEFECT
// two not existing files are equal	WITHOUT_CLASSIFICATION	0.9999951545782662	WITHOUT_CLASSIFICATION	4.845421733821213E-6	DEFECT
// should the following two be switched?  If r1 and r2 refer to the same file, // isn't their content equal regardless of whether that file is a directory?	WITHOUT_CLASSIFICATION	0.9999999173917132	WITHOUT_CLASSIFICATION	8.260828686147755E-8	DEFECT
// don't want to compare directory contents for now	WITHOUT_CLASSIFICATION	0.9999306124444354	WITHOUT_CLASSIFICATION	6.938755556464754E-5	DEFECT
//as far as we know	WITHOUT_CLASSIFICATION	0.999997431548736	WITHOUT_CLASSIFICATION	2.5684512639349562E-6	DEFECT
//ignore release of an already-closed funnel	WITHOUT_CLASSIFICATION	0.9999999984270805	WITHOUT_CLASSIFICATION	1.572919520817834E-9	DEFECT
// Write child elements and text	WITHOUT_CLASSIFICATION	0.9999999556045875	WITHOUT_CLASSIFICATION	4.4395412350251995E-8	DEFECT
// Write indent characters	WITHOUT_CLASSIFICATION	0.9999999959036985	WITHOUT_CLASSIFICATION	4.0963014996854986E-9	DEFECT
// Write element	WITHOUT_CLASSIFICATION	0.9999990162068613	WITHOUT_CLASSIFICATION	9.837931386978299E-7	DEFECT
// steal default namespace	WITHOUT_CLASSIFICATION	0.9999999817939469	WITHOUT_CLASSIFICATION	1.820605311585365E-8	DEFECT
// Write attributes	WITHOUT_CLASSIFICATION	0.9999999196935185	WITHOUT_CLASSIFICATION	8.030648141353701E-8	DEFECT
// Write element close	WITHOUT_CLASSIFICATION	0.999999979897584	WITHOUT_CLASSIFICATION	2.010241589144502E-8	DEFECT
// relative path	WITHOUT_CLASSIFICATION	0.9999998585731497	WITHOUT_CLASSIFICATION	1.414268503696152E-7	DEFECT
// Fall tru	WITHOUT_CLASSIFICATION	0.9999954293494907	WITHOUT_CLASSIFICATION	4.5706505093096635E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999734784456	WITHOUT_CLASSIFICATION	2.6521554394295955E-8	DEFECT
// Determine the Java version by looking at available classes // java.net.Proxy was introduced in JDK 1.5 // java.lang.CharSequence was introduced in JDK 1.4 // java.lang.StrictMath was introduced in JDK 1.3 // java.lang.ThreadLocal was introduced in JDK 1.2 // java.lang.Void was introduced in JDK 1.1 // Count up version until a NoClassDefFoundError ends the try	WITHOUT_CLASSIFICATION	0.9999997829008955	WITHOUT_CLASSIFICATION	2.1709910438093468E-7	DEFECT
// swallow as we've hit the max class version that // we have	WITHOUT_CLASSIFICATION	0.9999987358934761	WITHOUT_CLASSIFICATION	1.264106524015616E-6	DEFECT
// Extrapolating from: // "NetWare may have a "java" in that directory, but 99% of // the time, you don't want to execute it" -- Jeff Tulley // <JTULLEY@novell.com>	WITHOUT_CLASSIFICATION	0.9996135736637276	WITHOUT_CLASSIFICATION	3.864263362723606E-4	DEFECT
// On IBM's JDK 1.2 the directory layout is different, 1.3 follows // Sun's layout.	WITHOUT_CLASSIFICATION	0.9994690687004456	WITHOUT_CLASSIFICATION	5.309312995544614E-4	DEFECT
// On IBM's JDK 1.2 the directory layout is different, 1.3 follows // Sun's layout.	WITHOUT_CLASSIFICATION	0.9994690687004456	WITHOUT_CLASSIFICATION	5.309312995544614E-4	DEFECT
// Unfortunately on Windows java.home doesn't always refer // to the correct location, so we need to fall back to // assuming java is somewhere on the PATH.	WITHOUT_CLASSIFICATION	0.9987974302298515	WITHOUT_CLASSIFICATION	0.0012025697701485293	DEFECT
// fall back to JRE bin directory, also catches JDK 1.0 and 1.1 // where java.home points to the root of the JDK and Mac OS X where // the whole directory layout is different from Sun's	WITHOUT_CLASSIFICATION	0.9999918173640627	WITHOUT_CLASSIFICATION	8.182635937226433E-6	DEFECT
// This is the most common extension case - exe for windows and OS/2, // nothing for *nix.	WITHOUT_CLASSIFICATION	0.9997623572299065	WITHOUT_CLASSIFICATION	2.3764277009344703E-4	DEFECT
//In Java1.5, the apache stuff moved.	WITHOUT_CLASSIFICATION	0.9999935201463478	WITHOUT_CLASSIFICATION	6.479853652258078E-6	DEFECT
//fall through.	WITHOUT_CLASSIFICATION	0.9999347008932074	WITHOUT_CLASSIFICATION	6.529910679264576E-5	DEFECT
// fall through	WITHOUT_CLASSIFICATION	0.9999829562496656	WITHOUT_CLASSIFICATION	1.7043750334415944E-5	DEFECT
// fall through	WITHOUT_CLASSIFICATION	0.9999829562496656	WITHOUT_CLASSIFICATION	1.7043750334415944E-5	DEFECT
// fall through	WITHOUT_CLASSIFICATION	0.9999829562496656	WITHOUT_CLASSIFICATION	1.7043750334415944E-5	DEFECT
// are there any here that we forgot? // fall through	WITHOUT_CLASSIFICATION	0.9999672567693655	WITHOUT_CLASSIFICATION	3.274323063450231E-5	DEFECT
//things like sun.reflection, sun.misc, sun.net	WITHOUT_CLASSIFICATION	0.9999831171922743	WITHOUT_CLASSIFICATION	1.688280772569463E-5	DEFECT
//things like sun.reflection, sun.misc, sun.net	WITHOUT_CLASSIFICATION	0.9999831171922743	WITHOUT_CLASSIFICATION	1.688280772569463E-5	DEFECT
//Strip '.' token	WITHOUT_CLASSIFICATION	0.9999903023754987	WITHOUT_CLASSIFICATION	9.697624501282878E-6	DEFECT
//If it ended in a dot, throw an exception	WITHOUT_CLASSIFICATION	0.9990112141577095	WITHOUT_CLASSIFICATION	9.887858422904998E-4	DEFECT
// Exact match	WITHOUT_CLASSIFICATION	0.9999990337999346	WITHOUT_CLASSIFICATION	9.662000653079033E-7	DEFECT
// Exact match	WITHOUT_CLASSIFICATION	0.9999990337999346	WITHOUT_CLASSIFICATION	9.662000653079033E-7	DEFECT
// Exact match	WITHOUT_CLASSIFICATION	0.9999990337999346	WITHOUT_CLASSIFICATION	9.662000653079033E-7	DEFECT
// might read too much	WITHOUT_CLASSIFICATION	0.9999972481148713	WITHOUT_CLASSIFICATION	2.7518851286566446E-6	DEFECT
// would be imprecise	WITHOUT_CLASSIFICATION	0.9999964345254253	WITHOUT_CLASSIFICATION	3.5654745747077806E-6	DEFECT
//last character isn't a digit	WITHOUT_CLASSIFICATION	0.9999997030481824	WITHOUT_CLASSIFICATION	2.9695181757503505E-7	DEFECT
// write out the number of characters encoded in this line.	WITHOUT_CLASSIFICATION	0.9999999855619538	WITHOUT_CLASSIFICATION	1.4438046076363539E-8	DEFECT
// set the padding defaults	WITHOUT_CLASSIFICATION	0.999999876161513	WITHOUT_CLASSIFICATION	1.238384869622978E-7	DEFECT
// get the next 3 bytes (if we have them)	WITHOUT_CLASSIFICATION	0.9999984199071594	WITHOUT_CLASSIFICATION	1.5800928405161713E-6	DEFECT
// OK, Java 1.3.	WITHOUT_CLASSIFICATION	0.9999995674518795	WITHOUT_CLASSIFICATION	4.3254812047544754E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999920118448	WITHOUT_CLASSIFICATION	7.988155193624096E-8	DEFECT
// CheckStyle:ConstantNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9999996970710566	WITHOUT_CLASSIFICATION	3.029289433627634E-7	DEFECT
// CheckStyle:ConstantNameCheck ON	WITHOUT_CLASSIFICATION	0.9999998120296367	WITHOUT_CLASSIFICATION	1.8797036325918576E-7	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9999971163476059	WITHOUT_CLASSIFICATION	2.8836523940921245E-6	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9999971163476059	WITHOUT_CLASSIFICATION	2.8836523940921245E-6	DEFECT
// #8031: first try Java 1.4.	WITHOUT_CLASSIFICATION	0.9999940964654737	WITHOUT_CLASSIFICATION	5.9035345264236024E-6	DEFECT
// Reflection problems? Should not happen, debug.	WITHOUT_CLASSIFICATION	0.9940637043606935	WITHOUT_CLASSIFICATION	0.005936295639306558	DEFECT
// CheckStyle:ParameterNumberCheck OFF - bc	WITHOUT_CLASSIFICATION	0.999999944684761	WITHOUT_CLASSIFICATION	5.531523901783986E-8	DEFECT
// CheckStyle:ParameterNumberCheck ON	WITHOUT_CLASSIFICATION	0.9999999744007043	WITHOUT_CLASSIFICATION	2.5599295723104776E-8	DEFECT
// depending on the implementation the actual RE won't // get instantiated in the constructor.	WITHOUT_CLASSIFICATION	0.9999933294014326	WITHOUT_CLASSIFICATION	6.670598567387109E-6	DEFECT
// terminate with a linefeed alone	WITHOUT_CLASSIFICATION	0.9999990891434996	WITHOUT_CLASSIFICATION	9.108565005157033E-7	DEFECT
// NotReached	WITHOUT_CLASSIFICATION	0.9999994845760515	WITHOUT_CLASSIFICATION	5.154239484926931E-7	DEFECT
//  0 to  7 //  8 to 15 // 16 to 23 // 24 to 31 // 32 to 39 // 40 to 47 // 48 to 55 // 56 to 63	WITHOUT_CLASSIFICATION	0.999805324747481	WITHOUT_CLASSIFICATION	1.9467525251909423E-4	DEFECT
// store the octets	WITHOUT_CLASSIFICATION	0.9999999617263686	WITHOUT_CLASSIFICATION	3.827363134068025E-8	DEFECT
// store the octets	WITHOUT_CLASSIFICATION	0.9999999617263686	WITHOUT_CLASSIFICATION	3.827363134068025E-8	DEFECT
// store the octets	WITHOUT_CLASSIFICATION	0.9999999617263686	WITHOUT_CLASSIFICATION	3.827363134068025E-8	DEFECT
// padding	WITHOUT_CLASSIFICATION	0.9999946887796891	WITHOUT_CLASSIFICATION	5.311220310884487E-6	DEFECT
// padding	WITHOUT_CLASSIFICATION	0.9999946887796891	WITHOUT_CLASSIFICATION	5.311220310884487E-6	DEFECT
// magic property	WITHOUT_CLASSIFICATION	0.9999974711959069	WITHOUT_CLASSIFICATION	2.5288040931667932E-6	DEFECT
//only text nodes that are non null after property expansion are added	WITHOUT_CLASSIFICATION	0.9999821544011894	WITHOUT_CLASSIFICATION	1.7845598810595306E-5	DEFECT
//no need to synchronize, as Vector is always synchronized	WITHOUT_CLASSIFICATION	0.9999984237123457	WITHOUT_CLASSIFICATION	1.5762876543409326E-6	DEFECT
// do not close the stream	WITHOUT_CLASSIFICATION	0.9999998994459701	WITHOUT_CLASSIFICATION	1.0055402986419055E-7	DEFECT
//Empty	WITHOUT_CLASSIFICATION	0.9999578118045503	WITHOUT_CLASSIFICATION	4.2188195449739106E-5	DEFECT
//Empty	WITHOUT_CLASSIFICATION	0.9999578118045503	WITHOUT_CLASSIFICATION	4.2188195449739106E-5	DEFECT
//get some non-crypto-grade randomness from various places.	WITHOUT_CLASSIFICATION	0.9999999409582302	WITHOUT_CLASSIFICATION	5.90417698148176E-8	DEFECT
// Cannot resolve it, so skip it.	WITHOUT_CLASSIFICATION	0.9999996919891816	WITHOUT_CLASSIFICATION	3.0801081834569455E-7	DEFECT
// plain component	WITHOUT_CLASSIFICATION	0.9999999268695351	WITHOUT_CLASSIFICATION	7.313046489820715E-8	DEFECT
// make sure we are dealing with an absolute path	WITHOUT_CLASSIFICATION	0.9999998258245377	WITHOUT_CLASSIFICATION	1.741754622220009E-7	DEFECT
//remove the initial separator; the root has it.	WITHOUT_CLASSIFICATION	0.9999993417274777	WITHOUT_CLASSIFICATION	6.582725221966826E-7	DEFECT
// UNC drive	WITHOUT_CLASSIFICATION	0.9999997894531526	WITHOUT_CLASSIFICATION	2.1054684746400212E-7	DEFECT
// format: "DEVICE:[DIR.SUBDIR]FILE"	WITHOUT_CLASSIFICATION	0.9999973106279155	WITHOUT_CLASSIFICATION	2.6893720844493764E-6	DEFECT
// treat directories specified using .DIR syntax as files	WITHOUT_CLASSIFICATION	0.9999999066021266	WITHOUT_CLASSIFICATION	9.33978734576842E-8	DEFECT
// add an extra slash for filesystems with drive-specifiers	WITHOUT_CLASSIFICATION	0.9999998359233956	WITHOUT_CLASSIFICATION	1.6407660452578203E-7	DEFECT
//do a check for the destination file existing	WITHOUT_CLASSIFICATION	0.9999999917771707	WITHOUT_CLASSIFICATION	8.22282924371213E-9	DEFECT
// execute the script	WITHOUT_CLASSIFICATION	0.9999997162912162	WITHOUT_CLASSIFICATION	2.8370878387761234E-7	DEFECT
// do nothing by default	WITHOUT_CLASSIFICATION	0.999999787171763	WITHOUT_CLASSIFICATION	2.1282823696034686E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999920118448	WITHOUT_CLASSIFICATION	7.988155193624096E-8	DEFECT
// NotReached	WITHOUT_CLASSIFICATION	0.9999994845760515	WITHOUT_CLASSIFICATION	5.154239484926931E-7	DEFECT
// now recover all the dependencies collected and add to the list.	WITHOUT_CLASSIFICATION	0.9999999669095001	WITHOUT_CLASSIFICATION	3.3090499924642094E-8	DEFECT
//inherit doc	WITHOUT_CLASSIFICATION	0.9999937179608626	WITHOUT_CLASSIFICATION	6.282039137521199E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999734784456	WITHOUT_CLASSIFICATION	2.6521554394295955E-8	DEFECT
// NotReached	WITHOUT_CLASSIFICATION	0.9999994845760515	WITHOUT_CLASSIFICATION	5.154239484926931E-7	DEFECT
// do not close the stream	WITHOUT_CLASSIFICATION	0.9999998994459701	WITHOUT_CLASSIFICATION	1.0055402986419055E-7	DEFECT
// on cygwin, our current directory can be a UNC; // assume user.dir is absolute or all hell breaks loose...	WITHOUT_CLASSIFICATION	0.9996458169868051	WITHOUT_CLASSIFICATION	3.541830131948236E-4	DEFECT
// not before the filesystem root and not after it, since root // already contains one	WITHOUT_CLASSIFICATION	0.9999999530093019	WITHOUT_CLASSIFICATION	4.699069799998946E-8	DEFECT
// ensure that l ends with a / // so we never think /foo was a parent directory of /foobar	WITHOUT_CLASSIFICATION	0.9999994533519685	WITHOUT_CLASSIFICATION	5.466480315615295E-7	DEFECT
// ensure that l ends with a / // so we never think /foo was a parent directory of /foobar	WITHOUT_CLASSIFICATION	0.9999994533519685	WITHOUT_CLASSIFICATION	5.466480315615295E-7	DEFECT
// build the path stack info to compare	WITHOUT_CLASSIFICATION	0.9999944401134323	WITHOUT_CLASSIFICATION	5.5598865676076225E-6	DEFECT
// not the same device (would be "" on Linux/Unix)	WITHOUT_CLASSIFICATION	0.9999984029618381	WITHOUT_CLASSIFICATION	1.5970381619093366E-6	DEFECT
// no comparison possible	WITHOUT_CLASSIFICATION	0.9999998706631156	WITHOUT_CLASSIFICATION	1.2933688432348833E-7	DEFECT
// get index of parts which are equal	WITHOUT_CLASSIFICATION	0.9999977907178759	WITHOUT_CLASSIFICATION	2.2092821240661835E-6	DEFECT
// if "from" part is longer, fill it up with ".." // to reach path which is equal to both paths	WITHOUT_CLASSIFICATION	0.9999999995550706	WITHOUT_CLASSIFICATION	4.449293800953658E-10	DEFECT
// fill it up path with parts which were not equal	WITHOUT_CLASSIFICATION	0.9999999226063773	WITHOUT_CLASSIFICATION	7.739362277216412E-8	DEFECT
// can safely use '/' because Windows understands '/' as separator	WITHOUT_CLASSIFICATION	0.999998571717422	WITHOUT_CLASSIFICATION	1.4282825779996945E-6	DEFECT
// base directory of the fileset	WITHOUT_CLASSIFICATION	0.9999998735402806	WITHOUT_CLASSIFICATION	1.264597192385976E-7	DEFECT
// build the list of sources which are out of date with // respect to the target	WITHOUT_CLASSIFICATION	0.9999999993610752	WITHOUT_CLASSIFICATION	6.3892476345037E-10	DEFECT
// code from Magesh moved from DefaultLogger and slightly modified	WITHOUT_CLASSIFICATION	0.9999991318535335	WITHOUT_CLASSIFICATION	8.681464665452679E-7	DEFECT
//if you cannot read it, you won't be able to write it either	WITHOUT_CLASSIFICATION	0.9999220301993721	WITHOUT_CLASSIFICATION	7.796980062789086E-5	DEFECT
// must be a zip of some sort	WITHOUT_CLASSIFICATION	0.9999999843048043	WITHOUT_CLASSIFICATION	1.5695195692338826E-8	DEFECT
// does the class have a package structure	WITHOUT_CLASSIFICATION	0.9999982338916449	WITHOUT_CLASSIFICATION	1.7661083551717768E-6	DEFECT
// check if the package structure is more than 1 level deep	WITHOUT_CLASSIFICATION	0.9999999988818854	WITHOUT_CLASSIFICATION	1.1181145732630766E-9	DEFECT
// class name has more than 1 package level 'com.company.Class'	WITHOUT_CLASSIFICATION	0.9999986016146061	WITHOUT_CLASSIFICATION	1.3983853939177726E-6	DEFECT
// class name has only 1 package level 'package.Class'	WITHOUT_CLASSIFICATION	0.9999989375286855	WITHOUT_CLASSIFICATION	1.062471314397996E-6	DEFECT
// Add the class in dotted notation 'com.company.Class'	WITHOUT_CLASSIFICATION	0.9999908215095809	WITHOUT_CLASSIFICATION	9.178490419125487E-6	DEFECT
// Add a class with no package 'Class'	WITHOUT_CLASSIFICATION	0.9999993337430986	WITHOUT_CLASSIFICATION	6.662569014336557E-7	DEFECT
// force BCEL classes to load now	WITHOUT_CLASSIFICATION	0.9999994214591151	WITHOUT_CLASSIFICATION	5.785408849075813E-7	DEFECT
// force BCEL classes to load now	WITHOUT_CLASSIFICATION	0.9999994214591151	WITHOUT_CLASSIFICATION	5.785408849075813E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999920118448	WITHOUT_CLASSIFICATION	7.988155193624096E-8	DEFECT
// NotReached	WITHOUT_CLASSIFICATION	0.9999994845760515	WITHOUT_CLASSIFICATION	5.154239484926931E-7	DEFECT
// we get the root classes and build up a set of // classes upon which they depend	WITHOUT_CLASSIFICATION	0.9999986190337179	WITHOUT_CLASSIFICATION	1.3809662821444167E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999734784456	WITHOUT_CLASSIFICATION	2.6521554394295955E-8	DEFECT
// execute the script	WITHOUT_CLASSIFICATION	0.9999997162912162	WITHOUT_CLASSIFICATION	2.8370878387761234E-7	DEFECT
//log security exceptions and continue; it aint that //important and may be quite common running Ant embedded.	WITHOUT_CLASSIFICATION	0.999996047830778	WITHOUT_CLASSIFICATION	3.952169222031786E-6	DEFECT
// we look through the classpath elements. If the element is a dir // we look for the file. IF it is a zip, we look for the zip entry	WITHOUT_CLASSIFICATION	0.9999998687670874	WITHOUT_CLASSIFICATION	1.312329125523577E-7	DEFECT
// we look through the source path elements. If the element is a dir // we look for the file. If it is a zip, we look for the zip entry. // This isn't normal for source paths but we get it for free	WITHOUT_CLASSIFICATION	0.9999994420322872	WITHOUT_CLASSIFICATION	5.579677127776693E-7	DEFECT
// first letter of the previous segment of the class name 'Class' // is upper case ascii. so according to the spec it's an inner class	WITHOUT_CLASSIFICATION	0.999999983073166	WITHOUT_CLASSIFICATION	1.692683401849625E-8	DEFECT
// Register Groovy ourselves, since BSF did not // natively support it in versions previous to 1.2.4.	WITHOUT_CLASSIFICATION	0.9997754661018677	WITHOUT_CLASSIFICATION	2.2453389813231043E-4	DEFECT
// execute the script	WITHOUT_CLASSIFICATION	0.9999997162912162	WITHOUT_CLASSIFICATION	2.8370878387761234E-7	DEFECT
// translate \1 to $1 so that the Perl5Substitution will work	WITHOUT_CLASSIFICATION	0.9999469809601065	WITHOUT_CLASSIFICATION	5.301903989362513E-5	DEFECT
// BSF uses a hashtable to store values // so cannot declareBean with a null value // So need to remove any bean of this name as // that bean should not be visible	WITHOUT_CLASSIFICATION	0.9998005792867412	WITHOUT_CLASSIFICATION	1.9942071325882867E-4	DEFECT
// no permission here	WITHOUT_CLASSIFICATION	0.9999965418820225	WITHOUT_CLASSIFICATION	3.458117977535742E-6	DEFECT
// compute the compiler options based on the input options first	WITHOUT_CLASSIFICATION	0.9999999075410406	WITHOUT_CLASSIFICATION	9.245895941539032E-8	DEFECT
// treat non-matching groups as empty matches	WITHOUT_CLASSIFICATION	0.9999998959140949	WITHOUT_CLASSIFICATION	1.0408590509544207E-7	DEFECT
// be strict about line separator	WITHOUT_CLASSIFICATION	0.9999999161589457	WITHOUT_CLASSIFICATION	8.384105430233896E-8	DEFECT
// translate \1 to $(1) so that the Matcher will work	WITHOUT_CLASSIFICATION	0.999972039561011	WITHOUT_CLASSIFICATION	2.796043898906163E-5	DEFECT
// Do the substitution	WITHOUT_CLASSIFICATION	0.9999997753473006	WITHOUT_CLASSIFICATION	2.2465269943279242E-7	DEFECT
// replace \1 with the corresponding group	WITHOUT_CLASSIFICATION	0.9999756625830661	WITHOUT_CLASSIFICATION	2.4337416933890544E-5	DEFECT
/*     * Used when sorting.  If too many long comparisons     * happen, we stop sorting, randomise the block     * slightly, and try again.     */	WITHOUT_CLASSIFICATION	0.9999993266970864	WITHOUT_CLASSIFICATION	6.733029137247332E-7	DEFECT
/*          Nodes and heap entries run from 1.  Entry 0          for both the heap and nodes is a sentinel.        */	WITHOUT_CLASSIFICATION	0.9999995716549733	WITHOUT_CLASSIFICATION	4.2834502667147844E-7	DEFECT
/*          Nodes and heap entries run from 1.  Entry 0          for both the heap and nodes is a sentinel.        */	WITHOUT_CLASSIFICATION	0.9999995716549733	WITHOUT_CLASSIFICATION	4.2834502667147844E-7	DEFECT
//        blockNo++;	WITHOUT_CLASSIFICATION	0.9999979430518583	WITHOUT_CLASSIFICATION	2.0569481416410733E-6	DEFECT
// // When we get here we have EITHER: // o An empty "assemble" buffer. // o No bytes to write (numToWrite == 0) //	WITHOUT_CLASSIFICATION	0.9999972539068355	WITHOUT_CLASSIFICATION	2.746093164477418E-6	DEFECT
/* Write `magic' bytes h indicating file-format == huffmanised,           followed by a digit indicating blockSize100k.        */	WITHOUT_CLASSIFICATION	0.9999999020015983	WITHOUT_CLASSIFICATION	9.799840162541898E-8	DEFECT
//        ch = 0;	WITHOUT_CLASSIFICATION	0.9999993436067884	WITHOUT_CLASSIFICATION	6.563932114789652E-7	DEFECT
/* 20 is just a paranoia constant */	WITHOUT_CLASSIFICATION	0.9999980657520662	WITHOUT_CLASSIFICATION	1.9342479338996106E-6	DEFECT
// empty block at end of file	WITHOUT_CLASSIFICATION	0.9999995214512044	WITHOUT_CLASSIFICATION	4.785487956121394E-7	DEFECT
/* sort the block and establish posn of original string */	WITHOUT_CLASSIFICATION	0.9999986656838152	WITHOUT_CLASSIFICATION	1.334316184794632E-6	DEFECT
/* Now the block's CRC, so it is in a known place. */	WITHOUT_CLASSIFICATION	0.999999887250156	WITHOUT_CLASSIFICATION	1.1274984401475946E-7	DEFECT
/* Now a single bit indicating randomisation. */	WITHOUT_CLASSIFICATION	0.999976484065645	WITHOUT_CLASSIFICATION	2.3515934355059395E-5	DEFECT
/* Finally, block's contents proper. */	WITHOUT_CLASSIFICATION	0.9999909396085116	WITHOUT_CLASSIFICATION	9.060391488285576E-6	DEFECT
/*          Now another magic 48-bit number, 0x177245385090, to          indicate the end of the last block.  (sqrt(pi), if          you want to know.  I did want to use e, but it contains          too much repetition -- 27 18 28 18 28 46 -- for me          to feel statistically comfortable.  Call me paranoid.)        */	WITHOUT_CLASSIFICATION	0.999999263224603	WITHOUT_CLASSIFICATION	7.367753969578809E-7	DEFECT
// write 8-bit	WITHOUT_CLASSIFICATION	0.9999993240562125	WITHOUT_CLASSIFICATION	6.759437874944691E-7	DEFECT
// write 8-bit	WITHOUT_CLASSIFICATION	0.9999993240562125	WITHOUT_CLASSIFICATION	6.759437874944691E-7	DEFECT
// write 8-bit	WITHOUT_CLASSIFICATION	0.9999993240562125	WITHOUT_CLASSIFICATION	6.759437874944691E-7	DEFECT
// write 8-bit	WITHOUT_CLASSIFICATION	0.9999993240562125	WITHOUT_CLASSIFICATION	6.759437874944691E-7	DEFECT
// write 8-bit	WITHOUT_CLASSIFICATION	0.9999993240562125	WITHOUT_CLASSIFICATION	6.759437874944691E-7	DEFECT
// write 8-bit	WITHOUT_CLASSIFICATION	0.9999993240562125	WITHOUT_CLASSIFICATION	6.759437874944691E-7	DEFECT
/* Decide how many coding tables to use */	WITHOUT_CLASSIFICATION	0.999848689102268	WITHOUT_CLASSIFICATION	1.513108977319852E-4	DEFECT
/* Generate an initial set of coding tables */	WITHOUT_CLASSIFICATION	0.9999999091158386	WITHOUT_CLASSIFICATION	9.088416138190254E-8	DEFECT
/*          Iterate up to N_ITERS times to improve the tables.        */	WITHOUT_CLASSIFICATION	0.999999989282488	WITHOUT_CLASSIFICATION	1.0717511967656676E-8	DEFECT
/* Compute MTF values for the selectors. */	WITHOUT_CLASSIFICATION	0.9999999774091811	WITHOUT_CLASSIFICATION	2.259081893721485E-8	DEFECT
/* Assign actual codes for the tables. */	WITHOUT_CLASSIFICATION	0.9999828914711474	WITHOUT_CLASSIFICATION	1.710852885263143E-5	DEFECT
/* Transmit the mapping table. */	WITHOUT_CLASSIFICATION	0.9999992850173604	WITHOUT_CLASSIFICATION	7.149826396042279E-7	DEFECT
/* Now the selectors. */	WITHOUT_CLASSIFICATION	0.9999998853035326	WITHOUT_CLASSIFICATION	1.1469646744617679E-7	DEFECT
/* Now the coding tables. */	WITHOUT_CLASSIFICATION	0.9999988946135558	WITHOUT_CLASSIFICATION	1.1053864441695516E-6	DEFECT
/* And finally, the block data proper */	WITHOUT_CLASSIFICATION	0.9997367824750378	WITHOUT_CLASSIFICATION	2.6321752496220467E-4	DEFECT
/* Set group start & end marks. */	WITHOUT_CLASSIFICATION	0.999999833855341	WITHOUT_CLASSIFICATION	1.6614465914256376E-7	DEFECT
/*                  Calculate the cost of this group as coded                  by each of the coding tables.                */	WITHOUT_CLASSIFICATION	0.9999999862361619	WITHOUT_CLASSIFICATION	1.3763838079419409E-8	DEFECT
// unrolled version of the else-block	WITHOUT_CLASSIFICATION	0.9999992675679856	WITHOUT_CLASSIFICATION	7.324320144106707E-7	DEFECT
/*                  Find the coding table which is best for this group,                  and record its identity in the selector table.                */	WITHOUT_CLASSIFICATION	0.9999996100451715	WITHOUT_CLASSIFICATION	3.899548284981755E-7	DEFECT
/*                  Increment the symbol frequencies for the selected table.                */	WITHOUT_CLASSIFICATION	0.999999641629137	WITHOUT_CLASSIFICATION	3.583708629351647E-7	DEFECT
/*              Recompute the tables based on the accumulated frequencies.            */	WITHOUT_CLASSIFICATION	0.9999993781820372	WITHOUT_CLASSIFICATION	6.21817962805569E-7	DEFECT
// inlined: bsW(1, inUse[i16 + j] ? 1 : 0);	WITHOUT_CLASSIFICATION	0.9999999399320818	WITHOUT_CLASSIFICATION	6.006791821726615E-8	DEFECT
// inlined: bsW(1, 1);	WITHOUT_CLASSIFICATION	0.9999992916926514	WITHOUT_CLASSIFICATION	7.083073485989846E-7	DEFECT
// inlined: bsW(1, 0);	WITHOUT_CLASSIFICATION	0.9999995331661888	WITHOUT_CLASSIFICATION	4.668338111742761E-7	DEFECT
// inlined: bsW(1, 0);	WITHOUT_CLASSIFICATION	0.9999995331661888	WITHOUT_CLASSIFICATION	4.668338111742761E-7	DEFECT
//bsBuffShadow |= 0 << (32 - bsLiveShadow - 1);	WITHOUT_CLASSIFICATION	0.9999972486490952	WITHOUT_CLASSIFICATION	2.751350904678564E-6	DEFECT
// inlined: bsW(5, curr);	WITHOUT_CLASSIFICATION	0.9999997560538212	WITHOUT_CLASSIFICATION	2.439461788366371E-7	DEFECT
// inlined: bsW(2, 2);	WITHOUT_CLASSIFICATION	0.9999993260621504	WITHOUT_CLASSIFICATION	6.739378495947862E-7	DEFECT
/* 10 */	WITHOUT_CLASSIFICATION	0.9999826753075529	WITHOUT_CLASSIFICATION	1.7324692447057052E-5	DEFECT
// inlined: bsW(2, 3);	WITHOUT_CLASSIFICATION	0.9999991186462661	WITHOUT_CLASSIFICATION	8.813537338740961E-7	DEFECT
/* 11 */	WITHOUT_CLASSIFICATION	0.999989862470275	WITHOUT_CLASSIFICATION	1.0137529724958567E-5	DEFECT
// copy	WITHOUT_CLASSIFICATION	0.9999830590136856	WITHOUT_CLASSIFICATION	1.6940986314481562E-5	DEFECT
// start inline mainGTU	WITHOUT_CLASSIFICATION	0.9999999567630666	WITHOUT_CLASSIFICATION	4.3236933314773584E-8	DEFECT
// following could be done in a loop, but // unrolled it for performance:	WITHOUT_CLASSIFICATION	0.9999992577480669	WITHOUT_CLASSIFICATION	7.422519332227098E-7	DEFECT
// while x > 0	WITHOUT_CLASSIFICATION	0.9999992562844078	WITHOUT_CLASSIFICATION	7.437155921872105E-7	DEFECT
// Set up the 2-byte frequency table	WITHOUT_CLASSIFICATION	0.9999998328761787	WITHOUT_CLASSIFICATION	1.6712382125127936E-7	DEFECT
/*          In the various block-sized structures, live data runs          from 0 to last+NUM_OVERSHOOT_BYTES inclusive.  First,          set up the overshoot area for block.        */	WITHOUT_CLASSIFICATION	0.999999999894946	WITHOUT_CLASSIFICATION	1.0505393607737441E-10	DEFECT
// Complete the initial radix sort:	WITHOUT_CLASSIFICATION	0.9999998292610335	WITHOUT_CLASSIFICATION	1.7073896652095855E-7	DEFECT
/*              Now ftab contains the first loc of every small bucket.              Calculate the running order, from smallest to largest              big bucket.        */	WITHOUT_CLASSIFICATION	0.9999999970615927	WITHOUT_CLASSIFICATION	2.9384073861316383E-9	DEFECT
/*              The main sorting loop.        */	WITHOUT_CLASSIFICATION	0.9999997777694811	WITHOUT_CLASSIFICATION	2.2223051890987366E-7	DEFECT
/*                  Process big buckets, starting with the least full.            */	WITHOUT_CLASSIFICATION	0.9999997886090343	WITHOUT_CLASSIFICATION	2.113909656953003E-7	DEFECT
// Step 1:	WITHOUT_CLASSIFICATION	0.9999969385105397	WITHOUT_CLASSIFICATION	3.0614894602203282E-6	DEFECT
// Step 3:	WITHOUT_CLASSIFICATION	0.999996408138767	WITHOUT_CLASSIFICATION	3.591861233058708E-6	DEFECT
// handle 16 bit signed numbers	WITHOUT_CLASSIFICATION	0.999999996100698	WITHOUT_CLASSIFICATION	3.8993021031999674E-9	DEFECT
// make maps	WITHOUT_CLASSIFICATION	0.9999964719713142	WITHOUT_CLASSIFICATION	3.5280286857212516E-6	DEFECT
/* directory with respect to       */	WITHOUT_CLASSIFICATION	0.9999927216573958	WITHOUT_CLASSIFICATION	7.278342604145559E-6	DEFECT
// with blockSize 900k //     256 byte //     256 byte //    1032 byte //   18002 byte //   18002 byte	WITHOUT_CLASSIFICATION	0.999959421702297	WITHOUT_CLASSIFICATION	4.057829770293806E-5	DEFECT
//     256 byte //    1548 byte //    6192 byte //      24 byte //      12 byte //    6192 byte //       6 byte //      16 byte	WITHOUT_CLASSIFICATION	0.9999606540023518	WITHOUT_CLASSIFICATION	3.9345997648133576E-5	DEFECT
//    4000 byte //    4000 byte //    4000 byte	WITHOUT_CLASSIFICATION	0.9999855662997559	WITHOUT_CLASSIFICATION	1.4433700244135506E-5	DEFECT
//    1024 byte //    1024 byte //     256 byte	WITHOUT_CLASSIFICATION	0.9999870867402382	WITHOUT_CLASSIFICATION	1.291325976181761E-5	DEFECT
//    1040 byte //    2064 byte //    2064 byte	WITHOUT_CLASSIFICATION	0.9999812022511547	WITHOUT_CLASSIFICATION	1.879774884534957E-5	DEFECT
//  262148 byte // ------------ //  333408 byte	WITHOUT_CLASSIFICATION	0.9999863900260347	WITHOUT_CLASSIFICATION	1.3609973965281496E-5	DEFECT
// Just print a message, like the previous versions of this class did	WITHOUT_CLASSIFICATION	0.9999837466158704	WITHOUT_CLASSIFICATION	1.625338412957272E-5	DEFECT
// Variables used by setup* methods exclusively	WITHOUT_CLASSIFICATION	0.9999999826268192	WITHOUT_CLASSIFICATION	1.7373180791412053E-8	DEFECT
// currBlockNo++;	WITHOUT_CLASSIFICATION	0.9999975100279035	WITHOUT_CLASSIFICATION	2.489972096590076E-6	DEFECT
// A bad CRC is considered a fatal error.	WITHOUT_CLASSIFICATION	0.9997982884710862	WITHOUT_CLASSIFICATION	2.017115289137119E-4	DEFECT
/* Receive the mapping table */	WITHOUT_CLASSIFICATION	0.9999932999471914	WITHOUT_CLASSIFICATION	6.700052808533971E-6	DEFECT
/* Now the selectors */	WITHOUT_CLASSIFICATION	0.9999994718553469	WITHOUT_CLASSIFICATION	5.28144653179899E-7	DEFECT
/* Undo the MTF values for the selectors. */	WITHOUT_CLASSIFICATION	0.9999998964884242	WITHOUT_CLASSIFICATION	1.035115757782276E-7	DEFECT
// nearly all times v is zero, 4 in most other cases	WITHOUT_CLASSIFICATION	0.9999977960517142	WITHOUT_CLASSIFICATION	2.203948285827296E-6	DEFECT
/* Now the coding tables */	WITHOUT_CLASSIFICATION	0.9999920925846907	WITHOUT_CLASSIFICATION	7.907415309292554E-6	DEFECT
// finally create the Huffman tables	WITHOUT_CLASSIFICATION	0.9999997945504736	WITHOUT_CLASSIFICATION	2.0544952630476233E-7	DEFECT
// end of file // '1' // ')' // 'Y' // '&' // 'S' // 'Y'	WITHOUT_CLASSIFICATION	0.9999942168920305	WITHOUT_CLASSIFICATION	5.783107969494115E-6	DEFECT
// Inlined: // int zvec = bsR(zn);	WITHOUT_CLASSIFICATION	0.9999992359796716	WITHOUT_CLASSIFICATION	7.640203285581567E-7	DEFECT
// Inlined: // int zvec = bsR(zn);	WITHOUT_CLASSIFICATION	0.9999992359796716	WITHOUT_CLASSIFICATION	7.640203285581567E-7	DEFECT
/*                  This loop is hammered during decompression,                  hence avoid native method call overhead of                  System.arraycopy for very small ranges to copy.                */	WITHOUT_CLASSIFICATION	0.9999195632530733	WITHOUT_CLASSIFICATION	8.043674692673804E-5	DEFECT
/* not a char and not EOF */	WITHOUT_CLASSIFICATION	0.9999992978797273	WITHOUT_CLASSIFICATION	7.021202726576986E-7	DEFECT
// (with blockSize 900k) //      256 byte	WITHOUT_CLASSIFICATION	0.9999492233831911	WITHOUT_CLASSIFICATION	5.077661680884479E-5	DEFECT
//     1024 byte	WITHOUT_CLASSIFICATION	0.9999960027849242	WITHOUT_CLASSIFICATION	3.997215075869705E-6	DEFECT
// No need to keep track of Bcc'd addresses	WITHOUT_CLASSIFICATION	0.9999994015495868	WITHOUT_CLASSIFICATION	5.984504132231762E-7	DEFECT
// Blindly trust the user doesn't set any invalid headers	WITHOUT_CLASSIFICATION	0.9999956739761802	WITHOUT_CLASSIFICATION	4.32602381986945E-6	DEFECT
// RFC 822 s4.1: "Reply-To:" header is optional	WITHOUT_CLASSIFICATION	0.9999637594587082	WITHOUT_CLASSIFICATION	3.6240541291902555E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999920118448	WITHOUT_CLASSIFICATION	7.988155193624096E-8	DEFECT
// Mac does \n\r, but that's tough to distinguish from Windows \r\n\r\n. // Don't tackle that problem right now.	WITHOUT_CLASSIFICATION	0.9992663691097586	WITHOUT_CLASSIFICATION	7.336308902414433E-4	DEFECT
// support "address (name)"	WITHOUT_CLASSIFICATION	0.9999994699858866	WITHOUT_CLASSIFICATION	5.300141134526632E-7	DEFECT
// support "(name) address"	WITHOUT_CLASSIFICATION	0.9999994112252278	WITHOUT_CLASSIFICATION	5.887747722601783E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999734784456	WITHOUT_CLASSIFICATION	2.6521554394295955E-8	DEFECT
//      256 byte //    18002 byte //    18002 byte	WITHOUT_CLASSIFICATION	0.9999697588978922	WITHOUT_CLASSIFICATION	3.024110210778154E-5	DEFECT
//     6192 byte //     6192 byte //     6192 byte //       24 byte	WITHOUT_CLASSIFICATION	0.9999825196979223	WITHOUT_CLASSIFICATION	1.7480302077699188E-5	DEFECT
//     1028 byte //      512 byte //     3096 byte //        6 byte //--------------- //    60798 byte	WITHOUT_CLASSIFICATION	0.9999510190521892	WITHOUT_CLASSIFICATION	4.8980947810842156E-5	DEFECT
//  3600000 byte //   900000 byte //--------------- //  4560782 byte //===============	WITHOUT_CLASSIFICATION	0.999949755950488	WITHOUT_CLASSIFICATION	5.024404951204406E-5	DEFECT
// RFC 822 s4.1: "From:" header must be sent // We rely on error checking by the MTA	WITHOUT_CLASSIFICATION	0.9999661782818734	WITHOUT_CLASSIFICATION	3.382171812657761E-5	DEFECT
// RFC 822 s4.1: //   "Header fields are NOT required to occur in any particular order, //    except that the message body MUST occur AFTER the headers" // (the same section specifies a reccommended order, which we ignore)	WITHOUT_CLASSIFICATION	0.9999983009850362	WITHOUT_CLASSIFICATION	1.6990149638240294E-6	DEFECT
// Make a limited attempt to extract a sanitized email address // Prefer text in <brackets>, ignore anything in (parentheses)	WITHOUT_CLASSIFICATION	0.9999663030220476	WITHOUT_CLASSIFICATION	3.369697795236486E-5	DEFECT
// * * * * * Raw protocol methods below here * * * * *	WITHOUT_CLASSIFICATION	0.9999924637757703	WITHOUT_CLASSIFICATION	7.536224229642947E-6	DEFECT
// make sure dot is on new line	WITHOUT_CLASSIFICATION	0.9999539934109479	WITHOUT_CLASSIFICATION	4.600658905217246E-5	DEFECT
// raw supports <CRLF>.<CRLF>	WITHOUT_CLASSIFICATION	0.9999997643811052	WITHOUT_CLASSIFICATION	2.3561889489326588E-7	DEFECT
// Check that the response is one of the valid codes	WITHOUT_CLASSIFICATION	0.9999997308016909	WITHOUT_CLASSIFICATION	2.691983090679985E-7	DEFECT
// deprecated, but email is byte-oriented	WITHOUT_CLASSIFICATION	0.9999917926202591	WITHOUT_CLASSIFICATION	8.207379740871306E-6	DEFECT
// ensure always \r\n	WITHOUT_CLASSIFICATION	0.9999996395873831	WITHOUT_CLASSIFICATION	3.604126169037734E-7	DEFECT
// Mac does \n\r, but that's tough to distinguish from Windows \r\n\r\n. // Don't tackle that problem right now.	WITHOUT_CLASSIFICATION	0.9992663691097586	WITHOUT_CLASSIFICATION	7.336308902414433E-4	DEFECT
// add extra dot	WITHOUT_CLASSIFICATION	0.9999987105631893	WITHOUT_CLASSIFICATION	1.2894368106334297E-6	DEFECT
// add extra dot	WITHOUT_CLASSIFICATION	0.9999987105631893	WITHOUT_CLASSIFICATION	1.2894368106334297E-6	DEFECT
// ensure always \r\n	WITHOUT_CLASSIFICATION	0.9999996395873831	WITHOUT_CLASSIFICATION	3.604126169037734E-7	DEFECT
// UNDONE	WITHOUT_CLASSIFICATION	0.9999975837217518	WITHOUT_CLASSIFICATION	2.416278248067065E-6	DEFECT
// create a TarEntry for the LongLink, the contents // of which are the entry's name	WITHOUT_CLASSIFICATION	0.9999999708990608	WITHOUT_CLASSIFICATION	2.910093917967133E-8	DEFECT
// Strip off drive letters! // REVIEW Would a better check be "(File.separator == '\')"?	WITHOUT_CLASSIFICATION	0.9999999671420549	WITHOUT_CLASSIFICATION	3.285794515803371E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999734784456	WITHOUT_CLASSIFICATION	2.6521554394295955E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999734784456	WITHOUT_CLASSIFICATION	2.6521554394295955E-8	DEFECT
// No absolute pathnames // Windows (and Posix?) paths can start with "\\NetworkDrive\", // so we loop on starting /'s.	WITHOUT_CLASSIFICATION	0.999999634907059	WITHOUT_CLASSIFICATION	3.650929409807735E-7	DEFECT
/* start of the central directory  */	WITHOUT_CLASSIFICATION	0.999999939365069	WITHOUT_CLASSIFICATION	6.063493090472031E-8	DEFECT
// REVIEW // This is horribly inefficient, but it ensures that we // properly skip over bytes via the TarBuffer... //	WITHOUT_CLASSIFICATION	0.9999468570493822	WITHOUT_CLASSIFICATION	5.3142950617696716E-5	DEFECT
// read in the name	WITHOUT_CLASSIFICATION	0.999998757078148	WITHOUT_CLASSIFICATION	1.2429218520016221E-6	DEFECT
// remove trailing null terminator	WITHOUT_CLASSIFICATION	0.9999908548431586	WITHOUT_CLASSIFICATION	9.145156841297509E-6	DEFECT
// Unexpected EOF!	WITHOUT_CLASSIFICATION	0.9999989437157049	WITHOUT_CLASSIFICATION	1.056284295209157E-6	DEFECT
// ---------------------------------------------------------- // somewhat arbitrary choices that are quite common for shared // installations // -----------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999992804578551	WITHOUT_CLASSIFICATION	7.195421449267242E-7	DEFECT
/* method is STORED and we used RandomAccessFile */	WITHOUT_CLASSIFICATION	0.999999520573355	WITHOUT_CLASSIFICATION	4.794266450707189E-7	DEFECT
// If random access output, write the local file header containing // the correct CRC and compressed/uncompressed sizes	WITHOUT_CLASSIFICATION	0.9999997541504702	WITHOUT_CLASSIFICATION	2.4584952987507274E-7	DEFECT
// not specified	WITHOUT_CLASSIFICATION	0.9999997097263933	WITHOUT_CLASSIFICATION	2.902736067436566E-7	DEFECT
// not specified	WITHOUT_CLASSIFICATION	0.9999997097263933	WITHOUT_CLASSIFICATION	2.902736067436566E-7	DEFECT
// Size/CRC not required if RandomAccessFile is used	WITHOUT_CLASSIFICATION	0.9999962767109021	WITHOUT_CLASSIFICATION	3.7232890979188797E-6	DEFECT
/*     * Various ZIP constants     */	WITHOUT_CLASSIFICATION	0.9999996835287791	WITHOUT_CLASSIFICATION	3.164712209091188E-7	DEFECT
//store method in local variable to prevent multiple method calls	WITHOUT_CLASSIFICATION	0.999999298559109	WITHOUT_CLASSIFICATION	7.014408910636806E-7	DEFECT
// bit3 set to signal, we use a data descriptor	WITHOUT_CLASSIFICATION	0.9999997576256514	WITHOUT_CLASSIFICATION	2.423743486523398E-7	DEFECT
// bit3 set to signal, we use a data descriptor	WITHOUT_CLASSIFICATION	0.9999997576256514	WITHOUT_CLASSIFICATION	2.423743486523398E-7	DEFECT
// compression method	WITHOUT_CLASSIFICATION	0.9999952487521369	WITHOUT_CLASSIFICATION	4.751247863167866E-6	DEFECT
// compression method	WITHOUT_CLASSIFICATION	0.9999952487521369	WITHOUT_CLASSIFICATION	4.751247863167866E-6	DEFECT
// last mod. time and date	WITHOUT_CLASSIFICATION	0.9999984981012348	WITHOUT_CLASSIFICATION	1.501898765164196E-6	DEFECT
// file name length	WITHOUT_CLASSIFICATION	0.9999983195934814	WITHOUT_CLASSIFICATION	1.6804065185009187E-6	DEFECT
// extra field length	WITHOUT_CLASSIFICATION	0.9999993528476077	WITHOUT_CLASSIFICATION	6.471523923871822E-7	DEFECT
// file name	WITHOUT_CLASSIFICATION	0.9999992511794089	WITHOUT_CLASSIFICATION	7.488205910989642E-7	DEFECT
// extra field	WITHOUT_CLASSIFICATION	0.9999993801247739	WITHOUT_CLASSIFICATION	6.198752261688785E-7	DEFECT
// version made by	WITHOUT_CLASSIFICATION	0.9999995062735033	WITHOUT_CLASSIFICATION	4.937264967911719E-7	DEFECT
// version needed to extract // general purpose bit flag	WITHOUT_CLASSIFICATION	0.9999996953432261	WITHOUT_CLASSIFICATION	3.046567739332244E-7	DEFECT
// last mod. time and date	WITHOUT_CLASSIFICATION	0.9999984981012348	WITHOUT_CLASSIFICATION	1.501898765164196E-6	DEFECT
// requires version 2 as we are going to store length info // in the data descriptor	WITHOUT_CLASSIFICATION	0.999984165304018	WITHOUT_CLASSIFICATION	1.583469598199975E-5	DEFECT
// file name length	WITHOUT_CLASSIFICATION	0.9999983195934814	WITHOUT_CLASSIFICATION	1.6804065185009187E-6	DEFECT
// CRC // compressed length // uncompressed length	WITHOUT_CLASSIFICATION	0.9999995917126953	WITHOUT_CLASSIFICATION	4.08287304814397E-7	DEFECT
// extra field length	WITHOUT_CLASSIFICATION	0.9999993528476077	WITHOUT_CLASSIFICATION	6.471523923871822E-7	DEFECT
// file name	WITHOUT_CLASSIFICATION	0.9999992511794089	WITHOUT_CLASSIFICATION	7.488205910989642E-7	DEFECT
// extra field	WITHOUT_CLASSIFICATION	0.9999993801247739	WITHOUT_CLASSIFICATION	6.198752261688785E-7	DEFECT
// file comment length	WITHOUT_CLASSIFICATION	0.9999867012454581	WITHOUT_CLASSIFICATION	1.3298754541857523E-5	DEFECT
// disk number start	WITHOUT_CLASSIFICATION	0.9999992500000121	WITHOUT_CLASSIFICATION	7.499999879736171E-7	DEFECT
// internal file attributes	WITHOUT_CLASSIFICATION	0.9999999925097879	WITHOUT_CLASSIFICATION	7.49021218514564E-9	DEFECT
// external file attributes	WITHOUT_CLASSIFICATION	0.9999999707416231	WITHOUT_CLASSIFICATION	2.925837686206724E-8	DEFECT
// relative offset of LFH	WITHOUT_CLASSIFICATION	0.9999999896937406	WITHOUT_CLASSIFICATION	1.0306259481093085E-8	DEFECT
// disk numbers	WITHOUT_CLASSIFICATION	0.9999995417930386	WITHOUT_CLASSIFICATION	4.582069613796924E-7	DEFECT
// number of entries	WITHOUT_CLASSIFICATION	0.9999999298494299	WITHOUT_CLASSIFICATION	7.01505701431178E-8	DEFECT
// length and location of CD	WITHOUT_CLASSIFICATION	0.9999941915772382	WITHOUT_CLASSIFICATION	5.808422761790852E-6	DEFECT
// ZIP file comment	WITHOUT_CLASSIFICATION	0.9999864928473313	WITHOUT_CLASSIFICATION	1.3507152668662607E-5	DEFECT
// array not exhausted	WITHOUT_CLASSIFICATION	0.9999995663359489	WITHOUT_CLASSIFICATION	4.336640510738617E-7	DEFECT
/* version made by                 */	WITHOUT_CLASSIFICATION	0.9999981162441428	WITHOUT_CLASSIFICATION	1.8837558571122185E-6	DEFECT
/* version needed to extract       */	WITHOUT_CLASSIFICATION	0.9999991422320851	WITHOUT_CLASSIFICATION	8.577679150018596E-7	DEFECT
/* general purpose bit flag        */	WITHOUT_CLASSIFICATION	0.999999472408929	WITHOUT_CLASSIFICATION	5.275910711027881E-7	DEFECT
/* compression method              */	WITHOUT_CLASSIFICATION	0.9999966714445309	WITHOUT_CLASSIFICATION	3.3285554690380368E-6	DEFECT
/* last mod file time              */	WITHOUT_CLASSIFICATION	0.9999978435433344	WITHOUT_CLASSIFICATION	2.156456665619736E-6	DEFECT
/* last mod file date              */	WITHOUT_CLASSIFICATION	0.9999976497776719	WITHOUT_CLASSIFICATION	2.3502223281163193E-6	DEFECT
/* crc-32                          */	WITHOUT_CLASSIFICATION	0.9999947411839162	WITHOUT_CLASSIFICATION	5.2588160838387375E-6	DEFECT
/* uncompressed size               */	WITHOUT_CLASSIFICATION	0.9999986229036304	WITHOUT_CLASSIFICATION	1.3770963695315583E-6	DEFECT
/* filename length                 */	WITHOUT_CLASSIFICATION	0.9999919826909069	WITHOUT_CLASSIFICATION	8.01730909308594E-6	DEFECT
/* extra field length              */	WITHOUT_CLASSIFICATION	0.9999968087308745	WITHOUT_CLASSIFICATION	3.1912691254554233E-6	DEFECT
/* file comment length             */	WITHOUT_CLASSIFICATION	0.999898285847324	WITHOUT_CLASSIFICATION	1.017141526759124E-4	DEFECT
/* internal file attributes        */	WITHOUT_CLASSIFICATION	0.9999998481622764	WITHOUT_CLASSIFICATION	1.5183772364624806E-7	DEFECT
/* external file attributes        */	WITHOUT_CLASSIFICATION	0.9999996899725586	WITHOUT_CLASSIFICATION	3.1002744144796376E-7	DEFECT
/* relative offset of local header */	WITHOUT_CLASSIFICATION	0.9999998833865834	WITHOUT_CLASSIFICATION	1.1661341658738106E-7	DEFECT
// disk number	WITHOUT_CLASSIFICATION	0.9999993403674333	WITHOUT_CLASSIFICATION	6.596325666527726E-7	DEFECT
// LFH offset,	WITHOUT_CLASSIFICATION	0.999999303706174	WITHOUT_CLASSIFICATION	6.962938260743036E-7	DEFECT
// data offset will be filled later	WITHOUT_CLASSIFICATION	0.9999975071650259	WITHOUT_CLASSIFICATION	2.4928349741597675E-6	DEFECT
/* end of central dir signature    */	WITHOUT_CLASSIFICATION	0.9999986201292571	WITHOUT_CLASSIFICATION	1.3798707428824907E-6	DEFECT
/* number of this disk             */	WITHOUT_CLASSIFICATION	0.9999831456834306	WITHOUT_CLASSIFICATION	1.6854316569292866E-5	DEFECT
/* number of the disk with the     */	WITHOUT_CLASSIFICATION	0.9999985299013862	WITHOUT_CLASSIFICATION	1.470098613905615E-6	DEFECT
/* start of the central directory  */	WITHOUT_CLASSIFICATION	0.999999939365069	WITHOUT_CLASSIFICATION	6.063493090472031E-8	DEFECT
/* the central dir on this disk    */	WITHOUT_CLASSIFICATION	0.9999849364270318	WITHOUT_CLASSIFICATION	1.5063572968293116E-5	DEFECT
/* the central dir                 */	WITHOUT_CLASSIFICATION	0.9999990617525488	WITHOUT_CLASSIFICATION	9.382474512361876E-7	DEFECT
/* size of the central directory   */	WITHOUT_CLASSIFICATION	0.999999601999011	WITHOUT_CLASSIFICATION	3.9800098901440446E-7	DEFECT
/* offset of start of central      */	WITHOUT_CLASSIFICATION	0.9999999833660278	WITHOUT_CLASSIFICATION	1.6633972214002463E-8	DEFECT
// empty	WITHOUT_CLASSIFICATION	0.9999977239442466	WITHOUT_CLASSIFICATION	2.276055753465723E-6	DEFECT
// wait 2 second extras // the test failed with 100 ms of margin on cvs.apache.org on August 1st, 2003	WITHOUT_CLASSIFICATION	0.9997424044830485	WITHOUT_CLASSIFICATION	2.5759551695148813E-4	DEFECT
// dummy1 --> dummy2 --> dummy3 // (which holds a glob mapper from "*.java" to "*.class"	WITHOUT_CLASSIFICATION	0.9999988003544489	WITHOUT_CLASSIFICATION	1.1996455511112606E-6	DEFECT
// // *****  initialize test environment (called "bed")  ***** //	WITHOUT_CLASSIFICATION	0.9999999935199363	WITHOUT_CLASSIFICATION	6.480063680524734E-9	DEFECT
// THIS WILL FAIL. //compareBytes("abc", "utf-16");	WITHOUT_CLASSIFICATION	0.9999958517440287	WITHOUT_CLASSIFICATION	4.148255971369967E-6	DEFECT
//catch script/ant mismatch with a meaningful message //we could ignore it, but there are likely to be other //version problems, so we stamp down on the configuration now	WITHOUT_CLASSIFICATION	0.9999999226041384	WITHOUT_CLASSIFICATION	7.739586162801437E-8	DEFECT
//if there were no main targets, we list all subtargets //as it means nothing has a description	WITHOUT_CLASSIFICATION	0.9999996717380606	WITHOUT_CLASSIFICATION	3.2826193935559734E-7	DEFECT
// For NetWare, use the boolean=true mode, so we can use delimiter // information to make a better decision later.	WITHOUT_CLASSIFICATION	0.9999999851331188	WITHOUT_CLASSIFICATION	1.4866881135689356E-8	DEFECT
// we are on NetWare, tokenizing is handled a little differently, // due to the fact that NetWare has multiple-character volume names.	WITHOUT_CLASSIFICATION	0.999999671006071	WITHOUT_CLASSIFICATION	3.289939290055691E-7	DEFECT
// The readers return -1 if they end. So simply read the "prepend" // after that the "content" and at the end the "append" file.	WITHOUT_CLASSIFICATION	0.9999999529172251	WITHOUT_CLASSIFICATION	4.7082774981928125E-8	DEFECT
// NB: this makes use of Project#setProperty rather than Project#setNewProperty //     due to backwards compatiblity reasons	WITHOUT_CLASSIFICATION	0.9999733352574398	WITHOUT_CLASSIFICATION	2.6664742560120906E-5	DEFECT
// If we've been successful on an update, delete the // temporary file	WITHOUT_CLASSIFICATION	0.9999999997986511	WITHOUT_CLASSIFICATION	2.0134903844402467E-10	DEFECT
// CheckStyle - magic numbers // checking for "X:\ 0=dquote,1=letter,2=:,3=\	WITHOUT_CLASSIFICATION	0.9999999181581757	WITHOUT_CLASSIFICATION	8.184182430398566E-8	DEFECT
/* version needed to extract       */	WITHOUT_CLASSIFICATION	0.9999991422320851	WITHOUT_CLASSIFICATION	8.577679150018596E-7	DEFECT
/* general purpose bit flag        */	WITHOUT_CLASSIFICATION	0.999999472408929	WITHOUT_CLASSIFICATION	5.275910711027881E-7	DEFECT
/* compression method              */	WITHOUT_CLASSIFICATION	0.9999966714445309	WITHOUT_CLASSIFICATION	3.3285554690380368E-6	DEFECT
/* last mod file time              */	WITHOUT_CLASSIFICATION	0.9999978435433344	WITHOUT_CLASSIFICATION	2.156456665619736E-6	DEFECT
/* last mod file date              */	WITHOUT_CLASSIFICATION	0.9999976497776719	WITHOUT_CLASSIFICATION	2.3502223281163193E-6	DEFECT
/* crc-32                          */	WITHOUT_CLASSIFICATION	0.9999947411839162	WITHOUT_CLASSIFICATION	5.2588160838387375E-6	DEFECT
/* compressed size                 */	WITHOUT_CLASSIFICATION	0.9999985560326601	WITHOUT_CLASSIFICATION	1.4439673399108997E-6	DEFECT
/* uncompressed size               */	WITHOUT_CLASSIFICATION	0.9999986229036304	WITHOUT_CLASSIFICATION	1.3770963695315583E-6	DEFECT
/* end of central dir signature    */	WITHOUT_CLASSIFICATION	0.9999986201292571	WITHOUT_CLASSIFICATION	1.3798707428824907E-6	DEFECT
/* number of this disk             */	WITHOUT_CLASSIFICATION	0.9999831456834306	WITHOUT_CLASSIFICATION	1.6854316569292866E-5	DEFECT
/* number of the disk with the     */	WITHOUT_CLASSIFICATION	0.9999985299013862	WITHOUT_CLASSIFICATION	1.470098613905615E-6	DEFECT
/* total number of entries in      */	WITHOUT_CLASSIFICATION	0.999996795786056	WITHOUT_CLASSIFICATION	3.20421394388411E-6	DEFECT
/* total number of entries in      */	WITHOUT_CLASSIFICATION	0.999996795786056	WITHOUT_CLASSIFICATION	3.20421394388411E-6	DEFECT
/* the central dir on this disk    */	WITHOUT_CLASSIFICATION	0.9999849364270318	WITHOUT_CLASSIFICATION	1.5063572968293116E-5	DEFECT
/* the central dir                 */	WITHOUT_CLASSIFICATION	0.9999990617525488	WITHOUT_CLASSIFICATION	9.382474512361876E-7	DEFECT
/* size of the central directory   */	WITHOUT_CLASSIFICATION	0.999999601999011	WITHOUT_CLASSIFICATION	3.9800098901440446E-7	DEFECT
/* the starting disk number        */	WITHOUT_CLASSIFICATION	0.9999984834330297	WITHOUT_CLASSIFICATION	1.5165669702891079E-6	DEFECT
/* zipfile comment length          */	WITHOUT_CLASSIFICATION	0.9999641128347435	WITHOUT_CLASSIFICATION	3.5887165256485E-5	DEFECT
/* local file header signature     */	WITHOUT_CLASSIFICATION	0.9999935745939164	WITHOUT_CLASSIFICATION	6.425406083644489E-6	DEFECT
/*     * Converts DOS time to Java time (number of milliseconds since epoch).     */	WITHOUT_CLASSIFICATION	0.9999998347102178	WITHOUT_CLASSIFICATION	1.6528978208473498E-7	DEFECT
// CRC will be added later	WITHOUT_CLASSIFICATION	0.999998333516878	WITHOUT_CLASSIFICATION	1.6664831220431146E-6	DEFECT
/*<ZipExtraField>*/	WITHOUT_CLASSIFICATION	0.9999946984674848	WITHOUT_CLASSIFICATION	5.301532515177503E-6	DEFECT
// initializes extra data to an empty byte array	WITHOUT_CLASSIFICATION	0.9999999408750071	WITHOUT_CLASSIFICATION	5.912499293841253E-8	DEFECT
// MS-DOS read-only attribute	WITHOUT_CLASSIFICATION	0.9999973831835048	WITHOUT_CLASSIFICATION	2.616816495197921E-6	DEFECT
// MS-DOS directory flag	WITHOUT_CLASSIFICATION	0.9999507285119544	WITHOUT_CLASSIFICATION	4.927148804561657E-5	DEFECT
// A "location" attribute for a node within a // Path object.	WITHOUT_CLASSIFICATION	0.9999988501950925	WITHOUT_CLASSIFICATION	1.1498049075235355E-6	DEFECT
// Just use the same directory as the file itself. // This directory will exist	WITHOUT_CLASSIFICATION	0.9999997876337282	WITHOUT_CLASSIFICATION	2.1236627187856802E-7	DEFECT
// JarIndex is sorting the directories by ascending order. // it has no value but cosmetic since it will be read into a // hashtable by the classloader, but we'll do so anyway.	WITHOUT_CLASSIFICATION	0.9999998499847401	WITHOUT_CLASSIFICATION	1.5001525987562332E-7	DEFECT
// // Static //	WITHOUT_CLASSIFICATION	0.9999998714621315	WITHOUT_CLASSIFICATION	1.2853786844855464E-7	DEFECT
//we mark the file to be deleted on exit. //the alternative would be to cache the filename and delete //after execution finished, which is much better for long-lived runtimes //though spawning complicates things...	WITHOUT_CLASSIFICATION	0.9997279647807994	WITHOUT_CLASSIFICATION	2.720352192005981E-4	DEFECT
// Protected first so if any GUI tool offers a default // based on enum #0, it will be right.	WITHOUT_CLASSIFICATION	0.9999999310346632	WITHOUT_CLASSIFICATION	6.896533677128982E-8	DEFECT
// CheckStyle:VisibilityModifier OFF - bc // the source file // the destination file // the destination directory	WITHOUT_CLASSIFICATION	0.9999999996850287	WITHOUT_CLASSIFICATION	3.1497126907687793E-10	DEFECT
// add dest dir to classpath so that previously compiled and // untouched classes are on classpath	WITHOUT_CLASSIFICATION	0.9999999805408805	WITHOUT_CLASSIFICATION	1.945911956803865E-8	DEFECT
// build the command line from what we got the format is // cleartool checkout [options...] [viewpath ...] // as specified in the CLEARTOOL.EXE help	WITHOUT_CLASSIFICATION	0.9999998894006799	WITHOUT_CLASSIFICATION	1.1059932019143684E-7	DEFECT
// build the command line from what we got. the format is // cleartool mkelem [options...] [viewpath ...] // as specified in the CLEARTOOL.EXE help	WITHOUT_CLASSIFICATION	0.999998834068571	WITHOUT_CLASSIFICATION	1.1659314290465852E-6	DEFECT
// build the command line from what we got. the format is // cleartool mklabel [options...] [viewpath ...] // as specified in the CLEARTOOL help	WITHOUT_CLASSIFICATION	0.9999998310048988	WITHOUT_CLASSIFICATION	1.6899510125696008E-7	DEFECT
// push the current iterator onto the stack and then // iterate through this directory.	WITHOUT_CLASSIFICATION	0.9999958215415203	WITHOUT_CLASSIFICATION	4.178458479689266E-6	DEFECT
// List of EJBs found in XML // One item within the Map // Is doc iAS or EJB descriptor	WITHOUT_CLASSIFICATION	0.99999997492066	WITHOUT_CLASSIFICATION	2.507933997288003E-8	DEFECT
// baseNameTerminator not found: the descriptor use the // JOnAS naming convention, ie [Foo.xml,jonas-Foo.xml] and // not [Foo<baseNameTerminator>-ejb-jar.xml, // Foo<baseNameTerminator>-jonas-ejb-jar.xml].	WITHOUT_CLASSIFICATION	0.9999998415683486	WITHOUT_CLASSIFICATION	1.5843165140787247E-7	DEFECT
// Loop through the files seeing if any has been touched // more recently than the destination jar.	WITHOUT_CLASSIFICATION	0.9999999727147918	WITHOUT_CLASSIFICATION	2.728520831286821E-8	DEFECT
// read in the descriptor. Under weblogic, the descriptor is a weblogic // specific subclass which has references to the implementation classes. // These classes must, therefore, be in the classpath when the deployment // descriptor is loaded from the .ser file	WITHOUT_CLASSIFICATION	0.9999999975326624	WITHOUT_CLASSIFICATION	2.4673375400103775E-9	DEFECT
//WARNING: We trim the values of all the attributes because //Some extension declarations are badly defined (ie have spaces //after version or vendor)	WITHOUT_CLASSIFICATION	0.9999183058348605	WITHOUT_CLASSIFICATION	8.169416513948798E-5	DEFECT
// 2003-02-21 new replace algorithm by tbee (tbee@tbee.org) // because it wasn't able to replace something like "@aaa;@bbb;"	WITHOUT_CLASSIFICATION	0.9999911351851305	WITHOUT_CLASSIFICATION	8.864814869517356E-6	DEFECT
// convert backslashes to slashes, otherwise jjtree will // put this as comments and this seems to confuse javacc	WITHOUT_CLASSIFICATION	0.9999999084538939	WITHOUT_CLASSIFICATION	9.154610619224479E-8	DEFECT
//although this code appears to duplicate that of ClasspathUtils.newInstance, //we cannot use that because this formatter may run in a forked process, //without that class.	WITHOUT_CLASSIFICATION	0.999164254835333	WITHOUT_CLASSIFICATION	8.357451646669486E-4	DEFECT
// build the command line from what we got the format is // ss History elements [-H] [-L] [-N] [-O] [-V] [-Y] [-#] [-?] // as specified in the SS.EXE help	WITHOUT_CLASSIFICATION	0.9999998733217633	WITHOUT_CLASSIFICATION	1.2667823677463903E-7	DEFECT
// this method has severe consequences on performance. We cannot rely // on the super.hashCode() method since super.getName() always return // the empty string in the current implemention (there's no setter) // so it is basically draining the performance of a hashmap lookup	WITHOUT_CLASSIFICATION	0.9999709774075549	WITHOUT_CLASSIFICATION	2.9022592445124295E-5	DEFECT
// If this TransformOperation has DrawOperation children // then Rotate the first child and return.	WITHOUT_CLASSIFICATION	0.9999999873731569	WITHOUT_CLASSIFICATION	1.2626843139348878E-8	DEFECT
// converted from sun internal classes to // new Base64Converter // utility class extracted from Get task	WITHOUT_CLASSIFICATION	0.999997630206994	WITHOUT_CLASSIFICATION	2.3697930061177062E-6	DEFECT
// // Cannot return a null source, because we have to call // setEntityResolver (see setEntityResolver javadoc comment) //	WITHOUT_CLASSIFICATION	0.9999985720313258	WITHOUT_CLASSIFICATION	1.4279686741160113E-6	DEFECT
// CRC // compressed length // uncompressed length	WITHOUT_CLASSIFICATION	0.9999995917126953	WITHOUT_CLASSIFICATION	4.08287304814397E-7	DEFECT
// No further methods necessary. This is just an amalgamation of two other // interfaces.	WITHOUT_CLASSIFICATION	0.9999999767171327	WITHOUT_CLASSIFICATION	2.3282867390298066E-8	DEFECT
// // -----  The "Singleton"  ----- //	WITHOUT_CLASSIFICATION	0.9999991130663335	WITHOUT_CLASSIFICATION	8.869336665504685E-7	DEFECT
// If we had child elements, we need to indent before we close // the element, otherwise we're on the same line and don't need // to indent	WITHOUT_CLASSIFICATION	0.999999933151499	WITHOUT_CLASSIFICATION	6.684850088252433E-8	DEFECT
// The key is in the dictionary but cannot be retrieved // This is usually due references that refer to tasks // that have not been taskdefed in the current run. // Ignore	WITHOUT_CLASSIFICATION	0.9999988133158692	WITHOUT_CLASSIFICATION	1.186684130889401E-6	DEFECT
// write magic: done by caller who created this stream //this.out.write('B'); //this.out.write('Z');	WITHOUT_CLASSIFICATION	0.999758257166426	WITHOUT_CLASSIFICATION	2.4174283357395956E-4	DEFECT
// CRC // Mode // SizDev // UID // GID	WITHOUT_CLASSIFICATION	0.999998999035826	WITHOUT_CLASSIFICATION	1.0009641740162034E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999998677448649	WITHOUT_CLASSIFICATION	1.3225513505480113E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999998677448649	WITHOUT_CLASSIFICATION	1.3225513505480113E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999998677448649	WITHOUT_CLASSIFICATION	1.3225513505480113E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999998677448649	WITHOUT_CLASSIFICATION	1.3225513505480113E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999998677448649	WITHOUT_CLASSIFICATION	1.3225513505480113E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999998677448649	WITHOUT_CLASSIFICATION	1.3225513505480113E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999998677448649	WITHOUT_CLASSIFICATION	1.3225513505480113E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999998677448649	WITHOUT_CLASSIFICATION	1.3225513505480113E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999996150953746	WITHOUT_CLASSIFICATION	3.849046253658713E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999996150953746	WITHOUT_CLASSIFICATION	3.849046253658713E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999996150953746	WITHOUT_CLASSIFICATION	3.849046253658713E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999996150953746	WITHOUT_CLASSIFICATION	3.849046253658713E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999996150953746	WITHOUT_CLASSIFICATION	3.849046253658713E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999996150953746	WITHOUT_CLASSIFICATION	3.849046253658713E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999998677448649	WITHOUT_CLASSIFICATION	1.3225513505480113E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999998677448649	WITHOUT_CLASSIFICATION	1.3225513505480113E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999998677448649	WITHOUT_CLASSIFICATION	1.3225513505480113E-7	DEFECT
// ignored	WITHOUT_CLASSIFICATION	0.9999998846916446	WITHOUT_CLASSIFICATION	1.1530835544695155E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999998677448649	WITHOUT_CLASSIFICATION	1.3225513505480113E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999998677448649	WITHOUT_CLASSIFICATION	1.3225513505480113E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999998677448649	WITHOUT_CLASSIFICATION	1.3225513505480113E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999998677448649	WITHOUT_CLASSIFICATION	1.3225513505480113E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999998677448649	WITHOUT_CLASSIFICATION	1.3225513505480113E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999998677448649	WITHOUT_CLASSIFICATION	1.3225513505480113E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999998677448649	WITHOUT_CLASSIFICATION	1.3225513505480113E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999998677448649	WITHOUT_CLASSIFICATION	1.3225513505480113E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999998677448649	WITHOUT_CLASSIFICATION	1.3225513505480113E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999998677448649	WITHOUT_CLASSIFICATION	1.3225513505480113E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999998677448649	WITHOUT_CLASSIFICATION	1.3225513505480113E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999998677448649	WITHOUT_CLASSIFICATION	1.3225513505480113E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999998677448649	WITHOUT_CLASSIFICATION	1.3225513505480113E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999998677448649	WITHOUT_CLASSIFICATION	1.3225513505480113E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999998677448649	WITHOUT_CLASSIFICATION	1.3225513505480113E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999998677448649	WITHOUT_CLASSIFICATION	1.3225513505480113E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999998677448649	WITHOUT_CLASSIFICATION	1.3225513505480113E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999998677448649	WITHOUT_CLASSIFICATION	1.3225513505480113E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999998677448649	WITHOUT_CLASSIFICATION	1.3225513505480113E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999998677448649	WITHOUT_CLASSIFICATION	1.3225513505480113E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999998677448649	WITHOUT_CLASSIFICATION	1.3225513505480113E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999998677448649	WITHOUT_CLASSIFICATION	1.3225513505480113E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999998677448649	WITHOUT_CLASSIFICATION	1.3225513505480113E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999998677448649	WITHOUT_CLASSIFICATION	1.3225513505480113E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999998677448649	WITHOUT_CLASSIFICATION	1.3225513505480113E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999998677448649	WITHOUT_CLASSIFICATION	1.3225513505480113E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999998677448649	WITHOUT_CLASSIFICATION	1.3225513505480113E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999998677448649	WITHOUT_CLASSIFICATION	1.3225513505480113E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999998677448649	WITHOUT_CLASSIFICATION	1.3225513505480113E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999998677448649	WITHOUT_CLASSIFICATION	1.3225513505480113E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999998677448649	WITHOUT_CLASSIFICATION	1.3225513505480113E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999998677448649	WITHOUT_CLASSIFICATION	1.3225513505480113E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999998677448649	WITHOUT_CLASSIFICATION	1.3225513505480113E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999998677448649	WITHOUT_CLASSIFICATION	1.3225513505480113E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999998677448649	WITHOUT_CLASSIFICATION	1.3225513505480113E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999998677448649	WITHOUT_CLASSIFICATION	1.3225513505480113E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999998677448649	WITHOUT_CLASSIFICATION	1.3225513505480113E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999998677448649	WITHOUT_CLASSIFICATION	1.3225513505480113E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999998677448649	WITHOUT_CLASSIFICATION	1.3225513505480113E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999998677448649	WITHOUT_CLASSIFICATION	1.3225513505480113E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999998677448649	WITHOUT_CLASSIFICATION	1.3225513505480113E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999998677448649	WITHOUT_CLASSIFICATION	1.3225513505480113E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999998677448649	WITHOUT_CLASSIFICATION	1.3225513505480113E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999998677448649	WITHOUT_CLASSIFICATION	1.3225513505480113E-7	DEFECT
// do nothing	WITHOUT_CLASSIFICATION	0.9999974311288902	WITHOUT_CLASSIFICATION	2.5688711098589234E-6	DEFECT
// do nothing	WITHOUT_CLASSIFICATION	0.9999974311288902	WITHOUT_CLASSIFICATION	2.5688711098589234E-6	DEFECT
// do nothing	WITHOUT_CLASSIFICATION	0.9999974311288902	WITHOUT_CLASSIFICATION	2.5688711098589234E-6	DEFECT
// selectors are implicitly ANDed in DirectoryScanner.  To // revert their logic we wrap them into a <none> selector // instead.	WITHOUT_CLASSIFICATION	0.9999999999684864	WITHOUT_CLASSIFICATION	3.1513610575880635E-11	DEFECT
// now wait until the spawned process is finished	WITHOUT_CLASSIFICATION	0.9999990680547793	WITHOUT_CLASSIFICATION	9.319452206786506E-7	DEFECT
// file doesn't exist -> property 'test' == null	WITHOUT_CLASSIFICATION	0.9999959884110089	WITHOUT_CLASSIFICATION	4.011588991075711E-6	DEFECT
// we don't expect to find this	WITHOUT_CLASSIFICATION	0.9999871437781479	WITHOUT_CLASSIFICATION	1.2856221852246133E-5	DEFECT
// we don't expect to find this	WITHOUT_CLASSIFICATION	0.9999871437781479	WITHOUT_CLASSIFICATION	1.2856221852246133E-5	DEFECT
// ignore expected	WITHOUT_CLASSIFICATION	0.999999903129564	WITHOUT_CLASSIFICATION	9.687043589581347E-8	DEFECT
// keep track of what operating systems are supported here.	WITHOUT_CLASSIFICATION	0.9999957050931699	WITHOUT_CLASSIFICATION	4.294906830057066E-6	DEFECT
// if we followed the symlink we just made we should // bypass the excludes.	WITHOUT_CLASSIFICATION	0.9999999652161796	WITHOUT_CLASSIFICATION	3.4783820330625505E-8	DEFECT
// when the test is started by the build.xml of ant // if the property tests.and.ant.share.classloader is not set in the build.xml // a sysproperty with name tests.and.ant.share.classloader and value // ${tests.and.ant.share.classloader} will be set // we are trying to catch this here.	WITHOUT_CLASSIFICATION	0.9999772324950422	WITHOUT_CLASSIFICATION	2.2767504957795105E-5	DEFECT
/*             * throw in drive letters             */	WITHOUT_CLASSIFICATION	0.9999734451356124	WITHOUT_CLASSIFICATION	2.6554864387563263E-5	DEFECT
/*             * promised to eliminate consecutive slashes after drive letter.             */	WITHOUT_CLASSIFICATION	0.9999999053949811	WITHOUT_CLASSIFICATION	9.460501886289607E-8	DEFECT
/*             * promised to eliminate consecutive slashes after drive letter.             */	WITHOUT_CLASSIFICATION	0.9999999053949811	WITHOUT_CLASSIFICATION	9.460501886289607E-8	DEFECT
/*             * promised to eliminate consecutive slashes after drive letter.             */	WITHOUT_CLASSIFICATION	0.9999999053949811	WITHOUT_CLASSIFICATION	9.460501886289607E-8	DEFECT
// avoid multiple configurations	WITHOUT_CLASSIFICATION	0.999999978420655	WITHOUT_CLASSIFICATION	2.1579345043705668E-8	DEFECT
// ------------------------------------------------------ //   Helper methods // -----------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999963600884786	WITHOUT_CLASSIFICATION	3.6399115215408655E-6	DEFECT
// make sure the cache is cleared.	WITHOUT_CLASSIFICATION	0.9999966683781178	WITHOUT_CLASSIFICATION	3.3316218821667185E-6	DEFECT
//--- NULL JDBC driver just for simple test since there are no db driver // available as a default in Ant :)	WITHOUT_CLASSIFICATION	0.9999999997620473	WITHOUT_CLASSIFICATION	2.379525654551471E-10	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.9999977642771859	WITHOUT_CLASSIFICATION	2.235722814136555E-6	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.9999977642771859	WITHOUT_CLASSIFICATION	2.235722814136555E-6	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.9999977642771859	WITHOUT_CLASSIFICATION	2.235722814136555E-6	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.9999977642771859	WITHOUT_CLASSIFICATION	2.235722814136555E-6	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.9999977642771859	WITHOUT_CLASSIFICATION	2.235722814136555E-6	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.9999977642771859	WITHOUT_CLASSIFICATION	2.235722814136555E-6	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.9999977642771859	WITHOUT_CLASSIFICATION	2.235722814136555E-6	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.9999977642771859	WITHOUT_CLASSIFICATION	2.235722814136555E-6	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.9999977642771859	WITHOUT_CLASSIFICATION	2.235722814136555E-6	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.9999977642771859	WITHOUT_CLASSIFICATION	2.235722814136555E-6	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.9999977642771859	WITHOUT_CLASSIFICATION	2.235722814136555E-6	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.9999977642771859	WITHOUT_CLASSIFICATION	2.235722814136555E-6	DEFECT
// wait 1 second extra to allow for java to start ... // this time was OK on a Win NT machine and on nagoya	WITHOUT_CLASSIFICATION	0.9999788036518826	WITHOUT_CLASSIFICATION	2.1196348117332627E-5	DEFECT
// ------------------------------------------------------ //   Helper methods - should be in BuildFileTest // -----------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999613960192226	WITHOUT_CLASSIFICATION	3.8603980777433514E-5	DEFECT
// ------------------------------------------------------ //   Helper methods - should be in BuildFileTest // -----------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999613960192226	WITHOUT_CLASSIFICATION	3.8603980777433514E-5	DEFECT
// All three specified and all three exist -> true	WITHOUT_CLASSIFICATION	0.9999997819102144	WITHOUT_CLASSIFICATION	2.180897854688923E-7	DEFECT
// Specified class is "" -> can not exist	WITHOUT_CLASSIFICATION	0.9999951041412825	WITHOUT_CLASSIFICATION	4.895858717565482E-6	DEFECT
// Core class that exists in system classpath is ignored, but found in specified classpath	WITHOUT_CLASSIFICATION	0.9999998019042278	WITHOUT_CLASSIFICATION	1.9809577221835966E-7	DEFECT
// File is not found in specified filepath	WITHOUT_CLASSIFICATION	0.9999995876998129	WITHOUT_CLASSIFICATION	4.123001871243917E-7	DEFECT
//ignored	WITHOUT_CLASSIFICATION	0.9999974858493598	WITHOUT_CLASSIFICATION	2.5141506402286677E-6	DEFECT
// basedir of subant/subant-test2/subant.xml is .. // therefore we expect here the subant subdirectory	WITHOUT_CLASSIFICATION	0.9999908461838924	WITHOUT_CLASSIFICATION	9.15381610757143E-6	DEFECT
// 2 is != 0 and even, so it is considered // failure on any platform currently supported // by Execute#isFailure.	WITHOUT_CLASSIFICATION	0.9998991560647545	WITHOUT_CLASSIFICATION	1.0084393524542379E-4	DEFECT
//         expectBuildExceptionContaining("testNoTld", //                 "Jasper found an error in a file", //                 "Java returned: 9");	WITHOUT_CLASSIFICATION	0.9999999810350704	WITHOUT_CLASSIFICATION	1.896492965319575E-8	DEFECT
// The captureToSummary test writes to stdout and stderr, good for // verifying that the TestListener support doesn't break anything.	WITHOUT_CLASSIFICATION	0.9999969498400435	WITHOUT_CLASSIFICATION	3.050159956419662E-6	DEFECT
// testNoCrash is the test invoked by the captureToSummary's junit task	WITHOUT_CLASSIFICATION	0.9999999996327383	WITHOUT_CLASSIFICATION	3.6726167762671426E-10	DEFECT
// tests one the file object	WITHOUT_CLASSIFICATION	0.999999928262391	WITHOUT_CLASSIFICATION	7.173760904685302E-8	DEFECT
// tests one the file object	WITHOUT_CLASSIFICATION	0.999999928262391	WITHOUT_CLASSIFICATION	7.173760904685302E-8	DEFECT
// tests one the file object	WITHOUT_CLASSIFICATION	0.999999928262391	WITHOUT_CLASSIFICATION	7.173760904685302E-8	DEFECT
// tests one the file object	WITHOUT_CLASSIFICATION	0.999999928262391	WITHOUT_CLASSIFICATION	7.173760904685302E-8	DEFECT
// tests one the file object	WITHOUT_CLASSIFICATION	0.999999928262391	WITHOUT_CLASSIFICATION	7.173760904685302E-8	DEFECT
// viewpath	WITHOUT_CLASSIFICATION	0.9999991045193062	WITHOUT_CLASSIFICATION	8.954806939133249E-7	DEFECT
// conversion to URL via FileUtils like in XMLResultAggregator, not as suggested in the bug report	WITHOUT_CLASSIFICATION	0.9998771710336626	WITHOUT_CLASSIFICATION	1.2282896633740816E-4	DEFECT
// conversion to URL via FileUtils like in XMLResultAggregator, not as suggested in the bug report	WITHOUT_CLASSIFICATION	0.9998771710336626	WITHOUT_CLASSIFICATION	1.2282896633740816E-4	DEFECT
// conversion to URL via FileUtils like in XMLResultAggregator, not as suggested in the bug report	WITHOUT_CLASSIFICATION	0.9998771710336626	WITHOUT_CLASSIFICATION	1.2282896633740816E-4	DEFECT
// conversion to URL via FileUtils like in XMLResultAggregator, not as suggested in the bug report	WITHOUT_CLASSIFICATION	0.9998771710336626	WITHOUT_CLASSIFICATION	1.2282896633740816E-4	DEFECT
// We have extra elements	WITHOUT_CLASSIFICATION	0.9999999036725726	WITHOUT_CLASSIFICATION	9.632742736707099E-8	DEFECT
// Set up a VSSHistory task	WITHOUT_CLASSIFICATION	0.9999999558266608	WITHOUT_CLASSIFICATION	4.4173339131384114E-8	DEFECT
// \ doesn't have a special meaning anymore - this is different from // what the Unix sh does but causes a lot of problems on DOS // based platforms otherwise	WITHOUT_CLASSIFICATION	0.9064813403866968	WITHOUT_CLASSIFICATION	0.0935186596133032	DEFECT
//check that dir and src are incompatible	WITHOUT_CLASSIFICATION	0.9999999498803789	WITHOUT_CLASSIFICATION	5.011962112341045E-8	DEFECT
// ================  testcases for the cache implementations  ================	WITHOUT_CLASSIFICATION	0.9999987811283861	WITHOUT_CLASSIFICATION	1.2188716137676286E-6	DEFECT
// does the selection	WITHOUT_CLASSIFICATION	0.9999707064065915	WITHOUT_CLASSIFICATION	2.9293593408603474E-5	DEFECT
// ==============  testcases for the algorithm implementations  ==============	WITHOUT_CLASSIFICATION	0.9999440467011157	WITHOUT_CLASSIFICATION	5.595329888432886E-5	DEFECT
// =====================  scenario tests  =====================	WITHOUT_CLASSIFICATION	0.9999998631654594	WITHOUT_CLASSIFICATION	1.3683454061605613E-7	DEFECT
// info text // list of files // expected result // result	WITHOUT_CLASSIFICATION	0.9999998976022202	WITHOUT_CLASSIFICATION	1.0239777992039419E-7	DEFECT
//  =====================  helper methods and classes  ====================	WITHOUT_CLASSIFICATION	0.9999981956887397	WITHOUT_CLASSIFICATION	1.8043112602088095E-6	DEFECT
// should be full moon	WITHOUT_CLASSIFICATION	0.9999940564766125	WITHOUT_CLASSIFICATION	5.943523387469905E-6	DEFECT
// Try a silly case	WITHOUT_CLASSIFICATION	0.9999937696466622	WITHOUT_CLASSIFICATION	6.2303533377673595E-6	DEFECT
// java.home is bogus	WITHOUT_CLASSIFICATION	0.999999382103876	WITHOUT_CLASSIFICATION	6.178961239687592E-7	DEFECT
// 60s // a further 30s	WITHOUT_CLASSIFICATION	0.9999999182523078	WITHOUT_CLASSIFICATION	8.174769223067138E-8	DEFECT
// 60s // a further 30s	WITHOUT_CLASSIFICATION	0.9999999182523078	WITHOUT_CLASSIFICATION	8.174769223067138E-8	DEFECT
// 60s // a further 30s	WITHOUT_CLASSIFICATION	0.9999999182523078	WITHOUT_CLASSIFICATION	8.174769223067138E-8	DEFECT
// order of headers cannot be guaranteed	WITHOUT_CLASSIFICATION	0.9999972936085362	WITHOUT_CLASSIFICATION	2.7063914638298603E-6	DEFECT
// order of headers cannot be guaranteed	WITHOUT_CLASSIFICATION	0.9999972936085362	WITHOUT_CLASSIFICATION	2.7063914638298603E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999920118448	WITHOUT_CLASSIFICATION	7.988155193624096E-8	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999920118448	WITHOUT_CLASSIFICATION	7.988155193624096E-8	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999920118448	WITHOUT_CLASSIFICATION	7.988155193624096E-8	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999920118448	WITHOUT_CLASSIFICATION	7.988155193624096E-8	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999920118448	WITHOUT_CLASSIFICATION	7.988155193624096E-8	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999920118448	WITHOUT_CLASSIFICATION	7.988155193624096E-8	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999920118448	WITHOUT_CLASSIFICATION	7.988155193624096E-8	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999920118448	WITHOUT_CLASSIFICATION	7.988155193624096E-8	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999920118448	WITHOUT_CLASSIFICATION	7.988155193624096E-8	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999920118448	WITHOUT_CLASSIFICATION	7.988155193624096E-8	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999920118448	WITHOUT_CLASSIFICATION	7.988155193624096E-8	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999920118448	WITHOUT_CLASSIFICATION	7.988155193624096E-8	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999920118448	WITHOUT_CLASSIFICATION	7.988155193624096E-8	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999920118448	WITHOUT_CLASSIFICATION	7.988155193624096E-8	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999920118448	WITHOUT_CLASSIFICATION	7.988155193624096E-8	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999920118448	WITHOUT_CLASSIFICATION	7.988155193624096E-8	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999920118448	WITHOUT_CLASSIFICATION	7.988155193624096E-8	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999920118448	WITHOUT_CLASSIFICATION	7.988155193624096E-8	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999920118448	WITHOUT_CLASSIFICATION	7.988155193624096E-8	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999920118448	WITHOUT_CLASSIFICATION	7.988155193624096E-8	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999920118448	WITHOUT_CLASSIFICATION	7.988155193624096E-8	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999920118448	WITHOUT_CLASSIFICATION	7.988155193624096E-8	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999920118448	WITHOUT_CLASSIFICATION	7.988155193624096E-8	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999920118448	WITHOUT_CLASSIFICATION	7.988155193624096E-8	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999920118448	WITHOUT_CLASSIFICATION	7.988155193624096E-8	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999920118448	WITHOUT_CLASSIFICATION	7.988155193624096E-8	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999920118448	WITHOUT_CLASSIFICATION	7.988155193624096E-8	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999920118448	WITHOUT_CLASSIFICATION	7.988155193624096E-8	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999920118448	WITHOUT_CLASSIFICATION	7.988155193624096E-8	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999920118448	WITHOUT_CLASSIFICATION	7.988155193624096E-8	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999920118448	WITHOUT_CLASSIFICATION	7.988155193624096E-8	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999920118448	WITHOUT_CLASSIFICATION	7.988155193624096E-8	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999920118448	WITHOUT_CLASSIFICATION	7.988155193624096E-8	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999920118448	WITHOUT_CLASSIFICATION	7.988155193624096E-8	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999920118448	WITHOUT_CLASSIFICATION	7.988155193624096E-8	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999920118448	WITHOUT_CLASSIFICATION	7.988155193624096E-8	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999920118448	WITHOUT_CLASSIFICATION	7.988155193624096E-8	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999920118448	WITHOUT_CLASSIFICATION	7.988155193624096E-8	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999920118448	WITHOUT_CLASSIFICATION	7.988155193624096E-8	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999920118448	WITHOUT_CLASSIFICATION	7.988155193624096E-8	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999920118448	WITHOUT_CLASSIFICATION	7.988155193624096E-8	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999920118448	WITHOUT_CLASSIFICATION	7.988155193624096E-8	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999920118448	WITHOUT_CLASSIFICATION	7.988155193624096E-8	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999920118448	WITHOUT_CLASSIFICATION	7.988155193624096E-8	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999920118448	WITHOUT_CLASSIFICATION	7.988155193624096E-8	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999920118448	WITHOUT_CLASSIFICATION	7.988155193624096E-8	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999920118448	WITHOUT_CLASSIFICATION	7.988155193624096E-8	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999920118448	WITHOUT_CLASSIFICATION	7.988155193624096E-8	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999920118448	WITHOUT_CLASSIFICATION	7.988155193624096E-8	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999920118448	WITHOUT_CLASSIFICATION	7.988155193624096E-8	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999920118448	WITHOUT_CLASSIFICATION	7.988155193624096E-8	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999920118448	WITHOUT_CLASSIFICATION	7.988155193624096E-8	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999920118448	WITHOUT_CLASSIFICATION	7.988155193624096E-8	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999920118448	WITHOUT_CLASSIFICATION	7.988155193624096E-8	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999920118448	WITHOUT_CLASSIFICATION	7.988155193624096E-8	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999920118448	WITHOUT_CLASSIFICATION	7.988155193624096E-8	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999920118448	WITHOUT_CLASSIFICATION	7.988155193624096E-8	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999920118448	WITHOUT_CLASSIFICATION	7.988155193624096E-8	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999920118448	WITHOUT_CLASSIFICATION	7.988155193624096E-8	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999920118448	WITHOUT_CLASSIFICATION	7.988155193624096E-8	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999920118448	WITHOUT_CLASSIFICATION	7.988155193624096E-8	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999920118448	WITHOUT_CLASSIFICATION	7.988155193624096E-8	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999920118448	WITHOUT_CLASSIFICATION	7.988155193624096E-8	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999920118448	WITHOUT_CLASSIFICATION	7.988155193624096E-8	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999920118448	WITHOUT_CLASSIFICATION	7.988155193624096E-8	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999920118448	WITHOUT_CLASSIFICATION	7.988155193624096E-8	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999920118448	WITHOUT_CLASSIFICATION	7.988155193624096E-8	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999920118448	WITHOUT_CLASSIFICATION	7.988155193624096E-8	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999920118448	WITHOUT_CLASSIFICATION	7.988155193624096E-8	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999920118448	WITHOUT_CLASSIFICATION	7.988155193624096E-8	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999920118448	WITHOUT_CLASSIFICATION	7.988155193624096E-8	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999920118448	WITHOUT_CLASSIFICATION	7.988155193624096E-8	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999920118448	WITHOUT_CLASSIFICATION	7.988155193624096E-8	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999920118448	WITHOUT_CLASSIFICATION	7.988155193624096E-8	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999920118448	WITHOUT_CLASSIFICATION	7.988155193624096E-8	DEFECT
/*                            Ignore method m, as there is an overloaded                            form of this method that takes in a                            non-string argument, which gains higher                            priority.                        */	WITHOUT_CLASSIFICATION	0.9999999969724149	WITHOUT_CLASSIFICATION	3.027585094817347E-9	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999734784456	WITHOUT_CLASSIFICATION	2.6521554394295955E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999734784456	WITHOUT_CLASSIFICATION	2.6521554394295955E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999734784456	WITHOUT_CLASSIFICATION	2.6521554394295955E-8	DEFECT
/*                        If the argument is not a String or Location,                        and if there                        is an overloaded form of this method already defined,                        we just override that with the new one.                        This mechanism does not guarantee any specific order                        in which the methods will be selected: so any code                        that depends on the order in which "set" methods have                        been defined, is not guaranteed to be selected in any                        particular order.                    */	WITHOUT_CLASSIFICATION	0.999999999999781	WITHOUT_CLASSIFICATION	2.1907068821204886E-13	DEFECT
// impossible as getMethods should only return public methods	WITHOUT_CLASSIFICATION	0.9999984867533561	WITHOUT_CLASSIFICATION	1.5132466438726477E-6	DEFECT
// impossible as getMethods should only return public methods	WITHOUT_CLASSIFICATION	0.9999984867533561	WITHOUT_CLASSIFICATION	1.5132466438726477E-6	DEFECT
// impossible as getMethods should only return public methods	WITHOUT_CLASSIFICATION	0.9999984867533561	WITHOUT_CLASSIFICATION	1.5132466438726477E-6	DEFECT
// boolean and Boolean get special treatment because we // have a nice method in Project	WITHOUT_CLASSIFICATION	0.9999998206593192	WITHOUT_CLASSIFICATION	1.793406806903088E-7	DEFECT
// find the line breaks and pass other chars through in blocks	WITHOUT_CLASSIFICATION	0.9999947565970261	WITHOUT_CLASSIFICATION	5.243402973956091E-6	DEFECT
// DataType can have a "no arg" constructor or take a single // Project argument.	WITHOUT_CLASSIFICATION	0.9999999457951333	WITHOUT_CLASSIFICATION	5.420486669531797E-8	DEFECT
// all the names are the same: check if the class path of the loader // is the same	WITHOUT_CLASSIFICATION	0.9999984799103034	WITHOUT_CLASSIFICATION	1.5200896965401442E-6	DEFECT
/* Interestingly enough, we get to here when a user                 * uses -Dname=value. However, in some cases, the OS                 * goes ahead and parses this out to args                 *   {"-Dname", "value"}                 * so instead of parsing on "=", we just make the "-D"                 * characters go away and skip one argument forward.                 *                 * I don't know how to predict when the JDK is going                 * to help or not, so we simply look for the equals sign.                 */	WITHOUT_CLASSIFICATION	0.9998588600407677	WITHOUT_CLASSIFICATION	1.4113995923224784E-4	DEFECT
// if parent is null, then we are at the root of the fs, // complain that we can't find the build file.	WITHOUT_CLASSIFICATION	0.9999671204489711	WITHOUT_CLASSIFICATION	3.287955102900743E-5	DEFECT
// put back the original security manager //The following will never eval to true. (PD)	WITHOUT_CLASSIFICATION	0.9999997126600206	WITHOUT_CLASSIFICATION	2.8733997932261765E-7	DEFECT
// ignore path elements which are invalid // relative to the project	WITHOUT_CLASSIFICATION	0.9999999992438053	WITHOUT_CLASSIFICATION	7.561946609340746E-10	DEFECT
// Ignore - we are interested only in the side // effect - that of getting the static initializers // invoked.  As we do not want to call a valid // constructor to get this side effect, an // attempt is made to call a hopefully // invalid constructor - come on, nobody // would have a constructor that takes in // 256 String arguments ;-) // (In fact, they can't - according to JVM spec // section 4.10, the number of method parameters is limited // to 255 by the definition of a method descriptor. // Constructors count as methods here.)	WITHOUT_CLASSIFICATION	0.9999868778312464	WITHOUT_CLASSIFICATION	1.3122168753632319E-5	DEFECT
/*<URL>*/	WITHOUT_CLASSIFICATION	0.9998110579615301	WITHOUT_CLASSIFICATION	1.8894203846988745E-4	DEFECT
/*<URL>*/	WITHOUT_CLASSIFICATION	0.9998110579615301	WITHOUT_CLASSIFICATION	1.8894203846988745E-4	DEFECT
// 'sync' is needed - otherwise 2 threads can load the same class // twice, resulting in LinkageError: duplicated class definition. // findLoadedClass avoids that, but without sync it won't work.	WITHOUT_CLASSIFICATION	0.6269988120026744	WITHOUT_CLASSIFICATION	0.3730011879973257	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9999971163476059	WITHOUT_CLASSIFICATION	2.8836523940921245E-6	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9999971163476059	WITHOUT_CLASSIFICATION	2.8836523940921245E-6	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9999971163476059	WITHOUT_CLASSIFICATION	2.8836523940921245E-6	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9999971163476059	WITHOUT_CLASSIFICATION	2.8836523940921245E-6	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9999971163476059	WITHOUT_CLASSIFICATION	2.8836523940921245E-6	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9999971163476059	WITHOUT_CLASSIFICATION	2.8836523940921245E-6	DEFECT
// Not significant for the class loader.	WITHOUT_CLASSIFICATION	0.999999494793521	WITHOUT_CLASSIFICATION	5.052064789418833E-7	DEFECT
// Not significant for the class loader.	WITHOUT_CLASSIFICATION	0.999999494793521	WITHOUT_CLASSIFICATION	5.052064789418833E-7	DEFECT
// Not significant for the class loader.	WITHOUT_CLASSIFICATION	0.999999494793521	WITHOUT_CLASSIFICATION	5.052064789418833E-7	DEFECT
// Not significant for the class loader.	WITHOUT_CLASSIFICATION	0.999999494793521	WITHOUT_CLASSIFICATION	5.052064789418833E-7	DEFECT
// Not significant for the class loader.	WITHOUT_CLASSIFICATION	0.999999494793521	WITHOUT_CLASSIFICATION	5.052064789418833E-7	DEFECT
// don't have to check for public, since // getConstructor finds public constructors only.	WITHOUT_CLASSIFICATION	0.9999998626817306	WITHOUT_CLASSIFICATION	1.3731826939123045E-7	DEFECT
//not a known type	WITHOUT_CLASSIFICATION	0.9995479888670685	WITHOUT_CLASSIFICATION	4.520111329315286E-4	DEFECT
// Initialize the globalFileSet's project	WITHOUT_CLASSIFICATION	0.999999860526926	WITHOUT_CLASSIFICATION	1.394730738770343E-7	DEFECT
// create a new Vector to avoid ConcurrentModificationExc when // the listeners get added/removed while we are in fire	WITHOUT_CLASSIFICATION	0.9999999982957063	WITHOUT_CLASSIFICATION	1.7042937739990588E-9	DEFECT
// first build exception	WITHOUT_CLASSIFICATION	0.999999793027793	WITHOUT_CLASSIFICATION	2.06972207107238E-7	DEFECT
// Not been visited	WITHOUT_CLASSIFICATION	0.9999999153049477	WITHOUT_CLASSIFICATION	8.469505232619664E-8	DEFECT
// -------------------- Optional methods   -------------------- // You can override those methods if you want to optimize or // do advanced things (like support a special syntax). // The methods do not chain - you should use them when embedding ant // (by replacing the main helper)	WITHOUT_CLASSIFICATION	0.999999467423651	WITHOUT_CLASSIFICATION	5.325763490902009E-7	DEFECT
/*                fragments.addElement(value.substring(pos + 1, pos + 2));                prev = pos + 2;                */	WITHOUT_CLASSIFICATION	0.9999999940795171	WITHOUT_CLASSIFICATION	5.920482955183737E-9	DEFECT
//empty	WITHOUT_CLASSIFICATION	0.9999522382740956	WITHOUT_CLASSIFICATION	4.7761725904433276E-5	DEFECT
//empty	WITHOUT_CLASSIFICATION	0.9999522382740956	WITHOUT_CLASSIFICATION	4.7761725904433276E-5	DEFECT
// -------------------- Common properties  -------------------- // The following properties are required by import ( and other tasks // that read build files using ProjectHelper ).	WITHOUT_CLASSIFICATION	0.9999964818531464	WITHOUT_CLASSIFICATION	3.5181468535564344E-6	DEFECT
// check to what is in the classname	WITHOUT_CLASSIFICATION	0.9999923240931426	WITHOUT_CLASSIFICATION	7.675906857360073E-6	DEFECT
//not included, do nothing	WITHOUT_CLASSIFICATION	0.9999924600269243	WITHOUT_CLASSIFICATION	7.539973075639509E-6	DEFECT
//not included, do nothing	WITHOUT_CLASSIFICATION	0.9999924600269243	WITHOUT_CLASSIFICATION	7.539973075639509E-6	DEFECT
// Attributes	WITHOUT_CLASSIFICATION	0.9999998797904756	WITHOUT_CLASSIFICATION	1.2020952449440314E-7	DEFECT
// make sure we aren't going to get the path separator next	WITHOUT_CLASSIFICATION	0.9999900178480757	WITHOUT_CLASSIFICATION	9.982151924276069E-6	DEFECT
// 'reasonable' default, if the component is used without // a Project ( for example as a standalone Bean ). // Most ant components can be used this way.	WITHOUT_CLASSIFICATION	0.9999952995487872	WITHOUT_CLASSIFICATION	4.70045121277266E-6	DEFECT
// don't have to check for public, since // getMethod finds public method only. // don't have to check for abstract, since then // taskClass would be abstract too.	WITHOUT_CLASSIFICATION	0.9999958849677022	WITHOUT_CLASSIFICATION	4.115032297871239E-6	DEFECT
// Mac	WITHOUT_CLASSIFICATION	0.9999989365684113	WITHOUT_CLASSIFICATION	1.0634315886956037E-6	DEFECT
// set in/excludes to reasonable defaults if needed:	WITHOUT_CLASSIFICATION	0.9999999805788348	WITHOUT_CLASSIFICATION	1.9421165261333707E-8	DEFECT
// may be on a case insensitive file system.  We want // the results to show what's really on the disk, so // we need to double check.	WITHOUT_CLASSIFICATION	0.9999996882065953	WITHOUT_CLASSIFICATION	3.11793404688287E-7	DEFECT
// avoid double scanning of directories, can only happen in fast mode	WITHOUT_CLASSIFICATION	0.9999907944444414	WITHOUT_CLASSIFICATION	9.205555558549511E-6	DEFECT
// Usually the initialized is set to true. But here it must not. // Because the prepend and append readers have to be instantiated // on runtime //newFilter.setInitialized(true);	WITHOUT_CLASSIFICATION	0.9999468938616174	WITHOUT_CLASSIFICATION	5.310613838247382E-5	DEFECT
// if at EOF with no characters in the buffer, return EOF	WITHOUT_CLASSIFICATION	0.9999999996351039	WITHOUT_CLASSIFICATION	3.648960457750122E-10	DEFECT
// The current character is always emitted.	WITHOUT_CLASSIFICATION	0.9999997051830666	WITHOUT_CLASSIFICATION	2.9481693346192993E-7	DEFECT
// The current character is always emitted.	WITHOUT_CLASSIFICATION	0.9999997051830666	WITHOUT_CLASSIFICATION	2.9481693346192993E-7	DEFECT
// The current character is always emitted.	WITHOUT_CLASSIFICATION	0.9999997051830666	WITHOUT_CLASSIFICATION	2.9481693346192993E-7	DEFECT
// The current character is always emitted.	WITHOUT_CLASSIFICATION	0.9999997051830666	WITHOUT_CLASSIFICATION	2.9481693346192993E-7	DEFECT
// Fall tru	WITHOUT_CLASSIFICATION	0.9999954293494907	WITHOUT_CLASSIFICATION	4.5706505093096635E-6	DEFECT
// Fall tru	WITHOUT_CLASSIFICATION	0.9999954293494907	WITHOUT_CLASSIFICATION	4.5706505093096635E-6	DEFECT
// Fall tru	WITHOUT_CLASSIFICATION	0.9999954293494907	WITHOUT_CLASSIFICATION	4.5706505093096635E-6	DEFECT
// Fall tru	WITHOUT_CLASSIFICATION	0.9999954293494907	WITHOUT_CLASSIFICATION	4.5706505093096635E-6	DEFECT
// Works like clone() but doesn't show up in the Javadocs	WITHOUT_CLASSIFICATION	0.9999395530562076	WITHOUT_CLASSIFICATION	6.044694379231382E-5	DEFECT
// ----------------------------------------- //  Predefined filters // -----------------------------------------	WITHOUT_CLASSIFICATION	0.9999998761910897	WITHOUT_CLASSIFICATION	1.238089103342488E-7	DEFECT
// -------------------------------------------- // //      Filter classes // // --------------------------------------------	WITHOUT_CLASSIFICATION	0.9999985409950837	WITHOUT_CLASSIFICATION	1.4590049163913718E-6	DEFECT
// Execute the top-level target	WITHOUT_CLASSIFICATION	0.9999999978231809	WITHOUT_CLASSIFICATION	2.1768190108801974E-9	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999997703627461	WITHOUT_CLASSIFICATION	2.296372539220789E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999997703627461	WITHOUT_CLASSIFICATION	2.296372539220789E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999997703627461	WITHOUT_CLASSIFICATION	2.296372539220789E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999997703627461	WITHOUT_CLASSIFICATION	2.296372539220789E-7	DEFECT
// Also check for properly formed URIs. Ant formerly recommended using // nonsense URIs such as "file:./foo.xml" in XML includes. You shouldn't // do that (just "foo.xml" is correct) but for compatibility we special-case // things when the path is not absolute, and fall back to the old parsing behavior.	WITHOUT_CLASSIFICATION	0.9964258960823834	WITHOUT_CLASSIFICATION	0.0035741039176164953	DEFECT
//decide whether to copy the existing arg set, or //build a new one from the list of all args excluding the special //operations that only we handle	WITHOUT_CLASSIFICATION	0.9999999907722226	WITHOUT_CLASSIFICATION	9.227777359743798E-9	DEFECT
// convert the replyTo string into a vector of emailaddresses	WITHOUT_CLASSIFICATION	0.9999998644316109	WITHOUT_CLASSIFICATION	1.3556838901573996E-7	DEFECT
// private static final int BG_BLACK = 40; // private static final int BG_RED = 41; // private static final int BG_GREEN = 42; // private static final int BG_YELLOW = 44; // private static final int BG_BLUE = 44; // private static final int BG_MAGENTA = 45; // private static final int BG_CYAN = 46; // private static final int BG_WHITE = 47;	WITHOUT_CLASSIFICATION	0.9999999890591427	WITHOUT_CLASSIFICATION	1.094085725928409E-8	DEFECT
// If the file being added is META-INF/application.xml, we // warn if it's not the one specified in the "appxml" // attribute - or if it's being added twice, meaning the same // file is specified by the "appxml" attribute and in a // <fileset> element.	WITHOUT_CLASSIFICATION	0.9999999856723389	WITHOUT_CLASSIFICATION	1.4327661024948074E-8	DEFECT
// class found but restricted name; this is // actually the case we're looking for in JDK 1.3+, // so catch the exception and return	WITHOUT_CLASSIFICATION	0.9999996645352571	WITHOUT_CLASSIFICATION	3.354647428335196E-7	DEFECT
// Can return null to represent the bootstrap class loader. // see API docs of Class.getClassLoader.	WITHOUT_CLASSIFICATION	0.9999999958228987	WITHOUT_CLASSIFICATION	4.177101328541886E-9	DEFECT
//default	WITHOUT_CLASSIFICATION	0.9999935834424488	WITHOUT_CLASSIFICATION	6.416557551124537E-6	DEFECT
//default	WITHOUT_CLASSIFICATION	0.9999935834424488	WITHOUT_CLASSIFICATION	6.416557551124537E-6	DEFECT
// use to scan own archive	WITHOUT_CLASSIFICATION	0.9999999873338098	WITHOUT_CLASSIFICATION	1.2666190185557974E-8	DEFECT
// collect filesets to pass them to getResourcesToAdd	WITHOUT_CLASSIFICATION	0.9999995980271482	WITHOUT_CLASSIFICATION	4.019728517146148E-7	DEFECT
// If we're in this finally clause because of an // exception, we don't really care if there's an // exception when closing the stream. E.g. if it // throws "ZIP file must have at least one entry", // because an exception happened before we added // any files, then we must swallow this // exception. Otherwise, the error that's reported // will be the close() error, which is not the // real cause of the problem.	WITHOUT_CLASSIFICATION	0.9931685265133018	WITHOUT_CLASSIFICATION	0.006831473486698286	DEFECT
/*             * Bad luck.             *             * There are resources in the filesets that make the             * archive out of date, but not in the non-fileset             * resources. We need to rescan the non-FileSets to grab             * all of them now.             */	WITHOUT_CLASSIFICATION	0.9999985793556184	WITHOUT_CLASSIFICATION	1.4206443816118961E-6	DEFECT
// ZIPs store time with a granularity of 2 seconds, round up	WITHOUT_CLASSIFICATION	0.9999636811599789	WITHOUT_CLASSIFICATION	3.6318840021189727E-5	DEFECT
/*             * ZipOutputStream.putNextEntry expects the ZipEntry to             * know its size and the CRC sum before you start writing             * the data when using STORED mode - unless it is seekable.             *             * This forces us to process the data twice.             */	WITHOUT_CLASSIFICATION	0.9999995433542045	WITHOUT_CLASSIFICATION	4.566457955670441E-7	DEFECT
// may be altered in validate	WITHOUT_CLASSIFICATION	0.9999989692358492	WITHOUT_CLASSIFICATION	1.030764150819715E-6	DEFECT
//at this point the paths are set up with lists of files, //and the mapper is ready to map from source dirs to dest files //now we iterate through every JAR giving source and dest names // deal with the paths	WITHOUT_CLASSIFICATION	0.9999999245343172	WITHOUT_CLASSIFICATION	7.546568281541766E-8	DEFECT
//calculate our destination directory; it is either the destDir //attribute, or the base dir of the fileset (for in situ updates)	WITHOUT_CLASSIFICATION	0.9999999908831289	WITHOUT_CLASSIFICATION	9.116871011677387E-9	DEFECT
// Error messages	WITHOUT_CLASSIFICATION	0.9999995117930297	WITHOUT_CLASSIFICATION	4.882069702486206E-7	DEFECT
// Default the viewpath to basedir if it is not specified	WITHOUT_CLASSIFICATION	0.9999997112381844	WITHOUT_CLASSIFICATION	2.887618156005689E-7	DEFECT
// Default the viewpath to basedir if it is not specified	WITHOUT_CLASSIFICATION	0.9999997112381844	WITHOUT_CLASSIFICATION	2.887618156005689E-7	DEFECT
// Default the viewpath to basedir if it is not specified	WITHOUT_CLASSIFICATION	0.9999997112381844	WITHOUT_CLASSIFICATION	2.887618156005689E-7	DEFECT
// Parse the attribute(s) and text of this node, adding // properties for each. // if the "path" attribute is specified, then return the created path // which will be passed to the children of this node.	WITHOUT_CLASSIFICATION	0.9999999762771484	WITHOUT_CLASSIFICATION	2.372285167233551E-8	DEFECT
// An arbitrary attribute.	WITHOUT_CLASSIFICATION	0.9999996718238617	WITHOUT_CLASSIFICATION	3.2817613824925695E-7	DEFECT
// Return the Path we added or the ID of this node for // children to reference if needed.  Path objects are // definitely used by child path elements, and ID may be used // for a child text node.	WITHOUT_CLASSIFICATION	0.9999999981331317	WITHOUT_CLASSIFICATION	1.866868369721574E-9	DEFECT
// Fall Through	WITHOUT_CLASSIFICATION	0.9999853385161575	WITHOUT_CLASSIFICATION	1.4661483842536138E-5	DEFECT
// Fall Through	WITHOUT_CLASSIFICATION	0.9999853385161575	WITHOUT_CLASSIFICATION	1.4661483842536138E-5	DEFECT
// Ignore the problem	WITHOUT_CLASSIFICATION	0.9999992380275066	WITHOUT_CLASSIFICATION	7.61972493506465E-7	DEFECT
// If we're on windows, then do the comparison ignoring case // and treat the two directory characters the same	WITHOUT_CLASSIFICATION	0.9999993915037885	WITHOUT_CLASSIFICATION	6.08496211541025E-7	DEFECT
// for NetWare and OS/2, piggy-back on Windows, since in the // validateSetup code, the same assumptions can be made as // with windows - that ; is the path separator	WITHOUT_CLASSIFICATION	0.9999041382165585	WITHOUT_CLASSIFICATION	9.586178344151079E-5	DEFECT
// END static class TemplateElement	WITHOUT_CLASSIFICATION	0.9999999621238733	WITHOUT_CLASSIFICATION	3.7876126698626695E-8	DEFECT
////////////////////////////////////////////////////////////////////// // CONSTRUCTORS / INITIALIZERS	WITHOUT_CLASSIFICATION	0.9999987186985023	WITHOUT_CLASSIFICATION	1.2813014977672953E-6	DEFECT
//value and property are mutually exclusive attributes	WITHOUT_CLASSIFICATION	0.9999774135247235	WITHOUT_CLASSIFICATION	2.2586475276557873E-5	DEFECT
// Ignore Exception	WITHOUT_CLASSIFICATION	0.999999691665249	WITHOUT_CLASSIFICATION	3.08334750927462E-7	DEFECT
//int logLevel = filesetManifestConfig == null ? //    Project.MSG_WARN : Project.MSG_VERBOSE; //log("File " + file //    + " includes a META-INF/MANIFEST.MF which will be ignored. " //    + "To include this file, set filesetManifest to a value other " //    + "than 'skip'.", logLevel);	WITHOUT_CLASSIFICATION	0.9999999832037556	WITHOUT_CLASSIFICATION	1.6796244353382697E-8	DEFECT
// Create the directory, as it might not exist.	WITHOUT_CLASSIFICATION	0.9999981157936351	WITHOUT_CLASSIFICATION	1.8842063649296757E-6	DEFECT
// Calculate the total checksum // Convert the keys (source files) into a sorted array.	WITHOUT_CLASSIFICATION	0.9999999920214268	WITHOUT_CLASSIFICATION	7.978573250395631E-9	DEFECT
// must not use getEntry as "well behaving" applications // must accept the manifest in any capitalization	WITHOUT_CLASSIFICATION	0.9999959340178919	WITHOUT_CLASSIFICATION	4.065982108046442E-6	DEFECT
// We just set the prefix for this fileset, and pass it up.	WITHOUT_CLASSIFICATION	0.9999933638937348	WITHOUT_CLASSIFICATION	6.636106265182413E-6	DEFECT
// We just set the prefix for this fileset, and pass it up.	WITHOUT_CLASSIFICATION	0.9999933638937348	WITHOUT_CLASSIFICATION	6.636106265182413E-6	DEFECT
/*             * Precedence: manifestFile wins over inline manifest,             * over manifests read from the filesets over the original             * manifest.             *             * merge with null argument is a no-op             */	WITHOUT_CLASSIFICATION	0.9999999251822854	WITHOUT_CLASSIFICATION	7.481771448967864E-8	DEFECT
// filesets are separate from the rest for performance // reasons.  If we use the code for union below, we'll always // scan all filesets, even if we know the target is out of // date after the first test.	WITHOUT_CLASSIFICATION	0.9999999999957809	WITHOUT_CLASSIFICATION	4.219034772298761E-12	DEFECT
// If the archive is built for the first time and it is // matched by a resource collection, then it hasn't been // found in check (it hasn't been there) but will be // included now. // // for some strange reason the old code would simply skip // the entry and not fail, do the same now for backwards // compatibility reasons.  Without this, the which4j build // fails in Gump	WITHOUT_CLASSIFICATION	0.9999995965868917	WITHOUT_CLASSIFICATION	4.034131082550549E-7	DEFECT
// preserve permissions	WITHOUT_CLASSIFICATION	0.9999993390853888	WITHOUT_CLASSIFICATION	6.609146111340041E-7	DEFECT
// override permissions if set explicitly	WITHOUT_CLASSIFICATION	0.9999954369434456	WITHOUT_CLASSIFICATION	4.563056554434267E-6	DEFECT
// Check if we can contact the URL	WITHOUT_CLASSIFICATION	0.9999968402613876	WITHOUT_CLASSIFICATION	3.1597386124407514E-6	DEFECT
// // Instance //	WITHOUT_CLASSIFICATION	0.9999994870324908	WITHOUT_CLASSIFICATION	5.129675092686605E-7	DEFECT
//the Exec OS check is different from Os.isOs(), which //probes for a specific OS. Instead it searches the os field //for the current os.name	WITHOUT_CLASSIFICATION	0.99999984593676	WITHOUT_CLASSIFICATION	1.5406324010307805E-7	DEFECT
// Similar to a fileset, but doesn't allow dir attribute to be set	WITHOUT_CLASSIFICATION	0.9999973852035903	WITHOUT_CLASSIFICATION	2.6147964097360445E-6	DEFECT
// If the destination directory didn't already exist, // or was empty, then no previous file removal is necessary!	WITHOUT_CLASSIFICATION	0.9999999729750542	WITHOUT_CLASSIFICATION	2.7024945912433742E-8	DEFECT
// Default the viewpath to basedir if it is not specified	WITHOUT_CLASSIFICATION	0.9999997112381844	WITHOUT_CLASSIFICATION	2.887618156005689E-7	DEFECT
// preserveInTarget would find all files we want to keep, // but we need to find all that we want to delete - so the // meaning of all patterns and selectors must be inverted	WITHOUT_CLASSIFICATION	0.9999999992394496	WITHOUT_CLASSIFICATION	7.6055039122671E-10	DEFECT
//On VMS platform, we need to create a special java options file //containing the arguments and classpath for the java command. //The special file is supported by the "-V" switch on the VMS JVM.	WITHOUT_CLASSIFICATION	0.9999999910256693	WITHOUT_CLASSIFICATION	8.974330677554066E-9	DEFECT
// Do nothing if no resources (including nested text)	WITHOUT_CLASSIFICATION	0.9999999509743466	WITHOUT_CLASSIFICATION	4.9025653414008685E-8	DEFECT
// Windows has a 32k limit on total arg size, so // create a temporary file to store all the arguments	WITHOUT_CLASSIFICATION	0.9999997970027982	WITHOUT_CLASSIFICATION	2.0299720188073532E-7	DEFECT
// filesets has been protected so we need to keep that even after // switching to resource collections.  In fact, they will still // get a different treatment form the other resource collections // even in execute since we have some subtle special features like // switching type to "dir" when we encounter a DirSet that would // be more difficult to achieve otherwise.	WITHOUT_CLASSIFICATION	0.9999948243764037	WITHOUT_CLASSIFICATION	5.175623596285436E-6	DEFECT
// need to reset the stream handler to restart // reading of pipes; // go ahead and do it always w/ nested redirectors	WITHOUT_CLASSIFICATION	0.999999954852111	WITHOUT_CLASSIFICATION	4.5147889018146876E-8	DEFECT
/*             * if we get here, in and out have not been specified, we are             * in batch processing mode.             */	WITHOUT_CLASSIFICATION	0.9999999584167875	WITHOUT_CLASSIFICATION	4.15832124732814E-8	DEFECT
//at this point there is one trailing space to remove, if the list is not empty.	WITHOUT_CLASSIFICATION	0.9999992352431183	WITHOUT_CLASSIFICATION	7.647568817490212E-7	DEFECT
// Ignore and keep trying	WITHOUT_CLASSIFICATION	0.9999998635540822	WITHOUT_CLASSIFICATION	1.3644591789315335E-7	DEFECT
// Chunk part of previous env var (UNIX env vars can // contain embedded new lines).	WITHOUT_CLASSIFICATION	0.9999993637014657	WITHOUT_CLASSIFICATION	6.362985342893292E-7	DEFECT
// Since we "look ahead" before adding, there's one last env var.	WITHOUT_CLASSIFICATION	0.9999997977907684	WITHOUT_CLASSIFICATION	2.022092315253502E-7	DEFECT
//noop default encoding used	WITHOUT_CLASSIFICATION	0.9999999915813883	WITHOUT_CLASSIFICATION	8.418611660450676E-9	DEFECT
// On OpenVMS Runtime#exec() doesn't support the environment array, // so we only return the new values which then will be set in // the generated DCL script, inheriting the parent process environment	WITHOUT_CLASSIFICATION	0.99984912808914	WITHOUT_CLASSIFICATION	1.5087191086002753E-4	DEFECT
// Locate the auxiliary script	WITHOUT_CLASSIFICATION	0.999999965354071	WITHOUT_CLASSIFICATION	3.4645929093924187E-8	DEFECT
// Build the command	WITHOUT_CLASSIFICATION	0.9996458287886709	WITHOUT_CLASSIFICATION	3.541712113290856E-4	DEFECT
/*         * Writes the command into a temporary DCL script and returns the         * corresponding File object.  The script will be deleted on exit.         * @param cmd the command line to execute as an array of strings.         * @param env the environment to set as an array of strings.         * @return the command File.         * @throws IOException if errors are encountered creating the file.         */	WITHOUT_CLASSIFICATION	0.9999996393163354	WITHOUT_CLASSIFICATION	3.606836646548315E-7	DEFECT
//************************************************************************ //  protected and private methods //************************************************************************	WITHOUT_CLASSIFICATION	0.9998609781775386	WITHOUT_CLASSIFICATION	1.3902182246137287E-4	DEFECT
// ensure that parent dir of dest file exists!	WITHOUT_CLASSIFICATION	0.9999987400714537	WITHOUT_CLASSIFICATION	1.2599285463575565E-6	DEFECT
// add the single group arguments // Javadoc 1.2 rules: //   Multiple -group args allowed. //   Each arg includes 3 strings: -group [name] [packagelist]. //   Elements in [packagelist] are colon-delimited. //   An element in [packagelist] may end with the * wildcard.	WITHOUT_CLASSIFICATION	0.9999998309294046	WITHOUT_CLASSIFICATION	1.690705954100919E-7	DEFECT
// for each sourcePath entry, add a directoryset with includes // taken from packagenames attribute and nested package // elements and excludes taken from excludepackages attribute // and nested excludepackage elements	WITHOUT_CLASSIFICATION	0.9999994326304766	WITHOUT_CLASSIFICATION	5.673695233706903E-7	DEFECT
// // Override the logging of output in order to filter out Generating // messages.  Generating messages are set to a priority of VERBOSE // unless they appear after what could be an informational message. //	WITHOUT_CLASSIFICATION	0.9999999973228202	WITHOUT_CLASSIFICATION	2.6771798694074133E-9	DEFECT
/* Methods below all add specific selectors */	WITHOUT_CLASSIFICATION	0.9999999554586554	WITHOUT_CLASSIFICATION	4.454134459379394E-8	DEFECT
/* Methods below all add specific selectors */	WITHOUT_CLASSIFICATION	0.9999999554586554	WITHOUT_CLASSIFICATION	4.454134459379394E-8	DEFECT
/* Methods below all add specific selectors */	WITHOUT_CLASSIFICATION	0.9999999554586554	WITHOUT_CLASSIFICATION	4.454134459379394E-8	DEFECT
/*               If verbosity is MSG_VERBOSE, that mean we are doing               regular logging (backwards as that sounds).  In that               case, we want to print one message about deleting the               top of the directory tree.  Otherwise, the removeDir               method will handle messages for _all_ directories.             */	WITHOUT_CLASSIFICATION	0.9999999975500109	WITHOUT_CLASSIFICATION	2.4499891466689783E-9	DEFECT
//hand down	WITHOUT_CLASSIFICATION	0.9999913046449269	WITHOUT_CLASSIFICATION	8.69535507317794E-6	DEFECT
// create intermediary directories - sometimes zip don't add them	WITHOUT_CLASSIFICATION	0.9999999787651429	WITHOUT_CLASSIFICATION	2.1234857108514035E-8	DEFECT
// SQL defines "--" as a comment to EOL // and in Oracle it may contain a hint // so we cannot just remove it, instead we must end it	WITHOUT_CLASSIFICATION	0.9999999599366124	WITHOUT_CLASSIFICATION	4.006338764633077E-8	DEFECT
/*         * In Ant 1.1, <chmod dir="foo" /> means, change the permissions         * of directory foo, not anything inside of it.  This is the case the         * second branch of the if statement below catches for backwards         * compatibility.         */	WITHOUT_CLASSIFICATION	0.999998600832811	WITHOUT_CLASSIFICATION	1.3991671890407893E-6	DEFECT
/* for historical and performance reasons we have to do               things in a rather complex way.               (1) Move is optimized to move directories if a fileset               has been included completely, therefore FileSets need a               special treatment.  This is also required to support               the failOnError semantice (skip filesets with broken               basedir but handle the remaining collections).               (2) We carry around a few protected methods that work               on basedirs and arrays of names.  To optimize stuff, all               resources with the same basedir get collected in               separate lists and then each list is handled in one go.            */	WITHOUT_CLASSIFICATION	0.9823736734567161	WITHOUT_CLASSIFICATION	0.017626326543283805	DEFECT
//we create a fileset with the source file. //this lets us combine our logic for handling output directories, //mapping etc.	WITHOUT_CLASSIFICATION	0.9999999975859162	WITHOUT_CLASSIFICATION	2.4140837534721034E-9	DEFECT
// if input files are specified, inputString and inputStream are ignored; // classes that work with redirector attributes can enforce // whatever warnings are needed	WITHOUT_CLASSIFICATION	0.9999995953977885	WITHOUT_CLASSIFICATION	4.046022114351509E-7	DEFECT
// Ignore exception	WITHOUT_CLASSIFICATION	0.9999991717952554	WITHOUT_CLASSIFICATION	8.282047445369054E-7	DEFECT
// Ignore exception	WITHOUT_CLASSIFICATION	0.9999991717952554	WITHOUT_CLASSIFICATION	8.282047445369054E-7	DEFECT
// Ignore exception	WITHOUT_CLASSIFICATION	0.9999991717952554	WITHOUT_CLASSIFICATION	8.282047445369054E-7	DEFECT
// classpath attributes go into a vector	WITHOUT_CLASSIFICATION	0.9999998280132765	WITHOUT_CLASSIFICATION	1.719867235193427E-7	DEFECT
// we have already started reading this section // this line is the first attribute. set it and then // let the normal read handle the rest	WITHOUT_CLASSIFICATION	0.9999999913836151	WITHOUT_CLASSIFICATION	8.616384948437086E-9	DEFECT
//not modified so no file download. just return //instead and trace out something so the user //doesn't think that the download happened when it //didn't	WITHOUT_CLASSIFICATION	0.9999999648051722	WITHOUT_CLASSIFICATION	3.5194827760814674E-8	DEFECT
// we have started to (over)write dest, but failed. // Try to delete the garbage we'd otherwise leave // behind.	WITHOUT_CLASSIFICATION	0.9999999138110859	WITHOUT_CLASSIFICATION	8.618891410349415E-8	DEFECT
// start() would throw IllegalThreadStateException from // ThreadGroup.add if it were destroyed	WITHOUT_CLASSIFICATION	0.999999959181168	WITHOUT_CLASSIFICATION	4.081883192799718E-8	DEFECT
// kjc-1.5A doesn't support -encoding option now. // but it will be supported near the feature.	WITHOUT_CLASSIFICATION	0.9999690328048969	WITHOUT_CLASSIFICATION	3.09671951031291E-5	DEFECT
// Create an instance of the compiler, redirecting output to // the project log	WITHOUT_CLASSIFICATION	0.9999997327967383	WITHOUT_CLASSIFICATION	2.672032617355107E-7	DEFECT
// Setup the apt executable	WITHOUT_CLASSIFICATION	0.9999996387796791	WITHOUT_CLASSIFICATION	3.6122032090885873E-7	DEFECT
//On VMS platform, we need to create a special java options file //containing the arguments and classpath for the javac command. //The special file is supported by the "-V" switch on the VMS JVM.	WITHOUT_CLASSIFICATION	0.9999999926587698	WITHOUT_CLASSIFICATION	7.3412302450212114E-9	DEFECT
//must keep for subclass BC, though unused: // CheckStyle:ConstantNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9999976818025703	WITHOUT_CLASSIFICATION	2.3181974295918422E-6	DEFECT
// CheckStyle:ConstantNameCheck ON // CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999912045215	WITHOUT_CLASSIFICATION	8.795478434543951E-9	DEFECT
// add dest dir to classpath so that previously compiled and // untouched classes are on classpath	WITHOUT_CLASSIFICATION	0.9999999805408805	WITHOUT_CLASSIFICATION	1.945911956803865E-8	DEFECT
// add dest dir to classpath so that previously compiled and // untouched classes are on classpath	WITHOUT_CLASSIFICATION	0.9999999805408805	WITHOUT_CLASSIFICATION	1.945911956803865E-8	DEFECT
// For -sourcepath, use the "sourcepath" value if present. // Otherwise default to the "srcdir" value.	WITHOUT_CLASSIFICATION	0.999999999405294	WITHOUT_CLASSIFICATION	5.947059763286804E-10	DEFECT
/*             * Many system have been reported to get into trouble with             * long command lines - no, not only Windows ;-).             *             * POSIX seems to define a lower limit of 4k, so use a temporary             * file if the total length of the command line exceeds this limit.             */	WITHOUT_CLASSIFICATION	0.999869550465399	WITHOUT_CLASSIFICATION	1.304495346010214E-4	DEFECT
// there is a bootclasspath stated.  By default, the // includeJavaRuntime is false.  If the user has stated a // bootclasspath and said to include the java runtime, it's on // their head!	WITHOUT_CLASSIFICATION	0.999998834045707	WITHOUT_CLASSIFICATION	1.1659542930338202E-6	DEFECT
//The following is data used while processing stdout of CVS command	WITHOUT_CLASSIFICATION	0.9999998976441731	WITHOUT_CLASSIFICATION	1.0235582687600699E-7	DEFECT
// The date format is using a - format since 1.12.9 so we have: // 1.12.9-: 'date: YYYY/mm/dd HH:mm:ss;  author: name;' // 1.12.9+: 'date: YYYY-mm-dd HH:mm:ss Z;  author: name'	WITHOUT_CLASSIFICATION	0.9999912329959671	WITHOUT_CLASSIFICATION	8.767004032824224E-6	DEFECT
// Default the viewpath to basedir if it is not specified	WITHOUT_CLASSIFICATION	0.9999997112381844	WITHOUT_CLASSIFICATION	2.887618156005689E-7	DEFECT
// Default the viewpath to basedir if it is not specified	WITHOUT_CLASSIFICATION	0.9999997112381844	WITHOUT_CLASSIFICATION	2.887618156005689E-7	DEFECT
// viewpath	WITHOUT_CLASSIFICATION	0.9999991045193062	WITHOUT_CLASSIFICATION	8.954806939133249E-7	DEFECT
// ClearCase items	WITHOUT_CLASSIFICATION	0.9999999751946179	WITHOUT_CLASSIFICATION	2.480538211714276E-8	DEFECT
// ClearCase items	WITHOUT_CLASSIFICATION	0.9999999751946179	WITHOUT_CLASSIFICATION	2.480538211714276E-8	DEFECT
// -branch	WITHOUT_CLASSIFICATION	0.9999997404659084	WITHOUT_CLASSIFICATION	2.5953409151141754E-7	DEFECT
// -c	WITHOUT_CLASSIFICATION	0.9999973021095986	WITHOUT_CLASSIFICATION	2.69789040142524E-6	DEFECT
// entries are of the form: //CVS 1.11 // File module/filename is new; current revision 1.1 //CVS 1.11.9 // File module/filename is new; cvstag_2003_11_03_2  revision 1.1 // or // File module/filename changed from revision 1.4 to 1.6 // or // File module/filename is removed; not included in // release tag SKINLF_12 //CVS 1.11.9 // File testantoine/antoine.bat is removed; TESTANTOINE_1 revision 1.1.1.1 // // get rid of 'File module/"	WITHOUT_CLASSIFICATION	0.9999999522979256	WITHOUT_CLASSIFICATION	4.770207445921887E-8	DEFECT
// CheckStyle:MemberNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9999996003406534	WITHOUT_CLASSIFICATION	3.9965934663299273E-7	DEFECT
// We need character encoding aware printing here. // So, using PrintWriter over OutputStreamWriter instead of PrintStream	WITHOUT_CLASSIFICATION	0.9999997981943887	WITHOUT_CLASSIFICATION	2.0180561132266023E-7	DEFECT
// convert from ascii back to native // encoding to convert to/from // Where to find input files // Where to put output files // Extension of output files if different	WITHOUT_CLASSIFICATION	0.9999998825263245	WITHOUT_CLASSIFICATION	1.1747367548539928E-7	DEFECT
// we are forced to fork ANTLR since there is a call // to System.exit() and there is nothing we can do // right now to avoid this. :-( (SBa) // I'm not removing this method to keep backward compatibility	WITHOUT_CLASSIFICATION	0.9999986157518681	WITHOUT_CLASSIFICATION	1.3842481318496308E-6	DEFECT
//error if both are empty, or both are set	WITHOUT_CLASSIFICATION	0.9999999159163289	WITHOUT_CLASSIFICATION	8.4083671196905E-8	DEFECT
// hasCR is still true (for the second one)	WITHOUT_CLASSIFICATION	0.9999819202494592	WITHOUT_CLASSIFICATION	1.8079750540848446E-5	DEFECT
// should be the default, as it integrates better in ant.	WITHOUT_CLASSIFICATION	0.9999997380813909	WITHOUT_CLASSIFICATION	2.619186092301793E-7	DEFECT
// scan source and dest dirs to build up both copy lists and // compile lists //        scanDir(srcDir, destDir);	WITHOUT_CLASSIFICATION	0.9999999907942004	WITHOUT_CLASSIFICATION	9.205799454383744E-9	DEFECT
// if it's a non source file, copy it if a later date than the // dest // if it's a source file, see if the destination class file // needs to be recreated via compilation	WITHOUT_CLASSIFICATION	0.9999999767205066	WITHOUT_CLASSIFICATION	2.327949352410548E-8	DEFECT
// depending on implementation, XMLReader can yield hips of warning, // only output then if user explicitly asked for it	WITHOUT_CLASSIFICATION	0.9998827347081037	WITHOUT_CLASSIFICATION	1.1726529189629122E-4	DEFECT
/* ========================================================================    *    * Instance variables.    */	WITHOUT_CLASSIFICATION	0.9999999545405598	WITHOUT_CLASSIFICATION	4.5459440323994614E-8	DEFECT
// swallow	WITHOUT_CLASSIFICATION	0.9999979726191459	WITHOUT_CLASSIFICATION	2.0273808541088527E-6	DEFECT
// swallow	WITHOUT_CLASSIFICATION	0.9999979726191459	WITHOUT_CLASSIFICATION	2.0273808541088527E-6	DEFECT
// swallow	WITHOUT_CLASSIFICATION	0.9999979726191459	WITHOUT_CLASSIFICATION	2.0273808541088527E-6	DEFECT
// swallow	WITHOUT_CLASSIFICATION	0.9999979726191459	WITHOUT_CLASSIFICATION	2.0273808541088527E-6	DEFECT
// If only default is specified and the property previously // existed in the property file, it is unchanged.	WITHOUT_CLASSIFICATION	0.9999996455133249	WITHOUT_CLASSIFICATION	3.544866751310998E-7	DEFECT
// make sure to close all handles, otherwise the garbage // collector will close them...whenever possible and // Windows may complain about not being able to delete files.	WITHOUT_CLASSIFICATION	0.9999997692877192	WITHOUT_CLASSIFICATION	2.3071228087527577E-7	DEFECT
// WARN: Don't use the StreamSource(File) ctor. It won't work with // xalan prior to 2.2 because of systemid bugs.	WITHOUT_CLASSIFICATION	0.9065069505612617	WITHOUT_CLASSIFICATION	0.09349304943873823	DEFECT
// build the command line from what we got the format // as specified in the CCM.EXE help	WITHOUT_CLASSIFICATION	0.9999991019489122	WITHOUT_CLASSIFICATION	8.98051087820649E-7	DEFECT
// implementation of org.apache.tools.ant.taskdefs.ExecuteStreamHandler interface	WITHOUT_CLASSIFICATION	0.9999999696584374	WITHOUT_CLASSIFICATION	3.0341562584858437E-8	DEFECT
// Default the viewpath to basedir if it is not specified	WITHOUT_CLASSIFICATION	0.9999997112381844	WITHOUT_CLASSIFICATION	2.887618156005689E-7	DEFECT
// Default the viewpath to basedir if it is not specified	WITHOUT_CLASSIFICATION	0.9999997112381844	WITHOUT_CLASSIFICATION	2.887618156005689E-7	DEFECT
// Default the viewpath to basedir if it is not specified	WITHOUT_CLASSIFICATION	0.9999997112381844	WITHOUT_CLASSIFICATION	2.887618156005689E-7	DEFECT
// Default the viewpath to basedir if it is not specified	WITHOUT_CLASSIFICATION	0.9999997112381844	WITHOUT_CLASSIFICATION	2.887618156005689E-7	DEFECT
/*         * pre Ant 1.6 this method used to call getClass().getResource         * while Ant 1.6 will call ClassLoader.getResource().         *         * The difference is that Class.getResource expects a leading         * slash for "absolute" resources and will strip it before         * delegating to ClassLoader.getResource - so we now have to         * emulate Class's behavior.         */	WITHOUT_CLASSIFICATION	0.9999999722877985	WITHOUT_CLASSIFICATION	2.771220153667366E-8	DEFECT
// -c	WITHOUT_CLASSIFICATION	0.9999973021095986	WITHOUT_CLASSIFICATION	2.69789040142524E-6	DEFECT
// -cfile	WITHOUT_CLASSIFICATION	0.9999993699440514	WITHOUT_CLASSIFICATION	6.300559486654806E-7	DEFECT
// -cfile	WITHOUT_CLASSIFICATION	0.9999993699440514	WITHOUT_CLASSIFICATION	6.300559486654806E-7	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999959189831487	WITHOUT_CLASSIFICATION	4.081016851450244E-6	DEFECT
/* ------------- */	WITHOUT_CLASSIFICATION	0.9999908131734059	WITHOUT_CLASSIFICATION	9.186826594068371E-6	DEFECT
// -I- or -I-Y or -I-N	WITHOUT_CLASSIFICATION	0.9999983118135244	WITHOUT_CLASSIFICATION	1.6881864756226249E-6	DEFECT
// -I- or -I-Y or -I-N	WITHOUT_CLASSIFICATION	0.9999983118135244	WITHOUT_CLASSIFICATION	1.6881864756226249E-6	DEFECT
// -I- or -I-Y or -I-N	WITHOUT_CLASSIFICATION	0.9999983118135244	WITHOUT_CLASSIFICATION	1.6881864756226249E-6	DEFECT
// first off, make sure that we've got a command and a vssdir and a label ...	WITHOUT_CLASSIFICATION	0.9999915729899292	WITHOUT_CLASSIFICATION	8.427010070691159E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999734784456	WITHOUT_CLASSIFICATION	2.6521554394295955E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999734784456	WITHOUT_CLASSIFICATION	2.6521554394295955E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999734784456	WITHOUT_CLASSIFICATION	2.6521554394295955E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999734784456	WITHOUT_CLASSIFICATION	2.6521554394295955E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999734784456	WITHOUT_CLASSIFICATION	2.6521554394295955E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999734784456	WITHOUT_CLASSIFICATION	2.6521554394295955E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999734784456	WITHOUT_CLASSIFICATION	2.6521554394295955E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999734784456	WITHOUT_CLASSIFICATION	2.6521554394295955E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999734784456	WITHOUT_CLASSIFICATION	2.6521554394295955E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999734784456	WITHOUT_CLASSIFICATION	2.6521554394295955E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999734784456	WITHOUT_CLASSIFICATION	2.6521554394295955E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999734784456	WITHOUT_CLASSIFICATION	2.6521554394295955E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999734784456	WITHOUT_CLASSIFICATION	2.6521554394295955E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999734784456	WITHOUT_CLASSIFICATION	2.6521554394295955E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999734784456	WITHOUT_CLASSIFICATION	2.6521554394295955E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999734784456	WITHOUT_CLASSIFICATION	2.6521554394295955E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999734784456	WITHOUT_CLASSIFICATION	2.6521554394295955E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999734784456	WITHOUT_CLASSIFICATION	2.6521554394295955E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999734784456	WITHOUT_CLASSIFICATION	2.6521554394295955E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999734784456	WITHOUT_CLASSIFICATION	2.6521554394295955E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999734784456	WITHOUT_CLASSIFICATION	2.6521554394295955E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999734784456	WITHOUT_CLASSIFICATION	2.6521554394295955E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999734784456	WITHOUT_CLASSIFICATION	2.6521554394295955E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999734784456	WITHOUT_CLASSIFICATION	2.6521554394295955E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999734784456	WITHOUT_CLASSIFICATION	2.6521554394295955E-8	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999959189831487	WITHOUT_CLASSIFICATION	4.081016851450244E-6	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999959189831487	WITHOUT_CLASSIFICATION	4.081016851450244E-6	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999959189831487	WITHOUT_CLASSIFICATION	4.081016851450244E-6	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999959189831487	WITHOUT_CLASSIFICATION	4.081016851450244E-6	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999959189831487	WITHOUT_CLASSIFICATION	4.081016851450244E-6	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999959189831487	WITHOUT_CLASSIFICATION	4.081016851450244E-6	DEFECT
/* -------------------- */	WITHOUT_CLASSIFICATION	0.9999915634382015	WITHOUT_CLASSIFICATION	8.43656179852486E-6	DEFECT
// -Y	WITHOUT_CLASSIFICATION	0.999996768295783	WITHOUT_CLASSIFICATION	3.2317042170528907E-6	DEFECT
// -Y	WITHOUT_CLASSIFICATION	0.999996768295783	WITHOUT_CLASSIFICATION	3.2317042170528907E-6	DEFECT
// -Y	WITHOUT_CLASSIFICATION	0.999996768295783	WITHOUT_CLASSIFICATION	3.2317042170528907E-6	DEFECT
// VSS items	WITHOUT_CLASSIFICATION	0.9999996711915852	WITHOUT_CLASSIFICATION	3.288084147713794E-7	DEFECT
// VSS items	WITHOUT_CLASSIFICATION	0.9999996711915852	WITHOUT_CLASSIFICATION	3.288084147713794E-7	DEFECT
// skip version info and general purpose byte	WITHOUT_CLASSIFICATION	0.9999999110888873	WITHOUT_CLASSIFICATION	8.89111126793246E-8	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999959189831487	WITHOUT_CLASSIFICATION	4.081016851450244E-6	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999959189831487	WITHOUT_CLASSIFICATION	4.081016851450244E-6	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999959189831487	WITHOUT_CLASSIFICATION	4.081016851450244E-6	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999959189831487	WITHOUT_CLASSIFICATION	4.081016851450244E-6	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999959189831487	WITHOUT_CLASSIFICATION	4.081016851450244E-6	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999959189831487	WITHOUT_CLASSIFICATION	4.081016851450244E-6	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999959189831487	WITHOUT_CLASSIFICATION	4.081016851450244E-6	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999959189831487	WITHOUT_CLASSIFICATION	4.081016851450244E-6	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999959189831487	WITHOUT_CLASSIFICATION	4.081016851450244E-6	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999959189831487	WITHOUT_CLASSIFICATION	4.081016851450244E-6	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999959189831487	WITHOUT_CLASSIFICATION	4.081016851450244E-6	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999959189831487	WITHOUT_CLASSIFICATION	4.081016851450244E-6	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999959189831487	WITHOUT_CLASSIFICATION	4.081016851450244E-6	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999959189831487	WITHOUT_CLASSIFICATION	4.081016851450244E-6	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999959189831487	WITHOUT_CLASSIFICATION	4.081016851450244E-6	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999959189831487	WITHOUT_CLASSIFICATION	4.081016851450244E-6	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999959189831487	WITHOUT_CLASSIFICATION	4.081016851450244E-6	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999959189831487	WITHOUT_CLASSIFICATION	4.081016851450244E-6	DEFECT
// first off, make sure that we've got a command and a vssdir and a label ...	WITHOUT_CLASSIFICATION	0.9999915729899292	WITHOUT_CLASSIFICATION	8.427010070691159E-6	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999959189831487	WITHOUT_CLASSIFICATION	4.081016851450244E-6	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999959189831487	WITHOUT_CLASSIFICATION	4.081016851450244E-6	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999959189831487	WITHOUT_CLASSIFICATION	4.081016851450244E-6	DEFECT
// we get the root classes and build up a set of // classes upon which they depend	WITHOUT_CLASSIFICATION	0.9999986190337179	WITHOUT_CLASSIFICATION	1.3809662821444167E-6	DEFECT
// read the constant pool in and resolve it	WITHOUT_CLASSIFICATION	0.9999973679522052	WITHOUT_CLASSIFICATION	2.6320477948827484E-6	DEFECT
/*         * Use the Runtime object to execute an external command.  Use the         * RedirectOutput inner class to direct the standard and error output         * from the command to the JRE's standard output         */	WITHOUT_CLASSIFICATION	0.9999962070525401	WITHOUT_CLASSIFICATION	3.792947459908071E-6	DEFECT
/*         * Two Maps are used to track local DTDs that will be used in case the         * remote copies of these DTDs cannot be accessed.  The key for the Map         * is the DTDs public ID and the value is the local location for the DTD         */	WITHOUT_CLASSIFICATION	0.9999998763842626	WITHOUT_CLASSIFICATION	1.2361573741386947E-7	DEFECT
// depFile exists and is newer than the class file // need to get dependency list from the map.	WITHOUT_CLASSIFICATION	0.9999258646096426	WITHOUT_CLASSIFICATION	7.413539035729329E-5	DEFECT
// without closure we may delete an inner class but not the // top level class which would not trigger a recompile.	WITHOUT_CLASSIFICATION	0.9999998629419246	WITHOUT_CLASSIFICATION	1.3705807539408374E-7	DEFECT
//always trigger file mode if commands are big enough	WITHOUT_CLASSIFICATION	0.9999572262664891	WITHOUT_CLASSIFICATION	4.277373351095E-5	DEFECT
//fill in args	WITHOUT_CLASSIFICATION	0.9999967047289918	WITHOUT_CLASSIFICATION	3.2952710081810528E-6	DEFECT
//fill in args	WITHOUT_CLASSIFICATION	0.9999967047289918	WITHOUT_CLASSIFICATION	3.2952710081810528E-6	DEFECT
//iterate through the ref list & generate an entry for each //or just rely on the fact that the toString operator does this, but //noting that the separator is ';' on windows, ':' on unix	WITHOUT_CLASSIFICATION	0.9987522561295634	WITHOUT_CLASSIFICATION	0.0012477438704366045	DEFECT
//now run the command of exe + settings + files	WITHOUT_CLASSIFICATION	0.9998906573069504	WITHOUT_CLASSIFICATION	1.0934269304957087E-4	DEFECT
/*     * Directory where "source" EJB files are stored and where stubs and     * skeletons will also be written.     */	WITHOUT_CLASSIFICATION	0.9999990003008957	WITHOUT_CLASSIFICATION	9.996991043339843E-7	DEFECT
/*     * This Hashtable maintains a list of EJB class files processed by the ejbc     * utility (both "source" class files as well as stubs and skeletons). The     * key for the Hashtable is a String representing the path to the class file     * (relative to the destination directory).  The value for the Hashtable is     * a File object which reference the actual class file.     */	WITHOUT_CLASSIFICATION	0.9999999999888256	WITHOUT_CLASSIFICATION	1.1174505520471769E-11	DEFECT
/* Execute the ejbc utility -- stubs/skeletons are rebuilt, if needed */	WITHOUT_CLASSIFICATION	0.9999999789059738	WITHOUT_CLASSIFICATION	2.1094026208639007E-8	DEFECT
// EJB's display name // EJB's home interface name // EJB's remote interface name // EJB's implementation class // EJB's primary key class // or "stateful" or "stateless" // Does this EJB support CMP? // Does this EJB support IIOP? // Does this EJB require failover? // CMP descriptor list	WITHOUT_CLASSIFICATION	0.9631666268030316	WITHOUT_CLASSIFICATION	0.03683337319696835	DEFECT
/* Check the timestamp on the EJB implementation class.             *             * Note that if ONLY the implementation class has changed, it's not             * necessary to rebuild the EJB stubs and skeletons.  For this             * reason, we ensure the file exists (using lastModified above), but             * we DON'T compare it's timestamp with the timestamps of the home             * and remote interfaces (because it's irrelevant in determining if             * ejbc must be run)             */	WITHOUT_CLASSIFICATION	0.9999999971616845	WITHOUT_CLASSIFICATION	2.838315468908331E-9	DEFECT
//classpath //add at the end of the classpath //the system classpath in order to find the tools.jar file	WITHOUT_CLASSIFICATION	0.9999969331308984	WITHOUT_CLASSIFICATION	3.0668691015052863E-6	DEFECT
// ejb jar file	WITHOUT_CLASSIFICATION	0.9999999729582584	WITHOUT_CLASSIFICATION	2.704174167322765E-8	DEFECT
//client jar file	WITHOUT_CLASSIFICATION	0.9999999521435692	WITHOUT_CLASSIFICATION	4.7856430789949445E-8	DEFECT
// Have to catch this because of the semantics of calling main()	WITHOUT_CLASSIFICATION	0.9999959651245206	WITHOUT_CLASSIFICATION	4.034875479439638E-6	DEFECT
/* ------------- */	WITHOUT_CLASSIFICATION	0.9999908131734059	WITHOUT_CLASSIFICATION	9.186826594068371E-6	DEFECT
/* ------------- */	WITHOUT_CLASSIFICATION	0.9999908131734059	WITHOUT_CLASSIFICATION	9.186826594068371E-6	DEFECT
// descriptorName = <path><basename><basenameterminator><remainder> // examples = /org/objectweb/fooAppli/foo/Foo-ejb-jar.xml // examples = /org/objectweb/fooAppli/foo/Foo.xml (JOnAS convention)	WITHOUT_CLASSIFICATION	0.9999992900281064	WITHOUT_CLASSIFICATION	7.09971893681784E-7	DEFECT
// class name (search in the classpath provided for the ejbjar element)	WITHOUT_CLASSIFICATION	0.9999992648861211	WITHOUT_CLASSIFICATION	7.351138789597886E-7	DEFECT
// additionalargs	WITHOUT_CLASSIFICATION	0.9999990735647101	WITHOUT_CLASSIFICATION	9.264352898972894E-7	DEFECT
// get all the files in the descriptor directory	WITHOUT_CLASSIFICATION	0.9999983746158554	WITHOUT_CLASSIFICATION	1.625384144628737E-6	DEFECT
// If an explicit securityPolicy file was specified, it maybe an // absolute path.  Use the project to resolve it.	WITHOUT_CLASSIFICATION	0.9999998402398216	WITHOUT_CLASSIFICATION	1.5976017843970487E-7	DEFECT
// Since the descriptor read properly, everything should be o.k.	WITHOUT_CLASSIFICATION	0.9999990186725572	WITHOUT_CLASSIFICATION	9.81327442842914E-7	DEFECT
// Lastly create File object for the Jar files. If we are using // a flat destination dir, then we need to redefine baseName!	WITHOUT_CLASSIFICATION	0.9999999942544724	WITHOUT_CLASSIFICATION	5.745527622590068E-9	DEFECT
/*         * For the GenericDeploymentTool, do nothing.  Vendor specific         * subclasses should throw a BuildException if the configuration is         * invalid for their server.         */	WITHOUT_CLASSIFICATION	0.9999999987280652	WITHOUT_CLASSIFICATION	1.2719347896862672E-9	DEFECT
// Get the filename of vendor specific descriptor	WITHOUT_CLASSIFICATION	0.9999999905861582	WITHOUT_CLASSIFICATION	9.413841756414538E-9	DEFECT
// now that we have the weblogic descriptor, we parse the file // to find other descriptors needed to deploy the bean. // this could be the weblogic-cmp-rdbms.xml or any other O/R // mapping tool descriptors.	WITHOUT_CLASSIFICATION	0.9999983990847373	WITHOUT_CLASSIFICATION	1.6009152627132827E-6	DEFECT
// Update with changed Bean class	WITHOUT_CLASSIFICATION	0.999992087676754	WITHOUT_CLASSIFICATION	7.912323246081586E-6	DEFECT
// need to close files and perhaps rename output	WITHOUT_CLASSIFICATION	0.9999998227950222	WITHOUT_CLASSIFICATION	1.7720497786442619E-7	DEFECT
// empty	WITHOUT_CLASSIFICATION	0.9999977239442466	WITHOUT_CLASSIFICATION	2.276055753465723E-6	DEFECT
// empty	WITHOUT_CLASSIFICATION	0.9999977239442466	WITHOUT_CLASSIFICATION	2.276055753465723E-6	DEFECT
// are any of the above out of date. // we find the implementation classes and see if they are older than any // of the above or the .ser file itself.	WITHOUT_CLASSIFICATION	0.9999997438519358	WITHOUT_CLASSIFICATION	2.5614806418911656E-7	DEFECT
/*     * Filenames of the standard EJB descriptor (which is passed to this class     * from the parent "ejbjar" task) and the iAS-specific EJB descriptor     * (whose name is determined by this class).  Both filenames are relative     * to the directory specified by the "srcdir" attribute in the ejbjar task.     */	WITHOUT_CLASSIFICATION	0.9999999964314454	WITHOUT_CLASSIFICATION	3.5685544674263953E-9	DEFECT
//remove the .class	WITHOUT_CLASSIFICATION	0.9999963226369065	WITHOUT_CLASSIFICATION	3.677363093573161E-6	DEFECT
// create the output .jar, if required	WITHOUT_CLASSIFICATION	0.9999998238776392	WITHOUT_CLASSIFICATION	1.761223608685548E-7	DEFECT
// change this to get the objects from the other reference	WITHOUT_CLASSIFICATION	0.999999906695094	WITHOUT_CLASSIFICATION	9.330490607855882E-8	DEFECT
// Available specification version must be >= required	WITHOUT_CLASSIFICATION	0.9999999359797954	WITHOUT_CLASSIFICATION	6.402020458603082E-8	DEFECT
// Implementation version must be >= required	WITHOUT_CLASSIFICATION	0.9999988911361422	WITHOUT_CLASSIFICATION	1.1088638578793157E-6	DEFECT
//WARNING: We trim the values of all the attributes because //Some extension declarations are badly defined (ie have spaces //after version or vendorID)	WITHOUT_CLASSIFICATION	0.9997972968296163	WITHOUT_CLASSIFICATION	2.0270317038377145E-4	DEFECT
/*     * Validates URL     */	WITHOUT_CLASSIFICATION	0.9999994635276115	WITHOUT_CLASSIFICATION	5.364723885424137E-7	DEFECT
// the new value, this needs to be here // because it is required to calculate the next position to // search from at the end of the loop	WITHOUT_CLASSIFICATION	0.9963709397090657	WITHOUT_CLASSIFICATION	0.00362906029093437	DEFECT
// iterator through all the files and process them.	WITHOUT_CLASSIFICATION	0.9999999946945709	WITHOUT_CLASSIFICATION	5.3054291001562905E-9	DEFECT
// keys to optional attributes	WITHOUT_CLASSIFICATION	0.9999999158777553	WITHOUT_CLASSIFICATION	8.412224482008004E-8	DEFECT
// use the directory containing the target as the output directory	WITHOUT_CLASSIFICATION	0.9999999999161449	WITHOUT_CLASSIFICATION	8.385514968741877E-11	DEFECT
// null watchdog means no timeout, you'd better not check with null	WITHOUT_CLASSIFICATION	0.9999978164751075	WITHOUT_CLASSIFICATION	2.18352489252514E-6	DEFECT
/*         * pre Ant 1.6 this method used to call getClass().getResource         * while Ant 1.6 will call ClassLoader.getResource().         *         * The difference is that Class.getResource expects a leading         * slash for "absolute" resources and will strip it before         * delegating to ClassLoader.getResource - so we now have to         * emulate Class's behavior.         */	WITHOUT_CLASSIFICATION	0.9999999722877985	WITHOUT_CLASSIFICATION	2.771220153667366E-8	DEFECT
// this comment extract from JUnit Task may also apply here // "in VM is not very nice since it could probably hang the // whole build. IMHO this method should be avoided and it would be best // to remove it in future versions. TBD. (SBa)"	WITHOUT_CLASSIFICATION	0.6186904889854816	DEFECT	0.3813095110145183	WITHOUT_CLASSIFICATION
// not necessary as JDepend would fail, but why loose // some time?	WITHOUT_CLASSIFICATION	0.9996566774104744	WITHOUT_CLASSIFICATION	3.433225895256556E-4	DEFECT
// not necessary as JDepend would fail, but why loose // some time?	WITHOUT_CLASSIFICATION	0.9996566774104744	WITHOUT_CLASSIFICATION	3.433225895256556E-4	DEFECT
// not necessary as JDepend would fail, but why loose // some time?	WITHOUT_CLASSIFICATION	0.9996566774104744	WITHOUT_CLASSIFICATION	3.433225895256556E-4	DEFECT
//do nothing	WITHOUT_CLASSIFICATION	0.9999979065745354	WITHOUT_CLASSIFICATION	2.0934254645997813E-6	DEFECT
//do nothing	WITHOUT_CLASSIFICATION	0.9999979065745354	WITHOUT_CLASSIFICATION	2.0934254645997813E-6	DEFECT
//If we get here, it could be because we are trying to put a //directory entry that already exists. //For example, we're trying to write "com", but a previous //entry from another mergefile was called "com". //In that case, just ignore the error and go on to the //next entry.	WITHOUT_CLASSIFICATION	0.999999998816763	WITHOUT_CLASSIFICATION	1.1832369621852392E-9	DEFECT
/*          First, some notes.          On MRJ 2.2.2, getting the size, compressed size, and CRC32 from the          ZipInputStream does not work for compressed (deflated) files.  Those calls return -1.          For uncompressed (stored) files, those calls do work.          However, using ZipFile.getEntries() works for both compressed and          uncompressed files.          Now, from some simple testing I did, it seems that the value of CRC-32 is          independent of the compression setting. So, it should be easy to pass this          information on to the output entry.        */	WITHOUT_CLASSIFICATION	0.9244559875476653	WITHOUT_CLASSIFICATION	0.07554401245233466	DEFECT
// Quick return - no output do nothing.	WITHOUT_CLASSIFICATION	0.9999999312526728	WITHOUT_CLASSIFICATION	6.874732719767169E-8	DEFECT
// Self-describing as of JUnit 4 (#38811). But trim "(ClassName)".	WITHOUT_CLASSIFICATION	0.999997797220089	WITHOUT_CLASSIFICATION	2.202779911099818E-6	DEFECT
//the trick to integrating test output to the formatter, is to //create a special test class that asserts an error //and tell the formatter that it raised.	WITHOUT_CLASSIFICATION	0.9999999974507237	WITHOUT_CLASSIFICATION	2.5492764769828096E-9	DEFECT
// ignored.	WITHOUT_CLASSIFICATION	0.9999999025067926	WITHOUT_CLASSIFICATION	9.749320733648377E-8	DEFECT
/*         * pre Ant 1.6 this method used to call getClass().getResource         * while Ant 1.6 will call ClassLoader.getResource().         *         * The difference is that Class.getResource expects a leading         * slash for "absolute" resources and will strip it before         * delegating to ClassLoader.getResource - so we now have to         * emulate Class's behavior.         */	WITHOUT_CLASSIFICATION	0.9999999722877985	WITHOUT_CLASSIFICATION	2.771220153667366E-8	DEFECT
// okay we have a copy of the child, now the child becomes the parent // and we are iterating recursively over its children.	WITHOUT_CLASSIFICATION	0.9999999787455478	WITHOUT_CLASSIFICATION	2.1254452214213214E-8	DEFECT
// See wrapListener for reason:	WITHOUT_CLASSIFICATION	0.9999991035935377	WITHOUT_CLASSIFICATION	8.964064622630246E-7	DEFECT
// if there is a suite method available, then try // to extract the suite from it. If there is an error // here it will be caught below and reported.	WITHOUT_CLASSIFICATION	0.9996425229733253	WITHOUT_CLASSIFICATION	3.5747702667464267E-4	DEFECT
// JUnit 4 does not distinguish between errors and failures // even in the JUnit 3 adapter. // So we need to help it a bit to retain compatibility for JUnit 3 tests.	WITHOUT_CLASSIFICATION	0.999997690617008	WITHOUT_CLASSIFICATION	2.309382991999724E-6	DEFECT
// sorted by newest Kaffe version first	WITHOUT_CLASSIFICATION	0.9999995184187038	WITHOUT_CLASSIFICATION	4.815812961300281E-7	DEFECT
//getProject().log("listing files in directory " + directory, Project.MSG_DEBUG);	WITHOUT_CLASSIFICATION	0.9999993048844374	WITHOUT_CLASSIFICATION	6.951155624293608E-7	DEFECT
// to remove directories, start by the end of the list // the trunk does not let itself be removed before the leaves	WITHOUT_CLASSIFICATION	0.9999996182688954	WITHOUT_CLASSIFICATION	3.817311045729563E-7	DEFECT
// ignore it	WITHOUT_CLASSIFICATION	0.9999998225132426	WITHOUT_CLASSIFICATION	1.7748675740256538E-7	DEFECT
// NumberFormatException or ArrayOutOfBondsException could happen here	WITHOUT_CLASSIFICATION	0.9999806897044876	WITHOUT_CLASSIFICATION	1.9310295512360994E-5	DEFECT
//Throw exception on errors (except up-to-date) // //When a server is down, the code expects : //Perforce client error: //Connect to server failed; check $P4PORT. //TCP connect to localhost:1666 failed. //connect: localhost:1666: Connection refused //Some forms producing commands (p4 -s change -o) do tag the output //others don't..... //Others mark errors as info, for example edit a file //which is already open for edit..... //Just look for error: - catches most things....	WITHOUT_CLASSIFICATION	0.9999996304020682	WITHOUT_CLASSIFICATION	3.6959793177635433E-7	DEFECT
// Because of the way I create the full target path, there // must be NO slash at the end of targetFolder and folderName // However, if the slash or backslash is the only character, leave it alone	WITHOUT_CLASSIFICATION	0.9999999215615651	WITHOUT_CLASSIFICATION	7.843843483860214E-8	DEFECT
// Connect to the StarTeam server, and log on.	WITHOUT_CLASSIFICATION	0.9999999467377634	WITHOUT_CLASSIFICATION	5.3262236745919157E-8	DEFECT
// Simplest constructor, uses default encryption algorithm and compression level.	WITHOUT_CLASSIFICATION	0.9999999805643892	WITHOUT_CLASSIFICATION	1.9435610756142005E-8	DEFECT
// Create a variable dir that contains the name of // the StarTeam folder that is the root folder in this view. // Get the default path to the current view.	WITHOUT_CLASSIFICATION	0.9999999945533619	WITHOUT_CLASSIFICATION	5.446638233927155E-9	DEFECT
// We want to display the folder the same way you would // enter it on the command line ... so we remove the // View name (which is also the name of the root folder, // and therefore shows up at the start of the path).	WITHOUT_CLASSIFICATION	0.9999804086915846	WITHOUT_CLASSIFICATION	1.959130841551829E-5	DEFECT
// If we displayed the project, view, item type, or folder, // then show the list of relevant item properties.	WITHOUT_CLASSIFICATION	0.9999999902840259	WITHOUT_CLASSIFICATION	9.715974214337392E-9	DEFECT
// If we find a "file" attribute then act on a file otherwise act on a project	WITHOUT_CLASSIFICATION	0.999999949025334	WITHOUT_CLASSIFICATION	5.097466599041573E-8	DEFECT
// Special setters for the sub-classes	WITHOUT_CLASSIFICATION	0.9999999703489056	WITHOUT_CLASSIFICATION	2.9651094344090855E-8	DEFECT
// Special setters for the sub-classes	WITHOUT_CLASSIFICATION	0.9999999703489056	WITHOUT_CLASSIFICATION	2.9651094344090855E-8	DEFECT
// Login info is required	WITHOUT_CLASSIFICATION	0.9999687380737545	WITHOUT_CLASSIFICATION	3.126192624551798E-5	DEFECT
// Path to the SourceOffSite home directory /home/user/.sos	WITHOUT_CLASSIFICATION	0.9999999292673942	WITHOUT_CLASSIFICATION	7.073260576633847E-8	DEFECT
// Check if source is a directory	WITHOUT_CLASSIFICATION	0.9999998972737738	WITHOUT_CLASSIFICATION	1.0272622627498553E-7	DEFECT
/*             *  There is a bug in JavaSound 0.90 (jdk1.3beta).             *  It prevents correct termination of the VM.             *  So we have to exit ourselves.             */	WITHOUT_CLASSIFICATION	0.9543744985776125	WITHOUT_CLASSIFICATION	0.04562550142238759	DEFECT
// Catch everything - some of the above return nulls, // throw exceptions or generally misbehave // in the event of a problem etc	WITHOUT_CLASSIFICATION	0.9991762700200603	WITHOUT_CLASSIFICATION	8.237299799397867E-4	DEFECT
// only track progress for files larger than 100kb in verbose mode	WITHOUT_CLASSIFICATION	0.9999699112408967	WITHOUT_CLASSIFICATION	3.0088759103295377E-5	DEFECT
// only track progress for files larger than 100kb in verbose mode	WITHOUT_CLASSIFICATION	0.9999699112408967	WITHOUT_CLASSIFICATION	3.0088759103295377E-5	DEFECT
// since filesize keeps on decreasing we have to store the // initial filesize	WITHOUT_CLASSIFICATION	0.9999999967093394	WITHOUT_CLASSIFICATION	3.290660661729615E-9	DEFECT
// note, it's important to scan the items BEFORE we make the // UnmatchedFileMap because that creates a bunch of NEW // folders and files (unattached to repository) and we // don't want to include those in our traversal.	WITHOUT_CLASSIFICATION	0.9999999699581763	WITHOUT_CLASSIFICATION	3.004182363239692E-8	DEFECT
// If the file doesn't pass the include/exclude tests, skip it.	WITHOUT_CLASSIFICATION	0.9999995940746007	WITHOUT_CLASSIFICATION	4.0592539935988627E-7	DEFECT
// If the file doesn't pass the include/exclude tests, skip it.	WITHOUT_CLASSIFICATION	0.9999995940746007	WITHOUT_CLASSIFICATION	4.0592539935988627E-7	DEFECT
// We try to update the status once to give StarTeam // another chance.	WITHOUT_CLASSIFICATION	0.9999999959300719	WITHOUT_CLASSIFICATION	4.069928082331428E-9	DEFECT
// note, it's important to scan the items BEFORE we make the // Unmatched file map because that creates a bunch of NEW // folders and files (unattached to repository) and we // don't want to include those in our traversal.	WITHOUT_CLASSIFICATION	0.9999999386125747	WITHOUT_CLASSIFICATION	6.138742522525363E-8	DEFECT
// once we find a folder that isn't in the repository, // anything below it can be deleted.	WITHOUT_CLASSIFICATION	0.9999990674784213	WITHOUT_CLASSIFICATION	9.325215787608071E-7	DEFECT
/////////////////////////////////////////////////////////////// // default values for attributes. ///////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999996298888956	WITHOUT_CLASSIFICATION	3.7011110437615516E-7	DEFECT
// default behavior is to fail on an error // default behavior is to not overwrite // default behavior is make a single link	WITHOUT_CLASSIFICATION	0.9999959214005895	WITHOUT_CLASSIFICATION	4.078599410549399E-6	DEFECT
// build the command line from what we got the format is // ss Add VSS items [-B] [-C] [-D-] [-H] [-I-] [-K] [-N] [-O] [-R] [-W] [-Y] [-?] // as specified in the SS.EXE help	WITHOUT_CLASSIFICATION	0.9999998921007974	WITHOUT_CLASSIFICATION	1.0789920255156893E-7	DEFECT
// build the command line from what we got the format is // ss Checkout VSS items [-G] [-C] [-H] [-I-] [-N] [-O] [-R] [-V] [-Y] [-?] // as specified in the SS.EXE help	WITHOUT_CLASSIFICATION	0.9999999789511825	WITHOUT_CLASSIFICATION	2.1048817508242043E-8	DEFECT
// Not a .class file or the one we'd generate	WITHOUT_CLASSIFICATION	0.9999999437245513	WITHOUT_CLASSIFICATION	5.627544880960923E-8	DEFECT
// We have the loader which is being used to load the // CatalogResolver. Can it see the ApacheResolver? The // base resolver will only be able to create the ApacheResolver // if it can see it - doesn't use the context loader.	WITHOUT_CLASSIFICATION	0.999999891183106	WITHOUT_CLASSIFICATION	1.0881689402236216E-7	DEFECT
// // Use the passed in base in preference to the base // from matchingEntry, which is either null or the // directory in which the external catalog file from // which it was obtained is located.  We make a copy // so matchingEntry's original base is untouched. // // This is the standard behavior as per my reading of // the JAXP and XML Catalog specs.  CKS 11/7/2002 //	WITHOUT_CLASSIFICATION	0.9999999985463864	WITHOUT_CLASSIFICATION	1.4536136318226757E-9	DEFECT
// // Get Method instances for each of the methods we need to // call on the resolverImpl using reflection.  We can't // call them directly, because they require on the // xml-commons resolver library which may not be available // in the classpath. //	WITHOUT_CLASSIFICATION	0.9992626354868195	WITHOUT_CLASSIFICATION	7.373645131806397E-4	DEFECT
// // We didn't match a ResourceLocation, but since we // only support PUBLIC and URI entry types internally, // it is still possible that there is another entry in // an external catalog that will match.  We call // Apache resolver's resolveEntity method to cover // this possibility. //	WITHOUT_CLASSIFICATION	0.9800144705910039	WITHOUT_CLASSIFICATION	0.019985529408996134	DEFECT
// record data about the last scanned resource	WITHOUT_CLASSIFICATION	0.9999998940262215	WITHOUT_CLASSIFICATION	1.0597377854110862E-7	DEFECT
// path containing one or more elements	WITHOUT_CLASSIFICATION	0.9999999880489561	WITHOUT_CLASSIFICATION	1.1951044046315948E-8	DEFECT
// just append beginToken and search further	WITHOUT_CLASSIFICATION	0.9999998234709472	WITHOUT_CLASSIFICATION	1.7652905276834132E-7	DEFECT
//create the command to run Java, including user specified options	WITHOUT_CLASSIFICATION	0.9999999806530846	WITHOUT_CLASSIFICATION	1.9346915310935896E-8	DEFECT
// JDK usage command line says that -jar must be the first option, as there is // a bug in JDK < 1.4 that forces the jvm type to be specified as the first // option, it is appended here as specified in the docs even though there is // in fact no order.	WITHOUT_CLASSIFICATION	0.9999999606956264	WITHOUT_CLASSIFICATION	3.9304373783339195E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999734784456	WITHOUT_CLASSIFICATION	2.6521554394295955E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999734784456	WITHOUT_CLASSIFICATION	2.6521554394295955E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999734784456	WITHOUT_CLASSIFICATION	2.6521554394295955E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999734784456	WITHOUT_CLASSIFICATION	2.6521554394295955E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999734784456	WITHOUT_CLASSIFICATION	2.6521554394295955E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999734784456	WITHOUT_CLASSIFICATION	2.6521554394295955E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999734784456	WITHOUT_CLASSIFICATION	2.6521554394295955E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999734784456	WITHOUT_CLASSIFICATION	2.6521554394295955E-8	DEFECT
/* now check each Resource in case the child only           lets through files from any children IT may have: */	WITHOUT_CLASSIFICATION	0.9998640541692633	WITHOUT_CLASSIFICATION	1.359458307367336E-4	DEFECT
// Quick return: directories cannot be signed	WITHOUT_CLASSIFICATION	0.9998267978553578	WITHOUT_CLASSIFICATION	1.732021446422216E-4	DEFECT
/**     * When using this as a custom selector, this method will be called.     * It translates each parameter into the appropriate setXXX() call.     *     * @param parameters the complete set of parameters for this selector     */	WITHOUT_CLASSIFICATION	0.9999974097210492	WITHOUT_CLASSIFICATION	2.590278950674067E-6	DEFECT
/**     * When using this as a custom selector, this method will be called.     * It translates each parameter into the appropriate setXXX() call.     *     * @param parameters the complete set of parameters for this selector     */	WITHOUT_CLASSIFICATION	0.9999974097210492	WITHOUT_CLASSIFICATION	2.590278950674067E-6	DEFECT
/**     * When using this as a custom selector, this method will be called.     * It translates each parameter into the appropriate setXXX() call.     *     * @param parameters the complete set of parameters for this selector     */	WITHOUT_CLASSIFICATION	0.9999974097210492	WITHOUT_CLASSIFICATION	2.590278950674067E-6	DEFECT
/**     * When using this as a custom selector, this method will be called.     * It translates each parameter into the appropriate setXXX() call.     *     * @param parameters the complete set of parameters for this selector     */	WITHOUT_CLASSIFICATION	0.9999974097210492	WITHOUT_CLASSIFICATION	2.590278950674067E-6	DEFECT
/**     * When using this as a custom selector, this method will be called.     * It translates each parameter into the appropriate setXXX() call.     *     * @param parameters the complete set of parameters for this selector     */	WITHOUT_CLASSIFICATION	0.9999974097210492	WITHOUT_CLASSIFICATION	2.590278950674067E-6	DEFECT
/**     * When using this as a custom selector, this method will be called.     * It translates each parameter into the appropriate setXXX() call.     *     * @param parameters the complete set of parameters for this selector.     */	WITHOUT_CLASSIFICATION	0.9999985545238441	WITHOUT_CLASSIFICATION	1.4454761558511438E-6	DEFECT
// // -----  Set default values  ----- //	WITHOUT_CLASSIFICATION	0.9999998644673294	WITHOUT_CLASSIFICATION	1.3553267059453276E-7	DEFECT
// nothing specified - use default	WITHOUT_CLASSIFICATION	0.9999999991069856	WITHOUT_CLASSIFICATION	8.930143429385952E-10	DEFECT
// How to handle non-file-Resources? I copy temporarily the // resource to a file and use the file-implementation.	WITHOUT_CLASSIFICATION	0.9999999967250558	WITHOUT_CLASSIFICATION	3.2749441820531023E-9	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9999973739209252	WITHOUT_CLASSIFICATION	2.626079074631375E-6	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9999973739209252	WITHOUT_CLASSIFICATION	2.626079074631375E-6	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9999973739209252	WITHOUT_CLASSIFICATION	2.626079074631375E-6	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9999973739209252	WITHOUT_CLASSIFICATION	2.626079074631375E-6	DEFECT
//find the out-of-date targets:	WITHOUT_CLASSIFICATION	0.9999999617524675	WITHOUT_CLASSIFICATION	3.824753254949105E-8	DEFECT
// write namespace declarations	WITHOUT_CLASSIFICATION	0.9999999759294088	WITHOUT_CLASSIFICATION	2.407059118646224E-8	DEFECT
// Extrapolating from: // "NetWare may have a "java" in that directory, but 99% of // the time, you don't want to execute it" -- Jeff Tulley // <JTULLEY@novell.com>	WITHOUT_CLASSIFICATION	0.9996135736637276	WITHOUT_CLASSIFICATION	3.864263362723606E-4	DEFECT
// fall through	WITHOUT_CLASSIFICATION	0.9999829562496656	WITHOUT_CLASSIFICATION	1.7043750334415944E-5	DEFECT
// fall through	WITHOUT_CLASSIFICATION	0.9999829562496656	WITHOUT_CLASSIFICATION	1.7043750334415944E-5	DEFECT
// Check for bsf first then javax // This version does not check if the scriptManager // supports the language.	WITHOUT_CLASSIFICATION	0.9999998030446988	WITHOUT_CLASSIFICATION	1.9695530117522225E-7	DEFECT
// NotReached	WITHOUT_CLASSIFICATION	0.9999994845760515	WITHOUT_CLASSIFICATION	5.154239484926931E-7	DEFECT
// NotReached	WITHOUT_CLASSIFICATION	0.9999994845760515	WITHOUT_CLASSIFICATION	5.154239484926931E-7	DEFECT
//no need to synchronize, as Vector is always synchronized	WITHOUT_CLASSIFICATION	0.9999984237123457	WITHOUT_CLASSIFICATION	1.5762876543409326E-6	DEFECT
// Eliminate consecutive slashes after the drive spec:	WITHOUT_CLASSIFICATION	0.9999996864600613	WITHOUT_CLASSIFICATION	3.135399386173099E-7	DEFECT
//if it does not, then the file is not up to date.	WITHOUT_CLASSIFICATION	0.9999795912379381	WITHOUT_CLASSIFICATION	2.0408762061829E-5	DEFECT
// record destdir for later use in getResource	WITHOUT_CLASSIFICATION	0.9999992530939414	WITHOUT_CLASSIFICATION	7.469060584810699E-7	DEFECT
// Check to see if it's an inner class 'com.company.Class$Inner'	WITHOUT_CLASSIFICATION	0.9999999762512637	WITHOUT_CLASSIFICATION	2.374873626362062E-8	DEFECT
// treat non-matching groups as empty matches	WITHOUT_CLASSIFICATION	0.9999998959140949	WITHOUT_CLASSIFICATION	1.0408590509544207E-7	DEFECT
// treat non-matching groups as empty matches	WITHOUT_CLASSIFICATION	0.9999998959140949	WITHOUT_CLASSIFICATION	1.0408590509544207E-7	DEFECT
/*          A 6-byte block header, the value chosen arbitrarily          as 0x314159265359 :-).  A 32 bit value does not really          give a strong enough guarantee that the value will not          appear by chance in the compressed datastream.  Worst-case          probability of this event, for a 900k block, is about          2.0e-3 for 32 bits, 1.0e-5 for 40 bits and 4.0e-8 for 48 bits.          For a compressed file of size 100Gb -- about 100000 blocks --          only a 48-bit marker will do.  NB: normal compression/          decompression do *not* rely on these statistical properties.          They are only important when trying to recover blocks from          damaged files.        */	WITHOUT_CLASSIFICATION	0.9991717124721646	WITHOUT_CLASSIFICATION	8.282875278352621E-4	DEFECT
// write 8-bit	WITHOUT_CLASSIFICATION	0.9999993240562125	WITHOUT_CLASSIFICATION	6.759437874944691E-7	DEFECT
// bsBuffShadow |= 0 << (32 - bsLiveShadow - 1);	WITHOUT_CLASSIFICATION	0.9999992115875215	WITHOUT_CLASSIFICATION	7.884124785727905E-7	DEFECT
// // inlined: bsW(len_selCtr[sfmap_i] & 0xff, //              code_selCtr[sfmap_i]); //	WITHOUT_CLASSIFICATION	0.9999999722075673	WITHOUT_CLASSIFICATION	2.7792432618157707E-8	DEFECT
// Following block contains unrolled code which could be shortened by // coding it in additional loops.	WITHOUT_CLASSIFICATION	0.9999759085406078	WITHOUT_CLASSIFICATION	2.4091459392195464E-5	DEFECT
/*                  Complete the big bucket [ss] by quicksorting                  any unsorted small buckets [ss, j].  Hopefully                  previous pointer-scanning phases have already                  completed many of the small buckets [ss, j], so                  we don't have to sort them at all.            */	WITHOUT_CLASSIFICATION	0.9999999694883532	WITHOUT_CLASSIFICATION	3.051164673108073E-8	DEFECT
// Step 2: // Now scan this big bucket so as to synthesise the // sorted order for small buckets [t, ss] for all t != ss.	WITHOUT_CLASSIFICATION	0.9999996539126318	WITHOUT_CLASSIFICATION	3.460873681584865E-7	DEFECT
//  900021 byte // 3600000 byte // 3600000 byte // ------------ // 8433529 byte // ============	WITHOUT_CLASSIFICATION	0.9999888470118077	WITHOUT_CLASSIFICATION	1.1152988192339942E-5	DEFECT
// The clean way would be to throw an exception. //throw new IOException("crc error");	WITHOUT_CLASSIFICATION	0.9999366759009133	WITHOUT_CLASSIFICATION	6.332409908663521E-5	DEFECT
// make next blocks readable without error // (repair feature, not yet documented, not tested)	WITHOUT_CLASSIFICATION	0.9999994882458246	WITHOUT_CLASSIFICATION	5.117541753174275E-7	DEFECT
/*          Setting up the unzftab entries here is not strictly          necessary, but it does save having to do it later          in a separate pass, and so saves a block's worth of          cache misses.        */	WITHOUT_CLASSIFICATION	0.9994805178541781	WITHOUT_CLASSIFICATION	5.194821458218231E-4	DEFECT
// tt.length should always be >= length, but theoretically // it can happen, if the compressor mixed small and large // blocks.  Normally only the last block will be smaller // than others.	WITHOUT_CLASSIFICATION	0.9939904258157076	WITHOUT_CLASSIFICATION	0.006009574184292302	DEFECT
// deprecated, but email is byte-oriented	WITHOUT_CLASSIFICATION	0.9999917926202591	WITHOUT_CLASSIFICATION	8.207379740871306E-6	DEFECT
// // NOTE // We have fit EOF, and the block is not full! // // This is a broken archive. It does not follow the standard // blocking algorithm. However, because we are generous, and // it requires little effort, we will simply ignore the error // and continue as if the entire block were read. This does // not appear to break anything upstream. We used to return // false in this case. // // Thanks to 'Yohann.Roussel@alcatel.fr' for this fix. //	WITHOUT_CLASSIFICATION	0.9992466358141068	WITHOUT_CLASSIFICATION	7.533641858931816E-4	DEFECT
// version needed to extract // general purpose bit flag	WITHOUT_CLASSIFICATION	0.9999996953432261	WITHOUT_CLASSIFICATION	3.046567739332244E-7	DEFECT
// requires version 2 as we are going to store length info // in the data descriptor	WITHOUT_CLASSIFICATION	0.999984165304018	WITHOUT_CLASSIFICATION	1.583469598199975E-5	DEFECT
// file comment	WITHOUT_CLASSIFICATION	0.9999953237913937	WITHOUT_CLASSIFICATION	4.676208606290033E-6	DEFECT
// swallow, throw the original exception instead	WITHOUT_CLASSIFICATION	0.9999614654513991	WITHOUT_CLASSIFICATION	3.8534548600897045E-5	DEFECT
/* compressed size                 */	WITHOUT_CLASSIFICATION	0.9999985560326601	WITHOUT_CLASSIFICATION	1.4439673399108997E-6	DEFECT
/* disk number start               */	WITHOUT_CLASSIFICATION	0.9999989913636423	WITHOUT_CLASSIFICATION	1.0086363577061526E-6	DEFECT
/* total number of entries in      */	WITHOUT_CLASSIFICATION	0.999996795786056	WITHOUT_CLASSIFICATION	3.20421394388411E-6	DEFECT
/* total number of entries in      */	WITHOUT_CLASSIFICATION	0.999996795786056	WITHOUT_CLASSIFICATION	3.20421394388411E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999913216508821	WITHOUT_CLASSIFICATION	8.678349118004256E-6	DEFECT
// This is turned off temporarily. There appears to be a bug // in SelectorUtils.matchPattern() where it is recursive on // Windows even if no ** is in pattern. //assertEquals("FFFTFFFFFFFF", results); // Unix // vs //assertEquals("FFFTFFFFTFFF", results); // Windows	DEFECT	0.9964635049779339	WITHOUT_CLASSIFICATION	0.0035364950220661386	DEFECT
// check first that it is not already loaded otherwise // consecutive runs seems to end into an OutOfMemoryError // or it fails when there is a native library to load // several times. // this is far from being perfect but should work // in most cases.	DEFECT	0.9999703706177158	WITHOUT_CLASSIFICATION	2.962938228423834E-5	DEFECT
// FIXME formatters are not thread-safe	DEFECT	0.8836465082351803	WITHOUT_CLASSIFICATION	0.11635349176481974	DEFECT
// the generated classes must not be added in the generic JAR! // is that buggy on old JOnAS (2.4) ??	DEFECT	0.9993914533486827	WITHOUT_CLASSIFICATION	6.085466513173639E-4	DEFECT
// I hate to admit it, but we don't know what happened // here.  Throw the Exception.	DEFECT	0.9999551722173536	WITHOUT_CLASSIFICATION	4.4827782646340134E-5	DEFECT
// FIXME: Is "No Namespace is Empty Namespace" really OK?	DEFECT	0.7461111382028007	WITHOUT_CLASSIFICATION	0.2538888617971993	DEFECT
// pattern now holds ** while string is not exhausted // this will generate false positives but we can live with that.	DEFECT	0.9972072616348147	WITHOUT_CLASSIFICATION	0.0027927383651853484	DEFECT
// todo: is this comment still relevant ?? // FIXME: need to use a SAXSource as the source for the transform // so we can plug in our own entity resolver	DEFECT	0.9334119348373219	DEFECT	0.06658806516267807	WITHOUT_CLASSIFICATION
// Just a note: StarTeam has a status for NEW which implies // that there is an item  on your local machine that is not // in the repository.  These are the items that show up as // NOT IN VIEW in the Starteam GUI. // One would think that we would want to perhaps checkin the // NEW items (not in all cases! - Steve Cohen 15 Dec 2001) // Unfortunately, the sdk doesn't really work, and we can't // actually see  anything with a status of NEW. That is why // we can just check out  everything here without worrying // about losing anything.	DEFECT	0.9808652939997657	WITHOUT_CLASSIFICATION	0.019134706000234217	DEFECT
// XXX: (Jon Skeet) The comment "if it hasn't been done already" may // not be strictly true. wrapper.maybeConfigure() won't configure the same // attributes/text more than once, but it may well add the children again, // unless I've missed something.	DEFECT	0.9999857735349416	WITHOUT_CLASSIFICATION	1.4226465058356238E-5	DEFECT
// TODO: // A warning line, that shows code, which contains a variable // error will cause some trouble. The parser should definitely // be much better.	DEFECT	0.5018526963782425	WITHOUT_CLASSIFICATION	0.49814730362175746	DEFECT
// todo: is this comment still relevant ?? // FIXME: need to use a SAXSource as the source for the transform // so we can plug in our own entity resolver	DEFECT	0.9334119348373219	DEFECT	0.06658806516267807	WITHOUT_CLASSIFICATION
// FIXME this is actually not very cpu cycles friendly as we are converting from // dos to java while the underlying Sun implementation will convert // from java to dos time for internal storage...	DEFECT	0.9915023555102043	DEFECT	0.008497644489795668	WITHOUT_CLASSIFICATION
