/* BuildListener stuff */	WITHOUT_CLASSIFICATION	0.9999939368227327	WITHOUT_CLASSIFICATION	6.063177267289695E-6	DEFECT
// we don't expect to find this	WITHOUT_CLASSIFICATION	0.9998687686426203	WITHOUT_CLASSIFICATION	1.312313573796886E-4	DEFECT
// ignore expected	WITHOUT_CLASSIFICATION	0.9999996892850863	WITHOUT_CLASSIFICATION	3.107149137984338E-7	DEFECT
// ignore expected	WITHOUT_CLASSIFICATION	0.9999996892850863	WITHOUT_CLASSIFICATION	3.107149137984338E-7	DEFECT
// tell the build it is finished	WITHOUT_CLASSIFICATION	0.9999887469105345	WITHOUT_CLASSIFICATION	1.1253089465415305E-5	DEFECT
//end class	WITHOUT_CLASSIFICATION	0.9999676128327174	WITHOUT_CLASSIFICATION	3.238716728270512E-5	DEFECT
// keep track of what operating systems are supported here.	WITHOUT_CLASSIFICATION	0.9999856979667486	WITHOUT_CLASSIFICATION	1.4302033251381369E-5	DEFECT
// father and child pattern test	WITHOUT_CLASSIFICATION	0.9999975574698959	WITHOUT_CLASSIFICATION	2.442530104091157E-6	DEFECT
// redo the test, but the 2 include patterns are inverted	WITHOUT_CLASSIFICATION	0.9999998273075252	WITHOUT_CLASSIFICATION	1.7269247486305168E-7	DEFECT
// add conditions and more commands as soon as the need arises	WITHOUT_CLASSIFICATION	0.9999464601740844	WITHOUT_CLASSIFICATION	5.353982591550686E-5	DEFECT
// give ourselves some time for the system call // to execute... tweak if you have a really over // loaded system.	WITHOUT_CLASSIFICATION	0.9973553531625443	WITHOUT_CLASSIFICATION	0.00264464683745577	DEFECT
// followLinks should be true by default, but if this ever // changes we will need this line.	WITHOUT_CLASSIFICATION	0.9999999446454739	WITHOUT_CLASSIFICATION	5.5354526004465455E-8	DEFECT
//testing drive letter search from root:	WITHOUT_CLASSIFICATION	0.9999942335530726	WITHOUT_CLASSIFICATION	5.766446927434609E-6	DEFECT
//if this is our context we assume there must be something here:	WITHOUT_CLASSIFICATION	0.9999919603381076	WITHOUT_CLASSIFICATION	8.039661892384855E-6	DEFECT
// This path should contain the class files for these testcases:	WITHOUT_CLASSIFICATION	0.9999822656106877	WITHOUT_CLASSIFICATION	1.7734389312333364E-5	DEFECT
// A special parent loader which is not the system class loader:	WITHOUT_CLASSIFICATION	0.9984849873476518	WITHOUT_CLASSIFICATION	0.0015150126523481814	DEFECT
// A special parent loader which is not the system class loader:	WITHOUT_CLASSIFICATION	0.9984849873476518	WITHOUT_CLASSIFICATION	0.0015150126523481814	DEFECT
// An AntClassLoader which is supposed to delegate to // the parent and then to the disk path:	WITHOUT_CLASSIFICATION	0.9998510315630492	WITHOUT_CLASSIFICATION	1.4896843695082454E-4	DEFECT
// The intended result URLs:	WITHOUT_CLASSIFICATION	0.9999992127317493	WITHOUT_CLASSIFICATION	7.872682506783339E-7	DEFECT
// JDK 1.4: return Collections.list(e);	WITHOUT_CLASSIFICATION	0.9999992047477573	WITHOUT_CLASSIFICATION	7.952522428232769E-7	DEFECT
// override allowed on <available>	WITHOUT_CLASSIFICATION	0.999998213601202	WITHOUT_CLASSIFICATION	1.7863987979996009E-6	DEFECT
// ensure <tstamp>'s new prefix attribute is working	WITHOUT_CLASSIFICATION	0.9999733163629211	WITHOUT_CLASSIFICATION	2.6683637079010797E-5	DEFECT
// ensure <tstamp> follows the immutability rule	WITHOUT_CLASSIFICATION	0.999999692160736	WITHOUT_CLASSIFICATION	3.078392639780838E-7	DEFECT
// ensure <condition> follows the immutability rule	WITHOUT_CLASSIFICATION	0.9999879563048196	WITHOUT_CLASSIFICATION	1.2043695180383309E-5	DEFECT
// ensure <checksum> follows the immutability rule	WITHOUT_CLASSIFICATION	0.9999999133020582	WITHOUT_CLASSIFICATION	8.669794183027416E-8	DEFECT
// ensure <exec> follows the immutability rule	WITHOUT_CLASSIFICATION	0.9999981978319221	WITHOUT_CLASSIFICATION	1.802168077915548E-6	DEFECT
// ensure <pathconvert> follows the immutability rule	WITHOUT_CLASSIFICATION	0.9999997655164217	WITHOUT_CLASSIFICATION	2.344835782033492E-7	DEFECT
/*             * throw in drive letters             */	WITHOUT_CLASSIFICATION	0.9999787402626237	WITHOUT_CLASSIFICATION	2.1259737376370373E-5	DEFECT
/*             * promised to eliminate consecutive slashes after drive letter.             */	WITHOUT_CLASSIFICATION	0.9999996656504518	WITHOUT_CLASSIFICATION	3.343495482169156E-7	DEFECT
/*             * Start with simple absolute file names.             */	WITHOUT_CLASSIFICATION	0.999999996366779	WITHOUT_CLASSIFICATION	3.63322096663367E-9	DEFECT
/*             * drive letters are not used, just to be considered as normal             * part of a name             */	WITHOUT_CLASSIFICATION	0.9999999783657407	WITHOUT_CLASSIFICATION	2.1634259341176107E-8	DEFECT
/*         * Now test some relative file name magic.         */	WITHOUT_CLASSIFICATION	0.9999999077177115	WITHOUT_CLASSIFICATION	9.228228843109348E-8	DEFECT
// fail, because buildfile contains two targets with the same name	WITHOUT_CLASSIFICATION	0.9999958944971705	WITHOUT_CLASSIFICATION	4.105502829461782E-6	DEFECT
// overriding target from imported buildfile is allowed	WITHOUT_CLASSIFICATION	0.9999999666191992	WITHOUT_CLASSIFICATION	3.338080085708381E-8	DEFECT
// the buildfile to use	WITHOUT_CLASSIFICATION	0.9999992963350821	WITHOUT_CLASSIFICATION	7.03664917923127E-7	DEFECT
// call a target	WITHOUT_CLASSIFICATION	0.9999991821788983	WITHOUT_CLASSIFICATION	8.178211016734685E-7	DEFECT
//class-BFT	WITHOUT_CLASSIFICATION	0.9999824166355262	WITHOUT_CLASSIFICATION	1.7583364473757416E-5	DEFECT
// override allowed on <available>	WITHOUT_CLASSIFICATION	0.999998213601202	WITHOUT_CLASSIFICATION	1.7863987979996009E-6	DEFECT
// ignore event	WITHOUT_CLASSIFICATION	0.9999981485568533	WITHOUT_CLASSIFICATION	1.851443146608989E-6	DEFECT
// Check it's a read-only map.	WITHOUT_CLASSIFICATION	0.999999032877113	WITHOUT_CLASSIFICATION	9.671228869126437E-7	DEFECT
// Check it's a read-only map.	WITHOUT_CLASSIFICATION	0.999999032877113	WITHOUT_CLASSIFICATION	9.671228869126437E-7	DEFECT
/*         * JUnit 3.7 adds a getName method to TestCase - so we now         * have a name attribute in IntrospectionHelperTest if we run         * under JUnit 3.7 but not in earlier versions.         *         * Simply add it here and remove it after the tests.         */	WITHOUT_CLASSIFICATION	0.9999973712166759	WITHOUT_CLASSIFICATION	2.6287833241164096E-6	DEFECT
// addConfigured(Hashtable) should come before addConfigured(Map)	WITHOUT_CLASSIFICATION	0.9999993005455942	WITHOUT_CLASSIFICATION	6.994544058333978E-7	DEFECT
// INVALID extension point	WITHOUT_CLASSIFICATION	0.9999975020833975	WITHOUT_CLASSIFICATION	2.497916602464943E-6	DEFECT
// INVALID extension point	WITHOUT_CLASSIFICATION	0.9999975020833975	WITHOUT_CLASSIFICATION	2.497916602464943E-6	DEFECT
// Valid extension point	WITHOUT_CLASSIFICATION	0.9999987287458961	WITHOUT_CLASSIFICATION	1.2712541038337024E-6	DEFECT
// Valid extension point, more derived than Map above, but *after* it!	WITHOUT_CLASSIFICATION	0.9999982834482037	WITHOUT_CLASSIFICATION	1.7165517962765847E-6	DEFECT
// IntrospectionHelperTest	WITHOUT_CLASSIFICATION	0.9999996947094552	WITHOUT_CLASSIFICATION	3.0529054484577936E-7	DEFECT
// make sure we do not get a NPE	WITHOUT_CLASSIFICATION	0.9999987450371337	WITHOUT_CLASSIFICATION	1.2549628662989982E-6	DEFECT
// use an anonymous subclass since ProjectComponent is abstract	WITHOUT_CLASSIFICATION	0.999999521708097	WITHOUT_CLASSIFICATION	4.78291902932608E-7	DEFECT
// ------------------------------------------------------ //   Helper methods // -----------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999880384578756	WITHOUT_CLASSIFICATION	1.1961542124381664E-5	DEFECT
/* I wrote the testcases in one java file because I want also to test the * combined behaviour (see end of the class).*/	WITHOUT_CLASSIFICATION	0.9999792359036525	WITHOUT_CLASSIFICATION	2.0764096347612685E-5	DEFECT
// check defaults	WITHOUT_CLASSIFICATION	0.9999999820369545	WITHOUT_CLASSIFICATION	1.796304553428391E-8	DEFECT
// check defaults	WITHOUT_CLASSIFICATION	0.9999999820369545	WITHOUT_CLASSIFICATION	1.796304553428391E-8	DEFECT
// check build.compiler provides defaults	WITHOUT_CLASSIFICATION	0.9999980924399375	WITHOUT_CLASSIFICATION	1.9075600624601764E-6	DEFECT
// setUserProperty to override system properties	WITHOUT_CLASSIFICATION	0.9999979521349638	WITHOUT_CLASSIFICATION	2.0478650361489348E-6	DEFECT
// check attribute overrides build.compiler	WITHOUT_CLASSIFICATION	0.9999999558230842	WITHOUT_CLASSIFICATION	4.417691578680714E-8	DEFECT
// check attribute overrides build.compiler	WITHOUT_CLASSIFICATION	0.9999999558230842	WITHOUT_CLASSIFICATION	4.417691578680714E-8	DEFECT
// some database keys, see #getProperties(int)	WITHOUT_CLASSIFICATION	0.9999999694310892	WITHOUT_CLASSIFICATION	3.056891084914442E-8	DEFECT
// keys used in properties.	WITHOUT_CLASSIFICATION	0.999999347757976	WITHOUT_CLASSIFICATION	6.522420239859153E-7	DEFECT
//neither	WITHOUT_CLASSIFICATION	0.9999825993283479	WITHOUT_CLASSIFICATION	1.7400671652170604E-5	DEFECT
/*     * PR 11100     */	WITHOUT_CLASSIFICATION	0.9999987703105857	WITHOUT_CLASSIFICATION	1.229689414254746E-6	DEFECT
// simple test to ensure that the caching does work...	WITHOUT_CLASSIFICATION	0.9997427787477411	WITHOUT_CLASSIFICATION	2.572212522589662E-4	DEFECT
// 2nd run..	WITHOUT_CLASSIFICATION	0.9999655272149394	WITHOUT_CLASSIFICATION	3.447278506062335E-5	DEFECT
// the driver must still be cached.	WITHOUT_CLASSIFICATION	0.9999979189801695	WITHOUT_CLASSIFICATION	2.081019830415357E-6	DEFECT
// look for the driver path...	WITHOUT_CLASSIFICATION	0.9999712626577081	WITHOUT_CLASSIFICATION	2.8737342291898987E-5	DEFECT
//file time checks for java1.2+	WITHOUT_CLASSIFICATION	0.9999997270281111	WITHOUT_CLASSIFICATION	2.7297188881382476E-7	DEFECT
//only test on java1.5+	WITHOUT_CLASSIFICATION	0.9999989668546393	WITHOUT_CLASSIFICATION	1.0331453607855345E-6	DEFECT
// AntLikeTasksAtTopLevelTest	WITHOUT_CLASSIFICATION	0.9999999633060602	WITHOUT_CLASSIFICATION	3.669393978952686E-8	DEFECT
//file length checks rely on touch generating a zero byte file	WITHOUT_CLASSIFICATION	0.9999978130224333	WITHOUT_CLASSIFICATION	2.1869775667125492E-6	DEFECT
// no-op: not a real business error	WITHOUT_CLASSIFICATION	0.9996363900552753	WITHOUT_CLASSIFICATION	3.6360994472470383E-4	DEFECT
//dont look for much text here as it is vendor and version dependent	WITHOUT_CLASSIFICATION	0.9998438883240475	WITHOUT_CLASSIFICATION	1.5611167595250532E-4	DEFECT
// end of try-catch	WITHOUT_CLASSIFICATION	0.999999402868528	WITHOUT_CLASSIFICATION	5.971314721324101E-7	DEFECT
// end of try-catch	WITHOUT_CLASSIFICATION	0.999999402868528	WITHOUT_CLASSIFICATION	5.971314721324101E-7	DEFECT
/*     * PR 11100     */	WITHOUT_CLASSIFICATION	0.9999987703105857	WITHOUT_CLASSIFICATION	1.229689414254746E-6	DEFECT
/*     * PR 38973     */	WITHOUT_CLASSIFICATION	0.9999985188436619	WITHOUT_CLASSIFICATION	1.481156338070963E-6	DEFECT
/*     * PR 11100     */	WITHOUT_CLASSIFICATION	0.9999987703105857	WITHOUT_CLASSIFICATION	1.229689414254746E-6	DEFECT
/*     * PR 16213     */	WITHOUT_CLASSIFICATION	0.9999991733385006	WITHOUT_CLASSIFICATION	8.266614994906859E-7	DEFECT
/*     * PR 38973     */	WITHOUT_CLASSIFICATION	0.9999985188436619	WITHOUT_CLASSIFICATION	1.481156338070963E-6	DEFECT
/*     * PR 21996     */	WITHOUT_CLASSIFICATION	0.9999989154736945	WITHOUT_CLASSIFICATION	1.0845263056050553E-6	DEFECT
/*     * PR 10504     */	WITHOUT_CLASSIFICATION	0.9999985315445347	WITHOUT_CLASSIFICATION	1.4684554653973691E-6	DEFECT
/*     * PR 20969     */	WITHOUT_CLASSIFICATION	0.9999970047972658	WITHOUT_CLASSIFICATION	2.9952027341006767E-6	DEFECT
// can't access the booleans in MyPrinter here (even if they // were static) since the MyPrinter instance that was used in // the test has likely been loaded via a different classloader // than this class.  Therefore we make the printer assert its // state and only check for the tail invocation.	WITHOUT_CLASSIFICATION	0.9999998780788245	WITHOUT_CLASSIFICATION	1.2192117551064546E-7	DEFECT
// should get no output at all	WITHOUT_CLASSIFICATION	0.9999991550702481	WITHOUT_CLASSIFICATION	8.449297518916865E-7	DEFECT
// should get no output at all	WITHOUT_CLASSIFICATION	0.9999991550702481	WITHOUT_CLASSIFICATION	8.449297518916865E-7	DEFECT
// should get no output at all	WITHOUT_CLASSIFICATION	0.9999991550702481	WITHOUT_CLASSIFICATION	8.449297518916865E-7	DEFECT
// should get no output at all	WITHOUT_CLASSIFICATION	0.9999991550702481	WITHOUT_CLASSIFICATION	8.449297518916865E-7	DEFECT
//this call should succeed as unless overrides if	WITHOUT_CLASSIFICATION	0.9999950621021565	WITHOUT_CLASSIFICATION	4.937897843442651E-6	DEFECT
// test that the watchdog ends the process	WITHOUT_CLASSIFICATION	0.9999963044893648	WITHOUT_CLASSIFICATION	3.69551063526007E-6	DEFECT
// test that the watchdog ends the process	WITHOUT_CLASSIFICATION	0.9999963044893648	WITHOUT_CLASSIFICATION	3.69551063526007E-6	DEFECT
// and a little shorter	WITHOUT_CLASSIFICATION	0.999999706426871	WITHOUT_CLASSIFICATION	2.935731291097849E-7	DEFECT
// test that the watchdog ends the process	WITHOUT_CLASSIFICATION	0.9999963044893648	WITHOUT_CLASSIFICATION	3.69551063526007E-6	DEFECT
// target must be specified	WITHOUT_CLASSIFICATION	0.9999999992580921	WITHOUT_CLASSIFICATION	7.419079180495825E-10	DEFECT
// Should fail since a recursion will occur...	WITHOUT_CLASSIFICATION	0.9999177746534622	WITHOUT_CLASSIFICATION	8.222534653775085E-5	DEFECT
// a rather convoluted equals() test	WITHOUT_CLASSIFICATION	0.9999998609181299	WITHOUT_CLASSIFICATION	1.3908187004822755E-7	DEFECT
// <path> swallows the basedir, it seems //assertTrue(!getProject().resolveFile("A").exists());	WITHOUT_CLASSIFICATION	0.9999966117833619	WITHOUT_CLASSIFICATION	3.3882166381507486E-6	DEFECT
// allow this as imported in targets are only tested when a target is run	WITHOUT_CLASSIFICATION	0.9999999758107262	WITHOUT_CLASSIFICATION	2.4189273804016968E-8	DEFECT
// deactivate this test as imports within targets are not allowed	WITHOUT_CLASSIFICATION	0.9999999192586594	WITHOUT_CLASSIFICATION	8.074134066660496E-8	DEFECT
// Running on Windows or something, so skip it.	WITHOUT_CLASSIFICATION	0.9999966377642213	WITHOUT_CLASSIFICATION	3.3622357786955777E-6	DEFECT
// remove log file from testSpawn	WITHOUT_CLASSIFICATION	0.999999698132448	WITHOUT_CLASSIFICATION	3.018675520319192E-7	DEFECT
// this is guaranteed by FileUtils#createTempFile	WITHOUT_CLASSIFICATION	0.9999986162980034	WITHOUT_CLASSIFICATION	1.3837019966561732E-6	DEFECT
// let's be nice with the next generation of developers	WITHOUT_CLASSIFICATION	0.9999823806137496	WITHOUT_CLASSIFICATION	1.761938625039967E-5	DEFECT
//executeTarget("setup"); //commented out for performance while target is empty	WITHOUT_CLASSIFICATION	0.9999997098510663	WITHOUT_CLASSIFICATION	2.9014893366695235E-7	DEFECT
// target // file // exptected string	WITHOUT_CLASSIFICATION	0.9999999859400066	WITHOUT_CLASSIFICATION	1.4059993360943997E-8	DEFECT
// END class ManifestClassPathTest	WITHOUT_CLASSIFICATION	0.9999988704255118	WITHOUT_CLASSIFICATION	1.1295744882267492E-6	DEFECT
//      assertTrue("return code is invalid: " + retCode, retCode!=0);	WITHOUT_CLASSIFICATION	0.9999995953162685	WITHOUT_CLASSIFICATION	4.046837314789179E-7	DEFECT
// test a process that runs and failed	WITHOUT_CLASSIFICATION	0.9999996978748241	WITHOUT_CLASSIFICATION	3.0212517587208086E-7	DEFECT
// process should abort	WITHOUT_CLASSIFICATION	0.9999997339765406	WITHOUT_CLASSIFICATION	2.6602345933369366E-7	DEFECT
// I assume that starting this takes less than TIME_OUT/2 ms...	WITHOUT_CLASSIFICATION	0.999990233839488	WITHOUT_CLASSIFICATION	9.766160511975025E-6	DEFECT
// wait for TIME_OUT/2, there should be about TIME_OUT/2 ms remaining before timeout	WITHOUT_CLASSIFICATION	0.9999783031982411	WITHOUT_CLASSIFICATION	2.169680175896295E-5	DEFECT
// now stop the watchdog.	WITHOUT_CLASSIFICATION	0.9999999398554541	WITHOUT_CLASSIFICATION	6.014454583796392E-8	DEFECT
// wait for the thread to die, should be the end of the process	WITHOUT_CLASSIFICATION	0.9999704802455609	WITHOUT_CLASSIFICATION	2.9519754439208324E-5	DEFECT
// process should be dead and well finished	WITHOUT_CLASSIFICATION	0.9999999505801307	WITHOUT_CLASSIFICATION	4.941986924770551E-8	DEFECT
// We have to compare the decompressed content instead:	WITHOUT_CLASSIFICATION	0.9999984797081266	WITHOUT_CLASSIFICATION	1.5202918734202723E-6	DEFECT
//no point in setting a message	WITHOUT_CLASSIFICATION	0.9999990615110265	WITHOUT_CLASSIFICATION	9.384889736239169E-7	DEFECT
// this is guaranteed by FileUtils#createTempFile	WITHOUT_CLASSIFICATION	0.9999986162980034	WITHOUT_CLASSIFICATION	1.3837019966561732E-6	DEFECT
// make the spawned process run 4 seconds	WITHOUT_CLASSIFICATION	0.9999967807250206	WITHOUT_CLASSIFICATION	3.2192749793766584E-6	DEFECT
// this loop runs parallel to the build	WITHOUT_CLASSIFICATION	0.9999923216663505	WITHOUT_CLASSIFICATION	7.678333649521699E-6	DEFECT
// security	WITHOUT_CLASSIFICATION	0.9999978254113375	WITHOUT_CLASSIFICATION	2.1745886625810808E-6	DEFECT
// time of the build in milli seconds	WITHOUT_CLASSIFICATION	0.9999549793113538	WITHOUT_CLASSIFICATION	4.5020688646104936E-5	DEFECT
// Nothing specified -> Fail	WITHOUT_CLASSIFICATION	0.9999999938475922	WITHOUT_CLASSIFICATION	6.152407874374332E-9	DEFECT
// Only property specified -> Fail	WITHOUT_CLASSIFICATION	0.9999996069653327	WITHOUT_CLASSIFICATION	3.9303466733630274E-7	DEFECT
// Only file specified -> Fail	WITHOUT_CLASSIFICATION	0.9999999077498397	WITHOUT_CLASSIFICATION	9.225016029089751E-8	DEFECT
// file does exist -> property 'test' == 'true'	WITHOUT_CLASSIFICATION	0.9999983192650289	WITHOUT_CLASSIFICATION	1.680734971121883E-6	DEFECT
// resource doesn't exist -> property 'test' == null	WITHOUT_CLASSIFICATION	0.9999829617774787	WITHOUT_CLASSIFICATION	1.703822252135728E-5	DEFECT
// resource does exist -> property 'test' == 'true'	WITHOUT_CLASSIFICATION	0.9999952626463482	WITHOUT_CLASSIFICATION	4.737353651795424E-6	DEFECT
// class doesn't exist -> property 'test' == null	WITHOUT_CLASSIFICATION	0.9998700252233085	WITHOUT_CLASSIFICATION	1.299747766914064E-4	DEFECT
// class does exist -> property 'test' == 'true'	WITHOUT_CLASSIFICATION	0.9999764916768171	WITHOUT_CLASSIFICATION	2.3508323182937537E-5	DEFECT
// All three specified but class missing -> null	WITHOUT_CLASSIFICATION	0.9999994288617897	WITHOUT_CLASSIFICATION	5.711382103366285E-7	DEFECT
// Specified property-name is "" -> true	WITHOUT_CLASSIFICATION	0.9999998764259093	WITHOUT_CLASSIFICATION	1.2357409065954014E-7	DEFECT
// Specified file is "" -> invalid files do not exist	WITHOUT_CLASSIFICATION	0.9999997872798252	WITHOUT_CLASSIFICATION	2.1272017473285776E-7	DEFECT
// Specified file is "" actually a directory, so it should pass	WITHOUT_CLASSIFICATION	0.9999961182663629	WITHOUT_CLASSIFICATION	3.8817336370816756E-6	DEFECT
// Specified resource is "" -> can such a thing exist?	WITHOUT_CLASSIFICATION	0.9999996308321689	WITHOUT_CLASSIFICATION	3.691678311187769E-7	DEFECT
/*     * returns non null IBM JDK 1.3 Linux     */	WITHOUT_CLASSIFICATION	0.9999987160784976	WITHOUT_CLASSIFICATION	1.2839215024295672E-6	DEFECT
// Specified dir is "" -> this is the current directory and should // always exist	WITHOUT_CLASSIFICATION	0.9999929442071067	WITHOUT_CLASSIFICATION	7.055792893275177E-6	DEFECT
// Specified dir is "../taskdefs" -> should exist since it's the // location of the buildfile used...	WITHOUT_CLASSIFICATION	0.9999939727132441	WITHOUT_CLASSIFICATION	6.027286755959013E-6	DEFECT
// Specified dir is "../this_dir_should_never_exist" -> null	WITHOUT_CLASSIFICATION	0.9999984681633758	WITHOUT_CLASSIFICATION	1.531836624234267E-6	DEFECT
// Invalid type specified	WITHOUT_CLASSIFICATION	0.9999999468685724	WITHOUT_CLASSIFICATION	5.313142752955886E-8	DEFECT
// Core class that exists in system classpath is ignored	WITHOUT_CLASSIFICATION	0.9999943451227383	WITHOUT_CLASSIFICATION	5.654877261687865E-6	DEFECT
// Core class that exists in system classpath is not ignored with ignoresystemclass="false"	WITHOUT_CLASSIFICATION	0.9992647350152137	WITHOUT_CLASSIFICATION	7.352649847863763E-4	DEFECT
// Core class that exists in system classpath is not ignored with default ignoresystemclasses value	WITHOUT_CLASSIFICATION	0.9999666598388903	WITHOUT_CLASSIFICATION	3.3340161109693324E-5	DEFECT
// Class is found in specified classpath	WITHOUT_CLASSIFICATION	0.9999997199873757	WITHOUT_CLASSIFICATION	2.800126243236661E-7	DEFECT
// File is not found in specified filepath	WITHOUT_CLASSIFICATION	0.9999998032194441	WITHOUT_CLASSIFICATION	1.9678055592415857E-7	DEFECT
// test when file begins with basedir twice	WITHOUT_CLASSIFICATION	0.9999958676082911	WITHOUT_CLASSIFICATION	4.132391708919382E-6	DEFECT
// test for searching parents	WITHOUT_CLASSIFICATION	0.9999987868452677	WITHOUT_CLASSIFICATION	1.2131547323259431E-6	DEFECT
// test for not searching parents	WITHOUT_CLASSIFICATION	0.9999405292484188	WITHOUT_CLASSIFICATION	5.947075158116303E-5	DEFECT
// Output the default excludes	WITHOUT_CLASSIFICATION	0.9999999513079418	WITHOUT_CLASSIFICATION	4.869205805885517E-8	DEFECT
// adding something to the excludes'	WITHOUT_CLASSIFICATION	0.9999996769338186	WITHOUT_CLASSIFICATION	3.230661813551366E-7	DEFECT
// removing something from the defaults	WITHOUT_CLASSIFICATION	0.999999938688493	WITHOUT_CLASSIFICATION	6.131150703014001E-8	DEFECT
//CVS missing	WITHOUT_CLASSIFICATION	0.999980263748227	WITHOUT_CLASSIFICATION	1.9736251772902994E-5	DEFECT
// target must be specified	WITHOUT_CLASSIFICATION	0.9999999992580921	WITHOUT_CLASSIFICATION	7.419079180495825E-10	DEFECT
// We try to delete the directory created in CopydirTest	WITHOUT_CLASSIFICATION	0.9999999953628218	WITHOUT_CLASSIFICATION	4.6371782260508E-9	DEFECT
// check that both arrays have the same size	WITHOUT_CLASSIFICATION	0.9999997813654693	WITHOUT_CLASSIFICATION	2.1863453074553777E-7	DEFECT
//instance variable to allow cleanup	WITHOUT_CLASSIFICATION	0.9999999446965534	WITHOUT_CLASSIFICATION	5.530344657561008E-8	DEFECT
//ignored	WITHOUT_CLASSIFICATION	0.99999401170101	WITHOUT_CLASSIFICATION	5.988298989931007E-6	DEFECT
// What's the working directory?  If local, then its the // folder of the input file.  Otherwise, its the "current" dir..	WITHOUT_CLASSIFICATION	0.999979049412535	WITHOUT_CLASSIFICATION	2.0950587464988745E-5	DEFECT
// Set a property on the project to make sure that loading // a property with the same name from an xml file will // *not* change it.	WITHOUT_CLASSIFICATION	0.9999977376546054	WITHOUT_CLASSIFICATION	2.2623453944863117E-6	DEFECT
//printProperties(p.getProperties());	WITHOUT_CLASSIFICATION	0.9999928710720749	WITHOUT_CLASSIFICATION	7.128927925017925E-6	DEFECT
// Every key identified by the Properties must have been loaded.	WITHOUT_CLASSIFICATION	0.9999998470258159	WITHOUT_CLASSIFICATION	1.52974183963766E-7	DEFECT
// The property is the name of a file.  We are testing // a location attribute, so we need to resolve the given // file name in the provided folder.	WITHOUT_CLASSIFICATION	0.9999999141127245	WITHOUT_CLASSIFICATION	8.588727546688874E-8	DEFECT
// Substitute .xml with .properties	WITHOUT_CLASSIFICATION	0.9999995347051974	WITHOUT_CLASSIFICATION	4.652948025007856E-7	DEFECT
// basedir of subant/subant-test1/subant.xml is .. // therefore we expect here the subant/subant-test1 subdirectory	WITHOUT_CLASSIFICATION	0.9999792312760432	WITHOUT_CLASSIFICATION	2.0768723956910975E-5	DEFECT
// Output an empty String	WITHOUT_CLASSIFICATION	0.999999799251322	WITHOUT_CLASSIFICATION	2.0074867806281556E-7	DEFECT
// Output 'OUTPUT OF ECHO'	WITHOUT_CLASSIFICATION	0.9999996757836648	WITHOUT_CLASSIFICATION	3.242163351938398E-7	DEFECT
/*          * @param message         */	WITHOUT_CLASSIFICATION	0.9999998965639512	WITHOUT_CLASSIFICATION	1.0343604881376531E-7	DEFECT
// make sure that the parsing does not break	WITHOUT_CLASSIFICATION	0.9993783837002929	WITHOUT_CLASSIFICATION	6.216162997071738E-4	DEFECT
// where the name contains <>	WITHOUT_CLASSIFICATION	0.999999029125673	WITHOUT_CLASSIFICATION	9.708743270654263E-7	DEFECT
// where only an address is supplied	WITHOUT_CLASSIFICATION	0.9999878954039394	WITHOUT_CLASSIFICATION	1.2104596060682648E-5	DEFECT
// Tests property element, using XML schema properties as an example.	WITHOUT_CLASSIFICATION	0.9999976360487891	WITHOUT_CLASSIFICATION	2.363951210861978E-6	DEFECT
// should print "panic: Cannot find importVocab file 'JavaTokenTypes.txt'" // since it needs to run java.g first before java.tree.g	WITHOUT_CLASSIFICATION	0.9999553904262721	WITHOUT_CLASSIFICATION	4.460957372797582E-5	DEFECT
// execute	WITHOUT_CLASSIFICATION	0.9999870922321622	WITHOUT_CLASSIFICATION	1.2907767837782384E-5	DEFECT
// override some of the code so we can test the handling of the // return code only.	WITHOUT_CLASSIFICATION	0.9999999950668694	WITHOUT_CLASSIFICATION	4.933130481982363E-9	DEFECT
// ask ant to update the properties...	WITHOUT_CLASSIFICATION	0.9999980419646919	WITHOUT_CLASSIFICATION	1.958035308135438E-6	DEFECT
// to override	WITHOUT_CLASSIFICATION	0.9999958852708899	WITHOUT_CLASSIFICATION	4.114729110163131E-6	DEFECT
// just to be sure	WITHOUT_CLASSIFICATION	0.9999999510547355	WITHOUT_CLASSIFICATION	4.894526450806973E-8	DEFECT
// just to be sure	WITHOUT_CLASSIFICATION	0.9999999510547355	WITHOUT_CLASSIFICATION	4.894526450806973E-8	DEFECT
// read in the file	WITHOUT_CLASSIFICATION	0.9999996519847264	WITHOUT_CLASSIFICATION	3.4801527359626346E-7	DEFECT
// found the property we set - it's good.	WITHOUT_CLASSIFICATION	0.9999249690871981	WITHOUT_CLASSIFICATION	7.503091280194315E-5	DEFECT
// else	WITHOUT_CLASSIFICATION	0.9999991134305217	WITHOUT_CLASSIFICATION	8.865694782908911E-7	DEFECT
// else	WITHOUT_CLASSIFICATION	0.9999991134305217	WITHOUT_CLASSIFICATION	8.865694782908911E-7	DEFECT
// ReplaceRegExpTest	WITHOUT_CLASSIFICATION	0.9999997550696403	WITHOUT_CLASSIFICATION	2.4493035971426783E-7	DEFECT
// test for 10 consecutives transform	WITHOUT_CLASSIFICATION	0.9999998022821458	WITHOUT_CLASSIFICATION	1.9771785432016532E-7	DEFECT
//java keywords are not special	WITHOUT_CLASSIFICATION	0.9999938446241201	WITHOUT_CLASSIFICATION	6.155375879865348E-6	DEFECT
//underscores go in front of invalid start chars	WITHOUT_CLASSIFICATION	0.9999882538223813	WITHOUT_CLASSIFICATION	1.1746177618595908E-5	DEFECT
//underscores at the front get an underscore too	WITHOUT_CLASSIFICATION	0.9999753899975473	WITHOUT_CLASSIFICATION	2.4610002452722632E-5	DEFECT
//non java char at start => underscore then the the _hex value	WITHOUT_CLASSIFICATION	0.9999986494561908	WITHOUT_CLASSIFICATION	1.3505438091865883E-6	DEFECT
//and paths are stripped	WITHOUT_CLASSIFICATION	0.9999984842710488	WITHOUT_CLASSIFICATION	1.5157289512224298E-6	DEFECT
/** * Tests the {@link XSLTProcess} task. * XXX merge with {@link StyleTest}? * @since Ant 1.5 */	WITHOUT_CLASSIFICATION	0.9999995007993357	WITHOUT_CLASSIFICATION	4.992006642468062E-7	DEFECT
// byte - byte compare	WITHOUT_CLASSIFICATION	0.9999984180245596	WITHOUT_CLASSIFICATION	1.581975440524292E-6	DEFECT
// avoid endless loop	WITHOUT_CLASSIFICATION	0.9999994416595688	WITHOUT_CLASSIFICATION	5.583404312342955E-7	DEFECT
// those would fail because of the way BuildFileTest captures output	WITHOUT_CLASSIFICATION	0.9999743102624888	WITHOUT_CLASSIFICATION	2.568973751113444E-5	DEFECT
//To change body of implemented methods use File | Settings | File Templates.	WITHOUT_CLASSIFICATION	0.9999999762193919	WITHOUT_CLASSIFICATION	2.3780608048978152E-8	DEFECT
// tests one the file object	WITHOUT_CLASSIFICATION	0.9999999072227248	WITHOUT_CLASSIFICATION	9.277727514291803E-8	DEFECT
// father and child pattern test	WITHOUT_CLASSIFICATION	0.9999975574698959	WITHOUT_CLASSIFICATION	2.442530104091157E-6	DEFECT
// redo the test, but the 2 include patterns are inverted	WITHOUT_CLASSIFICATION	0.9999998273075252	WITHOUT_CLASSIFICATION	1.7269247486305168E-7	DEFECT
// end of try-catch	WITHOUT_CLASSIFICATION	0.999999402868528	WITHOUT_CLASSIFICATION	5.971314721324101E-7	DEFECT
// tests one the file object	WITHOUT_CLASSIFICATION	0.9999999072227248	WITHOUT_CLASSIFICATION	9.277727514291803E-8	DEFECT
// On junit3 this is a FAILURE, on junit4 this is an ERROR	WITHOUT_CLASSIFICATION	0.9999894634970676	WITHOUT_CLASSIFICATION	1.0536502932337624E-5	DEFECT
// conversion to URL via FileUtils like in XMLResultAggregator, not as suggested in the bug report	WITHOUT_CLASSIFICATION	0.9999895130061786	WITHOUT_CLASSIFICATION	1.0486993821567561E-5	DEFECT
// conversion to URL via FileUtils like in XMLResultAggregator, not as suggested in the bug report	WITHOUT_CLASSIFICATION	0.9999895130061786	WITHOUT_CLASSIFICATION	1.0486993821567561E-5	DEFECT
// conversion to URL via FileUtils like in XMLResultAggregator, not as suggested in the bug report	WITHOUT_CLASSIFICATION	0.9999895130061786	WITHOUT_CLASSIFICATION	1.0486993821567561E-5	DEFECT
// mandatory constructor	WITHOUT_CLASSIFICATION	0.9999992201860147	WITHOUT_CLASSIFICATION	7.798139853623322E-7	DEFECT
// check that a suite generates no errors	WITHOUT_CLASSIFICATION	0.9999992231318385	WITHOUT_CLASSIFICATION	7.768681614550454E-7	DEFECT
// check that having no suite generates no errors	WITHOUT_CLASSIFICATION	0.9999990644520436	WITHOUT_CLASSIFICATION	9.355479564938348E-7	DEFECT
// check that something which is not a testcase generates no errors // at first even though this is incorrect.	WITHOUT_CLASSIFICATION	0.9999962311760827	WITHOUT_CLASSIFICATION	3.768823917191596E-6	DEFECT
// check that an invalid suite generates an error.	WITHOUT_CLASSIFICATION	0.9999979622265065	WITHOUT_CLASSIFICATION	2.0377734935252833E-6	DEFECT
// JUnit3 test //assertEquals(runner.getFormatter().getError(), JUnitTestRunner.FAILURES, runner.getRetCode());	WITHOUT_CLASSIFICATION	0.9999983475211215	WITHOUT_CLASSIFICATION	1.6524788784319056E-6	DEFECT
// On junit3 this is a FAILURE, on junit4 this is an ERROR	WITHOUT_CLASSIFICATION	0.9999894634970676	WITHOUT_CLASSIFICATION	1.0536502932337624E-5	DEFECT
/*          * @param event the build event that is being logged.         */	WITHOUT_CLASSIFICATION	0.9999971067419373	WITHOUT_CLASSIFICATION	2.893258062752294E-6	DEFECT
// check that an exception in the constructor is noticed	WITHOUT_CLASSIFICATION	0.9999998328660773	WITHOUT_CLASSIFICATION	1.6713392262372198E-7	DEFECT
// the test runner that wrap the dummy formatter that interests us	WITHOUT_CLASSIFICATION	0.9999724354909136	WITHOUT_CLASSIFICATION	2.7564509086390125E-5	DEFECT
// use the classloader that loaded this class otherwise // it will not be able to run inner classes if this test // is ran in non-forked mode.	WITHOUT_CLASSIFICATION	0.999999323478127	WITHOUT_CLASSIFICATION	6.765218729330418E-7	DEFECT
// dummy formatter just to catch the error	WITHOUT_CLASSIFICATION	0.9999997553123201	WITHOUT_CLASSIFICATION	2.4468767989080655E-7	DEFECT
// end of try-catch	WITHOUT_CLASSIFICATION	0.999999402868528	WITHOUT_CLASSIFICATION	5.971314721324101E-7	DEFECT
// end of try-catch	WITHOUT_CLASSIFICATION	0.999999402868528	WITHOUT_CLASSIFICATION	5.971314721324101E-7	DEFECT
// byte - byte compare	WITHOUT_CLASSIFICATION	0.9999984180245596	WITHOUT_CLASSIFICATION	1.581975440524292E-6	DEFECT
/*          * @param event the build event that is being logged.         */	WITHOUT_CLASSIFICATION	0.9999971067419373	WITHOUT_CLASSIFICATION	2.893258062752294E-6	DEFECT
// get the fileset and its basedir	WITHOUT_CLASSIFICATION	0.999999357604151	WITHOUT_CLASSIFICATION	6.423958489798903E-7	DEFECT
// get the fileset and its basedir	WITHOUT_CLASSIFICATION	0.999999357604151	WITHOUT_CLASSIFICATION	6.423958489798903E-7	DEFECT
// get the fileset and its basedir	WITHOUT_CLASSIFICATION	0.999999357604151	WITHOUT_CLASSIFICATION	6.423958489798903E-7	DEFECT
// Set up a SOSGet task	WITHOUT_CLASSIFICATION	0.999999947149941	WITHOUT_CLASSIFICATION	5.2850059110537345E-8	DEFECT
// Set up a SOSGet task	WITHOUT_CLASSIFICATION	0.999999947149941	WITHOUT_CLASSIFICATION	5.2850059110537345E-8	DEFECT
// Set up a SOSCheckin task	WITHOUT_CLASSIFICATION	0.9999999867733939	WITHOUT_CLASSIFICATION	1.3226606170831165E-8	DEFECT
// Set up a SOSCheckin task	WITHOUT_CLASSIFICATION	0.9999999867733939	WITHOUT_CLASSIFICATION	1.3226606170831165E-8	DEFECT
// Set up a SOSCheckout task	WITHOUT_CLASSIFICATION	0.9999999833246729	WITHOUT_CLASSIFICATION	1.6675327125974274E-8	DEFECT
// Set up a sosCheckout task	WITHOUT_CLASSIFICATION	0.9999999756413438	WITHOUT_CLASSIFICATION	2.435865614051498E-8	DEFECT
// Set up a sosCheckout task	WITHOUT_CLASSIFICATION	0.9999999756413438	WITHOUT_CLASSIFICATION	2.435865614051498E-8	DEFECT
// We have extra elements	WITHOUT_CLASSIFICATION	0.9999997352251274	WITHOUT_CLASSIFICATION	2.6477487254467813E-7	DEFECT
// give it some time to display	WITHOUT_CLASSIFICATION	0.9999854599116147	WITHOUT_CLASSIFICATION	1.4540088385371445E-5	DEFECT
// Set up a VSSGet task	WITHOUT_CLASSIFICATION	0.9999999178892981	WITHOUT_CLASSIFICATION	8.211070186851098E-8	DEFECT
// Set up a VSSLabel task	WITHOUT_CLASSIFICATION	0.9999999698215297	WITHOUT_CLASSIFICATION	3.0178470266804504E-8	DEFECT
// Set up a VSSLabel task	WITHOUT_CLASSIFICATION	0.9999999698215297	WITHOUT_CLASSIFICATION	3.0178470266804504E-8	DEFECT
// Set up a VSSHistory task	WITHOUT_CLASSIFICATION	0.9999999489273764	WITHOUT_CLASSIFICATION	5.107262365637035E-8	DEFECT
// Set up a VSSHistory task	WITHOUT_CLASSIFICATION	0.9999999489273764	WITHOUT_CLASSIFICATION	5.107262365637035E-8	DEFECT
// Set up a Timestamp	WITHOUT_CLASSIFICATION	0.9999999857440378	WITHOUT_CLASSIFICATION	1.4255962218379723E-8	DEFECT
// Get today's date	WITHOUT_CLASSIFICATION	0.9999990259961266	WITHOUT_CLASSIFICATION	9.740038734638036E-7	DEFECT
// Set up a VSSCheckIn task	WITHOUT_CLASSIFICATION	0.9999999633618011	WITHOUT_CLASSIFICATION	3.6638198899875585E-8	DEFECT
// Set up a VSSCheckOut task	WITHOUT_CLASSIFICATION	0.9999999903340349	WITHOUT_CLASSIFICATION	9.665965225866675E-9	DEFECT
// Set up a VSSAdd task	WITHOUT_CLASSIFICATION	0.9999999340080612	WITHOUT_CLASSIFICATION	6.599193884459525E-8	DEFECT
// Set up a VSSCp task	WITHOUT_CLASSIFICATION	0.9999999340824638	WITHOUT_CLASSIFICATION	6.591753628236638E-8	DEFECT
// Set up a VSSCreate task	WITHOUT_CLASSIFICATION	0.9999999853622704	WITHOUT_CLASSIFICATION	1.4637729599950045E-8	DEFECT
// Count the number of empty strings	WITHOUT_CLASSIFICATION	0.9999994780891157	WITHOUT_CLASSIFICATION	5.219108843115077E-7	DEFECT
// ran Ant tests with -ea and this would fail spuriously	WITHOUT_CLASSIFICATION	0.9998111086005691	WITHOUT_CLASSIFICATION	1.8889139943092424E-4	DEFECT
// now to the expected failures	WITHOUT_CLASSIFICATION	0.9999979402884878	WITHOUT_CLASSIFICATION	2.0597115121880136E-6	DEFECT
// catalog <--> catalog	WITHOUT_CLASSIFICATION	0.9999985145634904	WITHOUT_CLASSIFICATION	1.4854365095067734E-6	DEFECT
// catalog1 --> catalog2 --> catalog3 --> catalog1	WITHOUT_CLASSIFICATION	0.9999916350272093	WITHOUT_CLASSIFICATION	8.364972790575322E-6	DEFECT
// catalog2 --> catalog1 --> catalog	WITHOUT_CLASSIFICATION	0.9999910312608832	WITHOUT_CLASSIFICATION	8.968739116796478E-6	DEFECT
//check that dir and src are incompatible	WITHOUT_CLASSIFICATION	0.9999999182922984	WITHOUT_CLASSIFICATION	8.170770158963286E-8	DEFECT
//check that fullpath and prefix are incompatible	WITHOUT_CLASSIFICATION	0.9999995233864781	WITHOUT_CLASSIFICATION	4.7661352185756124E-7	DEFECT
// check that reference zipfilesets cannot have specific attributes	WITHOUT_CLASSIFICATION	0.9999998469957261	WITHOUT_CLASSIFICATION	1.5300427402243258E-7	DEFECT
// check that a reference zipfileset gets the same attributes as the original	WITHOUT_CLASSIFICATION	0.9999999706727628	WITHOUT_CLASSIFICATION	2.9327237137276295E-8	DEFECT
//check that dir and src are incompatible	WITHOUT_CLASSIFICATION	0.9999999182922984	WITHOUT_CLASSIFICATION	8.170770158963286E-8	DEFECT
// // These shenanigans are necessary b/c Norm Walsh's resolver // has a different idea of how file URLs are created on windoze // ie file://c:/foo instead of file:///c:/foo //	WITHOUT_CLASSIFICATION	0.9999985858307177	WITHOUT_CLASSIFICATION	1.4141692824090122E-6	DEFECT
//check that dir and src are incompatible	WITHOUT_CLASSIFICATION	0.9999999182922984	WITHOUT_CLASSIFICATION	8.170770158963286E-8	DEFECT
//check that fullpath and prefix are incompatible	WITHOUT_CLASSIFICATION	0.9999995233864781	WITHOUT_CLASSIFICATION	4.7661352185756124E-7	DEFECT
// try a netware-volume length path, see how it is handled	WITHOUT_CLASSIFICATION	0.9999994940032824	WITHOUT_CLASSIFICATION	5.05996717657791E-7	DEFECT
// actually tests constructor as well as setPath	WITHOUT_CLASSIFICATION	0.9999999949286071	WITHOUT_CLASSIFICATION	5.071392821019083E-9	DEFECT
// check that reference tarfilesets cannot have specific attributes	WITHOUT_CLASSIFICATION	0.9999999356340057	WITHOUT_CLASSIFICATION	6.436599430278316E-8	DEFECT
// try a multi-part netware-volume length path w/forward slash, see how it is handled	WITHOUT_CLASSIFICATION	0.9999997013291368	WITHOUT_CLASSIFICATION	2.986708631127928E-7	DEFECT
// try a multi-part netware-volume length path, see how it is handled	WITHOUT_CLASSIFICATION	0.9999995517010292	WITHOUT_CLASSIFICATION	4.482989709069889E-7	DEFECT
// dummy1 --> dummy2 --> dummy3 --> dummy1	WITHOUT_CLASSIFICATION	0.9999700713634996	WITHOUT_CLASSIFICATION	2.99286365004382E-5	DEFECT
// try a netware-volume length path w/forward slash, see how it is handled	WITHOUT_CLASSIFICATION	0.9999996628890783	WITHOUT_CLASSIFICATION	3.37110921757606E-7	DEFECT
// try a multi-part netware-volume length path with UNIX // separator (this testcase if from an actual bug that was // found, in AvailableTest, which uses PathTokenizer)	WITHOUT_CLASSIFICATION	0.9999650453094809	WITHOUT_CLASSIFICATION	3.495469051909811E-5	DEFECT
// dummy1 --> dummy2 --> dummy3 --> dummy1	WITHOUT_CLASSIFICATION	0.9999700713634996	WITHOUT_CLASSIFICATION	2.99286365004382E-5	DEFECT
// dummy1 --> dummy2 --> dummy3 --> dummy1	WITHOUT_CLASSIFICATION	0.9999700713634996	WITHOUT_CLASSIFICATION	2.99286365004382E-5	DEFECT
// dummy1 --> dummy2 --> dummy3 --> dummy1	WITHOUT_CLASSIFICATION	0.9999700713634996	WITHOUT_CLASSIFICATION	2.99286365004382E-5	DEFECT
// dummy1 --> dummy2 --> dummy3 --> dummy1	WITHOUT_CLASSIFICATION	0.9999700713634996	WITHOUT_CLASSIFICATION	2.99286365004382E-5	DEFECT
// dummy1 --> dummy2 --> dummy3 (with Path "/a")	WITHOUT_CLASSIFICATION	0.9999839634861105	WITHOUT_CLASSIFICATION	1.603651388945515E-5	DEFECT
// This class acts as a custom Ant task also // and uses these variables/methods in that mode	WITHOUT_CLASSIFICATION	0.9999993786977052	WITHOUT_CLASSIFICATION	6.213022948721188E-7	DEFECT
// dummy1 --> dummy2 --> dummy3 // (which has the Project's basedir as root).	WITHOUT_CLASSIFICATION	0.9999969294818272	WITHOUT_CLASSIFICATION	3.0705181728353294E-6	DEFECT
// dummy1 --> dummy2 --> dummy3 // (which has the Project's basedir as root).	WITHOUT_CLASSIFICATION	0.9999969294818272	WITHOUT_CLASSIFICATION	3.0705181728353294E-6	DEFECT
// Grant extra permissions to read and write the user.* properties and read to the // java.home property	WITHOUT_CLASSIFICATION	0.9999917572819459	WITHOUT_CLASSIFICATION	8.242718054122669E-6	DEFECT
// dummy1 --> dummy2 --> dummy3 // (which holds patterns "include" and "exclude")	WITHOUT_CLASSIFICATION	0.9999956407157624	WITHOUT_CLASSIFICATION	4.359284237591399E-6	DEFECT
// check that a reference tarfileset gets the same attributes as the original	WITHOUT_CLASSIFICATION	0.9999999848745944	WITHOUT_CLASSIFICATION	1.512540552656892E-8	DEFECT
// was expected	WITHOUT_CLASSIFICATION	0.9999990666154487	WITHOUT_CLASSIFICATION	9.333845513942492E-7	DEFECT
// Revoke permission to write user.home (granted above via user.*), still able to read though. // and the default granted permission to read os.name.	WITHOUT_CLASSIFICATION	0.9999996333264407	WITHOUT_CLASSIFICATION	3.6667355934134595E-7	DEFECT
// Was expected, test passes	WITHOUT_CLASSIFICATION	0.999998854588423	WITHOUT_CLASSIFICATION	1.1454115770645232E-6	DEFECT
// Was expected, test passes	WITHOUT_CLASSIFICATION	0.999998854588423	WITHOUT_CLASSIFICATION	1.1454115770645232E-6	DEFECT
// Was expected, test passes	WITHOUT_CLASSIFICATION	0.999998854588423	WITHOUT_CLASSIFICATION	1.1454115770645232E-6	DEFECT
/*         * After changing CommandlineJava to search for the java         * executable, I don't know, how to tests the value returned         * here without using the same logic as applied in the class         * itself.         *         * assertTrue("no classpath", "java", s[0]);         */	WITHOUT_CLASSIFICATION	0.9999999982178832	WITHOUT_CLASSIFICATION	1.7821168088655595E-9	DEFECT
//        assertEquals("with classpath", "java", s[0]);	WITHOUT_CLASSIFICATION	0.9999999156021283	WITHOUT_CLASSIFICATION	8.439787175960824E-8	DEFECT
// only the second iteration would pass because of PR 27218	WITHOUT_CLASSIFICATION	0.9995491601324159	WITHOUT_CLASSIFICATION	4.5083986758410284E-4	DEFECT
//mix element types	WITHOUT_CLASSIFICATION	0.9999849928369998	WITHOUT_CLASSIFICATION	1.5007163000068286E-5	DEFECT
//implicit composite	WITHOUT_CLASSIFICATION	0.9999996732167795	WITHOUT_CLASSIFICATION	3.267832204470232E-7	DEFECT
// a --> b --> c --- def //               \-- ghi	WITHOUT_CLASSIFICATION	0.9999992212449397	WITHOUT_CLASSIFICATION	7.787550603436021E-7	DEFECT
// // Ensure that an external entity resolves as expected Using an // XMLCatalog: // // Transform an XML file that refers to the entity into a text // file, entity is listed in the XMLCatalog pointing to a // different file.  Stuff result into property: val2 //	WITHOUT_CLASSIFICATION	0.999999965921426	WITHOUT_CLASSIFICATION	3.4078574065718104E-8	DEFECT
// // Ensure that an external entity resolves as expected with NO // XMLCatalog involvement: // // Transform an XML file that refers to the entity into a text // file, stuff result into property: val1 //	WITHOUT_CLASSIFICATION	0.9999996973151654	WITHOUT_CLASSIFICATION	3.0268483457747114E-7	DEFECT
// this actually relies on the first manifest being found on // the classpath (probably rt.jar's) being valid	WITHOUT_CLASSIFICATION	0.9999990469348918	WITHOUT_CLASSIFICATION	9.530651082028834E-7	DEFECT
// // Ensure that an external entity resolves as expected with NO // XMLCatalog involvement: // // Transform an XML file that contains a reference to a _second_ XML file // via the document() function.  The _second_ XML file refers to an entity. // Stuff result into the property: val3 //	WITHOUT_CLASSIFICATION	0.9999839490512374	WITHOUT_CLASSIFICATION	1.6050948762569746E-5	DEFECT
// // Ensure that an external entity resolves as expected Using an // XMLCatalog: // // Transform an XML file that contains a reference to a _second_ XML file // via the document() function.  The _second_ XML file refers to an entity. // The entity is listed in the XMLCatalog pointing to a different file. // Stuff result into the property: val4 //	WITHOUT_CLASSIFICATION	0.9999998817337501	WITHOUT_CLASSIFICATION	1.1826624993085809E-7	DEFECT
// The following will be used as types and tasks	WITHOUT_CLASSIFICATION	0.9999974945270783	WITHOUT_CLASSIFICATION	2.505472921721858E-6	DEFECT
// share the setup for testing the depend task	WITHOUT_CLASSIFICATION	0.9999999980011272	WITHOUT_CLASSIFICATION	1.998872843584877E-9	DEFECT
// Test for path relative to project base directory	WITHOUT_CLASSIFICATION	0.9999998151365012	WITHOUT_CLASSIFICATION	1.8486349888006743E-7	DEFECT
//class-MockCache	WITHOUT_CLASSIFICATION	0.9999947914735332	WITHOUT_CLASSIFICATION	5.208526466765911E-6	DEFECT
//  =====================  attributes  =====================	WITHOUT_CLASSIFICATION	0.999999150938396	WITHOUT_CLASSIFICATION	8.490616040841498E-7	DEFECT
//class-MockCache	WITHOUT_CLASSIFICATION	0.9999947914735332	WITHOUT_CLASSIFICATION	5.208526466765911E-6	DEFECT
//  =====================  constructors, factories  =====================	WITHOUT_CLASSIFICATION	0.9999996980419993	WITHOUT_CLASSIFICATION	3.019580007095613E-7	DEFECT
//  =====================  JUnit stuff  =====================	WITHOUT_CLASSIFICATION	0.9999947247034001	WITHOUT_CLASSIFICATION	5.275296599857767E-6	DEFECT
// project reference is set in super.setUp()	WITHOUT_CLASSIFICATION	0.9999869843100505	WITHOUT_CLASSIFICATION	1.3015689949625703E-5	DEFECT
// init the testclasses path object	WITHOUT_CLASSIFICATION	0.9999993018230938	WITHOUT_CLASSIFICATION	6.98176906137131E-7	DEFECT
/* * /    // for test only - ignore tests where we arent work at the moment    public static junit.framework.Test suite() {        junit.framework.TestSuite suite= new junit.framework.TestSuite();        suite.addTest(new ModifiedSelectorTest("testValidateWrongCache"));        return suite;    }    /* */	WITHOUT_CLASSIFICATION	0.9999999965509125	WITHOUT_CLASSIFICATION	3.4490875213965165E-9	DEFECT
// =======  testcases for the attributes and nested elements of the selector  =====	WITHOUT_CLASSIFICATION	0.9999998515734446	WITHOUT_CLASSIFICATION	1.484265554059105E-7	DEFECT
// do the actions	WITHOUT_CLASSIFICATION	0.9999984907660294	WITHOUT_CLASSIFICATION	1.5092339705376602E-6	DEFECT
// do the checks - the buildfile stores the fileset as property	WITHOUT_CLASSIFICATION	0.9999997386374833	WITHOUT_CLASSIFICATION	2.6136251677033414E-7	DEFECT
// must be empty according to the Mock* implementations	WITHOUT_CLASSIFICATION	0.9999942111082855	WITHOUT_CLASSIFICATION	5.788891714583441E-6	DEFECT
// don't catch the JUnit exceptions	WITHOUT_CLASSIFICATION	0.9999974389404033	WITHOUT_CLASSIFICATION	2.561059596716813E-6	DEFECT
// no check for 1<=kind<=3 - only internal use therefore check it // while development	WITHOUT_CLASSIFICATION	0.999999996824958	WITHOUT_CLASSIFICATION	3.1750420626570546E-9	DEFECT
// readable form of parameter kind	WITHOUT_CLASSIFICATION	0.9999992122561954	WITHOUT_CLASSIFICATION	7.877438046940445E-7	DEFECT
// setup the "Ant project"	WITHOUT_CLASSIFICATION	0.9999996815359146	WITHOUT_CLASSIFICATION	3.1846408544274915E-7	DEFECT
// setup the selector	WITHOUT_CLASSIFICATION	0.9999999462857742	WITHOUT_CLASSIFICATION	5.371422587318375E-8	DEFECT
// get the cache, so we can check our things	WITHOUT_CLASSIFICATION	0.9999999672149643	WITHOUT_CLASSIFICATION	3.2785035678179384E-8	DEFECT
// the test	WITHOUT_CLASSIFICATION	0.9999990239532344	WITHOUT_CLASSIFICATION	9.760467657033675E-7	DEFECT
// MockCache doesnt create a file - therefore no cleanup needed	WITHOUT_CLASSIFICATION	0.9999999988982256	WITHOUT_CLASSIFICATION	1.1017744782208587E-9	DEFECT
// add the test classes to its classpath	WITHOUT_CLASSIFICATION	0.999999586669831	WITHOUT_CLASSIFICATION	4.133301691030326E-7	DEFECT
// let the selector do its checks	WITHOUT_CLASSIFICATION	0.9999981069279856	WITHOUT_CLASSIFICATION	1.8930720144722324E-6	DEFECT
// extract the algorithm name (and config) from the selectors output	WITHOUT_CLASSIFICATION	0.999884753819833	WITHOUT_CLASSIFICATION	1.1524618016709094E-4	DEFECT
// '<' and '>' are only used if the algorithm has properties	WITHOUT_CLASSIFICATION	0.999990353518219	WITHOUT_CLASSIFICATION	9.646481781079514E-6	DEFECT
// return the clean value	WITHOUT_CLASSIFICATION	0.9999999476526846	WITHOUT_CLASSIFICATION	5.234731542341046E-8	DEFECT
// initialize test environment (called "bed")	WITHOUT_CLASSIFICATION	0.9999999634489036	WITHOUT_CLASSIFICATION	3.6551096365523925E-8	DEFECT
// initialize test environment (called "bed")	WITHOUT_CLASSIFICATION	0.9999999634489036	WITHOUT_CLASSIFICATION	3.6551096365523925E-8	DEFECT
// Configure the selector	WITHOUT_CLASSIFICATION	0.9999998604127521	WITHOUT_CLASSIFICATION	1.3958724784237507E-7	DEFECT
// Configure the selector	WITHOUT_CLASSIFICATION	0.9999998604127521	WITHOUT_CLASSIFICATION	1.3958724784237507E-7	DEFECT
// does the selection	WITHOUT_CLASSIFICATION	0.9999699329312853	WITHOUT_CLASSIFICATION	3.0067068714718962E-5	DEFECT
// evaluate correctness	WITHOUT_CLASSIFICATION	0.9999969923706232	WITHOUT_CLASSIFICATION	3.007629376805351E-6	DEFECT
// evaluate correctness	WITHOUT_CLASSIFICATION	0.9999969923706232	WITHOUT_CLASSIFICATION	3.007629376805351E-6	DEFECT
// same logic as on algorithm, no testcases created	WITHOUT_CLASSIFICATION	0.9999999334880699	WITHOUT_CLASSIFICATION	6.65119300113479E-8	DEFECT
// same logic as on algorithm, no testcases created	WITHOUT_CLASSIFICATION	0.9999999334880699	WITHOUT_CLASSIFICATION	6.65119300113479E-8	DEFECT
// given cache must be empty	WITHOUT_CLASSIFICATION	0.9999992697577926	WITHOUT_CLASSIFICATION	7.302422074203237E-7	DEFECT
// cache must return a stored value	WITHOUT_CLASSIFICATION	0.9999999036071433	WITHOUT_CLASSIFICATION	9.639285674105572E-8	DEFECT
// test the iterator	WITHOUT_CLASSIFICATION	0.9999999555174564	WITHOUT_CLASSIFICATION	4.4482543605824935E-8	DEFECT
// clear the cache	WITHOUT_CLASSIFICATION	0.9999992574740917	WITHOUT_CLASSIFICATION	7.425259083346683E-7	DEFECT
// must not be a directory	WITHOUT_CLASSIFICATION	0.9999991249283632	WITHOUT_CLASSIFICATION	8.750716368587976E-7	DEFECT
// get the Hashvalues	WITHOUT_CLASSIFICATION	0.9999999208724583	WITHOUT_CLASSIFICATION	7.91275417888878E-8	DEFECT
// Assert !=null and equality	WITHOUT_CLASSIFICATION	0.9999997770411387	WITHOUT_CLASSIFICATION	2.2295886130435466E-7	DEFECT
//if-isFile //for	WITHOUT_CLASSIFICATION	0.9999989539378706	WITHOUT_CLASSIFICATION	1.0460621294425048E-6	DEFECT
// ==============  testcases for the comparator implementations  ==============	WITHOUT_CLASSIFICATION	0.9999961008790886	WITHOUT_CLASSIFICATION	3.899120911337417E-6	DEFECT
//not yet supported see note in selector	WITHOUT_CLASSIFICATION	0.9998981988209542	WITHOUT_CLASSIFICATION	1.0180117904581963E-4	DEFECT
//new File("src/etc/testcases/types/resources/selectors/cache.properties").delete();	WITHOUT_CLASSIFICATION	0.9999997121445979	WITHOUT_CLASSIFICATION	2.878554020886624E-7	DEFECT
// really "2"	WITHOUT_CLASSIFICATION	0.9999935631288708	WITHOUT_CLASSIFICATION	6.4368711291868545E-6	DEFECT
// Configure the selector - only defaults are used	WITHOUT_CLASSIFICATION	0.9999999389988381	WITHOUT_CLASSIFICATION	6.100116196503371E-8	DEFECT
//                     + "  <emptyElement></emptyElement>"	WITHOUT_CLASSIFICATION	0.9999945410745669	WITHOUT_CLASSIFICATION	5.458925433220322E-6	DEFECT
/* ============ ResourceFactory interface ====================== */	WITHOUT_CLASSIFICATION	0.99999853264454	WITHOUT_CLASSIFICATION	1.467355460113812E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999993109983563	WITHOUT_CLASSIFICATION	6.890016436783456E-7	DEFECT
//class-BFT	WITHOUT_CLASSIFICATION	0.9999824166355262	WITHOUT_CLASSIFICATION	1.7583364473757416E-5	DEFECT
// do the actions	WITHOUT_CLASSIFICATION	0.9999984907660294	WITHOUT_CLASSIFICATION	1.5092339705376602E-6	DEFECT
// don't catch the JUnit exceptions	WITHOUT_CLASSIFICATION	0.9999974389404033	WITHOUT_CLASSIFICATION	2.561059596716813E-6	DEFECT
// // *****  First Run  ***** // the first call should get all files, because nothing is in // the cache //	WITHOUT_CLASSIFICATION	0.9999975884038121	WITHOUT_CLASSIFICATION	2.41159618775504E-6	DEFECT
// // *****  Second Run  ***** // the second call should get no files, because no content // has changed //	WITHOUT_CLASSIFICATION	0.9999979927365296	WITHOUT_CLASSIFICATION	2.0072634704103956E-6	DEFECT
// // *****  make some files dirty  ***** //	WITHOUT_CLASSIFICATION	0.9999913210101571	WITHOUT_CLASSIFICATION	8.678989842931269E-6	DEFECT
// these files are made dirty --> 3+4 with different content	WITHOUT_CLASSIFICATION	0.9999970546136624	WITHOUT_CLASSIFICATION	2.945386337583569E-6	DEFECT
// AccessObject to the test-Ant-environment	WITHOUT_CLASSIFICATION	0.9999977438108915	WITHOUT_CLASSIFICATION	2.2561891085540853E-6	DEFECT
// give some values (via property file) to that environment	WITHOUT_CLASSIFICATION	0.9999739310572169	WITHOUT_CLASSIFICATION	2.6068942783121257E-5	DEFECT
// call the target for making the files dirty	WITHOUT_CLASSIFICATION	0.9999965227248259	WITHOUT_CLASSIFICATION	3.477275174127188E-6	DEFECT
// // *****  Third Run  ***** // third call should get only those files, which CONTENT changed // (no timestamp changes required!)	WITHOUT_CLASSIFICATION	0.999998997529439	WITHOUT_CLASSIFICATION	1.0024705610603248E-6	DEFECT
// // *****  Check the result  ***** //	WITHOUT_CLASSIFICATION	0.9999997564734566	WITHOUT_CLASSIFICATION	2.435265433437079E-7	DEFECT
// Mark all files which should be selected as (T)rue and all others // as (F)alse. Directories are always selected so they always are // (T)rue.	WITHOUT_CLASSIFICATION	0.9999999959919641	WITHOUT_CLASSIFICATION	4.008035934372383E-9	DEFECT
// f2name shouldn't be selected: only timestamp has changed!	WITHOUT_CLASSIFICATION	0.9998210090703202	WITHOUT_CLASSIFICATION	1.789909296797055E-4	DEFECT
// info text // list of files // expected result // result	WITHOUT_CLASSIFICATION	0.9999997768546852	WITHOUT_CLASSIFICATION	2.2314531477953456E-7	DEFECT
// cleanup the environment	WITHOUT_CLASSIFICATION	0.9999974138729397	WITHOUT_CLASSIFICATION	2.5861270602594034E-6	DEFECT
// cleanup the environment	WITHOUT_CLASSIFICATION	0.9999974138729397	WITHOUT_CLASSIFICATION	2.5861270602594034E-6	DEFECT
// RuleBasedCollator not yet supported - see Selector:375 note	WITHOUT_CLASSIFICATION	0.9990456928889769	WITHOUT_CLASSIFICATION	9.543071110231156E-4	DEFECT
//s.addParam(createParam("algorithm.provider","---")); // i don't know any valid	WITHOUT_CLASSIFICATION	0.9993699696109788	WITHOUT_CLASSIFICATION	6.30030389021216E-4	DEFECT
// first and second run	WITHOUT_CLASSIFICATION	0.9999984429126337	WITHOUT_CLASSIFICATION	1.5570873663299522E-6	DEFECT
// make dirty	WITHOUT_CLASSIFICATION	0.9999920659534491	WITHOUT_CLASSIFICATION	7.93404655095913E-6	DEFECT
// third run	WITHOUT_CLASSIFICATION	0.9999691272657615	WITHOUT_CLASSIFICATION	3.087273423848567E-5	DEFECT
// the directories to check	WITHOUT_CLASSIFICATION	0.9999992549442054	WITHOUT_CLASSIFICATION	7.450557947081858E-7	DEFECT
// do the checks	WITHOUT_CLASSIFICATION	0.9999994868157762	WITHOUT_CLASSIFICATION	5.131842238379412E-7	DEFECT
//class-MockProject	WITHOUT_CLASSIFICATION	0.9999597633336301	WITHOUT_CLASSIFICATION	4.023666636993853E-5	DEFECT
//class-ModifiedSelectorTest	WITHOUT_CLASSIFICATION	0.9999998375207975	WITHOUT_CLASSIFICATION	1.6247920255503255E-7	DEFECT
// First read in zero bytes	WITHOUT_CLASSIFICATION	0.9999994208789268	WITHOUT_CLASSIFICATION	5.791210733074627E-7	DEFECT
// Now read in the string	WITHOUT_CLASSIFICATION	0.9999996544869495	WITHOUT_CLASSIFICATION	3.4551305044624224E-7	DEFECT
// Make sure that the counts are the same	WITHOUT_CLASSIFICATION	0.999999642531583	WITHOUT_CLASSIFICATION	3.5746841696092114E-7	DEFECT
// LineOrientedOutputStreamTest	WITHOUT_CLASSIFICATION	0.9999999367091008	WITHOUT_CLASSIFICATION	6.32908992439826E-8	DEFECT
// make sure that elapsed time in set via date works	WITHOUT_CLASSIFICATION	0.9999971519713277	WITHOUT_CLASSIFICATION	2.8480286723290277E-6	DEFECT
// make sure that elapsed time in ms works	WITHOUT_CLASSIFICATION	0.9999850107494286	WITHOUT_CLASSIFICATION	1.4989250571432957E-5	DEFECT
// should be new moon	WITHOUT_CLASSIFICATION	0.9999970329890115	WITHOUT_CLASSIFICATION	2.9670109885674915E-6	DEFECT
// Try a silly case	WITHOUT_CLASSIFICATION	0.9999958039528127	WITHOUT_CLASSIFICATION	4.196047187246457E-6	DEFECT
// and a little longer	WITHOUT_CLASSIFICATION	0.9999993922328473	WITHOUT_CLASSIFICATION	6.077671526063655E-7	DEFECT
/*             * throw in drive letters             */	WITHOUT_CLASSIFICATION	0.9999787402626237	WITHOUT_CLASSIFICATION	2.1259737376370373E-5	DEFECT
/*             * promised to eliminate consecutive slashes after drive letter.             */	WITHOUT_CLASSIFICATION	0.9999996656504518	WITHOUT_CLASSIFICATION	3.343495482169156E-7	DEFECT
/*             * Start with simple absolute file names.             */	WITHOUT_CLASSIFICATION	0.999999996366779	WITHOUT_CLASSIFICATION	3.63322096663367E-9	DEFECT
/*             * Start with simple absolute file names.             */	WITHOUT_CLASSIFICATION	0.999999996366779	WITHOUT_CLASSIFICATION	3.63322096663367E-9	DEFECT
/*         * Now test some relative file name magic.         */	WITHOUT_CLASSIFICATION	0.9999999077177115	WITHOUT_CLASSIFICATION	9.228228843109348E-8	DEFECT
/*         * Now test some relative file name magic.         */	WITHOUT_CLASSIFICATION	0.9999999077177115	WITHOUT_CLASSIFICATION	9.228228843109348E-8	DEFECT
// implies lastModified == 0	WITHOUT_CLASSIFICATION	0.9999999414226394	WITHOUT_CLASSIFICATION	5.857736060954989E-8	DEFECT
/* ============ FileNameMapper interface ======================= */	WITHOUT_CLASSIFICATION	0.999995501401048	WITHOUT_CLASSIFICATION	4.49859895194091E-6	DEFECT
// Windows adds the drive letter in uppercase, unless you run Cygwin	WITHOUT_CLASSIFICATION	0.9998711603501961	WITHOUT_CLASSIFICATION	1.2883964980391942E-4	DEFECT
/*         * Sleep for some time to make sure a touched file would get a         * more recent timestamp according to the file system's         * granularity (should be > 2s to account for Windows FAT).         */	WITHOUT_CLASSIFICATION	0.9999917455658486	WITHOUT_CLASSIFICATION	8.254434151370596E-6	DEFECT
// number of milliseconds in a day	WITHOUT_CLASSIFICATION	0.9999642800976994	WITHOUT_CLASSIFICATION	3.571990230058627E-5	DEFECT
// in a previous version, the date of the file was set to 123456 // milliseconds since 01.01.1970 // it did not work on a computer running JDK 1.4.1_02 + Windows 2000	WITHOUT_CLASSIFICATION	0.9998720171174494	WITHOUT_CLASSIFICATION	1.2798288255048862E-4	DEFECT
/*         * I would love to compare this with 123456, but depending on         * the filesystems granularity it can take an arbitrary value.         *         * Just assert the time has changed.         */	WITHOUT_CLASSIFICATION	0.9999994544945893	WITHOUT_CLASSIFICATION	5.455054106789871E-7	DEFECT
/*             * throw in NetWare volume names             */	WITHOUT_CLASSIFICATION	0.9999967727827856	WITHOUT_CLASSIFICATION	3.227217214309178E-6	DEFECT
/*             * throw in NetWare volume names             */	WITHOUT_CLASSIFICATION	0.9999967727827856	WITHOUT_CLASSIFICATION	3.227217214309178E-6	DEFECT
/*             * drive letters must be considered just normal filenames.             */	WITHOUT_CLASSIFICATION	0.9999999736078633	WITHOUT_CLASSIFICATION	2.639213667371989E-8	DEFECT
// Passed test 	WITHOUT_CLASSIFICATION	0.99999981241812	WITHOUT_CLASSIFICATION	1.8758187998098467E-7	DEFECT
// Expected exception caught	WITHOUT_CLASSIFICATION	0.9999952526409382	WITHOUT_CLASSIFICATION	4.74735906168837E-6	DEFECT
// Expected exception caught	WITHOUT_CLASSIFICATION	0.9999952526409382	WITHOUT_CLASSIFICATION	4.74735906168837E-6	DEFECT
// null parent dir	WITHOUT_CLASSIFICATION	0.9999963402999895	WITHOUT_CLASSIFICATION	3.6597000105621526E-6	DEFECT
//preserve case on Cygwin when using 1.4 toURI:	WITHOUT_CLASSIFICATION	0.9999996863819829	WITHOUT_CLASSIFICATION	3.1361801709621747E-7	DEFECT
// OK, Java 1.3.	WITHOUT_CLASSIFICATION	0.9999993733638832	WITHOUT_CLASSIFICATION	6.266361167101282E-7	DEFECT
//get a time	WITHOUT_CLASSIFICATION	0.9999993268486609	WITHOUT_CLASSIFICATION	6.731513390128254E-7	DEFECT
//add some time. We assume no OS has a granularity this bad	WITHOUT_CLASSIFICATION	0.9999909654273084	WITHOUT_CLASSIFICATION	9.034572691547136E-6	DEFECT
/*        assertTrue("same timestamp is up to date",                fu.isUpToDate(firstTime, firstTime));                */	WITHOUT_CLASSIFICATION	0.9999999888403109	WITHOUT_CLASSIFICATION	1.1159689028715819E-8	DEFECT
//check that older is up to date with a newer dest	WITHOUT_CLASSIFICATION	0.9999996522252632	WITHOUT_CLASSIFICATION	3.4777473670367386E-7	DEFECT
//check that older is up to date with a newer dest	WITHOUT_CLASSIFICATION	0.9999996522252632	WITHOUT_CLASSIFICATION	3.4777473670367386E-7	DEFECT
// This just tests that the function does not blow up	WITHOUT_CLASSIFICATION	0.9999923896499333	WITHOUT_CLASSIFICATION	7.610350066677298E-6	DEFECT
// java.home is bogus	WITHOUT_CLASSIFICATION	0.9999995642840874	WITHOUT_CLASSIFICATION	4.3571591257362827E-7	DEFECT
// could still be OS/2	WITHOUT_CLASSIFICATION	0.9999785731787463	WITHOUT_CLASSIFICATION	2.1426821253725653E-5	DEFECT
// 27224 = magic (a random port which is unlikely to be in use)	WITHOUT_CLASSIFICATION	0.9999634363399943	WITHOUT_CLASSIFICATION	3.6563660005686296E-5	DEFECT
// order of headers cannot be guaranteed	WITHOUT_CLASSIFICATION	0.9999889100469638	WITHOUT_CLASSIFICATION	1.1089953036260015E-5	DEFECT
// state engine: false=envelope, true=message	WITHOUT_CLASSIFICATION	0.9999991186283772	WITHOUT_CLASSIFICATION	8.813716228226874E-7	DEFECT
// make sure there are no issues concerning line separator interpretation // a line separator for regex (perl) is always a unix line (ie \n)	WITHOUT_CLASSIFICATION	0.9999997616601994	WITHOUT_CLASSIFICATION	2.383398004890748E-7	DEFECT
// sb.append( response + "\r\n" );	WITHOUT_CLASSIFICATION	0.9999970231870152	WITHOUT_CLASSIFICATION	2.9768129847911136E-6	DEFECT
// 60s // a further 30s	WITHOUT_CLASSIFICATION	0.9999997974701808	WITHOUT_CLASSIFICATION	2.0252981921818357E-7	DEFECT
// 60s // a further 30s	WITHOUT_CLASSIFICATION	0.9999997974701808	WITHOUT_CLASSIFICATION	2.0252981921818357E-7	DEFECT
// 60s // a further 30s	WITHOUT_CLASSIFICATION	0.9999997974701808	WITHOUT_CLASSIFICATION	2.0252981921818357E-7	DEFECT
// 60s // a further 30s	WITHOUT_CLASSIFICATION	0.9999997974701808	WITHOUT_CLASSIFICATION	2.0252981921818357E-7	DEFECT
// wait for connection	WITHOUT_CLASSIFICATION	0.9999887508198954	WITHOUT_CLASSIFICATION	1.1249180104588837E-5	DEFECT
//throw new IllegalStateException("Command unrecognized: " //    + response);	WITHOUT_CLASSIFICATION	0.9999934628021803	WITHOUT_CLASSIFICATION	6.5371978196693564E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999998068383374	WITHOUT_CLASSIFICATION	1.9316166246942935E-7	DEFECT
// while	WITHOUT_CLASSIFICATION	0.9999961570329914	WITHOUT_CLASSIFICATION	3.842967008630758E-6	DEFECT
// CRC manually calculated, sorry // CRC // mode // link length // uid, gid	WITHOUT_CLASSIFICATION	0.9999993345675615	WITHOUT_CLASSIFICATION	6.65432438521162E-7	DEFECT
// CRC manually calculated, sorry // CRC // mode // link length // uid, gid	WITHOUT_CLASSIFICATION	0.9999993345675615	WITHOUT_CLASSIFICATION	6.65432438521162E-7	DEFECT
// CRC // mode // link length // uid, gid	WITHOUT_CLASSIFICATION	0.9999965446180391	WITHOUT_CLASSIFICATION	3.4553819608703676E-6	DEFECT
// CRC // mode // link length // uid, gid	WITHOUT_CLASSIFICATION	0.9999965446180391	WITHOUT_CLASSIFICATION	3.4553819608703676E-6	DEFECT
// CRC // mode // link // uid, gid	WITHOUT_CLASSIFICATION	0.999987291858031	WITHOUT_CLASSIFICATION	1.2708141968936984E-5	DEFECT
// bad CRC // mode // link // uid, gid	WITHOUT_CLASSIFICATION	0.9999876864627781	WITHOUT_CLASSIFICATION	1.2313537221834952E-5	DEFECT
//if we got here, all was well	WITHOUT_CLASSIFICATION	0.9999982905011574	WITHOUT_CLASSIFICATION	1.7094988426313107E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999554955215	WITHOUT_CLASSIFICATION	4.4504478498603726E-7	DEFECT
// CheckStyle:ConstantNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9999993818836707	WITHOUT_CLASSIFICATION	6.181163293333136E-7	DEFECT
// CheckStyle:ConstantNameCheck ON	WITHOUT_CLASSIFICATION	0.9999995939757826	WITHOUT_CLASSIFICATION	4.0602421725288897E-7	DEFECT
// Filter out messages based on priority	WITHOUT_CLASSIFICATION	0.9999227501376016	WITHOUT_CLASSIFICATION	7.724986239835187E-5	DEFECT
// Print out the name of the task if we're in one	WITHOUT_CLASSIFICATION	0.9999999915349106	WITHOUT_CLASSIFICATION	8.465089287896834E-9	DEFECT
// shouldn't be possible	WITHOUT_CLASSIFICATION	0.9999682684127494	WITHOUT_CLASSIFICATION	3.1731587250618994E-5	DEFECT
// Set up PRIMITIVE_TYPE_MAP	WITHOUT_CLASSIFICATION	0.9999998305843939	WITHOUT_CLASSIFICATION	1.6941560619504086E-7	DEFECT
// check of add[Configured](Class) pattern	WITHOUT_CLASSIFICATION	0.9999999107440122	WITHOUT_CLASSIFICATION	8.925598791608442E-8	DEFECT
// not really user settable properties on tasks/project components	WITHOUT_CLASSIFICATION	0.9999737418906987	WITHOUT_CLASSIFICATION	2.6258109301316595E-5	DEFECT
// hide addTask for TaskContainers	WITHOUT_CLASSIFICATION	0.9999999666363479	WITHOUT_CLASSIFICATION	3.336365195269833E-8	DEFECT
// use wrappers for primitive classes, e.g. int and // Integer are treated identically	WITHOUT_CLASSIFICATION	0.9999926523494476	WITHOUT_CLASSIFICATION	7.347650552383163E-6	DEFECT
// Check if a create of this property is already present // add takes preference over create for CB purposes	WITHOUT_CLASSIFICATION	0.9999999989342936	WITHOUT_CLASSIFICATION	1.0657065181231016E-9	DEFECT
/*                         *  Ignore this method as there is an addConfigured                         *  form of this method that has a higher                         *  priority                         */	WITHOUT_CLASSIFICATION	0.999999993521202	WITHOUT_CLASSIFICATION	6.47879798792113E-9	DEFECT
// If a helper cannot be found, or if the helper is for another // classloader, create a new IH	WITHOUT_CLASSIFICATION	0.9999841729281317	WITHOUT_CLASSIFICATION	1.5827071868378354E-5	DEFECT
// Ignore attribute from unknown uri's	WITHOUT_CLASSIFICATION	0.9999990465379986	WITHOUT_CLASSIFICATION	9.534620013221363E-7	DEFECT
// impossible as getMethods should only return public methods	WITHOUT_CLASSIFICATION	0.9999997604643281	WITHOUT_CLASSIFICATION	2.395356719480785E-7	DEFECT
// impossible as getMethods should only return public methods	WITHOUT_CLASSIFICATION	0.9999997604643281	WITHOUT_CLASSIFICATION	2.395356719480785E-7	DEFECT
// impossible as getMethods should only return public methods	WITHOUT_CLASSIFICATION	0.9999997604643281	WITHOUT_CLASSIFICATION	2.395356719480785E-7	DEFECT
// Element doesn't handle text content	WITHOUT_CLASSIFICATION	0.9999993291644794	WITHOUT_CLASSIFICATION	6.708355204838462E-7	DEFECT
// Not whitespace - fail	WITHOUT_CLASSIFICATION	0.9999968319594715	WITHOUT_CLASSIFICATION	3.1680405285715025E-6	DEFECT
// Only whitespace - ignore	WITHOUT_CLASSIFICATION	0.9999999688409568	WITHOUT_CLASSIFICATION	3.1159043208188216E-8	DEFECT
// Class doesn't have a String constructor but a decent factory method	WITHOUT_CLASSIFICATION	0.9999998866304387	WITHOUT_CLASSIFICATION	1.1336956133268712E-7	DEFECT
// char and Character get special treatment - take the first character	WITHOUT_CLASSIFICATION	0.999999997949001	WITHOUT_CLASSIFICATION	2.0509990380180896E-9	DEFECT
// simplest case - setAttribute expects String	WITHOUT_CLASSIFICATION	0.9999997773974951	WITHOUT_CLASSIFICATION	2.2260250479400826E-7	DEFECT
// First try with Project.	WITHOUT_CLASSIFICATION	0.9999955872916234	WITHOUT_CLASSIFICATION	4.412708376510249E-6	DEFECT
// EnumeratedAttributes have their own helper class	WITHOUT_CLASSIFICATION	0.9999934238779612	WITHOUT_CLASSIFICATION	6.5761220387384324E-6	DEFECT
// resolve relative paths through Project	WITHOUT_CLASSIFICATION	0.9999780437441408	WITHOUT_CLASSIFICATION	2.195625585928039E-5	DEFECT
/** Version to use for addXXX and addConfiguredXXX */	WITHOUT_CLASSIFICATION	0.9998445518460093	WITHOUT_CLASSIFICATION	1.5544815399077332E-4	DEFECT
// Well, no matching constructor.	WITHOUT_CLASSIFICATION	0.9999999915954888	WITHOUT_CLASSIFICATION	8.404511100333042E-9	DEFECT
// OK, try without.	WITHOUT_CLASSIFICATION	0.9999844409253965	WITHOUT_CLASSIFICATION	1.555907460347911E-5	DEFECT
// the method called to add/create the nested element	WITHOUT_CLASSIFICATION	0.9999998584577552	WITHOUT_CLASSIFICATION	1.4154224491170994E-7	DEFECT
// DO NOTHING	WITHOUT_CLASSIFICATION	0.9999961023798516	WITHOUT_CLASSIFICATION	3.8976201484044815E-6	DEFECT
// ADD or ADD_CONFIGURED	WITHOUT_CLASSIFICATION	0.9999975898328596	WITHOUT_CLASSIFICATION	2.4101671404071086E-6	DEFECT
// the method called to set the attribute	WITHOUT_CLASSIFICATION	0.999999807819883	WITHOUT_CLASSIFICATION	1.9218011694699778E-7	DEFECT
// add configured replaces the add method	WITHOUT_CLASSIFICATION	0.999999960830432	WITHOUT_CLASSIFICATION	3.916956800393713E-8	DEFECT
// maintain a sorted list of targets	WITHOUT_CLASSIFICATION	0.9999999945494075	WITHOUT_CLASSIFICATION	5.45059243455766E-9	DEFECT
// worst case. look for a public String constructor and use it // also supports new Whatever(Project, String) as for Path or Reference // This is used (deliberately) for all primitives/wrappers other than // char and boolean	WITHOUT_CLASSIFICATION	0.9999999965091736	WITHOUT_CLASSIFICATION	3.490826384821699E-9	DEFECT
// Already present	WITHOUT_CLASSIFICATION	0.9999994398644664	WITHOUT_CLASSIFICATION	5.601355336511511E-7	DEFECT
// higher derived	WITHOUT_CLASSIFICATION	0.999994215097913	WITHOUT_CLASSIFICATION	5.78490208708812E-6	DEFECT
// print the stacktrace in the build file it is always useful... // better have too much info than not enough.	WITHOUT_CLASSIFICATION	0.9998139865530828	WITHOUT_CLASSIFICATION	1.8601344691717984E-4	DEFECT
// specify output in UTF8 otherwise accented characters will blow // up everything	WITHOUT_CLASSIFICATION	0.9999999952975682	WITHOUT_CLASSIFICATION	4.702431844270159E-9	DEFECT
/* For debugging purposes uncomment:        org.w3c.dom.Comment s = doc.createComment("stack=" + threadStack);        buildElement.element.appendChild(s);         */	WITHOUT_CLASSIFICATION	0.9999862582534005	WITHOUT_CLASSIFICATION	1.3741746599451737E-5	DEFECT
// -------------------------------------------------- BuildLogger interface	WITHOUT_CLASSIFICATION	0.999989390484964	WITHOUT_CLASSIFICATION	1.0609515036019871E-5	DEFECT
// Shouldn't happen	WITHOUT_CLASSIFICATION	0.9999457434030049	WITHOUT_CLASSIFICATION	5.4256596995147284E-5	DEFECT
// LF is always end of line (i.e. CRLF or single LF)	WITHOUT_CLASSIFICATION	0.9999937374097476	WITHOUT_CLASSIFICATION	6.262590252315221E-6	DEFECT
// CR without LF - send buffer then add char	WITHOUT_CLASSIFICATION	0.9999985989338901	WITHOUT_CLASSIFICATION	1.4010661098893056E-6	DEFECT
// add into buffer	WITHOUT_CLASSIFICATION	0.9999983206856486	WITHOUT_CLASSIFICATION	1.6793143513201228E-6	DEFECT
// either end of buffer or a line separator char	WITHOUT_CLASSIFICATION	0.9999998537641362	WITHOUT_CLASSIFICATION	1.4623586382658668E-7	DEFECT
// check adapter	WITHOUT_CLASSIFICATION	0.9999999457568276	WITHOUT_CLASSIFICATION	5.4243172472700004E-8	DEFECT
//can throw the same exception, if there is no this(Project) ctor.	WITHOUT_CLASSIFICATION	0.9999785872612278	WITHOUT_CLASSIFICATION	2.1412738772231596E-5	DEFECT
//now we instantiate	WITHOUT_CLASSIFICATION	0.9999987211909708	WITHOUT_CLASSIFICATION	1.2788090292386259E-6	DEFECT
//set up project references.	WITHOUT_CLASSIFICATION	0.999999898666529	WITHOUT_CLASSIFICATION	1.0133347104125287E-7	DEFECT
/** Our current message output status. Follows Project.MSG_XXX. */	WITHOUT_CLASSIFICATION	0.9999582924234586	WITHOUT_CLASSIFICATION	4.1707576541559264E-5	DEFECT
/* null */	WITHOUT_CLASSIFICATION	0.9999808224454468	WITHOUT_CLASSIFICATION	1.9177554553171724E-5	DEFECT
// expect the worst	WITHOUT_CLASSIFICATION	0.9999919503578895	WITHOUT_CLASSIFICATION	8.049642110618496E-6	DEFECT
//this is the list of lu	WITHOUT_CLASSIFICATION	0.999998616323595	WITHOUT_CLASSIFICATION	1.3836764051069763E-6	DEFECT
// cycle through given args	WITHOUT_CLASSIFICATION	0.9999994397512606	WITHOUT_CLASSIFICATION	5.602487393736335E-7	DEFECT
// set the flag to display the targets and quit	WITHOUT_CLASSIFICATION	0.9999999010745696	WITHOUT_CLASSIFICATION	9.892543038607846E-8	DEFECT
// eat up next arg if present, default to build.xml	WITHOUT_CLASSIFICATION	0.9999993424162816	WITHOUT_CLASSIFICATION	6.575837182710102E-7	DEFECT
// we don't have any more args to recognize!	WITHOUT_CLASSIFICATION	0.9979164289434826	WITHOUT_CLASSIFICATION	0.0020835710565173674	DEFECT
// if it's no other arg, it may be the target	WITHOUT_CLASSIFICATION	0.9999999585173557	WITHOUT_CLASSIFICATION	4.14826442656134E-8	DEFECT
// if buildFile was not specified on the command line,	WITHOUT_CLASSIFICATION	0.9999802524155464	WITHOUT_CLASSIFICATION	1.974758445353042E-5	DEFECT
// but -find then search for it	WITHOUT_CLASSIFICATION	0.9999991449697762	WITHOUT_CLASSIFICATION	8.550302238134933E-7	DEFECT
// make sure buildfile exists	WITHOUT_CLASSIFICATION	0.9999985538584881	WITHOUT_CLASSIFICATION	1.4461415117725224E-6	DEFECT
// make sure it's not a directory (this falls into the ultra // paranoid lets check everything category	WITHOUT_CLASSIFICATION	0.999965848066886	WITHOUT_CLASSIFICATION	3.4151933114004276E-5	DEFECT
// Load the property files specified by -propertyfile	WITHOUT_CLASSIFICATION	0.9999993128669058	WITHOUT_CLASSIFICATION	6.871330942415937E-7	DEFECT
// ensure that -D properties take precedence	WITHOUT_CLASSIFICATION	0.9999985940436014	WITHOUT_CLASSIFICATION	1.4059563987419394E-6	DEFECT
// check if the target file exists in the current directory	WITHOUT_CLASSIFICATION	0.99999998342734	WITHOUT_CLASSIFICATION	1.6572659950309705E-8	DEFECT
// change to parent directory	WITHOUT_CLASSIFICATION	0.9999953606000739	WITHOUT_CLASSIFICATION	4.639399926125032E-6	DEFECT
// refresh our file handle	WITHOUT_CLASSIFICATION	0.9999999510565806	WITHOUT_CLASSIFICATION	4.8943419451068664E-8	DEFECT
// use a system manager that prevents from System.exit()	WITHOUT_CLASSIFICATION	0.9999919870598798	WITHOUT_CLASSIFICATION	8.012940120188278E-6	DEFECT
//SecurityManager can not be installed here for backwards //compatibility reasons (PD). Needs to be loaded prior to //ant class if we are going to implement it. //System.setSecurityManager(new NoExitSecurityManager());	WITHOUT_CLASSIFICATION	0.999995114999475	WITHOUT_CLASSIFICATION	4.885000524930841E-6	DEFECT
// set the thread priorities	WITHOUT_CLASSIFICATION	0.9999997251982843	WITHOUT_CLASSIFICATION	2.7480171567332367E-7	DEFECT
//we cannot set the priority here.	WITHOUT_CLASSIFICATION	0.9963113468205705	WITHOUT_CLASSIFICATION	0.0036886531794294423	DEFECT
// set user-define properties	WITHOUT_CLASSIFICATION	0.9999999250071281	WITHOUT_CLASSIFICATION	7.499287182154646E-8	DEFECT
//proxy setup if enabled	WITHOUT_CLASSIFICATION	0.9999998373834185	WITHOUT_CLASSIFICATION	1.6261658164770888E-7	DEFECT
// make sure that we have a target to execute	WITHOUT_CLASSIFICATION	0.9999993301070376	WITHOUT_CLASSIFICATION	6.698929624867366E-7	DEFECT
// Add the default listener	WITHOUT_CLASSIFICATION	0.9999999961224436	WITHOUT_CLASSIFICATION	3.877556356772722E-9	DEFECT
// find the target with the longest name	WITHOUT_CLASSIFICATION	0.9999998683888957	WITHOUT_CLASSIFICATION	1.316111043511587E-7	DEFECT
// split the targets in top-level and sub-targets depending // on the presence of a description	WITHOUT_CLASSIFICATION	0.999999981743368	WITHOUT_CLASSIFICATION	1.8256631980111366E-8	DEFECT
// shouldn't need to check but...	WITHOUT_CLASSIFICATION	0.9987495815602039	WITHOUT_CLASSIFICATION	0.0012504184397961553	DEFECT
// now, start printing the targets and their descriptions	WITHOUT_CLASSIFICATION	0.9999999854768109	WITHOUT_CLASSIFICATION	1.4523189125818535E-8	DEFECT
// got a bit annoyed that I couldn't find a pad function	WITHOUT_CLASSIFICATION	0.9986000594294813	WITHOUT_CLASSIFICATION	0.0013999405705187368	DEFECT
/*<String,String>*/	WITHOUT_CLASSIFICATION	0.9998808062286517	WITHOUT_CLASSIFICATION	1.1919377134827537E-4	DEFECT
//At least one constructor is guaranteed to be there, but check anyway.	WITHOUT_CLASSIFICATION	0.9999994715142939	WITHOUT_CLASSIFICATION	5.284857060688529E-7	DEFECT
// is the zip file in the cache	WITHOUT_CLASSIFICATION	0.9999999045519404	WITHOUT_CLASSIFICATION	9.544805956132521E-8	DEFECT
// store the token just read for next time	WITHOUT_CLASSIFICATION	0.9999948582158777	WITHOUT_CLASSIFICATION	5.141784122196776E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999993109983563	WITHOUT_CLASSIFICATION	6.890016436783456E-7	DEFECT
// add the types of the parent project	WITHOUT_CLASSIFICATION	0.9999695905724355	WITHOUT_CLASSIFICATION	3.0409427564538563E-5	DEFECT
// ignore path elements which are not valid relative to the // project	WITHOUT_CLASSIFICATION	0.9999992500222912	WITHOUT_CLASSIFICATION	7.499777087596293E-7	DEFECT
// Expecting an exception to be thrown by this call: // IllegalArgumentException: wrong number of Arguments	WITHOUT_CLASSIFICATION	0.9871277834392788	WITHOUT_CLASSIFICATION	0.012872216560721276	DEFECT
// we need to search the components of the path to see if we can // find the class we want.	WITHOUT_CLASSIFICATION	0.9999985939740874	WITHOUT_CLASSIFICATION	1.4060259124945973E-6	DEFECT
// default to the global setting and then see // if this class belongs to a package which has been // designated to use a specific loader first // (this one or the parent one)	WITHOUT_CLASSIFICATION	0.9999999992210418	WITHOUT_CLASSIFICATION	7.789581342396854E-10	DEFECT
// we need to search the components of the path to see if // we can find the class we want.	WITHOUT_CLASSIFICATION	0.9999985557633687	WITHOUT_CLASSIFICATION	1.444236631193281E-6	DEFECT
// try and load from this loader if the parent either didn't find // it or wasn't consulted.	WITHOUT_CLASSIFICATION	0.999997720152012	WITHOUT_CLASSIFICATION	2.2798479879730497E-6	DEFECT
// this loader was first but it didn't find it - try the parent	WITHOUT_CLASSIFICATION	0.9999649140643438	WITHOUT_CLASSIFICATION	3.50859356561793E-5	DEFECT
/*<URL>*/	WITHOUT_CLASSIFICATION	0.9997966129140285	WITHOUT_CLASSIFICATION	2.033870859714925E-4	DEFECT
/*<URL>*/	WITHOUT_CLASSIFICATION	0.9997966129140285	WITHOUT_CLASSIFICATION	2.033870859714925E-4	DEFECT
/*<URL>*/	WITHOUT_CLASSIFICATION	0.9997966129140285	WITHOUT_CLASSIFICATION	2.033870859714925E-4	DEFECT
// Delegate to the parent:	WITHOUT_CLASSIFICATION	0.9999982321923689	WITHOUT_CLASSIFICATION	1.7678076309839232E-6	DEFECT
// Note: could cause overlaps in case ClassLoader.this.parent has matches.	WITHOUT_CLASSIFICATION	0.9999996688211639	WITHOUT_CLASSIFICATION	3.3117883604539577E-7	DEFECT
// ClassLoader.this.parent is already delegated to from // ClassLoader.getResources, no need:	WITHOUT_CLASSIFICATION	0.9999999973418463	WITHOUT_CLASSIFICATION	2.6581537114444478E-9	DEFECT
// Normal case.	WITHOUT_CLASSIFICATION	0.9999994880026076	WITHOUT_CLASSIFICATION	5.119973923922548E-7	DEFECT
// Inverted.	WITHOUT_CLASSIFICATION	0.9999971358700958	WITHOUT_CLASSIFICATION	2.8641299042536405E-6	DEFECT
// already defined	WITHOUT_CLASSIFICATION	0.9999999802649567	WITHOUT_CLASSIFICATION	1.9735043267638924E-8	DEFECT
// define the package now	WITHOUT_CLASSIFICATION	0.9999999295222188	WITHOUT_CLASSIFICATION	7.047778112370861E-8	DEFECT
// ioe.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999998255527234	WITHOUT_CLASSIFICATION	1.7444727667179284E-7	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.999993225734014	WITHOUT_CLASSIFICATION	6.774265985996825E-6	DEFECT
// Not significant for the class loader.	WITHOUT_CLASSIFICATION	0.9999994540147241	WITHOUT_CLASSIFICATION	5.45985275882329E-7	DEFECT
// Not significant for the class loader.	WITHOUT_CLASSIFICATION	0.9999994540147241	WITHOUT_CLASSIFICATION	5.45985275882329E-7	DEFECT
// {tasks, types}	WITHOUT_CLASSIFICATION	0.9999982835556331	WITHOUT_CLASSIFICATION	1.7164443667416936E-6	DEFECT
// add the parsed namespaces of the parent project	WITHOUT_CLASSIFICATION	0.9999941940661352	WITHOUT_CLASSIFICATION	5.8059338647096685E-6	DEFECT
// we need to search the components of the path to see if // we can find the class we want.	WITHOUT_CLASSIFICATION	0.9999985557633687	WITHOUT_CLASSIFICATION	1.444236631193281E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999998068383374	WITHOUT_CLASSIFICATION	1.9316166246942935E-7	DEFECT
// don't have to check for public, since // getConstructor finds public constructors only.	WITHOUT_CLASSIFICATION	0.9999998397209214	WITHOUT_CLASSIFICATION	1.6027907853532026E-7	DEFECT
// set default value, can be changed by the user	WITHOUT_CLASSIFICATION	0.9999999911868925	WITHOUT_CLASSIFICATION	8.813107478824685E-9	DEFECT
//too bad	WITHOUT_CLASSIFICATION	0.9999805750644913	WITHOUT_CLASSIFICATION	1.942493550859812E-5	DEFECT
//must have same validity; then if they are valid they must also be the same:	WITHOUT_CLASSIFICATION	0.9999988847748987	WITHOUT_CLASSIFICATION	1.1152251012722606E-6	DEFECT
// namespace that does not contain antlib	WITHOUT_CLASSIFICATION	0.9999990716265489	WITHOUT_CLASSIFICATION	9.283734512201912E-7	DEFECT
// Already processed	WITHOUT_CLASSIFICATION	0.9999998536574465	WITHOUT_CLASSIFICATION	1.4634255363269644E-7	DEFECT
//there to stop error messages being "null"	WITHOUT_CLASSIFICATION	0.9999984868158502	WITHOUT_CLASSIFICATION	1.5131841497475322E-6	DEFECT
//if this is left out, bad things happen. like all build files break //on the first element encountered.	WITHOUT_CLASSIFICATION	0.9975064521665776	WITHOUT_CLASSIFICATION	0.00249354783342239	DEFECT
// a fishing expedition :- ignore errors if antlib not present	WITHOUT_CLASSIFICATION	0.9998780027175844	WITHOUT_CLASSIFICATION	1.2199728241564938E-4	DEFECT
//class of problem	WITHOUT_CLASSIFICATION	0.9999841969320249	WITHOUT_CLASSIFICATION	1.5803067975041934E-5	DEFECT
//running under an IDE that doesn't set ANT_HOME	WITHOUT_CLASSIFICATION	0.9999958613550352	WITHOUT_CLASSIFICATION	4.1386449648995E-6	DEFECT
//look up the name	WITHOUT_CLASSIFICATION	0.9999991797635978	WITHOUT_CLASSIFICATION	8.20236402314778E-7	DEFECT
//we are defined, so it is an instantiation problem	WITHOUT_CLASSIFICATION	0.9999995616117501	WITHOUT_CLASSIFICATION	4.383882499984284E-7	DEFECT
//start with instantiating the class.	WITHOUT_CLASSIFICATION	0.9999846257408755	WITHOUT_CLASSIFICATION	1.5374259124410326E-5	DEFECT
//here we successfully loaded the class or failed.	WITHOUT_CLASSIFICATION	0.99998502321973	WITHOUT_CLASSIFICATION	1.4976780269873075E-5	DEFECT
//success: proceed with more steps	WITHOUT_CLASSIFICATION	0.9999453576526524	WITHOUT_CLASSIFICATION	5.4642347347714884E-5	DEFECT
//hey, there is nothing wrong with us	WITHOUT_CLASSIFICATION	0.9977310363075736	WITHOUT_CLASSIFICATION	0.002268963692426306	DEFECT
/*<Thread,Task>*/	WITHOUT_CLASSIFICATION	0.999992897506947	WITHOUT_CLASSIFICATION	7.102493053096928E-6	DEFECT
/*<ThreadGroup,Task>*/	WITHOUT_CLASSIFICATION	0.9999952832990389	WITHOUT_CLASSIFICATION	4.716700961083642E-6	DEFECT
// If the listeners already has this listener, do nothing	WITHOUT_CLASSIFICATION	0.9999999825107083	WITHOUT_CLASSIFICATION	1.7489291641316926E-8	DEFECT
// we need to build the hashtable dynamically	WITHOUT_CLASSIFICATION	0.9999766700635375	WITHOUT_CLASSIFICATION	2.332993646244937E-5	DEFECT
// sanity check	WITHOUT_CLASSIFICATION	0.9999998148721385	WITHOUT_CLASSIFICATION	1.8512786149119783E-7	DEFECT
//try the current classloader	WITHOUT_CLASSIFICATION	0.9999998302453738	WITHOUT_CLASSIFICATION	1.6975462615661776E-7	DEFECT
// throw further	WITHOUT_CLASSIFICATION	0.9999618889738816	WITHOUT_CLASSIFICATION	3.811102611828122E-5	DEFECT
// only the first build exception is reported	WITHOUT_CLASSIFICATION	0.9999925618179915	WITHOUT_CLASSIFICATION	7.4381820085583355E-6	DEFECT
// Make sure we exist	WITHOUT_CLASSIFICATION	0.9999996522705678	WITHOUT_CLASSIFICATION	3.477294322272049E-7	DEFECT
// Currently visiting this node, so have a cycle	WITHOUT_CLASSIFICATION	0.9999969526822763	WITHOUT_CLASSIFICATION	3.0473177236823147E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999998068383374	WITHOUT_CLASSIFICATION	1.9316166246942935E-7	DEFECT
// create a new Vector to avoid ConcurrentModificationExc when // the listeners get added/removed while we are in fire	WITHOUT_CLASSIFICATION	0.9999999771100442	WITHOUT_CLASSIFICATION	2.2889955844820948E-8	DEFECT
// sanity check ourselves, if we've been asked to build nothing // then we should complain	WITHOUT_CLASSIFICATION	0.9999999964083358	WITHOUT_CLASSIFICATION	3.5916642422211345E-9	DEFECT
// Sort and run the dependency tree. // Sorting checks if all the targets (and dependencies) // exist, and if there is any cycle in the dependency // graph.	WITHOUT_CLASSIFICATION	0.9999999760303816	WITHOUT_CLASSIFICATION	2.3969618385273968E-8	DEFECT
// We first run a DFS based sort using each root as a starting node. // This creates the minimum sequence of Targets to the root node(s). // We then do a sort on any remaining unVISITED targets. // This is unnecessary for doing our build, but it catches // circular dependencies or missing Targets on the entire // dependency tree, not just on the Targets that depend on the // build Target.	WITHOUT_CLASSIFICATION	0.9999999998625737	WITHOUT_CLASSIFICATION	1.3742635277641548E-10	DEFECT
// no warning, this is not changing anything	WITHOUT_CLASSIFICATION	0.9999806113299481	WITHOUT_CLASSIFICATION	1.9388670051938696E-5	DEFECT
// Check for old id behaviour	WITHOUT_CLASSIFICATION	0.9999996318491556	WITHOUT_CLASSIFICATION	3.681508442965633E-7	DEFECT
// Inform IH to clear the cache	WITHOUT_CLASSIFICATION	0.9999995460429849	WITHOUT_CLASSIFICATION	4.5395701515991616E-7	DEFECT
// register this as the current task on the current thread.	WITHOUT_CLASSIFICATION	0.9999975878826254	WITHOUT_CLASSIFICATION	2.412117374682387E-6	DEFECT
// Make sure that	WITHOUT_CLASSIFICATION	0.999999925222728	WITHOUT_CLASSIFICATION	7.477727199972689E-8	DEFECT
// ignore this if the object does not have // a set project method or the method // is private/protected.	WITHOUT_CLASSIFICATION	0.9999992081209105	WITHOUT_CLASSIFICATION	7.918790895640034E-7	DEFECT
//override facility for subclasses to put custom hashtables in	WITHOUT_CLASSIFICATION	0.9999813271364295	WITHOUT_CLASSIFICATION	1.8672863570478775E-5	DEFECT
// --------------------  Hook management  --------------------	WITHOUT_CLASSIFICATION	0.9999817032266125	WITHOUT_CLASSIFICATION	1.8296773387427697E-5	DEFECT
// --------------------  Methods to override  --------------------	WITHOUT_CLASSIFICATION	0.9999948537186091	WITHOUT_CLASSIFICATION	5.1462813908843725E-6	DEFECT
// If next has handled the property	WITHOUT_CLASSIFICATION	0.9999865636258193	WITHOUT_CLASSIFICATION	1.3436374180845896E-5	DEFECT
// try to get it from the project or keys // Backward compatibility	WITHOUT_CLASSIFICATION	0.9999991053773786	WITHOUT_CLASSIFICATION	8.946226215355079E-7	DEFECT
// -------------------- Default implementation  -------------------- // Methods used to support the default behavior and provide backward // compatibility. Some will be deprecated, you should avoid calling them.	WITHOUT_CLASSIFICATION	0.9990665689799286	WITHOUT_CLASSIFICATION	9.334310200714307E-4	DEFECT
// user (CLI) properties take precedence	WITHOUT_CLASSIFICATION	0.9999957773061338	WITHOUT_CLASSIFICATION	4.22269386624709E-6	DEFECT
// -------------------- Getting properties  --------------------	WITHOUT_CLASSIFICATION	0.9999935697664355	WITHOUT_CLASSIFICATION	6.4302335644622065E-6	DEFECT
// -------------------- Property parsing  -------------------- // Moved from ProjectHelper. You can override the static method - // this is used for backward compatibility (for code that calls // the parse method in ProjectHelper).	WITHOUT_CLASSIFICATION	0.9999142803653389	WITHOUT_CLASSIFICATION	8.571963466109057E-5	DEFECT
//search for the next instance of $ from the 'prev' position	WITHOUT_CLASSIFICATION	0.9999977234686072	WITHOUT_CLASSIFICATION	2.2765313928124745E-6	DEFECT
//if we are at the end of the string, we tack on a $ //then move past it	WITHOUT_CLASSIFICATION	0.9999828417922166	WITHOUT_CLASSIFICATION	1.7158207783399065E-5	DEFECT
//peek ahead to see if the next char is a property or not //not a property: insert the char as a literal	WITHOUT_CLASSIFICATION	0.9999289022234441	WITHOUT_CLASSIFICATION	7.109777655589736E-5	DEFECT
//backwards compatibility two $ map to one mode	WITHOUT_CLASSIFICATION	0.9999193663468088	WITHOUT_CLASSIFICATION	8.063365319119988E-5	DEFECT
//new behaviour: $X maps to $X for all values of X!='$'	WITHOUT_CLASSIFICATION	0.9970542078290924	WITHOUT_CLASSIFICATION	0.002945792170907578	DEFECT
//property found, extract its name or bail on a typo	WITHOUT_CLASSIFICATION	0.9998921763236405	WITHOUT_CLASSIFICATION	1.0782367635949524E-4	DEFECT
//no more $ signs found //if there is any tail to the file, append it	WITHOUT_CLASSIFICATION	0.9999815753352165	WITHOUT_CLASSIFICATION	1.842466478347538E-5	DEFECT
//empty	WITHOUT_CLASSIFICATION	0.9999555957800104	WITHOUT_CLASSIFICATION	4.4404219989559545E-5	DEFECT
// The children are added to after this cloning	WITHOUT_CLASSIFICATION	0.9999970475635133	WITHOUT_CLASSIFICATION	2.952436486612415E-6	DEFECT
// Make sure the dependency is not empty string	WITHOUT_CLASSIFICATION	0.9999986575628151	WITHOUT_CLASSIFICATION	1.3424371848386105E-6	DEFECT
// Make sure that depends attribute does not // end in a ,	WITHOUT_CLASSIFICATION	0.9999924355650193	WITHOUT_CLASSIFICATION	7.564434980755206E-6	DEFECT
// A project helper may process multiple files. We'll keep track // of them - to avoid loops and to allow caching. The caching will // probably accelerate things like <antCall>. // The key is the absolute file, the value is a processed tree. // Since the tree is composed of UE and RC - it can be reused ! // protected Hashtable processedFiles=new Hashtable();	WITHOUT_CLASSIFICATION	0.9999997393788891	WITHOUT_CLASSIFICATION	2.606211109370074E-7	DEFECT
//    public Hashtable getProcessedFiles() { //        return processedFiles; //    }	WITHOUT_CLASSIFICATION	0.999999998239245	WITHOUT_CLASSIFICATION	1.7607550025909794E-9	DEFECT
// --------------------  Parse method  --------------------	WITHOUT_CLASSIFICATION	0.9999994898680818	WITHOUT_CLASSIFICATION	5.101319181587437E-7	DEFECT
// Identify the class loader we will be using. Ant may be // in a webapp or embedded in a different app	WITHOUT_CLASSIFICATION	0.9999582151235953	WITHOUT_CLASSIFICATION	4.178487640473595E-5	DEFECT
// First, try the system property	WITHOUT_CLASSIFICATION	0.999995007788228	WITHOUT_CLASSIFICATION	4.992211771918716E-6	DEFECT
// A JDK1.3 'service' ( like in JAXP ). That will plug a helper // automatically if in CLASSPATH, with the right META-INF/services.	WITHOUT_CLASSIFICATION	0.9966787432274226	WITHOUT_CLASSIFICATION	0.0033212567725775183	DEFECT
// This code is needed by EBCDIC and other strange systems. // It's a fix for bugs reported in xerces	WITHOUT_CLASSIFICATION	0.993367029161466	WITHOUT_CLASSIFICATION	0.006632970838533944	DEFECT
// try next method	WITHOUT_CLASSIFICATION	0.9999931060527216	WITHOUT_CLASSIFICATION	6.893947278379604E-6	DEFECT
// -------------------- Static utils, used by most helpers ----------------	WITHOUT_CLASSIFICATION	0.9999999330168191	WITHOUT_CLASSIFICATION	6.698318087486132E-8	DEFECT
// reflect these into the target	WITHOUT_CLASSIFICATION	0.9999999730476287	WITHOUT_CLASSIFICATION	2.6952371350839744E-8	DEFECT
// id attribute must be set externally	WITHOUT_CLASSIFICATION	0.9999985614433528	WITHOUT_CLASSIFICATION	1.4385566471469618E-6	DEFECT
// needed since project properties are not accessible	WITHOUT_CLASSIFICATION	0.999988411813948	WITHOUT_CLASSIFICATION	1.1588186052040507E-5	DEFECT
/*<UnknownElement>*/	WITHOUT_CLASSIFICATION	0.999743951210418	WITHOUT_CLASSIFICATION	2.56048789581892E-4	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999993109983563	WITHOUT_CLASSIFICATION	6.890016436783456E-7	DEFECT
/*<String,String>*/	WITHOUT_CLASSIFICATION	0.9998808062286517	WITHOUT_CLASSIFICATION	1.1919377134827537E-4	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.999993225734014	WITHOUT_CLASSIFICATION	6.774265985996825E-6	DEFECT
// reflect these into the target	WITHOUT_CLASSIFICATION	0.9999999730476287	WITHOUT_CLASSIFICATION	2.6952371350839744E-8	DEFECT
// id attribute must be set externally	WITHOUT_CLASSIFICATION	0.9999985614433528	WITHOUT_CLASSIFICATION	1.4385566471469618E-6	DEFECT
// Attributes	WITHOUT_CLASSIFICATION	0.9999992203650651	WITHOUT_CLASSIFICATION	7.79634935004556E-7	DEFECT
// configure attributes of the object and it's children. If it is // a task container, defer the configuration till the task container // attempts to use the task	WITHOUT_CLASSIFICATION	0.9999990968025656	WITHOUT_CLASSIFICATION	9.031974343690796E-7	DEFECT
// plain impossible to get here, maybeConfigure should // have thrown an exception.	WITHOUT_CLASSIFICATION	0.9999968254017759	WITHOUT_CLASSIFICATION	3.174598224021888E-6	DEFECT
// Finished executing the task, null it to allow // GC do its job // If this UE is used again, a new "realthing" will be made	WITHOUT_CLASSIFICATION	0.9999998461179774	WITHOUT_CLASSIFICATION	1.5388202253454865E-7	DEFECT
// Do the runtime	WITHOUT_CLASSIFICATION	0.9999986793732532	WITHOUT_CLASSIFICATION	1.320626746827425E-6	DEFECT
// UnknownElement always has an associated target	WITHOUT_CLASSIFICATION	0.9999999009327156	WITHOUT_CLASSIFICATION	9.906728433209712E-8	DEFECT
//return elementName;	WITHOUT_CLASSIFICATION	0.9999998624397582	WITHOUT_CLASSIFICATION	1.375602418019584E-7	DEFECT
// Are the names the same ?	WITHOUT_CLASSIFICATION	0.9999994377575955	WITHOUT_CLASSIFICATION	5.622424045207467E-7	DEFECT
// Are attributes the same ?	WITHOUT_CLASSIFICATION	0.9999992328593297	WITHOUT_CLASSIFICATION	7.671406703289542E-7	DEFECT
// Are the sub elements the same ?	WITHOUT_CLASSIFICATION	0.9999996185467893	WITHOUT_CLASSIFICATION	3.8145321058201186E-7	DEFECT
// hidden constructor	WITHOUT_CLASSIFICATION	0.9999998985589327	WITHOUT_CLASSIFICATION	1.0144106738081057E-7	DEFECT
//create the file	WITHOUT_CLASSIFICATION	0.9999998603445981	WITHOUT_CLASSIFICATION	1.3965540177826514E-7	DEFECT
//do some writing to it	WITHOUT_CLASSIFICATION	0.9999957729742069	WITHOUT_CLASSIFICATION	4.227025793168176E-6	DEFECT
//calendar stuff.	WITHOUT_CLASSIFICATION	0.9999980981071752	WITHOUT_CLASSIFICATION	1.9018928248263837E-6	DEFECT
//not included, do nothing	WITHOUT_CLASSIFICATION	0.9999940159515754	WITHOUT_CLASSIFICATION	5.984048424617654E-6	DEFECT
// not included, to nothing	WITHOUT_CLASSIFICATION	0.9999930969962469	WITHOUT_CLASSIFICATION	6.9030037530696805E-6	DEFECT
/*<RuntimeConfigurable>*/	WITHOUT_CLASSIFICATION	0.999996763955479	WITHOUT_CLASSIFICATION	3.2360445209696606E-6	DEFECT
/*<String>*/	WITHOUT_CLASSIFICATION	0.9998422414064393	WITHOUT_CLASSIFICATION	1.5775859356063055E-4	DEFECT
// Configure the object	WITHOUT_CLASSIFICATION	0.999999677404505	WITHOUT_CLASSIFICATION	3.2259549495920176E-7	DEFECT
// Most likely an UnknownElement	WITHOUT_CLASSIFICATION	0.9999918176945203	WITHOUT_CLASSIFICATION	8.182305479651864E-6	DEFECT
// Children (this is a shadow of UnknownElement#children)	WITHOUT_CLASSIFICATION	0.9999761783571618	WITHOUT_CLASSIFICATION	2.3821642838306933E-5	DEFECT
// poly type	WITHOUT_CLASSIFICATION	0.9999900751856908	WITHOUT_CLASSIFICATION	9.924814309256627E-6	DEFECT
// Text	WITHOUT_CLASSIFICATION	0.9999874704567817	WITHOUT_CLASSIFICATION	1.2529543218165543E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999554955215	WITHOUT_CLASSIFICATION	4.4504478498603726E-7	DEFECT
// store the token just read for next time	WITHOUT_CLASSIFICATION	0.9999948582158777	WITHOUT_CLASSIFICATION	5.141784122196776E-6	DEFECT
// a task container - anything could happen - just add the // child to the container	WITHOUT_CLASSIFICATION	0.999996254048661	WITHOUT_CLASSIFICATION	3.745951339061978E-6	DEFECT
// Is the text the same? //   Need to use equals on the string and not //   on the stringbuffer as equals on the string buffer //   does not compare the contents.	WITHOUT_CLASSIFICATION	0.9999787687837438	WITHOUT_CLASSIFICATION	2.1231216256266252E-5	DEFECT
// Assume that this is an not supported attribute type // thrown for example by a dymanic attribute task // Do nothing	WITHOUT_CLASSIFICATION	0.9957097509332328	WITHOUT_CLASSIFICATION	0.0042902490667672925	DEFECT
// on Windows and Unix, we can ignore delimiters and still have // enough information to tokenize correctly.	WITHOUT_CLASSIFICATION	0.9902812112561169	WITHOUT_CLASSIFICATION	0.009718788743883195	DEFECT
// we are on a dos style system so this path could be a drive // spec. We look at the next token	WITHOUT_CLASSIFICATION	0.9998233350661693	WITHOUT_CLASSIFICATION	1.7666493383079214E-4	DEFECT
// we know we are on a DOS style platform and the next path // starts with a slash or backslash, so we know this is a // drive spec	WITHOUT_CLASSIFICATION	0.9999062760113387	WITHOUT_CLASSIFICATION	9.372398866119342E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999998068383374	WITHOUT_CLASSIFICATION	1.9316166246942935E-7	DEFECT
// ignore ";" and get the next token	WITHOUT_CLASSIFICATION	0.9999751092870633	WITHOUT_CLASSIFICATION	2.489071293669589E-5	DEFECT
// this path could be a drive spec, so look at the next token	WITHOUT_CLASSIFICATION	0.9997122997489816	WITHOUT_CLASSIFICATION	2.877002510183564E-4	DEFECT
// it indeed is a drive spec, get the next bit	WITHOUT_CLASSIFICATION	0.999991260365835	WITHOUT_CLASSIFICATION	8.739634165097553E-6	DEFECT
// implicit else: ignore the ':' since we have either a // UNIX or a relative path	WITHOUT_CLASSIFICATION	0.9999993680255359	WITHOUT_CLASSIFICATION	6.319744640744757E-7	DEFECT
// Miscellaneous typical temporary files	WITHOUT_CLASSIFICATION	0.9999998983139998	WITHOUT_CLASSIFICATION	1.0168600009457544E-7	DEFECT
// CVS	WITHOUT_CLASSIFICATION	0.9999918145121208	WITHOUT_CLASSIFICATION	8.185487879207568E-6	DEFECT
// SCCS	WITHOUT_CLASSIFICATION	0.999992084388604	WITHOUT_CLASSIFICATION	7.91561139607175E-6	DEFECT
// Visual SourceSafe	WITHOUT_CLASSIFICATION	0.9999996962579113	WITHOUT_CLASSIFICATION	3.0374208866004216E-7	DEFECT
// Subversion	WITHOUT_CLASSIFICATION	0.9999994585591122	WITHOUT_CLASSIFICATION	5.414408878720107E-7	DEFECT
// set in/excludes to reasonable defaults if needed:	WITHOUT_CLASSIFICATION	0.9999997488290654	WITHOUT_CLASSIFICATION	2.5117093462030535E-7	DEFECT
// if no basedir and no includes, nothing to do:	WITHOUT_CLASSIFICATION	0.9999999572375046	WITHOUT_CLASSIFICATION	4.276249545679061E-8	DEFECT
//skip abs. paths not under basedir, if set:	WITHOUT_CLASSIFICATION	0.9999924776076743	WITHOUT_CLASSIFICATION	7.522392325720264E-6	DEFECT
//skip non-abs. paths if basedir == null:	WITHOUT_CLASSIFICATION	0.9999986969816143	WITHOUT_CLASSIFICATION	1.303018385687698E-6	DEFECT
// we are going to scan everything anyway	WITHOUT_CLASSIFICATION	0.9999922453350826	WITHOUT_CLASSIFICATION	7.754664917375905E-6	DEFECT
// Empty	WITHOUT_CLASSIFICATION	0.9999841565209235	WITHOUT_CLASSIFICATION	1.5843479076393726E-5	DEFECT
// will be caught and redirected to Ant's logging system	WITHOUT_CLASSIFICATION	0.9999796005996445	WITHOUT_CLASSIFICATION	2.039940035549659E-5	DEFECT
// will be caught and redirected to Ant's logging system	WITHOUT_CLASSIFICATION	0.9999796005996445	WITHOUT_CLASSIFICATION	2.039940035549659E-5	DEFECT
//removing base from path yields no change; path not child of base	WITHOUT_CLASSIFICATION	0.9999980216147807	WITHOUT_CLASSIFICATION	1.9783852193587725E-6	DEFECT
/* package-private */	WITHOUT_CLASSIFICATION	0.9999995369489462	WITHOUT_CLASSIFICATION	4.6305105382577116E-7	DEFECT
// do the "singleton" initialization	WITHOUT_CLASSIFICATION	0.9999986173749993	WITHOUT_CLASSIFICATION	1.3826250006879E-6	DEFECT
// Add the explicit resource collections to the archive.	WITHOUT_CLASSIFICATION	0.9999959066529307	WITHOUT_CLASSIFICATION	4.093347069318348E-6	DEFECT
// EOL was "\r\n"	WITHOUT_CLASSIFICATION	0.9999977150848206	WITHOUT_CLASSIFICATION	2.284915179456171E-6	DEFECT
// don't have to check for interface, since then // taskClass would be abstract too.	WITHOUT_CLASSIFICATION	0.999999072325884	WITHOUT_CLASSIFICATION	9.276741160703178E-7	DEFECT
// ignore this if the class being used as a task does not have // a set location method.	WITHOUT_CLASSIFICATION	0.9999965743760223	WITHOUT_CLASSIFICATION	3.425623977810837E-6	DEFECT
// ignore this if the class being used as a task does not have // a set project method.	WITHOUT_CLASSIFICATION	0.9999944260209561	WITHOUT_CLASSIFICATION	5.573979043935914E-6	DEFECT
// put in the newroots map the include patterns without // wildcard tokens	WITHOUT_CLASSIFICATION	0.9996098487245798	WITHOUT_CLASSIFICATION	3.9015127542023234E-4	DEFECT
// only scan directories that can include matched files or // directories	WITHOUT_CLASSIFICATION	0.9999976785931189	WITHOUT_CLASSIFICATION	2.3214068810363553E-6	DEFECT
// may be on a case insensitive file system.  We want // the results to show what's really on the disk, so // we need to double check.	WITHOUT_CLASSIFICATION	0.9999995990931573	WITHOUT_CLASSIFICATION	4.009068426889632E-7	DEFECT
// adapt currentelement to the case we've // actually found	WITHOUT_CLASSIFICATION	0.9999995995865117	WITHOUT_CLASSIFICATION	4.004134882258696E-7	DEFECT
// I am the only one so I have to close the reader	WITHOUT_CLASSIFICATION	0.9999987793742499	WITHOUT_CLASSIFICATION	1.220625750106678E-6	DEFECT
// I am the only one so I have to close the reader	WITHOUT_CLASSIFICATION	0.9999987793742499	WITHOUT_CLASSIFICATION	1.220625750106678E-6	DEFECT
// get parameters	WITHOUT_CLASSIFICATION	0.9999995386066064	WITHOUT_CLASSIFICATION	4.6139339363976817E-7	DEFECT
// Calculate the EOL string per the current config	WITHOUT_CLASSIFICATION	0.999999933712706	WITHOUT_CLASSIFICATION	6.628729398842867E-8	DEFECT
// assume (eol == CrLf.LF || eol == CrLf.UNIX)	WITHOUT_CLASSIFICATION	0.999999582874645	WITHOUT_CLASSIFICATION	4.171253549666938E-7	DEFECT
// Add/Remove tabs	WITHOUT_CLASSIFICATION	0.9999989941182345	WITHOUT_CLASSIFICATION	1.0058817655932022E-6	DEFECT
// Add missing EOF character	WITHOUT_CLASSIFICATION	0.9999999735981329	WITHOUT_CLASSIFICATION	2.6401867161397897E-8	DEFECT
// Mask, block from being edited, all characters in constants.	WITHOUT_CLASSIFICATION	0.9999999752111607	WITHOUT_CLASSIFICATION	2.4788839243192903E-8	DEFECT
// The current character is always emitted.	WITHOUT_CLASSIFICATION	0.9999994105761496	WITHOUT_CLASSIFICATION	5.894238503640162E-7	DEFECT
// Fall tru	WITHOUT_CLASSIFICATION	0.9999974474633191	WITHOUT_CLASSIFICATION	2.5525366808358045E-6	DEFECT
// Fall tru	WITHOUT_CLASSIFICATION	0.9999974474633191	WITHOUT_CLASSIFICATION	2.5525366808358045E-6	DEFECT
// Fall tru	WITHOUT_CLASSIFICATION	0.9999974474633191	WITHOUT_CLASSIFICATION	2.5525366808358045E-6	DEFECT
// Fall tru	WITHOUT_CLASSIFICATION	0.9999974474633191	WITHOUT_CLASSIFICATION	2.5525366808358045E-6	DEFECT
// Fall tru	WITHOUT_CLASSIFICATION	0.9999974474633191	WITHOUT_CLASSIFICATION	2.5525366808358045E-6	DEFECT
// EOL	WITHOUT_CLASSIFICATION	0.9999774455405289	WITHOUT_CLASSIFICATION	2.2554459471036706E-5	DEFECT
// EOL was "\n"	WITHOUT_CLASSIFICATION	0.9999972021916075	WITHOUT_CLASSIFICATION	2.797808392463116E-6	DEFECT
// EOL was "\r\r\n"	WITHOUT_CLASSIFICATION	0.9999977153376151	WITHOUT_CLASSIFICATION	2.284662384914212E-6	DEFECT
// EOL was "\r"	WITHOUT_CLASSIFICATION	0.9999975613393657	WITHOUT_CLASSIFICATION	2.4386606343379663E-6	DEFECT
// If source at EOF and lookAhead is ctrl-z, return EOF (NOT ctrl-z)	WITHOUT_CLASSIFICATION	0.9999907910317866	WITHOUT_CLASSIFICATION	9.208968213348079E-6	DEFECT
// if source is EOF but last character was NOT ctrl-z, return ctrl-z	WITHOUT_CLASSIFICATION	0.9999999922646295	WITHOUT_CLASSIFICATION	7.735370524807712E-9	DEFECT
// Return current look-ahead	WITHOUT_CLASSIFICATION	0.9999958622735262	WITHOUT_CLASSIFICATION	4.137726473748669E-6	DEFECT
// EOL was "\r\r" - handle as two consecutive "\r" and // "\r"	WITHOUT_CLASSIFICATION	0.999999471652041	WITHOUT_CLASSIFICATION	5.28347959027712E-7	DEFECT
// Instance initializer: Executes just after the super() call in this // class's constructor.	WITHOUT_CLASSIFICATION	0.9999990785357473	WITHOUT_CLASSIFICATION	9.214642525492398E-7	DEFECT
// Return copy so that the call must call setEof() to change the state // of fixCRLF	WITHOUT_CLASSIFICATION	0.9999998882764224	WITHOUT_CLASSIFICATION	1.1172357761242695E-7	DEFECT
// Return copy so that the call must call setEol() to change the state // of fixCRLF	WITHOUT_CLASSIFICATION	0.9999998913351237	WITHOUT_CLASSIFICATION	1.0866487633500886E-7	DEFECT
// Return copy so that the caller must call setTab() to change the state // of fixCRLF.	WITHOUT_CLASSIFICATION	0.9999999742401771	WITHOUT_CLASSIFICATION	2.5759822999862278E-8	DEFECT
// If I'm removing an EOF character, do so first so that the other // filters don't see that character.	WITHOUT_CLASSIFICATION	0.9999999917099117	WITHOUT_CLASSIFICATION	8.2900883237733E-9	DEFECT
// Change all EOL characters to match the calculated EOL string. If // configured to do so, append a trailing EOL so that the file ends on // a EOL.	WITHOUT_CLASSIFICATION	0.9999999607620368	WITHOUT_CLASSIFICATION	3.923796319340256E-8	DEFECT
// If filtering Java source, prevent changes to whitespace in // character and string literals.	WITHOUT_CLASSIFICATION	0.9999999801958881	WITHOUT_CLASSIFICATION	1.9804111883101895E-8	DEFECT
// Works like clone() but doesn't show up in the Javadocs	WITHOUT_CLASSIFICATION	0.9999577406901934	WITHOUT_CLASSIFICATION	4.225930980657207E-5	DEFECT
// getConstants is a static method, no need to // pass in the object	WITHOUT_CLASSIFICATION	0.9999996305016727	WITHOUT_CLASSIFICATION	3.6949832733783304E-7	DEFECT
//this field will hold unnnn right after reading a non latin character //afterwards it will be truncated of one char every call to read	WITHOUT_CLASSIFICATION	0.9999689774566155	WITHOUT_CLASSIFICATION	3.1022543384599776E-5	DEFECT
//replace the last 0s by the chars contained in s	WITHOUT_CLASSIFICATION	0.9999995814372455	WITHOUT_CLASSIFICATION	4.1856275450501507E-7	DEFECT
// line started with comment	WITHOUT_CLASSIFICATION	0.9999986762805442	WITHOUT_CLASSIFICATION	1.323719455822864E-6	DEFECT
// ----------------------------------------- //  Predefined tokenizers // -----------------------------------------	WITHOUT_CLASSIFICATION	0.9999848444480655	WITHOUT_CLASSIFICATION	1.515555193458403E-5	DEFECT
// write everything up to the from	WITHOUT_CLASSIFICATION	0.9999977867169426	WITHOUT_CLASSIFICATION	2.2132830573631437E-6	DEFECT
// write the replacement to	WITHOUT_CLASSIFICATION	0.9999997547218998	WITHOUT_CLASSIFICATION	2.452781001065033E-7	DEFECT
// search again	WITHOUT_CLASSIFICATION	0.99999994414611	WITHOUT_CLASSIFICATION	5.585388992505837E-8	DEFECT
// write the remaining characters	WITHOUT_CLASSIFICATION	0.9999999774284408	WITHOUT_CLASSIFICATION	2.2571559207497026E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999998068383374	WITHOUT_CLASSIFICATION	1.9316166246942935E-7	DEFECT
// -------------------------------------------- // //      Tokenizer Classes (impls moved to oata.util) // // --------------------------------------------	WITHOUT_CLASSIFICATION	0.9999741565513007	WITHOUT_CLASSIFICATION	2.5843448699263E-5	DEFECT
// -------------------------------------------------------- //  static utility methods - could be placed somewhere else // --------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999998825259406	WITHOUT_CLASSIFICATION	1.1747405933648319E-7	DEFECT
//Remove start and end quotes if field is a String	WITHOUT_CLASSIFICATION	0.999965835590985	WITHOUT_CLASSIFICATION	3.416440901515507E-5	DEFECT
// default buffer size	WITHOUT_CLASSIFICATION	0.999999705092166	WITHOUT_CLASSIFICATION	2.9490783406842847E-7	DEFECT
/* Stateless */	WITHOUT_CLASSIFICATION	0.9999995557631387	WITHOUT_CLASSIFICATION	4.442368613213709E-7	DEFECT
// singletons - since all state is in the context	WITHOUT_CLASSIFICATION	0.999989960638027	WITHOUT_CLASSIFICATION	1.003936197297244E-5	DEFECT
// we are in an imported file.	WITHOUT_CLASSIFICATION	0.9999999254356703	WITHOUT_CLASSIFICATION	7.456432966490054E-8	DEFECT
// top level file	WITHOUT_CLASSIFICATION	0.9999996835636896	WITHOUT_CLASSIFICATION	3.164363103649169E-7	DEFECT
// ?? OK ??	WITHOUT_CLASSIFICATION	0.9999979765198959	WITHOUT_CLASSIFICATION	2.023480104168918E-6	DEFECT
// use default if not file or file not found	WITHOUT_CLASSIFICATION	0.9999999485158692	WITHOUT_CLASSIFICATION	5.148413076963429E-8	DEFECT
// Set the location of the implicit target associated with the project tag	WITHOUT_CLASSIFICATION	0.9999999230322242	WITHOUT_CLASSIFICATION	7.696777580817152E-8	DEFECT
// Ignore attributes from unknown uris	WITHOUT_CLASSIFICATION	0.9999971557500897	WITHOUT_CLASSIFICATION	2.8442499102944657E-6	DEFECT
// Ignore attributes from unknown uris	WITHOUT_CLASSIFICATION	0.9999971557500897	WITHOUT_CLASSIFICATION	2.8442499102944657E-6	DEFECT
// What's the difference between id and name ?	WITHOUT_CLASSIFICATION	0.9999998919431125	WITHOUT_CLASSIFICATION	1.0805688757183148E-7	DEFECT
// no further processing	WITHOUT_CLASSIFICATION	0.9999999886371335	WITHOUT_CLASSIFICATION	1.136286658914279E-8	DEFECT
// set explicitly before starting ?	WITHOUT_CLASSIFICATION	0.9999997032154881	WITHOUT_CLASSIFICATION	2.9678451175995615E-7	DEFECT
// Default for baseDir is the location of the build file.	WITHOUT_CLASSIFICATION	0.999999914676582	WITHOUT_CLASSIFICATION	8.532341797336176E-8	DEFECT
// check whether the user has specified an absolute path	WITHOUT_CLASSIFICATION	0.9999999393742227	WITHOUT_CLASSIFICATION	6.062577729452062E-8	DEFECT
// Check if this target is in the current build file	WITHOUT_CLASSIFICATION	0.9999999728232931	WITHOUT_CLASSIFICATION	2.7176706922803325E-8	DEFECT
// If the name has not already been defined define it	WITHOUT_CLASSIFICATION	0.9999991895315665	WITHOUT_CLASSIFICATION	8.104684334795654E-7	DEFECT
// In an impored file (and not completely // ignoring the project tag)	WITHOUT_CLASSIFICATION	0.9999617258438611	WITHOUT_CLASSIFICATION	3.8274156138859905E-5	DEFECT
/* UnknownElement is used for tasks and data types - with               delayed eval */	WITHOUT_CLASSIFICATION	0.9999988190203579	WITHOUT_CLASSIFICATION	1.1809796420718083E-6	DEFECT
// Nested element	WITHOUT_CLASSIFICATION	0.9999997999965143	WITHOUT_CLASSIFICATION	2.0000348561981295E-7	DEFECT
// Task included in a target ( including the default one ).	WITHOUT_CLASSIFICATION	0.9999999982997908	WITHOUT_CLASSIFICATION	1.7002091438630422E-9	DEFECT
// container.addTask(task); // This is a nop in UE: task.init();	WITHOUT_CLASSIFICATION	0.9999922964036605	WITHOUT_CLASSIFICATION	7.703596339525555E-6	DEFECT
// **   simple name specified   == path in list + name	WITHOUT_CLASSIFICATION	0.9999999949731506	WITHOUT_CLASSIFICATION	5.026849398694927E-9	DEFECT
// if the suffix does not starts with a '.' and the // char preceding the suffix is a '.', we assume the user // wants to remove the '.' as well (see docs)	WITHOUT_CLASSIFICATION	0.9999854293382661	WITHOUT_CLASSIFICATION	1.4570661733804018E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999554955215	WITHOUT_CLASSIFICATION	4.4504478498603726E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999554955215	WITHOUT_CLASSIFICATION	4.4504478498603726E-7	DEFECT
// use default if not file or file not found	WITHOUT_CLASSIFICATION	0.9999999485158692	WITHOUT_CLASSIFICATION	5.148413076963429E-8	DEFECT
// check whether the user has specified an absolute path	WITHOUT_CLASSIFICATION	0.9999999393742227	WITHOUT_CLASSIFICATION	6.062577729452062E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999998068383374	WITHOUT_CLASSIFICATION	1.9316166246942935E-7	DEFECT
// Start handling SAX events	WITHOUT_CLASSIFICATION	0.9999998743564283	WITHOUT_CLASSIFICATION	1.2564357164128416E-7	DEFECT
// Let parent resume handling SAX events	WITHOUT_CLASSIFICATION	0.9999986479942083	WITHOUT_CLASSIFICATION	1.3520057916917782E-6	DEFECT
// implicit target must be first on dependency list	WITHOUT_CLASSIFICATION	0.999999993561358	WITHOUT_CLASSIFICATION	6.43864192232777E-9	DEFECT
// take care of dependencies	WITHOUT_CLASSIFICATION	0.9999987303371671	WITHOUT_CLASSIFICATION	1.2696628328134872E-6	DEFECT
// swallow here, will be thrown again in // UnknownElement.maybeConfigure if the problem persists.	WITHOUT_CLASSIFICATION	0.9999982074836483	WITHOUT_CLASSIFICATION	1.7925163516266628E-6	DEFECT
//XXX task.setTaskType(tag);	WITHOUT_CLASSIFICATION	0.9999922819435393	WITHOUT_CLASSIFICATION	7.718056460677238E-6	DEFECT
// task can contain other tasks - no other nested elements possible	WITHOUT_CLASSIFICATION	0.9999999134882162	WITHOUT_CLASSIFICATION	8.651178379633852E-8	DEFECT
// taskcontainer nested element can contain other tasks - no other // nested elements possible	WITHOUT_CLASSIFICATION	0.9999999506670901	WITHOUT_CLASSIFICATION	4.933290990151688E-8	DEFECT
// Should not happen	WITHOUT_CLASSIFICATION	0.9999320085539106	WITHOUT_CLASSIFICATION	6.799144608927307E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999990601516184	WITHOUT_CLASSIFICATION	9.398483815699614E-7	DEFECT
// the first hex character if a character needs to be escaped	WITHOUT_CLASSIFICATION	0.9999992823032381	WITHOUT_CLASSIFICATION	7.17696761860971E-7	DEFECT
// the second hex character if a character needs to be escaped	WITHOUT_CLASSIFICATION	0.9999291164051648	WITHOUT_CLASSIFICATION	7.088359483511819E-5	DEFECT
// initialize the above 3 arrays	WITHOUT_CLASSIFICATION	0.9999999791409464	WITHOUT_CLASSIFICATION	2.0859053564382482E-8	DEFECT
// #8031: first try Java 1.4.	WITHOUT_CLASSIFICATION	0.9999990868025039	WITHOUT_CLASSIFICATION	9.131974960330871E-7	DEFECT
// Fine, Java 1.3 or earlier, do it by hand.	WITHOUT_CLASSIFICATION	0.9999991634010937	WITHOUT_CLASSIFICATION	8.365989063270211E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999998068383374	WITHOUT_CLASSIFICATION	1.9316166246942935E-7	DEFECT
// Bad URI, pass this on.	WITHOUT_CLASSIFICATION	0.9999394872821331	WITHOUT_CLASSIFICATION	6.051271786689797E-5	DEFECT
// Unexpected target exception? Should not happen.	WITHOUT_CLASSIFICATION	0.9999986008889582	WITHOUT_CLASSIFICATION	1.3991110417917859E-6	DEFECT
// Reflection problems? Should not happen, debug.	WITHOUT_CLASSIFICATION	0.9926452205847156	WITHOUT_CLASSIFICATION	0.007354779415284474	DEFECT
// Fallback method for Java 1.3 or earlier.	WITHOUT_CLASSIFICATION	0.9999996952187771	WITHOUT_CLASSIFICATION	3.047812229544912E-7	DEFECT
// Ignore malformed exception	WITHOUT_CLASSIFICATION	0.9999997443361309	WITHOUT_CLASSIFICATION	2.5566386905749883E-7	DEFECT
// if it's not an ASCII character, break here, and use UTF-8 encoding	WITHOUT_CLASSIFICATION	0.9999973537280804	WITHOUT_CLASSIFICATION	2.646271919613838E-6	DEFECT
// record the fact that it's escaped	WITHOUT_CLASSIFICATION	0.9999986953425294	WITHOUT_CLASSIFICATION	1.3046574706880278E-6	DEFECT
// we saw some non-ascii character	WITHOUT_CLASSIFICATION	0.9999999910145123	WITHOUT_CLASSIFICATION	8.985487705160289E-9	DEFECT
// get UTF-8 bytes for the remaining sub-string	WITHOUT_CLASSIFICATION	0.9999999471470197	WITHOUT_CLASSIFICATION	5.285298036758354E-8	DEFECT
// for each byte	WITHOUT_CLASSIFICATION	0.9999988241708236	WITHOUT_CLASSIFICATION	1.1758291764019447E-6	DEFECT
// for non-ascii character: make it positive, then escape	WITHOUT_CLASSIFICATION	0.9999903575097233	WITHOUT_CLASSIFICATION	9.642490276688678E-6	DEFECT
// firstly check if the tools jar is already in the classpath	WITHOUT_CLASSIFICATION	0.9999999925884293	WITHOUT_CLASSIFICATION	7.411570727220892E-9	DEFECT
// just check whether this throws an exception	WITHOUT_CLASSIFICATION	0.999999964053966	WITHOUT_CLASSIFICATION	3.594603403524303E-8	DEFECT
// couldn't find compiler - try to find tools.jar // based on java.home setting	WITHOUT_CLASSIFICATION	0.9999987271791467	WITHOUT_CLASSIFICATION	1.2728208532456714E-6	DEFECT
// Found in java.home as given	WITHOUT_CLASSIFICATION	0.9999995117495534	WITHOUT_CLASSIFICATION	4.882504467313264E-7	DEFECT
// add any jars in the directory	WITHOUT_CLASSIFICATION	0.9999900305504622	WITHOUT_CLASSIFICATION	9.969449537743104E-6	DEFECT
// now update the class.path property	WITHOUT_CLASSIFICATION	0.999997474904182	WITHOUT_CLASSIFICATION	2.5250958179875563E-6	DEFECT
// overlay specified properties file (if any), which overrides project // settings	WITHOUT_CLASSIFICATION	0.9999999695517634	WITHOUT_CLASSIFICATION	3.0448236549599483E-8	DEFECT
// ignore because properties file is not required	WITHOUT_CLASSIFICATION	0.9999892584402081	WITHOUT_CLASSIFICATION	1.0741559791793506E-5	DEFECT
// private static final int ATTR_NORMAL = 0; // private static final int ATTR_BRIGHT = 1;	WITHOUT_CLASSIFICATION	0.9999999640467521	WITHOUT_CLASSIFICATION	3.595324791666744E-8	DEFECT
// private static final int ATTR_UNDERLINE = 3; // private static final int ATTR_BLINK = 5; // private static final int ATTR_REVERSE = 7; // private static final int ATTR_HIDDEN = 8;	WITHOUT_CLASSIFICATION	0.9999999043509424	WITHOUT_CLASSIFICATION	9.564905749107939E-8	DEFECT
// private static final int FG_BLACK = 30;	WITHOUT_CLASSIFICATION	0.9999998955531125	WITHOUT_CLASSIFICATION	1.0444688749326275E-7	DEFECT
// private static final int FG_YELLOW = 33;	WITHOUT_CLASSIFICATION	0.9999999341128363	WITHOUT_CLASSIFICATION	6.588716377411765E-8	DEFECT
// private static final int FG_WHITE = 37;	WITHOUT_CLASSIFICATION	0.9999999360418735	WITHOUT_CLASSIFICATION	6.39581264247935E-8	DEFECT
//Ignore - we will use the defaults.	WITHOUT_CLASSIFICATION	0.9999998858298514	WITHOUT_CLASSIFICATION	1.1417014858226464E-7	DEFECT
//Ignore - We do not want this to stop the build.	WITHOUT_CLASSIFICATION	0.9999465476695165	WITHOUT_CLASSIFICATION	5.345233048345956E-5	DEFECT
// Fall through	WITHOUT_CLASSIFICATION	0.9999764767209439	WITHOUT_CLASSIFICATION	2.3523279056098617E-5	DEFECT
// Whether or not an actual update is required - // we don't need to update if the original file doesn't exist	WITHOUT_CLASSIFICATION	0.9895521916129784	WITHOUT_CLASSIFICATION	0.010447808387021706	DEFECT
// Use the logger config	WITHOUT_CLASSIFICATION	0.9999998391167159	WITHOUT_CLASSIFICATION	1.6088328426298303E-7	DEFECT
// Since task log category includes target, we don't really // need this message	WITHOUT_CLASSIFICATION	0.9999999297119861	WITHOUT_CLASSIFICATION	7.028801384835816E-8	DEFECT
// Driver doesn't understand the URL	WITHOUT_CLASSIFICATION	0.9999989305538697	WITHOUT_CLASSIFICATION	1.0694461302747495E-6	DEFECT
// It's a task - append the target	WITHOUT_CLASSIFICATION	0.9999998776352195	WITHOUT_CLASSIFICATION	1.2236478049943577E-7	DEFECT
// finally, lets execute the compiler!!	WITHOUT_CLASSIFICATION	0.9999699776456452	WITHOUT_CLASSIFICATION	3.002235435474737E-5	DEFECT
// Doesn't make sense for c-l. Use the logger config	WITHOUT_CLASSIFICATION	0.9999930060567912	WITHOUT_CLASSIFICATION	6.993943208682149E-6	DEFECT
// Could not get the required information	WITHOUT_CLASSIFICATION	0.9998134076885806	WITHOUT_CLASSIFICATION	1.865923114193732E-4	DEFECT
// Create a ZipFileSet for this file, and pass it up.	WITHOUT_CLASSIFICATION	0.9999987699591685	WITHOUT_CLASSIFICATION	1.2300408315838658E-6	DEFECT
// now we need to populate the compiler adapter	WITHOUT_CLASSIFICATION	0.9999986573997032	WITHOUT_CLASSIFICATION	1.3426002967444053E-6	DEFECT
// If no webxml file is specified, it's an error.	WITHOUT_CLASSIFICATION	0.9999999314751614	WITHOUT_CLASSIFICATION	6.852483858770355E-8	DEFECT
// One cannot RMIC an interface for "classic" RMI (JRMP)	WITHOUT_CLASSIFICATION	0.9999878043095343	WITHOUT_CLASSIFICATION	1.2195690465652123E-5	DEFECT
// otherwise perform a timestamp comparison - at least	WITHOUT_CLASSIFICATION	0.9999995605208125	WITHOUT_CLASSIFICATION	4.394791874755862E-7	DEFECT
// don't know how to handle that - a IDL file doesn't // have a corresponding Java source for example.	WITHOUT_CLASSIFICATION	0.9999319995927887	WITHOUT_CLASSIFICATION	6.800040721131138E-5	DEFECT
/*             * Move the generated source file to the base directory.  If             * base directory and sourcebase are the same, the generated             * sources are already in place.             */	WITHOUT_CLASSIFICATION	0.9999999789275926	WITHOUT_CLASSIFICATION	2.107240742910675E-8	DEFECT
// no source file generated, nothing to move	WITHOUT_CLASSIFICATION	0.9999999963778002	WITHOUT_CLASSIFICATION	3.622199891379752E-9	DEFECT
// not the requested type	WITHOUT_CLASSIFICATION	0.9999946804958312	WITHOUT_CLASSIFICATION	5.31950416877172E-6	DEFECT
// **   full-pathname specified == path in list // **   simple name specified   == path in list	WITHOUT_CLASSIFICATION	0.99999998851812	WITHOUT_CLASSIFICATION	1.1481879977553757E-8	DEFECT
// we only get here if an exception has been thrown	WITHOUT_CLASSIFICATION	0.9999330183319096	WITHOUT_CLASSIFICATION	6.698166809033116E-5	DEFECT
// **   full-pathname specified == parent dir of path in list	WITHOUT_CLASSIFICATION	0.9999998369341392	WITHOUT_CLASSIFICATION	1.6306586090753895E-7	DEFECT
// not the requested type	WITHOUT_CLASSIFICATION	0.9999946804958312	WITHOUT_CLASSIFICATION	5.31950416877172E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999998068383374	WITHOUT_CLASSIFICATION	1.9316166246942935E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999998068383374	WITHOUT_CLASSIFICATION	1.9316166246942935E-7	DEFECT
//the rest of the method treats single jar like //a nested path with one file	WITHOUT_CLASSIFICATION	0.9999985436300256	WITHOUT_CLASSIFICATION	1.4563699744145225E-6	DEFECT
// Check for \r, \r\n and \r\r\n // Regard \r\r not followed by \n as two lines	WITHOUT_CLASSIFICATION	0.9999981501069181	WITHOUT_CLASSIFICATION	1.8498930819153632E-6	DEFECT
// scan base dirs to build up compile lists only if a // specific classname is not given	WITHOUT_CLASSIFICATION	0.9999835947764804	WITHOUT_CLASSIFICATION	1.6405223519565964E-5	DEFECT
// **   simple name specified   == parent dir + name	WITHOUT_CLASSIFICATION	0.9999999259465143	WITHOUT_CLASSIFICATION	7.405348568973156E-8	DEFECT
// class found but restricted name; this is // actually the case we're looking for in JDK 1.3+, // so catch the exception and return	WITHOUT_CLASSIFICATION	0.9999999808126916	WITHOUT_CLASSIFICATION	1.9187308402343572E-8	DEFECT
// Can return null to represent the bootstrap class loader. // see API docs of Class.getClassLoader.	WITHOUT_CLASSIFICATION	0.9999999996784656	WITHOUT_CLASSIFICATION	3.2153441020316815E-10	DEFECT
// must be "add"	WITHOUT_CLASSIFICATION	0.9999998744347139	WITHOUT_CLASSIFICATION	1.255652860953687E-7	DEFECT
// first off, make sure that we've got a srcdir and destdir	WITHOUT_CLASSIFICATION	0.9999998431102264	WITHOUT_CLASSIFICATION	1.5688977371323016E-7	DEFECT
// log options used	WITHOUT_CLASSIFICATION	0.999999732322264	WITHOUT_CLASSIFICATION	2.6767773605079034E-7	DEFECT
//patch file into the fileset	WITHOUT_CLASSIFICATION	0.9999999745681935	WITHOUT_CLASSIFICATION	2.543180659923418E-8	DEFECT
//set our parent dir	WITHOUT_CLASSIFICATION	0.9999966171122392	WITHOUT_CLASSIFICATION	3.3828877608252014E-6	DEFECT
// Compare the destination with the temp file	WITHOUT_CLASSIFICATION	0.999999828928275	WITHOUT_CLASSIFICATION	1.7107172492636731E-7	DEFECT
// Eof has been reached	WITHOUT_CLASSIFICATION	0.9999968802683736	WITHOUT_CLASSIFICATION	3.119731626446696E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999998068383374	WITHOUT_CLASSIFICATION	1.9316166246942935E-7	DEFECT
// don't reposition when we've reached the end // of the stream	WITHOUT_CLASSIFICATION	0.9999838420427121	WITHOUT_CLASSIFICATION	1.615795728794584E-5	DEFECT
// if at eolcount == 0 and trailing characters of string // are CTRL-Zs, set eofStr	WITHOUT_CLASSIFICATION	0.9999999989897228	WITHOUT_CLASSIFICATION	1.0102772333018401E-9	DEFECT
// keep searching for the first ^Z	WITHOUT_CLASSIFICATION	0.999999975546353	WITHOUT_CLASSIFICATION	2.4453647065026562E-8	DEFECT
// Trailing characters are ^Zs // Construct new line and eofStr	WITHOUT_CLASSIFICATION	0.9999999958005088	WITHOUT_CLASSIFICATION	4.199491242479889E-9	DEFECT
// permissible values for compression attribute	WITHOUT_CLASSIFICATION	0.9999980162450703	WITHOUT_CLASSIFICATION	1.983754929671356E-6	DEFECT
//default	WITHOUT_CLASSIFICATION	0.9999949387651701	WITHOUT_CLASSIFICATION	5.061234829982194E-6	DEFECT
// shadow of the above if the value is altered in execute	WITHOUT_CLASSIFICATION	0.9999988956382858	WITHOUT_CLASSIFICATION	1.1043617141186051E-6	DEFECT
// For directories:	WITHOUT_CLASSIFICATION	0.9999930984285561	WITHOUT_CLASSIFICATION	6.9015714438792464E-6	DEFECT
// Renamed version of original file, if it exists	WITHOUT_CLASSIFICATION	0.9999449626251419	WITHOUT_CLASSIFICATION	5.503737485809899E-5	DEFECT
// Add the files found in groupfileset to fileset	WITHOUT_CLASSIFICATION	0.9999977319338963	WITHOUT_CLASSIFICATION	2.268066103631432E-6	DEFECT
// can also handle empty archives	WITHOUT_CLASSIFICATION	0.9999999689086602	WITHOUT_CLASSIFICATION	3.1091339859825404E-8	DEFECT
// quick exit if the target is up to date	WITHOUT_CLASSIFICATION	0.9999997076972658	WITHOUT_CLASSIFICATION	2.923027343356603E-7	DEFECT
// Close the output stream.	WITHOUT_CLASSIFICATION	0.999999974505124	WITHOUT_CLASSIFICATION	2.5494875885926868E-8	DEFECT
// we are recreating the archive, need all resources	WITHOUT_CLASSIFICATION	0.9999998573979295	WITHOUT_CLASSIFICATION	1.4260207042231582E-7	DEFECT
// delete a bogus ZIP file (but only if it's not the original one)	WITHOUT_CLASSIFICATION	0.9999860396064837	WITHOUT_CLASSIFICATION	1.396039351636084E-5	DEFECT
// In this case using java.util.zip will not work // because it does not permit a zero-entry archive. // Must create it manually.	WITHOUT_CLASSIFICATION	0.7721467645154952	WITHOUT_CLASSIFICATION	0.2278532354845047	DEFECT
// Cf. PKZIP specification.	WITHOUT_CLASSIFICATION	0.9999999042011946	WITHOUT_CLASSIFICATION	9.579880538492904E-8	DEFECT
// P // K	WITHOUT_CLASSIFICATION	0.9999843453042032	WITHOUT_CLASSIFICATION	1.565469579673233E-5	DEFECT
// remainder zeros	WITHOUT_CLASSIFICATION	0.9999924220178424	WITHOUT_CLASSIFICATION	7.577982157630563E-6	DEFECT
// Create.	WITHOUT_CLASSIFICATION	0.9999994440319132	WITHOUT_CLASSIFICATION	5.559680867706782E-7	DEFECT
// we are recreating the archive, need all resources	WITHOUT_CLASSIFICATION	0.9999998573979295	WITHOUT_CLASSIFICATION	1.4260207042231582E-7	DEFECT
// initialResources is not empty	WITHOUT_CLASSIFICATION	0.9999910616224958	WITHOUT_CLASSIFICATION	8.938377504258843E-6	DEFECT
// initialResources is not empty	WITHOUT_CLASSIFICATION	0.9999910616224958	WITHOUT_CLASSIFICATION	8.938377504258843E-6	DEFECT
// in this case all files from origin map to // the fullPath attribute of the zipfileset at // destination	WITHOUT_CLASSIFICATION	0.9999764167516539	WITHOUT_CLASSIFICATION	2.3583248346019216E-5	DEFECT
// we are recreating the archive, need all resources	WITHOUT_CLASSIFICATION	0.9999998573979295	WITHOUT_CLASSIFICATION	1.4260207042231582E-7	DEFECT
// we are recreating the archive, need all resources	WITHOUT_CLASSIFICATION	0.9999998573979295	WITHOUT_CLASSIFICATION	1.4260207042231582E-7	DEFECT
// no emptyBehavior handling since the FileSet version // will take care of it.	WITHOUT_CLASSIFICATION	0.9999995621355281	WITHOUT_CLASSIFICATION	4.378644718749896E-7	DEFECT
/*         * Backwards compatibility forces us to repeat the logic of         * getResourcesToAdd(FileSet[], ...) here once again.         */	WITHOUT_CLASSIFICATION	0.9999999843002169	WITHOUT_CLASSIFICATION	1.5699783142486842E-8	DEFECT
// we will return initialResources anyway, no reason // to scan further.	WITHOUT_CLASSIFICATION	0.9999999596300765	WITHOUT_CLASSIFICATION	4.036992360193774E-8	DEFECT
// we will return initialResources anyway, no reason // to scan further.	WITHOUT_CLASSIFICATION	0.9999999596300765	WITHOUT_CLASSIFICATION	4.036992360193774E-8	DEFECT
// ZIPs store time with a granularity of 2 seconds, round up	WITHOUT_CLASSIFICATION	0.9998944705244318	WITHOUT_CLASSIFICATION	1.0552947556828992E-4	DEFECT
// don't add directories we've already added. // no warning if we try, it is harmless in and of itself	WITHOUT_CLASSIFICATION	0.9999999964072627	WITHOUT_CLASSIFICATION	3.5927372814344495E-9	DEFECT
// A "refid" attribute for a node within a Path object.	WITHOUT_CLASSIFICATION	0.9999975300683529	WITHOUT_CLASSIFICATION	2.469931647001499E-6	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.999993225734014	WITHOUT_CLASSIFICATION	6.774265985996825E-6	DEFECT
//default	WITHOUT_CLASSIFICATION	0.9999949387651701	WITHOUT_CLASSIFICATION	5.061234829982194E-6	DEFECT
//default	WITHOUT_CLASSIFICATION	0.9999949387651701	WITHOUT_CLASSIFICATION	5.061234829982194E-6	DEFECT
// ZIPs store time with a granularity of 2 seconds, round up	WITHOUT_CLASSIFICATION	0.9998944705244318	WITHOUT_CLASSIFICATION	1.0552947556828992E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999998068383374	WITHOUT_CLASSIFICATION	1.9316166246942935E-7	DEFECT
// duplicate equal to add, so we continue	WITHOUT_CLASSIFICATION	0.9999999869929896	WITHOUT_CLASSIFICATION	1.3007010341590924E-8	DEFECT
// Store data into a byte[]	WITHOUT_CLASSIFICATION	0.9999962451099197	WITHOUT_CLASSIFICATION	3.754890080463751E-6	DEFECT
// may be altered in validate	WITHOUT_CLASSIFICATION	0.9999977144542858	WITHOUT_CLASSIFICATION	2.28554571426259E-6	DEFECT
// set user-defined properties	WITHOUT_CLASSIFICATION	0.9999999821849799	WITHOUT_CLASSIFICATION	1.781502021741899E-8	DEFECT
// set Java built-in properties separately, // b/c we won't inherit them.	WITHOUT_CLASSIFICATION	0.9999781620121139	WITHOUT_CLASSIFICATION	2.1837987886156075E-5	DEFECT
// set all properties from calling project	WITHOUT_CLASSIFICATION	0.9999981364845434	WITHOUT_CLASSIFICATION	1.863515456513747E-6	DEFECT
// has been set explicitly	WITHOUT_CLASSIFICATION	0.999998817435775	WITHOUT_CLASSIFICATION	1.182564224907792E-6	DEFECT
// Are we trying to call the target in which we are defined (or // the build file if this is a top level task)?	WITHOUT_CLASSIFICATION	0.9999999810107681	WITHOUT_CLASSIFICATION	1.8989231912375358E-8	DEFECT
// help the gc	WITHOUT_CLASSIFICATION	0.9999925878482389	WITHOUT_CLASSIFICATION	7.412151761189464E-6	DEFECT
// remove duplicate properties - last property wins // Needed for backward compatibility	WITHOUT_CLASSIFICATION	0.999989246449543	WITHOUT_CLASSIFICATION	1.075355045698625E-5	DEFECT
// Now add all references that are not defined in the // subproject, if inheritRefs is true	WITHOUT_CLASSIFICATION	0.9999998612882862	WITHOUT_CLASSIFICATION	1.387117137455678E-7	DEFECT
// not Clonable	WITHOUT_CLASSIFICATION	0.9999989685323651	WITHOUT_CLASSIFICATION	1.0314676348521445E-6	DEFECT
// ignore this if the class being referenced does not have // a set project method.	WITHOUT_CLASSIFICATION	0.9999756812736627	WITHOUT_CLASSIFICATION	2.431872633735678E-5	DEFECT
// basedir and ant.file get special treatment in execute()	WITHOUT_CLASSIFICATION	0.9999959900059608	WITHOUT_CLASSIFICATION	4.009994039165303E-6	DEFECT
// don't re-set user properties, avoid the warning message	WITHOUT_CLASSIFICATION	0.9999960778089593	WITHOUT_CLASSIFICATION	3.9221910407861076E-6	DEFECT
// no user property	WITHOUT_CLASSIFICATION	0.9999989511223104	WITHOUT_CLASSIFICATION	1.0488776896096599E-6	DEFECT
// @note: it is a string and not a file to handle relative/absolute // otherwise a relative file will be resolved based on the current // basedir.	WITHOUT_CLASSIFICATION	0.9999954079302756	WITHOUT_CLASSIFICATION	4.5920697243809974E-6	DEFECT
/*     * Get the (sub)-Project instance currently in use.     * @return Project     * @since Ant 1.7     */	WITHOUT_CLASSIFICATION	0.9999993089248297	WITHOUT_CLASSIFICATION	6.910751703143256E-7	DEFECT
// check to make sure that the given dir isn't a symlink // the comparison of absolute path and canonical path // catches this	WITHOUT_CLASSIFICATION	0.9954209354259295	WITHOUT_CLASSIFICATION	0.004579064574070589	DEFECT
//validation logic	WITHOUT_CLASSIFICATION	0.9999831445376021	WITHOUT_CLASSIFICATION	1.6855462397917336E-5	DEFECT
//this isnt strictly needed, but by being fussy now, //we can change implementation details later	WITHOUT_CLASSIFICATION	0.999997558706326	WITHOUT_CLASSIFICATION	2.4412936740701826E-6	DEFECT
//special case single jar handling with signedjar attribute set	WITHOUT_CLASSIFICATION	0.9999999265136211	WITHOUT_CLASSIFICATION	7.348637881496091E-8	DEFECT
// single jar processing	WITHOUT_CLASSIFICATION	0.9999999663134902	WITHOUT_CLASSIFICATION	3.368650981445142E-8	DEFECT
//return here.	WITHOUT_CLASSIFICATION	0.9999490912493664	WITHOUT_CLASSIFICATION	5.090875063356596E-5	DEFECT
//set up our mapping policy	WITHOUT_CLASSIFICATION	0.9999990899048397	WITHOUT_CLASSIFICATION	9.100951603789164E-7	DEFECT
//no mapper? use the identity policy	WITHOUT_CLASSIFICATION	0.9999957489885002	WITHOUT_CLASSIFICATION	4.251011499781656E-6	DEFECT
//determine the destination filename via the mapper	WITHOUT_CLASSIFICATION	0.9999987611894923	WITHOUT_CLASSIFICATION	1.2388105077507884E-6	DEFECT
//we only like simple mappers.	WITHOUT_CLASSIFICATION	0.9999823343432092	WITHOUT_CLASSIFICATION	1.7665656790826584E-5	DEFECT
//DO NOT SET THE -signedjar OPTION if source==dest //unless you like fielding hotspot crash reports	WITHOUT_CLASSIFICATION	0.9999994608390804	WITHOUT_CLASSIFICATION	5.391609196491698E-7	DEFECT
//add -tsa operations if declared	WITHOUT_CLASSIFICATION	0.9999985634759332	WITHOUT_CLASSIFICATION	1.4365240667410198E-6	DEFECT
//JAR source is required	WITHOUT_CLASSIFICATION	0.999936879625509	WITHOUT_CLASSIFICATION	6.312037449095961E-5	DEFECT
//alias is required for signing	WITHOUT_CLASSIFICATION	0.9996429287415829	WITHOUT_CLASSIFICATION	3.570712584170711E-4	DEFECT
// restore the lastModified attribute	WITHOUT_CLASSIFICATION	0.9999997442689781	WITHOUT_CLASSIFICATION	2.557310218433472E-7	DEFECT
//we normally compare destination with source	WITHOUT_CLASSIFICATION	0.9999931175866491	WITHOUT_CLASSIFICATION	6.88241335093303E-6	DEFECT
//but if no dest is specified, compare source to source	WITHOUT_CLASSIFICATION	0.9999998337823626	WITHOUT_CLASSIFICATION	1.6621763748786024E-7	DEFECT
//if, by any means, the destfile and source match,	WITHOUT_CLASSIFICATION	0.9999970328190014	WITHOUT_CLASSIFICATION	2.9671809985924433E-6	DEFECT
//we check the presence of signatures on lazy signing	WITHOUT_CLASSIFICATION	0.9999988658539148	WITHOUT_CLASSIFICATION	1.1341460851770524E-6	DEFECT
//unsigned or non-lazy self signings are always false	WITHOUT_CLASSIFICATION	0.9999820163588801	WITHOUT_CLASSIFICATION	1.7983641119931324E-5	DEFECT
//if they are different, the timestamps are used	WITHOUT_CLASSIFICATION	0.9999998562162782	WITHOUT_CLASSIFICATION	1.4378372190368397E-7	DEFECT
//just log this	WITHOUT_CLASSIFICATION	0.9999940931034765	WITHOUT_CLASSIFICATION	5.906896523533002E-6	DEFECT
// fileutils	WITHOUT_CLASSIFICATION	0.999999296027249	WITHOUT_CLASSIFICATION	7.03972750944546E-7	DEFECT
// --- Fields --	WITHOUT_CLASSIFICATION	0.9999832273847876	WITHOUT_CLASSIFICATION	1.6772615212284048E-5	DEFECT
// Keep a hashtable of attributes added by this task. // This task is allow to override its own properties // but not other properties.  So we need to keep track // of which properties we've added.	WITHOUT_CLASSIFICATION	0.9999998748502624	WITHOUT_CLASSIFICATION	1.251497375505062E-7	DEFECT
// Error generated during parsing	WITHOUT_CLASSIFICATION	0.9999668020569179	WITHOUT_CLASSIFICATION	3.319794308215361E-5	DEFECT
// Parser with specified options can't be built	WITHOUT_CLASSIFICATION	0.9999977961477277	WITHOUT_CLASSIFICATION	2.203852272253169E-6	DEFECT
// I/O error	WITHOUT_CLASSIFICATION	0.9999886277776814	WITHOUT_CLASSIFICATION	1.1372222318577494E-5	DEFECT
// Set the prefix for this node to include its tag name.	WITHOUT_CLASSIFICATION	0.9999954126791055	WITHOUT_CLASSIFICATION	4.5873208944858444E-6	DEFECT
// Pass the container to the processing of this node,	WITHOUT_CLASSIFICATION	0.9999993188211276	WITHOUT_CLASSIFICATION	6.811788723575148E-7	DEFECT
// now, iterate through children.	WITHOUT_CLASSIFICATION	0.9999992576882787	WITHOUT_CLASSIFICATION	7.423117212898232E-7	DEFECT
// For each child, pass the object added by // processNode to its children -- in other word, each // object can pass information along to its children.	WITHOUT_CLASSIFICATION	0.9999913646546155	WITHOUT_CLASSIFICATION	8.635345384499082E-6	DEFECT
// The value of an id attribute of this node.	WITHOUT_CLASSIFICATION	0.9999952496062648	WITHOUT_CLASSIFICATION	4.75039373517118E-6	DEFECT
// Is there an id attribute?	WITHOUT_CLASSIFICATION	0.9999958573726148	WITHOUT_CLASSIFICATION	4.142627385221305E-6	DEFECT
// Now, iterate through the attributes adding them.	WITHOUT_CLASSIFICATION	0.9999995967327422	WITHOUT_CLASSIFICATION	4.0326725783112433E-7	DEFECT
/*                     * The main conditional logic -- if the attribute                     * is somehow "special" (i.e., it has known                     * semantic meaning) then deal with it                     * appropriately.                     */	WITHOUT_CLASSIFICATION	0.9999814944063787	WITHOUT_CLASSIFICATION	1.8505593621334312E-5	DEFECT
// ID has already been found above.	WITHOUT_CLASSIFICATION	0.9999998639038746	WITHOUT_CLASSIFICATION	1.3609612530698807E-7	DEFECT
// A "path" attribute for a node within a Path object.	WITHOUT_CLASSIFICATION	0.9999971583570997	WITHOUT_CLASSIFICATION	2.8416429003401487E-6	DEFECT
// A node identifying a new path	WITHOUT_CLASSIFICATION	0.999996202942224	WITHOUT_CLASSIFICATION	3.79705777590473E-6	DEFECT
// For the text node, add a property.	WITHOUT_CLASSIFICATION	0.9999891171573888	WITHOUT_CLASSIFICATION	1.0882842611220952E-5	DEFECT
// If the containing object was a String, then use it as the ID.	WITHOUT_CLASSIFICATION	0.9999995398989265	WITHOUT_CLASSIFICATION	4.6010107353600343E-7	DEFECT
// If this attribute was added by this task, then // we append this value to the existing value. // We use the setProperty method which will // forcibly override the property if it already exists. // We need to put these properties into the project // when we read them, though (instead of keeping them // outside of the project and batch adding them at the end) // to allow other properties to reference them.	WITHOUT_CLASSIFICATION	0.9999974113268051	WITHOUT_CLASSIFICATION	2.588673194822061E-6	DEFECT
// Never include the "refid" attribute as part of the // attribute name.	WITHOUT_CLASSIFICATION	0.9999999985577827	WITHOUT_CLASSIFICATION	1.4422174285591892E-9	DEFECT
// Otherwise, return it appended unless property to hide it is set.	WITHOUT_CLASSIFICATION	0.9999940373635945	WITHOUT_CLASSIFICATION	5.96263640544443E-6	DEFECT
/* Expose members for extensibility */	WITHOUT_CLASSIFICATION	0.9999912293818324	WITHOUT_CLASSIFICATION	8.770618167680946E-6	DEFECT
// delegate this way around to support subclasses that // overwrite getFile	WITHOUT_CLASSIFICATION	0.9999992580150167	WITHOUT_CLASSIFICATION	7.419849832773288E-7	DEFECT
//we arent fully defined yet. this is an error unless //we are in an antlib, in which case the resource name is determined //automatically. //NB: URIs in the ant core package will be "" at this point.	WITHOUT_CLASSIFICATION	0.9996767511215611	WITHOUT_CLASSIFICATION	3.232488784389226E-4	DEFECT
//convert the URI to a resource	WITHOUT_CLASSIFICATION	0.9999994482612156	WITHOUT_CLASSIFICATION	5.517387844130657E-7	DEFECT
//handle new style full paths to an antlib, in which //all but the forward slashes are allowed.	WITHOUT_CLASSIFICATION	0.9999999205004113	WITHOUT_CLASSIFICATION	7.949958860697389E-8	DEFECT
//if we haven't already named an XML file, it gets antlib.xml	WITHOUT_CLASSIFICATION	0.9999960158550479	WITHOUT_CLASSIFICATION	3.984144952123438E-6	DEFECT
//convert from a package to a path	WITHOUT_CLASSIFICATION	0.9999994212857032	WITHOUT_CLASSIFICATION	5.787142968253379E-7	DEFECT
// Here if there is an error	WITHOUT_CLASSIFICATION	0.9999986499475206	WITHOUT_CLASSIFICATION	1.350052479343808E-6	DEFECT
// Fall Through	WITHOUT_CLASSIFICATION	0.9999833093004302	WITHOUT_CLASSIFICATION	1.6690699569710637E-5	DEFECT
// log at a lower level	WITHOUT_CLASSIFICATION	0.9999996394493625	WITHOUT_CLASSIFICATION	3.605506374019829E-7	DEFECT
// Ignore the problem	WITHOUT_CLASSIFICATION	0.999998822218542	WITHOUT_CLASSIFICATION	1.1777814581099096E-6	DEFECT
//trick to evoke "basedir not set" if null:	WITHOUT_CLASSIFICATION	0.9999047202001924	WITHOUT_CLASSIFICATION	9.527979980763076E-5	DEFECT
//no sources = nothing to compare; no targets = nothing to delete:	WITHOUT_CLASSIFICATION	0.999999770291421	WITHOUT_CLASSIFICATION	2.2970857901783242E-7	DEFECT
// Members	WITHOUT_CLASSIFICATION	0.999998643408367	WITHOUT_CLASSIFICATION	1.3565916330033603E-6	DEFECT
// Members	WITHOUT_CLASSIFICATION	0.999998643408367	WITHOUT_CLASSIFICATION	1.3565916330033603E-6	DEFECT
// If we are a reference, create a Path from the reference	WITHOUT_CLASSIFICATION	0.9999996879801077	WITHOUT_CLASSIFICATION	3.120198922934625E-7	DEFECT
// for NetWare and OS/2, piggy-back on Windows, since here and // in the apply code, the same assumptions can be made as with // windows - that \\ is an OK separator, and do comparisons // case-insensitive.	WITHOUT_CLASSIFICATION	0.9893580471827759	WITHOUT_CLASSIFICATION	0.010641952817224092	DEFECT
// If the element starts with the configured prefix, then // convert the prefix to the configured 'to' value.	WITHOUT_CLASSIFICATION	0.9999908134140042	WITHOUT_CLASSIFICATION	9.186585995789602E-6	DEFECT
// Currently, we deal with only two path formats: Unix and Windows // And Unix is everything that is not Windows	WITHOUT_CLASSIFICATION	0.9696686826569192	WITHOUT_CLASSIFICATION	0.030331317343080862	DEFECT
// may be altered in validateSetup // may be altered in validateSetup	WITHOUT_CLASSIFICATION	0.9999981349846835	WITHOUT_CLASSIFICATION	1.8650153165619375E-6	DEFECT
// validate our setup	WITHOUT_CLASSIFICATION	0.9999998429527218	WITHOUT_CLASSIFICATION	1.570472782426677E-7	DEFECT
// Currently, we deal with only two path formats: Unix and Windows // And Unix is everything that is not Windows // (with the exception for NetWare and OS/2 below)	WITHOUT_CLASSIFICATION	0.9812656806956457	WITHOUT_CLASSIFICATION	0.01873431930435432	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999998068383374	WITHOUT_CLASSIFICATION	1.9316166246942935E-7	DEFECT
// Get the list of path components in canonical form	WITHOUT_CLASSIFICATION	0.9999999446837898	WITHOUT_CLASSIFICATION	5.531621015297034E-8	DEFECT
// Apply the path prefix map	WITHOUT_CLASSIFICATION	0.9998196881253848	WITHOUT_CLASSIFICATION	1.8031187461516247E-4	DEFECT
// Now convert the path and file separator characters from the // current os to the target os.	WITHOUT_CLASSIFICATION	0.9999999980756078	WITHOUT_CLASSIFICATION	1.92439226882356E-9	DEFECT
// Place the result into the specified property, // unless setonempty == false	WITHOUT_CLASSIFICATION	0.9999999812481052	WITHOUT_CLASSIFICATION	1.8751894840598042E-8	DEFECT
// Iterate over the map entries and apply each one. // Stop when one of the entries actually changes the element.	WITHOUT_CLASSIFICATION	0.9999981289581368	WITHOUT_CLASSIFICATION	1.8710418632751568E-6	DEFECT
// Note I'm using "!=" to see if we got a new object back from // the apply method.	WITHOUT_CLASSIFICATION	0.9999991418561244	WITHOUT_CLASSIFICATION	8.581438757576794E-7	DEFECT
// We applied one, so we're done	WITHOUT_CLASSIFICATION	0.9999999928055053	WITHOUT_CLASSIFICATION	7.194494622868214E-9	DEFECT
// Determine the separator strings.  The dirsep and pathsep attributes // override the targetOS settings.	WITHOUT_CLASSIFICATION	0.9999999998724958	WITHOUT_CLASSIFICATION	1.2750419614403328E-10	DEFECT
// override with pathsep=	WITHOUT_CLASSIFICATION	0.9999998841716318	WITHOUT_CLASSIFICATION	1.1582836814225649E-7	DEFECT
// override with dirsep=	WITHOUT_CLASSIFICATION	0.9999998317187184	WITHOUT_CLASSIFICATION	1.6828128160703808E-7	DEFECT
// Check if used by attributes	WITHOUT_CLASSIFICATION	0.9999999905607075	WITHOUT_CLASSIFICATION	9.439292461439227E-9	DEFECT
// ? is there an xml api for this ?	WITHOUT_CLASSIFICATION	0.999991849339481	WITHOUT_CLASSIFICATION	8.15066051898781E-6	DEFECT
////////////////////////////////////////////////////////////////////// // ATTRIBUTES	WITHOUT_CLASSIFICATION	0.9999779326462539	WITHOUT_CLASSIFICATION	2.2067353746137455E-5	DEFECT
////////////////////////////////////////////////////////////////////// // CONSTRUCTORS / INITIALIZERS	WITHOUT_CLASSIFICATION	0.9999942718523823	WITHOUT_CLASSIFICATION	5.728147617646393E-6	DEFECT
////////////////////////////////////////////////////////////////////// // ACCESSOR METHODS	WITHOUT_CLASSIFICATION	0.9999796252093263	WITHOUT_CLASSIFICATION	2.0374790673715708E-5	DEFECT
//Validate mandatory attributes	WITHOUT_CLASSIFICATION	0.9999684710927993	WITHOUT_CLASSIFICATION	3.152890720063741E-5	DEFECT
//the property attribute must have access to a property file	WITHOUT_CLASSIFICATION	0.9999954038721162	WITHOUT_CLASSIFICATION	4.59612788388057E-6	DEFECT
//Make sure property exists in property file	WITHOUT_CLASSIFICATION	0.9998160064054753	WITHOUT_CLASSIFICATION	1.8399359452469897E-4	DEFECT
//Default is empty string	WITHOUT_CLASSIFICATION	0.9999997868628567	WITHOUT_CLASSIFICATION	2.1313714323570113E-7	DEFECT
// Avoid runtime problem on pre 1.4 when compiling post 1.4	WITHOUT_CLASSIFICATION	0.999825755967422	WITHOUT_CLASSIFICATION	1.742440325779967E-4	DEFECT
// end of finally	WITHOUT_CLASSIFICATION	0.9999632348145815	WITHOUT_CLASSIFICATION	3.6765185418561816E-5	DEFECT
//look for and print warnings	WITHOUT_CLASSIFICATION	0.9999989421528941	WITHOUT_CLASSIFICATION	1.0578471059410751E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999554955215	WITHOUT_CLASSIFICATION	4.4504478498603726E-7	DEFECT
////////////////////////////////////////////////////////////////////// // ATTRIBUTES	WITHOUT_CLASSIFICATION	0.9999779326462539	WITHOUT_CLASSIFICATION	2.2067353746137455E-5	DEFECT
////////////////////////////////////////////////////////////////////// // ACCESSOR METHODS	WITHOUT_CLASSIFICATION	0.9999796252093263	WITHOUT_CLASSIFICATION	2.0374790673715708E-5	DEFECT
// line separators in values and tokens are "\n" // in order to compare with the file contents, replace them // as needed	WITHOUT_CLASSIFICATION	0.9999999202169843	WITHOUT_CLASSIFICATION	7.978301571149097E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999998068383374	WITHOUT_CLASSIFICATION	1.9316166246942935E-7	DEFECT
// Ignore Exception	WITHOUT_CLASSIFICATION	0.999999483282535	WITHOUT_CLASSIFICATION	5.167174651062055E-7	DEFECT
// no errors so far	WITHOUT_CLASSIFICATION	0.9999997140738213	WITHOUT_CLASSIFICATION	2.8592617871324317E-7	DEFECT
// If we don't know the type of the line // and we are in emacs mode, it will be // an error, because in this mode, jikes won't // always print "error", but sometimes other // keywords like "Syntax". We should look for // all those keywords.	WITHOUT_CLASSIFICATION	0.9999962082246526	WITHOUT_CLASSIFICATION	3.791775347426828E-6	DEFECT
// plain impossible	WITHOUT_CLASSIFICATION	0.9999996183295947	WITHOUT_CLASSIFICATION	3.816704053292864E-7	DEFECT
// We must check if the process was not stopped // before being here	WITHOUT_CLASSIFICATION	0.9999985144984082	WITHOUT_CLASSIFICATION	1.4855015918445276E-6	DEFECT
// the process is not terminated, if this is really // a timeout and not a manual stop then kill it.	WITHOUT_CLASSIFICATION	0.9999309229281335	WITHOUT_CLASSIFICATION	6.907707186649904E-5	DEFECT
////////////////////////////////////////////////////////////////////// // CORE / MAIN BODY	WITHOUT_CLASSIFICATION	0.9999280903354427	WITHOUT_CLASSIFICATION	7.190966455721654E-5	DEFECT
// get the recorder entry	WITHOUT_CLASSIFICATION	0.9999834122434956	WITHOUT_CLASSIFICATION	1.6587756504424434E-5	DEFECT
// set the values on the recorder	WITHOUT_CLASSIFICATION	0.9999950536494222	WITHOUT_CLASSIFICATION	4.94635057777187E-6	DEFECT
////////////////////////////////////////////////////////////////////// // INNER CLASSES	WITHOUT_CLASSIFICATION	0.9999844122067131	WITHOUT_CLASSIFICATION	1.558779328692484E-5	DEFECT
// create a recorder entry	WITHOUT_CLASSIFICATION	0.9999977971313042	WITHOUT_CLASSIFICATION	2.202868695755511E-6	DEFECT
// Use '/' to calculate digest based on file name. // This is required in order to get the same result // on different platforms.	WITHOUT_CLASSIFICATION	0.9999977553131087	WITHOUT_CLASSIFICATION	2.2446868911774E-6	DEFECT
// Read the checksum from disk.	WITHOUT_CLASSIFICATION	0.9999976038052432	WITHOUT_CLASSIFICATION	2.396194756842583E-6	DEFECT
// A separate directory was explicitly declared	WITHOUT_CLASSIFICATION	0.9999995852192266	WITHOUT_CLASSIFICATION	4.147807734260163E-7	DEFECT
// Empty statement	WITHOUT_CLASSIFICATION	0.9999994457769807	WITHOUT_CLASSIFICATION	5.542230192217675E-7	DEFECT
//can either be a property name string or a file	WITHOUT_CLASSIFICATION	0.9999991508539158	WITHOUT_CLASSIFICATION	8.491460842440947E-7	DEFECT
// file is on wrong format, swallow	WITHOUT_CLASSIFICATION	0.9999531241153357	WITHOUT_CLASSIFICATION	4.687588466432295E-5	DEFECT
// try to be smart, not to be fooled by a weird directory name	WITHOUT_CLASSIFICATION	0.9999989866409821	WITHOUT_CLASSIFICATION	1.0133590179594666E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999554955215	WITHOUT_CLASSIFICATION	4.4504478498603726E-7	DEFECT
// Close the output stream.	WITHOUT_CLASSIFICATION	0.999999974505124	WITHOUT_CLASSIFICATION	2.5494875885926868E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999998068383374	WITHOUT_CLASSIFICATION	1.9316166246942935E-7	DEFECT
// File is Comparable, so sorting is trivial	WITHOUT_CLASSIFICATION	0.9999999635653685	WITHOUT_CLASSIFICATION	3.6434631548016764E-8	DEFECT
// Loop over the checksums and generate a total hash.	WITHOUT_CLASSIFICATION	0.9999998826951733	WITHOUT_CLASSIFICATION	1.1730482671386502E-7	DEFECT
// Add the digest for the file content	WITHOUT_CLASSIFICATION	0.9999998628498207	WITHOUT_CLASSIFICATION	1.3715017928376392E-7	DEFECT
// Add the file path	WITHOUT_CLASSIFICATION	0.9999993668928575	WITHOUT_CLASSIFICATION	6.331071425036481E-7	DEFECT
// two characters form the hex value.	WITHOUT_CLASSIFICATION	0.9999997036543786	WITHOUT_CLASSIFICATION	2.963456213766325E-7	DEFECT
// We just set the prefix for this fileset, and pass it up.	WITHOUT_CLASSIFICATION	0.9999960158609106	WITHOUT_CLASSIFICATION	3.984139089381047E-6	DEFECT
// Check if the service is configured correctly	WITHOUT_CLASSIFICATION	0.9998943696952481	WITHOUT_CLASSIFICATION	1.0563030475188801E-4	DEFECT
// if we haven't got the manifest yet, attempt to // get it now and have manifest be the final merge	WITHOUT_CLASSIFICATION	0.999997042713807	WITHOUT_CLASSIFICATION	2.957286193046198E-6	DEFECT
// time to write the manifest	WITHOUT_CLASSIFICATION	0.9999996340382689	WITHOUT_CLASSIFICATION	3.659617312144483E-7	DEFECT
// encoding must be UTF8 as specified in the specs.	WITHOUT_CLASSIFICATION	0.9999999806684073	WITHOUT_CLASSIFICATION	1.9331592686013565E-8	DEFECT
// version-info blankline	WITHOUT_CLASSIFICATION	0.9999997995759538	WITHOUT_CLASSIFICATION	2.0042404627873284E-7	DEFECT
// header newline	WITHOUT_CLASSIFICATION	0.9999956487204177	WITHOUT_CLASSIFICATION	4.351279582359387E-6	DEFECT
// If this is the same name specified in 'manifest', this // is the manifest to use	WITHOUT_CLASSIFICATION	0.9999991547609046	WITHOUT_CLASSIFICATION	8.452390954759213E-7	DEFECT
// we add this to our group of fileset manifests	WITHOUT_CLASSIFICATION	0.9999990993261967	WITHOUT_CLASSIFICATION	9.006738032993791E-7	DEFECT
// assuming 'skip' otherwise // don't warn if skip has been requested explicitly, warn if user // didn't set the attribute	WITHOUT_CLASSIFICATION	0.9999248333146895	WITHOUT_CLASSIFICATION	7.516668531049258E-5	DEFECT
// Hide warning also as it makes no sense since // the filesetmanifest attribute itself has been // hidden	WITHOUT_CLASSIFICATION	0.9999999787993854	WITHOUT_CLASSIFICATION	2.120061465735944E-8	DEFECT
// need to handle manifest as a special check	WITHOUT_CLASSIFICATION	0.9999999580634792	WITHOUT_CLASSIFICATION	4.19365207412496E-8	DEFECT
// if it doesn't exist, it will get created anyway, don't // bother with any up-to-date checks.	WITHOUT_CLASSIFICATION	0.9999982684114528	WITHOUT_CLASSIFICATION	1.7315885471712497E-6	DEFECT
// no existing archive	WITHOUT_CLASSIFICATION	0.9999999873161399	WITHOUT_CLASSIFICATION	1.2683860021771557E-8	DEFECT
// Ignore close exception	WITHOUT_CLASSIFICATION	0.999999906142793	WITHOUT_CLASSIFICATION	9.385720696445557E-8	DEFECT
// we want to save this info if we are going to make another pass	WITHOUT_CLASSIFICATION	0.999965553373336	WITHOUT_CLASSIFICATION	3.444662666405024E-5	DEFECT
// couldn't find it - must be on path	WITHOUT_CLASSIFICATION	0.999995644728371	WITHOUT_CLASSIFICATION	4.355271629013547E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999554955215	WITHOUT_CLASSIFICATION	4.4504478498603726E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999554955215	WITHOUT_CLASSIFICATION	4.4504478498603726E-7	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.999993225734014	WITHOUT_CLASSIFICATION	6.774265985996825E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999998068383374	WITHOUT_CLASSIFICATION	1.9316166246942935E-7	DEFECT
// looks like nothing from META-INF should be added // and the check is not case insensitive. // see sun.misc.JarIndex	WITHOUT_CLASSIFICATION	0.9999917487627691	WITHOUT_CLASSIFICATION	8.251237230904237E-6	DEFECT
// name newline	WITHOUT_CLASSIFICATION	0.9999989718488496	WITHOUT_CLASSIFICATION	1.0281511503894833E-6	DEFECT
// longest match comes first	WITHOUT_CLASSIFICATION	0.9999992224126855	WITHOUT_CLASSIFICATION	7.775873145352405E-7	DEFECT
// META-INF would be skipped anyway, avoid index for // manifest-only jars.	WITHOUT_CLASSIFICATION	0.9755712254107368	WITHOUT_CLASSIFICATION	0.02442877458926314	DEFECT
// a file, not in the root // since the jar may be one without directory // entries, add the parent dir of this file as // well.	WITHOUT_CLASSIFICATION	0.9999946090039671	WITHOUT_CLASSIFICATION	5.390996032967322E-6	DEFECT
/*protected*/	WITHOUT_CLASSIFICATION	0.9999023720685508	WITHOUT_CLASSIFICATION	9.762793144917108E-5	DEFECT
// if the target file is not there, then it can't be up-to-date	WITHOUT_CLASSIFICATION	0.9999997468606691	WITHOUT_CLASSIFICATION	2.53139330930545E-7	DEFECT
// if the source file isn't there, throw an exception	WITHOUT_CLASSIFICATION	0.9999983432941673	WITHOUT_CLASSIFICATION	1.6567058328518307E-6	DEFECT
// by default, messages are always displayed	WITHOUT_CLASSIFICATION	0.9999999272546868	WITHOUT_CLASSIFICATION	7.274531317600896E-8	DEFECT
// need to keep the package private version for backwards compatibility	WITHOUT_CLASSIFICATION	0.9999982594739084	WITHOUT_CLASSIFICATION	1.7405260915218259E-6	DEFECT
// we must keep two lists since other classes may modify the // filesets Vector (it is package private) without us noticing	WITHOUT_CLASSIFICATION	0.9999986015272561	WITHOUT_CLASSIFICATION	1.398472743926632E-6	DEFECT
// add the main fileset to the list of filesets to process.	WITHOUT_CLASSIFICATION	0.9999999866944118	WITHOUT_CLASSIFICATION	1.3305588215671581E-8	DEFECT
// check if tar is out of date with respect to each // fileset	WITHOUT_CLASSIFICATION	0.9999998607723576	WITHOUT_CLASSIFICATION	1.3922764245748938E-7	DEFECT
// warn or GNU	WITHOUT_CLASSIFICATION	0.9999928628499974	WITHOUT_CLASSIFICATION	7.137150002463682E-6	DEFECT
// don't add "" to the archive	WITHOUT_CLASSIFICATION	0.9999930776667948	WITHOUT_CLASSIFICATION	6.922333205231169E-6	DEFECT
// '/' is appended for compatibility with the zip task.	WITHOUT_CLASSIFICATION	0.9999971077116361	WITHOUT_CLASSIFICATION	2.8922883640316294E-6	DEFECT
// we would end up adding "" to the archive	WITHOUT_CLASSIFICATION	0.9999791431736818	WITHOUT_CLASSIFICATION	2.0856826318279282E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999998068383374	WITHOUT_CLASSIFICATION	1.9316166246942935E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999998068383374	WITHOUT_CLASSIFICATION	1.9316166246942935E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999554955215	WITHOUT_CLASSIFICATION	4.4504478498603726E-7	DEFECT
// permissible values for compression attribute	WITHOUT_CLASSIFICATION	0.9999980162450703	WITHOUT_CLASSIFICATION	1.983754929671356E-6	DEFECT
// override permissions if set explicitly	WITHOUT_CLASSIFICATION	0.9999718121845433	WITHOUT_CLASSIFICATION	2.8187815456649627E-5	DEFECT
// only override permissions if set explicitly	WITHOUT_CLASSIFICATION	0.9998474745704489	WITHOUT_CLASSIFICATION	1.5252542955122777E-4	DEFECT
// non-file resources	WITHOUT_CLASSIFICATION	0.9999998528960855	WITHOUT_CLASSIFICATION	1.4710391445739498E-7	DEFECT
// non-file resources	WITHOUT_CLASSIFICATION	0.9999998528960855	WITHOUT_CLASSIFICATION	1.4710391445739498E-7	DEFECT
//extend Comparison; retain for BC only	WITHOUT_CLASSIFICATION	0.9999783979285666	WITHOUT_CLASSIFICATION	2.1602071433366303E-5	DEFECT
//when writing to the log, we'll see what's happening:	WITHOUT_CLASSIFICATION	0.9999993993957899	WITHOUT_CLASSIFICATION	6.006042100515892E-7	DEFECT
/*         * The initial version used DateFormat.SHORT for the         * time format, which ignores seconds.  If we want         * seconds as well, we need DateFormat.MEDIUM, which         * in turn would break all old build files.         *         * First try to parse with DateFormat.SHORT and if         * that fails with MEDIUM - throw an exception if both         * fail.         */	WITHOUT_CLASSIFICATION	0.9999999980389916	WITHOUT_CLASSIFICATION	1.961008354061676E-9	DEFECT
//only set if successful to this point:	WITHOUT_CLASSIFICATION	0.9999760331308866	WITHOUT_CLASSIFICATION	2.3966869113408863E-5	DEFECT
// deal with the resource collections	WITHOUT_CLASSIFICATION	0.999994772641581	WITHOUT_CLASSIFICATION	5.22735841905879E-6	DEFECT
// deal with filesets in a special way since the task // originally also used the directories and Union won't return // them.	WITHOUT_CLASSIFICATION	0.9999996184986815	WITHOUT_CLASSIFICATION	3.8150131856585717E-7	DEFECT
// use this to create file and deal with non-writable files	WITHOUT_CLASSIFICATION	0.9999999734203052	WITHOUT_CLASSIFICATION	2.657969470975847E-8	DEFECT
// When we leave this block we can be sure all data is really // stored in main memory before the new threads start, the new // threads will for sure load the data from main memory. // // This probably is slightly paranoid.	WITHOUT_CLASSIFICATION	0.9974715408331981	WITHOUT_CLASSIFICATION	0.0025284591668018803	DEFECT
// start any daemon threads	WITHOUT_CLASSIFICATION	0.999976239393418	WITHOUT_CLASSIFICATION	2.376060658210829E-5	DEFECT
// now run main threads in limited numbers... // start initial batch of threads	WITHOUT_CLASSIFICATION	0.999936477340929	WITHOUT_CLASSIFICATION	6.352265907093314E-5	DEFECT
// start the timeout thread	WITHOUT_CLASSIFICATION	0.9999998029764714	WITHOUT_CLASSIFICATION	1.9702352867211669E-7	DEFECT
// now find available running slots for the remaining threads	WITHOUT_CLASSIFICATION	0.9999993780636275	WITHOUT_CLASSIFICATION	6.219363724822462E-7	DEFECT
// continue on outer while loop to get another // available slot	WITHOUT_CLASSIFICATION	0.9999995276585821	WITHOUT_CLASSIFICATION	4.723414177532828E-7	DEFECT
// if we got here all slots in use, so sleep until // something happens	WITHOUT_CLASSIFICATION	0.9999991390197832	WITHOUT_CLASSIFICATION	8.609802168033384E-7	DEFECT
// doesn't java know interruptions are rude? // just pretend it didn't happen and go about out business. // sheesh!	WITHOUT_CLASSIFICATION	0.9999989330294613	WITHOUT_CLASSIFICATION	1.0669705387424398E-6	DEFECT
// are all threads finished	WITHOUT_CLASSIFICATION	0.9999994522716891	WITHOUT_CLASSIFICATION	5.477283109176171E-7	DEFECT
// who would interrupt me at a time like this?	WITHOUT_CLASSIFICATION	0.9999988489897255	WITHOUT_CLASSIFICATION	1.1510102745890607E-6	DEFECT
// now did any of the threads throw an exception	WITHOUT_CLASSIFICATION	0.999900509861619	WITHOUT_CLASSIFICATION	9.949013838088483E-5	DEFECT
// return a bogus number	WITHOUT_CLASSIFICATION	0.9999999707954901	WITHOUT_CLASSIFICATION	2.9204509842698254E-8	DEFECT
// Should be safe to parse	WITHOUT_CLASSIFICATION	0.9999789280983024	WITHOUT_CLASSIFICATION	2.1071901697623583E-5	DEFECT
// Check name is "antlib"	WITHOUT_CLASSIFICATION	0.9999999085670851	WITHOUT_CLASSIFICATION	9.143291489371147E-8	DEFECT
//include locally for screening purposes	WITHOUT_CLASSIFICATION	0.9999987305399746	WITHOUT_CLASSIFICATION	1.269460025430438E-6	DEFECT
// try to find the executable	WITHOUT_CLASSIFICATION	0.9999989080782603	WITHOUT_CLASSIFICATION	1.0919217396248637E-6	DEFECT
// now try to resolve against the dir if given	WITHOUT_CLASSIFICATION	0.9999999101521658	WITHOUT_CLASSIFICATION	8.984783419912444E-8	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999554955215	WITHOUT_CLASSIFICATION	4.4504478498603726E-7	DEFECT
// throw further	WITHOUT_CLASSIFICATION	0.9999618889738816	WITHOUT_CLASSIFICATION	3.811102611828122E-5	DEFECT
// only the first build exception is reported	WITHOUT_CLASSIFICATION	0.9999925618179915	WITHOUT_CLASSIFICATION	7.4381820085583355E-6	DEFECT
//include locally for screening purposes	WITHOUT_CLASSIFICATION	0.9999987305399746	WITHOUT_CLASSIFICATION	1.269460025430438E-6	DEFECT
// mustSearchPath is false, or no PATH or not found - keep our // fingers crossed.	WITHOUT_CLASSIFICATION	0.9999983588534952	WITHOUT_CLASSIFICATION	1.6411465048315282E-6	DEFECT
// Quick fail if this is not a valid OS for the command	WITHOUT_CLASSIFICATION	0.9993606108693349	WITHOUT_CLASSIFICATION	6.393891306650458E-4	DEFECT
// possibly altered in prepareExec	WITHOUT_CLASSIFICATION	0.9999903705652552	WITHOUT_CLASSIFICATION	9.629434744799133E-6	DEFECT
//hand osfamily off to Os class, if set	WITHOUT_CLASSIFICATION	0.9998932714584042	WITHOUT_CLASSIFICATION	1.0672854159576711E-4	DEFECT
// this command will be executed only on the specified OS	WITHOUT_CLASSIFICATION	0.9532240794741694	WITHOUT_CLASSIFICATION	0.046775920525830454	DEFECT
// default directory to the project's base directory	WITHOUT_CLASSIFICATION	0.9999994993934738	WITHOUT_CLASSIFICATION	5.006065262715422E-7	DEFECT
// assume the worst	WITHOUT_CLASSIFICATION	0.9999997078193418	WITHOUT_CLASSIFICATION	2.9218065814326135E-7	DEFECT
//test for and handle a forced process death	WITHOUT_CLASSIFICATION	0.9999999938224455	WITHOUT_CLASSIFICATION	6.1775545455905155E-9	DEFECT
// show the command	WITHOUT_CLASSIFICATION	0.9999874526876349	WITHOUT_CLASSIFICATION	1.2547312365000741E-5	DEFECT
// close the output file if required	WITHOUT_CLASSIFICATION	0.9999995440839251	WITHOUT_CLASSIFICATION	4.559160748740114E-7	DEFECT
// Same as regular <copy> task... see at end-of-file!	WITHOUT_CLASSIFICATION	0.9999664508531277	WITHOUT_CLASSIFICATION	3.354914687222338E-5	DEFECT
// Override Task#init	WITHOUT_CLASSIFICATION	0.9999999813078762	WITHOUT_CLASSIFICATION	1.8692123922005444E-8	DEFECT
// Instantiate it	WITHOUT_CLASSIFICATION	0.9999964221448305	WITHOUT_CLASSIFICATION	3.5778551695137437E-6	DEFECT
// Default config of <mycopy> for our purposes.	WITHOUT_CLASSIFICATION	0.9999999662049869	WITHOUT_CLASSIFICATION	3.379501321850725E-8	DEFECT
// Override Task#execute	WITHOUT_CLASSIFICATION	0.9999999350885118	WITHOUT_CLASSIFICATION	6.491148821761335E-8	DEFECT
// The destination of the files to copy	WITHOUT_CLASSIFICATION	0.9999973605948392	WITHOUT_CLASSIFICATION	2.639405160768967E-6	DEFECT
// The complete list of files to copy	WITHOUT_CLASSIFICATION	0.9999890653479558	WITHOUT_CLASSIFICATION	1.0934652044132154E-5	DEFECT
// Copy all the necessary out-of-date files	WITHOUT_CLASSIFICATION	0.9999997377417055	WITHOUT_CLASSIFICATION	2.622582945221205E-7	DEFECT
// Do we need to perform further processing?	WITHOUT_CLASSIFICATION	0.9999999196838653	WITHOUT_CLASSIFICATION	8.031613484389211E-8	DEFECT
// nope ;-)	WITHOUT_CLASSIFICATION	0.9999978508634293	WITHOUT_CLASSIFICATION	2.1491365707331546E-6	DEFECT
// Get rid of all files not listed in the source filesets.	WITHOUT_CLASSIFICATION	0.9999997544879433	WITHOUT_CLASSIFICATION	2.455120566892805E-7	DEFECT
// Get rid of empty directories on the destination side	WITHOUT_CLASSIFICATION	0.9999996256349157	WITHOUT_CLASSIFICATION	3.743650841831052E-7	DEFECT
// want to keep toDir itself	WITHOUT_CLASSIFICATION	0.9999998293443083	WITHOUT_CLASSIFICATION	1.706556916250991E-7	DEFECT
// ds returns the directories in lexicographic order. // iterating through the array backwards means we are deleting // leaves before their parent nodes - thus making sure (well, // more likely) that the directories are empty when we try to // delete them.	WITHOUT_CLASSIFICATION	0.999999892511254	WITHOUT_CLASSIFICATION	1.074887459852056E-7	DEFECT
// Test here again to avoid method call for non-directories!	WITHOUT_CLASSIFICATION	0.999998330053882	WITHOUT_CLASSIFICATION	1.6699461179810452E-6	DEFECT
// must match the default value of Ant#inheritAll	WITHOUT_CLASSIFICATION	0.9999999699521808	WITHOUT_CLASSIFICATION	3.004781912227358E-8	DEFECT
// must match the default value of Ant#inheritRefs	WITHOUT_CLASSIFICATION	0.9999999869700921	WITHOUT_CLASSIFICATION	1.3029907929565406E-8	DEFECT
/*<TargetElement>*/	WITHOUT_CLASSIFICATION	0.9999981370257061	WITHOUT_CLASSIFICATION	1.8629742939100617E-6	DEFECT
// check if one of the builds failed in keep going mode	WITHOUT_CLASSIFICATION	0.9999996382569655	WITHOUT_CLASSIFICATION	3.6174303458658864E-7	DEFECT
//     REVISIT: Defaults to the target name that contains this task if not specified.	WITHOUT_CLASSIFICATION	0.9999997500812011	WITHOUT_CLASSIFICATION	2.49918798944056E-7	DEFECT
// END class SubAnt	WITHOUT_CLASSIFICATION	0.9999909390384564	WITHOUT_CLASSIFICATION	9.06096154372773E-6	DEFECT
// Child elements.	WITHOUT_CLASSIFICATION	0.9999997569731308	WITHOUT_CLASSIFICATION	2.430268691244985E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999993109983563	WITHOUT_CLASSIFICATION	6.890016436783456E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999554955215	WITHOUT_CLASSIFICATION	4.4504478498603726E-7	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.999993225734014	WITHOUT_CLASSIFICATION	6.774265985996825E-6	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.999993225734014	WITHOUT_CLASSIFICATION	6.774265985996825E-6	DEFECT
// Empty	WITHOUT_CLASSIFICATION	0.9999841565209235	WITHOUT_CLASSIFICATION	1.5843479076393726E-5	DEFECT
// this command will be executed only on the specified OS	WITHOUT_CLASSIFICATION	0.9532240794741694	WITHOUT_CLASSIFICATION	0.046775920525830454	DEFECT
// default directory to the project's base directory	WITHOUT_CLASSIFICATION	0.9999994993934738	WITHOUT_CLASSIFICATION	5.006065262715422E-7	DEFECT
// assume the worst	WITHOUT_CLASSIFICATION	0.9999997078193418	WITHOUT_CLASSIFICATION	2.9218065814326135E-7	DEFECT
// show the command	WITHOUT_CLASSIFICATION	0.9999874526876349	WITHOUT_CLASSIFICATION	1.2547312365000741E-5	DEFECT
// close the output file if required	WITHOUT_CLASSIFICATION	0.9999995440839251	WITHOUT_CLASSIFICATION	4.559160748740114E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999998068383374	WITHOUT_CLASSIFICATION	1.9316166246942935E-7	DEFECT
// This directory may have become empty... // We need to re-query its children list!	WITHOUT_CLASSIFICATION	0.9446652019856886	WITHOUT_CLASSIFICATION	0.05533479801431139	DEFECT
// // Various copy attributes/subelements of <copy> passed thru to <mycopy> //	WITHOUT_CLASSIFICATION	0.9999998409724712	WITHOUT_CLASSIFICATION	1.590275288551409E-7	DEFECT
// List of files that must be copied, irrelevant from the // fact that they are newer or not than the destination.	WITHOUT_CLASSIFICATION	0.9999999780665285	WITHOUT_CLASSIFICATION	2.193347145169877E-8	DEFECT
// cf. NB #47191	WITHOUT_CLASSIFICATION	0.9999896198758651	WITHOUT_CLASSIFICATION	1.0380124134910434E-5	DEFECT
// Should work whether or not redirector.inputStream == null:	WITHOUT_CLASSIFICATION	0.9984901945778293	WITHOUT_CLASSIFICATION	0.0015098054221707002	DEFECT
// #24918: send standard input to the process by default.	WITHOUT_CLASSIFICATION	0.99997945758306	WITHOUT_CLASSIFICATION	2.054241694007906E-5	DEFECT
// test if os match	WITHOUT_CLASSIFICATION	0.9999995228488608	WITHOUT_CLASSIFICATION	4.771511392282881E-7	DEFECT
// exec command on system runtime	WITHOUT_CLASSIFICATION	0.9995602255589289	WITHOUT_CLASSIFICATION	4.397744410711509E-4	DEFECT
// copy input and error to the output stream	WITHOUT_CLASSIFICATION	0.9999800865806446	WITHOUT_CLASSIFICATION	1.9913419355384383E-5	DEFECT
// starts pumping away the generated output/error	WITHOUT_CLASSIFICATION	0.9999967942367242	WITHOUT_CLASSIFICATION	3.205763275886566E-6	DEFECT
// Wait for everything to finish	WITHOUT_CLASSIFICATION	0.9999984060937654	WITHOUT_CLASSIFICATION	1.5939062345320975E-6	DEFECT
// check its exit value	WITHOUT_CLASSIFICATION	0.9999998167019418	WITHOUT_CLASSIFICATION	1.8329805820636502E-7	DEFECT
// Inner class for continually pumping the input stream during // Process's runtime.	WITHOUT_CLASSIFICATION	0.9999906833865262	WITHOUT_CLASSIFICATION	9.316613473748296E-6	DEFECT
// The size of buffers to be used	WITHOUT_CLASSIFICATION	0.9999728208573844	WITHOUT_CLASSIFICATION	2.7179142615645247E-5	DEFECT
// Attributes.	WITHOUT_CLASSIFICATION	0.9999994711416617	WITHOUT_CLASSIFICATION	5.288583383399733E-7	DEFECT
// Attribute setters.	WITHOUT_CLASSIFICATION	0.999999532881328	WITHOUT_CLASSIFICATION	4.671186720043819E-7	DEFECT
// Nested element creators.	WITHOUT_CLASSIFICATION	0.9999999955157529	WITHOUT_CLASSIFICATION	4.484246990336875E-9	DEFECT
// treat empty nested text as no text	WITHOUT_CLASSIFICATION	0.9999996581517911	WITHOUT_CLASSIFICATION	3.418482088331238E-7	DEFECT
// if binary check if incompatible attributes are used	WITHOUT_CLASSIFICATION	0.9999999943279917	WITHOUT_CLASSIFICATION	5.672008338347383E-9	DEFECT
// Sanity check our inputs.	WITHOUT_CLASSIFICATION	0.9999999789062183	WITHOUT_CLASSIFICATION	2.1093781715843793E-8	DEFECT
// Nothing to concatenate!	WITHOUT_CLASSIFICATION	0.9999998127235905	WITHOUT_CLASSIFICATION	1.872764095827458E-7	DEFECT
// no need to do anything	WITHOUT_CLASSIFICATION	0.9999994147732181	WITHOUT_CLASSIFICATION	5.852267819408949E-7	DEFECT
// Log using WARN so it displays in 'quiet' mode.	WITHOUT_CLASSIFICATION	0.9999964245311823	WITHOUT_CLASSIFICATION	3.5754688177562295E-6	DEFECT
// ensure that the parent dir of dest file exists	WITHOUT_CLASSIFICATION	0.9999988617566848	WITHOUT_CLASSIFICATION	1.1382433150844793E-6	DEFECT
// non-existing files are not allowed	WITHOUT_CLASSIFICATION	0.9999984878758686	WITHOUT_CLASSIFICATION	1.5121241312862354E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999554955215	WITHOUT_CLASSIFICATION	4.4504478498603726E-7	DEFECT
// Create a ZipFileSet for this file, and pass it up.	WITHOUT_CLASSIFICATION	0.9999987699591685	WITHOUT_CLASSIFICATION	1.2300408315838658E-6	DEFECT
// We just set the prefix for this fileset, and pass it up.	WITHOUT_CLASSIFICATION	0.9999960158609106	WITHOUT_CLASSIFICATION	3.984139089381047E-6	DEFECT
// by default, messages are always displayed	WITHOUT_CLASSIFICATION	0.9999999272546868	WITHOUT_CLASSIFICATION	7.274531317600896E-8	DEFECT
// close the output file if required	WITHOUT_CLASSIFICATION	0.9999995440839251	WITHOUT_CLASSIFICATION	4.559160748740114E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999998068383374	WITHOUT_CLASSIFICATION	1.9316166246942935E-7	DEFECT
// Initialize to the size of the first text fragment, with // the hopes that it's the only one.	WITHOUT_CLASSIFICATION	0.9999987397455595	WITHOUT_CLASSIFICATION	1.260254440481674E-6	DEFECT
// Append the fragment -- we defer property replacement until // later just in case we get a partial property in a fragment.	WITHOUT_CLASSIFICATION	0.9999927803242362	WITHOUT_CLASSIFICATION	7.219675763794105E-6	DEFECT
// If using resources, disallow inline text. This is similar to // using GNU 'cat' with file arguments -- stdin is simply // ignored.	WITHOUT_CLASSIFICATION	0.9999999909111433	WITHOUT_CLASSIFICATION	9.088856780949728E-9	DEFECT
/*package*/	WITHOUT_CLASSIFICATION	0.9999850625891894	WITHOUT_CLASSIFICATION	1.4937410810590538E-5	DEFECT
/*package*/	WITHOUT_CLASSIFICATION	0.9999850625891894	WITHOUT_CLASSIFICATION	1.4937410810590538E-5	DEFECT
// If the file being added is WEB-INF/web.xml, we warn if it's // not the one specified in the "webxml" attribute - or if // it's being added twice, meaning the same file is specified // by the "webxml" attribute and in a <fileset> element.	WITHOUT_CLASSIFICATION	0.999999978706673	WITHOUT_CLASSIFICATION	2.129332699111792E-8	DEFECT
//by default, we add the file.	WITHOUT_CLASSIFICATION	0.9999998926396868	WITHOUT_CLASSIFICATION	1.0736031307849076E-7	DEFECT
//a web.xml file was found. See if it is a duplicate or not	WITHOUT_CLASSIFICATION	0.9999994638450048	WITHOUT_CLASSIFICATION	5.361549951829457E-7	DEFECT
//a second web.xml file, so skip it	WITHOUT_CLASSIFICATION	0.9999971780371726	WITHOUT_CLASSIFICATION	2.821962827431032E-6	DEFECT
//check to see if we warn or not	WITHOUT_CLASSIFICATION	0.9999992065267946	WITHOUT_CLASSIFICATION	7.934732053323863E-7	DEFECT
//no added file, yet	WITHOUT_CLASSIFICATION	0.999996463168419	WITHOUT_CLASSIFICATION	3.5368315811269447E-6	DEFECT
//there is no web.xml file, so add it	WITHOUT_CLASSIFICATION	0.9999998106582428	WITHOUT_CLASSIFICATION	1.8934175721459402E-7	DEFECT
//and remember that we did	WITHOUT_CLASSIFICATION	0.9999865926319769	WITHOUT_CLASSIFICATION	1.340736802308518E-5	DEFECT
//validation	WITHOUT_CLASSIFICATION	0.9999392873278836	WITHOUT_CLASSIFICATION	6.0712672116447436E-5	DEFECT
//discard most of really big resources	WITHOUT_CLASSIFICATION	0.9999996380715107	WITHOUT_CLASSIFICATION	3.6192848923901045E-7	DEFECT
//open up the resource	WITHOUT_CLASSIFICATION	0.9999984948005883	WITHOUT_CLASSIFICATION	1.505199411616692E-6	DEFECT
// impossible since *our* processLine doesn't throw an IOException	WITHOUT_CLASSIFICATION	0.9999977247185009	WITHOUT_CLASSIFICATION	2.275281499027059E-6	DEFECT
// There have been reports that 300 files could be compiled // so 250 is a conservative approach	WITHOUT_CLASSIFICATION	0.9999553231874311	WITHOUT_CLASSIFICATION	4.467681256898354E-5	DEFECT
// We assume, that everything jikes writes goes to // standard output, not to standard error. The option // -Xstdout that is given to Jikes in Javac.doJikesCompile() // should guarantee this. At least I hope so. :)	WITHOUT_CLASSIFICATION	0.9963404268019259	WITHOUT_CLASSIFICATION	0.003659573198074072	DEFECT
//if we have a RedirectorElement, return a decoy	WITHOUT_CLASSIFICATION	0.999999425770751	WITHOUT_CLASSIFICATION	5.742292491572394E-7	DEFECT
// 0 --> srcIndex	WITHOUT_CLASSIFICATION	0.9999883297338886	WITHOUT_CLASSIFICATION	1.1670266111390285E-5	DEFECT
// srcIndex --> targetIndex	WITHOUT_CLASSIFICATION	0.9999991906128792	WITHOUT_CLASSIFICATION	8.093871207572706E-7	DEFECT
// targets are already absolute file names	WITHOUT_CLASSIFICATION	0.9999999920470904	WITHOUT_CLASSIFICATION	7.952909505732517E-9	DEFECT
// targetIndex --> end	WITHOUT_CLASSIFICATION	0.9999951439098731	WITHOUT_CLASSIFICATION	4.8560901268396425E-6	DEFECT
// 0 --> targetIndex	WITHOUT_CLASSIFICATION	0.9999955993193933	WITHOUT_CLASSIFICATION	4.400680606642557E-6	DEFECT
// 0 --> srcIndex	WITHOUT_CLASSIFICATION	0.9999883297338886	WITHOUT_CLASSIFICATION	1.1670266111390285E-5	DEFECT
// contains AbstractFileSet // (both DirSet and FileSet)	WITHOUT_CLASSIFICATION	0.9999997500480138	WITHOUT_CLASSIFICATION	2.499519862163885E-7	DEFECT
// need to reset the stream handler to restart // reading of pipes; // go ahead and do it always w/ nested redirectors	WITHOUT_CLASSIFICATION	0.9999999691269904	WITHOUT_CLASSIFICATION	3.087300960194599E-8	DEFECT
// need to reset the stream handler to restart // reading of pipes; // go ahead and do it always w/ nested redirectors	WITHOUT_CLASSIFICATION	0.9999999691269904	WITHOUT_CLASSIFICATION	3.087300960194599E-8	DEFECT
// targets are already absolute file names	WITHOUT_CLASSIFICATION	0.9999999920470904	WITHOUT_CLASSIFICATION	7.952909505732517E-9	DEFECT
// targetIndex --> srcIndex	WITHOUT_CLASSIFICATION	0.9999981654739168	WITHOUT_CLASSIFICATION	1.8345260831267248E-6	DEFECT
// srcIndex --> end	WITHOUT_CLASSIFICATION	0.9999909822424194	WITHOUT_CLASSIFICATION	9.017757580595994E-6	DEFECT
// srcIndex --> end	WITHOUT_CLASSIFICATION	0.9999909822424194	WITHOUT_CLASSIFICATION	9.017757580595994E-6	DEFECT
// no targetFilePos	WITHOUT_CLASSIFICATION	0.9999999811482431	WITHOUT_CLASSIFICATION	1.8851756901151253E-8	DEFECT
// fill in source file names	WITHOUT_CLASSIFICATION	0.9999998992702606	WITHOUT_CLASSIFICATION	1.0072973935182388E-7	DEFECT
/* this is skipEmpty == false */	WITHOUT_CLASSIFICATION	0.9999585611234837	WITHOUT_CLASSIFICATION	4.143887651629966E-5	DEFECT
//if there is a new priority, and it is different, change it	WITHOUT_CLASSIFICATION	0.9999876381481083	WITHOUT_CLASSIFICATION	1.2361851891644064E-5	DEFECT
//catch permissions denial and keep going	WITHOUT_CLASSIFICATION	0.9999996067260618	WITHOUT_CLASSIFICATION	3.932739382604831E-7	DEFECT
//-- XSLTLiaison	WITHOUT_CLASSIFICATION	0.9999926083445494	WITHOUT_CLASSIFICATION	7.391655450611784E-6	DEFECT
// Write the properties file back out	WITHOUT_CLASSIFICATION	0.999994343095919	WITHOUT_CLASSIFICATION	5.656904081055847E-6	DEFECT
//Finally set the property	WITHOUT_CLASSIFICATION	0.9999768993695031	WITHOUT_CLASSIFICATION	2.3100630496971305E-5	DEFECT
// Try parsing the line into an integer.	WITHOUT_CLASSIFICATION	0.999998544842512	WITHOUT_CLASSIFICATION	1.4551574878932798E-6	DEFECT
//-- XSLTProcess	WITHOUT_CLASSIFICATION	0.999994219241926	WITHOUT_CLASSIFICATION	5.780758073925842E-6	DEFECT
// check if liaison wants to log errors using us as logger	WITHOUT_CLASSIFICATION	0.9999999951091932	WITHOUT_CLASSIFICATION	4.8908067658057185E-9	DEFECT
// If we enter here, it means that the stylesheet is supplied // via style attribute	WITHOUT_CLASSIFICATION	0.9998276038692754	WITHOUT_CLASSIFICATION	1.723961307247265E-4	DEFECT
/*                     * shouldn't throw out deprecation warnings before we know,                     * the wrong version has been used.                     */	WITHOUT_CLASSIFICATION	0.9997662658589691	WITHOUT_CLASSIFICATION	2.3373414103082277E-4	DEFECT
// if we have an in file and out then process them	WITHOUT_CLASSIFICATION	0.9999999808658876	WITHOUT_CLASSIFICATION	1.9134112413170317E-8	DEFECT
//-- make sure destination directory exists...	WITHOUT_CLASSIFICATION	0.9995975327910016	WITHOUT_CLASSIFICATION	4.024672089984243E-4	DEFECT
// Process all the files marked for styling	WITHOUT_CLASSIFICATION	0.9999997741724336	WITHOUT_CLASSIFICATION	2.2582756643373512E-7	DEFECT
// Process all the directories marked for styling	WITHOUT_CLASSIFICATION	0.9999997436164709	WITHOUT_CLASSIFICATION	2.563835290691964E-7	DEFECT
// only resource collections, there better be some	WITHOUT_CLASSIFICATION	0.9999971776466171	WITHOUT_CLASSIFICATION	2.8223533829232036E-6	DEFECT
//anything else is a classname	WITHOUT_CLASSIFICATION	0.9999926398076578	WITHOUT_CLASSIFICATION	7.3601923421199354E-6	DEFECT
//-- processXML	WITHOUT_CLASSIFICATION	0.9999885557609132	WITHOUT_CLASSIFICATION	1.1444239086854567E-5	DEFECT
// Param	WITHOUT_CLASSIFICATION	0.9999989193641526	WITHOUT_CLASSIFICATION	1.080635847370528E-6	DEFECT
// New env var...append the previous one if we have it.	WITHOUT_CLASSIFICATION	0.9999994817745893	WITHOUT_CLASSIFICATION	5.182254106740593E-7	DEFECT
// Mac	WITHOUT_CLASSIFICATION	0.9999959001337712	WITHOUT_CLASSIFICATION	4.099866228887659E-6	DEFECT
//validation	WITHOUT_CLASSIFICATION	0.9999392873278836	WITHOUT_CLASSIFICATION	6.0712672116447436E-5	DEFECT
// If failed to process document, must delete target document, // or it will not attempt to process it the second time	WITHOUT_CLASSIFICATION	0.9999905782771065	WITHOUT_CLASSIFICATION	9.421722893534526E-6	DEFECT
// if processor wasn't specified, see if TraX is available.  If not, // default it to xalan, depending on which is in the classpath	WITHOUT_CLASSIFICATION	0.9999999414716029	WITHOUT_CLASSIFICATION	5.8528397115029864E-8	DEFECT
// We call liason.configure() and then liaison.setStylesheet() // so that the internal variables of liaison can be set up	WITHOUT_CLASSIFICATION	0.999999863046912	WITHOUT_CLASSIFICATION	1.3695308795514375E-7	DEFECT
// If we are here we can set the stylesheet as a // resource	WITHOUT_CLASSIFICATION	0.9999975422740837	WITHOUT_CLASSIFICATION	2.457725916431513E-6	DEFECT
// If we are here we cannot set the stylesheet as // a resource, but we can set it as a file. So, // we make an attempt to get it as a file	WITHOUT_CLASSIFICATION	0.9998427846900243	WITHOUT_CLASSIFICATION	1.5721530997571685E-4	DEFECT
// Give always a slash as file separator, so the stylesheet could be sure about that // Use '.' so a dir+"/"+name would not result in an absolute path	WITHOUT_CLASSIFICATION	0.9999997813370028	WITHOUT_CLASSIFICATION	2.1866299722737627E-7	DEFECT
// only 'name' and 'value' exist.	WITHOUT_CLASSIFICATION	0.9999916782647931	WITHOUT_CLASSIFICATION	8.321735207033707E-6	DEFECT
// a value must be of a given type // say boolean|integer|string that are mostly used.	WITHOUT_CLASSIFICATION	0.9999999802100757	WITHOUT_CLASSIFICATION	1.9789924271065872E-8	DEFECT
// -- class Attribute	WITHOUT_CLASSIFICATION	0.9999987948936772	WITHOUT_CLASSIFICATION	1.2051063228738997E-6	DEFECT
// -- class Factory	WITHOUT_CLASSIFICATION	0.9999817121454708	WITHOUT_CLASSIFICATION	1.8287854529156084E-5	DEFECT
// error message strings	WITHOUT_CLASSIFICATION	0.9999983204182307	WITHOUT_CLASSIFICATION	1.6795817693756053E-6	DEFECT
//at this point there is one trailing space to remove, if the list is not empty.	WITHOUT_CLASSIFICATION	0.9999900136761379	WITHOUT_CLASSIFICATION	9.986323862151395E-6	DEFECT
//now exit here if the property is already set	WITHOUT_CLASSIFICATION	0.99996987716143	WITHOUT_CLASSIFICATION	3.0122838569970293E-5	DEFECT
//and add any files if also defined	WITHOUT_CLASSIFICATION	0.9999873682405809	WITHOUT_CLASSIFICATION	1.2631759419108568E-5	DEFECT
//add path URLs	WITHOUT_CLASSIFICATION	0.9999985232688232	WITHOUT_CLASSIFICATION	1.4767311767742783E-6	DEFECT
//create the URL //ant equivalent of  fileToConvert.toURI().toURL().toExternalForm();	WITHOUT_CLASSIFICATION	0.9999999679841602	WITHOUT_CLASSIFICATION	3.2015839704985765E-8	DEFECT
// if we run into a timeout, the run-away thread shall not // make the VM run forever - if no timeout occurs, Ant's // main thread will still be there to let the new thread // finish	WITHOUT_CLASSIFICATION	0.9999996357820596	WITHOUT_CLASSIFICATION	3.6421794033361134E-7	DEFECT
//Use the VM launcher instead of shell launcher on VMS	WITHOUT_CLASSIFICATION	0.9999882975317274	WITHOUT_CLASSIFICATION	1.1702468272674306E-5	DEFECT
/*     * Builds a command launcher for the OS and JVM we are running under.     */	WITHOUT_CLASSIFICATION	0.9999928935584064	WITHOUT_CLASSIFICATION	7.106441593668513E-6	DEFECT
// Try using a JDK 1.3 launcher	WITHOUT_CLASSIFICATION	0.9999997077257246	WITHOUT_CLASSIFICATION	2.9227427545831153E-7	DEFECT
// Ignore and keep trying	WITHOUT_CLASSIFICATION	0.9999998727198226	WITHOUT_CLASSIFICATION	1.2728017732430286E-7	DEFECT
// OS/2	WITHOUT_CLASSIFICATION	0.9999838517791363	WITHOUT_CLASSIFICATION	1.6148220863679544E-5	DEFECT
// Windows XP/2000/NT	WITHOUT_CLASSIFICATION	0.9995804182597697	WITHOUT_CLASSIFICATION	4.195817402303251E-4	DEFECT
// Windows 98/95 - need to use an auxiliary script	WITHOUT_CLASSIFICATION	0.9998559935634667	WITHOUT_CLASSIFICATION	1.4400643653333234E-4	DEFECT
// OpenVMS	WITHOUT_CLASSIFICATION	0.9999943065294831	WITHOUT_CLASSIFICATION	5.693470516886859E-6	DEFECT
// Generic	WITHOUT_CLASSIFICATION	0.9999967448835788	WITHOUT_CLASSIFICATION	3.2551164211836153E-6	DEFECT
// Make sure we do not recurse forever	WITHOUT_CLASSIFICATION	0.9999998757172347	WITHOUT_CLASSIFICATION	1.2428276525284465E-7	DEFECT
// Just try to use what we got	WITHOUT_CLASSIFICATION	0.9999998222350507	WITHOUT_CLASSIFICATION	1.777649493795139E-7	DEFECT
// Since we "look ahead" before adding, there's one last env var.	WITHOUT_CLASSIFICATION	0.9999995367959532	WITHOUT_CLASSIFICATION	4.632040468550032E-7	DEFECT
// Just try to see how much we got	WITHOUT_CLASSIFICATION	0.9999990433258017	WITHOUT_CLASSIFICATION	9.566741983034185E-7	DEFECT
// OS/2 - use same mechanism as Windows 2000	WITHOUT_CLASSIFICATION	0.9999782856753023	WITHOUT_CLASSIFICATION	2.17143246975955E-5	DEFECT
// Determine if we're running under XP/2000/NT or 98/95	WITHOUT_CLASSIFICATION	0.9999997594340478	WITHOUT_CLASSIFICATION	2.4056595215027436E-7	DEFECT
// Windows 98/95	WITHOUT_CLASSIFICATION	0.9997129180179768	WITHOUT_CLASSIFICATION	2.8708198202313735E-4	DEFECT
// Windows XP/2000/NT/2003	WITHOUT_CLASSIFICATION	0.9993067738283876	WITHOUT_CLASSIFICATION	6.93226171612343E-4	DEFECT
// On most systems one could use: /bin/sh -c env	WITHOUT_CLASSIFICATION	0.9997415562561446	WITHOUT_CLASSIFICATION	2.584437438554431E-4	DEFECT
// Some systems have /bin/env, others /usr/bin/env, just try	WITHOUT_CLASSIFICATION	0.9999999643480776	WITHOUT_CLASSIFICATION	3.565192238184186E-8	DEFECT
// rely on PATH	WITHOUT_CLASSIFICATION	0.999868543109681	WITHOUT_CLASSIFICATION	1.314568903189918E-4	DEFECT
// rely on PATH	WITHOUT_CLASSIFICATION	0.999868543109681	WITHOUT_CLASSIFICATION	1.314568903189918E-4	DEFECT
//noop default encoding used	WITHOUT_CLASSIFICATION	0.9999999643086779	WITHOUT_CLASSIFICATION	3.569132213022366E-8	DEFECT
//By default, use the shell launcher for VMS //	WITHOUT_CLASSIFICATION	0.9999970899323369	WITHOUT_CLASSIFICATION	2.9100676630478735E-6	DEFECT
// add the process to the list of those to destroy if the VM exits //	WITHOUT_CLASSIFICATION	0.9999999680967646	WITHOUT_CLASSIFICATION	3.190323540266192E-8	DEFECT
// #31928: forcibly kill it before continuing.	WITHOUT_CLASSIFICATION	0.9992543831105319	WITHOUT_CLASSIFICATION	7.456168894680961E-4	DEFECT
// remove the process to the list of those to destroy if // the VM exits //	WITHOUT_CLASSIFICATION	0.9999995925156611	WITHOUT_CLASSIFICATION	4.0748433896023843E-7	DEFECT
//on openvms even exit value signals failure; // for other platforms nonzero exit value signals failure	WITHOUT_CLASSIFICATION	0.9999929800287154	WITHOUT_CLASSIFICATION	7.019971284634553E-6	DEFECT
// Get key including "="	WITHOUT_CLASSIFICATION	0.9999996204446318	WITHOUT_CLASSIFICATION	3.7955536829851953E-7	DEFECT
// Nb: using default locale as key is a env name	WITHOUT_CLASSIFICATION	0.9999997045142066	WITHOUT_CLASSIFICATION	2.9548579346899144E-7	DEFECT
// Find the key in the current enviroment copy // and remove it.	WITHOUT_CLASSIFICATION	0.9999872498994072	WITHOUT_CLASSIFICATION	1.2750100592889988E-5	DEFECT
// Use the original casiness of the key	WITHOUT_CLASSIFICATION	0.9999990274843917	WITHOUT_CLASSIFICATION	9.725156083066457E-7	DEFECT
// Add the key to the enviromnent copy	WITHOUT_CLASSIFICATION	0.9999973669559358	WITHOUT_CLASSIFICATION	2.6330440643708757E-6	DEFECT
// parse the VMS logicals into required format ("VAR=VAL[,VAL2]")	WITHOUT_CLASSIFICATION	0.999935357192582	WITHOUT_CLASSIFICATION	6.464280741803548E-5	DEFECT
// further equivalence name of previous logical	WITHOUT_CLASSIFICATION	0.9999999837335259	WITHOUT_CLASSIFICATION	1.6266474020652305E-8	DEFECT
// new logical?	WITHOUT_CLASSIFICATION	0.9999988765895914	WITHOUT_CLASSIFICATION	1.123410408546381E-6	DEFECT
// already got this logical from a higher order table	WITHOUT_CLASSIFICATION	0.9999997266022485	WITHOUT_CLASSIFICATION	2.733977515418963E-7	DEFECT
/* the arguments: */	WITHOUT_CLASSIFICATION	0.9999972297348607	WITHOUT_CLASSIFICATION	2.7702651392466003E-6	DEFECT
// IllegalAccess, IllegalArgument, ClassCast	WITHOUT_CLASSIFICATION	0.9999999531166683	WITHOUT_CLASSIFICATION	4.688333173148004E-8	DEFECT
// Locate the auxiliary script	WITHOUT_CLASSIFICATION	0.999999918157917	WITHOUT_CLASSIFICATION	8.184208295287177E-8	DEFECT
// Build the command	WITHOUT_CLASSIFICATION	0.9999324513780042	WITHOUT_CLASSIFICATION	6.754862199574564E-5	DEFECT
// add the environment as logicals to the DCL script	WITHOUT_CLASSIFICATION	0.9999963700531007	WITHOUT_CLASSIFICATION	3.629946899387426E-6	DEFECT
//empty	WITHOUT_CLASSIFICATION	0.9999555957800104	WITHOUT_CLASSIFICATION	4.4404219989559545E-5	DEFECT
//empty	WITHOUT_CLASSIFICATION	0.9999555957800104	WITHOUT_CLASSIFICATION	4.4404219989559545E-5	DEFECT
// Locate method Runtime.exec(String[] cmdarray, //                            String[] envp, File dir)	WITHOUT_CLASSIFICATION	0.9999993081179035	WITHOUT_CLASSIFICATION	6.918820965883294E-7	DEFECT
// Use cmd.exe to change to the specified drive and // directory before running the command	WITHOUT_CLASSIFICATION	0.9999999152050286	WITHOUT_CLASSIFICATION	8.479497134679312E-8	DEFECT
// Use cmd.exe to change to the specified directory before running // the command	WITHOUT_CLASSIFICATION	0.9999998549950437	WITHOUT_CLASSIFICATION	1.4500495622019224E-7	DEFECT
// need to set the project on unknown element	WITHOUT_CLASSIFICATION	0.9999890480610568	WITHOUT_CLASSIFICATION	1.0951938943089165E-5	DEFECT
//************************************************************************ //  protected and private methods //************************************************************************	WITHOUT_CLASSIFICATION	0.9999960223763219	WITHOUT_CLASSIFICATION	3.977623678133213E-6	DEFECT
//Attempt complete directory renames, if any, first.	WITHOUT_CLASSIFICATION	0.9999991980869032	WITHOUT_CLASSIFICATION	8.019130967310564E-7	DEFECT
// files to move	WITHOUT_CLASSIFICATION	0.9999974461405863	WITHOUT_CLASSIFICATION	2.5538594137596525E-6	DEFECT
//Is this file still available to be moved?	WITHOUT_CLASSIFICATION	0.9999921484978478	WITHOUT_CLASSIFICATION	7.851502152246191E-6	DEFECT
// if this is the last time through the loop then // move will not occur, but that's what we want	WITHOUT_CLASSIFICATION	0.999998259448994	WITHOUT_CLASSIFICATION	1.740551005950151E-6	DEFECT
// maybe io error?	WITHOUT_CLASSIFICATION	0.9999066098848531	WITHOUT_CLASSIFICATION	9.339011514685558E-5	DEFECT
// found a file	WITHOUT_CLASSIFICATION	0.9999996150966496	WITHOUT_CLASSIFICATION	3.849033504216167E-7	DEFECT
// on an io error list() can return null	WITHOUT_CLASSIFICATION	0.9999997959203643	WITHOUT_CLASSIFICATION	2.0407963582038125E-7	DEFECT
// Whether *this VM* is 1.4+ (but also check executable != null).	WITHOUT_CLASSIFICATION	0.9999998619139902	WITHOUT_CLASSIFICATION	1.3808600986639296E-7	DEFECT
// ------------------------------------------ general Javadoc arguments	WITHOUT_CLASSIFICATION	0.9999999035435019	WITHOUT_CLASSIFICATION	9.645649813139928E-8	DEFECT
// ---------------------------- javadoc2 arguments for default doclet	WITHOUT_CLASSIFICATION	0.9999999325046435	WITHOUT_CLASSIFICATION	6.749535653782614E-8	DEFECT
// add the links arguments	WITHOUT_CLASSIFICATION	0.9999999909365916	WITHOUT_CLASSIFICATION	9.063408382716901E-9	DEFECT
// should be impossible	WITHOUT_CLASSIFICATION	0.9999933852281199	WITHOUT_CLASSIFICATION	6.614771880110829E-6	DEFECT
// is the href a valid URL	WITHOUT_CLASSIFICATION	0.9999997694162909	WITHOUT_CLASSIFICATION	2.305837090801496E-7	DEFECT
// ok - just skip	WITHOUT_CLASSIFICATION	0.9999995391257531	WITHOUT_CLASSIFICATION	4.608742469245516E-7	DEFECT
//return	WITHOUT_CLASSIFICATION	0.9999955252555605	WITHOUT_CLASSIFICATION	4.4747444395047085E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999554955215	WITHOUT_CLASSIFICATION	4.4504478498603726E-7	DEFECT
//validation logic	WITHOUT_CLASSIFICATION	0.9999831445376021	WITHOUT_CLASSIFICATION	1.6855462397917336E-5	DEFECT
// Ignore Exception	WITHOUT_CLASSIFICATION	0.999999483282535	WITHOUT_CLASSIFICATION	5.167174651062055E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999998068383374	WITHOUT_CLASSIFICATION	1.9316166246942935E-7	DEFECT
// Only try to move if this is the last mapped file // and one of the mappings isn't to itself	WITHOUT_CLASSIFICATION	0.9999915301606536	WITHOUT_CLASSIFICATION	8.469839346396797E-6	DEFECT
// createArgument(true) is necessary to make sure -locale // is the first argument (required in 1.3+).	WITHOUT_CLASSIFICATION	0.9999999960768157	WITHOUT_CLASSIFICATION	3.923184359527399E-9	DEFECT
// Go through the tokens one at a time, updating the // elements array and issuing warnings where appropriate.	WITHOUT_CLASSIFICATION	0.9999428260817922	WITHOUT_CLASSIFICATION	5.717391820768212E-5	DEFECT
// Ant javadoc task rules for group attribute: //   Args are comma-delimited. //   Each arg is 2 space-delimited strings. //   E.g., group="XSLT_Packages org.apache.xalan.xslt*, //                XPath_Packages org.apache.xalan.xpath*"	WITHOUT_CLASSIFICATION	0.999996096474666	WITHOUT_CLASSIFICATION	3.9035253339521145E-6	DEFECT
// add the group arguments	WITHOUT_CLASSIFICATION	0.9999999492875449	WITHOUT_CLASSIFICATION	5.0712455106436334E-8	DEFECT
// Javadoc 1.4 parameters	WITHOUT_CLASSIFICATION	0.9999999706834332	WITHOUT_CLASSIFICATION	2.931656685943525E-8	DEFECT
// The tag element is not used as a fileset, // but specifies the tag directly.	WITHOUT_CLASSIFICATION	0.9999968025237341	WITHOUT_CLASSIFICATION	3.197476265789922E-6	DEFECT
// The tag element is used as a // fileset. Parse all the files and create // -tag arguments.	WITHOUT_CLASSIFICATION	0.9999999892533807	WITHOUT_CLASSIFICATION	1.0746619178240891E-8	DEFECT
// Not 1.4+.	WITHOUT_CLASSIFICATION	0.9999977198599354	WITHOUT_CLASSIFICATION	2.2801400645878905E-6	DEFECT
// Javadoc 1.2/1.3 parameters:	WITHOUT_CLASSIFICATION	0.999999834941148	WITHOUT_CLASSIFICATION	1.6505885196697134E-7	DEFECT
// If using an external file, write the command line options to it	WITHOUT_CLASSIFICATION	0.9999967453480441	WITHOUT_CLASSIFICATION	3.2546519559658143E-6	DEFECT
// If using an external file, write the command line options to it	WITHOUT_CLASSIFICATION	0.9999967453480441	WITHOUT_CLASSIFICATION	3.2546519559658143E-6	DEFECT
/*         * No reason to change the working directory as all filenames and         * path components have been resolved already.         *         * Avoid problems with command line length in some environments.         */	WITHOUT_CLASSIFICATION	0.9995840866273346	WITHOUT_CLASSIFICATION	4.159133726655181E-4	DEFECT
// are there any java files in this directory?	WITHOUT_CLASSIFICATION	0.9999839761430246	WITHOUT_CLASSIFICATION	1.602385697538327E-5	DEFECT
// We don't need to care for duplicates here, // Path.list does it for us.	WITHOUT_CLASSIFICATION	0.9999984106507707	WITHOUT_CLASSIFICATION	1.5893492292870615E-6	DEFECT
// CheckStyle:MethodNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9999995559756635	WITHOUT_CLASSIFICATION	4.440243364907797E-7	DEFECT
/* Methods below all add specific selectors */	WITHOUT_CLASSIFICATION	0.9999999382459035	WITHOUT_CLASSIFICATION	6.1754096515548E-8	DEFECT
//convert a class name into a resource	WITHOUT_CLASSIFICATION	0.999999067188927	WITHOUT_CLASSIFICATION	9.328110730785949E-7	DEFECT
//set the property	WITHOUT_CLASSIFICATION	0.9999906706240699	WITHOUT_CLASSIFICATION	9.329375930052648E-6	DEFECT
// line feed	WITHOUT_CLASSIFICATION	0.9999921336592742	WITHOUT_CLASSIFICATION	7.866340725791816E-6	DEFECT
// by default, remove matching empty dirs	WITHOUT_CLASSIFICATION	0.999999539807889	WITHOUT_CLASSIFICATION	4.6019211100530934E-7	DEFECT
// delete the single file	WITHOUT_CLASSIFICATION	0.9999995996084948	WITHOUT_CLASSIFICATION	4.0039150510514104E-7	DEFECT
// delete the directory	WITHOUT_CLASSIFICATION	0.999999192103898	WITHOUT_CLASSIFICATION	8.078961019376748E-7	DEFECT
//add the files from the default fileset:	WITHOUT_CLASSIFICATION	0.9999999283578842	WITHOUT_CLASSIFICATION	7.164211579443365E-8	DEFECT
// sort first to files, then dirs	WITHOUT_CLASSIFICATION	0.9999994426143347	WITHOUT_CLASSIFICATION	5.573856653474123E-7	DEFECT
/*                 * Plain impossible with UTF8, see                 * http://java.sun.com/j2se/1.5.0/docs/guide/intl/encoding.doc.html                 *                 * fallback to platform specific anyway.                 */	WITHOUT_CLASSIFICATION	0.99999956313517	WITHOUT_CLASSIFICATION	4.368648299787939E-7	DEFECT
//patch the redirector to save output to a file	WITHOUT_CLASSIFICATION	0.999999942649812	WITHOUT_CLASSIFICATION	5.7350188187294073E-8	DEFECT
//verify special operations	WITHOUT_CLASSIFICATION	0.9999999335736993	WITHOUT_CLASSIFICATION	6.642630072940774E-8	DEFECT
//JAR  is required	WITHOUT_CLASSIFICATION	0.999753015030189	WITHOUT_CLASSIFICATION	2.4698496981092385E-4	DEFECT
//deal with jdk1.4.2 bug:	WITHOUT_CLASSIFICATION	0.9999344989254022	WITHOUT_CLASSIFICATION	6.550107459782355E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999998068383374	WITHOUT_CLASSIFICATION	1.9316166246942935E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999554955215	WITHOUT_CLASSIFICATION	4.4504478498603726E-7	DEFECT
// now we need to populate the compiler adapter	WITHOUT_CLASSIFICATION	0.9999986573997032	WITHOUT_CLASSIFICATION	1.3426002967444053E-6	DEFECT
// finally, lets execute the compiler!!	WITHOUT_CLASSIFICATION	0.9999699776456452	WITHOUT_CLASSIFICATION	3.002235435474737E-5	DEFECT
//validation	WITHOUT_CLASSIFICATION	0.9999392873278836	WITHOUT_CLASSIFICATION	6.0712672116447436E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999998068383374	WITHOUT_CLASSIFICATION	1.9316166246942935E-7	DEFECT
// nonexistent resources could only occur if we already // deleted something from a fileset:	WITHOUT_CLASSIFICATION	0.9999995071170166	WITHOUT_CLASSIFICATION	4.928829835202357E-7	DEFECT
//cache	WITHOUT_CLASSIFICATION	0.999993514294631	WITHOUT_CLASSIFICATION	6.4857053690187735E-6	DEFECT
// no include pattern implicitly means includes="**"	WITHOUT_CLASSIFICATION	0.9999989109719267	WITHOUT_CLASSIFICATION	1.0890280733235523E-6	DEFECT
//Do not process this file	WITHOUT_CLASSIFICATION	0.9999896811671958	WITHOUT_CLASSIFICATION	1.0318832804182097E-5	DEFECT
// make sure facade knows about magic properties and fork setting	WITHOUT_CLASSIFICATION	0.9999981122768281	WITHOUT_CLASSIFICATION	1.8877231719057103E-6	DEFECT
// deal with the resources	WITHOUT_CLASSIFICATION	0.9999986603453673	WITHOUT_CLASSIFICATION	1.339654632667377E-6	DEFECT
// Make a transaction for each resource	WITHOUT_CLASSIFICATION	0.9999981377803758	WITHOUT_CLASSIFICATION	1.8622196240626516E-6	DEFECT
// Make a transaction group for the outer command	WITHOUT_CLASSIFICATION	0.9999898233710066	WITHOUT_CLASSIFICATION	1.0176628993347545E-5	DEFECT
// Process all transactions	WITHOUT_CLASSIFICATION	0.9999999191457769	WITHOUT_CLASSIFICATION	8.08542231115239E-8	DEFECT
// Catch any statements not followed by ;	WITHOUT_CLASSIFICATION	0.9999966406864699	WITHOUT_CLASSIFICATION	3.3593135302033852E-6	DEFECT
// Check and ignore empty statements	WITHOUT_CLASSIFICATION	0.9999999921728409	WITHOUT_CLASSIFICATION	7.82715911362307E-9	DEFECT
/*     * Closes an unused connection after an error and doesn't rethrow     * a possible SQLException     * @since Ant 1.7     */	WITHOUT_CLASSIFICATION	0.9999997368935836	WITHOUT_CLASSIFICATION	2.6310641641953616E-7	DEFECT
// dreaded backwards compatibility	WITHOUT_CLASSIFICATION	0.9999978705277732	WITHOUT_CLASSIFICATION	2.1294722268471214E-6	DEFECT
/*Throw an exception if cvs exited with error. (Iulian)*/	WITHOUT_CLASSIFICATION	0.9999648833060514	WITHOUT_CLASSIFICATION	3.5116693948594166E-5	DEFECT
// re-implement legacy behaviour:	WITHOUT_CLASSIFICATION	0.999968139652294	WITHOUT_CLASSIFICATION	3.18603477058792E-5	DEFECT
// Check if not real cvsroot => set it to null	WITHOUT_CLASSIFICATION	0.9999990672088969	WITHOUT_CLASSIFICATION	9.327911029896748E-7	DEFECT
// Check if not real cvsrsh => set it to null	WITHOUT_CLASSIFICATION	0.9999992228268242	WITHOUT_CLASSIFICATION	7.771731757131817E-7	DEFECT
// Check if not real tag => set it to null	WITHOUT_CLASSIFICATION	0.9999996019361068	WITHOUT_CLASSIFICATION	3.9806389322847855E-7	DEFECT
// close the output file if required	WITHOUT_CLASSIFICATION	0.9999995440839251	WITHOUT_CLASSIFICATION	4.559160748740114E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999998068383374	WITHOUT_CLASSIFICATION	1.9316166246942935E-7	DEFECT
//req // req	WITHOUT_CLASSIFICATION	0.999990187081266	WITHOUT_CLASSIFICATION	9.812918734083385E-6	DEFECT
// scan source directories and dest directory to build up // compile lists	WITHOUT_CLASSIFICATION	0.9999998516570915	WITHOUT_CLASSIFICATION	1.4834290856169662E-7	DEFECT
//there is no need to expand properties here as that happens when Transaction.addText is //called; to do so here would be an error.	WITHOUT_CLASSIFICATION	0.9995440768470406	WITHOUT_CLASSIFICATION	4.559231529594548E-4	DEFECT
//there are places (in this file, and perhaps elsewhere, where it is assumed //that null is an acceptable parameter.	WITHOUT_CLASSIFICATION	0.999999930673694	WITHOUT_CLASSIFICATION	6.932630602322139E-8	DEFECT
// We can't do it ourselves as jCVS is GPLed, a third party task // outside of jakarta repositories would be possible though (SB).	WITHOUT_CLASSIFICATION	0.999982865841732	WITHOUT_CLASSIFICATION	1.7134158268026474E-5	DEFECT
// // Just call the getExecuteStreamHandler() and let it handle //     the semantics of instantiation or retrieval. //	WITHOUT_CLASSIFICATION	0.9997846911178072	WITHOUT_CLASSIFICATION	2.1530888219272557E-4	DEFECT
// we are chmodding the given directory	WITHOUT_CLASSIFICATION	0.999979284187152	WITHOUT_CLASSIFICATION	2.0715812848053583E-5	DEFECT
// may be altered in validateAttributes	WITHOUT_CLASSIFICATION	0.9999979577731299	WITHOUT_CLASSIFICATION	2.042226870039537E-6	DEFECT
// will be removed in validateAttributes	WITHOUT_CLASSIFICATION	0.9999639142923069	WITHOUT_CLASSIFICATION	3.608570769305649E-5	DEFECT
// make sure we don't have an illegal set of options	WITHOUT_CLASSIFICATION	0.9999991759498498	WITHOUT_CLASSIFICATION	8.240501503531016E-7	DEFECT
// deal with the single file	WITHOUT_CLASSIFICATION	0.99999934416359	WITHOUT_CLASSIFICATION	6.558364098981398E-7	DEFECT
// deal with the ResourceCollections	WITHOUT_CLASSIFICATION	0.9999991143242241	WITHOUT_CLASSIFICATION	8.856757760227636E-7	DEFECT
// Step (1) - beware of the ZipFileSet	WITHOUT_CLASSIFICATION	0.9999996551165524	WITHOUT_CLASSIFICATION	3.4488344756204184E-7	DEFECT
// not a fileset or contains non-file resources	WITHOUT_CLASSIFICATION	0.9999991943078503	WITHOUT_CLASSIFICATION	8.056921496203106E-7	DEFECT
// copying of dirs is trivial and can be done // for non-file resources as well as for real // files.	WITHOUT_CLASSIFICATION	0.999999165777416	WITHOUT_CLASSIFICATION	8.342225840201722E-7	DEFECT
// a not-directory file resource // needs special treatment	WITHOUT_CLASSIFICATION	0.9999990577258825	WITHOUT_CLASSIFICATION	9.422741175686764E-7	DEFECT
// do all the copy operations now...	WITHOUT_CLASSIFICATION	0.9999288777800843	WITHOUT_CLASSIFICATION	7.11222199157098E-5	DEFECT
// restrict to out-of-date resources	WITHOUT_CLASSIFICATION	0.9999995747814573	WITHOUT_CLASSIFICATION	4.252185426422031E-7	DEFECT
// clean up again, so this instance can be used a second // time	WITHOUT_CLASSIFICATION	0.9999988326251711	WITHOUT_CLASSIFICATION	1.167374828954073E-6	DEFECT
// reuse the array created by the mapper	WITHOUT_CLASSIFICATION	0.9999999190910311	WITHOUT_CLASSIFICATION	8.090896877747238E-8	DEFECT
// reuse the array created by the mapper	WITHOUT_CLASSIFICATION	0.9999999190910311	WITHOUT_CLASSIFICATION	8.090896877747238E-8	DEFECT
//now patch in all system properties	WITHOUT_CLASSIFICATION	0.9999928083793737	WITHOUT_CLASSIFICATION	7.191620626382624E-6	DEFECT
// is the keystore a file	WITHOUT_CLASSIFICATION	0.9999996461018799	WITHOUT_CLASSIFICATION	3.538981201129005E-7	DEFECT
// must be a URL - just pass as is	WITHOUT_CLASSIFICATION	0.9999995794175873	WITHOUT_CLASSIFICATION	4.2058241266529656E-7	DEFECT
// Gump friendly - don't mess with the core loader if only classpath	WITHOUT_CLASSIFICATION	0.9998315823479801	WITHOUT_CLASSIFICATION	1.6841765201993682E-4	DEFECT
// Construct a new class loader	WITHOUT_CLASSIFICATION	0.999999959595234	WITHOUT_CLASSIFICATION	4.040476585489737E-8	DEFECT
// The param is "parentFirst"	WITHOUT_CLASSIFICATION	0.9999964132122772	WITHOUT_CLASSIFICATION	3.586787722799492E-6	DEFECT
/*public*/	WITHOUT_CLASSIFICATION	0.99994015479351	WITHOUT_CLASSIFICATION	5.9845206490139326E-5	DEFECT
//shield it from being closed by a filtering StreamPumper	WITHOUT_CLASSIFICATION	0.9999995973861769	WITHOUT_CLASSIFICATION	4.0261382314801014E-7	DEFECT
//shield it from being closed by a filtering StreamPumper	WITHOUT_CLASSIFICATION	0.9999995973861769	WITHOUT_CLASSIFICATION	4.0261382314801014E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999998068383374	WITHOUT_CLASSIFICATION	1.9316166246942935E-7	DEFECT
// set read-only properties // CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999998624545966	WITHOUT_CLASSIFICATION	1.3754540346474184E-7	DEFECT
// Are any other references held ? Can we 'close' the loader // so it removes the locks on jars ? // a new one will be created.	WITHOUT_CLASSIFICATION	0.9999939422105284	WITHOUT_CLASSIFICATION	6.0577894716713484E-6	DEFECT
// The core loader must be reverse //reverse=true;	WITHOUT_CLASSIFICATION	0.999999800720487	WITHOUT_CLASSIFICATION	1.9927951303619234E-7	DEFECT
// This allows the core loader to load optional tasks // without delegating	WITHOUT_CLASSIFICATION	0.9999977134902913	WITHOUT_CLASSIFICATION	2.2865097087906613E-6	DEFECT
//wait for the StreamPumpers to finish	WITHOUT_CLASSIFICATION	0.9999985975377289	WITHOUT_CLASSIFICATION	1.4024622709915874E-6	DEFECT
// Ignore exception	WITHOUT_CLASSIFICATION	0.9999992432253084	WITHOUT_CLASSIFICATION	7.567746914915228E-7	DEFECT
// Normalize the reference directory (containing the jar)	WITHOUT_CLASSIFICATION	0.9999999854758789	WITHOUT_CLASSIFICATION	1.4524121106290635E-8	DEFECT
// Normalize the current file	WITHOUT_CLASSIFICATION	0.9999999909613577	WITHOUT_CLASSIFICATION	9.038642306502253E-9	DEFECT
// No match, so bail out!	WITHOUT_CLASSIFICATION	0.9999998605976066	WITHOUT_CLASSIFICATION	1.394023934536102E-7	DEFECT
// Finally assign the property with the manifest classpath	WITHOUT_CLASSIFICATION	0.9999883082997096	WITHOUT_CLASSIFICATION	1.1691700290318146E-5	DEFECT
// try to find a MAX_LINE_LENGTH byte section	WITHOUT_CLASSIFICATION	0.9999941709257282	WITHOUT_CLASSIFICATION	5.829074271849576E-6	DEFECT
// continuation line	WITHOUT_CLASSIFICATION	0.9999986186972172	WITHOUT_CLASSIFICATION	1.3813027827440625E-6	DEFECT
// refresh attribute in case of multivalued attributes.	WITHOUT_CLASSIFICATION	0.9999999136556462	WITHOUT_CLASSIFICATION	8.634435375110275E-8	DEFECT
// the merge file always wins	WITHOUT_CLASSIFICATION	0.9999974332644042	WITHOUT_CLASSIFICATION	2.566735595817858E-6	DEFECT
// the merge file *always* wins, even for Class-Path	WITHOUT_CLASSIFICATION	0.9999955882372513	WITHOUT_CLASSIFICATION	4.411762748656161E-6	DEFECT
// add in the warnings	WITHOUT_CLASSIFICATION	0.9999997525218013	WITHOUT_CLASSIFICATION	2.474781987622774E-7	DEFECT
// This should be the manifest version	WITHOUT_CLASSIFICATION	0.9999272212853543	WITHOUT_CLASSIFICATION	7.277871464570259E-5	DEFECT
// add it back	WITHOUT_CLASSIFICATION	0.999986832619163	WITHOUT_CLASSIFICATION	1.3167380836917782E-5	DEFECT
// shouldn't happen - ignore	WITHOUT_CLASSIFICATION	0.9999746856924602	WITHOUT_CLASSIFICATION	2.531430753974261E-5	DEFECT
// create a vector and add in the warnings for all the sections	WITHOUT_CLASSIFICATION	0.9999701958049163	WITHOUT_CLASSIFICATION	2.9804195083648283E-5	DEFECT
//off by default	WITHOUT_CLASSIFICATION	0.9999986340455255	WITHOUT_CLASSIFICATION	1.3659544745135944E-6	DEFECT
//set up logging	WITHOUT_CLASSIFICATION	0.9999999113258352	WITHOUT_CLASSIFICATION	8.867416481185878E-8	DEFECT
//execute the get	WITHOUT_CLASSIFICATION	0.999969557667578	WITHOUT_CLASSIFICATION	3.044233242202876E-5	DEFECT
//dont do any progress, unless asked	WITHOUT_CLASSIFICATION	0.9999990326962489	WITHOUT_CLASSIFICATION	9.673037510907176E-7	DEFECT
//set the timestamp to the file date.	WITHOUT_CLASSIFICATION	0.9999998927693752	WITHOUT_CLASSIFICATION	1.0723062480917206E-7	DEFECT
//set up the URL connection	WITHOUT_CLASSIFICATION	0.9999998791016159	WITHOUT_CLASSIFICATION	1.2089838410705829E-7	DEFECT
// Create as many directory prefixes as parent levels to traverse, // in addition to the reference directory itself	WITHOUT_CLASSIFICATION	0.9999985813816439	WITHOUT_CLASSIFICATION	1.4186183561400276E-6	DEFECT
// Find the longest prefix shared by the current file // and the reference directory.	WITHOUT_CLASSIFICATION	0.9999999618036991	WITHOUT_CLASSIFICATION	3.819630088073069E-8	DEFECT
// We have a match! Add as many ../ as parent // directory traversed to get the relative path	WITHOUT_CLASSIFICATION	0.9999796324263799	WITHOUT_CLASSIFICATION	2.0367573620079005E-5	DEFECT
// Manifest's ClassPath: attribute always uses forward // slashes '/', and is space-separated. Ant will properly // format it on 72 columns with proper line continuation	WITHOUT_CLASSIFICATION	0.9999228224920539	WITHOUT_CLASSIFICATION	7.717750794603237E-5	DEFECT
// a continuation on the first line is a // continuation of the name - concatenate this // line and the name	WITHOUT_CLASSIFICATION	0.9999999295592422	WITHOUT_CLASSIFICATION	7.044075785732856E-8	DEFECT
// required // required	WITHOUT_CLASSIFICATION	0.9999951169374528	WITHOUT_CLASSIFICATION	4.883062547196657E-6	DEFECT
//modify the headers //NB: things like user authentication could go in here too.	WITHOUT_CLASSIFICATION	0.8994420180968301	WITHOUT_CLASSIFICATION	0.10055798190316992	DEFECT
// prepare Java 1.1 style credentials	WITHOUT_CLASSIFICATION	0.9999996265311649	WITHOUT_CLASSIFICATION	3.7346883508491604E-7	DEFECT
//we do not use the sun impl for portability, //and always use our own implementation for consistent //testing	WITHOUT_CLASSIFICATION	0.9999991306964645	WITHOUT_CLASSIFICATION	8.693035354308648E-7	DEFECT
//connect to the remote site (may take some time)	WITHOUT_CLASSIFICATION	0.9997402882043087	WITHOUT_CLASSIFICATION	2.597117956912913E-4	DEFECT
//next test for a 304 result (HTTP only)	WITHOUT_CLASSIFICATION	0.9999770758728852	WITHOUT_CLASSIFICATION	2.292412711477098E-5	DEFECT
// test for 401 result (HTTP only)	WITHOUT_CLASSIFICATION	0.9999952130465078	WITHOUT_CLASSIFICATION	4.78695349212981E-6	DEFECT
//REVISIT: at this point even non HTTP connections may //support the if-modified-since behaviour -we just check //the date of the content and skip the write if it is not //newer. Some protocols (FTP) don't include dates, of //course.	WITHOUT_CLASSIFICATION	0.9999428429695659	WITHOUT_CLASSIFICATION	5.715703043422543E-5	DEFECT
//this three attempt trick is to get round quirks in different //Java implementations. Some of them take a few goes to bind //property; we ignore the first couple of such failures.	WITHOUT_CLASSIFICATION	0.9999996901236148	WITHOUT_CLASSIFICATION	3.0987638523641794E-7	DEFECT
//successful download	WITHOUT_CLASSIFICATION	0.9999996505568286	WITHOUT_CLASSIFICATION	3.4944317150456927E-7	DEFECT
// this happens if the projecthelper was not registered with the project.	WITHOUT_CLASSIFICATION	0.9876195279381674	WITHOUT_CLASSIFICATION	0.012380472061832681	DEFECT
// methods to register and unregister shutdown hooks	WITHOUT_CLASSIFICATION	0.999988316441425	WITHOUT_CLASSIFICATION	1.16835585749739E-5	DEFECT
// check to see if the shutdown hook methods exists // (support pre-JDK 1.3 VMs)	WITHOUT_CLASSIFICATION	0.9999910859091083	WITHOUT_CLASSIFICATION	8.914090891637361E-6	DEFECT
// wait to add shutdown hook as needed	WITHOUT_CLASSIFICATION	0.9999913770118936	WITHOUT_CLASSIFICATION	8.62298810640108E-6	DEFECT
// it just won't be added as a shutdown hook... :(	WITHOUT_CLASSIFICATION	0.9972617176049151	WITHOUT_CLASSIFICATION	0.0027382823950848744	DEFECT
// shutdown already is in progress	WITHOUT_CLASSIFICATION	0.9999967116586295	WITHOUT_CLASSIFICATION	3.2883413706026837E-6	DEFECT
// Ignore Exception	WITHOUT_CLASSIFICATION	0.999999483282535	WITHOUT_CLASSIFICATION	5.167174651062055E-7	DEFECT
// shutdown already is in progress	WITHOUT_CLASSIFICATION	0.9999967116586295	WITHOUT_CLASSIFICATION	3.2883413706026837E-6	DEFECT
// I don't think we can use File - different rules // for relative paths.	WITHOUT_CLASSIFICATION	0.9999660641172663	WITHOUT_CLASSIFICATION	3.393588273381366E-5	DEFECT
// this happens if ant is used with a project // helper that doesn't set the import.	WITHOUT_CLASSIFICATION	0.9972051843169079	WITHOUT_CLASSIFICATION	0.0027948156830921674	DEFECT
// Paths are relative to the build file they're imported from, // *not* the current directory (same as entity includes).	WITHOUT_CLASSIFICATION	0.9999999112146475	WITHOUT_CLASSIFICATION	8.878535248322854E-8	DEFECT
// whether or not this ProcessDestroyer has been registered as a // shutdown hook	WITHOUT_CLASSIFICATION	0.9999444862276606	WITHOUT_CLASSIFICATION	5.5513772339488834E-5	DEFECT
// whether or not this ProcessDestroyer is currently running as // shutdown hook	WITHOUT_CLASSIFICATION	0.9987209525710868	WITHOUT_CLASSIFICATION	0.0012790474289131038	DEFECT
// this should return quickly, since it basically is a NO-OP.	WITHOUT_CLASSIFICATION	0.9997466533888705	WITHOUT_CLASSIFICATION	2.5334661112957695E-4	DEFECT
// the thread didn't die in time // it should not kill any processes unexpectedly	WITHOUT_CLASSIFICATION	0.9997947749020194	WITHOUT_CLASSIFICATION	2.0522509798059137E-4	DEFECT
// if this list is empty, register the shutdown hook	WITHOUT_CLASSIFICATION	0.9999912006961317	WITHOUT_CLASSIFICATION	8.799303868226583E-6	DEFECT
// need to load Task via system classloader or the new // task we want to define will never be a Task but always // be wrapped into a TaskAdapter.	WITHOUT_CLASSIFICATION	0.9999999619448428	WITHOUT_CLASSIFICATION	3.8055157154834194E-8	DEFECT
// generate classpath, because kjc doesn't support sourcepath.	WITHOUT_CLASSIFICATION	0.9999856070178631	WITHOUT_CLASSIFICATION	1.4392982136899325E-5	DEFECT
// generate the clsspath	WITHOUT_CLASSIFICATION	0.999999764978758	WITHOUT_CLASSIFICATION	2.3502124198190725E-7	DEFECT
// kjc don't have bootclasspath option.	WITHOUT_CLASSIFICATION	0.9999990671925684	WITHOUT_CLASSIFICATION	9.328074315285202E-7	DEFECT
// Process the factory class	WITHOUT_CLASSIFICATION	0.9999978974770617	WITHOUT_CLASSIFICATION	2.1025229383711383E-6	DEFECT
// Process the factory path	WITHOUT_CLASSIFICATION	0.9999995472451103	WITHOUT_CLASSIFICATION	4.52754889605628E-7	DEFECT
// Process the processor options	WITHOUT_CLASSIFICATION	0.9999997294637604	WITHOUT_CLASSIFICATION	2.7053623963502145E-7	DEFECT
//set up the javac options	WITHOUT_CLASSIFICATION	0.9999999954797537	WITHOUT_CLASSIFICATION	4.520246342656857E-9	DEFECT
//then add the Apt options	WITHOUT_CLASSIFICATION	0.9999998331598031	WITHOUT_CLASSIFICATION	1.6684019688377962E-7	DEFECT
//finally invoke APT // Use reflection to be able to build on all JDKs:	WITHOUT_CLASSIFICATION	0.9999622479566782	WITHOUT_CLASSIFICATION	3.775204332170145E-5	DEFECT
//rethrow build exceptions	WITHOUT_CLASSIFICATION	0.999994674078496	WITHOUT_CLASSIFICATION	5.3259215040785405E-6	DEFECT
//cast everything else to a build exception	WITHOUT_CLASSIFICATION	0.9999980376395747	WITHOUT_CLASSIFICATION	1.9623604252294904E-6	DEFECT
// Call the compile() method	WITHOUT_CLASSIFICATION	0.9999998595791918	WITHOUT_CLASSIFICATION	1.4042080828504573E-7	DEFECT
// jvc doesn't support bootclasspath dir (-bootclasspath) // so we'll emulate it for compatibility and convenience.	WITHOUT_CLASSIFICATION	0.9999999428701235	WITHOUT_CLASSIFICATION	5.712987638123607E-8	DEFECT
// jvc doesn't support an extension dir (-extdir) // so we'll emulate it for compatibility and convenience.	WITHOUT_CLASSIFICATION	0.9999992197316667	WITHOUT_CLASSIFICATION	7.802683333305959E-7	DEFECT
// jvc has no option for source-path so we // will add it to classpath.	WITHOUT_CLASSIFICATION	0.9999996023130219	WITHOUT_CLASSIFICATION	3.976869781572914E-7	DEFECT
// Add the Classpath before the "internal" one.	WITHOUT_CLASSIFICATION	0.9999998709175404	WITHOUT_CLASSIFICATION	1.290824596880315E-7	DEFECT
// Enable MS-Extensions and ...	WITHOUT_CLASSIFICATION	0.9999832388408554	WITHOUT_CLASSIFICATION	1.6761159144596987E-5	DEFECT
// ... do not display a Message about this.	WITHOUT_CLASSIFICATION	0.9999114846011531	WITHOUT_CLASSIFICATION	8.851539884695285E-5	DEFECT
// Do not display Logo	WITHOUT_CLASSIFICATION	0.999990459323644	WITHOUT_CLASSIFICATION	9.540676355983364E-6	DEFECT
//add the files	WITHOUT_CLASSIFICATION	0.9999993913257235	WITHOUT_CLASSIFICATION	6.086742765118969E-7	DEFECT
//run	WITHOUT_CLASSIFICATION	0.9999225959263387	WITHOUT_CLASSIFICATION	7.740407366140294E-5	DEFECT
//as new versions of java come out, add them to this test	WITHOUT_CLASSIFICATION	0.9999989554241824	WITHOUT_CLASSIFICATION	1.0445758176297033E-6	DEFECT
//on java<=1.3 the modern falls back to classic if it is not found //but on java>=1.4 we just bail out early	WITHOUT_CLASSIFICATION	0.9999343553201152	WITHOUT_CLASSIFICATION	6.564467988473312E-5	DEFECT
// does the modern compiler exist?	WITHOUT_CLASSIFICATION	0.9996793634553764	WITHOUT_CLASSIFICATION	3.206365446236018E-4	DEFECT
// CheckStyle:ConstantNameCheck ON // CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999517335876	WITHOUT_CLASSIFICATION	4.826641234824607E-8	DEFECT
// Combine the build classpath with the system classpath, in an // order determined by the value of build.sysclasspath	WITHOUT_CLASSIFICATION	0.9999998799863377	WITHOUT_CLASSIFICATION	1.2001366228782653E-7	DEFECT
// For -sourcepath, use the "sourcepath" value if present. // Otherwise default to the "srcdir" value.	WITHOUT_CLASSIFICATION	0.9999999971403902	WITHOUT_CLASSIFICATION	2.859609822980667E-9	DEFECT
// Just add "sourcepath" to classpath ( for JDK1.1 ) // as well as "bootclasspath" and "extdirs"	WITHOUT_CLASSIFICATION	0.9999999297078939	WITHOUT_CLASSIFICATION	7.029210615251051E-8	DEFECT
// If the buildfile specifies sourcepath="", then don't // output any sourcepath.	WITHOUT_CLASSIFICATION	0.9999853669164527	WITHOUT_CLASSIFICATION	1.4633083547379571E-5	DEFECT
// If the buildfile specifies sourcepath="", then don't // output any sourcepath.	WITHOUT_CLASSIFICATION	0.9999853669164527	WITHOUT_CLASSIFICATION	1.4633083547379571E-5	DEFECT
// support for -source 1.1 and -source 1.2 has been // added with JDK 1.4.2 - and isn't present in 1.5.0 either	WITHOUT_CLASSIFICATION	0.9999742893448639	WITHOUT_CLASSIFICATION	2.5710655136196933E-5	DEFECT
// 1.5.0 doesn't support -source 1.1	WITHOUT_CLASSIFICATION	0.9998489578740208	WITHOUT_CLASSIFICATION	1.5104212597916408E-4	DEFECT
//Use the VM launcher instead of shell launcher on VMS //for java	WITHOUT_CLASSIFICATION	0.9999617908933388	WITHOUT_CLASSIFICATION	3.820910666105697E-5	DEFECT
// gcj doesn't support bootclasspath dir (-bootclasspath) // so we'll emulate it for compatibility and convenience.	WITHOUT_CLASSIFICATION	0.9999998182090339	WITHOUT_CLASSIFICATION	1.8179096600399357E-7	DEFECT
// gcj doesn't support an extension dir (-extdir) // so we'll emulate it for compatibility and convenience.	WITHOUT_CLASSIFICATION	0.999997517139556	WITHOUT_CLASSIFICATION	2.4828604439634887E-6	DEFECT
// Gcj has no option for source-path so we // will add it to classpath.	WITHOUT_CLASSIFICATION	0.9999994781096837	WITHOUT_CLASSIFICATION	5.218903163404694E-7	DEFECT
// Use reflection to be able to build on all JDKs >= 1.1:	WITHOUT_CLASSIFICATION	0.9999947107973506	WITHOUT_CLASSIFICATION	5.289202649314618E-6	DEFECT
// no bootclasspath, therefore, get one from the java runtime	WITHOUT_CLASSIFICATION	0.9999999604792142	WITHOUT_CLASSIFICATION	3.9520785750163554E-8	DEFECT
// if the user has set JIKESPATH we should add the contents as well	WITHOUT_CLASSIFICATION	0.9999996755080864	WITHOUT_CLASSIFICATION	3.2449191346330295E-7	DEFECT
//reflection to avoid bootstrap/build problems	WITHOUT_CLASSIFICATION	0.9999869834257388	WITHOUT_CLASSIFICATION	1.3016574261251108E-5	DEFECT
//now verify that the class has an implementation	WITHOUT_CLASSIFICATION	0.9996943472711617	WITHOUT_CLASSIFICATION	3.056527288383817E-4	DEFECT
//windows probing logic relies on the word 'windows' in //the OS	WITHOUT_CLASSIFICATION	0.9994612837403439	WITHOUT_CLASSIFICATION	5.38716259656009E-4	DEFECT
//there are only four 9x platforms that we look for	WITHOUT_CLASSIFICATION	0.9999985230741384	WITHOUT_CLASSIFICATION	1.4769258615363687E-6	DEFECT
//wince isn't really 9x, but crippled enough to //be a muchness. Ant doesnt run on CE, anyway.	WITHOUT_CLASSIFICATION	0.9918551447320697	WITHOUT_CLASSIFICATION	0.008144855267930361	DEFECT
// millis per second	WITHOUT_CLASSIFICATION	0.9999105416538966	WITHOUT_CLASSIFICATION	8.945834610337721E-5	DEFECT
//get the host of a url	WITHOUT_CLASSIFICATION	0.9999999733107775	WITHOUT_CLASSIFICATION	2.6689222442590385E-8	DEFECT
//Java1.5: reachable = address.isReachable(timeout * 1000);	WITHOUT_CLASSIFICATION	0.9999966579872062	WITHOUT_CLASSIFICATION	3.3420127937447733E-6	DEFECT
//utterly implausible, but catered for anyway	WITHOUT_CLASSIFICATION	0.9999903610883978	WITHOUT_CLASSIFICATION	9.638911602127435E-6	DEFECT
// load the parser class	WITHOUT_CLASSIFICATION	0.9999634157805284	WITHOUT_CLASSIFICATION	3.6584219471564905E-5	DEFECT
// may be altered in validate	WITHOUT_CLASSIFICATION	0.9999977144542858	WITHOUT_CLASSIFICATION	2.28554571426259E-6	DEFECT
// Error messages	WITHOUT_CLASSIFICATION	0.9999933295595514	WITHOUT_CLASSIFICATION	6.670440448537244E-6	DEFECT
// plain impossible	WITHOUT_CLASSIFICATION	0.9999996183295947	WITHOUT_CLASSIFICATION	3.816704053292864E-7	DEFECT
// support for -source 1.1 and -source 1.2 has been // added with JDK 1.4.2, Jikes doesn't like it	WITHOUT_CLASSIFICATION	0.999786352917896	WITHOUT_CLASSIFICATION	2.1364708210412607E-4	DEFECT
//assume this is an IOexception about un readability	WITHOUT_CLASSIFICATION	0.9999845149746387	WITHOUT_CLASSIFICATION	1.5485025361350296E-5	DEFECT
//any kind of fault: not reachable.	WITHOUT_CLASSIFICATION	0.974306539457882	WITHOUT_CLASSIFICATION	0.025693460542118025	DEFECT
//java1.4 or earlier	WITHOUT_CLASSIFICATION	0.9999991079814793	WITHOUT_CLASSIFICATION	8.920185208006608E-7	DEFECT
// don't know the type, should throw exception instead?	WITHOUT_CLASSIFICATION	0.9993714770909577	WITHOUT_CLASSIFICATION	6.285229090422158E-4	DEFECT
//pick a value that is good for everything	WITHOUT_CLASSIFICATION	0.9999844731929196	WITHOUT_CLASSIFICATION	1.5526807080418535E-5	DEFECT
//initial state is false.	WITHOUT_CLASSIFICATION	0.9999983219170158	WITHOUT_CLASSIFICATION	1.6780829842342736E-6	DEFECT
//every condition is xored against the previous one	WITHOUT_CLASSIFICATION	0.9999838289012429	WITHOUT_CLASSIFICATION	1.6171098757044302E-5	DEFECT
//validate	WITHOUT_CLASSIFICATION	0.9999881315361265	WITHOUT_CLASSIFICATION	1.1868463873396975E-5	DEFECT
//#now match the files	WITHOUT_CLASSIFICATION	0.9999998086618047	WITHOUT_CLASSIFICATION	1.913381951814619E-7	DEFECT
// Intentionally left blank	WITHOUT_CLASSIFICATION	0.9999903547241337	WITHOUT_CLASSIFICATION	9.64527586635746E-6	DEFECT
//private static final int GET_ENTRY = 0;	WITHOUT_CLASSIFICATION	0.9999999299134668	WITHOUT_CLASSIFICATION	7.00865332057471E-8	DEFECT
// make sure attributes are reset when // working on a 'new' file.	WITHOUT_CLASSIFICATION	0.9998106524476456	WITHOUT_CLASSIFICATION	1.8934755235442975E-4	DEFECT
//We have ended changelog for that particular file //so we can save it	WITHOUT_CLASSIFICATION	0.9999999735210262	WITHOUT_CLASSIFICATION	2.6478973764302822E-8	DEFECT
//was -1	WITHOUT_CLASSIFICATION	0.999986877703723	WITHOUT_CLASSIFICATION	1.3122296277052006E-5	DEFECT
//was -1	WITHOUT_CLASSIFICATION	0.999986877703723	WITHOUT_CLASSIFICATION	1.3122296277052006E-5	DEFECT
//There were no revisions in this changelog //entry so lets move onto next file	WITHOUT_CLASSIFICATION	0.9999999538661174	WITHOUT_CLASSIFICATION	4.613388269881833E-8	DEFECT
//Reset comment to empty here as we can accumulate multiple lines //in the processComment method	WITHOUT_CLASSIFICATION	0.9999998444540457	WITHOUT_CLASSIFICATION	1.5554595426933183E-7	DEFECT
// We want something of the form: -d ">=YYYY-MM-dd"	WITHOUT_CLASSIFICATION	0.9999995313825953	WITHOUT_CLASSIFICATION	4.6861740461641613E-7	DEFECT
// Check if list of files to check has been specified	WITHOUT_CLASSIFICATION	0.9999999825732302	WITHOUT_CLASSIFICATION	1.7426769798501503E-8	DEFECT
//for now skip entries which are missing a date	WITHOUT_CLASSIFICATION	0.9999889254668365	WITHOUT_CLASSIFICATION	1.1074533163483404E-5	DEFECT
//Skip dates that are too early	WITHOUT_CLASSIFICATION	0.9999966441197542	WITHOUT_CLASSIFICATION	3.355880245729168E-6	DEFECT
//Skip dates that are too late	WITHOUT_CLASSIFICATION	0.999999655939598	WITHOUT_CLASSIFICATION	3.4406040197953775E-7	DEFECT
// validate the input parameters	WITHOUT_CLASSIFICATION	0.9999995177584698	WITHOUT_CLASSIFICATION	4.822415302379735E-7	DEFECT
// build the rdiff command	WITHOUT_CLASSIFICATION	0.9999961724486341	WITHOUT_CLASSIFICATION	3.827551365907414E-6	DEFECT
// if the two substrings are longer than the original, then name // contains address - so reset the name to null	WITHOUT_CLASSIFICATION	0.9999987396532914	WITHOUT_CLASSIFICATION	1.2603467085500234E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999998068383374	WITHOUT_CLASSIFICATION	1.9316166246942935E-7	DEFECT
// support multiple packages	WITHOUT_CLASSIFICATION	0.9999996402525584	WITHOUT_CLASSIFICATION	3.597474415419442E-7	DEFECT
// force command not to be null	WITHOUT_CLASSIFICATION	0.9998973386119027	WITHOUT_CLASSIFICATION	1.0266138809731669E-4	DEFECT
// run the cvs command	WITHOUT_CLASSIFICATION	0.9999851079642854	WITHOUT_CLASSIFICATION	1.4892035714511757E-5	DEFECT
// parse the rdiff	WITHOUT_CLASSIFICATION	0.999998027972311	WITHOUT_CLASSIFICATION	1.9720276890183453E-6	DEFECT
// write the tag diff	WITHOUT_CLASSIFICATION	0.9999995692574968	WITHOUT_CLASSIFICATION	4.307425032085609E-7	DEFECT
// parse the output of the command	WITHOUT_CLASSIFICATION	0.9999902577134979	WITHOUT_CLASSIFICATION	9.742286502037556E-6	DEFECT
// it is a new file // set the revision but not the prevrevision	WITHOUT_CLASSIFICATION	0.9999862898959142	WITHOUT_CLASSIFICATION	1.3710104085821968E-5	DEFECT
// it is a modified file // set the revision and the prevrevision	WITHOUT_CLASSIFICATION	0.9999994010731457	WITHOUT_CLASSIFICATION	5.989268543031024E-7	DEFECT
// it is a removed file	WITHOUT_CLASSIFICATION	0.9999961196060457	WITHOUT_CLASSIFICATION	3.880393954270694E-6	DEFECT
/* special headers */	WITHOUT_CLASSIFICATION	0.999998885176575	WITHOUT_CLASSIFICATION	1.1148234250428119E-6	DEFECT
// prepare for the auto select mechanism	WITHOUT_CLASSIFICATION	0.999999938560764	WITHOUT_CLASSIFICATION	6.143923606447876E-8	DEFECT
// try MIME format	WITHOUT_CLASSIFICATION	0.9999872930417606	WITHOUT_CLASSIFICATION	1.2706958239513698E-5	DEFECT
// SMTP auth only allowed with MIME mail	WITHOUT_CLASSIFICATION	0.9998308232275421	WITHOUT_CLASSIFICATION	1.6917677245785405E-4	DEFECT
// SSL only allowed with MIME mail	WITHOUT_CLASSIFICATION	0.999740506578086	WITHOUT_CLASSIFICATION	2.594934219140048E-4	DEFECT
// try UU format	WITHOUT_CLASSIFICATION	0.9999979936047603	WITHOUT_CLASSIFICATION	2.0063952396364836E-6	DEFECT
// try plain format	WITHOUT_CLASSIFICATION	0.9999989390006079	WITHOUT_CLASSIFICATION	1.060999392187059E-6	DEFECT
// a valid mailer must be present by now	WITHOUT_CLASSIFICATION	0.9999998160987823	WITHOUT_CLASSIFICATION	1.8390121773584038E-7	DEFECT
// a valid message is required	WITHOUT_CLASSIFICATION	0.9999978832233304	WITHOUT_CLASSIFICATION	2.116776669591984E-6	DEFECT
// an address to send from is required	WITHOUT_CLASSIFICATION	0.9999425395668529	WITHOUT_CLASSIFICATION	5.7460433147191944E-5	DEFECT
// at least one address to send to/cc/bcc is required	WITHOUT_CLASSIFICATION	0.9999876448828843	WITHOUT_CLASSIFICATION	1.2355117115742754E-5	DEFECT
// set the mimetype if not done already (and required)	WITHOUT_CLASSIFICATION	0.999976611816137	WITHOUT_CLASSIFICATION	2.3388183863112327E-5	DEFECT
// set the character set if not done already (and required)	WITHOUT_CLASSIFICATION	0.9999859225171212	WITHOUT_CLASSIFICATION	1.4077482878813596E-5	DEFECT
// identify which files should be attached	WITHOUT_CLASSIFICATION	0.9999776556225971	WITHOUT_CLASSIFICATION	2.2344377402808554E-5	DEFECT
// let the user know what's going to happen	WITHOUT_CLASSIFICATION	0.9998953628272254	WITHOUT_CLASSIFICATION	1.0463717277463251E-4	DEFECT
// pass the params to the mailer	WITHOUT_CLASSIFICATION	0.9999730180931156	WITHOUT_CLASSIFICATION	2.698190688450198E-5	DEFECT
// send the email	WITHOUT_CLASSIFICATION	0.9999983603837127	WITHOUT_CLASSIFICATION	1.6396162872696579E-6	DEFECT
// let the user know what happened	WITHOUT_CLASSIFICATION	0.9999591562088652	WITHOUT_CLASSIFICATION	4.084379113489181E-5	DEFECT
// CheckStyle:MemberNameCheck ON	WITHOUT_CLASSIFICATION	0.9999995161448159	WITHOUT_CLASSIFICATION	4.838551841547503E-7	DEFECT
// Read message from a file	WITHOUT_CLASSIFICATION	0.9999989866986039	WITHOUT_CLASSIFICATION	1.0133013960690705E-6	DEFECT
// Make a limited attempt to extract a sanitized name and email address // Algorithm based on the one found in Ant's MailMessage.java	WITHOUT_CLASSIFICATION	0.9999473350156382	WITHOUT_CLASSIFICATION	5.266498436177822E-5	DEFECT
// shortcut for "<address>"	WITHOUT_CLASSIFICATION	0.9999998111069416	WITHOUT_CLASSIFICATION	1.8889305844923564E-7	DEFECT
// support "address (name)"	WITHOUT_CLASSIFICATION	0.9999930447766957	WITHOUT_CLASSIFICATION	6.955223304341547E-6	DEFECT
// support "(name) address"	WITHOUT_CLASSIFICATION	0.9999967423173695	WITHOUT_CLASSIFICATION	3.2576826305049096E-6	DEFECT
// To work properly with national charsets we have to use // implementation of interface javax.activation.DataSource	WITHOUT_CLASSIFICATION	0.9954469017857315	WITHOUT_CLASSIFICATION	0.0045530982142685285	DEFECT
// Must be like "text/plain; charset=windows-1251"	WITHOUT_CLASSIFICATION	0.9999998604084883	WITHOUT_CLASSIFICATION	1.395915116465889E-7	DEFECT
// Aside, the JDK is clearly unaware of the Scottish // 'session', which involves excessive quantities of // alcohol :-)	WITHOUT_CLASSIFICATION	0.9999866526554861	WITHOUT_CLASSIFICATION	1.3347344513767641E-5	DEFECT
// SMTP provider	WITHOUT_CLASSIFICATION	0.9999638254830261	WITHOUT_CLASSIFICATION	3.6174516973948164E-5	DEFECT
//create the message	WITHOUT_CLASSIFICATION	0.9999998855037632	WITHOUT_CLASSIFICATION	1.1449623676857508E-7	DEFECT
//set the sender	WITHOUT_CLASSIFICATION	0.9999968019421515	WITHOUT_CLASSIFICATION	3.1980578486608694E-6	DEFECT
// set the reply to addresses	WITHOUT_CLASSIFICATION	0.9999996695920267	WITHOUT_CLASSIFICATION	3.304079733940581E-7	DEFECT
// Choosing character set of the mail message // First: looking it from MimeType	WITHOUT_CLASSIFICATION	0.9999975196492934	WITHOUT_CLASSIFICATION	2.480350706555394E-6	DEFECT
// Assign/reassign message charset from MimeType	WITHOUT_CLASSIFICATION	0.9999998362661718	WITHOUT_CLASSIFICATION	1.6373382826821408E-7	DEFECT
// Next: looking if charset having explicit definition	WITHOUT_CLASSIFICATION	0.9999919341381678	WITHOUT_CLASSIFICATION	8.065861832224907E-6	DEFECT
// Using default	WITHOUT_CLASSIFICATION	0.9999998324709994	WITHOUT_CLASSIFICATION	1.675290004423747E-7	DEFECT
// Using javax.activation.DataSource paradigm	WITHOUT_CLASSIFICATION	0.9999989618457051	WITHOUT_CLASSIFICATION	1.0381542948619457E-6	DEFECT
// Assuming mime type in form "text/XXXX; charset=XXXXXX"	WITHOUT_CLASSIFICATION	0.9999975610204679	WITHOUT_CLASSIFICATION	2.438979532047775E-6	DEFECT
// Skip 'charset='	WITHOUT_CLASSIFICATION	0.9999998579805676	WITHOUT_CLASSIFICATION	1.4201943243591193E-7	DEFECT
// Scanner to find our inputs // list of files to process	WITHOUT_CLASSIFICATION	0.9999993566885882	WITHOUT_CLASSIFICATION	6.433114117304155E-7	DEFECT
// default srcDir to basedir	WITHOUT_CLASSIFICATION	0.9999998698104997	WITHOUT_CLASSIFICATION	1.3018950028151465E-7	DEFECT
// Require destDir	WITHOUT_CLASSIFICATION	0.9999819240348076	WITHOUT_CLASSIFICATION	1.8075965192468117E-5	DEFECT
// if src and dest dirs are the same, require the extension // to be set, so we don't stomp every file.  One could still // include a file with the same extension, but ....	WITHOUT_CLASSIFICATION	0.999571344006135	WITHOUT_CLASSIFICATION	4.2865599386492933E-4	DEFECT
// File to convert // where to put the results	WITHOUT_CLASSIFICATION	0.9999985339307697	WITHOUT_CLASSIFICATION	1.4660692304099811E-6	DEFECT
// Build the full file names	WITHOUT_CLASSIFICATION	0.9999997301075582	WITHOUT_CLASSIFICATION	2.698924418193548E-7	DEFECT
// Make sure we're not about to clobber something	WITHOUT_CLASSIFICATION	0.9999999497144131	WITHOUT_CLASSIFICATION	5.028558690253734E-8	DEFECT
// Make intermediate directories if needed // XXX JDK 1.1 doesn't have File.getParentFile,	WITHOUT_CLASSIFICATION	0.9999632768028036	WITHOUT_CLASSIFICATION	3.672319719643975E-5	DEFECT
//this.fork = s;	WITHOUT_CLASSIFICATION	0.9999956758845298	WITHOUT_CLASSIFICATION	4.324115470182551E-6	DEFECT
//TODO: use ANTLR to parse the grammar file to do this.	WITHOUT_CLASSIFICATION	0.9966008048676654	WITHOUT_CLASSIFICATION	0.003399195132334582	DEFECT
// if no output directory is specified, used the target's directory	WITHOUT_CLASSIFICATION	0.9999999990662605	WITHOUT_CLASSIFICATION	9.33739434079482E-10	DEFECT
// first off, make sure that we've got a from and to extension	WITHOUT_CLASSIFICATION	0.9999996406657531	WITHOUT_CLASSIFICATION	3.5933424689211683E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc // CheckStyle:MemberNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9999999459223445	WITHOUT_CLASSIFICATION	5.407765542979102E-8	DEFECT
// CheckStyle:MemberNameCheck ON // CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999632719356	WITHOUT_CLASSIFICATION	3.6728064435277285E-8	DEFECT
// Error strings	WITHOUT_CLASSIFICATION	0.9999395677462292	WITHOUT_CLASSIFICATION	6.043225377091004E-5	DEFECT
//validating	WITHOUT_CLASSIFICATION	0.9999852835107086	WITHOUT_CLASSIFICATION	1.471648929147176E-5	DEFECT
//set the schema source for the doc	WITHOUT_CLASSIFICATION	0.9999998900859923	WITHOUT_CLASSIFICATION	1.0991400769833097E-7	DEFECT
//set the schema source for the doc	WITHOUT_CLASSIFICATION	0.9999998900859923	WITHOUT_CLASSIFICATION	1.0991400769833097E-7	DEFECT
//enable XSD	WITHOUT_CLASSIFICATION	0.9999951330759872	WITHOUT_CLASSIFICATION	4.866924012856215E-6	DEFECT
//validate the parser type	WITHOUT_CLASSIFICATION	0.9999944660957438	WITHOUT_CLASSIFICATION	5.533904256195961E-6	DEFECT
//couldnt use the xerces or jaxp calls	WITHOUT_CLASSIFICATION	0.9999963139636643	WITHOUT_CLASSIFICATION	3.6860363357111317E-6	DEFECT
//enable schema checking	WITHOUT_CLASSIFICATION	0.9999998597276547	WITHOUT_CLASSIFICATION	1.4027234529963262E-7	DEFECT
//turn off DTDs if desired	WITHOUT_CLASSIFICATION	0.999999904181421	WITHOUT_CLASSIFICATION	9.581857894555563E-8	DEFECT
//schema declarations go in next	WITHOUT_CLASSIFICATION	0.9999860551213133	WITHOUT_CLASSIFICATION	1.394487868656429E-5	DEFECT
// first off, make sure that we've got a srcdir and destdir	WITHOUT_CLASSIFICATION	0.9999998431102264	WITHOUT_CLASSIFICATION	1.5688977371323016E-7	DEFECT
//enable schema //setFeature(XmlConstants.FEATURE_VALIDATION, false);	WITHOUT_CLASSIFICATION	0.999999914128258	WITHOUT_CLASSIFICATION	8.587174208328993E-8	DEFECT
//this is almost implausible, but required handling	WITHOUT_CLASSIFICATION	0.9999908078711658	WITHOUT_CLASSIFICATION	9.192128834213506E-6	DEFECT
//SchemaLocation	WITHOUT_CLASSIFICATION	0.9999957351008463	WITHOUT_CLASSIFICATION	4.264899153786606E-6	DEFECT
//private Path extdirs;	WITHOUT_CLASSIFICATION	0.9999986710500245	WITHOUT_CLASSIFICATION	1.328949975451699E-6	DEFECT
// first off, make sure that we've got a srcdir	WITHOUT_CLASSIFICATION	0.9999998021339647	WITHOUT_CLASSIFICATION	1.978660352621613E-7	DEFECT
// Keep jdk 1.1 compliant so others can use this	WITHOUT_CLASSIFICATION	0.9999999639706951	WITHOUT_CLASSIFICATION	3.602930478533937E-8	DEFECT
// second CR -> EOL + possibly empty line	WITHOUT_CLASSIFICATION	0.9999953394981378	WITHOUT_CLASSIFICATION	4.66050186218923E-6	DEFECT
// first CR in this line	WITHOUT_CLASSIFICATION	0.9999999104591751	WITHOUT_CLASSIFICATION	8.954082477241751E-8	DEFECT
// LF -> EOL	WITHOUT_CLASSIFICATION	0.9999954489838044	WITHOUT_CLASSIFICATION	4.55101619564674E-6	DEFECT
// any other char	WITHOUT_CLASSIFICATION	0.999999622947795	WITHOUT_CLASSIFICATION	3.770522050611866E-7	DEFECT
// Mac-style linebreak or EOF (or both)	WITHOUT_CLASSIFICATION	0.999999838351717	WITHOUT_CLASSIFICATION	1.6164828310007383E-7	DEFECT
// variables to hold arguments	WITHOUT_CLASSIFICATION	0.9999997374164113	WITHOUT_CLASSIFICATION	2.6258358861660145E-7	DEFECT
// ?? Should this be the default for ant?	WITHOUT_CLASSIFICATION	0.9999999487359212	WITHOUT_CLASSIFICATION	5.1264078706690977E-8	DEFECT
// constants for the messages to suppress by flags and their corresponding properties	WITHOUT_CLASSIFICATION	0.9997953802456172	WITHOUT_CLASSIFICATION	2.0461975438287172E-4	DEFECT
// other implementation variables	WITHOUT_CLASSIFICATION	0.9999994256955227	WITHOUT_CLASSIFICATION	5.743044772561036E-7	DEFECT
// classpath makes no sense	WITHOUT_CLASSIFICATION	0.9999995695806568	WITHOUT_CLASSIFICATION	4.304193432281467E-7	DEFECT
// destDir	WITHOUT_CLASSIFICATION	0.9999977174381207	WITHOUT_CLASSIFICATION	2.2825618792745952E-6	DEFECT
// srcDir	WITHOUT_CLASSIFICATION	0.9999966936871413	WITHOUT_CLASSIFICATION	3.3063128586126207E-6	DEFECT
// copy the source and support files	WITHOUT_CLASSIFICATION	0.9999942892869224	WITHOUT_CLASSIFICATION	5.71071307756987E-6	DEFECT
// compile the source files	WITHOUT_CLASSIFICATION	0.9999999261921778	WITHOUT_CLASSIFICATION	7.380782213025533E-8	DEFECT
// create an array of strings for input to the compiler: one array // comes from the compile options, the other from the compileList	WITHOUT_CLASSIFICATION	0.9999930301089583	WITHOUT_CLASSIFICATION	6.969891041625776E-6	DEFECT
// create a single array of arguments for the compiler	WITHOUT_CLASSIFICATION	0.9999969138499074	WITHOUT_CLASSIFICATION	3.086150092522173E-6	DEFECT
// print nice output about what we are doing for the log	WITHOUT_CLASSIFICATION	0.9999999457804579	WITHOUT_CLASSIFICATION	5.4219542130619764E-8	DEFECT
// need to set java.class.path property and restore it later // since the NetRexx compiler has no option for the classpath	WITHOUT_CLASSIFICATION	0.99999877616624	WITHOUT_CLASSIFICATION	1.2238337599275627E-6	DEFECT
// path is mentioned in the message	WITHOUT_CLASSIFICATION	0.9999966787994888	WITHOUT_CLASSIFICATION	3.321200511274284E-6	DEFECT
// verbose level logging for suppressed messages	WITHOUT_CLASSIFICATION	0.9999999471719332	WITHOUT_CLASSIFICATION	5.2828066867736057E-8	DEFECT
// error level logging for compiler errors	WITHOUT_CLASSIFICATION	0.9999992854769599	WITHOUT_CLASSIFICATION	7.145230401582904E-7	DEFECT
// warning for all warning messages	WITHOUT_CLASSIFICATION	0.9999997213716902	WITHOUT_CLASSIFICATION	2.786283097353848E-7	DEFECT
// info level for the rest.	WITHOUT_CLASSIFICATION	0.9999998737148742	WITHOUT_CLASSIFICATION	1.262851258539726E-7	DEFECT
// need to reset java.class.path property // since the NetRexx compiler has no option for the classpath	WITHOUT_CLASSIFICATION	0.9999998640046353	WITHOUT_CLASSIFICATION	1.359953647230083E-7	DEFECT
// add our classpath to the mix	WITHOUT_CLASSIFICATION	0.999998599530185	WITHOUT_CLASSIFICATION	1.4004698149934404E-6	DEFECT
// add the system classpath // addExistingToClasspath(classpath,System.getProperty("java.class.path"));	WITHOUT_CLASSIFICATION	0.9999999362786799	WITHOUT_CLASSIFICATION	6.372132013923594E-8	DEFECT
// XMLReader used to validation process	WITHOUT_CLASSIFICATION	0.9999757183958657	WITHOUT_CLASSIFICATION	2.4281604134253678E-5	DEFECT
// turn validation on	WITHOUT_CLASSIFICATION	0.9999957740057845	WITHOUT_CLASSIFICATION	4.2259942154725476E-6	DEFECT
// set the feature from the attribute list	WITHOUT_CLASSIFICATION	0.9999999692000975	WITHOUT_CLASSIFICATION	3.079990251666883E-8	DEFECT
// Sets properties	WITHOUT_CLASSIFICATION	0.9999977255742547	WITHOUT_CLASSIFICATION	2.2744257453378928E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999998068383374	WITHOUT_CLASSIFICATION	1.9316166246942935E-7	DEFECT
// quick exit if the target is up to date	WITHOUT_CLASSIFICATION	0.9999997076972658	WITHOUT_CLASSIFICATION	2.923027343356603E-7	DEFECT
// ant task properties // defaults // CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999999868688039	WITHOUT_CLASSIFICATION	1.3131196110343209E-8	DEFECT
// to report sax parsing errors // CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999532025776414	WITHOUT_CLASSIFICATION	4.6797422358723834E-5	DEFECT
// then check it implements XMLReader	WITHOUT_CLASSIFICATION	0.999969021679125	WITHOUT_CLASSIFICATION	3.097832087492296E-5	DEFECT
// see if it is a SAX1 Parser	WITHOUT_CLASSIFICATION	0.999998632395416	WITHOUT_CLASSIFICATION	1.3676045839396639E-6	DEFECT
// Validates property	WITHOUT_CLASSIFICATION	0.9999958977278592	WITHOUT_CLASSIFICATION	4.1022721408492046E-6	DEFECT
//for every file, we have a new instance of the validator	WITHOUT_CLASSIFICATION	0.9999984971471083	WITHOUT_CLASSIFICATION	1.5028528916527047E-6	DEFECT
// if this is not a valid file: just use the uri	WITHOUT_CLASSIFICATION	0.9999976308319833	WITHOUT_CLASSIFICATION	2.3691680166431806E-6	DEFECT
// Property	WITHOUT_CLASSIFICATION	0.9999904512208122	WITHOUT_CLASSIFICATION	9.548779187818909E-6	DEFECT
/*     * I'm not fond of this pattern: "sub-method expected to throw     * task-cancelling exceptions".  It feels too much like programming     * for side-effects to me...     */	WITHOUT_CLASSIFICATION	0.6149164933656304	WITHOUT_CLASSIFICATION	0.3850835066343696	DEFECT
// get files from old methods - includes and nested include	WITHOUT_CLASSIFICATION	0.9999999576748966	WITHOUT_CLASSIFICATION	4.232510337798222E-8	DEFECT
// Create the stream pumpers to forward listcab's stdout and stderr to the log // note: listcab is an interactive program, and issues prompts for every new line. //       Therefore, make it show only with verbose logging turned on.	WITHOUT_CLASSIFICATION	0.9996722287591155	WITHOUT_CLASSIFICATION	3.277712408845245E-4	DEFECT
// Pump streams asynchronously	WITHOUT_CLASSIFICATION	0.9999996484936626	WITHOUT_CLASSIFICATION	3.515063374624462E-7	DEFECT
// A wild default for when the thread is interrupted	WITHOUT_CLASSIFICATION	0.9999995427132623	WITHOUT_CLASSIFICATION	4.5728673763000565E-7	DEFECT
// Wait for the process to finish	WITHOUT_CLASSIFICATION	0.9999994385023172	WITHOUT_CLASSIFICATION	5.614976828032568E-7	DEFECT
// Wait for the end of output and error streams	WITHOUT_CLASSIFICATION	0.9999512453919507	WITHOUT_CLASSIFICATION	4.8754608049391404E-5	DEFECT
// Informative summary message in case of errors	WITHOUT_CLASSIFICATION	0.9999995443725832	WITHOUT_CLASSIFICATION	4.556274167417946E-7	DEFECT
// die if cabarc fails	WITHOUT_CLASSIFICATION	0.9999968913278495	WITHOUT_CLASSIFICATION	3.1086721504843758E-6	DEFECT
// Use this to prepend a message to the properties file	WITHOUT_CLASSIFICATION	0.9999952761276617	WITHOUT_CLASSIFICATION	4.723872338340913E-6	DEFECT
/* ========================================================================    *    * Constructors    */	WITHOUT_CLASSIFICATION	0.9999998941717207	WITHOUT_CLASSIFICATION	1.058282791347891E-7	DEFECT
/* ========================================================================    *    * Methods    */	WITHOUT_CLASSIFICATION	0.9999988430682154	WITHOUT_CLASSIFICATION	1.1569317846311452E-6	DEFECT
// Create the PropertyFile	WITHOUT_CLASSIFICATION	0.9999998008449728	WITHOUT_CLASSIFICATION	1.9915502731134798E-7	DEFECT
// type may be null because it wasn't set	WITHOUT_CLASSIFICATION	0.9998917474458003	WITHOUT_CLASSIFICATION	1.0825255419961291E-4	DEFECT
// Default to string type // which means do nothing	WITHOUT_CLASSIFICATION	0.9999999116116087	WITHOUT_CLASSIFICATION	8.838839135095091E-8	DEFECT
// Insert as a string by default	WITHOUT_CLASSIFICATION	0.999999883954677	WITHOUT_CLASSIFICATION	1.1604532302148311E-7	DEFECT
// swallow	WITHOUT_CLASSIFICATION	0.9999938091705642	WITHOUT_CLASSIFICATION	6.1908294358028714E-6	DEFECT
// configure the transformer...	WITHOUT_CLASSIFICATION	0.9999993319016457	WITHOUT_CLASSIFICATION	6.680983543888833E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999993109983563	WITHOUT_CLASSIFICATION	6.890016436783456E-7	DEFECT
// If only value is specified, the property is set to it // regardless of its previous value.	WITHOUT_CLASSIFICATION	0.999999871811884	WITHOUT_CLASSIFICATION	1.2818811595648173E-7	DEFECT
// If only default is specified and the property did not // exist in the property file, the property is set to default.	WITHOUT_CLASSIFICATION	0.9999860887325518	WITHOUT_CLASSIFICATION	1.3911267448189058E-5	DEFECT
// If value and default are both specified and the property // previously existed in the property file, the property // is set to value.	WITHOUT_CLASSIFICATION	0.9999999726167417	WITHOUT_CLASSIFICATION	2.73832583090934E-8	DEFECT
// If value and default are both specified and the property // did not exist in the property file, the property is set // to default.	WITHOUT_CLASSIFICATION	0.9999975823434265	WITHOUT_CLASSIFICATION	2.4176565735274704E-6	DEFECT
// Property type operations	WITHOUT_CLASSIFICATION	0.9999999430091931	WITHOUT_CLASSIFICATION	5.699080693227393E-8	DEFECT
// Property types	WITHOUT_CLASSIFICATION	0.9999979075895336	WITHOUT_CLASSIFICATION	2.0924104663727726E-6	DEFECT
// resetting the stylesheet - reset transformer	WITHOUT_CLASSIFICATION	0.9999995558586152	WITHOUT_CLASSIFICATION	4.441413848105983E-7	DEFECT
// do we need to reset templates as well	WITHOUT_CLASSIFICATION	0.99999994226234	WITHOUT_CLASSIFICATION	5.773765996893558E-8	DEFECT
// set parameters on each transformation, maybe something has changed //(e.g. value of file name parameter)	WITHOUT_CLASSIFICATION	0.9999999417472547	WITHOUT_CLASSIFICATION	5.8252745356899655E-8	DEFECT
// end of try-catch	WITHOUT_CLASSIFICATION	0.999999402868528	WITHOUT_CLASSIFICATION	5.971314721324101E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999554955215	WITHOUT_CLASSIFICATION	4.4504478498603726E-7	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.999993225734014	WITHOUT_CLASSIFICATION	6.774265985996825E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999998068383374	WITHOUT_CLASSIFICATION	1.9316166246942935E-7	DEFECT
// WARN: Don't use the StreamSource(File) ctor. It won't work with // xalan prior to 2.2 because of systemid bugs.	WITHOUT_CLASSIFICATION	0.8028558775419655	WITHOUT_CLASSIFICATION	0.19714412245803442	DEFECT
// Use a stream so that you can close it yourself quickly // and avoid keeping the handle until the object is garbaged. // (always keep control), otherwise you won't be able to delete // the file quickly on windows.	WITHOUT_CLASSIFICATION	0.9999889496095103	WITHOUT_CLASSIFICATION	1.1050390489729123E-5	DEFECT
// not initialized yet, so create the factory	WITHOUT_CLASSIFICATION	0.9999994297042109	WITHOUT_CLASSIFICATION	5.702957891510741E-7	DEFECT
// specific attributes for the transformer	WITHOUT_CLASSIFICATION	0.9999999974198551	WITHOUT_CLASSIFICATION	2.580144956552522E-9	DEFECT
// kept for backwards compatibility	WITHOUT_CLASSIFICATION	0.999997595376438	WITHOUT_CLASSIFICATION	2.4046235620924913E-6	DEFECT
// configure factory attributes	WITHOUT_CLASSIFICATION	0.999998839119512	WITHOUT_CLASSIFICATION	1.1608804878823934E-6	DEFECT
// use XMLCatalog as the entity resolver and URI resolver	WITHOUT_CLASSIFICATION	0.9999890434422601	WITHOUT_CLASSIFICATION	1.0956557739875614E-5	DEFECT
// configure output properties	WITHOUT_CLASSIFICATION	0.9999982575053848	WITHOUT_CLASSIFICATION	1.742494615161041E-6	DEFECT
//copy the properties file	WITHOUT_CLASSIFICATION	0.9999945949010676	WITHOUT_CLASSIFICATION	5.405098932407746E-6	DEFECT
/* load properties from file if specified, otherwise        use Ant's properties */	WITHOUT_CLASSIFICATION	0.9999999986906121	WITHOUT_CLASSIFICATION	1.309388014364374E-9	DEFECT
// add ant properties	WITHOUT_CLASSIFICATION	0.9999996762068252	WITHOUT_CLASSIFICATION	3.237931748826151E-7	DEFECT
//sort the list. Makes SCM and manual diffs easier.	WITHOUT_CLASSIFICATION	0.9999998838045883	WITHOUT_CLASSIFICATION	1.1619541178697137E-7	DEFECT
// create XML document	WITHOUT_CLASSIFICATION	0.9999989849657237	WITHOUT_CLASSIFICATION	1.0150342763070143E-6	DEFECT
// output properties	WITHOUT_CLASSIFICATION	0.9999965250998852	WITHOUT_CLASSIFICATION	3.474900114679038E-6	DEFECT
// build the command line from what we got the format // as specified in the CCM.EXE help	WITHOUT_CLASSIFICATION	0.999998431225451	WITHOUT_CLASSIFICATION	1.5687745490794682E-6	DEFECT
//create task ok, set this task as the default one	WITHOUT_CLASSIFICATION	0.9999999866340916	WITHOUT_CLASSIFICATION	1.3365908288649372E-8	DEFECT
// implementation of org.apache.tools.ant.taskdefs.ExecuteStreamHandler interface	WITHOUT_CLASSIFICATION	0.9999992708739116	WITHOUT_CLASSIFICATION	7.291260883252528E-7	DEFECT
// build the command line from what we got the format is // ccm co /t .. files // as specified in the CCM.EXE help	WITHOUT_CLASSIFICATION	0.9999882693221243	WITHOUT_CLASSIFICATION	1.1730677875711792E-5	DEFECT
// Default the viewpath to basedir if it is not specified	WITHOUT_CLASSIFICATION	0.9999973772368638	WITHOUT_CLASSIFICATION	2.6227631363246654E-6	DEFECT
/*         * If configured to not care about whether the element is         * already checked out to the current view.         * Then check to see if it is checked out.         */	WITHOUT_CLASSIFICATION	0.9999976362272583	WITHOUT_CLASSIFICATION	2.3637727417408826E-6	DEFECT
// viewpath	WITHOUT_CLASSIFICATION	0.9999973322137536	WITHOUT_CLASSIFICATION	2.667786246264291E-6	DEFECT
// ClearCase items	WITHOUT_CLASSIFICATION	0.9999998670001473	WITHOUT_CLASSIFICATION	1.3299985265363892E-7	DEFECT
// -reserved	WITHOUT_CLASSIFICATION	0.9999991129115163	WITHOUT_CLASSIFICATION	8.870884836425385E-7	DEFECT
// -unreserved	WITHOUT_CLASSIFICATION	0.9999989789767687	WITHOUT_CLASSIFICATION	1.0210232313734667E-6	DEFECT
// -out	WITHOUT_CLASSIFICATION	0.9999794416566165	WITHOUT_CLASSIFICATION	2.0558343383462658E-5	DEFECT
// -ndata	WITHOUT_CLASSIFICATION	0.9999677332861172	WITHOUT_CLASSIFICATION	3.226671388275575E-5	DEFECT
// -version	WITHOUT_CLASSIFICATION	0.9999989559103815	WITHOUT_CLASSIFICATION	1.0440896186149547E-6	DEFECT
// -nwarn	WITHOUT_CLASSIFICATION	0.9999897523897724	WITHOUT_CLASSIFICATION	1.0247610227539839E-5	DEFECT
// viewpath	WITHOUT_CLASSIFICATION	0.9999973322137536	WITHOUT_CLASSIFICATION	2.667786246264291E-6	DEFECT
// build the command line from what we got the format is // cleartool lsco [options...] [viewpath ...] // as specified in the CLEARTOOL.EXE help	WITHOUT_CLASSIFICATION	0.9999983165449958	WITHOUT_CLASSIFICATION	1.6834550041753156E-6	DEFECT
// -version	WITHOUT_CLASSIFICATION	0.9999989559103815	WITHOUT_CLASSIFICATION	1.0440896186149547E-6	DEFECT
// -nwarn	WITHOUT_CLASSIFICATION	0.9999897523897724	WITHOUT_CLASSIFICATION	1.0247610227539839E-5	DEFECT
// type value	WITHOUT_CLASSIFICATION	0.9999972578931224	WITHOUT_CLASSIFICATION	2.7421068776217614E-6	DEFECT
// -c	WITHOUT_CLASSIFICATION	0.9999882866562881	WITHOUT_CLASSIFICATION	1.171334371197989E-5	DEFECT
// -c	WITHOUT_CLASSIFICATION	0.9999882866562881	WITHOUT_CLASSIFICATION	1.171334371197989E-5	DEFECT
// -cfile	WITHOUT_CLASSIFICATION	0.9999980859713374	WITHOUT_CLASSIFICATION	1.914028662486347E-6	DEFECT
// -cfile	WITHOUT_CLASSIFICATION	0.9999980859713374	WITHOUT_CLASSIFICATION	1.914028662486347E-6	DEFECT
// -cfile	WITHOUT_CLASSIFICATION	0.9999980859713374	WITHOUT_CLASSIFICATION	1.914028662486347E-6	DEFECT
// build the command line from what we got. the format is // cleartool checkin [options...] [viewpath ...] // as specified in the CLEARTOOL.EXE help	WITHOUT_CLASSIFICATION	0.9999994312619642	WITHOUT_CLASSIFICATION	5.687380356721036E-7	DEFECT
// -ptime	WITHOUT_CLASSIFICATION	0.9999982041576136	WITHOUT_CLASSIFICATION	1.7958423863041499E-6	DEFECT
// Throws EjbcException if unsuccessful	WITHOUT_CLASSIFICATION	0.9999880308520858	WITHOUT_CLASSIFICATION	1.1969147914233975E-5	DEFECT
// -keep	WITHOUT_CLASSIFICATION	0.9999900203290887	WITHOUT_CLASSIFICATION	9.979670911324864E-6	DEFECT
// -identical	WITHOUT_CLASSIFICATION	0.9999918384394226	WITHOUT_CLASSIFICATION	8.161560577410538E-6	DEFECT
// Check for required attributes	WITHOUT_CLASSIFICATION	0.9999990594047181	WITHOUT_CLASSIFICATION	9.405952817533203E-7	DEFECT
// build the command line from what we got. the format is // cleartool mkattr [options...] [viewpath ...] // as specified in the CLEARTOOL help	WITHOUT_CLASSIFICATION	0.999998659318482	WITHOUT_CLASSIFICATION	1.3406815179402833E-6	DEFECT
// -replace	WITHOUT_CLASSIFICATION	0.9999996490343688	WITHOUT_CLASSIFICATION	3.5096563123034003E-7	DEFECT
// -recurse	WITHOUT_CLASSIFICATION	0.9999997532123828	WITHOUT_CLASSIFICATION	2.467876172869583E-7	DEFECT
// type	WITHOUT_CLASSIFICATION	0.9999823926540852	WITHOUT_CLASSIFICATION	1.7607345914865378E-5	DEFECT
// viewpath	WITHOUT_CLASSIFICATION	0.9999973322137536	WITHOUT_CLASSIFICATION	2.667786246264291E-6	DEFECT
// viewpath	WITHOUT_CLASSIFICATION	0.9999973322137536	WITHOUT_CLASSIFICATION	2.667786246264291E-6	DEFECT
// viewpath	WITHOUT_CLASSIFICATION	0.9999973322137536	WITHOUT_CLASSIFICATION	2.667786246264291E-6	DEFECT
// ClearCase items	WITHOUT_CLASSIFICATION	0.9999998670001473	WITHOUT_CLASSIFICATION	1.3299985265363892E-7	DEFECT
// ClearCase items	WITHOUT_CLASSIFICATION	0.9999998670001473	WITHOUT_CLASSIFICATION	1.3299985265363892E-7	DEFECT
// -nwarn	WITHOUT_CLASSIFICATION	0.9999897523897724	WITHOUT_CLASSIFICATION	1.0247610227539839E-5	DEFECT
// -c	WITHOUT_CLASSIFICATION	0.9999882866562881	WITHOUT_CLASSIFICATION	1.171334371197989E-5	DEFECT
// -c	WITHOUT_CLASSIFICATION	0.9999882866562881	WITHOUT_CLASSIFICATION	1.171334371197989E-5	DEFECT
// -cfile	WITHOUT_CLASSIFICATION	0.9999980859713374	WITHOUT_CLASSIFICATION	1.914028662486347E-6	DEFECT
// -ptime	WITHOUT_CLASSIFICATION	0.9999982041576136	WITHOUT_CLASSIFICATION	1.7958423863041499E-6	DEFECT
// -keep	WITHOUT_CLASSIFICATION	0.9999900203290887	WITHOUT_CLASSIFICATION	9.979670911324864E-6	DEFECT
// build the command line from what we got the format is // cleartool lock [options...] // as specified in the CLEARTOOL.EXE help	WITHOUT_CLASSIFICATION	0.999998687013667	WITHOUT_CLASSIFICATION	1.3129863330039512E-6	DEFECT
// Windows quoting of the value	WITHOUT_CLASSIFICATION	0.9999884561850343	WITHOUT_CLASSIFICATION	1.1543814965597322E-5	DEFECT
// build the command line from what we got. the format is // cleartool mkelem [options...] [viewpath ...] // as specified in the CLEARTOOL.EXE help	WITHOUT_CLASSIFICATION	0.9999945835422611	WITHOUT_CLASSIFICATION	5.416457738966373E-6	DEFECT
/*         * Should choose either -ci or -nco.         */	WITHOUT_CLASSIFICATION	0.9999994400562587	WITHOUT_CLASSIFICATION	5.599437412246402E-7	DEFECT
// -nco	WITHOUT_CLASSIFICATION	0.9999694197276812	WITHOUT_CLASSIFICATION	3.058027231877026E-5	DEFECT
// -nco	WITHOUT_CLASSIFICATION	0.9999694197276812	WITHOUT_CLASSIFICATION	3.058027231877026E-5	DEFECT
// Check the command line options	WITHOUT_CLASSIFICATION	0.999999656835583	WITHOUT_CLASSIFICATION	3.4316441699819534E-7	DEFECT
// -ci	WITHOUT_CLASSIFICATION	0.9999828665173491	WITHOUT_CLASSIFICATION	1.71334826509055E-5	DEFECT
// object selector	WITHOUT_CLASSIFICATION	0.9999993941007367	WITHOUT_CLASSIFICATION	6.05899263313968E-7	DEFECT
// build the command line from what we got the format is // cleartool uncheckout [options...] [viewpath ...] // as specified in the CLEARTOOL.EXE help	WITHOUT_CLASSIFICATION	0.9999994629565728	WITHOUT_CLASSIFICATION	5.370434272481549E-7	DEFECT
// -master	WITHOUT_CLASSIFICATION	0.9999998108781041	WITHOUT_CLASSIFICATION	1.891218958864376E-7	DEFECT
// -rm	WITHOUT_CLASSIFICATION	0.9999936797867046	WITHOUT_CLASSIFICATION	6.320213295299322E-6	DEFECT
// -eltype	WITHOUT_CLASSIFICATION	0.9999901788593478	WITHOUT_CLASSIFICATION	9.82114065206167E-6	DEFECT
// viewpath	WITHOUT_CLASSIFICATION	0.9999973322137536	WITHOUT_CLASSIFICATION	2.667786246264291E-6	DEFECT
// -version	WITHOUT_CLASSIFICATION	0.9999989559103815	WITHOUT_CLASSIFICATION	1.0440896186149547E-6	DEFECT
// -c	WITHOUT_CLASSIFICATION	0.9999882866562881	WITHOUT_CLASSIFICATION	1.171334371197989E-5	DEFECT
// -c	WITHOUT_CLASSIFICATION	0.9999882866562881	WITHOUT_CLASSIFICATION	1.171334371197989E-5	DEFECT
// -cfile	WITHOUT_CLASSIFICATION	0.9999980859713374	WITHOUT_CLASSIFICATION	1.914028662486347E-6	DEFECT
// -cfile	WITHOUT_CLASSIFICATION	0.9999980859713374	WITHOUT_CLASSIFICATION	1.914028662486347E-6	DEFECT
// -rmall -force	WITHOUT_CLASSIFICATION	0.9999992229799683	WITHOUT_CLASSIFICATION	7.770200315918817E-7	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.999992433239598	WITHOUT_CLASSIFICATION	7.566760402048574E-6	DEFECT
// build the command line from what we got. the format is // cleartool checkin [options...] [viewpath ...] // as specified in the CLEARTOOL.EXE help	WITHOUT_CLASSIFICATION	0.9999994312619642	WITHOUT_CLASSIFICATION	5.687380356721036E-7	DEFECT
// -identical	WITHOUT_CLASSIFICATION	0.9999918384394226	WITHOUT_CLASSIFICATION	8.161560577410538E-6	DEFECT
// Check for required attributes	WITHOUT_CLASSIFICATION	0.9999990594047181	WITHOUT_CLASSIFICATION	9.405952817533203E-7	DEFECT
// Check for required attributes	WITHOUT_CLASSIFICATION	0.9999990594047181	WITHOUT_CLASSIFICATION	9.405952817533203E-7	DEFECT
// -replace	WITHOUT_CLASSIFICATION	0.9999996490343688	WITHOUT_CLASSIFICATION	3.5096563123034003E-7	DEFECT
// -recurse	WITHOUT_CLASSIFICATION	0.9999997532123828	WITHOUT_CLASSIFICATION	2.467876172869583E-7	DEFECT
// type	WITHOUT_CLASSIFICATION	0.9999823926540852	WITHOUT_CLASSIFICATION	1.7607345914865378E-5	DEFECT
// Returns list of EJBs for processing	WITHOUT_CLASSIFICATION	0.9999995607759469	WITHOUT_CLASSIFICATION	4.392240532099934E-7	DEFECT
// build the command line from what we got. the format is // cleartool rmtype [options...] type-selector... // as specified in the CLEARTOOL help	WITHOUT_CLASSIFICATION	0.9999976155052794	WITHOUT_CLASSIFICATION	2.3844947206399263E-6	DEFECT
// type-kind:type-name	WITHOUT_CLASSIFICATION	0.9998666892412237	WITHOUT_CLASSIFICATION	1.3331075877635157E-4	DEFECT
// -ignore	WITHOUT_CLASSIFICATION	0.9999982292496007	WITHOUT_CLASSIFICATION	1.7707503993516013E-6	DEFECT
// Return the type-selector	WITHOUT_CLASSIFICATION	0.9999991640282903	WITHOUT_CLASSIFICATION	8.359717096295086E-7	DEFECT
// -full	WITHOUT_CLASSIFICATION	0.9999825637248756	WITHOUT_CLASSIFICATION	1.7436275124425734E-5	DEFECT
// -incremental	WITHOUT_CLASSIFICATION	0.999995749666497	WITHOUT_CLASSIFICATION	4.25033350303968E-6	DEFECT
// -nlabel	WITHOUT_CLASSIFICATION	0.9999974195417357	WITHOUT_CLASSIFICATION	2.580458264278252E-6	DEFECT
// baseline_root_name	WITHOUT_CLASSIFICATION	0.9999999191530754	WITHOUT_CLASSIFICATION	8.084692460445698E-8	DEFECT
// viewpath	WITHOUT_CLASSIFICATION	0.9999973322137536	WITHOUT_CLASSIFICATION	2.667786246264291E-6	DEFECT
// -c	WITHOUT_CLASSIFICATION	0.9999882866562881	WITHOUT_CLASSIFICATION	1.171334371197989E-5	DEFECT
// -cfile	WITHOUT_CLASSIFICATION	0.9999980859713374	WITHOUT_CLASSIFICATION	1.914028662486347E-6	DEFECT
// -ptime	WITHOUT_CLASSIFICATION	0.9999982041576136	WITHOUT_CLASSIFICATION	1.7958423863041499E-6	DEFECT
// Check for required attributes	WITHOUT_CLASSIFICATION	0.9999990594047181	WITHOUT_CLASSIFICATION	9.405952817533203E-7	DEFECT
// -replace	WITHOUT_CLASSIFICATION	0.9999996490343688	WITHOUT_CLASSIFICATION	3.5096563123034003E-7	DEFECT
// -replace	WITHOUT_CLASSIFICATION	0.9999996490343688	WITHOUT_CLASSIFICATION	3.5096563123034003E-7	DEFECT
// build the command line from what we got the format is // cleartool lock [options...] // as specified in the CLEARTOOL.EXE help	WITHOUT_CLASSIFICATION	0.999998687013667	WITHOUT_CLASSIFICATION	1.3129863330039512E-6	DEFECT
// Check the command line options	WITHOUT_CLASSIFICATION	0.999999656835583	WITHOUT_CLASSIFICATION	3.4316441699819534E-7	DEFECT
// Check the command line options	WITHOUT_CLASSIFICATION	0.999999656835583	WITHOUT_CLASSIFICATION	3.4316441699819534E-7	DEFECT
// object selector	WITHOUT_CLASSIFICATION	0.9999993941007367	WITHOUT_CLASSIFICATION	6.05899263313968E-7	DEFECT
// -ordinary	WITHOUT_CLASSIFICATION	0.9999938244792812	WITHOUT_CLASSIFICATION	6.1755207187650855E-6	DEFECT
// build the command line from what we got the format is // cleartool update [options...] [viewpath ...] // as specified in the CLEARTOOL.EXE help	WITHOUT_CLASSIFICATION	0.999998430903148	WITHOUT_CLASSIFICATION	1.5690968520514316E-6	DEFECT
// For debugging	WITHOUT_CLASSIFICATION	0.9999927116767601	WITHOUT_CLASSIFICATION	7.288323239930908E-6	DEFECT
// -log logname	WITHOUT_CLASSIFICATION	0.9999988738697078	WITHOUT_CLASSIFICATION	1.1261302921866724E-6	DEFECT
// -graphical	WITHOUT_CLASSIFICATION	0.9999959021138245	WITHOUT_CLASSIFICATION	4.097886175573835E-6	DEFECT
// -overwrite	WITHOUT_CLASSIFICATION	0.9999985144465812	WITHOUT_CLASSIFICATION	1.4855534188143909E-6	DEFECT
// -global	WITHOUT_CLASSIFICATION	0.9999943129610137	WITHOUT_CLASSIFICATION	5.687038986320674E-6	DEFECT
// -rename	WITHOUT_CLASSIFICATION	0.9999978081891016	WITHOUT_CLASSIFICATION	2.1918108984718383E-6	DEFECT
// -obsolete	WITHOUT_CLASSIFICATION	0.9999988954754536	WITHOUT_CLASSIFICATION	1.1045245462928793E-6	DEFECT
// -noverwrite	WITHOUT_CLASSIFICATION	0.9999982613870496	WITHOUT_CLASSIFICATION	1.7386129504954056E-6	DEFECT
// build the command line from what we got. the format is // cleartool mklbtype [options...] type-selector... // as specified in the CLEARTOOL help	WITHOUT_CLASSIFICATION	0.9999950957363518	WITHOUT_CLASSIFICATION	4.904263648146351E-6	DEFECT
// -ctime	WITHOUT_CLASSIFICATION	0.9999978535889851	WITHOUT_CLASSIFICATION	2.1464110149492705E-6	DEFECT
// -pbranch	WITHOUT_CLASSIFICATION	0.9999990742649514	WITHOUT_CLASSIFICATION	9.257350485639976E-7	DEFECT
// File[] filesInDir = directory.listFiles();	WITHOUT_CLASSIFICATION	0.9999981896758073	WITHOUT_CLASSIFICATION	1.8103241926338677E-6	DEFECT
// -shared	WITHOUT_CLASSIFICATION	0.9999993943404729	WITHOUT_CLASSIFICATION	6.056595270896412E-7	DEFECT
// type-name@vob	WITHOUT_CLASSIFICATION	0.9999853140349156	WITHOUT_CLASSIFICATION	1.4685965084221803E-5	DEFECT
// we have a file. create a stream for it	WITHOUT_CLASSIFICATION	0.9999998718629317	WITHOUT_CLASSIFICATION	1.2813706819583186E-7	DEFECT
// default directory to the project's base directory	WITHOUT_CLASSIFICATION	0.9999994993934738	WITHOUT_CLASSIFICATION	5.006065262715422E-7	DEFECT
// assume the worst	WITHOUT_CLASSIFICATION	0.9999997078193418	WITHOUT_CLASSIFICATION	2.9218065814326135E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999998068383374	WITHOUT_CLASSIFICATION	1.9316166246942935E-7	DEFECT
// create a data input stream from the jar // input stream	WITHOUT_CLASSIFICATION	0.9999997291367493	WITHOUT_CLASSIFICATION	2.708632507344418E-7	DEFECT
// this iterator is exhausted. Can we pop one off the stack	WITHOUT_CLASSIFICATION	0.9999977872354808	WITHOUT_CLASSIFICATION	2.2127645191995084E-6	DEFECT
// we get the root classes and build up a set of // classes upon which they depend	WITHOUT_CLASSIFICATION	0.999996015968741	WITHOUT_CLASSIFICATION	3.984031258957986E-6	DEFECT
// now recover all the dependencies collected and add to the list.	WITHOUT_CLASSIFICATION	0.9999998058619598	WITHOUT_CLASSIFICATION	1.941380401037785E-7	DEFECT
// pick up the last round of dependencies that were determined	WITHOUT_CLASSIFICATION	0.9999999091919816	WITHOUT_CLASSIFICATION	9.080801855387209E-8	DEFECT
// right we have a good looking class file.	WITHOUT_CLASSIFICATION	0.9998802510342386	WITHOUT_CLASSIFICATION	1.1974896576142991E-4	DEFECT
/* int minorVersion = */	WITHOUT_CLASSIFICATION	0.9999983333127294	WITHOUT_CLASSIFICATION	1.666687270729661E-6	DEFECT
/* int majorVersion = */	WITHOUT_CLASSIFICATION	0.9999976960930903	WITHOUT_CLASSIFICATION	2.303906909681709E-6	DEFECT
/* int accessFlags = */	WITHOUT_CLASSIFICATION	0.9999970023366249	WITHOUT_CLASSIFICATION	2.9976633751734964E-6	DEFECT
/* int superClassIndex = */	WITHOUT_CLASSIFICATION	0.9999969191925426	WITHOUT_CLASSIFICATION	3.0808074574939977E-6	DEFECT
// read the dependency cache from the disk	WITHOUT_CLASSIFICATION	0.9999992569594792	WITHOUT_CLASSIFICATION	7.430405207181332E-7	DEFECT
// try to read the dependency info from the map if it is // not out of date	WITHOUT_CLASSIFICATION	0.9999951801457284	WITHOUT_CLASSIFICATION	4.819854271678486E-6	DEFECT
// not cached - so need to read directly from the class file	WITHOUT_CLASSIFICATION	0.9999122255584246	WITHOUT_CLASSIFICATION	8.777444157536888E-5	DEFECT
// This class depends on each class in the dependency list. For each // one of those, add this class into their affected classes list	WITHOUT_CLASSIFICATION	0.9999904388828283	WITHOUT_CLASSIFICATION	9.561117171683453E-6	DEFECT
// now determine which jars each class depends upon	WITHOUT_CLASSIFICATION	0.9999992209554146	WITHOUT_CLASSIFICATION	7.790445854472577E-7	DEFECT
// we need to add this jar to the list for this class.	WITHOUT_CLASSIFICATION	0.9999993224594171	WITHOUT_CLASSIFICATION	6.775405829339538E-7	DEFECT
// write the dependency cache to the disk	WITHOUT_CLASSIFICATION	0.9999982068594179	WITHOUT_CLASSIFICATION	1.793140582077801E-6	DEFECT
// need to delete the main class	WITHOUT_CLASSIFICATION	0.9999909971201469	WITHOUT_CLASSIFICATION	9.002879853004784E-6	DEFECT
//downgrade warnings on RMI stublike classes, as they are generated //by rmic, so there is no need to tell the user that their source is //missing.	WITHOUT_CLASSIFICATION	0.9999919842621957	WITHOUT_CLASSIFICATION	8.015737804198813E-6	DEFECT
// now check classpath file dependencies	WITHOUT_CLASSIFICATION	0.9999999795517812	WITHOUT_CLASSIFICATION	2.0448218811302794E-8	DEFECT
// if we have no info about the class - it may have been deleted already and we // are using cached info.	WITHOUT_CLASSIFICATION	0.9999999249512846	WITHOUT_CLASSIFICATION	7.504871540507597E-8	DEFECT
// there was no class file. add this class to the list	WITHOUT_CLASSIFICATION	0.9999820883373368	WITHOUT_CLASSIFICATION	1.7911662663175653E-5	DEFECT
// break the classLocations into its components.	WITHOUT_CLASSIFICATION	0.9999988941017468	WITHOUT_CLASSIFICATION	1.1058982532192375E-6	DEFECT
// search the various source path entries	WITHOUT_CLASSIFICATION	0.9999998620724332	WITHOUT_CLASSIFICATION	1.3792756686868962E-7	DEFECT
// create a data input stream from the jar input stream	WITHOUT_CLASSIFICATION	0.9999997876451494	WITHOUT_CLASSIFICATION	2.1235485068569642E-7	DEFECT
// add null entries for any additional slots required.	WITHOUT_CLASSIFICATION	0.9995815408838632	WITHOUT_CLASSIFICATION	4.184591161368603E-4	DEFECT
// end execute	WITHOUT_CLASSIFICATION	0.9999489339709461	WITHOUT_CLASSIFICATION	5.106602905390743E-5	DEFECT
//in verbose mode we always log stuff	WITHOUT_CLASSIFICATION	0.9999993249043527	WITHOUT_CLASSIFICATION	6.750956472157313E-7	DEFECT
//the simple action is to send the command line in as is	WITHOUT_CLASSIFICATION	0.999986147481494	WITHOUT_CLASSIFICATION	1.385251850603066E-5	DEFECT
// Throws EjbcException	WITHOUT_CLASSIFICATION	0.9999918190099267	WITHOUT_CLASSIFICATION	8.18099007333251E-6	DEFECT
// VSS items	WITHOUT_CLASSIFICATION	0.9999970147699992	WITHOUT_CLASSIFICATION	2.985230000725794E-6	DEFECT
// The zero index is never present in the constant pool itself so // we add a null entry for it	WITHOUT_CLASSIFICATION	0.9999806966411275	WITHOUT_CLASSIFICATION	1.930335887239593E-5	DEFECT
//but for big operations, we save all the params to a temp file //and set @tmpfile as the command -then we remember to delete the tempfile //afterwards	WITHOUT_CLASSIFICATION	0.999999310327227	WITHOUT_CLASSIFICATION	6.89672773035028E-7	DEFECT
//start at 1 because element 0 is the executable name	WITHOUT_CLASSIFICATION	0.9999991845383392	WITHOUT_CLASSIFICATION	8.154616608261666E-7	DEFECT
//add to the list	WITHOUT_CLASSIFICATION	0.9999993706062873	WITHOUT_CLASSIFICATION	6.293937128410714E-7	DEFECT
//fill in args	WITHOUT_CLASSIFICATION	0.9999967009054571	WITHOUT_CLASSIFICATION	3.299094542802768E-6	DEFECT
//fill in args	WITHOUT_CLASSIFICATION	0.9999967009054571	WITHOUT_CLASSIFICATION	3.299094542802768E-6	DEFECT
//set source and rebuild options	WITHOUT_CLASSIFICATION	0.9999993234515042	WITHOUT_CLASSIFICATION	6.765484956608101E-7	DEFECT
//rebuild unless the dest file is newer than the source file	WITHOUT_CLASSIFICATION	0.9999996197817347	WITHOUT_CLASSIFICATION	3.8021826541302026E-7	DEFECT
//mark for a rebuild if the dest file is newer	WITHOUT_CLASSIFICATION	0.9999998025675222	WITHOUT_CLASSIFICATION	1.9743247786494698E-7	DEFECT
// Mono 1.0's wsdl doesn't deal with absolute paths	WITHOUT_CLASSIFICATION	0.9999989725418763	WITHOUT_CLASSIFICATION	1.0274581236314293E-6	DEFECT
//add in any extra files. //this is an error in mono, but we do not warn on it as they may fix that outside //the ant build cycle.	WITHOUT_CLASSIFICATION	0.9981561001467907	WITHOUT_CLASSIFICATION	0.0018438998532093547	DEFECT
//mark for a rebuild if we are newer	WITHOUT_CLASSIFICATION	0.9999912832017079	WITHOUT_CLASSIFICATION	8.716798292127214E-6	DEFECT
//conditionally compile	WITHOUT_CLASSIFICATION	0.9998258610299855	WITHOUT_CLASSIFICATION	1.7413897001442808E-4	DEFECT
// Errors	WITHOUT_CLASSIFICATION	0.9999396606128809	WITHOUT_CLASSIFICATION	6.033938711924305E-5	DEFECT
//bail on no references	WITHOUT_CLASSIFICATION	0.9999997868234216	WITHOUT_CLASSIFICATION	2.1317657843601241E-7	DEFECT
//bail on no references	WITHOUT_CLASSIFICATION	0.9999997868234216	WITHOUT_CLASSIFICATION	2.1317657843601241E-7	DEFECT
//demand create pathlist	WITHOUT_CLASSIFICATION	0.9999998358984667	WITHOUT_CLASSIFICATION	1.6410153334289876E-7	DEFECT
//bail on no references listed	WITHOUT_CLASSIFICATION	0.999999972631005	WITHOUT_CLASSIFICATION	2.7368994955070527E-8	DEFECT
//loop through all definitions	WITHOUT_CLASSIFICATION	0.9999997008730849	WITHOUT_CLASSIFICATION	2.9912691517404704E-7	DEFECT
//add those that are set, and a delimiter	WITHOUT_CLASSIFICATION	0.9999997319575172	WITHOUT_CLASSIFICATION	2.680424828374502E-7	DEFECT
//set up response file options	WITHOUT_CLASSIFICATION	0.9999999938800679	WITHOUT_CLASSIFICATION	6.119932096318392E-9	DEFECT
//if the refs are out of date, force a build.	WITHOUT_CLASSIFICATION	0.9999987003027714	WITHOUT_CLASSIFICATION	1.2996972286323187E-6	DEFECT
//bail out early if there were no files	WITHOUT_CLASSIFICATION	0.9999998387620181	WITHOUT_CLASSIFICATION	1.6123798180254698E-7	DEFECT
//now scan the hashtable and add the files	WITHOUT_CLASSIFICATION	0.9999960542797781	WITHOUT_CLASSIFICATION	3.945720221921315E-6	DEFECT
//add the source file	WITHOUT_CLASSIFICATION	0.9999998261110392	WITHOUT_CLASSIFICATION	1.738889607438203E-7	DEFECT
//now run	WITHOUT_CLASSIFICATION	0.9998650244529302	WITHOUT_CLASSIFICATION	1.349755470697976E-4	DEFECT
//forcibly delete the output file in case of trouble	WITHOUT_CLASSIFICATION	0.9999999353272851	WITHOUT_CLASSIFICATION	6.46727147931192E-8	DEFECT
//then rethrow the exception	WITHOUT_CLASSIFICATION	0.9999762592600532	WITHOUT_CLASSIFICATION	2.374073994673427E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999998068383374	WITHOUT_CLASSIFICATION	1.9316166246942935E-7	DEFECT
// CheckStyle:ConstantNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9999993818836707	WITHOUT_CLASSIFICATION	6.181163293333136E-7	DEFECT
// CheckStyle:MethodNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9999995559756635	WITHOUT_CLASSIFICATION	4.440243364907797E-7	DEFECT
// CheckStyle:ConstantNameCheck ON // CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999517335876	WITHOUT_CLASSIFICATION	4.826641234824607E-8	DEFECT
// end execute	WITHOUT_CLASSIFICATION	0.9999489339709461	WITHOUT_CLASSIFICATION	5.106602905390743E-5	DEFECT
//fill in args	WITHOUT_CLASSIFICATION	0.9999967009054571	WITHOUT_CLASSIFICATION	3.299094542802768E-6	DEFECT
//fill in args	WITHOUT_CLASSIFICATION	0.9999967009054571	WITHOUT_CLASSIFICATION	3.299094542802768E-6	DEFECT
//rebuild unless the dest file is newer than the source file	WITHOUT_CLASSIFICATION	0.9999996197817347	WITHOUT_CLASSIFICATION	3.8021826541302026E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999998068383374	WITHOUT_CLASSIFICATION	1.9316166246942935E-7	DEFECT
//determine directory: resourceDir if set, //the dir of the destFile if not	WITHOUT_CLASSIFICATION	0.9999922063952762	WITHOUT_CLASSIFICATION	7.793604723805817E-6	DEFECT
//Public //Private //Family //Assembly //Family and Assembly //Family or Assembly //Private Scope	WITHOUT_CLASSIFICATION	0.9999987603630228	WITHOUT_CLASSIFICATION	1.2396369771544068E-6	DEFECT
//scan for an implicit fileset if there was a srcdir set //or there was no srcDir set but there was no contained classes	WITHOUT_CLASSIFICATION	0.999999997960219	WITHOUT_CLASSIFICATION	2.0397810551594866E-9	DEFECT
//if there is no src dir here, set it	WITHOUT_CLASSIFICATION	0.9999991948864261	WITHOUT_CLASSIFICATION	8.051135739796685E-7	DEFECT
//get dependencies list.	WITHOUT_CLASSIFICATION	0.9999995533926493	WITHOUT_CLASSIFICATION	4.4660735070008985E-7	DEFECT
//get any included source directories	WITHOUT_CLASSIFICATION	0.9999988686703418	WITHOUT_CLASSIFICATION	1.1313296581440596E-6	DEFECT
//add the files to the command	WITHOUT_CLASSIFICATION	0.9999781285999767	WITHOUT_CLASSIFICATION	2.1871400023302814E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc // CheckStyle:ConstantNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.999999928933516	WITHOUT_CLASSIFICATION	7.106648394645966E-8	DEFECT
// CheckStyle:MethodNameCheck ON	WITHOUT_CLASSIFICATION	0.9999997083322113	WITHOUT_CLASSIFICATION	2.916677886344472E-7	DEFECT
/*         *  space for more argumentativeness         *  command.addArgument();         *  command.addArgument();         */	WITHOUT_CLASSIFICATION	0.9999959714588512	WITHOUT_CLASSIFICATION	4.028541148771508E-6	DEFECT
// ends with '.' or null	WITHOUT_CLASSIFICATION	0.9999883192149529	WITHOUT_CLASSIFICATION	1.1680785047034204E-5	DEFECT
/* Constants used for the "beantype" attribute */	WITHOUT_CLASSIFICATION	0.9999996032995766	WITHOUT_CLASSIFICATION	3.9670042338321295E-7	DEFECT
/* Filenames of the standard EJB descriptor and the iAS-specific descriptor */	WITHOUT_CLASSIFICATION	0.9999988527684421	WITHOUT_CLASSIFICATION	1.1472315579196936E-6	DEFECT
/* Classpath used when the iAS ejbc is called */	WITHOUT_CLASSIFICATION	0.9999976174658893	WITHOUT_CLASSIFICATION	2.3825341107282784E-6	DEFECT
/* Options passed to the iAS ejbc */	WITHOUT_CLASSIFICATION	0.9999961508060446	WITHOUT_CLASSIFICATION	3.849193955294741E-6	DEFECT
/* iAS installation directory (used if ejbc isn't on user's PATH) */	WITHOUT_CLASSIFICATION	0.9999987883477257	WITHOUT_CLASSIFICATION	1.2116522743391449E-6	DEFECT
/* Parser and handler used to process both EJB descriptor files */	WITHOUT_CLASSIFICATION	0.999999676053745	WITHOUT_CLASSIFICATION	3.23946255083234E-7	DEFECT
/* Value of the display-name element read from the standard EJB descriptor */	WITHOUT_CLASSIFICATION	0.9999906270814571	WITHOUT_CLASSIFICATION	9.372918542917984E-6	DEFECT
/*         * Parse the classpath into it's individual elements and store the         * results in the "classpathElements" instance variable.         */	WITHOUT_CLASSIFICATION	0.9999999621220104	WITHOUT_CLASSIFICATION	3.787798952375268E-8	DEFECT
/* If the -classpath flag isn't specified, use the system classpath */	WITHOUT_CLASSIFICATION	0.9999987719048223	WITHOUT_CLASSIFICATION	1.2280951776083297E-6	DEFECT
/*         * If the -d flag isn't specified, use the working directory as the         * destination directory         */	WITHOUT_CLASSIFICATION	0.99999810379546	WITHOUT_CLASSIFICATION	1.896204540070797E-6	DEFECT
/* Construct a SAXParser used to process the descriptors */	WITHOUT_CLASSIFICATION	0.9999998139113778	WITHOUT_CLASSIFICATION	1.8608862212958278E-7	DEFECT
// SAXException or ParserConfigurationException may be thrown	WITHOUT_CLASSIFICATION	0.9999915611854232	WITHOUT_CLASSIFICATION	8.438814576672224E-6	DEFECT
/* Build and populate an instance of the ejbc utility */	WITHOUT_CLASSIFICATION	0.9999967410763673	WITHOUT_CLASSIFICATION	3.2589236326700988E-6	DEFECT
/* Execute the ejbc utility -- stubs/skeletons are rebuilt, if needed */	WITHOUT_CLASSIFICATION	0.999999335915064	WITHOUT_CLASSIFICATION	6.640849359784088E-7	DEFECT
// Add one for the "\"	WITHOUT_CLASSIFICATION	0.9999983096473825	WITHOUT_CLASSIFICATION	1.690352617523383E-6	DEFECT
/* Concatenate all of the command line arguments into a single String */	WITHOUT_CLASSIFICATION	0.9999985187391865	WITHOUT_CLASSIFICATION	1.481260813436576E-6	DEFECT
/* If an iAS home directory is specified, prepend it to the commmand */	WITHOUT_CLASSIFICATION	0.9999963235280943	WITHOUT_CLASSIFICATION	3.6764719057424586E-6	DEFECT
/*         * The EJB information is gathered from the standard XML EJB descriptor         * and the iAS-specific XML EJB descriptor using a SAX parser.         */	WITHOUT_CLASSIFICATION	0.9999923086003123	WITHOUT_CLASSIFICATION	7.691399687687696E-6	DEFECT
/* OPTIONAL COMMAND LINE PARAMETERS */	WITHOUT_CLASSIFICATION	0.9999783564536694	WITHOUT_CLASSIFICATION	2.1643546330620222E-5	DEFECT
/* No beantype flag is needed for an entity bean */	WITHOUT_CLASSIFICATION	0.9999323603179535	WITHOUT_CLASSIFICATION	6.763968204652979E-5	DEFECT
/* REQUIRED COMMAND LINE PARAMETERS */	WITHOUT_CLASSIFICATION	0.9999736416812205	WITHOUT_CLASSIFICATION	2.6358318779468857E-5	DEFECT
/* Convert the List into an Array and return it */	WITHOUT_CLASSIFICATION	0.9999995594552619	WITHOUT_CLASSIFICATION	4.4054473814098353E-7	DEFECT
/* Inner classes follow */	WITHOUT_CLASSIFICATION	0.9999987017937798	WITHOUT_CLASSIFICATION	1.298206220122525E-6	DEFECT
// End of EjbcException inner class	WITHOUT_CLASSIFICATION	0.9999530289140344	WITHOUT_CLASSIFICATION	4.697108596560499E-5	DEFECT
// Tracks current element // Tracks current text data // "session" or "entity"	WITHOUT_CLASSIFICATION	0.9999933991049428	WITHOUT_CLASSIFICATION	6.600895057321877E-6	DEFECT
/* Search the resource Map and (if not found) file Map */	WITHOUT_CLASSIFICATION	0.9999981231931904	WITHOUT_CLASSIFICATION	1.8768068096548522E-6	DEFECT
/* A new element has started, so reset the text being captured */	WITHOUT_CLASSIFICATION	0.9999999386814858	WITHOUT_CLASSIFICATION	6.131851415081061E-8	DEFECT
/*             * If this is a standard EJB 1.1 descriptor, we are looking for one             * set of data, while if this is an iAS-specific descriptor, we're             * looking for different set of data.  Hand the processing off to             * the appropriate method.             */	WITHOUT_CLASSIFICATION	0.9999999910459962	WITHOUT_CLASSIFICATION	8.954003760897884E-9	DEFECT
// End of EjbcHandler inner class	WITHOUT_CLASSIFICATION	0.9999978618363712	WITHOUT_CLASSIFICATION	2.138163628808408E-6	DEFECT
/*         * Below are getter's and setter's for each of the instance variables.         * Note that (in addition to supporting setters with the same type as         * the instance variable) a setter is provided with takes a String         * argument -- this are provided so the XML document handler can set         * the EJB values using the Strings it parses.         */	WITHOUT_CLASSIFICATION	0.9942726730652488	WITHOUT_CLASSIFICATION	0.005727326934751215	DEFECT
/* Check that the specified instance variables are valid */	WITHOUT_CLASSIFICATION	0.9999999901047761	WITHOUT_CLASSIFICATION	9.895223814957638E-9	DEFECT
/* Check that the EJB "source" classes all exist */	WITHOUT_CLASSIFICATION	0.999998425205052	WITHOUT_CLASSIFICATION	1.574794947983992E-6	DEFECT
// The timestamp of the "newest" class // Timestamp for a given class // File for the remote interface class // File for the home interface class // File for the EJB implementation class // File for the EJB primary key class	WITHOUT_CLASSIFICATION	0.9988391370958642	WITHOUT_CLASSIFICATION	0.0011608629041357451	DEFECT
/* Check the timestamp on the remote interface */	WITHOUT_CLASSIFICATION	0.9999989063746733	WITHOUT_CLASSIFICATION	1.0936253267869937E-6	DEFECT
/* Check the timestamp on the home interface */	WITHOUT_CLASSIFICATION	0.9999998218078536	WITHOUT_CLASSIFICATION	1.7819214636711187E-7	DEFECT
/* Check the timestamp of the primary key class */	WITHOUT_CLASSIFICATION	0.9999997154384606	WITHOUT_CLASSIFICATION	2.845615395016086E-7	DEFECT
// List of all stubs & skels // Earliest mod time // Has each been found?	WITHOUT_CLASSIFICATION	0.9999999885710362	WITHOUT_CLASSIFICATION	1.142896365902905E-8	DEFECT
/*             * Loop through each stub/skeleton class that must be generated, and             * determine (if all exist) which file has the most recent timestamp             */	WITHOUT_CLASSIFICATION	0.9999990613794025	WITHOUT_CLASSIFICATION	9.386205975744565E-7	DEFECT
/*                 * Add each stub/skeleton class to the list of EJB files.  Note                 * that each class is added even if it doesn't exist now.                 */	WITHOUT_CLASSIFICATION	0.999940805711235	WITHOUT_CLASSIFICATION	5.919428876500679E-5	DEFECT
/* Keep track of the oldest modification timestamp */	WITHOUT_CLASSIFICATION	0.9999982687305762	WITHOUT_CLASSIFICATION	1.731269423848457E-6	DEFECT
// End of EjbInfo inner class	WITHOUT_CLASSIFICATION	0.9999931745539553	WITHOUT_CLASSIFICATION	6.82544604475706E-6	DEFECT
// Fully qualified name of the Java class // Name of the package for this class // Name of the class without the package	WITHOUT_CLASSIFICATION	0.9999996252410611	WITHOUT_CLASSIFICATION	3.7475893893424263E-7	DEFECT
// End of Classname inner class	WITHOUT_CLASSIFICATION	0.9999920143095524	WITHOUT_CLASSIFICATION	7.985690447579538E-6	DEFECT
// Stream to read and redirect to standard output	WITHOUT_CLASSIFICATION	0.9999980711752228	WITHOUT_CLASSIFICATION	1.928824777152939E-6	DEFECT
// End of RedirectOutput inner class	WITHOUT_CLASSIFICATION	0.9998442416692721	WITHOUT_CLASSIFICATION	1.5575833072798846E-4	DEFECT
// add -file xxxxx to the commandline	WITHOUT_CLASSIFICATION	0.9999979272402479	WITHOUT_CLASSIFICATION	2.0727597521279617E-6	DEFECT
//clientname = ejbjarfile+client.jar	WITHOUT_CLASSIFICATION	0.9999996774297933	WITHOUT_CLASSIFICATION	3.2257020663443045E-7	DEFECT
// end of else	WITHOUT_CLASSIFICATION	0.9999984353837396	WITHOUT_CLASSIFICATION	1.564616260340457E-6	DEFECT
// ejb jar file	WITHOUT_CLASSIFICATION	0.9999998778519615	WITHOUT_CLASSIFICATION	1.2214803850686816E-7	DEFECT
// ejb jar file	WITHOUT_CLASSIFICATION	0.9999998778519615	WITHOUT_CLASSIFICATION	1.2214803850686816E-7	DEFECT
//client jar file	WITHOUT_CLASSIFICATION	0.9999998830189998	WITHOUT_CLASSIFICATION	1.1698100022192611E-7	DEFECT
//client jar file	WITHOUT_CLASSIFICATION	0.9999998830189998	WITHOUT_CLASSIFICATION	1.1698100022192611E-7	DEFECT
// Have to catch this because of the semantics of calling main()	WITHOUT_CLASSIFICATION	0.9999883365392438	WITHOUT_CLASSIFICATION	1.1663460756245891E-5	DEFECT
// Have to catch this because of the semantics of calling main()	WITHOUT_CLASSIFICATION	0.9999883365392438	WITHOUT_CLASSIFICATION	1.1663460756245891E-5	DEFECT
//classpath	WITHOUT_CLASSIFICATION	0.9999958382759787	WITHOUT_CLASSIFICATION	4.161724021311874E-6	DEFECT
/* ------------- */	WITHOUT_CLASSIFICATION	0.9999722737211431	WITHOUT_CLASSIFICATION	2.7726278856849577E-5	DEFECT
/* ------------- */	WITHOUT_CLASSIFICATION	0.9999722737211431	WITHOUT_CLASSIFICATION	2.7726278856849577E-5	DEFECT
/* GenIC options */	WITHOUT_CLASSIFICATION	0.9999983335693114	WITHOUT_CLASSIFICATION	1.6664306884551652E-6	DEFECT
/* other options */	WITHOUT_CLASSIFICATION	0.9999991805338319	WITHOUT_CLASSIFICATION	8.194661682385694E-7	DEFECT
/* -------------------- */	WITHOUT_CLASSIFICATION	0.9999825305820003	WITHOUT_CLASSIFICATION	1.7469417999845533E-5	DEFECT
/* -------------------- */	WITHOUT_CLASSIFICATION	0.9999825305820003	WITHOUT_CLASSIFICATION	1.7469417999845533E-5	DEFECT
/* GenIC options setter */	WITHOUT_CLASSIFICATION	0.9999992438153322	WITHOUT_CLASSIFICATION	7.561846677822481E-7	DEFECT
// -I- // ignore all errors // -Vd	WITHOUT_CLASSIFICATION	0.9999955795053569	WITHOUT_CLASSIFICATION	4.420494643185101E-6	DEFECT
/* ------------- */	WITHOUT_CLASSIFICATION	0.9999722737211431	WITHOUT_CLASSIFICATION	2.7726278856849577E-5	DEFECT
/* -------------------- */	WITHOUT_CLASSIFICATION	0.9999825305820003	WITHOUT_CLASSIFICATION	1.7469417999845533E-5	DEFECT
/* other options setter */	WITHOUT_CLASSIFICATION	0.999999690363138	WITHOUT_CLASSIFICATION	3.0963686201499916E-7	DEFECT
/* other methods */	WITHOUT_CLASSIFICATION	0.9999994112465499	WITHOUT_CLASSIFICATION	5.887534500779118E-7	DEFECT
// the method deleteOnExit() do not work because the directory is not empty	WITHOUT_CLASSIFICATION	0.9999129035282919	WITHOUT_CLASSIFICATION	8.709647170805237E-5	DEFECT
// create the generic jar first	WITHOUT_CLASSIFICATION	0.9999999169330387	WITHOUT_CLASSIFICATION	8.306696123167299E-8	DEFECT
// GenIC call on generic jar	WITHOUT_CLASSIFICATION	0.9999975261294567	WITHOUT_CLASSIFICATION	2.4738705433918003E-6	DEFECT
// create the real jar	WITHOUT_CLASSIFICATION	0.9999999151156209	WITHOUT_CLASSIFICATION	8.488437906578802E-8	DEFECT
// JOnAS-specific descriptor deployment	WITHOUT_CLASSIFICATION	0.9999991548829072	WITHOUT_CLASSIFICATION	8.451170927584224E-7	DEFECT
// JOnAS-specific DD // true if the JOnAS convention is used for the DD // Directory path of the EJB descriptor // EJB descriptor file name // Filename appearing before name terminator // Filename appearing after the name terminator	WITHOUT_CLASSIFICATION	0.9999995283083479	WITHOUT_CLASSIFICATION	4.716916521173575E-7	DEFECT
// extract path info	WITHOUT_CLASSIFICATION	0.9999974481897713	WITHOUT_CLASSIFICATION	2.551810228776088E-6	DEFECT
// descriptorName is just a file without path	WITHOUT_CLASSIFICATION	0.9999997321756783	WITHOUT_CLASSIFICATION	2.67824321689356E-7	DEFECT
/*         * Check for the odd case where the terminator and/or filename         * extension aren't found.  These will ensure "jonas-" appears at the         * end of the name and before the '.' (if present).         */	WITHOUT_CLASSIFICATION	0.9999999306096046	WITHOUT_CLASSIFICATION	6.939039543864351E-8	DEFECT
// no . found	WITHOUT_CLASSIFICATION	0.9999984862921775	WITHOUT_CLASSIFICATION	1.5137078225040964E-6	DEFECT
// try to find JOnAS specific convention name	WITHOUT_CLASSIFICATION	0.9999997164335163	WITHOUT_CLASSIFICATION	2.83566483784425E-7	DEFECT
// else get standard baseName	WITHOUT_CLASSIFICATION	0.9999996437879821	WITHOUT_CLASSIFICATION	3.5621201790354455E-7	DEFECT
// jonasroot	WITHOUT_CLASSIFICATION	0.9999984075192893	WITHOUT_CLASSIFICATION	1.5924807108276983E-6	DEFECT
// java policy file	WITHOUT_CLASSIFICATION	0.9999988811489932	WITHOUT_CLASSIFICATION	1.1188510068655226E-6	DEFECT
// outputdir	WITHOUT_CLASSIFICATION	0.9999813797979886	WITHOUT_CLASSIFICATION	1.862020201135998E-5	DEFECT
// work around a bug of GenIC 2.5	WITHOUT_CLASSIFICATION	0.9648815778643132	WITHOUT_CLASSIFICATION	0.03511842213568682	DEFECT
// classpath	WITHOUT_CLASSIFICATION	0.9999987260139049	WITHOUT_CLASSIFICATION	1.2739860949832324E-6	DEFECT
// try to create the classpath for the correct ORB	WITHOUT_CLASSIFICATION	0.9999897090212535	WITHOUT_CLASSIFICATION	1.0290978746445618E-5	DEFECT
// keepgenerated	WITHOUT_CLASSIFICATION	0.999999818237032	WITHOUT_CLASSIFICATION	1.8176296794007237E-7	DEFECT
// nocompil	WITHOUT_CLASSIFICATION	0.9999920310178709	WITHOUT_CLASSIFICATION	7.968982129108963E-6	DEFECT
// novalidation	WITHOUT_CLASSIFICATION	0.9999953951827392	WITHOUT_CLASSIFICATION	4.604817260823282E-6	DEFECT
// javac	WITHOUT_CLASSIFICATION	0.9999967453614054	WITHOUT_CLASSIFICATION	3.2546385946156885E-6	DEFECT
// javacopts	WITHOUT_CLASSIFICATION	0.9999992561936012	WITHOUT_CLASSIFICATION	7.438063989500798E-7	DEFECT
// rmicopts	WITHOUT_CLASSIFICATION	0.999997828575077	WITHOUT_CLASSIFICATION	2.1714249229963785E-6	DEFECT
// secpropag	WITHOUT_CLASSIFICATION	0.9999987157964809	WITHOUT_CLASSIFICATION	1.2842035191263787E-6	DEFECT
// verbose	WITHOUT_CLASSIFICATION	0.9999983746988041	WITHOUT_CLASSIFICATION	1.6253011959313018E-6	DEFECT
// input file to process by GenIC	WITHOUT_CLASSIFICATION	0.9999997675616636	WITHOUT_CLASSIFICATION	2.324383364471885E-7	DEFECT
// calling GenIC task	WITHOUT_CLASSIFICATION	0.9999962358061061	WITHOUT_CLASSIFICATION	3.7641938939809176E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999554955215	WITHOUT_CLASSIFICATION	4.4504478498603726E-7	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.999993225734014	WITHOUT_CLASSIFICATION	6.774265985996825E-6	DEFECT
// the method deleteOnExit() do not work because the directory is not empty	WITHOUT_CLASSIFICATION	0.9999129035282919	WITHOUT_CLASSIFICATION	8.709647170805237E-5	DEFECT
// baseNameTerminator not found: the descriptor use the // JOnAS naming convention, ie [Foo.xml,jonas-Foo.xml] and // not [Foo<baseNameTerminator>-ejb-jar.xml, // Foo<baseNameTerminator>-jonas-ejb-jar.xml].	WITHOUT_CLASSIFICATION	0.9999855620785565	WITHOUT_CLASSIFICATION	1.4437921443575253E-5	DEFECT
// jonasroot	WITHOUT_CLASSIFICATION	0.9999984075192893	WITHOUT_CLASSIFICATION	1.5924807108276983E-6	DEFECT
// GenIC task // GenIC class (3 are supported for various // versions	WITHOUT_CLASSIFICATION	0.9999979673331552	WITHOUT_CLASSIFICATION	2.0326668448912185E-6	DEFECT
// javac	WITHOUT_CLASSIFICATION	0.9999967453614054	WITHOUT_CLASSIFICATION	3.2546385946156885E-6	DEFECT
// additionalargs	WITHOUT_CLASSIFICATION	0.9999967280360251	WITHOUT_CLASSIFICATION	3.2719639749157508E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999998068383374	WITHOUT_CLASSIFICATION	1.9316166246942935E-7	DEFECT
// add the generated files to the ejbFiles	WITHOUT_CLASSIFICATION	0.9999985118721147	WITHOUT_CLASSIFICATION	1.4881278852453594E-6	DEFECT
// orb	WITHOUT_CLASSIFICATION	0.9999877943407369	WITHOUT_CLASSIFICATION	1.2205659262964989E-5	DEFECT
/* ----------------------------------------------------------------------------------- */	WITHOUT_CLASSIFICATION	0.9999446167387728	WITHOUT_CLASSIFICATION	5.538326122725603E-5	DEFECT
/* ----------------------------------------------------------------------------------- */	WITHOUT_CLASSIFICATION	0.9999446167387728	WITHOUT_CLASSIFICATION	5.538326122725603E-5	DEFECT
/* utilitary methods */	WITHOUT_CLASSIFICATION	0.9999998306653778	WITHOUT_CLASSIFICATION	1.6933462214108E-7	DEFECT
// Create the parser using whatever parser the system dictates	WITHOUT_CLASSIFICATION	0.999998720203034	WITHOUT_CLASSIFICATION	1.2797969659260528E-6	DEFECT
// Loop through the files. Each file represents one deployment // descriptor, and hence one bean in our model.	WITHOUT_CLASSIFICATION	0.9999996647977033	WITHOUT_CLASSIFICATION	3.352022966963451E-7	DEFECT
// process the deployment descriptor in each tool	WITHOUT_CLASSIFICATION	0.9999987081899048	WITHOUT_CLASSIFICATION	1.2918100951522183E-6	DEFECT
// end of execute()	WITHOUT_CLASSIFICATION	0.9999537332671754	WITHOUT_CLASSIFICATION	4.626673282468106E-5	DEFECT
// resolve relative to project basedir	WITHOUT_CLASSIFICATION	0.9999983180945948	WITHOUT_CLASSIFICATION	1.6819054052325145E-6	DEFECT
// Get the filename into a String object	WITHOUT_CLASSIFICATION	0.9999999454581898	WITHOUT_CLASSIFICATION	5.454181023363665E-8	DEFECT
// Get the value of the <ejb-name> tag.  Only the first occurrence.	WITHOUT_CLASSIFICATION	0.9999999968833143	WITHOUT_CLASSIFICATION	3.1166857408367883E-9	DEFECT
// Then the toplink deployment descriptor	WITHOUT_CLASSIFICATION	0.9999947817733894	WITHOUT_CLASSIFICATION	5.218226610651835E-6	DEFECT
// Setup a naming standard here?.	WITHOUT_CLASSIFICATION	0.999999094400109	WITHOUT_CLASSIFICATION	9.055998910068869E-7	DEFECT
// get all the files in the descriptor directory	WITHOUT_CLASSIFICATION	0.9999973989667349	WITHOUT_CLASSIFICATION	2.601033265105246E-6	DEFECT
// If we still can't find it, complain	WITHOUT_CLASSIFICATION	0.9999493063449039	WITHOUT_CLASSIFICATION	5.069365509607422E-5	DEFECT
// OK, properties file may be absolute	WITHOUT_CLASSIFICATION	0.9999995809801804	WITHOUT_CLASSIFICATION	4.1901981962908103E-7	DEFECT
// do we need to regenerate the file	WITHOUT_CLASSIFICATION	0.9999996080067852	WITHOUT_CLASSIFICATION	3.919932148246694E-7	DEFECT
//weblogic.ejb.utils.DDCreator.main(args);	WITHOUT_CLASSIFICATION	0.9999994637328533	WITHOUT_CLASSIFICATION	5.362671467505002E-7	DEFECT
// there was an exception - run with no exit to get proper error	WITHOUT_CLASSIFICATION	0.9998566694574079	WITHOUT_CLASSIFICATION	1.4333054259197528E-4	DEFECT
//weblogic.ejb.utils.DDCreator.main(newArgs);	WITHOUT_CLASSIFICATION	0.9999997736790459	WITHOUT_CLASSIFICATION	2.2632095403230885E-7	DEFECT
/* Attributes set by the Ant build file */	WITHOUT_CLASSIFICATION	0.999999541885011	WITHOUT_CLASSIFICATION	4.581149890656348E-7	DEFECT
// Create the zip entry and add it to the jar file	WITHOUT_CLASSIFICATION	0.9999994115428277	WITHOUT_CLASSIFICATION	5.884571723118015E-7	DEFECT
//add it to list of files in jar	WITHOUT_CLASSIFICATION	0.9999980004574394	WITHOUT_CLASSIFICATION	1.999542560606514E-6	DEFECT
// If it's a primitive wrapper then we shouldn't try and put // it into the jar, so ignore it.	WITHOUT_CLASSIFICATION	0.9999870745384638	WITHOUT_CLASSIFICATION	1.2925461536194463E-5	DEFECT
// Translate periods into path separators, add .class to the // name, create the File object and add it to the Hashtable.	WITHOUT_CLASSIFICATION	0.9999997063581689	WITHOUT_CLASSIFICATION	2.9364183109175955E-7	DEFECT
// Weblogic will throw an error if the deployment descriptor does // not match the class files.	WITHOUT_CLASSIFICATION	0.999658616461238	WITHOUT_CLASSIFICATION	3.413835387619852E-4	DEFECT
// Create the file input stream, and buffer everything over // to the jar output stream	WITHOUT_CLASSIFICATION	0.9999999679311343	WITHOUT_CLASSIFICATION	3.206886555737032E-8	DEFECT
// Close up the file input stream for the class file	WITHOUT_CLASSIFICATION	0.9999999555224347	WITHOUT_CLASSIFICATION	4.447756535386108E-8	DEFECT
// register any DTDs supplied by the user	WITHOUT_CLASSIFICATION	0.9999998222405219	WITHOUT_CLASSIFICATION	1.7775947818606927E-7	DEFECT
// none to register for generic	WITHOUT_CLASSIFICATION	0.9999988138692779	WITHOUT_CLASSIFICATION	1.186130722111699E-6	DEFECT
// Retrive the files to be added to JAR from EJB descriptor	WITHOUT_CLASSIFICATION	0.9999898417807753	WITHOUT_CLASSIFICATION	1.0158219224772121E-5	DEFECT
// Add any support classes specified in the build file	WITHOUT_CLASSIFICATION	0.9999982100913247	WITHOUT_CLASSIFICATION	1.7899086751993935E-6	DEFECT
// Determine the JAR filename (without filename extension)	WITHOUT_CLASSIFICATION	0.999999944003933	WITHOUT_CLASSIFICATION	5.599606708208381E-8	DEFECT
// First the regular deployment descriptor	WITHOUT_CLASSIFICATION	0.9999992690831068	WITHOUT_CLASSIFICATION	7.309168932731994E-7	DEFECT
// now the vendor specific files, if any	WITHOUT_CLASSIFICATION	0.9999997252111359	WITHOUT_CLASSIFICATION	2.7478886403245263E-7	DEFECT
// add any dependent files	WITHOUT_CLASSIFICATION	0.9999997709811179	WITHOUT_CLASSIFICATION	2.2901888215167945E-7	DEFECT
// Check to see if we need a build and start doing the work!	WITHOUT_CLASSIFICATION	0.9999878127411963	WITHOUT_CLASSIFICATION	1.2187258803582869E-5	DEFECT
// Log that we are going to build...	WITHOUT_CLASSIFICATION	0.9997026982396858	WITHOUT_CLASSIFICATION	2.9730176031411443E-4	DEFECT
// Use helper method to write the jarfile	WITHOUT_CLASSIFICATION	0.9999999125527331	WITHOUT_CLASSIFICATION	8.744726686452168E-8	DEFECT
// Log that the file is up to date...	WITHOUT_CLASSIFICATION	0.9999907416247501	WITHOUT_CLASSIFICATION	9.258375249995961E-6	DEFECT
/* Parse the ejb deployment descriptor.  While it may not             * look like much, we use a SAXParser and an inner class to             * get hold of all the classfile names for the descriptor.             */	WITHOUT_CLASSIFICATION	0.9998542133229491	WITHOUT_CLASSIFICATION	1.4578667705086857E-4	DEFECT
// add in support classes if any	WITHOUT_CLASSIFICATION	0.9999831608888821	WITHOUT_CLASSIFICATION	1.6839111117994735E-5	DEFECT
// Work out what the base name is	WITHOUT_CLASSIFICATION	0.9999823915999668	WITHOUT_CLASSIFICATION	1.7608400033199527E-5	DEFECT
// nothing to add for generic tool.	WITHOUT_CLASSIFICATION	0.9999963539581394	WITHOUT_CLASSIFICATION	3.6460418607894285E-6	DEFECT
// clean the addedfiles set	WITHOUT_CLASSIFICATION	0.9999994351337613	WITHOUT_CLASSIFICATION	5.648662387623926E-7	DEFECT
// Create the streams necessary to write the jarfile	WITHOUT_CLASSIFICATION	0.9999999652479991	WITHOUT_CLASSIFICATION	3.475200101304281E-8	DEFECT
//get and clean up innerclass name	WITHOUT_CLASSIFICATION	0.9999993038543463	WITHOUT_CLASSIFICATION	6.961456536565266E-7	DEFECT
// See if there are any inner classes for this class and add them in if there are	WITHOUT_CLASSIFICATION	0.9999540264120202	WITHOUT_CLASSIFICATION	4.597358797982314E-5	DEFECT
// Loop through all the class files found and add them to the jar	WITHOUT_CLASSIFICATION	0.999996865223797	WITHOUT_CLASSIFICATION	3.134776203051401E-6	DEFECT
//assertions take up space too	WITHOUT_CLASSIFICATION	0.9999992538551226	WITHOUT_CLASSIFICATION	7.461448775096353E-7	DEFECT
// link the file	WITHOUT_CLASSIFICATION	0.9999988395938482	WITHOUT_CLASSIFICATION	1.1604061518786825E-6	DEFECT
// Have to catch this because of the semantics of calling main()	WITHOUT_CLASSIFICATION	0.9999883365392438	WITHOUT_CLASSIFICATION	1.1663460756245891E-5	DEFECT
//trim the META_INF\ off of the file name	WITHOUT_CLASSIFICATION	0.9999996579889217	WITHOUT_CLASSIFICATION	3.420110783033721E-7	DEFECT
// end of writeJar	WITHOUT_CLASSIFICATION	0.9999972286369803	WITHOUT_CLASSIFICATION	2.7713630197725204E-6	DEFECT
// only generate a new ClassLoader if we have a classpath	WITHOUT_CLASSIFICATION	0.9999992966211892	WITHOUT_CLASSIFICATION	7.033788107041044E-7	DEFECT
// register all the known DTDs	WITHOUT_CLASSIFICATION	0.9999993562228947	WITHOUT_CLASSIFICATION	6.437771053879813E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999998068383374	WITHOUT_CLASSIFICATION	1.9316166246942935E-7	DEFECT
// The the weblogic cmp deployment descriptor	WITHOUT_CLASSIFICATION	0.9999997058349015	WITHOUT_CLASSIFICATION	2.941650985599449E-7	DEFECT
// try to determine it from publicId	WITHOUT_CLASSIFICATION	0.9999990978711142	WITHOUT_CLASSIFICATION	9.021288857979125E-7	DEFECT
// try to use the compiler specified by build.compiler. // Right now we are just going to allow Jikes	WITHOUT_CLASSIFICATION	0.9999999348047479	WITHOUT_CLASSIFICATION	6.519525214740389E-8	DEFECT
// need to create a generic jar first.	WITHOUT_CLASSIFICATION	0.9999998283390876	WITHOUT_CLASSIFICATION	1.7166091238014372E-7	DEFECT
// Only go forward if the generic and the weblogic file both exist	WITHOUT_CLASSIFICATION	0.9999999932184371	WITHOUT_CLASSIFICATION	6.781562914963369E-9	DEFECT
//open jar files	WITHOUT_CLASSIFICATION	0.9999988123058804	WITHOUT_CLASSIFICATION	1.1876941195272382E-6	DEFECT
//get the list of generic jar entries	WITHOUT_CLASSIFICATION	0.9999999151404215	WITHOUT_CLASSIFICATION	8.485957848039709E-8	DEFECT
//get the list of weblogic jar entries	WITHOUT_CLASSIFICATION	0.9999999945783721	WITHOUT_CLASSIFICATION	5.421627848200482E-9	DEFECT
//Cycle Through generic and make sure its in weblogic	WITHOUT_CLASSIFICATION	0.9999948229379385	WITHOUT_CLASSIFICATION	5.177062061496414E-6	DEFECT
// File name/path match	WITHOUT_CLASSIFICATION	0.99999975719661	WITHOUT_CLASSIFICATION	2.428033900342347E-7	DEFECT
// Check files see if same	WITHOUT_CLASSIFICATION	0.9999999396542961	WITHOUT_CLASSIFICATION	6.03457039350007E-8	DEFECT
//File are different see if its an object or an interface	WITHOUT_CLASSIFICATION	0.9999992007639388	WITHOUT_CLASSIFICATION	7.992360612281433E-7	DEFECT
//Interface changed   rebuild jar.	WITHOUT_CLASSIFICATION	0.9999988591439639	WITHOUT_CLASSIFICATION	1.1408560361344361E-6	DEFECT
//Object class Changed   update it.	WITHOUT_CLASSIFICATION	0.9999983253595125	WITHOUT_CLASSIFICATION	1.6746404875134288E-6	DEFECT
// is it the manifest. If so ignore it	WITHOUT_CLASSIFICATION	0.9999984205773447	WITHOUT_CLASSIFICATION	1.5794226553892923E-6	DEFECT
//File other then class changed   rebuild	WITHOUT_CLASSIFICATION	0.9999837524003945	WITHOUT_CLASSIFICATION	1.6247599605523726E-5	DEFECT
// a file doesnt exist rebuild	WITHOUT_CLASSIFICATION	0.9999997207241015	WITHOUT_CLASSIFICATION	2.792758984939149E-7	DEFECT
//Copy files from old weblogic jar	WITHOUT_CLASSIFICATION	0.9999991820008197	WITHOUT_CLASSIFICATION	8.179991802499731E-7	DEFECT
// Use the entry from the generic jar	WITHOUT_CLASSIFICATION	0.9999988937417992	WITHOUT_CLASSIFICATION	1.1062582008889705E-6	DEFECT
//use fle from original weblogic jar	WITHOUT_CLASSIFICATION	0.9999999151278541	WITHOUT_CLASSIFICATION	8.487214589674067E-8	DEFECT
// need to close files and perhaps rename output	WITHOUT_CLASSIFICATION	0.9999997188198986	WITHOUT_CLASSIFICATION	2.811801014550184E-7	DEFECT
// empty	WITHOUT_CLASSIFICATION	0.9999962767121857	WITHOUT_CLASSIFICATION	3.7232878143217396E-6	DEFECT
// if the implementation classes don;t exist regenerate	WITHOUT_CLASSIFICATION	0.999983334471985	WITHOUT_CLASSIFICATION	1.6665528015049578E-5	DEFECT
// any problems - just regenerate	WITHOUT_CLASSIFICATION	0.9999988235098111	WITHOUT_CLASSIFICATION	1.176490188993634E-6	DEFECT
// create a Java task to do the rebuild	WITHOUT_CLASSIFICATION	0.9999995366698735	WITHOUT_CLASSIFICATION	4.633301264777602E-7	DEFECT
//weblogic.ejbc.main(args);	WITHOUT_CLASSIFICATION	0.9999992309655685	WITHOUT_CLASSIFICATION	7.690344314256238E-7	DEFECT
/* Build and populate an instance of the ejbc utility */	WITHOUT_CLASSIFICATION	0.9999967410763673	WITHOUT_CLASSIFICATION	3.2589236326700988E-6	DEFECT
// Have to catch this because of the semantics of calling main()	WITHOUT_CLASSIFICATION	0.9999883365392438	WITHOUT_CLASSIFICATION	1.1663460756245891E-5	DEFECT
//classpath	WITHOUT_CLASSIFICATION	0.9999958382759787	WITHOUT_CLASSIFICATION	4.161724021311874E-6	DEFECT
/* Attributes set by the Ant build file */	WITHOUT_CLASSIFICATION	0.999999541885011	WITHOUT_CLASSIFICATION	4.581149890656348E-7	DEFECT
// Get the filename of vendor specific descriptor	WITHOUT_CLASSIFICATION	0.9999999782744062	WITHOUT_CLASSIFICATION	2.1725593729099708E-8	DEFECT
//trim the META_INF\ off of the file name	WITHOUT_CLASSIFICATION	0.9999996579889217	WITHOUT_CLASSIFICATION	3.420110783033721E-7	DEFECT
// Is the ser file or any of the source files newer then the class files. // firstly find the oldest of the two class files.	WITHOUT_CLASSIFICATION	0.9999829935688246	WITHOUT_CLASSIFICATION	1.700643117537071E-5	DEFECT
// run with no exit for better reporting	WITHOUT_CLASSIFICATION	0.9999821829096047	WITHOUT_CLASSIFICATION	1.7817090395282472E-5	DEFECT
//weblogic.ejbc.main(newArgs);	WITHOUT_CLASSIFICATION	0.9999996754441687	WITHOUT_CLASSIFICATION	3.245558313124114E-7	DEFECT
/*     * Regardless of the name of the iAS-specific EJB descriptor file, it will     * written in the completed JAR file as "ias-ejb-jar.xml".  This is the     * naming convention implemented by iAS.     */	WITHOUT_CLASSIFICATION	0.9999993827399914	WITHOUT_CLASSIFICATION	6.172600085766816E-7	DEFECT
/* Add CMP descriptors to the list of EJB files */	WITHOUT_CLASSIFICATION	0.9999949921862069	WITHOUT_CLASSIFICATION	5.007813793098789E-6	DEFECT
/* Only calculate the descriptor name once */	WITHOUT_CLASSIFICATION	0.9999995927167132	WITHOUT_CLASSIFICATION	4.072832868536054E-7	DEFECT
// Directory path of the EJB descriptor // Filename appearing before name terminator // Filename appearing after the name terminator	WITHOUT_CLASSIFICATION	0.9999808754314129	WITHOUT_CLASSIFICATION	1.9124568587123055E-5	DEFECT
/* Find the end of the standard descriptor's relative path */	WITHOUT_CLASSIFICATION	0.9999647990325409	WITHOUT_CLASSIFICATION	3.5200967459116733E-5	DEFECT
/* Check to see if the standard name is used (there's no basename) */	WITHOUT_CLASSIFICATION	0.9999999278708632	WITHOUT_CLASSIFICATION	7.212913679037391E-8	DEFECT
/*             * Check for the odd case where the terminator and/or filename             * extension aren't found.  These will ensure "ias-" appears at the             * end of the name and before the '.' (if present).             */	WITHOUT_CLASSIFICATION	0.9999999265301207	WITHOUT_CLASSIFICATION	7.346987935160209E-8	DEFECT
//choose the right vendor DD	WITHOUT_CLASSIFICATION	0.9999382376216447	WITHOUT_CLASSIFICATION	6.176237835525992E-5	DEFECT
// ejb jar file to verify	WITHOUT_CLASSIFICATION	0.9999997009330687	WITHOUT_CLASSIFICATION	2.9906693138093806E-7	DEFECT
//debug ?	WITHOUT_CLASSIFICATION	0.9999449079278081	WITHOUT_CLASSIFICATION	5.50920721919785E-5	DEFECT
//set the classpath	WITHOUT_CLASSIFICATION	0.999999096282431	WITHOUT_CLASSIFICATION	9.037175690606923E-7	DEFECT
//list file	WITHOUT_CLASSIFICATION	0.9999997230012069	WITHOUT_CLASSIFICATION	2.769987931333312E-7	DEFECT
//no TIE classes	WITHOUT_CLASSIFICATION	0.9999988392264184	WITHOUT_CLASSIFICATION	1.1607735815042147E-6	DEFECT
//root dir	WITHOUT_CLASSIFICATION	0.999813291404462	WITHOUT_CLASSIFICATION	1.867085955381201E-4	DEFECT
//compiling order	WITHOUT_CLASSIFICATION	0.9999958481791231	WITHOUT_CLASSIFICATION	4.151820876936726E-6	DEFECT
//add the home class	WITHOUT_CLASSIFICATION	0.9999697190762853	WITHOUT_CLASSIFICATION	3.028092371466402E-5	DEFECT
//build the home classes list.	WITHOUT_CLASSIFICATION	0.9999991917576426	WITHOUT_CLASSIFICATION	8.082423572524842E-7	DEFECT
//remove .class extension	WITHOUT_CLASSIFICATION	0.9999897885193972	WITHOUT_CLASSIFICATION	1.0211480602694046E-5	DEFECT
//add the gen files to the collection	WITHOUT_CLASSIFICATION	0.9997416841915022	WITHOUT_CLASSIFICATION	2.583158084977313E-4	DEFECT
//remove the .class	WITHOUT_CLASSIFICATION	0.999992971176738	WITHOUT_CLASSIFICATION	7.028823261949313E-6	DEFECT
// Get the Extensions document	WITHOUT_CLASSIFICATION	0.9999996620849282	WITHOUT_CLASSIFICATION	3.379150718443705E-7	DEFECT
// We attempt to put in the MAP and Schema files of CMP beans	WITHOUT_CLASSIFICATION	0.9999879595221438	WITHOUT_CLASSIFICATION	1.2040477856258464E-5	DEFECT
// Add the Map file	WITHOUT_CLASSIFICATION	0.9999996369871412	WITHOUT_CLASSIFICATION	3.63012858759531E-7	DEFECT
// Theres nothing else to see here...keep moving sonny	WITHOUT_CLASSIFICATION	0.9996843112693146	WITHOUT_CLASSIFICATION	3.1568873068540536E-4	DEFECT
// Set the options	WITHOUT_CLASSIFICATION	0.9999998724731135	WITHOUT_CLASSIFICATION	1.2752688650343944E-7	DEFECT
// Set the JvmArgs	WITHOUT_CLASSIFICATION	0.9999994225493319	WITHOUT_CLASSIFICATION	5.774506680189723E-7	DEFECT
// Set the Environment variable	WITHOUT_CLASSIFICATION	0.9999996765257843	WITHOUT_CLASSIFICATION	3.2347421580514104E-7	DEFECT
// Check if list of files to check has been specified	WITHOUT_CLASSIFICATION	0.9999999825732302	WITHOUT_CLASSIFICATION	1.7426769798501503E-8	DEFECT
// Have to catch this because of the semantics of calling main()	WITHOUT_CLASSIFICATION	0.9999883365392438	WITHOUT_CLASSIFICATION	1.1663460756245891E-5	DEFECT
//open jar files	WITHOUT_CLASSIFICATION	0.9999988123058804	WITHOUT_CLASSIFICATION	1.1876941195272382E-6	DEFECT
//get the list of generic jar entries	WITHOUT_CLASSIFICATION	0.9999999151404215	WITHOUT_CLASSIFICATION	8.485957848039709E-8	DEFECT
//File are different see if its an object or an interface	WITHOUT_CLASSIFICATION	0.9999992007639388	WITHOUT_CLASSIFICATION	7.992360612281433E-7	DEFECT
//Interface changed   rebuild jar.	WITHOUT_CLASSIFICATION	0.9999988591439639	WITHOUT_CLASSIFICATION	1.1408560361344361E-6	DEFECT
//Object class Changed   update it.	WITHOUT_CLASSIFICATION	0.9999983253595125	WITHOUT_CLASSIFICATION	1.6746404875134288E-6	DEFECT
// is it the manifest. If so ignore it	WITHOUT_CLASSIFICATION	0.9999984205773447	WITHOUT_CLASSIFICATION	1.5794226553892923E-6	DEFECT
//File other then class changed   rebuild	WITHOUT_CLASSIFICATION	0.9999837524003945	WITHOUT_CLASSIFICATION	1.6247599605523726E-5	DEFECT
// Update with changed Bean class	WITHOUT_CLASSIFICATION	0.9999665705727604	WITHOUT_CLASSIFICATION	3.342942723966326E-5	DEFECT
// Use the entry from the generic jar	WITHOUT_CLASSIFICATION	0.9999988937417992	WITHOUT_CLASSIFICATION	1.1062582008889705E-6	DEFECT
// register all the DTDs, both the ones that are known and // any supplied by the user	WITHOUT_CLASSIFICATION	0.9999999803121078	WITHOUT_CLASSIFICATION	1.968789215277188E-8	DEFECT
// Set the working directory	WITHOUT_CLASSIFICATION	0.9995659006882033	WITHOUT_CLASSIFICATION	4.3409931179675624E-4	DEFECT
// Set the Java class name	WITHOUT_CLASSIFICATION	0.9999990771217006	WITHOUT_CLASSIFICATION	9.228782994735592E-7	DEFECT
// create the -generic.jar, if required	WITHOUT_CLASSIFICATION	0.9999982298679785	WITHOUT_CLASSIFICATION	1.7701320214993287E-6	DEFECT
// create the "undeployed" output .jar, if required	WITHOUT_CLASSIFICATION	0.9999964416513424	WITHOUT_CLASSIFICATION	3.5583486575254036E-6	DEFECT
// Only go forward if the generic and the websphere file both exist	WITHOUT_CLASSIFICATION	0.999999979283468	WITHOUT_CLASSIFICATION	2.071653211152673E-8	DEFECT
//get the list of websphere jar entries	WITHOUT_CLASSIFICATION	0.999999955171424	WITHOUT_CLASSIFICATION	4.482857585013706E-8	DEFECT
//Cycle Through generic and make sure its in websphere	WITHOUT_CLASSIFICATION	0.9999795761031589	WITHOUT_CLASSIFICATION	2.0423896841045192E-5	DEFECT
// File name/path match // Check files see if same	WITHOUT_CLASSIFICATION	0.9999999022302745	WITHOUT_CLASSIFICATION	9.77697255510235E-8	DEFECT
// a file doesn't exist rebuild	WITHOUT_CLASSIFICATION	0.9999960918628015	WITHOUT_CLASSIFICATION	3.908137198530189E-6	DEFECT
//Copy files from old websphere jar	WITHOUT_CLASSIFICATION	0.9999959144917451	WITHOUT_CLASSIFICATION	4.085508254927069E-6	DEFECT
//use fle from original websphere jar	WITHOUT_CLASSIFICATION	0.9999994272913966	WITHOUT_CLASSIFICATION	5.727086034423162E-7	DEFECT
// Specification Name must match	WITHOUT_CLASSIFICATION	0.9999999458718423	WITHOUT_CLASSIFICATION	5.4128157779573186E-8	DEFECT
// Available specification version must be >= required	WITHOUT_CLASSIFICATION	0.999999851045567	WITHOUT_CLASSIFICATION	1.4895443293506125E-7	DEFECT
// Implementation Vendor ID must match	WITHOUT_CLASSIFICATION	0.9999841320217674	WITHOUT_CLASSIFICATION	1.586797823263287E-5	DEFECT
// Implementation Vendor ID must match	WITHOUT_CLASSIFICATION	0.9999841320217674	WITHOUT_CLASSIFICATION	1.586797823263287E-5	DEFECT
// Implementation version must be >= required	WITHOUT_CLASSIFICATION	0.9999960488432724	WITHOUT_CLASSIFICATION	3.951156727492057E-6	DEFECT
// This available optional package satisfies the requirements	WITHOUT_CLASSIFICATION	0.9999998075991008	WITHOUT_CLASSIFICATION	1.92400899096373E-7	DEFECT
// This available optional package satisfies the requirements	WITHOUT_CLASSIFICATION	0.9999998075991008	WITHOUT_CLASSIFICATION	1.92400899096373E-7	DEFECT
//Reset list of sections	WITHOUT_CLASSIFICATION	0.9999993925419366	WITHOUT_CLASSIFICATION	6.074580634076851E-7	DEFECT
// Extension Name must match	WITHOUT_CLASSIFICATION	0.9999999030759916	WITHOUT_CLASSIFICATION	9.692400839864476E-8	DEFECT
//Add all the dependency data to manifest for dependencies	WITHOUT_CLASSIFICATION	0.9999988539689216	WITHOUT_CLASSIFICATION	1.1460310783869784E-6	DEFECT
// Check if list of files to check has been specified	WITHOUT_CLASSIFICATION	0.9999999825732302	WITHOUT_CLASSIFICATION	1.7426769798501503E-8	DEFECT
// CheckStyle:MemberNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9999990796323757	WITHOUT_CLASSIFICATION	9.203676243315108E-7	DEFECT
// CheckStyle:MemberNameCheck ON	WITHOUT_CLASSIFICATION	0.9999995161448159	WITHOUT_CLASSIFICATION	4.838551841547503E-7	DEFECT
// change this to get the objects from the other reference	WITHOUT_CLASSIFICATION	0.9999997666043922	WITHOUT_CLASSIFICATION	2.3339560783504718E-7	DEFECT
//Add all the dependency data to manifest for "optional" //dependencies	WITHOUT_CLASSIFICATION	0.9999993933588136	WITHOUT_CLASSIFICATION	6.066411863471798E-7	DEFECT
//add in something like //"Extension-List: javahelp java3d"	WITHOUT_CLASSIFICATION	0.999996069418013	WITHOUT_CLASSIFICATION	3.930581986974019E-6	DEFECT
//all methods static	WITHOUT_CLASSIFICATION	0.9999991670160713	WITHOUT_CLASSIFICATION	8.329839286078227E-7	DEFECT
/*     * Gets the destination file     */	WITHOUT_CLASSIFICATION	0.9999999070370176	WITHOUT_CLASSIFICATION	9.296298247456514E-8	DEFECT
/*     * Validates URL     */	WITHOUT_CLASSIFICATION	0.9999999026648272	WITHOUT_CLASSIFICATION	9.733517283812411E-8	DEFECT
//Load default locale bundle files //using default file encoding scheme.	WITHOUT_CLASSIFICATION	0.9999999211472843	WITHOUT_CLASSIFICATION	7.885271572086516E-8	DEFECT
//if all resource files associated with this bundle //have been scanned for and still not able to //find a single resrouce file, throw exception	WITHOUT_CLASSIFICATION	0.9999768352600122	WITHOUT_CLASSIFICATION	2.31647399877949E-5	DEFECT
//So long as the line isn't empty and isn't a comment...	WITHOUT_CLASSIFICATION	0.9997364405684896	WITHOUT_CLASSIFICATION	2.635594315103921E-4	DEFECT
//Legal Key-Value separators are :, = and white space.	WITHOUT_CLASSIFICATION	0.9999997264923633	WITHOUT_CLASSIFICATION	2.7350763669477276E-7	DEFECT
//Only if we do have a key is there going to be a value	WITHOUT_CLASSIFICATION	0.999981392335889	WITHOUT_CLASSIFICATION	1.860766411101096E-5	DEFECT
//Handle line continuations, if any	WITHOUT_CLASSIFICATION	0.9999997872480048	WITHOUT_CLASSIFICATION	2.127519951239003E-7	DEFECT
//Has key already been loaded into resourceMap?	WITHOUT_CLASSIFICATION	0.9999999662984885	WITHOUT_CLASSIFICATION	3.3701511471250684E-8	DEFECT
//Make sure parent dirs exist, else, create them.	WITHOUT_CLASSIFICATION	0.9999947148547752	WITHOUT_CLASSIFICATION	5.285145224762631E-6	DEFECT
//Check to see if dest file has to be recreated	WITHOUT_CLASSIFICATION	0.9999999026228804	WITHOUT_CLASSIFICATION	9.737711960584689E-8	DEFECT
// is there a startToken // and there is still stuff following the startToken	WITHOUT_CLASSIFICATION	0.9998805033899533	WITHOUT_CLASSIFICATION	1.1949661004679647E-4	DEFECT
// we found a starttoken, is there an endtoken following? // start at token+tokenlength because start and end // token may be indentical	WITHOUT_CLASSIFICATION	0.9985534746066874	WITHOUT_CLASSIFICATION	0.0014465253933125006	DEFECT
// grab the token	WITHOUT_CLASSIFICATION	0.9999960488878046	WITHOUT_CLASSIFICATION	3.951112195369851E-6	DEFECT
// If there is a white space or = or :, then // it isn't to be treated as a valid key.	WITHOUT_CLASSIFICATION	0.9999823304954997	WITHOUT_CLASSIFICATION	1.7669504500332924E-5	DEFECT
// find the replace string	WITHOUT_CLASSIFICATION	0.9999997481678009	WITHOUT_CLASSIFICATION	2.518321991149384E-7	DEFECT
// generate the new line	WITHOUT_CLASSIFICATION	0.9999997452682317	WITHOUT_CLASSIFICATION	2.5473176827826765E-7	DEFECT
// set start position for next search	WITHOUT_CLASSIFICATION	0.9999779485893778	WITHOUT_CLASSIFICATION	2.2051410622234927E-5	DEFECT
// find next starttoken	WITHOUT_CLASSIFICATION	0.9999694538003093	WITHOUT_CLASSIFICATION	3.054619969069836E-5	DEFECT
// deal with specified srcDir	WITHOUT_CLASSIFICATION	0.9999999682695792	WITHOUT_CLASSIFICATION	3.1730420820823804E-8	DEFECT
// deal with the filesets	WITHOUT_CLASSIFICATION	0.9999998169813653	WITHOUT_CLASSIFICATION	1.8301863467426218E-7	DEFECT
// remove any files that shouldn't be overwritten.	WITHOUT_CLASSIFICATION	0.9998715775064368	WITHOUT_CLASSIFICATION	1.2842249356308856E-4	DEFECT
// check that the password has been set	WITHOUT_CLASSIFICATION	0.9999952862806555	WITHOUT_CLASSIFICATION	4.713719344554616E-6	DEFECT
// check for missing application on deploy & update	WITHOUT_CLASSIFICATION	0.9999998029029977	WITHOUT_CLASSIFICATION	1.9709700227558552E-7	DEFECT
// check for missing source on deploy & update	WITHOUT_CLASSIFICATION	0.9999998284531241	WITHOUT_CLASSIFICATION	1.7154687588948737E-7	DEFECT
// check for missing application on delete & undeploy	WITHOUT_CLASSIFICATION	0.9999998802308796	WITHOUT_CLASSIFICATION	1.1976912042207422E-7	DEFECT
// keys to optional attributes	WITHOUT_CLASSIFICATION	0.9999997690096362	WITHOUT_CLASSIFICATION	2.3099036375776094E-7	DEFECT
// constructs the "-url <url> -debug <action> <password>" portion // of the commmand line	WITHOUT_CLASSIFICATION	0.9999423436473485	WITHOUT_CLASSIFICATION	5.7656352651581505E-5	DEFECT
/////////////////////////////////////////////////////////////////////////// // // Place vendor specific tool creations here. // ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999917325664859	WITHOUT_CLASSIFICATION	8.267433514131366E-6	DEFECT
/////////////////////////////////////////////////////////////////////////// // // Execute method // ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999996315962694	WITHOUT_CLASSIFICATION	3.6840373063558803E-7	DEFECT
/////////////////////////////////////////////////////////////////////////// // // Set/get methods // ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999997369705116	WITHOUT_CLASSIFICATION	2.630294884705514E-7	DEFECT
// keys to optional attributes	WITHOUT_CLASSIFICATION	0.9999997690096362	WITHOUT_CLASSIFICATION	2.3099036375776094E-7	DEFECT
// convert backslashes to slashes, otherwise jjtree will // put this as comments and this seems to confuse javacc	WITHOUT_CLASSIFICATION	0.9999986594308005	WITHOUT_CLASSIFICATION	1.3405691994952903E-6	DEFECT
// required attributes	WITHOUT_CLASSIFICATION	0.9999991609778291	WITHOUT_CLASSIFICATION	8.390221707848852E-7	DEFECT
// required attributes	WITHOUT_CLASSIFICATION	0.9999991609778291	WITHOUT_CLASSIFICATION	8.390221707848852E-7	DEFECT
// required attributes	WITHOUT_CLASSIFICATION	0.9999991609778291	WITHOUT_CLASSIFICATION	8.390221707848852E-7	DEFECT
// load command line with optional attributes	WITHOUT_CLASSIFICATION	0.9999997660844514	WITHOUT_CLASSIFICATION	2.339155487089976E-7	DEFECT
// load command line with optional attributes	WITHOUT_CLASSIFICATION	0.9999997660844514	WITHOUT_CLASSIFICATION	2.339155487089976E-7	DEFECT
// load command line with optional attributes	WITHOUT_CLASSIFICATION	0.9999997660844514	WITHOUT_CLASSIFICATION	2.339155487089976E-7	DEFECT
// use the directory containing the target as the output directory	WITHOUT_CLASSIFICATION	0.9999999996251361	WITHOUT_CLASSIFICATION	3.7486384416692035E-10	DEFECT
// use the directory containing the target as the output directory	WITHOUT_CLASSIFICATION	0.9999999996251361	WITHOUT_CLASSIFICATION	3.7486384416692035E-10	DEFECT
// used by jpackage for JavaCC 3.x	WITHOUT_CLASSIFICATION	0.9999998858811481	WITHOUT_CLASSIFICATION	1.1411885192337221E-7	DEFECT
// check the target is a file	WITHOUT_CLASSIFICATION	0.9999999946249336	WITHOUT_CLASSIFICATION	5.375066418293446E-9	DEFECT
// determine if the generated java file is up-to-date	WITHOUT_CLASSIFICATION	0.9999999436083321	WITHOUT_CLASSIFICATION	5.6391667937453194E-8	DEFECT
// Extract file's base-name	WITHOUT_CLASSIFICATION	0.9999995364302835	WITHOUT_CLASSIFICATION	4.6356971646172035E-7	DEFECT
// Replace the file's extension with '.java'	WITHOUT_CLASSIFICATION	0.9999974193370521	WITHOUT_CLASSIFICATION	2.580662947951705E-6	DEFECT
// Change the directory	WITHOUT_CLASSIFICATION	0.999999861260527	WITHOUT_CLASSIFICATION	1.3873947292107623E-7	DEFECT
// This default has been good enough until Ant 1.6.3, so stick // with it	WITHOUT_CLASSIFICATION	0.9999924947743598	WITHOUT_CLASSIFICATION	7.5052256402748855E-6	DEFECT
// first search for the "old" javah class in 1.4.2 tools.jar	WITHOUT_CLASSIFICATION	0.9999997242315584	WITHOUT_CLASSIFICATION	2.7576844162664164E-7	DEFECT
// assume older than 1.4.2 tools.jar	WITHOUT_CLASSIFICATION	0.9999998271926314	WITHOUT_CLASSIFICATION	1.7280736870291247E-7	DEFECT
//private CommandlineJava commandline = new CommandlineJava();	WITHOUT_CLASSIFICATION	0.9999939594118841	WITHOUT_CLASSIFICATION	6.040588115940173E-6	DEFECT
// required attributes // Deprecated! // Use this going forward	WITHOUT_CLASSIFICATION	0.9999997027035739	WITHOUT_CLASSIFICATION	2.9729642608177246E-7	DEFECT
// optional attributes	WITHOUT_CLASSIFICATION	0.9999999776588518	WITHOUT_CLASSIFICATION	2.2341148111887304E-8	DEFECT
// execute the test and get the return code	WITHOUT_CLASSIFICATION	0.9999996146173417	WITHOUT_CLASSIFICATION	3.8538265838413985E-7	DEFECT
// if there is an error/failure and that it should halt, stop // everything otherwise just log a statement	WITHOUT_CLASSIFICATION	0.999999739500939	WITHOUT_CLASSIFICATION	2.6049906090124476E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999554955215	WITHOUT_CLASSIFICATION	4.4504478498603726E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999554955215	WITHOUT_CLASSIFICATION	4.4504478498603726E-7	DEFECT
/* int accessFlags = */	WITHOUT_CLASSIFICATION	0.9999970023366249	WITHOUT_CLASSIFICATION	2.9976633751734964E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999998068383374	WITHOUT_CLASSIFICATION	1.9316166246942935E-7	DEFECT
// not necessary as JDepend would fail, but why loose // some time?	WITHOUT_CLASSIFICATION	0.9999443558227138	WITHOUT_CLASSIFICATION	5.5644177286272554E-5	DEFECT
// This bit turns <exclude> child tags into patters to ignore	WITHOUT_CLASSIFICATION	0.9999953245140573	WITHOUT_CLASSIFICATION	4.675485942728743E-6	DEFECT
// JL: comment extracted from JUnitTask (and slightly modified)	WITHOUT_CLASSIFICATION	0.999593906973603	WITHOUT_CLASSIFICATION	4.060930263969591E-4	DEFECT
// if not set, auto-create the ClassPath from the project	WITHOUT_CLASSIFICATION	0.9999995811887396	WITHOUT_CLASSIFICATION	4.1881126046103124E-7	DEFECT
// having a space between the file and its path causes commandline // to add quotes around the argument thus making JDepend not taking // it into account. Thus we split it in two	WITHOUT_CLASSIFICATION	0.9999766571845702	WITHOUT_CLASSIFICATION	2.3342815429827717E-5	DEFECT
// This is the new way - use classespath - code is the // same for now	WITHOUT_CLASSIFICATION	0.9996927114508933	WITHOUT_CLASSIFICATION	3.072885491066732E-4	DEFECT
// read in all constant pool entries.	WITHOUT_CLASSIFICATION	0.999998562845732	WITHOUT_CLASSIFICATION	1.4371542679399592E-6	DEFECT
// verify this is a valid class file.	WITHOUT_CLASSIFICATION	0.999979747621979	WITHOUT_CLASSIFICATION	2.025237802089206E-5	DEFECT
/* int version = */	WITHOUT_CLASSIFICATION	0.999995922567636	WITHOUT_CLASSIFICATION	4.077432363984691E-6	DEFECT
// read the constant pool.	WITHOUT_CLASSIFICATION	0.9999988546027582	WITHOUT_CLASSIFICATION	1.1453972418571678E-6	DEFECT
// read access flags and class index.	WITHOUT_CLASSIFICATION	0.9998533706110793	WITHOUT_CLASSIFICATION	1.466293889208132E-4	DEFECT
//Be sure everything has been set.	WITHOUT_CLASSIFICATION	0.9999953402750165	WITHOUT_CLASSIFICATION	4.6597249835107915E-6	DEFECT
//Do the merge	WITHOUT_CLASSIFICATION	0.999995438669362	WITHOUT_CLASSIFICATION	4.561330637997984E-6	DEFECT
//Add this file to the addfiles Vector and add it //later at the top level of the output file.	WITHOUT_CLASSIFICATION	0.999995993548042	WITHOUT_CLASSIFICATION	4.00645195793569E-6	DEFECT
//do nothing	WITHOUT_CLASSIFICATION	0.9999935029599855	WITHOUT_CLASSIFICATION	6.4970400145264355E-6	DEFECT
// jlink output input1 ... inputN	WITHOUT_CLASSIFICATION	0.9996645142326301	WITHOUT_CLASSIFICATION	3.354857673698369E-4	DEFECT
// To maintain compatibility with the command-line version, // we will only add files to be merged.	WITHOUT_CLASSIFICATION	0.9999991504883508	WITHOUT_CLASSIFICATION	8.495116491626745E-7	DEFECT
/*     * Actually performs the merging of f into the output.     * f should be a zip or jar file.     */	WITHOUT_CLASSIFICATION	0.9999949204080367	WITHOUT_CLASSIFICATION	5.079591963326343E-6	DEFECT
//Check to see that the file with name "name" exists.	WITHOUT_CLASSIFICATION	0.9999998266052142	WITHOUT_CLASSIFICATION	1.7339478572878541E-7	DEFECT
//META-INF not found in the name of the entry. Go ahead and process it.	WITHOUT_CLASSIFICATION	0.9999968788032833	WITHOUT_CLASSIFICATION	3.121196716776393E-6	DEFECT
//Weblogic jspc does not seem to work unless u explicitly set this... // Does not take the classpath from the env.... // Am i missing something about the Java task??	WITHOUT_CLASSIFICATION	0.9649415761036289	WITHOUT_CLASSIFICATION	0.03505842389637116	DEFECT
//do nothing	WITHOUT_CLASSIFICATION	0.9999935029599855	WITHOUT_CLASSIFICATION	6.4970400145264355E-6	DEFECT
/*     * Necessary in the case where you add a entry that     * is not compressed.     */	WITHOUT_CLASSIFICATION	0.9999984907875459	WITHOUT_CLASSIFICATION	1.5092124540938603E-6	DEFECT
//Ignore manifest entries.  They're bound to cause conflicts between //files that are being merged.  User should supply their own //manifest file when doing the merge.	WITHOUT_CLASSIFICATION	0.9999999289991289	WITHOUT_CLASSIFICATION	7.100087107801599E-8	DEFECT
//It was the duplicate entry.	WITHOUT_CLASSIFICATION	0.999998796951606	WITHOUT_CLASSIFICATION	1.2030483939950122E-6	DEFECT
/*     * Adds contents of a directory to the output.     */	WITHOUT_CLASSIFICATION	0.9999991133629423	WITHOUT_CLASSIFICATION	8.866370575607351E-7	DEFECT
/*     * Gets the name of an entry in the file.  This is the real name     * which for a class is the name of the package with the class     * name appended.     */	WITHOUT_CLASSIFICATION	0.9999998385527581	WITHOUT_CLASSIFICATION	1.6144724187240842E-7	DEFECT
// see if the file is in fact a .class file, and determine its actual name.	WITHOUT_CLASSIFICATION	0.9999999875506929	WITHOUT_CLASSIFICATION	1.2449307136549275E-8	DEFECT
/*     * Adds a file to the output stream.     */	WITHOUT_CLASSIFICATION	0.9999997182600946	WITHOUT_CLASSIFICATION	2.8173990543561883E-7	DEFECT
//Make sure file exists	WITHOUT_CLASSIFICATION	0.9999989687771698	WITHOUT_CLASSIFICATION	1.0312228302815302E-6	DEFECT
/*     * A convenience method that several other methods might call.     */	WITHOUT_CLASSIFICATION	0.9999991350322213	WITHOUT_CLASSIFICATION	8.649677787070613E-7	DEFECT
//This entry already exists. So, go with the first one.	WITHOUT_CLASSIFICATION	0.9999993146562862	WITHOUT_CLASSIFICATION	6.853437138360735E-7	DEFECT
/*     * A method that does the work on a given entry in a mergefile.     * The big deal is to set the right parameters in the ZipEntry     * on the output stream.     */	WITHOUT_CLASSIFICATION	0.9999838201191956	WITHOUT_CLASSIFICATION	1.617988080440829E-5	DEFECT
//Note, don't need to specify size or crc for compressed files.	WITHOUT_CLASSIFICATION	0.9999996987808843	WITHOUT_CLASSIFICATION	3.0121911565157487E-7	DEFECT
//use the systemclasspath as well, to include the ant jar	WITHOUT_CLASSIFICATION	0.9999995016957377	WITHOUT_CLASSIFICATION	4.983042623226629E-7	DEFECT
/*     * Necessary in the case where you add a entry that     * is not compressed.     */	WITHOUT_CLASSIFICATION	0.9999984907875459	WITHOUT_CLASSIFICATION	1.5092124540938603E-6	DEFECT
//TODO Test on other versions of weblogic //TODO add more attributes to the task, to take care of all jspc options //TODO Test on Unix	WITHOUT_CLASSIFICATION	0.9999942963575739	WITHOUT_CLASSIFICATION	5.703642426179791E-6	DEFECT
//private String compilerPath; //fully qualified name for the compiler executable	WITHOUT_CLASSIFICATION	0.9999992113218678	WITHOUT_CLASSIFICATION	7.886781322646684E-7	DEFECT
// get all the files in the sourceDirectory	WITHOUT_CLASSIFICATION	0.9999993312418327	WITHOUT_CLASSIFICATION	6.68758167224253E-7	DEFECT
//Weblogic.jspc calls System.exit() ... have to fork // Therefore, takes loads of time // Can pass directories at a time (*.jsp) but easily runs out of // memory on hefty dirs (even on  a Sun)	WITHOUT_CLASSIFICATION	0.970950761184625	WITHOUT_CLASSIFICATION	0.02904923881537494	DEFECT
// apply transformation	WITHOUT_CLASSIFICATION	0.9999997224324585	WITHOUT_CLASSIFICATION	2.775675415629354E-7	DEFECT
//end class	WITHOUT_CLASSIFICATION	0.9999676128327174	WITHOUT_CLASSIFICATION	3.238716728270512E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999554955215	WITHOUT_CLASSIFICATION	4.4504478498603726E-7	DEFECT
// CheckStyle:ConstantNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9999993818836707	WITHOUT_CLASSIFICATION	6.181163293333136E-7	DEFECT
// CheckStyle:ConstantNameCheck ON	WITHOUT_CLASSIFICATION	0.9999995939757826	WITHOUT_CLASSIFICATION	4.0602421725288897E-7	DEFECT
// now we need to populate the compiler adapter	WITHOUT_CLASSIFICATION	0.9999986573997032	WITHOUT_CLASSIFICATION	1.3426002967444053E-6	DEFECT
// finally, lets execute the compiler!!	WITHOUT_CLASSIFICATION	0.9999699776456452	WITHOUT_CLASSIFICATION	3.002235435474737E-5	DEFECT
// Create an instance of the compiler, redirecting output to // the project log	WITHOUT_CLASSIFICATION	0.9999975911352198	WITHOUT_CLASSIFICATION	2.4088647802734375E-6	DEFECT
// compile the source files	WITHOUT_CLASSIFICATION	0.9999999261921778	WITHOUT_CLASSIFICATION	7.380782213025533E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999998068383374	WITHOUT_CLASSIFICATION	1.9316166246942935E-7	DEFECT
//demand create vector of filesets	WITHOUT_CLASSIFICATION	0.999998810635244	WITHOUT_CLASSIFICATION	1.1893647559366784E-6	DEFECT
// make sure that we've got a destdir	WITHOUT_CLASSIFICATION	0.9999986596016258	WITHOUT_CLASSIFICATION	1.3403983741972515E-6	DEFECT
//bind to a compiler	WITHOUT_CLASSIFICATION	0.9999975161226565	WITHOUT_CLASSIFICATION	2.4838773434758954E-6	DEFECT
//if we are a webapp, hand off to the compiler, which had better handle it	WITHOUT_CLASSIFICATION	0.9999997849225375	WITHOUT_CLASSIFICATION	2.1507746258510145E-7	DEFECT
// make sure that we've got a srcdir	WITHOUT_CLASSIFICATION	0.9999973280002274	WITHOUT_CLASSIFICATION	2.6719997725533145E-6	DEFECT
// if the compiler does its own dependency stuff, we just call it right now	WITHOUT_CLASSIFICATION	0.9999970245641512	WITHOUT_CLASSIFICATION	2.975435848797893E-6	DEFECT
//the remainder of this method is only for compilers that need their dependency work done	WITHOUT_CLASSIFICATION	0.9990514814351367	WITHOUT_CLASSIFICATION	9.485185648632466E-4	DEFECT
// scan source directories and dest directory to build up both copy // lists and compile lists	WITHOUT_CLASSIFICATION	0.9999999920352647	WITHOUT_CLASSIFICATION	7.964735302796812E-9	DEFECT
//        String srcFileDir=srcFile.getParent();	WITHOUT_CLASSIFICATION	0.9999995753120553	WITHOUT_CLASSIFICATION	4.246879446257803E-7	DEFECT
//end inner class	WITHOUT_CLASSIFICATION	0.9999734962800756	WITHOUT_CLASSIFICATION	2.650371992437913E-5	DEFECT
// since we don't mangle extensions like the servlet does, // we need to check for keywords as class names	WITHOUT_CLASSIFICATION	0.9999998890448258	WITHOUT_CLASSIFICATION	1.109551741286273E-7	DEFECT
// first char is more restrictive than the rest	WITHOUT_CLASSIFICATION	0.9999999674824013	WITHOUT_CLASSIFICATION	3.251759875900506E-8	DEFECT
// this is the rest	WITHOUT_CLASSIFICATION	0.999885054348521	WITHOUT_CLASSIFICATION	1.1494565147887516E-4	DEFECT
// If the first char is not a start of Java identifier or is _ // prepend a '_'.	WITHOUT_CLASSIFICATION	0.9999999537070603	WITHOUT_CLASSIFICATION	4.629293959399071E-8	DEFECT
//we are forking here to be sure that if JspC calls //System.exit() it doesn't halt the build	WITHOUT_CLASSIFICATION	0.9960342349870496	WITHOUT_CLASSIFICATION	0.003965765012950397	DEFECT
//tomcat4.0 gets the old mangler	WITHOUT_CLASSIFICATION	0.9999947404157554	WITHOUT_CLASSIFICATION	5.259584244512777E-6	DEFECT
//tomcat4.1 gets the new one	WITHOUT_CLASSIFICATION	0.9999997144657581	WITHOUT_CLASSIFICATION	2.8553424197318084E-7	DEFECT
// for all other possibilities	WITHOUT_CLASSIFICATION	0.9999999551189813	WITHOUT_CLASSIFICATION	4.4881018530524134E-8	DEFECT
// append the err and output streams to the log	WITHOUT_CLASSIFICATION	0.9999951327038955	WITHOUT_CLASSIFICATION	4.867296104446563E-6	DEFECT
// acrobatic cast.	WITHOUT_CLASSIFICATION	0.9999994540772343	WITHOUT_CLASSIFICATION	5.459227656569979E-7	DEFECT
// set the destination directory relative from the project if needed.	WITHOUT_CLASSIFICATION	0.9999997561052073	WITHOUT_CLASSIFICATION	2.4389479273200986E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999554955215	WITHOUT_CLASSIFICATION	4.4504478498603726E-7	DEFECT
// sanity check	WITHOUT_CLASSIFICATION	0.9999998148721385	WITHOUT_CLASSIFICATION	1.8512786149119783E-7	DEFECT
// plain impossible	WITHOUT_CLASSIFICATION	0.9999996183295947	WITHOUT_CLASSIFICATION	3.816704053292864E-7	DEFECT
// Quick return - no output do nothing.	WITHOUT_CLASSIFICATION	0.999999729666908	WITHOUT_CLASSIFICATION	2.7033309206505166E-7	DEFECT
// append the err and output streams to the log	WITHOUT_CLASSIFICATION	0.9999951327038955	WITHOUT_CLASSIFICATION	4.867296104446563E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999998068383374	WITHOUT_CLASSIFICATION	1.9316166246942935E-7	DEFECT
// If style dir is not specified we have to retrieve // the stylesheet from the classloader	WITHOUT_CLASSIFICATION	0.9999955977718754	WITHOUT_CLASSIFICATION	4.402228124550191E-6	DEFECT
// If we are here, then the style dir is here and we // should read the stylesheet from the filesystem	WITHOUT_CLASSIFICATION	0.9999904967026044	WITHOUT_CLASSIFICATION	9.503297395651534E-6	DEFECT
// xalan 2	WITHOUT_CLASSIFICATION	0.9999754788182115	WITHOUT_CLASSIFICATION	2.4521181788590167E-5	DEFECT
// xalan xsltc	WITHOUT_CLASSIFICATION	0.9999959989768864	WITHOUT_CLASSIFICATION	4.001023113595454E-6	DEFECT
// jdk 1.5 xsltc	WITHOUT_CLASSIFICATION	0.9999961366212256	WITHOUT_CLASSIFICATION	3.863378774486973E-6	DEFECT
// must be plain, ensured by TypeAttribute	WITHOUT_CLASSIFICATION	0.9999999807057236	WITHOUT_CLASSIFICATION	1.929427641851924E-8	DEFECT
// pre JUnit 3.7	WITHOUT_CLASSIFICATION	0.99999876486491	WITHOUT_CLASSIFICATION	1.2351350900263447E-6	DEFECT
// can be null if an error occurred in setUp	WITHOUT_CLASSIFICATION	0.9999992704923584	WITHOUT_CLASSIFICATION	7.295076415056886E-7	DEFECT
// PlainJUnitResultFormatter	WITHOUT_CLASSIFICATION	0.9999999339391337	WITHOUT_CLASSIFICATION	6.606086632505844E-8	DEFECT
// Snapshot of the system properties	WITHOUT_CLASSIFICATION	0.9999971510006811	WITHOUT_CLASSIFICATION	2.848999318849537E-6	DEFECT
//add the timestamp	WITHOUT_CLASSIFICATION	0.9999991603478303	WITHOUT_CLASSIFICATION	8.396521696098565E-7	DEFECT
//and the hostname.	WITHOUT_CLASSIFICATION	0.9999976546415866	WITHOUT_CLASSIFICATION	2.3453584133282077E-6	DEFECT
// Output properties	WITHOUT_CLASSIFICATION	0.9999985391630384	WITHOUT_CLASSIFICATION	1.4608369616393748E-6	DEFECT
// a TestSuite can contain Tests from multiple classes, // even tests with the same name - disambiguate them.	WITHOUT_CLASSIFICATION	0.9999996979669576	WITHOUT_CLASSIFICATION	3.020330423434987E-7	DEFECT
// XMLJUnitResultFormatter	WITHOUT_CLASSIFICATION	0.999993128836427	WITHOUT_CLASSIFICATION	6.8711635730334725E-6	DEFECT
// Do we send output to the formatters ?	WITHOUT_CLASSIFICATION	0.999999644545986	WITHOUT_CLASSIFICATION	3.554540140123244E-7	DEFECT
//   Attributes for basetest	WITHOUT_CLASSIFICATION	0.999999336157756	WITHOUT_CLASSIFICATION	6.63842243987869E-7	DEFECT
// forceLoadClass is not convenient here since it would not // properly deal with inner classes of these classes.	WITHOUT_CLASSIFICATION	0.9983996739107703	WITHOUT_CLASSIFICATION	0.0016003260892296957	DEFECT
/* forkMode.getValue().equals(ForkMode.PER_BATCH) */	WITHOUT_CLASSIFICATION	0.9999968697309924	WITHOUT_CLASSIFICATION	3.13026900764424E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999554955215	WITHOUT_CLASSIFICATION	4.4504478498603726E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999990601516184	WITHOUT_CLASSIFICATION	9.398483815699614E-7	DEFECT
// execute the test and get the return code	WITHOUT_CLASSIFICATION	0.9999996146173417	WITHOUT_CLASSIFICATION	3.8538265838413985E-7	DEFECT
// execute the test and get the return code	WITHOUT_CLASSIFICATION	0.9999996146173417	WITHOUT_CLASSIFICATION	3.8538265838413985E-7	DEFECT
// null watchdog means no timeout, you'd better not check with null	WITHOUT_CLASSIFICATION	0.9999984749664524	WITHOUT_CLASSIFICATION	1.5250335475923338E-6	DEFECT
// if there is an error/failure and that it should halt, stop // everything otherwise just log a statement	WITHOUT_CLASSIFICATION	0.999999739500939	WITHOUT_CLASSIFICATION	2.6049906090124476E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999998068383374	WITHOUT_CLASSIFICATION	1.9316166246942935E-7	DEFECT
// set the default values if not specified //@todo should be moved to the test class instead.	WITHOUT_CLASSIFICATION	0.9999999690676775	WITHOUT_CLASSIFICATION	3.093232244207371E-8	DEFECT
// Create a temporary file to pass the test cases to run to // the runner (one test case per line)	WITHOUT_CLASSIFICATION	0.9999917443728492	WITHOUT_CLASSIFICATION	8.255627150805043E-6	DEFECT
// #31885	WITHOUT_CLASSIFICATION	0.9999814570185658	WITHOUT_CLASSIFICATION	1.8542981434204884E-5	DEFECT
// ignored.	WITHOUT_CLASSIFICATION	0.9999993603662037	WITHOUT_CLASSIFICATION	6.396337962918409E-7	DEFECT
// in VM is not very nice since it could probably hang the // whole build. IMHO this method should be avoided and it would be best // to remove it in future versions. TBD. (SBa)	WITHOUT_CLASSIFICATION	0.530191448075394	WITHOUT_CLASSIFICATION	0.46980855192460586	DEFECT
// make sure the test will be accepted as a TestCase	WITHOUT_CLASSIFICATION	0.9999998408021178	WITHOUT_CLASSIFICATION	1.5919788212085306E-7	DEFECT
// make sure the test annotation are accepted	WITHOUT_CLASSIFICATION	0.9999992970487993	WITHOUT_CLASSIFICATION	7.029512007108377E-7	DEFECT
// will cause trouble in JDK 1.1 if omitted	WITHOUT_CLASSIFICATION	0.9999982387054901	WITHOUT_CLASSIFICATION	1.7612945100019227E-6	DEFECT
// local copy since LogOutputStream.task is private	WITHOUT_CLASSIFICATION	0.9999754998458112	WITHOUT_CLASSIFICATION	2.450015418867205E-5	DEFECT
// this one is here because the changes to support ResourceCollections // have broken Magic's JUnitTestTask. // // The task adds a FileSet to a BatchTest instance using the // Java API and without telling the FileSet about its project // instance.  The original code would pass in project on the // call to getDirectoryScanner - which is now hidden deep into // Resources.iterator() and not reachable.	WITHOUT_CLASSIFICATION	0.9529488705364866	WITHOUT_CLASSIFICATION	0.04705112946351337	DEFECT
// dummy output for the framed report // it's all done by extension...	WITHOUT_CLASSIFICATION	0.9999831746211865	WITHOUT_CLASSIFICATION	1.682537881352683E-5	DEFECT
// conforming to NodeList interface	WITHOUT_CLASSIFICATION	0.9999983745896502	WITHOUT_CLASSIFICATION	1.6254103497665096E-6	DEFECT
// this should never happen	WITHOUT_CLASSIFICATION	0.99942112921432	WITHOUT_CLASSIFICATION	5.788707856799792E-4	DEFECT
// write the document	WITHOUT_CLASSIFICATION	0.99999960802407	WITHOUT_CLASSIFICATION	3.919759300289182E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999998068383374	WITHOUT_CLASSIFICATION	1.9316166246942935E-7	DEFECT
//----- from now, the methods are all related to DOM tree manipulation	WITHOUT_CLASSIFICATION	0.9999871716006649	WITHOUT_CLASSIFICATION	1.28283993351614E-5	DEFECT
// writers do not throw exceptions, so check for them.	WITHOUT_CLASSIFICATION	0.9999998331270123	WITHOUT_CLASSIFICATION	1.6687298764917732E-7	DEFECT
// create the dom tree	WITHOUT_CLASSIFICATION	0.9999999486648226	WITHOUT_CLASSIFICATION	5.133517748954346E-8	DEFECT
// get all files and add them to the document	WITHOUT_CLASSIFICATION	0.9999989386939037	WITHOUT_CLASSIFICATION	1.0613060963094059E-6	DEFECT
// make sure that this is REALLY a testsuite.	WITHOUT_CLASSIFICATION	0.99999740062463	WITHOUT_CLASSIFICATION	2.5993753699050623E-6	DEFECT
//wrong root element name // issue a warning.	WITHOUT_CLASSIFICATION	0.998979863644206	WITHOUT_CLASSIFICATION	0.0010201363557939401	DEFECT
// a testcase might have failed and write a zero-length document, // It has already failed, but hey.... mm. just put a warning	WITHOUT_CLASSIFICATION	0.9999996095889193	WITHOUT_CLASSIFICATION	3.904110806497331E-7	DEFECT
// a missing . might imply no package at all. Don't get fooled.	WITHOUT_CLASSIFICATION	0.999945056332757	WITHOUT_CLASSIFICATION	5.494366724293013E-5	DEFECT
// modify the name attribute and set the package	WITHOUT_CLASSIFICATION	0.9999997199494233	WITHOUT_CLASSIFICATION	2.800505767019143E-7	DEFECT
// don't filter AssertionFailure	WITHOUT_CLASSIFICATION	0.9999856047344664	WITHOUT_CLASSIFICATION	1.439526553354582E-5	DEFECT
// JUnit 4 support:	WITHOUT_CLASSIFICATION	0.9999729653250873	WITHOUT_CLASSIFICATION	2.7034674912642282E-5	DEFECT
// check for a static suite method first, even when using // JUnit 4	WITHOUT_CLASSIFICATION	0.999999998734091	WITHOUT_CLASSIFICATION	1.2659090635688174E-9	DEFECT
// check if there is a suite method	WITHOUT_CLASSIFICATION	0.9999999287647648	WITHOUT_CLASSIFICATION	7.123523512751986E-8	DEFECT
// no appropriate suite method found. We don't report any // error here since it might be perfectly normal.	WITHOUT_CLASSIFICATION	0.9972000670356144	WITHOUT_CLASSIFICATION	0.0027999329643855863	DEFECT
// Check for JDK 5 first. Will *not* help on JDK 1.4 // if only junit-4.0.jar in CP because in that case // linkage of whole task will already have failed! But // will help if CP has junit-3.8.2.jar:junit-4.0.jar.	WITHOUT_CLASSIFICATION	0.9999999985638824	WITHOUT_CLASSIFICATION	1.436117544733375E-9	DEFECT
// In that case first C.fN will fail with CNFE and we // will avoid UnsupportedClassVersionError.	WITHOUT_CLASSIFICATION	0.9999955553043091	WITHOUT_CLASSIFICATION	4.444695690883456E-6	DEFECT
// OK, fall back to JUnit 3.	WITHOUT_CLASSIFICATION	0.999987279984875	WITHOUT_CLASSIFICATION	1.2720015125028995E-5	DEFECT
// Let's use it!	WITHOUT_CLASSIFICATION	0.9999984426930152	WITHOUT_CLASSIFICATION	1.5573069848442818E-6	DEFECT
// Use JUnit 3.	WITHOUT_CLASSIFICATION	0.9999991036448042	WITHOUT_CLASSIFICATION	8.963551957695546E-7	DEFECT
// try to extract a test suite automatically this // will generate warnings if the class is no // suitable Test	WITHOUT_CLASSIFICATION	0.999976366225625	WITHOUT_CLASSIFICATION	2.3633774374960933E-5	DEFECT
// had an exception constructing suite	WITHOUT_CLASSIFICATION	0.9999999681387318	WITHOUT_CLASSIFICATION	3.186126825547548E-8	DEFECT
// Add/overlay system properties on the properties from the Ant project	WITHOUT_CLASSIFICATION	0.9999609717556485	WITHOUT_CLASSIFICATION	3.9028244351593816E-5	DEFECT
// return the stack unfiltered	WITHOUT_CLASSIFICATION	0.9999998346247297	WITHOUT_CLASSIFICATION	1.6537527021255303E-7	DEFECT
// Not strictly necessary but probably desirable. // JUnit 4-specific test GUIs will show just "failures". // But Ant's output shows "failures" vs. "errors". // We would prefer to show "failure" for things that logically are.	WITHOUT_CLASSIFICATION	0.9999999713731568	WITHOUT_CLASSIFICATION	2.862684320006022E-8	DEFECT
// To compile on pre-JDK 4 (even though this should always succeed):	WITHOUT_CLASSIFICATION	0.999975150389277	WITHOUT_CLASSIFICATION	2.4849610723025136E-5	DEFECT
// pre-3.4	WITHOUT_CLASSIFICATION	0.9999975805400142	WITHOUT_CLASSIFICATION	2.4194599858459105E-6	DEFECT
// JUnitTestRunner	WITHOUT_CLASSIFICATION	0.9999998660303285	WITHOUT_CLASSIFICATION	1.3396967149804494E-7	DEFECT
//rethrow	WITHOUT_CLASSIFICATION	0.9999340501831507	WITHOUT_CLASSIFICATION	6.594981684924868E-5	DEFECT
//wrap	WITHOUT_CLASSIFICATION	0.9999621274713532	WITHOUT_CLASSIFICATION	3.787252864682201E-5	DEFECT
// sorted by newest Kaffe version first	WITHOUT_CLASSIFICATION	0.9999997031921561	WITHOUT_CLASSIFICATION	2.968078438704153E-7	DEFECT
// pre Kaffe 1.1.5	WITHOUT_CLASSIFICATION	0.999998315389976	WITHOUT_CLASSIFICATION	1.6846100239574085E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999554955215	WITHOUT_CLASSIFICATION	4.4504478498603726E-7	DEFECT
// we are going to scan everything anyway	WITHOUT_CLASSIFICATION	0.9999922453350826	WITHOUT_CLASSIFICATION	7.754664917375905E-6	DEFECT
// only scan directories that can include matched files or // directories	WITHOUT_CLASSIFICATION	0.9999976785931189	WITHOUT_CLASSIFICATION	2.3214068810363553E-6	DEFECT
// avoid double scanning of directories, can only happen in fast mode	WITHOUT_CLASSIFICATION	0.999988626891974	WITHOUT_CLASSIFICATION	1.1373108026041167E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999990601516184	WITHOUT_CLASSIFICATION	9.398483815699614E-7	DEFECT
// This default has been good enough until Ant 1.6.3, so stick // with it	WITHOUT_CLASSIFICATION	0.9999924947743598	WITHOUT_CLASSIFICATION	7.5052256402748855E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999998068383374	WITHOUT_CLASSIFICATION	1.9316166246942935E-7	DEFECT
// Rats. // should not happen	WITHOUT_CLASSIFICATION	0.9985278176501834	WITHOUT_CLASSIFICATION	0.0014721823498166447	DEFECT
// otherwise ExecuteJava has thrown an exception	WITHOUT_CLASSIFICATION	0.9999991056821088	WITHOUT_CLASSIFICATION	8.94317891097408E-7	DEFECT
// No includes supplied, so set it to 'matches all'	WITHOUT_CLASSIFICATION	0.9999999980077597	WITHOUT_CLASSIFICATION	1.992240360913815E-9	DEFECT
// always start from the current ftp working dir	WITHOUT_CLASSIFICATION	0.999918190902751	WITHOUT_CLASSIFICATION	8.180909724898007E-5	DEFECT
// put in the newroots vector the include patterns without // wildcard tokens	WITHOUT_CLASSIFICATION	0.9998733155197381	WITHOUT_CLASSIFICATION	1.266844802618421E-4	DEFECT
// construct it	WITHOUT_CLASSIFICATION	0.9999987620143531	WITHOUT_CLASSIFICATION	1.2379856469030338E-6	DEFECT
// cool case, //we do not need to scan all the subdirs in the relative path	WITHOUT_CLASSIFICATION	0.9999985863963949	WITHOUT_CLASSIFICATION	1.4136036051265037E-6	DEFECT
//this should not happen, except if parent has been deleted by another process	WITHOUT_CLASSIFICATION	0.9732868805916202	WITHOUT_CLASSIFICATION	0.02671311940837984	DEFECT
// we are already in the right path, so the second parameter // is false	WITHOUT_CLASSIFICATION	0.999941244629246	WITHOUT_CLASSIFICATION	5.8755370753901466E-5	DEFECT
// hit a hidden file assume not a symlink	WITHOUT_CLASSIFICATION	0.9999845129915652	WITHOUT_CLASSIFICATION	1.5487008434794895E-5	DEFECT
// getRelativePath also finds about symlinks	WITHOUT_CLASSIFICATION	0.999999026386174	WITHOUT_CLASSIFICATION	9.736138260036042E-7	DEFECT
// warn that selectors are not supported	WITHOUT_CLASSIFICATION	0.9999868953745817	WITHOUT_CLASSIFICATION	1.3104625418286084E-5	DEFECT
// If we are doing a listing, we need the output stream created now.	WITHOUT_CLASSIFICATION	0.9999999952433674	WITHOUT_CLASSIFICATION	4.756632690805655E-9	DEFECT
// get files from filesets	WITHOUT_CLASSIFICATION	0.9999994607529998	WITHOUT_CLASSIFICATION	5.392470002420741E-7	DEFECT
// find first non cached dir	WITHOUT_CLASSIFICATION	0.9999998822611883	WITHOUT_CLASSIFICATION	1.1773881175595389E-7	DEFECT
// check if dir exists by trying to change into it.	WITHOUT_CLASSIFICATION	0.9999999534630971	WITHOUT_CLASSIFICATION	4.653690284633663E-8	DEFECT
// could not change to it - try to create it	WITHOUT_CLASSIFICATION	0.9999829043929811	WITHOUT_CLASSIFICATION	1.709560701894356E-5	DEFECT
// create a local temporary file	WITHOUT_CLASSIFICATION	0.9999997073433389	WITHOUT_CLASSIFICATION	2.926566611850908E-7	DEFECT
// see if we should issue a chmod command	WITHOUT_CLASSIFICATION	0.9990107708912659	WITHOUT_CLASSIFICATION	9.892291087341429E-4	DEFECT
// ignore it	WITHOUT_CLASSIFICATION	0.9999992402257348	WITHOUT_CLASSIFICATION	7.597742651007744E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999998068383374	WITHOUT_CLASSIFICATION	1.9316166246942935E-7	DEFECT
// ignore it	WITHOUT_CLASSIFICATION	0.9999992402257348	WITHOUT_CLASSIFICATION	7.597742651007744E-7	DEFECT
// delegate the deletion of the local temp file to the delete task // because of race conditions occuring on Windows	WITHOUT_CLASSIFICATION	0.9999919751799202	WITHOUT_CLASSIFICATION	8.024820079750787E-6	DEFECT
// For Microsoft's Ftp-Service an Array with length 0 is // returned if configured to return listings in "MS-DOS"-Format	WITHOUT_CLASSIFICATION	0.9999998813323008	WITHOUT_CLASSIFICATION	1.1866769925712765E-7	DEFECT
// If we are sending files, then assume out of date. // If we are getting files, then throw an error	WITHOUT_CLASSIFICATION	0.9999880761781136	WITHOUT_CLASSIFICATION	1.1923821886509651E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999998068383374	WITHOUT_CLASSIFICATION	1.9316166246942935E-7	DEFECT
// codes 521, 550 and 553 can be produced by FTP Servers //  to indicate that an attempt to create a directory has //  failed because the directory already exists.	WITHOUT_CLASSIFICATION	0.9999974963090961	WITHOUT_CLASSIFICATION	2.5036909039222025E-6	DEFECT
// If an initial command was configured then send it. // Some FTP servers offer different modes of operation, // E.G. switching between a UNIX file system mode and // a legacy file system.	WITHOUT_CLASSIFICATION	0.9999992257034205	WITHOUT_CLASSIFICATION	7.742965795614489E-7	DEFECT
// For a unix ftp server you can set the default mask for all files // created.	WITHOUT_CLASSIFICATION	0.9999997290715377	WITHOUT_CLASSIFICATION	2.7092846228647283E-7	DEFECT
// If the action is MK_DIR, then the specified remote // directory is the directory to create.	WITHOUT_CLASSIFICATION	0.9999995315483888	WITHOUT_CLASSIFICATION	4.684516111853674E-7	DEFECT
// in this case we want to find how much time span there is between local // and remote	WITHOUT_CLASSIFICATION	0.9999881908721618	WITHOUT_CLASSIFICATION	1.180912783821831E-5	DEFECT
//socks	WITHOUT_CLASSIFICATION	0.9999200920080243	WITHOUT_CLASSIFICATION	7.990799197558008E-5	DEFECT
//this may be a java1.4 thingy only	WITHOUT_CLASSIFICATION	0.9999823573748101	WITHOUT_CLASSIFICATION	1.7642625189952632E-5	DEFECT
// simple one-shot execution	WITHOUT_CLASSIFICATION	0.9999985485588841	WITHOUT_CLASSIFICATION	1.4514411159143538E-6	DEFECT
// need nested read/write elements	WITHOUT_CLASSIFICATION	0.9999998572174921	WITHOUT_CLASSIFICATION	1.4278250787368653E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999998068383374	WITHOUT_CLASSIFICATION	1.9316166246942935E-7	DEFECT
//here we'd parse the output from change -o into submit -i //in order to support default change.	WITHOUT_CLASSIFICATION	0.9999993944107651	WITHOUT_CLASSIFICATION	6.055892347849815E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc //ToDo: If dealing with default cl need to parse out <enter description here>	WITHOUT_CLASSIFICATION	0.9999791875933225	WITHOUT_CLASSIFICATION	2.0812406677522353E-5	DEFECT
/* -n */	WITHOUT_CLASSIFICATION	0.9999391106695364	WITHOUT_CLASSIFICATION	6.088933046366038E-5	DEFECT
//Remove any non-numerical chars - should leave the change number	WITHOUT_CLASSIFICATION	0.9993495821760889	WITHOUT_CLASSIFICATION	6.504178239111639E-4	DEFECT
// this type of output might happen // Change 18 renamed change 20 and submitted.	WITHOUT_CLASSIFICATION	0.9993925070491253	WITHOUT_CLASSIFICATION	6.074929508747467E-4	DEFECT
//Match "//" for begining of depot filespec	WITHOUT_CLASSIFICATION	0.9999999634804569	WITHOUT_CLASSIFICATION	3.6519543071645007E-8	DEFECT
// we need to escape the description in case there are /	WITHOUT_CLASSIFICATION	0.9999993568316149	WITHOUT_CLASSIFICATION	6.431683851659562E-7	DEFECT
// NOTE kirk@radik.com 04-April-2001 -- If you put in the -s, you // have to start running through regular expressions here. Much easier // to just not include the scripting information than to try to add it // and strip it later.	WITHOUT_CLASSIFICATION	0.9999933537876646	WITHOUT_CLASSIFICATION	6.64621233527874E-6	DEFECT
//EoF	WITHOUT_CLASSIFICATION	0.9998353280970697	WITHOUT_CLASSIFICATION	1.6467190293027682E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc //Input //Output //Error // CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999973107877622	WITHOUT_CLASSIFICATION	2.689212237717371E-6	DEFECT
/* Here we can either revert any unchanged files in a changelist         * or         * any files regardless of whether they have been changed or not         *         *         * The whole process also accepts a p4 filespec         */	WITHOUT_CLASSIFICATION	0.9999999981174154	WITHOUT_CLASSIFICATION	1.8825847257208835E-9	DEFECT
/* -a */	WITHOUT_CLASSIFICATION	0.9999776814852769	WITHOUT_CLASSIFICATION	2.2318514723139672E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999998068383374	WITHOUT_CLASSIFICATION	1.9316166246942935E-7	DEFECT
/* -n */	WITHOUT_CLASSIFICATION	0.9999391106695364	WITHOUT_CLASSIFICATION	6.088933046366038E-5	DEFECT
/* -n */	WITHOUT_CLASSIFICATION	0.9999391106695364	WITHOUT_CLASSIFICATION	6.088933046366038E-5	DEFECT
/* -f */	WITHOUT_CLASSIFICATION	0.9999630231011462	WITHOUT_CLASSIFICATION	3.6976898853796854E-5	DEFECT
/* -t */	WITHOUT_CLASSIFICATION	0.9999556279339898	WITHOUT_CLASSIFICATION	4.437206601012117E-5	DEFECT
/* -v */	WITHOUT_CLASSIFICATION	0.9999678585187912	WITHOUT_CLASSIFICATION	3.2141481208783754E-5	DEFECT
//We have to create a unlocked label first	WITHOUT_CLASSIFICATION	0.9999999220528099	WITHOUT_CLASSIFICATION	7.794719004838986E-8	DEFECT
//Now lock if required	WITHOUT_CLASSIFICATION	0.9999256725590824	WITHOUT_CLASSIFICATION	7.432744091762708E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999998068383374	WITHOUT_CLASSIFICATION	1.9316166246942935E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999998068383374	WITHOUT_CLASSIFICATION	1.9316166246942935E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999998068383374	WITHOUT_CLASSIFICATION	1.9316166246942935E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999998068383374	WITHOUT_CLASSIFICATION	1.9316166246942935E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc // CheckStyle:MemberNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9999999459223445	WITHOUT_CLASSIFICATION	5.407765542979102E-8	DEFECT
// CheckStyle:MemberNameCheck ON // CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999632719356	WITHOUT_CLASSIFICATION	3.6728064435277285E-8	DEFECT
// Massage PCLI lvf output transforming '\' to '/' so get command works appropriately	WITHOUT_CLASSIFICATION	0.999966521186129	WITHOUT_CLASSIFICATION	3.347881387090163E-5	DEFECT
//Read back the label spec from perforce, //Replace Options //Submit back to Perforce	WITHOUT_CLASSIFICATION	0.9999987724581388	WITHOUT_CLASSIFICATION	1.2275418611649696E-6	DEFECT
//when running labelsync, if view elements are in sync, //Perforce produces a line of output //looking like this one : //error: //depot/file2 - label in sync.	WITHOUT_CLASSIFICATION	0.9999891800298232	WITHOUT_CLASSIFICATION	1.0819970176887362E-5	DEFECT
//sync says "error:" when a file is up-to-date	WITHOUT_CLASSIFICATION	0.9999888448148242	WITHOUT_CLASSIFICATION	1.1155185175812691E-5	DEFECT
//sometimes there's "info1:	WITHOUT_CLASSIFICATION	0.9999996582322771	WITHOUT_CLASSIFICATION	3.417677228051873E-7	DEFECT
//P4 runtime directives	WITHOUT_CLASSIFICATION	0.9999966119294876	WITHOUT_CLASSIFICATION	3.388070512361514E-6	DEFECT
// Perforce task directives	WITHOUT_CLASSIFICATION	0.9999997463273044	WITHOUT_CLASSIFICATION	2.5367269566511346E-7	DEFECT
//P4 g-opts and cmd opts (rtfm)	WITHOUT_CLASSIFICATION	0.9999993906193402	WITHOUT_CLASSIFICATION	6.093806597836219E-7	DEFECT
//Setters called by Ant	WITHOUT_CLASSIFICATION	0.9999967500724002	WITHOUT_CLASSIFICATION	3.249927599862136E-6	DEFECT
//Get default P4 settings from environment - Mark would have done something cool with //introspection here.....:-)	WITHOUT_CLASSIFICATION	0.9040222803559264	WITHOUT_CLASSIFICATION	0.09597771964407369	DEFECT
// reset error flags before executing the command	WITHOUT_CLASSIFICATION	0.9975164609950776	WITHOUT_CLASSIFICATION	0.0024835390049222895	DEFECT
//Check API for these - it's how CVS does it...	WITHOUT_CLASSIFICATION	0.9992451888074585	WITHOUT_CLASSIFICATION	7.548111925414843E-4	DEFECT
/*     * Constant for the PCLI listversionedfiles recursive i a format "get" understands     */	WITHOUT_CLASSIFICATION	0.9999999971982277	WITHOUT_CLASSIFICATION	2.8017722362176108E-9	DEFECT
// private static final String PCLI_LVF_ARGS = "lvf -z -aw";	WITHOUT_CLASSIFICATION	0.9999998267591197	WITHOUT_CLASSIFICATION	1.7324088036838053E-7	DEFECT
// Check workspace exists // Launch PCLI listversionedfiles -z -aw // Capture output // build the command line from what we got the format is	WITHOUT_CLASSIFICATION	0.9999862867816286	WITHOUT_CLASSIFICATION	1.371321837129045E-5	DEFECT
// default pvcs project is "/"	WITHOUT_CLASSIFICATION	0.9999970149771885	WITHOUT_CLASSIFICATION	2.9850228114969776E-6	DEFECT
// Create folders in workspace	WITHOUT_CLASSIFICATION	0.9999955866861228	WITHOUT_CLASSIFICATION	4.413313877252497E-6	DEFECT
// Launch get on output captured from PCLI lvf	WITHOUT_CLASSIFICATION	0.9999992015855792	WITHOUT_CLASSIFICATION	7.984144208819796E-7	DEFECT
// Extract the name of the directory from the filename	WITHOUT_CLASSIFICATION	0.999999865916135	WITHOUT_CLASSIFICATION	1.3408386497159182E-7	DEFECT
// Change these through their GET and SET methods.	WITHOUT_CLASSIFICATION	0.9999999963581413	WITHOUT_CLASSIFICATION	3.641858659884942E-9	DEFECT
// These fields deal with includes and excludes	WITHOUT_CLASSIFICATION	0.99999444871162	WITHOUT_CLASSIFICATION	5.551288380004419E-6	DEFECT
// Check all of the properties that are required.	WITHOUT_CLASSIFICATION	0.9999979805089753	WITHOUT_CLASSIFICATION	2.019491024666627E-6	DEFECT
// Check to see if the target directory exists.	WITHOUT_CLASSIFICATION	0.9999999853791242	WITHOUT_CLASSIFICATION	1.4620875786677633E-8	DEFECT
// Search the items on this server.	WITHOUT_CLASSIFICATION	0.999991308987176	WITHOUT_CLASSIFICATION	8.691012824001976E-6	DEFECT
// Disconnect from the server.	WITHOUT_CLASSIFICATION	0.9999995554420436	WITHOUT_CLASSIFICATION	4.4455795645547566E-7	DEFECT
// Tell how many files were checked out.	WITHOUT_CLASSIFICATION	0.999993576899589	WITHOUT_CLASSIFICATION	6.4231004108712386E-6	DEFECT
// Optional; logOn() connects if necessary.	WITHOUT_CLASSIFICATION	0.9999994240212106	WITHOUT_CLASSIFICATION	5.759787894792635E-7	DEFECT
// Logon using specified user name and password.	WITHOUT_CLASSIFICATION	0.9999994377792547	WITHOUT_CLASSIFICATION	5.622207452396737E-7	DEFECT
// We always display the ItemID (OBJECT_ID) and primary descriptor.	WITHOUT_CLASSIFICATION	0.9999995228738415	WITHOUT_CLASSIFICATION	4.771261584464843E-7	DEFECT
//If a working directory was specified then add it to the command line	WITHOUT_CLASSIFICATION	0.9914981424883449	WITHOUT_CLASSIFICATION	0.00850185751165499	DEFECT
// Checking for "\ // or           "/ // or           "X:\...	WITHOUT_CLASSIFICATION	0.9998809023067413	WITHOUT_CLASSIFICATION	1.1909769325875202E-4	DEFECT
// If we find a "file" attribute then act on a file otherwise act on a project	WITHOUT_CLASSIFICATION	0.9999999466924427	WITHOUT_CLASSIFICATION	5.330755725607542E-8	DEFECT
// after you are all of the properties are ok, do your thing // with StarTeam.  If there are any kind of exceptions then // send the message to the project log.	WITHOUT_CLASSIFICATION	0.9999203440209695	WITHOUT_CLASSIFICATION	7.965597903044579E-5	DEFECT
// For performance reasons, it is important to pre-fetch all the // properties we'll need for all the items we'll be searching.	WITHOUT_CLASSIFICATION	0.9999862945871331	WITHOUT_CLASSIFICATION	1.3705412867038041E-5	DEFECT
// We'll need this item type's primary descriptor.	WITHOUT_CLASSIFICATION	0.9999979814030906	WITHOUT_CLASSIFICATION	2.0185969094753644E-6	DEFECT
// Does this item type have a secondary descriptor? // If so, we'll need it.	WITHOUT_CLASSIFICATION	0.9999191019918243	WITHOUT_CLASSIFICATION	8.089800817570547E-5	DEFECT
// Now, build an array of the property names.	WITHOUT_CLASSIFICATION	0.999988971895345	WITHOUT_CLASSIFICATION	1.102810465507915E-5	DEFECT
// Pre-fetch the item properties and cache them.	WITHOUT_CLASSIFICATION	0.9999996988872185	WITHOUT_CLASSIFICATION	3.0111278149587273E-7	DEFECT
// Now, search for items in the selected folder.	WITHOUT_CLASSIFICATION	0.9999998173074515	WITHOUT_CLASSIFICATION	1.8269254841917576E-7	DEFECT
// Free up the memory used by the cached items.	WITHOUT_CLASSIFICATION	0.9999996977784666	WITHOUT_CLASSIFICATION	3.022215333514029E-7	DEFECT
// convert whatever separator char is in starteam to that of the target system.	WITHOUT_CLASSIFICATION	0.9999999382967182	WITHOUT_CLASSIFICATION	6.170328174610697E-8	DEFECT
// If it ends with separator then strip it off	WITHOUT_CLASSIFICATION	0.9999952180831477	WITHOUT_CLASSIFICATION	4.781916852235916E-6	DEFECT
// Replace the projectName in the file's absolute path to the viewName. // This makes the root target of a checkout operation equal to: // targetFolder + dirName	WITHOUT_CLASSIFICATION	0.9999999906981646	WITHOUT_CLASSIFICATION	9.301835447318061E-9	DEFECT
// only want to do this the first time	WITHOUT_CLASSIFICATION	0.9999988735815732	WITHOUT_CLASSIFICATION	1.1264184268042653E-6	DEFECT
// Process all items in this folder.	WITHOUT_CLASSIFICATION	0.9999996865148587	WITHOUT_CLASSIFICATION	3.134851413831394E-7	DEFECT
// Process all subfolders recursively if recursion is on.	WITHOUT_CLASSIFICATION	0.9999995740102414	WITHOUT_CLASSIFICATION	4.2598975850371465E-7	DEFECT
// Get descriptors for this item type.	WITHOUT_CLASSIFICATION	0.9999972099671223	WITHOUT_CLASSIFICATION	2.790032877760513E-6	DEFECT
// VERBOSE MODE ONLY	WITHOUT_CLASSIFICATION	0.999967074720729	WITHOUT_CLASSIFICATION	3.292527927095329E-5	DEFECT
// Show folder only if changed.	WITHOUT_CLASSIFICATION	0.9999985547033304	WITHOUT_CLASSIFICATION	1.4452966695410125E-6	DEFECT
// Show if the file is locked.	WITHOUT_CLASSIFICATION	0.99999987442019	WITHOUT_CLASSIFICATION	1.2557981004332567E-7	DEFECT
// END VERBOSE ONLY	WITHOUT_CLASSIFICATION	0.9999712347412388	WITHOUT_CLASSIFICATION	2.87652587611548E-5	DEFECT
// add -command CheckOutFile to the commandline	WITHOUT_CLASSIFICATION	0.9999998481339037	WITHOUT_CLASSIFICATION	1.5186609633730892E-7	DEFECT
// Finally, show the Item properties ... // Always show the ItemID.	WITHOUT_CLASSIFICATION	0.9996209977014995	WITHOUT_CLASSIFICATION	3.790022985004574E-4	DEFECT
// Show the primary descriptor. // There should always be one.	WITHOUT_CLASSIFICATION	0.9999798559971934	WITHOUT_CLASSIFICATION	2.0144002806526498E-5	DEFECT
// Show the secondary descriptor, if there is one. // Some item types have one, some don't.	WITHOUT_CLASSIFICATION	0.9999965270371635	WITHOUT_CLASSIFICATION	3.472962836505615E-6	DEFECT
// Change the item to be checked out to a StarTeam File.	WITHOUT_CLASSIFICATION	0.9999999916645288	WITHOUT_CLASSIFICATION	8.335471243213081E-9	DEFECT
// The local file name is simply the local target path (tgt) which has // been passed recursively down from the top of the tree, with the item's name appended.	WITHOUT_CLASSIFICATION	0.9999999982295034	WITHOUT_CLASSIFICATION	1.7704965813715193E-9	DEFECT
// Begin SET and GET methods	WITHOUT_CLASSIFICATION	0.9999999414645978	WITHOUT_CLASSIFICATION	5.853540219359265E-8	DEFECT
// Begin filter getters and setters	WITHOUT_CLASSIFICATION	0.9999894940444402	WITHOUT_CLASSIFICATION	1.0505955559834208E-5	DEFECT
// Check if need to set the loader	WITHOUT_CLASSIFICATION	0.9999999652817047	WITHOUT_CLASSIFICATION	3.4718295367799426E-8	DEFECT
// Now create the scriptRunner	WITHOUT_CLASSIFICATION	0.9999999691160385	WITHOUT_CLASSIFICATION	3.0883961536236354E-8	DEFECT
// find the script repository - it is stored in the project	WITHOUT_CLASSIFICATION	0.9992969928489962	WITHOUT_CLASSIFICATION	7.030071510038273E-4	DEFECT
/*            // try the context classloader            ClassLoader loader                = Thread.currentThread().getContextClassLoader();            */	WITHOUT_CLASSIFICATION	0.9999998743140143	WITHOUT_CLASSIFICATION	1.256859857216826E-7	DEFECT
// If we find a "file" attribute then act on a file otherwise act on a project	WITHOUT_CLASSIFICATION	0.9999999466924427	WITHOUT_CLASSIFICATION	5.330755725607542E-8	DEFECT
// add -command CheckInFile to the commandline	WITHOUT_CLASSIFICATION	0.9999996523868044	WITHOUT_CLASSIFICATION	3.476131955511579E-7	DEFECT
// add -file xxxxx to the commandline	WITHOUT_CLASSIFICATION	0.9999979272402479	WITHOUT_CLASSIFICATION	2.0727597521279617E-6	DEFECT
// add -file xxxxx to the commandline	WITHOUT_CLASSIFICATION	0.9999979272402479	WITHOUT_CLASSIFICATION	2.0727597521279617E-6	DEFECT
// add -command CheckInProject to the commandline	WITHOUT_CLASSIFICATION	0.9999974132117249	WITHOUT_CLASSIFICATION	2.586788275193474E-6	DEFECT
// look for a recursive option	WITHOUT_CLASSIFICATION	0.9999999388007772	WITHOUT_CLASSIFICATION	6.119922275821985E-8	DEFECT
// look for a recursive option	WITHOUT_CLASSIFICATION	0.9999999388007772	WITHOUT_CLASSIFICATION	6.119922275821985E-8	DEFECT
// Look for a comment	WITHOUT_CLASSIFICATION	0.9999988934780334	WITHOUT_CLASSIFICATION	1.1065219666267468E-6	DEFECT
// soscmd Command options	WITHOUT_CLASSIFICATION	0.999999828454091	WITHOUT_CLASSIFICATION	1.7154590895072124E-7	DEFECT
// soscmd Option flags	WITHOUT_CLASSIFICATION	0.9999985219153611	WITHOUT_CLASSIFICATION	1.4780846388654333E-6	DEFECT
// add -command GetFile to the commandline	WITHOUT_CLASSIFICATION	0.9999996249154965	WITHOUT_CLASSIFICATION	3.7508450345978735E-7	DEFECT
// look for a version attribute	WITHOUT_CLASSIFICATION	0.999997973291867	WITHOUT_CLASSIFICATION	2.0267081330512156E-6	DEFECT
//add -revision xxxxx to the commandline	WITHOUT_CLASSIFICATION	0.9999869539325378	WITHOUT_CLASSIFICATION	1.304606746228453E-5	DEFECT
// add -command GetProject to the commandline	WITHOUT_CLASSIFICATION	0.9999980391384539	WITHOUT_CLASSIFICATION	1.9608615462234733E-6	DEFECT
// look for a label option	WITHOUT_CLASSIFICATION	0.9999997043351413	WITHOUT_CLASSIFICATION	2.956648586656702E-7	DEFECT
// make sure localDir exists, create it if it doesn't	WITHOUT_CLASSIFICATION	0.9999264266218022	WITHOUT_CLASSIFICATION	7.357337819779412E-5	DEFECT
// This is the exit status	WITHOUT_CLASSIFICATION	0.9999614867918517	WITHOUT_CLASSIFICATION	3.851320814829218E-5	DEFECT
// Use the OS VM launcher so we get environment variables	WITHOUT_CLASSIFICATION	0.9999994435168473	WITHOUT_CLASSIFICATION	5.564831526874499E-7	DEFECT
// Get the path to the soscmd(.exe)	WITHOUT_CLASSIFICATION	0.9999979730713654	WITHOUT_CLASSIFICATION	2.0269286345738406E-6	DEFECT
// SOS server address is required	WITHOUT_CLASSIFICATION	0.9998775768067006	WITHOUT_CLASSIFICATION	1.2242319329935935E-4	DEFECT
// VSS Info is required	WITHOUT_CLASSIFICATION	0.9998562967718909	WITHOUT_CLASSIFICATION	1.4370322810907952E-4	DEFECT
// VSS project is required	WITHOUT_CLASSIFICATION	0.9997327956561118	WITHOUT_CLASSIFICATION	2.672043438881954E-4	DEFECT
// -verbose	WITHOUT_CLASSIFICATION	0.9999996444777077	WITHOUT_CLASSIFICATION	3.5552229219703733E-7	DEFECT
// Disable Compression	WITHOUT_CLASSIFICATION	0.9999999587125463	WITHOUT_CLASSIFICATION	4.128745364390008E-8	DEFECT
// If -soshome was not specified then we can look for nocache	WITHOUT_CLASSIFICATION	0.9999984747630685	WITHOUT_CLASSIFICATION	1.5252369314078106E-6	DEFECT
// Ignore Exception	WITHOUT_CLASSIFICATION	0.999999483282535	WITHOUT_CLASSIFICATION	5.167174651062055E-7	DEFECT
// look for a recursive option	WITHOUT_CLASSIFICATION	0.9999999388007772	WITHOUT_CLASSIFICATION	6.119922275821985E-8	DEFECT
// Look for a comment	WITHOUT_CLASSIFICATION	0.9999988934780334	WITHOUT_CLASSIFICATION	1.1065219666267468E-6	DEFECT
// -verbose	WITHOUT_CLASSIFICATION	0.9999996444777077	WITHOUT_CLASSIFICATION	3.5552229219703733E-7	DEFECT
// The SOS class knows that the SOS server needs the password flag, // even if there is no password ,so we send a " "	WITHOUT_CLASSIFICATION	0.9995763087809431	WITHOUT_CLASSIFICATION	4.236912190568596E-4	DEFECT
// add -command CheckOutProject to the commandline	WITHOUT_CLASSIFICATION	0.9999992069322797	WITHOUT_CLASSIFICATION	7.930677202554362E-7	DEFECT
// add -command AddLabel to the commandline	WITHOUT_CLASSIFICATION	0.9999995719243346	WITHOUT_CLASSIFICATION	4.2807566541129596E-7	DEFECT
// a label is required	WITHOUT_CLASSIFICATION	0.9999930387285595	WITHOUT_CLASSIFICATION	6.961271440598977E-6	DEFECT
// get the list of files in the dir	WITHOUT_CLASSIFICATION	0.9999995237564894	WITHOUT_CLASSIFICATION	4.7624351068059156E-7	DEFECT
// get a random number between 0 and the number of files	WITHOUT_CLASSIFICATION	0.9999998925864295	WITHOUT_CLASSIFICATION	1.0741357055386238E-7	DEFECT
// set the source to the file at that location	WITHOUT_CLASSIFICATION	0.9999998322998186	WITHOUT_CLASSIFICATION	1.677001813685966E-7	DEFECT
// Empty block	WITHOUT_CLASSIFICATION	0.9999956197660128	WITHOUT_CLASSIFICATION	4.380233987184647E-6	DEFECT
//System.exit(0);	WITHOUT_CLASSIFICATION	0.9999813533304409	WITHOUT_CLASSIFICATION	1.8646669559070704E-5	DEFECT
// build successfull!	WITHOUT_CLASSIFICATION	0.9999980624654496	WITHOUT_CLASSIFICATION	1.9375345503461775E-6	DEFECT
/*AbstractSshMessage*/	WITHOUT_CLASSIFICATION	0.9999982481766138	WITHOUT_CLASSIFICATION	1.7518233862170099E-6	DEFECT
// dir does not exist.	WITHOUT_CLASSIFICATION	0.9996538796979282	WITHOUT_CLASSIFICATION	3.461203020718923E-4	DEFECT
// only track progress for files larger than 100kb in verbose mode	WITHOUT_CLASSIFICATION	0.9999862371143482	WITHOUT_CLASSIFICATION	1.3762885651866274E-5	DEFECT
// get I/O streams for remote scp	WITHOUT_CLASSIFICATION	0.9999896556340118	WITHOUT_CLASSIFICATION	1.0344365988202705E-5	DEFECT
// this indicates an error.	WITHOUT_CLASSIFICATION	0.9999365239195311	WITHOUT_CLASSIFICATION	6.347608046880942E-5	DEFECT
// appears that the next token is not used and it's zero.	WITHOUT_CLASSIFICATION	0.820603451463133	WITHOUT_CLASSIFICATION	0.17939654853686707	DEFECT
// read a content of lfile	WITHOUT_CLASSIFICATION	0.9999999750955295	WITHOUT_CLASSIFICATION	2.4904470517099814E-8	DEFECT
// Ignored	WITHOUT_CLASSIFICATION	0.9999991691957009	WITHOUT_CLASSIFICATION	8.308042990732878E-7	DEFECT
// do nothing;	WITHOUT_CLASSIFICATION	0.9999930994984949	WITHOUT_CLASSIFICATION	6.900501505045886E-6	DEFECT
// didn't receive any response	WITHOUT_CLASSIFICATION	0.9999903929148273	WITHOUT_CLASSIFICATION	9.607085172695617E-6	DEFECT
// execute the command	WITHOUT_CLASSIFICATION	0.9999790289625144	WITHOUT_CLASSIFICATION	2.097103748557421E-5	DEFECT
// wait for it to finish	WITHOUT_CLASSIFICATION	0.9999990786755218	WITHOUT_CLASSIFICATION	9.213244783051959E-7	DEFECT
// ran out of time	WITHOUT_CLASSIFICATION	0.9999996278954483	WITHOUT_CLASSIFICATION	3.7210455173634045E-7	DEFECT
// completed successfully	WITHOUT_CLASSIFICATION	0.9999968472643689	WITHOUT_CLASSIFICATION	3.152735631183557E-6	DEFECT
// user:password@host:/path notation	WITHOUT_CLASSIFICATION	0.9999923617199409	WITHOUT_CLASSIFICATION	7.63828005908321E-6	DEFECT
// no password, will require passphrase	WITHOUT_CLASSIFICATION	0.9999755245175501	WITHOUT_CLASSIFICATION	2.447548244983865E-5	DEFECT
// skip	WITHOUT_CLASSIFICATION	0.9999922232149965	WITHOUT_CLASSIFICATION	7.776785003515797E-6	DEFECT
// send "C0644 filesize filename", where filename should not include '/'	WITHOUT_CLASSIFICATION	0.9999934079303126	WITHOUT_CLASSIFICATION	6.592069687381298E-6	DEFECT
// send a content of lfile	WITHOUT_CLASSIFICATION	0.9999999717793345	WITHOUT_CLASSIFICATION	2.8220665557203473E-8	DEFECT
// C0644 filesize filename - header for a regular file // T time 0 time 0\n - present if perserve time. // D directory - this is the header for a directory.	WITHOUT_CLASSIFICATION	0.9999999706619367	WITHOUT_CLASSIFICATION	2.9338063314433024E-8	DEFECT
// swallow if there was an error before so that // original error will be passed up	WITHOUT_CLASSIFICATION	0.9999952816924593	WITHOUT_CLASSIFICATION	4.71830754067547E-6	DEFECT
// since filesize keeps on decreasing we have to store the // initial filesize	WITHOUT_CLASSIFICATION	0.9999999945553567	WITHOUT_CLASSIFICATION	5.44464327069696E-9	DEFECT
// b may be 0 for success, //          1 for error, //          2 for fatal error,	WITHOUT_CLASSIFICATION	0.9999972993656322	WITHOUT_CLASSIFICATION	2.7006343677840915E-6	DEFECT
// like <exec> // like <exec> // like <exec>	WITHOUT_CLASSIFICATION	0.999946597849885	WITHOUT_CLASSIFICATION	5.340215011498309E-5	DEFECT
//log(message, Project.MSG_DEBUG);	WITHOUT_CLASSIFICATION	0.9999731558338198	WITHOUT_CLASSIFICATION	2.684416618012042E-5	DEFECT
// we want this to have a false default, unlike for Checkin.	WITHOUT_CLASSIFICATION	0.9999999581859171	WITHOUT_CLASSIFICATION	4.181408279102572E-8	DEFECT
// If the file doesn't pass the include/exclude tests, skip it.	WITHOUT_CLASSIFICATION	0.9999991987142816	WITHOUT_CLASSIFICATION	8.012857183861486E-7	DEFECT
// We try to update the status once to give StarTeam // another chance.	WITHOUT_CLASSIFICATION	0.9999999867992843	WITHOUT_CLASSIFICATION	1.3200715712872124E-8	DEFECT
// once we find a folder that isn't in the repository, // we know we can add it.	WITHOUT_CLASSIFICATION	0.9999836379222705	WITHOUT_CLASSIFICATION	1.636207772950611E-5	DEFECT
// once we find a folder that isn't in the repository, // we know we can add it.	WITHOUT_CLASSIFICATION	0.9999836379222705	WITHOUT_CLASSIFICATION	1.636207772950611E-5	DEFECT
// if a label has been supplied, use it to configure the view // otherwise use current view	WITHOUT_CLASSIFICATION	0.9999998489515983	WITHOUT_CLASSIFICATION	1.510484016619467E-7	DEFECT
// if a date has been supplied use a view configured to the date.	WITHOUT_CLASSIFICATION	0.9999997130490815	WITHOUT_CLASSIFICATION	2.869509184079729E-7	DEFECT
// if a date has been supplied use a view configured to the date.	WITHOUT_CLASSIFICATION	0.9999997130490815	WITHOUT_CLASSIFICATION	2.869509184079729E-7	DEFECT
// otherwise, use this view configured as the tip.	WITHOUT_CLASSIFICATION	0.9999999688307945	WITHOUT_CLASSIFICATION	3.1169205499442954E-8	DEFECT
// otherwise, use this view configured as the tip.	WITHOUT_CLASSIFICATION	0.9999999688307945	WITHOUT_CLASSIFICATION	3.1169205499442954E-8	DEFECT
// For all Files in this folder, we need to check // if there have been modifications.	WITHOUT_CLASSIFICATION	0.9999999095759742	WITHOUT_CLASSIFICATION	9.042402586918033E-8	DEFECT
// Now we recursively call this method on all sub folders in this // folder unless recursive attribute is off.	WITHOUT_CLASSIFICATION	0.9999993317926698	WITHOUT_CLASSIFICATION	6.68207330226445E-7	DEFECT
// handle the files so they appear first	WITHOUT_CLASSIFICATION	0.9999999895798102	WITHOUT_CLASSIFICATION	1.0420189869302394E-8	DEFECT
// now do it again for the directories so they appear last.	WITHOUT_CLASSIFICATION	0.999999876459464	WITHOUT_CLASSIFICATION	1.2354053591886549E-7	DEFECT
// Create the new label and update the repository	WITHOUT_CLASSIFICATION	0.9999998658538555	WITHOUT_CLASSIFICATION	1.3414614449583504E-7	DEFECT
// write a Properties file in each directory:	WITHOUT_CLASSIFICATION	0.9999957720060555	WITHOUT_CLASSIFICATION	4.2279939445220705E-6	DEFECT
// Create an instance of the rmic, redirecting output to // the project log	WITHOUT_CLASSIFICATION	0.9999969056334229	WITHOUT_CLASSIFICATION	3.0943665770855454E-6	DEFECT
// CheckStyle:MethodNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9999995559756635	WITHOUT_CLASSIFICATION	4.440243364907797E-7	DEFECT
// once we find a folder that isn't in the repository, // we know we can add it.	WITHOUT_CLASSIFICATION	0.9999836379222705	WITHOUT_CLASSIFICATION	1.636207772950611E-5	DEFECT
//ATTRIBUTES settable from ant.	WITHOUT_CLASSIFICATION	0.9999994273474263	WITHOUT_CLASSIFICATION	5.726525736234505E-7	DEFECT
// if a label has been supplied and it is a view label, use it // to configure the view	WITHOUT_CLASSIFICATION	0.9999991640978863	WITHOUT_CLASSIFICATION	8.359021136670318E-7	DEFECT
// if a label has been supplied and it is a revision label, use the raw // the view as the snapshot	WITHOUT_CLASSIFICATION	0.9999987781987195	WITHOUT_CLASSIFICATION	1.2218012804678947E-6	DEFECT
// prune away any files not belonging to the revision label // this is one ugly API from Starteam SDK	WITHOUT_CLASSIFICATION	0.9972600186152858	WITHOUT_CLASSIFICATION	0.002739981384714195	DEFECT
// PR 31965 says that it can return null	WITHOUT_CLASSIFICATION	0.9999983517289549	WITHOUT_CLASSIFICATION	1.6482710450952953E-6	DEFECT
// no root local mapping has been specified.	WITHOUT_CLASSIFICATION	0.9999979376033317	WITHOUT_CLASSIFICATION	2.0623966682850945E-6	DEFECT
// Inspect everything in the root folder and then recursively	WITHOUT_CLASSIFICATION	0.9999838577925724	WITHOUT_CLASSIFICATION	1.6142207427647018E-5	DEFECT
// Tell user what he is doing	WITHOUT_CLASSIFICATION	0.9999980238406222	WITHOUT_CLASSIFICATION	1.9761593777911133E-6	DEFECT
// set the local folder.	WITHOUT_CLASSIFICATION	0.9999999182998578	WITHOUT_CLASSIFICATION	8.170014222230423E-8	DEFECT
// set the local folder.	WITHOUT_CLASSIFICATION	0.9999999182998578	WITHOUT_CLASSIFICATION	8.170014222230423E-8	DEFECT
// ATTRIBUTES	WITHOUT_CLASSIFICATION	0.9999842979570922	WITHOUT_CLASSIFICATION	1.570204290787104E-5	DEFECT
// create a hashtable to group them by parent directory:	WITHOUT_CLASSIFICATION	0.9999963471243639	WITHOUT_CLASSIFICATION	3.652875636161949E-6	DEFECT
// else lnk exists, do nothing	WITHOUT_CLASSIFICATION	0.9999994544603085	WITHOUT_CLASSIFICATION	5.455396915944008E-7	DEFECT
// get an Iterator of file objects representing links (canonical):	WITHOUT_CLASSIFICATION	0.9999999005053491	WITHOUT_CLASSIFICATION	9.949465073661828E-8	DEFECT
//iterate through the names, get the matching values	WITHOUT_CLASSIFICATION	0.9999993642284619	WITHOUT_CLASSIFICATION	6.357715380035531E-7	DEFECT
/////////////////////////////////////////////////////////////// // GET/SET methods. // Setters, of course are where ant user passes in values. ///////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999999705219591	WITHOUT_CLASSIFICATION	2.94780409017835E-8	DEFECT
/////////////////////////////////////////////////////////////// // INCLUDE-EXCLUDE processing ///////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999995218128834	WITHOUT_CLASSIFICATION	4.781871166014223E-7	DEFECT
// find the starteam folder specified to be the root of the // operation.  Throw if it can't be found.	WITHOUT_CLASSIFICATION	0.999999436262644	WITHOUT_CLASSIFICATION	5.637373559984239E-7	DEFECT
// either use default path or root local mapping, // which is now embedded in the root folder	WITHOUT_CLASSIFICATION	0.9999972518094793	WITHOUT_CLASSIFICATION	2.7481905205702447E-6	DEFECT
///////////////////////////////////////////////////////// // GET/SET methods. // Setters, of course are where ant user passes in values. /////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999999705219591	WITHOUT_CLASSIFICATION	2.94780409017835E-8	DEFECT
// fill up a Properties object with link and resource names:	WITHOUT_CLASSIFICATION	0.9999941882019034	WITHOUT_CLASSIFICATION	5.811798096534768E-6	DEFECT
// find the resource of the existing link:	WITHOUT_CLASSIFICATION	0.9999951829833866	WITHOUT_CLASSIFICATION	4.817016613460947E-6	DEFECT
// rename the resource, thus breaking the link:	WITHOUT_CLASSIFICATION	0.9999969158510477	WITHOUT_CLASSIFICATION	3.0841489522916016E-6	DEFECT
// delete the (now) broken link:	WITHOUT_CLASSIFICATION	0.9881218815830207	WITHOUT_CLASSIFICATION	0.011878118416979208	DEFECT
// return the resource to its original name:	WITHOUT_CLASSIFICATION	0.9999985943473019	WITHOUT_CLASSIFICATION	1.405652698126541E-6	DEFECT
// loop through the supplied file sets:	WITHOUT_CLASSIFICATION	0.9999974307502286	WITHOUT_CLASSIFICATION	2.5692497714185907E-6	DEFECT
// load included files as properties files:	WITHOUT_CLASSIFICATION	0.9999988757257898	WITHOUT_CLASSIFICATION	1.1242742101389244E-6	DEFECT
// -GL	WITHOUT_CLASSIFICATION	0.999980390899229	WITHOUT_CLASSIFICATION	1.9609100770979538E-5	DEFECT
// -GL	WITHOUT_CLASSIFICATION	0.999980390899229	WITHOUT_CLASSIFICATION	1.9609100770979538E-5	DEFECT
// -I- or -I-Y or -I-N	WITHOUT_CLASSIFICATION	0.9999919174735514	WITHOUT_CLASSIFICATION	8.082526448644992E-6	DEFECT
// -I- or -I-Y or -I-N	WITHOUT_CLASSIFICATION	0.9999919174735514	WITHOUT_CLASSIFICATION	8.082526448644992E-6	DEFECT
// -O-	WITHOUT_CLASSIFICATION	0.9999837053789196	WITHOUT_CLASSIFICATION	1.629462108043186E-5	DEFECT
// -R	WITHOUT_CLASSIFICATION	0.9999809358837963	WITHOUT_CLASSIFICATION	1.9064116203690044E-5	DEFECT
// -R	WITHOUT_CLASSIFICATION	0.9999809358837963	WITHOUT_CLASSIFICATION	1.9064116203690044E-5	DEFECT
// -V	WITHOUT_CLASSIFICATION	0.9999796986730216	WITHOUT_CLASSIFICATION	2.0301326978371317E-5	DEFECT
// -W	WITHOUT_CLASSIFICATION	0.9999806911875916	WITHOUT_CLASSIFICATION	1.930881240832457E-5	DEFECT
// -W	WITHOUT_CLASSIFICATION	0.9999806911875916	WITHOUT_CLASSIFICATION	1.930881240832457E-5	DEFECT
// -Y	WITHOUT_CLASSIFICATION	0.9999849802105599	WITHOUT_CLASSIFICATION	1.5019789440148973E-5	DEFECT
// -Y	WITHOUT_CLASSIFICATION	0.9999849802105599	WITHOUT_CLASSIFICATION	1.5019789440148973E-5	DEFECT
// -G	WITHOUT_CLASSIFICATION	0.9999833663181698	WITHOUT_CLASSIFICATION	1.66336818302844E-5	DEFECT
// -GWS or -GWR	WITHOUT_CLASSIFICATION	0.9999858577247523	WITHOUT_CLASSIFICATION	1.4142275247591003E-5	DEFECT
//set to empty str if no local path return	WITHOUT_CLASSIFICATION	0.9999999823790742	WITHOUT_CLASSIFICATION	1.7620925888179917E-8	DEFECT
//make sure m_LocalDir exists, create it if it doesn't	WITHOUT_CLASSIFICATION	0.9999314623108088	WITHOUT_CLASSIFICATION	6.853768919116383E-5	DEFECT
// Use the OS launcher so we get environment variables	WITHOUT_CLASSIFICATION	0.9999997665980733	WITHOUT_CLASSIFICATION	2.334019266938591E-7	DEFECT
// VSS items	WITHOUT_CLASSIFICATION	0.9999970147699992	WITHOUT_CLASSIFICATION	2.985230000725794E-6	DEFECT
// VSS items	WITHOUT_CLASSIFICATION	0.9999970147699992	WITHOUT_CLASSIFICATION	2.985230000725794E-6	DEFECT
// -C	WITHOUT_CLASSIFICATION	0.999987171680254	WITHOUT_CLASSIFICATION	1.2828319746122774E-5	DEFECT
// -C	WITHOUT_CLASSIFICATION	0.999987171680254	WITHOUT_CLASSIFICATION	1.2828319746122774E-5	DEFECT
// -L Specify the new label on the command line (instead of being prompted)	WITHOUT_CLASSIFICATION	0.9999983515209145	WITHOUT_CLASSIFICATION	1.648479085402178E-6	DEFECT
// -V Label an existing file or project version	WITHOUT_CLASSIFICATION	0.9999998686483375	WITHOUT_CLASSIFICATION	1.313516624396659E-7	DEFECT
// first off, make sure that we've got a command and a vssdir ...	WITHOUT_CLASSIFICATION	0.9999781489580002	WITHOUT_CLASSIFICATION	2.185104199986476E-5	DEFECT
// pre Kaffe 1.1.5	WITHOUT_CLASSIFICATION	0.999998315389976	WITHOUT_CLASSIFICATION	1.6846100239574085E-6	DEFECT
// -GL	WITHOUT_CLASSIFICATION	0.999980390899229	WITHOUT_CLASSIFICATION	1.9609100770979538E-5	DEFECT
// Write the contents to our master list of links // This method assumes that all links are defined in // terms of absolute paths, or paths relative to the // working directory:	WITHOUT_CLASSIFICATION	0.999997882092904	WITHOUT_CLASSIFICATION	2.1179070961211274E-6	DEFECT
// build the command line from what we got the format is // ss Get VSS items [-G] [-H] [-I-] [-N] [-O] [-R] [-V] [-W] [-Y] [-?] // as specified in the SS.EXE help	WITHOUT_CLASSIFICATION	0.999999495235553	WITHOUT_CLASSIFICATION	5.047644469664668E-7	DEFECT
// -I- or -I-Y or -I-N	WITHOUT_CLASSIFICATION	0.9999919174735514	WITHOUT_CLASSIFICATION	8.082526448644992E-6	DEFECT
// -I- or -I-Y or -I-N	WITHOUT_CLASSIFICATION	0.9999919174735514	WITHOUT_CLASSIFICATION	8.082526448644992E-6	DEFECT
// -O-	WITHOUT_CLASSIFICATION	0.9999837053789196	WITHOUT_CLASSIFICATION	1.629462108043186E-5	DEFECT
// -R	WITHOUT_CLASSIFICATION	0.9999809358837963	WITHOUT_CLASSIFICATION	1.9064116203690044E-5	DEFECT
// -R	WITHOUT_CLASSIFICATION	0.9999809358837963	WITHOUT_CLASSIFICATION	1.9064116203690044E-5	DEFECT
// -R	WITHOUT_CLASSIFICATION	0.9999809358837963	WITHOUT_CLASSIFICATION	1.9064116203690044E-5	DEFECT
// -V	WITHOUT_CLASSIFICATION	0.9999796986730216	WITHOUT_CLASSIFICATION	2.0301326978371317E-5	DEFECT
// -W	WITHOUT_CLASSIFICATION	0.9999806911875916	WITHOUT_CLASSIFICATION	1.930881240832457E-5	DEFECT
// -Y	WITHOUT_CLASSIFICATION	0.9999849802105599	WITHOUT_CLASSIFICATION	1.5019789440148973E-5	DEFECT
// -Y	WITHOUT_CLASSIFICATION	0.9999849802105599	WITHOUT_CLASSIFICATION	1.5019789440148973E-5	DEFECT
// -Y	WITHOUT_CLASSIFICATION	0.9999849802105599	WITHOUT_CLASSIFICATION	1.5019789440148973E-5	DEFECT
// -G	WITHOUT_CLASSIFICATION	0.9999833663181698	WITHOUT_CLASSIFICATION	1.66336818302844E-5	DEFECT
// -GWS or -GWR	WITHOUT_CLASSIFICATION	0.9999858577247523	WITHOUT_CLASSIFICATION	1.4142275247591003E-5	DEFECT
// VSS items	WITHOUT_CLASSIFICATION	0.9999970147699992	WITHOUT_CLASSIFICATION	2.985230000725794E-6	DEFECT
// Use getShortLabel() so labels longer then 30 char are truncated // and the user is warned	WITHOUT_CLASSIFICATION	0.9999999579436639	WITHOUT_CLASSIFICATION	4.2056336121069355E-8	DEFECT
// ss.exe exits with '100', when files have been skipped // so we have to ignore the failure	WITHOUT_CLASSIFICATION	0.999999801769892	WITHOUT_CLASSIFICATION	1.982301078834596E-7	DEFECT
// If location of ss.ini is specified we need to set the // environment-variable SSDIR to this value	WITHOUT_CLASSIFICATION	0.9999996929056385	WITHOUT_CLASSIFICATION	3.0709436145683877E-7	DEFECT
// build the command line from what we got the format is // ss Label VSS items [-C] [-H] [-I-] [-Llabel] [-N] [-O] [-V] [-Y] [-?] // as specified in the SS.EXE help	WITHOUT_CLASSIFICATION	0.9999994779188407	WITHOUT_CLASSIFICATION	5.220811592635754E-7	DEFECT
// VSS items	WITHOUT_CLASSIFICATION	0.9999970147699992	WITHOUT_CLASSIFICATION	2.985230000725794E-6	DEFECT
// -C	WITHOUT_CLASSIFICATION	0.999987171680254	WITHOUT_CLASSIFICATION	1.2828319746122774E-5	DEFECT
// -C	WITHOUT_CLASSIFICATION	0.999987171680254	WITHOUT_CLASSIFICATION	1.2828319746122774E-5	DEFECT
// first off, make sure that we've got a command and a vssdir ...	WITHOUT_CLASSIFICATION	0.9999781489580002	WITHOUT_CLASSIFICATION	2.185104199986476E-5	DEFECT
// first off, make sure that we've got a command and a vssdir ...	WITHOUT_CLASSIFICATION	0.9999781489580002	WITHOUT_CLASSIFICATION	2.185104199986476E-5	DEFECT
// build the command line from what we got the format is // ss Checkin VSS items [-H] [-C] [-I-] [-N] [-O] [-R] [-W] [-Y] [-?] // as specified in the SS.EXE help	WITHOUT_CLASSIFICATION	0.999999375870769	WITHOUT_CLASSIFICATION	6.241292310679713E-7	DEFECT
// -VL	WITHOUT_CLASSIFICATION	0.9999758564200018	WITHOUT_CLASSIFICATION	2.4143579998185055E-5	DEFECT
// -B / -D / -F-	WITHOUT_CLASSIFICATION	0.999961694203088	WITHOUT_CLASSIFICATION	3.830579691201097E-5	DEFECT
// -O	WITHOUT_CLASSIFICATION	0.999983842401906	WITHOUT_CLASSIFICATION	1.6157598093951428E-5	DEFECT
// first off, make sure that we've got a command and a localPath ...	WITHOUT_CLASSIFICATION	0.9999756553665032	WITHOUT_CLASSIFICATION	2.4344633496727128E-5	DEFECT
// -G-	WITHOUT_CLASSIFICATION	0.999983595121074	WITHOUT_CLASSIFICATION	1.6404878925951823E-5	DEFECT
// first off, make sure that we've got a command and a vssdir...	WITHOUT_CLASSIFICATION	0.9999803061062994	WITHOUT_CLASSIFICATION	1.969389370061434E-5	DEFECT
// build the command line from what we got // the format is: // ss Create VSS items [-C] [-H] [-I-] [-N] [-O] [-S] [-Y] [-?] // as specified in the SS.EXE help	WITHOUT_CLASSIFICATION	0.9999603250380182	WITHOUT_CLASSIFICATION	3.967496198179098E-5	DEFECT
// pre Kaffe 1.1.2	WITHOUT_CLASSIFICATION	0.9999983200661491	WITHOUT_CLASSIFICATION	1.6799338509356751E-6	DEFECT
// only supported since Kaffe 1.1.2	WITHOUT_CLASSIFICATION	0.9999529673721718	WITHOUT_CLASSIFICATION	4.7032627828247086E-5	DEFECT
//handle the many different stub options.	WITHOUT_CLASSIFICATION	0.9999996249478652	WITHOUT_CLASSIFICATION	3.750521347982798E-7	DEFECT
//default is compatibility	WITHOUT_CLASSIFICATION	0.9999988467632984	WITHOUT_CLASSIFICATION	1.1532367015911888E-6	DEFECT
//anything else	WITHOUT_CLASSIFICATION	0.9999971213053399	WITHOUT_CLASSIFICATION	2.8786946601200184E-6	DEFECT
//do nothing with the value? or go -v+stubVersion??	WITHOUT_CLASSIFICATION	0.999999580787032	WITHOUT_CLASSIFICATION	4.192129679637269E-7	DEFECT
//set the non-null stubOption	WITHOUT_CLASSIFICATION	0.9999998944537649	WITHOUT_CLASSIFICATION	1.0554623507921389E-7	DEFECT
// we know that name.endsWith(".class")	WITHOUT_CLASSIFICATION	0.9999961021246421	WITHOUT_CLASSIFICATION	3.897875357904132E-6	DEFECT
// Combine the build classpath with the system classpath, in an // order determined by the value of build.sysclasspath	WITHOUT_CLASSIFICATION	0.9999998799863377	WITHOUT_CLASSIFICATION	1.2001366228782653E-7	DEFECT
// swallow	WITHOUT_CLASSIFICATION	0.9999938091705642	WITHOUT_CLASSIFICATION	6.1908294358028714E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999998068383374	WITHOUT_CLASSIFICATION	1.9316166246942935E-7	DEFECT
// build the command line from what we got the format is // ss CP VSS items [-H] [-I-] [-Y] [-?] // as specified in the SS.EXE help	WITHOUT_CLASSIFICATION	0.999997994632729	WITHOUT_CLASSIFICATION	2.0053672709957143E-6	DEFECT
//for java1.5+, we generate compatible stubs, that is, unless //the caller asked for IDL or IIOP support.	WITHOUT_CLASSIFICATION	0.9999695754651725	WITHOUT_CLASSIFICATION	3.0424534827418378E-5	DEFECT
// JRMP with simple naming convention	WITHOUT_CLASSIFICATION	0.999997097476305	WITHOUT_CLASSIFICATION	2.9025236948953434E-6	DEFECT
/*                 * I know, this is not necessary, but I prefer it explicit (SB)                 */	WITHOUT_CLASSIFICATION	0.9998615602380221	WITHOUT_CLASSIFICATION	1.3843976197795146E-4	DEFECT
// no package	WITHOUT_CLASSIFICATION	0.9999998359961428	WITHOUT_CLASSIFICATION	1.6400385717906547E-7	DEFECT
// no package	WITHOUT_CLASSIFICATION	0.9999998359961428	WITHOUT_CLASSIFICATION	1.6400385717906547E-7	DEFECT
// only stub, no tie	WITHOUT_CLASSIFICATION	0.9999995743099486	WITHOUT_CLASSIFICATION	4.256900514346977E-7	DEFECT
/*                         * stub is derived from implementation,                         * tie from interface name.                         */	WITHOUT_CLASSIFICATION	0.9999952860278493	WITHOUT_CLASSIFICATION	4.713972150762711E-6	DEFECT
//rely on RMIC being on the path	WITHOUT_CLASSIFICATION	0.9990961604096167	WITHOUT_CLASSIFICATION	9.03839590383297E-4	DEFECT
//set up the args	WITHOUT_CLASSIFICATION	0.9999999252333794	WITHOUT_CLASSIFICATION	7.476662052774803E-8	DEFECT
// Create an instance of the rmic	WITHOUT_CLASSIFICATION	0.9999994465759886	WITHOUT_CLASSIFICATION	5.534240114989612E-7	DEFECT
//convert to lower case in the English locale,	WITHOUT_CLASSIFICATION	0.9999986634203919	WITHOUT_CLASSIFICATION	1.3365796080853155E-6	DEFECT
//handle default specially by choosing the sun or kaffe compiler	WITHOUT_CLASSIFICATION	0.9999998776498472	WITHOUT_CLASSIFICATION	1.2235015266875324E-7	DEFECT
//no match? ask for the non-lower-cased type	WITHOUT_CLASSIFICATION	0.9999999753799955	WITHOUT_CLASSIFICATION	2.4620004490878952E-8	DEFECT
//do the system assertions	WITHOUT_CLASSIFICATION	0.9999995374177552	WITHOUT_CLASSIFICATION	4.6258224486239796E-7	DEFECT
//do the system assertions	WITHOUT_CLASSIFICATION	0.9999995374177552	WITHOUT_CLASSIFICATION	4.6258224486239796E-7	DEFECT
//do the system assertions	WITHOUT_CLASSIFICATION	0.9999995374177552	WITHOUT_CLASSIFICATION	4.6258224486239796E-7	DEFECT
//now any inner assertions	WITHOUT_CLASSIFICATION	0.9999977447605172	WITHOUT_CLASSIFICATION	2.2552394827444554E-6	DEFECT
//now any inner assertions	WITHOUT_CLASSIFICATION	0.9999977447605172	WITHOUT_CLASSIFICATION	2.2552394827444554E-6	DEFECT
//now any inner assertions	WITHOUT_CLASSIFICATION	0.9999977447605172	WITHOUT_CLASSIFICATION	2.2552394827444554E-6	DEFECT
//catch invalidness	WITHOUT_CLASSIFICATION	0.9999997364572375	WITHOUT_CLASSIFICATION	2.6354276249663924E-7	DEFECT
//see if it is a package or a class	WITHOUT_CLASSIFICATION	0.9999772042362505	WITHOUT_CLASSIFICATION	2.279576374944652E-5	DEFECT
//packages get a ... prefix	WITHOUT_CLASSIFICATION	0.999996530800071	WITHOUT_CLASSIFICATION	3.469199929064359E-6	DEFECT
//append the ... suffix if not there already	WITHOUT_CLASSIFICATION	0.9949725793123038	WITHOUT_CLASSIFICATION	0.00502742068769625	DEFECT
//classes just get the classname	WITHOUT_CLASSIFICATION	0.9999996517473445	WITHOUT_CLASSIFICATION	3.482526554886864E-7	DEFECT
//-- Fields ----------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999254854095568	WITHOUT_CLASSIFICATION	7.451459044319953E-5	DEFECT
//-- Methods ---------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999892533262376	WITHOUT_CLASSIFICATION	1.0746673762458555E-5	DEFECT
// Add all nested elements to our catalog	WITHOUT_CLASSIFICATION	0.9999994895088914	WITHOUT_CLASSIFICATION	5.104911086104628E-7	DEFECT
// Ignore exception	WITHOUT_CLASSIFICATION	0.9999992432253084	WITHOUT_CLASSIFICATION	7.567746914915228E-7	DEFECT
// New behavior for delayed task creation. Description // will be evaluated in Project.getDescription()	WITHOUT_CLASSIFICATION	0.9999763991021086	WITHOUT_CLASSIFICATION	2.3600897891470096E-5	DEFECT
// Append the classpath of the nested catalog	WITHOUT_CLASSIFICATION	0.9998953705530698	WITHOUT_CLASSIFICATION	1.0462944693019132E-4	DEFECT
// Append the catalog path of the nested catalog	WITHOUT_CLASSIFICATION	0.9999459592528608	WITHOUT_CLASSIFICATION	5.4040747139311124E-5	DEFECT
// At this point we are probably in failure mode, but // try to use the bare URI as a last gasp	WITHOUT_CLASSIFICATION	0.9999914087728916	WITHOUT_CLASSIFICATION	8.591227108299326E-6	DEFECT
// The Apache resolver is present - Need to check if it can // be seen by the catalog resolver class. Start by getting // the actual loader	WITHOUT_CLASSIFICATION	0.9999999770970608	WITHOUT_CLASSIFICATION	2.2902939210729016E-8	DEFECT
// load the base class through this loader.	WITHOUT_CLASSIFICATION	0.9999888493127578	WITHOUT_CLASSIFICATION	1.1150687242262247E-5	DEFECT
// and find its actual loader	WITHOUT_CLASSIFICATION	0.9999998329448008	WITHOUT_CLASSIFICATION	1.6705519925709183E-7	DEFECT
// // Success!  The xml-commons resolver library is // available, so use it. //	WITHOUT_CLASSIFICATION	0.9999992120296849	WITHOUT_CLASSIFICATION	7.879703150531608E-7	DEFECT
// // The xml-commons resolver library is not // available, so we can't use it. //	WITHOUT_CLASSIFICATION	0.9999965865049916	WITHOUT_CLASSIFICATION	3.4134950083387388E-6	DEFECT
// the following line seems to be necessary on Windows under JDK 1.2	WITHOUT_CLASSIFICATION	0.9997489354796181	WITHOUT_CLASSIFICATION	2.510645203818788E-4	DEFECT
// // The ResourceLocation may specify a relative path for its // location attribute.  This is resolved using the appropriate // base. //	WITHOUT_CLASSIFICATION	0.9999798501078002	WITHOUT_CLASSIFICATION	2.0149892199725165E-5	DEFECT
// // for classpath lookup we ignore the base directory //	WITHOUT_CLASSIFICATION	0.999999976755889	WITHOUT_CLASSIFICATION	2.3244110897222083E-8	DEFECT
// // The ResourceLocation may specify a relative url for its // location attribute.  This is resolved using the appropriate // base. //	WITHOUT_CLASSIFICATION	0.9999914275478419	WITHOUT_CLASSIFICATION	8.572452158115542E-6	DEFECT
// // We didn't match a ResourceLocation, but since we // only support PUBLIC and URI entry types internally, // it is still possible that there is another entry in // an external catalog that will match.  We call // Apache resolver's resolveEntity method to cover // this possibility. //	WITHOUT_CLASSIFICATION	0.6684450411760191	DEFECT	0.33155495882398084	WITHOUT_CLASSIFICATION
// // Use the passed in base in preference to the base // from matchingEntry, which is either null or the // directory in which the external catalog file from // which it was obtained is located.  We make a copy // so matchingEntry's original base is untouched.  Of // course, if there is no base, no need to make a // copy... // // This is the standard behavior as per my reading of // the JAXP and XML Catalog specs.  CKS 11/7/2002 //	WITHOUT_CLASSIFICATION	0.9999999958336077	WITHOUT_CLASSIFICATION	4.166392296966226E-9	DEFECT
// Parse each catalog listed in nested <catalogpath> elements	WITHOUT_CLASSIFICATION	0.9999999819692567	WITHOUT_CLASSIFICATION	1.8030743365069015E-8	DEFECT
//-- XMLCatalog	WITHOUT_CLASSIFICATION	0.9999383998132945	WITHOUT_CLASSIFICATION	6.160018670544342E-5	DEFECT
/* Methods below all add specific selectors */	WITHOUT_CLASSIFICATION	0.9999999382459035	WITHOUT_CLASSIFICATION	6.1754096515548E-8	DEFECT
// No includes supplied, so set it to 'matches all'	WITHOUT_CLASSIFICATION	0.9999999980077597	WITHOUT_CLASSIFICATION	1.992240360913815E-9	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999998068383374	WITHOUT_CLASSIFICATION	1.9316166246942935E-7	DEFECT
/* package-private for now */	WITHOUT_CLASSIFICATION	0.9999987279630365	WITHOUT_CLASSIFICATION	1.272036963449625E-6	DEFECT
/* package-private for now */	WITHOUT_CLASSIFICATION	0.9999987279630365	WITHOUT_CLASSIFICATION	1.272036963449625E-6	DEFECT
// special case in ZIPs, we do not want this thing included	WITHOUT_CLASSIFICATION	0.9999963153127716	WITHOUT_CLASSIFICATION	3.6846872285439805E-6	DEFECT
// first check if the archive needs to be scanned again	WITHOUT_CLASSIFICATION	0.9999999933567347	WITHOUT_CLASSIFICATION	6.643265310857163E-9	DEFECT
//do not use a FileResource b/c it pulls File info from the filesystem:	WITHOUT_CLASSIFICATION	0.999999348151385	WITHOUT_CLASSIFICATION	6.51848614989274E-7	DEFECT
// spare scanning again and again	WITHOUT_CLASSIFICATION	0.99999994793389	WITHOUT_CLASSIFICATION	5.206610996793903E-8	DEFECT
/* cached DirectoryScanner instance for our own Project only */	WITHOUT_CLASSIFICATION	0.999990446460515	WITHOUT_CLASSIFICATION	9.553539484899295E-6	DEFECT
// SelectorContainer methods	WITHOUT_CLASSIFICATION	0.9999999957582797	WITHOUT_CLASSIFICATION	4.2417202980361295E-9	DEFECT
// WIN9x uses a bat file for executing commands	WITHOUT_CLASSIFICATION	0.9998010275820594	WITHOUT_CLASSIFICATION	1.9897241794074582E-4	DEFECT
// empty path return empty string	WITHOUT_CLASSIFICATION	0.9999999776477034	WITHOUT_CLASSIFICATION	2.235229649011594E-8	DEFECT
//no command? no string	WITHOUT_CLASSIFICATION	0.9999989224618726	WITHOUT_CLASSIFICATION	1.0775381274324283E-6	DEFECT
// parse with a simple finite state machine	WITHOUT_CLASSIFICATION	0.9999960862677675	WITHOUT_CLASSIFICATION	3.913732232580368E-6	DEFECT
//inherit doc	WITHOUT_CLASSIFICATION	0.9999893609052275	WITHOUT_CLASSIFICATION	1.063909477240248E-5	DEFECT
//can't have zero-length token	WITHOUT_CLASSIFICATION	0.9998253109591615	WITHOUT_CLASSIFICATION	1.7468904083859483E-4	DEFECT
// we have another token, let's parse it.	WITHOUT_CLASSIFICATION	0.9994920719741441	WITHOUT_CLASSIFICATION	5.079280258557828E-4	DEFECT
// should always be the case...	WITHOUT_CLASSIFICATION	0.9998904903823292	WITHOUT_CLASSIFICATION	1.0950961767066667E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999554955215	WITHOUT_CLASSIFICATION	4.4504478498603726E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999554955215	WITHOUT_CLASSIFICATION	4.4504478498603726E-7	DEFECT
// swallow	WITHOUT_CLASSIFICATION	0.9999938091705642	WITHOUT_CLASSIFICATION	6.1908294358028714E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999998068383374	WITHOUT_CLASSIFICATION	1.9316166246942935E-7	DEFECT
/**     * Invoked by IntrospectionHelper for <code>setXXX(Path p)</code>     * attribute setters.     * @param p the <code>Project</code> for this path.     * @param path the <code>String</code> path definition.     */	WITHOUT_CLASSIFICATION	0.9999934272186048	WITHOUT_CLASSIFICATION	6.572781395091256E-6	DEFECT
// ignore: don't trust anyone	WITHOUT_CLASSIFICATION	0.999990469003091	WITHOUT_CLASSIFICATION	9.530996909033016E-6	DEFECT
// last: don't trust the developer	WITHOUT_CLASSIFICATION	0.9999906524279236	WITHOUT_CLASSIFICATION	9.347572076319315E-6	DEFECT
// newer versions of Kaffe (1.1.1+) won't have this, // but this will be sorted by FileSet anyway.	WITHOUT_CLASSIFICATION	0.9981029056717226	WITHOUT_CLASSIFICATION	0.0018970943282773773	DEFECT
// JDK 1.2+ seems to set java.home to the JRE directory.	WITHOUT_CLASSIFICATION	0.9999996018542195	WITHOUT_CLASSIFICATION	3.981457804562769E-7	DEFECT
// Just keep the old version as well and let addExisting // sort it out.	WITHOUT_CLASSIFICATION	0.99999997040582	WITHOUT_CLASSIFICATION	2.959417989708229E-8	DEFECT
// Sun's and Apple's 1.4 have JCE and JSSE in separate jars.	WITHOUT_CLASSIFICATION	0.9999985789519913	WITHOUT_CLASSIFICATION	1.4210480086855007E-6	DEFECT
// IBM's 1.4 has rt.jar split into 4 smaller jars and a combined // JCE/JSSE in security.jar.	WITHOUT_CLASSIFICATION	0.9999856154472364	WITHOUT_CLASSIFICATION	1.4384552763594662E-5	DEFECT
// Added for MacOS X	WITHOUT_CLASSIFICATION	0.9999865139474133	WITHOUT_CLASSIFICATION	1.3486052586717088E-5	DEFECT
//remove any null elements	WITHOUT_CLASSIFICATION	0.9999992447983342	WITHOUT_CLASSIFICATION	7.55201665757319E-7	DEFECT
//create the list	WITHOUT_CLASSIFICATION	0.9999999545725433	WITHOUT_CLASSIFICATION	4.54274567796724E-8	DEFECT
//fill it	WITHOUT_CLASSIFICATION	0.9999226023244099	WITHOUT_CLASSIFICATION	7.739767559008896E-5	DEFECT
//convert to an array	WITHOUT_CLASSIFICATION	0.9999981731756837	WITHOUT_CLASSIFICATION	1.8268243162265478E-6	DEFECT
// properties are part of the vm options...	WITHOUT_CLASSIFICATION	0.999995402429114	WITHOUT_CLASSIFICATION	4.597570886048478E-6	DEFECT
//boot classpath	WITHOUT_CLASSIFICATION	0.999998723572978	WITHOUT_CLASSIFICATION	1.2764270219482793E-6	DEFECT
//main classpath	WITHOUT_CLASSIFICATION	0.9999975919956452	WITHOUT_CLASSIFICATION	2.4080043547743753E-6	DEFECT
//now any assertions are added	WITHOUT_CLASSIFICATION	0.9999949670087711	WITHOUT_CLASSIFICATION	5.032991228914714E-6	DEFECT
// this is the classname to run as well as its arguments. // in case of 'executeJar', the executable is a jar file.	WITHOUT_CLASSIFICATION	0.9999999494257906	WITHOUT_CLASSIFICATION	5.057420934351486E-8	DEFECT
// cloned system properties	WITHOUT_CLASSIFICATION	0.9999978395971039	WITHOUT_CLASSIFICATION	2.160402896032309E-6	DEFECT
// classpath is "-classpath <classpath>" -> 2 args	WITHOUT_CLASSIFICATION	0.9999958351594759	WITHOUT_CLASSIFICATION	4.164840524105641E-6	DEFECT
// bootclasspath is "-Xbootclasspath:<classpath>" -> 1 arg	WITHOUT_CLASSIFICATION	0.9999983113310529	WITHOUT_CLASSIFICATION	1.6886689470615451E-6	DEFECT
// jar execution requires an additional -jar option	WITHOUT_CLASSIFICATION	0.9998407481640753	WITHOUT_CLASSIFICATION	1.592518359245717E-4	DEFECT
/*<? extends EnumeratedAttribute>*/	WITHOUT_CLASSIFICATION	0.999997148210726	WITHOUT_CLASSIFICATION	2.8517892739237838E-6	DEFECT
//end nested class	WITHOUT_CLASSIFICATION	0.9999919371241144	WITHOUT_CLASSIFICATION	8.062875885596133E-6	DEFECT
// Add this PropertySet's nested PropertySets' property names.	WITHOUT_CLASSIFICATION	0.9999990481139803	WITHOUT_CLASSIFICATION	9.518860195808098E-7	DEFECT
//make a copy...	WITHOUT_CLASSIFICATION	0.9996827823732459	WITHOUT_CLASSIFICATION	3.172176267539939E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999998068383374	WITHOUT_CLASSIFICATION	1.9316166246942935E-7	DEFECT
// Gotta atleast put in the proper spelling :-P	WITHOUT_CLASSIFICATION	0.9997500328628038	WITHOUT_CLASSIFICATION	2.4996713719617914E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999998068383374	WITHOUT_CLASSIFICATION	1.9316166246942935E-7	DEFECT
// If this TransformOperation has DrawOperation children // then Rotate the first child and return.	WITHOUT_CLASSIFICATION	0.9999999757661524	WITHOUT_CLASSIFICATION	2.4233847618386175E-8	DEFECT
// If this TransformOperation has DrawOperation children // then Rotate the first child and return.	WITHOUT_CLASSIFICATION	0.9999999757661524	WITHOUT_CLASSIFICATION	2.4233847618386175E-8	DEFECT
// CheckStyle:MemberNameCheck ON	WITHOUT_CLASSIFICATION	0.9999995161448159	WITHOUT_CLASSIFICATION	4.838551841547503E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc // CheckStyle:MemberNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9999999459223445	WITHOUT_CLASSIFICATION	5.407765542979102E-8	DEFECT
// change this to get the objects from the other reference	WITHOUT_CLASSIFICATION	0.9999997666043922	WITHOUT_CLASSIFICATION	2.3339560783504718E-7	DEFECT
// change this to get the objects from the other reference	WITHOUT_CLASSIFICATION	0.9999997666043922	WITHOUT_CLASSIFICATION	2.3339560783504718E-7	DEFECT
//-- Fields ----------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999254854095568	WITHOUT_CLASSIFICATION	7.451459044319953E-5	DEFECT
//-- Methods ---------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999892533262376	WITHOUT_CLASSIFICATION	1.0746673762458555E-5	DEFECT
// CheckStyle:VisibilityModifier OFF	WITHOUT_CLASSIFICATION	0.9999997054454564	WITHOUT_CLASSIFICATION	2.945545436322463E-7	DEFECT
// may be null if a system property has been added // after the project instance has been initialized	WITHOUT_CLASSIFICATION	0.9999930077514497	WITHOUT_CLASSIFICATION	6.992248550204119E-6	DEFECT
// Add this PropertySet's property names.	WITHOUT_CLASSIFICATION	0.9999960098536668	WITHOUT_CLASSIFICATION	3.990146333159443E-6	DEFECT
//map the names	WITHOUT_CLASSIFICATION	0.9999981133923753	WITHOUT_CLASSIFICATION	1.8866076247159078E-6	DEFECT
// Create one NameEntry in the appropriate pattern list for each // line in the file.	WITHOUT_CLASSIFICATION	0.9999999550127574	WITHOUT_CLASSIFICATION	4.498724255959776E-8	DEFECT
// Get a FileReader	WITHOUT_CLASSIFICATION	0.9999997698679935	WITHOUT_CLASSIFICATION	2.3013200651182422E-7	DEFECT
//Ignore exception	WITHOUT_CLASSIFICATION	0.9999970807056009	WITHOUT_CLASSIFICATION	2.919294399178868E-6	DEFECT
//-- ResourceLocation	WITHOUT_CLASSIFICATION	0.9999992973479167	WITHOUT_CLASSIFICATION	7.026520833437998E-7	DEFECT
// Add base set of permissions	WITHOUT_CLASSIFICATION	0.9999998237142306	WITHOUT_CLASSIFICATION	1.7628576936636756E-7	DEFECT
/*                     if the permission was not explicitly granted or revoked                     the original security manager will do its work                    */	WITHOUT_CLASSIFICATION	0.9949920732234618	WITHOUT_CLASSIFICATION	0.005007926776538247	DEFECT
// None of the actions revoked, so all allowed.	WITHOUT_CLASSIFICATION	0.9999996877021848	WITHOUT_CLASSIFICATION	3.122978151297842E-7	DEFECT
//default true:	WITHOUT_CLASSIFICATION	0.9999991735763923	WITHOUT_CLASSIFICATION	8.264236076319147E-7	DEFECT
//default false:	WITHOUT_CLASSIFICATION	0.9999995634765629	WITHOUT_CLASSIFICATION	4.3652343711837123E-7	DEFECT
//default false:	WITHOUT_CLASSIFICATION	0.9999995634765629	WITHOUT_CLASSIFICATION	4.3652343711837123E-7	DEFECT
// The regular expression factory	WITHOUT_CLASSIFICATION	0.9999955604317264	WITHOUT_CLASSIFICATION	4.439568273562401E-6	DEFECT
// temporary variable	WITHOUT_CLASSIFICATION	0.999999912161717	WITHOUT_CLASSIFICATION	8.783828290214403E-8	DEFECT
// This is included	WITHOUT_CLASSIFICATION	0.999996099816904	WITHOUT_CLASSIFICATION	3.900183096084366E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999998068383374	WITHOUT_CLASSIFICATION	1.9316166246942935E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999998068383374	WITHOUT_CLASSIFICATION	1.9316166246942935E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999998068383374	WITHOUT_CLASSIFICATION	1.9316166246942935E-7	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.999993225734014	WITHOUT_CLASSIFICATION	6.774265985996825E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999998068383374	WITHOUT_CLASSIFICATION	1.9316166246942935E-7	DEFECT
//- ApacheCatalog	WITHOUT_CLASSIFICATION	0.9999942846548036	WITHOUT_CLASSIFICATION	5.7153451965233725E-6	DEFECT
// // If you don't do this, you get all sorts of annoying // warnings about a missing properties file.  However, it // seems to work just fine with default values.  Ultimately, // we should probably include a "CatalogManager.properties" // file in the ant jarfile with some default property // settings.  See CatalogManager.java for more details. //	WITHOUT_CLASSIFICATION	0.999999912391656	WITHOUT_CLASSIFICATION	8.760834403140535E-8	DEFECT
// // Make sure CatalogResolver instantiates ApacheCatalog, // rather than a plain Catalog //	WITHOUT_CLASSIFICATION	0.9999999077474199	WITHOUT_CLASSIFICATION	9.225258008820407E-8	DEFECT
// debug // CatalogManager.getStaticManager().setVerbosity(4);	WITHOUT_CLASSIFICATION	0.9999991624470647	WITHOUT_CLASSIFICATION	8.375529352671922E-7	DEFECT
// Pass in reference to ourselves so we can be called back.	WITHOUT_CLASSIFICATION	0.9999993738437104	WITHOUT_CLASSIFICATION	6.26156289555532E-7	DEFECT
//-- ApacheCatalogResolver	WITHOUT_CLASSIFICATION	0.99999951311056	WITHOUT_CLASSIFICATION	4.868894400587933E-7	DEFECT
//sorted bag impl. borrowed from commons-collections TreeBag:	WITHOUT_CLASSIFICATION	0.9999280144229489	WITHOUT_CLASSIFICATION	7.19855770511424E-5	DEFECT
/* now check each Resource in case the child only           lets through files from any children IT may have: */	WITHOUT_CLASSIFICATION	0.9991926373538735	WITHOUT_CLASSIFICATION	8.07362646126477E-4	DEFECT
//?	WITHOUT_CLASSIFICATION	0.9999259429267635	WITHOUT_CLASSIFICATION	7.405707323647788E-5	DEFECT
//not using the accessor in this case to avoid side effects	WITHOUT_CLASSIFICATION	0.9823118331078045	WITHOUT_CLASSIFICATION	0.017688166892195486	DEFECT
/*package-private*/	WITHOUT_CLASSIFICATION	0.9999898851136368	WITHOUT_CLASSIFICATION	1.011488636313788E-5	DEFECT
//new oata.util.ReaderInputStream(new InputStreamReader(	WITHOUT_CLASSIFICATION	0.999957033899387	WITHOUT_CLASSIFICATION	4.29661006130536E-5	DEFECT
//, encoding), encoding);	WITHOUT_CLASSIFICATION	0.9999063947570166	WITHOUT_CLASSIFICATION	9.360524298343324E-5	DEFECT
//first the easy way, if all children are filesystem-only, return true:	WITHOUT_CLASSIFICATION	0.9999999609910954	WITHOUT_CLASSIFICATION	3.9008904603249094E-8	DEFECT
//preserve order-encountered using a list; enforce set logic manually:	WITHOUT_CLASSIFICATION	0.9999998787117604	WITHOUT_CLASSIFICATION	1.2128823960326662E-7	DEFECT
/* cached DirectoryScanner instance */	WITHOUT_CLASSIFICATION	0.9999985595570159	WITHOUT_CLASSIFICATION	1.4404429841668183E-6	DEFECT
//if no nested, natural order:	WITHOUT_CLASSIFICATION	0.9999999966503541	WITHOUT_CLASSIFICATION	3.349645984123878E-9	DEFECT
//dummy	WITHOUT_CLASSIFICATION	0.9999066073681153	WITHOUT_CLASSIFICATION	9.339263188474574E-5	DEFECT
//implement ResourceSelector; inherit doc	WITHOUT_CLASSIFICATION	0.99999691909301	WITHOUT_CLASSIFICATION	3.0809069898988822E-6	DEFECT
// First, check that all elements are correctly configured	WITHOUT_CLASSIFICATION	0.9999988847882415	WITHOUT_CLASSIFICATION	1.1152117585112473E-6	DEFECT
//if either of them is missing, they are different	WITHOUT_CLASSIFICATION	0.9999725890101658	WITHOUT_CLASSIFICATION	2.741098983406037E-5	DEFECT
// different size =>different files	WITHOUT_CLASSIFICATION	0.9999938986250421	WITHOUT_CLASSIFICATION	6.101374957907707E-6	DEFECT
//same date if dest timestamp is within granularity of the srcfile	WITHOUT_CLASSIFICATION	0.9999994046835682	WITHOUT_CLASSIFICATION	5.953164318781118E-7	DEFECT
// different dates => different files	WITHOUT_CLASSIFICATION	0.9999978526325353	WITHOUT_CLASSIFICATION	2.1473674647910637E-6	DEFECT
//here do a bulk comparison	WITHOUT_CLASSIFICATION	0.9999924925939669	WITHOUT_CLASSIFICATION	7.507406033100481E-6	DEFECT
// At this point, we know we have a tie.	WITHOUT_CLASSIFICATION	0.9999916271462541	WITHOUT_CLASSIFICATION	8.372853745907971E-6	DEFECT
// throw BuildException on error	WITHOUT_CLASSIFICATION	0.9981977862190483	WITHOUT_CLASSIFICATION	0.001802213780951691	DEFECT
// throw BuildException on error	WITHOUT_CLASSIFICATION	0.9981977862190483	WITHOUT_CLASSIFICATION	0.001802213780951691	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999998068383374	WITHOUT_CLASSIFICATION	1.9316166246942935E-7	DEFECT
// throw BuildException on error	WITHOUT_CLASSIFICATION	0.9981977862190483	WITHOUT_CLASSIFICATION	0.001802213780951691	DEFECT
// throw BuildException on error	WITHOUT_CLASSIFICATION	0.9981977862190483	WITHOUT_CLASSIFICATION	0.001802213780951691	DEFECT
// throw BuildException on error	WITHOUT_CLASSIFICATION	0.9981977862190483	WITHOUT_CLASSIFICATION	0.001802213780951691	DEFECT
// throw BuildException on error	WITHOUT_CLASSIFICATION	0.9981977862190483	WITHOUT_CLASSIFICATION	0.001802213780951691	DEFECT
// If you felt daring, you could cache the basedir absolute path	WITHOUT_CLASSIFICATION	0.999997724110408	WITHOUT_CLASSIFICATION	2.275889592033502E-6	DEFECT
// Sanity check. Ditch it if you want faster performance	WITHOUT_CLASSIFICATION	0.9999996990807597	WITHOUT_CLASSIFICATION	3.009192403475268E-7	DEFECT
// Determine file whose out-of-dateness is to be checked	WITHOUT_CLASSIFICATION	0.9999999556363343	WITHOUT_CLASSIFICATION	4.436366574517745E-8	DEFECT
// If filename does not match the To attribute of the mapper // then filter it out of the files we are considering	WITHOUT_CLASSIFICATION	0.999827923066134	WITHOUT_CLASSIFICATION	1.7207693386609788E-4	DEFECT
// If filename does not match the To attribute of the mapper // then filter it out of the files we are considering	WITHOUT_CLASSIFICATION	0.999827923066134	WITHOUT_CLASSIFICATION	1.7207693386609788E-4	DEFECT
// Sanity check	WITHOUT_CLASSIFICATION	0.9999997014425299	WITHOUT_CLASSIFICATION	2.985574700105174E-7	DEFECT
// Sanity check	WITHOUT_CLASSIFICATION	0.9999997014425299	WITHOUT_CLASSIFICATION	2.985574700105174E-7	DEFECT
// Determine file whose existence is to be checked	WITHOUT_CLASSIFICATION	0.9999997493733628	WITHOUT_CLASSIFICATION	2.506266371710997E-7	DEFECT
/**     * When using this as a custom selector, this method will be called.     * It translates each parameter into the appropriate setXXX() call.     *     * @param parameters the complete set of parameters for this selector.     */	WITHOUT_CLASSIFICATION	0.9999963145940621	WITHOUT_CLASSIFICATION	3.68540593787537E-6	DEFECT
// Directory size never selected for	WITHOUT_CLASSIFICATION	0.9999994170823866	WITHOUT_CLASSIFICATION	5.829176134148713E-7	DEFECT
/* You wish! */	WITHOUT_CLASSIFICATION	0.9999120425445008	WITHOUT_CLASSIFICATION	8.795745549909691E-5	DEFECT
// check millis and only set it once.	WITHOUT_CLASSIFICATION	0.9999994685071558	WITHOUT_CLASSIFICATION	5.31492844236391E-7	DEFECT
// When str starts with a File.separator, pattern has to start with a // File.separator. // When pattern starts with a File.separator, str has to start with a // File.separator.	WITHOUT_CLASSIFICATION	0.9999966139095966	WITHOUT_CLASSIFICATION	3.386090403418983E-6	DEFECT
// up to first '**'	WITHOUT_CLASSIFICATION	0.9999998628619605	WITHOUT_CLASSIFICATION	1.371380394537525E-7	DEFECT
// up to first '**'	WITHOUT_CLASSIFICATION	0.9999998628619605	WITHOUT_CLASSIFICATION	1.371380394537525E-7	DEFECT
// String is exhausted	WITHOUT_CLASSIFICATION	0.9999992795010104	WITHOUT_CLASSIFICATION	7.204989897031043E-7	DEFECT
// String is exhausted	WITHOUT_CLASSIFICATION	0.9999992795010104	WITHOUT_CLASSIFICATION	7.204989897031043E-7	DEFECT
// String is exhausted	WITHOUT_CLASSIFICATION	0.9999992795010104	WITHOUT_CLASSIFICATION	7.204989897031043E-7	DEFECT
// String not exhausted, but pattern is. Failure.	WITHOUT_CLASSIFICATION	0.9998099587239572	WITHOUT_CLASSIFICATION	1.900412760427953E-4	DEFECT
// String not exhausted, but pattern is. Failure.	WITHOUT_CLASSIFICATION	0.9998099587239572	WITHOUT_CLASSIFICATION	1.900412760427953E-4	DEFECT
// up to last '**'	WITHOUT_CLASSIFICATION	0.9999993848598648	WITHOUT_CLASSIFICATION	6.151401351384369E-7	DEFECT
// '**/**' situation, so skip one	WITHOUT_CLASSIFICATION	0.9999999914036196	WITHOUT_CLASSIFICATION	8.596380499737703E-9	DEFECT
// No '*'s, so we make a shortcut	WITHOUT_CLASSIFICATION	0.99999987761938	WITHOUT_CLASSIFICATION	1.2238061993042555E-7	DEFECT
// Pattern and string do not have the same size	WITHOUT_CLASSIFICATION	0.9999966143514	WITHOUT_CLASSIFICATION	3.385648599906873E-6	DEFECT
// Character mismatch	WITHOUT_CLASSIFICATION	0.9999999739446692	WITHOUT_CLASSIFICATION	2.6055330900331486E-8	DEFECT
// Character mismatch	WITHOUT_CLASSIFICATION	0.9999999739446692	WITHOUT_CLASSIFICATION	2.6055330900331486E-8	DEFECT
// String matches against pattern	WITHOUT_CLASSIFICATION	0.9999998572521193	WITHOUT_CLASSIFICATION	1.427478807583172E-7	DEFECT
// throw BuildException on error	WITHOUT_CLASSIFICATION	0.9981977862190483	WITHOUT_CLASSIFICATION	0.001802213780951691	DEFECT
// Character mismatch	WITHOUT_CLASSIFICATION	0.9999999739446692	WITHOUT_CLASSIFICATION	2.6055330900331486E-8	DEFECT
// Find the pattern between padIdxStart & padIdxTmp in str between // strIdxStart & strIdxEnd	WITHOUT_CLASSIFICATION	0.9999999374857039	WITHOUT_CLASSIFICATION	6.251429603869513E-8	DEFECT
// Find the pattern between padIdxStart & padIdxTmp in str between // strIdxStart & strIdxEnd	WITHOUT_CLASSIFICATION	0.9999999374857039	WITHOUT_CLASSIFICATION	6.251429603869513E-8	DEFECT
// Character mismatch	WITHOUT_CLASSIFICATION	0.9999999739446692	WITHOUT_CLASSIFICATION	2.6055330900331486E-8	DEFECT
// Character mismatch	WITHOUT_CLASSIFICATION	0.9999999739446692	WITHOUT_CLASSIFICATION	2.6055330900331486E-8	DEFECT
// Character mismatch	WITHOUT_CLASSIFICATION	0.9999999739446692	WITHOUT_CLASSIFICATION	2.6055330900331486E-8	DEFECT
// Pattern contains only '*', which matches anything	WITHOUT_CLASSIFICATION	0.9999938571305521	WITHOUT_CLASSIFICATION	6.142869447826557E-6	DEFECT
// Process characters before first star	WITHOUT_CLASSIFICATION	0.9999999863882101	WITHOUT_CLASSIFICATION	1.3611789926030226E-8	DEFECT
// All characters in the string are used. Check if only '*'s are // left in the pattern. If so, we succeeded. Otherwise failure.	WITHOUT_CLASSIFICATION	0.99999991299771	WITHOUT_CLASSIFICATION	8.700228999127956E-8	DEFECT
// All characters in the string are used. Check if only '*'s are // left in the pattern. If so, we succeeded. Otherwise failure.	WITHOUT_CLASSIFICATION	0.99999991299771	WITHOUT_CLASSIFICATION	8.700228999127956E-8	DEFECT
// Process characters after last star	WITHOUT_CLASSIFICATION	0.9999999740248475	WITHOUT_CLASSIFICATION	2.5975152419011147E-8	DEFECT
// process pattern between stars. padIdxStart and patIdxEnd point // always to a '*'.	WITHOUT_CLASSIFICATION	0.999998285973457	WITHOUT_CLASSIFICATION	1.7140265429929777E-6	DEFECT
// Two stars next to each other, skip the first one.	WITHOUT_CLASSIFICATION	0.999995891522817	WITHOUT_CLASSIFICATION	4.108477182977484E-6	DEFECT
// All characters in the string are used. Check if only '*'s are left // in the pattern. If so, we succeeded. Otherwise failure.	WITHOUT_CLASSIFICATION	0.9999999892273543	WITHOUT_CLASSIFICATION	1.0772645671498247E-8	DEFECT
/*++*/	WITHOUT_CLASSIFICATION	0.9996395487456337	WITHOUT_CLASSIFICATION	3.6045125436634794E-4	DEFECT
// Creation is done here rather than in isSelected() because some // containers may do a validation pass before running isSelected(), // but we need to check for the existence of the created class.	WITHOUT_CLASSIFICATION	0.9999986003320057	WITHOUT_CLASSIFICATION	1.3996679942081027E-6	DEFECT
// We know that dynselector must be non-null if no error message	WITHOUT_CLASSIFICATION	0.9999998436702227	WITHOUT_CLASSIFICATION	1.563297773430651E-7	DEFECT
// Deal with if and unless properties first	WITHOUT_CLASSIFICATION	0.9999996332983926	WITHOUT_CLASSIFICATION	3.667016074011911E-7	DEFECT
// -----  attributes  -----	WITHOUT_CLASSIFICATION	0.9999995538367938	WITHOUT_CLASSIFICATION	4.461632061220516E-7	DEFECT
// ----- internal member variables -----	WITHOUT_CLASSIFICATION	0.9999989612455851	WITHOUT_CLASSIFICATION	1.038754414975742E-6	DEFECT
// -----  constructors  -----	WITHOUT_CLASSIFICATION	0.9999997171984701	WITHOUT_CLASSIFICATION	2.8280152977460825E-7	DEFECT
// ----- configuration  -----	WITHOUT_CLASSIFICATION	0.9999978655027799	WITHOUT_CLASSIFICATION	2.1344972200921438E-6	DEFECT
// normal use inside Ant	WITHOUT_CLASSIFICATION	0.9999999007032068	WITHOUT_CLASSIFICATION	9.929679324144007E-8	DEFECT
// set self as a BuildListener to delay cachefile saves	WITHOUT_CLASSIFICATION	0.999999820521478	WITHOUT_CLASSIFICATION	1.7947852203739865E-7	DEFECT
// no reference to project - e.g. during normal JUnit tests	WITHOUT_CLASSIFICATION	0.9999999271037058	WITHOUT_CLASSIFICATION	7.289629423789542E-8	DEFECT
// this is a *.* parameter for later use	WITHOUT_CLASSIFICATION	0.9999845182949797	WITHOUT_CLASSIFICATION	1.5481705020324577E-5	DEFECT
// specify the algorithm classname	WITHOUT_CLASSIFICATION	0.9999942173654509	WITHOUT_CLASSIFICATION	5.782634549037809E-6	DEFECT
// use Algorithm defined via name	WITHOUT_CLASSIFICATION	0.9999996948029652	WITHOUT_CLASSIFICATION	3.0519703467877345E-7	DEFECT
// use Algorithm specified by classname	WITHOUT_CLASSIFICATION	0.9999990625213142	WITHOUT_CLASSIFICATION	9.374786857561869E-7	DEFECT
// nothing specified - use default	WITHOUT_CLASSIFICATION	0.9999999979453219	WITHOUT_CLASSIFICATION	2.0546781331280876E-9	DEFECT
// else nothing to do	WITHOUT_CLASSIFICATION	0.9999994882437692	WITHOUT_CLASSIFICATION	5.117562308642047E-7	DEFECT
// use Algorithm defined via name	WITHOUT_CLASSIFICATION	0.9999996948029652	WITHOUT_CLASSIFICATION	3.0519703467877345E-7	DEFECT
// // -----  Set the main attributes, pattern '*'  ----- //	WITHOUT_CLASSIFICATION	0.9999997901965343	WITHOUT_CLASSIFICATION	2.0980346563468267E-7	DEFECT
// use Algorithm specified by classname	WITHOUT_CLASSIFICATION	0.9999990625213142	WITHOUT_CLASSIFICATION	9.374786857561869E-7	DEFECT
// nothing specified - use default	WITHOUT_CLASSIFICATION	0.9999999979453219	WITHOUT_CLASSIFICATION	2.0546781331280876E-9	DEFECT
// specify the cache classname	WITHOUT_CLASSIFICATION	0.999999882499509	WITHOUT_CLASSIFICATION	1.1750049097787335E-7	DEFECT
// use Cache defined via name	WITHOUT_CLASSIFICATION	0.9999999966847669	WITHOUT_CLASSIFICATION	3.3152329522640314E-9	DEFECT
// use Cache specified by classname	WITHOUT_CLASSIFICATION	0.9999999064371974	WITHOUT_CLASSIFICATION	9.356280253669703E-8	DEFECT
// specify the comparator classname	WITHOUT_CLASSIFICATION	0.9999995655278653	WITHOUT_CLASSIFICATION	4.3447213468510927E-7	DEFECT
// // -----  Set the special attributes, pattern '*.*'  ----- //	WITHOUT_CLASSIFICATION	0.9999998073932218	WITHOUT_CLASSIFICATION	1.9260677819389403E-7	DEFECT
// load the specified class	WITHOUT_CLASSIFICATION	0.9999995639625135	WITHOUT_CLASSIFICATION	4.360374864983686E-7	DEFECT
// -----  the selection work  -----	WITHOUT_CLASSIFICATION	0.9972406214529046	WITHOUT_CLASSIFICATION	0.0027593785470954343	DEFECT
// We have a 'resourced' file, so reconvert it and use // the 'old' implementation.	WITHOUT_CLASSIFICATION	0.9999966541107316	WITHOUT_CLASSIFICATION	3.345889268452294E-6	DEFECT
// You can not compute a value for a directory	WITHOUT_CLASSIFICATION	0.9999747987676824	WITHOUT_CLASSIFICATION	2.5201232317625225E-5	DEFECT
// Get the values and do the comparison	WITHOUT_CLASSIFICATION	0.99999926989115	WITHOUT_CLASSIFICATION	7.301088500447703E-7	DEFECT
// Maybe update the cache	WITHOUT_CLASSIFICATION	0.9999997227510465	WITHOUT_CLASSIFICATION	2.772489533850165E-7	DEFECT
// -----  attribute and nested element support  -----	WITHOUT_CLASSIFICATION	0.9999919063702823	WITHOUT_CLASSIFICATION	8.093629717609253E-6	DEFECT
// the usual classloader	WITHOUT_CLASSIFICATION	0.999997709379263	WITHOUT_CLASSIFICATION	2.290620736947876E-6	DEFECT
// additional use the provided classpath	WITHOUT_CLASSIFICATION	0.9999951479728552	WITHOUT_CLASSIFICATION	4.852027144817034E-6	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9999927879202822	WITHOUT_CLASSIFICATION	7.2120797177645234E-6	DEFECT
// ----- 'beautiful' output -----	WITHOUT_CLASSIFICATION	0.9999968040324315	WITHOUT_CLASSIFICATION	3.195967568571104E-6	DEFECT
// ----- BuildListener interface methods -----	WITHOUT_CLASSIFICATION	0.9999994250843656	WITHOUT_CLASSIFICATION	5.749156344932862E-7	DEFECT
// The EnumeratedAttributes for the three interface implementations. // Name-Classname mapping is done in the configure() method.	WITHOUT_CLASSIFICATION	0.9999875358981583	WITHOUT_CLASSIFICATION	1.2464101841658783E-5	DEFECT
// -----  member variables  -----	WITHOUT_CLASSIFICATION	0.99999796812466	WITHOUT_CLASSIFICATION	2.0318753400482435E-6	DEFECT
// -----  member variables  -----	WITHOUT_CLASSIFICATION	0.99999796812466	WITHOUT_CLASSIFICATION	2.0318753400482435E-6	DEFECT
// -----  Algorithm-Configuration  -----	WITHOUT_CLASSIFICATION	0.9999735862730253	WITHOUT_CLASSIFICATION	2.6413726974624124E-5	DEFECT
// -----  Algorithm-Configuration  -----	WITHOUT_CLASSIFICATION	0.9999735862730253	WITHOUT_CLASSIFICATION	2.6413726974624124E-5	DEFECT
// -----  Logic  -----	WITHOUT_CLASSIFICATION	0.999995356250324	WITHOUT_CLASSIFICATION	4.64374967604738E-6	DEFECT
// -----  Logic  -----	WITHOUT_CLASSIFICATION	0.999995356250324	WITHOUT_CLASSIFICATION	4.64374967604738E-6	DEFECT
// implementation adapted from ...taskdefs.Checksum, thanks to Magesh for hint	WITHOUT_CLASSIFICATION	0.9999984218915454	WITHOUT_CLASSIFICATION	1.578108454474283E-6	DEFECT
// Read the file	WITHOUT_CLASSIFICATION	0.9999956738056072	WITHOUT_CLASSIFICATION	4.326194392827214E-6	DEFECT
// -----  member variables - configuration  -----	WITHOUT_CLASSIFICATION	0.9999992348538378	WITHOUT_CLASSIFICATION	7.651461621328831E-7	DEFECT
// -----  member variables - internal use  -----	WITHOUT_CLASSIFICATION	0.9999993806973168	WITHOUT_CLASSIFICATION	6.193026833122856E-7	DEFECT
// -----  Constructors  -----	WITHOUT_CLASSIFICATION	0.9999997194289479	WITHOUT_CLASSIFICATION	2.805710520884054E-7	DEFECT
// -----  Cache-Configuration  -----	WITHOUT_CLASSIFICATION	0.9999969324617337	WITHOUT_CLASSIFICATION	3.0675382662506912E-6	DEFECT
// -----  Data Access	WITHOUT_CLASSIFICATION	0.9999982853461467	WITHOUT_CLASSIFICATION	1.714653853298193E-6	DEFECT
// after loading the cache is up to date with the file	WITHOUT_CLASSIFICATION	0.999999786538447	WITHOUT_CLASSIFICATION	2.13461552903194E-7	DEFECT
// -----  additional  -----	WITHOUT_CLASSIFICATION	0.9999644827618737	WITHOUT_CLASSIFICATION	3.5517238126318386E-5	DEFECT
// swallow as this simply doesn't seem to be Kaffe	WITHOUT_CLASSIFICATION	0.9998866685864246	WITHOUT_CLASSIFICATION	1.1333141357534322E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999554955215	WITHOUT_CLASSIFICATION	4.4504478498603726E-7	DEFECT
// find the line breaks and pass other chars through in blocks	WITHOUT_CLASSIFICATION	0.9999759059477036	WITHOUT_CLASSIFICATION	2.4094052296375743E-5	DEFECT
// either end of buffer or a line separator char	WITHOUT_CLASSIFICATION	0.9999998537641362	WITHOUT_CLASSIFICATION	1.4623586382658668E-7	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.999993225734014	WITHOUT_CLASSIFICATION	6.774265985996825E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999998068383374	WITHOUT_CLASSIFICATION	1.9316166246942935E-7	DEFECT
// Because the content is only read the file will not be damaged. I tested // with JPG, ZIP and PDF as binary files.	WITHOUT_CLASSIFICATION	0.9999977943100087	WITHOUT_CLASSIFICATION	2.2056899914344683E-6	DEFECT
// don't need the opposite check as the Dictionaries have the // same size, so we've also covered all keys of d2 already.	WITHOUT_CLASSIFICATION	0.9999999902187984	WITHOUT_CLASSIFICATION	9.781201625261073E-9	DEFECT
//log uptodateness of all targets:	WITHOUT_CLASSIFICATION	0.9999999422996663	WITHOUT_CLASSIFICATION	5.770033375731109E-8	DEFECT
// CheckStyle:ParameterNumberCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9999998161034296	WITHOUT_CLASSIFICATION	1.8389657041173562E-7	DEFECT
// this should not happen, because the lines are // returned with the end of line delimiter	WITHOUT_CLASSIFICATION	0.999790451832011	WITHOUT_CLASSIFICATION	2.095481679891504E-4	DEFECT
// CheckStyle:ParameterNumberCheck ON	WITHOUT_CLASSIFICATION	0.9999999033220254	WITHOUT_CLASSIFICATION	9.667797465896262E-8	DEFECT
// two not existing files are equal	WITHOUT_CLASSIFICATION	0.9999844602598359	WITHOUT_CLASSIFICATION	1.553974016407394E-5	DEFECT
// should the following two be switched?  If r1 and r2 refer to the same file, // isn't their content equal regardless of whether that file is a directory?	WITHOUT_CLASSIFICATION	0.9999999746862253	WITHOUT_CLASSIFICATION	2.5313774702917714E-8	DEFECT
// don't want to compare directory contents for now	WITHOUT_CLASSIFICATION	0.9994304269698934	WITHOUT_CLASSIFICATION	5.695730301066137E-4	DEFECT
//as far as we know	WITHOUT_CLASSIFICATION	0.9999968601930953	WITHOUT_CLASSIFICATION	3.1398069045666693E-6	DEFECT
//ignore release of an already-closed funnel	WITHOUT_CLASSIFICATION	0.9999999962001708	WITHOUT_CLASSIFICATION	3.799829324254329E-9	DEFECT
// Write child elements and text	WITHOUT_CLASSIFICATION	0.9999993085676697	WITHOUT_CLASSIFICATION	6.914323303390464E-7	DEFECT
// Write indent characters	WITHOUT_CLASSIFICATION	0.9999999690683633	WITHOUT_CLASSIFICATION	3.09316367138078E-8	DEFECT
// Write element	WITHOUT_CLASSIFICATION	0.9999961670310926	WITHOUT_CLASSIFICATION	3.832968907398824E-6	DEFECT
// steal default namespace	WITHOUT_CLASSIFICATION	0.9999999915949702	WITHOUT_CLASSIFICATION	8.405029781244423E-9	DEFECT
// Write attributes	WITHOUT_CLASSIFICATION	0.9999996668651395	WITHOUT_CLASSIFICATION	3.3313486043996397E-7	DEFECT
// Write element close	WITHOUT_CLASSIFICATION	0.9999999590630305	WITHOUT_CLASSIFICATION	4.093696952041464E-8	DEFECT
// relative path	WITHOUT_CLASSIFICATION	0.999999577934718	WITHOUT_CLASSIFICATION	4.2206528187632335E-7	DEFECT
// Fall tru	WITHOUT_CLASSIFICATION	0.9999974474633191	WITHOUT_CLASSIFICATION	2.5525366808358045E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999998068383374	WITHOUT_CLASSIFICATION	1.9316166246942935E-7	DEFECT
// Determine the Java version by looking at available classes // java.net.Proxy was introduced in JDK 1.5 // java.lang.CharSequence was introduced in JDK 1.4 // java.lang.StrictMath was introduced in JDK 1.3 // java.lang.ThreadLocal was introduced in JDK 1.2 // java.lang.Void was introduced in JDK 1.1 // Count up version until a NoClassDefFoundError ends the try	WITHOUT_CLASSIFICATION	0.9999999855391016	WITHOUT_CLASSIFICATION	1.4460898365247775E-8	DEFECT
// swallow as we've hit the max class version that // we have	WITHOUT_CLASSIFICATION	0.9999969900447002	WITHOUT_CLASSIFICATION	3.009955299705931E-6	DEFECT
// Extrapolating from: // "NetWare may have a "java" in that directory, but 99% of // the time, you don't want to execute it" -- Jeff Tulley // <JTULLEY@novell.com>	WITHOUT_CLASSIFICATION	0.9849094292241447	WITHOUT_CLASSIFICATION	0.015090570775855376	DEFECT
// On IBM's JDK 1.2 the directory layout is different, 1.3 follows // Sun's layout.	WITHOUT_CLASSIFICATION	0.9996390379334016	WITHOUT_CLASSIFICATION	3.6096206659836787E-4	DEFECT
// On IBM's JDK 1.2 the directory layout is different, 1.3 follows // Sun's layout.	WITHOUT_CLASSIFICATION	0.9996390379334016	WITHOUT_CLASSIFICATION	3.6096206659836787E-4	DEFECT
// Unfortunately on Windows java.home doesn't always refer // to the correct location, so we need to fall back to // assuming java is somewhere on the PATH.	WITHOUT_CLASSIFICATION	0.9966490370930028	WITHOUT_CLASSIFICATION	0.003350962906997251	DEFECT
// fall back to JRE bin directory, also catches JDK 1.0 and 1.1 // where java.home points to the root of the JDK and Mac OS X where // the whole directory layout is different from Sun's	WITHOUT_CLASSIFICATION	0.999974659567855	WITHOUT_CLASSIFICATION	2.534043214503931E-5	DEFECT
// This is the most common extension case - exe for windows and OS/2, // nothing for *nix.	WITHOUT_CLASSIFICATION	0.9997583719928114	WITHOUT_CLASSIFICATION	2.4162800718865296E-4	DEFECT
//In Java1.5, the apache stuff moved.	WITHOUT_CLASSIFICATION	0.999997603750983	WITHOUT_CLASSIFICATION	2.3962490170421194E-6	DEFECT
//fall through.	WITHOUT_CLASSIFICATION	0.9999526283366031	WITHOUT_CLASSIFICATION	4.737166339693273E-5	DEFECT
// fall through	WITHOUT_CLASSIFICATION	0.9999803114519927	WITHOUT_CLASSIFICATION	1.9688548007316702E-5	DEFECT
// fall through	WITHOUT_CLASSIFICATION	0.9999803114519927	WITHOUT_CLASSIFICATION	1.9688548007316702E-5	DEFECT
// fall through	WITHOUT_CLASSIFICATION	0.9999803114519927	WITHOUT_CLASSIFICATION	1.9688548007316702E-5	DEFECT
// are there any here that we forgot? // fall through	WITHOUT_CLASSIFICATION	0.9999816053181729	WITHOUT_CLASSIFICATION	1.8394681827067395E-5	DEFECT
//things like sun.reflection, sun.misc, sun.net	WITHOUT_CLASSIFICATION	0.999990289875333	WITHOUT_CLASSIFICATION	9.710124667101995E-6	DEFECT
//things like sun.reflection, sun.misc, sun.net	WITHOUT_CLASSIFICATION	0.999990289875333	WITHOUT_CLASSIFICATION	9.710124667101995E-6	DEFECT
//Strip '.' token	WITHOUT_CLASSIFICATION	0.999951211208057	WITHOUT_CLASSIFICATION	4.878879194313875E-5	DEFECT
//If it ended in a dot, throw an exception	WITHOUT_CLASSIFICATION	0.9990917521169382	WITHOUT_CLASSIFICATION	9.082478830617686E-4	DEFECT
// Exact match	WITHOUT_CLASSIFICATION	0.9999962785280011	WITHOUT_CLASSIFICATION	3.7214719989068853E-6	DEFECT
// Exact match	WITHOUT_CLASSIFICATION	0.9999962785280011	WITHOUT_CLASSIFICATION	3.7214719989068853E-6	DEFECT
// Exact match	WITHOUT_CLASSIFICATION	0.9999962785280011	WITHOUT_CLASSIFICATION	3.7214719989068853E-6	DEFECT
// might read too much	WITHOUT_CLASSIFICATION	0.9999964402252535	WITHOUT_CLASSIFICATION	3.5597747466414973E-6	DEFECT
// would be imprecise	WITHOUT_CLASSIFICATION	0.9999905570816513	WITHOUT_CLASSIFICATION	9.442918348655327E-6	DEFECT
//last character isn't a digit	WITHOUT_CLASSIFICATION	0.9999997220432233	WITHOUT_CLASSIFICATION	2.779567767425408E-7	DEFECT
// write out the number of characters encoded in this line.	WITHOUT_CLASSIFICATION	0.9999996360917148	WITHOUT_CLASSIFICATION	3.639082852310235E-7	DEFECT
// set the padding defaults	WITHOUT_CLASSIFICATION	0.9999998728764397	WITHOUT_CLASSIFICATION	1.2712356033828282E-7	DEFECT
// get the next 3 bytes (if we have them)	WITHOUT_CLASSIFICATION	0.999997388210595	WITHOUT_CLASSIFICATION	2.611789404969059E-6	DEFECT
// OK, Java 1.3.	WITHOUT_CLASSIFICATION	0.9999993733638832	WITHOUT_CLASSIFICATION	6.266361167101282E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999554955215	WITHOUT_CLASSIFICATION	4.4504478498603726E-7	DEFECT
// CheckStyle:ConstantNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9999993818836707	WITHOUT_CLASSIFICATION	6.181163293333136E-7	DEFECT
// CheckStyle:ConstantNameCheck ON	WITHOUT_CLASSIFICATION	0.9999995939757826	WITHOUT_CLASSIFICATION	4.0602421725288897E-7	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.999993225734014	WITHOUT_CLASSIFICATION	6.774265985996825E-6	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.999993225734014	WITHOUT_CLASSIFICATION	6.774265985996825E-6	DEFECT
// #8031: first try Java 1.4.	WITHOUT_CLASSIFICATION	0.9999990868025039	WITHOUT_CLASSIFICATION	9.131974960330871E-7	DEFECT
// Reflection problems? Should not happen, debug.	WITHOUT_CLASSIFICATION	0.9926452205847156	WITHOUT_CLASSIFICATION	0.007354779415284474	DEFECT
// CheckStyle:ParameterNumberCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9999998161034296	WITHOUT_CLASSIFICATION	1.8389657041173562E-7	DEFECT
// CheckStyle:ParameterNumberCheck ON	WITHOUT_CLASSIFICATION	0.9999999033220254	WITHOUT_CLASSIFICATION	9.667797465896262E-8	DEFECT
// depending on the implementation the actual RE won't // get instantiated in the constructor.	WITHOUT_CLASSIFICATION	0.9999718362772133	WITHOUT_CLASSIFICATION	2.8163722786682557E-5	DEFECT
// terminate with a linefeed alone	WITHOUT_CLASSIFICATION	0.9999960322622423	WITHOUT_CLASSIFICATION	3.967737757731753E-6	DEFECT
// NotReached	WITHOUT_CLASSIFICATION	0.999999188629573	WITHOUT_CLASSIFICATION	8.113704269908293E-7	DEFECT
//  0 to  7 //  8 to 15 // 16 to 23 // 24 to 31 // 32 to 39 // 40 to 47 // 48 to 55 // 56 to 63	WITHOUT_CLASSIFICATION	0.999883218539939	WITHOUT_CLASSIFICATION	1.167814600609668E-4	DEFECT
// store the octets	WITHOUT_CLASSIFICATION	0.9999998477746408	WITHOUT_CLASSIFICATION	1.5222535924628217E-7	DEFECT
// store the octets	WITHOUT_CLASSIFICATION	0.9999998477746408	WITHOUT_CLASSIFICATION	1.5222535924628217E-7	DEFECT
// store the octets	WITHOUT_CLASSIFICATION	0.9999998477746408	WITHOUT_CLASSIFICATION	1.5222535924628217E-7	DEFECT
// padding	WITHOUT_CLASSIFICATION	0.9999809369076816	WITHOUT_CLASSIFICATION	1.9063092318327886E-5	DEFECT
// padding	WITHOUT_CLASSIFICATION	0.9999809369076816	WITHOUT_CLASSIFICATION	1.9063092318327886E-5	DEFECT
// magic property	WITHOUT_CLASSIFICATION	0.9999968242160219	WITHOUT_CLASSIFICATION	3.1757839780565092E-6	DEFECT
//only text nodes that are non null after property expansion are added	WITHOUT_CLASSIFICATION	0.9999941246545154	WITHOUT_CLASSIFICATION	5.8753454846619805E-6	DEFECT
//no need to synchronize, as Vector is always synchronized	WITHOUT_CLASSIFICATION	0.9999861412507097	WITHOUT_CLASSIFICATION	1.3858749290245223E-5	DEFECT
// do not close the stream	WITHOUT_CLASSIFICATION	0.9999998820224805	WITHOUT_CLASSIFICATION	1.1797751956916184E-7	DEFECT
//Empty	WITHOUT_CLASSIFICATION	0.999915189564552	WITHOUT_CLASSIFICATION	8.481043544796546E-5	DEFECT
//Empty	WITHOUT_CLASSIFICATION	0.999915189564552	WITHOUT_CLASSIFICATION	8.481043544796546E-5	DEFECT
//get some non-crypto-grade randomness from various places.	WITHOUT_CLASSIFICATION	0.9999999502434574	WITHOUT_CLASSIFICATION	4.9756542499223E-8	DEFECT
// Cannot resolve it, so skip it.	WITHOUT_CLASSIFICATION	0.9999979571436803	WITHOUT_CLASSIFICATION	2.0428563196412272E-6	DEFECT
// plain component	WITHOUT_CLASSIFICATION	0.999999422608829	WITHOUT_CLASSIFICATION	5.773911710572916E-7	DEFECT
// make sure we are dealing with an absolute path	WITHOUT_CLASSIFICATION	0.999999865342741	WITHOUT_CLASSIFICATION	1.3465725909330367E-7	DEFECT
//remove the initial separator; the root has it.	WITHOUT_CLASSIFICATION	0.9999989851076807	WITHOUT_CLASSIFICATION	1.0148923193320742E-6	DEFECT
// UNC drive	WITHOUT_CLASSIFICATION	0.9999985997860761	WITHOUT_CLASSIFICATION	1.4002139238465634E-6	DEFECT
// format: "DEVICE:[DIR.SUBDIR]FILE"	WITHOUT_CLASSIFICATION	0.9999552314677608	WITHOUT_CLASSIFICATION	4.476853223919204E-5	DEFECT
// treat directories specified using .DIR syntax as files	WITHOUT_CLASSIFICATION	0.9999996589983239	WITHOUT_CLASSIFICATION	3.4100167612017326E-7	DEFECT
// add an extra slash for filesystems with drive-specifiers	WITHOUT_CLASSIFICATION	0.9999987461279517	WITHOUT_CLASSIFICATION	1.25387204834737E-6	DEFECT
//do a check for the destination file existing	WITHOUT_CLASSIFICATION	0.9999999733088045	WITHOUT_CLASSIFICATION	2.669119555871327E-8	DEFECT
// execute the script	WITHOUT_CLASSIFICATION	0.9999973810264778	WITHOUT_CLASSIFICATION	2.6189735222273793E-6	DEFECT
// do nothing by default	WITHOUT_CLASSIFICATION	0.999999891801228	WITHOUT_CLASSIFICATION	1.081987721439895E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999554955215	WITHOUT_CLASSIFICATION	4.4504478498603726E-7	DEFECT
// NotReached	WITHOUT_CLASSIFICATION	0.999999188629573	WITHOUT_CLASSIFICATION	8.113704269908293E-7	DEFECT
// now recover all the dependencies collected and add to the list.	WITHOUT_CLASSIFICATION	0.9999998058619598	WITHOUT_CLASSIFICATION	1.941380401037785E-7	DEFECT
//inherit doc	WITHOUT_CLASSIFICATION	0.9999893609052275	WITHOUT_CLASSIFICATION	1.063909477240248E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999998068383374	WITHOUT_CLASSIFICATION	1.9316166246942935E-7	DEFECT
// NotReached	WITHOUT_CLASSIFICATION	0.999999188629573	WITHOUT_CLASSIFICATION	8.113704269908293E-7	DEFECT
// do not close the stream	WITHOUT_CLASSIFICATION	0.9999998820224805	WITHOUT_CLASSIFICATION	1.1797751956916184E-7	DEFECT
// on cygwin, our current directory can be a UNC; // assume user.dir is absolute or all hell breaks loose...	WITHOUT_CLASSIFICATION	0.9996030669630923	WITHOUT_CLASSIFICATION	3.969330369076078E-4	DEFECT
// not before the filesystem root and not after it, since root // already contains one	WITHOUT_CLASSIFICATION	0.9999999471899272	WITHOUT_CLASSIFICATION	5.281007265740942E-8	DEFECT
// ensure that l ends with a / // so we never think /foo was a parent directory of /foobar	WITHOUT_CLASSIFICATION	0.9999971856608688	WITHOUT_CLASSIFICATION	2.8143391311408303E-6	DEFECT
// ensure that l ends with a / // so we never think /foo was a parent directory of /foobar	WITHOUT_CLASSIFICATION	0.9999971856608688	WITHOUT_CLASSIFICATION	2.8143391311408303E-6	DEFECT
// build the path stack info to compare	WITHOUT_CLASSIFICATION	0.9999871075608853	WITHOUT_CLASSIFICATION	1.2892439114818162E-5	DEFECT
// not the same device (would be "" on Linux/Unix)	WITHOUT_CLASSIFICATION	0.9999799571315979	WITHOUT_CLASSIFICATION	2.0042868402076728E-5	DEFECT
// no comparison possible	WITHOUT_CLASSIFICATION	0.9999996284520736	WITHOUT_CLASSIFICATION	3.7154792641888327E-7	DEFECT
// get index of parts which are equal	WITHOUT_CLASSIFICATION	0.9999909313688747	WITHOUT_CLASSIFICATION	9.068631125347196E-6	DEFECT
// if "from" part is longer, fill it up with ".." // to reach path which is equal to both paths	WITHOUT_CLASSIFICATION	0.9999999217457723	WITHOUT_CLASSIFICATION	7.825422762710836E-8	DEFECT
// fill it up path with parts which were not equal	WITHOUT_CLASSIFICATION	0.9999992264072967	WITHOUT_CLASSIFICATION	7.735927033044943E-7	DEFECT
// can safely use '/' because Windows understands '/' as separator	WITHOUT_CLASSIFICATION	0.9999956966027259	WITHOUT_CLASSIFICATION	4.303397274090261E-6	DEFECT
// base directory of the fileset	WITHOUT_CLASSIFICATION	0.9999998845895468	WITHOUT_CLASSIFICATION	1.1541045313226418E-7	DEFECT
// build the list of sources which are out of date with // respect to the target	WITHOUT_CLASSIFICATION	0.9999999914084019	WITHOUT_CLASSIFICATION	8.591598119577472E-9	DEFECT
// code from Magesh moved from DefaultLogger and slightly modified	WITHOUT_CLASSIFICATION	0.9999983225691278	WITHOUT_CLASSIFICATION	1.6774308722718982E-6	DEFECT
//if you cannot read it, you won't be able to write it either	WITHOUT_CLASSIFICATION	0.9994506763653356	WITHOUT_CLASSIFICATION	5.493236346644529E-4	DEFECT
// must be a zip of some sort	WITHOUT_CLASSIFICATION	0.9999999876354386	WITHOUT_CLASSIFICATION	1.2364561422773628E-8	DEFECT
// does the class have a package structure	WITHOUT_CLASSIFICATION	0.9999973971354749	WITHOUT_CLASSIFICATION	2.602864525196752E-6	DEFECT
// check if the package structure is more than 1 level deep	WITHOUT_CLASSIFICATION	0.9999999970870878	WITHOUT_CLASSIFICATION	2.912912353782617E-9	DEFECT
// class name has more than 1 package level 'com.company.Class'	WITHOUT_CLASSIFICATION	0.9999970574750949	WITHOUT_CLASSIFICATION	2.9425249051001415E-6	DEFECT
// class name has only 1 package level 'package.Class'	WITHOUT_CLASSIFICATION	0.9999975529975653	WITHOUT_CLASSIFICATION	2.447002434585026E-6	DEFECT
// Add the class in dotted notation 'com.company.Class'	WITHOUT_CLASSIFICATION	0.9999210317696585	WITHOUT_CLASSIFICATION	7.896823034144047E-5	DEFECT
// Add a class with no package 'Class'	WITHOUT_CLASSIFICATION	0.9999988581918694	WITHOUT_CLASSIFICATION	1.1418081306270933E-6	DEFECT
// force BCEL classes to load now	WITHOUT_CLASSIFICATION	0.9999971482737412	WITHOUT_CLASSIFICATION	2.851726258780324E-6	DEFECT
// force BCEL classes to load now	WITHOUT_CLASSIFICATION	0.9999971482737412	WITHOUT_CLASSIFICATION	2.851726258780324E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999554955215	WITHOUT_CLASSIFICATION	4.4504478498603726E-7	DEFECT
// NotReached	WITHOUT_CLASSIFICATION	0.999999188629573	WITHOUT_CLASSIFICATION	8.113704269908293E-7	DEFECT
// we get the root classes and build up a set of // classes upon which they depend	WITHOUT_CLASSIFICATION	0.999996015968741	WITHOUT_CLASSIFICATION	3.984031258957986E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999998068383374	WITHOUT_CLASSIFICATION	1.9316166246942935E-7	DEFECT
// execute the script	WITHOUT_CLASSIFICATION	0.9999973810264778	WITHOUT_CLASSIFICATION	2.6189735222273793E-6	DEFECT
//log security exceptions and continue; it aint that //important and may be quite common running Ant embedded.	WITHOUT_CLASSIFICATION	0.9999905852166878	WITHOUT_CLASSIFICATION	9.414783312158795E-6	DEFECT
// we look through the classpath elements. If the element is a dir // we look for the file. IF it is a zip, we look for the zip entry	WITHOUT_CLASSIFICATION	0.9999990336856085	WITHOUT_CLASSIFICATION	9.663143914672003E-7	DEFECT
// we look through the source path elements. If the element is a dir // we look for the file. If it is a zip, we look for the zip entry. // This isn't normal for source paths but we get it for free	WITHOUT_CLASSIFICATION	0.9999943597483987	WITHOUT_CLASSIFICATION	5.640251601277654E-6	DEFECT
// first letter of the previous segment of the class name 'Class' // is upper case ascii. so according to the spec it's an inner class	WITHOUT_CLASSIFICATION	0.9999999427121588	WITHOUT_CLASSIFICATION	5.7287841243577746E-8	DEFECT
// Register Groovy ourselves, since BSF did not // natively support it in versions previous to 1.2.4.	WITHOUT_CLASSIFICATION	0.9992934523818229	WITHOUT_CLASSIFICATION	7.065476181770876E-4	DEFECT
// execute the script	WITHOUT_CLASSIFICATION	0.9999973810264778	WITHOUT_CLASSIFICATION	2.6189735222273793E-6	DEFECT
// translate \1 to $1 so that the Perl5Substitution will work	WITHOUT_CLASSIFICATION	0.9999290451654429	WITHOUT_CLASSIFICATION	7.09548345571317E-5	DEFECT
// BSF uses a hashtable to store values // so cannot declareBean with a null value // So need to remove any bean of this name as // that bean should not be visible	WITHOUT_CLASSIFICATION	0.9989387501475772	WITHOUT_CLASSIFICATION	0.0010612498524228131	DEFECT
// no permission here	WITHOUT_CLASSIFICATION	0.999976143764569	WITHOUT_CLASSIFICATION	2.3856235430981486E-5	DEFECT
// compute the compiler options based on the input options first	WITHOUT_CLASSIFICATION	0.9999994562667501	WITHOUT_CLASSIFICATION	5.437332499380424E-7	DEFECT
// treat non-matching groups as empty matches	WITHOUT_CLASSIFICATION	0.9999996006561385	WITHOUT_CLASSIFICATION	3.993438614590277E-7	DEFECT
// be strict about line separator	WITHOUT_CLASSIFICATION	0.9999999750773928	WITHOUT_CLASSIFICATION	2.4922607241530586E-8	DEFECT
// translate \1 to $(1) so that the Matcher will work	WITHOUT_CLASSIFICATION	0.9999186677860132	WITHOUT_CLASSIFICATION	8.133221398672416E-5	DEFECT
// Do the substitution	WITHOUT_CLASSIFICATION	0.9999998094629596	WITHOUT_CLASSIFICATION	1.9053704028798307E-7	DEFECT
// replace \1 with the corresponding group	WITHOUT_CLASSIFICATION	0.9998088351002704	WITHOUT_CLASSIFICATION	1.9116489972950971E-4	DEFECT
/*     * Used when sorting.  If too many long comparisons     * happen, we stop sorting, randomise the block     * slightly, and try again.     */	WITHOUT_CLASSIFICATION	0.9999973559945192	WITHOUT_CLASSIFICATION	2.644005480772907E-6	DEFECT
/*          Nodes and heap entries run from 1.  Entry 0          for both the heap and nodes is a sentinel.        */	WITHOUT_CLASSIFICATION	0.9999978356191481	WITHOUT_CLASSIFICATION	2.1643808518601743E-6	DEFECT
/*          Nodes and heap entries run from 1.  Entry 0          for both the heap and nodes is a sentinel.        */	WITHOUT_CLASSIFICATION	0.9999978356191481	WITHOUT_CLASSIFICATION	2.1643808518601743E-6	DEFECT
//        blockNo++;	WITHOUT_CLASSIFICATION	0.9999867186361832	WITHOUT_CLASSIFICATION	1.3281363816815357E-5	DEFECT
// // When we get here we have EITHER: // o An empty "assemble" buffer. // o No bytes to write (numToWrite == 0) //	WITHOUT_CLASSIFICATION	0.9999758249868678	WITHOUT_CLASSIFICATION	2.4175013132196832E-5	DEFECT
/* Write `magic' bytes h indicating file-format == huffmanised,           followed by a digit indicating blockSize100k.        */	WITHOUT_CLASSIFICATION	0.9999998401904173	WITHOUT_CLASSIFICATION	1.598095826884377E-7	DEFECT
//        ch = 0;	WITHOUT_CLASSIFICATION	0.9999958057344497	WITHOUT_CLASSIFICATION	4.194265550287168E-6	DEFECT
/* 20 is just a paranoia constant */	WITHOUT_CLASSIFICATION	0.9999964048227152	WITHOUT_CLASSIFICATION	3.595177284738921E-6	DEFECT
// empty block at end of file	WITHOUT_CLASSIFICATION	0.9999997871849159	WITHOUT_CLASSIFICATION	2.1281508416373372E-7	DEFECT
/* sort the block and establish posn of original string */	WITHOUT_CLASSIFICATION	0.9999992310477985	WITHOUT_CLASSIFICATION	7.68952201455238E-7	DEFECT
/* Now the block's CRC, so it is in a known place. */	WITHOUT_CLASSIFICATION	0.999999877299731	WITHOUT_CLASSIFICATION	1.2270026894231028E-7	DEFECT
/* Now a single bit indicating randomisation. */	WITHOUT_CLASSIFICATION	0.9997516890301867	WITHOUT_CLASSIFICATION	2.4831096981330156E-4	DEFECT
/* Finally, block's contents proper. */	WITHOUT_CLASSIFICATION	0.9999936274580427	WITHOUT_CLASSIFICATION	6.3725419573757676E-6	DEFECT
/*          Now another magic 48-bit number, 0x177245385090, to          indicate the end of the last block.  (sqrt(pi), if          you want to know.  I did want to use e, but it contains          too much repetition -- 27 18 28 18 28 46 -- for me          to feel statistically comfortable.  Call me paranoid.)        */	WITHOUT_CLASSIFICATION	0.9999757923467419	WITHOUT_CLASSIFICATION	2.4207653257968675E-5	DEFECT
// write 8-bit	WITHOUT_CLASSIFICATION	0.999997377993408	WITHOUT_CLASSIFICATION	2.622006591898858E-6	DEFECT
// write 8-bit	WITHOUT_CLASSIFICATION	0.999997377993408	WITHOUT_CLASSIFICATION	2.622006591898858E-6	DEFECT
// write 8-bit	WITHOUT_CLASSIFICATION	0.999997377993408	WITHOUT_CLASSIFICATION	2.622006591898858E-6	DEFECT
// write 8-bit	WITHOUT_CLASSIFICATION	0.999997377993408	WITHOUT_CLASSIFICATION	2.622006591898858E-6	DEFECT
// write 8-bit	WITHOUT_CLASSIFICATION	0.999997377993408	WITHOUT_CLASSIFICATION	2.622006591898858E-6	DEFECT
// write 8-bit	WITHOUT_CLASSIFICATION	0.999997377993408	WITHOUT_CLASSIFICATION	2.622006591898858E-6	DEFECT
/* Decide how many coding tables to use */	WITHOUT_CLASSIFICATION	0.99966552020727	WITHOUT_CLASSIFICATION	3.344797927300009E-4	DEFECT
/* Generate an initial set of coding tables */	WITHOUT_CLASSIFICATION	0.9999994124599154	WITHOUT_CLASSIFICATION	5.87540084507486E-7	DEFECT
/*          Iterate up to N_ITERS times to improve the tables.        */	WITHOUT_CLASSIFICATION	0.9999999755432099	WITHOUT_CLASSIFICATION	2.4456790179088283E-8	DEFECT
/* Compute MTF values for the selectors. */	WITHOUT_CLASSIFICATION	0.9999998788184153	WITHOUT_CLASSIFICATION	1.2118158472590777E-7	DEFECT
/* Assign actual codes for the tables. */	WITHOUT_CLASSIFICATION	0.9999947463931212	WITHOUT_CLASSIFICATION	5.25360687865409E-6	DEFECT
/* Transmit the mapping table. */	WITHOUT_CLASSIFICATION	0.9999989470790349	WITHOUT_CLASSIFICATION	1.052920965122716E-6	DEFECT
/* Now the selectors. */	WITHOUT_CLASSIFICATION	0.9999992659739833	WITHOUT_CLASSIFICATION	7.340260167061822E-7	DEFECT
/* Now the coding tables. */	WITHOUT_CLASSIFICATION	0.9999989725823938	WITHOUT_CLASSIFICATION	1.027417606252202E-6	DEFECT
/* And finally, the block data proper */	WITHOUT_CLASSIFICATION	0.9996720415194866	WITHOUT_CLASSIFICATION	3.279584805134347E-4	DEFECT
/* Set group start & end marks. */	WITHOUT_CLASSIFICATION	0.9999987856060971	WITHOUT_CLASSIFICATION	1.2143939028197749E-6	DEFECT
/*                  Calculate the cost of this group as coded                  by each of the coding tables.                */	WITHOUT_CLASSIFICATION	0.9999999498732842	WITHOUT_CLASSIFICATION	5.0126715807476616E-8	DEFECT
// unrolled version of the else-block	WITHOUT_CLASSIFICATION	0.9999991246108739	WITHOUT_CLASSIFICATION	8.753891261093669E-7	DEFECT
/*                  Find the coding table which is best for this group,                  and record its identity in the selector table.                */	WITHOUT_CLASSIFICATION	0.9999993204213937	WITHOUT_CLASSIFICATION	6.795786063350181E-7	DEFECT
/*                  Increment the symbol frequencies for the selected table.                */	WITHOUT_CLASSIFICATION	0.9999990871813593	WITHOUT_CLASSIFICATION	9.128186406840292E-7	DEFECT
/*              Recompute the tables based on the accumulated frequencies.            */	WITHOUT_CLASSIFICATION	0.999995939229118	WITHOUT_CLASSIFICATION	4.0607708819416515E-6	DEFECT
// inlined: bsW(1, inUse[i16 + j] ? 1 : 0);	WITHOUT_CLASSIFICATION	0.9999996006922803	WITHOUT_CLASSIFICATION	3.9930771970575524E-7	DEFECT
// inlined: bsW(1, 1);	WITHOUT_CLASSIFICATION	0.999996165184742	WITHOUT_CLASSIFICATION	3.834815258070614E-6	DEFECT
// inlined: bsW(1, 0);	WITHOUT_CLASSIFICATION	0.9999973256768392	WITHOUT_CLASSIFICATION	2.674323160869044E-6	DEFECT
// inlined: bsW(1, 0);	WITHOUT_CLASSIFICATION	0.9999973256768392	WITHOUT_CLASSIFICATION	2.674323160869044E-6	DEFECT
//bsBuffShadow |= 0 << (32 - bsLiveShadow - 1);	WITHOUT_CLASSIFICATION	0.9999921931651702	WITHOUT_CLASSIFICATION	7.806834829805047E-6	DEFECT
// inlined: bsW(5, curr);	WITHOUT_CLASSIFICATION	0.9999979490663405	WITHOUT_CLASSIFICATION	2.0509336595528935E-6	DEFECT
// inlined: bsW(2, 2);	WITHOUT_CLASSIFICATION	0.9999965603404037	WITHOUT_CLASSIFICATION	3.4396595963607677E-6	DEFECT
/* 10 */	WITHOUT_CLASSIFICATION	0.9999770513239221	WITHOUT_CLASSIFICATION	2.2948676077883426E-5	DEFECT
// inlined: bsW(2, 3);	WITHOUT_CLASSIFICATION	0.9999959434947943	WITHOUT_CLASSIFICATION	4.056505205724226E-6	DEFECT
/* 11 */	WITHOUT_CLASSIFICATION	0.9999808861158687	WITHOUT_CLASSIFICATION	1.911388413132284E-5	DEFECT
// copy	WITHOUT_CLASSIFICATION	0.9999468552669976	WITHOUT_CLASSIFICATION	5.31447330023946E-5	DEFECT
// start inline mainGTU	WITHOUT_CLASSIFICATION	0.999999803331604	WITHOUT_CLASSIFICATION	1.9666839593791773E-7	DEFECT
// following could be done in a loop, but // unrolled it for performance:	WITHOUT_CLASSIFICATION	0.9999994663386284	WITHOUT_CLASSIFICATION	5.33661371605871E-7	DEFECT
// while x > 0	WITHOUT_CLASSIFICATION	0.9999980237047993	WITHOUT_CLASSIFICATION	1.9762952006455026E-6	DEFECT
// Set up the 2-byte frequency table	WITHOUT_CLASSIFICATION	0.9999997976470256	WITHOUT_CLASSIFICATION	2.0235297440495134E-7	DEFECT
/*          In the various block-sized structures, live data runs          from 0 to last+NUM_OVERSHOOT_BYTES inclusive.  First,          set up the overshoot area for block.        */	WITHOUT_CLASSIFICATION	0.9999999997240328	WITHOUT_CLASSIFICATION	2.759672179330907E-10	DEFECT
// Complete the initial radix sort:	WITHOUT_CLASSIFICATION	0.9999996014162434	WITHOUT_CLASSIFICATION	3.985837565083894E-7	DEFECT
/*              Now ftab contains the first loc of every small bucket.              Calculate the running order, from smallest to largest              big bucket.        */	WITHOUT_CLASSIFICATION	0.9999999996902312	WITHOUT_CLASSIFICATION	3.0976878582669074E-10	DEFECT
/*              The main sorting loop.        */	WITHOUT_CLASSIFICATION	0.9999997552274541	WITHOUT_CLASSIFICATION	2.447725459100173E-7	DEFECT
/*                  Process big buckets, starting with the least full.            */	WITHOUT_CLASSIFICATION	0.9999996996126839	WITHOUT_CLASSIFICATION	3.003873161411781E-7	DEFECT
// Step 1:	WITHOUT_CLASSIFICATION	0.999996619186433	WITHOUT_CLASSIFICATION	3.3808135670648616E-6	DEFECT
// Step 3:	WITHOUT_CLASSIFICATION	0.9999956303826819	WITHOUT_CLASSIFICATION	4.369617318075903E-6	DEFECT
// handle 16 bit signed numbers	WITHOUT_CLASSIFICATION	0.9999999816181797	WITHOUT_CLASSIFICATION	1.8381820327763377E-8	DEFECT
// make maps	WITHOUT_CLASSIFICATION	0.9999960106190499	WITHOUT_CLASSIFICATION	3.989380950140746E-6	DEFECT
/* directory with respect to       */	WITHOUT_CLASSIFICATION	0.9999718993564723	WITHOUT_CLASSIFICATION	2.8100643527705796E-5	DEFECT
// with blockSize 900k //     256 byte //     256 byte //    1032 byte //   18002 byte //   18002 byte	WITHOUT_CLASSIFICATION	0.9999733041809048	WITHOUT_CLASSIFICATION	2.6695819095219014E-5	DEFECT
//     256 byte //    1548 byte //    6192 byte //      24 byte //      12 byte //    6192 byte //       6 byte //      16 byte	WITHOUT_CLASSIFICATION	0.9999824748191013	WITHOUT_CLASSIFICATION	1.752518089861472E-5	DEFECT
//    4000 byte //    4000 byte //    4000 byte	WITHOUT_CLASSIFICATION	0.9999779008762111	WITHOUT_CLASSIFICATION	2.209912378888934E-5	DEFECT
//    1024 byte //    1024 byte //     256 byte	WITHOUT_CLASSIFICATION	0.9999920068326739	WITHOUT_CLASSIFICATION	7.993167326162923E-6	DEFECT
//    1040 byte //    2064 byte //    2064 byte	WITHOUT_CLASSIFICATION	0.9999790161632988	WITHOUT_CLASSIFICATION	2.0983836701326406E-5	DEFECT
//  262148 byte // ------------ //  333408 byte	WITHOUT_CLASSIFICATION	0.9999707014140031	WITHOUT_CLASSIFICATION	2.9298585996849406E-5	DEFECT
// Just print a message, like the previous versions of this class did	WITHOUT_CLASSIFICATION	0.9999985287986363	WITHOUT_CLASSIFICATION	1.4712013637515314E-6	DEFECT
// Variables used by setup* methods exclusively	WITHOUT_CLASSIFICATION	0.9999999606146952	WITHOUT_CLASSIFICATION	3.938530484247717E-8	DEFECT
// currBlockNo++;	WITHOUT_CLASSIFICATION	0.9999878421113071	WITHOUT_CLASSIFICATION	1.2157888692853537E-5	DEFECT
// A bad CRC is considered a fatal error.	WITHOUT_CLASSIFICATION	0.9985200302620623	WITHOUT_CLASSIFICATION	0.0014799697379377023	DEFECT
/* Receive the mapping table */	WITHOUT_CLASSIFICATION	0.9999955427828761	WITHOUT_CLASSIFICATION	4.457217123906802E-6	DEFECT
/* Now the selectors */	WITHOUT_CLASSIFICATION	0.999997783746955	WITHOUT_CLASSIFICATION	2.2162530449304413E-6	DEFECT
/* Undo the MTF values for the selectors. */	WITHOUT_CLASSIFICATION	0.9999997033626177	WITHOUT_CLASSIFICATION	2.9663738224678143E-7	DEFECT
// nearly all times v is zero, 4 in most other cases	WITHOUT_CLASSIFICATION	0.9999981976900564	WITHOUT_CLASSIFICATION	1.8023099436112595E-6	DEFECT
/* Now the coding tables */	WITHOUT_CLASSIFICATION	0.9999942330068091	WITHOUT_CLASSIFICATION	5.766993190885216E-6	DEFECT
// finally create the Huffman tables	WITHOUT_CLASSIFICATION	0.9999996865787991	WITHOUT_CLASSIFICATION	3.1342120094890663E-7	DEFECT
// end of file // '1' // ')' // 'Y' // '&' // 'S' // 'Y'	WITHOUT_CLASSIFICATION	0.9999921202455496	WITHOUT_CLASSIFICATION	7.879754450323087E-6	DEFECT
// Inlined: // int zvec = bsR(zn);	WITHOUT_CLASSIFICATION	0.9999955025615416	WITHOUT_CLASSIFICATION	4.497438458493643E-6	DEFECT
// Inlined: // int zvec = bsR(zn);	WITHOUT_CLASSIFICATION	0.9999955025615416	WITHOUT_CLASSIFICATION	4.497438458493643E-6	DEFECT
/*                  This loop is hammered during decompression,                  hence avoid native method call overhead of                  System.arraycopy for very small ranges to copy.                */	WITHOUT_CLASSIFICATION	0.9999986404302146	WITHOUT_CLASSIFICATION	1.3595697854540434E-6	DEFECT
/* not a char and not EOF */	WITHOUT_CLASSIFICATION	0.9999973457195193	WITHOUT_CLASSIFICATION	2.6542804807700182E-6	DEFECT
// (with blockSize 900k) //      256 byte	WITHOUT_CLASSIFICATION	0.9999790982849788	WITHOUT_CLASSIFICATION	2.0901715021195388E-5	DEFECT
//     1024 byte	WITHOUT_CLASSIFICATION	0.9999939396822425	WITHOUT_CLASSIFICATION	6.060317757512955E-6	DEFECT
// No need to keep track of Bcc'd addresses	WITHOUT_CLASSIFICATION	0.9999987499969026	WITHOUT_CLASSIFICATION	1.2500030974253168E-6	DEFECT
// Blindly trust the user doesn't set any invalid headers	WITHOUT_CLASSIFICATION	0.9999888827942266	WITHOUT_CLASSIFICATION	1.1117205773365719E-5	DEFECT
// RFC 822 s4.1: "Reply-To:" header is optional	WITHOUT_CLASSIFICATION	0.9998382161968369	WITHOUT_CLASSIFICATION	1.617838031630786E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999554955215	WITHOUT_CLASSIFICATION	4.4504478498603726E-7	DEFECT
// Mac does \n\r, but that's tough to distinguish from Windows \r\n\r\n. // Don't tackle that problem right now.	WITHOUT_CLASSIFICATION	0.9970650520061193	WITHOUT_CLASSIFICATION	0.0029349479938808325	DEFECT
// support "address (name)"	WITHOUT_CLASSIFICATION	0.9999930447766957	WITHOUT_CLASSIFICATION	6.955223304341547E-6	DEFECT
// support "(name) address"	WITHOUT_CLASSIFICATION	0.9999967423173695	WITHOUT_CLASSIFICATION	3.2576826305049096E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999998068383374	WITHOUT_CLASSIFICATION	1.9316166246942935E-7	DEFECT
//      256 byte //    18002 byte //    18002 byte	WITHOUT_CLASSIFICATION	0.9999771644310211	WITHOUT_CLASSIFICATION	2.2835568978832352E-5	DEFECT
//     6192 byte //     6192 byte //     6192 byte //       24 byte	WITHOUT_CLASSIFICATION	0.9999857270819752	WITHOUT_CLASSIFICATION	1.4272918024766728E-5	DEFECT
//     1028 byte //      512 byte //     3096 byte //        6 byte //--------------- //    60798 byte	WITHOUT_CLASSIFICATION	0.9999773201626647	WITHOUT_CLASSIFICATION	2.2679837335265707E-5	DEFECT
//  3600000 byte //   900000 byte //--------------- //  4560782 byte //===============	WITHOUT_CLASSIFICATION	0.9999727659360159	WITHOUT_CLASSIFICATION	2.7234063984157728E-5	DEFECT
// RFC 822 s4.1: "From:" header must be sent // We rely on error checking by the MTA	WITHOUT_CLASSIFICATION	0.9993765644005888	WITHOUT_CLASSIFICATION	6.234355994112188E-4	DEFECT
// RFC 822 s4.1: //   "Header fields are NOT required to occur in any particular order, //    except that the message body MUST occur AFTER the headers" // (the same section specifies a reccommended order, which we ignore)	WITHOUT_CLASSIFICATION	0.9999825587308367	WITHOUT_CLASSIFICATION	1.7441269163278117E-5	DEFECT
// Make a limited attempt to extract a sanitized email address // Prefer text in <brackets>, ignore anything in (parentheses)	WITHOUT_CLASSIFICATION	0.999945560696025	WITHOUT_CLASSIFICATION	5.443930397497399E-5	DEFECT
// * * * * * Raw protocol methods below here * * * * *	WITHOUT_CLASSIFICATION	0.9999888560016886	WITHOUT_CLASSIFICATION	1.1143998311400494E-5	DEFECT
// make sure dot is on new line	WITHOUT_CLASSIFICATION	0.9999209505736547	WITHOUT_CLASSIFICATION	7.904942634526798E-5	DEFECT
// raw supports <CRLF>.<CRLF>	WITHOUT_CLASSIFICATION	0.9999983852373404	WITHOUT_CLASSIFICATION	1.6147626595211852E-6	DEFECT
// Check that the response is one of the valid codes	WITHOUT_CLASSIFICATION	0.999998622556137	WITHOUT_CLASSIFICATION	1.3774438629707298E-6	DEFECT
// deprecated, but email is byte-oriented	WITHOUT_CLASSIFICATION	0.9999916182812133	WITHOUT_CLASSIFICATION	8.381718786714786E-6	DEFECT
// ensure always \r\n	WITHOUT_CLASSIFICATION	0.9999990796932678	WITHOUT_CLASSIFICATION	9.203067320434946E-7	DEFECT
// Mac does \n\r, but that's tough to distinguish from Windows \r\n\r\n. // Don't tackle that problem right now.	WITHOUT_CLASSIFICATION	0.9970650520061193	WITHOUT_CLASSIFICATION	0.0029349479938808325	DEFECT
// add extra dot	WITHOUT_CLASSIFICATION	0.9999969695797422	WITHOUT_CLASSIFICATION	3.0304202578214715E-6	DEFECT
// add extra dot	WITHOUT_CLASSIFICATION	0.9999969695797422	WITHOUT_CLASSIFICATION	3.0304202578214715E-6	DEFECT
// ensure always \r\n	WITHOUT_CLASSIFICATION	0.9999990796932678	WITHOUT_CLASSIFICATION	9.203067320434946E-7	DEFECT
// UNDONE	WITHOUT_CLASSIFICATION	0.9999864544104526	WITHOUT_CLASSIFICATION	1.3545589547336798E-5	DEFECT
// create a TarEntry for the LongLink, the contents // of which are the entry's name	WITHOUT_CLASSIFICATION	0.9999999621059639	WITHOUT_CLASSIFICATION	3.789403616591565E-8	DEFECT
// Strip off drive letters! // REVIEW Would a better check be "(File.separator == '\')"?	WITHOUT_CLASSIFICATION	0.9999999437136817	WITHOUT_CLASSIFICATION	5.6286318384879947E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999998068383374	WITHOUT_CLASSIFICATION	1.9316166246942935E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999998068383374	WITHOUT_CLASSIFICATION	1.9316166246942935E-7	DEFECT
// No absolute pathnames // Windows (and Posix?) paths can start with "\\NetworkDrive\", // so we loop on starting /'s.	WITHOUT_CLASSIFICATION	0.9999962440713352	WITHOUT_CLASSIFICATION	3.755928664609264E-6	DEFECT
/* start of the central directory  */	WITHOUT_CLASSIFICATION	0.9999996632131232	WITHOUT_CLASSIFICATION	3.3678687682655766E-7	DEFECT
// REVIEW // This is horribly inefficient, but it ensures that we // properly skip over bytes via the TarBuffer... //	WITHOUT_CLASSIFICATION	0.9995177529063057	WITHOUT_CLASSIFICATION	4.822470936943144E-4	DEFECT
// read in the name	WITHOUT_CLASSIFICATION	0.9999990976569633	WITHOUT_CLASSIFICATION	9.023430367957661E-7	DEFECT
// remove trailing null terminator	WITHOUT_CLASSIFICATION	0.9999978266774707	WITHOUT_CLASSIFICATION	2.1733225292578935E-6	DEFECT
// Unexpected EOF!	WITHOUT_CLASSIFICATION	0.9999957875786913	WITHOUT_CLASSIFICATION	4.212421308716678E-6	DEFECT
// ---------------------------------------------------------- // somewhat arbitrary choices that are quite common for shared // installations // -----------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999995659577522	WITHOUT_CLASSIFICATION	4.3404224777299304E-7	DEFECT
/* method is STORED and we used RandomAccessFile */	WITHOUT_CLASSIFICATION	0.999999906553037	WITHOUT_CLASSIFICATION	9.344696288600882E-8	DEFECT
// If random access output, write the local file header containing // the correct CRC and compressed/uncompressed sizes	WITHOUT_CLASSIFICATION	0.9999967143730845	WITHOUT_CLASSIFICATION	3.285626915452845E-6	DEFECT
// not specified	WITHOUT_CLASSIFICATION	0.9999993460797271	WITHOUT_CLASSIFICATION	6.539202729275647E-7	DEFECT
// not specified	WITHOUT_CLASSIFICATION	0.9999993460797271	WITHOUT_CLASSIFICATION	6.539202729275647E-7	DEFECT
// Size/CRC not required if RandomAccessFile is used	WITHOUT_CLASSIFICATION	0.9999918996389263	WITHOUT_CLASSIFICATION	8.100361073667273E-6	DEFECT
/*     * Various ZIP constants     */	WITHOUT_CLASSIFICATION	0.9999993860927257	WITHOUT_CLASSIFICATION	6.139072743337376E-7	DEFECT
//store method in local variable to prevent multiple method calls	WITHOUT_CLASSIFICATION	0.9999997469067909	WITHOUT_CLASSIFICATION	2.5309320902170823E-7	DEFECT
// bit3 set to signal, we use a data descriptor	WITHOUT_CLASSIFICATION	0.9999988639396811	WITHOUT_CLASSIFICATION	1.1360603188783711E-6	DEFECT
// bit3 set to signal, we use a data descriptor	WITHOUT_CLASSIFICATION	0.9999988639396811	WITHOUT_CLASSIFICATION	1.1360603188783711E-6	DEFECT
// compression method	WITHOUT_CLASSIFICATION	0.9999996840898243	WITHOUT_CLASSIFICATION	3.1591017560717283E-7	DEFECT
// compression method	WITHOUT_CLASSIFICATION	0.9999996840898243	WITHOUT_CLASSIFICATION	3.1591017560717283E-7	DEFECT
// last mod. time and date	WITHOUT_CLASSIFICATION	0.9999985256443911	WITHOUT_CLASSIFICATION	1.474355608952555E-6	DEFECT
// file name length	WITHOUT_CLASSIFICATION	0.9999993568391341	WITHOUT_CLASSIFICATION	6.431608658312231E-7	DEFECT
// extra field length	WITHOUT_CLASSIFICATION	0.9999976366036706	WITHOUT_CLASSIFICATION	2.3633963294527656E-6	DEFECT
// file name	WITHOUT_CLASSIFICATION	0.9999995814905556	WITHOUT_CLASSIFICATION	4.1850944437958336E-7	DEFECT
// extra field	WITHOUT_CLASSIFICATION	0.9999958957665557	WITHOUT_CLASSIFICATION	4.104233444383164E-6	DEFECT
// version made by	WITHOUT_CLASSIFICATION	0.9999960221183763	WITHOUT_CLASSIFICATION	3.977881623626549E-6	DEFECT
// version needed to extract // general purpose bit flag	WITHOUT_CLASSIFICATION	0.999996806960359	WITHOUT_CLASSIFICATION	3.1930396409275963E-6	DEFECT
// last mod. time and date	WITHOUT_CLASSIFICATION	0.9999985256443911	WITHOUT_CLASSIFICATION	1.474355608952555E-6	DEFECT
// requires version 2 as we are going to store length info // in the data descriptor	WITHOUT_CLASSIFICATION	0.9999030159980868	WITHOUT_CLASSIFICATION	9.698400191316595E-5	DEFECT
// file name length	WITHOUT_CLASSIFICATION	0.9999993568391341	WITHOUT_CLASSIFICATION	6.431608658312231E-7	DEFECT
// CRC // compressed length // uncompressed length	WITHOUT_CLASSIFICATION	0.9999994419713363	WITHOUT_CLASSIFICATION	5.580286636077332E-7	DEFECT
// extra field length	WITHOUT_CLASSIFICATION	0.9999976366036706	WITHOUT_CLASSIFICATION	2.3633963294527656E-6	DEFECT
// file name	WITHOUT_CLASSIFICATION	0.9999995814905556	WITHOUT_CLASSIFICATION	4.1850944437958336E-7	DEFECT
// extra field	WITHOUT_CLASSIFICATION	0.9999958957665557	WITHOUT_CLASSIFICATION	4.104233444383164E-6	DEFECT
// file comment length	WITHOUT_CLASSIFICATION	0.9999973633474691	WITHOUT_CLASSIFICATION	2.636652530789636E-6	DEFECT
// disk number start	WITHOUT_CLASSIFICATION	0.9999971935142764	WITHOUT_CLASSIFICATION	2.8064857236459276E-6	DEFECT
// internal file attributes	WITHOUT_CLASSIFICATION	0.9999999815097371	WITHOUT_CLASSIFICATION	1.849026288203832E-8	DEFECT
// external file attributes	WITHOUT_CLASSIFICATION	0.9999999268768183	WITHOUT_CLASSIFICATION	7.312318173547124E-8	DEFECT
// relative offset of LFH	WITHOUT_CLASSIFICATION	0.999999978383441	WITHOUT_CLASSIFICATION	2.1616558902784112E-8	DEFECT
// disk numbers	WITHOUT_CLASSIFICATION	0.9999975516787774	WITHOUT_CLASSIFICATION	2.448321222680523E-6	DEFECT
// number of entries	WITHOUT_CLASSIFICATION	0.9999993544107959	WITHOUT_CLASSIFICATION	6.455892041245809E-7	DEFECT
// length and location of CD	WITHOUT_CLASSIFICATION	0.9999952093266224	WITHOUT_CLASSIFICATION	4.79067337757772E-6	DEFECT
// ZIP file comment	WITHOUT_CLASSIFICATION	0.999989810538611	WITHOUT_CLASSIFICATION	1.0189461388921613E-5	DEFECT
// array not exhausted	WITHOUT_CLASSIFICATION	0.9999988871104243	WITHOUT_CLASSIFICATION	1.112889575691755E-6	DEFECT
/* version made by                 */	WITHOUT_CLASSIFICATION	0.9999927050642132	WITHOUT_CLASSIFICATION	7.2949357867688605E-6	DEFECT
/* version needed to extract       */	WITHOUT_CLASSIFICATION	0.9999928101694474	WITHOUT_CLASSIFICATION	7.189830552540995E-6	DEFECT
/* general purpose bit flag        */	WITHOUT_CLASSIFICATION	0.9999994632880058	WITHOUT_CLASSIFICATION	5.367119941932552E-7	DEFECT
/* compression method              */	WITHOUT_CLASSIFICATION	0.999999146420908	WITHOUT_CLASSIFICATION	8.535790919142876E-7	DEFECT
/* last mod file time              */	WITHOUT_CLASSIFICATION	0.9999992617261194	WITHOUT_CLASSIFICATION	7.382738805632766E-7	DEFECT
/* last mod file date              */	WITHOUT_CLASSIFICATION	0.9999986814768793	WITHOUT_CLASSIFICATION	1.3185231205729631E-6	DEFECT
/* crc-32                          */	WITHOUT_CLASSIFICATION	0.999984882988676	WITHOUT_CLASSIFICATION	1.5117011323910557E-5	DEFECT
/* uncompressed size               */	WITHOUT_CLASSIFICATION	0.9999980235819705	WITHOUT_CLASSIFICATION	1.9764180294791732E-6	DEFECT
/* filename length                 */	WITHOUT_CLASSIFICATION	0.9999974905270725	WITHOUT_CLASSIFICATION	2.5094729274173416E-6	DEFECT
/* extra field length              */	WITHOUT_CLASSIFICATION	0.999989814742253	WITHOUT_CLASSIFICATION	1.018525774695792E-5	DEFECT
/* file comment length             */	WITHOUT_CLASSIFICATION	0.9999856652490695	WITHOUT_CLASSIFICATION	1.4334750930453465E-5	DEFECT
/* internal file attributes        */	WITHOUT_CLASSIFICATION	0.999999715496118	WITHOUT_CLASSIFICATION	2.845038820431794E-7	DEFECT
/* external file attributes        */	WITHOUT_CLASSIFICATION	0.9999994234620665	WITHOUT_CLASSIFICATION	5.765379335547392E-7	DEFECT
/* relative offset of local header */	WITHOUT_CLASSIFICATION	0.9999994214093596	WITHOUT_CLASSIFICATION	5.785906404266658E-7	DEFECT
// disk number	WITHOUT_CLASSIFICATION	0.9999975942396371	WITHOUT_CLASSIFICATION	2.405760362930698E-6	DEFECT
// LFH offset,	WITHOUT_CLASSIFICATION	0.9999991548217899	WITHOUT_CLASSIFICATION	8.451782101635258E-7	DEFECT
// data offset will be filled later	WITHOUT_CLASSIFICATION	0.999997911196721	WITHOUT_CLASSIFICATION	2.08880327913819E-6	DEFECT
/* end of central dir signature    */	WITHOUT_CLASSIFICATION	0.9999978671282468	WITHOUT_CLASSIFICATION	2.13287175325527E-6	DEFECT
/* number of this disk             */	WITHOUT_CLASSIFICATION	0.9999485364853393	WITHOUT_CLASSIFICATION	5.146351466065417E-5	DEFECT
/* number of the disk with the     */	WITHOUT_CLASSIFICATION	0.9999939988039476	WITHOUT_CLASSIFICATION	6.0011960523499E-6	DEFECT
/* start of the central directory  */	WITHOUT_CLASSIFICATION	0.9999996632131232	WITHOUT_CLASSIFICATION	3.3678687682655766E-7	DEFECT
/* the central dir on this disk    */	WITHOUT_CLASSIFICATION	0.9999560995817814	WITHOUT_CLASSIFICATION	4.3900418218532617E-5	DEFECT
/* the central dir                 */	WITHOUT_CLASSIFICATION	0.9999977859634387	WITHOUT_CLASSIFICATION	2.2140365614032964E-6	DEFECT
/* size of the central directory   */	WITHOUT_CLASSIFICATION	0.9999992340170101	WITHOUT_CLASSIFICATION	7.659829899369475E-7	DEFECT
/* offset of start of central      */	WITHOUT_CLASSIFICATION	0.9999999198126925	WITHOUT_CLASSIFICATION	8.018730747105277E-8	DEFECT
// empty	WITHOUT_CLASSIFICATION	0.9999962767121857	WITHOUT_CLASSIFICATION	3.7232878143217396E-6	DEFECT
// wait 2 second extras // the test failed with 100 ms of margin on cvs.apache.org on August 1st, 2003	WITHOUT_CLASSIFICATION	0.9987448398171548	WITHOUT_CLASSIFICATION	0.0012551601828451882	DEFECT
// dummy1 --> dummy2 --> dummy3 // (which holds a glob mapper from "*.java" to "*.class"	WITHOUT_CLASSIFICATION	0.9999442982765975	WITHOUT_CLASSIFICATION	5.5701723402619756E-5	DEFECT
// // *****  initialize test environment (called "bed")  ***** //	WITHOUT_CLASSIFICATION	0.9999999703935338	WITHOUT_CLASSIFICATION	2.960646618666839E-8	DEFECT
// THIS WILL FAIL. //compareBytes("abc", "utf-16");	WITHOUT_CLASSIFICATION	0.9999926097506727	WITHOUT_CLASSIFICATION	7.390249327243567E-6	DEFECT
//catch script/ant mismatch with a meaningful message //we could ignore it, but there are likely to be other //version problems, so we stamp down on the configuration now	WITHOUT_CLASSIFICATION	0.9999922972372308	WITHOUT_CLASSIFICATION	7.70276276916619E-6	DEFECT
//if there were no main targets, we list all subtargets //as it means nothing has a description	WITHOUT_CLASSIFICATION	0.9999994585301196	WITHOUT_CLASSIFICATION	5.414698802917684E-7	DEFECT
// For NetWare, use the boolean=true mode, so we can use delimiter // information to make a better decision later.	WITHOUT_CLASSIFICATION	0.9999999949095956	WITHOUT_CLASSIFICATION	5.090404456477904E-9	DEFECT
// we are on NetWare, tokenizing is handled a little differently, // due to the fact that NetWare has multiple-character volume names.	WITHOUT_CLASSIFICATION	0.999998895023354	WITHOUT_CLASSIFICATION	1.1049766458760918E-6	DEFECT
// The readers return -1 if they end. So simply read the "prepend" // after that the "content" and at the end the "append" file.	WITHOUT_CLASSIFICATION	0.9999999691527572	WITHOUT_CLASSIFICATION	3.0847242782838725E-8	DEFECT
// NB: this makes use of Project#setProperty rather than Project#setNewProperty //     due to backwards compatiblity reasons	WITHOUT_CLASSIFICATION	0.9994451439151243	WITHOUT_CLASSIFICATION	5.548560848756964E-4	DEFECT
// If we've been successful on an update, delete the // temporary file	WITHOUT_CLASSIFICATION	0.9999999996025277	WITHOUT_CLASSIFICATION	3.9747233556386595E-10	DEFECT
// CheckStyle - magic numbers // checking for "X:\ 0=dquote,1=letter,2=:,3=\	WITHOUT_CLASSIFICATION	0.9999998732273656	WITHOUT_CLASSIFICATION	1.2677263436780523E-7	DEFECT
/* version needed to extract       */	WITHOUT_CLASSIFICATION	0.9999928101694474	WITHOUT_CLASSIFICATION	7.189830552540995E-6	DEFECT
/* general purpose bit flag        */	WITHOUT_CLASSIFICATION	0.9999994632880058	WITHOUT_CLASSIFICATION	5.367119941932552E-7	DEFECT
/* compression method              */	WITHOUT_CLASSIFICATION	0.999999146420908	WITHOUT_CLASSIFICATION	8.535790919142876E-7	DEFECT
/* last mod file time              */	WITHOUT_CLASSIFICATION	0.9999992617261194	WITHOUT_CLASSIFICATION	7.382738805632766E-7	DEFECT
/* last mod file date              */	WITHOUT_CLASSIFICATION	0.9999986814768793	WITHOUT_CLASSIFICATION	1.3185231205729631E-6	DEFECT
/* crc-32                          */	WITHOUT_CLASSIFICATION	0.999984882988676	WITHOUT_CLASSIFICATION	1.5117011323910557E-5	DEFECT
/* compressed size                 */	WITHOUT_CLASSIFICATION	0.9999972774057261	WITHOUT_CLASSIFICATION	2.7225942738379742E-6	DEFECT
/* uncompressed size               */	WITHOUT_CLASSIFICATION	0.9999980235819705	WITHOUT_CLASSIFICATION	1.9764180294791732E-6	DEFECT
/* end of central dir signature    */	WITHOUT_CLASSIFICATION	0.9999978671282468	WITHOUT_CLASSIFICATION	2.13287175325527E-6	DEFECT
/* number of this disk             */	WITHOUT_CLASSIFICATION	0.9999485364853393	WITHOUT_CLASSIFICATION	5.146351466065417E-5	DEFECT
/* number of the disk with the     */	WITHOUT_CLASSIFICATION	0.9999939988039476	WITHOUT_CLASSIFICATION	6.0011960523499E-6	DEFECT
/* total number of entries in      */	WITHOUT_CLASSIFICATION	0.9999891663554777	WITHOUT_CLASSIFICATION	1.083364452236288E-5	DEFECT
/* total number of entries in      */	WITHOUT_CLASSIFICATION	0.9999891663554777	WITHOUT_CLASSIFICATION	1.083364452236288E-5	DEFECT
/* the central dir on this disk    */	WITHOUT_CLASSIFICATION	0.9999560995817814	WITHOUT_CLASSIFICATION	4.3900418218532617E-5	DEFECT
/* the central dir                 */	WITHOUT_CLASSIFICATION	0.9999977859634387	WITHOUT_CLASSIFICATION	2.2140365614032964E-6	DEFECT
/* size of the central directory   */	WITHOUT_CLASSIFICATION	0.9999992340170101	WITHOUT_CLASSIFICATION	7.659829899369475E-7	DEFECT
/* the starting disk number        */	WITHOUT_CLASSIFICATION	0.999998114827448	WITHOUT_CLASSIFICATION	1.8851725519662444E-6	DEFECT
/* zipfile comment length          */	WITHOUT_CLASSIFICATION	0.9999914881568934	WITHOUT_CLASSIFICATION	8.511843106571039E-6	DEFECT
/* local file header signature     */	WITHOUT_CLASSIFICATION	0.999993682046422	WITHOUT_CLASSIFICATION	6.317953577945251E-6	DEFECT
/*     * Converts DOS time to Java time (number of milliseconds since epoch).     */	WITHOUT_CLASSIFICATION	0.999999093207085	WITHOUT_CLASSIFICATION	9.067929149489576E-7	DEFECT
// CRC will be added later	WITHOUT_CLASSIFICATION	0.9999985310840481	WITHOUT_CLASSIFICATION	1.46891595181184E-6	DEFECT
/*<ZipExtraField>*/	WITHOUT_CLASSIFICATION	0.9999694123605255	WITHOUT_CLASSIFICATION	3.0587639474392855E-5	DEFECT
// initializes extra data to an empty byte array	WITHOUT_CLASSIFICATION	0.9999994122030358	WITHOUT_CLASSIFICATION	5.877969642892806E-7	DEFECT
// MS-DOS read-only attribute	WITHOUT_CLASSIFICATION	0.9999931458085052	WITHOUT_CLASSIFICATION	6.854191494916055E-6	DEFECT
// MS-DOS directory flag	WITHOUT_CLASSIFICATION	0.9999419230603506	WITHOUT_CLASSIFICATION	5.807693964946486E-5	DEFECT
// A "location" attribute for a node within a // Path object.	WITHOUT_CLASSIFICATION	0.9999974071647006	WITHOUT_CLASSIFICATION	2.5928352993291433E-6	DEFECT
// Just use the same directory as the file itself. // This directory will exist	WITHOUT_CLASSIFICATION	0.9999987324120239	WITHOUT_CLASSIFICATION	1.2675879760571291E-6	DEFECT
// JarIndex is sorting the directories by ascending order. // it has no value but cosmetic since it will be read into a // hashtable by the classloader, but we'll do so anyway.	WITHOUT_CLASSIFICATION	0.9999999191009327	WITHOUT_CLASSIFICATION	8.08990673454197E-8	DEFECT
// // Static //	WITHOUT_CLASSIFICATION	0.9999997122816594	WITHOUT_CLASSIFICATION	2.877183405407515E-7	DEFECT
//we mark the file to be deleted on exit. //the alternative would be to cache the filename and delete //after execution finished, which is much better for long-lived runtimes //though spawning complicates things...	WITHOUT_CLASSIFICATION	0.9927657506707362	WITHOUT_CLASSIFICATION	0.007234249329263747	DEFECT
// Protected first so if any GUI tool offers a default // based on enum #0, it will be right.	WITHOUT_CLASSIFICATION	0.999999545547031	WITHOUT_CLASSIFICATION	4.5445296903140154E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc // the source file // the destination file // the destination directory	WITHOUT_CLASSIFICATION	0.9999999887889037	WITHOUT_CLASSIFICATION	1.121109627109297E-8	DEFECT
// add dest dir to classpath so that previously compiled and // untouched classes are on classpath	WITHOUT_CLASSIFICATION	0.9999999610523451	WITHOUT_CLASSIFICATION	3.894765485617266E-8	DEFECT
// build the command line from what we got the format is // cleartool checkout [options...] [viewpath ...] // as specified in the CLEARTOOL.EXE help	WITHOUT_CLASSIFICATION	0.9999994687577319	WITHOUT_CLASSIFICATION	5.312422681245676E-7	DEFECT
// build the command line from what we got. the format is // cleartool mkelem [options...] [viewpath ...] // as specified in the CLEARTOOL.EXE help	WITHOUT_CLASSIFICATION	0.9999945835422611	WITHOUT_CLASSIFICATION	5.416457738966373E-6	DEFECT
// build the command line from what we got. the format is // cleartool mklabel [options...] [viewpath ...] // as specified in the CLEARTOOL help	WITHOUT_CLASSIFICATION	0.9999991840794419	WITHOUT_CLASSIFICATION	8.159205580733554E-7	DEFECT
// push the current iterator onto the stack and then // iterate through this directory.	WITHOUT_CLASSIFICATION	0.9999675009014136	WITHOUT_CLASSIFICATION	3.249909858647843E-5	DEFECT
// List of EJBs found in XML // One item within the Map // Is doc iAS or EJB descriptor	WITHOUT_CLASSIFICATION	0.9999996253205693	WITHOUT_CLASSIFICATION	3.746794306650065E-7	DEFECT
// baseNameTerminator not found: the descriptor use the // JOnAS naming convention, ie [Foo.xml,jonas-Foo.xml] and // not [Foo<baseNameTerminator>-ejb-jar.xml, // Foo<baseNameTerminator>-jonas-ejb-jar.xml].	WITHOUT_CLASSIFICATION	0.9999855620785565	WITHOUT_CLASSIFICATION	1.4437921443575253E-5	DEFECT
// Loop through the files seeing if any has been touched // more recently than the destination jar.	WITHOUT_CLASSIFICATION	0.9999997449546344	WITHOUT_CLASSIFICATION	2.550453656238817E-7	DEFECT
// read in the descriptor. Under weblogic, the descriptor is a weblogic // specific subclass which has references to the implementation classes. // These classes must, therefore, be in the classpath when the deployment // descriptor is loaded from the .ser file	WITHOUT_CLASSIFICATION	0.9999999975223823	WITHOUT_CLASSIFICATION	2.477617580599357E-9	DEFECT
//WARNING: We trim the values of all the attributes because //Some extension declarations are badly defined (ie have spaces //after version or vendor)	WITHOUT_CLASSIFICATION	0.9999045821711156	WITHOUT_CLASSIFICATION	9.541782888447211E-5	DEFECT
// 2003-02-21 new replace algorithm by tbee (tbee@tbee.org) // because it wasn't able to replace something like "@aaa;@bbb;"	WITHOUT_CLASSIFICATION	0.9999973062416565	WITHOUT_CLASSIFICATION	2.6937583434372013E-6	DEFECT
// convert backslashes to slashes, otherwise jjtree will // put this as comments and this seems to confuse javacc	WITHOUT_CLASSIFICATION	0.9999986594308005	WITHOUT_CLASSIFICATION	1.3405691994952903E-6	DEFECT
//although this code appears to duplicate that of ClasspathUtils.newInstance, //we cannot use that because this formatter may run in a forked process, //without that class.	WITHOUT_CLASSIFICATION	0.9823955041203937	WITHOUT_CLASSIFICATION	0.017604495879606285	DEFECT
// build the command line from what we got the format is // ss History elements [-H] [-L] [-N] [-O] [-V] [-Y] [-#] [-?] // as specified in the SS.EXE help	WITHOUT_CLASSIFICATION	0.9999996249125945	WITHOUT_CLASSIFICATION	3.7508740557033896E-7	DEFECT
// this method has severe consequences on performance. We cannot rely // on the super.hashCode() method since super.getName() always return // the empty string in the current implemention (there's no setter) // so it is basically draining the performance of a hashmap lookup	WITHOUT_CLASSIFICATION	0.999997272220833	WITHOUT_CLASSIFICATION	2.72777916692365E-6	DEFECT
// If this TransformOperation has DrawOperation children // then Rotate the first child and return.	WITHOUT_CLASSIFICATION	0.9999999757661524	WITHOUT_CLASSIFICATION	2.4233847618386175E-8	DEFECT
// converted from sun internal classes to // new Base64Converter // utility class extracted from Get task	WITHOUT_CLASSIFICATION	0.9999296624549029	WITHOUT_CLASSIFICATION	7.033754509718133E-5	DEFECT
// // Cannot return a null source, because we have to call // setEntityResolver (see setEntityResolver javadoc comment) //	WITHOUT_CLASSIFICATION	0.9999983120766792	WITHOUT_CLASSIFICATION	1.6879233207787793E-6	DEFECT
// CRC // compressed length // uncompressed length	WITHOUT_CLASSIFICATION	0.9999994419713363	WITHOUT_CLASSIFICATION	5.580286636077332E-7	DEFECT
// No further methods necessary. This is just an amalgamation of two other // interfaces.	WITHOUT_CLASSIFICATION	0.9999999713622092	WITHOUT_CLASSIFICATION	2.863779081668406E-8	DEFECT
// // -----  The "Singleton"  ----- //	WITHOUT_CLASSIFICATION	0.999995233131589	WITHOUT_CLASSIFICATION	4.766868410956414E-6	DEFECT
// If we had child elements, we need to indent before we close // the element, otherwise we're on the same line and don't need // to indent	WITHOUT_CLASSIFICATION	0.9999995021371622	WITHOUT_CLASSIFICATION	4.978628378837529E-7	DEFECT
// The key is in the dictionary but cannot be retrieved // This is usually due references that refer to tasks // that have not been taskdefed in the current run. // Ignore	WITHOUT_CLASSIFICATION	0.9999991120082282	WITHOUT_CLASSIFICATION	8.879917718801336E-7	DEFECT
// write magic: done by caller who created this stream //this.out.write('B'); //this.out.write('Z');	WITHOUT_CLASSIFICATION	0.999738718720078	WITHOUT_CLASSIFICATION	2.6128127992191316E-4	DEFECT
// CRC // Mode // SizDev // UID // GID	WITHOUT_CLASSIFICATION	0.9999982678508339	WITHOUT_CLASSIFICATION	1.7321491660504105E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999993109983563	WITHOUT_CLASSIFICATION	6.890016436783456E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999993109983563	WITHOUT_CLASSIFICATION	6.890016436783456E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999993109983563	WITHOUT_CLASSIFICATION	6.890016436783456E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999993109983563	WITHOUT_CLASSIFICATION	6.890016436783456E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999993109983563	WITHOUT_CLASSIFICATION	6.890016436783456E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999993109983563	WITHOUT_CLASSIFICATION	6.890016436783456E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999993109983563	WITHOUT_CLASSIFICATION	6.890016436783456E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999993109983563	WITHOUT_CLASSIFICATION	6.890016436783456E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999986582990149	WITHOUT_CLASSIFICATION	1.3417009850762106E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999986582990149	WITHOUT_CLASSIFICATION	1.3417009850762106E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999986582990149	WITHOUT_CLASSIFICATION	1.3417009850762106E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999986582990149	WITHOUT_CLASSIFICATION	1.3417009850762106E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999986582990149	WITHOUT_CLASSIFICATION	1.3417009850762106E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999986582990149	WITHOUT_CLASSIFICATION	1.3417009850762106E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999993109983563	WITHOUT_CLASSIFICATION	6.890016436783456E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999993109983563	WITHOUT_CLASSIFICATION	6.890016436783456E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999993109983563	WITHOUT_CLASSIFICATION	6.890016436783456E-7	DEFECT
// ignored	WITHOUT_CLASSIFICATION	0.9999993909384511	WITHOUT_CLASSIFICATION	6.090615488643358E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999993109983563	WITHOUT_CLASSIFICATION	6.890016436783456E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999993109983563	WITHOUT_CLASSIFICATION	6.890016436783456E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999993109983563	WITHOUT_CLASSIFICATION	6.890016436783456E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999993109983563	WITHOUT_CLASSIFICATION	6.890016436783456E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999993109983563	WITHOUT_CLASSIFICATION	6.890016436783456E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999993109983563	WITHOUT_CLASSIFICATION	6.890016436783456E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999993109983563	WITHOUT_CLASSIFICATION	6.890016436783456E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999993109983563	WITHOUT_CLASSIFICATION	6.890016436783456E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999993109983563	WITHOUT_CLASSIFICATION	6.890016436783456E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999993109983563	WITHOUT_CLASSIFICATION	6.890016436783456E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999993109983563	WITHOUT_CLASSIFICATION	6.890016436783456E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999993109983563	WITHOUT_CLASSIFICATION	6.890016436783456E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999993109983563	WITHOUT_CLASSIFICATION	6.890016436783456E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999993109983563	WITHOUT_CLASSIFICATION	6.890016436783456E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999993109983563	WITHOUT_CLASSIFICATION	6.890016436783456E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999993109983563	WITHOUT_CLASSIFICATION	6.890016436783456E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999993109983563	WITHOUT_CLASSIFICATION	6.890016436783456E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999993109983563	WITHOUT_CLASSIFICATION	6.890016436783456E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999993109983563	WITHOUT_CLASSIFICATION	6.890016436783456E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999993109983563	WITHOUT_CLASSIFICATION	6.890016436783456E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999993109983563	WITHOUT_CLASSIFICATION	6.890016436783456E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999993109983563	WITHOUT_CLASSIFICATION	6.890016436783456E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999993109983563	WITHOUT_CLASSIFICATION	6.890016436783456E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999993109983563	WITHOUT_CLASSIFICATION	6.890016436783456E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999993109983563	WITHOUT_CLASSIFICATION	6.890016436783456E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999993109983563	WITHOUT_CLASSIFICATION	6.890016436783456E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999993109983563	WITHOUT_CLASSIFICATION	6.890016436783456E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999993109983563	WITHOUT_CLASSIFICATION	6.890016436783456E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999993109983563	WITHOUT_CLASSIFICATION	6.890016436783456E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999993109983563	WITHOUT_CLASSIFICATION	6.890016436783456E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999993109983563	WITHOUT_CLASSIFICATION	6.890016436783456E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999993109983563	WITHOUT_CLASSIFICATION	6.890016436783456E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999993109983563	WITHOUT_CLASSIFICATION	6.890016436783456E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999993109983563	WITHOUT_CLASSIFICATION	6.890016436783456E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999993109983563	WITHOUT_CLASSIFICATION	6.890016436783456E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999993109983563	WITHOUT_CLASSIFICATION	6.890016436783456E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999993109983563	WITHOUT_CLASSIFICATION	6.890016436783456E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999993109983563	WITHOUT_CLASSIFICATION	6.890016436783456E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999993109983563	WITHOUT_CLASSIFICATION	6.890016436783456E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999993109983563	WITHOUT_CLASSIFICATION	6.890016436783456E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999993109983563	WITHOUT_CLASSIFICATION	6.890016436783456E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999993109983563	WITHOUT_CLASSIFICATION	6.890016436783456E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999993109983563	WITHOUT_CLASSIFICATION	6.890016436783456E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999993109983563	WITHOUT_CLASSIFICATION	6.890016436783456E-7	DEFECT
// do nothing	WITHOUT_CLASSIFICATION	0.999994464825439	WITHOUT_CLASSIFICATION	5.535174561055252E-6	DEFECT
// do nothing	WITHOUT_CLASSIFICATION	0.999994464825439	WITHOUT_CLASSIFICATION	5.535174561055252E-6	DEFECT
// do nothing	WITHOUT_CLASSIFICATION	0.999994464825439	WITHOUT_CLASSIFICATION	5.535174561055252E-6	DEFECT
// selectors are implicitly ANDed in DirectoryScanner.  To // revert their logic we wrap them into a <none> selector // instead.	WITHOUT_CLASSIFICATION	0.9999999997212822	WITHOUT_CLASSIFICATION	2.787178134329616E-10	DEFECT
// now wait until the spawned process is finished	WITHOUT_CLASSIFICATION	0.9999993602682032	WITHOUT_CLASSIFICATION	6.397317967564583E-7	DEFECT
// file doesn't exist -> property 'test' == null	WITHOUT_CLASSIFICATION	0.9999953084377752	WITHOUT_CLASSIFICATION	4.6915622248580235E-6	DEFECT
// we don't expect to find this	WITHOUT_CLASSIFICATION	0.9998687686426203	WITHOUT_CLASSIFICATION	1.312313573796886E-4	DEFECT
// we don't expect to find this	WITHOUT_CLASSIFICATION	0.9998687686426203	WITHOUT_CLASSIFICATION	1.312313573796886E-4	DEFECT
// ignore expected	WITHOUT_CLASSIFICATION	0.9999996892850863	WITHOUT_CLASSIFICATION	3.107149137984338E-7	DEFECT
// keep track of what operating systems are supported here.	WITHOUT_CLASSIFICATION	0.9999856979667486	WITHOUT_CLASSIFICATION	1.4302033251381369E-5	DEFECT
// if we followed the symlink we just made we should // bypass the excludes.	WITHOUT_CLASSIFICATION	0.9999997839667999	WITHOUT_CLASSIFICATION	2.1603319996382433E-7	DEFECT
// when the test is started by the build.xml of ant // if the property tests.and.ant.share.classloader is not set in the build.xml // a sysproperty with name tests.and.ant.share.classloader and value // ${tests.and.ant.share.classloader} will be set // we are trying to catch this here.	WITHOUT_CLASSIFICATION	0.9993666250675532	WITHOUT_CLASSIFICATION	6.333749324467173E-4	DEFECT
/*             * throw in drive letters             */	WITHOUT_CLASSIFICATION	0.9999787402626237	WITHOUT_CLASSIFICATION	2.1259737376370373E-5	DEFECT
/*             * promised to eliminate consecutive slashes after drive letter.             */	WITHOUT_CLASSIFICATION	0.9999996656504518	WITHOUT_CLASSIFICATION	3.343495482169156E-7	DEFECT
/*             * promised to eliminate consecutive slashes after drive letter.             */	WITHOUT_CLASSIFICATION	0.9999996656504518	WITHOUT_CLASSIFICATION	3.343495482169156E-7	DEFECT
/*             * promised to eliminate consecutive slashes after drive letter.             */	WITHOUT_CLASSIFICATION	0.9999996656504518	WITHOUT_CLASSIFICATION	3.343495482169156E-7	DEFECT
// avoid multiple configurations	WITHOUT_CLASSIFICATION	0.9999998569611123	WITHOUT_CLASSIFICATION	1.430388877141214E-7	DEFECT
// ------------------------------------------------------ //   Helper methods // -----------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999880384578756	WITHOUT_CLASSIFICATION	1.1961542124381664E-5	DEFECT
// make sure the cache is cleared.	WITHOUT_CLASSIFICATION	0.9999811768869575	WITHOUT_CLASSIFICATION	1.88231130424431E-5	DEFECT
//--- NULL JDBC driver just for simple test since there are no db driver // available as a default in Ant :)	WITHOUT_CLASSIFICATION	0.9999999993892874	WITHOUT_CLASSIFICATION	6.107124670104915E-10	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.9999948358234415	WITHOUT_CLASSIFICATION	5.164176558499725E-6	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.9999948358234415	WITHOUT_CLASSIFICATION	5.164176558499725E-6	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.9999948358234415	WITHOUT_CLASSIFICATION	5.164176558499725E-6	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.9999948358234415	WITHOUT_CLASSIFICATION	5.164176558499725E-6	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.9999948358234415	WITHOUT_CLASSIFICATION	5.164176558499725E-6	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.9999948358234415	WITHOUT_CLASSIFICATION	5.164176558499725E-6	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.9999948358234415	WITHOUT_CLASSIFICATION	5.164176558499725E-6	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.9999948358234415	WITHOUT_CLASSIFICATION	5.164176558499725E-6	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.9999948358234415	WITHOUT_CLASSIFICATION	5.164176558499725E-6	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.9999948358234415	WITHOUT_CLASSIFICATION	5.164176558499725E-6	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.9999948358234415	WITHOUT_CLASSIFICATION	5.164176558499725E-6	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.9999948358234415	WITHOUT_CLASSIFICATION	5.164176558499725E-6	DEFECT
// wait 1 second extra to allow for java to start ... // this time was OK on a Win NT machine and on nagoya	WITHOUT_CLASSIFICATION	0.9996677445501958	WITHOUT_CLASSIFICATION	3.3225544980420034E-4	DEFECT
// ------------------------------------------------------ //   Helper methods - should be in BuildFileTest // -----------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999871406924998	WITHOUT_CLASSIFICATION	1.285930750025019E-5	DEFECT
// ------------------------------------------------------ //   Helper methods - should be in BuildFileTest // -----------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999871406924998	WITHOUT_CLASSIFICATION	1.285930750025019E-5	DEFECT
// All three specified and all three exist -> true	WITHOUT_CLASSIFICATION	0.9999996917588675	WITHOUT_CLASSIFICATION	3.082411324197232E-7	DEFECT
// Specified class is "" -> can not exist	WITHOUT_CLASSIFICATION	0.9999489899274481	WITHOUT_CLASSIFICATION	5.101007255196962E-5	DEFECT
// Core class that exists in system classpath is ignored, but found in specified classpath	WITHOUT_CLASSIFICATION	0.9999996884277789	WITHOUT_CLASSIFICATION	3.1157222116015327E-7	DEFECT
// File is not found in specified filepath	WITHOUT_CLASSIFICATION	0.9999998032194441	WITHOUT_CLASSIFICATION	1.9678055592415857E-7	DEFECT
//ignored	WITHOUT_CLASSIFICATION	0.99999401170101	WITHOUT_CLASSIFICATION	5.988298989931007E-6	DEFECT
// basedir of subant/subant-test2/subant.xml is .. // therefore we expect here the subant subdirectory	WITHOUT_CLASSIFICATION	0.9999703745602921	WITHOUT_CLASSIFICATION	2.9625439707788214E-5	DEFECT
// 2 is != 0 and even, so it is considered // failure on any platform currently supported // by Execute#isFailure.	WITHOUT_CLASSIFICATION	0.9992624544622944	WITHOUT_CLASSIFICATION	7.375455377056649E-4	DEFECT
//         expectBuildExceptionContaining("testNoTld", //                 "Jasper found an error in a file", //                 "Java returned: 9");	WITHOUT_CLASSIFICATION	0.9999999627043524	WITHOUT_CLASSIFICATION	3.729564754825442E-8	DEFECT
// The captureToSummary test writes to stdout and stderr, good for // verifying that the TestListener support doesn't break anything.	WITHOUT_CLASSIFICATION	0.9999500939572653	WITHOUT_CLASSIFICATION	4.9906042734731396E-5	DEFECT
// testNoCrash is the test invoked by the captureToSummary's junit task	WITHOUT_CLASSIFICATION	0.9999999854538787	WITHOUT_CLASSIFICATION	1.4546121315915915E-8	DEFECT
// tests one the file object	WITHOUT_CLASSIFICATION	0.9999999072227248	WITHOUT_CLASSIFICATION	9.277727514291803E-8	DEFECT
// tests one the file object	WITHOUT_CLASSIFICATION	0.9999999072227248	WITHOUT_CLASSIFICATION	9.277727514291803E-8	DEFECT
// tests one the file object	WITHOUT_CLASSIFICATION	0.9999999072227248	WITHOUT_CLASSIFICATION	9.277727514291803E-8	DEFECT
// tests one the file object	WITHOUT_CLASSIFICATION	0.9999999072227248	WITHOUT_CLASSIFICATION	9.277727514291803E-8	DEFECT
// tests one the file object	WITHOUT_CLASSIFICATION	0.9999999072227248	WITHOUT_CLASSIFICATION	9.277727514291803E-8	DEFECT
// viewpath	WITHOUT_CLASSIFICATION	0.9999973322137536	WITHOUT_CLASSIFICATION	2.667786246264291E-6	DEFECT
// conversion to URL via FileUtils like in XMLResultAggregator, not as suggested in the bug report	WITHOUT_CLASSIFICATION	0.9999895130061786	WITHOUT_CLASSIFICATION	1.0486993821567561E-5	DEFECT
// conversion to URL via FileUtils like in XMLResultAggregator, not as suggested in the bug report	WITHOUT_CLASSIFICATION	0.9999895130061786	WITHOUT_CLASSIFICATION	1.0486993821567561E-5	DEFECT
// conversion to URL via FileUtils like in XMLResultAggregator, not as suggested in the bug report	WITHOUT_CLASSIFICATION	0.9999895130061786	WITHOUT_CLASSIFICATION	1.0486993821567561E-5	DEFECT
// conversion to URL via FileUtils like in XMLResultAggregator, not as suggested in the bug report	WITHOUT_CLASSIFICATION	0.9999895130061786	WITHOUT_CLASSIFICATION	1.0486993821567561E-5	DEFECT
// We have extra elements	WITHOUT_CLASSIFICATION	0.9999997352251274	WITHOUT_CLASSIFICATION	2.6477487254467813E-7	DEFECT
// Set up a VSSHistory task	WITHOUT_CLASSIFICATION	0.9999999489273764	WITHOUT_CLASSIFICATION	5.107262365637035E-8	DEFECT
// \ doesn't have a special meaning anymore - this is different from // what the Unix sh does but causes a lot of problems on DOS // based platforms otherwise	WITHOUT_CLASSIFICATION	0.9755366392072906	WITHOUT_CLASSIFICATION	0.024463360792709474	DEFECT
//check that dir and src are incompatible	WITHOUT_CLASSIFICATION	0.9999999182922984	WITHOUT_CLASSIFICATION	8.170770158963286E-8	DEFECT
// ================  testcases for the cache implementations  ================	WITHOUT_CLASSIFICATION	0.9999957196614842	WITHOUT_CLASSIFICATION	4.280338515930067E-6	DEFECT
// does the selection	WITHOUT_CLASSIFICATION	0.9999699329312853	WITHOUT_CLASSIFICATION	3.0067068714718962E-5	DEFECT
// ==============  testcases for the algorithm implementations  ==============	WITHOUT_CLASSIFICATION	0.9998553431899019	WITHOUT_CLASSIFICATION	1.4465681009817106E-4	DEFECT
// =====================  scenario tests  =====================	WITHOUT_CLASSIFICATION	0.9999993851615893	WITHOUT_CLASSIFICATION	6.148384107030511E-7	DEFECT
// info text // list of files // expected result // result	WITHOUT_CLASSIFICATION	0.9999997768546852	WITHOUT_CLASSIFICATION	2.2314531477953456E-7	DEFECT
//  =====================  helper methods and classes  ====================	WITHOUT_CLASSIFICATION	0.9999980727534284	WITHOUT_CLASSIFICATION	1.92724657155897E-6	DEFECT
// should be full moon	WITHOUT_CLASSIFICATION	0.9999910058393847	WITHOUT_CLASSIFICATION	8.994160615223262E-6	DEFECT
// Try a silly case	WITHOUT_CLASSIFICATION	0.9999958039528127	WITHOUT_CLASSIFICATION	4.196047187246457E-6	DEFECT
// java.home is bogus	WITHOUT_CLASSIFICATION	0.9999995642840874	WITHOUT_CLASSIFICATION	4.3571591257362827E-7	DEFECT
// 60s // a further 30s	WITHOUT_CLASSIFICATION	0.9999997974701808	WITHOUT_CLASSIFICATION	2.0252981921818357E-7	DEFECT
// 60s // a further 30s	WITHOUT_CLASSIFICATION	0.9999997974701808	WITHOUT_CLASSIFICATION	2.0252981921818357E-7	DEFECT
// 60s // a further 30s	WITHOUT_CLASSIFICATION	0.9999997974701808	WITHOUT_CLASSIFICATION	2.0252981921818357E-7	DEFECT
// order of headers cannot be guaranteed	WITHOUT_CLASSIFICATION	0.9999889100469638	WITHOUT_CLASSIFICATION	1.1089953036260015E-5	DEFECT
// order of headers cannot be guaranteed	WITHOUT_CLASSIFICATION	0.9999889100469638	WITHOUT_CLASSIFICATION	1.1089953036260015E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999554955215	WITHOUT_CLASSIFICATION	4.4504478498603726E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999554955215	WITHOUT_CLASSIFICATION	4.4504478498603726E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999554955215	WITHOUT_CLASSIFICATION	4.4504478498603726E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999554955215	WITHOUT_CLASSIFICATION	4.4504478498603726E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999554955215	WITHOUT_CLASSIFICATION	4.4504478498603726E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999554955215	WITHOUT_CLASSIFICATION	4.4504478498603726E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999554955215	WITHOUT_CLASSIFICATION	4.4504478498603726E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999554955215	WITHOUT_CLASSIFICATION	4.4504478498603726E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999554955215	WITHOUT_CLASSIFICATION	4.4504478498603726E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999554955215	WITHOUT_CLASSIFICATION	4.4504478498603726E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999554955215	WITHOUT_CLASSIFICATION	4.4504478498603726E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999554955215	WITHOUT_CLASSIFICATION	4.4504478498603726E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999554955215	WITHOUT_CLASSIFICATION	4.4504478498603726E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999554955215	WITHOUT_CLASSIFICATION	4.4504478498603726E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999554955215	WITHOUT_CLASSIFICATION	4.4504478498603726E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999554955215	WITHOUT_CLASSIFICATION	4.4504478498603726E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999554955215	WITHOUT_CLASSIFICATION	4.4504478498603726E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999554955215	WITHOUT_CLASSIFICATION	4.4504478498603726E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999554955215	WITHOUT_CLASSIFICATION	4.4504478498603726E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999554955215	WITHOUT_CLASSIFICATION	4.4504478498603726E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999554955215	WITHOUT_CLASSIFICATION	4.4504478498603726E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999554955215	WITHOUT_CLASSIFICATION	4.4504478498603726E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999554955215	WITHOUT_CLASSIFICATION	4.4504478498603726E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999554955215	WITHOUT_CLASSIFICATION	4.4504478498603726E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999554955215	WITHOUT_CLASSIFICATION	4.4504478498603726E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999554955215	WITHOUT_CLASSIFICATION	4.4504478498603726E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999554955215	WITHOUT_CLASSIFICATION	4.4504478498603726E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999554955215	WITHOUT_CLASSIFICATION	4.4504478498603726E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999554955215	WITHOUT_CLASSIFICATION	4.4504478498603726E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999554955215	WITHOUT_CLASSIFICATION	4.4504478498603726E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999554955215	WITHOUT_CLASSIFICATION	4.4504478498603726E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999554955215	WITHOUT_CLASSIFICATION	4.4504478498603726E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999554955215	WITHOUT_CLASSIFICATION	4.4504478498603726E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999554955215	WITHOUT_CLASSIFICATION	4.4504478498603726E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999554955215	WITHOUT_CLASSIFICATION	4.4504478498603726E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999554955215	WITHOUT_CLASSIFICATION	4.4504478498603726E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999554955215	WITHOUT_CLASSIFICATION	4.4504478498603726E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999554955215	WITHOUT_CLASSIFICATION	4.4504478498603726E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999554955215	WITHOUT_CLASSIFICATION	4.4504478498603726E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999554955215	WITHOUT_CLASSIFICATION	4.4504478498603726E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999554955215	WITHOUT_CLASSIFICATION	4.4504478498603726E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999554955215	WITHOUT_CLASSIFICATION	4.4504478498603726E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999554955215	WITHOUT_CLASSIFICATION	4.4504478498603726E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999554955215	WITHOUT_CLASSIFICATION	4.4504478498603726E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999554955215	WITHOUT_CLASSIFICATION	4.4504478498603726E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999554955215	WITHOUT_CLASSIFICATION	4.4504478498603726E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999554955215	WITHOUT_CLASSIFICATION	4.4504478498603726E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999554955215	WITHOUT_CLASSIFICATION	4.4504478498603726E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999554955215	WITHOUT_CLASSIFICATION	4.4504478498603726E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999554955215	WITHOUT_CLASSIFICATION	4.4504478498603726E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999554955215	WITHOUT_CLASSIFICATION	4.4504478498603726E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999554955215	WITHOUT_CLASSIFICATION	4.4504478498603726E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999554955215	WITHOUT_CLASSIFICATION	4.4504478498603726E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999554955215	WITHOUT_CLASSIFICATION	4.4504478498603726E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999554955215	WITHOUT_CLASSIFICATION	4.4504478498603726E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999554955215	WITHOUT_CLASSIFICATION	4.4504478498603726E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999554955215	WITHOUT_CLASSIFICATION	4.4504478498603726E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999554955215	WITHOUT_CLASSIFICATION	4.4504478498603726E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999554955215	WITHOUT_CLASSIFICATION	4.4504478498603726E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999554955215	WITHOUT_CLASSIFICATION	4.4504478498603726E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999554955215	WITHOUT_CLASSIFICATION	4.4504478498603726E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999554955215	WITHOUT_CLASSIFICATION	4.4504478498603726E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999554955215	WITHOUT_CLASSIFICATION	4.4504478498603726E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999554955215	WITHOUT_CLASSIFICATION	4.4504478498603726E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999554955215	WITHOUT_CLASSIFICATION	4.4504478498603726E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999554955215	WITHOUT_CLASSIFICATION	4.4504478498603726E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999554955215	WITHOUT_CLASSIFICATION	4.4504478498603726E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999554955215	WITHOUT_CLASSIFICATION	4.4504478498603726E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999554955215	WITHOUT_CLASSIFICATION	4.4504478498603726E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999554955215	WITHOUT_CLASSIFICATION	4.4504478498603726E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999554955215	WITHOUT_CLASSIFICATION	4.4504478498603726E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999554955215	WITHOUT_CLASSIFICATION	4.4504478498603726E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999554955215	WITHOUT_CLASSIFICATION	4.4504478498603726E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999554955215	WITHOUT_CLASSIFICATION	4.4504478498603726E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999554955215	WITHOUT_CLASSIFICATION	4.4504478498603726E-7	DEFECT
/*                            Ignore method m, as there is an overloaded                            form of this method that takes in a                            non-string argument, which gains higher                            priority.                        */	WITHOUT_CLASSIFICATION	0.999999997974085	WITHOUT_CLASSIFICATION	2.025914933478295E-9	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999998068383374	WITHOUT_CLASSIFICATION	1.9316166246942935E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999998068383374	WITHOUT_CLASSIFICATION	1.9316166246942935E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999998068383374	WITHOUT_CLASSIFICATION	1.9316166246942935E-7	DEFECT
/*                        If the argument is not a String or Location,                        and if there                        is an overloaded form of this method already defined,                        we just override that with the new one.                        This mechanism does not guarantee any specific order                        in which the methods will be selected: so any code                        that depends on the order in which "set" methods have                        been defined, is not guaranteed to be selected in any                        particular order.                    */	WITHOUT_CLASSIFICATION	0.999999999999134	WITHOUT_CLASSIFICATION	8.659478413993063E-13	DEFECT
// impossible as getMethods should only return public methods	WITHOUT_CLASSIFICATION	0.9999997604643281	WITHOUT_CLASSIFICATION	2.395356719480785E-7	DEFECT
// impossible as getMethods should only return public methods	WITHOUT_CLASSIFICATION	0.9999997604643281	WITHOUT_CLASSIFICATION	2.395356719480785E-7	DEFECT
// impossible as getMethods should only return public methods	WITHOUT_CLASSIFICATION	0.9999997604643281	WITHOUT_CLASSIFICATION	2.395356719480785E-7	DEFECT
// boolean and Boolean get special treatment because we // have a nice method in Project	WITHOUT_CLASSIFICATION	0.999999973912292	WITHOUT_CLASSIFICATION	2.6087707987270903E-8	DEFECT
// find the line breaks and pass other chars through in blocks	WITHOUT_CLASSIFICATION	0.9999759059477036	WITHOUT_CLASSIFICATION	2.4094052296375743E-5	DEFECT
// DataType can have a "no arg" constructor or take a single // Project argument.	WITHOUT_CLASSIFICATION	0.9999998520319995	WITHOUT_CLASSIFICATION	1.4796800059311478E-7	DEFECT
// all the names are the same: check if the class path of the loader // is the same	WITHOUT_CLASSIFICATION	0.9999986606793511	WITHOUT_CLASSIFICATION	1.33932064889473E-6	DEFECT
/* Interestingly enough, we get to here when a user                 * uses -Dname=value. However, in some cases, the OS                 * goes ahead and parses this out to args                 *   {"-Dname", "value"}                 * so instead of parsing on "=", we just make the "-D"                 * characters go away and skip one argument forward.                 *                 * I don't know how to predict when the JDK is going                 * to help or not, so we simply look for the equals sign.                 */	WITHOUT_CLASSIFICATION	0.9997553724099747	WITHOUT_CLASSIFICATION	2.4462759002534144E-4	DEFECT
// if parent is null, then we are at the root of the fs, // complain that we can't find the build file.	WITHOUT_CLASSIFICATION	0.999939185726309	WITHOUT_CLASSIFICATION	6.0814273690936116E-5	DEFECT
// put back the original security manager //The following will never eval to true. (PD)	WITHOUT_CLASSIFICATION	0.9999988339235735	WITHOUT_CLASSIFICATION	1.1660764265468038E-6	DEFECT
// ignore path elements which are invalid // relative to the project	WITHOUT_CLASSIFICATION	0.9999999883927704	WITHOUT_CLASSIFICATION	1.160722962287059E-8	DEFECT
// Ignore - we are interested only in the side // effect - that of getting the static initializers // invoked.  As we do not want to call a valid // constructor to get this side effect, an // attempt is made to call a hopefully // invalid constructor - come on, nobody // would have a constructor that takes in // 256 String arguments ;-) // (In fact, they can't - according to JVM spec // section 4.10, the number of method parameters is limited // to 255 by the definition of a method descriptor. // Constructors count as methods here.)	WITHOUT_CLASSIFICATION	0.9998224754304555	WITHOUT_CLASSIFICATION	1.775245695445033E-4	DEFECT
/*<URL>*/	WITHOUT_CLASSIFICATION	0.9997966129140285	WITHOUT_CLASSIFICATION	2.033870859714925E-4	DEFECT
/*<URL>*/	WITHOUT_CLASSIFICATION	0.9997966129140285	WITHOUT_CLASSIFICATION	2.033870859714925E-4	DEFECT
// 'sync' is needed - otherwise 2 threads can load the same class // twice, resulting in LinkageError: duplicated class definition. // findLoadedClass avoids that, but without sync it won't work.	WITHOUT_CLASSIFICATION	0.6428901488860614	WITHOUT_CLASSIFICATION	0.3571098511139385	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.999993225734014	WITHOUT_CLASSIFICATION	6.774265985996825E-6	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.999993225734014	WITHOUT_CLASSIFICATION	6.774265985996825E-6	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.999993225734014	WITHOUT_CLASSIFICATION	6.774265985996825E-6	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.999993225734014	WITHOUT_CLASSIFICATION	6.774265985996825E-6	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.999993225734014	WITHOUT_CLASSIFICATION	6.774265985996825E-6	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.999993225734014	WITHOUT_CLASSIFICATION	6.774265985996825E-6	DEFECT
// Not significant for the class loader.	WITHOUT_CLASSIFICATION	0.9999994540147241	WITHOUT_CLASSIFICATION	5.45985275882329E-7	DEFECT
// Not significant for the class loader.	WITHOUT_CLASSIFICATION	0.9999994540147241	WITHOUT_CLASSIFICATION	5.45985275882329E-7	DEFECT
// Not significant for the class loader.	WITHOUT_CLASSIFICATION	0.9999994540147241	WITHOUT_CLASSIFICATION	5.45985275882329E-7	DEFECT
// Not significant for the class loader.	WITHOUT_CLASSIFICATION	0.9999994540147241	WITHOUT_CLASSIFICATION	5.45985275882329E-7	DEFECT
// Not significant for the class loader.	WITHOUT_CLASSIFICATION	0.9999994540147241	WITHOUT_CLASSIFICATION	5.45985275882329E-7	DEFECT
// don't have to check for public, since // getConstructor finds public constructors only.	WITHOUT_CLASSIFICATION	0.9999998397209214	WITHOUT_CLASSIFICATION	1.6027907853532026E-7	DEFECT
//not a known type	WITHOUT_CLASSIFICATION	0.9997605095340721	WITHOUT_CLASSIFICATION	2.394904659279102E-4	DEFECT
// Initialize the globalFileSet's project	WITHOUT_CLASSIFICATION	0.999999831713896	WITHOUT_CLASSIFICATION	1.682861040549234E-7	DEFECT
// create a new Vector to avoid ConcurrentModificationExc when // the listeners get added/removed while we are in fire	WITHOUT_CLASSIFICATION	0.9999999771100442	WITHOUT_CLASSIFICATION	2.2889955844820948E-8	DEFECT
// first build exception	WITHOUT_CLASSIFICATION	0.9999997754209883	WITHOUT_CLASSIFICATION	2.2457901176685445E-7	DEFECT
// Not been visited	WITHOUT_CLASSIFICATION	0.9999996776923017	WITHOUT_CLASSIFICATION	3.2230769829774256E-7	DEFECT
// -------------------- Optional methods   -------------------- // You can override those methods if you want to optimize or // do advanced things (like support a special syntax). // The methods do not chain - you should use them when embedding ant // (by replacing the main helper)	WITHOUT_CLASSIFICATION	0.999947223318785	WITHOUT_CLASSIFICATION	5.277668121494001E-5	DEFECT
/*                fragments.addElement(value.substring(pos + 1, pos + 2));                prev = pos + 2;                */	WITHOUT_CLASSIFICATION	0.999999995572358	WITHOUT_CLASSIFICATION	4.4276419879212134E-9	DEFECT
//empty	WITHOUT_CLASSIFICATION	0.9999555957800104	WITHOUT_CLASSIFICATION	4.4404219989559545E-5	DEFECT
//empty	WITHOUT_CLASSIFICATION	0.9999555957800104	WITHOUT_CLASSIFICATION	4.4404219989559545E-5	DEFECT
// -------------------- Common properties  -------------------- // The following properties are required by import ( and other tasks // that read build files using ProjectHelper ).	WITHOUT_CLASSIFICATION	0.9999539308378447	WITHOUT_CLASSIFICATION	4.60691621553251E-5	DEFECT
// check to what is in the classname	WITHOUT_CLASSIFICATION	0.9999917878077449	WITHOUT_CLASSIFICATION	8.212192255017169E-6	DEFECT
//not included, do nothing	WITHOUT_CLASSIFICATION	0.9999940159515754	WITHOUT_CLASSIFICATION	5.984048424617654E-6	DEFECT
//not included, do nothing	WITHOUT_CLASSIFICATION	0.9999940159515754	WITHOUT_CLASSIFICATION	5.984048424617654E-6	DEFECT
// Attributes	WITHOUT_CLASSIFICATION	0.9999992203650651	WITHOUT_CLASSIFICATION	7.79634935004556E-7	DEFECT
// make sure we aren't going to get the path separator next	WITHOUT_CLASSIFICATION	0.9999752027108645	WITHOUT_CLASSIFICATION	2.4797289135565425E-5	DEFECT
// 'reasonable' default, if the component is used without // a Project ( for example as a standalone Bean ). // Most ant components can be used this way.	WITHOUT_CLASSIFICATION	0.9998391156541826	WITHOUT_CLASSIFICATION	1.6088434581739157E-4	DEFECT
// don't have to check for public, since // getMethod finds public method only. // don't have to check for abstract, since then // taskClass would be abstract too.	WITHOUT_CLASSIFICATION	0.9999976655613203	WITHOUT_CLASSIFICATION	2.3344386797623185E-6	DEFECT
// Mac	WITHOUT_CLASSIFICATION	0.9999959001337712	WITHOUT_CLASSIFICATION	4.099866228887659E-6	DEFECT
// set in/excludes to reasonable defaults if needed:	WITHOUT_CLASSIFICATION	0.9999997488290654	WITHOUT_CLASSIFICATION	2.5117093462030535E-7	DEFECT
// may be on a case insensitive file system.  We want // the results to show what's really on the disk, so // we need to double check.	WITHOUT_CLASSIFICATION	0.9999995990931573	WITHOUT_CLASSIFICATION	4.009068426889632E-7	DEFECT
// avoid double scanning of directories, can only happen in fast mode	WITHOUT_CLASSIFICATION	0.999988626891974	WITHOUT_CLASSIFICATION	1.1373108026041167E-5	DEFECT
// Usually the initialized is set to true. But here it must not. // Because the prepend and append readers have to be instantiated // on runtime //newFilter.setInitialized(true);	WITHOUT_CLASSIFICATION	0.9998537506657079	WITHOUT_CLASSIFICATION	1.4624933429208627E-4	DEFECT
// if at EOF with no characters in the buffer, return EOF	WITHOUT_CLASSIFICATION	0.9999999985728605	WITHOUT_CLASSIFICATION	1.4271394815910638E-9	DEFECT
// The current character is always emitted.	WITHOUT_CLASSIFICATION	0.9999994105761496	WITHOUT_CLASSIFICATION	5.894238503640162E-7	DEFECT
// The current character is always emitted.	WITHOUT_CLASSIFICATION	0.9999994105761496	WITHOUT_CLASSIFICATION	5.894238503640162E-7	DEFECT
// The current character is always emitted.	WITHOUT_CLASSIFICATION	0.9999994105761496	WITHOUT_CLASSIFICATION	5.894238503640162E-7	DEFECT
// The current character is always emitted.	WITHOUT_CLASSIFICATION	0.9999994105761496	WITHOUT_CLASSIFICATION	5.894238503640162E-7	DEFECT
// Fall tru	WITHOUT_CLASSIFICATION	0.9999974474633191	WITHOUT_CLASSIFICATION	2.5525366808358045E-6	DEFECT
// Fall tru	WITHOUT_CLASSIFICATION	0.9999974474633191	WITHOUT_CLASSIFICATION	2.5525366808358045E-6	DEFECT
// Fall tru	WITHOUT_CLASSIFICATION	0.9999974474633191	WITHOUT_CLASSIFICATION	2.5525366808358045E-6	DEFECT
// Fall tru	WITHOUT_CLASSIFICATION	0.9999974474633191	WITHOUT_CLASSIFICATION	2.5525366808358045E-6	DEFECT
// Works like clone() but doesn't show up in the Javadocs	WITHOUT_CLASSIFICATION	0.9999577406901934	WITHOUT_CLASSIFICATION	4.225930980657207E-5	DEFECT
// ----------------------------------------- //  Predefined filters // -----------------------------------------	WITHOUT_CLASSIFICATION	0.9999978509898322	WITHOUT_CLASSIFICATION	2.1490101677998746E-6	DEFECT
// -------------------------------------------- // //      Filter classes // // --------------------------------------------	WITHOUT_CLASSIFICATION	0.99998539108323	WITHOUT_CLASSIFICATION	1.4608916769976499E-5	DEFECT
// Execute the top-level target	WITHOUT_CLASSIFICATION	0.9999999757230456	WITHOUT_CLASSIFICATION	2.427695445456206E-8	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999990601516184	WITHOUT_CLASSIFICATION	9.398483815699614E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999990601516184	WITHOUT_CLASSIFICATION	9.398483815699614E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999990601516184	WITHOUT_CLASSIFICATION	9.398483815699614E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999990601516184	WITHOUT_CLASSIFICATION	9.398483815699614E-7	DEFECT
// Also check for properly formed URIs. Ant formerly recommended using // nonsense URIs such as "file:./foo.xml" in XML includes. You shouldn't // do that (just "foo.xml" is correct) but for compatibility we special-case // things when the path is not absolute, and fall back to the old parsing behavior.	WITHOUT_CLASSIFICATION	0.9992097195491204	WITHOUT_CLASSIFICATION	7.902804508795599E-4	DEFECT
//decide whether to copy the existing arg set, or //build a new one from the list of all args excluding the special //operations that only we handle	WITHOUT_CLASSIFICATION	0.9999999647902419	WITHOUT_CLASSIFICATION	3.5209758072175894E-8	DEFECT
// convert the replyTo string into a vector of emailaddresses	WITHOUT_CLASSIFICATION	0.9999986554848638	WITHOUT_CLASSIFICATION	1.344515136179852E-6	DEFECT
// private static final int BG_BLACK = 40; // private static final int BG_RED = 41; // private static final int BG_GREEN = 42; // private static final int BG_YELLOW = 44; // private static final int BG_BLUE = 44; // private static final int BG_MAGENTA = 45; // private static final int BG_CYAN = 46; // private static final int BG_WHITE = 47;	WITHOUT_CLASSIFICATION	0.9999999689066464	WITHOUT_CLASSIFICATION	3.109335355986361E-8	DEFECT
// If the file being added is META-INF/application.xml, we // warn if it's not the one specified in the "appxml" // attribute - or if it's being added twice, meaning the same // file is specified by the "appxml" attribute and in a // <fileset> element.	WITHOUT_CLASSIFICATION	0.9999999310606841	WITHOUT_CLASSIFICATION	6.893931588927642E-8	DEFECT
// class found but restricted name; this is // actually the case we're looking for in JDK 1.3+, // so catch the exception and return	WITHOUT_CLASSIFICATION	0.9999999808126916	WITHOUT_CLASSIFICATION	1.9187308402343572E-8	DEFECT
// Can return null to represent the bootstrap class loader. // see API docs of Class.getClassLoader.	WITHOUT_CLASSIFICATION	0.9999999996784656	WITHOUT_CLASSIFICATION	3.2153441020316815E-10	DEFECT
//default	WITHOUT_CLASSIFICATION	0.9999949387651701	WITHOUT_CLASSIFICATION	5.061234829982194E-6	DEFECT
//default	WITHOUT_CLASSIFICATION	0.9999949387651701	WITHOUT_CLASSIFICATION	5.061234829982194E-6	DEFECT
// use to scan own archive	WITHOUT_CLASSIFICATION	0.9999999860175193	WITHOUT_CLASSIFICATION	1.398248084433951E-8	DEFECT
// collect filesets to pass them to getResourcesToAdd	WITHOUT_CLASSIFICATION	0.9999996420207957	WITHOUT_CLASSIFICATION	3.579792043354399E-7	DEFECT
// If we're in this finally clause because of an // exception, we don't really care if there's an // exception when closing the stream. E.g. if it // throws "ZIP file must have at least one entry", // because an exception happened before we added // any files, then we must swallow this // exception. Otherwise, the error that's reported // will be the close() error, which is not the // real cause of the problem.	WITHOUT_CLASSIFICATION	0.9638989404477597	WITHOUT_CLASSIFICATION	0.03610105955224024	DEFECT
/*             * Bad luck.             *             * There are resources in the filesets that make the             * archive out of date, but not in the non-fileset             * resources. We need to rescan the non-FileSets to grab             * all of them now.             */	WITHOUT_CLASSIFICATION	0.9999975640675106	WITHOUT_CLASSIFICATION	2.435932489309558E-6	DEFECT
// ZIPs store time with a granularity of 2 seconds, round up	WITHOUT_CLASSIFICATION	0.9998944705244318	WITHOUT_CLASSIFICATION	1.0552947556828992E-4	DEFECT
/*             * ZipOutputStream.putNextEntry expects the ZipEntry to             * know its size and the CRC sum before you start writing             * the data when using STORED mode - unless it is seekable.             *             * This forces us to process the data twice.             */	WITHOUT_CLASSIFICATION	0.9999833520248835	WITHOUT_CLASSIFICATION	1.6647975116442967E-5	DEFECT
// may be altered in validate	WITHOUT_CLASSIFICATION	0.9999977144542858	WITHOUT_CLASSIFICATION	2.28554571426259E-6	DEFECT
//at this point the paths are set up with lists of files, //and the mapper is ready to map from source dirs to dest files //now we iterate through every JAR giving source and dest names // deal with the paths	WITHOUT_CLASSIFICATION	0.9999980880479429	WITHOUT_CLASSIFICATION	1.911952057028269E-6	DEFECT
//calculate our destination directory; it is either the destDir //attribute, or the base dir of the fileset (for in situ updates)	WITHOUT_CLASSIFICATION	0.9999999451522973	WITHOUT_CLASSIFICATION	5.484770277706884E-8	DEFECT
// Error messages	WITHOUT_CLASSIFICATION	0.9999933295595514	WITHOUT_CLASSIFICATION	6.670440448537244E-6	DEFECT
// Default the viewpath to basedir if it is not specified	WITHOUT_CLASSIFICATION	0.9999973772368638	WITHOUT_CLASSIFICATION	2.6227631363246654E-6	DEFECT
// Default the viewpath to basedir if it is not specified	WITHOUT_CLASSIFICATION	0.9999973772368638	WITHOUT_CLASSIFICATION	2.6227631363246654E-6	DEFECT
// Default the viewpath to basedir if it is not specified	WITHOUT_CLASSIFICATION	0.9999973772368638	WITHOUT_CLASSIFICATION	2.6227631363246654E-6	DEFECT
// Parse the attribute(s) and text of this node, adding // properties for each. // if the "path" attribute is specified, then return the created path // which will be passed to the children of this node.	WITHOUT_CLASSIFICATION	0.9999979704668382	WITHOUT_CLASSIFICATION	2.029533161782712E-6	DEFECT
// An arbitrary attribute.	WITHOUT_CLASSIFICATION	0.9999995514393177	WITHOUT_CLASSIFICATION	4.485606822286941E-7	DEFECT
// Return the Path we added or the ID of this node for // children to reference if needed.  Path objects are // definitely used by child path elements, and ID may be used // for a child text node.	WITHOUT_CLASSIFICATION	0.9999993158842291	WITHOUT_CLASSIFICATION	6.841157709109259E-7	DEFECT
// Fall Through	WITHOUT_CLASSIFICATION	0.9999833093004302	WITHOUT_CLASSIFICATION	1.6690699569710637E-5	DEFECT
// Fall Through	WITHOUT_CLASSIFICATION	0.9999833093004302	WITHOUT_CLASSIFICATION	1.6690699569710637E-5	DEFECT
// Ignore the problem	WITHOUT_CLASSIFICATION	0.999998822218542	WITHOUT_CLASSIFICATION	1.1777814581099096E-6	DEFECT
// If we're on windows, then do the comparison ignoring case // and treat the two directory characters the same	WITHOUT_CLASSIFICATION	0.9999989958720601	WITHOUT_CLASSIFICATION	1.0041279399172055E-6	DEFECT
// for NetWare and OS/2, piggy-back on Windows, since in the // validateSetup code, the same assumptions can be made as // with windows - that ; is the path separator	WITHOUT_CLASSIFICATION	0.9996922203103668	WITHOUT_CLASSIFICATION	3.077796896333368E-4	DEFECT
// END static class TemplateElement	WITHOUT_CLASSIFICATION	0.9999996615515473	WITHOUT_CLASSIFICATION	3.384484526921516E-7	DEFECT
////////////////////////////////////////////////////////////////////// // CONSTRUCTORS / INITIALIZERS	WITHOUT_CLASSIFICATION	0.9999942718523823	WITHOUT_CLASSIFICATION	5.728147617646393E-6	DEFECT
//value and property are mutually exclusive attributes	WITHOUT_CLASSIFICATION	0.9999867573959164	WITHOUT_CLASSIFICATION	1.324260408370957E-5	DEFECT
// Ignore Exception	WITHOUT_CLASSIFICATION	0.999999483282535	WITHOUT_CLASSIFICATION	5.167174651062055E-7	DEFECT
//int logLevel = filesetManifestConfig == null ? //    Project.MSG_WARN : Project.MSG_VERBOSE; //log("File " + file //    + " includes a META-INF/MANIFEST.MF which will be ignored. " //    + "To include this file, set filesetManifest to a value other " //    + "than 'skip'.", logLevel);	WITHOUT_CLASSIFICATION	0.9999999790704364	WITHOUT_CLASSIFICATION	2.0929563705465895E-8	DEFECT
// Create the directory, as it might not exist.	WITHOUT_CLASSIFICATION	0.9999503427902183	WITHOUT_CLASSIFICATION	4.965720978170763E-5	DEFECT
// Calculate the total checksum // Convert the keys (source files) into a sorted array.	WITHOUT_CLASSIFICATION	0.9999999758767947	WITHOUT_CLASSIFICATION	2.412320537280594E-8	DEFECT
// must not use getEntry as "well behaving" applications // must accept the manifest in any capitalization	WITHOUT_CLASSIFICATION	0.9999855262363961	WITHOUT_CLASSIFICATION	1.4473763603976344E-5	DEFECT
// We just set the prefix for this fileset, and pass it up.	WITHOUT_CLASSIFICATION	0.9999960158609106	WITHOUT_CLASSIFICATION	3.984139089381047E-6	DEFECT
// We just set the prefix for this fileset, and pass it up.	WITHOUT_CLASSIFICATION	0.9999960158609106	WITHOUT_CLASSIFICATION	3.984139089381047E-6	DEFECT
/*             * Precedence: manifestFile wins over inline manifest,             * over manifests read from the filesets over the original             * manifest.             *             * merge with null argument is a no-op             */	WITHOUT_CLASSIFICATION	0.9999998705854061	WITHOUT_CLASSIFICATION	1.294145939019432E-7	DEFECT
// filesets are separate from the rest for performance // reasons.  If we use the code for union below, we'll always // scan all filesets, even if we know the target is out of // date after the first test.	WITHOUT_CLASSIFICATION	0.9999999999539038	WITHOUT_CLASSIFICATION	4.609619778987415E-11	DEFECT
// If the archive is built for the first time and it is // matched by a resource collection, then it hasn't been // found in check (it hasn't been there) but will be // included now. // // for some strange reason the old code would simply skip // the entry and not fail, do the same now for backwards // compatibility reasons.  Without this, the which4j build // fails in Gump	WITHOUT_CLASSIFICATION	0.9999886121262042	WITHOUT_CLASSIFICATION	1.138787379588895E-5	DEFECT
// preserve permissions	WITHOUT_CLASSIFICATION	0.9999994375320777	WITHOUT_CLASSIFICATION	5.624679223730976E-7	DEFECT
// override permissions if set explicitly	WITHOUT_CLASSIFICATION	0.9999718121845433	WITHOUT_CLASSIFICATION	2.8187815456649627E-5	DEFECT
// Check if we can contact the URL	WITHOUT_CLASSIFICATION	0.9999995713697971	WITHOUT_CLASSIFICATION	4.2863020291981604E-7	DEFECT
// // Instance //	WITHOUT_CLASSIFICATION	0.9999994889068139	WITHOUT_CLASSIFICATION	5.110931860519191E-7	DEFECT
//the Exec OS check is different from Os.isOs(), which //probes for a specific OS. Instead it searches the os field //for the current os.name	WITHOUT_CLASSIFICATION	0.9999995321709193	WITHOUT_CLASSIFICATION	4.6782908071330124E-7	DEFECT
// Similar to a fileset, but doesn't allow dir attribute to be set	WITHOUT_CLASSIFICATION	0.9999969364502368	WITHOUT_CLASSIFICATION	3.0635497631780143E-6	DEFECT
// If the destination directory didn't already exist, // or was empty, then no previous file removal is necessary!	WITHOUT_CLASSIFICATION	0.9999998946145763	WITHOUT_CLASSIFICATION	1.0538542365336375E-7	DEFECT
// Default the viewpath to basedir if it is not specified	WITHOUT_CLASSIFICATION	0.9999973772368638	WITHOUT_CLASSIFICATION	2.6227631363246654E-6	DEFECT
// preserveInTarget would find all files we want to keep, // but we need to find all that we want to delete - so the // meaning of all patterns and selectors must be inverted	WITHOUT_CLASSIFICATION	0.999999985852906	WITHOUT_CLASSIFICATION	1.414709418889087E-8	DEFECT
//On VMS platform, we need to create a special java options file //containing the arguments and classpath for the java command. //The special file is supported by the "-V" switch on the VMS JVM.	WITHOUT_CLASSIFICATION	0.9999999119321503	WITHOUT_CLASSIFICATION	8.806784966272542E-8	DEFECT
// Do nothing if no resources (including nested text)	WITHOUT_CLASSIFICATION	0.9999989376383922	WITHOUT_CLASSIFICATION	1.0623616078217615E-6	DEFECT
// Windows has a 32k limit on total arg size, so // create a temporary file to store all the arguments	WITHOUT_CLASSIFICATION	0.999999615848216	WITHOUT_CLASSIFICATION	3.84151784087094E-7	DEFECT
// filesets has been protected so we need to keep that even after // switching to resource collections.  In fact, they will still // get a different treatment form the other resource collections // even in execute since we have some subtle special features like // switching type to "dir" when we encounter a DirSet that would // be more difficult to achieve otherwise.	WITHOUT_CLASSIFICATION	0.9999960927305727	WITHOUT_CLASSIFICATION	3.907269427256844E-6	DEFECT
// need to reset the stream handler to restart // reading of pipes; // go ahead and do it always w/ nested redirectors	WITHOUT_CLASSIFICATION	0.9999999691269904	WITHOUT_CLASSIFICATION	3.087300960194599E-8	DEFECT
/*             * if we get here, in and out have not been specified, we are             * in batch processing mode.             */	WITHOUT_CLASSIFICATION	0.9999999879411353	WITHOUT_CLASSIFICATION	1.2058864672593048E-8	DEFECT
//at this point there is one trailing space to remove, if the list is not empty.	WITHOUT_CLASSIFICATION	0.9999900136761379	WITHOUT_CLASSIFICATION	9.986323862151395E-6	DEFECT
// Ignore and keep trying	WITHOUT_CLASSIFICATION	0.9999998727198226	WITHOUT_CLASSIFICATION	1.2728017732430286E-7	DEFECT
// Chunk part of previous env var (UNIX env vars can // contain embedded new lines).	WITHOUT_CLASSIFICATION	0.9999977638129772	WITHOUT_CLASSIFICATION	2.236187022704475E-6	DEFECT
// Since we "look ahead" before adding, there's one last env var.	WITHOUT_CLASSIFICATION	0.9999995367959532	WITHOUT_CLASSIFICATION	4.632040468550032E-7	DEFECT
//noop default encoding used	WITHOUT_CLASSIFICATION	0.9999999643086779	WITHOUT_CLASSIFICATION	3.569132213022366E-8	DEFECT
// On OpenVMS Runtime#exec() doesn't support the environment array, // so we only return the new values which then will be set in // the generated DCL script, inheriting the parent process environment	WITHOUT_CLASSIFICATION	0.9992403882905896	WITHOUT_CLASSIFICATION	7.596117094103919E-4	DEFECT
// Locate the auxiliary script	WITHOUT_CLASSIFICATION	0.999999918157917	WITHOUT_CLASSIFICATION	8.184208295287177E-8	DEFECT
// Build the command	WITHOUT_CLASSIFICATION	0.9999324513780042	WITHOUT_CLASSIFICATION	6.754862199574564E-5	DEFECT
/*         * Writes the command into a temporary DCL script and returns the         * corresponding File object.  The script will be deleted on exit.         * @param cmd the command line to execute as an array of strings.         * @param env the environment to set as an array of strings.         * @return the command File.         * @throws IOException if errors are encountered creating the file.         */	WITHOUT_CLASSIFICATION	0.9999133750059381	WITHOUT_CLASSIFICATION	8.662499406186883E-5	DEFECT
//************************************************************************ //  protected and private methods //************************************************************************	WITHOUT_CLASSIFICATION	0.9999960223763219	WITHOUT_CLASSIFICATION	3.977623678133213E-6	DEFECT
// ensure that parent dir of dest file exists!	WITHOUT_CLASSIFICATION	0.9999972160822398	WITHOUT_CLASSIFICATION	2.783917760141046E-6	DEFECT
// add the single group arguments // Javadoc 1.2 rules: //   Multiple -group args allowed. //   Each arg includes 3 strings: -group [name] [packagelist]. //   Elements in [packagelist] are colon-delimited. //   An element in [packagelist] may end with the * wildcard.	WITHOUT_CLASSIFICATION	0.9999951701730032	WITHOUT_CLASSIFICATION	4.829826996729617E-6	DEFECT
// for each sourcePath entry, add a directoryset with includes // taken from packagenames attribute and nested package // elements and excludes taken from excludepackages attribute // and nested excludepackage elements	WITHOUT_CLASSIFICATION	0.9999897182206702	WITHOUT_CLASSIFICATION	1.0281779329958999E-5	DEFECT
// // Override the logging of output in order to filter out Generating // messages.  Generating messages are set to a priority of VERBOSE // unless they appear after what could be an informational message. //	WITHOUT_CLASSIFICATION	0.9999998921083555	WITHOUT_CLASSIFICATION	1.0789164442413239E-7	DEFECT
/* Methods below all add specific selectors */	WITHOUT_CLASSIFICATION	0.9999999382459035	WITHOUT_CLASSIFICATION	6.1754096515548E-8	DEFECT
/* Methods below all add specific selectors */	WITHOUT_CLASSIFICATION	0.9999999382459035	WITHOUT_CLASSIFICATION	6.1754096515548E-8	DEFECT
/* Methods below all add specific selectors */	WITHOUT_CLASSIFICATION	0.9999999382459035	WITHOUT_CLASSIFICATION	6.1754096515548E-8	DEFECT
/*               If verbosity is MSG_VERBOSE, that mean we are doing               regular logging (backwards as that sounds).  In that               case, we want to print one message about deleting the               top of the directory tree.  Otherwise, the removeDir               method will handle messages for _all_ directories.             */	WITHOUT_CLASSIFICATION	0.9999999987388747	WITHOUT_CLASSIFICATION	1.2611254013670855E-9	DEFECT
//hand down	WITHOUT_CLASSIFICATION	0.9999738483770827	WITHOUT_CLASSIFICATION	2.6151622917199973E-5	DEFECT
// create intermediary directories - sometimes zip don't add them	WITHOUT_CLASSIFICATION	0.9999999469641018	WITHOUT_CLASSIFICATION	5.303589815902461E-8	DEFECT
// SQL defines "--" as a comment to EOL // and in Oracle it may contain a hint // so we cannot just remove it, instead we must end it	WITHOUT_CLASSIFICATION	0.999999736816614	WITHOUT_CLASSIFICATION	2.631833858875249E-7	DEFECT
/*         * In Ant 1.1, <chmod dir="foo" /> means, change the permissions         * of directory foo, not anything inside of it.  This is the case the         * second branch of the if statement below catches for backwards         * compatibility.         */	WITHOUT_CLASSIFICATION	0.9999958693642207	WITHOUT_CLASSIFICATION	4.130635779311436E-6	DEFECT
/* for historical and performance reasons we have to do               things in a rather complex way.               (1) Move is optimized to move directories if a fileset               has been included completely, therefore FileSets need a               special treatment.  This is also required to support               the failOnError semantice (skip filesets with broken               basedir but handle the remaining collections).               (2) We carry around a few protected methods that work               on basedirs and arrays of names.  To optimize stuff, all               resources with the same basedir get collected in               separate lists and then each list is handled in one go.            */	WITHOUT_CLASSIFICATION	0.9061712333025255	WITHOUT_CLASSIFICATION	0.09382876669747454	DEFECT
//we create a fileset with the source file. //this lets us combine our logic for handling output directories, //mapping etc.	WITHOUT_CLASSIFICATION	0.999999849432458	WITHOUT_CLASSIFICATION	1.5056754189238026E-7	DEFECT
// if input files are specified, inputString and inputStream are ignored; // classes that work with redirector attributes can enforce // whatever warnings are needed	WITHOUT_CLASSIFICATION	0.9999996612094493	WITHOUT_CLASSIFICATION	3.387905506517488E-7	DEFECT
// Ignore exception	WITHOUT_CLASSIFICATION	0.9999992432253084	WITHOUT_CLASSIFICATION	7.567746914915228E-7	DEFECT
// Ignore exception	WITHOUT_CLASSIFICATION	0.9999992432253084	WITHOUT_CLASSIFICATION	7.567746914915228E-7	DEFECT
// Ignore exception	WITHOUT_CLASSIFICATION	0.9999992432253084	WITHOUT_CLASSIFICATION	7.567746914915228E-7	DEFECT
// classpath attributes go into a vector	WITHOUT_CLASSIFICATION	0.9999987120148894	WITHOUT_CLASSIFICATION	1.287985110556423E-6	DEFECT
// we have already started reading this section // this line is the first attribute. set it and then // let the normal read handle the rest	WITHOUT_CLASSIFICATION	0.9999999814665302	WITHOUT_CLASSIFICATION	1.8533469721635733E-8	DEFECT
//not modified so no file download. just return //instead and trace out something so the user //doesn't think that the download happened when it //didn't	WITHOUT_CLASSIFICATION	0.999999766353696	WITHOUT_CLASSIFICATION	2.3364630384608886E-7	DEFECT
// we have started to (over)write dest, but failed. // Try to delete the garbage we'd otherwise leave // behind.	WITHOUT_CLASSIFICATION	0.9999997247099103	WITHOUT_CLASSIFICATION	2.7529008973355036E-7	DEFECT
// start() would throw IllegalThreadStateException from // ThreadGroup.add if it were destroyed	WITHOUT_CLASSIFICATION	0.9999991495152515	WITHOUT_CLASSIFICATION	8.504847486027331E-7	DEFECT
// kjc-1.5A doesn't support -encoding option now. // but it will be supported near the feature.	WITHOUT_CLASSIFICATION	0.9996777537206326	WITHOUT_CLASSIFICATION	3.2224627936738E-4	DEFECT
// Create an instance of the compiler, redirecting output to // the project log	WITHOUT_CLASSIFICATION	0.9999975911352198	WITHOUT_CLASSIFICATION	2.4088647802734375E-6	DEFECT
// Setup the apt executable	WITHOUT_CLASSIFICATION	0.9999998026483454	WITHOUT_CLASSIFICATION	1.973516545316316E-7	DEFECT
//On VMS platform, we need to create a special java options file //containing the arguments and classpath for the javac command. //The special file is supported by the "-V" switch on the VMS JVM.	WITHOUT_CLASSIFICATION	0.99999992770161	WITHOUT_CLASSIFICATION	7.229838999571855E-8	DEFECT
//must keep for subclass BC, though unused: // CheckStyle:ConstantNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9999944471195112	WITHOUT_CLASSIFICATION	5.552880488769308E-6	DEFECT
// CheckStyle:ConstantNameCheck ON // CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999517335876	WITHOUT_CLASSIFICATION	4.826641234824607E-8	DEFECT
// add dest dir to classpath so that previously compiled and // untouched classes are on classpath	WITHOUT_CLASSIFICATION	0.9999999610523451	WITHOUT_CLASSIFICATION	3.894765485617266E-8	DEFECT
// add dest dir to classpath so that previously compiled and // untouched classes are on classpath	WITHOUT_CLASSIFICATION	0.9999999610523451	WITHOUT_CLASSIFICATION	3.894765485617266E-8	DEFECT
// For -sourcepath, use the "sourcepath" value if present. // Otherwise default to the "srcdir" value.	WITHOUT_CLASSIFICATION	0.9999999971403902	WITHOUT_CLASSIFICATION	2.859609822980667E-9	DEFECT
/*             * Many system have been reported to get into trouble with             * long command lines - no, not only Windows ;-).             *             * POSIX seems to define a lower limit of 4k, so use a temporary             * file if the total length of the command line exceeds this limit.             */	WITHOUT_CLASSIFICATION	0.9971892630463103	WITHOUT_CLASSIFICATION	0.002810736953689729	DEFECT
// there is a bootclasspath stated.  By default, the // includeJavaRuntime is false.  If the user has stated a // bootclasspath and said to include the java runtime, it's on // their head!	WITHOUT_CLASSIFICATION	0.9999842687848944	WITHOUT_CLASSIFICATION	1.5731215105559574E-5	DEFECT
//The following is data used while processing stdout of CVS command	WITHOUT_CLASSIFICATION	0.9999982226207319	WITHOUT_CLASSIFICATION	1.7773792680738582E-6	DEFECT
// The date format is using a - format since 1.12.9 so we have: // 1.12.9-: 'date: YYYY/mm/dd HH:mm:ss;  author: name;' // 1.12.9+: 'date: YYYY-mm-dd HH:mm:ss Z;  author: name'	WITHOUT_CLASSIFICATION	0.999998138680086	WITHOUT_CLASSIFICATION	1.8613199139303388E-6	DEFECT
// Default the viewpath to basedir if it is not specified	WITHOUT_CLASSIFICATION	0.9999973772368638	WITHOUT_CLASSIFICATION	2.6227631363246654E-6	DEFECT
// Default the viewpath to basedir if it is not specified	WITHOUT_CLASSIFICATION	0.9999973772368638	WITHOUT_CLASSIFICATION	2.6227631363246654E-6	DEFECT
// viewpath	WITHOUT_CLASSIFICATION	0.9999973322137536	WITHOUT_CLASSIFICATION	2.667786246264291E-6	DEFECT
// ClearCase items	WITHOUT_CLASSIFICATION	0.9999998670001473	WITHOUT_CLASSIFICATION	1.3299985265363892E-7	DEFECT
// ClearCase items	WITHOUT_CLASSIFICATION	0.9999998670001473	WITHOUT_CLASSIFICATION	1.3299985265363892E-7	DEFECT
// -branch	WITHOUT_CLASSIFICATION	0.9999980872083568	WITHOUT_CLASSIFICATION	1.912791643126537E-6	DEFECT
// -c	WITHOUT_CLASSIFICATION	0.9999882866562881	WITHOUT_CLASSIFICATION	1.171334371197989E-5	DEFECT
// entries are of the form: //CVS 1.11 // File module/filename is new; current revision 1.1 //CVS 1.11.9 // File module/filename is new; cvstag_2003_11_03_2  revision 1.1 // or // File module/filename changed from revision 1.4 to 1.6 // or // File module/filename is removed; not included in // release tag SKINLF_12 //CVS 1.11.9 // File testantoine/antoine.bat is removed; TESTANTOINE_1 revision 1.1.1.1 // // get rid of 'File module/"	WITHOUT_CLASSIFICATION	0.9999998830031785	WITHOUT_CLASSIFICATION	1.1699682136304828E-7	DEFECT
// CheckStyle:MemberNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9999990796323757	WITHOUT_CLASSIFICATION	9.203676243315108E-7	DEFECT
// We need character encoding aware printing here. // So, using PrintWriter over OutputStreamWriter instead of PrintStream	WITHOUT_CLASSIFICATION	0.9999972967661352	WITHOUT_CLASSIFICATION	2.703233864780486E-6	DEFECT
// convert from ascii back to native // encoding to convert to/from // Where to find input files // Where to put output files // Extension of output files if different	WITHOUT_CLASSIFICATION	0.9999892259650693	WITHOUT_CLASSIFICATION	1.0774034930676623E-5	DEFECT
// we are forced to fork ANTLR since there is a call // to System.exit() and there is nothing we can do // right now to avoid this. :-( (SBa) // I'm not removing this method to keep backward compatibility	WITHOUT_CLASSIFICATION	0.9999804129314396	WITHOUT_CLASSIFICATION	1.9587068560424354E-5	DEFECT
//error if both are empty, or both are set	WITHOUT_CLASSIFICATION	0.9999997453210409	WITHOUT_CLASSIFICATION	2.5467895916141005E-7	DEFECT
// hasCR is still true (for the second one)	WITHOUT_CLASSIFICATION	0.9999565968861531	WITHOUT_CLASSIFICATION	4.3403113846851764E-5	DEFECT
// should be the default, as it integrates better in ant.	WITHOUT_CLASSIFICATION	0.9999998111363521	WITHOUT_CLASSIFICATION	1.888636478754858E-7	DEFECT
// scan source and dest dirs to build up both copy lists and // compile lists //        scanDir(srcDir, destDir);	WITHOUT_CLASSIFICATION	0.9999998299176978	WITHOUT_CLASSIFICATION	1.700823021476903E-7	DEFECT
// if it's a non source file, copy it if a later date than the // dest // if it's a source file, see if the destination class file // needs to be recreated via compilation	WITHOUT_CLASSIFICATION	0.9999993491111574	WITHOUT_CLASSIFICATION	6.508888425622515E-7	DEFECT
// depending on implementation, XMLReader can yield hips of warning, // only output then if user explicitly asked for it	WITHOUT_CLASSIFICATION	0.9998052213412232	WITHOUT_CLASSIFICATION	1.947786587768136E-4	DEFECT
/* ========================================================================    *    * Instance variables.    */	WITHOUT_CLASSIFICATION	0.9999999215952782	WITHOUT_CLASSIFICATION	7.84047218981178E-8	DEFECT
// swallow	WITHOUT_CLASSIFICATION	0.9999938091705642	WITHOUT_CLASSIFICATION	6.1908294358028714E-6	DEFECT
// swallow	WITHOUT_CLASSIFICATION	0.9999938091705642	WITHOUT_CLASSIFICATION	6.1908294358028714E-6	DEFECT
// swallow	WITHOUT_CLASSIFICATION	0.9999938091705642	WITHOUT_CLASSIFICATION	6.1908294358028714E-6	DEFECT
// swallow	WITHOUT_CLASSIFICATION	0.9999938091705642	WITHOUT_CLASSIFICATION	6.1908294358028714E-6	DEFECT
// If only default is specified and the property previously // existed in the property file, it is unchanged.	WITHOUT_CLASSIFICATION	0.9999998537888842	WITHOUT_CLASSIFICATION	1.4621111573035578E-7	DEFECT
// make sure to close all handles, otherwise the garbage // collector will close them...whenever possible and // Windows may complain about not being able to delete files.	WITHOUT_CLASSIFICATION	0.9999974769479607	WITHOUT_CLASSIFICATION	2.5230520392833027E-6	DEFECT
// WARN: Don't use the StreamSource(File) ctor. It won't work with // xalan prior to 2.2 because of systemid bugs.	WITHOUT_CLASSIFICATION	0.8028558775419655	WITHOUT_CLASSIFICATION	0.19714412245803442	DEFECT
// build the command line from what we got the format // as specified in the CCM.EXE help	WITHOUT_CLASSIFICATION	0.999998431225451	WITHOUT_CLASSIFICATION	1.5687745490794682E-6	DEFECT
// implementation of org.apache.tools.ant.taskdefs.ExecuteStreamHandler interface	WITHOUT_CLASSIFICATION	0.9999992708739116	WITHOUT_CLASSIFICATION	7.291260883252528E-7	DEFECT
// Default the viewpath to basedir if it is not specified	WITHOUT_CLASSIFICATION	0.9999973772368638	WITHOUT_CLASSIFICATION	2.6227631363246654E-6	DEFECT
// Default the viewpath to basedir if it is not specified	WITHOUT_CLASSIFICATION	0.9999973772368638	WITHOUT_CLASSIFICATION	2.6227631363246654E-6	DEFECT
// Default the viewpath to basedir if it is not specified	WITHOUT_CLASSIFICATION	0.9999973772368638	WITHOUT_CLASSIFICATION	2.6227631363246654E-6	DEFECT
// Default the viewpath to basedir if it is not specified	WITHOUT_CLASSIFICATION	0.9999973772368638	WITHOUT_CLASSIFICATION	2.6227631363246654E-6	DEFECT
/*         * pre Ant 1.6 this method used to call getClass().getResource         * while Ant 1.6 will call ClassLoader.getResource().         *         * The difference is that Class.getResource expects a leading         * slash for "absolute" resources and will strip it before         * delegating to ClassLoader.getResource - so we now have to         * emulate Class's behavior.         */	WITHOUT_CLASSIFICATION	0.9999999984385043	WITHOUT_CLASSIFICATION	1.5614957903252459E-9	DEFECT
// -c	WITHOUT_CLASSIFICATION	0.9999882866562881	WITHOUT_CLASSIFICATION	1.171334371197989E-5	DEFECT
// -cfile	WITHOUT_CLASSIFICATION	0.9999980859713374	WITHOUT_CLASSIFICATION	1.914028662486347E-6	DEFECT
// -cfile	WITHOUT_CLASSIFICATION	0.9999980859713374	WITHOUT_CLASSIFICATION	1.914028662486347E-6	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.999992433239598	WITHOUT_CLASSIFICATION	7.566760402048574E-6	DEFECT
/* ------------- */	WITHOUT_CLASSIFICATION	0.9999722737211431	WITHOUT_CLASSIFICATION	2.7726278856849577E-5	DEFECT
// -I- or -I-Y or -I-N	WITHOUT_CLASSIFICATION	0.9999919174735514	WITHOUT_CLASSIFICATION	8.082526448644992E-6	DEFECT
// -I- or -I-Y or -I-N	WITHOUT_CLASSIFICATION	0.9999919174735514	WITHOUT_CLASSIFICATION	8.082526448644992E-6	DEFECT
// -I- or -I-Y or -I-N	WITHOUT_CLASSIFICATION	0.9999919174735514	WITHOUT_CLASSIFICATION	8.082526448644992E-6	DEFECT
// first off, make sure that we've got a command and a vssdir and a label ...	WITHOUT_CLASSIFICATION	0.9999856176852163	WITHOUT_CLASSIFICATION	1.4382314783669385E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999998068383374	WITHOUT_CLASSIFICATION	1.9316166246942935E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999998068383374	WITHOUT_CLASSIFICATION	1.9316166246942935E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999998068383374	WITHOUT_CLASSIFICATION	1.9316166246942935E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999998068383374	WITHOUT_CLASSIFICATION	1.9316166246942935E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999998068383374	WITHOUT_CLASSIFICATION	1.9316166246942935E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999998068383374	WITHOUT_CLASSIFICATION	1.9316166246942935E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999998068383374	WITHOUT_CLASSIFICATION	1.9316166246942935E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999998068383374	WITHOUT_CLASSIFICATION	1.9316166246942935E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999998068383374	WITHOUT_CLASSIFICATION	1.9316166246942935E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999998068383374	WITHOUT_CLASSIFICATION	1.9316166246942935E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999998068383374	WITHOUT_CLASSIFICATION	1.9316166246942935E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999998068383374	WITHOUT_CLASSIFICATION	1.9316166246942935E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999998068383374	WITHOUT_CLASSIFICATION	1.9316166246942935E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999998068383374	WITHOUT_CLASSIFICATION	1.9316166246942935E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999998068383374	WITHOUT_CLASSIFICATION	1.9316166246942935E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999998068383374	WITHOUT_CLASSIFICATION	1.9316166246942935E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999998068383374	WITHOUT_CLASSIFICATION	1.9316166246942935E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999998068383374	WITHOUT_CLASSIFICATION	1.9316166246942935E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999998068383374	WITHOUT_CLASSIFICATION	1.9316166246942935E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999998068383374	WITHOUT_CLASSIFICATION	1.9316166246942935E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999998068383374	WITHOUT_CLASSIFICATION	1.9316166246942935E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999998068383374	WITHOUT_CLASSIFICATION	1.9316166246942935E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999998068383374	WITHOUT_CLASSIFICATION	1.9316166246942935E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999998068383374	WITHOUT_CLASSIFICATION	1.9316166246942935E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999998068383374	WITHOUT_CLASSIFICATION	1.9316166246942935E-7	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.999992433239598	WITHOUT_CLASSIFICATION	7.566760402048574E-6	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.999992433239598	WITHOUT_CLASSIFICATION	7.566760402048574E-6	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.999992433239598	WITHOUT_CLASSIFICATION	7.566760402048574E-6	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.999992433239598	WITHOUT_CLASSIFICATION	7.566760402048574E-6	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.999992433239598	WITHOUT_CLASSIFICATION	7.566760402048574E-6	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.999992433239598	WITHOUT_CLASSIFICATION	7.566760402048574E-6	DEFECT
/* -------------------- */	WITHOUT_CLASSIFICATION	0.9999825305820003	WITHOUT_CLASSIFICATION	1.7469417999845533E-5	DEFECT
// -Y	WITHOUT_CLASSIFICATION	0.9999849802105599	WITHOUT_CLASSIFICATION	1.5019789440148973E-5	DEFECT
// -Y	WITHOUT_CLASSIFICATION	0.9999849802105599	WITHOUT_CLASSIFICATION	1.5019789440148973E-5	DEFECT
// -Y	WITHOUT_CLASSIFICATION	0.9999849802105599	WITHOUT_CLASSIFICATION	1.5019789440148973E-5	DEFECT
// VSS items	WITHOUT_CLASSIFICATION	0.9999970147699992	WITHOUT_CLASSIFICATION	2.985230000725794E-6	DEFECT
// VSS items	WITHOUT_CLASSIFICATION	0.9999970147699992	WITHOUT_CLASSIFICATION	2.985230000725794E-6	DEFECT
// skip version info and general purpose byte	WITHOUT_CLASSIFICATION	0.9999997849645768	WITHOUT_CLASSIFICATION	2.1503542320603244E-7	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.999992433239598	WITHOUT_CLASSIFICATION	7.566760402048574E-6	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.999992433239598	WITHOUT_CLASSIFICATION	7.566760402048574E-6	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.999992433239598	WITHOUT_CLASSIFICATION	7.566760402048574E-6	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.999992433239598	WITHOUT_CLASSIFICATION	7.566760402048574E-6	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.999992433239598	WITHOUT_CLASSIFICATION	7.566760402048574E-6	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.999992433239598	WITHOUT_CLASSIFICATION	7.566760402048574E-6	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.999992433239598	WITHOUT_CLASSIFICATION	7.566760402048574E-6	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.999992433239598	WITHOUT_CLASSIFICATION	7.566760402048574E-6	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.999992433239598	WITHOUT_CLASSIFICATION	7.566760402048574E-6	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.999992433239598	WITHOUT_CLASSIFICATION	7.566760402048574E-6	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.999992433239598	WITHOUT_CLASSIFICATION	7.566760402048574E-6	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.999992433239598	WITHOUT_CLASSIFICATION	7.566760402048574E-6	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.999992433239598	WITHOUT_CLASSIFICATION	7.566760402048574E-6	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.999992433239598	WITHOUT_CLASSIFICATION	7.566760402048574E-6	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.999992433239598	WITHOUT_CLASSIFICATION	7.566760402048574E-6	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.999992433239598	WITHOUT_CLASSIFICATION	7.566760402048574E-6	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.999992433239598	WITHOUT_CLASSIFICATION	7.566760402048574E-6	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.999992433239598	WITHOUT_CLASSIFICATION	7.566760402048574E-6	DEFECT
// first off, make sure that we've got a command and a vssdir and a label ...	WITHOUT_CLASSIFICATION	0.9999856176852163	WITHOUT_CLASSIFICATION	1.4382314783669385E-5	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.999992433239598	WITHOUT_CLASSIFICATION	7.566760402048574E-6	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.999992433239598	WITHOUT_CLASSIFICATION	7.566760402048574E-6	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.999992433239598	WITHOUT_CLASSIFICATION	7.566760402048574E-6	DEFECT
// we get the root classes and build up a set of // classes upon which they depend	WITHOUT_CLASSIFICATION	0.999996015968741	WITHOUT_CLASSIFICATION	3.984031258957986E-6	DEFECT
// read the constant pool in and resolve it	WITHOUT_CLASSIFICATION	0.9999966118256753	WITHOUT_CLASSIFICATION	3.3881743246371696E-6	DEFECT
/*         * Use the Runtime object to execute an external command.  Use the         * RedirectOutput inner class to direct the standard and error output         * from the command to the JRE's standard output         */	WITHOUT_CLASSIFICATION	0.9996385664285137	WITHOUT_CLASSIFICATION	3.6143357148634493E-4	DEFECT
/*         * Two Maps are used to track local DTDs that will be used in case the         * remote copies of these DTDs cannot be accessed.  The key for the Map         * is the DTDs public ID and the value is the local location for the DTD         */	WITHOUT_CLASSIFICATION	0.9999993721654963	WITHOUT_CLASSIFICATION	6.278345037488246E-7	DEFECT
// depFile exists and is newer than the class file // need to get dependency list from the map.	WITHOUT_CLASSIFICATION	0.9999503350355241	WITHOUT_CLASSIFICATION	4.9664964475854505E-5	DEFECT
// without closure we may delete an inner class but not the // top level class which would not trigger a recompile.	WITHOUT_CLASSIFICATION	0.9999234808207994	WITHOUT_CLASSIFICATION	7.651917920066725E-5	DEFECT
//always trigger file mode if commands are big enough	WITHOUT_CLASSIFICATION	0.9999018726596183	WITHOUT_CLASSIFICATION	9.812734038176339E-5	DEFECT
//fill in args	WITHOUT_CLASSIFICATION	0.9999967009054571	WITHOUT_CLASSIFICATION	3.299094542802768E-6	DEFECT
//fill in args	WITHOUT_CLASSIFICATION	0.9999967009054571	WITHOUT_CLASSIFICATION	3.299094542802768E-6	DEFECT
//iterate through the ref list & generate an entry for each //or just rely on the fact that the toString operator does this, but //noting that the separator is ';' on windows, ':' on unix	WITHOUT_CLASSIFICATION	0.9921382726030802	WITHOUT_CLASSIFICATION	0.007861727396919732	DEFECT
//now run the command of exe + settings + files	WITHOUT_CLASSIFICATION	0.9994426087719895	WITHOUT_CLASSIFICATION	5.573912280104161E-4	DEFECT
/*     * Directory where "source" EJB files are stored and where stubs and     * skeletons will also be written.     */	WITHOUT_CLASSIFICATION	0.9999965381372093	WITHOUT_CLASSIFICATION	3.461862790597653E-6	DEFECT
/*     * This Hashtable maintains a list of EJB class files processed by the ejbc     * utility (both "source" class files as well as stubs and skeletons). The     * key for the Hashtable is a String representing the path to the class file     * (relative to the destination directory).  The value for the Hashtable is     * a File object which reference the actual class file.     */	WITHOUT_CLASSIFICATION	0.9999999999655556	WITHOUT_CLASSIFICATION	3.444443138148704E-11	DEFECT
/* Execute the ejbc utility -- stubs/skeletons are rebuilt, if needed */	WITHOUT_CLASSIFICATION	0.999999335915064	WITHOUT_CLASSIFICATION	6.640849359784088E-7	DEFECT
// EJB's display name // EJB's home interface name // EJB's remote interface name // EJB's implementation class // EJB's primary key class // or "stateful" or "stateless" // Does this EJB support CMP? // Does this EJB support IIOP? // Does this EJB require failover? // CMP descriptor list	WITHOUT_CLASSIFICATION	0.9894178705315707	WITHOUT_CLASSIFICATION	0.010582129468429366	DEFECT
/* Check the timestamp on the EJB implementation class.             *             * Note that if ONLY the implementation class has changed, it's not             * necessary to rebuild the EJB stubs and skeletons.  For this             * reason, we ensure the file exists (using lastModified above), but             * we DON'T compare it's timestamp with the timestamps of the home             * and remote interfaces (because it's irrelevant in determining if             * ejbc must be run)             */	WITHOUT_CLASSIFICATION	0.9999999159766066	WITHOUT_CLASSIFICATION	8.40233933087357E-8	DEFECT
//classpath //add at the end of the classpath //the system classpath in order to find the tools.jar file	WITHOUT_CLASSIFICATION	0.9999940258887068	WITHOUT_CLASSIFICATION	5.974111293170218E-6	DEFECT
// ejb jar file	WITHOUT_CLASSIFICATION	0.9999998778519615	WITHOUT_CLASSIFICATION	1.2214803850686816E-7	DEFECT
//client jar file	WITHOUT_CLASSIFICATION	0.9999998830189998	WITHOUT_CLASSIFICATION	1.1698100022192611E-7	DEFECT
// Have to catch this because of the semantics of calling main()	WITHOUT_CLASSIFICATION	0.9999883365392438	WITHOUT_CLASSIFICATION	1.1663460756245891E-5	DEFECT
/* ------------- */	WITHOUT_CLASSIFICATION	0.9999722737211431	WITHOUT_CLASSIFICATION	2.7726278856849577E-5	DEFECT
/* ------------- */	WITHOUT_CLASSIFICATION	0.9999722737211431	WITHOUT_CLASSIFICATION	2.7726278856849577E-5	DEFECT
// descriptorName = <path><basename><basenameterminator><remainder> // examples = /org/objectweb/fooAppli/foo/Foo-ejb-jar.xml // examples = /org/objectweb/fooAppli/foo/Foo.xml (JOnAS convention)	WITHOUT_CLASSIFICATION	0.9999866800105212	WITHOUT_CLASSIFICATION	1.3319989478917403E-5	DEFECT
// class name (search in the classpath provided for the ejbjar element)	WITHOUT_CLASSIFICATION	0.999970108922931	WITHOUT_CLASSIFICATION	2.9891077069001438E-5	DEFECT
// additionalargs	WITHOUT_CLASSIFICATION	0.9999967280360251	WITHOUT_CLASSIFICATION	3.2719639749157508E-6	DEFECT
// get all the files in the descriptor directory	WITHOUT_CLASSIFICATION	0.9999973989667349	WITHOUT_CLASSIFICATION	2.601033265105246E-6	DEFECT
// If an explicit securityPolicy file was specified, it maybe an // absolute path.  Use the project to resolve it.	WITHOUT_CLASSIFICATION	0.9999987130868386	WITHOUT_CLASSIFICATION	1.286913161354764E-6	DEFECT
// Since the descriptor read properly, everything should be o.k.	WITHOUT_CLASSIFICATION	0.9999983265226651	WITHOUT_CLASSIFICATION	1.673477334970125E-6	DEFECT
// Lastly create File object for the Jar files. If we are using // a flat destination dir, then we need to redefine baseName!	WITHOUT_CLASSIFICATION	0.9999999838785555	WITHOUT_CLASSIFICATION	1.6121444543719163E-8	DEFECT
/*         * For the GenericDeploymentTool, do nothing.  Vendor specific         * subclasses should throw a BuildException if the configuration is         * invalid for their server.         */	WITHOUT_CLASSIFICATION	0.9999999643013959	WITHOUT_CLASSIFICATION	3.569860410094439E-8	DEFECT
// Get the filename of vendor specific descriptor	WITHOUT_CLASSIFICATION	0.9999999782744062	WITHOUT_CLASSIFICATION	2.1725593729099708E-8	DEFECT
// now that we have the weblogic descriptor, we parse the file // to find other descriptors needed to deploy the bean. // this could be the weblogic-cmp-rdbms.xml or any other O/R // mapping tool descriptors.	WITHOUT_CLASSIFICATION	0.9999895600772685	WITHOUT_CLASSIFICATION	1.043992273148808E-5	DEFECT
// Update with changed Bean class	WITHOUT_CLASSIFICATION	0.9999665705727604	WITHOUT_CLASSIFICATION	3.342942723966326E-5	DEFECT
// need to close files and perhaps rename output	WITHOUT_CLASSIFICATION	0.9999997188198986	WITHOUT_CLASSIFICATION	2.811801014550184E-7	DEFECT
// empty	WITHOUT_CLASSIFICATION	0.9999962767121857	WITHOUT_CLASSIFICATION	3.7232878143217396E-6	DEFECT
// empty	WITHOUT_CLASSIFICATION	0.9999962767121857	WITHOUT_CLASSIFICATION	3.7232878143217396E-6	DEFECT
// are any of the above out of date. // we find the implementation classes and see if they are older than any // of the above or the .ser file itself.	WITHOUT_CLASSIFICATION	0.9999998540759103	WITHOUT_CLASSIFICATION	1.4592408967238895E-7	DEFECT
/*     * Filenames of the standard EJB descriptor (which is passed to this class     * from the parent "ejbjar" task) and the iAS-specific EJB descriptor     * (whose name is determined by this class).  Both filenames are relative     * to the directory specified by the "srcdir" attribute in the ejbjar task.     */	WITHOUT_CLASSIFICATION	0.9999999417486507	WITHOUT_CLASSIFICATION	5.8251349339749844E-8	DEFECT
//remove the .class	WITHOUT_CLASSIFICATION	0.999992971176738	WITHOUT_CLASSIFICATION	7.028823261949313E-6	DEFECT
// create the output .jar, if required	WITHOUT_CLASSIFICATION	0.999999140841246	WITHOUT_CLASSIFICATION	8.591587540061617E-7	DEFECT
// change this to get the objects from the other reference	WITHOUT_CLASSIFICATION	0.9999997666043922	WITHOUT_CLASSIFICATION	2.3339560783504718E-7	DEFECT
// Available specification version must be >= required	WITHOUT_CLASSIFICATION	0.999999851045567	WITHOUT_CLASSIFICATION	1.4895443293506125E-7	DEFECT
// Implementation version must be >= required	WITHOUT_CLASSIFICATION	0.9999960488432724	WITHOUT_CLASSIFICATION	3.951156727492057E-6	DEFECT
//WARNING: We trim the values of all the attributes because //Some extension declarations are badly defined (ie have spaces //after version or vendorID)	WITHOUT_CLASSIFICATION	0.9998051202985802	WITHOUT_CLASSIFICATION	1.948797014199325E-4	DEFECT
/*     * Validates URL     */	WITHOUT_CLASSIFICATION	0.9999999026648272	WITHOUT_CLASSIFICATION	9.733517283812411E-8	DEFECT
// the new value, this needs to be here // because it is required to calculate the next position to // search from at the end of the loop	WITHOUT_CLASSIFICATION	0.901685345071367	WITHOUT_CLASSIFICATION	0.09831465492863305	DEFECT
// iterator through all the files and process them.	WITHOUT_CLASSIFICATION	0.9999999844278135	WITHOUT_CLASSIFICATION	1.5572186642583763E-8	DEFECT
// keys to optional attributes	WITHOUT_CLASSIFICATION	0.9999997690096362	WITHOUT_CLASSIFICATION	2.3099036375776094E-7	DEFECT
// use the directory containing the target as the output directory	WITHOUT_CLASSIFICATION	0.9999999996251361	WITHOUT_CLASSIFICATION	3.7486384416692035E-10	DEFECT
// null watchdog means no timeout, you'd better not check with null	WITHOUT_CLASSIFICATION	0.9999984749664524	WITHOUT_CLASSIFICATION	1.5250335475923338E-6	DEFECT
/*         * pre Ant 1.6 this method used to call getClass().getResource         * while Ant 1.6 will call ClassLoader.getResource().         *         * The difference is that Class.getResource expects a leading         * slash for "absolute" resources and will strip it before         * delegating to ClassLoader.getResource - so we now have to         * emulate Class's behavior.         */	WITHOUT_CLASSIFICATION	0.9999999984385043	WITHOUT_CLASSIFICATION	1.5614957903252459E-9	DEFECT
// this comment extract from JUnit Task may also apply here // "in VM is not very nice since it could probably hang the // whole build. IMHO this method should be avoided and it would be best // to remove it in future versions. TBD. (SBa)"	WITHOUT_CLASSIFICATION	0.9784321428719155	DEFECT	0.02156785712808446	WITHOUT_CLASSIFICATION
// not necessary as JDepend would fail, but why loose // some time?	WITHOUT_CLASSIFICATION	0.9999443558227138	WITHOUT_CLASSIFICATION	5.5644177286272554E-5	DEFECT
// not necessary as JDepend would fail, but why loose // some time?	WITHOUT_CLASSIFICATION	0.9999443558227138	WITHOUT_CLASSIFICATION	5.5644177286272554E-5	DEFECT
// not necessary as JDepend would fail, but why loose // some time?	WITHOUT_CLASSIFICATION	0.9999443558227138	WITHOUT_CLASSIFICATION	5.5644177286272554E-5	DEFECT
//do nothing	WITHOUT_CLASSIFICATION	0.9999935029599855	WITHOUT_CLASSIFICATION	6.4970400145264355E-6	DEFECT
//do nothing	WITHOUT_CLASSIFICATION	0.9999935029599855	WITHOUT_CLASSIFICATION	6.4970400145264355E-6	DEFECT
//If we get here, it could be because we are trying to put a //directory entry that already exists. //For example, we're trying to write "com", but a previous //entry from another mergefile was called "com". //In that case, just ignore the error and go on to the //next entry.	WITHOUT_CLASSIFICATION	0.9999999843502861	WITHOUT_CLASSIFICATION	1.564971386339661E-8	DEFECT
/*          First, some notes.          On MRJ 2.2.2, getting the size, compressed size, and CRC32 from the          ZipInputStream does not work for compressed (deflated) files.  Those calls return -1.          For uncompressed (stored) files, those calls do work.          However, using ZipFile.getEntries() works for both compressed and          uncompressed files.          Now, from some simple testing I did, it seems that the value of CRC-32 is          independent of the compression setting. So, it should be easy to pass this          information on to the output entry.        */	WITHOUT_CLASSIFICATION	0.996205079429844	WITHOUT_CLASSIFICATION	0.003794920570155919	DEFECT
// Quick return - no output do nothing.	WITHOUT_CLASSIFICATION	0.999999729666908	WITHOUT_CLASSIFICATION	2.7033309206505166E-7	DEFECT
// Self-describing as of JUnit 4 (#38811). But trim "(ClassName)".	WITHOUT_CLASSIFICATION	0.9999982669435414	WITHOUT_CLASSIFICATION	1.7330564585256022E-6	DEFECT
//the trick to integrating test output to the formatter, is to //create a special test class that asserts an error //and tell the formatter that it raised.	WITHOUT_CLASSIFICATION	0.9999999607816579	WITHOUT_CLASSIFICATION	3.9218342121351E-8	DEFECT
// ignored.	WITHOUT_CLASSIFICATION	0.9999993603662037	WITHOUT_CLASSIFICATION	6.396337962918409E-7	DEFECT
/*         * pre Ant 1.6 this method used to call getClass().getResource         * while Ant 1.6 will call ClassLoader.getResource().         *         * The difference is that Class.getResource expects a leading         * slash for "absolute" resources and will strip it before         * delegating to ClassLoader.getResource - so we now have to         * emulate Class's behavior.         */	WITHOUT_CLASSIFICATION	0.9999999984385043	WITHOUT_CLASSIFICATION	1.5614957903252459E-9	DEFECT
// okay we have a copy of the child, now the child becomes the parent // and we are iterating recursively over its children.	WITHOUT_CLASSIFICATION	0.9999994243961048	WITHOUT_CLASSIFICATION	5.756038952469782E-7	DEFECT
// See wrapListener for reason:	WITHOUT_CLASSIFICATION	0.999998990123588	WITHOUT_CLASSIFICATION	1.0098764120243542E-6	DEFECT
// if there is a suite method available, then try // to extract the suite from it. If there is an error // here it will be caught below and reported.	WITHOUT_CLASSIFICATION	0.9982526516691801	WITHOUT_CLASSIFICATION	0.0017473483308198107	DEFECT
// JUnit 4 does not distinguish between errors and failures // even in the JUnit 3 adapter. // So we need to help it a bit to retain compatibility for JUnit 3 tests.	WITHOUT_CLASSIFICATION	0.9999899146719061	WITHOUT_CLASSIFICATION	1.0085328093947478E-5	DEFECT
// sorted by newest Kaffe version first	WITHOUT_CLASSIFICATION	0.9999997031921561	WITHOUT_CLASSIFICATION	2.968078438704153E-7	DEFECT
//getProject().log("listing files in directory " + directory, Project.MSG_DEBUG);	WITHOUT_CLASSIFICATION	0.9999883780301942	WITHOUT_CLASSIFICATION	1.1621969805827081E-5	DEFECT
// to remove directories, start by the end of the list // the trunk does not let itself be removed before the leaves	WITHOUT_CLASSIFICATION	0.999994839805145	WITHOUT_CLASSIFICATION	5.1601948549581445E-6	DEFECT
// ignore it	WITHOUT_CLASSIFICATION	0.9999992402257348	WITHOUT_CLASSIFICATION	7.597742651007744E-7	DEFECT
// NumberFormatException or ArrayOutOfBondsException could happen here	WITHOUT_CLASSIFICATION	0.9990342781861935	WITHOUT_CLASSIFICATION	9.657218138064612E-4	DEFECT
//Throw exception on errors (except up-to-date) // //When a server is down, the code expects : //Perforce client error: //Connect to server failed; check $P4PORT. //TCP connect to localhost:1666 failed. //connect: localhost:1666: Connection refused //Some forms producing commands (p4 -s change -o) do tag the output //others don't..... //Others mark errors as info, for example edit a file //which is already open for edit..... //Just look for error: - catches most things....	WITHOUT_CLASSIFICATION	0.9999986861646849	WITHOUT_CLASSIFICATION	1.31383531507662E-6	DEFECT
// Because of the way I create the full target path, there // must be NO slash at the end of targetFolder and folderName // However, if the slash or backslash is the only character, leave it alone	WITHOUT_CLASSIFICATION	0.9999999527209267	WITHOUT_CLASSIFICATION	4.7279073373714804E-8	DEFECT
// Connect to the StarTeam server, and log on.	WITHOUT_CLASSIFICATION	0.9999999436096279	WITHOUT_CLASSIFICATION	5.639037217709041E-8	DEFECT
// Simplest constructor, uses default encryption algorithm and compression level.	WITHOUT_CLASSIFICATION	0.9999999832326063	WITHOUT_CLASSIFICATION	1.676739361344701E-8	DEFECT
// Create a variable dir that contains the name of // the StarTeam folder that is the root folder in this view. // Get the default path to the current view.	WITHOUT_CLASSIFICATION	0.9999999888222616	WITHOUT_CLASSIFICATION	1.117773851942315E-8	DEFECT
// We want to display the folder the same way you would // enter it on the command line ... so we remove the // View name (which is also the name of the root folder, // and therefore shows up at the start of the path).	WITHOUT_CLASSIFICATION	0.9994737572006523	WITHOUT_CLASSIFICATION	5.262427993475452E-4	DEFECT
// If we displayed the project, view, item type, or folder, // then show the list of relevant item properties.	WITHOUT_CLASSIFICATION	0.9999999893086309	WITHOUT_CLASSIFICATION	1.0691369156331177E-8	DEFECT
// If we find a "file" attribute then act on a file otherwise act on a project	WITHOUT_CLASSIFICATION	0.9999999466924427	WITHOUT_CLASSIFICATION	5.330755725607542E-8	DEFECT
// Special setters for the sub-classes	WITHOUT_CLASSIFICATION	0.9999998496750689	WITHOUT_CLASSIFICATION	1.5032493112615164E-7	DEFECT
// Special setters for the sub-classes	WITHOUT_CLASSIFICATION	0.9999998496750689	WITHOUT_CLASSIFICATION	1.5032493112615164E-7	DEFECT
// Login info is required	WITHOUT_CLASSIFICATION	0.99998055230863	WITHOUT_CLASSIFICATION	1.9447691370047887E-5	DEFECT
// Path to the SourceOffSite home directory /home/user/.sos	WITHOUT_CLASSIFICATION	0.9999998283250707	WITHOUT_CLASSIFICATION	1.716749293917763E-7	DEFECT
// Check if source is a directory	WITHOUT_CLASSIFICATION	0.9999995076208794	WITHOUT_CLASSIFICATION	4.923791205194256E-7	DEFECT
/*             *  There is a bug in JavaSound 0.90 (jdk1.3beta).             *  It prevents correct termination of the VM.             *  So we have to exit ourselves.             */	WITHOUT_CLASSIFICATION	0.9992373368676705	WITHOUT_CLASSIFICATION	7.626631323295132E-4	DEFECT
// Catch everything - some of the above return nulls, // throw exceptions or generally misbehave // in the event of a problem etc	WITHOUT_CLASSIFICATION	0.9999907288344411	WITHOUT_CLASSIFICATION	9.271165558833248E-6	DEFECT
// only track progress for files larger than 100kb in verbose mode	WITHOUT_CLASSIFICATION	0.9999862371143482	WITHOUT_CLASSIFICATION	1.3762885651866274E-5	DEFECT
// only track progress for files larger than 100kb in verbose mode	WITHOUT_CLASSIFICATION	0.9999862371143482	WITHOUT_CLASSIFICATION	1.3762885651866274E-5	DEFECT
// since filesize keeps on decreasing we have to store the // initial filesize	WITHOUT_CLASSIFICATION	0.9999999945553567	WITHOUT_CLASSIFICATION	5.44464327069696E-9	DEFECT
// note, it's important to scan the items BEFORE we make the // UnmatchedFileMap because that creates a bunch of NEW // folders and files (unattached to repository) and we // don't want to include those in our traversal.	WITHOUT_CLASSIFICATION	0.9999999647126051	WITHOUT_CLASSIFICATION	3.528739483093418E-8	DEFECT
// If the file doesn't pass the include/exclude tests, skip it.	WITHOUT_CLASSIFICATION	0.9999991987142816	WITHOUT_CLASSIFICATION	8.012857183861486E-7	DEFECT
// If the file doesn't pass the include/exclude tests, skip it.	WITHOUT_CLASSIFICATION	0.9999991987142816	WITHOUT_CLASSIFICATION	8.012857183861486E-7	DEFECT
// We try to update the status once to give StarTeam // another chance.	WITHOUT_CLASSIFICATION	0.9999999867992843	WITHOUT_CLASSIFICATION	1.3200715712872124E-8	DEFECT
// note, it's important to scan the items BEFORE we make the // Unmatched file map because that creates a bunch of NEW // folders and files (unattached to repository) and we // don't want to include those in our traversal.	WITHOUT_CLASSIFICATION	0.9999999422719217	WITHOUT_CLASSIFICATION	5.772807837249413E-8	DEFECT
// once we find a folder that isn't in the repository, // anything below it can be deleted.	WITHOUT_CLASSIFICATION	0.9999959024514617	WITHOUT_CLASSIFICATION	4.097548538322329E-6	DEFECT
/////////////////////////////////////////////////////////////// // default values for attributes. ///////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999998290628753	WITHOUT_CLASSIFICATION	1.7093712459744838E-7	DEFECT
// default behavior is to fail on an error // default behavior is to not overwrite // default behavior is make a single link	WITHOUT_CLASSIFICATION	0.9999819623805275	WITHOUT_CLASSIFICATION	1.8037619472584435E-5	DEFECT
// build the command line from what we got the format is // ss Add VSS items [-B] [-C] [-D-] [-H] [-I-] [-K] [-N] [-O] [-R] [-W] [-Y] [-?] // as specified in the SS.EXE help	WITHOUT_CLASSIFICATION	0.9999986459299078	WITHOUT_CLASSIFICATION	1.3540700920750637E-6	DEFECT
// build the command line from what we got the format is // ss Checkout VSS items [-G] [-C] [-H] [-I-] [-N] [-O] [-R] [-V] [-Y] [-?] // as specified in the SS.EXE help	WITHOUT_CLASSIFICATION	0.9999994295686392	WITHOUT_CLASSIFICATION	5.70431360863617E-7	DEFECT
// Not a .class file or the one we'd generate	WITHOUT_CLASSIFICATION	0.9999997946077352	WITHOUT_CLASSIFICATION	2.0539226467056218E-7	DEFECT
// We have the loader which is being used to load the // CatalogResolver. Can it see the ApacheResolver? The // base resolver will only be able to create the ApacheResolver // if it can see it - doesn't use the context loader.	WITHOUT_CLASSIFICATION	0.9999996587844662	WITHOUT_CLASSIFICATION	3.412155339200098E-7	DEFECT
// // Use the passed in base in preference to the base // from matchingEntry, which is either null or the // directory in which the external catalog file from // which it was obtained is located.  We make a copy // so matchingEntry's original base is untouched. // // This is the standard behavior as per my reading of // the JAXP and XML Catalog specs.  CKS 11/7/2002 //	WITHOUT_CLASSIFICATION	0.9999999955059711	WITHOUT_CLASSIFICATION	4.494028848496941E-9	DEFECT
// // Get Method instances for each of the methods we need to // call on the resolverImpl using reflection.  We can't // call them directly, because they require on the // xml-commons resolver library which may not be available // in the classpath. //	WITHOUT_CLASSIFICATION	0.9991533642971981	WITHOUT_CLASSIFICATION	8.466357028019534E-4	DEFECT
// // We didn't match a ResourceLocation, but since we // only support PUBLIC and URI entry types internally, // it is still possible that there is another entry in // an external catalog that will match.  We call // Apache resolver's resolveEntity method to cover // this possibility. //	WITHOUT_CLASSIFICATION	0.6684450411760191	DEFECT	0.33155495882398084	WITHOUT_CLASSIFICATION
// record data about the last scanned resource	WITHOUT_CLASSIFICATION	0.999999672931447	WITHOUT_CLASSIFICATION	3.270685530341295E-7	DEFECT
// path containing one or more elements	WITHOUT_CLASSIFICATION	0.9999999589975391	WITHOUT_CLASSIFICATION	4.1002460861321467E-8	DEFECT
// just append beginToken and search further	WITHOUT_CLASSIFICATION	0.9999998072885058	WITHOUT_CLASSIFICATION	1.9271149409339634E-7	DEFECT
//create the command to run Java, including user specified options	WITHOUT_CLASSIFICATION	0.9999999240636793	WITHOUT_CLASSIFICATION	7.593632067535345E-8	DEFECT
// JDK usage command line says that -jar must be the first option, as there is // a bug in JDK < 1.4 that forces the jvm type to be specified as the first // option, it is appended here as specified in the docs even though there is // in fact no order.	WITHOUT_CLASSIFICATION	0.9999999953318846	WITHOUT_CLASSIFICATION	4.6681154164310665E-9	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999998068383374	WITHOUT_CLASSIFICATION	1.9316166246942935E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999998068383374	WITHOUT_CLASSIFICATION	1.9316166246942935E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999998068383374	WITHOUT_CLASSIFICATION	1.9316166246942935E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999998068383374	WITHOUT_CLASSIFICATION	1.9316166246942935E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999998068383374	WITHOUT_CLASSIFICATION	1.9316166246942935E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999998068383374	WITHOUT_CLASSIFICATION	1.9316166246942935E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999998068383374	WITHOUT_CLASSIFICATION	1.9316166246942935E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999998068383374	WITHOUT_CLASSIFICATION	1.9316166246942935E-7	DEFECT
/* now check each Resource in case the child only           lets through files from any children IT may have: */	WITHOUT_CLASSIFICATION	0.9991926373538735	WITHOUT_CLASSIFICATION	8.07362646126477E-4	DEFECT
// Quick return: directories cannot be signed	WITHOUT_CLASSIFICATION	0.999493598063011	WITHOUT_CLASSIFICATION	5.064019369890121E-4	DEFECT
/**     * When using this as a custom selector, this method will be called.     * It translates each parameter into the appropriate setXXX() call.     *     * @param parameters the complete set of parameters for this selector     */	WITHOUT_CLASSIFICATION	0.9999932416234124	WITHOUT_CLASSIFICATION	6.7583765876102045E-6	DEFECT
/**     * When using this as a custom selector, this method will be called.     * It translates each parameter into the appropriate setXXX() call.     *     * @param parameters the complete set of parameters for this selector     */	WITHOUT_CLASSIFICATION	0.9999932416234124	WITHOUT_CLASSIFICATION	6.7583765876102045E-6	DEFECT
/**     * When using this as a custom selector, this method will be called.     * It translates each parameter into the appropriate setXXX() call.     *     * @param parameters the complete set of parameters for this selector     */	WITHOUT_CLASSIFICATION	0.9999932416234124	WITHOUT_CLASSIFICATION	6.7583765876102045E-6	DEFECT
/**     * When using this as a custom selector, this method will be called.     * It translates each parameter into the appropriate setXXX() call.     *     * @param parameters the complete set of parameters for this selector     */	WITHOUT_CLASSIFICATION	0.9999932416234124	WITHOUT_CLASSIFICATION	6.7583765876102045E-6	DEFECT
/**     * When using this as a custom selector, this method will be called.     * It translates each parameter into the appropriate setXXX() call.     *     * @param parameters the complete set of parameters for this selector     */	WITHOUT_CLASSIFICATION	0.9999932416234124	WITHOUT_CLASSIFICATION	6.7583765876102045E-6	DEFECT
/**     * When using this as a custom selector, this method will be called.     * It translates each parameter into the appropriate setXXX() call.     *     * @param parameters the complete set of parameters for this selector.     */	WITHOUT_CLASSIFICATION	0.9999963145940621	WITHOUT_CLASSIFICATION	3.68540593787537E-6	DEFECT
// // -----  Set default values  ----- //	WITHOUT_CLASSIFICATION	0.9999998595034003	WITHOUT_CLASSIFICATION	1.4049659970834392E-7	DEFECT
// nothing specified - use default	WITHOUT_CLASSIFICATION	0.9999999979453219	WITHOUT_CLASSIFICATION	2.0546781331280876E-9	DEFECT
// How to handle non-file-Resources? I copy temporarily the // resource to a file and use the file-implementation.	WITHOUT_CLASSIFICATION	0.99999998730742	WITHOUT_CLASSIFICATION	1.2692579981387816E-8	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9999927879202822	WITHOUT_CLASSIFICATION	7.2120797177645234E-6	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9999927879202822	WITHOUT_CLASSIFICATION	7.2120797177645234E-6	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9999927879202822	WITHOUT_CLASSIFICATION	7.2120797177645234E-6	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9999927879202822	WITHOUT_CLASSIFICATION	7.2120797177645234E-6	DEFECT
//find the out-of-date targets:	WITHOUT_CLASSIFICATION	0.99999972262577	WITHOUT_CLASSIFICATION	2.7737423004258833E-7	DEFECT
// write namespace declarations	WITHOUT_CLASSIFICATION	0.999999934815159	WITHOUT_CLASSIFICATION	6.51848409469009E-8	DEFECT
// Extrapolating from: // "NetWare may have a "java" in that directory, but 99% of // the time, you don't want to execute it" -- Jeff Tulley // <JTULLEY@novell.com>	WITHOUT_CLASSIFICATION	0.9849094292241447	WITHOUT_CLASSIFICATION	0.015090570775855376	DEFECT
// fall through	WITHOUT_CLASSIFICATION	0.9999803114519927	WITHOUT_CLASSIFICATION	1.9688548007316702E-5	DEFECT
// fall through	WITHOUT_CLASSIFICATION	0.9999803114519927	WITHOUT_CLASSIFICATION	1.9688548007316702E-5	DEFECT
// Check for bsf first then javax // This version does not check if the scriptManager // supports the language.	WITHOUT_CLASSIFICATION	0.9999961713717973	WITHOUT_CLASSIFICATION	3.8286282026169454E-6	DEFECT
// NotReached	WITHOUT_CLASSIFICATION	0.999999188629573	WITHOUT_CLASSIFICATION	8.113704269908293E-7	DEFECT
// NotReached	WITHOUT_CLASSIFICATION	0.999999188629573	WITHOUT_CLASSIFICATION	8.113704269908293E-7	DEFECT
//no need to synchronize, as Vector is always synchronized	WITHOUT_CLASSIFICATION	0.9999861412507097	WITHOUT_CLASSIFICATION	1.3858749290245223E-5	DEFECT
// Eliminate consecutive slashes after the drive spec:	WITHOUT_CLASSIFICATION	0.9999980980584144	WITHOUT_CLASSIFICATION	1.901941585569788E-6	DEFECT
//if it does not, then the file is not up to date.	WITHOUT_CLASSIFICATION	0.9999485002376574	WITHOUT_CLASSIFICATION	5.149976234272146E-5	DEFECT
// record destdir for later use in getResource	WITHOUT_CLASSIFICATION	0.9999997481154954	WITHOUT_CLASSIFICATION	2.518845045701049E-7	DEFECT
// Check to see if it's an inner class 'com.company.Class$Inner'	WITHOUT_CLASSIFICATION	0.9999996177337341	WITHOUT_CLASSIFICATION	3.822662659382807E-7	DEFECT
// treat non-matching groups as empty matches	WITHOUT_CLASSIFICATION	0.9999996006561385	WITHOUT_CLASSIFICATION	3.993438614590277E-7	DEFECT
// treat non-matching groups as empty matches	WITHOUT_CLASSIFICATION	0.9999996006561385	WITHOUT_CLASSIFICATION	3.993438614590277E-7	DEFECT
/*          A 6-byte block header, the value chosen arbitrarily          as 0x314159265359 :-).  A 32 bit value does not really          give a strong enough guarantee that the value will not          appear by chance in the compressed datastream.  Worst-case          probability of this event, for a 900k block, is about          2.0e-3 for 32 bits, 1.0e-5 for 40 bits and 4.0e-8 for 48 bits.          For a compressed file of size 100Gb -- about 100000 blocks --          only a 48-bit marker will do.  NB: normal compression/          decompression do *not* rely on these statistical properties.          They are only important when trying to recover blocks from          damaged files.        */	WITHOUT_CLASSIFICATION	0.9992033105624578	WITHOUT_CLASSIFICATION	7.96689437542112E-4	DEFECT
// write 8-bit	WITHOUT_CLASSIFICATION	0.999997377993408	WITHOUT_CLASSIFICATION	2.622006591898858E-6	DEFECT
// bsBuffShadow |= 0 << (32 - bsLiveShadow - 1);	WITHOUT_CLASSIFICATION	0.999998453379112	WITHOUT_CLASSIFICATION	1.5466208879523717E-6	DEFECT
// // inlined: bsW(len_selCtr[sfmap_i] & 0xff, //              code_selCtr[sfmap_i]); //	WITHOUT_CLASSIFICATION	0.9999995719914441	WITHOUT_CLASSIFICATION	4.2800855590774534E-7	DEFECT
// Following block contains unrolled code which could be shortened by // coding it in additional loops.	WITHOUT_CLASSIFICATION	0.9999954268480181	WITHOUT_CLASSIFICATION	4.573151981932439E-6	DEFECT
/*                  Complete the big bucket [ss] by quicksorting                  any unsorted small buckets [ss, j].  Hopefully                  previous pointer-scanning phases have already                  completed many of the small buckets [ss, j], so                  we don't have to sort them at all.            */	WITHOUT_CLASSIFICATION	0.9999999459093264	WITHOUT_CLASSIFICATION	5.409067350706952E-8	DEFECT
// Step 2: // Now scan this big bucket so as to synthesise the // sorted order for small buckets [t, ss] for all t != ss.	WITHOUT_CLASSIFICATION	0.9999997708239726	WITHOUT_CLASSIFICATION	2.2917602727335678E-7	DEFECT
//  900021 byte // 3600000 byte // 3600000 byte // ------------ // 8433529 byte // ============	WITHOUT_CLASSIFICATION	0.999983946747657	WITHOUT_CLASSIFICATION	1.6053252342926415E-5	DEFECT
// The clean way would be to throw an exception. //throw new IOException("crc error");	WITHOUT_CLASSIFICATION	0.9988169810439809	WITHOUT_CLASSIFICATION	0.0011830189560191801	DEFECT
// make next blocks readable without error // (repair feature, not yet documented, not tested)	WITHOUT_CLASSIFICATION	0.9999834912857423	WITHOUT_CLASSIFICATION	1.650871425777296E-5	DEFECT
/*          Setting up the unzftab entries here is not strictly          necessary, but it does save having to do it later          in a separate pass, and so saves a block's worth of          cache misses.        */	WITHOUT_CLASSIFICATION	0.9997912411391731	WITHOUT_CLASSIFICATION	2.0875886082697272E-4	DEFECT
// tt.length should always be >= length, but theoretically // it can happen, if the compressor mixed small and large // blocks.  Normally only the last block will be smaller // than others.	WITHOUT_CLASSIFICATION	0.930413848218745	WITHOUT_CLASSIFICATION	0.06958615178125506	DEFECT
// deprecated, but email is byte-oriented	WITHOUT_CLASSIFICATION	0.9999916182812133	WITHOUT_CLASSIFICATION	8.381718786714786E-6	DEFECT
// // NOTE // We have fit EOF, and the block is not full! // // This is a broken archive. It does not follow the standard // blocking algorithm. However, because we are generous, and // it requires little effort, we will simply ignore the error // and continue as if the entire block were read. This does // not appear to break anything upstream. We used to return // false in this case. // // Thanks to 'Yohann.Roussel@alcatel.fr' for this fix. //	WITHOUT_CLASSIFICATION	0.9989674016645086	WITHOUT_CLASSIFICATION	0.0010325983354913836	DEFECT
// version needed to extract // general purpose bit flag	WITHOUT_CLASSIFICATION	0.999996806960359	WITHOUT_CLASSIFICATION	3.1930396409275963E-6	DEFECT
// requires version 2 as we are going to store length info // in the data descriptor	WITHOUT_CLASSIFICATION	0.9999030159980868	WITHOUT_CLASSIFICATION	9.698400191316595E-5	DEFECT
// file comment	WITHOUT_CLASSIFICATION	0.9999952247601285	WITHOUT_CLASSIFICATION	4.775239871572113E-6	DEFECT
// swallow, throw the original exception instead	WITHOUT_CLASSIFICATION	0.9999758105916542	WITHOUT_CLASSIFICATION	2.4189408345895012E-5	DEFECT
/* compressed size                 */	WITHOUT_CLASSIFICATION	0.9999972774057261	WITHOUT_CLASSIFICATION	2.7225942738379742E-6	DEFECT
/* disk number start               */	WITHOUT_CLASSIFICATION	0.9999972908745569	WITHOUT_CLASSIFICATION	2.7091254430196525E-6	DEFECT
/* total number of entries in      */	WITHOUT_CLASSIFICATION	0.9999891663554777	WITHOUT_CLASSIFICATION	1.083364452236288E-5	DEFECT
/* total number of entries in      */	WITHOUT_CLASSIFICATION	0.9999891663554777	WITHOUT_CLASSIFICATION	1.083364452236288E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999450323885545	WITHOUT_CLASSIFICATION	5.496761144548306E-5	DEFECT
// This is turned off temporarily. There appears to be a bug // in SelectorUtils.matchPattern() where it is recursive on // Windows even if no ** is in pattern. //assertEquals("FFFTFFFFFFFF", results); // Unix // vs //assertEquals("FFFTFFFFTFFF", results); // Windows	DEFECT	0.9948313350270821	WITHOUT_CLASSIFICATION	0.005168664972917974	DEFECT
// check first that it is not already loaded otherwise // consecutive runs seems to end into an OutOfMemoryError // or it fails when there is a native library to load // several times. // this is far from being perfect but should work // in most cases.	DEFECT	0.9997497109538945	WITHOUT_CLASSIFICATION	2.502890461054216E-4	DEFECT
// FIXME formatters are not thread-safe	DEFECT	0.977772905364163	WITHOUT_CLASSIFICATION	0.02222709463583707	DEFECT
// the generated classes must not be added in the generic JAR! // is that buggy on old JOnAS (2.4) ??	DEFECT	0.9980171714339077	WITHOUT_CLASSIFICATION	0.001982828566092331	DEFECT
// I hate to admit it, but we don't know what happened // here.  Throw the Exception.	DEFECT	0.9971286774309461	WITHOUT_CLASSIFICATION	0.002871322569053855	DEFECT
// FIXME: Is "No Namespace is Empty Namespace" really OK?	DEFECT	0.7419227226970739	WITHOUT_CLASSIFICATION	0.25807727730292607	DEFECT
// pattern now holds ** while string is not exhausted // this will generate false positives but we can live with that.	DEFECT	0.995585351387615	WITHOUT_CLASSIFICATION	0.0044146486123850855	DEFECT
// todo: is this comment still relevant ?? // FIXME: need to use a SAXSource as the source for the transform // so we can plug in our own entity resolver	DEFECT	0.5354407587882519	WITHOUT_CLASSIFICATION	0.4645592412117481	DEFECT
// Just a note: StarTeam has a status for NEW which implies // that there is an item  on your local machine that is not // in the repository.  These are the items that show up as // NOT IN VIEW in the Starteam GUI. // One would think that we would want to perhaps checkin the // NEW items (not in all cases! - Steve Cohen 15 Dec 2001) // Unfortunately, the sdk doesn't really work, and we can't // actually see  anything with a status of NEW. That is why // we can just check out  everything here without worrying // about losing anything.	DEFECT	0.6695316849008993	WITHOUT_CLASSIFICATION	0.3304683150991006	DEFECT
// XXX: (Jon Skeet) The comment "if it hasn't been done already" may // not be strictly true. wrapper.maybeConfigure() won't configure the same // attributes/text more than once, but it may well add the children again, // unless I've missed something.	DEFECT	0.9998336927292849	WITHOUT_CLASSIFICATION	1.663072707150691E-4	DEFECT
// TODO: // A warning line, that shows code, which contains a variable // error will cause some trouble. The parser should definitely // be much better.	DEFECT	0.9528389509440255	WITHOUT_CLASSIFICATION	0.04716104905597465	DEFECT
// todo: is this comment still relevant ?? // FIXME: need to use a SAXSource as the source for the transform // so we can plug in our own entity resolver	DEFECT	0.5354407587882519	WITHOUT_CLASSIFICATION	0.4645592412117481	DEFECT
// FIXME this is actually not very cpu cycles friendly as we are converting from // dos to java while the underlying Sun implementation will convert // from java to dos time for internal storage...	DEFECT	0.9422000563604341	DEFECT	0.05779994363956581	WITHOUT_CLASSIFICATION
