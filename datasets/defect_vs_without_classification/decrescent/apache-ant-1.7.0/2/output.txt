/* BuildListener stuff */	WITHOUT_CLASSIFICATION	0.9999964559699998	WITHOUT_CLASSIFICATION	3.544030000135623E-6	DEFECT
// we don't expect to find this	WITHOUT_CLASSIFICATION	0.9999398387905084	WITHOUT_CLASSIFICATION	6.0161209491539786E-5	DEFECT
// ignore expected	WITHOUT_CLASSIFICATION	0.9999938976914782	WITHOUT_CLASSIFICATION	6.102308521746064E-6	DEFECT
// ignore expected	WITHOUT_CLASSIFICATION	0.9999938976914782	WITHOUT_CLASSIFICATION	6.102308521746064E-6	DEFECT
// tell the build it is finished	WITHOUT_CLASSIFICATION	0.999985558566366	WITHOUT_CLASSIFICATION	1.4441433633947587E-5	DEFECT
//end class	WITHOUT_CLASSIFICATION	0.9999992950614758	WITHOUT_CLASSIFICATION	7.049385242800135E-7	DEFECT
// keep track of what operating systems are supported here.	WITHOUT_CLASSIFICATION	0.9999334461271512	WITHOUT_CLASSIFICATION	6.65538728488317E-5	DEFECT
// father and child pattern test	WITHOUT_CLASSIFICATION	0.999998949496265	WITHOUT_CLASSIFICATION	1.0505037349741437E-6	DEFECT
// redo the test, but the 2 include patterns are inverted	WITHOUT_CLASSIFICATION	0.9999999642052086	WITHOUT_CLASSIFICATION	3.579479138482628E-8	DEFECT
// add conditions and more commands as soon as the need arises	WITHOUT_CLASSIFICATION	0.9999991915197514	WITHOUT_CLASSIFICATION	8.084802486601919E-7	DEFECT
// give ourselves some time for the system call // to execute... tweak if you have a really over // loaded system.	WITHOUT_CLASSIFICATION	0.9927609834488628	WITHOUT_CLASSIFICATION	0.007239016551137211	DEFECT
// followLinks should be true by default, but if this ever // changes we will need this line.	WITHOUT_CLASSIFICATION	0.9999996764985353	WITHOUT_CLASSIFICATION	3.2350146470949885E-7	DEFECT
//testing drive letter search from root:	WITHOUT_CLASSIFICATION	0.9999182333159007	WITHOUT_CLASSIFICATION	8.176668409936151E-5	DEFECT
//if this is our context we assume there must be something here:	WITHOUT_CLASSIFICATION	0.9999760085748305	WITHOUT_CLASSIFICATION	2.3991425169509674E-5	DEFECT
// This path should contain the class files for these testcases:	WITHOUT_CLASSIFICATION	0.9999885706061536	WITHOUT_CLASSIFICATION	1.1429393846419753E-5	DEFECT
// A special parent loader which is not the system class loader:	WITHOUT_CLASSIFICATION	0.9950854116424436	WITHOUT_CLASSIFICATION	0.00491458835755639	DEFECT
// A special parent loader which is not the system class loader:	WITHOUT_CLASSIFICATION	0.9950854116424436	WITHOUT_CLASSIFICATION	0.00491458835755639	DEFECT
// An AntClassLoader which is supposed to delegate to // the parent and then to the disk path:	WITHOUT_CLASSIFICATION	0.9999340248604821	WITHOUT_CLASSIFICATION	6.597513951794794E-5	DEFECT
// The intended result URLs:	WITHOUT_CLASSIFICATION	0.9999977282483914	WITHOUT_CLASSIFICATION	2.271751608591927E-6	DEFECT
// JDK 1.4: return Collections.list(e);	WITHOUT_CLASSIFICATION	0.9999994181718777	WITHOUT_CLASSIFICATION	5.818281223426401E-7	DEFECT
// override allowed on <available>	WITHOUT_CLASSIFICATION	0.999998347100943	WITHOUT_CLASSIFICATION	1.6528990568997538E-6	DEFECT
// ensure <tstamp>'s new prefix attribute is working	WITHOUT_CLASSIFICATION	0.9999051772843165	WITHOUT_CLASSIFICATION	9.48227156835256E-5	DEFECT
// ensure <tstamp> follows the immutability rule	WITHOUT_CLASSIFICATION	0.9999985756865448	WITHOUT_CLASSIFICATION	1.4243134552284902E-6	DEFECT
// ensure <condition> follows the immutability rule	WITHOUT_CLASSIFICATION	0.9999984084760764	WITHOUT_CLASSIFICATION	1.591523923679954E-6	DEFECT
// ensure <checksum> follows the immutability rule	WITHOUT_CLASSIFICATION	0.9999991643147965	WITHOUT_CLASSIFICATION	8.35685203422711E-7	DEFECT
// ensure <exec> follows the immutability rule	WITHOUT_CLASSIFICATION	0.9999963930796908	WITHOUT_CLASSIFICATION	3.6069203093075725E-6	DEFECT
// ensure <pathconvert> follows the immutability rule	WITHOUT_CLASSIFICATION	0.9999982883940887	WITHOUT_CLASSIFICATION	1.7116059113331993E-6	DEFECT
/*             * throw in drive letters             */	WITHOUT_CLASSIFICATION	0.9999826100548775	WITHOUT_CLASSIFICATION	1.7389945122509046E-5	DEFECT
/*             * promised to eliminate consecutive slashes after drive letter.             */	WITHOUT_CLASSIFICATION	0.9999995181307326	WITHOUT_CLASSIFICATION	4.818692674459702E-7	DEFECT
/*             * Start with simple absolute file names.             */	WITHOUT_CLASSIFICATION	0.9999999819886748	WITHOUT_CLASSIFICATION	1.801132524746313E-8	DEFECT
/*             * drive letters are not used, just to be considered as normal             * part of a name             */	WITHOUT_CLASSIFICATION	0.9999998799509687	WITHOUT_CLASSIFICATION	1.2004903121476105E-7	DEFECT
/*         * Now test some relative file name magic.         */	WITHOUT_CLASSIFICATION	0.9999999589755109	WITHOUT_CLASSIFICATION	4.102448908235715E-8	DEFECT
// fail, because buildfile contains two targets with the same name	WITHOUT_CLASSIFICATION	0.9999998503916876	WITHOUT_CLASSIFICATION	1.4960831250907558E-7	DEFECT
// overriding target from imported buildfile is allowed	WITHOUT_CLASSIFICATION	0.9999978045166389	WITHOUT_CLASSIFICATION	2.1954833611478298E-6	DEFECT
// the buildfile to use	WITHOUT_CLASSIFICATION	0.9999995969869157	WITHOUT_CLASSIFICATION	4.030130842395039E-7	DEFECT
// call a target	WITHOUT_CLASSIFICATION	0.9999998795567329	WITHOUT_CLASSIFICATION	1.2044326713991026E-7	DEFECT
//class-BFT	WITHOUT_CLASSIFICATION	0.9999928283037739	WITHOUT_CLASSIFICATION	7.171696226099193E-6	DEFECT
// override allowed on <available>	WITHOUT_CLASSIFICATION	0.999998347100943	WITHOUT_CLASSIFICATION	1.6528990568997538E-6	DEFECT
// ignore event	WITHOUT_CLASSIFICATION	0.9999704501702621	WITHOUT_CLASSIFICATION	2.9549829737926378E-5	DEFECT
// Check it's a read-only map.	WITHOUT_CLASSIFICATION	0.9999992694272036	WITHOUT_CLASSIFICATION	7.305727963420448E-7	DEFECT
// Check it's a read-only map.	WITHOUT_CLASSIFICATION	0.9999992694272036	WITHOUT_CLASSIFICATION	7.305727963420448E-7	DEFECT
/*         * JUnit 3.7 adds a getName method to TestCase - so we now         * have a name attribute in IntrospectionHelperTest if we run         * under JUnit 3.7 but not in earlier versions.         *         * Simply add it here and remove it after the tests.         */	WITHOUT_CLASSIFICATION	0.9999484153122538	WITHOUT_CLASSIFICATION	5.158468774614935E-5	DEFECT
// addConfigured(Hashtable) should come before addConfigured(Map)	WITHOUT_CLASSIFICATION	0.9999998581716983	WITHOUT_CLASSIFICATION	1.4182830163680797E-7	DEFECT
// INVALID extension point	WITHOUT_CLASSIFICATION	0.9999959539408376	WITHOUT_CLASSIFICATION	4.046059162367775E-6	DEFECT
// INVALID extension point	WITHOUT_CLASSIFICATION	0.9999959539408376	WITHOUT_CLASSIFICATION	4.046059162367775E-6	DEFECT
// Valid extension point	WITHOUT_CLASSIFICATION	0.9999985666202027	WITHOUT_CLASSIFICATION	1.4333797972404722E-6	DEFECT
// Valid extension point, more derived than Map above, but *after* it!	WITHOUT_CLASSIFICATION	0.9999981237749583	WITHOUT_CLASSIFICATION	1.8762250416086787E-6	DEFECT
// IntrospectionHelperTest	WITHOUT_CLASSIFICATION	0.999996674488821	WITHOUT_CLASSIFICATION	3.325511179083294E-6	DEFECT
// make sure we do not get a NPE	WITHOUT_CLASSIFICATION	0.9999851586802183	WITHOUT_CLASSIFICATION	1.4841319781797072E-5	DEFECT
// use an anonymous subclass since ProjectComponent is abstract	WITHOUT_CLASSIFICATION	0.9999990647629007	WITHOUT_CLASSIFICATION	9.352370993632905E-7	DEFECT
// ------------------------------------------------------ //   Helper methods // -----------------------------------------------------	WITHOUT_CLASSIFICATION	0.999993062768905	WITHOUT_CLASSIFICATION	6.937231095069602E-6	DEFECT
/* I wrote the testcases in one java file because I want also to test the * combined behaviour (see end of the class).*/	WITHOUT_CLASSIFICATION	0.9999895493947251	WITHOUT_CLASSIFICATION	1.045060527486767E-5	DEFECT
// check defaults	WITHOUT_CLASSIFICATION	0.9999999726257603	WITHOUT_CLASSIFICATION	2.7374239771452327E-8	DEFECT
// check defaults	WITHOUT_CLASSIFICATION	0.9999999726257603	WITHOUT_CLASSIFICATION	2.7374239771452327E-8	DEFECT
// check build.compiler provides defaults	WITHOUT_CLASSIFICATION	0.9999997628699582	WITHOUT_CLASSIFICATION	2.3713004177779586E-7	DEFECT
// setUserProperty to override system properties	WITHOUT_CLASSIFICATION	0.9999576612984082	WITHOUT_CLASSIFICATION	4.233870159178041E-5	DEFECT
// check attribute overrides build.compiler	WITHOUT_CLASSIFICATION	0.9999999717927589	WITHOUT_CLASSIFICATION	2.820724107711394E-8	DEFECT
// check attribute overrides build.compiler	WITHOUT_CLASSIFICATION	0.9999999717927589	WITHOUT_CLASSIFICATION	2.820724107711394E-8	DEFECT
// some database keys, see #getProperties(int)	WITHOUT_CLASSIFICATION	0.9999995146749917	WITHOUT_CLASSIFICATION	4.853250082192638E-7	DEFECT
// keys used in properties.	WITHOUT_CLASSIFICATION	0.999991586579463	WITHOUT_CLASSIFICATION	8.413420537124477E-6	DEFECT
//neither	WITHOUT_CLASSIFICATION	0.9999757961690912	WITHOUT_CLASSIFICATION	2.420383090889642E-5	DEFECT
/*     * PR 11100     */	WITHOUT_CLASSIFICATION	0.9999993919544141	WITHOUT_CLASSIFICATION	6.080455858845579E-7	DEFECT
// simple test to ensure that the caching does work...	WITHOUT_CLASSIFICATION	0.9999916843465986	WITHOUT_CLASSIFICATION	8.315653401436553E-6	DEFECT
// 2nd run..	WITHOUT_CLASSIFICATION	0.9999854182080609	WITHOUT_CLASSIFICATION	1.4581791939055068E-5	DEFECT
// the driver must still be cached.	WITHOUT_CLASSIFICATION	0.999999907071922	WITHOUT_CLASSIFICATION	9.292807807305368E-8	DEFECT
// look for the driver path...	WITHOUT_CLASSIFICATION	0.9999985521449067	WITHOUT_CLASSIFICATION	1.447855093194056E-6	DEFECT
//file time checks for java1.2+	WITHOUT_CLASSIFICATION	0.9999999302472856	WITHOUT_CLASSIFICATION	6.97527144338724E-8	DEFECT
//only test on java1.5+	WITHOUT_CLASSIFICATION	0.9999913920397965	WITHOUT_CLASSIFICATION	8.607960203511592E-6	DEFECT
// AntLikeTasksAtTopLevelTest	WITHOUT_CLASSIFICATION	0.9999996083632108	WITHOUT_CLASSIFICATION	3.9163678926113875E-7	DEFECT
//file length checks rely on touch generating a zero byte file	WITHOUT_CLASSIFICATION	0.9999966480981938	WITHOUT_CLASSIFICATION	3.351901806139325E-6	DEFECT
// no-op: not a real business error	WITHOUT_CLASSIFICATION	0.9995912735174441	WITHOUT_CLASSIFICATION	4.08726482555804E-4	DEFECT
//dont look for much text here as it is vendor and version dependent	WITHOUT_CLASSIFICATION	0.9994897680119267	WITHOUT_CLASSIFICATION	5.102319880733424E-4	DEFECT
// end of try-catch	WITHOUT_CLASSIFICATION	0.9999990906717406	WITHOUT_CLASSIFICATION	9.093282594293172E-7	DEFECT
// end of try-catch	WITHOUT_CLASSIFICATION	0.9999990906717406	WITHOUT_CLASSIFICATION	9.093282594293172E-7	DEFECT
/*     * PR 11100     */	WITHOUT_CLASSIFICATION	0.9999993919544141	WITHOUT_CLASSIFICATION	6.080455858845579E-7	DEFECT
/*     * PR 38973     */	WITHOUT_CLASSIFICATION	0.9999989858750641	WITHOUT_CLASSIFICATION	1.0141249359354053E-6	DEFECT
/*     * PR 11100     */	WITHOUT_CLASSIFICATION	0.9999993919544141	WITHOUT_CLASSIFICATION	6.080455858845579E-7	DEFECT
/*     * PR 16213     */	WITHOUT_CLASSIFICATION	0.999999413446452	WITHOUT_CLASSIFICATION	5.865535478775634E-7	DEFECT
/*     * PR 38973     */	WITHOUT_CLASSIFICATION	0.9999989858750641	WITHOUT_CLASSIFICATION	1.0141249359354053E-6	DEFECT
/*     * PR 21996     */	WITHOUT_CLASSIFICATION	0.9999992452365846	WITHOUT_CLASSIFICATION	7.547634154955767E-7	DEFECT
/*     * PR 10504     */	WITHOUT_CLASSIFICATION	0.999999495013547	WITHOUT_CLASSIFICATION	5.049864529287835E-7	DEFECT
/*     * PR 20969     */	WITHOUT_CLASSIFICATION	0.9999992352416471	WITHOUT_CLASSIFICATION	7.647583529501881E-7	DEFECT
// can't access the booleans in MyPrinter here (even if they // were static) since the MyPrinter instance that was used in // the test has likely been loaded via a different classloader // than this class.  Therefore we make the printer assert its // state and only check for the tail invocation.	WITHOUT_CLASSIFICATION	0.9999999191653431	WITHOUT_CLASSIFICATION	8.08346569034694E-8	DEFECT
// should get no output at all	WITHOUT_CLASSIFICATION	0.9999978113869927	WITHOUT_CLASSIFICATION	2.1886130073337856E-6	DEFECT
// should get no output at all	WITHOUT_CLASSIFICATION	0.9999978113869927	WITHOUT_CLASSIFICATION	2.1886130073337856E-6	DEFECT
// should get no output at all	WITHOUT_CLASSIFICATION	0.9999978113869927	WITHOUT_CLASSIFICATION	2.1886130073337856E-6	DEFECT
// should get no output at all	WITHOUT_CLASSIFICATION	0.9999978113869927	WITHOUT_CLASSIFICATION	2.1886130073337856E-6	DEFECT
//this call should succeed as unless overrides if	WITHOUT_CLASSIFICATION	0.9999995273324143	WITHOUT_CLASSIFICATION	4.7266758571968486E-7	DEFECT
// test that the watchdog ends the process	WITHOUT_CLASSIFICATION	0.9999998533987042	WITHOUT_CLASSIFICATION	1.466012957447746E-7	DEFECT
// test that the watchdog ends the process	WITHOUT_CLASSIFICATION	0.9999998533987042	WITHOUT_CLASSIFICATION	1.466012957447746E-7	DEFECT
// and a little shorter	WITHOUT_CLASSIFICATION	0.9999998987670751	WITHOUT_CLASSIFICATION	1.0123292497079381E-7	DEFECT
// test that the watchdog ends the process	WITHOUT_CLASSIFICATION	0.9999998533987042	WITHOUT_CLASSIFICATION	1.466012957447746E-7	DEFECT
// target must be specified	WITHOUT_CLASSIFICATION	0.9999999929730672	WITHOUT_CLASSIFICATION	7.026932856646698E-9	DEFECT
// Should fail since a recursion will occur...	WITHOUT_CLASSIFICATION	0.9998724319072658	WITHOUT_CLASSIFICATION	1.2756809273418458E-4	DEFECT
// a rather convoluted equals() test	WITHOUT_CLASSIFICATION	0.9999998322598097	WITHOUT_CLASSIFICATION	1.6774019041486008E-7	DEFECT
// <path> swallows the basedir, it seems //assertTrue(!getProject().resolveFile("A").exists());	WITHOUT_CLASSIFICATION	0.9999966895839626	WITHOUT_CLASSIFICATION	3.3104160374885226E-6	DEFECT
// allow this as imported in targets are only tested when a target is run	WITHOUT_CLASSIFICATION	0.9999980881898585	WITHOUT_CLASSIFICATION	1.9118101415331733E-6	DEFECT
// deactivate this test as imports within targets are not allowed	WITHOUT_CLASSIFICATION	0.9999998796296528	WITHOUT_CLASSIFICATION	1.2037034715635323E-7	DEFECT
// Running on Windows or something, so skip it.	WITHOUT_CLASSIFICATION	0.999997024297792	WITHOUT_CLASSIFICATION	2.975702207993694E-6	DEFECT
// remove log file from testSpawn	WITHOUT_CLASSIFICATION	0.9999989203487384	WITHOUT_CLASSIFICATION	1.0796512616683436E-6	DEFECT
// this is guaranteed by FileUtils#createTempFile	WITHOUT_CLASSIFICATION	0.9999990783192727	WITHOUT_CLASSIFICATION	9.216807273481247E-7	DEFECT
// let's be nice with the next generation of developers	WITHOUT_CLASSIFICATION	0.9999963796634003	WITHOUT_CLASSIFICATION	3.6203365998212554E-6	DEFECT
//executeTarget("setup"); //commented out for performance while target is empty	WITHOUT_CLASSIFICATION	0.9999997625037756	WITHOUT_CLASSIFICATION	2.374962243714577E-7	DEFECT
// target // file // exptected string	WITHOUT_CLASSIFICATION	0.9999999495036358	WITHOUT_CLASSIFICATION	5.0496364246922176E-8	DEFECT
// END class ManifestClassPathTest	WITHOUT_CLASSIFICATION	0.9999986883994977	WITHOUT_CLASSIFICATION	1.3116005023217681E-6	DEFECT
//      assertTrue("return code is invalid: " + retCode, retCode!=0);	WITHOUT_CLASSIFICATION	0.9999971412178028	WITHOUT_CLASSIFICATION	2.858782197301989E-6	DEFECT
// test a process that runs and failed	WITHOUT_CLASSIFICATION	0.9999998218849615	WITHOUT_CLASSIFICATION	1.7811503852104764E-7	DEFECT
// process should abort	WITHOUT_CLASSIFICATION	0.9999998335521945	WITHOUT_CLASSIFICATION	1.664478056402038E-7	DEFECT
// I assume that starting this takes less than TIME_OUT/2 ms...	WITHOUT_CLASSIFICATION	0.9999973570202707	WITHOUT_CLASSIFICATION	2.642979729276658E-6	DEFECT
// wait for TIME_OUT/2, there should be about TIME_OUT/2 ms remaining before timeout	WITHOUT_CLASSIFICATION	0.9999731349600727	WITHOUT_CLASSIFICATION	2.686503992737904E-5	DEFECT
// now stop the watchdog.	WITHOUT_CLASSIFICATION	0.999999907648043	WITHOUT_CLASSIFICATION	9.235195696611954E-8	DEFECT
// wait for the thread to die, should be the end of the process	WITHOUT_CLASSIFICATION	0.9999951496122771	WITHOUT_CLASSIFICATION	4.850387722928219E-6	DEFECT
// process should be dead and well finished	WITHOUT_CLASSIFICATION	0.9999998423327637	WITHOUT_CLASSIFICATION	1.5766723628669438E-7	DEFECT
// We have to compare the decompressed content instead:	WITHOUT_CLASSIFICATION	0.999982672517145	WITHOUT_CLASSIFICATION	1.7327482854988135E-5	DEFECT
//no point in setting a message	WITHOUT_CLASSIFICATION	0.9999814543748407	WITHOUT_CLASSIFICATION	1.854562515925639E-5	DEFECT
// this is guaranteed by FileUtils#createTempFile	WITHOUT_CLASSIFICATION	0.9999990783192727	WITHOUT_CLASSIFICATION	9.216807273481247E-7	DEFECT
// make the spawned process run 4 seconds	WITHOUT_CLASSIFICATION	0.9999995745894662	WITHOUT_CLASSIFICATION	4.2541053378103995E-7	DEFECT
// this loop runs parallel to the build	WITHOUT_CLASSIFICATION	0.9999981675475449	WITHOUT_CLASSIFICATION	1.8324524550985983E-6	DEFECT
// security	WITHOUT_CLASSIFICATION	0.9999982411819284	WITHOUT_CLASSIFICATION	1.7588180715930594E-6	DEFECT
// time of the build in milli seconds	WITHOUT_CLASSIFICATION	0.9999957115528328	WITHOUT_CLASSIFICATION	4.288447167069073E-6	DEFECT
// Nothing specified -> Fail	WITHOUT_CLASSIFICATION	0.9999999514436071	WITHOUT_CLASSIFICATION	4.8556392944984003E-8	DEFECT
// Only property specified -> Fail	WITHOUT_CLASSIFICATION	0.9999945261441888	WITHOUT_CLASSIFICATION	5.473855811186722E-6	DEFECT
// Only file specified -> Fail	WITHOUT_CLASSIFICATION	0.9999997942787494	WITHOUT_CLASSIFICATION	2.0572125060274142E-7	DEFECT
// file does exist -> property 'test' == 'true'	WITHOUT_CLASSIFICATION	0.9999905920090278	WITHOUT_CLASSIFICATION	9.407990972163349E-6	DEFECT
// resource doesn't exist -> property 'test' == null	WITHOUT_CLASSIFICATION	0.9999929883045416	WITHOUT_CLASSIFICATION	7.011695458388444E-6	DEFECT
// resource does exist -> property 'test' == 'true'	WITHOUT_CLASSIFICATION	0.9999933256032322	WITHOUT_CLASSIFICATION	6.674396767792213E-6	DEFECT
// class doesn't exist -> property 'test' == null	WITHOUT_CLASSIFICATION	0.9999911713797951	WITHOUT_CLASSIFICATION	8.828620204957223E-6	DEFECT
// class does exist -> property 'test' == 'true'	WITHOUT_CLASSIFICATION	0.9999942875340824	WITHOUT_CLASSIFICATION	5.712465917590429E-6	DEFECT
// All three specified but class missing -> null	WITHOUT_CLASSIFICATION	0.999997944755562	WITHOUT_CLASSIFICATION	2.0552444379702E-6	DEFECT
// Specified property-name is "" -> true	WITHOUT_CLASSIFICATION	0.9999984812124365	WITHOUT_CLASSIFICATION	1.5187875634357706E-6	DEFECT
// Specified file is "" -> invalid files do not exist	WITHOUT_CLASSIFICATION	0.9999992498633137	WITHOUT_CLASSIFICATION	7.501366864245101E-7	DEFECT
// Specified file is "" actually a directory, so it should pass	WITHOUT_CLASSIFICATION	0.9999996400643719	WITHOUT_CLASSIFICATION	3.5993562812105393E-7	DEFECT
// Specified resource is "" -> can such a thing exist?	WITHOUT_CLASSIFICATION	0.9999999563965694	WITHOUT_CLASSIFICATION	4.360343061021671E-8	DEFECT
/*     * returns non null IBM JDK 1.3 Linux     */	WITHOUT_CLASSIFICATION	0.9999949057478627	WITHOUT_CLASSIFICATION	5.094252137419497E-6	DEFECT
// Specified dir is "" -> this is the current directory and should // always exist	WITHOUT_CLASSIFICATION	0.9999946900036417	WITHOUT_CLASSIFICATION	5.309996358268275E-6	DEFECT
// Specified dir is "../taskdefs" -> should exist since it's the // location of the buildfile used...	WITHOUT_CLASSIFICATION	0.9999964234607069	WITHOUT_CLASSIFICATION	3.5765392930128365E-6	DEFECT
// Specified dir is "../this_dir_should_never_exist" -> null	WITHOUT_CLASSIFICATION	0.99999781396127	WITHOUT_CLASSIFICATION	2.186038730007145E-6	DEFECT
// Invalid type specified	WITHOUT_CLASSIFICATION	0.9999999632258486	WITHOUT_CLASSIFICATION	3.677415131497066E-8	DEFECT
// Core class that exists in system classpath is ignored	WITHOUT_CLASSIFICATION	0.9999967873152685	WITHOUT_CLASSIFICATION	3.212684731380376E-6	DEFECT
// Core class that exists in system classpath is not ignored with ignoresystemclass="false"	WITHOUT_CLASSIFICATION	0.9994240866257663	WITHOUT_CLASSIFICATION	5.759133742337021E-4	DEFECT
// Core class that exists in system classpath is not ignored with default ignoresystemclasses value	WITHOUT_CLASSIFICATION	0.9999261567203975	WITHOUT_CLASSIFICATION	7.38432796024771E-5	DEFECT
// Class is found in specified classpath	WITHOUT_CLASSIFICATION	0.9999996222045751	WITHOUT_CLASSIFICATION	3.7779542493740033E-7	DEFECT
// File is not found in specified filepath	WITHOUT_CLASSIFICATION	0.9999980815935106	WITHOUT_CLASSIFICATION	1.9184064894679377E-6	DEFECT
// test when file begins with basedir twice	WITHOUT_CLASSIFICATION	0.9999998364417031	WITHOUT_CLASSIFICATION	1.6355829695043762E-7	DEFECT
// test for searching parents	WITHOUT_CLASSIFICATION	0.9999992855201283	WITHOUT_CLASSIFICATION	7.14479871627993E-7	DEFECT
// test for not searching parents	WITHOUT_CLASSIFICATION	0.9999739689635109	WITHOUT_CLASSIFICATION	2.6031036489069015E-5	DEFECT
// Output the default excludes	WITHOUT_CLASSIFICATION	0.9999999204473726	WITHOUT_CLASSIFICATION	7.955262742333205E-8	DEFECT
// adding something to the excludes'	WITHOUT_CLASSIFICATION	0.9999988596135893	WITHOUT_CLASSIFICATION	1.1403864107731244E-6	DEFECT
// removing something from the defaults	WITHOUT_CLASSIFICATION	0.9999999097165788	WITHOUT_CLASSIFICATION	9.028342125929788E-8	DEFECT
//CVS missing	WITHOUT_CLASSIFICATION	0.9999715785541666	WITHOUT_CLASSIFICATION	2.8421445833410477E-5	DEFECT
// target must be specified	WITHOUT_CLASSIFICATION	0.9999999929730672	WITHOUT_CLASSIFICATION	7.026932856646698E-9	DEFECT
// We try to delete the directory created in CopydirTest	WITHOUT_CLASSIFICATION	0.9999998485279322	WITHOUT_CLASSIFICATION	1.514720678443328E-7	DEFECT
// check that both arrays have the same size	WITHOUT_CLASSIFICATION	0.9999995172879277	WITHOUT_CLASSIFICATION	4.827120723719691E-7	DEFECT
//instance variable to allow cleanup	WITHOUT_CLASSIFICATION	0.9999983866983666	WITHOUT_CLASSIFICATION	1.6133016333632539E-6	DEFECT
//ignored	WITHOUT_CLASSIFICATION	0.9999751649630865	WITHOUT_CLASSIFICATION	2.4835036913447422E-5	DEFECT
// What's the working directory?  If local, then its the // folder of the input file.  Otherwise, its the "current" dir..	WITHOUT_CLASSIFICATION	0.9999714789345737	WITHOUT_CLASSIFICATION	2.8521065426276562E-5	DEFECT
// Set a property on the project to make sure that loading // a property with the same name from an xml file will // *not* change it.	WITHOUT_CLASSIFICATION	0.9999939077163762	WITHOUT_CLASSIFICATION	6.092283623700071E-6	DEFECT
//printProperties(p.getProperties());	WITHOUT_CLASSIFICATION	0.9998046644418478	WITHOUT_CLASSIFICATION	1.9533555815213013E-4	DEFECT
// Every key identified by the Properties must have been loaded.	WITHOUT_CLASSIFICATION	0.9999660339563318	WITHOUT_CLASSIFICATION	3.396604366830117E-5	DEFECT
// The property is the name of a file.  We are testing // a location attribute, so we need to resolve the given // file name in the provided folder.	WITHOUT_CLASSIFICATION	0.9999978410075461	WITHOUT_CLASSIFICATION	2.1589924538825093E-6	DEFECT
// Substitute .xml with .properties	WITHOUT_CLASSIFICATION	0.9999940467641837	WITHOUT_CLASSIFICATION	5.953235816290462E-6	DEFECT
// basedir of subant/subant-test1/subant.xml is .. // therefore we expect here the subant/subant-test1 subdirectory	WITHOUT_CLASSIFICATION	0.9999615391664736	WITHOUT_CLASSIFICATION	3.846083352652193E-5	DEFECT
// Output an empty String	WITHOUT_CLASSIFICATION	0.9999988084820153	WITHOUT_CLASSIFICATION	1.1915179847335275E-6	DEFECT
// Output 'OUTPUT OF ECHO'	WITHOUT_CLASSIFICATION	0.9999967035913264	WITHOUT_CLASSIFICATION	3.2964086735011355E-6	DEFECT
/*          * @param message         */	WITHOUT_CLASSIFICATION	0.9999998297752789	WITHOUT_CLASSIFICATION	1.7022472120970656E-7	DEFECT
// make sure that the parsing does not break	WITHOUT_CLASSIFICATION	0.9985134331709858	WITHOUT_CLASSIFICATION	0.001486566829014214	DEFECT
// where the name contains <>	WITHOUT_CLASSIFICATION	0.9999998344748489	WITHOUT_CLASSIFICATION	1.6552515107113228E-7	DEFECT
// where only an address is supplied	WITHOUT_CLASSIFICATION	0.9999004787186827	WITHOUT_CLASSIFICATION	9.952128131728529E-5	DEFECT
// Tests property element, using XML schema properties as an example.	WITHOUT_CLASSIFICATION	0.9999888561296938	WITHOUT_CLASSIFICATION	1.1143870306140299E-5	DEFECT
// should print "panic: Cannot find importVocab file 'JavaTokenTypes.txt'" // since it needs to run java.g first before java.tree.g	WITHOUT_CLASSIFICATION	0.999970098513437	WITHOUT_CLASSIFICATION	2.990148656306546E-5	DEFECT
// execute	WITHOUT_CLASSIFICATION	0.9999937161182656	WITHOUT_CLASSIFICATION	6.283881734490981E-6	DEFECT
// override some of the code so we can test the handling of the // return code only.	WITHOUT_CLASSIFICATION	0.9999999331961142	WITHOUT_CLASSIFICATION	6.680388576380738E-8	DEFECT
// ask ant to update the properties...	WITHOUT_CLASSIFICATION	0.9999908078384634	WITHOUT_CLASSIFICATION	9.192161536660954E-6	DEFECT
// to override	WITHOUT_CLASSIFICATION	0.9999954401868587	WITHOUT_CLASSIFICATION	4.559813141285979E-6	DEFECT
// just to be sure	WITHOUT_CLASSIFICATION	0.9999982794284508	WITHOUT_CLASSIFICATION	1.7205715492439094E-6	DEFECT
// just to be sure	WITHOUT_CLASSIFICATION	0.9999982794284508	WITHOUT_CLASSIFICATION	1.7205715492439094E-6	DEFECT
// read in the file	WITHOUT_CLASSIFICATION	0.999999406457081	WITHOUT_CLASSIFICATION	5.935429189835078E-7	DEFECT
// found the property we set - it's good.	WITHOUT_CLASSIFICATION	0.9999626231377274	WITHOUT_CLASSIFICATION	3.737686227249005E-5	DEFECT
// else	WITHOUT_CLASSIFICATION	0.9999992958804681	WITHOUT_CLASSIFICATION	7.041195319564892E-7	DEFECT
// else	WITHOUT_CLASSIFICATION	0.9999992958804681	WITHOUT_CLASSIFICATION	7.041195319564892E-7	DEFECT
// ReplaceRegExpTest	WITHOUT_CLASSIFICATION	0.9999996602109956	WITHOUT_CLASSIFICATION	3.39789004394129E-7	DEFECT
// test for 10 consecutives transform	WITHOUT_CLASSIFICATION	0.9999994129546366	WITHOUT_CLASSIFICATION	5.87045363383379E-7	DEFECT
//java keywords are not special	WITHOUT_CLASSIFICATION	0.9999851626267374	WITHOUT_CLASSIFICATION	1.4837373262607567E-5	DEFECT
//underscores go in front of invalid start chars	WITHOUT_CLASSIFICATION	0.999793201153789	WITHOUT_CLASSIFICATION	2.067988462110334E-4	DEFECT
//underscores at the front get an underscore too	WITHOUT_CLASSIFICATION	0.9998787828530855	WITHOUT_CLASSIFICATION	1.212171469145709E-4	DEFECT
//non java char at start => underscore then the the _hex value	WITHOUT_CLASSIFICATION	0.9999995185831383	WITHOUT_CLASSIFICATION	4.814168616968349E-7	DEFECT
//and paths are stripped	WITHOUT_CLASSIFICATION	0.9999959661286899	WITHOUT_CLASSIFICATION	4.033871310126043E-6	DEFECT
/** * Tests the {@link XSLTProcess} task. * XXX merge with {@link StyleTest}? * @since Ant 1.5 */	WITHOUT_CLASSIFICATION	0.9999997117464109	WITHOUT_CLASSIFICATION	2.8825358906914727E-7	DEFECT
// byte - byte compare	WITHOUT_CLASSIFICATION	0.9999995869007495	WITHOUT_CLASSIFICATION	4.1309925043500626E-7	DEFECT
// avoid endless loop	WITHOUT_CLASSIFICATION	0.9999995330829679	WITHOUT_CLASSIFICATION	4.6691703208436187E-7	DEFECT
// those would fail because of the way BuildFileTest captures output	WITHOUT_CLASSIFICATION	0.9999756531119647	WITHOUT_CLASSIFICATION	2.434688803537318E-5	DEFECT
//To change body of implemented methods use File | Settings | File Templates.	WITHOUT_CLASSIFICATION	0.9999996198218374	WITHOUT_CLASSIFICATION	3.8017816269172846E-7	DEFECT
// tests one the file object	WITHOUT_CLASSIFICATION	0.999999957113323	WITHOUT_CLASSIFICATION	4.2886677029253916E-8	DEFECT
// father and child pattern test	WITHOUT_CLASSIFICATION	0.999998949496265	WITHOUT_CLASSIFICATION	1.0505037349741437E-6	DEFECT
// redo the test, but the 2 include patterns are inverted	WITHOUT_CLASSIFICATION	0.9999999642052086	WITHOUT_CLASSIFICATION	3.579479138482628E-8	DEFECT
// end of try-catch	WITHOUT_CLASSIFICATION	0.9999990906717406	WITHOUT_CLASSIFICATION	9.093282594293172E-7	DEFECT
// tests one the file object	WITHOUT_CLASSIFICATION	0.999999957113323	WITHOUT_CLASSIFICATION	4.2886677029253916E-8	DEFECT
// On junit3 this is a FAILURE, on junit4 this is an ERROR	WITHOUT_CLASSIFICATION	0.999997518866262	WITHOUT_CLASSIFICATION	2.4811337379211946E-6	DEFECT
// conversion to URL via FileUtils like in XMLResultAggregator, not as suggested in the bug report	WITHOUT_CLASSIFICATION	0.9999550425964605	WITHOUT_CLASSIFICATION	4.4957403539537455E-5	DEFECT
// conversion to URL via FileUtils like in XMLResultAggregator, not as suggested in the bug report	WITHOUT_CLASSIFICATION	0.9999550425964605	WITHOUT_CLASSIFICATION	4.4957403539537455E-5	DEFECT
// conversion to URL via FileUtils like in XMLResultAggregator, not as suggested in the bug report	WITHOUT_CLASSIFICATION	0.9999550425964605	WITHOUT_CLASSIFICATION	4.4957403539537455E-5	DEFECT
// mandatory constructor	WITHOUT_CLASSIFICATION	0.9999978193191994	WITHOUT_CLASSIFICATION	2.1806808005226866E-6	DEFECT
// check that a suite generates no errors	WITHOUT_CLASSIFICATION	0.9999999269837905	WITHOUT_CLASSIFICATION	7.301620952047833E-8	DEFECT
// check that having no suite generates no errors	WITHOUT_CLASSIFICATION	0.9999995749899162	WITHOUT_CLASSIFICATION	4.250100836707421E-7	DEFECT
// check that something which is not a testcase generates no errors // at first even though this is incorrect.	WITHOUT_CLASSIFICATION	0.9999959133185009	WITHOUT_CLASSIFICATION	4.086681499016121E-6	DEFECT
// check that an invalid suite generates an error.	WITHOUT_CLASSIFICATION	0.9999998930320309	WITHOUT_CLASSIFICATION	1.0696796923214868E-7	DEFECT
// JUnit3 test //assertEquals(runner.getFormatter().getError(), JUnitTestRunner.FAILURES, runner.getRetCode());	WITHOUT_CLASSIFICATION	0.9999997156409749	WITHOUT_CLASSIFICATION	2.8435902519436536E-7	DEFECT
// On junit3 this is a FAILURE, on junit4 this is an ERROR	WITHOUT_CLASSIFICATION	0.999997518866262	WITHOUT_CLASSIFICATION	2.4811337379211946E-6	DEFECT
/*          * @param event the build event that is being logged.         */	WITHOUT_CLASSIFICATION	0.999988558533475	WITHOUT_CLASSIFICATION	1.1441466525021786E-5	DEFECT
// check that an exception in the constructor is noticed	WITHOUT_CLASSIFICATION	0.9999987111198536	WITHOUT_CLASSIFICATION	1.2888801463849945E-6	DEFECT
// the test runner that wrap the dummy formatter that interests us	WITHOUT_CLASSIFICATION	0.9999953627506697	WITHOUT_CLASSIFICATION	4.637249330355469E-6	DEFECT
// use the classloader that loaded this class otherwise // it will not be able to run inner classes if this test // is ran in non-forked mode.	WITHOUT_CLASSIFICATION	0.9999983954276739	WITHOUT_CLASSIFICATION	1.6045723261730751E-6	DEFECT
// dummy formatter just to catch the error	WITHOUT_CLASSIFICATION	0.9999997976215118	WITHOUT_CLASSIFICATION	2.0237848816231548E-7	DEFECT
// end of try-catch	WITHOUT_CLASSIFICATION	0.9999990906717406	WITHOUT_CLASSIFICATION	9.093282594293172E-7	DEFECT
// end of try-catch	WITHOUT_CLASSIFICATION	0.9999990906717406	WITHOUT_CLASSIFICATION	9.093282594293172E-7	DEFECT
// byte - byte compare	WITHOUT_CLASSIFICATION	0.9999995869007495	WITHOUT_CLASSIFICATION	4.1309925043500626E-7	DEFECT
/*          * @param event the build event that is being logged.         */	WITHOUT_CLASSIFICATION	0.999988558533475	WITHOUT_CLASSIFICATION	1.1441466525021786E-5	DEFECT
// get the fileset and its basedir	WITHOUT_CLASSIFICATION	0.999999716995594	WITHOUT_CLASSIFICATION	2.8300440606110557E-7	DEFECT
// get the fileset and its basedir	WITHOUT_CLASSIFICATION	0.999999716995594	WITHOUT_CLASSIFICATION	2.8300440606110557E-7	DEFECT
// get the fileset and its basedir	WITHOUT_CLASSIFICATION	0.999999716995594	WITHOUT_CLASSIFICATION	2.8300440606110557E-7	DEFECT
// Set up a SOSGet task	WITHOUT_CLASSIFICATION	0.9999998900458607	WITHOUT_CLASSIFICATION	1.0995413931804835E-7	DEFECT
// Set up a SOSGet task	WITHOUT_CLASSIFICATION	0.9999998900458607	WITHOUT_CLASSIFICATION	1.0995413931804835E-7	DEFECT
// Set up a SOSCheckin task	WITHOUT_CLASSIFICATION	0.9999998964271022	WITHOUT_CLASSIFICATION	1.0357289780584709E-7	DEFECT
// Set up a SOSCheckin task	WITHOUT_CLASSIFICATION	0.9999998964271022	WITHOUT_CLASSIFICATION	1.0357289780584709E-7	DEFECT
// Set up a SOSCheckout task	WITHOUT_CLASSIFICATION	0.9999999436241797	WITHOUT_CLASSIFICATION	5.6375820225735727E-8	DEFECT
// Set up a sosCheckout task	WITHOUT_CLASSIFICATION	0.9999999460950575	WITHOUT_CLASSIFICATION	5.3904942458071606E-8	DEFECT
// Set up a sosCheckout task	WITHOUT_CLASSIFICATION	0.9999999460950575	WITHOUT_CLASSIFICATION	5.3904942458071606E-8	DEFECT
// We have extra elements	WITHOUT_CLASSIFICATION	0.9999998579554886	WITHOUT_CLASSIFICATION	1.4204451127781376E-7	DEFECT
// give it some time to display	WITHOUT_CLASSIFICATION	0.9999989438713253	WITHOUT_CLASSIFICATION	1.0561286747098888E-6	DEFECT
// Set up a VSSGet task	WITHOUT_CLASSIFICATION	0.9999997981793601	WITHOUT_CLASSIFICATION	2.0182063980771088E-7	DEFECT
// Set up a VSSLabel task	WITHOUT_CLASSIFICATION	0.9999998890158117	WITHOUT_CLASSIFICATION	1.1098418824196038E-7	DEFECT
// Set up a VSSLabel task	WITHOUT_CLASSIFICATION	0.9999998890158117	WITHOUT_CLASSIFICATION	1.1098418824196038E-7	DEFECT
// Set up a VSSHistory task	WITHOUT_CLASSIFICATION	0.9999996142195359	WITHOUT_CLASSIFICATION	3.857804642100445E-7	DEFECT
// Set up a VSSHistory task	WITHOUT_CLASSIFICATION	0.9999996142195359	WITHOUT_CLASSIFICATION	3.857804642100445E-7	DEFECT
// Set up a Timestamp	WITHOUT_CLASSIFICATION	0.9999995503300392	WITHOUT_CLASSIFICATION	4.4966996084929965E-7	DEFECT
// Get today's date	WITHOUT_CLASSIFICATION	0.9999982015339872	WITHOUT_CLASSIFICATION	1.7984660127241193E-6	DEFECT
// Set up a VSSCheckIn task	WITHOUT_CLASSIFICATION	0.9999997179288004	WITHOUT_CLASSIFICATION	2.8207119970695174E-7	DEFECT
// Set up a VSSCheckOut task	WITHOUT_CLASSIFICATION	0.9999999212098747	WITHOUT_CLASSIFICATION	7.879012528070809E-8	DEFECT
// Set up a VSSAdd task	WITHOUT_CLASSIFICATION	0.9999998197019309	WITHOUT_CLASSIFICATION	1.8029806903389556E-7	DEFECT
// Set up a VSSCp task	WITHOUT_CLASSIFICATION	0.9999997911207816	WITHOUT_CLASSIFICATION	2.088792183966471E-7	DEFECT
// Set up a VSSCreate task	WITHOUT_CLASSIFICATION	0.9999999500481044	WITHOUT_CLASSIFICATION	4.995189565465262E-8	DEFECT
// Count the number of empty strings	WITHOUT_CLASSIFICATION	0.9999967766940877	WITHOUT_CLASSIFICATION	3.223305912301345E-6	DEFECT
// ran Ant tests with -ea and this would fail spuriously	WITHOUT_CLASSIFICATION	0.9999716667022421	WITHOUT_CLASSIFICATION	2.8333297757845254E-5	DEFECT
// now to the expected failures	WITHOUT_CLASSIFICATION	0.999981901824985	WITHOUT_CLASSIFICATION	1.8098175014955214E-5	DEFECT
// catalog <--> catalog	WITHOUT_CLASSIFICATION	0.9999986400309452	WITHOUT_CLASSIFICATION	1.3599690547807129E-6	DEFECT
// catalog1 --> catalog2 --> catalog3 --> catalog1	WITHOUT_CLASSIFICATION	0.9999937126527924	WITHOUT_CLASSIFICATION	6.287347207671151E-6	DEFECT
// catalog2 --> catalog1 --> catalog	WITHOUT_CLASSIFICATION	0.9999922553718821	WITHOUT_CLASSIFICATION	7.744628117902424E-6	DEFECT
//check that dir and src are incompatible	WITHOUT_CLASSIFICATION	0.9999998354176348	WITHOUT_CLASSIFICATION	1.6458236525799547E-7	DEFECT
//check that fullpath and prefix are incompatible	WITHOUT_CLASSIFICATION	0.999997861976849	WITHOUT_CLASSIFICATION	2.1380231510008758E-6	DEFECT
// check that reference zipfilesets cannot have specific attributes	WITHOUT_CLASSIFICATION	0.9999993288153072	WITHOUT_CLASSIFICATION	6.711846928763204E-7	DEFECT
// check that a reference zipfileset gets the same attributes as the original	WITHOUT_CLASSIFICATION	0.9999999640533451	WITHOUT_CLASSIFICATION	3.5946654879552474E-8	DEFECT
//check that dir and src are incompatible	WITHOUT_CLASSIFICATION	0.9999998354176348	WITHOUT_CLASSIFICATION	1.6458236525799547E-7	DEFECT
// // These shenanigans are necessary b/c Norm Walsh's resolver // has a different idea of how file URLs are created on windoze // ie file://c:/foo instead of file:///c:/foo //	WITHOUT_CLASSIFICATION	0.9999955536087757	WITHOUT_CLASSIFICATION	4.446391224329299E-6	DEFECT
//check that dir and src are incompatible	WITHOUT_CLASSIFICATION	0.9999998354176348	WITHOUT_CLASSIFICATION	1.6458236525799547E-7	DEFECT
//check that fullpath and prefix are incompatible	WITHOUT_CLASSIFICATION	0.999997861976849	WITHOUT_CLASSIFICATION	2.1380231510008758E-6	DEFECT
// try a netware-volume length path, see how it is handled	WITHOUT_CLASSIFICATION	0.9999997116928041	WITHOUT_CLASSIFICATION	2.883071959513167E-7	DEFECT
// actually tests constructor as well as setPath	WITHOUT_CLASSIFICATION	0.999999892764319	WITHOUT_CLASSIFICATION	1.0723568090380705E-7	DEFECT
// check that reference tarfilesets cannot have specific attributes	WITHOUT_CLASSIFICATION	0.9999997189949424	WITHOUT_CLASSIFICATION	2.810050575435773E-7	DEFECT
// try a multi-part netware-volume length path w/forward slash, see how it is handled	WITHOUT_CLASSIFICATION	0.9999997476314388	WITHOUT_CLASSIFICATION	2.5236856117423356E-7	DEFECT
// try a multi-part netware-volume length path, see how it is handled	WITHOUT_CLASSIFICATION	0.9999998728629389	WITHOUT_CLASSIFICATION	1.271370611456232E-7	DEFECT
// dummy1 --> dummy2 --> dummy3 --> dummy1	WITHOUT_CLASSIFICATION	0.9999681377570945	WITHOUT_CLASSIFICATION	3.186224290551297E-5	DEFECT
// try a netware-volume length path w/forward slash, see how it is handled	WITHOUT_CLASSIFICATION	0.9999994277069171	WITHOUT_CLASSIFICATION	5.72293082849769E-7	DEFECT
// try a multi-part netware-volume length path with UNIX // separator (this testcase if from an actual bug that was // found, in AvailableTest, which uses PathTokenizer)	WITHOUT_CLASSIFICATION	0.9999994729324879	WITHOUT_CLASSIFICATION	5.270675120094316E-7	DEFECT
// dummy1 --> dummy2 --> dummy3 --> dummy1	WITHOUT_CLASSIFICATION	0.9999681377570945	WITHOUT_CLASSIFICATION	3.186224290551297E-5	DEFECT
// dummy1 --> dummy2 --> dummy3 --> dummy1	WITHOUT_CLASSIFICATION	0.9999681377570945	WITHOUT_CLASSIFICATION	3.186224290551297E-5	DEFECT
// dummy1 --> dummy2 --> dummy3 --> dummy1	WITHOUT_CLASSIFICATION	0.9999681377570945	WITHOUT_CLASSIFICATION	3.186224290551297E-5	DEFECT
// dummy1 --> dummy2 --> dummy3 --> dummy1	WITHOUT_CLASSIFICATION	0.9999681377570945	WITHOUT_CLASSIFICATION	3.186224290551297E-5	DEFECT
// dummy1 --> dummy2 --> dummy3 (with Path "/a")	WITHOUT_CLASSIFICATION	0.9999921351639933	WITHOUT_CLASSIFICATION	7.864836006707879E-6	DEFECT
// This class acts as a custom Ant task also // and uses these variables/methods in that mode	WITHOUT_CLASSIFICATION	0.9999992453882792	WITHOUT_CLASSIFICATION	7.546117207333217E-7	DEFECT
// dummy1 --> dummy2 --> dummy3 // (which has the Project's basedir as root).	WITHOUT_CLASSIFICATION	0.9999991292009083	WITHOUT_CLASSIFICATION	8.70799091682976E-7	DEFECT
// dummy1 --> dummy2 --> dummy3 // (which has the Project's basedir as root).	WITHOUT_CLASSIFICATION	0.9999991292009083	WITHOUT_CLASSIFICATION	8.70799091682976E-7	DEFECT
// Grant extra permissions to read and write the user.* properties and read to the // java.home property	WITHOUT_CLASSIFICATION	0.9999899968780736	WITHOUT_CLASSIFICATION	1.0003121926396458E-5	DEFECT
// dummy1 --> dummy2 --> dummy3 // (which holds patterns "include" and "exclude")	WITHOUT_CLASSIFICATION	0.9999984468340707	WITHOUT_CLASSIFICATION	1.553165929323925E-6	DEFECT
// check that a reference tarfileset gets the same attributes as the original	WITHOUT_CLASSIFICATION	0.9999999794503551	WITHOUT_CLASSIFICATION	2.054964485243122E-8	DEFECT
// was expected	WITHOUT_CLASSIFICATION	0.9999981949771449	WITHOUT_CLASSIFICATION	1.8050228550281504E-6	DEFECT
// Revoke permission to write user.home (granted above via user.*), still able to read though. // and the default granted permission to read os.name.	WITHOUT_CLASSIFICATION	0.9999999101801708	WITHOUT_CLASSIFICATION	8.981982920293024E-8	DEFECT
// Was expected, test passes	WITHOUT_CLASSIFICATION	0.9999995714943696	WITHOUT_CLASSIFICATION	4.2850563039714156E-7	DEFECT
// Was expected, test passes	WITHOUT_CLASSIFICATION	0.9999995714943696	WITHOUT_CLASSIFICATION	4.2850563039714156E-7	DEFECT
// Was expected, test passes	WITHOUT_CLASSIFICATION	0.9999995714943696	WITHOUT_CLASSIFICATION	4.2850563039714156E-7	DEFECT
/*         * After changing CommandlineJava to search for the java         * executable, I don't know, how to tests the value returned         * here without using the same logic as applied in the class         * itself.         *         * assertTrue("no classpath", "java", s[0]);         */	WITHOUT_CLASSIFICATION	0.9999999792227321	WITHOUT_CLASSIFICATION	2.0777267936633823E-8	DEFECT
//        assertEquals("with classpath", "java", s[0]);	WITHOUT_CLASSIFICATION	0.9999999600440943	WITHOUT_CLASSIFICATION	3.995590563559257E-8	DEFECT
// only the second iteration would pass because of PR 27218	WITHOUT_CLASSIFICATION	0.9999081309369043	WITHOUT_CLASSIFICATION	9.186906309555631E-5	DEFECT
//mix element types	WITHOUT_CLASSIFICATION	0.9999966710200904	WITHOUT_CLASSIFICATION	3.328979909699793E-6	DEFECT
//implicit composite	WITHOUT_CLASSIFICATION	0.999997458982313	WITHOUT_CLASSIFICATION	2.541017687097071E-6	DEFECT
// a --> b --> c --- def //               \-- ghi	WITHOUT_CLASSIFICATION	0.9999995040629999	WITHOUT_CLASSIFICATION	4.95937000105732E-7	DEFECT
// // Ensure that an external entity resolves as expected Using an // XMLCatalog: // // Transform an XML file that refers to the entity into a text // file, entity is listed in the XMLCatalog pointing to a // different file.  Stuff result into property: val2 //	WITHOUT_CLASSIFICATION	0.999997261631059	WITHOUT_CLASSIFICATION	2.7383689410986575E-6	DEFECT
// // Ensure that an external entity resolves as expected with NO // XMLCatalog involvement: // // Transform an XML file that refers to the entity into a text // file, stuff result into property: val1 //	WITHOUT_CLASSIFICATION	0.9999757229912785	WITHOUT_CLASSIFICATION	2.4277008721563556E-5	DEFECT
// this actually relies on the first manifest being found on // the classpath (probably rt.jar's) being valid	WITHOUT_CLASSIFICATION	0.9999993756316901	WITHOUT_CLASSIFICATION	6.243683099961286E-7	DEFECT
// // Ensure that an external entity resolves as expected with NO // XMLCatalog involvement: // // Transform an XML file that contains a reference to a _second_ XML file // via the document() function.  The _second_ XML file refers to an entity. // Stuff result into the property: val3 //	WITHOUT_CLASSIFICATION	0.9999836220270983	WITHOUT_CLASSIFICATION	1.6377972901608813E-5	DEFECT
// // Ensure that an external entity resolves as expected Using an // XMLCatalog: // // Transform an XML file that contains a reference to a _second_ XML file // via the document() function.  The _second_ XML file refers to an entity. // The entity is listed in the XMLCatalog pointing to a different file. // Stuff result into the property: val4 //	WITHOUT_CLASSIFICATION	0.9999994413581431	WITHOUT_CLASSIFICATION	5.586418569443883E-7	DEFECT
// The following will be used as types and tasks	WITHOUT_CLASSIFICATION	0.9999946340901149	WITHOUT_CLASSIFICATION	5.365909885043975E-6	DEFECT
// share the setup for testing the depend task	WITHOUT_CLASSIFICATION	0.9999998680374877	WITHOUT_CLASSIFICATION	1.3196251237941314E-7	DEFECT
// Test for path relative to project base directory	WITHOUT_CLASSIFICATION	0.999997356613471	WITHOUT_CLASSIFICATION	2.6433865289925018E-6	DEFECT
//class-MockCache	WITHOUT_CLASSIFICATION	0.999997018953673	WITHOUT_CLASSIFICATION	2.981046327068911E-6	DEFECT
//  =====================  attributes  =====================	WITHOUT_CLASSIFICATION	0.9999981690920012	WITHOUT_CLASSIFICATION	1.830907998665777E-6	DEFECT
//class-MockCache	WITHOUT_CLASSIFICATION	0.999997018953673	WITHOUT_CLASSIFICATION	2.981046327068911E-6	DEFECT
//  =====================  constructors, factories  =====================	WITHOUT_CLASSIFICATION	0.9999988768094924	WITHOUT_CLASSIFICATION	1.1231905076516547E-6	DEFECT
//  =====================  JUnit stuff  =====================	WITHOUT_CLASSIFICATION	0.9999886684137461	WITHOUT_CLASSIFICATION	1.1331586253868953E-5	DEFECT
// project reference is set in super.setUp()	WITHOUT_CLASSIFICATION	0.9999925116996757	WITHOUT_CLASSIFICATION	7.488300324237571E-6	DEFECT
// init the testclasses path object	WITHOUT_CLASSIFICATION	0.9999997446110525	WITHOUT_CLASSIFICATION	2.5538894750540487E-7	DEFECT
/* * /    // for test only - ignore tests where we arent work at the moment    public static junit.framework.Test suite() {        junit.framework.TestSuite suite= new junit.framework.TestSuite();        suite.addTest(new ModifiedSelectorTest("testValidateWrongCache"));        return suite;    }    /* */	WITHOUT_CLASSIFICATION	0.9999999410814705	WITHOUT_CLASSIFICATION	5.891852956408278E-8	DEFECT
// =======  testcases for the attributes and nested elements of the selector  =====	WITHOUT_CLASSIFICATION	0.9999995699123754	WITHOUT_CLASSIFICATION	4.3008762473522906E-7	DEFECT
// do the actions	WITHOUT_CLASSIFICATION	0.9999999460664413	WITHOUT_CLASSIFICATION	5.393355861108606E-8	DEFECT
// do the checks - the buildfile stores the fileset as property	WITHOUT_CLASSIFICATION	0.9999990051244951	WITHOUT_CLASSIFICATION	9.94875504886522E-7	DEFECT
// must be empty according to the Mock* implementations	WITHOUT_CLASSIFICATION	0.9999977540893855	WITHOUT_CLASSIFICATION	2.2459106145735964E-6	DEFECT
// don't catch the JUnit exceptions	WITHOUT_CLASSIFICATION	0.9999999224118915	WITHOUT_CLASSIFICATION	7.75881085058281E-8	DEFECT
// no check for 1<=kind<=3 - only internal use therefore check it // while development	WITHOUT_CLASSIFICATION	0.999999831763364	WITHOUT_CLASSIFICATION	1.682366359082125E-7	DEFECT
// readable form of parameter kind	WITHOUT_CLASSIFICATION	0.9999968466494562	WITHOUT_CLASSIFICATION	3.1533505438441132E-6	DEFECT
// setup the "Ant project"	WITHOUT_CLASSIFICATION	0.9999985587382598	WITHOUT_CLASSIFICATION	1.441261740223026E-6	DEFECT
// setup the selector	WITHOUT_CLASSIFICATION	0.9999998521040041	WITHOUT_CLASSIFICATION	1.4789599590509427E-7	DEFECT
// get the cache, so we can check our things	WITHOUT_CLASSIFICATION	0.9999999876968202	WITHOUT_CLASSIFICATION	1.2303179858245884E-8	DEFECT
// the test	WITHOUT_CLASSIFICATION	0.9999998043767645	WITHOUT_CLASSIFICATION	1.9562323545050475E-7	DEFECT
// MockCache doesnt create a file - therefore no cleanup needed	WITHOUT_CLASSIFICATION	0.99999998687029	WITHOUT_CLASSIFICATION	1.3129709885010319E-8	DEFECT
// add the test classes to its classpath	WITHOUT_CLASSIFICATION	0.9999999224423347	WITHOUT_CLASSIFICATION	7.755766533720715E-8	DEFECT
// let the selector do its checks	WITHOUT_CLASSIFICATION	0.9999996655634676	WITHOUT_CLASSIFICATION	3.3443653242837377E-7	DEFECT
// extract the algorithm name (and config) from the selectors output	WITHOUT_CLASSIFICATION	0.9999632086090842	WITHOUT_CLASSIFICATION	3.679139091583843E-5	DEFECT
// '<' and '>' are only used if the algorithm has properties	WITHOUT_CLASSIFICATION	0.9999458764180007	WITHOUT_CLASSIFICATION	5.4123581999227366E-5	DEFECT
// return the clean value	WITHOUT_CLASSIFICATION	0.9999999116258983	WITHOUT_CLASSIFICATION	8.837410177326516E-8	DEFECT
// initialize test environment (called "bed")	WITHOUT_CLASSIFICATION	0.9999999763416838	WITHOUT_CLASSIFICATION	2.3658316182352036E-8	DEFECT
// initialize test environment (called "bed")	WITHOUT_CLASSIFICATION	0.9999999763416838	WITHOUT_CLASSIFICATION	2.3658316182352036E-8	DEFECT
// Configure the selector	WITHOUT_CLASSIFICATION	0.9999992581644694	WITHOUT_CLASSIFICATION	7.418355305023946E-7	DEFECT
// Configure the selector	WITHOUT_CLASSIFICATION	0.9999992581644694	WITHOUT_CLASSIFICATION	7.418355305023946E-7	DEFECT
// does the selection	WITHOUT_CLASSIFICATION	0.9999933723294574	WITHOUT_CLASSIFICATION	6.627670542649062E-6	DEFECT
// evaluate correctness	WITHOUT_CLASSIFICATION	0.999999908895316	WITHOUT_CLASSIFICATION	9.110468407163954E-8	DEFECT
// evaluate correctness	WITHOUT_CLASSIFICATION	0.999999908895316	WITHOUT_CLASSIFICATION	9.110468407163954E-8	DEFECT
// same logic as on algorithm, no testcases created	WITHOUT_CLASSIFICATION	0.9999996090370334	WITHOUT_CLASSIFICATION	3.9096296658030287E-7	DEFECT
// same logic as on algorithm, no testcases created	WITHOUT_CLASSIFICATION	0.9999996090370334	WITHOUT_CLASSIFICATION	3.9096296658030287E-7	DEFECT
// given cache must be empty	WITHOUT_CLASSIFICATION	0.9999998435387697	WITHOUT_CLASSIFICATION	1.5646123034366798E-7	DEFECT
// cache must return a stored value	WITHOUT_CLASSIFICATION	0.9999998764571489	WITHOUT_CLASSIFICATION	1.2354285106739362E-7	DEFECT
// test the iterator	WITHOUT_CLASSIFICATION	0.999999968325575	WITHOUT_CLASSIFICATION	3.167442493105766E-8	DEFECT
// clear the cache	WITHOUT_CLASSIFICATION	0.999999799333226	WITHOUT_CLASSIFICATION	2.0066677386097098E-7	DEFECT
// must not be a directory	WITHOUT_CLASSIFICATION	0.9999979411360181	WITHOUT_CLASSIFICATION	2.058863981954013E-6	DEFECT
// get the Hashvalues	WITHOUT_CLASSIFICATION	0.9999999387435945	WITHOUT_CLASSIFICATION	6.125640547095967E-8	DEFECT
// Assert !=null and equality	WITHOUT_CLASSIFICATION	0.9999981223912695	WITHOUT_CLASSIFICATION	1.8776087304452921E-6	DEFECT
//if-isFile //for	WITHOUT_CLASSIFICATION	0.9999989129572915	WITHOUT_CLASSIFICATION	1.087042708505615E-6	DEFECT
// ==============  testcases for the comparator implementations  ==============	WITHOUT_CLASSIFICATION	0.9999991232447158	WITHOUT_CLASSIFICATION	8.767552840424072E-7	DEFECT
//not yet supported see note in selector	WITHOUT_CLASSIFICATION	0.9992931660544954	WITHOUT_CLASSIFICATION	7.06833945504634E-4	DEFECT
//new File("src/etc/testcases/types/resources/selectors/cache.properties").delete();	WITHOUT_CLASSIFICATION	0.9999977182216196	WITHOUT_CLASSIFICATION	2.2817783803610883E-6	DEFECT
// really "2"	WITHOUT_CLASSIFICATION	0.9999902517557125	WITHOUT_CLASSIFICATION	9.748244287486651E-6	DEFECT
// Configure the selector - only defaults are used	WITHOUT_CLASSIFICATION	0.9999991327128435	WITHOUT_CLASSIFICATION	8.672871565466204E-7	DEFECT
//                     + "  <emptyElement></emptyElement>"	WITHOUT_CLASSIFICATION	0.9999973397348394	WITHOUT_CLASSIFICATION	2.660265160618183E-6	DEFECT
/* ============ ResourceFactory interface ====================== */	WITHOUT_CLASSIFICATION	0.9999952924021204	WITHOUT_CLASSIFICATION	4.707597879584037E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999981731396919	WITHOUT_CLASSIFICATION	1.82686030805923E-6	DEFECT
//class-BFT	WITHOUT_CLASSIFICATION	0.9999928283037739	WITHOUT_CLASSIFICATION	7.171696226099193E-6	DEFECT
// do the actions	WITHOUT_CLASSIFICATION	0.9999999460664413	WITHOUT_CLASSIFICATION	5.393355861108606E-8	DEFECT
// don't catch the JUnit exceptions	WITHOUT_CLASSIFICATION	0.9999999224118915	WITHOUT_CLASSIFICATION	7.75881085058281E-8	DEFECT
// // *****  First Run  ***** // the first call should get all files, because nothing is in // the cache //	WITHOUT_CLASSIFICATION	0.9999997982388086	WITHOUT_CLASSIFICATION	2.0176119147443277E-7	DEFECT
// // *****  Second Run  ***** // the second call should get no files, because no content // has changed //	WITHOUT_CLASSIFICATION	0.999999986953853	WITHOUT_CLASSIFICATION	1.3046147024917006E-8	DEFECT
// // *****  make some files dirty  ***** //	WITHOUT_CLASSIFICATION	0.9999997400273493	WITHOUT_CLASSIFICATION	2.599726506637129E-7	DEFECT
// these files are made dirty --> 3+4 with different content	WITHOUT_CLASSIFICATION	0.9999998271337224	WITHOUT_CLASSIFICATION	1.7286627757905007E-7	DEFECT
// AccessObject to the test-Ant-environment	WITHOUT_CLASSIFICATION	0.9999947237613827	WITHOUT_CLASSIFICATION	5.276238617364239E-6	DEFECT
// give some values (via property file) to that environment	WITHOUT_CLASSIFICATION	0.9999932723793352	WITHOUT_CLASSIFICATION	6.727620664778971E-6	DEFECT
// call the target for making the files dirty	WITHOUT_CLASSIFICATION	0.9999997992591162	WITHOUT_CLASSIFICATION	2.0074088376012862E-7	DEFECT
// // *****  Third Run  ***** // third call should get only those files, which CONTENT changed // (no timestamp changes required!)	WITHOUT_CLASSIFICATION	0.9999980937183566	WITHOUT_CLASSIFICATION	1.9062816434548487E-6	DEFECT
// // *****  Check the result  ***** //	WITHOUT_CLASSIFICATION	0.9999999127591422	WITHOUT_CLASSIFICATION	8.724085773951924E-8	DEFECT
// Mark all files which should be selected as (T)rue and all others // as (F)alse. Directories are always selected so they always are // (T)rue.	WITHOUT_CLASSIFICATION	0.9999996304061297	WITHOUT_CLASSIFICATION	3.69593870330934E-7	DEFECT
// f2name shouldn't be selected: only timestamp has changed!	WITHOUT_CLASSIFICATION	0.9999577639492786	WITHOUT_CLASSIFICATION	4.223605072133189E-5	DEFECT
// info text // list of files // expected result // result	WITHOUT_CLASSIFICATION	0.9999931739971828	WITHOUT_CLASSIFICATION	6.826002817284933E-6	DEFECT
// cleanup the environment	WITHOUT_CLASSIFICATION	0.9999983323015018	WITHOUT_CLASSIFICATION	1.6676984981741453E-6	DEFECT
// cleanup the environment	WITHOUT_CLASSIFICATION	0.9999983323015018	WITHOUT_CLASSIFICATION	1.6676984981741453E-6	DEFECT
// RuleBasedCollator not yet supported - see Selector:375 note	WITHOUT_CLASSIFICATION	0.9994003642171998	WITHOUT_CLASSIFICATION	5.996357828002119E-4	DEFECT
//s.addParam(createParam("algorithm.provider","---")); // i don't know any valid	WITHOUT_CLASSIFICATION	0.9999847677968944	WITHOUT_CLASSIFICATION	1.5232203105582373E-5	DEFECT
// first and second run	WITHOUT_CLASSIFICATION	0.9999969590457765	WITHOUT_CLASSIFICATION	3.0409542234932987E-6	DEFECT
// make dirty	WITHOUT_CLASSIFICATION	0.9999978308292332	WITHOUT_CLASSIFICATION	2.1691707667070074E-6	DEFECT
// third run	WITHOUT_CLASSIFICATION	0.9999924208173049	WITHOUT_CLASSIFICATION	7.579182695126813E-6	DEFECT
// the directories to check	WITHOUT_CLASSIFICATION	0.9999993231207901	WITHOUT_CLASSIFICATION	6.768792098540804E-7	DEFECT
// do the checks	WITHOUT_CLASSIFICATION	0.9999999257670962	WITHOUT_CLASSIFICATION	7.423290374685241E-8	DEFECT
//class-MockProject	WITHOUT_CLASSIFICATION	0.9999840135357502	WITHOUT_CLASSIFICATION	1.5986464249788883E-5	DEFECT
//class-ModifiedSelectorTest	WITHOUT_CLASSIFICATION	0.9999991099353923	WITHOUT_CLASSIFICATION	8.900646077812729E-7	DEFECT
// First read in zero bytes	WITHOUT_CLASSIFICATION	0.9999968556421498	WITHOUT_CLASSIFICATION	3.14435785024502E-6	DEFECT
// Now read in the string	WITHOUT_CLASSIFICATION	0.9999984298602848	WITHOUT_CLASSIFICATION	1.5701397151889508E-6	DEFECT
// Make sure that the counts are the same	WITHOUT_CLASSIFICATION	0.9999998294731076	WITHOUT_CLASSIFICATION	1.7052689237885172E-7	DEFECT
// LineOrientedOutputStreamTest	WITHOUT_CLASSIFICATION	0.9999994324167296	WITHOUT_CLASSIFICATION	5.675832704545558E-7	DEFECT
// make sure that elapsed time in set via date works	WITHOUT_CLASSIFICATION	0.999999238392795	WITHOUT_CLASSIFICATION	7.616072049531173E-7	DEFECT
// make sure that elapsed time in ms works	WITHOUT_CLASSIFICATION	0.9999955262359668	WITHOUT_CLASSIFICATION	4.473764033219629E-6	DEFECT
// should be new moon	WITHOUT_CLASSIFICATION	0.999996525636024	WITHOUT_CLASSIFICATION	3.474363975993948E-6	DEFECT
// Try a silly case	WITHOUT_CLASSIFICATION	0.9999958777155253	WITHOUT_CLASSIFICATION	4.1222844747433905E-6	DEFECT
// and a little longer	WITHOUT_CLASSIFICATION	0.9999989720825625	WITHOUT_CLASSIFICATION	1.027917437563303E-6	DEFECT
/*             * throw in drive letters             */	WITHOUT_CLASSIFICATION	0.9999826100548775	WITHOUT_CLASSIFICATION	1.7389945122509046E-5	DEFECT
/*             * promised to eliminate consecutive slashes after drive letter.             */	WITHOUT_CLASSIFICATION	0.9999995181307326	WITHOUT_CLASSIFICATION	4.818692674459702E-7	DEFECT
/*             * Start with simple absolute file names.             */	WITHOUT_CLASSIFICATION	0.9999999819886748	WITHOUT_CLASSIFICATION	1.801132524746313E-8	DEFECT
/*             * Start with simple absolute file names.             */	WITHOUT_CLASSIFICATION	0.9999999819886748	WITHOUT_CLASSIFICATION	1.801132524746313E-8	DEFECT
/*         * Now test some relative file name magic.         */	WITHOUT_CLASSIFICATION	0.9999999589755109	WITHOUT_CLASSIFICATION	4.102448908235715E-8	DEFECT
/*         * Now test some relative file name magic.         */	WITHOUT_CLASSIFICATION	0.9999999589755109	WITHOUT_CLASSIFICATION	4.102448908235715E-8	DEFECT
// implies lastModified == 0	WITHOUT_CLASSIFICATION	0.9999996918828937	WITHOUT_CLASSIFICATION	3.081171062469145E-7	DEFECT
/* ============ FileNameMapper interface ======================= */	WITHOUT_CLASSIFICATION	0.999996777960208	WITHOUT_CLASSIFICATION	3.222039792015648E-6	DEFECT
// Windows adds the drive letter in uppercase, unless you run Cygwin	WITHOUT_CLASSIFICATION	0.999792481059277	WITHOUT_CLASSIFICATION	2.075189407230855E-4	DEFECT
/*         * Sleep for some time to make sure a touched file would get a         * more recent timestamp according to the file system's         * granularity (should be > 2s to account for Windows FAT).         */	WITHOUT_CLASSIFICATION	0.999329443427824	WITHOUT_CLASSIFICATION	6.70556572175917E-4	DEFECT
// number of milliseconds in a day	WITHOUT_CLASSIFICATION	0.9999698320504866	WITHOUT_CLASSIFICATION	3.0167949513501324E-5	DEFECT
// in a previous version, the date of the file was set to 123456 // milliseconds since 01.01.1970 // it did not work on a computer running JDK 1.4.1_02 + Windows 2000	WITHOUT_CLASSIFICATION	0.9999632351429216	WITHOUT_CLASSIFICATION	3.67648570783787E-5	DEFECT
/*         * I would love to compare this with 123456, but depending on         * the filesystems granularity it can take an arbitrary value.         *         * Just assert the time has changed.         */	WITHOUT_CLASSIFICATION	0.9999999533745406	WITHOUT_CLASSIFICATION	4.6625459511039726E-8	DEFECT
/*             * throw in NetWare volume names             */	WITHOUT_CLASSIFICATION	0.9999897917090746	WITHOUT_CLASSIFICATION	1.020829092525793E-5	DEFECT
/*             * throw in NetWare volume names             */	WITHOUT_CLASSIFICATION	0.9999897917090746	WITHOUT_CLASSIFICATION	1.020829092525793E-5	DEFECT
/*             * drive letters must be considered just normal filenames.             */	WITHOUT_CLASSIFICATION	0.9999999506210371	WITHOUT_CLASSIFICATION	4.937896277326002E-8	DEFECT
// Passed test 	WITHOUT_CLASSIFICATION	0.9999999243766869	WITHOUT_CLASSIFICATION	7.562331313159026E-8	DEFECT
// Expected exception caught	WITHOUT_CLASSIFICATION	0.9999862834604756	WITHOUT_CLASSIFICATION	1.3716539524407425E-5	DEFECT
// Expected exception caught	WITHOUT_CLASSIFICATION	0.9999862834604756	WITHOUT_CLASSIFICATION	1.3716539524407425E-5	DEFECT
// null parent dir	WITHOUT_CLASSIFICATION	0.9999983610880517	WITHOUT_CLASSIFICATION	1.6389119482265606E-6	DEFECT
//preserve case on Cygwin when using 1.4 toURI:	WITHOUT_CLASSIFICATION	0.999972037842918	WITHOUT_CLASSIFICATION	2.7962157082120343E-5	DEFECT
// OK, Java 1.3.	WITHOUT_CLASSIFICATION	0.9999999020916881	WITHOUT_CLASSIFICATION	9.790831193373005E-8	DEFECT
//get a time	WITHOUT_CLASSIFICATION	0.9999968548850184	WITHOUT_CLASSIFICATION	3.1451149815335306E-6	DEFECT
//add some time. We assume no OS has a granularity this bad	WITHOUT_CLASSIFICATION	0.999999851442435	WITHOUT_CLASSIFICATION	1.4855756505568218E-7	DEFECT
/*        assertTrue("same timestamp is up to date",                fu.isUpToDate(firstTime, firstTime));                */	WITHOUT_CLASSIFICATION	0.9999998835907804	WITHOUT_CLASSIFICATION	1.1640921961658474E-7	DEFECT
//check that older is up to date with a newer dest	WITHOUT_CLASSIFICATION	0.9999983941555343	WITHOUT_CLASSIFICATION	1.6058444656628698E-6	DEFECT
//check that older is up to date with a newer dest	WITHOUT_CLASSIFICATION	0.9999983941555343	WITHOUT_CLASSIFICATION	1.6058444656628698E-6	DEFECT
// This just tests that the function does not blow up	WITHOUT_CLASSIFICATION	0.9999078842047415	WITHOUT_CLASSIFICATION	9.211579525852096E-5	DEFECT
// java.home is bogus	WITHOUT_CLASSIFICATION	0.9999999220280403	WITHOUT_CLASSIFICATION	7.797195966233752E-8	DEFECT
// could still be OS/2	WITHOUT_CLASSIFICATION	0.9999988449497507	WITHOUT_CLASSIFICATION	1.155050249379187E-6	DEFECT
// 27224 = magic (a random port which is unlikely to be in use)	WITHOUT_CLASSIFICATION	0.9999718563759276	WITHOUT_CLASSIFICATION	2.814362407240906E-5	DEFECT
// order of headers cannot be guaranteed	WITHOUT_CLASSIFICATION	0.9998899350209473	WITHOUT_CLASSIFICATION	1.1006497905271602E-4	DEFECT
// state engine: false=envelope, true=message	WITHOUT_CLASSIFICATION	0.9999894781771923	WITHOUT_CLASSIFICATION	1.0521822807644096E-5	DEFECT
// make sure there are no issues concerning line separator interpretation // a line separator for regex (perl) is always a unix line (ie \n)	WITHOUT_CLASSIFICATION	0.9999449105676006	WITHOUT_CLASSIFICATION	5.508943239937178E-5	DEFECT
// sb.append( response + "\r\n" );	WITHOUT_CLASSIFICATION	0.9999934337108357	WITHOUT_CLASSIFICATION	6.566289164308617E-6	DEFECT
// 60s // a further 30s	WITHOUT_CLASSIFICATION	0.9999997619289809	WITHOUT_CLASSIFICATION	2.380710191229517E-7	DEFECT
// 60s // a further 30s	WITHOUT_CLASSIFICATION	0.9999997619289809	WITHOUT_CLASSIFICATION	2.380710191229517E-7	DEFECT
// 60s // a further 30s	WITHOUT_CLASSIFICATION	0.9999997619289809	WITHOUT_CLASSIFICATION	2.380710191229517E-7	DEFECT
// 60s // a further 30s	WITHOUT_CLASSIFICATION	0.9999997619289809	WITHOUT_CLASSIFICATION	2.380710191229517E-7	DEFECT
// wait for connection	WITHOUT_CLASSIFICATION	0.9999920546044405	WITHOUT_CLASSIFICATION	7.945395559508458E-6	DEFECT
//throw new IllegalStateException("Command unrecognized: " //    + response);	WITHOUT_CLASSIFICATION	0.9999378685910616	WITHOUT_CLASSIFICATION	6.213140893844483E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999995133297559	WITHOUT_CLASSIFICATION	4.86670244023277E-7	DEFECT
// while	WITHOUT_CLASSIFICATION	0.9999976741810355	WITHOUT_CLASSIFICATION	2.3258189644462983E-6	DEFECT
// CRC manually calculated, sorry // CRC // mode // link length // uid, gid	WITHOUT_CLASSIFICATION	0.9999992368926981	WITHOUT_CLASSIFICATION	7.631073018054467E-7	DEFECT
// CRC manually calculated, sorry // CRC // mode // link length // uid, gid	WITHOUT_CLASSIFICATION	0.9999992368926981	WITHOUT_CLASSIFICATION	7.631073018054467E-7	DEFECT
// CRC // mode // link length // uid, gid	WITHOUT_CLASSIFICATION	0.9999981753364277	WITHOUT_CLASSIFICATION	1.8246635723533373E-6	DEFECT
// CRC // mode // link length // uid, gid	WITHOUT_CLASSIFICATION	0.9999981753364277	WITHOUT_CLASSIFICATION	1.8246635723533373E-6	DEFECT
// CRC // mode // link // uid, gid	WITHOUT_CLASSIFICATION	0.9999934471231354	WITHOUT_CLASSIFICATION	6.55287686461831E-6	DEFECT
// bad CRC // mode // link // uid, gid	WITHOUT_CLASSIFICATION	0.9999980496529461	WITHOUT_CLASSIFICATION	1.95034705396572E-6	DEFECT
//if we got here, all was well	WITHOUT_CLASSIFICATION	0.9999968543695887	WITHOUT_CLASSIFICATION	3.1456304112242358E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999995287844801	WITHOUT_CLASSIFICATION	4.7121551989690683E-7	DEFECT
// CheckStyle:ConstantNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9999989122270567	WITHOUT_CLASSIFICATION	1.0877729433110442E-6	DEFECT
// CheckStyle:ConstantNameCheck ON	WITHOUT_CLASSIFICATION	0.9999986047098379	WITHOUT_CLASSIFICATION	1.3952901620316304E-6	DEFECT
// Filter out messages based on priority	WITHOUT_CLASSIFICATION	0.9999920972057459	WITHOUT_CLASSIFICATION	7.902794254080635E-6	DEFECT
// Print out the name of the task if we're in one	WITHOUT_CLASSIFICATION	0.9999997343590258	WITHOUT_CLASSIFICATION	2.6564097420976154E-7	DEFECT
// shouldn't be possible	WITHOUT_CLASSIFICATION	0.9999933867860268	WITHOUT_CLASSIFICATION	6.613213973222792E-6	DEFECT
// Set up PRIMITIVE_TYPE_MAP	WITHOUT_CLASSIFICATION	0.9999955225802716	WITHOUT_CLASSIFICATION	4.4774197284347965E-6	DEFECT
// check of add[Configured](Class) pattern	WITHOUT_CLASSIFICATION	0.9999996300260752	WITHOUT_CLASSIFICATION	3.699739248623767E-7	DEFECT
// not really user settable properties on tasks/project components	WITHOUT_CLASSIFICATION	0.9999503401437126	WITHOUT_CLASSIFICATION	4.965985628730381E-5	DEFECT
// hide addTask for TaskContainers	WITHOUT_CLASSIFICATION	0.9999997974908099	WITHOUT_CLASSIFICATION	2.0250919009627295E-7	DEFECT
// use wrappers for primitive classes, e.g. int and // Integer are treated identically	WITHOUT_CLASSIFICATION	0.99999753712862	WITHOUT_CLASSIFICATION	2.4628713799447448E-6	DEFECT
// Check if a create of this property is already present // add takes preference over create for CB purposes	WITHOUT_CLASSIFICATION	0.9999998729469691	WITHOUT_CLASSIFICATION	1.270530308498505E-7	DEFECT
/*                         *  Ignore this method as there is an addConfigured                         *  form of this method that has a higher                         *  priority                         */	WITHOUT_CLASSIFICATION	0.999999982797236	WITHOUT_CLASSIFICATION	1.7202763993138884E-8	DEFECT
// If a helper cannot be found, or if the helper is for another // classloader, create a new IH	WITHOUT_CLASSIFICATION	0.9999971435893075	WITHOUT_CLASSIFICATION	2.8564106926155775E-6	DEFECT
// Ignore attribute from unknown uri's	WITHOUT_CLASSIFICATION	0.9999992474000047	WITHOUT_CLASSIFICATION	7.525999953433507E-7	DEFECT
// impossible as getMethods should only return public methods	WITHOUT_CLASSIFICATION	0.9999985791399214	WITHOUT_CLASSIFICATION	1.420860078589098E-6	DEFECT
// impossible as getMethods should only return public methods	WITHOUT_CLASSIFICATION	0.9999985791399214	WITHOUT_CLASSIFICATION	1.420860078589098E-6	DEFECT
// impossible as getMethods should only return public methods	WITHOUT_CLASSIFICATION	0.9999985791399214	WITHOUT_CLASSIFICATION	1.420860078589098E-6	DEFECT
// Element doesn't handle text content	WITHOUT_CLASSIFICATION	0.9999997799622848	WITHOUT_CLASSIFICATION	2.2003771514218176E-7	DEFECT
// Not whitespace - fail	WITHOUT_CLASSIFICATION	0.9999973180168074	WITHOUT_CLASSIFICATION	2.6819831926760474E-6	DEFECT
// Only whitespace - ignore	WITHOUT_CLASSIFICATION	0.9999999458685749	WITHOUT_CLASSIFICATION	5.413142508372118E-8	DEFECT
// Class doesn't have a String constructor but a decent factory method	WITHOUT_CLASSIFICATION	0.9999998372043964	WITHOUT_CLASSIFICATION	1.6279560358180159E-7	DEFECT
// char and Character get special treatment - take the first character	WITHOUT_CLASSIFICATION	0.999999997240624	WITHOUT_CLASSIFICATION	2.759376051787282E-9	DEFECT
// simplest case - setAttribute expects String	WITHOUT_CLASSIFICATION	0.9999976041678836	WITHOUT_CLASSIFICATION	2.3958321163779203E-6	DEFECT
// First try with Project.	WITHOUT_CLASSIFICATION	0.9999984210085794	WITHOUT_CLASSIFICATION	1.5789914205194858E-6	DEFECT
// EnumeratedAttributes have their own helper class	WITHOUT_CLASSIFICATION	0.9999985040564934	WITHOUT_CLASSIFICATION	1.4959435067008456E-6	DEFECT
// resolve relative paths through Project	WITHOUT_CLASSIFICATION	0.9999557522233665	WITHOUT_CLASSIFICATION	4.424777663359468E-5	DEFECT
/** Version to use for addXXX and addConfiguredXXX */	WITHOUT_CLASSIFICATION	0.994313988040627	WITHOUT_CLASSIFICATION	0.005686011959373008	DEFECT
// Well, no matching constructor.	WITHOUT_CLASSIFICATION	0.9999999874569109	WITHOUT_CLASSIFICATION	1.2543089070920461E-8	DEFECT
// OK, try without.	WITHOUT_CLASSIFICATION	0.9999924044439467	WITHOUT_CLASSIFICATION	7.595556053260165E-6	DEFECT
// the method called to add/create the nested element	WITHOUT_CLASSIFICATION	0.999999968439929	WITHOUT_CLASSIFICATION	3.156007102834367E-8	DEFECT
// DO NOTHING	WITHOUT_CLASSIFICATION	0.9999933438385916	WITHOUT_CLASSIFICATION	6.656161408300735E-6	DEFECT
// ADD or ADD_CONFIGURED	WITHOUT_CLASSIFICATION	0.9999928464010677	WITHOUT_CLASSIFICATION	7.153598932277444E-6	DEFECT
// the method called to set the attribute	WITHOUT_CLASSIFICATION	0.9999999903046121	WITHOUT_CLASSIFICATION	9.695387830686523E-9	DEFECT
// add configured replaces the add method	WITHOUT_CLASSIFICATION	0.9999999165091924	WITHOUT_CLASSIFICATION	8.349080764922159E-8	DEFECT
// maintain a sorted list of targets	WITHOUT_CLASSIFICATION	0.9999999591638531	WITHOUT_CLASSIFICATION	4.08361469129752E-8	DEFECT
// worst case. look for a public String constructor and use it // also supports new Whatever(Project, String) as for Path or Reference // This is used (deliberately) for all primitives/wrappers other than // char and boolean	WITHOUT_CLASSIFICATION	0.9999999847459725	WITHOUT_CLASSIFICATION	1.5254027431214614E-8	DEFECT
// Already present	WITHOUT_CLASSIFICATION	0.999993423877	WITHOUT_CLASSIFICATION	6.576122999998685E-6	DEFECT
// higher derived	WITHOUT_CLASSIFICATION	0.9999899670427177	WITHOUT_CLASSIFICATION	1.003295728234785E-5	DEFECT
// print the stacktrace in the build file it is always useful... // better have too much info than not enough.	WITHOUT_CLASSIFICATION	0.9995617914191121	WITHOUT_CLASSIFICATION	4.382085808879015E-4	DEFECT
// specify output in UTF8 otherwise accented characters will blow // up everything	WITHOUT_CLASSIFICATION	0.9999993018639581	WITHOUT_CLASSIFICATION	6.98136041860419E-7	DEFECT
/* For debugging purposes uncomment:        org.w3c.dom.Comment s = doc.createComment("stack=" + threadStack);        buildElement.element.appendChild(s);         */	WITHOUT_CLASSIFICATION	0.9999905334784395	WITHOUT_CLASSIFICATION	9.466521560605113E-6	DEFECT
// -------------------------------------------------- BuildLogger interface	WITHOUT_CLASSIFICATION	0.9999800467392855	WITHOUT_CLASSIFICATION	1.9953260714424815E-5	DEFECT
// Shouldn't happen	WITHOUT_CLASSIFICATION	0.9999884355732818	WITHOUT_CLASSIFICATION	1.156442671822731E-5	DEFECT
// LF is always end of line (i.e. CRLF or single LF)	WITHOUT_CLASSIFICATION	0.999985968840015	WITHOUT_CLASSIFICATION	1.4031159985059805E-5	DEFECT
// CR without LF - send buffer then add char	WITHOUT_CLASSIFICATION	0.999999600268798	WITHOUT_CLASSIFICATION	3.997312020167104E-7	DEFECT
// add into buffer	WITHOUT_CLASSIFICATION	0.9999939121713322	WITHOUT_CLASSIFICATION	6.087828667862986E-6	DEFECT
// either end of buffer or a line separator char	WITHOUT_CLASSIFICATION	0.9999990738018675	WITHOUT_CLASSIFICATION	9.261981325361094E-7	DEFECT
// check adapter	WITHOUT_CLASSIFICATION	0.9999999046982443	WITHOUT_CLASSIFICATION	9.530175580279076E-8	DEFECT
//can throw the same exception, if there is no this(Project) ctor.	WITHOUT_CLASSIFICATION	0.9999627947531027	WITHOUT_CLASSIFICATION	3.720524689730676E-5	DEFECT
//now we instantiate	WITHOUT_CLASSIFICATION	0.999997382260209	WITHOUT_CLASSIFICATION	2.6177397909833443E-6	DEFECT
//set up project references.	WITHOUT_CLASSIFICATION	0.9999986593085781	WITHOUT_CLASSIFICATION	1.3406914218320483E-6	DEFECT
/** Our current message output status. Follows Project.MSG_XXX. */	WITHOUT_CLASSIFICATION	0.9999796203110469	WITHOUT_CLASSIFICATION	2.037968895314902E-5	DEFECT
/* null */	WITHOUT_CLASSIFICATION	0.9999952191938863	WITHOUT_CLASSIFICATION	4.780806113703788E-6	DEFECT
// expect the worst	WITHOUT_CLASSIFICATION	0.9999909737349287	WITHOUT_CLASSIFICATION	9.026265071230602E-6	DEFECT
//this is the list of lu	WITHOUT_CLASSIFICATION	0.9999895539606228	WITHOUT_CLASSIFICATION	1.044603937709702E-5	DEFECT
// cycle through given args	WITHOUT_CLASSIFICATION	0.999999555868592	WITHOUT_CLASSIFICATION	4.44131408060421E-7	DEFECT
// set the flag to display the targets and quit	WITHOUT_CLASSIFICATION	0.9999989824985706	WITHOUT_CLASSIFICATION	1.017501429395808E-6	DEFECT
// eat up next arg if present, default to build.xml	WITHOUT_CLASSIFICATION	0.999976887545262	WITHOUT_CLASSIFICATION	2.3112454737963432E-5	DEFECT
// we don't have any more args to recognize!	WITHOUT_CLASSIFICATION	0.9971746325934315	WITHOUT_CLASSIFICATION	0.002825367406568473	DEFECT
// if it's no other arg, it may be the target	WITHOUT_CLASSIFICATION	0.9999999483940885	WITHOUT_CLASSIFICATION	5.1605911674481126E-8	DEFECT
// if buildFile was not specified on the command line,	WITHOUT_CLASSIFICATION	0.9999870560090866	WITHOUT_CLASSIFICATION	1.2943990913382023E-5	DEFECT
// but -find then search for it	WITHOUT_CLASSIFICATION	0.9999956983056892	WITHOUT_CLASSIFICATION	4.301694310763769E-6	DEFECT
// make sure buildfile exists	WITHOUT_CLASSIFICATION	0.9999988600818468	WITHOUT_CLASSIFICATION	1.1399181531634555E-6	DEFECT
// make sure it's not a directory (this falls into the ultra // paranoid lets check everything category	WITHOUT_CLASSIFICATION	0.9999886135444995	WITHOUT_CLASSIFICATION	1.1386455500540893E-5	DEFECT
// Load the property files specified by -propertyfile	WITHOUT_CLASSIFICATION	0.9999980606379217	WITHOUT_CLASSIFICATION	1.9393620781642646E-6	DEFECT
// ensure that -D properties take precedence	WITHOUT_CLASSIFICATION	0.9999967368962386	WITHOUT_CLASSIFICATION	3.2631037615217644E-6	DEFECT
// check if the target file exists in the current directory	WITHOUT_CLASSIFICATION	0.9999999558948979	WITHOUT_CLASSIFICATION	4.41051022288393E-8	DEFECT
// change to parent directory	WITHOUT_CLASSIFICATION	0.9999992629565516	WITHOUT_CLASSIFICATION	7.370434483793726E-7	DEFECT
// refresh our file handle	WITHOUT_CLASSIFICATION	0.9999996235201144	WITHOUT_CLASSIFICATION	3.764798855959766E-7	DEFECT
// use a system manager that prevents from System.exit()	WITHOUT_CLASSIFICATION	0.9999937604550472	WITHOUT_CLASSIFICATION	6.239544952732443E-6	DEFECT
//SecurityManager can not be installed here for backwards //compatibility reasons (PD). Needs to be loaded prior to //ant class if we are going to implement it. //System.setSecurityManager(new NoExitSecurityManager());	WITHOUT_CLASSIFICATION	0.9981814749933386	WITHOUT_CLASSIFICATION	0.001818525006661428	DEFECT
// set the thread priorities	WITHOUT_CLASSIFICATION	0.9999999444850091	WITHOUT_CLASSIFICATION	5.551499095147224E-8	DEFECT
//we cannot set the priority here.	WITHOUT_CLASSIFICATION	0.9999351875049906	WITHOUT_CLASSIFICATION	6.481249500943778E-5	DEFECT
// set user-define properties	WITHOUT_CLASSIFICATION	0.9999979125945484	WITHOUT_CLASSIFICATION	2.0874054516633955E-6	DEFECT
//proxy setup if enabled	WITHOUT_CLASSIFICATION	0.9999985375658091	WITHOUT_CLASSIFICATION	1.4624341908796193E-6	DEFECT
// make sure that we have a target to execute	WITHOUT_CLASSIFICATION	0.9999953383893617	WITHOUT_CLASSIFICATION	4.661610638262673E-6	DEFECT
// Add the default listener	WITHOUT_CLASSIFICATION	0.9999999819575572	WITHOUT_CLASSIFICATION	1.804244278458586E-8	DEFECT
// find the target with the longest name	WITHOUT_CLASSIFICATION	0.9999977572797789	WITHOUT_CLASSIFICATION	2.2427202210250833E-6	DEFECT
// split the targets in top-level and sub-targets depending // on the presence of a description	WITHOUT_CLASSIFICATION	0.9999995099811293	WITHOUT_CLASSIFICATION	4.900188707547448E-7	DEFECT
// shouldn't need to check but...	WITHOUT_CLASSIFICATION	0.9999935090927522	WITHOUT_CLASSIFICATION	6.490907247768994E-6	DEFECT
// now, start printing the targets and their descriptions	WITHOUT_CLASSIFICATION	0.9999999393276282	WITHOUT_CLASSIFICATION	6.067237178155019E-8	DEFECT
// got a bit annoyed that I couldn't find a pad function	WITHOUT_CLASSIFICATION	0.999975175110371	WITHOUT_CLASSIFICATION	2.482488962898837E-5	DEFECT
/*<String,String>*/	WITHOUT_CLASSIFICATION	0.9998931543131712	WITHOUT_CLASSIFICATION	1.0684568682886319E-4	DEFECT
//At least one constructor is guaranteed to be there, but check anyway.	WITHOUT_CLASSIFICATION	0.9999998045890098	WITHOUT_CLASSIFICATION	1.95410990159771E-7	DEFECT
// is the zip file in the cache	WITHOUT_CLASSIFICATION	0.9999998928658059	WITHOUT_CLASSIFICATION	1.071341940488931E-7	DEFECT
// store the token just read for next time	WITHOUT_CLASSIFICATION	0.9999939558329056	WITHOUT_CLASSIFICATION	6.0441670943124916E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999981731396919	WITHOUT_CLASSIFICATION	1.82686030805923E-6	DEFECT
// add the types of the parent project	WITHOUT_CLASSIFICATION	0.9999982626529123	WITHOUT_CLASSIFICATION	1.7373470876914134E-6	DEFECT
// ignore path elements which are not valid relative to the // project	WITHOUT_CLASSIFICATION	0.99999579326583	WITHOUT_CLASSIFICATION	4.206734169941958E-6	DEFECT
// Expecting an exception to be thrown by this call: // IllegalArgumentException: wrong number of Arguments	WITHOUT_CLASSIFICATION	0.9681041811058807	WITHOUT_CLASSIFICATION	0.03189581889411923	DEFECT
// we need to search the components of the path to see if we can // find the class we want.	WITHOUT_CLASSIFICATION	0.9999967906026969	WITHOUT_CLASSIFICATION	3.2093973030977813E-6	DEFECT
// default to the global setting and then see // if this class belongs to a package which has been // designated to use a specific loader first // (this one or the parent one)	WITHOUT_CLASSIFICATION	0.9999998257386014	WITHOUT_CLASSIFICATION	1.7426139860640925E-7	DEFECT
// we need to search the components of the path to see if // we can find the class we want.	WITHOUT_CLASSIFICATION	0.9999984059388068	WITHOUT_CLASSIFICATION	1.594061193147488E-6	DEFECT
// try and load from this loader if the parent either didn't find // it or wasn't consulted.	WITHOUT_CLASSIFICATION	0.9999996563799081	WITHOUT_CLASSIFICATION	3.4362009187462575E-7	DEFECT
// this loader was first but it didn't find it - try the parent	WITHOUT_CLASSIFICATION	0.9999907959586578	WITHOUT_CLASSIFICATION	9.204041342183625E-6	DEFECT
/*<URL>*/	WITHOUT_CLASSIFICATION	0.9999566294937621	WITHOUT_CLASSIFICATION	4.3370506237853896E-5	DEFECT
/*<URL>*/	WITHOUT_CLASSIFICATION	0.9999566294937621	WITHOUT_CLASSIFICATION	4.3370506237853896E-5	DEFECT
/*<URL>*/	WITHOUT_CLASSIFICATION	0.9999566294937621	WITHOUT_CLASSIFICATION	4.3370506237853896E-5	DEFECT
// Delegate to the parent:	WITHOUT_CLASSIFICATION	0.9999993091854611	WITHOUT_CLASSIFICATION	6.908145390352426E-7	DEFECT
// Note: could cause overlaps in case ClassLoader.this.parent has matches.	WITHOUT_CLASSIFICATION	0.9999998702299807	WITHOUT_CLASSIFICATION	1.2977001939631604E-7	DEFECT
// ClassLoader.this.parent is already delegated to from // ClassLoader.getResources, no need:	WITHOUT_CLASSIFICATION	0.9999998010709275	WITHOUT_CLASSIFICATION	1.9892907259486898E-7	DEFECT
// Normal case.	WITHOUT_CLASSIFICATION	0.9999997897257357	WITHOUT_CLASSIFICATION	2.1027426432457527E-7	DEFECT
// Inverted.	WITHOUT_CLASSIFICATION	0.999997318151725	WITHOUT_CLASSIFICATION	2.681848275012169E-6	DEFECT
// already defined	WITHOUT_CLASSIFICATION	0.9999996154934393	WITHOUT_CLASSIFICATION	3.8450656077692123E-7	DEFECT
// define the package now	WITHOUT_CLASSIFICATION	0.9999998940177107	WITHOUT_CLASSIFICATION	1.0598228921429831E-7	DEFECT
// ioe.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999997368298824	WITHOUT_CLASSIFICATION	2.6317011767084236E-7	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9999655314264141	WITHOUT_CLASSIFICATION	3.4468573585883755E-5	DEFECT
// Not significant for the class loader.	WITHOUT_CLASSIFICATION	0.9999992588116734	WITHOUT_CLASSIFICATION	7.411883265787341E-7	DEFECT
// Not significant for the class loader.	WITHOUT_CLASSIFICATION	0.9999992588116734	WITHOUT_CLASSIFICATION	7.411883265787341E-7	DEFECT
// {tasks, types}	WITHOUT_CLASSIFICATION	0.9999997343771226	WITHOUT_CLASSIFICATION	2.656228773599568E-7	DEFECT
// add the parsed namespaces of the parent project	WITHOUT_CLASSIFICATION	0.9999944662842609	WITHOUT_CLASSIFICATION	5.533715739002282E-6	DEFECT
// we need to search the components of the path to see if // we can find the class we want.	WITHOUT_CLASSIFICATION	0.9999984059388068	WITHOUT_CLASSIFICATION	1.594061193147488E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999995133297559	WITHOUT_CLASSIFICATION	4.86670244023277E-7	DEFECT
// don't have to check for public, since // getConstructor finds public constructors only.	WITHOUT_CLASSIFICATION	0.9999973005857722	WITHOUT_CLASSIFICATION	2.6994142278272484E-6	DEFECT
// set default value, can be changed by the user	WITHOUT_CLASSIFICATION	0.9999999689932485	WITHOUT_CLASSIFICATION	3.100675148271849E-8	DEFECT
//too bad	WITHOUT_CLASSIFICATION	0.9999823415252448	WITHOUT_CLASSIFICATION	1.7658474755293715E-5	DEFECT
//must have same validity; then if they are valid they must also be the same:	WITHOUT_CLASSIFICATION	0.999997500604102	WITHOUT_CLASSIFICATION	2.499395898005228E-6	DEFECT
// namespace that does not contain antlib	WITHOUT_CLASSIFICATION	0.9999998662496487	WITHOUT_CLASSIFICATION	1.3375035140443737E-7	DEFECT
// Already processed	WITHOUT_CLASSIFICATION	0.9999991400114531	WITHOUT_CLASSIFICATION	8.599885468349912E-7	DEFECT
//there to stop error messages being "null"	WITHOUT_CLASSIFICATION	0.9999802064445723	WITHOUT_CLASSIFICATION	1.9793555427710798E-5	DEFECT
//if this is left out, bad things happen. like all build files break //on the first element encountered.	WITHOUT_CLASSIFICATION	0.9998594482569666	WITHOUT_CLASSIFICATION	1.4055174303339703E-4	DEFECT
// a fishing expedition :- ignore errors if antlib not present	WITHOUT_CLASSIFICATION	0.999803123321832	WITHOUT_CLASSIFICATION	1.9687667816795763E-4	DEFECT
//class of problem	WITHOUT_CLASSIFICATION	0.9999890980335346	WITHOUT_CLASSIFICATION	1.090196646533434E-5	DEFECT
//running under an IDE that doesn't set ANT_HOME	WITHOUT_CLASSIFICATION	0.9999927022360017	WITHOUT_CLASSIFICATION	7.2977639983195736E-6	DEFECT
//look up the name	WITHOUT_CLASSIFICATION	0.9999981571199416	WITHOUT_CLASSIFICATION	1.842880058326438E-6	DEFECT
//we are defined, so it is an instantiation problem	WITHOUT_CLASSIFICATION	0.999984157600913	WITHOUT_CLASSIFICATION	1.5842399087080655E-5	DEFECT
//start with instantiating the class.	WITHOUT_CLASSIFICATION	0.9999906287248527	WITHOUT_CLASSIFICATION	9.371275147376226E-6	DEFECT
//here we successfully loaded the class or failed.	WITHOUT_CLASSIFICATION	0.9999832266965587	WITHOUT_CLASSIFICATION	1.677330344124529E-5	DEFECT
//success: proceed with more steps	WITHOUT_CLASSIFICATION	0.9999704607570263	WITHOUT_CLASSIFICATION	2.953924297372705E-5	DEFECT
//hey, there is nothing wrong with us	WITHOUT_CLASSIFICATION	0.9968830860724515	WITHOUT_CLASSIFICATION	0.003116913927548478	DEFECT
/*<Thread,Task>*/	WITHOUT_CLASSIFICATION	0.9999934732962289	WITHOUT_CLASSIFICATION	6.526703770988762E-6	DEFECT
/*<ThreadGroup,Task>*/	WITHOUT_CLASSIFICATION	0.9999934115488414	WITHOUT_CLASSIFICATION	6.588451158635152E-6	DEFECT
// If the listeners already has this listener, do nothing	WITHOUT_CLASSIFICATION	0.9999998960764129	WITHOUT_CLASSIFICATION	1.0392358710030623E-7	DEFECT
// we need to build the hashtable dynamically	WITHOUT_CLASSIFICATION	0.9999989088542522	WITHOUT_CLASSIFICATION	1.0911457478298465E-6	DEFECT
// sanity check	WITHOUT_CLASSIFICATION	0.9999997598487818	WITHOUT_CLASSIFICATION	2.40151218271085E-7	DEFECT
//try the current classloader	WITHOUT_CLASSIFICATION	0.9999997803440508	WITHOUT_CLASSIFICATION	2.1965594914833664E-7	DEFECT
// throw further	WITHOUT_CLASSIFICATION	0.9999291843794754	WITHOUT_CLASSIFICATION	7.081562052460068E-5	DEFECT
// only the first build exception is reported	WITHOUT_CLASSIFICATION	0.9999091080444936	WITHOUT_CLASSIFICATION	9.089195550633494E-5	DEFECT
// Make sure we exist	WITHOUT_CLASSIFICATION	0.9999982497907216	WITHOUT_CLASSIFICATION	1.7502092784021037E-6	DEFECT
// Currently visiting this node, so have a cycle	WITHOUT_CLASSIFICATION	0.9999995919764437	WITHOUT_CLASSIFICATION	4.0802355636759563E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999995133297559	WITHOUT_CLASSIFICATION	4.86670244023277E-7	DEFECT
// create a new Vector to avoid ConcurrentModificationExc when // the listeners get added/removed while we are in fire	WITHOUT_CLASSIFICATION	0.999998480925761	WITHOUT_CLASSIFICATION	1.5190742390047447E-6	DEFECT
// sanity check ourselves, if we've been asked to build nothing // then we should complain	WITHOUT_CLASSIFICATION	0.9999994841936971	WITHOUT_CLASSIFICATION	5.158063029443245E-7	DEFECT
// Sort and run the dependency tree. // Sorting checks if all the targets (and dependencies) // exist, and if there is any cycle in the dependency // graph.	WITHOUT_CLASSIFICATION	0.9999998029505143	WITHOUT_CLASSIFICATION	1.970494856807981E-7	DEFECT
// We first run a DFS based sort using each root as a starting node. // This creates the minimum sequence of Targets to the root node(s). // We then do a sort on any remaining unVISITED targets. // This is unnecessary for doing our build, but it catches // circular dependencies or missing Targets on the entire // dependency tree, not just on the Targets that depend on the // build Target.	WITHOUT_CLASSIFICATION	0.9999993592261662	WITHOUT_CLASSIFICATION	6.407738337825136E-7	DEFECT
// no warning, this is not changing anything	WITHOUT_CLASSIFICATION	0.999997646716128	WITHOUT_CLASSIFICATION	2.3532838719777247E-6	DEFECT
// Check for old id behaviour	WITHOUT_CLASSIFICATION	0.9999991561132341	WITHOUT_CLASSIFICATION	8.438867659132847E-7	DEFECT
// Inform IH to clear the cache	WITHOUT_CLASSIFICATION	0.9999978003233029	WITHOUT_CLASSIFICATION	2.1996766971445978E-6	DEFECT
// register this as the current task on the current thread.	WITHOUT_CLASSIFICATION	0.9999990789307968	WITHOUT_CLASSIFICATION	9.210692033485572E-7	DEFECT
// Make sure that	WITHOUT_CLASSIFICATION	0.9999998225278192	WITHOUT_CLASSIFICATION	1.7747218075061496E-7	DEFECT
// ignore this if the object does not have // a set project method or the method // is private/protected.	WITHOUT_CLASSIFICATION	0.9999987076750675	WITHOUT_CLASSIFICATION	1.292324932508889E-6	DEFECT
//override facility for subclasses to put custom hashtables in	WITHOUT_CLASSIFICATION	0.9999890390635424	WITHOUT_CLASSIFICATION	1.0960936457528542E-5	DEFECT
// --------------------  Hook management  --------------------	WITHOUT_CLASSIFICATION	0.9999915011526789	WITHOUT_CLASSIFICATION	8.498847321109647E-6	DEFECT
// --------------------  Methods to override  --------------------	WITHOUT_CLASSIFICATION	0.9999777449769331	WITHOUT_CLASSIFICATION	2.2255023066838715E-5	DEFECT
// If next has handled the property	WITHOUT_CLASSIFICATION	0.9999844214397741	WITHOUT_CLASSIFICATION	1.5578560225943946E-5	DEFECT
// try to get it from the project or keys // Backward compatibility	WITHOUT_CLASSIFICATION	0.9999972213607763	WITHOUT_CLASSIFICATION	2.7786392237402586E-6	DEFECT
// -------------------- Default implementation  -------------------- // Methods used to support the default behavior and provide backward // compatibility. Some will be deprecated, you should avoid calling them.	WITHOUT_CLASSIFICATION	0.9999080539269157	WITHOUT_CLASSIFICATION	9.194607308428953E-5	DEFECT
// user (CLI) properties take precedence	WITHOUT_CLASSIFICATION	0.9999828135305453	WITHOUT_CLASSIFICATION	1.7186469454636834E-5	DEFECT
// -------------------- Getting properties  --------------------	WITHOUT_CLASSIFICATION	0.9999019501879131	WITHOUT_CLASSIFICATION	9.804981208694833E-5	DEFECT
// -------------------- Property parsing  -------------------- // Moved from ProjectHelper. You can override the static method - // this is used for backward compatibility (for code that calls // the parse method in ProjectHelper).	WITHOUT_CLASSIFICATION	0.9997575688773692	WITHOUT_CLASSIFICATION	2.4243112263073828E-4	DEFECT
//search for the next instance of $ from the 'prev' position	WITHOUT_CLASSIFICATION	0.9998480242631025	WITHOUT_CLASSIFICATION	1.519757368975736E-4	DEFECT
//if we are at the end of the string, we tack on a $ //then move past it	WITHOUT_CLASSIFICATION	0.9999698562201887	WITHOUT_CLASSIFICATION	3.0143779811297136E-5	DEFECT
//peek ahead to see if the next char is a property or not //not a property: insert the char as a literal	WITHOUT_CLASSIFICATION	0.9998941880151617	WITHOUT_CLASSIFICATION	1.0581198483825466E-4	DEFECT
//backwards compatibility two $ map to one mode	WITHOUT_CLASSIFICATION	0.9998927972046595	WITHOUT_CLASSIFICATION	1.0720279534054866E-4	DEFECT
//new behaviour: $X maps to $X for all values of X!='$'	WITHOUT_CLASSIFICATION	0.9970982534959882	WITHOUT_CLASSIFICATION	0.0029017465040117587	DEFECT
//property found, extract its name or bail on a typo	WITHOUT_CLASSIFICATION	0.999906407481363	WITHOUT_CLASSIFICATION	9.359251863699795E-5	DEFECT
//no more $ signs found //if there is any tail to the file, append it	WITHOUT_CLASSIFICATION	0.9999677984633121	WITHOUT_CLASSIFICATION	3.220153668795499E-5	DEFECT
//empty	WITHOUT_CLASSIFICATION	0.9999817562721358	WITHOUT_CLASSIFICATION	1.824372786417827E-5	DEFECT
// The children are added to after this cloning	WITHOUT_CLASSIFICATION	0.9999948715993147	WITHOUT_CLASSIFICATION	5.128400685312306E-6	DEFECT
// Make sure the dependency is not empty string	WITHOUT_CLASSIFICATION	0.9999871971961068	WITHOUT_CLASSIFICATION	1.2802803893184202E-5	DEFECT
// Make sure that depends attribute does not // end in a ,	WITHOUT_CLASSIFICATION	0.9999791312430415	WITHOUT_CLASSIFICATION	2.0868756958520588E-5	DEFECT
// A project helper may process multiple files. We'll keep track // of them - to avoid loops and to allow caching. The caching will // probably accelerate things like <antCall>. // The key is the absolute file, the value is a processed tree. // Since the tree is composed of UE and RC - it can be reused ! // protected Hashtable processedFiles=new Hashtable();	WITHOUT_CLASSIFICATION	0.999999948480043	WITHOUT_CLASSIFICATION	5.1519956991816884E-8	DEFECT
//    public Hashtable getProcessedFiles() { //        return processedFiles; //    }	WITHOUT_CLASSIFICATION	0.9999999882710663	WITHOUT_CLASSIFICATION	1.1728933632084696E-8	DEFECT
// --------------------  Parse method  --------------------	WITHOUT_CLASSIFICATION	0.9999985168648237	WITHOUT_CLASSIFICATION	1.4831351763925332E-6	DEFECT
// Identify the class loader we will be using. Ant may be // in a webapp or embedded in a different app	WITHOUT_CLASSIFICATION	0.9999991199700848	WITHOUT_CLASSIFICATION	8.800299151769643E-7	DEFECT
// First, try the system property	WITHOUT_CLASSIFICATION	0.9999749139905982	WITHOUT_CLASSIFICATION	2.508600940175669E-5	DEFECT
// A JDK1.3 'service' ( like in JAXP ). That will plug a helper // automatically if in CLASSPATH, with the right META-INF/services.	WITHOUT_CLASSIFICATION	0.9996005990081261	WITHOUT_CLASSIFICATION	3.9940099187381415E-4	DEFECT
// This code is needed by EBCDIC and other strange systems. // It's a fix for bugs reported in xerces	WITHOUT_CLASSIFICATION	0.9562413509622858	WITHOUT_CLASSIFICATION	0.04375864903771426	DEFECT
// try next method	WITHOUT_CLASSIFICATION	0.9999931446814299	WITHOUT_CLASSIFICATION	6.855318570092772E-6	DEFECT
// -------------------- Static utils, used by most helpers ----------------	WITHOUT_CLASSIFICATION	0.9999989956487273	WITHOUT_CLASSIFICATION	1.0043512727525074E-6	DEFECT
// reflect these into the target	WITHOUT_CLASSIFICATION	0.9999998617082264	WITHOUT_CLASSIFICATION	1.3829177357529864E-7	DEFECT
// id attribute must be set externally	WITHOUT_CLASSIFICATION	0.99999818688952	WITHOUT_CLASSIFICATION	1.8131104800152072E-6	DEFECT
// needed since project properties are not accessible	WITHOUT_CLASSIFICATION	0.9999728741253701	WITHOUT_CLASSIFICATION	2.712587462987751E-5	DEFECT
/*<UnknownElement>*/	WITHOUT_CLASSIFICATION	0.9999621282295651	WITHOUT_CLASSIFICATION	3.7871770434856886E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999981731396919	WITHOUT_CLASSIFICATION	1.82686030805923E-6	DEFECT
/*<String,String>*/	WITHOUT_CLASSIFICATION	0.9998931543131712	WITHOUT_CLASSIFICATION	1.0684568682886319E-4	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9999655314264141	WITHOUT_CLASSIFICATION	3.4468573585883755E-5	DEFECT
// reflect these into the target	WITHOUT_CLASSIFICATION	0.9999998617082264	WITHOUT_CLASSIFICATION	1.3829177357529864E-7	DEFECT
// id attribute must be set externally	WITHOUT_CLASSIFICATION	0.99999818688952	WITHOUT_CLASSIFICATION	1.8131104800152072E-6	DEFECT
// Attributes	WITHOUT_CLASSIFICATION	0.9999974536858888	WITHOUT_CLASSIFICATION	2.5463141111831164E-6	DEFECT
// configure attributes of the object and it's children. If it is // a task container, defer the configuration till the task container // attempts to use the task	WITHOUT_CLASSIFICATION	0.9999994194967753	WITHOUT_CLASSIFICATION	5.805032247306347E-7	DEFECT
// plain impossible to get here, maybeConfigure should // have thrown an exception.	WITHOUT_CLASSIFICATION	0.9998839532616018	WITHOUT_CLASSIFICATION	1.1604673839806823E-4	DEFECT
// Finished executing the task, null it to allow // GC do its job // If this UE is used again, a new "realthing" will be made	WITHOUT_CLASSIFICATION	0.9999999017393808	WITHOUT_CLASSIFICATION	9.826061921602432E-8	DEFECT
// Do the runtime	WITHOUT_CLASSIFICATION	0.9999980886695178	WITHOUT_CLASSIFICATION	1.911330482184829E-6	DEFECT
// UnknownElement always has an associated target	WITHOUT_CLASSIFICATION	0.9999999936921657	WITHOUT_CLASSIFICATION	6.307834220845776E-9	DEFECT
//return elementName;	WITHOUT_CLASSIFICATION	0.9999982557718031	WITHOUT_CLASSIFICATION	1.7442281968785957E-6	DEFECT
// Are the names the same ?	WITHOUT_CLASSIFICATION	0.9999991789533157	WITHOUT_CLASSIFICATION	8.210466842407504E-7	DEFECT
// Are attributes the same ?	WITHOUT_CLASSIFICATION	0.9999995534087309	WITHOUT_CLASSIFICATION	4.4659126906731416E-7	DEFECT
// Are the sub elements the same ?	WITHOUT_CLASSIFICATION	0.9999994562568568	WITHOUT_CLASSIFICATION	5.437431431292244E-7	DEFECT
// hidden constructor	WITHOUT_CLASSIFICATION	0.9999999289925665	WITHOUT_CLASSIFICATION	7.100743346942676E-8	DEFECT
//create the file	WITHOUT_CLASSIFICATION	0.9999996219543744	WITHOUT_CLASSIFICATION	3.7804562564341505E-7	DEFECT
//do some writing to it	WITHOUT_CLASSIFICATION	0.9999888695065677	WITHOUT_CLASSIFICATION	1.1130493432332635E-5	DEFECT
//calendar stuff.	WITHOUT_CLASSIFICATION	0.9999953248314246	WITHOUT_CLASSIFICATION	4.6751685753959275E-6	DEFECT
//not included, do nothing	WITHOUT_CLASSIFICATION	0.9999706167133001	WITHOUT_CLASSIFICATION	2.9383286699782224E-5	DEFECT
// not included, to nothing	WITHOUT_CLASSIFICATION	0.9999673636193921	WITHOUT_CLASSIFICATION	3.26363806078442E-5	DEFECT
/*<RuntimeConfigurable>*/	WITHOUT_CLASSIFICATION	0.9999832242464164	WITHOUT_CLASSIFICATION	1.677575358358142E-5	DEFECT
/*<String>*/	WITHOUT_CLASSIFICATION	0.9998554452432202	WITHOUT_CLASSIFICATION	1.4455475677977863E-4	DEFECT
// Configure the object	WITHOUT_CLASSIFICATION	0.9999967706083319	WITHOUT_CLASSIFICATION	3.2293916680350437E-6	DEFECT
// Most likely an UnknownElement	WITHOUT_CLASSIFICATION	0.9999975020841131	WITHOUT_CLASSIFICATION	2.497915886889869E-6	DEFECT
// Children (this is a shadow of UnknownElement#children)	WITHOUT_CLASSIFICATION	0.9999982522509924	WITHOUT_CLASSIFICATION	1.7477490076297917E-6	DEFECT
// poly type	WITHOUT_CLASSIFICATION	0.999997270839392	WITHOUT_CLASSIFICATION	2.7291606080084787E-6	DEFECT
// Text	WITHOUT_CLASSIFICATION	0.9999873966036674	WITHOUT_CLASSIFICATION	1.260339633260492E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999995287844801	WITHOUT_CLASSIFICATION	4.7121551989690683E-7	DEFECT
// store the token just read for next time	WITHOUT_CLASSIFICATION	0.9999939558329056	WITHOUT_CLASSIFICATION	6.0441670943124916E-6	DEFECT
// a task container - anything could happen - just add the // child to the container	WITHOUT_CLASSIFICATION	0.9999999080110085	WITHOUT_CLASSIFICATION	9.198899151160286E-8	DEFECT
// Is the text the same? //   Need to use equals on the string and not //   on the stringbuffer as equals on the string buffer //   does not compare the contents.	WITHOUT_CLASSIFICATION	0.9999581673290036	WITHOUT_CLASSIFICATION	4.18326709963651E-5	DEFECT
// Assume that this is an not supported attribute type // thrown for example by a dymanic attribute task // Do nothing	WITHOUT_CLASSIFICATION	0.9999719629680806	WITHOUT_CLASSIFICATION	2.803703191939965E-5	DEFECT
// on Windows and Unix, we can ignore delimiters and still have // enough information to tokenize correctly.	WITHOUT_CLASSIFICATION	0.9987815446383671	WITHOUT_CLASSIFICATION	0.0012184553616328164	DEFECT
// we are on a dos style system so this path could be a drive // spec. We look at the next token	WITHOUT_CLASSIFICATION	0.999948658962601	WITHOUT_CLASSIFICATION	5.134103739901166E-5	DEFECT
// we know we are on a DOS style platform and the next path // starts with a slash or backslash, so we know this is a // drive spec	WITHOUT_CLASSIFICATION	0.9999997559161987	WITHOUT_CLASSIFICATION	2.440838013213162E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999995133297559	WITHOUT_CLASSIFICATION	4.86670244023277E-7	DEFECT
// ignore ";" and get the next token	WITHOUT_CLASSIFICATION	0.9999803574075942	WITHOUT_CLASSIFICATION	1.9642592405884946E-5	DEFECT
// this path could be a drive spec, so look at the next token	WITHOUT_CLASSIFICATION	0.9999979788818404	WITHOUT_CLASSIFICATION	2.0211181595599145E-6	DEFECT
// it indeed is a drive spec, get the next bit	WITHOUT_CLASSIFICATION	0.9999941865141797	WITHOUT_CLASSIFICATION	5.813485820276932E-6	DEFECT
// implicit else: ignore the ':' since we have either a // UNIX or a relative path	WITHOUT_CLASSIFICATION	0.9999896752817471	WITHOUT_CLASSIFICATION	1.0324718252991959E-5	DEFECT
// Miscellaneous typical temporary files	WITHOUT_CLASSIFICATION	0.9999999633642895	WITHOUT_CLASSIFICATION	3.6635710366686285E-8	DEFECT
// CVS	WITHOUT_CLASSIFICATION	0.9999978612548966	WITHOUT_CLASSIFICATION	2.138745103427883E-6	DEFECT
// SCCS	WITHOUT_CLASSIFICATION	0.9999971505112727	WITHOUT_CLASSIFICATION	2.8494887274380866E-6	DEFECT
// Visual SourceSafe	WITHOUT_CLASSIFICATION	0.9999995152914788	WITHOUT_CLASSIFICATION	4.847085212822202E-7	DEFECT
// Subversion	WITHOUT_CLASSIFICATION	0.9999892438508804	WITHOUT_CLASSIFICATION	1.075614911964891E-5	DEFECT
// set in/excludes to reasonable defaults if needed:	WITHOUT_CLASSIFICATION	0.9999891277501421	WITHOUT_CLASSIFICATION	1.0872249857942147E-5	DEFECT
// if no basedir and no includes, nothing to do:	WITHOUT_CLASSIFICATION	0.9999986530766335	WITHOUT_CLASSIFICATION	1.3469233664068755E-6	DEFECT
//skip abs. paths not under basedir, if set:	WITHOUT_CLASSIFICATION	0.9999603637398411	WITHOUT_CLASSIFICATION	3.963626015894057E-5	DEFECT
//skip non-abs. paths if basedir == null:	WITHOUT_CLASSIFICATION	0.9999854554514502	WITHOUT_CLASSIFICATION	1.4544548549804726E-5	DEFECT
// we are going to scan everything anyway	WITHOUT_CLASSIFICATION	0.9999792746386276	WITHOUT_CLASSIFICATION	2.0725361372428145E-5	DEFECT
// Empty	WITHOUT_CLASSIFICATION	0.9999946703852443	WITHOUT_CLASSIFICATION	5.329614755733674E-6	DEFECT
// will be caught and redirected to Ant's logging system	WITHOUT_CLASSIFICATION	0.9999316328511052	WITHOUT_CLASSIFICATION	6.836714889476474E-5	DEFECT
// will be caught and redirected to Ant's logging system	WITHOUT_CLASSIFICATION	0.9999316328511052	WITHOUT_CLASSIFICATION	6.836714889476474E-5	DEFECT
//removing base from path yields no change; path not child of base	WITHOUT_CLASSIFICATION	0.9999118960489906	WITHOUT_CLASSIFICATION	8.810395100944354E-5	DEFECT
/* package-private */	WITHOUT_CLASSIFICATION	0.9999999663844111	WITHOUT_CLASSIFICATION	3.36155888618074E-8	DEFECT
// do the "singleton" initialization	WITHOUT_CLASSIFICATION	0.9999987021198907	WITHOUT_CLASSIFICATION	1.2978801092682213E-6	DEFECT
// Add the explicit resource collections to the archive.	WITHOUT_CLASSIFICATION	0.9999933383019728	WITHOUT_CLASSIFICATION	6.661698027292522E-6	DEFECT
// EOL was "\r\n"	WITHOUT_CLASSIFICATION	0.999997197710694	WITHOUT_CLASSIFICATION	2.802289306025218E-6	DEFECT
// don't have to check for interface, since then // taskClass would be abstract too.	WITHOUT_CLASSIFICATION	0.9999983891377489	WITHOUT_CLASSIFICATION	1.6108622510897195E-6	DEFECT
// ignore this if the class being used as a task does not have // a set location method.	WITHOUT_CLASSIFICATION	0.9999852387401996	WITHOUT_CLASSIFICATION	1.4761259800293749E-5	DEFECT
// ignore this if the class being used as a task does not have // a set project method.	WITHOUT_CLASSIFICATION	0.9999981143260445	WITHOUT_CLASSIFICATION	1.8856739554330857E-6	DEFECT
// put in the newroots map the include patterns without // wildcard tokens	WITHOUT_CLASSIFICATION	0.9999768558670298	WITHOUT_CLASSIFICATION	2.3144132970296995E-5	DEFECT
// only scan directories that can include matched files or // directories	WITHOUT_CLASSIFICATION	0.9999978736987593	WITHOUT_CLASSIFICATION	2.1263012407360938E-6	DEFECT
// may be on a case insensitive file system.  We want // the results to show what's really on the disk, so // we need to double check.	WITHOUT_CLASSIFICATION	0.9999997205925041	WITHOUT_CLASSIFICATION	2.794074959852992E-7	DEFECT
// adapt currentelement to the case we've // actually found	WITHOUT_CLASSIFICATION	0.999998854793188	WITHOUT_CLASSIFICATION	1.1452068120537684E-6	DEFECT
// I am the only one so I have to close the reader	WITHOUT_CLASSIFICATION	0.9999789131505507	WITHOUT_CLASSIFICATION	2.10868494493992E-5	DEFECT
// I am the only one so I have to close the reader	WITHOUT_CLASSIFICATION	0.9999789131505507	WITHOUT_CLASSIFICATION	2.10868494493992E-5	DEFECT
// get parameters	WITHOUT_CLASSIFICATION	0.9999980912835209	WITHOUT_CLASSIFICATION	1.9087164790128124E-6	DEFECT
// Calculate the EOL string per the current config	WITHOUT_CLASSIFICATION	0.9999995693164424	WITHOUT_CLASSIFICATION	4.306835575943283E-7	DEFECT
// assume (eol == CrLf.LF || eol == CrLf.UNIX)	WITHOUT_CLASSIFICATION	0.9999995331108744	WITHOUT_CLASSIFICATION	4.6688912560682644E-7	DEFECT
// Add/Remove tabs	WITHOUT_CLASSIFICATION	0.9999981048554841	WITHOUT_CLASSIFICATION	1.895144515953129E-6	DEFECT
// Add missing EOF character	WITHOUT_CLASSIFICATION	0.9999997825434086	WITHOUT_CLASSIFICATION	2.1745659149081519E-7	DEFECT
// Mask, block from being edited, all characters in constants.	WITHOUT_CLASSIFICATION	0.9999998531997968	WITHOUT_CLASSIFICATION	1.4680020321912738E-7	DEFECT
// The current character is always emitted.	WITHOUT_CLASSIFICATION	0.9999979149077189	WITHOUT_CLASSIFICATION	2.085092281090382E-6	DEFECT
// Fall tru	WITHOUT_CLASSIFICATION	0.9999969200050759	WITHOUT_CLASSIFICATION	3.0799949240685232E-6	DEFECT
// Fall tru	WITHOUT_CLASSIFICATION	0.9999969200050759	WITHOUT_CLASSIFICATION	3.0799949240685232E-6	DEFECT
// Fall tru	WITHOUT_CLASSIFICATION	0.9999969200050759	WITHOUT_CLASSIFICATION	3.0799949240685232E-6	DEFECT
// Fall tru	WITHOUT_CLASSIFICATION	0.9999969200050759	WITHOUT_CLASSIFICATION	3.0799949240685232E-6	DEFECT
// Fall tru	WITHOUT_CLASSIFICATION	0.9999969200050759	WITHOUT_CLASSIFICATION	3.0799949240685232E-6	DEFECT
// EOL	WITHOUT_CLASSIFICATION	0.99998593318629	WITHOUT_CLASSIFICATION	1.406681371008345E-5	DEFECT
// EOL was "\n"	WITHOUT_CLASSIFICATION	0.999996621024053	WITHOUT_CLASSIFICATION	3.3789759471142815E-6	DEFECT
// EOL was "\r\r\n"	WITHOUT_CLASSIFICATION	0.999997197710694	WITHOUT_CLASSIFICATION	2.802289306025218E-6	DEFECT
// EOL was "\r"	WITHOUT_CLASSIFICATION	0.9999971549315373	WITHOUT_CLASSIFICATION	2.8450684627105707E-6	DEFECT
// If source at EOF and lookAhead is ctrl-z, return EOF (NOT ctrl-z)	WITHOUT_CLASSIFICATION	0.9999991644816483	WITHOUT_CLASSIFICATION	8.355183516609644E-7	DEFECT
// if source is EOF but last character was NOT ctrl-z, return ctrl-z	WITHOUT_CLASSIFICATION	0.9999999804023812	WITHOUT_CLASSIFICATION	1.9597618699304835E-8	DEFECT
// Return current look-ahead	WITHOUT_CLASSIFICATION	0.9999981904461734	WITHOUT_CLASSIFICATION	1.8095538265168049E-6	DEFECT
// EOL was "\r\r" - handle as two consecutive "\r" and // "\r"	WITHOUT_CLASSIFICATION	0.9999998570415545	WITHOUT_CLASSIFICATION	1.429584455432096E-7	DEFECT
// Instance initializer: Executes just after the super() call in this // class's constructor.	WITHOUT_CLASSIFICATION	0.9999999644674065	WITHOUT_CLASSIFICATION	3.553259354850009E-8	DEFECT
// Return copy so that the call must call setEof() to change the state // of fixCRLF	WITHOUT_CLASSIFICATION	0.9999999599323846	WITHOUT_CLASSIFICATION	4.0067615430455465E-8	DEFECT
// Return copy so that the call must call setEol() to change the state // of fixCRLF	WITHOUT_CLASSIFICATION	0.999999954594729	WITHOUT_CLASSIFICATION	4.540527087318365E-8	DEFECT
// Return copy so that the caller must call setTab() to change the state // of fixCRLF.	WITHOUT_CLASSIFICATION	0.9999999803182539	WITHOUT_CLASSIFICATION	1.9681746096284074E-8	DEFECT
// If I'm removing an EOF character, do so first so that the other // filters don't see that character.	WITHOUT_CLASSIFICATION	0.9999999908451773	WITHOUT_CLASSIFICATION	9.154822711702526E-9	DEFECT
// Change all EOL characters to match the calculated EOL string. If // configured to do so, append a trailing EOL so that the file ends on // a EOL.	WITHOUT_CLASSIFICATION	0.9999999760843401	WITHOUT_CLASSIFICATION	2.3915659921333074E-8	DEFECT
// If filtering Java source, prevent changes to whitespace in // character and string literals.	WITHOUT_CLASSIFICATION	0.9999999960185781	WITHOUT_CLASSIFICATION	3.981421863552661E-9	DEFECT
// Works like clone() but doesn't show up in the Javadocs	WITHOUT_CLASSIFICATION	0.9999998086546517	WITHOUT_CLASSIFICATION	1.9134534843255473E-7	DEFECT
// getConstants is a static method, no need to // pass in the object	WITHOUT_CLASSIFICATION	0.9999972540341378	WITHOUT_CLASSIFICATION	2.745965862311215E-6	DEFECT
//this field will hold unnnn right after reading a non latin character //afterwards it will be truncated of one char every call to read	WITHOUT_CLASSIFICATION	0.9998692682264124	WITHOUT_CLASSIFICATION	1.3073177358753288E-4	DEFECT
//replace the last 0s by the chars contained in s	WITHOUT_CLASSIFICATION	0.9999997306692341	WITHOUT_CLASSIFICATION	2.693307659680417E-7	DEFECT
// line started with comment	WITHOUT_CLASSIFICATION	0.9999998398898045	WITHOUT_CLASSIFICATION	1.6011019550508015E-7	DEFECT
// ----------------------------------------- //  Predefined tokenizers // -----------------------------------------	WITHOUT_CLASSIFICATION	0.9999971677857363	WITHOUT_CLASSIFICATION	2.832214263794159E-6	DEFECT
// write everything up to the from	WITHOUT_CLASSIFICATION	0.9999428754810539	WITHOUT_CLASSIFICATION	5.7124518946136494E-5	DEFECT
// write the replacement to	WITHOUT_CLASSIFICATION	0.9999999097155478	WITHOUT_CLASSIFICATION	9.028445224727057E-8	DEFECT
// search again	WITHOUT_CLASSIFICATION	0.9999996477208786	WITHOUT_CLASSIFICATION	3.522791213610001E-7	DEFECT
// write the remaining characters	WITHOUT_CLASSIFICATION	0.9999999574223338	WITHOUT_CLASSIFICATION	4.2577666227855984E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999995133297559	WITHOUT_CLASSIFICATION	4.86670244023277E-7	DEFECT
// -------------------------------------------- // //      Tokenizer Classes (impls moved to oata.util) // // --------------------------------------------	WITHOUT_CLASSIFICATION	0.9999979864120386	WITHOUT_CLASSIFICATION	2.013587961267484E-6	DEFECT
// -------------------------------------------------------- //  static utility methods - could be placed somewhere else // --------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999998999221256	WITHOUT_CLASSIFICATION	1.0007787447018883E-7	DEFECT
//Remove start and end quotes if field is a String	WITHOUT_CLASSIFICATION	0.9997258192113518	WITHOUT_CLASSIFICATION	2.741807886481661E-4	DEFECT
// default buffer size	WITHOUT_CLASSIFICATION	0.9999993284779586	WITHOUT_CLASSIFICATION	6.715220413229252E-7	DEFECT
/* Stateless */	WITHOUT_CLASSIFICATION	0.9999998024858402	WITHOUT_CLASSIFICATION	1.9751415985663253E-7	DEFECT
// singletons - since all state is in the context	WITHOUT_CLASSIFICATION	0.9999970436565623	WITHOUT_CLASSIFICATION	2.956343437622561E-6	DEFECT
// we are in an imported file.	WITHOUT_CLASSIFICATION	0.999999844720126	WITHOUT_CLASSIFICATION	1.5527987392773916E-7	DEFECT
// top level file	WITHOUT_CLASSIFICATION	0.9999993821275717	WITHOUT_CLASSIFICATION	6.178724282563355E-7	DEFECT
// ?? OK ??	WITHOUT_CLASSIFICATION	0.9999991296492338	WITHOUT_CLASSIFICATION	8.703507663688642E-7	DEFECT
// use default if not file or file not found	WITHOUT_CLASSIFICATION	0.9999985420937377	WITHOUT_CLASSIFICATION	1.4579062622556336E-6	DEFECT
// Set the location of the implicit target associated with the project tag	WITHOUT_CLASSIFICATION	0.9999998750061148	WITHOUT_CLASSIFICATION	1.249938852431615E-7	DEFECT
// Ignore attributes from unknown uris	WITHOUT_CLASSIFICATION	0.9999977299196463	WITHOUT_CLASSIFICATION	2.2700803536228177E-6	DEFECT
// Ignore attributes from unknown uris	WITHOUT_CLASSIFICATION	0.9999977299196463	WITHOUT_CLASSIFICATION	2.2700803536228177E-6	DEFECT
// What's the difference between id and name ?	WITHOUT_CLASSIFICATION	0.9999999879848838	WITHOUT_CLASSIFICATION	1.2015116258112789E-8	DEFECT
// no further processing	WITHOUT_CLASSIFICATION	0.9999997421970425	WITHOUT_CLASSIFICATION	2.578029574565937E-7	DEFECT
// set explicitly before starting ?	WITHOUT_CLASSIFICATION	0.9999968379072186	WITHOUT_CLASSIFICATION	3.1620927814122024E-6	DEFECT
// Default for baseDir is the location of the build file.	WITHOUT_CLASSIFICATION	0.9999973682503949	WITHOUT_CLASSIFICATION	2.6317496051547144E-6	DEFECT
// check whether the user has specified an absolute path	WITHOUT_CLASSIFICATION	0.9999998802289175	WITHOUT_CLASSIFICATION	1.1977108251250838E-7	DEFECT
// Check if this target is in the current build file	WITHOUT_CLASSIFICATION	0.9999998362051257	WITHOUT_CLASSIFICATION	1.6379487424843938E-7	DEFECT
// If the name has not already been defined define it	WITHOUT_CLASSIFICATION	0.9999990253303852	WITHOUT_CLASSIFICATION	9.746696148089127E-7	DEFECT
// In an impored file (and not completely // ignoring the project tag)	WITHOUT_CLASSIFICATION	0.9999827705445606	WITHOUT_CLASSIFICATION	1.7229455439419916E-5	DEFECT
/* UnknownElement is used for tasks and data types - with               delayed eval */	WITHOUT_CLASSIFICATION	0.9999998399187032	WITHOUT_CLASSIFICATION	1.6008129681458047E-7	DEFECT
// Nested element	WITHOUT_CLASSIFICATION	0.9999998625932204	WITHOUT_CLASSIFICATION	1.3740677958046895E-7	DEFECT
// Task included in a target ( including the default one ).	WITHOUT_CLASSIFICATION	0.9999999298382756	WITHOUT_CLASSIFICATION	7.016172445241975E-8	DEFECT
// container.addTask(task); // This is a nop in UE: task.init();	WITHOUT_CLASSIFICATION	0.9999962256091472	WITHOUT_CLASSIFICATION	3.774390852699778E-6	DEFECT
// **   simple name specified   == path in list + name	WITHOUT_CLASSIFICATION	0.999999948538524	WITHOUT_CLASSIFICATION	5.146147607270111E-8	DEFECT
// if the suffix does not starts with a '.' and the // char preceding the suffix is a '.', we assume the user // wants to remove the '.' as well (see docs)	WITHOUT_CLASSIFICATION	0.9999804761670547	WITHOUT_CLASSIFICATION	1.9523832945324736E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999995287844801	WITHOUT_CLASSIFICATION	4.7121551989690683E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999995287844801	WITHOUT_CLASSIFICATION	4.7121551989690683E-7	DEFECT
// use default if not file or file not found	WITHOUT_CLASSIFICATION	0.9999985420937377	WITHOUT_CLASSIFICATION	1.4579062622556336E-6	DEFECT
// check whether the user has specified an absolute path	WITHOUT_CLASSIFICATION	0.9999998802289175	WITHOUT_CLASSIFICATION	1.1977108251250838E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999995133297559	WITHOUT_CLASSIFICATION	4.86670244023277E-7	DEFECT
// Start handling SAX events	WITHOUT_CLASSIFICATION	0.9999990517007283	WITHOUT_CLASSIFICATION	9.482992717927652E-7	DEFECT
// Let parent resume handling SAX events	WITHOUT_CLASSIFICATION	0.9999948189602601	WITHOUT_CLASSIFICATION	5.181039739921159E-6	DEFECT
// implicit target must be first on dependency list	WITHOUT_CLASSIFICATION	0.9999993198541157	WITHOUT_CLASSIFICATION	6.801458842643248E-7	DEFECT
// take care of dependencies	WITHOUT_CLASSIFICATION	0.9999995635425732	WITHOUT_CLASSIFICATION	4.364574267297128E-7	DEFECT
// swallow here, will be thrown again in // UnknownElement.maybeConfigure if the problem persists.	WITHOUT_CLASSIFICATION	0.9999729177415749	WITHOUT_CLASSIFICATION	2.708225842501907E-5	DEFECT
//XXX task.setTaskType(tag);	WITHOUT_CLASSIFICATION	0.9999761136881584	WITHOUT_CLASSIFICATION	2.3886311841515858E-5	DEFECT
// task can contain other tasks - no other nested elements possible	WITHOUT_CLASSIFICATION	0.9999999779477816	WITHOUT_CLASSIFICATION	2.2052218428772496E-8	DEFECT
// taskcontainer nested element can contain other tasks - no other // nested elements possible	WITHOUT_CLASSIFICATION	0.9999999859800309	WITHOUT_CLASSIFICATION	1.4019969078613703E-8	DEFECT
// Should not happen	WITHOUT_CLASSIFICATION	0.9998667891599072	WITHOUT_CLASSIFICATION	1.332108400927226E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999991944890897	WITHOUT_CLASSIFICATION	8.055109103529937E-7	DEFECT
// the first hex character if a character needs to be escaped	WITHOUT_CLASSIFICATION	0.9999952522371953	WITHOUT_CLASSIFICATION	4.747762804603529E-6	DEFECT
// the second hex character if a character needs to be escaped	WITHOUT_CLASSIFICATION	0.9999719375157333	WITHOUT_CLASSIFICATION	2.806248426673967E-5	DEFECT
// initialize the above 3 arrays	WITHOUT_CLASSIFICATION	0.9999999723423295	WITHOUT_CLASSIFICATION	2.7657670413528224E-8	DEFECT
// #8031: first try Java 1.4.	WITHOUT_CLASSIFICATION	0.9999994291040042	WITHOUT_CLASSIFICATION	5.70895995777873E-7	DEFECT
// Fine, Java 1.3 or earlier, do it by hand.	WITHOUT_CLASSIFICATION	0.9999997467026913	WITHOUT_CLASSIFICATION	2.532973086840556E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999995133297559	WITHOUT_CLASSIFICATION	4.86670244023277E-7	DEFECT
// Bad URI, pass this on.	WITHOUT_CLASSIFICATION	0.9999990384229237	WITHOUT_CLASSIFICATION	9.61577076329346E-7	DEFECT
// Unexpected target exception? Should not happen.	WITHOUT_CLASSIFICATION	0.9999942430414327	WITHOUT_CLASSIFICATION	5.756958567290061E-6	DEFECT
// Reflection problems? Should not happen, debug.	WITHOUT_CLASSIFICATION	0.9989960369153675	WITHOUT_CLASSIFICATION	0.0010039630846323787	DEFECT
// Fallback method for Java 1.3 or earlier.	WITHOUT_CLASSIFICATION	0.9999994685166155	WITHOUT_CLASSIFICATION	5.31483384568607E-7	DEFECT
// Ignore malformed exception	WITHOUT_CLASSIFICATION	0.999999699997642	WITHOUT_CLASSIFICATION	3.0000235792265754E-7	DEFECT
// if it's not an ASCII character, break here, and use UTF-8 encoding	WITHOUT_CLASSIFICATION	0.9999811196242864	WITHOUT_CLASSIFICATION	1.8880375713619594E-5	DEFECT
// record the fact that it's escaped	WITHOUT_CLASSIFICATION	0.99999921094455	WITHOUT_CLASSIFICATION	7.890554499705478E-7	DEFECT
// we saw some non-ascii character	WITHOUT_CLASSIFICATION	0.9999999835896294	WITHOUT_CLASSIFICATION	1.641037065736951E-8	DEFECT
// get UTF-8 bytes for the remaining sub-string	WITHOUT_CLASSIFICATION	0.999998755471704	WITHOUT_CLASSIFICATION	1.2445282959279423E-6	DEFECT
// for each byte	WITHOUT_CLASSIFICATION	0.999998347877386	WITHOUT_CLASSIFICATION	1.6521226141005325E-6	DEFECT
// for non-ascii character: make it positive, then escape	WITHOUT_CLASSIFICATION	0.999994712317553	WITHOUT_CLASSIFICATION	5.287682447027338E-6	DEFECT
// firstly check if the tools jar is already in the classpath	WITHOUT_CLASSIFICATION	0.9999998382381121	WITHOUT_CLASSIFICATION	1.6176188786896406E-7	DEFECT
// just check whether this throws an exception	WITHOUT_CLASSIFICATION	0.9999982942097712	WITHOUT_CLASSIFICATION	1.7057902288967584E-6	DEFECT
// couldn't find compiler - try to find tools.jar // based on java.home setting	WITHOUT_CLASSIFICATION	0.9999981649989267	WITHOUT_CLASSIFICATION	1.8350010732807243E-6	DEFECT
// Found in java.home as given	WITHOUT_CLASSIFICATION	0.9999997876876031	WITHOUT_CLASSIFICATION	2.1231239685031643E-7	DEFECT
// add any jars in the directory	WITHOUT_CLASSIFICATION	0.999996888759764	WITHOUT_CLASSIFICATION	3.111240235863037E-6	DEFECT
// now update the class.path property	WITHOUT_CLASSIFICATION	0.9999990957139737	WITHOUT_CLASSIFICATION	9.042860261466718E-7	DEFECT
// overlay specified properties file (if any), which overrides project // settings	WITHOUT_CLASSIFICATION	0.9999997835381836	WITHOUT_CLASSIFICATION	2.1646181643228786E-7	DEFECT
// ignore because properties file is not required	WITHOUT_CLASSIFICATION	0.999041574079887	WITHOUT_CLASSIFICATION	9.584259201129571E-4	DEFECT
// private static final int ATTR_NORMAL = 0; // private static final int ATTR_BRIGHT = 1;	WITHOUT_CLASSIFICATION	0.9999994103473316	WITHOUT_CLASSIFICATION	5.896526682697532E-7	DEFECT
// private static final int ATTR_UNDERLINE = 3; // private static final int ATTR_BLINK = 5; // private static final int ATTR_REVERSE = 7; // private static final int ATTR_HIDDEN = 8;	WITHOUT_CLASSIFICATION	0.9999994834171592	WITHOUT_CLASSIFICATION	5.165828407849654E-7	DEFECT
// private static final int FG_BLACK = 30;	WITHOUT_CLASSIFICATION	0.9999997683253329	WITHOUT_CLASSIFICATION	2.3167466718909007E-7	DEFECT
// private static final int FG_YELLOW = 33;	WITHOUT_CLASSIFICATION	0.999999534365815	WITHOUT_CLASSIFICATION	4.6563418497141E-7	DEFECT
// private static final int FG_WHITE = 37;	WITHOUT_CLASSIFICATION	0.9999990241998825	WITHOUT_CLASSIFICATION	9.758001175239455E-7	DEFECT
//Ignore - we will use the defaults.	WITHOUT_CLASSIFICATION	0.9999996721846713	WITHOUT_CLASSIFICATION	3.278153285637151E-7	DEFECT
//Ignore - We do not want this to stop the build.	WITHOUT_CLASSIFICATION	0.9996267959495693	WITHOUT_CLASSIFICATION	3.732040504308005E-4	DEFECT
// Fall through	WITHOUT_CLASSIFICATION	0.9999769158813915	WITHOUT_CLASSIFICATION	2.308411860855747E-5	DEFECT
// Whether or not an actual update is required - // we don't need to update if the original file doesn't exist	WITHOUT_CLASSIFICATION	0.9856788702080433	WITHOUT_CLASSIFICATION	0.01432112979195672	DEFECT
// Use the logger config	WITHOUT_CLASSIFICATION	0.9999994041058515	WITHOUT_CLASSIFICATION	5.95894148396701E-7	DEFECT
// Since task log category includes target, we don't really // need this message	WITHOUT_CLASSIFICATION	0.9999999702582458	WITHOUT_CLASSIFICATION	2.9741754181724374E-8	DEFECT
// Driver doesn't understand the URL	WITHOUT_CLASSIFICATION	0.9999987738080784	WITHOUT_CLASSIFICATION	1.226191921567159E-6	DEFECT
// It's a task - append the target	WITHOUT_CLASSIFICATION	0.9999999605087273	WITHOUT_CLASSIFICATION	3.949127270839639E-8	DEFECT
// finally, lets execute the compiler!!	WITHOUT_CLASSIFICATION	0.9999836274029463	WITHOUT_CLASSIFICATION	1.6372597053720634E-5	DEFECT
// Doesn't make sense for c-l. Use the logger config	WITHOUT_CLASSIFICATION	0.9999981332308178	WITHOUT_CLASSIFICATION	1.8667691822682728E-6	DEFECT
// Could not get the required information	WITHOUT_CLASSIFICATION	0.9986513480263249	WITHOUT_CLASSIFICATION	0.0013486519736750438	DEFECT
// Create a ZipFileSet for this file, and pass it up.	WITHOUT_CLASSIFICATION	0.9999999915382578	WITHOUT_CLASSIFICATION	8.46174213606447E-9	DEFECT
// now we need to populate the compiler adapter	WITHOUT_CLASSIFICATION	0.9999994227938132	WITHOUT_CLASSIFICATION	5.77206186763007E-7	DEFECT
// If no webxml file is specified, it's an error.	WITHOUT_CLASSIFICATION	0.9999999254478973	WITHOUT_CLASSIFICATION	7.45521026225183E-8	DEFECT
// One cannot RMIC an interface for "classic" RMI (JRMP)	WITHOUT_CLASSIFICATION	0.9999989435769586	WITHOUT_CLASSIFICATION	1.0564230413883235E-6	DEFECT
// otherwise perform a timestamp comparison - at least	WITHOUT_CLASSIFICATION	0.999998594167689	WITHOUT_CLASSIFICATION	1.4058323111102269E-6	DEFECT
// don't know how to handle that - a IDL file doesn't // have a corresponding Java source for example.	WITHOUT_CLASSIFICATION	0.9999989922324728	WITHOUT_CLASSIFICATION	1.0077675272107212E-6	DEFECT
/*             * Move the generated source file to the base directory.  If             * base directory and sourcebase are the same, the generated             * sources are already in place.             */	WITHOUT_CLASSIFICATION	0.9999999796361329	WITHOUT_CLASSIFICATION	2.0363867122255607E-8	DEFECT
// no source file generated, nothing to move	WITHOUT_CLASSIFICATION	0.9999999962756466	WITHOUT_CLASSIFICATION	3.7243533311999636E-9	DEFECT
// not the requested type	WITHOUT_CLASSIFICATION	0.9999960029494998	WITHOUT_CLASSIFICATION	3.997050500207735E-6	DEFECT
// **   full-pathname specified == path in list // **   simple name specified   == path in list	WITHOUT_CLASSIFICATION	0.9999999048162737	WITHOUT_CLASSIFICATION	9.518372625785881E-8	DEFECT
// we only get here if an exception has been thrown	WITHOUT_CLASSIFICATION	0.9998419347650063	WITHOUT_CLASSIFICATION	1.5806523499361792E-4	DEFECT
// **   full-pathname specified == parent dir of path in list	WITHOUT_CLASSIFICATION	0.9999995075164408	WITHOUT_CLASSIFICATION	4.924835591875519E-7	DEFECT
// not the requested type	WITHOUT_CLASSIFICATION	0.9999960029494998	WITHOUT_CLASSIFICATION	3.997050500207735E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999995133297559	WITHOUT_CLASSIFICATION	4.86670244023277E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999995133297559	WITHOUT_CLASSIFICATION	4.86670244023277E-7	DEFECT
//the rest of the method treats single jar like //a nested path with one file	WITHOUT_CLASSIFICATION	0.9999885220360544	WITHOUT_CLASSIFICATION	1.1477963945635534E-5	DEFECT
// Check for \r, \r\n and \r\r\n // Regard \r\r not followed by \n as two lines	WITHOUT_CLASSIFICATION	0.999978848125523	WITHOUT_CLASSIFICATION	2.1151874476952976E-5	DEFECT
// scan base dirs to build up compile lists only if a // specific classname is not given	WITHOUT_CLASSIFICATION	0.999759954128706	WITHOUT_CLASSIFICATION	2.4004587129400313E-4	DEFECT
// **   simple name specified   == parent dir + name	WITHOUT_CLASSIFICATION	0.9999999238764669	WITHOUT_CLASSIFICATION	7.612353318298561E-8	DEFECT
// class found but restricted name; this is // actually the case we're looking for in JDK 1.3+, // so catch the exception and return	WITHOUT_CLASSIFICATION	0.9999998585277002	WITHOUT_CLASSIFICATION	1.4147229968558408E-7	DEFECT
// Can return null to represent the bootstrap class loader. // see API docs of Class.getClassLoader.	WITHOUT_CLASSIFICATION	0.9999999347566727	WITHOUT_CLASSIFICATION	6.524332735504457E-8	DEFECT
// must be "add"	WITHOUT_CLASSIFICATION	0.9999995912563512	WITHOUT_CLASSIFICATION	4.0874364878693616E-7	DEFECT
// first off, make sure that we've got a srcdir and destdir	WITHOUT_CLASSIFICATION	0.9999989635504717	WITHOUT_CLASSIFICATION	1.0364495283321344E-6	DEFECT
// log options used	WITHOUT_CLASSIFICATION	0.9999988283933519	WITHOUT_CLASSIFICATION	1.171606648150472E-6	DEFECT
//patch file into the fileset	WITHOUT_CLASSIFICATION	0.9999996871577181	WITHOUT_CLASSIFICATION	3.1284228188976857E-7	DEFECT
//set our parent dir	WITHOUT_CLASSIFICATION	0.9999920369928874	WITHOUT_CLASSIFICATION	7.963007112616323E-6	DEFECT
// Compare the destination with the temp file	WITHOUT_CLASSIFICATION	0.9999995015235545	WITHOUT_CLASSIFICATION	4.984764454642336E-7	DEFECT
// Eof has been reached	WITHOUT_CLASSIFICATION	0.9999978578187859	WITHOUT_CLASSIFICATION	2.142181214021923E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999995133297559	WITHOUT_CLASSIFICATION	4.86670244023277E-7	DEFECT
// don't reposition when we've reached the end // of the stream	WITHOUT_CLASSIFICATION	0.9999553889887253	WITHOUT_CLASSIFICATION	4.4611011274756983E-5	DEFECT
// if at eolcount == 0 and trailing characters of string // are CTRL-Zs, set eofStr	WITHOUT_CLASSIFICATION	0.9999999781972283	WITHOUT_CLASSIFICATION	2.1802771742020386E-8	DEFECT
// keep searching for the first ^Z	WITHOUT_CLASSIFICATION	0.9999998841816018	WITHOUT_CLASSIFICATION	1.1581839814561232E-7	DEFECT
// Trailing characters are ^Zs // Construct new line and eofStr	WITHOUT_CLASSIFICATION	0.9999999059953731	WITHOUT_CLASSIFICATION	9.400462685246874E-8	DEFECT
// permissible values for compression attribute	WITHOUT_CLASSIFICATION	0.9999988072905179	WITHOUT_CLASSIFICATION	1.1927094820190342E-6	DEFECT
//default	WITHOUT_CLASSIFICATION	0.9999817827408561	WITHOUT_CLASSIFICATION	1.821725914388609E-5	DEFECT
// shadow of the above if the value is altered in execute	WITHOUT_CLASSIFICATION	0.9999925422157746	WITHOUT_CLASSIFICATION	7.45778422541107E-6	DEFECT
// For directories:	WITHOUT_CLASSIFICATION	0.9999952458003681	WITHOUT_CLASSIFICATION	4.754199631783262E-6	DEFECT
// Renamed version of original file, if it exists	WITHOUT_CLASSIFICATION	0.9999380832638373	WITHOUT_CLASSIFICATION	6.191673616277312E-5	DEFECT
// Add the files found in groupfileset to fileset	WITHOUT_CLASSIFICATION	0.9999436981433982	WITHOUT_CLASSIFICATION	5.630185660178934E-5	DEFECT
// can also handle empty archives	WITHOUT_CLASSIFICATION	0.9999999135822901	WITHOUT_CLASSIFICATION	8.641770992937687E-8	DEFECT
// quick exit if the target is up to date	WITHOUT_CLASSIFICATION	0.9999942276148243	WITHOUT_CLASSIFICATION	5.7723851756771614E-6	DEFECT
// Close the output stream.	WITHOUT_CLASSIFICATION	0.9999999659464879	WITHOUT_CLASSIFICATION	3.4053512174969947E-8	DEFECT
// we are recreating the archive, need all resources	WITHOUT_CLASSIFICATION	0.9999996828376508	WITHOUT_CLASSIFICATION	3.171623490912847E-7	DEFECT
// delete a bogus ZIP file (but only if it's not the original one)	WITHOUT_CLASSIFICATION	0.9999553961136357	WITHOUT_CLASSIFICATION	4.460388636429156E-5	DEFECT
// In this case using java.util.zip will not work // because it does not permit a zero-entry archive. // Must create it manually.	WITHOUT_CLASSIFICATION	0.9702103836503565	WITHOUT_CLASSIFICATION	0.029789616349643586	DEFECT
// Cf. PKZIP specification.	WITHOUT_CLASSIFICATION	0.999999646845476	WITHOUT_CLASSIFICATION	3.5315452399736256E-7	DEFECT
// P // K	WITHOUT_CLASSIFICATION	0.9999969369254609	WITHOUT_CLASSIFICATION	3.0630745391514347E-6	DEFECT
// remainder zeros	WITHOUT_CLASSIFICATION	0.9999981224990523	WITHOUT_CLASSIFICATION	1.8775009477747077E-6	DEFECT
// Create.	WITHOUT_CLASSIFICATION	0.9999995891439859	WITHOUT_CLASSIFICATION	4.1085601409615847E-7	DEFECT
// we are recreating the archive, need all resources	WITHOUT_CLASSIFICATION	0.9999996828376508	WITHOUT_CLASSIFICATION	3.171623490912847E-7	DEFECT
// initialResources is not empty	WITHOUT_CLASSIFICATION	0.9999941866405708	WITHOUT_CLASSIFICATION	5.81335942916497E-6	DEFECT
// initialResources is not empty	WITHOUT_CLASSIFICATION	0.9999941866405708	WITHOUT_CLASSIFICATION	5.81335942916497E-6	DEFECT
// in this case all files from origin map to // the fullPath attribute of the zipfileset at // destination	WITHOUT_CLASSIFICATION	0.9999686512962931	WITHOUT_CLASSIFICATION	3.134870370692489E-5	DEFECT
// we are recreating the archive, need all resources	WITHOUT_CLASSIFICATION	0.9999996828376508	WITHOUT_CLASSIFICATION	3.171623490912847E-7	DEFECT
// we are recreating the archive, need all resources	WITHOUT_CLASSIFICATION	0.9999996828376508	WITHOUT_CLASSIFICATION	3.171623490912847E-7	DEFECT
// no emptyBehavior handling since the FileSet version // will take care of it.	WITHOUT_CLASSIFICATION	0.9999986757419576	WITHOUT_CLASSIFICATION	1.3242580424235324E-6	DEFECT
/*         * Backwards compatibility forces us to repeat the logic of         * getResourcesToAdd(FileSet[], ...) here once again.         */	WITHOUT_CLASSIFICATION	0.9999988598099602	WITHOUT_CLASSIFICATION	1.1401900399238498E-6	DEFECT
// we will return initialResources anyway, no reason // to scan further.	WITHOUT_CLASSIFICATION	0.9999993267381053	WITHOUT_CLASSIFICATION	6.732618947125462E-7	DEFECT
// we will return initialResources anyway, no reason // to scan further.	WITHOUT_CLASSIFICATION	0.9999993267381053	WITHOUT_CLASSIFICATION	6.732618947125462E-7	DEFECT
// ZIPs store time with a granularity of 2 seconds, round up	WITHOUT_CLASSIFICATION	0.9999492403826987	WITHOUT_CLASSIFICATION	5.075961730137483E-5	DEFECT
// don't add directories we've already added. // no warning if we try, it is harmless in and of itself	WITHOUT_CLASSIFICATION	0.9999999220278061	WITHOUT_CLASSIFICATION	7.797219395173612E-8	DEFECT
// A "refid" attribute for a node within a Path object.	WITHOUT_CLASSIFICATION	0.9999854736750143	WITHOUT_CLASSIFICATION	1.4526324985726496E-5	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9999655314264141	WITHOUT_CLASSIFICATION	3.4468573585883755E-5	DEFECT
//default	WITHOUT_CLASSIFICATION	0.9999817827408561	WITHOUT_CLASSIFICATION	1.821725914388609E-5	DEFECT
//default	WITHOUT_CLASSIFICATION	0.9999817827408561	WITHOUT_CLASSIFICATION	1.821725914388609E-5	DEFECT
// ZIPs store time with a granularity of 2 seconds, round up	WITHOUT_CLASSIFICATION	0.9999492403826987	WITHOUT_CLASSIFICATION	5.075961730137483E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999995133297559	WITHOUT_CLASSIFICATION	4.86670244023277E-7	DEFECT
// duplicate equal to add, so we continue	WITHOUT_CLASSIFICATION	0.9999998901880668	WITHOUT_CLASSIFICATION	1.0981193321407774E-7	DEFECT
// Store data into a byte[]	WITHOUT_CLASSIFICATION	0.9999541312175688	WITHOUT_CLASSIFICATION	4.58687824312669E-5	DEFECT
// may be altered in validate	WITHOUT_CLASSIFICATION	0.9999995369815435	WITHOUT_CLASSIFICATION	4.630184564969323E-7	DEFECT
// set user-defined properties	WITHOUT_CLASSIFICATION	0.9999993538809949	WITHOUT_CLASSIFICATION	6.461190050856035E-7	DEFECT
// set Java built-in properties separately, // b/c we won't inherit them.	WITHOUT_CLASSIFICATION	0.9999951719471273	WITHOUT_CLASSIFICATION	4.8280528726798E-6	DEFECT
// set all properties from calling project	WITHOUT_CLASSIFICATION	0.9999889498241247	WITHOUT_CLASSIFICATION	1.1050175875302902E-5	DEFECT
// has been set explicitly	WITHOUT_CLASSIFICATION	0.9999995819828361	WITHOUT_CLASSIFICATION	4.180171639000868E-7	DEFECT
// Are we trying to call the target in which we are defined (or // the build file if this is a top level task)?	WITHOUT_CLASSIFICATION	0.9999999615853381	WITHOUT_CLASSIFICATION	3.8414661882298884E-8	DEFECT
// help the gc	WITHOUT_CLASSIFICATION	0.9999984811111204	WITHOUT_CLASSIFICATION	1.5188888795405705E-6	DEFECT
// remove duplicate properties - last property wins // Needed for backward compatibility	WITHOUT_CLASSIFICATION	0.9999726264677339	WITHOUT_CLASSIFICATION	2.7373532266150927E-5	DEFECT
// Now add all references that are not defined in the // subproject, if inheritRefs is true	WITHOUT_CLASSIFICATION	0.9999996260584005	WITHOUT_CLASSIFICATION	3.739415994999435E-7	DEFECT
// not Clonable	WITHOUT_CLASSIFICATION	0.999995745590486	WITHOUT_CLASSIFICATION	4.254409514022475E-6	DEFECT
// ignore this if the class being referenced does not have // a set project method.	WITHOUT_CLASSIFICATION	0.9999977369398152	WITHOUT_CLASSIFICATION	2.263060184814503E-6	DEFECT
// basedir and ant.file get special treatment in execute()	WITHOUT_CLASSIFICATION	0.9999984755917989	WITHOUT_CLASSIFICATION	1.524408201093422E-6	DEFECT
// don't re-set user properties, avoid the warning message	WITHOUT_CLASSIFICATION	0.9999970924403977	WITHOUT_CLASSIFICATION	2.907559602287583E-6	DEFECT
// no user property	WITHOUT_CLASSIFICATION	0.9999939990662032	WITHOUT_CLASSIFICATION	6.000933796703738E-6	DEFECT
// @note: it is a string and not a file to handle relative/absolute // otherwise a relative file will be resolved based on the current // basedir.	WITHOUT_CLASSIFICATION	0.9999512953445162	WITHOUT_CLASSIFICATION	4.870465548376375E-5	DEFECT
/*     * Get the (sub)-Project instance currently in use.     * @return Project     * @since Ant 1.7     */	WITHOUT_CLASSIFICATION	0.9999999021618503	WITHOUT_CLASSIFICATION	9.783814970783353E-8	DEFECT
// check to make sure that the given dir isn't a symlink // the comparison of absolute path and canonical path // catches this	WITHOUT_CLASSIFICATION	0.9999805491987415	WITHOUT_CLASSIFICATION	1.9450801258571078E-5	DEFECT
//validation logic	WITHOUT_CLASSIFICATION	0.999916125919828	WITHOUT_CLASSIFICATION	8.387408017190597E-5	DEFECT
//this isnt strictly needed, but by being fussy now, //we can change implementation details later	WITHOUT_CLASSIFICATION	0.999994562989894	WITHOUT_CLASSIFICATION	5.437010105941388E-6	DEFECT
//special case single jar handling with signedjar attribute set	WITHOUT_CLASSIFICATION	0.9999984399399945	WITHOUT_CLASSIFICATION	1.5600600055281428E-6	DEFECT
// single jar processing	WITHOUT_CLASSIFICATION	0.9999999184588947	WITHOUT_CLASSIFICATION	8.15411053383022E-8	DEFECT
//return here.	WITHOUT_CLASSIFICATION	0.9998886414129988	WITHOUT_CLASSIFICATION	1.1135858700125677E-4	DEFECT
//set up our mapping policy	WITHOUT_CLASSIFICATION	0.9999961519393874	WITHOUT_CLASSIFICATION	3.848060612568189E-6	DEFECT
//no mapper? use the identity policy	WITHOUT_CLASSIFICATION	0.9999996372983803	WITHOUT_CLASSIFICATION	3.6270161977573086E-7	DEFECT
//determine the destination filename via the mapper	WITHOUT_CLASSIFICATION	0.9999983850528305	WITHOUT_CLASSIFICATION	1.6149471694940996E-6	DEFECT
//we only like simple mappers.	WITHOUT_CLASSIFICATION	0.9999676489240739	WITHOUT_CLASSIFICATION	3.235107592619611E-5	DEFECT
//DO NOT SET THE -signedjar OPTION if source==dest //unless you like fielding hotspot crash reports	WITHOUT_CLASSIFICATION	0.9999968639819526	WITHOUT_CLASSIFICATION	3.136018047333656E-6	DEFECT
//add -tsa operations if declared	WITHOUT_CLASSIFICATION	0.9999977243926638	WITHOUT_CLASSIFICATION	2.275607336323235E-6	DEFECT
//JAR source is required	WITHOUT_CLASSIFICATION	0.9999733870311079	WITHOUT_CLASSIFICATION	2.661296889203259E-5	DEFECT
//alias is required for signing	WITHOUT_CLASSIFICATION	0.9993338688228942	WITHOUT_CLASSIFICATION	6.661311771057614E-4	DEFECT
// restore the lastModified attribute	WITHOUT_CLASSIFICATION	0.9999993866865701	WITHOUT_CLASSIFICATION	6.133134299138453E-7	DEFECT
//we normally compare destination with source	WITHOUT_CLASSIFICATION	0.9998638830854941	WITHOUT_CLASSIFICATION	1.3611691450589236E-4	DEFECT
//but if no dest is specified, compare source to source	WITHOUT_CLASSIFICATION	0.9999939836740762	WITHOUT_CLASSIFICATION	6.016325923690154E-6	DEFECT
//if, by any means, the destfile and source match,	WITHOUT_CLASSIFICATION	0.9999998087120652	WITHOUT_CLASSIFICATION	1.9128793485791696E-7	DEFECT
//we check the presence of signatures on lazy signing	WITHOUT_CLASSIFICATION	0.9999544824515306	WITHOUT_CLASSIFICATION	4.551754846929311E-5	DEFECT
//unsigned or non-lazy self signings are always false	WITHOUT_CLASSIFICATION	0.9998115222685394	WITHOUT_CLASSIFICATION	1.8847773146066888E-4	DEFECT
//if they are different, the timestamps are used	WITHOUT_CLASSIFICATION	0.9999995629266799	WITHOUT_CLASSIFICATION	4.370733200294185E-7	DEFECT
//just log this	WITHOUT_CLASSIFICATION	0.9999866094965933	WITHOUT_CLASSIFICATION	1.3390503406562223E-5	DEFECT
// fileutils	WITHOUT_CLASSIFICATION	0.9999991884828867	WITHOUT_CLASSIFICATION	8.115171132372438E-7	DEFECT
// --- Fields --	WITHOUT_CLASSIFICATION	0.9999986148200477	WITHOUT_CLASSIFICATION	1.3851799522800761E-6	DEFECT
// Keep a hashtable of attributes added by this task. // This task is allow to override its own properties // but not other properties.  So we need to keep track // of which properties we've added.	WITHOUT_CLASSIFICATION	0.9999978864843123	WITHOUT_CLASSIFICATION	2.113515687679504E-6	DEFECT
// Error generated during parsing	WITHOUT_CLASSIFICATION	0.999971521039832	WITHOUT_CLASSIFICATION	2.8478960167887677E-5	DEFECT
// Parser with specified options can't be built	WITHOUT_CLASSIFICATION	0.9999921331793992	WITHOUT_CLASSIFICATION	7.866820600959095E-6	DEFECT
// I/O error	WITHOUT_CLASSIFICATION	0.9999925332544785	WITHOUT_CLASSIFICATION	7.466745521510061E-6	DEFECT
// Set the prefix for this node to include its tag name.	WITHOUT_CLASSIFICATION	0.9999965103273577	WITHOUT_CLASSIFICATION	3.4896726423620057E-6	DEFECT
// Pass the container to the processing of this node,	WITHOUT_CLASSIFICATION	0.9999978044983806	WITHOUT_CLASSIFICATION	2.1955016194485607E-6	DEFECT
// now, iterate through children.	WITHOUT_CLASSIFICATION	0.999999169297654	WITHOUT_CLASSIFICATION	8.307023459115592E-7	DEFECT
// For each child, pass the object added by // processNode to its children -- in other word, each // object can pass information along to its children.	WITHOUT_CLASSIFICATION	0.9995444538608057	WITHOUT_CLASSIFICATION	4.5554613919434E-4	DEFECT
// The value of an id attribute of this node.	WITHOUT_CLASSIFICATION	0.999995417608792	WITHOUT_CLASSIFICATION	4.582391208035389E-6	DEFECT
// Is there an id attribute?	WITHOUT_CLASSIFICATION	0.9999994077652117	WITHOUT_CLASSIFICATION	5.922347883250099E-7	DEFECT
// Now, iterate through the attributes adding them.	WITHOUT_CLASSIFICATION	0.9999990528206011	WITHOUT_CLASSIFICATION	9.471793988221783E-7	DEFECT
/*                     * The main conditional logic -- if the attribute                     * is somehow "special" (i.e., it has known                     * semantic meaning) then deal with it                     * appropriately.                     */	WITHOUT_CLASSIFICATION	0.9999999377152243	WITHOUT_CLASSIFICATION	6.228477572270412E-8	DEFECT
// ID has already been found above.	WITHOUT_CLASSIFICATION	0.9999995711797174	WITHOUT_CLASSIFICATION	4.2882028268266066E-7	DEFECT
// A "path" attribute for a node within a Path object.	WITHOUT_CLASSIFICATION	0.9999863729111267	WITHOUT_CLASSIFICATION	1.3627088873305018E-5	DEFECT
// A node identifying a new path	WITHOUT_CLASSIFICATION	0.9999595825923825	WITHOUT_CLASSIFICATION	4.041740761753913E-5	DEFECT
// For the text node, add a property.	WITHOUT_CLASSIFICATION	0.999994718738958	WITHOUT_CLASSIFICATION	5.281261042042949E-6	DEFECT
// If the containing object was a String, then use it as the ID.	WITHOUT_CLASSIFICATION	0.9999994384960275	WITHOUT_CLASSIFICATION	5.615039725215155E-7	DEFECT
// If this attribute was added by this task, then // we append this value to the existing value. // We use the setProperty method which will // forcibly override the property if it already exists. // We need to put these properties into the project // when we read them, though (instead of keeping them // outside of the project and batch adding them at the end) // to allow other properties to reference them.	WITHOUT_CLASSIFICATION	0.9999898654074214	WITHOUT_CLASSIFICATION	1.0134592578562898E-5	DEFECT
// Never include the "refid" attribute as part of the // attribute name.	WITHOUT_CLASSIFICATION	0.9999999906812816	WITHOUT_CLASSIFICATION	9.318718399006272E-9	DEFECT
// Otherwise, return it appended unless property to hide it is set.	WITHOUT_CLASSIFICATION	0.9999770377787304	WITHOUT_CLASSIFICATION	2.296222126964966E-5	DEFECT
/* Expose members for extensibility */	WITHOUT_CLASSIFICATION	0.9999960703235988	WITHOUT_CLASSIFICATION	3.929676401181191E-6	DEFECT
// delegate this way around to support subclasses that // overwrite getFile	WITHOUT_CLASSIFICATION	0.99999976569501	WITHOUT_CLASSIFICATION	2.343049898923528E-7	DEFECT
//we arent fully defined yet. this is an error unless //we are in an antlib, in which case the resource name is determined //automatically. //NB: URIs in the ant core package will be "" at this point.	WITHOUT_CLASSIFICATION	0.9999844564214598	WITHOUT_CLASSIFICATION	1.5543578540233387E-5	DEFECT
//convert the URI to a resource	WITHOUT_CLASSIFICATION	0.9999949506576268	WITHOUT_CLASSIFICATION	5.049342373291605E-6	DEFECT
//handle new style full paths to an antlib, in which //all but the forward slashes are allowed.	WITHOUT_CLASSIFICATION	0.9999964919986002	WITHOUT_CLASSIFICATION	3.5080013999031525E-6	DEFECT
//if we haven't already named an XML file, it gets antlib.xml	WITHOUT_CLASSIFICATION	0.9999398569415152	WITHOUT_CLASSIFICATION	6.0143058484833E-5	DEFECT
//convert from a package to a path	WITHOUT_CLASSIFICATION	0.999981156307539	WITHOUT_CLASSIFICATION	1.8843692460936457E-5	DEFECT
// Here if there is an error	WITHOUT_CLASSIFICATION	0.9999987239664172	WITHOUT_CLASSIFICATION	1.2760335827221365E-6	DEFECT
// Fall Through	WITHOUT_CLASSIFICATION	0.9999704568167379	WITHOUT_CLASSIFICATION	2.9543183262080402E-5	DEFECT
// log at a lower level	WITHOUT_CLASSIFICATION	0.999998325814862	WITHOUT_CLASSIFICATION	1.6741851380007702E-6	DEFECT
// Ignore the problem	WITHOUT_CLASSIFICATION	0.9999989161203604	WITHOUT_CLASSIFICATION	1.0838796396899694E-6	DEFECT
//trick to evoke "basedir not set" if null:	WITHOUT_CLASSIFICATION	0.9995487636706144	WITHOUT_CLASSIFICATION	4.5123632938563984E-4	DEFECT
//no sources = nothing to compare; no targets = nothing to delete:	WITHOUT_CLASSIFICATION	0.9999970218893152	WITHOUT_CLASSIFICATION	2.978110684820147E-6	DEFECT
// Members	WITHOUT_CLASSIFICATION	0.9999989957197739	WITHOUT_CLASSIFICATION	1.004280226125234E-6	DEFECT
// Members	WITHOUT_CLASSIFICATION	0.9999989957197739	WITHOUT_CLASSIFICATION	1.004280226125234E-6	DEFECT
// If we are a reference, create a Path from the reference	WITHOUT_CLASSIFICATION	0.9999998055828997	WITHOUT_CLASSIFICATION	1.9441710029401703E-7	DEFECT
// for NetWare and OS/2, piggy-back on Windows, since here and // in the apply code, the same assumptions can be made as with // windows - that \\ is an OK separator, and do comparisons // case-insensitive.	WITHOUT_CLASSIFICATION	0.9999925100306044	WITHOUT_CLASSIFICATION	7.4899693956102715E-6	DEFECT
// If the element starts with the configured prefix, then // convert the prefix to the configured 'to' value.	WITHOUT_CLASSIFICATION	0.9999996749010697	WITHOUT_CLASSIFICATION	3.2509893032668335E-7	DEFECT
// Currently, we deal with only two path formats: Unix and Windows // And Unix is everything that is not Windows	WITHOUT_CLASSIFICATION	0.9927846309106849	WITHOUT_CLASSIFICATION	0.007215369089315	DEFECT
// may be altered in validateSetup // may be altered in validateSetup	WITHOUT_CLASSIFICATION	0.9999992487698501	WITHOUT_CLASSIFICATION	7.512301498942707E-7	DEFECT
// validate our setup	WITHOUT_CLASSIFICATION	0.9999998790046298	WITHOUT_CLASSIFICATION	1.2099537020997677E-7	DEFECT
// Currently, we deal with only two path formats: Unix and Windows // And Unix is everything that is not Windows // (with the exception for NetWare and OS/2 below)	WITHOUT_CLASSIFICATION	0.9984528610301866	WITHOUT_CLASSIFICATION	0.0015471389698133726	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999995133297559	WITHOUT_CLASSIFICATION	4.86670244023277E-7	DEFECT
// Get the list of path components in canonical form	WITHOUT_CLASSIFICATION	0.9999999038692948	WITHOUT_CLASSIFICATION	9.613070512781432E-8	DEFECT
// Apply the path prefix map	WITHOUT_CLASSIFICATION	0.9996493032555874	WITHOUT_CLASSIFICATION	3.506967444126481E-4	DEFECT
// Now convert the path and file separator characters from the // current os to the target os.	WITHOUT_CLASSIFICATION	0.9999999805511586	WITHOUT_CLASSIFICATION	1.944884142365392E-8	DEFECT
// Place the result into the specified property, // unless setonempty == false	WITHOUT_CLASSIFICATION	0.999999834954877	WITHOUT_CLASSIFICATION	1.6504512301875337E-7	DEFECT
// Iterate over the map entries and apply each one. // Stop when one of the entries actually changes the element.	WITHOUT_CLASSIFICATION	0.9999992181309124	WITHOUT_CLASSIFICATION	7.818690875734695E-7	DEFECT
// Note I'm using "!=" to see if we got a new object back from // the apply method.	WITHOUT_CLASSIFICATION	0.9999790004828523	WITHOUT_CLASSIFICATION	2.0999517147750577E-5	DEFECT
// We applied one, so we're done	WITHOUT_CLASSIFICATION	0.9999999603875509	WITHOUT_CLASSIFICATION	3.96124491428529E-8	DEFECT
// Determine the separator strings.  The dirsep and pathsep attributes // override the targetOS settings.	WITHOUT_CLASSIFICATION	0.9999999983433824	WITHOUT_CLASSIFICATION	1.6566176378025844E-9	DEFECT
// override with pathsep=	WITHOUT_CLASSIFICATION	0.9999998084582874	WITHOUT_CLASSIFICATION	1.9154171250291562E-7	DEFECT
// override with dirsep=	WITHOUT_CLASSIFICATION	0.9999997359290662	WITHOUT_CLASSIFICATION	2.640709338484704E-7	DEFECT
// Check if used by attributes	WITHOUT_CLASSIFICATION	0.9999999310514326	WITHOUT_CLASSIFICATION	6.894856744864476E-8	DEFECT
// ? is there an xml api for this ?	WITHOUT_CLASSIFICATION	0.9999997396201424	WITHOUT_CLASSIFICATION	2.60379857608423E-7	DEFECT
////////////////////////////////////////////////////////////////////// // ATTRIBUTES	WITHOUT_CLASSIFICATION	0.9999597803950467	WITHOUT_CLASSIFICATION	4.021960495316827E-5	DEFECT
////////////////////////////////////////////////////////////////////// // CONSTRUCTORS / INITIALIZERS	WITHOUT_CLASSIFICATION	0.9999937249654479	WITHOUT_CLASSIFICATION	6.27503455204838E-6	DEFECT
////////////////////////////////////////////////////////////////////// // ACCESSOR METHODS	WITHOUT_CLASSIFICATION	0.9999216737798956	WITHOUT_CLASSIFICATION	7.832622010444435E-5	DEFECT
//Validate mandatory attributes	WITHOUT_CLASSIFICATION	0.9999708405492298	WITHOUT_CLASSIFICATION	2.9159450770200555E-5	DEFECT
//the property attribute must have access to a property file	WITHOUT_CLASSIFICATION	0.9999250440779337	WITHOUT_CLASSIFICATION	7.4955922066287E-5	DEFECT
//Make sure property exists in property file	WITHOUT_CLASSIFICATION	0.9980483126420661	WITHOUT_CLASSIFICATION	0.001951687357934036	DEFECT
//Default is empty string	WITHOUT_CLASSIFICATION	0.9999980212473454	WITHOUT_CLASSIFICATION	1.978752654584838E-6	DEFECT
// Avoid runtime problem on pre 1.4 when compiling post 1.4	WITHOUT_CLASSIFICATION	0.9993263556245741	WITHOUT_CLASSIFICATION	6.736443754260199E-4	DEFECT
// end of finally	WITHOUT_CLASSIFICATION	0.9999401236982048	WITHOUT_CLASSIFICATION	5.987630179522455E-5	DEFECT
//look for and print warnings	WITHOUT_CLASSIFICATION	0.9999983192368261	WITHOUT_CLASSIFICATION	1.6807631738212499E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999995287844801	WITHOUT_CLASSIFICATION	4.7121551989690683E-7	DEFECT
////////////////////////////////////////////////////////////////////// // ATTRIBUTES	WITHOUT_CLASSIFICATION	0.9999597803950467	WITHOUT_CLASSIFICATION	4.021960495316827E-5	DEFECT
////////////////////////////////////////////////////////////////////// // ACCESSOR METHODS	WITHOUT_CLASSIFICATION	0.9999216737798956	WITHOUT_CLASSIFICATION	7.832622010444435E-5	DEFECT
// line separators in values and tokens are "\n" // in order to compare with the file contents, replace them // as needed	WITHOUT_CLASSIFICATION	0.9999999959932094	WITHOUT_CLASSIFICATION	4.006790542864659E-9	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999995133297559	WITHOUT_CLASSIFICATION	4.86670244023277E-7	DEFECT
// Ignore Exception	WITHOUT_CLASSIFICATION	0.9999982379546444	WITHOUT_CLASSIFICATION	1.7620453556618215E-6	DEFECT
// no errors so far	WITHOUT_CLASSIFICATION	0.9999994481361004	WITHOUT_CLASSIFICATION	5.518638996108421E-7	DEFECT
// If we don't know the type of the line // and we are in emacs mode, it will be // an error, because in this mode, jikes won't // always print "error", but sometimes other // keywords like "Syntax". We should look for // all those keywords.	WITHOUT_CLASSIFICATION	0.999999186685051	WITHOUT_CLASSIFICATION	8.133149490086748E-7	DEFECT
// plain impossible	WITHOUT_CLASSIFICATION	0.9999997173432109	WITHOUT_CLASSIFICATION	2.826567891075907E-7	DEFECT
// We must check if the process was not stopped // before being here	WITHOUT_CLASSIFICATION	0.999952601852571	WITHOUT_CLASSIFICATION	4.7398147429061834E-5	DEFECT
// the process is not terminated, if this is really // a timeout and not a manual stop then kill it.	WITHOUT_CLASSIFICATION	0.9999902980315584	WITHOUT_CLASSIFICATION	9.701968441588035E-6	DEFECT
////////////////////////////////////////////////////////////////////// // CORE / MAIN BODY	WITHOUT_CLASSIFICATION	0.999965727152075	WITHOUT_CLASSIFICATION	3.42728479249682E-5	DEFECT
// get the recorder entry	WITHOUT_CLASSIFICATION	0.9999937427283647	WITHOUT_CLASSIFICATION	6.257271635258024E-6	DEFECT
// set the values on the recorder	WITHOUT_CLASSIFICATION	0.9999978817687413	WITHOUT_CLASSIFICATION	2.1182312586342494E-6	DEFECT
////////////////////////////////////////////////////////////////////// // INNER CLASSES	WITHOUT_CLASSIFICATION	0.999992953042047	WITHOUT_CLASSIFICATION	7.046957952994663E-6	DEFECT
// create a recorder entry	WITHOUT_CLASSIFICATION	0.9999990792538421	WITHOUT_CLASSIFICATION	9.207461578291056E-7	DEFECT
// Use '/' to calculate digest based on file name. // This is required in order to get the same result // on different platforms.	WITHOUT_CLASSIFICATION	0.9999996877962924	WITHOUT_CLASSIFICATION	3.122037074895751E-7	DEFECT
// Read the checksum from disk.	WITHOUT_CLASSIFICATION	0.9999991670531414	WITHOUT_CLASSIFICATION	8.329468585755244E-7	DEFECT
// A separate directory was explicitly declared	WITHOUT_CLASSIFICATION	0.9999976784851736	WITHOUT_CLASSIFICATION	2.321514826456333E-6	DEFECT
// Empty statement	WITHOUT_CLASSIFICATION	0.9999995221223196	WITHOUT_CLASSIFICATION	4.778776803422764E-7	DEFECT
//can either be a property name string or a file	WITHOUT_CLASSIFICATION	0.9999869306271955	WITHOUT_CLASSIFICATION	1.3069372804511132E-5	DEFECT
// file is on wrong format, swallow	WITHOUT_CLASSIFICATION	0.999949869567622	WITHOUT_CLASSIFICATION	5.013043237793208E-5	DEFECT
// try to be smart, not to be fooled by a weird directory name	WITHOUT_CLASSIFICATION	0.9999914231264914	WITHOUT_CLASSIFICATION	8.57687350862174E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999995287844801	WITHOUT_CLASSIFICATION	4.7121551989690683E-7	DEFECT
// Close the output stream.	WITHOUT_CLASSIFICATION	0.9999999659464879	WITHOUT_CLASSIFICATION	3.4053512174969947E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999995133297559	WITHOUT_CLASSIFICATION	4.86670244023277E-7	DEFECT
// File is Comparable, so sorting is trivial	WITHOUT_CLASSIFICATION	0.9999999780071472	WITHOUT_CLASSIFICATION	2.1992852816269825E-8	DEFECT
// Loop over the checksums and generate a total hash.	WITHOUT_CLASSIFICATION	0.999999988171745	WITHOUT_CLASSIFICATION	1.1828254945981913E-8	DEFECT
// Add the digest for the file content	WITHOUT_CLASSIFICATION	0.9999998757450452	WITHOUT_CLASSIFICATION	1.2425495484322616E-7	DEFECT
// Add the file path	WITHOUT_CLASSIFICATION	0.9999993992867269	WITHOUT_CLASSIFICATION	6.007132731559659E-7	DEFECT
// two characters form the hex value.	WITHOUT_CLASSIFICATION	0.9999999717224829	WITHOUT_CLASSIFICATION	2.8277517031779192E-8	DEFECT
// We just set the prefix for this fileset, and pass it up.	WITHOUT_CLASSIFICATION	0.9999999068305367	WITHOUT_CLASSIFICATION	9.316946329992004E-8	DEFECT
// Check if the service is configured correctly	WITHOUT_CLASSIFICATION	0.999988060654096	WITHOUT_CLASSIFICATION	1.1939345903919447E-5	DEFECT
// if we haven't got the manifest yet, attempt to // get it now and have manifest be the final merge	WITHOUT_CLASSIFICATION	0.9999686897981402	WITHOUT_CLASSIFICATION	3.1310201859646935E-5	DEFECT
// time to write the manifest	WITHOUT_CLASSIFICATION	0.9999998359831738	WITHOUT_CLASSIFICATION	1.6401682627267453E-7	DEFECT
// encoding must be UTF8 as specified in the specs.	WITHOUT_CLASSIFICATION	0.9999993882263324	WITHOUT_CLASSIFICATION	6.117736677481151E-7	DEFECT
// version-info blankline	WITHOUT_CLASSIFICATION	0.999998560042873	WITHOUT_CLASSIFICATION	1.4399571270131766E-6	DEFECT
// header newline	WITHOUT_CLASSIFICATION	0.9999973843283301	WITHOUT_CLASSIFICATION	2.6156716698921555E-6	DEFECT
// If this is the same name specified in 'manifest', this // is the manifest to use	WITHOUT_CLASSIFICATION	0.9999981697867407	WITHOUT_CLASSIFICATION	1.830213259285712E-6	DEFECT
// we add this to our group of fileset manifests	WITHOUT_CLASSIFICATION	0.9999991287669773	WITHOUT_CLASSIFICATION	8.712330227364403E-7	DEFECT
// assuming 'skip' otherwise // don't warn if skip has been requested explicitly, warn if user // didn't set the attribute	WITHOUT_CLASSIFICATION	0.9999929532528601	WITHOUT_CLASSIFICATION	7.046747139917079E-6	DEFECT
// Hide warning also as it makes no sense since // the filesetmanifest attribute itself has been // hidden	WITHOUT_CLASSIFICATION	0.9999999908978202	WITHOUT_CLASSIFICATION	9.102179900390344E-9	DEFECT
// need to handle manifest as a special check	WITHOUT_CLASSIFICATION	0.9999999267793646	WITHOUT_CLASSIFICATION	7.322063545171759E-8	DEFECT
// if it doesn't exist, it will get created anyway, don't // bother with any up-to-date checks.	WITHOUT_CLASSIFICATION	0.9999966973367804	WITHOUT_CLASSIFICATION	3.3026632194544872E-6	DEFECT
// no existing archive	WITHOUT_CLASSIFICATION	0.9999998906103292	WITHOUT_CLASSIFICATION	1.0938967066331643E-7	DEFECT
// Ignore close exception	WITHOUT_CLASSIFICATION	0.9999996237865468	WITHOUT_CLASSIFICATION	3.7621345322332446E-7	DEFECT
// we want to save this info if we are going to make another pass	WITHOUT_CLASSIFICATION	0.9999433144029476	WITHOUT_CLASSIFICATION	5.66855970525113E-5	DEFECT
// couldn't find it - must be on path	WITHOUT_CLASSIFICATION	0.9999988624811906	WITHOUT_CLASSIFICATION	1.1375188093930972E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999995287844801	WITHOUT_CLASSIFICATION	4.7121551989690683E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999995287844801	WITHOUT_CLASSIFICATION	4.7121551989690683E-7	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9999655314264141	WITHOUT_CLASSIFICATION	3.4468573585883755E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999995133297559	WITHOUT_CLASSIFICATION	4.86670244023277E-7	DEFECT
// looks like nothing from META-INF should be added // and the check is not case insensitive. // see sun.misc.JarIndex	WITHOUT_CLASSIFICATION	0.999998431570335	WITHOUT_CLASSIFICATION	1.5684296649947368E-6	DEFECT
// name newline	WITHOUT_CLASSIFICATION	0.9999992575296918	WITHOUT_CLASSIFICATION	7.424703082285537E-7	DEFECT
// longest match comes first	WITHOUT_CLASSIFICATION	0.9999988372063784	WITHOUT_CLASSIFICATION	1.1627936216027816E-6	DEFECT
// META-INF would be skipped anyway, avoid index for // manifest-only jars.	WITHOUT_CLASSIFICATION	0.9905553247502634	WITHOUT_CLASSIFICATION	0.00944467524973665	DEFECT
// a file, not in the root // since the jar may be one without directory // entries, add the parent dir of this file as // well.	WITHOUT_CLASSIFICATION	0.9999998582635903	WITHOUT_CLASSIFICATION	1.417364097587952E-7	DEFECT
/*protected*/	WITHOUT_CLASSIFICATION	0.9999389514606165	WITHOUT_CLASSIFICATION	6.104853938355104E-5	DEFECT
// if the target file is not there, then it can't be up-to-date	WITHOUT_CLASSIFICATION	0.999999696403697	WITHOUT_CLASSIFICATION	3.0359630293763966E-7	DEFECT
// if the source file isn't there, throw an exception	WITHOUT_CLASSIFICATION	0.9999959289956077	WITHOUT_CLASSIFICATION	4.071004392258528E-6	DEFECT
// by default, messages are always displayed	WITHOUT_CLASSIFICATION	0.9999993793278696	WITHOUT_CLASSIFICATION	6.206721304346004E-7	DEFECT
// need to keep the package private version for backwards compatibility	WITHOUT_CLASSIFICATION	0.9999949511421865	WITHOUT_CLASSIFICATION	5.048857813470365E-6	DEFECT
// we must keep two lists since other classes may modify the // filesets Vector (it is package private) without us noticing	WITHOUT_CLASSIFICATION	0.9999987280055584	WITHOUT_CLASSIFICATION	1.271994441522374E-6	DEFECT
// add the main fileset to the list of filesets to process.	WITHOUT_CLASSIFICATION	0.9999999729284268	WITHOUT_CLASSIFICATION	2.707157310900563E-8	DEFECT
// check if tar is out of date with respect to each // fileset	WITHOUT_CLASSIFICATION	0.9999964825102701	WITHOUT_CLASSIFICATION	3.5174897299791795E-6	DEFECT
// warn or GNU	WITHOUT_CLASSIFICATION	0.9999936732400873	WITHOUT_CLASSIFICATION	6.326759912647729E-6	DEFECT
// don't add "" to the archive	WITHOUT_CLASSIFICATION	0.9999968824121223	WITHOUT_CLASSIFICATION	3.117587877652278E-6	DEFECT
// '/' is appended for compatibility with the zip task.	WITHOUT_CLASSIFICATION	0.999999544774844	WITHOUT_CLASSIFICATION	4.552251560283199E-7	DEFECT
// we would end up adding "" to the archive	WITHOUT_CLASSIFICATION	0.9999517143920683	WITHOUT_CLASSIFICATION	4.828560793168939E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999995133297559	WITHOUT_CLASSIFICATION	4.86670244023277E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999995133297559	WITHOUT_CLASSIFICATION	4.86670244023277E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999995287844801	WITHOUT_CLASSIFICATION	4.7121551989690683E-7	DEFECT
// permissible values for compression attribute	WITHOUT_CLASSIFICATION	0.9999988072905179	WITHOUT_CLASSIFICATION	1.1927094820190342E-6	DEFECT
// override permissions if set explicitly	WITHOUT_CLASSIFICATION	0.9999563442121345	WITHOUT_CLASSIFICATION	4.3655787865570786E-5	DEFECT
// only override permissions if set explicitly	WITHOUT_CLASSIFICATION	0.999598866763859	WITHOUT_CLASSIFICATION	4.011332361408827E-4	DEFECT
// non-file resources	WITHOUT_CLASSIFICATION	0.9999998177422298	WITHOUT_CLASSIFICATION	1.8225777015396632E-7	DEFECT
// non-file resources	WITHOUT_CLASSIFICATION	0.9999998177422298	WITHOUT_CLASSIFICATION	1.8225777015396632E-7	DEFECT
//extend Comparison; retain for BC only	WITHOUT_CLASSIFICATION	0.9999431299311485	WITHOUT_CLASSIFICATION	5.687006885147028E-5	DEFECT
//when writing to the log, we'll see what's happening:	WITHOUT_CLASSIFICATION	0.9999953667316271	WITHOUT_CLASSIFICATION	4.633268372850575E-6	DEFECT
/*         * The initial version used DateFormat.SHORT for the         * time format, which ignores seconds.  If we want         * seconds as well, we need DateFormat.MEDIUM, which         * in turn would break all old build files.         *         * First try to parse with DateFormat.SHORT and if         * that fails with MEDIUM - throw an exception if both         * fail.         */	WITHOUT_CLASSIFICATION	0.999999618240021	WITHOUT_CLASSIFICATION	3.817599790039562E-7	DEFECT
//only set if successful to this point:	WITHOUT_CLASSIFICATION	0.9998026757758264	WITHOUT_CLASSIFICATION	1.973242241735416E-4	DEFECT
// deal with the resource collections	WITHOUT_CLASSIFICATION	0.9999998461635914	WITHOUT_CLASSIFICATION	1.5383640866966086E-7	DEFECT
// deal with filesets in a special way since the task // originally also used the directories and Union won't return // them.	WITHOUT_CLASSIFICATION	0.9999998785138717	WITHOUT_CLASSIFICATION	1.2148612833747079E-7	DEFECT
// use this to create file and deal with non-writable files	WITHOUT_CLASSIFICATION	0.9999999597432953	WITHOUT_CLASSIFICATION	4.025670469038211E-8	DEFECT
// When we leave this block we can be sure all data is really // stored in main memory before the new threads start, the new // threads will for sure load the data from main memory. // // This probably is slightly paranoid.	WITHOUT_CLASSIFICATION	0.9997155368662087	WITHOUT_CLASSIFICATION	2.8446313379125346E-4	DEFECT
// start any daemon threads	WITHOUT_CLASSIFICATION	0.9999595445297446	WITHOUT_CLASSIFICATION	4.0455470255338655E-5	DEFECT
// now run main threads in limited numbers... // start initial batch of threads	WITHOUT_CLASSIFICATION	0.9999392878111051	WITHOUT_CLASSIFICATION	6.0712188895020344E-5	DEFECT
// start the timeout thread	WITHOUT_CLASSIFICATION	0.999999684840235	WITHOUT_CLASSIFICATION	3.1515976494659364E-7	DEFECT
// now find available running slots for the remaining threads	WITHOUT_CLASSIFICATION	0.9999963575437575	WITHOUT_CLASSIFICATION	3.6424562425212185E-6	DEFECT
// continue on outer while loop to get another // available slot	WITHOUT_CLASSIFICATION	0.9999964506094389	WITHOUT_CLASSIFICATION	3.5493905609797502E-6	DEFECT
// if we got here all slots in use, so sleep until // something happens	WITHOUT_CLASSIFICATION	0.9999955189962605	WITHOUT_CLASSIFICATION	4.481003739591443E-6	DEFECT
// doesn't java know interruptions are rude? // just pretend it didn't happen and go about out business. // sheesh!	WITHOUT_CLASSIFICATION	0.9999995096230156	WITHOUT_CLASSIFICATION	4.903769843836304E-7	DEFECT
// are all threads finished	WITHOUT_CLASSIFICATION	0.9999988908621239	WITHOUT_CLASSIFICATION	1.109137876119076E-6	DEFECT
// who would interrupt me at a time like this?	WITHOUT_CLASSIFICATION	0.9999999210064003	WITHOUT_CLASSIFICATION	7.899359963200952E-8	DEFECT
// now did any of the threads throw an exception	WITHOUT_CLASSIFICATION	0.9995214998869368	WITHOUT_CLASSIFICATION	4.785001130631322E-4	DEFECT
// return a bogus number	WITHOUT_CLASSIFICATION	0.9999992435252988	WITHOUT_CLASSIFICATION	7.564747012048037E-7	DEFECT
// Should be safe to parse	WITHOUT_CLASSIFICATION	0.9999405184188185	WITHOUT_CLASSIFICATION	5.9481581181519836E-5	DEFECT
// Check name is "antlib"	WITHOUT_CLASSIFICATION	0.9999999268901857	WITHOUT_CLASSIFICATION	7.310981436517713E-8	DEFECT
//include locally for screening purposes	WITHOUT_CLASSIFICATION	0.9999615319722157	WITHOUT_CLASSIFICATION	3.8468027784212964E-5	DEFECT
// try to find the executable	WITHOUT_CLASSIFICATION	0.999999224049044	WITHOUT_CLASSIFICATION	7.759509560570494E-7	DEFECT
// now try to resolve against the dir if given	WITHOUT_CLASSIFICATION	0.999999186969004	WITHOUT_CLASSIFICATION	8.130309960786495E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999995287844801	WITHOUT_CLASSIFICATION	4.7121551989690683E-7	DEFECT
// throw further	WITHOUT_CLASSIFICATION	0.9999291843794754	WITHOUT_CLASSIFICATION	7.081562052460068E-5	DEFECT
// only the first build exception is reported	WITHOUT_CLASSIFICATION	0.9999091080444936	WITHOUT_CLASSIFICATION	9.089195550633494E-5	DEFECT
//include locally for screening purposes	WITHOUT_CLASSIFICATION	0.9999615319722157	WITHOUT_CLASSIFICATION	3.8468027784212964E-5	DEFECT
// mustSearchPath is false, or no PATH or not found - keep our // fingers crossed.	WITHOUT_CLASSIFICATION	0.999984459319903	WITHOUT_CLASSIFICATION	1.554068009704415E-5	DEFECT
// Quick fail if this is not a valid OS for the command	WITHOUT_CLASSIFICATION	0.9999473982199147	WITHOUT_CLASSIFICATION	5.260178008525865E-5	DEFECT
// possibly altered in prepareExec	WITHOUT_CLASSIFICATION	0.9999893768071465	WITHOUT_CLASSIFICATION	1.0623192853430677E-5	DEFECT
//hand osfamily off to Os class, if set	WITHOUT_CLASSIFICATION	0.9999245055935551	WITHOUT_CLASSIFICATION	7.549440644490627E-5	DEFECT
// this command will be executed only on the specified OS	WITHOUT_CLASSIFICATION	0.9991521643012024	WITHOUT_CLASSIFICATION	8.47835698797613E-4	DEFECT
// default directory to the project's base directory	WITHOUT_CLASSIFICATION	0.9999992243023053	WITHOUT_CLASSIFICATION	7.75697694627038E-7	DEFECT
// assume the worst	WITHOUT_CLASSIFICATION	0.9999996022880127	WITHOUT_CLASSIFICATION	3.9771198739468997E-7	DEFECT
//test for and handle a forced process death	WITHOUT_CLASSIFICATION	0.9999999820285087	WITHOUT_CLASSIFICATION	1.7971491399215724E-8	DEFECT
// show the command	WITHOUT_CLASSIFICATION	0.9999974023338956	WITHOUT_CLASSIFICATION	2.597666104407831E-6	DEFECT
// close the output file if required	WITHOUT_CLASSIFICATION	0.9999989848905805	WITHOUT_CLASSIFICATION	1.0151094194963196E-6	DEFECT
// Same as regular <copy> task... see at end-of-file!	WITHOUT_CLASSIFICATION	0.9999955827472761	WITHOUT_CLASSIFICATION	4.417252723972746E-6	DEFECT
// Override Task#init	WITHOUT_CLASSIFICATION	0.9999999018255944	WITHOUT_CLASSIFICATION	9.817440558121565E-8	DEFECT
// Instantiate it	WITHOUT_CLASSIFICATION	0.9999982946634488	WITHOUT_CLASSIFICATION	1.7053365511788185E-6	DEFECT
// Default config of <mycopy> for our purposes.	WITHOUT_CLASSIFICATION	0.9999979235819574	WITHOUT_CLASSIFICATION	2.0764180425370665E-6	DEFECT
// Override Task#execute	WITHOUT_CLASSIFICATION	0.9999998386422264	WITHOUT_CLASSIFICATION	1.6135777352892772E-7	DEFECT
// The destination of the files to copy	WITHOUT_CLASSIFICATION	0.9998145527500923	WITHOUT_CLASSIFICATION	1.8544724990752462E-4	DEFECT
// The complete list of files to copy	WITHOUT_CLASSIFICATION	0.999929097279659	WITHOUT_CLASSIFICATION	7.090272034102704E-5	DEFECT
// Copy all the necessary out-of-date files	WITHOUT_CLASSIFICATION	0.9999997179295795	WITHOUT_CLASSIFICATION	2.820704204653691E-7	DEFECT
// Do we need to perform further processing?	WITHOUT_CLASSIFICATION	0.999999681393526	WITHOUT_CLASSIFICATION	3.186064739751963E-7	DEFECT
// nope ;-)	WITHOUT_CLASSIFICATION	0.9999981597342276	WITHOUT_CLASSIFICATION	1.8402657724650403E-6	DEFECT
// Get rid of all files not listed in the source filesets.	WITHOUT_CLASSIFICATION	0.9999978310439235	WITHOUT_CLASSIFICATION	2.1689560765534346E-6	DEFECT
// Get rid of empty directories on the destination side	WITHOUT_CLASSIFICATION	0.9999976290760743	WITHOUT_CLASSIFICATION	2.370923925823284E-6	DEFECT
// want to keep toDir itself	WITHOUT_CLASSIFICATION	0.9999992177765058	WITHOUT_CLASSIFICATION	7.822234942732099E-7	DEFECT
// ds returns the directories in lexicographic order. // iterating through the array backwards means we are deleting // leaves before their parent nodes - thus making sure (well, // more likely) that the directories are empty when we try to // delete them.	WITHOUT_CLASSIFICATION	0.9999996457304564	WITHOUT_CLASSIFICATION	3.542695436059792E-7	DEFECT
// Test here again to avoid method call for non-directories!	WITHOUT_CLASSIFICATION	0.9999949248443473	WITHOUT_CLASSIFICATION	5.075155652733756E-6	DEFECT
// must match the default value of Ant#inheritAll	WITHOUT_CLASSIFICATION	0.9999997189873754	WITHOUT_CLASSIFICATION	2.8101262462753637E-7	DEFECT
// must match the default value of Ant#inheritRefs	WITHOUT_CLASSIFICATION	0.9999998830188795	WITHOUT_CLASSIFICATION	1.1698112039148316E-7	DEFECT
/*<TargetElement>*/	WITHOUT_CLASSIFICATION	0.9999964019122973	WITHOUT_CLASSIFICATION	3.5980877027375476E-6	DEFECT
// check if one of the builds failed in keep going mode	WITHOUT_CLASSIFICATION	0.9999990103230854	WITHOUT_CLASSIFICATION	9.896769145802764E-7	DEFECT
//     REVISIT: Defaults to the target name that contains this task if not specified.	WITHOUT_CLASSIFICATION	0.9999997918790445	WITHOUT_CLASSIFICATION	2.081209554867041E-7	DEFECT
// END class SubAnt	WITHOUT_CLASSIFICATION	0.999995136963523	WITHOUT_CLASSIFICATION	4.863036476969545E-6	DEFECT
// Child elements.	WITHOUT_CLASSIFICATION	0.9999999266737277	WITHOUT_CLASSIFICATION	7.332627237121559E-8	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999981731396919	WITHOUT_CLASSIFICATION	1.82686030805923E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999995287844801	WITHOUT_CLASSIFICATION	4.7121551989690683E-7	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9999655314264141	WITHOUT_CLASSIFICATION	3.4468573585883755E-5	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9999655314264141	WITHOUT_CLASSIFICATION	3.4468573585883755E-5	DEFECT
// Empty	WITHOUT_CLASSIFICATION	0.9999946703852443	WITHOUT_CLASSIFICATION	5.329614755733674E-6	DEFECT
// this command will be executed only on the specified OS	WITHOUT_CLASSIFICATION	0.9991521643012024	WITHOUT_CLASSIFICATION	8.47835698797613E-4	DEFECT
// default directory to the project's base directory	WITHOUT_CLASSIFICATION	0.9999992243023053	WITHOUT_CLASSIFICATION	7.75697694627038E-7	DEFECT
// assume the worst	WITHOUT_CLASSIFICATION	0.9999996022880127	WITHOUT_CLASSIFICATION	3.9771198739468997E-7	DEFECT
// show the command	WITHOUT_CLASSIFICATION	0.9999974023338956	WITHOUT_CLASSIFICATION	2.597666104407831E-6	DEFECT
// close the output file if required	WITHOUT_CLASSIFICATION	0.9999989848905805	WITHOUT_CLASSIFICATION	1.0151094194963196E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999995133297559	WITHOUT_CLASSIFICATION	4.86670244023277E-7	DEFECT
// This directory may have become empty... // We need to re-query its children list!	WITHOUT_CLASSIFICATION	0.9993133777318469	WITHOUT_CLASSIFICATION	6.866222681531306E-4	DEFECT
// // Various copy attributes/subelements of <copy> passed thru to <mycopy> //	WITHOUT_CLASSIFICATION	0.9999996201967307	WITHOUT_CLASSIFICATION	3.7980326931288857E-7	DEFECT
// List of files that must be copied, irrelevant from the // fact that they are newer or not than the destination.	WITHOUT_CLASSIFICATION	0.9999997611010302	WITHOUT_CLASSIFICATION	2.3889896979292874E-7	DEFECT
// cf. NB #47191	WITHOUT_CLASSIFICATION	0.9999956395021647	WITHOUT_CLASSIFICATION	4.360497835256415E-6	DEFECT
// Should work whether or not redirector.inputStream == null:	WITHOUT_CLASSIFICATION	0.9926835937873486	WITHOUT_CLASSIFICATION	0.007316406212651473	DEFECT
// #24918: send standard input to the process by default.	WITHOUT_CLASSIFICATION	0.999780553468142	WITHOUT_CLASSIFICATION	2.1944653185797272E-4	DEFECT
// test if os match	WITHOUT_CLASSIFICATION	0.9999996961639074	WITHOUT_CLASSIFICATION	3.038360926519717E-7	DEFECT
// exec command on system runtime	WITHOUT_CLASSIFICATION	0.9989062926207343	WITHOUT_CLASSIFICATION	0.0010937073792657327	DEFECT
// copy input and error to the output stream	WITHOUT_CLASSIFICATION	0.9999856984569307	WITHOUT_CLASSIFICATION	1.4301543069306871E-5	DEFECT
// starts pumping away the generated output/error	WITHOUT_CLASSIFICATION	0.9999997138877614	WITHOUT_CLASSIFICATION	2.861122384888162E-7	DEFECT
// Wait for everything to finish	WITHOUT_CLASSIFICATION	0.9999889818922159	WITHOUT_CLASSIFICATION	1.1018107784095285E-5	DEFECT
// check its exit value	WITHOUT_CLASSIFICATION	0.9999998090550513	WITHOUT_CLASSIFICATION	1.9094494875515331E-7	DEFECT
// Inner class for continually pumping the input stream during // Process's runtime.	WITHOUT_CLASSIFICATION	0.9999854946310602	WITHOUT_CLASSIFICATION	1.4505368939621484E-5	DEFECT
// The size of buffers to be used	WITHOUT_CLASSIFICATION	0.998627049837261	WITHOUT_CLASSIFICATION	0.0013729501627389655	DEFECT
// Attributes.	WITHOUT_CLASSIFICATION	0.9999975986309662	WITHOUT_CLASSIFICATION	2.401369033933665E-6	DEFECT
// Attribute setters.	WITHOUT_CLASSIFICATION	0.9999967424225281	WITHOUT_CLASSIFICATION	3.257577471771285E-6	DEFECT
// Nested element creators.	WITHOUT_CLASSIFICATION	0.9999999774056648	WITHOUT_CLASSIFICATION	2.2594335220050208E-8	DEFECT
// treat empty nested text as no text	WITHOUT_CLASSIFICATION	0.9999996823173861	WITHOUT_CLASSIFICATION	3.176826139113201E-7	DEFECT
// if binary check if incompatible attributes are used	WITHOUT_CLASSIFICATION	0.9999998735198001	WITHOUT_CLASSIFICATION	1.2648019986541887E-7	DEFECT
// Sanity check our inputs.	WITHOUT_CLASSIFICATION	0.9999999451861145	WITHOUT_CLASSIFICATION	5.4813885604932326E-8	DEFECT
// Nothing to concatenate!	WITHOUT_CLASSIFICATION	0.9999993297955125	WITHOUT_CLASSIFICATION	6.702044873968718E-7	DEFECT
// no need to do anything	WITHOUT_CLASSIFICATION	0.9999995977320468	WITHOUT_CLASSIFICATION	4.022679531836916E-7	DEFECT
// Log using WARN so it displays in 'quiet' mode.	WITHOUT_CLASSIFICATION	0.9999779738914492	WITHOUT_CLASSIFICATION	2.202610855077511E-5	DEFECT
// ensure that the parent dir of dest file exists	WITHOUT_CLASSIFICATION	0.9999998229773954	WITHOUT_CLASSIFICATION	1.770226044992263E-7	DEFECT
// non-existing files are not allowed	WITHOUT_CLASSIFICATION	0.9999420901799607	WITHOUT_CLASSIFICATION	5.790982003930636E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999995287844801	WITHOUT_CLASSIFICATION	4.7121551989690683E-7	DEFECT
// Create a ZipFileSet for this file, and pass it up.	WITHOUT_CLASSIFICATION	0.9999999915382578	WITHOUT_CLASSIFICATION	8.46174213606447E-9	DEFECT
// We just set the prefix for this fileset, and pass it up.	WITHOUT_CLASSIFICATION	0.9999999068305367	WITHOUT_CLASSIFICATION	9.316946329992004E-8	DEFECT
// by default, messages are always displayed	WITHOUT_CLASSIFICATION	0.9999993793278696	WITHOUT_CLASSIFICATION	6.206721304346004E-7	DEFECT
// close the output file if required	WITHOUT_CLASSIFICATION	0.9999989848905805	WITHOUT_CLASSIFICATION	1.0151094194963196E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999995133297559	WITHOUT_CLASSIFICATION	4.86670244023277E-7	DEFECT
// Initialize to the size of the first text fragment, with // the hopes that it's the only one.	WITHOUT_CLASSIFICATION	0.9999782410614647	WITHOUT_CLASSIFICATION	2.1758938535321712E-5	DEFECT
// Append the fragment -- we defer property replacement until // later just in case we get a partial property in a fragment.	WITHOUT_CLASSIFICATION	0.9999844625862933	WITHOUT_CLASSIFICATION	1.553741370667329E-5	DEFECT
// If using resources, disallow inline text. This is similar to // using GNU 'cat' with file arguments -- stdin is simply // ignored.	WITHOUT_CLASSIFICATION	0.9999999439270217	WITHOUT_CLASSIFICATION	5.6072978335222105E-8	DEFECT
/*package*/	WITHOUT_CLASSIFICATION	0.9999911939795808	WITHOUT_CLASSIFICATION	8.80602041927824E-6	DEFECT
/*package*/	WITHOUT_CLASSIFICATION	0.9999911939795808	WITHOUT_CLASSIFICATION	8.80602041927824E-6	DEFECT
// If the file being added is WEB-INF/web.xml, we warn if it's // not the one specified in the "webxml" attribute - or if // it's being added twice, meaning the same file is specified // by the "webxml" attribute and in a <fileset> element.	WITHOUT_CLASSIFICATION	0.9999998726181737	WITHOUT_CLASSIFICATION	1.2738182628846911E-7	DEFECT
//by default, we add the file.	WITHOUT_CLASSIFICATION	0.9999998855970115	WITHOUT_CLASSIFICATION	1.1440298849293447E-7	DEFECT
//a web.xml file was found. See if it is a duplicate or not	WITHOUT_CLASSIFICATION	0.9999985110784971	WITHOUT_CLASSIFICATION	1.4889215029335958E-6	DEFECT
//a second web.xml file, so skip it	WITHOUT_CLASSIFICATION	0.9999992552851755	WITHOUT_CLASSIFICATION	7.447148243536383E-7	DEFECT
//check to see if we warn or not	WITHOUT_CLASSIFICATION	0.9999481637383176	WITHOUT_CLASSIFICATION	5.183626168233413E-5	DEFECT
//no added file, yet	WITHOUT_CLASSIFICATION	0.9999915572988267	WITHOUT_CLASSIFICATION	8.442701173325356E-6	DEFECT
//there is no web.xml file, so add it	WITHOUT_CLASSIFICATION	0.9999993145333881	WITHOUT_CLASSIFICATION	6.854666119314369E-7	DEFECT
//and remember that we did	WITHOUT_CLASSIFICATION	0.9999966257601526	WITHOUT_CLASSIFICATION	3.3742398474189425E-6	DEFECT
//validation	WITHOUT_CLASSIFICATION	0.9997745265743341	WITHOUT_CLASSIFICATION	2.2547342566582975E-4	DEFECT
//discard most of really big resources	WITHOUT_CLASSIFICATION	0.9999724549232033	WITHOUT_CLASSIFICATION	2.7545076796654222E-5	DEFECT
//open up the resource	WITHOUT_CLASSIFICATION	0.9999979546275032	WITHOUT_CLASSIFICATION	2.045372496796151E-6	DEFECT
// impossible since *our* processLine doesn't throw an IOException	WITHOUT_CLASSIFICATION	0.9999990412157053	WITHOUT_CLASSIFICATION	9.587842946665876E-7	DEFECT
// There have been reports that 300 files could be compiled // so 250 is a conservative approach	WITHOUT_CLASSIFICATION	0.999974057323761	WITHOUT_CLASSIFICATION	2.594267623902431E-5	DEFECT
// We assume, that everything jikes writes goes to // standard output, not to standard error. The option // -Xstdout that is given to Jikes in Javac.doJikesCompile() // should guarantee this. At least I hope so. :)	WITHOUT_CLASSIFICATION	0.998937727939052	WITHOUT_CLASSIFICATION	0.0010622720609479287	DEFECT
//if we have a RedirectorElement, return a decoy	WITHOUT_CLASSIFICATION	0.9999939858865087	WITHOUT_CLASSIFICATION	6.014113491339704E-6	DEFECT
// 0 --> srcIndex	WITHOUT_CLASSIFICATION	0.9999963851210143	WITHOUT_CLASSIFICATION	3.6148789857712042E-6	DEFECT
// srcIndex --> targetIndex	WITHOUT_CLASSIFICATION	0.9999993649278403	WITHOUT_CLASSIFICATION	6.350721596568735E-7	DEFECT
// targets are already absolute file names	WITHOUT_CLASSIFICATION	0.9999999347039392	WITHOUT_CLASSIFICATION	6.529606073129618E-8	DEFECT
// targetIndex --> end	WITHOUT_CLASSIFICATION	0.999997725245155	WITHOUT_CLASSIFICATION	2.2747548450715936E-6	DEFECT
// 0 --> targetIndex	WITHOUT_CLASSIFICATION	0.9999965655409913	WITHOUT_CLASSIFICATION	3.434459008828626E-6	DEFECT
// 0 --> srcIndex	WITHOUT_CLASSIFICATION	0.9999963851210143	WITHOUT_CLASSIFICATION	3.6148789857712042E-6	DEFECT
// contains AbstractFileSet // (both DirSet and FileSet)	WITHOUT_CLASSIFICATION	0.9999999501843556	WITHOUT_CLASSIFICATION	4.9815644466986886E-8	DEFECT
// need to reset the stream handler to restart // reading of pipes; // go ahead and do it always w/ nested redirectors	WITHOUT_CLASSIFICATION	0.9999987840614394	WITHOUT_CLASSIFICATION	1.2159385605380395E-6	DEFECT
// need to reset the stream handler to restart // reading of pipes; // go ahead and do it always w/ nested redirectors	WITHOUT_CLASSIFICATION	0.9999987840614394	WITHOUT_CLASSIFICATION	1.2159385605380395E-6	DEFECT
// targets are already absolute file names	WITHOUT_CLASSIFICATION	0.9999999347039392	WITHOUT_CLASSIFICATION	6.529606073129618E-8	DEFECT
// targetIndex --> srcIndex	WITHOUT_CLASSIFICATION	0.9999995258808821	WITHOUT_CLASSIFICATION	4.741191178379183E-7	DEFECT
// srcIndex --> end	WITHOUT_CLASSIFICATION	0.9999952156422612	WITHOUT_CLASSIFICATION	4.784357738719034E-6	DEFECT
// srcIndex --> end	WITHOUT_CLASSIFICATION	0.9999952156422612	WITHOUT_CLASSIFICATION	4.784357738719034E-6	DEFECT
// no targetFilePos	WITHOUT_CLASSIFICATION	0.9999999669095068	WITHOUT_CLASSIFICATION	3.3090493149973704E-8	DEFECT
// fill in source file names	WITHOUT_CLASSIFICATION	0.9999999388292515	WITHOUT_CLASSIFICATION	6.117074844519207E-8	DEFECT
/* this is skipEmpty == false */	WITHOUT_CLASSIFICATION	0.9999974375680755	WITHOUT_CLASSIFICATION	2.5624319245423103E-6	DEFECT
//if there is a new priority, and it is different, change it	WITHOUT_CLASSIFICATION	0.9999991359281567	WITHOUT_CLASSIFICATION	8.640718433588071E-7	DEFECT
//catch permissions denial and keep going	WITHOUT_CLASSIFICATION	0.9999993641473552	WITHOUT_CLASSIFICATION	6.35852644658831E-7	DEFECT
//-- XSLTLiaison	WITHOUT_CLASSIFICATION	0.9999857789520527	WITHOUT_CLASSIFICATION	1.4221047947344921E-5	DEFECT
// Write the properties file back out	WITHOUT_CLASSIFICATION	0.9999925920344476	WITHOUT_CLASSIFICATION	7.407965552415293E-6	DEFECT
//Finally set the property	WITHOUT_CLASSIFICATION	0.9999798372962392	WITHOUT_CLASSIFICATION	2.0162703760788172E-5	DEFECT
// Try parsing the line into an integer.	WITHOUT_CLASSIFICATION	0.9999727066034119	WITHOUT_CLASSIFICATION	2.7293396588212382E-5	DEFECT
//-- XSLTProcess	WITHOUT_CLASSIFICATION	0.9999981642135192	WITHOUT_CLASSIFICATION	1.8357864809010996E-6	DEFECT
// check if liaison wants to log errors using us as logger	WITHOUT_CLASSIFICATION	0.9999960277801997	WITHOUT_CLASSIFICATION	3.9722198002977885E-6	DEFECT
// If we enter here, it means that the stylesheet is supplied // via style attribute	WITHOUT_CLASSIFICATION	0.9999991567265448	WITHOUT_CLASSIFICATION	8.432734551666298E-7	DEFECT
/*                     * shouldn't throw out deprecation warnings before we know,                     * the wrong version has been used.                     */	WITHOUT_CLASSIFICATION	0.9999856184454169	WITHOUT_CLASSIFICATION	1.4381554583125127E-5	DEFECT
// if we have an in file and out then process them	WITHOUT_CLASSIFICATION	0.9999998606778627	WITHOUT_CLASSIFICATION	1.3932213726381275E-7	DEFECT
//-- make sure destination directory exists...	WITHOUT_CLASSIFICATION	0.9991461932843178	WITHOUT_CLASSIFICATION	8.53806715682142E-4	DEFECT
// Process all the files marked for styling	WITHOUT_CLASSIFICATION	0.9999999160644443	WITHOUT_CLASSIFICATION	8.3935555751626E-8	DEFECT
// Process all the directories marked for styling	WITHOUT_CLASSIFICATION	0.9999998882387592	WITHOUT_CLASSIFICATION	1.117612409239182E-7	DEFECT
// only resource collections, there better be some	WITHOUT_CLASSIFICATION	0.9999996603878808	WITHOUT_CLASSIFICATION	3.3961211922385293E-7	DEFECT
//anything else is a classname	WITHOUT_CLASSIFICATION	0.9999983686234171	WITHOUT_CLASSIFICATION	1.6313765829740478E-6	DEFECT
//-- processXML	WITHOUT_CLASSIFICATION	0.9999919925641896	WITHOUT_CLASSIFICATION	8.007435810513597E-6	DEFECT
// Param	WITHOUT_CLASSIFICATION	0.9999993199424253	WITHOUT_CLASSIFICATION	6.800575747348789E-7	DEFECT
// New env var...append the previous one if we have it.	WITHOUT_CLASSIFICATION	0.9999997371125688	WITHOUT_CLASSIFICATION	2.6288743105644044E-7	DEFECT
// Mac	WITHOUT_CLASSIFICATION	0.9999990983968329	WITHOUT_CLASSIFICATION	9.016031671297138E-7	DEFECT
//validation	WITHOUT_CLASSIFICATION	0.9997745265743341	WITHOUT_CLASSIFICATION	2.2547342566582975E-4	DEFECT
// If failed to process document, must delete target document, // or it will not attempt to process it the second time	WITHOUT_CLASSIFICATION	0.9999946020912528	WITHOUT_CLASSIFICATION	5.3979087471568714E-6	DEFECT
// if processor wasn't specified, see if TraX is available.  If not, // default it to xalan, depending on which is in the classpath	WITHOUT_CLASSIFICATION	0.9999986124369163	WITHOUT_CLASSIFICATION	1.3875630836393274E-6	DEFECT
// We call liason.configure() and then liaison.setStylesheet() // so that the internal variables of liaison can be set up	WITHOUT_CLASSIFICATION	0.9999999897567388	WITHOUT_CLASSIFICATION	1.0243261251271548E-8	DEFECT
// If we are here we can set the stylesheet as a // resource	WITHOUT_CLASSIFICATION	0.9999997030487325	WITHOUT_CLASSIFICATION	2.9695126737505127E-7	DEFECT
// If we are here we cannot set the stylesheet as // a resource, but we can set it as a file. So, // we make an attempt to get it as a file	WITHOUT_CLASSIFICATION	0.9999975156165378	WITHOUT_CLASSIFICATION	2.484383462120453E-6	DEFECT
// Give always a slash as file separator, so the stylesheet could be sure about that // Use '.' so a dir+"/"+name would not result in an absolute path	WITHOUT_CLASSIFICATION	0.9999998447530833	WITHOUT_CLASSIFICATION	1.552469166757798E-7	DEFECT
// only 'name' and 'value' exist.	WITHOUT_CLASSIFICATION	0.999995426197458	WITHOUT_CLASSIFICATION	4.573802542068653E-6	DEFECT
// a value must be of a given type // say boolean|integer|string that are mostly used.	WITHOUT_CLASSIFICATION	0.9999999531805206	WITHOUT_CLASSIFICATION	4.681947944982968E-8	DEFECT
// -- class Attribute	WITHOUT_CLASSIFICATION	0.9999998359880038	WITHOUT_CLASSIFICATION	1.6401199617322106E-7	DEFECT
// -- class Factory	WITHOUT_CLASSIFICATION	0.9999987611831305	WITHOUT_CLASSIFICATION	1.2388168695952196E-6	DEFECT
// error message strings	WITHOUT_CLASSIFICATION	0.999998118010067	WITHOUT_CLASSIFICATION	1.8819899329719223E-6	DEFECT
//at this point there is one trailing space to remove, if the list is not empty.	WITHOUT_CLASSIFICATION	0.9999893843521072	WITHOUT_CLASSIFICATION	1.061564789280921E-5	DEFECT
//now exit here if the property is already set	WITHOUT_CLASSIFICATION	0.9990372179592913	WITHOUT_CLASSIFICATION	9.627820407086895E-4	DEFECT
//and add any files if also defined	WITHOUT_CLASSIFICATION	0.9999944088752863	WITHOUT_CLASSIFICATION	5.591124713695832E-6	DEFECT
//add path URLs	WITHOUT_CLASSIFICATION	0.999999321733692	WITHOUT_CLASSIFICATION	6.782663080234144E-7	DEFECT
//create the URL //ant equivalent of  fileToConvert.toURI().toURL().toExternalForm();	WITHOUT_CLASSIFICATION	0.9999982866673256	WITHOUT_CLASSIFICATION	1.713332674399016E-6	DEFECT
// if we run into a timeout, the run-away thread shall not // make the VM run forever - if no timeout occurs, Ant's // main thread will still be there to let the new thread // finish	WITHOUT_CLASSIFICATION	0.9999874596638199	WITHOUT_CLASSIFICATION	1.2540336180201319E-5	DEFECT
//Use the VM launcher instead of shell launcher on VMS	WITHOUT_CLASSIFICATION	0.9999775017435902	WITHOUT_CLASSIFICATION	2.2498256409775882E-5	DEFECT
/*     * Builds a command launcher for the OS and JVM we are running under.     */	WITHOUT_CLASSIFICATION	0.9999979879875933	WITHOUT_CLASSIFICATION	2.0120124066740276E-6	DEFECT
// Try using a JDK 1.3 launcher	WITHOUT_CLASSIFICATION	0.999996184173286	WITHOUT_CLASSIFICATION	3.8158267140899E-6	DEFECT
// Ignore and keep trying	WITHOUT_CLASSIFICATION	0.9999998931694719	WITHOUT_CLASSIFICATION	1.0683052817679372E-7	DEFECT
// OS/2	WITHOUT_CLASSIFICATION	0.9999971413851422	WITHOUT_CLASSIFICATION	2.858614857832673E-6	DEFECT
// Windows XP/2000/NT	WITHOUT_CLASSIFICATION	0.9997918064838184	WITHOUT_CLASSIFICATION	2.0819351618164982E-4	DEFECT
// Windows 98/95 - need to use an auxiliary script	WITHOUT_CLASSIFICATION	0.9998992105195824	WITHOUT_CLASSIFICATION	1.00789480417592E-4	DEFECT
// OpenVMS	WITHOUT_CLASSIFICATION	0.9999975376354525	WITHOUT_CLASSIFICATION	2.4623645473823695E-6	DEFECT
// Generic	WITHOUT_CLASSIFICATION	0.9999993034003312	WITHOUT_CLASSIFICATION	6.965996688683236E-7	DEFECT
// Make sure we do not recurse forever	WITHOUT_CLASSIFICATION	0.9999873530910314	WITHOUT_CLASSIFICATION	1.2646908968608516E-5	DEFECT
// Just try to use what we got	WITHOUT_CLASSIFICATION	0.9999994167580107	WITHOUT_CLASSIFICATION	5.832419893294118E-7	DEFECT
// Since we "look ahead" before adding, there's one last env var.	WITHOUT_CLASSIFICATION	0.9999998425350237	WITHOUT_CLASSIFICATION	1.5746497640905027E-7	DEFECT
// Just try to see how much we got	WITHOUT_CLASSIFICATION	0.9999983368253251	WITHOUT_CLASSIFICATION	1.6631746748293984E-6	DEFECT
// OS/2 - use same mechanism as Windows 2000	WITHOUT_CLASSIFICATION	0.9999986613550211	WITHOUT_CLASSIFICATION	1.3386449788703425E-6	DEFECT
// Determine if we're running under XP/2000/NT or 98/95	WITHOUT_CLASSIFICATION	0.9999955611627572	WITHOUT_CLASSIFICATION	4.438837242783733E-6	DEFECT
// Windows 98/95	WITHOUT_CLASSIFICATION	0.9998568834722651	WITHOUT_CLASSIFICATION	1.431165277349342E-4	DEFECT
// Windows XP/2000/NT/2003	WITHOUT_CLASSIFICATION	0.9997878771064158	WITHOUT_CLASSIFICATION	2.121228935841758E-4	DEFECT
// On most systems one could use: /bin/sh -c env	WITHOUT_CLASSIFICATION	0.9998208295092572	WITHOUT_CLASSIFICATION	1.7917049074281654E-4	DEFECT
// Some systems have /bin/env, others /usr/bin/env, just try	WITHOUT_CLASSIFICATION	0.9999961326715492	WITHOUT_CLASSIFICATION	3.867328450798408E-6	DEFECT
// rely on PATH	WITHOUT_CLASSIFICATION	0.9998933410499448	WITHOUT_CLASSIFICATION	1.0665895005516894E-4	DEFECT
// rely on PATH	WITHOUT_CLASSIFICATION	0.9998933410499448	WITHOUT_CLASSIFICATION	1.0665895005516894E-4	DEFECT
//noop default encoding used	WITHOUT_CLASSIFICATION	0.9999985560266761	WITHOUT_CLASSIFICATION	1.4439733239145954E-6	DEFECT
//By default, use the shell launcher for VMS //	WITHOUT_CLASSIFICATION	0.9999967620047873	WITHOUT_CLASSIFICATION	3.237995212803277E-6	DEFECT
// add the process to the list of those to destroy if the VM exits //	WITHOUT_CLASSIFICATION	0.9999997475267363	WITHOUT_CLASSIFICATION	2.524732637901327E-7	DEFECT
// #31928: forcibly kill it before continuing.	WITHOUT_CLASSIFICATION	0.9993056868033562	WITHOUT_CLASSIFICATION	6.943131966438164E-4	DEFECT
// remove the process to the list of those to destroy if // the VM exits //	WITHOUT_CLASSIFICATION	0.9999953098961575	WITHOUT_CLASSIFICATION	4.690103842581314E-6	DEFECT
//on openvms even exit value signals failure; // for other platforms nonzero exit value signals failure	WITHOUT_CLASSIFICATION	0.9998160853746917	WITHOUT_CLASSIFICATION	1.8391462530832975E-4	DEFECT
// Get key including "="	WITHOUT_CLASSIFICATION	0.9999980831803021	WITHOUT_CLASSIFICATION	1.916819697887791E-6	DEFECT
// Nb: using default locale as key is a env name	WITHOUT_CLASSIFICATION	0.9999976572443448	WITHOUT_CLASSIFICATION	2.3427556553482627E-6	DEFECT
// Find the key in the current enviroment copy // and remove it.	WITHOUT_CLASSIFICATION	0.9999972437843737	WITHOUT_CLASSIFICATION	2.756215626217353E-6	DEFECT
// Use the original casiness of the key	WITHOUT_CLASSIFICATION	0.9999993333360077	WITHOUT_CLASSIFICATION	6.666639923721245E-7	DEFECT
// Add the key to the enviromnent copy	WITHOUT_CLASSIFICATION	0.9999947194302351	WITHOUT_CLASSIFICATION	5.280569764938874E-6	DEFECT
// parse the VMS logicals into required format ("VAR=VAL[,VAL2]")	WITHOUT_CLASSIFICATION	0.9999134583023616	WITHOUT_CLASSIFICATION	8.65416976384431E-5	DEFECT
// further equivalence name of previous logical	WITHOUT_CLASSIFICATION	0.99999977254738	WITHOUT_CLASSIFICATION	2.2745261993483796E-7	DEFECT
// new logical?	WITHOUT_CLASSIFICATION	0.9999993423400786	WITHOUT_CLASSIFICATION	6.576599213989874E-7	DEFECT
// already got this logical from a higher order table	WITHOUT_CLASSIFICATION	0.9999992400162022	WITHOUT_CLASSIFICATION	7.599837977278074E-7	DEFECT
/* the arguments: */	WITHOUT_CLASSIFICATION	0.9999992479814566	WITHOUT_CLASSIFICATION	7.52018543562155E-7	DEFECT
// IllegalAccess, IllegalArgument, ClassCast	WITHOUT_CLASSIFICATION	0.9999999681024869	WITHOUT_CLASSIFICATION	3.189751306824203E-8	DEFECT
// Locate the auxiliary script	WITHOUT_CLASSIFICATION	0.9999999762997093	WITHOUT_CLASSIFICATION	2.370029071690543E-8	DEFECT
// Build the command	WITHOUT_CLASSIFICATION	0.9999966766442583	WITHOUT_CLASSIFICATION	3.3233557417046498E-6	DEFECT
// add the environment as logicals to the DCL script	WITHOUT_CLASSIFICATION	0.9999984564632896	WITHOUT_CLASSIFICATION	1.5435367104680478E-6	DEFECT
//empty	WITHOUT_CLASSIFICATION	0.9999817562721358	WITHOUT_CLASSIFICATION	1.824372786417827E-5	DEFECT
//empty	WITHOUT_CLASSIFICATION	0.9999817562721358	WITHOUT_CLASSIFICATION	1.824372786417827E-5	DEFECT
// Locate method Runtime.exec(String[] cmdarray, //                            String[] envp, File dir)	WITHOUT_CLASSIFICATION	0.9999999603700211	WITHOUT_CLASSIFICATION	3.9629978834368314E-8	DEFECT
// Use cmd.exe to change to the specified drive and // directory before running the command	WITHOUT_CLASSIFICATION	0.9999997954446488	WITHOUT_CLASSIFICATION	2.0455535128607773E-7	DEFECT
// Use cmd.exe to change to the specified directory before running // the command	WITHOUT_CLASSIFICATION	0.9999997679544527	WITHOUT_CLASSIFICATION	2.3204554722744638E-7	DEFECT
// need to set the project on unknown element	WITHOUT_CLASSIFICATION	0.9999979509919631	WITHOUT_CLASSIFICATION	2.0490080369751235E-6	DEFECT
//************************************************************************ //  protected and private methods //************************************************************************	WITHOUT_CLASSIFICATION	0.9999999637897814	WITHOUT_CLASSIFICATION	3.621021864816339E-8	DEFECT
//Attempt complete directory renames, if any, first.	WITHOUT_CLASSIFICATION	0.9999994837026053	WITHOUT_CLASSIFICATION	5.162973947171344E-7	DEFECT
// files to move	WITHOUT_CLASSIFICATION	0.9999904702142115	WITHOUT_CLASSIFICATION	9.529785788469352E-6	DEFECT
//Is this file still available to be moved?	WITHOUT_CLASSIFICATION	0.9999992475443016	WITHOUT_CLASSIFICATION	7.524556985510409E-7	DEFECT
// if this is the last time through the loop then // move will not occur, but that's what we want	WITHOUT_CLASSIFICATION	0.9999952026214031	WITHOUT_CLASSIFICATION	4.797378596899875E-6	DEFECT
// maybe io error?	WITHOUT_CLASSIFICATION	0.999998570035058	WITHOUT_CLASSIFICATION	1.4299649419308552E-6	DEFECT
// found a file	WITHOUT_CLASSIFICATION	0.9999993164977695	WITHOUT_CLASSIFICATION	6.835022305428835E-7	DEFECT
// on an io error list() can return null	WITHOUT_CLASSIFICATION	0.9999997266724343	WITHOUT_CLASSIFICATION	2.733275657256875E-7	DEFECT
// Whether *this VM* is 1.4+ (but also check executable != null).	WITHOUT_CLASSIFICATION	0.9999996289708958	WITHOUT_CLASSIFICATION	3.710291042132822E-7	DEFECT
// ------------------------------------------ general Javadoc arguments	WITHOUT_CLASSIFICATION	0.9999999908806337	WITHOUT_CLASSIFICATION	9.119366241809434E-9	DEFECT
// ---------------------------- javadoc2 arguments for default doclet	WITHOUT_CLASSIFICATION	0.9999998248659703	WITHOUT_CLASSIFICATION	1.751340297359026E-7	DEFECT
// add the links arguments	WITHOUT_CLASSIFICATION	0.9999999956639544	WITHOUT_CLASSIFICATION	4.336045618408369E-9	DEFECT
// should be impossible	WITHOUT_CLASSIFICATION	0.9999975080532592	WITHOUT_CLASSIFICATION	2.4919467407831577E-6	DEFECT
// is the href a valid URL	WITHOUT_CLASSIFICATION	0.9999999026862333	WITHOUT_CLASSIFICATION	9.731376674491426E-8	DEFECT
// ok - just skip	WITHOUT_CLASSIFICATION	0.9999989918220302	WITHOUT_CLASSIFICATION	1.0081779697521572E-6	DEFECT
//return	WITHOUT_CLASSIFICATION	0.9999368613854075	WITHOUT_CLASSIFICATION	6.313861459252865E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999995287844801	WITHOUT_CLASSIFICATION	4.7121551989690683E-7	DEFECT
//validation logic	WITHOUT_CLASSIFICATION	0.999916125919828	WITHOUT_CLASSIFICATION	8.387408017190597E-5	DEFECT
// Ignore Exception	WITHOUT_CLASSIFICATION	0.9999982379546444	WITHOUT_CLASSIFICATION	1.7620453556618215E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999995133297559	WITHOUT_CLASSIFICATION	4.86670244023277E-7	DEFECT
// Only try to move if this is the last mapped file // and one of the mappings isn't to itself	WITHOUT_CLASSIFICATION	0.9999992754837227	WITHOUT_CLASSIFICATION	7.245162772940578E-7	DEFECT
// createArgument(true) is necessary to make sure -locale // is the first argument (required in 1.3+).	WITHOUT_CLASSIFICATION	0.9999981199922787	WITHOUT_CLASSIFICATION	1.880007721289457E-6	DEFECT
// Go through the tokens one at a time, updating the // elements array and issuing warnings where appropriate.	WITHOUT_CLASSIFICATION	0.9999950436173168	WITHOUT_CLASSIFICATION	4.956382683153322E-6	DEFECT
// Ant javadoc task rules for group attribute: //   Args are comma-delimited. //   Each arg is 2 space-delimited strings. //   E.g., group="XSLT_Packages org.apache.xalan.xslt*, //                XPath_Packages org.apache.xalan.xpath*"	WITHOUT_CLASSIFICATION	0.9999987768315377	WITHOUT_CLASSIFICATION	1.2231684621972352E-6	DEFECT
// add the group arguments	WITHOUT_CLASSIFICATION	0.9999999759079156	WITHOUT_CLASSIFICATION	2.4092084393913753E-8	DEFECT
// Javadoc 1.4 parameters	WITHOUT_CLASSIFICATION	0.9999999837607186	WITHOUT_CLASSIFICATION	1.6239281408835438E-8	DEFECT
// The tag element is not used as a fileset, // but specifies the tag directly.	WITHOUT_CLASSIFICATION	0.9999985072594801	WITHOUT_CLASSIFICATION	1.4927405198808233E-6	DEFECT
// The tag element is used as a // fileset. Parse all the files and create // -tag arguments.	WITHOUT_CLASSIFICATION	0.9999998637214519	WITHOUT_CLASSIFICATION	1.3627854807691628E-7	DEFECT
// Not 1.4+.	WITHOUT_CLASSIFICATION	0.9999960419906021	WITHOUT_CLASSIFICATION	3.958009397813958E-6	DEFECT
// Javadoc 1.2/1.3 parameters:	WITHOUT_CLASSIFICATION	0.9999998940155276	WITHOUT_CLASSIFICATION	1.0598447241691496E-7	DEFECT
// If using an external file, write the command line options to it	WITHOUT_CLASSIFICATION	0.9999974836306149	WITHOUT_CLASSIFICATION	2.516369385025355E-6	DEFECT
// If using an external file, write the command line options to it	WITHOUT_CLASSIFICATION	0.9999974836306149	WITHOUT_CLASSIFICATION	2.516369385025355E-6	DEFECT
/*         * No reason to change the working directory as all filenames and         * path components have been resolved already.         *         * Avoid problems with command line length in some environments.         */	WITHOUT_CLASSIFICATION	0.9999071255660684	WITHOUT_CLASSIFICATION	9.287443393155435E-5	DEFECT
// are there any java files in this directory?	WITHOUT_CLASSIFICATION	0.9999998957648033	WITHOUT_CLASSIFICATION	1.042351968018633E-7	DEFECT
// We don't need to care for duplicates here, // Path.list does it for us.	WITHOUT_CLASSIFICATION	0.9999987995895369	WITHOUT_CLASSIFICATION	1.2004104631187088E-6	DEFECT
// CheckStyle:MethodNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9999994669713123	WITHOUT_CLASSIFICATION	5.330286877976686E-7	DEFECT
/* Methods below all add specific selectors */	WITHOUT_CLASSIFICATION	0.999999573127979	WITHOUT_CLASSIFICATION	4.268720209536336E-7	DEFECT
//convert a class name into a resource	WITHOUT_CLASSIFICATION	0.9999936434543	WITHOUT_CLASSIFICATION	6.356545700041186E-6	DEFECT
//set the property	WITHOUT_CLASSIFICATION	0.999977741283317	WITHOUT_CLASSIFICATION	2.2258716683064717E-5	DEFECT
// line feed	WITHOUT_CLASSIFICATION	0.9999937141375663	WITHOUT_CLASSIFICATION	6.285862433664591E-6	DEFECT
// by default, remove matching empty dirs	WITHOUT_CLASSIFICATION	0.9999998223359285	WITHOUT_CLASSIFICATION	1.7766407148077838E-7	DEFECT
// delete the single file	WITHOUT_CLASSIFICATION	0.9999992015056491	WITHOUT_CLASSIFICATION	7.984943508972627E-7	DEFECT
// delete the directory	WITHOUT_CLASSIFICATION	0.9999997175377807	WITHOUT_CLASSIFICATION	2.824622192180424E-7	DEFECT
//add the files from the default fileset:	WITHOUT_CLASSIFICATION	0.9999991397256607	WITHOUT_CLASSIFICATION	8.602743392430003E-7	DEFECT
// sort first to files, then dirs	WITHOUT_CLASSIFICATION	0.999998698787178	WITHOUT_CLASSIFICATION	1.301212822057079E-6	DEFECT
/*                 * Plain impossible with UTF8, see                 * http://java.sun.com/j2se/1.5.0/docs/guide/intl/encoding.doc.html                 *                 * fallback to platform specific anyway.                 */	WITHOUT_CLASSIFICATION	0.999999818429292	WITHOUT_CLASSIFICATION	1.81570707992237E-7	DEFECT
//patch the redirector to save output to a file	WITHOUT_CLASSIFICATION	0.9999987128475265	WITHOUT_CLASSIFICATION	1.2871524735613529E-6	DEFECT
//verify special operations	WITHOUT_CLASSIFICATION	0.9999995770400338	WITHOUT_CLASSIFICATION	4.229599661925774E-7	DEFECT
//JAR  is required	WITHOUT_CLASSIFICATION	0.9995590389896594	WITHOUT_CLASSIFICATION	4.4096101034062893E-4	DEFECT
//deal with jdk1.4.2 bug:	WITHOUT_CLASSIFICATION	0.9999439431118038	WITHOUT_CLASSIFICATION	5.60568881961992E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999995133297559	WITHOUT_CLASSIFICATION	4.86670244023277E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999995287844801	WITHOUT_CLASSIFICATION	4.7121551989690683E-7	DEFECT
// now we need to populate the compiler adapter	WITHOUT_CLASSIFICATION	0.9999994227938132	WITHOUT_CLASSIFICATION	5.77206186763007E-7	DEFECT
// finally, lets execute the compiler!!	WITHOUT_CLASSIFICATION	0.9999836274029463	WITHOUT_CLASSIFICATION	1.6372597053720634E-5	DEFECT
//validation	WITHOUT_CLASSIFICATION	0.9997745265743341	WITHOUT_CLASSIFICATION	2.2547342566582975E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999995133297559	WITHOUT_CLASSIFICATION	4.86670244023277E-7	DEFECT
// nonexistent resources could only occur if we already // deleted something from a fileset:	WITHOUT_CLASSIFICATION	0.9999744037099352	WITHOUT_CLASSIFICATION	2.559629006471182E-5	DEFECT
//cache	WITHOUT_CLASSIFICATION	0.9999891433125394	WITHOUT_CLASSIFICATION	1.0856687460619734E-5	DEFECT
// no include pattern implicitly means includes="**"	WITHOUT_CLASSIFICATION	0.9999986098406483	WITHOUT_CLASSIFICATION	1.3901593517537088E-6	DEFECT
//Do not process this file	WITHOUT_CLASSIFICATION	0.9999969473282798	WITHOUT_CLASSIFICATION	3.052671720209981E-6	DEFECT
// make sure facade knows about magic properties and fork setting	WITHOUT_CLASSIFICATION	0.9999076656775935	WITHOUT_CLASSIFICATION	9.233432240646902E-5	DEFECT
// deal with the resources	WITHOUT_CLASSIFICATION	0.9999997805655252	WITHOUT_CLASSIFICATION	2.1943447488742202E-7	DEFECT
// Make a transaction for each resource	WITHOUT_CLASSIFICATION	0.9999985410542077	WITHOUT_CLASSIFICATION	1.4589457922995915E-6	DEFECT
// Make a transaction group for the outer command	WITHOUT_CLASSIFICATION	0.9999981588375187	WITHOUT_CLASSIFICATION	1.841162481276382E-6	DEFECT
// Process all transactions	WITHOUT_CLASSIFICATION	0.999999985417827	WITHOUT_CLASSIFICATION	1.4582173046710444E-8	DEFECT
// Catch any statements not followed by ;	WITHOUT_CLASSIFICATION	0.9999949282506897	WITHOUT_CLASSIFICATION	5.071749310391982E-6	DEFECT
// Check and ignore empty statements	WITHOUT_CLASSIFICATION	0.9999999868588023	WITHOUT_CLASSIFICATION	1.3141197660432242E-8	DEFECT
/*     * Closes an unused connection after an error and doesn't rethrow     * a possible SQLException     * @since Ant 1.7     */	WITHOUT_CLASSIFICATION	0.9999987791366349	WITHOUT_CLASSIFICATION	1.2208633650171382E-6	DEFECT
// dreaded backwards compatibility	WITHOUT_CLASSIFICATION	0.9999906425502819	WITHOUT_CLASSIFICATION	9.357449718113411E-6	DEFECT
/*Throw an exception if cvs exited with error. (Iulian)*/	WITHOUT_CLASSIFICATION	0.9999600181658398	WITHOUT_CLASSIFICATION	3.998183416017605E-5	DEFECT
// re-implement legacy behaviour:	WITHOUT_CLASSIFICATION	0.9999914685518658	WITHOUT_CLASSIFICATION	8.531448134102879E-6	DEFECT
// Check if not real cvsroot => set it to null	WITHOUT_CLASSIFICATION	0.999979326546285	WITHOUT_CLASSIFICATION	2.0673453715127718E-5	DEFECT
// Check if not real cvsrsh => set it to null	WITHOUT_CLASSIFICATION	0.9999712965072743	WITHOUT_CLASSIFICATION	2.870349272570117E-5	DEFECT
// Check if not real tag => set it to null	WITHOUT_CLASSIFICATION	0.9999787306015888	WITHOUT_CLASSIFICATION	2.1269398411148035E-5	DEFECT
// close the output file if required	WITHOUT_CLASSIFICATION	0.9999989848905805	WITHOUT_CLASSIFICATION	1.0151094194963196E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999995133297559	WITHOUT_CLASSIFICATION	4.86670244023277E-7	DEFECT
//req // req	WITHOUT_CLASSIFICATION	0.9999910948871289	WITHOUT_CLASSIFICATION	8.905112871114595E-6	DEFECT
// scan source directories and dest directory to build up // compile lists	WITHOUT_CLASSIFICATION	0.9999999369759144	WITHOUT_CLASSIFICATION	6.302408558462923E-8	DEFECT
//there is no need to expand properties here as that happens when Transaction.addText is //called; to do so here would be an error.	WITHOUT_CLASSIFICATION	0.9996430297828418	WITHOUT_CLASSIFICATION	3.5697021715813996E-4	DEFECT
//there are places (in this file, and perhaps elsewhere, where it is assumed //that null is an acceptable parameter.	WITHOUT_CLASSIFICATION	0.9999999831726776	WITHOUT_CLASSIFICATION	1.6827322377595402E-8	DEFECT
// We can't do it ourselves as jCVS is GPLed, a third party task // outside of jakarta repositories would be possible though (SB).	WITHOUT_CLASSIFICATION	0.99999698524778	WITHOUT_CLASSIFICATION	3.014752219880525E-6	DEFECT
// // Just call the getExecuteStreamHandler() and let it handle //     the semantics of instantiation or retrieval. //	WITHOUT_CLASSIFICATION	0.9999772095389764	WITHOUT_CLASSIFICATION	2.2790461023598082E-5	DEFECT
// we are chmodding the given directory	WITHOUT_CLASSIFICATION	0.9999760090765919	WITHOUT_CLASSIFICATION	2.3990923408146164E-5	DEFECT
// may be altered in validateAttributes	WITHOUT_CLASSIFICATION	0.99999947065809	WITHOUT_CLASSIFICATION	5.293419099008095E-7	DEFECT
// will be removed in validateAttributes	WITHOUT_CLASSIFICATION	0.9999791713128723	WITHOUT_CLASSIFICATION	2.0828687127775442E-5	DEFECT
// make sure we don't have an illegal set of options	WITHOUT_CLASSIFICATION	0.9999931871001996	WITHOUT_CLASSIFICATION	6.812899800440094E-6	DEFECT
// deal with the single file	WITHOUT_CLASSIFICATION	0.9999990324911833	WITHOUT_CLASSIFICATION	9.675088167033205E-7	DEFECT
// deal with the ResourceCollections	WITHOUT_CLASSIFICATION	0.9999998207321801	WITHOUT_CLASSIFICATION	1.792678198184924E-7	DEFECT
// Step (1) - beware of the ZipFileSet	WITHOUT_CLASSIFICATION	0.9999992518197618	WITHOUT_CLASSIFICATION	7.481802382780936E-7	DEFECT
// not a fileset or contains non-file resources	WITHOUT_CLASSIFICATION	0.999997890105162	WITHOUT_CLASSIFICATION	2.1098948380310493E-6	DEFECT
// copying of dirs is trivial and can be done // for non-file resources as well as for real // files.	WITHOUT_CLASSIFICATION	0.999998127625504	WITHOUT_CLASSIFICATION	1.8723744960367639E-6	DEFECT
// a not-directory file resource // needs special treatment	WITHOUT_CLASSIFICATION	0.9999994784896865	WITHOUT_CLASSIFICATION	5.215103133933578E-7	DEFECT
// do all the copy operations now...	WITHOUT_CLASSIFICATION	0.9999939328138148	WITHOUT_CLASSIFICATION	6.067186185258092E-6	DEFECT
// restrict to out-of-date resources	WITHOUT_CLASSIFICATION	0.999999511624026	WITHOUT_CLASSIFICATION	4.883759739604433E-7	DEFECT
// clean up again, so this instance can be used a second // time	WITHOUT_CLASSIFICATION	0.9999999882588598	WITHOUT_CLASSIFICATION	1.1741140214144362E-8	DEFECT
// reuse the array created by the mapper	WITHOUT_CLASSIFICATION	0.9999998593254081	WITHOUT_CLASSIFICATION	1.4067459187979722E-7	DEFECT
// reuse the array created by the mapper	WITHOUT_CLASSIFICATION	0.9999998593254081	WITHOUT_CLASSIFICATION	1.4067459187979722E-7	DEFECT
//now patch in all system properties	WITHOUT_CLASSIFICATION	0.9998875313531898	WITHOUT_CLASSIFICATION	1.1246864681028378E-4	DEFECT
// is the keystore a file	WITHOUT_CLASSIFICATION	0.9999996773065666	WITHOUT_CLASSIFICATION	3.2269343342482096E-7	DEFECT
// must be a URL - just pass as is	WITHOUT_CLASSIFICATION	0.9999998586897895	WITHOUT_CLASSIFICATION	1.4131021045252492E-7	DEFECT
// Gump friendly - don't mess with the core loader if only classpath	WITHOUT_CLASSIFICATION	0.9999706123216267	WITHOUT_CLASSIFICATION	2.938767837323952E-5	DEFECT
// Construct a new class loader	WITHOUT_CLASSIFICATION	0.9999999467789855	WITHOUT_CLASSIFICATION	5.322101447699937E-8	DEFECT
// The param is "parentFirst"	WITHOUT_CLASSIFICATION	0.9999901104453117	WITHOUT_CLASSIFICATION	9.889554688214233E-6	DEFECT
/*public*/	WITHOUT_CLASSIFICATION	0.9999674670662031	WITHOUT_CLASSIFICATION	3.253293379693791E-5	DEFECT
//shield it from being closed by a filtering StreamPumper	WITHOUT_CLASSIFICATION	0.9999793313196331	WITHOUT_CLASSIFICATION	2.066868036682054E-5	DEFECT
//shield it from being closed by a filtering StreamPumper	WITHOUT_CLASSIFICATION	0.9999793313196331	WITHOUT_CLASSIFICATION	2.066868036682054E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999995133297559	WITHOUT_CLASSIFICATION	4.86670244023277E-7	DEFECT
// set read-only properties // CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999966415685538	WITHOUT_CLASSIFICATION	3.358431446235206E-6	DEFECT
// Are any other references held ? Can we 'close' the loader // so it removes the locks on jars ? // a new one will be created.	WITHOUT_CLASSIFICATION	0.9999975278073612	WITHOUT_CLASSIFICATION	2.4721926388058337E-6	DEFECT
// The core loader must be reverse //reverse=true;	WITHOUT_CLASSIFICATION	0.9999906062340661	WITHOUT_CLASSIFICATION	9.393765933866918E-6	DEFECT
// This allows the core loader to load optional tasks // without delegating	WITHOUT_CLASSIFICATION	0.9999735067516227	WITHOUT_CLASSIFICATION	2.649324837733476E-5	DEFECT
//wait for the StreamPumpers to finish	WITHOUT_CLASSIFICATION	0.999945866247551	WITHOUT_CLASSIFICATION	5.4133752448949894E-5	DEFECT
// Ignore exception	WITHOUT_CLASSIFICATION	0.9999974145026143	WITHOUT_CLASSIFICATION	2.5854973856815335E-6	DEFECT
// Normalize the reference directory (containing the jar)	WITHOUT_CLASSIFICATION	0.9999999567538425	WITHOUT_CLASSIFICATION	4.324615750071601E-8	DEFECT
// Normalize the current file	WITHOUT_CLASSIFICATION	0.9999999759374782	WITHOUT_CLASSIFICATION	2.4062521733197382E-8	DEFECT
// No match, so bail out!	WITHOUT_CLASSIFICATION	0.999999869353677	WITHOUT_CLASSIFICATION	1.3064632287169798E-7	DEFECT
// Finally assign the property with the manifest classpath	WITHOUT_CLASSIFICATION	0.9999830404004368	WITHOUT_CLASSIFICATION	1.6959599563179003E-5	DEFECT
// try to find a MAX_LINE_LENGTH byte section	WITHOUT_CLASSIFICATION	0.9999712234281863	WITHOUT_CLASSIFICATION	2.8776571813664097E-5	DEFECT
// continuation line	WITHOUT_CLASSIFICATION	0.9999922248650156	WITHOUT_CLASSIFICATION	7.775134984362168E-6	DEFECT
// refresh attribute in case of multivalued attributes.	WITHOUT_CLASSIFICATION	0.9999998841076413	WITHOUT_CLASSIFICATION	1.1589235876685931E-7	DEFECT
// the merge file always wins	WITHOUT_CLASSIFICATION	0.9999999205588787	WITHOUT_CLASSIFICATION	7.944112129605491E-8	DEFECT
// the merge file *always* wins, even for Class-Path	WITHOUT_CLASSIFICATION	0.9999999372677303	WITHOUT_CLASSIFICATION	6.273226972055284E-8	DEFECT
// add in the warnings	WITHOUT_CLASSIFICATION	0.9999999362041139	WITHOUT_CLASSIFICATION	6.37958860452535E-8	DEFECT
// This should be the manifest version	WITHOUT_CLASSIFICATION	0.9998221217341552	WITHOUT_CLASSIFICATION	1.77878265844766E-4	DEFECT
// add it back	WITHOUT_CLASSIFICATION	0.9999961408186759	WITHOUT_CLASSIFICATION	3.859181324085788E-6	DEFECT
// shouldn't happen - ignore	WITHOUT_CLASSIFICATION	0.9999961153957876	WITHOUT_CLASSIFICATION	3.884604212386043E-6	DEFECT
// create a vector and add in the warnings for all the sections	WITHOUT_CLASSIFICATION	0.9999991284967846	WITHOUT_CLASSIFICATION	8.715032153898381E-7	DEFECT
//off by default	WITHOUT_CLASSIFICATION	0.9999829951971799	WITHOUT_CLASSIFICATION	1.7004802820067347E-5	DEFECT
//set up logging	WITHOUT_CLASSIFICATION	0.9999935223228155	WITHOUT_CLASSIFICATION	6.477677184530356E-6	DEFECT
//execute the get	WITHOUT_CLASSIFICATION	0.9999749509011931	WITHOUT_CLASSIFICATION	2.5049098806873738E-5	DEFECT
//dont do any progress, unless asked	WITHOUT_CLASSIFICATION	0.9999903070949536	WITHOUT_CLASSIFICATION	9.692905046377067E-6	DEFECT
//set the timestamp to the file date.	WITHOUT_CLASSIFICATION	0.999999235620715	WITHOUT_CLASSIFICATION	7.643792849192849E-7	DEFECT
//set up the URL connection	WITHOUT_CLASSIFICATION	0.9999991395093424	WITHOUT_CLASSIFICATION	8.604906575818944E-7	DEFECT
// Create as many directory prefixes as parent levels to traverse, // in addition to the reference directory itself	WITHOUT_CLASSIFICATION	0.9999991529173211	WITHOUT_CLASSIFICATION	8.470826788580617E-7	DEFECT
// Find the longest prefix shared by the current file // and the reference directory.	WITHOUT_CLASSIFICATION	0.9999997225094651	WITHOUT_CLASSIFICATION	2.7749053488432157E-7	DEFECT
// We have a match! Add as many ../ as parent // directory traversed to get the relative path	WITHOUT_CLASSIFICATION	0.9999843630962822	WITHOUT_CLASSIFICATION	1.5636903717800206E-5	DEFECT
// Manifest's ClassPath: attribute always uses forward // slashes '/', and is space-separated. Ant will properly // format it on 72 columns with proper line continuation	WITHOUT_CLASSIFICATION	0.9996650708657125	WITHOUT_CLASSIFICATION	3.3492913428741797E-4	DEFECT
// a continuation on the first line is a // continuation of the name - concatenate this // line and the name	WITHOUT_CLASSIFICATION	0.999999935827678	WITHOUT_CLASSIFICATION	6.417232206391499E-8	DEFECT
// required // required	WITHOUT_CLASSIFICATION	0.999990199878516	WITHOUT_CLASSIFICATION	9.800121483949207E-6	DEFECT
//modify the headers //NB: things like user authentication could go in here too.	WITHOUT_CLASSIFICATION	0.9982909132719937	WITHOUT_CLASSIFICATION	0.0017090867280062582	DEFECT
// prepare Java 1.1 style credentials	WITHOUT_CLASSIFICATION	0.9999999886412669	WITHOUT_CLASSIFICATION	1.1358733121007986E-8	DEFECT
//we do not use the sun impl for portability, //and always use our own implementation for consistent //testing	WITHOUT_CLASSIFICATION	0.9999862297451827	WITHOUT_CLASSIFICATION	1.3770254817358308E-5	DEFECT
//connect to the remote site (may take some time)	WITHOUT_CLASSIFICATION	0.9999778697742133	WITHOUT_CLASSIFICATION	2.2130225786736455E-5	DEFECT
//next test for a 304 result (HTTP only)	WITHOUT_CLASSIFICATION	0.999967340649738	WITHOUT_CLASSIFICATION	3.2659350262002894E-5	DEFECT
// test for 401 result (HTTP only)	WITHOUT_CLASSIFICATION	0.9999941648534874	WITHOUT_CLASSIFICATION	5.835146512603645E-6	DEFECT
//REVISIT: at this point even non HTTP connections may //support the if-modified-since behaviour -we just check //the date of the content and skip the write if it is not //newer. Some protocols (FTP) don't include dates, of //course.	WITHOUT_CLASSIFICATION	0.999420623210268	WITHOUT_CLASSIFICATION	5.79376789732005E-4	DEFECT
//this three attempt trick is to get round quirks in different //Java implementations. Some of them take a few goes to bind //property; we ignore the first couple of such failures.	WITHOUT_CLASSIFICATION	0.9999995144040215	WITHOUT_CLASSIFICATION	4.855959785415561E-7	DEFECT
//successful download	WITHOUT_CLASSIFICATION	0.9999929395917245	WITHOUT_CLASSIFICATION	7.06040827549138E-6	DEFECT
// this happens if the projecthelper was not registered with the project.	WITHOUT_CLASSIFICATION	0.9998733767860103	WITHOUT_CLASSIFICATION	1.2662321398976373E-4	DEFECT
// methods to register and unregister shutdown hooks	WITHOUT_CLASSIFICATION	0.9999686032084814	WITHOUT_CLASSIFICATION	3.139679151858084E-5	DEFECT
// check to see if the shutdown hook methods exists // (support pre-JDK 1.3 VMs)	WITHOUT_CLASSIFICATION	0.9999884412328077	WITHOUT_CLASSIFICATION	1.1558767192352317E-5	DEFECT
// wait to add shutdown hook as needed	WITHOUT_CLASSIFICATION	0.9999815202971826	WITHOUT_CLASSIFICATION	1.847970281746414E-5	DEFECT
// it just won't be added as a shutdown hook... :(	WITHOUT_CLASSIFICATION	0.9998669059976865	WITHOUT_CLASSIFICATION	1.3309400231359677E-4	DEFECT
// shutdown already is in progress	WITHOUT_CLASSIFICATION	0.9998625029199432	WITHOUT_CLASSIFICATION	1.3749708005682566E-4	DEFECT
// Ignore Exception	WITHOUT_CLASSIFICATION	0.9999982379546444	WITHOUT_CLASSIFICATION	1.7620453556618215E-6	DEFECT
// shutdown already is in progress	WITHOUT_CLASSIFICATION	0.9998625029199432	WITHOUT_CLASSIFICATION	1.3749708005682566E-4	DEFECT
// I don't think we can use File - different rules // for relative paths.	WITHOUT_CLASSIFICATION	0.9999996716210984	WITHOUT_CLASSIFICATION	3.28378901663872E-7	DEFECT
// this happens if ant is used with a project // helper that doesn't set the import.	WITHOUT_CLASSIFICATION	0.9999986837627454	WITHOUT_CLASSIFICATION	1.3162372546554153E-6	DEFECT
// Paths are relative to the build file they're imported from, // *not* the current directory (same as entity includes).	WITHOUT_CLASSIFICATION	0.9999999914276486	WITHOUT_CLASSIFICATION	8.572351394854253E-9	DEFECT
// whether or not this ProcessDestroyer has been registered as a // shutdown hook	WITHOUT_CLASSIFICATION	0.9999972507479977	WITHOUT_CLASSIFICATION	2.749252002324852E-6	DEFECT
// whether or not this ProcessDestroyer is currently running as // shutdown hook	WITHOUT_CLASSIFICATION	0.9999596440665863	WITHOUT_CLASSIFICATION	4.0355933413588266E-5	DEFECT
// this should return quickly, since it basically is a NO-OP.	WITHOUT_CLASSIFICATION	0.9999913087891137	WITHOUT_CLASSIFICATION	8.691210886409711E-6	DEFECT
// the thread didn't die in time // it should not kill any processes unexpectedly	WITHOUT_CLASSIFICATION	0.9999963514425944	WITHOUT_CLASSIFICATION	3.6485574056610953E-6	DEFECT
// if this list is empty, register the shutdown hook	WITHOUT_CLASSIFICATION	0.9999901993935647	WITHOUT_CLASSIFICATION	9.800606435271064E-6	DEFECT
// need to load Task via system classloader or the new // task we want to define will never be a Task but always // be wrapped into a TaskAdapter.	WITHOUT_CLASSIFICATION	0.9999996693982	WITHOUT_CLASSIFICATION	3.3060180001955267E-7	DEFECT
// generate classpath, because kjc doesn't support sourcepath.	WITHOUT_CLASSIFICATION	0.9999999762202179	WITHOUT_CLASSIFICATION	2.3779782188815342E-8	DEFECT
// generate the clsspath	WITHOUT_CLASSIFICATION	0.9999999939155478	WITHOUT_CLASSIFICATION	6.084452202025999E-9	DEFECT
// kjc don't have bootclasspath option.	WITHOUT_CLASSIFICATION	0.9999989358001677	WITHOUT_CLASSIFICATION	1.0641998322716318E-6	DEFECT
// Process the factory class	WITHOUT_CLASSIFICATION	0.9999999102526219	WITHOUT_CLASSIFICATION	8.974737819244272E-8	DEFECT
// Process the factory path	WITHOUT_CLASSIFICATION	0.9999996260452345	WITHOUT_CLASSIFICATION	3.739547654418562E-7	DEFECT
// Process the processor options	WITHOUT_CLASSIFICATION	0.9999998577894779	WITHOUT_CLASSIFICATION	1.4221052208107354E-7	DEFECT
//set up the javac options	WITHOUT_CLASSIFICATION	0.9999999811828738	WITHOUT_CLASSIFICATION	1.8817126201180016E-8	DEFECT
//then add the Apt options	WITHOUT_CLASSIFICATION	0.9999997338258365	WITHOUT_CLASSIFICATION	2.661741634871751E-7	DEFECT
//finally invoke APT // Use reflection to be able to build on all JDKs:	WITHOUT_CLASSIFICATION	0.9999791407513959	WITHOUT_CLASSIFICATION	2.085924860400092E-5	DEFECT
//rethrow build exceptions	WITHOUT_CLASSIFICATION	0.9999686415461286	WITHOUT_CLASSIFICATION	3.135845387136223E-5	DEFECT
//cast everything else to a build exception	WITHOUT_CLASSIFICATION	0.9999689492611884	WITHOUT_CLASSIFICATION	3.105073881148614E-5	DEFECT
// Call the compile() method	WITHOUT_CLASSIFICATION	0.9999999906507392	WITHOUT_CLASSIFICATION	9.349260803393218E-9	DEFECT
// jvc doesn't support bootclasspath dir (-bootclasspath) // so we'll emulate it for compatibility and convenience.	WITHOUT_CLASSIFICATION	0.9999999892362582	WITHOUT_CLASSIFICATION	1.0763741858953111E-8	DEFECT
// jvc doesn't support an extension dir (-extdir) // so we'll emulate it for compatibility and convenience.	WITHOUT_CLASSIFICATION	0.9999999490352703	WITHOUT_CLASSIFICATION	5.096472958600365E-8	DEFECT
// jvc has no option for source-path so we // will add it to classpath.	WITHOUT_CLASSIFICATION	0.9999999326612665	WITHOUT_CLASSIFICATION	6.733873349865521E-8	DEFECT
// Add the Classpath before the "internal" one.	WITHOUT_CLASSIFICATION	0.9999993447569759	WITHOUT_CLASSIFICATION	6.552430240959455E-7	DEFECT
// Enable MS-Extensions and ...	WITHOUT_CLASSIFICATION	0.9999980956976288	WITHOUT_CLASSIFICATION	1.9043023712754913E-6	DEFECT
// ... do not display a Message about this.	WITHOUT_CLASSIFICATION	0.9999951368191811	WITHOUT_CLASSIFICATION	4.863180818906033E-6	DEFECT
// Do not display Logo	WITHOUT_CLASSIFICATION	0.9999967859235581	WITHOUT_CLASSIFICATION	3.214076441899993E-6	DEFECT
//add the files	WITHOUT_CLASSIFICATION	0.9999996778862112	WITHOUT_CLASSIFICATION	3.221137887044849E-7	DEFECT
//run	WITHOUT_CLASSIFICATION	0.9998005185720233	WITHOUT_CLASSIFICATION	1.9948142797669125E-4	DEFECT
//as new versions of java come out, add them to this test	WITHOUT_CLASSIFICATION	0.9999991099192868	WITHOUT_CLASSIFICATION	8.900807131759408E-7	DEFECT
//on java<=1.3 the modern falls back to classic if it is not found //but on java>=1.4 we just bail out early	WITHOUT_CLASSIFICATION	0.9998154191547332	WITHOUT_CLASSIFICATION	1.8458084526676614E-4	DEFECT
// does the modern compiler exist?	WITHOUT_CLASSIFICATION	0.9999981539784947	WITHOUT_CLASSIFICATION	1.8460215053602003E-6	DEFECT
// CheckStyle:ConstantNameCheck ON // CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999994850712367	WITHOUT_CLASSIFICATION	5.149287631912724E-7	DEFECT
// Combine the build classpath with the system classpath, in an // order determined by the value of build.sysclasspath	WITHOUT_CLASSIFICATION	0.9999990111213419	WITHOUT_CLASSIFICATION	9.888786580216693E-7	DEFECT
// For -sourcepath, use the "sourcepath" value if present. // Otherwise default to the "srcdir" value.	WITHOUT_CLASSIFICATION	0.9999999783358051	WITHOUT_CLASSIFICATION	2.1664194829503207E-8	DEFECT
// Just add "sourcepath" to classpath ( for JDK1.1 ) // as well as "bootclasspath" and "extdirs"	WITHOUT_CLASSIFICATION	0.9999999900772845	WITHOUT_CLASSIFICATION	9.922715516238924E-9	DEFECT
// If the buildfile specifies sourcepath="", then don't // output any sourcepath.	WITHOUT_CLASSIFICATION	0.9999955080534777	WITHOUT_CLASSIFICATION	4.491946522198728E-6	DEFECT
// If the buildfile specifies sourcepath="", then don't // output any sourcepath.	WITHOUT_CLASSIFICATION	0.9999955080534777	WITHOUT_CLASSIFICATION	4.491946522198728E-6	DEFECT
// support for -source 1.1 and -source 1.2 has been // added with JDK 1.4.2 - and isn't present in 1.5.0 either	WITHOUT_CLASSIFICATION	0.9999924797324194	WITHOUT_CLASSIFICATION	7.520267580564555E-6	DEFECT
// 1.5.0 doesn't support -source 1.1	WITHOUT_CLASSIFICATION	0.9999936608953888	WITHOUT_CLASSIFICATION	6.339104611223416E-6	DEFECT
//Use the VM launcher instead of shell launcher on VMS //for java	WITHOUT_CLASSIFICATION	0.9999909900500454	WITHOUT_CLASSIFICATION	9.009949954533938E-6	DEFECT
// gcj doesn't support bootclasspath dir (-bootclasspath) // so we'll emulate it for compatibility and convenience.	WITHOUT_CLASSIFICATION	0.9999999708304967	WITHOUT_CLASSIFICATION	2.9169503322964256E-8	DEFECT
// gcj doesn't support an extension dir (-extdir) // so we'll emulate it for compatibility and convenience.	WITHOUT_CLASSIFICATION	0.999999861886715	WITHOUT_CLASSIFICATION	1.3811328498018836E-7	DEFECT
// Gcj has no option for source-path so we // will add it to classpath.	WITHOUT_CLASSIFICATION	0.9999999176577283	WITHOUT_CLASSIFICATION	8.23422717113338E-8	DEFECT
// Use reflection to be able to build on all JDKs >= 1.1:	WITHOUT_CLASSIFICATION	0.9999976906639901	WITHOUT_CLASSIFICATION	2.309336009847455E-6	DEFECT
// no bootclasspath, therefore, get one from the java runtime	WITHOUT_CLASSIFICATION	0.999999885756395	WITHOUT_CLASSIFICATION	1.142436049875499E-7	DEFECT
// if the user has set JIKESPATH we should add the contents as well	WITHOUT_CLASSIFICATION	0.9999997771660345	WITHOUT_CLASSIFICATION	2.2283396555177812E-7	DEFECT
//reflection to avoid bootstrap/build problems	WITHOUT_CLASSIFICATION	0.9998800818021188	WITHOUT_CLASSIFICATION	1.1991819788119807E-4	DEFECT
//now verify that the class has an implementation	WITHOUT_CLASSIFICATION	0.999994814299586	WITHOUT_CLASSIFICATION	5.1857004140222645E-6	DEFECT
//windows probing logic relies on the word 'windows' in //the OS	WITHOUT_CLASSIFICATION	0.9976605135519958	WITHOUT_CLASSIFICATION	0.0023394864480041355	DEFECT
//there are only four 9x platforms that we look for	WITHOUT_CLASSIFICATION	0.9999937582439081	WITHOUT_CLASSIFICATION	6.241756091899688E-6	DEFECT
//wince isn't really 9x, but crippled enough to //be a muchness. Ant doesnt run on CE, anyway.	WITHOUT_CLASSIFICATION	0.999782701233191	WITHOUT_CLASSIFICATION	2.172987668089376E-4	DEFECT
// millis per second	WITHOUT_CLASSIFICATION	0.9999926487161582	WITHOUT_CLASSIFICATION	7.351283841842035E-6	DEFECT
//get the host of a url	WITHOUT_CLASSIFICATION	0.9999995101420402	WITHOUT_CLASSIFICATION	4.89857959708168E-7	DEFECT
//Java1.5: reachable = address.isReachable(timeout * 1000);	WITHOUT_CLASSIFICATION	0.9999994697454079	WITHOUT_CLASSIFICATION	5.302545920759982E-7	DEFECT
//utterly implausible, but catered for anyway	WITHOUT_CLASSIFICATION	0.99999839619538	WITHOUT_CLASSIFICATION	1.603804619915266E-6	DEFECT
// load the parser class	WITHOUT_CLASSIFICATION	0.9999990428143894	WITHOUT_CLASSIFICATION	9.57185610453888E-7	DEFECT
// may be altered in validate	WITHOUT_CLASSIFICATION	0.9999995369815435	WITHOUT_CLASSIFICATION	4.630184564969323E-7	DEFECT
// Error messages	WITHOUT_CLASSIFICATION	0.999997751750832	WITHOUT_CLASSIFICATION	2.248249168024388E-6	DEFECT
// plain impossible	WITHOUT_CLASSIFICATION	0.9999997173432109	WITHOUT_CLASSIFICATION	2.826567891075907E-7	DEFECT
// support for -source 1.1 and -source 1.2 has been // added with JDK 1.4.2, Jikes doesn't like it	WITHOUT_CLASSIFICATION	0.999999548992493	WITHOUT_CLASSIFICATION	4.510075069816952E-7	DEFECT
//assume this is an IOexception about un readability	WITHOUT_CLASSIFICATION	0.9999948225348978	WITHOUT_CLASSIFICATION	5.177465102139524E-6	DEFECT
//any kind of fault: not reachable.	WITHOUT_CLASSIFICATION	0.98410971157828	WITHOUT_CLASSIFICATION	0.015890288421719995	DEFECT
//java1.4 or earlier	WITHOUT_CLASSIFICATION	0.9999979350643666	WITHOUT_CLASSIFICATION	2.0649356333124267E-6	DEFECT
// don't know the type, should throw exception instead?	WITHOUT_CLASSIFICATION	0.9999957929640756	WITHOUT_CLASSIFICATION	4.2070359244783635E-6	DEFECT
//pick a value that is good for everything	WITHOUT_CLASSIFICATION	0.9999884468932225	WITHOUT_CLASSIFICATION	1.1553106777443232E-5	DEFECT
//initial state is false.	WITHOUT_CLASSIFICATION	0.9999983214174443	WITHOUT_CLASSIFICATION	1.6785825557697997E-6	DEFECT
//every condition is xored against the previous one	WITHOUT_CLASSIFICATION	0.9999986924227688	WITHOUT_CLASSIFICATION	1.3075772311435218E-6	DEFECT
//validate	WITHOUT_CLASSIFICATION	0.9999889449380496	WITHOUT_CLASSIFICATION	1.1055061950449158E-5	DEFECT
//#now match the files	WITHOUT_CLASSIFICATION	0.9999997545433134	WITHOUT_CLASSIFICATION	2.4545668663886674E-7	DEFECT
// Intentionally left blank	WITHOUT_CLASSIFICATION	0.9999771104818718	WITHOUT_CLASSIFICATION	2.2889518128269798E-5	DEFECT
//private static final int GET_ENTRY = 0;	WITHOUT_CLASSIFICATION	0.9999979041490527	WITHOUT_CLASSIFICATION	2.0958509474149354E-6	DEFECT
// make sure attributes are reset when // working on a 'new' file.	WITHOUT_CLASSIFICATION	0.9993426008210753	WITHOUT_CLASSIFICATION	6.573991789246825E-4	DEFECT
//We have ended changelog for that particular file //so we can save it	WITHOUT_CLASSIFICATION	0.9999996929972649	WITHOUT_CLASSIFICATION	3.070027351063596E-7	DEFECT
//was -1	WITHOUT_CLASSIFICATION	0.9999953031604264	WITHOUT_CLASSIFICATION	4.696839573525566E-6	DEFECT
//was -1	WITHOUT_CLASSIFICATION	0.9999953031604264	WITHOUT_CLASSIFICATION	4.696839573525566E-6	DEFECT
//There were no revisions in this changelog //entry so lets move onto next file	WITHOUT_CLASSIFICATION	0.9999991379521878	WITHOUT_CLASSIFICATION	8.62047812147411E-7	DEFECT
//Reset comment to empty here as we can accumulate multiple lines //in the processComment method	WITHOUT_CLASSIFICATION	0.9999999460255518	WITHOUT_CLASSIFICATION	5.3974448234101994E-8	DEFECT
// We want something of the form: -d ">=YYYY-MM-dd"	WITHOUT_CLASSIFICATION	0.9999948194782419	WITHOUT_CLASSIFICATION	5.180521758131237E-6	DEFECT
// Check if list of files to check has been specified	WITHOUT_CLASSIFICATION	0.9999997134246554	WITHOUT_CLASSIFICATION	2.865753444902637E-7	DEFECT
//for now skip entries which are missing a date	WITHOUT_CLASSIFICATION	0.9999450569905407	WITHOUT_CLASSIFICATION	5.4943009459191906E-5	DEFECT
//Skip dates that are too early	WITHOUT_CLASSIFICATION	0.9999914363331399	WITHOUT_CLASSIFICATION	8.5636668600465E-6	DEFECT
//Skip dates that are too late	WITHOUT_CLASSIFICATION	0.9999990761644805	WITHOUT_CLASSIFICATION	9.238355195568975E-7	DEFECT
// validate the input parameters	WITHOUT_CLASSIFICATION	0.9999993332587828	WITHOUT_CLASSIFICATION	6.66741217142279E-7	DEFECT
// build the rdiff command	WITHOUT_CLASSIFICATION	0.9999989169025423	WITHOUT_CLASSIFICATION	1.0830974576525722E-6	DEFECT
// if the two substrings are longer than the original, then name // contains address - so reset the name to null	WITHOUT_CLASSIFICATION	0.9999951389872951	WITHOUT_CLASSIFICATION	4.86101270492589E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999995133297559	WITHOUT_CLASSIFICATION	4.86670244023277E-7	DEFECT
// support multiple packages	WITHOUT_CLASSIFICATION	0.9999998422596249	WITHOUT_CLASSIFICATION	1.5774037504013599E-7	DEFECT
// force command not to be null	WITHOUT_CLASSIFICATION	0.9999669416284311	WITHOUT_CLASSIFICATION	3.305837156878184E-5	DEFECT
// run the cvs command	WITHOUT_CLASSIFICATION	0.9999957526419307	WITHOUT_CLASSIFICATION	4.247358069245646E-6	DEFECT
// parse the rdiff	WITHOUT_CLASSIFICATION	0.99999881980731	WITHOUT_CLASSIFICATION	1.1801926900369176E-6	DEFECT
// write the tag diff	WITHOUT_CLASSIFICATION	0.9999997825547168	WITHOUT_CLASSIFICATION	2.1744528318108246E-7	DEFECT
// parse the output of the command	WITHOUT_CLASSIFICATION	0.9999809448765616	WITHOUT_CLASSIFICATION	1.9055123438380143E-5	DEFECT
// it is a new file // set the revision but not the prevrevision	WITHOUT_CLASSIFICATION	0.9999792701685326	WITHOUT_CLASSIFICATION	2.0729831467353367E-5	DEFECT
// it is a modified file // set the revision and the prevrevision	WITHOUT_CLASSIFICATION	0.999999704221432	WITHOUT_CLASSIFICATION	2.9577856797183405E-7	DEFECT
// it is a removed file	WITHOUT_CLASSIFICATION	0.9999955453346343	WITHOUT_CLASSIFICATION	4.454665365800864E-6	DEFECT
/* special headers */	WITHOUT_CLASSIFICATION	0.9999997564432036	WITHOUT_CLASSIFICATION	2.4355679630626325E-7	DEFECT
// prepare for the auto select mechanism	WITHOUT_CLASSIFICATION	0.9999999671433978	WITHOUT_CLASSIFICATION	3.285660217901491E-8	DEFECT
// try MIME format	WITHOUT_CLASSIFICATION	0.9999894158114779	WITHOUT_CLASSIFICATION	1.0584188522010401E-5	DEFECT
// SMTP auth only allowed with MIME mail	WITHOUT_CLASSIFICATION	0.9988054054296238	WITHOUT_CLASSIFICATION	0.0011945945703761367	DEFECT
// SSL only allowed with MIME mail	WITHOUT_CLASSIFICATION	0.9995207845943237	WITHOUT_CLASSIFICATION	4.7921540567621664E-4	DEFECT
// try UU format	WITHOUT_CLASSIFICATION	0.9999985871888458	WITHOUT_CLASSIFICATION	1.4128111541663955E-6	DEFECT
// try plain format	WITHOUT_CLASSIFICATION	0.9999993239013478	WITHOUT_CLASSIFICATION	6.760986521386299E-7	DEFECT
// a valid mailer must be present by now	WITHOUT_CLASSIFICATION	0.9999976188072814	WITHOUT_CLASSIFICATION	2.381192718631404E-6	DEFECT
// a valid message is required	WITHOUT_CLASSIFICATION	0.9999990509459892	WITHOUT_CLASSIFICATION	9.490540109325055E-7	DEFECT
// an address to send from is required	WITHOUT_CLASSIFICATION	0.9991896354875923	WITHOUT_CLASSIFICATION	8.103645124075655E-4	DEFECT
// at least one address to send to/cc/bcc is required	WITHOUT_CLASSIFICATION	0.9999690963460077	WITHOUT_CLASSIFICATION	3.090365399238902E-5	DEFECT
// set the mimetype if not done already (and required)	WITHOUT_CLASSIFICATION	0.9999698538157934	WITHOUT_CLASSIFICATION	3.0146184206660148E-5	DEFECT
// set the character set if not done already (and required)	WITHOUT_CLASSIFICATION	0.9999175528130255	WITHOUT_CLASSIFICATION	8.244718697440516E-5	DEFECT
// identify which files should be attached	WITHOUT_CLASSIFICATION	0.9998679510614462	WITHOUT_CLASSIFICATION	1.320489385537766E-4	DEFECT
// let the user know what's going to happen	WITHOUT_CLASSIFICATION	0.9999293611767364	WITHOUT_CLASSIFICATION	7.063882326363106E-5	DEFECT
// pass the params to the mailer	WITHOUT_CLASSIFICATION	0.9999935029825815	WITHOUT_CLASSIFICATION	6.4970174185094675E-6	DEFECT
// send the email	WITHOUT_CLASSIFICATION	0.9999991032631557	WITHOUT_CLASSIFICATION	8.967368443003337E-7	DEFECT
// let the user know what happened	WITHOUT_CLASSIFICATION	0.9999975851055803	WITHOUT_CLASSIFICATION	2.4148944195902063E-6	DEFECT
// CheckStyle:MemberNameCheck ON	WITHOUT_CLASSIFICATION	0.9999991405906014	WITHOUT_CLASSIFICATION	8.594093985893521E-7	DEFECT
// Read message from a file	WITHOUT_CLASSIFICATION	0.9999994580398694	WITHOUT_CLASSIFICATION	5.419601305246829E-7	DEFECT
// Make a limited attempt to extract a sanitized name and email address // Algorithm based on the one found in Ant's MailMessage.java	WITHOUT_CLASSIFICATION	0.9999876833370777	WITHOUT_CLASSIFICATION	1.2316662922245525E-5	DEFECT
// shortcut for "<address>"	WITHOUT_CLASSIFICATION	0.9999989158867575	WITHOUT_CLASSIFICATION	1.0841132425718329E-6	DEFECT
// support "address (name)"	WITHOUT_CLASSIFICATION	0.9999885029653354	WITHOUT_CLASSIFICATION	1.1497034664515208E-5	DEFECT
// support "(name) address"	WITHOUT_CLASSIFICATION	0.9999944186063282	WITHOUT_CLASSIFICATION	5.581393671719397E-6	DEFECT
// To work properly with national charsets we have to use // implementation of interface javax.activation.DataSource	WITHOUT_CLASSIFICATION	0.985446088227121	WITHOUT_CLASSIFICATION	0.01455391177287906	DEFECT
// Must be like "text/plain; charset=windows-1251"	WITHOUT_CLASSIFICATION	0.9999985280653547	WITHOUT_CLASSIFICATION	1.471934645229264E-6	DEFECT
// Aside, the JDK is clearly unaware of the Scottish // 'session', which involves excessive quantities of // alcohol :-)	WITHOUT_CLASSIFICATION	0.999830166439345	WITHOUT_CLASSIFICATION	1.6983356065497856E-4	DEFECT
// SMTP provider	WITHOUT_CLASSIFICATION	0.9999929348460472	WITHOUT_CLASSIFICATION	7.065153952862914E-6	DEFECT
//create the message	WITHOUT_CLASSIFICATION	0.9999998239722273	WITHOUT_CLASSIFICATION	1.7602777273768135E-7	DEFECT
//set the sender	WITHOUT_CLASSIFICATION	0.9999969323068258	WITHOUT_CLASSIFICATION	3.0676931740116995E-6	DEFECT
// set the reply to addresses	WITHOUT_CLASSIFICATION	0.9999994628334965	WITHOUT_CLASSIFICATION	5.371665034965101E-7	DEFECT
// Choosing character set of the mail message // First: looking it from MimeType	WITHOUT_CLASSIFICATION	0.9999961591885809	WITHOUT_CLASSIFICATION	3.840811419037669E-6	DEFECT
// Assign/reassign message charset from MimeType	WITHOUT_CLASSIFICATION	0.9999943231939802	WITHOUT_CLASSIFICATION	5.676806019803762E-6	DEFECT
// Next: looking if charset having explicit definition	WITHOUT_CLASSIFICATION	0.9999335193259575	WITHOUT_CLASSIFICATION	6.648067404244792E-5	DEFECT
// Using default	WITHOUT_CLASSIFICATION	0.9999991092136754	WITHOUT_CLASSIFICATION	8.907863245376051E-7	DEFECT
// Using javax.activation.DataSource paradigm	WITHOUT_CLASSIFICATION	0.9999989499860406	WITHOUT_CLASSIFICATION	1.0500139594206478E-6	DEFECT
// Assuming mime type in form "text/XXXX; charset=XXXXXX"	WITHOUT_CLASSIFICATION	0.9999934471360404	WITHOUT_CLASSIFICATION	6.552863959507104E-6	DEFECT
// Skip 'charset='	WITHOUT_CLASSIFICATION	0.9999998057072349	WITHOUT_CLASSIFICATION	1.9429276509221097E-7	DEFECT
// Scanner to find our inputs // list of files to process	WITHOUT_CLASSIFICATION	0.9999987855938559	WITHOUT_CLASSIFICATION	1.2144061441773158E-6	DEFECT
// default srcDir to basedir	WITHOUT_CLASSIFICATION	0.9999997536691404	WITHOUT_CLASSIFICATION	2.463308595604076E-7	DEFECT
// Require destDir	WITHOUT_CLASSIFICATION	0.9999582258346005	WITHOUT_CLASSIFICATION	4.177416539949031E-5	DEFECT
// if src and dest dirs are the same, require the extension // to be set, so we don't stomp every file.  One could still // include a file with the same extension, but ....	WITHOUT_CLASSIFICATION	0.9999990701874961	WITHOUT_CLASSIFICATION	9.298125038230432E-7	DEFECT
// File to convert // where to put the results	WITHOUT_CLASSIFICATION	0.9999988299696382	WITHOUT_CLASSIFICATION	1.1700303617248912E-6	DEFECT
// Build the full file names	WITHOUT_CLASSIFICATION	0.9999999112990561	WITHOUT_CLASSIFICATION	8.870094400476026E-8	DEFECT
// Make sure we're not about to clobber something	WITHOUT_CLASSIFICATION	0.9999956279988641	WITHOUT_CLASSIFICATION	4.372001136006289E-6	DEFECT
// Make intermediate directories if needed // XXX JDK 1.1 doesn't have File.getParentFile,	WITHOUT_CLASSIFICATION	0.9999897118136494	WITHOUT_CLASSIFICATION	1.0288186350671477E-5	DEFECT
//this.fork = s;	WITHOUT_CLASSIFICATION	0.9999830557121869	WITHOUT_CLASSIFICATION	1.694428781311142E-5	DEFECT
//TODO: use ANTLR to parse the grammar file to do this.	WITHOUT_CLASSIFICATION	0.9972784630006905	WITHOUT_CLASSIFICATION	0.0027215369993096126	DEFECT
// if no output directory is specified, used the target's directory	WITHOUT_CLASSIFICATION	0.9999999810149235	WITHOUT_CLASSIFICATION	1.898507652682529E-8	DEFECT
// first off, make sure that we've got a from and to extension	WITHOUT_CLASSIFICATION	0.9999817161667091	WITHOUT_CLASSIFICATION	1.8283833291016004E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc // CheckStyle:MemberNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9999999027264571	WITHOUT_CLASSIFICATION	9.727354290302723E-8	DEFECT
// CheckStyle:MemberNameCheck ON // CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999998769224123	WITHOUT_CLASSIFICATION	1.230775877489462E-7	DEFECT
// Error strings	WITHOUT_CLASSIFICATION	0.999969767294072	WITHOUT_CLASSIFICATION	3.0232705927938515E-5	DEFECT
//validating	WITHOUT_CLASSIFICATION	0.9999453159793142	WITHOUT_CLASSIFICATION	5.468402068585243E-5	DEFECT
//set the schema source for the doc	WITHOUT_CLASSIFICATION	0.9999997555684299	WITHOUT_CLASSIFICATION	2.4443157010056923E-7	DEFECT
//set the schema source for the doc	WITHOUT_CLASSIFICATION	0.9999997555684299	WITHOUT_CLASSIFICATION	2.4443157010056923E-7	DEFECT
//enable XSD	WITHOUT_CLASSIFICATION	0.9999983538731666	WITHOUT_CLASSIFICATION	1.646126833418784E-6	DEFECT
//validate the parser type	WITHOUT_CLASSIFICATION	0.9999981857321419	WITHOUT_CLASSIFICATION	1.8142678580794591E-6	DEFECT
//couldnt use the xerces or jaxp calls	WITHOUT_CLASSIFICATION	0.9999990864209234	WITHOUT_CLASSIFICATION	9.135790766649632E-7	DEFECT
//enable schema checking	WITHOUT_CLASSIFICATION	0.9999997669609564	WITHOUT_CLASSIFICATION	2.3303904358931777E-7	DEFECT
//turn off DTDs if desired	WITHOUT_CLASSIFICATION	0.9999919435861796	WITHOUT_CLASSIFICATION	8.056413820368098E-6	DEFECT
//schema declarations go in next	WITHOUT_CLASSIFICATION	0.9999658993400559	WITHOUT_CLASSIFICATION	3.410065994410453E-5	DEFECT
// first off, make sure that we've got a srcdir and destdir	WITHOUT_CLASSIFICATION	0.9999989635504717	WITHOUT_CLASSIFICATION	1.0364495283321344E-6	DEFECT
//enable schema //setFeature(XmlConstants.FEATURE_VALIDATION, false);	WITHOUT_CLASSIFICATION	0.9999973153504677	WITHOUT_CLASSIFICATION	2.6846495322406257E-6	DEFECT
//this is almost implausible, but required handling	WITHOUT_CLASSIFICATION	0.999922246940683	WITHOUT_CLASSIFICATION	7.775305931701743E-5	DEFECT
//SchemaLocation	WITHOUT_CLASSIFICATION	0.999977042087713	WITHOUT_CLASSIFICATION	2.2957912287050523E-5	DEFECT
//private Path extdirs;	WITHOUT_CLASSIFICATION	0.9999994630152952	WITHOUT_CLASSIFICATION	5.369847048004309E-7	DEFECT
// first off, make sure that we've got a srcdir	WITHOUT_CLASSIFICATION	0.9999988765750426	WITHOUT_CLASSIFICATION	1.1234249573639278E-6	DEFECT
// Keep jdk 1.1 compliant so others can use this	WITHOUT_CLASSIFICATION	0.999999976557588	WITHOUT_CLASSIFICATION	2.344241203698034E-8	DEFECT
// second CR -> EOL + possibly empty line	WITHOUT_CLASSIFICATION	0.9999979604242846	WITHOUT_CLASSIFICATION	2.0395757154589216E-6	DEFECT
// first CR in this line	WITHOUT_CLASSIFICATION	0.9999998085608686	WITHOUT_CLASSIFICATION	1.9143913136222464E-7	DEFECT
// LF -> EOL	WITHOUT_CLASSIFICATION	0.9999951868999631	WITHOUT_CLASSIFICATION	4.8131000368974935E-6	DEFECT
// any other char	WITHOUT_CLASSIFICATION	0.9999993162007241	WITHOUT_CLASSIFICATION	6.837992758500169E-7	DEFECT
// Mac-style linebreak or EOF (or both)	WITHOUT_CLASSIFICATION	0.9999998044489289	WITHOUT_CLASSIFICATION	1.955510710666355E-7	DEFECT
// variables to hold arguments	WITHOUT_CLASSIFICATION	0.9999997390765359	WITHOUT_CLASSIFICATION	2.6092346405705535E-7	DEFECT
// ?? Should this be the default for ant?	WITHOUT_CLASSIFICATION	0.9999999957860274	WITHOUT_CLASSIFICATION	4.213972532679163E-9	DEFECT
// constants for the messages to suppress by flags and their corresponding properties	WITHOUT_CLASSIFICATION	0.9994320381002119	WITHOUT_CLASSIFICATION	5.679618997880831E-4	DEFECT
// other implementation variables	WITHOUT_CLASSIFICATION	0.9999993699079806	WITHOUT_CLASSIFICATION	6.300920193961721E-7	DEFECT
// classpath makes no sense	WITHOUT_CLASSIFICATION	0.9999999513088913	WITHOUT_CLASSIFICATION	4.869110864070596E-8	DEFECT
// destDir	WITHOUT_CLASSIFICATION	0.9999990484681054	WITHOUT_CLASSIFICATION	9.515318946943264E-7	DEFECT
// srcDir	WITHOUT_CLASSIFICATION	0.9999988103657588	WITHOUT_CLASSIFICATION	1.1896342412173262E-6	DEFECT
// copy the source and support files	WITHOUT_CLASSIFICATION	0.9999985975884202	WITHOUT_CLASSIFICATION	1.4024115797492607E-6	DEFECT
// compile the source files	WITHOUT_CLASSIFICATION	0.999999980146512	WITHOUT_CLASSIFICATION	1.9853487870950675E-8	DEFECT
// create an array of strings for input to the compiler: one array // comes from the compile options, the other from the compileList	WITHOUT_CLASSIFICATION	0.9999929541901988	WITHOUT_CLASSIFICATION	7.045809801197755E-6	DEFECT
// create a single array of arguments for the compiler	WITHOUT_CLASSIFICATION	0.9999980912232228	WITHOUT_CLASSIFICATION	1.9087767771417397E-6	DEFECT
// print nice output about what we are doing for the log	WITHOUT_CLASSIFICATION	0.9999997912961548	WITHOUT_CLASSIFICATION	2.087038452178562E-7	DEFECT
// need to set java.class.path property and restore it later // since the NetRexx compiler has no option for the classpath	WITHOUT_CLASSIFICATION	0.9999997657957936	WITHOUT_CLASSIFICATION	2.3420420634588691E-7	DEFECT
// path is mentioned in the message	WITHOUT_CLASSIFICATION	0.9999975350411776	WITHOUT_CLASSIFICATION	2.4649588222715215E-6	DEFECT
// verbose level logging for suppressed messages	WITHOUT_CLASSIFICATION	0.9999995874829616	WITHOUT_CLASSIFICATION	4.1251703844260525E-7	DEFECT
// error level logging for compiler errors	WITHOUT_CLASSIFICATION	0.9999982904974678	WITHOUT_CLASSIFICATION	1.7095025322763536E-6	DEFECT
// warning for all warning messages	WITHOUT_CLASSIFICATION	0.9999996617026612	WITHOUT_CLASSIFICATION	3.3829733876868095E-7	DEFECT
// info level for the rest.	WITHOUT_CLASSIFICATION	0.9999996562748062	WITHOUT_CLASSIFICATION	3.437251937265288E-7	DEFECT
// need to reset java.class.path property // since the NetRexx compiler has no option for the classpath	WITHOUT_CLASSIFICATION	0.9999998480222965	WITHOUT_CLASSIFICATION	1.519777036458219E-7	DEFECT
// add our classpath to the mix	WITHOUT_CLASSIFICATION	0.9999998750691613	WITHOUT_CLASSIFICATION	1.2493083880445418E-7	DEFECT
// add the system classpath // addExistingToClasspath(classpath,System.getProperty("java.class.path"));	WITHOUT_CLASSIFICATION	0.9999999295138607	WITHOUT_CLASSIFICATION	7.04861392365436E-8	DEFECT
// XMLReader used to validation process	WITHOUT_CLASSIFICATION	0.9999821164566309	WITHOUT_CLASSIFICATION	1.788354336901942E-5	DEFECT
// turn validation on	WITHOUT_CLASSIFICATION	0.9999937078312954	WITHOUT_CLASSIFICATION	6.292168704645986E-6	DEFECT
// set the feature from the attribute list	WITHOUT_CLASSIFICATION	0.999999901110386	WITHOUT_CLASSIFICATION	9.888961415187896E-8	DEFECT
// Sets properties	WITHOUT_CLASSIFICATION	0.9999863206311005	WITHOUT_CLASSIFICATION	1.3679368899555216E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999995133297559	WITHOUT_CLASSIFICATION	4.86670244023277E-7	DEFECT
// quick exit if the target is up to date	WITHOUT_CLASSIFICATION	0.9999942276148243	WITHOUT_CLASSIFICATION	5.7723851756771614E-6	DEFECT
// ant task properties // defaults // CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999999289938691	WITHOUT_CLASSIFICATION	7.100613087756857E-8	DEFECT
// to report sax parsing errors // CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999610612257471	WITHOUT_CLASSIFICATION	3.893877425295903E-5	DEFECT
// then check it implements XMLReader	WITHOUT_CLASSIFICATION	0.999998725413614	WITHOUT_CLASSIFICATION	1.2745863860450367E-6	DEFECT
// see if it is a SAX1 Parser	WITHOUT_CLASSIFICATION	0.9999927568196176	WITHOUT_CLASSIFICATION	7.243180382353224E-6	DEFECT
// Validates property	WITHOUT_CLASSIFICATION	0.9999950891512684	WITHOUT_CLASSIFICATION	4.910848731559857E-6	DEFECT
//for every file, we have a new instance of the validator	WITHOUT_CLASSIFICATION	0.9999961071771378	WITHOUT_CLASSIFICATION	3.8928228621617735E-6	DEFECT
// if this is not a valid file: just use the uri	WITHOUT_CLASSIFICATION	0.9999914751887984	WITHOUT_CLASSIFICATION	8.524811201553037E-6	DEFECT
// Property	WITHOUT_CLASSIFICATION	0.999989502085092	WITHOUT_CLASSIFICATION	1.04979149080867E-5	DEFECT
/*     * I'm not fond of this pattern: "sub-method expected to throw     * task-cancelling exceptions".  It feels too much like programming     * for side-effects to me...     */	WITHOUT_CLASSIFICATION	0.9846677444429073	WITHOUT_CLASSIFICATION	0.01533225555709269	DEFECT
// get files from old methods - includes and nested include	WITHOUT_CLASSIFICATION	0.9999997139019099	WITHOUT_CLASSIFICATION	2.8609809021687634E-7	DEFECT
// Create the stream pumpers to forward listcab's stdout and stderr to the log // note: listcab is an interactive program, and issues prompts for every new line. //       Therefore, make it show only with verbose logging turned on.	WITHOUT_CLASSIFICATION	0.8776177076849808	WITHOUT_CLASSIFICATION	0.12238229231501914	DEFECT
// Pump streams asynchronously	WITHOUT_CLASSIFICATION	0.9999995458543771	WITHOUT_CLASSIFICATION	4.54145622882872E-7	DEFECT
// A wild default for when the thread is interrupted	WITHOUT_CLASSIFICATION	0.999986477892559	WITHOUT_CLASSIFICATION	1.3522107440889216E-5	DEFECT
// Wait for the process to finish	WITHOUT_CLASSIFICATION	0.999998499866967	WITHOUT_CLASSIFICATION	1.500133032959165E-6	DEFECT
// Wait for the end of output and error streams	WITHOUT_CLASSIFICATION	0.9999901437836505	WITHOUT_CLASSIFICATION	9.856216349502854E-6	DEFECT
// Informative summary message in case of errors	WITHOUT_CLASSIFICATION	0.9999884215156859	WITHOUT_CLASSIFICATION	1.1578484314149972E-5	DEFECT
// die if cabarc fails	WITHOUT_CLASSIFICATION	0.9999997336306349	WITHOUT_CLASSIFICATION	2.6636936513143786E-7	DEFECT
// Use this to prepend a message to the properties file	WITHOUT_CLASSIFICATION	0.9999967180112438	WITHOUT_CLASSIFICATION	3.281988756185571E-6	DEFECT
/* ========================================================================    *    * Constructors    */	WITHOUT_CLASSIFICATION	0.9999995244141909	WITHOUT_CLASSIFICATION	4.755858090693548E-7	DEFECT
/* ========================================================================    *    * Methods    */	WITHOUT_CLASSIFICATION	0.999998015794213	WITHOUT_CLASSIFICATION	1.984205787059213E-6	DEFECT
// Create the PropertyFile	WITHOUT_CLASSIFICATION	0.9999998665506161	WITHOUT_CLASSIFICATION	1.3344938389732437E-7	DEFECT
// type may be null because it wasn't set	WITHOUT_CLASSIFICATION	0.999999857125636	WITHOUT_CLASSIFICATION	1.4287436407725164E-7	DEFECT
// Default to string type // which means do nothing	WITHOUT_CLASSIFICATION	0.9999997491874774	WITHOUT_CLASSIFICATION	2.508125225574634E-7	DEFECT
// Insert as a string by default	WITHOUT_CLASSIFICATION	0.9999987390355555	WITHOUT_CLASSIFICATION	1.2609644445108514E-6	DEFECT
// swallow	WITHOUT_CLASSIFICATION	0.9999965775394587	WITHOUT_CLASSIFICATION	3.4224605412498893E-6	DEFECT
// configure the transformer...	WITHOUT_CLASSIFICATION	0.9999993159940855	WITHOUT_CLASSIFICATION	6.840059145104907E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999981731396919	WITHOUT_CLASSIFICATION	1.82686030805923E-6	DEFECT
// If only value is specified, the property is set to it // regardless of its previous value.	WITHOUT_CLASSIFICATION	0.9999913271474411	WITHOUT_CLASSIFICATION	8.672852558909088E-6	DEFECT
// If only default is specified and the property did not // exist in the property file, the property is set to default.	WITHOUT_CLASSIFICATION	0.9997641204668135	WITHOUT_CLASSIFICATION	2.3587953318651754E-4	DEFECT
// If value and default are both specified and the property // previously existed in the property file, the property // is set to value.	WITHOUT_CLASSIFICATION	0.9999998756081269	WITHOUT_CLASSIFICATION	1.2439187318889206E-7	DEFECT
// If value and default are both specified and the property // did not exist in the property file, the property is set // to default.	WITHOUT_CLASSIFICATION	0.9999907164653682	WITHOUT_CLASSIFICATION	9.2835346318172E-6	DEFECT
// Property type operations	WITHOUT_CLASSIFICATION	0.9999999771275145	WITHOUT_CLASSIFICATION	2.2872485432900477E-8	DEFECT
// Property types	WITHOUT_CLASSIFICATION	0.9999988138981444	WITHOUT_CLASSIFICATION	1.1861018555791726E-6	DEFECT
// resetting the stylesheet - reset transformer	WITHOUT_CLASSIFICATION	0.9999967626025238	WITHOUT_CLASSIFICATION	3.237397476170276E-6	DEFECT
// do we need to reset templates as well	WITHOUT_CLASSIFICATION	0.9999999573490576	WITHOUT_CLASSIFICATION	4.265094249324082E-8	DEFECT
// set parameters on each transformation, maybe something has changed //(e.g. value of file name parameter)	WITHOUT_CLASSIFICATION	0.999999968046172	WITHOUT_CLASSIFICATION	3.1953828034288404E-8	DEFECT
// end of try-catch	WITHOUT_CLASSIFICATION	0.9999990906717406	WITHOUT_CLASSIFICATION	9.093282594293172E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999995287844801	WITHOUT_CLASSIFICATION	4.7121551989690683E-7	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9999655314264141	WITHOUT_CLASSIFICATION	3.4468573585883755E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999995133297559	WITHOUT_CLASSIFICATION	4.86670244023277E-7	DEFECT
// WARN: Don't use the StreamSource(File) ctor. It won't work with // xalan prior to 2.2 because of systemid bugs.	WITHOUT_CLASSIFICATION	0.9748591090292217	WITHOUT_CLASSIFICATION	0.02514089097077831	DEFECT
// Use a stream so that you can close it yourself quickly // and avoid keeping the handle until the object is garbaged. // (always keep control), otherwise you won't be able to delete // the file quickly on windows.	WITHOUT_CLASSIFICATION	0.9999570283985221	WITHOUT_CLASSIFICATION	4.2971601477978676E-5	DEFECT
// not initialized yet, so create the factory	WITHOUT_CLASSIFICATION	0.9999966120157586	WITHOUT_CLASSIFICATION	3.3879842413002794E-6	DEFECT
// specific attributes for the transformer	WITHOUT_CLASSIFICATION	0.9999999821744846	WITHOUT_CLASSIFICATION	1.7825515362675332E-8	DEFECT
// kept for backwards compatibility	WITHOUT_CLASSIFICATION	0.9999949737098344	WITHOUT_CLASSIFICATION	5.0262901655283955E-6	DEFECT
// configure factory attributes	WITHOUT_CLASSIFICATION	0.9999939212534382	WITHOUT_CLASSIFICATION	6.078746561877104E-6	DEFECT
// use XMLCatalog as the entity resolver and URI resolver	WITHOUT_CLASSIFICATION	0.9999892911449495	WITHOUT_CLASSIFICATION	1.0708855050407922E-5	DEFECT
// configure output properties	WITHOUT_CLASSIFICATION	0.9999762030527821	WITHOUT_CLASSIFICATION	2.3796947217875124E-5	DEFECT
//copy the properties file	WITHOUT_CLASSIFICATION	0.9999589031682049	WITHOUT_CLASSIFICATION	4.109683179512306E-5	DEFECT
/* load properties from file if specified, otherwise        use Ant's properties */	WITHOUT_CLASSIFICATION	0.9999994272005515	WITHOUT_CLASSIFICATION	5.727994484407777E-7	DEFECT
// add ant properties	WITHOUT_CLASSIFICATION	0.9999988909108013	WITHOUT_CLASSIFICATION	1.1090891987384322E-6	DEFECT
//sort the list. Makes SCM and manual diffs easier.	WITHOUT_CLASSIFICATION	0.9999997176414164	WITHOUT_CLASSIFICATION	2.823585836494676E-7	DEFECT
// create XML document	WITHOUT_CLASSIFICATION	0.9999983703199653	WITHOUT_CLASSIFICATION	1.629680034725699E-6	DEFECT
// output properties	WITHOUT_CLASSIFICATION	0.9999785742494569	WITHOUT_CLASSIFICATION	2.142575054313934E-5	DEFECT
// build the command line from what we got the format // as specified in the CCM.EXE help	WITHOUT_CLASSIFICATION	0.9999994106153427	WITHOUT_CLASSIFICATION	5.893846573417146E-7	DEFECT
//create task ok, set this task as the default one	WITHOUT_CLASSIFICATION	0.9999999843145956	WITHOUT_CLASSIFICATION	1.5685404397549343E-8	DEFECT
// implementation of org.apache.tools.ant.taskdefs.ExecuteStreamHandler interface	WITHOUT_CLASSIFICATION	0.9999866563241808	WITHOUT_CLASSIFICATION	1.3343675819186469E-5	DEFECT
// build the command line from what we got the format is // ccm co /t .. files // as specified in the CCM.EXE help	WITHOUT_CLASSIFICATION	0.9999970099015028	WITHOUT_CLASSIFICATION	2.990098497235303E-6	DEFECT
// Default the viewpath to basedir if it is not specified	WITHOUT_CLASSIFICATION	0.9999924172782495	WITHOUT_CLASSIFICATION	7.582721750454923E-6	DEFECT
/*         * If configured to not care about whether the element is         * already checked out to the current view.         * Then check to see if it is checked out.         */	WITHOUT_CLASSIFICATION	0.9999873923987495	WITHOUT_CLASSIFICATION	1.2607601250444228E-5	DEFECT
// viewpath	WITHOUT_CLASSIFICATION	0.999999205231928	WITHOUT_CLASSIFICATION	7.94768071934397E-7	DEFECT
// ClearCase items	WITHOUT_CLASSIFICATION	0.9999999293052642	WITHOUT_CLASSIFICATION	7.069473586678834E-8	DEFECT
// -reserved	WITHOUT_CLASSIFICATION	0.999995532921051	WITHOUT_CLASSIFICATION	4.467078949013247E-6	DEFECT
// -unreserved	WITHOUT_CLASSIFICATION	0.9999907136027026	WITHOUT_CLASSIFICATION	9.286397297398194E-6	DEFECT
// -out	WITHOUT_CLASSIFICATION	0.9999889546677614	WITHOUT_CLASSIFICATION	1.1045332238673337E-5	DEFECT
// -ndata	WITHOUT_CLASSIFICATION	0.9999888877341188	WITHOUT_CLASSIFICATION	1.1112265881215842E-5	DEFECT
// -version	WITHOUT_CLASSIFICATION	0.9999923480057008	WITHOUT_CLASSIFICATION	7.65199429912359E-6	DEFECT
// -nwarn	WITHOUT_CLASSIFICATION	0.999996877715913	WITHOUT_CLASSIFICATION	3.1222840870234223E-6	DEFECT
// viewpath	WITHOUT_CLASSIFICATION	0.999999205231928	WITHOUT_CLASSIFICATION	7.94768071934397E-7	DEFECT
// build the command line from what we got the format is // cleartool lsco [options...] [viewpath ...] // as specified in the CLEARTOOL.EXE help	WITHOUT_CLASSIFICATION	0.9999980708469766	WITHOUT_CLASSIFICATION	1.929153023432367E-6	DEFECT
// -version	WITHOUT_CLASSIFICATION	0.9999923480057008	WITHOUT_CLASSIFICATION	7.65199429912359E-6	DEFECT
// -nwarn	WITHOUT_CLASSIFICATION	0.999996877715913	WITHOUT_CLASSIFICATION	3.1222840870234223E-6	DEFECT
// type value	WITHOUT_CLASSIFICATION	0.9999996976729789	WITHOUT_CLASSIFICATION	3.0232702098121363E-7	DEFECT
// -c	WITHOUT_CLASSIFICATION	0.9999975926837397	WITHOUT_CLASSIFICATION	2.407316260219257E-6	DEFECT
// -c	WITHOUT_CLASSIFICATION	0.9999975926837397	WITHOUT_CLASSIFICATION	2.407316260219257E-6	DEFECT
// -cfile	WITHOUT_CLASSIFICATION	0.9999993281953511	WITHOUT_CLASSIFICATION	6.718046488585925E-7	DEFECT
// -cfile	WITHOUT_CLASSIFICATION	0.9999993281953511	WITHOUT_CLASSIFICATION	6.718046488585925E-7	DEFECT
// -cfile	WITHOUT_CLASSIFICATION	0.9999993281953511	WITHOUT_CLASSIFICATION	6.718046488585925E-7	DEFECT
// build the command line from what we got. the format is // cleartool checkin [options...] [viewpath ...] // as specified in the CLEARTOOL.EXE help	WITHOUT_CLASSIFICATION	0.9999980070268801	WITHOUT_CLASSIFICATION	1.9929731199017545E-6	DEFECT
// -ptime	WITHOUT_CLASSIFICATION	0.9999990013438457	WITHOUT_CLASSIFICATION	9.986561543132498E-7	DEFECT
// Throws EjbcException if unsuccessful	WITHOUT_CLASSIFICATION	0.9998088773700601	WITHOUT_CLASSIFICATION	1.9112262993996565E-4	DEFECT
// -keep	WITHOUT_CLASSIFICATION	0.9999984631439668	WITHOUT_CLASSIFICATION	1.536856033136264E-6	DEFECT
// -identical	WITHOUT_CLASSIFICATION	0.9999982950353735	WITHOUT_CLASSIFICATION	1.7049646265301679E-6	DEFECT
// Check for required attributes	WITHOUT_CLASSIFICATION	0.9999972625935928	WITHOUT_CLASSIFICATION	2.7374064072156536E-6	DEFECT
// build the command line from what we got. the format is // cleartool mkattr [options...] [viewpath ...] // as specified in the CLEARTOOL help	WITHOUT_CLASSIFICATION	0.9999985664380139	WITHOUT_CLASSIFICATION	1.4335619860780675E-6	DEFECT
// -replace	WITHOUT_CLASSIFICATION	0.9999998994315901	WITHOUT_CLASSIFICATION	1.0056840997589209E-7	DEFECT
// -recurse	WITHOUT_CLASSIFICATION	0.9999990598169882	WITHOUT_CLASSIFICATION	9.401830117963821E-7	DEFECT
// type	WITHOUT_CLASSIFICATION	0.9999989352147817	WITHOUT_CLASSIFICATION	1.0647852182549892E-6	DEFECT
// viewpath	WITHOUT_CLASSIFICATION	0.999999205231928	WITHOUT_CLASSIFICATION	7.94768071934397E-7	DEFECT
// viewpath	WITHOUT_CLASSIFICATION	0.999999205231928	WITHOUT_CLASSIFICATION	7.94768071934397E-7	DEFECT
// viewpath	WITHOUT_CLASSIFICATION	0.999999205231928	WITHOUT_CLASSIFICATION	7.94768071934397E-7	DEFECT
// ClearCase items	WITHOUT_CLASSIFICATION	0.9999999293052642	WITHOUT_CLASSIFICATION	7.069473586678834E-8	DEFECT
// ClearCase items	WITHOUT_CLASSIFICATION	0.9999999293052642	WITHOUT_CLASSIFICATION	7.069473586678834E-8	DEFECT
// -nwarn	WITHOUT_CLASSIFICATION	0.999996877715913	WITHOUT_CLASSIFICATION	3.1222840870234223E-6	DEFECT
// -c	WITHOUT_CLASSIFICATION	0.9999975926837397	WITHOUT_CLASSIFICATION	2.407316260219257E-6	DEFECT
// -c	WITHOUT_CLASSIFICATION	0.9999975926837397	WITHOUT_CLASSIFICATION	2.407316260219257E-6	DEFECT
// -cfile	WITHOUT_CLASSIFICATION	0.9999993281953511	WITHOUT_CLASSIFICATION	6.718046488585925E-7	DEFECT
// -ptime	WITHOUT_CLASSIFICATION	0.9999990013438457	WITHOUT_CLASSIFICATION	9.986561543132498E-7	DEFECT
// -keep	WITHOUT_CLASSIFICATION	0.9999984631439668	WITHOUT_CLASSIFICATION	1.536856033136264E-6	DEFECT
// build the command line from what we got the format is // cleartool lock [options...] // as specified in the CLEARTOOL.EXE help	WITHOUT_CLASSIFICATION	0.9999941569546441	WITHOUT_CLASSIFICATION	5.843045355873502E-6	DEFECT
// Windows quoting of the value	WITHOUT_CLASSIFICATION	0.9999376569546187	WITHOUT_CLASSIFICATION	6.234304538125116E-5	DEFECT
// build the command line from what we got. the format is // cleartool mkelem [options...] [viewpath ...] // as specified in the CLEARTOOL.EXE help	WITHOUT_CLASSIFICATION	0.9999963963826077	WITHOUT_CLASSIFICATION	3.6036173922222277E-6	DEFECT
/*         * Should choose either -ci or -nco.         */	WITHOUT_CLASSIFICATION	0.99999709674184	WITHOUT_CLASSIFICATION	2.9032581599945778E-6	DEFECT
// -nco	WITHOUT_CLASSIFICATION	0.9999940704234394	WITHOUT_CLASSIFICATION	5.929576560610351E-6	DEFECT
// -nco	WITHOUT_CLASSIFICATION	0.9999940704234394	WITHOUT_CLASSIFICATION	5.929576560610351E-6	DEFECT
// Check the command line options	WITHOUT_CLASSIFICATION	0.9999999561078029	WITHOUT_CLASSIFICATION	4.389219718377374E-8	DEFECT
// -ci	WITHOUT_CLASSIFICATION	0.9999962898965296	WITHOUT_CLASSIFICATION	3.710103470598554E-6	DEFECT
// object selector	WITHOUT_CLASSIFICATION	0.9999995899784089	WITHOUT_CLASSIFICATION	4.1002159114767513E-7	DEFECT
// build the command line from what we got the format is // cleartool uncheckout [options...] [viewpath ...] // as specified in the CLEARTOOL.EXE help	WITHOUT_CLASSIFICATION	0.9999986770937088	WITHOUT_CLASSIFICATION	1.3229062912164842E-6	DEFECT
// -master	WITHOUT_CLASSIFICATION	0.9999998843037246	WITHOUT_CLASSIFICATION	1.1569627536267809E-7	DEFECT
// -rm	WITHOUT_CLASSIFICATION	0.9999978294576396	WITHOUT_CLASSIFICATION	2.1705423604342684E-6	DEFECT
// -eltype	WITHOUT_CLASSIFICATION	0.9999990993077285	WITHOUT_CLASSIFICATION	9.00692271478807E-7	DEFECT
// viewpath	WITHOUT_CLASSIFICATION	0.999999205231928	WITHOUT_CLASSIFICATION	7.94768071934397E-7	DEFECT
// -version	WITHOUT_CLASSIFICATION	0.9999923480057008	WITHOUT_CLASSIFICATION	7.65199429912359E-6	DEFECT
// -c	WITHOUT_CLASSIFICATION	0.9999975926837397	WITHOUT_CLASSIFICATION	2.407316260219257E-6	DEFECT
// -c	WITHOUT_CLASSIFICATION	0.9999975926837397	WITHOUT_CLASSIFICATION	2.407316260219257E-6	DEFECT
// -cfile	WITHOUT_CLASSIFICATION	0.9999993281953511	WITHOUT_CLASSIFICATION	6.718046488585925E-7	DEFECT
// -cfile	WITHOUT_CLASSIFICATION	0.9999993281953511	WITHOUT_CLASSIFICATION	6.718046488585925E-7	DEFECT
// -rmall -force	WITHOUT_CLASSIFICATION	0.9999997026557829	WITHOUT_CLASSIFICATION	2.973442171207309E-7	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999988380337144	WITHOUT_CLASSIFICATION	1.1619662855434818E-6	DEFECT
// build the command line from what we got. the format is // cleartool checkin [options...] [viewpath ...] // as specified in the CLEARTOOL.EXE help	WITHOUT_CLASSIFICATION	0.9999980070268801	WITHOUT_CLASSIFICATION	1.9929731199017545E-6	DEFECT
// -identical	WITHOUT_CLASSIFICATION	0.9999982950353735	WITHOUT_CLASSIFICATION	1.7049646265301679E-6	DEFECT
// Check for required attributes	WITHOUT_CLASSIFICATION	0.9999972625935928	WITHOUT_CLASSIFICATION	2.7374064072156536E-6	DEFECT
// Check for required attributes	WITHOUT_CLASSIFICATION	0.9999972625935928	WITHOUT_CLASSIFICATION	2.7374064072156536E-6	DEFECT
// -replace	WITHOUT_CLASSIFICATION	0.9999998994315901	WITHOUT_CLASSIFICATION	1.0056840997589209E-7	DEFECT
// -recurse	WITHOUT_CLASSIFICATION	0.9999990598169882	WITHOUT_CLASSIFICATION	9.401830117963821E-7	DEFECT
// type	WITHOUT_CLASSIFICATION	0.9999989352147817	WITHOUT_CLASSIFICATION	1.0647852182549892E-6	DEFECT
// Returns list of EJBs for processing	WITHOUT_CLASSIFICATION	0.999993302542575	WITHOUT_CLASSIFICATION	6.697457424961129E-6	DEFECT
// build the command line from what we got. the format is // cleartool rmtype [options...] type-selector... // as specified in the CLEARTOOL help	WITHOUT_CLASSIFICATION	0.9999986707515846	WITHOUT_CLASSIFICATION	1.3292484153654097E-6	DEFECT
// type-kind:type-name	WITHOUT_CLASSIFICATION	0.999997235257456	WITHOUT_CLASSIFICATION	2.7647425439760973E-6	DEFECT
// -ignore	WITHOUT_CLASSIFICATION	0.9999981431818386	WITHOUT_CLASSIFICATION	1.8568181615273418E-6	DEFECT
// Return the type-selector	WITHOUT_CLASSIFICATION	0.9999998868606103	WITHOUT_CLASSIFICATION	1.1313938978179256E-7	DEFECT
// -full	WITHOUT_CLASSIFICATION	0.9999907477004037	WITHOUT_CLASSIFICATION	9.252299596265225E-6	DEFECT
// -incremental	WITHOUT_CLASSIFICATION	0.9999984473041513	WITHOUT_CLASSIFICATION	1.5526958486345473E-6	DEFECT
// -nlabel	WITHOUT_CLASSIFICATION	0.9999990385873266	WITHOUT_CLASSIFICATION	9.614126733567819E-7	DEFECT
// baseline_root_name	WITHOUT_CLASSIFICATION	0.9999997286128194	WITHOUT_CLASSIFICATION	2.713871805879535E-7	DEFECT
// viewpath	WITHOUT_CLASSIFICATION	0.999999205231928	WITHOUT_CLASSIFICATION	7.94768071934397E-7	DEFECT
// -c	WITHOUT_CLASSIFICATION	0.9999975926837397	WITHOUT_CLASSIFICATION	2.407316260219257E-6	DEFECT
// -cfile	WITHOUT_CLASSIFICATION	0.9999993281953511	WITHOUT_CLASSIFICATION	6.718046488585925E-7	DEFECT
// -ptime	WITHOUT_CLASSIFICATION	0.9999990013438457	WITHOUT_CLASSIFICATION	9.986561543132498E-7	DEFECT
// Check for required attributes	WITHOUT_CLASSIFICATION	0.9999972625935928	WITHOUT_CLASSIFICATION	2.7374064072156536E-6	DEFECT
// -replace	WITHOUT_CLASSIFICATION	0.9999998994315901	WITHOUT_CLASSIFICATION	1.0056840997589209E-7	DEFECT
// -replace	WITHOUT_CLASSIFICATION	0.9999998994315901	WITHOUT_CLASSIFICATION	1.0056840997589209E-7	DEFECT
// build the command line from what we got the format is // cleartool lock [options...] // as specified in the CLEARTOOL.EXE help	WITHOUT_CLASSIFICATION	0.9999941569546441	WITHOUT_CLASSIFICATION	5.843045355873502E-6	DEFECT
// Check the command line options	WITHOUT_CLASSIFICATION	0.9999999561078029	WITHOUT_CLASSIFICATION	4.389219718377374E-8	DEFECT
// Check the command line options	WITHOUT_CLASSIFICATION	0.9999999561078029	WITHOUT_CLASSIFICATION	4.389219718377374E-8	DEFECT
// object selector	WITHOUT_CLASSIFICATION	0.9999995899784089	WITHOUT_CLASSIFICATION	4.1002159114767513E-7	DEFECT
// -ordinary	WITHOUT_CLASSIFICATION	0.9999924025742242	WITHOUT_CLASSIFICATION	7.597425775899498E-6	DEFECT
// build the command line from what we got the format is // cleartool update [options...] [viewpath ...] // as specified in the CLEARTOOL.EXE help	WITHOUT_CLASSIFICATION	0.9999982302503031	WITHOUT_CLASSIFICATION	1.7697496968632475E-6	DEFECT
// For debugging	WITHOUT_CLASSIFICATION	0.9999793401038142	WITHOUT_CLASSIFICATION	2.0659896185736623E-5	DEFECT
// -log logname	WITHOUT_CLASSIFICATION	0.9999974889725565	WITHOUT_CLASSIFICATION	2.5110274436294555E-6	DEFECT
// -graphical	WITHOUT_CLASSIFICATION	0.9999990786835556	WITHOUT_CLASSIFICATION	9.213164442613525E-7	DEFECT
// -overwrite	WITHOUT_CLASSIFICATION	0.999997436759334	WITHOUT_CLASSIFICATION	2.563240666114643E-6	DEFECT
// -global	WITHOUT_CLASSIFICATION	0.9999973062626647	WITHOUT_CLASSIFICATION	2.6937373353548367E-6	DEFECT
// -rename	WITHOUT_CLASSIFICATION	0.9999992544533541	WITHOUT_CLASSIFICATION	7.455466458783419E-7	DEFECT
// -obsolete	WITHOUT_CLASSIFICATION	0.9999984699341732	WITHOUT_CLASSIFICATION	1.53006582679411E-6	DEFECT
// -noverwrite	WITHOUT_CLASSIFICATION	0.9999974761507453	WITHOUT_CLASSIFICATION	2.52384925472905E-6	DEFECT
// build the command line from what we got. the format is // cleartool mklbtype [options...] type-selector... // as specified in the CLEARTOOL help	WITHOUT_CLASSIFICATION	0.9999987407088106	WITHOUT_CLASSIFICATION	1.2592911894003106E-6	DEFECT
// -ctime	WITHOUT_CLASSIFICATION	0.9999990732848852	WITHOUT_CLASSIFICATION	9.267151147682827E-7	DEFECT
// -pbranch	WITHOUT_CLASSIFICATION	0.9999994277064262	WITHOUT_CLASSIFICATION	5.722935737976888E-7	DEFECT
// File[] filesInDir = directory.listFiles();	WITHOUT_CLASSIFICATION	0.9999978645295632	WITHOUT_CLASSIFICATION	2.135470436885707E-6	DEFECT
// -shared	WITHOUT_CLASSIFICATION	0.9999998041969613	WITHOUT_CLASSIFICATION	1.9580303861245583E-7	DEFECT
// type-name@vob	WITHOUT_CLASSIFICATION	0.999999027119406	WITHOUT_CLASSIFICATION	9.728805939890415E-7	DEFECT
// we have a file. create a stream for it	WITHOUT_CLASSIFICATION	0.9999995224453274	WITHOUT_CLASSIFICATION	4.775546725423138E-7	DEFECT
// default directory to the project's base directory	WITHOUT_CLASSIFICATION	0.9999992243023053	WITHOUT_CLASSIFICATION	7.75697694627038E-7	DEFECT
// assume the worst	WITHOUT_CLASSIFICATION	0.9999996022880127	WITHOUT_CLASSIFICATION	3.9771198739468997E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999995133297559	WITHOUT_CLASSIFICATION	4.86670244023277E-7	DEFECT
// create a data input stream from the jar // input stream	WITHOUT_CLASSIFICATION	0.9999993615472519	WITHOUT_CLASSIFICATION	6.384527480916998E-7	DEFECT
// this iterator is exhausted. Can we pop one off the stack	WITHOUT_CLASSIFICATION	0.9999910938635914	WITHOUT_CLASSIFICATION	8.90613640864578E-6	DEFECT
// we get the root classes and build up a set of // classes upon which they depend	WITHOUT_CLASSIFICATION	0.999989643799103	WITHOUT_CLASSIFICATION	1.0356200896889375E-5	DEFECT
// now recover all the dependencies collected and add to the list.	WITHOUT_CLASSIFICATION	0.9999999067698567	WITHOUT_CLASSIFICATION	9.32301432050016E-8	DEFECT
// pick up the last round of dependencies that were determined	WITHOUT_CLASSIFICATION	0.9999987652384749	WITHOUT_CLASSIFICATION	1.234761525149127E-6	DEFECT
// right we have a good looking class file.	WITHOUT_CLASSIFICATION	0.9999788044209095	WITHOUT_CLASSIFICATION	2.1195579090504122E-5	DEFECT
/* int minorVersion = */	WITHOUT_CLASSIFICATION	0.9999831747250436	WITHOUT_CLASSIFICATION	1.682527495631926E-5	DEFECT
/* int majorVersion = */	WITHOUT_CLASSIFICATION	0.9999839648049232	WITHOUT_CLASSIFICATION	1.6035195076828228E-5	DEFECT
/* int accessFlags = */	WITHOUT_CLASSIFICATION	0.9999982978612019	WITHOUT_CLASSIFICATION	1.7021387982051521E-6	DEFECT
/* int superClassIndex = */	WITHOUT_CLASSIFICATION	0.9999946424933591	WITHOUT_CLASSIFICATION	5.357506640834309E-6	DEFECT
// read the dependency cache from the disk	WITHOUT_CLASSIFICATION	0.9999995552235095	WITHOUT_CLASSIFICATION	4.4477649052218333E-7	DEFECT
// try to read the dependency info from the map if it is // not out of date	WITHOUT_CLASSIFICATION	0.9999600848327795	WITHOUT_CLASSIFICATION	3.991516722048956E-5	DEFECT
// not cached - so need to read directly from the class file	WITHOUT_CLASSIFICATION	0.9999958847783523	WITHOUT_CLASSIFICATION	4.115221647683448E-6	DEFECT
// This class depends on each class in the dependency list. For each // one of those, add this class into their affected classes list	WITHOUT_CLASSIFICATION	0.9999992293146978	WITHOUT_CLASSIFICATION	7.706853022051828E-7	DEFECT
// now determine which jars each class depends upon	WITHOUT_CLASSIFICATION	0.9999959722366342	WITHOUT_CLASSIFICATION	4.027763365831241E-6	DEFECT
// we need to add this jar to the list for this class.	WITHOUT_CLASSIFICATION	0.9999999665543144	WITHOUT_CLASSIFICATION	3.3445685508983245E-8	DEFECT
// write the dependency cache to the disk	WITHOUT_CLASSIFICATION	0.9999988442444881	WITHOUT_CLASSIFICATION	1.1557555119236182E-6	DEFECT
// need to delete the main class	WITHOUT_CLASSIFICATION	0.9999999476634879	WITHOUT_CLASSIFICATION	5.2336512073988464E-8	DEFECT
//downgrade warnings on RMI stublike classes, as they are generated //by rmic, so there is no need to tell the user that their source is //missing.	WITHOUT_CLASSIFICATION	0.9999999489729673	WITHOUT_CLASSIFICATION	5.102703281387105E-8	DEFECT
// now check classpath file dependencies	WITHOUT_CLASSIFICATION	0.999999956551645	WITHOUT_CLASSIFICATION	4.344835511412193E-8	DEFECT
// if we have no info about the class - it may have been deleted already and we // are using cached info.	WITHOUT_CLASSIFICATION	0.9999996499070064	WITHOUT_CLASSIFICATION	3.5009299361262255E-7	DEFECT
// there was no class file. add this class to the list	WITHOUT_CLASSIFICATION	0.9999998225381052	WITHOUT_CLASSIFICATION	1.774618948368511E-7	DEFECT
// break the classLocations into its components.	WITHOUT_CLASSIFICATION	0.9999997671245191	WITHOUT_CLASSIFICATION	2.3287548084638208E-7	DEFECT
// search the various source path entries	WITHOUT_CLASSIFICATION	0.9999996799400659	WITHOUT_CLASSIFICATION	3.200599340352068E-7	DEFECT
// create a data input stream from the jar input stream	WITHOUT_CLASSIFICATION	0.9999994140015657	WITHOUT_CLASSIFICATION	5.859984343601757E-7	DEFECT
// add null entries for any additional slots required.	WITHOUT_CLASSIFICATION	0.99987773600637	WITHOUT_CLASSIFICATION	1.2226399363003438E-4	DEFECT
// end execute	WITHOUT_CLASSIFICATION	0.9999823735318514	WITHOUT_CLASSIFICATION	1.762646814859415E-5	DEFECT
//in verbose mode we always log stuff	WITHOUT_CLASSIFICATION	0.999891106245332	WITHOUT_CLASSIFICATION	1.0889375466802672E-4	DEFECT
//the simple action is to send the command line in as is	WITHOUT_CLASSIFICATION	0.9999950896866665	WITHOUT_CLASSIFICATION	4.910313333597861E-6	DEFECT
// Throws EjbcException	WITHOUT_CLASSIFICATION	0.9999487798010605	WITHOUT_CLASSIFICATION	5.122019893953682E-5	DEFECT
// VSS items	WITHOUT_CLASSIFICATION	0.9999987543933716	WITHOUT_CLASSIFICATION	1.2456066284087926E-6	DEFECT
// The zero index is never present in the constant pool itself so // we add a null entry for it	WITHOUT_CLASSIFICATION	0.999789520972721	WITHOUT_CLASSIFICATION	2.1047902727899977E-4	DEFECT
//but for big operations, we save all the params to a temp file //and set @tmpfile as the command -then we remember to delete the tempfile //afterwards	WITHOUT_CLASSIFICATION	0.9999951439011379	WITHOUT_CLASSIFICATION	4.856098862167457E-6	DEFECT
//start at 1 because element 0 is the executable name	WITHOUT_CLASSIFICATION	0.9999994576958734	WITHOUT_CLASSIFICATION	5.423041265928807E-7	DEFECT
//add to the list	WITHOUT_CLASSIFICATION	0.99999923658739	WITHOUT_CLASSIFICATION	7.634126099366779E-7	DEFECT
//fill in args	WITHOUT_CLASSIFICATION	0.9999961883929464	WITHOUT_CLASSIFICATION	3.811607053702507E-6	DEFECT
//fill in args	WITHOUT_CLASSIFICATION	0.9999961883929464	WITHOUT_CLASSIFICATION	3.811607053702507E-6	DEFECT
//set source and rebuild options	WITHOUT_CLASSIFICATION	0.999999771025577	WITHOUT_CLASSIFICATION	2.2897442307440906E-7	DEFECT
//rebuild unless the dest file is newer than the source file	WITHOUT_CLASSIFICATION	0.9999953062235533	WITHOUT_CLASSIFICATION	4.693776446813813E-6	DEFECT
//mark for a rebuild if the dest file is newer	WITHOUT_CLASSIFICATION	0.9999953274196117	WITHOUT_CLASSIFICATION	4.672580388271194E-6	DEFECT
// Mono 1.0's wsdl doesn't deal with absolute paths	WITHOUT_CLASSIFICATION	0.9999994865416023	WITHOUT_CLASSIFICATION	5.134583976889176E-7	DEFECT
//add in any extra files. //this is an error in mono, but we do not warn on it as they may fix that outside //the ant build cycle.	WITHOUT_CLASSIFICATION	0.9999326031005104	WITHOUT_CLASSIFICATION	6.73968994897028E-5	DEFECT
//mark for a rebuild if we are newer	WITHOUT_CLASSIFICATION	0.9999116373319901	WITHOUT_CLASSIFICATION	8.83626680099525E-5	DEFECT
//conditionally compile	WITHOUT_CLASSIFICATION	0.9999862890528528	WITHOUT_CLASSIFICATION	1.3710947147114122E-5	DEFECT
// Errors	WITHOUT_CLASSIFICATION	0.9999890056399962	WITHOUT_CLASSIFICATION	1.0994360003958264E-5	DEFECT
//bail on no references	WITHOUT_CLASSIFICATION	0.9999988458747341	WITHOUT_CLASSIFICATION	1.1541252659283313E-6	DEFECT
//bail on no references	WITHOUT_CLASSIFICATION	0.9999988458747341	WITHOUT_CLASSIFICATION	1.1541252659283313E-6	DEFECT
//demand create pathlist	WITHOUT_CLASSIFICATION	0.9999996658794562	WITHOUT_CLASSIFICATION	3.341205437302161E-7	DEFECT
//bail on no references listed	WITHOUT_CLASSIFICATION	0.9999994120207806	WITHOUT_CLASSIFICATION	5.879792194157825E-7	DEFECT
//loop through all definitions	WITHOUT_CLASSIFICATION	0.9999994044492677	WITHOUT_CLASSIFICATION	5.95550732306302E-7	DEFECT
//add those that are set, and a delimiter	WITHOUT_CLASSIFICATION	0.9999999446332127	WITHOUT_CLASSIFICATION	5.536678727065304E-8	DEFECT
//set up response file options	WITHOUT_CLASSIFICATION	0.9999998120898321	WITHOUT_CLASSIFICATION	1.8791016792418295E-7	DEFECT
//if the refs are out of date, force a build.	WITHOUT_CLASSIFICATION	0.9999981484034877	WITHOUT_CLASSIFICATION	1.8515965123936434E-6	DEFECT
//bail out early if there were no files	WITHOUT_CLASSIFICATION	0.9999791884387035	WITHOUT_CLASSIFICATION	2.081156129652119E-5	DEFECT
//now scan the hashtable and add the files	WITHOUT_CLASSIFICATION	0.9999998006435645	WITHOUT_CLASSIFICATION	1.9935643557872993E-7	DEFECT
//add the source file	WITHOUT_CLASSIFICATION	0.9999999252560047	WITHOUT_CLASSIFICATION	7.474399530709258E-8	DEFECT
//now run	WITHOUT_CLASSIFICATION	0.9997679396589098	WITHOUT_CLASSIFICATION	2.320603410903027E-4	DEFECT
//forcibly delete the output file in case of trouble	WITHOUT_CLASSIFICATION	0.9999993467634526	WITHOUT_CLASSIFICATION	6.532365474185473E-7	DEFECT
//then rethrow the exception	WITHOUT_CLASSIFICATION	0.9998323242557942	WITHOUT_CLASSIFICATION	1.6767574420588997E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999995133297559	WITHOUT_CLASSIFICATION	4.86670244023277E-7	DEFECT
// CheckStyle:ConstantNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9999989122270567	WITHOUT_CLASSIFICATION	1.0877729433110442E-6	DEFECT
// CheckStyle:MethodNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9999994669713123	WITHOUT_CLASSIFICATION	5.330286877976686E-7	DEFECT
// CheckStyle:ConstantNameCheck ON // CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999994850712367	WITHOUT_CLASSIFICATION	5.149287631912724E-7	DEFECT
// end execute	WITHOUT_CLASSIFICATION	0.9999823735318514	WITHOUT_CLASSIFICATION	1.762646814859415E-5	DEFECT
//fill in args	WITHOUT_CLASSIFICATION	0.9999961883929464	WITHOUT_CLASSIFICATION	3.811607053702507E-6	DEFECT
//fill in args	WITHOUT_CLASSIFICATION	0.9999961883929464	WITHOUT_CLASSIFICATION	3.811607053702507E-6	DEFECT
//rebuild unless the dest file is newer than the source file	WITHOUT_CLASSIFICATION	0.9999953062235533	WITHOUT_CLASSIFICATION	4.693776446813813E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999995133297559	WITHOUT_CLASSIFICATION	4.86670244023277E-7	DEFECT
//determine directory: resourceDir if set, //the dir of the destFile if not	WITHOUT_CLASSIFICATION	0.999967812631473	WITHOUT_CLASSIFICATION	3.2187368526951525E-5	DEFECT
//Public //Private //Family //Assembly //Family and Assembly //Family or Assembly //Private Scope	WITHOUT_CLASSIFICATION	0.9999979058069823	WITHOUT_CLASSIFICATION	2.0941930176908513E-6	DEFECT
//scan for an implicit fileset if there was a srcdir set //or there was no srcDir set but there was no contained classes	WITHOUT_CLASSIFICATION	0.9999999213891854	WITHOUT_CLASSIFICATION	7.861081467388515E-8	DEFECT
//if there is no src dir here, set it	WITHOUT_CLASSIFICATION	0.999994944019702	WITHOUT_CLASSIFICATION	5.055980297920451E-6	DEFECT
//get dependencies list.	WITHOUT_CLASSIFICATION	0.9999989268974196	WITHOUT_CLASSIFICATION	1.073102580371132E-6	DEFECT
//get any included source directories	WITHOUT_CLASSIFICATION	0.9999963449566939	WITHOUT_CLASSIFICATION	3.6550433062026284E-6	DEFECT
//add the files to the command	WITHOUT_CLASSIFICATION	0.9999924708367466	WITHOUT_CLASSIFICATION	7.5291632533879625E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc // CheckStyle:ConstantNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.999999593029485	WITHOUT_CLASSIFICATION	4.069705148550735E-7	DEFECT
// CheckStyle:MethodNameCheck ON	WITHOUT_CLASSIFICATION	0.9999993162821291	WITHOUT_CLASSIFICATION	6.837178708810184E-7	DEFECT
/*         *  space for more argumentativeness         *  command.addArgument();         *  command.addArgument();         */	WITHOUT_CLASSIFICATION	0.9999995082036459	WITHOUT_CLASSIFICATION	4.917963540865066E-7	DEFECT
// ends with '.' or null	WITHOUT_CLASSIFICATION	0.9999944887995748	WITHOUT_CLASSIFICATION	5.511200425338419E-6	DEFECT
/* Constants used for the "beantype" attribute */	WITHOUT_CLASSIFICATION	0.9999996328890449	WITHOUT_CLASSIFICATION	3.6711095510301443E-7	DEFECT
/* Filenames of the standard EJB descriptor and the iAS-specific descriptor */	WITHOUT_CLASSIFICATION	0.9999783198378605	WITHOUT_CLASSIFICATION	2.168016213944235E-5	DEFECT
/* Classpath used when the iAS ejbc is called */	WITHOUT_CLASSIFICATION	0.9999998881835018	WITHOUT_CLASSIFICATION	1.118164981241441E-7	DEFECT
/* Options passed to the iAS ejbc */	WITHOUT_CLASSIFICATION	0.999999175237562	WITHOUT_CLASSIFICATION	8.247624379277927E-7	DEFECT
/* iAS installation directory (used if ejbc isn't on user's PATH) */	WITHOUT_CLASSIFICATION	0.9999944948663255	WITHOUT_CLASSIFICATION	5.505133674532467E-6	DEFECT
/* Parser and handler used to process both EJB descriptor files */	WITHOUT_CLASSIFICATION	0.9999988679485917	WITHOUT_CLASSIFICATION	1.1320514082559141E-6	DEFECT
/* Value of the display-name element read from the standard EJB descriptor */	WITHOUT_CLASSIFICATION	0.9998240189112282	WITHOUT_CLASSIFICATION	1.7598108877182748E-4	DEFECT
/*         * Parse the classpath into it's individual elements and store the         * results in the "classpathElements" instance variable.         */	WITHOUT_CLASSIFICATION	0.9999999864312034	WITHOUT_CLASSIFICATION	1.3568796654667255E-8	DEFECT
/* If the -classpath flag isn't specified, use the system classpath */	WITHOUT_CLASSIFICATION	0.9999989206875396	WITHOUT_CLASSIFICATION	1.0793124603637275E-6	DEFECT
/*         * If the -d flag isn't specified, use the working directory as the         * destination directory         */	WITHOUT_CLASSIFICATION	0.9999902867984519	WITHOUT_CLASSIFICATION	9.713201548175275E-6	DEFECT
/* Construct a SAXParser used to process the descriptors */	WITHOUT_CLASSIFICATION	0.999999380969011	WITHOUT_CLASSIFICATION	6.19030989105629E-7	DEFECT
// SAXException or ParserConfigurationException may be thrown	WITHOUT_CLASSIFICATION	0.9998540884210677	WITHOUT_CLASSIFICATION	1.4591157893232816E-4	DEFECT
/* Build and populate an instance of the ejbc utility */	WITHOUT_CLASSIFICATION	0.9999989949182254	WITHOUT_CLASSIFICATION	1.005081774665628E-6	DEFECT
/* Execute the ejbc utility -- stubs/skeletons are rebuilt, if needed */	WITHOUT_CLASSIFICATION	0.9999993746839034	WITHOUT_CLASSIFICATION	6.253160965692541E-7	DEFECT
// Add one for the "\"	WITHOUT_CLASSIFICATION	0.9999957257767331	WITHOUT_CLASSIFICATION	4.274223266766847E-6	DEFECT
/* Concatenate all of the command line arguments into a single String */	WITHOUT_CLASSIFICATION	0.9999993560419832	WITHOUT_CLASSIFICATION	6.439580168033541E-7	DEFECT
/* If an iAS home directory is specified, prepend it to the commmand */	WITHOUT_CLASSIFICATION	0.9999992974828651	WITHOUT_CLASSIFICATION	7.02517134941302E-7	DEFECT
/*         * The EJB information is gathered from the standard XML EJB descriptor         * and the iAS-specific XML EJB descriptor using a SAX parser.         */	WITHOUT_CLASSIFICATION	0.9906813194151513	WITHOUT_CLASSIFICATION	0.009318680584848709	DEFECT
/* OPTIONAL COMMAND LINE PARAMETERS */	WITHOUT_CLASSIFICATION	0.9999894541317325	WITHOUT_CLASSIFICATION	1.0545868267477688E-5	DEFECT
/* No beantype flag is needed for an entity bean */	WITHOUT_CLASSIFICATION	0.9999861051554926	WITHOUT_CLASSIFICATION	1.389484450730861E-5	DEFECT
/* REQUIRED COMMAND LINE PARAMETERS */	WITHOUT_CLASSIFICATION	0.9999890000248983	WITHOUT_CLASSIFICATION	1.0999975101558998E-5	DEFECT
/* Convert the List into an Array and return it */	WITHOUT_CLASSIFICATION	0.9999954619489477	WITHOUT_CLASSIFICATION	4.538051052321078E-6	DEFECT
/* Inner classes follow */	WITHOUT_CLASSIFICATION	0.9999992996653478	WITHOUT_CLASSIFICATION	7.003346521984689E-7	DEFECT
// End of EjbcException inner class	WITHOUT_CLASSIFICATION	0.9999827381994514	WITHOUT_CLASSIFICATION	1.7261800548647802E-5	DEFECT
// Tracks current element // Tracks current text data // "session" or "entity"	WITHOUT_CLASSIFICATION	0.9999882377070048	WITHOUT_CLASSIFICATION	1.1762292995175095E-5	DEFECT
/* Search the resource Map and (if not found) file Map */	WITHOUT_CLASSIFICATION	0.9999989451087373	WITHOUT_CLASSIFICATION	1.0548912626905937E-6	DEFECT
/* A new element has started, so reset the text being captured */	WITHOUT_CLASSIFICATION	0.9999998687047451	WITHOUT_CLASSIFICATION	1.3129525480775283E-7	DEFECT
/*             * If this is a standard EJB 1.1 descriptor, we are looking for one             * set of data, while if this is an iAS-specific descriptor, we're             * looking for different set of data.  Hand the processing off to             * the appropriate method.             */	WITHOUT_CLASSIFICATION	0.9999999536694367	WITHOUT_CLASSIFICATION	4.6330563220035485E-8	DEFECT
// End of EjbcHandler inner class	WITHOUT_CLASSIFICATION	0.9999980717828189	WITHOUT_CLASSIFICATION	1.928217181216208E-6	DEFECT
/*         * Below are getter's and setter's for each of the instance variables.         * Note that (in addition to supporting setters with the same type as         * the instance variable) a setter is provided with takes a String         * argument -- this are provided so the XML document handler can set         * the EJB values using the Strings it parses.         */	WITHOUT_CLASSIFICATION	0.9999898333985665	WITHOUT_CLASSIFICATION	1.0166601433388088E-5	DEFECT
/* Check that the specified instance variables are valid */	WITHOUT_CLASSIFICATION	0.999999992703003	WITHOUT_CLASSIFICATION	7.2969970099745895E-9	DEFECT
/* Check that the EJB "source" classes all exist */	WITHOUT_CLASSIFICATION	0.9999999440219914	WITHOUT_CLASSIFICATION	5.597800864641626E-8	DEFECT
// The timestamp of the "newest" class // Timestamp for a given class // File for the remote interface class // File for the home interface class // File for the EJB implementation class // File for the EJB primary key class	WITHOUT_CLASSIFICATION	0.9999988345130546	WITHOUT_CLASSIFICATION	1.165486945372138E-6	DEFECT
/* Check the timestamp on the remote interface */	WITHOUT_CLASSIFICATION	0.9999992982530194	WITHOUT_CLASSIFICATION	7.017469807189875E-7	DEFECT
/* Check the timestamp on the home interface */	WITHOUT_CLASSIFICATION	0.9999999351083555	WITHOUT_CLASSIFICATION	6.489164447467062E-8	DEFECT
/* Check the timestamp of the primary key class */	WITHOUT_CLASSIFICATION	0.9999998767311535	WITHOUT_CLASSIFICATION	1.232688464180287E-7	DEFECT
// List of all stubs & skels // Earliest mod time // Has each been found?	WITHOUT_CLASSIFICATION	0.9999999786795625	WITHOUT_CLASSIFICATION	2.132043751443338E-8	DEFECT
/*             * Loop through each stub/skeleton class that must be generated, and             * determine (if all exist) which file has the most recent timestamp             */	WITHOUT_CLASSIFICATION	0.9999999773127928	WITHOUT_CLASSIFICATION	2.2687207265999758E-8	DEFECT
/*                 * Add each stub/skeleton class to the list of EJB files.  Note                 * that each class is added even if it doesn't exist now.                 */	WITHOUT_CLASSIFICATION	0.9999860828242563	WITHOUT_CLASSIFICATION	1.3917175743755112E-5	DEFECT
/* Keep track of the oldest modification timestamp */	WITHOUT_CLASSIFICATION	0.9999982594266554	WITHOUT_CLASSIFICATION	1.7405733445549912E-6	DEFECT
// End of EjbInfo inner class	WITHOUT_CLASSIFICATION	0.9999984205081534	WITHOUT_CLASSIFICATION	1.579491846638988E-6	DEFECT
// Fully qualified name of the Java class // Name of the package for this class // Name of the class without the package	WITHOUT_CLASSIFICATION	0.9999999506731775	WITHOUT_CLASSIFICATION	4.932682255289291E-8	DEFECT
// End of Classname inner class	WITHOUT_CLASSIFICATION	0.9999992248467823	WITHOUT_CLASSIFICATION	7.751532177765773E-7	DEFECT
// Stream to read and redirect to standard output	WITHOUT_CLASSIFICATION	0.9999890698627959	WITHOUT_CLASSIFICATION	1.0930137204097615E-5	DEFECT
// End of RedirectOutput inner class	WITHOUT_CLASSIFICATION	0.999934634562301	WITHOUT_CLASSIFICATION	6.536543769902924E-5	DEFECT
// add -file xxxxx to the commandline	WITHOUT_CLASSIFICATION	0.999999358863447	WITHOUT_CLASSIFICATION	6.411365529952754E-7	DEFECT
//clientname = ejbjarfile+client.jar	WITHOUT_CLASSIFICATION	0.9999979957834819	WITHOUT_CLASSIFICATION	2.0042165179808103E-6	DEFECT
// end of else	WITHOUT_CLASSIFICATION	0.9999969527607967	WITHOUT_CLASSIFICATION	3.0472392032355127E-6	DEFECT
// ejb jar file	WITHOUT_CLASSIFICATION	0.9999996808989845	WITHOUT_CLASSIFICATION	3.1910101550280524E-7	DEFECT
// ejb jar file	WITHOUT_CLASSIFICATION	0.9999996808989845	WITHOUT_CLASSIFICATION	3.1910101550280524E-7	DEFECT
//client jar file	WITHOUT_CLASSIFICATION	0.9999993775793944	WITHOUT_CLASSIFICATION	6.224206054819713E-7	DEFECT
//client jar file	WITHOUT_CLASSIFICATION	0.9999993775793944	WITHOUT_CLASSIFICATION	6.224206054819713E-7	DEFECT
// Have to catch this because of the semantics of calling main()	WITHOUT_CLASSIFICATION	0.9999976438101295	WITHOUT_CLASSIFICATION	2.356189870444807E-6	DEFECT
// Have to catch this because of the semantics of calling main()	WITHOUT_CLASSIFICATION	0.9999976438101295	WITHOUT_CLASSIFICATION	2.356189870444807E-6	DEFECT
//classpath	WITHOUT_CLASSIFICATION	0.9999964694814859	WITHOUT_CLASSIFICATION	3.5305185141541714E-6	DEFECT
/* ------------- */	WITHOUT_CLASSIFICATION	0.999992837094049	WITHOUT_CLASSIFICATION	7.162905951155071E-6	DEFECT
/* ------------- */	WITHOUT_CLASSIFICATION	0.999992837094049	WITHOUT_CLASSIFICATION	7.162905951155071E-6	DEFECT
/* GenIC options */	WITHOUT_CLASSIFICATION	0.9999991695564928	WITHOUT_CLASSIFICATION	8.304435072292143E-7	DEFECT
/* other options */	WITHOUT_CLASSIFICATION	0.9999988970178469	WITHOUT_CLASSIFICATION	1.1029821530566257E-6	DEFECT
/* -------------------- */	WITHOUT_CLASSIFICATION	0.9999951985620726	WITHOUT_CLASSIFICATION	4.801437927368228E-6	DEFECT
/* -------------------- */	WITHOUT_CLASSIFICATION	0.9999951985620726	WITHOUT_CLASSIFICATION	4.801437927368228E-6	DEFECT
/* GenIC options setter */	WITHOUT_CLASSIFICATION	0.9999994563148824	WITHOUT_CLASSIFICATION	5.436851175633298E-7	DEFECT
// -I- // ignore all errors // -Vd	WITHOUT_CLASSIFICATION	0.9999980774366232	WITHOUT_CLASSIFICATION	1.9225633767581565E-6	DEFECT
/* ------------- */	WITHOUT_CLASSIFICATION	0.999992837094049	WITHOUT_CLASSIFICATION	7.162905951155071E-6	DEFECT
/* -------------------- */	WITHOUT_CLASSIFICATION	0.9999951985620726	WITHOUT_CLASSIFICATION	4.801437927368228E-6	DEFECT
/* other options setter */	WITHOUT_CLASSIFICATION	0.9999994436409352	WITHOUT_CLASSIFICATION	5.563590647002973E-7	DEFECT
/* other methods */	WITHOUT_CLASSIFICATION	0.9999991321778186	WITHOUT_CLASSIFICATION	8.678221814833296E-7	DEFECT
// the method deleteOnExit() do not work because the directory is not empty	WITHOUT_CLASSIFICATION	0.9999638228432186	WITHOUT_CLASSIFICATION	3.6177156781431576E-5	DEFECT
// create the generic jar first	WITHOUT_CLASSIFICATION	0.9999999399041173	WITHOUT_CLASSIFICATION	6.009588272821248E-8	DEFECT
// GenIC call on generic jar	WITHOUT_CLASSIFICATION	0.9999998254788344	WITHOUT_CLASSIFICATION	1.7452116554808727E-7	DEFECT
// create the real jar	WITHOUT_CLASSIFICATION	0.9999999627477263	WITHOUT_CLASSIFICATION	3.7252273658252953E-8	DEFECT
// JOnAS-specific descriptor deployment	WITHOUT_CLASSIFICATION	0.9999933354329811	WITHOUT_CLASSIFICATION	6.664567018902154E-6	DEFECT
// JOnAS-specific DD // true if the JOnAS convention is used for the DD // Directory path of the EJB descriptor // EJB descriptor file name // Filename appearing before name terminator // Filename appearing after the name terminator	WITHOUT_CLASSIFICATION	0.999955211773224	WITHOUT_CLASSIFICATION	4.478822677608517E-5	DEFECT
// extract path info	WITHOUT_CLASSIFICATION	0.9999948414219565	WITHOUT_CLASSIFICATION	5.158578043497104E-6	DEFECT
// descriptorName is just a file without path	WITHOUT_CLASSIFICATION	0.9999992779049426	WITHOUT_CLASSIFICATION	7.220950574763378E-7	DEFECT
/*         * Check for the odd case where the terminator and/or filename         * extension aren't found.  These will ensure "jonas-" appears at the         * end of the name and before the '.' (if present).         */	WITHOUT_CLASSIFICATION	0.9999982209502158	WITHOUT_CLASSIFICATION	1.7790497841858956E-6	DEFECT
// no . found	WITHOUT_CLASSIFICATION	0.9999927617965658	WITHOUT_CLASSIFICATION	7.2382034341390235E-6	DEFECT
// try to find JOnAS specific convention name	WITHOUT_CLASSIFICATION	0.9999967774651444	WITHOUT_CLASSIFICATION	3.222534855625906E-6	DEFECT
// else get standard baseName	WITHOUT_CLASSIFICATION	0.9999931217576716	WITHOUT_CLASSIFICATION	6.87824232842567E-6	DEFECT
// jonasroot	WITHOUT_CLASSIFICATION	0.9999974756873876	WITHOUT_CLASSIFICATION	2.524312612378933E-6	DEFECT
// java policy file	WITHOUT_CLASSIFICATION	0.9999996522760439	WITHOUT_CLASSIFICATION	3.4772395608489705E-7	DEFECT
// outputdir	WITHOUT_CLASSIFICATION	0.9999872872428262	WITHOUT_CLASSIFICATION	1.2712757173899503E-5	DEFECT
// work around a bug of GenIC 2.5	WITHOUT_CLASSIFICATION	0.9912308181764925	WITHOUT_CLASSIFICATION	0.00876918182350741	DEFECT
// classpath	WITHOUT_CLASSIFICATION	0.9999998667258816	WITHOUT_CLASSIFICATION	1.3327411836638843E-7	DEFECT
// try to create the classpath for the correct ORB	WITHOUT_CLASSIFICATION	0.999999818608681	WITHOUT_CLASSIFICATION	1.8139131892931767E-7	DEFECT
// keepgenerated	WITHOUT_CLASSIFICATION	0.999999948357804	WITHOUT_CLASSIFICATION	5.164219589287532E-8	DEFECT
// nocompil	WITHOUT_CLASSIFICATION	0.9999949064250464	WITHOUT_CLASSIFICATION	5.093574953591589E-6	DEFECT
// novalidation	WITHOUT_CLASSIFICATION	0.9999918109386595	WITHOUT_CLASSIFICATION	8.189061340495755E-6	DEFECT
// javac	WITHOUT_CLASSIFICATION	0.9999995542408167	WITHOUT_CLASSIFICATION	4.4575918326765584E-7	DEFECT
// javacopts	WITHOUT_CLASSIFICATION	0.9999997749133235	WITHOUT_CLASSIFICATION	2.2508667653041198E-7	DEFECT
// rmicopts	WITHOUT_CLASSIFICATION	0.9999989369872523	WITHOUT_CLASSIFICATION	1.0630127477288896E-6	DEFECT
// secpropag	WITHOUT_CLASSIFICATION	0.9999979691236237	WITHOUT_CLASSIFICATION	2.030876376327653E-6	DEFECT
// verbose	WITHOUT_CLASSIFICATION	0.9999987828802429	WITHOUT_CLASSIFICATION	1.2171197571301696E-6	DEFECT
// input file to process by GenIC	WITHOUT_CLASSIFICATION	0.999998572997272	WITHOUT_CLASSIFICATION	1.4270027279880981E-6	DEFECT
// calling GenIC task	WITHOUT_CLASSIFICATION	0.9999998316641951	WITHOUT_CLASSIFICATION	1.6833580481782011E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999995287844801	WITHOUT_CLASSIFICATION	4.7121551989690683E-7	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9999655314264141	WITHOUT_CLASSIFICATION	3.4468573585883755E-5	DEFECT
// the method deleteOnExit() do not work because the directory is not empty	WITHOUT_CLASSIFICATION	0.9999638228432186	WITHOUT_CLASSIFICATION	3.6177156781431576E-5	DEFECT
// baseNameTerminator not found: the descriptor use the // JOnAS naming convention, ie [Foo.xml,jonas-Foo.xml] and // not [Foo<baseNameTerminator>-ejb-jar.xml, // Foo<baseNameTerminator>-jonas-ejb-jar.xml].	WITHOUT_CLASSIFICATION	0.9999788316479332	WITHOUT_CLASSIFICATION	2.1168352066841478E-5	DEFECT
// jonasroot	WITHOUT_CLASSIFICATION	0.9999974756873876	WITHOUT_CLASSIFICATION	2.524312612378933E-6	DEFECT
// GenIC task // GenIC class (3 are supported for various // versions	WITHOUT_CLASSIFICATION	0.9999995970532783	WITHOUT_CLASSIFICATION	4.0294672168701483E-7	DEFECT
// javac	WITHOUT_CLASSIFICATION	0.9999995542408167	WITHOUT_CLASSIFICATION	4.4575918326765584E-7	DEFECT
// additionalargs	WITHOUT_CLASSIFICATION	0.9999995934750713	WITHOUT_CLASSIFICATION	4.065249287922748E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999995133297559	WITHOUT_CLASSIFICATION	4.86670244023277E-7	DEFECT
// add the generated files to the ejbFiles	WITHOUT_CLASSIFICATION	0.9999998877062286	WITHOUT_CLASSIFICATION	1.1229377134185513E-7	DEFECT
// orb	WITHOUT_CLASSIFICATION	0.9999958714883268	WITHOUT_CLASSIFICATION	4.1285116731854255E-6	DEFECT
/* ----------------------------------------------------------------------------------- */	WITHOUT_CLASSIFICATION	0.999983400718411	WITHOUT_CLASSIFICATION	1.6599281589113224E-5	DEFECT
/* ----------------------------------------------------------------------------------- */	WITHOUT_CLASSIFICATION	0.999983400718411	WITHOUT_CLASSIFICATION	1.6599281589113224E-5	DEFECT
/* utilitary methods */	WITHOUT_CLASSIFICATION	0.9999997756310709	WITHOUT_CLASSIFICATION	2.2436892912361082E-7	DEFECT
// Create the parser using whatever parser the system dictates	WITHOUT_CLASSIFICATION	0.9999907907620379	WITHOUT_CLASSIFICATION	9.209237962162061E-6	DEFECT
// Loop through the files. Each file represents one deployment // descriptor, and hence one bean in our model.	WITHOUT_CLASSIFICATION	0.9999988372783027	WITHOUT_CLASSIFICATION	1.1627216971956948E-6	DEFECT
// process the deployment descriptor in each tool	WITHOUT_CLASSIFICATION	0.999993709397222	WITHOUT_CLASSIFICATION	6.290602778032216E-6	DEFECT
// end of execute()	WITHOUT_CLASSIFICATION	0.999986612181295	WITHOUT_CLASSIFICATION	1.3387818705041374E-5	DEFECT
// resolve relative to project basedir	WITHOUT_CLASSIFICATION	0.9999971875813047	WITHOUT_CLASSIFICATION	2.8124186952702528E-6	DEFECT
// Get the filename into a String object	WITHOUT_CLASSIFICATION	0.9999997026146701	WITHOUT_CLASSIFICATION	2.973853298915241E-7	DEFECT
// Get the value of the <ejb-name> tag.  Only the first occurrence.	WITHOUT_CLASSIFICATION	0.9999998882848166	WITHOUT_CLASSIFICATION	1.1171518331160372E-7	DEFECT
// Then the toplink deployment descriptor	WITHOUT_CLASSIFICATION	0.9999852118815956	WITHOUT_CLASSIFICATION	1.478811840424556E-5	DEFECT
// Setup a naming standard here?.	WITHOUT_CLASSIFICATION	0.9999682970453547	WITHOUT_CLASSIFICATION	3.170295464530831E-5	DEFECT
// get all the files in the descriptor directory	WITHOUT_CLASSIFICATION	0.9999951857860176	WITHOUT_CLASSIFICATION	4.814213982319333E-6	DEFECT
// If we still can't find it, complain	WITHOUT_CLASSIFICATION	0.9999860613756665	WITHOUT_CLASSIFICATION	1.3938624333490905E-5	DEFECT
// OK, properties file may be absolute	WITHOUT_CLASSIFICATION	0.9999996935957658	WITHOUT_CLASSIFICATION	3.064042342703932E-7	DEFECT
// do we need to regenerate the file	WITHOUT_CLASSIFICATION	0.9999999173352079	WITHOUT_CLASSIFICATION	8.266479208531019E-8	DEFECT
//weblogic.ejb.utils.DDCreator.main(args);	WITHOUT_CLASSIFICATION	0.9999890827750967	WITHOUT_CLASSIFICATION	1.0917224903323592E-5	DEFECT
// there was an exception - run with no exit to get proper error	WITHOUT_CLASSIFICATION	0.9998520218474513	WITHOUT_CLASSIFICATION	1.4797815254870026E-4	DEFECT
//weblogic.ejb.utils.DDCreator.main(newArgs);	WITHOUT_CLASSIFICATION	0.9999932614199053	WITHOUT_CLASSIFICATION	6.738580094690586E-6	DEFECT
/* Attributes set by the Ant build file */	WITHOUT_CLASSIFICATION	0.9999984395943672	WITHOUT_CLASSIFICATION	1.5604056327996463E-6	DEFECT
// Create the zip entry and add it to the jar file	WITHOUT_CLASSIFICATION	0.9999998485402608	WITHOUT_CLASSIFICATION	1.5145973929259095E-7	DEFECT
//add it to list of files in jar	WITHOUT_CLASSIFICATION	0.9999844993130589	WITHOUT_CLASSIFICATION	1.5500686941126277E-5	DEFECT
// If it's a primitive wrapper then we shouldn't try and put // it into the jar, so ignore it.	WITHOUT_CLASSIFICATION	0.9999976745902376	WITHOUT_CLASSIFICATION	2.325409762394278E-6	DEFECT
// Translate periods into path separators, add .class to the // name, create the File object and add it to the Hashtable.	WITHOUT_CLASSIFICATION	0.9999999170039167	WITHOUT_CLASSIFICATION	8.299608335106883E-8	DEFECT
// Weblogic will throw an error if the deployment descriptor does // not match the class files.	WITHOUT_CLASSIFICATION	0.999815077424576	WITHOUT_CLASSIFICATION	1.8492257542400436E-4	DEFECT
// Create the file input stream, and buffer everything over // to the jar output stream	WITHOUT_CLASSIFICATION	0.9999999728294423	WITHOUT_CLASSIFICATION	2.7170557739777225E-8	DEFECT
// Close up the file input stream for the class file	WITHOUT_CLASSIFICATION	0.9999999661479261	WITHOUT_CLASSIFICATION	3.3852073916697004E-8	DEFECT
// register any DTDs supplied by the user	WITHOUT_CLASSIFICATION	0.9999979629838247	WITHOUT_CLASSIFICATION	2.0370161752787116E-6	DEFECT
// none to register for generic	WITHOUT_CLASSIFICATION	0.999997189170138	WITHOUT_CLASSIFICATION	2.810829862001284E-6	DEFECT
// Retrive the files to be added to JAR from EJB descriptor	WITHOUT_CLASSIFICATION	0.9999906530593755	WITHOUT_CLASSIFICATION	9.34694062445678E-6	DEFECT
// Add any support classes specified in the build file	WITHOUT_CLASSIFICATION	0.9999963563411055	WITHOUT_CLASSIFICATION	3.643658894397515E-6	DEFECT
// Determine the JAR filename (without filename extension)	WITHOUT_CLASSIFICATION	0.999999912252618	WITHOUT_CLASSIFICATION	8.774738211470586E-8	DEFECT
// First the regular deployment descriptor	WITHOUT_CLASSIFICATION	0.9999971769645328	WITHOUT_CLASSIFICATION	2.823035467230819E-6	DEFECT
// now the vendor specific files, if any	WITHOUT_CLASSIFICATION	0.9999996755149321	WITHOUT_CLASSIFICATION	3.2448506795753175E-7	DEFECT
// add any dependent files	WITHOUT_CLASSIFICATION	0.9999997742390979	WITHOUT_CLASSIFICATION	2.2576090213944226E-7	DEFECT
// Check to see if we need a build and start doing the work!	WITHOUT_CLASSIFICATION	0.9998559219787473	WITHOUT_CLASSIFICATION	1.4407802125268265E-4	DEFECT
// Log that we are going to build...	WITHOUT_CLASSIFICATION	0.9997864832914232	WITHOUT_CLASSIFICATION	2.135167085767186E-4	DEFECT
// Use helper method to write the jarfile	WITHOUT_CLASSIFICATION	0.999999813285977	WITHOUT_CLASSIFICATION	1.8671402301298268E-7	DEFECT
// Log that the file is up to date...	WITHOUT_CLASSIFICATION	0.9999989997090571	WITHOUT_CLASSIFICATION	1.0002909428768573E-6	DEFECT
/* Parse the ejb deployment descriptor.  While it may not             * look like much, we use a SAXParser and an inner class to             * get hold of all the classfile names for the descriptor.             */	WITHOUT_CLASSIFICATION	0.9999788235937384	WITHOUT_CLASSIFICATION	2.117640626168255E-5	DEFECT
// add in support classes if any	WITHOUT_CLASSIFICATION	0.9999950979332569	WITHOUT_CLASSIFICATION	4.90206674301729E-6	DEFECT
// Work out what the base name is	WITHOUT_CLASSIFICATION	0.9999930672467242	WITHOUT_CLASSIFICATION	6.9327532758618145E-6	DEFECT
// nothing to add for generic tool.	WITHOUT_CLASSIFICATION	0.9999934638119883	WITHOUT_CLASSIFICATION	6.536188011675757E-6	DEFECT
// clean the addedfiles set	WITHOUT_CLASSIFICATION	0.9999997032618826	WITHOUT_CLASSIFICATION	2.967381174354332E-7	DEFECT
// Create the streams necessary to write the jarfile	WITHOUT_CLASSIFICATION	0.9999996148377436	WITHOUT_CLASSIFICATION	3.851622564520421E-7	DEFECT
//get and clean up innerclass name	WITHOUT_CLASSIFICATION	0.9999977275632291	WITHOUT_CLASSIFICATION	2.272436770927391E-6	DEFECT
// See if there are any inner classes for this class and add them in if there are	WITHOUT_CLASSIFICATION	0.9999989522812772	WITHOUT_CLASSIFICATION	1.0477187227589274E-6	DEFECT
// Loop through all the class files found and add them to the jar	WITHOUT_CLASSIFICATION	0.9999997670535528	WITHOUT_CLASSIFICATION	2.3294644721507366E-7	DEFECT
//assertions take up space too	WITHOUT_CLASSIFICATION	0.9999993610041834	WITHOUT_CLASSIFICATION	6.389958165371411E-7	DEFECT
// link the file	WITHOUT_CLASSIFICATION	0.9999989091957849	WITHOUT_CLASSIFICATION	1.0908042150662491E-6	DEFECT
// Have to catch this because of the semantics of calling main()	WITHOUT_CLASSIFICATION	0.9999976438101295	WITHOUT_CLASSIFICATION	2.356189870444807E-6	DEFECT
//trim the META_INF\ off of the file name	WITHOUT_CLASSIFICATION	0.9999901681130244	WITHOUT_CLASSIFICATION	9.83188697551841E-6	DEFECT
// end of writeJar	WITHOUT_CLASSIFICATION	0.9999931515614773	WITHOUT_CLASSIFICATION	6.848438522782188E-6	DEFECT
// only generate a new ClassLoader if we have a classpath	WITHOUT_CLASSIFICATION	0.9999998425194456	WITHOUT_CLASSIFICATION	1.5748055447952055E-7	DEFECT
// register all the known DTDs	WITHOUT_CLASSIFICATION	0.9999997149141565	WITHOUT_CLASSIFICATION	2.850858435423521E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999995133297559	WITHOUT_CLASSIFICATION	4.86670244023277E-7	DEFECT
// The the weblogic cmp deployment descriptor	WITHOUT_CLASSIFICATION	0.9999983249315642	WITHOUT_CLASSIFICATION	1.675068435810231E-6	DEFECT
// try to determine it from publicId	WITHOUT_CLASSIFICATION	0.9999923054931233	WITHOUT_CLASSIFICATION	7.694506876592363E-6	DEFECT
// try to use the compiler specified by build.compiler. // Right now we are just going to allow Jikes	WITHOUT_CLASSIFICATION	0.9999994308853132	WITHOUT_CLASSIFICATION	5.691146867802377E-7	DEFECT
// need to create a generic jar first.	WITHOUT_CLASSIFICATION	0.9999998569187498	WITHOUT_CLASSIFICATION	1.4308125016987586E-7	DEFECT
// Only go forward if the generic and the weblogic file both exist	WITHOUT_CLASSIFICATION	0.999999950379925	WITHOUT_CLASSIFICATION	4.962007498803654E-8	DEFECT
//open jar files	WITHOUT_CLASSIFICATION	0.999998135844077	WITHOUT_CLASSIFICATION	1.8641559229578613E-6	DEFECT
//get the list of generic jar entries	WITHOUT_CLASSIFICATION	0.999999650904444	WITHOUT_CLASSIFICATION	3.4909555596684226E-7	DEFECT
//get the list of weblogic jar entries	WITHOUT_CLASSIFICATION	0.9999997294089872	WITHOUT_CLASSIFICATION	2.7059101273248795E-7	DEFECT
//Cycle Through generic and make sure its in weblogic	WITHOUT_CLASSIFICATION	0.9999820289390359	WITHOUT_CLASSIFICATION	1.797106096417027E-5	DEFECT
// File name/path match	WITHOUT_CLASSIFICATION	0.9999998869178605	WITHOUT_CLASSIFICATION	1.1308213952324471E-7	DEFECT
// Check files see if same	WITHOUT_CLASSIFICATION	0.9999999266043598	WITHOUT_CLASSIFICATION	7.339564020064479E-8	DEFECT
//File are different see if its an object or an interface	WITHOUT_CLASSIFICATION	0.9999997532040206	WITHOUT_CLASSIFICATION	2.467959794806962E-7	DEFECT
//Interface changed   rebuild jar.	WITHOUT_CLASSIFICATION	0.9999986574304571	WITHOUT_CLASSIFICATION	1.3425695428691175E-6	DEFECT
//Object class Changed   update it.	WITHOUT_CLASSIFICATION	0.9999997931450595	WITHOUT_CLASSIFICATION	2.0685494043633267E-7	DEFECT
// is it the manifest. If so ignore it	WITHOUT_CLASSIFICATION	0.999998786047764	WITHOUT_CLASSIFICATION	1.213952236045201E-6	DEFECT
//File other then class changed   rebuild	WITHOUT_CLASSIFICATION	0.9999995806901353	WITHOUT_CLASSIFICATION	4.193098647108806E-7	DEFECT
// a file doesnt exist rebuild	WITHOUT_CLASSIFICATION	0.9999991358764106	WITHOUT_CLASSIFICATION	8.641235893310195E-7	DEFECT
//Copy files from old weblogic jar	WITHOUT_CLASSIFICATION	0.999996163915818	WITHOUT_CLASSIFICATION	3.836084181935439E-6	DEFECT
// Use the entry from the generic jar	WITHOUT_CLASSIFICATION	0.9999996739122377	WITHOUT_CLASSIFICATION	3.260877622967065E-7	DEFECT
//use fle from original weblogic jar	WITHOUT_CLASSIFICATION	0.9999922603327848	WITHOUT_CLASSIFICATION	7.739667215246794E-6	DEFECT
// need to close files and perhaps rename output	WITHOUT_CLASSIFICATION	0.9999996572042245	WITHOUT_CLASSIFICATION	3.427957755069293E-7	DEFECT
// empty	WITHOUT_CLASSIFICATION	0.9999989787642598	WITHOUT_CLASSIFICATION	1.0212357402186593E-6	DEFECT
// if the implementation classes don;t exist regenerate	WITHOUT_CLASSIFICATION	0.9999994197245692	WITHOUT_CLASSIFICATION	5.802754308304329E-7	DEFECT
// any problems - just regenerate	WITHOUT_CLASSIFICATION	0.999999218324906	WITHOUT_CLASSIFICATION	7.81675093991599E-7	DEFECT
// create a Java task to do the rebuild	WITHOUT_CLASSIFICATION	0.9999998890844123	WITHOUT_CLASSIFICATION	1.1091558772420471E-7	DEFECT
//weblogic.ejbc.main(args);	WITHOUT_CLASSIFICATION	0.999997357470158	WITHOUT_CLASSIFICATION	2.642529842042844E-6	DEFECT
/* Build and populate an instance of the ejbc utility */	WITHOUT_CLASSIFICATION	0.9999989949182254	WITHOUT_CLASSIFICATION	1.005081774665628E-6	DEFECT
// Have to catch this because of the semantics of calling main()	WITHOUT_CLASSIFICATION	0.9999976438101295	WITHOUT_CLASSIFICATION	2.356189870444807E-6	DEFECT
//classpath	WITHOUT_CLASSIFICATION	0.9999964694814859	WITHOUT_CLASSIFICATION	3.5305185141541714E-6	DEFECT
/* Attributes set by the Ant build file */	WITHOUT_CLASSIFICATION	0.9999984395943672	WITHOUT_CLASSIFICATION	1.5604056327996463E-6	DEFECT
// Get the filename of vendor specific descriptor	WITHOUT_CLASSIFICATION	0.9999998240226493	WITHOUT_CLASSIFICATION	1.759773507413969E-7	DEFECT
//trim the META_INF\ off of the file name	WITHOUT_CLASSIFICATION	0.9999901681130244	WITHOUT_CLASSIFICATION	9.83188697551841E-6	DEFECT
// Is the ser file or any of the source files newer then the class files. // firstly find the oldest of the two class files.	WITHOUT_CLASSIFICATION	0.9999977629704495	WITHOUT_CLASSIFICATION	2.2370295505616584E-6	DEFECT
// run with no exit for better reporting	WITHOUT_CLASSIFICATION	0.9996050527173238	WITHOUT_CLASSIFICATION	3.9494728267616734E-4	DEFECT
//weblogic.ejbc.main(newArgs);	WITHOUT_CLASSIFICATION	0.9999983689222535	WITHOUT_CLASSIFICATION	1.6310777466336595E-6	DEFECT
/*     * Regardless of the name of the iAS-specific EJB descriptor file, it will     * written in the completed JAR file as "ias-ejb-jar.xml".  This is the     * naming convention implemented by iAS.     */	WITHOUT_CLASSIFICATION	0.9999764593605965	WITHOUT_CLASSIFICATION	2.3540639403517524E-5	DEFECT
/* Add CMP descriptors to the list of EJB files */	WITHOUT_CLASSIFICATION	0.9999619677812981	WITHOUT_CLASSIFICATION	3.803221870196458E-5	DEFECT
/* Only calculate the descriptor name once */	WITHOUT_CLASSIFICATION	0.9999992246090751	WITHOUT_CLASSIFICATION	7.75390925004277E-7	DEFECT
// Directory path of the EJB descriptor // Filename appearing before name terminator // Filename appearing after the name terminator	WITHOUT_CLASSIFICATION	0.9998528595764163	WITHOUT_CLASSIFICATION	1.4714042358373927E-4	DEFECT
/* Find the end of the standard descriptor's relative path */	WITHOUT_CLASSIFICATION	0.9996649707547315	WITHOUT_CLASSIFICATION	3.350292452685386E-4	DEFECT
/* Check to see if the standard name is used (there's no basename) */	WITHOUT_CLASSIFICATION	0.9999960867304701	WITHOUT_CLASSIFICATION	3.913269529814497E-6	DEFECT
/*             * Check for the odd case where the terminator and/or filename             * extension aren't found.  These will ensure "ias-" appears at the             * end of the name and before the '.' (if present).             */	WITHOUT_CLASSIFICATION	0.999998290782311	WITHOUT_CLASSIFICATION	1.7092176890028013E-6	DEFECT
//choose the right vendor DD	WITHOUT_CLASSIFICATION	0.9999535855731969	WITHOUT_CLASSIFICATION	4.6414426803080243E-5	DEFECT
// ejb jar file to verify	WITHOUT_CLASSIFICATION	0.9999988288451813	WITHOUT_CLASSIFICATION	1.1711548186728174E-6	DEFECT
//debug ?	WITHOUT_CLASSIFICATION	0.9999778529662929	WITHOUT_CLASSIFICATION	2.2147033707073296E-5	DEFECT
//set the classpath	WITHOUT_CLASSIFICATION	0.9999998320121853	WITHOUT_CLASSIFICATION	1.6798781466991362E-7	DEFECT
//list file	WITHOUT_CLASSIFICATION	0.9999987313173274	WITHOUT_CLASSIFICATION	1.2686826725634892E-6	DEFECT
//no TIE classes	WITHOUT_CLASSIFICATION	0.9999991184264464	WITHOUT_CLASSIFICATION	8.815735535702787E-7	DEFECT
//root dir	WITHOUT_CLASSIFICATION	0.9999061984131861	WITHOUT_CLASSIFICATION	9.380158681396997E-5	DEFECT
//compiling order	WITHOUT_CLASSIFICATION	0.9999786972504284	WITHOUT_CLASSIFICATION	2.1302749571655607E-5	DEFECT
//add the home class	WITHOUT_CLASSIFICATION	0.9999999599029533	WITHOUT_CLASSIFICATION	4.0097046767824785E-8	DEFECT
//build the home classes list.	WITHOUT_CLASSIFICATION	0.9999999726808726	WITHOUT_CLASSIFICATION	2.7319127481926422E-8	DEFECT
//remove .class extension	WITHOUT_CLASSIFICATION	0.9999952306454727	WITHOUT_CLASSIFICATION	4.769354527283683E-6	DEFECT
//add the gen files to the collection	WITHOUT_CLASSIFICATION	0.9999465506195035	WITHOUT_CLASSIFICATION	5.3449380496486E-5	DEFECT
//remove the .class	WITHOUT_CLASSIFICATION	0.9999994605726795	WITHOUT_CLASSIFICATION	5.394273204643944E-7	DEFECT
// Get the Extensions document	WITHOUT_CLASSIFICATION	0.9999995869951118	WITHOUT_CLASSIFICATION	4.1300488825889483E-7	DEFECT
// We attempt to put in the MAP and Schema files of CMP beans	WITHOUT_CLASSIFICATION	0.9999840014997875	WITHOUT_CLASSIFICATION	1.5998500212480298E-5	DEFECT
// Add the Map file	WITHOUT_CLASSIFICATION	0.99999952914655	WITHOUT_CLASSIFICATION	4.7085345003564593E-7	DEFECT
// Theres nothing else to see here...keep moving sonny	WITHOUT_CLASSIFICATION	0.9998139827529978	WITHOUT_CLASSIFICATION	1.8601724700218706E-4	DEFECT
// Set the options	WITHOUT_CLASSIFICATION	0.9999999399049811	WITHOUT_CLASSIFICATION	6.009501884880091E-8	DEFECT
// Set the JvmArgs	WITHOUT_CLASSIFICATION	0.9999997708047762	WITHOUT_CLASSIFICATION	2.291952238324628E-7	DEFECT
// Set the Environment variable	WITHOUT_CLASSIFICATION	0.9999993746801635	WITHOUT_CLASSIFICATION	6.253198365265665E-7	DEFECT
// Check if list of files to check has been specified	WITHOUT_CLASSIFICATION	0.9999997134246554	WITHOUT_CLASSIFICATION	2.865753444902637E-7	DEFECT
// Have to catch this because of the semantics of calling main()	WITHOUT_CLASSIFICATION	0.9999976438101295	WITHOUT_CLASSIFICATION	2.356189870444807E-6	DEFECT
//open jar files	WITHOUT_CLASSIFICATION	0.999998135844077	WITHOUT_CLASSIFICATION	1.8641559229578613E-6	DEFECT
//get the list of generic jar entries	WITHOUT_CLASSIFICATION	0.999999650904444	WITHOUT_CLASSIFICATION	3.4909555596684226E-7	DEFECT
//File are different see if its an object or an interface	WITHOUT_CLASSIFICATION	0.9999997532040206	WITHOUT_CLASSIFICATION	2.467959794806962E-7	DEFECT
//Interface changed   rebuild jar.	WITHOUT_CLASSIFICATION	0.9999986574304571	WITHOUT_CLASSIFICATION	1.3425695428691175E-6	DEFECT
//Object class Changed   update it.	WITHOUT_CLASSIFICATION	0.9999997931450595	WITHOUT_CLASSIFICATION	2.0685494043633267E-7	DEFECT
// is it the manifest. If so ignore it	WITHOUT_CLASSIFICATION	0.999998786047764	WITHOUT_CLASSIFICATION	1.213952236045201E-6	DEFECT
//File other then class changed   rebuild	WITHOUT_CLASSIFICATION	0.9999995806901353	WITHOUT_CLASSIFICATION	4.193098647108806E-7	DEFECT
// Update with changed Bean class	WITHOUT_CLASSIFICATION	0.9999999556096087	WITHOUT_CLASSIFICATION	4.4390391327726614E-8	DEFECT
// Use the entry from the generic jar	WITHOUT_CLASSIFICATION	0.9999996739122377	WITHOUT_CLASSIFICATION	3.260877622967065E-7	DEFECT
// register all the DTDs, both the ones that are known and // any supplied by the user	WITHOUT_CLASSIFICATION	0.9999997598951829	WITHOUT_CLASSIFICATION	2.401048171923373E-7	DEFECT
// Set the working directory	WITHOUT_CLASSIFICATION	0.9998468387137116	WITHOUT_CLASSIFICATION	1.5316128628839736E-4	DEFECT
// Set the Java class name	WITHOUT_CLASSIFICATION	0.9999999772446597	WITHOUT_CLASSIFICATION	2.2755340246165225E-8	DEFECT
// create the -generic.jar, if required	WITHOUT_CLASSIFICATION	0.9999985480975329	WITHOUT_CLASSIFICATION	1.451902467181146E-6	DEFECT
// create the "undeployed" output .jar, if required	WITHOUT_CLASSIFICATION	0.999989052360208	WITHOUT_CLASSIFICATION	1.0947639792038171E-5	DEFECT
// Only go forward if the generic and the websphere file both exist	WITHOUT_CLASSIFICATION	0.9999998708994334	WITHOUT_CLASSIFICATION	1.2910056654090595E-7	DEFECT
//get the list of websphere jar entries	WITHOUT_CLASSIFICATION	0.9999983203516266	WITHOUT_CLASSIFICATION	1.6796483734740928E-6	DEFECT
//Cycle Through generic and make sure its in websphere	WITHOUT_CLASSIFICATION	0.999928207183899	WITHOUT_CLASSIFICATION	7.179281610098873E-5	DEFECT
// File name/path match // Check files see if same	WITHOUT_CLASSIFICATION	0.9999998720424619	WITHOUT_CLASSIFICATION	1.2795753817635496E-7	DEFECT
// a file doesn't exist rebuild	WITHOUT_CLASSIFICATION	0.9999975731372142	WITHOUT_CLASSIFICATION	2.426862785881731E-6	DEFECT
//Copy files from old websphere jar	WITHOUT_CLASSIFICATION	0.999981240260671	WITHOUT_CLASSIFICATION	1.8759739328914246E-5	DEFECT
//use fle from original websphere jar	WITHOUT_CLASSIFICATION	0.9999571264617998	WITHOUT_CLASSIFICATION	4.287353820018767E-5	DEFECT
// Specification Name must match	WITHOUT_CLASSIFICATION	0.9999997197643952	WITHOUT_CLASSIFICATION	2.802356047886815E-7	DEFECT
// Available specification version must be >= required	WITHOUT_CLASSIFICATION	0.9999758666565488	WITHOUT_CLASSIFICATION	2.4133343451187023E-5	DEFECT
// Implementation Vendor ID must match	WITHOUT_CLASSIFICATION	0.9999972878379245	WITHOUT_CLASSIFICATION	2.7121620754674498E-6	DEFECT
// Implementation Vendor ID must match	WITHOUT_CLASSIFICATION	0.9999972878379245	WITHOUT_CLASSIFICATION	2.7121620754674498E-6	DEFECT
// Implementation version must be >= required	WITHOUT_CLASSIFICATION	0.9999679688278106	WITHOUT_CLASSIFICATION	3.2031172189439795E-5	DEFECT
// This available optional package satisfies the requirements	WITHOUT_CLASSIFICATION	0.9999990371302413	WITHOUT_CLASSIFICATION	9.628697587183366E-7	DEFECT
// This available optional package satisfies the requirements	WITHOUT_CLASSIFICATION	0.9999990371302413	WITHOUT_CLASSIFICATION	9.628697587183366E-7	DEFECT
//Reset list of sections	WITHOUT_CLASSIFICATION	0.999993980142995	WITHOUT_CLASSIFICATION	6.019857005052156E-6	DEFECT
// Extension Name must match	WITHOUT_CLASSIFICATION	0.9999998783036023	WITHOUT_CLASSIFICATION	1.216963978021487E-7	DEFECT
//Add all the dependency data to manifest for dependencies	WITHOUT_CLASSIFICATION	0.9999865436002228	WITHOUT_CLASSIFICATION	1.3456399777244759E-5	DEFECT
// Check if list of files to check has been specified	WITHOUT_CLASSIFICATION	0.9999997134246554	WITHOUT_CLASSIFICATION	2.865753444902637E-7	DEFECT
// CheckStyle:MemberNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9999992533506842	WITHOUT_CLASSIFICATION	7.466493157948475E-7	DEFECT
// CheckStyle:MemberNameCheck ON	WITHOUT_CLASSIFICATION	0.9999991405906014	WITHOUT_CLASSIFICATION	8.594093985893521E-7	DEFECT
// change this to get the objects from the other reference	WITHOUT_CLASSIFICATION	0.9999996986499635	WITHOUT_CLASSIFICATION	3.0135003649596797E-7	DEFECT
//Add all the dependency data to manifest for "optional" //dependencies	WITHOUT_CLASSIFICATION	0.9999875996604017	WITHOUT_CLASSIFICATION	1.2400339598178115E-5	DEFECT
//add in something like //"Extension-List: javahelp java3d"	WITHOUT_CLASSIFICATION	0.9999987382479065	WITHOUT_CLASSIFICATION	1.2617520934055533E-6	DEFECT
//all methods static	WITHOUT_CLASSIFICATION	0.9999984067390147	WITHOUT_CLASSIFICATION	1.5932609853202669E-6	DEFECT
/*     * Gets the destination file     */	WITHOUT_CLASSIFICATION	0.9999994439914094	WITHOUT_CLASSIFICATION	5.560085906977839E-7	DEFECT
/*     * Validates URL     */	WITHOUT_CLASSIFICATION	0.9999999303954854	WITHOUT_CLASSIFICATION	6.960451452496632E-8	DEFECT
//Load default locale bundle files //using default file encoding scheme.	WITHOUT_CLASSIFICATION	0.9999963284699774	WITHOUT_CLASSIFICATION	3.6715300225889485E-6	DEFECT
//if all resource files associated with this bundle //have been scanned for and still not able to //find a single resrouce file, throw exception	WITHOUT_CLASSIFICATION	0.9999858400676782	WITHOUT_CLASSIFICATION	1.4159932321868016E-5	DEFECT
//So long as the line isn't empty and isn't a comment...	WITHOUT_CLASSIFICATION	0.99999586017552	WITHOUT_CLASSIFICATION	4.1398244800654515E-6	DEFECT
//Legal Key-Value separators are :, = and white space.	WITHOUT_CLASSIFICATION	0.9999984868748778	WITHOUT_CLASSIFICATION	1.513125122185276E-6	DEFECT
//Only if we do have a key is there going to be a value	WITHOUT_CLASSIFICATION	0.998401775543329	WITHOUT_CLASSIFICATION	0.0015982244566710557	DEFECT
//Handle line continuations, if any	WITHOUT_CLASSIFICATION	0.9999987791163324	WITHOUT_CLASSIFICATION	1.2208836676113742E-6	DEFECT
//Has key already been loaded into resourceMap?	WITHOUT_CLASSIFICATION	0.9999976852846792	WITHOUT_CLASSIFICATION	2.3147153208395186E-6	DEFECT
//Make sure parent dirs exist, else, create them.	WITHOUT_CLASSIFICATION	0.9999963411861381	WITHOUT_CLASSIFICATION	3.6588138618561887E-6	DEFECT
//Check to see if dest file has to be recreated	WITHOUT_CLASSIFICATION	0.9999982487684516	WITHOUT_CLASSIFICATION	1.751231548466331E-6	DEFECT
// is there a startToken // and there is still stuff following the startToken	WITHOUT_CLASSIFICATION	0.9999120401324354	WITHOUT_CLASSIFICATION	8.795986756458785E-5	DEFECT
// we found a starttoken, is there an endtoken following? // start at token+tokenlength because start and end // token may be indentical	WITHOUT_CLASSIFICATION	0.9999937089658931	WITHOUT_CLASSIFICATION	6.291034106835095E-6	DEFECT
// grab the token	WITHOUT_CLASSIFICATION	0.9999988795520122	WITHOUT_CLASSIFICATION	1.120447987824123E-6	DEFECT
// If there is a white space or = or :, then // it isn't to be treated as a valid key.	WITHOUT_CLASSIFICATION	0.9999987287655642	WITHOUT_CLASSIFICATION	1.2712344358790695E-6	DEFECT
// find the replace string	WITHOUT_CLASSIFICATION	0.999999933772337	WITHOUT_CLASSIFICATION	6.622766301906152E-8	DEFECT
// generate the new line	WITHOUT_CLASSIFICATION	0.9999999390066606	WITHOUT_CLASSIFICATION	6.099333940496005E-8	DEFECT
// set start position for next search	WITHOUT_CLASSIFICATION	0.9999408889854952	WITHOUT_CLASSIFICATION	5.911101450482119E-5	DEFECT
// find next starttoken	WITHOUT_CLASSIFICATION	0.9999842556340965	WITHOUT_CLASSIFICATION	1.5744365903478896E-5	DEFECT
// deal with specified srcDir	WITHOUT_CLASSIFICATION	0.9999999424147935	WITHOUT_CLASSIFICATION	5.758520647318497E-8	DEFECT
// deal with the filesets	WITHOUT_CLASSIFICATION	0.9999997996748318	WITHOUT_CLASSIFICATION	2.0032516825889304E-7	DEFECT
// remove any files that shouldn't be overwritten.	WITHOUT_CLASSIFICATION	0.9999958815380351	WITHOUT_CLASSIFICATION	4.118461965002735E-6	DEFECT
// check that the password has been set	WITHOUT_CLASSIFICATION	0.9999997122790278	WITHOUT_CLASSIFICATION	2.877209722134789E-7	DEFECT
// check for missing application on deploy & update	WITHOUT_CLASSIFICATION	0.9999965386880844	WITHOUT_CLASSIFICATION	3.461311915737297E-6	DEFECT
// check for missing source on deploy & update	WITHOUT_CLASSIFICATION	0.9999994184048054	WITHOUT_CLASSIFICATION	5.815951946122025E-7	DEFECT
// check for missing application on delete & undeploy	WITHOUT_CLASSIFICATION	0.9999989768559973	WITHOUT_CLASSIFICATION	1.0231440028230828E-6	DEFECT
// keys to optional attributes	WITHOUT_CLASSIFICATION	0.9999992893659263	WITHOUT_CLASSIFICATION	7.106340737110908E-7	DEFECT
// constructs the "-url <url> -debug <action> <password>" portion // of the commmand line	WITHOUT_CLASSIFICATION	0.9999708604276359	WITHOUT_CLASSIFICATION	2.9139572364135518E-5	DEFECT
/////////////////////////////////////////////////////////////////////////// // // Place vendor specific tool creations here. // ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999967534561464	WITHOUT_CLASSIFICATION	3.246543853752989E-6	DEFECT
/////////////////////////////////////////////////////////////////////////// // // Execute method // ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999991231138115	WITHOUT_CLASSIFICATION	8.768861885297236E-7	DEFECT
/////////////////////////////////////////////////////////////////////////// // // Set/get methods // ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.999999589594044	WITHOUT_CLASSIFICATION	4.104059559907847E-7	DEFECT
// keys to optional attributes	WITHOUT_CLASSIFICATION	0.9999992893659263	WITHOUT_CLASSIFICATION	7.106340737110908E-7	DEFECT
// convert backslashes to slashes, otherwise jjtree will // put this as comments and this seems to confuse javacc	WITHOUT_CLASSIFICATION	0.9999977286949265	WITHOUT_CLASSIFICATION	2.271305073518092E-6	DEFECT
// required attributes	WITHOUT_CLASSIFICATION	0.999998771695893	WITHOUT_CLASSIFICATION	1.2283041069320914E-6	DEFECT
// required attributes	WITHOUT_CLASSIFICATION	0.999998771695893	WITHOUT_CLASSIFICATION	1.2283041069320914E-6	DEFECT
// required attributes	WITHOUT_CLASSIFICATION	0.999998771695893	WITHOUT_CLASSIFICATION	1.2283041069320914E-6	DEFECT
// load command line with optional attributes	WITHOUT_CLASSIFICATION	0.9999996009129222	WITHOUT_CLASSIFICATION	3.9908707778943015E-7	DEFECT
// load command line with optional attributes	WITHOUT_CLASSIFICATION	0.9999996009129222	WITHOUT_CLASSIFICATION	3.9908707778943015E-7	DEFECT
// load command line with optional attributes	WITHOUT_CLASSIFICATION	0.9999996009129222	WITHOUT_CLASSIFICATION	3.9908707778943015E-7	DEFECT
// use the directory containing the target as the output directory	WITHOUT_CLASSIFICATION	0.9999999876350749	WITHOUT_CLASSIFICATION	1.236492518109975E-8	DEFECT
// use the directory containing the target as the output directory	WITHOUT_CLASSIFICATION	0.9999999876350749	WITHOUT_CLASSIFICATION	1.236492518109975E-8	DEFECT
// used by jpackage for JavaCC 3.x	WITHOUT_CLASSIFICATION	0.9999997064953818	WITHOUT_CLASSIFICATION	2.935046181622971E-7	DEFECT
// check the target is a file	WITHOUT_CLASSIFICATION	0.9999999858170587	WITHOUT_CLASSIFICATION	1.4182941168811113E-8	DEFECT
// determine if the generated java file is up-to-date	WITHOUT_CLASSIFICATION	0.999999990769862	WITHOUT_CLASSIFICATION	9.230138027209865E-9	DEFECT
// Extract file's base-name	WITHOUT_CLASSIFICATION	0.9999997724098845	WITHOUT_CLASSIFICATION	2.2759011551243194E-7	DEFECT
// Replace the file's extension with '.java'	WITHOUT_CLASSIFICATION	0.9999998875586317	WITHOUT_CLASSIFICATION	1.124413683271957E-7	DEFECT
// Change the directory	WITHOUT_CLASSIFICATION	0.9999999321837106	WITHOUT_CLASSIFICATION	6.781628930087189E-8	DEFECT
// This default has been good enough until Ant 1.6.3, so stick // with it	WITHOUT_CLASSIFICATION	0.9999914678722296	WITHOUT_CLASSIFICATION	8.532127770416598E-6	DEFECT
// first search for the "old" javah class in 1.4.2 tools.jar	WITHOUT_CLASSIFICATION	0.9999997745961543	WITHOUT_CLASSIFICATION	2.2540384582829022E-7	DEFECT
// assume older than 1.4.2 tools.jar	WITHOUT_CLASSIFICATION	0.9999998995157828	WITHOUT_CLASSIFICATION	1.0048421707477212E-7	DEFECT
//private CommandlineJava commandline = new CommandlineJava();	WITHOUT_CLASSIFICATION	0.9999992020898508	WITHOUT_CLASSIFICATION	7.979101491022663E-7	DEFECT
// required attributes // Deprecated! // Use this going forward	WITHOUT_CLASSIFICATION	0.999999716798294	WITHOUT_CLASSIFICATION	2.832017059450429E-7	DEFECT
// optional attributes	WITHOUT_CLASSIFICATION	0.9999999431242171	WITHOUT_CLASSIFICATION	5.687578281420644E-8	DEFECT
// execute the test and get the return code	WITHOUT_CLASSIFICATION	0.9999997523283085	WITHOUT_CLASSIFICATION	2.4767169153451986E-7	DEFECT
// if there is an error/failure and that it should halt, stop // everything otherwise just log a statement	WITHOUT_CLASSIFICATION	0.9999982998875995	WITHOUT_CLASSIFICATION	1.7001124004785024E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999995287844801	WITHOUT_CLASSIFICATION	4.7121551989690683E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999995287844801	WITHOUT_CLASSIFICATION	4.7121551989690683E-7	DEFECT
/* int accessFlags = */	WITHOUT_CLASSIFICATION	0.9999982978612019	WITHOUT_CLASSIFICATION	1.7021387982051521E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999995133297559	WITHOUT_CLASSIFICATION	4.86670244023277E-7	DEFECT
// not necessary as JDepend would fail, but why loose // some time?	WITHOUT_CLASSIFICATION	0.9999892414402778	WITHOUT_CLASSIFICATION	1.0758559722201784E-5	DEFECT
// This bit turns <exclude> child tags into patters to ignore	WITHOUT_CLASSIFICATION	0.9999818365836423	WITHOUT_CLASSIFICATION	1.816341635774571E-5	DEFECT
// JL: comment extracted from JUnitTask (and slightly modified)	WITHOUT_CLASSIFICATION	0.9999814854802164	WITHOUT_CLASSIFICATION	1.85145197836871E-5	DEFECT
// if not set, auto-create the ClassPath from the project	WITHOUT_CLASSIFICATION	0.9999992246162822	WITHOUT_CLASSIFICATION	7.753837178067694E-7	DEFECT
// having a space between the file and its path causes commandline // to add quotes around the argument thus making JDepend not taking // it into account. Thus we split it in two	WITHOUT_CLASSIFICATION	0.9998944266468712	WITHOUT_CLASSIFICATION	1.0557335312878464E-4	DEFECT
// This is the new way - use classespath - code is the // same for now	WITHOUT_CLASSIFICATION	0.9999667237310218	WITHOUT_CLASSIFICATION	3.3276268978217376E-5	DEFECT
// read in all constant pool entries.	WITHOUT_CLASSIFICATION	0.9999970309939311	WITHOUT_CLASSIFICATION	2.969006068817468E-6	DEFECT
// verify this is a valid class file.	WITHOUT_CLASSIFICATION	0.9999995284631185	WITHOUT_CLASSIFICATION	4.715368815289374E-7	DEFECT
/* int version = */	WITHOUT_CLASSIFICATION	0.9999535781858985	WITHOUT_CLASSIFICATION	4.642181410156016E-5	DEFECT
// read the constant pool.	WITHOUT_CLASSIFICATION	0.9999996074227752	WITHOUT_CLASSIFICATION	3.925772248740696E-7	DEFECT
// read access flags and class index.	WITHOUT_CLASSIFICATION	0.9999911520108837	WITHOUT_CLASSIFICATION	8.84798911634775E-6	DEFECT
//Be sure everything has been set.	WITHOUT_CLASSIFICATION	0.9999738879505574	WITHOUT_CLASSIFICATION	2.611204944247404E-5	DEFECT
//Do the merge	WITHOUT_CLASSIFICATION	0.9999982389713639	WITHOUT_CLASSIFICATION	1.7610286360365298E-6	DEFECT
//Add this file to the addfiles Vector and add it //later at the top level of the output file.	WITHOUT_CLASSIFICATION	0.9999991659929615	WITHOUT_CLASSIFICATION	8.340070385060564E-7	DEFECT
//do nothing	WITHOUT_CLASSIFICATION	0.9999717788494624	WITHOUT_CLASSIFICATION	2.8221150537485722E-5	DEFECT
// jlink output input1 ... inputN	WITHOUT_CLASSIFICATION	0.9997593631076812	WITHOUT_CLASSIFICATION	2.4063689231868305E-4	DEFECT
// To maintain compatibility with the command-line version, // we will only add files to be merged.	WITHOUT_CLASSIFICATION	0.9999990832570971	WITHOUT_CLASSIFICATION	9.167429028869169E-7	DEFECT
/*     * Actually performs the merging of f into the output.     * f should be a zip or jar file.     */	WITHOUT_CLASSIFICATION	0.9999950705732398	WITHOUT_CLASSIFICATION	4.929426760199966E-6	DEFECT
//Check to see that the file with name "name" exists.	WITHOUT_CLASSIFICATION	0.9999997692596619	WITHOUT_CLASSIFICATION	2.3074033796544412E-7	DEFECT
//META-INF not found in the name of the entry. Go ahead and process it.	WITHOUT_CLASSIFICATION	0.9999586016554656	WITHOUT_CLASSIFICATION	4.1398344534545214E-5	DEFECT
//Weblogic jspc does not seem to work unless u explicitly set this... // Does not take the classpath from the env.... // Am i missing something about the Java task??	WITHOUT_CLASSIFICATION	0.9997295367704025	WITHOUT_CLASSIFICATION	2.7046322959742856E-4	DEFECT
//do nothing	WITHOUT_CLASSIFICATION	0.9999717788494624	WITHOUT_CLASSIFICATION	2.8221150537485722E-5	DEFECT
/*     * Necessary in the case where you add a entry that     * is not compressed.     */	WITHOUT_CLASSIFICATION	0.9999957009793095	WITHOUT_CLASSIFICATION	4.299020690562217E-6	DEFECT
//Ignore manifest entries.  They're bound to cause conflicts between //files that are being merged.  User should supply their own //manifest file when doing the merge.	WITHOUT_CLASSIFICATION	0.9999903037405262	WITHOUT_CLASSIFICATION	9.696259473789883E-6	DEFECT
//It was the duplicate entry.	WITHOUT_CLASSIFICATION	0.9999989973304199	WITHOUT_CLASSIFICATION	1.0026695800618816E-6	DEFECT
/*     * Adds contents of a directory to the output.     */	WITHOUT_CLASSIFICATION	0.9999985480607555	WITHOUT_CLASSIFICATION	1.4519392444480219E-6	DEFECT
/*     * Gets the name of an entry in the file.  This is the real name     * which for a class is the name of the package with the class     * name appended.     */	WITHOUT_CLASSIFICATION	0.9999985916822379	WITHOUT_CLASSIFICATION	1.4083177620927024E-6	DEFECT
// see if the file is in fact a .class file, and determine its actual name.	WITHOUT_CLASSIFICATION	0.9999999727847078	WITHOUT_CLASSIFICATION	2.721529225632016E-8	DEFECT
/*     * Adds a file to the output stream.     */	WITHOUT_CLASSIFICATION	0.9999997227398147	WITHOUT_CLASSIFICATION	2.7726018530530505E-7	DEFECT
//Make sure file exists	WITHOUT_CLASSIFICATION	0.999996495214952	WITHOUT_CLASSIFICATION	3.5047850480671505E-6	DEFECT
/*     * A convenience method that several other methods might call.     */	WITHOUT_CLASSIFICATION	0.9999999717033634	WITHOUT_CLASSIFICATION	2.8296636639766786E-8	DEFECT
//This entry already exists. So, go with the first one.	WITHOUT_CLASSIFICATION	0.9999921829875791	WITHOUT_CLASSIFICATION	7.817012420851125E-6	DEFECT
/*     * A method that does the work on a given entry in a mergefile.     * The big deal is to set the right parameters in the ZipEntry     * on the output stream.     */	WITHOUT_CLASSIFICATION	0.9992481988445443	WITHOUT_CLASSIFICATION	7.518011554556138E-4	DEFECT
//Note, don't need to specify size or crc for compressed files.	WITHOUT_CLASSIFICATION	0.9999983086060268	WITHOUT_CLASSIFICATION	1.6913939732166919E-6	DEFECT
//use the systemclasspath as well, to include the ant jar	WITHOUT_CLASSIFICATION	0.9999990616226423	WITHOUT_CLASSIFICATION	9.383773577777442E-7	DEFECT
/*     * Necessary in the case where you add a entry that     * is not compressed.     */	WITHOUT_CLASSIFICATION	0.9999957009793095	WITHOUT_CLASSIFICATION	4.299020690562217E-6	DEFECT
//TODO Test on other versions of weblogic //TODO add more attributes to the task, to take care of all jspc options //TODO Test on Unix	WITHOUT_CLASSIFICATION	0.9999748949783565	WITHOUT_CLASSIFICATION	2.510502164364435E-5	DEFECT
//private String compilerPath; //fully qualified name for the compiler executable	WITHOUT_CLASSIFICATION	0.9999994163812828	WITHOUT_CLASSIFICATION	5.836187173396814E-7	DEFECT
// get all the files in the sourceDirectory	WITHOUT_CLASSIFICATION	0.9999976244524537	WITHOUT_CLASSIFICATION	2.3755475463167906E-6	DEFECT
//Weblogic.jspc calls System.exit() ... have to fork // Therefore, takes loads of time // Can pass directories at a time (*.jsp) but easily runs out of // memory on hefty dirs (even on  a Sun)	WITHOUT_CLASSIFICATION	0.9984347675513296	WITHOUT_CLASSIFICATION	0.0015652324486703645	DEFECT
// apply transformation	WITHOUT_CLASSIFICATION	0.9999994118176878	WITHOUT_CLASSIFICATION	5.881823122271881E-7	DEFECT
//end class	WITHOUT_CLASSIFICATION	0.9999992950614758	WITHOUT_CLASSIFICATION	7.049385242800135E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999995287844801	WITHOUT_CLASSIFICATION	4.7121551989690683E-7	DEFECT
// CheckStyle:ConstantNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9999989122270567	WITHOUT_CLASSIFICATION	1.0877729433110442E-6	DEFECT
// CheckStyle:ConstantNameCheck ON	WITHOUT_CLASSIFICATION	0.9999986047098379	WITHOUT_CLASSIFICATION	1.3952901620316304E-6	DEFECT
// now we need to populate the compiler adapter	WITHOUT_CLASSIFICATION	0.9999994227938132	WITHOUT_CLASSIFICATION	5.77206186763007E-7	DEFECT
// finally, lets execute the compiler!!	WITHOUT_CLASSIFICATION	0.9999836274029463	WITHOUT_CLASSIFICATION	1.6372597053720634E-5	DEFECT
// Create an instance of the compiler, redirecting output to // the project log	WITHOUT_CLASSIFICATION	0.9999986205009006	WITHOUT_CLASSIFICATION	1.37949909950309E-6	DEFECT
// compile the source files	WITHOUT_CLASSIFICATION	0.999999980146512	WITHOUT_CLASSIFICATION	1.9853487870950675E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999995133297559	WITHOUT_CLASSIFICATION	4.86670244023277E-7	DEFECT
//demand create vector of filesets	WITHOUT_CLASSIFICATION	0.9999810064910372	WITHOUT_CLASSIFICATION	1.899350896293803E-5	DEFECT
// make sure that we've got a destdir	WITHOUT_CLASSIFICATION	0.9999970028695733	WITHOUT_CLASSIFICATION	2.9971304267856016E-6	DEFECT
//bind to a compiler	WITHOUT_CLASSIFICATION	0.9999875902711517	WITHOUT_CLASSIFICATION	1.2409728848419087E-5	DEFECT
//if we are a webapp, hand off to the compiler, which had better handle it	WITHOUT_CLASSIFICATION	0.9999987094536339	WITHOUT_CLASSIFICATION	1.290546366100043E-6	DEFECT
// make sure that we've got a srcdir	WITHOUT_CLASSIFICATION	0.9999977457546628	WITHOUT_CLASSIFICATION	2.2542453370681777E-6	DEFECT
// if the compiler does its own dependency stuff, we just call it right now	WITHOUT_CLASSIFICATION	0.9999932869075256	WITHOUT_CLASSIFICATION	6.7130924743439044E-6	DEFECT
//the remainder of this method is only for compilers that need their dependency work done	WITHOUT_CLASSIFICATION	0.9983949211987282	WITHOUT_CLASSIFICATION	0.0016050788012718189	DEFECT
// scan source directories and dest directory to build up both copy // lists and compile lists	WITHOUT_CLASSIFICATION	0.9999999686686503	WITHOUT_CLASSIFICATION	3.133134969807712E-8	DEFECT
//        String srcFileDir=srcFile.getParent();	WITHOUT_CLASSIFICATION	0.9999993704806962	WITHOUT_CLASSIFICATION	6.295193038122186E-7	DEFECT
//end inner class	WITHOUT_CLASSIFICATION	0.999999036152871	WITHOUT_CLASSIFICATION	9.638471289915989E-7	DEFECT
// since we don't mangle extensions like the servlet does, // we need to check for keywords as class names	WITHOUT_CLASSIFICATION	0.9999997331967687	WITHOUT_CLASSIFICATION	2.668032313211215E-7	DEFECT
// first char is more restrictive than the rest	WITHOUT_CLASSIFICATION	0.9999997012523658	WITHOUT_CLASSIFICATION	2.987476341318216E-7	DEFECT
// this is the rest	WITHOUT_CLASSIFICATION	0.9999951043649089	WITHOUT_CLASSIFICATION	4.895635091152557E-6	DEFECT
// If the first char is not a start of Java identifier or is _ // prepend a '_'.	WITHOUT_CLASSIFICATION	0.9999998699562598	WITHOUT_CLASSIFICATION	1.3004374019908284E-7	DEFECT
//we are forking here to be sure that if JspC calls //System.exit() it doesn't halt the build	WITHOUT_CLASSIFICATION	0.9999509489385673	WITHOUT_CLASSIFICATION	4.905106143273154E-5	DEFECT
//tomcat4.0 gets the old mangler	WITHOUT_CLASSIFICATION	0.9999947639642917	WITHOUT_CLASSIFICATION	5.2360357083439105E-6	DEFECT
//tomcat4.1 gets the new one	WITHOUT_CLASSIFICATION	0.9999980570199792	WITHOUT_CLASSIFICATION	1.942980020863916E-6	DEFECT
// for all other possibilities	WITHOUT_CLASSIFICATION	0.9999998130690482	WITHOUT_CLASSIFICATION	1.869309518204429E-7	DEFECT
// append the err and output streams to the log	WITHOUT_CLASSIFICATION	0.9999889071202451	WITHOUT_CLASSIFICATION	1.10928797547948E-5	DEFECT
// acrobatic cast.	WITHOUT_CLASSIFICATION	0.9999997780716668	WITHOUT_CLASSIFICATION	2.2192833309669799E-7	DEFECT
// set the destination directory relative from the project if needed.	WITHOUT_CLASSIFICATION	0.9999970898406564	WITHOUT_CLASSIFICATION	2.9101593436974725E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999995287844801	WITHOUT_CLASSIFICATION	4.7121551989690683E-7	DEFECT
// sanity check	WITHOUT_CLASSIFICATION	0.9999997598487818	WITHOUT_CLASSIFICATION	2.40151218271085E-7	DEFECT
// plain impossible	WITHOUT_CLASSIFICATION	0.9999997173432109	WITHOUT_CLASSIFICATION	2.826567891075907E-7	DEFECT
// Quick return - no output do nothing.	WITHOUT_CLASSIFICATION	0.9999985113910025	WITHOUT_CLASSIFICATION	1.4886089974693934E-6	DEFECT
// append the err and output streams to the log	WITHOUT_CLASSIFICATION	0.9999889071202451	WITHOUT_CLASSIFICATION	1.10928797547948E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999995133297559	WITHOUT_CLASSIFICATION	4.86670244023277E-7	DEFECT
// If style dir is not specified we have to retrieve // the stylesheet from the classloader	WITHOUT_CLASSIFICATION	0.9999917512315287	WITHOUT_CLASSIFICATION	8.248768471300249E-6	DEFECT
// If we are here, then the style dir is here and we // should read the stylesheet from the filesystem	WITHOUT_CLASSIFICATION	0.9999892523143408	WITHOUT_CLASSIFICATION	1.0747685659152577E-5	DEFECT
// xalan 2	WITHOUT_CLASSIFICATION	0.9999933961488249	WITHOUT_CLASSIFICATION	6.603851175087115E-6	DEFECT
// xalan xsltc	WITHOUT_CLASSIFICATION	0.999997914622433	WITHOUT_CLASSIFICATION	2.085377566970695E-6	DEFECT
// jdk 1.5 xsltc	WITHOUT_CLASSIFICATION	0.9999986419667249	WITHOUT_CLASSIFICATION	1.3580332750305746E-6	DEFECT
// must be plain, ensured by TypeAttribute	WITHOUT_CLASSIFICATION	0.9999998842641792	WITHOUT_CLASSIFICATION	1.1573582080123848E-7	DEFECT
// pre JUnit 3.7	WITHOUT_CLASSIFICATION	0.9999988272130239	WITHOUT_CLASSIFICATION	1.1727869761492207E-6	DEFECT
// can be null if an error occurred in setUp	WITHOUT_CLASSIFICATION	0.9999996130588537	WITHOUT_CLASSIFICATION	3.8694114636706705E-7	DEFECT
// PlainJUnitResultFormatter	WITHOUT_CLASSIFICATION	0.9999999400226417	WITHOUT_CLASSIFICATION	5.997735832982741E-8	DEFECT
// Snapshot of the system properties	WITHOUT_CLASSIFICATION	0.9997742377441398	WITHOUT_CLASSIFICATION	2.2576225586025823E-4	DEFECT
//add the timestamp	WITHOUT_CLASSIFICATION	0.9999995753881842	WITHOUT_CLASSIFICATION	4.246118158586363E-7	DEFECT
//and the hostname.	WITHOUT_CLASSIFICATION	0.9999988444826897	WITHOUT_CLASSIFICATION	1.1555173102593686E-6	DEFECT
// Output properties	WITHOUT_CLASSIFICATION	0.9999746943987111	WITHOUT_CLASSIFICATION	2.5305601288874545E-5	DEFECT
// a TestSuite can contain Tests from multiple classes, // even tests with the same name - disambiguate them.	WITHOUT_CLASSIFICATION	0.999999985143096	WITHOUT_CLASSIFICATION	1.4856904049501692E-8	DEFECT
// XMLJUnitResultFormatter	WITHOUT_CLASSIFICATION	0.9999980828989042	WITHOUT_CLASSIFICATION	1.9171010958280735E-6	DEFECT
// Do we send output to the formatters ?	WITHOUT_CLASSIFICATION	0.9999996149929524	WITHOUT_CLASSIFICATION	3.8500704752488674E-7	DEFECT
//   Attributes for basetest	WITHOUT_CLASSIFICATION	0.9999969765847807	WITHOUT_CLASSIFICATION	3.0234152192094932E-6	DEFECT
// forceLoadClass is not convenient here since it would not // properly deal with inner classes of these classes.	WITHOUT_CLASSIFICATION	0.9876973459771372	WITHOUT_CLASSIFICATION	0.012302654022862748	DEFECT
/* forkMode.getValue().equals(ForkMode.PER_BATCH) */	WITHOUT_CLASSIFICATION	0.9999955244572349	WITHOUT_CLASSIFICATION	4.475542765075187E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999995287844801	WITHOUT_CLASSIFICATION	4.7121551989690683E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999991944890897	WITHOUT_CLASSIFICATION	8.055109103529937E-7	DEFECT
// execute the test and get the return code	WITHOUT_CLASSIFICATION	0.9999997523283085	WITHOUT_CLASSIFICATION	2.4767169153451986E-7	DEFECT
// execute the test and get the return code	WITHOUT_CLASSIFICATION	0.9999997523283085	WITHOUT_CLASSIFICATION	2.4767169153451986E-7	DEFECT
// null watchdog means no timeout, you'd better not check with null	WITHOUT_CLASSIFICATION	0.9999991444920393	WITHOUT_CLASSIFICATION	8.5550796064996E-7	DEFECT
// if there is an error/failure and that it should halt, stop // everything otherwise just log a statement	WITHOUT_CLASSIFICATION	0.9999982998875995	WITHOUT_CLASSIFICATION	1.7001124004785024E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999995133297559	WITHOUT_CLASSIFICATION	4.86670244023277E-7	DEFECT
// set the default values if not specified //@todo should be moved to the test class instead.	WITHOUT_CLASSIFICATION	0.9999999912482932	WITHOUT_CLASSIFICATION	8.751706784111069E-9	DEFECT
// Create a temporary file to pass the test cases to run to // the runner (one test case per line)	WITHOUT_CLASSIFICATION	0.9999978334115304	WITHOUT_CLASSIFICATION	2.1665884696804696E-6	DEFECT
// #31885	WITHOUT_CLASSIFICATION	0.9999935840552631	WITHOUT_CLASSIFICATION	6.4159447368680465E-6	DEFECT
// ignored.	WITHOUT_CLASSIFICATION	0.9999985837451197	WITHOUT_CLASSIFICATION	1.4162548803224158E-6	DEFECT
// in VM is not very nice since it could probably hang the // whole build. IMHO this method should be avoided and it would be best // to remove it in future versions. TBD. (SBa)	WITHOUT_CLASSIFICATION	0.5152654811181013	DEFECT	0.4847345188818987	WITHOUT_CLASSIFICATION
// make sure the test will be accepted as a TestCase	WITHOUT_CLASSIFICATION	0.9999999071377206	WITHOUT_CLASSIFICATION	9.286227946873659E-8	DEFECT
// make sure the test annotation are accepted	WITHOUT_CLASSIFICATION	0.9999983655752138	WITHOUT_CLASSIFICATION	1.634424786178547E-6	DEFECT
// will cause trouble in JDK 1.1 if omitted	WITHOUT_CLASSIFICATION	0.9999996722717049	WITHOUT_CLASSIFICATION	3.277282950864456E-7	DEFECT
// local copy since LogOutputStream.task is private	WITHOUT_CLASSIFICATION	0.9999944587553469	WITHOUT_CLASSIFICATION	5.541244653127803E-6	DEFECT
// this one is here because the changes to support ResourceCollections // have broken Magic's JUnitTestTask. // // The task adds a FileSet to a BatchTest instance using the // Java API and without telling the FileSet about its project // instance.  The original code would pass in project on the // call to getDirectoryScanner - which is now hidden deep into // Resources.iterator() and not reachable.	WITHOUT_CLASSIFICATION	0.999918212780433	WITHOUT_CLASSIFICATION	8.178721956701277E-5	DEFECT
// dummy output for the framed report // it's all done by extension...	WITHOUT_CLASSIFICATION	0.9999901637749358	WITHOUT_CLASSIFICATION	9.836225064224162E-6	DEFECT
// conforming to NodeList interface	WITHOUT_CLASSIFICATION	0.9999770447788351	WITHOUT_CLASSIFICATION	2.2955221164939725E-5	DEFECT
// this should never happen	WITHOUT_CLASSIFICATION	0.9999876100671693	WITHOUT_CLASSIFICATION	1.238993283079315E-5	DEFECT
// write the document	WITHOUT_CLASSIFICATION	0.9999993669541817	WITHOUT_CLASSIFICATION	6.330458183250037E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999995133297559	WITHOUT_CLASSIFICATION	4.86670244023277E-7	DEFECT
//----- from now, the methods are all related to DOM tree manipulation	WITHOUT_CLASSIFICATION	0.9997936197482443	WITHOUT_CLASSIFICATION	2.0638025175561593E-4	DEFECT
// writers do not throw exceptions, so check for them.	WITHOUT_CLASSIFICATION	0.9999976316579654	WITHOUT_CLASSIFICATION	2.368342034676582E-6	DEFECT
// create the dom tree	WITHOUT_CLASSIFICATION	0.9999999573055346	WITHOUT_CLASSIFICATION	4.269446538213994E-8	DEFECT
// get all files and add them to the document	WITHOUT_CLASSIFICATION	0.9999992397257781	WITHOUT_CLASSIFICATION	7.602742218436657E-7	DEFECT
// make sure that this is REALLY a testsuite.	WITHOUT_CLASSIFICATION	0.9999996796583104	WITHOUT_CLASSIFICATION	3.2034168963638195E-7	DEFECT
//wrong root element name // issue a warning.	WITHOUT_CLASSIFICATION	0.9979848418777134	WITHOUT_CLASSIFICATION	0.002015158122286556	DEFECT
// a testcase might have failed and write a zero-length document, // It has already failed, but hey.... mm. just put a warning	WITHOUT_CLASSIFICATION	0.999999474847335	WITHOUT_CLASSIFICATION	5.251526650015223E-7	DEFECT
// a missing . might imply no package at all. Don't get fooled.	WITHOUT_CLASSIFICATION	0.9999824389412797	WITHOUT_CLASSIFICATION	1.756105872023787E-5	DEFECT
// modify the name attribute and set the package	WITHOUT_CLASSIFICATION	0.9999998684317535	WITHOUT_CLASSIFICATION	1.315682465052998E-7	DEFECT
// don't filter AssertionFailure	WITHOUT_CLASSIFICATION	0.9999720108204573	WITHOUT_CLASSIFICATION	2.7989179542707266E-5	DEFECT
// JUnit 4 support:	WITHOUT_CLASSIFICATION	0.9999870333766815	WITHOUT_CLASSIFICATION	1.296662331846205E-5	DEFECT
// check for a static suite method first, even when using // JUnit 4	WITHOUT_CLASSIFICATION	0.9999999575243705	WITHOUT_CLASSIFICATION	4.2475629393485655E-8	DEFECT
// check if there is a suite method	WITHOUT_CLASSIFICATION	0.9999997373657589	WITHOUT_CLASSIFICATION	2.626342412003863E-7	DEFECT
// no appropriate suite method found. We don't report any // error here since it might be perfectly normal.	WITHOUT_CLASSIFICATION	0.9996837061131136	WITHOUT_CLASSIFICATION	3.162938868864493E-4	DEFECT
// Check for JDK 5 first. Will *not* help on JDK 1.4 // if only junit-4.0.jar in CP because in that case // linkage of whole task will already have failed! But // will help if CP has junit-3.8.2.jar:junit-4.0.jar.	WITHOUT_CLASSIFICATION	0.9999991518042005	WITHOUT_CLASSIFICATION	8.481957993994999E-7	DEFECT
// In that case first C.fN will fail with CNFE and we // will avoid UnsupportedClassVersionError.	WITHOUT_CLASSIFICATION	0.9999975149112863	WITHOUT_CLASSIFICATION	2.485088713771791E-6	DEFECT
// OK, fall back to JUnit 3.	WITHOUT_CLASSIFICATION	0.9999962302832751	WITHOUT_CLASSIFICATION	3.7697167249495826E-6	DEFECT
// Let's use it!	WITHOUT_CLASSIFICATION	0.999996528265103	WITHOUT_CLASSIFICATION	3.4717348969413527E-6	DEFECT
// Use JUnit 3.	WITHOUT_CLASSIFICATION	0.9999994214541399	WITHOUT_CLASSIFICATION	5.785458600819612E-7	DEFECT
// try to extract a test suite automatically this // will generate warnings if the class is no // suitable Test	WITHOUT_CLASSIFICATION	0.999999823064641	WITHOUT_CLASSIFICATION	1.7693535893563542E-7	DEFECT
// had an exception constructing suite	WITHOUT_CLASSIFICATION	0.9999999257045322	WITHOUT_CLASSIFICATION	7.4295467841185E-8	DEFECT
// Add/overlay system properties on the properties from the Ant project	WITHOUT_CLASSIFICATION	0.9987360263090523	WITHOUT_CLASSIFICATION	0.0012639736909477223	DEFECT
// return the stack unfiltered	WITHOUT_CLASSIFICATION	0.9999989669728366	WITHOUT_CLASSIFICATION	1.0330271634319504E-6	DEFECT
// Not strictly necessary but probably desirable. // JUnit 4-specific test GUIs will show just "failures". // But Ant's output shows "failures" vs. "errors". // We would prefer to show "failure" for things that logically are.	WITHOUT_CLASSIFICATION	0.9999997639139601	WITHOUT_CLASSIFICATION	2.360860399312698E-7	DEFECT
// To compile on pre-JDK 4 (even though this should always succeed):	WITHOUT_CLASSIFICATION	0.9999963720733656	WITHOUT_CLASSIFICATION	3.6279266344772957E-6	DEFECT
// pre-3.4	WITHOUT_CLASSIFICATION	0.9999996174013928	WITHOUT_CLASSIFICATION	3.825986072860252E-7	DEFECT
// JUnitTestRunner	WITHOUT_CLASSIFICATION	0.9999996543482222	WITHOUT_CLASSIFICATION	3.4565177770383114E-7	DEFECT
//rethrow	WITHOUT_CLASSIFICATION	0.999560758835495	WITHOUT_CLASSIFICATION	4.392411645049657E-4	DEFECT
//wrap	WITHOUT_CLASSIFICATION	0.9999625221081638	WITHOUT_CLASSIFICATION	3.747789183615174E-5	DEFECT
// sorted by newest Kaffe version first	WITHOUT_CLASSIFICATION	0.9999777501191802	WITHOUT_CLASSIFICATION	2.2249880819813276E-5	DEFECT
// pre Kaffe 1.1.5	WITHOUT_CLASSIFICATION	0.9999990641703977	WITHOUT_CLASSIFICATION	9.358296022772025E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999995287844801	WITHOUT_CLASSIFICATION	4.7121551989690683E-7	DEFECT
// we are going to scan everything anyway	WITHOUT_CLASSIFICATION	0.9999792746386276	WITHOUT_CLASSIFICATION	2.0725361372428145E-5	DEFECT
// only scan directories that can include matched files or // directories	WITHOUT_CLASSIFICATION	0.9999978736987593	WITHOUT_CLASSIFICATION	2.1263012407360938E-6	DEFECT
// avoid double scanning of directories, can only happen in fast mode	WITHOUT_CLASSIFICATION	0.999988461696094	WITHOUT_CLASSIFICATION	1.1538303905901316E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999991944890897	WITHOUT_CLASSIFICATION	8.055109103529937E-7	DEFECT
// This default has been good enough until Ant 1.6.3, so stick // with it	WITHOUT_CLASSIFICATION	0.9999914678722296	WITHOUT_CLASSIFICATION	8.532127770416598E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999995133297559	WITHOUT_CLASSIFICATION	4.86670244023277E-7	DEFECT
// Rats. // should not happen	WITHOUT_CLASSIFICATION	0.9999499383467266	WITHOUT_CLASSIFICATION	5.0061653273436696E-5	DEFECT
// otherwise ExecuteJava has thrown an exception	WITHOUT_CLASSIFICATION	0.9999965163476503	WITHOUT_CLASSIFICATION	3.4836523495725054E-6	DEFECT
// No includes supplied, so set it to 'matches all'	WITHOUT_CLASSIFICATION	0.9999999398646557	WITHOUT_CLASSIFICATION	6.013534423256398E-8	DEFECT
// always start from the current ftp working dir	WITHOUT_CLASSIFICATION	0.999865936666044	WITHOUT_CLASSIFICATION	1.340633339560119E-4	DEFECT
// put in the newroots vector the include patterns without // wildcard tokens	WITHOUT_CLASSIFICATION	0.9999812292365571	WITHOUT_CLASSIFICATION	1.8770763442912233E-5	DEFECT
// construct it	WITHOUT_CLASSIFICATION	0.9999980464824185	WITHOUT_CLASSIFICATION	1.9535175814667204E-6	DEFECT
// cool case, //we do not need to scan all the subdirs in the relative path	WITHOUT_CLASSIFICATION	0.9999821271794449	WITHOUT_CLASSIFICATION	1.787282055505411E-5	DEFECT
//this should not happen, except if parent has been deleted by another process	WITHOUT_CLASSIFICATION	0.9957652059742956	WITHOUT_CLASSIFICATION	0.004234794025704421	DEFECT
// we are already in the right path, so the second parameter // is false	WITHOUT_CLASSIFICATION	0.9998369754723726	WITHOUT_CLASSIFICATION	1.630245276273471E-4	DEFECT
// hit a hidden file assume not a symlink	WITHOUT_CLASSIFICATION	0.9999936847316808	WITHOUT_CLASSIFICATION	6.315268319269863E-6	DEFECT
// getRelativePath also finds about symlinks	WITHOUT_CLASSIFICATION	0.9999955150643088	WITHOUT_CLASSIFICATION	4.484935691131388E-6	DEFECT
// warn that selectors are not supported	WITHOUT_CLASSIFICATION	0.9999830982242647	WITHOUT_CLASSIFICATION	1.6901775735296592E-5	DEFECT
// If we are doing a listing, we need the output stream created now.	WITHOUT_CLASSIFICATION	0.9999999659888039	WITHOUT_CLASSIFICATION	3.4011196139454276E-8	DEFECT
// get files from filesets	WITHOUT_CLASSIFICATION	0.9999968295410262	WITHOUT_CLASSIFICATION	3.170458973726455E-6	DEFECT
// find first non cached dir	WITHOUT_CLASSIFICATION	0.9999992621364276	WITHOUT_CLASSIFICATION	7.378635723744305E-7	DEFECT
// check if dir exists by trying to change into it.	WITHOUT_CLASSIFICATION	0.999999754674229	WITHOUT_CLASSIFICATION	2.453257711093808E-7	DEFECT
// could not change to it - try to create it	WITHOUT_CLASSIFICATION	0.999990547000483	WITHOUT_CLASSIFICATION	9.452999516998214E-6	DEFECT
// create a local temporary file	WITHOUT_CLASSIFICATION	0.9999998309212186	WITHOUT_CLASSIFICATION	1.69078781408881E-7	DEFECT
// see if we should issue a chmod command	WITHOUT_CLASSIFICATION	0.9986795750693788	WITHOUT_CLASSIFICATION	0.0013204249306212222	DEFECT
// ignore it	WITHOUT_CLASSIFICATION	0.9999969178702214	WITHOUT_CLASSIFICATION	3.082129778715207E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999995133297559	WITHOUT_CLASSIFICATION	4.86670244023277E-7	DEFECT
// ignore it	WITHOUT_CLASSIFICATION	0.9999969178702214	WITHOUT_CLASSIFICATION	3.082129778715207E-6	DEFECT
// delegate the deletion of the local temp file to the delete task // because of race conditions occuring on Windows	WITHOUT_CLASSIFICATION	0.9999997055163257	WITHOUT_CLASSIFICATION	2.9448367429828076E-7	DEFECT
// For Microsoft's Ftp-Service an Array with length 0 is // returned if configured to return listings in "MS-DOS"-Format	WITHOUT_CLASSIFICATION	0.9999996500767718	WITHOUT_CLASSIFICATION	3.499232281515117E-7	DEFECT
// If we are sending files, then assume out of date. // If we are getting files, then throw an error	WITHOUT_CLASSIFICATION	0.9999494693514359	WITHOUT_CLASSIFICATION	5.053064856406721E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999995133297559	WITHOUT_CLASSIFICATION	4.86670244023277E-7	DEFECT
// codes 521, 550 and 553 can be produced by FTP Servers //  to indicate that an attempt to create a directory has //  failed because the directory already exists.	WITHOUT_CLASSIFICATION	0.9999988463475267	WITHOUT_CLASSIFICATION	1.1536524733673236E-6	DEFECT
// If an initial command was configured then send it. // Some FTP servers offer different modes of operation, // E.G. switching between a UNIX file system mode and // a legacy file system.	WITHOUT_CLASSIFICATION	0.9999991653394733	WITHOUT_CLASSIFICATION	8.346605266689577E-7	DEFECT
// For a unix ftp server you can set the default mask for all files // created.	WITHOUT_CLASSIFICATION	0.9999998910963405	WITHOUT_CLASSIFICATION	1.0890365962144186E-7	DEFECT
// If the action is MK_DIR, then the specified remote // directory is the directory to create.	WITHOUT_CLASSIFICATION	0.999996978839669	WITHOUT_CLASSIFICATION	3.021160331095782E-6	DEFECT
// in this case we want to find how much time span there is between local // and remote	WITHOUT_CLASSIFICATION	0.9999868739641139	WITHOUT_CLASSIFICATION	1.3126035886032648E-5	DEFECT
//socks	WITHOUT_CLASSIFICATION	0.999972293673891	WITHOUT_CLASSIFICATION	2.770632610907796E-5	DEFECT
//this may be a java1.4 thingy only	WITHOUT_CLASSIFICATION	0.9999987683830471	WITHOUT_CLASSIFICATION	1.2316169528920772E-6	DEFECT
// simple one-shot execution	WITHOUT_CLASSIFICATION	0.9999984375869407	WITHOUT_CLASSIFICATION	1.5624130592005934E-6	DEFECT
// need nested read/write elements	WITHOUT_CLASSIFICATION	0.9999998883536506	WITHOUT_CLASSIFICATION	1.1164634942945365E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999995133297559	WITHOUT_CLASSIFICATION	4.86670244023277E-7	DEFECT
//here we'd parse the output from change -o into submit -i //in order to support default change.	WITHOUT_CLASSIFICATION	0.9999915889456672	WITHOUT_CLASSIFICATION	8.411054332701213E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc //ToDo: If dealing with default cl need to parse out <enter description here>	WITHOUT_CLASSIFICATION	0.9999359406098131	WITHOUT_CLASSIFICATION	6.405939018689365E-5	DEFECT
/* -n */	WITHOUT_CLASSIFICATION	0.999992788808867	WITHOUT_CLASSIFICATION	7.211191133061717E-6	DEFECT
//Remove any non-numerical chars - should leave the change number	WITHOUT_CLASSIFICATION	0.9998662610372223	WITHOUT_CLASSIFICATION	1.3373896277765803E-4	DEFECT
// this type of output might happen // Change 18 renamed change 20 and submitted.	WITHOUT_CLASSIFICATION	0.9999993485451856	WITHOUT_CLASSIFICATION	6.514548143970898E-7	DEFECT
//Match "//" for begining of depot filespec	WITHOUT_CLASSIFICATION	0.999998352744508	WITHOUT_CLASSIFICATION	1.6472554919570482E-6	DEFECT
// we need to escape the description in case there are /	WITHOUT_CLASSIFICATION	0.9999964467768913	WITHOUT_CLASSIFICATION	3.5532231087133183E-6	DEFECT
// NOTE kirk@radik.com 04-April-2001 -- If you put in the -s, you // have to start running through regular expressions here. Much easier // to just not include the scripting information than to try to add it // and strip it later.	WITHOUT_CLASSIFICATION	0.976497393621943	WITHOUT_CLASSIFICATION	0.023502606378057123	DEFECT
//EoF	WITHOUT_CLASSIFICATION	0.9998362064025808	WITHOUT_CLASSIFICATION	1.637935974192425E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc //Input //Output //Error // CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999949136009357	WITHOUT_CLASSIFICATION	5.086399064215532E-6	DEFECT
/* Here we can either revert any unchanged files in a changelist         * or         * any files regardless of whether they have been changed or not         *         *         * The whole process also accepts a p4 filespec         */	WITHOUT_CLASSIFICATION	0.9999997906598779	WITHOUT_CLASSIFICATION	2.0934012212656333E-7	DEFECT
/* -a */	WITHOUT_CLASSIFICATION	0.999997853612321	WITHOUT_CLASSIFICATION	2.1463876790550667E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999995133297559	WITHOUT_CLASSIFICATION	4.86670244023277E-7	DEFECT
/* -n */	WITHOUT_CLASSIFICATION	0.999992788808867	WITHOUT_CLASSIFICATION	7.211191133061717E-6	DEFECT
/* -n */	WITHOUT_CLASSIFICATION	0.999992788808867	WITHOUT_CLASSIFICATION	7.211191133061717E-6	DEFECT
/* -f */	WITHOUT_CLASSIFICATION	0.9999925928521463	WITHOUT_CLASSIFICATION	7.407147853713564E-6	DEFECT
/* -t */	WITHOUT_CLASSIFICATION	0.9999909110220981	WITHOUT_CLASSIFICATION	9.088977901881428E-6	DEFECT
/* -v */	WITHOUT_CLASSIFICATION	0.9999959579758585	WITHOUT_CLASSIFICATION	4.0420241414638274E-6	DEFECT
//We have to create a unlocked label first	WITHOUT_CLASSIFICATION	0.9999949208236408	WITHOUT_CLASSIFICATION	5.079176359145665E-6	DEFECT
//Now lock if required	WITHOUT_CLASSIFICATION	0.9990687876582708	WITHOUT_CLASSIFICATION	9.312123417291378E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999995133297559	WITHOUT_CLASSIFICATION	4.86670244023277E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999995133297559	WITHOUT_CLASSIFICATION	4.86670244023277E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999995133297559	WITHOUT_CLASSIFICATION	4.86670244023277E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999995133297559	WITHOUT_CLASSIFICATION	4.86670244023277E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc // CheckStyle:MemberNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9999999027264571	WITHOUT_CLASSIFICATION	9.727354290302723E-8	DEFECT
// CheckStyle:MemberNameCheck ON // CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999998769224123	WITHOUT_CLASSIFICATION	1.230775877489462E-7	DEFECT
// Massage PCLI lvf output transforming '\' to '/' so get command works appropriately	WITHOUT_CLASSIFICATION	0.9999746379521564	WITHOUT_CLASSIFICATION	2.5362047843665308E-5	DEFECT
//Read back the label spec from perforce, //Replace Options //Submit back to Perforce	WITHOUT_CLASSIFICATION	0.999994369717703	WITHOUT_CLASSIFICATION	5.6302822970952655E-6	DEFECT
//when running labelsync, if view elements are in sync, //Perforce produces a line of output //looking like this one : //error: //depot/file2 - label in sync.	WITHOUT_CLASSIFICATION	0.9999979668492219	WITHOUT_CLASSIFICATION	2.0331507781115333E-6	DEFECT
//sync says "error:" when a file is up-to-date	WITHOUT_CLASSIFICATION	0.9999488241418663	WITHOUT_CLASSIFICATION	5.11758581337183E-5	DEFECT
//sometimes there's "info1:	WITHOUT_CLASSIFICATION	0.9999810957689094	WITHOUT_CLASSIFICATION	1.890423109055282E-5	DEFECT
//P4 runtime directives	WITHOUT_CLASSIFICATION	0.9999939674681744	WITHOUT_CLASSIFICATION	6.032531825567774E-6	DEFECT
// Perforce task directives	WITHOUT_CLASSIFICATION	0.999999950851689	WITHOUT_CLASSIFICATION	4.914831103668289E-8	DEFECT
//P4 g-opts and cmd opts (rtfm)	WITHOUT_CLASSIFICATION	0.9999994969574424	WITHOUT_CLASSIFICATION	5.030425576451432E-7	DEFECT
//Setters called by Ant	WITHOUT_CLASSIFICATION	0.9999923220949252	WITHOUT_CLASSIFICATION	7.677905074874582E-6	DEFECT
//Get default P4 settings from environment - Mark would have done something cool with //introspection here.....:-)	WITHOUT_CLASSIFICATION	0.991605880521411	WITHOUT_CLASSIFICATION	0.008394119478589064	DEFECT
// reset error flags before executing the command	WITHOUT_CLASSIFICATION	0.9993535514279858	WITHOUT_CLASSIFICATION	6.464485720141642E-4	DEFECT
//Check API for these - it's how CVS does it...	WITHOUT_CLASSIFICATION	0.9999495737325125	WITHOUT_CLASSIFICATION	5.042626748754429E-5	DEFECT
/*     * Constant for the PCLI listversionedfiles recursive i a format "get" understands     */	WITHOUT_CLASSIFICATION	0.9999998811365914	WITHOUT_CLASSIFICATION	1.188634085890409E-7	DEFECT
// private static final String PCLI_LVF_ARGS = "lvf -z -aw";	WITHOUT_CLASSIFICATION	0.9999996124035904	WITHOUT_CLASSIFICATION	3.875964095461164E-7	DEFECT
// Check workspace exists // Launch PCLI listversionedfiles -z -aw // Capture output // build the command line from what we got the format is	WITHOUT_CLASSIFICATION	0.9999966373032139	WITHOUT_CLASSIFICATION	3.362696786086694E-6	DEFECT
// default pvcs project is "/"	WITHOUT_CLASSIFICATION	0.9999982589162567	WITHOUT_CLASSIFICATION	1.741083743215145E-6	DEFECT
// Create folders in workspace	WITHOUT_CLASSIFICATION	0.9999973396501951	WITHOUT_CLASSIFICATION	2.6603498049674438E-6	DEFECT
// Launch get on output captured from PCLI lvf	WITHOUT_CLASSIFICATION	0.9999945305027431	WITHOUT_CLASSIFICATION	5.469497256973561E-6	DEFECT
// Extract the name of the directory from the filename	WITHOUT_CLASSIFICATION	0.9999996056587809	WITHOUT_CLASSIFICATION	3.943412191714499E-7	DEFECT
// Change these through their GET and SET methods.	WITHOUT_CLASSIFICATION	0.9999998736613722	WITHOUT_CLASSIFICATION	1.2633862775283582E-7	DEFECT
// These fields deal with includes and excludes	WITHOUT_CLASSIFICATION	0.9999748850762623	WITHOUT_CLASSIFICATION	2.511492373774414E-5	DEFECT
// Check all of the properties that are required.	WITHOUT_CLASSIFICATION	0.999968218729073	WITHOUT_CLASSIFICATION	3.1781270926891754E-5	DEFECT
// Check to see if the target directory exists.	WITHOUT_CLASSIFICATION	0.9999999273271265	WITHOUT_CLASSIFICATION	7.267287350177976E-8	DEFECT
// Search the items on this server.	WITHOUT_CLASSIFICATION	0.99999663026779	WITHOUT_CLASSIFICATION	3.3697322099473237E-6	DEFECT
// Disconnect from the server.	WITHOUT_CLASSIFICATION	0.9999983823711296	WITHOUT_CLASSIFICATION	1.6176288703770293E-6	DEFECT
// Tell how many files were checked out.	WITHOUT_CLASSIFICATION	0.9999959261269222	WITHOUT_CLASSIFICATION	4.073873077772715E-6	DEFECT
// Optional; logOn() connects if necessary.	WITHOUT_CLASSIFICATION	0.9999975457799208	WITHOUT_CLASSIFICATION	2.454220079238456E-6	DEFECT
// Logon using specified user name and password.	WITHOUT_CLASSIFICATION	0.9999983987682447	WITHOUT_CLASSIFICATION	1.6012317552449942E-6	DEFECT
// We always display the ItemID (OBJECT_ID) and primary descriptor.	WITHOUT_CLASSIFICATION	0.9999995413875101	WITHOUT_CLASSIFICATION	4.5861248979822763E-7	DEFECT
//If a working directory was specified then add it to the command line	WITHOUT_CLASSIFICATION	0.9991214041025321	WITHOUT_CLASSIFICATION	8.785958974679281E-4	DEFECT
// Checking for "\ // or           "/ // or           "X:\...	WITHOUT_CLASSIFICATION	0.999958753474748	WITHOUT_CLASSIFICATION	4.1246525252019814E-5	DEFECT
// If we find a "file" attribute then act on a file otherwise act on a project	WITHOUT_CLASSIFICATION	0.9999995638096836	WITHOUT_CLASSIFICATION	4.3619031637333144E-7	DEFECT
// after you are all of the properties are ok, do your thing // with StarTeam.  If there are any kind of exceptions then // send the message to the project log.	WITHOUT_CLASSIFICATION	0.9999839325634265	WITHOUT_CLASSIFICATION	1.6067436573387424E-5	DEFECT
// For performance reasons, it is important to pre-fetch all the // properties we'll need for all the items we'll be searching.	WITHOUT_CLASSIFICATION	0.9999860740885501	WITHOUT_CLASSIFICATION	1.3925911449886625E-5	DEFECT
// We'll need this item type's primary descriptor.	WITHOUT_CLASSIFICATION	0.9999998594748196	WITHOUT_CLASSIFICATION	1.4052518036128058E-7	DEFECT
// Does this item type have a secondary descriptor? // If so, we'll need it.	WITHOUT_CLASSIFICATION	0.9999989423180818	WITHOUT_CLASSIFICATION	1.0576819181637602E-6	DEFECT
// Now, build an array of the property names.	WITHOUT_CLASSIFICATION	0.9999492274522875	WITHOUT_CLASSIFICATION	5.0772547712370854E-5	DEFECT
// Pre-fetch the item properties and cache them.	WITHOUT_CLASSIFICATION	0.9999996231621922	WITHOUT_CLASSIFICATION	3.768378078321E-7	DEFECT
// Now, search for items in the selected folder.	WITHOUT_CLASSIFICATION	0.999999527623185	WITHOUT_CLASSIFICATION	4.723768150705057E-7	DEFECT
// Free up the memory used by the cached items.	WITHOUT_CLASSIFICATION	0.9999997452154991	WITHOUT_CLASSIFICATION	2.5478450090595576E-7	DEFECT
// convert whatever separator char is in starteam to that of the target system.	WITHOUT_CLASSIFICATION	0.9999971293852082	WITHOUT_CLASSIFICATION	2.8706147917049487E-6	DEFECT
// If it ends with separator then strip it off	WITHOUT_CLASSIFICATION	0.999995136826262	WITHOUT_CLASSIFICATION	4.863173738004817E-6	DEFECT
// Replace the projectName in the file's absolute path to the viewName. // This makes the root target of a checkout operation equal to: // targetFolder + dirName	WITHOUT_CLASSIFICATION	0.9999998279562821	WITHOUT_CLASSIFICATION	1.720437179138178E-7	DEFECT
// only want to do this the first time	WITHOUT_CLASSIFICATION	0.9999918968213983	WITHOUT_CLASSIFICATION	8.103178601577782E-6	DEFECT
// Process all items in this folder.	WITHOUT_CLASSIFICATION	0.9999999557498986	WITHOUT_CLASSIFICATION	4.425010143778705E-8	DEFECT
// Process all subfolders recursively if recursion is on.	WITHOUT_CLASSIFICATION	0.9999952301302968	WITHOUT_CLASSIFICATION	4.7698697032160855E-6	DEFECT
// Get descriptors for this item type.	WITHOUT_CLASSIFICATION	0.9999991620564093	WITHOUT_CLASSIFICATION	8.379435906454941E-7	DEFECT
// VERBOSE MODE ONLY	WITHOUT_CLASSIFICATION	0.999985260419634	WITHOUT_CLASSIFICATION	1.473958036596831E-5	DEFECT
// Show folder only if changed.	WITHOUT_CLASSIFICATION	0.9999962334809005	WITHOUT_CLASSIFICATION	3.766519099477585E-6	DEFECT
// Show if the file is locked.	WITHOUT_CLASSIFICATION	0.9999997200695135	WITHOUT_CLASSIFICATION	2.7993048643757384E-7	DEFECT
// END VERBOSE ONLY	WITHOUT_CLASSIFICATION	0.9999813031601629	WITHOUT_CLASSIFICATION	1.8696839837102276E-5	DEFECT
// add -command CheckOutFile to the commandline	WITHOUT_CLASSIFICATION	0.9999998719709368	WITHOUT_CLASSIFICATION	1.280290632528643E-7	DEFECT
// Finally, show the Item properties ... // Always show the ItemID.	WITHOUT_CLASSIFICATION	0.9990946738933201	WITHOUT_CLASSIFICATION	9.053261066799486E-4	DEFECT
// Show the primary descriptor. // There should always be one.	WITHOUT_CLASSIFICATION	0.9998999302922795	WITHOUT_CLASSIFICATION	1.0006970772049154E-4	DEFECT
// Show the secondary descriptor, if there is one. // Some item types have one, some don't.	WITHOUT_CLASSIFICATION	0.9999988973348757	WITHOUT_CLASSIFICATION	1.1026651243604188E-6	DEFECT
// Change the item to be checked out to a StarTeam File.	WITHOUT_CLASSIFICATION	0.9999999868592041	WITHOUT_CLASSIFICATION	1.3140795958813282E-8	DEFECT
// The local file name is simply the local target path (tgt) which has // been passed recursively down from the top of the tree, with the item's name appended.	WITHOUT_CLASSIFICATION	0.9999997998680293	WITHOUT_CLASSIFICATION	2.0013197068714892E-7	DEFECT
// Begin SET and GET methods	WITHOUT_CLASSIFICATION	0.9999998696233946	WITHOUT_CLASSIFICATION	1.3037660544963206E-7	DEFECT
// Begin filter getters and setters	WITHOUT_CLASSIFICATION	0.9999922959273394	WITHOUT_CLASSIFICATION	7.704072660596249E-6	DEFECT
// Check if need to set the loader	WITHOUT_CLASSIFICATION	0.9999997905041205	WITHOUT_CLASSIFICATION	2.0949587963736225E-7	DEFECT
// Now create the scriptRunner	WITHOUT_CLASSIFICATION	0.9999999002159563	WITHOUT_CLASSIFICATION	9.978404362621142E-8	DEFECT
// find the script repository - it is stored in the project	WITHOUT_CLASSIFICATION	0.9989261284928297	WITHOUT_CLASSIFICATION	0.0010738715071702699	DEFECT
/*            // try the context classloader            ClassLoader loader                = Thread.currentThread().getContextClassLoader();            */	WITHOUT_CLASSIFICATION	0.9999998425432348	WITHOUT_CLASSIFICATION	1.5745676508910045E-7	DEFECT
// If we find a "file" attribute then act on a file otherwise act on a project	WITHOUT_CLASSIFICATION	0.9999995638096836	WITHOUT_CLASSIFICATION	4.3619031637333144E-7	DEFECT
// add -command CheckInFile to the commandline	WITHOUT_CLASSIFICATION	0.9999998637134926	WITHOUT_CLASSIFICATION	1.3628650741093625E-7	DEFECT
// add -file xxxxx to the commandline	WITHOUT_CLASSIFICATION	0.999999358863447	WITHOUT_CLASSIFICATION	6.411365529952754E-7	DEFECT
// add -file xxxxx to the commandline	WITHOUT_CLASSIFICATION	0.999999358863447	WITHOUT_CLASSIFICATION	6.411365529952754E-7	DEFECT
// add -command CheckInProject to the commandline	WITHOUT_CLASSIFICATION	0.9999989591724168	WITHOUT_CLASSIFICATION	1.0408275831422357E-6	DEFECT
// look for a recursive option	WITHOUT_CLASSIFICATION	0.9999997050742927	WITHOUT_CLASSIFICATION	2.949257073368642E-7	DEFECT
// look for a recursive option	WITHOUT_CLASSIFICATION	0.9999997050742927	WITHOUT_CLASSIFICATION	2.949257073368642E-7	DEFECT
// Look for a comment	WITHOUT_CLASSIFICATION	0.9999995532599808	WITHOUT_CLASSIFICATION	4.467400191181646E-7	DEFECT
// soscmd Command options	WITHOUT_CLASSIFICATION	0.9999999244888568	WITHOUT_CLASSIFICATION	7.551114320141444E-8	DEFECT
// soscmd Option flags	WITHOUT_CLASSIFICATION	0.9999975467064807	WITHOUT_CLASSIFICATION	2.4532935192229066E-6	DEFECT
// add -command GetFile to the commandline	WITHOUT_CLASSIFICATION	0.9999998348351296	WITHOUT_CLASSIFICATION	1.651648704160647E-7	DEFECT
// look for a version attribute	WITHOUT_CLASSIFICATION	0.9999870089858507	WITHOUT_CLASSIFICATION	1.2991014149349464E-5	DEFECT
//add -revision xxxxx to the commandline	WITHOUT_CLASSIFICATION	0.9999903220951092	WITHOUT_CLASSIFICATION	9.677904890843213E-6	DEFECT
// add -command GetProject to the commandline	WITHOUT_CLASSIFICATION	0.9999991496515015	WITHOUT_CLASSIFICATION	8.503484985138156E-7	DEFECT
// look for a label option	WITHOUT_CLASSIFICATION	0.99999940654944	WITHOUT_CLASSIFICATION	5.934505599844579E-7	DEFECT
// make sure localDir exists, create it if it doesn't	WITHOUT_CLASSIFICATION	0.9999836440008699	WITHOUT_CLASSIFICATION	1.6355999130140203E-5	DEFECT
// This is the exit status	WITHOUT_CLASSIFICATION	0.999962114750555	WITHOUT_CLASSIFICATION	3.788524944503009E-5	DEFECT
// Use the OS VM launcher so we get environment variables	WITHOUT_CLASSIFICATION	0.9999991926706155	WITHOUT_CLASSIFICATION	8.073293844861257E-7	DEFECT
// Get the path to the soscmd(.exe)	WITHOUT_CLASSIFICATION	0.9999985933651244	WITHOUT_CLASSIFICATION	1.4066348755620504E-6	DEFECT
// SOS server address is required	WITHOUT_CLASSIFICATION	0.9998202099527014	WITHOUT_CLASSIFICATION	1.7979004729857007E-4	DEFECT
// VSS Info is required	WITHOUT_CLASSIFICATION	0.9997141130525815	WITHOUT_CLASSIFICATION	2.858869474185314E-4	DEFECT
// VSS project is required	WITHOUT_CLASSIFICATION	0.9998376673507791	WITHOUT_CLASSIFICATION	1.6233264922094478E-4	DEFECT
// -verbose	WITHOUT_CLASSIFICATION	0.9999989591431003	WITHOUT_CLASSIFICATION	1.0408568996625635E-6	DEFECT
// Disable Compression	WITHOUT_CLASSIFICATION	0.9999999601599425	WITHOUT_CLASSIFICATION	3.9840057447739525E-8	DEFECT
// If -soshome was not specified then we can look for nocache	WITHOUT_CLASSIFICATION	0.9999991987268099	WITHOUT_CLASSIFICATION	8.012731901845581E-7	DEFECT
// Ignore Exception	WITHOUT_CLASSIFICATION	0.9999982379546444	WITHOUT_CLASSIFICATION	1.7620453556618215E-6	DEFECT
// look for a recursive option	WITHOUT_CLASSIFICATION	0.9999997050742927	WITHOUT_CLASSIFICATION	2.949257073368642E-7	DEFECT
// Look for a comment	WITHOUT_CLASSIFICATION	0.9999995532599808	WITHOUT_CLASSIFICATION	4.467400191181646E-7	DEFECT
// -verbose	WITHOUT_CLASSIFICATION	0.9999989591431003	WITHOUT_CLASSIFICATION	1.0408568996625635E-6	DEFECT
// The SOS class knows that the SOS server needs the password flag, // even if there is no password ,so we send a " "	WITHOUT_CLASSIFICATION	0.99994643084485	WITHOUT_CLASSIFICATION	5.356915515000083E-5	DEFECT
// add -command CheckOutProject to the commandline	WITHOUT_CLASSIFICATION	0.9999993173652049	WITHOUT_CLASSIFICATION	6.826347952172434E-7	DEFECT
// add -command AddLabel to the commandline	WITHOUT_CLASSIFICATION	0.9999994587893154	WITHOUT_CLASSIFICATION	5.4121068468364E-7	DEFECT
// a label is required	WITHOUT_CLASSIFICATION	0.9999961287579677	WITHOUT_CLASSIFICATION	3.871242032283804E-6	DEFECT
// get the list of files in the dir	WITHOUT_CLASSIFICATION	0.9999983684806398	WITHOUT_CLASSIFICATION	1.631519360198798E-6	DEFECT
// get a random number between 0 and the number of files	WITHOUT_CLASSIFICATION	0.9999994394082932	WITHOUT_CLASSIFICATION	5.6059170681293E-7	DEFECT
// set the source to the file at that location	WITHOUT_CLASSIFICATION	0.9999998533729032	WITHOUT_CLASSIFICATION	1.466270968547269E-7	DEFECT
// Empty block	WITHOUT_CLASSIFICATION	0.9999962010261572	WITHOUT_CLASSIFICATION	3.7989738428632788E-6	DEFECT
//System.exit(0);	WITHOUT_CLASSIFICATION	0.9999733326937913	WITHOUT_CLASSIFICATION	2.666730620875316E-5	DEFECT
// build successfull!	WITHOUT_CLASSIFICATION	0.9999980416824491	WITHOUT_CLASSIFICATION	1.958317550921272E-6	DEFECT
/*AbstractSshMessage*/	WITHOUT_CLASSIFICATION	0.9999977078348692	WITHOUT_CLASSIFICATION	2.2921651308091326E-6	DEFECT
// dir does not exist.	WITHOUT_CLASSIFICATION	0.9999019500067227	WITHOUT_CLASSIFICATION	9.80499932773372E-5	DEFECT
// only track progress for files larger than 100kb in verbose mode	WITHOUT_CLASSIFICATION	0.9999873519820455	WITHOUT_CLASSIFICATION	1.2648017954459564E-5	DEFECT
// get I/O streams for remote scp	WITHOUT_CLASSIFICATION	0.9999597929297983	WITHOUT_CLASSIFICATION	4.020707020171384E-5	DEFECT
// this indicates an error.	WITHOUT_CLASSIFICATION	0.9999997040856338	WITHOUT_CLASSIFICATION	2.959143661878368E-7	DEFECT
// appears that the next token is not used and it's zero.	WITHOUT_CLASSIFICATION	0.9898767385893986	WITHOUT_CLASSIFICATION	0.010123261410601476	DEFECT
// read a content of lfile	WITHOUT_CLASSIFICATION	0.9999997065488704	WITHOUT_CLASSIFICATION	2.9345112962064014E-7	DEFECT
// Ignored	WITHOUT_CLASSIFICATION	0.9999994196248092	WITHOUT_CLASSIFICATION	5.803751908698582E-7	DEFECT
// do nothing;	WITHOUT_CLASSIFICATION	0.9999958307384883	WITHOUT_CLASSIFICATION	4.169261511748398E-6	DEFECT
// didn't receive any response	WITHOUT_CLASSIFICATION	0.9999981733528078	WITHOUT_CLASSIFICATION	1.8266471922554794E-6	DEFECT
// execute the command	WITHOUT_CLASSIFICATION	0.9999974712868887	WITHOUT_CLASSIFICATION	2.528713111301309E-6	DEFECT
// wait for it to finish	WITHOUT_CLASSIFICATION	0.9999966709161895	WITHOUT_CLASSIFICATION	3.3290838104782123E-6	DEFECT
// ran out of time	WITHOUT_CLASSIFICATION	0.9999950810699819	WITHOUT_CLASSIFICATION	4.918930018150322E-6	DEFECT
// completed successfully	WITHOUT_CLASSIFICATION	0.9999990647309174	WITHOUT_CLASSIFICATION	9.352690825014576E-7	DEFECT
// user:password@host:/path notation	WITHOUT_CLASSIFICATION	0.9998293038008687	WITHOUT_CLASSIFICATION	1.7069619913125925E-4	DEFECT
// no password, will require passphrase	WITHOUT_CLASSIFICATION	0.9999140133592789	WITHOUT_CLASSIFICATION	8.598664072109911E-5	DEFECT
// skip	WITHOUT_CLASSIFICATION	0.9999971019683745	WITHOUT_CLASSIFICATION	2.8980316255090616E-6	DEFECT
// send "C0644 filesize filename", where filename should not include '/'	WITHOUT_CLASSIFICATION	0.9999283035629383	WITHOUT_CLASSIFICATION	7.16964370616436E-5	DEFECT
// send a content of lfile	WITHOUT_CLASSIFICATION	0.9999997355061838	WITHOUT_CLASSIFICATION	2.644938162579166E-7	DEFECT
// C0644 filesize filename - header for a regular file // T time 0 time 0\n - present if perserve time. // D directory - this is the header for a directory.	WITHOUT_CLASSIFICATION	0.9999998961456196	WITHOUT_CLASSIFICATION	1.038543803420058E-7	DEFECT
// swallow if there was an error before so that // original error will be passed up	WITHOUT_CLASSIFICATION	0.9999965369984387	WITHOUT_CLASSIFICATION	3.463001561327915E-6	DEFECT
// since filesize keeps on decreasing we have to store the // initial filesize	WITHOUT_CLASSIFICATION	0.9999999332746807	WITHOUT_CLASSIFICATION	6.672531924992208E-8	DEFECT
// b may be 0 for success, //          1 for error, //          2 for fatal error,	WITHOUT_CLASSIFICATION	0.9999995002133162	WITHOUT_CLASSIFICATION	4.997866839230756E-7	DEFECT
// like <exec> // like <exec> // like <exec>	WITHOUT_CLASSIFICATION	0.9999959466617014	WITHOUT_CLASSIFICATION	4.053338298558647E-6	DEFECT
//log(message, Project.MSG_DEBUG);	WITHOUT_CLASSIFICATION	0.9999957500478412	WITHOUT_CLASSIFICATION	4.249952158772074E-6	DEFECT
// we want this to have a false default, unlike for Checkin.	WITHOUT_CLASSIFICATION	0.9999995645376694	WITHOUT_CLASSIFICATION	4.354623306830776E-7	DEFECT
// If the file doesn't pass the include/exclude tests, skip it.	WITHOUT_CLASSIFICATION	0.9999999539675392	WITHOUT_CLASSIFICATION	4.603246083082624E-8	DEFECT
// We try to update the status once to give StarTeam // another chance.	WITHOUT_CLASSIFICATION	0.999999606723379	WITHOUT_CLASSIFICATION	3.932766210806783E-7	DEFECT
// once we find a folder that isn't in the repository, // we know we can add it.	WITHOUT_CLASSIFICATION	0.9999995133823719	WITHOUT_CLASSIFICATION	4.866176279732365E-7	DEFECT
// once we find a folder that isn't in the repository, // we know we can add it.	WITHOUT_CLASSIFICATION	0.9999995133823719	WITHOUT_CLASSIFICATION	4.866176279732365E-7	DEFECT
// if a label has been supplied, use it to configure the view // otherwise use current view	WITHOUT_CLASSIFICATION	0.9999998401785224	WITHOUT_CLASSIFICATION	1.5982147759971237E-7	DEFECT
// if a date has been supplied use a view configured to the date.	WITHOUT_CLASSIFICATION	0.9999998930096745	WITHOUT_CLASSIFICATION	1.0699032553479823E-7	DEFECT
// if a date has been supplied use a view configured to the date.	WITHOUT_CLASSIFICATION	0.9999998930096745	WITHOUT_CLASSIFICATION	1.0699032553479823E-7	DEFECT
// otherwise, use this view configured as the tip.	WITHOUT_CLASSIFICATION	0.9999999899989329	WITHOUT_CLASSIFICATION	1.0001067016267451E-8	DEFECT
// otherwise, use this view configured as the tip.	WITHOUT_CLASSIFICATION	0.9999999899989329	WITHOUT_CLASSIFICATION	1.0001067016267451E-8	DEFECT
// For all Files in this folder, we need to check // if there have been modifications.	WITHOUT_CLASSIFICATION	0.9999998435582341	WITHOUT_CLASSIFICATION	1.5644176580452292E-7	DEFECT
// Now we recursively call this method on all sub folders in this // folder unless recursive attribute is off.	WITHOUT_CLASSIFICATION	0.99999976977684	WITHOUT_CLASSIFICATION	2.3022315987089223E-7	DEFECT
// handle the files so they appear first	WITHOUT_CLASSIFICATION	0.9999997791157642	WITHOUT_CLASSIFICATION	2.2088423578023885E-7	DEFECT
// now do it again for the directories so they appear last.	WITHOUT_CLASSIFICATION	0.9999997633690189	WITHOUT_CLASSIFICATION	2.3663098127167953E-7	DEFECT
// Create the new label and update the repository	WITHOUT_CLASSIFICATION	0.9999994090074702	WITHOUT_CLASSIFICATION	5.909925296956537E-7	DEFECT
// write a Properties file in each directory:	WITHOUT_CLASSIFICATION	0.9999934862433236	WITHOUT_CLASSIFICATION	6.513756676323667E-6	DEFECT
// Create an instance of the rmic, redirecting output to // the project log	WITHOUT_CLASSIFICATION	0.9999972577374567	WITHOUT_CLASSIFICATION	2.7422625433190385E-6	DEFECT
// CheckStyle:MethodNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9999994669713123	WITHOUT_CLASSIFICATION	5.330286877976686E-7	DEFECT
// once we find a folder that isn't in the repository, // we know we can add it.	WITHOUT_CLASSIFICATION	0.9999995133823719	WITHOUT_CLASSIFICATION	4.866176279732365E-7	DEFECT
//ATTRIBUTES settable from ant.	WITHOUT_CLASSIFICATION	0.9999967610230399	WITHOUT_CLASSIFICATION	3.2389769601163625E-6	DEFECT
// if a label has been supplied and it is a view label, use it // to configure the view	WITHOUT_CLASSIFICATION	0.999999655546875	WITHOUT_CLASSIFICATION	3.4445312508699865E-7	DEFECT
// if a label has been supplied and it is a revision label, use the raw // the view as the snapshot	WITHOUT_CLASSIFICATION	0.9999995406589037	WITHOUT_CLASSIFICATION	4.593410963015965E-7	DEFECT
// prune away any files not belonging to the revision label // this is one ugly API from Starteam SDK	WITHOUT_CLASSIFICATION	0.9934061210907901	WITHOUT_CLASSIFICATION	0.006593878909209915	DEFECT
// PR 31965 says that it can return null	WITHOUT_CLASSIFICATION	0.9999967283994964	WITHOUT_CLASSIFICATION	3.2716005036685847E-6	DEFECT
// no root local mapping has been specified.	WITHOUT_CLASSIFICATION	0.9999984690599918	WITHOUT_CLASSIFICATION	1.5309400082053188E-6	DEFECT
// Inspect everything in the root folder and then recursively	WITHOUT_CLASSIFICATION	0.9999919167250219	WITHOUT_CLASSIFICATION	8.083274978171549E-6	DEFECT
// Tell user what he is doing	WITHOUT_CLASSIFICATION	0.9999962195721379	WITHOUT_CLASSIFICATION	3.7804278620003857E-6	DEFECT
// set the local folder.	WITHOUT_CLASSIFICATION	0.9999999437439758	WITHOUT_CLASSIFICATION	5.625602406528058E-8	DEFECT
// set the local folder.	WITHOUT_CLASSIFICATION	0.9999999437439758	WITHOUT_CLASSIFICATION	5.625602406528058E-8	DEFECT
// ATTRIBUTES	WITHOUT_CLASSIFICATION	0.9999662244550518	WITHOUT_CLASSIFICATION	3.3775544948210215E-5	DEFECT
// create a hashtable to group them by parent directory:	WITHOUT_CLASSIFICATION	0.9999995002189606	WITHOUT_CLASSIFICATION	4.997810394472202E-7	DEFECT
// else lnk exists, do nothing	WITHOUT_CLASSIFICATION	0.9999997552215464	WITHOUT_CLASSIFICATION	2.447784536381488E-7	DEFECT
// get an Iterator of file objects representing links (canonical):	WITHOUT_CLASSIFICATION	0.9999993074271535	WITHOUT_CLASSIFICATION	6.925728463857411E-7	DEFECT
//iterate through the names, get the matching values	WITHOUT_CLASSIFICATION	0.9999997494547943	WITHOUT_CLASSIFICATION	2.5054520569926895E-7	DEFECT
/////////////////////////////////////////////////////////////// // GET/SET methods. // Setters, of course are where ant user passes in values. ///////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999993220642407	WITHOUT_CLASSIFICATION	6.779357591890056E-7	DEFECT
/////////////////////////////////////////////////////////////// // INCLUDE-EXCLUDE processing ///////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999996355964935	WITHOUT_CLASSIFICATION	3.644035065387431E-7	DEFECT
// find the starteam folder specified to be the root of the // operation.  Throw if it can't be found.	WITHOUT_CLASSIFICATION	0.9999158166823087	WITHOUT_CLASSIFICATION	8.418331769132884E-5	DEFECT
// either use default path or root local mapping, // which is now embedded in the root folder	WITHOUT_CLASSIFICATION	0.9999779156215396	WITHOUT_CLASSIFICATION	2.208437846038784E-5	DEFECT
///////////////////////////////////////////////////////// // GET/SET methods. // Setters, of course are where ant user passes in values. /////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999993220642407	WITHOUT_CLASSIFICATION	6.779357591890056E-7	DEFECT
// fill up a Properties object with link and resource names:	WITHOUT_CLASSIFICATION	0.999993895887526	WITHOUT_CLASSIFICATION	6.104112474096627E-6	DEFECT
// find the resource of the existing link:	WITHOUT_CLASSIFICATION	0.9999928473477707	WITHOUT_CLASSIFICATION	7.15265222929765E-6	DEFECT
// rename the resource, thus breaking the link:	WITHOUT_CLASSIFICATION	0.9999985798058134	WITHOUT_CLASSIFICATION	1.4201941866457714E-6	DEFECT
// delete the (now) broken link:	WITHOUT_CLASSIFICATION	0.9999865345064458	WITHOUT_CLASSIFICATION	1.346549355411066E-5	DEFECT
// return the resource to its original name:	WITHOUT_CLASSIFICATION	0.9999951300825154	WITHOUT_CLASSIFICATION	4.86991748453907E-6	DEFECT
// loop through the supplied file sets:	WITHOUT_CLASSIFICATION	0.9999942912526789	WITHOUT_CLASSIFICATION	5.708747321094468E-6	DEFECT
// load included files as properties files:	WITHOUT_CLASSIFICATION	0.9999928797644854	WITHOUT_CLASSIFICATION	7.120235514604214E-6	DEFECT
// -GL	WITHOUT_CLASSIFICATION	0.999996059673055	WITHOUT_CLASSIFICATION	3.940326944963227E-6	DEFECT
// -GL	WITHOUT_CLASSIFICATION	0.999996059673055	WITHOUT_CLASSIFICATION	3.940326944963227E-6	DEFECT
// -I- or -I-Y or -I-N	WITHOUT_CLASSIFICATION	0.9999945115389783	WITHOUT_CLASSIFICATION	5.4884610217225005E-6	DEFECT
// -I- or -I-Y or -I-N	WITHOUT_CLASSIFICATION	0.9999945115389783	WITHOUT_CLASSIFICATION	5.4884610217225005E-6	DEFECT
// -O-	WITHOUT_CLASSIFICATION	0.999994758832314	WITHOUT_CLASSIFICATION	5.241167685864044E-6	DEFECT
// -R	WITHOUT_CLASSIFICATION	0.9999956234179662	WITHOUT_CLASSIFICATION	4.376582033834188E-6	DEFECT
// -R	WITHOUT_CLASSIFICATION	0.9999956234179662	WITHOUT_CLASSIFICATION	4.376582033834188E-6	DEFECT
// -V	WITHOUT_CLASSIFICATION	0.9999944095130868	WITHOUT_CLASSIFICATION	5.5904869131324255E-6	DEFECT
// -W	WITHOUT_CLASSIFICATION	0.9999942144868	WITHOUT_CLASSIFICATION	5.785513199942552E-6	DEFECT
// -W	WITHOUT_CLASSIFICATION	0.9999942144868	WITHOUT_CLASSIFICATION	5.785513199942552E-6	DEFECT
// -Y	WITHOUT_CLASSIFICATION	0.9999960792985071	WITHOUT_CLASSIFICATION	3.920701492935804E-6	DEFECT
// -Y	WITHOUT_CLASSIFICATION	0.9999960792985071	WITHOUT_CLASSIFICATION	3.920701492935804E-6	DEFECT
// -G	WITHOUT_CLASSIFICATION	0.9999957853807538	WITHOUT_CLASSIFICATION	4.214619246105411E-6	DEFECT
// -GWS or -GWR	WITHOUT_CLASSIFICATION	0.9999944162915487	WITHOUT_CLASSIFICATION	5.583708451336952E-6	DEFECT
//set to empty str if no local path return	WITHOUT_CLASSIFICATION	0.9999973753321365	WITHOUT_CLASSIFICATION	2.6246678635893105E-6	DEFECT
//make sure m_LocalDir exists, create it if it doesn't	WITHOUT_CLASSIFICATION	0.9999941995795613	WITHOUT_CLASSIFICATION	5.80042043869641E-6	DEFECT
// Use the OS launcher so we get environment variables	WITHOUT_CLASSIFICATION	0.9999996767629648	WITHOUT_CLASSIFICATION	3.2323703522650055E-7	DEFECT
// VSS items	WITHOUT_CLASSIFICATION	0.9999987543933716	WITHOUT_CLASSIFICATION	1.2456066284087926E-6	DEFECT
// VSS items	WITHOUT_CLASSIFICATION	0.9999987543933716	WITHOUT_CLASSIFICATION	1.2456066284087926E-6	DEFECT
// -C	WITHOUT_CLASSIFICATION	0.9999968486016882	WITHOUT_CLASSIFICATION	3.1513983117003242E-6	DEFECT
// -C	WITHOUT_CLASSIFICATION	0.9999968486016882	WITHOUT_CLASSIFICATION	3.1513983117003242E-6	DEFECT
// -L Specify the new label on the command line (instead of being prompted)	WITHOUT_CLASSIFICATION	0.9999979297777599	WITHOUT_CLASSIFICATION	2.0702222401429964E-6	DEFECT
// -V Label an existing file or project version	WITHOUT_CLASSIFICATION	0.9999994277650311	WITHOUT_CLASSIFICATION	5.722349689841858E-7	DEFECT
// first off, make sure that we've got a command and a vssdir ...	WITHOUT_CLASSIFICATION	0.999988081411029	WITHOUT_CLASSIFICATION	1.1918588970899886E-5	DEFECT
// pre Kaffe 1.1.5	WITHOUT_CLASSIFICATION	0.9999990641703977	WITHOUT_CLASSIFICATION	9.358296022772025E-7	DEFECT
// -GL	WITHOUT_CLASSIFICATION	0.999996059673055	WITHOUT_CLASSIFICATION	3.940326944963227E-6	DEFECT
// Write the contents to our master list of links // This method assumes that all links are defined in // terms of absolute paths, or paths relative to the // working directory:	WITHOUT_CLASSIFICATION	0.9999824637006591	WITHOUT_CLASSIFICATION	1.7536299340883897E-5	DEFECT
// build the command line from what we got the format is // ss Get VSS items [-G] [-H] [-I-] [-N] [-O] [-R] [-V] [-W] [-Y] [-?] // as specified in the SS.EXE help	WITHOUT_CLASSIFICATION	0.9999992429836578	WITHOUT_CLASSIFICATION	7.570163422235147E-7	DEFECT
// -I- or -I-Y or -I-N	WITHOUT_CLASSIFICATION	0.9999945115389783	WITHOUT_CLASSIFICATION	5.4884610217225005E-6	DEFECT
// -I- or -I-Y or -I-N	WITHOUT_CLASSIFICATION	0.9999945115389783	WITHOUT_CLASSIFICATION	5.4884610217225005E-6	DEFECT
// -O-	WITHOUT_CLASSIFICATION	0.999994758832314	WITHOUT_CLASSIFICATION	5.241167685864044E-6	DEFECT
// -R	WITHOUT_CLASSIFICATION	0.9999956234179662	WITHOUT_CLASSIFICATION	4.376582033834188E-6	DEFECT
// -R	WITHOUT_CLASSIFICATION	0.9999956234179662	WITHOUT_CLASSIFICATION	4.376582033834188E-6	DEFECT
// -R	WITHOUT_CLASSIFICATION	0.9999956234179662	WITHOUT_CLASSIFICATION	4.376582033834188E-6	DEFECT
// -V	WITHOUT_CLASSIFICATION	0.9999944095130868	WITHOUT_CLASSIFICATION	5.5904869131324255E-6	DEFECT
// -W	WITHOUT_CLASSIFICATION	0.9999942144868	WITHOUT_CLASSIFICATION	5.785513199942552E-6	DEFECT
// -Y	WITHOUT_CLASSIFICATION	0.9999960792985071	WITHOUT_CLASSIFICATION	3.920701492935804E-6	DEFECT
// -Y	WITHOUT_CLASSIFICATION	0.9999960792985071	WITHOUT_CLASSIFICATION	3.920701492935804E-6	DEFECT
// -Y	WITHOUT_CLASSIFICATION	0.9999960792985071	WITHOUT_CLASSIFICATION	3.920701492935804E-6	DEFECT
// -G	WITHOUT_CLASSIFICATION	0.9999957853807538	WITHOUT_CLASSIFICATION	4.214619246105411E-6	DEFECT
// -GWS or -GWR	WITHOUT_CLASSIFICATION	0.9999944162915487	WITHOUT_CLASSIFICATION	5.583708451336952E-6	DEFECT
// VSS items	WITHOUT_CLASSIFICATION	0.9999987543933716	WITHOUT_CLASSIFICATION	1.2456066284087926E-6	DEFECT
// Use getShortLabel() so labels longer then 30 char are truncated // and the user is warned	WITHOUT_CLASSIFICATION	0.9999999435627637	WITHOUT_CLASSIFICATION	5.643723630266849E-8	DEFECT
// ss.exe exits with '100', when files have been skipped // so we have to ignore the failure	WITHOUT_CLASSIFICATION	0.9999965558907377	WITHOUT_CLASSIFICATION	3.4441092624312877E-6	DEFECT
// If location of ss.ini is specified we need to set the // environment-variable SSDIR to this value	WITHOUT_CLASSIFICATION	0.999999721032932	WITHOUT_CLASSIFICATION	2.789670679146923E-7	DEFECT
// build the command line from what we got the format is // ss Label VSS items [-C] [-H] [-I-] [-Llabel] [-N] [-O] [-V] [-Y] [-?] // as specified in the SS.EXE help	WITHOUT_CLASSIFICATION	0.9999995002114151	WITHOUT_CLASSIFICATION	4.997885848236798E-7	DEFECT
// VSS items	WITHOUT_CLASSIFICATION	0.9999987543933716	WITHOUT_CLASSIFICATION	1.2456066284087926E-6	DEFECT
// -C	WITHOUT_CLASSIFICATION	0.9999968486016882	WITHOUT_CLASSIFICATION	3.1513983117003242E-6	DEFECT
// -C	WITHOUT_CLASSIFICATION	0.9999968486016882	WITHOUT_CLASSIFICATION	3.1513983117003242E-6	DEFECT
// first off, make sure that we've got a command and a vssdir ...	WITHOUT_CLASSIFICATION	0.999988081411029	WITHOUT_CLASSIFICATION	1.1918588970899886E-5	DEFECT
// first off, make sure that we've got a command and a vssdir ...	WITHOUT_CLASSIFICATION	0.999988081411029	WITHOUT_CLASSIFICATION	1.1918588970899886E-5	DEFECT
// build the command line from what we got the format is // ss Checkin VSS items [-H] [-C] [-I-] [-N] [-O] [-R] [-W] [-Y] [-?] // as specified in the SS.EXE help	WITHOUT_CLASSIFICATION	0.9999993314006365	WITHOUT_CLASSIFICATION	6.68599363527522E-7	DEFECT
// -VL	WITHOUT_CLASSIFICATION	0.9999947073035007	WITHOUT_CLASSIFICATION	5.292696499228086E-6	DEFECT
// -B / -D / -F-	WITHOUT_CLASSIFICATION	0.9999908558651748	WITHOUT_CLASSIFICATION	9.144134825116511E-6	DEFECT
// -O	WITHOUT_CLASSIFICATION	0.9999947432447612	WITHOUT_CLASSIFICATION	5.256755238752056E-6	DEFECT
// first off, make sure that we've got a command and a localPath ...	WITHOUT_CLASSIFICATION	0.9999829924028881	WITHOUT_CLASSIFICATION	1.7007597111799524E-5	DEFECT
// -G-	WITHOUT_CLASSIFICATION	0.999995804026866	WITHOUT_CLASSIFICATION	4.19597313399963E-6	DEFECT
// first off, make sure that we've got a command and a vssdir...	WITHOUT_CLASSIFICATION	0.9999896747820453	WITHOUT_CLASSIFICATION	1.0325217954787465E-5	DEFECT
// build the command line from what we got // the format is: // ss Create VSS items [-C] [-H] [-I-] [-N] [-O] [-S] [-Y] [-?] // as specified in the SS.EXE help	WITHOUT_CLASSIFICATION	0.9999932364450187	WITHOUT_CLASSIFICATION	6.763554981376191E-6	DEFECT
// pre Kaffe 1.1.2	WITHOUT_CLASSIFICATION	0.9999990383818469	WITHOUT_CLASSIFICATION	9.61618153056469E-7	DEFECT
// only supported since Kaffe 1.1.2	WITHOUT_CLASSIFICATION	0.9999774918771779	WITHOUT_CLASSIFICATION	2.2508122822031475E-5	DEFECT
//handle the many different stub options.	WITHOUT_CLASSIFICATION	0.9999997360269917	WITHOUT_CLASSIFICATION	2.639730082299287E-7	DEFECT
//default is compatibility	WITHOUT_CLASSIFICATION	0.9999952903768953	WITHOUT_CLASSIFICATION	4.709623104777285E-6	DEFECT
//anything else	WITHOUT_CLASSIFICATION	0.9999951321951077	WITHOUT_CLASSIFICATION	4.867804892266915E-6	DEFECT
//do nothing with the value? or go -v+stubVersion??	WITHOUT_CLASSIFICATION	0.9999961275882464	WITHOUT_CLASSIFICATION	3.872411753564786E-6	DEFECT
//set the non-null stubOption	WITHOUT_CLASSIFICATION	0.9999985057586404	WITHOUT_CLASSIFICATION	1.494241359635711E-6	DEFECT
// we know that name.endsWith(".class")	WITHOUT_CLASSIFICATION	0.9999998410099711	WITHOUT_CLASSIFICATION	1.5899002891300767E-7	DEFECT
// Combine the build classpath with the system classpath, in an // order determined by the value of build.sysclasspath	WITHOUT_CLASSIFICATION	0.9999990111213419	WITHOUT_CLASSIFICATION	9.888786580216693E-7	DEFECT
// swallow	WITHOUT_CLASSIFICATION	0.9999965775394587	WITHOUT_CLASSIFICATION	3.4224605412498893E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999995133297559	WITHOUT_CLASSIFICATION	4.86670244023277E-7	DEFECT
// build the command line from what we got the format is // ss CP VSS items [-H] [-I-] [-Y] [-?] // as specified in the SS.EXE help	WITHOUT_CLASSIFICATION	0.9999991726510683	WITHOUT_CLASSIFICATION	8.273489317038584E-7	DEFECT
//for java1.5+, we generate compatible stubs, that is, unless //the caller asked for IDL or IIOP support.	WITHOUT_CLASSIFICATION	0.9999999211213234	WITHOUT_CLASSIFICATION	7.887867655690905E-8	DEFECT
// JRMP with simple naming convention	WITHOUT_CLASSIFICATION	0.9999984867081937	WITHOUT_CLASSIFICATION	1.5132918063306854E-6	DEFECT
/*                 * I know, this is not necessary, but I prefer it explicit (SB)                 */	WITHOUT_CLASSIFICATION	0.999937539868428	WITHOUT_CLASSIFICATION	6.246013157192636E-5	DEFECT
// no package	WITHOUT_CLASSIFICATION	0.9999997327853084	WITHOUT_CLASSIFICATION	2.672146915543303E-7	DEFECT
// no package	WITHOUT_CLASSIFICATION	0.9999997327853084	WITHOUT_CLASSIFICATION	2.672146915543303E-7	DEFECT
// only stub, no tie	WITHOUT_CLASSIFICATION	0.9999979189807814	WITHOUT_CLASSIFICATION	2.0810192186569813E-6	DEFECT
/*                         * stub is derived from implementation,                         * tie from interface name.                         */	WITHOUT_CLASSIFICATION	0.9999994446150927	WITHOUT_CLASSIFICATION	5.553849072114569E-7	DEFECT
//rely on RMIC being on the path	WITHOUT_CLASSIFICATION	0.9972859211961665	WITHOUT_CLASSIFICATION	0.002714078803833515	DEFECT
//set up the args	WITHOUT_CLASSIFICATION	0.999999675120798	WITHOUT_CLASSIFICATION	3.2487920201176126E-7	DEFECT
// Create an instance of the rmic	WITHOUT_CLASSIFICATION	0.9999996120154261	WITHOUT_CLASSIFICATION	3.8798457388508186E-7	DEFECT
//convert to lower case in the English locale,	WITHOUT_CLASSIFICATION	0.9999271710935547	WITHOUT_CLASSIFICATION	7.28289064452851E-5	DEFECT
//handle default specially by choosing the sun or kaffe compiler	WITHOUT_CLASSIFICATION	0.9999970365332234	WITHOUT_CLASSIFICATION	2.9634667766829583E-6	DEFECT
//no match? ask for the non-lower-cased type	WITHOUT_CLASSIFICATION	0.9999999568839211	WITHOUT_CLASSIFICATION	4.311607883953583E-8	DEFECT
//do the system assertions	WITHOUT_CLASSIFICATION	0.9999988798857278	WITHOUT_CLASSIFICATION	1.120114272218016E-6	DEFECT
//do the system assertions	WITHOUT_CLASSIFICATION	0.9999988798857278	WITHOUT_CLASSIFICATION	1.120114272218016E-6	DEFECT
//do the system assertions	WITHOUT_CLASSIFICATION	0.9999988798857278	WITHOUT_CLASSIFICATION	1.120114272218016E-6	DEFECT
//now any inner assertions	WITHOUT_CLASSIFICATION	0.9999964726577328	WITHOUT_CLASSIFICATION	3.527342267126748E-6	DEFECT
//now any inner assertions	WITHOUT_CLASSIFICATION	0.9999964726577328	WITHOUT_CLASSIFICATION	3.527342267126748E-6	DEFECT
//now any inner assertions	WITHOUT_CLASSIFICATION	0.9999964726577328	WITHOUT_CLASSIFICATION	3.527342267126748E-6	DEFECT
//catch invalidness	WITHOUT_CLASSIFICATION	0.9999996995303001	WITHOUT_CLASSIFICATION	3.0046969992426913E-7	DEFECT
//see if it is a package or a class	WITHOUT_CLASSIFICATION	0.9999962038219392	WITHOUT_CLASSIFICATION	3.7961780607923165E-6	DEFECT
//packages get a ... prefix	WITHOUT_CLASSIFICATION	0.9999936345881002	WITHOUT_CLASSIFICATION	6.36541189979829E-6	DEFECT
//append the ... suffix if not there already	WITHOUT_CLASSIFICATION	0.9960226954589282	WITHOUT_CLASSIFICATION	0.003977304541071804	DEFECT
//classes just get the classname	WITHOUT_CLASSIFICATION	0.9999995456954195	WITHOUT_CLASSIFICATION	4.5430458047791915E-7	DEFECT
//-- Fields ----------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999846899655396	WITHOUT_CLASSIFICATION	1.531003446043866E-5	DEFECT
//-- Methods ---------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.999973193251151	WITHOUT_CLASSIFICATION	2.6806748849064535E-5	DEFECT
// Add all nested elements to our catalog	WITHOUT_CLASSIFICATION	0.9999963390887798	WITHOUT_CLASSIFICATION	3.6609112201732636E-6	DEFECT
// Ignore exception	WITHOUT_CLASSIFICATION	0.9999974145026143	WITHOUT_CLASSIFICATION	2.5854973856815335E-6	DEFECT
// New behavior for delayed task creation. Description // will be evaluated in Project.getDescription()	WITHOUT_CLASSIFICATION	0.9999852684642099	WITHOUT_CLASSIFICATION	1.473153579019312E-5	DEFECT
// Append the classpath of the nested catalog	WITHOUT_CLASSIFICATION	0.9998552532668331	WITHOUT_CLASSIFICATION	1.4474673316689437E-4	DEFECT
// Append the catalog path of the nested catalog	WITHOUT_CLASSIFICATION	0.9996004979054672	WITHOUT_CLASSIFICATION	3.9950209453268434E-4	DEFECT
// At this point we are probably in failure mode, but // try to use the bare URI as a last gasp	WITHOUT_CLASSIFICATION	0.9999904372338853	WITHOUT_CLASSIFICATION	9.562766114696402E-6	DEFECT
// The Apache resolver is present - Need to check if it can // be seen by the catalog resolver class. Start by getting // the actual loader	WITHOUT_CLASSIFICATION	0.9999939524256273	WITHOUT_CLASSIFICATION	6.047574372658436E-6	DEFECT
// load the base class through this loader.	WITHOUT_CLASSIFICATION	0.9999957513510275	WITHOUT_CLASSIFICATION	4.248648972561947E-6	DEFECT
// and find its actual loader	WITHOUT_CLASSIFICATION	0.9999986722390122	WITHOUT_CLASSIFICATION	1.3277609878812726E-6	DEFECT
// // Success!  The xml-commons resolver library is // available, so use it. //	WITHOUT_CLASSIFICATION	0.9999997142534222	WITHOUT_CLASSIFICATION	2.857465778309595E-7	DEFECT
// // The xml-commons resolver library is not // available, so we can't use it. //	WITHOUT_CLASSIFICATION	0.9999944668591754	WITHOUT_CLASSIFICATION	5.53314082467943E-6	DEFECT
// the following line seems to be necessary on Windows under JDK 1.2	WITHOUT_CLASSIFICATION	0.9991595395238116	WITHOUT_CLASSIFICATION	8.404604761883726E-4	DEFECT
// // The ResourceLocation may specify a relative path for its // location attribute.  This is resolved using the appropriate // base. //	WITHOUT_CLASSIFICATION	0.9999751541464396	WITHOUT_CLASSIFICATION	2.484585356052801E-5	DEFECT
// // for classpath lookup we ignore the base directory //	WITHOUT_CLASSIFICATION	0.999999961243194	WITHOUT_CLASSIFICATION	3.87568060758416E-8	DEFECT
// // The ResourceLocation may specify a relative url for its // location attribute.  This is resolved using the appropriate // base. //	WITHOUT_CLASSIFICATION	0.9999884555371883	WITHOUT_CLASSIFICATION	1.154446281170553E-5	DEFECT
// // We didn't match a ResourceLocation, but since we // only support PUBLIC and URI entry types internally, // it is still possible that there is another entry in // an external catalog that will match.  We call // Apache resolver's resolveEntity method to cover // this possibility. //	WITHOUT_CLASSIFICATION	0.9997719914737139	WITHOUT_CLASSIFICATION	2.280085262861579E-4	DEFECT
// // Use the passed in base in preference to the base // from matchingEntry, which is either null or the // directory in which the external catalog file from // which it was obtained is located.  We make a copy // so matchingEntry's original base is untouched.  Of // course, if there is no base, no need to make a // copy... // // This is the standard behavior as per my reading of // the JAXP and XML Catalog specs.  CKS 11/7/2002 //	WITHOUT_CLASSIFICATION	0.9999912383744047	WITHOUT_CLASSIFICATION	8.761625595331479E-6	DEFECT
// Parse each catalog listed in nested <catalogpath> elements	WITHOUT_CLASSIFICATION	0.9999998208073717	WITHOUT_CLASSIFICATION	1.7919262835842917E-7	DEFECT
//-- XMLCatalog	WITHOUT_CLASSIFICATION	0.9998877289207765	WITHOUT_CLASSIFICATION	1.1227107922349312E-4	DEFECT
/* Methods below all add specific selectors */	WITHOUT_CLASSIFICATION	0.999999573127979	WITHOUT_CLASSIFICATION	4.268720209536336E-7	DEFECT
// No includes supplied, so set it to 'matches all'	WITHOUT_CLASSIFICATION	0.9999999398646557	WITHOUT_CLASSIFICATION	6.013534423256398E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999995133297559	WITHOUT_CLASSIFICATION	4.86670244023277E-7	DEFECT
/* package-private for now */	WITHOUT_CLASSIFICATION	0.9999998219963386	WITHOUT_CLASSIFICATION	1.7800366141610747E-7	DEFECT
/* package-private for now */	WITHOUT_CLASSIFICATION	0.9999998219963386	WITHOUT_CLASSIFICATION	1.7800366141610747E-7	DEFECT
// special case in ZIPs, we do not want this thing included	WITHOUT_CLASSIFICATION	0.9999976190851301	WITHOUT_CLASSIFICATION	2.3809148699496052E-6	DEFECT
// first check if the archive needs to be scanned again	WITHOUT_CLASSIFICATION	0.9999991271083133	WITHOUT_CLASSIFICATION	8.728916867229725E-7	DEFECT
//do not use a FileResource b/c it pulls File info from the filesystem:	WITHOUT_CLASSIFICATION	0.999997712596857	WITHOUT_CLASSIFICATION	2.287403143126673E-6	DEFECT
// spare scanning again and again	WITHOUT_CLASSIFICATION	0.9999996892475199	WITHOUT_CLASSIFICATION	3.107524800787764E-7	DEFECT
/* cached DirectoryScanner instance for our own Project only */	WITHOUT_CLASSIFICATION	0.9999051244609996	WITHOUT_CLASSIFICATION	9.487553900049723E-5	DEFECT
// SelectorContainer methods	WITHOUT_CLASSIFICATION	0.9999999844934391	WITHOUT_CLASSIFICATION	1.5506560897699877E-8	DEFECT
// WIN9x uses a bat file for executing commands	WITHOUT_CLASSIFICATION	0.99997428581651	WITHOUT_CLASSIFICATION	2.5714183489964442E-5	DEFECT
// empty path return empty string	WITHOUT_CLASSIFICATION	0.9999996139449627	WITHOUT_CLASSIFICATION	3.8605503721139677E-7	DEFECT
//no command? no string	WITHOUT_CLASSIFICATION	0.9999987251327627	WITHOUT_CLASSIFICATION	1.2748672373577837E-6	DEFECT
// parse with a simple finite state machine	WITHOUT_CLASSIFICATION	0.9999992064017221	WITHOUT_CLASSIFICATION	7.935982778554529E-7	DEFECT
//inherit doc	WITHOUT_CLASSIFICATION	0.9999618328083636	WITHOUT_CLASSIFICATION	3.81671916363849E-5	DEFECT
//can't have zero-length token	WITHOUT_CLASSIFICATION	0.9999497423030053	WITHOUT_CLASSIFICATION	5.0257696994851744E-5	DEFECT
// we have another token, let's parse it.	WITHOUT_CLASSIFICATION	0.9999732453830951	WITHOUT_CLASSIFICATION	2.675461690495245E-5	DEFECT
// should always be the case...	WITHOUT_CLASSIFICATION	0.9999949913954875	WITHOUT_CLASSIFICATION	5.008604512389671E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999995287844801	WITHOUT_CLASSIFICATION	4.7121551989690683E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999995287844801	WITHOUT_CLASSIFICATION	4.7121551989690683E-7	DEFECT
// swallow	WITHOUT_CLASSIFICATION	0.9999965775394587	WITHOUT_CLASSIFICATION	3.4224605412498893E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999995133297559	WITHOUT_CLASSIFICATION	4.86670244023277E-7	DEFECT
/**     * Invoked by IntrospectionHelper for <code>setXXX(Path p)</code>     * attribute setters.     * @param p the <code>Project</code> for this path.     * @param path the <code>String</code> path definition.     */	WITHOUT_CLASSIFICATION	0.999992020851352	WITHOUT_CLASSIFICATION	7.9791486480265E-6	DEFECT
// ignore: don't trust anyone	WITHOUT_CLASSIFICATION	0.9999711269957346	WITHOUT_CLASSIFICATION	2.8873004265291153E-5	DEFECT
// last: don't trust the developer	WITHOUT_CLASSIFICATION	0.9999811858195147	WITHOUT_CLASSIFICATION	1.88141804854247E-5	DEFECT
// newer versions of Kaffe (1.1.1+) won't have this, // but this will be sorted by FileSet anyway.	WITHOUT_CLASSIFICATION	0.9999898303435664	WITHOUT_CLASSIFICATION	1.0169656433617023E-5	DEFECT
// JDK 1.2+ seems to set java.home to the JRE directory.	WITHOUT_CLASSIFICATION	0.9999999066305625	WITHOUT_CLASSIFICATION	9.336943748739806E-8	DEFECT
// Just keep the old version as well and let addExisting // sort it out.	WITHOUT_CLASSIFICATION	0.9999999575096318	WITHOUT_CLASSIFICATION	4.2490368255231684E-8	DEFECT
// Sun's and Apple's 1.4 have JCE and JSSE in separate jars.	WITHOUT_CLASSIFICATION	0.9999966172267466	WITHOUT_CLASSIFICATION	3.382773253345206E-6	DEFECT
// IBM's 1.4 has rt.jar split into 4 smaller jars and a combined // JCE/JSSE in security.jar.	WITHOUT_CLASSIFICATION	0.9999964798417434	WITHOUT_CLASSIFICATION	3.5201582565089812E-6	DEFECT
// Added for MacOS X	WITHOUT_CLASSIFICATION	0.9999876109894044	WITHOUT_CLASSIFICATION	1.2389010595719478E-5	DEFECT
//remove any null elements	WITHOUT_CLASSIFICATION	0.9999989152403583	WITHOUT_CLASSIFICATION	1.0847596416707372E-6	DEFECT
//create the list	WITHOUT_CLASSIFICATION	0.9999999182385494	WITHOUT_CLASSIFICATION	8.176145069322863E-8	DEFECT
//fill it	WITHOUT_CLASSIFICATION	0.9999586173130904	WITHOUT_CLASSIFICATION	4.138268690959317E-5	DEFECT
//convert to an array	WITHOUT_CLASSIFICATION	0.9999851252899843	WITHOUT_CLASSIFICATION	1.4874710015586061E-5	DEFECT
// properties are part of the vm options...	WITHOUT_CLASSIFICATION	0.9999753116138594	WITHOUT_CLASSIFICATION	2.4688386140597787E-5	DEFECT
//boot classpath	WITHOUT_CLASSIFICATION	0.9999992002277123	WITHOUT_CLASSIFICATION	7.997722878296803E-7	DEFECT
//main classpath	WITHOUT_CLASSIFICATION	0.9999996786780754	WITHOUT_CLASSIFICATION	3.213219246212545E-7	DEFECT
//now any assertions are added	WITHOUT_CLASSIFICATION	0.9999887878092458	WITHOUT_CLASSIFICATION	1.1212190754154277E-5	DEFECT
// this is the classname to run as well as its arguments. // in case of 'executeJar', the executable is a jar file.	WITHOUT_CLASSIFICATION	0.9999999984387339	WITHOUT_CLASSIFICATION	1.561266140891515E-9	DEFECT
// cloned system properties	WITHOUT_CLASSIFICATION	0.9999854104402986	WITHOUT_CLASSIFICATION	1.4589559701371988E-5	DEFECT
// classpath is "-classpath <classpath>" -> 2 args	WITHOUT_CLASSIFICATION	0.9999996386968525	WITHOUT_CLASSIFICATION	3.613031474686943E-7	DEFECT
// bootclasspath is "-Xbootclasspath:<classpath>" -> 1 arg	WITHOUT_CLASSIFICATION	0.999998736448093	WITHOUT_CLASSIFICATION	1.2635519070634633E-6	DEFECT
// jar execution requires an additional -jar option	WITHOUT_CLASSIFICATION	0.9999661197661189	WITHOUT_CLASSIFICATION	3.388023388113967E-5	DEFECT
/*<? extends EnumeratedAttribute>*/	WITHOUT_CLASSIFICATION	0.9999974294290727	WITHOUT_CLASSIFICATION	2.5705709273503808E-6	DEFECT
//end nested class	WITHOUT_CLASSIFICATION	0.9999994761553028	WITHOUT_CLASSIFICATION	5.238446972655853E-7	DEFECT
// Add this PropertySet's nested PropertySets' property names.	WITHOUT_CLASSIFICATION	0.9999973427510929	WITHOUT_CLASSIFICATION	2.6572489072340888E-6	DEFECT
//make a copy...	WITHOUT_CLASSIFICATION	0.9999815262480184	WITHOUT_CLASSIFICATION	1.8473751981551424E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999995133297559	WITHOUT_CLASSIFICATION	4.86670244023277E-7	DEFECT
// Gotta atleast put in the proper spelling :-P	WITHOUT_CLASSIFICATION	0.9993934258397358	WITHOUT_CLASSIFICATION	6.06574160264287E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999995133297559	WITHOUT_CLASSIFICATION	4.86670244023277E-7	DEFECT
// If this TransformOperation has DrawOperation children // then Rotate the first child and return.	WITHOUT_CLASSIFICATION	0.9999999773853003	WITHOUT_CLASSIFICATION	2.2614699628527753E-8	DEFECT
// If this TransformOperation has DrawOperation children // then Rotate the first child and return.	WITHOUT_CLASSIFICATION	0.9999999773853003	WITHOUT_CLASSIFICATION	2.2614699628527753E-8	DEFECT
// CheckStyle:MemberNameCheck ON	WITHOUT_CLASSIFICATION	0.9999991405906014	WITHOUT_CLASSIFICATION	8.594093985893521E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc // CheckStyle:MemberNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9999999027264571	WITHOUT_CLASSIFICATION	9.727354290302723E-8	DEFECT
// change this to get the objects from the other reference	WITHOUT_CLASSIFICATION	0.9999996986499635	WITHOUT_CLASSIFICATION	3.0135003649596797E-7	DEFECT
// change this to get the objects from the other reference	WITHOUT_CLASSIFICATION	0.9999996986499635	WITHOUT_CLASSIFICATION	3.0135003649596797E-7	DEFECT
//-- Fields ----------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999846899655396	WITHOUT_CLASSIFICATION	1.531003446043866E-5	DEFECT
//-- Methods ---------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.999973193251151	WITHOUT_CLASSIFICATION	2.6806748849064535E-5	DEFECT
// CheckStyle:VisibilityModifier OFF	WITHOUT_CLASSIFICATION	0.9999994594625796	WITHOUT_CLASSIFICATION	5.405374203914989E-7	DEFECT
// may be null if a system property has been added // after the project instance has been initialized	WITHOUT_CLASSIFICATION	0.9999990929817321	WITHOUT_CLASSIFICATION	9.070182679774492E-7	DEFECT
// Add this PropertySet's property names.	WITHOUT_CLASSIFICATION	0.9999927134444869	WITHOUT_CLASSIFICATION	7.286555513072841E-6	DEFECT
//map the names	WITHOUT_CLASSIFICATION	0.9999981582549142	WITHOUT_CLASSIFICATION	1.841745085822664E-6	DEFECT
// Create one NameEntry in the appropriate pattern list for each // line in the file.	WITHOUT_CLASSIFICATION	0.99999994301673	WITHOUT_CLASSIFICATION	5.698326993093059E-8	DEFECT
// Get a FileReader	WITHOUT_CLASSIFICATION	0.9999996145762455	WITHOUT_CLASSIFICATION	3.8542375444563084E-7	DEFECT
//Ignore exception	WITHOUT_CLASSIFICATION	0.9999769901383554	WITHOUT_CLASSIFICATION	2.3009861644692112E-5	DEFECT
//-- ResourceLocation	WITHOUT_CLASSIFICATION	0.9999978706646923	WITHOUT_CLASSIFICATION	2.1293353076787723E-6	DEFECT
// Add base set of permissions	WITHOUT_CLASSIFICATION	0.999994629347918	WITHOUT_CLASSIFICATION	5.370652081985193E-6	DEFECT
/*                     if the permission was not explicitly granted or revoked                     the original security manager will do its work                    */	WITHOUT_CLASSIFICATION	0.9766769976855927	WITHOUT_CLASSIFICATION	0.02332300231440731	DEFECT
// None of the actions revoked, so all allowed.	WITHOUT_CLASSIFICATION	0.999999919056049	WITHOUT_CLASSIFICATION	8.094395106813342E-8	DEFECT
//default true:	WITHOUT_CLASSIFICATION	0.9999936561474263	WITHOUT_CLASSIFICATION	6.3438525737768946E-6	DEFECT
//default false:	WITHOUT_CLASSIFICATION	0.9999964399543221	WITHOUT_CLASSIFICATION	3.560045677964739E-6	DEFECT
//default false:	WITHOUT_CLASSIFICATION	0.9999964399543221	WITHOUT_CLASSIFICATION	3.560045677964739E-6	DEFECT
// The regular expression factory	WITHOUT_CLASSIFICATION	0.9998245156051646	WITHOUT_CLASSIFICATION	1.7548439483541157E-4	DEFECT
// temporary variable	WITHOUT_CLASSIFICATION	0.9999999672855652	WITHOUT_CLASSIFICATION	3.271443476459043E-8	DEFECT
// This is included	WITHOUT_CLASSIFICATION	0.999991152780239	WITHOUT_CLASSIFICATION	8.84721976098443E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999995133297559	WITHOUT_CLASSIFICATION	4.86670244023277E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999995133297559	WITHOUT_CLASSIFICATION	4.86670244023277E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999995133297559	WITHOUT_CLASSIFICATION	4.86670244023277E-7	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9999655314264141	WITHOUT_CLASSIFICATION	3.4468573585883755E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999995133297559	WITHOUT_CLASSIFICATION	4.86670244023277E-7	DEFECT
//- ApacheCatalog	WITHOUT_CLASSIFICATION	0.9999792024788459	WITHOUT_CLASSIFICATION	2.0797521154239603E-5	DEFECT
// // If you don't do this, you get all sorts of annoying // warnings about a missing properties file.  However, it // seems to work just fine with default values.  Ultimately, // we should probably include a "CatalogManager.properties" // file in the ant jarfile with some default property // settings.  See CatalogManager.java for more details. //	WITHOUT_CLASSIFICATION	0.999999897330985	WITHOUT_CLASSIFICATION	1.0266901493766054E-7	DEFECT
// // Make sure CatalogResolver instantiates ApacheCatalog, // rather than a plain Catalog //	WITHOUT_CLASSIFICATION	0.9999995878043783	WITHOUT_CLASSIFICATION	4.121956217774729E-7	DEFECT
// debug // CatalogManager.getStaticManager().setVerbosity(4);	WITHOUT_CLASSIFICATION	0.9999987283181849	WITHOUT_CLASSIFICATION	1.271681815060609E-6	DEFECT
// Pass in reference to ourselves so we can be called back.	WITHOUT_CLASSIFICATION	0.9999988535718202	WITHOUT_CLASSIFICATION	1.1464281798005253E-6	DEFECT
//-- ApacheCatalogResolver	WITHOUT_CLASSIFICATION	0.9999947761502911	WITHOUT_CLASSIFICATION	5.2238497088857485E-6	DEFECT
//sorted bag impl. borrowed from commons-collections TreeBag:	WITHOUT_CLASSIFICATION	0.9996735963664785	WITHOUT_CLASSIFICATION	3.2640363352145677E-4	DEFECT
/* now check each Resource in case the child only           lets through files from any children IT may have: */	WITHOUT_CLASSIFICATION	0.9968936838383304	WITHOUT_CLASSIFICATION	0.003106316161669655	DEFECT
//?	WITHOUT_CLASSIFICATION	0.9999682996682002	WITHOUT_CLASSIFICATION	3.170033179976943E-5	DEFECT
//not using the accessor in this case to avoid side effects	WITHOUT_CLASSIFICATION	0.9970564290595879	WITHOUT_CLASSIFICATION	0.002943570940412031	DEFECT
/*package-private*/	WITHOUT_CLASSIFICATION	0.9999981710797543	WITHOUT_CLASSIFICATION	1.8289202456990049E-6	DEFECT
//new oata.util.ReaderInputStream(new InputStreamReader(	WITHOUT_CLASSIFICATION	0.9999320614679809	WITHOUT_CLASSIFICATION	6.793853201912924E-5	DEFECT
//, encoding), encoding);	WITHOUT_CLASSIFICATION	0.9999303604739433	WITHOUT_CLASSIFICATION	6.963952605671436E-5	DEFECT
//first the easy way, if all children are filesystem-only, return true:	WITHOUT_CLASSIFICATION	0.9999976970605396	WITHOUT_CLASSIFICATION	2.3029394603667386E-6	DEFECT
//preserve order-encountered using a list; enforce set logic manually:	WITHOUT_CLASSIFICATION	0.9999530370589045	WITHOUT_CLASSIFICATION	4.696294109554669E-5	DEFECT
/* cached DirectoryScanner instance */	WITHOUT_CLASSIFICATION	0.9999973205353461	WITHOUT_CLASSIFICATION	2.6794646539087926E-6	DEFECT
//if no nested, natural order:	WITHOUT_CLASSIFICATION	0.9999994084030185	WITHOUT_CLASSIFICATION	5.915969814779353E-7	DEFECT
//dummy	WITHOUT_CLASSIFICATION	0.9998564209858734	WITHOUT_CLASSIFICATION	1.4357901412653912E-4	DEFECT
//implement ResourceSelector; inherit doc	WITHOUT_CLASSIFICATION	0.9999939497897677	WITHOUT_CLASSIFICATION	6.050210232152012E-6	DEFECT
// First, check that all elements are correctly configured	WITHOUT_CLASSIFICATION	0.9999998629938525	WITHOUT_CLASSIFICATION	1.3700614754485511E-7	DEFECT
//if either of them is missing, they are different	WITHOUT_CLASSIFICATION	0.9999438323238237	WITHOUT_CLASSIFICATION	5.616767617625045E-5	DEFECT
// different size =>different files	WITHOUT_CLASSIFICATION	0.9999994636884453	WITHOUT_CLASSIFICATION	5.363115547388893E-7	DEFECT
//same date if dest timestamp is within granularity of the srcfile	WITHOUT_CLASSIFICATION	0.999991934707072	WITHOUT_CLASSIFICATION	8.0652929278545E-6	DEFECT
// different dates => different files	WITHOUT_CLASSIFICATION	0.9999996005908378	WITHOUT_CLASSIFICATION	3.994091621887118E-7	DEFECT
//here do a bulk comparison	WITHOUT_CLASSIFICATION	0.9999909150405117	WITHOUT_CLASSIFICATION	9.0849594882965E-6	DEFECT
// At this point, we know we have a tie.	WITHOUT_CLASSIFICATION	0.9999986168864194	WITHOUT_CLASSIFICATION	1.3831135805419133E-6	DEFECT
// throw BuildException on error	WITHOUT_CLASSIFICATION	0.9996300628370363	WITHOUT_CLASSIFICATION	3.6993716296373244E-4	DEFECT
// throw BuildException on error	WITHOUT_CLASSIFICATION	0.9996300628370363	WITHOUT_CLASSIFICATION	3.6993716296373244E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999995133297559	WITHOUT_CLASSIFICATION	4.86670244023277E-7	DEFECT
// throw BuildException on error	WITHOUT_CLASSIFICATION	0.9996300628370363	WITHOUT_CLASSIFICATION	3.6993716296373244E-4	DEFECT
// throw BuildException on error	WITHOUT_CLASSIFICATION	0.9996300628370363	WITHOUT_CLASSIFICATION	3.6993716296373244E-4	DEFECT
// throw BuildException on error	WITHOUT_CLASSIFICATION	0.9996300628370363	WITHOUT_CLASSIFICATION	3.6993716296373244E-4	DEFECT
// throw BuildException on error	WITHOUT_CLASSIFICATION	0.9996300628370363	WITHOUT_CLASSIFICATION	3.6993716296373244E-4	DEFECT
// If you felt daring, you could cache the basedir absolute path	WITHOUT_CLASSIFICATION	0.9999977266380778	WITHOUT_CLASSIFICATION	2.27336192218535E-6	DEFECT
// Sanity check. Ditch it if you want faster performance	WITHOUT_CLASSIFICATION	0.9999990356749443	WITHOUT_CLASSIFICATION	9.643250557732343E-7	DEFECT
// Determine file whose out-of-dateness is to be checked	WITHOUT_CLASSIFICATION	0.9999993873452075	WITHOUT_CLASSIFICATION	6.126547925846809E-7	DEFECT
// If filename does not match the To attribute of the mapper // then filter it out of the files we are considering	WITHOUT_CLASSIFICATION	0.9999870290253833	WITHOUT_CLASSIFICATION	1.2970974616723006E-5	DEFECT
// If filename does not match the To attribute of the mapper // then filter it out of the files we are considering	WITHOUT_CLASSIFICATION	0.9999870290253833	WITHOUT_CLASSIFICATION	1.2970974616723006E-5	DEFECT
// Sanity check	WITHOUT_CLASSIFICATION	0.99999961474259	WITHOUT_CLASSIFICATION	3.852574099620004E-7	DEFECT
// Sanity check	WITHOUT_CLASSIFICATION	0.99999961474259	WITHOUT_CLASSIFICATION	3.852574099620004E-7	DEFECT
// Determine file whose existence is to be checked	WITHOUT_CLASSIFICATION	0.9999980611655658	WITHOUT_CLASSIFICATION	1.9388344342901576E-6	DEFECT
/**     * When using this as a custom selector, this method will be called.     * It translates each parameter into the appropriate setXXX() call.     *     * @param parameters the complete set of parameters for this selector.     */	WITHOUT_CLASSIFICATION	0.9999983349580724	WITHOUT_CLASSIFICATION	1.6650419275425937E-6	DEFECT
// Directory size never selected for	WITHOUT_CLASSIFICATION	0.9999984284720764	WITHOUT_CLASSIFICATION	1.571527923480965E-6	DEFECT
/* You wish! */	WITHOUT_CLASSIFICATION	0.9999736440994211	WITHOUT_CLASSIFICATION	2.6355900578839984E-5	DEFECT
// check millis and only set it once.	WITHOUT_CLASSIFICATION	0.9999981883286397	WITHOUT_CLASSIFICATION	1.8116713603303003E-6	DEFECT
// When str starts with a File.separator, pattern has to start with a // File.separator. // When pattern starts with a File.separator, str has to start with a // File.separator.	WITHOUT_CLASSIFICATION	0.9999990267488935	WITHOUT_CLASSIFICATION	9.732511065230553E-7	DEFECT
// up to first '**'	WITHOUT_CLASSIFICATION	0.9999984096974736	WITHOUT_CLASSIFICATION	1.5903025264761728E-6	DEFECT
// up to first '**'	WITHOUT_CLASSIFICATION	0.9999984096974736	WITHOUT_CLASSIFICATION	1.5903025264761728E-6	DEFECT
// String is exhausted	WITHOUT_CLASSIFICATION	0.9999970378555365	WITHOUT_CLASSIFICATION	2.962144463358558E-6	DEFECT
// String is exhausted	WITHOUT_CLASSIFICATION	0.9999970378555365	WITHOUT_CLASSIFICATION	2.962144463358558E-6	DEFECT
// String is exhausted	WITHOUT_CLASSIFICATION	0.9999970378555365	WITHOUT_CLASSIFICATION	2.962144463358558E-6	DEFECT
// String not exhausted, but pattern is. Failure.	WITHOUT_CLASSIFICATION	0.9997901050042851	WITHOUT_CLASSIFICATION	2.0989499571498867E-4	DEFECT
// String not exhausted, but pattern is. Failure.	WITHOUT_CLASSIFICATION	0.9997901050042851	WITHOUT_CLASSIFICATION	2.0989499571498867E-4	DEFECT
// up to last '**'	WITHOUT_CLASSIFICATION	0.9999986745525579	WITHOUT_CLASSIFICATION	1.3254474420821452E-6	DEFECT
// '**/**' situation, so skip one	WITHOUT_CLASSIFICATION	0.99999995005778	WITHOUT_CLASSIFICATION	4.994222012538585E-8	DEFECT
// No '*'s, so we make a shortcut	WITHOUT_CLASSIFICATION	0.9999999714209427	WITHOUT_CLASSIFICATION	2.8579057347853676E-8	DEFECT
// Pattern and string do not have the same size	WITHOUT_CLASSIFICATION	0.9999919109420066	WITHOUT_CLASSIFICATION	8.089057993536566E-6	DEFECT
// Character mismatch	WITHOUT_CLASSIFICATION	0.9999999872009431	WITHOUT_CLASSIFICATION	1.2799057000255628E-8	DEFECT
// Character mismatch	WITHOUT_CLASSIFICATION	0.9999999872009431	WITHOUT_CLASSIFICATION	1.2799057000255628E-8	DEFECT
// String matches against pattern	WITHOUT_CLASSIFICATION	0.9999994891555914	WITHOUT_CLASSIFICATION	5.108444085852698E-7	DEFECT
// throw BuildException on error	WITHOUT_CLASSIFICATION	0.9996300628370363	WITHOUT_CLASSIFICATION	3.6993716296373244E-4	DEFECT
// Character mismatch	WITHOUT_CLASSIFICATION	0.9999999872009431	WITHOUT_CLASSIFICATION	1.2799057000255628E-8	DEFECT
// Find the pattern between padIdxStart & padIdxTmp in str between // strIdxStart & strIdxEnd	WITHOUT_CLASSIFICATION	0.999999672651155	WITHOUT_CLASSIFICATION	3.273488449903116E-7	DEFECT
// Find the pattern between padIdxStart & padIdxTmp in str between // strIdxStart & strIdxEnd	WITHOUT_CLASSIFICATION	0.999999672651155	WITHOUT_CLASSIFICATION	3.273488449903116E-7	DEFECT
// Character mismatch	WITHOUT_CLASSIFICATION	0.9999999872009431	WITHOUT_CLASSIFICATION	1.2799057000255628E-8	DEFECT
// Character mismatch	WITHOUT_CLASSIFICATION	0.9999999872009431	WITHOUT_CLASSIFICATION	1.2799057000255628E-8	DEFECT
// Character mismatch	WITHOUT_CLASSIFICATION	0.9999999872009431	WITHOUT_CLASSIFICATION	1.2799057000255628E-8	DEFECT
// Pattern contains only '*', which matches anything	WITHOUT_CLASSIFICATION	0.9999983375432133	WITHOUT_CLASSIFICATION	1.6624567866436238E-6	DEFECT
// Process characters before first star	WITHOUT_CLASSIFICATION	0.9999999405290176	WITHOUT_CLASSIFICATION	5.9470982233096636E-8	DEFECT
// All characters in the string are used. Check if only '*'s are // left in the pattern. If so, we succeeded. Otherwise failure.	WITHOUT_CLASSIFICATION	0.9999877263250325	WITHOUT_CLASSIFICATION	1.2273674967508948E-5	DEFECT
// All characters in the string are used. Check if only '*'s are // left in the pattern. If so, we succeeded. Otherwise failure.	WITHOUT_CLASSIFICATION	0.9999877263250325	WITHOUT_CLASSIFICATION	1.2273674967508948E-5	DEFECT
// Process characters after last star	WITHOUT_CLASSIFICATION	0.9999999566448705	WITHOUT_CLASSIFICATION	4.335512957771753E-8	DEFECT
// process pattern between stars. padIdxStart and patIdxEnd point // always to a '*'.	WITHOUT_CLASSIFICATION	0.9999881112454522	WITHOUT_CLASSIFICATION	1.1888754547818512E-5	DEFECT
// Two stars next to each other, skip the first one.	WITHOUT_CLASSIFICATION	0.9996580365927628	WITHOUT_CLASSIFICATION	3.419634072372255E-4	DEFECT
// All characters in the string are used. Check if only '*'s are left // in the pattern. If so, we succeeded. Otherwise failure.	WITHOUT_CLASSIFICATION	0.9999977335125646	WITHOUT_CLASSIFICATION	2.2664874354588772E-6	DEFECT
/*++*/	WITHOUT_CLASSIFICATION	0.9998988252876561	WITHOUT_CLASSIFICATION	1.0117471234403413E-4	DEFECT
// Creation is done here rather than in isSelected() because some // containers may do a validation pass before running isSelected(), // but we need to check for the existence of the created class.	WITHOUT_CLASSIFICATION	0.9999998758642629	WITHOUT_CLASSIFICATION	1.2413573707500227E-7	DEFECT
// We know that dynselector must be non-null if no error message	WITHOUT_CLASSIFICATION	0.9999998506162321	WITHOUT_CLASSIFICATION	1.493837679197221E-7	DEFECT
// Deal with if and unless properties first	WITHOUT_CLASSIFICATION	0.9999921206543975	WITHOUT_CLASSIFICATION	7.879345602614301E-6	DEFECT
// -----  attributes  -----	WITHOUT_CLASSIFICATION	0.9999994832868262	WITHOUT_CLASSIFICATION	5.167131737628306E-7	DEFECT
// ----- internal member variables -----	WITHOUT_CLASSIFICATION	0.9999994770908813	WITHOUT_CLASSIFICATION	5.229091185381726E-7	DEFECT
// -----  constructors  -----	WITHOUT_CLASSIFICATION	0.9999992647355853	WITHOUT_CLASSIFICATION	7.352644146519567E-7	DEFECT
// ----- configuration  -----	WITHOUT_CLASSIFICATION	0.999988434067731	WITHOUT_CLASSIFICATION	1.1565932269040036E-5	DEFECT
// normal use inside Ant	WITHOUT_CLASSIFICATION	0.9999992810367729	WITHOUT_CLASSIFICATION	7.189632270559097E-7	DEFECT
// set self as a BuildListener to delay cachefile saves	WITHOUT_CLASSIFICATION	0.9999997184710157	WITHOUT_CLASSIFICATION	2.8152898429524194E-7	DEFECT
// no reference to project - e.g. during normal JUnit tests	WITHOUT_CLASSIFICATION	0.9999998341809737	WITHOUT_CLASSIFICATION	1.6581902626614747E-7	DEFECT
// this is a *.* parameter for later use	WITHOUT_CLASSIFICATION	0.9999989046394916	WITHOUT_CLASSIFICATION	1.0953605083569749E-6	DEFECT
// specify the algorithm classname	WITHOUT_CLASSIFICATION	0.9999980796788994	WITHOUT_CLASSIFICATION	1.9203211004947375E-6	DEFECT
// use Algorithm defined via name	WITHOUT_CLASSIFICATION	0.9999978704436953	WITHOUT_CLASSIFICATION	2.1295563046719887E-6	DEFECT
// use Algorithm specified by classname	WITHOUT_CLASSIFICATION	0.9999954139703355	WITHOUT_CLASSIFICATION	4.5860296644101976E-6	DEFECT
// nothing specified - use default	WITHOUT_CLASSIFICATION	0.9999999254068345	WITHOUT_CLASSIFICATION	7.45931655343082E-8	DEFECT
// else nothing to do	WITHOUT_CLASSIFICATION	0.9999920326730294	WITHOUT_CLASSIFICATION	7.967326970573198E-6	DEFECT
// use Algorithm defined via name	WITHOUT_CLASSIFICATION	0.9999978704436953	WITHOUT_CLASSIFICATION	2.1295563046719887E-6	DEFECT
// // -----  Set the main attributes, pattern '*'  ----- //	WITHOUT_CLASSIFICATION	0.9999999810768293	WITHOUT_CLASSIFICATION	1.8923170694040716E-8	DEFECT
// use Algorithm specified by classname	WITHOUT_CLASSIFICATION	0.9999954139703355	WITHOUT_CLASSIFICATION	4.5860296644101976E-6	DEFECT
// nothing specified - use default	WITHOUT_CLASSIFICATION	0.9999999254068345	WITHOUT_CLASSIFICATION	7.45931655343082E-8	DEFECT
// specify the cache classname	WITHOUT_CLASSIFICATION	0.999999953081894	WITHOUT_CLASSIFICATION	4.691810589145573E-8	DEFECT
// use Cache defined via name	WITHOUT_CLASSIFICATION	0.9999999884916694	WITHOUT_CLASSIFICATION	1.1508330720985882E-8	DEFECT
// use Cache specified by classname	WITHOUT_CLASSIFICATION	0.9999997181652529	WITHOUT_CLASSIFICATION	2.818347470924239E-7	DEFECT
// specify the comparator classname	WITHOUT_CLASSIFICATION	0.999999729439652	WITHOUT_CLASSIFICATION	2.7056034798599383E-7	DEFECT
// // -----  Set the special attributes, pattern '*.*'  ----- //	WITHOUT_CLASSIFICATION	0.9999999639031	WITHOUT_CLASSIFICATION	3.609690010164992E-8	DEFECT
// load the specified class	WITHOUT_CLASSIFICATION	0.9999999678498447	WITHOUT_CLASSIFICATION	3.2150155310697184E-8	DEFECT
// -----  the selection work  -----	WITHOUT_CLASSIFICATION	0.9992279669435961	WITHOUT_CLASSIFICATION	7.720330564039752E-4	DEFECT
// We have a 'resourced' file, so reconvert it and use // the 'old' implementation.	WITHOUT_CLASSIFICATION	0.9999995862965765	WITHOUT_CLASSIFICATION	4.1370342347154523E-7	DEFECT
// You can not compute a value for a directory	WITHOUT_CLASSIFICATION	0.9999831546861101	WITHOUT_CLASSIFICATION	1.6845313889936228E-5	DEFECT
// Get the values and do the comparison	WITHOUT_CLASSIFICATION	0.9999998956908744	WITHOUT_CLASSIFICATION	1.0430912562683907E-7	DEFECT
// Maybe update the cache	WITHOUT_CLASSIFICATION	0.9999998353592439	WITHOUT_CLASSIFICATION	1.646407561649144E-7	DEFECT
// -----  attribute and nested element support  -----	WITHOUT_CLASSIFICATION	0.9999983856301686	WITHOUT_CLASSIFICATION	1.6143698314372286E-6	DEFECT
// the usual classloader	WITHOUT_CLASSIFICATION	0.9999998287914188	WITHOUT_CLASSIFICATION	1.7120858126771612E-7	DEFECT
// additional use the provided classpath	WITHOUT_CLASSIFICATION	0.9999999197819067	WITHOUT_CLASSIFICATION	8.02180933417239E-8	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9999956845907362	WITHOUT_CLASSIFICATION	4.315409263804671E-6	DEFECT
// ----- 'beautiful' output -----	WITHOUT_CLASSIFICATION	0.9999924464274768	WITHOUT_CLASSIFICATION	7.5535725232400554E-6	DEFECT
// ----- BuildListener interface methods -----	WITHOUT_CLASSIFICATION	0.9999997298896732	WITHOUT_CLASSIFICATION	2.701103267756542E-7	DEFECT
// The EnumeratedAttributes for the three interface implementations. // Name-Classname mapping is done in the configure() method.	WITHOUT_CLASSIFICATION	0.9999999520076914	WITHOUT_CLASSIFICATION	4.7992308637396465E-8	DEFECT
// -----  member variables  -----	WITHOUT_CLASSIFICATION	0.9999995591576389	WITHOUT_CLASSIFICATION	4.4084236110345217E-7	DEFECT
// -----  member variables  -----	WITHOUT_CLASSIFICATION	0.9999995591576389	WITHOUT_CLASSIFICATION	4.4084236110345217E-7	DEFECT
// -----  Algorithm-Configuration  -----	WITHOUT_CLASSIFICATION	0.9997864173065542	WITHOUT_CLASSIFICATION	2.1358269344593932E-4	DEFECT
// -----  Algorithm-Configuration  -----	WITHOUT_CLASSIFICATION	0.9997864173065542	WITHOUT_CLASSIFICATION	2.1358269344593932E-4	DEFECT
// -----  Logic  -----	WITHOUT_CLASSIFICATION	0.9999968612793587	WITHOUT_CLASSIFICATION	3.1387206412253513E-6	DEFECT
// -----  Logic  -----	WITHOUT_CLASSIFICATION	0.9999968612793587	WITHOUT_CLASSIFICATION	3.1387206412253513E-6	DEFECT
// implementation adapted from ...taskdefs.Checksum, thanks to Magesh for hint	WITHOUT_CLASSIFICATION	0.9999915494100495	WITHOUT_CLASSIFICATION	8.45058995043149E-6	DEFECT
// Read the file	WITHOUT_CLASSIFICATION	0.9999992012017033	WITHOUT_CLASSIFICATION	7.987982968356628E-7	DEFECT
// -----  member variables - configuration  -----	WITHOUT_CLASSIFICATION	0.9999984896371442	WITHOUT_CLASSIFICATION	1.5103628557952983E-6	DEFECT
// -----  member variables - internal use  -----	WITHOUT_CLASSIFICATION	0.9999992975543245	WITHOUT_CLASSIFICATION	7.024456754718986E-7	DEFECT
// -----  Constructors  -----	WITHOUT_CLASSIFICATION	0.9999991655040682	WITHOUT_CLASSIFICATION	8.344959319044229E-7	DEFECT
// -----  Cache-Configuration  -----	WITHOUT_CLASSIFICATION	0.9999852866021842	WITHOUT_CLASSIFICATION	1.471339781592228E-5	DEFECT
// -----  Data Access	WITHOUT_CLASSIFICATION	0.9999993695915059	WITHOUT_CLASSIFICATION	6.304084941025887E-7	DEFECT
// after loading the cache is up to date with the file	WITHOUT_CLASSIFICATION	0.9999981416371285	WITHOUT_CLASSIFICATION	1.8583628715277589E-6	DEFECT
// -----  additional  -----	WITHOUT_CLASSIFICATION	0.999996730119604	WITHOUT_CLASSIFICATION	3.2698803959581183E-6	DEFECT
// swallow as this simply doesn't seem to be Kaffe	WITHOUT_CLASSIFICATION	0.9999926134572437	WITHOUT_CLASSIFICATION	7.386542756430561E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999995287844801	WITHOUT_CLASSIFICATION	4.7121551989690683E-7	DEFECT
// find the line breaks and pass other chars through in blocks	WITHOUT_CLASSIFICATION	0.9999493007064861	WITHOUT_CLASSIFICATION	5.069929351381463E-5	DEFECT
// either end of buffer or a line separator char	WITHOUT_CLASSIFICATION	0.9999990738018675	WITHOUT_CLASSIFICATION	9.261981325361094E-7	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9999655314264141	WITHOUT_CLASSIFICATION	3.4468573585883755E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999995133297559	WITHOUT_CLASSIFICATION	4.86670244023277E-7	DEFECT
// Because the content is only read the file will not be damaged. I tested // with JPG, ZIP and PDF as binary files.	WITHOUT_CLASSIFICATION	0.9999987815550432	WITHOUT_CLASSIFICATION	1.2184449567985853E-6	DEFECT
// don't need the opposite check as the Dictionaries have the // same size, so we've also covered all keys of d2 already.	WITHOUT_CLASSIFICATION	0.9999999817981315	WITHOUT_CLASSIFICATION	1.820186847476567E-8	DEFECT
//log uptodateness of all targets:	WITHOUT_CLASSIFICATION	0.9999983560922212	WITHOUT_CLASSIFICATION	1.643907778852855E-6	DEFECT
// CheckStyle:ParameterNumberCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9999992373274197	WITHOUT_CLASSIFICATION	7.62672580336948E-7	DEFECT
// this should not happen, because the lines are // returned with the end of line delimiter	WITHOUT_CLASSIFICATION	0.9999871283363478	WITHOUT_CLASSIFICATION	1.2871663652119525E-5	DEFECT
// CheckStyle:ParameterNumberCheck ON	WITHOUT_CLASSIFICATION	0.9999991221474819	WITHOUT_CLASSIFICATION	8.77852518091597E-7	DEFECT
// two not existing files are equal	WITHOUT_CLASSIFICATION	0.9999504577258069	WITHOUT_CLASSIFICATION	4.954227419309469E-5	DEFECT
// should the following two be switched?  If r1 and r2 refer to the same file, // isn't their content equal regardless of whether that file is a directory?	WITHOUT_CLASSIFICATION	0.9999998200534085	WITHOUT_CLASSIFICATION	1.7994659158323959E-7	DEFECT
// don't want to compare directory contents for now	WITHOUT_CLASSIFICATION	0.9997034326664398	WITHOUT_CLASSIFICATION	2.9656733356014995E-4	DEFECT
//as far as we know	WITHOUT_CLASSIFICATION	0.9999973572233907	WITHOUT_CLASSIFICATION	2.6427766093548027E-6	DEFECT
//ignore release of an already-closed funnel	WITHOUT_CLASSIFICATION	0.9999990068031501	WITHOUT_CLASSIFICATION	9.931968498363817E-7	DEFECT
// Write child elements and text	WITHOUT_CLASSIFICATION	0.9999999177057582	WITHOUT_CLASSIFICATION	8.229424177577282E-8	DEFECT
// Write indent characters	WITHOUT_CLASSIFICATION	0.999999959077395	WITHOUT_CLASSIFICATION	4.092260489428924E-8	DEFECT
// Write element	WITHOUT_CLASSIFICATION	0.9999981737235907	WITHOUT_CLASSIFICATION	1.8262764093414556E-6	DEFECT
// steal default namespace	WITHOUT_CLASSIFICATION	0.9999998871108796	WITHOUT_CLASSIFICATION	1.12889120409616E-7	DEFECT
// Write attributes	WITHOUT_CLASSIFICATION	0.9999997110037883	WITHOUT_CLASSIFICATION	2.8899621176720986E-7	DEFECT
// Write element close	WITHOUT_CLASSIFICATION	0.9999999274021003	WITHOUT_CLASSIFICATION	7.259789975109278E-8	DEFECT
// relative path	WITHOUT_CLASSIFICATION	0.9999992561521922	WITHOUT_CLASSIFICATION	7.438478078750387E-7	DEFECT
// Fall tru	WITHOUT_CLASSIFICATION	0.9999969200050759	WITHOUT_CLASSIFICATION	3.0799949240685232E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999995133297559	WITHOUT_CLASSIFICATION	4.86670244023277E-7	DEFECT
// Determine the Java version by looking at available classes // java.net.Proxy was introduced in JDK 1.5 // java.lang.CharSequence was introduced in JDK 1.4 // java.lang.StrictMath was introduced in JDK 1.3 // java.lang.ThreadLocal was introduced in JDK 1.2 // java.lang.Void was introduced in JDK 1.1 // Count up version until a NoClassDefFoundError ends the try	WITHOUT_CLASSIFICATION	0.9999999971114121	WITHOUT_CLASSIFICATION	2.8885878062139147E-9	DEFECT
// swallow as we've hit the max class version that // we have	WITHOUT_CLASSIFICATION	0.9999989511074538	WITHOUT_CLASSIFICATION	1.048892546176354E-6	DEFECT
// Extrapolating from: // "NetWare may have a "java" in that directory, but 99% of // the time, you don't want to execute it" -- Jeff Tulley // <JTULLEY@novell.com>	WITHOUT_CLASSIFICATION	0.9994926956113999	WITHOUT_CLASSIFICATION	5.073043886000782E-4	DEFECT
// On IBM's JDK 1.2 the directory layout is different, 1.3 follows // Sun's layout.	WITHOUT_CLASSIFICATION	0.9999867975224028	WITHOUT_CLASSIFICATION	1.320247759718408E-5	DEFECT
// On IBM's JDK 1.2 the directory layout is different, 1.3 follows // Sun's layout.	WITHOUT_CLASSIFICATION	0.9999867975224028	WITHOUT_CLASSIFICATION	1.320247759718408E-5	DEFECT
// Unfortunately on Windows java.home doesn't always refer // to the correct location, so we need to fall back to // assuming java is somewhere on the PATH.	WITHOUT_CLASSIFICATION	0.9998927749477916	WITHOUT_CLASSIFICATION	1.0722505220832897E-4	DEFECT
// fall back to JRE bin directory, also catches JDK 1.0 and 1.1 // where java.home points to the root of the JDK and Mac OS X where // the whole directory layout is different from Sun's	WITHOUT_CLASSIFICATION	0.9999975929090856	WITHOUT_CLASSIFICATION	2.407090914463825E-6	DEFECT
// This is the most common extension case - exe for windows and OS/2, // nothing for *nix.	WITHOUT_CLASSIFICATION	0.9999506600859027	WITHOUT_CLASSIFICATION	4.933991409728891E-5	DEFECT
//In Java1.5, the apache stuff moved.	WITHOUT_CLASSIFICATION	0.9999979138809922	WITHOUT_CLASSIFICATION	2.0861190076342903E-6	DEFECT
//fall through.	WITHOUT_CLASSIFICATION	0.9999004783573731	WITHOUT_CLASSIFICATION	9.952164262685776E-5	DEFECT
// fall through	WITHOUT_CLASSIFICATION	0.9999767921544644	WITHOUT_CLASSIFICATION	2.3207845535531548E-5	DEFECT
// fall through	WITHOUT_CLASSIFICATION	0.9999767921544644	WITHOUT_CLASSIFICATION	2.3207845535531548E-5	DEFECT
// fall through	WITHOUT_CLASSIFICATION	0.9999767921544644	WITHOUT_CLASSIFICATION	2.3207845535531548E-5	DEFECT
// are there any here that we forgot? // fall through	WITHOUT_CLASSIFICATION	0.9999950960972459	WITHOUT_CLASSIFICATION	4.90390275409359E-6	DEFECT
//things like sun.reflection, sun.misc, sun.net	WITHOUT_CLASSIFICATION	0.9999833274285409	WITHOUT_CLASSIFICATION	1.6672571459107393E-5	DEFECT
//things like sun.reflection, sun.misc, sun.net	WITHOUT_CLASSIFICATION	0.9999833274285409	WITHOUT_CLASSIFICATION	1.6672571459107393E-5	DEFECT
//Strip '.' token	WITHOUT_CLASSIFICATION	0.9999864399916986	WITHOUT_CLASSIFICATION	1.3560008301349895E-5	DEFECT
//If it ended in a dot, throw an exception	WITHOUT_CLASSIFICATION	0.998391704783939	WITHOUT_CLASSIFICATION	0.0016082952160609513	DEFECT
// Exact match	WITHOUT_CLASSIFICATION	0.9999985845559892	WITHOUT_CLASSIFICATION	1.4154440107923784E-6	DEFECT
// Exact match	WITHOUT_CLASSIFICATION	0.9999985845559892	WITHOUT_CLASSIFICATION	1.4154440107923784E-6	DEFECT
// Exact match	WITHOUT_CLASSIFICATION	0.9999985845559892	WITHOUT_CLASSIFICATION	1.4154440107923784E-6	DEFECT
// might read too much	WITHOUT_CLASSIFICATION	0.9999981875038201	WITHOUT_CLASSIFICATION	1.8124961799658444E-6	DEFECT
// would be imprecise	WITHOUT_CLASSIFICATION	0.9999886441263572	WITHOUT_CLASSIFICATION	1.1355873642773392E-5	DEFECT
//last character isn't a digit	WITHOUT_CLASSIFICATION	0.9999999240385539	WITHOUT_CLASSIFICATION	7.59614462244065E-8	DEFECT
// write out the number of characters encoded in this line.	WITHOUT_CLASSIFICATION	0.9999974642178558	WITHOUT_CLASSIFICATION	2.535782144095837E-6	DEFECT
// set the padding defaults	WITHOUT_CLASSIFICATION	0.9999998696407681	WITHOUT_CLASSIFICATION	1.3035923185181037E-7	DEFECT
// get the next 3 bytes (if we have them)	WITHOUT_CLASSIFICATION	0.9999869967447949	WITHOUT_CLASSIFICATION	1.3003255205126064E-5	DEFECT
// OK, Java 1.3.	WITHOUT_CLASSIFICATION	0.9999999020916881	WITHOUT_CLASSIFICATION	9.790831193373005E-8	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999995287844801	WITHOUT_CLASSIFICATION	4.7121551989690683E-7	DEFECT
// CheckStyle:ConstantNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9999989122270567	WITHOUT_CLASSIFICATION	1.0877729433110442E-6	DEFECT
// CheckStyle:ConstantNameCheck ON	WITHOUT_CLASSIFICATION	0.9999986047098379	WITHOUT_CLASSIFICATION	1.3952901620316304E-6	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9999655314264141	WITHOUT_CLASSIFICATION	3.4468573585883755E-5	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9999655314264141	WITHOUT_CLASSIFICATION	3.4468573585883755E-5	DEFECT
// #8031: first try Java 1.4.	WITHOUT_CLASSIFICATION	0.9999994291040042	WITHOUT_CLASSIFICATION	5.70895995777873E-7	DEFECT
// Reflection problems? Should not happen, debug.	WITHOUT_CLASSIFICATION	0.9989960369153675	WITHOUT_CLASSIFICATION	0.0010039630846323787	DEFECT
// CheckStyle:ParameterNumberCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9999992373274197	WITHOUT_CLASSIFICATION	7.62672580336948E-7	DEFECT
// CheckStyle:ParameterNumberCheck ON	WITHOUT_CLASSIFICATION	0.9999991221474819	WITHOUT_CLASSIFICATION	8.77852518091597E-7	DEFECT
// depending on the implementation the actual RE won't // get instantiated in the constructor.	WITHOUT_CLASSIFICATION	0.9999950433072444	WITHOUT_CLASSIFICATION	4.9566927555880674E-6	DEFECT
// terminate with a linefeed alone	WITHOUT_CLASSIFICATION	0.9999988333095952	WITHOUT_CLASSIFICATION	1.1666904048467904E-6	DEFECT
// NotReached	WITHOUT_CLASSIFICATION	0.9999977736420769	WITHOUT_CLASSIFICATION	2.2263579231633307E-6	DEFECT
//  0 to  7 //  8 to 15 // 16 to 23 // 24 to 31 // 32 to 39 // 40 to 47 // 48 to 55 // 56 to 63	WITHOUT_CLASSIFICATION	0.9999530038338442	WITHOUT_CLASSIFICATION	4.699616615589318E-5	DEFECT
// store the octets	WITHOUT_CLASSIFICATION	0.9999998147802629	WITHOUT_CLASSIFICATION	1.8521973704675806E-7	DEFECT
// store the octets	WITHOUT_CLASSIFICATION	0.9999998147802629	WITHOUT_CLASSIFICATION	1.8521973704675806E-7	DEFECT
// store the octets	WITHOUT_CLASSIFICATION	0.9999998147802629	WITHOUT_CLASSIFICATION	1.8521973704675806E-7	DEFECT
// padding	WITHOUT_CLASSIFICATION	0.9999935671810954	WITHOUT_CLASSIFICATION	6.432818904552384E-6	DEFECT
// padding	WITHOUT_CLASSIFICATION	0.9999935671810954	WITHOUT_CLASSIFICATION	6.432818904552384E-6	DEFECT
// magic property	WITHOUT_CLASSIFICATION	0.999993630196356	WITHOUT_CLASSIFICATION	6.369803643931276E-6	DEFECT
//only text nodes that are non null after property expansion are added	WITHOUT_CLASSIFICATION	0.9992331185249166	WITHOUT_CLASSIFICATION	7.66881475083308E-4	DEFECT
//no need to synchronize, as Vector is always synchronized	WITHOUT_CLASSIFICATION	0.9998461892579799	WITHOUT_CLASSIFICATION	1.5381074202010407E-4	DEFECT
// do not close the stream	WITHOUT_CLASSIFICATION	0.9999997847246324	WITHOUT_CLASSIFICATION	2.1527536764859574E-7	DEFECT
//Empty	WITHOUT_CLASSIFICATION	0.9999459198197441	WITHOUT_CLASSIFICATION	5.408018025589958E-5	DEFECT
//Empty	WITHOUT_CLASSIFICATION	0.9999459198197441	WITHOUT_CLASSIFICATION	5.408018025589958E-5	DEFECT
//get some non-crypto-grade randomness from various places.	WITHOUT_CLASSIFICATION	0.9999992118966443	WITHOUT_CLASSIFICATION	7.88103355605002E-7	DEFECT
// Cannot resolve it, so skip it.	WITHOUT_CLASSIFICATION	0.9999993947397305	WITHOUT_CLASSIFICATION	6.052602693571629E-7	DEFECT
// plain component	WITHOUT_CLASSIFICATION	0.9999996944265315	WITHOUT_CLASSIFICATION	3.0557346845366067E-7	DEFECT
// make sure we are dealing with an absolute path	WITHOUT_CLASSIFICATION	0.999999435467239	WITHOUT_CLASSIFICATION	5.645327611125505E-7	DEFECT
//remove the initial separator; the root has it.	WITHOUT_CLASSIFICATION	0.999998966413164	WITHOUT_CLASSIFICATION	1.033586835992227E-6	DEFECT
// UNC drive	WITHOUT_CLASSIFICATION	0.9999988529300274	WITHOUT_CLASSIFICATION	1.147069972540952E-6	DEFECT
// format: "DEVICE:[DIR.SUBDIR]FILE"	WITHOUT_CLASSIFICATION	0.9999242068935721	WITHOUT_CLASSIFICATION	7.579310642794058E-5	DEFECT
// treat directories specified using .DIR syntax as files	WITHOUT_CLASSIFICATION	0.9999965041772583	WITHOUT_CLASSIFICATION	3.4958227417238543E-6	DEFECT
// add an extra slash for filesystems with drive-specifiers	WITHOUT_CLASSIFICATION	0.9999996958158214	WITHOUT_CLASSIFICATION	3.041841785864737E-7	DEFECT
//do a check for the destination file existing	WITHOUT_CLASSIFICATION	0.9999992677707383	WITHOUT_CLASSIFICATION	7.322292615433485E-7	DEFECT
// execute the script	WITHOUT_CLASSIFICATION	0.999998427551606	WITHOUT_CLASSIFICATION	1.5724483941201366E-6	DEFECT
// do nothing by default	WITHOUT_CLASSIFICATION	0.9999991826921062	WITHOUT_CLASSIFICATION	8.173078936645578E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999995287844801	WITHOUT_CLASSIFICATION	4.7121551989690683E-7	DEFECT
// NotReached	WITHOUT_CLASSIFICATION	0.9999977736420769	WITHOUT_CLASSIFICATION	2.2263579231633307E-6	DEFECT
// now recover all the dependencies collected and add to the list.	WITHOUT_CLASSIFICATION	0.9999999067698567	WITHOUT_CLASSIFICATION	9.32301432050016E-8	DEFECT
//inherit doc	WITHOUT_CLASSIFICATION	0.9999618328083636	WITHOUT_CLASSIFICATION	3.81671916363849E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999995133297559	WITHOUT_CLASSIFICATION	4.86670244023277E-7	DEFECT
// NotReached	WITHOUT_CLASSIFICATION	0.9999977736420769	WITHOUT_CLASSIFICATION	2.2263579231633307E-6	DEFECT
// do not close the stream	WITHOUT_CLASSIFICATION	0.9999997847246324	WITHOUT_CLASSIFICATION	2.1527536764859574E-7	DEFECT
// on cygwin, our current directory can be a UNC; // assume user.dir is absolute or all hell breaks loose...	WITHOUT_CLASSIFICATION	0.9999969138063016	WITHOUT_CLASSIFICATION	3.0861936982767727E-6	DEFECT
// not before the filesystem root and not after it, since root // already contains one	WITHOUT_CLASSIFICATION	0.9999994817456828	WITHOUT_CLASSIFICATION	5.182543172644661E-7	DEFECT
// ensure that l ends with a / // so we never think /foo was a parent directory of /foobar	WITHOUT_CLASSIFICATION	0.9999998642872557	WITHOUT_CLASSIFICATION	1.3571274434588084E-7	DEFECT
// ensure that l ends with a / // so we never think /foo was a parent directory of /foobar	WITHOUT_CLASSIFICATION	0.9999998642872557	WITHOUT_CLASSIFICATION	1.3571274434588084E-7	DEFECT
// build the path stack info to compare	WITHOUT_CLASSIFICATION	0.9999643771204825	WITHOUT_CLASSIFICATION	3.5622879517574166E-5	DEFECT
// not the same device (would be "" on Linux/Unix)	WITHOUT_CLASSIFICATION	0.9999945586189802	WITHOUT_CLASSIFICATION	5.441381019748138E-6	DEFECT
// no comparison possible	WITHOUT_CLASSIFICATION	0.9999996828478412	WITHOUT_CLASSIFICATION	3.171521587173794E-7	DEFECT
// get index of parts which are equal	WITHOUT_CLASSIFICATION	0.9996039575220027	WITHOUT_CLASSIFICATION	3.960424779974086E-4	DEFECT
// if "from" part is longer, fill it up with ".." // to reach path which is equal to both paths	WITHOUT_CLASSIFICATION	0.9999656930199984	WITHOUT_CLASSIFICATION	3.4306980001541424E-5	DEFECT
// fill it up path with parts which were not equal	WITHOUT_CLASSIFICATION	0.9999795230804217	WITHOUT_CLASSIFICATION	2.0476919578243903E-5	DEFECT
// can safely use '/' because Windows understands '/' as separator	WITHOUT_CLASSIFICATION	0.999910242341776	WITHOUT_CLASSIFICATION	8.975765822406256E-5	DEFECT
// base directory of the fileset	WITHOUT_CLASSIFICATION	0.9999976167188044	WITHOUT_CLASSIFICATION	2.383281195664603E-6	DEFECT
// build the list of sources which are out of date with // respect to the target	WITHOUT_CLASSIFICATION	0.9999999765730484	WITHOUT_CLASSIFICATION	2.3426951564891096E-8	DEFECT
// code from Magesh moved from DefaultLogger and slightly modified	WITHOUT_CLASSIFICATION	0.9999806580257773	WITHOUT_CLASSIFICATION	1.9341974222816748E-5	DEFECT
//if you cannot read it, you won't be able to write it either	WITHOUT_CLASSIFICATION	0.9998130520084103	WITHOUT_CLASSIFICATION	1.8694799158966186E-4	DEFECT
// must be a zip of some sort	WITHOUT_CLASSIFICATION	0.9999999212536531	WITHOUT_CLASSIFICATION	7.874634683909468E-8	DEFECT
// does the class have a package structure	WITHOUT_CLASSIFICATION	0.999999136581086	WITHOUT_CLASSIFICATION	8.63418913914239E-7	DEFECT
// check if the package structure is more than 1 level deep	WITHOUT_CLASSIFICATION	0.9999999547838054	WITHOUT_CLASSIFICATION	4.521619457373613E-8	DEFECT
// class name has more than 1 package level 'com.company.Class'	WITHOUT_CLASSIFICATION	0.9999998521235816	WITHOUT_CLASSIFICATION	1.4787641844893755E-7	DEFECT
// class name has only 1 package level 'package.Class'	WITHOUT_CLASSIFICATION	0.9999997621621955	WITHOUT_CLASSIFICATION	2.378378044487159E-7	DEFECT
// Add the class in dotted notation 'com.company.Class'	WITHOUT_CLASSIFICATION	0.9999884677171051	WITHOUT_CLASSIFICATION	1.1532282894854586E-5	DEFECT
// Add a class with no package 'Class'	WITHOUT_CLASSIFICATION	0.9999997395470429	WITHOUT_CLASSIFICATION	2.604529571334576E-7	DEFECT
// force BCEL classes to load now	WITHOUT_CLASSIFICATION	0.9999949762076453	WITHOUT_CLASSIFICATION	5.023792354647194E-6	DEFECT
// force BCEL classes to load now	WITHOUT_CLASSIFICATION	0.9999949762076453	WITHOUT_CLASSIFICATION	5.023792354647194E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999995287844801	WITHOUT_CLASSIFICATION	4.7121551989690683E-7	DEFECT
// NotReached	WITHOUT_CLASSIFICATION	0.9999977736420769	WITHOUT_CLASSIFICATION	2.2263579231633307E-6	DEFECT
// we get the root classes and build up a set of // classes upon which they depend	WITHOUT_CLASSIFICATION	0.999989643799103	WITHOUT_CLASSIFICATION	1.0356200896889375E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999995133297559	WITHOUT_CLASSIFICATION	4.86670244023277E-7	DEFECT
// execute the script	WITHOUT_CLASSIFICATION	0.999998427551606	WITHOUT_CLASSIFICATION	1.5724483941201366E-6	DEFECT
//log security exceptions and continue; it aint that //important and may be quite common running Ant embedded.	WITHOUT_CLASSIFICATION	0.9999939159310564	WITHOUT_CLASSIFICATION	6.084068943653875E-6	DEFECT
// we look through the classpath elements. If the element is a dir // we look for the file. IF it is a zip, we look for the zip entry	WITHOUT_CLASSIFICATION	0.9999995278661895	WITHOUT_CLASSIFICATION	4.721338105262222E-7	DEFECT
// we look through the source path elements. If the element is a dir // we look for the file. If it is a zip, we look for the zip entry. // This isn't normal for source paths but we get it for free	WITHOUT_CLASSIFICATION	0.9999661004271521	WITHOUT_CLASSIFICATION	3.389957284791919E-5	DEFECT
// first letter of the previous segment of the class name 'Class' // is upper case ascii. so according to the spec it's an inner class	WITHOUT_CLASSIFICATION	0.999997654138054	WITHOUT_CLASSIFICATION	2.345861945986166E-6	DEFECT
// Register Groovy ourselves, since BSF did not // natively support it in versions previous to 1.2.4.	WITHOUT_CLASSIFICATION	0.9982087972375061	WITHOUT_CLASSIFICATION	0.001791202762493821	DEFECT
// execute the script	WITHOUT_CLASSIFICATION	0.999998427551606	WITHOUT_CLASSIFICATION	1.5724483941201366E-6	DEFECT
// translate \1 to $1 so that the Perl5Substitution will work	WITHOUT_CLASSIFICATION	0.9999608089445744	WITHOUT_CLASSIFICATION	3.9191055425522636E-5	DEFECT
// BSF uses a hashtable to store values // so cannot declareBean with a null value // So need to remove any bean of this name as // that bean should not be visible	WITHOUT_CLASSIFICATION	0.9999987107606207	WITHOUT_CLASSIFICATION	1.2892393792624535E-6	DEFECT
// no permission here	WITHOUT_CLASSIFICATION	0.9999843685992211	WITHOUT_CLASSIFICATION	1.5631400778846792E-5	DEFECT
// compute the compiler options based on the input options first	WITHOUT_CLASSIFICATION	0.9999996175043993	WITHOUT_CLASSIFICATION	3.824956008373203E-7	DEFECT
// treat non-matching groups as empty matches	WITHOUT_CLASSIFICATION	0.9999991457202713	WITHOUT_CLASSIFICATION	8.542797287273334E-7	DEFECT
// be strict about line separator	WITHOUT_CLASSIFICATION	0.9999998300316284	WITHOUT_CLASSIFICATION	1.699683716729854E-7	DEFECT
// translate \1 to $(1) so that the Matcher will work	WITHOUT_CLASSIFICATION	0.9999932593761299	WITHOUT_CLASSIFICATION	6.740623869969774E-6	DEFECT
// Do the substitution	WITHOUT_CLASSIFICATION	0.9999992838537726	WITHOUT_CLASSIFICATION	7.161462273681348E-7	DEFECT
// replace \1 with the corresponding group	WITHOUT_CLASSIFICATION	0.9999951102040487	WITHOUT_CLASSIFICATION	4.889795951212068E-6	DEFECT
/*     * Used when sorting.  If too many long comparisons     * happen, we stop sorting, randomise the block     * slightly, and try again.     */	WITHOUT_CLASSIFICATION	0.9999976697043172	WITHOUT_CLASSIFICATION	2.3302956826433454E-6	DEFECT
/*          Nodes and heap entries run from 1.  Entry 0          for both the heap and nodes is a sentinel.        */	WITHOUT_CLASSIFICATION	0.999997305338237	WITHOUT_CLASSIFICATION	2.694661762978227E-6	DEFECT
/*          Nodes and heap entries run from 1.  Entry 0          for both the heap and nodes is a sentinel.        */	WITHOUT_CLASSIFICATION	0.999997305338237	WITHOUT_CLASSIFICATION	2.694661762978227E-6	DEFECT
//        blockNo++;	WITHOUT_CLASSIFICATION	0.9999937987234089	WITHOUT_CLASSIFICATION	6.201276591199902E-6	DEFECT
// // When we get here we have EITHER: // o An empty "assemble" buffer. // o No bytes to write (numToWrite == 0) //	WITHOUT_CLASSIFICATION	0.9994230105667312	WITHOUT_CLASSIFICATION	5.769894332686552E-4	DEFECT
/* Write `magic' bytes h indicating file-format == huffmanised,           followed by a digit indicating blockSize100k.        */	WITHOUT_CLASSIFICATION	0.9999997219752691	WITHOUT_CLASSIFICATION	2.7802473083801967E-7	DEFECT
//        ch = 0;	WITHOUT_CLASSIFICATION	0.9999975361266065	WITHOUT_CLASSIFICATION	2.463873393646351E-6	DEFECT
/* 20 is just a paranoia constant */	WITHOUT_CLASSIFICATION	0.9999939352298458	WITHOUT_CLASSIFICATION	6.064770154126521E-6	DEFECT
// empty block at end of file	WITHOUT_CLASSIFICATION	0.999999717818812	WITHOUT_CLASSIFICATION	2.821811880019443E-7	DEFECT
/* sort the block and establish posn of original string */	WITHOUT_CLASSIFICATION	0.999997406563883	WITHOUT_CLASSIFICATION	2.593436116932189E-6	DEFECT
/* Now the block's CRC, so it is in a known place. */	WITHOUT_CLASSIFICATION	0.9999999739885596	WITHOUT_CLASSIFICATION	2.6011440379552964E-8	DEFECT
/* Now a single bit indicating randomisation. */	WITHOUT_CLASSIFICATION	0.9999429570445229	WITHOUT_CLASSIFICATION	5.704295547714483E-5	DEFECT
/* Finally, block's contents proper. */	WITHOUT_CLASSIFICATION	0.9999871277514853	WITHOUT_CLASSIFICATION	1.287224851466309E-5	DEFECT
/*          Now another magic 48-bit number, 0x177245385090, to          indicate the end of the last block.  (sqrt(pi), if          you want to know.  I did want to use e, but it contains          too much repetition -- 27 18 28 18 28 46 -- for me          to feel statistically comfortable.  Call me paranoid.)        */	WITHOUT_CLASSIFICATION	0.9999992868616465	WITHOUT_CLASSIFICATION	7.131383533644765E-7	DEFECT
// write 8-bit	WITHOUT_CLASSIFICATION	0.9999953306537704	WITHOUT_CLASSIFICATION	4.669346229655416E-6	DEFECT
// write 8-bit	WITHOUT_CLASSIFICATION	0.9999953306537704	WITHOUT_CLASSIFICATION	4.669346229655416E-6	DEFECT
// write 8-bit	WITHOUT_CLASSIFICATION	0.9999953306537704	WITHOUT_CLASSIFICATION	4.669346229655416E-6	DEFECT
// write 8-bit	WITHOUT_CLASSIFICATION	0.9999953306537704	WITHOUT_CLASSIFICATION	4.669346229655416E-6	DEFECT
// write 8-bit	WITHOUT_CLASSIFICATION	0.9999953306537704	WITHOUT_CLASSIFICATION	4.669346229655416E-6	DEFECT
// write 8-bit	WITHOUT_CLASSIFICATION	0.9999953306537704	WITHOUT_CLASSIFICATION	4.669346229655416E-6	DEFECT
/* Decide how many coding tables to use */	WITHOUT_CLASSIFICATION	0.999690902419145	WITHOUT_CLASSIFICATION	3.090975808549392E-4	DEFECT
/* Generate an initial set of coding tables */	WITHOUT_CLASSIFICATION	0.9999999266408133	WITHOUT_CLASSIFICATION	7.335918672305603E-8	DEFECT
/*          Iterate up to N_ITERS times to improve the tables.        */	WITHOUT_CLASSIFICATION	0.9999999634136563	WITHOUT_CLASSIFICATION	3.6586343768879336E-8	DEFECT
/* Compute MTF values for the selectors. */	WITHOUT_CLASSIFICATION	0.9999999366247198	WITHOUT_CLASSIFICATION	6.337528020398997E-8	DEFECT
/* Assign actual codes for the tables. */	WITHOUT_CLASSIFICATION	0.9999973890329863	WITHOUT_CLASSIFICATION	2.610967013658766E-6	DEFECT
/* Transmit the mapping table. */	WITHOUT_CLASSIFICATION	0.9999998952379986	WITHOUT_CLASSIFICATION	1.0476200138239138E-7	DEFECT
/* Now the selectors. */	WITHOUT_CLASSIFICATION	0.9999995713868313	WITHOUT_CLASSIFICATION	4.286131688180225E-7	DEFECT
/* Now the coding tables. */	WITHOUT_CLASSIFICATION	0.9999997372861203	WITHOUT_CLASSIFICATION	2.627138796598084E-7	DEFECT
/* And finally, the block data proper */	WITHOUT_CLASSIFICATION	0.9989056354277831	WITHOUT_CLASSIFICATION	0.0010943645722169626	DEFECT
/* Set group start & end marks. */	WITHOUT_CLASSIFICATION	0.9999976882146112	WITHOUT_CLASSIFICATION	2.3117853888697804E-6	DEFECT
/*                  Calculate the cost of this group as coded                  by each of the coding tables.                */	WITHOUT_CLASSIFICATION	0.9999995550299317	WITHOUT_CLASSIFICATION	4.449700684756595E-7	DEFECT
// unrolled version of the else-block	WITHOUT_CLASSIFICATION	0.9999818887910896	WITHOUT_CLASSIFICATION	1.8111208910325274E-5	DEFECT
/*                  Find the coding table which is best for this group,                  and record its identity in the selector table.                */	WITHOUT_CLASSIFICATION	0.9999998003834001	WITHOUT_CLASSIFICATION	1.9961660001474288E-7	DEFECT
/*                  Increment the symbol frequencies for the selected table.                */	WITHOUT_CLASSIFICATION	0.9999983180375567	WITHOUT_CLASSIFICATION	1.6819624434111828E-6	DEFECT
/*              Recompute the tables based on the accumulated frequencies.            */	WITHOUT_CLASSIFICATION	0.9999992080344047	WITHOUT_CLASSIFICATION	7.919655952693806E-7	DEFECT
// inlined: bsW(1, inUse[i16 + j] ? 1 : 0);	WITHOUT_CLASSIFICATION	0.9999996318693194	WITHOUT_CLASSIFICATION	3.681306806005298E-7	DEFECT
// inlined: bsW(1, 1);	WITHOUT_CLASSIFICATION	0.9999981450956682	WITHOUT_CLASSIFICATION	1.8549043317467584E-6	DEFECT
// inlined: bsW(1, 0);	WITHOUT_CLASSIFICATION	0.9999983518134477	WITHOUT_CLASSIFICATION	1.6481865522772145E-6	DEFECT
// inlined: bsW(1, 0);	WITHOUT_CLASSIFICATION	0.9999983518134477	WITHOUT_CLASSIFICATION	1.6481865522772145E-6	DEFECT
//bsBuffShadow |= 0 << (32 - bsLiveShadow - 1);	WITHOUT_CLASSIFICATION	0.9999845849548696	WITHOUT_CLASSIFICATION	1.5415045130424226E-5	DEFECT
// inlined: bsW(5, curr);	WITHOUT_CLASSIFICATION	0.9999988363950544	WITHOUT_CLASSIFICATION	1.1636049455751013E-6	DEFECT
// inlined: bsW(2, 2);	WITHOUT_CLASSIFICATION	0.9999980750864921	WITHOUT_CLASSIFICATION	1.924913508022036E-6	DEFECT
/* 10 */	WITHOUT_CLASSIFICATION	0.9999964634779579	WITHOUT_CLASSIFICATION	3.536522042096753E-6	DEFECT
// inlined: bsW(2, 3);	WITHOUT_CLASSIFICATION	0.9999977134067947	WITHOUT_CLASSIFICATION	2.2865932053268345E-6	DEFECT
/* 11 */	WITHOUT_CLASSIFICATION	0.9999964323141616	WITHOUT_CLASSIFICATION	3.567685838309726E-6	DEFECT
// copy	WITHOUT_CLASSIFICATION	0.9999909864927778	WITHOUT_CLASSIFICATION	9.013507222115905E-6	DEFECT
// start inline mainGTU	WITHOUT_CLASSIFICATION	0.9999995572257859	WITHOUT_CLASSIFICATION	4.4277421401039307E-7	DEFECT
// following could be done in a loop, but // unrolled it for performance:	WITHOUT_CLASSIFICATION	0.999998723662057	WITHOUT_CLASSIFICATION	1.2763379429893387E-6	DEFECT
// while x > 0	WITHOUT_CLASSIFICATION	0.9999982783911325	WITHOUT_CLASSIFICATION	1.72160886744934E-6	DEFECT
// Set up the 2-byte frequency table	WITHOUT_CLASSIFICATION	0.9999989590072065	WITHOUT_CLASSIFICATION	1.0409927935082647E-6	DEFECT
/*          In the various block-sized structures, live data runs          from 0 to last+NUM_OVERSHOOT_BYTES inclusive.  First,          set up the overshoot area for block.        */	WITHOUT_CLASSIFICATION	0.999999843135624	WITHOUT_CLASSIFICATION	1.5686437615360446E-7	DEFECT
// Complete the initial radix sort:	WITHOUT_CLASSIFICATION	0.9999999553023572	WITHOUT_CLASSIFICATION	4.469764280139449E-8	DEFECT
/*              Now ftab contains the first loc of every small bucket.              Calculate the running order, from smallest to largest              big bucket.        */	WITHOUT_CLASSIFICATION	0.9999997965028348	WITHOUT_CLASSIFICATION	2.0349716521170308E-7	DEFECT
/*              The main sorting loop.        */	WITHOUT_CLASSIFICATION	0.9999988721326728	WITHOUT_CLASSIFICATION	1.1278673271163268E-6	DEFECT
/*                  Process big buckets, starting with the least full.            */	WITHOUT_CLASSIFICATION	0.9999999464339189	WITHOUT_CLASSIFICATION	5.35660810474786E-8	DEFECT
// Step 1:	WITHOUT_CLASSIFICATION	0.9999982075888277	WITHOUT_CLASSIFICATION	1.7924111721988842E-6	DEFECT
// Step 3:	WITHOUT_CLASSIFICATION	0.9999981578380837	WITHOUT_CLASSIFICATION	1.8421619162407285E-6	DEFECT
// handle 16 bit signed numbers	WITHOUT_CLASSIFICATION	0.9999996845270517	WITHOUT_CLASSIFICATION	3.1547294830371537E-7	DEFECT
// make maps	WITHOUT_CLASSIFICATION	0.9999994794402023	WITHOUT_CLASSIFICATION	5.205597976126206E-7	DEFECT
/* directory with respect to       */	WITHOUT_CLASSIFICATION	0.9999858905036553	WITHOUT_CLASSIFICATION	1.4109496344729594E-5	DEFECT
// with blockSize 900k //     256 byte //     256 byte //    1032 byte //   18002 byte //   18002 byte	WITHOUT_CLASSIFICATION	0.9999899891784912	WITHOUT_CLASSIFICATION	1.0010821508753924E-5	DEFECT
//     256 byte //    1548 byte //    6192 byte //      24 byte //      12 byte //    6192 byte //       6 byte //      16 byte	WITHOUT_CLASSIFICATION	0.9999882244629635	WITHOUT_CLASSIFICATION	1.1775537036524717E-5	DEFECT
//    4000 byte //    4000 byte //    4000 byte	WITHOUT_CLASSIFICATION	0.9999916531789986	WITHOUT_CLASSIFICATION	8.346821001382272E-6	DEFECT
//    1024 byte //    1024 byte //     256 byte	WITHOUT_CLASSIFICATION	0.999993144098609	WITHOUT_CLASSIFICATION	6.855901391024738E-6	DEFECT
//    1040 byte //    2064 byte //    2064 byte	WITHOUT_CLASSIFICATION	0.9999941775971486	WITHOUT_CLASSIFICATION	5.822402851401071E-6	DEFECT
//  262148 byte // ------------ //  333408 byte	WITHOUT_CLASSIFICATION	0.9999834586189607	WITHOUT_CLASSIFICATION	1.6541381039346204E-5	DEFECT
// Just print a message, like the previous versions of this class did	WITHOUT_CLASSIFICATION	0.9999998577360616	WITHOUT_CLASSIFICATION	1.4226393841753647E-7	DEFECT
// Variables used by setup* methods exclusively	WITHOUT_CLASSIFICATION	0.9999998909939741	WITHOUT_CLASSIFICATION	1.0900602596156694E-7	DEFECT
// currBlockNo++;	WITHOUT_CLASSIFICATION	0.9999928267315796	WITHOUT_CLASSIFICATION	7.173268420398794E-6	DEFECT
// A bad CRC is considered a fatal error.	WITHOUT_CLASSIFICATION	0.9999698804898002	WITHOUT_CLASSIFICATION	3.0119510199751124E-5	DEFECT
/* Receive the mapping table */	WITHOUT_CLASSIFICATION	0.9999997484971158	WITHOUT_CLASSIFICATION	2.515028842361604E-7	DEFECT
/* Now the selectors */	WITHOUT_CLASSIFICATION	0.9999991803893737	WITHOUT_CLASSIFICATION	8.196106261269266E-7	DEFECT
/* Undo the MTF values for the selectors. */	WITHOUT_CLASSIFICATION	0.9999998310101234	WITHOUT_CLASSIFICATION	1.689898766620873E-7	DEFECT
// nearly all times v is zero, 4 in most other cases	WITHOUT_CLASSIFICATION	0.9999905114539422	WITHOUT_CLASSIFICATION	9.488546057840312E-6	DEFECT
/* Now the coding tables */	WITHOUT_CLASSIFICATION	0.9999992052157817	WITHOUT_CLASSIFICATION	7.947842182745174E-7	DEFECT
// finally create the Huffman tables	WITHOUT_CLASSIFICATION	0.9999984568278008	WITHOUT_CLASSIFICATION	1.5431721993280164E-6	DEFECT
// end of file // '1' // ')' // 'Y' // '&' // 'S' // 'Y'	WITHOUT_CLASSIFICATION	0.9999970975077855	WITHOUT_CLASSIFICATION	2.9024922144184517E-6	DEFECT
// Inlined: // int zvec = bsR(zn);	WITHOUT_CLASSIFICATION	0.9999925591030785	WITHOUT_CLASSIFICATION	7.440896921486452E-6	DEFECT
// Inlined: // int zvec = bsR(zn);	WITHOUT_CLASSIFICATION	0.9999925591030785	WITHOUT_CLASSIFICATION	7.440896921486452E-6	DEFECT
/*                  This loop is hammered during decompression,                  hence avoid native method call overhead of                  System.arraycopy for very small ranges to copy.                */	WITHOUT_CLASSIFICATION	0.9999919694143218	WITHOUT_CLASSIFICATION	8.030585678284194E-6	DEFECT
/* not a char and not EOF */	WITHOUT_CLASSIFICATION	0.9999957183153139	WITHOUT_CLASSIFICATION	4.281684686156508E-6	DEFECT
// (with blockSize 900k) //      256 byte	WITHOUT_CLASSIFICATION	0.9999976507673786	WITHOUT_CLASSIFICATION	2.3492326213622704E-6	DEFECT
//     1024 byte	WITHOUT_CLASSIFICATION	0.9999938343610809	WITHOUT_CLASSIFICATION	6.165638919031984E-6	DEFECT
// No need to keep track of Bcc'd addresses	WITHOUT_CLASSIFICATION	0.9999992252562117	WITHOUT_CLASSIFICATION	7.747437883152612E-7	DEFECT
// Blindly trust the user doesn't set any invalid headers	WITHOUT_CLASSIFICATION	0.9999988602132491	WITHOUT_CLASSIFICATION	1.1397867508573302E-6	DEFECT
// RFC 822 s4.1: "Reply-To:" header is optional	WITHOUT_CLASSIFICATION	0.9999595612693237	WITHOUT_CLASSIFICATION	4.043873067620199E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999995287844801	WITHOUT_CLASSIFICATION	4.7121551989690683E-7	DEFECT
// Mac does \n\r, but that's tough to distinguish from Windows \r\n\r\n. // Don't tackle that problem right now.	WITHOUT_CLASSIFICATION	0.9990907199454324	WITHOUT_CLASSIFICATION	9.092800545675482E-4	DEFECT
// support "address (name)"	WITHOUT_CLASSIFICATION	0.9999885029653354	WITHOUT_CLASSIFICATION	1.1497034664515208E-5	DEFECT
// support "(name) address"	WITHOUT_CLASSIFICATION	0.9999944186063282	WITHOUT_CLASSIFICATION	5.581393671719397E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999995133297559	WITHOUT_CLASSIFICATION	4.86670244023277E-7	DEFECT
//      256 byte //    18002 byte //    18002 byte	WITHOUT_CLASSIFICATION	0.999982832218832	WITHOUT_CLASSIFICATION	1.7167781168076402E-5	DEFECT
//     6192 byte //     6192 byte //     6192 byte //       24 byte	WITHOUT_CLASSIFICATION	0.9999869411522714	WITHOUT_CLASSIFICATION	1.3058847728561105E-5	DEFECT
//     1028 byte //      512 byte //     3096 byte //        6 byte //--------------- //    60798 byte	WITHOUT_CLASSIFICATION	0.9999818436961688	WITHOUT_CLASSIFICATION	1.8156303831166047E-5	DEFECT
//  3600000 byte //   900000 byte //--------------- //  4560782 byte //===============	WITHOUT_CLASSIFICATION	0.9999902986463256	WITHOUT_CLASSIFICATION	9.70135367442265E-6	DEFECT
// RFC 822 s4.1: "From:" header must be sent // We rely on error checking by the MTA	WITHOUT_CLASSIFICATION	0.9990072217572572	WITHOUT_CLASSIFICATION	9.92778242742807E-4	DEFECT
// RFC 822 s4.1: //   "Header fields are NOT required to occur in any particular order, //    except that the message body MUST occur AFTER the headers" // (the same section specifies a reccommended order, which we ignore)	WITHOUT_CLASSIFICATION	0.999909607058628	WITHOUT_CLASSIFICATION	9.039294137207529E-5	DEFECT
// Make a limited attempt to extract a sanitized email address // Prefer text in <brackets>, ignore anything in (parentheses)	WITHOUT_CLASSIFICATION	0.9999979003842366	WITHOUT_CLASSIFICATION	2.099615763432291E-6	DEFECT
// * * * * * Raw protocol methods below here * * * * *	WITHOUT_CLASSIFICATION	0.9999987450065387	WITHOUT_CLASSIFICATION	1.2549934612860586E-6	DEFECT
// make sure dot is on new line	WITHOUT_CLASSIFICATION	0.9989883635181508	WITHOUT_CLASSIFICATION	0.0010116364818492064	DEFECT
// raw supports <CRLF>.<CRLF>	WITHOUT_CLASSIFICATION	0.9999980881005662	WITHOUT_CLASSIFICATION	1.9118994338187855E-6	DEFECT
// Check that the response is one of the valid codes	WITHOUT_CLASSIFICATION	0.9999995954513977	WITHOUT_CLASSIFICATION	4.045486021911177E-7	DEFECT
// deprecated, but email is byte-oriented	WITHOUT_CLASSIFICATION	0.9999991941555004	WITHOUT_CLASSIFICATION	8.058444995695851E-7	DEFECT
// ensure always \r\n	WITHOUT_CLASSIFICATION	0.9999980207210343	WITHOUT_CLASSIFICATION	1.979278965777189E-6	DEFECT
// Mac does \n\r, but that's tough to distinguish from Windows \r\n\r\n. // Don't tackle that problem right now.	WITHOUT_CLASSIFICATION	0.9990907199454324	WITHOUT_CLASSIFICATION	9.092800545675482E-4	DEFECT
// add extra dot	WITHOUT_CLASSIFICATION	0.9999986730156301	WITHOUT_CLASSIFICATION	1.3269843699634463E-6	DEFECT
// add extra dot	WITHOUT_CLASSIFICATION	0.9999986730156301	WITHOUT_CLASSIFICATION	1.3269843699634463E-6	DEFECT
// ensure always \r\n	WITHOUT_CLASSIFICATION	0.9999980207210343	WITHOUT_CLASSIFICATION	1.979278965777189E-6	DEFECT
// UNDONE	WITHOUT_CLASSIFICATION	0.9999915756365525	WITHOUT_CLASSIFICATION	8.424363447440115E-6	DEFECT
// create a TarEntry for the LongLink, the contents // of which are the entry's name	WITHOUT_CLASSIFICATION	0.9999997198804088	WITHOUT_CLASSIFICATION	2.801195912144199E-7	DEFECT
// Strip off drive letters! // REVIEW Would a better check be "(File.separator == '\')"?	WITHOUT_CLASSIFICATION	0.9999998393512498	WITHOUT_CLASSIFICATION	1.6064875015847663E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999995133297559	WITHOUT_CLASSIFICATION	4.86670244023277E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999995133297559	WITHOUT_CLASSIFICATION	4.86670244023277E-7	DEFECT
// No absolute pathnames // Windows (and Posix?) paths can start with "\\NetworkDrive\", // so we loop on starting /'s.	WITHOUT_CLASSIFICATION	0.9999886522930785	WITHOUT_CLASSIFICATION	1.1347706921436738E-5	DEFECT
/* start of the central directory  */	WITHOUT_CLASSIFICATION	0.9999995846096619	WITHOUT_CLASSIFICATION	4.153903380654361E-7	DEFECT
// REVIEW // This is horribly inefficient, but it ensures that we // properly skip over bytes via the TarBuffer... //	WITHOUT_CLASSIFICATION	0.999793324583552	WITHOUT_CLASSIFICATION	2.0667541644794763E-4	DEFECT
// read in the name	WITHOUT_CLASSIFICATION	0.9999985478631874	WITHOUT_CLASSIFICATION	1.4521368125917323E-6	DEFECT
// remove trailing null terminator	WITHOUT_CLASSIFICATION	0.9999890894214032	WITHOUT_CLASSIFICATION	1.0910578596886883E-5	DEFECT
// Unexpected EOF!	WITHOUT_CLASSIFICATION	0.9999914976409181	WITHOUT_CLASSIFICATION	8.502359081955464E-6	DEFECT
// ---------------------------------------------------------- // somewhat arbitrary choices that are quite common for shared // installations // -----------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999996805222595	WITHOUT_CLASSIFICATION	3.1947774047171117E-7	DEFECT
/* method is STORED and we used RandomAccessFile */	WITHOUT_CLASSIFICATION	0.9999999299705746	WITHOUT_CLASSIFICATION	7.002942541098944E-8	DEFECT
// If random access output, write the local file header containing // the correct CRC and compressed/uncompressed sizes	WITHOUT_CLASSIFICATION	0.9999999820749679	WITHOUT_CLASSIFICATION	1.7925032121528383E-8	DEFECT
// not specified	WITHOUT_CLASSIFICATION	0.9999957625456021	WITHOUT_CLASSIFICATION	4.237454397937728E-6	DEFECT
// not specified	WITHOUT_CLASSIFICATION	0.9999957625456021	WITHOUT_CLASSIFICATION	4.237454397937728E-6	DEFECT
// Size/CRC not required if RandomAccessFile is used	WITHOUT_CLASSIFICATION	0.9999841243030136	WITHOUT_CLASSIFICATION	1.587569698632553E-5	DEFECT
/*     * Various ZIP constants     */	WITHOUT_CLASSIFICATION	0.9999937778586286	WITHOUT_CLASSIFICATION	6.222141371345174E-6	DEFECT
//store method in local variable to prevent multiple method calls	WITHOUT_CLASSIFICATION	0.9999997158524813	WITHOUT_CLASSIFICATION	2.8414751879519237E-7	DEFECT
// bit3 set to signal, we use a data descriptor	WITHOUT_CLASSIFICATION	0.999993177389552	WITHOUT_CLASSIFICATION	6.822610448157848E-6	DEFECT
// bit3 set to signal, we use a data descriptor	WITHOUT_CLASSIFICATION	0.999993177389552	WITHOUT_CLASSIFICATION	6.822610448157848E-6	DEFECT
// compression method	WITHOUT_CLASSIFICATION	0.999999243341113	WITHOUT_CLASSIFICATION	7.566588870795033E-7	DEFECT
// compression method	WITHOUT_CLASSIFICATION	0.999999243341113	WITHOUT_CLASSIFICATION	7.566588870795033E-7	DEFECT
// last mod. time and date	WITHOUT_CLASSIFICATION	0.999999844208323	WITHOUT_CLASSIFICATION	1.5579167706717894E-7	DEFECT
// file name length	WITHOUT_CLASSIFICATION	0.9999996692175054	WITHOUT_CLASSIFICATION	3.307824946344091E-7	DEFECT
// extra field length	WITHOUT_CLASSIFICATION	0.9999995991757793	WITHOUT_CLASSIFICATION	4.0082422070349656E-7	DEFECT
// file name	WITHOUT_CLASSIFICATION	0.9999994645796274	WITHOUT_CLASSIFICATION	5.354203726736618E-7	DEFECT
// extra field	WITHOUT_CLASSIFICATION	0.9999985266198687	WITHOUT_CLASSIFICATION	1.473380131314719E-6	DEFECT
// version made by	WITHOUT_CLASSIFICATION	0.9999882983816243	WITHOUT_CLASSIFICATION	1.1701618375775587E-5	DEFECT
// version needed to extract // general purpose bit flag	WITHOUT_CLASSIFICATION	0.9999569276523836	WITHOUT_CLASSIFICATION	4.307234761624895E-5	DEFECT
// last mod. time and date	WITHOUT_CLASSIFICATION	0.999999844208323	WITHOUT_CLASSIFICATION	1.5579167706717894E-7	DEFECT
// requires version 2 as we are going to store length info // in the data descriptor	WITHOUT_CLASSIFICATION	0.9911759775614837	WITHOUT_CLASSIFICATION	0.008824022438516304	DEFECT
// file name length	WITHOUT_CLASSIFICATION	0.9999996692175054	WITHOUT_CLASSIFICATION	3.307824946344091E-7	DEFECT
// CRC // compressed length // uncompressed length	WITHOUT_CLASSIFICATION	0.9999997213916922	WITHOUT_CLASSIFICATION	2.7860830779493156E-7	DEFECT
// extra field length	WITHOUT_CLASSIFICATION	0.9999995991757793	WITHOUT_CLASSIFICATION	4.0082422070349656E-7	DEFECT
// file name	WITHOUT_CLASSIFICATION	0.9999994645796274	WITHOUT_CLASSIFICATION	5.354203726736618E-7	DEFECT
// extra field	WITHOUT_CLASSIFICATION	0.9999985266198687	WITHOUT_CLASSIFICATION	1.473380131314719E-6	DEFECT
// file comment length	WITHOUT_CLASSIFICATION	0.9999996085839773	WITHOUT_CLASSIFICATION	3.9141602265989273E-7	DEFECT
// disk number start	WITHOUT_CLASSIFICATION	0.9999953657770492	WITHOUT_CLASSIFICATION	4.6342229509218565E-6	DEFECT
// internal file attributes	WITHOUT_CLASSIFICATION	0.999999903396486	WITHOUT_CLASSIFICATION	9.66035139866323E-8	DEFECT
// external file attributes	WITHOUT_CLASSIFICATION	0.999999866433497	WITHOUT_CLASSIFICATION	1.3356650294995792E-7	DEFECT
// relative offset of LFH	WITHOUT_CLASSIFICATION	0.999999738673014	WITHOUT_CLASSIFICATION	2.6132698597494863E-7	DEFECT
// disk numbers	WITHOUT_CLASSIFICATION	0.999996747753134	WITHOUT_CLASSIFICATION	3.2522468660268695E-6	DEFECT
// number of entries	WITHOUT_CLASSIFICATION	0.9999908336377857	WITHOUT_CLASSIFICATION	9.16636221419256E-6	DEFECT
// length and location of CD	WITHOUT_CLASSIFICATION	0.9999962169316222	WITHOUT_CLASSIFICATION	3.7830683779119603E-6	DEFECT
// ZIP file comment	WITHOUT_CLASSIFICATION	0.9999990992106362	WITHOUT_CLASSIFICATION	9.007893638229815E-7	DEFECT
// array not exhausted	WITHOUT_CLASSIFICATION	0.9999925332813054	WITHOUT_CLASSIFICATION	7.4667186946037425E-6	DEFECT
/* version made by                 */	WITHOUT_CLASSIFICATION	0.99996715423466	WITHOUT_CLASSIFICATION	3.2845765339965334E-5	DEFECT
/* version needed to extract       */	WITHOUT_CLASSIFICATION	0.9999632922638095	WITHOUT_CLASSIFICATION	3.670773619049966E-5	DEFECT
/* general purpose bit flag        */	WITHOUT_CLASSIFICATION	0.9999986896902036	WITHOUT_CLASSIFICATION	1.3103097964840534E-6	DEFECT
/* compression method              */	WITHOUT_CLASSIFICATION	0.9999984856820792	WITHOUT_CLASSIFICATION	1.5143179208426788E-6	DEFECT
/* last mod file time              */	WITHOUT_CLASSIFICATION	0.9999998691559746	WITHOUT_CLASSIFICATION	1.308440253476633E-7	DEFECT
/* last mod file date              */	WITHOUT_CLASSIFICATION	0.999999642756795	WITHOUT_CLASSIFICATION	3.5724320512689376E-7	DEFECT
/* crc-32                          */	WITHOUT_CLASSIFICATION	0.9999951723858038	WITHOUT_CLASSIFICATION	4.827614196205426E-6	DEFECT
/* uncompressed size               */	WITHOUT_CLASSIFICATION	0.9999985901368137	WITHOUT_CLASSIFICATION	1.4098631862450108E-6	DEFECT
/* filename length                 */	WITHOUT_CLASSIFICATION	0.9999993873301068	WITHOUT_CLASSIFICATION	6.126698932502592E-7	DEFECT
/* extra field length              */	WITHOUT_CLASSIFICATION	0.9999990124736575	WITHOUT_CLASSIFICATION	9.875263424152786E-7	DEFECT
/* file comment length             */	WITHOUT_CLASSIFICATION	0.9999991400945931	WITHOUT_CLASSIFICATION	8.599054068516919E-7	DEFECT
/* internal file attributes        */	WITHOUT_CLASSIFICATION	0.9999993955910751	WITHOUT_CLASSIFICATION	6.044089249294959E-7	DEFECT
/* external file attributes        */	WITHOUT_CLASSIFICATION	0.9999994047903314	WITHOUT_CLASSIFICATION	5.952096685724288E-7	DEFECT
/* relative offset of local header */	WITHOUT_CLASSIFICATION	0.9999973347869209	WITHOUT_CLASSIFICATION	2.665213079029896E-6	DEFECT
// disk number	WITHOUT_CLASSIFICATION	0.9999973645639112	WITHOUT_CLASSIFICATION	2.6354360888162914E-6	DEFECT
// LFH offset,	WITHOUT_CLASSIFICATION	0.9999979899951033	WITHOUT_CLASSIFICATION	2.010004896766793E-6	DEFECT
// data offset will be filled later	WITHOUT_CLASSIFICATION	0.9999906485910032	WITHOUT_CLASSIFICATION	9.351408996831603E-6	DEFECT
/* end of central dir signature    */	WITHOUT_CLASSIFICATION	0.9999948010114875	WITHOUT_CLASSIFICATION	5.198988512442261E-6	DEFECT
/* number of this disk             */	WITHOUT_CLASSIFICATION	0.9999859469718999	WITHOUT_CLASSIFICATION	1.4053028099982635E-5	DEFECT
/* number of the disk with the     */	WITHOUT_CLASSIFICATION	0.9999896759936578	WITHOUT_CLASSIFICATION	1.0324006342177317E-5	DEFECT
/* start of the central directory  */	WITHOUT_CLASSIFICATION	0.9999995846096619	WITHOUT_CLASSIFICATION	4.153903380654361E-7	DEFECT
/* the central dir on this disk    */	WITHOUT_CLASSIFICATION	0.9999997655556491	WITHOUT_CLASSIFICATION	2.3444435097844847E-7	DEFECT
/* the central dir                 */	WITHOUT_CLASSIFICATION	0.9999998712983017	WITHOUT_CLASSIFICATION	1.2870169835970493E-7	DEFECT
/* size of the central directory   */	WITHOUT_CLASSIFICATION	0.9999997109694172	WITHOUT_CLASSIFICATION	2.890305828099036E-7	DEFECT
/* offset of start of central      */	WITHOUT_CLASSIFICATION	0.9999996464911878	WITHOUT_CLASSIFICATION	3.5350881218194794E-7	DEFECT
// empty	WITHOUT_CLASSIFICATION	0.9999989787642598	WITHOUT_CLASSIFICATION	1.0212357402186593E-6	DEFECT
// wait 2 second extras // the test failed with 100 ms of margin on cvs.apache.org on August 1st, 2003	WITHOUT_CLASSIFICATION	0.9999969541692109	WITHOUT_CLASSIFICATION	3.045830789078351E-6	DEFECT
// dummy1 --> dummy2 --> dummy3 // (which holds a glob mapper from "*.java" to "*.class"	WITHOUT_CLASSIFICATION	0.9999563225178177	WITHOUT_CLASSIFICATION	4.367748218227258E-5	DEFECT
// // *****  initialize test environment (called "bed")  ***** //	WITHOUT_CLASSIFICATION	0.9999999960763508	WITHOUT_CLASSIFICATION	3.9236491273570655E-9	DEFECT
// THIS WILL FAIL. //compareBytes("abc", "utf-16");	WITHOUT_CLASSIFICATION	0.9999904562643533	WITHOUT_CLASSIFICATION	9.54373564666628E-6	DEFECT
//catch script/ant mismatch with a meaningful message //we could ignore it, but there are likely to be other //version problems, so we stamp down on the configuration now	WITHOUT_CLASSIFICATION	0.9998662368731641	WITHOUT_CLASSIFICATION	1.337631268358507E-4	DEFECT
//if there were no main targets, we list all subtargets //as it means nothing has a description	WITHOUT_CLASSIFICATION	0.9999994267073936	WITHOUT_CLASSIFICATION	5.732926063866386E-7	DEFECT
// For NetWare, use the boolean=true mode, so we can use delimiter // information to make a better decision later.	WITHOUT_CLASSIFICATION	0.9999996251682173	WITHOUT_CLASSIFICATION	3.748317826477089E-7	DEFECT
// we are on NetWare, tokenizing is handled a little differently, // due to the fact that NetWare has multiple-character volume names.	WITHOUT_CLASSIFICATION	0.99999999877558	WITHOUT_CLASSIFICATION	1.224419961790234E-9	DEFECT
// The readers return -1 if they end. So simply read the "prepend" // after that the "content" and at the end the "append" file.	WITHOUT_CLASSIFICATION	0.999999704098653	WITHOUT_CLASSIFICATION	2.959013469555972E-7	DEFECT
// NB: this makes use of Project#setProperty rather than Project#setNewProperty //     due to backwards compatiblity reasons	WITHOUT_CLASSIFICATION	0.9992766270389453	WITHOUT_CLASSIFICATION	7.233729610547633E-4	DEFECT
// If we've been successful on an update, delete the // temporary file	WITHOUT_CLASSIFICATION	0.9999999963451253	WITHOUT_CLASSIFICATION	3.65487464676661E-9	DEFECT
// CheckStyle - magic numbers // checking for "X:\ 0=dquote,1=letter,2=:,3=\	WITHOUT_CLASSIFICATION	0.9999988693154871	WITHOUT_CLASSIFICATION	1.1306845128673056E-6	DEFECT
/* version needed to extract       */	WITHOUT_CLASSIFICATION	0.9999632922638095	WITHOUT_CLASSIFICATION	3.670773619049966E-5	DEFECT
/* general purpose bit flag        */	WITHOUT_CLASSIFICATION	0.9999986896902036	WITHOUT_CLASSIFICATION	1.3103097964840534E-6	DEFECT
/* compression method              */	WITHOUT_CLASSIFICATION	0.9999984856820792	WITHOUT_CLASSIFICATION	1.5143179208426788E-6	DEFECT
/* last mod file time              */	WITHOUT_CLASSIFICATION	0.9999998691559746	WITHOUT_CLASSIFICATION	1.308440253476633E-7	DEFECT
/* last mod file date              */	WITHOUT_CLASSIFICATION	0.999999642756795	WITHOUT_CLASSIFICATION	3.5724320512689376E-7	DEFECT
/* crc-32                          */	WITHOUT_CLASSIFICATION	0.9999951723858038	WITHOUT_CLASSIFICATION	4.827614196205426E-6	DEFECT
/* compressed size                 */	WITHOUT_CLASSIFICATION	0.9999990446668469	WITHOUT_CLASSIFICATION	9.553331531605276E-7	DEFECT
/* uncompressed size               */	WITHOUT_CLASSIFICATION	0.9999985901368137	WITHOUT_CLASSIFICATION	1.4098631862450108E-6	DEFECT
/* end of central dir signature    */	WITHOUT_CLASSIFICATION	0.9999948010114875	WITHOUT_CLASSIFICATION	5.198988512442261E-6	DEFECT
/* number of this disk             */	WITHOUT_CLASSIFICATION	0.9999859469718999	WITHOUT_CLASSIFICATION	1.4053028099982635E-5	DEFECT
/* number of the disk with the     */	WITHOUT_CLASSIFICATION	0.9999896759936578	WITHOUT_CLASSIFICATION	1.0324006342177317E-5	DEFECT
/* total number of entries in      */	WITHOUT_CLASSIFICATION	0.9999093795640402	WITHOUT_CLASSIFICATION	9.062043595972724E-5	DEFECT
/* total number of entries in      */	WITHOUT_CLASSIFICATION	0.9999093795640402	WITHOUT_CLASSIFICATION	9.062043595972724E-5	DEFECT
/* the central dir on this disk    */	WITHOUT_CLASSIFICATION	0.9999997655556491	WITHOUT_CLASSIFICATION	2.3444435097844847E-7	DEFECT
/* the central dir                 */	WITHOUT_CLASSIFICATION	0.9999998712983017	WITHOUT_CLASSIFICATION	1.2870169835970493E-7	DEFECT
/* size of the central directory   */	WITHOUT_CLASSIFICATION	0.9999997109694172	WITHOUT_CLASSIFICATION	2.890305828099036E-7	DEFECT
/* the starting disk number        */	WITHOUT_CLASSIFICATION	0.9999944794016363	WITHOUT_CLASSIFICATION	5.520598363691234E-6	DEFECT
/* zipfile comment length          */	WITHOUT_CLASSIFICATION	0.9999993596672321	WITHOUT_CLASSIFICATION	6.403327677980699E-7	DEFECT
/* local file header signature     */	WITHOUT_CLASSIFICATION	0.9999941079033372	WITHOUT_CLASSIFICATION	5.8920966627725295E-6	DEFECT
/*     * Converts DOS time to Java time (number of milliseconds since epoch).     */	WITHOUT_CLASSIFICATION	0.9999998715355815	WITHOUT_CLASSIFICATION	1.284644185540734E-7	DEFECT
// CRC will be added later	WITHOUT_CLASSIFICATION	0.9999995132927368	WITHOUT_CLASSIFICATION	4.867072632643521E-7	DEFECT
/*<ZipExtraField>*/	WITHOUT_CLASSIFICATION	0.9999903468820405	WITHOUT_CLASSIFICATION	9.653117959584221E-6	DEFECT
// initializes extra data to an empty byte array	WITHOUT_CLASSIFICATION	0.9999995898811883	WITHOUT_CLASSIFICATION	4.101188116557127E-7	DEFECT
// MS-DOS read-only attribute	WITHOUT_CLASSIFICATION	0.9999915037996828	WITHOUT_CLASSIFICATION	8.496200317189527E-6	DEFECT
// MS-DOS directory flag	WITHOUT_CLASSIFICATION	0.9999905030306528	WITHOUT_CLASSIFICATION	9.496969347162924E-6	DEFECT
// A "location" attribute for a node within a // Path object.	WITHOUT_CLASSIFICATION	0.9999828803108515	WITHOUT_CLASSIFICATION	1.7119689148542733E-5	DEFECT
// Just use the same directory as the file itself. // This directory will exist	WITHOUT_CLASSIFICATION	0.9999995922503693	WITHOUT_CLASSIFICATION	4.0774963079464027E-7	DEFECT
// JarIndex is sorting the directories by ascending order. // it has no value but cosmetic since it will be read into a // hashtable by the classloader, but we'll do so anyway.	WITHOUT_CLASSIFICATION	0.9999999896566826	WITHOUT_CLASSIFICATION	1.0343317379987603E-8	DEFECT
// // Static //	WITHOUT_CLASSIFICATION	0.9999996258312347	WITHOUT_CLASSIFICATION	3.7416876532031005E-7	DEFECT
//we mark the file to be deleted on exit. //the alternative would be to cache the filename and delete //after execution finished, which is much better for long-lived runtimes //though spawning complicates things...	WITHOUT_CLASSIFICATION	0.993902070541555	WITHOUT_CLASSIFICATION	0.006097929458444905	DEFECT
// Protected first so if any GUI tool offers a default // based on enum #0, it will be right.	WITHOUT_CLASSIFICATION	0.9999964629894456	WITHOUT_CLASSIFICATION	3.5370105544994883E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc // the source file // the destination file // the destination directory	WITHOUT_CLASSIFICATION	0.999999972691991	WITHOUT_CLASSIFICATION	2.730800904727051E-8	DEFECT
// add dest dir to classpath so that previously compiled and // untouched classes are on classpath	WITHOUT_CLASSIFICATION	0.9999999918864059	WITHOUT_CLASSIFICATION	8.113594102655662E-9	DEFECT
// build the command line from what we got the format is // cleartool checkout [options...] [viewpath ...] // as specified in the CLEARTOOL.EXE help	WITHOUT_CLASSIFICATION	0.9999988834751331	WITHOUT_CLASSIFICATION	1.116524866909488E-6	DEFECT
// build the command line from what we got. the format is // cleartool mkelem [options...] [viewpath ...] // as specified in the CLEARTOOL.EXE help	WITHOUT_CLASSIFICATION	0.9999963963826077	WITHOUT_CLASSIFICATION	3.6036173922222277E-6	DEFECT
// build the command line from what we got. the format is // cleartool mklabel [options...] [viewpath ...] // as specified in the CLEARTOOL help	WITHOUT_CLASSIFICATION	0.9999986223385693	WITHOUT_CLASSIFICATION	1.3776614306680164E-6	DEFECT
// push the current iterator onto the stack and then // iterate through this directory.	WITHOUT_CLASSIFICATION	0.9999865810677356	WITHOUT_CLASSIFICATION	1.3418932264297973E-5	DEFECT
// List of EJBs found in XML // One item within the Map // Is doc iAS or EJB descriptor	WITHOUT_CLASSIFICATION	0.9999978096594987	WITHOUT_CLASSIFICATION	2.190340501377801E-6	DEFECT
// baseNameTerminator not found: the descriptor use the // JOnAS naming convention, ie [Foo.xml,jonas-Foo.xml] and // not [Foo<baseNameTerminator>-ejb-jar.xml, // Foo<baseNameTerminator>-jonas-ejb-jar.xml].	WITHOUT_CLASSIFICATION	0.9999788316479332	WITHOUT_CLASSIFICATION	2.1168352066841478E-5	DEFECT
// Loop through the files seeing if any has been touched // more recently than the destination jar.	WITHOUT_CLASSIFICATION	0.9999971219034737	WITHOUT_CLASSIFICATION	2.8780965262416E-6	DEFECT
// read in the descriptor. Under weblogic, the descriptor is a weblogic // specific subclass which has references to the implementation classes. // These classes must, therefore, be in the classpath when the deployment // descriptor is loaded from the .ser file	WITHOUT_CLASSIFICATION	0.9999996619660816	WITHOUT_CLASSIFICATION	3.3803391836022325E-7	DEFECT
//WARNING: We trim the values of all the attributes because //Some extension declarations are badly defined (ie have spaces //after version or vendor)	WITHOUT_CLASSIFICATION	0.9998929097385595	WITHOUT_CLASSIFICATION	1.0709026144049658E-4	DEFECT
// 2003-02-21 new replace algorithm by tbee (tbee@tbee.org) // because it wasn't able to replace something like "@aaa;@bbb;"	WITHOUT_CLASSIFICATION	0.9999999321912637	WITHOUT_CLASSIFICATION	6.780873628101196E-8	DEFECT
// convert backslashes to slashes, otherwise jjtree will // put this as comments and this seems to confuse javacc	WITHOUT_CLASSIFICATION	0.9999977286949265	WITHOUT_CLASSIFICATION	2.271305073518092E-6	DEFECT
//although this code appears to duplicate that of ClasspathUtils.newInstance, //we cannot use that because this formatter may run in a forked process, //without that class.	WITHOUT_CLASSIFICATION	0.9963132201786831	WITHOUT_CLASSIFICATION	0.0036867798213167787	DEFECT
// build the command line from what we got the format is // ss History elements [-H] [-L] [-N] [-O] [-V] [-Y] [-#] [-?] // as specified in the SS.EXE help	WITHOUT_CLASSIFICATION	0.999999513551498	WITHOUT_CLASSIFICATION	4.864485019992257E-7	DEFECT
// this method has severe consequences on performance. We cannot rely // on the super.hashCode() method since super.getName() always return // the empty string in the current implemention (there's no setter) // so it is basically draining the performance of a hashmap lookup	WITHOUT_CLASSIFICATION	0.9999959431687712	WITHOUT_CLASSIFICATION	4.0568312288531604E-6	DEFECT
// If this TransformOperation has DrawOperation children // then Rotate the first child and return.	WITHOUT_CLASSIFICATION	0.9999999773853003	WITHOUT_CLASSIFICATION	2.2614699628527753E-8	DEFECT
// converted from sun internal classes to // new Base64Converter // utility class extracted from Get task	WITHOUT_CLASSIFICATION	0.9999528857833208	WITHOUT_CLASSIFICATION	4.7114216679347834E-5	DEFECT
// // Cannot return a null source, because we have to call // setEntityResolver (see setEntityResolver javadoc comment) //	WITHOUT_CLASSIFICATION	0.9999999744766104	WITHOUT_CLASSIFICATION	2.552338971893106E-8	DEFECT
// CRC // compressed length // uncompressed length	WITHOUT_CLASSIFICATION	0.9999997213916922	WITHOUT_CLASSIFICATION	2.7860830779493156E-7	DEFECT
// No further methods necessary. This is just an amalgamation of two other // interfaces.	WITHOUT_CLASSIFICATION	0.9999573138596108	WITHOUT_CLASSIFICATION	4.26861403892389E-5	DEFECT
// // -----  The "Singleton"  ----- //	WITHOUT_CLASSIFICATION	0.9999539750753806	WITHOUT_CLASSIFICATION	4.602492461940741E-5	DEFECT
// If we had child elements, we need to indent before we close // the element, otherwise we're on the same line and don't need // to indent	WITHOUT_CLASSIFICATION	0.9999997386214371	WITHOUT_CLASSIFICATION	2.6137856291083634E-7	DEFECT
// The key is in the dictionary but cannot be retrieved // This is usually due references that refer to tasks // that have not been taskdefed in the current run. // Ignore	WITHOUT_CLASSIFICATION	0.9998930755041345	WITHOUT_CLASSIFICATION	1.0692449586545413E-4	DEFECT
// write magic: done by caller who created this stream //this.out.write('B'); //this.out.write('Z');	WITHOUT_CLASSIFICATION	0.9999941399653315	WITHOUT_CLASSIFICATION	5.8600346684018364E-6	DEFECT
// CRC // Mode // SizDev // UID // GID	WITHOUT_CLASSIFICATION	0.9999979956704738	WITHOUT_CLASSIFICATION	2.004329526177859E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999981731396919	WITHOUT_CLASSIFICATION	1.82686030805923E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999981731396919	WITHOUT_CLASSIFICATION	1.82686030805923E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999981731396919	WITHOUT_CLASSIFICATION	1.82686030805923E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999981731396919	WITHOUT_CLASSIFICATION	1.82686030805923E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999981731396919	WITHOUT_CLASSIFICATION	1.82686030805923E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999981731396919	WITHOUT_CLASSIFICATION	1.82686030805923E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999981731396919	WITHOUT_CLASSIFICATION	1.82686030805923E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999981731396919	WITHOUT_CLASSIFICATION	1.82686030805923E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999974856927603	WITHOUT_CLASSIFICATION	2.5143072398361387E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999974856927603	WITHOUT_CLASSIFICATION	2.5143072398361387E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999974856927603	WITHOUT_CLASSIFICATION	2.5143072398361387E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999974856927603	WITHOUT_CLASSIFICATION	2.5143072398361387E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999974856927603	WITHOUT_CLASSIFICATION	2.5143072398361387E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999974856927603	WITHOUT_CLASSIFICATION	2.5143072398361387E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999981731396919	WITHOUT_CLASSIFICATION	1.82686030805923E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999981731396919	WITHOUT_CLASSIFICATION	1.82686030805923E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999981731396919	WITHOUT_CLASSIFICATION	1.82686030805923E-6	DEFECT
// ignored	WITHOUT_CLASSIFICATION	0.9999986837363851	WITHOUT_CLASSIFICATION	1.3162636148312973E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999981731396919	WITHOUT_CLASSIFICATION	1.82686030805923E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999981731396919	WITHOUT_CLASSIFICATION	1.82686030805923E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999981731396919	WITHOUT_CLASSIFICATION	1.82686030805923E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999981731396919	WITHOUT_CLASSIFICATION	1.82686030805923E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999981731396919	WITHOUT_CLASSIFICATION	1.82686030805923E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999981731396919	WITHOUT_CLASSIFICATION	1.82686030805923E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999981731396919	WITHOUT_CLASSIFICATION	1.82686030805923E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999981731396919	WITHOUT_CLASSIFICATION	1.82686030805923E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999981731396919	WITHOUT_CLASSIFICATION	1.82686030805923E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999981731396919	WITHOUT_CLASSIFICATION	1.82686030805923E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999981731396919	WITHOUT_CLASSIFICATION	1.82686030805923E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999981731396919	WITHOUT_CLASSIFICATION	1.82686030805923E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999981731396919	WITHOUT_CLASSIFICATION	1.82686030805923E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999981731396919	WITHOUT_CLASSIFICATION	1.82686030805923E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999981731396919	WITHOUT_CLASSIFICATION	1.82686030805923E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999981731396919	WITHOUT_CLASSIFICATION	1.82686030805923E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999981731396919	WITHOUT_CLASSIFICATION	1.82686030805923E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999981731396919	WITHOUT_CLASSIFICATION	1.82686030805923E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999981731396919	WITHOUT_CLASSIFICATION	1.82686030805923E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999981731396919	WITHOUT_CLASSIFICATION	1.82686030805923E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999981731396919	WITHOUT_CLASSIFICATION	1.82686030805923E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999981731396919	WITHOUT_CLASSIFICATION	1.82686030805923E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999981731396919	WITHOUT_CLASSIFICATION	1.82686030805923E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999981731396919	WITHOUT_CLASSIFICATION	1.82686030805923E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999981731396919	WITHOUT_CLASSIFICATION	1.82686030805923E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999981731396919	WITHOUT_CLASSIFICATION	1.82686030805923E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999981731396919	WITHOUT_CLASSIFICATION	1.82686030805923E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999981731396919	WITHOUT_CLASSIFICATION	1.82686030805923E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999981731396919	WITHOUT_CLASSIFICATION	1.82686030805923E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999981731396919	WITHOUT_CLASSIFICATION	1.82686030805923E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999981731396919	WITHOUT_CLASSIFICATION	1.82686030805923E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999981731396919	WITHOUT_CLASSIFICATION	1.82686030805923E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999981731396919	WITHOUT_CLASSIFICATION	1.82686030805923E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999981731396919	WITHOUT_CLASSIFICATION	1.82686030805923E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999981731396919	WITHOUT_CLASSIFICATION	1.82686030805923E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999981731396919	WITHOUT_CLASSIFICATION	1.82686030805923E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999981731396919	WITHOUT_CLASSIFICATION	1.82686030805923E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999981731396919	WITHOUT_CLASSIFICATION	1.82686030805923E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999981731396919	WITHOUT_CLASSIFICATION	1.82686030805923E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999981731396919	WITHOUT_CLASSIFICATION	1.82686030805923E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999981731396919	WITHOUT_CLASSIFICATION	1.82686030805923E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999981731396919	WITHOUT_CLASSIFICATION	1.82686030805923E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999981731396919	WITHOUT_CLASSIFICATION	1.82686030805923E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999981731396919	WITHOUT_CLASSIFICATION	1.82686030805923E-6	DEFECT
// do nothing	WITHOUT_CLASSIFICATION	0.9999949372339081	WITHOUT_CLASSIFICATION	5.062766091893844E-6	DEFECT
// do nothing	WITHOUT_CLASSIFICATION	0.9999949372339081	WITHOUT_CLASSIFICATION	5.062766091893844E-6	DEFECT
// do nothing	WITHOUT_CLASSIFICATION	0.9999949372339081	WITHOUT_CLASSIFICATION	5.062766091893844E-6	DEFECT
// selectors are implicitly ANDed in DirectoryScanner.  To // revert their logic we wrap them into a <none> selector // instead.	WITHOUT_CLASSIFICATION	0.9999999116248399	WITHOUT_CLASSIFICATION	8.837516008462311E-8	DEFECT
// now wait until the spawned process is finished	WITHOUT_CLASSIFICATION	0.9999992548860552	WITHOUT_CLASSIFICATION	7.451139446721273E-7	DEFECT
// file doesn't exist -> property 'test' == null	WITHOUT_CLASSIFICATION	0.9999890836702204	WITHOUT_CLASSIFICATION	1.0916329779580334E-5	DEFECT
// we don't expect to find this	WITHOUT_CLASSIFICATION	0.9999398387905084	WITHOUT_CLASSIFICATION	6.0161209491539786E-5	DEFECT
// we don't expect to find this	WITHOUT_CLASSIFICATION	0.9999398387905084	WITHOUT_CLASSIFICATION	6.0161209491539786E-5	DEFECT
// ignore expected	WITHOUT_CLASSIFICATION	0.9999938976914782	WITHOUT_CLASSIFICATION	6.102308521746064E-6	DEFECT
// keep track of what operating systems are supported here.	WITHOUT_CLASSIFICATION	0.9999334461271512	WITHOUT_CLASSIFICATION	6.65538728488317E-5	DEFECT
// if we followed the symlink we just made we should // bypass the excludes.	WITHOUT_CLASSIFICATION	0.9999984124422251	WITHOUT_CLASSIFICATION	1.5875577748625794E-6	DEFECT
// when the test is started by the build.xml of ant // if the property tests.and.ant.share.classloader is not set in the build.xml // a sysproperty with name tests.and.ant.share.classloader and value // ${tests.and.ant.share.classloader} will be set // we are trying to catch this here.	WITHOUT_CLASSIFICATION	0.9922700350205269	WITHOUT_CLASSIFICATION	0.007729964979473104	DEFECT
/*             * throw in drive letters             */	WITHOUT_CLASSIFICATION	0.9999826100548775	WITHOUT_CLASSIFICATION	1.7389945122509046E-5	DEFECT
/*             * promised to eliminate consecutive slashes after drive letter.             */	WITHOUT_CLASSIFICATION	0.9999995181307326	WITHOUT_CLASSIFICATION	4.818692674459702E-7	DEFECT
/*             * promised to eliminate consecutive slashes after drive letter.             */	WITHOUT_CLASSIFICATION	0.9999995181307326	WITHOUT_CLASSIFICATION	4.818692674459702E-7	DEFECT
/*             * promised to eliminate consecutive slashes after drive letter.             */	WITHOUT_CLASSIFICATION	0.9999995181307326	WITHOUT_CLASSIFICATION	4.818692674459702E-7	DEFECT
// avoid multiple configurations	WITHOUT_CLASSIFICATION	0.9999999828318996	WITHOUT_CLASSIFICATION	1.7168100408028513E-8	DEFECT
// ------------------------------------------------------ //   Helper methods // -----------------------------------------------------	WITHOUT_CLASSIFICATION	0.999993062768905	WITHOUT_CLASSIFICATION	6.937231095069602E-6	DEFECT
// make sure the cache is cleared.	WITHOUT_CLASSIFICATION	0.9999966679698447	WITHOUT_CLASSIFICATION	3.3320301554112754E-6	DEFECT
//--- NULL JDBC driver just for simple test since there are no db driver // available as a default in Ant :)	WITHOUT_CLASSIFICATION	0.9999999995452694	WITHOUT_CLASSIFICATION	4.5473060491943705E-10	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.9999960589938288	WITHOUT_CLASSIFICATION	3.941006171177376E-6	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.9999960589938288	WITHOUT_CLASSIFICATION	3.941006171177376E-6	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.9999960589938288	WITHOUT_CLASSIFICATION	3.941006171177376E-6	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.9999960589938288	WITHOUT_CLASSIFICATION	3.941006171177376E-6	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.9999960589938288	WITHOUT_CLASSIFICATION	3.941006171177376E-6	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.9999960589938288	WITHOUT_CLASSIFICATION	3.941006171177376E-6	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.9999960589938288	WITHOUT_CLASSIFICATION	3.941006171177376E-6	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.9999960589938288	WITHOUT_CLASSIFICATION	3.941006171177376E-6	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.9999960589938288	WITHOUT_CLASSIFICATION	3.941006171177376E-6	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.9999960589938288	WITHOUT_CLASSIFICATION	3.941006171177376E-6	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.9999960589938288	WITHOUT_CLASSIFICATION	3.941006171177376E-6	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.9999960589938288	WITHOUT_CLASSIFICATION	3.941006171177376E-6	DEFECT
// wait 1 second extra to allow for java to start ... // this time was OK on a Win NT machine and on nagoya	WITHOUT_CLASSIFICATION	0.9999992695440221	WITHOUT_CLASSIFICATION	7.304559778654907E-7	DEFECT
// ------------------------------------------------------ //   Helper methods - should be in BuildFileTest // -----------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999717787353501	WITHOUT_CLASSIFICATION	2.8221264649833935E-5	DEFECT
// ------------------------------------------------------ //   Helper methods - should be in BuildFileTest // -----------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999717787353501	WITHOUT_CLASSIFICATION	2.8221264649833935E-5	DEFECT
// All three specified and all three exist -> true	WITHOUT_CLASSIFICATION	0.9999978578199594	WITHOUT_CLASSIFICATION	2.14218004065434E-6	DEFECT
// Specified class is "" -> can not exist	WITHOUT_CLASSIFICATION	0.9999627952027117	WITHOUT_CLASSIFICATION	3.72047972883602E-5	DEFECT
// Core class that exists in system classpath is ignored, but found in specified classpath	WITHOUT_CLASSIFICATION	0.9999995826592982	WITHOUT_CLASSIFICATION	4.1734070184638015E-7	DEFECT
// File is not found in specified filepath	WITHOUT_CLASSIFICATION	0.9999980815935106	WITHOUT_CLASSIFICATION	1.9184064894679377E-6	DEFECT
//ignored	WITHOUT_CLASSIFICATION	0.9999751649630865	WITHOUT_CLASSIFICATION	2.4835036913447422E-5	DEFECT
// basedir of subant/subant-test2/subant.xml is .. // therefore we expect here the subant subdirectory	WITHOUT_CLASSIFICATION	0.9999630260620812	WITHOUT_CLASSIFICATION	3.6973937918710315E-5	DEFECT
// 2 is != 0 and even, so it is considered // failure on any platform currently supported // by Execute#isFailure.	WITHOUT_CLASSIFICATION	0.9999686329088271	WITHOUT_CLASSIFICATION	3.136709117296403E-5	DEFECT
//         expectBuildExceptionContaining("testNoTld", //                 "Jasper found an error in a file", //                 "Java returned: 9");	WITHOUT_CLASSIFICATION	0.9999996622116325	WITHOUT_CLASSIFICATION	3.3778836757976797E-7	DEFECT
// The captureToSummary test writes to stdout and stderr, good for // verifying that the TestListener support doesn't break anything.	WITHOUT_CLASSIFICATION	0.9999851008890946	WITHOUT_CLASSIFICATION	1.4899110905333087E-5	DEFECT
// testNoCrash is the test invoked by the captureToSummary's junit task	WITHOUT_CLASSIFICATION	0.9999999604715776	WITHOUT_CLASSIFICATION	3.952842240806261E-8	DEFECT
// tests one the file object	WITHOUT_CLASSIFICATION	0.999999957113323	WITHOUT_CLASSIFICATION	4.2886677029253916E-8	DEFECT
// tests one the file object	WITHOUT_CLASSIFICATION	0.999999957113323	WITHOUT_CLASSIFICATION	4.2886677029253916E-8	DEFECT
// tests one the file object	WITHOUT_CLASSIFICATION	0.999999957113323	WITHOUT_CLASSIFICATION	4.2886677029253916E-8	DEFECT
// tests one the file object	WITHOUT_CLASSIFICATION	0.999999957113323	WITHOUT_CLASSIFICATION	4.2886677029253916E-8	DEFECT
// tests one the file object	WITHOUT_CLASSIFICATION	0.999999957113323	WITHOUT_CLASSIFICATION	4.2886677029253916E-8	DEFECT
// viewpath	WITHOUT_CLASSIFICATION	0.999999205231928	WITHOUT_CLASSIFICATION	7.94768071934397E-7	DEFECT
// conversion to URL via FileUtils like in XMLResultAggregator, not as suggested in the bug report	WITHOUT_CLASSIFICATION	0.9999550425964605	WITHOUT_CLASSIFICATION	4.4957403539537455E-5	DEFECT
// conversion to URL via FileUtils like in XMLResultAggregator, not as suggested in the bug report	WITHOUT_CLASSIFICATION	0.9999550425964605	WITHOUT_CLASSIFICATION	4.4957403539537455E-5	DEFECT
// conversion to URL via FileUtils like in XMLResultAggregator, not as suggested in the bug report	WITHOUT_CLASSIFICATION	0.9999550425964605	WITHOUT_CLASSIFICATION	4.4957403539537455E-5	DEFECT
// conversion to URL via FileUtils like in XMLResultAggregator, not as suggested in the bug report	WITHOUT_CLASSIFICATION	0.9999550425964605	WITHOUT_CLASSIFICATION	4.4957403539537455E-5	DEFECT
// We have extra elements	WITHOUT_CLASSIFICATION	0.9999998579554886	WITHOUT_CLASSIFICATION	1.4204451127781376E-7	DEFECT
// Set up a VSSHistory task	WITHOUT_CLASSIFICATION	0.9999996142195359	WITHOUT_CLASSIFICATION	3.857804642100445E-7	DEFECT
// \ doesn't have a special meaning anymore - this is different from // what the Unix sh does but causes a lot of problems on DOS // based platforms otherwise	WITHOUT_CLASSIFICATION	0.9995938953005757	WITHOUT_CLASSIFICATION	4.0610469942417034E-4	DEFECT
//check that dir and src are incompatible	WITHOUT_CLASSIFICATION	0.9999998354176348	WITHOUT_CLASSIFICATION	1.6458236525799547E-7	DEFECT
// ================  testcases for the cache implementations  ================	WITHOUT_CLASSIFICATION	0.9999993485880003	WITHOUT_CLASSIFICATION	6.514119997605714E-7	DEFECT
// does the selection	WITHOUT_CLASSIFICATION	0.9999933723294574	WITHOUT_CLASSIFICATION	6.627670542649062E-6	DEFECT
// ==============  testcases for the algorithm implementations  ==============	WITHOUT_CLASSIFICATION	0.9999871732663564	WITHOUT_CLASSIFICATION	1.2826733643580943E-5	DEFECT
// =====================  scenario tests  =====================	WITHOUT_CLASSIFICATION	0.9999994622616605	WITHOUT_CLASSIFICATION	5.377383394984782E-7	DEFECT
// info text // list of files // expected result // result	WITHOUT_CLASSIFICATION	0.9999931739971828	WITHOUT_CLASSIFICATION	6.826002817284933E-6	DEFECT
//  =====================  helper methods and classes  ====================	WITHOUT_CLASSIFICATION	0.9999988823895753	WITHOUT_CLASSIFICATION	1.1176104246668858E-6	DEFECT
// should be full moon	WITHOUT_CLASSIFICATION	0.9999913352387584	WITHOUT_CLASSIFICATION	8.66476124156379E-6	DEFECT
// Try a silly case	WITHOUT_CLASSIFICATION	0.9999958777155253	WITHOUT_CLASSIFICATION	4.1222844747433905E-6	DEFECT
// java.home is bogus	WITHOUT_CLASSIFICATION	0.9999999220280403	WITHOUT_CLASSIFICATION	7.797195966233752E-8	DEFECT
// 60s // a further 30s	WITHOUT_CLASSIFICATION	0.9999997619289809	WITHOUT_CLASSIFICATION	2.380710191229517E-7	DEFECT
// 60s // a further 30s	WITHOUT_CLASSIFICATION	0.9999997619289809	WITHOUT_CLASSIFICATION	2.380710191229517E-7	DEFECT
// 60s // a further 30s	WITHOUT_CLASSIFICATION	0.9999997619289809	WITHOUT_CLASSIFICATION	2.380710191229517E-7	DEFECT
// order of headers cannot be guaranteed	WITHOUT_CLASSIFICATION	0.9998899350209473	WITHOUT_CLASSIFICATION	1.1006497905271602E-4	DEFECT
// order of headers cannot be guaranteed	WITHOUT_CLASSIFICATION	0.9998899350209473	WITHOUT_CLASSIFICATION	1.1006497905271602E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999995287844801	WITHOUT_CLASSIFICATION	4.7121551989690683E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999995287844801	WITHOUT_CLASSIFICATION	4.7121551989690683E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999995287844801	WITHOUT_CLASSIFICATION	4.7121551989690683E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999995287844801	WITHOUT_CLASSIFICATION	4.7121551989690683E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999995287844801	WITHOUT_CLASSIFICATION	4.7121551989690683E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999995287844801	WITHOUT_CLASSIFICATION	4.7121551989690683E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999995287844801	WITHOUT_CLASSIFICATION	4.7121551989690683E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999995287844801	WITHOUT_CLASSIFICATION	4.7121551989690683E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999995287844801	WITHOUT_CLASSIFICATION	4.7121551989690683E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999995287844801	WITHOUT_CLASSIFICATION	4.7121551989690683E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999995287844801	WITHOUT_CLASSIFICATION	4.7121551989690683E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999995287844801	WITHOUT_CLASSIFICATION	4.7121551989690683E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999995287844801	WITHOUT_CLASSIFICATION	4.7121551989690683E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999995287844801	WITHOUT_CLASSIFICATION	4.7121551989690683E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999995287844801	WITHOUT_CLASSIFICATION	4.7121551989690683E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999995287844801	WITHOUT_CLASSIFICATION	4.7121551989690683E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999995287844801	WITHOUT_CLASSIFICATION	4.7121551989690683E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999995287844801	WITHOUT_CLASSIFICATION	4.7121551989690683E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999995287844801	WITHOUT_CLASSIFICATION	4.7121551989690683E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999995287844801	WITHOUT_CLASSIFICATION	4.7121551989690683E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999995287844801	WITHOUT_CLASSIFICATION	4.7121551989690683E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999995287844801	WITHOUT_CLASSIFICATION	4.7121551989690683E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999995287844801	WITHOUT_CLASSIFICATION	4.7121551989690683E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999995287844801	WITHOUT_CLASSIFICATION	4.7121551989690683E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999995287844801	WITHOUT_CLASSIFICATION	4.7121551989690683E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999995287844801	WITHOUT_CLASSIFICATION	4.7121551989690683E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999995287844801	WITHOUT_CLASSIFICATION	4.7121551989690683E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999995287844801	WITHOUT_CLASSIFICATION	4.7121551989690683E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999995287844801	WITHOUT_CLASSIFICATION	4.7121551989690683E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999995287844801	WITHOUT_CLASSIFICATION	4.7121551989690683E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999995287844801	WITHOUT_CLASSIFICATION	4.7121551989690683E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999995287844801	WITHOUT_CLASSIFICATION	4.7121551989690683E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999995287844801	WITHOUT_CLASSIFICATION	4.7121551989690683E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999995287844801	WITHOUT_CLASSIFICATION	4.7121551989690683E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999995287844801	WITHOUT_CLASSIFICATION	4.7121551989690683E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999995287844801	WITHOUT_CLASSIFICATION	4.7121551989690683E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999995287844801	WITHOUT_CLASSIFICATION	4.7121551989690683E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999995287844801	WITHOUT_CLASSIFICATION	4.7121551989690683E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999995287844801	WITHOUT_CLASSIFICATION	4.7121551989690683E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999995287844801	WITHOUT_CLASSIFICATION	4.7121551989690683E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999995287844801	WITHOUT_CLASSIFICATION	4.7121551989690683E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999995287844801	WITHOUT_CLASSIFICATION	4.7121551989690683E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999995287844801	WITHOUT_CLASSIFICATION	4.7121551989690683E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999995287844801	WITHOUT_CLASSIFICATION	4.7121551989690683E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999995287844801	WITHOUT_CLASSIFICATION	4.7121551989690683E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999995287844801	WITHOUT_CLASSIFICATION	4.7121551989690683E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999995287844801	WITHOUT_CLASSIFICATION	4.7121551989690683E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999995287844801	WITHOUT_CLASSIFICATION	4.7121551989690683E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999995287844801	WITHOUT_CLASSIFICATION	4.7121551989690683E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999995287844801	WITHOUT_CLASSIFICATION	4.7121551989690683E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999995287844801	WITHOUT_CLASSIFICATION	4.7121551989690683E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999995287844801	WITHOUT_CLASSIFICATION	4.7121551989690683E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999995287844801	WITHOUT_CLASSIFICATION	4.7121551989690683E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999995287844801	WITHOUT_CLASSIFICATION	4.7121551989690683E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999995287844801	WITHOUT_CLASSIFICATION	4.7121551989690683E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999995287844801	WITHOUT_CLASSIFICATION	4.7121551989690683E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999995287844801	WITHOUT_CLASSIFICATION	4.7121551989690683E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999995287844801	WITHOUT_CLASSIFICATION	4.7121551989690683E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999995287844801	WITHOUT_CLASSIFICATION	4.7121551989690683E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999995287844801	WITHOUT_CLASSIFICATION	4.7121551989690683E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999995287844801	WITHOUT_CLASSIFICATION	4.7121551989690683E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999995287844801	WITHOUT_CLASSIFICATION	4.7121551989690683E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999995287844801	WITHOUT_CLASSIFICATION	4.7121551989690683E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999995287844801	WITHOUT_CLASSIFICATION	4.7121551989690683E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999995287844801	WITHOUT_CLASSIFICATION	4.7121551989690683E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999995287844801	WITHOUT_CLASSIFICATION	4.7121551989690683E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999995287844801	WITHOUT_CLASSIFICATION	4.7121551989690683E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999995287844801	WITHOUT_CLASSIFICATION	4.7121551989690683E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999995287844801	WITHOUT_CLASSIFICATION	4.7121551989690683E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999995287844801	WITHOUT_CLASSIFICATION	4.7121551989690683E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999995287844801	WITHOUT_CLASSIFICATION	4.7121551989690683E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999995287844801	WITHOUT_CLASSIFICATION	4.7121551989690683E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999995287844801	WITHOUT_CLASSIFICATION	4.7121551989690683E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999995287844801	WITHOUT_CLASSIFICATION	4.7121551989690683E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999995287844801	WITHOUT_CLASSIFICATION	4.7121551989690683E-7	DEFECT
/*                            Ignore method m, as there is an overloaded                            form of this method that takes in a                            non-string argument, which gains higher                            priority.                        */	WITHOUT_CLASSIFICATION	0.9999999783410082	WITHOUT_CLASSIFICATION	2.1658991830862777E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999995133297559	WITHOUT_CLASSIFICATION	4.86670244023277E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999995133297559	WITHOUT_CLASSIFICATION	4.86670244023277E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999995133297559	WITHOUT_CLASSIFICATION	4.86670244023277E-7	DEFECT
/*                        If the argument is not a String or Location,                        and if there                        is an overloaded form of this method already defined,                        we just override that with the new one.                        This mechanism does not guarantee any specific order                        in which the methods will be selected: so any code                        that depends on the order in which "set" methods have                        been defined, is not guaranteed to be selected in any                        particular order.                    */	WITHOUT_CLASSIFICATION	0.9999994236490736	WITHOUT_CLASSIFICATION	5.763509264419637E-7	DEFECT
// impossible as getMethods should only return public methods	WITHOUT_CLASSIFICATION	0.9999985791399214	WITHOUT_CLASSIFICATION	1.420860078589098E-6	DEFECT
// impossible as getMethods should only return public methods	WITHOUT_CLASSIFICATION	0.9999985791399214	WITHOUT_CLASSIFICATION	1.420860078589098E-6	DEFECT
// impossible as getMethods should only return public methods	WITHOUT_CLASSIFICATION	0.9999985791399214	WITHOUT_CLASSIFICATION	1.420860078589098E-6	DEFECT
// boolean and Boolean get special treatment because we // have a nice method in Project	WITHOUT_CLASSIFICATION	0.9999997960433692	WITHOUT_CLASSIFICATION	2.0395663089549624E-7	DEFECT
// find the line breaks and pass other chars through in blocks	WITHOUT_CLASSIFICATION	0.9999493007064861	WITHOUT_CLASSIFICATION	5.069929351381463E-5	DEFECT
// DataType can have a "no arg" constructor or take a single // Project argument.	WITHOUT_CLASSIFICATION	0.9999997938081228	WITHOUT_CLASSIFICATION	2.061918772768521E-7	DEFECT
// all the names are the same: check if the class path of the loader // is the same	WITHOUT_CLASSIFICATION	0.9999914068023334	WITHOUT_CLASSIFICATION	8.593197666444313E-6	DEFECT
/* Interestingly enough, we get to here when a user                 * uses -Dname=value. However, in some cases, the OS                 * goes ahead and parses this out to args                 *   {"-Dname", "value"}                 * so instead of parsing on "=", we just make the "-D"                 * characters go away and skip one argument forward.                 *                 * I don't know how to predict when the JDK is going                 * to help or not, so we simply look for the equals sign.                 */	WITHOUT_CLASSIFICATION	0.9998688279153338	WITHOUT_CLASSIFICATION	1.3117208466615675E-4	DEFECT
// if parent is null, then we are at the root of the fs, // complain that we can't find the build file.	WITHOUT_CLASSIFICATION	0.9999908059164141	WITHOUT_CLASSIFICATION	9.194083585951493E-6	DEFECT
// put back the original security manager //The following will never eval to true. (PD)	WITHOUT_CLASSIFICATION	0.9999081122210368	WITHOUT_CLASSIFICATION	9.188777896316082E-5	DEFECT
// ignore path elements which are invalid // relative to the project	WITHOUT_CLASSIFICATION	0.9999998741931512	WITHOUT_CLASSIFICATION	1.2580684891817597E-7	DEFECT
// Ignore - we are interested only in the side // effect - that of getting the static initializers // invoked.  As we do not want to call a valid // constructor to get this side effect, an // attempt is made to call a hopefully // invalid constructor - come on, nobody // would have a constructor that takes in // 256 String arguments ;-) // (In fact, they can't - according to JVM spec // section 4.10, the number of method parameters is limited // to 255 by the definition of a method descriptor. // Constructors count as methods here.)	WITHOUT_CLASSIFICATION	0.9998319828182032	WITHOUT_CLASSIFICATION	1.6801718179671143E-4	DEFECT
/*<URL>*/	WITHOUT_CLASSIFICATION	0.9999566294937621	WITHOUT_CLASSIFICATION	4.3370506237853896E-5	DEFECT
/*<URL>*/	WITHOUT_CLASSIFICATION	0.9999566294937621	WITHOUT_CLASSIFICATION	4.3370506237853896E-5	DEFECT
// 'sync' is needed - otherwise 2 threads can load the same class // twice, resulting in LinkageError: duplicated class definition. // findLoadedClass avoids that, but without sync it won't work.	WITHOUT_CLASSIFICATION	0.9978352221957486	WITHOUT_CLASSIFICATION	0.0021647778042514177	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9999655314264141	WITHOUT_CLASSIFICATION	3.4468573585883755E-5	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9999655314264141	WITHOUT_CLASSIFICATION	3.4468573585883755E-5	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9999655314264141	WITHOUT_CLASSIFICATION	3.4468573585883755E-5	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9999655314264141	WITHOUT_CLASSIFICATION	3.4468573585883755E-5	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9999655314264141	WITHOUT_CLASSIFICATION	3.4468573585883755E-5	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9999655314264141	WITHOUT_CLASSIFICATION	3.4468573585883755E-5	DEFECT
// Not significant for the class loader.	WITHOUT_CLASSIFICATION	0.9999992588116734	WITHOUT_CLASSIFICATION	7.411883265787341E-7	DEFECT
// Not significant for the class loader.	WITHOUT_CLASSIFICATION	0.9999992588116734	WITHOUT_CLASSIFICATION	7.411883265787341E-7	DEFECT
// Not significant for the class loader.	WITHOUT_CLASSIFICATION	0.9999992588116734	WITHOUT_CLASSIFICATION	7.411883265787341E-7	DEFECT
// Not significant for the class loader.	WITHOUT_CLASSIFICATION	0.9999992588116734	WITHOUT_CLASSIFICATION	7.411883265787341E-7	DEFECT
// Not significant for the class loader.	WITHOUT_CLASSIFICATION	0.9999992588116734	WITHOUT_CLASSIFICATION	7.411883265787341E-7	DEFECT
// don't have to check for public, since // getConstructor finds public constructors only.	WITHOUT_CLASSIFICATION	0.9999973005857722	WITHOUT_CLASSIFICATION	2.6994142278272484E-6	DEFECT
//not a known type	WITHOUT_CLASSIFICATION	0.9999104505657687	WITHOUT_CLASSIFICATION	8.954943423132437E-5	DEFECT
// Initialize the globalFileSet's project	WITHOUT_CLASSIFICATION	0.9999999189273571	WITHOUT_CLASSIFICATION	8.1072643042E-8	DEFECT
// create a new Vector to avoid ConcurrentModificationExc when // the listeners get added/removed while we are in fire	WITHOUT_CLASSIFICATION	0.999998480925761	WITHOUT_CLASSIFICATION	1.5190742390047447E-6	DEFECT
// first build exception	WITHOUT_CLASSIFICATION	0.9999965440956942	WITHOUT_CLASSIFICATION	3.4559043057907862E-6	DEFECT
// Not been visited	WITHOUT_CLASSIFICATION	0.9999990900763733	WITHOUT_CLASSIFICATION	9.099236266731413E-7	DEFECT
// -------------------- Optional methods   -------------------- // You can override those methods if you want to optimize or // do advanced things (like support a special syntax). // The methods do not chain - you should use them when embedding ant // (by replacing the main helper)	WITHOUT_CLASSIFICATION	0.9999727620291543	WITHOUT_CLASSIFICATION	2.723797084572482E-5	DEFECT
/*                fragments.addElement(value.substring(pos + 1, pos + 2));                prev = pos + 2;                */	WITHOUT_CLASSIFICATION	0.9999999846110966	WITHOUT_CLASSIFICATION	1.5388903453176032E-8	DEFECT
//empty	WITHOUT_CLASSIFICATION	0.9999817562721358	WITHOUT_CLASSIFICATION	1.824372786417827E-5	DEFECT
//empty	WITHOUT_CLASSIFICATION	0.9999817562721358	WITHOUT_CLASSIFICATION	1.824372786417827E-5	DEFECT
// -------------------- Common properties  -------------------- // The following properties are required by import ( and other tasks // that read build files using ProjectHelper ).	WITHOUT_CLASSIFICATION	0.998789217509643	WITHOUT_CLASSIFICATION	0.0012107824903570077	DEFECT
// check to what is in the classname	WITHOUT_CLASSIFICATION	0.9999955895755238	WITHOUT_CLASSIFICATION	4.410424476114468E-6	DEFECT
//not included, do nothing	WITHOUT_CLASSIFICATION	0.9999706167133001	WITHOUT_CLASSIFICATION	2.9383286699782224E-5	DEFECT
//not included, do nothing	WITHOUT_CLASSIFICATION	0.9999706167133001	WITHOUT_CLASSIFICATION	2.9383286699782224E-5	DEFECT
// Attributes	WITHOUT_CLASSIFICATION	0.9999974536858888	WITHOUT_CLASSIFICATION	2.5463141111831164E-6	DEFECT
// make sure we aren't going to get the path separator next	WITHOUT_CLASSIFICATION	0.9998818310549565	WITHOUT_CLASSIFICATION	1.1816894504344778E-4	DEFECT
// 'reasonable' default, if the component is used without // a Project ( for example as a standalone Bean ). // Most ant components can be used this way.	WITHOUT_CLASSIFICATION	0.9999998649343678	WITHOUT_CLASSIFICATION	1.3506563222069675E-7	DEFECT
// don't have to check for public, since // getMethod finds public method only. // don't have to check for abstract, since then // taskClass would be abstract too.	WITHOUT_CLASSIFICATION	0.9999961093836245	WITHOUT_CLASSIFICATION	3.890616375503005E-6	DEFECT
// Mac	WITHOUT_CLASSIFICATION	0.9999990983968329	WITHOUT_CLASSIFICATION	9.016031671297138E-7	DEFECT
// set in/excludes to reasonable defaults if needed:	WITHOUT_CLASSIFICATION	0.9999891277501421	WITHOUT_CLASSIFICATION	1.0872249857942147E-5	DEFECT
// may be on a case insensitive file system.  We want // the results to show what's really on the disk, so // we need to double check.	WITHOUT_CLASSIFICATION	0.9999997205925041	WITHOUT_CLASSIFICATION	2.794074959852992E-7	DEFECT
// avoid double scanning of directories, can only happen in fast mode	WITHOUT_CLASSIFICATION	0.999988461696094	WITHOUT_CLASSIFICATION	1.1538303905901316E-5	DEFECT
// Usually the initialized is set to true. But here it must not. // Because the prepend and append readers have to be instantiated // on runtime //newFilter.setInitialized(true);	WITHOUT_CLASSIFICATION	0.9999236252370697	WITHOUT_CLASSIFICATION	7.637476293033636E-5	DEFECT
// if at EOF with no characters in the buffer, return EOF	WITHOUT_CLASSIFICATION	0.9999999512156211	WITHOUT_CLASSIFICATION	4.878437872982885E-8	DEFECT
// The current character is always emitted.	WITHOUT_CLASSIFICATION	0.9999979149077189	WITHOUT_CLASSIFICATION	2.085092281090382E-6	DEFECT
// The current character is always emitted.	WITHOUT_CLASSIFICATION	0.9999979149077189	WITHOUT_CLASSIFICATION	2.085092281090382E-6	DEFECT
// The current character is always emitted.	WITHOUT_CLASSIFICATION	0.9999979149077189	WITHOUT_CLASSIFICATION	2.085092281090382E-6	DEFECT
// The current character is always emitted.	WITHOUT_CLASSIFICATION	0.9999979149077189	WITHOUT_CLASSIFICATION	2.085092281090382E-6	DEFECT
// Fall tru	WITHOUT_CLASSIFICATION	0.9999969200050759	WITHOUT_CLASSIFICATION	3.0799949240685232E-6	DEFECT
// Fall tru	WITHOUT_CLASSIFICATION	0.9999969200050759	WITHOUT_CLASSIFICATION	3.0799949240685232E-6	DEFECT
// Fall tru	WITHOUT_CLASSIFICATION	0.9999969200050759	WITHOUT_CLASSIFICATION	3.0799949240685232E-6	DEFECT
// Fall tru	WITHOUT_CLASSIFICATION	0.9999969200050759	WITHOUT_CLASSIFICATION	3.0799949240685232E-6	DEFECT
// Works like clone() but doesn't show up in the Javadocs	WITHOUT_CLASSIFICATION	0.9999998086546517	WITHOUT_CLASSIFICATION	1.9134534843255473E-7	DEFECT
// ----------------------------------------- //  Predefined filters // -----------------------------------------	WITHOUT_CLASSIFICATION	0.9999985624728537	WITHOUT_CLASSIFICATION	1.4375271462113421E-6	DEFECT
// -------------------------------------------- // //      Filter classes // // --------------------------------------------	WITHOUT_CLASSIFICATION	0.9999989442767994	WITHOUT_CLASSIFICATION	1.0557232005791888E-6	DEFECT
// Execute the top-level target	WITHOUT_CLASSIFICATION	0.9999998251280132	WITHOUT_CLASSIFICATION	1.748719867539238E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999991944890897	WITHOUT_CLASSIFICATION	8.055109103529937E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999991944890897	WITHOUT_CLASSIFICATION	8.055109103529937E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999991944890897	WITHOUT_CLASSIFICATION	8.055109103529937E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999991944890897	WITHOUT_CLASSIFICATION	8.055109103529937E-7	DEFECT
// Also check for properly formed URIs. Ant formerly recommended using // nonsense URIs such as "file:./foo.xml" in XML includes. You shouldn't // do that (just "foo.xml" is correct) but for compatibility we special-case // things when the path is not absolute, and fall back to the old parsing behavior.	WITHOUT_CLASSIFICATION	0.9997782233022615	WITHOUT_CLASSIFICATION	2.2177669773856723E-4	DEFECT
//decide whether to copy the existing arg set, or //build a new one from the list of all args excluding the special //operations that only we handle	WITHOUT_CLASSIFICATION	0.9999872800034535	WITHOUT_CLASSIFICATION	1.2719996546619754E-5	DEFECT
// convert the replyTo string into a vector of emailaddresses	WITHOUT_CLASSIFICATION	0.9999904202066959	WITHOUT_CLASSIFICATION	9.579793304058474E-6	DEFECT
// private static final int BG_BLACK = 40; // private static final int BG_RED = 41; // private static final int BG_GREEN = 42; // private static final int BG_YELLOW = 44; // private static final int BG_BLUE = 44; // private static final int BG_MAGENTA = 45; // private static final int BG_CYAN = 46; // private static final int BG_WHITE = 47;	WITHOUT_CLASSIFICATION	0.9999997759990511	WITHOUT_CLASSIFICATION	2.2400094893738626E-7	DEFECT
// If the file being added is META-INF/application.xml, we // warn if it's not the one specified in the "appxml" // attribute - or if it's being added twice, meaning the same // file is specified by the "appxml" attribute and in a // <fileset> element.	WITHOUT_CLASSIFICATION	0.9999983160264342	WITHOUT_CLASSIFICATION	1.6839735657760065E-6	DEFECT
// class found but restricted name; this is // actually the case we're looking for in JDK 1.3+, // so catch the exception and return	WITHOUT_CLASSIFICATION	0.9999998585277002	WITHOUT_CLASSIFICATION	1.4147229968558408E-7	DEFECT
// Can return null to represent the bootstrap class loader. // see API docs of Class.getClassLoader.	WITHOUT_CLASSIFICATION	0.9999999347566727	WITHOUT_CLASSIFICATION	6.524332735504457E-8	DEFECT
//default	WITHOUT_CLASSIFICATION	0.9999817827408561	WITHOUT_CLASSIFICATION	1.821725914388609E-5	DEFECT
//default	WITHOUT_CLASSIFICATION	0.9999817827408561	WITHOUT_CLASSIFICATION	1.821725914388609E-5	DEFECT
// use to scan own archive	WITHOUT_CLASSIFICATION	0.9999995771627485	WITHOUT_CLASSIFICATION	4.2283725144588897E-7	DEFECT
// collect filesets to pass them to getResourcesToAdd	WITHOUT_CLASSIFICATION	0.9999981414314014	WITHOUT_CLASSIFICATION	1.8585685985249905E-6	DEFECT
// If we're in this finally clause because of an // exception, we don't really care if there's an // exception when closing the stream. E.g. if it // throws "ZIP file must have at least one entry", // because an exception happened before we added // any files, then we must swallow this // exception. Otherwise, the error that's reported // will be the close() error, which is not the // real cause of the problem.	WITHOUT_CLASSIFICATION	0.9526276207766389	WITHOUT_CLASSIFICATION	0.04737237922336112	DEFECT
/*             * Bad luck.             *             * There are resources in the filesets that make the             * archive out of date, but not in the non-fileset             * resources. We need to rescan the non-FileSets to grab             * all of them now.             */	WITHOUT_CLASSIFICATION	0.9999539341295827	WITHOUT_CLASSIFICATION	4.606587041725821E-5	DEFECT
// ZIPs store time with a granularity of 2 seconds, round up	WITHOUT_CLASSIFICATION	0.9999492403826987	WITHOUT_CLASSIFICATION	5.075961730137483E-5	DEFECT
/*             * ZipOutputStream.putNextEntry expects the ZipEntry to             * know its size and the CRC sum before you start writing             * the data when using STORED mode - unless it is seekable.             *             * This forces us to process the data twice.             */	WITHOUT_CLASSIFICATION	0.999933759416801	WITHOUT_CLASSIFICATION	6.624058319907192E-5	DEFECT
// may be altered in validate	WITHOUT_CLASSIFICATION	0.9999995369815435	WITHOUT_CLASSIFICATION	4.630184564969323E-7	DEFECT
//at this point the paths are set up with lists of files, //and the mapper is ready to map from source dirs to dest files //now we iterate through every JAR giving source and dest names // deal with the paths	WITHOUT_CLASSIFICATION	0.9999980413641004	WITHOUT_CLASSIFICATION	1.9586358995817465E-6	DEFECT
//calculate our destination directory; it is either the destDir //attribute, or the base dir of the fileset (for in situ updates)	WITHOUT_CLASSIFICATION	0.9999896927972156	WITHOUT_CLASSIFICATION	1.0307202784384863E-5	DEFECT
// Error messages	WITHOUT_CLASSIFICATION	0.999997751750832	WITHOUT_CLASSIFICATION	2.248249168024388E-6	DEFECT
// Default the viewpath to basedir if it is not specified	WITHOUT_CLASSIFICATION	0.9999924172782495	WITHOUT_CLASSIFICATION	7.582721750454923E-6	DEFECT
// Default the viewpath to basedir if it is not specified	WITHOUT_CLASSIFICATION	0.9999924172782495	WITHOUT_CLASSIFICATION	7.582721750454923E-6	DEFECT
// Default the viewpath to basedir if it is not specified	WITHOUT_CLASSIFICATION	0.9999924172782495	WITHOUT_CLASSIFICATION	7.582721750454923E-6	DEFECT
// Parse the attribute(s) and text of this node, adding // properties for each. // if the "path" attribute is specified, then return the created path // which will be passed to the children of this node.	WITHOUT_CLASSIFICATION	0.9999671420103331	WITHOUT_CLASSIFICATION	3.285798966695469E-5	DEFECT
// An arbitrary attribute.	WITHOUT_CLASSIFICATION	0.9999970507490304	WITHOUT_CLASSIFICATION	2.949250969572311E-6	DEFECT
// Return the Path we added or the ID of this node for // children to reference if needed.  Path objects are // definitely used by child path elements, and ID may be used // for a child text node.	WITHOUT_CLASSIFICATION	0.999999256390781	WITHOUT_CLASSIFICATION	7.436092189695605E-7	DEFECT
// Fall Through	WITHOUT_CLASSIFICATION	0.9999704568167379	WITHOUT_CLASSIFICATION	2.9543183262080402E-5	DEFECT
// Fall Through	WITHOUT_CLASSIFICATION	0.9999704568167379	WITHOUT_CLASSIFICATION	2.9543183262080402E-5	DEFECT
// Ignore the problem	WITHOUT_CLASSIFICATION	0.9999989161203604	WITHOUT_CLASSIFICATION	1.0838796396899694E-6	DEFECT
// If we're on windows, then do the comparison ignoring case // and treat the two directory characters the same	WITHOUT_CLASSIFICATION	0.9999960967423804	WITHOUT_CLASSIFICATION	3.903257619494669E-6	DEFECT
// for NetWare and OS/2, piggy-back on Windows, since in the // validateSetup code, the same assumptions can be made as // with windows - that ; is the path separator	WITHOUT_CLASSIFICATION	0.9999957503617076	WITHOUT_CLASSIFICATION	4.249638292317853E-6	DEFECT
// END static class TemplateElement	WITHOUT_CLASSIFICATION	0.9999998538083981	WITHOUT_CLASSIFICATION	1.4619160199597432E-7	DEFECT
////////////////////////////////////////////////////////////////////// // CONSTRUCTORS / INITIALIZERS	WITHOUT_CLASSIFICATION	0.9999937249654479	WITHOUT_CLASSIFICATION	6.27503455204838E-6	DEFECT
//value and property are mutually exclusive attributes	WITHOUT_CLASSIFICATION	0.9999633227760075	WITHOUT_CLASSIFICATION	3.6677223992495675E-5	DEFECT
// Ignore Exception	WITHOUT_CLASSIFICATION	0.9999982379546444	WITHOUT_CLASSIFICATION	1.7620453556618215E-6	DEFECT
//int logLevel = filesetManifestConfig == null ? //    Project.MSG_WARN : Project.MSG_VERBOSE; //log("File " + file //    + " includes a META-INF/MANIFEST.MF which will be ignored. " //    + "To include this file, set filesetManifest to a value other " //    + "than 'skip'.", logLevel);	WITHOUT_CLASSIFICATION	0.9999981372283785	WITHOUT_CLASSIFICATION	1.862771621559598E-6	DEFECT
// Create the directory, as it might not exist.	WITHOUT_CLASSIFICATION	0.9999988145182745	WITHOUT_CLASSIFICATION	1.185481725449126E-6	DEFECT
// Calculate the total checksum // Convert the keys (source files) into a sorted array.	WITHOUT_CLASSIFICATION	0.9999999828043947	WITHOUT_CLASSIFICATION	1.7195605255292402E-8	DEFECT
// must not use getEntry as "well behaving" applications // must accept the manifest in any capitalization	WITHOUT_CLASSIFICATION	0.9999060675443944	WITHOUT_CLASSIFICATION	9.393245560562501E-5	DEFECT
// We just set the prefix for this fileset, and pass it up.	WITHOUT_CLASSIFICATION	0.9999999068305367	WITHOUT_CLASSIFICATION	9.316946329992004E-8	DEFECT
// We just set the prefix for this fileset, and pass it up.	WITHOUT_CLASSIFICATION	0.9999999068305367	WITHOUT_CLASSIFICATION	9.316946329992004E-8	DEFECT
/*             * Precedence: manifestFile wins over inline manifest,             * over manifests read from the filesets over the original             * manifest.             *             * merge with null argument is a no-op             */	WITHOUT_CLASSIFICATION	0.9999998541235058	WITHOUT_CLASSIFICATION	1.458764942821756E-7	DEFECT
// filesets are separate from the rest for performance // reasons.  If we use the code for union below, we'll always // scan all filesets, even if we know the target is out of // date after the first test.	WITHOUT_CLASSIFICATION	0.9999999965996791	WITHOUT_CLASSIFICATION	3.4003209530129388E-9	DEFECT
// If the archive is built for the first time and it is // matched by a resource collection, then it hasn't been // found in check (it hasn't been there) but will be // included now. // // for some strange reason the old code would simply skip // the entry and not fail, do the same now for backwards // compatibility reasons.  Without this, the which4j build // fails in Gump	WITHOUT_CLASSIFICATION	0.9999839657604501	WITHOUT_CLASSIFICATION	1.6034239549882422E-5	DEFECT
// preserve permissions	WITHOUT_CLASSIFICATION	0.9999978855458937	WITHOUT_CLASSIFICATION	2.114454106225312E-6	DEFECT
// override permissions if set explicitly	WITHOUT_CLASSIFICATION	0.9999563442121345	WITHOUT_CLASSIFICATION	4.3655787865570786E-5	DEFECT
// Check if we can contact the URL	WITHOUT_CLASSIFICATION	0.9999996587274128	WITHOUT_CLASSIFICATION	3.412725871516271E-7	DEFECT
// // Instance //	WITHOUT_CLASSIFICATION	0.9999996281124364	WITHOUT_CLASSIFICATION	3.7188756363705007E-7	DEFECT
//the Exec OS check is different from Os.isOs(), which //probes for a specific OS. Instead it searches the os field //for the current os.name	WITHOUT_CLASSIFICATION	0.9999990528223192	WITHOUT_CLASSIFICATION	9.471776807722058E-7	DEFECT
// Similar to a fileset, but doesn't allow dir attribute to be set	WITHOUT_CLASSIFICATION	0.9999962947998916	WITHOUT_CLASSIFICATION	3.7052001084956E-6	DEFECT
// If the destination directory didn't already exist, // or was empty, then no previous file removal is necessary!	WITHOUT_CLASSIFICATION	0.9999996092205595	WITHOUT_CLASSIFICATION	3.9077944050199385E-7	DEFECT
// Default the viewpath to basedir if it is not specified	WITHOUT_CLASSIFICATION	0.9999924172782495	WITHOUT_CLASSIFICATION	7.582721750454923E-6	DEFECT
// preserveInTarget would find all files we want to keep, // but we need to find all that we want to delete - so the // meaning of all patterns and selectors must be inverted	WITHOUT_CLASSIFICATION	0.9999998864261794	WITHOUT_CLASSIFICATION	1.135738205248167E-7	DEFECT
//On VMS platform, we need to create a special java options file //containing the arguments and classpath for the java command. //The special file is supported by the "-V" switch on the VMS JVM.	WITHOUT_CLASSIFICATION	0.9999997487723603	WITHOUT_CLASSIFICATION	2.5122763970837944E-7	DEFECT
// Do nothing if no resources (including nested text)	WITHOUT_CLASSIFICATION	0.9999998081704631	WITHOUT_CLASSIFICATION	1.9182953699473236E-7	DEFECT
// Windows has a 32k limit on total arg size, so // create a temporary file to store all the arguments	WITHOUT_CLASSIFICATION	0.9999995413644541	WITHOUT_CLASSIFICATION	4.5863554594868317E-7	DEFECT
// filesets has been protected so we need to keep that even after // switching to resource collections.  In fact, they will still // get a different treatment form the other resource collections // even in execute since we have some subtle special features like // switching type to "dir" when we encounter a DirSet that would // be more difficult to achieve otherwise.	WITHOUT_CLASSIFICATION	0.9999986379895428	WITHOUT_CLASSIFICATION	1.3620104571627309E-6	DEFECT
// need to reset the stream handler to restart // reading of pipes; // go ahead and do it always w/ nested redirectors	WITHOUT_CLASSIFICATION	0.9999987840614394	WITHOUT_CLASSIFICATION	1.2159385605380395E-6	DEFECT
/*             * if we get here, in and out have not been specified, we are             * in batch processing mode.             */	WITHOUT_CLASSIFICATION	0.9999988928336242	WITHOUT_CLASSIFICATION	1.107166375890637E-6	DEFECT
//at this point there is one trailing space to remove, if the list is not empty.	WITHOUT_CLASSIFICATION	0.9999893843521072	WITHOUT_CLASSIFICATION	1.061564789280921E-5	DEFECT
// Ignore and keep trying	WITHOUT_CLASSIFICATION	0.9999998931694719	WITHOUT_CLASSIFICATION	1.0683052817679372E-7	DEFECT
// Chunk part of previous env var (UNIX env vars can // contain embedded new lines).	WITHOUT_CLASSIFICATION	0.999980726584686	WITHOUT_CLASSIFICATION	1.9273415314103756E-5	DEFECT
// Since we "look ahead" before adding, there's one last env var.	WITHOUT_CLASSIFICATION	0.9999998425350237	WITHOUT_CLASSIFICATION	1.5746497640905027E-7	DEFECT
//noop default encoding used	WITHOUT_CLASSIFICATION	0.9999985560266761	WITHOUT_CLASSIFICATION	1.4439733239145954E-6	DEFECT
// On OpenVMS Runtime#exec() doesn't support the environment array, // so we only return the new values which then will be set in // the generated DCL script, inheriting the parent process environment	WITHOUT_CLASSIFICATION	0.9999974163944415	WITHOUT_CLASSIFICATION	2.5836055583562538E-6	DEFECT
// Locate the auxiliary script	WITHOUT_CLASSIFICATION	0.9999999762997093	WITHOUT_CLASSIFICATION	2.370029071690543E-8	DEFECT
// Build the command	WITHOUT_CLASSIFICATION	0.9999966766442583	WITHOUT_CLASSIFICATION	3.3233557417046498E-6	DEFECT
/*         * Writes the command into a temporary DCL script and returns the         * corresponding File object.  The script will be deleted on exit.         * @param cmd the command line to execute as an array of strings.         * @param env the environment to set as an array of strings.         * @return the command File.         * @throws IOException if errors are encountered creating the file.         */	WITHOUT_CLASSIFICATION	0.9986583706761987	WITHOUT_CLASSIFICATION	0.0013416293238013373	DEFECT
//************************************************************************ //  protected and private methods //************************************************************************	WITHOUT_CLASSIFICATION	0.9999999637897814	WITHOUT_CLASSIFICATION	3.621021864816339E-8	DEFECT
// ensure that parent dir of dest file exists!	WITHOUT_CLASSIFICATION	0.9999993229716256	WITHOUT_CLASSIFICATION	6.770283743693336E-7	DEFECT
// add the single group arguments // Javadoc 1.2 rules: //   Multiple -group args allowed. //   Each arg includes 3 strings: -group [name] [packagelist]. //   Elements in [packagelist] are colon-delimited. //   An element in [packagelist] may end with the * wildcard.	WITHOUT_CLASSIFICATION	0.9999995184760377	WITHOUT_CLASSIFICATION	4.81523962161836E-7	DEFECT
// for each sourcePath entry, add a directoryset with includes // taken from packagenames attribute and nested package // elements and excludes taken from excludepackages attribute // and nested excludepackage elements	WITHOUT_CLASSIFICATION	0.9999996040654033	WITHOUT_CLASSIFICATION	3.9593459666285757E-7	DEFECT
// // Override the logging of output in order to filter out Generating // messages.  Generating messages are set to a priority of VERBOSE // unless they appear after what could be an informational message. //	WITHOUT_CLASSIFICATION	0.9999994843231378	WITHOUT_CLASSIFICATION	5.156768622739233E-7	DEFECT
/* Methods below all add specific selectors */	WITHOUT_CLASSIFICATION	0.999999573127979	WITHOUT_CLASSIFICATION	4.268720209536336E-7	DEFECT
/* Methods below all add specific selectors */	WITHOUT_CLASSIFICATION	0.999999573127979	WITHOUT_CLASSIFICATION	4.268720209536336E-7	DEFECT
/* Methods below all add specific selectors */	WITHOUT_CLASSIFICATION	0.999999573127979	WITHOUT_CLASSIFICATION	4.268720209536336E-7	DEFECT
/*               If verbosity is MSG_VERBOSE, that mean we are doing               regular logging (backwards as that sounds).  In that               case, we want to print one message about deleting the               top of the directory tree.  Otherwise, the removeDir               method will handle messages for _all_ directories.             */	WITHOUT_CLASSIFICATION	0.9999989500070043	WITHOUT_CLASSIFICATION	1.049992995676636E-6	DEFECT
//hand down	WITHOUT_CLASSIFICATION	0.9999408385284861	WITHOUT_CLASSIFICATION	5.9161471513848567E-5	DEFECT
// create intermediary directories - sometimes zip don't add them	WITHOUT_CLASSIFICATION	0.9999998984243511	WITHOUT_CLASSIFICATION	1.0157564891140538E-7	DEFECT
// SQL defines "--" as a comment to EOL // and in Oracle it may contain a hint // so we cannot just remove it, instead we must end it	WITHOUT_CLASSIFICATION	0.999999982207014	WITHOUT_CLASSIFICATION	1.779298596151407E-8	DEFECT
/*         * In Ant 1.1, <chmod dir="foo" /> means, change the permissions         * of directory foo, not anything inside of it.  This is the case the         * second branch of the if statement below catches for backwards         * compatibility.         */	WITHOUT_CLASSIFICATION	0.9998833609372427	WITHOUT_CLASSIFICATION	1.1663906275734868E-4	DEFECT
/* for historical and performance reasons we have to do               things in a rather complex way.               (1) Move is optimized to move directories if a fileset               has been included completely, therefore FileSets need a               special treatment.  This is also required to support               the failOnError semantice (skip filesets with broken               basedir but handle the remaining collections).               (2) We carry around a few protected methods that work               on basedirs and arrays of names.  To optimize stuff, all               resources with the same basedir get collected in               separate lists and then each list is handled in one go.            */	WITHOUT_CLASSIFICATION	0.9981675003274805	WITHOUT_CLASSIFICATION	0.0018324996725195308	DEFECT
//we create a fileset with the source file. //this lets us combine our logic for handling output directories, //mapping etc.	WITHOUT_CLASSIFICATION	0.9999998686681227	WITHOUT_CLASSIFICATION	1.3133187727321638E-7	DEFECT
// if input files are specified, inputString and inputStream are ignored; // classes that work with redirector attributes can enforce // whatever warnings are needed	WITHOUT_CLASSIFICATION	0.9999991793454437	WITHOUT_CLASSIFICATION	8.206545564093188E-7	DEFECT
// Ignore exception	WITHOUT_CLASSIFICATION	0.9999974145026143	WITHOUT_CLASSIFICATION	2.5854973856815335E-6	DEFECT
// Ignore exception	WITHOUT_CLASSIFICATION	0.9999974145026143	WITHOUT_CLASSIFICATION	2.5854973856815335E-6	DEFECT
// Ignore exception	WITHOUT_CLASSIFICATION	0.9999974145026143	WITHOUT_CLASSIFICATION	2.5854973856815335E-6	DEFECT
// classpath attributes go into a vector	WITHOUT_CLASSIFICATION	0.9999993539755154	WITHOUT_CLASSIFICATION	6.460244846638774E-7	DEFECT
// we have already started reading this section // this line is the first attribute. set it and then // let the normal read handle the rest	WITHOUT_CLASSIFICATION	0.9999992956481585	WITHOUT_CLASSIFICATION	7.043518415681159E-7	DEFECT
//not modified so no file download. just return //instead and trace out something so the user //doesn't think that the download happened when it //didn't	WITHOUT_CLASSIFICATION	0.9999999520139049	WITHOUT_CLASSIFICATION	4.79860951871075E-8	DEFECT
// we have started to (over)write dest, but failed. // Try to delete the garbage we'd otherwise leave // behind.	WITHOUT_CLASSIFICATION	0.9999914520022655	WITHOUT_CLASSIFICATION	8.54799773464325E-6	DEFECT
// start() would throw IllegalThreadStateException from // ThreadGroup.add if it were destroyed	WITHOUT_CLASSIFICATION	0.9999622885091554	WITHOUT_CLASSIFICATION	3.7711490844613786E-5	DEFECT
// kjc-1.5A doesn't support -encoding option now. // but it will be supported near the feature.	WITHOUT_CLASSIFICATION	0.9996855618300022	WITHOUT_CLASSIFICATION	3.1443816999778457E-4	DEFECT
// Create an instance of the compiler, redirecting output to // the project log	WITHOUT_CLASSIFICATION	0.9999986205009006	WITHOUT_CLASSIFICATION	1.37949909950309E-6	DEFECT
// Setup the apt executable	WITHOUT_CLASSIFICATION	0.9999998813535568	WITHOUT_CLASSIFICATION	1.1864644319344562E-7	DEFECT
//On VMS platform, we need to create a special java options file //containing the arguments and classpath for the javac command. //The special file is supported by the "-V" switch on the VMS JVM.	WITHOUT_CLASSIFICATION	0.9999998662583475	WITHOUT_CLASSIFICATION	1.3374165245460138E-7	DEFECT
//must keep for subclass BC, though unused: // CheckStyle:ConstantNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9999970195886402	WITHOUT_CLASSIFICATION	2.980411359866005E-6	DEFECT
// CheckStyle:ConstantNameCheck ON // CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999994850712367	WITHOUT_CLASSIFICATION	5.149287631912724E-7	DEFECT
// add dest dir to classpath so that previously compiled and // untouched classes are on classpath	WITHOUT_CLASSIFICATION	0.9999999918864059	WITHOUT_CLASSIFICATION	8.113594102655662E-9	DEFECT
// add dest dir to classpath so that previously compiled and // untouched classes are on classpath	WITHOUT_CLASSIFICATION	0.9999999918864059	WITHOUT_CLASSIFICATION	8.113594102655662E-9	DEFECT
// For -sourcepath, use the "sourcepath" value if present. // Otherwise default to the "srcdir" value.	WITHOUT_CLASSIFICATION	0.9999999783358051	WITHOUT_CLASSIFICATION	2.1664194829503207E-8	DEFECT
/*             * Many system have been reported to get into trouble with             * long command lines - no, not only Windows ;-).             *             * POSIX seems to define a lower limit of 4k, so use a temporary             * file if the total length of the command line exceeds this limit.             */	WITHOUT_CLASSIFICATION	0.908601626751646	WITHOUT_CLASSIFICATION	0.09139837324835402	DEFECT
// there is a bootclasspath stated.  By default, the // includeJavaRuntime is false.  If the user has stated a // bootclasspath and said to include the java runtime, it's on // their head!	WITHOUT_CLASSIFICATION	0.999999012429211	WITHOUT_CLASSIFICATION	9.87570789003934E-7	DEFECT
//The following is data used while processing stdout of CVS command	WITHOUT_CLASSIFICATION	0.9999564271790883	WITHOUT_CLASSIFICATION	4.3572820911615197E-5	DEFECT
// The date format is using a - format since 1.12.9 so we have: // 1.12.9-: 'date: YYYY/mm/dd HH:mm:ss;  author: name;' // 1.12.9+: 'date: YYYY-mm-dd HH:mm:ss Z;  author: name'	WITHOUT_CLASSIFICATION	0.9999748312714721	WITHOUT_CLASSIFICATION	2.5168728527951823E-5	DEFECT
// Default the viewpath to basedir if it is not specified	WITHOUT_CLASSIFICATION	0.9999924172782495	WITHOUT_CLASSIFICATION	7.582721750454923E-6	DEFECT
// Default the viewpath to basedir if it is not specified	WITHOUT_CLASSIFICATION	0.9999924172782495	WITHOUT_CLASSIFICATION	7.582721750454923E-6	DEFECT
// viewpath	WITHOUT_CLASSIFICATION	0.999999205231928	WITHOUT_CLASSIFICATION	7.94768071934397E-7	DEFECT
// ClearCase items	WITHOUT_CLASSIFICATION	0.9999999293052642	WITHOUT_CLASSIFICATION	7.069473586678834E-8	DEFECT
// ClearCase items	WITHOUT_CLASSIFICATION	0.9999999293052642	WITHOUT_CLASSIFICATION	7.069473586678834E-8	DEFECT
// -branch	WITHOUT_CLASSIFICATION	0.9999993624540503	WITHOUT_CLASSIFICATION	6.37545949599602E-7	DEFECT
// -c	WITHOUT_CLASSIFICATION	0.9999975926837397	WITHOUT_CLASSIFICATION	2.407316260219257E-6	DEFECT
// entries are of the form: //CVS 1.11 // File module/filename is new; current revision 1.1 //CVS 1.11.9 // File module/filename is new; cvstag_2003_11_03_2  revision 1.1 // or // File module/filename changed from revision 1.4 to 1.6 // or // File module/filename is removed; not included in // release tag SKINLF_12 //CVS 1.11.9 // File testantoine/antoine.bat is removed; TESTANTOINE_1 revision 1.1.1.1 // // get rid of 'File module/"	WITHOUT_CLASSIFICATION	0.999973963206908	WITHOUT_CLASSIFICATION	2.6036793091977656E-5	DEFECT
// CheckStyle:MemberNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9999992533506842	WITHOUT_CLASSIFICATION	7.466493157948475E-7	DEFECT
// We need character encoding aware printing here. // So, using PrintWriter over OutputStreamWriter instead of PrintStream	WITHOUT_CLASSIFICATION	0.9999958425026634	WITHOUT_CLASSIFICATION	4.157497336702014E-6	DEFECT
// convert from ascii back to native // encoding to convert to/from // Where to find input files // Where to put output files // Extension of output files if different	WITHOUT_CLASSIFICATION	0.9996585155544746	WITHOUT_CLASSIFICATION	3.414844455253791E-4	DEFECT
// we are forced to fork ANTLR since there is a call // to System.exit() and there is nothing we can do // right now to avoid this. :-( (SBa) // I'm not removing this method to keep backward compatibility	WITHOUT_CLASSIFICATION	0.9999494612043792	WITHOUT_CLASSIFICATION	5.0538795620762174E-5	DEFECT
//error if both are empty, or both are set	WITHOUT_CLASSIFICATION	0.9999977462161129	WITHOUT_CLASSIFICATION	2.2537838871069375E-6	DEFECT
// hasCR is still true (for the second one)	WITHOUT_CLASSIFICATION	0.9999971848622655	WITHOUT_CLASSIFICATION	2.8151377344455684E-6	DEFECT
// should be the default, as it integrates better in ant.	WITHOUT_CLASSIFICATION	0.9999996322103917	WITHOUT_CLASSIFICATION	3.677896084164587E-7	DEFECT
// scan source and dest dirs to build up both copy lists and // compile lists //        scanDir(srcDir, destDir);	WITHOUT_CLASSIFICATION	0.9999998784074636	WITHOUT_CLASSIFICATION	1.2159253633390272E-7	DEFECT
// if it's a non source file, copy it if a later date than the // dest // if it's a source file, see if the destination class file // needs to be recreated via compilation	WITHOUT_CLASSIFICATION	0.9999967051403127	WITHOUT_CLASSIFICATION	3.2948596873349913E-6	DEFECT
// depending on implementation, XMLReader can yield hips of warning, // only output then if user explicitly asked for it	WITHOUT_CLASSIFICATION	0.9998392594420824	WITHOUT_CLASSIFICATION	1.6074055791764056E-4	DEFECT
/* ========================================================================    *    * Instance variables.    */	WITHOUT_CLASSIFICATION	0.9999998914562407	WITHOUT_CLASSIFICATION	1.0854375929354476E-7	DEFECT
// swallow	WITHOUT_CLASSIFICATION	0.9999965775394587	WITHOUT_CLASSIFICATION	3.4224605412498893E-6	DEFECT
// swallow	WITHOUT_CLASSIFICATION	0.9999965775394587	WITHOUT_CLASSIFICATION	3.4224605412498893E-6	DEFECT
// swallow	WITHOUT_CLASSIFICATION	0.9999965775394587	WITHOUT_CLASSIFICATION	3.4224605412498893E-6	DEFECT
// swallow	WITHOUT_CLASSIFICATION	0.9999965775394587	WITHOUT_CLASSIFICATION	3.4224605412498893E-6	DEFECT
// If only default is specified and the property previously // existed in the property file, it is unchanged.	WITHOUT_CLASSIFICATION	0.999999647292713	WITHOUT_CLASSIFICATION	3.52707287124564E-7	DEFECT
// make sure to close all handles, otherwise the garbage // collector will close them...whenever possible and // Windows may complain about not being able to delete files.	WITHOUT_CLASSIFICATION	0.9999444823253515	WITHOUT_CLASSIFICATION	5.551767464848147E-5	DEFECT
// WARN: Don't use the StreamSource(File) ctor. It won't work with // xalan prior to 2.2 because of systemid bugs.	WITHOUT_CLASSIFICATION	0.9748591090292217	WITHOUT_CLASSIFICATION	0.02514089097077831	DEFECT
// build the command line from what we got the format // as specified in the CCM.EXE help	WITHOUT_CLASSIFICATION	0.9999994106153427	WITHOUT_CLASSIFICATION	5.893846573417146E-7	DEFECT
// implementation of org.apache.tools.ant.taskdefs.ExecuteStreamHandler interface	WITHOUT_CLASSIFICATION	0.9999866563241808	WITHOUT_CLASSIFICATION	1.3343675819186469E-5	DEFECT
// Default the viewpath to basedir if it is not specified	WITHOUT_CLASSIFICATION	0.9999924172782495	WITHOUT_CLASSIFICATION	7.582721750454923E-6	DEFECT
// Default the viewpath to basedir if it is not specified	WITHOUT_CLASSIFICATION	0.9999924172782495	WITHOUT_CLASSIFICATION	7.582721750454923E-6	DEFECT
// Default the viewpath to basedir if it is not specified	WITHOUT_CLASSIFICATION	0.9999924172782495	WITHOUT_CLASSIFICATION	7.582721750454923E-6	DEFECT
// Default the viewpath to basedir if it is not specified	WITHOUT_CLASSIFICATION	0.9999924172782495	WITHOUT_CLASSIFICATION	7.582721750454923E-6	DEFECT
/*         * pre Ant 1.6 this method used to call getClass().getResource         * while Ant 1.6 will call ClassLoader.getResource().         *         * The difference is that Class.getResource expects a leading         * slash for "absolute" resources and will strip it before         * delegating to ClassLoader.getResource - so we now have to         * emulate Class's behavior.         */	WITHOUT_CLASSIFICATION	0.9999999968597181	WITHOUT_CLASSIFICATION	3.140281983126226E-9	DEFECT
// -c	WITHOUT_CLASSIFICATION	0.9999975926837397	WITHOUT_CLASSIFICATION	2.407316260219257E-6	DEFECT
// -cfile	WITHOUT_CLASSIFICATION	0.9999993281953511	WITHOUT_CLASSIFICATION	6.718046488585925E-7	DEFECT
// -cfile	WITHOUT_CLASSIFICATION	0.9999993281953511	WITHOUT_CLASSIFICATION	6.718046488585925E-7	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999988380337144	WITHOUT_CLASSIFICATION	1.1619662855434818E-6	DEFECT
/* ------------- */	WITHOUT_CLASSIFICATION	0.999992837094049	WITHOUT_CLASSIFICATION	7.162905951155071E-6	DEFECT
// -I- or -I-Y or -I-N	WITHOUT_CLASSIFICATION	0.9999945115389783	WITHOUT_CLASSIFICATION	5.4884610217225005E-6	DEFECT
// -I- or -I-Y or -I-N	WITHOUT_CLASSIFICATION	0.9999945115389783	WITHOUT_CLASSIFICATION	5.4884610217225005E-6	DEFECT
// -I- or -I-Y or -I-N	WITHOUT_CLASSIFICATION	0.9999945115389783	WITHOUT_CLASSIFICATION	5.4884610217225005E-6	DEFECT
// first off, make sure that we've got a command and a vssdir and a label ...	WITHOUT_CLASSIFICATION	0.9999909727599097	WITHOUT_CLASSIFICATION	9.027240090349933E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999995133297559	WITHOUT_CLASSIFICATION	4.86670244023277E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999995133297559	WITHOUT_CLASSIFICATION	4.86670244023277E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999995133297559	WITHOUT_CLASSIFICATION	4.86670244023277E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999995133297559	WITHOUT_CLASSIFICATION	4.86670244023277E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999995133297559	WITHOUT_CLASSIFICATION	4.86670244023277E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999995133297559	WITHOUT_CLASSIFICATION	4.86670244023277E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999995133297559	WITHOUT_CLASSIFICATION	4.86670244023277E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999995133297559	WITHOUT_CLASSIFICATION	4.86670244023277E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999995133297559	WITHOUT_CLASSIFICATION	4.86670244023277E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999995133297559	WITHOUT_CLASSIFICATION	4.86670244023277E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999995133297559	WITHOUT_CLASSIFICATION	4.86670244023277E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999995133297559	WITHOUT_CLASSIFICATION	4.86670244023277E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999995133297559	WITHOUT_CLASSIFICATION	4.86670244023277E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999995133297559	WITHOUT_CLASSIFICATION	4.86670244023277E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999995133297559	WITHOUT_CLASSIFICATION	4.86670244023277E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999995133297559	WITHOUT_CLASSIFICATION	4.86670244023277E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999995133297559	WITHOUT_CLASSIFICATION	4.86670244023277E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999995133297559	WITHOUT_CLASSIFICATION	4.86670244023277E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999995133297559	WITHOUT_CLASSIFICATION	4.86670244023277E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999995133297559	WITHOUT_CLASSIFICATION	4.86670244023277E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999995133297559	WITHOUT_CLASSIFICATION	4.86670244023277E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999995133297559	WITHOUT_CLASSIFICATION	4.86670244023277E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999995133297559	WITHOUT_CLASSIFICATION	4.86670244023277E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999995133297559	WITHOUT_CLASSIFICATION	4.86670244023277E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999995133297559	WITHOUT_CLASSIFICATION	4.86670244023277E-7	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999988380337144	WITHOUT_CLASSIFICATION	1.1619662855434818E-6	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999988380337144	WITHOUT_CLASSIFICATION	1.1619662855434818E-6	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999988380337144	WITHOUT_CLASSIFICATION	1.1619662855434818E-6	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999988380337144	WITHOUT_CLASSIFICATION	1.1619662855434818E-6	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999988380337144	WITHOUT_CLASSIFICATION	1.1619662855434818E-6	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999988380337144	WITHOUT_CLASSIFICATION	1.1619662855434818E-6	DEFECT
/* -------------------- */	WITHOUT_CLASSIFICATION	0.9999951985620726	WITHOUT_CLASSIFICATION	4.801437927368228E-6	DEFECT
// -Y	WITHOUT_CLASSIFICATION	0.9999960792985071	WITHOUT_CLASSIFICATION	3.920701492935804E-6	DEFECT
// -Y	WITHOUT_CLASSIFICATION	0.9999960792985071	WITHOUT_CLASSIFICATION	3.920701492935804E-6	DEFECT
// -Y	WITHOUT_CLASSIFICATION	0.9999960792985071	WITHOUT_CLASSIFICATION	3.920701492935804E-6	DEFECT
// VSS items	WITHOUT_CLASSIFICATION	0.9999987543933716	WITHOUT_CLASSIFICATION	1.2456066284087926E-6	DEFECT
// VSS items	WITHOUT_CLASSIFICATION	0.9999987543933716	WITHOUT_CLASSIFICATION	1.2456066284087926E-6	DEFECT
// skip version info and general purpose byte	WITHOUT_CLASSIFICATION	0.999990731714914	WITHOUT_CLASSIFICATION	9.268285085935392E-6	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999988380337144	WITHOUT_CLASSIFICATION	1.1619662855434818E-6	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999988380337144	WITHOUT_CLASSIFICATION	1.1619662855434818E-6	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999988380337144	WITHOUT_CLASSIFICATION	1.1619662855434818E-6	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999988380337144	WITHOUT_CLASSIFICATION	1.1619662855434818E-6	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999988380337144	WITHOUT_CLASSIFICATION	1.1619662855434818E-6	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999988380337144	WITHOUT_CLASSIFICATION	1.1619662855434818E-6	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999988380337144	WITHOUT_CLASSIFICATION	1.1619662855434818E-6	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999988380337144	WITHOUT_CLASSIFICATION	1.1619662855434818E-6	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999988380337144	WITHOUT_CLASSIFICATION	1.1619662855434818E-6	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999988380337144	WITHOUT_CLASSIFICATION	1.1619662855434818E-6	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999988380337144	WITHOUT_CLASSIFICATION	1.1619662855434818E-6	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999988380337144	WITHOUT_CLASSIFICATION	1.1619662855434818E-6	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999988380337144	WITHOUT_CLASSIFICATION	1.1619662855434818E-6	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999988380337144	WITHOUT_CLASSIFICATION	1.1619662855434818E-6	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999988380337144	WITHOUT_CLASSIFICATION	1.1619662855434818E-6	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999988380337144	WITHOUT_CLASSIFICATION	1.1619662855434818E-6	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999988380337144	WITHOUT_CLASSIFICATION	1.1619662855434818E-6	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999988380337144	WITHOUT_CLASSIFICATION	1.1619662855434818E-6	DEFECT
// first off, make sure that we've got a command and a vssdir and a label ...	WITHOUT_CLASSIFICATION	0.9999909727599097	WITHOUT_CLASSIFICATION	9.027240090349933E-6	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999988380337144	WITHOUT_CLASSIFICATION	1.1619662855434818E-6	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999988380337144	WITHOUT_CLASSIFICATION	1.1619662855434818E-6	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999988380337144	WITHOUT_CLASSIFICATION	1.1619662855434818E-6	DEFECT
// we get the root classes and build up a set of // classes upon which they depend	WITHOUT_CLASSIFICATION	0.999989643799103	WITHOUT_CLASSIFICATION	1.0356200896889375E-5	DEFECT
// read the constant pool in and resolve it	WITHOUT_CLASSIFICATION	0.9999988003130005	WITHOUT_CLASSIFICATION	1.1996869995964358E-6	DEFECT
/*         * Use the Runtime object to execute an external command.  Use the         * RedirectOutput inner class to direct the standard and error output         * from the command to the JRE's standard output         */	WITHOUT_CLASSIFICATION	0.9999399056301154	WITHOUT_CLASSIFICATION	6.009436988456174E-5	DEFECT
/*         * Two Maps are used to track local DTDs that will be used in case the         * remote copies of these DTDs cannot be accessed.  The key for the Map         * is the DTDs public ID and the value is the local location for the DTD         */	WITHOUT_CLASSIFICATION	0.9999950122203747	WITHOUT_CLASSIFICATION	4.987779625411418E-6	DEFECT
// depFile exists and is newer than the class file // need to get dependency list from the map.	WITHOUT_CLASSIFICATION	0.9999986354537491	WITHOUT_CLASSIFICATION	1.3645462508749574E-6	DEFECT
// without closure we may delete an inner class but not the // top level class which would not trigger a recompile.	WITHOUT_CLASSIFICATION	0.9999745522463805	WITHOUT_CLASSIFICATION	2.5447753619347413E-5	DEFECT
//always trigger file mode if commands are big enough	WITHOUT_CLASSIFICATION	0.99946704286123	WITHOUT_CLASSIFICATION	5.329571387699408E-4	DEFECT
//fill in args	WITHOUT_CLASSIFICATION	0.9999961883929464	WITHOUT_CLASSIFICATION	3.811607053702507E-6	DEFECT
//fill in args	WITHOUT_CLASSIFICATION	0.9999961883929464	WITHOUT_CLASSIFICATION	3.811607053702507E-6	DEFECT
//iterate through the ref list & generate an entry for each //or just rely on the fact that the toString operator does this, but //noting that the separator is ';' on windows, ':' on unix	WITHOUT_CLASSIFICATION	0.9987000517874822	WITHOUT_CLASSIFICATION	0.0012999482125177896	DEFECT
//now run the command of exe + settings + files	WITHOUT_CLASSIFICATION	0.9995990894678474	WITHOUT_CLASSIFICATION	4.0091053215272486E-4	DEFECT
/*     * Directory where "source" EJB files are stored and where stubs and     * skeletons will also be written.     */	WITHOUT_CLASSIFICATION	0.9999907373252698	WITHOUT_CLASSIFICATION	9.26267473019741E-6	DEFECT
/*     * This Hashtable maintains a list of EJB class files processed by the ejbc     * utility (both "source" class files as well as stubs and skeletons). The     * key for the Hashtable is a String representing the path to the class file     * (relative to the destination directory).  The value for the Hashtable is     * a File object which reference the actual class file.     */	WITHOUT_CLASSIFICATION	0.9999999954574018	WITHOUT_CLASSIFICATION	4.542598192689561E-9	DEFECT
/* Execute the ejbc utility -- stubs/skeletons are rebuilt, if needed */	WITHOUT_CLASSIFICATION	0.9999993746839034	WITHOUT_CLASSIFICATION	6.253160965692541E-7	DEFECT
// EJB's display name // EJB's home interface name // EJB's remote interface name // EJB's implementation class // EJB's primary key class // or "stateful" or "stateless" // Does this EJB support CMP? // Does this EJB support IIOP? // Does this EJB require failover? // CMP descriptor list	WITHOUT_CLASSIFICATION	0.9997364890230891	WITHOUT_CLASSIFICATION	2.635109769108179E-4	DEFECT
/* Check the timestamp on the EJB implementation class.             *             * Note that if ONLY the implementation class has changed, it's not             * necessary to rebuild the EJB stubs and skeletons.  For this             * reason, we ensure the file exists (using lastModified above), but             * we DON'T compare it's timestamp with the timestamps of the home             * and remote interfaces (because it's irrelevant in determining if             * ejbc must be run)             */	WITHOUT_CLASSIFICATION	0.9999999577352364	WITHOUT_CLASSIFICATION	4.226476363180869E-8	DEFECT
//classpath //add at the end of the classpath //the system classpath in order to find the tools.jar file	WITHOUT_CLASSIFICATION	0.9999884788640665	WITHOUT_CLASSIFICATION	1.1521135933477008E-5	DEFECT
// ejb jar file	WITHOUT_CLASSIFICATION	0.9999996808989845	WITHOUT_CLASSIFICATION	3.1910101550280524E-7	DEFECT
//client jar file	WITHOUT_CLASSIFICATION	0.9999993775793944	WITHOUT_CLASSIFICATION	6.224206054819713E-7	DEFECT
// Have to catch this because of the semantics of calling main()	WITHOUT_CLASSIFICATION	0.9999976438101295	WITHOUT_CLASSIFICATION	2.356189870444807E-6	DEFECT
/* ------------- */	WITHOUT_CLASSIFICATION	0.999992837094049	WITHOUT_CLASSIFICATION	7.162905951155071E-6	DEFECT
/* ------------- */	WITHOUT_CLASSIFICATION	0.999992837094049	WITHOUT_CLASSIFICATION	7.162905951155071E-6	DEFECT
// descriptorName = <path><basename><basenameterminator><remainder> // examples = /org/objectweb/fooAppli/foo/Foo-ejb-jar.xml // examples = /org/objectweb/fooAppli/foo/Foo.xml (JOnAS convention)	WITHOUT_CLASSIFICATION	0.9999764164288047	WITHOUT_CLASSIFICATION	2.3583571195292475E-5	DEFECT
// class name (search in the classpath provided for the ejbjar element)	WITHOUT_CLASSIFICATION	0.9999994475737514	WITHOUT_CLASSIFICATION	5.524262486578075E-7	DEFECT
// additionalargs	WITHOUT_CLASSIFICATION	0.9999995934750713	WITHOUT_CLASSIFICATION	4.065249287922748E-7	DEFECT
// get all the files in the descriptor directory	WITHOUT_CLASSIFICATION	0.9999951857860176	WITHOUT_CLASSIFICATION	4.814213982319333E-6	DEFECT
// If an explicit securityPolicy file was specified, it maybe an // absolute path.  Use the project to resolve it.	WITHOUT_CLASSIFICATION	0.9999998397113643	WITHOUT_CLASSIFICATION	1.6028863580804954E-7	DEFECT
// Since the descriptor read properly, everything should be o.k.	WITHOUT_CLASSIFICATION	0.9999938378994189	WITHOUT_CLASSIFICATION	6.162100581163695E-6	DEFECT
// Lastly create File object for the Jar files. If we are using // a flat destination dir, then we need to redefine baseName!	WITHOUT_CLASSIFICATION	0.9999999155068436	WITHOUT_CLASSIFICATION	8.449315630700097E-8	DEFECT
/*         * For the GenericDeploymentTool, do nothing.  Vendor specific         * subclasses should throw a BuildException if the configuration is         * invalid for their server.         */	WITHOUT_CLASSIFICATION	0.9999990516039351	WITHOUT_CLASSIFICATION	9.483960648659628E-7	DEFECT
// Get the filename of vendor specific descriptor	WITHOUT_CLASSIFICATION	0.9999998240226493	WITHOUT_CLASSIFICATION	1.759773507413969E-7	DEFECT
// now that we have the weblogic descriptor, we parse the file // to find other descriptors needed to deploy the bean. // this could be the weblogic-cmp-rdbms.xml or any other O/R // mapping tool descriptors.	WITHOUT_CLASSIFICATION	0.9997819251692758	WITHOUT_CLASSIFICATION	2.1807483072423917E-4	DEFECT
// Update with changed Bean class	WITHOUT_CLASSIFICATION	0.9999999556096087	WITHOUT_CLASSIFICATION	4.4390391327726614E-8	DEFECT
// need to close files and perhaps rename output	WITHOUT_CLASSIFICATION	0.9999996572042245	WITHOUT_CLASSIFICATION	3.427957755069293E-7	DEFECT
// empty	WITHOUT_CLASSIFICATION	0.9999989787642598	WITHOUT_CLASSIFICATION	1.0212357402186593E-6	DEFECT
// empty	WITHOUT_CLASSIFICATION	0.9999989787642598	WITHOUT_CLASSIFICATION	1.0212357402186593E-6	DEFECT
// are any of the above out of date. // we find the implementation classes and see if they are older than any // of the above or the .ser file itself.	WITHOUT_CLASSIFICATION	0.999999945622043	WITHOUT_CLASSIFICATION	5.437795704195914E-8	DEFECT
/*     * Filenames of the standard EJB descriptor (which is passed to this class     * from the parent "ejbjar" task) and the iAS-specific EJB descriptor     * (whose name is determined by this class).  Both filenames are relative     * to the directory specified by the "srcdir" attribute in the ejbjar task.     */	WITHOUT_CLASSIFICATION	0.9999942435002351	WITHOUT_CLASSIFICATION	5.756499764940089E-6	DEFECT
//remove the .class	WITHOUT_CLASSIFICATION	0.9999994605726795	WITHOUT_CLASSIFICATION	5.394273204643944E-7	DEFECT
// create the output .jar, if required	WITHOUT_CLASSIFICATION	0.9999979403833027	WITHOUT_CLASSIFICATION	2.0596166972199453E-6	DEFECT
// change this to get the objects from the other reference	WITHOUT_CLASSIFICATION	0.9999996986499635	WITHOUT_CLASSIFICATION	3.0135003649596797E-7	DEFECT
// Available specification version must be >= required	WITHOUT_CLASSIFICATION	0.9999758666565488	WITHOUT_CLASSIFICATION	2.4133343451187023E-5	DEFECT
// Implementation version must be >= required	WITHOUT_CLASSIFICATION	0.9999679688278106	WITHOUT_CLASSIFICATION	3.2031172189439795E-5	DEFECT
//WARNING: We trim the values of all the attributes because //Some extension declarations are badly defined (ie have spaces //after version or vendorID)	WITHOUT_CLASSIFICATION	0.9998417178773291	WITHOUT_CLASSIFICATION	1.58282122670835E-4	DEFECT
/*     * Validates URL     */	WITHOUT_CLASSIFICATION	0.9999999303954854	WITHOUT_CLASSIFICATION	6.960451452496632E-8	DEFECT
// the new value, this needs to be here // because it is required to calculate the next position to // search from at the end of the loop	WITHOUT_CLASSIFICATION	0.9823063545390748	WITHOUT_CLASSIFICATION	0.01769364546092528	DEFECT
// iterator through all the files and process them.	WITHOUT_CLASSIFICATION	0.9999999097969248	WITHOUT_CLASSIFICATION	9.020307524386981E-8	DEFECT
// keys to optional attributes	WITHOUT_CLASSIFICATION	0.9999992893659263	WITHOUT_CLASSIFICATION	7.106340737110908E-7	DEFECT
// use the directory containing the target as the output directory	WITHOUT_CLASSIFICATION	0.9999999876350749	WITHOUT_CLASSIFICATION	1.236492518109975E-8	DEFECT
// null watchdog means no timeout, you'd better not check with null	WITHOUT_CLASSIFICATION	0.9999991444920393	WITHOUT_CLASSIFICATION	8.5550796064996E-7	DEFECT
/*         * pre Ant 1.6 this method used to call getClass().getResource         * while Ant 1.6 will call ClassLoader.getResource().         *         * The difference is that Class.getResource expects a leading         * slash for "absolute" resources and will strip it before         * delegating to ClassLoader.getResource - so we now have to         * emulate Class's behavior.         */	WITHOUT_CLASSIFICATION	0.9999999968597181	WITHOUT_CLASSIFICATION	3.140281983126226E-9	DEFECT
// this comment extract from JUnit Task may also apply here // "in VM is not very nice since it could probably hang the // whole build. IMHO this method should be avoided and it would be best // to remove it in future versions. TBD. (SBa)"	WITHOUT_CLASSIFICATION	0.730986638643528	DEFECT	0.269013361356472	WITHOUT_CLASSIFICATION
// not necessary as JDepend would fail, but why loose // some time?	WITHOUT_CLASSIFICATION	0.9999892414402778	WITHOUT_CLASSIFICATION	1.0758559722201784E-5	DEFECT
// not necessary as JDepend would fail, but why loose // some time?	WITHOUT_CLASSIFICATION	0.9999892414402778	WITHOUT_CLASSIFICATION	1.0758559722201784E-5	DEFECT
// not necessary as JDepend would fail, but why loose // some time?	WITHOUT_CLASSIFICATION	0.9999892414402778	WITHOUT_CLASSIFICATION	1.0758559722201784E-5	DEFECT
//do nothing	WITHOUT_CLASSIFICATION	0.9999717788494624	WITHOUT_CLASSIFICATION	2.8221150537485722E-5	DEFECT
//do nothing	WITHOUT_CLASSIFICATION	0.9999717788494624	WITHOUT_CLASSIFICATION	2.8221150537485722E-5	DEFECT
//If we get here, it could be because we are trying to put a //directory entry that already exists. //For example, we're trying to write "com", but a previous //entry from another mergefile was called "com". //In that case, just ignore the error and go on to the //next entry.	WITHOUT_CLASSIFICATION	0.9999999634047703	WITHOUT_CLASSIFICATION	3.659522979539934E-8	DEFECT
/*          First, some notes.          On MRJ 2.2.2, getting the size, compressed size, and CRC32 from the          ZipInputStream does not work for compressed (deflated) files.  Those calls return -1.          For uncompressed (stored) files, those calls do work.          However, using ZipFile.getEntries() works for both compressed and          uncompressed files.          Now, from some simple testing I did, it seems that the value of CRC-32 is          independent of the compression setting. So, it should be easy to pass this          information on to the output entry.        */	WITHOUT_CLASSIFICATION	0.9995759249141987	WITHOUT_CLASSIFICATION	4.240750858013865E-4	DEFECT
// Quick return - no output do nothing.	WITHOUT_CLASSIFICATION	0.9999985113910025	WITHOUT_CLASSIFICATION	1.4886089974693934E-6	DEFECT
// Self-describing as of JUnit 4 (#38811). But trim "(ClassName)".	WITHOUT_CLASSIFICATION	0.9999985895350337	WITHOUT_CLASSIFICATION	1.410464966255005E-6	DEFECT
//the trick to integrating test output to the formatter, is to //create a special test class that asserts an error //and tell the formatter that it raised.	WITHOUT_CLASSIFICATION	0.9999998826482484	WITHOUT_CLASSIFICATION	1.1735175165894829E-7	DEFECT
// ignored.	WITHOUT_CLASSIFICATION	0.9999985837451197	WITHOUT_CLASSIFICATION	1.4162548803224158E-6	DEFECT
/*         * pre Ant 1.6 this method used to call getClass().getResource         * while Ant 1.6 will call ClassLoader.getResource().         *         * The difference is that Class.getResource expects a leading         * slash for "absolute" resources and will strip it before         * delegating to ClassLoader.getResource - so we now have to         * emulate Class's behavior.         */	WITHOUT_CLASSIFICATION	0.9999999968597181	WITHOUT_CLASSIFICATION	3.140281983126226E-9	DEFECT
// okay we have a copy of the child, now the child becomes the parent // and we are iterating recursively over its children.	WITHOUT_CLASSIFICATION	0.9999877984133674	WITHOUT_CLASSIFICATION	1.2201586632748501E-5	DEFECT
// See wrapListener for reason:	WITHOUT_CLASSIFICATION	0.9999978295443664	WITHOUT_CLASSIFICATION	2.1704556335798416E-6	DEFECT
// if there is a suite method available, then try // to extract the suite from it. If there is an error // here it will be caught below and reported.	WITHOUT_CLASSIFICATION	0.9997640373579707	WITHOUT_CLASSIFICATION	2.359626420292122E-4	DEFECT
// JUnit 4 does not distinguish between errors and failures // even in the JUnit 3 adapter. // So we need to help it a bit to retain compatibility for JUnit 3 tests.	WITHOUT_CLASSIFICATION	0.9999977243783778	WITHOUT_CLASSIFICATION	2.2756216221801243E-6	DEFECT
// sorted by newest Kaffe version first	WITHOUT_CLASSIFICATION	0.9999777501191802	WITHOUT_CLASSIFICATION	2.2249880819813276E-5	DEFECT
//getProject().log("listing files in directory " + directory, Project.MSG_DEBUG);	WITHOUT_CLASSIFICATION	0.999995173402762	WITHOUT_CLASSIFICATION	4.826597238011957E-6	DEFECT
// to remove directories, start by the end of the list // the trunk does not let itself be removed before the leaves	WITHOUT_CLASSIFICATION	0.9998684450518508	WITHOUT_CLASSIFICATION	1.3155494814922307E-4	DEFECT
// ignore it	WITHOUT_CLASSIFICATION	0.9999969178702214	WITHOUT_CLASSIFICATION	3.082129778715207E-6	DEFECT
// NumberFormatException or ArrayOutOfBondsException could happen here	WITHOUT_CLASSIFICATION	0.9998099900858719	WITHOUT_CLASSIFICATION	1.9000991412807425E-4	DEFECT
//Throw exception on errors (except up-to-date) // //When a server is down, the code expects : //Perforce client error: //Connect to server failed; check $P4PORT. //TCP connect to localhost:1666 failed. //connect: localhost:1666: Connection refused //Some forms producing commands (p4 -s change -o) do tag the output //others don't..... //Others mark errors as info, for example edit a file //which is already open for edit..... //Just look for error: - catches most things....	WITHOUT_CLASSIFICATION	0.9999916295730078	WITHOUT_CLASSIFICATION	8.37042699212447E-6	DEFECT
// Because of the way I create the full target path, there // must be NO slash at the end of targetFolder and folderName // However, if the slash or backslash is the only character, leave it alone	WITHOUT_CLASSIFICATION	0.9999999078047465	WITHOUT_CLASSIFICATION	9.219525355456513E-8	DEFECT
// Connect to the StarTeam server, and log on.	WITHOUT_CLASSIFICATION	0.9999996826023883	WITHOUT_CLASSIFICATION	3.1739761175917105E-7	DEFECT
// Simplest constructor, uses default encryption algorithm and compression level.	WITHOUT_CLASSIFICATION	0.99999976812412	WITHOUT_CLASSIFICATION	2.318758801746561E-7	DEFECT
// Create a variable dir that contains the name of // the StarTeam folder that is the root folder in this view. // Get the default path to the current view.	WITHOUT_CLASSIFICATION	0.999999999492591	WITHOUT_CLASSIFICATION	5.074090004480999E-10	DEFECT
// We want to display the folder the same way you would // enter it on the command line ... so we remove the // View name (which is also the name of the root folder, // and therefore shows up at the start of the path).	WITHOUT_CLASSIFICATION	0.9997695811560605	WITHOUT_CLASSIFICATION	2.3041884393946416E-4	DEFECT
// If we displayed the project, view, item type, or folder, // then show the list of relevant item properties.	WITHOUT_CLASSIFICATION	0.9999999902605572	WITHOUT_CLASSIFICATION	9.739442883829927E-9	DEFECT
// If we find a "file" attribute then act on a file otherwise act on a project	WITHOUT_CLASSIFICATION	0.9999995638096836	WITHOUT_CLASSIFICATION	4.3619031637333144E-7	DEFECT
// Special setters for the sub-classes	WITHOUT_CLASSIFICATION	0.9999996542077774	WITHOUT_CLASSIFICATION	3.457922226866788E-7	DEFECT
// Special setters for the sub-classes	WITHOUT_CLASSIFICATION	0.9999996542077774	WITHOUT_CLASSIFICATION	3.457922226866788E-7	DEFECT
// Login info is required	WITHOUT_CLASSIFICATION	0.9998956533557057	WITHOUT_CLASSIFICATION	1.0434664429433793E-4	DEFECT
// Path to the SourceOffSite home directory /home/user/.sos	WITHOUT_CLASSIFICATION	0.9999999265274736	WITHOUT_CLASSIFICATION	7.347252634797714E-8	DEFECT
// Check if source is a directory	WITHOUT_CLASSIFICATION	0.9999996703267908	WITHOUT_CLASSIFICATION	3.2967320913491457E-7	DEFECT
/*             *  There is a bug in JavaSound 0.90 (jdk1.3beta).             *  It prevents correct termination of the VM.             *  So we have to exit ourselves.             */	WITHOUT_CLASSIFICATION	0.9973285576754309	WITHOUT_CLASSIFICATION	0.0026714423245690192	DEFECT
// Catch everything - some of the above return nulls, // throw exceptions or generally misbehave // in the event of a problem etc	WITHOUT_CLASSIFICATION	0.9999733919232067	WITHOUT_CLASSIFICATION	2.6608076793386842E-5	DEFECT
// only track progress for files larger than 100kb in verbose mode	WITHOUT_CLASSIFICATION	0.9999873519820455	WITHOUT_CLASSIFICATION	1.2648017954459564E-5	DEFECT
// only track progress for files larger than 100kb in verbose mode	WITHOUT_CLASSIFICATION	0.9999873519820455	WITHOUT_CLASSIFICATION	1.2648017954459564E-5	DEFECT
// since filesize keeps on decreasing we have to store the // initial filesize	WITHOUT_CLASSIFICATION	0.9999999332746807	WITHOUT_CLASSIFICATION	6.672531924992208E-8	DEFECT
// note, it's important to scan the items BEFORE we make the // UnmatchedFileMap because that creates a bunch of NEW // folders and files (unattached to repository) and we // don't want to include those in our traversal.	WITHOUT_CLASSIFICATION	0.9999979785653231	WITHOUT_CLASSIFICATION	2.02143467692178E-6	DEFECT
// If the file doesn't pass the include/exclude tests, skip it.	WITHOUT_CLASSIFICATION	0.9999999539675392	WITHOUT_CLASSIFICATION	4.603246083082624E-8	DEFECT
// If the file doesn't pass the include/exclude tests, skip it.	WITHOUT_CLASSIFICATION	0.9999999539675392	WITHOUT_CLASSIFICATION	4.603246083082624E-8	DEFECT
// We try to update the status once to give StarTeam // another chance.	WITHOUT_CLASSIFICATION	0.999999606723379	WITHOUT_CLASSIFICATION	3.932766210806783E-7	DEFECT
// note, it's important to scan the items BEFORE we make the // Unmatched file map because that creates a bunch of NEW // folders and files (unattached to repository) and we // don't want to include those in our traversal.	WITHOUT_CLASSIFICATION	0.999998280145528	WITHOUT_CLASSIFICATION	1.71985447195234E-6	DEFECT
// once we find a folder that isn't in the repository, // anything below it can be deleted.	WITHOUT_CLASSIFICATION	0.9999995877760481	WITHOUT_CLASSIFICATION	4.1222395184731094E-7	DEFECT
/////////////////////////////////////////////////////////////// // default values for attributes. ///////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999998983977976	WITHOUT_CLASSIFICATION	1.0160220242398176E-7	DEFECT
// default behavior is to fail on an error // default behavior is to not overwrite // default behavior is make a single link	WITHOUT_CLASSIFICATION	0.9995072465344235	WITHOUT_CLASSIFICATION	4.927534655764324E-4	DEFECT
// build the command line from what we got the format is // ss Add VSS items [-B] [-C] [-D-] [-H] [-I-] [-K] [-N] [-O] [-R] [-W] [-Y] [-?] // as specified in the SS.EXE help	WITHOUT_CLASSIFICATION	0.999998704370913	WITHOUT_CLASSIFICATION	1.2956290869797962E-6	DEFECT
// build the command line from what we got the format is // ss Checkout VSS items [-G] [-C] [-H] [-I-] [-N] [-O] [-R] [-V] [-Y] [-?] // as specified in the SS.EXE help	WITHOUT_CLASSIFICATION	0.9999995635349977	WITHOUT_CLASSIFICATION	4.364650022603976E-7	DEFECT
// Not a .class file or the one we'd generate	WITHOUT_CLASSIFICATION	0.9999999909123866	WITHOUT_CLASSIFICATION	9.08761349568739E-9	DEFECT
// We have the loader which is being used to load the // CatalogResolver. Can it see the ApacheResolver? The // base resolver will only be able to create the ApacheResolver // if it can see it - doesn't use the context loader.	WITHOUT_CLASSIFICATION	0.9999844798364116	WITHOUT_CLASSIFICATION	1.552016358833712E-5	DEFECT
// // Use the passed in base in preference to the base // from matchingEntry, which is either null or the // directory in which the external catalog file from // which it was obtained is located.  We make a copy // so matchingEntry's original base is untouched. // // This is the standard behavior as per my reading of // the JAXP and XML Catalog specs.  CKS 11/7/2002 //	WITHOUT_CLASSIFICATION	0.9999857306575022	WITHOUT_CLASSIFICATION	1.4269342497714495E-5	DEFECT
// // Get Method instances for each of the methods we need to // call on the resolverImpl using reflection.  We can't // call them directly, because they require on the // xml-commons resolver library which may not be available // in the classpath. //	WITHOUT_CLASSIFICATION	0.9997079731980422	WITHOUT_CLASSIFICATION	2.92026801957732E-4	DEFECT
// // We didn't match a ResourceLocation, but since we // only support PUBLIC and URI entry types internally, // it is still possible that there is another entry in // an external catalog that will match.  We call // Apache resolver's resolveEntity method to cover // this possibility. //	WITHOUT_CLASSIFICATION	0.9997719914737139	WITHOUT_CLASSIFICATION	2.280085262861579E-4	DEFECT
// record data about the last scanned resource	WITHOUT_CLASSIFICATION	0.999999683128148	WITHOUT_CLASSIFICATION	3.1687185205547796E-7	DEFECT
// path containing one or more elements	WITHOUT_CLASSIFICATION	0.9999999446935864	WITHOUT_CLASSIFICATION	5.530641367899868E-8	DEFECT
// just append beginToken and search further	WITHOUT_CLASSIFICATION	0.9999987556474661	WITHOUT_CLASSIFICATION	1.244352533952137E-6	DEFECT
//create the command to run Java, including user specified options	WITHOUT_CLASSIFICATION	0.9999997550122491	WITHOUT_CLASSIFICATION	2.449877508337599E-7	DEFECT
// JDK usage command line says that -jar must be the first option, as there is // a bug in JDK < 1.4 that forces the jvm type to be specified as the first // option, it is appended here as specified in the docs even though there is // in fact no order.	WITHOUT_CLASSIFICATION	0.9999999667169617	WITHOUT_CLASSIFICATION	3.328303837645765E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999995133297559	WITHOUT_CLASSIFICATION	4.86670244023277E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999995133297559	WITHOUT_CLASSIFICATION	4.86670244023277E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999995133297559	WITHOUT_CLASSIFICATION	4.86670244023277E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999995133297559	WITHOUT_CLASSIFICATION	4.86670244023277E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999995133297559	WITHOUT_CLASSIFICATION	4.86670244023277E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999995133297559	WITHOUT_CLASSIFICATION	4.86670244023277E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999995133297559	WITHOUT_CLASSIFICATION	4.86670244023277E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999995133297559	WITHOUT_CLASSIFICATION	4.86670244023277E-7	DEFECT
/* now check each Resource in case the child only           lets through files from any children IT may have: */	WITHOUT_CLASSIFICATION	0.9968936838383304	WITHOUT_CLASSIFICATION	0.003106316161669655	DEFECT
// Quick return: directories cannot be signed	WITHOUT_CLASSIFICATION	0.999017555512287	WITHOUT_CLASSIFICATION	9.824444877129868E-4	DEFECT
/**     * When using this as a custom selector, this method will be called.     * It translates each parameter into the appropriate setXXX() call.     *     * @param parameters the complete set of parameters for this selector     */	WITHOUT_CLASSIFICATION	0.9999970008396635	WITHOUT_CLASSIFICATION	2.999160336469127E-6	DEFECT
/**     * When using this as a custom selector, this method will be called.     * It translates each parameter into the appropriate setXXX() call.     *     * @param parameters the complete set of parameters for this selector     */	WITHOUT_CLASSIFICATION	0.9999970008396635	WITHOUT_CLASSIFICATION	2.999160336469127E-6	DEFECT
/**     * When using this as a custom selector, this method will be called.     * It translates each parameter into the appropriate setXXX() call.     *     * @param parameters the complete set of parameters for this selector     */	WITHOUT_CLASSIFICATION	0.9999970008396635	WITHOUT_CLASSIFICATION	2.999160336469127E-6	DEFECT
/**     * When using this as a custom selector, this method will be called.     * It translates each parameter into the appropriate setXXX() call.     *     * @param parameters the complete set of parameters for this selector     */	WITHOUT_CLASSIFICATION	0.9999970008396635	WITHOUT_CLASSIFICATION	2.999160336469127E-6	DEFECT
/**     * When using this as a custom selector, this method will be called.     * It translates each parameter into the appropriate setXXX() call.     *     * @param parameters the complete set of parameters for this selector     */	WITHOUT_CLASSIFICATION	0.9999970008396635	WITHOUT_CLASSIFICATION	2.999160336469127E-6	DEFECT
/**     * When using this as a custom selector, this method will be called.     * It translates each parameter into the appropriate setXXX() call.     *     * @param parameters the complete set of parameters for this selector.     */	WITHOUT_CLASSIFICATION	0.9999983349580724	WITHOUT_CLASSIFICATION	1.6650419275425937E-6	DEFECT
// // -----  Set default values  ----- //	WITHOUT_CLASSIFICATION	0.9999998631459899	WITHOUT_CLASSIFICATION	1.368540102054987E-7	DEFECT
// nothing specified - use default	WITHOUT_CLASSIFICATION	0.9999999254068345	WITHOUT_CLASSIFICATION	7.45931655343082E-8	DEFECT
// How to handle non-file-Resources? I copy temporarily the // resource to a file and use the file-implementation.	WITHOUT_CLASSIFICATION	0.9999999611354174	WITHOUT_CLASSIFICATION	3.88645824400294E-8	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9999956845907362	WITHOUT_CLASSIFICATION	4.315409263804671E-6	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9999956845907362	WITHOUT_CLASSIFICATION	4.315409263804671E-6	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9999956845907362	WITHOUT_CLASSIFICATION	4.315409263804671E-6	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9999956845907362	WITHOUT_CLASSIFICATION	4.315409263804671E-6	DEFECT
//find the out-of-date targets:	WITHOUT_CLASSIFICATION	0.9999991914489962	WITHOUT_CLASSIFICATION	8.085510037309039E-7	DEFECT
// write namespace declarations	WITHOUT_CLASSIFICATION	0.9999999566349416	WITHOUT_CLASSIFICATION	4.336505843027355E-8	DEFECT
// Extrapolating from: // "NetWare may have a "java" in that directory, but 99% of // the time, you don't want to execute it" -- Jeff Tulley // <JTULLEY@novell.com>	WITHOUT_CLASSIFICATION	0.9994926956113999	WITHOUT_CLASSIFICATION	5.073043886000782E-4	DEFECT
// fall through	WITHOUT_CLASSIFICATION	0.9999767921544644	WITHOUT_CLASSIFICATION	2.3207845535531548E-5	DEFECT
// fall through	WITHOUT_CLASSIFICATION	0.9999767921544644	WITHOUT_CLASSIFICATION	2.3207845535531548E-5	DEFECT
// Check for bsf first then javax // This version does not check if the scriptManager // supports the language.	WITHOUT_CLASSIFICATION	0.9992858291841097	WITHOUT_CLASSIFICATION	7.141708158903199E-4	DEFECT
// NotReached	WITHOUT_CLASSIFICATION	0.9999977736420769	WITHOUT_CLASSIFICATION	2.2263579231633307E-6	DEFECT
// NotReached	WITHOUT_CLASSIFICATION	0.9999977736420769	WITHOUT_CLASSIFICATION	2.2263579231633307E-6	DEFECT
//no need to synchronize, as Vector is always synchronized	WITHOUT_CLASSIFICATION	0.9998461892579799	WITHOUT_CLASSIFICATION	1.5381074202010407E-4	DEFECT
// Eliminate consecutive slashes after the drive spec:	WITHOUT_CLASSIFICATION	0.9999990949547889	WITHOUT_CLASSIFICATION	9.050452111229643E-7	DEFECT
//if it does not, then the file is not up to date.	WITHOUT_CLASSIFICATION	0.9996162898552357	WITHOUT_CLASSIFICATION	3.837101447643175E-4	DEFECT
// record destdir for later use in getResource	WITHOUT_CLASSIFICATION	0.9999991502477232	WITHOUT_CLASSIFICATION	8.497522768381507E-7	DEFECT
// Check to see if it's an inner class 'com.company.Class$Inner'	WITHOUT_CLASSIFICATION	0.9999992909339684	WITHOUT_CLASSIFICATION	7.090660316331071E-7	DEFECT
// treat non-matching groups as empty matches	WITHOUT_CLASSIFICATION	0.9999991457202713	WITHOUT_CLASSIFICATION	8.542797287273334E-7	DEFECT
// treat non-matching groups as empty matches	WITHOUT_CLASSIFICATION	0.9999991457202713	WITHOUT_CLASSIFICATION	8.542797287273334E-7	DEFECT
/*          A 6-byte block header, the value chosen arbitrarily          as 0x314159265359 :-).  A 32 bit value does not really          give a strong enough guarantee that the value will not          appear by chance in the compressed datastream.  Worst-case          probability of this event, for a 900k block, is about          2.0e-3 for 32 bits, 1.0e-5 for 40 bits and 4.0e-8 for 48 bits.          For a compressed file of size 100Gb -- about 100000 blocks --          only a 48-bit marker will do.  NB: normal compression/          decompression do *not* rely on these statistical properties.          They are only important when trying to recover blocks from          damaged files.        */	WITHOUT_CLASSIFICATION	0.5075278316816466	WITHOUT_CLASSIFICATION	0.49247216831835344	DEFECT
// write 8-bit	WITHOUT_CLASSIFICATION	0.9999953306537704	WITHOUT_CLASSIFICATION	4.669346229655416E-6	DEFECT
// bsBuffShadow |= 0 << (32 - bsLiveShadow - 1);	WITHOUT_CLASSIFICATION	0.9999978156997816	WITHOUT_CLASSIFICATION	2.1843002183159036E-6	DEFECT
// // inlined: bsW(len_selCtr[sfmap_i] & 0xff, //              code_selCtr[sfmap_i]); //	WITHOUT_CLASSIFICATION	0.9999997234929373	WITHOUT_CLASSIFICATION	2.765070627536962E-7	DEFECT
// Following block contains unrolled code which could be shortened by // coding it in additional loops.	WITHOUT_CLASSIFICATION	0.9999787878914552	WITHOUT_CLASSIFICATION	2.121210854480709E-5	DEFECT
/*                  Complete the big bucket [ss] by quicksorting                  any unsorted small buckets [ss, j].  Hopefully                  previous pointer-scanning phases have already                  completed many of the small buckets [ss, j], so                  we don't have to sort them at all.            */	WITHOUT_CLASSIFICATION	0.999994196401611	WITHOUT_CLASSIFICATION	5.803598388985169E-6	DEFECT
// Step 2: // Now scan this big bucket so as to synthesise the // sorted order for small buckets [t, ss] for all t != ss.	WITHOUT_CLASSIFICATION	0.9999968653410353	WITHOUT_CLASSIFICATION	3.134658964643978E-6	DEFECT
//  900021 byte // 3600000 byte // 3600000 byte // ------------ // 8433529 byte // ============	WITHOUT_CLASSIFICATION	0.9999944920030934	WITHOUT_CLASSIFICATION	5.507996906687704E-6	DEFECT
// The clean way would be to throw an exception. //throw new IOException("crc error");	WITHOUT_CLASSIFICATION	0.9958645030640666	WITHOUT_CLASSIFICATION	0.004135496935933354	DEFECT
// make next blocks readable without error // (repair feature, not yet documented, not tested)	WITHOUT_CLASSIFICATION	0.9999161680797731	WITHOUT_CLASSIFICATION	8.383192022693147E-5	DEFECT
/*          Setting up the unzftab entries here is not strictly          necessary, but it does save having to do it later          in a separate pass, and so saves a block's worth of          cache misses.        */	WITHOUT_CLASSIFICATION	0.9964107749525557	WITHOUT_CLASSIFICATION	0.0035892250474441906	DEFECT
// tt.length should always be >= length, but theoretically // it can happen, if the compressor mixed small and large // blocks.  Normally only the last block will be smaller // than others.	WITHOUT_CLASSIFICATION	0.997730304293531	WITHOUT_CLASSIFICATION	0.0022696957064689506	DEFECT
// deprecated, but email is byte-oriented	WITHOUT_CLASSIFICATION	0.9999991941555004	WITHOUT_CLASSIFICATION	8.058444995695851E-7	DEFECT
// // NOTE // We have fit EOF, and the block is not full! // // This is a broken archive. It does not follow the standard // blocking algorithm. However, because we are generous, and // it requires little effort, we will simply ignore the error // and continue as if the entire block were read. This does // not appear to break anything upstream. We used to return // false in this case. // // Thanks to 'Yohann.Roussel@alcatel.fr' for this fix. //	WITHOUT_CLASSIFICATION	0.5104110389681629	WITHOUT_CLASSIFICATION	0.4895889610318372	DEFECT
// version needed to extract // general purpose bit flag	WITHOUT_CLASSIFICATION	0.9999569276523836	WITHOUT_CLASSIFICATION	4.307234761624895E-5	DEFECT
// requires version 2 as we are going to store length info // in the data descriptor	WITHOUT_CLASSIFICATION	0.9911759775614837	WITHOUT_CLASSIFICATION	0.008824022438516304	DEFECT
// file comment	WITHOUT_CLASSIFICATION	0.999999434310758	WITHOUT_CLASSIFICATION	5.656892420137973E-7	DEFECT
// swallow, throw the original exception instead	WITHOUT_CLASSIFICATION	0.9999335837173073	WITHOUT_CLASSIFICATION	6.641628269268E-5	DEFECT
/* compressed size                 */	WITHOUT_CLASSIFICATION	0.9999990446668469	WITHOUT_CLASSIFICATION	9.553331531605276E-7	DEFECT
/* disk number start               */	WITHOUT_CLASSIFICATION	0.999993576242181	WITHOUT_CLASSIFICATION	6.423757818967174E-6	DEFECT
/* total number of entries in      */	WITHOUT_CLASSIFICATION	0.9999093795640402	WITHOUT_CLASSIFICATION	9.062043595972724E-5	DEFECT
/* total number of entries in      */	WITHOUT_CLASSIFICATION	0.9999093795640402	WITHOUT_CLASSIFICATION	9.062043595972724E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999219071116258	WITHOUT_CLASSIFICATION	7.809288837423782E-5	DEFECT
// This is turned off temporarily. There appears to be a bug // in SelectorUtils.matchPattern() where it is recursive on // Windows even if no ** is in pattern. //assertEquals("FFFTFFFFFFFF", results); // Unix // vs //assertEquals("FFFTFFFFTFFF", results); // Windows	DEFECT	0.9808221055904389	WITHOUT_CLASSIFICATION	0.019177894409561063	DEFECT
// check first that it is not already loaded otherwise // consecutive runs seems to end into an OutOfMemoryError // or it fails when there is a native library to load // several times. // this is far from being perfect but should work // in most cases.	DEFECT	0.575453656351498	DEFECT	0.424546343648502	WITHOUT_CLASSIFICATION
// FIXME formatters are not thread-safe	DEFECT	0.9360504985840428	WITHOUT_CLASSIFICATION	0.06394950141595723	DEFECT
// the generated classes must not be added in the generic JAR! // is that buggy on old JOnAS (2.4) ??	DEFECT	0.9999970084494104	WITHOUT_CLASSIFICATION	2.9915505896662584E-6	DEFECT
// I hate to admit it, but we don't know what happened // here.  Throw the Exception.	DEFECT	0.999913356078086	WITHOUT_CLASSIFICATION	8.664392191401047E-5	DEFECT
// FIXME: Is "No Namespace is Empty Namespace" really OK?	DEFECT	0.7267572029804479	WITHOUT_CLASSIFICATION	0.273242797019552	DEFECT
// pattern now holds ** while string is not exhausted // this will generate false positives but we can live with that.	DEFECT	0.9999907544811438	WITHOUT_CLASSIFICATION	9.245518856101239E-6	DEFECT
// todo: is this comment still relevant ?? // FIXME: need to use a SAXSource as the source for the transform // so we can plug in our own entity resolver	DEFECT	0.9983407064610786	WITHOUT_CLASSIFICATION	0.0016592935389213726	DEFECT
// Just a note: StarTeam has a status for NEW which implies // that there is an item  on your local machine that is not // in the repository.  These are the items that show up as // NOT IN VIEW in the Starteam GUI. // One would think that we would want to perhaps checkin the // NEW items (not in all cases! - Steve Cohen 15 Dec 2001) // Unfortunately, the sdk doesn't really work, and we can't // actually see  anything with a status of NEW. That is why // we can just check out  everything here without worrying // about losing anything.	DEFECT	0.806049475674838	WITHOUT_CLASSIFICATION	0.19395052432516202	DEFECT
// XXX: (Jon Skeet) The comment "if it hasn't been done already" may // not be strictly true. wrapper.maybeConfigure() won't configure the same // attributes/text more than once, but it may well add the children again, // unless I've missed something.	DEFECT	0.9999616913611208	WITHOUT_CLASSIFICATION	3.8308638879255834E-5	DEFECT
// TODO: // A warning line, that shows code, which contains a variable // error will cause some trouble. The parser should definitely // be much better.	DEFECT	0.9944045128393513	WITHOUT_CLASSIFICATION	0.005595487160648726	DEFECT
// todo: is this comment still relevant ?? // FIXME: need to use a SAXSource as the source for the transform // so we can plug in our own entity resolver	DEFECT	0.9983407064610786	WITHOUT_CLASSIFICATION	0.0016592935389213726	DEFECT
// FIXME this is actually not very cpu cycles friendly as we are converting from // dos to java while the underlying Sun implementation will convert // from java to dos time for internal storage...	DEFECT	0.6264913796031459	DEFECT	0.3735086203968541	WITHOUT_CLASSIFICATION
