/* BuildListener stuff */	WITHOUT_CLASSIFICATION	0.9999927387587291	WITHOUT_CLASSIFICATION	7.2612412709238716E-6	DEFECT
// we don't expect to find this	WITHOUT_CLASSIFICATION	0.999859211302798	WITHOUT_CLASSIFICATION	1.407886972020075E-4	DEFECT
// ignore expected	WITHOUT_CLASSIFICATION	0.9999904211864811	WITHOUT_CLASSIFICATION	9.578813518922127E-6	DEFECT
// ignore expected	WITHOUT_CLASSIFICATION	0.9999904211864811	WITHOUT_CLASSIFICATION	9.578813518922127E-6	DEFECT
// tell the build it is finished	WITHOUT_CLASSIFICATION	0.9999848525598177	WITHOUT_CLASSIFICATION	1.514744018238882E-5	DEFECT
//end class	WITHOUT_CLASSIFICATION	0.9999407036128187	WITHOUT_CLASSIFICATION	5.92963871812878E-5	DEFECT
// keep track of what operating systems are supported here.	WITHOUT_CLASSIFICATION	0.9997189879221924	WITHOUT_CLASSIFICATION	2.810120778076445E-4	DEFECT
// father and child pattern test	WITHOUT_CLASSIFICATION	0.9999920667520751	WITHOUT_CLASSIFICATION	7.933247924972624E-6	DEFECT
// redo the test, but the 2 include patterns are inverted	WITHOUT_CLASSIFICATION	0.9999988125165228	WITHOUT_CLASSIFICATION	1.1874834772481944E-6	DEFECT
// add conditions and more commands as soon as the need arises	WITHOUT_CLASSIFICATION	0.9999974946706107	WITHOUT_CLASSIFICATION	2.505329389221175E-6	DEFECT
// give ourselves some time for the system call // to execute... tweak if you have a really over // loaded system.	WITHOUT_CLASSIFICATION	0.9997741298472844	WITHOUT_CLASSIFICATION	2.2587015271562512E-4	DEFECT
// followLinks should be true by default, but if this ever // changes we will need this line.	WITHOUT_CLASSIFICATION	0.999978915729901	WITHOUT_CLASSIFICATION	2.1084270098983357E-5	DEFECT
//testing drive letter search from root:	WITHOUT_CLASSIFICATION	0.9999663920250552	WITHOUT_CLASSIFICATION	3.360797494481512E-5	DEFECT
//if this is our context we assume there must be something here:	WITHOUT_CLASSIFICATION	0.9998321973104496	WITHOUT_CLASSIFICATION	1.6780268955043576E-4	DEFECT
// This path should contain the class files for these testcases:	WITHOUT_CLASSIFICATION	0.9985303355594439	WITHOUT_CLASSIFICATION	0.001469664440555991	DEFECT
// A special parent loader which is not the system class loader:	WITHOUT_CLASSIFICATION	0.9992736346443699	WITHOUT_CLASSIFICATION	7.263653556299811E-4	DEFECT
// A special parent loader which is not the system class loader:	WITHOUT_CLASSIFICATION	0.9992736346443699	WITHOUT_CLASSIFICATION	7.263653556299811E-4	DEFECT
// An AntClassLoader which is supposed to delegate to // the parent and then to the disk path:	WITHOUT_CLASSIFICATION	0.9999762998052143	WITHOUT_CLASSIFICATION	2.3700194785735423E-5	DEFECT
// The intended result URLs:	WITHOUT_CLASSIFICATION	0.9999746604644082	WITHOUT_CLASSIFICATION	2.533953559187491E-5	DEFECT
// JDK 1.4: return Collections.list(e);	WITHOUT_CLASSIFICATION	0.9999924035399742	WITHOUT_CLASSIFICATION	7.596460025722111E-6	DEFECT
// override allowed on <available>	WITHOUT_CLASSIFICATION	0.9998990101155402	WITHOUT_CLASSIFICATION	1.0098988445980225E-4	DEFECT
// ensure <tstamp>'s new prefix attribute is working	WITHOUT_CLASSIFICATION	0.9999837600622845	WITHOUT_CLASSIFICATION	1.623993771543247E-5	DEFECT
// ensure <tstamp> follows the immutability rule	WITHOUT_CLASSIFICATION	0.9999628074376403	WITHOUT_CLASSIFICATION	3.719256235967753E-5	DEFECT
// ensure <condition> follows the immutability rule	WITHOUT_CLASSIFICATION	0.9999345485271146	WITHOUT_CLASSIFICATION	6.545147288542168E-5	DEFECT
// ensure <checksum> follows the immutability rule	WITHOUT_CLASSIFICATION	0.9999466299336843	WITHOUT_CLASSIFICATION	5.337006631576937E-5	DEFECT
// ensure <exec> follows the immutability rule	WITHOUT_CLASSIFICATION	0.9999547722700742	WITHOUT_CLASSIFICATION	4.522772992570544E-5	DEFECT
// ensure <pathconvert> follows the immutability rule	WITHOUT_CLASSIFICATION	0.9999482951474247	WITHOUT_CLASSIFICATION	5.170485257531749E-5	DEFECT
/*             * throw in drive letters             */	WITHOUT_CLASSIFICATION	0.9999597628793504	WITHOUT_CLASSIFICATION	4.023712064953107E-5	DEFECT
/*             * promised to eliminate consecutive slashes after drive letter.             */	WITHOUT_CLASSIFICATION	0.9999974489081253	WITHOUT_CLASSIFICATION	2.551091874885291E-6	DEFECT
/*             * Start with simple absolute file names.             */	WITHOUT_CLASSIFICATION	0.9999995856656058	WITHOUT_CLASSIFICATION	4.143343941997495E-7	DEFECT
/*             * drive letters are not used, just to be considered as normal             * part of a name             */	WITHOUT_CLASSIFICATION	0.9999997775227386	WITHOUT_CLASSIFICATION	2.224772614709534E-7	DEFECT
/*         * Now test some relative file name magic.         */	WITHOUT_CLASSIFICATION	0.9999993674810167	WITHOUT_CLASSIFICATION	6.325189833171937E-7	DEFECT
// fail, because buildfile contains two targets with the same name	WITHOUT_CLASSIFICATION	0.9999904745988665	WITHOUT_CLASSIFICATION	9.52540113351298E-6	DEFECT
// overriding target from imported buildfile is allowed	WITHOUT_CLASSIFICATION	0.9999960397912667	WITHOUT_CLASSIFICATION	3.9602087332719315E-6	DEFECT
// the buildfile to use	WITHOUT_CLASSIFICATION	0.9999695429648708	WITHOUT_CLASSIFICATION	3.0457035129164483E-5	DEFECT
// call a target	WITHOUT_CLASSIFICATION	0.9999966409805252	WITHOUT_CLASSIFICATION	3.359019474748051E-6	DEFECT
//class-BFT	WITHOUT_CLASSIFICATION	0.9996689878276196	WITHOUT_CLASSIFICATION	3.3101217238036464E-4	DEFECT
// override allowed on <available>	WITHOUT_CLASSIFICATION	0.9998990101155402	WITHOUT_CLASSIFICATION	1.0098988445980225E-4	DEFECT
// ignore event	WITHOUT_CLASSIFICATION	0.9999866756884673	WITHOUT_CLASSIFICATION	1.3324311532690824E-5	DEFECT
// Check it's a read-only map.	WITHOUT_CLASSIFICATION	0.9999869799568449	WITHOUT_CLASSIFICATION	1.3020043155161054E-5	DEFECT
// Check it's a read-only map.	WITHOUT_CLASSIFICATION	0.9999869799568449	WITHOUT_CLASSIFICATION	1.3020043155161054E-5	DEFECT
/*         * JUnit 3.7 adds a getName method to TestCase - so we now         * have a name attribute in IntrospectionHelperTest if we run         * under JUnit 3.7 but not in earlier versions.         *         * Simply add it here and remove it after the tests.         */	WITHOUT_CLASSIFICATION	0.9999788002497556	WITHOUT_CLASSIFICATION	2.119975024437613E-5	DEFECT
// addConfigured(Hashtable) should come before addConfigured(Map)	WITHOUT_CLASSIFICATION	0.9999851294742923	WITHOUT_CLASSIFICATION	1.4870525707585714E-5	DEFECT
// INVALID extension point	WITHOUT_CLASSIFICATION	0.9999790333832527	WITHOUT_CLASSIFICATION	2.0966616747292413E-5	DEFECT
// INVALID extension point	WITHOUT_CLASSIFICATION	0.9999790333832527	WITHOUT_CLASSIFICATION	2.0966616747292413E-5	DEFECT
// Valid extension point	WITHOUT_CLASSIFICATION	0.9999879766520947	WITHOUT_CLASSIFICATION	1.2023347905264639E-5	DEFECT
// Valid extension point, more derived than Map above, but *after* it!	WITHOUT_CLASSIFICATION	0.9999987215314189	WITHOUT_CLASSIFICATION	1.2784685810470529E-6	DEFECT
// IntrospectionHelperTest	WITHOUT_CLASSIFICATION	0.9999717054243846	WITHOUT_CLASSIFICATION	2.8294575615487824E-5	DEFECT
// make sure we do not get a NPE	WITHOUT_CLASSIFICATION	0.9999254343525148	WITHOUT_CLASSIFICATION	7.456564748521157E-5	DEFECT
// use an anonymous subclass since ProjectComponent is abstract	WITHOUT_CLASSIFICATION	0.9999997714795996	WITHOUT_CLASSIFICATION	2.2852040042908464E-7	DEFECT
// ------------------------------------------------------ //   Helper methods // -----------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999782828242582	WITHOUT_CLASSIFICATION	2.1717175741780495E-5	DEFECT
/* I wrote the testcases in one java file because I want also to test the * combined behaviour (see end of the class).*/	WITHOUT_CLASSIFICATION	0.9997624694300549	WITHOUT_CLASSIFICATION	2.375305699450149E-4	DEFECT
// check defaults	WITHOUT_CLASSIFICATION	0.9999955072714143	WITHOUT_CLASSIFICATION	4.492728585815516E-6	DEFECT
// check defaults	WITHOUT_CLASSIFICATION	0.9999955072714143	WITHOUT_CLASSIFICATION	4.492728585815516E-6	DEFECT
// check build.compiler provides defaults	WITHOUT_CLASSIFICATION	0.9999968083005655	WITHOUT_CLASSIFICATION	3.1916994346110827E-6	DEFECT
// setUserProperty to override system properties	WITHOUT_CLASSIFICATION	0.9999243789671584	WITHOUT_CLASSIFICATION	7.562103284161948E-5	DEFECT
// check attribute overrides build.compiler	WITHOUT_CLASSIFICATION	0.9999983569694502	WITHOUT_CLASSIFICATION	1.6430305498659749E-6	DEFECT
// check attribute overrides build.compiler	WITHOUT_CLASSIFICATION	0.9999983569694502	WITHOUT_CLASSIFICATION	1.6430305498659749E-6	DEFECT
// some database keys, see #getProperties(int)	WITHOUT_CLASSIFICATION	0.9999887279322702	WITHOUT_CLASSIFICATION	1.127206772987089E-5	DEFECT
// keys used in properties.	WITHOUT_CLASSIFICATION	0.9999141910356757	WITHOUT_CLASSIFICATION	8.58089643242467E-5	DEFECT
//neither	WITHOUT_CLASSIFICATION	0.9996747972806486	WITHOUT_CLASSIFICATION	3.25202719351443E-4	DEFECT
/*     * PR 11100     */	WITHOUT_CLASSIFICATION	0.9999590988007765	WITHOUT_CLASSIFICATION	4.090119922340411E-5	DEFECT
// simple test to ensure that the caching does work...	WITHOUT_CLASSIFICATION	0.9999848603912113	WITHOUT_CLASSIFICATION	1.5139608788688701E-5	DEFECT
// 2nd run..	WITHOUT_CLASSIFICATION	0.9997933066713277	WITHOUT_CLASSIFICATION	2.0669332867219857E-4	DEFECT
// the driver must still be cached.	WITHOUT_CLASSIFICATION	0.9999986688310313	WITHOUT_CLASSIFICATION	1.3311689687010103E-6	DEFECT
// look for the driver path...	WITHOUT_CLASSIFICATION	0.9999795485400916	WITHOUT_CLASSIFICATION	2.0451459908262242E-5	DEFECT
//file time checks for java1.2+	WITHOUT_CLASSIFICATION	0.9999856070833635	WITHOUT_CLASSIFICATION	1.4392916636511122E-5	DEFECT
//only test on java1.5+	WITHOUT_CLASSIFICATION	0.9999084312214388	WITHOUT_CLASSIFICATION	9.156877856116065E-5	DEFECT
// AntLikeTasksAtTopLevelTest	WITHOUT_CLASSIFICATION	0.9999955894244432	WITHOUT_CLASSIFICATION	4.41057555680115E-6	DEFECT
//file length checks rely on touch generating a zero byte file	WITHOUT_CLASSIFICATION	0.9995002472817566	WITHOUT_CLASSIFICATION	4.997527182434252E-4	DEFECT
// no-op: not a real business error	WITHOUT_CLASSIFICATION	0.9998411601997633	WITHOUT_CLASSIFICATION	1.5883980023668996E-4	DEFECT
//dont look for much text here as it is vendor and version dependent	WITHOUT_CLASSIFICATION	0.9999630688116588	WITHOUT_CLASSIFICATION	3.6931188341235E-5	DEFECT
// end of try-catch	WITHOUT_CLASSIFICATION	0.9999872011606075	WITHOUT_CLASSIFICATION	1.27988393926421E-5	DEFECT
// end of try-catch	WITHOUT_CLASSIFICATION	0.9999872011606075	WITHOUT_CLASSIFICATION	1.27988393926421E-5	DEFECT
/*     * PR 11100     */	WITHOUT_CLASSIFICATION	0.9999590988007765	WITHOUT_CLASSIFICATION	4.090119922340411E-5	DEFECT
/*     * PR 38973     */	WITHOUT_CLASSIFICATION	0.999964956895553	WITHOUT_CLASSIFICATION	3.504310444708631E-5	DEFECT
/*     * PR 11100     */	WITHOUT_CLASSIFICATION	0.9999590988007765	WITHOUT_CLASSIFICATION	4.090119922340411E-5	DEFECT
/*     * PR 16213     */	WITHOUT_CLASSIFICATION	0.9999804000347151	WITHOUT_CLASSIFICATION	1.959996528487772E-5	DEFECT
/*     * PR 38973     */	WITHOUT_CLASSIFICATION	0.999964956895553	WITHOUT_CLASSIFICATION	3.504310444708631E-5	DEFECT
/*     * PR 21996     */	WITHOUT_CLASSIFICATION	0.999976282589739	WITHOUT_CLASSIFICATION	2.3717410260978686E-5	DEFECT
/*     * PR 10504     */	WITHOUT_CLASSIFICATION	0.9999761301446093	WITHOUT_CLASSIFICATION	2.3869855390675336E-5	DEFECT
/*     * PR 20969     */	WITHOUT_CLASSIFICATION	0.9999810394797845	WITHOUT_CLASSIFICATION	1.8960520215534527E-5	DEFECT
// can't access the booleans in MyPrinter here (even if they // were static) since the MyPrinter instance that was used in // the test has likely been loaded via a different classloader // than this class.  Therefore we make the printer assert its // state and only check for the tail invocation.	WITHOUT_CLASSIFICATION	0.9999742266701599	WITHOUT_CLASSIFICATION	2.5773329840178545E-5	DEFECT
// should get no output at all	WITHOUT_CLASSIFICATION	0.9998596944034603	WITHOUT_CLASSIFICATION	1.4030559653977113E-4	DEFECT
// should get no output at all	WITHOUT_CLASSIFICATION	0.9998596944034603	WITHOUT_CLASSIFICATION	1.4030559653977113E-4	DEFECT
// should get no output at all	WITHOUT_CLASSIFICATION	0.9998596944034603	WITHOUT_CLASSIFICATION	1.4030559653977113E-4	DEFECT
// should get no output at all	WITHOUT_CLASSIFICATION	0.9998596944034603	WITHOUT_CLASSIFICATION	1.4030559653977113E-4	DEFECT
//this call should succeed as unless overrides if	WITHOUT_CLASSIFICATION	0.9999886316680102	WITHOUT_CLASSIFICATION	1.1368331989833494E-5	DEFECT
// test that the watchdog ends the process	WITHOUT_CLASSIFICATION	0.999999103589384	WITHOUT_CLASSIFICATION	8.964106159674984E-7	DEFECT
// test that the watchdog ends the process	WITHOUT_CLASSIFICATION	0.999999103589384	WITHOUT_CLASSIFICATION	8.964106159674984E-7	DEFECT
// and a little shorter	WITHOUT_CLASSIFICATION	0.9999966629710327	WITHOUT_CLASSIFICATION	3.3370289673484403E-6	DEFECT
// test that the watchdog ends the process	WITHOUT_CLASSIFICATION	0.999999103589384	WITHOUT_CLASSIFICATION	8.964106159674984E-7	DEFECT
// target must be specified	WITHOUT_CLASSIFICATION	0.9999992247373439	WITHOUT_CLASSIFICATION	7.752626561201209E-7	DEFECT
// Should fail since a recursion will occur...	WITHOUT_CLASSIFICATION	0.995777165903096	WITHOUT_CLASSIFICATION	0.004222834096904121	DEFECT
// a rather convoluted equals() test	WITHOUT_CLASSIFICATION	0.9999954478480481	WITHOUT_CLASSIFICATION	4.5521519519002276E-6	DEFECT
// <path> swallows the basedir, it seems //assertTrue(!getProject().resolveFile("A").exists());	WITHOUT_CLASSIFICATION	0.9999778990899907	WITHOUT_CLASSIFICATION	2.2100910009379515E-5	DEFECT
// allow this as imported in targets are only tested when a target is run	WITHOUT_CLASSIFICATION	0.9999381806907566	WITHOUT_CLASSIFICATION	6.181930924344907E-5	DEFECT
// deactivate this test as imports within targets are not allowed	WITHOUT_CLASSIFICATION	0.999957694870884	WITHOUT_CLASSIFICATION	4.2305129116025626E-5	DEFECT
// Running on Windows or something, so skip it.	WITHOUT_CLASSIFICATION	0.9999011693178133	WITHOUT_CLASSIFICATION	9.883068218678563E-5	DEFECT
// remove log file from testSpawn	WITHOUT_CLASSIFICATION	0.9999972597116399	WITHOUT_CLASSIFICATION	2.7402883601412236E-6	DEFECT
// this is guaranteed by FileUtils#createTempFile	WITHOUT_CLASSIFICATION	0.9999935727985799	WITHOUT_CLASSIFICATION	6.427201420040398E-6	DEFECT
// let's be nice with the next generation of developers	WITHOUT_CLASSIFICATION	0.9999935218210095	WITHOUT_CLASSIFICATION	6.478178990500341E-6	DEFECT
//executeTarget("setup"); //commented out for performance while target is empty	WITHOUT_CLASSIFICATION	0.9999997552715726	WITHOUT_CLASSIFICATION	2.447284273789865E-7	DEFECT
// target // file // exptected string	WITHOUT_CLASSIFICATION	0.9999995449545871	WITHOUT_CLASSIFICATION	4.5504541298094295E-7	DEFECT
// END class ManifestClassPathTest	WITHOUT_CLASSIFICATION	0.9999848935192387	WITHOUT_CLASSIFICATION	1.510648076136421E-5	DEFECT
//      assertTrue("return code is invalid: " + retCode, retCode!=0);	WITHOUT_CLASSIFICATION	0.9999569965479996	WITHOUT_CLASSIFICATION	4.3003452000316124E-5	DEFECT
// test a process that runs and failed	WITHOUT_CLASSIFICATION	0.999999303386263	WITHOUT_CLASSIFICATION	6.966137370799909E-7	DEFECT
// process should abort	WITHOUT_CLASSIFICATION	0.9999955711824946	WITHOUT_CLASSIFICATION	4.428817505411058E-6	DEFECT
// I assume that starting this takes less than TIME_OUT/2 ms...	WITHOUT_CLASSIFICATION	0.9998940649142218	WITHOUT_CLASSIFICATION	1.0593508577807863E-4	DEFECT
// wait for TIME_OUT/2, there should be about TIME_OUT/2 ms remaining before timeout	WITHOUT_CLASSIFICATION	0.9998047360572673	WITHOUT_CLASSIFICATION	1.9526394273277755E-4	DEFECT
// now stop the watchdog.	WITHOUT_CLASSIFICATION	0.999983704633678	WITHOUT_CLASSIFICATION	1.6295366322020524E-5	DEFECT
// wait for the thread to die, should be the end of the process	WITHOUT_CLASSIFICATION	0.9999931793675803	WITHOUT_CLASSIFICATION	6.820632419748241E-6	DEFECT
// process should be dead and well finished	WITHOUT_CLASSIFICATION	0.9999995736629689	WITHOUT_CLASSIFICATION	4.2633703113383165E-7	DEFECT
// We have to compare the decompressed content instead:	WITHOUT_CLASSIFICATION	0.9999889392387005	WITHOUT_CLASSIFICATION	1.1060761299503926E-5	DEFECT
//no point in setting a message	WITHOUT_CLASSIFICATION	0.999967493216742	WITHOUT_CLASSIFICATION	3.250678325790638E-5	DEFECT
// this is guaranteed by FileUtils#createTempFile	WITHOUT_CLASSIFICATION	0.9999935727985799	WITHOUT_CLASSIFICATION	6.427201420040398E-6	DEFECT
// make the spawned process run 4 seconds	WITHOUT_CLASSIFICATION	0.999995928518966	WITHOUT_CLASSIFICATION	4.071481033953261E-6	DEFECT
// this loop runs parallel to the build	WITHOUT_CLASSIFICATION	0.9999935815657597	WITHOUT_CLASSIFICATION	6.4184342403027685E-6	DEFECT
// security	WITHOUT_CLASSIFICATION	0.9999799255043696	WITHOUT_CLASSIFICATION	2.007449563031639E-5	DEFECT
// time of the build in milli seconds	WITHOUT_CLASSIFICATION	0.9998566503870315	WITHOUT_CLASSIFICATION	1.4334961296839883E-4	DEFECT
// Nothing specified -> Fail	WITHOUT_CLASSIFICATION	0.9999887489296088	WITHOUT_CLASSIFICATION	1.1251070391317395E-5	DEFECT
// Only property specified -> Fail	WITHOUT_CLASSIFICATION	0.9997244209662316	WITHOUT_CLASSIFICATION	2.755790337683931E-4	DEFECT
// Only file specified -> Fail	WITHOUT_CLASSIFICATION	0.9999570851881758	WITHOUT_CLASSIFICATION	4.291481182425093E-5	DEFECT
// file does exist -> property 'test' == 'true'	WITHOUT_CLASSIFICATION	0.9999938064117361	WITHOUT_CLASSIFICATION	6.19358826394771E-6	DEFECT
// resource doesn't exist -> property 'test' == null	WITHOUT_CLASSIFICATION	0.9999782233533631	WITHOUT_CLASSIFICATION	2.1776646636980692E-5	DEFECT
// resource does exist -> property 'test' == 'true'	WITHOUT_CLASSIFICATION	0.999993615171531	WITHOUT_CLASSIFICATION	6.38482846903929E-6	DEFECT
// class doesn't exist -> property 'test' == null	WITHOUT_CLASSIFICATION	0.9999866964871594	WITHOUT_CLASSIFICATION	1.3303512840664354E-5	DEFECT
// class does exist -> property 'test' == 'true'	WITHOUT_CLASSIFICATION	0.999996940031362	WITHOUT_CLASSIFICATION	3.0599686379700204E-6	DEFECT
// All three specified but class missing -> null	WITHOUT_CLASSIFICATION	0.9999846626424445	WITHOUT_CLASSIFICATION	1.5337357555619883E-5	DEFECT
// Specified property-name is "" -> true	WITHOUT_CLASSIFICATION	0.9999920615379045	WITHOUT_CLASSIFICATION	7.938462095554656E-6	DEFECT
// Specified file is "" -> invalid files do not exist	WITHOUT_CLASSIFICATION	0.9999967089943441	WITHOUT_CLASSIFICATION	3.291005655863477E-6	DEFECT
// Specified file is "" actually a directory, so it should pass	WITHOUT_CLASSIFICATION	0.9999439197557597	WITHOUT_CLASSIFICATION	5.6080244240461045E-5	DEFECT
// Specified resource is "" -> can such a thing exist?	WITHOUT_CLASSIFICATION	0.9999995529619461	WITHOUT_CLASSIFICATION	4.4703805382487805E-7	DEFECT
/*     * returns non null IBM JDK 1.3 Linux     */	WITHOUT_CLASSIFICATION	0.9999637368604825	WITHOUT_CLASSIFICATION	3.6263139517517786E-5	DEFECT
// Specified dir is "" -> this is the current directory and should // always exist	WITHOUT_CLASSIFICATION	0.9996393234862898	WITHOUT_CLASSIFICATION	3.6067651371011794E-4	DEFECT
// Specified dir is "../taskdefs" -> should exist since it's the // location of the buildfile used...	WITHOUT_CLASSIFICATION	0.9999887944549671	WITHOUT_CLASSIFICATION	1.1205545032851313E-5	DEFECT
// Specified dir is "../this_dir_should_never_exist" -> null	WITHOUT_CLASSIFICATION	0.999995848564494	WITHOUT_CLASSIFICATION	4.1514355059917605E-6	DEFECT
// Invalid type specified	WITHOUT_CLASSIFICATION	0.9999938158826843	WITHOUT_CLASSIFICATION	6.184117315601267E-6	DEFECT
// Core class that exists in system classpath is ignored	WITHOUT_CLASSIFICATION	0.9999534071219928	WITHOUT_CLASSIFICATION	4.659287800726712E-5	DEFECT
// Core class that exists in system classpath is not ignored with ignoresystemclass="false"	WITHOUT_CLASSIFICATION	0.9998663223344221	WITHOUT_CLASSIFICATION	1.3367766557790468E-4	DEFECT
// Core class that exists in system classpath is not ignored with default ignoresystemclasses value	WITHOUT_CLASSIFICATION	0.9999845968829457	WITHOUT_CLASSIFICATION	1.540311705429907E-5	DEFECT
// Class is found in specified classpath	WITHOUT_CLASSIFICATION	0.9999853758650797	WITHOUT_CLASSIFICATION	1.4624134920163875E-5	DEFECT
// File is not found in specified filepath	WITHOUT_CLASSIFICATION	0.9999479468832385	WITHOUT_CLASSIFICATION	5.2053116761481754E-5	DEFECT
// test when file begins with basedir twice	WITHOUT_CLASSIFICATION	0.9999939876831375	WITHOUT_CLASSIFICATION	6.01231686251544E-6	DEFECT
// test for searching parents	WITHOUT_CLASSIFICATION	0.9999974165926354	WITHOUT_CLASSIFICATION	2.58340736468169E-6	DEFECT
// test for not searching parents	WITHOUT_CLASSIFICATION	0.999991908289664	WITHOUT_CLASSIFICATION	8.091710335914495E-6	DEFECT
// Output the default excludes	WITHOUT_CLASSIFICATION	0.9999980715893714	WITHOUT_CLASSIFICATION	1.9284106286628457E-6	DEFECT
// adding something to the excludes'	WITHOUT_CLASSIFICATION	0.9999966732759732	WITHOUT_CLASSIFICATION	3.3267240268628377E-6	DEFECT
// removing something from the defaults	WITHOUT_CLASSIFICATION	0.9999951496669784	WITHOUT_CLASSIFICATION	4.850333021547424E-6	DEFECT
//CVS missing	WITHOUT_CLASSIFICATION	0.9998532928571331	WITHOUT_CLASSIFICATION	1.467071428670072E-4	DEFECT
// target must be specified	WITHOUT_CLASSIFICATION	0.9999992247373439	WITHOUT_CLASSIFICATION	7.752626561201209E-7	DEFECT
// We try to delete the directory created in CopydirTest	WITHOUT_CLASSIFICATION	0.9999977243767634	WITHOUT_CLASSIFICATION	2.2756232366571615E-6	DEFECT
// check that both arrays have the same size	WITHOUT_CLASSIFICATION	0.9999151634989265	WITHOUT_CLASSIFICATION	8.483650107341083E-5	DEFECT
//instance variable to allow cleanup	WITHOUT_CLASSIFICATION	0.9999965330700439	WITHOUT_CLASSIFICATION	3.46692995602699E-6	DEFECT
//ignored	WITHOUT_CLASSIFICATION	0.9991624826642336	WITHOUT_CLASSIFICATION	8.375173357664428E-4	DEFECT
// What's the working directory?  If local, then its the // folder of the input file.  Otherwise, its the "current" dir..	WITHOUT_CLASSIFICATION	0.9988739678778584	WITHOUT_CLASSIFICATION	0.0011260321221415002	DEFECT
// Set a property on the project to make sure that loading // a property with the same name from an xml file will // *not* change it.	WITHOUT_CLASSIFICATION	0.999249038343036	WITHOUT_CLASSIFICATION	7.509616569640582E-4	DEFECT
//printProperties(p.getProperties());	WITHOUT_CLASSIFICATION	0.9997637752597568	WITHOUT_CLASSIFICATION	2.3622474024320567E-4	DEFECT
// Every key identified by the Properties must have been loaded.	WITHOUT_CLASSIFICATION	0.9999724515794318	WITHOUT_CLASSIFICATION	2.754842056822604E-5	DEFECT
// The property is the name of a file.  We are testing // a location attribute, so we need to resolve the given // file name in the provided folder.	WITHOUT_CLASSIFICATION	0.9998762965123923	WITHOUT_CLASSIFICATION	1.2370348760763422E-4	DEFECT
// Substitute .xml with .properties	WITHOUT_CLASSIFICATION	0.9999417533938608	WITHOUT_CLASSIFICATION	5.824660613921035E-5	DEFECT
// basedir of subant/subant-test1/subant.xml is .. // therefore we expect here the subant/subant-test1 subdirectory	WITHOUT_CLASSIFICATION	0.9999606862789565	WITHOUT_CLASSIFICATION	3.931372104351252E-5	DEFECT
// Output an empty String	WITHOUT_CLASSIFICATION	0.9999712183553157	WITHOUT_CLASSIFICATION	2.878164468443303E-5	DEFECT
// Output 'OUTPUT OF ECHO'	WITHOUT_CLASSIFICATION	0.9999644680134748	WITHOUT_CLASSIFICATION	3.5531986525060484E-5	DEFECT
/*          * @param message         */	WITHOUT_CLASSIFICATION	0.999998418897071	WITHOUT_CLASSIFICATION	1.5811029289696713E-6	DEFECT
// make sure that the parsing does not break	WITHOUT_CLASSIFICATION	0.9999127246484526	WITHOUT_CLASSIFICATION	8.727535154731953E-5	DEFECT
// where the name contains <>	WITHOUT_CLASSIFICATION	0.9999899921184952	WITHOUT_CLASSIFICATION	1.000788150493911E-5	DEFECT
// where only an address is supplied	WITHOUT_CLASSIFICATION	0.9997195822023874	WITHOUT_CLASSIFICATION	2.80417797612549E-4	DEFECT
// Tests property element, using XML schema properties as an example.	WITHOUT_CLASSIFICATION	0.9999539981555909	WITHOUT_CLASSIFICATION	4.600184440909602E-5	DEFECT
// should print "panic: Cannot find importVocab file 'JavaTokenTypes.txt'" // since it needs to run java.g first before java.tree.g	WITHOUT_CLASSIFICATION	0.9999687427066389	WITHOUT_CLASSIFICATION	3.125729336094032E-5	DEFECT
// execute	WITHOUT_CLASSIFICATION	0.9999713366990229	WITHOUT_CLASSIFICATION	2.866330097701008E-5	DEFECT
// override some of the code so we can test the handling of the // return code only.	WITHOUT_CLASSIFICATION	0.9999877576357263	WITHOUT_CLASSIFICATION	1.2242364273615897E-5	DEFECT
// ask ant to update the properties...	WITHOUT_CLASSIFICATION	0.9996871409143644	WITHOUT_CLASSIFICATION	3.12859085635614E-4	DEFECT
// to override	WITHOUT_CLASSIFICATION	0.9999806827337666	WITHOUT_CLASSIFICATION	1.931726623346698E-5	DEFECT
// just to be sure	WITHOUT_CLASSIFICATION	0.9999895616691762	WITHOUT_CLASSIFICATION	1.0438330823740473E-5	DEFECT
// just to be sure	WITHOUT_CLASSIFICATION	0.9999895616691762	WITHOUT_CLASSIFICATION	1.0438330823740473E-5	DEFECT
// read in the file	WITHOUT_CLASSIFICATION	0.9999881465336935	WITHOUT_CLASSIFICATION	1.185346630650922E-5	DEFECT
// found the property we set - it's good.	WITHOUT_CLASSIFICATION	0.9997650739172537	WITHOUT_CLASSIFICATION	2.349260827462115E-4	DEFECT
// else	WITHOUT_CLASSIFICATION	0.9999735190501179	WITHOUT_CLASSIFICATION	2.6480949882094616E-5	DEFECT
// else	WITHOUT_CLASSIFICATION	0.9999735190501179	WITHOUT_CLASSIFICATION	2.6480949882094616E-5	DEFECT
// ReplaceRegExpTest	WITHOUT_CLASSIFICATION	0.9999975744765808	WITHOUT_CLASSIFICATION	2.4255234191613825E-6	DEFECT
// test for 10 consecutives transform	WITHOUT_CLASSIFICATION	0.9999991795683807	WITHOUT_CLASSIFICATION	8.204316192656343E-7	DEFECT
//java keywords are not special	WITHOUT_CLASSIFICATION	0.9998518762907349	WITHOUT_CLASSIFICATION	1.4812370926513036E-4	DEFECT
//underscores go in front of invalid start chars	WITHOUT_CLASSIFICATION	0.9993775367958788	WITHOUT_CLASSIFICATION	6.224632041212143E-4	DEFECT
//underscores at the front get an underscore too	WITHOUT_CLASSIFICATION	0.998877698624259	WITHOUT_CLASSIFICATION	0.0011223013757410889	DEFECT
//non java char at start => underscore then the the _hex value	WITHOUT_CLASSIFICATION	0.999970598254986	WITHOUT_CLASSIFICATION	2.9401745013937754E-5	DEFECT
//and paths are stripped	WITHOUT_CLASSIFICATION	0.9999447638292037	WITHOUT_CLASSIFICATION	5.5236170796298455E-5	DEFECT
/** * Tests the {@link XSLTProcess} task. * XXX merge with {@link StyleTest}? * @since Ant 1.5 */	WITHOUT_CLASSIFICATION	0.9999819665391988	WITHOUT_CLASSIFICATION	1.8033460801155034E-5	DEFECT
// byte - byte compare	WITHOUT_CLASSIFICATION	0.9999944802622677	WITHOUT_CLASSIFICATION	5.519737732327604E-6	DEFECT
// avoid endless loop	WITHOUT_CLASSIFICATION	0.9999911223139373	WITHOUT_CLASSIFICATION	8.87768606266521E-6	DEFECT
// those would fail because of the way BuildFileTest captures output	WITHOUT_CLASSIFICATION	0.9999514273469371	WITHOUT_CLASSIFICATION	4.857265306292088E-5	DEFECT
//To change body of implemented methods use File | Settings | File Templates.	WITHOUT_CLASSIFICATION	0.9999685916889175	WITHOUT_CLASSIFICATION	3.140831108261171E-5	DEFECT
// tests one the file object	WITHOUT_CLASSIFICATION	0.999996832594249	WITHOUT_CLASSIFICATION	3.167405750971637E-6	DEFECT
// father and child pattern test	WITHOUT_CLASSIFICATION	0.9999920667520751	WITHOUT_CLASSIFICATION	7.933247924972624E-6	DEFECT
// redo the test, but the 2 include patterns are inverted	WITHOUT_CLASSIFICATION	0.9999988125165228	WITHOUT_CLASSIFICATION	1.1874834772481944E-6	DEFECT
// end of try-catch	WITHOUT_CLASSIFICATION	0.9999872011606075	WITHOUT_CLASSIFICATION	1.27988393926421E-5	DEFECT
// tests one the file object	WITHOUT_CLASSIFICATION	0.999996832594249	WITHOUT_CLASSIFICATION	3.167405750971637E-6	DEFECT
// On junit3 this is a FAILURE, on junit4 this is an ERROR	WITHOUT_CLASSIFICATION	0.9999683263692853	WITHOUT_CLASSIFICATION	3.1673630714611967E-5	DEFECT
// conversion to URL via FileUtils like in XMLResultAggregator, not as suggested in the bug report	WITHOUT_CLASSIFICATION	0.9999625269063341	WITHOUT_CLASSIFICATION	3.7473093665814456E-5	DEFECT
// conversion to URL via FileUtils like in XMLResultAggregator, not as suggested in the bug report	WITHOUT_CLASSIFICATION	0.9999625269063341	WITHOUT_CLASSIFICATION	3.7473093665814456E-5	DEFECT
// conversion to URL via FileUtils like in XMLResultAggregator, not as suggested in the bug report	WITHOUT_CLASSIFICATION	0.9999625269063341	WITHOUT_CLASSIFICATION	3.7473093665814456E-5	DEFECT
// mandatory constructor	WITHOUT_CLASSIFICATION	0.9999566523429159	WITHOUT_CLASSIFICATION	4.3347657084100615E-5	DEFECT
// check that a suite generates no errors	WITHOUT_CLASSIFICATION	0.9999942342350391	WITHOUT_CLASSIFICATION	5.765764960930764E-6	DEFECT
// check that having no suite generates no errors	WITHOUT_CLASSIFICATION	0.999981150315897	WITHOUT_CLASSIFICATION	1.8849684102996706E-5	DEFECT
// check that something which is not a testcase generates no errors // at first even though this is incorrect.	WITHOUT_CLASSIFICATION	0.9999551189421659	WITHOUT_CLASSIFICATION	4.488105783403535E-5	DEFECT
// check that an invalid suite generates an error.	WITHOUT_CLASSIFICATION	0.9999927034030379	WITHOUT_CLASSIFICATION	7.296596962131657E-6	DEFECT
// JUnit3 test //assertEquals(runner.getFormatter().getError(), JUnitTestRunner.FAILURES, runner.getRetCode());	WITHOUT_CLASSIFICATION	0.9999988482851355	WITHOUT_CLASSIFICATION	1.1517148645086618E-6	DEFECT
// On junit3 this is a FAILURE, on junit4 this is an ERROR	WITHOUT_CLASSIFICATION	0.9999683263692853	WITHOUT_CLASSIFICATION	3.1673630714611967E-5	DEFECT
/*          * @param event the build event that is being logged.         */	WITHOUT_CLASSIFICATION	0.9999980642572083	WITHOUT_CLASSIFICATION	1.935742791763377E-6	DEFECT
// check that an exception in the constructor is noticed	WITHOUT_CLASSIFICATION	0.9999825271133963	WITHOUT_CLASSIFICATION	1.7472886603802336E-5	DEFECT
// the test runner that wrap the dummy formatter that interests us	WITHOUT_CLASSIFICATION	0.9999898636620466	WITHOUT_CLASSIFICATION	1.013633795347935E-5	DEFECT
// use the classloader that loaded this class otherwise // it will not be able to run inner classes if this test // is ran in non-forked mode.	WITHOUT_CLASSIFICATION	0.9999553488264925	WITHOUT_CLASSIFICATION	4.465117350743997E-5	DEFECT
// dummy formatter just to catch the error	WITHOUT_CLASSIFICATION	0.9999944842582511	WITHOUT_CLASSIFICATION	5.515741748963319E-6	DEFECT
// end of try-catch	WITHOUT_CLASSIFICATION	0.9999872011606075	WITHOUT_CLASSIFICATION	1.27988393926421E-5	DEFECT
// end of try-catch	WITHOUT_CLASSIFICATION	0.9999872011606075	WITHOUT_CLASSIFICATION	1.27988393926421E-5	DEFECT
// byte - byte compare	WITHOUT_CLASSIFICATION	0.9999944802622677	WITHOUT_CLASSIFICATION	5.519737732327604E-6	DEFECT
/*          * @param event the build event that is being logged.         */	WITHOUT_CLASSIFICATION	0.9999980642572083	WITHOUT_CLASSIFICATION	1.935742791763377E-6	DEFECT
// get the fileset and its basedir	WITHOUT_CLASSIFICATION	0.9999901129783118	WITHOUT_CLASSIFICATION	9.887021688319233E-6	DEFECT
// get the fileset and its basedir	WITHOUT_CLASSIFICATION	0.9999901129783118	WITHOUT_CLASSIFICATION	9.887021688319233E-6	DEFECT
// get the fileset and its basedir	WITHOUT_CLASSIFICATION	0.9999901129783118	WITHOUT_CLASSIFICATION	9.887021688319233E-6	DEFECT
// Set up a SOSGet task	WITHOUT_CLASSIFICATION	0.999986728215693	WITHOUT_CLASSIFICATION	1.3271784306958553E-5	DEFECT
// Set up a SOSGet task	WITHOUT_CLASSIFICATION	0.999986728215693	WITHOUT_CLASSIFICATION	1.3271784306958553E-5	DEFECT
// Set up a SOSCheckin task	WITHOUT_CLASSIFICATION	0.9999917147145412	WITHOUT_CLASSIFICATION	8.285285458801536E-6	DEFECT
// Set up a SOSCheckin task	WITHOUT_CLASSIFICATION	0.9999917147145412	WITHOUT_CLASSIFICATION	8.285285458801536E-6	DEFECT
// Set up a SOSCheckout task	WITHOUT_CLASSIFICATION	0.9999897164096967	WITHOUT_CLASSIFICATION	1.0283590303371576E-5	DEFECT
// Set up a sosCheckout task	WITHOUT_CLASSIFICATION	0.9999907407798666	WITHOUT_CLASSIFICATION	9.25922013352021E-6	DEFECT
// Set up a sosCheckout task	WITHOUT_CLASSIFICATION	0.9999907407798666	WITHOUT_CLASSIFICATION	9.25922013352021E-6	DEFECT
// We have extra elements	WITHOUT_CLASSIFICATION	0.9999985569312475	WITHOUT_CLASSIFICATION	1.443068752424511E-6	DEFECT
// give it some time to display	WITHOUT_CLASSIFICATION	0.9999869147330527	WITHOUT_CLASSIFICATION	1.3085266947378408E-5	DEFECT
// Set up a VSSGet task	WITHOUT_CLASSIFICATION	0.9999825814247574	WITHOUT_CLASSIFICATION	1.7418575242528668E-5	DEFECT
// Set up a VSSLabel task	WITHOUT_CLASSIFICATION	0.9999931633736885	WITHOUT_CLASSIFICATION	6.836626311461327E-6	DEFECT
// Set up a VSSLabel task	WITHOUT_CLASSIFICATION	0.9999931633736885	WITHOUT_CLASSIFICATION	6.836626311461327E-6	DEFECT
// Set up a VSSHistory task	WITHOUT_CLASSIFICATION	0.999986056784397	WITHOUT_CLASSIFICATION	1.3943215603002308E-5	DEFECT
// Set up a VSSHistory task	WITHOUT_CLASSIFICATION	0.999986056784397	WITHOUT_CLASSIFICATION	1.3943215603002308E-5	DEFECT
// Set up a Timestamp	WITHOUT_CLASSIFICATION	0.9999931805636643	WITHOUT_CLASSIFICATION	6.819436335692092E-6	DEFECT
// Get today's date	WITHOUT_CLASSIFICATION	0.9999550245158333	WITHOUT_CLASSIFICATION	4.497548416662818E-5	DEFECT
// Set up a VSSCheckIn task	WITHOUT_CLASSIFICATION	0.9999859396163131	WITHOUT_CLASSIFICATION	1.406038368673834E-5	DEFECT
// Set up a VSSCheckOut task	WITHOUT_CLASSIFICATION	0.9999827000829269	WITHOUT_CLASSIFICATION	1.7299917073129826E-5	DEFECT
// Set up a VSSAdd task	WITHOUT_CLASSIFICATION	0.9999782583236029	WITHOUT_CLASSIFICATION	2.174167639713114E-5	DEFECT
// Set up a VSSCp task	WITHOUT_CLASSIFICATION	0.9999877446660909	WITHOUT_CLASSIFICATION	1.22553339091751E-5	DEFECT
// Set up a VSSCreate task	WITHOUT_CLASSIFICATION	0.9999913617939246	WITHOUT_CLASSIFICATION	8.638206075492641E-6	DEFECT
// Count the number of empty strings	WITHOUT_CLASSIFICATION	0.9999880161708806	WITHOUT_CLASSIFICATION	1.1983829119351441E-5	DEFECT
// ran Ant tests with -ea and this would fail spuriously	WITHOUT_CLASSIFICATION	0.9998881912715688	WITHOUT_CLASSIFICATION	1.1180872843116247E-4	DEFECT
// now to the expected failures	WITHOUT_CLASSIFICATION	0.9999910441206603	WITHOUT_CLASSIFICATION	8.955879339724841E-6	DEFECT
// catalog <--> catalog	WITHOUT_CLASSIFICATION	0.9999676393622831	WITHOUT_CLASSIFICATION	3.236063771695254E-5	DEFECT
// catalog1 --> catalog2 --> catalog3 --> catalog1	WITHOUT_CLASSIFICATION	0.999979106424976	WITHOUT_CLASSIFICATION	2.0893575023933608E-5	DEFECT
// catalog2 --> catalog1 --> catalog	WITHOUT_CLASSIFICATION	0.9999699509606299	WITHOUT_CLASSIFICATION	3.0049039370133946E-5	DEFECT
//check that dir and src are incompatible	WITHOUT_CLASSIFICATION	0.9999345460715503	WITHOUT_CLASSIFICATION	6.545392844974078E-5	DEFECT
//check that fullpath and prefix are incompatible	WITHOUT_CLASSIFICATION	0.9996847872373915	WITHOUT_CLASSIFICATION	3.152127626085341E-4	DEFECT
// check that reference zipfilesets cannot have specific attributes	WITHOUT_CLASSIFICATION	0.9999664366894327	WITHOUT_CLASSIFICATION	3.356331056722985E-5	DEFECT
// check that a reference zipfileset gets the same attributes as the original	WITHOUT_CLASSIFICATION	0.9999555332200157	WITHOUT_CLASSIFICATION	4.446677998428428E-5	DEFECT
//check that dir and src are incompatible	WITHOUT_CLASSIFICATION	0.9999345460715503	WITHOUT_CLASSIFICATION	6.545392844974078E-5	DEFECT
// // These shenanigans are necessary b/c Norm Walsh's resolver // has a different idea of how file URLs are created on windoze // ie file://c:/foo instead of file:///c:/foo //	WITHOUT_CLASSIFICATION	0.9996968688920179	WITHOUT_CLASSIFICATION	3.031311079820264E-4	DEFECT
//check that dir and src are incompatible	WITHOUT_CLASSIFICATION	0.9999345460715503	WITHOUT_CLASSIFICATION	6.545392844974078E-5	DEFECT
//check that fullpath and prefix are incompatible	WITHOUT_CLASSIFICATION	0.9996847872373915	WITHOUT_CLASSIFICATION	3.152127626085341E-4	DEFECT
// try a netware-volume length path, see how it is handled	WITHOUT_CLASSIFICATION	0.9999938065644791	WITHOUT_CLASSIFICATION	6.193435520854252E-6	DEFECT
// actually tests constructor as well as setPath	WITHOUT_CLASSIFICATION	0.9999820812365624	WITHOUT_CLASSIFICATION	1.791876343749706E-5	DEFECT
// check that reference tarfilesets cannot have specific attributes	WITHOUT_CLASSIFICATION	0.9999790868901888	WITHOUT_CLASSIFICATION	2.091310981121415E-5	DEFECT
// try a multi-part netware-volume length path w/forward slash, see how it is handled	WITHOUT_CLASSIFICATION	0.9999958155139312	WITHOUT_CLASSIFICATION	4.184486068716589E-6	DEFECT
// try a multi-part netware-volume length path, see how it is handled	WITHOUT_CLASSIFICATION	0.9999956661188483	WITHOUT_CLASSIFICATION	4.3338811517475735E-6	DEFECT
// dummy1 --> dummy2 --> dummy3 --> dummy1	WITHOUT_CLASSIFICATION	0.9999201038195649	WITHOUT_CLASSIFICATION	7.989618043517347E-5	DEFECT
// try a netware-volume length path w/forward slash, see how it is handled	WITHOUT_CLASSIFICATION	0.9999940200606781	WITHOUT_CLASSIFICATION	5.979939321903777E-6	DEFECT
// try a multi-part netware-volume length path with UNIX // separator (this testcase if from an actual bug that was // found, in AvailableTest, which uses PathTokenizer)	WITHOUT_CLASSIFICATION	0.9999098350174251	WITHOUT_CLASSIFICATION	9.016498257487946E-5	DEFECT
// dummy1 --> dummy2 --> dummy3 --> dummy1	WITHOUT_CLASSIFICATION	0.9999201038195649	WITHOUT_CLASSIFICATION	7.989618043517347E-5	DEFECT
// dummy1 --> dummy2 --> dummy3 --> dummy1	WITHOUT_CLASSIFICATION	0.9999201038195649	WITHOUT_CLASSIFICATION	7.989618043517347E-5	DEFECT
// dummy1 --> dummy2 --> dummy3 --> dummy1	WITHOUT_CLASSIFICATION	0.9999201038195649	WITHOUT_CLASSIFICATION	7.989618043517347E-5	DEFECT
// dummy1 --> dummy2 --> dummy3 --> dummy1	WITHOUT_CLASSIFICATION	0.9999201038195649	WITHOUT_CLASSIFICATION	7.989618043517347E-5	DEFECT
// dummy1 --> dummy2 --> dummy3 (with Path "/a")	WITHOUT_CLASSIFICATION	0.9999782030426018	WITHOUT_CLASSIFICATION	2.1796957398318352E-5	DEFECT
// This class acts as a custom Ant task also // and uses these variables/methods in that mode	WITHOUT_CLASSIFICATION	0.9999877087852808	WITHOUT_CLASSIFICATION	1.2291214719321768E-5	DEFECT
// dummy1 --> dummy2 --> dummy3 // (which has the Project's basedir as root).	WITHOUT_CLASSIFICATION	0.9999883860895452	WITHOUT_CLASSIFICATION	1.1613910454687211E-5	DEFECT
// dummy1 --> dummy2 --> dummy3 // (which has the Project's basedir as root).	WITHOUT_CLASSIFICATION	0.9999883860895452	WITHOUT_CLASSIFICATION	1.1613910454687211E-5	DEFECT
// Grant extra permissions to read and write the user.* properties and read to the // java.home property	WITHOUT_CLASSIFICATION	0.99999930066456	WITHOUT_CLASSIFICATION	6.993354400585107E-7	DEFECT
// dummy1 --> dummy2 --> dummy3 // (which holds patterns "include" and "exclude")	WITHOUT_CLASSIFICATION	0.9999996038951893	WITHOUT_CLASSIFICATION	3.9610481066178714E-7	DEFECT
// check that a reference tarfileset gets the same attributes as the original	WITHOUT_CLASSIFICATION	0.9999611114882249	WITHOUT_CLASSIFICATION	3.888851177515998E-5	DEFECT
// was expected	WITHOUT_CLASSIFICATION	0.9999945674193955	WITHOUT_CLASSIFICATION	5.432580604545384E-6	DEFECT
// Revoke permission to write user.home (granted above via user.*), still able to read though. // and the default granted permission to read os.name.	WITHOUT_CLASSIFICATION	0.9999996635213785	WITHOUT_CLASSIFICATION	3.3647862153080255E-7	DEFECT
// Was expected, test passes	WITHOUT_CLASSIFICATION	0.9999986145444465	WITHOUT_CLASSIFICATION	1.3854555533940106E-6	DEFECT
// Was expected, test passes	WITHOUT_CLASSIFICATION	0.9999986145444465	WITHOUT_CLASSIFICATION	1.3854555533940106E-6	DEFECT
// Was expected, test passes	WITHOUT_CLASSIFICATION	0.9999986145444465	WITHOUT_CLASSIFICATION	1.3854555533940106E-6	DEFECT
/*         * After changing CommandlineJava to search for the java         * executable, I don't know, how to tests the value returned         * here without using the same logic as applied in the class         * itself.         *         * assertTrue("no classpath", "java", s[0]);         */	WITHOUT_CLASSIFICATION	0.9999989415931559	WITHOUT_CLASSIFICATION	1.05840684404529E-6	DEFECT
//        assertEquals("with classpath", "java", s[0]);	WITHOUT_CLASSIFICATION	0.9999925037946136	WITHOUT_CLASSIFICATION	7.496205386427861E-6	DEFECT
// only the second iteration would pass because of PR 27218	WITHOUT_CLASSIFICATION	0.9998873592001719	WITHOUT_CLASSIFICATION	1.126407998281672E-4	DEFECT
//mix element types	WITHOUT_CLASSIFICATION	0.9999788461671284	WITHOUT_CLASSIFICATION	2.1153832871530964E-5	DEFECT
//implicit composite	WITHOUT_CLASSIFICATION	0.9999494074859175	WITHOUT_CLASSIFICATION	5.059251408241887E-5	DEFECT
// a --> b --> c --- def //               \-- ghi	WITHOUT_CLASSIFICATION	0.9999793119294758	WITHOUT_CLASSIFICATION	2.0688070524322668E-5	DEFECT
// // Ensure that an external entity resolves as expected Using an // XMLCatalog: // // Transform an XML file that refers to the entity into a text // file, entity is listed in the XMLCatalog pointing to a // different file.  Stuff result into property: val2 //	WITHOUT_CLASSIFICATION	0.9999802812214208	WITHOUT_CLASSIFICATION	1.971877857924509E-5	DEFECT
// // Ensure that an external entity resolves as expected with NO // XMLCatalog involvement: // // Transform an XML file that refers to the entity into a text // file, stuff result into property: val1 //	WITHOUT_CLASSIFICATION	0.9997917340325952	WITHOUT_CLASSIFICATION	2.0826596740478027E-4	DEFECT
// this actually relies on the first manifest being found on // the classpath (probably rt.jar's) being valid	WITHOUT_CLASSIFICATION	0.9999891222070418	WITHOUT_CLASSIFICATION	1.0877792958061088E-5	DEFECT
// // Ensure that an external entity resolves as expected with NO // XMLCatalog involvement: // // Transform an XML file that contains a reference to a _second_ XML file // via the document() function.  The _second_ XML file refers to an entity. // Stuff result into the property: val3 //	WITHOUT_CLASSIFICATION	0.9998153896765807	WITHOUT_CLASSIFICATION	1.8461032341941065E-4	DEFECT
// // Ensure that an external entity resolves as expected Using an // XMLCatalog: // // Transform an XML file that contains a reference to a _second_ XML file // via the document() function.  The _second_ XML file refers to an entity. // The entity is listed in the XMLCatalog pointing to a different file. // Stuff result into the property: val4 //	WITHOUT_CLASSIFICATION	0.9999898638789477	WITHOUT_CLASSIFICATION	1.013612105232708E-5	DEFECT
// The following will be used as types and tasks	WITHOUT_CLASSIFICATION	0.9999441269144315	WITHOUT_CLASSIFICATION	5.5873085568502674E-5	DEFECT
// share the setup for testing the depend task	WITHOUT_CLASSIFICATION	0.999995126250053	WITHOUT_CLASSIFICATION	4.8737499469430206E-6	DEFECT
// Test for path relative to project base directory	WITHOUT_CLASSIFICATION	0.9999008912067736	WITHOUT_CLASSIFICATION	9.910879322639177E-5	DEFECT
//class-MockCache	WITHOUT_CLASSIFICATION	0.9998342018331015	WITHOUT_CLASSIFICATION	1.6579816689856283E-4	DEFECT
//  =====================  attributes  =====================	WITHOUT_CLASSIFICATION	0.9999891084435505	WITHOUT_CLASSIFICATION	1.089155644948542E-5	DEFECT
//class-MockCache	WITHOUT_CLASSIFICATION	0.9998342018331015	WITHOUT_CLASSIFICATION	1.6579816689856283E-4	DEFECT
//  =====================  constructors, factories  =====================	WITHOUT_CLASSIFICATION	0.9999906178693801	WITHOUT_CLASSIFICATION	9.382130619780238E-6	DEFECT
//  =====================  JUnit stuff  =====================	WITHOUT_CLASSIFICATION	0.9999876938285664	WITHOUT_CLASSIFICATION	1.2306171433491249E-5	DEFECT
// project reference is set in super.setUp()	WITHOUT_CLASSIFICATION	0.9999797542673339	WITHOUT_CLASSIFICATION	2.0245732666142288E-5	DEFECT
// init the testclasses path object	WITHOUT_CLASSIFICATION	0.9999982583844279	WITHOUT_CLASSIFICATION	1.7416155721745793E-6	DEFECT
/* * /    // for test only - ignore tests where we arent work at the moment    public static junit.framework.Test suite() {        junit.framework.TestSuite suite= new junit.framework.TestSuite();        suite.addTest(new ModifiedSelectorTest("testValidateWrongCache"));        return suite;    }    /* */	WITHOUT_CLASSIFICATION	0.9999970522187397	WITHOUT_CLASSIFICATION	2.9477812602989994E-6	DEFECT
// =======  testcases for the attributes and nested elements of the selector  =====	WITHOUT_CLASSIFICATION	0.9999981062801523	WITHOUT_CLASSIFICATION	1.8937198477305664E-6	DEFECT
// do the actions	WITHOUT_CLASSIFICATION	0.9999948384479992	WITHOUT_CLASSIFICATION	5.161552000875537E-6	DEFECT
// do the checks - the buildfile stores the fileset as property	WITHOUT_CLASSIFICATION	0.9999268151722264	WITHOUT_CLASSIFICATION	7.318482777362385E-5	DEFECT
// must be empty according to the Mock* implementations	WITHOUT_CLASSIFICATION	0.9999981142127924	WITHOUT_CLASSIFICATION	1.8857872076170697E-6	DEFECT
// don't catch the JUnit exceptions	WITHOUT_CLASSIFICATION	0.9999956047453239	WITHOUT_CLASSIFICATION	4.395254676142466E-6	DEFECT
// no check for 1<=kind<=3 - only internal use therefore check it // while development	WITHOUT_CLASSIFICATION	0.999987157085341	WITHOUT_CLASSIFICATION	1.2842914658890835E-5	DEFECT
// readable form of parameter kind	WITHOUT_CLASSIFICATION	0.9999980992969428	WITHOUT_CLASSIFICATION	1.900703057123978E-6	DEFECT
// setup the "Ant project"	WITHOUT_CLASSIFICATION	0.999976819596182	WITHOUT_CLASSIFICATION	2.3180403817992596E-5	DEFECT
// setup the selector	WITHOUT_CLASSIFICATION	0.9999892626751854	WITHOUT_CLASSIFICATION	1.0737324814684866E-5	DEFECT
// get the cache, so we can check our things	WITHOUT_CLASSIFICATION	0.9999938945845626	WITHOUT_CLASSIFICATION	6.105415437387088E-6	DEFECT
// the test	WITHOUT_CLASSIFICATION	0.9999856662748312	WITHOUT_CLASSIFICATION	1.4333725168871466E-5	DEFECT
// MockCache doesnt create a file - therefore no cleanup needed	WITHOUT_CLASSIFICATION	0.9999984790869377	WITHOUT_CLASSIFICATION	1.5209130621565574E-6	DEFECT
// add the test classes to its classpath	WITHOUT_CLASSIFICATION	0.9999914390387697	WITHOUT_CLASSIFICATION	8.56096123016684E-6	DEFECT
// let the selector do its checks	WITHOUT_CLASSIFICATION	0.9999713973786098	WITHOUT_CLASSIFICATION	2.8602621390157247E-5	DEFECT
// extract the algorithm name (and config) from the selectors output	WITHOUT_CLASSIFICATION	0.9999966258407393	WITHOUT_CLASSIFICATION	3.37415926070594E-6	DEFECT
// '<' and '>' are only used if the algorithm has properties	WITHOUT_CLASSIFICATION	0.9999514039900012	WITHOUT_CLASSIFICATION	4.859600999879265E-5	DEFECT
// return the clean value	WITHOUT_CLASSIFICATION	0.9999984966938553	WITHOUT_CLASSIFICATION	1.503306144686304E-6	DEFECT
// initialize test environment (called "bed")	WITHOUT_CLASSIFICATION	0.9999996878376003	WITHOUT_CLASSIFICATION	3.121623996632195E-7	DEFECT
// initialize test environment (called "bed")	WITHOUT_CLASSIFICATION	0.9999996878376003	WITHOUT_CLASSIFICATION	3.121623996632195E-7	DEFECT
// Configure the selector	WITHOUT_CLASSIFICATION	0.9999651996471297	WITHOUT_CLASSIFICATION	3.480035287029812E-5	DEFECT
// Configure the selector	WITHOUT_CLASSIFICATION	0.9999651996471297	WITHOUT_CLASSIFICATION	3.480035287029812E-5	DEFECT
// does the selection	WITHOUT_CLASSIFICATION	0.9999578921922888	WITHOUT_CLASSIFICATION	4.210780771110152E-5	DEFECT
// evaluate correctness	WITHOUT_CLASSIFICATION	0.9999953524665549	WITHOUT_CLASSIFICATION	4.647533445092778E-6	DEFECT
// evaluate correctness	WITHOUT_CLASSIFICATION	0.9999953524665549	WITHOUT_CLASSIFICATION	4.647533445092778E-6	DEFECT
// same logic as on algorithm, no testcases created	WITHOUT_CLASSIFICATION	0.9999942127967052	WITHOUT_CLASSIFICATION	5.787203294787804E-6	DEFECT
// same logic as on algorithm, no testcases created	WITHOUT_CLASSIFICATION	0.9999942127967052	WITHOUT_CLASSIFICATION	5.787203294787804E-6	DEFECT
// given cache must be empty	WITHOUT_CLASSIFICATION	0.9999990565469313	WITHOUT_CLASSIFICATION	9.434530686737067E-7	DEFECT
// cache must return a stored value	WITHOUT_CLASSIFICATION	0.9999995371975616	WITHOUT_CLASSIFICATION	4.6280243839529613E-7	DEFECT
// test the iterator	WITHOUT_CLASSIFICATION	0.9999964007526364	WITHOUT_CLASSIFICATION	3.5992473635186274E-6	DEFECT
// clear the cache	WITHOUT_CLASSIFICATION	0.9999973779798023	WITHOUT_CLASSIFICATION	2.6220201976664247E-6	DEFECT
// must not be a directory	WITHOUT_CLASSIFICATION	0.9999917488538755	WITHOUT_CLASSIFICATION	8.251146124389945E-6	DEFECT
// get the Hashvalues	WITHOUT_CLASSIFICATION	0.9999960473211633	WITHOUT_CLASSIFICATION	3.952678836645736E-6	DEFECT
// Assert !=null and equality	WITHOUT_CLASSIFICATION	0.9999856970841852	WITHOUT_CLASSIFICATION	1.4302915814766466E-5	DEFECT
//if-isFile //for	WITHOUT_CLASSIFICATION	0.9999480112454477	WITHOUT_CLASSIFICATION	5.198875455215571E-5	DEFECT
// ==============  testcases for the comparator implementations  ==============	WITHOUT_CLASSIFICATION	0.999998656712814	WITHOUT_CLASSIFICATION	1.3432871860663274E-6	DEFECT
//not yet supported see note in selector	WITHOUT_CLASSIFICATION	0.9999380043951671	WITHOUT_CLASSIFICATION	6.199560483289627E-5	DEFECT
//new File("src/etc/testcases/types/resources/selectors/cache.properties").delete();	WITHOUT_CLASSIFICATION	0.9999852779733333	WITHOUT_CLASSIFICATION	1.4722026666828661E-5	DEFECT
// really "2"	WITHOUT_CLASSIFICATION	0.999939744411682	WITHOUT_CLASSIFICATION	6.0255588318010416E-5	DEFECT
// Configure the selector - only defaults are used	WITHOUT_CLASSIFICATION	0.9999873266057624	WITHOUT_CLASSIFICATION	1.2673394237512988E-5	DEFECT
//                     + "  <emptyElement></emptyElement>"	WITHOUT_CLASSIFICATION	0.9999538332094311	WITHOUT_CLASSIFICATION	4.616679056888234E-5	DEFECT
/* ============ ResourceFactory interface ====================== */	WITHOUT_CLASSIFICATION	0.9999928766298225	WITHOUT_CLASSIFICATION	7.12337017749236E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999569078800925	WITHOUT_CLASSIFICATION	4.309211990746606E-5	DEFECT
//class-BFT	WITHOUT_CLASSIFICATION	0.9996689878276196	WITHOUT_CLASSIFICATION	3.3101217238036464E-4	DEFECT
// do the actions	WITHOUT_CLASSIFICATION	0.9999948384479992	WITHOUT_CLASSIFICATION	5.161552000875537E-6	DEFECT
// don't catch the JUnit exceptions	WITHOUT_CLASSIFICATION	0.9999956047453239	WITHOUT_CLASSIFICATION	4.395254676142466E-6	DEFECT
// // *****  First Run  ***** // the first call should get all files, because nothing is in // the cache //	WITHOUT_CLASSIFICATION	0.9999819031502073	WITHOUT_CLASSIFICATION	1.8096849792672212E-5	DEFECT
// // *****  Second Run  ***** // the second call should get no files, because no content // has changed //	WITHOUT_CLASSIFICATION	0.9999861961538165	WITHOUT_CLASSIFICATION	1.3803846183477678E-5	DEFECT
// // *****  make some files dirty  ***** //	WITHOUT_CLASSIFICATION	0.9999953284653816	WITHOUT_CLASSIFICATION	4.6715346184048005E-6	DEFECT
// these files are made dirty --> 3+4 with different content	WITHOUT_CLASSIFICATION	0.9999837716326352	WITHOUT_CLASSIFICATION	1.622836736482395E-5	DEFECT
// AccessObject to the test-Ant-environment	WITHOUT_CLASSIFICATION	0.9999964335801521	WITHOUT_CLASSIFICATION	3.5664198478564002E-6	DEFECT
// give some values (via property file) to that environment	WITHOUT_CLASSIFICATION	0.9999952052056416	WITHOUT_CLASSIFICATION	4.794794358357039E-6	DEFECT
// call the target for making the files dirty	WITHOUT_CLASSIFICATION	0.9999968866772567	WITHOUT_CLASSIFICATION	3.1133227431720755E-6	DEFECT
// // *****  Third Run  ***** // third call should get only those files, which CONTENT changed // (no timestamp changes required!)	WITHOUT_CLASSIFICATION	0.9998941956735679	WITHOUT_CLASSIFICATION	1.0580432643211936E-4	DEFECT
// // *****  Check the result  ***** //	WITHOUT_CLASSIFICATION	0.9999917931561684	WITHOUT_CLASSIFICATION	8.20684383150901E-6	DEFECT
// Mark all files which should be selected as (T)rue and all others // as (F)alse. Directories are always selected so they always are // (T)rue.	WITHOUT_CLASSIFICATION	0.9999884282473648	WITHOUT_CLASSIFICATION	1.1571752635088943E-5	DEFECT
// f2name shouldn't be selected: only timestamp has changed!	WITHOUT_CLASSIFICATION	0.9993269779833198	WITHOUT_CLASSIFICATION	6.730220166801404E-4	DEFECT
// info text // list of files // expected result // result	WITHOUT_CLASSIFICATION	0.9999979851209262	WITHOUT_CLASSIFICATION	2.014879073881141E-6	DEFECT
// cleanup the environment	WITHOUT_CLASSIFICATION	0.9999915286763416	WITHOUT_CLASSIFICATION	8.471323658404432E-6	DEFECT
// cleanup the environment	WITHOUT_CLASSIFICATION	0.9999915286763416	WITHOUT_CLASSIFICATION	8.471323658404432E-6	DEFECT
// RuleBasedCollator not yet supported - see Selector:375 note	WITHOUT_CLASSIFICATION	0.9999798272923771	WITHOUT_CLASSIFICATION	2.0172707622935714E-5	DEFECT
//s.addParam(createParam("algorithm.provider","---")); // i don't know any valid	WITHOUT_CLASSIFICATION	0.9999873003664139	WITHOUT_CLASSIFICATION	1.2699633586009804E-5	DEFECT
// first and second run	WITHOUT_CLASSIFICATION	0.9999619583007495	WITHOUT_CLASSIFICATION	3.8041699250431473E-5	DEFECT
// make dirty	WITHOUT_CLASSIFICATION	0.9999845176271737	WITHOUT_CLASSIFICATION	1.548237282636545E-5	DEFECT
// third run	WITHOUT_CLASSIFICATION	0.9999010029180595	WITHOUT_CLASSIFICATION	9.899708194052674E-5	DEFECT
// the directories to check	WITHOUT_CLASSIFICATION	0.9999807926155692	WITHOUT_CLASSIFICATION	1.9207384430849768E-5	DEFECT
// do the checks	WITHOUT_CLASSIFICATION	0.9999760508808354	WITHOUT_CLASSIFICATION	2.3949119164564654E-5	DEFECT
//class-MockProject	WITHOUT_CLASSIFICATION	0.9998185691838797	WITHOUT_CLASSIFICATION	1.8143081612029204E-4	DEFECT
//class-ModifiedSelectorTest	WITHOUT_CLASSIFICATION	0.99995033273614	WITHOUT_CLASSIFICATION	4.9667263859974455E-5	DEFECT
// First read in zero bytes	WITHOUT_CLASSIFICATION	0.9999610713490413	WITHOUT_CLASSIFICATION	3.892865095869533E-5	DEFECT
// Now read in the string	WITHOUT_CLASSIFICATION	0.9999571928711989	WITHOUT_CLASSIFICATION	4.2807128801159305E-5	DEFECT
// Make sure that the counts are the same	WITHOUT_CLASSIFICATION	0.9999314611818387	WITHOUT_CLASSIFICATION	6.853881816129445E-5	DEFECT
// LineOrientedOutputStreamTest	WITHOUT_CLASSIFICATION	0.9999984367688601	WITHOUT_CLASSIFICATION	1.5632311398815679E-6	DEFECT
// make sure that elapsed time in set via date works	WITHOUT_CLASSIFICATION	0.9999797081865888	WITHOUT_CLASSIFICATION	2.029181341124443E-5	DEFECT
// make sure that elapsed time in ms works	WITHOUT_CLASSIFICATION	0.999913742496515	WITHOUT_CLASSIFICATION	8.625750348501262E-5	DEFECT
// should be new moon	WITHOUT_CLASSIFICATION	0.9999253390212351	WITHOUT_CLASSIFICATION	7.466097876478647E-5	DEFECT
// Try a silly case	WITHOUT_CLASSIFICATION	0.9997399119249666	WITHOUT_CLASSIFICATION	2.600880750334192E-4	DEFECT
// and a little longer	WITHOUT_CLASSIFICATION	0.9999825500107253	WITHOUT_CLASSIFICATION	1.744998927460189E-5	DEFECT
/*             * throw in drive letters             */	WITHOUT_CLASSIFICATION	0.9999597628793504	WITHOUT_CLASSIFICATION	4.023712064953107E-5	DEFECT
/*             * promised to eliminate consecutive slashes after drive letter.             */	WITHOUT_CLASSIFICATION	0.9999974489081253	WITHOUT_CLASSIFICATION	2.551091874885291E-6	DEFECT
/*             * Start with simple absolute file names.             */	WITHOUT_CLASSIFICATION	0.9999995856656058	WITHOUT_CLASSIFICATION	4.143343941997495E-7	DEFECT
/*             * Start with simple absolute file names.             */	WITHOUT_CLASSIFICATION	0.9999995856656058	WITHOUT_CLASSIFICATION	4.143343941997495E-7	DEFECT
/*         * Now test some relative file name magic.         */	WITHOUT_CLASSIFICATION	0.9999993674810167	WITHOUT_CLASSIFICATION	6.325189833171937E-7	DEFECT
/*         * Now test some relative file name magic.         */	WITHOUT_CLASSIFICATION	0.9999993674810167	WITHOUT_CLASSIFICATION	6.325189833171937E-7	DEFECT
// implies lastModified == 0	WITHOUT_CLASSIFICATION	0.9999990882023743	WITHOUT_CLASSIFICATION	9.117976257147692E-7	DEFECT
/* ============ FileNameMapper interface ======================= */	WITHOUT_CLASSIFICATION	0.9999941463212432	WITHOUT_CLASSIFICATION	5.85367875680217E-6	DEFECT
// Windows adds the drive letter in uppercase, unless you run Cygwin	WITHOUT_CLASSIFICATION	0.9999450864916405	WITHOUT_CLASSIFICATION	5.491350835951947E-5	DEFECT
/*         * Sleep for some time to make sure a touched file would get a         * more recent timestamp according to the file system's         * granularity (should be > 2s to account for Windows FAT).         */	WITHOUT_CLASSIFICATION	0.9998751093562643	WITHOUT_CLASSIFICATION	1.2489064373572115E-4	DEFECT
// number of milliseconds in a day	WITHOUT_CLASSIFICATION	0.9999656547728004	WITHOUT_CLASSIFICATION	3.434522719956925E-5	DEFECT
// in a previous version, the date of the file was set to 123456 // milliseconds since 01.01.1970 // it did not work on a computer running JDK 1.4.1_02 + Windows 2000	WITHOUT_CLASSIFICATION	0.9999551359390804	WITHOUT_CLASSIFICATION	4.486406091963526E-5	DEFECT
/*         * I would love to compare this with 123456, but depending on         * the filesystems granularity it can take an arbitrary value.         *         * Just assert the time has changed.         */	WITHOUT_CLASSIFICATION	0.9997599814807204	WITHOUT_CLASSIFICATION	2.400185192795381E-4	DEFECT
/*             * throw in NetWare volume names             */	WITHOUT_CLASSIFICATION	0.9999932015690852	WITHOUT_CLASSIFICATION	6.798430914753163E-6	DEFECT
/*             * throw in NetWare volume names             */	WITHOUT_CLASSIFICATION	0.9999932015690852	WITHOUT_CLASSIFICATION	6.798430914753163E-6	DEFECT
/*             * drive letters must be considered just normal filenames.             */	WITHOUT_CLASSIFICATION	0.9999998387061628	WITHOUT_CLASSIFICATION	1.6129383726302745E-7	DEFECT
// Passed test 	WITHOUT_CLASSIFICATION	0.99999601140088	WITHOUT_CLASSIFICATION	3.98859912001389E-6	DEFECT
// Expected exception caught	WITHOUT_CLASSIFICATION	0.9999708125918573	WITHOUT_CLASSIFICATION	2.9187408142736147E-5	DEFECT
// Expected exception caught	WITHOUT_CLASSIFICATION	0.9999708125918573	WITHOUT_CLASSIFICATION	2.9187408142736147E-5	DEFECT
// null parent dir	WITHOUT_CLASSIFICATION	0.9999912328868021	WITHOUT_CLASSIFICATION	8.76711319792182E-6	DEFECT
//preserve case on Cygwin when using 1.4 toURI:	WITHOUT_CLASSIFICATION	0.9994393273372408	WITHOUT_CLASSIFICATION	5.606726627591923E-4	DEFECT
// OK, Java 1.3.	WITHOUT_CLASSIFICATION	0.9999883143330599	WITHOUT_CLASSIFICATION	1.168566694005464E-5	DEFECT
//get a time	WITHOUT_CLASSIFICATION	0.9999169631491075	WITHOUT_CLASSIFICATION	8.303685089249928E-5	DEFECT
//add some time. We assume no OS has a granularity this bad	WITHOUT_CLASSIFICATION	0.9999624823075904	WITHOUT_CLASSIFICATION	3.7517692409511055E-5	DEFECT
/*        assertTrue("same timestamp is up to date",                fu.isUpToDate(firstTime, firstTime));                */	WITHOUT_CLASSIFICATION	0.9999968723394459	WITHOUT_CLASSIFICATION	3.127660554095642E-6	DEFECT
//check that older is up to date with a newer dest	WITHOUT_CLASSIFICATION	0.9999213532855692	WITHOUT_CLASSIFICATION	7.864671443070262E-5	DEFECT
//check that older is up to date with a newer dest	WITHOUT_CLASSIFICATION	0.9999213532855692	WITHOUT_CLASSIFICATION	7.864671443070262E-5	DEFECT
// This just tests that the function does not blow up	WITHOUT_CLASSIFICATION	0.9996533923318879	WITHOUT_CLASSIFICATION	3.4660766811204553E-4	DEFECT
// java.home is bogus	WITHOUT_CLASSIFICATION	0.9999966966162463	WITHOUT_CLASSIFICATION	3.303383753647904E-6	DEFECT
// could still be OS/2	WITHOUT_CLASSIFICATION	0.9999467002822229	WITHOUT_CLASSIFICATION	5.3299717777127224E-5	DEFECT
// 27224 = magic (a random port which is unlikely to be in use)	WITHOUT_CLASSIFICATION	0.9999991234019969	WITHOUT_CLASSIFICATION	8.765980031017156E-7	DEFECT
// order of headers cannot be guaranteed	WITHOUT_CLASSIFICATION	0.9999903994093302	WITHOUT_CLASSIFICATION	9.600590669685741E-6	DEFECT
// state engine: false=envelope, true=message	WITHOUT_CLASSIFICATION	0.9999756256029544	WITHOUT_CLASSIFICATION	2.4374397045561137E-5	DEFECT
// make sure there are no issues concerning line separator interpretation // a line separator for regex (perl) is always a unix line (ie \n)	WITHOUT_CLASSIFICATION	0.9999983576413057	WITHOUT_CLASSIFICATION	1.6423586943617574E-6	DEFECT
// sb.append( response + "\r\n" );	WITHOUT_CLASSIFICATION	0.9999718712473967	WITHOUT_CLASSIFICATION	2.8128752603325237E-5	DEFECT
// 60s // a further 30s	WITHOUT_CLASSIFICATION	0.9999933207761662	WITHOUT_CLASSIFICATION	6.679223833759141E-6	DEFECT
// 60s // a further 30s	WITHOUT_CLASSIFICATION	0.9999933207761662	WITHOUT_CLASSIFICATION	6.679223833759141E-6	DEFECT
// 60s // a further 30s	WITHOUT_CLASSIFICATION	0.9999933207761662	WITHOUT_CLASSIFICATION	6.679223833759141E-6	DEFECT
// 60s // a further 30s	WITHOUT_CLASSIFICATION	0.9999933207761662	WITHOUT_CLASSIFICATION	6.679223833759141E-6	DEFECT
// wait for connection	WITHOUT_CLASSIFICATION	0.9999286766805063	WITHOUT_CLASSIFICATION	7.132331949367264E-5	DEFECT
//throw new IllegalStateException("Command unrecognized: " //    + response);	WITHOUT_CLASSIFICATION	0.999948523043446	WITHOUT_CLASSIFICATION	5.147695655415764E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999675172071433	WITHOUT_CLASSIFICATION	3.2482792856694074E-5	DEFECT
// while	WITHOUT_CLASSIFICATION	0.9999390426031941	WITHOUT_CLASSIFICATION	6.095739680578045E-5	DEFECT
// CRC manually calculated, sorry // CRC // mode // link length // uid, gid	WITHOUT_CLASSIFICATION	0.9999969596294046	WITHOUT_CLASSIFICATION	3.0403705954709087E-6	DEFECT
// CRC manually calculated, sorry // CRC // mode // link length // uid, gid	WITHOUT_CLASSIFICATION	0.9999969596294046	WITHOUT_CLASSIFICATION	3.0403705954709087E-6	DEFECT
// CRC // mode // link length // uid, gid	WITHOUT_CLASSIFICATION	0.9999924629288834	WITHOUT_CLASSIFICATION	7.537071116524038E-6	DEFECT
// CRC // mode // link length // uid, gid	WITHOUT_CLASSIFICATION	0.9999924629288834	WITHOUT_CLASSIFICATION	7.537071116524038E-6	DEFECT
// CRC // mode // link // uid, gid	WITHOUT_CLASSIFICATION	0.9999815466782377	WITHOUT_CLASSIFICATION	1.8453321762301513E-5	DEFECT
// bad CRC // mode // link // uid, gid	WITHOUT_CLASSIFICATION	0.9999933279440094	WITHOUT_CLASSIFICATION	6.67205599055911E-6	DEFECT
//if we got here, all was well	WITHOUT_CLASSIFICATION	0.9999215384008893	WITHOUT_CLASSIFICATION	7.846159911074991E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999707121018232	WITHOUT_CLASSIFICATION	2.9287898176784134E-5	DEFECT
// CheckStyle:ConstantNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9999788311965451	WITHOUT_CLASSIFICATION	2.116880345488347E-5	DEFECT
// CheckStyle:ConstantNameCheck ON	WITHOUT_CLASSIFICATION	0.9999715123245112	WITHOUT_CLASSIFICATION	2.848767548871894E-5	DEFECT
// Filter out messages based on priority	WITHOUT_CLASSIFICATION	0.9999844607470204	WITHOUT_CLASSIFICATION	1.5539252979632832E-5	DEFECT
// Print out the name of the task if we're in one	WITHOUT_CLASSIFICATION	0.9999733002782213	WITHOUT_CLASSIFICATION	2.6699721778775392E-5	DEFECT
// shouldn't be possible	WITHOUT_CLASSIFICATION	0.9998926132219685	WITHOUT_CLASSIFICATION	1.0738677803139231E-4	DEFECT
// Set up PRIMITIVE_TYPE_MAP	WITHOUT_CLASSIFICATION	0.999969964348659	WITHOUT_CLASSIFICATION	3.0035651340955238E-5	DEFECT
// check of add[Configured](Class) pattern	WITHOUT_CLASSIFICATION	0.999986649374247	WITHOUT_CLASSIFICATION	1.3350625752977308E-5	DEFECT
// not really user settable properties on tasks/project components	WITHOUT_CLASSIFICATION	0.999772296544943	WITHOUT_CLASSIFICATION	2.27703455056918E-4	DEFECT
// hide addTask for TaskContainers	WITHOUT_CLASSIFICATION	0.9999769128850456	WITHOUT_CLASSIFICATION	2.3087114954331764E-5	DEFECT
// use wrappers for primitive classes, e.g. int and // Integer are treated identically	WITHOUT_CLASSIFICATION	0.9999989368302022	WITHOUT_CLASSIFICATION	1.0631697977820431E-6	DEFECT
// Check if a create of this property is already present // add takes preference over create for CB purposes	WITHOUT_CLASSIFICATION	0.999978572891624	WITHOUT_CLASSIFICATION	2.1427108376014194E-5	DEFECT
/*                         *  Ignore this method as there is an addConfigured                         *  form of this method that has a higher                         *  priority                         */	WITHOUT_CLASSIFICATION	0.9999712565811134	WITHOUT_CLASSIFICATION	2.8743418886585706E-5	DEFECT
// If a helper cannot be found, or if the helper is for another // classloader, create a new IH	WITHOUT_CLASSIFICATION	0.999997982238748	WITHOUT_CLASSIFICATION	2.017761251919419E-6	DEFECT
// Ignore attribute from unknown uri's	WITHOUT_CLASSIFICATION	0.9999661899597153	WITHOUT_CLASSIFICATION	3.3810040284668176E-5	DEFECT
// impossible as getMethods should only return public methods	WITHOUT_CLASSIFICATION	0.9999737319924409	WITHOUT_CLASSIFICATION	2.62680075590685E-5	DEFECT
// impossible as getMethods should only return public methods	WITHOUT_CLASSIFICATION	0.9999737319924409	WITHOUT_CLASSIFICATION	2.62680075590685E-5	DEFECT
// impossible as getMethods should only return public methods	WITHOUT_CLASSIFICATION	0.9999737319924409	WITHOUT_CLASSIFICATION	2.62680075590685E-5	DEFECT
// Element doesn't handle text content	WITHOUT_CLASSIFICATION	0.999919273075971	WITHOUT_CLASSIFICATION	8.072692402904042E-5	DEFECT
// Not whitespace - fail	WITHOUT_CLASSIFICATION	0.9999887423641294	WITHOUT_CLASSIFICATION	1.1257635870562417E-5	DEFECT
// Only whitespace - ignore	WITHOUT_CLASSIFICATION	0.9999937511052082	WITHOUT_CLASSIFICATION	6.24889479180461E-6	DEFECT
// Class doesn't have a String constructor but a decent factory method	WITHOUT_CLASSIFICATION	0.9999891689309893	WITHOUT_CLASSIFICATION	1.0831069010597904E-5	DEFECT
// char and Character get special treatment - take the first character	WITHOUT_CLASSIFICATION	0.999999423436541	WITHOUT_CLASSIFICATION	5.765634589999705E-7	DEFECT
// simplest case - setAttribute expects String	WITHOUT_CLASSIFICATION	0.999998613662674	WITHOUT_CLASSIFICATION	1.3863373260356487E-6	DEFECT
// First try with Project.	WITHOUT_CLASSIFICATION	0.9998491722255014	WITHOUT_CLASSIFICATION	1.508277744986343E-4	DEFECT
// EnumeratedAttributes have their own helper class	WITHOUT_CLASSIFICATION	0.9999790912822965	WITHOUT_CLASSIFICATION	2.0908717703475745E-5	DEFECT
// resolve relative paths through Project	WITHOUT_CLASSIFICATION	0.9999899205690744	WITHOUT_CLASSIFICATION	1.007943092557193E-5	DEFECT
/** Version to use for addXXX and addConfiguredXXX */	WITHOUT_CLASSIFICATION	0.9982678723120526	WITHOUT_CLASSIFICATION	0.001732127687947411	DEFECT
// Well, no matching constructor.	WITHOUT_CLASSIFICATION	0.9999979704060047	WITHOUT_CLASSIFICATION	2.029593995276066E-6	DEFECT
// OK, try without.	WITHOUT_CLASSIFICATION	0.9998070859039878	WITHOUT_CLASSIFICATION	1.9291409601212672E-4	DEFECT
// the method called to add/create the nested element	WITHOUT_CLASSIFICATION	0.999998590196871	WITHOUT_CLASSIFICATION	1.4098031289975235E-6	DEFECT
// DO NOTHING	WITHOUT_CLASSIFICATION	0.9998456166087715	WITHOUT_CLASSIFICATION	1.543833912284312E-4	DEFECT
// ADD or ADD_CONFIGURED	WITHOUT_CLASSIFICATION	0.9999716949226684	WITHOUT_CLASSIFICATION	2.8305077331698155E-5	DEFECT
// the method called to set the attribute	WITHOUT_CLASSIFICATION	0.9999973509707552	WITHOUT_CLASSIFICATION	2.6490292448089886E-6	DEFECT
// add configured replaces the add method	WITHOUT_CLASSIFICATION	0.9999964392585502	WITHOUT_CLASSIFICATION	3.5607414499414203E-6	DEFECT
// maintain a sorted list of targets	WITHOUT_CLASSIFICATION	0.9999989330404768	WITHOUT_CLASSIFICATION	1.066959523135816E-6	DEFECT
// worst case. look for a public String constructor and use it // also supports new Whatever(Project, String) as for Path or Reference // This is used (deliberately) for all primitives/wrappers other than // char and boolean	WITHOUT_CLASSIFICATION	0.9999954670818804	WITHOUT_CLASSIFICATION	4.532918119698205E-6	DEFECT
// Already present	WITHOUT_CLASSIFICATION	0.9999904663220104	WITHOUT_CLASSIFICATION	9.533677989568531E-6	DEFECT
// higher derived	WITHOUT_CLASSIFICATION	0.9999381888980842	WITHOUT_CLASSIFICATION	6.1811101915828E-5	DEFECT
// print the stacktrace in the build file it is always useful... // better have too much info than not enough.	WITHOUT_CLASSIFICATION	0.9999445376019852	WITHOUT_CLASSIFICATION	5.5462398014876616E-5	DEFECT
// specify output in UTF8 otherwise accented characters will blow // up everything	WITHOUT_CLASSIFICATION	0.9999851976645396	WITHOUT_CLASSIFICATION	1.4802335460296185E-5	DEFECT
/* For debugging purposes uncomment:        org.w3c.dom.Comment s = doc.createComment("stack=" + threadStack);        buildElement.element.appendChild(s);         */	WITHOUT_CLASSIFICATION	0.9999652154606342	WITHOUT_CLASSIFICATION	3.47845393657899E-5	DEFECT
// -------------------------------------------------- BuildLogger interface	WITHOUT_CLASSIFICATION	0.9999719055780976	WITHOUT_CLASSIFICATION	2.8094421902414113E-5	DEFECT
// Shouldn't happen	WITHOUT_CLASSIFICATION	0.9990985590186964	WITHOUT_CLASSIFICATION	9.014409813037199E-4	DEFECT
// LF is always end of line (i.e. CRLF or single LF)	WITHOUT_CLASSIFICATION	0.9999965226635456	WITHOUT_CLASSIFICATION	3.4773364544133877E-6	DEFECT
// CR without LF - send buffer then add char	WITHOUT_CLASSIFICATION	0.9999896502546644	WITHOUT_CLASSIFICATION	1.0349745335685806E-5	DEFECT
// add into buffer	WITHOUT_CLASSIFICATION	0.9999909430431981	WITHOUT_CLASSIFICATION	9.05695680183846E-6	DEFECT
// either end of buffer or a line separator char	WITHOUT_CLASSIFICATION	0.9999976375102171	WITHOUT_CLASSIFICATION	2.362489782999002E-6	DEFECT
// check adapter	WITHOUT_CLASSIFICATION	0.9999917337412446	WITHOUT_CLASSIFICATION	8.266258755447152E-6	DEFECT
//can throw the same exception, if there is no this(Project) ctor.	WITHOUT_CLASSIFICATION	0.9998272456869907	WITHOUT_CLASSIFICATION	1.7275431300938534E-4	DEFECT
//now we instantiate	WITHOUT_CLASSIFICATION	0.999951685156831	WITHOUT_CLASSIFICATION	4.8314843169090055E-5	DEFECT
//set up project references.	WITHOUT_CLASSIFICATION	0.9998807545331243	WITHOUT_CLASSIFICATION	1.1924546687569013E-4	DEFECT
/** Our current message output status. Follows Project.MSG_XXX. */	WITHOUT_CLASSIFICATION	0.9997691967035507	WITHOUT_CLASSIFICATION	2.3080329644934973E-4	DEFECT
/* null */	WITHOUT_CLASSIFICATION	0.9999178692475408	WITHOUT_CLASSIFICATION	8.213075245924548E-5	DEFECT
// expect the worst	WITHOUT_CLASSIFICATION	0.9999784454924602	WITHOUT_CLASSIFICATION	2.155450753990499E-5	DEFECT
//this is the list of lu	WITHOUT_CLASSIFICATION	0.9994786302153562	WITHOUT_CLASSIFICATION	5.213697846438703E-4	DEFECT
// cycle through given args	WITHOUT_CLASSIFICATION	0.9999985970298291	WITHOUT_CLASSIFICATION	1.402970170955533E-6	DEFECT
// set the flag to display the targets and quit	WITHOUT_CLASSIFICATION	0.9999373258195872	WITHOUT_CLASSIFICATION	6.267418041277739E-5	DEFECT
// eat up next arg if present, default to build.xml	WITHOUT_CLASSIFICATION	0.9999975146174034	WITHOUT_CLASSIFICATION	2.4853825966241895E-6	DEFECT
// we don't have any more args to recognize!	WITHOUT_CLASSIFICATION	0.9997911960338796	WITHOUT_CLASSIFICATION	2.0880396612039538E-4	DEFECT
// if it's no other arg, it may be the target	WITHOUT_CLASSIFICATION	0.9999980976076664	WITHOUT_CLASSIFICATION	1.902392333592996E-6	DEFECT
// if buildFile was not specified on the command line,	WITHOUT_CLASSIFICATION	0.9999879670333089	WITHOUT_CLASSIFICATION	1.203296669118121E-5	DEFECT
// but -find then search for it	WITHOUT_CLASSIFICATION	0.9999676892947924	WITHOUT_CLASSIFICATION	3.231070520756471E-5	DEFECT
// make sure buildfile exists	WITHOUT_CLASSIFICATION	0.9999950327170579	WITHOUT_CLASSIFICATION	4.967282942097521E-6	DEFECT
// make sure it's not a directory (this falls into the ultra // paranoid lets check everything category	WITHOUT_CLASSIFICATION	0.9999774379178051	WITHOUT_CLASSIFICATION	2.2562082194882897E-5	DEFECT
// Load the property files specified by -propertyfile	WITHOUT_CLASSIFICATION	0.999969112102166	WITHOUT_CLASSIFICATION	3.088789783401617E-5	DEFECT
// ensure that -D properties take precedence	WITHOUT_CLASSIFICATION	0.9999589228039462	WITHOUT_CLASSIFICATION	4.107719605384291E-5	DEFECT
// check if the target file exists in the current directory	WITHOUT_CLASSIFICATION	0.999979315724397	WITHOUT_CLASSIFICATION	2.0684275602950733E-5	DEFECT
// change to parent directory	WITHOUT_CLASSIFICATION	0.9999741604117157	WITHOUT_CLASSIFICATION	2.5839588284288045E-5	DEFECT
// refresh our file handle	WITHOUT_CLASSIFICATION	0.9999643786603502	WITHOUT_CLASSIFICATION	3.562133964997913E-5	DEFECT
// use a system manager that prevents from System.exit()	WITHOUT_CLASSIFICATION	0.9999574828125786	WITHOUT_CLASSIFICATION	4.251718742150399E-5	DEFECT
//SecurityManager can not be installed here for backwards //compatibility reasons (PD). Needs to be loaded prior to //ant class if we are going to implement it. //System.setSecurityManager(new NoExitSecurityManager());	WITHOUT_CLASSIFICATION	0.9999907965342788	WITHOUT_CLASSIFICATION	9.203465721233542E-6	DEFECT
// set the thread priorities	WITHOUT_CLASSIFICATION	0.999994674291546	WITHOUT_CLASSIFICATION	5.325708453951657E-6	DEFECT
//we cannot set the priority here.	WITHOUT_CLASSIFICATION	0.9997767863347112	WITHOUT_CLASSIFICATION	2.232136652887583E-4	DEFECT
// set user-define properties	WITHOUT_CLASSIFICATION	0.9999803457946006	WITHOUT_CLASSIFICATION	1.965420539930466E-5	DEFECT
//proxy setup if enabled	WITHOUT_CLASSIFICATION	0.9999631430276014	WITHOUT_CLASSIFICATION	3.685697239863708E-5	DEFECT
// make sure that we have a target to execute	WITHOUT_CLASSIFICATION	0.9999932969736124	WITHOUT_CLASSIFICATION	6.703026387594354E-6	DEFECT
// Add the default listener	WITHOUT_CLASSIFICATION	0.9999988017037575	WITHOUT_CLASSIFICATION	1.1982962424118632E-6	DEFECT
// find the target with the longest name	WITHOUT_CLASSIFICATION	0.9999831157089046	WITHOUT_CLASSIFICATION	1.6884291095396543E-5	DEFECT
// split the targets in top-level and sub-targets depending // on the presence of a description	WITHOUT_CLASSIFICATION	0.9999572376928205	WITHOUT_CLASSIFICATION	4.2762307179585575E-5	DEFECT
// shouldn't need to check but...	WITHOUT_CLASSIFICATION	0.9977349192720326	WITHOUT_CLASSIFICATION	0.002265080727967373	DEFECT
// now, start printing the targets and their descriptions	WITHOUT_CLASSIFICATION	0.999999365321466	WITHOUT_CLASSIFICATION	6.346785339252889E-7	DEFECT
// got a bit annoyed that I couldn't find a pad function	WITHOUT_CLASSIFICATION	0.9992741209908143	WITHOUT_CLASSIFICATION	7.258790091857246E-4	DEFECT
/*<String,String>*/	WITHOUT_CLASSIFICATION	0.9997741983339742	WITHOUT_CLASSIFICATION	2.258016660259664E-4	DEFECT
//At least one constructor is guaranteed to be there, but check anyway.	WITHOUT_CLASSIFICATION	0.9999843427133325	WITHOUT_CLASSIFICATION	1.565728666756775E-5	DEFECT
// is the zip file in the cache	WITHOUT_CLASSIFICATION	0.9999965606070481	WITHOUT_CLASSIFICATION	3.4393929518799427E-6	DEFECT
// store the token just read for next time	WITHOUT_CLASSIFICATION	0.9999696268995074	WITHOUT_CLASSIFICATION	3.0373100492575645E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999569078800925	WITHOUT_CLASSIFICATION	4.309211990746606E-5	DEFECT
// add the types of the parent project	WITHOUT_CLASSIFICATION	0.9999884455382874	WITHOUT_CLASSIFICATION	1.1554461712623829E-5	DEFECT
// ignore path elements which are not valid relative to the // project	WITHOUT_CLASSIFICATION	0.9999914380308957	WITHOUT_CLASSIFICATION	8.561969104248885E-6	DEFECT
// Expecting an exception to be thrown by this call: // IllegalArgumentException: wrong number of Arguments	WITHOUT_CLASSIFICATION	0.9982560091864164	WITHOUT_CLASSIFICATION	0.0017439908135836297	DEFECT
// we need to search the components of the path to see if we can // find the class we want.	WITHOUT_CLASSIFICATION	0.9999976385505761	WITHOUT_CLASSIFICATION	2.3614494239459026E-6	DEFECT
// default to the global setting and then see // if this class belongs to a package which has been // designated to use a specific loader first // (this one or the parent one)	WITHOUT_CLASSIFICATION	0.9999986411559291	WITHOUT_CLASSIFICATION	1.358844071038816E-6	DEFECT
// we need to search the components of the path to see if // we can find the class we want.	WITHOUT_CLASSIFICATION	0.9999979982307747	WITHOUT_CLASSIFICATION	2.0017692252070493E-6	DEFECT
// try and load from this loader if the parent either didn't find // it or wasn't consulted.	WITHOUT_CLASSIFICATION	0.999986640977465	WITHOUT_CLASSIFICATION	1.3359022534965036E-5	DEFECT
// this loader was first but it didn't find it - try the parent	WITHOUT_CLASSIFICATION	0.9999433057924193	WITHOUT_CLASSIFICATION	5.6694207580594704E-5	DEFECT
/*<URL>*/	WITHOUT_CLASSIFICATION	0.9996421222278228	WITHOUT_CLASSIFICATION	3.5787777217725464E-4	DEFECT
/*<URL>*/	WITHOUT_CLASSIFICATION	0.9996421222278228	WITHOUT_CLASSIFICATION	3.5787777217725464E-4	DEFECT
/*<URL>*/	WITHOUT_CLASSIFICATION	0.9996421222278228	WITHOUT_CLASSIFICATION	3.5787777217725464E-4	DEFECT
// Delegate to the parent:	WITHOUT_CLASSIFICATION	0.9999752297682296	WITHOUT_CLASSIFICATION	2.477023177043807E-5	DEFECT
// Note: could cause overlaps in case ClassLoader.this.parent has matches.	WITHOUT_CLASSIFICATION	0.9999559583004329	WITHOUT_CLASSIFICATION	4.404169956699193E-5	DEFECT
// ClassLoader.this.parent is already delegated to from // ClassLoader.getResources, no need:	WITHOUT_CLASSIFICATION	0.9999997560578312	WITHOUT_CLASSIFICATION	2.4394216879732696E-7	DEFECT
// Normal case.	WITHOUT_CLASSIFICATION	0.999983677261788	WITHOUT_CLASSIFICATION	1.6322738211992448E-5	DEFECT
// Inverted.	WITHOUT_CLASSIFICATION	0.9999761792402874	WITHOUT_CLASSIFICATION	2.3820759712739975E-5	DEFECT
// already defined	WITHOUT_CLASSIFICATION	0.999990237042788	WITHOUT_CLASSIFICATION	9.762957212053265E-6	DEFECT
// define the package now	WITHOUT_CLASSIFICATION	0.9999881527813634	WITHOUT_CLASSIFICATION	1.1847218636592394E-5	DEFECT
// ioe.printStackTrace();	WITHOUT_CLASSIFICATION	0.999998625543225	WITHOUT_CLASSIFICATION	1.374456774889492E-6	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.998803732051834	WITHOUT_CLASSIFICATION	0.0011962679481660166	DEFECT
// Not significant for the class loader.	WITHOUT_CLASSIFICATION	0.9999926089988381	WITHOUT_CLASSIFICATION	7.391001161779374E-6	DEFECT
// Not significant for the class loader.	WITHOUT_CLASSIFICATION	0.9999926089988381	WITHOUT_CLASSIFICATION	7.391001161779374E-6	DEFECT
// {tasks, types}	WITHOUT_CLASSIFICATION	0.9999923940759083	WITHOUT_CLASSIFICATION	7.605924091605754E-6	DEFECT
// add the parsed namespaces of the parent project	WITHOUT_CLASSIFICATION	0.9999983542593016	WITHOUT_CLASSIFICATION	1.6457406984416976E-6	DEFECT
// we need to search the components of the path to see if // we can find the class we want.	WITHOUT_CLASSIFICATION	0.9999979982307747	WITHOUT_CLASSIFICATION	2.0017692252070493E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999675172071433	WITHOUT_CLASSIFICATION	3.2482792856694074E-5	DEFECT
// don't have to check for public, since // getConstructor finds public constructors only.	WITHOUT_CLASSIFICATION	0.999963849685099	WITHOUT_CLASSIFICATION	3.6150314900979923E-5	DEFECT
// set default value, can be changed by the user	WITHOUT_CLASSIFICATION	0.9999998251735382	WITHOUT_CLASSIFICATION	1.7482646188013188E-7	DEFECT
//too bad	WITHOUT_CLASSIFICATION	0.9997827946536649	WITHOUT_CLASSIFICATION	2.1720534633497927E-4	DEFECT
//must have same validity; then if they are valid they must also be the same:	WITHOUT_CLASSIFICATION	0.9997186683276413	WITHOUT_CLASSIFICATION	2.813316723586994E-4	DEFECT
// namespace that does not contain antlib	WITHOUT_CLASSIFICATION	0.9999958011626211	WITHOUT_CLASSIFICATION	4.19883737889241E-6	DEFECT
// Already processed	WITHOUT_CLASSIFICATION	0.9999985139983075	WITHOUT_CLASSIFICATION	1.486001692568196E-6	DEFECT
//there to stop error messages being "null"	WITHOUT_CLASSIFICATION	0.9999167768006074	WITHOUT_CLASSIFICATION	8.322319939254096E-5	DEFECT
//if this is left out, bad things happen. like all build files break //on the first element encountered.	WITHOUT_CLASSIFICATION	0.9989437760035359	WITHOUT_CLASSIFICATION	0.0010562239964640979	DEFECT
// a fishing expedition :- ignore errors if antlib not present	WITHOUT_CLASSIFICATION	0.9998941009110472	WITHOUT_CLASSIFICATION	1.0589908895274586E-4	DEFECT
//class of problem	WITHOUT_CLASSIFICATION	0.9998925970040471	WITHOUT_CLASSIFICATION	1.0740299595294614E-4	DEFECT
//running under an IDE that doesn't set ANT_HOME	WITHOUT_CLASSIFICATION	0.9995983113016184	WITHOUT_CLASSIFICATION	4.016886983815769E-4	DEFECT
//look up the name	WITHOUT_CLASSIFICATION	0.999964788866005	WITHOUT_CLASSIFICATION	3.5211133994898685E-5	DEFECT
//we are defined, so it is an instantiation problem	WITHOUT_CLASSIFICATION	0.9999268764077399	WITHOUT_CLASSIFICATION	7.312359226014449E-5	DEFECT
//start with instantiating the class.	WITHOUT_CLASSIFICATION	0.9997842614446886	WITHOUT_CLASSIFICATION	2.157385553114167E-4	DEFECT
//here we successfully loaded the class or failed.	WITHOUT_CLASSIFICATION	0.9999036786975839	WITHOUT_CLASSIFICATION	9.632130241607158E-5	DEFECT
//success: proceed with more steps	WITHOUT_CLASSIFICATION	0.9999561885832323	WITHOUT_CLASSIFICATION	4.381141676764307E-5	DEFECT
//hey, there is nothing wrong with us	WITHOUT_CLASSIFICATION	0.9798074940754148	WITHOUT_CLASSIFICATION	0.020192505924585154	DEFECT
/*<Thread,Task>*/	WITHOUT_CLASSIFICATION	0.999754027925241	WITHOUT_CLASSIFICATION	2.459720747589347E-4	DEFECT
/*<ThreadGroup,Task>*/	WITHOUT_CLASSIFICATION	0.9996537269469831	WITHOUT_CLASSIFICATION	3.462730530169237E-4	DEFECT
// If the listeners already has this listener, do nothing	WITHOUT_CLASSIFICATION	0.9999422164308689	WITHOUT_CLASSIFICATION	5.778356913114239E-5	DEFECT
// we need to build the hashtable dynamically	WITHOUT_CLASSIFICATION	0.9999843742427446	WITHOUT_CLASSIFICATION	1.562575725541419E-5	DEFECT
// sanity check	WITHOUT_CLASSIFICATION	0.999985036299932	WITHOUT_CLASSIFICATION	1.4963700067971542E-5	DEFECT
//try the current classloader	WITHOUT_CLASSIFICATION	0.9998808515332035	WITHOUT_CLASSIFICATION	1.191484667964246E-4	DEFECT
// throw further	WITHOUT_CLASSIFICATION	0.9997731382688173	WITHOUT_CLASSIFICATION	2.268617311826755E-4	DEFECT
// only the first build exception is reported	WITHOUT_CLASSIFICATION	0.9999680914506432	WITHOUT_CLASSIFICATION	3.190854935675258E-5	DEFECT
// Make sure we exist	WITHOUT_CLASSIFICATION	0.9999941238596199	WITHOUT_CLASSIFICATION	5.876140380133694E-6	DEFECT
// Currently visiting this node, so have a cycle	WITHOUT_CLASSIFICATION	0.9999825106543739	WITHOUT_CLASSIFICATION	1.7489345626033847E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999675172071433	WITHOUT_CLASSIFICATION	3.2482792856694074E-5	DEFECT
// create a new Vector to avoid ConcurrentModificationExc when // the listeners get added/removed while we are in fire	WITHOUT_CLASSIFICATION	0.9999826622658555	WITHOUT_CLASSIFICATION	1.733773414446638E-5	DEFECT
// sanity check ourselves, if we've been asked to build nothing // then we should complain	WITHOUT_CLASSIFICATION	0.9999594326205413	WITHOUT_CLASSIFICATION	4.056737945875934E-5	DEFECT
// Sort and run the dependency tree. // Sorting checks if all the targets (and dependencies) // exist, and if there is any cycle in the dependency // graph.	WITHOUT_CLASSIFICATION	0.9999978223352997	WITHOUT_CLASSIFICATION	2.177664700350725E-6	DEFECT
// We first run a DFS based sort using each root as a starting node. // This creates the minimum sequence of Targets to the root node(s). // We then do a sort on any remaining unVISITED targets. // This is unnecessary for doing our build, but it catches // circular dependencies or missing Targets on the entire // dependency tree, not just on the Targets that depend on the // build Target.	WITHOUT_CLASSIFICATION	0.9995418148873099	WITHOUT_CLASSIFICATION	4.581851126901855E-4	DEFECT
// no warning, this is not changing anything	WITHOUT_CLASSIFICATION	0.9999822450378777	WITHOUT_CLASSIFICATION	1.7754962122319392E-5	DEFECT
// Check for old id behaviour	WITHOUT_CLASSIFICATION	0.9999820766683828	WITHOUT_CLASSIFICATION	1.79233316172736E-5	DEFECT
// Inform IH to clear the cache	WITHOUT_CLASSIFICATION	0.9999943873973648	WITHOUT_CLASSIFICATION	5.612602635207034E-6	DEFECT
// register this as the current task on the current thread.	WITHOUT_CLASSIFICATION	0.9998135004958612	WITHOUT_CLASSIFICATION	1.8649950413887652E-4	DEFECT
// Make sure that	WITHOUT_CLASSIFICATION	0.9999778380622119	WITHOUT_CLASSIFICATION	2.2161937788189182E-5	DEFECT
// ignore this if the object does not have // a set project method or the method // is private/protected.	WITHOUT_CLASSIFICATION	0.9999969677312216	WITHOUT_CLASSIFICATION	3.032268778400185E-6	DEFECT
//override facility for subclasses to put custom hashtables in	WITHOUT_CLASSIFICATION	0.9998946060342114	WITHOUT_CLASSIFICATION	1.053939657885399E-4	DEFECT
// --------------------  Hook management  --------------------	WITHOUT_CLASSIFICATION	0.9999618011979766	WITHOUT_CLASSIFICATION	3.819880202328895E-5	DEFECT
// --------------------  Methods to override  --------------------	WITHOUT_CLASSIFICATION	0.9999909357317631	WITHOUT_CLASSIFICATION	9.064268236868103E-6	DEFECT
// If next has handled the property	WITHOUT_CLASSIFICATION	0.9998882756742442	WITHOUT_CLASSIFICATION	1.1172432575570948E-4	DEFECT
// try to get it from the project or keys // Backward compatibility	WITHOUT_CLASSIFICATION	0.9999906686982873	WITHOUT_CLASSIFICATION	9.331301712632564E-6	DEFECT
// -------------------- Default implementation  -------------------- // Methods used to support the default behavior and provide backward // compatibility. Some will be deprecated, you should avoid calling them.	WITHOUT_CLASSIFICATION	0.9999873907428913	WITHOUT_CLASSIFICATION	1.2609257108571664E-5	DEFECT
// user (CLI) properties take precedence	WITHOUT_CLASSIFICATION	0.9999834905232493	WITHOUT_CLASSIFICATION	1.6509476750649945E-5	DEFECT
// -------------------- Getting properties  --------------------	WITHOUT_CLASSIFICATION	0.9999352939979541	WITHOUT_CLASSIFICATION	6.470600204579803E-5	DEFECT
// -------------------- Property parsing  -------------------- // Moved from ProjectHelper. You can override the static method - // this is used for backward compatibility (for code that calls // the parse method in ProjectHelper).	WITHOUT_CLASSIFICATION	0.9999843172484498	WITHOUT_CLASSIFICATION	1.5682751550181504E-5	DEFECT
//search for the next instance of $ from the 'prev' position	WITHOUT_CLASSIFICATION	0.9999912823292032	WITHOUT_CLASSIFICATION	8.717670796825328E-6	DEFECT
//if we are at the end of the string, we tack on a $ //then move past it	WITHOUT_CLASSIFICATION	0.9995826985375242	WITHOUT_CLASSIFICATION	4.173014624758216E-4	DEFECT
//peek ahead to see if the next char is a property or not //not a property: insert the char as a literal	WITHOUT_CLASSIFICATION	0.9996891894822352	WITHOUT_CLASSIFICATION	3.1081051776489656E-4	DEFECT
//backwards compatibility two $ map to one mode	WITHOUT_CLASSIFICATION	0.99991481422701	WITHOUT_CLASSIFICATION	8.518577298997276E-5	DEFECT
//new behaviour: $X maps to $X for all values of X!='$'	WITHOUT_CLASSIFICATION	0.9996995989802785	WITHOUT_CLASSIFICATION	3.004010197214938E-4	DEFECT
//property found, extract its name or bail on a typo	WITHOUT_CLASSIFICATION	0.9997248217068297	WITHOUT_CLASSIFICATION	2.751782931702036E-4	DEFECT
//no more $ signs found //if there is any tail to the file, append it	WITHOUT_CLASSIFICATION	0.9999306629243798	WITHOUT_CLASSIFICATION	6.933707562019568E-5	DEFECT
//empty	WITHOUT_CLASSIFICATION	0.9994888535314366	WITHOUT_CLASSIFICATION	5.111464685634536E-4	DEFECT
// The children are added to after this cloning	WITHOUT_CLASSIFICATION	0.9996786617565483	WITHOUT_CLASSIFICATION	3.213382434517596E-4	DEFECT
// Make sure the dependency is not empty string	WITHOUT_CLASSIFICATION	0.9999650275077959	WITHOUT_CLASSIFICATION	3.497249220411211E-5	DEFECT
// Make sure that depends attribute does not // end in a ,	WITHOUT_CLASSIFICATION	0.9999923495590448	WITHOUT_CLASSIFICATION	7.650440955175227E-6	DEFECT
// A project helper may process multiple files. We'll keep track // of them - to avoid loops and to allow caching. The caching will // probably accelerate things like <antCall>. // The key is the absolute file, the value is a processed tree. // Since the tree is composed of UE and RC - it can be reused ! // protected Hashtable processedFiles=new Hashtable();	WITHOUT_CLASSIFICATION	0.9999999320816104	WITHOUT_CLASSIFICATION	6.791838957522129E-8	DEFECT
//    public Hashtable getProcessedFiles() { //        return processedFiles; //    }	WITHOUT_CLASSIFICATION	0.9999996697661758	WITHOUT_CLASSIFICATION	3.3023382420641946E-7	DEFECT
// --------------------  Parse method  --------------------	WITHOUT_CLASSIFICATION	0.9999962668234692	WITHOUT_CLASSIFICATION	3.733176530912957E-6	DEFECT
// Identify the class loader we will be using. Ant may be // in a webapp or embedded in a different app	WITHOUT_CLASSIFICATION	0.9999879032101211	WITHOUT_CLASSIFICATION	1.2096789878940162E-5	DEFECT
// First, try the system property	WITHOUT_CLASSIFICATION	0.9990425610390998	WITHOUT_CLASSIFICATION	9.574389609000473E-4	DEFECT
// A JDK1.3 'service' ( like in JAXP ). That will plug a helper // automatically if in CLASSPATH, with the right META-INF/services.	WITHOUT_CLASSIFICATION	0.9998773073089852	WITHOUT_CLASSIFICATION	1.22692691014779E-4	DEFECT
// This code is needed by EBCDIC and other strange systems. // It's a fix for bugs reported in xerces	WITHOUT_CLASSIFICATION	0.9979618119539437	WITHOUT_CLASSIFICATION	0.00203818804605626	DEFECT
// try next method	WITHOUT_CLASSIFICATION	0.9999809507399787	WITHOUT_CLASSIFICATION	1.9049260021311262E-5	DEFECT
// -------------------- Static utils, used by most helpers ----------------	WITHOUT_CLASSIFICATION	0.9999984162065153	WITHOUT_CLASSIFICATION	1.5837934846650437E-6	DEFECT
// reflect these into the target	WITHOUT_CLASSIFICATION	0.9999962189052201	WITHOUT_CLASSIFICATION	3.781094780072573E-6	DEFECT
// id attribute must be set externally	WITHOUT_CLASSIFICATION	0.9999973503966874	WITHOUT_CLASSIFICATION	2.649603312644937E-6	DEFECT
// needed since project properties are not accessible	WITHOUT_CLASSIFICATION	0.9999843798908561	WITHOUT_CLASSIFICATION	1.5620109143949252E-5	DEFECT
/*<UnknownElement>*/	WITHOUT_CLASSIFICATION	0.9996086064518753	WITHOUT_CLASSIFICATION	3.913935481246981E-4	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999569078800925	WITHOUT_CLASSIFICATION	4.309211990746606E-5	DEFECT
/*<String,String>*/	WITHOUT_CLASSIFICATION	0.9997741983339742	WITHOUT_CLASSIFICATION	2.258016660259664E-4	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.998803732051834	WITHOUT_CLASSIFICATION	0.0011962679481660166	DEFECT
// reflect these into the target	WITHOUT_CLASSIFICATION	0.9999962189052201	WITHOUT_CLASSIFICATION	3.781094780072573E-6	DEFECT
// id attribute must be set externally	WITHOUT_CLASSIFICATION	0.9999973503966874	WITHOUT_CLASSIFICATION	2.649603312644937E-6	DEFECT
// Attributes	WITHOUT_CLASSIFICATION	0.9999926496169332	WITHOUT_CLASSIFICATION	7.35038306665797E-6	DEFECT
// configure attributes of the object and it's children. If it is // a task container, defer the configuration till the task container // attempts to use the task	WITHOUT_CLASSIFICATION	0.9999831770644109	WITHOUT_CLASSIFICATION	1.682293558910542E-5	DEFECT
// plain impossible to get here, maybeConfigure should // have thrown an exception.	WITHOUT_CLASSIFICATION	0.9994836050149578	WITHOUT_CLASSIFICATION	5.163949850422087E-4	DEFECT
// Finished executing the task, null it to allow // GC do its job // If this UE is used again, a new "realthing" will be made	WITHOUT_CLASSIFICATION	0.9999898435140413	WITHOUT_CLASSIFICATION	1.0156485958776878E-5	DEFECT
// Do the runtime	WITHOUT_CLASSIFICATION	0.9999132646363935	WITHOUT_CLASSIFICATION	8.673536360649402E-5	DEFECT
// UnknownElement always has an associated target	WITHOUT_CLASSIFICATION	0.999997872480022	WITHOUT_CLASSIFICATION	2.127519977937395E-6	DEFECT
//return elementName;	WITHOUT_CLASSIFICATION	0.9999804989511807	WITHOUT_CLASSIFICATION	1.9501048819372625E-5	DEFECT
// Are the names the same ?	WITHOUT_CLASSIFICATION	0.999994529115476	WITHOUT_CLASSIFICATION	5.470884523947231E-6	DEFECT
// Are attributes the same ?	WITHOUT_CLASSIFICATION	0.9999929806764064	WITHOUT_CLASSIFICATION	7.019323593677775E-6	DEFECT
// Are the sub elements the same ?	WITHOUT_CLASSIFICATION	0.9999873428440964	WITHOUT_CLASSIFICATION	1.2657155903616408E-5	DEFECT
// hidden constructor	WITHOUT_CLASSIFICATION	0.9999843955673422	WITHOUT_CLASSIFICATION	1.560443265790774E-5	DEFECT
//create the file	WITHOUT_CLASSIFICATION	0.9999545997607866	WITHOUT_CLASSIFICATION	4.540023921347582E-5	DEFECT
//do some writing to it	WITHOUT_CLASSIFICATION	0.9998333182417861	WITHOUT_CLASSIFICATION	1.6668175821397315E-4	DEFECT
//calendar stuff.	WITHOUT_CLASSIFICATION	0.9999823730960368	WITHOUT_CLASSIFICATION	1.7626903963303077E-5	DEFECT
//not included, do nothing	WITHOUT_CLASSIFICATION	0.9998560741426029	WITHOUT_CLASSIFICATION	1.4392585739700204E-4	DEFECT
// not included, to nothing	WITHOUT_CLASSIFICATION	0.9999740714222465	WITHOUT_CLASSIFICATION	2.5928577753556466E-5	DEFECT
/*<RuntimeConfigurable>*/	WITHOUT_CLASSIFICATION	0.99990707572596	WITHOUT_CLASSIFICATION	9.292427403991224E-5	DEFECT
/*<String>*/	WITHOUT_CLASSIFICATION	0.9997718331702622	WITHOUT_CLASSIFICATION	2.2816682973776469E-4	DEFECT
// Configure the object	WITHOUT_CLASSIFICATION	0.9999649395386222	WITHOUT_CLASSIFICATION	3.5060461377712836E-5	DEFECT
// Most likely an UnknownElement	WITHOUT_CLASSIFICATION	0.9999891208213683	WITHOUT_CLASSIFICATION	1.0879178631666525E-5	DEFECT
// Children (this is a shadow of UnknownElement#children)	WITHOUT_CLASSIFICATION	0.9999208141799929	WITHOUT_CLASSIFICATION	7.918582000709728E-5	DEFECT
// poly type	WITHOUT_CLASSIFICATION	0.9999528747738199	WITHOUT_CLASSIFICATION	4.712522618014937E-5	DEFECT
// Text	WITHOUT_CLASSIFICATION	0.9997901810995031	WITHOUT_CLASSIFICATION	2.098189004969087E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999707121018232	WITHOUT_CLASSIFICATION	2.9287898176784134E-5	DEFECT
// store the token just read for next time	WITHOUT_CLASSIFICATION	0.9999696268995074	WITHOUT_CLASSIFICATION	3.0373100492575645E-5	DEFECT
// a task container - anything could happen - just add the // child to the container	WITHOUT_CLASSIFICATION	0.9999561811700199	WITHOUT_CLASSIFICATION	4.381882998006289E-5	DEFECT
// Is the text the same? //   Need to use equals on the string and not //   on the stringbuffer as equals on the string buffer //   does not compare the contents.	WITHOUT_CLASSIFICATION	0.9999601918012694	WITHOUT_CLASSIFICATION	3.9808198730594876E-5	DEFECT
// Assume that this is an not supported attribute type // thrown for example by a dymanic attribute task // Do nothing	WITHOUT_CLASSIFICATION	0.9999907270978492	WITHOUT_CLASSIFICATION	9.272902150714086E-6	DEFECT
// on Windows and Unix, we can ignore delimiters and still have // enough information to tokenize correctly.	WITHOUT_CLASSIFICATION	0.9984499302327783	WITHOUT_CLASSIFICATION	0.0015500697672217387	DEFECT
// we are on a dos style system so this path could be a drive // spec. We look at the next token	WITHOUT_CLASSIFICATION	0.9997012966096186	WITHOUT_CLASSIFICATION	2.987033903814354E-4	DEFECT
// we know we are on a DOS style platform and the next path // starts with a slash or backslash, so we know this is a // drive spec	WITHOUT_CLASSIFICATION	0.9999059077699183	WITHOUT_CLASSIFICATION	9.409223008163592E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999675172071433	WITHOUT_CLASSIFICATION	3.2482792856694074E-5	DEFECT
// ignore ";" and get the next token	WITHOUT_CLASSIFICATION	0.9999783968156113	WITHOUT_CLASSIFICATION	2.1603184388772784E-5	DEFECT
// this path could be a drive spec, so look at the next token	WITHOUT_CLASSIFICATION	0.9999805763807401	WITHOUT_CLASSIFICATION	1.9423619259869925E-5	DEFECT
// it indeed is a drive spec, get the next bit	WITHOUT_CLASSIFICATION	0.9999981804559628	WITHOUT_CLASSIFICATION	1.8195440371977029E-6	DEFECT
// implicit else: ignore the ':' since we have either a // UNIX or a relative path	WITHOUT_CLASSIFICATION	0.9999563155158786	WITHOUT_CLASSIFICATION	4.3684484121312006E-5	DEFECT
// Miscellaneous typical temporary files	WITHOUT_CLASSIFICATION	0.9999995994584373	WITHOUT_CLASSIFICATION	4.0054156261355706E-7	DEFECT
// CVS	WITHOUT_CLASSIFICATION	0.999941057729441	WITHOUT_CLASSIFICATION	5.894227055906903E-5	DEFECT
// SCCS	WITHOUT_CLASSIFICATION	0.9999209774060163	WITHOUT_CLASSIFICATION	7.902259398369734E-5	DEFECT
// Visual SourceSafe	WITHOUT_CLASSIFICATION	0.9999860302767066	WITHOUT_CLASSIFICATION	1.3969723293433957E-5	DEFECT
// Subversion	WITHOUT_CLASSIFICATION	0.99995083030967	WITHOUT_CLASSIFICATION	4.91696903300958E-5	DEFECT
// set in/excludes to reasonable defaults if needed:	WITHOUT_CLASSIFICATION	0.9999889665683732	WITHOUT_CLASSIFICATION	1.1033431626749083E-5	DEFECT
// if no basedir and no includes, nothing to do:	WITHOUT_CLASSIFICATION	0.9999953774210376	WITHOUT_CLASSIFICATION	4.62257896243242E-6	DEFECT
//skip abs. paths not under basedir, if set:	WITHOUT_CLASSIFICATION	0.999808774377638	WITHOUT_CLASSIFICATION	1.9122562236206057E-4	DEFECT
//skip non-abs. paths if basedir == null:	WITHOUT_CLASSIFICATION	0.9999025505899927	WITHOUT_CLASSIFICATION	9.744941000726013E-5	DEFECT
// we are going to scan everything anyway	WITHOUT_CLASSIFICATION	0.9999958659426558	WITHOUT_CLASSIFICATION	4.134057344228936E-6	DEFECT
// Empty	WITHOUT_CLASSIFICATION	0.999909408276156	WITHOUT_CLASSIFICATION	9.05917238440131E-5	DEFECT
// will be caught and redirected to Ant's logging system	WITHOUT_CLASSIFICATION	0.9997974446341318	WITHOUT_CLASSIFICATION	2.0255536586827384E-4	DEFECT
// will be caught and redirected to Ant's logging system	WITHOUT_CLASSIFICATION	0.9997974446341318	WITHOUT_CLASSIFICATION	2.0255536586827384E-4	DEFECT
//removing base from path yields no change; path not child of base	WITHOUT_CLASSIFICATION	0.9993720107892246	WITHOUT_CLASSIFICATION	6.279892107754708E-4	DEFECT
/* package-private */	WITHOUT_CLASSIFICATION	0.9999972544987836	WITHOUT_CLASSIFICATION	2.7455012164265073E-6	DEFECT
// do the "singleton" initialization	WITHOUT_CLASSIFICATION	0.999952639672552	WITHOUT_CLASSIFICATION	4.73603274479722E-5	DEFECT
// Add the explicit resource collections to the archive.	WITHOUT_CLASSIFICATION	0.9999952300672846	WITHOUT_CLASSIFICATION	4.7699327152908695E-6	DEFECT
// EOL was "\r\n"	WITHOUT_CLASSIFICATION	0.999952862078246	WITHOUT_CLASSIFICATION	4.713792175412634E-5	DEFECT
// don't have to check for interface, since then // taskClass would be abstract too.	WITHOUT_CLASSIFICATION	0.9999058970321911	WITHOUT_CLASSIFICATION	9.410296780882977E-5	DEFECT
// ignore this if the class being used as a task does not have // a set location method.	WITHOUT_CLASSIFICATION	0.999958127231814	WITHOUT_CLASSIFICATION	4.1872768186069214E-5	DEFECT
// ignore this if the class being used as a task does not have // a set project method.	WITHOUT_CLASSIFICATION	0.9999909928716949	WITHOUT_CLASSIFICATION	9.007128305171765E-6	DEFECT
// put in the newroots map the include patterns without // wildcard tokens	WITHOUT_CLASSIFICATION	0.9999913751290864	WITHOUT_CLASSIFICATION	8.62487091355215E-6	DEFECT
// only scan directories that can include matched files or // directories	WITHOUT_CLASSIFICATION	0.9999943757997586	WITHOUT_CLASSIFICATION	5.624200241478007E-6	DEFECT
// may be on a case insensitive file system.  We want // the results to show what's really on the disk, so // we need to double check.	WITHOUT_CLASSIFICATION	0.9999643713072769	WITHOUT_CLASSIFICATION	3.562869272301401E-5	DEFECT
// adapt currentelement to the case we've // actually found	WITHOUT_CLASSIFICATION	0.9999276279389464	WITHOUT_CLASSIFICATION	7.23720610535779E-5	DEFECT
// I am the only one so I have to close the reader	WITHOUT_CLASSIFICATION	0.9964238397586617	WITHOUT_CLASSIFICATION	0.0035761602413382637	DEFECT
// I am the only one so I have to close the reader	WITHOUT_CLASSIFICATION	0.9964238397586617	WITHOUT_CLASSIFICATION	0.0035761602413382637	DEFECT
// get parameters	WITHOUT_CLASSIFICATION	0.9999990894935211	WITHOUT_CLASSIFICATION	9.1050647892691E-7	DEFECT
// Calculate the EOL string per the current config	WITHOUT_CLASSIFICATION	0.9999319252782166	WITHOUT_CLASSIFICATION	6.807472178333105E-5	DEFECT
// assume (eol == CrLf.LF || eol == CrLf.UNIX)	WITHOUT_CLASSIFICATION	0.9999931233825343	WITHOUT_CLASSIFICATION	6.876617465783905E-6	DEFECT
// Add/Remove tabs	WITHOUT_CLASSIFICATION	0.9999925249937816	WITHOUT_CLASSIFICATION	7.4750062183934535E-6	DEFECT
// Add missing EOF character	WITHOUT_CLASSIFICATION	0.9999953619474192	WITHOUT_CLASSIFICATION	4.638052580790943E-6	DEFECT
// Mask, block from being edited, all characters in constants.	WITHOUT_CLASSIFICATION	0.9999560025440332	WITHOUT_CLASSIFICATION	4.3997455966944105E-5	DEFECT
// The current character is always emitted.	WITHOUT_CLASSIFICATION	0.9999624029770485	WITHOUT_CLASSIFICATION	3.7597022951543585E-5	DEFECT
// Fall tru	WITHOUT_CLASSIFICATION	0.9999064615649307	WITHOUT_CLASSIFICATION	9.35384350693076E-5	DEFECT
// Fall tru	WITHOUT_CLASSIFICATION	0.9999064615649307	WITHOUT_CLASSIFICATION	9.35384350693076E-5	DEFECT
// Fall tru	WITHOUT_CLASSIFICATION	0.9999064615649307	WITHOUT_CLASSIFICATION	9.35384350693076E-5	DEFECT
// Fall tru	WITHOUT_CLASSIFICATION	0.9999064615649307	WITHOUT_CLASSIFICATION	9.35384350693076E-5	DEFECT
// Fall tru	WITHOUT_CLASSIFICATION	0.9999064615649307	WITHOUT_CLASSIFICATION	9.35384350693076E-5	DEFECT
// EOL	WITHOUT_CLASSIFICATION	0.9997321541912021	WITHOUT_CLASSIFICATION	2.678458087979569E-4	DEFECT
// EOL was "\n"	WITHOUT_CLASSIFICATION	0.999936017252249	WITHOUT_CLASSIFICATION	6.398274775096927E-5	DEFECT
// EOL was "\r\r\n"	WITHOUT_CLASSIFICATION	0.999952862078246	WITHOUT_CLASSIFICATION	4.713792175412634E-5	DEFECT
// EOL was "\r"	WITHOUT_CLASSIFICATION	0.9999461793462756	WITHOUT_CLASSIFICATION	5.3820653724337124E-5	DEFECT
// If source at EOF and lookAhead is ctrl-z, return EOF (NOT ctrl-z)	WITHOUT_CLASSIFICATION	0.999996519460623	WITHOUT_CLASSIFICATION	3.4805393770789744E-6	DEFECT
// if source is EOF but last character was NOT ctrl-z, return ctrl-z	WITHOUT_CLASSIFICATION	0.9999990407797417	WITHOUT_CLASSIFICATION	9.59220258294042E-7	DEFECT
// Return current look-ahead	WITHOUT_CLASSIFICATION	0.9999827213982977	WITHOUT_CLASSIFICATION	1.7278601702364918E-5	DEFECT
// EOL was "\r\r" - handle as two consecutive "\r" and // "\r"	WITHOUT_CLASSIFICATION	0.9999791051065672	WITHOUT_CLASSIFICATION	2.089489343279004E-5	DEFECT
// Instance initializer: Executes just after the super() call in this // class's constructor.	WITHOUT_CLASSIFICATION	0.9999905194421302	WITHOUT_CLASSIFICATION	9.480557869753186E-6	DEFECT
// Return copy so that the call must call setEof() to change the state // of fixCRLF	WITHOUT_CLASSIFICATION	0.9999955562011812	WITHOUT_CLASSIFICATION	4.443798818818331E-6	DEFECT
// Return copy so that the call must call setEol() to change the state // of fixCRLF	WITHOUT_CLASSIFICATION	0.9999951265109832	WITHOUT_CLASSIFICATION	4.873489016824873E-6	DEFECT
// Return copy so that the caller must call setTab() to change the state // of fixCRLF.	WITHOUT_CLASSIFICATION	0.9999962736704614	WITHOUT_CLASSIFICATION	3.726329538585577E-6	DEFECT
// If I'm removing an EOF character, do so first so that the other // filters don't see that character.	WITHOUT_CLASSIFICATION	0.9998821362464286	WITHOUT_CLASSIFICATION	1.1786375357139488E-4	DEFECT
// Change all EOL characters to match the calculated EOL string. If // configured to do so, append a trailing EOL so that the file ends on // a EOL.	WITHOUT_CLASSIFICATION	0.9999964266504141	WITHOUT_CLASSIFICATION	3.5733495858691358E-6	DEFECT
// If filtering Java source, prevent changes to whitespace in // character and string literals.	WITHOUT_CLASSIFICATION	0.999999398242238	WITHOUT_CLASSIFICATION	6.017577620572997E-7	DEFECT
// Works like clone() but doesn't show up in the Javadocs	WITHOUT_CLASSIFICATION	0.9999770201349796	WITHOUT_CLASSIFICATION	2.297986502050884E-5	DEFECT
// getConstants is a static method, no need to // pass in the object	WITHOUT_CLASSIFICATION	0.9999874843859538	WITHOUT_CLASSIFICATION	1.251561404628658E-5	DEFECT
//this field will hold unnnn right after reading a non latin character //afterwards it will be truncated of one char every call to read	WITHOUT_CLASSIFICATION	0.9991280872919855	WITHOUT_CLASSIFICATION	8.719127080145339E-4	DEFECT
//replace the last 0s by the chars contained in s	WITHOUT_CLASSIFICATION	0.9999861633050161	WITHOUT_CLASSIFICATION	1.3836694983850543E-5	DEFECT
// line started with comment	WITHOUT_CLASSIFICATION	0.9999988174438773	WITHOUT_CLASSIFICATION	1.1825561226785418E-6	DEFECT
// ----------------------------------------- //  Predefined tokenizers // -----------------------------------------	WITHOUT_CLASSIFICATION	0.9999578364516024	WITHOUT_CLASSIFICATION	4.216354839755821E-5	DEFECT
// write everything up to the from	WITHOUT_CLASSIFICATION	0.9999520634678878	WITHOUT_CLASSIFICATION	4.7936532112085165E-5	DEFECT
// write the replacement to	WITHOUT_CLASSIFICATION	0.9999868682505006	WITHOUT_CLASSIFICATION	1.3131749499476685E-5	DEFECT
// search again	WITHOUT_CLASSIFICATION	0.9999942070759065	WITHOUT_CLASSIFICATION	5.792924093533812E-6	DEFECT
// write the remaining characters	WITHOUT_CLASSIFICATION	0.9999935552159126	WITHOUT_CLASSIFICATION	6.444784087430884E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999675172071433	WITHOUT_CLASSIFICATION	3.2482792856694074E-5	DEFECT
// -------------------------------------------- // //      Tokenizer Classes (impls moved to oata.util) // // --------------------------------------------	WITHOUT_CLASSIFICATION	0.999991415169432	WITHOUT_CLASSIFICATION	8.584830568059383E-6	DEFECT
// -------------------------------------------------------- //  static utility methods - could be placed somewhere else // --------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999957759261259	WITHOUT_CLASSIFICATION	4.224073874152725E-6	DEFECT
//Remove start and end quotes if field is a String	WITHOUT_CLASSIFICATION	0.9999906146205968	WITHOUT_CLASSIFICATION	9.385379403318476E-6	DEFECT
// default buffer size	WITHOUT_CLASSIFICATION	0.9999914490026837	WITHOUT_CLASSIFICATION	8.550997316449447E-6	DEFECT
/* Stateless */	WITHOUT_CLASSIFICATION	0.999996342844829	WITHOUT_CLASSIFICATION	3.6571551709850986E-6	DEFECT
// singletons - since all state is in the context	WITHOUT_CLASSIFICATION	0.9999882205067806	WITHOUT_CLASSIFICATION	1.1779493219422933E-5	DEFECT
// we are in an imported file.	WITHOUT_CLASSIFICATION	0.9999959991748459	WITHOUT_CLASSIFICATION	4.000825154092849E-6	DEFECT
// top level file	WITHOUT_CLASSIFICATION	0.9999847380950769	WITHOUT_CLASSIFICATION	1.526190492308765E-5	DEFECT
// ?? OK ??	WITHOUT_CLASSIFICATION	0.9999689907790967	WITHOUT_CLASSIFICATION	3.1009220903304974E-5	DEFECT
// use default if not file or file not found	WITHOUT_CLASSIFICATION	0.9999972368522692	WITHOUT_CLASSIFICATION	2.763147730930161E-6	DEFECT
// Set the location of the implicit target associated with the project tag	WITHOUT_CLASSIFICATION	0.9999716542518464	WITHOUT_CLASSIFICATION	2.8345748153664577E-5	DEFECT
// Ignore attributes from unknown uris	WITHOUT_CLASSIFICATION	0.9999604939519864	WITHOUT_CLASSIFICATION	3.950604801364301E-5	DEFECT
// Ignore attributes from unknown uris	WITHOUT_CLASSIFICATION	0.9999604939519864	WITHOUT_CLASSIFICATION	3.950604801364301E-5	DEFECT
// What's the difference between id and name ?	WITHOUT_CLASSIFICATION	0.9999987735561693	WITHOUT_CLASSIFICATION	1.2264438307759476E-6	DEFECT
// no further processing	WITHOUT_CLASSIFICATION	0.9999961440597911	WITHOUT_CLASSIFICATION	3.855940208947442E-6	DEFECT
// set explicitly before starting ?	WITHOUT_CLASSIFICATION	0.9999951234607751	WITHOUT_CLASSIFICATION	4.876539224862442E-6	DEFECT
// Default for baseDir is the location of the build file.	WITHOUT_CLASSIFICATION	0.9999163486346522	WITHOUT_CLASSIFICATION	8.365136534784879E-5	DEFECT
// check whether the user has specified an absolute path	WITHOUT_CLASSIFICATION	0.99998643142145	WITHOUT_CLASSIFICATION	1.3568578549868394E-5	DEFECT
// Check if this target is in the current build file	WITHOUT_CLASSIFICATION	0.9999782718068013	WITHOUT_CLASSIFICATION	2.1728193198692337E-5	DEFECT
// If the name has not already been defined define it	WITHOUT_CLASSIFICATION	0.9999805730157147	WITHOUT_CLASSIFICATION	1.9426984285244537E-5	DEFECT
// In an impored file (and not completely // ignoring the project tag)	WITHOUT_CLASSIFICATION	0.9999849116454194	WITHOUT_CLASSIFICATION	1.508835458052727E-5	DEFECT
/* UnknownElement is used for tasks and data types - with               delayed eval */	WITHOUT_CLASSIFICATION	0.9999992914014524	WITHOUT_CLASSIFICATION	7.085985475599606E-7	DEFECT
// Nested element	WITHOUT_CLASSIFICATION	0.9999983430847453	WITHOUT_CLASSIFICATION	1.6569152547649405E-6	DEFECT
// Task included in a target ( including the default one ).	WITHOUT_CLASSIFICATION	0.9999909829260692	WITHOUT_CLASSIFICATION	9.017073930838778E-6	DEFECT
// container.addTask(task); // This is a nop in UE: task.init();	WITHOUT_CLASSIFICATION	0.9992220212834116	WITHOUT_CLASSIFICATION	7.779787165883127E-4	DEFECT
// **   simple name specified   == path in list + name	WITHOUT_CLASSIFICATION	0.9999994851421982	WITHOUT_CLASSIFICATION	5.148578017830522E-7	DEFECT
// if the suffix does not starts with a '.' and the // char preceding the suffix is a '.', we assume the user // wants to remove the '.' as well (see docs)	WITHOUT_CLASSIFICATION	0.9999998396760753	WITHOUT_CLASSIFICATION	1.6032392466441205E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999707121018232	WITHOUT_CLASSIFICATION	2.9287898176784134E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999707121018232	WITHOUT_CLASSIFICATION	2.9287898176784134E-5	DEFECT
// use default if not file or file not found	WITHOUT_CLASSIFICATION	0.9999972368522692	WITHOUT_CLASSIFICATION	2.763147730930161E-6	DEFECT
// check whether the user has specified an absolute path	WITHOUT_CLASSIFICATION	0.99998643142145	WITHOUT_CLASSIFICATION	1.3568578549868394E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999675172071433	WITHOUT_CLASSIFICATION	3.2482792856694074E-5	DEFECT
// Start handling SAX events	WITHOUT_CLASSIFICATION	0.9999872754818628	WITHOUT_CLASSIFICATION	1.2724518137173622E-5	DEFECT
// Let parent resume handling SAX events	WITHOUT_CLASSIFICATION	0.9999927452766089	WITHOUT_CLASSIFICATION	7.254723391160309E-6	DEFECT
// implicit target must be first on dependency list	WITHOUT_CLASSIFICATION	0.9999990547315687	WITHOUT_CLASSIFICATION	9.452684312430023E-7	DEFECT
// take care of dependencies	WITHOUT_CLASSIFICATION	0.9999910190634359	WITHOUT_CLASSIFICATION	8.980936564069205E-6	DEFECT
// swallow here, will be thrown again in // UnknownElement.maybeConfigure if the problem persists.	WITHOUT_CLASSIFICATION	0.9991987115121855	WITHOUT_CLASSIFICATION	8.012884878144525E-4	DEFECT
//XXX task.setTaskType(tag);	WITHOUT_CLASSIFICATION	0.9996890508883469	WITHOUT_CLASSIFICATION	3.109491116531111E-4	DEFECT
// task can contain other tasks - no other nested elements possible	WITHOUT_CLASSIFICATION	0.9999981551287959	WITHOUT_CLASSIFICATION	1.8448712041620891E-6	DEFECT
// taskcontainer nested element can contain other tasks - no other // nested elements possible	WITHOUT_CLASSIFICATION	0.9999988464040613	WITHOUT_CLASSIFICATION	1.1535959386822858E-6	DEFECT
// Should not happen	WITHOUT_CLASSIFICATION	0.9986450341455564	WITHOUT_CLASSIFICATION	0.0013549658544435095	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.99987048956532	WITHOUT_CLASSIFICATION	1.2951043468007955E-4	DEFECT
// the first hex character if a character needs to be escaped	WITHOUT_CLASSIFICATION	0.9999989752349427	WITHOUT_CLASSIFICATION	1.0247650572171254E-6	DEFECT
// the second hex character if a character needs to be escaped	WITHOUT_CLASSIFICATION	0.999995230111865	WITHOUT_CLASSIFICATION	4.769888135025732E-6	DEFECT
// initialize the above 3 arrays	WITHOUT_CLASSIFICATION	0.9999994416591876	WITHOUT_CLASSIFICATION	5.583408122880653E-7	DEFECT
// #8031: first try Java 1.4.	WITHOUT_CLASSIFICATION	0.9999871632953632	WITHOUT_CLASSIFICATION	1.2836704636823101E-5	DEFECT
// Fine, Java 1.3 or earlier, do it by hand.	WITHOUT_CLASSIFICATION	0.9999837495695066	WITHOUT_CLASSIFICATION	1.6250430493352075E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999675172071433	WITHOUT_CLASSIFICATION	3.2482792856694074E-5	DEFECT
// Bad URI, pass this on.	WITHOUT_CLASSIFICATION	0.9999917833637191	WITHOUT_CLASSIFICATION	8.216636280882417E-6	DEFECT
// Unexpected target exception? Should not happen.	WITHOUT_CLASSIFICATION	0.9999499489469508	WITHOUT_CLASSIFICATION	5.0051053049223345E-5	DEFECT
// Reflection problems? Should not happen, debug.	WITHOUT_CLASSIFICATION	0.9990178954401417	WITHOUT_CLASSIFICATION	9.821045598581964E-4	DEFECT
// Fallback method for Java 1.3 or earlier.	WITHOUT_CLASSIFICATION	0.9999947391528381	WITHOUT_CLASSIFICATION	5.260847161823249E-6	DEFECT
// Ignore malformed exception	WITHOUT_CLASSIFICATION	0.9999912367664784	WITHOUT_CLASSIFICATION	8.763233521674165E-6	DEFECT
// if it's not an ASCII character, break here, and use UTF-8 encoding	WITHOUT_CLASSIFICATION	0.9999363641671682	WITHOUT_CLASSIFICATION	6.363583283174463E-5	DEFECT
// record the fact that it's escaped	WITHOUT_CLASSIFICATION	0.9999874094113458	WITHOUT_CLASSIFICATION	1.2590588654194435E-5	DEFECT
// we saw some non-ascii character	WITHOUT_CLASSIFICATION	0.9999989204964079	WITHOUT_CLASSIFICATION	1.079503592004839E-6	DEFECT
// get UTF-8 bytes for the remaining sub-string	WITHOUT_CLASSIFICATION	0.9999883695657875	WITHOUT_CLASSIFICATION	1.1630434212422808E-5	DEFECT
// for each byte	WITHOUT_CLASSIFICATION	0.9999912964016714	WITHOUT_CLASSIFICATION	8.70359832860614E-6	DEFECT
// for non-ascii character: make it positive, then escape	WITHOUT_CLASSIFICATION	0.9999908059599405	WITHOUT_CLASSIFICATION	9.194040059418441E-6	DEFECT
// firstly check if the tools jar is already in the classpath	WITHOUT_CLASSIFICATION	0.9999947955930201	WITHOUT_CLASSIFICATION	5.204406979919831E-6	DEFECT
// just check whether this throws an exception	WITHOUT_CLASSIFICATION	0.9999559960751687	WITHOUT_CLASSIFICATION	4.400392483132242E-5	DEFECT
// couldn't find compiler - try to find tools.jar // based on java.home setting	WITHOUT_CLASSIFICATION	0.9999341599895689	WITHOUT_CLASSIFICATION	6.584001043114495E-5	DEFECT
// Found in java.home as given	WITHOUT_CLASSIFICATION	0.9999830898793716	WITHOUT_CLASSIFICATION	1.6910120628380385E-5	DEFECT
// add any jars in the directory	WITHOUT_CLASSIFICATION	0.9999720670026101	WITHOUT_CLASSIFICATION	2.7932997389839582E-5	DEFECT
// now update the class.path property	WITHOUT_CLASSIFICATION	0.9998915162901879	WITHOUT_CLASSIFICATION	1.08483709812074E-4	DEFECT
// overlay specified properties file (if any), which overrides project // settings	WITHOUT_CLASSIFICATION	0.999997557165758	WITHOUT_CLASSIFICATION	2.442834241913274E-6	DEFECT
// ignore because properties file is not required	WITHOUT_CLASSIFICATION	0.9999357523988713	WITHOUT_CLASSIFICATION	6.424760112876986E-5	DEFECT
// private static final int ATTR_NORMAL = 0; // private static final int ATTR_BRIGHT = 1;	WITHOUT_CLASSIFICATION	0.9999988465867208	WITHOUT_CLASSIFICATION	1.1534132792494263E-6	DEFECT
// private static final int ATTR_UNDERLINE = 3; // private static final int ATTR_BLINK = 5; // private static final int ATTR_REVERSE = 7; // private static final int ATTR_HIDDEN = 8;	WITHOUT_CLASSIFICATION	0.9999994739297309	WITHOUT_CLASSIFICATION	5.260702691535201E-7	DEFECT
// private static final int FG_BLACK = 30;	WITHOUT_CLASSIFICATION	0.9999994004660272	WITHOUT_CLASSIFICATION	5.995339728979716E-7	DEFECT
// private static final int FG_YELLOW = 33;	WITHOUT_CLASSIFICATION	0.9999967061236789	WITHOUT_CLASSIFICATION	3.2938763211096513E-6	DEFECT
// private static final int FG_WHITE = 37;	WITHOUT_CLASSIFICATION	0.9999960561803503	WITHOUT_CLASSIFICATION	3.943819649737881E-6	DEFECT
//Ignore - we will use the defaults.	WITHOUT_CLASSIFICATION	0.9999280548053777	WITHOUT_CLASSIFICATION	7.194519462234366E-5	DEFECT
//Ignore - We do not want this to stop the build.	WITHOUT_CLASSIFICATION	0.99941766074158	WITHOUT_CLASSIFICATION	5.823392584200656E-4	DEFECT
// Fall through	WITHOUT_CLASSIFICATION	0.9998355194967726	WITHOUT_CLASSIFICATION	1.644805032273853E-4	DEFECT
// Whether or not an actual update is required - // we don't need to update if the original file doesn't exist	WITHOUT_CLASSIFICATION	0.998744722516139	WITHOUT_CLASSIFICATION	0.0012552774838610152	DEFECT
// Use the logger config	WITHOUT_CLASSIFICATION	0.9999406875497185	WITHOUT_CLASSIFICATION	5.9312450281574394E-5	DEFECT
// Since task log category includes target, we don't really // need this message	WITHOUT_CLASSIFICATION	0.9999960032050587	WITHOUT_CLASSIFICATION	3.996794941246697E-6	DEFECT
// Driver doesn't understand the URL	WITHOUT_CLASSIFICATION	0.9999955108006197	WITHOUT_CLASSIFICATION	4.489199380420541E-6	DEFECT
// It's a task - append the target	WITHOUT_CLASSIFICATION	0.9999958542792768	WITHOUT_CLASSIFICATION	4.145720723097378E-6	DEFECT
// finally, lets execute the compiler!!	WITHOUT_CLASSIFICATION	0.9999814960005345	WITHOUT_CLASSIFICATION	1.850399946547986E-5	DEFECT
// Doesn't make sense for c-l. Use the logger config	WITHOUT_CLASSIFICATION	0.9999495266446818	WITHOUT_CLASSIFICATION	5.0473355318130424E-5	DEFECT
// Could not get the required information	WITHOUT_CLASSIFICATION	0.9983245652152709	WITHOUT_CLASSIFICATION	0.0016754347847291289	DEFECT
// Create a ZipFileSet for this file, and pass it up.	WITHOUT_CLASSIFICATION	0.9999989335993041	WITHOUT_CLASSIFICATION	1.0664006957941982E-6	DEFECT
// now we need to populate the compiler adapter	WITHOUT_CLASSIFICATION	0.9999635856758908	WITHOUT_CLASSIFICATION	3.64143241090884E-5	DEFECT
// If no webxml file is specified, it's an error.	WITHOUT_CLASSIFICATION	0.999992600745528	WITHOUT_CLASSIFICATION	7.399254472042202E-6	DEFECT
// One cannot RMIC an interface for "classic" RMI (JRMP)	WITHOUT_CLASSIFICATION	0.9999977088636987	WITHOUT_CLASSIFICATION	2.2911363013042494E-6	DEFECT
// otherwise perform a timestamp comparison - at least	WITHOUT_CLASSIFICATION	0.9999964233560059	WITHOUT_CLASSIFICATION	3.5766439940600884E-6	DEFECT
// don't know how to handle that - a IDL file doesn't // have a corresponding Java source for example.	WITHOUT_CLASSIFICATION	0.9999810308831016	WITHOUT_CLASSIFICATION	1.896911689838998E-5	DEFECT
/*             * Move the generated source file to the base directory.  If             * base directory and sourcebase are the same, the generated             * sources are already in place.             */	WITHOUT_CLASSIFICATION	0.9999991521750398	WITHOUT_CLASSIFICATION	8.478249601987767E-7	DEFECT
// no source file generated, nothing to move	WITHOUT_CLASSIFICATION	0.9999996503569454	WITHOUT_CLASSIFICATION	3.4964305462278453E-7	DEFECT
// not the requested type	WITHOUT_CLASSIFICATION	0.9999541643073527	WITHOUT_CLASSIFICATION	4.583569264732151E-5	DEFECT
// **   full-pathname specified == path in list // **   simple name specified   == path in list	WITHOUT_CLASSIFICATION	0.9999986974009687	WITHOUT_CLASSIFICATION	1.3025990313162677E-6	DEFECT
// we only get here if an exception has been thrown	WITHOUT_CLASSIFICATION	0.9995134163633737	WITHOUT_CLASSIFICATION	4.8658363662633256E-4	DEFECT
// **   full-pathname specified == parent dir of path in list	WITHOUT_CLASSIFICATION	0.9999917131092246	WITHOUT_CLASSIFICATION	8.286890775375506E-6	DEFECT
// not the requested type	WITHOUT_CLASSIFICATION	0.9999541643073527	WITHOUT_CLASSIFICATION	4.583569264732151E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999675172071433	WITHOUT_CLASSIFICATION	3.2482792856694074E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999675172071433	WITHOUT_CLASSIFICATION	3.2482792856694074E-5	DEFECT
//the rest of the method treats single jar like //a nested path with one file	WITHOUT_CLASSIFICATION	0.9999483850157221	WITHOUT_CLASSIFICATION	5.161498427791314E-5	DEFECT
// Check for \r, \r\n and \r\r\n // Regard \r\r not followed by \n as two lines	WITHOUT_CLASSIFICATION	0.9999900942235608	WITHOUT_CLASSIFICATION	9.905776439266086E-6	DEFECT
// scan base dirs to build up compile lists only if a // specific classname is not given	WITHOUT_CLASSIFICATION	0.9999912037183334	WITHOUT_CLASSIFICATION	8.796281666674653E-6	DEFECT
// **   simple name specified   == parent dir + name	WITHOUT_CLASSIFICATION	0.9999996940308198	WITHOUT_CLASSIFICATION	3.059691801774236E-7	DEFECT
// class found but restricted name; this is // actually the case we're looking for in JDK 1.3+, // so catch the exception and return	WITHOUT_CLASSIFICATION	0.999985821068909	WITHOUT_CLASSIFICATION	1.4178931091055187E-5	DEFECT
// Can return null to represent the bootstrap class loader. // see API docs of Class.getClassLoader.	WITHOUT_CLASSIFICATION	0.9999976332660026	WITHOUT_CLASSIFICATION	2.3667339974679778E-6	DEFECT
// must be "add"	WITHOUT_CLASSIFICATION	0.9999964782725895	WITHOUT_CLASSIFICATION	3.5217274105173192E-6	DEFECT
// first off, make sure that we've got a srcdir and destdir	WITHOUT_CLASSIFICATION	0.9999964361541362	WITHOUT_CLASSIFICATION	3.5638458637035215E-6	DEFECT
// log options used	WITHOUT_CLASSIFICATION	0.99999433735561	WITHOUT_CLASSIFICATION	5.662644390023288E-6	DEFECT
//patch file into the fileset	WITHOUT_CLASSIFICATION	0.9999862061536542	WITHOUT_CLASSIFICATION	1.3793846345849945E-5	DEFECT
//set our parent dir	WITHOUT_CLASSIFICATION	0.9999567597358044	WITHOUT_CLASSIFICATION	4.324026419551358E-5	DEFECT
// Compare the destination with the temp file	WITHOUT_CLASSIFICATION	0.9999539506489729	WITHOUT_CLASSIFICATION	4.604935102720043E-5	DEFECT
// Eof has been reached	WITHOUT_CLASSIFICATION	0.9997877021133491	WITHOUT_CLASSIFICATION	2.1229788665082515E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999675172071433	WITHOUT_CLASSIFICATION	3.2482792856694074E-5	DEFECT
// don't reposition when we've reached the end // of the stream	WITHOUT_CLASSIFICATION	0.9999135456343499	WITHOUT_CLASSIFICATION	8.645436565021267E-5	DEFECT
// if at eolcount == 0 and trailing characters of string // are CTRL-Zs, set eofStr	WITHOUT_CLASSIFICATION	0.9999990160034874	WITHOUT_CLASSIFICATION	9.839965126834278E-7	DEFECT
// keep searching for the first ^Z	WITHOUT_CLASSIFICATION	0.9999987443680731	WITHOUT_CLASSIFICATION	1.25563192685596E-6	DEFECT
// Trailing characters are ^Zs // Construct new line and eofStr	WITHOUT_CLASSIFICATION	0.9999946907925761	WITHOUT_CLASSIFICATION	5.309207423890469E-6	DEFECT
// permissible values for compression attribute	WITHOUT_CLASSIFICATION	0.9999950503695489	WITHOUT_CLASSIFICATION	4.949630451041647E-6	DEFECT
//default	WITHOUT_CLASSIFICATION	0.9997592307842613	WITHOUT_CLASSIFICATION	2.407692157385846E-4	DEFECT
// shadow of the above if the value is altered in execute	WITHOUT_CLASSIFICATION	0.9999964739079231	WITHOUT_CLASSIFICATION	3.5260920768922955E-6	DEFECT
// For directories:	WITHOUT_CLASSIFICATION	0.9998422101468641	WITHOUT_CLASSIFICATION	1.5778985313587133E-4	DEFECT
// Renamed version of original file, if it exists	WITHOUT_CLASSIFICATION	0.9999962617440745	WITHOUT_CLASSIFICATION	3.73825592550315E-6	DEFECT
// Add the files found in groupfileset to fileset	WITHOUT_CLASSIFICATION	0.9999097950018281	WITHOUT_CLASSIFICATION	9.020499817196226E-5	DEFECT
// can also handle empty archives	WITHOUT_CLASSIFICATION	0.9999956596177033	WITHOUT_CLASSIFICATION	4.340382296685827E-6	DEFECT
// quick exit if the target is up to date	WITHOUT_CLASSIFICATION	0.9999910738390567	WITHOUT_CLASSIFICATION	8.926160943197599E-6	DEFECT
// Close the output stream.	WITHOUT_CLASSIFICATION	0.9999962298700196	WITHOUT_CLASSIFICATION	3.7701299803738922E-6	DEFECT
// we are recreating the archive, need all resources	WITHOUT_CLASSIFICATION	0.9999947200586841	WITHOUT_CLASSIFICATION	5.279941315897378E-6	DEFECT
// delete a bogus ZIP file (but only if it's not the original one)	WITHOUT_CLASSIFICATION	0.999945881857495	WITHOUT_CLASSIFICATION	5.4118142504885475E-5	DEFECT
// In this case using java.util.zip will not work // because it does not permit a zero-entry archive. // Must create it manually.	WITHOUT_CLASSIFICATION	0.9990864164724916	WITHOUT_CLASSIFICATION	9.135835275083812E-4	DEFECT
// Cf. PKZIP specification.	WITHOUT_CLASSIFICATION	0.9999786298882214	WITHOUT_CLASSIFICATION	2.137011177859575E-5	DEFECT
// P // K	WITHOUT_CLASSIFICATION	0.9999075406994057	WITHOUT_CLASSIFICATION	9.245930059428058E-5	DEFECT
// remainder zeros	WITHOUT_CLASSIFICATION	0.9999426948585778	WITHOUT_CLASSIFICATION	5.730514142230914E-5	DEFECT
// Create.	WITHOUT_CLASSIFICATION	0.9999874887173013	WITHOUT_CLASSIFICATION	1.2511282698748899E-5	DEFECT
// we are recreating the archive, need all resources	WITHOUT_CLASSIFICATION	0.9999947200586841	WITHOUT_CLASSIFICATION	5.279941315897378E-6	DEFECT
// initialResources is not empty	WITHOUT_CLASSIFICATION	0.9999980296069124	WITHOUT_CLASSIFICATION	1.9703930875693546E-6	DEFECT
// initialResources is not empty	WITHOUT_CLASSIFICATION	0.9999980296069124	WITHOUT_CLASSIFICATION	1.9703930875693546E-6	DEFECT
// in this case all files from origin map to // the fullPath attribute of the zipfileset at // destination	WITHOUT_CLASSIFICATION	0.9993183599479447	WITHOUT_CLASSIFICATION	6.816400520551843E-4	DEFECT
// we are recreating the archive, need all resources	WITHOUT_CLASSIFICATION	0.9999947200586841	WITHOUT_CLASSIFICATION	5.279941315897378E-6	DEFECT
// we are recreating the archive, need all resources	WITHOUT_CLASSIFICATION	0.9999947200586841	WITHOUT_CLASSIFICATION	5.279941315897378E-6	DEFECT
// no emptyBehavior handling since the FileSet version // will take care of it.	WITHOUT_CLASSIFICATION	0.9998399579895539	WITHOUT_CLASSIFICATION	1.600420104461038E-4	DEFECT
/*         * Backwards compatibility forces us to repeat the logic of         * getResourcesToAdd(FileSet[], ...) here once again.         */	WITHOUT_CLASSIFICATION	0.9999987691476724	WITHOUT_CLASSIFICATION	1.2308523276855795E-6	DEFECT
// we will return initialResources anyway, no reason // to scan further.	WITHOUT_CLASSIFICATION	0.9999958042986008	WITHOUT_CLASSIFICATION	4.195701399220461E-6	DEFECT
// we will return initialResources anyway, no reason // to scan further.	WITHOUT_CLASSIFICATION	0.9999958042986008	WITHOUT_CLASSIFICATION	4.195701399220461E-6	DEFECT
// ZIPs store time with a granularity of 2 seconds, round up	WITHOUT_CLASSIFICATION	0.9998987957690444	WITHOUT_CLASSIFICATION	1.0120423095560954E-4	DEFECT
// don't add directories we've already added. // no warning if we try, it is harmless in and of itself	WITHOUT_CLASSIFICATION	0.9999992596039945	WITHOUT_CLASSIFICATION	7.403960054414542E-7	DEFECT
// A "refid" attribute for a node within a Path object.	WITHOUT_CLASSIFICATION	0.9999737101007881	WITHOUT_CLASSIFICATION	2.628989921190976E-5	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.998803732051834	WITHOUT_CLASSIFICATION	0.0011962679481660166	DEFECT
//default	WITHOUT_CLASSIFICATION	0.9997592307842613	WITHOUT_CLASSIFICATION	2.407692157385846E-4	DEFECT
//default	WITHOUT_CLASSIFICATION	0.9997592307842613	WITHOUT_CLASSIFICATION	2.407692157385846E-4	DEFECT
// ZIPs store time with a granularity of 2 seconds, round up	WITHOUT_CLASSIFICATION	0.9998987957690444	WITHOUT_CLASSIFICATION	1.0120423095560954E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999675172071433	WITHOUT_CLASSIFICATION	3.2482792856694074E-5	DEFECT
// duplicate equal to add, so we continue	WITHOUT_CLASSIFICATION	0.9999885090821513	WITHOUT_CLASSIFICATION	1.1490917848710967E-5	DEFECT
// Store data into a byte[]	WITHOUT_CLASSIFICATION	0.9999594569281921	WITHOUT_CLASSIFICATION	4.054307180780861E-5	DEFECT
// may be altered in validate	WITHOUT_CLASSIFICATION	0.9999965456799995	WITHOUT_CLASSIFICATION	3.4543200004424123E-6	DEFECT
// set user-defined properties	WITHOUT_CLASSIFICATION	0.9999861348678227	WITHOUT_CLASSIFICATION	1.386513217731617E-5	DEFECT
// set Java built-in properties separately, // b/c we won't inherit them.	WITHOUT_CLASSIFICATION	0.9999740679157523	WITHOUT_CLASSIFICATION	2.5932084247770315E-5	DEFECT
// set all properties from calling project	WITHOUT_CLASSIFICATION	0.9999726501752002	WITHOUT_CLASSIFICATION	2.734982479969374E-5	DEFECT
// has been set explicitly	WITHOUT_CLASSIFICATION	0.9999783912634997	WITHOUT_CLASSIFICATION	2.1608736500196934E-5	DEFECT
// Are we trying to call the target in which we are defined (or // the build file if this is a top level task)?	WITHOUT_CLASSIFICATION	0.9999994508045329	WITHOUT_CLASSIFICATION	5.49195467160033E-7	DEFECT
// help the gc	WITHOUT_CLASSIFICATION	0.999970336522177	WITHOUT_CLASSIFICATION	2.966347782287216E-5	DEFECT
// remove duplicate properties - last property wins // Needed for backward compatibility	WITHOUT_CLASSIFICATION	0.9999958815456003	WITHOUT_CLASSIFICATION	4.118454399746589E-6	DEFECT
// Now add all references that are not defined in the // subproject, if inheritRefs is true	WITHOUT_CLASSIFICATION	0.9999859303786687	WITHOUT_CLASSIFICATION	1.4069621331278898E-5	DEFECT
// not Clonable	WITHOUT_CLASSIFICATION	0.9999590610770244	WITHOUT_CLASSIFICATION	4.093892297568192E-5	DEFECT
// ignore this if the class being referenced does not have // a set project method.	WITHOUT_CLASSIFICATION	0.9999826557293363	WITHOUT_CLASSIFICATION	1.7344270663736007E-5	DEFECT
// basedir and ant.file get special treatment in execute()	WITHOUT_CLASSIFICATION	0.9999967824665588	WITHOUT_CLASSIFICATION	3.217533441353526E-6	DEFECT
// don't re-set user properties, avoid the warning message	WITHOUT_CLASSIFICATION	0.999991464110314	WITHOUT_CLASSIFICATION	8.535889686000031E-6	DEFECT
// no user property	WITHOUT_CLASSIFICATION	0.999942528856809	WITHOUT_CLASSIFICATION	5.7471143191035376E-5	DEFECT
// @note: it is a string and not a file to handle relative/absolute // otherwise a relative file will be resolved based on the current // basedir.	WITHOUT_CLASSIFICATION	0.9987961648701403	WITHOUT_CLASSIFICATION	0.0012038351298596444	DEFECT
/*     * Get the (sub)-Project instance currently in use.     * @return Project     * @since Ant 1.7     */	WITHOUT_CLASSIFICATION	0.9999955320860091	WITHOUT_CLASSIFICATION	4.467913990875842E-6	DEFECT
// check to make sure that the given dir isn't a symlink // the comparison of absolute path and canonical path // catches this	WITHOUT_CLASSIFICATION	0.9999408773489992	WITHOUT_CLASSIFICATION	5.912265100094755E-5	DEFECT
//validation logic	WITHOUT_CLASSIFICATION	0.9994582046352806	WITHOUT_CLASSIFICATION	5.417953647194598E-4	DEFECT
//this isnt strictly needed, but by being fussy now, //we can change implementation details later	WITHOUT_CLASSIFICATION	0.9993913396527079	WITHOUT_CLASSIFICATION	6.086603472920777E-4	DEFECT
//special case single jar handling with signedjar attribute set	WITHOUT_CLASSIFICATION	0.9997073493433574	WITHOUT_CLASSIFICATION	2.926506566426258E-4	DEFECT
// single jar processing	WITHOUT_CLASSIFICATION	0.9999994015663649	WITHOUT_CLASSIFICATION	5.984336351006446E-7	DEFECT
//return here.	WITHOUT_CLASSIFICATION	0.9994900588091584	WITHOUT_CLASSIFICATION	5.099411908415989E-4	DEFECT
//set up our mapping policy	WITHOUT_CLASSIFICATION	0.9999778486821267	WITHOUT_CLASSIFICATION	2.2151317873360783E-5	DEFECT
//no mapper? use the identity policy	WITHOUT_CLASSIFICATION	0.9999888273799181	WITHOUT_CLASSIFICATION	1.117262008190774E-5	DEFECT
//determine the destination filename via the mapper	WITHOUT_CLASSIFICATION	0.999988927759534	WITHOUT_CLASSIFICATION	1.1072240465984103E-5	DEFECT
//we only like simple mappers.	WITHOUT_CLASSIFICATION	0.9998777103343187	WITHOUT_CLASSIFICATION	1.2228966568120214E-4	DEFECT
//DO NOT SET THE -signedjar OPTION if source==dest //unless you like fielding hotspot crash reports	WITHOUT_CLASSIFICATION	0.9999887283020712	WITHOUT_CLASSIFICATION	1.1271697928899826E-5	DEFECT
//add -tsa operations if declared	WITHOUT_CLASSIFICATION	0.9999502269282385	WITHOUT_CLASSIFICATION	4.9773071761451564E-5	DEFECT
//JAR source is required	WITHOUT_CLASSIFICATION	0.9998206205250136	WITHOUT_CLASSIFICATION	1.793794749862521E-4	DEFECT
//alias is required for signing	WITHOUT_CLASSIFICATION	0.998625853640267	WITHOUT_CLASSIFICATION	0.0013741463597329363	DEFECT
// restore the lastModified attribute	WITHOUT_CLASSIFICATION	0.9999830477688114	WITHOUT_CLASSIFICATION	1.6952231188503647E-5	DEFECT
//we normally compare destination with source	WITHOUT_CLASSIFICATION	0.9993037762748518	WITHOUT_CLASSIFICATION	6.962237251482464E-4	DEFECT
//but if no dest is specified, compare source to source	WITHOUT_CLASSIFICATION	0.999981608630825	WITHOUT_CLASSIFICATION	1.8391369175018854E-5	DEFECT
//if, by any means, the destfile and source match,	WITHOUT_CLASSIFICATION	0.9999983048451405	WITHOUT_CLASSIFICATION	1.6951548595522502E-6	DEFECT
//we check the presence of signatures on lazy signing	WITHOUT_CLASSIFICATION	0.9989897723232116	WITHOUT_CLASSIFICATION	0.0010102276767883218	DEFECT
//unsigned or non-lazy self signings are always false	WITHOUT_CLASSIFICATION	0.9996420864999332	WITHOUT_CLASSIFICATION	3.5791350006681214E-4	DEFECT
//if they are different, the timestamps are used	WITHOUT_CLASSIFICATION	0.999977385908404	WITHOUT_CLASSIFICATION	2.261409159599908E-5	DEFECT
//just log this	WITHOUT_CLASSIFICATION	0.999860772564601	WITHOUT_CLASSIFICATION	1.3922743539896337E-4	DEFECT
// fileutils	WITHOUT_CLASSIFICATION	0.9999844996959296	WITHOUT_CLASSIFICATION	1.550030407036821E-5	DEFECT
// --- Fields --	WITHOUT_CLASSIFICATION	0.9999644814491464	WITHOUT_CLASSIFICATION	3.55185508535261E-5	DEFECT
// Keep a hashtable of attributes added by this task. // This task is allow to override its own properties // but not other properties.  So we need to keep track // of which properties we've added.	WITHOUT_CLASSIFICATION	0.9989226515493557	WITHOUT_CLASSIFICATION	0.001077348450644351	DEFECT
// Error generated during parsing	WITHOUT_CLASSIFICATION	0.9999726461979154	WITHOUT_CLASSIFICATION	2.7353802084655818E-5	DEFECT
// Parser with specified options can't be built	WITHOUT_CLASSIFICATION	0.9999826886124495	WITHOUT_CLASSIFICATION	1.731138755041248E-5	DEFECT
// I/O error	WITHOUT_CLASSIFICATION	0.9997843810977698	WITHOUT_CLASSIFICATION	2.1561890223018783E-4	DEFECT
// Set the prefix for this node to include its tag name.	WITHOUT_CLASSIFICATION	0.9999813530286413	WITHOUT_CLASSIFICATION	1.864697135865365E-5	DEFECT
// Pass the container to the processing of this node,	WITHOUT_CLASSIFICATION	0.9999901959010233	WITHOUT_CLASSIFICATION	9.804098976661332E-6	DEFECT
// now, iterate through children.	WITHOUT_CLASSIFICATION	0.9999447035780783	WITHOUT_CLASSIFICATION	5.529642192173582E-5	DEFECT
// For each child, pass the object added by // processNode to its children -- in other word, each // object can pass information along to its children.	WITHOUT_CLASSIFICATION	0.9997578644815689	WITHOUT_CLASSIFICATION	2.4213551843112318E-4	DEFECT
// The value of an id attribute of this node.	WITHOUT_CLASSIFICATION	0.9999275537185026	WITHOUT_CLASSIFICATION	7.244628149739124E-5	DEFECT
// Is there an id attribute?	WITHOUT_CLASSIFICATION	0.9999813486329252	WITHOUT_CLASSIFICATION	1.8651367074810294E-5	DEFECT
// Now, iterate through the attributes adding them.	WITHOUT_CLASSIFICATION	0.9999818831094278	WITHOUT_CLASSIFICATION	1.811689057218384E-5	DEFECT
/*                     * The main conditional logic -- if the attribute                     * is somehow "special" (i.e., it has known                     * semantic meaning) then deal with it                     * appropriately.                     */	WITHOUT_CLASSIFICATION	0.999846157075004	WITHOUT_CLASSIFICATION	1.5384292499606307E-4	DEFECT
// ID has already been found above.	WITHOUT_CLASSIFICATION	0.999935362089023	WITHOUT_CLASSIFICATION	6.463791097693054E-5	DEFECT
// A "path" attribute for a node within a Path object.	WITHOUT_CLASSIFICATION	0.9999830371657464	WITHOUT_CLASSIFICATION	1.6962834253559705E-5	DEFECT
// A node identifying a new path	WITHOUT_CLASSIFICATION	0.9999736273736705	WITHOUT_CLASSIFICATION	2.6372626329586398E-5	DEFECT
// For the text node, add a property.	WITHOUT_CLASSIFICATION	0.9998131428311156	WITHOUT_CLASSIFICATION	1.868571688843534E-4	DEFECT
// If the containing object was a String, then use it as the ID.	WITHOUT_CLASSIFICATION	0.9999747781191463	WITHOUT_CLASSIFICATION	2.52218808536478E-5	DEFECT
// If this attribute was added by this task, then // we append this value to the existing value. // We use the setProperty method which will // forcibly override the property if it already exists. // We need to put these properties into the project // when we read them, though (instead of keeping them // outside of the project and batch adding them at the end) // to allow other properties to reference them.	WITHOUT_CLASSIFICATION	0.9999358923054332	WITHOUT_CLASSIFICATION	6.410769456672954E-5	DEFECT
// Never include the "refid" attribute as part of the // attribute name.	WITHOUT_CLASSIFICATION	0.9999997149494847	WITHOUT_CLASSIFICATION	2.8505051527861936E-7	DEFECT
// Otherwise, return it appended unless property to hide it is set.	WITHOUT_CLASSIFICATION	0.9999524769178137	WITHOUT_CLASSIFICATION	4.752308218626052E-5	DEFECT
/* Expose members for extensibility */	WITHOUT_CLASSIFICATION	0.9999949034003575	WITHOUT_CLASSIFICATION	5.096599642571818E-6	DEFECT
// delegate this way around to support subclasses that // overwrite getFile	WITHOUT_CLASSIFICATION	0.9999987125185781	WITHOUT_CLASSIFICATION	1.2874814218640052E-6	DEFECT
//we arent fully defined yet. this is an error unless //we are in an antlib, in which case the resource name is determined //automatically. //NB: URIs in the ant core package will be "" at this point.	WITHOUT_CLASSIFICATION	0.9993977879853765	WITHOUT_CLASSIFICATION	6.022120146234729E-4	DEFECT
//convert the URI to a resource	WITHOUT_CLASSIFICATION	0.9998929039735308	WITHOUT_CLASSIFICATION	1.0709602646914992E-4	DEFECT
//handle new style full paths to an antlib, in which //all but the forward slashes are allowed.	WITHOUT_CLASSIFICATION	0.9995624810474795	WITHOUT_CLASSIFICATION	4.375189525204323E-4	DEFECT
//if we haven't already named an XML file, it gets antlib.xml	WITHOUT_CLASSIFICATION	0.9999338821400975	WITHOUT_CLASSIFICATION	6.611785990253232E-5	DEFECT
//convert from a package to a path	WITHOUT_CLASSIFICATION	0.9997157993801422	WITHOUT_CLASSIFICATION	2.8420061985782194E-4	DEFECT
// Here if there is an error	WITHOUT_CLASSIFICATION	0.9999835568990086	WITHOUT_CLASSIFICATION	1.6443100991352998E-5	DEFECT
// Fall Through	WITHOUT_CLASSIFICATION	0.999371913215125	WITHOUT_CLASSIFICATION	6.280867848749436E-4	DEFECT
// log at a lower level	WITHOUT_CLASSIFICATION	0.9999677159741295	WITHOUT_CLASSIFICATION	3.228402587057586E-5	DEFECT
// Ignore the problem	WITHOUT_CLASSIFICATION	0.9998688721077822	WITHOUT_CLASSIFICATION	1.311278922177807E-4	DEFECT
//trick to evoke "basedir not set" if null:	WITHOUT_CLASSIFICATION	0.9996452931786669	WITHOUT_CLASSIFICATION	3.547068213331135E-4	DEFECT
//no sources = nothing to compare; no targets = nothing to delete:	WITHOUT_CLASSIFICATION	0.9999910236290861	WITHOUT_CLASSIFICATION	8.976370913941009E-6	DEFECT
// Members	WITHOUT_CLASSIFICATION	0.9999876453675057	WITHOUT_CLASSIFICATION	1.2354632494338162E-5	DEFECT
// Members	WITHOUT_CLASSIFICATION	0.9999876453675057	WITHOUT_CLASSIFICATION	1.2354632494338162E-5	DEFECT
// If we are a reference, create a Path from the reference	WITHOUT_CLASSIFICATION	0.9999725318952103	WITHOUT_CLASSIFICATION	2.7468104789763264E-5	DEFECT
// for NetWare and OS/2, piggy-back on Windows, since here and // in the apply code, the same assumptions can be made as with // windows - that \\ is an OK separator, and do comparisons // case-insensitive.	WITHOUT_CLASSIFICATION	0.999964445795601	WITHOUT_CLASSIFICATION	3.555420439906022E-5	DEFECT
// If the element starts with the configured prefix, then // convert the prefix to the configured 'to' value.	WITHOUT_CLASSIFICATION	0.9999883812749637	WITHOUT_CLASSIFICATION	1.1618725036337459E-5	DEFECT
// Currently, we deal with only two path formats: Unix and Windows // And Unix is everything that is not Windows	WITHOUT_CLASSIFICATION	0.9992002619750436	WITHOUT_CLASSIFICATION	7.997380249564356E-4	DEFECT
// may be altered in validateSetup // may be altered in validateSetup	WITHOUT_CLASSIFICATION	0.9999977654034325	WITHOUT_CLASSIFICATION	2.234596567479635E-6	DEFECT
// validate our setup	WITHOUT_CLASSIFICATION	0.9999938604826981	WITHOUT_CLASSIFICATION	6.139517301788257E-6	DEFECT
// Currently, we deal with only two path formats: Unix and Windows // And Unix is everything that is not Windows // (with the exception for NetWare and OS/2 below)	WITHOUT_CLASSIFICATION	0.9998352900231733	WITHOUT_CLASSIFICATION	1.6470997682677317E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999675172071433	WITHOUT_CLASSIFICATION	3.2482792856694074E-5	DEFECT
// Get the list of path components in canonical form	WITHOUT_CLASSIFICATION	0.9999885752778677	WITHOUT_CLASSIFICATION	1.1424722132268651E-5	DEFECT
// Apply the path prefix map	WITHOUT_CLASSIFICATION	0.9999761630376524	WITHOUT_CLASSIFICATION	2.383696234758999E-5	DEFECT
// Now convert the path and file separator characters from the // current os to the target os.	WITHOUT_CLASSIFICATION	0.9999895491219678	WITHOUT_CLASSIFICATION	1.045087803217977E-5	DEFECT
// Place the result into the specified property, // unless setonempty == false	WITHOUT_CLASSIFICATION	0.9999594288557948	WITHOUT_CLASSIFICATION	4.057114420513872E-5	DEFECT
// Iterate over the map entries and apply each one. // Stop when one of the entries actually changes the element.	WITHOUT_CLASSIFICATION	0.9999163134787524	WITHOUT_CLASSIFICATION	8.368652124766451E-5	DEFECT
// Note I'm using "!=" to see if we got a new object back from // the apply method.	WITHOUT_CLASSIFICATION	0.999996150773576	WITHOUT_CLASSIFICATION	3.849226423990134E-6	DEFECT
// We applied one, so we're done	WITHOUT_CLASSIFICATION	0.999991313849651	WITHOUT_CLASSIFICATION	8.68615034900756E-6	DEFECT
// Determine the separator strings.  The dirsep and pathsep attributes // override the targetOS settings.	WITHOUT_CLASSIFICATION	0.9999993348704199	WITHOUT_CLASSIFICATION	6.651295799639351E-7	DEFECT
// override with pathsep=	WITHOUT_CLASSIFICATION	0.9999949060029973	WITHOUT_CLASSIFICATION	5.093997002632063E-6	DEFECT
// override with dirsep=	WITHOUT_CLASSIFICATION	0.9999911663906529	WITHOUT_CLASSIFICATION	8.833609347168523E-6	DEFECT
// Check if used by attributes	WITHOUT_CLASSIFICATION	0.9999986153331087	WITHOUT_CLASSIFICATION	1.3846668911938803E-6	DEFECT
// ? is there an xml api for this ?	WITHOUT_CLASSIFICATION	0.9999935664275339	WITHOUT_CLASSIFICATION	6.433572466005339E-6	DEFECT
////////////////////////////////////////////////////////////////////// // ATTRIBUTES	WITHOUT_CLASSIFICATION	0.999868931237398	WITHOUT_CLASSIFICATION	1.310687626020397E-4	DEFECT
////////////////////////////////////////////////////////////////////// // CONSTRUCTORS / INITIALIZERS	WITHOUT_CLASSIFICATION	0.9999292276872337	WITHOUT_CLASSIFICATION	7.077231276629448E-5	DEFECT
////////////////////////////////////////////////////////////////////// // ACCESSOR METHODS	WITHOUT_CLASSIFICATION	0.9996614778416315	WITHOUT_CLASSIFICATION	3.3852215836843605E-4	DEFECT
//Validate mandatory attributes	WITHOUT_CLASSIFICATION	0.9997664221353555	WITHOUT_CLASSIFICATION	2.33577864644568E-4	DEFECT
//the property attribute must have access to a property file	WITHOUT_CLASSIFICATION	0.9999436736146471	WITHOUT_CLASSIFICATION	5.632638535296545E-5	DEFECT
//Make sure property exists in property file	WITHOUT_CLASSIFICATION	0.9979225003080857	WITHOUT_CLASSIFICATION	0.0020774996919143383	DEFECT
//Default is empty string	WITHOUT_CLASSIFICATION	0.9999757016453648	WITHOUT_CLASSIFICATION	2.4298354635293865E-5	DEFECT
// Avoid runtime problem on pre 1.4 when compiling post 1.4	WITHOUT_CLASSIFICATION	0.9991743024505582	WITHOUT_CLASSIFICATION	8.25697549441871E-4	DEFECT
// end of finally	WITHOUT_CLASSIFICATION	0.9998062361159376	WITHOUT_CLASSIFICATION	1.9376388406237578E-4	DEFECT
//look for and print warnings	WITHOUT_CLASSIFICATION	0.9999968999443641	WITHOUT_CLASSIFICATION	3.1000556359259403E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999707121018232	WITHOUT_CLASSIFICATION	2.9287898176784134E-5	DEFECT
////////////////////////////////////////////////////////////////////// // ATTRIBUTES	WITHOUT_CLASSIFICATION	0.999868931237398	WITHOUT_CLASSIFICATION	1.310687626020397E-4	DEFECT
////////////////////////////////////////////////////////////////////// // ACCESSOR METHODS	WITHOUT_CLASSIFICATION	0.9996614778416315	WITHOUT_CLASSIFICATION	3.3852215836843605E-4	DEFECT
// line separators in values and tokens are "\n" // in order to compare with the file contents, replace them // as needed	WITHOUT_CLASSIFICATION	0.9999987358793435	WITHOUT_CLASSIFICATION	1.2641206564193218E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999675172071433	WITHOUT_CLASSIFICATION	3.2482792856694074E-5	DEFECT
// Ignore Exception	WITHOUT_CLASSIFICATION	0.9999271611205274	WITHOUT_CLASSIFICATION	7.283887947267933E-5	DEFECT
// no errors so far	WITHOUT_CLASSIFICATION	0.9999739824411369	WITHOUT_CLASSIFICATION	2.6017558863185555E-5	DEFECT
// If we don't know the type of the line // and we are in emacs mode, it will be // an error, because in this mode, jikes won't // always print "error", but sometimes other // keywords like "Syntax". We should look for // all those keywords.	WITHOUT_CLASSIFICATION	0.9993316397262185	WITHOUT_CLASSIFICATION	6.683602737814782E-4	DEFECT
// plain impossible	WITHOUT_CLASSIFICATION	0.9999898542451605	WITHOUT_CLASSIFICATION	1.0145754839524496E-5	DEFECT
// We must check if the process was not stopped // before being here	WITHOUT_CLASSIFICATION	0.9999831964447353	WITHOUT_CLASSIFICATION	1.6803555264701753E-5	DEFECT
// the process is not terminated, if this is really // a timeout and not a manual stop then kill it.	WITHOUT_CLASSIFICATION	0.9998829472436659	WITHOUT_CLASSIFICATION	1.1705275633406703E-4	DEFECT
////////////////////////////////////////////////////////////////////// // CORE / MAIN BODY	WITHOUT_CLASSIFICATION	0.9998402513718738	WITHOUT_CLASSIFICATION	1.5974862812608956E-4	DEFECT
// get the recorder entry	WITHOUT_CLASSIFICATION	0.9998056025860897	WITHOUT_CLASSIFICATION	1.9439741391024198E-4	DEFECT
// set the values on the recorder	WITHOUT_CLASSIFICATION	0.9999790166901364	WITHOUT_CLASSIFICATION	2.098330986359682E-5	DEFECT
////////////////////////////////////////////////////////////////////// // INNER CLASSES	WITHOUT_CLASSIFICATION	0.9999335642803672	WITHOUT_CLASSIFICATION	6.643571963278317E-5	DEFECT
// create a recorder entry	WITHOUT_CLASSIFICATION	0.999978633264137	WITHOUT_CLASSIFICATION	2.1366735862950206E-5	DEFECT
// Use '/' to calculate digest based on file name. // This is required in order to get the same result // on different platforms.	WITHOUT_CLASSIFICATION	0.9997596518732517	WITHOUT_CLASSIFICATION	2.4034812674821735E-4	DEFECT
// Read the checksum from disk.	WITHOUT_CLASSIFICATION	0.9999908065991014	WITHOUT_CLASSIFICATION	9.1934008985224E-6	DEFECT
// A separate directory was explicitly declared	WITHOUT_CLASSIFICATION	0.9999941351300419	WITHOUT_CLASSIFICATION	5.864869958120753E-6	DEFECT
// Empty statement	WITHOUT_CLASSIFICATION	0.9999671940038302	WITHOUT_CLASSIFICATION	3.2805996169784176E-5	DEFECT
//can either be a property name string or a file	WITHOUT_CLASSIFICATION	0.9999813601039799	WITHOUT_CLASSIFICATION	1.86398960201166E-5	DEFECT
// file is on wrong format, swallow	WITHOUT_CLASSIFICATION	0.999647704369481	WITHOUT_CLASSIFICATION	3.5229563051906537E-4	DEFECT
// try to be smart, not to be fooled by a weird directory name	WITHOUT_CLASSIFICATION	0.9999980228202675	WITHOUT_CLASSIFICATION	1.97717973246321E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999707121018232	WITHOUT_CLASSIFICATION	2.9287898176784134E-5	DEFECT
// Close the output stream.	WITHOUT_CLASSIFICATION	0.9999962298700196	WITHOUT_CLASSIFICATION	3.7701299803738922E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999675172071433	WITHOUT_CLASSIFICATION	3.2482792856694074E-5	DEFECT
// File is Comparable, so sorting is trivial	WITHOUT_CLASSIFICATION	0.9999993083044886	WITHOUT_CLASSIFICATION	6.916955114332314E-7	DEFECT
// Loop over the checksums and generate a total hash.	WITHOUT_CLASSIFICATION	0.9999972070787331	WITHOUT_CLASSIFICATION	2.7929212669877436E-6	DEFECT
// Add the digest for the file content	WITHOUT_CLASSIFICATION	0.9999926775179414	WITHOUT_CLASSIFICATION	7.322482058515635E-6	DEFECT
// Add the file path	WITHOUT_CLASSIFICATION	0.9999847906845097	WITHOUT_CLASSIFICATION	1.5209315490361498E-5	DEFECT
// two characters form the hex value.	WITHOUT_CLASSIFICATION	0.9999986334338845	WITHOUT_CLASSIFICATION	1.366566115512871E-6	DEFECT
// We just set the prefix for this fileset, and pass it up.	WITHOUT_CLASSIFICATION	0.9999937563202457	WITHOUT_CLASSIFICATION	6.243679754386931E-6	DEFECT
// Check if the service is configured correctly	WITHOUT_CLASSIFICATION	0.9998864631210791	WITHOUT_CLASSIFICATION	1.1353687892088188E-4	DEFECT
// if we haven't got the manifest yet, attempt to // get it now and have manifest be the final merge	WITHOUT_CLASSIFICATION	0.9999793418717832	WITHOUT_CLASSIFICATION	2.0658128216780212E-5	DEFECT
// time to write the manifest	WITHOUT_CLASSIFICATION	0.9999850313657843	WITHOUT_CLASSIFICATION	1.4968634215675224E-5	DEFECT
// encoding must be UTF8 as specified in the specs.	WITHOUT_CLASSIFICATION	0.9999464585983451	WITHOUT_CLASSIFICATION	5.3541401654910816E-5	DEFECT
// version-info blankline	WITHOUT_CLASSIFICATION	0.9999943299317914	WITHOUT_CLASSIFICATION	5.670068208627502E-6	DEFECT
// header newline	WITHOUT_CLASSIFICATION	0.999981879959173	WITHOUT_CLASSIFICATION	1.8120040827068525E-5	DEFECT
// If this is the same name specified in 'manifest', this // is the manifest to use	WITHOUT_CLASSIFICATION	0.9999743776640536	WITHOUT_CLASSIFICATION	2.562233594639231E-5	DEFECT
// we add this to our group of fileset manifests	WITHOUT_CLASSIFICATION	0.9999885948129995	WITHOUT_CLASSIFICATION	1.1405187000428441E-5	DEFECT
// assuming 'skip' otherwise // don't warn if skip has been requested explicitly, warn if user // didn't set the attribute	WITHOUT_CLASSIFICATION	0.9999907410631577	WITHOUT_CLASSIFICATION	9.258936842349272E-6	DEFECT
// Hide warning also as it makes no sense since // the filesetmanifest attribute itself has been // hidden	WITHOUT_CLASSIFICATION	0.9999993923892536	WITHOUT_CLASSIFICATION	6.076107463810228E-7	DEFECT
// need to handle manifest as a special check	WITHOUT_CLASSIFICATION	0.99996267254188	WITHOUT_CLASSIFICATION	3.732745811995759E-5	DEFECT
// if it doesn't exist, it will get created anyway, don't // bother with any up-to-date checks.	WITHOUT_CLASSIFICATION	0.9999336959959951	WITHOUT_CLASSIFICATION	6.6304004004877E-5	DEFECT
// no existing archive	WITHOUT_CLASSIFICATION	0.9999989269763607	WITHOUT_CLASSIFICATION	1.0730236392914736E-6	DEFECT
// Ignore close exception	WITHOUT_CLASSIFICATION	0.999954993337931	WITHOUT_CLASSIFICATION	4.500666206905599E-5	DEFECT
// we want to save this info if we are going to make another pass	WITHOUT_CLASSIFICATION	0.9999835168980578	WITHOUT_CLASSIFICATION	1.6483101942187823E-5	DEFECT
// couldn't find it - must be on path	WITHOUT_CLASSIFICATION	0.9999813134419071	WITHOUT_CLASSIFICATION	1.8686558092941744E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999707121018232	WITHOUT_CLASSIFICATION	2.9287898176784134E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999707121018232	WITHOUT_CLASSIFICATION	2.9287898176784134E-5	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.998803732051834	WITHOUT_CLASSIFICATION	0.0011962679481660166	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999675172071433	WITHOUT_CLASSIFICATION	3.2482792856694074E-5	DEFECT
// looks like nothing from META-INF should be added // and the check is not case insensitive. // see sun.misc.JarIndex	WITHOUT_CLASSIFICATION	0.9999959992394342	WITHOUT_CLASSIFICATION	4.000760565810976E-6	DEFECT
// name newline	WITHOUT_CLASSIFICATION	0.9999969008809232	WITHOUT_CLASSIFICATION	3.0991190767640418E-6	DEFECT
// longest match comes first	WITHOUT_CLASSIFICATION	0.9999949990627548	WITHOUT_CLASSIFICATION	5.000937245238819E-6	DEFECT
// META-INF would be skipped anyway, avoid index for // manifest-only jars.	WITHOUT_CLASSIFICATION	0.9999741727417791	WITHOUT_CLASSIFICATION	2.582725822082882E-5	DEFECT
// a file, not in the root // since the jar may be one without directory // entries, add the parent dir of this file as // well.	WITHOUT_CLASSIFICATION	0.9999696129321782	WITHOUT_CLASSIFICATION	3.0387067821718933E-5	DEFECT
/*protected*/	WITHOUT_CLASSIFICATION	0.999702289950935	WITHOUT_CLASSIFICATION	2.9771004906500387E-4	DEFECT
// if the target file is not there, then it can't be up-to-date	WITHOUT_CLASSIFICATION	0.9999909045277563	WITHOUT_CLASSIFICATION	9.09547224358562E-6	DEFECT
// if the source file isn't there, throw an exception	WITHOUT_CLASSIFICATION	0.9999580230384116	WITHOUT_CLASSIFICATION	4.197696158843006E-5	DEFECT
// by default, messages are always displayed	WITHOUT_CLASSIFICATION	0.9999991438897153	WITHOUT_CLASSIFICATION	8.561102846427953E-7	DEFECT
// need to keep the package private version for backwards compatibility	WITHOUT_CLASSIFICATION	0.9999980048994127	WITHOUT_CLASSIFICATION	1.9951005872319416E-6	DEFECT
// we must keep two lists since other classes may modify the // filesets Vector (it is package private) without us noticing	WITHOUT_CLASSIFICATION	0.9999967266640828	WITHOUT_CLASSIFICATION	3.2733359172678308E-6	DEFECT
// add the main fileset to the list of filesets to process.	WITHOUT_CLASSIFICATION	0.9999985703148718	WITHOUT_CLASSIFICATION	1.4296851281645348E-6	DEFECT
// check if tar is out of date with respect to each // fileset	WITHOUT_CLASSIFICATION	0.9999743121987417	WITHOUT_CLASSIFICATION	2.56878012583514E-5	DEFECT
// warn or GNU	WITHOUT_CLASSIFICATION	0.9999921624329552	WITHOUT_CLASSIFICATION	7.837567044789404E-6	DEFECT
// don't add "" to the archive	WITHOUT_CLASSIFICATION	0.9999559540324067	WITHOUT_CLASSIFICATION	4.404596759323698E-5	DEFECT
// '/' is appended for compatibility with the zip task.	WITHOUT_CLASSIFICATION	0.9999847252587963	WITHOUT_CLASSIFICATION	1.5274741203596902E-5	DEFECT
// we would end up adding "" to the archive	WITHOUT_CLASSIFICATION	0.99998390027242	WITHOUT_CLASSIFICATION	1.6099727579927052E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999675172071433	WITHOUT_CLASSIFICATION	3.2482792856694074E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999675172071433	WITHOUT_CLASSIFICATION	3.2482792856694074E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999707121018232	WITHOUT_CLASSIFICATION	2.9287898176784134E-5	DEFECT
// permissible values for compression attribute	WITHOUT_CLASSIFICATION	0.9999950503695489	WITHOUT_CLASSIFICATION	4.949630451041647E-6	DEFECT
// override permissions if set explicitly	WITHOUT_CLASSIFICATION	0.9999973375997773	WITHOUT_CLASSIFICATION	2.6624002227103975E-6	DEFECT
// only override permissions if set explicitly	WITHOUT_CLASSIFICATION	0.9999872682174099	WITHOUT_CLASSIFICATION	1.273178259015698E-5	DEFECT
// non-file resources	WITHOUT_CLASSIFICATION	0.9999912853226922	WITHOUT_CLASSIFICATION	8.714677307771705E-6	DEFECT
// non-file resources	WITHOUT_CLASSIFICATION	0.9999912853226922	WITHOUT_CLASSIFICATION	8.714677307771705E-6	DEFECT
//extend Comparison; retain for BC only	WITHOUT_CLASSIFICATION	0.9999792244991101	WITHOUT_CLASSIFICATION	2.077550088985629E-5	DEFECT
//when writing to the log, we'll see what's happening:	WITHOUT_CLASSIFICATION	0.9996302329606972	WITHOUT_CLASSIFICATION	3.697670393027588E-4	DEFECT
/*         * The initial version used DateFormat.SHORT for the         * time format, which ignores seconds.  If we want         * seconds as well, we need DateFormat.MEDIUM, which         * in turn would break all old build files.         *         * First try to parse with DateFormat.SHORT and if         * that fails with MEDIUM - throw an exception if both         * fail.         */	WITHOUT_CLASSIFICATION	0.9999966397078528	WITHOUT_CLASSIFICATION	3.3602921472546527E-6	DEFECT
//only set if successful to this point:	WITHOUT_CLASSIFICATION	0.9996713053515138	WITHOUT_CLASSIFICATION	3.2869464848617923E-4	DEFECT
// deal with the resource collections	WITHOUT_CLASSIFICATION	0.9999924169809287	WITHOUT_CLASSIFICATION	7.583019071308569E-6	DEFECT
// deal with filesets in a special way since the task // originally also used the directories and Union won't return // them.	WITHOUT_CLASSIFICATION	0.999853592421687	WITHOUT_CLASSIFICATION	1.4640757831297383E-4	DEFECT
// use this to create file and deal with non-writable files	WITHOUT_CLASSIFICATION	0.9999916710697498	WITHOUT_CLASSIFICATION	8.328930250192477E-6	DEFECT
// When we leave this block we can be sure all data is really // stored in main memory before the new threads start, the new // threads will for sure load the data from main memory. // // This probably is slightly paranoid.	WITHOUT_CLASSIFICATION	0.9993220248658583	WITHOUT_CLASSIFICATION	6.779751341416334E-4	DEFECT
// start any daemon threads	WITHOUT_CLASSIFICATION	0.9998176016778372	WITHOUT_CLASSIFICATION	1.823983221627542E-4	DEFECT
// now run main threads in limited numbers... // start initial batch of threads	WITHOUT_CLASSIFICATION	0.999915233675331	WITHOUT_CLASSIFICATION	8.47663246690904E-5	DEFECT
// start the timeout thread	WITHOUT_CLASSIFICATION	0.9999745281953202	WITHOUT_CLASSIFICATION	2.5471804679766302E-5	DEFECT
// now find available running slots for the remaining threads	WITHOUT_CLASSIFICATION	0.9999611518004312	WITHOUT_CLASSIFICATION	3.884819956871197E-5	DEFECT
// continue on outer while loop to get another // available slot	WITHOUT_CLASSIFICATION	0.9999525791126244	WITHOUT_CLASSIFICATION	4.742088737570246E-5	DEFECT
// if we got here all slots in use, so sleep until // something happens	WITHOUT_CLASSIFICATION	0.9999753565477357	WITHOUT_CLASSIFICATION	2.464345226431521E-5	DEFECT
// doesn't java know interruptions are rude? // just pretend it didn't happen and go about out business. // sheesh!	WITHOUT_CLASSIFICATION	0.999994426076696	WITHOUT_CLASSIFICATION	5.573923304081155E-6	DEFECT
// are all threads finished	WITHOUT_CLASSIFICATION	0.9999890788764784	WITHOUT_CLASSIFICATION	1.0921123521550363E-5	DEFECT
// who would interrupt me at a time like this?	WITHOUT_CLASSIFICATION	0.9999959742110984	WITHOUT_CLASSIFICATION	4.025788901562103E-6	DEFECT
// now did any of the threads throw an exception	WITHOUT_CLASSIFICATION	0.9996417060194795	WITHOUT_CLASSIFICATION	3.582939805204558E-4	DEFECT
// return a bogus number	WITHOUT_CLASSIFICATION	0.9999971106531368	WITHOUT_CLASSIFICATION	2.889346863181263E-6	DEFECT
// Should be safe to parse	WITHOUT_CLASSIFICATION	0.9998606914032493	WITHOUT_CLASSIFICATION	1.3930859675069976E-4	DEFECT
// Check name is "antlib"	WITHOUT_CLASSIFICATION	0.9999987690459546	WITHOUT_CLASSIFICATION	1.230954045291319E-6	DEFECT
//include locally for screening purposes	WITHOUT_CLASSIFICATION	0.9999429892010422	WITHOUT_CLASSIFICATION	5.701079895781086E-5	DEFECT
// try to find the executable	WITHOUT_CLASSIFICATION	0.9999868383894458	WITHOUT_CLASSIFICATION	1.3161610554080451E-5	DEFECT
// now try to resolve against the dir if given	WITHOUT_CLASSIFICATION	0.9999890947529534	WITHOUT_CLASSIFICATION	1.090524704662678E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999707121018232	WITHOUT_CLASSIFICATION	2.9287898176784134E-5	DEFECT
// throw further	WITHOUT_CLASSIFICATION	0.9997731382688173	WITHOUT_CLASSIFICATION	2.268617311826755E-4	DEFECT
// only the first build exception is reported	WITHOUT_CLASSIFICATION	0.9999680914506432	WITHOUT_CLASSIFICATION	3.190854935675258E-5	DEFECT
//include locally for screening purposes	WITHOUT_CLASSIFICATION	0.9999429892010422	WITHOUT_CLASSIFICATION	5.701079895781086E-5	DEFECT
// mustSearchPath is false, or no PATH or not found - keep our // fingers crossed.	WITHOUT_CLASSIFICATION	0.9999973238691157	WITHOUT_CLASSIFICATION	2.6761308843559185E-6	DEFECT
// Quick fail if this is not a valid OS for the command	WITHOUT_CLASSIFICATION	0.9998385908029291	WITHOUT_CLASSIFICATION	1.614091970709072E-4	DEFECT
// possibly altered in prepareExec	WITHOUT_CLASSIFICATION	0.9999906987543679	WITHOUT_CLASSIFICATION	9.301245632167685E-6	DEFECT
//hand osfamily off to Os class, if set	WITHOUT_CLASSIFICATION	0.9997049851775288	WITHOUT_CLASSIFICATION	2.95014822471102E-4	DEFECT
// this command will be executed only on the specified OS	WITHOUT_CLASSIFICATION	0.999046918700611	WITHOUT_CLASSIFICATION	9.530812993890296E-4	DEFECT
// default directory to the project's base directory	WITHOUT_CLASSIFICATION	0.9999877993006862	WITHOUT_CLASSIFICATION	1.2200699313827317E-5	DEFECT
// assume the worst	WITHOUT_CLASSIFICATION	0.9999895893176114	WITHOUT_CLASSIFICATION	1.041068238863861E-5	DEFECT
//test for and handle a forced process death	WITHOUT_CLASSIFICATION	0.9999993355499892	WITHOUT_CLASSIFICATION	6.64450010843233E-7	DEFECT
// show the command	WITHOUT_CLASSIFICATION	0.9999461940963926	WITHOUT_CLASSIFICATION	5.380590360743119E-5	DEFECT
// close the output file if required	WITHOUT_CLASSIFICATION	0.9999480835689567	WITHOUT_CLASSIFICATION	5.191643104318888E-5	DEFECT
// Same as regular <copy> task... see at end-of-file!	WITHOUT_CLASSIFICATION	0.9999604387071166	WITHOUT_CLASSIFICATION	3.956129288330508E-5	DEFECT
// Override Task#init	WITHOUT_CLASSIFICATION	0.9999924231497874	WITHOUT_CLASSIFICATION	7.576850212547956E-6	DEFECT
// Instantiate it	WITHOUT_CLASSIFICATION	0.9999848869855049	WITHOUT_CLASSIFICATION	1.5113014495110132E-5	DEFECT
// Default config of <mycopy> for our purposes.	WITHOUT_CLASSIFICATION	0.9999456345735872	WITHOUT_CLASSIFICATION	5.43654264126958E-5	DEFECT
// Override Task#execute	WITHOUT_CLASSIFICATION	0.999994802833589	WITHOUT_CLASSIFICATION	5.197166411064932E-6	DEFECT
// The destination of the files to copy	WITHOUT_CLASSIFICATION	0.9989633744726695	WITHOUT_CLASSIFICATION	0.001036625527330497	DEFECT
// The complete list of files to copy	WITHOUT_CLASSIFICATION	0.9999570766770373	WITHOUT_CLASSIFICATION	4.292332296269904E-5	DEFECT
// Copy all the necessary out-of-date files	WITHOUT_CLASSIFICATION	0.9999980573619981	WITHOUT_CLASSIFICATION	1.942638001960865E-6	DEFECT
// Do we need to perform further processing?	WITHOUT_CLASSIFICATION	0.9999986613972037	WITHOUT_CLASSIFICATION	1.3386027962923752E-6	DEFECT
// nope ;-)	WITHOUT_CLASSIFICATION	0.9999682029893335	WITHOUT_CLASSIFICATION	3.179701066648554E-5	DEFECT
// Get rid of all files not listed in the source filesets.	WITHOUT_CLASSIFICATION	0.9999801586022165	WITHOUT_CLASSIFICATION	1.9841397783568412E-5	DEFECT
// Get rid of empty directories on the destination side	WITHOUT_CLASSIFICATION	0.9998973143618188	WITHOUT_CLASSIFICATION	1.0268563818120806E-4	DEFECT
// want to keep toDir itself	WITHOUT_CLASSIFICATION	0.9999957682539918	WITHOUT_CLASSIFICATION	4.231746008097047E-6	DEFECT
// ds returns the directories in lexicographic order. // iterating through the array backwards means we are deleting // leaves before their parent nodes - thus making sure (well, // more likely) that the directories are empty when we try to // delete them.	WITHOUT_CLASSIFICATION	0.9999998513805873	WITHOUT_CLASSIFICATION	1.4861941262164852E-7	DEFECT
// Test here again to avoid method call for non-directories!	WITHOUT_CLASSIFICATION	0.9997533643129352	WITHOUT_CLASSIFICATION	2.4663568706480786E-4	DEFECT
// must match the default value of Ant#inheritAll	WITHOUT_CLASSIFICATION	0.9999991972308058	WITHOUT_CLASSIFICATION	8.027691942056361E-7	DEFECT
// must match the default value of Ant#inheritRefs	WITHOUT_CLASSIFICATION	0.9999996990948311	WITHOUT_CLASSIFICATION	3.0090516883801804E-7	DEFECT
/*<TargetElement>*/	WITHOUT_CLASSIFICATION	0.999957979129292	WITHOUT_CLASSIFICATION	4.2020870708104264E-5	DEFECT
// check if one of the builds failed in keep going mode	WITHOUT_CLASSIFICATION	0.999936683779964	WITHOUT_CLASSIFICATION	6.331622003595078E-5	DEFECT
//     REVISIT: Defaults to the target name that contains this task if not specified.	WITHOUT_CLASSIFICATION	0.9998985070707452	WITHOUT_CLASSIFICATION	1.0149292925480205E-4	DEFECT
// END class SubAnt	WITHOUT_CLASSIFICATION	0.9999354210657697	WITHOUT_CLASSIFICATION	6.457893423026391E-5	DEFECT
// Child elements.	WITHOUT_CLASSIFICATION	0.9999922563164325	WITHOUT_CLASSIFICATION	7.743683567453897E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999569078800925	WITHOUT_CLASSIFICATION	4.309211990746606E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999707121018232	WITHOUT_CLASSIFICATION	2.9287898176784134E-5	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.998803732051834	WITHOUT_CLASSIFICATION	0.0011962679481660166	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.998803732051834	WITHOUT_CLASSIFICATION	0.0011962679481660166	DEFECT
// Empty	WITHOUT_CLASSIFICATION	0.999909408276156	WITHOUT_CLASSIFICATION	9.05917238440131E-5	DEFECT
// this command will be executed only on the specified OS	WITHOUT_CLASSIFICATION	0.999046918700611	WITHOUT_CLASSIFICATION	9.530812993890296E-4	DEFECT
// default directory to the project's base directory	WITHOUT_CLASSIFICATION	0.9999877993006862	WITHOUT_CLASSIFICATION	1.2200699313827317E-5	DEFECT
// assume the worst	WITHOUT_CLASSIFICATION	0.9999895893176114	WITHOUT_CLASSIFICATION	1.041068238863861E-5	DEFECT
// show the command	WITHOUT_CLASSIFICATION	0.9999461940963926	WITHOUT_CLASSIFICATION	5.380590360743119E-5	DEFECT
// close the output file if required	WITHOUT_CLASSIFICATION	0.9999480835689567	WITHOUT_CLASSIFICATION	5.191643104318888E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999675172071433	WITHOUT_CLASSIFICATION	3.2482792856694074E-5	DEFECT
// This directory may have become empty... // We need to re-query its children list!	WITHOUT_CLASSIFICATION	0.9911142960715791	WITHOUT_CLASSIFICATION	0.00888570392842089	DEFECT
// // Various copy attributes/subelements of <copy> passed thru to <mycopy> //	WITHOUT_CLASSIFICATION	0.9999978996962925	WITHOUT_CLASSIFICATION	2.1003037074842297E-6	DEFECT
// List of files that must be copied, irrelevant from the // fact that they are newer or not than the destination.	WITHOUT_CLASSIFICATION	0.9999804831863148	WITHOUT_CLASSIFICATION	1.9516813685186677E-5	DEFECT
// cf. NB #47191	WITHOUT_CLASSIFICATION	0.9999632255683977	WITHOUT_CLASSIFICATION	3.6774431602415195E-5	DEFECT
// Should work whether or not redirector.inputStream == null:	WITHOUT_CLASSIFICATION	0.998862991494585	WITHOUT_CLASSIFICATION	0.001137008505414992	DEFECT
// #24918: send standard input to the process by default.	WITHOUT_CLASSIFICATION	0.9999967781236448	WITHOUT_CLASSIFICATION	3.221876355165326E-6	DEFECT
// test if os match	WITHOUT_CLASSIFICATION	0.9999983970266851	WITHOUT_CLASSIFICATION	1.6029733148497628E-6	DEFECT
// exec command on system runtime	WITHOUT_CLASSIFICATION	0.9995067560679509	WITHOUT_CLASSIFICATION	4.932439320491041E-4	DEFECT
// copy input and error to the output stream	WITHOUT_CLASSIFICATION	0.99998072839267	WITHOUT_CLASSIFICATION	1.9271607329867314E-5	DEFECT
// starts pumping away the generated output/error	WITHOUT_CLASSIFICATION	0.9999975471740556	WITHOUT_CLASSIFICATION	2.4528259444126483E-6	DEFECT
// Wait for everything to finish	WITHOUT_CLASSIFICATION	0.9999897146067792	WITHOUT_CLASSIFICATION	1.0285393220832922E-5	DEFECT
// check its exit value	WITHOUT_CLASSIFICATION	0.9999953495424023	WITHOUT_CLASSIFICATION	4.650457597781981E-6	DEFECT
// Inner class for continually pumping the input stream during // Process's runtime.	WITHOUT_CLASSIFICATION	0.9999485409200466	WITHOUT_CLASSIFICATION	5.145907995341668E-5	DEFECT
// The size of buffers to be used	WITHOUT_CLASSIFICATION	0.9998825276769504	WITHOUT_CLASSIFICATION	1.1747232304964915E-4	DEFECT
// Attributes.	WITHOUT_CLASSIFICATION	0.9999865961962389	WITHOUT_CLASSIFICATION	1.3403803761228071E-5	DEFECT
// Attribute setters.	WITHOUT_CLASSIFICATION	0.9999799015953493	WITHOUT_CLASSIFICATION	2.009840465063843E-5	DEFECT
// Nested element creators.	WITHOUT_CLASSIFICATION	0.999998413720092	WITHOUT_CLASSIFICATION	1.5862799079308858E-6	DEFECT
// treat empty nested text as no text	WITHOUT_CLASSIFICATION	0.9999967661763572	WITHOUT_CLASSIFICATION	3.2338236427593005E-6	DEFECT
// if binary check if incompatible attributes are used	WITHOUT_CLASSIFICATION	0.9999956377671223	WITHOUT_CLASSIFICATION	4.362232877770424E-6	DEFECT
// Sanity check our inputs.	WITHOUT_CLASSIFICATION	0.9999822116294238	WITHOUT_CLASSIFICATION	1.7788370576296733E-5	DEFECT
// Nothing to concatenate!	WITHOUT_CLASSIFICATION	0.9999732186308787	WITHOUT_CLASSIFICATION	2.6781369121305014E-5	DEFECT
// no need to do anything	WITHOUT_CLASSIFICATION	0.9999232585885438	WITHOUT_CLASSIFICATION	7.674141145619335E-5	DEFECT
// Log using WARN so it displays in 'quiet' mode.	WITHOUT_CLASSIFICATION	0.999893816305626	WITHOUT_CLASSIFICATION	1.0618369437395853E-4	DEFECT
// ensure that the parent dir of dest file exists	WITHOUT_CLASSIFICATION	0.999997889548467	WITHOUT_CLASSIFICATION	2.1104515330965277E-6	DEFECT
// non-existing files are not allowed	WITHOUT_CLASSIFICATION	0.9998632995059352	WITHOUT_CLASSIFICATION	1.3670049406476256E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999707121018232	WITHOUT_CLASSIFICATION	2.9287898176784134E-5	DEFECT
// Create a ZipFileSet for this file, and pass it up.	WITHOUT_CLASSIFICATION	0.9999989335993041	WITHOUT_CLASSIFICATION	1.0664006957941982E-6	DEFECT
// We just set the prefix for this fileset, and pass it up.	WITHOUT_CLASSIFICATION	0.9999937563202457	WITHOUT_CLASSIFICATION	6.243679754386931E-6	DEFECT
// by default, messages are always displayed	WITHOUT_CLASSIFICATION	0.9999991438897153	WITHOUT_CLASSIFICATION	8.561102846427953E-7	DEFECT
// close the output file if required	WITHOUT_CLASSIFICATION	0.9999480835689567	WITHOUT_CLASSIFICATION	5.191643104318888E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999675172071433	WITHOUT_CLASSIFICATION	3.2482792856694074E-5	DEFECT
// Initialize to the size of the first text fragment, with // the hopes that it's the only one.	WITHOUT_CLASSIFICATION	0.9998955797785916	WITHOUT_CLASSIFICATION	1.0442022140852372E-4	DEFECT
// Append the fragment -- we defer property replacement until // later just in case we get a partial property in a fragment.	WITHOUT_CLASSIFICATION	0.9999937412085096	WITHOUT_CLASSIFICATION	6.258791490484485E-6	DEFECT
// If using resources, disallow inline text. This is similar to // using GNU 'cat' with file arguments -- stdin is simply // ignored.	WITHOUT_CLASSIFICATION	0.9999819963976353	WITHOUT_CLASSIFICATION	1.8003602364698706E-5	DEFECT
/*package*/	WITHOUT_CLASSIFICATION	0.9997762500508587	WITHOUT_CLASSIFICATION	2.2374994914130331E-4	DEFECT
/*package*/	WITHOUT_CLASSIFICATION	0.9997762500508587	WITHOUT_CLASSIFICATION	2.2374994914130331E-4	DEFECT
// If the file being added is WEB-INF/web.xml, we warn if it's // not the one specified in the "webxml" attribute - or if // it's being added twice, meaning the same file is specified // by the "webxml" attribute and in a <fileset> element.	WITHOUT_CLASSIFICATION	0.9999997841046986	WITHOUT_CLASSIFICATION	2.1589530137667486E-7	DEFECT
//by default, we add the file.	WITHOUT_CLASSIFICATION	0.9999804678503297	WITHOUT_CLASSIFICATION	1.95321496703099E-5	DEFECT
//a web.xml file was found. See if it is a duplicate or not	WITHOUT_CLASSIFICATION	0.9999962359946025	WITHOUT_CLASSIFICATION	3.764005397603001E-6	DEFECT
//a second web.xml file, so skip it	WITHOUT_CLASSIFICATION	0.9999786890904141	WITHOUT_CLASSIFICATION	2.131090958588955E-5	DEFECT
//check to see if we warn or not	WITHOUT_CLASSIFICATION	0.9999756271564102	WITHOUT_CLASSIFICATION	2.4372843589823023E-5	DEFECT
//no added file, yet	WITHOUT_CLASSIFICATION	0.9999074403563445	WITHOUT_CLASSIFICATION	9.255964365547779E-5	DEFECT
//there is no web.xml file, so add it	WITHOUT_CLASSIFICATION	0.9999280135818748	WITHOUT_CLASSIFICATION	7.198641812526772E-5	DEFECT
//and remember that we did	WITHOUT_CLASSIFICATION	0.9999382595593462	WITHOUT_CLASSIFICATION	6.174044065376397E-5	DEFECT
//validation	WITHOUT_CLASSIFICATION	0.9981640812233836	WITHOUT_CLASSIFICATION	0.0018359187766163077	DEFECT
//discard most of really big resources	WITHOUT_CLASSIFICATION	0.9999687134040628	WITHOUT_CLASSIFICATION	3.128659593721121E-5	DEFECT
//open up the resource	WITHOUT_CLASSIFICATION	0.9998442086197288	WITHOUT_CLASSIFICATION	1.5579138027129553E-4	DEFECT
// impossible since *our* processLine doesn't throw an IOException	WITHOUT_CLASSIFICATION	0.9999984878164453	WITHOUT_CLASSIFICATION	1.5121835546335596E-6	DEFECT
// There have been reports that 300 files could be compiled // so 250 is a conservative approach	WITHOUT_CLASSIFICATION	0.9998836812384854	WITHOUT_CLASSIFICATION	1.1631876151457475E-4	DEFECT
// We assume, that everything jikes writes goes to // standard output, not to standard error. The option // -Xstdout that is given to Jikes in Javac.doJikesCompile() // should guarantee this. At least I hope so. :)	WITHOUT_CLASSIFICATION	0.9999544944431907	WITHOUT_CLASSIFICATION	4.550555680931384E-5	DEFECT
//if we have a RedirectorElement, return a decoy	WITHOUT_CLASSIFICATION	0.99997904041166	WITHOUT_CLASSIFICATION	2.0959588339998963E-5	DEFECT
// 0 --> srcIndex	WITHOUT_CLASSIFICATION	0.9999792397551474	WITHOUT_CLASSIFICATION	2.076024485265822E-5	DEFECT
// srcIndex --> targetIndex	WITHOUT_CLASSIFICATION	0.9999948698027877	WITHOUT_CLASSIFICATION	5.130197212343614E-6	DEFECT
// targets are already absolute file names	WITHOUT_CLASSIFICATION	0.9999994920345869	WITHOUT_CLASSIFICATION	5.079654130374558E-7	DEFECT
// targetIndex --> end	WITHOUT_CLASSIFICATION	0.9999917470261674	WITHOUT_CLASSIFICATION	8.252973832472976E-6	DEFECT
// 0 --> targetIndex	WITHOUT_CLASSIFICATION	0.9999945083434976	WITHOUT_CLASSIFICATION	5.491656502461069E-6	DEFECT
// 0 --> srcIndex	WITHOUT_CLASSIFICATION	0.9999792397551474	WITHOUT_CLASSIFICATION	2.076024485265822E-5	DEFECT
// contains AbstractFileSet // (both DirSet and FileSet)	WITHOUT_CLASSIFICATION	0.9999964903955209	WITHOUT_CLASSIFICATION	3.5096044791822706E-6	DEFECT
// need to reset the stream handler to restart // reading of pipes; // go ahead and do it always w/ nested redirectors	WITHOUT_CLASSIFICATION	0.9999690933929757	WITHOUT_CLASSIFICATION	3.090660702436778E-5	DEFECT
// need to reset the stream handler to restart // reading of pipes; // go ahead and do it always w/ nested redirectors	WITHOUT_CLASSIFICATION	0.9999690933929757	WITHOUT_CLASSIFICATION	3.090660702436778E-5	DEFECT
// targets are already absolute file names	WITHOUT_CLASSIFICATION	0.9999994920345869	WITHOUT_CLASSIFICATION	5.079654130374558E-7	DEFECT
// targetIndex --> srcIndex	WITHOUT_CLASSIFICATION	0.9999949356564436	WITHOUT_CLASSIFICATION	5.064343556478635E-6	DEFECT
// srcIndex --> end	WITHOUT_CLASSIFICATION	0.9999704255453753	WITHOUT_CLASSIFICATION	2.957445462469977E-5	DEFECT
// srcIndex --> end	WITHOUT_CLASSIFICATION	0.9999704255453753	WITHOUT_CLASSIFICATION	2.957445462469977E-5	DEFECT
// no targetFilePos	WITHOUT_CLASSIFICATION	0.9999985186900832	WITHOUT_CLASSIFICATION	1.4813099168916198E-6	DEFECT
// fill in source file names	WITHOUT_CLASSIFICATION	0.9999984049828499	WITHOUT_CLASSIFICATION	1.5950171501501856E-6	DEFECT
/* this is skipEmpty == false */	WITHOUT_CLASSIFICATION	0.9999454730901348	WITHOUT_CLASSIFICATION	5.452690986517814E-5	DEFECT
//if there is a new priority, and it is different, change it	WITHOUT_CLASSIFICATION	0.999978894620161	WITHOUT_CLASSIFICATION	2.11053798389082E-5	DEFECT
//catch permissions denial and keep going	WITHOUT_CLASSIFICATION	0.9999927167135597	WITHOUT_CLASSIFICATION	7.283286440281212E-6	DEFECT
//-- XSLTLiaison	WITHOUT_CLASSIFICATION	0.999544974590742	WITHOUT_CLASSIFICATION	4.550254092580414E-4	DEFECT
// Write the properties file back out	WITHOUT_CLASSIFICATION	0.999971384748472	WITHOUT_CLASSIFICATION	2.8615251528019983E-5	DEFECT
//Finally set the property	WITHOUT_CLASSIFICATION	0.9989247446859999	WITHOUT_CLASSIFICATION	0.0010752553140001065	DEFECT
// Try parsing the line into an integer.	WITHOUT_CLASSIFICATION	0.9999610676949653	WITHOUT_CLASSIFICATION	3.893230503467739E-5	DEFECT
//-- XSLTProcess	WITHOUT_CLASSIFICATION	0.9999717048456104	WITHOUT_CLASSIFICATION	2.8295154389749336E-5	DEFECT
// check if liaison wants to log errors using us as logger	WITHOUT_CLASSIFICATION	0.9999602537872431	WITHOUT_CLASSIFICATION	3.9746212756890605E-5	DEFECT
// If we enter here, it means that the stylesheet is supplied // via style attribute	WITHOUT_CLASSIFICATION	0.9999970549904985	WITHOUT_CLASSIFICATION	2.9450095015347173E-6	DEFECT
/*                     * shouldn't throw out deprecation warnings before we know,                     * the wrong version has been used.                     */	WITHOUT_CLASSIFICATION	0.998996313283597	WITHOUT_CLASSIFICATION	0.001003686716403078	DEFECT
// if we have an in file and out then process them	WITHOUT_CLASSIFICATION	0.9999992676575155	WITHOUT_CLASSIFICATION	7.323424846486238E-7	DEFECT
//-- make sure destination directory exists...	WITHOUT_CLASSIFICATION	0.9950864182711819	WITHOUT_CLASSIFICATION	0.0049135817288181146	DEFECT
// Process all the files marked for styling	WITHOUT_CLASSIFICATION	0.9999994252412582	WITHOUT_CLASSIFICATION	5.747587418508006E-7	DEFECT
// Process all the directories marked for styling	WITHOUT_CLASSIFICATION	0.9999989622510967	WITHOUT_CLASSIFICATION	1.0377489033308884E-6	DEFECT
// only resource collections, there better be some	WITHOUT_CLASSIFICATION	0.9999892557760922	WITHOUT_CLASSIFICATION	1.0744223907759627E-5	DEFECT
//anything else is a classname	WITHOUT_CLASSIFICATION	0.9999895199361531	WITHOUT_CLASSIFICATION	1.0480063846868533E-5	DEFECT
//-- processXML	WITHOUT_CLASSIFICATION	0.9999687358912582	WITHOUT_CLASSIFICATION	3.1264108741779745E-5	DEFECT
// Param	WITHOUT_CLASSIFICATION	0.9999908103559944	WITHOUT_CLASSIFICATION	9.189644005636008E-6	DEFECT
// New env var...append the previous one if we have it.	WITHOUT_CLASSIFICATION	0.9999965565895217	WITHOUT_CLASSIFICATION	3.4434104781746015E-6	DEFECT
// Mac	WITHOUT_CLASSIFICATION	0.9999767655192271	WITHOUT_CLASSIFICATION	2.3234480773005298E-5	DEFECT
//validation	WITHOUT_CLASSIFICATION	0.9981640812233836	WITHOUT_CLASSIFICATION	0.0018359187766163077	DEFECT
// If failed to process document, must delete target document, // or it will not attempt to process it the second time	WITHOUT_CLASSIFICATION	0.9999660115609408	WITHOUT_CLASSIFICATION	3.398843905919311E-5	DEFECT
// if processor wasn't specified, see if TraX is available.  If not, // default it to xalan, depending on which is in the classpath	WITHOUT_CLASSIFICATION	0.9999832382466208	WITHOUT_CLASSIFICATION	1.6761753379172165E-5	DEFECT
// We call liason.configure() and then liaison.setStylesheet() // so that the internal variables of liaison can be set up	WITHOUT_CLASSIFICATION	0.9999992875853855	WITHOUT_CLASSIFICATION	7.12414614551878E-7	DEFECT
// If we are here we can set the stylesheet as a // resource	WITHOUT_CLASSIFICATION	0.9999676918709214	WITHOUT_CLASSIFICATION	3.230812907863886E-5	DEFECT
// If we are here we cannot set the stylesheet as // a resource, but we can set it as a file. So, // we make an attempt to get it as a file	WITHOUT_CLASSIFICATION	0.9999268887017944	WITHOUT_CLASSIFICATION	7.311129820561475E-5	DEFECT
// Give always a slash as file separator, so the stylesheet could be sure about that // Use '.' so a dir+"/"+name would not result in an absolute path	WITHOUT_CLASSIFICATION	0.999997829638724	WITHOUT_CLASSIFICATION	2.170361276028199E-6	DEFECT
// only 'name' and 'value' exist.	WITHOUT_CLASSIFICATION	0.9999946806364	WITHOUT_CLASSIFICATION	5.319363599976347E-6	DEFECT
// a value must be of a given type // say boolean|integer|string that are mostly used.	WITHOUT_CLASSIFICATION	0.9999997521575742	WITHOUT_CLASSIFICATION	2.4784242579448883E-7	DEFECT
// -- class Attribute	WITHOUT_CLASSIFICATION	0.9999947752956744	WITHOUT_CLASSIFICATION	5.224704325560781E-6	DEFECT
// -- class Factory	WITHOUT_CLASSIFICATION	0.999967469866412	WITHOUT_CLASSIFICATION	3.253013358794231E-5	DEFECT
// error message strings	WITHOUT_CLASSIFICATION	0.9999929686092454	WITHOUT_CLASSIFICATION	7.031390754606559E-6	DEFECT
//at this point there is one trailing space to remove, if the list is not empty.	WITHOUT_CLASSIFICATION	0.9997652552291197	WITHOUT_CLASSIFICATION	2.3474477088015233E-4	DEFECT
//now exit here if the property is already set	WITHOUT_CLASSIFICATION	0.9988024464130256	WITHOUT_CLASSIFICATION	0.001197553586974385	DEFECT
//and add any files if also defined	WITHOUT_CLASSIFICATION	0.9998618875000959	WITHOUT_CLASSIFICATION	1.3811249990411867E-4	DEFECT
//add path URLs	WITHOUT_CLASSIFICATION	0.9999746812854587	WITHOUT_CLASSIFICATION	2.531871454130417E-5	DEFECT
//create the URL //ant equivalent of  fileToConvert.toURI().toURL().toExternalForm();	WITHOUT_CLASSIFICATION	0.9999810144023336	WITHOUT_CLASSIFICATION	1.898559766649035E-5	DEFECT
// if we run into a timeout, the run-away thread shall not // make the VM run forever - if no timeout occurs, Ant's // main thread will still be there to let the new thread // finish	WITHOUT_CLASSIFICATION	0.9999680003462325	WITHOUT_CLASSIFICATION	3.19996537675383E-5	DEFECT
//Use the VM launcher instead of shell launcher on VMS	WITHOUT_CLASSIFICATION	0.9996187238437341	WITHOUT_CLASSIFICATION	3.812761562659131E-4	DEFECT
/*     * Builds a command launcher for the OS and JVM we are running under.     */	WITHOUT_CLASSIFICATION	0.9999886898440864	WITHOUT_CLASSIFICATION	1.1310155913635101E-5	DEFECT
// Try using a JDK 1.3 launcher	WITHOUT_CLASSIFICATION	0.9999434332026367	WITHOUT_CLASSIFICATION	5.656679736333572E-5	DEFECT
// Ignore and keep trying	WITHOUT_CLASSIFICATION	0.9999867803918753	WITHOUT_CLASSIFICATION	1.3219608124663222E-5	DEFECT
// OS/2	WITHOUT_CLASSIFICATION	0.9999182830101782	WITHOUT_CLASSIFICATION	8.171698982180471E-5	DEFECT
// Windows XP/2000/NT	WITHOUT_CLASSIFICATION	0.9989196721527636	WITHOUT_CLASSIFICATION	0.0010803278472364913	DEFECT
// Windows 98/95 - need to use an auxiliary script	WITHOUT_CLASSIFICATION	0.9999399543103937	WITHOUT_CLASSIFICATION	6.0045689606206325E-5	DEFECT
// OpenVMS	WITHOUT_CLASSIFICATION	0.9999006762529237	WITHOUT_CLASSIFICATION	9.932374707630102E-5	DEFECT
// Generic	WITHOUT_CLASSIFICATION	0.9999751160482017	WITHOUT_CLASSIFICATION	2.4883951798340893E-5	DEFECT
// Make sure we do not recurse forever	WITHOUT_CLASSIFICATION	0.9999680998028148	WITHOUT_CLASSIFICATION	3.190019718527194E-5	DEFECT
// Just try to use what we got	WITHOUT_CLASSIFICATION	0.9999957485371902	WITHOUT_CLASSIFICATION	4.2514628097779235E-6	DEFECT
// Since we "look ahead" before adding, there's one last env var.	WITHOUT_CLASSIFICATION	0.9999977679996829	WITHOUT_CLASSIFICATION	2.2320003172065686E-6	DEFECT
// Just try to see how much we got	WITHOUT_CLASSIFICATION	0.9999908911833959	WITHOUT_CLASSIFICATION	9.108816604125608E-6	DEFECT
// OS/2 - use same mechanism as Windows 2000	WITHOUT_CLASSIFICATION	0.9999348687321199	WITHOUT_CLASSIFICATION	6.513126788013543E-5	DEFECT
// Determine if we're running under XP/2000/NT or 98/95	WITHOUT_CLASSIFICATION	0.9999811170261228	WITHOUT_CLASSIFICATION	1.888297387722046E-5	DEFECT
// Windows 98/95	WITHOUT_CLASSIFICATION	0.9996622972340794	WITHOUT_CLASSIFICATION	3.3770276592055533E-4	DEFECT
// Windows XP/2000/NT/2003	WITHOUT_CLASSIFICATION	0.9991164147539922	WITHOUT_CLASSIFICATION	8.835852460078419E-4	DEFECT
// On most systems one could use: /bin/sh -c env	WITHOUT_CLASSIFICATION	0.9987471150004156	WITHOUT_CLASSIFICATION	0.001252884999584362	DEFECT
// Some systems have /bin/env, others /usr/bin/env, just try	WITHOUT_CLASSIFICATION	0.9999387087570408	WITHOUT_CLASSIFICATION	6.129124295913558E-5	DEFECT
// rely on PATH	WITHOUT_CLASSIFICATION	0.9993708328795039	WITHOUT_CLASSIFICATION	6.291671204960358E-4	DEFECT
// rely on PATH	WITHOUT_CLASSIFICATION	0.9993708328795039	WITHOUT_CLASSIFICATION	6.291671204960358E-4	DEFECT
//noop default encoding used	WITHOUT_CLASSIFICATION	0.9999289378497372	WITHOUT_CLASSIFICATION	7.10621502627916E-5	DEFECT
//By default, use the shell launcher for VMS //	WITHOUT_CLASSIFICATION	0.9999039891077388	WITHOUT_CLASSIFICATION	9.601089226114898E-5	DEFECT
// add the process to the list of those to destroy if the VM exits //	WITHOUT_CLASSIFICATION	0.9999986060668193	WITHOUT_CLASSIFICATION	1.393933180779096E-6	DEFECT
// #31928: forcibly kill it before continuing.	WITHOUT_CLASSIFICATION	0.9978652183535389	WITHOUT_CLASSIFICATION	0.002134781646461065	DEFECT
// remove the process to the list of those to destroy if // the VM exits //	WITHOUT_CLASSIFICATION	0.9999975344839613	WITHOUT_CLASSIFICATION	2.465516038570546E-6	DEFECT
//on openvms even exit value signals failure; // for other platforms nonzero exit value signals failure	WITHOUT_CLASSIFICATION	0.999857131720064	WITHOUT_CLASSIFICATION	1.4286827993611307E-4	DEFECT
// Get key including "="	WITHOUT_CLASSIFICATION	0.9999750133025274	WITHOUT_CLASSIFICATION	2.498669747255071E-5	DEFECT
// Nb: using default locale as key is a env name	WITHOUT_CLASSIFICATION	0.9999972645252851	WITHOUT_CLASSIFICATION	2.7354747147929434E-6	DEFECT
// Find the key in the current enviroment copy // and remove it.	WITHOUT_CLASSIFICATION	0.9997190695492683	WITHOUT_CLASSIFICATION	2.809304507317395E-4	DEFECT
// Use the original casiness of the key	WITHOUT_CLASSIFICATION	0.9999864038905688	WITHOUT_CLASSIFICATION	1.3596109431126322E-5	DEFECT
// Add the key to the enviromnent copy	WITHOUT_CLASSIFICATION	0.9999390529372499	WITHOUT_CLASSIFICATION	6.094706275002334E-5	DEFECT
// parse the VMS logicals into required format ("VAR=VAL[,VAL2]")	WITHOUT_CLASSIFICATION	0.9999958860960471	WITHOUT_CLASSIFICATION	4.113903952972924E-6	DEFECT
// further equivalence name of previous logical	WITHOUT_CLASSIFICATION	0.9999985230076048	WITHOUT_CLASSIFICATION	1.4769923951266603E-6	DEFECT
// new logical?	WITHOUT_CLASSIFICATION	0.9999952160114715	WITHOUT_CLASSIFICATION	4.783988528595628E-6	DEFECT
// already got this logical from a higher order table	WITHOUT_CLASSIFICATION	0.9999742554814945	WITHOUT_CLASSIFICATION	2.5744518505404285E-5	DEFECT
/* the arguments: */	WITHOUT_CLASSIFICATION	0.9999634069944259	WITHOUT_CLASSIFICATION	3.6593005574145495E-5	DEFECT
// IllegalAccess, IllegalArgument, ClassCast	WITHOUT_CLASSIFICATION	0.9999992331345365	WITHOUT_CLASSIFICATION	7.668654634906205E-7	DEFECT
// Locate the auxiliary script	WITHOUT_CLASSIFICATION	0.9999958369947441	WITHOUT_CLASSIFICATION	4.163005255882933E-6	DEFECT
// Build the command	WITHOUT_CLASSIFICATION	0.9999764513774771	WITHOUT_CLASSIFICATION	2.3548622522887598E-5	DEFECT
// add the environment as logicals to the DCL script	WITHOUT_CLASSIFICATION	0.999989208872555	WITHOUT_CLASSIFICATION	1.0791127444935204E-5	DEFECT
//empty	WITHOUT_CLASSIFICATION	0.9994888535314366	WITHOUT_CLASSIFICATION	5.111464685634536E-4	DEFECT
//empty	WITHOUT_CLASSIFICATION	0.9994888535314366	WITHOUT_CLASSIFICATION	5.111464685634536E-4	DEFECT
// Locate method Runtime.exec(String[] cmdarray, //                            String[] envp, File dir)	WITHOUT_CLASSIFICATION	0.9999992004233179	WITHOUT_CLASSIFICATION	7.995766820647875E-7	DEFECT
// Use cmd.exe to change to the specified drive and // directory before running the command	WITHOUT_CLASSIFICATION	0.9999847648468321	WITHOUT_CLASSIFICATION	1.5235153167845753E-5	DEFECT
// Use cmd.exe to change to the specified directory before running // the command	WITHOUT_CLASSIFICATION	0.9999434121983856	WITHOUT_CLASSIFICATION	5.658780161456663E-5	DEFECT
// need to set the project on unknown element	WITHOUT_CLASSIFICATION	0.9999093676768287	WITHOUT_CLASSIFICATION	9.063232317134869E-5	DEFECT
//************************************************************************ //  protected and private methods //************************************************************************	WITHOUT_CLASSIFICATION	0.9999991958509252	WITHOUT_CLASSIFICATION	8.041490746496031E-7	DEFECT
//Attempt complete directory renames, if any, first.	WITHOUT_CLASSIFICATION	0.9999881621740128	WITHOUT_CLASSIFICATION	1.183782598719253E-5	DEFECT
// files to move	WITHOUT_CLASSIFICATION	0.9999916151516405	WITHOUT_CLASSIFICATION	8.384848359515551E-6	DEFECT
//Is this file still available to be moved?	WITHOUT_CLASSIFICATION	0.9999685700756304	WITHOUT_CLASSIFICATION	3.142992436966386E-5	DEFECT
// if this is the last time through the loop then // move will not occur, but that's what we want	WITHOUT_CLASSIFICATION	0.9999396801947619	WITHOUT_CLASSIFICATION	6.0319805237978154E-5	DEFECT
// maybe io error?	WITHOUT_CLASSIFICATION	0.9999873257540478	WITHOUT_CLASSIFICATION	1.2674245952254912E-5	DEFECT
// found a file	WITHOUT_CLASSIFICATION	0.9999790445953946	WITHOUT_CLASSIFICATION	2.0955404605532602E-5	DEFECT
// on an io error list() can return null	WITHOUT_CLASSIFICATION	0.9999949191746226	WITHOUT_CLASSIFICATION	5.08082537749478E-6	DEFECT
// Whether *this VM* is 1.4+ (but also check executable != null).	WITHOUT_CLASSIFICATION	0.9999796021520065	WITHOUT_CLASSIFICATION	2.0397847993528026E-5	DEFECT
// ------------------------------------------ general Javadoc arguments	WITHOUT_CLASSIFICATION	0.9999990358405568	WITHOUT_CLASSIFICATION	9.641594431071088E-7	DEFECT
// ---------------------------- javadoc2 arguments for default doclet	WITHOUT_CLASSIFICATION	0.9999983789012815	WITHOUT_CLASSIFICATION	1.6210987184115342E-6	DEFECT
// add the links arguments	WITHOUT_CLASSIFICATION	0.9999958418974005	WITHOUT_CLASSIFICATION	4.158102599517004E-6	DEFECT
// should be impossible	WITHOUT_CLASSIFICATION	0.9999618897855692	WITHOUT_CLASSIFICATION	3.8110214430739284E-5	DEFECT
// is the href a valid URL	WITHOUT_CLASSIFICATION	0.9999990891978869	WITHOUT_CLASSIFICATION	9.10802113039386E-7	DEFECT
// ok - just skip	WITHOUT_CLASSIFICATION	0.9999849817113426	WITHOUT_CLASSIFICATION	1.5018288657300571E-5	DEFECT
//return	WITHOUT_CLASSIFICATION	0.9995449428537699	WITHOUT_CLASSIFICATION	4.550571462299517E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999707121018232	WITHOUT_CLASSIFICATION	2.9287898176784134E-5	DEFECT
//validation logic	WITHOUT_CLASSIFICATION	0.9994582046352806	WITHOUT_CLASSIFICATION	5.417953647194598E-4	DEFECT
// Ignore Exception	WITHOUT_CLASSIFICATION	0.9999271611205274	WITHOUT_CLASSIFICATION	7.283887947267933E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999675172071433	WITHOUT_CLASSIFICATION	3.2482792856694074E-5	DEFECT
// Only try to move if this is the last mapped file // and one of the mappings isn't to itself	WITHOUT_CLASSIFICATION	0.9999683466568982	WITHOUT_CLASSIFICATION	3.165334310190596E-5	DEFECT
// createArgument(true) is necessary to make sure -locale // is the first argument (required in 1.3+).	WITHOUT_CLASSIFICATION	0.9999986123147542	WITHOUT_CLASSIFICATION	1.3876852458964084E-6	DEFECT
// Go through the tokens one at a time, updating the // elements array and issuing warnings where appropriate.	WITHOUT_CLASSIFICATION	0.999996870616273	WITHOUT_CLASSIFICATION	3.1293837270053317E-6	DEFECT
// Ant javadoc task rules for group attribute: //   Args are comma-delimited. //   Each arg is 2 space-delimited strings. //   E.g., group="XSLT_Packages org.apache.xalan.xslt*, //                XPath_Packages org.apache.xalan.xpath*"	WITHOUT_CLASSIFICATION	0.999987513351096	WITHOUT_CLASSIFICATION	1.2486648904037898E-5	DEFECT
// add the group arguments	WITHOUT_CLASSIFICATION	0.9999910159333563	WITHOUT_CLASSIFICATION	8.98406664366113E-6	DEFECT
// Javadoc 1.4 parameters	WITHOUT_CLASSIFICATION	0.9999998537561285	WITHOUT_CLASSIFICATION	1.4624387145714186E-7	DEFECT
// The tag element is not used as a fileset, // but specifies the tag directly.	WITHOUT_CLASSIFICATION	0.9999476271562998	WITHOUT_CLASSIFICATION	5.2372843700226646E-5	DEFECT
// The tag element is used as a // fileset. Parse all the files and create // -tag arguments.	WITHOUT_CLASSIFICATION	0.9999951004864804	WITHOUT_CLASSIFICATION	4.89951351956042E-6	DEFECT
// Not 1.4+.	WITHOUT_CLASSIFICATION	0.9999485776647558	WITHOUT_CLASSIFICATION	5.142233524435002E-5	DEFECT
// Javadoc 1.2/1.3 parameters:	WITHOUT_CLASSIFICATION	0.9999996097926764	WITHOUT_CLASSIFICATION	3.902073236210732E-7	DEFECT
// If using an external file, write the command line options to it	WITHOUT_CLASSIFICATION	0.999997792616564	WITHOUT_CLASSIFICATION	2.2073834361237624E-6	DEFECT
// If using an external file, write the command line options to it	WITHOUT_CLASSIFICATION	0.999997792616564	WITHOUT_CLASSIFICATION	2.2073834361237624E-6	DEFECT
/*         * No reason to change the working directory as all filenames and         * path components have been resolved already.         *         * Avoid problems with command line length in some environments.         */	WITHOUT_CLASSIFICATION	0.9985737502022489	WITHOUT_CLASSIFICATION	0.0014262497977510931	DEFECT
// are there any java files in this directory?	WITHOUT_CLASSIFICATION	0.9999855025581849	WITHOUT_CLASSIFICATION	1.4497441815162787E-5	DEFECT
// We don't need to care for duplicates here, // Path.list does it for us.	WITHOUT_CLASSIFICATION	0.9999901998617639	WITHOUT_CLASSIFICATION	9.800138236123518E-6	DEFECT
// CheckStyle:MethodNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9999737798051116	WITHOUT_CLASSIFICATION	2.622019488847767E-5	DEFECT
/* Methods below all add specific selectors */	WITHOUT_CLASSIFICATION	0.9999944861055023	WITHOUT_CLASSIFICATION	5.513894497626527E-6	DEFECT
//convert a class name into a resource	WITHOUT_CLASSIFICATION	0.9999747305383526	WITHOUT_CLASSIFICATION	2.5269461647307653E-5	DEFECT
//set the property	WITHOUT_CLASSIFICATION	0.9995107846505833	WITHOUT_CLASSIFICATION	4.892153494167007E-4	DEFECT
// line feed	WITHOUT_CLASSIFICATION	0.9999793179469605	WITHOUT_CLASSIFICATION	2.0682053039466377E-5	DEFECT
// by default, remove matching empty dirs	WITHOUT_CLASSIFICATION	0.999998642827362	WITHOUT_CLASSIFICATION	1.3571726380018376E-6	DEFECT
// delete the single file	WITHOUT_CLASSIFICATION	0.9999905346312448	WITHOUT_CLASSIFICATION	9.465368755291805E-6	DEFECT
// delete the directory	WITHOUT_CLASSIFICATION	0.999986710157602	WITHOUT_CLASSIFICATION	1.3289842398079935E-5	DEFECT
//add the files from the default fileset:	WITHOUT_CLASSIFICATION	0.9999580400692206	WITHOUT_CLASSIFICATION	4.195993077944533E-5	DEFECT
// sort first to files, then dirs	WITHOUT_CLASSIFICATION	0.9999605575227716	WITHOUT_CLASSIFICATION	3.944247722846687E-5	DEFECT
/*                 * Plain impossible with UTF8, see                 * http://java.sun.com/j2se/1.5.0/docs/guide/intl/encoding.doc.html                 *                 * fallback to platform specific anyway.                 */	WITHOUT_CLASSIFICATION	0.999977950090587	WITHOUT_CLASSIFICATION	2.204990941296426E-5	DEFECT
//patch the redirector to save output to a file	WITHOUT_CLASSIFICATION	0.9999289898629172	WITHOUT_CLASSIFICATION	7.101013708276944E-5	DEFECT
//verify special operations	WITHOUT_CLASSIFICATION	0.9999498304464157	WITHOUT_CLASSIFICATION	5.016955358430935E-5	DEFECT
//JAR  is required	WITHOUT_CLASSIFICATION	0.9996511360101253	WITHOUT_CLASSIFICATION	3.4886398987457856E-4	DEFECT
//deal with jdk1.4.2 bug:	WITHOUT_CLASSIFICATION	0.9992513196750696	WITHOUT_CLASSIFICATION	7.486803249302857E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999675172071433	WITHOUT_CLASSIFICATION	3.2482792856694074E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999707121018232	WITHOUT_CLASSIFICATION	2.9287898176784134E-5	DEFECT
// now we need to populate the compiler adapter	WITHOUT_CLASSIFICATION	0.9999635856758908	WITHOUT_CLASSIFICATION	3.64143241090884E-5	DEFECT
// finally, lets execute the compiler!!	WITHOUT_CLASSIFICATION	0.9999814960005345	WITHOUT_CLASSIFICATION	1.850399946547986E-5	DEFECT
//validation	WITHOUT_CLASSIFICATION	0.9981640812233836	WITHOUT_CLASSIFICATION	0.0018359187766163077	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999675172071433	WITHOUT_CLASSIFICATION	3.2482792856694074E-5	DEFECT
// nonexistent resources could only occur if we already // deleted something from a fileset:	WITHOUT_CLASSIFICATION	0.9999933018269852	WITHOUT_CLASSIFICATION	6.698173014749317E-6	DEFECT
//cache	WITHOUT_CLASSIFICATION	0.999620327181693	WITHOUT_CLASSIFICATION	3.7967281830690786E-4	DEFECT
// no include pattern implicitly means includes="**"	WITHOUT_CLASSIFICATION	0.9999992273932005	WITHOUT_CLASSIFICATION	7.726067995898882E-7	DEFECT
//Do not process this file	WITHOUT_CLASSIFICATION	0.9999787941548419	WITHOUT_CLASSIFICATION	2.120584515808024E-5	DEFECT
// make sure facade knows about magic properties and fork setting	WITHOUT_CLASSIFICATION	0.9999567909145409	WITHOUT_CLASSIFICATION	4.320908545912737E-5	DEFECT
// deal with the resources	WITHOUT_CLASSIFICATION	0.9999869723276582	WITHOUT_CLASSIFICATION	1.3027672341886363E-5	DEFECT
// Make a transaction for each resource	WITHOUT_CLASSIFICATION	0.9999925257049267	WITHOUT_CLASSIFICATION	7.474295073263233E-6	DEFECT
// Make a transaction group for the outer command	WITHOUT_CLASSIFICATION	0.9999799911527827	WITHOUT_CLASSIFICATION	2.0008847217380448E-5	DEFECT
// Process all transactions	WITHOUT_CLASSIFICATION	0.9999996072291746	WITHOUT_CLASSIFICATION	3.927708254300608E-7	DEFECT
// Catch any statements not followed by ;	WITHOUT_CLASSIFICATION	0.9999508664014974	WITHOUT_CLASSIFICATION	4.913359850252619E-5	DEFECT
// Check and ignore empty statements	WITHOUT_CLASSIFICATION	0.999992181969411	WITHOUT_CLASSIFICATION	7.818030589045549E-6	DEFECT
/*     * Closes an unused connection after an error and doesn't rethrow     * a possible SQLException     * @since Ant 1.7     */	WITHOUT_CLASSIFICATION	0.9999973489705991	WITHOUT_CLASSIFICATION	2.65102940088239E-6	DEFECT
// dreaded backwards compatibility	WITHOUT_CLASSIFICATION	0.9999969642926398	WITHOUT_CLASSIFICATION	3.0357073601732255E-6	DEFECT
/*Throw an exception if cvs exited with error. (Iulian)*/	WITHOUT_CLASSIFICATION	0.9999399681181464	WITHOUT_CLASSIFICATION	6.003188185347981E-5	DEFECT
// re-implement legacy behaviour:	WITHOUT_CLASSIFICATION	0.9999849543095177	WITHOUT_CLASSIFICATION	1.5045690482407701E-5	DEFECT
// Check if not real cvsroot => set it to null	WITHOUT_CLASSIFICATION	0.9999474905518136	WITHOUT_CLASSIFICATION	5.2509448186331575E-5	DEFECT
// Check if not real cvsrsh => set it to null	WITHOUT_CLASSIFICATION	0.9999638676969824	WITHOUT_CLASSIFICATION	3.6132303017479224E-5	DEFECT
// Check if not real tag => set it to null	WITHOUT_CLASSIFICATION	0.9999356438821411	WITHOUT_CLASSIFICATION	6.435611785891876E-5	DEFECT
// close the output file if required	WITHOUT_CLASSIFICATION	0.9999480835689567	WITHOUT_CLASSIFICATION	5.191643104318888E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999675172071433	WITHOUT_CLASSIFICATION	3.2482792856694074E-5	DEFECT
//req // req	WITHOUT_CLASSIFICATION	0.9998452178276525	WITHOUT_CLASSIFICATION	1.5478217234757792E-4	DEFECT
// scan source directories and dest directory to build up // compile lists	WITHOUT_CLASSIFICATION	0.9999994825727402	WITHOUT_CLASSIFICATION	5.17427259859922E-7	DEFECT
//there is no need to expand properties here as that happens when Transaction.addText is //called; to do so here would be an error.	WITHOUT_CLASSIFICATION	0.9967817339737831	WITHOUT_CLASSIFICATION	0.0032182660262168507	DEFECT
//there are places (in this file, and perhaps elsewhere, where it is assumed //that null is an acceptable parameter.	WITHOUT_CLASSIFICATION	0.9999995217835218	WITHOUT_CLASSIFICATION	4.782164782042409E-7	DEFECT
// We can't do it ourselves as jCVS is GPLed, a third party task // outside of jakarta repositories would be possible though (SB).	WITHOUT_CLASSIFICATION	0.9999958661655148	WITHOUT_CLASSIFICATION	4.133834485108739E-6	DEFECT
// // Just call the getExecuteStreamHandler() and let it handle //     the semantics of instantiation or retrieval. //	WITHOUT_CLASSIFICATION	0.9999687937271401	WITHOUT_CLASSIFICATION	3.120627285989873E-5	DEFECT
// we are chmodding the given directory	WITHOUT_CLASSIFICATION	0.9999663227728732	WITHOUT_CLASSIFICATION	3.3677227126734225E-5	DEFECT
// may be altered in validateAttributes	WITHOUT_CLASSIFICATION	0.9999985752011277	WITHOUT_CLASSIFICATION	1.4247988723008132E-6	DEFECT
// will be removed in validateAttributes	WITHOUT_CLASSIFICATION	0.9999897960443893	WITHOUT_CLASSIFICATION	1.0203955610642036E-5	DEFECT
// make sure we don't have an illegal set of options	WITHOUT_CLASSIFICATION	0.9999838134994978	WITHOUT_CLASSIFICATION	1.618650050209168E-5	DEFECT
// deal with the single file	WITHOUT_CLASSIFICATION	0.9999720767895778	WITHOUT_CLASSIFICATION	2.7923210422121778E-5	DEFECT
// deal with the ResourceCollections	WITHOUT_CLASSIFICATION	0.9999986338756864	WITHOUT_CLASSIFICATION	1.3661243134800258E-6	DEFECT
// Step (1) - beware of the ZipFileSet	WITHOUT_CLASSIFICATION	0.9999960902208292	WITHOUT_CLASSIFICATION	3.909779170730323E-6	DEFECT
// not a fileset or contains non-file resources	WITHOUT_CLASSIFICATION	0.9999874700993204	WITHOUT_CLASSIFICATION	1.2529900679517359E-5	DEFECT
// copying of dirs is trivial and can be done // for non-file resources as well as for real // files.	WITHOUT_CLASSIFICATION	0.9999947345568805	WITHOUT_CLASSIFICATION	5.265443119567059E-6	DEFECT
// a not-directory file resource // needs special treatment	WITHOUT_CLASSIFICATION	0.9999792579964081	WITHOUT_CLASSIFICATION	2.0742003591866766E-5	DEFECT
// do all the copy operations now...	WITHOUT_CLASSIFICATION	0.9993556077383848	WITHOUT_CLASSIFICATION	6.443922616150442E-4	DEFECT
// restrict to out-of-date resources	WITHOUT_CLASSIFICATION	0.9999947776688527	WITHOUT_CLASSIFICATION	5.222331147255315E-6	DEFECT
// clean up again, so this instance can be used a second // time	WITHOUT_CLASSIFICATION	0.999999391469887	WITHOUT_CLASSIFICATION	6.085301129193439E-7	DEFECT
// reuse the array created by the mapper	WITHOUT_CLASSIFICATION	0.9999986364470562	WITHOUT_CLASSIFICATION	1.3635529438485856E-6	DEFECT
// reuse the array created by the mapper	WITHOUT_CLASSIFICATION	0.9999986364470562	WITHOUT_CLASSIFICATION	1.3635529438485856E-6	DEFECT
//now patch in all system properties	WITHOUT_CLASSIFICATION	0.9988376394891313	WITHOUT_CLASSIFICATION	0.0011623605108687586	DEFECT
// is the keystore a file	WITHOUT_CLASSIFICATION	0.9999967402711226	WITHOUT_CLASSIFICATION	3.259728877483122E-6	DEFECT
// must be a URL - just pass as is	WITHOUT_CLASSIFICATION	0.9999998428045687	WITHOUT_CLASSIFICATION	1.571954313629429E-7	DEFECT
// Gump friendly - don't mess with the core loader if only classpath	WITHOUT_CLASSIFICATION	0.9996252421535466	WITHOUT_CLASSIFICATION	3.7475784645332874E-4	DEFECT
// Construct a new class loader	WITHOUT_CLASSIFICATION	0.9999979820861705	WITHOUT_CLASSIFICATION	2.0179138294710057E-6	DEFECT
// The param is "parentFirst"	WITHOUT_CLASSIFICATION	0.9999910318416655	WITHOUT_CLASSIFICATION	8.968158334526726E-6	DEFECT
/*public*/	WITHOUT_CLASSIFICATION	0.9995249934818954	WITHOUT_CLASSIFICATION	4.750065181046918E-4	DEFECT
//shield it from being closed by a filtering StreamPumper	WITHOUT_CLASSIFICATION	0.9999940809177015	WITHOUT_CLASSIFICATION	5.919082298535638E-6	DEFECT
//shield it from being closed by a filtering StreamPumper	WITHOUT_CLASSIFICATION	0.9999940809177015	WITHOUT_CLASSIFICATION	5.919082298535638E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999675172071433	WITHOUT_CLASSIFICATION	3.2482792856694074E-5	DEFECT
// set read-only properties // CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9998249605684508	WITHOUT_CLASSIFICATION	1.7503943154923414E-4	DEFECT
// Are any other references held ? Can we 'close' the loader // so it removes the locks on jars ? // a new one will be created.	WITHOUT_CLASSIFICATION	0.9999941415497562	WITHOUT_CLASSIFICATION	5.8584502437286626E-6	DEFECT
// The core loader must be reverse //reverse=true;	WITHOUT_CLASSIFICATION	0.9999849315555448	WITHOUT_CLASSIFICATION	1.5068444455241171E-5	DEFECT
// This allows the core loader to load optional tasks // without delegating	WITHOUT_CLASSIFICATION	0.9972303198455783	WITHOUT_CLASSIFICATION	0.0027696801544217376	DEFECT
//wait for the StreamPumpers to finish	WITHOUT_CLASSIFICATION	0.9999796324732037	WITHOUT_CLASSIFICATION	2.0367526796361213E-5	DEFECT
// Ignore exception	WITHOUT_CLASSIFICATION	0.9999409144231644	WITHOUT_CLASSIFICATION	5.908557683564752E-5	DEFECT
// Normalize the reference directory (containing the jar)	WITHOUT_CLASSIFICATION	0.9999800073629326	WITHOUT_CLASSIFICATION	1.99926370674727E-5	DEFECT
// Normalize the current file	WITHOUT_CLASSIFICATION	0.9999853241990853	WITHOUT_CLASSIFICATION	1.4675800914678402E-5	DEFECT
// No match, so bail out!	WITHOUT_CLASSIFICATION	0.9999907037484301	WITHOUT_CLASSIFICATION	9.296251569827185E-6	DEFECT
// Finally assign the property with the manifest classpath	WITHOUT_CLASSIFICATION	0.9989068328991793	WITHOUT_CLASSIFICATION	0.001093167100820822	DEFECT
// try to find a MAX_LINE_LENGTH byte section	WITHOUT_CLASSIFICATION	0.9999648864997219	WITHOUT_CLASSIFICATION	3.5113500278086306E-5	DEFECT
// continuation line	WITHOUT_CLASSIFICATION	0.9999194860000459	WITHOUT_CLASSIFICATION	8.051399995414072E-5	DEFECT
// refresh attribute in case of multivalued attributes.	WITHOUT_CLASSIFICATION	0.9999932568257771	WITHOUT_CLASSIFICATION	6.74317422295428E-6	DEFECT
// the merge file always wins	WITHOUT_CLASSIFICATION	0.9999971119793434	WITHOUT_CLASSIFICATION	2.888020656596423E-6	DEFECT
// the merge file *always* wins, even for Class-Path	WITHOUT_CLASSIFICATION	0.9999989323098358	WITHOUT_CLASSIFICATION	1.0676901642069239E-6	DEFECT
// add in the warnings	WITHOUT_CLASSIFICATION	0.9999993941144654	WITHOUT_CLASSIFICATION	6.058855345671435E-7	DEFECT
// This should be the manifest version	WITHOUT_CLASSIFICATION	0.9997295033163351	WITHOUT_CLASSIFICATION	2.7049668366481146E-4	DEFECT
// add it back	WITHOUT_CLASSIFICATION	0.9999707175622143	WITHOUT_CLASSIFICATION	2.9282437785609496E-5	DEFECT
// shouldn't happen - ignore	WITHOUT_CLASSIFICATION	0.9995376564745972	WITHOUT_CLASSIFICATION	4.623435254028473E-4	DEFECT
// create a vector and add in the warnings for all the sections	WITHOUT_CLASSIFICATION	0.9999996836873191	WITHOUT_CLASSIFICATION	3.1631268103016246E-7	DEFECT
//off by default	WITHOUT_CLASSIFICATION	0.9999095312323535	WITHOUT_CLASSIFICATION	9.046876764659821E-5	DEFECT
//set up logging	WITHOUT_CLASSIFICATION	0.9999104125450786	WITHOUT_CLASSIFICATION	8.95874549214019E-5	DEFECT
//execute the get	WITHOUT_CLASSIFICATION	0.9998213754633196	WITHOUT_CLASSIFICATION	1.7862453668029943E-4	DEFECT
//dont do any progress, unless asked	WITHOUT_CLASSIFICATION	0.9996673163624843	WITHOUT_CLASSIFICATION	3.326836375157063E-4	DEFECT
//set the timestamp to the file date.	WITHOUT_CLASSIFICATION	0.9999676474994346	WITHOUT_CLASSIFICATION	3.235250056545397E-5	DEFECT
//set up the URL connection	WITHOUT_CLASSIFICATION	0.9999309554359129	WITHOUT_CLASSIFICATION	6.904456408705617E-5	DEFECT
// Create as many directory prefixes as parent levels to traverse, // in addition to the reference directory itself	WITHOUT_CLASSIFICATION	0.9999988657730787	WITHOUT_CLASSIFICATION	1.1342269213132682E-6	DEFECT
// Find the longest prefix shared by the current file // and the reference directory.	WITHOUT_CLASSIFICATION	0.9999416931726837	WITHOUT_CLASSIFICATION	5.83068273162009E-5	DEFECT
// We have a match! Add as many ../ as parent // directory traversed to get the relative path	WITHOUT_CLASSIFICATION	0.9999806533655007	WITHOUT_CLASSIFICATION	1.9346634499403933E-5	DEFECT
// Manifest's ClassPath: attribute always uses forward // slashes '/', and is space-separated. Ant will properly // format it on 72 columns with proper line continuation	WITHOUT_CLASSIFICATION	0.999978101787839	WITHOUT_CLASSIFICATION	2.18982121610156E-5	DEFECT
// a continuation on the first line is a // continuation of the name - concatenate this // line and the name	WITHOUT_CLASSIFICATION	0.9999976736571821	WITHOUT_CLASSIFICATION	2.3263428180545986E-6	DEFECT
// required // required	WITHOUT_CLASSIFICATION	0.9998396570841518	WITHOUT_CLASSIFICATION	1.603429158482125E-4	DEFECT
//modify the headers //NB: things like user authentication could go in here too.	WITHOUT_CLASSIFICATION	0.9808661960463533	WITHOUT_CLASSIFICATION	0.01913380395364678	DEFECT
// prepare Java 1.1 style credentials	WITHOUT_CLASSIFICATION	0.999999232283752	WITHOUT_CLASSIFICATION	7.67716247930874E-7	DEFECT
//we do not use the sun impl for portability, //and always use our own implementation for consistent //testing	WITHOUT_CLASSIFICATION	0.9998388767171171	WITHOUT_CLASSIFICATION	1.6112328288285204E-4	DEFECT
//connect to the remote site (may take some time)	WITHOUT_CLASSIFICATION	0.9997166958144059	WITHOUT_CLASSIFICATION	2.8330418559405636E-4	DEFECT
//next test for a 304 result (HTTP only)	WITHOUT_CLASSIFICATION	0.9999710376738041	WITHOUT_CLASSIFICATION	2.8962326195774647E-5	DEFECT
// test for 401 result (HTTP only)	WITHOUT_CLASSIFICATION	0.9999694258460755	WITHOUT_CLASSIFICATION	3.0574153924451577E-5	DEFECT
//REVISIT: at this point even non HTTP connections may //support the if-modified-since behaviour -we just check //the date of the content and skip the write if it is not //newer. Some protocols (FTP) don't include dates, of //course.	WITHOUT_CLASSIFICATION	0.9994120980666009	WITHOUT_CLASSIFICATION	5.879019333990533E-4	DEFECT
//this three attempt trick is to get round quirks in different //Java implementations. Some of them take a few goes to bind //property; we ignore the first couple of such failures.	WITHOUT_CLASSIFICATION	0.9989273971433682	WITHOUT_CLASSIFICATION	0.001072602856631804	DEFECT
//successful download	WITHOUT_CLASSIFICATION	0.999899832928019	WITHOUT_CLASSIFICATION	1.001670719810755E-4	DEFECT
// this happens if the projecthelper was not registered with the project.	WITHOUT_CLASSIFICATION	0.9998586195933646	WITHOUT_CLASSIFICATION	1.413804066353357E-4	DEFECT
// methods to register and unregister shutdown hooks	WITHOUT_CLASSIFICATION	0.9999746860460895	WITHOUT_CLASSIFICATION	2.5313953910477843E-5	DEFECT
// check to see if the shutdown hook methods exists // (support pre-JDK 1.3 VMs)	WITHOUT_CLASSIFICATION	0.9999717293276018	WITHOUT_CLASSIFICATION	2.8270672398137988E-5	DEFECT
// wait to add shutdown hook as needed	WITHOUT_CLASSIFICATION	0.9997221841189131	WITHOUT_CLASSIFICATION	2.7781588108691615E-4	DEFECT
// it just won't be added as a shutdown hook... :(	WITHOUT_CLASSIFICATION	0.9996108956675126	WITHOUT_CLASSIFICATION	3.891043324874341E-4	DEFECT
// shutdown already is in progress	WITHOUT_CLASSIFICATION	0.9998824973790875	WITHOUT_CLASSIFICATION	1.175026209123895E-4	DEFECT
// Ignore Exception	WITHOUT_CLASSIFICATION	0.9999271611205274	WITHOUT_CLASSIFICATION	7.283887947267933E-5	DEFECT
// shutdown already is in progress	WITHOUT_CLASSIFICATION	0.9998824973790875	WITHOUT_CLASSIFICATION	1.175026209123895E-4	DEFECT
// I don't think we can use File - different rules // for relative paths.	WITHOUT_CLASSIFICATION	0.9999010809784099	WITHOUT_CLASSIFICATION	9.891902159013514E-5	DEFECT
// this happens if ant is used with a project // helper that doesn't set the import.	WITHOUT_CLASSIFICATION	0.9999614282821717	WITHOUT_CLASSIFICATION	3.857171782834037E-5	DEFECT
// Paths are relative to the build file they're imported from, // *not* the current directory (same as entity includes).	WITHOUT_CLASSIFICATION	0.9999978235222076	WITHOUT_CLASSIFICATION	2.176477792485568E-6	DEFECT
// whether or not this ProcessDestroyer has been registered as a // shutdown hook	WITHOUT_CLASSIFICATION	0.9999465806996853	WITHOUT_CLASSIFICATION	5.341930031470206E-5	DEFECT
// whether or not this ProcessDestroyer is currently running as // shutdown hook	WITHOUT_CLASSIFICATION	0.9994829217135691	WITHOUT_CLASSIFICATION	5.170782864307745E-4	DEFECT
// this should return quickly, since it basically is a NO-OP.	WITHOUT_CLASSIFICATION	0.999914504247796	WITHOUT_CLASSIFICATION	8.54957522039092E-5	DEFECT
// the thread didn't die in time // it should not kill any processes unexpectedly	WITHOUT_CLASSIFICATION	0.9999421859795076	WITHOUT_CLASSIFICATION	5.7814020492586095E-5	DEFECT
// if this list is empty, register the shutdown hook	WITHOUT_CLASSIFICATION	0.9999597434737006	WITHOUT_CLASSIFICATION	4.0256526299366774E-5	DEFECT
// need to load Task via system classloader or the new // task we want to define will never be a Task but always // be wrapped into a TaskAdapter.	WITHOUT_CLASSIFICATION	0.9999779559596355	WITHOUT_CLASSIFICATION	2.2044040364526525E-5	DEFECT
// generate classpath, because kjc doesn't support sourcepath.	WITHOUT_CLASSIFICATION	0.999998823449341	WITHOUT_CLASSIFICATION	1.1765506590745494E-6	DEFECT
// generate the clsspath	WITHOUT_CLASSIFICATION	0.9999971786407514	WITHOUT_CLASSIFICATION	2.8213592485466943E-6	DEFECT
// kjc don't have bootclasspath option.	WITHOUT_CLASSIFICATION	0.9999317929440061	WITHOUT_CLASSIFICATION	6.820705599386271E-5	DEFECT
// Process the factory class	WITHOUT_CLASSIFICATION	0.9999958989719134	WITHOUT_CLASSIFICATION	4.1010280865475736E-6	DEFECT
// Process the factory path	WITHOUT_CLASSIFICATION	0.9999960162842176	WITHOUT_CLASSIFICATION	3.9837157823329555E-6	DEFECT
// Process the processor options	WITHOUT_CLASSIFICATION	0.9999997323805736	WITHOUT_CLASSIFICATION	2.6761942632901237E-7	DEFECT
//set up the javac options	WITHOUT_CLASSIFICATION	0.9999985123773096	WITHOUT_CLASSIFICATION	1.4876226904215428E-6	DEFECT
//then add the Apt options	WITHOUT_CLASSIFICATION	0.999978622126864	WITHOUT_CLASSIFICATION	2.137787313606543E-5	DEFECT
//finally invoke APT // Use reflection to be able to build on all JDKs:	WITHOUT_CLASSIFICATION	0.9997683890102855	WITHOUT_CLASSIFICATION	2.3161098971451703E-4	DEFECT
//rethrow build exceptions	WITHOUT_CLASSIFICATION	0.9999679675608076	WITHOUT_CLASSIFICATION	3.203243919240717E-5	DEFECT
//cast everything else to a build exception	WITHOUT_CLASSIFICATION	0.9999284459868852	WITHOUT_CLASSIFICATION	7.155401311478023E-5	DEFECT
// Call the compile() method	WITHOUT_CLASSIFICATION	0.9999974193686664	WITHOUT_CLASSIFICATION	2.5806313337022386E-6	DEFECT
// jvc doesn't support bootclasspath dir (-bootclasspath) // so we'll emulate it for compatibility and convenience.	WITHOUT_CLASSIFICATION	0.999995596728236	WITHOUT_CLASSIFICATION	4.403271764022594E-6	DEFECT
// jvc doesn't support an extension dir (-extdir) // so we'll emulate it for compatibility and convenience.	WITHOUT_CLASSIFICATION	0.9999957483470842	WITHOUT_CLASSIFICATION	4.251652915771056E-6	DEFECT
// jvc has no option for source-path so we // will add it to classpath.	WITHOUT_CLASSIFICATION	0.9999498387768025	WITHOUT_CLASSIFICATION	5.0161223197433114E-5	DEFECT
// Add the Classpath before the "internal" one.	WITHOUT_CLASSIFICATION	0.9999704624872277	WITHOUT_CLASSIFICATION	2.953751277235909E-5	DEFECT
// Enable MS-Extensions and ...	WITHOUT_CLASSIFICATION	0.9999869616987347	WITHOUT_CLASSIFICATION	1.3038301265322342E-5	DEFECT
// ... do not display a Message about this.	WITHOUT_CLASSIFICATION	0.9999527476190221	WITHOUT_CLASSIFICATION	4.725238097793176E-5	DEFECT
// Do not display Logo	WITHOUT_CLASSIFICATION	0.9999168501136528	WITHOUT_CLASSIFICATION	8.31498863471351E-5	DEFECT
//add the files	WITHOUT_CLASSIFICATION	0.9999748181353919	WITHOUT_CLASSIFICATION	2.518186460804109E-5	DEFECT
//run	WITHOUT_CLASSIFICATION	0.9982195288790747	WITHOUT_CLASSIFICATION	0.001780471120925223	DEFECT
//as new versions of java come out, add them to this test	WITHOUT_CLASSIFICATION	0.9999865482360298	WITHOUT_CLASSIFICATION	1.3451763970233941E-5	DEFECT
//on java<=1.3 the modern falls back to classic if it is not found //but on java>=1.4 we just bail out early	WITHOUT_CLASSIFICATION	0.9999445072867311	WITHOUT_CLASSIFICATION	5.5492713268890006E-5	DEFECT
// does the modern compiler exist?	WITHOUT_CLASSIFICATION	0.9999978363831128	WITHOUT_CLASSIFICATION	2.163616887191204E-6	DEFECT
// CheckStyle:ConstantNameCheck ON // CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999772683356223	WITHOUT_CLASSIFICATION	2.273166437777308E-5	DEFECT
// Combine the build classpath with the system classpath, in an // order determined by the value of build.sysclasspath	WITHOUT_CLASSIFICATION	0.9999824071736076	WITHOUT_CLASSIFICATION	1.7592826392380837E-5	DEFECT
// For -sourcepath, use the "sourcepath" value if present. // Otherwise default to the "srcdir" value.	WITHOUT_CLASSIFICATION	0.9999980995339196	WITHOUT_CLASSIFICATION	1.9004660803671054E-6	DEFECT
// Just add "sourcepath" to classpath ( for JDK1.1 ) // as well as "bootclasspath" and "extdirs"	WITHOUT_CLASSIFICATION	0.9999988791649609	WITHOUT_CLASSIFICATION	1.120835039119883E-6	DEFECT
// If the buildfile specifies sourcepath="", then don't // output any sourcepath.	WITHOUT_CLASSIFICATION	0.9996617019124614	WITHOUT_CLASSIFICATION	3.3829808753859037E-4	DEFECT
// If the buildfile specifies sourcepath="", then don't // output any sourcepath.	WITHOUT_CLASSIFICATION	0.9996617019124614	WITHOUT_CLASSIFICATION	3.3829808753859037E-4	DEFECT
// support for -source 1.1 and -source 1.2 has been // added with JDK 1.4.2 - and isn't present in 1.5.0 either	WITHOUT_CLASSIFICATION	0.9999873925347285	WITHOUT_CLASSIFICATION	1.2607465271484136E-5	DEFECT
// 1.5.0 doesn't support -source 1.1	WITHOUT_CLASSIFICATION	0.9999898232541321	WITHOUT_CLASSIFICATION	1.0176745867959239E-5	DEFECT
//Use the VM launcher instead of shell launcher on VMS //for java	WITHOUT_CLASSIFICATION	0.99982623940256	WITHOUT_CLASSIFICATION	1.7376059743994286E-4	DEFECT
// gcj doesn't support bootclasspath dir (-bootclasspath) // so we'll emulate it for compatibility and convenience.	WITHOUT_CLASSIFICATION	0.9999925131371525	WITHOUT_CLASSIFICATION	7.486862847457003E-6	DEFECT
// gcj doesn't support an extension dir (-extdir) // so we'll emulate it for compatibility and convenience.	WITHOUT_CLASSIFICATION	0.9999927709332195	WITHOUT_CLASSIFICATION	7.229066780587086E-6	DEFECT
// Gcj has no option for source-path so we // will add it to classpath.	WITHOUT_CLASSIFICATION	0.9999004527380589	WITHOUT_CLASSIFICATION	9.954726194101468E-5	DEFECT
// Use reflection to be able to build on all JDKs >= 1.1:	WITHOUT_CLASSIFICATION	0.9999427349925234	WITHOUT_CLASSIFICATION	5.7265007476690255E-5	DEFECT
// no bootclasspath, therefore, get one from the java runtime	WITHOUT_CLASSIFICATION	0.9999779443634396	WITHOUT_CLASSIFICATION	2.2055636560433892E-5	DEFECT
// if the user has set JIKESPATH we should add the contents as well	WITHOUT_CLASSIFICATION	0.9999859857815964	WITHOUT_CLASSIFICATION	1.401421840372922E-5	DEFECT
//reflection to avoid bootstrap/build problems	WITHOUT_CLASSIFICATION	0.999691024322223	WITHOUT_CLASSIFICATION	3.089756777770888E-4	DEFECT
//now verify that the class has an implementation	WITHOUT_CLASSIFICATION	0.9998753605041909	WITHOUT_CLASSIFICATION	1.246394958091354E-4	DEFECT
//windows probing logic relies on the word 'windows' in //the OS	WITHOUT_CLASSIFICATION	0.9976567097488576	WITHOUT_CLASSIFICATION	0.0023432902511423353	DEFECT
//there are only four 9x platforms that we look for	WITHOUT_CLASSIFICATION	0.9996678810345949	WITHOUT_CLASSIFICATION	3.321189654050375E-4	DEFECT
//wince isn't really 9x, but crippled enough to //be a muchness. Ant doesnt run on CE, anyway.	WITHOUT_CLASSIFICATION	0.999857626771428	WITHOUT_CLASSIFICATION	1.4237322857209376E-4	DEFECT
// millis per second	WITHOUT_CLASSIFICATION	0.9999498947278864	WITHOUT_CLASSIFICATION	5.010527211363615E-5	DEFECT
//get the host of a url	WITHOUT_CLASSIFICATION	0.9999043480517096	WITHOUT_CLASSIFICATION	9.565194829043593E-5	DEFECT
//Java1.5: reachable = address.isReachable(timeout * 1000);	WITHOUT_CLASSIFICATION	0.9999860114993252	WITHOUT_CLASSIFICATION	1.3988500674742089E-5	DEFECT
//utterly implausible, but catered for anyway	WITHOUT_CLASSIFICATION	0.9999738215944446	WITHOUT_CLASSIFICATION	2.6178405555428245E-5	DEFECT
// load the parser class	WITHOUT_CLASSIFICATION	0.9999971046400536	WITHOUT_CLASSIFICATION	2.895359946410656E-6	DEFECT
// may be altered in validate	WITHOUT_CLASSIFICATION	0.9999965456799995	WITHOUT_CLASSIFICATION	3.4543200004424123E-6	DEFECT
// Error messages	WITHOUT_CLASSIFICATION	0.9999690768903922	WITHOUT_CLASSIFICATION	3.092310960794541E-5	DEFECT
// plain impossible	WITHOUT_CLASSIFICATION	0.9999898542451605	WITHOUT_CLASSIFICATION	1.0145754839524496E-5	DEFECT
// support for -source 1.1 and -source 1.2 has been // added with JDK 1.4.2, Jikes doesn't like it	WITHOUT_CLASSIFICATION	0.9999935523684423	WITHOUT_CLASSIFICATION	6.447631557685817E-6	DEFECT
//assume this is an IOexception about un readability	WITHOUT_CLASSIFICATION	0.9998957359384861	WITHOUT_CLASSIFICATION	1.0426406151381901E-4	DEFECT
//any kind of fault: not reachable.	WITHOUT_CLASSIFICATION	0.9900180500133154	WITHOUT_CLASSIFICATION	0.009981949986684517	DEFECT
//java1.4 or earlier	WITHOUT_CLASSIFICATION	0.9999843552249389	WITHOUT_CLASSIFICATION	1.5644775061133476E-5	DEFECT
// don't know the type, should throw exception instead?	WITHOUT_CLASSIFICATION	0.9999022927787706	WITHOUT_CLASSIFICATION	9.770722122932942E-5	DEFECT
//pick a value that is good for everything	WITHOUT_CLASSIFICATION	0.999985160926448	WITHOUT_CLASSIFICATION	1.483907355208218E-5	DEFECT
//initial state is false.	WITHOUT_CLASSIFICATION	0.9999323248290709	WITHOUT_CLASSIFICATION	6.767517092905435E-5	DEFECT
//every condition is xored against the previous one	WITHOUT_CLASSIFICATION	0.9999510572279571	WITHOUT_CLASSIFICATION	4.894277204298354E-5	DEFECT
//validate	WITHOUT_CLASSIFICATION	0.9998091463632416	WITHOUT_CLASSIFICATION	1.9085363675852668E-4	DEFECT
//#now match the files	WITHOUT_CLASSIFICATION	0.9999818626335004	WITHOUT_CLASSIFICATION	1.8137366499500866E-5	DEFECT
// Intentionally left blank	WITHOUT_CLASSIFICATION	0.9998775300685214	WITHOUT_CLASSIFICATION	1.224699314786347E-4	DEFECT
//private static final int GET_ENTRY = 0;	WITHOUT_CLASSIFICATION	0.9999942141131566	WITHOUT_CLASSIFICATION	5.785886843460389E-6	DEFECT
// make sure attributes are reset when // working on a 'new' file.	WITHOUT_CLASSIFICATION	0.9997666666384382	WITHOUT_CLASSIFICATION	2.3333336156192044E-4	DEFECT
//We have ended changelog for that particular file //so we can save it	WITHOUT_CLASSIFICATION	0.9999843514553516	WITHOUT_CLASSIFICATION	1.5648544648425274E-5	DEFECT
//was -1	WITHOUT_CLASSIFICATION	0.9998557503101583	WITHOUT_CLASSIFICATION	1.4424968984165198E-4	DEFECT
//was -1	WITHOUT_CLASSIFICATION	0.9998557503101583	WITHOUT_CLASSIFICATION	1.4424968984165198E-4	DEFECT
//There were no revisions in this changelog //entry so lets move onto next file	WITHOUT_CLASSIFICATION	0.9997651416249177	WITHOUT_CLASSIFICATION	2.3485837508223717E-4	DEFECT
//Reset comment to empty here as we can accumulate multiple lines //in the processComment method	WITHOUT_CLASSIFICATION	0.9999977699276154	WITHOUT_CLASSIFICATION	2.230072384697576E-6	DEFECT
// We want something of the form: -d ">=YYYY-MM-dd"	WITHOUT_CLASSIFICATION	0.999983000114101	WITHOUT_CLASSIFICATION	1.699988589897868E-5	DEFECT
// Check if list of files to check has been specified	WITHOUT_CLASSIFICATION	0.9999427020357932	WITHOUT_CLASSIFICATION	5.729796420681128E-5	DEFECT
//for now skip entries which are missing a date	WITHOUT_CLASSIFICATION	0.9998722248611611	WITHOUT_CLASSIFICATION	1.2777513883888264E-4	DEFECT
//Skip dates that are too early	WITHOUT_CLASSIFICATION	0.9999111898687127	WITHOUT_CLASSIFICATION	8.881013128721374E-5	DEFECT
//Skip dates that are too late	WITHOUT_CLASSIFICATION	0.9999021888745351	WITHOUT_CLASSIFICATION	9.781112546494864E-5	DEFECT
// validate the input parameters	WITHOUT_CLASSIFICATION	0.9999993666627869	WITHOUT_CLASSIFICATION	6.333372131057293E-7	DEFECT
// build the rdiff command	WITHOUT_CLASSIFICATION	0.9999809650803443	WITHOUT_CLASSIFICATION	1.9034919655747465E-5	DEFECT
// if the two substrings are longer than the original, then name // contains address - so reset the name to null	WITHOUT_CLASSIFICATION	0.9999767311403759	WITHOUT_CLASSIFICATION	2.3268859624079094E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999675172071433	WITHOUT_CLASSIFICATION	3.2482792856694074E-5	DEFECT
// support multiple packages	WITHOUT_CLASSIFICATION	0.9999985610887979	WITHOUT_CLASSIFICATION	1.4389112019909152E-6	DEFECT
// force command not to be null	WITHOUT_CLASSIFICATION	0.9999915881310151	WITHOUT_CLASSIFICATION	8.411868984956205E-6	DEFECT
// run the cvs command	WITHOUT_CLASSIFICATION	0.9999685805803934	WITHOUT_CLASSIFICATION	3.1419419606632764E-5	DEFECT
// parse the rdiff	WITHOUT_CLASSIFICATION	0.9999946436316284	WITHOUT_CLASSIFICATION	5.356368371616345E-6	DEFECT
// write the tag diff	WITHOUT_CLASSIFICATION	0.9999582082080782	WITHOUT_CLASSIFICATION	4.179179192168539E-5	DEFECT
// parse the output of the command	WITHOUT_CLASSIFICATION	0.9999770466457544	WITHOUT_CLASSIFICATION	2.2953354245653545E-5	DEFECT
// it is a new file // set the revision but not the prevrevision	WITHOUT_CLASSIFICATION	0.9998879219659765	WITHOUT_CLASSIFICATION	1.1207803402346426E-4	DEFECT
// it is a modified file // set the revision and the prevrevision	WITHOUT_CLASSIFICATION	0.9999936971292062	WITHOUT_CLASSIFICATION	6.3028707938275415E-6	DEFECT
// it is a removed file	WITHOUT_CLASSIFICATION	0.9999983043864943	WITHOUT_CLASSIFICATION	1.6956135056816837E-6	DEFECT
/* special headers */	WITHOUT_CLASSIFICATION	0.9999767825093335	WITHOUT_CLASSIFICATION	2.321749066649996E-5	DEFECT
// prepare for the auto select mechanism	WITHOUT_CLASSIFICATION	0.9999984447920582	WITHOUT_CLASSIFICATION	1.5552079417557085E-6	DEFECT
// try MIME format	WITHOUT_CLASSIFICATION	0.9999564747066718	WITHOUT_CLASSIFICATION	4.3525293328057327E-5	DEFECT
// SMTP auth only allowed with MIME mail	WITHOUT_CLASSIFICATION	0.990353552472718	WITHOUT_CLASSIFICATION	0.009646447527281965	DEFECT
// SSL only allowed with MIME mail	WITHOUT_CLASSIFICATION	0.9954973332009105	WITHOUT_CLASSIFICATION	0.004502666799089555	DEFECT
// try UU format	WITHOUT_CLASSIFICATION	0.9999837897210687	WITHOUT_CLASSIFICATION	1.621027893127405E-5	DEFECT
// try plain format	WITHOUT_CLASSIFICATION	0.9999874753324358	WITHOUT_CLASSIFICATION	1.2524667564286333E-5	DEFECT
// a valid mailer must be present by now	WITHOUT_CLASSIFICATION	0.9999961956264856	WITHOUT_CLASSIFICATION	3.8043735144075086E-6	DEFECT
// a valid message is required	WITHOUT_CLASSIFICATION	0.9999960936726892	WITHOUT_CLASSIFICATION	3.906327310935253E-6	DEFECT
// an address to send from is required	WITHOUT_CLASSIFICATION	0.999917336954814	WITHOUT_CLASSIFICATION	8.266304518606975E-5	DEFECT
// at least one address to send to/cc/bcc is required	WITHOUT_CLASSIFICATION	0.999969732610068	WITHOUT_CLASSIFICATION	3.026738993193069E-5	DEFECT
// set the mimetype if not done already (and required)	WITHOUT_CLASSIFICATION	0.9999521583876338	WITHOUT_CLASSIFICATION	4.7841612366195734E-5	DEFECT
// set the character set if not done already (and required)	WITHOUT_CLASSIFICATION	0.9999195958784206	WITHOUT_CLASSIFICATION	8.040412157940435E-5	DEFECT
// identify which files should be attached	WITHOUT_CLASSIFICATION	0.9999683972766513	WITHOUT_CLASSIFICATION	3.1602723348695205E-5	DEFECT
// let the user know what's going to happen	WITHOUT_CLASSIFICATION	0.9999506318333142	WITHOUT_CLASSIFICATION	4.936816668579335E-5	DEFECT
// pass the params to the mailer	WITHOUT_CLASSIFICATION	0.9999965091257408	WITHOUT_CLASSIFICATION	3.4908742592666305E-6	DEFECT
// send the email	WITHOUT_CLASSIFICATION	0.9999697888691851	WITHOUT_CLASSIFICATION	3.0211130814919517E-5	DEFECT
// let the user know what happened	WITHOUT_CLASSIFICATION	0.9999821467810996	WITHOUT_CLASSIFICATION	1.7853218900337814E-5	DEFECT
// CheckStyle:MemberNameCheck ON	WITHOUT_CLASSIFICATION	0.9999803564642716	WITHOUT_CLASSIFICATION	1.964353572828789E-5	DEFECT
// Read message from a file	WITHOUT_CLASSIFICATION	0.9999984773887461	WITHOUT_CLASSIFICATION	1.5226112538664885E-6	DEFECT
// Make a limited attempt to extract a sanitized name and email address // Algorithm based on the one found in Ant's MailMessage.java	WITHOUT_CLASSIFICATION	0.9999881052264121	WITHOUT_CLASSIFICATION	1.1894773587941313E-5	DEFECT
// shortcut for "<address>"	WITHOUT_CLASSIFICATION	0.9999619985263313	WITHOUT_CLASSIFICATION	3.800147366867882E-5	DEFECT
// support "address (name)"	WITHOUT_CLASSIFICATION	0.999992660455042	WITHOUT_CLASSIFICATION	7.339544957990103E-6	DEFECT
// support "(name) address"	WITHOUT_CLASSIFICATION	0.9999913887434162	WITHOUT_CLASSIFICATION	8.611256583816254E-6	DEFECT
// To work properly with national charsets we have to use // implementation of interface javax.activation.DataSource	WITHOUT_CLASSIFICATION	0.996585638611186	WITHOUT_CLASSIFICATION	0.0034143613888141483	DEFECT
// Must be like "text/plain; charset=windows-1251"	WITHOUT_CLASSIFICATION	0.9999970920148822	WITHOUT_CLASSIFICATION	2.907985117822258E-6	DEFECT
// Aside, the JDK is clearly unaware of the Scottish // 'session', which involves excessive quantities of // alcohol :-)	WITHOUT_CLASSIFICATION	0.9999963209002949	WITHOUT_CLASSIFICATION	3.6790997052063454E-6	DEFECT
// SMTP provider	WITHOUT_CLASSIFICATION	0.999928354154412	WITHOUT_CLASSIFICATION	7.16458455880323E-5	DEFECT
//create the message	WITHOUT_CLASSIFICATION	0.9999837520429891	WITHOUT_CLASSIFICATION	1.6247957010895666E-5	DEFECT
//set the sender	WITHOUT_CLASSIFICATION	0.9998513136154771	WITHOUT_CLASSIFICATION	1.4868638452290964E-4	DEFECT
// set the reply to addresses	WITHOUT_CLASSIFICATION	0.9999646176406912	WITHOUT_CLASSIFICATION	3.538235930885305E-5	DEFECT
// Choosing character set of the mail message // First: looking it from MimeType	WITHOUT_CLASSIFICATION	0.9998291393498496	WITHOUT_CLASSIFICATION	1.708606501503071E-4	DEFECT
// Assign/reassign message charset from MimeType	WITHOUT_CLASSIFICATION	0.999995778320475	WITHOUT_CLASSIFICATION	4.221679524970722E-6	DEFECT
// Next: looking if charset having explicit definition	WITHOUT_CLASSIFICATION	0.9999425786572606	WITHOUT_CLASSIFICATION	5.7421342739534803E-5	DEFECT
// Using default	WITHOUT_CLASSIFICATION	0.9999941302515496	WITHOUT_CLASSIFICATION	5.869748450374705E-6	DEFECT
// Using javax.activation.DataSource paradigm	WITHOUT_CLASSIFICATION	0.9999977943074687	WITHOUT_CLASSIFICATION	2.205692531310341E-6	DEFECT
// Assuming mime type in form "text/XXXX; charset=XXXXXX"	WITHOUT_CLASSIFICATION	0.9999965147790245	WITHOUT_CLASSIFICATION	3.485220975597495E-6	DEFECT
// Skip 'charset='	WITHOUT_CLASSIFICATION	0.9999982244866563	WITHOUT_CLASSIFICATION	1.7755133436171795E-6	DEFECT
// Scanner to find our inputs // list of files to process	WITHOUT_CLASSIFICATION	0.9999989590938922	WITHOUT_CLASSIFICATION	1.0409061076443834E-6	DEFECT
// default srcDir to basedir	WITHOUT_CLASSIFICATION	0.9999942566624027	WITHOUT_CLASSIFICATION	5.743337597360391E-6	DEFECT
// Require destDir	WITHOUT_CLASSIFICATION	0.9999601813578148	WITHOUT_CLASSIFICATION	3.981864218522042E-5	DEFECT
// if src and dest dirs are the same, require the extension // to be set, so we don't stomp every file.  One could still // include a file with the same extension, but ....	WITHOUT_CLASSIFICATION	0.9999717982150278	WITHOUT_CLASSIFICATION	2.8201784972162625E-5	DEFECT
// File to convert // where to put the results	WITHOUT_CLASSIFICATION	0.9998609543079678	WITHOUT_CLASSIFICATION	1.390456920321115E-4	DEFECT
// Build the full file names	WITHOUT_CLASSIFICATION	0.9999980931658637	WITHOUT_CLASSIFICATION	1.9068341362879688E-6	DEFECT
// Make sure we're not about to clobber something	WITHOUT_CLASSIFICATION	0.999988713890279	WITHOUT_CLASSIFICATION	1.128610972099671E-5	DEFECT
// Make intermediate directories if needed // XXX JDK 1.1 doesn't have File.getParentFile,	WITHOUT_CLASSIFICATION	0.9998726554286189	WITHOUT_CLASSIFICATION	1.2734457138111077E-4	DEFECT
//this.fork = s;	WITHOUT_CLASSIFICATION	0.9996415226451051	WITHOUT_CLASSIFICATION	3.584773548949036E-4	DEFECT
//TODO: use ANTLR to parse the grammar file to do this.	WITHOUT_CLASSIFICATION	0.9562631026178692	WITHOUT_CLASSIFICATION	0.04373689738213077	DEFECT
// if no output directory is specified, used the target's directory	WITHOUT_CLASSIFICATION	0.9999973380748824	WITHOUT_CLASSIFICATION	2.661925117569309E-6	DEFECT
// first off, make sure that we've got a from and to extension	WITHOUT_CLASSIFICATION	0.9999842689742904	WITHOUT_CLASSIFICATION	1.5731025709604275E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc // CheckStyle:MemberNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9999918441846295	WITHOUT_CLASSIFICATION	8.155815370492086E-6	DEFECT
// CheckStyle:MemberNameCheck ON // CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999879057467134	WITHOUT_CLASSIFICATION	1.2094253286639807E-5	DEFECT
// Error strings	WITHOUT_CLASSIFICATION	0.9998387462804166	WITHOUT_CLASSIFICATION	1.612537195835279E-4	DEFECT
//validating	WITHOUT_CLASSIFICATION	0.99959076073839	WITHOUT_CLASSIFICATION	4.092392616098805E-4	DEFECT
//set the schema source for the doc	WITHOUT_CLASSIFICATION	0.999967178208663	WITHOUT_CLASSIFICATION	3.282179133698703E-5	DEFECT
//set the schema source for the doc	WITHOUT_CLASSIFICATION	0.999967178208663	WITHOUT_CLASSIFICATION	3.282179133698703E-5	DEFECT
//enable XSD	WITHOUT_CLASSIFICATION	0.9997862341415967	WITHOUT_CLASSIFICATION	2.1376585840325333E-4	DEFECT
//validate the parser type	WITHOUT_CLASSIFICATION	0.9999854984836516	WITHOUT_CLASSIFICATION	1.4501516348402551E-5	DEFECT
//couldnt use the xerces or jaxp calls	WITHOUT_CLASSIFICATION	0.999985436570505	WITHOUT_CLASSIFICATION	1.4563429494996244E-5	DEFECT
//enable schema checking	WITHOUT_CLASSIFICATION	0.9999422900275798	WITHOUT_CLASSIFICATION	5.7709972420163834E-5	DEFECT
//turn off DTDs if desired	WITHOUT_CLASSIFICATION	0.9998720924268312	WITHOUT_CLASSIFICATION	1.2790757316884872E-4	DEFECT
//schema declarations go in next	WITHOUT_CLASSIFICATION	0.9999598298471466	WITHOUT_CLASSIFICATION	4.0170152853498525E-5	DEFECT
// first off, make sure that we've got a srcdir and destdir	WITHOUT_CLASSIFICATION	0.9999964361541362	WITHOUT_CLASSIFICATION	3.5638458637035215E-6	DEFECT
//enable schema //setFeature(XmlConstants.FEATURE_VALIDATION, false);	WITHOUT_CLASSIFICATION	0.9999475443461667	WITHOUT_CLASSIFICATION	5.2455653833390565E-5	DEFECT
//this is almost implausible, but required handling	WITHOUT_CLASSIFICATION	0.9993413536564053	WITHOUT_CLASSIFICATION	6.586463435946626E-4	DEFECT
//SchemaLocation	WITHOUT_CLASSIFICATION	0.9994611235443557	WITHOUT_CLASSIFICATION	5.388764556442484E-4	DEFECT
//private Path extdirs;	WITHOUT_CLASSIFICATION	0.9999945477005002	WITHOUT_CLASSIFICATION	5.452299499763975E-6	DEFECT
// first off, make sure that we've got a srcdir	WITHOUT_CLASSIFICATION	0.9999897477789668	WITHOUT_CLASSIFICATION	1.0252221033264211E-5	DEFECT
// Keep jdk 1.1 compliant so others can use this	WITHOUT_CLASSIFICATION	0.999996764314772	WITHOUT_CLASSIFICATION	3.235685227894366E-6	DEFECT
// second CR -> EOL + possibly empty line	WITHOUT_CLASSIFICATION	0.9999884255392625	WITHOUT_CLASSIFICATION	1.1574460737524878E-5	DEFECT
// first CR in this line	WITHOUT_CLASSIFICATION	0.9999964431196104	WITHOUT_CLASSIFICATION	3.556880389668891E-6	DEFECT
// LF -> EOL	WITHOUT_CLASSIFICATION	0.9998639349225384	WITHOUT_CLASSIFICATION	1.360650774615499E-4	DEFECT
// any other char	WITHOUT_CLASSIFICATION	0.9999760818056442	WITHOUT_CLASSIFICATION	2.391819435571817E-5	DEFECT
// Mac-style linebreak or EOF (or both)	WITHOUT_CLASSIFICATION	0.9999954138205279	WITHOUT_CLASSIFICATION	4.586179472056975E-6	DEFECT
// variables to hold arguments	WITHOUT_CLASSIFICATION	0.9999979462736778	WITHOUT_CLASSIFICATION	2.0537263222031366E-6	DEFECT
// ?? Should this be the default for ant?	WITHOUT_CLASSIFICATION	0.999996441219682	WITHOUT_CLASSIFICATION	3.558780317986665E-6	DEFECT
// constants for the messages to suppress by flags and their corresponding properties	WITHOUT_CLASSIFICATION	0.9997662756690021	WITHOUT_CLASSIFICATION	2.3372433099781576E-4	DEFECT
// other implementation variables	WITHOUT_CLASSIFICATION	0.9999988076736703	WITHOUT_CLASSIFICATION	1.192326329731106E-6	DEFECT
// classpath makes no sense	WITHOUT_CLASSIFICATION	0.9999966145513329	WITHOUT_CLASSIFICATION	3.3854486670972646E-6	DEFECT
// destDir	WITHOUT_CLASSIFICATION	0.9999916636069396	WITHOUT_CLASSIFICATION	8.336393060521666E-6	DEFECT
// srcDir	WITHOUT_CLASSIFICATION	0.9999637550190441	WITHOUT_CLASSIFICATION	3.6244980956007275E-5	DEFECT
// copy the source and support files	WITHOUT_CLASSIFICATION	0.9999955912525627	WITHOUT_CLASSIFICATION	4.408747437350346E-6	DEFECT
// compile the source files	WITHOUT_CLASSIFICATION	0.9999968332931496	WITHOUT_CLASSIFICATION	3.166706850543481E-6	DEFECT
// create an array of strings for input to the compiler: one array // comes from the compile options, the other from the compileList	WITHOUT_CLASSIFICATION	0.999959036388668	WITHOUT_CLASSIFICATION	4.096361133197229E-5	DEFECT
// create a single array of arguments for the compiler	WITHOUT_CLASSIFICATION	0.9999820864665165	WITHOUT_CLASSIFICATION	1.79135334834395E-5	DEFECT
// print nice output about what we are doing for the log	WITHOUT_CLASSIFICATION	0.9999907199058635	WITHOUT_CLASSIFICATION	9.280094136562182E-6	DEFECT
// need to set java.class.path property and restore it later // since the NetRexx compiler has no option for the classpath	WITHOUT_CLASSIFICATION	0.9999775101152666	WITHOUT_CLASSIFICATION	2.2489884733421623E-5	DEFECT
// path is mentioned in the message	WITHOUT_CLASSIFICATION	0.999992936074356	WITHOUT_CLASSIFICATION	7.063925643989927E-6	DEFECT
// verbose level logging for suppressed messages	WITHOUT_CLASSIFICATION	0.9999960940497952	WITHOUT_CLASSIFICATION	3.905950204759661E-6	DEFECT
// error level logging for compiler errors	WITHOUT_CLASSIFICATION	0.9999638489341524	WITHOUT_CLASSIFICATION	3.615106584754876E-5	DEFECT
// warning for all warning messages	WITHOUT_CLASSIFICATION	0.999999360059702	WITHOUT_CLASSIFICATION	6.399402978880258E-7	DEFECT
// info level for the rest.	WITHOUT_CLASSIFICATION	0.9999890811452083	WITHOUT_CLASSIFICATION	1.0918854791655448E-5	DEFECT
// need to reset java.class.path property // since the NetRexx compiler has no option for the classpath	WITHOUT_CLASSIFICATION	0.9999494400303837	WITHOUT_CLASSIFICATION	5.0559969616315056E-5	DEFECT
// add our classpath to the mix	WITHOUT_CLASSIFICATION	0.9999914829314426	WITHOUT_CLASSIFICATION	8.517068557400386E-6	DEFECT
// add the system classpath // addExistingToClasspath(classpath,System.getProperty("java.class.path"));	WITHOUT_CLASSIFICATION	0.9999774267212259	WITHOUT_CLASSIFICATION	2.257327877406461E-5	DEFECT
// XMLReader used to validation process	WITHOUT_CLASSIFICATION	0.9999940181005986	WITHOUT_CLASSIFICATION	5.981899401434635E-6	DEFECT
// turn validation on	WITHOUT_CLASSIFICATION	0.9999003004979287	WITHOUT_CLASSIFICATION	9.969950207143116E-5	DEFECT
// set the feature from the attribute list	WITHOUT_CLASSIFICATION	0.9999861250853691	WITHOUT_CLASSIFICATION	1.3874914630988485E-5	DEFECT
// Sets properties	WITHOUT_CLASSIFICATION	0.9999646576192038	WITHOUT_CLASSIFICATION	3.5342380796164215E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999675172071433	WITHOUT_CLASSIFICATION	3.2482792856694074E-5	DEFECT
// quick exit if the target is up to date	WITHOUT_CLASSIFICATION	0.9999910738390567	WITHOUT_CLASSIFICATION	8.926160943197599E-6	DEFECT
// ant task properties // defaults // CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999859932637691	WITHOUT_CLASSIFICATION	1.4006736230917224E-5	DEFECT
// to report sax parsing errors // CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999093933876004	WITHOUT_CLASSIFICATION	9.060661239945422E-5	DEFECT
// then check it implements XMLReader	WITHOUT_CLASSIFICATION	0.9999869816273605	WITHOUT_CLASSIFICATION	1.301837263939329E-5	DEFECT
// see if it is a SAX1 Parser	WITHOUT_CLASSIFICATION	0.9999972788393653	WITHOUT_CLASSIFICATION	2.7211606347161494E-6	DEFECT
// Validates property	WITHOUT_CLASSIFICATION	0.9999540343754382	WITHOUT_CLASSIFICATION	4.596562456193089E-5	DEFECT
//for every file, we have a new instance of the validator	WITHOUT_CLASSIFICATION	0.9999694863775156	WITHOUT_CLASSIFICATION	3.051362248433122E-5	DEFECT
// if this is not a valid file: just use the uri	WITHOUT_CLASSIFICATION	0.9999727979066964	WITHOUT_CLASSIFICATION	2.7202093303680772E-5	DEFECT
// Property	WITHOUT_CLASSIFICATION	0.9998760176740529	WITHOUT_CLASSIFICATION	1.2398232594714367E-4	DEFECT
/*     * I'm not fond of this pattern: "sub-method expected to throw     * task-cancelling exceptions".  It feels too much like programming     * for side-effects to me...     */	WITHOUT_CLASSIFICATION	0.9999315941799888	WITHOUT_CLASSIFICATION	6.840582001113792E-5	DEFECT
// get files from old methods - includes and nested include	WITHOUT_CLASSIFICATION	0.9999996271754138	WITHOUT_CLASSIFICATION	3.7282458622256906E-7	DEFECT
// Create the stream pumpers to forward listcab's stdout and stderr to the log // note: listcab is an interactive program, and issues prompts for every new line. //       Therefore, make it show only with verbose logging turned on.	WITHOUT_CLASSIFICATION	0.9997309005133449	WITHOUT_CLASSIFICATION	2.690994866550927E-4	DEFECT
// Pump streams asynchronously	WITHOUT_CLASSIFICATION	0.9999900752289399	WITHOUT_CLASSIFICATION	9.924771060101646E-6	DEFECT
// A wild default for when the thread is interrupted	WITHOUT_CLASSIFICATION	0.9999806541594077	WITHOUT_CLASSIFICATION	1.9345840592186327E-5	DEFECT
// Wait for the process to finish	WITHOUT_CLASSIFICATION	0.9999990045968205	WITHOUT_CLASSIFICATION	9.954031796137023E-7	DEFECT
// Wait for the end of output and error streams	WITHOUT_CLASSIFICATION	0.9999607080936778	WITHOUT_CLASSIFICATION	3.929190632220083E-5	DEFECT
// Informative summary message in case of errors	WITHOUT_CLASSIFICATION	0.9999773623138609	WITHOUT_CLASSIFICATION	2.263768613911218E-5	DEFECT
// die if cabarc fails	WITHOUT_CLASSIFICATION	0.9999961508684292	WITHOUT_CLASSIFICATION	3.849131570794217E-6	DEFECT
// Use this to prepend a message to the properties file	WITHOUT_CLASSIFICATION	0.9999862392490758	WITHOUT_CLASSIFICATION	1.376075092424262E-5	DEFECT
/* ========================================================================    *    * Constructors    */	WITHOUT_CLASSIFICATION	0.9999921754027438	WITHOUT_CLASSIFICATION	7.824597256236687E-6	DEFECT
/* ========================================================================    *    * Methods    */	WITHOUT_CLASSIFICATION	0.9999748575110525	WITHOUT_CLASSIFICATION	2.5142488947402156E-5	DEFECT
// Create the PropertyFile	WITHOUT_CLASSIFICATION	0.9999737469379432	WITHOUT_CLASSIFICATION	2.6253062056801373E-5	DEFECT
// type may be null because it wasn't set	WITHOUT_CLASSIFICATION	0.9999973128339306	WITHOUT_CLASSIFICATION	2.687166069331064E-6	DEFECT
// Default to string type // which means do nothing	WITHOUT_CLASSIFICATION	0.999996221064769	WITHOUT_CLASSIFICATION	3.7789352308418835E-6	DEFECT
// Insert as a string by default	WITHOUT_CLASSIFICATION	0.9999899057896278	WITHOUT_CLASSIFICATION	1.0094210372228977E-5	DEFECT
// swallow	WITHOUT_CLASSIFICATION	0.9999081578705552	WITHOUT_CLASSIFICATION	9.184212944476873E-5	DEFECT
// configure the transformer...	WITHOUT_CLASSIFICATION	0.999975269178011	WITHOUT_CLASSIFICATION	2.4730821989026187E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999569078800925	WITHOUT_CLASSIFICATION	4.309211990746606E-5	DEFECT
// If only value is specified, the property is set to it // regardless of its previous value.	WITHOUT_CLASSIFICATION	0.9999520659244702	WITHOUT_CLASSIFICATION	4.793407552994389E-5	DEFECT
// If only default is specified and the property did not // exist in the property file, the property is set to default.	WITHOUT_CLASSIFICATION	0.9997434212758974	WITHOUT_CLASSIFICATION	2.56578724102569E-4	DEFECT
// If value and default are both specified and the property // previously existed in the property file, the property // is set to value.	WITHOUT_CLASSIFICATION	0.999996116950547	WITHOUT_CLASSIFICATION	3.883049452952072E-6	DEFECT
// If value and default are both specified and the property // did not exist in the property file, the property is set // to default.	WITHOUT_CLASSIFICATION	0.9999734015074252	WITHOUT_CLASSIFICATION	2.659849257469526E-5	DEFECT
// Property type operations	WITHOUT_CLASSIFICATION	0.9999919152116761	WITHOUT_CLASSIFICATION	8.084788323931093E-6	DEFECT
// Property types	WITHOUT_CLASSIFICATION	0.9999674577817049	WITHOUT_CLASSIFICATION	3.254221829498345E-5	DEFECT
// resetting the stylesheet - reset transformer	WITHOUT_CLASSIFICATION	0.9999872764431189	WITHOUT_CLASSIFICATION	1.2723556881156641E-5	DEFECT
// do we need to reset templates as well	WITHOUT_CLASSIFICATION	0.9999930396873491	WITHOUT_CLASSIFICATION	6.960312651019091E-6	DEFECT
// set parameters on each transformation, maybe something has changed //(e.g. value of file name parameter)	WITHOUT_CLASSIFICATION	0.9999995633755814	WITHOUT_CLASSIFICATION	4.366244186867516E-7	DEFECT
// end of try-catch	WITHOUT_CLASSIFICATION	0.9999872011606075	WITHOUT_CLASSIFICATION	1.27988393926421E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999707121018232	WITHOUT_CLASSIFICATION	2.9287898176784134E-5	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.998803732051834	WITHOUT_CLASSIFICATION	0.0011962679481660166	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999675172071433	WITHOUT_CLASSIFICATION	3.2482792856694074E-5	DEFECT
// WARN: Don't use the StreamSource(File) ctor. It won't work with // xalan prior to 2.2 because of systemid bugs.	WITHOUT_CLASSIFICATION	0.9971324860013456	WITHOUT_CLASSIFICATION	0.002867513998654347	DEFECT
// Use a stream so that you can close it yourself quickly // and avoid keeping the handle until the object is garbaged. // (always keep control), otherwise you won't be able to delete // the file quickly on windows.	WITHOUT_CLASSIFICATION	0.99971165064359	WITHOUT_CLASSIFICATION	2.8834935640994276E-4	DEFECT
// not initialized yet, so create the factory	WITHOUT_CLASSIFICATION	0.999976058769082	WITHOUT_CLASSIFICATION	2.394123091803513E-5	DEFECT
// specific attributes for the transformer	WITHOUT_CLASSIFICATION	0.9999981835966414	WITHOUT_CLASSIFICATION	1.8164033586044762E-6	DEFECT
// kept for backwards compatibility	WITHOUT_CLASSIFICATION	0.9999938569311952	WITHOUT_CLASSIFICATION	6.143068804726277E-6	DEFECT
// configure factory attributes	WITHOUT_CLASSIFICATION	0.9999320293645315	WITHOUT_CLASSIFICATION	6.79706354684515E-5	DEFECT
// use XMLCatalog as the entity resolver and URI resolver	WITHOUT_CLASSIFICATION	0.9999507325994279	WITHOUT_CLASSIFICATION	4.9267400572137574E-5	DEFECT
// configure output properties	WITHOUT_CLASSIFICATION	0.9998758501038064	WITHOUT_CLASSIFICATION	1.2414989619353612E-4	DEFECT
//copy the properties file	WITHOUT_CLASSIFICATION	0.9996445848127206	WITHOUT_CLASSIFICATION	3.554151872794612E-4	DEFECT
/* load properties from file if specified, otherwise        use Ant's properties */	WITHOUT_CLASSIFICATION	0.9999941737508835	WITHOUT_CLASSIFICATION	5.826249116511522E-6	DEFECT
// add ant properties	WITHOUT_CLASSIFICATION	0.999980163526611	WITHOUT_CLASSIFICATION	1.9836473389023542E-5	DEFECT
//sort the list. Makes SCM and manual diffs easier.	WITHOUT_CLASSIFICATION	0.999991483242495	WITHOUT_CLASSIFICATION	8.516757504961428E-6	DEFECT
// create XML document	WITHOUT_CLASSIFICATION	0.9999251061823509	WITHOUT_CLASSIFICATION	7.489381764910873E-5	DEFECT
// output properties	WITHOUT_CLASSIFICATION	0.9999566852776473	WITHOUT_CLASSIFICATION	4.3314722352786255E-5	DEFECT
// build the command line from what we got the format // as specified in the CCM.EXE help	WITHOUT_CLASSIFICATION	0.9999957959206021	WITHOUT_CLASSIFICATION	4.204079397999135E-6	DEFECT
//create task ok, set this task as the default one	WITHOUT_CLASSIFICATION	0.9999117244378125	WITHOUT_CLASSIFICATION	8.82755621874897E-5	DEFECT
// implementation of org.apache.tools.ant.taskdefs.ExecuteStreamHandler interface	WITHOUT_CLASSIFICATION	0.9999921013735451	WITHOUT_CLASSIFICATION	7.898626454864565E-6	DEFECT
// build the command line from what we got the format is // ccm co /t .. files // as specified in the CCM.EXE help	WITHOUT_CLASSIFICATION	0.9999985040942857	WITHOUT_CLASSIFICATION	1.4959057142500758E-6	DEFECT
// Default the viewpath to basedir if it is not specified	WITHOUT_CLASSIFICATION	0.9999811802610284	WITHOUT_CLASSIFICATION	1.8819738971559506E-5	DEFECT
/*         * If configured to not care about whether the element is         * already checked out to the current view.         * Then check to see if it is checked out.         */	WITHOUT_CLASSIFICATION	0.9999345473161746	WITHOUT_CLASSIFICATION	6.545268382537006E-5	DEFECT
// viewpath	WITHOUT_CLASSIFICATION	0.999990276318121	WITHOUT_CLASSIFICATION	9.72368187900024E-6	DEFECT
// ClearCase items	WITHOUT_CLASSIFICATION	0.999998908908631	WITHOUT_CLASSIFICATION	1.091091369059117E-6	DEFECT
// -reserved	WITHOUT_CLASSIFICATION	0.9999670244765096	WITHOUT_CLASSIFICATION	3.297552349035321E-5	DEFECT
// -unreserved	WITHOUT_CLASSIFICATION	0.999959590931199	WITHOUT_CLASSIFICATION	4.040906880102333E-5	DEFECT
// -out	WITHOUT_CLASSIFICATION	0.9999115652702543	WITHOUT_CLASSIFICATION	8.843472974571136E-5	DEFECT
// -ndata	WITHOUT_CLASSIFICATION	0.999924016656051	WITHOUT_CLASSIFICATION	7.598334394906791E-5	DEFECT
// -version	WITHOUT_CLASSIFICATION	0.9999698159749204	WITHOUT_CLASSIFICATION	3.018402507961613E-5	DEFECT
// -nwarn	WITHOUT_CLASSIFICATION	0.9999882388028047	WITHOUT_CLASSIFICATION	1.1761197195313873E-5	DEFECT
// viewpath	WITHOUT_CLASSIFICATION	0.999990276318121	WITHOUT_CLASSIFICATION	9.72368187900024E-6	DEFECT
// build the command line from what we got the format is // cleartool lsco [options...] [viewpath ...] // as specified in the CLEARTOOL.EXE help	WITHOUT_CLASSIFICATION	0.9999992016715765	WITHOUT_CLASSIFICATION	7.983284235060256E-7	DEFECT
// -version	WITHOUT_CLASSIFICATION	0.9999698159749204	WITHOUT_CLASSIFICATION	3.018402507961613E-5	DEFECT
// -nwarn	WITHOUT_CLASSIFICATION	0.9999882388028047	WITHOUT_CLASSIFICATION	1.1761197195313873E-5	DEFECT
// type value	WITHOUT_CLASSIFICATION	0.9999957250279473	WITHOUT_CLASSIFICATION	4.274972052687415E-6	DEFECT
// -c	WITHOUT_CLASSIFICATION	0.999929398796381	WITHOUT_CLASSIFICATION	7.060120361891562E-5	DEFECT
// -c	WITHOUT_CLASSIFICATION	0.999929398796381	WITHOUT_CLASSIFICATION	7.060120361891562E-5	DEFECT
// -cfile	WITHOUT_CLASSIFICATION	0.9999693048623853	WITHOUT_CLASSIFICATION	3.069513761468106E-5	DEFECT
// -cfile	WITHOUT_CLASSIFICATION	0.9999693048623853	WITHOUT_CLASSIFICATION	3.069513761468106E-5	DEFECT
// -cfile	WITHOUT_CLASSIFICATION	0.9999693048623853	WITHOUT_CLASSIFICATION	3.069513761468106E-5	DEFECT
// build the command line from what we got. the format is // cleartool checkin [options...] [viewpath ...] // as specified in the CLEARTOOL.EXE help	WITHOUT_CLASSIFICATION	0.9999994684911456	WITHOUT_CLASSIFICATION	5.315088543603011E-7	DEFECT
// -ptime	WITHOUT_CLASSIFICATION	0.9999786449168169	WITHOUT_CLASSIFICATION	2.1355083183047528E-5	DEFECT
// Throws EjbcException if unsuccessful	WITHOUT_CLASSIFICATION	0.9998865543235654	WITHOUT_CLASSIFICATION	1.1344567643455784E-4	DEFECT
// -keep	WITHOUT_CLASSIFICATION	0.9999514597409377	WITHOUT_CLASSIFICATION	4.854025906229091E-5	DEFECT
// -identical	WITHOUT_CLASSIFICATION	0.9999890445666502	WITHOUT_CLASSIFICATION	1.0955433349843425E-5	DEFECT
// Check for required attributes	WITHOUT_CLASSIFICATION	0.9999723287806871	WITHOUT_CLASSIFICATION	2.7671219312925425E-5	DEFECT
// build the command line from what we got. the format is // cleartool mkattr [options...] [viewpath ...] // as specified in the CLEARTOOL help	WITHOUT_CLASSIFICATION	0.9999996990092891	WITHOUT_CLASSIFICATION	3.0099071091264945E-7	DEFECT
// -replace	WITHOUT_CLASSIFICATION	0.9999888792236358	WITHOUT_CLASSIFICATION	1.11207763642276E-5	DEFECT
// -recurse	WITHOUT_CLASSIFICATION	0.9999639031139728	WITHOUT_CLASSIFICATION	3.609688602718572E-5	DEFECT
// type	WITHOUT_CLASSIFICATION	0.9999643866346382	WITHOUT_CLASSIFICATION	3.561336536190938E-5	DEFECT
// viewpath	WITHOUT_CLASSIFICATION	0.999990276318121	WITHOUT_CLASSIFICATION	9.72368187900024E-6	DEFECT
// viewpath	WITHOUT_CLASSIFICATION	0.999990276318121	WITHOUT_CLASSIFICATION	9.72368187900024E-6	DEFECT
// viewpath	WITHOUT_CLASSIFICATION	0.999990276318121	WITHOUT_CLASSIFICATION	9.72368187900024E-6	DEFECT
// ClearCase items	WITHOUT_CLASSIFICATION	0.999998908908631	WITHOUT_CLASSIFICATION	1.091091369059117E-6	DEFECT
// ClearCase items	WITHOUT_CLASSIFICATION	0.999998908908631	WITHOUT_CLASSIFICATION	1.091091369059117E-6	DEFECT
// -nwarn	WITHOUT_CLASSIFICATION	0.9999882388028047	WITHOUT_CLASSIFICATION	1.1761197195313873E-5	DEFECT
// -c	WITHOUT_CLASSIFICATION	0.999929398796381	WITHOUT_CLASSIFICATION	7.060120361891562E-5	DEFECT
// -c	WITHOUT_CLASSIFICATION	0.999929398796381	WITHOUT_CLASSIFICATION	7.060120361891562E-5	DEFECT
// -cfile	WITHOUT_CLASSIFICATION	0.9999693048623853	WITHOUT_CLASSIFICATION	3.069513761468106E-5	DEFECT
// -ptime	WITHOUT_CLASSIFICATION	0.9999786449168169	WITHOUT_CLASSIFICATION	2.1355083183047528E-5	DEFECT
// -keep	WITHOUT_CLASSIFICATION	0.9999514597409377	WITHOUT_CLASSIFICATION	4.854025906229091E-5	DEFECT
// build the command line from what we got the format is // cleartool lock [options...] // as specified in the CLEARTOOL.EXE help	WITHOUT_CLASSIFICATION	0.999997274171698	WITHOUT_CLASSIFICATION	2.7258283019763116E-6	DEFECT
// Windows quoting of the value	WITHOUT_CLASSIFICATION	0.9998302799168879	WITHOUT_CLASSIFICATION	1.6972008311199143E-4	DEFECT
// build the command line from what we got. the format is // cleartool mkelem [options...] [viewpath ...] // as specified in the CLEARTOOL.EXE help	WITHOUT_CLASSIFICATION	0.9999993116136232	WITHOUT_CLASSIFICATION	6.88386376774726E-7	DEFECT
/*         * Should choose either -ci or -nco.         */	WITHOUT_CLASSIFICATION	0.9998221785311812	WITHOUT_CLASSIFICATION	1.7782146881895866E-4	DEFECT
// -nco	WITHOUT_CLASSIFICATION	0.9998791382759369	WITHOUT_CLASSIFICATION	1.2086172406322675E-4	DEFECT
// -nco	WITHOUT_CLASSIFICATION	0.9998791382759369	WITHOUT_CLASSIFICATION	1.2086172406322675E-4	DEFECT
// Check the command line options	WITHOUT_CLASSIFICATION	0.9999993672437634	WITHOUT_CLASSIFICATION	6.327562365586313E-7	DEFECT
// -ci	WITHOUT_CLASSIFICATION	0.9999385342351164	WITHOUT_CLASSIFICATION	6.146576488355529E-5	DEFECT
// object selector	WITHOUT_CLASSIFICATION	0.9999960693600685	WITHOUT_CLASSIFICATION	3.930639931603271E-6	DEFECT
// build the command line from what we got the format is // cleartool uncheckout [options...] [viewpath ...] // as specified in the CLEARTOOL.EXE help	WITHOUT_CLASSIFICATION	0.9999993647618043	WITHOUT_CLASSIFICATION	6.352381956815737E-7	DEFECT
// -master	WITHOUT_CLASSIFICATION	0.9999968103499189	WITHOUT_CLASSIFICATION	3.189650080960758E-6	DEFECT
// -rm	WITHOUT_CLASSIFICATION	0.9999582184950628	WITHOUT_CLASSIFICATION	4.178150493716139E-5	DEFECT
// -eltype	WITHOUT_CLASSIFICATION	0.9999769933660795	WITHOUT_CLASSIFICATION	2.3006633920509435E-5	DEFECT
// viewpath	WITHOUT_CLASSIFICATION	0.999990276318121	WITHOUT_CLASSIFICATION	9.72368187900024E-6	DEFECT
// -version	WITHOUT_CLASSIFICATION	0.9999698159749204	WITHOUT_CLASSIFICATION	3.018402507961613E-5	DEFECT
// -c	WITHOUT_CLASSIFICATION	0.999929398796381	WITHOUT_CLASSIFICATION	7.060120361891562E-5	DEFECT
// -c	WITHOUT_CLASSIFICATION	0.999929398796381	WITHOUT_CLASSIFICATION	7.060120361891562E-5	DEFECT
// -cfile	WITHOUT_CLASSIFICATION	0.9999693048623853	WITHOUT_CLASSIFICATION	3.069513761468106E-5	DEFECT
// -cfile	WITHOUT_CLASSIFICATION	0.9999693048623853	WITHOUT_CLASSIFICATION	3.069513761468106E-5	DEFECT
// -rmall -force	WITHOUT_CLASSIFICATION	0.9999866930486169	WITHOUT_CLASSIFICATION	1.330695138317078E-5	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999738204454653	WITHOUT_CLASSIFICATION	2.6179554534627278E-5	DEFECT
// build the command line from what we got. the format is // cleartool checkin [options...] [viewpath ...] // as specified in the CLEARTOOL.EXE help	WITHOUT_CLASSIFICATION	0.9999994684911456	WITHOUT_CLASSIFICATION	5.315088543603011E-7	DEFECT
// -identical	WITHOUT_CLASSIFICATION	0.9999890445666502	WITHOUT_CLASSIFICATION	1.0955433349843425E-5	DEFECT
// Check for required attributes	WITHOUT_CLASSIFICATION	0.9999723287806871	WITHOUT_CLASSIFICATION	2.7671219312925425E-5	DEFECT
// Check for required attributes	WITHOUT_CLASSIFICATION	0.9999723287806871	WITHOUT_CLASSIFICATION	2.7671219312925425E-5	DEFECT
// -replace	WITHOUT_CLASSIFICATION	0.9999888792236358	WITHOUT_CLASSIFICATION	1.11207763642276E-5	DEFECT
// -recurse	WITHOUT_CLASSIFICATION	0.9999639031139728	WITHOUT_CLASSIFICATION	3.609688602718572E-5	DEFECT
// type	WITHOUT_CLASSIFICATION	0.9999643866346382	WITHOUT_CLASSIFICATION	3.561336536190938E-5	DEFECT
// Returns list of EJBs for processing	WITHOUT_CLASSIFICATION	0.9999990340580468	WITHOUT_CLASSIFICATION	9.65941953249706E-7	DEFECT
// build the command line from what we got. the format is // cleartool rmtype [options...] type-selector... // as specified in the CLEARTOOL help	WITHOUT_CLASSIFICATION	0.999999656301822	WITHOUT_CLASSIFICATION	3.4369817808939363E-7	DEFECT
// type-kind:type-name	WITHOUT_CLASSIFICATION	0.9999740217120185	WITHOUT_CLASSIFICATION	2.5978287981532522E-5	DEFECT
// -ignore	WITHOUT_CLASSIFICATION	0.9999246214666524	WITHOUT_CLASSIFICATION	7.53785333476405E-5	DEFECT
// Return the type-selector	WITHOUT_CLASSIFICATION	0.9999978472655098	WITHOUT_CLASSIFICATION	2.152734490320992E-6	DEFECT
// -full	WITHOUT_CLASSIFICATION	0.9998514200173315	WITHOUT_CLASSIFICATION	1.4857998266843637E-4	DEFECT
// -incremental	WITHOUT_CLASSIFICATION	0.9999904515157865	WITHOUT_CLASSIFICATION	9.548484213558907E-6	DEFECT
// -nlabel	WITHOUT_CLASSIFICATION	0.9999787654788217	WITHOUT_CLASSIFICATION	2.12345211782527E-5	DEFECT
// baseline_root_name	WITHOUT_CLASSIFICATION	0.9999980829611513	WITHOUT_CLASSIFICATION	1.917038848692305E-6	DEFECT
// viewpath	WITHOUT_CLASSIFICATION	0.999990276318121	WITHOUT_CLASSIFICATION	9.72368187900024E-6	DEFECT
// -c	WITHOUT_CLASSIFICATION	0.999929398796381	WITHOUT_CLASSIFICATION	7.060120361891562E-5	DEFECT
// -cfile	WITHOUT_CLASSIFICATION	0.9999693048623853	WITHOUT_CLASSIFICATION	3.069513761468106E-5	DEFECT
// -ptime	WITHOUT_CLASSIFICATION	0.9999786449168169	WITHOUT_CLASSIFICATION	2.1355083183047528E-5	DEFECT
// Check for required attributes	WITHOUT_CLASSIFICATION	0.9999723287806871	WITHOUT_CLASSIFICATION	2.7671219312925425E-5	DEFECT
// -replace	WITHOUT_CLASSIFICATION	0.9999888792236358	WITHOUT_CLASSIFICATION	1.11207763642276E-5	DEFECT
// -replace	WITHOUT_CLASSIFICATION	0.9999888792236358	WITHOUT_CLASSIFICATION	1.11207763642276E-5	DEFECT
// build the command line from what we got the format is // cleartool lock [options...] // as specified in the CLEARTOOL.EXE help	WITHOUT_CLASSIFICATION	0.999997274171698	WITHOUT_CLASSIFICATION	2.7258283019763116E-6	DEFECT
// Check the command line options	WITHOUT_CLASSIFICATION	0.9999993672437634	WITHOUT_CLASSIFICATION	6.327562365586313E-7	DEFECT
// Check the command line options	WITHOUT_CLASSIFICATION	0.9999993672437634	WITHOUT_CLASSIFICATION	6.327562365586313E-7	DEFECT
// object selector	WITHOUT_CLASSIFICATION	0.9999960693600685	WITHOUT_CLASSIFICATION	3.930639931603271E-6	DEFECT
// -ordinary	WITHOUT_CLASSIFICATION	0.999955748013081	WITHOUT_CLASSIFICATION	4.425198691908738E-5	DEFECT
// build the command line from what we got the format is // cleartool update [options...] [viewpath ...] // as specified in the CLEARTOOL.EXE help	WITHOUT_CLASSIFICATION	0.9999995245060681	WITHOUT_CLASSIFICATION	4.7549393196021296E-7	DEFECT
// For debugging	WITHOUT_CLASSIFICATION	0.9996715732159209	WITHOUT_CLASSIFICATION	3.284267840790561E-4	DEFECT
// -log logname	WITHOUT_CLASSIFICATION	0.9999797743622046	WITHOUT_CLASSIFICATION	2.022563779542218E-5	DEFECT
// -graphical	WITHOUT_CLASSIFICATION	0.9999904378710037	WITHOUT_CLASSIFICATION	9.562128996390849E-6	DEFECT
// -overwrite	WITHOUT_CLASSIFICATION	0.9999840368599977	WITHOUT_CLASSIFICATION	1.596314000228538E-5	DEFECT
// -global	WITHOUT_CLASSIFICATION	0.9999343703388975	WITHOUT_CLASSIFICATION	6.562966110241691E-5	DEFECT
// -rename	WITHOUT_CLASSIFICATION	0.9999844739567207	WITHOUT_CLASSIFICATION	1.5526043279312717E-5	DEFECT
// -obsolete	WITHOUT_CLASSIFICATION	0.9999873495072655	WITHOUT_CLASSIFICATION	1.2650492734429365E-5	DEFECT
// -noverwrite	WITHOUT_CLASSIFICATION	0.9999849032186683	WITHOUT_CLASSIFICATION	1.509678133156487E-5	DEFECT
// build the command line from what we got. the format is // cleartool mklbtype [options...] type-selector... // as specified in the CLEARTOOL help	WITHOUT_CLASSIFICATION	0.9999996932834331	WITHOUT_CLASSIFICATION	3.0671656684509035E-7	DEFECT
// -ctime	WITHOUT_CLASSIFICATION	0.9999761723276477	WITHOUT_CLASSIFICATION	2.382767235230789E-5	DEFECT
// -pbranch	WITHOUT_CLASSIFICATION	0.9999899953784849	WITHOUT_CLASSIFICATION	1.0004621515115186E-5	DEFECT
// File[] filesInDir = directory.listFiles();	WITHOUT_CLASSIFICATION	0.9999692809090036	WITHOUT_CLASSIFICATION	3.071909099641964E-5	DEFECT
// -shared	WITHOUT_CLASSIFICATION	0.9999893021250056	WITHOUT_CLASSIFICATION	1.0697874994373387E-5	DEFECT
// type-name@vob	WITHOUT_CLASSIFICATION	0.9999955855319659	WITHOUT_CLASSIFICATION	4.414468034107143E-6	DEFECT
// we have a file. create a stream for it	WITHOUT_CLASSIFICATION	0.99999671577675	WITHOUT_CLASSIFICATION	3.2842232499946545E-6	DEFECT
// default directory to the project's base directory	WITHOUT_CLASSIFICATION	0.9999877993006862	WITHOUT_CLASSIFICATION	1.2200699313827317E-5	DEFECT
// assume the worst	WITHOUT_CLASSIFICATION	0.9999895893176114	WITHOUT_CLASSIFICATION	1.041068238863861E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999675172071433	WITHOUT_CLASSIFICATION	3.2482792856694074E-5	DEFECT
// create a data input stream from the jar // input stream	WITHOUT_CLASSIFICATION	0.9999983842511632	WITHOUT_CLASSIFICATION	1.6157488367924306E-6	DEFECT
// this iterator is exhausted. Can we pop one off the stack	WITHOUT_CLASSIFICATION	0.9999395490131	WITHOUT_CLASSIFICATION	6.0450986899901914E-5	DEFECT
// we get the root classes and build up a set of // classes upon which they depend	WITHOUT_CLASSIFICATION	0.9999761851907947	WITHOUT_CLASSIFICATION	2.381480920525899E-5	DEFECT
// now recover all the dependencies collected and add to the list.	WITHOUT_CLASSIFICATION	0.9999977785535412	WITHOUT_CLASSIFICATION	2.2214464588105574E-6	DEFECT
// pick up the last round of dependencies that were determined	WITHOUT_CLASSIFICATION	0.9999884533525434	WITHOUT_CLASSIFICATION	1.15466474565657E-5	DEFECT
// right we have a good looking class file.	WITHOUT_CLASSIFICATION	0.9999608119564025	WITHOUT_CLASSIFICATION	3.9188043597569936E-5	DEFECT
/* int minorVersion = */	WITHOUT_CLASSIFICATION	0.9999470969567221	WITHOUT_CLASSIFICATION	5.290304327794726E-5	DEFECT
/* int majorVersion = */	WITHOUT_CLASSIFICATION	0.9999724329472593	WITHOUT_CLASSIFICATION	2.7567052740661514E-5	DEFECT
/* int accessFlags = */	WITHOUT_CLASSIFICATION	0.9999904527286578	WITHOUT_CLASSIFICATION	9.547271342116931E-6	DEFECT
/* int superClassIndex = */	WITHOUT_CLASSIFICATION	0.9999958577465279	WITHOUT_CLASSIFICATION	4.142253472074315E-6	DEFECT
// read the dependency cache from the disk	WITHOUT_CLASSIFICATION	0.9999954102024465	WITHOUT_CLASSIFICATION	4.589797553419838E-6	DEFECT
// try to read the dependency info from the map if it is // not out of date	WITHOUT_CLASSIFICATION	0.9999806591734248	WITHOUT_CLASSIFICATION	1.934082657516133E-5	DEFECT
// not cached - so need to read directly from the class file	WITHOUT_CLASSIFICATION	0.9999160951740369	WITHOUT_CLASSIFICATION	8.390482596309316E-5	DEFECT
// This class depends on each class in the dependency list. For each // one of those, add this class into their affected classes list	WITHOUT_CLASSIFICATION	0.9998652654819987	WITHOUT_CLASSIFICATION	1.3473451800116314E-4	DEFECT
// now determine which jars each class depends upon	WITHOUT_CLASSIFICATION	0.9999990160850684	WITHOUT_CLASSIFICATION	9.839149315826217E-7	DEFECT
// we need to add this jar to the list for this class.	WITHOUT_CLASSIFICATION	0.9999912785983942	WITHOUT_CLASSIFICATION	8.721401605736488E-6	DEFECT
// write the dependency cache to the disk	WITHOUT_CLASSIFICATION	0.999991095198388	WITHOUT_CLASSIFICATION	8.904801611982337E-6	DEFECT
// need to delete the main class	WITHOUT_CLASSIFICATION	0.9999951549917041	WITHOUT_CLASSIFICATION	4.845008295912195E-6	DEFECT
//downgrade warnings on RMI stublike classes, as they are generated //by rmic, so there is no need to tell the user that their source is //missing.	WITHOUT_CLASSIFICATION	0.9999866194413262	WITHOUT_CLASSIFICATION	1.3380558673832952E-5	DEFECT
// now check classpath file dependencies	WITHOUT_CLASSIFICATION	0.9999954268931399	WITHOUT_CLASSIFICATION	4.5731068601165824E-6	DEFECT
// if we have no info about the class - it may have been deleted already and we // are using cached info.	WITHOUT_CLASSIFICATION	0.9999994436680598	WITHOUT_CLASSIFICATION	5.56331940060089E-7	DEFECT
// there was no class file. add this class to the list	WITHOUT_CLASSIFICATION	0.9999738419116391	WITHOUT_CLASSIFICATION	2.6158088361035925E-5	DEFECT
// break the classLocations into its components.	WITHOUT_CLASSIFICATION	0.9999626989158319	WITHOUT_CLASSIFICATION	3.7301084168142075E-5	DEFECT
// search the various source path entries	WITHOUT_CLASSIFICATION	0.9999997965633557	WITHOUT_CLASSIFICATION	2.0343664423408844E-7	DEFECT
// create a data input stream from the jar input stream	WITHOUT_CLASSIFICATION	0.9999973219030326	WITHOUT_CLASSIFICATION	2.6780969673412056E-6	DEFECT
// add null entries for any additional slots required.	WITHOUT_CLASSIFICATION	0.9998736077405099	WITHOUT_CLASSIFICATION	1.2639225949008788E-4	DEFECT
// end execute	WITHOUT_CLASSIFICATION	0.9999702291704371	WITHOUT_CLASSIFICATION	2.9770829562889252E-5	DEFECT
//in verbose mode we always log stuff	WITHOUT_CLASSIFICATION	0.999985564924053	WITHOUT_CLASSIFICATION	1.4435075947110742E-5	DEFECT
//the simple action is to send the command line in as is	WITHOUT_CLASSIFICATION	0.9999681972129204	WITHOUT_CLASSIFICATION	3.180278707958639E-5	DEFECT
// Throws EjbcException	WITHOUT_CLASSIFICATION	0.9995593025187627	WITHOUT_CLASSIFICATION	4.4069748123739416E-4	DEFECT
// VSS items	WITHOUT_CLASSIFICATION	0.9999671044808934	WITHOUT_CLASSIFICATION	3.289551910652203E-5	DEFECT
// The zero index is never present in the constant pool itself so // we add a null entry for it	WITHOUT_CLASSIFICATION	0.9998313755684829	WITHOUT_CLASSIFICATION	1.686244315170454E-4	DEFECT
//but for big operations, we save all the params to a temp file //and set @tmpfile as the command -then we remember to delete the tempfile //afterwards	WITHOUT_CLASSIFICATION	0.9999708963241704	WITHOUT_CLASSIFICATION	2.9103675829675608E-5	DEFECT
//start at 1 because element 0 is the executable name	WITHOUT_CLASSIFICATION	0.9999992843837693	WITHOUT_CLASSIFICATION	7.156162307995386E-7	DEFECT
//add to the list	WITHOUT_CLASSIFICATION	0.9999527214397239	WITHOUT_CLASSIFICATION	4.727856027611517E-5	DEFECT
//fill in args	WITHOUT_CLASSIFICATION	0.99994691987071	WITHOUT_CLASSIFICATION	5.308012928982118E-5	DEFECT
//fill in args	WITHOUT_CLASSIFICATION	0.99994691987071	WITHOUT_CLASSIFICATION	5.308012928982118E-5	DEFECT
//set source and rebuild options	WITHOUT_CLASSIFICATION	0.9999962308932391	WITHOUT_CLASSIFICATION	3.7691067608586737E-6	DEFECT
//rebuild unless the dest file is newer than the source file	WITHOUT_CLASSIFICATION	0.9999900113259491	WITHOUT_CLASSIFICATION	9.988674050783258E-6	DEFECT
//mark for a rebuild if the dest file is newer	WITHOUT_CLASSIFICATION	0.9999938476056089	WITHOUT_CLASSIFICATION	6.152394391040467E-6	DEFECT
// Mono 1.0's wsdl doesn't deal with absolute paths	WITHOUT_CLASSIFICATION	0.9999761734866657	WITHOUT_CLASSIFICATION	2.3826513334419824E-5	DEFECT
//add in any extra files. //this is an error in mono, but we do not warn on it as they may fix that outside //the ant build cycle.	WITHOUT_CLASSIFICATION	0.9996045528195765	WITHOUT_CLASSIFICATION	3.954471804235669E-4	DEFECT
//mark for a rebuild if we are newer	WITHOUT_CLASSIFICATION	0.9999050332346244	WITHOUT_CLASSIFICATION	9.496676537559183E-5	DEFECT
//conditionally compile	WITHOUT_CLASSIFICATION	0.999786041243366	WITHOUT_CLASSIFICATION	2.1395875663408537E-4	DEFECT
// Errors	WITHOUT_CLASSIFICATION	0.9997965557524511	WITHOUT_CLASSIFICATION	2.034442475489278E-4	DEFECT
//bail on no references	WITHOUT_CLASSIFICATION	0.9997763101246968	WITHOUT_CLASSIFICATION	2.236898753033401E-4	DEFECT
//bail on no references	WITHOUT_CLASSIFICATION	0.9997763101246968	WITHOUT_CLASSIFICATION	2.236898753033401E-4	DEFECT
//demand create pathlist	WITHOUT_CLASSIFICATION	0.9999849275979037	WITHOUT_CLASSIFICATION	1.5072402096182731E-5	DEFECT
//bail on no references listed	WITHOUT_CLASSIFICATION	0.9999301927072568	WITHOUT_CLASSIFICATION	6.980729274318991E-5	DEFECT
//loop through all definitions	WITHOUT_CLASSIFICATION	0.999987074264741	WITHOUT_CLASSIFICATION	1.2925735258992482E-5	DEFECT
//add those that are set, and a delimiter	WITHOUT_CLASSIFICATION	0.9999707044077951	WITHOUT_CLASSIFICATION	2.9295592204870096E-5	DEFECT
//set up response file options	WITHOUT_CLASSIFICATION	0.9999935056053547	WITHOUT_CLASSIFICATION	6.49439464531475E-6	DEFECT
//if the refs are out of date, force a build.	WITHOUT_CLASSIFICATION	0.9998841254136789	WITHOUT_CLASSIFICATION	1.1587458632117782E-4	DEFECT
//bail out early if there were no files	WITHOUT_CLASSIFICATION	0.9999470543298373	WITHOUT_CLASSIFICATION	5.294567016254442E-5	DEFECT
//now scan the hashtable and add the files	WITHOUT_CLASSIFICATION	0.999956711374964	WITHOUT_CLASSIFICATION	4.328862503595615E-5	DEFECT
//add the source file	WITHOUT_CLASSIFICATION	0.9999727396453769	WITHOUT_CLASSIFICATION	2.726035462308667E-5	DEFECT
//now run	WITHOUT_CLASSIFICATION	0.99764588591792	WITHOUT_CLASSIFICATION	0.002354114082079925	DEFECT
//forcibly delete the output file in case of trouble	WITHOUT_CLASSIFICATION	0.9998510478293938	WITHOUT_CLASSIFICATION	1.4895217060614688E-4	DEFECT
//then rethrow the exception	WITHOUT_CLASSIFICATION	0.9984038465837078	WITHOUT_CLASSIFICATION	0.001596153416292114	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999675172071433	WITHOUT_CLASSIFICATION	3.2482792856694074E-5	DEFECT
// CheckStyle:ConstantNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9999788311965451	WITHOUT_CLASSIFICATION	2.116880345488347E-5	DEFECT
// CheckStyle:MethodNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9999737798051116	WITHOUT_CLASSIFICATION	2.622019488847767E-5	DEFECT
// CheckStyle:ConstantNameCheck ON // CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999772683356223	WITHOUT_CLASSIFICATION	2.273166437777308E-5	DEFECT
// end execute	WITHOUT_CLASSIFICATION	0.9999702291704371	WITHOUT_CLASSIFICATION	2.9770829562889252E-5	DEFECT
//fill in args	WITHOUT_CLASSIFICATION	0.99994691987071	WITHOUT_CLASSIFICATION	5.308012928982118E-5	DEFECT
//fill in args	WITHOUT_CLASSIFICATION	0.99994691987071	WITHOUT_CLASSIFICATION	5.308012928982118E-5	DEFECT
//rebuild unless the dest file is newer than the source file	WITHOUT_CLASSIFICATION	0.9999900113259491	WITHOUT_CLASSIFICATION	9.988674050783258E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999675172071433	WITHOUT_CLASSIFICATION	3.2482792856694074E-5	DEFECT
//determine directory: resourceDir if set, //the dir of the destFile if not	WITHOUT_CLASSIFICATION	0.9996831791827315	WITHOUT_CLASSIFICATION	3.16820817268461E-4	DEFECT
//Public //Private //Family //Assembly //Family and Assembly //Family or Assembly //Private Scope	WITHOUT_CLASSIFICATION	0.9999843855532339	WITHOUT_CLASSIFICATION	1.5614446766154728E-5	DEFECT
//scan for an implicit fileset if there was a srcdir set //or there was no srcDir set but there was no contained classes	WITHOUT_CLASSIFICATION	0.9999654192489151	WITHOUT_CLASSIFICATION	3.458075108485991E-5	DEFECT
//if there is no src dir here, set it	WITHOUT_CLASSIFICATION	0.999799985423422	WITHOUT_CLASSIFICATION	2.0001457657803563E-4	DEFECT
//get dependencies list.	WITHOUT_CLASSIFICATION	0.9999737693636949	WITHOUT_CLASSIFICATION	2.6230636305065974E-5	DEFECT
//get any included source directories	WITHOUT_CLASSIFICATION	0.9999883714381032	WITHOUT_CLASSIFICATION	1.1628561896794228E-5	DEFECT
//add the files to the command	WITHOUT_CLASSIFICATION	0.9999638850707931	WITHOUT_CLASSIFICATION	3.611492920693298E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc // CheckStyle:ConstantNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9999846707443975	WITHOUT_CLASSIFICATION	1.532925560253623E-5	DEFECT
// CheckStyle:MethodNameCheck ON	WITHOUT_CLASSIFICATION	0.9999647145338054	WITHOUT_CLASSIFICATION	3.528546619450522E-5	DEFECT
/*         *  space for more argumentativeness         *  command.addArgument();         *  command.addArgument();         */	WITHOUT_CLASSIFICATION	0.9999990684024878	WITHOUT_CLASSIFICATION	9.315975122828321E-7	DEFECT
// ends with '.' or null	WITHOUT_CLASSIFICATION	0.9999592221395985	WITHOUT_CLASSIFICATION	4.077786040132978E-5	DEFECT
/* Constants used for the "beantype" attribute */	WITHOUT_CLASSIFICATION	0.9999959351413125	WITHOUT_CLASSIFICATION	4.064858687553331E-6	DEFECT
/* Filenames of the standard EJB descriptor and the iAS-specific descriptor */	WITHOUT_CLASSIFICATION	0.9999972816845097	WITHOUT_CLASSIFICATION	2.718315490170352E-6	DEFECT
/* Classpath used when the iAS ejbc is called */	WITHOUT_CLASSIFICATION	0.9999994221048916	WITHOUT_CLASSIFICATION	5.778951084049337E-7	DEFECT
/* Options passed to the iAS ejbc */	WITHOUT_CLASSIFICATION	0.9999974683514067	WITHOUT_CLASSIFICATION	2.5316485932495363E-6	DEFECT
/* iAS installation directory (used if ejbc isn't on user's PATH) */	WITHOUT_CLASSIFICATION	0.9999490280739639	WITHOUT_CLASSIFICATION	5.09719260361136E-5	DEFECT
/* Parser and handler used to process both EJB descriptor files */	WITHOUT_CLASSIFICATION	0.9999996023169907	WITHOUT_CLASSIFICATION	3.976830092306315E-7	DEFECT
/* Value of the display-name element read from the standard EJB descriptor */	WITHOUT_CLASSIFICATION	0.9999793584671492	WITHOUT_CLASSIFICATION	2.06415328507922E-5	DEFECT
/*         * Parse the classpath into it's individual elements and store the         * results in the "classpathElements" instance variable.         */	WITHOUT_CLASSIFICATION	0.9999996890079698	WITHOUT_CLASSIFICATION	3.1099203028929713E-7	DEFECT
/* If the -classpath flag isn't specified, use the system classpath */	WITHOUT_CLASSIFICATION	0.9993451460280762	WITHOUT_CLASSIFICATION	6.548539719238696E-4	DEFECT
/*         * If the -d flag isn't specified, use the working directory as the         * destination directory         */	WITHOUT_CLASSIFICATION	0.9956001267994504	WITHOUT_CLASSIFICATION	0.0043998732005495365	DEFECT
/* Construct a SAXParser used to process the descriptors */	WITHOUT_CLASSIFICATION	0.9999998452179976	WITHOUT_CLASSIFICATION	1.5478200245635737E-7	DEFECT
// SAXException or ParserConfigurationException may be thrown	WITHOUT_CLASSIFICATION	0.9999657169482981	WITHOUT_CLASSIFICATION	3.4283051702045955E-5	DEFECT
/* Build and populate an instance of the ejbc utility */	WITHOUT_CLASSIFICATION	0.9999861641180031	WITHOUT_CLASSIFICATION	1.3835881996898965E-5	DEFECT
/* Execute the ejbc utility -- stubs/skeletons are rebuilt, if needed */	WITHOUT_CLASSIFICATION	0.9999949310791173	WITHOUT_CLASSIFICATION	5.068920882676062E-6	DEFECT
// Add one for the "\"	WITHOUT_CLASSIFICATION	0.9998831949385831	WITHOUT_CLASSIFICATION	1.1680506141695956E-4	DEFECT
/* Concatenate all of the command line arguments into a single String */	WITHOUT_CLASSIFICATION	0.9999927469036345	WITHOUT_CLASSIFICATION	7.253096365580511E-6	DEFECT
/* If an iAS home directory is specified, prepend it to the commmand */	WITHOUT_CLASSIFICATION	0.9999677050139276	WITHOUT_CLASSIFICATION	3.2294986072307296E-5	DEFECT
/*         * The EJB information is gathered from the standard XML EJB descriptor         * and the iAS-specific XML EJB descriptor using a SAX parser.         */	WITHOUT_CLASSIFICATION	0.999849989208095	WITHOUT_CLASSIFICATION	1.5001079190510996E-4	DEFECT
/* OPTIONAL COMMAND LINE PARAMETERS */	WITHOUT_CLASSIFICATION	0.99991426307337	WITHOUT_CLASSIFICATION	8.573692663013808E-5	DEFECT
/* No beantype flag is needed for an entity bean */	WITHOUT_CLASSIFICATION	0.9999908813341615	WITHOUT_CLASSIFICATION	9.1186658385747E-6	DEFECT
/* REQUIRED COMMAND LINE PARAMETERS */	WITHOUT_CLASSIFICATION	0.9999424533417558	WITHOUT_CLASSIFICATION	5.754665824425161E-5	DEFECT
/* Convert the List into an Array and return it */	WITHOUT_CLASSIFICATION	0.9999934594476872	WITHOUT_CLASSIFICATION	6.540552312825916E-6	DEFECT
/* Inner classes follow */	WITHOUT_CLASSIFICATION	0.9999500927499737	WITHOUT_CLASSIFICATION	4.9907250026425516E-5	DEFECT
// End of EjbcException inner class	WITHOUT_CLASSIFICATION	0.9999617307119544	WITHOUT_CLASSIFICATION	3.8269288045521424E-5	DEFECT
// Tracks current element // Tracks current text data // "session" or "entity"	WITHOUT_CLASSIFICATION	0.9999241212225191	WITHOUT_CLASSIFICATION	7.587877748099048E-5	DEFECT
/* Search the resource Map and (if not found) file Map */	WITHOUT_CLASSIFICATION	0.9999986914963629	WITHOUT_CLASSIFICATION	1.3085036371466013E-6	DEFECT
/* A new element has started, so reset the text being captured */	WITHOUT_CLASSIFICATION	0.9999971983511846	WITHOUT_CLASSIFICATION	2.8016488154254017E-6	DEFECT
/*             * If this is a standard EJB 1.1 descriptor, we are looking for one             * set of data, while if this is an iAS-specific descriptor, we're             * looking for different set of data.  Hand the processing off to             * the appropriate method.             */	WITHOUT_CLASSIFICATION	0.9999986592526765	WITHOUT_CLASSIFICATION	1.3407473235019896E-6	DEFECT
// End of EjbcHandler inner class	WITHOUT_CLASSIFICATION	0.9999670931615124	WITHOUT_CLASSIFICATION	3.2906838487532315E-5	DEFECT
/*         * Below are getter's and setter's for each of the instance variables.         * Note that (in addition to supporting setters with the same type as         * the instance variable) a setter is provided with takes a String         * argument -- this are provided so the XML document handler can set         * the EJB values using the Strings it parses.         */	WITHOUT_CLASSIFICATION	0.9999817569079279	WITHOUT_CLASSIFICATION	1.8243092072067877E-5	DEFECT
/* Check that the specified instance variables are valid */	WITHOUT_CLASSIFICATION	0.9999992597674316	WITHOUT_CLASSIFICATION	7.402325682988009E-7	DEFECT
/* Check that the EJB "source" classes all exist */	WITHOUT_CLASSIFICATION	0.9999959177273766	WITHOUT_CLASSIFICATION	4.082272623415666E-6	DEFECT
// The timestamp of the "newest" class // Timestamp for a given class // File for the remote interface class // File for the home interface class // File for the EJB implementation class // File for the EJB primary key class	WITHOUT_CLASSIFICATION	0.999977113107197	WITHOUT_CLASSIFICATION	2.2886892803067405E-5	DEFECT
/* Check the timestamp on the remote interface */	WITHOUT_CLASSIFICATION	0.9999823226874087	WITHOUT_CLASSIFICATION	1.7677312591232725E-5	DEFECT
/* Check the timestamp on the home interface */	WITHOUT_CLASSIFICATION	0.9999929246981859	WITHOUT_CLASSIFICATION	7.075301814131482E-6	DEFECT
/* Check the timestamp of the primary key class */	WITHOUT_CLASSIFICATION	0.9999950021621256	WITHOUT_CLASSIFICATION	4.997837874437679E-6	DEFECT
// List of all stubs & skels // Earliest mod time // Has each been found?	WITHOUT_CLASSIFICATION	0.9999958909940542	WITHOUT_CLASSIFICATION	4.109005945809145E-6	DEFECT
/*             * Loop through each stub/skeleton class that must be generated, and             * determine (if all exist) which file has the most recent timestamp             */	WITHOUT_CLASSIFICATION	0.9999997801615386	WITHOUT_CLASSIFICATION	2.1983846143740987E-7	DEFECT
/*                 * Add each stub/skeleton class to the list of EJB files.  Note                 * that each class is added even if it doesn't exist now.                 */	WITHOUT_CLASSIFICATION	0.9999347685868651	WITHOUT_CLASSIFICATION	6.523141313484137E-5	DEFECT
/* Keep track of the oldest modification timestamp */	WITHOUT_CLASSIFICATION	0.9999849415842438	WITHOUT_CLASSIFICATION	1.5058415756106416E-5	DEFECT
// End of EjbInfo inner class	WITHOUT_CLASSIFICATION	0.9999579833719634	WITHOUT_CLASSIFICATION	4.201662803655634E-5	DEFECT
// Fully qualified name of the Java class // Name of the package for this class // Name of the class without the package	WITHOUT_CLASSIFICATION	0.9999696792421873	WITHOUT_CLASSIFICATION	3.0320757812750327E-5	DEFECT
// End of Classname inner class	WITHOUT_CLASSIFICATION	0.99998584739967	WITHOUT_CLASSIFICATION	1.415260032998422E-5	DEFECT
// Stream to read and redirect to standard output	WITHOUT_CLASSIFICATION	0.9999944121538709	WITHOUT_CLASSIFICATION	5.587846129187531E-6	DEFECT
// End of RedirectOutput inner class	WITHOUT_CLASSIFICATION	0.9999413661441958	WITHOUT_CLASSIFICATION	5.863385580412255E-5	DEFECT
// add -file xxxxx to the commandline	WITHOUT_CLASSIFICATION	0.999989563029261	WITHOUT_CLASSIFICATION	1.0436970738932512E-5	DEFECT
//clientname = ejbjarfile+client.jar	WITHOUT_CLASSIFICATION	0.9999946485166392	WITHOUT_CLASSIFICATION	5.351483360742094E-6	DEFECT
// end of else	WITHOUT_CLASSIFICATION	0.9999408726446914	WITHOUT_CLASSIFICATION	5.912735530849099E-5	DEFECT
// ejb jar file	WITHOUT_CLASSIFICATION	0.9999955404154983	WITHOUT_CLASSIFICATION	4.4595845017292395E-6	DEFECT
// ejb jar file	WITHOUT_CLASSIFICATION	0.9999955404154983	WITHOUT_CLASSIFICATION	4.4595845017292395E-6	DEFECT
//client jar file	WITHOUT_CLASSIFICATION	0.999987536459825	WITHOUT_CLASSIFICATION	1.246354017489757E-5	DEFECT
//client jar file	WITHOUT_CLASSIFICATION	0.999987536459825	WITHOUT_CLASSIFICATION	1.246354017489757E-5	DEFECT
// Have to catch this because of the semantics of calling main()	WITHOUT_CLASSIFICATION	0.9999741331663607	WITHOUT_CLASSIFICATION	2.5866833639273676E-5	DEFECT
// Have to catch this because of the semantics of calling main()	WITHOUT_CLASSIFICATION	0.9999741331663607	WITHOUT_CLASSIFICATION	2.5866833639273676E-5	DEFECT
//classpath	WITHOUT_CLASSIFICATION	0.9998629693332912	WITHOUT_CLASSIFICATION	1.370306667087856E-4	DEFECT
/* ------------- */	WITHOUT_CLASSIFICATION	0.9999135040987038	WITHOUT_CLASSIFICATION	8.649590129617908E-5	DEFECT
/* ------------- */	WITHOUT_CLASSIFICATION	0.9999135040987038	WITHOUT_CLASSIFICATION	8.649590129617908E-5	DEFECT
/* GenIC options */	WITHOUT_CLASSIFICATION	0.9999941827763427	WITHOUT_CLASSIFICATION	5.817223657345539E-6	DEFECT
/* other options */	WITHOUT_CLASSIFICATION	0.9999930864391487	WITHOUT_CLASSIFICATION	6.913560851242163E-6	DEFECT
/* -------------------- */	WITHOUT_CLASSIFICATION	0.9999075676317428	WITHOUT_CLASSIFICATION	9.24323682572012E-5	DEFECT
/* -------------------- */	WITHOUT_CLASSIFICATION	0.9999075676317428	WITHOUT_CLASSIFICATION	9.24323682572012E-5	DEFECT
/* GenIC options setter */	WITHOUT_CLASSIFICATION	0.9999946081705041	WITHOUT_CLASSIFICATION	5.391829495821498E-6	DEFECT
// -I- // ignore all errors // -Vd	WITHOUT_CLASSIFICATION	0.9999419135034304	WITHOUT_CLASSIFICATION	5.808649656943896E-5	DEFECT
/* ------------- */	WITHOUT_CLASSIFICATION	0.9999135040987038	WITHOUT_CLASSIFICATION	8.649590129617908E-5	DEFECT
/* -------------------- */	WITHOUT_CLASSIFICATION	0.9999075676317428	WITHOUT_CLASSIFICATION	9.24323682572012E-5	DEFECT
/* other options setter */	WITHOUT_CLASSIFICATION	0.9999926776492931	WITHOUT_CLASSIFICATION	7.322350706897374E-6	DEFECT
/* other methods */	WITHOUT_CLASSIFICATION	0.9999780369828474	WITHOUT_CLASSIFICATION	2.196301715267757E-5	DEFECT
// the method deleteOnExit() do not work because the directory is not empty	WITHOUT_CLASSIFICATION	0.9999684844933362	WITHOUT_CLASSIFICATION	3.15155066638615E-5	DEFECT
// create the generic jar first	WITHOUT_CLASSIFICATION	0.9999988638343505	WITHOUT_CLASSIFICATION	1.1361656494669297E-6	DEFECT
// GenIC call on generic jar	WITHOUT_CLASSIFICATION	0.9999913902770442	WITHOUT_CLASSIFICATION	8.609722955707727E-6	DEFECT
// create the real jar	WITHOUT_CLASSIFICATION	0.9999924741242344	WITHOUT_CLASSIFICATION	7.525875765563936E-6	DEFECT
// JOnAS-specific descriptor deployment	WITHOUT_CLASSIFICATION	0.9999961624214209	WITHOUT_CLASSIFICATION	3.837578579103265E-6	DEFECT
// JOnAS-specific DD // true if the JOnAS convention is used for the DD // Directory path of the EJB descriptor // EJB descriptor file name // Filename appearing before name terminator // Filename appearing after the name terminator	WITHOUT_CLASSIFICATION	0.9999929175351533	WITHOUT_CLASSIFICATION	7.082464846606086E-6	DEFECT
// extract path info	WITHOUT_CLASSIFICATION	0.9999919904212821	WITHOUT_CLASSIFICATION	8.009578717975975E-6	DEFECT
// descriptorName is just a file without path	WITHOUT_CLASSIFICATION	0.9999987410581636	WITHOUT_CLASSIFICATION	1.2589418364924589E-6	DEFECT
/*         * Check for the odd case where the terminator and/or filename         * extension aren't found.  These will ensure "jonas-" appears at the         * end of the name and before the '.' (if present).         */	WITHOUT_CLASSIFICATION	0.9999637383099479	WITHOUT_CLASSIFICATION	3.626169005205531E-5	DEFECT
// no . found	WITHOUT_CLASSIFICATION	0.9998685365398956	WITHOUT_CLASSIFICATION	1.3146346010441937E-4	DEFECT
// try to find JOnAS specific convention name	WITHOUT_CLASSIFICATION	0.9999915955512939	WITHOUT_CLASSIFICATION	8.404448706043856E-6	DEFECT
// else get standard baseName	WITHOUT_CLASSIFICATION	0.9999954648699937	WITHOUT_CLASSIFICATION	4.5351300063611425E-6	DEFECT
// jonasroot	WITHOUT_CLASSIFICATION	0.9999688928069471	WITHOUT_CLASSIFICATION	3.110719305296839E-5	DEFECT
// java policy file	WITHOUT_CLASSIFICATION	0.9999943330940704	WITHOUT_CLASSIFICATION	5.666905929639879E-6	DEFECT
// outputdir	WITHOUT_CLASSIFICATION	0.9999592607564944	WITHOUT_CLASSIFICATION	4.073924350564862E-5	DEFECT
// work around a bug of GenIC 2.5	WITHOUT_CLASSIFICATION	0.9987360438797003	WITHOUT_CLASSIFICATION	0.0012639561202997414	DEFECT
// classpath	WITHOUT_CLASSIFICATION	0.9999928074804944	WITHOUT_CLASSIFICATION	7.192519505621066E-6	DEFECT
// try to create the classpath for the correct ORB	WITHOUT_CLASSIFICATION	0.9999699380326202	WITHOUT_CLASSIFICATION	3.0061967379851398E-5	DEFECT
// keepgenerated	WITHOUT_CLASSIFICATION	0.9999957445004496	WITHOUT_CLASSIFICATION	4.255499550415177E-6	DEFECT
// nocompil	WITHOUT_CLASSIFICATION	0.9999556092885994	WITHOUT_CLASSIFICATION	4.439071140068755E-5	DEFECT
// novalidation	WITHOUT_CLASSIFICATION	0.9999071108615005	WITHOUT_CLASSIFICATION	9.288913849940012E-5	DEFECT
// javac	WITHOUT_CLASSIFICATION	0.9999826475608924	WITHOUT_CLASSIFICATION	1.7352439107648316E-5	DEFECT
// javacopts	WITHOUT_CLASSIFICATION	0.9999943426324204	WITHOUT_CLASSIFICATION	5.65736757973664E-6	DEFECT
// rmicopts	WITHOUT_CLASSIFICATION	0.9999899741747403	WITHOUT_CLASSIFICATION	1.0025825259626047E-5	DEFECT
// secpropag	WITHOUT_CLASSIFICATION	0.999948015431172	WITHOUT_CLASSIFICATION	5.19845688280771E-5	DEFECT
// verbose	WITHOUT_CLASSIFICATION	0.9999799559482436	WITHOUT_CLASSIFICATION	2.004405175640101E-5	DEFECT
// input file to process by GenIC	WITHOUT_CLASSIFICATION	0.9999989510821318	WITHOUT_CLASSIFICATION	1.0489178683347477E-6	DEFECT
// calling GenIC task	WITHOUT_CLASSIFICATION	0.9999960213549016	WITHOUT_CLASSIFICATION	3.978645098343309E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999707121018232	WITHOUT_CLASSIFICATION	2.9287898176784134E-5	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.998803732051834	WITHOUT_CLASSIFICATION	0.0011962679481660166	DEFECT
// the method deleteOnExit() do not work because the directory is not empty	WITHOUT_CLASSIFICATION	0.9999684844933362	WITHOUT_CLASSIFICATION	3.15155066638615E-5	DEFECT
// baseNameTerminator not found: the descriptor use the // JOnAS naming convention, ie [Foo.xml,jonas-Foo.xml] and // not [Foo<baseNameTerminator>-ejb-jar.xml, // Foo<baseNameTerminator>-jonas-ejb-jar.xml].	WITHOUT_CLASSIFICATION	0.9999295134454356	WITHOUT_CLASSIFICATION	7.048655456450279E-5	DEFECT
// jonasroot	WITHOUT_CLASSIFICATION	0.9999688928069471	WITHOUT_CLASSIFICATION	3.110719305296839E-5	DEFECT
// GenIC task // GenIC class (3 are supported for various // versions	WITHOUT_CLASSIFICATION	0.9999997932324445	WITHOUT_CLASSIFICATION	2.0676755563123176E-7	DEFECT
// javac	WITHOUT_CLASSIFICATION	0.9999826475608924	WITHOUT_CLASSIFICATION	1.7352439107648316E-5	DEFECT
// additionalargs	WITHOUT_CLASSIFICATION	0.9999939421024174	WITHOUT_CLASSIFICATION	6.057897582483038E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999675172071433	WITHOUT_CLASSIFICATION	3.2482792856694074E-5	DEFECT
// add the generated files to the ejbFiles	WITHOUT_CLASSIFICATION	0.9999990229620916	WITHOUT_CLASSIFICATION	9.770379083313786E-7	DEFECT
// orb	WITHOUT_CLASSIFICATION	0.9999371004720669	WITHOUT_CLASSIFICATION	6.289952793314792E-5	DEFECT
/* ----------------------------------------------------------------------------------- */	WITHOUT_CLASSIFICATION	0.9998813744528406	WITHOUT_CLASSIFICATION	1.1862554715935122E-4	DEFECT
/* ----------------------------------------------------------------------------------- */	WITHOUT_CLASSIFICATION	0.9998813744528406	WITHOUT_CLASSIFICATION	1.1862554715935122E-4	DEFECT
/* utilitary methods */	WITHOUT_CLASSIFICATION	0.999994913511944	WITHOUT_CLASSIFICATION	5.086488055945075E-6	DEFECT
// Create the parser using whatever parser the system dictates	WITHOUT_CLASSIFICATION	0.9999868579022757	WITHOUT_CLASSIFICATION	1.3142097724344346E-5	DEFECT
// Loop through the files. Each file represents one deployment // descriptor, and hence one bean in our model.	WITHOUT_CLASSIFICATION	0.9999919253141092	WITHOUT_CLASSIFICATION	8.074685890806483E-6	DEFECT
// process the deployment descriptor in each tool	WITHOUT_CLASSIFICATION	0.9999991197840371	WITHOUT_CLASSIFICATION	8.802159629159737E-7	DEFECT
// end of execute()	WITHOUT_CLASSIFICATION	0.9999668009242474	WITHOUT_CLASSIFICATION	3.3199075752552626E-5	DEFECT
// resolve relative to project basedir	WITHOUT_CLASSIFICATION	0.9999760408452429	WITHOUT_CLASSIFICATION	2.39591547570557E-5	DEFECT
// Get the filename into a String object	WITHOUT_CLASSIFICATION	0.9999980667630786	WITHOUT_CLASSIFICATION	1.9332369213864405E-6	DEFECT
// Get the value of the <ejb-name> tag.  Only the first occurrence.	WITHOUT_CLASSIFICATION	0.9999971899579422	WITHOUT_CLASSIFICATION	2.810042057836752E-6	DEFECT
// Then the toplink deployment descriptor	WITHOUT_CLASSIFICATION	0.9999157120362023	WITHOUT_CLASSIFICATION	8.428796379773125E-5	DEFECT
// Setup a naming standard here?.	WITHOUT_CLASSIFICATION	0.99998961996411	WITHOUT_CLASSIFICATION	1.0380035890078065E-5	DEFECT
// get all the files in the descriptor directory	WITHOUT_CLASSIFICATION	0.9999621875608896	WITHOUT_CLASSIFICATION	3.781243911040015E-5	DEFECT
// If we still can't find it, complain	WITHOUT_CLASSIFICATION	0.9999360563189396	WITHOUT_CLASSIFICATION	6.39436810604964E-5	DEFECT
// OK, properties file may be absolute	WITHOUT_CLASSIFICATION	0.9999956079474244	WITHOUT_CLASSIFICATION	4.39205257558961E-6	DEFECT
// do we need to regenerate the file	WITHOUT_CLASSIFICATION	0.9999879605816459	WITHOUT_CLASSIFICATION	1.203941835418904E-5	DEFECT
//weblogic.ejb.utils.DDCreator.main(args);	WITHOUT_CLASSIFICATION	0.9999570593794673	WITHOUT_CLASSIFICATION	4.294062053274311E-5	DEFECT
// there was an exception - run with no exit to get proper error	WITHOUT_CLASSIFICATION	0.9987520637550884	WITHOUT_CLASSIFICATION	0.0012479362449115084	DEFECT
//weblogic.ejb.utils.DDCreator.main(newArgs);	WITHOUT_CLASSIFICATION	0.9999348391877421	WITHOUT_CLASSIFICATION	6.51608122579255E-5	DEFECT
/* Attributes set by the Ant build file */	WITHOUT_CLASSIFICATION	0.9999891330703843	WITHOUT_CLASSIFICATION	1.0866929615611368E-5	DEFECT
// Create the zip entry and add it to the jar file	WITHOUT_CLASSIFICATION	0.9999956815373782	WITHOUT_CLASSIFICATION	4.3184626218496275E-6	DEFECT
//add it to list of files in jar	WITHOUT_CLASSIFICATION	0.9999218034987772	WITHOUT_CLASSIFICATION	7.819650122271612E-5	DEFECT
// If it's a primitive wrapper then we shouldn't try and put // it into the jar, so ignore it.	WITHOUT_CLASSIFICATION	0.9999823394271787	WITHOUT_CLASSIFICATION	1.766057282126247E-5	DEFECT
// Translate periods into path separators, add .class to the // name, create the File object and add it to the Hashtable.	WITHOUT_CLASSIFICATION	0.9999971161316034	WITHOUT_CLASSIFICATION	2.883868396680633E-6	DEFECT
// Weblogic will throw an error if the deployment descriptor does // not match the class files.	WITHOUT_CLASSIFICATION	0.999978752054017	WITHOUT_CLASSIFICATION	2.1247945983055996E-5	DEFECT
// Create the file input stream, and buffer everything over // to the jar output stream	WITHOUT_CLASSIFICATION	0.999999866147291	WITHOUT_CLASSIFICATION	1.3385270912289382E-7	DEFECT
// Close up the file input stream for the class file	WITHOUT_CLASSIFICATION	0.9999986642931138	WITHOUT_CLASSIFICATION	1.3357068861155918E-6	DEFECT
// register any DTDs supplied by the user	WITHOUT_CLASSIFICATION	0.9999983731136992	WITHOUT_CLASSIFICATION	1.626886300735598E-6	DEFECT
// none to register for generic	WITHOUT_CLASSIFICATION	0.9999774913752417	WITHOUT_CLASSIFICATION	2.250862475825341E-5	DEFECT
// Retrive the files to be added to JAR from EJB descriptor	WITHOUT_CLASSIFICATION	0.9999996163489169	WITHOUT_CLASSIFICATION	3.8365108322493615E-7	DEFECT
// Add any support classes specified in the build file	WITHOUT_CLASSIFICATION	0.9999716603791291	WITHOUT_CLASSIFICATION	2.8339620870933747E-5	DEFECT
// Determine the JAR filename (without filename extension)	WITHOUT_CLASSIFICATION	0.999999594980859	WITHOUT_CLASSIFICATION	4.050191410828072E-7	DEFECT
// First the regular deployment descriptor	WITHOUT_CLASSIFICATION	0.9999879902851763	WITHOUT_CLASSIFICATION	1.2009714823815957E-5	DEFECT
// now the vendor specific files, if any	WITHOUT_CLASSIFICATION	0.9999944246174174	WITHOUT_CLASSIFICATION	5.575382582649535E-6	DEFECT
// add any dependent files	WITHOUT_CLASSIFICATION	0.9999956506515261	WITHOUT_CLASSIFICATION	4.349348473848807E-6	DEFECT
// Check to see if we need a build and start doing the work!	WITHOUT_CLASSIFICATION	0.9999623587753685	WITHOUT_CLASSIFICATION	3.764122463149233E-5	DEFECT
// Log that we are going to build...	WITHOUT_CLASSIFICATION	0.9998842882240354	WITHOUT_CLASSIFICATION	1.1571177596465686E-4	DEFECT
// Use helper method to write the jarfile	WITHOUT_CLASSIFICATION	0.9999945150633096	WITHOUT_CLASSIFICATION	5.4849366904081035E-6	DEFECT
// Log that the file is up to date...	WITHOUT_CLASSIFICATION	0.9999561398068741	WITHOUT_CLASSIFICATION	4.386019312586023E-5	DEFECT
/* Parse the ejb deployment descriptor.  While it may not             * look like much, we use a SAXParser and an inner class to             * get hold of all the classfile names for the descriptor.             */	WITHOUT_CLASSIFICATION	0.9999974034421282	WITHOUT_CLASSIFICATION	2.5965578717351382E-6	DEFECT
// add in support classes if any	WITHOUT_CLASSIFICATION	0.9999852258134951	WITHOUT_CLASSIFICATION	1.4774186504804547E-5	DEFECT
// Work out what the base name is	WITHOUT_CLASSIFICATION	0.9999849904175035	WITHOUT_CLASSIFICATION	1.5009582496548119E-5	DEFECT
// nothing to add for generic tool.	WITHOUT_CLASSIFICATION	0.9999775778945333	WITHOUT_CLASSIFICATION	2.242210546670386E-5	DEFECT
// clean the addedfiles set	WITHOUT_CLASSIFICATION	0.9999966164576446	WITHOUT_CLASSIFICATION	3.3835423553357515E-6	DEFECT
// Create the streams necessary to write the jarfile	WITHOUT_CLASSIFICATION	0.9999973968060719	WITHOUT_CLASSIFICATION	2.60319392809618E-6	DEFECT
//get and clean up innerclass name	WITHOUT_CLASSIFICATION	0.9999955306392148	WITHOUT_CLASSIFICATION	4.4693607852982E-6	DEFECT
// See if there are any inner classes for this class and add them in if there are	WITHOUT_CLASSIFICATION	0.9999448060028017	WITHOUT_CLASSIFICATION	5.519399719836915E-5	DEFECT
// Loop through all the class files found and add them to the jar	WITHOUT_CLASSIFICATION	0.9999941654583053	WITHOUT_CLASSIFICATION	5.83454169473255E-6	DEFECT
//assertions take up space too	WITHOUT_CLASSIFICATION	0.9999531510131334	WITHOUT_CLASSIFICATION	4.684898686654367E-5	DEFECT
// link the file	WITHOUT_CLASSIFICATION	0.9999837384957794	WITHOUT_CLASSIFICATION	1.6261504220612395E-5	DEFECT
// Have to catch this because of the semantics of calling main()	WITHOUT_CLASSIFICATION	0.9999741331663607	WITHOUT_CLASSIFICATION	2.5866833639273676E-5	DEFECT
//trim the META_INF\ off of the file name	WITHOUT_CLASSIFICATION	0.9999632380535807	WITHOUT_CLASSIFICATION	3.676194641939221E-5	DEFECT
// end of writeJar	WITHOUT_CLASSIFICATION	0.9999807640252023	WITHOUT_CLASSIFICATION	1.9235974797643163E-5	DEFECT
// only generate a new ClassLoader if we have a classpath	WITHOUT_CLASSIFICATION	0.9999956324123883	WITHOUT_CLASSIFICATION	4.3675876117312626E-6	DEFECT
// register all the known DTDs	WITHOUT_CLASSIFICATION	0.9999764290273313	WITHOUT_CLASSIFICATION	2.357097266861476E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999675172071433	WITHOUT_CLASSIFICATION	3.2482792856694074E-5	DEFECT
// The the weblogic cmp deployment descriptor	WITHOUT_CLASSIFICATION	0.9999896836807813	WITHOUT_CLASSIFICATION	1.0316319218732703E-5	DEFECT
// try to determine it from publicId	WITHOUT_CLASSIFICATION	0.9999650735605633	WITHOUT_CLASSIFICATION	3.492643943670869E-5	DEFECT
// try to use the compiler specified by build.compiler. // Right now we are just going to allow Jikes	WITHOUT_CLASSIFICATION	0.9999897745663054	WITHOUT_CLASSIFICATION	1.022543369450392E-5	DEFECT
// need to create a generic jar first.	WITHOUT_CLASSIFICATION	0.9999978588414076	WITHOUT_CLASSIFICATION	2.1411585923184235E-6	DEFECT
// Only go forward if the generic and the weblogic file both exist	WITHOUT_CLASSIFICATION	0.999999588256145	WITHOUT_CLASSIFICATION	4.117438550751023E-7	DEFECT
//open jar files	WITHOUT_CLASSIFICATION	0.9999803405571082	WITHOUT_CLASSIFICATION	1.965944289184974E-5	DEFECT
//get the list of generic jar entries	WITHOUT_CLASSIFICATION	0.9999934108312668	WITHOUT_CLASSIFICATION	6.589168733115092E-6	DEFECT
//get the list of weblogic jar entries	WITHOUT_CLASSIFICATION	0.9999940433498331	WITHOUT_CLASSIFICATION	5.956650166895921E-6	DEFECT
//Cycle Through generic and make sure its in weblogic	WITHOUT_CLASSIFICATION	0.9998110998774151	WITHOUT_CLASSIFICATION	1.8890012258499937E-4	DEFECT
// File name/path match	WITHOUT_CLASSIFICATION	0.9999965324810014	WITHOUT_CLASSIFICATION	3.46751899856283E-6	DEFECT
// Check files see if same	WITHOUT_CLASSIFICATION	0.9999949228965731	WITHOUT_CLASSIFICATION	5.077103426896464E-6	DEFECT
//File are different see if its an object or an interface	WITHOUT_CLASSIFICATION	0.9999913796784018	WITHOUT_CLASSIFICATION	8.620321598119927E-6	DEFECT
//Interface changed   rebuild jar.	WITHOUT_CLASSIFICATION	0.9999567086844525	WITHOUT_CLASSIFICATION	4.3291315547571216E-5	DEFECT
//Object class Changed   update it.	WITHOUT_CLASSIFICATION	0.9999830787490941	WITHOUT_CLASSIFICATION	1.6921250905981877E-5	DEFECT
// is it the manifest. If so ignore it	WITHOUT_CLASSIFICATION	0.9999808263922578	WITHOUT_CLASSIFICATION	1.9173607742065207E-5	DEFECT
//File other then class changed   rebuild	WITHOUT_CLASSIFICATION	0.999802351283895	WITHOUT_CLASSIFICATION	1.9764871610498732E-4	DEFECT
// a file doesnt exist rebuild	WITHOUT_CLASSIFICATION	0.9999953082559327	WITHOUT_CLASSIFICATION	4.691744067247624E-6	DEFECT
//Copy files from old weblogic jar	WITHOUT_CLASSIFICATION	0.9999880359361744	WITHOUT_CLASSIFICATION	1.1964063825738912E-5	DEFECT
// Use the entry from the generic jar	WITHOUT_CLASSIFICATION	0.9999968083540921	WITHOUT_CLASSIFICATION	3.1916459078637625E-6	DEFECT
//use fle from original weblogic jar	WITHOUT_CLASSIFICATION	0.9999531151140773	WITHOUT_CLASSIFICATION	4.688488592276057E-5	DEFECT
// need to close files and perhaps rename output	WITHOUT_CLASSIFICATION	0.9999958712214598	WITHOUT_CLASSIFICATION	4.128778540131135E-6	DEFECT
// empty	WITHOUT_CLASSIFICATION	0.9999662337205111	WITHOUT_CLASSIFICATION	3.376627948890816E-5	DEFECT
// if the implementation classes don;t exist regenerate	WITHOUT_CLASSIFICATION	0.9999970785505671	WITHOUT_CLASSIFICATION	2.9214494328294467E-6	DEFECT
// any problems - just regenerate	WITHOUT_CLASSIFICATION	0.9999859974566376	WITHOUT_CLASSIFICATION	1.4002543362319202E-5	DEFECT
// create a Java task to do the rebuild	WITHOUT_CLASSIFICATION	0.9999920300524564	WITHOUT_CLASSIFICATION	7.969947543630418E-6	DEFECT
//weblogic.ejbc.main(args);	WITHOUT_CLASSIFICATION	0.9999815546734756	WITHOUT_CLASSIFICATION	1.84453265244189E-5	DEFECT
/* Build and populate an instance of the ejbc utility */	WITHOUT_CLASSIFICATION	0.9999861641180031	WITHOUT_CLASSIFICATION	1.3835881996898965E-5	DEFECT
// Have to catch this because of the semantics of calling main()	WITHOUT_CLASSIFICATION	0.9999741331663607	WITHOUT_CLASSIFICATION	2.5866833639273676E-5	DEFECT
//classpath	WITHOUT_CLASSIFICATION	0.9998629693332912	WITHOUT_CLASSIFICATION	1.370306667087856E-4	DEFECT
/* Attributes set by the Ant build file */	WITHOUT_CLASSIFICATION	0.9999891330703843	WITHOUT_CLASSIFICATION	1.0866929615611368E-5	DEFECT
// Get the filename of vendor specific descriptor	WITHOUT_CLASSIFICATION	0.9999970166533863	WITHOUT_CLASSIFICATION	2.983346613646054E-6	DEFECT
//trim the META_INF\ off of the file name	WITHOUT_CLASSIFICATION	0.9999632380535807	WITHOUT_CLASSIFICATION	3.676194641939221E-5	DEFECT
// Is the ser file or any of the source files newer then the class files. // firstly find the oldest of the two class files.	WITHOUT_CLASSIFICATION	0.99994807678015	WITHOUT_CLASSIFICATION	5.1923219849965135E-5	DEFECT
// run with no exit for better reporting	WITHOUT_CLASSIFICATION	0.9998096245630601	WITHOUT_CLASSIFICATION	1.9037543693993888E-4	DEFECT
//weblogic.ejbc.main(newArgs);	WITHOUT_CLASSIFICATION	0.9999720095406316	WITHOUT_CLASSIFICATION	2.7990459368472912E-5	DEFECT
/*     * Regardless of the name of the iAS-specific EJB descriptor file, it will     * written in the completed JAR file as "ias-ejb-jar.xml".  This is the     * naming convention implemented by iAS.     */	WITHOUT_CLASSIFICATION	0.9999980763534041	WITHOUT_CLASSIFICATION	1.923646595798997E-6	DEFECT
/* Add CMP descriptors to the list of EJB files */	WITHOUT_CLASSIFICATION	0.9999847041564414	WITHOUT_CLASSIFICATION	1.5295843558634933E-5	DEFECT
/* Only calculate the descriptor name once */	WITHOUT_CLASSIFICATION	0.9999956624338094	WITHOUT_CLASSIFICATION	4.337566190533372E-6	DEFECT
// Directory path of the EJB descriptor // Filename appearing before name terminator // Filename appearing after the name terminator	WITHOUT_CLASSIFICATION	0.9999405547045416	WITHOUT_CLASSIFICATION	5.9445295458378775E-5	DEFECT
/* Find the end of the standard descriptor's relative path */	WITHOUT_CLASSIFICATION	0.9999368733722921	WITHOUT_CLASSIFICATION	6.312662770795691E-5	DEFECT
/* Check to see if the standard name is used (there's no basename) */	WITHOUT_CLASSIFICATION	0.9999988960322967	WITHOUT_CLASSIFICATION	1.1039677032217234E-6	DEFECT
/*             * Check for the odd case where the terminator and/or filename             * extension aren't found.  These will ensure "ias-" appears at the             * end of the name and before the '.' (if present).             */	WITHOUT_CLASSIFICATION	0.9999570043345152	WITHOUT_CLASSIFICATION	4.299566548475677E-5	DEFECT
//choose the right vendor DD	WITHOUT_CLASSIFICATION	0.999618958201373	WITHOUT_CLASSIFICATION	3.810417986270195E-4	DEFECT
// ejb jar file to verify	WITHOUT_CLASSIFICATION	0.9999961806667899	WITHOUT_CLASSIFICATION	3.8193332101664775E-6	DEFECT
//debug ?	WITHOUT_CLASSIFICATION	0.9996343894373765	WITHOUT_CLASSIFICATION	3.656105626235301E-4	DEFECT
//set the classpath	WITHOUT_CLASSIFICATION	0.9999577201542129	WITHOUT_CLASSIFICATION	4.227984578702193E-5	DEFECT
//list file	WITHOUT_CLASSIFICATION	0.9999587184409242	WITHOUT_CLASSIFICATION	4.1281559075842364E-5	DEFECT
//no TIE classes	WITHOUT_CLASSIFICATION	0.9998703884517516	WITHOUT_CLASSIFICATION	1.2961154824844481E-4	DEFECT
//root dir	WITHOUT_CLASSIFICATION	0.9993074598221156	WITHOUT_CLASSIFICATION	6.925401778843588E-4	DEFECT
//compiling order	WITHOUT_CLASSIFICATION	0.999863565404773	WITHOUT_CLASSIFICATION	1.3643459522704883E-4	DEFECT
//add the home class	WITHOUT_CLASSIFICATION	0.9999646699488354	WITHOUT_CLASSIFICATION	3.533005116461684E-5	DEFECT
//build the home classes list.	WITHOUT_CLASSIFICATION	0.9999768967817653	WITHOUT_CLASSIFICATION	2.310321823466485E-5	DEFECT
//remove .class extension	WITHOUT_CLASSIFICATION	0.9999858993900271	WITHOUT_CLASSIFICATION	1.4100609972828476E-5	DEFECT
//add the gen files to the collection	WITHOUT_CLASSIFICATION	0.9996466839971079	WITHOUT_CLASSIFICATION	3.5331600289213754E-4	DEFECT
//remove the .class	WITHOUT_CLASSIFICATION	0.999979572820822	WITHOUT_CLASSIFICATION	2.0427179178066172E-5	DEFECT
// Get the Extensions document	WITHOUT_CLASSIFICATION	0.9999784172080867	WITHOUT_CLASSIFICATION	2.1582791913269008E-5	DEFECT
// We attempt to put in the MAP and Schema files of CMP beans	WITHOUT_CLASSIFICATION	0.9999977684558043	WITHOUT_CLASSIFICATION	2.2315441956136805E-6	DEFECT
// Add the Map file	WITHOUT_CLASSIFICATION	0.9999897874203648	WITHOUT_CLASSIFICATION	1.0212579635087693E-5	DEFECT
// Theres nothing else to see here...keep moving sonny	WITHOUT_CLASSIFICATION	0.9997086941852974	WITHOUT_CLASSIFICATION	2.913058147025305E-4	DEFECT
// Set the options	WITHOUT_CLASSIFICATION	0.9999959656896764	WITHOUT_CLASSIFICATION	4.03431032363289E-6	DEFECT
// Set the JvmArgs	WITHOUT_CLASSIFICATION	0.9999945714878701	WITHOUT_CLASSIFICATION	5.428512129869021E-6	DEFECT
// Set the Environment variable	WITHOUT_CLASSIFICATION	0.9999950390062233	WITHOUT_CLASSIFICATION	4.960993776638359E-6	DEFECT
// Check if list of files to check has been specified	WITHOUT_CLASSIFICATION	0.9999427020357932	WITHOUT_CLASSIFICATION	5.729796420681128E-5	DEFECT
// Have to catch this because of the semantics of calling main()	WITHOUT_CLASSIFICATION	0.9999741331663607	WITHOUT_CLASSIFICATION	2.5866833639273676E-5	DEFECT
//open jar files	WITHOUT_CLASSIFICATION	0.9999803405571082	WITHOUT_CLASSIFICATION	1.965944289184974E-5	DEFECT
//get the list of generic jar entries	WITHOUT_CLASSIFICATION	0.9999934108312668	WITHOUT_CLASSIFICATION	6.589168733115092E-6	DEFECT
//File are different see if its an object or an interface	WITHOUT_CLASSIFICATION	0.9999913796784018	WITHOUT_CLASSIFICATION	8.620321598119927E-6	DEFECT
//Interface changed   rebuild jar.	WITHOUT_CLASSIFICATION	0.9999567086844525	WITHOUT_CLASSIFICATION	4.3291315547571216E-5	DEFECT
//Object class Changed   update it.	WITHOUT_CLASSIFICATION	0.9999830787490941	WITHOUT_CLASSIFICATION	1.6921250905981877E-5	DEFECT
// is it the manifest. If so ignore it	WITHOUT_CLASSIFICATION	0.9999808263922578	WITHOUT_CLASSIFICATION	1.9173607742065207E-5	DEFECT
//File other then class changed   rebuild	WITHOUT_CLASSIFICATION	0.999802351283895	WITHOUT_CLASSIFICATION	1.9764871610498732E-4	DEFECT
// Update with changed Bean class	WITHOUT_CLASSIFICATION	0.9999945804561647	WITHOUT_CLASSIFICATION	5.419543835210974E-6	DEFECT
// Use the entry from the generic jar	WITHOUT_CLASSIFICATION	0.9999968083540921	WITHOUT_CLASSIFICATION	3.1916459078637625E-6	DEFECT
// register all the DTDs, both the ones that are known and // any supplied by the user	WITHOUT_CLASSIFICATION	0.9999854407612366	WITHOUT_CLASSIFICATION	1.4559238763394497E-5	DEFECT
// Set the working directory	WITHOUT_CLASSIFICATION	0.9995371925640854	WITHOUT_CLASSIFICATION	4.628074359145585E-4	DEFECT
// Set the Java class name	WITHOUT_CLASSIFICATION	0.9999987874394117	WITHOUT_CLASSIFICATION	1.212560588260649E-6	DEFECT
// create the -generic.jar, if required	WITHOUT_CLASSIFICATION	0.9999857358777469	WITHOUT_CLASSIFICATION	1.4264122253073585E-5	DEFECT
// create the "undeployed" output .jar, if required	WITHOUT_CLASSIFICATION	0.9999824637174999	WITHOUT_CLASSIFICATION	1.753628250009277E-5	DEFECT
// Only go forward if the generic and the websphere file both exist	WITHOUT_CLASSIFICATION	0.9999991201029113	WITHOUT_CLASSIFICATION	8.798970888158499E-7	DEFECT
//get the list of websphere jar entries	WITHOUT_CLASSIFICATION	0.9999723393589441	WITHOUT_CLASSIFICATION	2.766064105576933E-5	DEFECT
//Cycle Through generic and make sure its in websphere	WITHOUT_CLASSIFICATION	0.9995827854046397	WITHOUT_CLASSIFICATION	4.17214595360305E-4	DEFECT
// File name/path match // Check files see if same	WITHOUT_CLASSIFICATION	0.9999980205553514	WITHOUT_CLASSIFICATION	1.9794446486527916E-6	DEFECT
// a file doesn't exist rebuild	WITHOUT_CLASSIFICATION	0.9999908106965105	WITHOUT_CLASSIFICATION	9.189303489563873E-6	DEFECT
//Copy files from old websphere jar	WITHOUT_CLASSIFICATION	0.9999337919800766	WITHOUT_CLASSIFICATION	6.620801992339304E-5	DEFECT
//use fle from original websphere jar	WITHOUT_CLASSIFICATION	0.9998033935659197	WITHOUT_CLASSIFICATION	1.9660643408029758E-4	DEFECT
// Specification Name must match	WITHOUT_CLASSIFICATION	0.9999948355909014	WITHOUT_CLASSIFICATION	5.164409098485964E-6	DEFECT
// Available specification version must be >= required	WITHOUT_CLASSIFICATION	0.9999824739267781	WITHOUT_CLASSIFICATION	1.752607322198323E-5	DEFECT
// Implementation Vendor ID must match	WITHOUT_CLASSIFICATION	0.9999702936971061	WITHOUT_CLASSIFICATION	2.9706302893873052E-5	DEFECT
// Implementation Vendor ID must match	WITHOUT_CLASSIFICATION	0.9999702936971061	WITHOUT_CLASSIFICATION	2.9706302893873052E-5	DEFECT
// Implementation version must be >= required	WITHOUT_CLASSIFICATION	0.9999904268253937	WITHOUT_CLASSIFICATION	9.573174606197888E-6	DEFECT
// This available optional package satisfies the requirements	WITHOUT_CLASSIFICATION	0.9997284615519353	WITHOUT_CLASSIFICATION	2.71538448064708E-4	DEFECT
// This available optional package satisfies the requirements	WITHOUT_CLASSIFICATION	0.9997284615519353	WITHOUT_CLASSIFICATION	2.71538448064708E-4	DEFECT
//Reset list of sections	WITHOUT_CLASSIFICATION	0.99997711566821	WITHOUT_CLASSIFICATION	2.2884331789999348E-5	DEFECT
// Extension Name must match	WITHOUT_CLASSIFICATION	0.999995653608974	WITHOUT_CLASSIFICATION	4.346391026023321E-6	DEFECT
//Add all the dependency data to manifest for dependencies	WITHOUT_CLASSIFICATION	0.9999715256131588	WITHOUT_CLASSIFICATION	2.847438684118165E-5	DEFECT
// Check if list of files to check has been specified	WITHOUT_CLASSIFICATION	0.9999427020357932	WITHOUT_CLASSIFICATION	5.729796420681128E-5	DEFECT
// CheckStyle:MemberNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9999832161165388	WITHOUT_CLASSIFICATION	1.6783883461112892E-5	DEFECT
// CheckStyle:MemberNameCheck ON	WITHOUT_CLASSIFICATION	0.9999803564642716	WITHOUT_CLASSIFICATION	1.964353572828789E-5	DEFECT
// change this to get the objects from the other reference	WITHOUT_CLASSIFICATION	0.999927636361689	WITHOUT_CLASSIFICATION	7.236363831087194E-5	DEFECT
//Add all the dependency data to manifest for "optional" //dependencies	WITHOUT_CLASSIFICATION	0.9999593822322769	WITHOUT_CLASSIFICATION	4.061776772318753E-5	DEFECT
//add in something like //"Extension-List: javahelp java3d"	WITHOUT_CLASSIFICATION	0.999987569591605	WITHOUT_CLASSIFICATION	1.24304083950352E-5	DEFECT
//all methods static	WITHOUT_CLASSIFICATION	0.9998906800649704	WITHOUT_CLASSIFICATION	1.0931993502960865E-4	DEFECT
/*     * Gets the destination file     */	WITHOUT_CLASSIFICATION	0.9999567070522702	WITHOUT_CLASSIFICATION	4.329294772968457E-5	DEFECT
/*     * Validates URL     */	WITHOUT_CLASSIFICATION	0.9999955362638536	WITHOUT_CLASSIFICATION	4.463736146417111E-6	DEFECT
//Load default locale bundle files //using default file encoding scheme.	WITHOUT_CLASSIFICATION	0.9999251326320845	WITHOUT_CLASSIFICATION	7.486736791555466E-5	DEFECT
//if all resource files associated with this bundle //have been scanned for and still not able to //find a single resrouce file, throw exception	WITHOUT_CLASSIFICATION	0.9995997542631807	WITHOUT_CLASSIFICATION	4.0024573681922063E-4	DEFECT
//So long as the line isn't empty and isn't a comment...	WITHOUT_CLASSIFICATION	0.9997550673254442	WITHOUT_CLASSIFICATION	2.449326745558424E-4	DEFECT
//Legal Key-Value separators are :, = and white space.	WITHOUT_CLASSIFICATION	0.9999603044660802	WITHOUT_CLASSIFICATION	3.969553391984011E-5	DEFECT
//Only if we do have a key is there going to be a value	WITHOUT_CLASSIFICATION	0.9999116572512684	WITHOUT_CLASSIFICATION	8.834274873160679E-5	DEFECT
//Handle line continuations, if any	WITHOUT_CLASSIFICATION	0.9999676491837299	WITHOUT_CLASSIFICATION	3.235081627002757E-5	DEFECT
//Has key already been loaded into resourceMap?	WITHOUT_CLASSIFICATION	0.9999905803415494	WITHOUT_CLASSIFICATION	9.419658450476938E-6	DEFECT
//Make sure parent dirs exist, else, create them.	WITHOUT_CLASSIFICATION	0.9999673593223823	WITHOUT_CLASSIFICATION	3.2640677617673126E-5	DEFECT
//Check to see if dest file has to be recreated	WITHOUT_CLASSIFICATION	0.9999865038190777	WITHOUT_CLASSIFICATION	1.349618092218705E-5	DEFECT
// is there a startToken // and there is still stuff following the startToken	WITHOUT_CLASSIFICATION	0.9996313496872531	WITHOUT_CLASSIFICATION	3.686503127469305E-4	DEFECT
// we found a starttoken, is there an endtoken following? // start at token+tokenlength because start and end // token may be indentical	WITHOUT_CLASSIFICATION	0.9999667146634081	WITHOUT_CLASSIFICATION	3.3285336591887396E-5	DEFECT
// grab the token	WITHOUT_CLASSIFICATION	0.9999707299799343	WITHOUT_CLASSIFICATION	2.927002006569315E-5	DEFECT
// If there is a white space or = or :, then // it isn't to be treated as a valid key.	WITHOUT_CLASSIFICATION	0.9999905870687925	WITHOUT_CLASSIFICATION	9.412931207396707E-6	DEFECT
// find the replace string	WITHOUT_CLASSIFICATION	0.9999897886631037	WITHOUT_CLASSIFICATION	1.0211336896333207E-5	DEFECT
// generate the new line	WITHOUT_CLASSIFICATION	0.9999964405248077	WITHOUT_CLASSIFICATION	3.5594751922865243E-6	DEFECT
// set start position for next search	WITHOUT_CLASSIFICATION	0.9999962664989518	WITHOUT_CLASSIFICATION	3.7335010482852446E-6	DEFECT
// find next starttoken	WITHOUT_CLASSIFICATION	0.9999841403408996	WITHOUT_CLASSIFICATION	1.585965910044315E-5	DEFECT
// deal with specified srcDir	WITHOUT_CLASSIFICATION	0.9999911636275041	WITHOUT_CLASSIFICATION	8.83637249599923E-6	DEFECT
// deal with the filesets	WITHOUT_CLASSIFICATION	0.9999889161367151	WITHOUT_CLASSIFICATION	1.1083863284819895E-5	DEFECT
// remove any files that shouldn't be overwritten.	WITHOUT_CLASSIFICATION	0.9999693290828661	WITHOUT_CLASSIFICATION	3.067091713401578E-5	DEFECT
// check that the password has been set	WITHOUT_CLASSIFICATION	0.9999552459360688	WITHOUT_CLASSIFICATION	4.475406393125979E-5	DEFECT
// check for missing application on deploy & update	WITHOUT_CLASSIFICATION	0.9999691371707056	WITHOUT_CLASSIFICATION	3.0862829294386136E-5	DEFECT
// check for missing source on deploy & update	WITHOUT_CLASSIFICATION	0.9999833445440861	WITHOUT_CLASSIFICATION	1.665545591392958E-5	DEFECT
// check for missing application on delete & undeploy	WITHOUT_CLASSIFICATION	0.9999883334663446	WITHOUT_CLASSIFICATION	1.1666533655472675E-5	DEFECT
// keys to optional attributes	WITHOUT_CLASSIFICATION	0.9999912368807785	WITHOUT_CLASSIFICATION	8.763119221555484E-6	DEFECT
// constructs the "-url <url> -debug <action> <password>" portion // of the commmand line	WITHOUT_CLASSIFICATION	0.999990423406332	WITHOUT_CLASSIFICATION	9.5765936678894E-6	DEFECT
/////////////////////////////////////////////////////////////////////////// // // Place vendor specific tool creations here. // ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.99992835517591	WITHOUT_CLASSIFICATION	7.164482408995889E-5	DEFECT
/////////////////////////////////////////////////////////////////////////// // // Execute method // ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999605508355132	WITHOUT_CLASSIFICATION	3.944916448681508E-5	DEFECT
/////////////////////////////////////////////////////////////////////////// // // Set/get methods // ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999712861600307	WITHOUT_CLASSIFICATION	2.8713839969303654E-5	DEFECT
// keys to optional attributes	WITHOUT_CLASSIFICATION	0.9999912368807785	WITHOUT_CLASSIFICATION	8.763119221555484E-6	DEFECT
// convert backslashes to slashes, otherwise jjtree will // put this as comments and this seems to confuse javacc	WITHOUT_CLASSIFICATION	0.9999637922871817	WITHOUT_CLASSIFICATION	3.6207712818257756E-5	DEFECT
// required attributes	WITHOUT_CLASSIFICATION	0.9999824134235434	WITHOUT_CLASSIFICATION	1.7586576456572283E-5	DEFECT
// required attributes	WITHOUT_CLASSIFICATION	0.9999824134235434	WITHOUT_CLASSIFICATION	1.7586576456572283E-5	DEFECT
// required attributes	WITHOUT_CLASSIFICATION	0.9999824134235434	WITHOUT_CLASSIFICATION	1.7586576456572283E-5	DEFECT
// load command line with optional attributes	WITHOUT_CLASSIFICATION	0.9999973056293734	WITHOUT_CLASSIFICATION	2.6943706266646917E-6	DEFECT
// load command line with optional attributes	WITHOUT_CLASSIFICATION	0.9999973056293734	WITHOUT_CLASSIFICATION	2.6943706266646917E-6	DEFECT
// load command line with optional attributes	WITHOUT_CLASSIFICATION	0.9999973056293734	WITHOUT_CLASSIFICATION	2.6943706266646917E-6	DEFECT
// use the directory containing the target as the output directory	WITHOUT_CLASSIFICATION	0.9999850366120189	WITHOUT_CLASSIFICATION	1.4963387981042773E-5	DEFECT
// use the directory containing the target as the output directory	WITHOUT_CLASSIFICATION	0.9999850366120189	WITHOUT_CLASSIFICATION	1.4963387981042773E-5	DEFECT
// used by jpackage for JavaCC 3.x	WITHOUT_CLASSIFICATION	0.9999993256527044	WITHOUT_CLASSIFICATION	6.743472956076229E-7	DEFECT
// check the target is a file	WITHOUT_CLASSIFICATION	0.9999990524664895	WITHOUT_CLASSIFICATION	9.475335104631673E-7	DEFECT
// determine if the generated java file is up-to-date	WITHOUT_CLASSIFICATION	0.9999999539278078	WITHOUT_CLASSIFICATION	4.6072192139172866E-8	DEFECT
// Extract file's base-name	WITHOUT_CLASSIFICATION	0.9999965103566347	WITHOUT_CLASSIFICATION	3.489643365366773E-6	DEFECT
// Replace the file's extension with '.java'	WITHOUT_CLASSIFICATION	0.9999976667215444	WITHOUT_CLASSIFICATION	2.333278455512138E-6	DEFECT
// Change the directory	WITHOUT_CLASSIFICATION	0.9999758555281686	WITHOUT_CLASSIFICATION	2.4144471831396454E-5	DEFECT
// This default has been good enough until Ant 1.6.3, so stick // with it	WITHOUT_CLASSIFICATION	0.9965006256647619	WITHOUT_CLASSIFICATION	0.0034993743352379806	DEFECT
// first search for the "old" javah class in 1.4.2 tools.jar	WITHOUT_CLASSIFICATION	0.9999979469629161	WITHOUT_CLASSIFICATION	2.0530370839886886E-6	DEFECT
// assume older than 1.4.2 tools.jar	WITHOUT_CLASSIFICATION	0.9999960006766099	WITHOUT_CLASSIFICATION	3.999323390164853E-6	DEFECT
//private CommandlineJava commandline = new CommandlineJava();	WITHOUT_CLASSIFICATION	0.9999986833197267	WITHOUT_CLASSIFICATION	1.316680273324511E-6	DEFECT
// required attributes // Deprecated! // Use this going forward	WITHOUT_CLASSIFICATION	0.999994950843516	WITHOUT_CLASSIFICATION	5.049156484102136E-6	DEFECT
// optional attributes	WITHOUT_CLASSIFICATION	0.9999965129407781	WITHOUT_CLASSIFICATION	3.487059221901469E-6	DEFECT
// execute the test and get the return code	WITHOUT_CLASSIFICATION	0.9999890489176037	WITHOUT_CLASSIFICATION	1.0951082396398109E-5	DEFECT
// if there is an error/failure and that it should halt, stop // everything otherwise just log a statement	WITHOUT_CLASSIFICATION	0.999985989416506	WITHOUT_CLASSIFICATION	1.4010583494033608E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999707121018232	WITHOUT_CLASSIFICATION	2.9287898176784134E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999707121018232	WITHOUT_CLASSIFICATION	2.9287898176784134E-5	DEFECT
/* int accessFlags = */	WITHOUT_CLASSIFICATION	0.9999904527286578	WITHOUT_CLASSIFICATION	9.547271342116931E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999675172071433	WITHOUT_CLASSIFICATION	3.2482792856694074E-5	DEFECT
// not necessary as JDepend would fail, but why loose // some time?	WITHOUT_CLASSIFICATION	0.9999659526826669	WITHOUT_CLASSIFICATION	3.40473173331401E-5	DEFECT
// This bit turns <exclude> child tags into patters to ignore	WITHOUT_CLASSIFICATION	0.9998870825630668	WITHOUT_CLASSIFICATION	1.129174369331973E-4	DEFECT
// JL: comment extracted from JUnitTask (and slightly modified)	WITHOUT_CLASSIFICATION	0.9999885094587676	WITHOUT_CLASSIFICATION	1.1490541232377941E-5	DEFECT
// if not set, auto-create the ClassPath from the project	WITHOUT_CLASSIFICATION	0.9999962827016607	WITHOUT_CLASSIFICATION	3.7172983392476885E-6	DEFECT
// having a space between the file and its path causes commandline // to add quotes around the argument thus making JDepend not taking // it into account. Thus we split it in two	WITHOUT_CLASSIFICATION	0.999952104190387	WITHOUT_CLASSIFICATION	4.789580961305358E-5	DEFECT
// This is the new way - use classespath - code is the // same for now	WITHOUT_CLASSIFICATION	0.9996612524858808	WITHOUT_CLASSIFICATION	3.387475141191972E-4	DEFECT
// read in all constant pool entries.	WITHOUT_CLASSIFICATION	0.9999661427543339	WITHOUT_CLASSIFICATION	3.385724566604006E-5	DEFECT
// verify this is a valid class file.	WITHOUT_CLASSIFICATION	0.999992923821486	WITHOUT_CLASSIFICATION	7.076178514012478E-6	DEFECT
/* int version = */	WITHOUT_CLASSIFICATION	0.999982258026665	WITHOUT_CLASSIFICATION	1.7741973335072854E-5	DEFECT
// read the constant pool.	WITHOUT_CLASSIFICATION	0.9999821184057573	WITHOUT_CLASSIFICATION	1.78815942426768E-5	DEFECT
// read access flags and class index.	WITHOUT_CLASSIFICATION	0.9999585326651949	WITHOUT_CLASSIFICATION	4.146733480520801E-5	DEFECT
//Be sure everything has been set.	WITHOUT_CLASSIFICATION	0.9995463590072238	WITHOUT_CLASSIFICATION	4.5364099277629043E-4	DEFECT
//Do the merge	WITHOUT_CLASSIFICATION	0.999896120010868	WITHOUT_CLASSIFICATION	1.0387998913199192E-4	DEFECT
//Add this file to the addfiles Vector and add it //later at the top level of the output file.	WITHOUT_CLASSIFICATION	0.999769715057644	WITHOUT_CLASSIFICATION	2.3028494235610537E-4	DEFECT
//do nothing	WITHOUT_CLASSIFICATION	0.9993906579767482	WITHOUT_CLASSIFICATION	6.093420232518114E-4	DEFECT
// jlink output input1 ... inputN	WITHOUT_CLASSIFICATION	0.9999316724515114	WITHOUT_CLASSIFICATION	6.83275484886334E-5	DEFECT
// To maintain compatibility with the command-line version, // we will only add files to be merged.	WITHOUT_CLASSIFICATION	0.9999878658109264	WITHOUT_CLASSIFICATION	1.2134189073754982E-5	DEFECT
/*     * Actually performs the merging of f into the output.     * f should be a zip or jar file.     */	WITHOUT_CLASSIFICATION	0.9999903212478761	WITHOUT_CLASSIFICATION	9.678752123902777E-6	DEFECT
//Check to see that the file with name "name" exists.	WITHOUT_CLASSIFICATION	0.9999618658224736	WITHOUT_CLASSIFICATION	3.8134177526496275E-5	DEFECT
//META-INF not found in the name of the entry. Go ahead and process it.	WITHOUT_CLASSIFICATION	0.9999635961237603	WITHOUT_CLASSIFICATION	3.640387623977803E-5	DEFECT
//Weblogic jspc does not seem to work unless u explicitly set this... // Does not take the classpath from the env.... // Am i missing something about the Java task??	WITHOUT_CLASSIFICATION	0.9999141213257676	WITHOUT_CLASSIFICATION	8.587867423232029E-5	DEFECT
//do nothing	WITHOUT_CLASSIFICATION	0.9993906579767482	WITHOUT_CLASSIFICATION	6.093420232518114E-4	DEFECT
/*     * Necessary in the case where you add a entry that     * is not compressed.     */	WITHOUT_CLASSIFICATION	0.9999790833385183	WITHOUT_CLASSIFICATION	2.0916661481679488E-5	DEFECT
//Ignore manifest entries.  They're bound to cause conflicts between //files that are being merged.  User should supply their own //manifest file when doing the merge.	WITHOUT_CLASSIFICATION	0.9991720931919464	WITHOUT_CLASSIFICATION	8.279068080535559E-4	DEFECT
//It was the duplicate entry.	WITHOUT_CLASSIFICATION	0.9999775119926096	WITHOUT_CLASSIFICATION	2.248800739027644E-5	DEFECT
/*     * Adds contents of a directory to the output.     */	WITHOUT_CLASSIFICATION	0.9999055280294558	WITHOUT_CLASSIFICATION	9.447197054429096E-5	DEFECT
/*     * Gets the name of an entry in the file.  This is the real name     * which for a class is the name of the package with the class     * name appended.     */	WITHOUT_CLASSIFICATION	0.9999452970964672	WITHOUT_CLASSIFICATION	5.470290353286935E-5	DEFECT
// see if the file is in fact a .class file, and determine its actual name.	WITHOUT_CLASSIFICATION	0.9999985609835087	WITHOUT_CLASSIFICATION	1.439016491239651E-6	DEFECT
/*     * Adds a file to the output stream.     */	WITHOUT_CLASSIFICATION	0.999995201585022	WITHOUT_CLASSIFICATION	4.798414978074776E-6	DEFECT
//Make sure file exists	WITHOUT_CLASSIFICATION	0.9999721374733774	WITHOUT_CLASSIFICATION	2.7862526622642035E-5	DEFECT
/*     * A convenience method that several other methods might call.     */	WITHOUT_CLASSIFICATION	0.9999968876607106	WITHOUT_CLASSIFICATION	3.112339289452875E-6	DEFECT
//This entry already exists. So, go with the first one.	WITHOUT_CLASSIFICATION	0.9996135995759823	WITHOUT_CLASSIFICATION	3.8640042401770795E-4	DEFECT
/*     * A method that does the work on a given entry in a mergefile.     * The big deal is to set the right parameters in the ZipEntry     * on the output stream.     */	WITHOUT_CLASSIFICATION	0.9999793520999072	WITHOUT_CLASSIFICATION	2.0647900092785567E-5	DEFECT
//Note, don't need to specify size or crc for compressed files.	WITHOUT_CLASSIFICATION	0.9992542885484075	WITHOUT_CLASSIFICATION	7.457114515924783E-4	DEFECT
//use the systemclasspath as well, to include the ant jar	WITHOUT_CLASSIFICATION	0.9999854230743852	WITHOUT_CLASSIFICATION	1.4576925614843374E-5	DEFECT
/*     * Necessary in the case where you add a entry that     * is not compressed.     */	WITHOUT_CLASSIFICATION	0.9999790833385183	WITHOUT_CLASSIFICATION	2.0916661481679488E-5	DEFECT
//TODO Test on other versions of weblogic //TODO add more attributes to the task, to take care of all jspc options //TODO Test on Unix	WITHOUT_CLASSIFICATION	0.9995993996258079	WITHOUT_CLASSIFICATION	4.0060037419218216E-4	DEFECT
//private String compilerPath; //fully qualified name for the compiler executable	WITHOUT_CLASSIFICATION	0.9999864735835451	WITHOUT_CLASSIFICATION	1.352641645479202E-5	DEFECT
// get all the files in the sourceDirectory	WITHOUT_CLASSIFICATION	0.9999013586382833	WITHOUT_CLASSIFICATION	9.864136171665E-5	DEFECT
//Weblogic.jspc calls System.exit() ... have to fork // Therefore, takes loads of time // Can pass directories at a time (*.jsp) but easily runs out of // memory on hefty dirs (even on  a Sun)	WITHOUT_CLASSIFICATION	0.9982767796911849	WITHOUT_CLASSIFICATION	0.0017232203088150648	DEFECT
// apply transformation	WITHOUT_CLASSIFICATION	0.9999871232492782	WITHOUT_CLASSIFICATION	1.2876750721819855E-5	DEFECT
//end class	WITHOUT_CLASSIFICATION	0.9999407036128187	WITHOUT_CLASSIFICATION	5.92963871812878E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999707121018232	WITHOUT_CLASSIFICATION	2.9287898176784134E-5	DEFECT
// CheckStyle:ConstantNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9999788311965451	WITHOUT_CLASSIFICATION	2.116880345488347E-5	DEFECT
// CheckStyle:ConstantNameCheck ON	WITHOUT_CLASSIFICATION	0.9999715123245112	WITHOUT_CLASSIFICATION	2.848767548871894E-5	DEFECT
// now we need to populate the compiler adapter	WITHOUT_CLASSIFICATION	0.9999635856758908	WITHOUT_CLASSIFICATION	3.64143241090884E-5	DEFECT
// finally, lets execute the compiler!!	WITHOUT_CLASSIFICATION	0.9999814960005345	WITHOUT_CLASSIFICATION	1.850399946547986E-5	DEFECT
// Create an instance of the compiler, redirecting output to // the project log	WITHOUT_CLASSIFICATION	0.9999894898913152	WITHOUT_CLASSIFICATION	1.0510108684855506E-5	DEFECT
// compile the source files	WITHOUT_CLASSIFICATION	0.9999968332931496	WITHOUT_CLASSIFICATION	3.166706850543481E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999675172071433	WITHOUT_CLASSIFICATION	3.2482792856694074E-5	DEFECT
//demand create vector of filesets	WITHOUT_CLASSIFICATION	0.9999694222503197	WITHOUT_CLASSIFICATION	3.057774968021392E-5	DEFECT
// make sure that we've got a destdir	WITHOUT_CLASSIFICATION	0.9999901352256138	WITHOUT_CLASSIFICATION	9.864774386241264E-6	DEFECT
//bind to a compiler	WITHOUT_CLASSIFICATION	0.999931514194405	WITHOUT_CLASSIFICATION	6.848580559503197E-5	DEFECT
//if we are a webapp, hand off to the compiler, which had better handle it	WITHOUT_CLASSIFICATION	0.9999550875763931	WITHOUT_CLASSIFICATION	4.491242360691993E-5	DEFECT
// make sure that we've got a srcdir	WITHOUT_CLASSIFICATION	0.9999853597347611	WITHOUT_CLASSIFICATION	1.4640265238979133E-5	DEFECT
// if the compiler does its own dependency stuff, we just call it right now	WITHOUT_CLASSIFICATION	0.9999965714195095	WITHOUT_CLASSIFICATION	3.4285804904608167E-6	DEFECT
//the remainder of this method is only for compilers that need their dependency work done	WITHOUT_CLASSIFICATION	0.9901301221286832	WITHOUT_CLASSIFICATION	0.00986987787131675	DEFECT
// scan source directories and dest directory to build up both copy // lists and compile lists	WITHOUT_CLASSIFICATION	0.9999992243193488	WITHOUT_CLASSIFICATION	7.756806511843191E-7	DEFECT
//        String srcFileDir=srcFile.getParent();	WITHOUT_CLASSIFICATION	0.9999948456278603	WITHOUT_CLASSIFICATION	5.154372139707247E-6	DEFECT
//end inner class	WITHOUT_CLASSIFICATION	0.9999694176115778	WITHOUT_CLASSIFICATION	3.0582388422287863E-5	DEFECT
// since we don't mangle extensions like the servlet does, // we need to check for keywords as class names	WITHOUT_CLASSIFICATION	0.9999990882481025	WITHOUT_CLASSIFICATION	9.117518974316042E-7	DEFECT
// first char is more restrictive than the rest	WITHOUT_CLASSIFICATION	0.9999987471342155	WITHOUT_CLASSIFICATION	1.2528657844945951E-6	DEFECT
// this is the rest	WITHOUT_CLASSIFICATION	0.9999094540875172	WITHOUT_CLASSIFICATION	9.054591248289196E-5	DEFECT
// If the first char is not a start of Java identifier or is _ // prepend a '_'.	WITHOUT_CLASSIFICATION	0.9999958450003291	WITHOUT_CLASSIFICATION	4.154999670866018E-6	DEFECT
//we are forking here to be sure that if JspC calls //System.exit() it doesn't halt the build	WITHOUT_CLASSIFICATION	0.999862600556674	WITHOUT_CLASSIFICATION	1.373994433259886E-4	DEFECT
//tomcat4.0 gets the old mangler	WITHOUT_CLASSIFICATION	0.9999549994343565	WITHOUT_CLASSIFICATION	4.5000565643552196E-5	DEFECT
//tomcat4.1 gets the new one	WITHOUT_CLASSIFICATION	0.9999132600651643	WITHOUT_CLASSIFICATION	8.673993483574046E-5	DEFECT
// for all other possibilities	WITHOUT_CLASSIFICATION	0.9999966490207427	WITHOUT_CLASSIFICATION	3.3509792573018535E-6	DEFECT
// append the err and output streams to the log	WITHOUT_CLASSIFICATION	0.9999895240250932	WITHOUT_CLASSIFICATION	1.0475974906704341E-5	DEFECT
// acrobatic cast.	WITHOUT_CLASSIFICATION	0.999980886865252	WITHOUT_CLASSIFICATION	1.911313474802375E-5	DEFECT
// set the destination directory relative from the project if needed.	WITHOUT_CLASSIFICATION	0.9999422221184845	WITHOUT_CLASSIFICATION	5.77778815156101E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999707121018232	WITHOUT_CLASSIFICATION	2.9287898176784134E-5	DEFECT
// sanity check	WITHOUT_CLASSIFICATION	0.999985036299932	WITHOUT_CLASSIFICATION	1.4963700067971542E-5	DEFECT
// plain impossible	WITHOUT_CLASSIFICATION	0.9999898542451605	WITHOUT_CLASSIFICATION	1.0145754839524496E-5	DEFECT
// Quick return - no output do nothing.	WITHOUT_CLASSIFICATION	0.9999163656135678	WITHOUT_CLASSIFICATION	8.363438643215984E-5	DEFECT
// append the err and output streams to the log	WITHOUT_CLASSIFICATION	0.9999895240250932	WITHOUT_CLASSIFICATION	1.0475974906704341E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999675172071433	WITHOUT_CLASSIFICATION	3.2482792856694074E-5	DEFECT
// If style dir is not specified we have to retrieve // the stylesheet from the classloader	WITHOUT_CLASSIFICATION	0.9999687419650393	WITHOUT_CLASSIFICATION	3.1258034960665125E-5	DEFECT
// If we are here, then the style dir is here and we // should read the stylesheet from the filesystem	WITHOUT_CLASSIFICATION	0.9998355903830064	WITHOUT_CLASSIFICATION	1.644096169935415E-4	DEFECT
// xalan 2	WITHOUT_CLASSIFICATION	0.9999546731024364	WITHOUT_CLASSIFICATION	4.532689756361636E-5	DEFECT
// xalan xsltc	WITHOUT_CLASSIFICATION	0.9999849936078358	WITHOUT_CLASSIFICATION	1.500639216435467E-5	DEFECT
// jdk 1.5 xsltc	WITHOUT_CLASSIFICATION	0.9999789350330499	WITHOUT_CLASSIFICATION	2.1064966950029066E-5	DEFECT
// must be plain, ensured by TypeAttribute	WITHOUT_CLASSIFICATION	0.999999420216569	WITHOUT_CLASSIFICATION	5.79783431044362E-7	DEFECT
// pre JUnit 3.7	WITHOUT_CLASSIFICATION	0.9999790247022495	WITHOUT_CLASSIFICATION	2.0975297750526273E-5	DEFECT
// can be null if an error occurred in setUp	WITHOUT_CLASSIFICATION	0.9999985936643064	WITHOUT_CLASSIFICATION	1.4063356936317256E-6	DEFECT
// PlainJUnitResultFormatter	WITHOUT_CLASSIFICATION	0.9999995474065294	WITHOUT_CLASSIFICATION	4.525934704750653E-7	DEFECT
// Snapshot of the system properties	WITHOUT_CLASSIFICATION	0.9993751082877635	WITHOUT_CLASSIFICATION	6.248917122363484E-4	DEFECT
//add the timestamp	WITHOUT_CLASSIFICATION	0.9999697782628754	WITHOUT_CLASSIFICATION	3.0221737124737545E-5	DEFECT
//and the hostname.	WITHOUT_CLASSIFICATION	0.9999559316445198	WITHOUT_CLASSIFICATION	4.406835548029629E-5	DEFECT
// Output properties	WITHOUT_CLASSIFICATION	0.9999357322020255	WITHOUT_CLASSIFICATION	6.426779797452748E-5	DEFECT
// a TestSuite can contain Tests from multiple classes, // even tests with the same name - disambiguate them.	WITHOUT_CLASSIFICATION	0.9999846615731578	WITHOUT_CLASSIFICATION	1.533842684224019E-5	DEFECT
// XMLJUnitResultFormatter	WITHOUT_CLASSIFICATION	0.9999957711452756	WITHOUT_CLASSIFICATION	4.22885472435376E-6	DEFECT
// Do we send output to the formatters ?	WITHOUT_CLASSIFICATION	0.9999974346615816	WITHOUT_CLASSIFICATION	2.565338418422389E-6	DEFECT
//   Attributes for basetest	WITHOUT_CLASSIFICATION	0.9999872614365451	WITHOUT_CLASSIFICATION	1.2738563454739249E-5	DEFECT
// forceLoadClass is not convenient here since it would not // properly deal with inner classes of these classes.	WITHOUT_CLASSIFICATION	0.9924561849569774	WITHOUT_CLASSIFICATION	0.0075438150430225635	DEFECT
/* forkMode.getValue().equals(ForkMode.PER_BATCH) */	WITHOUT_CLASSIFICATION	0.9999909265950834	WITHOUT_CLASSIFICATION	9.073404916641665E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999707121018232	WITHOUT_CLASSIFICATION	2.9287898176784134E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.99987048956532	WITHOUT_CLASSIFICATION	1.2951043468007955E-4	DEFECT
// execute the test and get the return code	WITHOUT_CLASSIFICATION	0.9999890489176037	WITHOUT_CLASSIFICATION	1.0951082396398109E-5	DEFECT
// execute the test and get the return code	WITHOUT_CLASSIFICATION	0.9999890489176037	WITHOUT_CLASSIFICATION	1.0951082396398109E-5	DEFECT
// null watchdog means no timeout, you'd better not check with null	WITHOUT_CLASSIFICATION	0.9999859441155661	WITHOUT_CLASSIFICATION	1.4055884433893064E-5	DEFECT
// if there is an error/failure and that it should halt, stop // everything otherwise just log a statement	WITHOUT_CLASSIFICATION	0.999985989416506	WITHOUT_CLASSIFICATION	1.4010583494033608E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999675172071433	WITHOUT_CLASSIFICATION	3.2482792856694074E-5	DEFECT
// set the default values if not specified //@todo should be moved to the test class instead.	WITHOUT_CLASSIFICATION	0.9999994315252754	WITHOUT_CLASSIFICATION	5.684747246409315E-7	DEFECT
// Create a temporary file to pass the test cases to run to // the runner (one test case per line)	WITHOUT_CLASSIFICATION	0.9999982226994583	WITHOUT_CLASSIFICATION	1.7773005417922529E-6	DEFECT
// #31885	WITHOUT_CLASSIFICATION	0.9999343166882638	WITHOUT_CLASSIFICATION	6.568331173613707E-5	DEFECT
// ignored.	WITHOUT_CLASSIFICATION	0.9999697418829069	WITHOUT_CLASSIFICATION	3.025811709313856E-5	DEFECT
// in VM is not very nice since it could probably hang the // whole build. IMHO this method should be avoided and it would be best // to remove it in future versions. TBD. (SBa)	WITHOUT_CLASSIFICATION	0.9963187786291952	WITHOUT_CLASSIFICATION	0.003681221370804862	DEFECT
// make sure the test will be accepted as a TestCase	WITHOUT_CLASSIFICATION	0.9999924486762278	WITHOUT_CLASSIFICATION	7.551323772172399E-6	DEFECT
// make sure the test annotation are accepted	WITHOUT_CLASSIFICATION	0.999976920742412	WITHOUT_CLASSIFICATION	2.3079257587992373E-5	DEFECT
// will cause trouble in JDK 1.1 if omitted	WITHOUT_CLASSIFICATION	0.9999561188871616	WITHOUT_CLASSIFICATION	4.388111283841753E-5	DEFECT
// local copy since LogOutputStream.task is private	WITHOUT_CLASSIFICATION	0.999997656769761	WITHOUT_CLASSIFICATION	2.3432302389806E-6	DEFECT
// this one is here because the changes to support ResourceCollections // have broken Magic's JUnitTestTask. // // The task adds a FileSet to a BatchTest instance using the // Java API and without telling the FileSet about its project // instance.  The original code would pass in project on the // call to getDirectoryScanner - which is now hidden deep into // Resources.iterator() and not reachable.	WITHOUT_CLASSIFICATION	0.9998201897051587	WITHOUT_CLASSIFICATION	1.7981029484114082E-4	DEFECT
// dummy output for the framed report // it's all done by extension...	WITHOUT_CLASSIFICATION	0.9999965808090345	WITHOUT_CLASSIFICATION	3.419190965357808E-6	DEFECT
// conforming to NodeList interface	WITHOUT_CLASSIFICATION	0.9999932670330605	WITHOUT_CLASSIFICATION	6.7329669395605226E-6	DEFECT
// this should never happen	WITHOUT_CLASSIFICATION	0.9998127288147235	WITHOUT_CLASSIFICATION	1.8727118527657683E-4	DEFECT
// write the document	WITHOUT_CLASSIFICATION	0.999959333623114	WITHOUT_CLASSIFICATION	4.066637688595589E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999675172071433	WITHOUT_CLASSIFICATION	3.2482792856694074E-5	DEFECT
//----- from now, the methods are all related to DOM tree manipulation	WITHOUT_CLASSIFICATION	0.9987203383144391	WITHOUT_CLASSIFICATION	0.0012796616855608879	DEFECT
// writers do not throw exceptions, so check for them.	WITHOUT_CLASSIFICATION	0.999782140313662	WITHOUT_CLASSIFICATION	2.1785968633802771E-4	DEFECT
// create the dom tree	WITHOUT_CLASSIFICATION	0.9999873143826549	WITHOUT_CLASSIFICATION	1.2685617345019336E-5	DEFECT
// get all files and add them to the document	WITHOUT_CLASSIFICATION	0.9999800441163514	WITHOUT_CLASSIFICATION	1.9955883648483854E-5	DEFECT
// make sure that this is REALLY a testsuite.	WITHOUT_CLASSIFICATION	0.9999902701306063	WITHOUT_CLASSIFICATION	9.729869393752275E-6	DEFECT
//wrong root element name // issue a warning.	WITHOUT_CLASSIFICATION	0.9999959008667537	WITHOUT_CLASSIFICATION	4.0991332462090485E-6	DEFECT
// a testcase might have failed and write a zero-length document, // It has already failed, but hey.... mm. just put a warning	WITHOUT_CLASSIFICATION	0.9999974430333517	WITHOUT_CLASSIFICATION	2.556966648314573E-6	DEFECT
// a missing . might imply no package at all. Don't get fooled.	WITHOUT_CLASSIFICATION	0.9999364190419765	WITHOUT_CLASSIFICATION	6.358095802357151E-5	DEFECT
// modify the name attribute and set the package	WITHOUT_CLASSIFICATION	0.999997515870301	WITHOUT_CLASSIFICATION	2.4841296989706337E-6	DEFECT
// don't filter AssertionFailure	WITHOUT_CLASSIFICATION	0.9998443083343765	WITHOUT_CLASSIFICATION	1.5569166562343214E-4	DEFECT
// JUnit 4 support:	WITHOUT_CLASSIFICATION	0.999972099017153	WITHOUT_CLASSIFICATION	2.7900982847058738E-5	DEFECT
// check for a static suite method first, even when using // JUnit 4	WITHOUT_CLASSIFICATION	0.9999989499422758	WITHOUT_CLASSIFICATION	1.0500577242357173E-6	DEFECT
// check if there is a suite method	WITHOUT_CLASSIFICATION	0.9999888752059816	WITHOUT_CLASSIFICATION	1.1124794018440315E-5	DEFECT
// no appropriate suite method found. We don't report any // error here since it might be perfectly normal.	WITHOUT_CLASSIFICATION	0.9994399806642255	WITHOUT_CLASSIFICATION	5.600193357745735E-4	DEFECT
// Check for JDK 5 first. Will *not* help on JDK 1.4 // if only junit-4.0.jar in CP because in that case // linkage of whole task will already have failed! But // will help if CP has junit-3.8.2.jar:junit-4.0.jar.	WITHOUT_CLASSIFICATION	0.9999787833524489	WITHOUT_CLASSIFICATION	2.1216647551116984E-5	DEFECT
// In that case first C.fN will fail with CNFE and we // will avoid UnsupportedClassVersionError.	WITHOUT_CLASSIFICATION	0.9999135180016676	WITHOUT_CLASSIFICATION	8.64819983323885E-5	DEFECT
// OK, fall back to JUnit 3.	WITHOUT_CLASSIFICATION	0.9999433450490586	WITHOUT_CLASSIFICATION	5.665495094142183E-5	DEFECT
// Let's use it!	WITHOUT_CLASSIFICATION	0.9999850252380567	WITHOUT_CLASSIFICATION	1.4974761943433958E-5	DEFECT
// Use JUnit 3.	WITHOUT_CLASSIFICATION	0.9999887219498765	WITHOUT_CLASSIFICATION	1.1278050123423901E-5	DEFECT
// try to extract a test suite automatically this // will generate warnings if the class is no // suitable Test	WITHOUT_CLASSIFICATION	0.9999972731698282	WITHOUT_CLASSIFICATION	2.726830171716649E-6	DEFECT
// had an exception constructing suite	WITHOUT_CLASSIFICATION	0.9999946212694216	WITHOUT_CLASSIFICATION	5.378730578283011E-6	DEFECT
// Add/overlay system properties on the properties from the Ant project	WITHOUT_CLASSIFICATION	0.9995306109973281	WITHOUT_CLASSIFICATION	4.693890026718732E-4	DEFECT
// return the stack unfiltered	WITHOUT_CLASSIFICATION	0.9999786790762957	WITHOUT_CLASSIFICATION	2.1320923704316085E-5	DEFECT
// Not strictly necessary but probably desirable. // JUnit 4-specific test GUIs will show just "failures". // But Ant's output shows "failures" vs. "errors". // We would prefer to show "failure" for things that logically are.	WITHOUT_CLASSIFICATION	0.9999940222101102	WITHOUT_CLASSIFICATION	5.977789889813158E-6	DEFECT
// To compile on pre-JDK 4 (even though this should always succeed):	WITHOUT_CLASSIFICATION	0.9994990636434609	WITHOUT_CLASSIFICATION	5.00936356539107E-4	DEFECT
// pre-3.4	WITHOUT_CLASSIFICATION	0.9999732961065455	WITHOUT_CLASSIFICATION	2.6703893454494547E-5	DEFECT
// JUnitTestRunner	WITHOUT_CLASSIFICATION	0.9999971374208947	WITHOUT_CLASSIFICATION	2.8625791052166675E-6	DEFECT
//rethrow	WITHOUT_CLASSIFICATION	0.9985472375538919	WITHOUT_CLASSIFICATION	0.001452762446108156	DEFECT
//wrap	WITHOUT_CLASSIFICATION	0.9995394175543529	WITHOUT_CLASSIFICATION	4.6058244564711916E-4	DEFECT
// sorted by newest Kaffe version first	WITHOUT_CLASSIFICATION	0.999995890222081	WITHOUT_CLASSIFICATION	4.10977791889476E-6	DEFECT
// pre Kaffe 1.1.5	WITHOUT_CLASSIFICATION	0.9999667759259708	WITHOUT_CLASSIFICATION	3.3224074029181045E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999707121018232	WITHOUT_CLASSIFICATION	2.9287898176784134E-5	DEFECT
// we are going to scan everything anyway	WITHOUT_CLASSIFICATION	0.9999958659426558	WITHOUT_CLASSIFICATION	4.134057344228936E-6	DEFECT
// only scan directories that can include matched files or // directories	WITHOUT_CLASSIFICATION	0.9999943757997586	WITHOUT_CLASSIFICATION	5.624200241478007E-6	DEFECT
// avoid double scanning of directories, can only happen in fast mode	WITHOUT_CLASSIFICATION	0.9996234255810836	WITHOUT_CLASSIFICATION	3.765744189163715E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.99987048956532	WITHOUT_CLASSIFICATION	1.2951043468007955E-4	DEFECT
// This default has been good enough until Ant 1.6.3, so stick // with it	WITHOUT_CLASSIFICATION	0.9965006256647619	WITHOUT_CLASSIFICATION	0.0034993743352379806	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999675172071433	WITHOUT_CLASSIFICATION	3.2482792856694074E-5	DEFECT
// Rats. // should not happen	WITHOUT_CLASSIFICATION	0.9994843274495243	WITHOUT_CLASSIFICATION	5.156725504756053E-4	DEFECT
// otherwise ExecuteJava has thrown an exception	WITHOUT_CLASSIFICATION	0.9999723821301679	WITHOUT_CLASSIFICATION	2.7617869832100008E-5	DEFECT
// No includes supplied, so set it to 'matches all'	WITHOUT_CLASSIFICATION	0.9999995863475767	WITHOUT_CLASSIFICATION	4.136524234196472E-7	DEFECT
// always start from the current ftp working dir	WITHOUT_CLASSIFICATION	0.9997750228925238	WITHOUT_CLASSIFICATION	2.2497710747611962E-4	DEFECT
// put in the newroots vector the include patterns without // wildcard tokens	WITHOUT_CLASSIFICATION	0.9999942243689234	WITHOUT_CLASSIFICATION	5.775631076602872E-6	DEFECT
// construct it	WITHOUT_CLASSIFICATION	0.9999852478605997	WITHOUT_CLASSIFICATION	1.4752139400194867E-5	DEFECT
// cool case, //we do not need to scan all the subdirs in the relative path	WITHOUT_CLASSIFICATION	0.9997983392825	WITHOUT_CLASSIFICATION	2.0166071750003868E-4	DEFECT
//this should not happen, except if parent has been deleted by another process	WITHOUT_CLASSIFICATION	0.9999056455532124	WITHOUT_CLASSIFICATION	9.43544467876748E-5	DEFECT
// we are already in the right path, so the second parameter // is false	WITHOUT_CLASSIFICATION	0.9999851929580987	WITHOUT_CLASSIFICATION	1.4807041901196113E-5	DEFECT
// hit a hidden file assume not a symlink	WITHOUT_CLASSIFICATION	0.9999478452416406	WITHOUT_CLASSIFICATION	5.215475835945366E-5	DEFECT
// getRelativePath also finds about symlinks	WITHOUT_CLASSIFICATION	0.9999947365739809	WITHOUT_CLASSIFICATION	5.263426019237761E-6	DEFECT
// warn that selectors are not supported	WITHOUT_CLASSIFICATION	0.9999959724515468	WITHOUT_CLASSIFICATION	4.027548453190412E-6	DEFECT
// If we are doing a listing, we need the output stream created now.	WITHOUT_CLASSIFICATION	0.9999918954786738	WITHOUT_CLASSIFICATION	8.104521326081783E-6	DEFECT
// get files from filesets	WITHOUT_CLASSIFICATION	0.9999813843743449	WITHOUT_CLASSIFICATION	1.861562565511426E-5	DEFECT
// find first non cached dir	WITHOUT_CLASSIFICATION	0.9999908312607982	WITHOUT_CLASSIFICATION	9.168739201701878E-6	DEFECT
// check if dir exists by trying to change into it.	WITHOUT_CLASSIFICATION	0.9999933917892944	WITHOUT_CLASSIFICATION	6.6082107055831854E-6	DEFECT
// could not change to it - try to create it	WITHOUT_CLASSIFICATION	0.999686539554902	WITHOUT_CLASSIFICATION	3.134604450978483E-4	DEFECT
// create a local temporary file	WITHOUT_CLASSIFICATION	0.9999975473407553	WITHOUT_CLASSIFICATION	2.4526592446023207E-6	DEFECT
// see if we should issue a chmod command	WITHOUT_CLASSIFICATION	0.9999685979114066	WITHOUT_CLASSIFICATION	3.140208859344523E-5	DEFECT
// ignore it	WITHOUT_CLASSIFICATION	0.9999679415013217	WITHOUT_CLASSIFICATION	3.205849867823887E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999675172071433	WITHOUT_CLASSIFICATION	3.2482792856694074E-5	DEFECT
// ignore it	WITHOUT_CLASSIFICATION	0.9999679415013217	WITHOUT_CLASSIFICATION	3.205849867823887E-5	DEFECT
// delegate the deletion of the local temp file to the delete task // because of race conditions occuring on Windows	WITHOUT_CLASSIFICATION	0.9999858660486672	WITHOUT_CLASSIFICATION	1.4133951332734513E-5	DEFECT
// For Microsoft's Ftp-Service an Array with length 0 is // returned if configured to return listings in "MS-DOS"-Format	WITHOUT_CLASSIFICATION	0.9999778278977083	WITHOUT_CLASSIFICATION	2.2172102291755877E-5	DEFECT
// If we are sending files, then assume out of date. // If we are getting files, then throw an error	WITHOUT_CLASSIFICATION	0.9998536521685313	WITHOUT_CLASSIFICATION	1.463478314687845E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999675172071433	WITHOUT_CLASSIFICATION	3.2482792856694074E-5	DEFECT
// codes 521, 550 and 553 can be produced by FTP Servers //  to indicate that an attempt to create a directory has //  failed because the directory already exists.	WITHOUT_CLASSIFICATION	0.9999978439903747	WITHOUT_CLASSIFICATION	2.1560096251988074E-6	DEFECT
// If an initial command was configured then send it. // Some FTP servers offer different modes of operation, // E.G. switching between a UNIX file system mode and // a legacy file system.	WITHOUT_CLASSIFICATION	0.9998589714838392	WITHOUT_CLASSIFICATION	1.410285161608026E-4	DEFECT
// For a unix ftp server you can set the default mask for all files // created.	WITHOUT_CLASSIFICATION	0.9999963753940629	WITHOUT_CLASSIFICATION	3.6246059370680644E-6	DEFECT
// If the action is MK_DIR, then the specified remote // directory is the directory to create.	WITHOUT_CLASSIFICATION	0.9999283815978719	WITHOUT_CLASSIFICATION	7.161840212819686E-5	DEFECT
// in this case we want to find how much time span there is between local // and remote	WITHOUT_CLASSIFICATION	0.9999581130656954	WITHOUT_CLASSIFICATION	4.188693430469432E-5	DEFECT
//socks	WITHOUT_CLASSIFICATION	0.9992499969212817	WITHOUT_CLASSIFICATION	7.500030787182894E-4	DEFECT
//this may be a java1.4 thingy only	WITHOUT_CLASSIFICATION	0.9999650540542151	WITHOUT_CLASSIFICATION	3.4945945784877714E-5	DEFECT
// simple one-shot execution	WITHOUT_CLASSIFICATION	0.999985176617506	WITHOUT_CLASSIFICATION	1.4823382493964455E-5	DEFECT
// need nested read/write elements	WITHOUT_CLASSIFICATION	0.9999982292643513	WITHOUT_CLASSIFICATION	1.7707356487413994E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999675172071433	WITHOUT_CLASSIFICATION	3.2482792856694074E-5	DEFECT
//here we'd parse the output from change -o into submit -i //in order to support default change.	WITHOUT_CLASSIFICATION	0.9999102767431156	WITHOUT_CLASSIFICATION	8.972325688433263E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc //ToDo: If dealing with default cl need to parse out <enter description here>	WITHOUT_CLASSIFICATION	0.9996087867032614	WITHOUT_CLASSIFICATION	3.9121329673867905E-4	DEFECT
/* -n */	WITHOUT_CLASSIFICATION	0.9998950724561503	WITHOUT_CLASSIFICATION	1.049275438496465E-4	DEFECT
//Remove any non-numerical chars - should leave the change number	WITHOUT_CLASSIFICATION	0.9999575623983535	WITHOUT_CLASSIFICATION	4.243760164653988E-5	DEFECT
// this type of output might happen // Change 18 renamed change 20 and submitted.	WITHOUT_CLASSIFICATION	0.9999886776352267	WITHOUT_CLASSIFICATION	1.1322364773333082E-5	DEFECT
//Match "//" for begining of depot filespec	WITHOUT_CLASSIFICATION	0.9999857253240363	WITHOUT_CLASSIFICATION	1.4274675963692826E-5	DEFECT
// we need to escape the description in case there are /	WITHOUT_CLASSIFICATION	0.9999746701874098	WITHOUT_CLASSIFICATION	2.53298125901081E-5	DEFECT
// NOTE kirk@radik.com 04-April-2001 -- If you put in the -s, you // have to start running through regular expressions here. Much easier // to just not include the scripting information than to try to add it // and strip it later.	WITHOUT_CLASSIFICATION	0.9999501478868801	WITHOUT_CLASSIFICATION	4.9852113119934335E-5	DEFECT
//EoF	WITHOUT_CLASSIFICATION	0.9976210101375504	WITHOUT_CLASSIFICATION	0.0023789898624495976	DEFECT
// CheckStyle:VisibilityModifier OFF - bc //Input //Output //Error // CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.999934349348267	WITHOUT_CLASSIFICATION	6.565065173301713E-5	DEFECT
/* Here we can either revert any unchanged files in a changelist         * or         * any files regardless of whether they have been changed or not         *         *         * The whole process also accepts a p4 filespec         */	WITHOUT_CLASSIFICATION	0.9999964116678084	WITHOUT_CLASSIFICATION	3.5883321915470986E-6	DEFECT
/* -a */	WITHOUT_CLASSIFICATION	0.9999589872535947	WITHOUT_CLASSIFICATION	4.1012746405304744E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999675172071433	WITHOUT_CLASSIFICATION	3.2482792856694074E-5	DEFECT
/* -n */	WITHOUT_CLASSIFICATION	0.9998950724561503	WITHOUT_CLASSIFICATION	1.049275438496465E-4	DEFECT
/* -n */	WITHOUT_CLASSIFICATION	0.9998950724561503	WITHOUT_CLASSIFICATION	1.049275438496465E-4	DEFECT
/* -f */	WITHOUT_CLASSIFICATION	0.999906668602216	WITHOUT_CLASSIFICATION	9.333139778388499E-5	DEFECT
/* -t */	WITHOUT_CLASSIFICATION	0.9999288601696382	WITHOUT_CLASSIFICATION	7.113983036183219E-5	DEFECT
/* -v */	WITHOUT_CLASSIFICATION	0.9999372229625251	WITHOUT_CLASSIFICATION	6.277703747485248E-5	DEFECT
//We have to create a unlocked label first	WITHOUT_CLASSIFICATION	0.9999378868178395	WITHOUT_CLASSIFICATION	6.211318216050606E-5	DEFECT
//Now lock if required	WITHOUT_CLASSIFICATION	0.9958118636843116	WITHOUT_CLASSIFICATION	0.00418813631568833	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999675172071433	WITHOUT_CLASSIFICATION	3.2482792856694074E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999675172071433	WITHOUT_CLASSIFICATION	3.2482792856694074E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999675172071433	WITHOUT_CLASSIFICATION	3.2482792856694074E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999675172071433	WITHOUT_CLASSIFICATION	3.2482792856694074E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc // CheckStyle:MemberNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9999918441846295	WITHOUT_CLASSIFICATION	8.155815370492086E-6	DEFECT
// CheckStyle:MemberNameCheck ON // CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999879057467134	WITHOUT_CLASSIFICATION	1.2094253286639807E-5	DEFECT
// Massage PCLI lvf output transforming '\' to '/' so get command works appropriately	WITHOUT_CLASSIFICATION	0.9999854898807105	WITHOUT_CLASSIFICATION	1.4510119289566718E-5	DEFECT
//Read back the label spec from perforce, //Replace Options //Submit back to Perforce	WITHOUT_CLASSIFICATION	0.9999542080982646	WITHOUT_CLASSIFICATION	4.5791901735348E-5	DEFECT
//when running labelsync, if view elements are in sync, //Perforce produces a line of output //looking like this one : //error: //depot/file2 - label in sync.	WITHOUT_CLASSIFICATION	0.9998341902253337	WITHOUT_CLASSIFICATION	1.6580977466634157E-4	DEFECT
//sync says "error:" when a file is up-to-date	WITHOUT_CLASSIFICATION	0.9997714246749676	WITHOUT_CLASSIFICATION	2.285753250325499E-4	DEFECT
//sometimes there's "info1:	WITHOUT_CLASSIFICATION	0.9998496949446225	WITHOUT_CLASSIFICATION	1.5030505537754637E-4	DEFECT
//P4 runtime directives	WITHOUT_CLASSIFICATION	0.9999312380138415	WITHOUT_CLASSIFICATION	6.876198615852247E-5	DEFECT
// Perforce task directives	WITHOUT_CLASSIFICATION	0.9999965053287317	WITHOUT_CLASSIFICATION	3.4946712682185147E-6	DEFECT
//P4 g-opts and cmd opts (rtfm)	WITHOUT_CLASSIFICATION	0.9999875956191553	WITHOUT_CLASSIFICATION	1.2404380844753148E-5	DEFECT
//Setters called by Ant	WITHOUT_CLASSIFICATION	0.999991015399185	WITHOUT_CLASSIFICATION	8.984600814988216E-6	DEFECT
//Get default P4 settings from environment - Mark would have done something cool with //introspection here.....:-)	WITHOUT_CLASSIFICATION	0.9892098152782915	WITHOUT_CLASSIFICATION	0.01079018472170844	DEFECT
// reset error flags before executing the command	WITHOUT_CLASSIFICATION	0.9995181754128007	WITHOUT_CLASSIFICATION	4.8182458719915746E-4	DEFECT
//Check API for these - it's how CVS does it...	WITHOUT_CLASSIFICATION	0.9995632997163324	WITHOUT_CLASSIFICATION	4.367002836677021E-4	DEFECT
/*     * Constant for the PCLI listversionedfiles recursive i a format "get" understands     */	WITHOUT_CLASSIFICATION	0.9999991826026887	WITHOUT_CLASSIFICATION	8.173973112740594E-7	DEFECT
// private static final String PCLI_LVF_ARGS = "lvf -z -aw";	WITHOUT_CLASSIFICATION	0.9999985386810905	WITHOUT_CLASSIFICATION	1.461318909562271E-6	DEFECT
// Check workspace exists // Launch PCLI listversionedfiles -z -aw // Capture output // build the command line from what we got the format is	WITHOUT_CLASSIFICATION	0.9999995822205454	WITHOUT_CLASSIFICATION	4.1777945455583705E-7	DEFECT
// default pvcs project is "/"	WITHOUT_CLASSIFICATION	0.9999985380924098	WITHOUT_CLASSIFICATION	1.4619075901850421E-6	DEFECT
// Create folders in workspace	WITHOUT_CLASSIFICATION	0.999971390052743	WITHOUT_CLASSIFICATION	2.860994725688414E-5	DEFECT
// Launch get on output captured from PCLI lvf	WITHOUT_CLASSIFICATION	0.9999602305215411	WITHOUT_CLASSIFICATION	3.976947845898133E-5	DEFECT
// Extract the name of the directory from the filename	WITHOUT_CLASSIFICATION	0.9999353742815767	WITHOUT_CLASSIFICATION	6.46257184231785E-5	DEFECT
// Change these through their GET and SET methods.	WITHOUT_CLASSIFICATION	0.999993699576205	WITHOUT_CLASSIFICATION	6.3004237949236975E-6	DEFECT
// These fields deal with includes and excludes	WITHOUT_CLASSIFICATION	0.9999931196654179	WITHOUT_CLASSIFICATION	6.880334582014456E-6	DEFECT
// Check all of the properties that are required.	WITHOUT_CLASSIFICATION	0.9991416886724901	WITHOUT_CLASSIFICATION	8.583113275099127E-4	DEFECT
// Check to see if the target directory exists.	WITHOUT_CLASSIFICATION	0.9999872673904702	WITHOUT_CLASSIFICATION	1.2732609529840925E-5	DEFECT
// Search the items on this server.	WITHOUT_CLASSIFICATION	0.9999758634313376	WITHOUT_CLASSIFICATION	2.4136568662439665E-5	DEFECT
// Disconnect from the server.	WITHOUT_CLASSIFICATION	0.9999511972177474	WITHOUT_CLASSIFICATION	4.880278225267537E-5	DEFECT
// Tell how many files were checked out.	WITHOUT_CLASSIFICATION	0.9998050108824704	WITHOUT_CLASSIFICATION	1.9498911752951982E-4	DEFECT
// Optional; logOn() connects if necessary.	WITHOUT_CLASSIFICATION	0.9999972036913772	WITHOUT_CLASSIFICATION	2.796308622830952E-6	DEFECT
// Logon using specified user name and password.	WITHOUT_CLASSIFICATION	0.9999883366890867	WITHOUT_CLASSIFICATION	1.1663310913232648E-5	DEFECT
// We always display the ItemID (OBJECT_ID) and primary descriptor.	WITHOUT_CLASSIFICATION	0.9999985200994574	WITHOUT_CLASSIFICATION	1.4799005424618213E-6	DEFECT
//If a working directory was specified then add it to the command line	WITHOUT_CLASSIFICATION	0.9984267429951305	WITHOUT_CLASSIFICATION	0.001573257004869528	DEFECT
// Checking for "\ // or           "/ // or           "X:\...	WITHOUT_CLASSIFICATION	0.9994602578960068	WITHOUT_CLASSIFICATION	5.397421039932876E-4	DEFECT
// If we find a "file" attribute then act on a file otherwise act on a project	WITHOUT_CLASSIFICATION	0.9999698326009253	WITHOUT_CLASSIFICATION	3.016739907462622E-5	DEFECT
// after you are all of the properties are ok, do your thing // with StarTeam.  If there are any kind of exceptions then // send the message to the project log.	WITHOUT_CLASSIFICATION	0.9993861563408232	WITHOUT_CLASSIFICATION	6.138436591768519E-4	DEFECT
// For performance reasons, it is important to pre-fetch all the // properties we'll need for all the items we'll be searching.	WITHOUT_CLASSIFICATION	0.9999826358306015	WITHOUT_CLASSIFICATION	1.7364169398452732E-5	DEFECT
// We'll need this item type's primary descriptor.	WITHOUT_CLASSIFICATION	0.9999910955647483	WITHOUT_CLASSIFICATION	8.904435251663187E-6	DEFECT
// Does this item type have a secondary descriptor? // If so, we'll need it.	WITHOUT_CLASSIFICATION	0.999993732063986	WITHOUT_CLASSIFICATION	6.2679360139428305E-6	DEFECT
// Now, build an array of the property names.	WITHOUT_CLASSIFICATION	0.9999046085869906	WITHOUT_CLASSIFICATION	9.539141300931437E-5	DEFECT
// Pre-fetch the item properties and cache them.	WITHOUT_CLASSIFICATION	0.9999867444766685	WITHOUT_CLASSIFICATION	1.325552333146563E-5	DEFECT
// Now, search for items in the selected folder.	WITHOUT_CLASSIFICATION	0.999993871151656	WITHOUT_CLASSIFICATION	6.128848343908822E-6	DEFECT
// Free up the memory used by the cached items.	WITHOUT_CLASSIFICATION	0.9999944744920848	WITHOUT_CLASSIFICATION	5.525507915307084E-6	DEFECT
// convert whatever separator char is in starteam to that of the target system.	WITHOUT_CLASSIFICATION	0.9999512838191262	WITHOUT_CLASSIFICATION	4.8716180873741493E-5	DEFECT
// If it ends with separator then strip it off	WITHOUT_CLASSIFICATION	0.9999427627284307	WITHOUT_CLASSIFICATION	5.723727156932819E-5	DEFECT
// Replace the projectName in the file's absolute path to the viewName. // This makes the root target of a checkout operation equal to: // targetFolder + dirName	WITHOUT_CLASSIFICATION	0.9998876425000142	WITHOUT_CLASSIFICATION	1.1235749998580434E-4	DEFECT
// only want to do this the first time	WITHOUT_CLASSIFICATION	0.99991171956019	WITHOUT_CLASSIFICATION	8.828043980996613E-5	DEFECT
// Process all items in this folder.	WITHOUT_CLASSIFICATION	0.9999936738544516	WITHOUT_CLASSIFICATION	6.3261455484535225E-6	DEFECT
// Process all subfolders recursively if recursion is on.	WITHOUT_CLASSIFICATION	0.9999906324618145	WITHOUT_CLASSIFICATION	9.367538185454808E-6	DEFECT
// Get descriptors for this item type.	WITHOUT_CLASSIFICATION	0.9999665360307696	WITHOUT_CLASSIFICATION	3.346396923039462E-5	DEFECT
// VERBOSE MODE ONLY	WITHOUT_CLASSIFICATION	0.9998559157562777	WITHOUT_CLASSIFICATION	1.4408424372218861E-4	DEFECT
// Show folder only if changed.	WITHOUT_CLASSIFICATION	0.9996674326370544	WITHOUT_CLASSIFICATION	3.325673629455801E-4	DEFECT
// Show if the file is locked.	WITHOUT_CLASSIFICATION	0.9999639323481865	WITHOUT_CLASSIFICATION	3.606765181358979E-5	DEFECT
// END VERBOSE ONLY	WITHOUT_CLASSIFICATION	0.9997093216487368	WITHOUT_CLASSIFICATION	2.906783512631596E-4	DEFECT
// add -command CheckOutFile to the commandline	WITHOUT_CLASSIFICATION	0.99998858114477	WITHOUT_CLASSIFICATION	1.141885522999467E-5	DEFECT
// Finally, show the Item properties ... // Always show the ItemID.	WITHOUT_CLASSIFICATION	0.9980518272960885	WITHOUT_CLASSIFICATION	0.0019481727039115204	DEFECT
// Show the primary descriptor. // There should always be one.	WITHOUT_CLASSIFICATION	0.9991635355935882	WITHOUT_CLASSIFICATION	8.364644064117409E-4	DEFECT
// Show the secondary descriptor, if there is one. // Some item types have one, some don't.	WITHOUT_CLASSIFICATION	0.999893473170196	WITHOUT_CLASSIFICATION	1.0652682980400569E-4	DEFECT
// Change the item to be checked out to a StarTeam File.	WITHOUT_CLASSIFICATION	0.9999955584271473	WITHOUT_CLASSIFICATION	4.441572852732525E-6	DEFECT
// The local file name is simply the local target path (tgt) which has // been passed recursively down from the top of the tree, with the item's name appended.	WITHOUT_CLASSIFICATION	0.9999831206643788	WITHOUT_CLASSIFICATION	1.6879335621261213E-5	DEFECT
// Begin SET and GET methods	WITHOUT_CLASSIFICATION	0.9999956440646378	WITHOUT_CLASSIFICATION	4.355935362176939E-6	DEFECT
// Begin filter getters and setters	WITHOUT_CLASSIFICATION	0.9999896417596639	WITHOUT_CLASSIFICATION	1.0358240336037265E-5	DEFECT
// Check if need to set the loader	WITHOUT_CLASSIFICATION	0.9999902047428584	WITHOUT_CLASSIFICATION	9.795257141583248E-6	DEFECT
// Now create the scriptRunner	WITHOUT_CLASSIFICATION	0.9999937210348209	WITHOUT_CLASSIFICATION	6.278965179183981E-6	DEFECT
// find the script repository - it is stored in the project	WITHOUT_CLASSIFICATION	0.9998874126297288	WITHOUT_CLASSIFICATION	1.1258737027117568E-4	DEFECT
/*            // try the context classloader            ClassLoader loader                = Thread.currentThread().getContextClassLoader();            */	WITHOUT_CLASSIFICATION	0.9999984006428446	WITHOUT_CLASSIFICATION	1.5993571553985982E-6	DEFECT
// If we find a "file" attribute then act on a file otherwise act on a project	WITHOUT_CLASSIFICATION	0.9999698326009253	WITHOUT_CLASSIFICATION	3.016739907462622E-5	DEFECT
// add -command CheckInFile to the commandline	WITHOUT_CLASSIFICATION	0.9999923552824889	WITHOUT_CLASSIFICATION	7.64471751108715E-6	DEFECT
// add -file xxxxx to the commandline	WITHOUT_CLASSIFICATION	0.999989563029261	WITHOUT_CLASSIFICATION	1.0436970738932512E-5	DEFECT
// add -file xxxxx to the commandline	WITHOUT_CLASSIFICATION	0.999989563029261	WITHOUT_CLASSIFICATION	1.0436970738932512E-5	DEFECT
// add -command CheckInProject to the commandline	WITHOUT_CLASSIFICATION	0.9999924528943042	WITHOUT_CLASSIFICATION	7.547105695814251E-6	DEFECT
// look for a recursive option	WITHOUT_CLASSIFICATION	0.999994280253405	WITHOUT_CLASSIFICATION	5.719746595059295E-6	DEFECT
// look for a recursive option	WITHOUT_CLASSIFICATION	0.999994280253405	WITHOUT_CLASSIFICATION	5.719746595059295E-6	DEFECT
// Look for a comment	WITHOUT_CLASSIFICATION	0.9999920231343558	WITHOUT_CLASSIFICATION	7.97686564416079E-6	DEFECT
// soscmd Command options	WITHOUT_CLASSIFICATION	0.9999989276738859	WITHOUT_CLASSIFICATION	1.0723261140343459E-6	DEFECT
// soscmd Option flags	WITHOUT_CLASSIFICATION	0.9998397909123999	WITHOUT_CLASSIFICATION	1.6020908760010005E-4	DEFECT
// add -command GetFile to the commandline	WITHOUT_CLASSIFICATION	0.9999915746172521	WITHOUT_CLASSIFICATION	8.425382747924468E-6	DEFECT
// look for a version attribute	WITHOUT_CLASSIFICATION	0.9999889015859238	WITHOUT_CLASSIFICATION	1.1098414076211126E-5	DEFECT
//add -revision xxxxx to the commandline	WITHOUT_CLASSIFICATION	0.999913595485078	WITHOUT_CLASSIFICATION	8.640451492205749E-5	DEFECT
// add -command GetProject to the commandline	WITHOUT_CLASSIFICATION	0.9999923584102475	WITHOUT_CLASSIFICATION	7.641589752520231E-6	DEFECT
// look for a label option	WITHOUT_CLASSIFICATION	0.9999926549341158	WITHOUT_CLASSIFICATION	7.3450658841749315E-6	DEFECT
// make sure localDir exists, create it if it doesn't	WITHOUT_CLASSIFICATION	0.9999890452019601	WITHOUT_CLASSIFICATION	1.0954798039938515E-5	DEFECT
// This is the exit status	WITHOUT_CLASSIFICATION	0.9996103449843099	WITHOUT_CLASSIFICATION	3.8965501569001925E-4	DEFECT
// Use the OS VM launcher so we get environment variables	WITHOUT_CLASSIFICATION	0.9999942546211199	WITHOUT_CLASSIFICATION	5.745378880051939E-6	DEFECT
// Get the path to the soscmd(.exe)	WITHOUT_CLASSIFICATION	0.999983343267234	WITHOUT_CLASSIFICATION	1.66567327659503E-5	DEFECT
// SOS server address is required	WITHOUT_CLASSIFICATION	0.9996838304449894	WITHOUT_CLASSIFICATION	3.161695550105149E-4	DEFECT
// VSS Info is required	WITHOUT_CLASSIFICATION	0.9994170132851543	WITHOUT_CLASSIFICATION	5.829867148456997E-4	DEFECT
// VSS project is required	WITHOUT_CLASSIFICATION	0.9998643246442158	WITHOUT_CLASSIFICATION	1.356753557841824E-4	DEFECT
// -verbose	WITHOUT_CLASSIFICATION	0.9999820405361234	WITHOUT_CLASSIFICATION	1.795946387660522E-5	DEFECT
// Disable Compression	WITHOUT_CLASSIFICATION	0.9999957754889732	WITHOUT_CLASSIFICATION	4.224511026800174E-6	DEFECT
// If -soshome was not specified then we can look for nocache	WITHOUT_CLASSIFICATION	0.999980719458212	WITHOUT_CLASSIFICATION	1.928054178793373E-5	DEFECT
// Ignore Exception	WITHOUT_CLASSIFICATION	0.9999271611205274	WITHOUT_CLASSIFICATION	7.283887947267933E-5	DEFECT
// look for a recursive option	WITHOUT_CLASSIFICATION	0.999994280253405	WITHOUT_CLASSIFICATION	5.719746595059295E-6	DEFECT
// Look for a comment	WITHOUT_CLASSIFICATION	0.9999920231343558	WITHOUT_CLASSIFICATION	7.97686564416079E-6	DEFECT
// -verbose	WITHOUT_CLASSIFICATION	0.9999820405361234	WITHOUT_CLASSIFICATION	1.795946387660522E-5	DEFECT
// The SOS class knows that the SOS server needs the password flag, // even if there is no password ,so we send a " "	WITHOUT_CLASSIFICATION	0.9985862889942232	WITHOUT_CLASSIFICATION	0.0014137110057767927	DEFECT
// add -command CheckOutProject to the commandline	WITHOUT_CLASSIFICATION	0.9999900170938177	WITHOUT_CLASSIFICATION	9.982906182305736E-6	DEFECT
// add -command AddLabel to the commandline	WITHOUT_CLASSIFICATION	0.9999945174431595	WITHOUT_CLASSIFICATION	5.4825568405295175E-6	DEFECT
// a label is required	WITHOUT_CLASSIFICATION	0.999971642870472	WITHOUT_CLASSIFICATION	2.835712952805609E-5	DEFECT
// get the list of files in the dir	WITHOUT_CLASSIFICATION	0.9999477297854356	WITHOUT_CLASSIFICATION	5.227021456438201E-5	DEFECT
// get a random number between 0 and the number of files	WITHOUT_CLASSIFICATION	0.9999972488206235	WITHOUT_CLASSIFICATION	2.7511793765946995E-6	DEFECT
// set the source to the file at that location	WITHOUT_CLASSIFICATION	0.9999749642317461	WITHOUT_CLASSIFICATION	2.503576825386829E-5	DEFECT
// Empty block	WITHOUT_CLASSIFICATION	0.9999132693492799	WITHOUT_CLASSIFICATION	8.673065072008904E-5	DEFECT
//System.exit(0);	WITHOUT_CLASSIFICATION	0.9999063369337359	WITHOUT_CLASSIFICATION	9.366306626409684E-5	DEFECT
// build successfull!	WITHOUT_CLASSIFICATION	0.9999838375082691	WITHOUT_CLASSIFICATION	1.616249173089152E-5	DEFECT
/*AbstractSshMessage*/	WITHOUT_CLASSIFICATION	0.9999772125997709	WITHOUT_CLASSIFICATION	2.2787400229092856E-5	DEFECT
// dir does not exist.	WITHOUT_CLASSIFICATION	0.9999787367888477	WITHOUT_CLASSIFICATION	2.1263211152199888E-5	DEFECT
// only track progress for files larger than 100kb in verbose mode	WITHOUT_CLASSIFICATION	0.9999827551787452	WITHOUT_CLASSIFICATION	1.7244821254699577E-5	DEFECT
// get I/O streams for remote scp	WITHOUT_CLASSIFICATION	0.9999707200325734	WITHOUT_CLASSIFICATION	2.9279967426620166E-5	DEFECT
// this indicates an error.	WITHOUT_CLASSIFICATION	0.9999830252865894	WITHOUT_CLASSIFICATION	1.6974713410537094E-5	DEFECT
// appears that the next token is not used and it's zero.	WITHOUT_CLASSIFICATION	0.9999623115220472	WITHOUT_CLASSIFICATION	3.7688477952823805E-5	DEFECT
// read a content of lfile	WITHOUT_CLASSIFICATION	0.9999841151192939	WITHOUT_CLASSIFICATION	1.588488070610223E-5	DEFECT
// Ignored	WITHOUT_CLASSIFICATION	0.9999093576785884	WITHOUT_CLASSIFICATION	9.064232141158736E-5	DEFECT
// do nothing;	WITHOUT_CLASSIFICATION	0.9999156345698157	WITHOUT_CLASSIFICATION	8.43654301843308E-5	DEFECT
// didn't receive any response	WITHOUT_CLASSIFICATION	0.9999737371188174	WITHOUT_CLASSIFICATION	2.6262881182563054E-5	DEFECT
// execute the command	WITHOUT_CLASSIFICATION	0.9999785406286965	WITHOUT_CLASSIFICATION	2.145937130347776E-5	DEFECT
// wait for it to finish	WITHOUT_CLASSIFICATION	0.9999900642309651	WITHOUT_CLASSIFICATION	9.935769034918909E-6	DEFECT
// ran out of time	WITHOUT_CLASSIFICATION	0.9999692567593396	WITHOUT_CLASSIFICATION	3.07432406604358E-5	DEFECT
// completed successfully	WITHOUT_CLASSIFICATION	0.9999990231078251	WITHOUT_CLASSIFICATION	9.76892174986405E-7	DEFECT
// user:password@host:/path notation	WITHOUT_CLASSIFICATION	0.9997740523147414	WITHOUT_CLASSIFICATION	2.259476852585613E-4	DEFECT
// no password, will require passphrase	WITHOUT_CLASSIFICATION	0.9995363421377345	WITHOUT_CLASSIFICATION	4.63657862265416E-4	DEFECT
// skip	WITHOUT_CLASSIFICATION	0.999944730584584	WITHOUT_CLASSIFICATION	5.526941541606592E-5	DEFECT
// send "C0644 filesize filename", where filename should not include '/'	WITHOUT_CLASSIFICATION	0.9999948299840162	WITHOUT_CLASSIFICATION	5.170015983753894E-6	DEFECT
// send a content of lfile	WITHOUT_CLASSIFICATION	0.9999836537239359	WITHOUT_CLASSIFICATION	1.6346276064119124E-5	DEFECT
// C0644 filesize filename - header for a regular file // T time 0 time 0\n - present if perserve time. // D directory - this is the header for a directory.	WITHOUT_CLASSIFICATION	0.9999904202534459	WITHOUT_CLASSIFICATION	9.579746554035198E-6	DEFECT
// swallow if there was an error before so that // original error will be passed up	WITHOUT_CLASSIFICATION	0.999809311937399	WITHOUT_CLASSIFICATION	1.9068806260104823E-4	DEFECT
// since filesize keeps on decreasing we have to store the // initial filesize	WITHOUT_CLASSIFICATION	0.9999947625851628	WITHOUT_CLASSIFICATION	5.23741483716889E-6	DEFECT
// b may be 0 for success, //          1 for error, //          2 for fatal error,	WITHOUT_CLASSIFICATION	0.9999972222316095	WITHOUT_CLASSIFICATION	2.777768390517637E-6	DEFECT
// like <exec> // like <exec> // like <exec>	WITHOUT_CLASSIFICATION	0.9999770170499528	WITHOUT_CLASSIFICATION	2.2982950047236297E-5	DEFECT
//log(message, Project.MSG_DEBUG);	WITHOUT_CLASSIFICATION	0.9999923915511729	WITHOUT_CLASSIFICATION	7.608448827112053E-6	DEFECT
// we want this to have a false default, unlike for Checkin.	WITHOUT_CLASSIFICATION	0.9999982886139417	WITHOUT_CLASSIFICATION	1.7113860582951546E-6	DEFECT
// If the file doesn't pass the include/exclude tests, skip it.	WITHOUT_CLASSIFICATION	0.9999989949184538	WITHOUT_CLASSIFICATION	1.0050815461228358E-6	DEFECT
// We try to update the status once to give StarTeam // another chance.	WITHOUT_CLASSIFICATION	0.99999519152811	WITHOUT_CLASSIFICATION	4.808471889926385E-6	DEFECT
// once we find a folder that isn't in the repository, // we know we can add it.	WITHOUT_CLASSIFICATION	0.9999853027938942	WITHOUT_CLASSIFICATION	1.4697206105801786E-5	DEFECT
// once we find a folder that isn't in the repository, // we know we can add it.	WITHOUT_CLASSIFICATION	0.9999853027938942	WITHOUT_CLASSIFICATION	1.4697206105801786E-5	DEFECT
// if a label has been supplied, use it to configure the view // otherwise use current view	WITHOUT_CLASSIFICATION	0.9999663825316868	WITHOUT_CLASSIFICATION	3.3617468313178296E-5	DEFECT
// if a date has been supplied use a view configured to the date.	WITHOUT_CLASSIFICATION	0.999994067899622	WITHOUT_CLASSIFICATION	5.932100378044774E-6	DEFECT
// if a date has been supplied use a view configured to the date.	WITHOUT_CLASSIFICATION	0.999994067899622	WITHOUT_CLASSIFICATION	5.932100378044774E-6	DEFECT
// otherwise, use this view configured as the tip.	WITHOUT_CLASSIFICATION	0.9999901801459439	WITHOUT_CLASSIFICATION	9.819854056059017E-6	DEFECT
// otherwise, use this view configured as the tip.	WITHOUT_CLASSIFICATION	0.9999901801459439	WITHOUT_CLASSIFICATION	9.819854056059017E-6	DEFECT
// For all Files in this folder, we need to check // if there have been modifications.	WITHOUT_CLASSIFICATION	0.9997145349912601	WITHOUT_CLASSIFICATION	2.854650087399704E-4	DEFECT
// Now we recursively call this method on all sub folders in this // folder unless recursive attribute is off.	WITHOUT_CLASSIFICATION	0.9999728138026479	WITHOUT_CLASSIFICATION	2.7186197352173693E-5	DEFECT
// handle the files so they appear first	WITHOUT_CLASSIFICATION	0.9999896060339766	WITHOUT_CLASSIFICATION	1.0393966023531256E-5	DEFECT
// now do it again for the directories so they appear last.	WITHOUT_CLASSIFICATION	0.9999708191268187	WITHOUT_CLASSIFICATION	2.9180873181231993E-5	DEFECT
// Create the new label and update the repository	WITHOUT_CLASSIFICATION	0.999997236458563	WITHOUT_CLASSIFICATION	2.7635414368976485E-6	DEFECT
// write a Properties file in each directory:	WITHOUT_CLASSIFICATION	0.9998964743463945	WITHOUT_CLASSIFICATION	1.035256536055258E-4	DEFECT
// Create an instance of the rmic, redirecting output to // the project log	WITHOUT_CLASSIFICATION	0.9999918550911863	WITHOUT_CLASSIFICATION	8.144908813708436E-6	DEFECT
// CheckStyle:MethodNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9999737798051116	WITHOUT_CLASSIFICATION	2.622019488847767E-5	DEFECT
// once we find a folder that isn't in the repository, // we know we can add it.	WITHOUT_CLASSIFICATION	0.9999853027938942	WITHOUT_CLASSIFICATION	1.4697206105801786E-5	DEFECT
//ATTRIBUTES settable from ant.	WITHOUT_CLASSIFICATION	0.9999586169109975	WITHOUT_CLASSIFICATION	4.13830890025392E-5	DEFECT
// if a label has been supplied and it is a view label, use it // to configure the view	WITHOUT_CLASSIFICATION	0.9999951534866788	WITHOUT_CLASSIFICATION	4.846513321256537E-6	DEFECT
// if a label has been supplied and it is a revision label, use the raw // the view as the snapshot	WITHOUT_CLASSIFICATION	0.9999907357542732	WITHOUT_CLASSIFICATION	9.264245726780852E-6	DEFECT
// prune away any files not belonging to the revision label // this is one ugly API from Starteam SDK	WITHOUT_CLASSIFICATION	0.9997804581252031	WITHOUT_CLASSIFICATION	2.1954187479687512E-4	DEFECT
// PR 31965 says that it can return null	WITHOUT_CLASSIFICATION	0.9999952351915156	WITHOUT_CLASSIFICATION	4.764808484443518E-6	DEFECT
// no root local mapping has been specified.	WITHOUT_CLASSIFICATION	0.999920897750473	WITHOUT_CLASSIFICATION	7.910224952704021E-5	DEFECT
// Inspect everything in the root folder and then recursively	WITHOUT_CLASSIFICATION	0.9998070227666	WITHOUT_CLASSIFICATION	1.9297723339993192E-4	DEFECT
// Tell user what he is doing	WITHOUT_CLASSIFICATION	0.9999116695819786	WITHOUT_CLASSIFICATION	8.833041802136769E-5	DEFECT
// set the local folder.	WITHOUT_CLASSIFICATION	0.9999779995250712	WITHOUT_CLASSIFICATION	2.20004749288427E-5	DEFECT
// set the local folder.	WITHOUT_CLASSIFICATION	0.9999779995250712	WITHOUT_CLASSIFICATION	2.20004749288427E-5	DEFECT
// ATTRIBUTES	WITHOUT_CLASSIFICATION	0.9999390596538719	WITHOUT_CLASSIFICATION	6.094034612821943E-5	DEFECT
// create a hashtable to group them by parent directory:	WITHOUT_CLASSIFICATION	0.9999197772389907	WITHOUT_CLASSIFICATION	8.022276100937358E-5	DEFECT
// else lnk exists, do nothing	WITHOUT_CLASSIFICATION	0.9999806390198277	WITHOUT_CLASSIFICATION	1.9360980172366565E-5	DEFECT
// get an Iterator of file objects representing links (canonical):	WITHOUT_CLASSIFICATION	0.999986834012623	WITHOUT_CLASSIFICATION	1.316598737710639E-5	DEFECT
//iterate through the names, get the matching values	WITHOUT_CLASSIFICATION	0.9999976392733114	WITHOUT_CLASSIFICATION	2.3607266886070663E-6	DEFECT
/////////////////////////////////////////////////////////////// // GET/SET methods. // Setters, of course are where ant user passes in values. ///////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999959626998974	WITHOUT_CLASSIFICATION	4.037300102521295E-6	DEFECT
/////////////////////////////////////////////////////////////// // INCLUDE-EXCLUDE processing ///////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999964439253919	WITHOUT_CLASSIFICATION	3.5560746081367017E-6	DEFECT
// find the starteam folder specified to be the root of the // operation.  Throw if it can't be found.	WITHOUT_CLASSIFICATION	0.998830374004528	WITHOUT_CLASSIFICATION	0.0011696259954719378	DEFECT
// either use default path or root local mapping, // which is now embedded in the root folder	WITHOUT_CLASSIFICATION	0.9999869676222635	WITHOUT_CLASSIFICATION	1.3032377736619337E-5	DEFECT
///////////////////////////////////////////////////////// // GET/SET methods. // Setters, of course are where ant user passes in values. /////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999959626998974	WITHOUT_CLASSIFICATION	4.037300102521295E-6	DEFECT
// fill up a Properties object with link and resource names:	WITHOUT_CLASSIFICATION	0.9999904679578441	WITHOUT_CLASSIFICATION	9.532042155960464E-6	DEFECT
// find the resource of the existing link:	WITHOUT_CLASSIFICATION	0.9999550383781405	WITHOUT_CLASSIFICATION	4.496162185959605E-5	DEFECT
// rename the resource, thus breaking the link:	WITHOUT_CLASSIFICATION	0.9999860121394615	WITHOUT_CLASSIFICATION	1.398786053848146E-5	DEFECT
// delete the (now) broken link:	WITHOUT_CLASSIFICATION	0.9997961791237633	WITHOUT_CLASSIFICATION	2.0382087623685443E-4	DEFECT
// return the resource to its original name:	WITHOUT_CLASSIFICATION	0.9999868515964124	WITHOUT_CLASSIFICATION	1.3148403587682759E-5	DEFECT
// loop through the supplied file sets:	WITHOUT_CLASSIFICATION	0.9999719615503163	WITHOUT_CLASSIFICATION	2.8038449683806608E-5	DEFECT
// load included files as properties files:	WITHOUT_CLASSIFICATION	0.999995322685542	WITHOUT_CLASSIFICATION	4.677314457964706E-6	DEFECT
// -GL	WITHOUT_CLASSIFICATION	0.9999325211568157	WITHOUT_CLASSIFICATION	6.747884318423074E-5	DEFECT
// -GL	WITHOUT_CLASSIFICATION	0.9999325211568157	WITHOUT_CLASSIFICATION	6.747884318423074E-5	DEFECT
// -I- or -I-Y or -I-N	WITHOUT_CLASSIFICATION	0.9999211880014972	WITHOUT_CLASSIFICATION	7.881199850274124E-5	DEFECT
// -I- or -I-Y or -I-N	WITHOUT_CLASSIFICATION	0.9999211880014972	WITHOUT_CLASSIFICATION	7.881199850274124E-5	DEFECT
// -O-	WITHOUT_CLASSIFICATION	0.9998635969481028	WITHOUT_CLASSIFICATION	1.3640305189720537E-4	DEFECT
// -R	WITHOUT_CLASSIFICATION	0.9999349265868295	WITHOUT_CLASSIFICATION	6.507341317049314E-5	DEFECT
// -R	WITHOUT_CLASSIFICATION	0.9999349265868295	WITHOUT_CLASSIFICATION	6.507341317049314E-5	DEFECT
// -V	WITHOUT_CLASSIFICATION	0.9998728949925391	WITHOUT_CLASSIFICATION	1.2710500746092776E-4	DEFECT
// -W	WITHOUT_CLASSIFICATION	0.9998956597060316	WITHOUT_CLASSIFICATION	1.0434029396846194E-4	DEFECT
// -W	WITHOUT_CLASSIFICATION	0.9998956597060316	WITHOUT_CLASSIFICATION	1.0434029396846194E-4	DEFECT
// -Y	WITHOUT_CLASSIFICATION	0.9999208700131987	WITHOUT_CLASSIFICATION	7.912998680126565E-5	DEFECT
// -Y	WITHOUT_CLASSIFICATION	0.9999208700131987	WITHOUT_CLASSIFICATION	7.912998680126565E-5	DEFECT
// -G	WITHOUT_CLASSIFICATION	0.9999144245830535	WITHOUT_CLASSIFICATION	8.557541694652648E-5	DEFECT
// -GWS or -GWR	WITHOUT_CLASSIFICATION	0.9999510928257194	WITHOUT_CLASSIFICATION	4.8907174280583974E-5	DEFECT
//set to empty str if no local path return	WITHOUT_CLASSIFICATION	0.9999692948963788	WITHOUT_CLASSIFICATION	3.070510362126827E-5	DEFECT
//make sure m_LocalDir exists, create it if it doesn't	WITHOUT_CLASSIFICATION	0.9999795690781931	WITHOUT_CLASSIFICATION	2.0430921806868856E-5	DEFECT
// Use the OS launcher so we get environment variables	WITHOUT_CLASSIFICATION	0.9999974790961275	WITHOUT_CLASSIFICATION	2.5209038725460965E-6	DEFECT
// VSS items	WITHOUT_CLASSIFICATION	0.9999671044808934	WITHOUT_CLASSIFICATION	3.289551910652203E-5	DEFECT
// VSS items	WITHOUT_CLASSIFICATION	0.9999671044808934	WITHOUT_CLASSIFICATION	3.289551910652203E-5	DEFECT
// -C	WITHOUT_CLASSIFICATION	0.9999355416570279	WITHOUT_CLASSIFICATION	6.445834297206047E-5	DEFECT
// -C	WITHOUT_CLASSIFICATION	0.9999355416570279	WITHOUT_CLASSIFICATION	6.445834297206047E-5	DEFECT
// -L Specify the new label on the command line (instead of being prompted)	WITHOUT_CLASSIFICATION	0.9999986348898956	WITHOUT_CLASSIFICATION	1.3651101043793931E-6	DEFECT
// -V Label an existing file or project version	WITHOUT_CLASSIFICATION	0.9999982697192329	WITHOUT_CLASSIFICATION	1.7302807672003366E-6	DEFECT
// first off, make sure that we've got a command and a vssdir ...	WITHOUT_CLASSIFICATION	0.9999829363883258	WITHOUT_CLASSIFICATION	1.7063611674220974E-5	DEFECT
// pre Kaffe 1.1.5	WITHOUT_CLASSIFICATION	0.9999667759259708	WITHOUT_CLASSIFICATION	3.3224074029181045E-5	DEFECT
// -GL	WITHOUT_CLASSIFICATION	0.9999325211568157	WITHOUT_CLASSIFICATION	6.747884318423074E-5	DEFECT
// Write the contents to our master list of links // This method assumes that all links are defined in // terms of absolute paths, or paths relative to the // working directory:	WITHOUT_CLASSIFICATION	0.9991332492504427	WITHOUT_CLASSIFICATION	8.667507495573361E-4	DEFECT
// build the command line from what we got the format is // ss Get VSS items [-G] [-H] [-I-] [-N] [-O] [-R] [-V] [-W] [-Y] [-?] // as specified in the SS.EXE help	WITHOUT_CLASSIFICATION	0.9999966752501521	WITHOUT_CLASSIFICATION	3.3247498479454093E-6	DEFECT
// -I- or -I-Y or -I-N	WITHOUT_CLASSIFICATION	0.9999211880014972	WITHOUT_CLASSIFICATION	7.881199850274124E-5	DEFECT
// -I- or -I-Y or -I-N	WITHOUT_CLASSIFICATION	0.9999211880014972	WITHOUT_CLASSIFICATION	7.881199850274124E-5	DEFECT
// -O-	WITHOUT_CLASSIFICATION	0.9998635969481028	WITHOUT_CLASSIFICATION	1.3640305189720537E-4	DEFECT
// -R	WITHOUT_CLASSIFICATION	0.9999349265868295	WITHOUT_CLASSIFICATION	6.507341317049314E-5	DEFECT
// -R	WITHOUT_CLASSIFICATION	0.9999349265868295	WITHOUT_CLASSIFICATION	6.507341317049314E-5	DEFECT
// -R	WITHOUT_CLASSIFICATION	0.9999349265868295	WITHOUT_CLASSIFICATION	6.507341317049314E-5	DEFECT
// -V	WITHOUT_CLASSIFICATION	0.9998728949925391	WITHOUT_CLASSIFICATION	1.2710500746092776E-4	DEFECT
// -W	WITHOUT_CLASSIFICATION	0.9998956597060316	WITHOUT_CLASSIFICATION	1.0434029396846194E-4	DEFECT
// -Y	WITHOUT_CLASSIFICATION	0.9999208700131987	WITHOUT_CLASSIFICATION	7.912998680126565E-5	DEFECT
// -Y	WITHOUT_CLASSIFICATION	0.9999208700131987	WITHOUT_CLASSIFICATION	7.912998680126565E-5	DEFECT
// -Y	WITHOUT_CLASSIFICATION	0.9999208700131987	WITHOUT_CLASSIFICATION	7.912998680126565E-5	DEFECT
// -G	WITHOUT_CLASSIFICATION	0.9999144245830535	WITHOUT_CLASSIFICATION	8.557541694652648E-5	DEFECT
// -GWS or -GWR	WITHOUT_CLASSIFICATION	0.9999510928257194	WITHOUT_CLASSIFICATION	4.8907174280583974E-5	DEFECT
// VSS items	WITHOUT_CLASSIFICATION	0.9999671044808934	WITHOUT_CLASSIFICATION	3.289551910652203E-5	DEFECT
// Use getShortLabel() so labels longer then 30 char are truncated // and the user is warned	WITHOUT_CLASSIFICATION	0.999999229725241	WITHOUT_CLASSIFICATION	7.702747589865046E-7	DEFECT
// ss.exe exits with '100', when files have been skipped // so we have to ignore the failure	WITHOUT_CLASSIFICATION	0.9999231893397457	WITHOUT_CLASSIFICATION	7.681066025431935E-5	DEFECT
// If location of ss.ini is specified we need to set the // environment-variable SSDIR to this value	WITHOUT_CLASSIFICATION	0.9999946013573802	WITHOUT_CLASSIFICATION	5.398642619731149E-6	DEFECT
// build the command line from what we got the format is // ss Label VSS items [-C] [-H] [-I-] [-Llabel] [-N] [-O] [-V] [-Y] [-?] // as specified in the SS.EXE help	WITHOUT_CLASSIFICATION	0.9999974144172686	WITHOUT_CLASSIFICATION	2.585582731428449E-6	DEFECT
// VSS items	WITHOUT_CLASSIFICATION	0.9999671044808934	WITHOUT_CLASSIFICATION	3.289551910652203E-5	DEFECT
// -C	WITHOUT_CLASSIFICATION	0.9999355416570279	WITHOUT_CLASSIFICATION	6.445834297206047E-5	DEFECT
// -C	WITHOUT_CLASSIFICATION	0.9999355416570279	WITHOUT_CLASSIFICATION	6.445834297206047E-5	DEFECT
// first off, make sure that we've got a command and a vssdir ...	WITHOUT_CLASSIFICATION	0.9999829363883258	WITHOUT_CLASSIFICATION	1.7063611674220974E-5	DEFECT
// first off, make sure that we've got a command and a vssdir ...	WITHOUT_CLASSIFICATION	0.9999829363883258	WITHOUT_CLASSIFICATION	1.7063611674220974E-5	DEFECT
// build the command line from what we got the format is // ss Checkin VSS items [-H] [-C] [-I-] [-N] [-O] [-R] [-W] [-Y] [-?] // as specified in the SS.EXE help	WITHOUT_CLASSIFICATION	0.9999972358894282	WITHOUT_CLASSIFICATION	2.764110571808201E-6	DEFECT
// -VL	WITHOUT_CLASSIFICATION	0.9998983408612412	WITHOUT_CLASSIFICATION	1.0165913875879717E-4	DEFECT
// -B / -D / -F-	WITHOUT_CLASSIFICATION	0.999875005342404	WITHOUT_CLASSIFICATION	1.2499465759608185E-4	DEFECT
// -O	WITHOUT_CLASSIFICATION	0.99986319157316	WITHOUT_CLASSIFICATION	1.3680842684004915E-4	DEFECT
// first off, make sure that we've got a command and a localPath ...	WITHOUT_CLASSIFICATION	0.9999806544291989	WITHOUT_CLASSIFICATION	1.9345570801002434E-5	DEFECT
// -G-	WITHOUT_CLASSIFICATION	0.9999149378783383	WITHOUT_CLASSIFICATION	8.50621216617673E-5	DEFECT
// first off, make sure that we've got a command and a vssdir...	WITHOUT_CLASSIFICATION	0.9999815579639106	WITHOUT_CLASSIFICATION	1.8442036089346047E-5	DEFECT
// build the command line from what we got // the format is: // ss Create VSS items [-C] [-H] [-I-] [-N] [-O] [-S] [-Y] [-?] // as specified in the SS.EXE help	WITHOUT_CLASSIFICATION	0.9999860622866925	WITHOUT_CLASSIFICATION	1.3937713307550752E-5	DEFECT
// pre Kaffe 1.1.2	WITHOUT_CLASSIFICATION	0.9999685725504776	WITHOUT_CLASSIFICATION	3.142744952234465E-5	DEFECT
// only supported since Kaffe 1.1.2	WITHOUT_CLASSIFICATION	0.9999905876844855	WITHOUT_CLASSIFICATION	9.412315514679598E-6	DEFECT
//handle the many different stub options.	WITHOUT_CLASSIFICATION	0.9999191823370873	WITHOUT_CLASSIFICATION	8.081766291277124E-5	DEFECT
//default is compatibility	WITHOUT_CLASSIFICATION	0.9999695462234364	WITHOUT_CLASSIFICATION	3.04537765636002E-5	DEFECT
//anything else	WITHOUT_CLASSIFICATION	0.9999422682832252	WITHOUT_CLASSIFICATION	5.773171677481525E-5	DEFECT
//do nothing with the value? or go -v+stubVersion??	WITHOUT_CLASSIFICATION	0.9998900244420064	WITHOUT_CLASSIFICATION	1.0997555799361514E-4	DEFECT
//set the non-null stubOption	WITHOUT_CLASSIFICATION	0.9997638001434973	WITHOUT_CLASSIFICATION	2.3619985650280152E-4	DEFECT
// we know that name.endsWith(".class")	WITHOUT_CLASSIFICATION	0.9999952357053613	WITHOUT_CLASSIFICATION	4.764294638676051E-6	DEFECT
// Combine the build classpath with the system classpath, in an // order determined by the value of build.sysclasspath	WITHOUT_CLASSIFICATION	0.9999824071736076	WITHOUT_CLASSIFICATION	1.7592826392380837E-5	DEFECT
// swallow	WITHOUT_CLASSIFICATION	0.9999081578705552	WITHOUT_CLASSIFICATION	9.184212944476873E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999675172071433	WITHOUT_CLASSIFICATION	3.2482792856694074E-5	DEFECT
// build the command line from what we got the format is // ss CP VSS items [-H] [-I-] [-Y] [-?] // as specified in the SS.EXE help	WITHOUT_CLASSIFICATION	0.9999970817878994	WITHOUT_CLASSIFICATION	2.918212100697942E-6	DEFECT
//for java1.5+, we generate compatible stubs, that is, unless //the caller asked for IDL or IIOP support.	WITHOUT_CLASSIFICATION	0.9999982646823145	WITHOUT_CLASSIFICATION	1.7353176854762932E-6	DEFECT
// JRMP with simple naming convention	WITHOUT_CLASSIFICATION	0.9999957443308889	WITHOUT_CLASSIFICATION	4.255669111140406E-6	DEFECT
/*                 * I know, this is not necessary, but I prefer it explicit (SB)                 */	WITHOUT_CLASSIFICATION	0.9998697662169796	WITHOUT_CLASSIFICATION	1.3023378302041692E-4	DEFECT
// no package	WITHOUT_CLASSIFICATION	0.999982570847478	WITHOUT_CLASSIFICATION	1.742915252201663E-5	DEFECT
// no package	WITHOUT_CLASSIFICATION	0.999982570847478	WITHOUT_CLASSIFICATION	1.742915252201663E-5	DEFECT
// only stub, no tie	WITHOUT_CLASSIFICATION	0.9998736149212742	WITHOUT_CLASSIFICATION	1.2638507872575087E-4	DEFECT
/*                         * stub is derived from implementation,                         * tie from interface name.                         */	WITHOUT_CLASSIFICATION	0.9999993823841282	WITHOUT_CLASSIFICATION	6.176158718399257E-7	DEFECT
//rely on RMIC being on the path	WITHOUT_CLASSIFICATION	0.9993767743617068	WITHOUT_CLASSIFICATION	6.232256382932655E-4	DEFECT
//set up the args	WITHOUT_CLASSIFICATION	0.9999918489980821	WITHOUT_CLASSIFICATION	8.151001917910577E-6	DEFECT
// Create an instance of the rmic	WITHOUT_CLASSIFICATION	0.9999960898205708	WITHOUT_CLASSIFICATION	3.910179429252381E-6	DEFECT
//convert to lower case in the English locale,	WITHOUT_CLASSIFICATION	0.9993474676361277	WITHOUT_CLASSIFICATION	6.525323638723364E-4	DEFECT
//handle default specially by choosing the sun or kaffe compiler	WITHOUT_CLASSIFICATION	0.9998632520868741	WITHOUT_CLASSIFICATION	1.367479131259471E-4	DEFECT
//no match? ask for the non-lower-cased type	WITHOUT_CLASSIFICATION	0.9999663802646833	WITHOUT_CLASSIFICATION	3.361973531669253E-5	DEFECT
//do the system assertions	WITHOUT_CLASSIFICATION	0.9998552458254708	WITHOUT_CLASSIFICATION	1.4475417452927052E-4	DEFECT
//do the system assertions	WITHOUT_CLASSIFICATION	0.9998552458254708	WITHOUT_CLASSIFICATION	1.4475417452927052E-4	DEFECT
//do the system assertions	WITHOUT_CLASSIFICATION	0.9998552458254708	WITHOUT_CLASSIFICATION	1.4475417452927052E-4	DEFECT
//now any inner assertions	WITHOUT_CLASSIFICATION	0.9999647266285795	WITHOUT_CLASSIFICATION	3.527337142046419E-5	DEFECT
//now any inner assertions	WITHOUT_CLASSIFICATION	0.9999647266285795	WITHOUT_CLASSIFICATION	3.527337142046419E-5	DEFECT
//now any inner assertions	WITHOUT_CLASSIFICATION	0.9999647266285795	WITHOUT_CLASSIFICATION	3.527337142046419E-5	DEFECT
//catch invalidness	WITHOUT_CLASSIFICATION	0.9999935399064805	WITHOUT_CLASSIFICATION	6.460093519503995E-6	DEFECT
//see if it is a package or a class	WITHOUT_CLASSIFICATION	0.999994343350064	WITHOUT_CLASSIFICATION	5.656649936027097E-6	DEFECT
//packages get a ... prefix	WITHOUT_CLASSIFICATION	0.9999460577112356	WITHOUT_CLASSIFICATION	5.394228876446152E-5	DEFECT
//append the ... suffix if not there already	WITHOUT_CLASSIFICATION	0.9995336645305449	WITHOUT_CLASSIFICATION	4.663354694551808E-4	DEFECT
//classes just get the classname	WITHOUT_CLASSIFICATION	0.9999795300711073	WITHOUT_CLASSIFICATION	2.046992889273987E-5	DEFECT
//-- Fields ----------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9997683520016324	WITHOUT_CLASSIFICATION	2.3164799836767542E-4	DEFECT
//-- Methods ---------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9998250896953784	WITHOUT_CLASSIFICATION	1.7491030462170424E-4	DEFECT
// Add all nested elements to our catalog	WITHOUT_CLASSIFICATION	0.9999892018509047	WITHOUT_CLASSIFICATION	1.0798149095217836E-5	DEFECT
// Ignore exception	WITHOUT_CLASSIFICATION	0.9999409144231644	WITHOUT_CLASSIFICATION	5.908557683564752E-5	DEFECT
// New behavior for delayed task creation. Description // will be evaluated in Project.getDescription()	WITHOUT_CLASSIFICATION	0.9999767350707718	WITHOUT_CLASSIFICATION	2.3264929228211765E-5	DEFECT
// Append the classpath of the nested catalog	WITHOUT_CLASSIFICATION	0.9999857391986717	WITHOUT_CLASSIFICATION	1.4260801328329266E-5	DEFECT
// Append the catalog path of the nested catalog	WITHOUT_CLASSIFICATION	0.9999843267050086	WITHOUT_CLASSIFICATION	1.567329499144709E-5	DEFECT
// At this point we are probably in failure mode, but // try to use the bare URI as a last gasp	WITHOUT_CLASSIFICATION	0.9999228021076705	WITHOUT_CLASSIFICATION	7.719789232959787E-5	DEFECT
// The Apache resolver is present - Need to check if it can // be seen by the catalog resolver class. Start by getting // the actual loader	WITHOUT_CLASSIFICATION	0.9998588888552268	WITHOUT_CLASSIFICATION	1.4111114477323466E-4	DEFECT
// load the base class through this loader.	WITHOUT_CLASSIFICATION	0.9999754069575452	WITHOUT_CLASSIFICATION	2.4593042454794264E-5	DEFECT
// and find its actual loader	WITHOUT_CLASSIFICATION	0.999987665652074	WITHOUT_CLASSIFICATION	1.233434792605649E-5	DEFECT
// // Success!  The xml-commons resolver library is // available, so use it. //	WITHOUT_CLASSIFICATION	0.9999988355748741	WITHOUT_CLASSIFICATION	1.164425125962468E-6	DEFECT
// // The xml-commons resolver library is not // available, so we can't use it. //	WITHOUT_CLASSIFICATION	0.9999766636956179	WITHOUT_CLASSIFICATION	2.3336304382077385E-5	DEFECT
// the following line seems to be necessary on Windows under JDK 1.2	WITHOUT_CLASSIFICATION	0.9998664236846938	WITHOUT_CLASSIFICATION	1.3357631530606722E-4	DEFECT
// // The ResourceLocation may specify a relative path for its // location attribute.  This is resolved using the appropriate // base. //	WITHOUT_CLASSIFICATION	0.9994328376193092	WITHOUT_CLASSIFICATION	5.67162380690747E-4	DEFECT
// // for classpath lookup we ignore the base directory //	WITHOUT_CLASSIFICATION	0.9999787681397914	WITHOUT_CLASSIFICATION	2.123186020867746E-5	DEFECT
// // The ResourceLocation may specify a relative url for its // location attribute.  This is resolved using the appropriate // base. //	WITHOUT_CLASSIFICATION	0.999444999652439	WITHOUT_CLASSIFICATION	5.550003475608838E-4	DEFECT
// // We didn't match a ResourceLocation, but since we // only support PUBLIC and URI entry types internally, // it is still possible that there is another entry in // an external catalog that will match.  We call // Apache resolver's resolveEntity method to cover // this possibility. //	WITHOUT_CLASSIFICATION	0.9999646165424384	WITHOUT_CLASSIFICATION	3.538345756150037E-5	DEFECT
// // Use the passed in base in preference to the base // from matchingEntry, which is either null or the // directory in which the external catalog file from // which it was obtained is located.  We make a copy // so matchingEntry's original base is untouched.  Of // course, if there is no base, no need to make a // copy... // // This is the standard behavior as per my reading of // the JAXP and XML Catalog specs.  CKS 11/7/2002 //	WITHOUT_CLASSIFICATION	0.9998652052363183	WITHOUT_CLASSIFICATION	1.3479476368165108E-4	DEFECT
// Parse each catalog listed in nested <catalogpath> elements	WITHOUT_CLASSIFICATION	0.9999997725028076	WITHOUT_CLASSIFICATION	2.274971924721384E-7	DEFECT
//-- XMLCatalog	WITHOUT_CLASSIFICATION	0.9992962940831671	WITHOUT_CLASSIFICATION	7.03705916832874E-4	DEFECT
/* Methods below all add specific selectors */	WITHOUT_CLASSIFICATION	0.9999944861055023	WITHOUT_CLASSIFICATION	5.513894497626527E-6	DEFECT
// No includes supplied, so set it to 'matches all'	WITHOUT_CLASSIFICATION	0.9999995863475767	WITHOUT_CLASSIFICATION	4.136524234196472E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999675172071433	WITHOUT_CLASSIFICATION	3.2482792856694074E-5	DEFECT
/* package-private for now */	WITHOUT_CLASSIFICATION	0.999992848319568	WITHOUT_CLASSIFICATION	7.1516804319454975E-6	DEFECT
/* package-private for now */	WITHOUT_CLASSIFICATION	0.999992848319568	WITHOUT_CLASSIFICATION	7.1516804319454975E-6	DEFECT
// special case in ZIPs, we do not want this thing included	WITHOUT_CLASSIFICATION	0.9998775601318102	WITHOUT_CLASSIFICATION	1.2243986818982598E-4	DEFECT
// first check if the archive needs to be scanned again	WITHOUT_CLASSIFICATION	0.9999978552722752	WITHOUT_CLASSIFICATION	2.144727724716948E-6	DEFECT
//do not use a FileResource b/c it pulls File info from the filesystem:	WITHOUT_CLASSIFICATION	0.9998832870453408	WITHOUT_CLASSIFICATION	1.1671295465920187E-4	DEFECT
// spare scanning again and again	WITHOUT_CLASSIFICATION	0.999989945906191	WITHOUT_CLASSIFICATION	1.0054093809105089E-5	DEFECT
/* cached DirectoryScanner instance for our own Project only */	WITHOUT_CLASSIFICATION	0.9999464547168669	WITHOUT_CLASSIFICATION	5.354528313303626E-5	DEFECT
// SelectorContainer methods	WITHOUT_CLASSIFICATION	0.9999980169602632	WITHOUT_CLASSIFICATION	1.9830397367432926E-6	DEFECT
// WIN9x uses a bat file for executing commands	WITHOUT_CLASSIFICATION	0.9999982220818923	WITHOUT_CLASSIFICATION	1.777918107824441E-6	DEFECT
// empty path return empty string	WITHOUT_CLASSIFICATION	0.9999875781601918	WITHOUT_CLASSIFICATION	1.2421839808131872E-5	DEFECT
//no command? no string	WITHOUT_CLASSIFICATION	0.999959658652483	WITHOUT_CLASSIFICATION	4.0341347517070566E-5	DEFECT
// parse with a simple finite state machine	WITHOUT_CLASSIFICATION	0.9999985642572139	WITHOUT_CLASSIFICATION	1.4357427861647721E-6	DEFECT
//inherit doc	WITHOUT_CLASSIFICATION	0.9996261565830213	WITHOUT_CLASSIFICATION	3.73843416978754E-4	DEFECT
//can't have zero-length token	WITHOUT_CLASSIFICATION	0.998951967935712	WITHOUT_CLASSIFICATION	0.0010480320642881238	DEFECT
// we have another token, let's parse it.	WITHOUT_CLASSIFICATION	0.9999950596791012	WITHOUT_CLASSIFICATION	4.940320898855109E-6	DEFECT
// should always be the case...	WITHOUT_CLASSIFICATION	0.9997287335284849	WITHOUT_CLASSIFICATION	2.7126647151508E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999707121018232	WITHOUT_CLASSIFICATION	2.9287898176784134E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999707121018232	WITHOUT_CLASSIFICATION	2.9287898176784134E-5	DEFECT
// swallow	WITHOUT_CLASSIFICATION	0.9999081578705552	WITHOUT_CLASSIFICATION	9.184212944476873E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999675172071433	WITHOUT_CLASSIFICATION	3.2482792856694074E-5	DEFECT
/**     * Invoked by IntrospectionHelper for <code>setXXX(Path p)</code>     * attribute setters.     * @param p the <code>Project</code> for this path.     * @param path the <code>String</code> path definition.     */	WITHOUT_CLASSIFICATION	0.9999750880855472	WITHOUT_CLASSIFICATION	2.4911914452819693E-5	DEFECT
// ignore: don't trust anyone	WITHOUT_CLASSIFICATION	0.9994779444861945	WITHOUT_CLASSIFICATION	5.220555138055218E-4	DEFECT
// last: don't trust the developer	WITHOUT_CLASSIFICATION	0.9997700727065542	WITHOUT_CLASSIFICATION	2.2992729344588168E-4	DEFECT
// newer versions of Kaffe (1.1.1+) won't have this, // but this will be sorted by FileSet anyway.	WITHOUT_CLASSIFICATION	0.9998804384595915	WITHOUT_CLASSIFICATION	1.1956154040844806E-4	DEFECT
// JDK 1.2+ seems to set java.home to the JRE directory.	WITHOUT_CLASSIFICATION	0.9999916608125587	WITHOUT_CLASSIFICATION	8.33918744129539E-6	DEFECT
// Just keep the old version as well and let addExisting // sort it out.	WITHOUT_CLASSIFICATION	0.9999969253475519	WITHOUT_CLASSIFICATION	3.0746524481180546E-6	DEFECT
// Sun's and Apple's 1.4 have JCE and JSSE in separate jars.	WITHOUT_CLASSIFICATION	0.999997959720795	WITHOUT_CLASSIFICATION	2.040279205058175E-6	DEFECT
// IBM's 1.4 has rt.jar split into 4 smaller jars and a combined // JCE/JSSE in security.jar.	WITHOUT_CLASSIFICATION	0.9999931392292588	WITHOUT_CLASSIFICATION	6.860770741154511E-6	DEFECT
// Added for MacOS X	WITHOUT_CLASSIFICATION	0.9999577298421115	WITHOUT_CLASSIFICATION	4.227015788849678E-5	DEFECT
//remove any null elements	WITHOUT_CLASSIFICATION	0.9999864467307964	WITHOUT_CLASSIFICATION	1.3553269203684317E-5	DEFECT
//create the list	WITHOUT_CLASSIFICATION	0.9999782640047904	WITHOUT_CLASSIFICATION	2.1735995209703487E-5	DEFECT
//fill it	WITHOUT_CLASSIFICATION	0.9994645777999981	WITHOUT_CLASSIFICATION	5.354222000018713E-4	DEFECT
//convert to an array	WITHOUT_CLASSIFICATION	0.9997790490966866	WITHOUT_CLASSIFICATION	2.2095090331344933E-4	DEFECT
// properties are part of the vm options...	WITHOUT_CLASSIFICATION	0.9998541870156109	WITHOUT_CLASSIFICATION	1.4581298438907998E-4	DEFECT
//boot classpath	WITHOUT_CLASSIFICATION	0.9999250788805155	WITHOUT_CLASSIFICATION	7.492111948444082E-5	DEFECT
//main classpath	WITHOUT_CLASSIFICATION	0.9999687498894084	WITHOUT_CLASSIFICATION	3.1250110591659E-5	DEFECT
//now any assertions are added	WITHOUT_CLASSIFICATION	0.9998656629638704	WITHOUT_CLASSIFICATION	1.3433703612961614E-4	DEFECT
// this is the classname to run as well as its arguments. // in case of 'executeJar', the executable is a jar file.	WITHOUT_CLASSIFICATION	0.9999900306246873	WITHOUT_CLASSIFICATION	9.969375312612827E-6	DEFECT
// cloned system properties	WITHOUT_CLASSIFICATION	0.9998449788886706	WITHOUT_CLASSIFICATION	1.5502111132933999E-4	DEFECT
// classpath is "-classpath <classpath>" -> 2 args	WITHOUT_CLASSIFICATION	0.9999988694613192	WITHOUT_CLASSIFICATION	1.1305386807597148E-6	DEFECT
// bootclasspath is "-Xbootclasspath:<classpath>" -> 1 arg	WITHOUT_CLASSIFICATION	0.9999863003857983	WITHOUT_CLASSIFICATION	1.3699614201841587E-5	DEFECT
// jar execution requires an additional -jar option	WITHOUT_CLASSIFICATION	0.9999828642542888	WITHOUT_CLASSIFICATION	1.713574571112051E-5	DEFECT
/*<? extends EnumeratedAttribute>*/	WITHOUT_CLASSIFICATION	0.9999930552704621	WITHOUT_CLASSIFICATION	6.9447295379088855E-6	DEFECT
//end nested class	WITHOUT_CLASSIFICATION	0.9999892408729926	WITHOUT_CLASSIFICATION	1.0759127007557007E-5	DEFECT
// Add this PropertySet's nested PropertySets' property names.	WITHOUT_CLASSIFICATION	0.9999946227790709	WITHOUT_CLASSIFICATION	5.377220929142628E-6	DEFECT
//make a copy...	WITHOUT_CLASSIFICATION	0.9995985552401253	WITHOUT_CLASSIFICATION	4.0144475987470666E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999675172071433	WITHOUT_CLASSIFICATION	3.2482792856694074E-5	DEFECT
// Gotta atleast put in the proper spelling :-P	WITHOUT_CLASSIFICATION	0.9994206903458077	WITHOUT_CLASSIFICATION	5.793096541923876E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999675172071433	WITHOUT_CLASSIFICATION	3.2482792856694074E-5	DEFECT
// If this TransformOperation has DrawOperation children // then Rotate the first child and return.	WITHOUT_CLASSIFICATION	0.9998586287546605	WITHOUT_CLASSIFICATION	1.4137124533953262E-4	DEFECT
// If this TransformOperation has DrawOperation children // then Rotate the first child and return.	WITHOUT_CLASSIFICATION	0.9998586287546605	WITHOUT_CLASSIFICATION	1.4137124533953262E-4	DEFECT
// CheckStyle:MemberNameCheck ON	WITHOUT_CLASSIFICATION	0.9999803564642716	WITHOUT_CLASSIFICATION	1.964353572828789E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc // CheckStyle:MemberNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9999918441846295	WITHOUT_CLASSIFICATION	8.155815370492086E-6	DEFECT
// change this to get the objects from the other reference	WITHOUT_CLASSIFICATION	0.999927636361689	WITHOUT_CLASSIFICATION	7.236363831087194E-5	DEFECT
// change this to get the objects from the other reference	WITHOUT_CLASSIFICATION	0.999927636361689	WITHOUT_CLASSIFICATION	7.236363831087194E-5	DEFECT
//-- Fields ----------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9997683520016324	WITHOUT_CLASSIFICATION	2.3164799836767542E-4	DEFECT
//-- Methods ---------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9998250896953784	WITHOUT_CLASSIFICATION	1.7491030462170424E-4	DEFECT
// CheckStyle:VisibilityModifier OFF	WITHOUT_CLASSIFICATION	0.9999604041088838	WITHOUT_CLASSIFICATION	3.959589111631543E-5	DEFECT
// may be null if a system property has been added // after the project instance has been initialized	WITHOUT_CLASSIFICATION	0.9999581737771971	WITHOUT_CLASSIFICATION	4.182622280292669E-5	DEFECT
// Add this PropertySet's property names.	WITHOUT_CLASSIFICATION	0.9999803173733225	WITHOUT_CLASSIFICATION	1.9682626677615043E-5	DEFECT
//map the names	WITHOUT_CLASSIFICATION	0.9999906565839047	WITHOUT_CLASSIFICATION	9.34341609525687E-6	DEFECT
// Create one NameEntry in the appropriate pattern list for each // line in the file.	WITHOUT_CLASSIFICATION	0.9999978722317809	WITHOUT_CLASSIFICATION	2.127768219030004E-6	DEFECT
// Get a FileReader	WITHOUT_CLASSIFICATION	0.9999934640871911	WITHOUT_CLASSIFICATION	6.535912808774566E-6	DEFECT
//Ignore exception	WITHOUT_CLASSIFICATION	0.9997606332341867	WITHOUT_CLASSIFICATION	2.3936676581338287E-4	DEFECT
//-- ResourceLocation	WITHOUT_CLASSIFICATION	0.9999706591153019	WITHOUT_CLASSIFICATION	2.9340884697967744E-5	DEFECT
// Add base set of permissions	WITHOUT_CLASSIFICATION	0.9999928648913696	WITHOUT_CLASSIFICATION	7.135108630373302E-6	DEFECT
/*                     if the permission was not explicitly granted or revoked                     the original security manager will do its work                    */	WITHOUT_CLASSIFICATION	0.9971325408260712	WITHOUT_CLASSIFICATION	0.002867459173928909	DEFECT
// None of the actions revoked, so all allowed.	WITHOUT_CLASSIFICATION	0.9998215803414193	WITHOUT_CLASSIFICATION	1.7841965858061913E-4	DEFECT
//default true:	WITHOUT_CLASSIFICATION	0.9998680183337848	WITHOUT_CLASSIFICATION	1.3198166621514778E-4	DEFECT
//default false:	WITHOUT_CLASSIFICATION	0.9998567469628066	WITHOUT_CLASSIFICATION	1.432530371935057E-4	DEFECT
//default false:	WITHOUT_CLASSIFICATION	0.9998567469628066	WITHOUT_CLASSIFICATION	1.432530371935057E-4	DEFECT
// The regular expression factory	WITHOUT_CLASSIFICATION	0.9998280842792604	WITHOUT_CLASSIFICATION	1.7191572073952839E-4	DEFECT
// temporary variable	WITHOUT_CLASSIFICATION	0.999999392130976	WITHOUT_CLASSIFICATION	6.078690239168975E-7	DEFECT
// This is included	WITHOUT_CLASSIFICATION	0.9998114163184868	WITHOUT_CLASSIFICATION	1.885836815133413E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999675172071433	WITHOUT_CLASSIFICATION	3.2482792856694074E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999675172071433	WITHOUT_CLASSIFICATION	3.2482792856694074E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999675172071433	WITHOUT_CLASSIFICATION	3.2482792856694074E-5	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.998803732051834	WITHOUT_CLASSIFICATION	0.0011962679481660166	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999675172071433	WITHOUT_CLASSIFICATION	3.2482792856694074E-5	DEFECT
//- ApacheCatalog	WITHOUT_CLASSIFICATION	0.9999310664505314	WITHOUT_CLASSIFICATION	6.893354946858588E-5	DEFECT
// // If you don't do this, you get all sorts of annoying // warnings about a missing properties file.  However, it // seems to work just fine with default values.  Ultimately, // we should probably include a "CatalogManager.properties" // file in the ant jarfile with some default property // settings.  See CatalogManager.java for more details. //	WITHOUT_CLASSIFICATION	0.9999926287485086	WITHOUT_CLASSIFICATION	7.371251491357837E-6	DEFECT
// // Make sure CatalogResolver instantiates ApacheCatalog, // rather than a plain Catalog //	WITHOUT_CLASSIFICATION	0.9999986252551918	WITHOUT_CLASSIFICATION	1.3747448082387848E-6	DEFECT
// debug // CatalogManager.getStaticManager().setVerbosity(4);	WITHOUT_CLASSIFICATION	0.9999939264287084	WITHOUT_CLASSIFICATION	6.073571291630582E-6	DEFECT
// Pass in reference to ourselves so we can be called back.	WITHOUT_CLASSIFICATION	0.9999971297597675	WITHOUT_CLASSIFICATION	2.870240232405862E-6	DEFECT
//-- ApacheCatalogResolver	WITHOUT_CLASSIFICATION	0.999992621911955	WITHOUT_CLASSIFICATION	7.378088044900305E-6	DEFECT
//sorted bag impl. borrowed from commons-collections TreeBag:	WITHOUT_CLASSIFICATION	0.9995370129551834	WITHOUT_CLASSIFICATION	4.629870448165552E-4	DEFECT
/* now check each Resource in case the child only           lets through files from any children IT may have: */	WITHOUT_CLASSIFICATION	0.9944152038811667	WITHOUT_CLASSIFICATION	0.005584796118833371	DEFECT
//?	WITHOUT_CLASSIFICATION	0.9993908499782083	WITHOUT_CLASSIFICATION	6.091500217916265E-4	DEFECT
//not using the accessor in this case to avoid side effects	WITHOUT_CLASSIFICATION	0.9994256845079426	WITHOUT_CLASSIFICATION	5.743154920574446E-4	DEFECT
/*package-private*/	WITHOUT_CLASSIFICATION	0.9999714690882021	WITHOUT_CLASSIFICATION	2.853091179787293E-5	DEFECT
//new oata.util.ReaderInputStream(new InputStreamReader(	WITHOUT_CLASSIFICATION	0.9999592547529571	WITHOUT_CLASSIFICATION	4.0745247042901066E-5	DEFECT
//, encoding), encoding);	WITHOUT_CLASSIFICATION	0.9990196259359544	WITHOUT_CLASSIFICATION	9.803740640456121E-4	DEFECT
//first the easy way, if all children are filesystem-only, return true:	WITHOUT_CLASSIFICATION	0.9997914895084649	WITHOUT_CLASSIFICATION	2.0851049153510908E-4	DEFECT
//preserve order-encountered using a list; enforce set logic manually:	WITHOUT_CLASSIFICATION	0.9999583821419137	WITHOUT_CLASSIFICATION	4.161785808632396E-5	DEFECT
/* cached DirectoryScanner instance */	WITHOUT_CLASSIFICATION	0.9999941414217536	WITHOUT_CLASSIFICATION	5.858578246455448E-6	DEFECT
//if no nested, natural order:	WITHOUT_CLASSIFICATION	0.9999809968716776	WITHOUT_CLASSIFICATION	1.9003128322396245E-5	DEFECT
//dummy	WITHOUT_CLASSIFICATION	0.9984780211534323	WITHOUT_CLASSIFICATION	0.001521978846567656	DEFECT
//implement ResourceSelector; inherit doc	WITHOUT_CLASSIFICATION	0.9999898115938834	WITHOUT_CLASSIFICATION	1.0188406116684942E-5	DEFECT
// First, check that all elements are correctly configured	WITHOUT_CLASSIFICATION	0.9998788382340175	WITHOUT_CLASSIFICATION	1.2116176598247291E-4	DEFECT
//if either of them is missing, they are different	WITHOUT_CLASSIFICATION	0.9996912376546915	WITHOUT_CLASSIFICATION	3.08762345308591E-4	DEFECT
// different size =>different files	WITHOUT_CLASSIFICATION	0.9999867838619162	WITHOUT_CLASSIFICATION	1.3216138083830801E-5	DEFECT
//same date if dest timestamp is within granularity of the srcfile	WITHOUT_CLASSIFICATION	0.9999279256415622	WITHOUT_CLASSIFICATION	7.207435843777565E-5	DEFECT
// different dates => different files	WITHOUT_CLASSIFICATION	0.9999932511364419	WITHOUT_CLASSIFICATION	6.7488635580537265E-6	DEFECT
//here do a bulk comparison	WITHOUT_CLASSIFICATION	0.9996906964422431	WITHOUT_CLASSIFICATION	3.093035577570323E-4	DEFECT
// At this point, we know we have a tie.	WITHOUT_CLASSIFICATION	0.9999818568294004	WITHOUT_CLASSIFICATION	1.814317059956316E-5	DEFECT
// throw BuildException on error	WITHOUT_CLASSIFICATION	0.9996706090836933	WITHOUT_CLASSIFICATION	3.2939091630657927E-4	DEFECT
// throw BuildException on error	WITHOUT_CLASSIFICATION	0.9996706090836933	WITHOUT_CLASSIFICATION	3.2939091630657927E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999675172071433	WITHOUT_CLASSIFICATION	3.2482792856694074E-5	DEFECT
// throw BuildException on error	WITHOUT_CLASSIFICATION	0.9996706090836933	WITHOUT_CLASSIFICATION	3.2939091630657927E-4	DEFECT
// throw BuildException on error	WITHOUT_CLASSIFICATION	0.9996706090836933	WITHOUT_CLASSIFICATION	3.2939091630657927E-4	DEFECT
// throw BuildException on error	WITHOUT_CLASSIFICATION	0.9996706090836933	WITHOUT_CLASSIFICATION	3.2939091630657927E-4	DEFECT
// throw BuildException on error	WITHOUT_CLASSIFICATION	0.9996706090836933	WITHOUT_CLASSIFICATION	3.2939091630657927E-4	DEFECT
// If you felt daring, you could cache the basedir absolute path	WITHOUT_CLASSIFICATION	0.9999691244337224	WITHOUT_CLASSIFICATION	3.087556627756535E-5	DEFECT
// Sanity check. Ditch it if you want faster performance	WITHOUT_CLASSIFICATION	0.999998869669114	WITHOUT_CLASSIFICATION	1.1303308859969875E-6	DEFECT
// Determine file whose out-of-dateness is to be checked	WITHOUT_CLASSIFICATION	0.9999993328577255	WITHOUT_CLASSIFICATION	6.671422744457607E-7	DEFECT
// If filename does not match the To attribute of the mapper // then filter it out of the files we are considering	WITHOUT_CLASSIFICATION	0.9999610755361237	WITHOUT_CLASSIFICATION	3.892446387634422E-5	DEFECT
// If filename does not match the To attribute of the mapper // then filter it out of the files we are considering	WITHOUT_CLASSIFICATION	0.9999610755361237	WITHOUT_CLASSIFICATION	3.892446387634422E-5	DEFECT
// Sanity check	WITHOUT_CLASSIFICATION	0.9999810760130418	WITHOUT_CLASSIFICATION	1.8923986958204194E-5	DEFECT
// Sanity check	WITHOUT_CLASSIFICATION	0.9999810760130418	WITHOUT_CLASSIFICATION	1.8923986958204194E-5	DEFECT
// Determine file whose existence is to be checked	WITHOUT_CLASSIFICATION	0.999999574322202	WITHOUT_CLASSIFICATION	4.2567779801952574E-7	DEFECT
/**     * When using this as a custom selector, this method will be called.     * It translates each parameter into the appropriate setXXX() call.     *     * @param parameters the complete set of parameters for this selector.     */	WITHOUT_CLASSIFICATION	0.9999957346527005	WITHOUT_CLASSIFICATION	4.2653472994222275E-6	DEFECT
// Directory size never selected for	WITHOUT_CLASSIFICATION	0.9999843157513758	WITHOUT_CLASSIFICATION	1.5684248624216596E-5	DEFECT
/* You wish! */	WITHOUT_CLASSIFICATION	0.9999215534208747	WITHOUT_CLASSIFICATION	7.844657912530472E-5	DEFECT
// check millis and only set it once.	WITHOUT_CLASSIFICATION	0.9999599515953624	WITHOUT_CLASSIFICATION	4.0048404637471465E-5	DEFECT
// When str starts with a File.separator, pattern has to start with a // File.separator. // When pattern starts with a File.separator, str has to start with a // File.separator.	WITHOUT_CLASSIFICATION	0.999925736049527	WITHOUT_CLASSIFICATION	7.426395047299152E-5	DEFECT
// up to first '**'	WITHOUT_CLASSIFICATION	0.9999921709422362	WITHOUT_CLASSIFICATION	7.82905776374596E-6	DEFECT
// up to first '**'	WITHOUT_CLASSIFICATION	0.9999921709422362	WITHOUT_CLASSIFICATION	7.82905776374596E-6	DEFECT
// String is exhausted	WITHOUT_CLASSIFICATION	0.9999947105549867	WITHOUT_CLASSIFICATION	5.289445013265534E-6	DEFECT
// String is exhausted	WITHOUT_CLASSIFICATION	0.9999947105549867	WITHOUT_CLASSIFICATION	5.289445013265534E-6	DEFECT
// String is exhausted	WITHOUT_CLASSIFICATION	0.9999947105549867	WITHOUT_CLASSIFICATION	5.289445013265534E-6	DEFECT
// String not exhausted, but pattern is. Failure.	WITHOUT_CLASSIFICATION	0.9998220034711455	WITHOUT_CLASSIFICATION	1.779965288545965E-4	DEFECT
// String not exhausted, but pattern is. Failure.	WITHOUT_CLASSIFICATION	0.9998220034711455	WITHOUT_CLASSIFICATION	1.779965288545965E-4	DEFECT
// up to last '**'	WITHOUT_CLASSIFICATION	0.9999911251447631	WITHOUT_CLASSIFICATION	8.87485523693959E-6	DEFECT
// '**/**' situation, so skip one	WITHOUT_CLASSIFICATION	0.9999907953953808	WITHOUT_CLASSIFICATION	9.204604619180255E-6	DEFECT
// No '*'s, so we make a shortcut	WITHOUT_CLASSIFICATION	0.9999982827892215	WITHOUT_CLASSIFICATION	1.7172107784917469E-6	DEFECT
// Pattern and string do not have the same size	WITHOUT_CLASSIFICATION	0.9998663647660087	WITHOUT_CLASSIFICATION	1.3363523399134353E-4	DEFECT
// Character mismatch	WITHOUT_CLASSIFICATION	0.9999991940439399	WITHOUT_CLASSIFICATION	8.059560600742679E-7	DEFECT
// Character mismatch	WITHOUT_CLASSIFICATION	0.9999991940439399	WITHOUT_CLASSIFICATION	8.059560600742679E-7	DEFECT
// String matches against pattern	WITHOUT_CLASSIFICATION	0.9999983914040009	WITHOUT_CLASSIFICATION	1.6085959989882499E-6	DEFECT
// throw BuildException on error	WITHOUT_CLASSIFICATION	0.9996706090836933	WITHOUT_CLASSIFICATION	3.2939091630657927E-4	DEFECT
// Character mismatch	WITHOUT_CLASSIFICATION	0.9999991940439399	WITHOUT_CLASSIFICATION	8.059560600742679E-7	DEFECT
// Find the pattern between padIdxStart & padIdxTmp in str between // strIdxStart & strIdxEnd	WITHOUT_CLASSIFICATION	0.9999912653431697	WITHOUT_CLASSIFICATION	8.734656830296905E-6	DEFECT
// Find the pattern between padIdxStart & padIdxTmp in str between // strIdxStart & strIdxEnd	WITHOUT_CLASSIFICATION	0.9999912653431697	WITHOUT_CLASSIFICATION	8.734656830296905E-6	DEFECT
// Character mismatch	WITHOUT_CLASSIFICATION	0.9999991940439399	WITHOUT_CLASSIFICATION	8.059560600742679E-7	DEFECT
// Character mismatch	WITHOUT_CLASSIFICATION	0.9999991940439399	WITHOUT_CLASSIFICATION	8.059560600742679E-7	DEFECT
// Character mismatch	WITHOUT_CLASSIFICATION	0.9999991940439399	WITHOUT_CLASSIFICATION	8.059560600742679E-7	DEFECT
// Pattern contains only '*', which matches anything	WITHOUT_CLASSIFICATION	0.9999955538691755	WITHOUT_CLASSIFICATION	4.446130824496731E-6	DEFECT
// Process characters before first star	WITHOUT_CLASSIFICATION	0.9999993382606162	WITHOUT_CLASSIFICATION	6.617393838655404E-7	DEFECT
// All characters in the string are used. Check if only '*'s are // left in the pattern. If so, we succeeded. Otherwise failure.	WITHOUT_CLASSIFICATION	0.9999558145528515	WITHOUT_CLASSIFICATION	4.418544714851333E-5	DEFECT
// All characters in the string are used. Check if only '*'s are // left in the pattern. If so, we succeeded. Otherwise failure.	WITHOUT_CLASSIFICATION	0.9999558145528515	WITHOUT_CLASSIFICATION	4.418544714851333E-5	DEFECT
// Process characters after last star	WITHOUT_CLASSIFICATION	0.9999995022104543	WITHOUT_CLASSIFICATION	4.977895457405603E-7	DEFECT
// process pattern between stars. padIdxStart and patIdxEnd point // always to a '*'.	WITHOUT_CLASSIFICATION	0.99999909897295	WITHOUT_CLASSIFICATION	9.010270498851582E-7	DEFECT
// Two stars next to each other, skip the first one.	WITHOUT_CLASSIFICATION	0.999936348999395	WITHOUT_CLASSIFICATION	6.365100060510004E-5	DEFECT
// All characters in the string are used. Check if only '*'s are left // in the pattern. If so, we succeeded. Otherwise failure.	WITHOUT_CLASSIFICATION	0.9999575660476422	WITHOUT_CLASSIFICATION	4.243395235781744E-5	DEFECT
/*++*/	WITHOUT_CLASSIFICATION	0.9990214646517458	WITHOUT_CLASSIFICATION	9.785353482542085E-4	DEFECT
// Creation is done here rather than in isSelected() because some // containers may do a validation pass before running isSelected(), // but we need to check for the existence of the created class.	WITHOUT_CLASSIFICATION	0.9999873631107735	WITHOUT_CLASSIFICATION	1.2636889226418513E-5	DEFECT
// We know that dynselector must be non-null if no error message	WITHOUT_CLASSIFICATION	0.9999988122229686	WITHOUT_CLASSIFICATION	1.1877770313874012E-6	DEFECT
// Deal with if and unless properties first	WITHOUT_CLASSIFICATION	0.9999842344055517	WITHOUT_CLASSIFICATION	1.5765594448187827E-5	DEFECT
// -----  attributes  -----	WITHOUT_CLASSIFICATION	0.9999933755126117	WITHOUT_CLASSIFICATION	6.624487388343147E-6	DEFECT
// ----- internal member variables -----	WITHOUT_CLASSIFICATION	0.9999997380680457	WITHOUT_CLASSIFICATION	2.619319543777054E-7	DEFECT
// -----  constructors  -----	WITHOUT_CLASSIFICATION	0.9999809816703252	WITHOUT_CLASSIFICATION	1.9018329674783485E-5	DEFECT
// ----- configuration  -----	WITHOUT_CLASSIFICATION	0.9998524511246043	WITHOUT_CLASSIFICATION	1.475488753957722E-4	DEFECT
// normal use inside Ant	WITHOUT_CLASSIFICATION	0.9999964131195821	WITHOUT_CLASSIFICATION	3.5868804178998848E-6	DEFECT
// set self as a BuildListener to delay cachefile saves	WITHOUT_CLASSIFICATION	0.9999982493827079	WITHOUT_CLASSIFICATION	1.750617292189205E-6	DEFECT
// no reference to project - e.g. during normal JUnit tests	WITHOUT_CLASSIFICATION	0.9999967782386214	WITHOUT_CLASSIFICATION	3.221761378480703E-6	DEFECT
// this is a *.* parameter for later use	WITHOUT_CLASSIFICATION	0.9999985864492645	WITHOUT_CLASSIFICATION	1.4135507354465943E-6	DEFECT
// specify the algorithm classname	WITHOUT_CLASSIFICATION	0.9999909571145943	WITHOUT_CLASSIFICATION	9.042885405751193E-6	DEFECT
// use Algorithm defined via name	WITHOUT_CLASSIFICATION	0.9999993932084369	WITHOUT_CLASSIFICATION	6.067915630404215E-7	DEFECT
// use Algorithm specified by classname	WITHOUT_CLASSIFICATION	0.9999975979639748	WITHOUT_CLASSIFICATION	2.4020360251789596E-6	DEFECT
// nothing specified - use default	WITHOUT_CLASSIFICATION	0.9999976639408629	WITHOUT_CLASSIFICATION	2.33605913700171E-6	DEFECT
// else nothing to do	WITHOUT_CLASSIFICATION	0.9999467084834814	WITHOUT_CLASSIFICATION	5.3291516518470385E-5	DEFECT
// use Algorithm defined via name	WITHOUT_CLASSIFICATION	0.9999993932084369	WITHOUT_CLASSIFICATION	6.067915630404215E-7	DEFECT
// // -----  Set the main attributes, pattern '*'  ----- //	WITHOUT_CLASSIFICATION	0.9999990382316613	WITHOUT_CLASSIFICATION	9.617683387513205E-7	DEFECT
// use Algorithm specified by classname	WITHOUT_CLASSIFICATION	0.9999975979639748	WITHOUT_CLASSIFICATION	2.4020360251789596E-6	DEFECT
// nothing specified - use default	WITHOUT_CLASSIFICATION	0.9999976639408629	WITHOUT_CLASSIFICATION	2.33605913700171E-6	DEFECT
// specify the cache classname	WITHOUT_CLASSIFICATION	0.9999935421888692	WITHOUT_CLASSIFICATION	6.4578111308614475E-6	DEFECT
// use Cache defined via name	WITHOUT_CLASSIFICATION	0.9999997514550029	WITHOUT_CLASSIFICATION	2.485449971536942E-7	DEFECT
// use Cache specified by classname	WITHOUT_CLASSIFICATION	0.999997282172557	WITHOUT_CLASSIFICATION	2.7178274429547237E-6	DEFECT
// specify the comparator classname	WITHOUT_CLASSIFICATION	0.9999940989439284	WITHOUT_CLASSIFICATION	5.901056071485608E-6	DEFECT
// // -----  Set the special attributes, pattern '*.*'  ----- //	WITHOUT_CLASSIFICATION	0.9999949653558277	WITHOUT_CLASSIFICATION	5.034644172297724E-6	DEFECT
// load the specified class	WITHOUT_CLASSIFICATION	0.9999936341061845	WITHOUT_CLASSIFICATION	6.3658938154368975E-6	DEFECT
// -----  the selection work  -----	WITHOUT_CLASSIFICATION	0.9993864634899201	WITHOUT_CLASSIFICATION	6.135365100798382E-4	DEFECT
// We have a 'resourced' file, so reconvert it and use // the 'old' implementation.	WITHOUT_CLASSIFICATION	0.9999952028598977	WITHOUT_CLASSIFICATION	4.797140102193112E-6	DEFECT
// You can not compute a value for a directory	WITHOUT_CLASSIFICATION	0.99999183160576	WITHOUT_CLASSIFICATION	8.168394240030567E-6	DEFECT
// Get the values and do the comparison	WITHOUT_CLASSIFICATION	0.9999989430371792	WITHOUT_CLASSIFICATION	1.0569628207857967E-6	DEFECT
// Maybe update the cache	WITHOUT_CLASSIFICATION	0.9999925007103024	WITHOUT_CLASSIFICATION	7.499289697567855E-6	DEFECT
// -----  attribute and nested element support  -----	WITHOUT_CLASSIFICATION	0.9999992337846306	WITHOUT_CLASSIFICATION	7.662153694725637E-7	DEFECT
// the usual classloader	WITHOUT_CLASSIFICATION	0.9999911936192575	WITHOUT_CLASSIFICATION	8.806380742460697E-6	DEFECT
// additional use the provided classpath	WITHOUT_CLASSIFICATION	0.9999932594866194	WITHOUT_CLASSIFICATION	6.740513380511699E-6	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9999146686599837	WITHOUT_CLASSIFICATION	8.533134001628908E-5	DEFECT
// ----- 'beautiful' output -----	WITHOUT_CLASSIFICATION	0.9999868971149902	WITHOUT_CLASSIFICATION	1.310288500976274E-5	DEFECT
// ----- BuildListener interface methods -----	WITHOUT_CLASSIFICATION	0.9999986993062815	WITHOUT_CLASSIFICATION	1.3006937184218683E-6	DEFECT
// The EnumeratedAttributes for the three interface implementations. // Name-Classname mapping is done in the configure() method.	WITHOUT_CLASSIFICATION	0.9999957476653253	WITHOUT_CLASSIFICATION	4.252334674665333E-6	DEFECT
// -----  member variables  -----	WITHOUT_CLASSIFICATION	0.9999994378011423	WITHOUT_CLASSIFICATION	5.621988577222698E-7	DEFECT
// -----  member variables  -----	WITHOUT_CLASSIFICATION	0.9999994378011423	WITHOUT_CLASSIFICATION	5.621988577222698E-7	DEFECT
// -----  Algorithm-Configuration  -----	WITHOUT_CLASSIFICATION	0.9999257572872912	WITHOUT_CLASSIFICATION	7.424271270882586E-5	DEFECT
// -----  Algorithm-Configuration  -----	WITHOUT_CLASSIFICATION	0.9999257572872912	WITHOUT_CLASSIFICATION	7.424271270882586E-5	DEFECT
// -----  Logic  -----	WITHOUT_CLASSIFICATION	0.9999552762692054	WITHOUT_CLASSIFICATION	4.4723730794578896E-5	DEFECT
// -----  Logic  -----	WITHOUT_CLASSIFICATION	0.9999552762692054	WITHOUT_CLASSIFICATION	4.4723730794578896E-5	DEFECT
// implementation adapted from ...taskdefs.Checksum, thanks to Magesh for hint	WITHOUT_CLASSIFICATION	0.9999927909311092	WITHOUT_CLASSIFICATION	7.209068890722753E-6	DEFECT
// Read the file	WITHOUT_CLASSIFICATION	0.9999938438928506	WITHOUT_CLASSIFICATION	6.156107149291627E-6	DEFECT
// -----  member variables - configuration  -----	WITHOUT_CLASSIFICATION	0.9999974868038717	WITHOUT_CLASSIFICATION	2.513196128305676E-6	DEFECT
// -----  member variables - internal use  -----	WITHOUT_CLASSIFICATION	0.9999997705572792	WITHOUT_CLASSIFICATION	2.29442720808391E-7	DEFECT
// -----  Constructors  -----	WITHOUT_CLASSIFICATION	0.9999902737006005	WITHOUT_CLASSIFICATION	9.72629939948584E-6	DEFECT
// -----  Cache-Configuration  -----	WITHOUT_CLASSIFICATION	0.999948962581554	WITHOUT_CLASSIFICATION	5.1037418446103E-5	DEFECT
// -----  Data Access	WITHOUT_CLASSIFICATION	0.9999963065914284	WITHOUT_CLASSIFICATION	3.6934085716798044E-6	DEFECT
// after loading the cache is up to date with the file	WITHOUT_CLASSIFICATION	0.999986651705238	WITHOUT_CLASSIFICATION	1.3348294762011054E-5	DEFECT
// -----  additional  -----	WITHOUT_CLASSIFICATION	0.9999348834716865	WITHOUT_CLASSIFICATION	6.511652831355987E-5	DEFECT
// swallow as this simply doesn't seem to be Kaffe	WITHOUT_CLASSIFICATION	0.9999671992350294	WITHOUT_CLASSIFICATION	3.280076497053675E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999707121018232	WITHOUT_CLASSIFICATION	2.9287898176784134E-5	DEFECT
// find the line breaks and pass other chars through in blocks	WITHOUT_CLASSIFICATION	0.999988906903394	WITHOUT_CLASSIFICATION	1.1093096606011768E-5	DEFECT
// either end of buffer or a line separator char	WITHOUT_CLASSIFICATION	0.9999976375102171	WITHOUT_CLASSIFICATION	2.362489782999002E-6	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.998803732051834	WITHOUT_CLASSIFICATION	0.0011962679481660166	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999675172071433	WITHOUT_CLASSIFICATION	3.2482792856694074E-5	DEFECT
// Because the content is only read the file will not be damaged. I tested // with JPG, ZIP and PDF as binary files.	WITHOUT_CLASSIFICATION	0.9999510734979218	WITHOUT_CLASSIFICATION	4.892650207828956E-5	DEFECT
// don't need the opposite check as the Dictionaries have the // same size, so we've also covered all keys of d2 already.	WITHOUT_CLASSIFICATION	0.9999274730441198	WITHOUT_CLASSIFICATION	7.252695588025223E-5	DEFECT
//log uptodateness of all targets:	WITHOUT_CLASSIFICATION	0.9999438067224368	WITHOUT_CLASSIFICATION	5.6193277563183967E-5	DEFECT
// CheckStyle:ParameterNumberCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9999970108676833	WITHOUT_CLASSIFICATION	2.9891323165988195E-6	DEFECT
// this should not happen, because the lines are // returned with the end of line delimiter	WITHOUT_CLASSIFICATION	0.9999624135341949	WITHOUT_CLASSIFICATION	3.758646580499836E-5	DEFECT
// CheckStyle:ParameterNumberCheck ON	WITHOUT_CLASSIFICATION	0.9999965015685671	WITHOUT_CLASSIFICATION	3.498431432918474E-6	DEFECT
// two not existing files are equal	WITHOUT_CLASSIFICATION	0.999949858249192	WITHOUT_CLASSIFICATION	5.0141750808029904E-5	DEFECT
// should the following two be switched?  If r1 and r2 refer to the same file, // isn't their content equal regardless of whether that file is a directory?	WITHOUT_CLASSIFICATION	0.9999839268012689	WITHOUT_CLASSIFICATION	1.6073198731006654E-5	DEFECT
// don't want to compare directory contents for now	WITHOUT_CLASSIFICATION	0.9996741575385739	WITHOUT_CLASSIFICATION	3.258424614260807E-4	DEFECT
//as far as we know	WITHOUT_CLASSIFICATION	0.9998856683950689	WITHOUT_CLASSIFICATION	1.1433160493115562E-4	DEFECT
//ignore release of an already-closed funnel	WITHOUT_CLASSIFICATION	0.999883377127892	WITHOUT_CLASSIFICATION	1.166228721079938E-4	DEFECT
// Write child elements and text	WITHOUT_CLASSIFICATION	0.9999986242126664	WITHOUT_CLASSIFICATION	1.3757873335612543E-6	DEFECT
// Write indent characters	WITHOUT_CLASSIFICATION	0.9999972963411123	WITHOUT_CLASSIFICATION	2.703658887647845E-6	DEFECT
// Write element	WITHOUT_CLASSIFICATION	0.9999897642514352	WITHOUT_CLASSIFICATION	1.0235748564852788E-5	DEFECT
// steal default namespace	WITHOUT_CLASSIFICATION	0.9999989775639261	WITHOUT_CLASSIFICATION	1.0224360738180367E-6	DEFECT
// Write attributes	WITHOUT_CLASSIFICATION	0.999994975214648	WITHOUT_CLASSIFICATION	5.024785351942353E-6	DEFECT
// Write element close	WITHOUT_CLASSIFICATION	0.9999899532700416	WITHOUT_CLASSIFICATION	1.0046729958366827E-5	DEFECT
// relative path	WITHOUT_CLASSIFICATION	0.9999940458187744	WITHOUT_CLASSIFICATION	5.954181225664568E-6	DEFECT
// Fall tru	WITHOUT_CLASSIFICATION	0.9999064615649307	WITHOUT_CLASSIFICATION	9.35384350693076E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999675172071433	WITHOUT_CLASSIFICATION	3.2482792856694074E-5	DEFECT
// Determine the Java version by looking at available classes // java.net.Proxy was introduced in JDK 1.5 // java.lang.CharSequence was introduced in JDK 1.4 // java.lang.StrictMath was introduced in JDK 1.3 // java.lang.ThreadLocal was introduced in JDK 1.2 // java.lang.Void was introduced in JDK 1.1 // Count up version until a NoClassDefFoundError ends the try	WITHOUT_CLASSIFICATION	0.9999997408391127	WITHOUT_CLASSIFICATION	2.5916088732933466E-7	DEFECT
// swallow as we've hit the max class version that // we have	WITHOUT_CLASSIFICATION	0.9999615893135689	WITHOUT_CLASSIFICATION	3.841068643110508E-5	DEFECT
// Extrapolating from: // "NetWare may have a "java" in that directory, but 99% of // the time, you don't want to execute it" -- Jeff Tulley // <JTULLEY@novell.com>	WITHOUT_CLASSIFICATION	0.9933195131966964	WITHOUT_CLASSIFICATION	0.0066804868033036435	DEFECT
// On IBM's JDK 1.2 the directory layout is different, 1.3 follows // Sun's layout.	WITHOUT_CLASSIFICATION	0.9998742133268664	WITHOUT_CLASSIFICATION	1.257866731335481E-4	DEFECT
// On IBM's JDK 1.2 the directory layout is different, 1.3 follows // Sun's layout.	WITHOUT_CLASSIFICATION	0.9998742133268664	WITHOUT_CLASSIFICATION	1.257866731335481E-4	DEFECT
// Unfortunately on Windows java.home doesn't always refer // to the correct location, so we need to fall back to // assuming java is somewhere on the PATH.	WITHOUT_CLASSIFICATION	0.9975687479160997	WITHOUT_CLASSIFICATION	0.0024312520839001955	DEFECT
// fall back to JRE bin directory, also catches JDK 1.0 and 1.1 // where java.home points to the root of the JDK and Mac OS X where // the whole directory layout is different from Sun's	WITHOUT_CLASSIFICATION	0.9999852963924569	WITHOUT_CLASSIFICATION	1.4703607543102118E-5	DEFECT
// This is the most common extension case - exe for windows and OS/2, // nothing for *nix.	WITHOUT_CLASSIFICATION	0.9992181579094245	WITHOUT_CLASSIFICATION	7.818420905755365E-4	DEFECT
//In Java1.5, the apache stuff moved.	WITHOUT_CLASSIFICATION	0.9999909412169958	WITHOUT_CLASSIFICATION	9.058783004258598E-6	DEFECT
//fall through.	WITHOUT_CLASSIFICATION	0.9996055144701149	WITHOUT_CLASSIFICATION	3.9448552988505297E-4	DEFECT
// fall through	WITHOUT_CLASSIFICATION	0.999928500710001	WITHOUT_CLASSIFICATION	7.14992899990409E-5	DEFECT
// fall through	WITHOUT_CLASSIFICATION	0.999928500710001	WITHOUT_CLASSIFICATION	7.14992899990409E-5	DEFECT
// fall through	WITHOUT_CLASSIFICATION	0.999928500710001	WITHOUT_CLASSIFICATION	7.14992899990409E-5	DEFECT
// are there any here that we forgot? // fall through	WITHOUT_CLASSIFICATION	0.9999208953275484	WITHOUT_CLASSIFICATION	7.910467245155274E-5	DEFECT
//things like sun.reflection, sun.misc, sun.net	WITHOUT_CLASSIFICATION	0.9999065890935402	WITHOUT_CLASSIFICATION	9.341090645982298E-5	DEFECT
//things like sun.reflection, sun.misc, sun.net	WITHOUT_CLASSIFICATION	0.9999065890935402	WITHOUT_CLASSIFICATION	9.341090645982298E-5	DEFECT
//Strip '.' token	WITHOUT_CLASSIFICATION	0.9999122009696038	WITHOUT_CLASSIFICATION	8.779903039635572E-5	DEFECT
//If it ended in a dot, throw an exception	WITHOUT_CLASSIFICATION	0.9996496515395746	WITHOUT_CLASSIFICATION	3.503484604253857E-4	DEFECT
// Exact match	WITHOUT_CLASSIFICATION	0.9999677212207984	WITHOUT_CLASSIFICATION	3.227877920158588E-5	DEFECT
// Exact match	WITHOUT_CLASSIFICATION	0.9999677212207984	WITHOUT_CLASSIFICATION	3.227877920158588E-5	DEFECT
// Exact match	WITHOUT_CLASSIFICATION	0.9999677212207984	WITHOUT_CLASSIFICATION	3.227877920158588E-5	DEFECT
// might read too much	WITHOUT_CLASSIFICATION	0.9999803105604815	WITHOUT_CLASSIFICATION	1.9689439518418118E-5	DEFECT
// would be imprecise	WITHOUT_CLASSIFICATION	0.9999264394994051	WITHOUT_CLASSIFICATION	7.356050059498434E-5	DEFECT
//last character isn't a digit	WITHOUT_CLASSIFICATION	0.9999685322226562	WITHOUT_CLASSIFICATION	3.146777734374972E-5	DEFECT
// write out the number of characters encoded in this line.	WITHOUT_CLASSIFICATION	0.9999876929482076	WITHOUT_CLASSIFICATION	1.2307051792540886E-5	DEFECT
// set the padding defaults	WITHOUT_CLASSIFICATION	0.9999921795317928	WITHOUT_CLASSIFICATION	7.820468207259648E-6	DEFECT
// get the next 3 bytes (if we have them)	WITHOUT_CLASSIFICATION	0.9999953920816402	WITHOUT_CLASSIFICATION	4.607918359776669E-6	DEFECT
// OK, Java 1.3.	WITHOUT_CLASSIFICATION	0.9999883143330599	WITHOUT_CLASSIFICATION	1.168566694005464E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999707121018232	WITHOUT_CLASSIFICATION	2.9287898176784134E-5	DEFECT
// CheckStyle:ConstantNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9999788311965451	WITHOUT_CLASSIFICATION	2.116880345488347E-5	DEFECT
// CheckStyle:ConstantNameCheck ON	WITHOUT_CLASSIFICATION	0.9999715123245112	WITHOUT_CLASSIFICATION	2.848767548871894E-5	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.998803732051834	WITHOUT_CLASSIFICATION	0.0011962679481660166	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.998803732051834	WITHOUT_CLASSIFICATION	0.0011962679481660166	DEFECT
// #8031: first try Java 1.4.	WITHOUT_CLASSIFICATION	0.9999871632953632	WITHOUT_CLASSIFICATION	1.2836704636823101E-5	DEFECT
// Reflection problems? Should not happen, debug.	WITHOUT_CLASSIFICATION	0.9990178954401417	WITHOUT_CLASSIFICATION	9.821045598581964E-4	DEFECT
// CheckStyle:ParameterNumberCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9999970108676833	WITHOUT_CLASSIFICATION	2.9891323165988195E-6	DEFECT
// CheckStyle:ParameterNumberCheck ON	WITHOUT_CLASSIFICATION	0.9999965015685671	WITHOUT_CLASSIFICATION	3.498431432918474E-6	DEFECT
// depending on the implementation the actual RE won't // get instantiated in the constructor.	WITHOUT_CLASSIFICATION	0.9999830828067159	WITHOUT_CLASSIFICATION	1.691719328411756E-5	DEFECT
// terminate with a linefeed alone	WITHOUT_CLASSIFICATION	0.9999473392525076	WITHOUT_CLASSIFICATION	5.266074749233856E-5	DEFECT
// NotReached	WITHOUT_CLASSIFICATION	0.9999938572884418	WITHOUT_CLASSIFICATION	6.142711558178451E-6	DEFECT
//  0 to  7 //  8 to 15 // 16 to 23 // 24 to 31 // 32 to 39 // 40 to 47 // 48 to 55 // 56 to 63	WITHOUT_CLASSIFICATION	0.9999823924668431	WITHOUT_CLASSIFICATION	1.760753315694703E-5	DEFECT
// store the octets	WITHOUT_CLASSIFICATION	0.9999821992082578	WITHOUT_CLASSIFICATION	1.7800791742157854E-5	DEFECT
// store the octets	WITHOUT_CLASSIFICATION	0.9999821992082578	WITHOUT_CLASSIFICATION	1.7800791742157854E-5	DEFECT
// store the octets	WITHOUT_CLASSIFICATION	0.9999821992082578	WITHOUT_CLASSIFICATION	1.7800791742157854E-5	DEFECT
// padding	WITHOUT_CLASSIFICATION	0.9999289191104084	WITHOUT_CLASSIFICATION	7.108088959160737E-5	DEFECT
// padding	WITHOUT_CLASSIFICATION	0.9999289191104084	WITHOUT_CLASSIFICATION	7.108088959160737E-5	DEFECT
// magic property	WITHOUT_CLASSIFICATION	0.9999716455302258	WITHOUT_CLASSIFICATION	2.835446977423101E-5	DEFECT
//only text nodes that are non null after property expansion are added	WITHOUT_CLASSIFICATION	0.9997209276594858	WITHOUT_CLASSIFICATION	2.7907234051413214E-4	DEFECT
//no need to synchronize, as Vector is always synchronized	WITHOUT_CLASSIFICATION	0.9992441796148068	WITHOUT_CLASSIFICATION	7.558203851932344E-4	DEFECT
// do not close the stream	WITHOUT_CLASSIFICATION	0.9999504650479994	WITHOUT_CLASSIFICATION	4.95349520005535E-5	DEFECT
//Empty	WITHOUT_CLASSIFICATION	0.9993466289537497	WITHOUT_CLASSIFICATION	6.533710462503385E-4	DEFECT
//Empty	WITHOUT_CLASSIFICATION	0.9993466289537497	WITHOUT_CLASSIFICATION	6.533710462503385E-4	DEFECT
//get some non-crypto-grade randomness from various places.	WITHOUT_CLASSIFICATION	0.9999990183265023	WITHOUT_CLASSIFICATION	9.816734976991556E-7	DEFECT
// Cannot resolve it, so skip it.	WITHOUT_CLASSIFICATION	0.9999954626624431	WITHOUT_CLASSIFICATION	4.537337556958665E-6	DEFECT
// plain component	WITHOUT_CLASSIFICATION	0.999986696343583	WITHOUT_CLASSIFICATION	1.3303656417047502E-5	DEFECT
// make sure we are dealing with an absolute path	WITHOUT_CLASSIFICATION	0.999994211346509	WITHOUT_CLASSIFICATION	5.788653491004977E-6	DEFECT
//remove the initial separator; the root has it.	WITHOUT_CLASSIFICATION	0.9999237636062466	WITHOUT_CLASSIFICATION	7.623639375344148E-5	DEFECT
// UNC drive	WITHOUT_CLASSIFICATION	0.99998815435069	WITHOUT_CLASSIFICATION	1.1845649309996537E-5	DEFECT
// format: "DEVICE:[DIR.SUBDIR]FILE"	WITHOUT_CLASSIFICATION	0.999878566317626	WITHOUT_CLASSIFICATION	1.2143368237414227E-4	DEFECT
// treat directories specified using .DIR syntax as files	WITHOUT_CLASSIFICATION	0.9999783840716375	WITHOUT_CLASSIFICATION	2.1615928362570153E-5	DEFECT
// add an extra slash for filesystems with drive-specifiers	WITHOUT_CLASSIFICATION	0.9999956841105001	WITHOUT_CLASSIFICATION	4.31588949983227E-6	DEFECT
//do a check for the destination file existing	WITHOUT_CLASSIFICATION	0.9998795343547092	WITHOUT_CLASSIFICATION	1.2046564529066779E-4	DEFECT
// execute the script	WITHOUT_CLASSIFICATION	0.9999859521298413	WITHOUT_CLASSIFICATION	1.4047870158572795E-5	DEFECT
// do nothing by default	WITHOUT_CLASSIFICATION	0.9999833397574518	WITHOUT_CLASSIFICATION	1.666024254828919E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999707121018232	WITHOUT_CLASSIFICATION	2.9287898176784134E-5	DEFECT
// NotReached	WITHOUT_CLASSIFICATION	0.9999938572884418	WITHOUT_CLASSIFICATION	6.142711558178451E-6	DEFECT
// now recover all the dependencies collected and add to the list.	WITHOUT_CLASSIFICATION	0.9999977785535412	WITHOUT_CLASSIFICATION	2.2214464588105574E-6	DEFECT
//inherit doc	WITHOUT_CLASSIFICATION	0.9996261565830213	WITHOUT_CLASSIFICATION	3.73843416978754E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999675172071433	WITHOUT_CLASSIFICATION	3.2482792856694074E-5	DEFECT
// NotReached	WITHOUT_CLASSIFICATION	0.9999938572884418	WITHOUT_CLASSIFICATION	6.142711558178451E-6	DEFECT
// do not close the stream	WITHOUT_CLASSIFICATION	0.9999504650479994	WITHOUT_CLASSIFICATION	4.95349520005535E-5	DEFECT
// on cygwin, our current directory can be a UNC; // assume user.dir is absolute or all hell breaks loose...	WITHOUT_CLASSIFICATION	0.9999148430647389	WITHOUT_CLASSIFICATION	8.515693526106527E-5	DEFECT
// not before the filesystem root and not after it, since root // already contains one	WITHOUT_CLASSIFICATION	0.999971853700353	WITHOUT_CLASSIFICATION	2.8146299646996026E-5	DEFECT
// ensure that l ends with a / // so we never think /foo was a parent directory of /foobar	WITHOUT_CLASSIFICATION	0.9999466639111659	WITHOUT_CLASSIFICATION	5.333608883398198E-5	DEFECT
// ensure that l ends with a / // so we never think /foo was a parent directory of /foobar	WITHOUT_CLASSIFICATION	0.9999466639111659	WITHOUT_CLASSIFICATION	5.333608883398198E-5	DEFECT
// build the path stack info to compare	WITHOUT_CLASSIFICATION	0.999901192212229	WITHOUT_CLASSIFICATION	9.880778777108954E-5	DEFECT
// not the same device (would be "" on Linux/Unix)	WITHOUT_CLASSIFICATION	0.9999629671816695	WITHOUT_CLASSIFICATION	3.703281833039088E-5	DEFECT
// no comparison possible	WITHOUT_CLASSIFICATION	0.9999954796163	WITHOUT_CLASSIFICATION	4.5203837000833655E-6	DEFECT
// get index of parts which are equal	WITHOUT_CLASSIFICATION	0.9999429195805107	WITHOUT_CLASSIFICATION	5.7080419489366226E-5	DEFECT
// if "from" part is longer, fill it up with ".." // to reach path which is equal to both paths	WITHOUT_CLASSIFICATION	0.9999855774280438	WITHOUT_CLASSIFICATION	1.4422571956176528E-5	DEFECT
// fill it up path with parts which were not equal	WITHOUT_CLASSIFICATION	0.9999186861108575	WITHOUT_CLASSIFICATION	8.131388914246438E-5	DEFECT
// can safely use '/' because Windows understands '/' as separator	WITHOUT_CLASSIFICATION	0.9999704097243024	WITHOUT_CLASSIFICATION	2.959027569759943E-5	DEFECT
// base directory of the fileset	WITHOUT_CLASSIFICATION	0.9999286160169472	WITHOUT_CLASSIFICATION	7.138398305277898E-5	DEFECT
// build the list of sources which are out of date with // respect to the target	WITHOUT_CLASSIFICATION	0.9999851610759963	WITHOUT_CLASSIFICATION	1.4838924003739452E-5	DEFECT
// code from Magesh moved from DefaultLogger and slightly modified	WITHOUT_CLASSIFICATION	0.9999942097932027	WITHOUT_CLASSIFICATION	5.790206797217789E-6	DEFECT
//if you cannot read it, you won't be able to write it either	WITHOUT_CLASSIFICATION	0.9992843926623274	WITHOUT_CLASSIFICATION	7.156073376725137E-4	DEFECT
// must be a zip of some sort	WITHOUT_CLASSIFICATION	0.9999988324919445	WITHOUT_CLASSIFICATION	1.1675080554150266E-6	DEFECT
// does the class have a package structure	WITHOUT_CLASSIFICATION	0.9999894929311376	WITHOUT_CLASSIFICATION	1.0507068862324605E-5	DEFECT
// check if the package structure is more than 1 level deep	WITHOUT_CLASSIFICATION	0.9999974584261967	WITHOUT_CLASSIFICATION	2.541573803337185E-6	DEFECT
// class name has more than 1 package level 'com.company.Class'	WITHOUT_CLASSIFICATION	0.9999985298238825	WITHOUT_CLASSIFICATION	1.4701761174576394E-6	DEFECT
// class name has only 1 package level 'package.Class'	WITHOUT_CLASSIFICATION	0.9999918364462842	WITHOUT_CLASSIFICATION	8.163553715794832E-6	DEFECT
// Add the class in dotted notation 'com.company.Class'	WITHOUT_CLASSIFICATION	0.9998873597268533	WITHOUT_CLASSIFICATION	1.126402731467057E-4	DEFECT
// Add a class with no package 'Class'	WITHOUT_CLASSIFICATION	0.999989151727854	WITHOUT_CLASSIFICATION	1.084827214601178E-5	DEFECT
// force BCEL classes to load now	WITHOUT_CLASSIFICATION	0.9999917039687444	WITHOUT_CLASSIFICATION	8.29603125567979E-6	DEFECT
// force BCEL classes to load now	WITHOUT_CLASSIFICATION	0.9999917039687444	WITHOUT_CLASSIFICATION	8.29603125567979E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999707121018232	WITHOUT_CLASSIFICATION	2.9287898176784134E-5	DEFECT
// NotReached	WITHOUT_CLASSIFICATION	0.9999938572884418	WITHOUT_CLASSIFICATION	6.142711558178451E-6	DEFECT
// we get the root classes and build up a set of // classes upon which they depend	WITHOUT_CLASSIFICATION	0.9999761851907947	WITHOUT_CLASSIFICATION	2.381480920525899E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999675172071433	WITHOUT_CLASSIFICATION	3.2482792856694074E-5	DEFECT
// execute the script	WITHOUT_CLASSIFICATION	0.9999859521298413	WITHOUT_CLASSIFICATION	1.4047870158572795E-5	DEFECT
//log security exceptions and continue; it aint that //important and may be quite common running Ant embedded.	WITHOUT_CLASSIFICATION	0.9999273328262572	WITHOUT_CLASSIFICATION	7.26671737427434E-5	DEFECT
// we look through the classpath elements. If the element is a dir // we look for the file. IF it is a zip, we look for the zip entry	WITHOUT_CLASSIFICATION	0.9999933918825407	WITHOUT_CLASSIFICATION	6.608117459333475E-6	DEFECT
// we look through the source path elements. If the element is a dir // we look for the file. If it is a zip, we look for the zip entry. // This isn't normal for source paths but we get it for free	WITHOUT_CLASSIFICATION	0.9990567755290007	WITHOUT_CLASSIFICATION	9.432244709993119E-4	DEFECT
// first letter of the previous segment of the class name 'Class' // is upper case ascii. so according to the spec it's an inner class	WITHOUT_CLASSIFICATION	0.9999990030048566	WITHOUT_CLASSIFICATION	9.969951434347223E-7	DEFECT
// Register Groovy ourselves, since BSF did not // natively support it in versions previous to 1.2.4.	WITHOUT_CLASSIFICATION	0.9999928896934335	WITHOUT_CLASSIFICATION	7.110306566544844E-6	DEFECT
// execute the script	WITHOUT_CLASSIFICATION	0.9999859521298413	WITHOUT_CLASSIFICATION	1.4047870158572795E-5	DEFECT
// translate \1 to $1 so that the Perl5Substitution will work	WITHOUT_CLASSIFICATION	0.9994227755554993	WITHOUT_CLASSIFICATION	5.772244445006928E-4	DEFECT
// BSF uses a hashtable to store values // so cannot declareBean with a null value // So need to remove any bean of this name as // that bean should not be visible	WITHOUT_CLASSIFICATION	0.9999477921411375	WITHOUT_CLASSIFICATION	5.220785886248662E-5	DEFECT
// no permission here	WITHOUT_CLASSIFICATION	0.9998899867254232	WITHOUT_CLASSIFICATION	1.1001327457685026E-4	DEFECT
// compute the compiler options based on the input options first	WITHOUT_CLASSIFICATION	0.9999953058548662	WITHOUT_CLASSIFICATION	4.694145133918932E-6	DEFECT
// treat non-matching groups as empty matches	WITHOUT_CLASSIFICATION	0.9999901006211983	WITHOUT_CLASSIFICATION	9.899378801725951E-6	DEFECT
// be strict about line separator	WITHOUT_CLASSIFICATION	0.9999994157026512	WITHOUT_CLASSIFICATION	5.842973488377088E-7	DEFECT
// translate \1 to $(1) so that the Matcher will work	WITHOUT_CLASSIFICATION	0.9999266285822243	WITHOUT_CLASSIFICATION	7.337141777580752E-5	DEFECT
// Do the substitution	WITHOUT_CLASSIFICATION	0.9998576391207237	WITHOUT_CLASSIFICATION	1.4236087927633256E-4	DEFECT
// replace \1 with the corresponding group	WITHOUT_CLASSIFICATION	0.9998004878430787	WITHOUT_CLASSIFICATION	1.9951215692139298E-4	DEFECT
/*     * Used when sorting.  If too many long comparisons     * happen, we stop sorting, randomise the block     * slightly, and try again.     */	WITHOUT_CLASSIFICATION	0.9999612163143284	WITHOUT_CLASSIFICATION	3.878368567163617E-5	DEFECT
/*          Nodes and heap entries run from 1.  Entry 0          for both the heap and nodes is a sentinel.        */	WITHOUT_CLASSIFICATION	0.9999931323045803	WITHOUT_CLASSIFICATION	6.8676954198031345E-6	DEFECT
/*          Nodes and heap entries run from 1.  Entry 0          for both the heap and nodes is a sentinel.        */	WITHOUT_CLASSIFICATION	0.9999931323045803	WITHOUT_CLASSIFICATION	6.8676954198031345E-6	DEFECT
//        blockNo++;	WITHOUT_CLASSIFICATION	0.9998314013426809	WITHOUT_CLASSIFICATION	1.6859865731915034E-4	DEFECT
// // When we get here we have EITHER: // o An empty "assemble" buffer. // o No bytes to write (numToWrite == 0) //	WITHOUT_CLASSIFICATION	0.9999124623039585	WITHOUT_CLASSIFICATION	8.753769604147436E-5	DEFECT
/* Write `magic' bytes h indicating file-format == huffmanised,           followed by a digit indicating blockSize100k.        */	WITHOUT_CLASSIFICATION	0.9999984467154742	WITHOUT_CLASSIFICATION	1.553284525760973E-6	DEFECT
//        ch = 0;	WITHOUT_CLASSIFICATION	0.9999301949421872	WITHOUT_CLASSIFICATION	6.98050578128025E-5	DEFECT
/* 20 is just a paranoia constant */	WITHOUT_CLASSIFICATION	0.9999984358033519	WITHOUT_CLASSIFICATION	1.5641966480819637E-6	DEFECT
// empty block at end of file	WITHOUT_CLASSIFICATION	0.999942309246981	WITHOUT_CLASSIFICATION	5.769075301912605E-5	DEFECT
/* sort the block and establish posn of original string */	WITHOUT_CLASSIFICATION	0.9999602929723616	WITHOUT_CLASSIFICATION	3.970702763845517E-5	DEFECT
/* Now the block's CRC, so it is in a known place. */	WITHOUT_CLASSIFICATION	0.9999961444081595	WITHOUT_CLASSIFICATION	3.855591840416465E-6	DEFECT
/* Now a single bit indicating randomisation. */	WITHOUT_CLASSIFICATION	0.9999822239406655	WITHOUT_CLASSIFICATION	1.777605933455172E-5	DEFECT
/* Finally, block's contents proper. */	WITHOUT_CLASSIFICATION	0.9998103211943336	WITHOUT_CLASSIFICATION	1.8967880566644687E-4	DEFECT
/*          Now another magic 48-bit number, 0x177245385090, to          indicate the end of the last block.  (sqrt(pi), if          you want to know.  I did want to use e, but it contains          too much repetition -- 27 18 28 18 28 46 -- for me          to feel statistically comfortable.  Call me paranoid.)        */	WITHOUT_CLASSIFICATION	0.999998898277545	WITHOUT_CLASSIFICATION	1.1017224550187144E-6	DEFECT
// write 8-bit	WITHOUT_CLASSIFICATION	0.9999657049437797	WITHOUT_CLASSIFICATION	3.429505622021446E-5	DEFECT
// write 8-bit	WITHOUT_CLASSIFICATION	0.9999657049437797	WITHOUT_CLASSIFICATION	3.429505622021446E-5	DEFECT
// write 8-bit	WITHOUT_CLASSIFICATION	0.9999657049437797	WITHOUT_CLASSIFICATION	3.429505622021446E-5	DEFECT
// write 8-bit	WITHOUT_CLASSIFICATION	0.9999657049437797	WITHOUT_CLASSIFICATION	3.429505622021446E-5	DEFECT
// write 8-bit	WITHOUT_CLASSIFICATION	0.9999657049437797	WITHOUT_CLASSIFICATION	3.429505622021446E-5	DEFECT
// write 8-bit	WITHOUT_CLASSIFICATION	0.9999657049437797	WITHOUT_CLASSIFICATION	3.429505622021446E-5	DEFECT
/* Decide how many coding tables to use */	WITHOUT_CLASSIFICATION	0.9998724039844367	WITHOUT_CLASSIFICATION	1.2759601556333166E-4	DEFECT
/* Generate an initial set of coding tables */	WITHOUT_CLASSIFICATION	0.9999888275529947	WITHOUT_CLASSIFICATION	1.1172447005218037E-5	DEFECT
/*          Iterate up to N_ITERS times to improve the tables.        */	WITHOUT_CLASSIFICATION	0.9999985964735194	WITHOUT_CLASSIFICATION	1.4035264805735488E-6	DEFECT
/* Compute MTF values for the selectors. */	WITHOUT_CLASSIFICATION	0.9999992888223698	WITHOUT_CLASSIFICATION	7.111776302808284E-7	DEFECT
/* Assign actual codes for the tables. */	WITHOUT_CLASSIFICATION	0.9999156142301491	WITHOUT_CLASSIFICATION	8.43857698508638E-5	DEFECT
/* Transmit the mapping table. */	WITHOUT_CLASSIFICATION	0.9999918979007083	WITHOUT_CLASSIFICATION	8.102099291681901E-6	DEFECT
/* Now the selectors. */	WITHOUT_CLASSIFICATION	0.999968974675913	WITHOUT_CLASSIFICATION	3.1025324086967646E-5	DEFECT
/* Now the coding tables. */	WITHOUT_CLASSIFICATION	0.9999549148055381	WITHOUT_CLASSIFICATION	4.508519446196412E-5	DEFECT
/* And finally, the block data proper */	WITHOUT_CLASSIFICATION	0.9990796213335271	WITHOUT_CLASSIFICATION	9.203786664728445E-4	DEFECT
/* Set group start & end marks. */	WITHOUT_CLASSIFICATION	0.999980830544012	WITHOUT_CLASSIFICATION	1.916945598798792E-5	DEFECT
/*                  Calculate the cost of this group as coded                  by each of the coding tables.                */	WITHOUT_CLASSIFICATION	0.9999514378203407	WITHOUT_CLASSIFICATION	4.856217965922252E-5	DEFECT
// unrolled version of the else-block	WITHOUT_CLASSIFICATION	0.9999721789450484	WITHOUT_CLASSIFICATION	2.7821054951649798E-5	DEFECT
/*                  Find the coding table which is best for this group,                  and record its identity in the selector table.                */	WITHOUT_CLASSIFICATION	0.9999272864591817	WITHOUT_CLASSIFICATION	7.271354081829724E-5	DEFECT
/*                  Increment the symbol frequencies for the selected table.                */	WITHOUT_CLASSIFICATION	0.9999799897727993	WITHOUT_CLASSIFICATION	2.0010227200669882E-5	DEFECT
/*              Recompute the tables based on the accumulated frequencies.            */	WITHOUT_CLASSIFICATION	0.9999789482164738	WITHOUT_CLASSIFICATION	2.1051783526101638E-5	DEFECT
// inlined: bsW(1, inUse[i16 + j] ? 1 : 0);	WITHOUT_CLASSIFICATION	0.9999972216573717	WITHOUT_CLASSIFICATION	2.778342628179364E-6	DEFECT
// inlined: bsW(1, 1);	WITHOUT_CLASSIFICATION	0.9999733757144103	WITHOUT_CLASSIFICATION	2.662428558986212E-5	DEFECT
// inlined: bsW(1, 0);	WITHOUT_CLASSIFICATION	0.9999793063923965	WITHOUT_CLASSIFICATION	2.069360760351627E-5	DEFECT
// inlined: bsW(1, 0);	WITHOUT_CLASSIFICATION	0.9999793063923965	WITHOUT_CLASSIFICATION	2.069360760351627E-5	DEFECT
//bsBuffShadow |= 0 << (32 - bsLiveShadow - 1);	WITHOUT_CLASSIFICATION	0.999982982018565	WITHOUT_CLASSIFICATION	1.701798143510143E-5	DEFECT
// inlined: bsW(5, curr);	WITHOUT_CLASSIFICATION	0.999975248671865	WITHOUT_CLASSIFICATION	2.475132813485582E-5	DEFECT
// inlined: bsW(2, 2);	WITHOUT_CLASSIFICATION	0.9999766281369481	WITHOUT_CLASSIFICATION	2.3371863051850503E-5	DEFECT
/* 10 */	WITHOUT_CLASSIFICATION	0.9999246219701637	WITHOUT_CLASSIFICATION	7.537802983626524E-5	DEFECT
// inlined: bsW(2, 3);	WITHOUT_CLASSIFICATION	0.9999792717623812	WITHOUT_CLASSIFICATION	2.072823761885169E-5	DEFECT
/* 11 */	WITHOUT_CLASSIFICATION	0.9999161976367463	WITHOUT_CLASSIFICATION	8.380236325373229E-5	DEFECT
// copy	WITHOUT_CLASSIFICATION	0.9998770787962568	WITHOUT_CLASSIFICATION	1.2292120374322247E-4	DEFECT
// start inline mainGTU	WITHOUT_CLASSIFICATION	0.9999976464986073	WITHOUT_CLASSIFICATION	2.353501392589981E-6	DEFECT
// following could be done in a loop, but // unrolled it for performance:	WITHOUT_CLASSIFICATION	0.999846982940881	WITHOUT_CLASSIFICATION	1.5301705911903806E-4	DEFECT
// while x > 0	WITHOUT_CLASSIFICATION	0.9999650730140657	WITHOUT_CLASSIFICATION	3.4926985934363405E-5	DEFECT
// Set up the 2-byte frequency table	WITHOUT_CLASSIFICATION	0.9999894061988899	WITHOUT_CLASSIFICATION	1.0593801110215883E-5	DEFECT
/*          In the various block-sized structures, live data runs          from 0 to last+NUM_OVERSHOOT_BYTES inclusive.  First,          set up the overshoot area for block.        */	WITHOUT_CLASSIFICATION	0.9999998424013553	WITHOUT_CLASSIFICATION	1.575986448087171E-7	DEFECT
// Complete the initial radix sort:	WITHOUT_CLASSIFICATION	0.9999984519079635	WITHOUT_CLASSIFICATION	1.548092036476282E-6	DEFECT
/*              Now ftab contains the first loc of every small bucket.              Calculate the running order, from smallest to largest              big bucket.        */	WITHOUT_CLASSIFICATION	0.9999895748544588	WITHOUT_CLASSIFICATION	1.0425145541217195E-5	DEFECT
/*              The main sorting loop.        */	WITHOUT_CLASSIFICATION	0.9999847946989262	WITHOUT_CLASSIFICATION	1.5205301073718966E-5	DEFECT
/*                  Process big buckets, starting with the least full.            */	WITHOUT_CLASSIFICATION	0.9999968195415896	WITHOUT_CLASSIFICATION	3.1804584104636662E-6	DEFECT
// Step 1:	WITHOUT_CLASSIFICATION	0.999942899026375	WITHOUT_CLASSIFICATION	5.710097362494917E-5	DEFECT
// Step 3:	WITHOUT_CLASSIFICATION	0.9999482268276453	WITHOUT_CLASSIFICATION	5.177317235460879E-5	DEFECT
// handle 16 bit signed numbers	WITHOUT_CLASSIFICATION	0.9999963562928098	WITHOUT_CLASSIFICATION	3.643707190245265E-6	DEFECT
// make maps	WITHOUT_CLASSIFICATION	0.9999917934087281	WITHOUT_CLASSIFICATION	8.20659127183607E-6	DEFECT
/* directory with respect to       */	WITHOUT_CLASSIFICATION	0.9994953061006551	WITHOUT_CLASSIFICATION	5.046938993449319E-4	DEFECT
// with blockSize 900k //     256 byte //     256 byte //    1032 byte //   18002 byte //   18002 byte	WITHOUT_CLASSIFICATION	0.9999452651261898	WITHOUT_CLASSIFICATION	5.4734873810160644E-5	DEFECT
//     256 byte //    1548 byte //    6192 byte //      24 byte //      12 byte //    6192 byte //       6 byte //      16 byte	WITHOUT_CLASSIFICATION	0.999983911315639	WITHOUT_CLASSIFICATION	1.6088684360934773E-5	DEFECT
//    4000 byte //    4000 byte //    4000 byte	WITHOUT_CLASSIFICATION	0.9999599967933839	WITHOUT_CLASSIFICATION	4.0003206616114154E-5	DEFECT
//    1024 byte //    1024 byte //     256 byte	WITHOUT_CLASSIFICATION	0.9999760917432354	WITHOUT_CLASSIFICATION	2.3908256764518696E-5	DEFECT
//    1040 byte //    2064 byte //    2064 byte	WITHOUT_CLASSIFICATION	0.9999778152975531	WITHOUT_CLASSIFICATION	2.2184702446868576E-5	DEFECT
//  262148 byte // ------------ //  333408 byte	WITHOUT_CLASSIFICATION	0.9999845305480862	WITHOUT_CLASSIFICATION	1.5469451913741556E-5	DEFECT
// Just print a message, like the previous versions of this class did	WITHOUT_CLASSIFICATION	0.9999983238153304	WITHOUT_CLASSIFICATION	1.6761846696412468E-6	DEFECT
// Variables used by setup* methods exclusively	WITHOUT_CLASSIFICATION	0.9999998886586381	WITHOUT_CLASSIFICATION	1.1134136185774667E-7	DEFECT
// currBlockNo++;	WITHOUT_CLASSIFICATION	0.9998958980606812	WITHOUT_CLASSIFICATION	1.0410193931872828E-4	DEFECT
// A bad CRC is considered a fatal error.	WITHOUT_CLASSIFICATION	0.9999899797545774	WITHOUT_CLASSIFICATION	1.0020245422503892E-5	DEFECT
/* Receive the mapping table */	WITHOUT_CLASSIFICATION	0.9999964583146642	WITHOUT_CLASSIFICATION	3.5416853357188364E-6	DEFECT
/* Now the selectors */	WITHOUT_CLASSIFICATION	0.9999705808146244	WITHOUT_CLASSIFICATION	2.9419185375543394E-5	DEFECT
/* Undo the MTF values for the selectors. */	WITHOUT_CLASSIFICATION	0.9999957780181874	WITHOUT_CLASSIFICATION	4.221981812618922E-6	DEFECT
// nearly all times v is zero, 4 in most other cases	WITHOUT_CLASSIFICATION	0.9999915321351102	WITHOUT_CLASSIFICATION	8.467864889721487E-6	DEFECT
/* Now the coding tables */	WITHOUT_CLASSIFICATION	0.9999617620437405	WITHOUT_CLASSIFICATION	3.823795625956377E-5	DEFECT
// finally create the Huffman tables	WITHOUT_CLASSIFICATION	0.999990880693344	WITHOUT_CLASSIFICATION	9.119306656109431E-6	DEFECT
// end of file // '1' // ')' // 'Y' // '&' // 'S' // 'Y'	WITHOUT_CLASSIFICATION	0.9999639988762696	WITHOUT_CLASSIFICATION	3.6001123730437926E-5	DEFECT
// Inlined: // int zvec = bsR(zn);	WITHOUT_CLASSIFICATION	0.9999878323763527	WITHOUT_CLASSIFICATION	1.2167623647341232E-5	DEFECT
// Inlined: // int zvec = bsR(zn);	WITHOUT_CLASSIFICATION	0.9999878323763527	WITHOUT_CLASSIFICATION	1.2167623647341232E-5	DEFECT
/*                  This loop is hammered during decompression,                  hence avoid native method call overhead of                  System.arraycopy for very small ranges to copy.                */	WITHOUT_CLASSIFICATION	0.9999679506370944	WITHOUT_CLASSIFICATION	3.2049362905610915E-5	DEFECT
/* not a char and not EOF */	WITHOUT_CLASSIFICATION	0.9999377399139782	WITHOUT_CLASSIFICATION	6.226008602182534E-5	DEFECT
// (with blockSize 900k) //      256 byte	WITHOUT_CLASSIFICATION	0.9999827634735367	WITHOUT_CLASSIFICATION	1.7236526463394823E-5	DEFECT
//     1024 byte	WITHOUT_CLASSIFICATION	0.9999613037906623	WITHOUT_CLASSIFICATION	3.8696209337718455E-5	DEFECT
// No need to keep track of Bcc'd addresses	WITHOUT_CLASSIFICATION	0.9999832620678983	WITHOUT_CLASSIFICATION	1.6737932101579808E-5	DEFECT
// Blindly trust the user doesn't set any invalid headers	WITHOUT_CLASSIFICATION	0.9999951765579904	WITHOUT_CLASSIFICATION	4.823442009565286E-6	DEFECT
// RFC 822 s4.1: "Reply-To:" header is optional	WITHOUT_CLASSIFICATION	0.9999872020388556	WITHOUT_CLASSIFICATION	1.279796114442885E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999707121018232	WITHOUT_CLASSIFICATION	2.9287898176784134E-5	DEFECT
// Mac does \n\r, but that's tough to distinguish from Windows \r\n\r\n. // Don't tackle that problem right now.	WITHOUT_CLASSIFICATION	0.9977531104613553	WITHOUT_CLASSIFICATION	0.002246889538644633	DEFECT
// support "address (name)"	WITHOUT_CLASSIFICATION	0.999992660455042	WITHOUT_CLASSIFICATION	7.339544957990103E-6	DEFECT
// support "(name) address"	WITHOUT_CLASSIFICATION	0.9999913887434162	WITHOUT_CLASSIFICATION	8.611256583816254E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999675172071433	WITHOUT_CLASSIFICATION	3.2482792856694074E-5	DEFECT
//      256 byte //    18002 byte //    18002 byte	WITHOUT_CLASSIFICATION	0.999974967205721	WITHOUT_CLASSIFICATION	2.5032794278978306E-5	DEFECT
//     6192 byte //     6192 byte //     6192 byte //       24 byte	WITHOUT_CLASSIFICATION	0.9999729544192454	WITHOUT_CLASSIFICATION	2.7045580754640385E-5	DEFECT
//     1028 byte //      512 byte //     3096 byte //        6 byte //--------------- //    60798 byte	WITHOUT_CLASSIFICATION	0.9999823137824163	WITHOUT_CLASSIFICATION	1.768621758360441E-5	DEFECT
//  3600000 byte //   900000 byte //--------------- //  4560782 byte //===============	WITHOUT_CLASSIFICATION	0.9999942763291577	WITHOUT_CLASSIFICATION	5.7236708422110245E-6	DEFECT
// RFC 822 s4.1: "From:" header must be sent // We rely on error checking by the MTA	WITHOUT_CLASSIFICATION	0.9997229958347483	WITHOUT_CLASSIFICATION	2.770041652515809E-4	DEFECT
// RFC 822 s4.1: //   "Header fields are NOT required to occur in any particular order, //    except that the message body MUST occur AFTER the headers" // (the same section specifies a reccommended order, which we ignore)	WITHOUT_CLASSIFICATION	0.9999749932697023	WITHOUT_CLASSIFICATION	2.5006730297647582E-5	DEFECT
// Make a limited attempt to extract a sanitized email address // Prefer text in <brackets>, ignore anything in (parentheses)	WITHOUT_CLASSIFICATION	0.9999799261034541	WITHOUT_CLASSIFICATION	2.007389654591548E-5	DEFECT
// * * * * * Raw protocol methods below here * * * * *	WITHOUT_CLASSIFICATION	0.999986294623083	WITHOUT_CLASSIFICATION	1.3705376917085405E-5	DEFECT
// make sure dot is on new line	WITHOUT_CLASSIFICATION	0.9999668133683735	WITHOUT_CLASSIFICATION	3.3186631626459953E-5	DEFECT
// raw supports <CRLF>.<CRLF>	WITHOUT_CLASSIFICATION	0.9999916222250783	WITHOUT_CLASSIFICATION	8.377774921673501E-6	DEFECT
// Check that the response is one of the valid codes	WITHOUT_CLASSIFICATION	0.9999849350969099	WITHOUT_CLASSIFICATION	1.5064903090173105E-5	DEFECT
// deprecated, but email is byte-oriented	WITHOUT_CLASSIFICATION	0.9999885773148489	WITHOUT_CLASSIFICATION	1.1422685151020368E-5	DEFECT
// ensure always \r\n	WITHOUT_CLASSIFICATION	0.9999820747079471	WITHOUT_CLASSIFICATION	1.7925292052815507E-5	DEFECT
// Mac does \n\r, but that's tough to distinguish from Windows \r\n\r\n. // Don't tackle that problem right now.	WITHOUT_CLASSIFICATION	0.9977531104613553	WITHOUT_CLASSIFICATION	0.002246889538644633	DEFECT
// add extra dot	WITHOUT_CLASSIFICATION	0.9999894361472818	WITHOUT_CLASSIFICATION	1.0563852718297398E-5	DEFECT
// add extra dot	WITHOUT_CLASSIFICATION	0.9999894361472818	WITHOUT_CLASSIFICATION	1.0563852718297398E-5	DEFECT
// ensure always \r\n	WITHOUT_CLASSIFICATION	0.9999820747079471	WITHOUT_CLASSIFICATION	1.7925292052815507E-5	DEFECT
// UNDONE	WITHOUT_CLASSIFICATION	0.9997602784297835	WITHOUT_CLASSIFICATION	2.3972157021657234E-4	DEFECT
// create a TarEntry for the LongLink, the contents // of which are the entry's name	WITHOUT_CLASSIFICATION	0.9999721031919723	WITHOUT_CLASSIFICATION	2.7896808027760253E-5	DEFECT
// Strip off drive letters! // REVIEW Would a better check be "(File.separator == '\')"?	WITHOUT_CLASSIFICATION	0.9999996082930805	WITHOUT_CLASSIFICATION	3.917069194532761E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999675172071433	WITHOUT_CLASSIFICATION	3.2482792856694074E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999675172071433	WITHOUT_CLASSIFICATION	3.2482792856694074E-5	DEFECT
// No absolute pathnames // Windows (and Posix?) paths can start with "\\NetworkDrive\", // so we loop on starting /'s.	WITHOUT_CLASSIFICATION	0.9999852131875332	WITHOUT_CLASSIFICATION	1.4786812466768065E-5	DEFECT
/* start of the central directory  */	WITHOUT_CLASSIFICATION	0.9999538579974295	WITHOUT_CLASSIFICATION	4.614200257055418E-5	DEFECT
// REVIEW // This is horribly inefficient, but it ensures that we // properly skip over bytes via the TarBuffer... //	WITHOUT_CLASSIFICATION	0.9998686762488341	WITHOUT_CLASSIFICATION	1.313237511659381E-4	DEFECT
// read in the name	WITHOUT_CLASSIFICATION	0.9999931411699547	WITHOUT_CLASSIFICATION	6.858830045246487E-6	DEFECT
// remove trailing null terminator	WITHOUT_CLASSIFICATION	0.9999575674795312	WITHOUT_CLASSIFICATION	4.2432520468737806E-5	DEFECT
// Unexpected EOF!	WITHOUT_CLASSIFICATION	0.9999778175257181	WITHOUT_CLASSIFICATION	2.218247428189856E-5	DEFECT
// ---------------------------------------------------------- // somewhat arbitrary choices that are quite common for shared // installations // -----------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999927313694	WITHOUT_CLASSIFICATION	7.268630599890361E-6	DEFECT
/* method is STORED and we used RandomAccessFile */	WITHOUT_CLASSIFICATION	0.9999997144043726	WITHOUT_CLASSIFICATION	2.8559562741647417E-7	DEFECT
// If random access output, write the local file header containing // the correct CRC and compressed/uncompressed sizes	WITHOUT_CLASSIFICATION	0.9999965894194152	WITHOUT_CLASSIFICATION	3.410580584827909E-6	DEFECT
// not specified	WITHOUT_CLASSIFICATION	0.9999541212379788	WITHOUT_CLASSIFICATION	4.5878762021257343E-5	DEFECT
// not specified	WITHOUT_CLASSIFICATION	0.9999541212379788	WITHOUT_CLASSIFICATION	4.5878762021257343E-5	DEFECT
// Size/CRC not required if RandomAccessFile is used	WITHOUT_CLASSIFICATION	0.9999963069782375	WITHOUT_CLASSIFICATION	3.6930217623550326E-6	DEFECT
/*     * Various ZIP constants     */	WITHOUT_CLASSIFICATION	0.999973268871844	WITHOUT_CLASSIFICATION	2.6731128155938476E-5	DEFECT
//store method in local variable to prevent multiple method calls	WITHOUT_CLASSIFICATION	0.999998796819791	WITHOUT_CLASSIFICATION	1.203180208999204E-6	DEFECT
// bit3 set to signal, we use a data descriptor	WITHOUT_CLASSIFICATION	0.9999966847844695	WITHOUT_CLASSIFICATION	3.315215530465693E-6	DEFECT
// bit3 set to signal, we use a data descriptor	WITHOUT_CLASSIFICATION	0.9999966847844695	WITHOUT_CLASSIFICATION	3.315215530465693E-6	DEFECT
// compression method	WITHOUT_CLASSIFICATION	0.9999882456216512	WITHOUT_CLASSIFICATION	1.1754378348776728E-5	DEFECT
// compression method	WITHOUT_CLASSIFICATION	0.9999882456216512	WITHOUT_CLASSIFICATION	1.1754378348776728E-5	DEFECT
// last mod. time and date	WITHOUT_CLASSIFICATION	0.9999951370648344	WITHOUT_CLASSIFICATION	4.862935165561146E-6	DEFECT
// file name length	WITHOUT_CLASSIFICATION	0.9999966602322281	WITHOUT_CLASSIFICATION	3.33976777194805E-6	DEFECT
// extra field length	WITHOUT_CLASSIFICATION	0.9999978933811103	WITHOUT_CLASSIFICATION	2.1066188896767553E-6	DEFECT
// file name	WITHOUT_CLASSIFICATION	0.999994013618583	WITHOUT_CLASSIFICATION	5.98638141700219E-6	DEFECT
// extra field	WITHOUT_CLASSIFICATION	0.9999964031195482	WITHOUT_CLASSIFICATION	3.59688045190055E-6	DEFECT
// version made by	WITHOUT_CLASSIFICATION	0.9999879017102556	WITHOUT_CLASSIFICATION	1.2098289744366634E-5	DEFECT
// version needed to extract // general purpose bit flag	WITHOUT_CLASSIFICATION	0.9999694753331588	WITHOUT_CLASSIFICATION	3.052466684116762E-5	DEFECT
// last mod. time and date	WITHOUT_CLASSIFICATION	0.9999951370648344	WITHOUT_CLASSIFICATION	4.862935165561146E-6	DEFECT
// requires version 2 as we are going to store length info // in the data descriptor	WITHOUT_CLASSIFICATION	0.9999697955155986	WITHOUT_CLASSIFICATION	3.0204484401312685E-5	DEFECT
// file name length	WITHOUT_CLASSIFICATION	0.9999966602322281	WITHOUT_CLASSIFICATION	3.33976777194805E-6	DEFECT
// CRC // compressed length // uncompressed length	WITHOUT_CLASSIFICATION	0.999998179642132	WITHOUT_CLASSIFICATION	1.8203578680457968E-6	DEFECT
// extra field length	WITHOUT_CLASSIFICATION	0.9999978933811103	WITHOUT_CLASSIFICATION	2.1066188896767553E-6	DEFECT
// file name	WITHOUT_CLASSIFICATION	0.999994013618583	WITHOUT_CLASSIFICATION	5.98638141700219E-6	DEFECT
// extra field	WITHOUT_CLASSIFICATION	0.9999964031195482	WITHOUT_CLASSIFICATION	3.59688045190055E-6	DEFECT
// file comment length	WITHOUT_CLASSIFICATION	0.9999879719485745	WITHOUT_CLASSIFICATION	1.2028051425489746E-5	DEFECT
// disk number start	WITHOUT_CLASSIFICATION	0.9999897199597549	WITHOUT_CLASSIFICATION	1.0280040245141207E-5	DEFECT
// internal file attributes	WITHOUT_CLASSIFICATION	0.9999982736542782	WITHOUT_CLASSIFICATION	1.7263457218538143E-6	DEFECT
// external file attributes	WITHOUT_CLASSIFICATION	0.9999980330324936	WITHOUT_CLASSIFICATION	1.9669675065003555E-6	DEFECT
// relative offset of LFH	WITHOUT_CLASSIFICATION	0.9999912042929203	WITHOUT_CLASSIFICATION	8.795707079653854E-6	DEFECT
// disk numbers	WITHOUT_CLASSIFICATION	0.9999889585644047	WITHOUT_CLASSIFICATION	1.1041435595323629E-5	DEFECT
// number of entries	WITHOUT_CLASSIFICATION	0.9999948592361446	WITHOUT_CLASSIFICATION	5.140763855364442E-6	DEFECT
// length and location of CD	WITHOUT_CLASSIFICATION	0.9999471130953241	WITHOUT_CLASSIFICATION	5.288690467585174E-5	DEFECT
// ZIP file comment	WITHOUT_CLASSIFICATION	0.9999830029153209	WITHOUT_CLASSIFICATION	1.6997084679105806E-5	DEFECT
// array not exhausted	WITHOUT_CLASSIFICATION	0.9999743703784038	WITHOUT_CLASSIFICATION	2.5629621596246902E-5	DEFECT
/* version made by                 */	WITHOUT_CLASSIFICATION	0.9999812935797846	WITHOUT_CLASSIFICATION	1.8706420215350733E-5	DEFECT
/* version needed to extract       */	WITHOUT_CLASSIFICATION	0.9999872616999864	WITHOUT_CLASSIFICATION	1.273830001367728E-5	DEFECT
/* general purpose bit flag        */	WITHOUT_CLASSIFICATION	0.9999678784393465	WITHOUT_CLASSIFICATION	3.2121560653520774E-5	DEFECT
/* compression method              */	WITHOUT_CLASSIFICATION	0.9999806386293176	WITHOUT_CLASSIFICATION	1.9361370682407285E-5	DEFECT
/* last mod file time              */	WITHOUT_CLASSIFICATION	0.9999896606451126	WITHOUT_CLASSIFICATION	1.0339354887240848E-5	DEFECT
/* last mod file date              */	WITHOUT_CLASSIFICATION	0.9999911085604987	WITHOUT_CLASSIFICATION	8.891439501344942E-6	DEFECT
/* crc-32                          */	WITHOUT_CLASSIFICATION	0.9999628900162167	WITHOUT_CLASSIFICATION	3.710998378324099E-5	DEFECT
/* uncompressed size               */	WITHOUT_CLASSIFICATION	0.9999838570840199	WITHOUT_CLASSIFICATION	1.6142915980045474E-5	DEFECT
/* filename length                 */	WITHOUT_CLASSIFICATION	0.9999916703430587	WITHOUT_CLASSIFICATION	8.329656941314791E-6	DEFECT
/* extra field length              */	WITHOUT_CLASSIFICATION	0.9999964351887446	WITHOUT_CLASSIFICATION	3.564811255387945E-6	DEFECT
/* file comment length             */	WITHOUT_CLASSIFICATION	0.9999821539148914	WITHOUT_CLASSIFICATION	1.7846085108539287E-5	DEFECT
/* internal file attributes        */	WITHOUT_CLASSIFICATION	0.9999953305811257	WITHOUT_CLASSIFICATION	4.669418874257726E-6	DEFECT
/* external file attributes        */	WITHOUT_CLASSIFICATION	0.9999965530538872	WITHOUT_CLASSIFICATION	3.4469461127525333E-6	DEFECT
/* relative offset of local header */	WITHOUT_CLASSIFICATION	0.9999787383714402	WITHOUT_CLASSIFICATION	2.1261628559817122E-5	DEFECT
// disk number	WITHOUT_CLASSIFICATION	0.9999878186696901	WITHOUT_CLASSIFICATION	1.2181330309900844E-5	DEFECT
// LFH offset,	WITHOUT_CLASSIFICATION	0.9999760255860393	WITHOUT_CLASSIFICATION	2.397441396071071E-5	DEFECT
// data offset will be filled later	WITHOUT_CLASSIFICATION	0.9999902268858656	WITHOUT_CLASSIFICATION	9.77311413434564E-6	DEFECT
/* end of central dir signature    */	WITHOUT_CLASSIFICATION	0.9999317300432226	WITHOUT_CLASSIFICATION	6.826995677743287E-5	DEFECT
/* number of this disk             */	WITHOUT_CLASSIFICATION	0.9999524243610471	WITHOUT_CLASSIFICATION	4.757563895290391E-5	DEFECT
/* number of the disk with the     */	WITHOUT_CLASSIFICATION	0.999936440823938	WITHOUT_CLASSIFICATION	6.355917606207549E-5	DEFECT
/* start of the central directory  */	WITHOUT_CLASSIFICATION	0.9999538579974295	WITHOUT_CLASSIFICATION	4.614200257055418E-5	DEFECT
/* the central dir on this disk    */	WITHOUT_CLASSIFICATION	0.9999691108655449	WITHOUT_CLASSIFICATION	3.088913445510757E-5	DEFECT
/* the central dir                 */	WITHOUT_CLASSIFICATION	0.9999917972214951	WITHOUT_CLASSIFICATION	8.202778504970074E-6	DEFECT
/* size of the central directory   */	WITHOUT_CLASSIFICATION	0.9999432660583012	WITHOUT_CLASSIFICATION	5.673394169865816E-5	DEFECT
/* offset of start of central      */	WITHOUT_CLASSIFICATION	0.9999932521630209	WITHOUT_CLASSIFICATION	6.747836979097885E-6	DEFECT
// empty	WITHOUT_CLASSIFICATION	0.9999662337205111	WITHOUT_CLASSIFICATION	3.376627948890816E-5	DEFECT
// wait 2 second extras // the test failed with 100 ms of margin on cvs.apache.org on August 1st, 2003	WITHOUT_CLASSIFICATION	0.9999957901005126	WITHOUT_CLASSIFICATION	4.209899487392869E-6	DEFECT
// dummy1 --> dummy2 --> dummy3 // (which holds a glob mapper from "*.java" to "*.class"	WITHOUT_CLASSIFICATION	0.9999923210372311	WITHOUT_CLASSIFICATION	7.678962768887417E-6	DEFECT
// // *****  initialize test environment (called "bed")  ***** //	WITHOUT_CLASSIFICATION	0.9999998668450968	WITHOUT_CLASSIFICATION	1.3315490319622542E-7	DEFECT
// THIS WILL FAIL. //compareBytes("abc", "utf-16");	WITHOUT_CLASSIFICATION	0.9999913679005288	WITHOUT_CLASSIFICATION	8.632099471157407E-6	DEFECT
//catch script/ant mismatch with a meaningful message //we could ignore it, but there are likely to be other //version problems, so we stamp down on the configuration now	WITHOUT_CLASSIFICATION	0.9984552068443027	WITHOUT_CLASSIFICATION	0.001544793155697314	DEFECT
//if there were no main targets, we list all subtargets //as it means nothing has a description	WITHOUT_CLASSIFICATION	0.9998473739088138	WITHOUT_CLASSIFICATION	1.5262609118607068E-4	DEFECT
// For NetWare, use the boolean=true mode, so we can use delimiter // information to make a better decision later.	WITHOUT_CLASSIFICATION	0.9999963014626524	WITHOUT_CLASSIFICATION	3.6985373477077438E-6	DEFECT
// we are on NetWare, tokenizing is handled a little differently, // due to the fact that NetWare has multiple-character volume names.	WITHOUT_CLASSIFICATION	0.9999985823615435	WITHOUT_CLASSIFICATION	1.4176384565405122E-6	DEFECT
// The readers return -1 if they end. So simply read the "prepend" // after that the "content" and at the end the "append" file.	WITHOUT_CLASSIFICATION	0.9999710782609674	WITHOUT_CLASSIFICATION	2.8921739032584613E-5	DEFECT
// NB: this makes use of Project#setProperty rather than Project#setNewProperty //     due to backwards compatiblity reasons	WITHOUT_CLASSIFICATION	0.9994096630609157	WITHOUT_CLASSIFICATION	5.903369390843176E-4	DEFECT
// If we've been successful on an update, delete the // temporary file	WITHOUT_CLASSIFICATION	0.999999597774074	WITHOUT_CLASSIFICATION	4.0222592598758685E-7	DEFECT
// CheckStyle - magic numbers // checking for "X:\ 0=dquote,1=letter,2=:,3=\	WITHOUT_CLASSIFICATION	0.9999980265052241	WITHOUT_CLASSIFICATION	1.9734947760001655E-6	DEFECT
/* version needed to extract       */	WITHOUT_CLASSIFICATION	0.9999872616999864	WITHOUT_CLASSIFICATION	1.273830001367728E-5	DEFECT
/* general purpose bit flag        */	WITHOUT_CLASSIFICATION	0.9999678784393465	WITHOUT_CLASSIFICATION	3.2121560653520774E-5	DEFECT
/* compression method              */	WITHOUT_CLASSIFICATION	0.9999806386293176	WITHOUT_CLASSIFICATION	1.9361370682407285E-5	DEFECT
/* last mod file time              */	WITHOUT_CLASSIFICATION	0.9999896606451126	WITHOUT_CLASSIFICATION	1.0339354887240848E-5	DEFECT
/* last mod file date              */	WITHOUT_CLASSIFICATION	0.9999911085604987	WITHOUT_CLASSIFICATION	8.891439501344942E-6	DEFECT
/* crc-32                          */	WITHOUT_CLASSIFICATION	0.9999628900162167	WITHOUT_CLASSIFICATION	3.710998378324099E-5	DEFECT
/* compressed size                 */	WITHOUT_CLASSIFICATION	0.9999830721275231	WITHOUT_CLASSIFICATION	1.6927872476937155E-5	DEFECT
/* uncompressed size               */	WITHOUT_CLASSIFICATION	0.9999838570840199	WITHOUT_CLASSIFICATION	1.6142915980045474E-5	DEFECT
/* end of central dir signature    */	WITHOUT_CLASSIFICATION	0.9999317300432226	WITHOUT_CLASSIFICATION	6.826995677743287E-5	DEFECT
/* number of this disk             */	WITHOUT_CLASSIFICATION	0.9999524243610471	WITHOUT_CLASSIFICATION	4.757563895290391E-5	DEFECT
/* number of the disk with the     */	WITHOUT_CLASSIFICATION	0.999936440823938	WITHOUT_CLASSIFICATION	6.355917606207549E-5	DEFECT
/* total number of entries in      */	WITHOUT_CLASSIFICATION	0.9999812673524331	WITHOUT_CLASSIFICATION	1.8732647566858083E-5	DEFECT
/* total number of entries in      */	WITHOUT_CLASSIFICATION	0.9999812673524331	WITHOUT_CLASSIFICATION	1.8732647566858083E-5	DEFECT
/* the central dir on this disk    */	WITHOUT_CLASSIFICATION	0.9999691108655449	WITHOUT_CLASSIFICATION	3.088913445510757E-5	DEFECT
/* the central dir                 */	WITHOUT_CLASSIFICATION	0.9999917972214951	WITHOUT_CLASSIFICATION	8.202778504970074E-6	DEFECT
/* size of the central directory   */	WITHOUT_CLASSIFICATION	0.9999432660583012	WITHOUT_CLASSIFICATION	5.673394169865816E-5	DEFECT
/* the starting disk number        */	WITHOUT_CLASSIFICATION	0.9999807953525549	WITHOUT_CLASSIFICATION	1.9204647445053643E-5	DEFECT
/* zipfile comment length          */	WITHOUT_CLASSIFICATION	0.9999859007098977	WITHOUT_CLASSIFICATION	1.4099290102225191E-5	DEFECT
/* local file header signature     */	WITHOUT_CLASSIFICATION	0.9999160989056824	WITHOUT_CLASSIFICATION	8.390109431748176E-5	DEFECT
/*     * Converts DOS time to Java time (number of milliseconds since epoch).     */	WITHOUT_CLASSIFICATION	0.9999985474854238	WITHOUT_CLASSIFICATION	1.4525145761472846E-6	DEFECT
// CRC will be added later	WITHOUT_CLASSIFICATION	0.9999943563976346	WITHOUT_CLASSIFICATION	5.6436023653978095E-6	DEFECT
/*<ZipExtraField>*/	WITHOUT_CLASSIFICATION	0.999947605945397	WITHOUT_CLASSIFICATION	5.239405460305277E-5	DEFECT
// initializes extra data to an empty byte array	WITHOUT_CLASSIFICATION	0.9999988927411215	WITHOUT_CLASSIFICATION	1.1072588785279553E-6	DEFECT
// MS-DOS read-only attribute	WITHOUT_CLASSIFICATION	0.9997759118320119	WITHOUT_CLASSIFICATION	2.240881679881029E-4	DEFECT
// MS-DOS directory flag	WITHOUT_CLASSIFICATION	0.9991669220158339	WITHOUT_CLASSIFICATION	8.330779841661442E-4	DEFECT
// A "location" attribute for a node within a // Path object.	WITHOUT_CLASSIFICATION	0.9999725163821906	WITHOUT_CLASSIFICATION	2.7483617809453147E-5	DEFECT
// Just use the same directory as the file itself. // This directory will exist	WITHOUT_CLASSIFICATION	0.9996830685870426	WITHOUT_CLASSIFICATION	3.169314129575104E-4	DEFECT
// JarIndex is sorting the directories by ascending order. // it has no value but cosmetic since it will be read into a // hashtable by the classloader, but we'll do so anyway.	WITHOUT_CLASSIFICATION	0.9999995334558432	WITHOUT_CLASSIFICATION	4.6654415676959845E-7	DEFECT
// // Static //	WITHOUT_CLASSIFICATION	0.9999845926296005	WITHOUT_CLASSIFICATION	1.540737039957147E-5	DEFECT
//we mark the file to be deleted on exit. //the alternative would be to cache the filename and delete //after execution finished, which is much better for long-lived runtimes //though spawning complicates things...	WITHOUT_CLASSIFICATION	0.9999853777937544	WITHOUT_CLASSIFICATION	1.462220624552142E-5	DEFECT
// Protected first so if any GUI tool offers a default // based on enum #0, it will be right.	WITHOUT_CLASSIFICATION	0.9999394444704816	WITHOUT_CLASSIFICATION	6.0555529518556144E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc // the source file // the destination file // the destination directory	WITHOUT_CLASSIFICATION	0.9999584668990462	WITHOUT_CLASSIFICATION	4.153310095381158E-5	DEFECT
// add dest dir to classpath so that previously compiled and // untouched classes are on classpath	WITHOUT_CLASSIFICATION	0.9999952647065896	WITHOUT_CLASSIFICATION	4.735293410339518E-6	DEFECT
// build the command line from what we got the format is // cleartool checkout [options...] [viewpath ...] // as specified in the CLEARTOOL.EXE help	WITHOUT_CLASSIFICATION	0.9999991974032574	WITHOUT_CLASSIFICATION	8.025967425276194E-7	DEFECT
// build the command line from what we got. the format is // cleartool mkelem [options...] [viewpath ...] // as specified in the CLEARTOOL.EXE help	WITHOUT_CLASSIFICATION	0.9999993116136232	WITHOUT_CLASSIFICATION	6.88386376774726E-7	DEFECT
// build the command line from what we got. the format is // cleartool mklabel [options...] [viewpath ...] // as specified in the CLEARTOOL help	WITHOUT_CLASSIFICATION	0.9999997374681457	WITHOUT_CLASSIFICATION	2.6253185432729645E-7	DEFECT
// push the current iterator onto the stack and then // iterate through this directory.	WITHOUT_CLASSIFICATION	0.9977035486719302	WITHOUT_CLASSIFICATION	0.0022964513280697364	DEFECT
// List of EJBs found in XML // One item within the Map // Is doc iAS or EJB descriptor	WITHOUT_CLASSIFICATION	0.9999595483150097	WITHOUT_CLASSIFICATION	4.045168499039411E-5	DEFECT
// baseNameTerminator not found: the descriptor use the // JOnAS naming convention, ie [Foo.xml,jonas-Foo.xml] and // not [Foo<baseNameTerminator>-ejb-jar.xml, // Foo<baseNameTerminator>-jonas-ejb-jar.xml].	WITHOUT_CLASSIFICATION	0.9999295134454356	WITHOUT_CLASSIFICATION	7.048655456450279E-5	DEFECT
// Loop through the files seeing if any has been touched // more recently than the destination jar.	WITHOUT_CLASSIFICATION	0.9999728268850789	WITHOUT_CLASSIFICATION	2.7173114920999568E-5	DEFECT
// read in the descriptor. Under weblogic, the descriptor is a weblogic // specific subclass which has references to the implementation classes. // These classes must, therefore, be in the classpath when the deployment // descriptor is loaded from the .ser file	WITHOUT_CLASSIFICATION	0.9999949771767661	WITHOUT_CLASSIFICATION	5.02282323395847E-6	DEFECT
//WARNING: We trim the values of all the attributes because //Some extension declarations are badly defined (ie have spaces //after version or vendor)	WITHOUT_CLASSIFICATION	0.999975395469695	WITHOUT_CLASSIFICATION	2.4604530304899264E-5	DEFECT
// 2003-02-21 new replace algorithm by tbee (tbee@tbee.org) // because it wasn't able to replace something like "@aaa;@bbb;"	WITHOUT_CLASSIFICATION	0.9999994582135384	WITHOUT_CLASSIFICATION	5.41786461700026E-7	DEFECT
// convert backslashes to slashes, otherwise jjtree will // put this as comments and this seems to confuse javacc	WITHOUT_CLASSIFICATION	0.9999637922871817	WITHOUT_CLASSIFICATION	3.6207712818257756E-5	DEFECT
//although this code appears to duplicate that of ClasspathUtils.newInstance, //we cannot use that because this formatter may run in a forked process, //without that class.	WITHOUT_CLASSIFICATION	0.9999751831843218	WITHOUT_CLASSIFICATION	2.481681567816709E-5	DEFECT
// build the command line from what we got the format is // ss History elements [-H] [-L] [-N] [-O] [-V] [-Y] [-#] [-?] // as specified in the SS.EXE help	WITHOUT_CLASSIFICATION	0.9999977565315928	WITHOUT_CLASSIFICATION	2.243468407140426E-6	DEFECT
// this method has severe consequences on performance. We cannot rely // on the super.hashCode() method since super.getName() always return // the empty string in the current implemention (there's no setter) // so it is basically draining the performance of a hashmap lookup	WITHOUT_CLASSIFICATION	0.9999978568887005	WITHOUT_CLASSIFICATION	2.1431112996188815E-6	DEFECT
// If this TransformOperation has DrawOperation children // then Rotate the first child and return.	WITHOUT_CLASSIFICATION	0.9998586287546605	WITHOUT_CLASSIFICATION	1.4137124533953262E-4	DEFECT
// converted from sun internal classes to // new Base64Converter // utility class extracted from Get task	WITHOUT_CLASSIFICATION	0.9999969779261545	WITHOUT_CLASSIFICATION	3.0220738454350426E-6	DEFECT
// // Cannot return a null source, because we have to call // setEntityResolver (see setEntityResolver javadoc comment) //	WITHOUT_CLASSIFICATION	0.9999998944074915	WITHOUT_CLASSIFICATION	1.0559250850390518E-7	DEFECT
// CRC // compressed length // uncompressed length	WITHOUT_CLASSIFICATION	0.999998179642132	WITHOUT_CLASSIFICATION	1.8203578680457968E-6	DEFECT
// No further methods necessary. This is just an amalgamation of two other // interfaces.	WITHOUT_CLASSIFICATION	0.9999373349657621	WITHOUT_CLASSIFICATION	6.266503423786865E-5	DEFECT
// // -----  The "Singleton"  ----- //	WITHOUT_CLASSIFICATION	0.999943809350806	WITHOUT_CLASSIFICATION	5.6190649194042256E-5	DEFECT
// If we had child elements, we need to indent before we close // the element, otherwise we're on the same line and don't need // to indent	WITHOUT_CLASSIFICATION	0.9998195461028937	WITHOUT_CLASSIFICATION	1.804538971062891E-4	DEFECT
// The key is in the dictionary but cannot be retrieved // This is usually due references that refer to tasks // that have not been taskdefed in the current run. // Ignore	WITHOUT_CLASSIFICATION	0.9896846633277344	WITHOUT_CLASSIFICATION	0.010315336672265678	DEFECT
// write magic: done by caller who created this stream //this.out.write('B'); //this.out.write('Z');	WITHOUT_CLASSIFICATION	0.9999516447773321	WITHOUT_CLASSIFICATION	4.8355222667886205E-5	DEFECT
// CRC // Mode // SizDev // UID // GID	WITHOUT_CLASSIFICATION	0.999976385469599	WITHOUT_CLASSIFICATION	2.3614530400920597E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999569078800925	WITHOUT_CLASSIFICATION	4.309211990746606E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999569078800925	WITHOUT_CLASSIFICATION	4.309211990746606E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999569078800925	WITHOUT_CLASSIFICATION	4.309211990746606E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999569078800925	WITHOUT_CLASSIFICATION	4.309211990746606E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999569078800925	WITHOUT_CLASSIFICATION	4.309211990746606E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999569078800925	WITHOUT_CLASSIFICATION	4.309211990746606E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999569078800925	WITHOUT_CLASSIFICATION	4.309211990746606E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999569078800925	WITHOUT_CLASSIFICATION	4.309211990746606E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999106018941357	WITHOUT_CLASSIFICATION	8.939810586429974E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999106018941357	WITHOUT_CLASSIFICATION	8.939810586429974E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999106018941357	WITHOUT_CLASSIFICATION	8.939810586429974E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999106018941357	WITHOUT_CLASSIFICATION	8.939810586429974E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999106018941357	WITHOUT_CLASSIFICATION	8.939810586429974E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999106018941357	WITHOUT_CLASSIFICATION	8.939810586429974E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999569078800925	WITHOUT_CLASSIFICATION	4.309211990746606E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999569078800925	WITHOUT_CLASSIFICATION	4.309211990746606E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999569078800925	WITHOUT_CLASSIFICATION	4.309211990746606E-5	DEFECT
// ignored	WITHOUT_CLASSIFICATION	0.9999698412836088	WITHOUT_CLASSIFICATION	3.015871639119915E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999569078800925	WITHOUT_CLASSIFICATION	4.309211990746606E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999569078800925	WITHOUT_CLASSIFICATION	4.309211990746606E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999569078800925	WITHOUT_CLASSIFICATION	4.309211990746606E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999569078800925	WITHOUT_CLASSIFICATION	4.309211990746606E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999569078800925	WITHOUT_CLASSIFICATION	4.309211990746606E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999569078800925	WITHOUT_CLASSIFICATION	4.309211990746606E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999569078800925	WITHOUT_CLASSIFICATION	4.309211990746606E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999569078800925	WITHOUT_CLASSIFICATION	4.309211990746606E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999569078800925	WITHOUT_CLASSIFICATION	4.309211990746606E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999569078800925	WITHOUT_CLASSIFICATION	4.309211990746606E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999569078800925	WITHOUT_CLASSIFICATION	4.309211990746606E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999569078800925	WITHOUT_CLASSIFICATION	4.309211990746606E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999569078800925	WITHOUT_CLASSIFICATION	4.309211990746606E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999569078800925	WITHOUT_CLASSIFICATION	4.309211990746606E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999569078800925	WITHOUT_CLASSIFICATION	4.309211990746606E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999569078800925	WITHOUT_CLASSIFICATION	4.309211990746606E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999569078800925	WITHOUT_CLASSIFICATION	4.309211990746606E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999569078800925	WITHOUT_CLASSIFICATION	4.309211990746606E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999569078800925	WITHOUT_CLASSIFICATION	4.309211990746606E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999569078800925	WITHOUT_CLASSIFICATION	4.309211990746606E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999569078800925	WITHOUT_CLASSIFICATION	4.309211990746606E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999569078800925	WITHOUT_CLASSIFICATION	4.309211990746606E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999569078800925	WITHOUT_CLASSIFICATION	4.309211990746606E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999569078800925	WITHOUT_CLASSIFICATION	4.309211990746606E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999569078800925	WITHOUT_CLASSIFICATION	4.309211990746606E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999569078800925	WITHOUT_CLASSIFICATION	4.309211990746606E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999569078800925	WITHOUT_CLASSIFICATION	4.309211990746606E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999569078800925	WITHOUT_CLASSIFICATION	4.309211990746606E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999569078800925	WITHOUT_CLASSIFICATION	4.309211990746606E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999569078800925	WITHOUT_CLASSIFICATION	4.309211990746606E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999569078800925	WITHOUT_CLASSIFICATION	4.309211990746606E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999569078800925	WITHOUT_CLASSIFICATION	4.309211990746606E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999569078800925	WITHOUT_CLASSIFICATION	4.309211990746606E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999569078800925	WITHOUT_CLASSIFICATION	4.309211990746606E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999569078800925	WITHOUT_CLASSIFICATION	4.309211990746606E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999569078800925	WITHOUT_CLASSIFICATION	4.309211990746606E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999569078800925	WITHOUT_CLASSIFICATION	4.309211990746606E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999569078800925	WITHOUT_CLASSIFICATION	4.309211990746606E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999569078800925	WITHOUT_CLASSIFICATION	4.309211990746606E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999569078800925	WITHOUT_CLASSIFICATION	4.309211990746606E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999569078800925	WITHOUT_CLASSIFICATION	4.309211990746606E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999569078800925	WITHOUT_CLASSIFICATION	4.309211990746606E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999569078800925	WITHOUT_CLASSIFICATION	4.309211990746606E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999569078800925	WITHOUT_CLASSIFICATION	4.309211990746606E-5	DEFECT
// do nothing	WITHOUT_CLASSIFICATION	0.9998903683788877	WITHOUT_CLASSIFICATION	1.0963162111233727E-4	DEFECT
// do nothing	WITHOUT_CLASSIFICATION	0.9998903683788877	WITHOUT_CLASSIFICATION	1.0963162111233727E-4	DEFECT
// do nothing	WITHOUT_CLASSIFICATION	0.9998903683788877	WITHOUT_CLASSIFICATION	1.0963162111233727E-4	DEFECT
// selectors are implicitly ANDed in DirectoryScanner.  To // revert their logic we wrap them into a <none> selector // instead.	WITHOUT_CLASSIFICATION	0.9999982925867628	WITHOUT_CLASSIFICATION	1.70741323730242E-6	DEFECT
// now wait until the spawned process is finished	WITHOUT_CLASSIFICATION	0.9999965477351478	WITHOUT_CLASSIFICATION	3.4522648522228137E-6	DEFECT
// file doesn't exist -> property 'test' == null	WITHOUT_CLASSIFICATION	0.9999763462286577	WITHOUT_CLASSIFICATION	2.3653771342253916E-5	DEFECT
// we don't expect to find this	WITHOUT_CLASSIFICATION	0.999859211302798	WITHOUT_CLASSIFICATION	1.407886972020075E-4	DEFECT
// we don't expect to find this	WITHOUT_CLASSIFICATION	0.999859211302798	WITHOUT_CLASSIFICATION	1.407886972020075E-4	DEFECT
// ignore expected	WITHOUT_CLASSIFICATION	0.9999904211864811	WITHOUT_CLASSIFICATION	9.578813518922127E-6	DEFECT
// keep track of what operating systems are supported here.	WITHOUT_CLASSIFICATION	0.9997189879221924	WITHOUT_CLASSIFICATION	2.810120778076445E-4	DEFECT
// if we followed the symlink we just made we should // bypass the excludes.	WITHOUT_CLASSIFICATION	0.999994901381636	WITHOUT_CLASSIFICATION	5.098618363863368E-6	DEFECT
// when the test is started by the build.xml of ant // if the property tests.and.ant.share.classloader is not set in the build.xml // a sysproperty with name tests.and.ant.share.classloader and value // ${tests.and.ant.share.classloader} will be set // we are trying to catch this here.	WITHOUT_CLASSIFICATION	0.9998887440679327	WITHOUT_CLASSIFICATION	1.1125593206737314E-4	DEFECT
/*             * throw in drive letters             */	WITHOUT_CLASSIFICATION	0.9999597628793504	WITHOUT_CLASSIFICATION	4.023712064953107E-5	DEFECT
/*             * promised to eliminate consecutive slashes after drive letter.             */	WITHOUT_CLASSIFICATION	0.9999974489081253	WITHOUT_CLASSIFICATION	2.551091874885291E-6	DEFECT
/*             * promised to eliminate consecutive slashes after drive letter.             */	WITHOUT_CLASSIFICATION	0.9999974489081253	WITHOUT_CLASSIFICATION	2.551091874885291E-6	DEFECT
/*             * promised to eliminate consecutive slashes after drive letter.             */	WITHOUT_CLASSIFICATION	0.9999974489081253	WITHOUT_CLASSIFICATION	2.551091874885291E-6	DEFECT
// avoid multiple configurations	WITHOUT_CLASSIFICATION	0.9999990255019163	WITHOUT_CLASSIFICATION	9.744980837132967E-7	DEFECT
// ------------------------------------------------------ //   Helper methods // -----------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999782828242582	WITHOUT_CLASSIFICATION	2.1717175741780495E-5	DEFECT
// make sure the cache is cleared.	WITHOUT_CLASSIFICATION	0.9999947744751125	WITHOUT_CLASSIFICATION	5.225524887460279E-6	DEFECT
//--- NULL JDBC driver just for simple test since there are no db driver // available as a default in Ant :)	WITHOUT_CLASSIFICATION	0.9999999282472799	WITHOUT_CLASSIFICATION	7.175272009433486E-8	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.9999647590404515	WITHOUT_CLASSIFICATION	3.524095954865604E-5	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.9999647590404515	WITHOUT_CLASSIFICATION	3.524095954865604E-5	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.9999647590404515	WITHOUT_CLASSIFICATION	3.524095954865604E-5	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.9999647590404515	WITHOUT_CLASSIFICATION	3.524095954865604E-5	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.9999647590404515	WITHOUT_CLASSIFICATION	3.524095954865604E-5	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.9999647590404515	WITHOUT_CLASSIFICATION	3.524095954865604E-5	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.9999647590404515	WITHOUT_CLASSIFICATION	3.524095954865604E-5	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.9999647590404515	WITHOUT_CLASSIFICATION	3.524095954865604E-5	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.9999647590404515	WITHOUT_CLASSIFICATION	3.524095954865604E-5	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.9999647590404515	WITHOUT_CLASSIFICATION	3.524095954865604E-5	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.9999647590404515	WITHOUT_CLASSIFICATION	3.524095954865604E-5	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.9999647590404515	WITHOUT_CLASSIFICATION	3.524095954865604E-5	DEFECT
// wait 1 second extra to allow for java to start ... // this time was OK on a Win NT machine and on nagoya	WITHOUT_CLASSIFICATION	0.9999910744637287	WITHOUT_CLASSIFICATION	8.925536271325166E-6	DEFECT
// ------------------------------------------------------ //   Helper methods - should be in BuildFileTest // -----------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999732242049898	WITHOUT_CLASSIFICATION	2.6775795010108063E-5	DEFECT
// ------------------------------------------------------ //   Helper methods - should be in BuildFileTest // -----------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999732242049898	WITHOUT_CLASSIFICATION	2.6775795010108063E-5	DEFECT
// All three specified and all three exist -> true	WITHOUT_CLASSIFICATION	0.9999952272645013	WITHOUT_CLASSIFICATION	4.772735498656311E-6	DEFECT
// Specified class is "" -> can not exist	WITHOUT_CLASSIFICATION	0.9999846409096881	WITHOUT_CLASSIFICATION	1.535909031184944E-5	DEFECT
// Core class that exists in system classpath is ignored, but found in specified classpath	WITHOUT_CLASSIFICATION	0.9999231438203217	WITHOUT_CLASSIFICATION	7.685617967830828E-5	DEFECT
// File is not found in specified filepath	WITHOUT_CLASSIFICATION	0.9999479468832385	WITHOUT_CLASSIFICATION	5.2053116761481754E-5	DEFECT
//ignored	WITHOUT_CLASSIFICATION	0.9991624826642336	WITHOUT_CLASSIFICATION	8.375173357664428E-4	DEFECT
// basedir of subant/subant-test2/subant.xml is .. // therefore we expect here the subant subdirectory	WITHOUT_CLASSIFICATION	0.9999735665058366	WITHOUT_CLASSIFICATION	2.643349416351152E-5	DEFECT
// 2 is != 0 and even, so it is considered // failure on any platform currently supported // by Execute#isFailure.	WITHOUT_CLASSIFICATION	0.9999880401171434	WITHOUT_CLASSIFICATION	1.1959882856618761E-5	DEFECT
//         expectBuildExceptionContaining("testNoTld", //                 "Jasper found an error in a file", //                 "Java returned: 9");	WITHOUT_CLASSIFICATION	0.9999974579584817	WITHOUT_CLASSIFICATION	2.542041518265365E-6	DEFECT
// The captureToSummary test writes to stdout and stderr, good for // verifying that the TestListener support doesn't break anything.	WITHOUT_CLASSIFICATION	0.9997776646378063	WITHOUT_CLASSIFICATION	2.2233536219386755E-4	DEFECT
// testNoCrash is the test invoked by the captureToSummary's junit task	WITHOUT_CLASSIFICATION	0.9999997966373013	WITHOUT_CLASSIFICATION	2.033626986790109E-7	DEFECT
// tests one the file object	WITHOUT_CLASSIFICATION	0.999996832594249	WITHOUT_CLASSIFICATION	3.167405750971637E-6	DEFECT
// tests one the file object	WITHOUT_CLASSIFICATION	0.999996832594249	WITHOUT_CLASSIFICATION	3.167405750971637E-6	DEFECT
// tests one the file object	WITHOUT_CLASSIFICATION	0.999996832594249	WITHOUT_CLASSIFICATION	3.167405750971637E-6	DEFECT
// tests one the file object	WITHOUT_CLASSIFICATION	0.999996832594249	WITHOUT_CLASSIFICATION	3.167405750971637E-6	DEFECT
// tests one the file object	WITHOUT_CLASSIFICATION	0.999996832594249	WITHOUT_CLASSIFICATION	3.167405750971637E-6	DEFECT
// viewpath	WITHOUT_CLASSIFICATION	0.999990276318121	WITHOUT_CLASSIFICATION	9.72368187900024E-6	DEFECT
// conversion to URL via FileUtils like in XMLResultAggregator, not as suggested in the bug report	WITHOUT_CLASSIFICATION	0.9999625269063341	WITHOUT_CLASSIFICATION	3.7473093665814456E-5	DEFECT
// conversion to URL via FileUtils like in XMLResultAggregator, not as suggested in the bug report	WITHOUT_CLASSIFICATION	0.9999625269063341	WITHOUT_CLASSIFICATION	3.7473093665814456E-5	DEFECT
// conversion to URL via FileUtils like in XMLResultAggregator, not as suggested in the bug report	WITHOUT_CLASSIFICATION	0.9999625269063341	WITHOUT_CLASSIFICATION	3.7473093665814456E-5	DEFECT
// conversion to URL via FileUtils like in XMLResultAggregator, not as suggested in the bug report	WITHOUT_CLASSIFICATION	0.9999625269063341	WITHOUT_CLASSIFICATION	3.7473093665814456E-5	DEFECT
// We have extra elements	WITHOUT_CLASSIFICATION	0.9999985569312475	WITHOUT_CLASSIFICATION	1.443068752424511E-6	DEFECT
// Set up a VSSHistory task	WITHOUT_CLASSIFICATION	0.999986056784397	WITHOUT_CLASSIFICATION	1.3943215603002308E-5	DEFECT
// \ doesn't have a special meaning anymore - this is different from // what the Unix sh does but causes a lot of problems on DOS // based platforms otherwise	WITHOUT_CLASSIFICATION	0.9960245347276041	WITHOUT_CLASSIFICATION	0.003975465272395927	DEFECT
//check that dir and src are incompatible	WITHOUT_CLASSIFICATION	0.9999345460715503	WITHOUT_CLASSIFICATION	6.545392844974078E-5	DEFECT
// ================  testcases for the cache implementations  ================	WITHOUT_CLASSIFICATION	0.9999975852598324	WITHOUT_CLASSIFICATION	2.4147401677223434E-6	DEFECT
// does the selection	WITHOUT_CLASSIFICATION	0.9999578921922888	WITHOUT_CLASSIFICATION	4.210780771110152E-5	DEFECT
// ==============  testcases for the algorithm implementations  ==============	WITHOUT_CLASSIFICATION	0.9999980024771269	WITHOUT_CLASSIFICATION	1.997522873161047E-6	DEFECT
// =====================  scenario tests  =====================	WITHOUT_CLASSIFICATION	0.9999981683375291	WITHOUT_CLASSIFICATION	1.8316624708854321E-6	DEFECT
// info text // list of files // expected result // result	WITHOUT_CLASSIFICATION	0.9999979851209262	WITHOUT_CLASSIFICATION	2.014879073881141E-6	DEFECT
//  =====================  helper methods and classes  ====================	WITHOUT_CLASSIFICATION	0.9999949008293786	WITHOUT_CLASSIFICATION	5.099170621453042E-6	DEFECT
// should be full moon	WITHOUT_CLASSIFICATION	0.9997815926027636	WITHOUT_CLASSIFICATION	2.1840739723637636E-4	DEFECT
// Try a silly case	WITHOUT_CLASSIFICATION	0.9997399119249666	WITHOUT_CLASSIFICATION	2.600880750334192E-4	DEFECT
// java.home is bogus	WITHOUT_CLASSIFICATION	0.9999966966162463	WITHOUT_CLASSIFICATION	3.303383753647904E-6	DEFECT
// 60s // a further 30s	WITHOUT_CLASSIFICATION	0.9999933207761662	WITHOUT_CLASSIFICATION	6.679223833759141E-6	DEFECT
// 60s // a further 30s	WITHOUT_CLASSIFICATION	0.9999933207761662	WITHOUT_CLASSIFICATION	6.679223833759141E-6	DEFECT
// 60s // a further 30s	WITHOUT_CLASSIFICATION	0.9999933207761662	WITHOUT_CLASSIFICATION	6.679223833759141E-6	DEFECT
// order of headers cannot be guaranteed	WITHOUT_CLASSIFICATION	0.9999903994093302	WITHOUT_CLASSIFICATION	9.600590669685741E-6	DEFECT
// order of headers cannot be guaranteed	WITHOUT_CLASSIFICATION	0.9999903994093302	WITHOUT_CLASSIFICATION	9.600590669685741E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999707121018232	WITHOUT_CLASSIFICATION	2.9287898176784134E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999707121018232	WITHOUT_CLASSIFICATION	2.9287898176784134E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999707121018232	WITHOUT_CLASSIFICATION	2.9287898176784134E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999707121018232	WITHOUT_CLASSIFICATION	2.9287898176784134E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999707121018232	WITHOUT_CLASSIFICATION	2.9287898176784134E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999707121018232	WITHOUT_CLASSIFICATION	2.9287898176784134E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999707121018232	WITHOUT_CLASSIFICATION	2.9287898176784134E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999707121018232	WITHOUT_CLASSIFICATION	2.9287898176784134E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999707121018232	WITHOUT_CLASSIFICATION	2.9287898176784134E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999707121018232	WITHOUT_CLASSIFICATION	2.9287898176784134E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999707121018232	WITHOUT_CLASSIFICATION	2.9287898176784134E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999707121018232	WITHOUT_CLASSIFICATION	2.9287898176784134E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999707121018232	WITHOUT_CLASSIFICATION	2.9287898176784134E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999707121018232	WITHOUT_CLASSIFICATION	2.9287898176784134E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999707121018232	WITHOUT_CLASSIFICATION	2.9287898176784134E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999707121018232	WITHOUT_CLASSIFICATION	2.9287898176784134E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999707121018232	WITHOUT_CLASSIFICATION	2.9287898176784134E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999707121018232	WITHOUT_CLASSIFICATION	2.9287898176784134E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999707121018232	WITHOUT_CLASSIFICATION	2.9287898176784134E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999707121018232	WITHOUT_CLASSIFICATION	2.9287898176784134E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999707121018232	WITHOUT_CLASSIFICATION	2.9287898176784134E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999707121018232	WITHOUT_CLASSIFICATION	2.9287898176784134E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999707121018232	WITHOUT_CLASSIFICATION	2.9287898176784134E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999707121018232	WITHOUT_CLASSIFICATION	2.9287898176784134E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999707121018232	WITHOUT_CLASSIFICATION	2.9287898176784134E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999707121018232	WITHOUT_CLASSIFICATION	2.9287898176784134E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999707121018232	WITHOUT_CLASSIFICATION	2.9287898176784134E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999707121018232	WITHOUT_CLASSIFICATION	2.9287898176784134E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999707121018232	WITHOUT_CLASSIFICATION	2.9287898176784134E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999707121018232	WITHOUT_CLASSIFICATION	2.9287898176784134E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999707121018232	WITHOUT_CLASSIFICATION	2.9287898176784134E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999707121018232	WITHOUT_CLASSIFICATION	2.9287898176784134E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999707121018232	WITHOUT_CLASSIFICATION	2.9287898176784134E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999707121018232	WITHOUT_CLASSIFICATION	2.9287898176784134E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999707121018232	WITHOUT_CLASSIFICATION	2.9287898176784134E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999707121018232	WITHOUT_CLASSIFICATION	2.9287898176784134E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999707121018232	WITHOUT_CLASSIFICATION	2.9287898176784134E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999707121018232	WITHOUT_CLASSIFICATION	2.9287898176784134E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999707121018232	WITHOUT_CLASSIFICATION	2.9287898176784134E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999707121018232	WITHOUT_CLASSIFICATION	2.9287898176784134E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999707121018232	WITHOUT_CLASSIFICATION	2.9287898176784134E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999707121018232	WITHOUT_CLASSIFICATION	2.9287898176784134E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999707121018232	WITHOUT_CLASSIFICATION	2.9287898176784134E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999707121018232	WITHOUT_CLASSIFICATION	2.9287898176784134E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999707121018232	WITHOUT_CLASSIFICATION	2.9287898176784134E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999707121018232	WITHOUT_CLASSIFICATION	2.9287898176784134E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999707121018232	WITHOUT_CLASSIFICATION	2.9287898176784134E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999707121018232	WITHOUT_CLASSIFICATION	2.9287898176784134E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999707121018232	WITHOUT_CLASSIFICATION	2.9287898176784134E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999707121018232	WITHOUT_CLASSIFICATION	2.9287898176784134E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999707121018232	WITHOUT_CLASSIFICATION	2.9287898176784134E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999707121018232	WITHOUT_CLASSIFICATION	2.9287898176784134E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999707121018232	WITHOUT_CLASSIFICATION	2.9287898176784134E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999707121018232	WITHOUT_CLASSIFICATION	2.9287898176784134E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999707121018232	WITHOUT_CLASSIFICATION	2.9287898176784134E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999707121018232	WITHOUT_CLASSIFICATION	2.9287898176784134E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999707121018232	WITHOUT_CLASSIFICATION	2.9287898176784134E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999707121018232	WITHOUT_CLASSIFICATION	2.9287898176784134E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999707121018232	WITHOUT_CLASSIFICATION	2.9287898176784134E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999707121018232	WITHOUT_CLASSIFICATION	2.9287898176784134E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999707121018232	WITHOUT_CLASSIFICATION	2.9287898176784134E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999707121018232	WITHOUT_CLASSIFICATION	2.9287898176784134E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999707121018232	WITHOUT_CLASSIFICATION	2.9287898176784134E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999707121018232	WITHOUT_CLASSIFICATION	2.9287898176784134E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999707121018232	WITHOUT_CLASSIFICATION	2.9287898176784134E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999707121018232	WITHOUT_CLASSIFICATION	2.9287898176784134E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999707121018232	WITHOUT_CLASSIFICATION	2.9287898176784134E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999707121018232	WITHOUT_CLASSIFICATION	2.9287898176784134E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999707121018232	WITHOUT_CLASSIFICATION	2.9287898176784134E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999707121018232	WITHOUT_CLASSIFICATION	2.9287898176784134E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999707121018232	WITHOUT_CLASSIFICATION	2.9287898176784134E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999707121018232	WITHOUT_CLASSIFICATION	2.9287898176784134E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999707121018232	WITHOUT_CLASSIFICATION	2.9287898176784134E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999707121018232	WITHOUT_CLASSIFICATION	2.9287898176784134E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999707121018232	WITHOUT_CLASSIFICATION	2.9287898176784134E-5	DEFECT
/*                            Ignore method m, as there is an overloaded                            form of this method that takes in a                            non-string argument, which gains higher                            priority.                        */	WITHOUT_CLASSIFICATION	0.9999928970367126	WITHOUT_CLASSIFICATION	7.102963287440917E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999675172071433	WITHOUT_CLASSIFICATION	3.2482792856694074E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999675172071433	WITHOUT_CLASSIFICATION	3.2482792856694074E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999675172071433	WITHOUT_CLASSIFICATION	3.2482792856694074E-5	DEFECT
/*                        If the argument is not a String or Location,                        and if there                        is an overloaded form of this method already defined,                        we just override that with the new one.                        This mechanism does not guarantee any specific order                        in which the methods will be selected: so any code                        that depends on the order in which "set" methods have                        been defined, is not guaranteed to be selected in any                        particular order.                    */	WITHOUT_CLASSIFICATION	0.9998981820513492	WITHOUT_CLASSIFICATION	1.018179486507813E-4	DEFECT
// impossible as getMethods should only return public methods	WITHOUT_CLASSIFICATION	0.9999737319924409	WITHOUT_CLASSIFICATION	2.62680075590685E-5	DEFECT
// impossible as getMethods should only return public methods	WITHOUT_CLASSIFICATION	0.9999737319924409	WITHOUT_CLASSIFICATION	2.62680075590685E-5	DEFECT
// impossible as getMethods should only return public methods	WITHOUT_CLASSIFICATION	0.9999737319924409	WITHOUT_CLASSIFICATION	2.62680075590685E-5	DEFECT
// boolean and Boolean get special treatment because we // have a nice method in Project	WITHOUT_CLASSIFICATION	0.9999985490792582	WITHOUT_CLASSIFICATION	1.4509207417137503E-6	DEFECT
// find the line breaks and pass other chars through in blocks	WITHOUT_CLASSIFICATION	0.999988906903394	WITHOUT_CLASSIFICATION	1.1093096606011768E-5	DEFECT
// DataType can have a "no arg" constructor or take a single // Project argument.	WITHOUT_CLASSIFICATION	0.9999900695782459	WITHOUT_CLASSIFICATION	9.930421754197094E-6	DEFECT
// all the names are the same: check if the class path of the loader // is the same	WITHOUT_CLASSIFICATION	0.9998720469579534	WITHOUT_CLASSIFICATION	1.2795304204657882E-4	DEFECT
/* Interestingly enough, we get to here when a user                 * uses -Dname=value. However, in some cases, the OS                 * goes ahead and parses this out to args                 *   {"-Dname", "value"}                 * so instead of parsing on "=", we just make the "-D"                 * characters go away and skip one argument forward.                 *                 * I don't know how to predict when the JDK is going                 * to help or not, so we simply look for the equals sign.                 */	WITHOUT_CLASSIFICATION	0.9999676381756855	WITHOUT_CLASSIFICATION	3.23618243145175E-5	DEFECT
// if parent is null, then we are at the root of the fs, // complain that we can't find the build file.	WITHOUT_CLASSIFICATION	0.9999910164561167	WITHOUT_CLASSIFICATION	8.983543883315794E-6	DEFECT
// put back the original security manager //The following will never eval to true. (PD)	WITHOUT_CLASSIFICATION	0.9993056760817992	WITHOUT_CLASSIFICATION	6.943239182008961E-4	DEFECT
// ignore path elements which are invalid // relative to the project	WITHOUT_CLASSIFICATION	0.9999959024867014	WITHOUT_CLASSIFICATION	4.097513298507113E-6	DEFECT
// Ignore - we are interested only in the side // effect - that of getting the static initializers // invoked.  As we do not want to call a valid // constructor to get this side effect, an // attempt is made to call a hopefully // invalid constructor - come on, nobody // would have a constructor that takes in // 256 String arguments ;-) // (In fact, they can't - according to JVM spec // section 4.10, the number of method parameters is limited // to 255 by the definition of a method descriptor. // Constructors count as methods here.)	WITHOUT_CLASSIFICATION	0.9997744842631816	WITHOUT_CLASSIFICATION	2.255157368183047E-4	DEFECT
/*<URL>*/	WITHOUT_CLASSIFICATION	0.9996421222278228	WITHOUT_CLASSIFICATION	3.5787777217725464E-4	DEFECT
/*<URL>*/	WITHOUT_CLASSIFICATION	0.9996421222278228	WITHOUT_CLASSIFICATION	3.5787777217725464E-4	DEFECT
// 'sync' is needed - otherwise 2 threads can load the same class // twice, resulting in LinkageError: duplicated class definition. // findLoadedClass avoids that, but without sync it won't work.	WITHOUT_CLASSIFICATION	0.9967578329473703	WITHOUT_CLASSIFICATION	0.003242167052629808	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.998803732051834	WITHOUT_CLASSIFICATION	0.0011962679481660166	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.998803732051834	WITHOUT_CLASSIFICATION	0.0011962679481660166	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.998803732051834	WITHOUT_CLASSIFICATION	0.0011962679481660166	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.998803732051834	WITHOUT_CLASSIFICATION	0.0011962679481660166	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.998803732051834	WITHOUT_CLASSIFICATION	0.0011962679481660166	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.998803732051834	WITHOUT_CLASSIFICATION	0.0011962679481660166	DEFECT
// Not significant for the class loader.	WITHOUT_CLASSIFICATION	0.9999926089988381	WITHOUT_CLASSIFICATION	7.391001161779374E-6	DEFECT
// Not significant for the class loader.	WITHOUT_CLASSIFICATION	0.9999926089988381	WITHOUT_CLASSIFICATION	7.391001161779374E-6	DEFECT
// Not significant for the class loader.	WITHOUT_CLASSIFICATION	0.9999926089988381	WITHOUT_CLASSIFICATION	7.391001161779374E-6	DEFECT
// Not significant for the class loader.	WITHOUT_CLASSIFICATION	0.9999926089988381	WITHOUT_CLASSIFICATION	7.391001161779374E-6	DEFECT
// Not significant for the class loader.	WITHOUT_CLASSIFICATION	0.9999926089988381	WITHOUT_CLASSIFICATION	7.391001161779374E-6	DEFECT
// don't have to check for public, since // getConstructor finds public constructors only.	WITHOUT_CLASSIFICATION	0.999963849685099	WITHOUT_CLASSIFICATION	3.6150314900979923E-5	DEFECT
//not a known type	WITHOUT_CLASSIFICATION	0.9994598927906215	WITHOUT_CLASSIFICATION	5.401072093784172E-4	DEFECT
// Initialize the globalFileSet's project	WITHOUT_CLASSIFICATION	0.9999969722032945	WITHOUT_CLASSIFICATION	3.027796705441719E-6	DEFECT
// create a new Vector to avoid ConcurrentModificationExc when // the listeners get added/removed while we are in fire	WITHOUT_CLASSIFICATION	0.9999826622658555	WITHOUT_CLASSIFICATION	1.733773414446638E-5	DEFECT
// first build exception	WITHOUT_CLASSIFICATION	0.9999830394066401	WITHOUT_CLASSIFICATION	1.6960593359841042E-5	DEFECT
// Not been visited	WITHOUT_CLASSIFICATION	0.9999883226769898	WITHOUT_CLASSIFICATION	1.1677323010329789E-5	DEFECT
// -------------------- Optional methods   -------------------- // You can override those methods if you want to optimize or // do advanced things (like support a special syntax). // The methods do not chain - you should use them when embedding ant // (by replacing the main helper)	WITHOUT_CLASSIFICATION	0.9998497604537793	WITHOUT_CLASSIFICATION	1.5023954622084268E-4	DEFECT
/*                fragments.addElement(value.substring(pos + 1, pos + 2));                prev = pos + 2;                */	WITHOUT_CLASSIFICATION	0.9999991689276607	WITHOUT_CLASSIFICATION	8.310723393162778E-7	DEFECT
//empty	WITHOUT_CLASSIFICATION	0.9994888535314366	WITHOUT_CLASSIFICATION	5.111464685634536E-4	DEFECT
//empty	WITHOUT_CLASSIFICATION	0.9994888535314366	WITHOUT_CLASSIFICATION	5.111464685634536E-4	DEFECT
// -------------------- Common properties  -------------------- // The following properties are required by import ( and other tasks // that read build files using ProjectHelper ).	WITHOUT_CLASSIFICATION	0.9994660875776661	WITHOUT_CLASSIFICATION	5.339124223339217E-4	DEFECT
// check to what is in the classname	WITHOUT_CLASSIFICATION	0.9999735645351885	WITHOUT_CLASSIFICATION	2.643546481149197E-5	DEFECT
//not included, do nothing	WITHOUT_CLASSIFICATION	0.9998560741426029	WITHOUT_CLASSIFICATION	1.4392585739700204E-4	DEFECT
//not included, do nothing	WITHOUT_CLASSIFICATION	0.9998560741426029	WITHOUT_CLASSIFICATION	1.4392585739700204E-4	DEFECT
// Attributes	WITHOUT_CLASSIFICATION	0.9999926496169332	WITHOUT_CLASSIFICATION	7.35038306665797E-6	DEFECT
// make sure we aren't going to get the path separator next	WITHOUT_CLASSIFICATION	0.9999586342752655	WITHOUT_CLASSIFICATION	4.1365724734479055E-5	DEFECT
// 'reasonable' default, if the component is used without // a Project ( for example as a standalone Bean ). // Most ant components can be used this way.	WITHOUT_CLASSIFICATION	0.9999998385773539	WITHOUT_CLASSIFICATION	1.6142264614698977E-7	DEFECT
// don't have to check for public, since // getMethod finds public method only. // don't have to check for abstract, since then // taskClass would be abstract too.	WITHOUT_CLASSIFICATION	0.9999091213292682	WITHOUT_CLASSIFICATION	9.087867073176967E-5	DEFECT
// Mac	WITHOUT_CLASSIFICATION	0.9999767655192271	WITHOUT_CLASSIFICATION	2.3234480773005298E-5	DEFECT
// set in/excludes to reasonable defaults if needed:	WITHOUT_CLASSIFICATION	0.9999889665683732	WITHOUT_CLASSIFICATION	1.1033431626749083E-5	DEFECT
// may be on a case insensitive file system.  We want // the results to show what's really on the disk, so // we need to double check.	WITHOUT_CLASSIFICATION	0.9999643713072769	WITHOUT_CLASSIFICATION	3.562869272301401E-5	DEFECT
// avoid double scanning of directories, can only happen in fast mode	WITHOUT_CLASSIFICATION	0.9996234255810836	WITHOUT_CLASSIFICATION	3.765744189163715E-4	DEFECT
// Usually the initialized is set to true. But here it must not. // Because the prepend and append readers have to be instantiated // on runtime //newFilter.setInitialized(true);	WITHOUT_CLASSIFICATION	0.9999839914426906	WITHOUT_CLASSIFICATION	1.600855730940381E-5	DEFECT
// if at EOF with no characters in the buffer, return EOF	WITHOUT_CLASSIFICATION	0.9999907191948774	WITHOUT_CLASSIFICATION	9.280805122638168E-6	DEFECT
// The current character is always emitted.	WITHOUT_CLASSIFICATION	0.9999624029770485	WITHOUT_CLASSIFICATION	3.7597022951543585E-5	DEFECT
// The current character is always emitted.	WITHOUT_CLASSIFICATION	0.9999624029770485	WITHOUT_CLASSIFICATION	3.7597022951543585E-5	DEFECT
// The current character is always emitted.	WITHOUT_CLASSIFICATION	0.9999624029770485	WITHOUT_CLASSIFICATION	3.7597022951543585E-5	DEFECT
// The current character is always emitted.	WITHOUT_CLASSIFICATION	0.9999624029770485	WITHOUT_CLASSIFICATION	3.7597022951543585E-5	DEFECT
// Fall tru	WITHOUT_CLASSIFICATION	0.9999064615649307	WITHOUT_CLASSIFICATION	9.35384350693076E-5	DEFECT
// Fall tru	WITHOUT_CLASSIFICATION	0.9999064615649307	WITHOUT_CLASSIFICATION	9.35384350693076E-5	DEFECT
// Fall tru	WITHOUT_CLASSIFICATION	0.9999064615649307	WITHOUT_CLASSIFICATION	9.35384350693076E-5	DEFECT
// Fall tru	WITHOUT_CLASSIFICATION	0.9999064615649307	WITHOUT_CLASSIFICATION	9.35384350693076E-5	DEFECT
// Works like clone() but doesn't show up in the Javadocs	WITHOUT_CLASSIFICATION	0.9999770201349796	WITHOUT_CLASSIFICATION	2.297986502050884E-5	DEFECT
// ----------------------------------------- //  Predefined filters // -----------------------------------------	WITHOUT_CLASSIFICATION	0.9999894527593044	WITHOUT_CLASSIFICATION	1.054724069564467E-5	DEFECT
// -------------------------------------------- // //      Filter classes // // --------------------------------------------	WITHOUT_CLASSIFICATION	0.9999792662499521	WITHOUT_CLASSIFICATION	2.07337500477807E-5	DEFECT
// Execute the top-level target	WITHOUT_CLASSIFICATION	0.9999948958390961	WITHOUT_CLASSIFICATION	5.1041609039624254E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.99987048956532	WITHOUT_CLASSIFICATION	1.2951043468007955E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.99987048956532	WITHOUT_CLASSIFICATION	1.2951043468007955E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.99987048956532	WITHOUT_CLASSIFICATION	1.2951043468007955E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.99987048956532	WITHOUT_CLASSIFICATION	1.2951043468007955E-4	DEFECT
// Also check for properly formed URIs. Ant formerly recommended using // nonsense URIs such as "file:./foo.xml" in XML includes. You shouldn't // do that (just "foo.xml" is correct) but for compatibility we special-case // things when the path is not absolute, and fall back to the old parsing behavior.	WITHOUT_CLASSIFICATION	0.9979732016028322	WITHOUT_CLASSIFICATION	0.002026798397167736	DEFECT
//decide whether to copy the existing arg set, or //build a new one from the list of all args excluding the special //operations that only we handle	WITHOUT_CLASSIFICATION	0.9992972386244809	WITHOUT_CLASSIFICATION	7.027613755189488E-4	DEFECT
// convert the replyTo string into a vector of emailaddresses	WITHOUT_CLASSIFICATION	0.999929822688435	WITHOUT_CLASSIFICATION	7.017731156509073E-5	DEFECT
// private static final int BG_BLACK = 40; // private static final int BG_RED = 41; // private static final int BG_GREEN = 42; // private static final int BG_YELLOW = 44; // private static final int BG_BLUE = 44; // private static final int BG_MAGENTA = 45; // private static final int BG_CYAN = 46; // private static final int BG_WHITE = 47;	WITHOUT_CLASSIFICATION	0.9999998719371912	WITHOUT_CLASSIFICATION	1.2806280872034815E-7	DEFECT
// If the file being added is META-INF/application.xml, we // warn if it's not the one specified in the "appxml" // attribute - or if it's being added twice, meaning the same // file is specified by the "appxml" attribute and in a // <fileset> element.	WITHOUT_CLASSIFICATION	0.999999764550425	WITHOUT_CLASSIFICATION	2.3544957494927125E-7	DEFECT
// class found but restricted name; this is // actually the case we're looking for in JDK 1.3+, // so catch the exception and return	WITHOUT_CLASSIFICATION	0.999985821068909	WITHOUT_CLASSIFICATION	1.4178931091055187E-5	DEFECT
// Can return null to represent the bootstrap class loader. // see API docs of Class.getClassLoader.	WITHOUT_CLASSIFICATION	0.9999976332660026	WITHOUT_CLASSIFICATION	2.3667339974679778E-6	DEFECT
//default	WITHOUT_CLASSIFICATION	0.9997592307842613	WITHOUT_CLASSIFICATION	2.407692157385846E-4	DEFECT
//default	WITHOUT_CLASSIFICATION	0.9997592307842613	WITHOUT_CLASSIFICATION	2.407692157385846E-4	DEFECT
// use to scan own archive	WITHOUT_CLASSIFICATION	0.999995680369137	WITHOUT_CLASSIFICATION	4.3196308629787724E-6	DEFECT
// collect filesets to pass them to getResourcesToAdd	WITHOUT_CLASSIFICATION	0.9999978463567296	WITHOUT_CLASSIFICATION	2.153643270347897E-6	DEFECT
// If we're in this finally clause because of an // exception, we don't really care if there's an // exception when closing the stream. E.g. if it // throws "ZIP file must have at least one entry", // because an exception happened before we added // any files, then we must swallow this // exception. Otherwise, the error that's reported // will be the close() error, which is not the // real cause of the problem.	WITHOUT_CLASSIFICATION	0.947415012808629	WITHOUT_CLASSIFICATION	0.05258498719137096	DEFECT
/*             * Bad luck.             *             * There are resources in the filesets that make the             * archive out of date, but not in the non-fileset             * resources. We need to rescan the non-FileSets to grab             * all of them now.             */	WITHOUT_CLASSIFICATION	0.9997409945331812	WITHOUT_CLASSIFICATION	2.5900546681879177E-4	DEFECT
// ZIPs store time with a granularity of 2 seconds, round up	WITHOUT_CLASSIFICATION	0.9998987957690444	WITHOUT_CLASSIFICATION	1.0120423095560954E-4	DEFECT
/*             * ZipOutputStream.putNextEntry expects the ZipEntry to             * know its size and the CRC sum before you start writing             * the data when using STORED mode - unless it is seekable.             *             * This forces us to process the data twice.             */	WITHOUT_CLASSIFICATION	0.9999976840780267	WITHOUT_CLASSIFICATION	2.315921973203297E-6	DEFECT
// may be altered in validate	WITHOUT_CLASSIFICATION	0.9999965456799995	WITHOUT_CLASSIFICATION	3.4543200004424123E-6	DEFECT
//at this point the paths are set up with lists of files, //and the mapper is ready to map from source dirs to dest files //now we iterate through every JAR giving source and dest names // deal with the paths	WITHOUT_CLASSIFICATION	0.999998593361416	WITHOUT_CLASSIFICATION	1.406638583972686E-6	DEFECT
//calculate our destination directory; it is either the destDir //attribute, or the base dir of the fileset (for in situ updates)	WITHOUT_CLASSIFICATION	0.9996456707453206	WITHOUT_CLASSIFICATION	3.5432925467938735E-4	DEFECT
// Error messages	WITHOUT_CLASSIFICATION	0.9999690768903922	WITHOUT_CLASSIFICATION	3.092310960794541E-5	DEFECT
// Default the viewpath to basedir if it is not specified	WITHOUT_CLASSIFICATION	0.9999811802610284	WITHOUT_CLASSIFICATION	1.8819738971559506E-5	DEFECT
// Default the viewpath to basedir if it is not specified	WITHOUT_CLASSIFICATION	0.9999811802610284	WITHOUT_CLASSIFICATION	1.8819738971559506E-5	DEFECT
// Default the viewpath to basedir if it is not specified	WITHOUT_CLASSIFICATION	0.9999811802610284	WITHOUT_CLASSIFICATION	1.8819738971559506E-5	DEFECT
// Parse the attribute(s) and text of this node, adding // properties for each. // if the "path" attribute is specified, then return the created path // which will be passed to the children of this node.	WITHOUT_CLASSIFICATION	0.9999581029315943	WITHOUT_CLASSIFICATION	4.1897068405726174E-5	DEFECT
// An arbitrary attribute.	WITHOUT_CLASSIFICATION	0.9999711096968249	WITHOUT_CLASSIFICATION	2.889030317499871E-5	DEFECT
// Return the Path we added or the ID of this node for // children to reference if needed.  Path objects are // definitely used by child path elements, and ID may be used // for a child text node.	WITHOUT_CLASSIFICATION	0.9999997880992704	WITHOUT_CLASSIFICATION	2.119007296782585E-7	DEFECT
// Fall Through	WITHOUT_CLASSIFICATION	0.999371913215125	WITHOUT_CLASSIFICATION	6.280867848749436E-4	DEFECT
// Fall Through	WITHOUT_CLASSIFICATION	0.999371913215125	WITHOUT_CLASSIFICATION	6.280867848749436E-4	DEFECT
// Ignore the problem	WITHOUT_CLASSIFICATION	0.9998688721077822	WITHOUT_CLASSIFICATION	1.311278922177807E-4	DEFECT
// If we're on windows, then do the comparison ignoring case // and treat the two directory characters the same	WITHOUT_CLASSIFICATION	0.9974227732289777	WITHOUT_CLASSIFICATION	0.0025772267710223637	DEFECT
// for NetWare and OS/2, piggy-back on Windows, since in the // validateSetup code, the same assumptions can be made as // with windows - that ; is the path separator	WITHOUT_CLASSIFICATION	0.999983029777469	WITHOUT_CLASSIFICATION	1.697022253098546E-5	DEFECT
// END static class TemplateElement	WITHOUT_CLASSIFICATION	0.999978065190693	WITHOUT_CLASSIFICATION	2.193480930710625E-5	DEFECT
////////////////////////////////////////////////////////////////////// // CONSTRUCTORS / INITIALIZERS	WITHOUT_CLASSIFICATION	0.9999292276872337	WITHOUT_CLASSIFICATION	7.077231276629448E-5	DEFECT
//value and property are mutually exclusive attributes	WITHOUT_CLASSIFICATION	0.9999353090391737	WITHOUT_CLASSIFICATION	6.469096082623098E-5	DEFECT
// Ignore Exception	WITHOUT_CLASSIFICATION	0.9999271611205274	WITHOUT_CLASSIFICATION	7.283887947267933E-5	DEFECT
//int logLevel = filesetManifestConfig == null ? //    Project.MSG_WARN : Project.MSG_VERBOSE; //log("File " + file //    + " includes a META-INF/MANIFEST.MF which will be ignored. " //    + "To include this file, set filesetManifest to a value other " //    + "than 'skip'.", logLevel);	WITHOUT_CLASSIFICATION	0.9999996322822368	WITHOUT_CLASSIFICATION	3.6771776328936366E-7	DEFECT
// Create the directory, as it might not exist.	WITHOUT_CLASSIFICATION	0.9999623692564955	WITHOUT_CLASSIFICATION	3.7630743504493355E-5	DEFECT
// Calculate the total checksum // Convert the keys (source files) into a sorted array.	WITHOUT_CLASSIFICATION	0.9999980997854049	WITHOUT_CLASSIFICATION	1.9002145950415687E-6	DEFECT
// must not use getEntry as "well behaving" applications // must accept the manifest in any capitalization	WITHOUT_CLASSIFICATION	0.9998490985279619	WITHOUT_CLASSIFICATION	1.5090147203807667E-4	DEFECT
// We just set the prefix for this fileset, and pass it up.	WITHOUT_CLASSIFICATION	0.9999937563202457	WITHOUT_CLASSIFICATION	6.243679754386931E-6	DEFECT
// We just set the prefix for this fileset, and pass it up.	WITHOUT_CLASSIFICATION	0.9999937563202457	WITHOUT_CLASSIFICATION	6.243679754386931E-6	DEFECT
/*             * Precedence: manifestFile wins over inline manifest,             * over manifests read from the filesets over the original             * manifest.             *             * merge with null argument is a no-op             */	WITHOUT_CLASSIFICATION	0.99999583325985	WITHOUT_CLASSIFICATION	4.16674014995561E-6	DEFECT
// filesets are separate from the rest for performance // reasons.  If we use the code for union below, we'll always // scan all filesets, even if we know the target is out of // date after the first test.	WITHOUT_CLASSIFICATION	0.9999998143818039	WITHOUT_CLASSIFICATION	1.8561819619098733E-7	DEFECT
// If the archive is built for the first time and it is // matched by a resource collection, then it hasn't been // found in check (it hasn't been there) but will be // included now. // // for some strange reason the old code would simply skip // the entry and not fail, do the same now for backwards // compatibility reasons.  Without this, the which4j build // fails in Gump	WITHOUT_CLASSIFICATION	0.9984380042261974	WITHOUT_CLASSIFICATION	0.001561995773802536	DEFECT
// preserve permissions	WITHOUT_CLASSIFICATION	0.999994061105666	WITHOUT_CLASSIFICATION	5.938894333997895E-6	DEFECT
// override permissions if set explicitly	WITHOUT_CLASSIFICATION	0.9999973375997773	WITHOUT_CLASSIFICATION	2.6624002227103975E-6	DEFECT
// Check if we can contact the URL	WITHOUT_CLASSIFICATION	0.9999859184843236	WITHOUT_CLASSIFICATION	1.4081515676331006E-5	DEFECT
// // Instance //	WITHOUT_CLASSIFICATION	0.9999965110017215	WITHOUT_CLASSIFICATION	3.488998278476832E-6	DEFECT
//the Exec OS check is different from Os.isOs(), which //probes for a specific OS. Instead it searches the os field //for the current os.name	WITHOUT_CLASSIFICATION	0.9999890124577377	WITHOUT_CLASSIFICATION	1.0987542262300279E-5	DEFECT
// Similar to a fileset, but doesn't allow dir attribute to be set	WITHOUT_CLASSIFICATION	0.9998838941077467	WITHOUT_CLASSIFICATION	1.1610589225324666E-4	DEFECT
// If the destination directory didn't already exist, // or was empty, then no previous file removal is necessary!	WITHOUT_CLASSIFICATION	0.9999860501412149	WITHOUT_CLASSIFICATION	1.3949858785133809E-5	DEFECT
// Default the viewpath to basedir if it is not specified	WITHOUT_CLASSIFICATION	0.9999811802610284	WITHOUT_CLASSIFICATION	1.8819738971559506E-5	DEFECT
// preserveInTarget would find all files we want to keep, // but we need to find all that we want to delete - so the // meaning of all patterns and selectors must be inverted	WITHOUT_CLASSIFICATION	0.9999989313818703	WITHOUT_CLASSIFICATION	1.0686181295885012E-6	DEFECT
//On VMS platform, we need to create a special java options file //containing the arguments and classpath for the java command. //The special file is supported by the "-V" switch on the VMS JVM.	WITHOUT_CLASSIFICATION	0.9999958393967456	WITHOUT_CLASSIFICATION	4.160603254387433E-6	DEFECT
// Do nothing if no resources (including nested text)	WITHOUT_CLASSIFICATION	0.9999986836645514	WITHOUT_CLASSIFICATION	1.3163354485904072E-6	DEFECT
// Windows has a 32k limit on total arg size, so // create a temporary file to store all the arguments	WITHOUT_CLASSIFICATION	0.9997798985651708	WITHOUT_CLASSIFICATION	2.2010143482929068E-4	DEFECT
// filesets has been protected so we need to keep that even after // switching to resource collections.  In fact, they will still // get a different treatment form the other resource collections // even in execute since we have some subtle special features like // switching type to "dir" when we encounter a DirSet that would // be more difficult to achieve otherwise.	WITHOUT_CLASSIFICATION	0.9997027151722504	WITHOUT_CLASSIFICATION	2.9728482774954543E-4	DEFECT
// need to reset the stream handler to restart // reading of pipes; // go ahead and do it always w/ nested redirectors	WITHOUT_CLASSIFICATION	0.9999690933929757	WITHOUT_CLASSIFICATION	3.090660702436778E-5	DEFECT
/*             * if we get here, in and out have not been specified, we are             * in batch processing mode.             */	WITHOUT_CLASSIFICATION	0.9999947426767555	WITHOUT_CLASSIFICATION	5.257323244530119E-6	DEFECT
//at this point there is one trailing space to remove, if the list is not empty.	WITHOUT_CLASSIFICATION	0.9997652552291197	WITHOUT_CLASSIFICATION	2.3474477088015233E-4	DEFECT
// Ignore and keep trying	WITHOUT_CLASSIFICATION	0.9999867803918753	WITHOUT_CLASSIFICATION	1.3219608124663222E-5	DEFECT
// Chunk part of previous env var (UNIX env vars can // contain embedded new lines).	WITHOUT_CLASSIFICATION	0.9999975623303338	WITHOUT_CLASSIFICATION	2.437669666272702E-6	DEFECT
// Since we "look ahead" before adding, there's one last env var.	WITHOUT_CLASSIFICATION	0.9999977679996829	WITHOUT_CLASSIFICATION	2.2320003172065686E-6	DEFECT
//noop default encoding used	WITHOUT_CLASSIFICATION	0.9999289378497372	WITHOUT_CLASSIFICATION	7.10621502627916E-5	DEFECT
// On OpenVMS Runtime#exec() doesn't support the environment array, // so we only return the new values which then will be set in // the generated DCL script, inheriting the parent process environment	WITHOUT_CLASSIFICATION	0.9999989975368686	WITHOUT_CLASSIFICATION	1.0024631314000383E-6	DEFECT
// Locate the auxiliary script	WITHOUT_CLASSIFICATION	0.9999958369947441	WITHOUT_CLASSIFICATION	4.163005255882933E-6	DEFECT
// Build the command	WITHOUT_CLASSIFICATION	0.9999764513774771	WITHOUT_CLASSIFICATION	2.3548622522887598E-5	DEFECT
/*         * Writes the command into a temporary DCL script and returns the         * corresponding File object.  The script will be deleted on exit.         * @param cmd the command line to execute as an array of strings.         * @param env the environment to set as an array of strings.         * @return the command File.         * @throws IOException if errors are encountered creating the file.         */	WITHOUT_CLASSIFICATION	0.9999676367012148	WITHOUT_CLASSIFICATION	3.236329878517287E-5	DEFECT
//************************************************************************ //  protected and private methods //************************************************************************	WITHOUT_CLASSIFICATION	0.9999991958509252	WITHOUT_CLASSIFICATION	8.041490746496031E-7	DEFECT
// ensure that parent dir of dest file exists!	WITHOUT_CLASSIFICATION	0.9999980975435853	WITHOUT_CLASSIFICATION	1.9024564146238424E-6	DEFECT
// add the single group arguments // Javadoc 1.2 rules: //   Multiple -group args allowed. //   Each arg includes 3 strings: -group [name] [packagelist]. //   Elements in [packagelist] are colon-delimited. //   An element in [packagelist] may end with the * wildcard.	WITHOUT_CLASSIFICATION	0.9999470667292454	WITHOUT_CLASSIFICATION	5.293327075472184E-5	DEFECT
// for each sourcePath entry, add a directoryset with includes // taken from packagenames attribute and nested package // elements and excludes taken from excludepackages attribute // and nested excludepackage elements	WITHOUT_CLASSIFICATION	0.9999986461862307	WITHOUT_CLASSIFICATION	1.3538137693850029E-6	DEFECT
// // Override the logging of output in order to filter out Generating // messages.  Generating messages are set to a priority of VERBOSE // unless they appear after what could be an informational message. //	WITHOUT_CLASSIFICATION	0.9999964616196002	WITHOUT_CLASSIFICATION	3.5383803998525984E-6	DEFECT
/* Methods below all add specific selectors */	WITHOUT_CLASSIFICATION	0.9999944861055023	WITHOUT_CLASSIFICATION	5.513894497626527E-6	DEFECT
/* Methods below all add specific selectors */	WITHOUT_CLASSIFICATION	0.9999944861055023	WITHOUT_CLASSIFICATION	5.513894497626527E-6	DEFECT
/* Methods below all add specific selectors */	WITHOUT_CLASSIFICATION	0.9999944861055023	WITHOUT_CLASSIFICATION	5.513894497626527E-6	DEFECT
/*               If verbosity is MSG_VERBOSE, that mean we are doing               regular logging (backwards as that sounds).  In that               case, we want to print one message about deleting the               top of the directory tree.  Otherwise, the removeDir               method will handle messages for _all_ directories.             */	WITHOUT_CLASSIFICATION	0.9999946824267041	WITHOUT_CLASSIFICATION	5.3175732958732765E-6	DEFECT
//hand down	WITHOUT_CLASSIFICATION	0.9988120436293891	WITHOUT_CLASSIFICATION	0.0011879563706109087	DEFECT
// create intermediary directories - sometimes zip don't add them	WITHOUT_CLASSIFICATION	0.99997714760116	WITHOUT_CLASSIFICATION	2.2852398840067337E-5	DEFECT
// SQL defines "--" as a comment to EOL // and in Oracle it may contain a hint // so we cannot just remove it, instead we must end it	WITHOUT_CLASSIFICATION	0.9999995228556805	WITHOUT_CLASSIFICATION	4.771443195460007E-7	DEFECT
/*         * In Ant 1.1, <chmod dir="foo" /> means, change the permissions         * of directory foo, not anything inside of it.  This is the case the         * second branch of the if statement below catches for backwards         * compatibility.         */	WITHOUT_CLASSIFICATION	0.9997589759513443	WITHOUT_CLASSIFICATION	2.410240486555935E-4	DEFECT
/* for historical and performance reasons we have to do               things in a rather complex way.               (1) Move is optimized to move directories if a fileset               has been included completely, therefore FileSets need a               special treatment.  This is also required to support               the failOnError semantice (skip filesets with broken               basedir but handle the remaining collections).               (2) We carry around a few protected methods that work               on basedirs and arrays of names.  To optimize stuff, all               resources with the same basedir get collected in               separate lists and then each list is handled in one go.            */	WITHOUT_CLASSIFICATION	0.9952099404793049	WITHOUT_CLASSIFICATION	0.004790059520695107	DEFECT
//we create a fileset with the source file. //this lets us combine our logic for handling output directories, //mapping etc.	WITHOUT_CLASSIFICATION	0.9999122418370792	WITHOUT_CLASSIFICATION	8.775816292075281E-5	DEFECT
// if input files are specified, inputString and inputStream are ignored; // classes that work with redirector attributes can enforce // whatever warnings are needed	WITHOUT_CLASSIFICATION	0.9999995896459213	WITHOUT_CLASSIFICATION	4.103540787014585E-7	DEFECT
// Ignore exception	WITHOUT_CLASSIFICATION	0.9999409144231644	WITHOUT_CLASSIFICATION	5.908557683564752E-5	DEFECT
// Ignore exception	WITHOUT_CLASSIFICATION	0.9999409144231644	WITHOUT_CLASSIFICATION	5.908557683564752E-5	DEFECT
// Ignore exception	WITHOUT_CLASSIFICATION	0.9999409144231644	WITHOUT_CLASSIFICATION	5.908557683564752E-5	DEFECT
// classpath attributes go into a vector	WITHOUT_CLASSIFICATION	0.9999980811824466	WITHOUT_CLASSIFICATION	1.918817553281698E-6	DEFECT
// we have already started reading this section // this line is the first attribute. set it and then // let the normal read handle the rest	WITHOUT_CLASSIFICATION	0.9999870942319221	WITHOUT_CLASSIFICATION	1.2905768077850795E-5	DEFECT
//not modified so no file download. just return //instead and trace out something so the user //doesn't think that the download happened when it //didn't	WITHOUT_CLASSIFICATION	0.999984194517187	WITHOUT_CLASSIFICATION	1.5805482812968034E-5	DEFECT
// we have started to (over)write dest, but failed. // Try to delete the garbage we'd otherwise leave // behind.	WITHOUT_CLASSIFICATION	0.9999555196815266	WITHOUT_CLASSIFICATION	4.448031847339015E-5	DEFECT
// start() would throw IllegalThreadStateException from // ThreadGroup.add if it were destroyed	WITHOUT_CLASSIFICATION	0.9999176068150883	WITHOUT_CLASSIFICATION	8.239318491171574E-5	DEFECT
// kjc-1.5A doesn't support -encoding option now. // but it will be supported near the feature.	WITHOUT_CLASSIFICATION	0.9994728820772483	WITHOUT_CLASSIFICATION	5.271179227517061E-4	DEFECT
// Create an instance of the compiler, redirecting output to // the project log	WITHOUT_CLASSIFICATION	0.9999894898913152	WITHOUT_CLASSIFICATION	1.0510108684855506E-5	DEFECT
// Setup the apt executable	WITHOUT_CLASSIFICATION	0.9999901290163211	WITHOUT_CLASSIFICATION	9.870983678941274E-6	DEFECT
//On VMS platform, we need to create a special java options file //containing the arguments and classpath for the javac command. //The special file is supported by the "-V" switch on the VMS JVM.	WITHOUT_CLASSIFICATION	0.999996728781584	WITHOUT_CLASSIFICATION	3.2712184159424907E-6	DEFECT
//must keep for subclass BC, though unused: // CheckStyle:ConstantNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9999670196668963	WITHOUT_CLASSIFICATION	3.2980333103819836E-5	DEFECT
// CheckStyle:ConstantNameCheck ON // CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999772683356223	WITHOUT_CLASSIFICATION	2.273166437777308E-5	DEFECT
// add dest dir to classpath so that previously compiled and // untouched classes are on classpath	WITHOUT_CLASSIFICATION	0.9999952647065896	WITHOUT_CLASSIFICATION	4.735293410339518E-6	DEFECT
// add dest dir to classpath so that previously compiled and // untouched classes are on classpath	WITHOUT_CLASSIFICATION	0.9999952647065896	WITHOUT_CLASSIFICATION	4.735293410339518E-6	DEFECT
// For -sourcepath, use the "sourcepath" value if present. // Otherwise default to the "srcdir" value.	WITHOUT_CLASSIFICATION	0.9999980995339196	WITHOUT_CLASSIFICATION	1.9004660803671054E-6	DEFECT
/*             * Many system have been reported to get into trouble with             * long command lines - no, not only Windows ;-).             *             * POSIX seems to define a lower limit of 4k, so use a temporary             * file if the total length of the command line exceeds this limit.             */	WITHOUT_CLASSIFICATION	0.9561156112672886	WITHOUT_CLASSIFICATION	0.04388438873271141	DEFECT
// there is a bootclasspath stated.  By default, the // includeJavaRuntime is false.  If the user has stated a // bootclasspath and said to include the java runtime, it's on // their head!	WITHOUT_CLASSIFICATION	0.9999967447767407	WITHOUT_CLASSIFICATION	3.255223259318799E-6	DEFECT
//The following is data used while processing stdout of CVS command	WITHOUT_CLASSIFICATION	0.9999687833812064	WITHOUT_CLASSIFICATION	3.1216618793502665E-5	DEFECT
// The date format is using a - format since 1.12.9 so we have: // 1.12.9-: 'date: YYYY/mm/dd HH:mm:ss;  author: name;' // 1.12.9+: 'date: YYYY-mm-dd HH:mm:ss Z;  author: name'	WITHOUT_CLASSIFICATION	0.9999969995756527	WITHOUT_CLASSIFICATION	3.0004243473216866E-6	DEFECT
// Default the viewpath to basedir if it is not specified	WITHOUT_CLASSIFICATION	0.9999811802610284	WITHOUT_CLASSIFICATION	1.8819738971559506E-5	DEFECT
// Default the viewpath to basedir if it is not specified	WITHOUT_CLASSIFICATION	0.9999811802610284	WITHOUT_CLASSIFICATION	1.8819738971559506E-5	DEFECT
// viewpath	WITHOUT_CLASSIFICATION	0.999990276318121	WITHOUT_CLASSIFICATION	9.72368187900024E-6	DEFECT
// ClearCase items	WITHOUT_CLASSIFICATION	0.999998908908631	WITHOUT_CLASSIFICATION	1.091091369059117E-6	DEFECT
// ClearCase items	WITHOUT_CLASSIFICATION	0.999998908908631	WITHOUT_CLASSIFICATION	1.091091369059117E-6	DEFECT
// -branch	WITHOUT_CLASSIFICATION	0.9999864414191653	WITHOUT_CLASSIFICATION	1.3558580834775718E-5	DEFECT
// -c	WITHOUT_CLASSIFICATION	0.999929398796381	WITHOUT_CLASSIFICATION	7.060120361891562E-5	DEFECT
// entries are of the form: //CVS 1.11 // File module/filename is new; current revision 1.1 //CVS 1.11.9 // File module/filename is new; cvstag_2003_11_03_2  revision 1.1 // or // File module/filename changed from revision 1.4 to 1.6 // or // File module/filename is removed; not included in // release tag SKINLF_12 //CVS 1.11.9 // File testantoine/antoine.bat is removed; TESTANTOINE_1 revision 1.1.1.1 // // get rid of 'File module/"	WITHOUT_CLASSIFICATION	0.9999742696609968	WITHOUT_CLASSIFICATION	2.5730339003250347E-5	DEFECT
// CheckStyle:MemberNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9999832161165388	WITHOUT_CLASSIFICATION	1.6783883461112892E-5	DEFECT
// We need character encoding aware printing here. // So, using PrintWriter over OutputStreamWriter instead of PrintStream	WITHOUT_CLASSIFICATION	0.9999948188297076	WITHOUT_CLASSIFICATION	5.181170292291489E-6	DEFECT
// convert from ascii back to native // encoding to convert to/from // Where to find input files // Where to put output files // Extension of output files if different	WITHOUT_CLASSIFICATION	0.9993407791056066	WITHOUT_CLASSIFICATION	6.592208943934747E-4	DEFECT
// we are forced to fork ANTLR since there is a call // to System.exit() and there is nothing we can do // right now to avoid this. :-( (SBa) // I'm not removing this method to keep backward compatibility	WITHOUT_CLASSIFICATION	0.9999574105949588	WITHOUT_CLASSIFICATION	4.2589405041285866E-5	DEFECT
//error if both are empty, or both are set	WITHOUT_CLASSIFICATION	0.999892319488056	WITHOUT_CLASSIFICATION	1.076805119439734E-4	DEFECT
// hasCR is still true (for the second one)	WITHOUT_CLASSIFICATION	0.9999506175625946	WITHOUT_CLASSIFICATION	4.938243740537151E-5	DEFECT
// should be the default, as it integrates better in ant.	WITHOUT_CLASSIFICATION	0.9999942437607761	WITHOUT_CLASSIFICATION	5.75623922398587E-6	DEFECT
// scan source and dest dirs to build up both copy lists and // compile lists //        scanDir(srcDir, destDir);	WITHOUT_CLASSIFICATION	0.9999990900848755	WITHOUT_CLASSIFICATION	9.09915124418092E-7	DEFECT
// if it's a non source file, copy it if a later date than the // dest // if it's a source file, see if the destination class file // needs to be recreated via compilation	WITHOUT_CLASSIFICATION	0.9999989967757986	WITHOUT_CLASSIFICATION	1.003224201349876E-6	DEFECT
// depending on implementation, XMLReader can yield hips of warning, // only output then if user explicitly asked for it	WITHOUT_CLASSIFICATION	0.999977911132449	WITHOUT_CLASSIFICATION	2.2088867550930718E-5	DEFECT
/* ========================================================================    *    * Instance variables.    */	WITHOUT_CLASSIFICATION	0.9999997574631642	WITHOUT_CLASSIFICATION	2.4253683587303803E-7	DEFECT
// swallow	WITHOUT_CLASSIFICATION	0.9999081578705552	WITHOUT_CLASSIFICATION	9.184212944476873E-5	DEFECT
// swallow	WITHOUT_CLASSIFICATION	0.9999081578705552	WITHOUT_CLASSIFICATION	9.184212944476873E-5	DEFECT
// swallow	WITHOUT_CLASSIFICATION	0.9999081578705552	WITHOUT_CLASSIFICATION	9.184212944476873E-5	DEFECT
// swallow	WITHOUT_CLASSIFICATION	0.9999081578705552	WITHOUT_CLASSIFICATION	9.184212944476873E-5	DEFECT
// If only default is specified and the property previously // existed in the property file, it is unchanged.	WITHOUT_CLASSIFICATION	0.9999799601234634	WITHOUT_CLASSIFICATION	2.0039876536600067E-5	DEFECT
// make sure to close all handles, otherwise the garbage // collector will close them...whenever possible and // Windows may complain about not being able to delete files.	WITHOUT_CLASSIFICATION	0.999517473145462	WITHOUT_CLASSIFICATION	4.825268545380149E-4	DEFECT
// WARN: Don't use the StreamSource(File) ctor. It won't work with // xalan prior to 2.2 because of systemid bugs.	WITHOUT_CLASSIFICATION	0.9971324860013456	WITHOUT_CLASSIFICATION	0.002867513998654347	DEFECT
// build the command line from what we got the format // as specified in the CCM.EXE help	WITHOUT_CLASSIFICATION	0.9999957959206021	WITHOUT_CLASSIFICATION	4.204079397999135E-6	DEFECT
// implementation of org.apache.tools.ant.taskdefs.ExecuteStreamHandler interface	WITHOUT_CLASSIFICATION	0.9999921013735451	WITHOUT_CLASSIFICATION	7.898626454864565E-6	DEFECT
// Default the viewpath to basedir if it is not specified	WITHOUT_CLASSIFICATION	0.9999811802610284	WITHOUT_CLASSIFICATION	1.8819738971559506E-5	DEFECT
// Default the viewpath to basedir if it is not specified	WITHOUT_CLASSIFICATION	0.9999811802610284	WITHOUT_CLASSIFICATION	1.8819738971559506E-5	DEFECT
// Default the viewpath to basedir if it is not specified	WITHOUT_CLASSIFICATION	0.9999811802610284	WITHOUT_CLASSIFICATION	1.8819738971559506E-5	DEFECT
// Default the viewpath to basedir if it is not specified	WITHOUT_CLASSIFICATION	0.9999811802610284	WITHOUT_CLASSIFICATION	1.8819738971559506E-5	DEFECT
/*         * pre Ant 1.6 this method used to call getClass().getResource         * while Ant 1.6 will call ClassLoader.getResource().         *         * The difference is that Class.getResource expects a leading         * slash for "absolute" resources and will strip it before         * delegating to ClassLoader.getResource - so we now have to         * emulate Class's behavior.         */	WITHOUT_CLASSIFICATION	0.9999998773759806	WITHOUT_CLASSIFICATION	1.2262401944308883E-7	DEFECT
// -c	WITHOUT_CLASSIFICATION	0.999929398796381	WITHOUT_CLASSIFICATION	7.060120361891562E-5	DEFECT
// -cfile	WITHOUT_CLASSIFICATION	0.9999693048623853	WITHOUT_CLASSIFICATION	3.069513761468106E-5	DEFECT
// -cfile	WITHOUT_CLASSIFICATION	0.9999693048623853	WITHOUT_CLASSIFICATION	3.069513761468106E-5	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999738204454653	WITHOUT_CLASSIFICATION	2.6179554534627278E-5	DEFECT
/* ------------- */	WITHOUT_CLASSIFICATION	0.9999135040987038	WITHOUT_CLASSIFICATION	8.649590129617908E-5	DEFECT
// -I- or -I-Y or -I-N	WITHOUT_CLASSIFICATION	0.9999211880014972	WITHOUT_CLASSIFICATION	7.881199850274124E-5	DEFECT
// -I- or -I-Y or -I-N	WITHOUT_CLASSIFICATION	0.9999211880014972	WITHOUT_CLASSIFICATION	7.881199850274124E-5	DEFECT
// -I- or -I-Y or -I-N	WITHOUT_CLASSIFICATION	0.9999211880014972	WITHOUT_CLASSIFICATION	7.881199850274124E-5	DEFECT
// first off, make sure that we've got a command and a vssdir and a label ...	WITHOUT_CLASSIFICATION	0.9999895700861929	WITHOUT_CLASSIFICATION	1.042991380703138E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999675172071433	WITHOUT_CLASSIFICATION	3.2482792856694074E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999675172071433	WITHOUT_CLASSIFICATION	3.2482792856694074E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999675172071433	WITHOUT_CLASSIFICATION	3.2482792856694074E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999675172071433	WITHOUT_CLASSIFICATION	3.2482792856694074E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999675172071433	WITHOUT_CLASSIFICATION	3.2482792856694074E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999675172071433	WITHOUT_CLASSIFICATION	3.2482792856694074E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999675172071433	WITHOUT_CLASSIFICATION	3.2482792856694074E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999675172071433	WITHOUT_CLASSIFICATION	3.2482792856694074E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999675172071433	WITHOUT_CLASSIFICATION	3.2482792856694074E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999675172071433	WITHOUT_CLASSIFICATION	3.2482792856694074E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999675172071433	WITHOUT_CLASSIFICATION	3.2482792856694074E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999675172071433	WITHOUT_CLASSIFICATION	3.2482792856694074E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999675172071433	WITHOUT_CLASSIFICATION	3.2482792856694074E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999675172071433	WITHOUT_CLASSIFICATION	3.2482792856694074E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999675172071433	WITHOUT_CLASSIFICATION	3.2482792856694074E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999675172071433	WITHOUT_CLASSIFICATION	3.2482792856694074E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999675172071433	WITHOUT_CLASSIFICATION	3.2482792856694074E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999675172071433	WITHOUT_CLASSIFICATION	3.2482792856694074E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999675172071433	WITHOUT_CLASSIFICATION	3.2482792856694074E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999675172071433	WITHOUT_CLASSIFICATION	3.2482792856694074E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999675172071433	WITHOUT_CLASSIFICATION	3.2482792856694074E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999675172071433	WITHOUT_CLASSIFICATION	3.2482792856694074E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999675172071433	WITHOUT_CLASSIFICATION	3.2482792856694074E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999675172071433	WITHOUT_CLASSIFICATION	3.2482792856694074E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999675172071433	WITHOUT_CLASSIFICATION	3.2482792856694074E-5	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999738204454653	WITHOUT_CLASSIFICATION	2.6179554534627278E-5	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999738204454653	WITHOUT_CLASSIFICATION	2.6179554534627278E-5	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999738204454653	WITHOUT_CLASSIFICATION	2.6179554534627278E-5	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999738204454653	WITHOUT_CLASSIFICATION	2.6179554534627278E-5	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999738204454653	WITHOUT_CLASSIFICATION	2.6179554534627278E-5	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999738204454653	WITHOUT_CLASSIFICATION	2.6179554534627278E-5	DEFECT
/* -------------------- */	WITHOUT_CLASSIFICATION	0.9999075676317428	WITHOUT_CLASSIFICATION	9.24323682572012E-5	DEFECT
// -Y	WITHOUT_CLASSIFICATION	0.9999208700131987	WITHOUT_CLASSIFICATION	7.912998680126565E-5	DEFECT
// -Y	WITHOUT_CLASSIFICATION	0.9999208700131987	WITHOUT_CLASSIFICATION	7.912998680126565E-5	DEFECT
// -Y	WITHOUT_CLASSIFICATION	0.9999208700131987	WITHOUT_CLASSIFICATION	7.912998680126565E-5	DEFECT
// VSS items	WITHOUT_CLASSIFICATION	0.9999671044808934	WITHOUT_CLASSIFICATION	3.289551910652203E-5	DEFECT
// VSS items	WITHOUT_CLASSIFICATION	0.9999671044808934	WITHOUT_CLASSIFICATION	3.289551910652203E-5	DEFECT
// skip version info and general purpose byte	WITHOUT_CLASSIFICATION	0.9999917897831266	WITHOUT_CLASSIFICATION	8.21021687338783E-6	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999738204454653	WITHOUT_CLASSIFICATION	2.6179554534627278E-5	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999738204454653	WITHOUT_CLASSIFICATION	2.6179554534627278E-5	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999738204454653	WITHOUT_CLASSIFICATION	2.6179554534627278E-5	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999738204454653	WITHOUT_CLASSIFICATION	2.6179554534627278E-5	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999738204454653	WITHOUT_CLASSIFICATION	2.6179554534627278E-5	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999738204454653	WITHOUT_CLASSIFICATION	2.6179554534627278E-5	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999738204454653	WITHOUT_CLASSIFICATION	2.6179554534627278E-5	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999738204454653	WITHOUT_CLASSIFICATION	2.6179554534627278E-5	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999738204454653	WITHOUT_CLASSIFICATION	2.6179554534627278E-5	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999738204454653	WITHOUT_CLASSIFICATION	2.6179554534627278E-5	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999738204454653	WITHOUT_CLASSIFICATION	2.6179554534627278E-5	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999738204454653	WITHOUT_CLASSIFICATION	2.6179554534627278E-5	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999738204454653	WITHOUT_CLASSIFICATION	2.6179554534627278E-5	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999738204454653	WITHOUT_CLASSIFICATION	2.6179554534627278E-5	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999738204454653	WITHOUT_CLASSIFICATION	2.6179554534627278E-5	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999738204454653	WITHOUT_CLASSIFICATION	2.6179554534627278E-5	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999738204454653	WITHOUT_CLASSIFICATION	2.6179554534627278E-5	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999738204454653	WITHOUT_CLASSIFICATION	2.6179554534627278E-5	DEFECT
// first off, make sure that we've got a command and a vssdir and a label ...	WITHOUT_CLASSIFICATION	0.9999895700861929	WITHOUT_CLASSIFICATION	1.042991380703138E-5	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999738204454653	WITHOUT_CLASSIFICATION	2.6179554534627278E-5	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999738204454653	WITHOUT_CLASSIFICATION	2.6179554534627278E-5	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999738204454653	WITHOUT_CLASSIFICATION	2.6179554534627278E-5	DEFECT
// we get the root classes and build up a set of // classes upon which they depend	WITHOUT_CLASSIFICATION	0.9999761851907947	WITHOUT_CLASSIFICATION	2.381480920525899E-5	DEFECT
// read the constant pool in and resolve it	WITHOUT_CLASSIFICATION	0.9999824525167524	WITHOUT_CLASSIFICATION	1.754748324756058E-5	DEFECT
/*         * Use the Runtime object to execute an external command.  Use the         * RedirectOutput inner class to direct the standard and error output         * from the command to the JRE's standard output         */	WITHOUT_CLASSIFICATION	0.9999937506726403	WITHOUT_CLASSIFICATION	6.24932735976451E-6	DEFECT
/*         * Two Maps are used to track local DTDs that will be used in case the         * remote copies of these DTDs cannot be accessed.  The key for the Map         * is the DTDs public ID and the value is the local location for the DTD         */	WITHOUT_CLASSIFICATION	0.9999856964464483	WITHOUT_CLASSIFICATION	1.4303553551677532E-5	DEFECT
// depFile exists and is newer than the class file // need to get dependency list from the map.	WITHOUT_CLASSIFICATION	0.9999975522565321	WITHOUT_CLASSIFICATION	2.4477434678392653E-6	DEFECT
// without closure we may delete an inner class but not the // top level class which would not trigger a recompile.	WITHOUT_CLASSIFICATION	0.9997710413932506	WITHOUT_CLASSIFICATION	2.289586067494599E-4	DEFECT
//always trigger file mode if commands are big enough	WITHOUT_CLASSIFICATION	0.9999085369437678	WITHOUT_CLASSIFICATION	9.146305623222384E-5	DEFECT
//fill in args	WITHOUT_CLASSIFICATION	0.99994691987071	WITHOUT_CLASSIFICATION	5.308012928982118E-5	DEFECT
//fill in args	WITHOUT_CLASSIFICATION	0.99994691987071	WITHOUT_CLASSIFICATION	5.308012928982118E-5	DEFECT
//iterate through the ref list & generate an entry for each //or just rely on the fact that the toString operator does this, but //noting that the separator is ';' on windows, ':' on unix	WITHOUT_CLASSIFICATION	0.9886471565508377	WITHOUT_CLASSIFICATION	0.011352843449162361	DEFECT
//now run the command of exe + settings + files	WITHOUT_CLASSIFICATION	0.9998202218973442	WITHOUT_CLASSIFICATION	1.7977810265583662E-4	DEFECT
/*     * Directory where "source" EJB files are stored and where stubs and     * skeletons will also be written.     */	WITHOUT_CLASSIFICATION	0.9999739636617423	WITHOUT_CLASSIFICATION	2.6036338257594358E-5	DEFECT
/*     * This Hashtable maintains a list of EJB class files processed by the ejbc     * utility (both "source" class files as well as stubs and skeletons). The     * key for the Hashtable is a String representing the path to the class file     * (relative to the destination directory).  The value for the Hashtable is     * a File object which reference the actual class file.     */	WITHOUT_CLASSIFICATION	0.9999998918790387	WITHOUT_CLASSIFICATION	1.0812096121702103E-7	DEFECT
/* Execute the ejbc utility -- stubs/skeletons are rebuilt, if needed */	WITHOUT_CLASSIFICATION	0.9999949310791173	WITHOUT_CLASSIFICATION	5.068920882676062E-6	DEFECT
// EJB's display name // EJB's home interface name // EJB's remote interface name // EJB's implementation class // EJB's primary key class // or "stateful" or "stateless" // Does this EJB support CMP? // Does this EJB support IIOP? // Does this EJB require failover? // CMP descriptor list	WITHOUT_CLASSIFICATION	0.9999597836274938	WITHOUT_CLASSIFICATION	4.021637250612328E-5	DEFECT
/* Check the timestamp on the EJB implementation class.             *             * Note that if ONLY the implementation class has changed, it's not             * necessary to rebuild the EJB stubs and skeletons.  For this             * reason, we ensure the file exists (using lastModified above), but             * we DON'T compare it's timestamp with the timestamps of the home             * and remote interfaces (because it's irrelevant in determining if             * ejbc must be run)             */	WITHOUT_CLASSIFICATION	0.999998598009073	WITHOUT_CLASSIFICATION	1.4019909269868378E-6	DEFECT
//classpath //add at the end of the classpath //the system classpath in order to find the tools.jar file	WITHOUT_CLASSIFICATION	0.9981396700602272	WITHOUT_CLASSIFICATION	0.0018603299397728131	DEFECT
// ejb jar file	WITHOUT_CLASSIFICATION	0.9999955404154983	WITHOUT_CLASSIFICATION	4.4595845017292395E-6	DEFECT
//client jar file	WITHOUT_CLASSIFICATION	0.999987536459825	WITHOUT_CLASSIFICATION	1.246354017489757E-5	DEFECT
// Have to catch this because of the semantics of calling main()	WITHOUT_CLASSIFICATION	0.9999741331663607	WITHOUT_CLASSIFICATION	2.5866833639273676E-5	DEFECT
/* ------------- */	WITHOUT_CLASSIFICATION	0.9999135040987038	WITHOUT_CLASSIFICATION	8.649590129617908E-5	DEFECT
/* ------------- */	WITHOUT_CLASSIFICATION	0.9999135040987038	WITHOUT_CLASSIFICATION	8.649590129617908E-5	DEFECT
// descriptorName = <path><basename><basenameterminator><remainder> // examples = /org/objectweb/fooAppli/foo/Foo-ejb-jar.xml // examples = /org/objectweb/fooAppli/foo/Foo.xml (JOnAS convention)	WITHOUT_CLASSIFICATION	0.999999648608565	WITHOUT_CLASSIFICATION	3.513914348870868E-7	DEFECT
// class name (search in the classpath provided for the ejbjar element)	WITHOUT_CLASSIFICATION	0.9999997603682351	WITHOUT_CLASSIFICATION	2.396317649560921E-7	DEFECT
// additionalargs	WITHOUT_CLASSIFICATION	0.9999939421024174	WITHOUT_CLASSIFICATION	6.057897582483038E-6	DEFECT
// get all the files in the descriptor directory	WITHOUT_CLASSIFICATION	0.9999621875608896	WITHOUT_CLASSIFICATION	3.781243911040015E-5	DEFECT
// If an explicit securityPolicy file was specified, it maybe an // absolute path.  Use the project to resolve it.	WITHOUT_CLASSIFICATION	0.999997085546153	WITHOUT_CLASSIFICATION	2.9144538469499477E-6	DEFECT
// Since the descriptor read properly, everything should be o.k.	WITHOUT_CLASSIFICATION	0.9999675617062483	WITHOUT_CLASSIFICATION	3.2438293751702864E-5	DEFECT
// Lastly create File object for the Jar files. If we are using // a flat destination dir, then we need to redefine baseName!	WITHOUT_CLASSIFICATION	0.9999728695308042	WITHOUT_CLASSIFICATION	2.713046919579312E-5	DEFECT
/*         * For the GenericDeploymentTool, do nothing.  Vendor specific         * subclasses should throw a BuildException if the configuration is         * invalid for their server.         */	WITHOUT_CLASSIFICATION	0.9997976833407178	WITHOUT_CLASSIFICATION	2.023166592820484E-4	DEFECT
// Get the filename of vendor specific descriptor	WITHOUT_CLASSIFICATION	0.9999970166533863	WITHOUT_CLASSIFICATION	2.983346613646054E-6	DEFECT
// now that we have the weblogic descriptor, we parse the file // to find other descriptors needed to deploy the bean. // this could be the weblogic-cmp-rdbms.xml or any other O/R // mapping tool descriptors.	WITHOUT_CLASSIFICATION	0.9999874406916092	WITHOUT_CLASSIFICATION	1.2559308390934533E-5	DEFECT
// Update with changed Bean class	WITHOUT_CLASSIFICATION	0.9999945804561647	WITHOUT_CLASSIFICATION	5.419543835210974E-6	DEFECT
// need to close files and perhaps rename output	WITHOUT_CLASSIFICATION	0.9999958712214598	WITHOUT_CLASSIFICATION	4.128778540131135E-6	DEFECT
// empty	WITHOUT_CLASSIFICATION	0.9999662337205111	WITHOUT_CLASSIFICATION	3.376627948890816E-5	DEFECT
// empty	WITHOUT_CLASSIFICATION	0.9999662337205111	WITHOUT_CLASSIFICATION	3.376627948890816E-5	DEFECT
// are any of the above out of date. // we find the implementation classes and see if they are older than any // of the above or the .ser file itself.	WITHOUT_CLASSIFICATION	0.9999981216244572	WITHOUT_CLASSIFICATION	1.8783755427248153E-6	DEFECT
/*     * Filenames of the standard EJB descriptor (which is passed to this class     * from the parent "ejbjar" task) and the iAS-specific EJB descriptor     * (whose name is determined by this class).  Both filenames are relative     * to the directory specified by the "srcdir" attribute in the ejbjar task.     */	WITHOUT_CLASSIFICATION	0.9999990018936616	WITHOUT_CLASSIFICATION	9.981063383647942E-7	DEFECT
//remove the .class	WITHOUT_CLASSIFICATION	0.999979572820822	WITHOUT_CLASSIFICATION	2.0427179178066172E-5	DEFECT
// create the output .jar, if required	WITHOUT_CLASSIFICATION	0.9999800088955979	WITHOUT_CLASSIFICATION	1.9991104402085842E-5	DEFECT
// change this to get the objects from the other reference	WITHOUT_CLASSIFICATION	0.999927636361689	WITHOUT_CLASSIFICATION	7.236363831087194E-5	DEFECT
// Available specification version must be >= required	WITHOUT_CLASSIFICATION	0.9999824739267781	WITHOUT_CLASSIFICATION	1.752607322198323E-5	DEFECT
// Implementation version must be >= required	WITHOUT_CLASSIFICATION	0.9999904268253937	WITHOUT_CLASSIFICATION	9.573174606197888E-6	DEFECT
//WARNING: We trim the values of all the attributes because //Some extension declarations are badly defined (ie have spaces //after version or vendorID)	WITHOUT_CLASSIFICATION	0.999962201447768	WITHOUT_CLASSIFICATION	3.779855223196907E-5	DEFECT
/*     * Validates URL     */	WITHOUT_CLASSIFICATION	0.9999955362638536	WITHOUT_CLASSIFICATION	4.463736146417111E-6	DEFECT
// the new value, this needs to be here // because it is required to calculate the next position to // search from at the end of the loop	WITHOUT_CLASSIFICATION	0.9999749074997563	WITHOUT_CLASSIFICATION	2.5092500243764655E-5	DEFECT
// iterator through all the files and process them.	WITHOUT_CLASSIFICATION	0.9999996011529103	WITHOUT_CLASSIFICATION	3.9884708970788256E-7	DEFECT
// keys to optional attributes	WITHOUT_CLASSIFICATION	0.9999912368807785	WITHOUT_CLASSIFICATION	8.763119221555484E-6	DEFECT
// use the directory containing the target as the output directory	WITHOUT_CLASSIFICATION	0.9999850366120189	WITHOUT_CLASSIFICATION	1.4963387981042773E-5	DEFECT
// null watchdog means no timeout, you'd better not check with null	WITHOUT_CLASSIFICATION	0.9999859441155661	WITHOUT_CLASSIFICATION	1.4055884433893064E-5	DEFECT
/*         * pre Ant 1.6 this method used to call getClass().getResource         * while Ant 1.6 will call ClassLoader.getResource().         *         * The difference is that Class.getResource expects a leading         * slash for "absolute" resources and will strip it before         * delegating to ClassLoader.getResource - so we now have to         * emulate Class's behavior.         */	WITHOUT_CLASSIFICATION	0.9999998773759806	WITHOUT_CLASSIFICATION	1.2262401944308883E-7	DEFECT
// this comment extract from JUnit Task may also apply here // "in VM is not very nice since it could probably hang the // whole build. IMHO this method should be avoided and it would be best // to remove it in future versions. TBD. (SBa)"	WITHOUT_CLASSIFICATION	0.990476077977528	WITHOUT_CLASSIFICATION	0.009523922022471881	DEFECT
// not necessary as JDepend would fail, but why loose // some time?	WITHOUT_CLASSIFICATION	0.9999659526826669	WITHOUT_CLASSIFICATION	3.40473173331401E-5	DEFECT
// not necessary as JDepend would fail, but why loose // some time?	WITHOUT_CLASSIFICATION	0.9999659526826669	WITHOUT_CLASSIFICATION	3.40473173331401E-5	DEFECT
// not necessary as JDepend would fail, but why loose // some time?	WITHOUT_CLASSIFICATION	0.9999659526826669	WITHOUT_CLASSIFICATION	3.40473173331401E-5	DEFECT
//do nothing	WITHOUT_CLASSIFICATION	0.9993906579767482	WITHOUT_CLASSIFICATION	6.093420232518114E-4	DEFECT
//do nothing	WITHOUT_CLASSIFICATION	0.9993906579767482	WITHOUT_CLASSIFICATION	6.093420232518114E-4	DEFECT
//If we get here, it could be because we are trying to put a //directory entry that already exists. //For example, we're trying to write "com", but a previous //entry from another mergefile was called "com". //In that case, just ignore the error and go on to the //next entry.	WITHOUT_CLASSIFICATION	0.9999883483284183	WITHOUT_CLASSIFICATION	1.1651671581700039E-5	DEFECT
/*          First, some notes.          On MRJ 2.2.2, getting the size, compressed size, and CRC32 from the          ZipInputStream does not work for compressed (deflated) files.  Those calls return -1.          For uncompressed (stored) files, those calls do work.          However, using ZipFile.getEntries() works for both compressed and          uncompressed files.          Now, from some simple testing I did, it seems that the value of CRC-32 is          independent of the compression setting. So, it should be easy to pass this          information on to the output entry.        */	WITHOUT_CLASSIFICATION	0.9999894703657628	WITHOUT_CLASSIFICATION	1.052963423733297E-5	DEFECT
// Quick return - no output do nothing.	WITHOUT_CLASSIFICATION	0.9999163656135678	WITHOUT_CLASSIFICATION	8.363438643215984E-5	DEFECT
// Self-describing as of JUnit 4 (#38811). But trim "(ClassName)".	WITHOUT_CLASSIFICATION	0.9999988233365328	WITHOUT_CLASSIFICATION	1.1766634672087797E-6	DEFECT
//the trick to integrating test output to the formatter, is to //create a special test class that asserts an error //and tell the formatter that it raised.	WITHOUT_CLASSIFICATION	0.9999867242386281	WITHOUT_CLASSIFICATION	1.3275761371842193E-5	DEFECT
// ignored.	WITHOUT_CLASSIFICATION	0.9999697418829069	WITHOUT_CLASSIFICATION	3.025811709313856E-5	DEFECT
/*         * pre Ant 1.6 this method used to call getClass().getResource         * while Ant 1.6 will call ClassLoader.getResource().         *         * The difference is that Class.getResource expects a leading         * slash for "absolute" resources and will strip it before         * delegating to ClassLoader.getResource - so we now have to         * emulate Class's behavior.         */	WITHOUT_CLASSIFICATION	0.9999998773759806	WITHOUT_CLASSIFICATION	1.2262401944308883E-7	DEFECT
// okay we have a copy of the child, now the child becomes the parent // and we are iterating recursively over its children.	WITHOUT_CLASSIFICATION	0.9999535052049912	WITHOUT_CLASSIFICATION	4.649479500894043E-5	DEFECT
// See wrapListener for reason:	WITHOUT_CLASSIFICATION	0.9999699701986088	WITHOUT_CLASSIFICATION	3.0029801391137167E-5	DEFECT
// if there is a suite method available, then try // to extract the suite from it. If there is an error // here it will be caught below and reported.	WITHOUT_CLASSIFICATION	0.9999136614605112	WITHOUT_CLASSIFICATION	8.63385394887174E-5	DEFECT
// JUnit 4 does not distinguish between errors and failures // even in the JUnit 3 adapter. // So we need to help it a bit to retain compatibility for JUnit 3 tests.	WITHOUT_CLASSIFICATION	0.9999968910024252	WITHOUT_CLASSIFICATION	3.108997574841218E-6	DEFECT
// sorted by newest Kaffe version first	WITHOUT_CLASSIFICATION	0.999995890222081	WITHOUT_CLASSIFICATION	4.10977791889476E-6	DEFECT
//getProject().log("listing files in directory " + directory, Project.MSG_DEBUG);	WITHOUT_CLASSIFICATION	0.9998885042782006	WITHOUT_CLASSIFICATION	1.1149572179936805E-4	DEFECT
// to remove directories, start by the end of the list // the trunk does not let itself be removed before the leaves	WITHOUT_CLASSIFICATION	0.9999968007271158	WITHOUT_CLASSIFICATION	3.199272884203365E-6	DEFECT
// ignore it	WITHOUT_CLASSIFICATION	0.9999679415013217	WITHOUT_CLASSIFICATION	3.205849867823887E-5	DEFECT
// NumberFormatException or ArrayOutOfBondsException could happen here	WITHOUT_CLASSIFICATION	0.9995131144066316	WITHOUT_CLASSIFICATION	4.8688559336832523E-4	DEFECT
//Throw exception on errors (except up-to-date) // //When a server is down, the code expects : //Perforce client error: //Connect to server failed; check $P4PORT. //TCP connect to localhost:1666 failed. //connect: localhost:1666: Connection refused //Some forms producing commands (p4 -s change -o) do tag the output //others don't..... //Others mark errors as info, for example edit a file //which is already open for edit..... //Just look for error: - catches most things....	WITHOUT_CLASSIFICATION	0.9997829596406227	WITHOUT_CLASSIFICATION	2.1704035937739893E-4	DEFECT
// Because of the way I create the full target path, there // must be NO slash at the end of targetFolder and folderName // However, if the slash or backslash is the only character, leave it alone	WITHOUT_CLASSIFICATION	0.9999915038954554	WITHOUT_CLASSIFICATION	8.49610454455472E-6	DEFECT
// Connect to the StarTeam server, and log on.	WITHOUT_CLASSIFICATION	0.9999951324276003	WITHOUT_CLASSIFICATION	4.867572399709552E-6	DEFECT
// Simplest constructor, uses default encryption algorithm and compression level.	WITHOUT_CLASSIFICATION	0.9999994430365479	WITHOUT_CLASSIFICATION	5.569634522069811E-7	DEFECT
// Create a variable dir that contains the name of // the StarTeam folder that is the root folder in this view. // Get the default path to the current view.	WITHOUT_CLASSIFICATION	0.9999993281542647	WITHOUT_CLASSIFICATION	6.718457353116808E-7	DEFECT
// We want to display the folder the same way you would // enter it on the command line ... so we remove the // View name (which is also the name of the root folder, // and therefore shows up at the start of the path).	WITHOUT_CLASSIFICATION	0.999835045427123	WITHOUT_CLASSIFICATION	1.64954572877025E-4	DEFECT
// If we displayed the project, view, item type, or folder, // then show the list of relevant item properties.	WITHOUT_CLASSIFICATION	0.9999620193072406	WITHOUT_CLASSIFICATION	3.798069275943971E-5	DEFECT
// If we find a "file" attribute then act on a file otherwise act on a project	WITHOUT_CLASSIFICATION	0.9999698326009253	WITHOUT_CLASSIFICATION	3.016739907462622E-5	DEFECT
// Special setters for the sub-classes	WITHOUT_CLASSIFICATION	0.9999910046763782	WITHOUT_CLASSIFICATION	8.995323621759844E-6	DEFECT
// Special setters for the sub-classes	WITHOUT_CLASSIFICATION	0.9999910046763782	WITHOUT_CLASSIFICATION	8.995323621759844E-6	DEFECT
// Login info is required	WITHOUT_CLASSIFICATION	0.9996758221406136	WITHOUT_CLASSIFICATION	3.2417785938646486E-4	DEFECT
// Path to the SourceOffSite home directory /home/user/.sos	WITHOUT_CLASSIFICATION	0.9999845551997046	WITHOUT_CLASSIFICATION	1.5444800295352367E-5	DEFECT
// Check if source is a directory	WITHOUT_CLASSIFICATION	0.999991708014026	WITHOUT_CLASSIFICATION	8.291985973944399E-6	DEFECT
/*             *  There is a bug in JavaSound 0.90 (jdk1.3beta).             *  It prevents correct termination of the VM.             *  So we have to exit ourselves.             */	WITHOUT_CLASSIFICATION	0.9962176761448366	WITHOUT_CLASSIFICATION	0.0037823238551634598	DEFECT
// Catch everything - some of the above return nulls, // throw exceptions or generally misbehave // in the event of a problem etc	WITHOUT_CLASSIFICATION	0.9999972199324139	WITHOUT_CLASSIFICATION	2.780067586110754E-6	DEFECT
// only track progress for files larger than 100kb in verbose mode	WITHOUT_CLASSIFICATION	0.9999827551787452	WITHOUT_CLASSIFICATION	1.7244821254699577E-5	DEFECT
// only track progress for files larger than 100kb in verbose mode	WITHOUT_CLASSIFICATION	0.9999827551787452	WITHOUT_CLASSIFICATION	1.7244821254699577E-5	DEFECT
// since filesize keeps on decreasing we have to store the // initial filesize	WITHOUT_CLASSIFICATION	0.9999947625851628	WITHOUT_CLASSIFICATION	5.23741483716889E-6	DEFECT
// note, it's important to scan the items BEFORE we make the // UnmatchedFileMap because that creates a bunch of NEW // folders and files (unattached to repository) and we // don't want to include those in our traversal.	WITHOUT_CLASSIFICATION	0.9999979011679353	WITHOUT_CLASSIFICATION	2.0988320648179848E-6	DEFECT
// If the file doesn't pass the include/exclude tests, skip it.	WITHOUT_CLASSIFICATION	0.9999989949184538	WITHOUT_CLASSIFICATION	1.0050815461228358E-6	DEFECT
// If the file doesn't pass the include/exclude tests, skip it.	WITHOUT_CLASSIFICATION	0.9999989949184538	WITHOUT_CLASSIFICATION	1.0050815461228358E-6	DEFECT
// We try to update the status once to give StarTeam // another chance.	WITHOUT_CLASSIFICATION	0.99999519152811	WITHOUT_CLASSIFICATION	4.808471889926385E-6	DEFECT
// note, it's important to scan the items BEFORE we make the // Unmatched file map because that creates a bunch of NEW // folders and files (unattached to repository) and we // don't want to include those in our traversal.	WITHOUT_CLASSIFICATION	0.9999979358821474	WITHOUT_CLASSIFICATION	2.0641178525891214E-6	DEFECT
// once we find a folder that isn't in the repository, // anything below it can be deleted.	WITHOUT_CLASSIFICATION	0.9999962974320858	WITHOUT_CLASSIFICATION	3.7025679142623543E-6	DEFECT
/////////////////////////////////////////////////////////////// // default values for attributes. ///////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.999998739123495	WITHOUT_CLASSIFICATION	1.260876504913991E-6	DEFECT
// default behavior is to fail on an error // default behavior is to not overwrite // default behavior is make a single link	WITHOUT_CLASSIFICATION	0.9999379296603375	WITHOUT_CLASSIFICATION	6.207033966251614E-5	DEFECT
// build the command line from what we got the format is // ss Add VSS items [-B] [-C] [-D-] [-H] [-I-] [-K] [-N] [-O] [-R] [-W] [-Y] [-?] // as specified in the SS.EXE help	WITHOUT_CLASSIFICATION	0.9999954652638191	WITHOUT_CLASSIFICATION	4.534736180813934E-6	DEFECT
// build the command line from what we got the format is // ss Checkout VSS items [-G] [-C] [-H] [-I-] [-N] [-O] [-R] [-V] [-Y] [-?] // as specified in the SS.EXE help	WITHOUT_CLASSIFICATION	0.9999978390482239	WITHOUT_CLASSIFICATION	2.1609517761367333E-6	DEFECT
// Not a .class file or the one we'd generate	WITHOUT_CLASSIFICATION	0.9999965659155163	WITHOUT_CLASSIFICATION	3.4340844836898004E-6	DEFECT
// We have the loader which is being used to load the // CatalogResolver. Can it see the ApacheResolver? The // base resolver will only be able to create the ApacheResolver // if it can see it - doesn't use the context loader.	WITHOUT_CLASSIFICATION	0.9999937287156581	WITHOUT_CLASSIFICATION	6.271284341940473E-6	DEFECT
// // Use the passed in base in preference to the base // from matchingEntry, which is either null or the // directory in which the external catalog file from // which it was obtained is located.  We make a copy // so matchingEntry's original base is untouched. // // This is the standard behavior as per my reading of // the JAXP and XML Catalog specs.  CKS 11/7/2002 //	WITHOUT_CLASSIFICATION	0.9999322509935219	WITHOUT_CLASSIFICATION	6.774900647809709E-5	DEFECT
// // Get Method instances for each of the methods we need to // call on the resolverImpl using reflection.  We can't // call them directly, because they require on the // xml-commons resolver library which may not be available // in the classpath. //	WITHOUT_CLASSIFICATION	0.999920695533907	WITHOUT_CLASSIFICATION	7.93044660929855E-5	DEFECT
// // We didn't match a ResourceLocation, but since we // only support PUBLIC and URI entry types internally, // it is still possible that there is another entry in // an external catalog that will match.  We call // Apache resolver's resolveEntity method to cover // this possibility. //	WITHOUT_CLASSIFICATION	0.9999646165424384	WITHOUT_CLASSIFICATION	3.538345756150037E-5	DEFECT
// record data about the last scanned resource	WITHOUT_CLASSIFICATION	0.9999927345773326	WITHOUT_CLASSIFICATION	7.265422667339412E-6	DEFECT
// path containing one or more elements	WITHOUT_CLASSIFICATION	0.9999943544597512	WITHOUT_CLASSIFICATION	5.645540248838399E-6	DEFECT
// just append beginToken and search further	WITHOUT_CLASSIFICATION	0.9999955151267761	WITHOUT_CLASSIFICATION	4.484873223942433E-6	DEFECT
//create the command to run Java, including user specified options	WITHOUT_CLASSIFICATION	0.9999930209505314	WITHOUT_CLASSIFICATION	6.979049468543987E-6	DEFECT
// JDK usage command line says that -jar must be the first option, as there is // a bug in JDK < 1.4 that forces the jvm type to be specified as the first // option, it is appended here as specified in the docs even though there is // in fact no order.	WITHOUT_CLASSIFICATION	0.9999997983019095	WITHOUT_CLASSIFICATION	2.0169809035259292E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999675172071433	WITHOUT_CLASSIFICATION	3.2482792856694074E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999675172071433	WITHOUT_CLASSIFICATION	3.2482792856694074E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999675172071433	WITHOUT_CLASSIFICATION	3.2482792856694074E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999675172071433	WITHOUT_CLASSIFICATION	3.2482792856694074E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999675172071433	WITHOUT_CLASSIFICATION	3.2482792856694074E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999675172071433	WITHOUT_CLASSIFICATION	3.2482792856694074E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999675172071433	WITHOUT_CLASSIFICATION	3.2482792856694074E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999675172071433	WITHOUT_CLASSIFICATION	3.2482792856694074E-5	DEFECT
/* now check each Resource in case the child only           lets through files from any children IT may have: */	WITHOUT_CLASSIFICATION	0.9944152038811667	WITHOUT_CLASSIFICATION	0.005584796118833371	DEFECT
// Quick return: directories cannot be signed	WITHOUT_CLASSIFICATION	0.9996924266615556	WITHOUT_CLASSIFICATION	3.07573338444367E-4	DEFECT
/**     * When using this as a custom selector, this method will be called.     * It translates each parameter into the appropriate setXXX() call.     *     * @param parameters the complete set of parameters for this selector     */	WITHOUT_CLASSIFICATION	0.9999955200835782	WITHOUT_CLASSIFICATION	4.47991642177582E-6	DEFECT
/**     * When using this as a custom selector, this method will be called.     * It translates each parameter into the appropriate setXXX() call.     *     * @param parameters the complete set of parameters for this selector     */	WITHOUT_CLASSIFICATION	0.9999955200835782	WITHOUT_CLASSIFICATION	4.47991642177582E-6	DEFECT
/**     * When using this as a custom selector, this method will be called.     * It translates each parameter into the appropriate setXXX() call.     *     * @param parameters the complete set of parameters for this selector     */	WITHOUT_CLASSIFICATION	0.9999955200835782	WITHOUT_CLASSIFICATION	4.47991642177582E-6	DEFECT
/**     * When using this as a custom selector, this method will be called.     * It translates each parameter into the appropriate setXXX() call.     *     * @param parameters the complete set of parameters for this selector     */	WITHOUT_CLASSIFICATION	0.9999955200835782	WITHOUT_CLASSIFICATION	4.47991642177582E-6	DEFECT
/**     * When using this as a custom selector, this method will be called.     * It translates each parameter into the appropriate setXXX() call.     *     * @param parameters the complete set of parameters for this selector     */	WITHOUT_CLASSIFICATION	0.9999955200835782	WITHOUT_CLASSIFICATION	4.47991642177582E-6	DEFECT
/**     * When using this as a custom selector, this method will be called.     * It translates each parameter into the appropriate setXXX() call.     *     * @param parameters the complete set of parameters for this selector.     */	WITHOUT_CLASSIFICATION	0.9999957346527005	WITHOUT_CLASSIFICATION	4.2653472994222275E-6	DEFECT
// // -----  Set default values  ----- //	WITHOUT_CLASSIFICATION	0.9999988308390506	WITHOUT_CLASSIFICATION	1.1691609493782344E-6	DEFECT
// nothing specified - use default	WITHOUT_CLASSIFICATION	0.9999976639408629	WITHOUT_CLASSIFICATION	2.33605913700171E-6	DEFECT
// How to handle non-file-Resources? I copy temporarily the // resource to a file and use the file-implementation.	WITHOUT_CLASSIFICATION	0.9999993985562919	WITHOUT_CLASSIFICATION	6.014437081574891E-7	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9999146686599837	WITHOUT_CLASSIFICATION	8.533134001628908E-5	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9999146686599837	WITHOUT_CLASSIFICATION	8.533134001628908E-5	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9999146686599837	WITHOUT_CLASSIFICATION	8.533134001628908E-5	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9999146686599837	WITHOUT_CLASSIFICATION	8.533134001628908E-5	DEFECT
//find the out-of-date targets:	WITHOUT_CLASSIFICATION	0.9999298824726787	WITHOUT_CLASSIFICATION	7.01175273213151E-5	DEFECT
// write namespace declarations	WITHOUT_CLASSIFICATION	0.9999996204950029	WITHOUT_CLASSIFICATION	3.795049971289811E-7	DEFECT
// Extrapolating from: // "NetWare may have a "java" in that directory, but 99% of // the time, you don't want to execute it" -- Jeff Tulley // <JTULLEY@novell.com>	WITHOUT_CLASSIFICATION	0.9933195131966964	WITHOUT_CLASSIFICATION	0.0066804868033036435	DEFECT
// fall through	WITHOUT_CLASSIFICATION	0.999928500710001	WITHOUT_CLASSIFICATION	7.14992899990409E-5	DEFECT
// fall through	WITHOUT_CLASSIFICATION	0.999928500710001	WITHOUT_CLASSIFICATION	7.14992899990409E-5	DEFECT
// Check for bsf first then javax // This version does not check if the scriptManager // supports the language.	WITHOUT_CLASSIFICATION	0.9996396349753076	WITHOUT_CLASSIFICATION	3.6036502469242266E-4	DEFECT
// NotReached	WITHOUT_CLASSIFICATION	0.9999938572884418	WITHOUT_CLASSIFICATION	6.142711558178451E-6	DEFECT
// NotReached	WITHOUT_CLASSIFICATION	0.9999938572884418	WITHOUT_CLASSIFICATION	6.142711558178451E-6	DEFECT
//no need to synchronize, as Vector is always synchronized	WITHOUT_CLASSIFICATION	0.9992441796148068	WITHOUT_CLASSIFICATION	7.558203851932344E-4	DEFECT
// Eliminate consecutive slashes after the drive spec:	WITHOUT_CLASSIFICATION	0.9999677794942285	WITHOUT_CLASSIFICATION	3.2220505771518464E-5	DEFECT
//if it does not, then the file is not up to date.	WITHOUT_CLASSIFICATION	0.999826054610047	WITHOUT_CLASSIFICATION	1.7394538995299988E-4	DEFECT
// record destdir for later use in getResource	WITHOUT_CLASSIFICATION	0.9999957608929394	WITHOUT_CLASSIFICATION	4.239107060622748E-6	DEFECT
// Check to see if it's an inner class 'com.company.Class$Inner'	WITHOUT_CLASSIFICATION	0.999996018276981	WITHOUT_CLASSIFICATION	3.981723018976768E-6	DEFECT
// treat non-matching groups as empty matches	WITHOUT_CLASSIFICATION	0.9999901006211983	WITHOUT_CLASSIFICATION	9.899378801725951E-6	DEFECT
// treat non-matching groups as empty matches	WITHOUT_CLASSIFICATION	0.9999901006211983	WITHOUT_CLASSIFICATION	9.899378801725951E-6	DEFECT
/*          A 6-byte block header, the value chosen arbitrarily          as 0x314159265359 :-).  A 32 bit value does not really          give a strong enough guarantee that the value will not          appear by chance in the compressed datastream.  Worst-case          probability of this event, for a 900k block, is about          2.0e-3 for 32 bits, 1.0e-5 for 40 bits and 4.0e-8 for 48 bits.          For a compressed file of size 100Gb -- about 100000 blocks --          only a 48-bit marker will do.  NB: normal compression/          decompression do *not* rely on these statistical properties.          They are only important when trying to recover blocks from          damaged files.        */	WITHOUT_CLASSIFICATION	0.9986081088021663	WITHOUT_CLASSIFICATION	0.0013918911978336608	DEFECT
// write 8-bit	WITHOUT_CLASSIFICATION	0.9999657049437797	WITHOUT_CLASSIFICATION	3.429505622021446E-5	DEFECT
// bsBuffShadow |= 0 << (32 - bsLiveShadow - 1);	WITHOUT_CLASSIFICATION	0.9999967063115637	WITHOUT_CLASSIFICATION	3.293688436366987E-6	DEFECT
// // inlined: bsW(len_selCtr[sfmap_i] & 0xff, //              code_selCtr[sfmap_i]); //	WITHOUT_CLASSIFICATION	0.9999991949640582	WITHOUT_CLASSIFICATION	8.050359417234333E-7	DEFECT
// Following block contains unrolled code which could be shortened by // coding it in additional loops.	WITHOUT_CLASSIFICATION	0.9990785408368991	WITHOUT_CLASSIFICATION	9.214591631009282E-4	DEFECT
/*                  Complete the big bucket [ss] by quicksorting                  any unsorted small buckets [ss, j].  Hopefully                  previous pointer-scanning phases have already                  completed many of the small buckets [ss, j], so                  we don't have to sort them at all.            */	WITHOUT_CLASSIFICATION	0.9999710755473489	WITHOUT_CLASSIFICATION	2.8924452651061686E-5	DEFECT
// Step 2: // Now scan this big bucket so as to synthesise the // sorted order for small buckets [t, ss] for all t != ss.	WITHOUT_CLASSIFICATION	0.9999629920937269	WITHOUT_CLASSIFICATION	3.7007906273171024E-5	DEFECT
//  900021 byte // 3600000 byte // 3600000 byte // ------------ // 8433529 byte // ============	WITHOUT_CLASSIFICATION	0.9999958395908948	WITHOUT_CLASSIFICATION	4.160409105199163E-6	DEFECT
// The clean way would be to throw an exception. //throw new IOException("crc error");	WITHOUT_CLASSIFICATION	0.9998443542793316	WITHOUT_CLASSIFICATION	1.5564572066830256E-4	DEFECT
// make next blocks readable without error // (repair feature, not yet documented, not tested)	WITHOUT_CLASSIFICATION	0.9999717368684716	WITHOUT_CLASSIFICATION	2.8263131528258666E-5	DEFECT
/*          Setting up the unzftab entries here is not strictly          necessary, but it does save having to do it later          in a separate pass, and so saves a block's worth of          cache misses.        */	WITHOUT_CLASSIFICATION	0.9997440355576978	WITHOUT_CLASSIFICATION	2.559644423021852E-4	DEFECT
// tt.length should always be >= length, but theoretically // it can happen, if the compressor mixed small and large // blocks.  Normally only the last block will be smaller // than others.	WITHOUT_CLASSIFICATION	0.9971048895368639	WITHOUT_CLASSIFICATION	0.0028951104631360393	DEFECT
// deprecated, but email is byte-oriented	WITHOUT_CLASSIFICATION	0.9999885773148489	WITHOUT_CLASSIFICATION	1.1422685151020368E-5	DEFECT
// // NOTE // We have fit EOF, and the block is not full! // // This is a broken archive. It does not follow the standard // blocking algorithm. However, because we are generous, and // it requires little effort, we will simply ignore the error // and continue as if the entire block were read. This does // not appear to break anything upstream. We used to return // false in this case. // // Thanks to 'Yohann.Roussel@alcatel.fr' for this fix. //	WITHOUT_CLASSIFICATION	0.9976686038112431	WITHOUT_CLASSIFICATION	0.0023313961887568456	DEFECT
// version needed to extract // general purpose bit flag	WITHOUT_CLASSIFICATION	0.9999694753331588	WITHOUT_CLASSIFICATION	3.052466684116762E-5	DEFECT
// requires version 2 as we are going to store length info // in the data descriptor	WITHOUT_CLASSIFICATION	0.9999697955155986	WITHOUT_CLASSIFICATION	3.0204484401312685E-5	DEFECT
// file comment	WITHOUT_CLASSIFICATION	0.9999887451606116	WITHOUT_CLASSIFICATION	1.1254839388303072E-5	DEFECT
// swallow, throw the original exception instead	WITHOUT_CLASSIFICATION	0.999896593353047	WITHOUT_CLASSIFICATION	1.0340664695306269E-4	DEFECT
/* compressed size                 */	WITHOUT_CLASSIFICATION	0.9999830721275231	WITHOUT_CLASSIFICATION	1.6927872476937155E-5	DEFECT
/* disk number start               */	WITHOUT_CLASSIFICATION	0.9999810167340035	WITHOUT_CLASSIFICATION	1.898326599651944E-5	DEFECT
/* total number of entries in      */	WITHOUT_CLASSIFICATION	0.9999812673524331	WITHOUT_CLASSIFICATION	1.8732647566858083E-5	DEFECT
/* total number of entries in      */	WITHOUT_CLASSIFICATION	0.9999812673524331	WITHOUT_CLASSIFICATION	1.8732647566858083E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9989639901696303	WITHOUT_CLASSIFICATION	0.0010360098303696492	DEFECT
// This is turned off temporarily. There appears to be a bug // in SelectorUtils.matchPattern() where it is recursive on // Windows even if no ** is in pattern. //assertEquals("FFFTFFFFFFFF", results); // Unix // vs //assertEquals("FFFTFFFFTFFF", results); // Windows	DEFECT	0.9999168507442281	WITHOUT_CLASSIFICATION	8.314925577199106E-5	DEFECT
// check first that it is not already loaded otherwise // consecutive runs seems to end into an OutOfMemoryError // or it fails when there is a native library to load // several times. // this is far from being perfect but should work // in most cases.	DEFECT	0.9310621834220132	WITHOUT_CLASSIFICATION	0.06893781657798673	DEFECT
// FIXME formatters are not thread-safe	DEFECT	0.9285916332525561	WITHOUT_CLASSIFICATION	0.07140836674744395	DEFECT
// the generated classes must not be added in the generic JAR! // is that buggy on old JOnAS (2.4) ??	DEFECT	0.9999990792387387	WITHOUT_CLASSIFICATION	9.207612613323392E-7	DEFECT
// I hate to admit it, but we don't know what happened // here.  Throw the Exception.	DEFECT	0.9853111525212377	WITHOUT_CLASSIFICATION	0.014688847478762401	DEFECT
// FIXME: Is "No Namespace is Empty Namespace" really OK?	DEFECT	0.6850186512515336	WITHOUT_CLASSIFICATION	0.31498134874846634	DEFECT
// pattern now holds ** while string is not exhausted // this will generate false positives but we can live with that.	DEFECT	0.999958713204929	WITHOUT_CLASSIFICATION	4.1286795070938696E-5	DEFECT
// todo: is this comment still relevant ?? // FIXME: need to use a SAXSource as the source for the transform // so we can plug in our own entity resolver	DEFECT	0.8520734399543329	WITHOUT_CLASSIFICATION	0.14792656004566715	DEFECT
// Just a note: StarTeam has a status for NEW which implies // that there is an item  on your local machine that is not // in the repository.  These are the items that show up as // NOT IN VIEW in the Starteam GUI. // One would think that we would want to perhaps checkin the // NEW items (not in all cases! - Steve Cohen 15 Dec 2001) // Unfortunately, the sdk doesn't really work, and we can't // actually see  anything with a status of NEW. That is why // we can just check out  everything here without worrying // about losing anything.	DEFECT	0.970595275003622	WITHOUT_CLASSIFICATION	0.029404724996378105	DEFECT
// XXX: (Jon Skeet) The comment "if it hasn't been done already" may // not be strictly true. wrapper.maybeConfigure() won't configure the same // attributes/text more than once, but it may well add the children again, // unless I've missed something.	DEFECT	0.9924326924944208	WITHOUT_CLASSIFICATION	0.007567307505579198	DEFECT
// TODO: // A warning line, that shows code, which contains a variable // error will cause some trouble. The parser should definitely // be much better.	DEFECT	0.9677912316571827	WITHOUT_CLASSIFICATION	0.032208768342817315	DEFECT
// todo: is this comment still relevant ?? // FIXME: need to use a SAXSource as the source for the transform // so we can plug in our own entity resolver	DEFECT	0.8520734399543329	WITHOUT_CLASSIFICATION	0.14792656004566715	DEFECT
// FIXME this is actually not very cpu cycles friendly as we are converting from // dos to java while the underlying Sun implementation will convert // from java to dos time for internal storage...	DEFECT	0.8648218668798229	DEFECT	0.13517813312017707	WITHOUT_CLASSIFICATION
