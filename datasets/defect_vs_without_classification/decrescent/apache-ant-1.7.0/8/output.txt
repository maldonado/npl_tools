/* BuildListener stuff */	WITHOUT_CLASSIFICATION	0.999969426383605	WITHOUT_CLASSIFICATION	3.0573616395046434E-5	DEFECT
// we don't expect to find this	WITHOUT_CLASSIFICATION	0.9999901211189367	WITHOUT_CLASSIFICATION	9.878881063235449E-6	DEFECT
// ignore expected	WITHOUT_CLASSIFICATION	0.9999999328320758	WITHOUT_CLASSIFICATION	6.716792424812435E-8	DEFECT
// ignore expected	WITHOUT_CLASSIFICATION	0.9999999328320758	WITHOUT_CLASSIFICATION	6.716792424812435E-8	DEFECT
// tell the build it is finished	WITHOUT_CLASSIFICATION	0.999997822358889	WITHOUT_CLASSIFICATION	2.1776411108861967E-6	DEFECT
//end class	WITHOUT_CLASSIFICATION	0.9999917416609095	WITHOUT_CLASSIFICATION	8.2583390903966E-6	DEFECT
// keep track of what operating systems are supported here.	WITHOUT_CLASSIFICATION	0.9999981721953899	WITHOUT_CLASSIFICATION	1.8278046101207074E-6	DEFECT
// father and child pattern test	WITHOUT_CLASSIFICATION	0.9999995510459613	WITHOUT_CLASSIFICATION	4.4895403878641513E-7	DEFECT
// redo the test, but the 2 include patterns are inverted	WITHOUT_CLASSIFICATION	0.9999998161036499	WITHOUT_CLASSIFICATION	1.8389635007326048E-7	DEFECT
// add conditions and more commands as soon as the need arises	WITHOUT_CLASSIFICATION	0.9999921528753697	WITHOUT_CLASSIFICATION	7.847124630326754E-6	DEFECT
// give ourselves some time for the system call // to execute... tweak if you have a really over // loaded system.	WITHOUT_CLASSIFICATION	0.9999548318529297	WITHOUT_CLASSIFICATION	4.516814707046148E-5	DEFECT
// followLinks should be true by default, but if this ever // changes we will need this line.	WITHOUT_CLASSIFICATION	0.9999999770928073	WITHOUT_CLASSIFICATION	2.2907192645816392E-8	DEFECT
//testing drive letter search from root:	WITHOUT_CLASSIFICATION	0.9999990177191396	WITHOUT_CLASSIFICATION	9.822808603904563E-7	DEFECT
//if this is our context we assume there must be something here:	WITHOUT_CLASSIFICATION	0.999999067537585	WITHOUT_CLASSIFICATION	9.324624148983819E-7	DEFECT
// This path should contain the class files for these testcases:	WITHOUT_CLASSIFICATION	0.9999933346909196	WITHOUT_CLASSIFICATION	6.665309080441612E-6	DEFECT
// A special parent loader which is not the system class loader:	WITHOUT_CLASSIFICATION	0.9993863623085887	WITHOUT_CLASSIFICATION	6.136376914113668E-4	DEFECT
// A special parent loader which is not the system class loader:	WITHOUT_CLASSIFICATION	0.9993863623085887	WITHOUT_CLASSIFICATION	6.136376914113668E-4	DEFECT
// An AntClassLoader which is supposed to delegate to // the parent and then to the disk path:	WITHOUT_CLASSIFICATION	0.9999935471219973	WITHOUT_CLASSIFICATION	6.452878002735729E-6	DEFECT
// The intended result URLs:	WITHOUT_CLASSIFICATION	0.9999975049683076	WITHOUT_CLASSIFICATION	2.495031692300583E-6	DEFECT
// JDK 1.4: return Collections.list(e);	WITHOUT_CLASSIFICATION	0.9999903388720054	WITHOUT_CLASSIFICATION	9.661127994622047E-6	DEFECT
// override allowed on <available>	WITHOUT_CLASSIFICATION	0.9999995813407898	WITHOUT_CLASSIFICATION	4.186592101835652E-7	DEFECT
// ensure <tstamp>'s new prefix attribute is working	WITHOUT_CLASSIFICATION	0.9999824610858649	WITHOUT_CLASSIFICATION	1.7538914135155647E-5	DEFECT
// ensure <tstamp> follows the immutability rule	WITHOUT_CLASSIFICATION	0.9999999622353479	WITHOUT_CLASSIFICATION	3.7764652107921006E-8	DEFECT
// ensure <condition> follows the immutability rule	WITHOUT_CLASSIFICATION	0.9999984676273473	WITHOUT_CLASSIFICATION	1.532372652692825E-6	DEFECT
// ensure <checksum> follows the immutability rule	WITHOUT_CLASSIFICATION	0.9999999853853241	WITHOUT_CLASSIFICATION	1.4614675963214585E-8	DEFECT
// ensure <exec> follows the immutability rule	WITHOUT_CLASSIFICATION	0.9999998371496146	WITHOUT_CLASSIFICATION	1.6285038528238387E-7	DEFECT
// ensure <pathconvert> follows the immutability rule	WITHOUT_CLASSIFICATION	0.9999999858810122	WITHOUT_CLASSIFICATION	1.411898776258661E-8	DEFECT
/*             * throw in drive letters             */	WITHOUT_CLASSIFICATION	0.9999779786471461	WITHOUT_CLASSIFICATION	2.2021352853897605E-5	DEFECT
/*             * promised to eliminate consecutive slashes after drive letter.             */	WITHOUT_CLASSIFICATION	0.9999998350530251	WITHOUT_CLASSIFICATION	1.6494697480545712E-7	DEFECT
/*             * Start with simple absolute file names.             */	WITHOUT_CLASSIFICATION	0.9999999871993056	WITHOUT_CLASSIFICATION	1.2800694332405806E-8	DEFECT
/*             * drive letters are not used, just to be considered as normal             * part of a name             */	WITHOUT_CLASSIFICATION	0.9999999954079969	WITHOUT_CLASSIFICATION	4.592003115392537E-9	DEFECT
/*         * Now test some relative file name magic.         */	WITHOUT_CLASSIFICATION	0.9999998134000975	WITHOUT_CLASSIFICATION	1.8659990257110255E-7	DEFECT
// fail, because buildfile contains two targets with the same name	WITHOUT_CLASSIFICATION	0.9999994197570373	WITHOUT_CLASSIFICATION	5.802429627242775E-7	DEFECT
// overriding target from imported buildfile is allowed	WITHOUT_CLASSIFICATION	0.9999999757291558	WITHOUT_CLASSIFICATION	2.427084418012666E-8	DEFECT
// the buildfile to use	WITHOUT_CLASSIFICATION	0.9999998656572453	WITHOUT_CLASSIFICATION	1.3434275468465658E-7	DEFECT
// call a target	WITHOUT_CLASSIFICATION	0.9999996658655105	WITHOUT_CLASSIFICATION	3.3413448949498003E-7	DEFECT
//class-BFT	WITHOUT_CLASSIFICATION	0.9999934925070703	WITHOUT_CLASSIFICATION	6.5074929297849616E-6	DEFECT
// override allowed on <available>	WITHOUT_CLASSIFICATION	0.9999995813407898	WITHOUT_CLASSIFICATION	4.186592101835652E-7	DEFECT
// ignore event	WITHOUT_CLASSIFICATION	0.999999777644232	WITHOUT_CLASSIFICATION	2.223557679888006E-7	DEFECT
// Check it's a read-only map.	WITHOUT_CLASSIFICATION	0.9999980873367315	WITHOUT_CLASSIFICATION	1.912663268516966E-6	DEFECT
// Check it's a read-only map.	WITHOUT_CLASSIFICATION	0.9999980873367315	WITHOUT_CLASSIFICATION	1.912663268516966E-6	DEFECT
/*         * JUnit 3.7 adds a getName method to TestCase - so we now         * have a name attribute in IntrospectionHelperTest if we run         * under JUnit 3.7 but not in earlier versions.         *         * Simply add it here and remove it after the tests.         */	WITHOUT_CLASSIFICATION	0.9999935933644074	WITHOUT_CLASSIFICATION	6.40663559261652E-6	DEFECT
// addConfigured(Hashtable) should come before addConfigured(Map)	WITHOUT_CLASSIFICATION	0.9999995349681755	WITHOUT_CLASSIFICATION	4.650318244513495E-7	DEFECT
// INVALID extension point	WITHOUT_CLASSIFICATION	0.9999981735595987	WITHOUT_CLASSIFICATION	1.8264404012129527E-6	DEFECT
// INVALID extension point	WITHOUT_CLASSIFICATION	0.9999981735595987	WITHOUT_CLASSIFICATION	1.8264404012129527E-6	DEFECT
// Valid extension point	WITHOUT_CLASSIFICATION	0.9999989849455299	WITHOUT_CLASSIFICATION	1.0150544702100416E-6	DEFECT
// Valid extension point, more derived than Map above, but *after* it!	WITHOUT_CLASSIFICATION	0.9999975587297931	WITHOUT_CLASSIFICATION	2.4412702068870383E-6	DEFECT
// IntrospectionHelperTest	WITHOUT_CLASSIFICATION	0.999999794901335	WITHOUT_CLASSIFICATION	2.0509866503296793E-7	DEFECT
// make sure we do not get a NPE	WITHOUT_CLASSIFICATION	0.9999999131313161	WITHOUT_CLASSIFICATION	8.68686839104622E-8	DEFECT
// use an anonymous subclass since ProjectComponent is abstract	WITHOUT_CLASSIFICATION	0.9999998656160621	WITHOUT_CLASSIFICATION	1.3438393792771864E-7	DEFECT
// ------------------------------------------------------ //   Helper methods // -----------------------------------------------------	WITHOUT_CLASSIFICATION	0.999998223780054	WITHOUT_CLASSIFICATION	1.7762199459693632E-6	DEFECT
/* I wrote the testcases in one java file because I want also to test the * combined behaviour (see end of the class).*/	WITHOUT_CLASSIFICATION	0.9999917422422945	WITHOUT_CLASSIFICATION	8.257757705458124E-6	DEFECT
// check defaults	WITHOUT_CLASSIFICATION	0.9999999941331917	WITHOUT_CLASSIFICATION	5.866808219670706E-9	DEFECT
// check defaults	WITHOUT_CLASSIFICATION	0.9999999941331917	WITHOUT_CLASSIFICATION	5.866808219670706E-9	DEFECT
// check build.compiler provides defaults	WITHOUT_CLASSIFICATION	0.9999999534111345	WITHOUT_CLASSIFICATION	4.658886540892646E-8	DEFECT
// setUserProperty to override system properties	WITHOUT_CLASSIFICATION	0.9999998419510063	WITHOUT_CLASSIFICATION	1.580489936715515E-7	DEFECT
// check attribute overrides build.compiler	WITHOUT_CLASSIFICATION	0.9999999963253583	WITHOUT_CLASSIFICATION	3.6746416377001855E-9	DEFECT
// check attribute overrides build.compiler	WITHOUT_CLASSIFICATION	0.9999999963253583	WITHOUT_CLASSIFICATION	3.6746416377001855E-9	DEFECT
// some database keys, see #getProperties(int)	WITHOUT_CLASSIFICATION	0.9999999718857615	WITHOUT_CLASSIFICATION	2.811423850644008E-8	DEFECT
// keys used in properties.	WITHOUT_CLASSIFICATION	0.999999662416532	WITHOUT_CLASSIFICATION	3.375834679241136E-7	DEFECT
//neither	WITHOUT_CLASSIFICATION	0.999994379660551	WITHOUT_CLASSIFICATION	5.6203394489255454E-6	DEFECT
/*     * PR 11100     */	WITHOUT_CLASSIFICATION	0.9999986389288636	WITHOUT_CLASSIFICATION	1.3610711363927642E-6	DEFECT
// simple test to ensure that the caching does work...	WITHOUT_CLASSIFICATION	0.9999852561899315	WITHOUT_CLASSIFICATION	1.4743810068504181E-5	DEFECT
// 2nd run..	WITHOUT_CLASSIFICATION	0.9999969004585206	WITHOUT_CLASSIFICATION	3.0995414794735316E-6	DEFECT
// the driver must still be cached.	WITHOUT_CLASSIFICATION	0.999999967262346	WITHOUT_CLASSIFICATION	3.273765408285606E-8	DEFECT
// look for the driver path...	WITHOUT_CLASSIFICATION	0.9999991949418554	WITHOUT_CLASSIFICATION	8.050581446211527E-7	DEFECT
//file time checks for java1.2+	WITHOUT_CLASSIFICATION	0.9999994334628026	WITHOUT_CLASSIFICATION	5.665371974517624E-7	DEFECT
//only test on java1.5+	WITHOUT_CLASSIFICATION	0.9999993648773098	WITHOUT_CLASSIFICATION	6.35122690124057E-7	DEFECT
// AntLikeTasksAtTopLevelTest	WITHOUT_CLASSIFICATION	0.9999999487585461	WITHOUT_CLASSIFICATION	5.1241453838128756E-8	DEFECT
//file length checks rely on touch generating a zero byte file	WITHOUT_CLASSIFICATION	0.9999986573079319	WITHOUT_CLASSIFICATION	1.3426920680710645E-6	DEFECT
// no-op: not a real business error	WITHOUT_CLASSIFICATION	0.9998869671051881	WITHOUT_CLASSIFICATION	1.1303289481198495E-4	DEFECT
//dont look for much text here as it is vendor and version dependent	WITHOUT_CLASSIFICATION	0.9999964993776361	WITHOUT_CLASSIFICATION	3.500622363877348E-6	DEFECT
// end of try-catch	WITHOUT_CLASSIFICATION	0.9999997319034956	WITHOUT_CLASSIFICATION	2.680965043663052E-7	DEFECT
// end of try-catch	WITHOUT_CLASSIFICATION	0.9999997319034956	WITHOUT_CLASSIFICATION	2.680965043663052E-7	DEFECT
/*     * PR 11100     */	WITHOUT_CLASSIFICATION	0.9999986389288636	WITHOUT_CLASSIFICATION	1.3610711363927642E-6	DEFECT
/*     * PR 38973     */	WITHOUT_CLASSIFICATION	0.9999983379343932	WITHOUT_CLASSIFICATION	1.6620656068177653E-6	DEFECT
/*     * PR 11100     */	WITHOUT_CLASSIFICATION	0.9999986389288636	WITHOUT_CLASSIFICATION	1.3610711363927642E-6	DEFECT
/*     * PR 16213     */	WITHOUT_CLASSIFICATION	0.999998737409419	WITHOUT_CLASSIFICATION	1.2625905809100665E-6	DEFECT
/*     * PR 38973     */	WITHOUT_CLASSIFICATION	0.9999983379343932	WITHOUT_CLASSIFICATION	1.6620656068177653E-6	DEFECT
/*     * PR 21996     */	WITHOUT_CLASSIFICATION	0.9999977118826564	WITHOUT_CLASSIFICATION	2.28811734367167E-6	DEFECT
/*     * PR 10504     */	WITHOUT_CLASSIFICATION	0.9999980154299738	WITHOUT_CLASSIFICATION	1.9845700262668716E-6	DEFECT
/*     * PR 20969     */	WITHOUT_CLASSIFICATION	0.999995385096233	WITHOUT_CLASSIFICATION	4.614903767002994E-6	DEFECT
// can't access the booleans in MyPrinter here (even if they // were static) since the MyPrinter instance that was used in // the test has likely been loaded via a different classloader // than this class.  Therefore we make the printer assert its // state and only check for the tail invocation.	WITHOUT_CLASSIFICATION	0.9999999999349442	WITHOUT_CLASSIFICATION	6.505586331146309E-11	DEFECT
// should get no output at all	WITHOUT_CLASSIFICATION	0.9999996083399055	WITHOUT_CLASSIFICATION	3.9166009448350215E-7	DEFECT
// should get no output at all	WITHOUT_CLASSIFICATION	0.9999996083399055	WITHOUT_CLASSIFICATION	3.9166009448350215E-7	DEFECT
// should get no output at all	WITHOUT_CLASSIFICATION	0.9999996083399055	WITHOUT_CLASSIFICATION	3.9166009448350215E-7	DEFECT
// should get no output at all	WITHOUT_CLASSIFICATION	0.9999996083399055	WITHOUT_CLASSIFICATION	3.9166009448350215E-7	DEFECT
//this call should succeed as unless overrides if	WITHOUT_CLASSIFICATION	0.9999991558671699	WITHOUT_CLASSIFICATION	8.441328301103853E-7	DEFECT
// test that the watchdog ends the process	WITHOUT_CLASSIFICATION	0.9999981503739415	WITHOUT_CLASSIFICATION	1.8496260585076039E-6	DEFECT
// test that the watchdog ends the process	WITHOUT_CLASSIFICATION	0.9999981503739415	WITHOUT_CLASSIFICATION	1.8496260585076039E-6	DEFECT
// and a little shorter	WITHOUT_CLASSIFICATION	0.9999994946354077	WITHOUT_CLASSIFICATION	5.053645923876913E-7	DEFECT
// test that the watchdog ends the process	WITHOUT_CLASSIFICATION	0.9999981503739415	WITHOUT_CLASSIFICATION	1.8496260585076039E-6	DEFECT
// target must be specified	WITHOUT_CLASSIFICATION	0.9999999997877833	WITHOUT_CLASSIFICATION	2.1221662571233855E-10	DEFECT
// Should fail since a recursion will occur...	WITHOUT_CLASSIFICATION	0.9999014177866461	WITHOUT_CLASSIFICATION	9.858221335391688E-5	DEFECT
// a rather convoluted equals() test	WITHOUT_CLASSIFICATION	0.9999999907856632	WITHOUT_CLASSIFICATION	9.21433695238397E-9	DEFECT
// <path> swallows the basedir, it seems //assertTrue(!getProject().resolveFile("A").exists());	WITHOUT_CLASSIFICATION	0.9999993998208455	WITHOUT_CLASSIFICATION	6.001791545280343E-7	DEFECT
// allow this as imported in targets are only tested when a target is run	WITHOUT_CLASSIFICATION	0.9999999866120485	WITHOUT_CLASSIFICATION	1.3387951624747864E-8	DEFECT
// deactivate this test as imports within targets are not allowed	WITHOUT_CLASSIFICATION	0.9999999924946871	WITHOUT_CLASSIFICATION	7.505312889212306E-9	DEFECT
// Running on Windows or something, so skip it.	WITHOUT_CLASSIFICATION	0.9999976633412073	WITHOUT_CLASSIFICATION	2.336658792557531E-6	DEFECT
// remove log file from testSpawn	WITHOUT_CLASSIFICATION	0.99999942935558	WITHOUT_CLASSIFICATION	5.7064442007291E-7	DEFECT
// this is guaranteed by FileUtils#createTempFile	WITHOUT_CLASSIFICATION	0.9999996252603085	WITHOUT_CLASSIFICATION	3.747396915735853E-7	DEFECT
// let's be nice with the next generation of developers	WITHOUT_CLASSIFICATION	0.9999996070289026	WITHOUT_CLASSIFICATION	3.9297109738038504E-7	DEFECT
//executeTarget("setup"); //commented out for performance while target is empty	WITHOUT_CLASSIFICATION	0.999999959017337	WITHOUT_CLASSIFICATION	4.098266296407766E-8	DEFECT
// target // file // exptected string	WITHOUT_CLASSIFICATION	0.9999999970290298	WITHOUT_CLASSIFICATION	2.9709702805357886E-9	DEFECT
// END class ManifestClassPathTest	WITHOUT_CLASSIFICATION	0.9999995940876204	WITHOUT_CLASSIFICATION	4.059123796688977E-7	DEFECT
//      assertTrue("return code is invalid: " + retCode, retCode!=0);	WITHOUT_CLASSIFICATION	0.9999997424446647	WITHOUT_CLASSIFICATION	2.5755533534126725E-7	DEFECT
// test a process that runs and failed	WITHOUT_CLASSIFICATION	0.9999996669746962	WITHOUT_CLASSIFICATION	3.3302530386493305E-7	DEFECT
// process should abort	WITHOUT_CLASSIFICATION	0.9999992344470034	WITHOUT_CLASSIFICATION	7.655529964311104E-7	DEFECT
// I assume that starting this takes less than TIME_OUT/2 ms...	WITHOUT_CLASSIFICATION	0.9999968352832657	WITHOUT_CLASSIFICATION	3.164716734390727E-6	DEFECT
// wait for TIME_OUT/2, there should be about TIME_OUT/2 ms remaining before timeout	WITHOUT_CLASSIFICATION	0.9999973702548455	WITHOUT_CLASSIFICATION	2.629745154530355E-6	DEFECT
// now stop the watchdog.	WITHOUT_CLASSIFICATION	0.9999999698911662	WITHOUT_CLASSIFICATION	3.0108833717998706E-8	DEFECT
// wait for the thread to die, should be the end of the process	WITHOUT_CLASSIFICATION	0.9999926885167234	WITHOUT_CLASSIFICATION	7.311483276539978E-6	DEFECT
// process should be dead and well finished	WITHOUT_CLASSIFICATION	0.9999999705807179	WITHOUT_CLASSIFICATION	2.9419282152194083E-8	DEFECT
// We have to compare the decompressed content instead:	WITHOUT_CLASSIFICATION	0.9999998257883547	WITHOUT_CLASSIFICATION	1.7421164530143E-7	DEFECT
//no point in setting a message	WITHOUT_CLASSIFICATION	0.9999994822340657	WITHOUT_CLASSIFICATION	5.177659343727651E-7	DEFECT
// this is guaranteed by FileUtils#createTempFile	WITHOUT_CLASSIFICATION	0.9999996252603085	WITHOUT_CLASSIFICATION	3.747396915735853E-7	DEFECT
// make the spawned process run 4 seconds	WITHOUT_CLASSIFICATION	0.9999981238613824	WITHOUT_CLASSIFICATION	1.8761386176101214E-6	DEFECT
// this loop runs parallel to the build	WITHOUT_CLASSIFICATION	0.9999990274101987	WITHOUT_CLASSIFICATION	9.72589801200931E-7	DEFECT
// security	WITHOUT_CLASSIFICATION	0.9999995138176238	WITHOUT_CLASSIFICATION	4.86182376311432E-7	DEFECT
// time of the build in milli seconds	WITHOUT_CLASSIFICATION	0.9999906020342703	WITHOUT_CLASSIFICATION	9.397965729731594E-6	DEFECT
// Nothing specified -> Fail	WITHOUT_CLASSIFICATION	0.9999999985305795	WITHOUT_CLASSIFICATION	1.469420509339753E-9	DEFECT
// Only property specified -> Fail	WITHOUT_CLASSIFICATION	0.9999998604020425	WITHOUT_CLASSIFICATION	1.3959795750264153E-7	DEFECT
// Only file specified -> Fail	WITHOUT_CLASSIFICATION	0.9999999416121158	WITHOUT_CLASSIFICATION	5.838788426149486E-8	DEFECT
// file does exist -> property 'test' == 'true'	WITHOUT_CLASSIFICATION	0.9999985582948975	WITHOUT_CLASSIFICATION	1.4417051025639418E-6	DEFECT
// resource doesn't exist -> property 'test' == null	WITHOUT_CLASSIFICATION	0.9999905236059399	WITHOUT_CLASSIFICATION	9.47639406018853E-6	DEFECT
// resource does exist -> property 'test' == 'true'	WITHOUT_CLASSIFICATION	0.9999970050690881	WITHOUT_CLASSIFICATION	2.9949309118614045E-6	DEFECT
// class doesn't exist -> property 'test' == null	WITHOUT_CLASSIFICATION	0.9999560727663687	WITHOUT_CLASSIFICATION	4.392723363132774E-5	DEFECT
// class does exist -> property 'test' == 'true'	WITHOUT_CLASSIFICATION	0.9999909959795003	WITHOUT_CLASSIFICATION	9.004020499670582E-6	DEFECT
// All three specified but class missing -> null	WITHOUT_CLASSIFICATION	0.9999990791779814	WITHOUT_CLASSIFICATION	9.208220185005594E-7	DEFECT
// Specified property-name is "" -> true	WITHOUT_CLASSIFICATION	0.9999998797658896	WITHOUT_CLASSIFICATION	1.2023411050342518E-7	DEFECT
// Specified file is "" -> invalid files do not exist	WITHOUT_CLASSIFICATION	0.9999999733218699	WITHOUT_CLASSIFICATION	2.6678130196128822E-8	DEFECT
// Specified file is "" actually a directory, so it should pass	WITHOUT_CLASSIFICATION	0.9999984845681922	WITHOUT_CLASSIFICATION	1.5154318077474085E-6	DEFECT
// Specified resource is "" -> can such a thing exist?	WITHOUT_CLASSIFICATION	0.9999999595706404	WITHOUT_CLASSIFICATION	4.0429359671538556E-8	DEFECT
/*     * returns non null IBM JDK 1.3 Linux     */	WITHOUT_CLASSIFICATION	0.9999067874574786	WITHOUT_CLASSIFICATION	9.321254252131554E-5	DEFECT
// Specified dir is "" -> this is the current directory and should // always exist	WITHOUT_CLASSIFICATION	0.999999147420265	WITHOUT_CLASSIFICATION	8.525797350382041E-7	DEFECT
// Specified dir is "../taskdefs" -> should exist since it's the // location of the buildfile used...	WITHOUT_CLASSIFICATION	0.9999999610430413	WITHOUT_CLASSIFICATION	3.8956958544734197E-8	DEFECT
// Specified dir is "../this_dir_should_never_exist" -> null	WITHOUT_CLASSIFICATION	0.9999997364896762	WITHOUT_CLASSIFICATION	2.6351032376464614E-7	DEFECT
// Invalid type specified	WITHOUT_CLASSIFICATION	0.9999998929823212	WITHOUT_CLASSIFICATION	1.0701767871665525E-7	DEFECT
// Core class that exists in system classpath is ignored	WITHOUT_CLASSIFICATION	0.9999980031894136	WITHOUT_CLASSIFICATION	1.996810586532513E-6	DEFECT
// Core class that exists in system classpath is not ignored with ignoresystemclass="false"	WITHOUT_CLASSIFICATION	0.9998953525505371	WITHOUT_CLASSIFICATION	1.0464744946289357E-4	DEFECT
// Core class that exists in system classpath is not ignored with default ignoresystemclasses value	WITHOUT_CLASSIFICATION	0.9999903382499743	WITHOUT_CLASSIFICATION	9.661750025628216E-6	DEFECT
// Class is found in specified classpath	WITHOUT_CLASSIFICATION	0.9999997512103399	WITHOUT_CLASSIFICATION	2.487896600643355E-7	DEFECT
// File is not found in specified filepath	WITHOUT_CLASSIFICATION	0.9999996708674245	WITHOUT_CLASSIFICATION	3.2913257543904535E-7	DEFECT
// test when file begins with basedir twice	WITHOUT_CLASSIFICATION	0.9999918527643787	WITHOUT_CLASSIFICATION	8.147235621224607E-6	DEFECT
// test for searching parents	WITHOUT_CLASSIFICATION	0.999999755335421	WITHOUT_CLASSIFICATION	2.4466457907360553E-7	DEFECT
// test for not searching parents	WITHOUT_CLASSIFICATION	0.9999919963587824	WITHOUT_CLASSIFICATION	8.003641217563753E-6	DEFECT
// Output the default excludes	WITHOUT_CLASSIFICATION	0.9999999888848758	WITHOUT_CLASSIFICATION	1.1115124210594788E-8	DEFECT
// adding something to the excludes'	WITHOUT_CLASSIFICATION	0.9999995191632336	WITHOUT_CLASSIFICATION	4.808367664238977E-7	DEFECT
// removing something from the defaults	WITHOUT_CLASSIFICATION	0.9999999773038456	WITHOUT_CLASSIFICATION	2.269615438426684E-8	DEFECT
//CVS missing	WITHOUT_CLASSIFICATION	0.9999963286497292	WITHOUT_CLASSIFICATION	3.6713502709029777E-6	DEFECT
// target must be specified	WITHOUT_CLASSIFICATION	0.9999999997877833	WITHOUT_CLASSIFICATION	2.1221662571233855E-10	DEFECT
// We try to delete the directory created in CopydirTest	WITHOUT_CLASSIFICATION	0.9999999990966841	WITHOUT_CLASSIFICATION	9.033157932151812E-10	DEFECT
// check that both arrays have the same size	WITHOUT_CLASSIFICATION	0.9999995941461953	WITHOUT_CLASSIFICATION	4.0585380472569604E-7	DEFECT
//instance variable to allow cleanup	WITHOUT_CLASSIFICATION	0.9999999524397976	WITHOUT_CLASSIFICATION	4.756020239614587E-8	DEFECT
//ignored	WITHOUT_CLASSIFICATION	0.9999978479346613	WITHOUT_CLASSIFICATION	2.1520653387437296E-6	DEFECT
// What's the working directory?  If local, then its the // folder of the input file.  Otherwise, its the "current" dir..	WITHOUT_CLASSIFICATION	0.9999864473417907	WITHOUT_CLASSIFICATION	1.3552658209369246E-5	DEFECT
// Set a property on the project to make sure that loading // a property with the same name from an xml file will // *not* change it.	WITHOUT_CLASSIFICATION	0.9999993455891912	WITHOUT_CLASSIFICATION	6.544108086790864E-7	DEFECT
//printProperties(p.getProperties());	WITHOUT_CLASSIFICATION	0.999998504127676	WITHOUT_CLASSIFICATION	1.4958723239769702E-6	DEFECT
// Every key identified by the Properties must have been loaded.	WITHOUT_CLASSIFICATION	0.9999999389379076	WITHOUT_CLASSIFICATION	6.106209241650662E-8	DEFECT
// The property is the name of a file.  We are testing // a location attribute, so we need to resolve the given // file name in the provided folder.	WITHOUT_CLASSIFICATION	0.9999999806520791	WITHOUT_CLASSIFICATION	1.9347920910296346E-8	DEFECT
// Substitute .xml with .properties	WITHOUT_CLASSIFICATION	0.999999953140892	WITHOUT_CLASSIFICATION	4.6859108038437545E-8	DEFECT
// basedir of subant/subant-test1/subant.xml is .. // therefore we expect here the subant/subant-test1 subdirectory	WITHOUT_CLASSIFICATION	0.9999934288903677	WITHOUT_CLASSIFICATION	6.571109632276757E-6	DEFECT
// Output an empty String	WITHOUT_CLASSIFICATION	0.9999998648972517	WITHOUT_CLASSIFICATION	1.3510274830674303E-7	DEFECT
// Output 'OUTPUT OF ECHO'	WITHOUT_CLASSIFICATION	0.9999998854662542	WITHOUT_CLASSIFICATION	1.1453374583355923E-7	DEFECT
/*          * @param message         */	WITHOUT_CLASSIFICATION	0.9999998711093564	WITHOUT_CLASSIFICATION	1.2889064353139212E-7	DEFECT
// make sure that the parsing does not break	WITHOUT_CLASSIFICATION	0.9998474941356396	WITHOUT_CLASSIFICATION	1.5250586436048E-4	DEFECT
// where the name contains <>	WITHOUT_CLASSIFICATION	0.9999998552943545	WITHOUT_CLASSIFICATION	1.4470564546521133E-7	DEFECT
// where only an address is supplied	WITHOUT_CLASSIFICATION	0.9999996559596069	WITHOUT_CLASSIFICATION	3.4404039311269715E-7	DEFECT
// Tests property element, using XML schema properties as an example.	WITHOUT_CLASSIFICATION	0.9999995499971345	WITHOUT_CLASSIFICATION	4.500028655743404E-7	DEFECT
// should print "panic: Cannot find importVocab file 'JavaTokenTypes.txt'" // since it needs to run java.g first before java.tree.g	WITHOUT_CLASSIFICATION	0.9999590472503617	WITHOUT_CLASSIFICATION	4.0952749638388315E-5	DEFECT
// execute	WITHOUT_CLASSIFICATION	0.9999985466740953	WITHOUT_CLASSIFICATION	1.4533259048132968E-6	DEFECT
// override some of the code so we can test the handling of the // return code only.	WITHOUT_CLASSIFICATION	0.9999999527854998	WITHOUT_CLASSIFICATION	4.721450024892522E-8	DEFECT
// ask ant to update the properties...	WITHOUT_CLASSIFICATION	0.9999998768055994	WITHOUT_CLASSIFICATION	1.231944005667554E-7	DEFECT
// to override	WITHOUT_CLASSIFICATION	0.9999994331209121	WITHOUT_CLASSIFICATION	5.66879087888051E-7	DEFECT
// just to be sure	WITHOUT_CLASSIFICATION	0.999999995898777	WITHOUT_CLASSIFICATION	4.101223027302748E-9	DEFECT
// just to be sure	WITHOUT_CLASSIFICATION	0.999999995898777	WITHOUT_CLASSIFICATION	4.101223027302748E-9	DEFECT
// read in the file	WITHOUT_CLASSIFICATION	0.9999995060553113	WITHOUT_CLASSIFICATION	4.939446887464171E-7	DEFECT
// found the property we set - it's good.	WITHOUT_CLASSIFICATION	0.9999546202451463	WITHOUT_CLASSIFICATION	4.537975485382173E-5	DEFECT
// else	WITHOUT_CLASSIFICATION	0.9999998733392275	WITHOUT_CLASSIFICATION	1.2666077251501863E-7	DEFECT
// else	WITHOUT_CLASSIFICATION	0.9999998733392275	WITHOUT_CLASSIFICATION	1.2666077251501863E-7	DEFECT
// ReplaceRegExpTest	WITHOUT_CLASSIFICATION	0.9999999189966308	WITHOUT_CLASSIFICATION	8.100336920576527E-8	DEFECT
// test for 10 consecutives transform	WITHOUT_CLASSIFICATION	0.9999999797718067	WITHOUT_CLASSIFICATION	2.0228193354100098E-8	DEFECT
//java keywords are not special	WITHOUT_CLASSIFICATION	0.9999893935087611	WITHOUT_CLASSIFICATION	1.0606491238985292E-5	DEFECT
//underscores go in front of invalid start chars	WITHOUT_CLASSIFICATION	0.9999954262808634	WITHOUT_CLASSIFICATION	4.573719136719113E-6	DEFECT
//underscores at the front get an underscore too	WITHOUT_CLASSIFICATION	0.9999608711927661	WITHOUT_CLASSIFICATION	3.9128807233912813E-5	DEFECT
//non java char at start => underscore then the the _hex value	WITHOUT_CLASSIFICATION	0.9999985810005227	WITHOUT_CLASSIFICATION	1.4189994772013236E-6	DEFECT
//and paths are stripped	WITHOUT_CLASSIFICATION	0.9999990793063129	WITHOUT_CLASSIFICATION	9.20693687045602E-7	DEFECT
/** * Tests the {@link XSLTProcess} task. * XXX merge with {@link StyleTest}? * @since Ant 1.5 */	WITHOUT_CLASSIFICATION	0.9999758758622134	WITHOUT_CLASSIFICATION	2.412413778660251E-5	DEFECT
// byte - byte compare	WITHOUT_CLASSIFICATION	0.9999971290279576	WITHOUT_CLASSIFICATION	2.870972042359612E-6	DEFECT
// avoid endless loop	WITHOUT_CLASSIFICATION	0.9999999396968775	WITHOUT_CLASSIFICATION	6.030312244104607E-8	DEFECT
// those would fail because of the way BuildFileTest captures output	WITHOUT_CLASSIFICATION	0.9999938750882035	WITHOUT_CLASSIFICATION	6.124911796486194E-6	DEFECT
//To change body of implemented methods use File | Settings | File Templates.	WITHOUT_CLASSIFICATION	0.999999944227032	WITHOUT_CLASSIFICATION	5.5772967994513644E-8	DEFECT
// tests one the file object	WITHOUT_CLASSIFICATION	0.9999999073478556	WITHOUT_CLASSIFICATION	9.265214438523499E-8	DEFECT
// father and child pattern test	WITHOUT_CLASSIFICATION	0.9999995510459613	WITHOUT_CLASSIFICATION	4.4895403878641513E-7	DEFECT
// redo the test, but the 2 include patterns are inverted	WITHOUT_CLASSIFICATION	0.9999998161036499	WITHOUT_CLASSIFICATION	1.8389635007326048E-7	DEFECT
// end of try-catch	WITHOUT_CLASSIFICATION	0.9999997319034956	WITHOUT_CLASSIFICATION	2.680965043663052E-7	DEFECT
// tests one the file object	WITHOUT_CLASSIFICATION	0.9999999073478556	WITHOUT_CLASSIFICATION	9.265214438523499E-8	DEFECT
// On junit3 this is a FAILURE, on junit4 this is an ERROR	WITHOUT_CLASSIFICATION	0.9999959206999698	WITHOUT_CLASSIFICATION	4.079300030131669E-6	DEFECT
// conversion to URL via FileUtils like in XMLResultAggregator, not as suggested in the bug report	WITHOUT_CLASSIFICATION	0.9998906471418915	WITHOUT_CLASSIFICATION	1.093528581085207E-4	DEFECT
// conversion to URL via FileUtils like in XMLResultAggregator, not as suggested in the bug report	WITHOUT_CLASSIFICATION	0.9998906471418915	WITHOUT_CLASSIFICATION	1.093528581085207E-4	DEFECT
// conversion to URL via FileUtils like in XMLResultAggregator, not as suggested in the bug report	WITHOUT_CLASSIFICATION	0.9998906471418915	WITHOUT_CLASSIFICATION	1.093528581085207E-4	DEFECT
// mandatory constructor	WITHOUT_CLASSIFICATION	0.9999995549829594	WITHOUT_CLASSIFICATION	4.4501704050253555E-7	DEFECT
// check that a suite generates no errors	WITHOUT_CLASSIFICATION	0.9999998345316136	WITHOUT_CLASSIFICATION	1.6546838636938133E-7	DEFECT
// check that having no suite generates no errors	WITHOUT_CLASSIFICATION	0.9999999048008688	WITHOUT_CLASSIFICATION	9.519913116263333E-8	DEFECT
// check that something which is not a testcase generates no errors // at first even though this is incorrect.	WITHOUT_CLASSIFICATION	0.99998428804547	WITHOUT_CLASSIFICATION	1.5711954529981866E-5	DEFECT
// check that an invalid suite generates an error.	WITHOUT_CLASSIFICATION	0.9999997775090499	WITHOUT_CLASSIFICATION	2.2249095012362664E-7	DEFECT
// JUnit3 test //assertEquals(runner.getFormatter().getError(), JUnitTestRunner.FAILURES, runner.getRetCode());	WITHOUT_CLASSIFICATION	0.9999989768030235	WITHOUT_CLASSIFICATION	1.0231969765570392E-6	DEFECT
// On junit3 this is a FAILURE, on junit4 this is an ERROR	WITHOUT_CLASSIFICATION	0.9999959206999698	WITHOUT_CLASSIFICATION	4.079300030131669E-6	DEFECT
/*          * @param event the build event that is being logged.         */	WITHOUT_CLASSIFICATION	0.999998915990876	WITHOUT_CLASSIFICATION	1.084009123941742E-6	DEFECT
// check that an exception in the constructor is noticed	WITHOUT_CLASSIFICATION	0.9999998600416965	WITHOUT_CLASSIFICATION	1.3995830357106408E-7	DEFECT
// the test runner that wrap the dummy formatter that interests us	WITHOUT_CLASSIFICATION	0.9999993154677933	WITHOUT_CLASSIFICATION	6.845322066617979E-7	DEFECT
// use the classloader that loaded this class otherwise // it will not be able to run inner classes if this test // is ran in non-forked mode.	WITHOUT_CLASSIFICATION	0.999999964347134	WITHOUT_CLASSIFICATION	3.5652866053364365E-8	DEFECT
// dummy formatter just to catch the error	WITHOUT_CLASSIFICATION	0.9999999763165047	WITHOUT_CLASSIFICATION	2.3683495283594754E-8	DEFECT
// end of try-catch	WITHOUT_CLASSIFICATION	0.9999997319034956	WITHOUT_CLASSIFICATION	2.680965043663052E-7	DEFECT
// end of try-catch	WITHOUT_CLASSIFICATION	0.9999997319034956	WITHOUT_CLASSIFICATION	2.680965043663052E-7	DEFECT
// byte - byte compare	WITHOUT_CLASSIFICATION	0.9999971290279576	WITHOUT_CLASSIFICATION	2.870972042359612E-6	DEFECT
/*          * @param event the build event that is being logged.         */	WITHOUT_CLASSIFICATION	0.999998915990876	WITHOUT_CLASSIFICATION	1.084009123941742E-6	DEFECT
// get the fileset and its basedir	WITHOUT_CLASSIFICATION	0.999999434809768	WITHOUT_CLASSIFICATION	5.651902320292873E-7	DEFECT
// get the fileset and its basedir	WITHOUT_CLASSIFICATION	0.999999434809768	WITHOUT_CLASSIFICATION	5.651902320292873E-7	DEFECT
// get the fileset and its basedir	WITHOUT_CLASSIFICATION	0.999999434809768	WITHOUT_CLASSIFICATION	5.651902320292873E-7	DEFECT
// Set up a SOSGet task	WITHOUT_CLASSIFICATION	0.9999999579709142	WITHOUT_CLASSIFICATION	4.202908582324746E-8	DEFECT
// Set up a SOSGet task	WITHOUT_CLASSIFICATION	0.9999999579709142	WITHOUT_CLASSIFICATION	4.202908582324746E-8	DEFECT
// Set up a SOSCheckin task	WITHOUT_CLASSIFICATION	0.9999999413209076	WITHOUT_CLASSIFICATION	5.8679092414453666E-8	DEFECT
// Set up a SOSCheckin task	WITHOUT_CLASSIFICATION	0.9999999413209076	WITHOUT_CLASSIFICATION	5.8679092414453666E-8	DEFECT
// Set up a SOSCheckout task	WITHOUT_CLASSIFICATION	0.9999999759737079	WITHOUT_CLASSIFICATION	2.4026292024674662E-8	DEFECT
// Set up a sosCheckout task	WITHOUT_CLASSIFICATION	0.9999999533950494	WITHOUT_CLASSIFICATION	4.6604950664354434E-8	DEFECT
// Set up a sosCheckout task	WITHOUT_CLASSIFICATION	0.9999999533950494	WITHOUT_CLASSIFICATION	4.6604950664354434E-8	DEFECT
// We have extra elements	WITHOUT_CLASSIFICATION	0.9999999025108293	WITHOUT_CLASSIFICATION	9.748917076745321E-8	DEFECT
// give it some time to display	WITHOUT_CLASSIFICATION	0.9999754026037357	WITHOUT_CLASSIFICATION	2.4597396264278435E-5	DEFECT
// Set up a VSSGet task	WITHOUT_CLASSIFICATION	0.9999999466644915	WITHOUT_CLASSIFICATION	5.333550838571223E-8	DEFECT
// Set up a VSSLabel task	WITHOUT_CLASSIFICATION	0.9999999712102844	WITHOUT_CLASSIFICATION	2.8789715598132038E-8	DEFECT
// Set up a VSSLabel task	WITHOUT_CLASSIFICATION	0.9999999712102844	WITHOUT_CLASSIFICATION	2.8789715598132038E-8	DEFECT
// Set up a VSSHistory task	WITHOUT_CLASSIFICATION	0.9999999549997648	WITHOUT_CLASSIFICATION	4.500023531305545E-8	DEFECT
// Set up a VSSHistory task	WITHOUT_CLASSIFICATION	0.9999999549997648	WITHOUT_CLASSIFICATION	4.500023531305545E-8	DEFECT
// Set up a Timestamp	WITHOUT_CLASSIFICATION	0.9999999750631452	WITHOUT_CLASSIFICATION	2.493685483873428E-8	DEFECT
// Get today's date	WITHOUT_CLASSIFICATION	0.999999070879776	WITHOUT_CLASSIFICATION	9.291202240121736E-7	DEFECT
// Set up a VSSCheckIn task	WITHOUT_CLASSIFICATION	0.9999998449898777	WITHOUT_CLASSIFICATION	1.5501012239247346E-7	DEFECT
// Set up a VSSCheckOut task	WITHOUT_CLASSIFICATION	0.9999999832567915	WITHOUT_CLASSIFICATION	1.674320849920181E-8	DEFECT
// Set up a VSSAdd task	WITHOUT_CLASSIFICATION	0.9999999646442664	WITHOUT_CLASSIFICATION	3.535573343897799E-8	DEFECT
// Set up a VSSCp task	WITHOUT_CLASSIFICATION	0.9999999275957681	WITHOUT_CLASSIFICATION	7.240423184455417E-8	DEFECT
// Set up a VSSCreate task	WITHOUT_CLASSIFICATION	0.9999999887920039	WITHOUT_CLASSIFICATION	1.1207995965792188E-8	DEFECT
// Count the number of empty strings	WITHOUT_CLASSIFICATION	0.9999998796315026	WITHOUT_CLASSIFICATION	1.2036849747726684E-7	DEFECT
// ran Ant tests with -ea and this would fail spuriously	WITHOUT_CLASSIFICATION	0.9999531003329255	WITHOUT_CLASSIFICATION	4.689966707442523E-5	DEFECT
// now to the expected failures	WITHOUT_CLASSIFICATION	0.9999994460599372	WITHOUT_CLASSIFICATION	5.539400627828018E-7	DEFECT
// catalog <--> catalog	WITHOUT_CLASSIFICATION	0.9999995485862819	WITHOUT_CLASSIFICATION	4.5141371806593593E-7	DEFECT
// catalog1 --> catalog2 --> catalog3 --> catalog1	WITHOUT_CLASSIFICATION	0.9999993065628199	WITHOUT_CLASSIFICATION	6.934371800073543E-7	DEFECT
// catalog2 --> catalog1 --> catalog	WITHOUT_CLASSIFICATION	0.9999991146666334	WITHOUT_CLASSIFICATION	8.853333666787308E-7	DEFECT
//check that dir and src are incompatible	WITHOUT_CLASSIFICATION	0.9999999098074742	WITHOUT_CLASSIFICATION	9.019252575236051E-8	DEFECT
//check that fullpath and prefix are incompatible	WITHOUT_CLASSIFICATION	0.9999931601420265	WITHOUT_CLASSIFICATION	6.8398579734701315E-6	DEFECT
// check that reference zipfilesets cannot have specific attributes	WITHOUT_CLASSIFICATION	0.9999997833830365	WITHOUT_CLASSIFICATION	2.166169635634964E-7	DEFECT
// check that a reference zipfileset gets the same attributes as the original	WITHOUT_CLASSIFICATION	0.9999999883318286	WITHOUT_CLASSIFICATION	1.1668171553895777E-8	DEFECT
//check that dir and src are incompatible	WITHOUT_CLASSIFICATION	0.9999999098074742	WITHOUT_CLASSIFICATION	9.019252575236051E-8	DEFECT
// // These shenanigans are necessary b/c Norm Walsh's resolver // has a different idea of how file URLs are created on windoze // ie file://c:/foo instead of file:///c:/foo //	WITHOUT_CLASSIFICATION	0.9999929092442237	WITHOUT_CLASSIFICATION	7.090755776277284E-6	DEFECT
//check that dir and src are incompatible	WITHOUT_CLASSIFICATION	0.9999999098074742	WITHOUT_CLASSIFICATION	9.019252575236051E-8	DEFECT
//check that fullpath and prefix are incompatible	WITHOUT_CLASSIFICATION	0.9999931601420265	WITHOUT_CLASSIFICATION	6.8398579734701315E-6	DEFECT
// try a netware-volume length path, see how it is handled	WITHOUT_CLASSIFICATION	0.9999996776032822	WITHOUT_CLASSIFICATION	3.223967178329496E-7	DEFECT
// actually tests constructor as well as setPath	WITHOUT_CLASSIFICATION	0.9999999996158206	WITHOUT_CLASSIFICATION	3.841793751575647E-10	DEFECT
// check that reference tarfilesets cannot have specific attributes	WITHOUT_CLASSIFICATION	0.9999999145228163	WITHOUT_CLASSIFICATION	8.547718363788967E-8	DEFECT
// try a multi-part netware-volume length path w/forward slash, see how it is handled	WITHOUT_CLASSIFICATION	0.9999998763882466	WITHOUT_CLASSIFICATION	1.236117533706636E-7	DEFECT
// try a multi-part netware-volume length path, see how it is handled	WITHOUT_CLASSIFICATION	0.9999998056692706	WITHOUT_CLASSIFICATION	1.9433072937662824E-7	DEFECT
// dummy1 --> dummy2 --> dummy3 --> dummy1	WITHOUT_CLASSIFICATION	0.999997414225367	WITHOUT_CLASSIFICATION	2.5857746330498226E-6	DEFECT
// try a netware-volume length path w/forward slash, see how it is handled	WITHOUT_CLASSIFICATION	0.9999997949267954	WITHOUT_CLASSIFICATION	2.0507320462080638E-7	DEFECT
// try a multi-part netware-volume length path with UNIX // separator (this testcase if from an actual bug that was // found, in AvailableTest, which uses PathTokenizer)	WITHOUT_CLASSIFICATION	0.9998059741047356	WITHOUT_CLASSIFICATION	1.9402589526432566E-4	DEFECT
// dummy1 --> dummy2 --> dummy3 --> dummy1	WITHOUT_CLASSIFICATION	0.999997414225367	WITHOUT_CLASSIFICATION	2.5857746330498226E-6	DEFECT
// dummy1 --> dummy2 --> dummy3 --> dummy1	WITHOUT_CLASSIFICATION	0.999997414225367	WITHOUT_CLASSIFICATION	2.5857746330498226E-6	DEFECT
// dummy1 --> dummy2 --> dummy3 --> dummy1	WITHOUT_CLASSIFICATION	0.999997414225367	WITHOUT_CLASSIFICATION	2.5857746330498226E-6	DEFECT
// dummy1 --> dummy2 --> dummy3 --> dummy1	WITHOUT_CLASSIFICATION	0.999997414225367	WITHOUT_CLASSIFICATION	2.5857746330498226E-6	DEFECT
// dummy1 --> dummy2 --> dummy3 (with Path "/a")	WITHOUT_CLASSIFICATION	0.9999987465588551	WITHOUT_CLASSIFICATION	1.253441144835254E-6	DEFECT
// This class acts as a custom Ant task also // and uses these variables/methods in that mode	WITHOUT_CLASSIFICATION	0.9999980300879084	WITHOUT_CLASSIFICATION	1.9699120915170216E-6	DEFECT
// dummy1 --> dummy2 --> dummy3 // (which has the Project's basedir as root).	WITHOUT_CLASSIFICATION	0.9999996537054557	WITHOUT_CLASSIFICATION	3.462945442074989E-7	DEFECT
// dummy1 --> dummy2 --> dummy3 // (which has the Project's basedir as root).	WITHOUT_CLASSIFICATION	0.9999996537054557	WITHOUT_CLASSIFICATION	3.462945442074989E-7	DEFECT
// Grant extra permissions to read and write the user.* properties and read to the // java.home property	WITHOUT_CLASSIFICATION	0.999998986280977	WITHOUT_CLASSIFICATION	1.0137190229754936E-6	DEFECT
// dummy1 --> dummy2 --> dummy3 // (which holds patterns "include" and "exclude")	WITHOUT_CLASSIFICATION	0.9999998046618854	WITHOUT_CLASSIFICATION	1.9533811461467277E-7	DEFECT
// check that a reference tarfileset gets the same attributes as the original	WITHOUT_CLASSIFICATION	0.9999999942443759	WITHOUT_CLASSIFICATION	5.755624066470775E-9	DEFECT
// was expected	WITHOUT_CLASSIFICATION	0.9999998115173944	WITHOUT_CLASSIFICATION	1.8848260576683325E-7	DEFECT
// Revoke permission to write user.home (granted above via user.*), still able to read though. // and the default granted permission to read os.name.	WITHOUT_CLASSIFICATION	0.9999998565178787	WITHOUT_CLASSIFICATION	1.434821211894372E-7	DEFECT
// Was expected, test passes	WITHOUT_CLASSIFICATION	0.9999994716635106	WITHOUT_CLASSIFICATION	5.283364894647464E-7	DEFECT
// Was expected, test passes	WITHOUT_CLASSIFICATION	0.9999994716635106	WITHOUT_CLASSIFICATION	5.283364894647464E-7	DEFECT
// Was expected, test passes	WITHOUT_CLASSIFICATION	0.9999994716635106	WITHOUT_CLASSIFICATION	5.283364894647464E-7	DEFECT
/*         * After changing CommandlineJava to search for the java         * executable, I don't know, how to tests the value returned         * here without using the same logic as applied in the class         * itself.         *         * assertTrue("no classpath", "java", s[0]);         */	WITHOUT_CLASSIFICATION	0.9999999998335953	WITHOUT_CLASSIFICATION	1.6640467671133942E-10	DEFECT
//        assertEquals("with classpath", "java", s[0]);	WITHOUT_CLASSIFICATION	0.9999999963211874	WITHOUT_CLASSIFICATION	3.6788125644096182E-9	DEFECT
// only the second iteration would pass because of PR 27218	WITHOUT_CLASSIFICATION	0.9999954314589354	WITHOUT_CLASSIFICATION	4.568541064635704E-6	DEFECT
//mix element types	WITHOUT_CLASSIFICATION	0.9999920533769731	WITHOUT_CLASSIFICATION	7.946623026932215E-6	DEFECT
//implicit composite	WITHOUT_CLASSIFICATION	0.9999997875688745	WITHOUT_CLASSIFICATION	2.1243112547682715E-7	DEFECT
// a --> b --> c --- def //               \-- ghi	WITHOUT_CLASSIFICATION	0.9999999758590448	WITHOUT_CLASSIFICATION	2.4140955197808047E-8	DEFECT
// // Ensure that an external entity resolves as expected Using an // XMLCatalog: // // Transform an XML file that refers to the entity into a text // file, entity is listed in the XMLCatalog pointing to a // different file.  Stuff result into property: val2 //	WITHOUT_CLASSIFICATION	0.9999999771400511	WITHOUT_CLASSIFICATION	2.2859948949036993E-8	DEFECT
// // Ensure that an external entity resolves as expected with NO // XMLCatalog involvement: // // Transform an XML file that refers to the entity into a text // file, stuff result into property: val1 //	WITHOUT_CLASSIFICATION	0.999999648869061	WITHOUT_CLASSIFICATION	3.51130938951608E-7	DEFECT
// this actually relies on the first manifest being found on // the classpath (probably rt.jar's) being valid	WITHOUT_CLASSIFICATION	0.9999990807248967	WITHOUT_CLASSIFICATION	9.192751032485588E-7	DEFECT
// // Ensure that an external entity resolves as expected with NO // XMLCatalog involvement: // // Transform an XML file that contains a reference to a _second_ XML file // via the document() function.  The _second_ XML file refers to an entity. // Stuff result into the property: val3 //	WITHOUT_CLASSIFICATION	0.9999959491220933	WITHOUT_CLASSIFICATION	4.05087790659165E-6	DEFECT
// // Ensure that an external entity resolves as expected Using an // XMLCatalog: // // Transform an XML file that contains a reference to a _second_ XML file // via the document() function.  The _second_ XML file refers to an entity. // The entity is listed in the XMLCatalog pointing to a different file. // Stuff result into the property: val4 //	WITHOUT_CLASSIFICATION	0.9999999840895234	WITHOUT_CLASSIFICATION	1.5910476540719143E-8	DEFECT
// The following will be used as types and tasks	WITHOUT_CLASSIFICATION	0.9999977447733667	WITHOUT_CLASSIFICATION	2.2552266333453645E-6	DEFECT
// share the setup for testing the depend task	WITHOUT_CLASSIFICATION	0.9999999997560056	WITHOUT_CLASSIFICATION	2.4399437494425713E-10	DEFECT
// Test for path relative to project base directory	WITHOUT_CLASSIFICATION	0.9999999481091583	WITHOUT_CLASSIFICATION	5.189084166888009E-8	DEFECT
//class-MockCache	WITHOUT_CLASSIFICATION	0.9999952361836014	WITHOUT_CLASSIFICATION	4.763816398618773E-6	DEFECT
//  =====================  attributes  =====================	WITHOUT_CLASSIFICATION	0.9999999185399907	WITHOUT_CLASSIFICATION	8.146000924136716E-8	DEFECT
//class-MockCache	WITHOUT_CLASSIFICATION	0.9999952361836014	WITHOUT_CLASSIFICATION	4.763816398618773E-6	DEFECT
//  =====================  constructors, factories  =====================	WITHOUT_CLASSIFICATION	0.9999999745960794	WITHOUT_CLASSIFICATION	2.5403920541492557E-8	DEFECT
//  =====================  JUnit stuff  =====================	WITHOUT_CLASSIFICATION	0.999999166369828	WITHOUT_CLASSIFICATION	8.336301721018874E-7	DEFECT
// project reference is set in super.setUp()	WITHOUT_CLASSIFICATION	0.9999972743492613	WITHOUT_CLASSIFICATION	2.7256507385878263E-6	DEFECT
// init the testclasses path object	WITHOUT_CLASSIFICATION	0.9999998168256563	WITHOUT_CLASSIFICATION	1.8317434374632112E-7	DEFECT
/* * /    // for test only - ignore tests where we arent work at the moment    public static junit.framework.Test suite() {        junit.framework.TestSuite suite= new junit.framework.TestSuite();        suite.addTest(new ModifiedSelectorTest("testValidateWrongCache"));        return suite;    }    /* */	WITHOUT_CLASSIFICATION	0.9999999996332235	WITHOUT_CLASSIFICATION	3.667765089025719E-10	DEFECT
// =======  testcases for the attributes and nested elements of the selector  =====	WITHOUT_CLASSIFICATION	0.9999999930021206	WITHOUT_CLASSIFICATION	6.997879455499083E-9	DEFECT
// do the actions	WITHOUT_CLASSIFICATION	0.9999981542449426	WITHOUT_CLASSIFICATION	1.845755057324262E-6	DEFECT
// do the checks - the buildfile stores the fileset as property	WITHOUT_CLASSIFICATION	0.9999981476954133	WITHOUT_CLASSIFICATION	1.8523045866996561E-6	DEFECT
// must be empty according to the Mock* implementations	WITHOUT_CLASSIFICATION	0.9999900889922843	WITHOUT_CLASSIFICATION	9.911007715717141E-6	DEFECT
// don't catch the JUnit exceptions	WITHOUT_CLASSIFICATION	0.9999990419127732	WITHOUT_CLASSIFICATION	9.580872267728185E-7	DEFECT
// no check for 1<=kind<=3 - only internal use therefore check it // while development	WITHOUT_CLASSIFICATION	0.9999999999196165	WITHOUT_CLASSIFICATION	8.038348936655191E-11	DEFECT
// readable form of parameter kind	WITHOUT_CLASSIFICATION	0.9999992284900782	WITHOUT_CLASSIFICATION	7.715099218418783E-7	DEFECT
// setup the "Ant project"	WITHOUT_CLASSIFICATION	0.9999997690698572	WITHOUT_CLASSIFICATION	2.3093014286880466E-7	DEFECT
// setup the selector	WITHOUT_CLASSIFICATION	0.9999999796944389	WITHOUT_CLASSIFICATION	2.0305561088966755E-8	DEFECT
// get the cache, so we can check our things	WITHOUT_CLASSIFICATION	0.9999999756142626	WITHOUT_CLASSIFICATION	2.4385737455255294E-8	DEFECT
// the test	WITHOUT_CLASSIFICATION	0.9999997810893818	WITHOUT_CLASSIFICATION	2.189106182636211E-7	DEFECT
// MockCache doesnt create a file - therefore no cleanup needed	WITHOUT_CLASSIFICATION	0.9999999997470802	WITHOUT_CLASSIFICATION	2.529197798207675E-10	DEFECT
// add the test classes to its classpath	WITHOUT_CLASSIFICATION	0.9999999460539429	WITHOUT_CLASSIFICATION	5.3946057009178145E-8	DEFECT
// let the selector do its checks	WITHOUT_CLASSIFICATION	0.9999998151934925	WITHOUT_CLASSIFICATION	1.8480650747493474E-7	DEFECT
// extract the algorithm name (and config) from the selectors output	WITHOUT_CLASSIFICATION	0.9999962266095725	WITHOUT_CLASSIFICATION	3.773390427510362E-6	DEFECT
// '<' and '>' are only used if the algorithm has properties	WITHOUT_CLASSIFICATION	0.9999997066902802	WITHOUT_CLASSIFICATION	2.9330971978310616E-7	DEFECT
// return the clean value	WITHOUT_CLASSIFICATION	0.9999998670714207	WITHOUT_CLASSIFICATION	1.3292857928435592E-7	DEFECT
// initialize test environment (called "bed")	WITHOUT_CLASSIFICATION	0.9999999951125673	WITHOUT_CLASSIFICATION	4.887432574577453E-9	DEFECT
// initialize test environment (called "bed")	WITHOUT_CLASSIFICATION	0.9999999951125673	WITHOUT_CLASSIFICATION	4.887432574577453E-9	DEFECT
// Configure the selector	WITHOUT_CLASSIFICATION	0.9999999869887571	WITHOUT_CLASSIFICATION	1.3011242770299585E-8	DEFECT
// Configure the selector	WITHOUT_CLASSIFICATION	0.9999999869887571	WITHOUT_CLASSIFICATION	1.3011242770299585E-8	DEFECT
// does the selection	WITHOUT_CLASSIFICATION	0.9999614541366677	WITHOUT_CLASSIFICATION	3.854586333241576E-5	DEFECT
// evaluate correctness	WITHOUT_CLASSIFICATION	0.999996969870229	WITHOUT_CLASSIFICATION	3.03012977106817E-6	DEFECT
// evaluate correctness	WITHOUT_CLASSIFICATION	0.999996969870229	WITHOUT_CLASSIFICATION	3.03012977106817E-6	DEFECT
// same logic as on algorithm, no testcases created	WITHOUT_CLASSIFICATION	0.9999999339421844	WITHOUT_CLASSIFICATION	6.605781558179384E-8	DEFECT
// same logic as on algorithm, no testcases created	WITHOUT_CLASSIFICATION	0.9999999339421844	WITHOUT_CLASSIFICATION	6.605781558179384E-8	DEFECT
// given cache must be empty	WITHOUT_CLASSIFICATION	0.9999990824044213	WITHOUT_CLASSIFICATION	9.175955786518923E-7	DEFECT
// cache must return a stored value	WITHOUT_CLASSIFICATION	0.9999999208388959	WITHOUT_CLASSIFICATION	7.916110411355191E-8	DEFECT
// test the iterator	WITHOUT_CLASSIFICATION	0.9999999955235168	WITHOUT_CLASSIFICATION	4.476483193018176E-9	DEFECT
// clear the cache	WITHOUT_CLASSIFICATION	0.999999827849007	WITHOUT_CLASSIFICATION	1.721509930223368E-7	DEFECT
// must not be a directory	WITHOUT_CLASSIFICATION	0.9999998174907972	WITHOUT_CLASSIFICATION	1.8250920280574152E-7	DEFECT
// get the Hashvalues	WITHOUT_CLASSIFICATION	0.9999999136963154	WITHOUT_CLASSIFICATION	8.630368467570326E-8	DEFECT
// Assert !=null and equality	WITHOUT_CLASSIFICATION	0.9999999121119788	WITHOUT_CLASSIFICATION	8.788802117878099E-8	DEFECT
//if-isFile //for	WITHOUT_CLASSIFICATION	0.9999996005989534	WITHOUT_CLASSIFICATION	3.994010465222089E-7	DEFECT
// ==============  testcases for the comparator implementations  ==============	WITHOUT_CLASSIFICATION	0.9999993571071284	WITHOUT_CLASSIFICATION	6.428928716231519E-7	DEFECT
//not yet supported see note in selector	WITHOUT_CLASSIFICATION	0.999980345313015	WITHOUT_CLASSIFICATION	1.965468698492786E-5	DEFECT
//new File("src/etc/testcases/types/resources/selectors/cache.properties").delete();	WITHOUT_CLASSIFICATION	0.9999999912166582	WITHOUT_CLASSIFICATION	8.783341891765619E-9	DEFECT
// really "2"	WITHOUT_CLASSIFICATION	0.9999979001420289	WITHOUT_CLASSIFICATION	2.099857971047939E-6	DEFECT
// Configure the selector - only defaults are used	WITHOUT_CLASSIFICATION	0.9999999983001702	WITHOUT_CLASSIFICATION	1.6998298084567425E-9	DEFECT
//                     + "  <emptyElement></emptyElement>"	WITHOUT_CLASSIFICATION	0.9999995844299052	WITHOUT_CLASSIFICATION	4.155700946667986E-7	DEFECT
/* ============ ResourceFactory interface ====================== */	WITHOUT_CLASSIFICATION	0.9999997712821628	WITHOUT_CLASSIFICATION	2.2871783720466319E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999999198791225	WITHOUT_CLASSIFICATION	8.012087743264267E-8	DEFECT
//class-BFT	WITHOUT_CLASSIFICATION	0.9999934925070703	WITHOUT_CLASSIFICATION	6.5074929297849616E-6	DEFECT
// do the actions	WITHOUT_CLASSIFICATION	0.9999981542449426	WITHOUT_CLASSIFICATION	1.845755057324262E-6	DEFECT
// don't catch the JUnit exceptions	WITHOUT_CLASSIFICATION	0.9999990419127732	WITHOUT_CLASSIFICATION	9.580872267728185E-7	DEFECT
// // *****  First Run  ***** // the first call should get all files, because nothing is in // the cache //	WITHOUT_CLASSIFICATION	0.9999992134243175	WITHOUT_CLASSIFICATION	7.865756825151581E-7	DEFECT
// // *****  Second Run  ***** // the second call should get no files, because no content // has changed //	WITHOUT_CLASSIFICATION	0.9999998684656206	WITHOUT_CLASSIFICATION	1.3153437942614253E-7	DEFECT
// // *****  make some files dirty  ***** //	WITHOUT_CLASSIFICATION	0.9999189006863127	WITHOUT_CLASSIFICATION	8.109931368728266E-5	DEFECT
// these files are made dirty --> 3+4 with different content	WITHOUT_CLASSIFICATION	0.9999990153808794	WITHOUT_CLASSIFICATION	9.846191205634639E-7	DEFECT
// AccessObject to the test-Ant-environment	WITHOUT_CLASSIFICATION	0.9999997126232679	WITHOUT_CLASSIFICATION	2.8737673213835306E-7	DEFECT
// give some values (via property file) to that environment	WITHOUT_CLASSIFICATION	0.99993075896591	WITHOUT_CLASSIFICATION	6.924103409005152E-5	DEFECT
// call the target for making the files dirty	WITHOUT_CLASSIFICATION	0.9999981828626135	WITHOUT_CLASSIFICATION	1.8171373865056895E-6	DEFECT
// // *****  Third Run  ***** // third call should get only those files, which CONTENT changed // (no timestamp changes required!)	WITHOUT_CLASSIFICATION	0.9999998844474948	WITHOUT_CLASSIFICATION	1.1555250522103385E-7	DEFECT
// // *****  Check the result  ***** //	WITHOUT_CLASSIFICATION	0.9999967781492538	WITHOUT_CLASSIFICATION	3.2218507461800198E-6	DEFECT
// Mark all files which should be selected as (T)rue and all others // as (F)alse. Directories are always selected so they always are // (T)rue.	WITHOUT_CLASSIFICATION	0.9999999998672693	WITHOUT_CLASSIFICATION	1.3273071533339594E-10	DEFECT
// f2name shouldn't be selected: only timestamp has changed!	WITHOUT_CLASSIFICATION	0.9999515125488903	WITHOUT_CLASSIFICATION	4.848745110965072E-5	DEFECT
// info text // list of files // expected result // result	WITHOUT_CLASSIFICATION	0.999999792127688	WITHOUT_CLASSIFICATION	2.0787231204447322E-7	DEFECT
// cleanup the environment	WITHOUT_CLASSIFICATION	0.9999996009228623	WITHOUT_CLASSIFICATION	3.990771375523626E-7	DEFECT
// cleanup the environment	WITHOUT_CLASSIFICATION	0.9999996009228623	WITHOUT_CLASSIFICATION	3.990771375523626E-7	DEFECT
// RuleBasedCollator not yet supported - see Selector:375 note	WITHOUT_CLASSIFICATION	0.9995477672079479	WITHOUT_CLASSIFICATION	4.5223279205197176E-4	DEFECT
//s.addParam(createParam("algorithm.provider","---")); // i don't know any valid	WITHOUT_CLASSIFICATION	0.9999682198504358	WITHOUT_CLASSIFICATION	3.178014956408694E-5	DEFECT
// first and second run	WITHOUT_CLASSIFICATION	0.9999993696859489	WITHOUT_CLASSIFICATION	6.303140510301894E-7	DEFECT
// make dirty	WITHOUT_CLASSIFICATION	0.9999949839417517	WITHOUT_CLASSIFICATION	5.016058248302703E-6	DEFECT
// third run	WITHOUT_CLASSIFICATION	0.9999956683361261	WITHOUT_CLASSIFICATION	4.3316638738926305E-6	DEFECT
// the directories to check	WITHOUT_CLASSIFICATION	0.9999998806070085	WITHOUT_CLASSIFICATION	1.1939299146398563E-7	DEFECT
// do the checks	WITHOUT_CLASSIFICATION	0.9999994552137658	WITHOUT_CLASSIFICATION	5.447862341506212E-7	DEFECT
//class-MockProject	WITHOUT_CLASSIFICATION	0.9999717424929606	WITHOUT_CLASSIFICATION	2.8257507039489195E-5	DEFECT
//class-ModifiedSelectorTest	WITHOUT_CLASSIFICATION	0.9999999488787343	WITHOUT_CLASSIFICATION	5.112126572272583E-8	DEFECT
// First read in zero bytes	WITHOUT_CLASSIFICATION	0.9999996309563973	WITHOUT_CLASSIFICATION	3.690436027366511E-7	DEFECT
// Now read in the string	WITHOUT_CLASSIFICATION	0.9999995629744067	WITHOUT_CLASSIFICATION	4.3702559334990586E-7	DEFECT
// Make sure that the counts are the same	WITHOUT_CLASSIFICATION	0.9999998787591274	WITHOUT_CLASSIFICATION	1.2124087258341377E-7	DEFECT
// LineOrientedOutputStreamTest	WITHOUT_CLASSIFICATION	0.9999999833358193	WITHOUT_CLASSIFICATION	1.6664180667298664E-8	DEFECT
// make sure that elapsed time in set via date works	WITHOUT_CLASSIFICATION	0.9999998875781956	WITHOUT_CLASSIFICATION	1.124218044641531E-7	DEFECT
// make sure that elapsed time in ms works	WITHOUT_CLASSIFICATION	0.9999977697394702	WITHOUT_CLASSIFICATION	2.2302605298936044E-6	DEFECT
// should be new moon	WITHOUT_CLASSIFICATION	0.999996521809049	WITHOUT_CLASSIFICATION	3.478190951117385E-6	DEFECT
// Try a silly case	WITHOUT_CLASSIFICATION	0.9999949474939309	WITHOUT_CLASSIFICATION	5.052506069100116E-6	DEFECT
// and a little longer	WITHOUT_CLASSIFICATION	0.9999997651378936	WITHOUT_CLASSIFICATION	2.348621065651071E-7	DEFECT
/*             * throw in drive letters             */	WITHOUT_CLASSIFICATION	0.9999779786471461	WITHOUT_CLASSIFICATION	2.2021352853897605E-5	DEFECT
/*             * promised to eliminate consecutive slashes after drive letter.             */	WITHOUT_CLASSIFICATION	0.9999998350530251	WITHOUT_CLASSIFICATION	1.6494697480545712E-7	DEFECT
/*             * Start with simple absolute file names.             */	WITHOUT_CLASSIFICATION	0.9999999871993056	WITHOUT_CLASSIFICATION	1.2800694332405806E-8	DEFECT
/*             * Start with simple absolute file names.             */	WITHOUT_CLASSIFICATION	0.9999999871993056	WITHOUT_CLASSIFICATION	1.2800694332405806E-8	DEFECT
/*         * Now test some relative file name magic.         */	WITHOUT_CLASSIFICATION	0.9999998134000975	WITHOUT_CLASSIFICATION	1.8659990257110255E-7	DEFECT
/*         * Now test some relative file name magic.         */	WITHOUT_CLASSIFICATION	0.9999998134000975	WITHOUT_CLASSIFICATION	1.8659990257110255E-7	DEFECT
// implies lastModified == 0	WITHOUT_CLASSIFICATION	0.9999999904389599	WITHOUT_CLASSIFICATION	9.56104003265516E-9	DEFECT
/* ============ FileNameMapper interface ======================= */	WITHOUT_CLASSIFICATION	0.9999991686244353	WITHOUT_CLASSIFICATION	8.313755647692093E-7	DEFECT
// Windows adds the drive letter in uppercase, unless you run Cygwin	WITHOUT_CLASSIFICATION	0.9998531587091805	WITHOUT_CLASSIFICATION	1.4684129081963886E-4	DEFECT
/*         * Sleep for some time to make sure a touched file would get a         * more recent timestamp according to the file system's         * granularity (should be > 2s to account for Windows FAT).         */	WITHOUT_CLASSIFICATION	0.9998730496524582	WITHOUT_CLASSIFICATION	1.2695034754190557E-4	DEFECT
// number of milliseconds in a day	WITHOUT_CLASSIFICATION	0.999957237872551	WITHOUT_CLASSIFICATION	4.2762127448955023E-5	DEFECT
// in a previous version, the date of the file was set to 123456 // milliseconds since 01.01.1970 // it did not work on a computer running JDK 1.4.1_02 + Windows 2000	WITHOUT_CLASSIFICATION	0.9974224507752629	WITHOUT_CLASSIFICATION	0.0025775492247370082	DEFECT
/*         * I would love to compare this with 123456, but depending on         * the filesystems granularity it can take an arbitrary value.         *         * Just assert the time has changed.         */	WITHOUT_CLASSIFICATION	0.999971544902392	WITHOUT_CLASSIFICATION	2.8455097608036956E-5	DEFECT
/*             * throw in NetWare volume names             */	WITHOUT_CLASSIFICATION	0.9999988285710444	WITHOUT_CLASSIFICATION	1.1714289556113854E-6	DEFECT
/*             * throw in NetWare volume names             */	WITHOUT_CLASSIFICATION	0.9999988285710444	WITHOUT_CLASSIFICATION	1.1714289556113854E-6	DEFECT
/*             * drive letters must be considered just normal filenames.             */	WITHOUT_CLASSIFICATION	0.9999999875051362	WITHOUT_CLASSIFICATION	1.2494863794955762E-8	DEFECT
// Passed test 	WITHOUT_CLASSIFICATION	0.9999999617775894	WITHOUT_CLASSIFICATION	3.822241060442875E-8	DEFECT
// Expected exception caught	WITHOUT_CLASSIFICATION	0.9999934030263946	WITHOUT_CLASSIFICATION	6.596973605425013E-6	DEFECT
// Expected exception caught	WITHOUT_CLASSIFICATION	0.9999934030263946	WITHOUT_CLASSIFICATION	6.596973605425013E-6	DEFECT
// null parent dir	WITHOUT_CLASSIFICATION	0.9999950769679771	WITHOUT_CLASSIFICATION	4.9230320230267806E-6	DEFECT
//preserve case on Cygwin when using 1.4 toURI:	WITHOUT_CLASSIFICATION	0.9999985208631748	WITHOUT_CLASSIFICATION	1.4791368253395635E-6	DEFECT
// OK, Java 1.3.	WITHOUT_CLASSIFICATION	0.9999995313084037	WITHOUT_CLASSIFICATION	4.6869159625844194E-7	DEFECT
//get a time	WITHOUT_CLASSIFICATION	0.9999990993676833	WITHOUT_CLASSIFICATION	9.006323166559127E-7	DEFECT
//add some time. We assume no OS has a granularity this bad	WITHOUT_CLASSIFICATION	0.9999958425570982	WITHOUT_CLASSIFICATION	4.157442901833874E-6	DEFECT
/*        assertTrue("same timestamp is up to date",                fu.isUpToDate(firstTime, firstTime));                */	WITHOUT_CLASSIFICATION	0.9999999748504719	WITHOUT_CLASSIFICATION	2.514952807072502E-8	DEFECT
//check that older is up to date with a newer dest	WITHOUT_CLASSIFICATION	0.9999996012056765	WITHOUT_CLASSIFICATION	3.9879432350096715E-7	DEFECT
//check that older is up to date with a newer dest	WITHOUT_CLASSIFICATION	0.9999996012056765	WITHOUT_CLASSIFICATION	3.9879432350096715E-7	DEFECT
// This just tests that the function does not blow up	WITHOUT_CLASSIFICATION	0.999999668101407	WITHOUT_CLASSIFICATION	3.318985930982131E-7	DEFECT
// java.home is bogus	WITHOUT_CLASSIFICATION	0.9999996324132474	WITHOUT_CLASSIFICATION	3.6758675258158325E-7	DEFECT
// could still be OS/2	WITHOUT_CLASSIFICATION	0.9999957235161112	WITHOUT_CLASSIFICATION	4.276483888795858E-6	DEFECT
// 27224 = magic (a random port which is unlikely to be in use)	WITHOUT_CLASSIFICATION	0.9999973478691736	WITHOUT_CLASSIFICATION	2.6521308263629454E-6	DEFECT
// order of headers cannot be guaranteed	WITHOUT_CLASSIFICATION	0.9999975598905666	WITHOUT_CLASSIFICATION	2.4401094334744464E-6	DEFECT
// state engine: false=envelope, true=message	WITHOUT_CLASSIFICATION	0.9999993730871889	WITHOUT_CLASSIFICATION	6.269128112159895E-7	DEFECT
// make sure there are no issues concerning line separator interpretation // a line separator for regex (perl) is always a unix line (ie \n)	WITHOUT_CLASSIFICATION	0.9999993951220343	WITHOUT_CLASSIFICATION	6.048779657105579E-7	DEFECT
// sb.append( response + "\r\n" );	WITHOUT_CLASSIFICATION	0.9999995907337894	WITHOUT_CLASSIFICATION	4.092662106819391E-7	DEFECT
// 60s // a further 30s	WITHOUT_CLASSIFICATION	0.9999999410833292	WITHOUT_CLASSIFICATION	5.891667082442101E-8	DEFECT
// 60s // a further 30s	WITHOUT_CLASSIFICATION	0.9999999410833292	WITHOUT_CLASSIFICATION	5.891667082442101E-8	DEFECT
// 60s // a further 30s	WITHOUT_CLASSIFICATION	0.9999999410833292	WITHOUT_CLASSIFICATION	5.891667082442101E-8	DEFECT
// 60s // a further 30s	WITHOUT_CLASSIFICATION	0.9999999410833292	WITHOUT_CLASSIFICATION	5.891667082442101E-8	DEFECT
// wait for connection	WITHOUT_CLASSIFICATION	0.9999847950559357	WITHOUT_CLASSIFICATION	1.520494406425618E-5	DEFECT
//throw new IllegalStateException("Command unrecognized: " //    + response);	WITHOUT_CLASSIFICATION	0.9999989877347768	WITHOUT_CLASSIFICATION	1.012265223246247E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999229243365	WITHOUT_CLASSIFICATION	7.707566353111588E-8	DEFECT
// while	WITHOUT_CLASSIFICATION	0.999999520627474	WITHOUT_CLASSIFICATION	4.793725260133753E-7	DEFECT
// CRC manually calculated, sorry // CRC // mode // link length // uid, gid	WITHOUT_CLASSIFICATION	0.9999994106211639	WITHOUT_CLASSIFICATION	5.89378836100721E-7	DEFECT
// CRC manually calculated, sorry // CRC // mode // link length // uid, gid	WITHOUT_CLASSIFICATION	0.9999994106211639	WITHOUT_CLASSIFICATION	5.89378836100721E-7	DEFECT
// CRC // mode // link length // uid, gid	WITHOUT_CLASSIFICATION	0.9999966963015573	WITHOUT_CLASSIFICATION	3.3036984427844396E-6	DEFECT
// CRC // mode // link length // uid, gid	WITHOUT_CLASSIFICATION	0.9999966963015573	WITHOUT_CLASSIFICATION	3.3036984427844396E-6	DEFECT
// CRC // mode // link // uid, gid	WITHOUT_CLASSIFICATION	0.999991241054162	WITHOUT_CLASSIFICATION	8.758945838079357E-6	DEFECT
// bad CRC // mode // link // uid, gid	WITHOUT_CLASSIFICATION	0.9999877081408235	WITHOUT_CLASSIFICATION	1.2291859176410191E-5	DEFECT
//if we got here, all was well	WITHOUT_CLASSIFICATION	0.9999986546901014	WITHOUT_CLASSIFICATION	1.3453098985734076E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999997594604898	WITHOUT_CLASSIFICATION	2.4053951019376697E-7	DEFECT
// CheckStyle:ConstantNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9999986578546028	WITHOUT_CLASSIFICATION	1.3421453971226684E-6	DEFECT
// CheckStyle:ConstantNameCheck ON	WITHOUT_CLASSIFICATION	0.9999991979337849	WITHOUT_CLASSIFICATION	8.020662149637047E-7	DEFECT
// Filter out messages based on priority	WITHOUT_CLASSIFICATION	0.9999851626817913	WITHOUT_CLASSIFICATION	1.4837318208837315E-5	DEFECT
// Print out the name of the task if we're in one	WITHOUT_CLASSIFICATION	0.9999999971530352	WITHOUT_CLASSIFICATION	2.846964811723176E-9	DEFECT
// shouldn't be possible	WITHOUT_CLASSIFICATION	0.9999283288549511	WITHOUT_CLASSIFICATION	7.167114504887878E-5	DEFECT
// Set up PRIMITIVE_TYPE_MAP	WITHOUT_CLASSIFICATION	0.999999925404506	WITHOUT_CLASSIFICATION	7.459549395993139E-8	DEFECT
// check of add[Configured](Class) pattern	WITHOUT_CLASSIFICATION	0.9999999487569363	WITHOUT_CLASSIFICATION	5.124306361283013E-8	DEFECT
// not really user settable properties on tasks/project components	WITHOUT_CLASSIFICATION	0.9999963159520757	WITHOUT_CLASSIFICATION	3.6840479242289843E-6	DEFECT
// hide addTask for TaskContainers	WITHOUT_CLASSIFICATION	0.9999999905924143	WITHOUT_CLASSIFICATION	9.407585766633158E-9	DEFECT
// use wrappers for primitive classes, e.g. int and // Integer are treated identically	WITHOUT_CLASSIFICATION	0.9999951388030083	WITHOUT_CLASSIFICATION	4.861196991676002E-6	DEFECT
// Check if a create of this property is already present // add takes preference over create for CB purposes	WITHOUT_CLASSIFICATION	0.9999999826338127	WITHOUT_CLASSIFICATION	1.73661872762767E-8	DEFECT
/*                         *  Ignore this method as there is an addConfigured                         *  form of this method that has a higher                         *  priority                         */	WITHOUT_CLASSIFICATION	0.9999999868614229	WITHOUT_CLASSIFICATION	1.3138577167797662E-8	DEFECT
// If a helper cannot be found, or if the helper is for another // classloader, create a new IH	WITHOUT_CLASSIFICATION	0.9999910096220367	WITHOUT_CLASSIFICATION	8.99037796331292E-6	DEFECT
// Ignore attribute from unknown uri's	WITHOUT_CLASSIFICATION	0.9999997486548291	WITHOUT_CLASSIFICATION	2.5134517093140864E-7	DEFECT
// impossible as getMethods should only return public methods	WITHOUT_CLASSIFICATION	0.9999993269245585	WITHOUT_CLASSIFICATION	6.730754414627587E-7	DEFECT
// impossible as getMethods should only return public methods	WITHOUT_CLASSIFICATION	0.9999993269245585	WITHOUT_CLASSIFICATION	6.730754414627587E-7	DEFECT
// impossible as getMethods should only return public methods	WITHOUT_CLASSIFICATION	0.9999993269245585	WITHOUT_CLASSIFICATION	6.730754414627587E-7	DEFECT
// Element doesn't handle text content	WITHOUT_CLASSIFICATION	0.9999999269110289	WITHOUT_CLASSIFICATION	7.308897107132702E-8	DEFECT
// Not whitespace - fail	WITHOUT_CLASSIFICATION	0.9999939056176371	WITHOUT_CLASSIFICATION	6.09438236292585E-6	DEFECT
// Only whitespace - ignore	WITHOUT_CLASSIFICATION	0.9999999851715962	WITHOUT_CLASSIFICATION	1.4828403803418686E-8	DEFECT
// Class doesn't have a String constructor but a decent factory method	WITHOUT_CLASSIFICATION	0.9999986084982501	WITHOUT_CLASSIFICATION	1.3915017499262007E-6	DEFECT
// char and Character get special treatment - take the first character	WITHOUT_CLASSIFICATION	0.9999999935296033	WITHOUT_CLASSIFICATION	6.4703966249909784E-9	DEFECT
// simplest case - setAttribute expects String	WITHOUT_CLASSIFICATION	0.9999996884534714	WITHOUT_CLASSIFICATION	3.1154652853153203E-7	DEFECT
// First try with Project.	WITHOUT_CLASSIFICATION	0.9999972957003921	WITHOUT_CLASSIFICATION	2.7042996079125624E-6	DEFECT
// EnumeratedAttributes have their own helper class	WITHOUT_CLASSIFICATION	0.9999982432293164	WITHOUT_CLASSIFICATION	1.7567706836310043E-6	DEFECT
// resolve relative paths through Project	WITHOUT_CLASSIFICATION	0.9999930039219104	WITHOUT_CLASSIFICATION	6.996078089533594E-6	DEFECT
/** Version to use for addXXX and addConfiguredXXX */	WITHOUT_CLASSIFICATION	0.9977301579169603	WITHOUT_CLASSIFICATION	0.0022698420830396335	DEFECT
// Well, no matching constructor.	WITHOUT_CLASSIFICATION	0.9999999976024457	WITHOUT_CLASSIFICATION	2.397554183714855E-9	DEFECT
// OK, try without.	WITHOUT_CLASSIFICATION	0.9999964895599385	WITHOUT_CLASSIFICATION	3.5104400614088495E-6	DEFECT
// the method called to add/create the nested element	WITHOUT_CLASSIFICATION	0.9999998297375887	WITHOUT_CLASSIFICATION	1.7026241124383493E-7	DEFECT
// DO NOTHING	WITHOUT_CLASSIFICATION	0.9999984674919474	WITHOUT_CLASSIFICATION	1.532508052564177E-6	DEFECT
// ADD or ADD_CONFIGURED	WITHOUT_CLASSIFICATION	0.9999997260098406	WITHOUT_CLASSIFICATION	2.7399015951945246E-7	DEFECT
// the method called to set the attribute	WITHOUT_CLASSIFICATION	0.9999998404966399	WITHOUT_CLASSIFICATION	1.5950336006718605E-7	DEFECT
// add configured replaces the add method	WITHOUT_CLASSIFICATION	0.9999999086377488	WITHOUT_CLASSIFICATION	9.136225127183656E-8	DEFECT
// maintain a sorted list of targets	WITHOUT_CLASSIFICATION	0.9999999966317027	WITHOUT_CLASSIFICATION	3.368297277584135E-9	DEFECT
// worst case. look for a public String constructor and use it // also supports new Whatever(Project, String) as for Path or Reference // This is used (deliberately) for all primitives/wrappers other than // char and boolean	WITHOUT_CLASSIFICATION	0.9999999999902452	WITHOUT_CLASSIFICATION	9.754829362893327E-12	DEFECT
// Already present	WITHOUT_CLASSIFICATION	0.9999992652232104	WITHOUT_CLASSIFICATION	7.347767895980374E-7	DEFECT
// higher derived	WITHOUT_CLASSIFICATION	0.9999995635946354	WITHOUT_CLASSIFICATION	4.3640536466027276E-7	DEFECT
// print the stacktrace in the build file it is always useful... // better have too much info than not enough.	WITHOUT_CLASSIFICATION	0.999938224280844	WITHOUT_CLASSIFICATION	6.177571915606627E-5	DEFECT
// specify output in UTF8 otherwise accented characters will blow // up everything	WITHOUT_CLASSIFICATION	0.9999999996795802	WITHOUT_CLASSIFICATION	3.20419817831821E-10	DEFECT
/* For debugging purposes uncomment:        org.w3c.dom.Comment s = doc.createComment("stack=" + threadStack);        buildElement.element.appendChild(s);         */	WITHOUT_CLASSIFICATION	0.9999955415849614	WITHOUT_CLASSIFICATION	4.458415038677517E-6	DEFECT
// -------------------------------------------------- BuildLogger interface	WITHOUT_CLASSIFICATION	0.9999962668837215	WITHOUT_CLASSIFICATION	3.7331162784486177E-6	DEFECT
// Shouldn't happen	WITHOUT_CLASSIFICATION	0.9998795647600177	WITHOUT_CLASSIFICATION	1.2043523998222719E-4	DEFECT
// LF is always end of line (i.e. CRLF or single LF)	WITHOUT_CLASSIFICATION	0.9999954807244807	WITHOUT_CLASSIFICATION	4.519275519160557E-6	DEFECT
// CR without LF - send buffer then add char	WITHOUT_CLASSIFICATION	0.9999997675923518	WITHOUT_CLASSIFICATION	2.3240764810476333E-7	DEFECT
// add into buffer	WITHOUT_CLASSIFICATION	0.9999998267020946	WITHOUT_CLASSIFICATION	1.7329790537655974E-7	DEFECT
// either end of buffer or a line separator char	WITHOUT_CLASSIFICATION	0.9999999149377357	WITHOUT_CLASSIFICATION	8.50622643767607E-8	DEFECT
// check adapter	WITHOUT_CLASSIFICATION	0.9999999830041062	WITHOUT_CLASSIFICATION	1.6995893876563706E-8	DEFECT
//can throw the same exception, if there is no this(Project) ctor.	WITHOUT_CLASSIFICATION	0.9999986217966867	WITHOUT_CLASSIFICATION	1.3782033132196586E-6	DEFECT
//now we instantiate	WITHOUT_CLASSIFICATION	0.999999589892587	WITHOUT_CLASSIFICATION	4.1010741299987374E-7	DEFECT
//set up project references.	WITHOUT_CLASSIFICATION	0.9999998999193654	WITHOUT_CLASSIFICATION	1.0008063447000322E-7	DEFECT
/** Our current message output status. Follows Project.MSG_XXX. */	WITHOUT_CLASSIFICATION	0.9999417166159217	WITHOUT_CLASSIFICATION	5.82833840782787E-5	DEFECT
/* null */	WITHOUT_CLASSIFICATION	0.9999779858964578	WITHOUT_CLASSIFICATION	2.201410354214932E-5	DEFECT
// expect the worst	WITHOUT_CLASSIFICATION	0.9999955753721975	WITHOUT_CLASSIFICATION	4.4246278024154966E-6	DEFECT
//this is the list of lu	WITHOUT_CLASSIFICATION	0.9999986438352139	WITHOUT_CLASSIFICATION	1.3561647861739134E-6	DEFECT
// cycle through given args	WITHOUT_CLASSIFICATION	0.9999988219900424	WITHOUT_CLASSIFICATION	1.178009957604098E-6	DEFECT
// set the flag to display the targets and quit	WITHOUT_CLASSIFICATION	0.9999998489058979	WITHOUT_CLASSIFICATION	1.5109410208154658E-7	DEFECT
// eat up next arg if present, default to build.xml	WITHOUT_CLASSIFICATION	0.999999830029846	WITHOUT_CLASSIFICATION	1.6997015396218893E-7	DEFECT
// we don't have any more args to recognize!	WITHOUT_CLASSIFICATION	0.9996135643436732	WITHOUT_CLASSIFICATION	3.864356563267351E-4	DEFECT
// if it's no other arg, it may be the target	WITHOUT_CLASSIFICATION	0.9999999919017789	WITHOUT_CLASSIFICATION	8.098221072379387E-9	DEFECT
// if buildFile was not specified on the command line,	WITHOUT_CLASSIFICATION	0.9999946591409384	WITHOUT_CLASSIFICATION	5.3408590615290166E-6	DEFECT
// but -find then search for it	WITHOUT_CLASSIFICATION	0.9999998710966612	WITHOUT_CLASSIFICATION	1.2890333879743206E-7	DEFECT
// make sure buildfile exists	WITHOUT_CLASSIFICATION	0.999999674194934	WITHOUT_CLASSIFICATION	3.2580506605316865E-7	DEFECT
// make sure it's not a directory (this falls into the ultra // paranoid lets check everything category	WITHOUT_CLASSIFICATION	0.9999963703175443	WITHOUT_CLASSIFICATION	3.6296824557316617E-6	DEFECT
// Load the property files specified by -propertyfile	WITHOUT_CLASSIFICATION	0.9999993333305112	WITHOUT_CLASSIFICATION	6.666694888026185E-7	DEFECT
// ensure that -D properties take precedence	WITHOUT_CLASSIFICATION	0.9999981996745403	WITHOUT_CLASSIFICATION	1.8003254596270645E-6	DEFECT
// check if the target file exists in the current directory	WITHOUT_CLASSIFICATION	0.9999999880584781	WITHOUT_CLASSIFICATION	1.1941522003600923E-8	DEFECT
// change to parent directory	WITHOUT_CLASSIFICATION	0.9999992269509214	WITHOUT_CLASSIFICATION	7.730490785977172E-7	DEFECT
// refresh our file handle	WITHOUT_CLASSIFICATION	0.9999999652503687	WITHOUT_CLASSIFICATION	3.4749631254800615E-8	DEFECT
// use a system manager that prevents from System.exit()	WITHOUT_CLASSIFICATION	0.9999965886474139	WITHOUT_CLASSIFICATION	3.411352586081328E-6	DEFECT
//SecurityManager can not be installed here for backwards //compatibility reasons (PD). Needs to be loaded prior to //ant class if we are going to implement it. //System.setSecurityManager(new NoExitSecurityManager());	WITHOUT_CLASSIFICATION	0.9999998081232011	WITHOUT_CLASSIFICATION	1.9187679895242632E-7	DEFECT
// set the thread priorities	WITHOUT_CLASSIFICATION	0.9999999247009291	WITHOUT_CLASSIFICATION	7.529907077846847E-8	DEFECT
//we cannot set the priority here.	WITHOUT_CLASSIFICATION	0.9989393202175173	WITHOUT_CLASSIFICATION	0.0010606797824827508	DEFECT
// set user-define properties	WITHOUT_CLASSIFICATION	0.9999999885541357	WITHOUT_CLASSIFICATION	1.1445864264012455E-8	DEFECT
//proxy setup if enabled	WITHOUT_CLASSIFICATION	0.9999998914422479	WITHOUT_CLASSIFICATION	1.0855775215430252E-7	DEFECT
// make sure that we have a target to execute	WITHOUT_CLASSIFICATION	0.9999999449866039	WITHOUT_CLASSIFICATION	5.501339609889577E-8	DEFECT
// Add the default listener	WITHOUT_CLASSIFICATION	0.9999999969447154	WITHOUT_CLASSIFICATION	3.055284676011844E-9	DEFECT
// find the target with the longest name	WITHOUT_CLASSIFICATION	0.9999999976938657	WITHOUT_CLASSIFICATION	2.3061341748679496E-9	DEFECT
// split the targets in top-level and sub-targets depending // on the presence of a description	WITHOUT_CLASSIFICATION	0.9999999726926733	WITHOUT_CLASSIFICATION	2.7307326757206495E-8	DEFECT
// shouldn't need to check but...	WITHOUT_CLASSIFICATION	0.9980587055992463	WITHOUT_CLASSIFICATION	0.001941294400753788	DEFECT
// now, start printing the targets and their descriptions	WITHOUT_CLASSIFICATION	0.9999999967140637	WITHOUT_CLASSIFICATION	3.285936340752787E-9	DEFECT
// got a bit annoyed that I couldn't find a pad function	WITHOUT_CLASSIFICATION	0.9996611022892696	WITHOUT_CLASSIFICATION	3.3889771073042097E-4	DEFECT
/*<String,String>*/	WITHOUT_CLASSIFICATION	0.9999443457895831	WITHOUT_CLASSIFICATION	5.565421041679438E-5	DEFECT
//At least one constructor is guaranteed to be there, but check anyway.	WITHOUT_CLASSIFICATION	0.999999788742399	WITHOUT_CLASSIFICATION	2.11257601069819E-7	DEFECT
// is the zip file in the cache	WITHOUT_CLASSIFICATION	0.9999999326041769	WITHOUT_CLASSIFICATION	6.739582312386464E-8	DEFECT
// store the token just read for next time	WITHOUT_CLASSIFICATION	0.9999990200879284	WITHOUT_CLASSIFICATION	9.799120715048725E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999999198791225	WITHOUT_CLASSIFICATION	8.012087743264267E-8	DEFECT
// add the types of the parent project	WITHOUT_CLASSIFICATION	0.9999820874972526	WITHOUT_CLASSIFICATION	1.7912502747411692E-5	DEFECT
// ignore path elements which are not valid relative to the // project	WITHOUT_CLASSIFICATION	0.9999999439196379	WITHOUT_CLASSIFICATION	5.608036217234532E-8	DEFECT
// Expecting an exception to be thrown by this call: // IllegalArgumentException: wrong number of Arguments	WITHOUT_CLASSIFICATION	0.9963577243598659	WITHOUT_CLASSIFICATION	0.0036422756401342255	DEFECT
// we need to search the components of the path to see if we can // find the class we want.	WITHOUT_CLASSIFICATION	0.9999999575679666	WITHOUT_CLASSIFICATION	4.243203342864659E-8	DEFECT
// default to the global setting and then see // if this class belongs to a package which has been // designated to use a specific loader first // (this one or the parent one)	WITHOUT_CLASSIFICATION	0.9999999999456138	WITHOUT_CLASSIFICATION	5.4386095553945466E-11	DEFECT
// we need to search the components of the path to see if // we can find the class we want.	WITHOUT_CLASSIFICATION	0.9999999676460992	WITHOUT_CLASSIFICATION	3.23539008679969E-8	DEFECT
// try and load from this loader if the parent either didn't find // it or wasn't consulted.	WITHOUT_CLASSIFICATION	0.9999994907013701	WITHOUT_CLASSIFICATION	5.092986300354894E-7	DEFECT
// this loader was first but it didn't find it - try the parent	WITHOUT_CLASSIFICATION	0.9999568984596111	WITHOUT_CLASSIFICATION	4.310154038880745E-5	DEFECT
/*<URL>*/	WITHOUT_CLASSIFICATION	0.9998700420118308	WITHOUT_CLASSIFICATION	1.299579881692043E-4	DEFECT
/*<URL>*/	WITHOUT_CLASSIFICATION	0.9998700420118308	WITHOUT_CLASSIFICATION	1.299579881692043E-4	DEFECT
/*<URL>*/	WITHOUT_CLASSIFICATION	0.9998700420118308	WITHOUT_CLASSIFICATION	1.299579881692043E-4	DEFECT
// Delegate to the parent:	WITHOUT_CLASSIFICATION	0.9999992714993368	WITHOUT_CLASSIFICATION	7.28500663247715E-7	DEFECT
// Note: could cause overlaps in case ClassLoader.this.parent has matches.	WITHOUT_CLASSIFICATION	0.9999999086674484	WITHOUT_CLASSIFICATION	9.133255161275741E-8	DEFECT
// ClassLoader.this.parent is already delegated to from // ClassLoader.getResources, no need:	WITHOUT_CLASSIFICATION	0.9999999978234011	WITHOUT_CLASSIFICATION	2.176598808616958E-9	DEFECT
// Normal case.	WITHOUT_CLASSIFICATION	0.9999999323426938	WITHOUT_CLASSIFICATION	6.765730625490208E-8	DEFECT
// Inverted.	WITHOUT_CLASSIFICATION	0.9999993270336847	WITHOUT_CLASSIFICATION	6.729663153197553E-7	DEFECT
// already defined	WITHOUT_CLASSIFICATION	0.9999999867655043	WITHOUT_CLASSIFICATION	1.3234495622250917E-8	DEFECT
// define the package now	WITHOUT_CLASSIFICATION	0.9999999486934881	WITHOUT_CLASSIFICATION	5.1306511868132E-8	DEFECT
// ioe.printStackTrace();	WITHOUT_CLASSIFICATION	0.999999943642446	WITHOUT_CLASSIFICATION	5.63575540482296E-8	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9999976685470136	WITHOUT_CLASSIFICATION	2.331452986425402E-6	DEFECT
// Not significant for the class loader.	WITHOUT_CLASSIFICATION	0.9999997255871773	WITHOUT_CLASSIFICATION	2.744128226555321E-7	DEFECT
// Not significant for the class loader.	WITHOUT_CLASSIFICATION	0.9999997255871773	WITHOUT_CLASSIFICATION	2.744128226555321E-7	DEFECT
// {tasks, types}	WITHOUT_CLASSIFICATION	0.9999982042892763	WITHOUT_CLASSIFICATION	1.7957107235957116E-6	DEFECT
// add the parsed namespaces of the parent project	WITHOUT_CLASSIFICATION	0.9999973708806532	WITHOUT_CLASSIFICATION	2.629119346755246E-6	DEFECT
// we need to search the components of the path to see if // we can find the class we want.	WITHOUT_CLASSIFICATION	0.9999999676460992	WITHOUT_CLASSIFICATION	3.23539008679969E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999229243365	WITHOUT_CLASSIFICATION	7.707566353111588E-8	DEFECT
// don't have to check for public, since // getConstructor finds public constructors only.	WITHOUT_CLASSIFICATION	0.9999998842976331	WITHOUT_CLASSIFICATION	1.1570236702294548E-7	DEFECT
// set default value, can be changed by the user	WITHOUT_CLASSIFICATION	0.9999999988150323	WITHOUT_CLASSIFICATION	1.1849676405561015E-9	DEFECT
//too bad	WITHOUT_CLASSIFICATION	0.9999939078405764	WITHOUT_CLASSIFICATION	6.092159423689853E-6	DEFECT
//must have same validity; then if they are valid they must also be the same:	WITHOUT_CLASSIFICATION	0.9999995861786277	WITHOUT_CLASSIFICATION	4.1382137225460824E-7	DEFECT
// namespace that does not contain antlib	WITHOUT_CLASSIFICATION	0.9999978164488237	WITHOUT_CLASSIFICATION	2.1835511762762395E-6	DEFECT
// Already processed	WITHOUT_CLASSIFICATION	0.9999998832267458	WITHOUT_CLASSIFICATION	1.1677325414568823E-7	DEFECT
//there to stop error messages being "null"	WITHOUT_CLASSIFICATION	0.9999998365576563	WITHOUT_CLASSIFICATION	1.6344234369697663E-7	DEFECT
//if this is left out, bad things happen. like all build files break //on the first element encountered.	WITHOUT_CLASSIFICATION	0.9996077073718681	WITHOUT_CLASSIFICATION	3.922926281319071E-4	DEFECT
// a fishing expedition :- ignore errors if antlib not present	WITHOUT_CLASSIFICATION	0.9999238006716569	WITHOUT_CLASSIFICATION	7.619932834316538E-5	DEFECT
//class of problem	WITHOUT_CLASSIFICATION	0.9999898733333012	WITHOUT_CLASSIFICATION	1.0126666698635276E-5	DEFECT
//running under an IDE that doesn't set ANT_HOME	WITHOUT_CLASSIFICATION	0.9999980325330783	WITHOUT_CLASSIFICATION	1.967466921647141E-6	DEFECT
//look up the name	WITHOUT_CLASSIFICATION	0.9999994133022656	WITHOUT_CLASSIFICATION	5.866977343270684E-7	DEFECT
//we are defined, so it is an instantiation problem	WITHOUT_CLASSIFICATION	0.9999998796606842	WITHOUT_CLASSIFICATION	1.2033931583936344E-7	DEFECT
//start with instantiating the class.	WITHOUT_CLASSIFICATION	0.9999963372344609	WITHOUT_CLASSIFICATION	3.6627655389597375E-6	DEFECT
//here we successfully loaded the class or failed.	WITHOUT_CLASSIFICATION	0.9999928299472284	WITHOUT_CLASSIFICATION	7.17005277165618E-6	DEFECT
//success: proceed with more steps	WITHOUT_CLASSIFICATION	0.9999901156522086	WITHOUT_CLASSIFICATION	9.884347791345965E-6	DEFECT
//hey, there is nothing wrong with us	WITHOUT_CLASSIFICATION	0.9998790123742066	WITHOUT_CLASSIFICATION	1.2098762579337271E-4	DEFECT
/*<Thread,Task>*/	WITHOUT_CLASSIFICATION	0.9999942652163606	WITHOUT_CLASSIFICATION	5.734783639406829E-6	DEFECT
/*<ThreadGroup,Task>*/	WITHOUT_CLASSIFICATION	0.9999968380187038	WITHOUT_CLASSIFICATION	3.1619812962128974E-6	DEFECT
// If the listeners already has this listener, do nothing	WITHOUT_CLASSIFICATION	0.9999999614134932	WITHOUT_CLASSIFICATION	3.858650668399938E-8	DEFECT
// we need to build the hashtable dynamically	WITHOUT_CLASSIFICATION	0.9999963775947783	WITHOUT_CLASSIFICATION	3.6224052215984326E-6	DEFECT
// sanity check	WITHOUT_CLASSIFICATION	0.9999998594373642	WITHOUT_CLASSIFICATION	1.4056263581156433E-7	DEFECT
//try the current classloader	WITHOUT_CLASSIFICATION	0.9999993925338868	WITHOUT_CLASSIFICATION	6.074661130840608E-7	DEFECT
// throw further	WITHOUT_CLASSIFICATION	0.9999967921840899	WITHOUT_CLASSIFICATION	3.207815910145976E-6	DEFECT
// only the first build exception is reported	WITHOUT_CLASSIFICATION	0.9999951361702119	WITHOUT_CLASSIFICATION	4.863829788092628E-6	DEFECT
// Make sure we exist	WITHOUT_CLASSIFICATION	0.9999998047151208	WITHOUT_CLASSIFICATION	1.9528487906536718E-7	DEFECT
// Currently visiting this node, so have a cycle	WITHOUT_CLASSIFICATION	0.9999982334584007	WITHOUT_CLASSIFICATION	1.7665415993003377E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999229243365	WITHOUT_CLASSIFICATION	7.707566353111588E-8	DEFECT
// create a new Vector to avoid ConcurrentModificationExc when // the listeners get added/removed while we are in fire	WITHOUT_CLASSIFICATION	0.9999999981734243	WITHOUT_CLASSIFICATION	1.8265756955353433E-9	DEFECT
// sanity check ourselves, if we've been asked to build nothing // then we should complain	WITHOUT_CLASSIFICATION	0.9999999958101661	WITHOUT_CLASSIFICATION	4.189833885614513E-9	DEFECT
// Sort and run the dependency tree. // Sorting checks if all the targets (and dependencies) // exist, and if there is any cycle in the dependency // graph.	WITHOUT_CLASSIFICATION	0.9999999857832207	WITHOUT_CLASSIFICATION	1.421677931439754E-8	DEFECT
// We first run a DFS based sort using each root as a starting node. // This creates the minimum sequence of Targets to the root node(s). // We then do a sort on any remaining unVISITED targets. // This is unnecessary for doing our build, but it catches // circular dependencies or missing Targets on the entire // dependency tree, not just on the Targets that depend on the // build Target.	WITHOUT_CLASSIFICATION	0.9999999999988861	WITHOUT_CLASSIFICATION	1.1138219548156825E-12	DEFECT
// no warning, this is not changing anything	WITHOUT_CLASSIFICATION	0.9999665558349456	WITHOUT_CLASSIFICATION	3.344416505438228E-5	DEFECT
// Check for old id behaviour	WITHOUT_CLASSIFICATION	0.999999609427827	WITHOUT_CLASSIFICATION	3.905721730481494E-7	DEFECT
// Inform IH to clear the cache	WITHOUT_CLASSIFICATION	0.999999834111306	WITHOUT_CLASSIFICATION	1.6588869404482473E-7	DEFECT
// register this as the current task on the current thread.	WITHOUT_CLASSIFICATION	0.9999979199370639	WITHOUT_CLASSIFICATION	2.0800629361758415E-6	DEFECT
// Make sure that	WITHOUT_CLASSIFICATION	0.9999999544594763	WITHOUT_CLASSIFICATION	4.5540523645426196E-8	DEFECT
// ignore this if the object does not have // a set project method or the method // is private/protected.	WITHOUT_CLASSIFICATION	0.9999998723165117	WITHOUT_CLASSIFICATION	1.2768348827479627E-7	DEFECT
//override facility for subclasses to put custom hashtables in	WITHOUT_CLASSIFICATION	0.9999970838700243	WITHOUT_CLASSIFICATION	2.9161299758253298E-6	DEFECT
// --------------------  Hook management  --------------------	WITHOUT_CLASSIFICATION	0.9999944761930137	WITHOUT_CLASSIFICATION	5.523806986297465E-6	DEFECT
// --------------------  Methods to override  --------------------	WITHOUT_CLASSIFICATION	0.999998969275235	WITHOUT_CLASSIFICATION	1.03072476496917E-6	DEFECT
// If next has handled the property	WITHOUT_CLASSIFICATION	0.9999913268039896	WITHOUT_CLASSIFICATION	8.673196010363063E-6	DEFECT
// try to get it from the project or keys // Backward compatibility	WITHOUT_CLASSIFICATION	0.9999993712896275	WITHOUT_CLASSIFICATION	6.287103725864086E-7	DEFECT
// -------------------- Default implementation  -------------------- // Methods used to support the default behavior and provide backward // compatibility. Some will be deprecated, you should avoid calling them.	WITHOUT_CLASSIFICATION	0.9998583001938537	WITHOUT_CLASSIFICATION	1.4169980614631793E-4	DEFECT
// user (CLI) properties take precedence	WITHOUT_CLASSIFICATION	0.999980019466017	WITHOUT_CLASSIFICATION	1.9980533982971767E-5	DEFECT
// -------------------- Getting properties  --------------------	WITHOUT_CLASSIFICATION	0.9999996732890809	WITHOUT_CLASSIFICATION	3.267109190668215E-7	DEFECT
// -------------------- Property parsing  -------------------- // Moved from ProjectHelper. You can override the static method - // this is used for backward compatibility (for code that calls // the parse method in ProjectHelper).	WITHOUT_CLASSIFICATION	0.9999684000497674	WITHOUT_CLASSIFICATION	3.1599950232708376E-5	DEFECT
//search for the next instance of $ from the 'prev' position	WITHOUT_CLASSIFICATION	0.9999993114913681	WITHOUT_CLASSIFICATION	6.885086318206995E-7	DEFECT
//if we are at the end of the string, we tack on a $ //then move past it	WITHOUT_CLASSIFICATION	0.9999350396914106	WITHOUT_CLASSIFICATION	6.496030858938812E-5	DEFECT
//peek ahead to see if the next char is a property or not //not a property: insert the char as a literal	WITHOUT_CLASSIFICATION	0.9999908321240362	WITHOUT_CLASSIFICATION	9.167875963854606E-6	DEFECT
//backwards compatibility two $ map to one mode	WITHOUT_CLASSIFICATION	0.9999715978282984	WITHOUT_CLASSIFICATION	2.840217170160665E-5	DEFECT
//new behaviour: $X maps to $X for all values of X!='$'	WITHOUT_CLASSIFICATION	0.9990745015783523	WITHOUT_CLASSIFICATION	9.254984216477183E-4	DEFECT
//property found, extract its name or bail on a typo	WITHOUT_CLASSIFICATION	0.9998458854600788	WITHOUT_CLASSIFICATION	1.5411453992114494E-4	DEFECT
//no more $ signs found //if there is any tail to the file, append it	WITHOUT_CLASSIFICATION	0.9999642527351615	WITHOUT_CLASSIFICATION	3.5747264838373984E-5	DEFECT
//empty	WITHOUT_CLASSIFICATION	0.999961376570256	WITHOUT_CLASSIFICATION	3.862342974406731E-5	DEFECT
// The children are added to after this cloning	WITHOUT_CLASSIFICATION	0.9999991833310272	WITHOUT_CLASSIFICATION	8.166689727251483E-7	DEFECT
// Make sure the dependency is not empty string	WITHOUT_CLASSIFICATION	0.9999996225191582	WITHOUT_CLASSIFICATION	3.774808417498896E-7	DEFECT
// Make sure that depends attribute does not // end in a ,	WITHOUT_CLASSIFICATION	0.9999970885457277	WITHOUT_CLASSIFICATION	2.9114542723271755E-6	DEFECT
// A project helper may process multiple files. We'll keep track // of them - to avoid loops and to allow caching. The caching will // probably accelerate things like <antCall>. // The key is the absolute file, the value is a processed tree. // Since the tree is composed of UE and RC - it can be reused ! // protected Hashtable processedFiles=new Hashtable();	WITHOUT_CLASSIFICATION	0.9999999274384924	WITHOUT_CLASSIFICATION	7.256150764414204E-8	DEFECT
//    public Hashtable getProcessedFiles() { //        return processedFiles; //    }	WITHOUT_CLASSIFICATION	0.9999999955230741	WITHOUT_CLASSIFICATION	4.476925917520402E-9	DEFECT
// --------------------  Parse method  --------------------	WITHOUT_CLASSIFICATION	0.999999142307258	WITHOUT_CLASSIFICATION	8.576927420410553E-7	DEFECT
// Identify the class loader we will be using. Ant may be // in a webapp or embedded in a different app	WITHOUT_CLASSIFICATION	0.9999967127195927	WITHOUT_CLASSIFICATION	3.2872804072934842E-6	DEFECT
// First, try the system property	WITHOUT_CLASSIFICATION	0.9999918680448194	WITHOUT_CLASSIFICATION	8.131955180599164E-6	DEFECT
// A JDK1.3 'service' ( like in JAXP ). That will plug a helper // automatically if in CLASSPATH, with the right META-INF/services.	WITHOUT_CLASSIFICATION	0.9607924340247783	WITHOUT_CLASSIFICATION	0.03920756597522165	DEFECT
// This code is needed by EBCDIC and other strange systems. // It's a fix for bugs reported in xerces	WITHOUT_CLASSIFICATION	0.9736140064879004	WITHOUT_CLASSIFICATION	0.026385993512099602	DEFECT
// try next method	WITHOUT_CLASSIFICATION	0.9999324476842355	WITHOUT_CLASSIFICATION	6.755231576450244E-5	DEFECT
// -------------------- Static utils, used by most helpers ----------------	WITHOUT_CLASSIFICATION	0.9999999938549019	WITHOUT_CLASSIFICATION	6.14509809509559E-9	DEFECT
// reflect these into the target	WITHOUT_CLASSIFICATION	0.9999999764546657	WITHOUT_CLASSIFICATION	2.3545334376707657E-8	DEFECT
// id attribute must be set externally	WITHOUT_CLASSIFICATION	0.9999998406387203	WITHOUT_CLASSIFICATION	1.5936127967551955E-7	DEFECT
// needed since project properties are not accessible	WITHOUT_CLASSIFICATION	0.9999981537011907	WITHOUT_CLASSIFICATION	1.8462988092359629E-6	DEFECT
/*<UnknownElement>*/	WITHOUT_CLASSIFICATION	0.9999035145179409	WITHOUT_CLASSIFICATION	9.648548205916527E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999999198791225	WITHOUT_CLASSIFICATION	8.012087743264267E-8	DEFECT
/*<String,String>*/	WITHOUT_CLASSIFICATION	0.9999443457895831	WITHOUT_CLASSIFICATION	5.565421041679438E-5	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9999976685470136	WITHOUT_CLASSIFICATION	2.331452986425402E-6	DEFECT
// reflect these into the target	WITHOUT_CLASSIFICATION	0.9999999764546657	WITHOUT_CLASSIFICATION	2.3545334376707657E-8	DEFECT
// id attribute must be set externally	WITHOUT_CLASSIFICATION	0.9999998406387203	WITHOUT_CLASSIFICATION	1.5936127967551955E-7	DEFECT
// Attributes	WITHOUT_CLASSIFICATION	0.9999998953027849	WITHOUT_CLASSIFICATION	1.0469721503061284E-7	DEFECT
// configure attributes of the object and it's children. If it is // a task container, defer the configuration till the task container // attempts to use the task	WITHOUT_CLASSIFICATION	0.9999999681017794	WITHOUT_CLASSIFICATION	3.1898220564959544E-8	DEFECT
// plain impossible to get here, maybeConfigure should // have thrown an exception.	WITHOUT_CLASSIFICATION	0.9999998083387517	WITHOUT_CLASSIFICATION	1.9166124836883593E-7	DEFECT
// Finished executing the task, null it to allow // GC do its job // If this UE is used again, a new "realthing" will be made	WITHOUT_CLASSIFICATION	0.9999999934942028	WITHOUT_CLASSIFICATION	6.505797239475427E-9	DEFECT
// Do the runtime	WITHOUT_CLASSIFICATION	0.9999991728696871	WITHOUT_CLASSIFICATION	8.271303128383419E-7	DEFECT
// UnknownElement always has an associated target	WITHOUT_CLASSIFICATION	0.9999998434563432	WITHOUT_CLASSIFICATION	1.565436568454795E-7	DEFECT
//return elementName;	WITHOUT_CLASSIFICATION	0.9999994585660253	WITHOUT_CLASSIFICATION	5.414339746457937E-7	DEFECT
// Are the names the same ?	WITHOUT_CLASSIFICATION	0.99999986085384	WITHOUT_CLASSIFICATION	1.3914616002808374E-7	DEFECT
// Are attributes the same ?	WITHOUT_CLASSIFICATION	0.9999998429797292	WITHOUT_CLASSIFICATION	1.5702027077531018E-7	DEFECT
// Are the sub elements the same ?	WITHOUT_CLASSIFICATION	0.9999999624792877	WITHOUT_CLASSIFICATION	3.7520712309556836E-8	DEFECT
// hidden constructor	WITHOUT_CLASSIFICATION	0.9999999568983541	WITHOUT_CLASSIFICATION	4.310164595652962E-8	DEFECT
//create the file	WITHOUT_CLASSIFICATION	0.9999999176448139	WITHOUT_CLASSIFICATION	8.235518617194753E-8	DEFECT
//do some writing to it	WITHOUT_CLASSIFICATION	0.9999842523894579	WITHOUT_CLASSIFICATION	1.57476105420549E-5	DEFECT
//calendar stuff.	WITHOUT_CLASSIFICATION	0.9999996365074041	WITHOUT_CLASSIFICATION	3.6349259587532265E-7	DEFECT
//not included, do nothing	WITHOUT_CLASSIFICATION	0.9999930526059276	WITHOUT_CLASSIFICATION	6.947394072271318E-6	DEFECT
// not included, to nothing	WITHOUT_CLASSIFICATION	0.9999978715369742	WITHOUT_CLASSIFICATION	2.128463025808327E-6	DEFECT
/*<RuntimeConfigurable>*/	WITHOUT_CLASSIFICATION	0.9999946726746892	WITHOUT_CLASSIFICATION	5.327325310802536E-6	DEFECT
/*<String>*/	WITHOUT_CLASSIFICATION	0.9999328187251918	WITHOUT_CLASSIFICATION	6.718127480824542E-5	DEFECT
// Configure the object	WITHOUT_CLASSIFICATION	0.9999999012411503	WITHOUT_CLASSIFICATION	9.875884961678406E-8	DEFECT
// Most likely an UnknownElement	WITHOUT_CLASSIFICATION	0.9999951412550953	WITHOUT_CLASSIFICATION	4.858744904777346E-6	DEFECT
// Children (this is a shadow of UnknownElement#children)	WITHOUT_CLASSIFICATION	0.999997583340591	WITHOUT_CLASSIFICATION	2.416659409105794E-6	DEFECT
// poly type	WITHOUT_CLASSIFICATION	0.9999947184063007	WITHOUT_CLASSIFICATION	5.281593699244805E-6	DEFECT
// Text	WITHOUT_CLASSIFICATION	0.9999938077704943	WITHOUT_CLASSIFICATION	6.192229505754716E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999997594604898	WITHOUT_CLASSIFICATION	2.4053951019376697E-7	DEFECT
// store the token just read for next time	WITHOUT_CLASSIFICATION	0.9999990200879284	WITHOUT_CLASSIFICATION	9.799120715048725E-7	DEFECT
// a task container - anything could happen - just add the // child to the container	WITHOUT_CLASSIFICATION	0.9999997146985896	WITHOUT_CLASSIFICATION	2.853014103084411E-7	DEFECT
// Is the text the same? //   Need to use equals on the string and not //   on the stringbuffer as equals on the string buffer //   does not compare the contents.	WITHOUT_CLASSIFICATION	0.9999991747361043	WITHOUT_CLASSIFICATION	8.252638957082613E-7	DEFECT
// Assume that this is an not supported attribute type // thrown for example by a dymanic attribute task // Do nothing	WITHOUT_CLASSIFICATION	0.999745842025402	WITHOUT_CLASSIFICATION	2.5415797459809903E-4	DEFECT
// on Windows and Unix, we can ignore delimiters and still have // enough information to tokenize correctly.	WITHOUT_CLASSIFICATION	0.9989871203077593	WITHOUT_CLASSIFICATION	0.0010128796922406484	DEFECT
// we are on a dos style system so this path could be a drive // spec. We look at the next token	WITHOUT_CLASSIFICATION	0.9999638476391604	WITHOUT_CLASSIFICATION	3.615236083971574E-5	DEFECT
// we know we are on a DOS style platform and the next path // starts with a slash or backslash, so we know this is a // drive spec	WITHOUT_CLASSIFICATION	0.9999870226395251	WITHOUT_CLASSIFICATION	1.2977360474930468E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999229243365	WITHOUT_CLASSIFICATION	7.707566353111588E-8	DEFECT
// ignore ";" and get the next token	WITHOUT_CLASSIFICATION	0.9999990372273756	WITHOUT_CLASSIFICATION	9.627726243945517E-7	DEFECT
// this path could be a drive spec, so look at the next token	WITHOUT_CLASSIFICATION	0.9999805548889438	WITHOUT_CLASSIFICATION	1.9445111056306608E-5	DEFECT
// it indeed is a drive spec, get the next bit	WITHOUT_CLASSIFICATION	0.9999995622642877	WITHOUT_CLASSIFICATION	4.3773571242263107E-7	DEFECT
// implicit else: ignore the ':' since we have either a // UNIX or a relative path	WITHOUT_CLASSIFICATION	0.9999999252268951	WITHOUT_CLASSIFICATION	7.477310487896364E-8	DEFECT
// Miscellaneous typical temporary files	WITHOUT_CLASSIFICATION	0.9999999671621962	WITHOUT_CLASSIFICATION	3.283780375855491E-8	DEFECT
// CVS	WITHOUT_CLASSIFICATION	0.999998673600285	WITHOUT_CLASSIFICATION	1.3263997149836678E-6	DEFECT
// SCCS	WITHOUT_CLASSIFICATION	0.9999969810811482	WITHOUT_CLASSIFICATION	3.0189188516664217E-6	DEFECT
// Visual SourceSafe	WITHOUT_CLASSIFICATION	0.9999999547492628	WITHOUT_CLASSIFICATION	4.5250737153115557E-8	DEFECT
// Subversion	WITHOUT_CLASSIFICATION	0.9999996523456528	WITHOUT_CLASSIFICATION	3.4765434719785193E-7	DEFECT
// set in/excludes to reasonable defaults if needed:	WITHOUT_CLASSIFICATION	0.99999999521828	WITHOUT_CLASSIFICATION	4.7817200010499076E-9	DEFECT
// if no basedir and no includes, nothing to do:	WITHOUT_CLASSIFICATION	0.999999974062829	WITHOUT_CLASSIFICATION	2.593717099559246E-8	DEFECT
//skip abs. paths not under basedir, if set:	WITHOUT_CLASSIFICATION	0.999996648922084	WITHOUT_CLASSIFICATION	3.351077916102329E-6	DEFECT
//skip non-abs. paths if basedir == null:	WITHOUT_CLASSIFICATION	0.9999996162443955	WITHOUT_CLASSIFICATION	3.8375560450054483E-7	DEFECT
// we are going to scan everything anyway	WITHOUT_CLASSIFICATION	0.99999878855411	WITHOUT_CLASSIFICATION	1.2114458900230297E-6	DEFECT
// Empty	WITHOUT_CLASSIFICATION	0.9999958144970209	WITHOUT_CLASSIFICATION	4.185502979104723E-6	DEFECT
// will be caught and redirected to Ant's logging system	WITHOUT_CLASSIFICATION	0.9999871834745667	WITHOUT_CLASSIFICATION	1.2816525433171909E-5	DEFECT
// will be caught and redirected to Ant's logging system	WITHOUT_CLASSIFICATION	0.9999871834745667	WITHOUT_CLASSIFICATION	1.2816525433171909E-5	DEFECT
//removing base from path yields no change; path not child of base	WITHOUT_CLASSIFICATION	0.9999989634822042	WITHOUT_CLASSIFICATION	1.036517795829072E-6	DEFECT
/* package-private */	WITHOUT_CLASSIFICATION	0.9999989522759342	WITHOUT_CLASSIFICATION	1.0477240659474854E-6	DEFECT
// do the "singleton" initialization	WITHOUT_CLASSIFICATION	0.9999981487380281	WITHOUT_CLASSIFICATION	1.8512619720014009E-6	DEFECT
// Add the explicit resource collections to the archive.	WITHOUT_CLASSIFICATION	0.9999999049500277	WITHOUT_CLASSIFICATION	9.504997241904091E-8	DEFECT
// EOL was "\r\n"	WITHOUT_CLASSIFICATION	0.9999998061050025	WITHOUT_CLASSIFICATION	1.9389499760545327E-7	DEFECT
// don't have to check for interface, since then // taskClass would be abstract too.	WITHOUT_CLASSIFICATION	0.999999810225409	WITHOUT_CLASSIFICATION	1.897745910059932E-7	DEFECT
// ignore this if the class being used as a task does not have // a set location method.	WITHOUT_CLASSIFICATION	0.9999994915669643	WITHOUT_CLASSIFICATION	5.084330356443093E-7	DEFECT
// ignore this if the class being used as a task does not have // a set project method.	WITHOUT_CLASSIFICATION	0.999998635222855	WITHOUT_CLASSIFICATION	1.3647771450183466E-6	DEFECT
// put in the newroots map the include patterns without // wildcard tokens	WITHOUT_CLASSIFICATION	0.9999824764114175	WITHOUT_CLASSIFICATION	1.7523588582545995E-5	DEFECT
// only scan directories that can include matched files or // directories	WITHOUT_CLASSIFICATION	0.9999988014714668	WITHOUT_CLASSIFICATION	1.1985285331676843E-6	DEFECT
// may be on a case insensitive file system.  We want // the results to show what's really on the disk, so // we need to double check.	WITHOUT_CLASSIFICATION	0.9999998018971133	WITHOUT_CLASSIFICATION	1.9810288658233472E-7	DEFECT
// adapt currentelement to the case we've // actually found	WITHOUT_CLASSIFICATION	0.9999975276977	WITHOUT_CLASSIFICATION	2.4723023000203575E-6	DEFECT
// I am the only one so I have to close the reader	WITHOUT_CLASSIFICATION	0.9999995367253481	WITHOUT_CLASSIFICATION	4.6327465192432156E-7	DEFECT
// I am the only one so I have to close the reader	WITHOUT_CLASSIFICATION	0.9999995367253481	WITHOUT_CLASSIFICATION	4.6327465192432156E-7	DEFECT
// get parameters	WITHOUT_CLASSIFICATION	0.9999999384716591	WITHOUT_CLASSIFICATION	6.152834079299023E-8	DEFECT
// Calculate the EOL string per the current config	WITHOUT_CLASSIFICATION	0.9999999809817857	WITHOUT_CLASSIFICATION	1.9018214437913103E-8	DEFECT
// assume (eol == CrLf.LF || eol == CrLf.UNIX)	WITHOUT_CLASSIFICATION	0.9999999831179118	WITHOUT_CLASSIFICATION	1.688208814270387E-8	DEFECT
// Add/Remove tabs	WITHOUT_CLASSIFICATION	0.9999993649893616	WITHOUT_CLASSIFICATION	6.350106384936128E-7	DEFECT
// Add missing EOF character	WITHOUT_CLASSIFICATION	0.9999999972166446	WITHOUT_CLASSIFICATION	2.7833554321619816E-9	DEFECT
// Mask, block from being edited, all characters in constants.	WITHOUT_CLASSIFICATION	0.9999999869428813	WITHOUT_CLASSIFICATION	1.3057118853335761E-8	DEFECT
// The current character is always emitted.	WITHOUT_CLASSIFICATION	0.9999995423992531	WITHOUT_CLASSIFICATION	4.576007467869704E-7	DEFECT
// Fall tru	WITHOUT_CLASSIFICATION	0.9999960751087551	WITHOUT_CLASSIFICATION	3.924891244984882E-6	DEFECT
// Fall tru	WITHOUT_CLASSIFICATION	0.9999960751087551	WITHOUT_CLASSIFICATION	3.924891244984882E-6	DEFECT
// Fall tru	WITHOUT_CLASSIFICATION	0.9999960751087551	WITHOUT_CLASSIFICATION	3.924891244984882E-6	DEFECT
// Fall tru	WITHOUT_CLASSIFICATION	0.9999960751087551	WITHOUT_CLASSIFICATION	3.924891244984882E-6	DEFECT
// Fall tru	WITHOUT_CLASSIFICATION	0.9999960751087551	WITHOUT_CLASSIFICATION	3.924891244984882E-6	DEFECT
// EOL	WITHOUT_CLASSIFICATION	0.9999964735693251	WITHOUT_CLASSIFICATION	3.5264306749007966E-6	DEFECT
// EOL was "\n"	WITHOUT_CLASSIFICATION	0.9999996670595344	WITHOUT_CLASSIFICATION	3.3294046571346666E-7	DEFECT
// EOL was "\r\r\n"	WITHOUT_CLASSIFICATION	0.9999998061331646	WITHOUT_CLASSIFICATION	1.938668352289527E-7	DEFECT
// EOL was "\r"	WITHOUT_CLASSIFICATION	0.9999997865291286	WITHOUT_CLASSIFICATION	2.134708713191952E-7	DEFECT
// If source at EOF and lookAhead is ctrl-z, return EOF (NOT ctrl-z)	WITHOUT_CLASSIFICATION	0.9999937002620369	WITHOUT_CLASSIFICATION	6.299737963128796E-6	DEFECT
// if source is EOF but last character was NOT ctrl-z, return ctrl-z	WITHOUT_CLASSIFICATION	0.999999997500852	WITHOUT_CLASSIFICATION	2.4991479090118595E-9	DEFECT
// Return current look-ahead	WITHOUT_CLASSIFICATION	0.9999851216606832	WITHOUT_CLASSIFICATION	1.4878339316802438E-5	DEFECT
// EOL was "\r\r" - handle as two consecutive "\r" and // "\r"	WITHOUT_CLASSIFICATION	0.9999998814097824	WITHOUT_CLASSIFICATION	1.18590217764572E-7	DEFECT
// Instance initializer: Executes just after the super() call in this // class's constructor.	WITHOUT_CLASSIFICATION	0.999999953129432	WITHOUT_CLASSIFICATION	4.687056805110634E-8	DEFECT
// Return copy so that the call must call setEof() to change the state // of fixCRLF	WITHOUT_CLASSIFICATION	0.9999999563116725	WITHOUT_CLASSIFICATION	4.368832757211604E-8	DEFECT
// Return copy so that the call must call setEol() to change the state // of fixCRLF	WITHOUT_CLASSIFICATION	0.999999964031009	WITHOUT_CLASSIFICATION	3.596899109105303E-8	DEFECT
// Return copy so that the caller must call setTab() to change the state // of fixCRLF.	WITHOUT_CLASSIFICATION	0.9999999862601072	WITHOUT_CLASSIFICATION	1.3739892888904676E-8	DEFECT
// If I'm removing an EOF character, do so first so that the other // filters don't see that character.	WITHOUT_CLASSIFICATION	0.9999999987025024	WITHOUT_CLASSIFICATION	1.2974975342317105E-9	DEFECT
// Change all EOL characters to match the calculated EOL string. If // configured to do so, append a trailing EOL so that the file ends on // a EOL.	WITHOUT_CLASSIFICATION	0.9999999927954547	WITHOUT_CLASSIFICATION	7.204545196539122E-9	DEFECT
// If filtering Java source, prevent changes to whitespace in // character and string literals.	WITHOUT_CLASSIFICATION	0.9999998833521428	WITHOUT_CLASSIFICATION	1.1664785717542792E-7	DEFECT
// Works like clone() but doesn't show up in the Javadocs	WITHOUT_CLASSIFICATION	0.9998966521632858	WITHOUT_CLASSIFICATION	1.0334783671419165E-4	DEFECT
// getConstants is a static method, no need to // pass in the object	WITHOUT_CLASSIFICATION	0.9999992651786601	WITHOUT_CLASSIFICATION	7.348213399511483E-7	DEFECT
//this field will hold unnnn right after reading a non latin character //afterwards it will be truncated of one char every call to read	WITHOUT_CLASSIFICATION	0.9996289312903756	WITHOUT_CLASSIFICATION	3.710687096244845E-4	DEFECT
//replace the last 0s by the chars contained in s	WITHOUT_CLASSIFICATION	0.9999997317809226	WITHOUT_CLASSIFICATION	2.682190773762751E-7	DEFECT
// line started with comment	WITHOUT_CLASSIFICATION	0.9999994529426648	WITHOUT_CLASSIFICATION	5.470573351872373E-7	DEFECT
// ----------------------------------------- //  Predefined tokenizers // -----------------------------------------	WITHOUT_CLASSIFICATION	0.9999992549133332	WITHOUT_CLASSIFICATION	7.450866667840427E-7	DEFECT
// write everything up to the from	WITHOUT_CLASSIFICATION	0.9999997728413847	WITHOUT_CLASSIFICATION	2.27158615269446E-7	DEFECT
// write the replacement to	WITHOUT_CLASSIFICATION	0.9999999659524731	WITHOUT_CLASSIFICATION	3.404752680895626E-8	DEFECT
// search again	WITHOUT_CLASSIFICATION	0.9999999899479789	WITHOUT_CLASSIFICATION	1.0052021024093174E-8	DEFECT
// write the remaining characters	WITHOUT_CLASSIFICATION	0.999999999334027	WITHOUT_CLASSIFICATION	6.659731092353935E-10	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999229243365	WITHOUT_CLASSIFICATION	7.707566353111588E-8	DEFECT
// -------------------------------------------- // //      Tokenizer Classes (impls moved to oata.util) // // --------------------------------------------	WITHOUT_CLASSIFICATION	0.9999995512632175	WITHOUT_CLASSIFICATION	4.4873678251032947E-7	DEFECT
// -------------------------------------------------------- //  static utility methods - could be placed somewhere else // --------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999999924822888	WITHOUT_CLASSIFICATION	7.517711273727144E-9	DEFECT
//Remove start and end quotes if field is a String	WITHOUT_CLASSIFICATION	0.9999783010521186	WITHOUT_CLASSIFICATION	2.1698947881391394E-5	DEFECT
// default buffer size	WITHOUT_CLASSIFICATION	0.999999764891803	WITHOUT_CLASSIFICATION	2.3510819689270895E-7	DEFECT
/* Stateless */	WITHOUT_CLASSIFICATION	0.9999998475446171	WITHOUT_CLASSIFICATION	1.5245538292888286E-7	DEFECT
// singletons - since all state is in the context	WITHOUT_CLASSIFICATION	0.9999969516155651	WITHOUT_CLASSIFICATION	3.0483844348251774E-6	DEFECT
// we are in an imported file.	WITHOUT_CLASSIFICATION	0.9999998616191225	WITHOUT_CLASSIFICATION	1.383808776475785E-7	DEFECT
// top level file	WITHOUT_CLASSIFICATION	0.9999999175069934	WITHOUT_CLASSIFICATION	8.249300664758446E-8	DEFECT
// ?? OK ??	WITHOUT_CLASSIFICATION	0.9999997328295779	WITHOUT_CLASSIFICATION	2.671704222043994E-7	DEFECT
// use default if not file or file not found	WITHOUT_CLASSIFICATION	0.9999999847316593	WITHOUT_CLASSIFICATION	1.5268340739183823E-8	DEFECT
// Set the location of the implicit target associated with the project tag	WITHOUT_CLASSIFICATION	0.9999999668948254	WITHOUT_CLASSIFICATION	3.310517468763668E-8	DEFECT
// Ignore attributes from unknown uris	WITHOUT_CLASSIFICATION	0.9999992751287746	WITHOUT_CLASSIFICATION	7.248712254374761E-7	DEFECT
// Ignore attributes from unknown uris	WITHOUT_CLASSIFICATION	0.9999992751287746	WITHOUT_CLASSIFICATION	7.248712254374761E-7	DEFECT
// What's the difference between id and name ?	WITHOUT_CLASSIFICATION	0.9999999683063163	WITHOUT_CLASSIFICATION	3.169368366694225E-8	DEFECT
// no further processing	WITHOUT_CLASSIFICATION	0.9999999957195592	WITHOUT_CLASSIFICATION	4.280440747867063E-9	DEFECT
// set explicitly before starting ?	WITHOUT_CLASSIFICATION	0.9999999660595453	WITHOUT_CLASSIFICATION	3.394045463370839E-8	DEFECT
// Default for baseDir is the location of the build file.	WITHOUT_CLASSIFICATION	0.9999999832444857	WITHOUT_CLASSIFICATION	1.6755514281635343E-8	DEFECT
// check whether the user has specified an absolute path	WITHOUT_CLASSIFICATION	0.9999999859655161	WITHOUT_CLASSIFICATION	1.4034483967831496E-8	DEFECT
// Check if this target is in the current build file	WITHOUT_CLASSIFICATION	0.9999999755478818	WITHOUT_CLASSIFICATION	2.4452118260902953E-8	DEFECT
// If the name has not already been defined define it	WITHOUT_CLASSIFICATION	0.9999996826700439	WITHOUT_CLASSIFICATION	3.173299561061338E-7	DEFECT
// In an impored file (and not completely // ignoring the project tag)	WITHOUT_CLASSIFICATION	0.9999771529066241	WITHOUT_CLASSIFICATION	2.2847093375891546E-5	DEFECT
/* UnknownElement is used for tasks and data types - with               delayed eval */	WITHOUT_CLASSIFICATION	0.9999999237267625	WITHOUT_CLASSIFICATION	7.627323753025819E-8	DEFECT
// Nested element	WITHOUT_CLASSIFICATION	0.9999999552515905	WITHOUT_CLASSIFICATION	4.474840959064829E-8	DEFECT
// Task included in a target ( including the default one ).	WITHOUT_CLASSIFICATION	0.9999999976399558	WITHOUT_CLASSIFICATION	2.36004422025128E-9	DEFECT
// container.addTask(task); // This is a nop in UE: task.init();	WITHOUT_CLASSIFICATION	0.9999985706167767	WITHOUT_CLASSIFICATION	1.4293832233186064E-6	DEFECT
// **   simple name specified   == path in list + name	WITHOUT_CLASSIFICATION	0.9999999821533445	WITHOUT_CLASSIFICATION	1.7846655455332375E-8	DEFECT
// if the suffix does not starts with a '.' and the // char preceding the suffix is a '.', we assume the user // wants to remove the '.' as well (see docs)	WITHOUT_CLASSIFICATION	0.9999682480821617	WITHOUT_CLASSIFICATION	3.1751917838444694E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999997594604898	WITHOUT_CLASSIFICATION	2.4053951019376697E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999997594604898	WITHOUT_CLASSIFICATION	2.4053951019376697E-7	DEFECT
// use default if not file or file not found	WITHOUT_CLASSIFICATION	0.9999999847316593	WITHOUT_CLASSIFICATION	1.5268340739183823E-8	DEFECT
// check whether the user has specified an absolute path	WITHOUT_CLASSIFICATION	0.9999999859655161	WITHOUT_CLASSIFICATION	1.4034483967831496E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999229243365	WITHOUT_CLASSIFICATION	7.707566353111588E-8	DEFECT
// Start handling SAX events	WITHOUT_CLASSIFICATION	0.9999999623912782	WITHOUT_CLASSIFICATION	3.7608721877852793E-8	DEFECT
// Let parent resume handling SAX events	WITHOUT_CLASSIFICATION	0.9999995163462964	WITHOUT_CLASSIFICATION	4.836537036868819E-7	DEFECT
// implicit target must be first on dependency list	WITHOUT_CLASSIFICATION	0.9999999972675846	WITHOUT_CLASSIFICATION	2.732415481686335E-9	DEFECT
// take care of dependencies	WITHOUT_CLASSIFICATION	0.9999992333148077	WITHOUT_CLASSIFICATION	7.666851922495735E-7	DEFECT
// swallow here, will be thrown again in // UnknownElement.maybeConfigure if the problem persists.	WITHOUT_CLASSIFICATION	0.9999997294837717	WITHOUT_CLASSIFICATION	2.7051622831019537E-7	DEFECT
//XXX task.setTaskType(tag);	WITHOUT_CLASSIFICATION	0.9999886276834996	WITHOUT_CLASSIFICATION	1.1372316500483146E-5	DEFECT
// task can contain other tasks - no other nested elements possible	WITHOUT_CLASSIFICATION	0.9999999478859853	WITHOUT_CLASSIFICATION	5.211401461928516E-8	DEFECT
// taskcontainer nested element can contain other tasks - no other // nested elements possible	WITHOUT_CLASSIFICATION	0.9999999580094036	WITHOUT_CLASSIFICATION	4.199059639553412E-8	DEFECT
// Should not happen	WITHOUT_CLASSIFICATION	0.9999776540404177	WITHOUT_CLASSIFICATION	2.2345959582262056E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999998434438988	WITHOUT_CLASSIFICATION	1.565561011525499E-7	DEFECT
// the first hex character if a character needs to be escaped	WITHOUT_CLASSIFICATION	0.9999998790152372	WITHOUT_CLASSIFICATION	1.2098476273694112E-7	DEFECT
// the second hex character if a character needs to be escaped	WITHOUT_CLASSIFICATION	0.9999971155664408	WITHOUT_CLASSIFICATION	2.884433559309296E-6	DEFECT
// initialize the above 3 arrays	WITHOUT_CLASSIFICATION	0.999999743898838	WITHOUT_CLASSIFICATION	2.5610116206502805E-7	DEFECT
// #8031: first try Java 1.4.	WITHOUT_CLASSIFICATION	0.9999936883935119	WITHOUT_CLASSIFICATION	6.3116064881483516E-6	DEFECT
// Fine, Java 1.3 or earlier, do it by hand.	WITHOUT_CLASSIFICATION	0.9999982938508871	WITHOUT_CLASSIFICATION	1.7061491128676632E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999229243365	WITHOUT_CLASSIFICATION	7.707566353111588E-8	DEFECT
// Bad URI, pass this on.	WITHOUT_CLASSIFICATION	0.9998763112265984	WITHOUT_CLASSIFICATION	1.2368877340163773E-4	DEFECT
// Unexpected target exception? Should not happen.	WITHOUT_CLASSIFICATION	0.9999998387579414	WITHOUT_CLASSIFICATION	1.612420586033047E-7	DEFECT
// Reflection problems? Should not happen, debug.	WITHOUT_CLASSIFICATION	0.996623309047733	WITHOUT_CLASSIFICATION	0.0033766909522669614	DEFECT
// Fallback method for Java 1.3 or earlier.	WITHOUT_CLASSIFICATION	0.9999873777748355	WITHOUT_CLASSIFICATION	1.2622225164603839E-5	DEFECT
// Ignore malformed exception	WITHOUT_CLASSIFICATION	0.9999992750814656	WITHOUT_CLASSIFICATION	7.24918534427356E-7	DEFECT
// if it's not an ASCII character, break here, and use UTF-8 encoding	WITHOUT_CLASSIFICATION	0.9999997669268395	WITHOUT_CLASSIFICATION	2.3307316052017014E-7	DEFECT
// record the fact that it's escaped	WITHOUT_CLASSIFICATION	0.999999376119323	WITHOUT_CLASSIFICATION	6.238806771125085E-7	DEFECT
// we saw some non-ascii character	WITHOUT_CLASSIFICATION	0.999999995748591	WITHOUT_CLASSIFICATION	4.251409087907592E-9	DEFECT
// get UTF-8 bytes for the remaining sub-string	WITHOUT_CLASSIFICATION	0.9999999951562052	WITHOUT_CLASSIFICATION	4.8437948277855975E-9	DEFECT
// for each byte	WITHOUT_CLASSIFICATION	0.9999998996728818	WITHOUT_CLASSIFICATION	1.0032711818818821E-7	DEFECT
// for non-ascii character: make it positive, then escape	WITHOUT_CLASSIFICATION	0.9999991289594027	WITHOUT_CLASSIFICATION	8.710405972617881E-7	DEFECT
// firstly check if the tools jar is already in the classpath	WITHOUT_CLASSIFICATION	0.9999999544049942	WITHOUT_CLASSIFICATION	4.559500573491894E-8	DEFECT
// just check whether this throws an exception	WITHOUT_CLASSIFICATION	0.9999999558253141	WITHOUT_CLASSIFICATION	4.4174685878971726E-8	DEFECT
// couldn't find compiler - try to find tools.jar // based on java.home setting	WITHOUT_CLASSIFICATION	0.9999995856053363	WITHOUT_CLASSIFICATION	4.143946637466413E-7	DEFECT
// Found in java.home as given	WITHOUT_CLASSIFICATION	0.9999990340252015	WITHOUT_CLASSIFICATION	9.659747985064615E-7	DEFECT
// add any jars in the directory	WITHOUT_CLASSIFICATION	0.9999985692465697	WITHOUT_CLASSIFICATION	1.4307534302725487E-6	DEFECT
// now update the class.path property	WITHOUT_CLASSIFICATION	0.9999986512462304	WITHOUT_CLASSIFICATION	1.3487537696461506E-6	DEFECT
// overlay specified properties file (if any), which overrides project // settings	WITHOUT_CLASSIFICATION	0.9999999951563431	WITHOUT_CLASSIFICATION	4.8436568267360565E-9	DEFECT
// ignore because properties file is not required	WITHOUT_CLASSIFICATION	0.9999990747693734	WITHOUT_CLASSIFICATION	9.252306264943357E-7	DEFECT
// private static final int ATTR_NORMAL = 0; // private static final int ATTR_BRIGHT = 1;	WITHOUT_CLASSIFICATION	0.99999997670448	WITHOUT_CLASSIFICATION	2.3295519956852398E-8	DEFECT
// private static final int ATTR_UNDERLINE = 3; // private static final int ATTR_BLINK = 5; // private static final int ATTR_REVERSE = 7; // private static final int ATTR_HIDDEN = 8;	WITHOUT_CLASSIFICATION	0.9999999464924086	WITHOUT_CLASSIFICATION	5.350759136851141E-8	DEFECT
// private static final int FG_BLACK = 30;	WITHOUT_CLASSIFICATION	0.999999948615312	WITHOUT_CLASSIFICATION	5.138468787060516E-8	DEFECT
// private static final int FG_YELLOW = 33;	WITHOUT_CLASSIFICATION	0.9999999892729897	WITHOUT_CLASSIFICATION	1.0727010289643815E-8	DEFECT
// private static final int FG_WHITE = 37;	WITHOUT_CLASSIFICATION	0.9999999793975027	WITHOUT_CLASSIFICATION	2.0602497299623917E-8	DEFECT
//Ignore - we will use the defaults.	WITHOUT_CLASSIFICATION	0.9999999634779441	WITHOUT_CLASSIFICATION	3.6522055977539385E-8	DEFECT
//Ignore - We do not want this to stop the build.	WITHOUT_CLASSIFICATION	0.9999970039103114	WITHOUT_CLASSIFICATION	2.9960896885601203E-6	DEFECT
// Fall through	WITHOUT_CLASSIFICATION	0.9999698334317738	WITHOUT_CLASSIFICATION	3.0166568226167286E-5	DEFECT
// Whether or not an actual update is required - // we don't need to update if the original file doesn't exist	WITHOUT_CLASSIFICATION	0.9998451863584426	WITHOUT_CLASSIFICATION	1.548136415575214E-4	DEFECT
// Use the logger config	WITHOUT_CLASSIFICATION	0.9999999180047889	WITHOUT_CLASSIFICATION	8.199521101209809E-8	DEFECT
// Since task log category includes target, we don't really // need this message	WITHOUT_CLASSIFICATION	0.9999999076386124	WITHOUT_CLASSIFICATION	9.236138771588802E-8	DEFECT
// Driver doesn't understand the URL	WITHOUT_CLASSIFICATION	0.9999991191111155	WITHOUT_CLASSIFICATION	8.808888845167832E-7	DEFECT
// It's a task - append the target	WITHOUT_CLASSIFICATION	0.99999978525144	WITHOUT_CLASSIFICATION	2.1474856002151385E-7	DEFECT
// finally, lets execute the compiler!!	WITHOUT_CLASSIFICATION	0.9999965336927379	WITHOUT_CLASSIFICATION	3.466307262081029E-6	DEFECT
// Doesn't make sense for c-l. Use the logger config	WITHOUT_CLASSIFICATION	0.9999983977405099	WITHOUT_CLASSIFICATION	1.6022594900050118E-6	DEFECT
// Could not get the required information	WITHOUT_CLASSIFICATION	0.999991459758941	WITHOUT_CLASSIFICATION	8.540241059057875E-6	DEFECT
// Create a ZipFileSet for this file, and pass it up.	WITHOUT_CLASSIFICATION	0.9999994779213522	WITHOUT_CLASSIFICATION	5.220786477875412E-7	DEFECT
// now we need to populate the compiler adapter	WITHOUT_CLASSIFICATION	0.9999999359289672	WITHOUT_CLASSIFICATION	6.407103285187667E-8	DEFECT
// If no webxml file is specified, it's an error.	WITHOUT_CLASSIFICATION	0.9999999745728245	WITHOUT_CLASSIFICATION	2.542717551722144E-8	DEFECT
// One cannot RMIC an interface for "classic" RMI (JRMP)	WITHOUT_CLASSIFICATION	0.9999995289856959	WITHOUT_CLASSIFICATION	4.710143040835533E-7	DEFECT
// otherwise perform a timestamp comparison - at least	WITHOUT_CLASSIFICATION	0.99999921746429	WITHOUT_CLASSIFICATION	7.825357099484296E-7	DEFECT
// don't know how to handle that - a IDL file doesn't // have a corresponding Java source for example.	WITHOUT_CLASSIFICATION	0.999973262851512	WITHOUT_CLASSIFICATION	2.673714848805205E-5	DEFECT
/*             * Move the generated source file to the base directory.  If             * base directory and sourcebase are the same, the generated             * sources are already in place.             */	WITHOUT_CLASSIFICATION	0.9999999441946719	WITHOUT_CLASSIFICATION	5.5805328175933244E-8	DEFECT
// no source file generated, nothing to move	WITHOUT_CLASSIFICATION	0.9999999987715538	WITHOUT_CLASSIFICATION	1.2284462925339769E-9	DEFECT
// not the requested type	WITHOUT_CLASSIFICATION	0.9999956583681123	WITHOUT_CLASSIFICATION	4.341631887620716E-6	DEFECT
// **   full-pathname specified == path in list // **   simple name specified   == path in list	WITHOUT_CLASSIFICATION	0.9999999706305758	WITHOUT_CLASSIFICATION	2.9369424240714415E-8	DEFECT
// we only get here if an exception has been thrown	WITHOUT_CLASSIFICATION	0.9999958521219509	WITHOUT_CLASSIFICATION	4.147878049125426E-6	DEFECT
// **   full-pathname specified == parent dir of path in list	WITHOUT_CLASSIFICATION	0.9999997703477819	WITHOUT_CLASSIFICATION	2.2965221802347538E-7	DEFECT
// not the requested type	WITHOUT_CLASSIFICATION	0.9999956583681123	WITHOUT_CLASSIFICATION	4.341631887620716E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999229243365	WITHOUT_CLASSIFICATION	7.707566353111588E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999229243365	WITHOUT_CLASSIFICATION	7.707566353111588E-8	DEFECT
//the rest of the method treats single jar like //a nested path with one file	WITHOUT_CLASSIFICATION	0.9999824323720647	WITHOUT_CLASSIFICATION	1.7567627935309276E-5	DEFECT
// Check for \r, \r\n and \r\r\n // Regard \r\r not followed by \n as two lines	WITHOUT_CLASSIFICATION	0.9999954017248954	WITHOUT_CLASSIFICATION	4.598275104563469E-6	DEFECT
// scan base dirs to build up compile lists only if a // specific classname is not given	WITHOUT_CLASSIFICATION	0.9999988989397206	WITHOUT_CLASSIFICATION	1.1010602794601523E-6	DEFECT
// **   simple name specified   == parent dir + name	WITHOUT_CLASSIFICATION	0.9999999309838346	WITHOUT_CLASSIFICATION	6.901616548604078E-8	DEFECT
// class found but restricted name; this is // actually the case we're looking for in JDK 1.3+, // so catch the exception and return	WITHOUT_CLASSIFICATION	0.9999990045879134	WITHOUT_CLASSIFICATION	9.95412086670286E-7	DEFECT
// Can return null to represent the bootstrap class loader. // see API docs of Class.getClassLoader.	WITHOUT_CLASSIFICATION	0.9999999965876952	WITHOUT_CLASSIFICATION	3.4123047159078654E-9	DEFECT
// must be "add"	WITHOUT_CLASSIFICATION	0.9999999773889349	WITHOUT_CLASSIFICATION	2.2611065115275583E-8	DEFECT
// first off, make sure that we've got a srcdir and destdir	WITHOUT_CLASSIFICATION	0.9999999063276428	WITHOUT_CLASSIFICATION	9.367235721864236E-8	DEFECT
// log options used	WITHOUT_CLASSIFICATION	0.999999907851086	WITHOUT_CLASSIFICATION	9.214891396996426E-8	DEFECT
//patch file into the fileset	WITHOUT_CLASSIFICATION	0.9999999356522835	WITHOUT_CLASSIFICATION	6.434771647739537E-8	DEFECT
//set our parent dir	WITHOUT_CLASSIFICATION	0.999999480074333	WITHOUT_CLASSIFICATION	5.199256669175541E-7	DEFECT
// Compare the destination with the temp file	WITHOUT_CLASSIFICATION	0.9999999900775618	WITHOUT_CLASSIFICATION	9.922438232388416E-9	DEFECT
// Eof has been reached	WITHOUT_CLASSIFICATION	0.9999986013581774	WITHOUT_CLASSIFICATION	1.3986418225768035E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999229243365	WITHOUT_CLASSIFICATION	7.707566353111588E-8	DEFECT
// don't reposition when we've reached the end // of the stream	WITHOUT_CLASSIFICATION	0.9999902455272366	WITHOUT_CLASSIFICATION	9.75447276332142E-6	DEFECT
// if at eolcount == 0 and trailing characters of string // are CTRL-Zs, set eofStr	WITHOUT_CLASSIFICATION	0.9999999999428929	WITHOUT_CLASSIFICATION	5.7107133729462946E-11	DEFECT
// keep searching for the first ^Z	WITHOUT_CLASSIFICATION	0.9999999952525962	WITHOUT_CLASSIFICATION	4.747403819687351E-9	DEFECT
// Trailing characters are ^Zs // Construct new line and eofStr	WITHOUT_CLASSIFICATION	0.9999999969197261	WITHOUT_CLASSIFICATION	3.080273859265233E-9	DEFECT
// permissible values for compression attribute	WITHOUT_CLASSIFICATION	0.9999916373385033	WITHOUT_CLASSIFICATION	8.362661496659719E-6	DEFECT
//default	WITHOUT_CLASSIFICATION	0.9999945667626957	WITHOUT_CLASSIFICATION	5.433237304258859E-6	DEFECT
// shadow of the above if the value is altered in execute	WITHOUT_CLASSIFICATION	0.9999984130269918	WITHOUT_CLASSIFICATION	1.5869730082368483E-6	DEFECT
// For directories:	WITHOUT_CLASSIFICATION	0.999999286577468	WITHOUT_CLASSIFICATION	7.134225321082906E-7	DEFECT
// Renamed version of original file, if it exists	WITHOUT_CLASSIFICATION	0.9999749016503696	WITHOUT_CLASSIFICATION	2.5098349630493684E-5	DEFECT
// Add the files found in groupfileset to fileset	WITHOUT_CLASSIFICATION	0.9999989022593129	WITHOUT_CLASSIFICATION	1.09774068705797E-6	DEFECT
// can also handle empty archives	WITHOUT_CLASSIFICATION	0.9999999727036402	WITHOUT_CLASSIFICATION	2.7296359848103564E-8	DEFECT
// quick exit if the target is up to date	WITHOUT_CLASSIFICATION	0.9999999896168151	WITHOUT_CLASSIFICATION	1.038318490264306E-8	DEFECT
// Close the output stream.	WITHOUT_CLASSIFICATION	0.9999999929182724	WITHOUT_CLASSIFICATION	7.081727631462429E-9	DEFECT
// we are recreating the archive, need all resources	WITHOUT_CLASSIFICATION	0.9999999820806771	WITHOUT_CLASSIFICATION	1.791932290314022E-8	DEFECT
// delete a bogus ZIP file (but only if it's not the original one)	WITHOUT_CLASSIFICATION	0.9999995031288647	WITHOUT_CLASSIFICATION	4.968711353914292E-7	DEFECT
// In this case using java.util.zip will not work // because it does not permit a zero-entry archive. // Must create it manually.	WITHOUT_CLASSIFICATION	0.9817183314567524	WITHOUT_CLASSIFICATION	0.01828166854324759	DEFECT
// Cf. PKZIP specification.	WITHOUT_CLASSIFICATION	0.9999999629832518	WITHOUT_CLASSIFICATION	3.701674828966882E-8	DEFECT
// P // K	WITHOUT_CLASSIFICATION	0.9999968653113159	WITHOUT_CLASSIFICATION	3.134688684127425E-6	DEFECT
// remainder zeros	WITHOUT_CLASSIFICATION	0.9999992537740017	WITHOUT_CLASSIFICATION	7.462259984517676E-7	DEFECT
// Create.	WITHOUT_CLASSIFICATION	0.9999999141282016	WITHOUT_CLASSIFICATION	8.587179841929553E-8	DEFECT
// we are recreating the archive, need all resources	WITHOUT_CLASSIFICATION	0.9999999820806771	WITHOUT_CLASSIFICATION	1.791932290314022E-8	DEFECT
// initialResources is not empty	WITHOUT_CLASSIFICATION	0.9999980063715777	WITHOUT_CLASSIFICATION	1.993628422337912E-6	DEFECT
// initialResources is not empty	WITHOUT_CLASSIFICATION	0.9999980063715777	WITHOUT_CLASSIFICATION	1.993628422337912E-6	DEFECT
// in this case all files from origin map to // the fullPath attribute of the zipfileset at // destination	WITHOUT_CLASSIFICATION	0.9999954032833047	WITHOUT_CLASSIFICATION	4.5967166953408135E-6	DEFECT
// we are recreating the archive, need all resources	WITHOUT_CLASSIFICATION	0.9999999820806771	WITHOUT_CLASSIFICATION	1.791932290314022E-8	DEFECT
// we are recreating the archive, need all resources	WITHOUT_CLASSIFICATION	0.9999999820806771	WITHOUT_CLASSIFICATION	1.791932290314022E-8	DEFECT
// no emptyBehavior handling since the FileSet version // will take care of it.	WITHOUT_CLASSIFICATION	0.999999864262456	WITHOUT_CLASSIFICATION	1.357375439543264E-7	DEFECT
/*         * Backwards compatibility forces us to repeat the logic of         * getResourcesToAdd(FileSet[], ...) here once again.         */	WITHOUT_CLASSIFICATION	0.9999999854565327	WITHOUT_CLASSIFICATION	1.4543467384676754E-8	DEFECT
// we will return initialResources anyway, no reason // to scan further.	WITHOUT_CLASSIFICATION	0.9999999695145302	WITHOUT_CLASSIFICATION	3.048546988074192E-8	DEFECT
// we will return initialResources anyway, no reason // to scan further.	WITHOUT_CLASSIFICATION	0.9999999695145302	WITHOUT_CLASSIFICATION	3.048546988074192E-8	DEFECT
// ZIPs store time with a granularity of 2 seconds, round up	WITHOUT_CLASSIFICATION	0.999946945773591	WITHOUT_CLASSIFICATION	5.305422640905668E-5	DEFECT
// don't add directories we've already added. // no warning if we try, it is harmless in and of itself	WITHOUT_CLASSIFICATION	0.9999999482957643	WITHOUT_CLASSIFICATION	5.170423562127006E-8	DEFECT
// A "refid" attribute for a node within a Path object.	WITHOUT_CLASSIFICATION	0.9999976182040479	WITHOUT_CLASSIFICATION	2.3817959520739455E-6	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9999976685470136	WITHOUT_CLASSIFICATION	2.331452986425402E-6	DEFECT
//default	WITHOUT_CLASSIFICATION	0.9999945667626957	WITHOUT_CLASSIFICATION	5.433237304258859E-6	DEFECT
//default	WITHOUT_CLASSIFICATION	0.9999945667626957	WITHOUT_CLASSIFICATION	5.433237304258859E-6	DEFECT
// ZIPs store time with a granularity of 2 seconds, round up	WITHOUT_CLASSIFICATION	0.999946945773591	WITHOUT_CLASSIFICATION	5.305422640905668E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999229243365	WITHOUT_CLASSIFICATION	7.707566353111588E-8	DEFECT
// duplicate equal to add, so we continue	WITHOUT_CLASSIFICATION	0.9999999948917389	WITHOUT_CLASSIFICATION	5.1082611278280605E-9	DEFECT
// Store data into a byte[]	WITHOUT_CLASSIFICATION	0.9999991247379003	WITHOUT_CLASSIFICATION	8.75262099571283E-7	DEFECT
// may be altered in validate	WITHOUT_CLASSIFICATION	0.9999990084603897	WITHOUT_CLASSIFICATION	9.915396102217404E-7	DEFECT
// set user-defined properties	WITHOUT_CLASSIFICATION	0.9999999982496414	WITHOUT_CLASSIFICATION	1.7503586790212216E-9	DEFECT
// set Java built-in properties separately, // b/c we won't inherit them.	WITHOUT_CLASSIFICATION	0.9999938386203416	WITHOUT_CLASSIFICATION	6.161379658472822E-6	DEFECT
// set all properties from calling project	WITHOUT_CLASSIFICATION	0.9999994557838089	WITHOUT_CLASSIFICATION	5.442161910832021E-7	DEFECT
// has been set explicitly	WITHOUT_CLASSIFICATION	0.999999616862182	WITHOUT_CLASSIFICATION	3.831378179486671E-7	DEFECT
// Are we trying to call the target in which we are defined (or // the build file if this is a top level task)?	WITHOUT_CLASSIFICATION	0.9999999979361481	WITHOUT_CLASSIFICATION	2.063851977849055E-9	DEFECT
// help the gc	WITHOUT_CLASSIFICATION	0.9999975711315947	WITHOUT_CLASSIFICATION	2.4288684052216166E-6	DEFECT
// remove duplicate properties - last property wins // Needed for backward compatibility	WITHOUT_CLASSIFICATION	0.9999992941205972	WITHOUT_CLASSIFICATION	7.058794029319681E-7	DEFECT
// Now add all references that are not defined in the // subproject, if inheritRefs is true	WITHOUT_CLASSIFICATION	0.9999996361067979	WITHOUT_CLASSIFICATION	3.6389320204944775E-7	DEFECT
// not Clonable	WITHOUT_CLASSIFICATION	0.9999997424410618	WITHOUT_CLASSIFICATION	2.575589381643637E-7	DEFECT
// ignore this if the class being referenced does not have // a set project method.	WITHOUT_CLASSIFICATION	0.9999884271236638	WITHOUT_CLASSIFICATION	1.157287633618853E-5	DEFECT
// basedir and ant.file get special treatment in execute()	WITHOUT_CLASSIFICATION	0.9999981372124734	WITHOUT_CLASSIFICATION	1.862787526616324E-6	DEFECT
// don't re-set user properties, avoid the warning message	WITHOUT_CLASSIFICATION	0.9999992143663808	WITHOUT_CLASSIFICATION	7.856336191057003E-7	DEFECT
// no user property	WITHOUT_CLASSIFICATION	0.9999995578380716	WITHOUT_CLASSIFICATION	4.4216192849335475E-7	DEFECT
// @note: it is a string and not a file to handle relative/absolute // otherwise a relative file will be resolved based on the current // basedir.	WITHOUT_CLASSIFICATION	0.9999988478558471	WITHOUT_CLASSIFICATION	1.152144152771223E-6	DEFECT
/*     * Get the (sub)-Project instance currently in use.     * @return Project     * @since Ant 1.7     */	WITHOUT_CLASSIFICATION	0.9999989432915031	WITHOUT_CLASSIFICATION	1.0567084969617736E-6	DEFECT
// check to make sure that the given dir isn't a symlink // the comparison of absolute path and canonical path // catches this	WITHOUT_CLASSIFICATION	0.9983117128547324	WITHOUT_CLASSIFICATION	0.0016882871452675978	DEFECT
//validation logic	WITHOUT_CLASSIFICATION	0.9999928763582903	WITHOUT_CLASSIFICATION	7.123641709820219E-6	DEFECT
//this isnt strictly needed, but by being fussy now, //we can change implementation details later	WITHOUT_CLASSIFICATION	0.9999947963629273	WITHOUT_CLASSIFICATION	5.203637072679427E-6	DEFECT
//special case single jar handling with signedjar attribute set	WITHOUT_CLASSIFICATION	0.999999976685924	WITHOUT_CLASSIFICATION	2.3314076012877386E-8	DEFECT
// single jar processing	WITHOUT_CLASSIFICATION	0.9999999653232501	WITHOUT_CLASSIFICATION	3.467674990807121E-8	DEFECT
//return here.	WITHOUT_CLASSIFICATION	0.9999467892694246	WITHOUT_CLASSIFICATION	5.32107305753639E-5	DEFECT
//set up our mapping policy	WITHOUT_CLASSIFICATION	0.9999998469679681	WITHOUT_CLASSIFICATION	1.5303203191292888E-7	DEFECT
//no mapper? use the identity policy	WITHOUT_CLASSIFICATION	0.9999971724153335	WITHOUT_CLASSIFICATION	2.8275846665480103E-6	DEFECT
//determine the destination filename via the mapper	WITHOUT_CLASSIFICATION	0.9999999251541805	WITHOUT_CLASSIFICATION	7.484581955208382E-8	DEFECT
//we only like simple mappers.	WITHOUT_CLASSIFICATION	0.9999408171004602	WITHOUT_CLASSIFICATION	5.9182899539715526E-5	DEFECT
//DO NOT SET THE -signedjar OPTION if source==dest //unless you like fielding hotspot crash reports	WITHOUT_CLASSIFICATION	0.9999996319680154	WITHOUT_CLASSIFICATION	3.680319844800831E-7	DEFECT
//add -tsa operations if declared	WITHOUT_CLASSIFICATION	0.9999998805591347	WITHOUT_CLASSIFICATION	1.194408653021369E-7	DEFECT
//JAR source is required	WITHOUT_CLASSIFICATION	0.9999638851284363	WITHOUT_CLASSIFICATION	3.611487156380246E-5	DEFECT
//alias is required for signing	WITHOUT_CLASSIFICATION	0.9997286588020412	WITHOUT_CLASSIFICATION	2.7134119795870295E-4	DEFECT
// restore the lastModified attribute	WITHOUT_CLASSIFICATION	0.9999999343878206	WITHOUT_CLASSIFICATION	6.561217937079555E-8	DEFECT
//we normally compare destination with source	WITHOUT_CLASSIFICATION	0.9999989280691033	WITHOUT_CLASSIFICATION	1.0719308967337678E-6	DEFECT
//but if no dest is specified, compare source to source	WITHOUT_CLASSIFICATION	0.9999999854156532	WITHOUT_CLASSIFICATION	1.4584346852815316E-8	DEFECT
//if, by any means, the destfile and source match,	WITHOUT_CLASSIFICATION	0.99999953390152	WITHOUT_CLASSIFICATION	4.660984799893415E-7	DEFECT
//we check the presence of signatures on lazy signing	WITHOUT_CLASSIFICATION	0.9999931777829012	WITHOUT_CLASSIFICATION	6.822217098727672E-6	DEFECT
//unsigned or non-lazy self signings are always false	WITHOUT_CLASSIFICATION	0.999974349004158	WITHOUT_CLASSIFICATION	2.5650995841864517E-5	DEFECT
//if they are different, the timestamps are used	WITHOUT_CLASSIFICATION	0.9999999497937805	WITHOUT_CLASSIFICATION	5.0206219625489296E-8	DEFECT
//just log this	WITHOUT_CLASSIFICATION	0.99999249292131	WITHOUT_CLASSIFICATION	7.5070786899573E-6	DEFECT
// fileutils	WITHOUT_CLASSIFICATION	0.9999998553204416	WITHOUT_CLASSIFICATION	1.4467955846095086E-7	DEFECT
// --- Fields --	WITHOUT_CLASSIFICATION	0.999998801671328	WITHOUT_CLASSIFICATION	1.1983286719989326E-6	DEFECT
// Keep a hashtable of attributes added by this task. // This task is allow to override its own properties // but not other properties.  So we need to keep track // of which properties we've added.	WITHOUT_CLASSIFICATION	0.9999999243414671	WITHOUT_CLASSIFICATION	7.565853296056063E-8	DEFECT
// Error generated during parsing	WITHOUT_CLASSIFICATION	0.9999957609944065	WITHOUT_CLASSIFICATION	4.239005593505979E-6	DEFECT
// Parser with specified options can't be built	WITHOUT_CLASSIFICATION	0.9999956420300836	WITHOUT_CLASSIFICATION	4.35796991638125E-6	DEFECT
// I/O error	WITHOUT_CLASSIFICATION	0.9999979959837249	WITHOUT_CLASSIFICATION	2.004016275232055E-6	DEFECT
// Set the prefix for this node to include its tag name.	WITHOUT_CLASSIFICATION	0.9999906751862722	WITHOUT_CLASSIFICATION	9.324813727840876E-6	DEFECT
// Pass the container to the processing of this node,	WITHOUT_CLASSIFICATION	0.9999997517621525	WITHOUT_CLASSIFICATION	2.4823784750731003E-7	DEFECT
// now, iterate through children.	WITHOUT_CLASSIFICATION	0.9999997881758637	WITHOUT_CLASSIFICATION	2.1182413622622423E-7	DEFECT
// For each child, pass the object added by // processNode to its children -- in other word, each // object can pass information along to its children.	WITHOUT_CLASSIFICATION	0.9999989600605633	WITHOUT_CLASSIFICATION	1.039939436666282E-6	DEFECT
// The value of an id attribute of this node.	WITHOUT_CLASSIFICATION	0.9999970906172252	WITHOUT_CLASSIFICATION	2.9093827748583116E-6	DEFECT
// Is there an id attribute?	WITHOUT_CLASSIFICATION	0.9999981653488207	WITHOUT_CLASSIFICATION	1.8346511794223002E-6	DEFECT
// Now, iterate through the attributes adding them.	WITHOUT_CLASSIFICATION	0.9999999062909648	WITHOUT_CLASSIFICATION	9.370903528896058E-8	DEFECT
/*                     * The main conditional logic -- if the attribute                     * is somehow "special" (i.e., it has known                     * semantic meaning) then deal with it                     * appropriately.                     */	WITHOUT_CLASSIFICATION	0.9999859646815583	WITHOUT_CLASSIFICATION	1.4035318441634358E-5	DEFECT
// ID has already been found above.	WITHOUT_CLASSIFICATION	0.9999995662522494	WITHOUT_CLASSIFICATION	4.3374775051793436E-7	DEFECT
// A "path" attribute for a node within a Path object.	WITHOUT_CLASSIFICATION	0.9999957000602326	WITHOUT_CLASSIFICATION	4.299939767356663E-6	DEFECT
// A node identifying a new path	WITHOUT_CLASSIFICATION	0.999996526373695	WITHOUT_CLASSIFICATION	3.4736263051268585E-6	DEFECT
// For the text node, add a property.	WITHOUT_CLASSIFICATION	0.9999984035144498	WITHOUT_CLASSIFICATION	1.596485550132743E-6	DEFECT
// If the containing object was a String, then use it as the ID.	WITHOUT_CLASSIFICATION	0.9999998957495752	WITHOUT_CLASSIFICATION	1.0425042484618343E-7	DEFECT
// If this attribute was added by this task, then // we append this value to the existing value. // We use the setProperty method which will // forcibly override the property if it already exists. // We need to put these properties into the project // when we read them, though (instead of keeping them // outside of the project and batch adding them at the end) // to allow other properties to reference them.	WITHOUT_CLASSIFICATION	0.9999997972713895	WITHOUT_CLASSIFICATION	2.027286104751085E-7	DEFECT
// Never include the "refid" attribute as part of the // attribute name.	WITHOUT_CLASSIFICATION	0.9999999999885315	WITHOUT_CLASSIFICATION	1.1468539803541342E-11	DEFECT
// Otherwise, return it appended unless property to hide it is set.	WITHOUT_CLASSIFICATION	0.9999914358285887	WITHOUT_CLASSIFICATION	8.56417141127801E-6	DEFECT
/* Expose members for extensibility */	WITHOUT_CLASSIFICATION	0.9999917639399889	WITHOUT_CLASSIFICATION	8.236060011068069E-6	DEFECT
// delegate this way around to support subclasses that // overwrite getFile	WITHOUT_CLASSIFICATION	0.9999999234737292	WITHOUT_CLASSIFICATION	7.65262708528604E-8	DEFECT
//we arent fully defined yet. this is an error unless //we are in an antlib, in which case the resource name is determined //automatically. //NB: URIs in the ant core package will be "" at this point.	WITHOUT_CLASSIFICATION	0.9993051888507063	WITHOUT_CLASSIFICATION	6.948111492936894E-4	DEFECT
//convert the URI to a resource	WITHOUT_CLASSIFICATION	0.9999997606835747	WITHOUT_CLASSIFICATION	2.393164253216473E-7	DEFECT
//handle new style full paths to an antlib, in which //all but the forward slashes are allowed.	WITHOUT_CLASSIFICATION	0.9999999153633509	WITHOUT_CLASSIFICATION	8.463664911584914E-8	DEFECT
//if we haven't already named an XML file, it gets antlib.xml	WITHOUT_CLASSIFICATION	0.9999329121030138	WITHOUT_CLASSIFICATION	6.708789698611119E-5	DEFECT
//convert from a package to a path	WITHOUT_CLASSIFICATION	0.9999996583335234	WITHOUT_CLASSIFICATION	3.416664764644135E-7	DEFECT
// Here if there is an error	WITHOUT_CLASSIFICATION	0.9999998898777914	WITHOUT_CLASSIFICATION	1.1012220863983543E-7	DEFECT
// Fall Through	WITHOUT_CLASSIFICATION	0.9999903766941819	WITHOUT_CLASSIFICATION	9.623305817995022E-6	DEFECT
// log at a lower level	WITHOUT_CLASSIFICATION	0.9999997237993807	WITHOUT_CLASSIFICATION	2.762006192486996E-7	DEFECT
// Ignore the problem	WITHOUT_CLASSIFICATION	0.9999992532235918	WITHOUT_CLASSIFICATION	7.467764082999068E-7	DEFECT
//trick to evoke "basedir not set" if null:	WITHOUT_CLASSIFICATION	0.9999398022192143	WITHOUT_CLASSIFICATION	6.0197780785724953E-5	DEFECT
//no sources = nothing to compare; no targets = nothing to delete:	WITHOUT_CLASSIFICATION	0.9999999825855966	WITHOUT_CLASSIFICATION	1.741440332469775E-8	DEFECT
// Members	WITHOUT_CLASSIFICATION	0.9999998890430167	WITHOUT_CLASSIFICATION	1.1095698329065373E-7	DEFECT
// Members	WITHOUT_CLASSIFICATION	0.9999998890430167	WITHOUT_CLASSIFICATION	1.1095698329065373E-7	DEFECT
// If we are a reference, create a Path from the reference	WITHOUT_CLASSIFICATION	0.999999051414179	WITHOUT_CLASSIFICATION	9.48585821041291E-7	DEFECT
// for NetWare and OS/2, piggy-back on Windows, since here and // in the apply code, the same assumptions can be made as with // windows - that \\ is an OK separator, and do comparisons // case-insensitive.	WITHOUT_CLASSIFICATION	0.9995502853314319	WITHOUT_CLASSIFICATION	4.497146685682008E-4	DEFECT
// If the element starts with the configured prefix, then // convert the prefix to the configured 'to' value.	WITHOUT_CLASSIFICATION	0.9999965260417735	WITHOUT_CLASSIFICATION	3.473958226609721E-6	DEFECT
// Currently, we deal with only two path formats: Unix and Windows // And Unix is everything that is not Windows	WITHOUT_CLASSIFICATION	0.9965287067989952	WITHOUT_CLASSIFICATION	0.0034712932010049456	DEFECT
// may be altered in validateSetup // may be altered in validateSetup	WITHOUT_CLASSIFICATION	0.9999992608337575	WITHOUT_CLASSIFICATION	7.39166242638351E-7	DEFECT
// validate our setup	WITHOUT_CLASSIFICATION	0.999999943026938	WITHOUT_CLASSIFICATION	5.6973062121750104E-8	DEFECT
// Currently, we deal with only two path formats: Unix and Windows // And Unix is everything that is not Windows // (with the exception for NetWare and OS/2 below)	WITHOUT_CLASSIFICATION	0.999507591583173	WITHOUT_CLASSIFICATION	4.924084168270204E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999229243365	WITHOUT_CLASSIFICATION	7.707566353111588E-8	DEFECT
// Get the list of path components in canonical form	WITHOUT_CLASSIFICATION	0.9999999873875681	WITHOUT_CLASSIFICATION	1.2612431966382031E-8	DEFECT
// Apply the path prefix map	WITHOUT_CLASSIFICATION	0.9996609655030424	WITHOUT_CLASSIFICATION	3.390344969575511E-4	DEFECT
// Now convert the path and file separator characters from the // current os to the target os.	WITHOUT_CLASSIFICATION	0.9999999993487727	WITHOUT_CLASSIFICATION	6.512273017522872E-10	DEFECT
// Place the result into the specified property, // unless setonempty == false	WITHOUT_CLASSIFICATION	0.9999999887348017	WITHOUT_CLASSIFICATION	1.1265198389667406E-8	DEFECT
// Iterate over the map entries and apply each one. // Stop when one of the entries actually changes the element.	WITHOUT_CLASSIFICATION	0.9999999455609562	WITHOUT_CLASSIFICATION	5.4439043876845965E-8	DEFECT
// Note I'm using "!=" to see if we got a new object back from // the apply method.	WITHOUT_CLASSIFICATION	0.9999999101116827	WITHOUT_CLASSIFICATION	8.988831725610556E-8	DEFECT
// We applied one, so we're done	WITHOUT_CLASSIFICATION	0.9999999993346118	WITHOUT_CLASSIFICATION	6.653881850758909E-10	DEFECT
// Determine the separator strings.  The dirsep and pathsep attributes // override the targetOS settings.	WITHOUT_CLASSIFICATION	0.999999999993456	WITHOUT_CLASSIFICATION	6.543996074271698E-12	DEFECT
// override with pathsep=	WITHOUT_CLASSIFICATION	0.9999999434416316	WITHOUT_CLASSIFICATION	5.655836831522135E-8	DEFECT
// override with dirsep=	WITHOUT_CLASSIFICATION	0.999999928182779	WITHOUT_CLASSIFICATION	7.181722096892177E-8	DEFECT
// Check if used by attributes	WITHOUT_CLASSIFICATION	0.9999999939907918	WITHOUT_CLASSIFICATION	6.00920812701867E-9	DEFECT
// ? is there an xml api for this ?	WITHOUT_CLASSIFICATION	0.9999993909954725	WITHOUT_CLASSIFICATION	6.090045273678709E-7	DEFECT
////////////////////////////////////////////////////////////////////// // ATTRIBUTES	WITHOUT_CLASSIFICATION	0.9999977297849757	WITHOUT_CLASSIFICATION	2.270215024280314E-6	DEFECT
////////////////////////////////////////////////////////////////////// // CONSTRUCTORS / INITIALIZERS	WITHOUT_CLASSIFICATION	0.9999990118277896	WITHOUT_CLASSIFICATION	9.881722104296804E-7	DEFECT
////////////////////////////////////////////////////////////////////// // ACCESSOR METHODS	WITHOUT_CLASSIFICATION	0.9999958137513825	WITHOUT_CLASSIFICATION	4.186248617429501E-6	DEFECT
//Validate mandatory attributes	WITHOUT_CLASSIFICATION	0.9999865335957009	WITHOUT_CLASSIFICATION	1.3466404299154149E-5	DEFECT
//the property attribute must have access to a property file	WITHOUT_CLASSIFICATION	0.9999971940588402	WITHOUT_CLASSIFICATION	2.805941159728064E-6	DEFECT
//Make sure property exists in property file	WITHOUT_CLASSIFICATION	0.9996812414236225	WITHOUT_CLASSIFICATION	3.1875857637754046E-4	DEFECT
//Default is empty string	WITHOUT_CLASSIFICATION	0.9999997966721654	WITHOUT_CLASSIFICATION	2.0332783461509758E-7	DEFECT
// Avoid runtime problem on pre 1.4 when compiling post 1.4	WITHOUT_CLASSIFICATION	0.9997268324346831	WITHOUT_CLASSIFICATION	2.731675653169282E-4	DEFECT
// end of finally	WITHOUT_CLASSIFICATION	0.9999797436677939	WITHOUT_CLASSIFICATION	2.025633220606263E-5	DEFECT
//look for and print warnings	WITHOUT_CLASSIFICATION	0.9999991907843255	WITHOUT_CLASSIFICATION	8.092156744888792E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999997594604898	WITHOUT_CLASSIFICATION	2.4053951019376697E-7	DEFECT
////////////////////////////////////////////////////////////////////// // ATTRIBUTES	WITHOUT_CLASSIFICATION	0.9999977297849757	WITHOUT_CLASSIFICATION	2.270215024280314E-6	DEFECT
////////////////////////////////////////////////////////////////////// // ACCESSOR METHODS	WITHOUT_CLASSIFICATION	0.9999958137513825	WITHOUT_CLASSIFICATION	4.186248617429501E-6	DEFECT
// line separators in values and tokens are "\n" // in order to compare with the file contents, replace them // as needed	WITHOUT_CLASSIFICATION	0.9999999884643634	WITHOUT_CLASSIFICATION	1.1535636560455683E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999229243365	WITHOUT_CLASSIFICATION	7.707566353111588E-8	DEFECT
// Ignore Exception	WITHOUT_CLASSIFICATION	0.9999997655677488	WITHOUT_CLASSIFICATION	2.3443225114823844E-7	DEFECT
// no errors so far	WITHOUT_CLASSIFICATION	0.9999999566052137	WITHOUT_CLASSIFICATION	4.3394786346183256E-8	DEFECT
// If we don't know the type of the line // and we are in emacs mode, it will be // an error, because in this mode, jikes won't // always print "error", but sometimes other // keywords like "Syntax". We should look for // all those keywords.	WITHOUT_CLASSIFICATION	0.999999073850027	WITHOUT_CLASSIFICATION	9.261499730195925E-7	DEFECT
// plain impossible	WITHOUT_CLASSIFICATION	0.9999999151131699	WITHOUT_CLASSIFICATION	8.48868301764514E-8	DEFECT
// We must check if the process was not stopped // before being here	WITHOUT_CLASSIFICATION	0.9999994306175494	WITHOUT_CLASSIFICATION	5.693824507090032E-7	DEFECT
// the process is not terminated, if this is really // a timeout and not a manual stop then kill it.	WITHOUT_CLASSIFICATION	0.9999814182369713	WITHOUT_CLASSIFICATION	1.858176302867457E-5	DEFECT
////////////////////////////////////////////////////////////////////// // CORE / MAIN BODY	WITHOUT_CLASSIFICATION	0.9999813711274542	WITHOUT_CLASSIFICATION	1.8628872545758677E-5	DEFECT
// get the recorder entry	WITHOUT_CLASSIFICATION	0.999993296678087	WITHOUT_CLASSIFICATION	6.703321913090812E-6	DEFECT
// set the values on the recorder	WITHOUT_CLASSIFICATION	0.9999962503370428	WITHOUT_CLASSIFICATION	3.749662957205238E-6	DEFECT
////////////////////////////////////////////////////////////////////// // INNER CLASSES	WITHOUT_CLASSIFICATION	0.9999980756918868	WITHOUT_CLASSIFICATION	1.924308113176697E-6	DEFECT
// create a recorder entry	WITHOUT_CLASSIFICATION	0.9999992883313761	WITHOUT_CLASSIFICATION	7.116686238426041E-7	DEFECT
// Use '/' to calculate digest based on file name. // This is required in order to get the same result // on different platforms.	WITHOUT_CLASSIFICATION	0.9999997825537783	WITHOUT_CLASSIFICATION	2.1744622167719957E-7	DEFECT
// Read the checksum from disk.	WITHOUT_CLASSIFICATION	0.9999993182091103	WITHOUT_CLASSIFICATION	6.817908896210295E-7	DEFECT
// A separate directory was explicitly declared	WITHOUT_CLASSIFICATION	0.9999998152242765	WITHOUT_CLASSIFICATION	1.8477572353929988E-7	DEFECT
// Empty statement	WITHOUT_CLASSIFICATION	0.9999998643993403	WITHOUT_CLASSIFICATION	1.3560065967648597E-7	DEFECT
//can either be a property name string or a file	WITHOUT_CLASSIFICATION	0.9999991377810169	WITHOUT_CLASSIFICATION	8.6221898317722E-7	DEFECT
// file is on wrong format, swallow	WITHOUT_CLASSIFICATION	0.9999865153640315	WITHOUT_CLASSIFICATION	1.3484635968396547E-5	DEFECT
// try to be smart, not to be fooled by a weird directory name	WITHOUT_CLASSIFICATION	0.9999994671571772	WITHOUT_CLASSIFICATION	5.328428228294457E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999997594604898	WITHOUT_CLASSIFICATION	2.4053951019376697E-7	DEFECT
// Close the output stream.	WITHOUT_CLASSIFICATION	0.9999999929182724	WITHOUT_CLASSIFICATION	7.081727631462429E-9	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999229243365	WITHOUT_CLASSIFICATION	7.707566353111588E-8	DEFECT
// File is Comparable, so sorting is trivial	WITHOUT_CLASSIFICATION	0.9999999310335678	WITHOUT_CLASSIFICATION	6.896643219347026E-8	DEFECT
// Loop over the checksums and generate a total hash.	WITHOUT_CLASSIFICATION	0.9999999966853198	WITHOUT_CLASSIFICATION	3.314680151013839E-9	DEFECT
// Add the digest for the file content	WITHOUT_CLASSIFICATION	0.9999999811181893	WITHOUT_CLASSIFICATION	1.888181072668291E-8	DEFECT
// Add the file path	WITHOUT_CLASSIFICATION	0.9999997788913518	WITHOUT_CLASSIFICATION	2.2110864813503653E-7	DEFECT
// two characters form the hex value.	WITHOUT_CLASSIFICATION	0.9999998758965132	WITHOUT_CLASSIFICATION	1.2410348685267826E-7	DEFECT
// We just set the prefix for this fileset, and pass it up.	WITHOUT_CLASSIFICATION	0.9999920533190748	WITHOUT_CLASSIFICATION	7.946680925116993E-6	DEFECT
// Check if the service is configured correctly	WITHOUT_CLASSIFICATION	0.9999754792301773	WITHOUT_CLASSIFICATION	2.4520769822708335E-5	DEFECT
// if we haven't got the manifest yet, attempt to // get it now and have manifest be the final merge	WITHOUT_CLASSIFICATION	0.999998433244259	WITHOUT_CLASSIFICATION	1.566755740970964E-6	DEFECT
// time to write the manifest	WITHOUT_CLASSIFICATION	0.9999999034073579	WITHOUT_CLASSIFICATION	9.659264208144731E-8	DEFECT
// encoding must be UTF8 as specified in the specs.	WITHOUT_CLASSIFICATION	0.999999998381927	WITHOUT_CLASSIFICATION	1.618072966688696E-9	DEFECT
// version-info blankline	WITHOUT_CLASSIFICATION	0.9999999254195868	WITHOUT_CLASSIFICATION	7.458041316130136E-8	DEFECT
// header newline	WITHOUT_CLASSIFICATION	0.9999990022910542	WITHOUT_CLASSIFICATION	9.977089458562804E-7	DEFECT
// If this is the same name specified in 'manifest', this // is the manifest to use	WITHOUT_CLASSIFICATION	0.9999998701789671	WITHOUT_CLASSIFICATION	1.2982103300930902E-7	DEFECT
// we add this to our group of fileset manifests	WITHOUT_CLASSIFICATION	0.999999904010329	WITHOUT_CLASSIFICATION	9.598967101903147E-8	DEFECT
// assuming 'skip' otherwise // don't warn if skip has been requested explicitly, warn if user // didn't set the attribute	WITHOUT_CLASSIFICATION	0.9999949717266045	WITHOUT_CLASSIFICATION	5.028273395562209E-6	DEFECT
// Hide warning also as it makes no sense since // the filesetmanifest attribute itself has been // hidden	WITHOUT_CLASSIFICATION	0.999999933607163	WITHOUT_CLASSIFICATION	6.639283699227505E-8	DEFECT
// need to handle manifest as a special check	WITHOUT_CLASSIFICATION	0.999999924927044	WITHOUT_CLASSIFICATION	7.507295592107365E-8	DEFECT
// if it doesn't exist, it will get created anyway, don't // bother with any up-to-date checks.	WITHOUT_CLASSIFICATION	0.9999999791948834	WITHOUT_CLASSIFICATION	2.0805116605872086E-8	DEFECT
// no existing archive	WITHOUT_CLASSIFICATION	0.9999999973859096	WITHOUT_CLASSIFICATION	2.6140904011319765E-9	DEFECT
// Ignore close exception	WITHOUT_CLASSIFICATION	0.9999998777262419	WITHOUT_CLASSIFICATION	1.22273758170479E-7	DEFECT
// we want to save this info if we are going to make another pass	WITHOUT_CLASSIFICATION	0.9999941464505953	WITHOUT_CLASSIFICATION	5.853549404831242E-6	DEFECT
// couldn't find it - must be on path	WITHOUT_CLASSIFICATION	0.9999985076744528	WITHOUT_CLASSIFICATION	1.492325547195129E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999997594604898	WITHOUT_CLASSIFICATION	2.4053951019376697E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999997594604898	WITHOUT_CLASSIFICATION	2.4053951019376697E-7	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9999976685470136	WITHOUT_CLASSIFICATION	2.331452986425402E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999229243365	WITHOUT_CLASSIFICATION	7.707566353111588E-8	DEFECT
// looks like nothing from META-INF should be added // and the check is not case insensitive. // see sun.misc.JarIndex	WITHOUT_CLASSIFICATION	0.9999993783130705	WITHOUT_CLASSIFICATION	6.216869295510281E-7	DEFECT
// name newline	WITHOUT_CLASSIFICATION	0.9999994657697173	WITHOUT_CLASSIFICATION	5.342302827024584E-7	DEFECT
// longest match comes first	WITHOUT_CLASSIFICATION	0.9999998202933784	WITHOUT_CLASSIFICATION	1.7970662163353444E-7	DEFECT
// META-INF would be skipped anyway, avoid index for // manifest-only jars.	WITHOUT_CLASSIFICATION	0.9993144699243665	WITHOUT_CLASSIFICATION	6.855300756335967E-4	DEFECT
// a file, not in the root // since the jar may be one without directory // entries, add the parent dir of this file as // well.	WITHOUT_CLASSIFICATION	0.9999998977741714	WITHOUT_CLASSIFICATION	1.022258286879535E-7	DEFECT
/*protected*/	WITHOUT_CLASSIFICATION	0.9999229154254232	WITHOUT_CLASSIFICATION	7.708457457674271E-5	DEFECT
// if the target file is not there, then it can't be up-to-date	WITHOUT_CLASSIFICATION	0.9999999472172771	WITHOUT_CLASSIFICATION	5.2782722790590584E-8	DEFECT
// if the source file isn't there, throw an exception	WITHOUT_CLASSIFICATION	0.9999995327629656	WITHOUT_CLASSIFICATION	4.672370343201322E-7	DEFECT
// by default, messages are always displayed	WITHOUT_CLASSIFICATION	0.9999997982102771	WITHOUT_CLASSIFICATION	2.017897228728554E-7	DEFECT
// need to keep the package private version for backwards compatibility	WITHOUT_CLASSIFICATION	0.9999994212567714	WITHOUT_CLASSIFICATION	5.787432285709474E-7	DEFECT
// we must keep two lists since other classes may modify the // filesets Vector (it is package private) without us noticing	WITHOUT_CLASSIFICATION	0.9999999701360768	WITHOUT_CLASSIFICATION	2.986392326766428E-8	DEFECT
// add the main fileset to the list of filesets to process.	WITHOUT_CLASSIFICATION	0.9999999951627145	WITHOUT_CLASSIFICATION	4.837285404328939E-9	DEFECT
// check if tar is out of date with respect to each // fileset	WITHOUT_CLASSIFICATION	0.9999999693500533	WITHOUT_CLASSIFICATION	3.064994663106502E-8	DEFECT
// warn or GNU	WITHOUT_CLASSIFICATION	0.9999989859456374	WITHOUT_CLASSIFICATION	1.014054362655108E-6	DEFECT
// don't add "" to the archive	WITHOUT_CLASSIFICATION	0.9999988884850083	WITHOUT_CLASSIFICATION	1.1115149917758988E-6	DEFECT
// '/' is appended for compatibility with the zip task.	WITHOUT_CLASSIFICATION	0.9999991335616549	WITHOUT_CLASSIFICATION	8.664383451432615E-7	DEFECT
// we would end up adding "" to the archive	WITHOUT_CLASSIFICATION	0.9999994535903479	WITHOUT_CLASSIFICATION	5.464096520610103E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999229243365	WITHOUT_CLASSIFICATION	7.707566353111588E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999229243365	WITHOUT_CLASSIFICATION	7.707566353111588E-8	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999997594604898	WITHOUT_CLASSIFICATION	2.4053951019376697E-7	DEFECT
// permissible values for compression attribute	WITHOUT_CLASSIFICATION	0.9999916373385033	WITHOUT_CLASSIFICATION	8.362661496659719E-6	DEFECT
// override permissions if set explicitly	WITHOUT_CLASSIFICATION	0.9999966712220884	WITHOUT_CLASSIFICATION	3.328777911604437E-6	DEFECT
// only override permissions if set explicitly	WITHOUT_CLASSIFICATION	0.9999883773901718	WITHOUT_CLASSIFICATION	1.1622609828192924E-5	DEFECT
// non-file resources	WITHOUT_CLASSIFICATION	0.9999999332424994	WITHOUT_CLASSIFICATION	6.675750064503329E-8	DEFECT
// non-file resources	WITHOUT_CLASSIFICATION	0.9999999332424994	WITHOUT_CLASSIFICATION	6.675750064503329E-8	DEFECT
//extend Comparison; retain for BC only	WITHOUT_CLASSIFICATION	0.999983761896172	WITHOUT_CLASSIFICATION	1.6238103828057022E-5	DEFECT
//when writing to the log, we'll see what's happening:	WITHOUT_CLASSIFICATION	0.9999996179435247	WITHOUT_CLASSIFICATION	3.820564753507451E-7	DEFECT
/*         * The initial version used DateFormat.SHORT for the         * time format, which ignores seconds.  If we want         * seconds as well, we need DateFormat.MEDIUM, which         * in turn would break all old build files.         *         * First try to parse with DateFormat.SHORT and if         * that fails with MEDIUM - throw an exception if both         * fail.         */	WITHOUT_CLASSIFICATION	0.9999999987887617	WITHOUT_CLASSIFICATION	1.2112383657979692E-9	DEFECT
//only set if successful to this point:	WITHOUT_CLASSIFICATION	0.999998832897002	WITHOUT_CLASSIFICATION	1.167102998008866E-6	DEFECT
// deal with the resource collections	WITHOUT_CLASSIFICATION	0.999999344170921	WITHOUT_CLASSIFICATION	6.558290789866604E-7	DEFECT
// deal with filesets in a special way since the task // originally also used the directories and Union won't return // them.	WITHOUT_CLASSIFICATION	0.99999970159416	WITHOUT_CLASSIFICATION	2.9840584005716253E-7	DEFECT
// use this to create file and deal with non-writable files	WITHOUT_CLASSIFICATION	0.9999999936640106	WITHOUT_CLASSIFICATION	6.335989362750765E-9	DEFECT
// When we leave this block we can be sure all data is really // stored in main memory before the new threads start, the new // threads will for sure load the data from main memory. // // This probably is slightly paranoid.	WITHOUT_CLASSIFICATION	0.9990180126103204	WITHOUT_CLASSIFICATION	9.819873896796535E-4	DEFECT
// start any daemon threads	WITHOUT_CLASSIFICATION	0.9999868600288926	WITHOUT_CLASSIFICATION	1.3139971107440565E-5	DEFECT
// now run main threads in limited numbers... // start initial batch of threads	WITHOUT_CLASSIFICATION	0.999997532522552	WITHOUT_CLASSIFICATION	2.4674774479850037E-6	DEFECT
// start the timeout thread	WITHOUT_CLASSIFICATION	0.9999998815677681	WITHOUT_CLASSIFICATION	1.1843223184027739E-7	DEFECT
// now find available running slots for the remaining threads	WITHOUT_CLASSIFICATION	0.9999999716430803	WITHOUT_CLASSIFICATION	2.8356919680866085E-8	DEFECT
// continue on outer while loop to get another // available slot	WITHOUT_CLASSIFICATION	0.9999999825975573	WITHOUT_CLASSIFICATION	1.7402442733094464E-8	DEFECT
// if we got here all slots in use, so sleep until // something happens	WITHOUT_CLASSIFICATION	0.9999995772711356	WITHOUT_CLASSIFICATION	4.2272886437683425E-7	DEFECT
// doesn't java know interruptions are rude? // just pretend it didn't happen and go about out business. // sheesh!	WITHOUT_CLASSIFICATION	0.9999991008177407	WITHOUT_CLASSIFICATION	8.991822592450943E-7	DEFECT
// are all threads finished	WITHOUT_CLASSIFICATION	0.9999984080519799	WITHOUT_CLASSIFICATION	1.5919480200510423E-6	DEFECT
// who would interrupt me at a time like this?	WITHOUT_CLASSIFICATION	0.999999167854555	WITHOUT_CLASSIFICATION	8.321454449880426E-7	DEFECT
// now did any of the threads throw an exception	WITHOUT_CLASSIFICATION	0.9999688576422564	WITHOUT_CLASSIFICATION	3.1142357743671154E-5	DEFECT
// return a bogus number	WITHOUT_CLASSIFICATION	0.9999998982952453	WITHOUT_CLASSIFICATION	1.0170475466694982E-7	DEFECT
// Should be safe to parse	WITHOUT_CLASSIFICATION	0.9999686376122302	WITHOUT_CLASSIFICATION	3.136238776979902E-5	DEFECT
// Check name is "antlib"	WITHOUT_CLASSIFICATION	0.9999998723805185	WITHOUT_CLASSIFICATION	1.2761948150333863E-7	DEFECT
//include locally for screening purposes	WITHOUT_CLASSIFICATION	0.9999995951682643	WITHOUT_CLASSIFICATION	4.0483173566940834E-7	DEFECT
// try to find the executable	WITHOUT_CLASSIFICATION	0.9999998099953957	WITHOUT_CLASSIFICATION	1.9000460423488788E-7	DEFECT
// now try to resolve against the dir if given	WITHOUT_CLASSIFICATION	0.9999999649575902	WITHOUT_CLASSIFICATION	3.504240983680247E-8	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999997594604898	WITHOUT_CLASSIFICATION	2.4053951019376697E-7	DEFECT
// throw further	WITHOUT_CLASSIFICATION	0.9999967921840899	WITHOUT_CLASSIFICATION	3.207815910145976E-6	DEFECT
// only the first build exception is reported	WITHOUT_CLASSIFICATION	0.9999951361702119	WITHOUT_CLASSIFICATION	4.863829788092628E-6	DEFECT
//include locally for screening purposes	WITHOUT_CLASSIFICATION	0.9999995951682643	WITHOUT_CLASSIFICATION	4.0483173566940834E-7	DEFECT
// mustSearchPath is false, or no PATH or not found - keep our // fingers crossed.	WITHOUT_CLASSIFICATION	0.9999995376433789	WITHOUT_CLASSIFICATION	4.6235662099929896E-7	DEFECT
// Quick fail if this is not a valid OS for the command	WITHOUT_CLASSIFICATION	0.9997285421178851	WITHOUT_CLASSIFICATION	2.7145788211491623E-4	DEFECT
// possibly altered in prepareExec	WITHOUT_CLASSIFICATION	0.9999947568126138	WITHOUT_CLASSIFICATION	5.243187386123081E-6	DEFECT
//hand osfamily off to Os class, if set	WITHOUT_CLASSIFICATION	0.9999685916350621	WITHOUT_CLASSIFICATION	3.140836493780756E-5	DEFECT
// this command will be executed only on the specified OS	WITHOUT_CLASSIFICATION	0.9979263949712238	WITHOUT_CLASSIFICATION	0.002073605028776229	DEFECT
// default directory to the project's base directory	WITHOUT_CLASSIFICATION	0.9999998116202293	WITHOUT_CLASSIFICATION	1.8837977073473306E-7	DEFECT
// assume the worst	WITHOUT_CLASSIFICATION	0.9999999384998398	WITHOUT_CLASSIFICATION	6.150016025198961E-8	DEFECT
//test for and handle a forced process death	WITHOUT_CLASSIFICATION	0.9999999975283345	WITHOUT_CLASSIFICATION	2.471665462098059E-9	DEFECT
// show the command	WITHOUT_CLASSIFICATION	0.9999897945295535	WITHOUT_CLASSIFICATION	1.0205470446457552E-5	DEFECT
// close the output file if required	WITHOUT_CLASSIFICATION	0.9999999497136998	WITHOUT_CLASSIFICATION	5.028630019809724E-8	DEFECT
// Same as regular <copy> task... see at end-of-file!	WITHOUT_CLASSIFICATION	0.999980404488502	WITHOUT_CLASSIFICATION	1.959551149807932E-5	DEFECT
// Override Task#init	WITHOUT_CLASSIFICATION	0.9999999887063927	WITHOUT_CLASSIFICATION	1.1293607340816397E-8	DEFECT
// Instantiate it	WITHOUT_CLASSIFICATION	0.9999991400267392	WITHOUT_CLASSIFICATION	8.599732607758024E-7	DEFECT
// Default config of <mycopy> for our purposes.	WITHOUT_CLASSIFICATION	0.9999999848369708	WITHOUT_CLASSIFICATION	1.5163029176156513E-8	DEFECT
// Override Task#execute	WITHOUT_CLASSIFICATION	0.9999999867332767	WITHOUT_CLASSIFICATION	1.3266723208550702E-8	DEFECT
// The destination of the files to copy	WITHOUT_CLASSIFICATION	0.9999989748854883	WITHOUT_CLASSIFICATION	1.025114511719221E-6	DEFECT
// The complete list of files to copy	WITHOUT_CLASSIFICATION	0.9999923931257024	WITHOUT_CLASSIFICATION	7.606874297596298E-6	DEFECT
// Copy all the necessary out-of-date files	WITHOUT_CLASSIFICATION	0.999999914119833	WITHOUT_CLASSIFICATION	8.588016699414391E-8	DEFECT
// Do we need to perform further processing?	WITHOUT_CLASSIFICATION	0.9999999835924156	WITHOUT_CLASSIFICATION	1.6407584409938867E-8	DEFECT
// nope ;-)	WITHOUT_CLASSIFICATION	0.9999992420724432	WITHOUT_CLASSIFICATION	7.579275568314574E-7	DEFECT
// Get rid of all files not listed in the source filesets.	WITHOUT_CLASSIFICATION	0.9999998229751321	WITHOUT_CLASSIFICATION	1.7702486783818845E-7	DEFECT
// Get rid of empty directories on the destination side	WITHOUT_CLASSIFICATION	0.9999999834552948	WITHOUT_CLASSIFICATION	1.6544705241361514E-8	DEFECT
// want to keep toDir itself	WITHOUT_CLASSIFICATION	0.9999999823862404	WITHOUT_CLASSIFICATION	1.7613759611999106E-8	DEFECT
// ds returns the directories in lexicographic order. // iterating through the array backwards means we are deleting // leaves before their parent nodes - thus making sure (well, // more likely) that the directories are empty when we try to // delete them.	WITHOUT_CLASSIFICATION	0.999999996894968	WITHOUT_CLASSIFICATION	3.1050320919324428E-9	DEFECT
// Test here again to avoid method call for non-directories!	WITHOUT_CLASSIFICATION	0.9999994278136309	WITHOUT_CLASSIFICATION	5.721863691401121E-7	DEFECT
// must match the default value of Ant#inheritAll	WITHOUT_CLASSIFICATION	0.9999999891509231	WITHOUT_CLASSIFICATION	1.0849076901811775E-8	DEFECT
// must match the default value of Ant#inheritRefs	WITHOUT_CLASSIFICATION	0.9999999964982887	WITHOUT_CLASSIFICATION	3.501711348379964E-9	DEFECT
/*<TargetElement>*/	WITHOUT_CLASSIFICATION	0.999998797215511	WITHOUT_CLASSIFICATION	1.2027844889834258E-6	DEFECT
// check if one of the builds failed in keep going mode	WITHOUT_CLASSIFICATION	0.9999997662016151	WITHOUT_CLASSIFICATION	2.337983847888823E-7	DEFECT
//     REVISIT: Defaults to the target name that contains this task if not specified.	WITHOUT_CLASSIFICATION	0.9999999750583858	WITHOUT_CLASSIFICATION	2.494161419767217E-8	DEFECT
// END class SubAnt	WITHOUT_CLASSIFICATION	0.9999982517659372	WITHOUT_CLASSIFICATION	1.7482340628017552E-6	DEFECT
// Child elements.	WITHOUT_CLASSIFICATION	0.999999976036227	WITHOUT_CLASSIFICATION	2.396377297526564E-8	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999999198791225	WITHOUT_CLASSIFICATION	8.012087743264267E-8	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999997594604898	WITHOUT_CLASSIFICATION	2.4053951019376697E-7	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9999976685470136	WITHOUT_CLASSIFICATION	2.331452986425402E-6	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9999976685470136	WITHOUT_CLASSIFICATION	2.331452986425402E-6	DEFECT
// Empty	WITHOUT_CLASSIFICATION	0.9999958144970209	WITHOUT_CLASSIFICATION	4.185502979104723E-6	DEFECT
// this command will be executed only on the specified OS	WITHOUT_CLASSIFICATION	0.9979263949712238	WITHOUT_CLASSIFICATION	0.002073605028776229	DEFECT
// default directory to the project's base directory	WITHOUT_CLASSIFICATION	0.9999998116202293	WITHOUT_CLASSIFICATION	1.8837977073473306E-7	DEFECT
// assume the worst	WITHOUT_CLASSIFICATION	0.9999999384998398	WITHOUT_CLASSIFICATION	6.150016025198961E-8	DEFECT
// show the command	WITHOUT_CLASSIFICATION	0.9999897945295535	WITHOUT_CLASSIFICATION	1.0205470446457552E-5	DEFECT
// close the output file if required	WITHOUT_CLASSIFICATION	0.9999999497136998	WITHOUT_CLASSIFICATION	5.028630019809724E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999229243365	WITHOUT_CLASSIFICATION	7.707566353111588E-8	DEFECT
// This directory may have become empty... // We need to re-query its children list!	WITHOUT_CLASSIFICATION	0.9833694821432089	WITHOUT_CLASSIFICATION	0.0166305178567911	DEFECT
// // Various copy attributes/subelements of <copy> passed thru to <mycopy> //	WITHOUT_CLASSIFICATION	0.9999999936741644	WITHOUT_CLASSIFICATION	6.325835541826315E-9	DEFECT
// List of files that must be copied, irrelevant from the // fact that they are newer or not than the destination.	WITHOUT_CLASSIFICATION	0.9999999980770233	WITHOUT_CLASSIFICATION	1.92297676650917E-9	DEFECT
// cf. NB #47191	WITHOUT_CLASSIFICATION	0.9999987272573958	WITHOUT_CLASSIFICATION	1.2727426043008226E-6	DEFECT
// Should work whether or not redirector.inputStream == null:	WITHOUT_CLASSIFICATION	0.9988599822472294	WITHOUT_CLASSIFICATION	0.0011400177527705808	DEFECT
// #24918: send standard input to the process by default.	WITHOUT_CLASSIFICATION	0.9999907435356387	WITHOUT_CLASSIFICATION	9.256464361274524E-6	DEFECT
// test if os match	WITHOUT_CLASSIFICATION	0.9999999646547285	WITHOUT_CLASSIFICATION	3.53452715630018E-8	DEFECT
// exec command on system runtime	WITHOUT_CLASSIFICATION	0.999848537231122	WITHOUT_CLASSIFICATION	1.5146276887803345E-4	DEFECT
// copy input and error to the output stream	WITHOUT_CLASSIFICATION	0.9999987708070633	WITHOUT_CLASSIFICATION	1.2291929366279542E-6	DEFECT
// starts pumping away the generated output/error	WITHOUT_CLASSIFICATION	0.9999999078226778	WITHOUT_CLASSIFICATION	9.217732218500597E-8	DEFECT
// Wait for everything to finish	WITHOUT_CLASSIFICATION	0.9999995541727977	WITHOUT_CLASSIFICATION	4.458272022023026E-7	DEFECT
// check its exit value	WITHOUT_CLASSIFICATION	0.9999998649976853	WITHOUT_CLASSIFICATION	1.3500231456786405E-7	DEFECT
// Inner class for continually pumping the input stream during // Process's runtime.	WITHOUT_CLASSIFICATION	0.999957472094408	WITHOUT_CLASSIFICATION	4.2527905592090454E-5	DEFECT
// The size of buffers to be used	WITHOUT_CLASSIFICATION	0.9999925643301704	WITHOUT_CLASSIFICATION	7.435669829597889E-6	DEFECT
// Attributes.	WITHOUT_CLASSIFICATION	0.9999999129708932	WITHOUT_CLASSIFICATION	8.702910678682322E-8	DEFECT
// Attribute setters.	WITHOUT_CLASSIFICATION	0.999999847033038	WITHOUT_CLASSIFICATION	1.529669619223316E-7	DEFECT
// Nested element creators.	WITHOUT_CLASSIFICATION	0.9999999984668968	WITHOUT_CLASSIFICATION	1.533103232129797E-9	DEFECT
// treat empty nested text as no text	WITHOUT_CLASSIFICATION	0.9999998932185336	WITHOUT_CLASSIFICATION	1.0678146640682859E-7	DEFECT
// if binary check if incompatible attributes are used	WITHOUT_CLASSIFICATION	0.9999999970841177	WITHOUT_CLASSIFICATION	2.915882365793099E-9	DEFECT
// Sanity check our inputs.	WITHOUT_CLASSIFICATION	0.9999999873577621	WITHOUT_CLASSIFICATION	1.2642237973365227E-8	DEFECT
// Nothing to concatenate!	WITHOUT_CLASSIFICATION	0.9999998866910376	WITHOUT_CLASSIFICATION	1.1330896246042851E-7	DEFECT
// no need to do anything	WITHOUT_CLASSIFICATION	0.9999991191309947	WITHOUT_CLASSIFICATION	8.808690053040985E-7	DEFECT
// Log using WARN so it displays in 'quiet' mode.	WITHOUT_CLASSIFICATION	0.999996368502684	WITHOUT_CLASSIFICATION	3.631497315957671E-6	DEFECT
// ensure that the parent dir of dest file exists	WITHOUT_CLASSIFICATION	0.9999998546815655	WITHOUT_CLASSIFICATION	1.4531843455688326E-7	DEFECT
// non-existing files are not allowed	WITHOUT_CLASSIFICATION	0.9999994177113699	WITHOUT_CLASSIFICATION	5.822886300496503E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999997594604898	WITHOUT_CLASSIFICATION	2.4053951019376697E-7	DEFECT
// Create a ZipFileSet for this file, and pass it up.	WITHOUT_CLASSIFICATION	0.9999994779213522	WITHOUT_CLASSIFICATION	5.220786477875412E-7	DEFECT
// We just set the prefix for this fileset, and pass it up.	WITHOUT_CLASSIFICATION	0.9999920533190748	WITHOUT_CLASSIFICATION	7.946680925116993E-6	DEFECT
// by default, messages are always displayed	WITHOUT_CLASSIFICATION	0.9999997982102771	WITHOUT_CLASSIFICATION	2.017897228728554E-7	DEFECT
// close the output file if required	WITHOUT_CLASSIFICATION	0.9999999497136998	WITHOUT_CLASSIFICATION	5.028630019809724E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999229243365	WITHOUT_CLASSIFICATION	7.707566353111588E-8	DEFECT
// Initialize to the size of the first text fragment, with // the hopes that it's the only one.	WITHOUT_CLASSIFICATION	0.9999996418949914	WITHOUT_CLASSIFICATION	3.581050086544903E-7	DEFECT
// Append the fragment -- we defer property replacement until // later just in case we get a partial property in a fragment.	WITHOUT_CLASSIFICATION	0.999976097766763	WITHOUT_CLASSIFICATION	2.390223323709554E-5	DEFECT
// If using resources, disallow inline text. This is similar to // using GNU 'cat' with file arguments -- stdin is simply // ignored.	WITHOUT_CLASSIFICATION	0.9999999993388976	WITHOUT_CLASSIFICATION	6.611023430125321E-10	DEFECT
/*package*/	WITHOUT_CLASSIFICATION	0.9999781975374185	WITHOUT_CLASSIFICATION	2.1802462581584388E-5	DEFECT
/*package*/	WITHOUT_CLASSIFICATION	0.9999781975374185	WITHOUT_CLASSIFICATION	2.1802462581584388E-5	DEFECT
// If the file being added is WEB-INF/web.xml, we warn if it's // not the one specified in the "webxml" attribute - or if // it's being added twice, meaning the same file is specified // by the "webxml" attribute and in a <fileset> element.	WITHOUT_CLASSIFICATION	0.9999999876524879	WITHOUT_CLASSIFICATION	1.2347512218673825E-8	DEFECT
//by default, we add the file.	WITHOUT_CLASSIFICATION	0.9999997531618599	WITHOUT_CLASSIFICATION	2.4683814020809877E-7	DEFECT
//a web.xml file was found. See if it is a duplicate or not	WITHOUT_CLASSIFICATION	0.9999999643177441	WITHOUT_CLASSIFICATION	3.568225586381184E-8	DEFECT
//a second web.xml file, so skip it	WITHOUT_CLASSIFICATION	0.9999987703604732	WITHOUT_CLASSIFICATION	1.229639526778821E-6	DEFECT
//check to see if we warn or not	WITHOUT_CLASSIFICATION	0.999997837140278	WITHOUT_CLASSIFICATION	2.1628597220472143E-6	DEFECT
//no added file, yet	WITHOUT_CLASSIFICATION	0.9999258786530789	WITHOUT_CLASSIFICATION	7.412134692105242E-5	DEFECT
//there is no web.xml file, so add it	WITHOUT_CLASSIFICATION	0.9999999778684389	WITHOUT_CLASSIFICATION	2.2131561126760663E-8	DEFECT
//and remember that we did	WITHOUT_CLASSIFICATION	0.9999914208427159	WITHOUT_CLASSIFICATION	8.579157284205036E-6	DEFECT
//validation	WITHOUT_CLASSIFICATION	0.999944342148993	WITHOUT_CLASSIFICATION	5.565785100692656E-5	DEFECT
//discard most of really big resources	WITHOUT_CLASSIFICATION	0.9999997670106928	WITHOUT_CLASSIFICATION	2.3298930715858527E-7	DEFECT
//open up the resource	WITHOUT_CLASSIFICATION	0.9999991112470424	WITHOUT_CLASSIFICATION	8.887529574946227E-7	DEFECT
// impossible since *our* processLine doesn't throw an IOException	WITHOUT_CLASSIFICATION	0.9999992335547585	WITHOUT_CLASSIFICATION	7.664452414306446E-7	DEFECT
// There have been reports that 300 files could be compiled // so 250 is a conservative approach	WITHOUT_CLASSIFICATION	0.9999739626816254	WITHOUT_CLASSIFICATION	2.6037318374578733E-5	DEFECT
// We assume, that everything jikes writes goes to // standard output, not to standard error. The option // -Xstdout that is given to Jikes in Javac.doJikesCompile() // should guarantee this. At least I hope so. :)	WITHOUT_CLASSIFICATION	0.9998939408699042	WITHOUT_CLASSIFICATION	1.0605913009581686E-4	DEFECT
//if we have a RedirectorElement, return a decoy	WITHOUT_CLASSIFICATION	0.9999977816040223	WITHOUT_CLASSIFICATION	2.2183959777990963E-6	DEFECT
// 0 --> srcIndex	WITHOUT_CLASSIFICATION	0.9999992932904743	WITHOUT_CLASSIFICATION	7.067095257478017E-7	DEFECT
// srcIndex --> targetIndex	WITHOUT_CLASSIFICATION	0.999999834888084	WITHOUT_CLASSIFICATION	1.6511191607974454E-7	DEFECT
// targets are already absolute file names	WITHOUT_CLASSIFICATION	0.9999999870691394	WITHOUT_CLASSIFICATION	1.2930860585833578E-8	DEFECT
// targetIndex --> end	WITHOUT_CLASSIFICATION	0.999999262073396	WITHOUT_CLASSIFICATION	7.379266040125545E-7	DEFECT
// 0 --> targetIndex	WITHOUT_CLASSIFICATION	0.9999994569490772	WITHOUT_CLASSIFICATION	5.430509228089814E-7	DEFECT
// 0 --> srcIndex	WITHOUT_CLASSIFICATION	0.9999992932904743	WITHOUT_CLASSIFICATION	7.067095257478017E-7	DEFECT
// contains AbstractFileSet // (both DirSet and FileSet)	WITHOUT_CLASSIFICATION	0.9999999198648559	WITHOUT_CLASSIFICATION	8.013514408894912E-8	DEFECT
// need to reset the stream handler to restart // reading of pipes; // go ahead and do it always w/ nested redirectors	WITHOUT_CLASSIFICATION	0.9999998541481565	WITHOUT_CLASSIFICATION	1.458518435446136E-7	DEFECT
// need to reset the stream handler to restart // reading of pipes; // go ahead and do it always w/ nested redirectors	WITHOUT_CLASSIFICATION	0.9999998541481565	WITHOUT_CLASSIFICATION	1.458518435446136E-7	DEFECT
// targets are already absolute file names	WITHOUT_CLASSIFICATION	0.9999999870691394	WITHOUT_CLASSIFICATION	1.2930860585833578E-8	DEFECT
// targetIndex --> srcIndex	WITHOUT_CLASSIFICATION	0.9999996686499221	WITHOUT_CLASSIFICATION	3.313500778998202E-7	DEFECT
// srcIndex --> end	WITHOUT_CLASSIFICATION	0.9999995577532571	WITHOUT_CLASSIFICATION	4.4224674286261117E-7	DEFECT
// srcIndex --> end	WITHOUT_CLASSIFICATION	0.9999995577532571	WITHOUT_CLASSIFICATION	4.4224674286261117E-7	DEFECT
// no targetFilePos	WITHOUT_CLASSIFICATION	0.999999992460636	WITHOUT_CLASSIFICATION	7.539363975718574E-9	DEFECT
// fill in source file names	WITHOUT_CLASSIFICATION	0.9999999201503783	WITHOUT_CLASSIFICATION	7.984962170903707E-8	DEFECT
/* this is skipEmpty == false */	WITHOUT_CLASSIFICATION	0.9999338055618489	WITHOUT_CLASSIFICATION	6.619443815113188E-5	DEFECT
//if there is a new priority, and it is different, change it	WITHOUT_CLASSIFICATION	0.9999992385424398	WITHOUT_CLASSIFICATION	7.614575601697793E-7	DEFECT
//catch permissions denial and keep going	WITHOUT_CLASSIFICATION	0.9999998623697829	WITHOUT_CLASSIFICATION	1.3763021711900497E-7	DEFECT
//-- XSLTLiaison	WITHOUT_CLASSIFICATION	0.9999966249885592	WITHOUT_CLASSIFICATION	3.3750114407827993E-6	DEFECT
// Write the properties file back out	WITHOUT_CLASSIFICATION	0.99999878833901	WITHOUT_CLASSIFICATION	1.211660990035735E-6	DEFECT
//Finally set the property	WITHOUT_CLASSIFICATION	0.9999508448798421	WITHOUT_CLASSIFICATION	4.915512015799634E-5	DEFECT
// Try parsing the line into an integer.	WITHOUT_CLASSIFICATION	0.9999987427682507	WITHOUT_CLASSIFICATION	1.2572317492001902E-6	DEFECT
//-- XSLTProcess	WITHOUT_CLASSIFICATION	0.9999982568997728	WITHOUT_CLASSIFICATION	1.743100227155557E-6	DEFECT
// check if liaison wants to log errors using us as logger	WITHOUT_CLASSIFICATION	0.9999999983530625	WITHOUT_CLASSIFICATION	1.6469374661352767E-9	DEFECT
// If we enter here, it means that the stylesheet is supplied // via style attribute	WITHOUT_CLASSIFICATION	0.9999983308472846	WITHOUT_CLASSIFICATION	1.6691527153418535E-6	DEFECT
/*                     * shouldn't throw out deprecation warnings before we know,                     * the wrong version has been used.                     */	WITHOUT_CLASSIFICATION	0.9986234231193652	WITHOUT_CLASSIFICATION	0.0013765768806347023	DEFECT
// if we have an in file and out then process them	WITHOUT_CLASSIFICATION	0.999999986602796	WITHOUT_CLASSIFICATION	1.339720400931044E-8	DEFECT
//-- make sure destination directory exists...	WITHOUT_CLASSIFICATION	0.999982486837908	WITHOUT_CLASSIFICATION	1.751316209202745E-5	DEFECT
// Process all the files marked for styling	WITHOUT_CLASSIFICATION	0.9999997556538781	WITHOUT_CLASSIFICATION	2.443461218931493E-7	DEFECT
// Process all the directories marked for styling	WITHOUT_CLASSIFICATION	0.9999999265421545	WITHOUT_CLASSIFICATION	7.345784544822263E-8	DEFECT
// only resource collections, there better be some	WITHOUT_CLASSIFICATION	0.9999985046033049	WITHOUT_CLASSIFICATION	1.4953966951238492E-6	DEFECT
//anything else is a classname	WITHOUT_CLASSIFICATION	0.9999787596741814	WITHOUT_CLASSIFICATION	2.1240325818728507E-5	DEFECT
//-- processXML	WITHOUT_CLASSIFICATION	0.9999949259148744	WITHOUT_CLASSIFICATION	5.074085125632074E-6	DEFECT
// Param	WITHOUT_CLASSIFICATION	0.9999998371040819	WITHOUT_CLASSIFICATION	1.6289591803428313E-7	DEFECT
// New env var...append the previous one if we have it.	WITHOUT_CLASSIFICATION	0.9999999243023434	WITHOUT_CLASSIFICATION	7.569765659209214E-8	DEFECT
// Mac	WITHOUT_CLASSIFICATION	0.9999992953048084	WITHOUT_CLASSIFICATION	7.046951915371932E-7	DEFECT
//validation	WITHOUT_CLASSIFICATION	0.999944342148993	WITHOUT_CLASSIFICATION	5.565785100692656E-5	DEFECT
// If failed to process document, must delete target document, // or it will not attempt to process it the second time	WITHOUT_CLASSIFICATION	0.9999995831779492	WITHOUT_CLASSIFICATION	4.168220506675007E-7	DEFECT
// if processor wasn't specified, see if TraX is available.  If not, // default it to xalan, depending on which is in the classpath	WITHOUT_CLASSIFICATION	0.9999999921347023	WITHOUT_CLASSIFICATION	7.865297674055786E-9	DEFECT
// We call liason.configure() and then liaison.setStylesheet() // so that the internal variables of liaison can be set up	WITHOUT_CLASSIFICATION	0.9999999341399803	WITHOUT_CLASSIFICATION	6.586001970234286E-8	DEFECT
// If we are here we can set the stylesheet as a // resource	WITHOUT_CLASSIFICATION	0.9999953896858077	WITHOUT_CLASSIFICATION	4.6103141922896696E-6	DEFECT
// If we are here we cannot set the stylesheet as // a resource, but we can set it as a file. So, // we make an attempt to get it as a file	WITHOUT_CLASSIFICATION	0.9999457733333998	WITHOUT_CLASSIFICATION	5.422666660016019E-5	DEFECT
// Give always a slash as file separator, so the stylesheet could be sure about that // Use '.' so a dir+"/"+name would not result in an absolute path	WITHOUT_CLASSIFICATION	0.999999751795126	WITHOUT_CLASSIFICATION	2.482048740355566E-7	DEFECT
// only 'name' and 'value' exist.	WITHOUT_CLASSIFICATION	0.9999921972296251	WITHOUT_CLASSIFICATION	7.80277037499534E-6	DEFECT
// a value must be of a given type // say boolean|integer|string that are mostly used.	WITHOUT_CLASSIFICATION	0.9999999917201051	WITHOUT_CLASSIFICATION	8.279894873987519E-9	DEFECT
// -- class Attribute	WITHOUT_CLASSIFICATION	0.9999996962472875	WITHOUT_CLASSIFICATION	3.0375271254395254E-7	DEFECT
// -- class Factory	WITHOUT_CLASSIFICATION	0.9999977497450108	WITHOUT_CLASSIFICATION	2.2502549892614117E-6	DEFECT
// error message strings	WITHOUT_CLASSIFICATION	0.9999992844605934	WITHOUT_CLASSIFICATION	7.155394066560081E-7	DEFECT
//at this point there is one trailing space to remove, if the list is not empty.	WITHOUT_CLASSIFICATION	0.9999996544131349	WITHOUT_CLASSIFICATION	3.455868650228591E-7	DEFECT
//now exit here if the property is already set	WITHOUT_CLASSIFICATION	0.9999867848744773	WITHOUT_CLASSIFICATION	1.3215125522624697E-5	DEFECT
//and add any files if also defined	WITHOUT_CLASSIFICATION	0.9999881763654337	WITHOUT_CLASSIFICATION	1.1823634566386694E-5	DEFECT
//add path URLs	WITHOUT_CLASSIFICATION	0.999999373681031	WITHOUT_CLASSIFICATION	6.263189690104237E-7	DEFECT
//create the URL //ant equivalent of  fileToConvert.toURI().toURL().toExternalForm();	WITHOUT_CLASSIFICATION	0.9999999812085499	WITHOUT_CLASSIFICATION	1.8791450028792222E-8	DEFECT
// if we run into a timeout, the run-away thread shall not // make the VM run forever - if no timeout occurs, Ant's // main thread will still be there to let the new thread // finish	WITHOUT_CLASSIFICATION	0.9999999950033104	WITHOUT_CLASSIFICATION	4.996689693307438E-9	DEFECT
//Use the VM launcher instead of shell launcher on VMS	WITHOUT_CLASSIFICATION	0.9999914871473845	WITHOUT_CLASSIFICATION	8.51285261553013E-6	DEFECT
/*     * Builds a command launcher for the OS and JVM we are running under.     */	WITHOUT_CLASSIFICATION	0.9999601997234697	WITHOUT_CLASSIFICATION	3.980027653018601E-5	DEFECT
// Try using a JDK 1.3 launcher	WITHOUT_CLASSIFICATION	0.9999984817889911	WITHOUT_CLASSIFICATION	1.518211008984307E-6	DEFECT
// Ignore and keep trying	WITHOUT_CLASSIFICATION	0.9999998769110634	WITHOUT_CLASSIFICATION	1.2308893663745585E-7	DEFECT
// OS/2	WITHOUT_CLASSIFICATION	0.9999975918029702	WITHOUT_CLASSIFICATION	2.4081970298223875E-6	DEFECT
// Windows XP/2000/NT	WITHOUT_CLASSIFICATION	0.9996881501535253	WITHOUT_CLASSIFICATION	3.118498464747325E-4	DEFECT
// Windows 98/95 - need to use an auxiliary script	WITHOUT_CLASSIFICATION	0.9998152672031192	WITHOUT_CLASSIFICATION	1.8473279688085178E-4	DEFECT
// OpenVMS	WITHOUT_CLASSIFICATION	0.9999982862621215	WITHOUT_CLASSIFICATION	1.7137378785758947E-6	DEFECT
// Generic	WITHOUT_CLASSIFICATION	0.999999687486348	WITHOUT_CLASSIFICATION	3.125136520514355E-7	DEFECT
// Make sure we do not recurse forever	WITHOUT_CLASSIFICATION	0.9999999763952465	WITHOUT_CLASSIFICATION	2.3604753555767003E-8	DEFECT
// Just try to use what we got	WITHOUT_CLASSIFICATION	0.9999993448541658	WITHOUT_CLASSIFICATION	6.551458341843286E-7	DEFECT
// Since we "look ahead" before adding, there's one last env var.	WITHOUT_CLASSIFICATION	0.9999998858253322	WITHOUT_CLASSIFICATION	1.1417466776853819E-7	DEFECT
// Just try to see how much we got	WITHOUT_CLASSIFICATION	0.9999989564865851	WITHOUT_CLASSIFICATION	1.043513414855706E-6	DEFECT
// OS/2 - use same mechanism as Windows 2000	WITHOUT_CLASSIFICATION	0.9999848022640131	WITHOUT_CLASSIFICATION	1.519773598690569E-5	DEFECT
// Determine if we're running under XP/2000/NT or 98/95	WITHOUT_CLASSIFICATION	0.9999992187376024	WITHOUT_CLASSIFICATION	7.812623975942632E-7	DEFECT
// Windows 98/95	WITHOUT_CLASSIFICATION	0.9999098954471027	WITHOUT_CLASSIFICATION	9.01045528972716E-5	DEFECT
// Windows XP/2000/NT/2003	WITHOUT_CLASSIFICATION	0.9992638071428824	WITHOUT_CLASSIFICATION	7.361928571175704E-4	DEFECT
// On most systems one could use: /bin/sh -c env	WITHOUT_CLASSIFICATION	0.9999326832616836	WITHOUT_CLASSIFICATION	6.731673831633648E-5	DEFECT
// Some systems have /bin/env, others /usr/bin/env, just try	WITHOUT_CLASSIFICATION	0.999999938676369	WITHOUT_CLASSIFICATION	6.132363090000442E-8	DEFECT
// rely on PATH	WITHOUT_CLASSIFICATION	0.9999690044954382	WITHOUT_CLASSIFICATION	3.099550456173445E-5	DEFECT
// rely on PATH	WITHOUT_CLASSIFICATION	0.9999690044954382	WITHOUT_CLASSIFICATION	3.099550456173445E-5	DEFECT
//noop default encoding used	WITHOUT_CLASSIFICATION	0.9999999958242796	WITHOUT_CLASSIFICATION	4.175720491140467E-9	DEFECT
//By default, use the shell launcher for VMS //	WITHOUT_CLASSIFICATION	0.9999986443589455	WITHOUT_CLASSIFICATION	1.3556410545806608E-6	DEFECT
// add the process to the list of those to destroy if the VM exits //	WITHOUT_CLASSIFICATION	0.9999999968296619	WITHOUT_CLASSIFICATION	3.170338140357263E-9	DEFECT
// #31928: forcibly kill it before continuing.	WITHOUT_CLASSIFICATION	0.9993891957593892	WITHOUT_CLASSIFICATION	6.108042406107042E-4	DEFECT
// remove the process to the list of those to destroy if // the VM exits //	WITHOUT_CLASSIFICATION	0.9999999578618263	WITHOUT_CLASSIFICATION	4.213817376808551E-8	DEFECT
//on openvms even exit value signals failure; // for other platforms nonzero exit value signals failure	WITHOUT_CLASSIFICATION	0.9999989069042688	WITHOUT_CLASSIFICATION	1.0930957311600024E-6	DEFECT
// Get key including "="	WITHOUT_CLASSIFICATION	0.9999993972267645	WITHOUT_CLASSIFICATION	6.027732354921356E-7	DEFECT
// Nb: using default locale as key is a env name	WITHOUT_CLASSIFICATION	0.999999506758701	WITHOUT_CLASSIFICATION	4.932412991049929E-7	DEFECT
// Find the key in the current enviroment copy // and remove it.	WITHOUT_CLASSIFICATION	0.9999831850041605	WITHOUT_CLASSIFICATION	1.681499583948122E-5	DEFECT
// Use the original casiness of the key	WITHOUT_CLASSIFICATION	0.9999995503199824	WITHOUT_CLASSIFICATION	4.49680017557649E-7	DEFECT
// Add the key to the enviromnent copy	WITHOUT_CLASSIFICATION	0.9999996593926039	WITHOUT_CLASSIFICATION	3.4060739607521076E-7	DEFECT
// parse the VMS logicals into required format ("VAR=VAL[,VAL2]")	WITHOUT_CLASSIFICATION	0.9999923804927388	WITHOUT_CLASSIFICATION	7.619507261271274E-6	DEFECT
// further equivalence name of previous logical	WITHOUT_CLASSIFICATION	0.9999999965794122	WITHOUT_CLASSIFICATION	3.4205877875967177E-9	DEFECT
// new logical?	WITHOUT_CLASSIFICATION	0.9999987752331208	WITHOUT_CLASSIFICATION	1.224766879216889E-6	DEFECT
// already got this logical from a higher order table	WITHOUT_CLASSIFICATION	0.9999999508215479	WITHOUT_CLASSIFICATION	4.9178452160540574E-8	DEFECT
/* the arguments: */	WITHOUT_CLASSIFICATION	0.9999990542110917	WITHOUT_CLASSIFICATION	9.457889082527434E-7	DEFECT
// IllegalAccess, IllegalArgument, ClassCast	WITHOUT_CLASSIFICATION	0.9999999692147187	WITHOUT_CLASSIFICATION	3.07852813846772E-8	DEFECT
// Locate the auxiliary script	WITHOUT_CLASSIFICATION	0.9999999714049588	WITHOUT_CLASSIFICATION	2.8595041283742682E-8	DEFECT
// Build the command	WITHOUT_CLASSIFICATION	0.9997225089150077	WITHOUT_CLASSIFICATION	2.774910849922427E-4	DEFECT
// add the environment as logicals to the DCL script	WITHOUT_CLASSIFICATION	0.9999993362558314	WITHOUT_CLASSIFICATION	6.637441685608923E-7	DEFECT
//empty	WITHOUT_CLASSIFICATION	0.999961376570256	WITHOUT_CLASSIFICATION	3.862342974406731E-5	DEFECT
//empty	WITHOUT_CLASSIFICATION	0.999961376570256	WITHOUT_CLASSIFICATION	3.862342974406731E-5	DEFECT
// Locate method Runtime.exec(String[] cmdarray, //                            String[] envp, File dir)	WITHOUT_CLASSIFICATION	0.99999993928218	WITHOUT_CLASSIFICATION	6.071781993362791E-8	DEFECT
// Use cmd.exe to change to the specified drive and // directory before running the command	WITHOUT_CLASSIFICATION	0.9999999968420736	WITHOUT_CLASSIFICATION	3.157926303145507E-9	DEFECT
// Use cmd.exe to change to the specified directory before running // the command	WITHOUT_CLASSIFICATION	0.9999999984379184	WITHOUT_CLASSIFICATION	1.5620815798270595E-9	DEFECT
// need to set the project on unknown element	WITHOUT_CLASSIFICATION	0.999997496218124	WITHOUT_CLASSIFICATION	2.503781876039371E-6	DEFECT
//************************************************************************ //  protected and private methods //************************************************************************	WITHOUT_CLASSIFICATION	0.9998847217111223	WITHOUT_CLASSIFICATION	1.1527828887772368E-4	DEFECT
//Attempt complete directory renames, if any, first.	WITHOUT_CLASSIFICATION	0.9999978220360285	WITHOUT_CLASSIFICATION	2.1779639715340606E-6	DEFECT
// files to move	WITHOUT_CLASSIFICATION	0.999999272062988	WITHOUT_CLASSIFICATION	7.279370120367197E-7	DEFECT
//Is this file still available to be moved?	WITHOUT_CLASSIFICATION	0.9999731377919762	WITHOUT_CLASSIFICATION	2.686220802376151E-5	DEFECT
// if this is the last time through the loop then // move will not occur, but that's what we want	WITHOUT_CLASSIFICATION	0.9999993686864055	WITHOUT_CLASSIFICATION	6.313135944496853E-7	DEFECT
// maybe io error?	WITHOUT_CLASSIFICATION	0.999990200822248	WITHOUT_CLASSIFICATION	9.799177751873429E-6	DEFECT
// found a file	WITHOUT_CLASSIFICATION	0.9999998740874108	WITHOUT_CLASSIFICATION	1.2591258932340728E-7	DEFECT
// on an io error list() can return null	WITHOUT_CLASSIFICATION	0.9999954742300391	WITHOUT_CLASSIFICATION	4.525769960811722E-6	DEFECT
// Whether *this VM* is 1.4+ (but also check executable != null).	WITHOUT_CLASSIFICATION	0.9999993811610632	WITHOUT_CLASSIFICATION	6.188389367790365E-7	DEFECT
// ------------------------------------------ general Javadoc arguments	WITHOUT_CLASSIFICATION	0.9999999924821305	WITHOUT_CLASSIFICATION	7.51786955362104E-9	DEFECT
// ---------------------------- javadoc2 arguments for default doclet	WITHOUT_CLASSIFICATION	0.9999999808606722	WITHOUT_CLASSIFICATION	1.9139327686349525E-8	DEFECT
// add the links arguments	WITHOUT_CLASSIFICATION	0.9999999979847749	WITHOUT_CLASSIFICATION	2.015224993790478E-9	DEFECT
// should be impossible	WITHOUT_CLASSIFICATION	0.9999953946755032	WITHOUT_CLASSIFICATION	4.605324496694002E-6	DEFECT
// is the href a valid URL	WITHOUT_CLASSIFICATION	0.9999994754882022	WITHOUT_CLASSIFICATION	5.245117976421084E-7	DEFECT
// ok - just skip	WITHOUT_CLASSIFICATION	0.9999998446955747	WITHOUT_CLASSIFICATION	1.553044253815298E-7	DEFECT
//return	WITHOUT_CLASSIFICATION	0.9999852267126869	WITHOUT_CLASSIFICATION	1.4773287313088769E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999997594604898	WITHOUT_CLASSIFICATION	2.4053951019376697E-7	DEFECT
//validation logic	WITHOUT_CLASSIFICATION	0.9999928763582903	WITHOUT_CLASSIFICATION	7.123641709820219E-6	DEFECT
// Ignore Exception	WITHOUT_CLASSIFICATION	0.9999997655677488	WITHOUT_CLASSIFICATION	2.3443225114823844E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999229243365	WITHOUT_CLASSIFICATION	7.707566353111588E-8	DEFECT
// Only try to move if this is the last mapped file // and one of the mappings isn't to itself	WITHOUT_CLASSIFICATION	0.9999935749886814	WITHOUT_CLASSIFICATION	6.425011318729169E-6	DEFECT
// createArgument(true) is necessary to make sure -locale // is the first argument (required in 1.3+).	WITHOUT_CLASSIFICATION	0.9999999948846635	WITHOUT_CLASSIFICATION	5.115336591099281E-9	DEFECT
// Go through the tokens one at a time, updating the // elements array and issuing warnings where appropriate.	WITHOUT_CLASSIFICATION	0.999967051377594	WITHOUT_CLASSIFICATION	3.29486224058874E-5	DEFECT
// Ant javadoc task rules for group attribute: //   Args are comma-delimited. //   Each arg is 2 space-delimited strings. //   E.g., group="XSLT_Packages org.apache.xalan.xslt*, //                XPath_Packages org.apache.xalan.xpath*"	WITHOUT_CLASSIFICATION	0.9999993863818457	WITHOUT_CLASSIFICATION	6.136181543176441E-7	DEFECT
// add the group arguments	WITHOUT_CLASSIFICATION	0.9999999949428487	WITHOUT_CLASSIFICATION	5.057151190173013E-9	DEFECT
// Javadoc 1.4 parameters	WITHOUT_CLASSIFICATION	0.9999999478451962	WITHOUT_CLASSIFICATION	5.215480385100879E-8	DEFECT
// The tag element is not used as a fileset, // but specifies the tag directly.	WITHOUT_CLASSIFICATION	0.9999990890209639	WITHOUT_CLASSIFICATION	9.109790361473826E-7	DEFECT
// The tag element is used as a // fileset. Parse all the files and create // -tag arguments.	WITHOUT_CLASSIFICATION	0.9999999992914886	WITHOUT_CLASSIFICATION	7.085114534194124E-10	DEFECT
// Not 1.4+.	WITHOUT_CLASSIFICATION	0.9999991378626584	WITHOUT_CLASSIFICATION	8.621373416018004E-7	DEFECT
// Javadoc 1.2/1.3 parameters:	WITHOUT_CLASSIFICATION	0.9999996407591737	WITHOUT_CLASSIFICATION	3.5924082629704547E-7	DEFECT
// If using an external file, write the command line options to it	WITHOUT_CLASSIFICATION	0.9999990864331614	WITHOUT_CLASSIFICATION	9.135668387196064E-7	DEFECT
// If using an external file, write the command line options to it	WITHOUT_CLASSIFICATION	0.9999990864331614	WITHOUT_CLASSIFICATION	9.135668387196064E-7	DEFECT
/*         * No reason to change the working directory as all filenames and         * path components have been resolved already.         *         * Avoid problems with command line length in some environments.         */	WITHOUT_CLASSIFICATION	0.9989111058660682	WITHOUT_CLASSIFICATION	0.0010888941339317192	DEFECT
// are there any java files in this directory?	WITHOUT_CLASSIFICATION	0.9999956943165021	WITHOUT_CLASSIFICATION	4.305683497764338E-6	DEFECT
// We don't need to care for duplicates here, // Path.list does it for us.	WITHOUT_CLASSIFICATION	0.9999999731580426	WITHOUT_CLASSIFICATION	2.6841957344513975E-8	DEFECT
// CheckStyle:MethodNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9999944617636295	WITHOUT_CLASSIFICATION	5.538236370528685E-6	DEFECT
/* Methods below all add specific selectors */	WITHOUT_CLASSIFICATION	0.999999983890025	WITHOUT_CLASSIFICATION	1.610997499650575E-8	DEFECT
//convert a class name into a resource	WITHOUT_CLASSIFICATION	0.9999999154094428	WITHOUT_CLASSIFICATION	8.45905572797236E-8	DEFECT
//set the property	WITHOUT_CLASSIFICATION	0.9999910106431085	WITHOUT_CLASSIFICATION	8.989356891536941E-6	DEFECT
// line feed	WITHOUT_CLASSIFICATION	0.9999964260736792	WITHOUT_CLASSIFICATION	3.5739263207379944E-6	DEFECT
// by default, remove matching empty dirs	WITHOUT_CLASSIFICATION	0.999999059906962	WITHOUT_CLASSIFICATION	9.400930380093236E-7	DEFECT
// delete the single file	WITHOUT_CLASSIFICATION	0.9999999087917603	WITHOUT_CLASSIFICATION	9.120823969948466E-8	DEFECT
// delete the directory	WITHOUT_CLASSIFICATION	0.9999998854845077	WITHOUT_CLASSIFICATION	1.14515492345881E-7	DEFECT
//add the files from the default fileset:	WITHOUT_CLASSIFICATION	0.9999999433765456	WITHOUT_CLASSIFICATION	5.662345442073027E-8	DEFECT
// sort first to files, then dirs	WITHOUT_CLASSIFICATION	0.9999999143468289	WITHOUT_CLASSIFICATION	8.565317107101748E-8	DEFECT
/*                 * Plain impossible with UTF8, see                 * http://java.sun.com/j2se/1.5.0/docs/guide/intl/encoding.doc.html                 *                 * fallback to platform specific anyway.                 */	WITHOUT_CLASSIFICATION	0.9999996063090008	WITHOUT_CLASSIFICATION	3.9369099921398387E-7	DEFECT
//patch the redirector to save output to a file	WITHOUT_CLASSIFICATION	0.999999995909261	WITHOUT_CLASSIFICATION	4.0907389444522E-9	DEFECT
//verify special operations	WITHOUT_CLASSIFICATION	0.9999999739880845	WITHOUT_CLASSIFICATION	2.601191546840892E-8	DEFECT
//JAR  is required	WITHOUT_CLASSIFICATION	0.9999085665093442	WITHOUT_CLASSIFICATION	9.14334906557015E-5	DEFECT
//deal with jdk1.4.2 bug:	WITHOUT_CLASSIFICATION	0.9997150335991547	WITHOUT_CLASSIFICATION	2.849664008452139E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999229243365	WITHOUT_CLASSIFICATION	7.707566353111588E-8	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999997594604898	WITHOUT_CLASSIFICATION	2.4053951019376697E-7	DEFECT
// now we need to populate the compiler adapter	WITHOUT_CLASSIFICATION	0.9999999359289672	WITHOUT_CLASSIFICATION	6.407103285187667E-8	DEFECT
// finally, lets execute the compiler!!	WITHOUT_CLASSIFICATION	0.9999965336927379	WITHOUT_CLASSIFICATION	3.466307262081029E-6	DEFECT
//validation	WITHOUT_CLASSIFICATION	0.999944342148993	WITHOUT_CLASSIFICATION	5.565785100692656E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999229243365	WITHOUT_CLASSIFICATION	7.707566353111588E-8	DEFECT
// nonexistent resources could only occur if we already // deleted something from a fileset:	WITHOUT_CLASSIFICATION	0.9999999524514235	WITHOUT_CLASSIFICATION	4.7548576612507585E-8	DEFECT
//cache	WITHOUT_CLASSIFICATION	0.9999970901345999	WITHOUT_CLASSIFICATION	2.909865400105571E-6	DEFECT
// no include pattern implicitly means includes="**"	WITHOUT_CLASSIFICATION	0.999998947583318	WITHOUT_CLASSIFICATION	1.0524166820242154E-6	DEFECT
//Do not process this file	WITHOUT_CLASSIFICATION	0.999980059767639	WITHOUT_CLASSIFICATION	1.9940232360939377E-5	DEFECT
// make sure facade knows about magic properties and fork setting	WITHOUT_CLASSIFICATION	0.9999991766422115	WITHOUT_CLASSIFICATION	8.233577886060975E-7	DEFECT
// deal with the resources	WITHOUT_CLASSIFICATION	0.9999996811045297	WITHOUT_CLASSIFICATION	3.1889547029996116E-7	DEFECT
// Make a transaction for each resource	WITHOUT_CLASSIFICATION	0.9999992482799989	WITHOUT_CLASSIFICATION	7.517200011382767E-7	DEFECT
// Make a transaction group for the outer command	WITHOUT_CLASSIFICATION	0.9999988373696802	WITHOUT_CLASSIFICATION	1.1626303197980447E-6	DEFECT
// Process all transactions	WITHOUT_CLASSIFICATION	0.9999998516928166	WITHOUT_CLASSIFICATION	1.4830718346068574E-7	DEFECT
// Catch any statements not followed by ;	WITHOUT_CLASSIFICATION	0.9999985663200104	WITHOUT_CLASSIFICATION	1.4336799896419301E-6	DEFECT
// Check and ignore empty statements	WITHOUT_CLASSIFICATION	0.9999999952394256	WITHOUT_CLASSIFICATION	4.760574307221744E-9	DEFECT
/*     * Closes an unused connection after an error and doesn't rethrow     * a possible SQLException     * @since Ant 1.7     */	WITHOUT_CLASSIFICATION	0.9999998645649915	WITHOUT_CLASSIFICATION	1.3543500860540232E-7	DEFECT
// dreaded backwards compatibility	WITHOUT_CLASSIFICATION	0.9999994947045638	WITHOUT_CLASSIFICATION	5.052954360776804E-7	DEFECT
/*Throw an exception if cvs exited with error. (Iulian)*/	WITHOUT_CLASSIFICATION	0.9999992775269324	WITHOUT_CLASSIFICATION	7.224730675944926E-7	DEFECT
// re-implement legacy behaviour:	WITHOUT_CLASSIFICATION	0.9999859205235127	WITHOUT_CLASSIFICATION	1.4079476487430855E-5	DEFECT
// Check if not real cvsroot => set it to null	WITHOUT_CLASSIFICATION	0.9999996751768495	WITHOUT_CLASSIFICATION	3.2482315052315286E-7	DEFECT
// Check if not real cvsrsh => set it to null	WITHOUT_CLASSIFICATION	0.9999996013496657	WITHOUT_CLASSIFICATION	3.9865033433092834E-7	DEFECT
// Check if not real tag => set it to null	WITHOUT_CLASSIFICATION	0.999999697324895	WITHOUT_CLASSIFICATION	3.026751049682812E-7	DEFECT
// close the output file if required	WITHOUT_CLASSIFICATION	0.9999999497136998	WITHOUT_CLASSIFICATION	5.028630019809724E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999229243365	WITHOUT_CLASSIFICATION	7.707566353111588E-8	DEFECT
//req // req	WITHOUT_CLASSIFICATION	0.9999952263719853	WITHOUT_CLASSIFICATION	4.773628014648916E-6	DEFECT
// scan source directories and dest directory to build up // compile lists	WITHOUT_CLASSIFICATION	0.9999999946175043	WITHOUT_CLASSIFICATION	5.3824957074521295E-9	DEFECT
//there is no need to expand properties here as that happens when Transaction.addText is //called; to do so here would be an error.	WITHOUT_CLASSIFICATION	0.999993814472805	WITHOUT_CLASSIFICATION	6.185527195022774E-6	DEFECT
//there are places (in this file, and perhaps elsewhere, where it is assumed //that null is an acceptable parameter.	WITHOUT_CLASSIFICATION	0.9999999380599282	WITHOUT_CLASSIFICATION	6.194007188408406E-8	DEFECT
// We can't do it ourselves as jCVS is GPLed, a third party task // outside of jakarta repositories would be possible though (SB).	WITHOUT_CLASSIFICATION	0.9999972421267231	WITHOUT_CLASSIFICATION	2.7578732767950843E-6	DEFECT
// // Just call the getExecuteStreamHandler() and let it handle //     the semantics of instantiation or retrieval. //	WITHOUT_CLASSIFICATION	0.9999866461413973	WITHOUT_CLASSIFICATION	1.3353858602668983E-5	DEFECT
// we are chmodding the given directory	WITHOUT_CLASSIFICATION	0.9999958608295887	WITHOUT_CLASSIFICATION	4.139170411274491E-6	DEFECT
// may be altered in validateAttributes	WITHOUT_CLASSIFICATION	0.9999996372776666	WITHOUT_CLASSIFICATION	3.6272233338811923E-7	DEFECT
// will be removed in validateAttributes	WITHOUT_CLASSIFICATION	0.9999964335576965	WITHOUT_CLASSIFICATION	3.56644230340591E-6	DEFECT
// make sure we don't have an illegal set of options	WITHOUT_CLASSIFICATION	0.9999998928118495	WITHOUT_CLASSIFICATION	1.0718815047696373E-7	DEFECT
// deal with the single file	WITHOUT_CLASSIFICATION	0.9999997431032629	WITHOUT_CLASSIFICATION	2.568967370863732E-7	DEFECT
// deal with the ResourceCollections	WITHOUT_CLASSIFICATION	0.9999997248250563	WITHOUT_CLASSIFICATION	2.7517494380427364E-7	DEFECT
// Step (1) - beware of the ZipFileSet	WITHOUT_CLASSIFICATION	0.9999998146355985	WITHOUT_CLASSIFICATION	1.8536440149358205E-7	DEFECT
// not a fileset or contains non-file resources	WITHOUT_CLASSIFICATION	0.9999996430842875	WITHOUT_CLASSIFICATION	3.5691571252470833E-7	DEFECT
// copying of dirs is trivial and can be done // for non-file resources as well as for real // files.	WITHOUT_CLASSIFICATION	0.9999999680445781	WITHOUT_CLASSIFICATION	3.195542183789682E-8	DEFECT
// a not-directory file resource // needs special treatment	WITHOUT_CLASSIFICATION	0.9999984361034163	WITHOUT_CLASSIFICATION	1.5638965837059164E-6	DEFECT
// do all the copy operations now...	WITHOUT_CLASSIFICATION	0.9999747784916077	WITHOUT_CLASSIFICATION	2.5221508392380082E-5	DEFECT
// restrict to out-of-date resources	WITHOUT_CLASSIFICATION	0.9999999539173952	WITHOUT_CLASSIFICATION	4.608260486781674E-8	DEFECT
// clean up again, so this instance can be used a second // time	WITHOUT_CLASSIFICATION	0.9999999148714026	WITHOUT_CLASSIFICATION	8.512859747601129E-8	DEFECT
// reuse the array created by the mapper	WITHOUT_CLASSIFICATION	0.9999999574891588	WITHOUT_CLASSIFICATION	4.251084108629398E-8	DEFECT
// reuse the array created by the mapper	WITHOUT_CLASSIFICATION	0.9999999574891588	WITHOUT_CLASSIFICATION	4.251084108629398E-8	DEFECT
//now patch in all system properties	WITHOUT_CLASSIFICATION	0.9999938120785675	WITHOUT_CLASSIFICATION	6.187921432471305E-6	DEFECT
// is the keystore a file	WITHOUT_CLASSIFICATION	0.9999996346377402	WITHOUT_CLASSIFICATION	3.653622598404747E-7	DEFECT
// must be a URL - just pass as is	WITHOUT_CLASSIFICATION	0.9999997834029528	WITHOUT_CLASSIFICATION	2.1659704724157523E-7	DEFECT
// Gump friendly - don't mess with the core loader if only classpath	WITHOUT_CLASSIFICATION	0.9999921272183088	WITHOUT_CLASSIFICATION	7.872781691188482E-6	DEFECT
// Construct a new class loader	WITHOUT_CLASSIFICATION	0.999999935622833	WITHOUT_CLASSIFICATION	6.437716702541972E-8	DEFECT
// The param is "parentFirst"	WITHOUT_CLASSIFICATION	0.9999963624605741	WITHOUT_CLASSIFICATION	3.637539425952523E-6	DEFECT
/*public*/	WITHOUT_CLASSIFICATION	0.9999530619780277	WITHOUT_CLASSIFICATION	4.693802197233914E-5	DEFECT
//shield it from being closed by a filtering StreamPumper	WITHOUT_CLASSIFICATION	0.9999997418849429	WITHOUT_CLASSIFICATION	2.581150571378736E-7	DEFECT
//shield it from being closed by a filtering StreamPumper	WITHOUT_CLASSIFICATION	0.9999997418849429	WITHOUT_CLASSIFICATION	2.581150571378736E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999229243365	WITHOUT_CLASSIFICATION	7.707566353111588E-8	DEFECT
// set read-only properties // CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999806554519	WITHOUT_CLASSIFICATION	1.9344548191206346E-8	DEFECT
// Are any other references held ? Can we 'close' the loader // so it removes the locks on jars ? // a new one will be created.	WITHOUT_CLASSIFICATION	0.99999798240728	WITHOUT_CLASSIFICATION	2.0175927199511413E-6	DEFECT
// The core loader must be reverse //reverse=true;	WITHOUT_CLASSIFICATION	0.9999999351341075	WITHOUT_CLASSIFICATION	6.486589253751243E-8	DEFECT
// This allows the core loader to load optional tasks // without delegating	WITHOUT_CLASSIFICATION	0.9999998785150072	WITHOUT_CLASSIFICATION	1.2148499278660107E-7	DEFECT
//wait for the StreamPumpers to finish	WITHOUT_CLASSIFICATION	0.9999995248703887	WITHOUT_CLASSIFICATION	4.751296113171547E-7	DEFECT
// Ignore exception	WITHOUT_CLASSIFICATION	0.9999993862274741	WITHOUT_CLASSIFICATION	6.137725258166672E-7	DEFECT
// Normalize the reference directory (containing the jar)	WITHOUT_CLASSIFICATION	0.9999999901453992	WITHOUT_CLASSIFICATION	9.854600746975559E-9	DEFECT
// Normalize the current file	WITHOUT_CLASSIFICATION	0.9999999643783904	WITHOUT_CLASSIFICATION	3.562160963236281E-8	DEFECT
// No match, so bail out!	WITHOUT_CLASSIFICATION	0.9999999699436722	WITHOUT_CLASSIFICATION	3.005632783516515E-8	DEFECT
// Finally assign the property with the manifest classpath	WITHOUT_CLASSIFICATION	0.9999892656993499	WITHOUT_CLASSIFICATION	1.073430065014994E-5	DEFECT
// try to find a MAX_LINE_LENGTH byte section	WITHOUT_CLASSIFICATION	0.9999979563921148	WITHOUT_CLASSIFICATION	2.043607885232644E-6	DEFECT
// continuation line	WITHOUT_CLASSIFICATION	0.999999090795227	WITHOUT_CLASSIFICATION	9.092047730721644E-7	DEFECT
// refresh attribute in case of multivalued attributes.	WITHOUT_CLASSIFICATION	0.9999998855872966	WITHOUT_CLASSIFICATION	1.1441270350223372E-7	DEFECT
// the merge file always wins	WITHOUT_CLASSIFICATION	0.9999934489587994	WITHOUT_CLASSIFICATION	6.5510412006215375E-6	DEFECT
// the merge file *always* wins, even for Class-Path	WITHOUT_CLASSIFICATION	0.9999928211577821	WITHOUT_CLASSIFICATION	7.178842217842784E-6	DEFECT
// add in the warnings	WITHOUT_CLASSIFICATION	0.9999996856920258	WITHOUT_CLASSIFICATION	3.14307974255689E-7	DEFECT
// This should be the manifest version	WITHOUT_CLASSIFICATION	0.999952297622512	WITHOUT_CLASSIFICATION	4.770237748796484E-5	DEFECT
// add it back	WITHOUT_CLASSIFICATION	0.9999980772779935	WITHOUT_CLASSIFICATION	1.9227220065844373E-6	DEFECT
// shouldn't happen - ignore	WITHOUT_CLASSIFICATION	0.9999761981401596	WITHOUT_CLASSIFICATION	2.3801859840427938E-5	DEFECT
// create a vector and add in the warnings for all the sections	WITHOUT_CLASSIFICATION	0.9999708239811602	WITHOUT_CLASSIFICATION	2.9176018839797425E-5	DEFECT
//off by default	WITHOUT_CLASSIFICATION	0.9999982032562004	WITHOUT_CLASSIFICATION	1.7967437996174824E-6	DEFECT
//set up logging	WITHOUT_CLASSIFICATION	0.999999965933943	WITHOUT_CLASSIFICATION	3.4066056933337485E-8	DEFECT
//execute the get	WITHOUT_CLASSIFICATION	0.999990246954457	WITHOUT_CLASSIFICATION	9.753045542964436E-6	DEFECT
//dont do any progress, unless asked	WITHOUT_CLASSIFICATION	0.9999986330941658	WITHOUT_CLASSIFICATION	1.3669058342157539E-6	DEFECT
//set the timestamp to the file date.	WITHOUT_CLASSIFICATION	0.9999999162389545	WITHOUT_CLASSIFICATION	8.376104553106958E-8	DEFECT
//set up the URL connection	WITHOUT_CLASSIFICATION	0.9999987071883931	WITHOUT_CLASSIFICATION	1.2928116068348138E-6	DEFECT
// Create as many directory prefixes as parent levels to traverse, // in addition to the reference directory itself	WITHOUT_CLASSIFICATION	0.999998734714198	WITHOUT_CLASSIFICATION	1.2652858020509358E-6	DEFECT
// Find the longest prefix shared by the current file // and the reference directory.	WITHOUT_CLASSIFICATION	0.9999999648027977	WITHOUT_CLASSIFICATION	3.5197202181466134E-8	DEFECT
// We have a match! Add as many ../ as parent // directory traversed to get the relative path	WITHOUT_CLASSIFICATION	0.9999986151605093	WITHOUT_CLASSIFICATION	1.3848394907578621E-6	DEFECT
// Manifest's ClassPath: attribute always uses forward // slashes '/', and is space-separated. Ant will properly // format it on 72 columns with proper line continuation	WITHOUT_CLASSIFICATION	0.9994156062333585	WITHOUT_CLASSIFICATION	5.843937666415194E-4	DEFECT
// a continuation on the first line is a // continuation of the name - concatenate this // line and the name	WITHOUT_CLASSIFICATION	0.9999999615145777	WITHOUT_CLASSIFICATION	3.848542226692742E-8	DEFECT
// required // required	WITHOUT_CLASSIFICATION	0.9999983322415869	WITHOUT_CLASSIFICATION	1.6677584130777845E-6	DEFECT
//modify the headers //NB: things like user authentication could go in here too.	WITHOUT_CLASSIFICATION	0.9927972150123047	WITHOUT_CLASSIFICATION	0.00720278498769533	DEFECT
// prepare Java 1.1 style credentials	WITHOUT_CLASSIFICATION	0.999998861284459	WITHOUT_CLASSIFICATION	1.138715541036392E-6	DEFECT
//we do not use the sun impl for portability, //and always use our own implementation for consistent //testing	WITHOUT_CLASSIFICATION	0.999999255602549	WITHOUT_CLASSIFICATION	7.443974510406313E-7	DEFECT
//connect to the remote site (may take some time)	WITHOUT_CLASSIFICATION	0.9998520728525276	WITHOUT_CLASSIFICATION	1.4792714747235974E-4	DEFECT
//next test for a 304 result (HTTP only)	WITHOUT_CLASSIFICATION	0.9999836742037185	WITHOUT_CLASSIFICATION	1.632579628150377E-5	DEFECT
// test for 401 result (HTTP only)	WITHOUT_CLASSIFICATION	0.9999977937661882	WITHOUT_CLASSIFICATION	2.2062338117135262E-6	DEFECT
//REVISIT: at this point even non HTTP connections may //support the if-modified-since behaviour -we just check //the date of the content and skip the write if it is not //newer. Some protocols (FTP) don't include dates, of //course.	WITHOUT_CLASSIFICATION	0.9999985386664749	WITHOUT_CLASSIFICATION	1.461333525072044E-6	DEFECT
//this three attempt trick is to get round quirks in different //Java implementations. Some of them take a few goes to bind //property; we ignore the first couple of such failures.	WITHOUT_CLASSIFICATION	0.9999963242604214	WITHOUT_CLASSIFICATION	3.675739578580466E-6	DEFECT
//successful download	WITHOUT_CLASSIFICATION	0.9999997113529991	WITHOUT_CLASSIFICATION	2.886470008991435E-7	DEFECT
// this happens if the projecthelper was not registered with the project.	WITHOUT_CLASSIFICATION	0.9995967847668705	WITHOUT_CLASSIFICATION	4.0321523312949906E-4	DEFECT
// methods to register and unregister shutdown hooks	WITHOUT_CLASSIFICATION	0.9999877357773207	WITHOUT_CLASSIFICATION	1.2264222679350695E-5	DEFECT
// check to see if the shutdown hook methods exists // (support pre-JDK 1.3 VMs)	WITHOUT_CLASSIFICATION	0.9999961483216709	WITHOUT_CLASSIFICATION	3.851678329047987E-6	DEFECT
// wait to add shutdown hook as needed	WITHOUT_CLASSIFICATION	0.9999995737020841	WITHOUT_CLASSIFICATION	4.2629791585541524E-7	DEFECT
// it just won't be added as a shutdown hook... :(	WITHOUT_CLASSIFICATION	0.9998292692648225	WITHOUT_CLASSIFICATION	1.707307351774748E-4	DEFECT
// shutdown already is in progress	WITHOUT_CLASSIFICATION	0.9999963663110353	WITHOUT_CLASSIFICATION	3.6336889646939028E-6	DEFECT
// Ignore Exception	WITHOUT_CLASSIFICATION	0.9999997655677488	WITHOUT_CLASSIFICATION	2.3443225114823844E-7	DEFECT
// shutdown already is in progress	WITHOUT_CLASSIFICATION	0.9999963663110353	WITHOUT_CLASSIFICATION	3.6336889646939028E-6	DEFECT
// I don't think we can use File - different rules // for relative paths.	WITHOUT_CLASSIFICATION	0.9999895422776807	WITHOUT_CLASSIFICATION	1.0457722319251288E-5	DEFECT
// this happens if ant is used with a project // helper that doesn't set the import.	WITHOUT_CLASSIFICATION	0.9999265253067989	WITHOUT_CLASSIFICATION	7.347469320108132E-5	DEFECT
// Paths are relative to the build file they're imported from, // *not* the current directory (same as entity includes).	WITHOUT_CLASSIFICATION	0.9999999914330068	WITHOUT_CLASSIFICATION	8.566993308587853E-9	DEFECT
// whether or not this ProcessDestroyer has been registered as a // shutdown hook	WITHOUT_CLASSIFICATION	0.9999953935969136	WITHOUT_CLASSIFICATION	4.606403086425076E-6	DEFECT
// whether or not this ProcessDestroyer is currently running as // shutdown hook	WITHOUT_CLASSIFICATION	0.9996334501776187	WITHOUT_CLASSIFICATION	3.665498223812814E-4	DEFECT
// this should return quickly, since it basically is a NO-OP.	WITHOUT_CLASSIFICATION	0.9997495270996216	WITHOUT_CLASSIFICATION	2.50472900378318E-4	DEFECT
// the thread didn't die in time // it should not kill any processes unexpectedly	WITHOUT_CLASSIFICATION	0.9999365302922891	WITHOUT_CLASSIFICATION	6.34697077109131E-5	DEFECT
// if this list is empty, register the shutdown hook	WITHOUT_CLASSIFICATION	0.999998532419898	WITHOUT_CLASSIFICATION	1.4675801019715303E-6	DEFECT
// need to load Task via system classloader or the new // task we want to define will never be a Task but always // be wrapped into a TaskAdapter.	WITHOUT_CLASSIFICATION	0.9999999904470206	WITHOUT_CLASSIFICATION	9.552979350704585E-9	DEFECT
// generate classpath, because kjc doesn't support sourcepath.	WITHOUT_CLASSIFICATION	0.9999996933837405	WITHOUT_CLASSIFICATION	3.0661625959428124E-7	DEFECT
// generate the clsspath	WITHOUT_CLASSIFICATION	0.9999999309762315	WITHOUT_CLASSIFICATION	6.902376848564179E-8	DEFECT
// kjc don't have bootclasspath option.	WITHOUT_CLASSIFICATION	0.9999996326304251	WITHOUT_CLASSIFICATION	3.6736957491562803E-7	DEFECT
// Process the factory class	WITHOUT_CLASSIFICATION	0.999997589436419	WITHOUT_CLASSIFICATION	2.4105635810279053E-6	DEFECT
// Process the factory path	WITHOUT_CLASSIFICATION	0.999999466714952	WITHOUT_CLASSIFICATION	5.332850481023798E-7	DEFECT
// Process the processor options	WITHOUT_CLASSIFICATION	0.9999999124645539	WITHOUT_CLASSIFICATION	8.753544615198509E-8	DEFECT
//set up the javac options	WITHOUT_CLASSIFICATION	0.999999997877497	WITHOUT_CLASSIFICATION	2.122502897305902E-9	DEFECT
//then add the Apt options	WITHOUT_CLASSIFICATION	0.999999772160631	WITHOUT_CLASSIFICATION	2.2783936903792124E-7	DEFECT
//finally invoke APT // Use reflection to be able to build on all JDKs:	WITHOUT_CLASSIFICATION	0.9999848345541325	WITHOUT_CLASSIFICATION	1.5165445867455825E-5	DEFECT
//rethrow build exceptions	WITHOUT_CLASSIFICATION	0.9999925403261981	WITHOUT_CLASSIFICATION	7.459673801812234E-6	DEFECT
//cast everything else to a build exception	WITHOUT_CLASSIFICATION	0.9999966513850843	WITHOUT_CLASSIFICATION	3.3486149155565786E-6	DEFECT
// Call the compile() method	WITHOUT_CLASSIFICATION	0.9999956756541472	WITHOUT_CLASSIFICATION	4.324345852855835E-6	DEFECT
// jvc doesn't support bootclasspath dir (-bootclasspath) // so we'll emulate it for compatibility and convenience.	WITHOUT_CLASSIFICATION	0.9999999987567474	WITHOUT_CLASSIFICATION	1.2432526218260373E-9	DEFECT
// jvc doesn't support an extension dir (-extdir) // so we'll emulate it for compatibility and convenience.	WITHOUT_CLASSIFICATION	0.9999999627924899	WITHOUT_CLASSIFICATION	3.720751008196827E-8	DEFECT
// jvc has no option for source-path so we // will add it to classpath.	WITHOUT_CLASSIFICATION	0.9999999741412632	WITHOUT_CLASSIFICATION	2.5858736875392476E-8	DEFECT
// Add the Classpath before the "internal" one.	WITHOUT_CLASSIFICATION	0.9999999948684025	WITHOUT_CLASSIFICATION	5.131597556408428E-9	DEFECT
// Enable MS-Extensions and ...	WITHOUT_CLASSIFICATION	0.9999893129160392	WITHOUT_CLASSIFICATION	1.0687083960753177E-5	DEFECT
// ... do not display a Message about this.	WITHOUT_CLASSIFICATION	0.9997514138163879	WITHOUT_CLASSIFICATION	2.485861836121362E-4	DEFECT
// Do not display Logo	WITHOUT_CLASSIFICATION	0.9999953109353916	WITHOUT_CLASSIFICATION	4.689064608390028E-6	DEFECT
//add the files	WITHOUT_CLASSIFICATION	0.9999997525287967	WITHOUT_CLASSIFICATION	2.4747120336651153E-7	DEFECT
//run	WITHOUT_CLASSIFICATION	0.999960095729824	WITHOUT_CLASSIFICATION	3.990427017592326E-5	DEFECT
//as new versions of java come out, add them to this test	WITHOUT_CLASSIFICATION	0.9999995514178031	WITHOUT_CLASSIFICATION	4.4858219692281374E-7	DEFECT
//on java<=1.3 the modern falls back to classic if it is not found //but on java>=1.4 we just bail out early	WITHOUT_CLASSIFICATION	0.999965459137597	WITHOUT_CLASSIFICATION	3.454086240299551E-5	DEFECT
// does the modern compiler exist?	WITHOUT_CLASSIFICATION	0.9995571092529434	WITHOUT_CLASSIFICATION	4.428907470566383E-4	DEFECT
// CheckStyle:ConstantNameCheck ON // CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999608303001	WITHOUT_CLASSIFICATION	3.9169699904777155E-8	DEFECT
// Combine the build classpath with the system classpath, in an // order determined by the value of build.sysclasspath	WITHOUT_CLASSIFICATION	0.9999994382023276	WITHOUT_CLASSIFICATION	5.617976724697879E-7	DEFECT
// For -sourcepath, use the "sourcepath" value if present. // Otherwise default to the "srcdir" value.	WITHOUT_CLASSIFICATION	0.9999999995136781	WITHOUT_CLASSIFICATION	4.863218284904126E-10	DEFECT
// Just add "sourcepath" to classpath ( for JDK1.1 ) // as well as "bootclasspath" and "extdirs"	WITHOUT_CLASSIFICATION	0.999999987526579	WITHOUT_CLASSIFICATION	1.2473420985318636E-8	DEFECT
// If the buildfile specifies sourcepath="", then don't // output any sourcepath.	WITHOUT_CLASSIFICATION	0.999999082192241	WITHOUT_CLASSIFICATION	9.178077590225348E-7	DEFECT
// If the buildfile specifies sourcepath="", then don't // output any sourcepath.	WITHOUT_CLASSIFICATION	0.999999082192241	WITHOUT_CLASSIFICATION	9.178077590225348E-7	DEFECT
// support for -source 1.1 and -source 1.2 has been // added with JDK 1.4.2 - and isn't present in 1.5.0 either	WITHOUT_CLASSIFICATION	0.9993498903117858	WITHOUT_CLASSIFICATION	6.501096882141126E-4	DEFECT
// 1.5.0 doesn't support -source 1.1	WITHOUT_CLASSIFICATION	0.9999733687338769	WITHOUT_CLASSIFICATION	2.6631266123151595E-5	DEFECT
//Use the VM launcher instead of shell launcher on VMS //for java	WITHOUT_CLASSIFICATION	0.9999765389515808	WITHOUT_CLASSIFICATION	2.3461048419140582E-5	DEFECT
// gcj doesn't support bootclasspath dir (-bootclasspath) // so we'll emulate it for compatibility and convenience.	WITHOUT_CLASSIFICATION	0.9999999975006453	WITHOUT_CLASSIFICATION	2.499354768560378E-9	DEFECT
// gcj doesn't support an extension dir (-extdir) // so we'll emulate it for compatibility and convenience.	WITHOUT_CLASSIFICATION	0.9999999252004277	WITHOUT_CLASSIFICATION	7.479957229769133E-8	DEFECT
// Gcj has no option for source-path so we // will add it to classpath.	WITHOUT_CLASSIFICATION	0.9999999783101184	WITHOUT_CLASSIFICATION	2.1689881663013672E-8	DEFECT
// Use reflection to be able to build on all JDKs >= 1.1:	WITHOUT_CLASSIFICATION	0.9999955894948735	WITHOUT_CLASSIFICATION	4.410505126446802E-6	DEFECT
// no bootclasspath, therefore, get one from the java runtime	WITHOUT_CLASSIFICATION	0.9999999942656592	WITHOUT_CLASSIFICATION	5.734340829659662E-9	DEFECT
// if the user has set JIKESPATH we should add the contents as well	WITHOUT_CLASSIFICATION	0.9999999950529329	WITHOUT_CLASSIFICATION	4.947067160397975E-9	DEFECT
//reflection to avoid bootstrap/build problems	WITHOUT_CLASSIFICATION	0.9999965545426874	WITHOUT_CLASSIFICATION	3.445457312602592E-6	DEFECT
//now verify that the class has an implementation	WITHOUT_CLASSIFICATION	0.9997558330320148	WITHOUT_CLASSIFICATION	2.4416696798523866E-4	DEFECT
//windows probing logic relies on the word 'windows' in //the OS	WITHOUT_CLASSIFICATION	0.9997192068675851	WITHOUT_CLASSIFICATION	2.8079313241495443E-4	DEFECT
//there are only four 9x platforms that we look for	WITHOUT_CLASSIFICATION	0.9999998641764268	WITHOUT_CLASSIFICATION	1.35823573119211E-7	DEFECT
//wince isn't really 9x, but crippled enough to //be a muchness. Ant doesnt run on CE, anyway.	WITHOUT_CLASSIFICATION	0.9988906621216357	WITHOUT_CLASSIFICATION	0.0011093378783643146	DEFECT
// millis per second	WITHOUT_CLASSIFICATION	0.999981344149748	WITHOUT_CLASSIFICATION	1.8655850251992514E-5	DEFECT
//get the host of a url	WITHOUT_CLASSIFICATION	0.999999911620195	WITHOUT_CLASSIFICATION	8.837980508781035E-8	DEFECT
//Java1.5: reachable = address.isReachable(timeout * 1000);	WITHOUT_CLASSIFICATION	0.999999505437497	WITHOUT_CLASSIFICATION	4.945625030004581E-7	DEFECT
//utterly implausible, but catered for anyway	WITHOUT_CLASSIFICATION	0.9999873335333398	WITHOUT_CLASSIFICATION	1.2666466660221423E-5	DEFECT
// load the parser class	WITHOUT_CLASSIFICATION	0.9999830688277879	WITHOUT_CLASSIFICATION	1.6931172212195446E-5	DEFECT
// may be altered in validate	WITHOUT_CLASSIFICATION	0.9999990084603897	WITHOUT_CLASSIFICATION	9.915396102217404E-7	DEFECT
// Error messages	WITHOUT_CLASSIFICATION	0.9999995335687266	WITHOUT_CLASSIFICATION	4.664312734385442E-7	DEFECT
// plain impossible	WITHOUT_CLASSIFICATION	0.9999999151131699	WITHOUT_CLASSIFICATION	8.48868301764514E-8	DEFECT
// support for -source 1.1 and -source 1.2 has been // added with JDK 1.4.2, Jikes doesn't like it	WITHOUT_CLASSIFICATION	0.9979158907430353	WITHOUT_CLASSIFICATION	0.00208410925696467	DEFECT
//assume this is an IOexception about un readability	WITHOUT_CLASSIFICATION	0.9999550012180948	WITHOUT_CLASSIFICATION	4.4998781905272414E-5	DEFECT
//any kind of fault: not reachable.	WITHOUT_CLASSIFICATION	0.9869517493899539	WITHOUT_CLASSIFICATION	0.013048250610046174	DEFECT
//java1.4 or earlier	WITHOUT_CLASSIFICATION	0.9999997973921807	WITHOUT_CLASSIFICATION	2.026078194140483E-7	DEFECT
// don't know the type, should throw exception instead?	WITHOUT_CLASSIFICATION	0.9989448677242402	WITHOUT_CLASSIFICATION	0.0010551322757597229	DEFECT
//pick a value that is good for everything	WITHOUT_CLASSIFICATION	0.9999663864942858	WITHOUT_CLASSIFICATION	3.3613505714164465E-5	DEFECT
//initial state is false.	WITHOUT_CLASSIFICATION	0.9999988126587083	WITHOUT_CLASSIFICATION	1.1873412917261417E-6	DEFECT
//every condition is xored against the previous one	WITHOUT_CLASSIFICATION	0.9999764276979375	WITHOUT_CLASSIFICATION	2.35723020625668E-5	DEFECT
//validate	WITHOUT_CLASSIFICATION	0.9999942054554607	WITHOUT_CLASSIFICATION	5.7945445393111415E-6	DEFECT
//#now match the files	WITHOUT_CLASSIFICATION	0.9999998822495242	WITHOUT_CLASSIFICATION	1.1775047581387694E-7	DEFECT
// Intentionally left blank	WITHOUT_CLASSIFICATION	0.9999947028829995	WITHOUT_CLASSIFICATION	5.29711700047751E-6	DEFECT
//private static final int GET_ENTRY = 0;	WITHOUT_CLASSIFICATION	0.9999999914703471	WITHOUT_CLASSIFICATION	8.529652890592137E-9	DEFECT
// make sure attributes are reset when // working on a 'new' file.	WITHOUT_CLASSIFICATION	0.9999204087179808	WITHOUT_CLASSIFICATION	7.959128201916643E-5	DEFECT
//We have ended changelog for that particular file //so we can save it	WITHOUT_CLASSIFICATION	0.9999999929020174	WITHOUT_CLASSIFICATION	7.097982629753615E-9	DEFECT
//was -1	WITHOUT_CLASSIFICATION	0.9999967571377101	WITHOUT_CLASSIFICATION	3.2428622898533203E-6	DEFECT
//was -1	WITHOUT_CLASSIFICATION	0.9999967571377101	WITHOUT_CLASSIFICATION	3.2428622898533203E-6	DEFECT
//There were no revisions in this changelog //entry so lets move onto next file	WITHOUT_CLASSIFICATION	0.9999999881079197	WITHOUT_CLASSIFICATION	1.1892080297066957E-8	DEFECT
//Reset comment to empty here as we can accumulate multiple lines //in the processComment method	WITHOUT_CLASSIFICATION	0.9999988754722041	WITHOUT_CLASSIFICATION	1.1245277959500278E-6	DEFECT
// We want something of the form: -d ">=YYYY-MM-dd"	WITHOUT_CLASSIFICATION	0.999999660398008	WITHOUT_CLASSIFICATION	3.396019919324405E-7	DEFECT
// Check if list of files to check has been specified	WITHOUT_CLASSIFICATION	0.999999939010402	WITHOUT_CLASSIFICATION	6.09895980373395E-8	DEFECT
//for now skip entries which are missing a date	WITHOUT_CLASSIFICATION	0.9999992037838852	WITHOUT_CLASSIFICATION	7.962161147726862E-7	DEFECT
//Skip dates that are too early	WITHOUT_CLASSIFICATION	0.9999978349412043	WITHOUT_CLASSIFICATION	2.1650587957174254E-6	DEFECT
//Skip dates that are too late	WITHOUT_CLASSIFICATION	0.9999992988742815	WITHOUT_CLASSIFICATION	7.011257184404637E-7	DEFECT
// validate the input parameters	WITHOUT_CLASSIFICATION	0.9999999413573502	WITHOUT_CLASSIFICATION	5.8642649930716495E-8	DEFECT
// build the rdiff command	WITHOUT_CLASSIFICATION	0.9999983386399134	WITHOUT_CLASSIFICATION	1.6613600865512716E-6	DEFECT
// if the two substrings are longer than the original, then name // contains address - so reset the name to null	WITHOUT_CLASSIFICATION	0.9999996309034119	WITHOUT_CLASSIFICATION	3.6909658808922285E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999229243365	WITHOUT_CLASSIFICATION	7.707566353111588E-8	DEFECT
// support multiple packages	WITHOUT_CLASSIFICATION	0.9999999022614205	WITHOUT_CLASSIFICATION	9.773857950733758E-8	DEFECT
// force command not to be null	WITHOUT_CLASSIFICATION	0.999901982403487	WITHOUT_CLASSIFICATION	9.801759651296727E-5	DEFECT
// run the cvs command	WITHOUT_CLASSIFICATION	0.9999918164988217	WITHOUT_CLASSIFICATION	8.183501178168481E-6	DEFECT
// parse the rdiff	WITHOUT_CLASSIFICATION	0.9999992509302987	WITHOUT_CLASSIFICATION	7.490697012683156E-7	DEFECT
// write the tag diff	WITHOUT_CLASSIFICATION	0.9999999206118417	WITHOUT_CLASSIFICATION	7.938815822620744E-8	DEFECT
// parse the output of the command	WITHOUT_CLASSIFICATION	0.9999989669653755	WITHOUT_CLASSIFICATION	1.033034624471489E-6	DEFECT
// it is a new file // set the revision but not the prevrevision	WITHOUT_CLASSIFICATION	0.9999958295074056	WITHOUT_CLASSIFICATION	4.170492594365291E-6	DEFECT
// it is a modified file // set the revision and the prevrevision	WITHOUT_CLASSIFICATION	0.9999996304842106	WITHOUT_CLASSIFICATION	3.695157894196032E-7	DEFECT
// it is a removed file	WITHOUT_CLASSIFICATION	0.9999993575674121	WITHOUT_CLASSIFICATION	6.424325878649809E-7	DEFECT
/* special headers */	WITHOUT_CLASSIFICATION	0.999999246047874	WITHOUT_CLASSIFICATION	7.539521259301791E-7	DEFECT
// prepare for the auto select mechanism	WITHOUT_CLASSIFICATION	0.9999999862810759	WITHOUT_CLASSIFICATION	1.3718924184368067E-8	DEFECT
// try MIME format	WITHOUT_CLASSIFICATION	0.9999905745859835	WITHOUT_CLASSIFICATION	9.425414016471819E-6	DEFECT
// SMTP auth only allowed with MIME mail	WITHOUT_CLASSIFICATION	0.999981486429278	WITHOUT_CLASSIFICATION	1.8513570722043972E-5	DEFECT
// SSL only allowed with MIME mail	WITHOUT_CLASSIFICATION	0.9999538683794558	WITHOUT_CLASSIFICATION	4.613162054422829E-5	DEFECT
// try UU format	WITHOUT_CLASSIFICATION	0.9999987261488631	WITHOUT_CLASSIFICATION	1.2738511369825368E-6	DEFECT
// try plain format	WITHOUT_CLASSIFICATION	0.9999988923768417	WITHOUT_CLASSIFICATION	1.1076231583584315E-6	DEFECT
// a valid mailer must be present by now	WITHOUT_CLASSIFICATION	0.9999999387704921	WITHOUT_CLASSIFICATION	6.122950793198187E-8	DEFECT
// a valid message is required	WITHOUT_CLASSIFICATION	0.999997793503386	WITHOUT_CLASSIFICATION	2.206496614061378E-6	DEFECT
// an address to send from is required	WITHOUT_CLASSIFICATION	0.9999827804957708	WITHOUT_CLASSIFICATION	1.7219504229181502E-5	DEFECT
// at least one address to send to/cc/bcc is required	WITHOUT_CLASSIFICATION	0.9999951664238013	WITHOUT_CLASSIFICATION	4.833576198775868E-6	DEFECT
// set the mimetype if not done already (and required)	WITHOUT_CLASSIFICATION	0.9999941717680393	WITHOUT_CLASSIFICATION	5.828231960757804E-6	DEFECT
// set the character set if not done already (and required)	WITHOUT_CLASSIFICATION	0.9999993817854376	WITHOUT_CLASSIFICATION	6.182145624640783E-7	DEFECT
// identify which files should be attached	WITHOUT_CLASSIFICATION	0.9999861484642169	WITHOUT_CLASSIFICATION	1.3851535783230826E-5	DEFECT
// let the user know what's going to happen	WITHOUT_CLASSIFICATION	0.9999941319202575	WITHOUT_CLASSIFICATION	5.868079742433479E-6	DEFECT
// pass the params to the mailer	WITHOUT_CLASSIFICATION	0.9999959635839824	WITHOUT_CLASSIFICATION	4.0364160176411785E-6	DEFECT
// send the email	WITHOUT_CLASSIFICATION	0.9999996599323808	WITHOUT_CLASSIFICATION	3.4006761911220894E-7	DEFECT
// let the user know what happened	WITHOUT_CLASSIFICATION	0.9999966655595174	WITHOUT_CLASSIFICATION	3.3344404826520903E-6	DEFECT
// CheckStyle:MemberNameCheck ON	WITHOUT_CLASSIFICATION	0.9999991931057962	WITHOUT_CLASSIFICATION	8.068942037338613E-7	DEFECT
// Read message from a file	WITHOUT_CLASSIFICATION	0.9999986145531599	WITHOUT_CLASSIFICATION	1.3854468401422185E-6	DEFECT
// Make a limited attempt to extract a sanitized name and email address // Algorithm based on the one found in Ant's MailMessage.java	WITHOUT_CLASSIFICATION	0.9999873773754382	WITHOUT_CLASSIFICATION	1.2622624561825982E-5	DEFECT
// shortcut for "<address>"	WITHOUT_CLASSIFICATION	0.9999999636491694	WITHOUT_CLASSIFICATION	3.635083055880335E-8	DEFECT
// support "address (name)"	WITHOUT_CLASSIFICATION	0.9999995081803155	WITHOUT_CLASSIFICATION	4.918196845361431E-7	DEFECT
// support "(name) address"	WITHOUT_CLASSIFICATION	0.9999995259913037	WITHOUT_CLASSIFICATION	4.7400869630773684E-7	DEFECT
// To work properly with national charsets we have to use // implementation of interface javax.activation.DataSource	WITHOUT_CLASSIFICATION	0.9995736714347063	WITHOUT_CLASSIFICATION	4.2632856529370645E-4	DEFECT
// Must be like "text/plain; charset=windows-1251"	WITHOUT_CLASSIFICATION	0.9999999775326974	WITHOUT_CLASSIFICATION	2.246730259920457E-8	DEFECT
// Aside, the JDK is clearly unaware of the Scottish // 'session', which involves excessive quantities of // alcohol :-)	WITHOUT_CLASSIFICATION	0.999998072738078	WITHOUT_CLASSIFICATION	1.9272619220286415E-6	DEFECT
// SMTP provider	WITHOUT_CLASSIFICATION	0.9999929619962583	WITHOUT_CLASSIFICATION	7.03800374169833E-6	DEFECT
//create the message	WITHOUT_CLASSIFICATION	0.9999999398659515	WITHOUT_CLASSIFICATION	6.013404852774477E-8	DEFECT
//set the sender	WITHOUT_CLASSIFICATION	0.9999987538636502	WITHOUT_CLASSIFICATION	1.246136349848635E-6	DEFECT
// set the reply to addresses	WITHOUT_CLASSIFICATION	0.9999999740023269	WITHOUT_CLASSIFICATION	2.5997673125486863E-8	DEFECT
// Choosing character set of the mail message // First: looking it from MimeType	WITHOUT_CLASSIFICATION	0.9999988587595386	WITHOUT_CLASSIFICATION	1.1412404613244518E-6	DEFECT
// Assign/reassign message charset from MimeType	WITHOUT_CLASSIFICATION	0.9999998770759964	WITHOUT_CLASSIFICATION	1.2292400362976898E-7	DEFECT
// Next: looking if charset having explicit definition	WITHOUT_CLASSIFICATION	0.9999997993155557	WITHOUT_CLASSIFICATION	2.0068444426258016E-7	DEFECT
// Using default	WITHOUT_CLASSIFICATION	0.9999999322972308	WITHOUT_CLASSIFICATION	6.77027690993465E-8	DEFECT
// Using javax.activation.DataSource paradigm	WITHOUT_CLASSIFICATION	0.9999999496039796	WITHOUT_CLASSIFICATION	5.0396020475513474E-8	DEFECT
// Assuming mime type in form "text/XXXX; charset=XXXXXX"	WITHOUT_CLASSIFICATION	0.9999993670694994	WITHOUT_CLASSIFICATION	6.329305005542805E-7	DEFECT
// Skip 'charset='	WITHOUT_CLASSIFICATION	0.9999999734130499	WITHOUT_CLASSIFICATION	2.658695009721362E-8	DEFECT
// Scanner to find our inputs // list of files to process	WITHOUT_CLASSIFICATION	0.9999999259606578	WITHOUT_CLASSIFICATION	7.403934219670038E-8	DEFECT
// default srcDir to basedir	WITHOUT_CLASSIFICATION	0.9999998871390372	WITHOUT_CLASSIFICATION	1.1286096279442557E-7	DEFECT
// Require destDir	WITHOUT_CLASSIFICATION	0.9999960716284005	WITHOUT_CLASSIFICATION	3.9283715994984115E-6	DEFECT
// if src and dest dirs are the same, require the extension // to be set, so we don't stomp every file.  One could still // include a file with the same extension, but ....	WITHOUT_CLASSIFICATION	0.9999958192451228	WITHOUT_CLASSIFICATION	4.180754877190804E-6	DEFECT
// File to convert // where to put the results	WITHOUT_CLASSIFICATION	0.9999998921412097	WITHOUT_CLASSIFICATION	1.0785879032652884E-7	DEFECT
// Build the full file names	WITHOUT_CLASSIFICATION	0.9999981378394293	WITHOUT_CLASSIFICATION	1.8621605708016062E-6	DEFECT
// Make sure we're not about to clobber something	WITHOUT_CLASSIFICATION	0.9999999356543711	WITHOUT_CLASSIFICATION	6.434562897900188E-8	DEFECT
// Make intermediate directories if needed // XXX JDK 1.1 doesn't have File.getParentFile,	WITHOUT_CLASSIFICATION	0.9998797192785022	WITHOUT_CLASSIFICATION	1.2028072149785042E-4	DEFECT
//this.fork = s;	WITHOUT_CLASSIFICATION	0.999999270894759	WITHOUT_CLASSIFICATION	7.291052408829832E-7	DEFECT
//TODO: use ANTLR to parse the grammar file to do this.	WITHOUT_CLASSIFICATION	0.9953435094685131	WITHOUT_CLASSIFICATION	0.004656490531486846	DEFECT
// if no output directory is specified, used the target's directory	WITHOUT_CLASSIFICATION	0.9999999999737065	WITHOUT_CLASSIFICATION	2.6293517433789822E-11	DEFECT
// first off, make sure that we've got a from and to extension	WITHOUT_CLASSIFICATION	0.9999995599701265	WITHOUT_CLASSIFICATION	4.4002987349843285E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc // CheckStyle:MemberNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9999999199131375	WITHOUT_CLASSIFICATION	8.008686249783988E-8	DEFECT
// CheckStyle:MemberNameCheck ON // CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999632241419	WITHOUT_CLASSIFICATION	3.67758580551986E-8	DEFECT
// Error strings	WITHOUT_CLASSIFICATION	0.9999942825818764	WITHOUT_CLASSIFICATION	5.717418123564937E-6	DEFECT
//validating	WITHOUT_CLASSIFICATION	0.9999945133451585	WITHOUT_CLASSIFICATION	5.48665484143976E-6	DEFECT
//set the schema source for the doc	WITHOUT_CLASSIFICATION	0.9999999652257973	WITHOUT_CLASSIFICATION	3.477420271367399E-8	DEFECT
//set the schema source for the doc	WITHOUT_CLASSIFICATION	0.9999999652257973	WITHOUT_CLASSIFICATION	3.477420271367399E-8	DEFECT
//enable XSD	WITHOUT_CLASSIFICATION	0.9999977337255019	WITHOUT_CLASSIFICATION	2.266274498157584E-6	DEFECT
//validate the parser type	WITHOUT_CLASSIFICATION	0.9999934084623653	WITHOUT_CLASSIFICATION	6.59153763461602E-6	DEFECT
//couldnt use the xerces or jaxp calls	WITHOUT_CLASSIFICATION	0.9999991286222017	WITHOUT_CLASSIFICATION	8.713777982011509E-7	DEFECT
//enable schema checking	WITHOUT_CLASSIFICATION	0.9999997246144467	WITHOUT_CLASSIFICATION	2.753855532993875E-7	DEFECT
//turn off DTDs if desired	WITHOUT_CLASSIFICATION	0.9999999064175958	WITHOUT_CLASSIFICATION	9.35824041758052E-8	DEFECT
//schema declarations go in next	WITHOUT_CLASSIFICATION	0.9999904921015734	WITHOUT_CLASSIFICATION	9.50789842659092E-6	DEFECT
// first off, make sure that we've got a srcdir and destdir	WITHOUT_CLASSIFICATION	0.9999999063276428	WITHOUT_CLASSIFICATION	9.367235721864236E-8	DEFECT
//enable schema //setFeature(XmlConstants.FEATURE_VALIDATION, false);	WITHOUT_CLASSIFICATION	0.999999965706438	WITHOUT_CLASSIFICATION	3.429356197491794E-8	DEFECT
//this is almost implausible, but required handling	WITHOUT_CLASSIFICATION	0.9999756242413843	WITHOUT_CLASSIFICATION	2.4375758615771038E-5	DEFECT
//SchemaLocation	WITHOUT_CLASSIFICATION	0.9999971246747485	WITHOUT_CLASSIFICATION	2.875325251535375E-6	DEFECT
//private Path extdirs;	WITHOUT_CLASSIFICATION	0.9999979661018473	WITHOUT_CLASSIFICATION	2.0338981526530723E-6	DEFECT
// first off, make sure that we've got a srcdir	WITHOUT_CLASSIFICATION	0.9999998661034865	WITHOUT_CLASSIFICATION	1.3389651341987095E-7	DEFECT
// Keep jdk 1.1 compliant so others can use this	WITHOUT_CLASSIFICATION	0.9999999436279445	WITHOUT_CLASSIFICATION	5.637205549803278E-8	DEFECT
// second CR -> EOL + possibly empty line	WITHOUT_CLASSIFICATION	0.9999996520705661	WITHOUT_CLASSIFICATION	3.479294339261558E-7	DEFECT
// first CR in this line	WITHOUT_CLASSIFICATION	0.999999902464726	WITHOUT_CLASSIFICATION	9.753527400344178E-8	DEFECT
// LF -> EOL	WITHOUT_CLASSIFICATION	0.999999744088016	WITHOUT_CLASSIFICATION	2.5591198411148173E-7	DEFECT
// any other char	WITHOUT_CLASSIFICATION	0.9999998861765734	WITHOUT_CLASSIFICATION	1.1382342660367011E-7	DEFECT
// Mac-style linebreak or EOF (or both)	WITHOUT_CLASSIFICATION	0.9999999431874319	WITHOUT_CLASSIFICATION	5.6812567966946394E-8	DEFECT
// variables to hold arguments	WITHOUT_CLASSIFICATION	0.9999999181914656	WITHOUT_CLASSIFICATION	8.180853436798182E-8	DEFECT
// ?? Should this be the default for ant?	WITHOUT_CLASSIFICATION	0.9999999691447737	WITHOUT_CLASSIFICATION	3.085522631312062E-8	DEFECT
// constants for the messages to suppress by flags and their corresponding properties	WITHOUT_CLASSIFICATION	0.9998929199705726	WITHOUT_CLASSIFICATION	1.0708002942741179E-4	DEFECT
// other implementation variables	WITHOUT_CLASSIFICATION	0.9999998745426577	WITHOUT_CLASSIFICATION	1.2545734231371324E-7	DEFECT
// classpath makes no sense	WITHOUT_CLASSIFICATION	0.9999997262961552	WITHOUT_CLASSIFICATION	2.737038448170709E-7	DEFECT
// destDir	WITHOUT_CLASSIFICATION	0.9999995785627792	WITHOUT_CLASSIFICATION	4.2143722085836304E-7	DEFECT
// srcDir	WITHOUT_CLASSIFICATION	0.9999996352027454	WITHOUT_CLASSIFICATION	3.647972545281856E-7	DEFECT
// copy the source and support files	WITHOUT_CLASSIFICATION	0.9999997119775522	WITHOUT_CLASSIFICATION	2.88022447772718E-7	DEFECT
// compile the source files	WITHOUT_CLASSIFICATION	0.9999999795596829	WITHOUT_CLASSIFICATION	2.044031704725681E-8	DEFECT
// create an array of strings for input to the compiler: one array // comes from the compile options, the other from the compileList	WITHOUT_CLASSIFICATION	0.9999979753258021	WITHOUT_CLASSIFICATION	2.024674197928592E-6	DEFECT
// create a single array of arguments for the compiler	WITHOUT_CLASSIFICATION	0.9999997276945481	WITHOUT_CLASSIFICATION	2.7230545180853053E-7	DEFECT
// print nice output about what we are doing for the log	WITHOUT_CLASSIFICATION	0.9999999848156551	WITHOUT_CLASSIFICATION	1.5184344941991034E-8	DEFECT
// need to set java.class.path property and restore it later // since the NetRexx compiler has no option for the classpath	WITHOUT_CLASSIFICATION	0.9999996853075862	WITHOUT_CLASSIFICATION	3.146924137087032E-7	DEFECT
// path is mentioned in the message	WITHOUT_CLASSIFICATION	0.9999955871170001	WITHOUT_CLASSIFICATION	4.412882999912408E-6	DEFECT
// verbose level logging for suppressed messages	WITHOUT_CLASSIFICATION	0.9999999926788756	WITHOUT_CLASSIFICATION	7.321124355967599E-9	DEFECT
// error level logging for compiler errors	WITHOUT_CLASSIFICATION	0.9999999375438196	WITHOUT_CLASSIFICATION	6.245618044195034E-8	DEFECT
// warning for all warning messages	WITHOUT_CLASSIFICATION	0.9999999452627107	WITHOUT_CLASSIFICATION	5.4737289153585806E-8	DEFECT
// info level for the rest.	WITHOUT_CLASSIFICATION	0.9999999545083222	WITHOUT_CLASSIFICATION	4.5491677772150114E-8	DEFECT
// need to reset java.class.path property // since the NetRexx compiler has no option for the classpath	WITHOUT_CLASSIFICATION	0.9999999661159981	WITHOUT_CLASSIFICATION	3.3884001958097335E-8	DEFECT
// add our classpath to the mix	WITHOUT_CLASSIFICATION	0.9999997563698915	WITHOUT_CLASSIFICATION	2.436301085297931E-7	DEFECT
// add the system classpath // addExistingToClasspath(classpath,System.getProperty("java.class.path"));	WITHOUT_CLASSIFICATION	0.9999999958439715	WITHOUT_CLASSIFICATION	4.15602846721495E-9	DEFECT
// XMLReader used to validation process	WITHOUT_CLASSIFICATION	0.999995791625	WITHOUT_CLASSIFICATION	4.208375000062417E-6	DEFECT
// turn validation on	WITHOUT_CLASSIFICATION	0.9999963178528474	WITHOUT_CLASSIFICATION	3.6821471526544852E-6	DEFECT
// set the feature from the attribute list	WITHOUT_CLASSIFICATION	0.9999999945766134	WITHOUT_CLASSIFICATION	5.423386720548967E-9	DEFECT
// Sets properties	WITHOUT_CLASSIFICATION	0.9999994153762475	WITHOUT_CLASSIFICATION	5.846237525636012E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999229243365	WITHOUT_CLASSIFICATION	7.707566353111588E-8	DEFECT
// quick exit if the target is up to date	WITHOUT_CLASSIFICATION	0.9999999896168151	WITHOUT_CLASSIFICATION	1.038318490264306E-8	DEFECT
// ant task properties // defaults // CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999999922498408	WITHOUT_CLASSIFICATION	7.750159155222964E-9	DEFECT
// to report sax parsing errors // CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999894424350503	WITHOUT_CLASSIFICATION	1.0557564949803123E-5	DEFECT
// then check it implements XMLReader	WITHOUT_CLASSIFICATION	0.9999668841680773	WITHOUT_CLASSIFICATION	3.311583192267342E-5	DEFECT
// see if it is a SAX1 Parser	WITHOUT_CLASSIFICATION	0.9999996646024557	WITHOUT_CLASSIFICATION	3.353975443082533E-7	DEFECT
// Validates property	WITHOUT_CLASSIFICATION	0.9999958160577092	WITHOUT_CLASSIFICATION	4.1839422908219665E-6	DEFECT
//for every file, we have a new instance of the validator	WITHOUT_CLASSIFICATION	0.9999934402840982	WITHOUT_CLASSIFICATION	6.559715901794462E-6	DEFECT
// if this is not a valid file: just use the uri	WITHOUT_CLASSIFICATION	0.9999995330743064	WITHOUT_CLASSIFICATION	4.6692569366389284E-7	DEFECT
// Property	WITHOUT_CLASSIFICATION	0.9999950197635151	WITHOUT_CLASSIFICATION	4.980236484965538E-6	DEFECT
/*     * I'm not fond of this pattern: "sub-method expected to throw     * task-cancelling exceptions".  It feels too much like programming     * for side-effects to me...     */	WITHOUT_CLASSIFICATION	0.7926153469198609	DEFECT	0.20738465308013918	WITHOUT_CLASSIFICATION
// get files from old methods - includes and nested include	WITHOUT_CLASSIFICATION	0.999999912007858	WITHOUT_CLASSIFICATION	8.799214199849474E-8	DEFECT
// Create the stream pumpers to forward listcab's stdout and stderr to the log // note: listcab is an interactive program, and issues prompts for every new line. //       Therefore, make it show only with verbose logging turned on.	WITHOUT_CLASSIFICATION	0.9994956929182403	WITHOUT_CLASSIFICATION	5.043070817597856E-4	DEFECT
// Pump streams asynchronously	WITHOUT_CLASSIFICATION	0.9999999445566378	WITHOUT_CLASSIFICATION	5.544336217738757E-8	DEFECT
// A wild default for when the thread is interrupted	WITHOUT_CLASSIFICATION	0.9999998168558231	WITHOUT_CLASSIFICATION	1.8314417701061512E-7	DEFECT
// Wait for the process to finish	WITHOUT_CLASSIFICATION	0.9999997860448989	WITHOUT_CLASSIFICATION	2.1395510107396001E-7	DEFECT
// Wait for the end of output and error streams	WITHOUT_CLASSIFICATION	0.9999918517395631	WITHOUT_CLASSIFICATION	8.14826043689478E-6	DEFECT
// Informative summary message in case of errors	WITHOUT_CLASSIFICATION	0.999999782601137	WITHOUT_CLASSIFICATION	2.1739886305136954E-7	DEFECT
// die if cabarc fails	WITHOUT_CLASSIFICATION	0.9999970925825059	WITHOUT_CLASSIFICATION	2.907417494125675E-6	DEFECT
// Use this to prepend a message to the properties file	WITHOUT_CLASSIFICATION	0.9999961382927195	WITHOUT_CLASSIFICATION	3.861707280501886E-6	DEFECT
/* ========================================================================    *    * Constructors    */	WITHOUT_CLASSIFICATION	0.9999999776228571	WITHOUT_CLASSIFICATION	2.237714285475193E-8	DEFECT
/* ========================================================================    *    * Methods    */	WITHOUT_CLASSIFICATION	0.9999986808978353	WITHOUT_CLASSIFICATION	1.3191021648363445E-6	DEFECT
// Create the PropertyFile	WITHOUT_CLASSIFICATION	0.9999998682529161	WITHOUT_CLASSIFICATION	1.317470839497173E-7	DEFECT
// type may be null because it wasn't set	WITHOUT_CLASSIFICATION	0.9999206777732709	WITHOUT_CLASSIFICATION	7.932222672905115E-5	DEFECT
// Default to string type // which means do nothing	WITHOUT_CLASSIFICATION	0.999999924793606	WITHOUT_CLASSIFICATION	7.520639408666189E-8	DEFECT
// Insert as a string by default	WITHOUT_CLASSIFICATION	0.999999824838568	WITHOUT_CLASSIFICATION	1.7516143193236936E-7	DEFECT
// swallow	WITHOUT_CLASSIFICATION	0.9999986586519586	WITHOUT_CLASSIFICATION	1.3413480415120332E-6	DEFECT
// configure the transformer...	WITHOUT_CLASSIFICATION	0.999999899149052	WITHOUT_CLASSIFICATION	1.0085094796648381E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999999198791225	WITHOUT_CLASSIFICATION	8.012087743264267E-8	DEFECT
// If only value is specified, the property is set to it // regardless of its previous value.	WITHOUT_CLASSIFICATION	0.9999999572080234	WITHOUT_CLASSIFICATION	4.279197653385599E-8	DEFECT
// If only default is specified and the property did not // exist in the property file, the property is set to default.	WITHOUT_CLASSIFICATION	0.9999916133140633	WITHOUT_CLASSIFICATION	8.386685936809896E-6	DEFECT
// If value and default are both specified and the property // previously existed in the property file, the property // is set to value.	WITHOUT_CLASSIFICATION	0.9999999625786508	WITHOUT_CLASSIFICATION	3.742134922650064E-8	DEFECT
// If value and default are both specified and the property // did not exist in the property file, the property is set // to default.	WITHOUT_CLASSIFICATION	0.9999966696649256	WITHOUT_CLASSIFICATION	3.3303350744587993E-6	DEFECT
// Property type operations	WITHOUT_CLASSIFICATION	0.9999999533246774	WITHOUT_CLASSIFICATION	4.667532260744997E-8	DEFECT
// Property types	WITHOUT_CLASSIFICATION	0.9999993350786077	WITHOUT_CLASSIFICATION	6.649213923695475E-7	DEFECT
// resetting the stylesheet - reset transformer	WITHOUT_CLASSIFICATION	0.999998545734952	WITHOUT_CLASSIFICATION	1.4542650480696346E-6	DEFECT
// do we need to reset templates as well	WITHOUT_CLASSIFICATION	0.9999999496660698	WITHOUT_CLASSIFICATION	5.033393020115915E-8	DEFECT
// set parameters on each transformation, maybe something has changed //(e.g. value of file name parameter)	WITHOUT_CLASSIFICATION	0.999999982384332	WITHOUT_CLASSIFICATION	1.76156680857181E-8	DEFECT
// end of try-catch	WITHOUT_CLASSIFICATION	0.9999997319034956	WITHOUT_CLASSIFICATION	2.680965043663052E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999997594604898	WITHOUT_CLASSIFICATION	2.4053951019376697E-7	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9999976685470136	WITHOUT_CLASSIFICATION	2.331452986425402E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999229243365	WITHOUT_CLASSIFICATION	7.707566353111588E-8	DEFECT
// WARN: Don't use the StreamSource(File) ctor. It won't work with // xalan prior to 2.2 because of systemid bugs.	WITHOUT_CLASSIFICATION	0.8805798357896222	WITHOUT_CLASSIFICATION	0.11942016421037774	DEFECT
// Use a stream so that you can close it yourself quickly // and avoid keeping the handle until the object is garbaged. // (always keep control), otherwise you won't be able to delete // the file quickly on windows.	WITHOUT_CLASSIFICATION	0.9999954490472118	WITHOUT_CLASSIFICATION	4.550952788209759E-6	DEFECT
// not initialized yet, so create the factory	WITHOUT_CLASSIFICATION	0.9999981955536972	WITHOUT_CLASSIFICATION	1.8044463028719049E-6	DEFECT
// specific attributes for the transformer	WITHOUT_CLASSIFICATION	0.9999999983638096	WITHOUT_CLASSIFICATION	1.6361903963601218E-9	DEFECT
// kept for backwards compatibility	WITHOUT_CLASSIFICATION	0.9999993761284163	WITHOUT_CLASSIFICATION	6.238715836811353E-7	DEFECT
// configure factory attributes	WITHOUT_CLASSIFICATION	0.9999999006786234	WITHOUT_CLASSIFICATION	9.932137663444478E-8	DEFECT
// use XMLCatalog as the entity resolver and URI resolver	WITHOUT_CLASSIFICATION	0.9999649304557116	WITHOUT_CLASSIFICATION	3.506954428847463E-5	DEFECT
// configure output properties	WITHOUT_CLASSIFICATION	0.9999999366129068	WITHOUT_CLASSIFICATION	6.338709317665833E-8	DEFECT
//copy the properties file	WITHOUT_CLASSIFICATION	0.9999943035053899	WITHOUT_CLASSIFICATION	5.696494610126309E-6	DEFECT
/* load properties from file if specified, otherwise        use Ant's properties */	WITHOUT_CLASSIFICATION	0.9999999989314264	WITHOUT_CLASSIFICATION	1.0685735580838182E-9	DEFECT
// add ant properties	WITHOUT_CLASSIFICATION	0.999999956231659	WITHOUT_CLASSIFICATION	4.3768340997890575E-8	DEFECT
//sort the list. Makes SCM and manual diffs easier.	WITHOUT_CLASSIFICATION	0.9999999383386414	WITHOUT_CLASSIFICATION	6.166135850269063E-8	DEFECT
// create XML document	WITHOUT_CLASSIFICATION	0.9999995834177096	WITHOUT_CLASSIFICATION	4.165822903988735E-7	DEFECT
// output properties	WITHOUT_CLASSIFICATION	0.9999998088817976	WITHOUT_CLASSIFICATION	1.9111820243881873E-7	DEFECT
// build the command line from what we got the format // as specified in the CCM.EXE help	WITHOUT_CLASSIFICATION	0.9999988440913037	WITHOUT_CLASSIFICATION	1.1559086963303092E-6	DEFECT
//create task ok, set this task as the default one	WITHOUT_CLASSIFICATION	0.9999999976513048	WITHOUT_CLASSIFICATION	2.3486952898434257E-9	DEFECT
// implementation of org.apache.tools.ant.taskdefs.ExecuteStreamHandler interface	WITHOUT_CLASSIFICATION	0.9999999892122813	WITHOUT_CLASSIFICATION	1.0787718659803248E-8	DEFECT
// build the command line from what we got the format is // ccm co /t .. files // as specified in the CCM.EXE help	WITHOUT_CLASSIFICATION	0.9999949761648143	WITHOUT_CLASSIFICATION	5.023835185812355E-6	DEFECT
// Default the viewpath to basedir if it is not specified	WITHOUT_CLASSIFICATION	0.9999996638675734	WITHOUT_CLASSIFICATION	3.361324265813926E-7	DEFECT
/*         * If configured to not care about whether the element is         * already checked out to the current view.         * Then check to see if it is checked out.         */	WITHOUT_CLASSIFICATION	0.9999998983600664	WITHOUT_CLASSIFICATION	1.016399335477657E-7	DEFECT
// viewpath	WITHOUT_CLASSIFICATION	0.9999995983828567	WITHOUT_CLASSIFICATION	4.016171432816335E-7	DEFECT
// ClearCase items	WITHOUT_CLASSIFICATION	0.9999999823257395	WITHOUT_CLASSIFICATION	1.7674260509208362E-8	DEFECT
// -reserved	WITHOUT_CLASSIFICATION	0.9999998436039771	WITHOUT_CLASSIFICATION	1.5639602282816105E-7	DEFECT
// -unreserved	WITHOUT_CLASSIFICATION	0.9999997757569521	WITHOUT_CLASSIFICATION	2.2424304785437952E-7	DEFECT
// -out	WITHOUT_CLASSIFICATION	0.9999968140641599	WITHOUT_CLASSIFICATION	3.18593584009779E-6	DEFECT
// -ndata	WITHOUT_CLASSIFICATION	0.9999964772748567	WITHOUT_CLASSIFICATION	3.5227251432287624E-6	DEFECT
// -version	WITHOUT_CLASSIFICATION	0.9999996784405164	WITHOUT_CLASSIFICATION	3.2155948358106524E-7	DEFECT
// -nwarn	WITHOUT_CLASSIFICATION	0.9999978388677178	WITHOUT_CLASSIFICATION	2.1611322822168573E-6	DEFECT
// viewpath	WITHOUT_CLASSIFICATION	0.9999995983828567	WITHOUT_CLASSIFICATION	4.016171432816335E-7	DEFECT
// build the command line from what we got the format is // cleartool lsco [options...] [viewpath ...] // as specified in the CLEARTOOL.EXE help	WITHOUT_CLASSIFICATION	0.9999996201865392	WITHOUT_CLASSIFICATION	3.7981346079060506E-7	DEFECT
// -version	WITHOUT_CLASSIFICATION	0.9999996784405164	WITHOUT_CLASSIFICATION	3.2155948358106524E-7	DEFECT
// -nwarn	WITHOUT_CLASSIFICATION	0.9999978388677178	WITHOUT_CLASSIFICATION	2.1611322822168573E-6	DEFECT
// type value	WITHOUT_CLASSIFICATION	0.9999955034209674	WITHOUT_CLASSIFICATION	4.49657903258724E-6	DEFECT
// -c	WITHOUT_CLASSIFICATION	0.999998356680856	WITHOUT_CLASSIFICATION	1.6433191440221914E-6	DEFECT
// -c	WITHOUT_CLASSIFICATION	0.999998356680856	WITHOUT_CLASSIFICATION	1.6433191440221914E-6	DEFECT
// -cfile	WITHOUT_CLASSIFICATION	0.9999995816619408	WITHOUT_CLASSIFICATION	4.1833805928515605E-7	DEFECT
// -cfile	WITHOUT_CLASSIFICATION	0.9999995816619408	WITHOUT_CLASSIFICATION	4.1833805928515605E-7	DEFECT
// -cfile	WITHOUT_CLASSIFICATION	0.9999995816619408	WITHOUT_CLASSIFICATION	4.1833805928515605E-7	DEFECT
// build the command line from what we got. the format is // cleartool checkin [options...] [viewpath ...] // as specified in the CLEARTOOL.EXE help	WITHOUT_CLASSIFICATION	0.9999998142037685	WITHOUT_CLASSIFICATION	1.8579623156423466E-7	DEFECT
// -ptime	WITHOUT_CLASSIFICATION	0.9999993238891398	WITHOUT_CLASSIFICATION	6.76110860118952E-7	DEFECT
// Throws EjbcException if unsuccessful	WITHOUT_CLASSIFICATION	0.9999983243178896	WITHOUT_CLASSIFICATION	1.6756821103054185E-6	DEFECT
// -keep	WITHOUT_CLASSIFICATION	0.999998305572012	WITHOUT_CLASSIFICATION	1.6944279880743E-6	DEFECT
// -identical	WITHOUT_CLASSIFICATION	0.9999983837429306	WITHOUT_CLASSIFICATION	1.6162570694461897E-6	DEFECT
// Check for required attributes	WITHOUT_CLASSIFICATION	0.9999996235097393	WITHOUT_CLASSIFICATION	3.764902607963375E-7	DEFECT
// build the command line from what we got. the format is // cleartool mkattr [options...] [viewpath ...] // as specified in the CLEARTOOL help	WITHOUT_CLASSIFICATION	0.9999997407734922	WITHOUT_CLASSIFICATION	2.592265077188444E-7	DEFECT
// -replace	WITHOUT_CLASSIFICATION	0.9999999547166704	WITHOUT_CLASSIFICATION	4.5283329727552814E-8	DEFECT
// -recurse	WITHOUT_CLASSIFICATION	0.9999999714498313	WITHOUT_CLASSIFICATION	2.855016870350469E-8	DEFECT
// type	WITHOUT_CLASSIFICATION	0.9999871735942006	WITHOUT_CLASSIFICATION	1.2826405799274521E-5	DEFECT
// viewpath	WITHOUT_CLASSIFICATION	0.9999995983828567	WITHOUT_CLASSIFICATION	4.016171432816335E-7	DEFECT
// viewpath	WITHOUT_CLASSIFICATION	0.9999995983828567	WITHOUT_CLASSIFICATION	4.016171432816335E-7	DEFECT
// viewpath	WITHOUT_CLASSIFICATION	0.9999995983828567	WITHOUT_CLASSIFICATION	4.016171432816335E-7	DEFECT
// ClearCase items	WITHOUT_CLASSIFICATION	0.9999999823257395	WITHOUT_CLASSIFICATION	1.7674260509208362E-8	DEFECT
// ClearCase items	WITHOUT_CLASSIFICATION	0.9999999823257395	WITHOUT_CLASSIFICATION	1.7674260509208362E-8	DEFECT
// -nwarn	WITHOUT_CLASSIFICATION	0.9999978388677178	WITHOUT_CLASSIFICATION	2.1611322822168573E-6	DEFECT
// -c	WITHOUT_CLASSIFICATION	0.999998356680856	WITHOUT_CLASSIFICATION	1.6433191440221914E-6	DEFECT
// -c	WITHOUT_CLASSIFICATION	0.999998356680856	WITHOUT_CLASSIFICATION	1.6433191440221914E-6	DEFECT
// -cfile	WITHOUT_CLASSIFICATION	0.9999995816619408	WITHOUT_CLASSIFICATION	4.1833805928515605E-7	DEFECT
// -ptime	WITHOUT_CLASSIFICATION	0.9999993238891398	WITHOUT_CLASSIFICATION	6.76110860118952E-7	DEFECT
// -keep	WITHOUT_CLASSIFICATION	0.999998305572012	WITHOUT_CLASSIFICATION	1.6944279880743E-6	DEFECT
// build the command line from what we got the format is // cleartool lock [options...] // as specified in the CLEARTOOL.EXE help	WITHOUT_CLASSIFICATION	0.9999996928076185	WITHOUT_CLASSIFICATION	3.0719238159024606E-7	DEFECT
// Windows quoting of the value	WITHOUT_CLASSIFICATION	0.9999896350880096	WITHOUT_CLASSIFICATION	1.0364911990354337E-5	DEFECT
// build the command line from what we got. the format is // cleartool mkelem [options...] [viewpath ...] // as specified in the CLEARTOOL.EXE help	WITHOUT_CLASSIFICATION	0.9999989675149372	WITHOUT_CLASSIFICATION	1.0324850627676163E-6	DEFECT
/*         * Should choose either -ci or -nco.         */	WITHOUT_CLASSIFICATION	0.9999998394081655	WITHOUT_CLASSIFICATION	1.6059183446445505E-7	DEFECT
// -nco	WITHOUT_CLASSIFICATION	0.9999957884267805	WITHOUT_CLASSIFICATION	4.211573219514192E-6	DEFECT
// -nco	WITHOUT_CLASSIFICATION	0.9999957884267805	WITHOUT_CLASSIFICATION	4.211573219514192E-6	DEFECT
// Check the command line options	WITHOUT_CLASSIFICATION	0.9999995222036488	WITHOUT_CLASSIFICATION	4.777963511636802E-7	DEFECT
// -ci	WITHOUT_CLASSIFICATION	0.9999976983499523	WITHOUT_CLASSIFICATION	2.301650047635043E-6	DEFECT
// object selector	WITHOUT_CLASSIFICATION	0.9999998091124636	WITHOUT_CLASSIFICATION	1.9088753651011926E-7	DEFECT
// build the command line from what we got the format is // cleartool uncheckout [options...] [viewpath ...] // as specified in the CLEARTOOL.EXE help	WITHOUT_CLASSIFICATION	0.9999999110601198	WITHOUT_CLASSIFICATION	8.893988031490262E-8	DEFECT
// -master	WITHOUT_CLASSIFICATION	0.9999999754588499	WITHOUT_CLASSIFICATION	2.4541150087826874E-8	DEFECT
// -rm	WITHOUT_CLASSIFICATION	0.9999994860382204	WITHOUT_CLASSIFICATION	5.13961779492609E-7	DEFECT
// -eltype	WITHOUT_CLASSIFICATION	0.999993077527304	WITHOUT_CLASSIFICATION	6.922472695905966E-6	DEFECT
// viewpath	WITHOUT_CLASSIFICATION	0.9999995983828567	WITHOUT_CLASSIFICATION	4.016171432816335E-7	DEFECT
// -version	WITHOUT_CLASSIFICATION	0.9999996784405164	WITHOUT_CLASSIFICATION	3.2155948358106524E-7	DEFECT
// -c	WITHOUT_CLASSIFICATION	0.999998356680856	WITHOUT_CLASSIFICATION	1.6433191440221914E-6	DEFECT
// -c	WITHOUT_CLASSIFICATION	0.999998356680856	WITHOUT_CLASSIFICATION	1.6433191440221914E-6	DEFECT
// -cfile	WITHOUT_CLASSIFICATION	0.9999995816619408	WITHOUT_CLASSIFICATION	4.1833805928515605E-7	DEFECT
// -cfile	WITHOUT_CLASSIFICATION	0.9999995816619408	WITHOUT_CLASSIFICATION	4.1833805928515605E-7	DEFECT
// -rmall -force	WITHOUT_CLASSIFICATION	0.9999998518143481	WITHOUT_CLASSIFICATION	1.4818565189878338E-7	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999985104772199	WITHOUT_CLASSIFICATION	1.4895227801929595E-6	DEFECT
// build the command line from what we got. the format is // cleartool checkin [options...] [viewpath ...] // as specified in the CLEARTOOL.EXE help	WITHOUT_CLASSIFICATION	0.9999998142037685	WITHOUT_CLASSIFICATION	1.8579623156423466E-7	DEFECT
// -identical	WITHOUT_CLASSIFICATION	0.9999983837429306	WITHOUT_CLASSIFICATION	1.6162570694461897E-6	DEFECT
// Check for required attributes	WITHOUT_CLASSIFICATION	0.9999996235097393	WITHOUT_CLASSIFICATION	3.764902607963375E-7	DEFECT
// Check for required attributes	WITHOUT_CLASSIFICATION	0.9999996235097393	WITHOUT_CLASSIFICATION	3.764902607963375E-7	DEFECT
// -replace	WITHOUT_CLASSIFICATION	0.9999999547166704	WITHOUT_CLASSIFICATION	4.5283329727552814E-8	DEFECT
// -recurse	WITHOUT_CLASSIFICATION	0.9999999714498313	WITHOUT_CLASSIFICATION	2.855016870350469E-8	DEFECT
// type	WITHOUT_CLASSIFICATION	0.9999871735942006	WITHOUT_CLASSIFICATION	1.2826405799274521E-5	DEFECT
// Returns list of EJBs for processing	WITHOUT_CLASSIFICATION	0.9999994231341087	WITHOUT_CLASSIFICATION	5.768658912476895E-7	DEFECT
// build the command line from what we got. the format is // cleartool rmtype [options...] type-selector... // as specified in the CLEARTOOL help	WITHOUT_CLASSIFICATION	0.9999995749055488	WITHOUT_CLASSIFICATION	4.250944512770305E-7	DEFECT
// type-kind:type-name	WITHOUT_CLASSIFICATION	0.9999159377956535	WITHOUT_CLASSIFICATION	8.40622043465932E-5	DEFECT
// -ignore	WITHOUT_CLASSIFICATION	0.9999998095923086	WITHOUT_CLASSIFICATION	1.9040769140106773E-7	DEFECT
// Return the type-selector	WITHOUT_CLASSIFICATION	0.9999987946017117	WITHOUT_CLASSIFICATION	1.2053982882868073E-6	DEFECT
// -full	WITHOUT_CLASSIFICATION	0.9999963714390819	WITHOUT_CLASSIFICATION	3.62856091812575E-6	DEFECT
// -incremental	WITHOUT_CLASSIFICATION	0.9999986443176495	WITHOUT_CLASSIFICATION	1.3556823505388465E-6	DEFECT
// -nlabel	WITHOUT_CLASSIFICATION	0.9999995968165779	WITHOUT_CLASSIFICATION	4.0318342203288956E-7	DEFECT
// baseline_root_name	WITHOUT_CLASSIFICATION	0.9999999531985881	WITHOUT_CLASSIFICATION	4.6801411910865005E-8	DEFECT
// viewpath	WITHOUT_CLASSIFICATION	0.9999995983828567	WITHOUT_CLASSIFICATION	4.016171432816335E-7	DEFECT
// -c	WITHOUT_CLASSIFICATION	0.999998356680856	WITHOUT_CLASSIFICATION	1.6433191440221914E-6	DEFECT
// -cfile	WITHOUT_CLASSIFICATION	0.9999995816619408	WITHOUT_CLASSIFICATION	4.1833805928515605E-7	DEFECT
// -ptime	WITHOUT_CLASSIFICATION	0.9999993238891398	WITHOUT_CLASSIFICATION	6.76110860118952E-7	DEFECT
// Check for required attributes	WITHOUT_CLASSIFICATION	0.9999996235097393	WITHOUT_CLASSIFICATION	3.764902607963375E-7	DEFECT
// -replace	WITHOUT_CLASSIFICATION	0.9999999547166704	WITHOUT_CLASSIFICATION	4.5283329727552814E-8	DEFECT
// -replace	WITHOUT_CLASSIFICATION	0.9999999547166704	WITHOUT_CLASSIFICATION	4.5283329727552814E-8	DEFECT
// build the command line from what we got the format is // cleartool lock [options...] // as specified in the CLEARTOOL.EXE help	WITHOUT_CLASSIFICATION	0.9999996928076185	WITHOUT_CLASSIFICATION	3.0719238159024606E-7	DEFECT
// Check the command line options	WITHOUT_CLASSIFICATION	0.9999995222036488	WITHOUT_CLASSIFICATION	4.777963511636802E-7	DEFECT
// Check the command line options	WITHOUT_CLASSIFICATION	0.9999995222036488	WITHOUT_CLASSIFICATION	4.777963511636802E-7	DEFECT
// object selector	WITHOUT_CLASSIFICATION	0.9999998091124636	WITHOUT_CLASSIFICATION	1.9088753651011926E-7	DEFECT
// -ordinary	WITHOUT_CLASSIFICATION	0.9999989733880573	WITHOUT_CLASSIFICATION	1.0266119427214884E-6	DEFECT
// build the command line from what we got the format is // cleartool update [options...] [viewpath ...] // as specified in the CLEARTOOL.EXE help	WITHOUT_CLASSIFICATION	0.9999998145713792	WITHOUT_CLASSIFICATION	1.8542862088813417E-7	DEFECT
// For debugging	WITHOUT_CLASSIFICATION	0.9999969292623054	WITHOUT_CLASSIFICATION	3.0707376945868425E-6	DEFECT
// -log logname	WITHOUT_CLASSIFICATION	0.9999989972224129	WITHOUT_CLASSIFICATION	1.0027775870783616E-6	DEFECT
// -graphical	WITHOUT_CLASSIFICATION	0.9999997084674983	WITHOUT_CLASSIFICATION	2.915325017461639E-7	DEFECT
// -overwrite	WITHOUT_CLASSIFICATION	0.9999998292849891	WITHOUT_CLASSIFICATION	1.7071501084287204E-7	DEFECT
// -global	WITHOUT_CLASSIFICATION	0.9999990082170795	WITHOUT_CLASSIFICATION	9.91782920467302E-7	DEFECT
// -rename	WITHOUT_CLASSIFICATION	0.9999994281292223	WITHOUT_CLASSIFICATION	5.718707777754432E-7	DEFECT
// -obsolete	WITHOUT_CLASSIFICATION	0.9999997939873722	WITHOUT_CLASSIFICATION	2.0601262783114346E-7	DEFECT
// -noverwrite	WITHOUT_CLASSIFICATION	0.9999998193904852	WITHOUT_CLASSIFICATION	1.806095148113001E-7	DEFECT
// build the command line from what we got. the format is // cleartool mklbtype [options...] type-selector... // as specified in the CLEARTOOL help	WITHOUT_CLASSIFICATION	0.9999988277075904	WITHOUT_CLASSIFICATION	1.1722924096223046E-6	DEFECT
// -ctime	WITHOUT_CLASSIFICATION	0.9999990257088095	WITHOUT_CLASSIFICATION	9.742911904405388E-7	DEFECT
// -pbranch	WITHOUT_CLASSIFICATION	0.9999999368333629	WITHOUT_CLASSIFICATION	6.316663715705794E-8	DEFECT
// File[] filesInDir = directory.listFiles();	WITHOUT_CLASSIFICATION	0.9999996522354272	WITHOUT_CLASSIFICATION	3.4776457281747997E-7	DEFECT
// -shared	WITHOUT_CLASSIFICATION	0.9999999431270393	WITHOUT_CLASSIFICATION	5.6872960674194455E-8	DEFECT
// type-name@vob	WITHOUT_CLASSIFICATION	0.9999937469758559	WITHOUT_CLASSIFICATION	6.253024144174537E-6	DEFECT
// we have a file. create a stream for it	WITHOUT_CLASSIFICATION	0.9999999426603143	WITHOUT_CLASSIFICATION	5.733968560922576E-8	DEFECT
// default directory to the project's base directory	WITHOUT_CLASSIFICATION	0.9999998116202293	WITHOUT_CLASSIFICATION	1.8837977073473306E-7	DEFECT
// assume the worst	WITHOUT_CLASSIFICATION	0.9999999384998398	WITHOUT_CLASSIFICATION	6.150016025198961E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999229243365	WITHOUT_CLASSIFICATION	7.707566353111588E-8	DEFECT
// create a data input stream from the jar // input stream	WITHOUT_CLASSIFICATION	0.9999999667492506	WITHOUT_CLASSIFICATION	3.3250749306053975E-8	DEFECT
// this iterator is exhausted. Can we pop one off the stack	WITHOUT_CLASSIFICATION	0.9999999515405574	WITHOUT_CLASSIFICATION	4.84594425410329E-8	DEFECT
// we get the root classes and build up a set of // classes upon which they depend	WITHOUT_CLASSIFICATION	0.9999995538275586	WITHOUT_CLASSIFICATION	4.461724414401939E-7	DEFECT
// now recover all the dependencies collected and add to the list.	WITHOUT_CLASSIFICATION	0.9999999847928683	WITHOUT_CLASSIFICATION	1.5207131644129468E-8	DEFECT
// pick up the last round of dependencies that were determined	WITHOUT_CLASSIFICATION	0.9999999870291756	WITHOUT_CLASSIFICATION	1.2970824406676995E-8	DEFECT
// right we have a good looking class file.	WITHOUT_CLASSIFICATION	0.9998874815974801	WITHOUT_CLASSIFICATION	1.1251840251995001E-4	DEFECT
/* int minorVersion = */	WITHOUT_CLASSIFICATION	0.9999987592077595	WITHOUT_CLASSIFICATION	1.2407922404688571E-6	DEFECT
/* int majorVersion = */	WITHOUT_CLASSIFICATION	0.9999986193846654	WITHOUT_CLASSIFICATION	1.3806153346685914E-6	DEFECT
/* int accessFlags = */	WITHOUT_CLASSIFICATION	0.9999918532180323	WITHOUT_CLASSIFICATION	8.14678196772871E-6	DEFECT
/* int superClassIndex = */	WITHOUT_CLASSIFICATION	0.9999978982604508	WITHOUT_CLASSIFICATION	2.1017395491002895E-6	DEFECT
// read the dependency cache from the disk	WITHOUT_CLASSIFICATION	0.9999992141355094	WITHOUT_CLASSIFICATION	7.858644905286193E-7	DEFECT
// try to read the dependency info from the map if it is // not out of date	WITHOUT_CLASSIFICATION	0.999999908300335	WITHOUT_CLASSIFICATION	9.16996649066236E-8	DEFECT
// not cached - so need to read directly from the class file	WITHOUT_CLASSIFICATION	0.999970200209941	WITHOUT_CLASSIFICATION	2.9799790059027715E-5	DEFECT
// This class depends on each class in the dependency list. For each // one of those, add this class into their affected classes list	WITHOUT_CLASSIFICATION	0.9999995980787888	WITHOUT_CLASSIFICATION	4.019212112697568E-7	DEFECT
// now determine which jars each class depends upon	WITHOUT_CLASSIFICATION	0.9999999595462555	WITHOUT_CLASSIFICATION	4.045374453770292E-8	DEFECT
// we need to add this jar to the list for this class.	WITHOUT_CLASSIFICATION	0.999999863474649	WITHOUT_CLASSIFICATION	1.3652535103712536E-7	DEFECT
// write the dependency cache to the disk	WITHOUT_CLASSIFICATION	0.9999996879641072	WITHOUT_CLASSIFICATION	3.1203589274352865E-7	DEFECT
// need to delete the main class	WITHOUT_CLASSIFICATION	0.9999987499011834	WITHOUT_CLASSIFICATION	1.2500988166081064E-6	DEFECT
//downgrade warnings on RMI stublike classes, as they are generated //by rmic, so there is no need to tell the user that their source is //missing.	WITHOUT_CLASSIFICATION	0.9999990631111648	WITHOUT_CLASSIFICATION	9.368888352077034E-7	DEFECT
// now check classpath file dependencies	WITHOUT_CLASSIFICATION	0.9999999714959045	WITHOUT_CLASSIFICATION	2.8504095521872254E-8	DEFECT
// if we have no info about the class - it may have been deleted already and we // are using cached info.	WITHOUT_CLASSIFICATION	0.9999999878597317	WITHOUT_CLASSIFICATION	1.214026835280438E-8	DEFECT
// there was no class file. add this class to the list	WITHOUT_CLASSIFICATION	0.9999973801812827	WITHOUT_CLASSIFICATION	2.6198187172558174E-6	DEFECT
// break the classLocations into its components.	WITHOUT_CLASSIFICATION	0.9999998402578575	WITHOUT_CLASSIFICATION	1.5974214248088677E-7	DEFECT
// search the various source path entries	WITHOUT_CLASSIFICATION	0.9999999956330039	WITHOUT_CLASSIFICATION	4.3669961699903456E-9	DEFECT
// create a data input stream from the jar input stream	WITHOUT_CLASSIFICATION	0.9999999644826265	WITHOUT_CLASSIFICATION	3.551737346206484E-8	DEFECT
// add null entries for any additional slots required.	WITHOUT_CLASSIFICATION	0.9999615436441254	WITHOUT_CLASSIFICATION	3.845635587471152E-5	DEFECT
// end execute	WITHOUT_CLASSIFICATION	0.9999960852902329	WITHOUT_CLASSIFICATION	3.914709767173481E-6	DEFECT
//in verbose mode we always log stuff	WITHOUT_CLASSIFICATION	0.9999741685083131	WITHOUT_CLASSIFICATION	2.5831491686919604E-5	DEFECT
//the simple action is to send the command line in as is	WITHOUT_CLASSIFICATION	0.9999781525753481	WITHOUT_CLASSIFICATION	2.184742465198105E-5	DEFECT
// Throws EjbcException	WITHOUT_CLASSIFICATION	0.9999933274178942	WITHOUT_CLASSIFICATION	6.672582105828148E-6	DEFECT
// VSS items	WITHOUT_CLASSIFICATION	0.999999840981809	WITHOUT_CLASSIFICATION	1.5901819089429593E-7	DEFECT
// The zero index is never present in the constant pool itself so // we add a null entry for it	WITHOUT_CLASSIFICATION	0.9999961963457673	WITHOUT_CLASSIFICATION	3.8036542327534118E-6	DEFECT
//but for big operations, we save all the params to a temp file //and set @tmpfile as the command -then we remember to delete the tempfile //afterwards	WITHOUT_CLASSIFICATION	0.9999999350466189	WITHOUT_CLASSIFICATION	6.495338114198409E-8	DEFECT
//start at 1 because element 0 is the executable name	WITHOUT_CLASSIFICATION	0.9999999201850259	WITHOUT_CLASSIFICATION	7.981497409528875E-8	DEFECT
//add to the list	WITHOUT_CLASSIFICATION	0.9999996701597234	WITHOUT_CLASSIFICATION	3.298402766445947E-7	DEFECT
//fill in args	WITHOUT_CLASSIFICATION	0.9999964688768942	WITHOUT_CLASSIFICATION	3.5311231058524428E-6	DEFECT
//fill in args	WITHOUT_CLASSIFICATION	0.9999964688768942	WITHOUT_CLASSIFICATION	3.5311231058524428E-6	DEFECT
//set source and rebuild options	WITHOUT_CLASSIFICATION	0.999999919733436	WITHOUT_CLASSIFICATION	8.026656395530829E-8	DEFECT
//rebuild unless the dest file is newer than the source file	WITHOUT_CLASSIFICATION	0.9999998000462693	WITHOUT_CLASSIFICATION	1.9995373060621157E-7	DEFECT
//mark for a rebuild if the dest file is newer	WITHOUT_CLASSIFICATION	0.9999999588348031	WITHOUT_CLASSIFICATION	4.11651968762492E-8	DEFECT
// Mono 1.0's wsdl doesn't deal with absolute paths	WITHOUT_CLASSIFICATION	0.9999997497426074	WITHOUT_CLASSIFICATION	2.502573926065997E-7	DEFECT
//add in any extra files. //this is an error in mono, but we do not warn on it as they may fix that outside //the ant build cycle.	WITHOUT_CLASSIFICATION	0.9996570360115273	WITHOUT_CLASSIFICATION	3.4296398847263686E-4	DEFECT
//mark for a rebuild if we are newer	WITHOUT_CLASSIFICATION	0.9999964687213839	WITHOUT_CLASSIFICATION	3.531278616202189E-6	DEFECT
//conditionally compile	WITHOUT_CLASSIFICATION	0.999767627673665	WITHOUT_CLASSIFICATION	2.323723263348957E-4	DEFECT
// Errors	WITHOUT_CLASSIFICATION	0.9999970000389147	WITHOUT_CLASSIFICATION	2.9999610853439918E-6	DEFECT
//bail on no references	WITHOUT_CLASSIFICATION	0.999999694362907	WITHOUT_CLASSIFICATION	3.0563709302019434E-7	DEFECT
//bail on no references	WITHOUT_CLASSIFICATION	0.999999694362907	WITHOUT_CLASSIFICATION	3.0563709302019434E-7	DEFECT
//demand create pathlist	WITHOUT_CLASSIFICATION	0.9999998910631357	WITHOUT_CLASSIFICATION	1.0893686427422524E-7	DEFECT
//bail on no references listed	WITHOUT_CLASSIFICATION	0.999999815169483	WITHOUT_CLASSIFICATION	1.8483051697403885E-7	DEFECT
//loop through all definitions	WITHOUT_CLASSIFICATION	0.9999999169213364	WITHOUT_CLASSIFICATION	8.30786635780971E-8	DEFECT
//add those that are set, and a delimiter	WITHOUT_CLASSIFICATION	0.9999998964150959	WITHOUT_CLASSIFICATION	1.0358490416022191E-7	DEFECT
//set up response file options	WITHOUT_CLASSIFICATION	0.9999999914653681	WITHOUT_CLASSIFICATION	8.534631806616658E-9	DEFECT
//if the refs are out of date, force a build.	WITHOUT_CLASSIFICATION	0.9999997198577184	WITHOUT_CLASSIFICATION	2.8014228155911616E-7	DEFECT
//bail out early if there were no files	WITHOUT_CLASSIFICATION	0.9999999895879321	WITHOUT_CLASSIFICATION	1.0412067883019541E-8	DEFECT
//now scan the hashtable and add the files	WITHOUT_CLASSIFICATION	0.9999976241264307	WITHOUT_CLASSIFICATION	2.3758735692840205E-6	DEFECT
//add the source file	WITHOUT_CLASSIFICATION	0.9999998993802752	WITHOUT_CLASSIFICATION	1.0061972472988322E-7	DEFECT
//now run	WITHOUT_CLASSIFICATION	0.9999730721092194	WITHOUT_CLASSIFICATION	2.6927890780601637E-5	DEFECT
//forcibly delete the output file in case of trouble	WITHOUT_CLASSIFICATION	0.9999999707132341	WITHOUT_CLASSIFICATION	2.9286765904874846E-8	DEFECT
//then rethrow the exception	WITHOUT_CLASSIFICATION	0.9999231320575963	WITHOUT_CLASSIFICATION	7.686794240362589E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999229243365	WITHOUT_CLASSIFICATION	7.707566353111588E-8	DEFECT
// CheckStyle:ConstantNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9999986578546028	WITHOUT_CLASSIFICATION	1.3421453971226684E-6	DEFECT
// CheckStyle:MethodNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9999944617636295	WITHOUT_CLASSIFICATION	5.538236370528685E-6	DEFECT
// CheckStyle:ConstantNameCheck ON // CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999608303001	WITHOUT_CLASSIFICATION	3.9169699904777155E-8	DEFECT
// end execute	WITHOUT_CLASSIFICATION	0.9999960852902329	WITHOUT_CLASSIFICATION	3.914709767173481E-6	DEFECT
//fill in args	WITHOUT_CLASSIFICATION	0.9999964688768942	WITHOUT_CLASSIFICATION	3.5311231058524428E-6	DEFECT
//fill in args	WITHOUT_CLASSIFICATION	0.9999964688768942	WITHOUT_CLASSIFICATION	3.5311231058524428E-6	DEFECT
//rebuild unless the dest file is newer than the source file	WITHOUT_CLASSIFICATION	0.9999998000462693	WITHOUT_CLASSIFICATION	1.9995373060621157E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999229243365	WITHOUT_CLASSIFICATION	7.707566353111588E-8	DEFECT
//determine directory: resourceDir if set, //the dir of the destFile if not	WITHOUT_CLASSIFICATION	0.9999995711622466	WITHOUT_CLASSIFICATION	4.2883775338695024E-7	DEFECT
//Public //Private //Family //Assembly //Family and Assembly //Family or Assembly //Private Scope	WITHOUT_CLASSIFICATION	0.9999993115616767	WITHOUT_CLASSIFICATION	6.884383233311807E-7	DEFECT
//scan for an implicit fileset if there was a srcdir set //or there was no srcDir set but there was no contained classes	WITHOUT_CLASSIFICATION	0.9999999997883193	WITHOUT_CLASSIFICATION	2.1168054736768072E-10	DEFECT
//if there is no src dir here, set it	WITHOUT_CLASSIFICATION	0.9999999732320694	WITHOUT_CLASSIFICATION	2.6767930563336867E-8	DEFECT
//get dependencies list.	WITHOUT_CLASSIFICATION	0.9999996356372083	WITHOUT_CLASSIFICATION	3.643627916009552E-7	DEFECT
//get any included source directories	WITHOUT_CLASSIFICATION	0.9999998785072212	WITHOUT_CLASSIFICATION	1.2149277882840916E-7	DEFECT
//add the files to the command	WITHOUT_CLASSIFICATION	0.9999863286076359	WITHOUT_CLASSIFICATION	1.3671392364031541E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc // CheckStyle:ConstantNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9999999147000633	WITHOUT_CLASSIFICATION	8.529993662699098E-8	DEFECT
// CheckStyle:MethodNameCheck ON	WITHOUT_CLASSIFICATION	0.9999966903438382	WITHOUT_CLASSIFICATION	3.309656161866561E-6	DEFECT
/*         *  space for more argumentativeness         *  command.addArgument();         *  command.addArgument();         */	WITHOUT_CLASSIFICATION	0.9999993492673451	WITHOUT_CLASSIFICATION	6.507326548698483E-7	DEFECT
// ends with '.' or null	WITHOUT_CLASSIFICATION	0.9999835989304829	WITHOUT_CLASSIFICATION	1.640106951707213E-5	DEFECT
/* Constants used for the "beantype" attribute */	WITHOUT_CLASSIFICATION	0.99999993317272	WITHOUT_CLASSIFICATION	6.682728005655684E-8	DEFECT
/* Filenames of the standard EJB descriptor and the iAS-specific descriptor */	WITHOUT_CLASSIFICATION	0.9999996464993363	WITHOUT_CLASSIFICATION	3.535006637423218E-7	DEFECT
/* Classpath used when the iAS ejbc is called */	WITHOUT_CLASSIFICATION	0.9999980570085857	WITHOUT_CLASSIFICATION	1.9429914143964024E-6	DEFECT
/* Options passed to the iAS ejbc */	WITHOUT_CLASSIFICATION	0.9999979261029524	WITHOUT_CLASSIFICATION	2.0738970476887082E-6	DEFECT
/* iAS installation directory (used if ejbc isn't on user's PATH) */	WITHOUT_CLASSIFICATION	0.999999330712707	WITHOUT_CLASSIFICATION	6.692872931087264E-7	DEFECT
/* Parser and handler used to process both EJB descriptor files */	WITHOUT_CLASSIFICATION	0.9999999264822758	WITHOUT_CLASSIFICATION	7.351772413392455E-8	DEFECT
/* Value of the display-name element read from the standard EJB descriptor */	WITHOUT_CLASSIFICATION	0.999997820476363	WITHOUT_CLASSIFICATION	2.179523637044895E-6	DEFECT
/*         * Parse the classpath into it's individual elements and store the         * results in the "classpathElements" instance variable.         */	WITHOUT_CLASSIFICATION	0.9999999793741874	WITHOUT_CLASSIFICATION	2.0625812544902537E-8	DEFECT
/* If the -classpath flag isn't specified, use the system classpath */	WITHOUT_CLASSIFICATION	0.9999905180662151	WITHOUT_CLASSIFICATION	9.48193378496368E-6	DEFECT
/*         * If the -d flag isn't specified, use the working directory as the         * destination directory         */	WITHOUT_CLASSIFICATION	0.9999808868575761	WITHOUT_CLASSIFICATION	1.9113142423858184E-5	DEFECT
/* Construct a SAXParser used to process the descriptors */	WITHOUT_CLASSIFICATION	0.999999919840111	WITHOUT_CLASSIFICATION	8.015988895326168E-8	DEFECT
// SAXException or ParserConfigurationException may be thrown	WITHOUT_CLASSIFICATION	0.9999984201324357	WITHOUT_CLASSIFICATION	1.5798675643406483E-6	DEFECT
/* Build and populate an instance of the ejbc utility */	WITHOUT_CLASSIFICATION	0.9999987938045998	WITHOUT_CLASSIFICATION	1.2061954002448785E-6	DEFECT
/* Execute the ejbc utility -- stubs/skeletons are rebuilt, if needed */	WITHOUT_CLASSIFICATION	0.9999999693993871	WITHOUT_CLASSIFICATION	3.060061300208895E-8	DEFECT
// Add one for the "\"	WITHOUT_CLASSIFICATION	0.9999997694717856	WITHOUT_CLASSIFICATION	2.3052821436976463E-7	DEFECT
/* Concatenate all of the command line arguments into a single String */	WITHOUT_CLASSIFICATION	0.9999998484244862	WITHOUT_CLASSIFICATION	1.5157551371544115E-7	DEFECT
/* If an iAS home directory is specified, prepend it to the commmand */	WITHOUT_CLASSIFICATION	0.9999927253420123	WITHOUT_CLASSIFICATION	7.274657987585049E-6	DEFECT
/*         * The EJB information is gathered from the standard XML EJB descriptor         * and the iAS-specific XML EJB descriptor using a SAX parser.         */	WITHOUT_CLASSIFICATION	0.99999338690888	WITHOUT_CLASSIFICATION	6.613091120016993E-6	DEFECT
/* OPTIONAL COMMAND LINE PARAMETERS */	WITHOUT_CLASSIFICATION	0.9999959399407378	WITHOUT_CLASSIFICATION	4.060059262176499E-6	DEFECT
/* No beantype flag is needed for an entity bean */	WITHOUT_CLASSIFICATION	0.9999466793083528	WITHOUT_CLASSIFICATION	5.3320691647167346E-5	DEFECT
/* REQUIRED COMMAND LINE PARAMETERS */	WITHOUT_CLASSIFICATION	0.9999946714911442	WITHOUT_CLASSIFICATION	5.328508855827315E-6	DEFECT
/* Convert the List into an Array and return it */	WITHOUT_CLASSIFICATION	0.9999998913264248	WITHOUT_CLASSIFICATION	1.0867357513977586E-7	DEFECT
/* Inner classes follow */	WITHOUT_CLASSIFICATION	0.9999982540782635	WITHOUT_CLASSIFICATION	1.7459217364701185E-6	DEFECT
// End of EjbcException inner class	WITHOUT_CLASSIFICATION	0.9999857957674988	WITHOUT_CLASSIFICATION	1.4204232501237425E-5	DEFECT
// Tracks current element // Tracks current text data // "session" or "entity"	WITHOUT_CLASSIFICATION	0.9999992219370021	WITHOUT_CLASSIFICATION	7.780629978368812E-7	DEFECT
/* Search the resource Map and (if not found) file Map */	WITHOUT_CLASSIFICATION	0.9999995477442246	WITHOUT_CLASSIFICATION	4.52255775406878E-7	DEFECT
/* A new element has started, so reset the text being captured */	WITHOUT_CLASSIFICATION	0.9999999678723708	WITHOUT_CLASSIFICATION	3.212762920296665E-8	DEFECT
/*             * If this is a standard EJB 1.1 descriptor, we are looking for one             * set of data, while if this is an iAS-specific descriptor, we're             * looking for different set of data.  Hand the processing off to             * the appropriate method.             */	WITHOUT_CLASSIFICATION	0.9999999809436751	WITHOUT_CLASSIFICATION	1.905632495145491E-8	DEFECT
// End of EjbcHandler inner class	WITHOUT_CLASSIFICATION	0.99999957155468	WITHOUT_CLASSIFICATION	4.2844532000791623E-7	DEFECT
/*         * Below are getter's and setter's for each of the instance variables.         * Note that (in addition to supporting setters with the same type as         * the instance variable) a setter is provided with takes a String         * argument -- this are provided so the XML document handler can set         * the EJB values using the Strings it parses.         */	WITHOUT_CLASSIFICATION	0.9993702295791633	WITHOUT_CLASSIFICATION	6.297704208366953E-4	DEFECT
/* Check that the specified instance variables are valid */	WITHOUT_CLASSIFICATION	0.9999999529345065	WITHOUT_CLASSIFICATION	4.706549352248364E-8	DEFECT
/* Check that the EJB "source" classes all exist */	WITHOUT_CLASSIFICATION	0.9999979805714381	WITHOUT_CLASSIFICATION	2.019428561871324E-6	DEFECT
// The timestamp of the "newest" class // Timestamp for a given class // File for the remote interface class // File for the home interface class // File for the EJB implementation class // File for the EJB primary key class	WITHOUT_CLASSIFICATION	0.9973774974536294	WITHOUT_CLASSIFICATION	0.002622502546370636	DEFECT
/* Check the timestamp on the remote interface */	WITHOUT_CLASSIFICATION	0.9999988285771075	WITHOUT_CLASSIFICATION	1.1714228924277948E-6	DEFECT
/* Check the timestamp on the home interface */	WITHOUT_CLASSIFICATION	0.9999989801507407	WITHOUT_CLASSIFICATION	1.0198492591831237E-6	DEFECT
/* Check the timestamp of the primary key class */	WITHOUT_CLASSIFICATION	0.9999908982625588	WITHOUT_CLASSIFICATION	9.101737441214472E-6	DEFECT
// List of all stubs & skels // Earliest mod time // Has each been found?	WITHOUT_CLASSIFICATION	0.9999999960990927	WITHOUT_CLASSIFICATION	3.900907239409287E-9	DEFECT
/*             * Loop through each stub/skeleton class that must be generated, and             * determine (if all exist) which file has the most recent timestamp             */	WITHOUT_CLASSIFICATION	0.9999975710398613	WITHOUT_CLASSIFICATION	2.428960138731006E-6	DEFECT
/*                 * Add each stub/skeleton class to the list of EJB files.  Note                 * that each class is added even if it doesn't exist now.                 */	WITHOUT_CLASSIFICATION	0.9999991725367673	WITHOUT_CLASSIFICATION	8.274632327810517E-7	DEFECT
/* Keep track of the oldest modification timestamp */	WITHOUT_CLASSIFICATION	0.999998543595888	WITHOUT_CLASSIFICATION	1.4564041119268422E-6	DEFECT
// End of EjbInfo inner class	WITHOUT_CLASSIFICATION	0.9999962040074892	WITHOUT_CLASSIFICATION	3.795992510775211E-6	DEFECT
// Fully qualified name of the Java class // Name of the package for this class // Name of the class without the package	WITHOUT_CLASSIFICATION	0.9999999345658303	WITHOUT_CLASSIFICATION	6.54341697158339E-8	DEFECT
// End of Classname inner class	WITHOUT_CLASSIFICATION	0.9999984795799607	WITHOUT_CLASSIFICATION	1.5204200392927954E-6	DEFECT
// Stream to read and redirect to standard output	WITHOUT_CLASSIFICATION	0.9999989234116761	WITHOUT_CLASSIFICATION	1.0765883240096915E-6	DEFECT
// End of RedirectOutput inner class	WITHOUT_CLASSIFICATION	0.9999540640322414	WITHOUT_CLASSIFICATION	4.5935967758697275E-5	DEFECT
// add -file xxxxx to the commandline	WITHOUT_CLASSIFICATION	0.9999998790051982	WITHOUT_CLASSIFICATION	1.2099480174271168E-7	DEFECT
//clientname = ejbjarfile+client.jar	WITHOUT_CLASSIFICATION	0.999999952250163	WITHOUT_CLASSIFICATION	4.774983700479541E-8	DEFECT
// end of else	WITHOUT_CLASSIFICATION	0.9999997155753134	WITHOUT_CLASSIFICATION	2.844246866233423E-7	DEFECT
// ejb jar file	WITHOUT_CLASSIFICATION	0.9999999724182745	WITHOUT_CLASSIFICATION	2.75817254946307E-8	DEFECT
// ejb jar file	WITHOUT_CLASSIFICATION	0.9999999724182745	WITHOUT_CLASSIFICATION	2.75817254946307E-8	DEFECT
//client jar file	WITHOUT_CLASSIFICATION	0.9999999468356421	WITHOUT_CLASSIFICATION	5.316435799173361E-8	DEFECT
//client jar file	WITHOUT_CLASSIFICATION	0.9999999468356421	WITHOUT_CLASSIFICATION	5.316435799173361E-8	DEFECT
// Have to catch this because of the semantics of calling main()	WITHOUT_CLASSIFICATION	0.9999971199464109	WITHOUT_CLASSIFICATION	2.880053589082727E-6	DEFECT
// Have to catch this because of the semantics of calling main()	WITHOUT_CLASSIFICATION	0.9999971199464109	WITHOUT_CLASSIFICATION	2.880053589082727E-6	DEFECT
//classpath	WITHOUT_CLASSIFICATION	0.9999978696539734	WITHOUT_CLASSIFICATION	2.1303460266416347E-6	DEFECT
/* ------------- */	WITHOUT_CLASSIFICATION	0.9999929835676435	WITHOUT_CLASSIFICATION	7.016432356404526E-6	DEFECT
/* ------------- */	WITHOUT_CLASSIFICATION	0.9999929835676435	WITHOUT_CLASSIFICATION	7.016432356404526E-6	DEFECT
/* GenIC options */	WITHOUT_CLASSIFICATION	0.9999993684819894	WITHOUT_CLASSIFICATION	6.315180105156668E-7	DEFECT
/* other options */	WITHOUT_CLASSIFICATION	0.9999998467250492	WITHOUT_CLASSIFICATION	1.5327495090125743E-7	DEFECT
/* -------------------- */	WITHOUT_CLASSIFICATION	0.9999924079951934	WITHOUT_CLASSIFICATION	7.592004806663147E-6	DEFECT
/* -------------------- */	WITHOUT_CLASSIFICATION	0.9999924079951934	WITHOUT_CLASSIFICATION	7.592004806663147E-6	DEFECT
/* GenIC options setter */	WITHOUT_CLASSIFICATION	0.9999996840237828	WITHOUT_CLASSIFICATION	3.1597621716660205E-7	DEFECT
// -I- // ignore all errors // -Vd	WITHOUT_CLASSIFICATION	0.9999997382336432	WITHOUT_CLASSIFICATION	2.617663567814814E-7	DEFECT
/* ------------- */	WITHOUT_CLASSIFICATION	0.9999929835676435	WITHOUT_CLASSIFICATION	7.016432356404526E-6	DEFECT
/* -------------------- */	WITHOUT_CLASSIFICATION	0.9999924079951934	WITHOUT_CLASSIFICATION	7.592004806663147E-6	DEFECT
/* other options setter */	WITHOUT_CLASSIFICATION	0.9999998962210547	WITHOUT_CLASSIFICATION	1.0377894533256605E-7	DEFECT
/* other methods */	WITHOUT_CLASSIFICATION	0.9999995955094682	WITHOUT_CLASSIFICATION	4.0449053178458826E-7	DEFECT
// the method deleteOnExit() do not work because the directory is not empty	WITHOUT_CLASSIFICATION	0.9999933263461495	WITHOUT_CLASSIFICATION	6.673653850569207E-6	DEFECT
// create the generic jar first	WITHOUT_CLASSIFICATION	0.9999999911448367	WITHOUT_CLASSIFICATION	8.85516326525815E-9	DEFECT
// GenIC call on generic jar	WITHOUT_CLASSIFICATION	0.9999995122331214	WITHOUT_CLASSIFICATION	4.877668784918055E-7	DEFECT
// create the real jar	WITHOUT_CLASSIFICATION	0.9999999830349202	WITHOUT_CLASSIFICATION	1.6965079776488843E-8	DEFECT
// JOnAS-specific descriptor deployment	WITHOUT_CLASSIFICATION	0.999999870329027	WITHOUT_CLASSIFICATION	1.2967097302101757E-7	DEFECT
// JOnAS-specific DD // true if the JOnAS convention is used for the DD // Directory path of the EJB descriptor // EJB descriptor file name // Filename appearing before name terminator // Filename appearing after the name terminator	WITHOUT_CLASSIFICATION	0.9999994813948023	WITHOUT_CLASSIFICATION	5.186051976551538E-7	DEFECT
// extract path info	WITHOUT_CLASSIFICATION	0.9999993155070077	WITHOUT_CLASSIFICATION	6.844929923688029E-7	DEFECT
// descriptorName is just a file without path	WITHOUT_CLASSIFICATION	0.9999999639873582	WITHOUT_CLASSIFICATION	3.601264176416443E-8	DEFECT
/*         * Check for the odd case where the terminator and/or filename         * extension aren't found.  These will ensure "jonas-" appears at the         * end of the name and before the '.' (if present).         */	WITHOUT_CLASSIFICATION	0.9999971120704547	WITHOUT_CLASSIFICATION	2.8879295452275624E-6	DEFECT
// no . found	WITHOUT_CLASSIFICATION	0.999999700408097	WITHOUT_CLASSIFICATION	2.9959190297929695E-7	DEFECT
// try to find JOnAS specific convention name	WITHOUT_CLASSIFICATION	0.9999998677487159	WITHOUT_CLASSIFICATION	1.3225128411636002E-7	DEFECT
// else get standard baseName	WITHOUT_CLASSIFICATION	0.9999998544046664	WITHOUT_CLASSIFICATION	1.455953335553428E-7	DEFECT
// jonasroot	WITHOUT_CLASSIFICATION	0.9999996258573097	WITHOUT_CLASSIFICATION	3.741426902163265E-7	DEFECT
// java policy file	WITHOUT_CLASSIFICATION	0.9999992111236893	WITHOUT_CLASSIFICATION	7.888763106135172E-7	DEFECT
// outputdir	WITHOUT_CLASSIFICATION	0.9999979225266061	WITHOUT_CLASSIFICATION	2.0774733938759493E-6	DEFECT
// work around a bug of GenIC 2.5	WITHOUT_CLASSIFICATION	0.9227186800377672	WITHOUT_CLASSIFICATION	0.07728131996223284	DEFECT
// classpath	WITHOUT_CLASSIFICATION	0.9999997596566996	WITHOUT_CLASSIFICATION	2.403433004645654E-7	DEFECT
// try to create the classpath for the correct ORB	WITHOUT_CLASSIFICATION	0.9999901421083673	WITHOUT_CLASSIFICATION	9.857891632573054E-6	DEFECT
// keepgenerated	WITHOUT_CLASSIFICATION	0.9999999413066957	WITHOUT_CLASSIFICATION	5.8693304270651246E-8	DEFECT
// nocompil	WITHOUT_CLASSIFICATION	0.9999983202299181	WITHOUT_CLASSIFICATION	1.6797700820094252E-6	DEFECT
// novalidation	WITHOUT_CLASSIFICATION	0.9999974839685406	WITHOUT_CLASSIFICATION	2.5160314594068558E-6	DEFECT
// javac	WITHOUT_CLASSIFICATION	0.9999994176693634	WITHOUT_CLASSIFICATION	5.823306365927131E-7	DEFECT
// javacopts	WITHOUT_CLASSIFICATION	0.9999998854187002	WITHOUT_CLASSIFICATION	1.1458129972312387E-7	DEFECT
// rmicopts	WITHOUT_CLASSIFICATION	0.9999997525136718	WITHOUT_CLASSIFICATION	2.4748632824803403E-7	DEFECT
// secpropag	WITHOUT_CLASSIFICATION	0.9999995081614321	WITHOUT_CLASSIFICATION	4.918385678259113E-7	DEFECT
// verbose	WITHOUT_CLASSIFICATION	0.9999997413760137	WITHOUT_CLASSIFICATION	2.586239863912142E-7	DEFECT
// input file to process by GenIC	WITHOUT_CLASSIFICATION	0.999999860878633	WITHOUT_CLASSIFICATION	1.391213669110051E-7	DEFECT
// calling GenIC task	WITHOUT_CLASSIFICATION	0.9999984669054256	WITHOUT_CLASSIFICATION	1.5330945743991617E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999997594604898	WITHOUT_CLASSIFICATION	2.4053951019376697E-7	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9999976685470136	WITHOUT_CLASSIFICATION	2.331452986425402E-6	DEFECT
// the method deleteOnExit() do not work because the directory is not empty	WITHOUT_CLASSIFICATION	0.9999933263461495	WITHOUT_CLASSIFICATION	6.673653850569207E-6	DEFECT
// baseNameTerminator not found: the descriptor use the // JOnAS naming convention, ie [Foo.xml,jonas-Foo.xml] and // not [Foo<baseNameTerminator>-ejb-jar.xml, // Foo<baseNameTerminator>-jonas-ejb-jar.xml].	WITHOUT_CLASSIFICATION	0.999999641306494	WITHOUT_CLASSIFICATION	3.586935060140365E-7	DEFECT
// jonasroot	WITHOUT_CLASSIFICATION	0.9999996258573097	WITHOUT_CLASSIFICATION	3.741426902163265E-7	DEFECT
// GenIC task // GenIC class (3 are supported for various // versions	WITHOUT_CLASSIFICATION	0.9999997837828142	WITHOUT_CLASSIFICATION	2.162171858747526E-7	DEFECT
// javac	WITHOUT_CLASSIFICATION	0.9999994176693634	WITHOUT_CLASSIFICATION	5.823306365927131E-7	DEFECT
// additionalargs	WITHOUT_CLASSIFICATION	0.9999993100625693	WITHOUT_CLASSIFICATION	6.899374307892436E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999229243365	WITHOUT_CLASSIFICATION	7.707566353111588E-8	DEFECT
// add the generated files to the ejbFiles	WITHOUT_CLASSIFICATION	0.9999998553362779	WITHOUT_CLASSIFICATION	1.4466372216388425E-7	DEFECT
// orb	WITHOUT_CLASSIFICATION	0.9999973032391203	WITHOUT_CLASSIFICATION	2.6967608798225993E-6	DEFECT
/* ----------------------------------------------------------------------------------- */	WITHOUT_CLASSIFICATION	0.9999871745580485	WITHOUT_CLASSIFICATION	1.282544195141285E-5	DEFECT
/* ----------------------------------------------------------------------------------- */	WITHOUT_CLASSIFICATION	0.9999871745580485	WITHOUT_CLASSIFICATION	1.282544195141285E-5	DEFECT
/* utilitary methods */	WITHOUT_CLASSIFICATION	0.9999995276420283	WITHOUT_CLASSIFICATION	4.723579717474057E-7	DEFECT
// Create the parser using whatever parser the system dictates	WITHOUT_CLASSIFICATION	0.9999999021038872	WITHOUT_CLASSIFICATION	9.789611269169656E-8	DEFECT
// Loop through the files. Each file represents one deployment // descriptor, and hence one bean in our model.	WITHOUT_CLASSIFICATION	0.9999999847214998	WITHOUT_CLASSIFICATION	1.5278500220431394E-8	DEFECT
// process the deployment descriptor in each tool	WITHOUT_CLASSIFICATION	0.9999998857935459	WITHOUT_CLASSIFICATION	1.1420645406383084E-7	DEFECT
// end of execute()	WITHOUT_CLASSIFICATION	0.9999964288476787	WITHOUT_CLASSIFICATION	3.5711523212919883E-6	DEFECT
// resolve relative to project basedir	WITHOUT_CLASSIFICATION	0.999999311524295	WITHOUT_CLASSIFICATION	6.884757050285815E-7	DEFECT
// Get the filename into a String object	WITHOUT_CLASSIFICATION	0.9999999845157039	WITHOUT_CLASSIFICATION	1.5484295992967343E-8	DEFECT
// Get the value of the <ejb-name> tag.  Only the first occurrence.	WITHOUT_CLASSIFICATION	0.9999999997430394	WITHOUT_CLASSIFICATION	2.569605806255352E-10	DEFECT
// Then the toplink deployment descriptor	WITHOUT_CLASSIFICATION	0.9999988971078285	WITHOUT_CLASSIFICATION	1.1028921715585277E-6	DEFECT
// Setup a naming standard here?.	WITHOUT_CLASSIFICATION	0.9999995317931595	WITHOUT_CLASSIFICATION	4.682068405078654E-7	DEFECT
// get all the files in the descriptor directory	WITHOUT_CLASSIFICATION	0.9999986803182533	WITHOUT_CLASSIFICATION	1.3196817467202725E-6	DEFECT
// If we still can't find it, complain	WITHOUT_CLASSIFICATION	0.9997840670181314	WITHOUT_CLASSIFICATION	2.1593298186854337E-4	DEFECT
// OK, properties file may be absolute	WITHOUT_CLASSIFICATION	0.9999998568824764	WITHOUT_CLASSIFICATION	1.431175236352793E-7	DEFECT
// do we need to regenerate the file	WITHOUT_CLASSIFICATION	0.9999997225928487	WITHOUT_CLASSIFICATION	2.7740715126174486E-7	DEFECT
//weblogic.ejb.utils.DDCreator.main(args);	WITHOUT_CLASSIFICATION	0.9999999163177535	WITHOUT_CLASSIFICATION	8.368224637361827E-8	DEFECT
// there was an exception - run with no exit to get proper error	WITHOUT_CLASSIFICATION	0.9999950783198053	WITHOUT_CLASSIFICATION	4.921680194766262E-6	DEFECT
//weblogic.ejb.utils.DDCreator.main(newArgs);	WITHOUT_CLASSIFICATION	0.9999999676129291	WITHOUT_CLASSIFICATION	3.238707103488671E-8	DEFECT
/* Attributes set by the Ant build file */	WITHOUT_CLASSIFICATION	0.9999996998219147	WITHOUT_CLASSIFICATION	3.0017808526768895E-7	DEFECT
// Create the zip entry and add it to the jar file	WITHOUT_CLASSIFICATION	0.9999999434332826	WITHOUT_CLASSIFICATION	5.656671736798966E-8	DEFECT
//add it to list of files in jar	WITHOUT_CLASSIFICATION	0.9999987523481202	WITHOUT_CLASSIFICATION	1.2476518798111475E-6	DEFECT
// If it's a primitive wrapper then we shouldn't try and put // it into the jar, so ignore it.	WITHOUT_CLASSIFICATION	0.9999966830945246	WITHOUT_CLASSIFICATION	3.3169054753740447E-6	DEFECT
// Translate periods into path separators, add .class to the // name, create the File object and add it to the Hashtable.	WITHOUT_CLASSIFICATION	0.9999999233637524	WITHOUT_CLASSIFICATION	7.663624745835827E-8	DEFECT
// Weblogic will throw an error if the deployment descriptor does // not match the class files.	WITHOUT_CLASSIFICATION	0.9999863775426409	WITHOUT_CLASSIFICATION	1.3622457359197841E-5	DEFECT
// Create the file input stream, and buffer everything over // to the jar output stream	WITHOUT_CLASSIFICATION	0.9999999958231469	WITHOUT_CLASSIFICATION	4.176853154014056E-9	DEFECT
// Close up the file input stream for the class file	WITHOUT_CLASSIFICATION	0.9999999816922703	WITHOUT_CLASSIFICATION	1.8307729708449037E-8	DEFECT
// register any DTDs supplied by the user	WITHOUT_CLASSIFICATION	0.999999963250566	WITHOUT_CLASSIFICATION	3.674943408540712E-8	DEFECT
// none to register for generic	WITHOUT_CLASSIFICATION	0.999999776158512	WITHOUT_CLASSIFICATION	2.2384148808296976E-7	DEFECT
// Retrive the files to be added to JAR from EJB descriptor	WITHOUT_CLASSIFICATION	0.9999980616200107	WITHOUT_CLASSIFICATION	1.9383799892066338E-6	DEFECT
// Add any support classes specified in the build file	WITHOUT_CLASSIFICATION	0.99999981622403	WITHOUT_CLASSIFICATION	1.837759699797676E-7	DEFECT
// Determine the JAR filename (without filename extension)	WITHOUT_CLASSIFICATION	0.999999938089871	WITHOUT_CLASSIFICATION	6.19101290983596E-8	DEFECT
// First the regular deployment descriptor	WITHOUT_CLASSIFICATION	0.9999998983163608	WITHOUT_CLASSIFICATION	1.016836392328643E-7	DEFECT
// now the vendor specific files, if any	WITHOUT_CLASSIFICATION	0.9999996638236388	WITHOUT_CLASSIFICATION	3.361763611652602E-7	DEFECT
// add any dependent files	WITHOUT_CLASSIFICATION	0.9999998559112502	WITHOUT_CLASSIFICATION	1.4408874980072465E-7	DEFECT
// Check to see if we need a build and start doing the work!	WITHOUT_CLASSIFICATION	0.999991767735639	WITHOUT_CLASSIFICATION	8.232264360900788E-6	DEFECT
// Log that we are going to build...	WITHOUT_CLASSIFICATION	0.9999206485717843	WITHOUT_CLASSIFICATION	7.935142821569164E-5	DEFECT
// Use helper method to write the jarfile	WITHOUT_CLASSIFICATION	0.9999999748185447	WITHOUT_CLASSIFICATION	2.5181455220497087E-8	DEFECT
// Log that the file is up to date...	WITHOUT_CLASSIFICATION	0.9999942972930292	WITHOUT_CLASSIFICATION	5.702706970712018E-6	DEFECT
/* Parse the ejb deployment descriptor.  While it may not             * look like much, we use a SAXParser and an inner class to             * get hold of all the classfile names for the descriptor.             */	WITHOUT_CLASSIFICATION	0.9999602892705377	WITHOUT_CLASSIFICATION	3.9710729462282094E-5	DEFECT
// add in support classes if any	WITHOUT_CLASSIFICATION	0.9999974964883684	WITHOUT_CLASSIFICATION	2.503511631543606E-6	DEFECT
// Work out what the base name is	WITHOUT_CLASSIFICATION	0.9999975033724002	WITHOUT_CLASSIFICATION	2.4966275998330343E-6	DEFECT
// nothing to add for generic tool.	WITHOUT_CLASSIFICATION	0.999999668487945	WITHOUT_CLASSIFICATION	3.315120550145379E-7	DEFECT
// clean the addedfiles set	WITHOUT_CLASSIFICATION	0.9999997330511636	WITHOUT_CLASSIFICATION	2.6694883636858046E-7	DEFECT
// Create the streams necessary to write the jarfile	WITHOUT_CLASSIFICATION	0.9999999865545454	WITHOUT_CLASSIFICATION	1.3445454732751573E-8	DEFECT
//get and clean up innerclass name	WITHOUT_CLASSIFICATION	0.9999998458150837	WITHOUT_CLASSIFICATION	1.5418491639393577E-7	DEFECT
// See if there are any inner classes for this class and add them in if there are	WITHOUT_CLASSIFICATION	0.9999906344528257	WITHOUT_CLASSIFICATION	9.36554717433323E-6	DEFECT
// Loop through all the class files found and add them to the jar	WITHOUT_CLASSIFICATION	0.9999985279993293	WITHOUT_CLASSIFICATION	1.4720006706908337E-6	DEFECT
//assertions take up space too	WITHOUT_CLASSIFICATION	0.9999985740085792	WITHOUT_CLASSIFICATION	1.4259914208876808E-6	DEFECT
// link the file	WITHOUT_CLASSIFICATION	0.9999988965406105	WITHOUT_CLASSIFICATION	1.1034593896105994E-6	DEFECT
// Have to catch this because of the semantics of calling main()	WITHOUT_CLASSIFICATION	0.9999971199464109	WITHOUT_CLASSIFICATION	2.880053589082727E-6	DEFECT
//trim the META_INF\ off of the file name	WITHOUT_CLASSIFICATION	0.9999995806412624	WITHOUT_CLASSIFICATION	4.1935873773094527E-7	DEFECT
// end of writeJar	WITHOUT_CLASSIFICATION	0.9999992636055064	WITHOUT_CLASSIFICATION	7.363944937102575E-7	DEFECT
// only generate a new ClassLoader if we have a classpath	WITHOUT_CLASSIFICATION	0.999999382567358	WITHOUT_CLASSIFICATION	6.174326419417836E-7	DEFECT
// register all the known DTDs	WITHOUT_CLASSIFICATION	0.9999983533168602	WITHOUT_CLASSIFICATION	1.6466831398479714E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999229243365	WITHOUT_CLASSIFICATION	7.707566353111588E-8	DEFECT
// The the weblogic cmp deployment descriptor	WITHOUT_CLASSIFICATION	0.9999999357065477	WITHOUT_CLASSIFICATION	6.429345239992822E-8	DEFECT
// try to determine it from publicId	WITHOUT_CLASSIFICATION	0.9999993051185322	WITHOUT_CLASSIFICATION	6.94881467800922E-7	DEFECT
// try to use the compiler specified by build.compiler. // Right now we are just going to allow Jikes	WITHOUT_CLASSIFICATION	0.9999999966131614	WITHOUT_CLASSIFICATION	3.386838617717563E-9	DEFECT
// need to create a generic jar first.	WITHOUT_CLASSIFICATION	0.999999952669076	WITHOUT_CLASSIFICATION	4.733092404562055E-8	DEFECT
// Only go forward if the generic and the weblogic file both exist	WITHOUT_CLASSIFICATION	0.9999999966997698	WITHOUT_CLASSIFICATION	3.3002301634573637E-9	DEFECT
//open jar files	WITHOUT_CLASSIFICATION	0.9999995859882129	WITHOUT_CLASSIFICATION	4.140117871986654E-7	DEFECT
//get the list of generic jar entries	WITHOUT_CLASSIFICATION	0.9999999892115969	WITHOUT_CLASSIFICATION	1.0788403144412083E-8	DEFECT
//get the list of weblogic jar entries	WITHOUT_CLASSIFICATION	0.9999999987367144	WITHOUT_CLASSIFICATION	1.263285556300887E-9	DEFECT
//Cycle Through generic and make sure its in weblogic	WITHOUT_CLASSIFICATION	0.9999981296394979	WITHOUT_CLASSIFICATION	1.8703605020966568E-6	DEFECT
// File name/path match	WITHOUT_CLASSIFICATION	0.9999990071555515	WITHOUT_CLASSIFICATION	9.928444485732898E-7	DEFECT
// Check files see if same	WITHOUT_CLASSIFICATION	0.9999999393390007	WITHOUT_CLASSIFICATION	6.066099927769062E-8	DEFECT
//File are different see if its an object or an interface	WITHOUT_CLASSIFICATION	0.9999999048348747	WITHOUT_CLASSIFICATION	9.516512530729841E-8	DEFECT
//Interface changed   rebuild jar.	WITHOUT_CLASSIFICATION	0.9999999692330747	WITHOUT_CLASSIFICATION	3.07669253104403E-8	DEFECT
//Object class Changed   update it.	WITHOUT_CLASSIFICATION	0.9999997240672457	WITHOUT_CLASSIFICATION	2.7593275429882104E-7	DEFECT
// is it the manifest. If so ignore it	WITHOUT_CLASSIFICATION	0.9999998995919619	WITHOUT_CLASSIFICATION	1.0040803808352875E-7	DEFECT
//File other then class changed   rebuild	WITHOUT_CLASSIFICATION	0.9999973996565745	WITHOUT_CLASSIFICATION	2.6003434254049747E-6	DEFECT
// a file doesnt exist rebuild	WITHOUT_CLASSIFICATION	0.9999999546516464	WITHOUT_CLASSIFICATION	4.534835365216929E-8	DEFECT
//Copy files from old weblogic jar	WITHOUT_CLASSIFICATION	0.9999994188367465	WITHOUT_CLASSIFICATION	5.811632534464695E-7	DEFECT
// Use the entry from the generic jar	WITHOUT_CLASSIFICATION	0.9999997857806695	WITHOUT_CLASSIFICATION	2.14219330600388E-7	DEFECT
//use fle from original weblogic jar	WITHOUT_CLASSIFICATION	0.9999999609704233	WITHOUT_CLASSIFICATION	3.902957659055938E-8	DEFECT
// need to close files and perhaps rename output	WITHOUT_CLASSIFICATION	0.9999997865376598	WITHOUT_CLASSIFICATION	2.134623402706162E-7	DEFECT
// empty	WITHOUT_CLASSIFICATION	0.9999985687054564	WITHOUT_CLASSIFICATION	1.4312945434658969E-6	DEFECT
// if the implementation classes don;t exist regenerate	WITHOUT_CLASSIFICATION	0.999998307814493	WITHOUT_CLASSIFICATION	1.6921855071639662E-6	DEFECT
// any problems - just regenerate	WITHOUT_CLASSIFICATION	0.9999989409153585	WITHOUT_CLASSIFICATION	1.0590846416155986E-6	DEFECT
// create a Java task to do the rebuild	WITHOUT_CLASSIFICATION	0.99999987473687	WITHOUT_CLASSIFICATION	1.2526313000426163E-7	DEFECT
//weblogic.ejbc.main(args);	WITHOUT_CLASSIFICATION	0.9999996504598442	WITHOUT_CLASSIFICATION	3.4954015587335193E-7	DEFECT
/* Build and populate an instance of the ejbc utility */	WITHOUT_CLASSIFICATION	0.9999987938045998	WITHOUT_CLASSIFICATION	1.2061954002448785E-6	DEFECT
// Have to catch this because of the semantics of calling main()	WITHOUT_CLASSIFICATION	0.9999971199464109	WITHOUT_CLASSIFICATION	2.880053589082727E-6	DEFECT
//classpath	WITHOUT_CLASSIFICATION	0.9999978696539734	WITHOUT_CLASSIFICATION	2.1303460266416347E-6	DEFECT
/* Attributes set by the Ant build file */	WITHOUT_CLASSIFICATION	0.9999996998219147	WITHOUT_CLASSIFICATION	3.0017808526768895E-7	DEFECT
// Get the filename of vendor specific descriptor	WITHOUT_CLASSIFICATION	0.9999999926702282	WITHOUT_CLASSIFICATION	7.329771796818749E-9	DEFECT
//trim the META_INF\ off of the file name	WITHOUT_CLASSIFICATION	0.9999995806412624	WITHOUT_CLASSIFICATION	4.1935873773094527E-7	DEFECT
// Is the ser file or any of the source files newer then the class files. // firstly find the oldest of the two class files.	WITHOUT_CLASSIFICATION	0.9999951486134917	WITHOUT_CLASSIFICATION	4.85138650828715E-6	DEFECT
// run with no exit for better reporting	WITHOUT_CLASSIFICATION	0.999997800964659	WITHOUT_CLASSIFICATION	2.199035341165819E-6	DEFECT
//weblogic.ejbc.main(newArgs);	WITHOUT_CLASSIFICATION	0.9999998647194095	WITHOUT_CLASSIFICATION	1.352805904865977E-7	DEFECT
/*     * Regardless of the name of the iAS-specific EJB descriptor file, it will     * written in the completed JAR file as "ias-ejb-jar.xml".  This is the     * naming convention implemented by iAS.     */	WITHOUT_CLASSIFICATION	0.9999988322414893	WITHOUT_CLASSIFICATION	1.1677585106092993E-6	DEFECT
/* Add CMP descriptors to the list of EJB files */	WITHOUT_CLASSIFICATION	0.9999986907029681	WITHOUT_CLASSIFICATION	1.3092970319398271E-6	DEFECT
/* Only calculate the descriptor name once */	WITHOUT_CLASSIFICATION	0.9999999674976522	WITHOUT_CLASSIFICATION	3.250234775999873E-8	DEFECT
// Directory path of the EJB descriptor // Filename appearing before name terminator // Filename appearing after the name terminator	WITHOUT_CLASSIFICATION	0.9999821477313072	WITHOUT_CLASSIFICATION	1.785226869280415E-5	DEFECT
/* Find the end of the standard descriptor's relative path */	WITHOUT_CLASSIFICATION	0.9999927632678727	WITHOUT_CLASSIFICATION	7.236732127283686E-6	DEFECT
/* Check to see if the standard name is used (there's no basename) */	WITHOUT_CLASSIFICATION	0.9999999949378904	WITHOUT_CLASSIFICATION	5.062109627819376E-9	DEFECT
/*             * Check for the odd case where the terminator and/or filename             * extension aren't found.  These will ensure "ias-" appears at the             * end of the name and before the '.' (if present).             */	WITHOUT_CLASSIFICATION	0.9999965147426317	WITHOUT_CLASSIFICATION	3.4852573682602333E-6	DEFECT
//choose the right vendor DD	WITHOUT_CLASSIFICATION	0.999959894215547	WITHOUT_CLASSIFICATION	4.0105784453056274E-5	DEFECT
// ejb jar file to verify	WITHOUT_CLASSIFICATION	0.9999997217186023	WITHOUT_CLASSIFICATION	2.782813977383811E-7	DEFECT
//debug ?	WITHOUT_CLASSIFICATION	0.9999136023922927	WITHOUT_CLASSIFICATION	8.639760770735805E-5	DEFECT
//set the classpath	WITHOUT_CLASSIFICATION	0.9999993545796169	WITHOUT_CLASSIFICATION	6.454203830662944E-7	DEFECT
//list file	WITHOUT_CLASSIFICATION	0.9999997775698574	WITHOUT_CLASSIFICATION	2.2243014257542881E-7	DEFECT
//no TIE classes	WITHOUT_CLASSIFICATION	0.999999490634148	WITHOUT_CLASSIFICATION	5.093658519350697E-7	DEFECT
//root dir	WITHOUT_CLASSIFICATION	0.9999586028554044	WITHOUT_CLASSIFICATION	4.1397144595657764E-5	DEFECT
//compiling order	WITHOUT_CLASSIFICATION	0.9999986093736872	WITHOUT_CLASSIFICATION	1.3906263127292804E-6	DEFECT
//add the home class	WITHOUT_CLASSIFICATION	0.999964348969856	WITHOUT_CLASSIFICATION	3.565103014410786E-5	DEFECT
//build the home classes list.	WITHOUT_CLASSIFICATION	0.999997703370066	WITHOUT_CLASSIFICATION	2.296629934020598E-6	DEFECT
//remove .class extension	WITHOUT_CLASSIFICATION	0.9999165209757944	WITHOUT_CLASSIFICATION	8.347902420549247E-5	DEFECT
//add the gen files to the collection	WITHOUT_CLASSIFICATION	0.9997397445952279	WITHOUT_CLASSIFICATION	2.602554047721613E-4	DEFECT
//remove the .class	WITHOUT_CLASSIFICATION	0.9999922563642255	WITHOUT_CLASSIFICATION	7.743635774510739E-6	DEFECT
// Get the Extensions document	WITHOUT_CLASSIFICATION	0.9999998139281737	WITHOUT_CLASSIFICATION	1.8607182637679975E-7	DEFECT
// We attempt to put in the MAP and Schema files of CMP beans	WITHOUT_CLASSIFICATION	0.9999965352214368	WITHOUT_CLASSIFICATION	3.4647785631687735E-6	DEFECT
// Add the Map file	WITHOUT_CLASSIFICATION	0.9999999267647466	WITHOUT_CLASSIFICATION	7.323525344847902E-8	DEFECT
// Theres nothing else to see here...keep moving sonny	WITHOUT_CLASSIFICATION	0.9999553343859269	WITHOUT_CLASSIFICATION	4.4665614073224006E-5	DEFECT
// Set the options	WITHOUT_CLASSIFICATION	0.9999998905341617	WITHOUT_CLASSIFICATION	1.0946583822756689E-7	DEFECT
// Set the JvmArgs	WITHOUT_CLASSIFICATION	0.999999460305916	WITHOUT_CLASSIFICATION	5.3969408396231E-7	DEFECT
// Set the Environment variable	WITHOUT_CLASSIFICATION	0.9999998347208428	WITHOUT_CLASSIFICATION	1.6527915733314576E-7	DEFECT
// Check if list of files to check has been specified	WITHOUT_CLASSIFICATION	0.999999939010402	WITHOUT_CLASSIFICATION	6.09895980373395E-8	DEFECT
// Have to catch this because of the semantics of calling main()	WITHOUT_CLASSIFICATION	0.9999971199464109	WITHOUT_CLASSIFICATION	2.880053589082727E-6	DEFECT
//open jar files	WITHOUT_CLASSIFICATION	0.9999995859882129	WITHOUT_CLASSIFICATION	4.140117871986654E-7	DEFECT
//get the list of generic jar entries	WITHOUT_CLASSIFICATION	0.9999999892115969	WITHOUT_CLASSIFICATION	1.0788403144412083E-8	DEFECT
//File are different see if its an object or an interface	WITHOUT_CLASSIFICATION	0.9999999048348747	WITHOUT_CLASSIFICATION	9.516512530729841E-8	DEFECT
//Interface changed   rebuild jar.	WITHOUT_CLASSIFICATION	0.9999999692330747	WITHOUT_CLASSIFICATION	3.07669253104403E-8	DEFECT
//Object class Changed   update it.	WITHOUT_CLASSIFICATION	0.9999997240672457	WITHOUT_CLASSIFICATION	2.7593275429882104E-7	DEFECT
// is it the manifest. If so ignore it	WITHOUT_CLASSIFICATION	0.9999998995919619	WITHOUT_CLASSIFICATION	1.0040803808352875E-7	DEFECT
//File other then class changed   rebuild	WITHOUT_CLASSIFICATION	0.9999973996565745	WITHOUT_CLASSIFICATION	2.6003434254049747E-6	DEFECT
// Update with changed Bean class	WITHOUT_CLASSIFICATION	0.9999922754296033	WITHOUT_CLASSIFICATION	7.724570396641384E-6	DEFECT
// Use the entry from the generic jar	WITHOUT_CLASSIFICATION	0.9999997857806695	WITHOUT_CLASSIFICATION	2.14219330600388E-7	DEFECT
// register all the DTDs, both the ones that are known and // any supplied by the user	WITHOUT_CLASSIFICATION	0.9999999859528483	WITHOUT_CLASSIFICATION	1.4047151735005257E-8	DEFECT
// Set the working directory	WITHOUT_CLASSIFICATION	0.9980859550093097	WITHOUT_CLASSIFICATION	0.0019140449906902667	DEFECT
// Set the Java class name	WITHOUT_CLASSIFICATION	0.9999960853213236	WITHOUT_CLASSIFICATION	3.9146786765011844E-6	DEFECT
// create the -generic.jar, if required	WITHOUT_CLASSIFICATION	0.999999857172017	WITHOUT_CLASSIFICATION	1.4282798297241016E-7	DEFECT
// create the "undeployed" output .jar, if required	WITHOUT_CLASSIFICATION	0.9999998493523109	WITHOUT_CLASSIFICATION	1.5064768902800913E-7	DEFECT
// Only go forward if the generic and the websphere file both exist	WITHOUT_CLASSIFICATION	0.9999999950411783	WITHOUT_CLASSIFICATION	4.958821606170817E-9	DEFECT
//get the list of websphere jar entries	WITHOUT_CLASSIFICATION	0.9999999953918465	WITHOUT_CLASSIFICATION	4.608153533177864E-9	DEFECT
//Cycle Through generic and make sure its in websphere	WITHOUT_CLASSIFICATION	0.9999956276663149	WITHOUT_CLASSIFICATION	4.372333685099421E-6	DEFECT
// File name/path match // Check files see if same	WITHOUT_CLASSIFICATION	0.9999997995605343	WITHOUT_CLASSIFICATION	2.0043946560781822E-7	DEFECT
// a file doesn't exist rebuild	WITHOUT_CLASSIFICATION	0.9999996309636732	WITHOUT_CLASSIFICATION	3.690363267609273E-7	DEFECT
//Copy files from old websphere jar	WITHOUT_CLASSIFICATION	0.999998271348747	WITHOUT_CLASSIFICATION	1.7286512530243098E-6	DEFECT
//use fle from original websphere jar	WITHOUT_CLASSIFICATION	0.9999998954363868	WITHOUT_CLASSIFICATION	1.0456361319463537E-7	DEFECT
// Specification Name must match	WITHOUT_CLASSIFICATION	0.9999999661199784	WITHOUT_CLASSIFICATION	3.3880021608377033E-8	DEFECT
// Available specification version must be >= required	WITHOUT_CLASSIFICATION	0.9999999694919248	WITHOUT_CLASSIFICATION	3.0508075090643674E-8	DEFECT
// Implementation Vendor ID must match	WITHOUT_CLASSIFICATION	0.9999959797750948	WITHOUT_CLASSIFICATION	4.020224905185599E-6	DEFECT
// Implementation Vendor ID must match	WITHOUT_CLASSIFICATION	0.9999959797750948	WITHOUT_CLASSIFICATION	4.020224905185599E-6	DEFECT
// Implementation version must be >= required	WITHOUT_CLASSIFICATION	0.9999991849179084	WITHOUT_CLASSIFICATION	8.150820915257032E-7	DEFECT
// This available optional package satisfies the requirements	WITHOUT_CLASSIFICATION	0.9999999508080171	WITHOUT_CLASSIFICATION	4.9191983011635426E-8	DEFECT
// This available optional package satisfies the requirements	WITHOUT_CLASSIFICATION	0.9999999508080171	WITHOUT_CLASSIFICATION	4.9191983011635426E-8	DEFECT
//Reset list of sections	WITHOUT_CLASSIFICATION	0.9999989223190838	WITHOUT_CLASSIFICATION	1.0776809161990977E-6	DEFECT
// Extension Name must match	WITHOUT_CLASSIFICATION	0.9999998862700223	WITHOUT_CLASSIFICATION	1.1372997766734533E-7	DEFECT
//Add all the dependency data to manifest for dependencies	WITHOUT_CLASSIFICATION	0.9999998930346085	WITHOUT_CLASSIFICATION	1.0696539147708069E-7	DEFECT
// Check if list of files to check has been specified	WITHOUT_CLASSIFICATION	0.999999939010402	WITHOUT_CLASSIFICATION	6.09895980373395E-8	DEFECT
// CheckStyle:MemberNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9999982206321729	WITHOUT_CLASSIFICATION	1.7793678270620188E-6	DEFECT
// CheckStyle:MemberNameCheck ON	WITHOUT_CLASSIFICATION	0.9999991931057962	WITHOUT_CLASSIFICATION	8.068942037338613E-7	DEFECT
// change this to get the objects from the other reference	WITHOUT_CLASSIFICATION	0.9999999743360156	WITHOUT_CLASSIFICATION	2.566398441230273E-8	DEFECT
//Add all the dependency data to manifest for "optional" //dependencies	WITHOUT_CLASSIFICATION	0.9999999802603633	WITHOUT_CLASSIFICATION	1.9739636662216863E-8	DEFECT
//add in something like //"Extension-List: javahelp java3d"	WITHOUT_CLASSIFICATION	0.9999651688079118	WITHOUT_CLASSIFICATION	3.4831192088309566E-5	DEFECT
//all methods static	WITHOUT_CLASSIFICATION	0.9999989982681227	WITHOUT_CLASSIFICATION	1.0017318772985291E-6	DEFECT
/*     * Gets the destination file     */	WITHOUT_CLASSIFICATION	0.999999915288403	WITHOUT_CLASSIFICATION	8.471159695626126E-8	DEFECT
/*     * Validates URL     */	WITHOUT_CLASSIFICATION	0.9999994623624834	WITHOUT_CLASSIFICATION	5.376375165912041E-7	DEFECT
//Load default locale bundle files //using default file encoding scheme.	WITHOUT_CLASSIFICATION	0.9999999652912439	WITHOUT_CLASSIFICATION	3.4708756110866156E-8	DEFECT
//if all resource files associated with this bundle //have been scanned for and still not able to //find a single resrouce file, throw exception	WITHOUT_CLASSIFICATION	0.9999636744964941	WITHOUT_CLASSIFICATION	3.632550350580651E-5	DEFECT
//So long as the line isn't empty and isn't a comment...	WITHOUT_CLASSIFICATION	0.9997658564864564	WITHOUT_CLASSIFICATION	2.3414351354368137E-4	DEFECT
//Legal Key-Value separators are :, = and white space.	WITHOUT_CLASSIFICATION	0.9999997279082268	WITHOUT_CLASSIFICATION	2.7209177316222356E-7	DEFECT
//Only if we do have a key is there going to be a value	WITHOUT_CLASSIFICATION	0.9999689710932184	WITHOUT_CLASSIFICATION	3.102890678157451E-5	DEFECT
//Handle line continuations, if any	WITHOUT_CLASSIFICATION	0.9999995742753128	WITHOUT_CLASSIFICATION	4.2572468719116807E-7	DEFECT
//Has key already been loaded into resourceMap?	WITHOUT_CLASSIFICATION	0.9999999493766741	WITHOUT_CLASSIFICATION	5.0623325759460134E-8	DEFECT
//Make sure parent dirs exist, else, create them.	WITHOUT_CLASSIFICATION	0.9999994577896117	WITHOUT_CLASSIFICATION	5.422103882582144E-7	DEFECT
//Check to see if dest file has to be recreated	WITHOUT_CLASSIFICATION	0.999999875715157	WITHOUT_CLASSIFICATION	1.2428484306946844E-7	DEFECT
// is there a startToken // and there is still stuff following the startToken	WITHOUT_CLASSIFICATION	0.9999284494524674	WITHOUT_CLASSIFICATION	7.155054753260798E-5	DEFECT
// we found a starttoken, is there an endtoken following? // start at token+tokenlength because start and end // token may be indentical	WITHOUT_CLASSIFICATION	0.9998940159647769	WITHOUT_CLASSIFICATION	1.0598403522314773E-4	DEFECT
// grab the token	WITHOUT_CLASSIFICATION	0.9999987990198076	WITHOUT_CLASSIFICATION	1.2009801923977897E-6	DEFECT
// If there is a white space or = or :, then // it isn't to be treated as a valid key.	WITHOUT_CLASSIFICATION	0.9999960812252214	WITHOUT_CLASSIFICATION	3.918774778521653E-6	DEFECT
// find the replace string	WITHOUT_CLASSIFICATION	0.9999999441034593	WITHOUT_CLASSIFICATION	5.589654083228543E-8	DEFECT
// generate the new line	WITHOUT_CLASSIFICATION	0.9999999010796575	WITHOUT_CLASSIFICATION	9.892034248797825E-8	DEFECT
// set start position for next search	WITHOUT_CLASSIFICATION	0.9999987838903738	WITHOUT_CLASSIFICATION	1.2161096261261042E-6	DEFECT
// find next starttoken	WITHOUT_CLASSIFICATION	0.9999977303871341	WITHOUT_CLASSIFICATION	2.2696128659247485E-6	DEFECT
// deal with specified srcDir	WITHOUT_CLASSIFICATION	0.999999995430836	WITHOUT_CLASSIFICATION	4.569164011494337E-9	DEFECT
// deal with the filesets	WITHOUT_CLASSIFICATION	0.9999998956469306	WITHOUT_CLASSIFICATION	1.0435306941203414E-7	DEFECT
// remove any files that shouldn't be overwritten.	WITHOUT_CLASSIFICATION	0.9996862151003508	WITHOUT_CLASSIFICATION	3.137848996492008E-4	DEFECT
// check that the password has been set	WITHOUT_CLASSIFICATION	0.9999964123649864	WITHOUT_CLASSIFICATION	3.5876350137118304E-6	DEFECT
// check for missing application on deploy & update	WITHOUT_CLASSIFICATION	0.9999999669664937	WITHOUT_CLASSIFICATION	3.303350637638562E-8	DEFECT
// check for missing source on deploy & update	WITHOUT_CLASSIFICATION	0.9999999836640009	WITHOUT_CLASSIFICATION	1.6335999084820074E-8	DEFECT
// check for missing application on delete & undeploy	WITHOUT_CLASSIFICATION	0.999999974472287	WITHOUT_CLASSIFICATION	2.5527713046420393E-8	DEFECT
// keys to optional attributes	WITHOUT_CLASSIFICATION	0.9999999216766856	WITHOUT_CLASSIFICATION	7.832331432960996E-8	DEFECT
// constructs the "-url <url> -debug <action> <password>" portion // of the commmand line	WITHOUT_CLASSIFICATION	0.9999834871358455	WITHOUT_CLASSIFICATION	1.6512864154503692E-5	DEFECT
/////////////////////////////////////////////////////////////////////////// // // Place vendor specific tool creations here. // ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999984965660953	WITHOUT_CLASSIFICATION	1.50343390465265E-6	DEFECT
/////////////////////////////////////////////////////////////////////////// // // Execute method // ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999996370774866	WITHOUT_CLASSIFICATION	3.6292251341795245E-7	DEFECT
/////////////////////////////////////////////////////////////////////////// // // Set/get methods // ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999994761663079	WITHOUT_CLASSIFICATION	5.238336921518217E-7	DEFECT
// keys to optional attributes	WITHOUT_CLASSIFICATION	0.9999999216766856	WITHOUT_CLASSIFICATION	7.832331432960996E-8	DEFECT
// convert backslashes to slashes, otherwise jjtree will // put this as comments and this seems to confuse javacc	WITHOUT_CLASSIFICATION	0.9999998268643584	WITHOUT_CLASSIFICATION	1.7313564168021144E-7	DEFECT
// required attributes	WITHOUT_CLASSIFICATION	0.9999997347016344	WITHOUT_CLASSIFICATION	2.6529836556366376E-7	DEFECT
// required attributes	WITHOUT_CLASSIFICATION	0.9999997347016344	WITHOUT_CLASSIFICATION	2.6529836556366376E-7	DEFECT
// required attributes	WITHOUT_CLASSIFICATION	0.9999997347016344	WITHOUT_CLASSIFICATION	2.6529836556366376E-7	DEFECT
// load command line with optional attributes	WITHOUT_CLASSIFICATION	0.9999999856208449	WITHOUT_CLASSIFICATION	1.4379155140451128E-8	DEFECT
// load command line with optional attributes	WITHOUT_CLASSIFICATION	0.9999999856208449	WITHOUT_CLASSIFICATION	1.4379155140451128E-8	DEFECT
// load command line with optional attributes	WITHOUT_CLASSIFICATION	0.9999999856208449	WITHOUT_CLASSIFICATION	1.4379155140451128E-8	DEFECT
// use the directory containing the target as the output directory	WITHOUT_CLASSIFICATION	0.999999999936424	WITHOUT_CLASSIFICATION	6.357600828971171E-11	DEFECT
// use the directory containing the target as the output directory	WITHOUT_CLASSIFICATION	0.999999999936424	WITHOUT_CLASSIFICATION	6.357600828971171E-11	DEFECT
// used by jpackage for JavaCC 3.x	WITHOUT_CLASSIFICATION	0.999999695667972	WITHOUT_CLASSIFICATION	3.0433202797337227E-7	DEFECT
// check the target is a file	WITHOUT_CLASSIFICATION	0.9999999953218569	WITHOUT_CLASSIFICATION	4.678143072804421E-9	DEFECT
// determine if the generated java file is up-to-date	WITHOUT_CLASSIFICATION	0.9999999930792491	WITHOUT_CLASSIFICATION	6.92075084031633E-9	DEFECT
// Extract file's base-name	WITHOUT_CLASSIFICATION	0.9999993238338949	WITHOUT_CLASSIFICATION	6.76166105015647E-7	DEFECT
// Replace the file's extension with '.java'	WITHOUT_CLASSIFICATION	0.9999972715571973	WITHOUT_CLASSIFICATION	2.7284428026372784E-6	DEFECT
// Change the directory	WITHOUT_CLASSIFICATION	0.9999999634058158	WITHOUT_CLASSIFICATION	3.659418428801451E-8	DEFECT
// This default has been good enough until Ant 1.6.3, so stick // with it	WITHOUT_CLASSIFICATION	0.9999956867623189	WITHOUT_CLASSIFICATION	4.313237681134564E-6	DEFECT
// first search for the "old" javah class in 1.4.2 tools.jar	WITHOUT_CLASSIFICATION	0.9999999446789326	WITHOUT_CLASSIFICATION	5.5321067398376815E-8	DEFECT
// assume older than 1.4.2 tools.jar	WITHOUT_CLASSIFICATION	0.9999999323695505	WITHOUT_CLASSIFICATION	6.763044945060971E-8	DEFECT
//private CommandlineJava commandline = new CommandlineJava();	WITHOUT_CLASSIFICATION	0.9999980764721905	WITHOUT_CLASSIFICATION	1.923527809437465E-6	DEFECT
// required attributes // Deprecated! // Use this going forward	WITHOUT_CLASSIFICATION	0.9999995901163781	WITHOUT_CLASSIFICATION	4.0988362199912636E-7	DEFECT
// optional attributes	WITHOUT_CLASSIFICATION	0.999999993640161	WITHOUT_CLASSIFICATION	6.359838926796112E-9	DEFECT
// execute the test and get the return code	WITHOUT_CLASSIFICATION	0.9999998873857525	WITHOUT_CLASSIFICATION	1.1261424748458171E-7	DEFECT
// if there is an error/failure and that it should halt, stop // everything otherwise just log a statement	WITHOUT_CLASSIFICATION	0.9999999773078447	WITHOUT_CLASSIFICATION	2.2692155193887326E-8	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999997594604898	WITHOUT_CLASSIFICATION	2.4053951019376697E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999997594604898	WITHOUT_CLASSIFICATION	2.4053951019376697E-7	DEFECT
/* int accessFlags = */	WITHOUT_CLASSIFICATION	0.9999918532180323	WITHOUT_CLASSIFICATION	8.14678196772871E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999229243365	WITHOUT_CLASSIFICATION	7.707566353111588E-8	DEFECT
// not necessary as JDepend would fail, but why loose // some time?	WITHOUT_CLASSIFICATION	0.999548373667085	WITHOUT_CLASSIFICATION	4.5162633291493786E-4	DEFECT
// This bit turns <exclude> child tags into patters to ignore	WITHOUT_CLASSIFICATION	0.9999998761628376	WITHOUT_CLASSIFICATION	1.2383716249595373E-7	DEFECT
// JL: comment extracted from JUnitTask (and slightly modified)	WITHOUT_CLASSIFICATION	0.9999628063284748	WITHOUT_CLASSIFICATION	3.7193671525329024E-5	DEFECT
// if not set, auto-create the ClassPath from the project	WITHOUT_CLASSIFICATION	0.999999821959684	WITHOUT_CLASSIFICATION	1.78040316066731E-7	DEFECT
// having a space between the file and its path causes commandline // to add quotes around the argument thus making JDepend not taking // it into account. Thus we split it in two	WITHOUT_CLASSIFICATION	0.9999997612618396	WITHOUT_CLASSIFICATION	2.38738160384535E-7	DEFECT
// This is the new way - use classespath - code is the // same for now	WITHOUT_CLASSIFICATION	0.9999636401572625	WITHOUT_CLASSIFICATION	3.6359842737465365E-5	DEFECT
// read in all constant pool entries.	WITHOUT_CLASSIFICATION	0.9999994601696209	WITHOUT_CLASSIFICATION	5.398303791007731E-7	DEFECT
// verify this is a valid class file.	WITHOUT_CLASSIFICATION	0.9999811947237572	WITHOUT_CLASSIFICATION	1.8805276242747546E-5	DEFECT
/* int version = */	WITHOUT_CLASSIFICATION	0.9999980311671505	WITHOUT_CLASSIFICATION	1.9688328494487815E-6	DEFECT
// read the constant pool.	WITHOUT_CLASSIFICATION	0.9999995183506639	WITHOUT_CLASSIFICATION	4.816493360330206E-7	DEFECT
// read access flags and class index.	WITHOUT_CLASSIFICATION	0.9999412538608318	WITHOUT_CLASSIFICATION	5.874613916831429E-5	DEFECT
//Be sure everything has been set.	WITHOUT_CLASSIFICATION	0.9999989079306922	WITHOUT_CLASSIFICATION	1.0920693077512007E-6	DEFECT
//Do the merge	WITHOUT_CLASSIFICATION	0.9999963544902392	WITHOUT_CLASSIFICATION	3.645509760930933E-6	DEFECT
//Add this file to the addfiles Vector and add it //later at the top level of the output file.	WITHOUT_CLASSIFICATION	0.9999997895687359	WITHOUT_CLASSIFICATION	2.104312639896694E-7	DEFECT
//do nothing	WITHOUT_CLASSIFICATION	0.9999981960230487	WITHOUT_CLASSIFICATION	1.8039769512075118E-6	DEFECT
// jlink output input1 ... inputN	WITHOUT_CLASSIFICATION	0.9999716651597685	WITHOUT_CLASSIFICATION	2.8334840231444466E-5	DEFECT
// To maintain compatibility with the command-line version, // we will only add files to be merged.	WITHOUT_CLASSIFICATION	0.9999999527872953	WITHOUT_CLASSIFICATION	4.7212704687247215E-8	DEFECT
/*     * Actually performs the merging of f into the output.     * f should be a zip or jar file.     */	WITHOUT_CLASSIFICATION	0.9999850512353281	WITHOUT_CLASSIFICATION	1.4948764671954154E-5	DEFECT
//Check to see that the file with name "name" exists.	WITHOUT_CLASSIFICATION	0.9999998328613926	WITHOUT_CLASSIFICATION	1.6713860750645612E-7	DEFECT
//META-INF not found in the name of the entry. Go ahead and process it.	WITHOUT_CLASSIFICATION	0.9999995449206676	WITHOUT_CLASSIFICATION	4.5507933247660133E-7	DEFECT
//Weblogic jspc does not seem to work unless u explicitly set this... // Does not take the classpath from the env.... // Am i missing something about the Java task??	WITHOUT_CLASSIFICATION	0.6671546682665059	WITHOUT_CLASSIFICATION	0.3328453317334941	DEFECT
//do nothing	WITHOUT_CLASSIFICATION	0.9999981960230487	WITHOUT_CLASSIFICATION	1.8039769512075118E-6	DEFECT
/*     * Necessary in the case where you add a entry that     * is not compressed.     */	WITHOUT_CLASSIFICATION	0.9999995519265767	WITHOUT_CLASSIFICATION	4.480734232223748E-7	DEFECT
//Ignore manifest entries.  They're bound to cause conflicts between //files that are being merged.  User should supply their own //manifest file when doing the merge.	WITHOUT_CLASSIFICATION	0.999999995296615	WITHOUT_CLASSIFICATION	4.703385098192704E-9	DEFECT
//It was the duplicate entry.	WITHOUT_CLASSIFICATION	0.9999997367118091	WITHOUT_CLASSIFICATION	2.6328819086078397E-7	DEFECT
/*     * Adds contents of a directory to the output.     */	WITHOUT_CLASSIFICATION	0.9999998098427365	WITHOUT_CLASSIFICATION	1.9015726356079172E-7	DEFECT
/*     * Gets the name of an entry in the file.  This is the real name     * which for a class is the name of the package with the class     * name appended.     */	WITHOUT_CLASSIFICATION	0.9999999050450685	WITHOUT_CLASSIFICATION	9.495493151113195E-8	DEFECT
// see if the file is in fact a .class file, and determine its actual name.	WITHOUT_CLASSIFICATION	0.9999999892054248	WITHOUT_CLASSIFICATION	1.0794575187099492E-8	DEFECT
/*     * Adds a file to the output stream.     */	WITHOUT_CLASSIFICATION	0.9999998415666315	WITHOUT_CLASSIFICATION	1.5843336852956189E-7	DEFECT
//Make sure file exists	WITHOUT_CLASSIFICATION	0.9999992811846882	WITHOUT_CLASSIFICATION	7.188153118985426E-7	DEFECT
/*     * A convenience method that several other methods might call.     */	WITHOUT_CLASSIFICATION	0.9999976239997307	WITHOUT_CLASSIFICATION	2.376000269318326E-6	DEFECT
//This entry already exists. So, go with the first one.	WITHOUT_CLASSIFICATION	0.9999999174496382	WITHOUT_CLASSIFICATION	8.255036169512957E-8	DEFECT
/*     * A method that does the work on a given entry in a mergefile.     * The big deal is to set the right parameters in the ZipEntry     * on the output stream.     */	WITHOUT_CLASSIFICATION	0.9999733434409901	WITHOUT_CLASSIFICATION	2.6656559009794434E-5	DEFECT
//Note, don't need to specify size or crc for compressed files.	WITHOUT_CLASSIFICATION	0.9999993534220736	WITHOUT_CLASSIFICATION	6.465779263857514E-7	DEFECT
//use the systemclasspath as well, to include the ant jar	WITHOUT_CLASSIFICATION	0.9999998922721131	WITHOUT_CLASSIFICATION	1.0772788694092948E-7	DEFECT
/*     * Necessary in the case where you add a entry that     * is not compressed.     */	WITHOUT_CLASSIFICATION	0.9999995519265767	WITHOUT_CLASSIFICATION	4.480734232223748E-7	DEFECT
//TODO Test on other versions of weblogic //TODO add more attributes to the task, to take care of all jspc options //TODO Test on Unix	WITHOUT_CLASSIFICATION	0.9999913501410446	WITHOUT_CLASSIFICATION	8.649858955392195E-6	DEFECT
//private String compilerPath; //fully qualified name for the compiler executable	WITHOUT_CLASSIFICATION	0.9999996967117183	WITHOUT_CLASSIFICATION	3.032882816892357E-7	DEFECT
// get all the files in the sourceDirectory	WITHOUT_CLASSIFICATION	0.9999992955579603	WITHOUT_CLASSIFICATION	7.044420397467872E-7	DEFECT
//Weblogic.jspc calls System.exit() ... have to fork // Therefore, takes loads of time // Can pass directories at a time (*.jsp) but easily runs out of // memory on hefty dirs (even on  a Sun)	WITHOUT_CLASSIFICATION	0.9985181454523705	WITHOUT_CLASSIFICATION	0.0014818545476294896	DEFECT
// apply transformation	WITHOUT_CLASSIFICATION	0.9999998543686308	WITHOUT_CLASSIFICATION	1.4563136915720778E-7	DEFECT
//end class	WITHOUT_CLASSIFICATION	0.9999917416609095	WITHOUT_CLASSIFICATION	8.2583390903966E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999997594604898	WITHOUT_CLASSIFICATION	2.4053951019376697E-7	DEFECT
// CheckStyle:ConstantNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9999986578546028	WITHOUT_CLASSIFICATION	1.3421453971226684E-6	DEFECT
// CheckStyle:ConstantNameCheck ON	WITHOUT_CLASSIFICATION	0.9999991979337849	WITHOUT_CLASSIFICATION	8.020662149637047E-7	DEFECT
// now we need to populate the compiler adapter	WITHOUT_CLASSIFICATION	0.9999999359289672	WITHOUT_CLASSIFICATION	6.407103285187667E-8	DEFECT
// finally, lets execute the compiler!!	WITHOUT_CLASSIFICATION	0.9999965336927379	WITHOUT_CLASSIFICATION	3.466307262081029E-6	DEFECT
// Create an instance of the compiler, redirecting output to // the project log	WITHOUT_CLASSIFICATION	0.999999841869193	WITHOUT_CLASSIFICATION	1.5813080701387982E-7	DEFECT
// compile the source files	WITHOUT_CLASSIFICATION	0.9999999795596829	WITHOUT_CLASSIFICATION	2.044031704725681E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999229243365	WITHOUT_CLASSIFICATION	7.707566353111588E-8	DEFECT
//demand create vector of filesets	WITHOUT_CLASSIFICATION	0.9999995983217247	WITHOUT_CLASSIFICATION	4.0167827530101023E-7	DEFECT
// make sure that we've got a destdir	WITHOUT_CLASSIFICATION	0.9999990646421774	WITHOUT_CLASSIFICATION	9.353578225487777E-7	DEFECT
//bind to a compiler	WITHOUT_CLASSIFICATION	0.9999994546071462	WITHOUT_CLASSIFICATION	5.453928538228128E-7	DEFECT
//if we are a webapp, hand off to the compiler, which had better handle it	WITHOUT_CLASSIFICATION	0.9999999301429013	WITHOUT_CLASSIFICATION	6.98570986068982E-8	DEFECT
// make sure that we've got a srcdir	WITHOUT_CLASSIFICATION	0.999997698742035	WITHOUT_CLASSIFICATION	2.3012579650699605E-6	DEFECT
// if the compiler does its own dependency stuff, we just call it right now	WITHOUT_CLASSIFICATION	0.9999998727402202	WITHOUT_CLASSIFICATION	1.2725977982476457E-7	DEFECT
//the remainder of this method is only for compilers that need their dependency work done	WITHOUT_CLASSIFICATION	0.9995569844909356	WITHOUT_CLASSIFICATION	4.430155090645015E-4	DEFECT
// scan source directories and dest directory to build up both copy // lists and compile lists	WITHOUT_CLASSIFICATION	0.9999999998518415	WITHOUT_CLASSIFICATION	1.48158376949445E-10	DEFECT
//        String srcFileDir=srcFile.getParent();	WITHOUT_CLASSIFICATION	0.9999999551130804	WITHOUT_CLASSIFICATION	4.488691956086276E-8	DEFECT
//end inner class	WITHOUT_CLASSIFICATION	0.9999941937665978	WITHOUT_CLASSIFICATION	5.806233402205585E-6	DEFECT
// since we don't mangle extensions like the servlet does, // we need to check for keywords as class names	WITHOUT_CLASSIFICATION	0.9999999604707481	WITHOUT_CLASSIFICATION	3.9529251947115244E-8	DEFECT
// first char is more restrictive than the rest	WITHOUT_CLASSIFICATION	0.999999976356668	WITHOUT_CLASSIFICATION	2.3643331847145035E-8	DEFECT
// this is the rest	WITHOUT_CLASSIFICATION	0.999951998101506	WITHOUT_CLASSIFICATION	4.800189849403307E-5	DEFECT
// If the first char is not a start of Java identifier or is _ // prepend a '_'.	WITHOUT_CLASSIFICATION	0.9999999366815978	WITHOUT_CLASSIFICATION	6.331840227783315E-8	DEFECT
//we are forking here to be sure that if JspC calls //System.exit() it doesn't halt the build	WITHOUT_CLASSIFICATION	0.9998625231993943	WITHOUT_CLASSIFICATION	1.374768006056448E-4	DEFECT
//tomcat4.0 gets the old mangler	WITHOUT_CLASSIFICATION	0.9999985060797375	WITHOUT_CLASSIFICATION	1.4939202624808977E-6	DEFECT
//tomcat4.1 gets the new one	WITHOUT_CLASSIFICATION	0.9999997467247481	WITHOUT_CLASSIFICATION	2.5327525189654317E-7	DEFECT
// for all other possibilities	WITHOUT_CLASSIFICATION	0.9999999974183196	WITHOUT_CLASSIFICATION	2.581680378122952E-9	DEFECT
// append the err and output streams to the log	WITHOUT_CLASSIFICATION	0.9999987718061734	WITHOUT_CLASSIFICATION	1.2281938265758105E-6	DEFECT
// acrobatic cast.	WITHOUT_CLASSIFICATION	0.9999999058473361	WITHOUT_CLASSIFICATION	9.415266394724913E-8	DEFECT
// set the destination directory relative from the project if needed.	WITHOUT_CLASSIFICATION	0.9999999869406007	WITHOUT_CLASSIFICATION	1.3059399374813041E-8	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999997594604898	WITHOUT_CLASSIFICATION	2.4053951019376697E-7	DEFECT
// sanity check	WITHOUT_CLASSIFICATION	0.9999998594373642	WITHOUT_CLASSIFICATION	1.4056263581156433E-7	DEFECT
// plain impossible	WITHOUT_CLASSIFICATION	0.9999999151131699	WITHOUT_CLASSIFICATION	8.48868301764514E-8	DEFECT
// Quick return - no output do nothing.	WITHOUT_CLASSIFICATION	0.9999999535105077	WITHOUT_CLASSIFICATION	4.648949219114957E-8	DEFECT
// append the err and output streams to the log	WITHOUT_CLASSIFICATION	0.9999987718061734	WITHOUT_CLASSIFICATION	1.2281938265758105E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999229243365	WITHOUT_CLASSIFICATION	7.707566353111588E-8	DEFECT
// If style dir is not specified we have to retrieve // the stylesheet from the classloader	WITHOUT_CLASSIFICATION	0.9999983746104508	WITHOUT_CLASSIFICATION	1.625389549114322E-6	DEFECT
// If we are here, then the style dir is here and we // should read the stylesheet from the filesystem	WITHOUT_CLASSIFICATION	0.9999834330417956	WITHOUT_CLASSIFICATION	1.656695820443433E-5	DEFECT
// xalan 2	WITHOUT_CLASSIFICATION	0.9999955230490875	WITHOUT_CLASSIFICATION	4.4769509125375715E-6	DEFECT
// xalan xsltc	WITHOUT_CLASSIFICATION	0.9999985878554157	WITHOUT_CLASSIFICATION	1.412144584322065E-6	DEFECT
// jdk 1.5 xsltc	WITHOUT_CLASSIFICATION	0.9999966197707814	WITHOUT_CLASSIFICATION	3.380229218592842E-6	DEFECT
// must be plain, ensured by TypeAttribute	WITHOUT_CLASSIFICATION	0.9999999978750467	WITHOUT_CLASSIFICATION	2.1249533320553473E-9	DEFECT
// pre JUnit 3.7	WITHOUT_CLASSIFICATION	0.9999987832560873	WITHOUT_CLASSIFICATION	1.2167439127645624E-6	DEFECT
// can be null if an error occurred in setUp	WITHOUT_CLASSIFICATION	0.9999998263859152	WITHOUT_CLASSIFICATION	1.7361408473163542E-7	DEFECT
// PlainJUnitResultFormatter	WITHOUT_CLASSIFICATION	0.9999999277096262	WITHOUT_CLASSIFICATION	7.229037386622854E-8	DEFECT
// Snapshot of the system properties	WITHOUT_CLASSIFICATION	0.9999990176540575	WITHOUT_CLASSIFICATION	9.823459424993078E-7	DEFECT
//add the timestamp	WITHOUT_CLASSIFICATION	0.9999995853926882	WITHOUT_CLASSIFICATION	4.146073118804542E-7	DEFECT
//and the hostname.	WITHOUT_CLASSIFICATION	0.9999983995014947	WITHOUT_CLASSIFICATION	1.6004985053028926E-6	DEFECT
// Output properties	WITHOUT_CLASSIFICATION	0.9999998899392192	WITHOUT_CLASSIFICATION	1.100607807775399E-7	DEFECT
// a TestSuite can contain Tests from multiple classes, // even tests with the same name - disambiguate them.	WITHOUT_CLASSIFICATION	0.9999999746961247	WITHOUT_CLASSIFICATION	2.5303875331110188E-8	DEFECT
// XMLJUnitResultFormatter	WITHOUT_CLASSIFICATION	0.999989905018731	WITHOUT_CLASSIFICATION	1.009498126906647E-5	DEFECT
// Do we send output to the formatters ?	WITHOUT_CLASSIFICATION	0.999999971122507	WITHOUT_CLASSIFICATION	2.887749287417988E-8	DEFECT
//   Attributes for basetest	WITHOUT_CLASSIFICATION	0.9999997451601783	WITHOUT_CLASSIFICATION	2.5483982174014857E-7	DEFECT
// forceLoadClass is not convenient here since it would not // properly deal with inner classes of these classes.	WITHOUT_CLASSIFICATION	0.9999732834043438	WITHOUT_CLASSIFICATION	2.671659565619306E-5	DEFECT
/* forkMode.getValue().equals(ForkMode.PER_BATCH) */	WITHOUT_CLASSIFICATION	0.9999904610945716	WITHOUT_CLASSIFICATION	9.538905428360743E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999997594604898	WITHOUT_CLASSIFICATION	2.4053951019376697E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999998434438988	WITHOUT_CLASSIFICATION	1.565561011525499E-7	DEFECT
// execute the test and get the return code	WITHOUT_CLASSIFICATION	0.9999998873857525	WITHOUT_CLASSIFICATION	1.1261424748458171E-7	DEFECT
// execute the test and get the return code	WITHOUT_CLASSIFICATION	0.9999998873857525	WITHOUT_CLASSIFICATION	1.1261424748458171E-7	DEFECT
// null watchdog means no timeout, you'd better not check with null	WITHOUT_CLASSIFICATION	0.9999910621071033	WITHOUT_CLASSIFICATION	8.937892896650105E-6	DEFECT
// if there is an error/failure and that it should halt, stop // everything otherwise just log a statement	WITHOUT_CLASSIFICATION	0.9999999773078447	WITHOUT_CLASSIFICATION	2.2692155193887326E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999229243365	WITHOUT_CLASSIFICATION	7.707566353111588E-8	DEFECT
// set the default values if not specified //@todo should be moved to the test class instead.	WITHOUT_CLASSIFICATION	0.9999999486349844	WITHOUT_CLASSIFICATION	5.136501555855781E-8	DEFECT
// Create a temporary file to pass the test cases to run to // the runner (one test case per line)	WITHOUT_CLASSIFICATION	0.9999984458660192	WITHOUT_CLASSIFICATION	1.5541339808557192E-6	DEFECT
// #31885	WITHOUT_CLASSIFICATION	0.9999953168589067	WITHOUT_CLASSIFICATION	4.683141093319194E-6	DEFECT
// ignored.	WITHOUT_CLASSIFICATION	0.9999999446797952	WITHOUT_CLASSIFICATION	5.5320204778429235E-8	DEFECT
// in VM is not very nice since it could probably hang the // whole build. IMHO this method should be avoided and it would be best // to remove it in future versions. TBD. (SBa)	WITHOUT_CLASSIFICATION	0.9562278430817723	WITHOUT_CLASSIFICATION	0.04377215691822762	DEFECT
// make sure the test will be accepted as a TestCase	WITHOUT_CLASSIFICATION	0.9999999797457166	WITHOUT_CLASSIFICATION	2.0254283389389657E-8	DEFECT
// make sure the test annotation are accepted	WITHOUT_CLASSIFICATION	0.9999998857644579	WITHOUT_CLASSIFICATION	1.1423554213140795E-7	DEFECT
// will cause trouble in JDK 1.1 if omitted	WITHOUT_CLASSIFICATION	0.9999957117169886	WITHOUT_CLASSIFICATION	4.288283011388914E-6	DEFECT
// local copy since LogOutputStream.task is private	WITHOUT_CLASSIFICATION	0.999992467233083	WITHOUT_CLASSIFICATION	7.532766917054641E-6	DEFECT
// this one is here because the changes to support ResourceCollections // have broken Magic's JUnitTestTask. // // The task adds a FileSet to a BatchTest instance using the // Java API and without telling the FileSet about its project // instance.  The original code would pass in project on the // call to getDirectoryScanner - which is now hidden deep into // Resources.iterator() and not reachable.	WITHOUT_CLASSIFICATION	0.9999960335189008	WITHOUT_CLASSIFICATION	3.96648109924602E-6	DEFECT
// dummy output for the framed report // it's all done by extension...	WITHOUT_CLASSIFICATION	0.999998798757775	WITHOUT_CLASSIFICATION	1.2012422250816366E-6	DEFECT
// conforming to NodeList interface	WITHOUT_CLASSIFICATION	0.999999911154462	WITHOUT_CLASSIFICATION	8.884553807662929E-8	DEFECT
// this should never happen	WITHOUT_CLASSIFICATION	0.999989495791585	WITHOUT_CLASSIFICATION	1.0504208414874634E-5	DEFECT
// write the document	WITHOUT_CLASSIFICATION	0.9999999606166682	WITHOUT_CLASSIFICATION	3.9383331918847066E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999229243365	WITHOUT_CLASSIFICATION	7.707566353111588E-8	DEFECT
//----- from now, the methods are all related to DOM tree manipulation	WITHOUT_CLASSIFICATION	0.9999874319232882	WITHOUT_CLASSIFICATION	1.2568076711901763E-5	DEFECT
// writers do not throw exceptions, so check for them.	WITHOUT_CLASSIFICATION	0.9999999911017595	WITHOUT_CLASSIFICATION	8.898240444415258E-9	DEFECT
// create the dom tree	WITHOUT_CLASSIFICATION	0.9999999838974015	WITHOUT_CLASSIFICATION	1.6102598426348468E-8	DEFECT
// get all files and add them to the document	WITHOUT_CLASSIFICATION	0.9999998169033114	WITHOUT_CLASSIFICATION	1.8309668852154928E-7	DEFECT
// make sure that this is REALLY a testsuite.	WITHOUT_CLASSIFICATION	0.9999996780380802	WITHOUT_CLASSIFICATION	3.2196191975422866E-7	DEFECT
//wrong root element name // issue a warning.	WITHOUT_CLASSIFICATION	0.9999030876594417	WITHOUT_CLASSIFICATION	9.691234055832183E-5	DEFECT
// a testcase might have failed and write a zero-length document, // It has already failed, but hey.... mm. just put a warning	WITHOUT_CLASSIFICATION	0.9999970837848385	WITHOUT_CLASSIFICATION	2.9162151614580767E-6	DEFECT
// a missing . might imply no package at all. Don't get fooled.	WITHOUT_CLASSIFICATION	0.9999392841814517	WITHOUT_CLASSIFICATION	6.0715818548160504E-5	DEFECT
// modify the name attribute and set the package	WITHOUT_CLASSIFICATION	0.9999999549768471	WITHOUT_CLASSIFICATION	4.502315279465405E-8	DEFECT
// don't filter AssertionFailure	WITHOUT_CLASSIFICATION	0.999992320960769	WITHOUT_CLASSIFICATION	7.679039231038764E-6	DEFECT
// JUnit 4 support:	WITHOUT_CLASSIFICATION	0.9999980695576605	WITHOUT_CLASSIFICATION	1.930442339517277E-6	DEFECT
// check for a static suite method first, even when using // JUnit 4	WITHOUT_CLASSIFICATION	0.9999999990559378	WITHOUT_CLASSIFICATION	9.440622028708387E-10	DEFECT
// check if there is a suite method	WITHOUT_CLASSIFICATION	0.9999995932001869	WITHOUT_CLASSIFICATION	4.0679981305365337E-7	DEFECT
// no appropriate suite method found. We don't report any // error here since it might be perfectly normal.	WITHOUT_CLASSIFICATION	0.9992977904472122	WITHOUT_CLASSIFICATION	7.022095527878392E-4	DEFECT
// Check for JDK 5 first. Will *not* help on JDK 1.4 // if only junit-4.0.jar in CP because in that case // linkage of whole task will already have failed! But // will help if CP has junit-3.8.2.jar:junit-4.0.jar.	WITHOUT_CLASSIFICATION	0.9999997374770789	WITHOUT_CLASSIFICATION	2.625229210562812E-7	DEFECT
// In that case first C.fN will fail with CNFE and we // will avoid UnsupportedClassVersionError.	WITHOUT_CLASSIFICATION	0.9999951287099552	WITHOUT_CLASSIFICATION	4.871290044765638E-6	DEFECT
// OK, fall back to JUnit 3.	WITHOUT_CLASSIFICATION	0.9999911761616959	WITHOUT_CLASSIFICATION	8.82383830417094E-6	DEFECT
// Let's use it!	WITHOUT_CLASSIFICATION	0.9999993118557774	WITHOUT_CLASSIFICATION	6.881442225479918E-7	DEFECT
// Use JUnit 3.	WITHOUT_CLASSIFICATION	0.9999996917398896	WITHOUT_CLASSIFICATION	3.082601104091018E-7	DEFECT
// try to extract a test suite automatically this // will generate warnings if the class is no // suitable Test	WITHOUT_CLASSIFICATION	0.9999992565204013	WITHOUT_CLASSIFICATION	7.434795985166065E-7	DEFECT
// had an exception constructing suite	WITHOUT_CLASSIFICATION	0.9999999946975829	WITHOUT_CLASSIFICATION	5.3024170160428775E-9	DEFECT
// Add/overlay system properties on the properties from the Ant project	WITHOUT_CLASSIFICATION	0.9999890839337072	WITHOUT_CLASSIFICATION	1.0916066292711509E-5	DEFECT
// return the stack unfiltered	WITHOUT_CLASSIFICATION	0.9999992533569296	WITHOUT_CLASSIFICATION	7.466430704543423E-7	DEFECT
// Not strictly necessary but probably desirable. // JUnit 4-specific test GUIs will show just "failures". // But Ant's output shows "failures" vs. "errors". // We would prefer to show "failure" for things that logically are.	WITHOUT_CLASSIFICATION	0.9999999354526304	WITHOUT_CLASSIFICATION	6.454736945617693E-8	DEFECT
// To compile on pre-JDK 4 (even though this should always succeed):	WITHOUT_CLASSIFICATION	0.9999007267035851	WITHOUT_CLASSIFICATION	9.927329641494976E-5	DEFECT
// pre-3.4	WITHOUT_CLASSIFICATION	0.9999988591661257	WITHOUT_CLASSIFICATION	1.1408338743119408E-6	DEFECT
// JUnitTestRunner	WITHOUT_CLASSIFICATION	0.99999995927494	WITHOUT_CLASSIFICATION	4.07250600203927E-8	DEFECT
//rethrow	WITHOUT_CLASSIFICATION	0.9999366097154798	WITHOUT_CLASSIFICATION	6.339028452012979E-5	DEFECT
//wrap	WITHOUT_CLASSIFICATION	0.999992707855308	WITHOUT_CLASSIFICATION	7.292144691942381E-6	DEFECT
// sorted by newest Kaffe version first	WITHOUT_CLASSIFICATION	0.9999994925611296	WITHOUT_CLASSIFICATION	5.07438870268684E-7	DEFECT
// pre Kaffe 1.1.5	WITHOUT_CLASSIFICATION	0.9999971750282984	WITHOUT_CLASSIFICATION	2.8249717014316135E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999997594604898	WITHOUT_CLASSIFICATION	2.4053951019376697E-7	DEFECT
// we are going to scan everything anyway	WITHOUT_CLASSIFICATION	0.99999878855411	WITHOUT_CLASSIFICATION	1.2114458900230297E-6	DEFECT
// only scan directories that can include matched files or // directories	WITHOUT_CLASSIFICATION	0.9999988014714668	WITHOUT_CLASSIFICATION	1.1985285331676843E-6	DEFECT
// avoid double scanning of directories, can only happen in fast mode	WITHOUT_CLASSIFICATION	0.9999960771298388	WITHOUT_CLASSIFICATION	3.922870161157876E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999998434438988	WITHOUT_CLASSIFICATION	1.565561011525499E-7	DEFECT
// This default has been good enough until Ant 1.6.3, so stick // with it	WITHOUT_CLASSIFICATION	0.9999956867623189	WITHOUT_CLASSIFICATION	4.313237681134564E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999229243365	WITHOUT_CLASSIFICATION	7.707566353111588E-8	DEFECT
// Rats. // should not happen	WITHOUT_CLASSIFICATION	0.9994644705368964	WITHOUT_CLASSIFICATION	5.355294631036353E-4	DEFECT
// otherwise ExecuteJava has thrown an exception	WITHOUT_CLASSIFICATION	0.9999993310500276	WITHOUT_CLASSIFICATION	6.689499725224072E-7	DEFECT
// No includes supplied, so set it to 'matches all'	WITHOUT_CLASSIFICATION	0.9999999998296	WITHOUT_CLASSIFICATION	1.7039998899637184E-10	DEFECT
// always start from the current ftp working dir	WITHOUT_CLASSIFICATION	0.9998912529449884	WITHOUT_CLASSIFICATION	1.0874705501171447E-4	DEFECT
// put in the newroots vector the include patterns without // wildcard tokens	WITHOUT_CLASSIFICATION	0.9999955163447445	WITHOUT_CLASSIFICATION	4.4836552554989845E-6	DEFECT
// construct it	WITHOUT_CLASSIFICATION	0.999999758546605	WITHOUT_CLASSIFICATION	2.414533950133906E-7	DEFECT
// cool case, //we do not need to scan all the subdirs in the relative path	WITHOUT_CLASSIFICATION	0.999999903877659	WITHOUT_CLASSIFICATION	9.612234103887008E-8	DEFECT
//this should not happen, except if parent has been deleted by another process	WITHOUT_CLASSIFICATION	0.9990791895648488	WITHOUT_CLASSIFICATION	9.208104351512252E-4	DEFECT
// we are already in the right path, so the second parameter // is false	WITHOUT_CLASSIFICATION	0.9999712640421604	WITHOUT_CLASSIFICATION	2.8735957839644973E-5	DEFECT
// hit a hidden file assume not a symlink	WITHOUT_CLASSIFICATION	0.9999955403788978	WITHOUT_CLASSIFICATION	4.459621102246899E-6	DEFECT
// getRelativePath also finds about symlinks	WITHOUT_CLASSIFICATION	0.9999990594658899	WITHOUT_CLASSIFICATION	9.405341100435432E-7	DEFECT
// warn that selectors are not supported	WITHOUT_CLASSIFICATION	0.9999967896876876	WITHOUT_CLASSIFICATION	3.2103123123707253E-6	DEFECT
// If we are doing a listing, we need the output stream created now.	WITHOUT_CLASSIFICATION	0.9999999991255312	WITHOUT_CLASSIFICATION	8.744688573426E-10	DEFECT
// get files from filesets	WITHOUT_CLASSIFICATION	0.9999997129047845	WITHOUT_CLASSIFICATION	2.870952155513079E-7	DEFECT
// find first non cached dir	WITHOUT_CLASSIFICATION	0.9999999628234716	WITHOUT_CLASSIFICATION	3.717652842478485E-8	DEFECT
// check if dir exists by trying to change into it.	WITHOUT_CLASSIFICATION	0.999999986883709	WITHOUT_CLASSIFICATION	1.311629099842548E-8	DEFECT
// could not change to it - try to create it	WITHOUT_CLASSIFICATION	0.9999988188981324	WITHOUT_CLASSIFICATION	1.1811018676545232E-6	DEFECT
// create a local temporary file	WITHOUT_CLASSIFICATION	0.9999999254091682	WITHOUT_CLASSIFICATION	7.459083188110316E-8	DEFECT
// see if we should issue a chmod command	WITHOUT_CLASSIFICATION	0.999809462235809	WITHOUT_CLASSIFICATION	1.9053776419104953E-4	DEFECT
// ignore it	WITHOUT_CLASSIFICATION	0.9999998760008227	WITHOUT_CLASSIFICATION	1.2399917731874427E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999229243365	WITHOUT_CLASSIFICATION	7.707566353111588E-8	DEFECT
// ignore it	WITHOUT_CLASSIFICATION	0.9999998760008227	WITHOUT_CLASSIFICATION	1.2399917731874427E-7	DEFECT
// delegate the deletion of the local temp file to the delete task // because of race conditions occuring on Windows	WITHOUT_CLASSIFICATION	0.9999998143617512	WITHOUT_CLASSIFICATION	1.8563824881254657E-7	DEFECT
// For Microsoft's Ftp-Service an Array with length 0 is // returned if configured to return listings in "MS-DOS"-Format	WITHOUT_CLASSIFICATION	0.9999999638125736	WITHOUT_CLASSIFICATION	3.61874263000842E-8	DEFECT
// If we are sending files, then assume out of date. // If we are getting files, then throw an error	WITHOUT_CLASSIFICATION	0.9999993234637145	WITHOUT_CLASSIFICATION	6.765362854442782E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999229243365	WITHOUT_CLASSIFICATION	7.707566353111588E-8	DEFECT
// codes 521, 550 and 553 can be produced by FTP Servers //  to indicate that an attempt to create a directory has //  failed because the directory already exists.	WITHOUT_CLASSIFICATION	0.9999966442242456	WITHOUT_CLASSIFICATION	3.355775754290936E-6	DEFECT
// If an initial command was configured then send it. // Some FTP servers offer different modes of operation, // E.G. switching between a UNIX file system mode and // a legacy file system.	WITHOUT_CLASSIFICATION	0.9999998131006965	WITHOUT_CLASSIFICATION	1.8689930353775628E-7	DEFECT
// For a unix ftp server you can set the default mask for all files // created.	WITHOUT_CLASSIFICATION	0.9999999119272097	WITHOUT_CLASSIFICATION	8.807279032413445E-8	DEFECT
// If the action is MK_DIR, then the specified remote // directory is the directory to create.	WITHOUT_CLASSIFICATION	0.9999999906110497	WITHOUT_CLASSIFICATION	9.388950269810425E-9	DEFECT
// in this case we want to find how much time span there is between local // and remote	WITHOUT_CLASSIFICATION	0.9999983995909785	WITHOUT_CLASSIFICATION	1.6004090215562507E-6	DEFECT
//socks	WITHOUT_CLASSIFICATION	0.9999648662689173	WITHOUT_CLASSIFICATION	3.5133731082696935E-5	DEFECT
//this may be a java1.4 thingy only	WITHOUT_CLASSIFICATION	0.9999977181387584	WITHOUT_CLASSIFICATION	2.281861241741644E-6	DEFECT
// simple one-shot execution	WITHOUT_CLASSIFICATION	0.999998460673054	WITHOUT_CLASSIFICATION	1.5393269459712758E-6	DEFECT
// need nested read/write elements	WITHOUT_CLASSIFICATION	0.9999999792652504	WITHOUT_CLASSIFICATION	2.073474955309425E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999229243365	WITHOUT_CLASSIFICATION	7.707566353111588E-8	DEFECT
//here we'd parse the output from change -o into submit -i //in order to support default change.	WITHOUT_CLASSIFICATION	0.9999999797717449	WITHOUT_CLASSIFICATION	2.022825501996087E-8	DEFECT
// CheckStyle:VisibilityModifier OFF - bc //ToDo: If dealing with default cl need to parse out <enter description here>	WITHOUT_CLASSIFICATION	0.9999908173338733	WITHOUT_CLASSIFICATION	9.18266612674767E-6	DEFECT
/* -n */	WITHOUT_CLASSIFICATION	0.9999750154857582	WITHOUT_CLASSIFICATION	2.4984514241904444E-5	DEFECT
//Remove any non-numerical chars - should leave the change number	WITHOUT_CLASSIFICATION	0.9997837726529301	WITHOUT_CLASSIFICATION	2.1622734706985998E-4	DEFECT
// this type of output might happen // Change 18 renamed change 20 and submitted.	WITHOUT_CLASSIFICATION	0.9998641417868518	WITHOUT_CLASSIFICATION	1.35858213148332E-4	DEFECT
//Match "//" for begining of depot filespec	WITHOUT_CLASSIFICATION	0.9999999904470753	WITHOUT_CLASSIFICATION	9.552924641154974E-9	DEFECT
// we need to escape the description in case there are /	WITHOUT_CLASSIFICATION	0.9999999092765259	WITHOUT_CLASSIFICATION	9.072347401070263E-8	DEFECT
// NOTE kirk@radik.com 04-April-2001 -- If you put in the -s, you // have to start running through regular expressions here. Much easier // to just not include the scripting information than to try to add it // and strip it later.	WITHOUT_CLASSIFICATION	0.999998403634843	WITHOUT_CLASSIFICATION	1.5963651570023262E-6	DEFECT
//EoF	WITHOUT_CLASSIFICATION	0.9999526192963635	WITHOUT_CLASSIFICATION	4.738070363639808E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc //Input //Output //Error // CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999997003341514	WITHOUT_CLASSIFICATION	2.996658486122845E-7	DEFECT
/* Here we can either revert any unchanged files in a changelist         * or         * any files regardless of whether they have been changed or not         *         *         * The whole process also accepts a p4 filespec         */	WITHOUT_CLASSIFICATION	0.9999999733078195	WITHOUT_CLASSIFICATION	2.6692180497925535E-8	DEFECT
/* -a */	WITHOUT_CLASSIFICATION	0.9999920629189677	WITHOUT_CLASSIFICATION	7.937081032310042E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999229243365	WITHOUT_CLASSIFICATION	7.707566353111588E-8	DEFECT
/* -n */	WITHOUT_CLASSIFICATION	0.9999750154857582	WITHOUT_CLASSIFICATION	2.4984514241904444E-5	DEFECT
/* -n */	WITHOUT_CLASSIFICATION	0.9999750154857582	WITHOUT_CLASSIFICATION	2.4984514241904444E-5	DEFECT
/* -f */	WITHOUT_CLASSIFICATION	0.9999895721749112	WITHOUT_CLASSIFICATION	1.0427825088740828E-5	DEFECT
/* -t */	WITHOUT_CLASSIFICATION	0.999980120141886	WITHOUT_CLASSIFICATION	1.987985811395609E-5	DEFECT
/* -v */	WITHOUT_CLASSIFICATION	0.9999903420143763	WITHOUT_CLASSIFICATION	9.657985623717251E-6	DEFECT
//We have to create a unlocked label first	WITHOUT_CLASSIFICATION	0.9999999572597852	WITHOUT_CLASSIFICATION	4.274021483968376E-8	DEFECT
//Now lock if required	WITHOUT_CLASSIFICATION	0.9999586132805248	WITHOUT_CLASSIFICATION	4.1386719475156596E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999229243365	WITHOUT_CLASSIFICATION	7.707566353111588E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999229243365	WITHOUT_CLASSIFICATION	7.707566353111588E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999229243365	WITHOUT_CLASSIFICATION	7.707566353111588E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999229243365	WITHOUT_CLASSIFICATION	7.707566353111588E-8	DEFECT
// CheckStyle:VisibilityModifier OFF - bc // CheckStyle:MemberNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9999999199131375	WITHOUT_CLASSIFICATION	8.008686249783988E-8	DEFECT
// CheckStyle:MemberNameCheck ON // CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999632241419	WITHOUT_CLASSIFICATION	3.67758580551986E-8	DEFECT
// Massage PCLI lvf output transforming '\' to '/' so get command works appropriately	WITHOUT_CLASSIFICATION	0.9999906059944034	WITHOUT_CLASSIFICATION	9.394005596688506E-6	DEFECT
//Read back the label spec from perforce, //Replace Options //Submit back to Perforce	WITHOUT_CLASSIFICATION	0.9999997191185566	WITHOUT_CLASSIFICATION	2.808814434572108E-7	DEFECT
//when running labelsync, if view elements are in sync, //Perforce produces a line of output //looking like this one : //error: //depot/file2 - label in sync.	WITHOUT_CLASSIFICATION	0.999991442473436	WITHOUT_CLASSIFICATION	8.557526564062206E-6	DEFECT
//sync says "error:" when a file is up-to-date	WITHOUT_CLASSIFICATION	0.9999982868350928	WITHOUT_CLASSIFICATION	1.7131649071795846E-6	DEFECT
//sometimes there's "info1:	WITHOUT_CLASSIFICATION	0.999999716911872	WITHOUT_CLASSIFICATION	2.830881280447125E-7	DEFECT
//P4 runtime directives	WITHOUT_CLASSIFICATION	0.9999989811958337	WITHOUT_CLASSIFICATION	1.0188041662970745E-6	DEFECT
// Perforce task directives	WITHOUT_CLASSIFICATION	0.999999888252442	WITHOUT_CLASSIFICATION	1.1174755788602477E-7	DEFECT
//P4 g-opts and cmd opts (rtfm)	WITHOUT_CLASSIFICATION	0.9999999418127651	WITHOUT_CLASSIFICATION	5.818723497060426E-8	DEFECT
//Setters called by Ant	WITHOUT_CLASSIFICATION	0.9999941120350144	WITHOUT_CLASSIFICATION	5.887964985577024E-6	DEFECT
//Get default P4 settings from environment - Mark would have done something cool with //introspection here.....:-)	WITHOUT_CLASSIFICATION	0.9887682512123442	WITHOUT_CLASSIFICATION	0.011231748787655845	DEFECT
// reset error flags before executing the command	WITHOUT_CLASSIFICATION	0.9993126585476475	WITHOUT_CLASSIFICATION	6.873414523524017E-4	DEFECT
//Check API for these - it's how CVS does it...	WITHOUT_CLASSIFICATION	0.9970399508567469	WITHOUT_CLASSIFICATION	0.002960049143253065	DEFECT
/*     * Constant for the PCLI listversionedfiles recursive i a format "get" understands     */	WITHOUT_CLASSIFICATION	0.9999999902925928	WITHOUT_CLASSIFICATION	9.707407240559064E-9	DEFECT
// private static final String PCLI_LVF_ARGS = "lvf -z -aw";	WITHOUT_CLASSIFICATION	0.9999999562850341	WITHOUT_CLASSIFICATION	4.3714965804086455E-8	DEFECT
// Check workspace exists // Launch PCLI listversionedfiles -z -aw // Capture output // build the command line from what we got the format is	WITHOUT_CLASSIFICATION	0.9999973321061156	WITHOUT_CLASSIFICATION	2.667893884367799E-6	DEFECT
// default pvcs project is "/"	WITHOUT_CLASSIFICATION	0.9999990331897884	WITHOUT_CLASSIFICATION	9.668102116403886E-7	DEFECT
// Create folders in workspace	WITHOUT_CLASSIFICATION	0.9999940485412129	WITHOUT_CLASSIFICATION	5.951458787163091E-6	DEFECT
// Launch get on output captured from PCLI lvf	WITHOUT_CLASSIFICATION	0.9999999561105003	WITHOUT_CLASSIFICATION	4.3889499639788616E-8	DEFECT
// Extract the name of the directory from the filename	WITHOUT_CLASSIFICATION	0.9999999453204003	WITHOUT_CLASSIFICATION	5.467959969290681E-8	DEFECT
// Change these through their GET and SET methods.	WITHOUT_CLASSIFICATION	0.99999999779512	WITHOUT_CLASSIFICATION	2.2048798800920282E-9	DEFECT
// These fields deal with includes and excludes	WITHOUT_CLASSIFICATION	0.9999987707654876	WITHOUT_CLASSIFICATION	1.2292345124644962E-6	DEFECT
// Check all of the properties that are required.	WITHOUT_CLASSIFICATION	0.9999988463018825	WITHOUT_CLASSIFICATION	1.1536981175103241E-6	DEFECT
// Check to see if the target directory exists.	WITHOUT_CLASSIFICATION	0.999999998069566	WITHOUT_CLASSIFICATION	1.9304340613178077E-9	DEFECT
// Search the items on this server.	WITHOUT_CLASSIFICATION	0.9999979650858164	WITHOUT_CLASSIFICATION	2.0349141836501047E-6	DEFECT
// Disconnect from the server.	WITHOUT_CLASSIFICATION	0.9999993821016573	WITHOUT_CLASSIFICATION	6.178983427462379E-7	DEFECT
// Tell how many files were checked out.	WITHOUT_CLASSIFICATION	0.9999990955622754	WITHOUT_CLASSIFICATION	9.044377246239452E-7	DEFECT
// Optional; logOn() connects if necessary.	WITHOUT_CLASSIFICATION	0.9999993672236686	WITHOUT_CLASSIFICATION	6.327763313992186E-7	DEFECT
// Logon using specified user name and password.	WITHOUT_CLASSIFICATION	0.9999999782216137	WITHOUT_CLASSIFICATION	2.1778386330676847E-8	DEFECT
// We always display the ItemID (OBJECT_ID) and primary descriptor.	WITHOUT_CLASSIFICATION	0.99999981353532	WITHOUT_CLASSIFICATION	1.8646468009928753E-7	DEFECT
//If a working directory was specified then add it to the command line	WITHOUT_CLASSIFICATION	0.9923937844226497	WITHOUT_CLASSIFICATION	0.007606215577350256	DEFECT
// Checking for "\ // or           "/ // or           "X:\...	WITHOUT_CLASSIFICATION	0.9999656341850526	WITHOUT_CLASSIFICATION	3.4365814947340046E-5	DEFECT
// If we find a "file" attribute then act on a file otherwise act on a project	WITHOUT_CLASSIFICATION	0.9999999096829413	WITHOUT_CLASSIFICATION	9.031705869738637E-8	DEFECT
// after you are all of the properties are ok, do your thing // with StarTeam.  If there are any kind of exceptions then // send the message to the project log.	WITHOUT_CLASSIFICATION	0.9999943956766533	WITHOUT_CLASSIFICATION	5.6043233466618195E-6	DEFECT
// For performance reasons, it is important to pre-fetch all the // properties we'll need for all the items we'll be searching.	WITHOUT_CLASSIFICATION	0.9999995935901884	WITHOUT_CLASSIFICATION	4.0640981157443927E-7	DEFECT
// We'll need this item type's primary descriptor.	WITHOUT_CLASSIFICATION	0.9999994955294573	WITHOUT_CLASSIFICATION	5.04470542578432E-7	DEFECT
// Does this item type have a secondary descriptor? // If so, we'll need it.	WITHOUT_CLASSIFICATION	0.9999740762774242	WITHOUT_CLASSIFICATION	2.592372257581359E-5	DEFECT
// Now, build an array of the property names.	WITHOUT_CLASSIFICATION	0.999990760935302	WITHOUT_CLASSIFICATION	9.239064698035016E-6	DEFECT
// Pre-fetch the item properties and cache them.	WITHOUT_CLASSIFICATION	0.9999999705491475	WITHOUT_CLASSIFICATION	2.9450852531981183E-8	DEFECT
// Now, search for items in the selected folder.	WITHOUT_CLASSIFICATION	0.9999999829455488	WITHOUT_CLASSIFICATION	1.7054451180070737E-8	DEFECT
// Free up the memory used by the cached items.	WITHOUT_CLASSIFICATION	0.9999999539733843	WITHOUT_CLASSIFICATION	4.602661568761508E-8	DEFECT
// convert whatever separator char is in starteam to that of the target system.	WITHOUT_CLASSIFICATION	0.9999999924723595	WITHOUT_CLASSIFICATION	7.527640624217123E-9	DEFECT
// If it ends with separator then strip it off	WITHOUT_CLASSIFICATION	0.9999997583514141	WITHOUT_CLASSIFICATION	2.416485859360925E-7	DEFECT
// Replace the projectName in the file's absolute path to the viewName. // This makes the root target of a checkout operation equal to: // targetFolder + dirName	WITHOUT_CLASSIFICATION	0.9999999982812684	WITHOUT_CLASSIFICATION	1.718731626362334E-9	DEFECT
// only want to do this the first time	WITHOUT_CLASSIFICATION	0.9999978042899488	WITHOUT_CLASSIFICATION	2.195710051163486E-6	DEFECT
// Process all items in this folder.	WITHOUT_CLASSIFICATION	0.9999997135400731	WITHOUT_CLASSIFICATION	2.864599268612112E-7	DEFECT
// Process all subfolders recursively if recursion is on.	WITHOUT_CLASSIFICATION	0.9999999561013552	WITHOUT_CLASSIFICATION	4.3898644765421204E-8	DEFECT
// Get descriptors for this item type.	WITHOUT_CLASSIFICATION	0.9999998919111588	WITHOUT_CLASSIFICATION	1.080888412078883E-7	DEFECT
// VERBOSE MODE ONLY	WITHOUT_CLASSIFICATION	0.9999955310824319	WITHOUT_CLASSIFICATION	4.468917568168804E-6	DEFECT
// Show folder only if changed.	WITHOUT_CLASSIFICATION	0.9999997919489297	WITHOUT_CLASSIFICATION	2.0805107024257534E-7	DEFECT
// Show if the file is locked.	WITHOUT_CLASSIFICATION	0.9999997762449251	WITHOUT_CLASSIFICATION	2.237550749718541E-7	DEFECT
// END VERBOSE ONLY	WITHOUT_CLASSIFICATION	0.999996131701302	WITHOUT_CLASSIFICATION	3.868298698060137E-6	DEFECT
// add -command CheckOutFile to the commandline	WITHOUT_CLASSIFICATION	0.9999999000469916	WITHOUT_CLASSIFICATION	9.9953008431433E-8	DEFECT
// Finally, show the Item properties ... // Always show the ItemID.	WITHOUT_CLASSIFICATION	0.9994202455211286	WITHOUT_CLASSIFICATION	5.797544788712713E-4	DEFECT
// Show the primary descriptor. // There should always be one.	WITHOUT_CLASSIFICATION	0.9999836272091852	WITHOUT_CLASSIFICATION	1.637279081481947E-5	DEFECT
// Show the secondary descriptor, if there is one. // Some item types have one, some don't.	WITHOUT_CLASSIFICATION	0.9999992935840637	WITHOUT_CLASSIFICATION	7.064159363180073E-7	DEFECT
// Change the item to be checked out to a StarTeam File.	WITHOUT_CLASSIFICATION	0.9999999997892813	WITHOUT_CLASSIFICATION	2.1071871957940193E-10	DEFECT
// The local file name is simply the local target path (tgt) which has // been passed recursively down from the top of the tree, with the item's name appended.	WITHOUT_CLASSIFICATION	0.9999999999035194	WITHOUT_CLASSIFICATION	9.648066528624948E-11	DEFECT
// Begin SET and GET methods	WITHOUT_CLASSIFICATION	0.9999993487785536	WITHOUT_CLASSIFICATION	6.512214462928255E-7	DEFECT
// Begin filter getters and setters	WITHOUT_CLASSIFICATION	0.9999805608089437	WITHOUT_CLASSIFICATION	1.9439191056273915E-5	DEFECT
// Check if need to set the loader	WITHOUT_CLASSIFICATION	0.9999999717448719	WITHOUT_CLASSIFICATION	2.825512807933805E-8	DEFECT
// Now create the scriptRunner	WITHOUT_CLASSIFICATION	0.9999999800270016	WITHOUT_CLASSIFICATION	1.9972998333265784E-8	DEFECT
// find the script repository - it is stored in the project	WITHOUT_CLASSIFICATION	0.9999328236505405	WITHOUT_CLASSIFICATION	6.717634945953569E-5	DEFECT
/*            // try the context classloader            ClassLoader loader                = Thread.currentThread().getContextClassLoader();            */	WITHOUT_CLASSIFICATION	0.9999996249723986	WITHOUT_CLASSIFICATION	3.750276013926526E-7	DEFECT
// If we find a "file" attribute then act on a file otherwise act on a project	WITHOUT_CLASSIFICATION	0.9999999096829413	WITHOUT_CLASSIFICATION	9.031705869738637E-8	DEFECT
// add -command CheckInFile to the commandline	WITHOUT_CLASSIFICATION	0.9999997864316175	WITHOUT_CLASSIFICATION	2.135683825177459E-7	DEFECT
// add -file xxxxx to the commandline	WITHOUT_CLASSIFICATION	0.9999998790051982	WITHOUT_CLASSIFICATION	1.2099480174271168E-7	DEFECT
// add -file xxxxx to the commandline	WITHOUT_CLASSIFICATION	0.9999998790051982	WITHOUT_CLASSIFICATION	1.2099480174271168E-7	DEFECT
// add -command CheckInProject to the commandline	WITHOUT_CLASSIFICATION	0.9999993544328141	WITHOUT_CLASSIFICATION	6.45567185901191E-7	DEFECT
// look for a recursive option	WITHOUT_CLASSIFICATION	0.9999999655075448	WITHOUT_CLASSIFICATION	3.4492455280898266E-8	DEFECT
// look for a recursive option	WITHOUT_CLASSIFICATION	0.9999999655075448	WITHOUT_CLASSIFICATION	3.4492455280898266E-8	DEFECT
// Look for a comment	WITHOUT_CLASSIFICATION	0.9999993479933199	WITHOUT_CLASSIFICATION	6.52006679975394E-7	DEFECT
// soscmd Command options	WITHOUT_CLASSIFICATION	0.9999999528923454	WITHOUT_CLASSIFICATION	4.7107654652991354E-8	DEFECT
// soscmd Option flags	WITHOUT_CLASSIFICATION	0.999998226037603	WITHOUT_CLASSIFICATION	1.7739623969540016E-6	DEFECT
// add -command GetFile to the commandline	WITHOUT_CLASSIFICATION	0.9999999337654698	WITHOUT_CLASSIFICATION	6.623453021193541E-8	DEFECT
// look for a version attribute	WITHOUT_CLASSIFICATION	0.999999574318442	WITHOUT_CLASSIFICATION	4.256815580552636E-7	DEFECT
//add -revision xxxxx to the commandline	WITHOUT_CLASSIFICATION	0.9999991093123959	WITHOUT_CLASSIFICATION	8.906876040608538E-7	DEFECT
// add -command GetProject to the commandline	WITHOUT_CLASSIFICATION	0.9999999025851204	WITHOUT_CLASSIFICATION	9.741487970609784E-8	DEFECT
// look for a label option	WITHOUT_CLASSIFICATION	0.9999999365652692	WITHOUT_CLASSIFICATION	6.3434730776224E-8	DEFECT
// make sure localDir exists, create it if it doesn't	WITHOUT_CLASSIFICATION	0.9999982262697082	WITHOUT_CLASSIFICATION	1.7737302917486276E-6	DEFECT
// This is the exit status	WITHOUT_CLASSIFICATION	0.9999886846046593	WITHOUT_CLASSIFICATION	1.1315395340600013E-5	DEFECT
// Use the OS VM launcher so we get environment variables	WITHOUT_CLASSIFICATION	0.9999999621346075	WITHOUT_CLASSIFICATION	3.7865392422176806E-8	DEFECT
// Get the path to the soscmd(.exe)	WITHOUT_CLASSIFICATION	0.999999784687181	WITHOUT_CLASSIFICATION	2.1531281908199874E-7	DEFECT
// SOS server address is required	WITHOUT_CLASSIFICATION	0.999971278005506	WITHOUT_CLASSIFICATION	2.8721994494075E-5	DEFECT
// VSS Info is required	WITHOUT_CLASSIFICATION	0.9999254309765866	WITHOUT_CLASSIFICATION	7.456902341341269E-5	DEFECT
// VSS project is required	WITHOUT_CLASSIFICATION	0.9998900770569834	WITHOUT_CLASSIFICATION	1.0992294301650184E-4	DEFECT
// -verbose	WITHOUT_CLASSIFICATION	0.9999999592618064	WITHOUT_CLASSIFICATION	4.073819356510901E-8	DEFECT
// Disable Compression	WITHOUT_CLASSIFICATION	0.99999979202365	WITHOUT_CLASSIFICATION	2.0797635004375164E-7	DEFECT
// If -soshome was not specified then we can look for nocache	WITHOUT_CLASSIFICATION	0.9999977568702518	WITHOUT_CLASSIFICATION	2.243129748087922E-6	DEFECT
// Ignore Exception	WITHOUT_CLASSIFICATION	0.9999997655677488	WITHOUT_CLASSIFICATION	2.3443225114823844E-7	DEFECT
// look for a recursive option	WITHOUT_CLASSIFICATION	0.9999999655075448	WITHOUT_CLASSIFICATION	3.4492455280898266E-8	DEFECT
// Look for a comment	WITHOUT_CLASSIFICATION	0.9999993479933199	WITHOUT_CLASSIFICATION	6.52006679975394E-7	DEFECT
// -verbose	WITHOUT_CLASSIFICATION	0.9999999592618064	WITHOUT_CLASSIFICATION	4.073819356510901E-8	DEFECT
// The SOS class knows that the SOS server needs the password flag, // even if there is no password ,so we send a " "	WITHOUT_CLASSIFICATION	0.9999907147895533	WITHOUT_CLASSIFICATION	9.28521044668552E-6	DEFECT
// add -command CheckOutProject to the commandline	WITHOUT_CLASSIFICATION	0.9999998217915982	WITHOUT_CLASSIFICATION	1.7820840185713093E-7	DEFECT
// add -command AddLabel to the commandline	WITHOUT_CLASSIFICATION	0.9999999416575601	WITHOUT_CLASSIFICATION	5.8342439845283995E-8	DEFECT
// a label is required	WITHOUT_CLASSIFICATION	0.9999972164192544	WITHOUT_CLASSIFICATION	2.783580745501339E-6	DEFECT
// get the list of files in the dir	WITHOUT_CLASSIFICATION	0.9999997392568278	WITHOUT_CLASSIFICATION	2.6074317217252823E-7	DEFECT
// get a random number between 0 and the number of files	WITHOUT_CLASSIFICATION	0.9999999785968491	WITHOUT_CLASSIFICATION	2.140315088537459E-8	DEFECT
// set the source to the file at that location	WITHOUT_CLASSIFICATION	0.9999998747925248	WITHOUT_CLASSIFICATION	1.252074751786063E-7	DEFECT
// Empty block	WITHOUT_CLASSIFICATION	0.9999987224323661	WITHOUT_CLASSIFICATION	1.2775676338726954E-6	DEFECT
//System.exit(0);	WITHOUT_CLASSIFICATION	0.9999969101345457	WITHOUT_CLASSIFICATION	3.0898654542432595E-6	DEFECT
// build successfull!	WITHOUT_CLASSIFICATION	0.9999993306994278	WITHOUT_CLASSIFICATION	6.693005722083079E-7	DEFECT
/*AbstractSshMessage*/	WITHOUT_CLASSIFICATION	0.9999980570112951	WITHOUT_CLASSIFICATION	1.9429887049304928E-6	DEFECT
// dir does not exist.	WITHOUT_CLASSIFICATION	0.9999238668123209	WITHOUT_CLASSIFICATION	7.6133187679045E-5	DEFECT
// only track progress for files larger than 100kb in verbose mode	WITHOUT_CLASSIFICATION	0.9999646628993303	WITHOUT_CLASSIFICATION	3.533710066976959E-5	DEFECT
// get I/O streams for remote scp	WITHOUT_CLASSIFICATION	0.9999952098786259	WITHOUT_CLASSIFICATION	4.790121374166162E-6	DEFECT
// this indicates an error.	WITHOUT_CLASSIFICATION	0.9999960952976824	WITHOUT_CLASSIFICATION	3.904702317577081E-6	DEFECT
// appears that the next token is not used and it's zero.	WITHOUT_CLASSIFICATION	0.9738464521539125	WITHOUT_CLASSIFICATION	0.026153547846087432	DEFECT
// read a content of lfile	WITHOUT_CLASSIFICATION	0.9999999648238385	WITHOUT_CLASSIFICATION	3.517616159900869E-8	DEFECT
// Ignored	WITHOUT_CLASSIFICATION	0.9999998554897291	WITHOUT_CLASSIFICATION	1.4451027082260175E-7	DEFECT
// do nothing;	WITHOUT_CLASSIFICATION	0.9999984217323277	WITHOUT_CLASSIFICATION	1.5782676723789134E-6	DEFECT
// didn't receive any response	WITHOUT_CLASSIFICATION	0.9999113477044334	WITHOUT_CLASSIFICATION	8.865229556670209E-5	DEFECT
// execute the command	WITHOUT_CLASSIFICATION	0.9999967078292926	WITHOUT_CLASSIFICATION	3.2921707073486957E-6	DEFECT
// wait for it to finish	WITHOUT_CLASSIFICATION	0.9999998939837171	WITHOUT_CLASSIFICATION	1.0601628285791734E-7	DEFECT
// ran out of time	WITHOUT_CLASSIFICATION	0.9999998945797542	WITHOUT_CLASSIFICATION	1.0542024580957523E-7	DEFECT
// completed successfully	WITHOUT_CLASSIFICATION	0.9999991785448884	WITHOUT_CLASSIFICATION	8.214551116646583E-7	DEFECT
// user:password@host:/path notation	WITHOUT_CLASSIFICATION	0.999997976101739	WITHOUT_CLASSIFICATION	2.023898260901526E-6	DEFECT
// no password, will require passphrase	WITHOUT_CLASSIFICATION	0.9999982833394222	WITHOUT_CLASSIFICATION	1.7166605777748952E-6	DEFECT
// skip	WITHOUT_CLASSIFICATION	0.9999987665554341	WITHOUT_CLASSIFICATION	1.2334445658686523E-6	DEFECT
// send "C0644 filesize filename", where filename should not include '/'	WITHOUT_CLASSIFICATION	0.9999974953264371	WITHOUT_CLASSIFICATION	2.504673562940495E-6	DEFECT
// send a content of lfile	WITHOUT_CLASSIFICATION	0.9999999666022569	WITHOUT_CLASSIFICATION	3.33977431153336E-8	DEFECT
// C0644 filesize filename - header for a regular file // T time 0 time 0\n - present if perserve time. // D directory - this is the header for a directory.	WITHOUT_CLASSIFICATION	0.9999990981746691	WITHOUT_CLASSIFICATION	9.018253309938142E-7	DEFECT
// swallow if there was an error before so that // original error will be passed up	WITHOUT_CLASSIFICATION	0.9999998903817333	WITHOUT_CLASSIFICATION	1.096182667120131E-7	DEFECT
// since filesize keeps on decreasing we have to store the // initial filesize	WITHOUT_CLASSIFICATION	0.9999999971451572	WITHOUT_CLASSIFICATION	2.8548427396668694E-9	DEFECT
// b may be 0 for success, //          1 for error, //          2 for fatal error,	WITHOUT_CLASSIFICATION	0.9999997153285525	WITHOUT_CLASSIFICATION	2.8467144749746825E-7	DEFECT
// like <exec> // like <exec> // like <exec>	WITHOUT_CLASSIFICATION	0.9999767013941951	WITHOUT_CLASSIFICATION	2.329860580483781E-5	DEFECT
//log(message, Project.MSG_DEBUG);	WITHOUT_CLASSIFICATION	0.9999986300479058	WITHOUT_CLASSIFICATION	1.3699520942187078E-6	DEFECT
// we want this to have a false default, unlike for Checkin.	WITHOUT_CLASSIFICATION	0.9999996558752997	WITHOUT_CLASSIFICATION	3.4412470030969646E-7	DEFECT
// If the file doesn't pass the include/exclude tests, skip it.	WITHOUT_CLASSIFICATION	0.9999998590967647	WITHOUT_CLASSIFICATION	1.4090323527027604E-7	DEFECT
// We try to update the status once to give StarTeam // another chance.	WITHOUT_CLASSIFICATION	0.9999999978922076	WITHOUT_CLASSIFICATION	2.1077924181591987E-9	DEFECT
// once we find a folder that isn't in the repository, // we know we can add it.	WITHOUT_CLASSIFICATION	0.9999924732815755	WITHOUT_CLASSIFICATION	7.526718424553779E-6	DEFECT
// once we find a folder that isn't in the repository, // we know we can add it.	WITHOUT_CLASSIFICATION	0.9999924732815755	WITHOUT_CLASSIFICATION	7.526718424553779E-6	DEFECT
// if a label has been supplied, use it to configure the view // otherwise use current view	WITHOUT_CLASSIFICATION	0.9999999981065939	WITHOUT_CLASSIFICATION	1.8934060522308494E-9	DEFECT
// if a date has been supplied use a view configured to the date.	WITHOUT_CLASSIFICATION	0.9999999930777091	WITHOUT_CLASSIFICATION	6.9222908480987725E-9	DEFECT
// if a date has been supplied use a view configured to the date.	WITHOUT_CLASSIFICATION	0.9999999930777091	WITHOUT_CLASSIFICATION	6.9222908480987725E-9	DEFECT
// otherwise, use this view configured as the tip.	WITHOUT_CLASSIFICATION	0.9999999852271355	WITHOUT_CLASSIFICATION	1.4772864570923196E-8	DEFECT
// otherwise, use this view configured as the tip.	WITHOUT_CLASSIFICATION	0.9999999852271355	WITHOUT_CLASSIFICATION	1.4772864570923196E-8	DEFECT
// For all Files in this folder, we need to check // if there have been modifications.	WITHOUT_CLASSIFICATION	0.9999999082778525	WITHOUT_CLASSIFICATION	9.172214745552475E-8	DEFECT
// Now we recursively call this method on all sub folders in this // folder unless recursive attribute is off.	WITHOUT_CLASSIFICATION	0.9999993288346096	WITHOUT_CLASSIFICATION	6.711653903940925E-7	DEFECT
// handle the files so they appear first	WITHOUT_CLASSIFICATION	0.9999999706443767	WITHOUT_CLASSIFICATION	2.9355623165053727E-8	DEFECT
// now do it again for the directories so they appear last.	WITHOUT_CLASSIFICATION	0.9999997929671925	WITHOUT_CLASSIFICATION	2.0703280753482236E-7	DEFECT
// Create the new label and update the repository	WITHOUT_CLASSIFICATION	0.9999999837403153	WITHOUT_CLASSIFICATION	1.6259684657568313E-8	DEFECT
// write a Properties file in each directory:	WITHOUT_CLASSIFICATION	0.99999971214167	WITHOUT_CLASSIFICATION	2.8785833002746463E-7	DEFECT
// Create an instance of the rmic, redirecting output to // the project log	WITHOUT_CLASSIFICATION	0.9999998346656663	WITHOUT_CLASSIFICATION	1.6533433380319905E-7	DEFECT
// CheckStyle:MethodNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9999944617636295	WITHOUT_CLASSIFICATION	5.538236370528685E-6	DEFECT
// once we find a folder that isn't in the repository, // we know we can add it.	WITHOUT_CLASSIFICATION	0.9999924732815755	WITHOUT_CLASSIFICATION	7.526718424553779E-6	DEFECT
//ATTRIBUTES settable from ant.	WITHOUT_CLASSIFICATION	0.9999998674295464	WITHOUT_CLASSIFICATION	1.3257045371100338E-7	DEFECT
// if a label has been supplied and it is a view label, use it // to configure the view	WITHOUT_CLASSIFICATION	0.9999999948096225	WITHOUT_CLASSIFICATION	5.190377472153994E-9	DEFECT
// if a label has been supplied and it is a revision label, use the raw // the view as the snapshot	WITHOUT_CLASSIFICATION	0.9999999763989527	WITHOUT_CLASSIFICATION	2.3601047357264024E-8	DEFECT
// prune away any files not belonging to the revision label // this is one ugly API from Starteam SDK	WITHOUT_CLASSIFICATION	0.9992532379371648	WITHOUT_CLASSIFICATION	7.467620628351632E-4	DEFECT
// PR 31965 says that it can return null	WITHOUT_CLASSIFICATION	0.9999639668260846	WITHOUT_CLASSIFICATION	3.6033173915509E-5	DEFECT
// no root local mapping has been specified.	WITHOUT_CLASSIFICATION	0.9999998229369597	WITHOUT_CLASSIFICATION	1.77063040351116E-7	DEFECT
// Inspect everything in the root folder and then recursively	WITHOUT_CLASSIFICATION	0.9999881552815894	WITHOUT_CLASSIFICATION	1.1844718410763498E-5	DEFECT
// Tell user what he is doing	WITHOUT_CLASSIFICATION	0.9999991102601818	WITHOUT_CLASSIFICATION	8.897398181033957E-7	DEFECT
// set the local folder.	WITHOUT_CLASSIFICATION	0.999999965908115	WITHOUT_CLASSIFICATION	3.409188496128108E-8	DEFECT
// set the local folder.	WITHOUT_CLASSIFICATION	0.999999965908115	WITHOUT_CLASSIFICATION	3.409188496128108E-8	DEFECT
// ATTRIBUTES	WITHOUT_CLASSIFICATION	0.9999985887082411	WITHOUT_CLASSIFICATION	1.4112917588867682E-6	DEFECT
// create a hashtable to group them by parent directory:	WITHOUT_CLASSIFICATION	0.9999998058067135	WITHOUT_CLASSIFICATION	1.941932864750672E-7	DEFECT
// else lnk exists, do nothing	WITHOUT_CLASSIFICATION	0.9999994126369957	WITHOUT_CLASSIFICATION	5.873630044038865E-7	DEFECT
// get an Iterator of file objects representing links (canonical):	WITHOUT_CLASSIFICATION	0.9999999623366191	WITHOUT_CLASSIFICATION	3.766338098587049E-8	DEFECT
//iterate through the names, get the matching values	WITHOUT_CLASSIFICATION	0.9999993391688713	WITHOUT_CLASSIFICATION	6.608311287396988E-7	DEFECT
/////////////////////////////////////////////////////////////// // GET/SET methods. // Setters, of course are where ant user passes in values. ///////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999998965820125	WITHOUT_CLASSIFICATION	1.0341798753676862E-7	DEFECT
/////////////////////////////////////////////////////////////// // INCLUDE-EXCLUDE processing ///////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999999061813234	WITHOUT_CLASSIFICATION	9.381867654323486E-8	DEFECT
// find the starteam folder specified to be the root of the // operation.  Throw if it can't be found.	WITHOUT_CLASSIFICATION	0.9999999770368821	WITHOUT_CLASSIFICATION	2.2963117873130002E-8	DEFECT
// either use default path or root local mapping, // which is now embedded in the root folder	WITHOUT_CLASSIFICATION	0.9999999663627142	WITHOUT_CLASSIFICATION	3.36372859239869E-8	DEFECT
///////////////////////////////////////////////////////// // GET/SET methods. // Setters, of course are where ant user passes in values. /////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999998965820125	WITHOUT_CLASSIFICATION	1.0341798753676862E-7	DEFECT
// fill up a Properties object with link and resource names:	WITHOUT_CLASSIFICATION	0.99999936394183	WITHOUT_CLASSIFICATION	6.360581700180838E-7	DEFECT
// find the resource of the existing link:	WITHOUT_CLASSIFICATION	0.9999995455002337	WITHOUT_CLASSIFICATION	4.54499766347006E-7	DEFECT
// rename the resource, thus breaking the link:	WITHOUT_CLASSIFICATION	0.9999969033473225	WITHOUT_CLASSIFICATION	3.0966526775007948E-6	DEFECT
// delete the (now) broken link:	WITHOUT_CLASSIFICATION	0.9996798283393143	WITHOUT_CLASSIFICATION	3.2017166068576235E-4	DEFECT
// return the resource to its original name:	WITHOUT_CLASSIFICATION	0.9999992609467099	WITHOUT_CLASSIFICATION	7.390532901922817E-7	DEFECT
// loop through the supplied file sets:	WITHOUT_CLASSIFICATION	0.9999999446617991	WITHOUT_CLASSIFICATION	5.533820093323151E-8	DEFECT
// load included files as properties files:	WITHOUT_CLASSIFICATION	0.9999997873594763	WITHOUT_CLASSIFICATION	2.1264052371905375E-7	DEFECT
// -GL	WITHOUT_CLASSIFICATION	0.9999978695127648	WITHOUT_CLASSIFICATION	2.1304872352467256E-6	DEFECT
// -GL	WITHOUT_CLASSIFICATION	0.9999978695127648	WITHOUT_CLASSIFICATION	2.1304872352467256E-6	DEFECT
// -I- or -I-Y or -I-N	WITHOUT_CLASSIFICATION	0.9999986532212306	WITHOUT_CLASSIFICATION	1.3467787694339398E-6	DEFECT
// -I- or -I-Y or -I-N	WITHOUT_CLASSIFICATION	0.9999986532212306	WITHOUT_CLASSIFICATION	1.3467787694339398E-6	DEFECT
// -O-	WITHOUT_CLASSIFICATION	0.9999980920880829	WITHOUT_CLASSIFICATION	1.9079119170617156E-6	DEFECT
// -R	WITHOUT_CLASSIFICATION	0.9999975264086629	WITHOUT_CLASSIFICATION	2.473591337020478E-6	DEFECT
// -R	WITHOUT_CLASSIFICATION	0.9999975264086629	WITHOUT_CLASSIFICATION	2.473591337020478E-6	DEFECT
// -V	WITHOUT_CLASSIFICATION	0.999997446552284	WITHOUT_CLASSIFICATION	2.5534477161290894E-6	DEFECT
// -W	WITHOUT_CLASSIFICATION	0.9999974672028059	WITHOUT_CLASSIFICATION	2.532797194023787E-6	DEFECT
// -W	WITHOUT_CLASSIFICATION	0.9999974672028059	WITHOUT_CLASSIFICATION	2.532797194023787E-6	DEFECT
// -Y	WITHOUT_CLASSIFICATION	0.9999981159025798	WITHOUT_CLASSIFICATION	1.8840974202854667E-6	DEFECT
// -Y	WITHOUT_CLASSIFICATION	0.9999981159025798	WITHOUT_CLASSIFICATION	1.8840974202854667E-6	DEFECT
// -G	WITHOUT_CLASSIFICATION	0.9999983656284075	WITHOUT_CLASSIFICATION	1.6343715924537355E-6	DEFECT
// -GWS or -GWR	WITHOUT_CLASSIFICATION	0.9999988982564287	WITHOUT_CLASSIFICATION	1.101743571291876E-6	DEFECT
//set to empty str if no local path return	WITHOUT_CLASSIFICATION	0.9999999964468069	WITHOUT_CLASSIFICATION	3.553193030009437E-9	DEFECT
//make sure m_LocalDir exists, create it if it doesn't	WITHOUT_CLASSIFICATION	0.9999947771255993	WITHOUT_CLASSIFICATION	5.22287440068564E-6	DEFECT
// Use the OS launcher so we get environment variables	WITHOUT_CLASSIFICATION	0.999999981897644	WITHOUT_CLASSIFICATION	1.810235592623489E-8	DEFECT
// VSS items	WITHOUT_CLASSIFICATION	0.999999840981809	WITHOUT_CLASSIFICATION	1.5901819089429593E-7	DEFECT
// VSS items	WITHOUT_CLASSIFICATION	0.999999840981809	WITHOUT_CLASSIFICATION	1.5901819089429593E-7	DEFECT
// -C	WITHOUT_CLASSIFICATION	0.9999981113251577	WITHOUT_CLASSIFICATION	1.8886748423239467E-6	DEFECT
// -C	WITHOUT_CLASSIFICATION	0.9999981113251577	WITHOUT_CLASSIFICATION	1.8886748423239467E-6	DEFECT
// -L Specify the new label on the command line (instead of being prompted)	WITHOUT_CLASSIFICATION	0.9999981257507332	WITHOUT_CLASSIFICATION	1.8742492667475483E-6	DEFECT
// -V Label an existing file or project version	WITHOUT_CLASSIFICATION	0.9999999392899515	WITHOUT_CLASSIFICATION	6.071004857139978E-8	DEFECT
// first off, make sure that we've got a command and a vssdir ...	WITHOUT_CLASSIFICATION	0.9999870604030698	WITHOUT_CLASSIFICATION	1.293959693006431E-5	DEFECT
// pre Kaffe 1.1.5	WITHOUT_CLASSIFICATION	0.9999971750282984	WITHOUT_CLASSIFICATION	2.8249717014316135E-6	DEFECT
// -GL	WITHOUT_CLASSIFICATION	0.9999978695127648	WITHOUT_CLASSIFICATION	2.1304872352467256E-6	DEFECT
// Write the contents to our master list of links // This method assumes that all links are defined in // terms of absolute paths, or paths relative to the // working directory:	WITHOUT_CLASSIFICATION	0.9999998239656422	WITHOUT_CLASSIFICATION	1.7603435767555888E-7	DEFECT
// build the command line from what we got the format is // ss Get VSS items [-G] [-H] [-I-] [-N] [-O] [-R] [-V] [-W] [-Y] [-?] // as specified in the SS.EXE help	WITHOUT_CLASSIFICATION	0.9999999845182771	WITHOUT_CLASSIFICATION	1.5481722872982096E-8	DEFECT
// -I- or -I-Y or -I-N	WITHOUT_CLASSIFICATION	0.9999986532212306	WITHOUT_CLASSIFICATION	1.3467787694339398E-6	DEFECT
// -I- or -I-Y or -I-N	WITHOUT_CLASSIFICATION	0.9999986532212306	WITHOUT_CLASSIFICATION	1.3467787694339398E-6	DEFECT
// -O-	WITHOUT_CLASSIFICATION	0.9999980920880829	WITHOUT_CLASSIFICATION	1.9079119170617156E-6	DEFECT
// -R	WITHOUT_CLASSIFICATION	0.9999975264086629	WITHOUT_CLASSIFICATION	2.473591337020478E-6	DEFECT
// -R	WITHOUT_CLASSIFICATION	0.9999975264086629	WITHOUT_CLASSIFICATION	2.473591337020478E-6	DEFECT
// -R	WITHOUT_CLASSIFICATION	0.9999975264086629	WITHOUT_CLASSIFICATION	2.473591337020478E-6	DEFECT
// -V	WITHOUT_CLASSIFICATION	0.999997446552284	WITHOUT_CLASSIFICATION	2.5534477161290894E-6	DEFECT
// -W	WITHOUT_CLASSIFICATION	0.9999974672028059	WITHOUT_CLASSIFICATION	2.532797194023787E-6	DEFECT
// -Y	WITHOUT_CLASSIFICATION	0.9999981159025798	WITHOUT_CLASSIFICATION	1.8840974202854667E-6	DEFECT
// -Y	WITHOUT_CLASSIFICATION	0.9999981159025798	WITHOUT_CLASSIFICATION	1.8840974202854667E-6	DEFECT
// -Y	WITHOUT_CLASSIFICATION	0.9999981159025798	WITHOUT_CLASSIFICATION	1.8840974202854667E-6	DEFECT
// -G	WITHOUT_CLASSIFICATION	0.9999983656284075	WITHOUT_CLASSIFICATION	1.6343715924537355E-6	DEFECT
// -GWS or -GWR	WITHOUT_CLASSIFICATION	0.9999988982564287	WITHOUT_CLASSIFICATION	1.101743571291876E-6	DEFECT
// VSS items	WITHOUT_CLASSIFICATION	0.999999840981809	WITHOUT_CLASSIFICATION	1.5901819089429593E-7	DEFECT
// Use getShortLabel() so labels longer then 30 char are truncated // and the user is warned	WITHOUT_CLASSIFICATION	0.9999999946005937	WITHOUT_CLASSIFICATION	5.399406263062548E-9	DEFECT
// ss.exe exits with '100', when files have been skipped // so we have to ignore the failure	WITHOUT_CLASSIFICATION	0.9999999462868145	WITHOUT_CLASSIFICATION	5.371318538502099E-8	DEFECT
// If location of ss.ini is specified we need to set the // environment-variable SSDIR to this value	WITHOUT_CLASSIFICATION	0.9999999583938437	WITHOUT_CLASSIFICATION	4.160615629801152E-8	DEFECT
// build the command line from what we got the format is // ss Label VSS items [-C] [-H] [-I-] [-Llabel] [-N] [-O] [-V] [-Y] [-?] // as specified in the SS.EXE help	WITHOUT_CLASSIFICATION	0.9999999637855733	WITHOUT_CLASSIFICATION	3.62144267635681E-8	DEFECT
// VSS items	WITHOUT_CLASSIFICATION	0.999999840981809	WITHOUT_CLASSIFICATION	1.5901819089429593E-7	DEFECT
// -C	WITHOUT_CLASSIFICATION	0.9999981113251577	WITHOUT_CLASSIFICATION	1.8886748423239467E-6	DEFECT
// -C	WITHOUT_CLASSIFICATION	0.9999981113251577	WITHOUT_CLASSIFICATION	1.8886748423239467E-6	DEFECT
// first off, make sure that we've got a command and a vssdir ...	WITHOUT_CLASSIFICATION	0.9999870604030698	WITHOUT_CLASSIFICATION	1.293959693006431E-5	DEFECT
// first off, make sure that we've got a command and a vssdir ...	WITHOUT_CLASSIFICATION	0.9999870604030698	WITHOUT_CLASSIFICATION	1.293959693006431E-5	DEFECT
// build the command line from what we got the format is // ss Checkin VSS items [-H] [-C] [-I-] [-N] [-O] [-R] [-W] [-Y] [-?] // as specified in the SS.EXE help	WITHOUT_CLASSIFICATION	0.9999998794109041	WITHOUT_CLASSIFICATION	1.2058909595796302E-7	DEFECT
// -VL	WITHOUT_CLASSIFICATION	0.9999966430136945	WITHOUT_CLASSIFICATION	3.356986305484721E-6	DEFECT
// -B / -D / -F-	WITHOUT_CLASSIFICATION	0.9999953951211261	WITHOUT_CLASSIFICATION	4.6048788739518334E-6	DEFECT
// -O	WITHOUT_CLASSIFICATION	0.9999983637404014	WITHOUT_CLASSIFICATION	1.6362595986176273E-6	DEFECT
// first off, make sure that we've got a command and a localPath ...	WITHOUT_CLASSIFICATION	0.99998924904288	WITHOUT_CLASSIFICATION	1.0750957119938481E-5	DEFECT
// -G-	WITHOUT_CLASSIFICATION	0.9999984735127794	WITHOUT_CLASSIFICATION	1.5264872206338349E-6	DEFECT
// first off, make sure that we've got a command and a vssdir...	WITHOUT_CLASSIFICATION	0.9999889734557998	WITHOUT_CLASSIFICATION	1.1026544200154284E-5	DEFECT
// build the command line from what we got // the format is: // ss Create VSS items [-C] [-H] [-I-] [-N] [-O] [-S] [-Y] [-?] // as specified in the SS.EXE help	WITHOUT_CLASSIFICATION	0.999998586704125	WITHOUT_CLASSIFICATION	1.4132958749588542E-6	DEFECT
// pre Kaffe 1.1.2	WITHOUT_CLASSIFICATION	0.9999980432542891	WITHOUT_CLASSIFICATION	1.9567457107982784E-6	DEFECT
// only supported since Kaffe 1.1.2	WITHOUT_CLASSIFICATION	0.9999801140738597	WITHOUT_CLASSIFICATION	1.9885926140331895E-5	DEFECT
//handle the many different stub options.	WITHOUT_CLASSIFICATION	0.999999889057873	WITHOUT_CLASSIFICATION	1.1094212709100952E-7	DEFECT
//default is compatibility	WITHOUT_CLASSIFICATION	0.999999383458744	WITHOUT_CLASSIFICATION	6.165412560406376E-7	DEFECT
//anything else	WITHOUT_CLASSIFICATION	0.9999980265581035	WITHOUT_CLASSIFICATION	1.973441896340551E-6	DEFECT
//do nothing with the value? or go -v+stubVersion??	WITHOUT_CLASSIFICATION	0.9999994664302068	WITHOUT_CLASSIFICATION	5.335697932735492E-7	DEFECT
//set the non-null stubOption	WITHOUT_CLASSIFICATION	0.9999996473957824	WITHOUT_CLASSIFICATION	3.5260421757161496E-7	DEFECT
// we know that name.endsWith(".class")	WITHOUT_CLASSIFICATION	0.9999991934890139	WITHOUT_CLASSIFICATION	8.065109861373898E-7	DEFECT
// Combine the build classpath with the system classpath, in an // order determined by the value of build.sysclasspath	WITHOUT_CLASSIFICATION	0.9999994382023276	WITHOUT_CLASSIFICATION	5.617976724697879E-7	DEFECT
// swallow	WITHOUT_CLASSIFICATION	0.9999986586519586	WITHOUT_CLASSIFICATION	1.3413480415120332E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999229243365	WITHOUT_CLASSIFICATION	7.707566353111588E-8	DEFECT
// build the command line from what we got the format is // ss CP VSS items [-H] [-I-] [-Y] [-?] // as specified in the SS.EXE help	WITHOUT_CLASSIFICATION	0.9999998725647626	WITHOUT_CLASSIFICATION	1.2743523737532823E-7	DEFECT
//for java1.5+, we generate compatible stubs, that is, unless //the caller asked for IDL or IIOP support.	WITHOUT_CLASSIFICATION	0.9999909742758009	WITHOUT_CLASSIFICATION	9.02572419921292E-6	DEFECT
// JRMP with simple naming convention	WITHOUT_CLASSIFICATION	0.9999873482270668	WITHOUT_CLASSIFICATION	1.2651772933239068E-5	DEFECT
/*                 * I know, this is not necessary, but I prefer it explicit (SB)                 */	WITHOUT_CLASSIFICATION	0.9999441218337635	WITHOUT_CLASSIFICATION	5.587816623657175E-5	DEFECT
// no package	WITHOUT_CLASSIFICATION	0.9999999114250936	WITHOUT_CLASSIFICATION	8.857490632237232E-8	DEFECT
// no package	WITHOUT_CLASSIFICATION	0.9999999114250936	WITHOUT_CLASSIFICATION	8.857490632237232E-8	DEFECT
// only stub, no tie	WITHOUT_CLASSIFICATION	0.9999998413169843	WITHOUT_CLASSIFICATION	1.586830157472459E-7	DEFECT
/*                         * stub is derived from implementation,                         * tie from interface name.                         */	WITHOUT_CLASSIFICATION	0.9999946124540183	WITHOUT_CLASSIFICATION	5.387545981661737E-6	DEFECT
//rely on RMIC being on the path	WITHOUT_CLASSIFICATION	0.9994993987720687	WITHOUT_CLASSIFICATION	5.006012279312358E-4	DEFECT
//set up the args	WITHOUT_CLASSIFICATION	0.9999999809789998	WITHOUT_CLASSIFICATION	1.902100024454589E-8	DEFECT
// Create an instance of the rmic	WITHOUT_CLASSIFICATION	0.9999999452230981	WITHOUT_CLASSIFICATION	5.477690195873856E-8	DEFECT
//convert to lower case in the English locale,	WITHOUT_CLASSIFICATION	0.9999999313808186	WITHOUT_CLASSIFICATION	6.86191813988662E-8	DEFECT
//handle default specially by choosing the sun or kaffe compiler	WITHOUT_CLASSIFICATION	0.9999998450351357	WITHOUT_CLASSIFICATION	1.549648642778755E-7	DEFECT
//no match? ask for the non-lower-cased type	WITHOUT_CLASSIFICATION	0.9999999921304344	WITHOUT_CLASSIFICATION	7.8695654694537E-9	DEFECT
//do the system assertions	WITHOUT_CLASSIFICATION	0.9999993978978238	WITHOUT_CLASSIFICATION	6.021021762264363E-7	DEFECT
//do the system assertions	WITHOUT_CLASSIFICATION	0.9999993978978238	WITHOUT_CLASSIFICATION	6.021021762264363E-7	DEFECT
//do the system assertions	WITHOUT_CLASSIFICATION	0.9999993978978238	WITHOUT_CLASSIFICATION	6.021021762264363E-7	DEFECT
//now any inner assertions	WITHOUT_CLASSIFICATION	0.999999255919595	WITHOUT_CLASSIFICATION	7.44080404931675E-7	DEFECT
//now any inner assertions	WITHOUT_CLASSIFICATION	0.999999255919595	WITHOUT_CLASSIFICATION	7.44080404931675E-7	DEFECT
//now any inner assertions	WITHOUT_CLASSIFICATION	0.999999255919595	WITHOUT_CLASSIFICATION	7.44080404931675E-7	DEFECT
//catch invalidness	WITHOUT_CLASSIFICATION	0.9999999520075102	WITHOUT_CLASSIFICATION	4.799248985286794E-8	DEFECT
//see if it is a package or a class	WITHOUT_CLASSIFICATION	0.9999940958011208	WITHOUT_CLASSIFICATION	5.904198879174218E-6	DEFECT
//packages get a ... prefix	WITHOUT_CLASSIFICATION	0.9999830066408475	WITHOUT_CLASSIFICATION	1.6993359152463515E-5	DEFECT
//append the ... suffix if not there already	WITHOUT_CLASSIFICATION	0.9931307910881015	WITHOUT_CLASSIFICATION	0.0068692089118983736	DEFECT
//classes just get the classname	WITHOUT_CLASSIFICATION	0.9999998351093707	WITHOUT_CLASSIFICATION	1.6489062922320906E-7	DEFECT
//-- Fields ----------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999922838187081	WITHOUT_CLASSIFICATION	7.716181291943407E-6	DEFECT
//-- Methods ---------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999919816129118	WITHOUT_CLASSIFICATION	8.018387088086255E-6	DEFECT
// Add all nested elements to our catalog	WITHOUT_CLASSIFICATION	0.9999999261921524	WITHOUT_CLASSIFICATION	7.38078475636804E-8	DEFECT
// Ignore exception	WITHOUT_CLASSIFICATION	0.9999993862274741	WITHOUT_CLASSIFICATION	6.137725258166672E-7	DEFECT
// New behavior for delayed task creation. Description // will be evaluated in Project.getDescription()	WITHOUT_CLASSIFICATION	0.9999977306057175	WITHOUT_CLASSIFICATION	2.269394282490513E-6	DEFECT
// Append the classpath of the nested catalog	WITHOUT_CLASSIFICATION	0.9999429265496246	WITHOUT_CLASSIFICATION	5.7073450375487786E-5	DEFECT
// Append the catalog path of the nested catalog	WITHOUT_CLASSIFICATION	0.9999528504554178	WITHOUT_CLASSIFICATION	4.714954458223827E-5	DEFECT
// At this point we are probably in failure mode, but // try to use the bare URI as a last gasp	WITHOUT_CLASSIFICATION	0.9999855017360846	WITHOUT_CLASSIFICATION	1.449826391537485E-5	DEFECT
// The Apache resolver is present - Need to check if it can // be seen by the catalog resolver class. Start by getting // the actual loader	WITHOUT_CLASSIFICATION	0.9999999800533076	WITHOUT_CLASSIFICATION	1.9946692309261613E-8	DEFECT
// load the base class through this loader.	WITHOUT_CLASSIFICATION	0.9999959206908631	WITHOUT_CLASSIFICATION	4.07930913687865E-6	DEFECT
// and find its actual loader	WITHOUT_CLASSIFICATION	0.9999996249073946	WITHOUT_CLASSIFICATION	3.7509260539678415E-7	DEFECT
// // Success!  The xml-commons resolver library is // available, so use it. //	WITHOUT_CLASSIFICATION	0.9999997302585122	WITHOUT_CLASSIFICATION	2.697414878512626E-7	DEFECT
// // The xml-commons resolver library is not // available, so we can't use it. //	WITHOUT_CLASSIFICATION	0.9999982579521791	WITHOUT_CLASSIFICATION	1.7420478209871303E-6	DEFECT
// the following line seems to be necessary on Windows under JDK 1.2	WITHOUT_CLASSIFICATION	0.9875497007135751	WITHOUT_CLASSIFICATION	0.012450299286424951	DEFECT
// // The ResourceLocation may specify a relative path for its // location attribute.  This is resolved using the appropriate // base. //	WITHOUT_CLASSIFICATION	0.9999992707350182	WITHOUT_CLASSIFICATION	7.292649818640577E-7	DEFECT
// // for classpath lookup we ignore the base directory //	WITHOUT_CLASSIFICATION	0.9999999962931758	WITHOUT_CLASSIFICATION	3.706824140551914E-9	DEFECT
// // The ResourceLocation may specify a relative url for its // location attribute.  This is resolved using the appropriate // base. //	WITHOUT_CLASSIFICATION	0.9999998030842326	WITHOUT_CLASSIFICATION	1.9691576722418454E-7	DEFECT
// // We didn't match a ResourceLocation, but since we // only support PUBLIC and URI entry types internally, // it is still possible that there is another entry in // an external catalog that will match.  We call // Apache resolver's resolveEntity method to cover // this possibility. //	WITHOUT_CLASSIFICATION	0.9814255881042594	WITHOUT_CLASSIFICATION	0.01857441189574061	DEFECT
// // Use the passed in base in preference to the base // from matchingEntry, which is either null or the // directory in which the external catalog file from // which it was obtained is located.  We make a copy // so matchingEntry's original base is untouched.  Of // course, if there is no base, no need to make a // copy... // // This is the standard behavior as per my reading of // the JAXP and XML Catalog specs.  CKS 11/7/2002 //	WITHOUT_CLASSIFICATION	0.9999999997564096	WITHOUT_CLASSIFICATION	2.4359036403413817E-10	DEFECT
// Parse each catalog listed in nested <catalogpath> elements	WITHOUT_CLASSIFICATION	0.9999999849201102	WITHOUT_CLASSIFICATION	1.5079889857519325E-8	DEFECT
//-- XMLCatalog	WITHOUT_CLASSIFICATION	0.9999546471954828	WITHOUT_CLASSIFICATION	4.5352804517187125E-5	DEFECT
/* Methods below all add specific selectors */	WITHOUT_CLASSIFICATION	0.999999983890025	WITHOUT_CLASSIFICATION	1.610997499650575E-8	DEFECT
// No includes supplied, so set it to 'matches all'	WITHOUT_CLASSIFICATION	0.9999999998296	WITHOUT_CLASSIFICATION	1.7039998899637184E-10	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999229243365	WITHOUT_CLASSIFICATION	7.707566353111588E-8	DEFECT
/* package-private for now */	WITHOUT_CLASSIFICATION	0.9999978694949011	WITHOUT_CLASSIFICATION	2.1305050988393112E-6	DEFECT
/* package-private for now */	WITHOUT_CLASSIFICATION	0.9999978694949011	WITHOUT_CLASSIFICATION	2.1305050988393112E-6	DEFECT
// special case in ZIPs, we do not want this thing included	WITHOUT_CLASSIFICATION	0.999978414910798	WITHOUT_CLASSIFICATION	2.1585089201982437E-5	DEFECT
// first check if the archive needs to be scanned again	WITHOUT_CLASSIFICATION	0.9999999939077641	WITHOUT_CLASSIFICATION	6.092235917740353E-9	DEFECT
//do not use a FileResource b/c it pulls File info from the filesystem:	WITHOUT_CLASSIFICATION	0.999999511796126	WITHOUT_CLASSIFICATION	4.882038739870145E-7	DEFECT
// spare scanning again and again	WITHOUT_CLASSIFICATION	0.999999933071807	WITHOUT_CLASSIFICATION	6.692819295997588E-8	DEFECT
/* cached DirectoryScanner instance for our own Project only */	WITHOUT_CLASSIFICATION	0.9999973166799585	WITHOUT_CLASSIFICATION	2.6833200415249355E-6	DEFECT
// SelectorContainer methods	WITHOUT_CLASSIFICATION	0.9999999934839611	WITHOUT_CLASSIFICATION	6.516038914415698E-9	DEFECT
// WIN9x uses a bat file for executing commands	WITHOUT_CLASSIFICATION	0.9999006292056765	WITHOUT_CLASSIFICATION	9.937079432349553E-5	DEFECT
// empty path return empty string	WITHOUT_CLASSIFICATION	0.9999999655226298	WITHOUT_CLASSIFICATION	3.4477370218548824E-8	DEFECT
//no command? no string	WITHOUT_CLASSIFICATION	0.9999990944921686	WITHOUT_CLASSIFICATION	9.055078314444507E-7	DEFECT
// parse with a simple finite state machine	WITHOUT_CLASSIFICATION	0.9999980598515911	WITHOUT_CLASSIFICATION	1.940148409005338E-6	DEFECT
//inherit doc	WITHOUT_CLASSIFICATION	0.9999941425622871	WITHOUT_CLASSIFICATION	5.857437712840578E-6	DEFECT
//can't have zero-length token	WITHOUT_CLASSIFICATION	0.999475469284052	WITHOUT_CLASSIFICATION	5.245307159480654E-4	DEFECT
// we have another token, let's parse it.	WITHOUT_CLASSIFICATION	0.999928903053244	WITHOUT_CLASSIFICATION	7.1096946755976E-5	DEFECT
// should always be the case...	WITHOUT_CLASSIFICATION	0.9999133647541798	WITHOUT_CLASSIFICATION	8.663524582020394E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999997594604898	WITHOUT_CLASSIFICATION	2.4053951019376697E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999997594604898	WITHOUT_CLASSIFICATION	2.4053951019376697E-7	DEFECT
// swallow	WITHOUT_CLASSIFICATION	0.9999986586519586	WITHOUT_CLASSIFICATION	1.3413480415120332E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999229243365	WITHOUT_CLASSIFICATION	7.707566353111588E-8	DEFECT
/**     * Invoked by IntrospectionHelper for <code>setXXX(Path p)</code>     * attribute setters.     * @param p the <code>Project</code> for this path.     * @param path the <code>String</code> path definition.     */	WITHOUT_CLASSIFICATION	0.9999993875161093	WITHOUT_CLASSIFICATION	6.124838908342602E-7	DEFECT
// ignore: don't trust anyone	WITHOUT_CLASSIFICATION	0.9999945004281894	WITHOUT_CLASSIFICATION	5.499571810604776E-6	DEFECT
// last: don't trust the developer	WITHOUT_CLASSIFICATION	0.9999987323043609	WITHOUT_CLASSIFICATION	1.2676956391470292E-6	DEFECT
// newer versions of Kaffe (1.1.1+) won't have this, // but this will be sorted by FileSet anyway.	WITHOUT_CLASSIFICATION	0.9906285200772702	WITHOUT_CLASSIFICATION	0.009371479922729742	DEFECT
// JDK 1.2+ seems to set java.home to the JRE directory.	WITHOUT_CLASSIFICATION	0.9999988652614835	WITHOUT_CLASSIFICATION	1.134738516475502E-6	DEFECT
// Just keep the old version as well and let addExisting // sort it out.	WITHOUT_CLASSIFICATION	0.9999999996158833	WITHOUT_CLASSIFICATION	3.841167464898014E-10	DEFECT
// Sun's and Apple's 1.4 have JCE and JSSE in separate jars.	WITHOUT_CLASSIFICATION	0.9999885957657675	WITHOUT_CLASSIFICATION	1.1404234232551223E-5	DEFECT
// IBM's 1.4 has rt.jar split into 4 smaller jars and a combined // JCE/JSSE in security.jar.	WITHOUT_CLASSIFICATION	0.9999809085088784	WITHOUT_CLASSIFICATION	1.9091491121565583E-5	DEFECT
// Added for MacOS X	WITHOUT_CLASSIFICATION	0.9999981586168462	WITHOUT_CLASSIFICATION	1.8413831538317714E-6	DEFECT
//remove any null elements	WITHOUT_CLASSIFICATION	0.9999945151856987	WITHOUT_CLASSIFICATION	5.484814301310141E-6	DEFECT
//create the list	WITHOUT_CLASSIFICATION	0.9999999801285429	WITHOUT_CLASSIFICATION	1.987145716412684E-8	DEFECT
//fill it	WITHOUT_CLASSIFICATION	0.9999771454562852	WITHOUT_CLASSIFICATION	2.285454371467249E-5	DEFECT
//convert to an array	WITHOUT_CLASSIFICATION	0.9999989442585107	WITHOUT_CLASSIFICATION	1.0557414893647425E-6	DEFECT
// properties are part of the vm options...	WITHOUT_CLASSIFICATION	0.9999995111313162	WITHOUT_CLASSIFICATION	4.888686837622634E-7	DEFECT
//boot classpath	WITHOUT_CLASSIFICATION	0.9999995364376086	WITHOUT_CLASSIFICATION	4.6356239131259194E-7	DEFECT
//main classpath	WITHOUT_CLASSIFICATION	0.9999989863743749	WITHOUT_CLASSIFICATION	1.0136256250501785E-6	DEFECT
//now any assertions are added	WITHOUT_CLASSIFICATION	0.9999975278633545	WITHOUT_CLASSIFICATION	2.4721366455666607E-6	DEFECT
// this is the classname to run as well as its arguments. // in case of 'executeJar', the executable is a jar file.	WITHOUT_CLASSIFICATION	0.9999999989997331	WITHOUT_CLASSIFICATION	1.0002668385230294E-9	DEFECT
// cloned system properties	WITHOUT_CLASSIFICATION	0.9999994984526225	WITHOUT_CLASSIFICATION	5.015473774011003E-7	DEFECT
// classpath is "-classpath <classpath>" -> 2 args	WITHOUT_CLASSIFICATION	0.9999997930618149	WITHOUT_CLASSIFICATION	2.0693818508903505E-7	DEFECT
// bootclasspath is "-Xbootclasspath:<classpath>" -> 1 arg	WITHOUT_CLASSIFICATION	0.9999998359973761	WITHOUT_CLASSIFICATION	1.6400262399790743E-7	DEFECT
// jar execution requires an additional -jar option	WITHOUT_CLASSIFICATION	0.999975556316981	WITHOUT_CLASSIFICATION	2.4443683019045564E-5	DEFECT
/*<? extends EnumeratedAttribute>*/	WITHOUT_CLASSIFICATION	0.9999993498185425	WITHOUT_CLASSIFICATION	6.501814574655801E-7	DEFECT
//end nested class	WITHOUT_CLASSIFICATION	0.9999973377618674	WITHOUT_CLASSIFICATION	2.662238132566177E-6	DEFECT
// Add this PropertySet's nested PropertySets' property names.	WITHOUT_CLASSIFICATION	0.9999993998938945	WITHOUT_CLASSIFICATION	6.001061054493858E-7	DEFECT
//make a copy...	WITHOUT_CLASSIFICATION	0.999644350388132	WITHOUT_CLASSIFICATION	3.556496118680478E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999229243365	WITHOUT_CLASSIFICATION	7.707566353111588E-8	DEFECT
// Gotta atleast put in the proper spelling :-P	WITHOUT_CLASSIFICATION	0.9999656253911594	WITHOUT_CLASSIFICATION	3.43746088405703E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999229243365	WITHOUT_CLASSIFICATION	7.707566353111588E-8	DEFECT
// If this TransformOperation has DrawOperation children // then Rotate the first child and return.	WITHOUT_CLASSIFICATION	0.9999999862911558	WITHOUT_CLASSIFICATION	1.370884416011565E-8	DEFECT
// If this TransformOperation has DrawOperation children // then Rotate the first child and return.	WITHOUT_CLASSIFICATION	0.9999999862911558	WITHOUT_CLASSIFICATION	1.370884416011565E-8	DEFECT
// CheckStyle:MemberNameCheck ON	WITHOUT_CLASSIFICATION	0.9999991931057962	WITHOUT_CLASSIFICATION	8.068942037338613E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc // CheckStyle:MemberNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9999999199131375	WITHOUT_CLASSIFICATION	8.008686249783988E-8	DEFECT
// change this to get the objects from the other reference	WITHOUT_CLASSIFICATION	0.9999999743360156	WITHOUT_CLASSIFICATION	2.566398441230273E-8	DEFECT
// change this to get the objects from the other reference	WITHOUT_CLASSIFICATION	0.9999999743360156	WITHOUT_CLASSIFICATION	2.566398441230273E-8	DEFECT
//-- Fields ----------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999922838187081	WITHOUT_CLASSIFICATION	7.716181291943407E-6	DEFECT
//-- Methods ---------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999919816129118	WITHOUT_CLASSIFICATION	8.018387088086255E-6	DEFECT
// CheckStyle:VisibilityModifier OFF	WITHOUT_CLASSIFICATION	0.9999998444157886	WITHOUT_CLASSIFICATION	1.5558421138690334E-7	DEFECT
// may be null if a system property has been added // after the project instance has been initialized	WITHOUT_CLASSIFICATION	0.99993549591949	WITHOUT_CLASSIFICATION	6.450408051000747E-5	DEFECT
// Add this PropertySet's property names.	WITHOUT_CLASSIFICATION	0.9999977162758984	WITHOUT_CLASSIFICATION	2.2837241016457173E-6	DEFECT
//map the names	WITHOUT_CLASSIFICATION	0.9999994554453211	WITHOUT_CLASSIFICATION	5.445546789745643E-7	DEFECT
// Create one NameEntry in the appropriate pattern list for each // line in the file.	WITHOUT_CLASSIFICATION	0.9999999863832758	WITHOUT_CLASSIFICATION	1.3616724204626234E-8	DEFECT
// Get a FileReader	WITHOUT_CLASSIFICATION	0.9999999025549859	WITHOUT_CLASSIFICATION	9.744501404250588E-8	DEFECT
//Ignore exception	WITHOUT_CLASSIFICATION	0.9999973669429214	WITHOUT_CLASSIFICATION	2.6330570784916524E-6	DEFECT
//-- ResourceLocation	WITHOUT_CLASSIFICATION	0.9999995542659511	WITHOUT_CLASSIFICATION	4.4573404884530307E-7	DEFECT
// Add base set of permissions	WITHOUT_CLASSIFICATION	0.9999999353963706	WITHOUT_CLASSIFICATION	6.460362947030254E-8	DEFECT
/*                     if the permission was not explicitly granted or revoked                     the original security manager will do its work                    */	WITHOUT_CLASSIFICATION	0.9997069129445691	WITHOUT_CLASSIFICATION	2.9308705543083227E-4	DEFECT
// None of the actions revoked, so all allowed.	WITHOUT_CLASSIFICATION	0.9999999834573728	WITHOUT_CLASSIFICATION	1.6542627169520034E-8	DEFECT
//default true:	WITHOUT_CLASSIFICATION	0.9999974819429043	WITHOUT_CLASSIFICATION	2.5180570957590465E-6	DEFECT
//default false:	WITHOUT_CLASSIFICATION	0.9999996367348446	WITHOUT_CLASSIFICATION	3.632651554829895E-7	DEFECT
//default false:	WITHOUT_CLASSIFICATION	0.9999996367348446	WITHOUT_CLASSIFICATION	3.632651554829895E-7	DEFECT
// The regular expression factory	WITHOUT_CLASSIFICATION	0.9999910796592413	WITHOUT_CLASSIFICATION	8.920340758681186E-6	DEFECT
// temporary variable	WITHOUT_CLASSIFICATION	0.9999999411896727	WITHOUT_CLASSIFICATION	5.8810327354132124E-8	DEFECT
// This is included	WITHOUT_CLASSIFICATION	0.9999988563765388	WITHOUT_CLASSIFICATION	1.1436234611217811E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999229243365	WITHOUT_CLASSIFICATION	7.707566353111588E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999229243365	WITHOUT_CLASSIFICATION	7.707566353111588E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999229243365	WITHOUT_CLASSIFICATION	7.707566353111588E-8	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9999976685470136	WITHOUT_CLASSIFICATION	2.331452986425402E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999229243365	WITHOUT_CLASSIFICATION	7.707566353111588E-8	DEFECT
//- ApacheCatalog	WITHOUT_CLASSIFICATION	0.9999946370294897	WITHOUT_CLASSIFICATION	5.362970510363655E-6	DEFECT
// // If you don't do this, you get all sorts of annoying // warnings about a missing properties file.  However, it // seems to work just fine with default values.  Ultimately, // we should probably include a "CatalogManager.properties" // file in the ant jarfile with some default property // settings.  See CatalogManager.java for more details. //	WITHOUT_CLASSIFICATION	0.999999962008992	WITHOUT_CLASSIFICATION	3.7991008118690666E-8	DEFECT
// // Make sure CatalogResolver instantiates ApacheCatalog, // rather than a plain Catalog //	WITHOUT_CLASSIFICATION	0.9999999717964917	WITHOUT_CLASSIFICATION	2.8203508259262042E-8	DEFECT
// debug // CatalogManager.getStaticManager().setVerbosity(4);	WITHOUT_CLASSIFICATION	0.9999973775174565	WITHOUT_CLASSIFICATION	2.622482543370139E-6	DEFECT
// Pass in reference to ourselves so we can be called back.	WITHOUT_CLASSIFICATION	0.9999993852605781	WITHOUT_CLASSIFICATION	6.147394219090295E-7	DEFECT
//-- ApacheCatalogResolver	WITHOUT_CLASSIFICATION	0.9999997494048982	WITHOUT_CLASSIFICATION	2.505951018270509E-7	DEFECT
//sorted bag impl. borrowed from commons-collections TreeBag:	WITHOUT_CLASSIFICATION	0.9999713027411654	WITHOUT_CLASSIFICATION	2.8697258834639357E-5	DEFECT
/* now check each Resource in case the child only           lets through files from any children IT may have: */	WITHOUT_CLASSIFICATION	0.9998524448611762	WITHOUT_CLASSIFICATION	1.4755513882383373E-4	DEFECT
//?	WITHOUT_CLASSIFICATION	0.9999696775885685	WITHOUT_CLASSIFICATION	3.0322411431518333E-5	DEFECT
//not using the accessor in this case to avoid side effects	WITHOUT_CLASSIFICATION	0.9943293853363128	WITHOUT_CLASSIFICATION	0.005670614663687307	DEFECT
/*package-private*/	WITHOUT_CLASSIFICATION	0.9999854913975338	WITHOUT_CLASSIFICATION	1.4508602466151608E-5	DEFECT
//new oata.util.ReaderInputStream(new InputStreamReader(	WITHOUT_CLASSIFICATION	0.9999883774377947	WITHOUT_CLASSIFICATION	1.1622562205250773E-5	DEFECT
//, encoding), encoding);	WITHOUT_CLASSIFICATION	0.9999887436358774	WITHOUT_CLASSIFICATION	1.1256364122634724E-5	DEFECT
//first the easy way, if all children are filesystem-only, return true:	WITHOUT_CLASSIFICATION	0.9999998544334527	WITHOUT_CLASSIFICATION	1.4556654727406902E-7	DEFECT
//preserve order-encountered using a list; enforce set logic manually:	WITHOUT_CLASSIFICATION	0.9999998112556235	WITHOUT_CLASSIFICATION	1.887443764940793E-7	DEFECT
/* cached DirectoryScanner instance */	WITHOUT_CLASSIFICATION	0.9999990440051376	WITHOUT_CLASSIFICATION	9.559948623885307E-7	DEFECT
//if no nested, natural order:	WITHOUT_CLASSIFICATION	0.9999999982174399	WITHOUT_CLASSIFICATION	1.7825601270168075E-9	DEFECT
//dummy	WITHOUT_CLASSIFICATION	0.9999726237320699	WITHOUT_CLASSIFICATION	2.7376267930114605E-5	DEFECT
//implement ResourceSelector; inherit doc	WITHOUT_CLASSIFICATION	0.9999995209023912	WITHOUT_CLASSIFICATION	4.790976088383965E-7	DEFECT
// First, check that all elements are correctly configured	WITHOUT_CLASSIFICATION	0.999996100160805	WITHOUT_CLASSIFICATION	3.899839194960274E-6	DEFECT
//if either of them is missing, they are different	WITHOUT_CLASSIFICATION	0.9999915760460731	WITHOUT_CLASSIFICATION	8.423953926820482E-6	DEFECT
// different size =>different files	WITHOUT_CLASSIFICATION	0.9999970140485533	WITHOUT_CLASSIFICATION	2.985951446526011E-6	DEFECT
//same date if dest timestamp is within granularity of the srcfile	WITHOUT_CLASSIFICATION	0.999999934693057	WITHOUT_CLASSIFICATION	6.530694290818115E-8	DEFECT
// different dates => different files	WITHOUT_CLASSIFICATION	0.9999998061545065	WITHOUT_CLASSIFICATION	1.9384549353846024E-7	DEFECT
//here do a bulk comparison	WITHOUT_CLASSIFICATION	0.9999870664075475	WITHOUT_CLASSIFICATION	1.2933592452397223E-5	DEFECT
// At this point, we know we have a tie.	WITHOUT_CLASSIFICATION	0.9999975942012636	WITHOUT_CLASSIFICATION	2.4057987364736494E-6	DEFECT
// throw BuildException on error	WITHOUT_CLASSIFICATION	0.9995345837340824	WITHOUT_CLASSIFICATION	4.65416265917533E-4	DEFECT
// throw BuildException on error	WITHOUT_CLASSIFICATION	0.9995345837340824	WITHOUT_CLASSIFICATION	4.65416265917533E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999229243365	WITHOUT_CLASSIFICATION	7.707566353111588E-8	DEFECT
// throw BuildException on error	WITHOUT_CLASSIFICATION	0.9995345837340824	WITHOUT_CLASSIFICATION	4.65416265917533E-4	DEFECT
// throw BuildException on error	WITHOUT_CLASSIFICATION	0.9995345837340824	WITHOUT_CLASSIFICATION	4.65416265917533E-4	DEFECT
// throw BuildException on error	WITHOUT_CLASSIFICATION	0.9995345837340824	WITHOUT_CLASSIFICATION	4.65416265917533E-4	DEFECT
// throw BuildException on error	WITHOUT_CLASSIFICATION	0.9995345837340824	WITHOUT_CLASSIFICATION	4.65416265917533E-4	DEFECT
// If you felt daring, you could cache the basedir absolute path	WITHOUT_CLASSIFICATION	0.999998767192123	WITHOUT_CLASSIFICATION	1.232807876992412E-6	DEFECT
// Sanity check. Ditch it if you want faster performance	WITHOUT_CLASSIFICATION	0.9999999777488456	WITHOUT_CLASSIFICATION	2.2251154332830722E-8	DEFECT
// Determine file whose out-of-dateness is to be checked	WITHOUT_CLASSIFICATION	0.9999999723468611	WITHOUT_CLASSIFICATION	2.7653138881628182E-8	DEFECT
// If filename does not match the To attribute of the mapper // then filter it out of the files we are considering	WITHOUT_CLASSIFICATION	0.9999823288242303	WITHOUT_CLASSIFICATION	1.7671175769776105E-5	DEFECT
// If filename does not match the To attribute of the mapper // then filter it out of the files we are considering	WITHOUT_CLASSIFICATION	0.9999823288242303	WITHOUT_CLASSIFICATION	1.7671175769776105E-5	DEFECT
// Sanity check	WITHOUT_CLASSIFICATION	0.9999995979109104	WITHOUT_CLASSIFICATION	4.0208908953377735E-7	DEFECT
// Sanity check	WITHOUT_CLASSIFICATION	0.9999995979109104	WITHOUT_CLASSIFICATION	4.0208908953377735E-7	DEFECT
// Determine file whose existence is to be checked	WITHOUT_CLASSIFICATION	0.9999997813965985	WITHOUT_CLASSIFICATION	2.186034014360653E-7	DEFECT
/**     * When using this as a custom selector, this method will be called.     * It translates each parameter into the appropriate setXXX() call.     *     * @param parameters the complete set of parameters for this selector.     */	WITHOUT_CLASSIFICATION	0.9999991783824977	WITHOUT_CLASSIFICATION	8.216175021885641E-7	DEFECT
// Directory size never selected for	WITHOUT_CLASSIFICATION	0.9999998617735398	WITHOUT_CLASSIFICATION	1.382264600654968E-7	DEFECT
/* You wish! */	WITHOUT_CLASSIFICATION	0.9999705246127969	WITHOUT_CLASSIFICATION	2.9475387203097396E-5	DEFECT
// check millis and only set it once.	WITHOUT_CLASSIFICATION	0.9999998799563736	WITHOUT_CLASSIFICATION	1.2004362635610613E-7	DEFECT
// When str starts with a File.separator, pattern has to start with a // File.separator. // When pattern starts with a File.separator, str has to start with a // File.separator.	WITHOUT_CLASSIFICATION	0.9999992042199924	WITHOUT_CLASSIFICATION	7.957800074655375E-7	DEFECT
// up to first '**'	WITHOUT_CLASSIFICATION	0.9999999402086718	WITHOUT_CLASSIFICATION	5.979132820207991E-8	DEFECT
// up to first '**'	WITHOUT_CLASSIFICATION	0.9999999402086718	WITHOUT_CLASSIFICATION	5.979132820207991E-8	DEFECT
// String is exhausted	WITHOUT_CLASSIFICATION	0.9999995955210412	WITHOUT_CLASSIFICATION	4.0447895888435667E-7	DEFECT
// String is exhausted	WITHOUT_CLASSIFICATION	0.9999995955210412	WITHOUT_CLASSIFICATION	4.0447895888435667E-7	DEFECT
// String is exhausted	WITHOUT_CLASSIFICATION	0.9999995955210412	WITHOUT_CLASSIFICATION	4.0447895888435667E-7	DEFECT
// String not exhausted, but pattern is. Failure.	WITHOUT_CLASSIFICATION	0.999868827526594	WITHOUT_CLASSIFICATION	1.3117247340608572E-4	DEFECT
// String not exhausted, but pattern is. Failure.	WITHOUT_CLASSIFICATION	0.999868827526594	WITHOUT_CLASSIFICATION	1.3117247340608572E-4	DEFECT
// up to last '**'	WITHOUT_CLASSIFICATION	0.9999995476201311	WITHOUT_CLASSIFICATION	4.5237986890353897E-7	DEFECT
// '**/**' situation, so skip one	WITHOUT_CLASSIFICATION	0.9999999894150062	WITHOUT_CLASSIFICATION	1.058499373594164E-8	DEFECT
// No '*'s, so we make a shortcut	WITHOUT_CLASSIFICATION	0.9999998521871617	WITHOUT_CLASSIFICATION	1.4781283837700385E-7	DEFECT
// Pattern and string do not have the same size	WITHOUT_CLASSIFICATION	0.9999891294577787	WITHOUT_CLASSIFICATION	1.0870542221317668E-5	DEFECT
// Character mismatch	WITHOUT_CLASSIFICATION	0.9999999903636116	WITHOUT_CLASSIFICATION	9.636388288903429E-9	DEFECT
// Character mismatch	WITHOUT_CLASSIFICATION	0.9999999903636116	WITHOUT_CLASSIFICATION	9.636388288903429E-9	DEFECT
// String matches against pattern	WITHOUT_CLASSIFICATION	0.9999998122855918	WITHOUT_CLASSIFICATION	1.8771440833348122E-7	DEFECT
// throw BuildException on error	WITHOUT_CLASSIFICATION	0.9995345837340824	WITHOUT_CLASSIFICATION	4.65416265917533E-4	DEFECT
// Character mismatch	WITHOUT_CLASSIFICATION	0.9999999903636116	WITHOUT_CLASSIFICATION	9.636388288903429E-9	DEFECT
// Find the pattern between padIdxStart & padIdxTmp in str between // strIdxStart & strIdxEnd	WITHOUT_CLASSIFICATION	0.999999994894758	WITHOUT_CLASSIFICATION	5.105242022244717E-9	DEFECT
// Find the pattern between padIdxStart & padIdxTmp in str between // strIdxStart & strIdxEnd	WITHOUT_CLASSIFICATION	0.999999994894758	WITHOUT_CLASSIFICATION	5.105242022244717E-9	DEFECT
// Character mismatch	WITHOUT_CLASSIFICATION	0.9999999903636116	WITHOUT_CLASSIFICATION	9.636388288903429E-9	DEFECT
// Character mismatch	WITHOUT_CLASSIFICATION	0.9999999903636116	WITHOUT_CLASSIFICATION	9.636388288903429E-9	DEFECT
// Character mismatch	WITHOUT_CLASSIFICATION	0.9999999903636116	WITHOUT_CLASSIFICATION	9.636388288903429E-9	DEFECT
// Pattern contains only '*', which matches anything	WITHOUT_CLASSIFICATION	0.9999805731003042	WITHOUT_CLASSIFICATION	1.9426899695709487E-5	DEFECT
// Process characters before first star	WITHOUT_CLASSIFICATION	0.9999999951766906	WITHOUT_CLASSIFICATION	4.8233094712844985E-9	DEFECT
// All characters in the string are used. Check if only '*'s are // left in the pattern. If so, we succeeded. Otherwise failure.	WITHOUT_CLASSIFICATION	0.9999999886244625	WITHOUT_CLASSIFICATION	1.1375537559561539E-8	DEFECT
// All characters in the string are used. Check if only '*'s are // left in the pattern. If so, we succeeded. Otherwise failure.	WITHOUT_CLASSIFICATION	0.9999999886244625	WITHOUT_CLASSIFICATION	1.1375537559561539E-8	DEFECT
// Process characters after last star	WITHOUT_CLASSIFICATION	0.9999999950358268	WITHOUT_CLASSIFICATION	4.964173201268972E-9	DEFECT
// process pattern between stars. padIdxStart and patIdxEnd point // always to a '*'.	WITHOUT_CLASSIFICATION	0.9999997435205812	WITHOUT_CLASSIFICATION	2.5647941885198834E-7	DEFECT
// Two stars next to each other, skip the first one.	WITHOUT_CLASSIFICATION	0.9999998423729324	WITHOUT_CLASSIFICATION	1.576270675863183E-7	DEFECT
// All characters in the string are used. Check if only '*'s are left // in the pattern. If so, we succeeded. Otherwise failure.	WITHOUT_CLASSIFICATION	0.999999997933295	WITHOUT_CLASSIFICATION	2.0667049509341076E-9	DEFECT
/*++*/	WITHOUT_CLASSIFICATION	0.9998366950089499	WITHOUT_CLASSIFICATION	1.633049910501048E-4	DEFECT
// Creation is done here rather than in isSelected() because some // containers may do a validation pass before running isSelected(), // but we need to check for the existence of the created class.	WITHOUT_CLASSIFICATION	0.999999965610703	WITHOUT_CLASSIFICATION	3.4389296927764974E-8	DEFECT
// We know that dynselector must be non-null if no error message	WITHOUT_CLASSIFICATION	0.999999983397801	WITHOUT_CLASSIFICATION	1.660219894842093E-8	DEFECT
// Deal with if and unless properties first	WITHOUT_CLASSIFICATION	0.9999998198792981	WITHOUT_CLASSIFICATION	1.801207017867368E-7	DEFECT
// -----  attributes  -----	WITHOUT_CLASSIFICATION	0.9999999401907493	WITHOUT_CLASSIFICATION	5.980925074459516E-8	DEFECT
// ----- internal member variables -----	WITHOUT_CLASSIFICATION	0.9999999090003583	WITHOUT_CLASSIFICATION	9.099964162268043E-8	DEFECT
// -----  constructors  -----	WITHOUT_CLASSIFICATION	0.9999999676980629	WITHOUT_CLASSIFICATION	3.230193720197132E-8	DEFECT
// ----- configuration  -----	WITHOUT_CLASSIFICATION	0.9999997760939702	WITHOUT_CLASSIFICATION	2.239060297331349E-7	DEFECT
// normal use inside Ant	WITHOUT_CLASSIFICATION	0.9999999327462138	WITHOUT_CLASSIFICATION	6.725378616304998E-8	DEFECT
// set self as a BuildListener to delay cachefile saves	WITHOUT_CLASSIFICATION	0.9999993885316495	WITHOUT_CLASSIFICATION	6.114683504978598E-7	DEFECT
// no reference to project - e.g. during normal JUnit tests	WITHOUT_CLASSIFICATION	0.999999980609102	WITHOUT_CLASSIFICATION	1.9390898005335496E-8	DEFECT
// this is a *.* parameter for later use	WITHOUT_CLASSIFICATION	0.9999894158951427	WITHOUT_CLASSIFICATION	1.0584104857339644E-5	DEFECT
// specify the algorithm classname	WITHOUT_CLASSIFICATION	0.9999968329657707	WITHOUT_CLASSIFICATION	3.1670342292977582E-6	DEFECT
// use Algorithm defined via name	WITHOUT_CLASSIFICATION	0.9999999457266161	WITHOUT_CLASSIFICATION	5.4273383842167185E-8	DEFECT
// use Algorithm specified by classname	WITHOUT_CLASSIFICATION	0.9999990316765	WITHOUT_CLASSIFICATION	9.683235000052715E-7	DEFECT
// nothing specified - use default	WITHOUT_CLASSIFICATION	0.9999999992773925	WITHOUT_CLASSIFICATION	7.226074935437584E-10	DEFECT
// else nothing to do	WITHOUT_CLASSIFICATION	0.9999996070309491	WITHOUT_CLASSIFICATION	3.929690508638947E-7	DEFECT
// use Algorithm defined via name	WITHOUT_CLASSIFICATION	0.9999999457266161	WITHOUT_CLASSIFICATION	5.4273383842167185E-8	DEFECT
// // -----  Set the main attributes, pattern '*'  ----- //	WITHOUT_CLASSIFICATION	0.9999997910434022	WITHOUT_CLASSIFICATION	2.089565977047239E-7	DEFECT
// use Algorithm specified by classname	WITHOUT_CLASSIFICATION	0.9999990316765	WITHOUT_CLASSIFICATION	9.683235000052715E-7	DEFECT
// nothing specified - use default	WITHOUT_CLASSIFICATION	0.9999999992773925	WITHOUT_CLASSIFICATION	7.226074935437584E-10	DEFECT
// specify the cache classname	WITHOUT_CLASSIFICATION	0.9999998465433857	WITHOUT_CLASSIFICATION	1.5345661435529212E-7	DEFECT
// use Cache defined via name	WITHOUT_CLASSIFICATION	0.999999999130556	WITHOUT_CLASSIFICATION	8.694440140932012E-10	DEFECT
// use Cache specified by classname	WITHOUT_CLASSIFICATION	0.9999999017579452	WITHOUT_CLASSIFICATION	9.824205484306747E-8	DEFECT
// specify the comparator classname	WITHOUT_CLASSIFICATION	0.9999997701263882	WITHOUT_CLASSIFICATION	2.298736116995713E-7	DEFECT
// // -----  Set the special attributes, pattern '*.*'  ----- //	WITHOUT_CLASSIFICATION	0.9999998354565511	WITHOUT_CLASSIFICATION	1.645434489188297E-7	DEFECT
// load the specified class	WITHOUT_CLASSIFICATION	0.9999998853801558	WITHOUT_CLASSIFICATION	1.1461984414033273E-7	DEFECT
// -----  the selection work  -----	WITHOUT_CLASSIFICATION	0.999826074617115	WITHOUT_CLASSIFICATION	1.7392538288499583E-4	DEFECT
// We have a 'resourced' file, so reconvert it and use // the 'old' implementation.	WITHOUT_CLASSIFICATION	0.9999996180972384	WITHOUT_CLASSIFICATION	3.8190276161602457E-7	DEFECT
// You can not compute a value for a directory	WITHOUT_CLASSIFICATION	0.9999751620563148	WITHOUT_CLASSIFICATION	2.483794368525875E-5	DEFECT
// Get the values and do the comparison	WITHOUT_CLASSIFICATION	0.9999987290269278	WITHOUT_CLASSIFICATION	1.2709730723114791E-6	DEFECT
// Maybe update the cache	WITHOUT_CLASSIFICATION	0.9999999008265832	WITHOUT_CLASSIFICATION	9.917341669394828E-8	DEFECT
// -----  attribute and nested element support  -----	WITHOUT_CLASSIFICATION	0.9999997053259787	WITHOUT_CLASSIFICATION	2.946740212977477E-7	DEFECT
// the usual classloader	WITHOUT_CLASSIFICATION	0.9999991477838073	WITHOUT_CLASSIFICATION	8.522161927192799E-7	DEFECT
// additional use the provided classpath	WITHOUT_CLASSIFICATION	0.9999996152789388	WITHOUT_CLASSIFICATION	3.847210612191349E-7	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.999998710485609	WITHOUT_CLASSIFICATION	1.2895143909840952E-6	DEFECT
// ----- 'beautiful' output -----	WITHOUT_CLASSIFICATION	0.9999999059354722	WITHOUT_CLASSIFICATION	9.406452786617001E-8	DEFECT
// ----- BuildListener interface methods -----	WITHOUT_CLASSIFICATION	0.9999972609736123	WITHOUT_CLASSIFICATION	2.739026387708006E-6	DEFECT
// The EnumeratedAttributes for the three interface implementations. // Name-Classname mapping is done in the configure() method.	WITHOUT_CLASSIFICATION	0.9999976316518393	WITHOUT_CLASSIFICATION	2.3683481607240912E-6	DEFECT
// -----  member variables  -----	WITHOUT_CLASSIFICATION	0.9999998512700726	WITHOUT_CLASSIFICATION	1.4872992733050806E-7	DEFECT
// -----  member variables  -----	WITHOUT_CLASSIFICATION	0.9999998512700726	WITHOUT_CLASSIFICATION	1.4872992733050806E-7	DEFECT
// -----  Algorithm-Configuration  -----	WITHOUT_CLASSIFICATION	0.9999984577633094	WITHOUT_CLASSIFICATION	1.5422366905031398E-6	DEFECT
// -----  Algorithm-Configuration  -----	WITHOUT_CLASSIFICATION	0.9999984577633094	WITHOUT_CLASSIFICATION	1.5422366905031398E-6	DEFECT
// -----  Logic  -----	WITHOUT_CLASSIFICATION	0.9999990725213134	WITHOUT_CLASSIFICATION	9.274786866190219E-7	DEFECT
// -----  Logic  -----	WITHOUT_CLASSIFICATION	0.9999990725213134	WITHOUT_CLASSIFICATION	9.274786866190219E-7	DEFECT
// implementation adapted from ...taskdefs.Checksum, thanks to Magesh for hint	WITHOUT_CLASSIFICATION	0.9999995592979279	WITHOUT_CLASSIFICATION	4.4070207203178313E-7	DEFECT
// Read the file	WITHOUT_CLASSIFICATION	0.9999964125134242	WITHOUT_CLASSIFICATION	3.5874865757429822E-6	DEFECT
// -----  member variables - configuration  -----	WITHOUT_CLASSIFICATION	0.999999915434395	WITHOUT_CLASSIFICATION	8.456560499591812E-8	DEFECT
// -----  member variables - internal use  -----	WITHOUT_CLASSIFICATION	0.9999999076949359	WITHOUT_CLASSIFICATION	9.230506409703669E-8	DEFECT
// -----  Constructors  -----	WITHOUT_CLASSIFICATION	0.9999999636659295	WITHOUT_CLASSIFICATION	3.6334070461662426E-8	DEFECT
// -----  Cache-Configuration  -----	WITHOUT_CLASSIFICATION	0.9999996690403418	WITHOUT_CLASSIFICATION	3.3095965833347536E-7	DEFECT
// -----  Data Access	WITHOUT_CLASSIFICATION	0.9999996706472503	WITHOUT_CLASSIFICATION	3.2935274969749297E-7	DEFECT
// after loading the cache is up to date with the file	WITHOUT_CLASSIFICATION	0.9999999009478329	WITHOUT_CLASSIFICATION	9.905216706382975E-8	DEFECT
// -----  additional  -----	WITHOUT_CLASSIFICATION	0.9999912757230599	WITHOUT_CLASSIFICATION	8.7242769399835E-6	DEFECT
// swallow as this simply doesn't seem to be Kaffe	WITHOUT_CLASSIFICATION	0.9999226754854464	WITHOUT_CLASSIFICATION	7.732451455356164E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999997594604898	WITHOUT_CLASSIFICATION	2.4053951019376697E-7	DEFECT
// find the line breaks and pass other chars through in blocks	WITHOUT_CLASSIFICATION	0.9999929271471392	WITHOUT_CLASSIFICATION	7.072852860874924E-6	DEFECT
// either end of buffer or a line separator char	WITHOUT_CLASSIFICATION	0.9999999149377357	WITHOUT_CLASSIFICATION	8.50622643767607E-8	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9999976685470136	WITHOUT_CLASSIFICATION	2.331452986425402E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999229243365	WITHOUT_CLASSIFICATION	7.707566353111588E-8	DEFECT
// Because the content is only read the file will not be damaged. I tested // with JPG, ZIP and PDF as binary files.	WITHOUT_CLASSIFICATION	0.9999989176836097	WITHOUT_CLASSIFICATION	1.0823163902187324E-6	DEFECT
// don't need the opposite check as the Dictionaries have the // same size, so we've also covered all keys of d2 already.	WITHOUT_CLASSIFICATION	0.9999999809633644	WITHOUT_CLASSIFICATION	1.903663559798138E-8	DEFECT
//log uptodateness of all targets:	WITHOUT_CLASSIFICATION	0.9999998854146372	WITHOUT_CLASSIFICATION	1.145853627595107E-7	DEFECT
// CheckStyle:ParameterNumberCheck OFF - bc	WITHOUT_CLASSIFICATION	0.999999789957283	WITHOUT_CLASSIFICATION	2.1004271705272264E-7	DEFECT
// this should not happen, because the lines are // returned with the end of line delimiter	WITHOUT_CLASSIFICATION	0.999996390530682	WITHOUT_CLASSIFICATION	3.609469317935059E-6	DEFECT
// CheckStyle:ParameterNumberCheck ON	WITHOUT_CLASSIFICATION	0.9999999047515061	WITHOUT_CLASSIFICATION	9.524849386796506E-8	DEFECT
// two not existing files are equal	WITHOUT_CLASSIFICATION	0.9999969082304646	WITHOUT_CLASSIFICATION	3.0917695353525024E-6	DEFECT
// should the following two be switched?  If r1 and r2 refer to the same file, // isn't their content equal regardless of whether that file is a directory?	WITHOUT_CLASSIFICATION	0.9999999359927895	WITHOUT_CLASSIFICATION	6.400721042980594E-8	DEFECT
// don't want to compare directory contents for now	WITHOUT_CLASSIFICATION	0.999935453905389	WITHOUT_CLASSIFICATION	6.454609461111074E-5	DEFECT
//as far as we know	WITHOUT_CLASSIFICATION	0.9999979687269706	WITHOUT_CLASSIFICATION	2.0312730294393672E-6	DEFECT
//ignore release of an already-closed funnel	WITHOUT_CLASSIFICATION	0.999999998506833	WITHOUT_CLASSIFICATION	1.4931670339408242E-9	DEFECT
// Write child elements and text	WITHOUT_CLASSIFICATION	0.9999999478830311	WITHOUT_CLASSIFICATION	5.211696885745036E-8	DEFECT
// Write indent characters	WITHOUT_CLASSIFICATION	0.9999999941886665	WITHOUT_CLASSIFICATION	5.81133350096233E-9	DEFECT
// Write element	WITHOUT_CLASSIFICATION	0.9999989686949299	WITHOUT_CLASSIFICATION	1.0313050701774582E-6	DEFECT
// steal default namespace	WITHOUT_CLASSIFICATION	0.9999999906368697	WITHOUT_CLASSIFICATION	9.363130262454723E-9	DEFECT
// Write attributes	WITHOUT_CLASSIFICATION	0.99999994711667	WITHOUT_CLASSIFICATION	5.288333008417982E-8	DEFECT
// Write element close	WITHOUT_CLASSIFICATION	0.9999999806105261	WITHOUT_CLASSIFICATION	1.938947393273276E-8	DEFECT
// relative path	WITHOUT_CLASSIFICATION	0.9999998868819188	WITHOUT_CLASSIFICATION	1.1311808118535108E-7	DEFECT
// Fall tru	WITHOUT_CLASSIFICATION	0.9999960751087551	WITHOUT_CLASSIFICATION	3.924891244984882E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999229243365	WITHOUT_CLASSIFICATION	7.707566353111588E-8	DEFECT
// Determine the Java version by looking at available classes // java.net.Proxy was introduced in JDK 1.5 // java.lang.CharSequence was introduced in JDK 1.4 // java.lang.StrictMath was introduced in JDK 1.3 // java.lang.ThreadLocal was introduced in JDK 1.2 // java.lang.Void was introduced in JDK 1.1 // Count up version until a NoClassDefFoundError ends the try	WITHOUT_CLASSIFICATION	0.9999997831940878	WITHOUT_CLASSIFICATION	2.168059122632653E-7	DEFECT
// swallow as we've hit the max class version that // we have	WITHOUT_CLASSIFICATION	0.9999983879695465	WITHOUT_CLASSIFICATION	1.612030453366947E-6	DEFECT
// Extrapolating from: // "NetWare may have a "java" in that directory, but 99% of // the time, you don't want to execute it" -- Jeff Tulley // <JTULLEY@novell.com>	WITHOUT_CLASSIFICATION	0.9997751060410768	WITHOUT_CLASSIFICATION	2.248939589232984E-4	DEFECT
// On IBM's JDK 1.2 the directory layout is different, 1.3 follows // Sun's layout.	WITHOUT_CLASSIFICATION	0.9990626121019718	WITHOUT_CLASSIFICATION	9.373878980280997E-4	DEFECT
// On IBM's JDK 1.2 the directory layout is different, 1.3 follows // Sun's layout.	WITHOUT_CLASSIFICATION	0.9990626121019718	WITHOUT_CLASSIFICATION	9.373878980280997E-4	DEFECT
// Unfortunately on Windows java.home doesn't always refer // to the correct location, so we need to fall back to // assuming java is somewhere on the PATH.	WITHOUT_CLASSIFICATION	0.9988061351077633	WITHOUT_CLASSIFICATION	0.0011938648922366645	DEFECT
// fall back to JRE bin directory, also catches JDK 1.0 and 1.1 // where java.home points to the root of the JDK and Mac OS X where // the whole directory layout is different from Sun's	WITHOUT_CLASSIFICATION	0.9999912263797935	WITHOUT_CLASSIFICATION	8.77362020652197E-6	DEFECT
// This is the most common extension case - exe for windows and OS/2, // nothing for *nix.	WITHOUT_CLASSIFICATION	0.9998037286149002	WITHOUT_CLASSIFICATION	1.962713850998821E-4	DEFECT
//In Java1.5, the apache stuff moved.	WITHOUT_CLASSIFICATION	0.9999954183176196	WITHOUT_CLASSIFICATION	4.58168238042902E-6	DEFECT
//fall through.	WITHOUT_CLASSIFICATION	0.9999508085912931	WITHOUT_CLASSIFICATION	4.919140870688412E-5	DEFECT
// fall through	WITHOUT_CLASSIFICATION	0.9999875671450049	WITHOUT_CLASSIFICATION	1.2432854995069546E-5	DEFECT
// fall through	WITHOUT_CLASSIFICATION	0.9999875671450049	WITHOUT_CLASSIFICATION	1.2432854995069546E-5	DEFECT
// fall through	WITHOUT_CLASSIFICATION	0.9999875671450049	WITHOUT_CLASSIFICATION	1.2432854995069546E-5	DEFECT
// are there any here that we forgot? // fall through	WITHOUT_CLASSIFICATION	0.9999788317388848	WITHOUT_CLASSIFICATION	2.116826111518695E-5	DEFECT
//things like sun.reflection, sun.misc, sun.net	WITHOUT_CLASSIFICATION	0.9999687157037993	WITHOUT_CLASSIFICATION	3.1284296200697894E-5	DEFECT
//things like sun.reflection, sun.misc, sun.net	WITHOUT_CLASSIFICATION	0.9999687157037993	WITHOUT_CLASSIFICATION	3.1284296200697894E-5	DEFECT
//Strip '.' token	WITHOUT_CLASSIFICATION	0.999990368925651	WITHOUT_CLASSIFICATION	9.631074349077064E-6	DEFECT
//If it ended in a dot, throw an exception	WITHOUT_CLASSIFICATION	0.9993243310084892	WITHOUT_CLASSIFICATION	6.756689915108148E-4	DEFECT
// Exact match	WITHOUT_CLASSIFICATION	0.999999353562051	WITHOUT_CLASSIFICATION	6.464379488656742E-7	DEFECT
// Exact match	WITHOUT_CLASSIFICATION	0.999999353562051	WITHOUT_CLASSIFICATION	6.464379488656742E-7	DEFECT
// Exact match	WITHOUT_CLASSIFICATION	0.999999353562051	WITHOUT_CLASSIFICATION	6.464379488656742E-7	DEFECT
// might read too much	WITHOUT_CLASSIFICATION	0.9999970511463103	WITHOUT_CLASSIFICATION	2.9488536896912084E-6	DEFECT
// would be imprecise	WITHOUT_CLASSIFICATION	0.9999977488099319	WITHOUT_CLASSIFICATION	2.2511900681344467E-6	DEFECT
//last character isn't a digit	WITHOUT_CLASSIFICATION	0.9999996426662737	WITHOUT_CLASSIFICATION	3.5733372631196054E-7	DEFECT
// write out the number of characters encoded in this line.	WITHOUT_CLASSIFICATION	0.9999999913806237	WITHOUT_CLASSIFICATION	8.619376298418815E-9	DEFECT
// set the padding defaults	WITHOUT_CLASSIFICATION	0.9999999223297589	WITHOUT_CLASSIFICATION	7.767024116164169E-8	DEFECT
// get the next 3 bytes (if we have them)	WITHOUT_CLASSIFICATION	0.999999550848818	WITHOUT_CLASSIFICATION	4.491511820717374E-7	DEFECT
// OK, Java 1.3.	WITHOUT_CLASSIFICATION	0.9999995313084037	WITHOUT_CLASSIFICATION	4.6869159625844194E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999997594604898	WITHOUT_CLASSIFICATION	2.4053951019376697E-7	DEFECT
// CheckStyle:ConstantNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9999986578546028	WITHOUT_CLASSIFICATION	1.3421453971226684E-6	DEFECT
// CheckStyle:ConstantNameCheck ON	WITHOUT_CLASSIFICATION	0.9999991979337849	WITHOUT_CLASSIFICATION	8.020662149637047E-7	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9999976685470136	WITHOUT_CLASSIFICATION	2.331452986425402E-6	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9999976685470136	WITHOUT_CLASSIFICATION	2.331452986425402E-6	DEFECT
// #8031: first try Java 1.4.	WITHOUT_CLASSIFICATION	0.9999936883935119	WITHOUT_CLASSIFICATION	6.3116064881483516E-6	DEFECT
// Reflection problems? Should not happen, debug.	WITHOUT_CLASSIFICATION	0.996623309047733	WITHOUT_CLASSIFICATION	0.0033766909522669614	DEFECT
// CheckStyle:ParameterNumberCheck OFF - bc	WITHOUT_CLASSIFICATION	0.999999789957283	WITHOUT_CLASSIFICATION	2.1004271705272264E-7	DEFECT
// CheckStyle:ParameterNumberCheck ON	WITHOUT_CLASSIFICATION	0.9999999047515061	WITHOUT_CLASSIFICATION	9.524849386796506E-8	DEFECT
// depending on the implementation the actual RE won't // get instantiated in the constructor.	WITHOUT_CLASSIFICATION	0.999994978537687	WITHOUT_CLASSIFICATION	5.0214623129553115E-6	DEFECT
// terminate with a linefeed alone	WITHOUT_CLASSIFICATION	0.9999990049218874	WITHOUT_CLASSIFICATION	9.950781126007418E-7	DEFECT
// NotReached	WITHOUT_CLASSIFICATION	0.999999658309425	WITHOUT_CLASSIFICATION	3.416905749641552E-7	DEFECT
//  0 to  7 //  8 to 15 // 16 to 23 // 24 to 31 // 32 to 39 // 40 to 47 // 48 to 55 // 56 to 63	WITHOUT_CLASSIFICATION	0.9999030152691001	WITHOUT_CLASSIFICATION	9.698473089987024E-5	DEFECT
// store the octets	WITHOUT_CLASSIFICATION	0.9999999699462773	WITHOUT_CLASSIFICATION	3.005372269470856E-8	DEFECT
// store the octets	WITHOUT_CLASSIFICATION	0.9999999699462773	WITHOUT_CLASSIFICATION	3.005372269470856E-8	DEFECT
// store the octets	WITHOUT_CLASSIFICATION	0.9999999699462773	WITHOUT_CLASSIFICATION	3.005372269470856E-8	DEFECT
// padding	WITHOUT_CLASSIFICATION	0.999994953352503	WITHOUT_CLASSIFICATION	5.046647497024234E-6	DEFECT
// padding	WITHOUT_CLASSIFICATION	0.999994953352503	WITHOUT_CLASSIFICATION	5.046647497024234E-6	DEFECT
// magic property	WITHOUT_CLASSIFICATION	0.9999976485230209	WITHOUT_CLASSIFICATION	2.35147697913354E-6	DEFECT
//only text nodes that are non null after property expansion are added	WITHOUT_CLASSIFICATION	0.9999881576578393	WITHOUT_CLASSIFICATION	1.1842342160741187E-5	DEFECT
//no need to synchronize, as Vector is always synchronized	WITHOUT_CLASSIFICATION	0.9999969058553905	WITHOUT_CLASSIFICATION	3.094144609405801E-6	DEFECT
// do not close the stream	WITHOUT_CLASSIFICATION	0.9999998347839361	WITHOUT_CLASSIFICATION	1.6521606396218504E-7	DEFECT
//Empty	WITHOUT_CLASSIFICATION	0.9999657404004351	WITHOUT_CLASSIFICATION	3.425959956490635E-5	DEFECT
//Empty	WITHOUT_CLASSIFICATION	0.9999657404004351	WITHOUT_CLASSIFICATION	3.425959956490635E-5	DEFECT
//get some non-crypto-grade randomness from various places.	WITHOUT_CLASSIFICATION	0.9999999554409841	WITHOUT_CLASSIFICATION	4.4559015911038876E-8	DEFECT
// Cannot resolve it, so skip it.	WITHOUT_CLASSIFICATION	0.9999996702255345	WITHOUT_CLASSIFICATION	3.297744654606409E-7	DEFECT
// plain component	WITHOUT_CLASSIFICATION	0.9999998978205005	WITHOUT_CLASSIFICATION	1.0217949949495014E-7	DEFECT
// make sure we are dealing with an absolute path	WITHOUT_CLASSIFICATION	0.9999999223525635	WITHOUT_CLASSIFICATION	7.764743644618543E-8	DEFECT
//remove the initial separator; the root has it.	WITHOUT_CLASSIFICATION	0.9999984409173305	WITHOUT_CLASSIFICATION	1.559082669494286E-6	DEFECT
// UNC drive	WITHOUT_CLASSIFICATION	0.9999998465735758	WITHOUT_CLASSIFICATION	1.534264242887792E-7	DEFECT
// format: "DEVICE:[DIR.SUBDIR]FILE"	WITHOUT_CLASSIFICATION	0.9999984214822438	WITHOUT_CLASSIFICATION	1.5785177562738168E-6	DEFECT
// treat directories specified using .DIR syntax as files	WITHOUT_CLASSIFICATION	0.9999999392764538	WITHOUT_CLASSIFICATION	6.072354612683551E-8	DEFECT
// add an extra slash for filesystems with drive-specifiers	WITHOUT_CLASSIFICATION	0.9999999462959922	WITHOUT_CLASSIFICATION	5.3704007757264436E-8	DEFECT
//do a check for the destination file existing	WITHOUT_CLASSIFICATION	0.9999999889282234	WITHOUT_CLASSIFICATION	1.107177667038622E-8	DEFECT
// execute the script	WITHOUT_CLASSIFICATION	0.9999996256739745	WITHOUT_CLASSIFICATION	3.743260255337575E-7	DEFECT
// do nothing by default	WITHOUT_CLASSIFICATION	0.9999998285099296	WITHOUT_CLASSIFICATION	1.7149007040281994E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999997594604898	WITHOUT_CLASSIFICATION	2.4053951019376697E-7	DEFECT
// NotReached	WITHOUT_CLASSIFICATION	0.999999658309425	WITHOUT_CLASSIFICATION	3.416905749641552E-7	DEFECT
// now recover all the dependencies collected and add to the list.	WITHOUT_CLASSIFICATION	0.9999999847928683	WITHOUT_CLASSIFICATION	1.5207131644129468E-8	DEFECT
//inherit doc	WITHOUT_CLASSIFICATION	0.9999941425622871	WITHOUT_CLASSIFICATION	5.857437712840578E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999229243365	WITHOUT_CLASSIFICATION	7.707566353111588E-8	DEFECT
// NotReached	WITHOUT_CLASSIFICATION	0.999999658309425	WITHOUT_CLASSIFICATION	3.416905749641552E-7	DEFECT
// do not close the stream	WITHOUT_CLASSIFICATION	0.9999998347839361	WITHOUT_CLASSIFICATION	1.6521606396218504E-7	DEFECT
// on cygwin, our current directory can be a UNC; // assume user.dir is absolute or all hell breaks loose...	WITHOUT_CLASSIFICATION	0.9998271822842464	WITHOUT_CLASSIFICATION	1.7281771575370234E-4	DEFECT
// not before the filesystem root and not after it, since root // already contains one	WITHOUT_CLASSIFICATION	0.9999999566881396	WITHOUT_CLASSIFICATION	4.331186037007192E-8	DEFECT
// ensure that l ends with a / // so we never think /foo was a parent directory of /foobar	WITHOUT_CLASSIFICATION	0.9999996746388201	WITHOUT_CLASSIFICATION	3.2536117995386555E-7	DEFECT
// ensure that l ends with a / // so we never think /foo was a parent directory of /foobar	WITHOUT_CLASSIFICATION	0.9999996746388201	WITHOUT_CLASSIFICATION	3.2536117995386555E-7	DEFECT
// build the path stack info to compare	WITHOUT_CLASSIFICATION	0.999993753825356	WITHOUT_CLASSIFICATION	6.246174643967194E-6	DEFECT
// not the same device (would be "" on Linux/Unix)	WITHOUT_CLASSIFICATION	0.999999191535454	WITHOUT_CLASSIFICATION	8.084645460436954E-7	DEFECT
// no comparison possible	WITHOUT_CLASSIFICATION	0.9999998666859141	WITHOUT_CLASSIFICATION	1.3331408586948606E-7	DEFECT
// get index of parts which are equal	WITHOUT_CLASSIFICATION	0.999999078986803	WITHOUT_CLASSIFICATION	9.210131970129571E-7	DEFECT
// if "from" part is longer, fill it up with ".." // to reach path which is equal to both paths	WITHOUT_CLASSIFICATION	0.9999999998640889	WITHOUT_CLASSIFICATION	1.3591097000527804E-10	DEFECT
// fill it up path with parts which were not equal	WITHOUT_CLASSIFICATION	0.9999999543698815	WITHOUT_CLASSIFICATION	4.5630118337090595E-8	DEFECT
// can safely use '/' because Windows understands '/' as separator	WITHOUT_CLASSIFICATION	0.9999989628403188	WITHOUT_CLASSIFICATION	1.0371596812987337E-6	DEFECT
// base directory of the fileset	WITHOUT_CLASSIFICATION	0.9999997652159568	WITHOUT_CLASSIFICATION	2.3478404320956648E-7	DEFECT
// build the list of sources which are out of date with // respect to the target	WITHOUT_CLASSIFICATION	0.9999999988882126	WITHOUT_CLASSIFICATION	1.111787515519083E-9	DEFECT
// code from Magesh moved from DefaultLogger and slightly modified	WITHOUT_CLASSIFICATION	0.9999989628149902	WITHOUT_CLASSIFICATION	1.0371850098284191E-6	DEFECT
//if you cannot read it, you won't be able to write it either	WITHOUT_CLASSIFICATION	0.9999569541105104	WITHOUT_CLASSIFICATION	4.30458894894741E-5	DEFECT
// must be a zip of some sort	WITHOUT_CLASSIFICATION	0.9999999853029297	WITHOUT_CLASSIFICATION	1.469707038926741E-8	DEFECT
// does the class have a package structure	WITHOUT_CLASSIFICATION	0.9999977129232946	WITHOUT_CLASSIFICATION	2.287076705349921E-6	DEFECT
// check if the package structure is more than 1 level deep	WITHOUT_CLASSIFICATION	0.9999999994055406	WITHOUT_CLASSIFICATION	5.944594572485411E-10	DEFECT
// class name has more than 1 package level 'com.company.Class'	WITHOUT_CLASSIFICATION	0.9999989018226886	WITHOUT_CLASSIFICATION	1.0981773115247762E-6	DEFECT
// class name has only 1 package level 'package.Class'	WITHOUT_CLASSIFICATION	0.9999994106615057	WITHOUT_CLASSIFICATION	5.893384942680813E-7	DEFECT
// Add the class in dotted notation 'com.company.Class'	WITHOUT_CLASSIFICATION	0.9999869694264214	WITHOUT_CLASSIFICATION	1.303057357856769E-5	DEFECT
// Add a class with no package 'Class'	WITHOUT_CLASSIFICATION	0.9999992978113403	WITHOUT_CLASSIFICATION	7.021886597033792E-7	DEFECT
// force BCEL classes to load now	WITHOUT_CLASSIFICATION	0.99999946017176	WITHOUT_CLASSIFICATION	5.398282398687019E-7	DEFECT
// force BCEL classes to load now	WITHOUT_CLASSIFICATION	0.99999946017176	WITHOUT_CLASSIFICATION	5.398282398687019E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999997594604898	WITHOUT_CLASSIFICATION	2.4053951019376697E-7	DEFECT
// NotReached	WITHOUT_CLASSIFICATION	0.999999658309425	WITHOUT_CLASSIFICATION	3.416905749641552E-7	DEFECT
// we get the root classes and build up a set of // classes upon which they depend	WITHOUT_CLASSIFICATION	0.9999995538275586	WITHOUT_CLASSIFICATION	4.461724414401939E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999229243365	WITHOUT_CLASSIFICATION	7.707566353111588E-8	DEFECT
// execute the script	WITHOUT_CLASSIFICATION	0.9999996256739745	WITHOUT_CLASSIFICATION	3.743260255337575E-7	DEFECT
//log security exceptions and continue; it aint that //important and may be quite common running Ant embedded.	WITHOUT_CLASSIFICATION	0.9999953522450096	WITHOUT_CLASSIFICATION	4.6477549904089045E-6	DEFECT
// we look through the classpath elements. If the element is a dir // we look for the file. IF it is a zip, we look for the zip entry	WITHOUT_CLASSIFICATION	0.9999999540442325	WITHOUT_CLASSIFICATION	4.59557674813783E-8	DEFECT
// we look through the source path elements. If the element is a dir // we look for the file. If it is a zip, we look for the zip entry. // This isn't normal for source paths but we get it for free	WITHOUT_CLASSIFICATION	0.9999997122134816	WITHOUT_CLASSIFICATION	2.8778651848562176E-7	DEFECT
// first letter of the previous segment of the class name 'Class' // is upper case ascii. so according to the spec it's an inner class	WITHOUT_CLASSIFICATION	0.9999999763583366	WITHOUT_CLASSIFICATION	2.36416633269616E-8	DEFECT
// Register Groovy ourselves, since BSF did not // natively support it in versions previous to 1.2.4.	WITHOUT_CLASSIFICATION	0.9998542578874431	WITHOUT_CLASSIFICATION	1.4574211255679982E-4	DEFECT
// execute the script	WITHOUT_CLASSIFICATION	0.9999996256739745	WITHOUT_CLASSIFICATION	3.743260255337575E-7	DEFECT
// translate \1 to $1 so that the Perl5Substitution will work	WITHOUT_CLASSIFICATION	0.9999858441649816	WITHOUT_CLASSIFICATION	1.4155835018384676E-5	DEFECT
// BSF uses a hashtable to store values // so cannot declareBean with a null value // So need to remove any bean of this name as // that bean should not be visible	WITHOUT_CLASSIFICATION	0.9999319976492546	WITHOUT_CLASSIFICATION	6.800235074543368E-5	DEFECT
// no permission here	WITHOUT_CLASSIFICATION	0.9999955155962039	WITHOUT_CLASSIFICATION	4.484403796070489E-6	DEFECT
// compute the compiler options based on the input options first	WITHOUT_CLASSIFICATION	0.9999999139870797	WITHOUT_CLASSIFICATION	8.601292023907124E-8	DEFECT
// treat non-matching groups as empty matches	WITHOUT_CLASSIFICATION	0.9999999298373867	WITHOUT_CLASSIFICATION	7.01626131856135E-8	DEFECT
// be strict about line separator	WITHOUT_CLASSIFICATION	0.9999999278436271	WITHOUT_CLASSIFICATION	7.215637278495831E-8	DEFECT
// translate \1 to $(1) so that the Matcher will work	WITHOUT_CLASSIFICATION	0.9999934616531018	WITHOUT_CLASSIFICATION	6.538346898232955E-6	DEFECT
// Do the substitution	WITHOUT_CLASSIFICATION	0.9999997149849921	WITHOUT_CLASSIFICATION	2.850150080301082E-7	DEFECT
// replace \1 with the corresponding group	WITHOUT_CLASSIFICATION	0.9999829147585928	WITHOUT_CLASSIFICATION	1.7085241407267308E-5	DEFECT
/*     * Used when sorting.  If too many long comparisons     * happen, we stop sorting, randomise the block     * slightly, and try again.     */	WITHOUT_CLASSIFICATION	0.9999992720318889	WITHOUT_CLASSIFICATION	7.279681110592999E-7	DEFECT
/*          Nodes and heap entries run from 1.  Entry 0          for both the heap and nodes is a sentinel.        */	WITHOUT_CLASSIFICATION	0.9999992920844736	WITHOUT_CLASSIFICATION	7.079155265045564E-7	DEFECT
/*          Nodes and heap entries run from 1.  Entry 0          for both the heap and nodes is a sentinel.        */	WITHOUT_CLASSIFICATION	0.9999992920844736	WITHOUT_CLASSIFICATION	7.079155265045564E-7	DEFECT
//        blockNo++;	WITHOUT_CLASSIFICATION	0.9999987503087615	WITHOUT_CLASSIFICATION	1.2496912384809756E-6	DEFECT
// // When we get here we have EITHER: // o An empty "assemble" buffer. // o No bytes to write (numToWrite == 0) //	WITHOUT_CLASSIFICATION	0.9999982819915016	WITHOUT_CLASSIFICATION	1.7180084984566999E-6	DEFECT
/* Write `magic' bytes h indicating file-format == huffmanised,           followed by a digit indicating blockSize100k.        */	WITHOUT_CLASSIFICATION	0.9999999723367733	WITHOUT_CLASSIFICATION	2.766322674397827E-8	DEFECT
//        ch = 0;	WITHOUT_CLASSIFICATION	0.9999997381851895	WITHOUT_CLASSIFICATION	2.618148105501804E-7	DEFECT
/* 20 is just a paranoia constant */	WITHOUT_CLASSIFICATION	0.9999983342181887	WITHOUT_CLASSIFICATION	1.6657818111702858E-6	DEFECT
// empty block at end of file	WITHOUT_CLASSIFICATION	0.9999995378133424	WITHOUT_CLASSIFICATION	4.621866576516918E-7	DEFECT
/* sort the block and establish posn of original string */	WITHOUT_CLASSIFICATION	0.9999985354127177	WITHOUT_CLASSIFICATION	1.4645872823948012E-6	DEFECT
/* Now the block's CRC, so it is in a known place. */	WITHOUT_CLASSIFICATION	0.9999999369401182	WITHOUT_CLASSIFICATION	6.305988176788119E-8	DEFECT
/* Now a single bit indicating randomisation. */	WITHOUT_CLASSIFICATION	0.9999900466462812	WITHOUT_CLASSIFICATION	9.953353718910513E-6	DEFECT
/* Finally, block's contents proper. */	WITHOUT_CLASSIFICATION	0.9999940222800442	WITHOUT_CLASSIFICATION	5.977719955798827E-6	DEFECT
/*          Now another magic 48-bit number, 0x177245385090, to          indicate the end of the last block.  (sqrt(pi), if          you want to know.  I did want to use e, but it contains          too much repetition -- 27 18 28 18 28 46 -- for me          to feel statistically comfortable.  Call me paranoid.)        */	WITHOUT_CLASSIFICATION	0.9999996797299088	WITHOUT_CLASSIFICATION	3.2027009120405035E-7	DEFECT
// write 8-bit	WITHOUT_CLASSIFICATION	0.9999996935197215	WITHOUT_CLASSIFICATION	3.064802785230163E-7	DEFECT
// write 8-bit	WITHOUT_CLASSIFICATION	0.9999996935197215	WITHOUT_CLASSIFICATION	3.064802785230163E-7	DEFECT
// write 8-bit	WITHOUT_CLASSIFICATION	0.9999996935197215	WITHOUT_CLASSIFICATION	3.064802785230163E-7	DEFECT
// write 8-bit	WITHOUT_CLASSIFICATION	0.9999996935197215	WITHOUT_CLASSIFICATION	3.064802785230163E-7	DEFECT
// write 8-bit	WITHOUT_CLASSIFICATION	0.9999996935197215	WITHOUT_CLASSIFICATION	3.064802785230163E-7	DEFECT
// write 8-bit	WITHOUT_CLASSIFICATION	0.9999996935197215	WITHOUT_CLASSIFICATION	3.064802785230163E-7	DEFECT
/* Decide how many coding tables to use */	WITHOUT_CLASSIFICATION	0.9996135606969477	WITHOUT_CLASSIFICATION	3.8643930305234795E-4	DEFECT
/* Generate an initial set of coding tables */	WITHOUT_CLASSIFICATION	0.9999998917799044	WITHOUT_CLASSIFICATION	1.0822009564968691E-7	DEFECT
/*          Iterate up to N_ITERS times to improve the tables.        */	WITHOUT_CLASSIFICATION	0.9999999906723929	WITHOUT_CLASSIFICATION	9.327607238056993E-9	DEFECT
/* Compute MTF values for the selectors. */	WITHOUT_CLASSIFICATION	0.9999999795383301	WITHOUT_CLASSIFICATION	2.0461669909253564E-8	DEFECT
/* Assign actual codes for the tables. */	WITHOUT_CLASSIFICATION	0.9999829170075696	WITHOUT_CLASSIFICATION	1.7082992430433396E-5	DEFECT
/* Transmit the mapping table. */	WITHOUT_CLASSIFICATION	0.999999671556601	WITHOUT_CLASSIFICATION	3.284433990005464E-7	DEFECT
/* Now the selectors. */	WITHOUT_CLASSIFICATION	0.9999998139613057	WITHOUT_CLASSIFICATION	1.860386943462112E-7	DEFECT
/* Now the coding tables. */	WITHOUT_CLASSIFICATION	0.9999982005442676	WITHOUT_CLASSIFICATION	1.7994557324652521E-6	DEFECT
/* And finally, the block data proper */	WITHOUT_CLASSIFICATION	0.999761847834168	WITHOUT_CLASSIFICATION	2.3815216583215036E-4	DEFECT
/* Set group start & end marks. */	WITHOUT_CLASSIFICATION	0.9999999087768976	WITHOUT_CLASSIFICATION	9.122310239657467E-8	DEFECT
/*                  Calculate the cost of this group as coded                  by each of the coding tables.                */	WITHOUT_CLASSIFICATION	0.9999999890175527	WITHOUT_CLASSIFICATION	1.0982447279289701E-8	DEFECT
// unrolled version of the else-block	WITHOUT_CLASSIFICATION	0.9999991906000474	WITHOUT_CLASSIFICATION	8.093999525723514E-7	DEFECT
/*                  Find the coding table which is best for this group,                  and record its identity in the selector table.                */	WITHOUT_CLASSIFICATION	0.999999159474307	WITHOUT_CLASSIFICATION	8.405256931900298E-7	DEFECT
/*                  Increment the symbol frequencies for the selected table.                */	WITHOUT_CLASSIFICATION	0.9999997731322646	WITHOUT_CLASSIFICATION	2.268677354405612E-7	DEFECT
/*              Recompute the tables based on the accumulated frequencies.            */	WITHOUT_CLASSIFICATION	0.9999997375943059	WITHOUT_CLASSIFICATION	2.624056941138657E-7	DEFECT
// inlined: bsW(1, inUse[i16 + j] ? 1 : 0);	WITHOUT_CLASSIFICATION	0.999999934674175	WITHOUT_CLASSIFICATION	6.532582503193998E-8	DEFECT
// inlined: bsW(1, 1);	WITHOUT_CLASSIFICATION	0.9999987941079863	WITHOUT_CLASSIFICATION	1.2058920137004851E-6	DEFECT
// inlined: bsW(1, 0);	WITHOUT_CLASSIFICATION	0.9999992435662929	WITHOUT_CLASSIFICATION	7.564337071499324E-7	DEFECT
// inlined: bsW(1, 0);	WITHOUT_CLASSIFICATION	0.9999992435662929	WITHOUT_CLASSIFICATION	7.564337071499324E-7	DEFECT
//bsBuffShadow |= 0 << (32 - bsLiveShadow - 1);	WITHOUT_CLASSIFICATION	0.999998771839471	WITHOUT_CLASSIFICATION	1.2281605290605461E-6	DEFECT
// inlined: bsW(5, curr);	WITHOUT_CLASSIFICATION	0.9999995495383286	WITHOUT_CLASSIFICATION	4.5046167146432774E-7	DEFECT
// inlined: bsW(2, 2);	WITHOUT_CLASSIFICATION	0.9999989199114505	WITHOUT_CLASSIFICATION	1.0800885495272229E-6	DEFECT
/* 10 */	WITHOUT_CLASSIFICATION	0.9999889290613039	WITHOUT_CLASSIFICATION	1.1070938696127218E-5	DEFECT
// inlined: bsW(2, 3);	WITHOUT_CLASSIFICATION	0.9999985031846036	WITHOUT_CLASSIFICATION	1.4968153963540417E-6	DEFECT
/* 11 */	WITHOUT_CLASSIFICATION	0.9999930716423365	WITHOUT_CLASSIFICATION	6.928357663412934E-6	DEFECT
// copy	WITHOUT_CLASSIFICATION	0.9999920534472921	WITHOUT_CLASSIFICATION	7.9465527079297E-6	DEFECT
// start inline mainGTU	WITHOUT_CLASSIFICATION	0.9999999397645274	WITHOUT_CLASSIFICATION	6.023547267517923E-8	DEFECT
// following could be done in a loop, but // unrolled it for performance:	WITHOUT_CLASSIFICATION	0.9999995941386424	WITHOUT_CLASSIFICATION	4.058613576675164E-7	DEFECT
// while x > 0	WITHOUT_CLASSIFICATION	0.999999803344876	WITHOUT_CLASSIFICATION	1.9665512398565725E-7	DEFECT
// Set up the 2-byte frequency table	WITHOUT_CLASSIFICATION	0.9999999218905568	WITHOUT_CLASSIFICATION	7.81094431837256E-8	DEFECT
/*          In the various block-sized structures, live data runs          from 0 to last+NUM_OVERSHOOT_BYTES inclusive.  First,          set up the overshoot area for block.        */	WITHOUT_CLASSIFICATION	0.9999999998120307	WITHOUT_CLASSIFICATION	1.8796922278195237E-10	DEFECT
// Complete the initial radix sort:	WITHOUT_CLASSIFICATION	0.9999999046233063	WITHOUT_CLASSIFICATION	9.537669355993074E-8	DEFECT
/*              Now ftab contains the first loc of every small bucket.              Calculate the running order, from smallest to largest              big bucket.        */	WITHOUT_CLASSIFICATION	0.9999999990378844	WITHOUT_CLASSIFICATION	9.621156294704764E-10	DEFECT
/*              The main sorting loop.        */	WITHOUT_CLASSIFICATION	0.9999998794246743	WITHOUT_CLASSIFICATION	1.2057532575943025E-7	DEFECT
/*                  Process big buckets, starting with the least full.            */	WITHOUT_CLASSIFICATION	0.9999997892450835	WITHOUT_CLASSIFICATION	2.1075491641498415E-7	DEFECT
// Step 1:	WITHOUT_CLASSIFICATION	0.9999987337260666	WITHOUT_CLASSIFICATION	1.2662739333715638E-6	DEFECT
// Step 3:	WITHOUT_CLASSIFICATION	0.9999985267398619	WITHOUT_CLASSIFICATION	1.4732601381437523E-6	DEFECT
// handle 16 bit signed numbers	WITHOUT_CLASSIFICATION	0.9999999954957425	WITHOUT_CLASSIFICATION	4.504257521547473E-9	DEFECT
// make maps	WITHOUT_CLASSIFICATION	0.9999979059539991	WITHOUT_CLASSIFICATION	2.094046001006442E-6	DEFECT
/* directory with respect to       */	WITHOUT_CLASSIFICATION	0.9999912446465737	WITHOUT_CLASSIFICATION	8.755353426346706E-6	DEFECT
// with blockSize 900k //     256 byte //     256 byte //    1032 byte //   18002 byte //   18002 byte	WITHOUT_CLASSIFICATION	0.9999815908555506	WITHOUT_CLASSIFICATION	1.8409144449398477E-5	DEFECT
//     256 byte //    1548 byte //    6192 byte //      24 byte //      12 byte //    6192 byte //       6 byte //      16 byte	WITHOUT_CLASSIFICATION	0.9999810208368255	WITHOUT_CLASSIFICATION	1.89791631745454E-5	DEFECT
//    4000 byte //    4000 byte //    4000 byte	WITHOUT_CLASSIFICATION	0.999993153127119	WITHOUT_CLASSIFICATION	6.846872880944783E-6	DEFECT
//    1024 byte //    1024 byte //     256 byte	WITHOUT_CLASSIFICATION	0.9999946437986925	WITHOUT_CLASSIFICATION	5.35620130746643E-6	DEFECT
//    1040 byte //    2064 byte //    2064 byte	WITHOUT_CLASSIFICATION	0.9999913545993292	WITHOUT_CLASSIFICATION	8.645400670773431E-6	DEFECT
//  262148 byte // ------------ //  333408 byte	WITHOUT_CLASSIFICATION	0.9999937073271603	WITHOUT_CLASSIFICATION	6.2926728396738E-6	DEFECT
// Just print a message, like the previous versions of this class did	WITHOUT_CLASSIFICATION	0.9999856710297685	WITHOUT_CLASSIFICATION	1.4328970231469136E-5	DEFECT
// Variables used by setup* methods exclusively	WITHOUT_CLASSIFICATION	0.9999999828106895	WITHOUT_CLASSIFICATION	1.7189310589012152E-8	DEFECT
// currBlockNo++;	WITHOUT_CLASSIFICATION	0.9999987092782623	WITHOUT_CLASSIFICATION	1.2907217377358158E-6	DEFECT
// A bad CRC is considered a fatal error.	WITHOUT_CLASSIFICATION	0.9998078341866861	WITHOUT_CLASSIFICATION	1.921658133139726E-4	DEFECT
/* Receive the mapping table */	WITHOUT_CLASSIFICATION	0.9999936123701654	WITHOUT_CLASSIFICATION	6.387629834621403E-6	DEFECT
/* Now the selectors */	WITHOUT_CLASSIFICATION	0.9999990322101743	WITHOUT_CLASSIFICATION	9.677898257004811E-7	DEFECT
/* Undo the MTF values for the selectors. */	WITHOUT_CLASSIFICATION	0.9999998642777993	WITHOUT_CLASSIFICATION	1.3572220072136331E-7	DEFECT
// nearly all times v is zero, 4 in most other cases	WITHOUT_CLASSIFICATION	0.9999982861999117	WITHOUT_CLASSIFICATION	1.7138000883577252E-6	DEFECT
/* Now the coding tables */	WITHOUT_CLASSIFICATION	0.9999857045950477	WITHOUT_CLASSIFICATION	1.429540495238836E-5	DEFECT
// finally create the Huffman tables	WITHOUT_CLASSIFICATION	0.9999998575768033	WITHOUT_CLASSIFICATION	1.4242319673785665E-7	DEFECT
// end of file // '1' // ')' // 'Y' // '&' // 'S' // 'Y'	WITHOUT_CLASSIFICATION	0.9999954221639797	WITHOUT_CLASSIFICATION	4.577836020199858E-6	DEFECT
// Inlined: // int zvec = bsR(zn);	WITHOUT_CLASSIFICATION	0.9999989967981394	WITHOUT_CLASSIFICATION	1.0032018605490427E-6	DEFECT
// Inlined: // int zvec = bsR(zn);	WITHOUT_CLASSIFICATION	0.9999989967981394	WITHOUT_CLASSIFICATION	1.0032018605490427E-6	DEFECT
/*                  This loop is hammered during decompression,                  hence avoid native method call overhead of                  System.arraycopy for very small ranges to copy.                */	WITHOUT_CLASSIFICATION	0.9999639103672171	WITHOUT_CLASSIFICATION	3.608963278299375E-5	DEFECT
/* not a char and not EOF */	WITHOUT_CLASSIFICATION	0.9999988784848639	WITHOUT_CLASSIFICATION	1.1215151360196465E-6	DEFECT
// (with blockSize 900k) //      256 byte	WITHOUT_CLASSIFICATION	0.9999528756970031	WITHOUT_CLASSIFICATION	4.7124302996855455E-5	DEFECT
//     1024 byte	WITHOUT_CLASSIFICATION	0.9999977420647598	WITHOUT_CLASSIFICATION	2.257935240251075E-6	DEFECT
// No need to keep track of Bcc'd addresses	WITHOUT_CLASSIFICATION	0.9999995672288743	WITHOUT_CLASSIFICATION	4.3277112566116955E-7	DEFECT
// Blindly trust the user doesn't set any invalid headers	WITHOUT_CLASSIFICATION	0.9999978290456681	WITHOUT_CLASSIFICATION	2.170954331847448E-6	DEFECT
// RFC 822 s4.1: "Reply-To:" header is optional	WITHOUT_CLASSIFICATION	0.9999498582596852	WITHOUT_CLASSIFICATION	5.014174031477691E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999997594604898	WITHOUT_CLASSIFICATION	2.4053951019376697E-7	DEFECT
// Mac does \n\r, but that's tough to distinguish from Windows \r\n\r\n. // Don't tackle that problem right now.	WITHOUT_CLASSIFICATION	0.9989699098075171	WITHOUT_CLASSIFICATION	0.0010300901924829083	DEFECT
// support "address (name)"	WITHOUT_CLASSIFICATION	0.9999995081803155	WITHOUT_CLASSIFICATION	4.918196845361431E-7	DEFECT
// support "(name) address"	WITHOUT_CLASSIFICATION	0.9999995259913037	WITHOUT_CLASSIFICATION	4.7400869630773684E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999229243365	WITHOUT_CLASSIFICATION	7.707566353111588E-8	DEFECT
//      256 byte //    18002 byte //    18002 byte	WITHOUT_CLASSIFICATION	0.9999871549532348	WITHOUT_CLASSIFICATION	1.2845046765199648E-5	DEFECT
//     6192 byte //     6192 byte //     6192 byte //       24 byte	WITHOUT_CLASSIFICATION	0.9999913141959119	WITHOUT_CLASSIFICATION	8.685804088135467E-6	DEFECT
//     1028 byte //      512 byte //     3096 byte //        6 byte //--------------- //    60798 byte	WITHOUT_CLASSIFICATION	0.9999762200213377	WITHOUT_CLASSIFICATION	2.3779978662225892E-5	DEFECT
//  3600000 byte //   900000 byte //--------------- //  4560782 byte //===============	WITHOUT_CLASSIFICATION	0.999972982388251	WITHOUT_CLASSIFICATION	2.7017611749038944E-5	DEFECT
// RFC 822 s4.1: "From:" header must be sent // We rely on error checking by the MTA	WITHOUT_CLASSIFICATION	0.9999220119993775	WITHOUT_CLASSIFICATION	7.798800062255691E-5	DEFECT
// RFC 822 s4.1: //   "Header fields are NOT required to occur in any particular order, //    except that the message body MUST occur AFTER the headers" // (the same section specifies a reccommended order, which we ignore)	WITHOUT_CLASSIFICATION	0.9999974713706468	WITHOUT_CLASSIFICATION	2.528629353219547E-6	DEFECT
// Make a limited attempt to extract a sanitized email address // Prefer text in <brackets>, ignore anything in (parentheses)	WITHOUT_CLASSIFICATION	0.999916627912291	WITHOUT_CLASSIFICATION	8.33720877090614E-5	DEFECT
// * * * * * Raw protocol methods below here * * * * *	WITHOUT_CLASSIFICATION	0.9999922981803895	WITHOUT_CLASSIFICATION	7.701819610542782E-6	DEFECT
// make sure dot is on new line	WITHOUT_CLASSIFICATION	0.9999713498986839	WITHOUT_CLASSIFICATION	2.865010131602675E-5	DEFECT
// raw supports <CRLF>.<CRLF>	WITHOUT_CLASSIFICATION	0.9999998102907083	WITHOUT_CLASSIFICATION	1.8970929169530816E-7	DEFECT
// Check that the response is one of the valid codes	WITHOUT_CLASSIFICATION	0.9999984680272673	WITHOUT_CLASSIFICATION	1.5319727326638342E-6	DEFECT
// deprecated, but email is byte-oriented	WITHOUT_CLASSIFICATION	0.9999872783518129	WITHOUT_CLASSIFICATION	1.272164818701071E-5	DEFECT
// ensure always \r\n	WITHOUT_CLASSIFICATION	0.9999996143756844	WITHOUT_CLASSIFICATION	3.856243156279696E-7	DEFECT
// Mac does \n\r, but that's tough to distinguish from Windows \r\n\r\n. // Don't tackle that problem right now.	WITHOUT_CLASSIFICATION	0.9989699098075171	WITHOUT_CLASSIFICATION	0.0010300901924829083	DEFECT
// add extra dot	WITHOUT_CLASSIFICATION	0.999999303623846	WITHOUT_CLASSIFICATION	6.963761538581476E-7	DEFECT
// add extra dot	WITHOUT_CLASSIFICATION	0.999999303623846	WITHOUT_CLASSIFICATION	6.963761538581476E-7	DEFECT
// ensure always \r\n	WITHOUT_CLASSIFICATION	0.9999996143756844	WITHOUT_CLASSIFICATION	3.856243156279696E-7	DEFECT
// UNDONE	WITHOUT_CLASSIFICATION	0.9999987554859937	WITHOUT_CLASSIFICATION	1.2445140062927038E-6	DEFECT
// create a TarEntry for the LongLink, the contents // of which are the entry's name	WITHOUT_CLASSIFICATION	0.999999993403955	WITHOUT_CLASSIFICATION	6.596045019563309E-9	DEFECT
// Strip off drive letters! // REVIEW Would a better check be "(File.separator == '\')"?	WITHOUT_CLASSIFICATION	0.9999999836445449	WITHOUT_CLASSIFICATION	1.6355455030242368E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999229243365	WITHOUT_CLASSIFICATION	7.707566353111588E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999229243365	WITHOUT_CLASSIFICATION	7.707566353111588E-8	DEFECT
// No absolute pathnames // Windows (and Posix?) paths can start with "\\NetworkDrive\", // so we loop on starting /'s.	WITHOUT_CLASSIFICATION	0.9999997652300519	WITHOUT_CLASSIFICATION	2.347699482626335E-7	DEFECT
/* start of the central directory  */	WITHOUT_CLASSIFICATION	0.9999998987826201	WITHOUT_CLASSIFICATION	1.0121737996257879E-7	DEFECT
// REVIEW // This is horribly inefficient, but it ensures that we // properly skip over bytes via the TarBuffer... //	WITHOUT_CLASSIFICATION	0.9999792709320627	WITHOUT_CLASSIFICATION	2.0729067937197854E-5	DEFECT
// read in the name	WITHOUT_CLASSIFICATION	0.999999171435394	WITHOUT_CLASSIFICATION	8.285646061006986E-7	DEFECT
// remove trailing null terminator	WITHOUT_CLASSIFICATION	0.9999898424806787	WITHOUT_CLASSIFICATION	1.0157519321201549E-5	DEFECT
// Unexpected EOF!	WITHOUT_CLASSIFICATION	0.9999991737350629	WITHOUT_CLASSIFICATION	8.262649371179129E-7	DEFECT
// ---------------------------------------------------------- // somewhat arbitrary choices that are quite common for shared // installations // -----------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999989616818717	WITHOUT_CLASSIFICATION	1.0383181282199823E-6	DEFECT
/* method is STORED and we used RandomAccessFile */	WITHOUT_CLASSIFICATION	0.9999987427785715	WITHOUT_CLASSIFICATION	1.257221428458248E-6	DEFECT
// If random access output, write the local file header containing // the correct CRC and compressed/uncompressed sizes	WITHOUT_CLASSIFICATION	0.999999561626662	WITHOUT_CLASSIFICATION	4.383733380556271E-7	DEFECT
// not specified	WITHOUT_CLASSIFICATION	0.9999997004069502	WITHOUT_CLASSIFICATION	2.995930497907376E-7	DEFECT
// not specified	WITHOUT_CLASSIFICATION	0.9999997004069502	WITHOUT_CLASSIFICATION	2.995930497907376E-7	DEFECT
// Size/CRC not required if RandomAccessFile is used	WITHOUT_CLASSIFICATION	0.9999949323879725	WITHOUT_CLASSIFICATION	5.067612027429165E-6	DEFECT
/*     * Various ZIP constants     */	WITHOUT_CLASSIFICATION	0.9999996976426394	WITHOUT_CLASSIFICATION	3.0235736062902E-7	DEFECT
//store method in local variable to prevent multiple method calls	WITHOUT_CLASSIFICATION	0.9999992665468126	WITHOUT_CLASSIFICATION	7.334531874253701E-7	DEFECT
// bit3 set to signal, we use a data descriptor	WITHOUT_CLASSIFICATION	0.9999998622458679	WITHOUT_CLASSIFICATION	1.3775413210267618E-7	DEFECT
// bit3 set to signal, we use a data descriptor	WITHOUT_CLASSIFICATION	0.9999998622458679	WITHOUT_CLASSIFICATION	1.3775413210267618E-7	DEFECT
// compression method	WITHOUT_CLASSIFICATION	0.9999945850811525	WITHOUT_CLASSIFICATION	5.414918847561187E-6	DEFECT
// compression method	WITHOUT_CLASSIFICATION	0.9999945850811525	WITHOUT_CLASSIFICATION	5.414918847561187E-6	DEFECT
// last mod. time and date	WITHOUT_CLASSIFICATION	0.9999991822018109	WITHOUT_CLASSIFICATION	8.17798189180356E-7	DEFECT
// file name length	WITHOUT_CLASSIFICATION	0.9999993983196084	WITHOUT_CLASSIFICATION	6.016803915302361E-7	DEFECT
// extra field length	WITHOUT_CLASSIFICATION	0.9999995601840619	WITHOUT_CLASSIFICATION	4.3981593806289676E-7	DEFECT
// file name	WITHOUT_CLASSIFICATION	0.9999995787303331	WITHOUT_CLASSIFICATION	4.212696669462987E-7	DEFECT
// extra field	WITHOUT_CLASSIFICATION	0.9999994881084714	WITHOUT_CLASSIFICATION	5.118915286226788E-7	DEFECT
// version made by	WITHOUT_CLASSIFICATION	0.9999993192774537	WITHOUT_CLASSIFICATION	6.807225462198598E-7	DEFECT
// version needed to extract // general purpose bit flag	WITHOUT_CLASSIFICATION	0.9999994925645481	WITHOUT_CLASSIFICATION	5.074354519770689E-7	DEFECT
// last mod. time and date	WITHOUT_CLASSIFICATION	0.9999991822018109	WITHOUT_CLASSIFICATION	8.17798189180356E-7	DEFECT
// requires version 2 as we are going to store length info // in the data descriptor	WITHOUT_CLASSIFICATION	0.9999881674808678	WITHOUT_CLASSIFICATION	1.1832519132108574E-5	DEFECT
// file name length	WITHOUT_CLASSIFICATION	0.9999993983196084	WITHOUT_CLASSIFICATION	6.016803915302361E-7	DEFECT
// CRC // compressed length // uncompressed length	WITHOUT_CLASSIFICATION	0.9999996705000377	WITHOUT_CLASSIFICATION	3.2949996236521715E-7	DEFECT
// extra field length	WITHOUT_CLASSIFICATION	0.9999995601840619	WITHOUT_CLASSIFICATION	4.3981593806289676E-7	DEFECT
// file name	WITHOUT_CLASSIFICATION	0.9999995787303331	WITHOUT_CLASSIFICATION	4.212696669462987E-7	DEFECT
// extra field	WITHOUT_CLASSIFICATION	0.9999994881084714	WITHOUT_CLASSIFICATION	5.118915286226788E-7	DEFECT
// file comment length	WITHOUT_CLASSIFICATION	0.9999925103765911	WITHOUT_CLASSIFICATION	7.489623408929253E-6	DEFECT
// disk number start	WITHOUT_CLASSIFICATION	0.9999992496677088	WITHOUT_CLASSIFICATION	7.503322910993765E-7	DEFECT
// internal file attributes	WITHOUT_CLASSIFICATION	0.9999999929660289	WITHOUT_CLASSIFICATION	7.03397105474242E-9	DEFECT
// external file attributes	WITHOUT_CLASSIFICATION	0.9999999650651391	WITHOUT_CLASSIFICATION	3.4934860970170114E-8	DEFECT
// relative offset of LFH	WITHOUT_CLASSIFICATION	0.9999999913416896	WITHOUT_CLASSIFICATION	8.658310472661704E-9	DEFECT
// disk numbers	WITHOUT_CLASSIFICATION	0.9999996652703086	WITHOUT_CLASSIFICATION	3.347296914356745E-7	DEFECT
// number of entries	WITHOUT_CLASSIFICATION	0.9999999524236072	WITHOUT_CLASSIFICATION	4.757639280199931E-8	DEFECT
// length and location of CD	WITHOUT_CLASSIFICATION	0.9999968688909999	WITHOUT_CLASSIFICATION	3.131109000078077E-6	DEFECT
// ZIP file comment	WITHOUT_CLASSIFICATION	0.9999890485798375	WITHOUT_CLASSIFICATION	1.0951420162435659E-5	DEFECT
// array not exhausted	WITHOUT_CLASSIFICATION	0.999999516870714	WITHOUT_CLASSIFICATION	4.831292859348546E-7	DEFECT
/* version made by                 */	WITHOUT_CLASSIFICATION	0.9999978711530186	WITHOUT_CLASSIFICATION	2.128846981471681E-6	DEFECT
/* version needed to extract       */	WITHOUT_CLASSIFICATION	0.999998452948587	WITHOUT_CLASSIFICATION	1.547051412927136E-6	DEFECT
/* general purpose bit flag        */	WITHOUT_CLASSIFICATION	0.9999995886449697	WITHOUT_CLASSIFICATION	4.1135503022792097E-7	DEFECT
/* compression method              */	WITHOUT_CLASSIFICATION	0.9999959859045753	WITHOUT_CLASSIFICATION	4.014095424709956E-6	DEFECT
/* last mod file time              */	WITHOUT_CLASSIFICATION	0.9999981388017829	WITHOUT_CLASSIFICATION	1.8611982170837587E-6	DEFECT
/* last mod file date              */	WITHOUT_CLASSIFICATION	0.9999984540354147	WITHOUT_CLASSIFICATION	1.5459645853368951E-6	DEFECT
/* crc-32                          */	WITHOUT_CLASSIFICATION	0.9999958063740426	WITHOUT_CLASSIFICATION	4.193625957292885E-6	DEFECT
/* uncompressed size               */	WITHOUT_CLASSIFICATION	0.9999979966338205	WITHOUT_CLASSIFICATION	2.003366179542311E-6	DEFECT
/* filename length                 */	WITHOUT_CLASSIFICATION	0.999996288793133	WITHOUT_CLASSIFICATION	3.7112068670298433E-6	DEFECT
/* extra field length              */	WITHOUT_CLASSIFICATION	0.9999981757578709	WITHOUT_CLASSIFICATION	1.8242421290574907E-6	DEFECT
/* file comment length             */	WITHOUT_CLASSIFICATION	0.999949997343733	WITHOUT_CLASSIFICATION	5.000265626692339E-5	DEFECT
/* internal file attributes        */	WITHOUT_CLASSIFICATION	0.999999858681726	WITHOUT_CLASSIFICATION	1.4131827391940948E-7	DEFECT
/* external file attributes        */	WITHOUT_CLASSIFICATION	0.9999996881491975	WITHOUT_CLASSIFICATION	3.1185080247383936E-7	DEFECT
/* relative offset of local header */	WITHOUT_CLASSIFICATION	0.9999999392813564	WITHOUT_CLASSIFICATION	6.071864353197669E-8	DEFECT
// disk number	WITHOUT_CLASSIFICATION	0.9999995055257196	WITHOUT_CLASSIFICATION	4.944742804081751E-7	DEFECT
// LFH offset,	WITHOUT_CLASSIFICATION	0.9999995583990304	WITHOUT_CLASSIFICATION	4.416009694831623E-7	DEFECT
// data offset will be filled later	WITHOUT_CLASSIFICATION	0.999998848075321	WITHOUT_CLASSIFICATION	1.1519246789452315E-6	DEFECT
/* end of central dir signature    */	WITHOUT_CLASSIFICATION	0.9999990163834699	WITHOUT_CLASSIFICATION	9.836165300488471E-7	DEFECT
/* number of this disk             */	WITHOUT_CLASSIFICATION	0.9999886791332849	WITHOUT_CLASSIFICATION	1.1320866715111739E-5	DEFECT
/* number of the disk with the     */	WITHOUT_CLASSIFICATION	0.9999986219835538	WITHOUT_CLASSIFICATION	1.3780164462019116E-6	DEFECT
/* start of the central directory  */	WITHOUT_CLASSIFICATION	0.9999998987826201	WITHOUT_CLASSIFICATION	1.0121737996257879E-7	DEFECT
/* the central dir on this disk    */	WITHOUT_CLASSIFICATION	0.9999849478616186	WITHOUT_CLASSIFICATION	1.5052138381399114E-5	DEFECT
/* the central dir                 */	WITHOUT_CLASSIFICATION	0.9999991956577976	WITHOUT_CLASSIFICATION	8.043422024292133E-7	DEFECT
/* size of the central directory   */	WITHOUT_CLASSIFICATION	0.9999993237627128	WITHOUT_CLASSIFICATION	6.762372871203348E-7	DEFECT
/* offset of start of central      */	WITHOUT_CLASSIFICATION	0.9999999852196997	WITHOUT_CLASSIFICATION	1.4780300432922858E-8	DEFECT
// empty	WITHOUT_CLASSIFICATION	0.9999985687054564	WITHOUT_CLASSIFICATION	1.4312945434658969E-6	DEFECT
// wait 2 second extras // the test failed with 100 ms of margin on cvs.apache.org on August 1st, 2003	WITHOUT_CLASSIFICATION	0.999689441962795	WITHOUT_CLASSIFICATION	3.105580372049456E-4	DEFECT
// dummy1 --> dummy2 --> dummy3 // (which holds a glob mapper from "*.java" to "*.class"	WITHOUT_CLASSIFICATION	0.999999280529279	WITHOUT_CLASSIFICATION	7.194707209363525E-7	DEFECT
// // *****  initialize test environment (called "bed")  ***** //	WITHOUT_CLASSIFICATION	0.9999999871118422	WITHOUT_CLASSIFICATION	1.2888157681767022E-8	DEFECT
// THIS WILL FAIL. //compareBytes("abc", "utf-16");	WITHOUT_CLASSIFICATION	0.9999967836077697	WITHOUT_CLASSIFICATION	3.216392230390114E-6	DEFECT
//catch script/ant mismatch with a meaningful message //we could ignore it, but there are likely to be other //version problems, so we stamp down on the configuration now	WITHOUT_CLASSIFICATION	0.9999998589185175	WITHOUT_CLASSIFICATION	1.4108148246967595E-7	DEFECT
//if there were no main targets, we list all subtargets //as it means nothing has a description	WITHOUT_CLASSIFICATION	0.9999997711219675	WITHOUT_CLASSIFICATION	2.2887803250374447E-7	DEFECT
// For NetWare, use the boolean=true mode, so we can use delimiter // information to make a better decision later.	WITHOUT_CLASSIFICATION	0.9999999986559468	WITHOUT_CLASSIFICATION	1.3440532166986843E-9	DEFECT
// we are on NetWare, tokenizing is handled a little differently, // due to the fact that NetWare has multiple-character volume names.	WITHOUT_CLASSIFICATION	0.9999998880169796	WITHOUT_CLASSIFICATION	1.1198302048570317E-7	DEFECT
// The readers return -1 if they end. So simply read the "prepend" // after that the "content" and at the end the "append" file.	WITHOUT_CLASSIFICATION	0.9999999439576294	WITHOUT_CLASSIFICATION	5.604237059009568E-8	DEFECT
// NB: this makes use of Project#setProperty rather than Project#setNewProperty //     due to backwards compatiblity reasons	WITHOUT_CLASSIFICATION	0.9999755112905784	WITHOUT_CLASSIFICATION	2.4488709421668386E-5	DEFECT
// If we've been successful on an update, delete the // temporary file	WITHOUT_CLASSIFICATION	0.9999999995387258	WITHOUT_CLASSIFICATION	4.6127432286772544E-10	DEFECT
// CheckStyle - magic numbers // checking for "X:\ 0=dquote,1=letter,2=:,3=\	WITHOUT_CLASSIFICATION	0.9999998799612753	WITHOUT_CLASSIFICATION	1.2003872479717292E-7	DEFECT
/* version needed to extract       */	WITHOUT_CLASSIFICATION	0.999998452948587	WITHOUT_CLASSIFICATION	1.547051412927136E-6	DEFECT
/* general purpose bit flag        */	WITHOUT_CLASSIFICATION	0.9999995886449697	WITHOUT_CLASSIFICATION	4.1135503022792097E-7	DEFECT
/* compression method              */	WITHOUT_CLASSIFICATION	0.9999959859045753	WITHOUT_CLASSIFICATION	4.014095424709956E-6	DEFECT
/* last mod file time              */	WITHOUT_CLASSIFICATION	0.9999981388017829	WITHOUT_CLASSIFICATION	1.8611982170837587E-6	DEFECT
/* last mod file date              */	WITHOUT_CLASSIFICATION	0.9999984540354147	WITHOUT_CLASSIFICATION	1.5459645853368951E-6	DEFECT
/* crc-32                          */	WITHOUT_CLASSIFICATION	0.9999958063740426	WITHOUT_CLASSIFICATION	4.193625957292885E-6	DEFECT
/* compressed size                 */	WITHOUT_CLASSIFICATION	0.9999975946380257	WITHOUT_CLASSIFICATION	2.4053619742092428E-6	DEFECT
/* uncompressed size               */	WITHOUT_CLASSIFICATION	0.9999979966338205	WITHOUT_CLASSIFICATION	2.003366179542311E-6	DEFECT
/* end of central dir signature    */	WITHOUT_CLASSIFICATION	0.9999990163834699	WITHOUT_CLASSIFICATION	9.836165300488471E-7	DEFECT
/* number of this disk             */	WITHOUT_CLASSIFICATION	0.9999886791332849	WITHOUT_CLASSIFICATION	1.1320866715111739E-5	DEFECT
/* number of the disk with the     */	WITHOUT_CLASSIFICATION	0.9999986219835538	WITHOUT_CLASSIFICATION	1.3780164462019116E-6	DEFECT
/* total number of entries in      */	WITHOUT_CLASSIFICATION	0.9999958753844221	WITHOUT_CLASSIFICATION	4.1246155779285865E-6	DEFECT
/* total number of entries in      */	WITHOUT_CLASSIFICATION	0.9999958753844221	WITHOUT_CLASSIFICATION	4.1246155779285865E-6	DEFECT
/* the central dir on this disk    */	WITHOUT_CLASSIFICATION	0.9999849478616186	WITHOUT_CLASSIFICATION	1.5052138381399114E-5	DEFECT
/* the central dir                 */	WITHOUT_CLASSIFICATION	0.9999991956577976	WITHOUT_CLASSIFICATION	8.043422024292133E-7	DEFECT
/* size of the central directory   */	WITHOUT_CLASSIFICATION	0.9999993237627128	WITHOUT_CLASSIFICATION	6.762372871203348E-7	DEFECT
/* the starting disk number        */	WITHOUT_CLASSIFICATION	0.9999990548398693	WITHOUT_CLASSIFICATION	9.451601307310832E-7	DEFECT
/* zipfile comment length          */	WITHOUT_CLASSIFICATION	0.9999818453721403	WITHOUT_CLASSIFICATION	1.8154627859692456E-5	DEFECT
/* local file header signature     */	WITHOUT_CLASSIFICATION	0.9999967670679893	WITHOUT_CLASSIFICATION	3.2329320106749784E-6	DEFECT
/*     * Converts DOS time to Java time (number of milliseconds since epoch).     */	WITHOUT_CLASSIFICATION	0.9999995754653747	WITHOUT_CLASSIFICATION	4.245346252787588E-7	DEFECT
// CRC will be added later	WITHOUT_CLASSIFICATION	0.9999989833428656	WITHOUT_CLASSIFICATION	1.0166571344459403E-6	DEFECT
/*<ZipExtraField>*/	WITHOUT_CLASSIFICATION	0.9999950870395814	WITHOUT_CLASSIFICATION	4.9129604186288944E-6	DEFECT
// initializes extra data to an empty byte array	WITHOUT_CLASSIFICATION	0.9999998853435859	WITHOUT_CLASSIFICATION	1.1465641409508921E-7	DEFECT
// MS-DOS read-only attribute	WITHOUT_CLASSIFICATION	0.9999978521070452	WITHOUT_CLASSIFICATION	2.1478929548238525E-6	DEFECT
// MS-DOS directory flag	WITHOUT_CLASSIFICATION	0.9999252933833352	WITHOUT_CLASSIFICATION	7.470661666476272E-5	DEFECT
// A "location" attribute for a node within a // Path object.	WITHOUT_CLASSIFICATION	0.9999978975507738	WITHOUT_CLASSIFICATION	2.1024492261965905E-6	DEFECT
// Just use the same directory as the file itself. // This directory will exist	WITHOUT_CLASSIFICATION	0.9999997204530723	WITHOUT_CLASSIFICATION	2.7954692772022863E-7	DEFECT
// JarIndex is sorting the directories by ascending order. // it has no value but cosmetic since it will be read into a // hashtable by the classloader, but we'll do so anyway.	WITHOUT_CLASSIFICATION	0.9999999188989972	WITHOUT_CLASSIFICATION	8.110100277920886E-8	DEFECT
// // Static //	WITHOUT_CLASSIFICATION	0.9999999102404427	WITHOUT_CLASSIFICATION	8.975955729676834E-8	DEFECT
//we mark the file to be deleted on exit. //the alternative would be to cache the filename and delete //after execution finished, which is much better for long-lived runtimes //though spawning complicates things...	WITHOUT_CLASSIFICATION	0.9998158445651767	WITHOUT_CLASSIFICATION	1.8415543482328675E-4	DEFECT
// Protected first so if any GUI tool offers a default // based on enum #0, it will be right.	WITHOUT_CLASSIFICATION	0.9999999701582449	WITHOUT_CLASSIFICATION	2.984175509022491E-8	DEFECT
// CheckStyle:VisibilityModifier OFF - bc // the source file // the destination file // the destination directory	WITHOUT_CLASSIFICATION	0.9999999990356684	WITHOUT_CLASSIFICATION	9.643315436241694E-10	DEFECT
// add dest dir to classpath so that previously compiled and // untouched classes are on classpath	WITHOUT_CLASSIFICATION	0.9999999751729902	WITHOUT_CLASSIFICATION	2.4827009765317208E-8	DEFECT
// build the command line from what we got the format is // cleartool checkout [options...] [viewpath ...] // as specified in the CLEARTOOL.EXE help	WITHOUT_CLASSIFICATION	0.9999999194033699	WITHOUT_CLASSIFICATION	8.059663014635091E-8	DEFECT
// build the command line from what we got. the format is // cleartool mkelem [options...] [viewpath ...] // as specified in the CLEARTOOL.EXE help	WITHOUT_CLASSIFICATION	0.9999989675149372	WITHOUT_CLASSIFICATION	1.0324850627676163E-6	DEFECT
// build the command line from what we got. the format is // cleartool mklabel [options...] [viewpath ...] // as specified in the CLEARTOOL help	WITHOUT_CLASSIFICATION	0.9999998675466936	WITHOUT_CLASSIFICATION	1.324533063787765E-7	DEFECT
// push the current iterator onto the stack and then // iterate through this directory.	WITHOUT_CLASSIFICATION	0.9999954404381154	WITHOUT_CLASSIFICATION	4.559561884704699E-6	DEFECT
// List of EJBs found in XML // One item within the Map // Is doc iAS or EJB descriptor	WITHOUT_CLASSIFICATION	0.9999999706198762	WITHOUT_CLASSIFICATION	2.9380123873950137E-8	DEFECT
// baseNameTerminator not found: the descriptor use the // JOnAS naming convention, ie [Foo.xml,jonas-Foo.xml] and // not [Foo<baseNameTerminator>-ejb-jar.xml, // Foo<baseNameTerminator>-jonas-ejb-jar.xml].	WITHOUT_CLASSIFICATION	0.999999641306494	WITHOUT_CLASSIFICATION	3.586935060140365E-7	DEFECT
// Loop through the files seeing if any has been touched // more recently than the destination jar.	WITHOUT_CLASSIFICATION	0.999999932640541	WITHOUT_CLASSIFICATION	6.735945890440407E-8	DEFECT
// read in the descriptor. Under weblogic, the descriptor is a weblogic // specific subclass which has references to the implementation classes. // These classes must, therefore, be in the classpath when the deployment // descriptor is loaded from the .ser file	WITHOUT_CLASSIFICATION	0.9999999956078043	WITHOUT_CLASSIFICATION	4.392195731000129E-9	DEFECT
//WARNING: We trim the values of all the attributes because //Some extension declarations are badly defined (ie have spaces //after version or vendor)	WITHOUT_CLASSIFICATION	0.9998980215686604	WITHOUT_CLASSIFICATION	1.0197843133962929E-4	DEFECT
// 2003-02-21 new replace algorithm by tbee (tbee@tbee.org) // because it wasn't able to replace something like "@aaa;@bbb;"	WITHOUT_CLASSIFICATION	0.9999963940307627	WITHOUT_CLASSIFICATION	3.605969237370703E-6	DEFECT
// convert backslashes to slashes, otherwise jjtree will // put this as comments and this seems to confuse javacc	WITHOUT_CLASSIFICATION	0.9999998268643584	WITHOUT_CLASSIFICATION	1.7313564168021144E-7	DEFECT
//although this code appears to duplicate that of ClasspathUtils.newInstance, //we cannot use that because this formatter may run in a forked process, //without that class.	WITHOUT_CLASSIFICATION	0.993297393752054	WITHOUT_CLASSIFICATION	0.006702606247946052	DEFECT
// build the command line from what we got the format is // ss History elements [-H] [-L] [-N] [-O] [-V] [-Y] [-#] [-?] // as specified in the SS.EXE help	WITHOUT_CLASSIFICATION	0.9999998375906975	WITHOUT_CLASSIFICATION	1.6240930242223067E-7	DEFECT
// this method has severe consequences on performance. We cannot rely // on the super.hashCode() method since super.getName() always return // the empty string in the current implemention (there's no setter) // so it is basically draining the performance of a hashmap lookup	WITHOUT_CLASSIFICATION	0.999992105970322	WITHOUT_CLASSIFICATION	7.894029677953787E-6	DEFECT
// If this TransformOperation has DrawOperation children // then Rotate the first child and return.	WITHOUT_CLASSIFICATION	0.9999999862911558	WITHOUT_CLASSIFICATION	1.370884416011565E-8	DEFECT
// converted from sun internal classes to // new Base64Converter // utility class extracted from Get task	WITHOUT_CLASSIFICATION	0.9999961181496321	WITHOUT_CLASSIFICATION	3.8818503678636095E-6	DEFECT
// // Cannot return a null source, because we have to call // setEntityResolver (see setEntityResolver javadoc comment) //	WITHOUT_CLASSIFICATION	0.9999986367834809	WITHOUT_CLASSIFICATION	1.3632165191336423E-6	DEFECT
// CRC // compressed length // uncompressed length	WITHOUT_CLASSIFICATION	0.9999996705000377	WITHOUT_CLASSIFICATION	3.2949996236521715E-7	DEFECT
// No further methods necessary. This is just an amalgamation of two other // interfaces.	WITHOUT_CLASSIFICATION	0.9999999840552765	WITHOUT_CLASSIFICATION	1.5944723527529674E-8	DEFECT
// // -----  The "Singleton"  ----- //	WITHOUT_CLASSIFICATION	0.9999993728249069	WITHOUT_CLASSIFICATION	6.271750929774949E-7	DEFECT
// If we had child elements, we need to indent before we close // the element, otherwise we're on the same line and don't need // to indent	WITHOUT_CLASSIFICATION	0.9999997987616054	WITHOUT_CLASSIFICATION	2.0123839469816613E-7	DEFECT
// The key is in the dictionary but cannot be retrieved // This is usually due references that refer to tasks // that have not been taskdefed in the current run. // Ignore	WITHOUT_CLASSIFICATION	0.9999991330188686	WITHOUT_CLASSIFICATION	8.669811314434064E-7	DEFECT
// write magic: done by caller who created this stream //this.out.write('B'); //this.out.write('Z');	WITHOUT_CLASSIFICATION	0.9997701732409251	WITHOUT_CLASSIFICATION	2.2982675907500105E-4	DEFECT
// CRC // Mode // SizDev // UID // GID	WITHOUT_CLASSIFICATION	0.9999992944463791	WITHOUT_CLASSIFICATION	7.055536207771568E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999999198791225	WITHOUT_CLASSIFICATION	8.012087743264267E-8	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999999198791225	WITHOUT_CLASSIFICATION	8.012087743264267E-8	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999999198791225	WITHOUT_CLASSIFICATION	8.012087743264267E-8	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999999198791225	WITHOUT_CLASSIFICATION	8.012087743264267E-8	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999999198791225	WITHOUT_CLASSIFICATION	8.012087743264267E-8	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999999198791225	WITHOUT_CLASSIFICATION	8.012087743264267E-8	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999999198791225	WITHOUT_CLASSIFICATION	8.012087743264267E-8	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999999198791225	WITHOUT_CLASSIFICATION	8.012087743264267E-8	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999997603527673	WITHOUT_CLASSIFICATION	2.3964723270312414E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999997603527673	WITHOUT_CLASSIFICATION	2.3964723270312414E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999997603527673	WITHOUT_CLASSIFICATION	2.3964723270312414E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999997603527673	WITHOUT_CLASSIFICATION	2.3964723270312414E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999997603527673	WITHOUT_CLASSIFICATION	2.3964723270312414E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999997603527673	WITHOUT_CLASSIFICATION	2.3964723270312414E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999999198791225	WITHOUT_CLASSIFICATION	8.012087743264267E-8	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999999198791225	WITHOUT_CLASSIFICATION	8.012087743264267E-8	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999999198791225	WITHOUT_CLASSIFICATION	8.012087743264267E-8	DEFECT
// ignored	WITHOUT_CLASSIFICATION	0.99999992604383	WITHOUT_CLASSIFICATION	7.395616997998882E-8	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999999198791225	WITHOUT_CLASSIFICATION	8.012087743264267E-8	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999999198791225	WITHOUT_CLASSIFICATION	8.012087743264267E-8	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999999198791225	WITHOUT_CLASSIFICATION	8.012087743264267E-8	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999999198791225	WITHOUT_CLASSIFICATION	8.012087743264267E-8	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999999198791225	WITHOUT_CLASSIFICATION	8.012087743264267E-8	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999999198791225	WITHOUT_CLASSIFICATION	8.012087743264267E-8	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999999198791225	WITHOUT_CLASSIFICATION	8.012087743264267E-8	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999999198791225	WITHOUT_CLASSIFICATION	8.012087743264267E-8	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999999198791225	WITHOUT_CLASSIFICATION	8.012087743264267E-8	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999999198791225	WITHOUT_CLASSIFICATION	8.012087743264267E-8	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999999198791225	WITHOUT_CLASSIFICATION	8.012087743264267E-8	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999999198791225	WITHOUT_CLASSIFICATION	8.012087743264267E-8	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999999198791225	WITHOUT_CLASSIFICATION	8.012087743264267E-8	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999999198791225	WITHOUT_CLASSIFICATION	8.012087743264267E-8	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999999198791225	WITHOUT_CLASSIFICATION	8.012087743264267E-8	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999999198791225	WITHOUT_CLASSIFICATION	8.012087743264267E-8	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999999198791225	WITHOUT_CLASSIFICATION	8.012087743264267E-8	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999999198791225	WITHOUT_CLASSIFICATION	8.012087743264267E-8	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999999198791225	WITHOUT_CLASSIFICATION	8.012087743264267E-8	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999999198791225	WITHOUT_CLASSIFICATION	8.012087743264267E-8	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999999198791225	WITHOUT_CLASSIFICATION	8.012087743264267E-8	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999999198791225	WITHOUT_CLASSIFICATION	8.012087743264267E-8	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999999198791225	WITHOUT_CLASSIFICATION	8.012087743264267E-8	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999999198791225	WITHOUT_CLASSIFICATION	8.012087743264267E-8	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999999198791225	WITHOUT_CLASSIFICATION	8.012087743264267E-8	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999999198791225	WITHOUT_CLASSIFICATION	8.012087743264267E-8	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999999198791225	WITHOUT_CLASSIFICATION	8.012087743264267E-8	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999999198791225	WITHOUT_CLASSIFICATION	8.012087743264267E-8	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999999198791225	WITHOUT_CLASSIFICATION	8.012087743264267E-8	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999999198791225	WITHOUT_CLASSIFICATION	8.012087743264267E-8	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999999198791225	WITHOUT_CLASSIFICATION	8.012087743264267E-8	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999999198791225	WITHOUT_CLASSIFICATION	8.012087743264267E-8	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999999198791225	WITHOUT_CLASSIFICATION	8.012087743264267E-8	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999999198791225	WITHOUT_CLASSIFICATION	8.012087743264267E-8	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999999198791225	WITHOUT_CLASSIFICATION	8.012087743264267E-8	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999999198791225	WITHOUT_CLASSIFICATION	8.012087743264267E-8	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999999198791225	WITHOUT_CLASSIFICATION	8.012087743264267E-8	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999999198791225	WITHOUT_CLASSIFICATION	8.012087743264267E-8	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999999198791225	WITHOUT_CLASSIFICATION	8.012087743264267E-8	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999999198791225	WITHOUT_CLASSIFICATION	8.012087743264267E-8	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999999198791225	WITHOUT_CLASSIFICATION	8.012087743264267E-8	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999999198791225	WITHOUT_CLASSIFICATION	8.012087743264267E-8	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999999198791225	WITHOUT_CLASSIFICATION	8.012087743264267E-8	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999999198791225	WITHOUT_CLASSIFICATION	8.012087743264267E-8	DEFECT
// do nothing	WITHOUT_CLASSIFICATION	0.9999982043584212	WITHOUT_CLASSIFICATION	1.795641578685672E-6	DEFECT
// do nothing	WITHOUT_CLASSIFICATION	0.9999982043584212	WITHOUT_CLASSIFICATION	1.795641578685672E-6	DEFECT
// do nothing	WITHOUT_CLASSIFICATION	0.9999982043584212	WITHOUT_CLASSIFICATION	1.795641578685672E-6	DEFECT
// selectors are implicitly ANDed in DirectoryScanner.  To // revert their logic we wrap them into a <none> selector // instead.	WITHOUT_CLASSIFICATION	0.99999999997397	WITHOUT_CLASSIFICATION	2.6029854601245753E-11	DEFECT
// now wait until the spawned process is finished	WITHOUT_CLASSIFICATION	0.9999982429764791	WITHOUT_CLASSIFICATION	1.7570235209184502E-6	DEFECT
// file doesn't exist -> property 'test' == null	WITHOUT_CLASSIFICATION	0.9999967576802921	WITHOUT_CLASSIFICATION	3.24231970803932E-6	DEFECT
// we don't expect to find this	WITHOUT_CLASSIFICATION	0.9999901211189367	WITHOUT_CLASSIFICATION	9.878881063235449E-6	DEFECT
// we don't expect to find this	WITHOUT_CLASSIFICATION	0.9999901211189367	WITHOUT_CLASSIFICATION	9.878881063235449E-6	DEFECT
// ignore expected	WITHOUT_CLASSIFICATION	0.9999999328320758	WITHOUT_CLASSIFICATION	6.716792424812435E-8	DEFECT
// keep track of what operating systems are supported here.	WITHOUT_CLASSIFICATION	0.9999981721953899	WITHOUT_CLASSIFICATION	1.8278046101207074E-6	DEFECT
// if we followed the symlink we just made we should // bypass the excludes.	WITHOUT_CLASSIFICATION	0.9999999417931078	WITHOUT_CLASSIFICATION	5.820689215022777E-8	DEFECT
// when the test is started by the build.xml of ant // if the property tests.and.ant.share.classloader is not set in the build.xml // a sysproperty with name tests.and.ant.share.classloader and value // ${tests.and.ant.share.classloader} will be set // we are trying to catch this here.	WITHOUT_CLASSIFICATION	0.9999880782626975	WITHOUT_CLASSIFICATION	1.1921737302382787E-5	DEFECT
/*             * throw in drive letters             */	WITHOUT_CLASSIFICATION	0.9999779786471461	WITHOUT_CLASSIFICATION	2.2021352853897605E-5	DEFECT
/*             * promised to eliminate consecutive slashes after drive letter.             */	WITHOUT_CLASSIFICATION	0.9999998350530251	WITHOUT_CLASSIFICATION	1.6494697480545712E-7	DEFECT
/*             * promised to eliminate consecutive slashes after drive letter.             */	WITHOUT_CLASSIFICATION	0.9999998350530251	WITHOUT_CLASSIFICATION	1.6494697480545712E-7	DEFECT
/*             * promised to eliminate consecutive slashes after drive letter.             */	WITHOUT_CLASSIFICATION	0.9999998350530251	WITHOUT_CLASSIFICATION	1.6494697480545712E-7	DEFECT
// avoid multiple configurations	WITHOUT_CLASSIFICATION	0.9999999789918438	WITHOUT_CLASSIFICATION	2.1008156249785075E-8	DEFECT
// ------------------------------------------------------ //   Helper methods // -----------------------------------------------------	WITHOUT_CLASSIFICATION	0.999998223780054	WITHOUT_CLASSIFICATION	1.7762199459693632E-6	DEFECT
// make sure the cache is cleared.	WITHOUT_CLASSIFICATION	0.9999984834531813	WITHOUT_CLASSIFICATION	1.5165468187264729E-6	DEFECT
//--- NULL JDBC driver just for simple test since there are no db driver // available as a default in Ant :)	WITHOUT_CLASSIFICATION	0.999999999902584	WITHOUT_CLASSIFICATION	9.741602885198434E-11	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.9999988519305086	WITHOUT_CLASSIFICATION	1.148069491363979E-6	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.9999988519305086	WITHOUT_CLASSIFICATION	1.148069491363979E-6	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.9999988519305086	WITHOUT_CLASSIFICATION	1.148069491363979E-6	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.9999988519305086	WITHOUT_CLASSIFICATION	1.148069491363979E-6	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.9999988519305086	WITHOUT_CLASSIFICATION	1.148069491363979E-6	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.9999988519305086	WITHOUT_CLASSIFICATION	1.148069491363979E-6	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.9999988519305086	WITHOUT_CLASSIFICATION	1.148069491363979E-6	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.9999988519305086	WITHOUT_CLASSIFICATION	1.148069491363979E-6	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.9999988519305086	WITHOUT_CLASSIFICATION	1.148069491363979E-6	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.9999988519305086	WITHOUT_CLASSIFICATION	1.148069491363979E-6	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.9999988519305086	WITHOUT_CLASSIFICATION	1.148069491363979E-6	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.9999988519305086	WITHOUT_CLASSIFICATION	1.148069491363979E-6	DEFECT
// wait 1 second extra to allow for java to start ... // this time was OK on a Win NT machine and on nagoya	WITHOUT_CLASSIFICATION	0.999951724970701	WITHOUT_CLASSIFICATION	4.8275029299162456E-5	DEFECT
// ------------------------------------------------------ //   Helper methods - should be in BuildFileTest // -----------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999844262518244	WITHOUT_CLASSIFICATION	1.5573748175667844E-5	DEFECT
// ------------------------------------------------------ //   Helper methods - should be in BuildFileTest // -----------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999844262518244	WITHOUT_CLASSIFICATION	1.5573748175667844E-5	DEFECT
// All three specified and all three exist -> true	WITHOUT_CLASSIFICATION	0.999999755476302	WITHOUT_CLASSIFICATION	2.445236979049547E-7	DEFECT
// Specified class is "" -> can not exist	WITHOUT_CLASSIFICATION	0.9999938770499611	WITHOUT_CLASSIFICATION	6.122950038927961E-6	DEFECT
// Core class that exists in system classpath is ignored, but found in specified classpath	WITHOUT_CLASSIFICATION	0.9999998540804829	WITHOUT_CLASSIFICATION	1.4591951711503268E-7	DEFECT
// File is not found in specified filepath	WITHOUT_CLASSIFICATION	0.9999996708674245	WITHOUT_CLASSIFICATION	3.2913257543904535E-7	DEFECT
//ignored	WITHOUT_CLASSIFICATION	0.9999978479346613	WITHOUT_CLASSIFICATION	2.1520653387437296E-6	DEFECT
// basedir of subant/subant-test2/subant.xml is .. // therefore we expect here the subant subdirectory	WITHOUT_CLASSIFICATION	0.9999869286767373	WITHOUT_CLASSIFICATION	1.307132326278926E-5	DEFECT
// 2 is != 0 and even, so it is considered // failure on any platform currently supported // by Execute#isFailure.	WITHOUT_CLASSIFICATION	0.9999789044723777	WITHOUT_CLASSIFICATION	2.109552762222653E-5	DEFECT
//         expectBuildExceptionContaining("testNoTld", //                 "Jasper found an error in a file", //                 "Java returned: 9");	WITHOUT_CLASSIFICATION	0.9999999794348383	WITHOUT_CLASSIFICATION	2.0565161682926657E-8	DEFECT
// The captureToSummary test writes to stdout and stderr, good for // verifying that the TestListener support doesn't break anything.	WITHOUT_CLASSIFICATION	0.9999988362589217	WITHOUT_CLASSIFICATION	1.163741078251683E-6	DEFECT
// testNoCrash is the test invoked by the captureToSummary's junit task	WITHOUT_CLASSIFICATION	0.9999999997927185	WITHOUT_CLASSIFICATION	2.072815078838753E-10	DEFECT
// tests one the file object	WITHOUT_CLASSIFICATION	0.9999999073478556	WITHOUT_CLASSIFICATION	9.265214438523499E-8	DEFECT
// tests one the file object	WITHOUT_CLASSIFICATION	0.9999999073478556	WITHOUT_CLASSIFICATION	9.265214438523499E-8	DEFECT
// tests one the file object	WITHOUT_CLASSIFICATION	0.9999999073478556	WITHOUT_CLASSIFICATION	9.265214438523499E-8	DEFECT
// tests one the file object	WITHOUT_CLASSIFICATION	0.9999999073478556	WITHOUT_CLASSIFICATION	9.265214438523499E-8	DEFECT
// tests one the file object	WITHOUT_CLASSIFICATION	0.9999999073478556	WITHOUT_CLASSIFICATION	9.265214438523499E-8	DEFECT
// viewpath	WITHOUT_CLASSIFICATION	0.9999995983828567	WITHOUT_CLASSIFICATION	4.016171432816335E-7	DEFECT
// conversion to URL via FileUtils like in XMLResultAggregator, not as suggested in the bug report	WITHOUT_CLASSIFICATION	0.9998906471418915	WITHOUT_CLASSIFICATION	1.093528581085207E-4	DEFECT
// conversion to URL via FileUtils like in XMLResultAggregator, not as suggested in the bug report	WITHOUT_CLASSIFICATION	0.9998906471418915	WITHOUT_CLASSIFICATION	1.093528581085207E-4	DEFECT
// conversion to URL via FileUtils like in XMLResultAggregator, not as suggested in the bug report	WITHOUT_CLASSIFICATION	0.9998906471418915	WITHOUT_CLASSIFICATION	1.093528581085207E-4	DEFECT
// conversion to URL via FileUtils like in XMLResultAggregator, not as suggested in the bug report	WITHOUT_CLASSIFICATION	0.9998906471418915	WITHOUT_CLASSIFICATION	1.093528581085207E-4	DEFECT
// We have extra elements	WITHOUT_CLASSIFICATION	0.9999999025108293	WITHOUT_CLASSIFICATION	9.748917076745321E-8	DEFECT
// Set up a VSSHistory task	WITHOUT_CLASSIFICATION	0.9999999549997648	WITHOUT_CLASSIFICATION	4.500023531305545E-8	DEFECT
// \ doesn't have a special meaning anymore - this is different from // what the Unix sh does but causes a lot of problems on DOS // based platforms otherwise	WITHOUT_CLASSIFICATION	0.9494351196838016	WITHOUT_CLASSIFICATION	0.05056488031619845	DEFECT
//check that dir and src are incompatible	WITHOUT_CLASSIFICATION	0.9999999098074742	WITHOUT_CLASSIFICATION	9.019252575236051E-8	DEFECT
// ================  testcases for the cache implementations  ================	WITHOUT_CLASSIFICATION	0.9999993294171203	WITHOUT_CLASSIFICATION	6.705828796676061E-7	DEFECT
// does the selection	WITHOUT_CLASSIFICATION	0.9999614541366677	WITHOUT_CLASSIFICATION	3.854586333241576E-5	DEFECT
// ==============  testcases for the algorithm implementations  ==============	WITHOUT_CLASSIFICATION	0.9999724976581125	WITHOUT_CLASSIFICATION	2.7502341887568005E-5	DEFECT
// =====================  scenario tests  =====================	WITHOUT_CLASSIFICATION	0.9999999078044527	WITHOUT_CLASSIFICATION	9.219554740078679E-8	DEFECT
// info text // list of files // expected result // result	WITHOUT_CLASSIFICATION	0.999999792127688	WITHOUT_CLASSIFICATION	2.0787231204447322E-7	DEFECT
//  =====================  helper methods and classes  ====================	WITHOUT_CLASSIFICATION	0.9999990549611185	WITHOUT_CLASSIFICATION	9.450388814553333E-7	DEFECT
// should be full moon	WITHOUT_CLASSIFICATION	0.9999965026451472	WITHOUT_CLASSIFICATION	3.4973548527015016E-6	DEFECT
// Try a silly case	WITHOUT_CLASSIFICATION	0.9999949474939309	WITHOUT_CLASSIFICATION	5.052506069100116E-6	DEFECT
// java.home is bogus	WITHOUT_CLASSIFICATION	0.9999996324132474	WITHOUT_CLASSIFICATION	3.6758675258158325E-7	DEFECT
// 60s // a further 30s	WITHOUT_CLASSIFICATION	0.9999999410833292	WITHOUT_CLASSIFICATION	5.891667082442101E-8	DEFECT
// 60s // a further 30s	WITHOUT_CLASSIFICATION	0.9999999410833292	WITHOUT_CLASSIFICATION	5.891667082442101E-8	DEFECT
// 60s // a further 30s	WITHOUT_CLASSIFICATION	0.9999999410833292	WITHOUT_CLASSIFICATION	5.891667082442101E-8	DEFECT
// order of headers cannot be guaranteed	WITHOUT_CLASSIFICATION	0.9999975598905666	WITHOUT_CLASSIFICATION	2.4401094334744464E-6	DEFECT
// order of headers cannot be guaranteed	WITHOUT_CLASSIFICATION	0.9999975598905666	WITHOUT_CLASSIFICATION	2.4401094334744464E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999997594604898	WITHOUT_CLASSIFICATION	2.4053951019376697E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999997594604898	WITHOUT_CLASSIFICATION	2.4053951019376697E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999997594604898	WITHOUT_CLASSIFICATION	2.4053951019376697E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999997594604898	WITHOUT_CLASSIFICATION	2.4053951019376697E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999997594604898	WITHOUT_CLASSIFICATION	2.4053951019376697E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999997594604898	WITHOUT_CLASSIFICATION	2.4053951019376697E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999997594604898	WITHOUT_CLASSIFICATION	2.4053951019376697E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999997594604898	WITHOUT_CLASSIFICATION	2.4053951019376697E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999997594604898	WITHOUT_CLASSIFICATION	2.4053951019376697E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999997594604898	WITHOUT_CLASSIFICATION	2.4053951019376697E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999997594604898	WITHOUT_CLASSIFICATION	2.4053951019376697E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999997594604898	WITHOUT_CLASSIFICATION	2.4053951019376697E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999997594604898	WITHOUT_CLASSIFICATION	2.4053951019376697E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999997594604898	WITHOUT_CLASSIFICATION	2.4053951019376697E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999997594604898	WITHOUT_CLASSIFICATION	2.4053951019376697E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999997594604898	WITHOUT_CLASSIFICATION	2.4053951019376697E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999997594604898	WITHOUT_CLASSIFICATION	2.4053951019376697E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999997594604898	WITHOUT_CLASSIFICATION	2.4053951019376697E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999997594604898	WITHOUT_CLASSIFICATION	2.4053951019376697E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999997594604898	WITHOUT_CLASSIFICATION	2.4053951019376697E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999997594604898	WITHOUT_CLASSIFICATION	2.4053951019376697E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999997594604898	WITHOUT_CLASSIFICATION	2.4053951019376697E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999997594604898	WITHOUT_CLASSIFICATION	2.4053951019376697E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999997594604898	WITHOUT_CLASSIFICATION	2.4053951019376697E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999997594604898	WITHOUT_CLASSIFICATION	2.4053951019376697E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999997594604898	WITHOUT_CLASSIFICATION	2.4053951019376697E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999997594604898	WITHOUT_CLASSIFICATION	2.4053951019376697E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999997594604898	WITHOUT_CLASSIFICATION	2.4053951019376697E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999997594604898	WITHOUT_CLASSIFICATION	2.4053951019376697E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999997594604898	WITHOUT_CLASSIFICATION	2.4053951019376697E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999997594604898	WITHOUT_CLASSIFICATION	2.4053951019376697E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999997594604898	WITHOUT_CLASSIFICATION	2.4053951019376697E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999997594604898	WITHOUT_CLASSIFICATION	2.4053951019376697E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999997594604898	WITHOUT_CLASSIFICATION	2.4053951019376697E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999997594604898	WITHOUT_CLASSIFICATION	2.4053951019376697E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999997594604898	WITHOUT_CLASSIFICATION	2.4053951019376697E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999997594604898	WITHOUT_CLASSIFICATION	2.4053951019376697E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999997594604898	WITHOUT_CLASSIFICATION	2.4053951019376697E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999997594604898	WITHOUT_CLASSIFICATION	2.4053951019376697E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999997594604898	WITHOUT_CLASSIFICATION	2.4053951019376697E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999997594604898	WITHOUT_CLASSIFICATION	2.4053951019376697E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999997594604898	WITHOUT_CLASSIFICATION	2.4053951019376697E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999997594604898	WITHOUT_CLASSIFICATION	2.4053951019376697E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999997594604898	WITHOUT_CLASSIFICATION	2.4053951019376697E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999997594604898	WITHOUT_CLASSIFICATION	2.4053951019376697E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999997594604898	WITHOUT_CLASSIFICATION	2.4053951019376697E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999997594604898	WITHOUT_CLASSIFICATION	2.4053951019376697E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999997594604898	WITHOUT_CLASSIFICATION	2.4053951019376697E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999997594604898	WITHOUT_CLASSIFICATION	2.4053951019376697E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999997594604898	WITHOUT_CLASSIFICATION	2.4053951019376697E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999997594604898	WITHOUT_CLASSIFICATION	2.4053951019376697E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999997594604898	WITHOUT_CLASSIFICATION	2.4053951019376697E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999997594604898	WITHOUT_CLASSIFICATION	2.4053951019376697E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999997594604898	WITHOUT_CLASSIFICATION	2.4053951019376697E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999997594604898	WITHOUT_CLASSIFICATION	2.4053951019376697E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999997594604898	WITHOUT_CLASSIFICATION	2.4053951019376697E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999997594604898	WITHOUT_CLASSIFICATION	2.4053951019376697E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999997594604898	WITHOUT_CLASSIFICATION	2.4053951019376697E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999997594604898	WITHOUT_CLASSIFICATION	2.4053951019376697E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999997594604898	WITHOUT_CLASSIFICATION	2.4053951019376697E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999997594604898	WITHOUT_CLASSIFICATION	2.4053951019376697E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999997594604898	WITHOUT_CLASSIFICATION	2.4053951019376697E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999997594604898	WITHOUT_CLASSIFICATION	2.4053951019376697E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999997594604898	WITHOUT_CLASSIFICATION	2.4053951019376697E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999997594604898	WITHOUT_CLASSIFICATION	2.4053951019376697E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999997594604898	WITHOUT_CLASSIFICATION	2.4053951019376697E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999997594604898	WITHOUT_CLASSIFICATION	2.4053951019376697E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999997594604898	WITHOUT_CLASSIFICATION	2.4053951019376697E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999997594604898	WITHOUT_CLASSIFICATION	2.4053951019376697E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999997594604898	WITHOUT_CLASSIFICATION	2.4053951019376697E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999997594604898	WITHOUT_CLASSIFICATION	2.4053951019376697E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999997594604898	WITHOUT_CLASSIFICATION	2.4053951019376697E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999997594604898	WITHOUT_CLASSIFICATION	2.4053951019376697E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999997594604898	WITHOUT_CLASSIFICATION	2.4053951019376697E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999997594604898	WITHOUT_CLASSIFICATION	2.4053951019376697E-7	DEFECT
/*                            Ignore method m, as there is an overloaded                            form of this method that takes in a                            non-string argument, which gains higher                            priority.                        */	WITHOUT_CLASSIFICATION	0.9999999970663795	WITHOUT_CLASSIFICATION	2.933620488412549E-9	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999229243365	WITHOUT_CLASSIFICATION	7.707566353111588E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999229243365	WITHOUT_CLASSIFICATION	7.707566353111588E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999229243365	WITHOUT_CLASSIFICATION	7.707566353111588E-8	DEFECT
/*                        If the argument is not a String or Location,                        and if there                        is an overloaded form of this method already defined,                        we just override that with the new one.                        This mechanism does not guarantee any specific order                        in which the methods will be selected: so any code                        that depends on the order in which "set" methods have                        been defined, is not guaranteed to be selected in any                        particular order.                    */	WITHOUT_CLASSIFICATION	0.9999999999998275	WITHOUT_CLASSIFICATION	1.725628546967941E-13	DEFECT
// impossible as getMethods should only return public methods	WITHOUT_CLASSIFICATION	0.9999993269245585	WITHOUT_CLASSIFICATION	6.730754414627587E-7	DEFECT
// impossible as getMethods should only return public methods	WITHOUT_CLASSIFICATION	0.9999993269245585	WITHOUT_CLASSIFICATION	6.730754414627587E-7	DEFECT
// impossible as getMethods should only return public methods	WITHOUT_CLASSIFICATION	0.9999993269245585	WITHOUT_CLASSIFICATION	6.730754414627587E-7	DEFECT
// boolean and Boolean get special treatment because we // have a nice method in Project	WITHOUT_CLASSIFICATION	0.999999953571927	WITHOUT_CLASSIFICATION	4.6428073035806E-8	DEFECT
// find the line breaks and pass other chars through in blocks	WITHOUT_CLASSIFICATION	0.9999929271471392	WITHOUT_CLASSIFICATION	7.072852860874924E-6	DEFECT
// DataType can have a "no arg" constructor or take a single // Project argument.	WITHOUT_CLASSIFICATION	0.9999999164267255	WITHOUT_CLASSIFICATION	8.35732744393464E-8	DEFECT
// all the names are the same: check if the class path of the loader // is the same	WITHOUT_CLASSIFICATION	0.9999987904788364	WITHOUT_CLASSIFICATION	1.2095211636134357E-6	DEFECT
/* Interestingly enough, we get to here when a user                 * uses -Dname=value. However, in some cases, the OS                 * goes ahead and parses this out to args                 *   {"-Dname", "value"}                 * so instead of parsing on "=", we just make the "-D"                 * characters go away and skip one argument forward.                 *                 * I don't know how to predict when the JDK is going                 * to help or not, so we simply look for the equals sign.                 */	WITHOUT_CLASSIFICATION	0.9987986103127028	WITHOUT_CLASSIFICATION	0.001201389687297174	DEFECT
// if parent is null, then we are at the root of the fs, // complain that we can't find the build file.	WITHOUT_CLASSIFICATION	0.9999732344386242	WITHOUT_CLASSIFICATION	2.6765561375852724E-5	DEFECT
// put back the original security manager //The following will never eval to true. (PD)	WITHOUT_CLASSIFICATION	0.9999995660977496	WITHOUT_CLASSIFICATION	4.3390225025592396E-7	DEFECT
// ignore path elements which are invalid // relative to the project	WITHOUT_CLASSIFICATION	0.9999999989575635	WITHOUT_CLASSIFICATION	1.0424364699752563E-9	DEFECT
// Ignore - we are interested only in the side // effect - that of getting the static initializers // invoked.  As we do not want to call a valid // constructor to get this side effect, an // attempt is made to call a hopefully // invalid constructor - come on, nobody // would have a constructor that takes in // 256 String arguments ;-) // (In fact, they can't - according to JVM spec // section 4.10, the number of method parameters is limited // to 255 by the definition of a method descriptor. // Constructors count as methods here.)	WITHOUT_CLASSIFICATION	0.9999968158508582	WITHOUT_CLASSIFICATION	3.1841491418606054E-6	DEFECT
/*<URL>*/	WITHOUT_CLASSIFICATION	0.9998700420118308	WITHOUT_CLASSIFICATION	1.299579881692043E-4	DEFECT
/*<URL>*/	WITHOUT_CLASSIFICATION	0.9998700420118308	WITHOUT_CLASSIFICATION	1.299579881692043E-4	DEFECT
// 'sync' is needed - otherwise 2 threads can load the same class // twice, resulting in LinkageError: duplicated class definition. // findLoadedClass avoids that, but without sync it won't work.	WITHOUT_CLASSIFICATION	0.6599678209240728	WITHOUT_CLASSIFICATION	0.3400321790759273	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9999976685470136	WITHOUT_CLASSIFICATION	2.331452986425402E-6	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9999976685470136	WITHOUT_CLASSIFICATION	2.331452986425402E-6	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9999976685470136	WITHOUT_CLASSIFICATION	2.331452986425402E-6	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9999976685470136	WITHOUT_CLASSIFICATION	2.331452986425402E-6	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9999976685470136	WITHOUT_CLASSIFICATION	2.331452986425402E-6	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9999976685470136	WITHOUT_CLASSIFICATION	2.331452986425402E-6	DEFECT
// Not significant for the class loader.	WITHOUT_CLASSIFICATION	0.9999997255871773	WITHOUT_CLASSIFICATION	2.744128226555321E-7	DEFECT
// Not significant for the class loader.	WITHOUT_CLASSIFICATION	0.9999997255871773	WITHOUT_CLASSIFICATION	2.744128226555321E-7	DEFECT
// Not significant for the class loader.	WITHOUT_CLASSIFICATION	0.9999997255871773	WITHOUT_CLASSIFICATION	2.744128226555321E-7	DEFECT
// Not significant for the class loader.	WITHOUT_CLASSIFICATION	0.9999997255871773	WITHOUT_CLASSIFICATION	2.744128226555321E-7	DEFECT
// Not significant for the class loader.	WITHOUT_CLASSIFICATION	0.9999997255871773	WITHOUT_CLASSIFICATION	2.744128226555321E-7	DEFECT
// don't have to check for public, since // getConstructor finds public constructors only.	WITHOUT_CLASSIFICATION	0.9999998842976331	WITHOUT_CLASSIFICATION	1.1570236702294548E-7	DEFECT
//not a known type	WITHOUT_CLASSIFICATION	0.999554393774711	WITHOUT_CLASSIFICATION	4.4560622528901013E-4	DEFECT
// Initialize the globalFileSet's project	WITHOUT_CLASSIFICATION	0.9999996577757242	WITHOUT_CLASSIFICATION	3.4222427576957925E-7	DEFECT
// create a new Vector to avoid ConcurrentModificationExc when // the listeners get added/removed while we are in fire	WITHOUT_CLASSIFICATION	0.9999999981734243	WITHOUT_CLASSIFICATION	1.8265756955353433E-9	DEFECT
// first build exception	WITHOUT_CLASSIFICATION	0.9999997916902968	WITHOUT_CLASSIFICATION	2.0830970323207453E-7	DEFECT
// Not been visited	WITHOUT_CLASSIFICATION	0.9999999627078487	WITHOUT_CLASSIFICATION	3.7292151183960474E-8	DEFECT
// -------------------- Optional methods   -------------------- // You can override those methods if you want to optimize or // do advanced things (like support a special syntax). // The methods do not chain - you should use them when embedding ant // (by replacing the main helper)	WITHOUT_CLASSIFICATION	0.9999987303433203	WITHOUT_CLASSIFICATION	1.2696566796914141E-6	DEFECT
/*                fragments.addElement(value.substring(pos + 1, pos + 2));                prev = pos + 2;                */	WITHOUT_CLASSIFICATION	0.9999999946655145	WITHOUT_CLASSIFICATION	5.3344854903461265E-9	DEFECT
//empty	WITHOUT_CLASSIFICATION	0.999961376570256	WITHOUT_CLASSIFICATION	3.862342974406731E-5	DEFECT
//empty	WITHOUT_CLASSIFICATION	0.999961376570256	WITHOUT_CLASSIFICATION	3.862342974406731E-5	DEFECT
// -------------------- Common properties  -------------------- // The following properties are required by import ( and other tasks // that read build files using ProjectHelper ).	WITHOUT_CLASSIFICATION	0.9999988422932095	WITHOUT_CLASSIFICATION	1.1577067904835705E-6	DEFECT
// check to what is in the classname	WITHOUT_CLASSIFICATION	0.9999898336584131	WITHOUT_CLASSIFICATION	1.0166341586863154E-5	DEFECT
//not included, do nothing	WITHOUT_CLASSIFICATION	0.9999930526059276	WITHOUT_CLASSIFICATION	6.947394072271318E-6	DEFECT
//not included, do nothing	WITHOUT_CLASSIFICATION	0.9999930526059276	WITHOUT_CLASSIFICATION	6.947394072271318E-6	DEFECT
// Attributes	WITHOUT_CLASSIFICATION	0.9999998953027849	WITHOUT_CLASSIFICATION	1.0469721503061284E-7	DEFECT
// make sure we aren't going to get the path separator next	WITHOUT_CLASSIFICATION	0.9999826230535523	WITHOUT_CLASSIFICATION	1.737694644759868E-5	DEFECT
// 'reasonable' default, if the component is used without // a Project ( for example as a standalone Bean ). // Most ant components can be used this way.	WITHOUT_CLASSIFICATION	0.9999968683593693	WITHOUT_CLASSIFICATION	3.1316406305670356E-6	DEFECT
// don't have to check for public, since // getMethod finds public method only. // don't have to check for abstract, since then // taskClass would be abstract too.	WITHOUT_CLASSIFICATION	0.9999979464420378	WITHOUT_CLASSIFICATION	2.0535579621865386E-6	DEFECT
// Mac	WITHOUT_CLASSIFICATION	0.9999992953048084	WITHOUT_CLASSIFICATION	7.046951915371932E-7	DEFECT
// set in/excludes to reasonable defaults if needed:	WITHOUT_CLASSIFICATION	0.99999999521828	WITHOUT_CLASSIFICATION	4.7817200010499076E-9	DEFECT
// may be on a case insensitive file system.  We want // the results to show what's really on the disk, so // we need to double check.	WITHOUT_CLASSIFICATION	0.9999998018971133	WITHOUT_CLASSIFICATION	1.9810288658233472E-7	DEFECT
// avoid double scanning of directories, can only happen in fast mode	WITHOUT_CLASSIFICATION	0.9999960771298388	WITHOUT_CLASSIFICATION	3.922870161157876E-6	DEFECT
// Usually the initialized is set to true. But here it must not. // Because the prepend and append readers have to be instantiated // on runtime //newFilter.setInitialized(true);	WITHOUT_CLASSIFICATION	0.9992145482503958	WITHOUT_CLASSIFICATION	7.854517496040808E-4	DEFECT
// if at EOF with no characters in the buffer, return EOF	WITHOUT_CLASSIFICATION	0.9999999995855952	WITHOUT_CLASSIFICATION	4.144048079606008E-10	DEFECT
// The current character is always emitted.	WITHOUT_CLASSIFICATION	0.9999995423992531	WITHOUT_CLASSIFICATION	4.576007467869704E-7	DEFECT
// The current character is always emitted.	WITHOUT_CLASSIFICATION	0.9999995423992531	WITHOUT_CLASSIFICATION	4.576007467869704E-7	DEFECT
// The current character is always emitted.	WITHOUT_CLASSIFICATION	0.9999995423992531	WITHOUT_CLASSIFICATION	4.576007467869704E-7	DEFECT
// The current character is always emitted.	WITHOUT_CLASSIFICATION	0.9999995423992531	WITHOUT_CLASSIFICATION	4.576007467869704E-7	DEFECT
// Fall tru	WITHOUT_CLASSIFICATION	0.9999960751087551	WITHOUT_CLASSIFICATION	3.924891244984882E-6	DEFECT
// Fall tru	WITHOUT_CLASSIFICATION	0.9999960751087551	WITHOUT_CLASSIFICATION	3.924891244984882E-6	DEFECT
// Fall tru	WITHOUT_CLASSIFICATION	0.9999960751087551	WITHOUT_CLASSIFICATION	3.924891244984882E-6	DEFECT
// Fall tru	WITHOUT_CLASSIFICATION	0.9999960751087551	WITHOUT_CLASSIFICATION	3.924891244984882E-6	DEFECT
// Works like clone() but doesn't show up in the Javadocs	WITHOUT_CLASSIFICATION	0.9998966521632858	WITHOUT_CLASSIFICATION	1.0334783671419165E-4	DEFECT
// ----------------------------------------- //  Predefined filters // -----------------------------------------	WITHOUT_CLASSIFICATION	0.9999998213261075	WITHOUT_CLASSIFICATION	1.7867389251794768E-7	DEFECT
// -------------------------------------------- // //      Filter classes // // --------------------------------------------	WITHOUT_CLASSIFICATION	0.9999987013770462	WITHOUT_CLASSIFICATION	1.2986229538434768E-6	DEFECT
// Execute the top-level target	WITHOUT_CLASSIFICATION	0.9999999974250906	WITHOUT_CLASSIFICATION	2.5749093643975947E-9	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999998434438988	WITHOUT_CLASSIFICATION	1.565561011525499E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999998434438988	WITHOUT_CLASSIFICATION	1.565561011525499E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999998434438988	WITHOUT_CLASSIFICATION	1.565561011525499E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999998434438988	WITHOUT_CLASSIFICATION	1.565561011525499E-7	DEFECT
// Also check for properly formed URIs. Ant formerly recommended using // nonsense URIs such as "file:./foo.xml" in XML includes. You shouldn't // do that (just "foo.xml" is correct) but for compatibility we special-case // things when the path is not absolute, and fall back to the old parsing behavior.	WITHOUT_CLASSIFICATION	0.9955781225612307	WITHOUT_CLASSIFICATION	0.004421877438769383	DEFECT
//decide whether to copy the existing arg set, or //build a new one from the list of all args excluding the special //operations that only we handle	WITHOUT_CLASSIFICATION	0.9999999764930778	WITHOUT_CLASSIFICATION	2.3506922235780682E-8	DEFECT
// convert the replyTo string into a vector of emailaddresses	WITHOUT_CLASSIFICATION	0.9999999079162294	WITHOUT_CLASSIFICATION	9.208377068794754E-8	DEFECT
// private static final int BG_BLACK = 40; // private static final int BG_RED = 41; // private static final int BG_GREEN = 42; // private static final int BG_YELLOW = 44; // private static final int BG_BLUE = 44; // private static final int BG_MAGENTA = 45; // private static final int BG_CYAN = 46; // private static final int BG_WHITE = 47;	WITHOUT_CLASSIFICATION	0.9999999789028332	WITHOUT_CLASSIFICATION	2.1097166779001117E-8	DEFECT
// If the file being added is META-INF/application.xml, we // warn if it's not the one specified in the "appxml" // attribute - or if it's being added twice, meaning the same // file is specified by the "appxml" attribute and in a // <fileset> element.	WITHOUT_CLASSIFICATION	0.9999999870051065	WITHOUT_CLASSIFICATION	1.2994893388956274E-8	DEFECT
// class found but restricted name; this is // actually the case we're looking for in JDK 1.3+, // so catch the exception and return	WITHOUT_CLASSIFICATION	0.9999990045879134	WITHOUT_CLASSIFICATION	9.95412086670286E-7	DEFECT
// Can return null to represent the bootstrap class loader. // see API docs of Class.getClassLoader.	WITHOUT_CLASSIFICATION	0.9999999965876952	WITHOUT_CLASSIFICATION	3.4123047159078654E-9	DEFECT
//default	WITHOUT_CLASSIFICATION	0.9999945667626957	WITHOUT_CLASSIFICATION	5.433237304258859E-6	DEFECT
//default	WITHOUT_CLASSIFICATION	0.9999945667626957	WITHOUT_CLASSIFICATION	5.433237304258859E-6	DEFECT
// use to scan own archive	WITHOUT_CLASSIFICATION	0.9999999876922282	WITHOUT_CLASSIFICATION	1.23077717667881E-8	DEFECT
// collect filesets to pass them to getResourcesToAdd	WITHOUT_CLASSIFICATION	0.9999998238356119	WITHOUT_CLASSIFICATION	1.7616438815242214E-7	DEFECT
// If we're in this finally clause because of an // exception, we don't really care if there's an // exception when closing the stream. E.g. if it // throws "ZIP file must have at least one entry", // because an exception happened before we added // any files, then we must swallow this // exception. Otherwise, the error that's reported // will be the close() error, which is not the // real cause of the problem.	WITHOUT_CLASSIFICATION	0.9777602528400515	WITHOUT_CLASSIFICATION	0.02223974715994841	DEFECT
/*             * Bad luck.             *             * There are resources in the filesets that make the             * archive out of date, but not in the non-fileset             * resources. We need to rescan the non-FileSets to grab             * all of them now.             */	WITHOUT_CLASSIFICATION	0.9999996329015418	WITHOUT_CLASSIFICATION	3.670984581415848E-7	DEFECT
// ZIPs store time with a granularity of 2 seconds, round up	WITHOUT_CLASSIFICATION	0.999946945773591	WITHOUT_CLASSIFICATION	5.305422640905668E-5	DEFECT
/*             * ZipOutputStream.putNextEntry expects the ZipEntry to             * know its size and the CRC sum before you start writing             * the data when using STORED mode - unless it is seekable.             *             * This forces us to process the data twice.             */	WITHOUT_CLASSIFICATION	0.9999975646366673	WITHOUT_CLASSIFICATION	2.435363332703885E-6	DEFECT
// may be altered in validate	WITHOUT_CLASSIFICATION	0.9999990084603897	WITHOUT_CLASSIFICATION	9.915396102217404E-7	DEFECT
//at this point the paths are set up with lists of files, //and the mapper is ready to map from source dirs to dest files //now we iterate through every JAR giving source and dest names // deal with the paths	WITHOUT_CLASSIFICATION	0.9999999506518465	WITHOUT_CLASSIFICATION	4.9348153382816996E-8	DEFECT
//calculate our destination directory; it is either the destDir //attribute, or the base dir of the fileset (for in situ updates)	WITHOUT_CLASSIFICATION	0.9999999983602839	WITHOUT_CLASSIFICATION	1.6397162071120652E-9	DEFECT
// Error messages	WITHOUT_CLASSIFICATION	0.9999995335687266	WITHOUT_CLASSIFICATION	4.664312734385442E-7	DEFECT
// Default the viewpath to basedir if it is not specified	WITHOUT_CLASSIFICATION	0.9999996638675734	WITHOUT_CLASSIFICATION	3.361324265813926E-7	DEFECT
// Default the viewpath to basedir if it is not specified	WITHOUT_CLASSIFICATION	0.9999996638675734	WITHOUT_CLASSIFICATION	3.361324265813926E-7	DEFECT
// Default the viewpath to basedir if it is not specified	WITHOUT_CLASSIFICATION	0.9999996638675734	WITHOUT_CLASSIFICATION	3.361324265813926E-7	DEFECT
// Parse the attribute(s) and text of this node, adding // properties for each. // if the "path" attribute is specified, then return the created path // which will be passed to the children of this node.	WITHOUT_CLASSIFICATION	0.9999999725773813	WITHOUT_CLASSIFICATION	2.7422618758740063E-8	DEFECT
// An arbitrary attribute.	WITHOUT_CLASSIFICATION	0.9999997362929857	WITHOUT_CLASSIFICATION	2.637070142348641E-7	DEFECT
// Return the Path we added or the ID of this node for // children to reference if needed.  Path objects are // definitely used by child path elements, and ID may be used // for a child text node.	WITHOUT_CLASSIFICATION	0.999999999048196	WITHOUT_CLASSIFICATION	9.518039320165628E-10	DEFECT
// Fall Through	WITHOUT_CLASSIFICATION	0.9999903766941819	WITHOUT_CLASSIFICATION	9.623305817995022E-6	DEFECT
// Fall Through	WITHOUT_CLASSIFICATION	0.9999903766941819	WITHOUT_CLASSIFICATION	9.623305817995022E-6	DEFECT
// Ignore the problem	WITHOUT_CLASSIFICATION	0.9999992532235918	WITHOUT_CLASSIFICATION	7.467764082999068E-7	DEFECT
// If we're on windows, then do the comparison ignoring case // and treat the two directory characters the same	WITHOUT_CLASSIFICATION	0.9999974811871808	WITHOUT_CLASSIFICATION	2.518812819207149E-6	DEFECT
// for NetWare and OS/2, piggy-back on Windows, since in the // validateSetup code, the same assumptions can be made as // with windows - that ; is the path separator	WITHOUT_CLASSIFICATION	0.9999307297077812	WITHOUT_CLASSIFICATION	6.927029221887404E-5	DEFECT
// END static class TemplateElement	WITHOUT_CLASSIFICATION	0.9999999705375677	WITHOUT_CLASSIFICATION	2.9462432189907286E-8	DEFECT
////////////////////////////////////////////////////////////////////// // CONSTRUCTORS / INITIALIZERS	WITHOUT_CLASSIFICATION	0.9999990118277896	WITHOUT_CLASSIFICATION	9.881722104296804E-7	DEFECT
//value and property are mutually exclusive attributes	WITHOUT_CLASSIFICATION	0.9999686978456043	WITHOUT_CLASSIFICATION	3.130215439571842E-5	DEFECT
// Ignore Exception	WITHOUT_CLASSIFICATION	0.9999997655677488	WITHOUT_CLASSIFICATION	2.3443225114823844E-7	DEFECT
//int logLevel = filesetManifestConfig == null ? //    Project.MSG_WARN : Project.MSG_VERBOSE; //log("File " + file //    + " includes a META-INF/MANIFEST.MF which will be ignored. " //    + "To include this file, set filesetManifest to a value other " //    + "than 'skip'.", logLevel);	WITHOUT_CLASSIFICATION	0.9999999969836875	WITHOUT_CLASSIFICATION	3.016312589976328E-9	DEFECT
// Create the directory, as it might not exist.	WITHOUT_CLASSIFICATION	0.9999980600132109	WITHOUT_CLASSIFICATION	1.939986789161901E-6	DEFECT
// Calculate the total checksum // Convert the keys (source files) into a sorted array.	WITHOUT_CLASSIFICATION	0.9999999975113685	WITHOUT_CLASSIFICATION	2.488631623739397E-9	DEFECT
// must not use getEntry as "well behaving" applications // must accept the manifest in any capitalization	WITHOUT_CLASSIFICATION	0.9999967922457031	WITHOUT_CLASSIFICATION	3.207754296772902E-6	DEFECT
// We just set the prefix for this fileset, and pass it up.	WITHOUT_CLASSIFICATION	0.9999920533190748	WITHOUT_CLASSIFICATION	7.946680925116993E-6	DEFECT
// We just set the prefix for this fileset, and pass it up.	WITHOUT_CLASSIFICATION	0.9999920533190748	WITHOUT_CLASSIFICATION	7.946680925116993E-6	DEFECT
/*             * Precedence: manifestFile wins over inline manifest,             * over manifests read from the filesets over the original             * manifest.             *             * merge with null argument is a no-op             */	WITHOUT_CLASSIFICATION	0.9999993756127621	WITHOUT_CLASSIFICATION	6.243872379864345E-7	DEFECT
// filesets are separate from the rest for performance // reasons.  If we use the code for union below, we'll always // scan all filesets, even if we know the target is out of // date after the first test.	WITHOUT_CLASSIFICATION	0.9999999999951256	WITHOUT_CLASSIFICATION	4.874519535634721E-12	DEFECT
// If the archive is built for the first time and it is // matched by a resource collection, then it hasn't been // found in check (it hasn't been there) but will be // included now. // // for some strange reason the old code would simply skip // the entry and not fail, do the same now for backwards // compatibility reasons.  Without this, the which4j build // fails in Gump	WITHOUT_CLASSIFICATION	0.9999994768799829	WITHOUT_CLASSIFICATION	5.231200170372528E-7	DEFECT
// preserve permissions	WITHOUT_CLASSIFICATION	0.9999973443087032	WITHOUT_CLASSIFICATION	2.65569129675991E-6	DEFECT
// override permissions if set explicitly	WITHOUT_CLASSIFICATION	0.9999966712220884	WITHOUT_CLASSIFICATION	3.328777911604437E-6	DEFECT
// Check if we can contact the URL	WITHOUT_CLASSIFICATION	0.9999890482095186	WITHOUT_CLASSIFICATION	1.0951790481458958E-5	DEFECT
// // Instance //	WITHOUT_CLASSIFICATION	0.9999997421757696	WITHOUT_CLASSIFICATION	2.578242304059861E-7	DEFECT
//the Exec OS check is different from Os.isOs(), which //probes for a specific OS. Instead it searches the os field //for the current os.name	WITHOUT_CLASSIFICATION	0.9999999055167701	WITHOUT_CLASSIFICATION	9.448322993907111E-8	DEFECT
// Similar to a fileset, but doesn't allow dir attribute to be set	WITHOUT_CLASSIFICATION	0.9999980647598878	WITHOUT_CLASSIFICATION	1.935240112248433E-6	DEFECT
// If the destination directory didn't already exist, // or was empty, then no previous file removal is necessary!	WITHOUT_CLASSIFICATION	0.9999999184614664	WITHOUT_CLASSIFICATION	8.15385336062142E-8	DEFECT
// Default the viewpath to basedir if it is not specified	WITHOUT_CLASSIFICATION	0.9999996638675734	WITHOUT_CLASSIFICATION	3.361324265813926E-7	DEFECT
// preserveInTarget would find all files we want to keep, // but we need to find all that we want to delete - so the // meaning of all patterns and selectors must be inverted	WITHOUT_CLASSIFICATION	0.9999999988733252	WITHOUT_CLASSIFICATION	1.1266747863656027E-9	DEFECT
//On VMS platform, we need to create a special java options file //containing the arguments and classpath for the java command. //The special file is supported by the "-V" switch on the VMS JVM.	WITHOUT_CLASSIFICATION	0.9999999929880983	WITHOUT_CLASSIFICATION	7.011901761897085E-9	DEFECT
// Do nothing if no resources (including nested text)	WITHOUT_CLASSIFICATION	0.9999999619811774	WITHOUT_CLASSIFICATION	3.8018822772216745E-8	DEFECT
// Windows has a 32k limit on total arg size, so // create a temporary file to store all the arguments	WITHOUT_CLASSIFICATION	0.9999997638354918	WITHOUT_CLASSIFICATION	2.3616450820600083E-7	DEFECT
// filesets has been protected so we need to keep that even after // switching to resource collections.  In fact, they will still // get a different treatment form the other resource collections // even in execute since we have some subtle special features like // switching type to "dir" when we encounter a DirSet that would // be more difficult to achieve otherwise.	WITHOUT_CLASSIFICATION	0.9999992484908626	WITHOUT_CLASSIFICATION	7.515091374018047E-7	DEFECT
// need to reset the stream handler to restart // reading of pipes; // go ahead and do it always w/ nested redirectors	WITHOUT_CLASSIFICATION	0.9999998541481565	WITHOUT_CLASSIFICATION	1.458518435446136E-7	DEFECT
/*             * if we get here, in and out have not been specified, we are             * in batch processing mode.             */	WITHOUT_CLASSIFICATION	0.9999999617642328	WITHOUT_CLASSIFICATION	3.8235767216711104E-8	DEFECT
//at this point there is one trailing space to remove, if the list is not empty.	WITHOUT_CLASSIFICATION	0.9999996544131349	WITHOUT_CLASSIFICATION	3.455868650228591E-7	DEFECT
// Ignore and keep trying	WITHOUT_CLASSIFICATION	0.9999998769110634	WITHOUT_CLASSIFICATION	1.2308893663745585E-7	DEFECT
// Chunk part of previous env var (UNIX env vars can // contain embedded new lines).	WITHOUT_CLASSIFICATION	0.9999987704938644	WITHOUT_CLASSIFICATION	1.229506135543892E-6	DEFECT
// Since we "look ahead" before adding, there's one last env var.	WITHOUT_CLASSIFICATION	0.9999998858253322	WITHOUT_CLASSIFICATION	1.1417466776853819E-7	DEFECT
//noop default encoding used	WITHOUT_CLASSIFICATION	0.9999999958242796	WITHOUT_CLASSIFICATION	4.175720491140467E-9	DEFECT
// On OpenVMS Runtime#exec() doesn't support the environment array, // so we only return the new values which then will be set in // the generated DCL script, inheriting the parent process environment	WITHOUT_CLASSIFICATION	0.9998743857536188	WITHOUT_CLASSIFICATION	1.2561424638133953E-4	DEFECT
// Locate the auxiliary script	WITHOUT_CLASSIFICATION	0.9999999714049588	WITHOUT_CLASSIFICATION	2.8595041283742682E-8	DEFECT
// Build the command	WITHOUT_CLASSIFICATION	0.9997225089150077	WITHOUT_CLASSIFICATION	2.774910849922427E-4	DEFECT
/*         * Writes the command into a temporary DCL script and returns the         * corresponding File object.  The script will be deleted on exit.         * @param cmd the command line to execute as an array of strings.         * @param env the environment to set as an array of strings.         * @return the command File.         * @throws IOException if errors are encountered creating the file.         */	WITHOUT_CLASSIFICATION	0.999999752491034	WITHOUT_CLASSIFICATION	2.475089659161333E-7	DEFECT
//************************************************************************ //  protected and private methods //************************************************************************	WITHOUT_CLASSIFICATION	0.9998847217111223	WITHOUT_CLASSIFICATION	1.1527828887772368E-4	DEFECT
// ensure that parent dir of dest file exists!	WITHOUT_CLASSIFICATION	0.9999994600377192	WITHOUT_CLASSIFICATION	5.399622807526158E-7	DEFECT
// add the single group arguments // Javadoc 1.2 rules: //   Multiple -group args allowed. //   Each arg includes 3 strings: -group [name] [packagelist]. //   Elements in [packagelist] are colon-delimited. //   An element in [packagelist] may end with the * wildcard.	WITHOUT_CLASSIFICATION	0.9999998890051445	WITHOUT_CLASSIFICATION	1.1099485547044034E-7	DEFECT
// for each sourcePath entry, add a directoryset with includes // taken from packagenames attribute and nested package // elements and excludes taken from excludepackages attribute // and nested excludepackage elements	WITHOUT_CLASSIFICATION	0.9999997439566043	WITHOUT_CLASSIFICATION	2.560433957391874E-7	DEFECT
// // Override the logging of output in order to filter out Generating // messages.  Generating messages are set to a priority of VERBOSE // unless they appear after what could be an informational message. //	WITHOUT_CLASSIFICATION	0.9999999964253855	WITHOUT_CLASSIFICATION	3.574614434807493E-9	DEFECT
/* Methods below all add specific selectors */	WITHOUT_CLASSIFICATION	0.999999983890025	WITHOUT_CLASSIFICATION	1.610997499650575E-8	DEFECT
/* Methods below all add specific selectors */	WITHOUT_CLASSIFICATION	0.999999983890025	WITHOUT_CLASSIFICATION	1.610997499650575E-8	DEFECT
/* Methods below all add specific selectors */	WITHOUT_CLASSIFICATION	0.999999983890025	WITHOUT_CLASSIFICATION	1.610997499650575E-8	DEFECT
/*               If verbosity is MSG_VERBOSE, that mean we are doing               regular logging (backwards as that sounds).  In that               case, we want to print one message about deleting the               top of the directory tree.  Otherwise, the removeDir               method will handle messages for _all_ directories.             */	WITHOUT_CLASSIFICATION	0.9999999967466001	WITHOUT_CLASSIFICATION	3.2533997495186767E-9	DEFECT
//hand down	WITHOUT_CLASSIFICATION	0.9999908496598857	WITHOUT_CLASSIFICATION	9.15034011435063E-6	DEFECT
// create intermediary directories - sometimes zip don't add them	WITHOUT_CLASSIFICATION	0.999999986488506	WITHOUT_CLASSIFICATION	1.351149406540634E-8	DEFECT
// SQL defines "--" as a comment to EOL // and in Oracle it may contain a hint // so we cannot just remove it, instead we must end it	WITHOUT_CLASSIFICATION	0.9999998806390721	WITHOUT_CLASSIFICATION	1.193609279047871E-7	DEFECT
/*         * In Ant 1.1, <chmod dir="foo" /> means, change the permissions         * of directory foo, not anything inside of it.  This is the case the         * second branch of the if statement below catches for backwards         * compatibility.         */	WITHOUT_CLASSIFICATION	0.999998915670246	WITHOUT_CLASSIFICATION	1.0843297539719629E-6	DEFECT
/* for historical and performance reasons we have to do               things in a rather complex way.               (1) Move is optimized to move directories if a fileset               has been included completely, therefore FileSets need a               special treatment.  This is also required to support               the failOnError semantice (skip filesets with broken               basedir but handle the remaining collections).               (2) We carry around a few protected methods that work               on basedirs and arrays of names.  To optimize stuff, all               resources with the same basedir get collected in               separate lists and then each list is handled in one go.            */	WITHOUT_CLASSIFICATION	0.9716441428217514	WITHOUT_CLASSIFICATION	0.02835585717824865	DEFECT
//we create a fileset with the source file. //this lets us combine our logic for handling output directories, //mapping etc.	WITHOUT_CLASSIFICATION	0.9999999992359418	WITHOUT_CLASSIFICATION	7.64058087083807E-10	DEFECT
// if input files are specified, inputString and inputStream are ignored; // classes that work with redirector attributes can enforce // whatever warnings are needed	WITHOUT_CLASSIFICATION	0.9999994826454308	WITHOUT_CLASSIFICATION	5.173545691668822E-7	DEFECT
// Ignore exception	WITHOUT_CLASSIFICATION	0.9999993862274741	WITHOUT_CLASSIFICATION	6.137725258166672E-7	DEFECT
// Ignore exception	WITHOUT_CLASSIFICATION	0.9999993862274741	WITHOUT_CLASSIFICATION	6.137725258166672E-7	DEFECT
// Ignore exception	WITHOUT_CLASSIFICATION	0.9999993862274741	WITHOUT_CLASSIFICATION	6.137725258166672E-7	DEFECT
// classpath attributes go into a vector	WITHOUT_CLASSIFICATION	0.9999998957151963	WITHOUT_CLASSIFICATION	1.042848037178797E-7	DEFECT
// we have already started reading this section // this line is the first attribute. set it and then // let the normal read handle the rest	WITHOUT_CLASSIFICATION	0.9999999955286505	WITHOUT_CLASSIFICATION	4.471349499591924E-9	DEFECT
//not modified so no file download. just return //instead and trace out something so the user //doesn't think that the download happened when it //didn't	WITHOUT_CLASSIFICATION	0.9999999144124827	WITHOUT_CLASSIFICATION	8.558751731732045E-8	DEFECT
// we have started to (over)write dest, but failed. // Try to delete the garbage we'd otherwise leave // behind.	WITHOUT_CLASSIFICATION	0.9999999328836224	WITHOUT_CLASSIFICATION	6.711637755296232E-8	DEFECT
// start() would throw IllegalThreadStateException from // ThreadGroup.add if it were destroyed	WITHOUT_CLASSIFICATION	0.9999999791331979	WITHOUT_CLASSIFICATION	2.0866802050291546E-8	DEFECT
// kjc-1.5A doesn't support -encoding option now. // but it will be supported near the feature.	WITHOUT_CLASSIFICATION	0.9999872270048193	WITHOUT_CLASSIFICATION	1.2772995180677597E-5	DEFECT
// Create an instance of the compiler, redirecting output to // the project log	WITHOUT_CLASSIFICATION	0.999999841869193	WITHOUT_CLASSIFICATION	1.5813080701387982E-7	DEFECT
// Setup the apt executable	WITHOUT_CLASSIFICATION	0.999999707990258	WITHOUT_CLASSIFICATION	2.920097421258647E-7	DEFECT
//On VMS platform, we need to create a special java options file //containing the arguments and classpath for the javac command. //The special file is supported by the "-V" switch on the VMS JVM.	WITHOUT_CLASSIFICATION	0.9999999938164995	WITHOUT_CLASSIFICATION	6.183500549509881E-9	DEFECT
//must keep for subclass BC, though unused: // CheckStyle:ConstantNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.999981657886014	WITHOUT_CLASSIFICATION	1.834211398597887E-5	DEFECT
// CheckStyle:ConstantNameCheck ON // CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999608303001	WITHOUT_CLASSIFICATION	3.9169699904777155E-8	DEFECT
// add dest dir to classpath so that previously compiled and // untouched classes are on classpath	WITHOUT_CLASSIFICATION	0.9999999751729902	WITHOUT_CLASSIFICATION	2.4827009765317208E-8	DEFECT
// add dest dir to classpath so that previously compiled and // untouched classes are on classpath	WITHOUT_CLASSIFICATION	0.9999999751729902	WITHOUT_CLASSIFICATION	2.4827009765317208E-8	DEFECT
// For -sourcepath, use the "sourcepath" value if present. // Otherwise default to the "srcdir" value.	WITHOUT_CLASSIFICATION	0.9999999995136781	WITHOUT_CLASSIFICATION	4.863218284904126E-10	DEFECT
/*             * Many system have been reported to get into trouble with             * long command lines - no, not only Windows ;-).             *             * POSIX seems to define a lower limit of 4k, so use a temporary             * file if the total length of the command line exceeds this limit.             */	WITHOUT_CLASSIFICATION	0.9999311782573352	WITHOUT_CLASSIFICATION	6.882174266483708E-5	DEFECT
// there is a bootclasspath stated.  By default, the // includeJavaRuntime is false.  If the user has stated a // bootclasspath and said to include the java runtime, it's on // their head!	WITHOUT_CLASSIFICATION	0.9999995859199502	WITHOUT_CLASSIFICATION	4.1408004981301116E-7	DEFECT
//The following is data used while processing stdout of CVS command	WITHOUT_CLASSIFICATION	0.9999998195878748	WITHOUT_CLASSIFICATION	1.8041212518677467E-7	DEFECT
// The date format is using a - format since 1.12.9 so we have: // 1.12.9-: 'date: YYYY/mm/dd HH:mm:ss;  author: name;' // 1.12.9+: 'date: YYYY-mm-dd HH:mm:ss Z;  author: name'	WITHOUT_CLASSIFICATION	0.9999943113717629	WITHOUT_CLASSIFICATION	5.688628237136995E-6	DEFECT
// Default the viewpath to basedir if it is not specified	WITHOUT_CLASSIFICATION	0.9999996638675734	WITHOUT_CLASSIFICATION	3.361324265813926E-7	DEFECT
// Default the viewpath to basedir if it is not specified	WITHOUT_CLASSIFICATION	0.9999996638675734	WITHOUT_CLASSIFICATION	3.361324265813926E-7	DEFECT
// viewpath	WITHOUT_CLASSIFICATION	0.9999995983828567	WITHOUT_CLASSIFICATION	4.016171432816335E-7	DEFECT
// ClearCase items	WITHOUT_CLASSIFICATION	0.9999999823257395	WITHOUT_CLASSIFICATION	1.7674260509208362E-8	DEFECT
// ClearCase items	WITHOUT_CLASSIFICATION	0.9999999823257395	WITHOUT_CLASSIFICATION	1.7674260509208362E-8	DEFECT
// -branch	WITHOUT_CLASSIFICATION	0.9999998665577647	WITHOUT_CLASSIFICATION	1.3344223521792767E-7	DEFECT
// -c	WITHOUT_CLASSIFICATION	0.999998356680856	WITHOUT_CLASSIFICATION	1.6433191440221914E-6	DEFECT
// entries are of the form: //CVS 1.11 // File module/filename is new; current revision 1.1 //CVS 1.11.9 // File module/filename is new; cvstag_2003_11_03_2  revision 1.1 // or // File module/filename changed from revision 1.4 to 1.6 // or // File module/filename is removed; not included in // release tag SKINLF_12 //CVS 1.11.9 // File testantoine/antoine.bat is removed; TESTANTOINE_1 revision 1.1.1.1 // // get rid of 'File module/"	WITHOUT_CLASSIFICATION	0.9999999675618371	WITHOUT_CLASSIFICATION	3.2438162871451605E-8	DEFECT
// CheckStyle:MemberNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9999982206321729	WITHOUT_CLASSIFICATION	1.7793678270620188E-6	DEFECT
// We need character encoding aware printing here. // So, using PrintWriter over OutputStreamWriter instead of PrintStream	WITHOUT_CLASSIFICATION	0.999999874655013	WITHOUT_CLASSIFICATION	1.2534498694132266E-7	DEFECT
// convert from ascii back to native // encoding to convert to/from // Where to find input files // Where to put output files // Extension of output files if different	WITHOUT_CLASSIFICATION	0.9999999308753156	WITHOUT_CLASSIFICATION	6.912468438628027E-8	DEFECT
// we are forced to fork ANTLR since there is a call // to System.exit() and there is nothing we can do // right now to avoid this. :-( (SBa) // I'm not removing this method to keep backward compatibility	WITHOUT_CLASSIFICATION	0.999997324562937	WITHOUT_CLASSIFICATION	2.675437062958983E-6	DEFECT
//error if both are empty, or both are set	WITHOUT_CLASSIFICATION	0.9999998806723959	WITHOUT_CLASSIFICATION	1.1932760404208376E-7	DEFECT
// hasCR is still true (for the second one)	WITHOUT_CLASSIFICATION	0.9999812139134615	WITHOUT_CLASSIFICATION	1.878608653841592E-5	DEFECT
// should be the default, as it integrates better in ant.	WITHOUT_CLASSIFICATION	0.9999999156855761	WITHOUT_CLASSIFICATION	8.43144238144849E-8	DEFECT
// scan source and dest dirs to build up both copy lists and // compile lists //        scanDir(srcDir, destDir);	WITHOUT_CLASSIFICATION	0.9999999948144639	WITHOUT_CLASSIFICATION	5.185536216068584E-9	DEFECT
// if it's a non source file, copy it if a later date than the // dest // if it's a source file, see if the destination class file // needs to be recreated via compilation	WITHOUT_CLASSIFICATION	0.9999999857717736	WITHOUT_CLASSIFICATION	1.4228226412804716E-8	DEFECT
// depending on implementation, XMLReader can yield hips of warning, // only output then if user explicitly asked for it	WITHOUT_CLASSIFICATION	0.9998305990649742	WITHOUT_CLASSIFICATION	1.694009350257998E-4	DEFECT
/* ========================================================================    *    * Instance variables.    */	WITHOUT_CLASSIFICATION	0.9999999554604514	WITHOUT_CLASSIFICATION	4.453954859250107E-8	DEFECT
// swallow	WITHOUT_CLASSIFICATION	0.9999986586519586	WITHOUT_CLASSIFICATION	1.3413480415120332E-6	DEFECT
// swallow	WITHOUT_CLASSIFICATION	0.9999986586519586	WITHOUT_CLASSIFICATION	1.3413480415120332E-6	DEFECT
// swallow	WITHOUT_CLASSIFICATION	0.9999986586519586	WITHOUT_CLASSIFICATION	1.3413480415120332E-6	DEFECT
// swallow	WITHOUT_CLASSIFICATION	0.9999986586519586	WITHOUT_CLASSIFICATION	1.3413480415120332E-6	DEFECT
// If only default is specified and the property previously // existed in the property file, it is unchanged.	WITHOUT_CLASSIFICATION	0.9999998982424023	WITHOUT_CLASSIFICATION	1.0175759779401019E-7	DEFECT
// make sure to close all handles, otherwise the garbage // collector will close them...whenever possible and // Windows may complain about not being able to delete files.	WITHOUT_CLASSIFICATION	0.999999905712284	WITHOUT_CLASSIFICATION	9.428771593589324E-8	DEFECT
// WARN: Don't use the StreamSource(File) ctor. It won't work with // xalan prior to 2.2 because of systemid bugs.	WITHOUT_CLASSIFICATION	0.8805798357896222	WITHOUT_CLASSIFICATION	0.11942016421037774	DEFECT
// build the command line from what we got the format // as specified in the CCM.EXE help	WITHOUT_CLASSIFICATION	0.9999988440913037	WITHOUT_CLASSIFICATION	1.1559086963303092E-6	DEFECT
// implementation of org.apache.tools.ant.taskdefs.ExecuteStreamHandler interface	WITHOUT_CLASSIFICATION	0.9999999892122813	WITHOUT_CLASSIFICATION	1.0787718659803248E-8	DEFECT
// Default the viewpath to basedir if it is not specified	WITHOUT_CLASSIFICATION	0.9999996638675734	WITHOUT_CLASSIFICATION	3.361324265813926E-7	DEFECT
// Default the viewpath to basedir if it is not specified	WITHOUT_CLASSIFICATION	0.9999996638675734	WITHOUT_CLASSIFICATION	3.361324265813926E-7	DEFECT
// Default the viewpath to basedir if it is not specified	WITHOUT_CLASSIFICATION	0.9999996638675734	WITHOUT_CLASSIFICATION	3.361324265813926E-7	DEFECT
// Default the viewpath to basedir if it is not specified	WITHOUT_CLASSIFICATION	0.9999996638675734	WITHOUT_CLASSIFICATION	3.361324265813926E-7	DEFECT
/*         * pre Ant 1.6 this method used to call getClass().getResource         * while Ant 1.6 will call ClassLoader.getResource().         *         * The difference is that Class.getResource expects a leading         * slash for "absolute" resources and will strip it before         * delegating to ClassLoader.getResource - so we now have to         * emulate Class's behavior.         */	WITHOUT_CLASSIFICATION	0.9999999686811848	WITHOUT_CLASSIFICATION	3.1318815182930994E-8	DEFECT
// -c	WITHOUT_CLASSIFICATION	0.999998356680856	WITHOUT_CLASSIFICATION	1.6433191440221914E-6	DEFECT
// -cfile	WITHOUT_CLASSIFICATION	0.9999995816619408	WITHOUT_CLASSIFICATION	4.1833805928515605E-7	DEFECT
// -cfile	WITHOUT_CLASSIFICATION	0.9999995816619408	WITHOUT_CLASSIFICATION	4.1833805928515605E-7	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999985104772199	WITHOUT_CLASSIFICATION	1.4895227801929595E-6	DEFECT
/* ------------- */	WITHOUT_CLASSIFICATION	0.9999929835676435	WITHOUT_CLASSIFICATION	7.016432356404526E-6	DEFECT
// -I- or -I-Y or -I-N	WITHOUT_CLASSIFICATION	0.9999986532212306	WITHOUT_CLASSIFICATION	1.3467787694339398E-6	DEFECT
// -I- or -I-Y or -I-N	WITHOUT_CLASSIFICATION	0.9999986532212306	WITHOUT_CLASSIFICATION	1.3467787694339398E-6	DEFECT
// -I- or -I-Y or -I-N	WITHOUT_CLASSIFICATION	0.9999986532212306	WITHOUT_CLASSIFICATION	1.3467787694339398E-6	DEFECT
// first off, make sure that we've got a command and a vssdir and a label ...	WITHOUT_CLASSIFICATION	0.9999931372243166	WITHOUT_CLASSIFICATION	6.862775683353574E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999229243365	WITHOUT_CLASSIFICATION	7.707566353111588E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999229243365	WITHOUT_CLASSIFICATION	7.707566353111588E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999229243365	WITHOUT_CLASSIFICATION	7.707566353111588E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999229243365	WITHOUT_CLASSIFICATION	7.707566353111588E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999229243365	WITHOUT_CLASSIFICATION	7.707566353111588E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999229243365	WITHOUT_CLASSIFICATION	7.707566353111588E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999229243365	WITHOUT_CLASSIFICATION	7.707566353111588E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999229243365	WITHOUT_CLASSIFICATION	7.707566353111588E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999229243365	WITHOUT_CLASSIFICATION	7.707566353111588E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999229243365	WITHOUT_CLASSIFICATION	7.707566353111588E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999229243365	WITHOUT_CLASSIFICATION	7.707566353111588E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999229243365	WITHOUT_CLASSIFICATION	7.707566353111588E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999229243365	WITHOUT_CLASSIFICATION	7.707566353111588E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999229243365	WITHOUT_CLASSIFICATION	7.707566353111588E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999229243365	WITHOUT_CLASSIFICATION	7.707566353111588E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999229243365	WITHOUT_CLASSIFICATION	7.707566353111588E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999229243365	WITHOUT_CLASSIFICATION	7.707566353111588E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999229243365	WITHOUT_CLASSIFICATION	7.707566353111588E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999229243365	WITHOUT_CLASSIFICATION	7.707566353111588E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999229243365	WITHOUT_CLASSIFICATION	7.707566353111588E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999229243365	WITHOUT_CLASSIFICATION	7.707566353111588E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999229243365	WITHOUT_CLASSIFICATION	7.707566353111588E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999229243365	WITHOUT_CLASSIFICATION	7.707566353111588E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999229243365	WITHOUT_CLASSIFICATION	7.707566353111588E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999229243365	WITHOUT_CLASSIFICATION	7.707566353111588E-8	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999985104772199	WITHOUT_CLASSIFICATION	1.4895227801929595E-6	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999985104772199	WITHOUT_CLASSIFICATION	1.4895227801929595E-6	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999985104772199	WITHOUT_CLASSIFICATION	1.4895227801929595E-6	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999985104772199	WITHOUT_CLASSIFICATION	1.4895227801929595E-6	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999985104772199	WITHOUT_CLASSIFICATION	1.4895227801929595E-6	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999985104772199	WITHOUT_CLASSIFICATION	1.4895227801929595E-6	DEFECT
/* -------------------- */	WITHOUT_CLASSIFICATION	0.9999924079951934	WITHOUT_CLASSIFICATION	7.592004806663147E-6	DEFECT
// -Y	WITHOUT_CLASSIFICATION	0.9999981159025798	WITHOUT_CLASSIFICATION	1.8840974202854667E-6	DEFECT
// -Y	WITHOUT_CLASSIFICATION	0.9999981159025798	WITHOUT_CLASSIFICATION	1.8840974202854667E-6	DEFECT
// -Y	WITHOUT_CLASSIFICATION	0.9999981159025798	WITHOUT_CLASSIFICATION	1.8840974202854667E-6	DEFECT
// VSS items	WITHOUT_CLASSIFICATION	0.999999840981809	WITHOUT_CLASSIFICATION	1.5901819089429593E-7	DEFECT
// VSS items	WITHOUT_CLASSIFICATION	0.999999840981809	WITHOUT_CLASSIFICATION	1.5901819089429593E-7	DEFECT
// skip version info and general purpose byte	WITHOUT_CLASSIFICATION	0.9999999225709156	WITHOUT_CLASSIFICATION	7.742908432521083E-8	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999985104772199	WITHOUT_CLASSIFICATION	1.4895227801929595E-6	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999985104772199	WITHOUT_CLASSIFICATION	1.4895227801929595E-6	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999985104772199	WITHOUT_CLASSIFICATION	1.4895227801929595E-6	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999985104772199	WITHOUT_CLASSIFICATION	1.4895227801929595E-6	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999985104772199	WITHOUT_CLASSIFICATION	1.4895227801929595E-6	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999985104772199	WITHOUT_CLASSIFICATION	1.4895227801929595E-6	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999985104772199	WITHOUT_CLASSIFICATION	1.4895227801929595E-6	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999985104772199	WITHOUT_CLASSIFICATION	1.4895227801929595E-6	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999985104772199	WITHOUT_CLASSIFICATION	1.4895227801929595E-6	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999985104772199	WITHOUT_CLASSIFICATION	1.4895227801929595E-6	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999985104772199	WITHOUT_CLASSIFICATION	1.4895227801929595E-6	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999985104772199	WITHOUT_CLASSIFICATION	1.4895227801929595E-6	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999985104772199	WITHOUT_CLASSIFICATION	1.4895227801929595E-6	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999985104772199	WITHOUT_CLASSIFICATION	1.4895227801929595E-6	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999985104772199	WITHOUT_CLASSIFICATION	1.4895227801929595E-6	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999985104772199	WITHOUT_CLASSIFICATION	1.4895227801929595E-6	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999985104772199	WITHOUT_CLASSIFICATION	1.4895227801929595E-6	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999985104772199	WITHOUT_CLASSIFICATION	1.4895227801929595E-6	DEFECT
// first off, make sure that we've got a command and a vssdir and a label ...	WITHOUT_CLASSIFICATION	0.9999931372243166	WITHOUT_CLASSIFICATION	6.862775683353574E-6	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999985104772199	WITHOUT_CLASSIFICATION	1.4895227801929595E-6	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999985104772199	WITHOUT_CLASSIFICATION	1.4895227801929595E-6	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999985104772199	WITHOUT_CLASSIFICATION	1.4895227801929595E-6	DEFECT
// we get the root classes and build up a set of // classes upon which they depend	WITHOUT_CLASSIFICATION	0.9999995538275586	WITHOUT_CLASSIFICATION	4.461724414401939E-7	DEFECT
// read the constant pool in and resolve it	WITHOUT_CLASSIFICATION	0.9999949613331371	WITHOUT_CLASSIFICATION	5.038666862932995E-6	DEFECT
/*         * Use the Runtime object to execute an external command.  Use the         * RedirectOutput inner class to direct the standard and error output         * from the command to the JRE's standard output         */	WITHOUT_CLASSIFICATION	0.9999912495508129	WITHOUT_CLASSIFICATION	8.750449187193528E-6	DEFECT
/*         * Two Maps are used to track local DTDs that will be used in case the         * remote copies of these DTDs cannot be accessed.  The key for the Map         * is the DTDs public ID and the value is the local location for the DTD         */	WITHOUT_CLASSIFICATION	0.9999999627942469	WITHOUT_CLASSIFICATION	3.720575308077118E-8	DEFECT
// depFile exists and is newer than the class file // need to get dependency list from the map.	WITHOUT_CLASSIFICATION	0.9999577582620248	WITHOUT_CLASSIFICATION	4.224173797530217E-5	DEFECT
// without closure we may delete an inner class but not the // top level class which would not trigger a recompile.	WITHOUT_CLASSIFICATION	0.9999999306553873	WITHOUT_CLASSIFICATION	6.93446126517706E-8	DEFECT
//always trigger file mode if commands are big enough	WITHOUT_CLASSIFICATION	0.9999007648940827	WITHOUT_CLASSIFICATION	9.92351059172551E-5	DEFECT
//fill in args	WITHOUT_CLASSIFICATION	0.9999964688768942	WITHOUT_CLASSIFICATION	3.5311231058524428E-6	DEFECT
//fill in args	WITHOUT_CLASSIFICATION	0.9999964688768942	WITHOUT_CLASSIFICATION	3.5311231058524428E-6	DEFECT
//iterate through the ref list & generate an entry for each //or just rely on the fact that the toString operator does this, but //noting that the separator is ';' on windows, ':' on unix	WITHOUT_CLASSIFICATION	0.9996645182764673	WITHOUT_CLASSIFICATION	3.354817235326946E-4	DEFECT
//now run the command of exe + settings + files	WITHOUT_CLASSIFICATION	0.9998451137014023	WITHOUT_CLASSIFICATION	1.548862985977677E-4	DEFECT
/*     * Directory where "source" EJB files are stored and where stubs and     * skeletons will also be written.     */	WITHOUT_CLASSIFICATION	0.9999969709212473	WITHOUT_CLASSIFICATION	3.029078752651127E-6	DEFECT
/*     * This Hashtable maintains a list of EJB class files processed by the ejbc     * utility (both "source" class files as well as stubs and skeletons). The     * key for the Hashtable is a String representing the path to the class file     * (relative to the destination directory).  The value for the Hashtable is     * a File object which reference the actual class file.     */	WITHOUT_CLASSIFICATION	0.9999999999895997	WITHOUT_CLASSIFICATION	1.04003857561982E-11	DEFECT
/* Execute the ejbc utility -- stubs/skeletons are rebuilt, if needed */	WITHOUT_CLASSIFICATION	0.9999999693993871	WITHOUT_CLASSIFICATION	3.060061300208895E-8	DEFECT
// EJB's display name // EJB's home interface name // EJB's remote interface name // EJB's implementation class // EJB's primary key class // or "stateful" or "stateless" // Does this EJB support CMP? // Does this EJB support IIOP? // Does this EJB require failover? // CMP descriptor list	WITHOUT_CLASSIFICATION	0.990152527001405	WITHOUT_CLASSIFICATION	0.009847472998594996	DEFECT
/* Check the timestamp on the EJB implementation class.             *             * Note that if ONLY the implementation class has changed, it's not             * necessary to rebuild the EJB stubs and skeletons.  For this             * reason, we ensure the file exists (using lastModified above), but             * we DON'T compare it's timestamp with the timestamps of the home             * and remote interfaces (because it's irrelevant in determining if             * ejbc must be run)             */	WITHOUT_CLASSIFICATION	0.999999979757931	WITHOUT_CLASSIFICATION	2.0242068954820122E-8	DEFECT
//classpath //add at the end of the classpath //the system classpath in order to find the tools.jar file	WITHOUT_CLASSIFICATION	0.9999974260141132	WITHOUT_CLASSIFICATION	2.5739858867066843E-6	DEFECT
// ejb jar file	WITHOUT_CLASSIFICATION	0.9999999724182745	WITHOUT_CLASSIFICATION	2.75817254946307E-8	DEFECT
//client jar file	WITHOUT_CLASSIFICATION	0.9999999468356421	WITHOUT_CLASSIFICATION	5.316435799173361E-8	DEFECT
// Have to catch this because of the semantics of calling main()	WITHOUT_CLASSIFICATION	0.9999971199464109	WITHOUT_CLASSIFICATION	2.880053589082727E-6	DEFECT
/* ------------- */	WITHOUT_CLASSIFICATION	0.9999929835676435	WITHOUT_CLASSIFICATION	7.016432356404526E-6	DEFECT
/* ------------- */	WITHOUT_CLASSIFICATION	0.9999929835676435	WITHOUT_CLASSIFICATION	7.016432356404526E-6	DEFECT
// descriptorName = <path><basename><basenameterminator><remainder> // examples = /org/objectweb/fooAppli/foo/Foo-ejb-jar.xml // examples = /org/objectweb/fooAppli/foo/Foo.xml (JOnAS convention)	WITHOUT_CLASSIFICATION	0.9999996363272023	WITHOUT_CLASSIFICATION	3.636727975956736E-7	DEFECT
// class name (search in the classpath provided for the ejbjar element)	WITHOUT_CLASSIFICATION	0.9999994748428688	WITHOUT_CLASSIFICATION	5.25157131156981E-7	DEFECT
// additionalargs	WITHOUT_CLASSIFICATION	0.9999993100625693	WITHOUT_CLASSIFICATION	6.899374307892436E-7	DEFECT
// get all the files in the descriptor directory	WITHOUT_CLASSIFICATION	0.9999986803182533	WITHOUT_CLASSIFICATION	1.3196817467202725E-6	DEFECT
// If an explicit securityPolicy file was specified, it maybe an // absolute path.  Use the project to resolve it.	WITHOUT_CLASSIFICATION	0.999999789985808	WITHOUT_CLASSIFICATION	2.1001419198206053E-7	DEFECT
// Since the descriptor read properly, everything should be o.k.	WITHOUT_CLASSIFICATION	0.9999995118181094	WITHOUT_CLASSIFICATION	4.881818906421053E-7	DEFECT
// Lastly create File object for the Jar files. If we are using // a flat destination dir, then we need to redefine baseName!	WITHOUT_CLASSIFICATION	0.9999999982871125	WITHOUT_CLASSIFICATION	1.712887438292562E-9	DEFECT
/*         * For the GenericDeploymentTool, do nothing.  Vendor specific         * subclasses should throw a BuildException if the configuration is         * invalid for their server.         */	WITHOUT_CLASSIFICATION	0.9999999984475675	WITHOUT_CLASSIFICATION	1.5524325234560034E-9	DEFECT
// Get the filename of vendor specific descriptor	WITHOUT_CLASSIFICATION	0.9999999926702282	WITHOUT_CLASSIFICATION	7.329771796818749E-9	DEFECT
// now that we have the weblogic descriptor, we parse the file // to find other descriptors needed to deploy the bean. // this could be the weblogic-cmp-rdbms.xml or any other O/R // mapping tool descriptors.	WITHOUT_CLASSIFICATION	0.9999996585507945	WITHOUT_CLASSIFICATION	3.4144920551302557E-7	DEFECT
// Update with changed Bean class	WITHOUT_CLASSIFICATION	0.9999922754296033	WITHOUT_CLASSIFICATION	7.724570396641384E-6	DEFECT
// need to close files and perhaps rename output	WITHOUT_CLASSIFICATION	0.9999997865376598	WITHOUT_CLASSIFICATION	2.134623402706162E-7	DEFECT
// empty	WITHOUT_CLASSIFICATION	0.9999985687054564	WITHOUT_CLASSIFICATION	1.4312945434658969E-6	DEFECT
// empty	WITHOUT_CLASSIFICATION	0.9999985687054564	WITHOUT_CLASSIFICATION	1.4312945434658969E-6	DEFECT
// are any of the above out of date. // we find the implementation classes and see if they are older than any // of the above or the .ser file itself.	WITHOUT_CLASSIFICATION	0.9999998813551256	WITHOUT_CLASSIFICATION	1.1864487434500657E-7	DEFECT
/*     * Filenames of the standard EJB descriptor (which is passed to this class     * from the parent "ejbjar" task) and the iAS-specific EJB descriptor     * (whose name is determined by this class).  Both filenames are relative     * to the directory specified by the "srcdir" attribute in the ejbjar task.     */	WITHOUT_CLASSIFICATION	0.9999999847090603	WITHOUT_CLASSIFICATION	1.5290939779022675E-8	DEFECT
//remove the .class	WITHOUT_CLASSIFICATION	0.9999922563642255	WITHOUT_CLASSIFICATION	7.743635774510739E-6	DEFECT
// create the output .jar, if required	WITHOUT_CLASSIFICATION	0.9999999645776718	WITHOUT_CLASSIFICATION	3.542232807054674E-8	DEFECT
// change this to get the objects from the other reference	WITHOUT_CLASSIFICATION	0.9999999743360156	WITHOUT_CLASSIFICATION	2.566398441230273E-8	DEFECT
// Available specification version must be >= required	WITHOUT_CLASSIFICATION	0.9999999694919248	WITHOUT_CLASSIFICATION	3.0508075090643674E-8	DEFECT
// Implementation version must be >= required	WITHOUT_CLASSIFICATION	0.9999991849179084	WITHOUT_CLASSIFICATION	8.150820915257032E-7	DEFECT
//WARNING: We trim the values of all the attributes because //Some extension declarations are badly defined (ie have spaces //after version or vendorID)	WITHOUT_CLASSIFICATION	0.99975184424437	WITHOUT_CLASSIFICATION	2.481557556299819E-4	DEFECT
/*     * Validates URL     */	WITHOUT_CLASSIFICATION	0.9999994623624834	WITHOUT_CLASSIFICATION	5.376375165912041E-7	DEFECT
// the new value, this needs to be here // because it is required to calculate the next position to // search from at the end of the loop	WITHOUT_CLASSIFICATION	0.9998965912138839	WITHOUT_CLASSIFICATION	1.0340878611609737E-4	DEFECT
// iterator through all the files and process them.	WITHOUT_CLASSIFICATION	0.9999999935375886	WITHOUT_CLASSIFICATION	6.46241136150839E-9	DEFECT
// keys to optional attributes	WITHOUT_CLASSIFICATION	0.9999999216766856	WITHOUT_CLASSIFICATION	7.832331432960996E-8	DEFECT
// use the directory containing the target as the output directory	WITHOUT_CLASSIFICATION	0.999999999936424	WITHOUT_CLASSIFICATION	6.357600828971171E-11	DEFECT
// null watchdog means no timeout, you'd better not check with null	WITHOUT_CLASSIFICATION	0.9999910621071033	WITHOUT_CLASSIFICATION	8.937892896650105E-6	DEFECT
/*         * pre Ant 1.6 this method used to call getClass().getResource         * while Ant 1.6 will call ClassLoader.getResource().         *         * The difference is that Class.getResource expects a leading         * slash for "absolute" resources and will strip it before         * delegating to ClassLoader.getResource - so we now have to         * emulate Class's behavior.         */	WITHOUT_CLASSIFICATION	0.9999999686811848	WITHOUT_CLASSIFICATION	3.1318815182930994E-8	DEFECT
// this comment extract from JUnit Task may also apply here // "in VM is not very nice since it could probably hang the // whole build. IMHO this method should be avoided and it would be best // to remove it in future versions. TBD. (SBa)"	WITHOUT_CLASSIFICATION	0.7161986078507688	WITHOUT_CLASSIFICATION	0.2838013921492313	DEFECT
// not necessary as JDepend would fail, but why loose // some time?	WITHOUT_CLASSIFICATION	0.999548373667085	WITHOUT_CLASSIFICATION	4.5162633291493786E-4	DEFECT
// not necessary as JDepend would fail, but why loose // some time?	WITHOUT_CLASSIFICATION	0.999548373667085	WITHOUT_CLASSIFICATION	4.5162633291493786E-4	DEFECT
// not necessary as JDepend would fail, but why loose // some time?	WITHOUT_CLASSIFICATION	0.999548373667085	WITHOUT_CLASSIFICATION	4.5162633291493786E-4	DEFECT
//do nothing	WITHOUT_CLASSIFICATION	0.9999981960230487	WITHOUT_CLASSIFICATION	1.8039769512075118E-6	DEFECT
//do nothing	WITHOUT_CLASSIFICATION	0.9999981960230487	WITHOUT_CLASSIFICATION	1.8039769512075118E-6	DEFECT
//If we get here, it could be because we are trying to put a //directory entry that already exists. //For example, we're trying to write "com", but a previous //entry from another mergefile was called "com". //In that case, just ignore the error and go on to the //next entry.	WITHOUT_CLASSIFICATION	0.9999999983919555	WITHOUT_CLASSIFICATION	1.6080444089734949E-9	DEFECT
/*          First, some notes.          On MRJ 2.2.2, getting the size, compressed size, and CRC32 from the          ZipInputStream does not work for compressed (deflated) files.  Those calls return -1.          For uncompressed (stored) files, those calls do work.          However, using ZipFile.getEntries() works for both compressed and          uncompressed files.          Now, from some simple testing I did, it seems that the value of CRC-32 is          independent of the compression setting. So, it should be easy to pass this          information on to the output entry.        */	WITHOUT_CLASSIFICATION	0.8417768794595261	WITHOUT_CLASSIFICATION	0.1582231205404739	DEFECT
// Quick return - no output do nothing.	WITHOUT_CLASSIFICATION	0.9999999535105077	WITHOUT_CLASSIFICATION	4.648949219114957E-8	DEFECT
// Self-describing as of JUnit 4 (#38811). But trim "(ClassName)".	WITHOUT_CLASSIFICATION	0.9999970379972123	WITHOUT_CLASSIFICATION	2.962002787729142E-6	DEFECT
//the trick to integrating test output to the formatter, is to //create a special test class that asserts an error //and tell the formatter that it raised.	WITHOUT_CLASSIFICATION	0.9999999954166637	WITHOUT_CLASSIFICATION	4.58333629283742E-9	DEFECT
// ignored.	WITHOUT_CLASSIFICATION	0.9999999446797952	WITHOUT_CLASSIFICATION	5.5320204778429235E-8	DEFECT
/*         * pre Ant 1.6 this method used to call getClass().getResource         * while Ant 1.6 will call ClassLoader.getResource().         *         * The difference is that Class.getResource expects a leading         * slash for "absolute" resources and will strip it before         * delegating to ClassLoader.getResource - so we now have to         * emulate Class's behavior.         */	WITHOUT_CLASSIFICATION	0.9999999686811848	WITHOUT_CLASSIFICATION	3.1318815182930994E-8	DEFECT
// okay we have a copy of the child, now the child becomes the parent // and we are iterating recursively over its children.	WITHOUT_CLASSIFICATION	0.9999999910149626	WITHOUT_CLASSIFICATION	8.985037406265244E-9	DEFECT
// See wrapListener for reason:	WITHOUT_CLASSIFICATION	0.9999995232018397	WITHOUT_CLASSIFICATION	4.767981603561543E-7	DEFECT
// if there is a suite method available, then try // to extract the suite from it. If there is an error // here it will be caught below and reported.	WITHOUT_CLASSIFICATION	0.9997221609869765	WITHOUT_CLASSIFICATION	2.778390130234233E-4	DEFECT
// JUnit 4 does not distinguish between errors and failures // even in the JUnit 3 adapter. // So we need to help it a bit to retain compatibility for JUnit 3 tests.	WITHOUT_CLASSIFICATION	0.9999988820103977	WITHOUT_CLASSIFICATION	1.117989602279391E-6	DEFECT
// sorted by newest Kaffe version first	WITHOUT_CLASSIFICATION	0.9999994925611296	WITHOUT_CLASSIFICATION	5.07438870268684E-7	DEFECT
//getProject().log("listing files in directory " + directory, Project.MSG_DEBUG);	WITHOUT_CLASSIFICATION	0.9999995791104238	WITHOUT_CLASSIFICATION	4.208895761380109E-7	DEFECT
// to remove directories, start by the end of the list // the trunk does not let itself be removed before the leaves	WITHOUT_CLASSIFICATION	0.9999995113351486	WITHOUT_CLASSIFICATION	4.88664851342231E-7	DEFECT
// ignore it	WITHOUT_CLASSIFICATION	0.9999998760008227	WITHOUT_CLASSIFICATION	1.2399917731874427E-7	DEFECT
// NumberFormatException or ArrayOutOfBondsException could happen here	WITHOUT_CLASSIFICATION	0.999990080689791	WITHOUT_CLASSIFICATION	9.919310209009992E-6	DEFECT
//Throw exception on errors (except up-to-date) // //When a server is down, the code expects : //Perforce client error: //Connect to server failed; check $P4PORT. //TCP connect to localhost:1666 failed. //connect: localhost:1666: Connection refused //Some forms producing commands (p4 -s change -o) do tag the output //others don't..... //Others mark errors as info, for example edit a file //which is already open for edit..... //Just look for error: - catches most things....	WITHOUT_CLASSIFICATION	0.9999985829508781	WITHOUT_CLASSIFICATION	1.417049121943922E-6	DEFECT
// Because of the way I create the full target path, there // must be NO slash at the end of targetFolder and folderName // However, if the slash or backslash is the only character, leave it alone	WITHOUT_CLASSIFICATION	0.9999999374669009	WITHOUT_CLASSIFICATION	6.253309916261645E-8	DEFECT
// Connect to the StarTeam server, and log on.	WITHOUT_CLASSIFICATION	0.9999998933836167	WITHOUT_CLASSIFICATION	1.0661638325344894E-7	DEFECT
// Simplest constructor, uses default encryption algorithm and compression level.	WITHOUT_CLASSIFICATION	0.9999999902185709	WITHOUT_CLASSIFICATION	9.781429114814523E-9	DEFECT
// Create a variable dir that contains the name of // the StarTeam folder that is the root folder in this view. // Get the default path to the current view.	WITHOUT_CLASSIFICATION	0.9999999982897043	WITHOUT_CLASSIFICATION	1.7102956831556338E-9	DEFECT
// We want to display the folder the same way you would // enter it on the command line ... so we remove the // View name (which is also the name of the root folder, // and therefore shows up at the start of the path).	WITHOUT_CLASSIFICATION	0.9999897510857647	WITHOUT_CLASSIFICATION	1.024891423527869E-5	DEFECT
// If we displayed the project, view, item type, or folder, // then show the list of relevant item properties.	WITHOUT_CLASSIFICATION	0.9999999957432348	WITHOUT_CLASSIFICATION	4.256765154672646E-9	DEFECT
// If we find a "file" attribute then act on a file otherwise act on a project	WITHOUT_CLASSIFICATION	0.9999999096829413	WITHOUT_CLASSIFICATION	9.031705869738637E-8	DEFECT
// Special setters for the sub-classes	WITHOUT_CLASSIFICATION	0.9999999702391119	WITHOUT_CLASSIFICATION	2.9760888028477865E-8	DEFECT
// Special setters for the sub-classes	WITHOUT_CLASSIFICATION	0.9999999702391119	WITHOUT_CLASSIFICATION	2.9760888028477865E-8	DEFECT
// Login info is required	WITHOUT_CLASSIFICATION	0.9999775602779156	WITHOUT_CLASSIFICATION	2.243972208436418E-5	DEFECT
// Path to the SourceOffSite home directory /home/user/.sos	WITHOUT_CLASSIFICATION	0.999999943390226	WITHOUT_CLASSIFICATION	5.660977398422667E-8	DEFECT
// Check if source is a directory	WITHOUT_CLASSIFICATION	0.9999997207079322	WITHOUT_CLASSIFICATION	2.7929206771471363E-7	DEFECT
/*             *  There is a bug in JavaSound 0.90 (jdk1.3beta).             *  It prevents correct termination of the VM.             *  So we have to exit ourselves.             */	WITHOUT_CLASSIFICATION	0.8587819439389685	WITHOUT_CLASSIFICATION	0.14121805606103155	DEFECT
// Catch everything - some of the above return nulls, // throw exceptions or generally misbehave // in the event of a problem etc	WITHOUT_CLASSIFICATION	0.9992479314403212	WITHOUT_CLASSIFICATION	7.520685596788904E-4	DEFECT
// only track progress for files larger than 100kb in verbose mode	WITHOUT_CLASSIFICATION	0.9999646628993303	WITHOUT_CLASSIFICATION	3.533710066976959E-5	DEFECT
// only track progress for files larger than 100kb in verbose mode	WITHOUT_CLASSIFICATION	0.9999646628993303	WITHOUT_CLASSIFICATION	3.533710066976959E-5	DEFECT
// since filesize keeps on decreasing we have to store the // initial filesize	WITHOUT_CLASSIFICATION	0.9999999971451572	WITHOUT_CLASSIFICATION	2.8548427396668694E-9	DEFECT
// note, it's important to scan the items BEFORE we make the // UnmatchedFileMap because that creates a bunch of NEW // folders and files (unattached to repository) and we // don't want to include those in our traversal.	WITHOUT_CLASSIFICATION	0.9999999287635579	WITHOUT_CLASSIFICATION	7.123644204443963E-8	DEFECT
// If the file doesn't pass the include/exclude tests, skip it.	WITHOUT_CLASSIFICATION	0.9999998590967647	WITHOUT_CLASSIFICATION	1.4090323527027604E-7	DEFECT
// If the file doesn't pass the include/exclude tests, skip it.	WITHOUT_CLASSIFICATION	0.9999998590967647	WITHOUT_CLASSIFICATION	1.4090323527027604E-7	DEFECT
// We try to update the status once to give StarTeam // another chance.	WITHOUT_CLASSIFICATION	0.9999999978922076	WITHOUT_CLASSIFICATION	2.1077924181591987E-9	DEFECT
// note, it's important to scan the items BEFORE we make the // Unmatched file map because that creates a bunch of NEW // folders and files (unattached to repository) and we // don't want to include those in our traversal.	WITHOUT_CLASSIFICATION	0.9999998333909713	WITHOUT_CLASSIFICATION	1.6660902869855387E-7	DEFECT
// once we find a folder that isn't in the repository, // anything below it can be deleted.	WITHOUT_CLASSIFICATION	0.9999993339925162	WITHOUT_CLASSIFICATION	6.660074838217456E-7	DEFECT
/////////////////////////////////////////////////////////////// // default values for attributes. ///////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999998518151396	WITHOUT_CLASSIFICATION	1.4818486044286582E-7	DEFECT
// default behavior is to fail on an error // default behavior is to not overwrite // default behavior is make a single link	WITHOUT_CLASSIFICATION	0.9999980766986606	WITHOUT_CLASSIFICATION	1.9233013394752708E-6	DEFECT
// build the command line from what we got the format is // ss Add VSS items [-B] [-C] [-D-] [-H] [-I-] [-K] [-N] [-O] [-R] [-W] [-Y] [-?] // as specified in the SS.EXE help	WITHOUT_CLASSIFICATION	0.9999999286893582	WITHOUT_CLASSIFICATION	7.131064185128265E-8	DEFECT
// build the command line from what we got the format is // ss Checkout VSS items [-G] [-C] [-H] [-I-] [-N] [-O] [-R] [-V] [-Y] [-?] // as specified in the SS.EXE help	WITHOUT_CLASSIFICATION	0.9999999625565811	WITHOUT_CLASSIFICATION	3.7443418895603485E-8	DEFECT
// Not a .class file or the one we'd generate	WITHOUT_CLASSIFICATION	0.9999999471178586	WITHOUT_CLASSIFICATION	5.288214147138209E-8	DEFECT
// We have the loader which is being used to load the // CatalogResolver. Can it see the ApacheResolver? The // base resolver will only be able to create the ApacheResolver // if it can see it - doesn't use the context loader.	WITHOUT_CLASSIFICATION	0.9999999553960652	WITHOUT_CLASSIFICATION	4.4603934836935235E-8	DEFECT
// // Use the passed in base in preference to the base // from matchingEntry, which is either null or the // directory in which the external catalog file from // which it was obtained is located.  We make a copy // so matchingEntry's original base is untouched. // // This is the standard behavior as per my reading of // the JAXP and XML Catalog specs.  CKS 11/7/2002 //	WITHOUT_CLASSIFICATION	0.9999999994890709	WITHOUT_CLASSIFICATION	5.109291259871125E-10	DEFECT
// // Get Method instances for each of the methods we need to // call on the resolverImpl using reflection.  We can't // call them directly, because they require on the // xml-commons resolver library which may not be available // in the classpath. //	WITHOUT_CLASSIFICATION	0.9999746673872772	WITHOUT_CLASSIFICATION	2.533261272285692E-5	DEFECT
// // We didn't match a ResourceLocation, but since we // only support PUBLIC and URI entry types internally, // it is still possible that there is another entry in // an external catalog that will match.  We call // Apache resolver's resolveEntity method to cover // this possibility. //	WITHOUT_CLASSIFICATION	0.9814255881042594	WITHOUT_CLASSIFICATION	0.01857441189574061	DEFECT
// record data about the last scanned resource	WITHOUT_CLASSIFICATION	0.9999998504902722	WITHOUT_CLASSIFICATION	1.4950972794634235E-7	DEFECT
// path containing one or more elements	WITHOUT_CLASSIFICATION	0.9999999885055892	WITHOUT_CLASSIFICATION	1.1494410674651959E-8	DEFECT
// just append beginToken and search further	WITHOUT_CLASSIFICATION	0.9999999016016413	WITHOUT_CLASSIFICATION	9.839835866155221E-8	DEFECT
//create the command to run Java, including user specified options	WITHOUT_CLASSIFICATION	0.9999999766174638	WITHOUT_CLASSIFICATION	2.338253625020257E-8	DEFECT
// JDK usage command line says that -jar must be the first option, as there is // a bug in JDK < 1.4 that forces the jvm type to be specified as the first // option, it is appended here as specified in the docs even though there is // in fact no order.	WITHOUT_CLASSIFICATION	0.9999999403081571	WITHOUT_CLASSIFICATION	5.969184291348644E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999229243365	WITHOUT_CLASSIFICATION	7.707566353111588E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999229243365	WITHOUT_CLASSIFICATION	7.707566353111588E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999229243365	WITHOUT_CLASSIFICATION	7.707566353111588E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999229243365	WITHOUT_CLASSIFICATION	7.707566353111588E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999229243365	WITHOUT_CLASSIFICATION	7.707566353111588E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999229243365	WITHOUT_CLASSIFICATION	7.707566353111588E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999229243365	WITHOUT_CLASSIFICATION	7.707566353111588E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999229243365	WITHOUT_CLASSIFICATION	7.707566353111588E-8	DEFECT
/* now check each Resource in case the child only           lets through files from any children IT may have: */	WITHOUT_CLASSIFICATION	0.9998524448611762	WITHOUT_CLASSIFICATION	1.4755513882383373E-4	DEFECT
// Quick return: directories cannot be signed	WITHOUT_CLASSIFICATION	0.9997953036449565	WITHOUT_CLASSIFICATION	2.0469635504350938E-4	DEFECT
/**     * When using this as a custom selector, this method will be called.     * It translates each parameter into the appropriate setXXX() call.     *     * @param parameters the complete set of parameters for this selector     */	WITHOUT_CLASSIFICATION	0.9999984750643407	WITHOUT_CLASSIFICATION	1.5249356593130658E-6	DEFECT
/**     * When using this as a custom selector, this method will be called.     * It translates each parameter into the appropriate setXXX() call.     *     * @param parameters the complete set of parameters for this selector     */	WITHOUT_CLASSIFICATION	0.9999984750643407	WITHOUT_CLASSIFICATION	1.5249356593130658E-6	DEFECT
/**     * When using this as a custom selector, this method will be called.     * It translates each parameter into the appropriate setXXX() call.     *     * @param parameters the complete set of parameters for this selector     */	WITHOUT_CLASSIFICATION	0.9999984750643407	WITHOUT_CLASSIFICATION	1.5249356593130658E-6	DEFECT
/**     * When using this as a custom selector, this method will be called.     * It translates each parameter into the appropriate setXXX() call.     *     * @param parameters the complete set of parameters for this selector     */	WITHOUT_CLASSIFICATION	0.9999984750643407	WITHOUT_CLASSIFICATION	1.5249356593130658E-6	DEFECT
/**     * When using this as a custom selector, this method will be called.     * It translates each parameter into the appropriate setXXX() call.     *     * @param parameters the complete set of parameters for this selector     */	WITHOUT_CLASSIFICATION	0.9999984750643407	WITHOUT_CLASSIFICATION	1.5249356593130658E-6	DEFECT
/**     * When using this as a custom selector, this method will be called.     * It translates each parameter into the appropriate setXXX() call.     *     * @param parameters the complete set of parameters for this selector.     */	WITHOUT_CLASSIFICATION	0.9999991783824977	WITHOUT_CLASSIFICATION	8.216175021885641E-7	DEFECT
// // -----  Set default values  ----- //	WITHOUT_CLASSIFICATION	0.9999999652978939	WITHOUT_CLASSIFICATION	3.470210607064501E-8	DEFECT
// nothing specified - use default	WITHOUT_CLASSIFICATION	0.9999999992773925	WITHOUT_CLASSIFICATION	7.226074935437584E-10	DEFECT
// How to handle non-file-Resources? I copy temporarily the // resource to a file and use the file-implementation.	WITHOUT_CLASSIFICATION	0.9999999974672938	WITHOUT_CLASSIFICATION	2.532706045618589E-9	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.999998710485609	WITHOUT_CLASSIFICATION	1.2895143909840952E-6	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.999998710485609	WITHOUT_CLASSIFICATION	1.2895143909840952E-6	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.999998710485609	WITHOUT_CLASSIFICATION	1.2895143909840952E-6	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.999998710485609	WITHOUT_CLASSIFICATION	1.2895143909840952E-6	DEFECT
//find the out-of-date targets:	WITHOUT_CLASSIFICATION	0.9999999870532486	WITHOUT_CLASSIFICATION	1.2946751362191505E-8	DEFECT
// write namespace declarations	WITHOUT_CLASSIFICATION	0.9999999905298927	WITHOUT_CLASSIFICATION	9.47010731590381E-9	DEFECT
// Extrapolating from: // "NetWare may have a "java" in that directory, but 99% of // the time, you don't want to execute it" -- Jeff Tulley // <JTULLEY@novell.com>	WITHOUT_CLASSIFICATION	0.9997751060410768	WITHOUT_CLASSIFICATION	2.248939589232984E-4	DEFECT
// fall through	WITHOUT_CLASSIFICATION	0.9999875671450049	WITHOUT_CLASSIFICATION	1.2432854995069546E-5	DEFECT
// fall through	WITHOUT_CLASSIFICATION	0.9999875671450049	WITHOUT_CLASSIFICATION	1.2432854995069546E-5	DEFECT
// Check for bsf first then javax // This version does not check if the scriptManager // supports the language.	WITHOUT_CLASSIFICATION	0.9999995582368558	WITHOUT_CLASSIFICATION	4.4176314425493053E-7	DEFECT
// NotReached	WITHOUT_CLASSIFICATION	0.999999658309425	WITHOUT_CLASSIFICATION	3.416905749641552E-7	DEFECT
// NotReached	WITHOUT_CLASSIFICATION	0.999999658309425	WITHOUT_CLASSIFICATION	3.416905749641552E-7	DEFECT
//no need to synchronize, as Vector is always synchronized	WITHOUT_CLASSIFICATION	0.9999969058553905	WITHOUT_CLASSIFICATION	3.094144609405801E-6	DEFECT
// Eliminate consecutive slashes after the drive spec:	WITHOUT_CLASSIFICATION	0.9999998346046268	WITHOUT_CLASSIFICATION	1.653953731504694E-7	DEFECT
//if it does not, then the file is not up to date.	WITHOUT_CLASSIFICATION	0.9999876950931583	WITHOUT_CLASSIFICATION	1.2304906841565823E-5	DEFECT
// record destdir for later use in getResource	WITHOUT_CLASSIFICATION	0.9999995033583439	WITHOUT_CLASSIFICATION	4.966416561201242E-7	DEFECT
// Check to see if it's an inner class 'com.company.Class$Inner'	WITHOUT_CLASSIFICATION	0.9999998181445304	WITHOUT_CLASSIFICATION	1.8185546963211675E-7	DEFECT
// treat non-matching groups as empty matches	WITHOUT_CLASSIFICATION	0.9999999298373867	WITHOUT_CLASSIFICATION	7.01626131856135E-8	DEFECT
// treat non-matching groups as empty matches	WITHOUT_CLASSIFICATION	0.9999999298373867	WITHOUT_CLASSIFICATION	7.01626131856135E-8	DEFECT
/*          A 6-byte block header, the value chosen arbitrarily          as 0x314159265359 :-).  A 32 bit value does not really          give a strong enough guarantee that the value will not          appear by chance in the compressed datastream.  Worst-case          probability of this event, for a 900k block, is about          2.0e-3 for 32 bits, 1.0e-5 for 40 bits and 4.0e-8 for 48 bits.          For a compressed file of size 100Gb -- about 100000 blocks --          only a 48-bit marker will do.  NB: normal compression/          decompression do *not* rely on these statistical properties.          They are only important when trying to recover blocks from          damaged files.        */	WITHOUT_CLASSIFICATION	0.9989253050259039	WITHOUT_CLASSIFICATION	0.001074694974096041	DEFECT
// write 8-bit	WITHOUT_CLASSIFICATION	0.9999996935197215	WITHOUT_CLASSIFICATION	3.064802785230163E-7	DEFECT
// bsBuffShadow |= 0 << (32 - bsLiveShadow - 1);	WITHOUT_CLASSIFICATION	0.9999997113463864	WITHOUT_CLASSIFICATION	2.886536134943699E-7	DEFECT
// // inlined: bsW(len_selCtr[sfmap_i] & 0xff, //              code_selCtr[sfmap_i]); //	WITHOUT_CLASSIFICATION	0.9999999370525581	WITHOUT_CLASSIFICATION	6.294744192217336E-8	DEFECT
// Following block contains unrolled code which could be shortened by // coding it in additional loops.	WITHOUT_CLASSIFICATION	0.9999748404055042	WITHOUT_CLASSIFICATION	2.515959449575961E-5	DEFECT
/*                  Complete the big bucket [ss] by quicksorting                  any unsorted small buckets [ss, j].  Hopefully                  previous pointer-scanning phases have already                  completed many of the small buckets [ss, j], so                  we don't have to sort them at all.            */	WITHOUT_CLASSIFICATION	0.9999999792318474	WITHOUT_CLASSIFICATION	2.0768152699139297E-8	DEFECT
// Step 2: // Now scan this big bucket so as to synthesise the // sorted order for small buckets [t, ss] for all t != ss.	WITHOUT_CLASSIFICATION	0.9999996580431696	WITHOUT_CLASSIFICATION	3.4195683038251395E-7	DEFECT
//  900021 byte // 3600000 byte // 3600000 byte // ------------ // 8433529 byte // ============	WITHOUT_CLASSIFICATION	0.999994099622359	WITHOUT_CLASSIFICATION	5.900377641083649E-6	DEFECT
// The clean way would be to throw an exception. //throw new IOException("crc error");	WITHOUT_CLASSIFICATION	0.9999614739239077	WITHOUT_CLASSIFICATION	3.852607609221633E-5	DEFECT
// make next blocks readable without error // (repair feature, not yet documented, not tested)	WITHOUT_CLASSIFICATION	0.9999993307072687	WITHOUT_CLASSIFICATION	6.692927314637353E-7	DEFECT
/*          Setting up the unzftab entries here is not strictly          necessary, but it does save having to do it later          in a separate pass, and so saves a block's worth of          cache misses.        */	WITHOUT_CLASSIFICATION	0.9996860532949134	WITHOUT_CLASSIFICATION	3.139467050865125E-4	DEFECT
// tt.length should always be >= length, but theoretically // it can happen, if the compressor mixed small and large // blocks.  Normally only the last block will be smaller // than others.	WITHOUT_CLASSIFICATION	0.992692354473338	WITHOUT_CLASSIFICATION	0.007307645526661905	DEFECT
// deprecated, but email is byte-oriented	WITHOUT_CLASSIFICATION	0.9999872783518129	WITHOUT_CLASSIFICATION	1.272164818701071E-5	DEFECT
// // NOTE // We have fit EOF, and the block is not full! // // This is a broken archive. It does not follow the standard // blocking algorithm. However, because we are generous, and // it requires little effort, we will simply ignore the error // and continue as if the entire block were read. This does // not appear to break anything upstream. We used to return // false in this case. // // Thanks to 'Yohann.Roussel@alcatel.fr' for this fix. //	WITHOUT_CLASSIFICATION	0.9991399086940116	WITHOUT_CLASSIFICATION	8.600913059885156E-4	DEFECT
// version needed to extract // general purpose bit flag	WITHOUT_CLASSIFICATION	0.9999994925645481	WITHOUT_CLASSIFICATION	5.074354519770689E-7	DEFECT
// requires version 2 as we are going to store length info // in the data descriptor	WITHOUT_CLASSIFICATION	0.9999881674808678	WITHOUT_CLASSIFICATION	1.1832519132108574E-5	DEFECT
// file comment	WITHOUT_CLASSIFICATION	0.9999961760771683	WITHOUT_CLASSIFICATION	3.823922831721604E-6	DEFECT
// swallow, throw the original exception instead	WITHOUT_CLASSIFICATION	0.9999805401506588	WITHOUT_CLASSIFICATION	1.945984934114775E-5	DEFECT
/* compressed size                 */	WITHOUT_CLASSIFICATION	0.9999975946380257	WITHOUT_CLASSIFICATION	2.4053619742092428E-6	DEFECT
/* disk number start               */	WITHOUT_CLASSIFICATION	0.9999991801773672	WITHOUT_CLASSIFICATION	8.198226327839891E-7	DEFECT
/* total number of entries in      */	WITHOUT_CLASSIFICATION	0.9999958753844221	WITHOUT_CLASSIFICATION	4.1246155779285865E-6	DEFECT
/* total number of entries in      */	WITHOUT_CLASSIFICATION	0.9999958753844221	WITHOUT_CLASSIFICATION	4.1246155779285865E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999911537495769	WITHOUT_CLASSIFICATION	8.846250423151155E-6	DEFECT
// This is turned off temporarily. There appears to be a bug // in SelectorUtils.matchPattern() where it is recursive on // Windows even if no ** is in pattern. //assertEquals("FFFTFFFFFFFF", results); // Unix // vs //assertEquals("FFFTFFFFTFFF", results); // Windows	DEFECT	0.9757235011679406	WITHOUT_CLASSIFICATION	0.024276498832059498	DEFECT
// check first that it is not already loaded otherwise // consecutive runs seems to end into an OutOfMemoryError // or it fails when there is a native library to load // several times. // this is far from being perfect but should work // in most cases.	DEFECT	0.9999341296666118	WITHOUT_CLASSIFICATION	6.58703333882694E-5	DEFECT
// FIXME formatters are not thread-safe	DEFECT	0.9669352734342456	WITHOUT_CLASSIFICATION	0.033064726565754536	DEFECT
// the generated classes must not be added in the generic JAR! // is that buggy on old JOnAS (2.4) ??	DEFECT	0.9996768889212477	WITHOUT_CLASSIFICATION	3.2311107875226746E-4	DEFECT
// I hate to admit it, but we don't know what happened // here.  Throw the Exception.	DEFECT	0.9999546635320437	WITHOUT_CLASSIFICATION	4.533646795633024E-5	DEFECT
// FIXME: Is "No Namespace is Empty Namespace" really OK?	DEFECT	0.8635415586927886	WITHOUT_CLASSIFICATION	0.13645844130721133	DEFECT
// pattern now holds ** while string is not exhausted // this will generate false positives but we can live with that.	DEFECT	0.9956557465222234	WITHOUT_CLASSIFICATION	0.0043442534777766075	DEFECT
// todo: is this comment still relevant ?? // FIXME: need to use a SAXSource as the source for the transform // so we can plug in our own entity resolver	DEFECT	0.9934588242399308	DEFECT	0.006541175760069236	WITHOUT_CLASSIFICATION
// Just a note: StarTeam has a status for NEW which implies // that there is an item  on your local machine that is not // in the repository.  These are the items that show up as // NOT IN VIEW in the Starteam GUI. // One would think that we would want to perhaps checkin the // NEW items (not in all cases! - Steve Cohen 15 Dec 2001) // Unfortunately, the sdk doesn't really work, and we can't // actually see  anything with a status of NEW. That is why // we can just check out  everything here without worrying // about losing anything.	DEFECT	0.9817068428618545	WITHOUT_CLASSIFICATION	0.018293157138145437	DEFECT
// XXX: (Jon Skeet) The comment "if it hasn't been done already" may // not be strictly true. wrapper.maybeConfigure() won't configure the same // attributes/text more than once, but it may well add the children again, // unless I've missed something.	DEFECT	0.9999907994508414	WITHOUT_CLASSIFICATION	9.200549158669563E-6	DEFECT
// TODO: // A warning line, that shows code, which contains a variable // error will cause some trouble. The parser should definitely // be much better.	DEFECT	0.5906693396594465	WITHOUT_CLASSIFICATION	0.40933066034055343	DEFECT
// todo: is this comment still relevant ?? // FIXME: need to use a SAXSource as the source for the transform // so we can plug in our own entity resolver	DEFECT	0.9934588242399308	DEFECT	0.006541175760069236	WITHOUT_CLASSIFICATION
// FIXME this is actually not very cpu cycles friendly as we are converting from // dos to java while the underlying Sun implementation will convert // from java to dos time for internal storage...	DEFECT	0.9719622516220994	DEFECT	0.028037748377900545	WITHOUT_CLASSIFICATION
